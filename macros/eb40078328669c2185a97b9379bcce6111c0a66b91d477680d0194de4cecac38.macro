Attribute VB_Name = "Bestelldaten"
Attribute VB_Base = "0{218C2B79-E971-11E7-AE36-0003FF31812D}{218C2B68-E971-11E7-AE36-0003FF31812D}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Public BruttoPreis As Currency



Private Sub UserForm_Initialize()

Dim Brutto As Currency, Netto, MwST_W As Currency

    
    'TextBox1.Value = Internet
    TextBox2.Value = E_MAIL
    Rechnungsanschrift.Value = "Herrn/Frau "
    Label11.Caption = "zzgl. " & Format(MwST_S, "Percent") & " MwSt.in |fffd|"
    Anz.Value = 1
    
    Label20.Caption = "Eine Lizenz kostet " & Format(E_preis1, "#,##0.00 |fffd|") & _
                        " , zwei Lizenzen kosten " & Format(E_preis2, "#,##0.00 |fffd|") & _
                        ". Bei mehr als 2 Lizenzen kostet jede Lizenz " & Format(E_preis, "#,##0.00 |fffd|") & _
                        " abz|fffd|glich der u.g. Rabatte. Die Preise enthalten jeweils die dt. MwSt."
    
    Brechnung ' Modul Berechnung ausf|fffd|hren
End Sub

Private Sub Brechnung()
   'On Error GoTo Rechenfehler
   
   If Anz.Value < 1 Then
        MsgBox "Die St|fffd|ckzahl mu|fffd| mindestens 1 sein!"
        GoTo Rechenfehler
    ElseIf Anz.Value = 1 Then
        BruttoPreis = E_preis1
        Zwischenrechnung
    
    ElseIf Anz.Value = 2 Then
        BruttoPreis = E_preis2
        Zwischenrechnung
    ElseIf Anz.Value > 2 And Anz.Value < 25 Then
        BruttoPreis = Anz.Value * E_preis
        Zwischenrechnung
    ElseIf Anz.Value >= 25 And Anz.Value < 50 Then
        BruttoPreis = (25 * E_preis) + ((Anz.Value - 25) * (E_preis * (1 - 0.1)))
        Zwischenrechnung
    ElseIf Anz.Value >= 50 And Anz.Value < 100 Then
        BruttoPreis = (25 * E_preis) + _
                (25 * (E_preis * (1 - 0.1))) + _
                ((Anz.Value - 50) * (E_preis * (1 - 0.15)))
        Zwischenrechnung
    ElseIf Anz.Value >= 100 And Anz.Value < 300 Then
        BruttoPreis = (25 * E_preis) + _
                (25 * (E_preis * (1 - 0.1))) + _
                (50 * (E_preis * (1 - 0.15))) + _
                ((Anz.Value - 100) * (E_preis * (1 - 0.2)))
        Zwischenrechnung
    ElseIf Anz.Value >= 300 And Anz.Value < 700 Then
        BruttoPreis = (25 * E_preis) + _
                (25 * (E_preis * (1 - 0.1))) + _
                (50 * (E_preis * (1 - 0.15))) + _
                (200 * (E_preis * (1 - 0.2))) + _
                ((Anz.Value - 300) * (E_preis * (1 - 0.3)))
        Zwischenrechnung
    ElseIf Anz.Value >= 700 And Anz.Value < 1000 Then
        BruttoPreis = (25 * E_preis) + _
                (25 * (E_preis * (1 - 0.1))) + _
                (50 * (E_preis * (1 - 0.15))) + _
                (200 * (E_preis * (1 - 0.2))) + _
                (400 * (E_preis * (1 - 0.3))) + _
                ((Anz.Value - 700) * (E_preis * (1 - 0.4)))
        Zwischenrechnung
    ElseIf Anz.Value >= 1000 And Anz.Value < 2000 Then
        BruttoPreis = (25 * E_preis) + _
                (25 * (E_preis * (1 - 0.1))) + _
                (50 * (E_preis * (1 - 0.15))) + _
                (200 * (E_preis * (1 - 0.2))) + _
                (400 * (E_preis * (1 - 0.3))) + _
                (300 * (E_preis * (1 - 0.4))) + _
                ((Anz.Value - 1000) * (E_preis * (1 - 0.5)))
        Zwischenrechnung
    ElseIf Anz.Value >= 2000 And Anz.Value < 3000 Then
        BruttoPreis = (25 * E_preis) + _
                (25 * (E_preis * (1 - 0.1))) + _
                (50 * (E_preis * (1 - 0.15))) + _
                (200 * (E_preis * (1 - 0.2))) + _
                (400 * (E_preis * (1 - 0.3))) + _
                (300 * (E_preis * (1 - 0.4))) + _
                (1000 * (E_preis * (1 - 0.5))) + _
                ((Anz.Value - 2000) * (E_preis * (1 - 0.6)))
        Zwischenrechnung
    ElseIf Anz.Value >= 3000 And Anz.Value < 4000 Then
        BruttoPreis = (25 * E_preis) + _
                (25 * (E_preis * (1 - 0.1))) + _
                (50 * (E_preis * (1 - 0.15))) + _
                (200 * (E_preis * (1 - 0.2))) + _
                (400 * (E_preis * (1 - 0.3))) + _
                (300 * (E_preis * (1 - 0.4))) + _
                (1000 * (E_preis * (1 - 0.5))) + _
                (1000 * (E_preis * (1 - 0.6))) + _
                ((Anz.Value - 3000) * (E_preis * (1 - 0.7)))
        Zwischenrechnung
    ElseIf Anz.Value >= 4000 And Anz.Value < 5000 Then
        BruttoPreis = (25 * E_preis) + _
                (25 * (E_preis * (1 - 0.1))) + _
                (50 * (E_preis * (1 - 0.15))) + _
                (200 * (E_preis * (1 - 0.2))) + _
                (400 * (E_preis * (1 - 0.3))) + _
                (300 * (E_preis * (1 - 0.4))) + _
                (1000 * (E_preis * (1 - 0.5))) + _
                (1000 * (E_preis * (1 - 0.6))) + _
                (1000 * (E_preis * (1 - 0.7))) + _
                ((Anz.Value - 4000) * (E_preis * (1 - 0.8)))
        Zwischenrechnung
    ElseIf Anz.Value >= 5000 And Anz.Value < 6000 Then
        BruttoPreis = (25 * E_preis) + _
                (25 * (E_preis * (1 - 0.1))) + _
                (50 * (E_preis * (1 - 0.15))) + _
                (200 * (E_preis * (1 - 0.2))) + _
                (400 * (E_preis * (1 - 0.3))) + _
                (300 * (E_preis * (1 - 0.4))) + _
                (1000 * (E_preis * (1 - 0.5))) + _
                (1000 * (E_preis * (1 - 0.6))) + _
                (1000 * (E_preis * (1 - 0.7))) + _
                (1000 * (E_preis * (1 - 0.8))) + _
                ((Anz.Value - 5000) * (E_preis * (1 - 0.9)))
        Zwischenrechnung
    ElseIf Anz.Value >= 5000 Then
        BruttoPreis = (25 * E_preis) + _
                (25 * (E_preis * (1 - 0.1))) + _
                (50 * (E_preis * (1 - 0.15))) + _
                (200 * (E_preis * (1 - 0.2))) + _
                (400 * (E_preis * (1 - 0.3))) + _
                (300 * (E_preis * (1 - 0.4))) + _
                (1000 * (E_preis * (1 - 0.5))) + _
                (1000 * (E_preis * (1 - 0.6))) + _
                (1000 * (E_preis * (1 - 0.7))) + _
                (1000 * (E_preis * (1 - 0.8))) + _
                (1000 * (E_preis * (1 - 0.9)))
        Zwischenrechnung
   End If


'****************************************************************
'Rabattstaffelung

Dim V_Anz1!, V_Anz2!, V_Anz3!, V_Anz4!, V_Anz5!, V_Anz6!, V_Anz7!, V_Anz8!, V_Anz9!, V_Anz10!, V_Anz11 As Integer
Dim V_Rab1!, V_Rab2!, V_Rab3!, V_Rab4!, V_Rab5!, V_Rab6!, V_Rab7!, V_Rab8!, V_Rab9!, V_Rab10!, V_Rab11 As Single
Dim V_ZEP1 As Currency, V_ZEP2 As Currency, V_ZEP3 As Currency, V_ZEP4 As Currency, V_ZEP5 As Currency, V_ZEP6 As Currency, V_ZEP7 As Currency, V_ZEP8 As Currency, V_ZEP9 As Currency, V_ZEP10 As Currency, V_ZEP11 As Currency
       
V_Anz1 = 25
V_Anz2 = 50
V_Anz3 = 100
V_Anz4 = 300
V_Anz5 = 700
V_Anz6 = 1000
V_Anz7 = 2000
V_Anz8 = 3000
V_Anz9 = 4000
V_Anz10 = 5000
V_Anz11 = 6000

V_Rab1 = 0.1
V_Rab2 = 0.15
V_Rab3 = 0.2
V_Rab4 = 0.3
V_Rab5 = 0.4
V_Rab6 = 0.5
V_Rab7 = 0.6
V_Rab8 = 0.7
V_Rab9 = 0.8
V_Rab10 = 0.9
V_Rab11 = 1

V_ZEP1 = E_preis * (1 - V_Rab1)
V_ZEP2 = E_preis * (1 - V_Rab2)
V_ZEP3 = E_preis * (1 - V_Rab3)
V_ZEP4 = E_preis * (1 - V_Rab4)
V_ZEP5 = E_preis * (1 - V_Rab5)
V_ZEP6 = E_preis * (1 - V_Rab6)
V_ZEP7 = E_preis * (1 - V_Rab7)
V_ZEP8 = E_preis * (1 - V_Rab8)
V_ZEP9 = E_preis * (1 - V_Rab9)
V_ZEP10 = E_preis * (1 - V_Rab10)
V_ZEP11 = E_preis * (1 - V_Rab11)

anz1.Value = Format(V_Anz1, "##,##0")
anz2.Value = Format(V_Anz2, "##,##0")
anz3.Value = Format(V_Anz3, "##,##0")
anz4.Value = Format(V_Anz4, "##,##0")
anz5.Value = Format(V_Anz5, "##,##0")
anz6.Value = Format(V_Anz6, "##,##0")
anz7.Value = Format(V_Anz7, "##,##0")
anz8.Value = Format(V_Anz8, "##,##0")
anz9.Value = Format(V_Anz9, "##,##0")
anz10.Value = Format(V_Anz10, "##,##0")
anz11.Value = Format(V_Anz11, "##,##0")


Rab1.Value = Format(V_Rab1, "0 %")
Rab2.Value = Format(V_Rab2, "0 %")
Rab3.Value = Format(V_Rab3, "0 %")
Rab4.Value = Format(V_Rab4, "0 %")
Rab5.Value = Format(V_Rab5, "0 %")
Rab6.Value = Format(V_Rab6, "0 %")
Rab7.Value = Format(V_Rab7, "0 %")
Rab8.Value = Format(V_Rab8, "0 %")
Rab9.Value = Format(V_Rab9, "0 %")
Rab10.Value = Format(V_Rab10, "0 %")
Rab11.Value = Format(V_Rab11, "0 %")

EPreisZ1.Value = Format(V_ZEP1, "##,##0.00 |fffd|")
EPreisZ2.Value = Format(V_ZEP2, "##,##0.00 |fffd|")
EPreisZ3.Value = Format(V_ZEP3, "##,##0.00 |fffd|")
EPreisZ4.Value = Format(V_ZEP4, "##,##0.00 |fffd|")
EPreisZ5.Value = Format(V_ZEP5, "##,##0.00 |fffd|")
EPreisZ6.Value = Format(V_ZEP6, "##,##0.00 |fffd|")
EPreisZ7.Value = Format(V_ZEP7, "##,##0.00 |fffd|")
EPreisZ8.Value = Format(V_ZEP8, "##,##0.00 |fffd|")
EPreisZ9.Value = Format(V_ZEP9, "##,##0.00 |fffd|")
EPreisZ10.Value = Format(V_ZEP10, "##,##0.00 |fffd|")
EPreisZ11.Value = Format(V_ZEP11, "##,##0.00 |fffd|")



Exit Sub

Rechenfehler:
        MsgBox "Berechnungsfehler, bitte versuchen Sie es nocheinmal!"
       

End Sub

Private Sub Zwischenrechnung()
        Anz.Value = Format(Anz.Value, "##,##0")
        R_Preis.Value = Format(BruttoPreis, "##,##0.00")
        R_Preis1.Value = R_Preis.Value
        MwST_W = R_Preis.Value / (1 + MwST_S) * MwST_S
        Mwst.Value = Format(MwST_W, "##,##0.00")
        Preis.Value = "x " & Format(R_Preis.Value / (1 + MwST_S) / Anz.Value, "##,##0.00") & " * ="
        Netto = R_Preis.Value - MwST_W
        N_Pr.Value = Format(Netto, "##,##0.00")
End Sub


Private Sub ButtonBestellung_Click()
Dim Sep$, AnzClients$, NettoPreis$, MwstBetrag$, BruttoBetrag As String

        
Sep = "  "
        
If Anz.Value >= 0 And Anz.Value < 10 Then
        AnzClients = Sep & Sep & Sep & Sep & Sep & Sep & Format(Anz.Value, "#,##0")
    ElseIf Anz.Value >= 10 And Anz.Value < 100 Then
        AnzClients = Sep & Sep & Sep & Sep & Sep & Format(Anz.Value, "#,##0")
    ElseIf Anz.Value >= 100 And Anz.Value < 1000 Then
        AnzClients = Sep & Sep & Sep & Sep & Format(Anz.Value, "#,##0")
    ElseIf Anz.Value >= 1000 And Anz.Value < 10000 Then
        AnzClients = Sep & Sep & Sep & Format(Anz.Value, "#,##0")
    ElseIf Anz.Value >= 10000 And Anz.Value < 100000 Then
        AnzClients = Sep & Sep & Format(Anz.Value, "#,##0")
     Else
        AnzClients = Sep & Format(Anz.Value, "#,##0")
End If
             
If N_Pr.Value >= 0 And N_Pr.Value < 10 Then
        NettoPreis = Sep & Sep & Sep & Sep & Sep & Sep & Format(N_Pr.Value, "#,##0.00 |fffd|")
    ElseIf N_Pr.Value >= 10 And N_Pr.Value < 100 Then
        NettoPreis = Sep & Sep & Sep & Sep & Sep & Format(N_Pr.Value, "#,##0.00 |fffd|")
    ElseIf N_Pr.Value >= 100 And N_Pr.Value < 1000 Then
        NettoPreis = Sep & Sep & Sep & Sep & Format(N_Pr.Value, "#,##0.00 |fffd|")
    ElseIf N_Pr.Value >= 1000 And N_Pr.Value < 10000 Then
        NettoPreis = Sep & Sep & Sep & Format(N_Pr.Value, "#,##0.00 |fffd|")
    ElseIf N_Pr.Value >= 10000 And N_Pr.Value < 100000 Then
        NettoPreis = Sep & Sep & Format(N_Pr.Value, "#,##0.00 |fffd|")
    Else
        NettoPreis = Sep & Format(N_Pr.Value, "#,##0.00 |fffd|")
End If


If Mwst.Value >= 0 And Mwst.Value < 10 Then
        MwstBetrag = Sep & Sep & Sep & Sep & Sep & Sep & Format(Mwst.Value, "#,##0.00 |fffd|")
    ElseIf Mwst.Value >= 10 And Mwst.Value < 100 Then
        MwstBetrag = Sep & Sep & Sep & Sep & Sep & Format(Mwst.Value, "#,##0.00 |fffd|")
    ElseIf Mwst.Value >= 100 And Mwst.Value < 1000 Then
        MwstBetrag = Sep & Sep & Sep & Sep & Format(Mwst.Value, "#,##0.00 |fffd|")
    ElseIf Mwst.Value >= 1000 And Mwst.Value < 10000 Then
        MwstBetrag = Sep & Sep & Sep & Format(Mwst.Value, "#,##0.00 |fffd|")
    ElseIf Mwst.Value >= 10000 And Mwst.Value < 100000 Then
        MwstBetrag = Sep & Sep & Format(Mwst.Value, "#,##0.00 |fffd|")
    Else
        MwstBetrag = Sep & Format(Mwst.Value, "#,##0.00 |fffd|")
End If

If R_Preis1.Value >= 0 And R_Preis1.Value < 10 Then
        BruttoBetrag = Sep & Sep & Sep & Sep & Sep & Sep & Format(R_Preis1.Value, "#,##0.00 |fffd|")
    ElseIf R_Preis1 >= 10 And R_Preis1.Value < 100 Then
        BruttoBetrag = Sep & Sep & Sep & Sep & Sep & Format(R_Preis1.Value, "#,##0.00 |fffd|")
    ElseIf R_Preis1 >= 100 And R_Preis1.Value < 1000 Then
        BruttoBetrag = Sep & Sep & Sep & Sep & Format(R_Preis1.Value, "#,##0.00 |fffd|")
    ElseIf R_Preis1 >= 1000 And R_Preis1.Value < 10000 Then
        BruttoBetrag = Sep & Sep & Sep & Format(R_Preis1.Value, "#,##0.00 |fffd|")
    ElseIf R_Preis1 >= 10000 And R_Preis1.Value < 100000 Then
        BruttoBetrag = Sep & Sep & Format(R_Preis1.Value, "#,##0.00 |fffd|")
    Else
        BruttoBetrag = Sep & Format(R_Preis1.Value, "#,##0.00 |fffd|")
End If

        
    If Rechnungsanschrift.Value <> "" And Lief_EMAIL.Value <> "" Then
       ' MsgBox InStr(Lief_EMAIL.Value, ".")
       If InStr(Lief_EMAIL.Value, "@") < 1 Then
        MsgBox ("Bitte Pr|fffd|fen Sie Ihre E-Mailadresse!"), 16, Msg_title
        Exit Sub
       End If
       Else
       MsgBox ("Sie haben keine Rechnungsanschrift und/oder E-Mail-Adresse eingegeben"), 16, Msg_title
       Exit Sub
    End If
    
        
    Dim objOut As Outlook.Application
    Dim objMail As Outlook.MailItem
    Dim Mail_An$, Mail_Txt1$, Mail_Txt2$, Mail_Txt3$, Mail_Txt4$, Mail_Txt5$, Mail_Txt6$, Mail_Txt7$, Mail_Txt8$, Mail_Txt9$, Mail_Bank$, Mail_Absch As String
    
    Mail_An = "Sehr geehrter Herr K|fffd|rner," & vbCrLf & vbCrLf _
            & "hiermit bestellen wir unter Ber|fffd|cksichtigung Ihrer u.g. Nutzungsbedingungen "
    
    Mail_Txt1 = "folgende Lizenzen Ihres Vorlagensystems mit MS Outlook-Anbindung;" & vbCrLf & vbCrLf
    
    Mail_Txt2 = "Anzahl Lizenzen: " & Chr$(9) & AnzClients & vbCrLf _
                & vbCrLf & "Nettopreis: " & Chr$(9) & Chr$(9) _
                & " " & NettoPreis & Chr$(9) & "(Lizenzen f|fffd|r " _
                & Format(Anz.Value, "#,##0") _
                & " Clients |fffd| " & Format(R_Preis.Value / (1 + MwST_S) / Anz.Value, "##,##0.00") & " |fffd|)" & vbCrLf
    
    Mail_Txt3 = "Mehrwertsteuer (" & Format(MwST_S, "#,##0 %") & "):" & MwstBetrag _
                & vbCrLf & "Bruttopreis:" & Chr$(9) & Chr$(9) _
                & " " & BruttoBetrag & vbCrLf & vbCrLf
    
    Mail_Txt4 = "Bitte schicken Sie uns den Autorisierungsschl|fffd|ssel an: " _
                & Lief_EMAIL.Value & vbCrLf & vbCrLf
    
    Mail_Txt5 = "Wir erkl|fffd|ren uns damit einverstanden, dass Sie uns den Autorisierungsschl|fffd|ssel per Mail an o.g. Adresse zuschicken, sobald der Betrag von " _
                & Format(R_Preis1.Value, "#,##0.00 |fffd|") _
                & " vollst|fffd|ndig auf Ihrem u.g. Konto eingegeangen ist. "
    
    'Mail_Txt6 = "Ferner erkl|fffd|ren wir, dass wir Sie f|fffd|r Sch|fffd|den die durch die Benutzung Ihrer Vorlagen entstehen, weder mittelbar noch unmittelbar haftbar machen. "
    
    Mail_Txt7 = "Als Rechnungsanschrift verwenden Sie bitte auf der per Mail zugeschickten Rechnung" _
                & vbCrLf & "folgende Adresse:" & vbCrLf & vbCrLf
    
    Mail_Txt8 = Rechnungsanschrift.Value & vbCrLf & vbCrLf & Lief_EMAIL.Value & vbCrLf & _
                "Version: " & Version1 & " V: " & Version & " R: " & Rel & " VK: " & Verk & vbCrLf & vbCrLf
    
    Mail_Txt9 = "Den Rechnungsbetrag von " _
                & Format(R_Preis1.Value, "#,##0.00 |fffd|") _
                & " |fffd|berweisen wir auf folgendes Konto:" & vbCrLf & vbCrLf
    
    Mail_Bank = "Bank:" & Chr$(9) & Chr$(9) & Chr$(9) & "Postbank N|fffd|rnberg" & vbCrLf _
                & "Inhaber:" & Chr$(9) & Chr$(9) & "Markus K|fffd|rner" & vbCrLf _
                & "BLZ:" & Chr$(9) & Chr$(9) & Chr$(9) & "760 100 85" _
                & vbCrLf & "Konto-Nr.:" & Chr$(9) & Chr$(9) & "977 946 857" _
                & vbCrLf & "Verwendungszweck:" & Chr$(9) _
                & "ZVLG / " & Format(Anz.Value, "#,##0") & " / " _
                & Replace(Lief_EMAIL.Value, "@", "*") & vbCrLf & vbCrLf _
                & "IBAN:" & Chr$(9) & Chr$(9) & Chr$(9) & "DE93760100850977946857" & vbCrLf _
                & "BIC/SWIFT-Code:" & Chr$(9) & "PBNKDEFF" _
                & vbCrLf & vbCrLf _
                & "bzw. schicken wir per PayPal an mkoerner@dotoffice.de mit o.g. Emailadresse als Absenderadresse." _
                & vbCrLf & vbCrLf _
                & "Mit freundlichen Gr|fffd||fffd|en" & vbCrLf & vbCrLf
                
    On Error GoTo Fehler
    Set objOut = GetObject(, "Outlook.Application")
    Set objMail = objOut.CreateItem(olMailItem)
    
    
    objMail.Subject = "Version: " & Version1 & " V: " & Version & " R: " & Rel & " VK: " & Verk & " - Bestellung von Brief- und Fax-Vorlagen"
    objMail.To = "zvlg_best@dotoffice.de"
    ' objMail.BodyFormat = olFormatPlain ' Stezt ab XP Mailformat auf nur Text
    objMail.Body = Mail_An & Mail_Txt1 & Mail_Txt2 & Mail_Txt3 & Mail_Txt4 _
                    & Mail_Txt5 & Mail_Txt7 & Mail_Txt8 & Mail_Txt9 _
                    & Mail_Bank & vbNewLine & Trenn _
                    & "Nutzungsbedingungen:" & vbNewLine & vbNewLine _
                    & Nutzungsbedingungen
   
    
    
    Unload Bestelldaten
    
    'objMail.Send
    objMail.Display
    
Set objOut = Nothing
Exit Sub

Fehler:
If Err = 429 Then
    ' MsgBox "Outlook wird gestartet!"
     Set objOut = CreateObject("Outlook.Application")
    Else
     Err.Raise Err.Number
End If

Resume Next
    
End Sub

Private Sub ButtonBestellungNein_Click()
    Unload Bestelldaten

End Sub

Sub Anz_Exit(ByVal Cancel As MSForms.ReturnBoolean)
Dim Brutto As Currency, Netto As Currency, MwST_W As Currency

Brechnung ' Ausf|fffd|hren des Moduls Berechnung
       
End Sub

Attribute VB_Name = "Bestellung"
Attribute VB_Base = "0{218C2B7D-E971-11E7-AE36-0003FF31812D}{218C2B6A-E971-11E7-AE36-0003FF31812D}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Private Sub ButtonBestellung_Click()
    Unload Bestellung
    Load Bestelldaten
    Bestelldaten.Show
    
    End Sub

Private Sub ButtonBestellungNein_Click()
 
    Unload Bestellung

End Sub



Private Sub UserForm_Initialize()
 '   MsgBox CD
    Ablaufdatum.Value = CD
    TextBox1.Value = E_MAIL
    TextBox2.Value = Internet
    
'    TextBox3.Value = "Zum Preis von " _
'            & E_preis_form _
'            & "  zzgl. MwSt ( " _
'            & Format(E_preis * 1.16, "##,##0.00 |fffd|") _
'            & " incl. MwSt ) je Client/Einzelarbeitsplatz k|fffd|nnen Sie den Autorisierungsschl|fffd|ssel per Mail ordern."


Nutzungsbedingungen = Format("   I. Vertragsgegenstand und Nutzungsrecht", ">") & vbNewLine & "Der Nutzer erh|fffd|lt das nicht ausschlie|fffd|liche und nur mit Zustimmung des |fffd|berlassers auf andere Personen/Unternehmen |fffd|bertragbare Recht, das Programm selbst oder durch andere Angeh|fffd|rige seiner Betriebsst|fffd|tten zu nutzen oder nutzen zu lassen." _
    & vbNewLine & vbNewLine & "Die Shareware- oder Testversion des Programms darf f|fffd|r die Dauer von 30 Tagen zu Pr|fffd|fzwecken getestet werden." _
    & vbNewLine & "Wenn das Programm nach Ablauf dieser Testphase weiter genutzt werden soll, so ist der Nutzer gehalten, durch die Registrierung des Programms eine Lizenz f|fffd|r jeden Client zu erwerben, der mit dieser Software ausgestattet wird." _
    & vbNewLine & vbNewLine & "Die |fffd|berlassungsverg|fffd|tung ist als Einmalzahlung nach der |fffd|berlassung des Programms zu entrichten." _
    & vbNewLine & vbNewLine & "Programmkopien d|fffd|rfen lediglich zum Zweck der Sicherung gefertigt werden. Alle Kopien m|fffd|ssen den Copyright-Vermerk, den das Programm enth|fffd|lt, in gleicher Weise enthalten. Sonstige |fffd|berlassene Unterlagen, Beschreibungen, Dokumentationen u. |fffd|. d|fffd|rfen ohne vorherige Zustimmung des |fffd|berlassers nicht vervielf|fffd|ltigt und/oder verbreitet werden." _
    & vbNewLine & vbNewLine & vbNewLine & Format("   II.Schutzrechte", ">") & vbNewLine & "Der |fffd|berlasser bleibt Inhaber aller Rechte, insbesondere der urheberrechtlichen Verwertungsrechte an den |fffd|berlassenen Programmen, den zugeh|fffd|rigen Unterlagen, Dokumentationen u. |fffd|. sowie an allen im Rahmen der vertragsgem|fffd||fffd|en Nutzung hergestellten vollst|fffd|ndigen oder teilweisen Sicherungskopien." _
    & vbNewLine & vbNewLine & "Ohne vorherige schriftliche Zustimmung des Herstellers d|fffd|rfen die Programme weder ganz noch teilweise vervielf|fffd|ltigt, bearbeitet, |fffd|bersetzt sowie vom Objektcode in den Quellcode umgewandelt werden." _
    & vbNewLine & "(Die in dieser Software verwendeten Logos, Firmen- und Produktbezeichnungen sind eingetragene Warenzeichen der jeweiligen Hersteller.)" & vbNewLine & vbNewLine & vbNewLine & Format("   III.Gew|fffd|hrleistung", ">") & vbNewLine _
    & "Der |fffd|berlasser gew|fffd|hrleistet die in der Leistungsbeschreibung festgelegten Programmspezifikationen. Der Gew|fffd|hrleistung unterliegt jeweils die letzte, dem Nutzer |fffd|berlassene, Programmversion. Die Gew|fffd|hrleistungsdauer betr|fffd|gt 12 Monate nach |fffd|berlassung dieser Version. Sollten innerhalb der Gew|fffd|hrleistungsdauer M|fffd|ngel am Programm, die dem |fffd|berlasser schriftlich mitzuteilen sind, auftreten, so hat der Nutzer nach seiner Wahl das Recht, Herabsetzung der |fffd|berlassungsverg|fffd|tung oder R|fffd|ckg|fffd|ngigmachung des Vertrages zu verlangen." _
    & vbNewLine & vbNewLine & "Weitergehende Anspr|fffd|che des Nutzers, insbesondere Schadenersatzanspr|fffd|che des Nutzers wegen versp|fffd|teter oder unterbliebener Lieferung sind ausgeschlossen. Dies gilt nicht, soweit die Schadensursache auf von dem |fffd|berlasser zu vertretenden Vorsatz oder grober Fahrl|fffd|ssigkeit beruht." _
    & vbNewLine & vbNewLine & "Bei eigenen Eingriffen in das Programm ist die Gew|fffd|hrleistung ausgeschlossen." & vbNewLine & vbNewLine & vbNewLine & Format("   IV. Beendigung des Nutzungsrechts", ">") & vbNewLine & "Nach Wegfall des Nutzungsrechts an dem Programm hat der Nutzer daf|fffd|r Sorge zu tragen, dass das Programm nicht mehr genutzt werden kann." _
    & vbNewLine & vbNewLine & vbNewLine & Format("   V.Gefahrtragung", ">") & vbNewLine & "Der Versand, einschlie|fffd|lich von Downloads, s|fffd|mtlicher Materialien, Unterlagen und Programme sowie die |fffd|bermittlung von Daten und Programmen von und zum |fffd|berlasser erfolgt ausschlie|fffd|lich auf Gefahr des Nutzers." _
    & vbNewLine & vbNewLine & vbNewLine & Format("   VI. Zahlungen und Aufrechnung", ">") & vbNewLine & "Alle Softwareprogramme sind bis zum Liefertermin aktualisiert." & vbNewLine & "Die Rechnung ist nach F|fffd|lligkeit zahlbar ohne Abzug." & vbNewLine & "Der Besteller ist nicht berechtigt, Zahlungen zur|fffd|ckzuhalten, sofern ihm nicht ein gesetzliches Zur|fffd|ckbehaltungsrecht zusteht." _
    & vbNewLine & vbNewLine & vbNewLine & Format("   VII. Haftung f|fffd|r Folgesch|fffd|den", ">") & vbNewLine & "Die Haftung f|fffd|r Folgesch|fffd|den beschr|fffd|nkt sich auf vors|fffd|tzliche oder grob fahrl|fffd|ssige Schadenszuf|fffd|gung, soweit nicht im Falle des Fehlens zugesicherten Eigenschaften diese Zusicherung gerade den Zweck hatte, vor solchen Sch|fffd|den zu bewahren. Der Nutzer ist verpflichtet, f|fffd|r die eigene Datensicherung Sorge zu tragen." _
    & vbNewLine & vbNewLine & vbNewLine & Format("   VIII. Untersuchungs- und R|fffd|gepflicht", ">") & vbNewLine _
    & "Der Nutzer ist verpflichtet, Lieferung und Leistung unverz|fffd|glich auf Vollst|fffd|ndigkeit und offensichtliche M|fffd|ngel zu untersuchen und entsprechende R|fffd|gen innerhalb von 3 Wochen nach Erhalt der Lieferungen bzw. Leistungen schriftlich bei dem |fffd|berlasser zu erheben." _
    & vbNewLine & "Nicht offensichtliche M|fffd|ngel m|fffd|ssen dem |fffd|berlasser gegen|fffd|ber innerhalb von 3 Wochen nach ihrer Feststellung schriftlich ger|fffd|gt werden. Bei Verletzung der Untersuchungs- und R|fffd|gepflicht gilt die Lieferung bzw. Leistung als vom Nutzer genehmigt." _
    & vbNewLine & vbNewLine & vbNewLine & Format("   IX.Eigentumsvorbehalt", ">") & vbNewLine _
    & "Der |fffd|berlasser beh|fffd|lt sich bei allen Lieferungen das uneingeschr|fffd|nkte Eigentum bis zur vollst|fffd|ndigen Erf|fffd|llung aller Zahlungsverpflichtungen durch den Nutzer vor." _
    & vbNewLine & vbNewLine & vbNewLine & Format("   X.Datenschutz", ">") & vbNewLine & "Hinweis nach |fffd| 33 BDSG:" & vbNewLine _
    & "Die Daten des Nutzers werden zur internen Verwendung innerhalb des |fffd|berlassers in Form von Namen und Adresse des Wohn- bzw. Gesch|fffd|ftssitzes gespeichert." _
    & vbNewLine & "Der Nutzer ist damit einverstanden, dass die Deutsche Post AG dem |fffd|berlasser die zutreffende aktuelle Anschrift mitteilt, soweit eine Postsendung nicht unter der bisher bekannten Anschrift ausgeliefert werden konnte (|fffd| 4 Postdienst-Datenschutzverordnung)." _
    & vbNewLine & vbNewLine & vbNewLine & Format("   XI.Schlussbestimmungen", ">") & vbNewLine _
    & "Sollten sich einzelne Bestimmungen der Gesch|fffd|ftsbedingungen als ung|fffd|ltig erweisen, wird hierdurch die G|fffd|ltigkeit der |fffd|brigen Bestimmungen nicht ber|fffd|hrt." _
    & vbNewLine & vbNewLine & "Erf|fffd|llungsort und Gerichtsstand f|fffd|r Kaufleute ist Berlin." & vbNewLine & vbNewLine & "Es gilt ausschlie|fffd|lich deutsches Recht."
    
Nutzgs_bed.Value = Nutzungsbedingungen
Nutzgs_bed.SetFocus
Nutzgs_bed.CurLine = 0

End Sub
Attribute VB_Name = "DatenEingabeBrief"
Attribute VB_Base = "0{218C2B81-E971-11E7-AE36-0003FF31812D}{218C2B60-E971-11E7-AE36-0003FF31812D}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Public FirmaAbteilung As String

Private Sub Abteilung_Change()
    AdresseAnzeigen
End Sub

Private Sub btn_Pos0_Click()
     PositionsVerwendung|fffd|nderung
End Sub

Private Sub btn_Pos1_Click()
     PositionsVerwendung|fffd|nderung
End Sub

Private Sub btn_Pos2_Click()
     PositionsVerwendung|fffd|nderung
End Sub

Private Sub btn_Pos3_Click()
     PositionsVerwendung|fffd|nderung
End Sub

Private Sub Frame_Positionsverwendung_Click()
     PositionsVerwendung|fffd|nderung
End Sub

Private Sub PositionsVerwendung|fffd|nderung()
    If btn_Pos0 = True Then PositionOderKNR = 0
    If btn_Pos1 = True Then PositionOderKNR = 1
    If btn_Pos2 = True Then PositionOderKNR = 2
    If btn_Pos3 = True Then PositionOderKNR = 3
    
    If PositionOderKNR <> 0 Then
        Bez_KDNR.Caption = "Position"
    Else
         Bez_KDNR.Caption = Be_KDNR
    End If
        
    AdresseAnzeigen
End Sub

Private Sub AdresseAnzeigen()
    lbl_Positionsverwendung.Caption = AdresseAufbereiten(Anrede.Value, Titel.Value, pers|fffd|nlich.Value, _
                                    Vorname.Value, Nam.Value, Firma.Value, Abteilung.Value, _
                                    Adresse.Value, KDNR.Value, True) _
                                    & vbCrLf & PLZOrt.Value
End Sub

Private Sub KDNR_Change()
AdresseAnzeigen

End Sub

Private Sub pers|fffd|nlich_Click()
    AdresseAnzeigen ' Aktualisiert Fenster zum Anzeigen der Adresse

End Sub

Private Sub UserForm_Initialize()
FehlerMessageBrief = "F|fffd|r einen Brief brauchen Sie einen Ansprechpartner und/oder eine Firma!"


Datum.Value = Format(Date, B_Dat_form) 'Vorbelegen des Datums mit dem Format, das aus den Dateieigenschaften ausgelesen wurde
    Datum.AddItem Format(Date, "dd/mm/yyyy")
    Datum.AddItem Format(Date, "yyyy-mm-dd")
    Datum.AddItem Format(Date, "dd. mmm. yyyy")
    Datum.AddItem Format(Date, "dd. mmmm yyyy")
    Datum.AddItem Format(Date, "dddddd")
    Datum.AddItem Format(Date, "dd. mmmm yyyy") & " " & Format(Time, "hh:nn")
    Datum.AddItem Format(Date, "dd.mm.yyyy") & " " & Format(Time, "hh:nn")
    Datum.AddItem Format(Date, "dd.mm.yyyy") & " " & Format(Time, "hh:nn:ss")
    Datum.AddItem Format(Date, "dd.mm.yyyy") & ", " & Format(Time, "hh:nn")
    Datum.AddItem Format(Date, "dd.mm.yyyy") & vbCrLf & Format(Time, "hh:nn")
    Datum.AddItem Format(Date, "dddd, dd.mm.yyyy")
    Datum.AddItem Format(Date, "yy-dd-mm")
    Datum.AddItem Format(Date, "dd/mm/yy")
    Datum.AddItem "KW " & Format(Date, "ww") & " / " & Format(Date, "yyyy")
    Datum.AddItem "KW " & Format(Date, "ww")
    Datum.AddItem Format(Date, "q.") & " Quartal " & Format(Date, "yyyy")
    Datum.AddItem Format(Date, "q") & " / " & Format(Date, "yyyy")
    Datum.AddItem Format(Date, "q") & " / " & Format(Date, "yy")


Anrede.AddItem "Herrn"
Anrede.AddItem "Frau"
Anrede.AddItem "Schwester"
Anrede.AddItem "Familie"
Anrede.AddItem "Firma"

'English
Anrede.AddItem "Mr."                ' Herr
Anrede.AddItem "Messrs."            ' Herren
Anrede.AddItem "Sir Or Madam"       ' Herr oder Frau
Anrede.AddItem "Ms."                 ' Frau
Anrede.AddItem "Mss."                ' Frauen


Titel.AddItem "Dr."
Titel.AddItem "Prof."
Titel.AddItem "Mag."
Titel.AddItem "Ing."
Titel.AddItem "Dipl.-Ing."
Titel.AddItem "Pfarrer"


pers|fffd|nlich.Value = Pers|fffd|nlichVorbelegen
Briefanred.Value = "Sehr geehrte Damen und Herren" & BriefanredenEndZeichen
Werbung.Value = Msg_title

' Vorbelegen der Positionsverwendung
Select Case PositionOderKNR
    Case Is = 0
        btn_Pos0 = True
    Case Is = 1
        btn_Pos1 = True
    Case Is = 2
        btn_Pos2 = True
    Case Is = 3
        btn_Pos3 = True
End Select

PositionsVerwendung|fffd|nderung


'Auslesen bereits vorhandener Werte der Textmarken
On Error Resume Next
If ActiveDocument.Bookmarks("Betreff").Range <> " " Then  ' Sonst f|fffd|rgen User ggf. Text immer hinter Leerzeichen an und Betreff beginnt nach |fffd|nderung immer mit Leerzeichen
    Betreff.Value = ActiveDocument.Bookmarks("Betreff").Range
End If

If ActiveDocument.Bookmarks("IhrZeichen").Range <> " " Then
    IhrZeichen.Value = ActiveDocument.Bookmarks("IhrZeichen").Range
End If

If ActiveDocument.Bookmarks("KDNR").Range <> " " Then
    KDNR.Value = ActiveDocument.Bookmarks("KDNR").Range
End If


' Anzeigen Stichworte
txt_Stichworte.Value = ActiveDocument.BuiltInDocumentProperties(wdPropertyCategory).Value ' Vorhanden Stichworte zuweisen

If StichworteAnzeigen = True Then
    lbl_Stichworte.Visible = True
    txt_Stichworte.Visible = True

Else
    lbl_Stichworte.Visible = False
    txt_Stichworte.Visible = False
End If


Speichern.Value = SP_Speichern  ' Vorbelegung der Speicheroption entsprechend der Dokumenteigenschaften

Dim Be1_Betreff$, Be1_IhrZeichen$, Be1_KDNR$, Be1_Stichworte$

Be1_Betreff = Be_Betreff
Be1_IhrZeichen = Be_IhrZeichen
Be1_KDNR = Be_KDNR
Be1_Stichworte = Be_Stichworte

' Dateiegenschaften des Aktive Dokuemnts auslesen Falls Eigenschaft nicht vorhanden, dann Fehler-Nr "5"
On Error GoTo Fehler

Speichern.Value = ActiveDocument.CustomDocumentProperties("SaveFirst")
SaveWithoutDialog = ActiveDocument.CustomDocumentProperties("SaveWithoutDialog")
SavePrefix = ActiveDocument.CustomDocumentProperties("SavePrefix")
SavePrefixUse = ActiveDocument.CustomDocumentProperties("SavePrefixUse")
FileCount = ActiveDocument.CustomDocumentProperties("FileCount")
StartCount = ActiveDocument.CustomDocumentProperties("StartCount")
UseSavePath = ActiveDocument.CustomDocumentProperties("UseSavePath")
SavePath = ActiveDocument.CustomDocumentProperties("SavePath")
SpezSaveorder = ActiveDocument.CustomDocumentProperties("SpezSaveorder")
SavorderFile = ActiveDocument.CustomDocumentProperties("SaveorderFile")
Be1_Betreff = ActiveDocument.CustomDocumentProperties("Bez_Betreff")
Be1_IhrZeichen = ActiveDocument.CustomDocumentProperties("Bez_IhrZeichen")
Be1_KDNR = ActiveDocument.CustomDocumentProperties("Bez_KDNR")
Be1_Stichworte = ActiveDocument.CustomDocumentProperties("Bez_Stichworte")
Save_Dat_Form = ActiveDocument.CustomDocumentProperties("FormatSaveDate")
FileCountFormat = ActiveDocument.CustomDocumentProperties("FileCountFormat")


If FileCountFormat = "" Then FileCountFormat = "0000"


'Beschriften einiger Felder der Dialogbox
Bez_Betreff.Caption = Be1_Betreff
Bez_IhrZeichen.Caption = Be1_IhrZeichen
lbl_Stichworte.Caption = Be1_Stichworte

AdresseAnzeigen


Exit Sub
Fehler:
    If Err.Number = 5 Then
        Err.Clear
        Resume Next
    Else
        MsgBox Err.Number & vbCrLf & vbCrLf & Err.Description, vbCritical, Msg_title
    End If

End Sub

Private Sub CommandButton1_Click()
    Dim strFirma$, strAnredeZwischen$, strAnrede$, strTitel$, strVorname$, strName As String
    Dim strStrasse$, strLand$, strPLZ$, strOrt$, strPlzOrt$, strOrtLand$, strFax$, strTEL$, strAbt As String
    Dim strAnred$, strKName$, UmbruchNachname$, UmbruchFirma$, LeerzeichenVorname$, strVName$, strMAnrede$, strVarModi$, strVar As String
    Dim strKDNR$, Prop As String

On Error Resume Next

'Prop = "<PR_COMPANY_NAME>;;<PR_DISPLAY_NAME_PREFIX>;;<PR_GIVEN_NAME>;;<PR_SURNAME>;;<PR_STREET_ADDRESS>;;<PR_COUNTRY>;;<PR_POSTAL_CODE>;;<PR_LOCALITY>;;<PR_BUSINESS_FAX_NUMBER>;;<PR_OFFICE_TELEPHONE_NUMBER>;;<PR_DEPARTMENT_NAME>;;<PR_TITLE>;;<PR_HOME_FAX_NUMBER>;;<PR_EMAIL_ADDRESS>;;<PR_ADDRTYPE>;;<PR_HOME_TELEPHONE_NUMBER>;;<PR_CELLULAR_TELEPHONE_NUMBER>;;<PR_OFFICE2_TELEPHONE_NUMBER>"
Prop = "<PR_COMPANY_NAME>;;<PR_DISPLAY_NAME_PREFIX>;;<PR_GIVEN_NAME>;;<PR_SURNAME>;;<PR_STREET_ADDRESS>;;<PR_COUNTRY>;;<PR_POSTAL_CODE>;;<PR_LOCALITY>;;<PR_BUSINESS_FAX_NUMBER>;;<PR_OFFICE_TELEPHONE_NUMBER>;;<PR_DEPARTMENT_NAME>;;<PR_TITLE>;;<PR_EMAIL_ADDRESS>"


MemoHistorie = Application.GetAddress(AddressProperties:=Prop, UseAutoText:=False)
strVar = MemoHistorie

'MsgBox MemoHistorie

   strVarModi = strVar

'Firma
    strFirma = Mid(strVarModi, 1, InStr(1, strVar, ";;") - 1)
'Anrede vom strVarModi l|fffd|schen
    strVarModi = Right(strVarModi, Len(strVarModi) - (InStr(1, strVarModi, ";;") + 1))

 'ANREDE
      'Zwischenfeld zur Trennung von ANREDE und Titel
         strAnredeZwischen = Mid(strVarModi, 1, InStr(1, strVarModi, ";;") - 1)
        'Anrede vom strVarModi l|fffd|schen
         strVarModi = Right(strVarModi, Len(strVarModi) - (InStr(1, strVarModi, ";;") + 1))

'Pr|fffd|fung ob strAnredeZwischen ein Leerzeichen enth|fffd|lt und Aufteilung TExt vor leerzeichen in Anrede und nach Leerzeichen in Titel
       If InStr(1, strAnredeZwischen, " ") <> 0 Then
            'ANREDE
                strAnrede = Mid(strAnredeZwischen, 1, InStr(1, strAnredeZwischen, " ") - 1)
                'Anrede vom strVarModi l|fffd|schen
                strAnredeZwischen = Right(strAnredeZwischen, Len(strAnredeZwischen) - InStr(1, strAnredeZwischen, " "))
    
            'TITEL
                strTitel = strAnredeZwischen
    
              Else
                strAnrede = strAnredeZwischen
        End If

'VORNAME
    strVorname = Mid(strVarModi, 1, InStr(1, strVarModi, ";;") - 1)
'Vorname vom strVarModi l|fffd|schen
    strVarModi = Right(strVarModi, Len(strVarModi) - (InStr(1, strVarModi, ";;") + 1))

'NAME
     strName = Mid(strVarModi, 1, InStr(1, strVarModi, ";;") - 1)
    'Name vom strVarModi l|fffd|schen
     strVarModi = Right(strVarModi, Len(strVarModi) - (InStr(1, strVarModi, ";;") + 1))

'Stra|fffd|e
     strStrasse = Mid(strVarModi, 1, InStr(1, strVarModi, ";;") - 1)
'Stra|fffd|e vom strVarModi l|fffd|schen
     strVarModi = Right(strVarModi, Len(strVarModi) - (InStr(1, strVarModi, ";;") + 1))

'Land
     strLand = Mid(strVarModi, 1, InStr(1, strVarModi, ";;") - 1)
'Land vom strVarModi l|fffd|schen
     strVarModi = Right(strVarModi, Len(strVarModi) - (InStr(1, strVarModi, ";;") + 1))

'PLZ
     strPLZ = Mid(strVarModi, 1, InStr(1, strVarModi, ";;") - 1)
    'PLZ vom strVarModi l|fffd|schen
     strVarModi = Right(strVarModi, Len(strVarModi) - (InStr(1, strVarModi, ";;") + 1))

'Ort
     strOrt = Mid(strVarModi, 1, InStr(1, strVarModi, ";;") - 1)
    'Ort vom strVarModi l|fffd|schen
     strVarModi = Right(strVarModi, Len(strVarModi) - (InStr(1, strVarModi, ";;") + 1))

'Fax
     strFax = Mid(strVarModi, 1, InStr(1, strVarModi, ";;") - 1)
'Ort vom strVarModi l|fffd|schen
     strVarModi = Right(strVarModi, Len(strVarModi) - (InStr(1, strVarModi, ";;") + 1))

'Tel
     strTEL = Mid(strVarModi, 1, InStr(1, strVarModi, ";;") - 1)
     strVarModi = Right(strVarModi, Len(strVarModi) - (InStr(1, strVarModi, ";;") + 1))


'Abteilung
     strAbt = Mid(strVarModi, 1, InStr(1, strVarModi, ";;") - 1)
     strVarModi = Right(strVarModi, Len(strVarModi) - (InStr(1, strVarModi, ";;") + 1))

'Eigene Kundenummer in Kontakt unter Position gef|fffd|hrt

     'strKDNR = strVarModi
     'MsgBox "Eigene Kundenummer in Kontakt unter Position gef|fffd|hrt: " & strKDNR

     strKDNR = Mid(strVarModi, 1, InStr(1, strVarModi, ";;") - 1)
     strVarModi = Right(strVarModi, Len(strVarModi) - (InStr(1, strVarModi, ";;") + 1))



    'Zusammenf|fffd|hren von LAnd PLZ und Ort dabei Land eine Zeile tiefer
    If strLand <> "" And strLand <> LandKrzl1 And strLand <> LandKrzl2 And strLand <> LandKrzl3 Then
        If strPLZ <> "" Then
            If AuslStadtGross Then  ' Schreibt ausl|fffd|ndiche Stadte + L|fffd|nder gro|fffd| (Aus Dokumenteigenschaften ausgelesen
                    strPlzOrt = Trim(Trim(strPLZ) & " " & UCase(Trim(strOrt)) & vbCrLf & UCase(Trim(strLand)))
                Else
                    strPlzOrt = Trim(Trim(strPLZ) & " " & Trim(strOrt) & vbCrLf & Trim(strLand))
            End If
           Else
            If AuslStadtGross Then  ' Schreibt ausl|fffd|ndiche Stadte + L|fffd|nder gro|fffd| (Aus Dokumenteigenschaften ausgelesen
                    strPlzOrt = UCase(Trim(Trim(strOrt)) & vbCrLf & UCase(Trim(strLand)))
                Else
                    strPlzOrt = Trim(Trim(strOrt) & vbCrLf & Trim(strLand))
            End If
        End If
     Else
        If strPLZ <> "" Then
            strPlzOrt = Trim(Trim(strPLZ) & " " & Trim(strOrt))
           Else
            strPlzOrt = Trim(strOrt)
        End If
    End If



'Zuweisung der Adressbucheintr|fffd|ge als Standartwerte f|fffd|r die Textboxen
Anrede.Value = Trim(strAnrede)
Titel.Value = Trim(strTitel)
Vorname.Value = Trim(strVorname)
Nam.Value = Trim(strName)
Firma.Value = Trim(strFirma)
Adresse.Value = Trim(strStrasse)
Abteilung.Value = Trim(strAbt)
PLZOrt.Value = Trim(strPlzOrt)
Tel.Value = Trim(strTEL)
FaxNr.Value = Trim(strFax)
KDNR.Value = Trim(strKDNR)

'MsgBox "strLand: " & strLand & vbCrLf & _
'        "LandKrzl1: " & LandKrzl1 & vbCrLf & _
'        "LandKrzl2: " & LandKrzl2 & vbCrLf & _
'        "LandKrzl3: " & LandKrzl3

strLand = Trim(strLand)

If strLand <> "" And strLand <> LandKrzl1 And strLand <> LandKrzl2 And strLand <> LandKrzl3 Then
        If AuslStadtGross Then  ' Schreibt ausl|fffd|ndiche Stadte + L|fffd|nder gro|fffd| (Aus Dokumenteigenschaften ausgelesen
            OrtLand.Value = UCase(Trim(strOrt) & " / " & strLand)
          Else
            OrtLand.Value = Trim(strOrt) & " / " & strLand
        End If
     Else
            OrtLand.Value = Trim(strOrt)
End If


If strAbt <> "" Then
        FirmaAbteilung = Trim(strFirma & vbCrLf & strAbt)
End If

Anrede_func  'Prozedur f|fffd|r richtige Anrede

AdresseAnzeigen ' Aktualisiert Fenster zum Anzeigen der Adresse
'Zur Box Ihr Zeichen springen
IhrZeichen.SetFocus

End Sub


Private Sub Anrede_Change()
    Anrede_func  'Prozedur f|fffd|r richtige Anrede
    anrede_sel  'Prozedurt f|fffd|r richtige Anrede mit Select
    AdresseAnzeigen ' Aktualisiert Fenster zum Anzeigen der Adresse

End Sub
Private Sub Titel_Enter()
    Anrede_func  'Prozedur f|fffd|r richtige Anrede
    anrede_sel  'Prozedurt f|fffd|r richtige Anrede mit Select
    AdresseAnzeigen ' Aktualisiert Fenster zum Anzeigen der Adresse
End Sub
Private Sub Titel_Change()
    Anrede_func  'Prozedur f|fffd|r richtige Anrede
    anrede_sel  'Prozedurt f|fffd|r richtige Anrede mit Select
    AdresseAnzeigen ' Aktualisiert Fenster zum Anzeigen der Adresse

End Sub
Private Sub Vorname_Enter()
    If Titel.Value <> "" Then
        VName = Trim(Titel.Value & " " & Vorname.Value & " " & Nam.Value)
        KName = Trim(Titel.Value & " " & Nam.Value)
    Else
        VName = Trim(Vorname.Value & " " & Nam.Value)
        KName = Trim(Nam.Value)
    End If
End Sub
Private Sub Vorname_Change()
    Anrede_func  'Prozedur f|fffd|r richtige Anrede
    anrede_sel  'Prozedurt f|fffd|r richtige Anrede mit Select
    AdresseAnzeigen ' Aktualisiert Fenster zum Anzeigen der Adresse
End Sub
Private Sub Nam_Change()
    Anrede_func  'Prozedur f|fffd|r richtige Anrede

    anrede_sel  'Prozedurt f|fffd|r richtige Anrede mit Select
    AdresseAnzeigen ' Aktualisiert Fenster zum Anzeigen der Adresse
End Sub
Private Sub Adresse_Enter()
    Anrede_func  'Prozedurt f|fffd|r richtige Anrede

End Sub
Private Sub Adresse_Change()
    Anrede_func  'Prozedurt f|fffd|r richtige Anrede
    AdresseAnzeigen ' Aktualisiert Fenster zum Anzeigen der Adresse
End Sub
Private Sub Firma_Enter()
    Anrede_func  'Prozedurt f|fffd|r richtige Anrede

End Sub
Private Sub Firma_Change()
    Anrede_func  'Prozedurt f|fffd|r richtige Anrede
    AdresseAnzeigen ' Aktualisiert Fenster zum Anzeigen der Adresse
End Sub
Private Sub PLZOrt_Change()
    Anrede_func  'Prozedurt f|fffd|r richtige Anrede
    AdresseAnzeigen ' Aktualisiert Fenster zum Anzeigen der Adresse
End Sub
Private Sub PLZOrt_Enter()
    Anrede_func  'Prozedurt f|fffd|r richtige Anrede

End Sub

Private Sub Anrede_func()
If Anrede.Value = "Herr" Then
        strMAnrede = Trim(Anrede.Value & "n")
    Else
        strMAnrede = Trim(Anrede.Value)
    End If

    If Vorname.Value <> "" Then
    LeerzeichenVorname = " "
        Else
        LeerzeichenVorname = ""
    End If
    If Titel.Value <> "" Then
        VName = Trim(Titel.Value & LeerzeichenVorname & Vorname.Value & " " & Nam.Value)
        KName = Trim(Titel.Value & " " & Nam.Value)
    Else
        VName = Trim(Vorname.Value & LeerzeichenVorname & Nam.Value)
        KName = Trim(Nam.Value)
    End If
    If Vorname.Value <> "" Then
        LeerzeichenVorname = " "
        Else
        LeerzeichenVorname = ""
    End If

End Sub

Private Sub anrede_sel()
    If Anrede.Value = "Herr" Then
        strMAnrede = Trim(Anrede.Value & "n")
    Else
        strMAnrede = Trim(Anrede.Value)
    End If

    If Vorname.Value <> "" Then
    LeerzeichenVorname = " "
        Else
        LeerzeichenVorname = ""
    End If

    If Titel.Value <> "" Then
        VName = Trim(Titel.Value & LeerzeichenVorname & Vorname.Value & " " & Nam.Value)
        KName = Trim(Titel.Value & " " & Nam.Value)
    Else
        VName = Trim(Vorname.Value & LeerzeichenVorname & Nam.Value)
        KName = Trim(Nam.Value)
    End If


    Select Case Anrede
    Case "Herr"
        If Nam.Value = "" Then
            Briefanred.Value = "Sehr geehrte Damen und Herren" & BriefanredenEndZeichen
            Else
            Briefanred.Value = "Sehr geehrter Herr " & KName & BriefanredenEndZeichen
            Briefanred.Clear
            Briefanred.AddItem "Sehr geehrter Herr " & KName & BriefanredenEndZeichen
            Briefanred.AddItem "Hallo Herr " & KName & BriefanredenEndZeichen
            Briefanred.AddItem "Guten Tag Herr " & KName & BriefanredenEndZeichen
            Briefanred.AddItem "Hallo " & Vorname.Value & BriefanredenEndZeichen
            Briefanred.AddItem "Lieber Herr " & KName & BriefanredenEndZeichen
            If Titel.Value <> "" Then
              Briefanred.AddItem "Lieber Herr " & Nam.Value & BriefanredenEndZeichen
            End If
            Briefanred.AddItem "Lieber " & Vorname.Value & BriefanredenEndZeichen
        End If
    Case "Herrn"
        If Nam.Value = "" Then
            Briefanred.Value = "Sehr geehrte Damen und Herren" & BriefanredenEndZeichen
            Else
            Briefanred.Value = "Sehr geehrter Herr " & KName & BriefanredenEndZeichen
            Briefanred.Clear
            Briefanred.AddItem "Sehr geehrter Herr " & KName & BriefanredenEndZeichen
            Briefanred.AddItem "Hallo Herr " & KName & BriefanredenEndZeichen
            Briefanred.AddItem "Guten Tag Herr " & KName & BriefanredenEndZeichen
            Briefanred.AddItem "Hallo " & Vorname.Value & BriefanredenEndZeichen
            Briefanred.AddItem "Lieber Herr " & KName & BriefanredenEndZeichen
            If Titel.Value <> "" Then
              Briefanred.AddItem "Lieber Herr " & Nam.Value & BriefanredenEndZeichen
            End If
            Briefanred.AddItem "Lieber " & Vorname.Value & BriefanredenEndZeichen
        End If
    Case "Frau"
        If Nam.Value = "" Then
            Briefanred.Value = "Sehr geehrte Damen und Herren" & BriefanredenEndZeichen
        Else
            Briefanred.Value = "Sehr geehrte Frau " & KName & BriefanredenEndZeichen
            Briefanred.Clear
            Briefanred.AddItem "Sehr geehrte Frau " & KName & BriefanredenEndZeichen
            Briefanred.AddItem "Hallo Frau " & KName & BriefanredenEndZeichen
            Briefanred.AddItem "Guten Tag Frau " & KName & BriefanredenEndZeichen
            Briefanred.AddItem "Hallo " & Vorname.Value & BriefanredenEndZeichen
            Briefanred.AddItem "Liebe Frau " & KName & BriefanredenEndZeichen
            If Titel.Value <> "" Then
              Briefanred.AddItem "Liebe Frau " & Nam.Value & BriefanredenEndZeichen
            End If
            Briefanred.AddItem "Liebe " & Vorname.Value & BriefanredenEndZeichen
            End If
    Case "Schwester"
        If Nam.Value = "" Then
            Briefanred.Value = "Sehr geehrte Schwester" & BriefanredenEndZeichen
            Briefanred.Clear
            Briefanred.AddItem "Sehr geehrte Schwester" & BriefanredenEndZeichen
            Briefanred.AddItem "Liebe Schwester" & BriefanredenEndZeichen
            Briefanred.AddItem "Sehr geehrte Schwestern" & BriefanredenEndZeichen
        Else
            Briefanred.Value = "Sehr geehrte Schwester " & VName & BriefanredenEndZeichen
            Briefanred.Clear
            Briefanred.AddItem "Sehr geehrte Schwester " & VName & BriefanredenEndZeichen
            Briefanred.AddItem "Liebe Schwester " & VName & BriefanredenEndZeichen
            Briefanred.AddItem "Sehr geehrte Schwester " & KName & BriefanredenEndZeichen
            Briefanred.AddItem "Sehr geehrte Schwester " & Vorname.Value & BriefanredenEndZeichen
            Briefanred.AddItem "Liebe Schwester " & KName & BriefanredenEndZeichen
            Briefanred.AddItem "Liebe Schwester " & Vorname.Value & BriefanredenEndZeichen
        End If
    Case "Familie"
        If Nam.Value = "" Then
            Briefanred.Value = "Sehr geehrte Damen und Herren" & BriefanredenEndZeichen
            Else
            Briefanred.Value = "Sehr geehrte Familie " & KName & BriefanredenEndZeichen
            Briefanred.Clear
            Briefanred.AddItem "Sehr geehrte Familie " & KName & BriefanredenEndZeichen
            Briefanred.AddItem "Hallo Familie " & KName & BriefanredenEndZeichen
            Briefanred.AddItem "Guten Tag Familie " & KName & BriefanredenEndZeichen
            Briefanred.AddItem "Hallo " & Vorname.Value & BriefanredenEndZeichen
            Briefanred.AddItem "Liebe Familie " & KName & BriefanredenEndZeichen
          If Titel.Value <> "" Then
            Briefanred.AddItem "Liebe Familie " & Nam.Value & BriefanredenEndZeichen
          End If
            Briefanred.AddItem "Liebe " & Vorname.Value & BriefanredenEndZeichen
            Briefanred.AddItem "Lieber " & Vorname.Value & BriefanredenEndZeichen
            End If
'Englisch
     Case "Mr."
        If Nam.Value = "" Then
            Briefanred.Value = "Dear Sir or Madam" & BriefanredenEndZeichen
            Else
            Briefanred.Value = "Dear " & Anrede & " " & KName & BriefanredenEndZeichen
            Briefanred.Clear
            Briefanred.AddItem "Dear " & Anrede & " " & KName & BriefanredenEndZeichen
            Briefanred.AddItem "Hello " & Anrede & " " & KName & BriefanredenEndZeichen
            Briefanred.AddItem "Hello " & Vorname.Value & BriefanredenEndZeichen
            If Titel.Value <> "" Then
              Briefanred.AddItem "Hello " & Anrede & " " & Nam.Value & BriefanredenEndZeichen
            End If
        End If
     Case "Messrs."
        If Nam.Value = "" Then
            Briefanred.Value = "Dear Sir or Madam" & BriefanredenEndZeichen
            Else
            Briefanred.Value = "Dear " & Anrede & " " & KName & BriefanredenEndZeichen
            Briefanred.Clear
            Briefanred.AddItem "Dear " & Anrede & " " & KName & BriefanredenEndZeichen
            Briefanred.AddItem "Hello " & Anrede & " " & KName & BriefanredenEndZeichen
            Briefanred.AddItem "Hello " & Vorname.Value & BriefanredenEndZeichen
            If Titel.Value <> "" Then
              Briefanred.AddItem "Hello " & Anrede & " " & Nam.Value & BriefanredenEndZeichen
            End If
        End If
     Case "Ms."
        If Nam.Value = "" Then
            Briefanred.Value = "Dear Sir or Madam" & BriefanredenEndZeichen
            Else
            Briefanred.Value = "Dear " & Anrede & " " & KName & BriefanredenEndZeichen
            Briefanred.Clear
            Briefanred.AddItem "Dear " & Anrede & " " & KName & BriefanredenEndZeichen
            Briefanred.AddItem "Hello " & Anrede & " " & KName & BriefanredenEndZeichen
            Briefanred.AddItem "Hello " & Vorname.Value & BriefanredenEndZeichen
            If Titel.Value <> "" Then
              Briefanred.AddItem "Hello " & Anrede & " " & Nam.Value & BriefanredenEndZeichen
            End If
        End If
     Case "Mss."
        If Nam.Value = "" Then
            Briefanred.Value = "Dear Sir or Madam" & BriefanredenEndZeichen
            Else
            Briefanred.Value = "Dear " & Anrede & " " & KName & BriefanredenEndZeichen
            Briefanred.Clear
            Briefanred.AddItem "Dear " & Anrede & " " & KName & BriefanredenEndZeichen
            Briefanred.AddItem "Hello " & Anrede & " " & KName & BriefanredenEndZeichen
            Briefanred.AddItem "Hello " & Vorname.Value & BriefanredenEndZeichen
            If Titel.Value <> "" Then
              Briefanred.AddItem "Hello " & Anrede & " " & Nam.Value & BriefanredenEndZeichen
            End If
        End If
     Case "Sir Or Madam"
        If Nam.Value = "" Then
            Briefanred.Value = "Dear Sir or Madam" & BriefanredenEndZeichen
            Else
            Briefanred.Value = "Dear " & Anrede & " " & KName & BriefanredenEndZeichen
            Briefanred.Clear
            Briefanred.AddItem "Dear " & Anrede & " " & KName & BriefanredenEndZeichen
            Briefanred.AddItem "Hello " & Anrede & " " & KName & BriefanredenEndZeichen
            Briefanred.AddItem "Hello " & Vorname.Value & BriefanredenEndZeichen
            If Titel.Value <> "" Then
              Briefanred.AddItem "Hello " & Anrede & " " & Nam.Value & BriefanredenEndZeichen
            End If
        End If
        
        
        
    Case Else
        If Nam.Value = "" Then
            Briefanred.Value = "Sehr geehrte Damen und Herren" & BriefanredenEndZeichen
            Briefanred.Clear
            Briefanred.AddItem "Sehr geehrte Damen und Herren" & BriefanredenEndZeichen
            Briefanred.AddItem "Dear Sir or Madam" & BriefanredenEndZeichen
        Else
            Briefanred.Value = "Sehr geehrter Herr " & KName & BriefanredenEndZeichen
            Briefanred.Clear
            Briefanred.AddItem "Sehr geehrter Herr " & KName & BriefanredenEndZeichen
            Briefanred.AddItem "Sehr geehrte Frau " & KName & BriefanredenEndZeichen
            Briefanred.AddItem "Hallo Frau " & KName & BriefanredenEndZeichen
            Briefanred.AddItem "Hallo Herr " & KName & BriefanredenEndZeichen
            Briefanred.AddItem "Guten Tag Frau " & KName & BriefanredenEndZeichen
            Briefanred.AddItem "Guten Tag Herr " & KName & BriefanredenEndZeichen
            Briefanred.AddItem "Liebe Frau " & KName & BriefanredenEndZeichen
            If Titel.Value <> "" Then
              Briefanred.AddItem "Liebe Frau " & Nam.Value & BriefanredenEndZeichen
            End If
            Briefanred.AddItem "Lieber Herr " & KName & BriefanredenEndZeichen
            If Titel.Value <> "" Then
              Briefanred.AddItem "Lieber Herr " & Nam.Value & BriefanredenEndZeichen
            End If
            Briefanred.AddItem "Liebe " & Vorname.Value & BriefanredenEndZeichen
            Briefanred.AddItem "Lieber " & Vorname.Value & BriefanredenEndZeichen
            Briefanred.AddItem "Hallo " & Vorname.Value & BriefanredenEndZeichen
            
            Briefanred.AddItem "Dear Mr. " & KName & BriefanredenEndZeichen
            Briefanred.AddItem "Hello Mr. " & KName & BriefanredenEndZeichen
            Briefanred.AddItem "Hello " & Vorname.Value & BriefanredenEndZeichen
            If Titel.Value <> "" Then
              Briefanred.AddItem "Hello Mr. " & Nam.Value & BriefanredenEndZeichen
            End If
        
            Briefanred.AddItem "Dear Ms. " & KName & BriefanredenEndZeichen
            Briefanred.AddItem "Hello Ms. " & KName & BriefanredenEndZeichen
            Briefanred.AddItem "Hello " & Vorname.Value & BriefanredenEndZeichen
            If Titel.Value <> "" Then
              Briefanred.AddItem "Hello Ms. " & Nam.Value & BriefanredenEndZeichen
            End If
        
            Briefanred.AddItem "Dear Messrs. " & KName & BriefanredenEndZeichen
            Briefanred.AddItem "Hello Messrs. " & KName & BriefanredenEndZeichen
            Briefanred.AddItem "Hello " & Vorname.Value & BriefanredenEndZeichen
            If Titel.Value <> "" Then
              Briefanred.AddItem "Hello Messrs. " & Nam.Value & BriefanredenEndZeichen
            End If
     
            Briefanred.AddItem "Dear Sir Or Madam " & KName & BriefanredenEndZeichen
            Briefanred.AddItem "Hello Sir Or Madam " & KName & BriefanredenEndZeichen
            Briefanred.AddItem "Hello " & Vorname.Value & BriefanredenEndZeichen
            If Titel.Value <> "" Then
              Briefanred.AddItem "Hello Sir Or Madam " & Nam.Value & BriefanredenEndZeichen
            End If
        
     
        End If
    End Select

End Sub


Private Sub OK_Click()
Dim strFirmenAdresse As String, TempDateiname As String
Dim AdresseFertig As String
Dim VAnsprechpartner As String, VAnsprechpartnerP As String
Dim VAnsprechpartnerK As String, VAnsprechpartnerPK As String
Dim VAnred As String, VAnredP As String
Dim VAnredK As String, VAnredPK As String
Dim VVName As String, VKName As String

If DatumSystem < CD Or Version2 = True Then

    If Abteilung.Value <> "" Then   'Sonst wird trotz gel|fffd|schter Abtreilung Abteilung wieder eingef|fffd|gt
        FirmaAbteilung = Trim(Firma.Value & vbCrLf & Abteilung.Value)
    Else
        FirmaAbteilung = Trim(Firma.Value)
    End If
    


AdresseFertig = AdresseAufbereiten(Anrede.Value, Titel.Value, pers|fffd|nlich.Value, _
                                    Vorname.Value, Nam.Value, Firma.Value, Abteilung.Value, _
                                    Adresse.Value, KDNR.Value, False)

VAnsprechpartner = FAnsprechpartner(Anrede.Value, Titel.Value, Vorname.Value, Nam.Value)
VAnsprechpartnerP = FAnsprechpartnerP(Anrede.Value, Titel.Value, Vorname.Value, Nam.Value, KDNR.Value)
VAnsprechpartnerK = FAnsprechpartnerK(Anrede.Value, Titel.Value, Nam.Value)
VAnsprechpartnerPK = FAnsprechpartnerPK(Anrede.Value, Titel.Value, Nam.Value, KDNR.Value)
VAnred = FAnred(Anrede.Value, Titel.Value, Vorname.Value, Nam.Value)
VAnredP = FAnredP(Anrede.Value, Titel.Value, Vorname.Value, Nam.Value, KDNR.Value)
VAnredK = FAnredK(Anrede.Value, Titel.Value, Nam.Value)
VAnredPK = FAnredPK(Anrede.Value, Titel.Value, Nam.Value, KDNR.Value)
VVName = FVName(Titel.Value, Vorname.Value, Nam.Value)
VKName = FKName(Titel.Value, Nam.Value)


If Abbruch = True Then ' Abbruch f|fffd|r den Fall das weder Name noch Firma angegeben Variable ist Public und wird in Funktion gesetzt
    Abbruch = False ' Zur|fffd|cksetzen, damit nach Abbruch weitergearbeitet werden kann
    Exit Sub
End If

If Firma.Value <> "" Then
    strFirmenAdresse = Trim(FirmaAbteilung & vbCrLf & Adresse.Value)
  Else
    strFirmenAdresse = Trim(Adresse.Value)
End If

' Laufende Nummer ermitteln
' Testen ob Speicherordner existieret
On Error GoTo Fehler
Dim SavePathFehler As Boolean
SavePathFehler = False

If UseSavePath = True Then
    Dim AktuellerOrdner As String
    AktuellerOrdner = CurDir
    ChDir (SavePath)
    ChDir AktuellerOrdner
End If

If FileCount = True Then
        LaufendeNummerDateien = LaufendeNummerErmitteln(SavePath, StartCount, FileCountFormat)
End If


' Einf|fffd|gen der Werte entsprechend der Textmarken 1-3


Call TextmarkenEinsetzen("Adresse", AdresseFertig)  ' ge|fffd|ndert
Call TextmarkenEinsetzen("FirmenAdresse", strFirmenAdresse)
Call TextmarkenEinsetzen("Strasse", Adresse.Value)
Call TextmarkenEinsetzen("PLZOrt", PLZOrt.Value)
Call TextmarkenEinsetzen("Abteilung", Abteilung.Value)
Call TextmarkenEinsetzen("IhrZeichen", IhrZeichen.Value)
Call TextmarkenEinsetzen("KDNR", KDNR.Value)
Call TextmarkenEinsetzen("Datum", Datum.Value)
Call TextmarkenEinsetzen("Betreff", Betreff.Value)
Call TextmarkenEinsetzen("Briefanrede", Briefanred.Value)
Call TextmarkenEinsetzen("TelNr", Tel.Value)
Call TextmarkenEinsetzen("FaxNr", FaxNr.Value)
Call TextmarkenEinsetzen("Firma", Firma.Value)
Call TextmarkenEinsetzen("OrtLand", OrtLand.Value)

Call TextmarkenEinsetzen("Ansprechpartner", VAnsprechpartner)
Call TextmarkenEinsetzen("AnsprechpartnerP", VAnsprechpartnerP)
Call TextmarkenEinsetzen("AnsprechpartnerK", VAnsprechpartnerK)
Call TextmarkenEinsetzen("AnsprechpartnerPK", VAnsprechpartnerPK)
Call TextmarkenEinsetzen("Anred", VAnred)
Call TextmarkenEinsetzen("AnredP", VAnredP)
Call TextmarkenEinsetzen("AnredK", VAnredK)
Call TextmarkenEinsetzen("AnredPK", VAnredPK)
Call TextmarkenEinsetzen("VName", VVName)
Call TextmarkenEinsetzen("KName", VKName)

'Separate Textmarke
Call TextmarkenEinsetzen("Titel", Titel.Value)
Call TextmarkenEinsetzen("Vorname", Vorname.Value)
Call TextmarkenEinsetzen("Nachname", Nam.Value)
Call TextmarkenEinsetzen("Anrede", Anrede.Value)
Call TextmarkenEinsetzen("LaufendeNr", LaufendeNummerDateien)
Call TextmarkenEinsetzen("Stichworte", Trim(txt_Stichworte.Value))


'Speichername in Dokumenteigenschaften ablegen
Dim SP_Firma As String, SP_Anred As String, SP_Betreff As String

If Firma.Value <> "" Then
        SP_Firma = Trim(Firma.Value)
    Else
        SP_Firma = "keine Firma"
End If

If Len(Trim(VVName)) > 1 Then
        SP_Anred = Trim(VVName)
    Else
        SP_Anred = "kein Ansprechpartner"
End If

If Betreff.Value <> "" And Betreff.Value <> " " Then
        SP_Betreff = Trim(Betreff.Value)
    Else
        SP_Betreff = "ohne Betreff"
End If

'Vorbelegen des Dateinamens f|fffd|r den Befehl Speichern unter und der Dokumenteigenschaften

On Error Resume Next
Err.Clear

'Vorbelegen des Dateinamens f|fffd|r den Befehl Speichern unter und der Dokumenteigenschaften
On Error Resume Next
Err.Clear


If SpezSaveorder = True And SavorderFile <> "" Then        ' Austauschen der Speicherordnung falls im Dateiname entwas anderses angegeben
        TempDateiname = SpeichernameErmitteln(SavorderFile, _
            SP_Firma, SP_Anred, SP_Betreff, Datum.Value, KDNR.Value, SavePrefix, Save_Dat_Form, LaufendeNummerDateien, Trim(txt_Stichworte.Value), IhrZeichen.Value)

    Else
        TempDateiname = SpeichernameErmitteln(SpeichernameGenerell, _
            SP_Firma, SP_Anred, SP_Betreff, Datum.Value, KDNR.Value, SavePrefix, Save_Dat_Form, LaufendeNummerDateien, Trim(txt_Stichworte.Value), IhrZeichen.Value)
End If

' ung|fffd|ltige Zeichen f|fffd|r Dateinamen ersetzen

TempDateiname = Trim(ungueltZeicheErs1(TempDateiname, WerbungEig)) 'Tabulatoren, Zeilenwechsel, Zeilenwechsel duch Leerzeichen ersetzen, Dateiname und ggf. Werbung in dateieigenschaften

If Dat_kurz = False Then    'Dateiname nicht abschneiden
    If SP_Umlaute = False Then
        TempDateiname = Trim(UmlauteErs(TempDateiname)) '|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|@|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd|ber benutzerdef. Funktion
    End If

Else    ' Dateiname abschneiden

'Firmennamen f|fffd|r Dateiname korrigieren
  If Firma.Value <> "" Then
        SP_Firma = Firma.Value
            If SP_Umlaute = False Then
                SP_Firma = UmlauteErs(SP_Firma)  'Umlaute ersetzen, bei denen aus einem 2 Zeichen werden  |fffd|ber benutzerdef. Funktion
            End If
            SP_Firma = Mid(SP_Firma, 1, SP_Firma_length)
    Else
        SP_Firma = "k Fa"
        SP_Name_length = SP_Name_length + SP_Firma_length - 4
    End If


'Namen f|fffd|r Dateiname korrigieren

    If Len(Nam.Value) > 1 Then
        SP_Anred = Nam.Value
        If SP_Umlaute = False Then
            SP_Anred = UmlauteErs(SP_Anred)  'Umlaute ersetzen, bei denen aus einem 2 Zeichen werden  |fffd|ber benutzerdef. Funktion
        End If
        SP_Anred = Mid(SP_Anred, 1, SP_Name_length)
    Else
        SP_Anred = "k AP"
        SP_Betreff_length = SP_Betreff_length + SP_Name_length - 4
    End If


'Betreff f|fffd|r Dateiname korrigieren
    If Betreff.Value <> "" Then
        SP_Betreff = Betreff.Value
        If SP_Umlaute = False Then
            SP_Betreff = UmlauteErs(SP_Betreff) 'Umlaute ersetzen, bei denen aus einem 2 Zeichen werden  |fffd|ber benutzerdef. Funktion
        End If
        SP_Betreff = Mid(SP_Betreff, 1, SP_Betreff_length)
   Else
        SP_Betreff = "K_Betr"
    End If

    TempDateiname = _
        SP_Firma & SP_Trennzeichen & _
        SP_Anred & SP_Trennzeichen & _
        SP_Betreff
End If

If SP_Umlaute = False Then  ' Bei lange
 TempDateiname = UmlauteErs1(TempDateiname)   'Alle sonstigen Umlaute ersetzen |fffd|ber benutzerdef. Funktion
End If

TempDateiname = DateinamenKonventionErsetzen(TempDateiname) ' Zeichen die im Dateinamen nicht zul|fffd|ssig sind ersetzen |fffd|ber benutzerdef. Funktion

'Stichworte in Datei schreiben

    If StichworteAnzeigen = True Then
        ActiveDocument.BuiltInDocumentProperties(wdPropertyCategory).Value _
            = txt_Stichworte
    End If

' Daten f|fffd|r Historie in Kommentar

    If Historie = True And Version2 = True Then
        ActiveDocument.BuiltInDocumentProperties(wdPropertyComments).Value _
            = MemoHistorie
    End If



Unload DatenEingabeBrief 'Schlie|fffd|en des Adresseingabeformulars

'Aufruf 5 M|fffd|glicher Folgemodule
Application.Run MacroName:="Anschluss"
Application.Run MacroName:="Anschluss1"
Application.Run MacroName:="Anschluss2"
Application.Run MacroName:="Anschluss3"
Application.Run MacroName:="Anschluss4"
Application.Run MacroName:="Anschluss5"



' Aufrufen des Dialogs Speichern unter mit Vorbelegung des Dateinamens

'MsgBox "SaveWithoutDialog (false): " & SaveWithoutDialog & vbCrLf _
'        & "SavePathFehler (false): " & SavePathFehler & vbCrLf _
'        & "UseSavePath (True): " & UseSavePath & vbCrLf _
'        & "Pfadname: " & SavePath & Application.PathSeparator & TempDateiname, , "Test"


If Speichern.Value Then
    If SaveWithoutDialog = True And SavePathFehler = False And UseSavePath = True Then
            ActiveDocument.SaveAs (SavePath & Application.PathSeparator & TempDateiname)
        ElseIf SaveWithoutDialog = False And SavePathFehler = False And UseSavePath = True Then
            With Dialogs(wdDialogFileSaveAs)
                .Name = SavePath & Application.PathSeparator & TempDateiname
                .Show
            End With

        Else
            With Dialogs(wdDialogFileSaveAs)
                .Name = TempDateiname
                .Show
            End With
    End If
End If

Else ' Wenn keine Lizenz und Test Abgelaufen
    Unload DatenEingabeBrief
    Load Bestellung
    Bestellung.Show
End If

' Globale variablen zur|fffd|cksetzen, damit in n|fffd|chster Datei keine alten Einstellungen verwendet werden

SavePrefix = ""
SavePrefixUse = False
FileCount = False
StartCount = 0
SpezSaveorder = False
SavorderFile = ""
Be1_Betreff = ""
Be1_IhrZeichen = ""
Be1_KDNR = ""
Be1_Stichworte = ""
Save_Dat_Form = ""
LaufendeNummerDateien = ""
UseSavePath = False
SavePath = ""
SaveWithoutDialog = False


Exit Sub

Fehler:
    If Err.Number = 76 Then
        SavePathFehler = True
        MsgBox "Der in der Dateieigenschaft ""SavePath"" der Dokumentvorlage" & vbCrLf & vbCrLf _
            & ActiveDocument.AttachedTemplate.FullName & vbCrLf & vbCrLf _
            & "angegebene Speicherpfad" & vbCrLf & vbCrLf _
            & SavePath & vbCrLf & vbCrLf _
            & "existiert auf Ihrem System nicht!" & vbCrLf & vbCrLf _
            & "Bitte korrigieren Sie ggf. diese Dateieigenschaft oder legen Sie den Ordner an, in dem die Datei gespeichert werden soll!" _
            , vbCritical, Msg_title
        Resume Next
    ElseIf Err.Number = 5 Then
        Err.Clear
        Resume Next
    Else
        MsgBox Err.Number & vbCrLf & vbCrLf & Err.Description, vbCritical, Msg_title
    End If



End Sub

Private Sub Cancel_Click()
    On Error Resume Next
    Unload DatenEingabeBrief
    Exit Sub
End Sub

Private Sub Hilfe_Click()
  Application.Run MacroName:="vorlagenabh|fffd|ngige_Hilfe"
End Sub


Attribute VB_Name = "DatenEingabeFax"
Attribute VB_Base = "0{218C2B85-E971-11E7-AE36-0003FF31812D}{218C2B6C-E971-11E7-AE36-0003FF31812D}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Public FirmaAbteilung As String
Public strHomeFax As String, strFax As String





Private Sub FaxNr_Change()

'MsgBox Trim(FaxNr.Value) & vbCrLf & Trim(strFax)
    If Trim(FaxNr.Value) = Trim(strFax) Then
        FaxNrArt.Caption = "gesch."
    ElseIf Trim(FaxNr.Value) = Trim(strHomeFax) Then
        FaxNrArt.Caption = "Privat"
    Else
        FaxNrArt.Caption = ""
    End If

End Sub

Private Sub UserForm_Initialize()


FehlerMessageBrief = "F|fffd|r ein Fax brauchen Sie einen Ansprechpartner mit Faxnummer und/oder eine Firma!"

Datum.Value = Format(Date, F_Dat_form) 'Vorbelegen des Datums mit dem Format, das aus den Dateieigenschaften ausgelesen wurde
    Datum.AddItem Format(Date, "dd/mm/yyyy")
    Datum.AddItem Format(Date, "yyyy-mm-dd")
    Datum.AddItem Format(Date, "dd. mmm. yyyy")
    Datum.AddItem Format(Date, "dd. mmmm yyyy")
    Datum.AddItem Format(Date, "dddddd")
    Datum.AddItem Format(Date, "dd. mmmm yyyy") & " " & Format(Time, "hh:nn")
    Datum.AddItem Format(Date, "dd.mm.yyyy") & " " & Format(Time, "hh:nn")
    Datum.AddItem Format(Date, "dd.mm.yyyy") & " " & Format(Time, "hh:nn:ss")
    Datum.AddItem Format(Date, "dd.mm.yyyy") & ", " & Format(Time, "hh:nn")
    Datum.AddItem Format(Date, "dd.mm.yyyy") & vbCrLf & Format(Time, "hh:nn")
    Datum.AddItem Format(Date, "dddd, dd.mm.yyyy")
    Datum.AddItem Format(Date, "yy-dd-mm")
    Datum.AddItem Format(Date, "dd/mm/yy")
    Datum.AddItem "KW " & Format(Date, "ww") & " / " & Format(Date, "yyyy")
    Datum.AddItem "KW " & Format(Date, "ww")
    Datum.AddItem Format(Date, "q.") & " Quartal " & Format(Date, "yyyy")
    Datum.AddItem Format(Date, "q") & " / " & Format(Date, "yyyy")
    Datum.AddItem Format(Date, "q") & " / " & Format(Date, "yy")




Anrede.AddItem "Herrn"
Anrede.AddItem "Frau"
Anrede.AddItem "Schwester"
Anrede.AddItem "Familie"

'English
Anrede.AddItem "Mr."                ' Herr
Anrede.AddItem "Messrs."            ' Herren
Anrede.AddItem "Sir Or Madam"       ' Herr oder Frau
Anrede.AddItem "Ms."                ' Frau
Anrede.AddItem "Mss."               ' Frauen


Titel.AddItem "Dr."
Titel.AddItem "Prof."
Titel.AddItem "Mag."
Titel.AddItem "Ing."
Titel.AddItem "Dipl.-Ing."
Titel.AddItem "Pfarrer"


pers|fffd|nlich.Value = "False"
Briefanred.Value = "Sehr geehrte Damen und Herren" & BriefanredenEndZeichen

Werbung.Value = Msg_title




'Auslesen bereits vorhandener Werte der Textmarken
On Error Resume Next
If ActiveDocument.Bookmarks("Betreff").Range <> " " Then  ' Sonst f|fffd|rgen User ggf. Text immer hinter Leerzeichen an und Betreff beginnt nach |fffd|nderung immer mit Leerzeichen
    Betreff.Value = ActiveDocument.Bookmarks("Betreff").Range
End If

If ActiveDocument.Bookmarks("IhrZeichen").Range <> " " Then
    IhrZeichen.Value = ActiveDocument.Bookmarks("IhrZeichen").Range
End If

If ActiveDocument.Bookmarks("KDNR").Range <> " " Then
    KDNR.Value = ActiveDocument.Bookmarks("KDNR").Range
End If



' Anzeigen Stichworte
txt_Stichworte.Value = ActiveDocument.BuiltInDocumentProperties(wdPropertyCategory).Value ' Vorhanden Stichworte zuweisen

If StichworteAnzeigen = True Then
    lbl_Stichworte.Visible = True
    txt_Stichworte.Visible = True
Else
    lbl_Stichworte.Visible = False
    txt_Stichworte.Visible = False
End If

Speichern.Value = SP_Speichern  ' Vorbelegung der Speicheroption entsprechend der Dokumenteigenschaften

Dim Be1_Betreff$, Be1_IhrZeichen$, Be1_KDNR$, Be1_Stichworte$



Be1_Betreff = Be_Betreff
Be1_IhrZeichen = Be_IhrZeichen
'Be1_KDNR = Be_KDNR
Be1_Stichworte = Be_Stichworte

' Dateiegenschaften des Aktive Dokuemnts auslesen Falls Eigenschaft nicht vorhanden, dann Fehler-Nr "5"
On Error GoTo Fehler

Speichern.Value = ActiveDocument.CustomDocumentProperties("SaveFirst")
SaveWithoutDialog = ActiveDocument.CustomDocumentProperties("SaveWithoutDialog")
SavePrefix = ActiveDocument.CustomDocumentProperties("SavePrefix")
SavePrefixUse = ActiveDocument.CustomDocumentProperties("SavePrefixUse")
FileCount = ActiveDocument.CustomDocumentProperties("FileCount")
StartCount = ActiveDocument.CustomDocumentProperties("StartCount")
UseSavePath = ActiveDocument.CustomDocumentProperties("UseSavePath")
SavePath = ActiveDocument.CustomDocumentProperties("SavePath")
SpezSaveorder = ActiveDocument.CustomDocumentProperties("SpezSaveorder")
SavorderFile = ActiveDocument.CustomDocumentProperties("SaveorderFile")
Be1_Betreff = ActiveDocument.CustomDocumentProperties("Bez_Betreff")
Be1_IhrZeichen = ActiveDocument.CustomDocumentProperties("Bez_IhrZeichen")
Be1_KDNR = ActiveDocument.CustomDocumentProperties("Bez_KDNR")
Be1_Stichworte = ActiveDocument.CustomDocumentProperties("Bez_Stichworte")
Save_Dat_Form = ActiveDocument.CustomDocumentProperties("FormatSaveDate")
FileCountFormat = ActiveDocument.CustomDocumentProperties("FileCountFormat")

If FileCountFormat = "" Then FileCountFormat = "0000"

'Beschriften einiger Felder der Dialogbox
Bez_Betreff.Caption = Be1_Betreff
Bez_IhrZeichen.Caption = Be1_IhrZeichen
lbl_Stichworte.Caption = Be1_Stichworte

    If PositionOderKNR <> 0 Then
        Bez_KDNR.Caption = "Position"
    Else
         Bez_KDNR.Caption = Be_KDNR
    End If


Exit Sub
Fehler:
    If Err.Number = 5 Then
        Err.Clear
        Resume Next
    Else
        MsgBox Err.Number & vbCrLf & vbCrLf & Err.Description, vbCritical, Msg_title
    End If


End Sub

Private Sub CommandButton1_Click()
    Dim strFirma$, strAnredeZwischen$, strAnrede$, strTitel$, strVorname$, strName As String
    Dim strStrasse$, strLand$, strPLZ$, strOrt$, strPlzOrt$, strOrtLand$, strTEL, strAbt As String
    Dim strAnred$, strKName$, UmbruchNachname$, UmbruchFirma$, LeerzeichenVorname$, strVName$, strMAnrede$, strVarModi$, strVar As String
    Dim strKDNR$, FritzFaxNR As String, Prop As String

On Error Resume Next

'Prop = "<PR_COMPANY_NAME>;;<PR_DISPLAY_NAME_PREFIX>;;<PR_GIVEN_NAME>;;<PR_SURNAME>;;<PR_STREET_ADDRESS>;;<PR_COUNTRY>;;<PR_POSTAL_CODE>;;<PR_LOCALITY>;;<PR_BUSINESS_FAX_NUMBER>;;<PR_OFFICE_TELEPHONE_NUMBER>;;<PR_DEPARTMENT_NAME>;;<PR_TITLE>;;<PR_HOME_FAX_NUMBER>;;<PR_EMAIL_ADDRESS>;;<PR_ADDRTYPE>;;<PR_HOME_TELEPHONE_NUMBER>;;<PR_CELLULAR_TELEPHONE_NUMBER>;;<PR_OFFICE2_TELEPHONE_NUMBER>"
Prop = "<PR_COMPANY_NAME>;;<PR_DISPLAY_NAME_PREFIX>;;<PR_GIVEN_NAME>;;<PR_SURNAME>;;<PR_STREET_ADDRESS>;;<PR_COUNTRY>;;<PR_POSTAL_CODE>;;<PR_LOCALITY>;;<PR_BUSINESS_FAX_NUMBER>;;<PR_OFFICE_TELEPHONE_NUMBER>;;<PR_DEPARTMENT_NAME>;;<PR_TITLE>;;<PR_HOME_FAX_NUMBER>"

strVar = Application.GetAddress(AddressProperties:=Prop, UseAutoText:=False)
MemoHistorie = strVar
strVarModi = strVar


'Firma
    strFirma = Mid(strVarModi, 1, InStr(1, strVar, ";;") - 1)
'Anrede vom strVarModi l|fffd|schen
    strVarModi = Right(strVarModi, Len(strVarModi) - (InStr(1, strVarModi, ";;") + 1))

'ANREDE
'Zwischenfeld zur Trennung von ANREDE und Titel
         strAnredeZwischen = Mid(strVarModi, 1, InStr(1, strVarModi, ";;") - 1)
'Anrede vom strVarModi l|fffd|schen
         strVarModi = Right(strVarModi, Len(strVarModi) - (InStr(1, strVarModi, ";;") + 1))

'Pr|fffd|fung ob strAnredeZwischen ein Leerzeichen enth|fffd|lt und Aufteilung TExt vor leerzeichen in Anrede und nach Leerzeichen in Titel
       If InStr(1, strAnredeZwischen, " ") <> 0 Then
            'ANREDE
                strAnrede = Mid(strAnredeZwischen, 1, InStr(1, strAnredeZwischen, " ") - 1)
                'Anrede vom strVarModi l|fffd|schen
                strAnredeZwischen = Right(strAnredeZwischen, Len(strAnredeZwischen) - InStr(1, strAnredeZwischen, " "))
    
            'TITEL
                strTitel = strAnredeZwischen
    
              Else
                strAnrede = strAnredeZwischen
        End If

'VORNAME
    strVorname = Mid(strVarModi, 1, InStr(1, strVarModi, ";;") - 1)
    'Vorname vom strVarModi l|fffd|schen
    strVarModi = Right(strVarModi, Len(strVarModi) - (InStr(1, strVarModi, ";;") + 1))

'NAME
     strName = Mid(strVarModi, 1, InStr(1, strVarModi, ";;") - 1)
'Name vom strVarModi l|fffd|schen
     strVarModi = Right(strVarModi, Len(strVarModi) - (InStr(1, strVarModi, ";;") + 1))

'Stra|fffd|e
     strStrasse = Mid(strVarModi, 1, InStr(1, strVarModi, ";;") - 1)
'Stra|fffd|e vom strVarModi l|fffd|schen
     strVarModi = Right(strVarModi, Len(strVarModi) - (InStr(1, strVarModi, ";;") + 1))

'Land
     strLand = Mid(strVarModi, 1, InStr(1, strVarModi, ";;") - 1)
'Land vom strVarModi l|fffd|schen
     strVarModi = Right(strVarModi, Len(strVarModi) - (InStr(1, strVarModi, ";;") + 1))

'PLZ
     strPLZ = Mid(strVarModi, 1, InStr(1, strVarModi, ";;") - 1)
'PLZ vom strVarModi l|fffd|schen
     strVarModi = Right(strVarModi, Len(strVarModi) - (InStr(1, strVarModi, ";;") + 1))

'Ort
     strOrt = Mid(strVarModi, 1, InStr(1, strVarModi, ";;") - 1)
'Ort vom strVarModi l|fffd|schen
     strVarModi = Right(strVarModi, Len(strVarModi) - (InStr(1, strVarModi, ";;") + 1))

'Fax
     strFax = Mid(strVarModi, 1, InStr(1, strVarModi, ";;") - 1)
    'Ort vom strVarModi l|fffd|schen
     strVarModi = Right(strVarModi, Len(strVarModi) - (InStr(1, strVarModi, ";;") + 1))

'Tel
     strTEL = Mid(strVarModi, 1, InStr(1, strVarModi, ";;") - 1)
     strVarModi = Right(strVarModi, Len(strVarModi) - (InStr(1, strVarModi, ";;") + 1))

'Abteilung
     strAbt = Mid(strVarModi, 1, InStr(1, strVarModi, ";;") - 1)
     strVarModi = Right(strVarModi, Len(strVarModi) - (InStr(1, strVarModi, ";;") + 1))

 'Eigene Kundenummer in Kontakt unter Position gef|fffd|hrt

     strKDNR = Mid(strVarModi, 1, InStr(1, strVarModi, ";;") - 1)
     strVarModi = Right(strVarModi, Len(strVarModi) - (InStr(1, strVarModi, ";;") + 1))
'MsgBox "Eigene Kundenummer in Kontakt unter Position gef|fffd|hrt: " & strKDNR

'PrivatFax
     strHomeFax = strVarModi

'     strHomeFax = Mid(strVarModi, 1, InStr(1, strVarModi, ";;") - 1)
'     strVarModi = Right(strVarModi, Len(strVarModi) - (InStr(1, strVarModi, ";;") + 1))




    'Zusammenf|fffd|hren von LAnd PLZ und Ort dabei Land eine Zeile tiefer
    If strLand <> "" And strLand <> LandKrzl1 And strLand <> LandKrzl2 And strLand <> LandKrzl3 Then
        If strPLZ <> "" Then
            If AuslStadtGross Then  ' Schreibt ausl|fffd|ndiche Stadte + L|fffd|nder gro|fffd| (Aus Dokumenteigenschaften ausgelesen
                    strPlzOrt = Trim(Trim(strPLZ) & " " & UCase(Trim(strOrt)) & vbCrLf & UCase(Trim(strLand)))
                Else
                    strPlzOrt = Trim(Trim(strPLZ) & " " & Trim(strOrt) & vbCrLf & Trim(strLand))
            End If
           Else
            If AuslStadtGross Then  ' Schreibt ausl|fffd|ndiche Stadte + L|fffd|nder gro|fffd| (Aus Dokumenteigenschaften ausgelesen
                    strPlzOrt = UCase(Trim(Trim(strOrt)) & vbCrLf & UCase(Trim(strLand)))
                Else
                    strPlzOrt = Trim(Trim(strOrt) & vbCrLf & Trim(strLand))
            End If
        End If
     Else
        If strPLZ <> "" Then
            strPlzOrt = Trim(Trim(strPLZ) & " " & Trim(strOrt))
           Else
            strPlzOrt = Trim(strOrt)
        End If
    End If


'Zuweisung der Adressbucheintr|fffd|ge als Standartwerte f|fffd|r die Textboxen

Anrede.Value = Trim(strAnrede)
Titel.Value = Trim(strTitel)
Vorname.Value = Trim(strVorname)
Nam.Value = Trim(strName)
Firma.Value = Trim(strFirma)
Adresse.Value = Trim(strStrasse)
Abteilung.Value = Trim(strAbt)
PLZOrt.Value = Trim(strPlzOrt)
Tel.Value = Trim(strTEL)
FaxNr.Value = Trim(strFax)
KDNR.Value = Trim(strKDNR)

Dim MyArray(2, 2)

    MyArray(0, 0) = Trim(strFax) ' gesch|fffd|ftliche Faxnummer
    MyArray(0, 1) = Trim(strHomeFax) ' private Faxnummer

    MyArray(1, 0) = "gesch|fffd|ftl."
    MyArray(1, 1) = "Privat"

    FaxNr.Column() = MyArray


strLand = Trim(strLand)

If strLand <> "" And strLand <> LandKrzl1 And strLand <> LandKrzl2 And strLand <> LandKrzl3 Then
        If AuslStadtGross Then  ' Schreibt ausl|fffd|ndiche Stadte + L|fffd|nder gro|fffd| (Aus Dokumenteigenschaften ausgelesen
            OrtLand.Value = UCase(Trim(strOrt) & " / " & strLand)
          Else
            OrtLand.Value = Trim(strOrt) & " / " & strLand
        End If
     Else
            OrtLand.Value = Trim(strOrt)
End If

If strAbt <> "" Then
        FirmaAbteilung = Trim(Trim(strFirma) & vbCrLf & Trim(strAbt))
End If

Anrede_func  'Prozedur f|fffd|r richtige Anrede

    If PositionOderKNR <> 0 Then
        Bez_KDNR.Caption = "Position"
    Else
         Bez_KDNR.Caption = Be_KDNR
    End If


'Zur Box Ihr Zeichen springen
IhrZeichen.SetFocus
End Sub


Private Sub Anrede_Change()
    Anrede_func  'Prozedur f|fffd|r richtige Anrede
    anrede_sel  'Prozedurt f|fffd|r richtige Anrede mit Select
End Sub
Private Sub Titel_Enter()
    Anrede_func  'Prozedur f|fffd|r richtige Anrede
    anrede_sel  'Prozedurt f|fffd|r richtige Anrede mit Select
End Sub

Private Sub Titel_Change()
    Anrede_func  'Prozedur f|fffd|r richtige Anrede
    anrede_sel  'Prozedurt f|fffd|r richtige Anrede mit Select
End Sub
Private Sub Vorname_Enter()
    If Titel.Value <> "" Then
        VName = Trim(Trim(Titel.Value) & " " & Trim(Vorname.Value) & " " & Trim(Nam.Value))
        KName = Trim(Trim(Titel.Value) & " " & Trim(Nam.Value))
    Else
        VName = Trim(Trim(Vorname.Value) & " " & Trim(Nam.Value))
        KName = Trim(Nam.Value)
    End If
End Sub
Private Sub Vorname_Change()
    Anrede_func  'Prozedur f|fffd|r richtige Anrede
    anrede_sel  'Prozedurt f|fffd|r richtige Anrede mit Select
End Sub
Private Sub Nam_Change()
    Anrede_func  'Prozedur f|fffd|r richtige Anrede

    anrede_sel  'Prozedurt f|fffd|r richtige Anrede mit Select
End Sub
Private Sub Adresse_Enter()
    Anrede_func  'Prozedurt f|fffd|r richtige Anrede

End Sub
Private Sub Adresse_Change()
    Anrede_func  'Prozedurt f|fffd|r richtige Anrede

End Sub
Private Sub Firma_Enter()
    Anrede_func  'Prozedurt f|fffd|r richtige Anrede

End Sub
Private Sub Firma_Change()
    Anrede_func  'Prozedurt f|fffd|r richtige Anrede

End Sub
Private Sub PLZOrt_Enter()
    Anrede_func  'Prozedurt f|fffd|r richtige Anrede

End Sub
Private Sub PLZOrt_Change()
    Anrede_func  'Prozedurt f|fffd|r richtige Anrede

End Sub

Sub Anrede_func()
If Anrede.Value = "Herr" Then
        strMAnrede = Trim(Anrede.Value & "n")
    Else
        strMAnrede = Trim(Anrede.Value)
    End If

    If Vorname.Value <> "" Then
    LeerzeichenVorname = " "
        Else
        LeerzeichenVorname = ""
    End If
    If Titel.Value <> "" Then
        VName = Trim(Trim(Titel.Value) & LeerzeichenVorname & Trim(Vorname.Value) & " " & Trim(Nam.Value))
        KName = Trim(Trim(Titel.Value) & " " & Trim(Nam.Value))
    Else
        VName = Trim(Trim(Vorname.Value) & LeerzeichenVorname & Trim(Nam.Value))
        KName = Trim(Nam.Value)
    End If
    If Vorname.Value <> "" Then
        LeerzeichenVorname = " "
        Else
        LeerzeichenVorname = ""
    End If

End Sub

Sub anrede_sel()
    If Anrede.Value = "Herr" Then
        strMAnrede = Trim(Anrede.Value & "n")
    Else
        strMAnrede = Trim(Anrede.Value)
    End If

    If Vorname.Value <> "" Then
    LeerzeichenVorname = " "
        Else
        LeerzeichenVorname = ""
    End If

    If Titel.Value <> "" Then
        VName = Trim(Trim(Titel.Value) & LeerzeichenVorname & Trim(Vorname.Value) & " " & Trim(Nam.Value))
        KName = Trim(Trim(Titel.Value) & " " & Trim(Nam.Value))
    Else
        VName = Trim(Trim(Vorname.Value) & LeerzeichenVorname & Trim(Nam.Value))
        KName = Trim(Nam.Value)
    End If


    Select Case Anrede
    Case "Herr"
        If Nam.Value = "" Then
            Briefanred.Value = "Sehr geehrte Damen und Herren" & BriefanredenEndZeichen
            Else
            Briefanred.Value = "Sehr geehrter Herr " & KName & BriefanredenEndZeichen
            Briefanred.Clear
            Briefanred.AddItem "Sehr geehrter Herr " & KName & BriefanredenEndZeichen
            Briefanred.AddItem "Hallo Herr " & KName & BriefanredenEndZeichen
            Briefanred.AddItem "Guten Tag Herr " & KName & BriefanredenEndZeichen
            Briefanred.AddItem "Hallo " & Vorname.Value & BriefanredenEndZeichen
            Briefanred.AddItem "Lieber Herr " & KName & BriefanredenEndZeichen
            If Titel.Value <> "" Then
              Briefanred.AddItem "Lieber Herr " & Nam.Value & BriefanredenEndZeichen
            End If
            Briefanred.AddItem "Lieber " & Vorname.Value & BriefanredenEndZeichen
        End If
    Case "Herrn"
        If Nam.Value = "" Then
            Briefanred.Value = "Sehr geehrte Damen und Herren" & BriefanredenEndZeichen
            Else
            Briefanred.Value = "Sehr geehrter Herr " & KName & BriefanredenEndZeichen
            Briefanred.Clear
            Briefanred.AddItem "Sehr geehrter Herr " & KName & BriefanredenEndZeichen
            Briefanred.AddItem "Hallo Herr " & KName & BriefanredenEndZeichen
            Briefanred.AddItem "Guten Tag Herr " & KName & BriefanredenEndZeichen
            Briefanred.AddItem "Hallo " & Vorname.Value & BriefanredenEndZeichen
            Briefanred.AddItem "Lieber Herr " & KName & BriefanredenEndZeichen
            If Titel.Value <> "" Then
              Briefanred.AddItem "Lieber Herr " & Nam.Value & BriefanredenEndZeichen
            End If
            Briefanred.AddItem "Lieber " & Vorname.Value & BriefanredenEndZeichen
        End If
    Case "Frau"
        If Nam.Value = "" Then
            Briefanred.Value = "Sehr geehrte Damen und Herren" & BriefanredenEndZeichen
        Else
            Briefanred.Value = "Sehr geehrte Frau " & KName & BriefanredenEndZeichen
            Briefanred.Clear
            Briefanred.AddItem "Sehr geehrte Frau " & KName & BriefanredenEndZeichen
            Briefanred.AddItem "Hallo Frau " & KName & BriefanredenEndZeichen
            Briefanred.AddItem "Guten Tag Frau " & KName & BriefanredenEndZeichen
            Briefanred.AddItem "Hallo " & Vorname.Value & BriefanredenEndZeichen
            Briefanred.AddItem "Liebe Frau " & KName & BriefanredenEndZeichen
            If Titel.Value <> "" Then
              Briefanred.AddItem "Liebe Frau " & Nam.Value & BriefanredenEndZeichen
            End If
            Briefanred.AddItem "Liebe " & Vorname.Value & BriefanredenEndZeichen
            End If
    Case "Schwester"
        If Nam.Value = "" Then
            Briefanred.Value = "Sehr geehrte Schwester" & BriefanredenEndZeichen
            Briefanred.Clear
            Briefanred.AddItem "Sehr geehrte Schwester" & BriefanredenEndZeichen
            Briefanred.AddItem "Liebe Schwester" & BriefanredenEndZeichen
            Briefanred.AddItem "Sehr geehrte Schwestern" & BriefanredenEndZeichen
        Else
            Briefanred.Value = "Sehr geehrte Schwester " & VName & BriefanredenEndZeichen
            Briefanred.Clear
            Briefanred.AddItem "Sehr geehrte Schwester " & VName & BriefanredenEndZeichen
            Briefanred.AddItem "Liebe Schwester " & VName & BriefanredenEndZeichen
            Briefanred.AddItem "Sehr geehrte Schwester " & KName & BriefanredenEndZeichen
            Briefanred.AddItem "Sehr geehrte Schwester " & Vorname.Value & BriefanredenEndZeichen
            Briefanred.AddItem "Liebe Schwester " & KName & BriefanredenEndZeichen
            Briefanred.AddItem "Liebe Schwester " & Vorname.Value & BriefanredenEndZeichen
        End If
    Case "Familie"
        If Nam.Value = "" Then
            Briefanred.Value = "Sehr geehrte Damen und Herren" & BriefanredenEndZeichen
            Else
            Briefanred.Value = "Sehr geehrte Familie " & KName & BriefanredenEndZeichen
            Briefanred.Clear
            Briefanred.AddItem "Sehr geehrte Familie " & KName & BriefanredenEndZeichen
            Briefanred.AddItem "Hallo Familie " & KName & BriefanredenEndZeichen
            Briefanred.AddItem "Guten Tag Familie " & KName & BriefanredenEndZeichen
            Briefanred.AddItem "Hallo " & Vorname.Value & BriefanredenEndZeichen
            Briefanred.AddItem "Liebe Familie " & KName & BriefanredenEndZeichen
          If Titel.Value <> "" Then
            Briefanred.AddItem "Liebe Familie " & Nam.Value & BriefanredenEndZeichen
          End If
            Briefanred.AddItem "Liebe " & Vorname.Value & BriefanredenEndZeichen
            Briefanred.AddItem "Lieber " & Vorname.Value & BriefanredenEndZeichen
            End If
'Englisch
     Case "Mr."
        If Nam.Value = "" Then
            Briefanred.Value = "Dear Sir or Madam" & BriefanredenEndZeichen
            Else
            Briefanred.Value = "Dear " & Anrede & " " & KName & BriefanredenEndZeichen
            Briefanred.Clear
            Briefanred.AddItem "Dear " & Anrede & " " & KName & BriefanredenEndZeichen
            Briefanred.AddItem "Hello " & Anrede & " " & KName & BriefanredenEndZeichen
            Briefanred.AddItem "Hello " & Vorname.Value & BriefanredenEndZeichen
            If Titel.Value <> "" Then
              Briefanred.AddItem "Hello " & Anrede & " " & Nam.Value & BriefanredenEndZeichen
            End If
        End If
     Case "Messrs."
        If Nam.Value = "" Then
            Briefanred.Value = "Dear Sir or Madam" & BriefanredenEndZeichen
            Else
            Briefanred.Value = "Dear " & Anrede & " " & KName & BriefanredenEndZeichen
            Briefanred.Clear
            Briefanred.AddItem "Dear " & Anrede & " " & KName & BriefanredenEndZeichen
            Briefanred.AddItem "Hello " & Anrede & " " & KName & BriefanredenEndZeichen
            Briefanred.AddItem "Hello " & Vorname.Value & BriefanredenEndZeichen
            If Titel.Value <> "" Then
              Briefanred.AddItem "Hello " & Anrede & " " & Nam.Value & BriefanredenEndZeichen
            End If
        End If
     Case "Ms."
        If Nam.Value = "" Then
            Briefanred.Value = "Dear Sir or Madam" & BriefanredenEndZeichen
            Else
            Briefanred.Value = "Dear " & Anrede & " " & KName & BriefanredenEndZeichen
            Briefanred.Clear
            Briefanred.AddItem "Dear " & Anrede & " " & KName & BriefanredenEndZeichen
            Briefanred.AddItem "Hello " & Anrede & " " & KName & BriefanredenEndZeichen
            Briefanred.AddItem "Hello " & Vorname.Value & BriefanredenEndZeichen
            If Titel.Value <> "" Then
              Briefanred.AddItem "Hello " & Anrede & " " & Nam.Value & BriefanredenEndZeichen
            End If
        End If
     Case "Mss."
        If Nam.Value = "" Then
            Briefanred.Value = "Dear Sir or Madam" & BriefanredenEndZeichen
            Else
            Briefanred.Value = "Dear " & Anrede & " " & KName & BriefanredenEndZeichen
            Briefanred.Clear
            Briefanred.AddItem "Dear " & Anrede & " " & KName & BriefanredenEndZeichen
            Briefanred.AddItem "Hello " & Anrede & " " & KName & BriefanredenEndZeichen
            Briefanred.AddItem "Hello " & Vorname.Value & BriefanredenEndZeichen
            If Titel.Value <> "" Then
              Briefanred.AddItem "Hello " & Anrede & " " & Nam.Value & BriefanredenEndZeichen
            End If
        End If
     Case "Sir Or Madam"
        If Nam.Value = "" Then
            Briefanred.Value = "Dear Sir or Madam" & BriefanredenEndZeichen
            Else
            Briefanred.Value = "Dear " & Anrede & " " & KName & BriefanredenEndZeichen
            Briefanred.Clear
            Briefanred.AddItem "Dear " & Anrede & " " & KName & BriefanredenEndZeichen
            Briefanred.AddItem "Hello " & Anrede & " " & KName & BriefanredenEndZeichen
            Briefanred.AddItem "Hello " & Vorname.Value & BriefanredenEndZeichen
            If Titel.Value <> "" Then
              Briefanred.AddItem "Hello " & Anrede & " " & Nam.Value & BriefanredenEndZeichen
            End If
        End If
        
    Case Else
        If Nam.Value = "" Then
            Briefanred.Value = "Sehr geehrte Damen und Herren" & BriefanredenEndZeichen
            Briefanred.Clear
            Briefanred.AddItem "Sehr geehrte Damen und Herren" & BriefanredenEndZeichen
            Briefanred.AddItem "Dear Sir or Madam" & BriefanredenEndZeichen
        Else
            Briefanred.Value = "Sehr geehrter Herr " & KName & BriefanredenEndZeichen
            Briefanred.Clear
            Briefanred.AddItem "Sehr geehrter Herr " & KName & BriefanredenEndZeichen
            Briefanred.AddItem "Sehr geehrte Frau " & KName & BriefanredenEndZeichen
            Briefanred.AddItem "Hallo Frau " & KName & BriefanredenEndZeichen
            Briefanred.AddItem "Hallo Herr " & KName & BriefanredenEndZeichen
            Briefanred.AddItem "Guten Tag Frau " & KName & BriefanredenEndZeichen
            Briefanred.AddItem "Guten Tag Herr " & KName & BriefanredenEndZeichen
            Briefanred.AddItem "Liebe Frau " & KName & BriefanredenEndZeichen
            If Titel.Value <> "" Then
              Briefanred.AddItem "Liebe Frau " & Nam.Value & BriefanredenEndZeichen
            End If
            Briefanred.AddItem "Lieber Herr " & KName & BriefanredenEndZeichen
            If Titel.Value <> "" Then
              Briefanred.AddItem "Lieber Herr " & Nam.Value & BriefanredenEndZeichen
            End If
            Briefanred.AddItem "Liebe " & Vorname.Value & BriefanredenEndZeichen
            Briefanred.AddItem "Lieber " & Vorname.Value & BriefanredenEndZeichen
            Briefanred.AddItem "Hallo " & Vorname.Value & BriefanredenEndZeichen
            
            Briefanred.AddItem "Dear Mr. " & KName & BriefanredenEndZeichen
            Briefanred.AddItem "Hello Mr. " & KName & BriefanredenEndZeichen
            Briefanred.AddItem "Hello " & Vorname.Value & BriefanredenEndZeichen
            If Titel.Value <> "" Then
              Briefanred.AddItem "Hello Mr. " & Nam.Value & BriefanredenEndZeichen
            End If
        
            Briefanred.AddItem "Dear Ms. " & KName & BriefanredenEndZeichen
            Briefanred.AddItem "Hello Ms. " & KName & BriefanredenEndZeichen
            Briefanred.AddItem "Hello " & Vorname.Value & BriefanredenEndZeichen
            If Titel.Value <> "" Then
              Briefanred.AddItem "Hello Ms. " & Nam.Value & BriefanredenEndZeichen
            End If
        
            Briefanred.AddItem "Dear Messrs. " & KName & BriefanredenEndZeichen
            Briefanred.AddItem "Hello Messrs. " & KName & BriefanredenEndZeichen
            Briefanred.AddItem "Hello " & Vorname.Value & BriefanredenEndZeichen
            If Titel.Value <> "" Then
              Briefanred.AddItem "Hello Messrs. " & Nam.Value & BriefanredenEndZeichen
            End If
     
            Briefanred.AddItem "Dear Sir Or Madam " & KName & BriefanredenEndZeichen
            Briefanred.AddItem "Hello Sir Or Madam " & KName & BriefanredenEndZeichen
            Briefanred.AddItem "Hello " & Vorname.Value & BriefanredenEndZeichen
            If Titel.Value <> "" Then
              Briefanred.AddItem "Hello Sir Or Madam " & Nam.Value & BriefanredenEndZeichen
            End If
   
        End If
    End Select
End Sub



Private Sub OK_Click()

Dim strFirmenAdresse As String, TempDateiname As String
Dim AdresseFertig As String
Dim VAnsprechpartner As String, VAnsprechpartnerP As String
Dim VAnsprechpartnerK As String, VAnsprechpartnerPK As String
Dim VAnred As String, VAnredP As String
Dim VAnredK As String, VAnredPK As String
Dim VVName As String, VKName As String

If DatumSystem < CD Or Version2 = True Then

    If Abteilung.Value <> "" Then   'Sonst wird trotz gel|fffd|schter Abtreilung Abteilung wieder eingef|fffd|gt
        FirmaAbteilung = Trim(Firma.Value & vbCrLf & Abteilung.Value)
    Else
        FirmaAbteilung = Trim(Firma.Value)
    End If

AdresseFertig = AdresseAufbereiten(Anrede.Value, Titel.Value, pers|fffd|nlich.Value, _
                                    Vorname.Value, Nam.Value, Firma.Value, Abteilung.Value, _
                                    Adresse.Value, KDNR.Value, False)

VAnsprechpartner = FAnsprechpartner(Anrede.Value, Titel.Value, Vorname.Value, Nam.Value)
VAnsprechpartnerP = FAnsprechpartnerP(Anrede.Value, Titel.Value, Vorname.Value, Nam.Value, KDNR.Value)
VAnsprechpartnerK = FAnsprechpartnerK(Anrede.Value, Titel.Value, Nam.Value)
VAnsprechpartnerPK = FAnsprechpartnerPK(Anrede.Value, Titel.Value, Nam.Value, KDNR.Value)
VAnred = FAnred(Anrede.Value, Titel.Value, Vorname.Value, Nam.Value)
VAnredP = FAnredP(Anrede.Value, Titel.Value, Vorname.Value, Nam.Value, KDNR.Value)
VAnredK = FAnredK(Anrede.Value, Titel.Value, Nam.Value)
VAnredPK = FAnredPK(Anrede.Value, Titel.Value, Nam.Value, KDNR.Value)
VVName = FVName(Titel.Value, Vorname.Value, Nam.Value)
VKName = FKName(Titel.Value, Nam.Value)


If Abbruch = True Then ' Abbruch f|fffd|r den Fall das weder Name noch Firma angegeben Variable ist Public und wird in Funktion gesetzt
    Abbruch = False ' Zur|fffd|cksetzen, damit nach Abbruch weitergearbeitet werden kann
    Exit Sub
End If


If Firma.Value <> "" Then
    strFirmenAdresse = Trim(Trim(FirmaAbteilung) & vbCrLf & Trim(Adresse.Value))
  Else
    strFirmenAdresse = Trim(Adresse.Value)
End If

' Laufende Nummer ermitteln
' Testen ob Speicherordner existieret
On Error GoTo Fehler
Dim SavePathFehler As Boolean
SavePathFehler = False

If UseSavePath = True Then
    Dim AktuellerOrdner As String
    AktuellerOrdner = CurDir
    ChDir (SavePath)
    ChDir AktuellerOrdner
End If

If FileCount = True Then
        LaufendeNummerDateien = LaufendeNummerErmitteln(SavePath, StartCount, FileCountFormat)
End If


' Einf|fffd|gen der Werte entsprechend der Textmarken 1-3

Call TextmarkenEinsetzen("Adresse", AdresseFertig)
Call TextmarkenEinsetzen("FirmenAdresse", strFirmenAdresse)
Call TextmarkenEinsetzen("Strasse", Adresse.Value)
Call TextmarkenEinsetzen("PLZOrt", PLZOrt.Value)
Call TextmarkenEinsetzen("Abteilung", Abteilung.Value)
Call TextmarkenEinsetzen("IhrZeichen", IhrZeichen.Value)
Call TextmarkenEinsetzen("KDNR", KDNR.Value)
Call TextmarkenEinsetzen("Datum", Datum.Value)
Call TextmarkenEinsetzen("Betreff", Betreff.Value)
Call TextmarkenEinsetzen("Briefanrede", Briefanred.Value)
Call TextmarkenEinsetzen("TelNr", Tel.Value)
' Faxnummer wird nicht |fffd|ber Funktion eingestzt wegen Textmarken setzen!
Call TextmarkenEinsetzen("Firma", Firma.Value)
Call TextmarkenEinsetzen("OrtLand", OrtLand.Value)


Call TextmarkenEinsetzen("Ansprechpartner", VAnsprechpartner)
Call TextmarkenEinsetzen("AnsprechpartnerP", VAnsprechpartnerP)
Call TextmarkenEinsetzen("AnsprechpartnerK", VAnsprechpartnerK)
Call TextmarkenEinsetzen("AnsprechpartnerPK", VAnsprechpartnerPK)
Call TextmarkenEinsetzen("Anred", VAnred)
Call TextmarkenEinsetzen("AnredP", VAnredP)
Call TextmarkenEinsetzen("AnredK", VAnredK)
Call TextmarkenEinsetzen("AnredPK", VAnredPK)
Call TextmarkenEinsetzen("VName", VVName)
Call TextmarkenEinsetzen("KName", VKName)


'Separate Textmarke
Call TextmarkenEinsetzen("Titel", Titel.Value)
Call TextmarkenEinsetzen("Vorname", Vorname.Value)
Call TextmarkenEinsetzen("Nachname", Nam.Value)
Call TextmarkenEinsetzen("Anrede", Anrede.Value)
Call TextmarkenEinsetzen("LaufendeNr", LaufendeNummerDateien)
Call TextmarkenEinsetzen("Stichworte", Trim(txt_Stichworte.Value))


If ActiveDocument.Bookmarks.Exists("FaxNr") = True Then
    Dim Laenge As Long
    Selection.GoTo What:=wdGoToBookmark, Name:="FaxNr": Selection.TypeText FaxNr.Value

        'Eingef|fffd|gten Text markieren
        Laenge = Len(Replace(FaxNr.Value, Chr(13), "")) 'Zeilenwechsel duch Leerzeichen und dann l|fffd|nge des String ermitteln

        Selection.MoveLeft Unit:=wdCharacter, Count:=Laenge, Extend:=wdExtend


        'Markierten Text in TExtmarke setzen
        With ActiveDocument.Bookmarks
                .Add Range:=Selection.Range, Name:="FaxNr"
                .DefaultSorting = wdSortByName
                .ShowHidden = False
        End With

        Selection.MoveRight Unit:=wdCharacter, Count:=1 'Ein Zeichen nach rechts springen



    'Ersetzen von +49 ( in der Faxnummer gegen (0 falls FaxNrErs aus Autoexec den Wert true hat
    If FaxNrErs = True Then
        FritzFaxNR = Replace(FaxNr.Value, FaxErsatz, "(0", 1, 1, vbTextCompare)

    'Faxnummer (ohne +49) hinter Faxnummer setzen
        Selection.TypeText FritzFaxNR
    'Faxnummer (ohne +49) markieren
        Selection.MoveLeft Unit:=wdCharacter, Count:=Len(FritzFaxNR), Extend:=wdExtend

    'Text ausblenden
            With Selection.Font
            .Size = 1
            .Bold = False
            .Italic = False
            .Underline = wdUnderlineNone
            .UnderlineColor = wdColorAutomatic
            .StrikeThrough = False
            .DoubleStrikeThrough = False
            .Outline = False
            .Emboss = False
            .Shadow = False
            .Hidden = True
            .SmallCaps = False
            .AllCaps = False
            .Color = wdColorWhite
            .Engrave = False
            .Superscript = False
            .Subscript = False
            .Spacing = 0
            .Scaling = 100
            .Position = 0
            .Kerning = 0
            .Animation = wdAnimationNone
        End With

    'Textmarke Telefaxnummer setzen
        With ActiveDocument.Bookmarks
            .Add Range:=Selection.Range, Name:="Telefaxnummer"
            .DefaultSorting = wdSortByName
            .ShowHidden = False
        End With
    End If
End If

If ActiveDocument.Bookmarks.Exists("FaxNr1") = True Then
    Selection.GoTo What:=wdGoToBookmark, Name:="FaxNr1": Selection.TypeText FaxNr.Value
End If

If ActiveDocument.Bookmarks.Exists("FaxNr2") = True Then
    Selection.GoTo What:=wdGoToBookmark, Name:="FaxNr2": Selection.TypeText FaxNr.Value
End If

'Speichername in Dokumenteigenschaften ablegen
Dim SP_Firma As String, SP_Anred As String, SP_Betreff As String

If Firma.Value <> "" Then
        SP_Firma = Trim(Firma.Value)
    Else
        SP_Firma = "keine Firma"
End If

'Lesezeichen
If Len(Trim(VVName)) > 1 Then
        SP_Anred = Trim(VVName)
    Else
        SP_Anred = "kein Ansprechpartner"
End If


If Betreff.Value <> "" And Betreff.Value <> " " Then
        SP_Betreff = Trim(Betreff.Value)
    Else
        SP_Betreff = "ohne Betreff"
End If

'Vorbelegen des Dateinamens f|fffd|r den Befehl Speichern unter und der Dokumenteigenschaften
On Error Resume Next
Err.Clear

If SpezSaveorder = True And SavorderFile <> "" Then        ' Austauschen der Speicherordnung falls im Dateiname entwas anderses angegeben
        TempDateiname = SpeichernameErmitteln(SavorderFile, _
            SP_Firma, SP_Anred, SP_Betreff, Datum.Value, KDNR.Value, SavePrefix, Save_Dat_Form, LaufendeNummerDateien, Trim(txt_Stichworte.Value), IhrZeichen.Value)

    Else
        TempDateiname = SpeichernameErmitteln(SpeichernameGenerell, _
            SP_Firma, SP_Anred, SP_Betreff, Datum.Value, KDNR.Value, SavePrefix, Save_Dat_Form, LaufendeNummerDateien, Trim(txt_Stichworte.Value), IhrZeichen.Value)
End If

' ung|fffd|ltige Zeichen f|fffd|r Dateinamen erstzen
TempDateiname = Trim(ungueltZeicheErs1(TempDateiname, WerbungEig)) 'Tabulatoren, Zeilenwechsel, Zeilenwechsel duch Leerzeichen ersetzen, Dateiname und ggf. Werbung in dateieigenschaften

If Dat_kurz = False Then    'Dateiname nicht abschneiden
    If SP_Umlaute = False Then
        TempDateiname = Trim(UmlauteErs(TempDateiname)) '|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|@|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd|ber benutzerdef. Funktion
    End If

Else    ' Dateiname abschneiden

'Firmennamen f|fffd|r Dateiname korrigieren
  If Firma.Value <> "" Then
        SP_Firma = Firma.Value
            If SP_Umlaute = False Then
                SP_Firma = UmlauteErs(SP_Firma)  'Umlaute ersetzen, bei denen aus einem 2 Zeichen werden  |fffd|ber benutzerdef. Funktion
            End If
            SP_Firma = Mid(SP_Firma, 1, SP_Firma_length)

    Else
        SP_Firma = "k Fa"
        SP_Name_length = SP_Name_length + SP_Firma_length - 4
    End If

'Namen f|fffd|r Dateiname korrigieren
'Lesezeichen
    If Len(Nam.Value) > 1 Then
        SP_Anred = Nam.Value
        If SP_Umlaute = False Then
            SP_Anred = UmlauteErs(SP_Anred)  'Umlaute ersetzen, bei denen aus einem 2 Zeichen werden  |fffd|ber benutzerdef. Funktion
        End If
        SP_Anred = Mid(SP_Anred, 1, SP_Name_length)
    Else
        SP_Anred = "k AP"
        SP_Betreff_length = SP_Betreff_length + SP_Name_length - 4
    End If

'Betreff f|fffd|r Dateiname korrigieren
    If Betreff.Value <> "" Then
        SP_Betreff = Betreff.Value
        If SP_Umlaute = False Then
            SP_Betreff = UmlauteErs(SP_Betreff) 'Umlaute ersetzen, bei denen aus einem 2 Zeichen werden  |fffd|ber benutzerdef. Funktion
        End If
        SP_Betreff = Mid(SP_Betreff, 1, SP_Betreff_length)
   Else
        SP_Betreff = "K_Betr"
    End If

    TempDateiname = _
        SP_Firma & SP_Trennzeichen & _
        SP_Anred & SP_Trennzeichen & _
        SP_Betreff
End If

If SP_Umlaute = False Then  ' Bei lange
 TempDateiname = UmlauteErs1(TempDateiname)   'Alle sonstigen Umlaute ersetzen |fffd|ber benutzerdef. Funktion
End If

TempDateiname = DateinamenKonventionErsetzen(TempDateiname) ' Zeichen die im Dateinamen nicht zul|fffd|ssig sind ersetzen |fffd|ber benutzerdef. Funktion

'Stichworte in Datei schreiben

    If StichworteAnzeigen = True Then
        ActiveDocument.BuiltInDocumentProperties(wdPropertyCategory).Value _
            = txt_Stichworte
    End If

' Daten f|fffd|r Historie in Kommentar

    If Historie = True And Version2 = True Then
        ActiveDocument.BuiltInDocumentProperties(wdPropertyComments).Value _
            = MemoHistorie
    End If



Unload DatenEingabeFax 'Schlie|fffd|en des Adresseingabeformulars

'Aufruf 5 M|fffd|glicher Folgemodule
Application.Run MacroName:="Anschluss"
Application.Run MacroName:="Anschluss1"
Application.Run MacroName:="Anschluss2"
Application.Run MacroName:="Anschluss3"
Application.Run MacroName:="Anschluss4"
Application.Run MacroName:="Anschluss5"

' Aufrufen des Dialogs Speichern unter mit Vorbelegung des Dateinamens


If Speichern.Value Then
    If SaveWithoutDialog = True And SavePathFehler = False And UseSavePath = True Then
            ActiveDocument.SaveAs (SavePath & Application.PathSeparator & TempDateiname)
        ElseIf SaveWithoutDialog = False And SavePathFehler = False And UseSavePath = True Then
            With Dialogs(wdDialogFileSaveAs)
                .Name = SavePath & Application.PathSeparator & TempDateiname
                .Show
            End With

        Else
            With Dialogs(wdDialogFileSaveAs)
                .Name = TempDateiname
                .Show
            End With
    End If
End If

Else    ' Wenn keine Lizenz und Test Abgelaufen
    Unload DatenEingabeFax
    Load Bestellung
    Bestellung.Show
End If

' Globale variablen zur|fffd|cksetzen, damit in n|fffd|chster Datei keine alten Einstellungen verwendet werden

SavePrefix = ""
SavePrefixUse = False
FileCount = False
StartCount = 0
SpezSaveorder = False
SavorderFile = ""
Be1_Betreff = ""
Be1_IhrZeichen = ""
Be1_KDNR = ""
Be1_Stichworte = ""
Save_Dat_Form = ""
LaufendeNummerDateien = ""
UseSavePath = False
SavePath = ""
SaveWithoutDialog = False



Exit Sub

Fehler:
    If Err.Number = 76 Then
        SavePathFehler = True
        MsgBox "Der in der Dateieigenschaft ""SavePath"" der Dokumentvorlage" & vbCrLf & vbCrLf _
            & ActiveDocument.AttachedTemplate.FullName & vbCrLf & vbCrLf _
            & "angegebene Speicherpfad" & vbCrLf & vbCrLf _
            & SavePath & vbCrLf & vbCrLf _
            & "existiert auf Ihrem System nicht!" & vbCrLf & vbCrLf _
            & "Bitte korrigieren Sie ggf. diese Dateieigenschaft oder legen Sie den Ordner an, in dem die Datei gespeichert werden soll!" _
            , vbCritical, Msg_title
        Resume Next
    ElseIf Err.Number = 5 Then
        Err.Clear
        Resume Next
    Else
        MsgBox Err.Number & vbCrLf & vbCrLf & Err.Description, vbCritical, Msg_title
    End If


End Sub

Private Sub Cancel_Click()
    On Error Resume Next
    Unload DatenEingabeFax
    Exit Sub
End Sub

Private Sub Hilfe_Click()
  Application.Run MacroName:="vorlagenabh|fffd|ngige_Hilfe"
End Sub




Attribute VB_Name = "Dokumenteigenschaften"
Sub DatEigL|fffd|schen()
Dim I As Byte, AnzEig As Byte

On Error Resume Next
AnzEig = ActiveDocument.CustomDocumentProperties.Count

'MsgBox AnzEig

For I = 1 To AnzEig
    ActiveDocument.CustomDocumentProperties(I).Delete
    'MsgBox ActiveDocument.CustomDocumentProperties(i).Name
    'MsgBox i
Next I

AnzEig = ActiveDocument.CustomDocumentProperties.Count

'MsgBox AnzEig

For I = 1 To AnzEig
    ActiveDocument.CustomDocumentProperties(I).Delete
    'MsgBox ActiveDocument.CustomDocumentProperties(i).Name
    'MsgBox i
Next I

AnzEig = ActiveDocument.CustomDocumentProperties.Count

'MsgBox AnzEig

For I = 1 To AnzEig
    ActiveDocument.CustomDocumentProperties(I).Delete
    'MsgBox ActiveDocument.CustomDocumentProperties(i).Name
    'MsgBox i
Next I

AnzEig = ActiveDocument.CustomDocumentProperties.Count

'MsgBox AnzEig

For I = 1 To AnzEig
    ActiveDocument.CustomDocumentProperties(I).Delete
    'MsgBox ActiveDocument.CustomDocumentProperties(i).Name
    'MsgBox i
Next I

MsgBox "Alle benutzerdef. Dateigenschaften gel|fffd|scht", vbInformation, Msg_title

End Sub

Sub DateiEigenschaftenExportieren()

Dim Frage As Byte
Dim Laufwerk As String

Frage = MsgBox("Sollen die Eigenschaften f|fffd|r das aktive Dokument (Ja) oder f|fffd|r die ""zvlg_koerner.dot"" (Nein) gedruckt werden?", _
        vbYesNoCancel + vbQuestion, Msg_title)
        
Select Case Frage
    Case Is = 2
        Exit Sub
    Case Is = 6
        Laufwerk = InputBox("Bitte geben Sie einen Ordner an, in dem die Datei mit den Einstellungen der Datei """ _
            & ActiveDocument.Name & """ gespeichert werden sollen!" _
            & vbCrLf & "Ohne ""\"" am Ende!!!" _
            & vbCrLf & vbCrLf & _
            "Eine vorhanden Datei an diesem Ort mit gleichem Namen wird dabei |fffd|berschrieben!!!", Msg_title, "C:")
        
        Open Laufwerk & "\" & ActiveDocument.Name & "_Einstellungen.txt" For Output Lock Write As #1

        For Each Prop In ActiveDocument.CustomDocumentProperties
            Print #1, Prop.Name & " = " & Prop.Value, "(" & Eigenschaftstyp(Prop.Type) & ")"
'            Write #1, Prop.Name, Prop.Value, Prop.Type
        Next
        
        Close #1
        
        MsgBox "Die Einstellungen wurden gespeichert unter:" & vbCrLf & vbCrLf _
                & Laufwerk & "\" & ActiveDocument.Name & "_Einstellungen.txt", vbInformation, Msg_title

    Case Is = 7
    
        For Each aTemp In Templates
            y = y + 1
            If aTemp.Name = "zvlg_koerner.dot" Then
                Exit For
            End If
        Next aTemp
        
        Laufwerk = InputBox("Bitte geben Sie einen Ordner an, in dem die Datei mit den Einstellungen der Datei ""zvlg_koerner.dot"" gespeichert werden sollen!" _
            & vbCrLf & "Ohne ""\"" am Ende!!!" _
            & vbCrLf & vbCrLf & _
            "Eine vorhanden Datei an diesem Ort mit gleichem Namen wird dabei |fffd|berschrieben!!!", Msg_title, "C:")
        
        Open Laufwerk & "\zvlg_koerner.dot_Einstellungen.txt" For Output Lock Write As #1
        
        For Each Prop In Templates(y).CustomDocumentProperties
            Print #1, Prop.Name & " = " & Prop.Value, "(" & Eigenschaftstyp(Prop.Type) & ")"
'            Write #1, Prop.Name, Prop.Value, Prop.Type
        Next
        Close #1
        
        MsgBox "Die Einstellungen wurden gespeichert unter:" & vbCrLf & vbCrLf _
                & Laufwerk & "\zvlg_koerner.dot_Einstellungen.txt", vbInformation, Msg_title
    End Select
End Sub

Function Eigenschaftstyp(EigenschaftsType As Long) As String
    Select Case EigenschaftsType
        Case Is = 1
           Eigenschaftstyp = "Zahl"
        Case Is = 2
           Eigenschaftstyp = "Ja/Nein"
         Case Is = 4
           Eigenschaftstyp = "Text"
     End Select
        
End Function


Sub DatEigExpProfi()

Dim Frage As Byte
Dim Laufwerk As String

Frage = MsgBox("Sollen die Eigenschaften f|fffd|r das aktive Dokument (Ja) oder f|fffd|r die ""zvlg_koerner.dot"" (Nein) gedruckt werden?", _
        vbYesNoCancel + vbQuestion, Msg_title)
        
Select Case Frage
    Case Is = 2
        Exit Sub
    Case Is = 6
        Laufwerk = InputBox("Bitte geben Sie einen Ordner an, in dem die Datei mit den Einstellungen der Datei """ _
            & ActiveDocument.Name & """ gespeichert werden sollen!" _
            & vbCrLf & "Ohne ""\"" am Ende!!!" _
            & vbCrLf & vbCrLf & _
            "Eine vorhanden Datei an diesem Ort mit gleichem Namen wird dabei |fffd|berschrieben!!!", Msg_title, "C:")
        
        Open Laufwerk & "\" & ActiveDocument.Name & "_Einstellungen.txt" For Output Lock Write As #1

        For Each Prop In ActiveDocument.CustomDocumentProperties
'            Write #1, Prop.Name, Prop.Value, Prop.Type
            Print #1, Prop.Name & ";;" & Prop.Value & ";;" & Prop.Type
        Next
        
        Close #1
        
        MsgBox "Die Einstellungen wurden gespeichert unter:" & vbCrLf & vbCrLf _
                & Laufwerk & "\" & ActiveDocument.Name & "_Einstellungen.txt", vbInformation, Msg_title

    Case Is = 7
    
        For Each aTemp In Templates
            y = y + 1
            If aTemp.Name = "zvlg_koerner.dot" Then
                Exit For
            End If
        Next aTemp
        
        Laufwerk = InputBox("Bitte geben Sie einen Ordner an, in dem die Datei mit den Einstellungen der Datei ""zvlg_koerner.dot"" gespeichert werden sollen!" _
            & vbCrLf & "Ohne ""\"" am Ende!!!" _
            & vbCrLf & vbCrLf & _
            "Eine vorhanden Datei an diesem Ort mit gleichem Namen wird dabei |fffd|berschrieben!!!", Msg_title, "C:")
        
        Open Laufwerk & "\zvlg_koerner.dot_Einstellungen.txt" For Output Lock Write As #1
        
        For Each Prop In Templates(y).CustomDocumentProperties
'            Write #1, Prop.Name, Prop.Value, Prop.Type
            Print #1, Prop.Name & ";;" & Prop.Value & ";;" & Prop.Type

        Next
        Close #1
        
        MsgBox "Die Einstellungen wurden gespeichert unter:" & vbCrLf & vbCrLf _
                & Laufwerk & "\zvlg_koerner.dot_Einstellungen.txt", vbInformation, Msg_title
    End Select
End Sub

Sub DateiEigImport()
    Dim strDateiName As String
    Dim strInput As String
    Dim strVarModi As String
    Dim Schnitt As String
    
    Dim EigName As String, Wert As String, EigTyp As String
    
   
    
'    strDateiName = "F:\zvlg_koerner.dot_Einstellungen.txt"
    
    strDateiName = InputBox("Bitte Pfad eingeben", Msg_title, "C:\zvlg_koerner.dot_Einstellungen.txt")
    Open strDateiName For Input As #1
    
        While Not EOF(1)
            Line Input #1, strInput
            
               strVarModi = strInput
   
                EigName = Mid(strInput, 1, InStr(1, strInput, ";;") - 1)
                
                Schnitt = Mid(strInput, Len(EigName) + 3, InStr(Len(EigName) + 2, strInput, ";;") - 1)
                Wert = Mid(Schnitt, 1, InStr(1, Schnitt, ";;") - 1)
                
                EigTyp = Mid(strInput, Len(EigName & Wert) + 5, InStr(Len(EigName & Wert) + 2, strInput, ";;") - 1)
'Erstellen der Dokumenteigenschaft im aktiven Dokument

            'MsgBox ActiveDocument.Name & vbCrLf & EigName & vbCrLf & Wert & vbCrLf & EigTyp

                Select Case EigTyp
                    Case Is = 1 ' Zahl
                        Dim wert1 As Double
                        wert1 = CDbl(Wert)
                        ActiveDocument.CustomDocumentProperties.Add _
                        Name:=EigName, LinkToContent:=False, Value:=Wert, _
                        Type:=msoPropertyTypeNumber
                    Case Is = 2 'Boolean
                    
                        Dim Wert2 As Boolean
                        
                        If Wert = "Wahr" Then
                            Wert2 = True
                        Else
                            Wert2 = False
                        End If
                        
                        ActiveDocument.CustomDocumentProperties.Add _
                        Name:=EigName, LinkToContent:=False, Value:=Wert2, _
                        Type:=msoPropertyTypeBoolean
                    
                    Case Is = 4 ' Zahl
                        ActiveDocument.CustomDocumentProperties.Add _
                        Name:=EigName, LinkToContent:=False, Value:=Wert, _
                        Type:=msoPropertyTypeString
                End Select
        Wend
    Close #1
End Sub

Function Eigenschaftstyp1(ByVal EigenschaftsType1 As Long) As String

    Select Case EigenschaftsType1
        Case Is = 1
           Eigenschaftstyp1 = "msoPropertyTypeNumber"
        Case Is = 2
           Eigenschaftstyp1 = "msoPropertyTypeBoolean"
         Case Is = 4
           Eigenschaftstyp1 = "msoPropertyTypeString"
     End Select

End Function


Attribute VB_Name = "Formularaufruf"

Sub Formular_AufrufBrief()

If Rel = "" Then
    Application.Run MacroName:="AutoExec"
End If

On Error GoTo ErrorHandler

'Unterschrift einf|fffd|gen
If ActiveDocument.Bookmarks.Exists("Unterschrift") = True Then

    'Hilfepfad testen --> Bei Fehler Sprung zu ErrorHandler
        ChDir UnterschriftPfad
        ChDir Curr_Folder
        
    Selection.GoTo What:=wdGoToBookmark, Name:="Unterschrift": Selection.InlineShapes.AddPicture FileName:=UnterschriftPfad & Application.PathSeparator & "unterschrift_" & Application.UserInitials & ".tif", LinkToFile:=False, SaveWithDocument:=True
    
    'Eingef|fffd|gten Text markieren
    Selection.MoveLeft Unit:=wdCharacter, Count:=1, Extend:=wdExtend
        
    'Markierten Text in TExtmarke setzen
    With ActiveDocument.Bookmarks
            .Add Range:=Selection.Range, Name:="Unterschrift"
            .DefaultSorting = wdSortByName
            .ShowHidden = False
    End With


End If

Load zvlg.DatenEingabeBrief
zvlg.DatenEingabeBrief.Show

Call DreiFragezeichen

On Error Resume Next
CommandBars("Briefadresse |fffd|ndern").Visible = True ' Symbolleiste zur Adres|fffd|nderung einblenden


Exit Sub

'***********
ErrorHandler:
Call Unterschrift_Fehlt


Load zvlg.DatenEingabeBrief
zvlg.DatenEingabeBrief.Show
    
Call DreiFragezeichen

End Sub
Sub Formular_AufrufFax()


If Rel = "" Then
    Application.Run MacroName:="AutoExec"
End If


On Error GoTo ErrorHandler

'Unterschrift einf|fffd|gen
If ActiveDocument.Bookmarks.Exists("Unterschrift") = True Then

    'Hilfepfad testen --> Bei Fehler Sprung zu ErrorHandler
        ChDir UnterschriftPfad
        ChDir Curr_Folder
        
    Selection.GoTo What:=wdGoToBookmark, Name:="Unterschrift": Selection.InlineShapes.AddPicture FileName:=UnterschriftPfad & Application.PathSeparator & "unterschrift_" & Application.UserInitials & ".tif", LinkToFile:=False, SaveWithDocument:=True
    'Eingef|fffd|gten Text markieren
    Selection.MoveLeft Unit:=wdCharacter, Count:=1, Extend:=wdExtend
        
    'Markierten Text in TExtmarke setzen
    With ActiveDocument.Bookmarks
            .Add Range:=Selection.Range, Name:="Unterschrift"
            .DefaultSorting = wdSortByName
            .ShowHidden = False
    End With

End If

'Formular laden und anzeigen
Load zvlg.DatenEingabeFax
zvlg.DatenEingabeFax.Show

Call DreiFragezeichen

On Error Resume Next
CommandBars("Faxadresse |fffd|ndern").Visible = True


Exit Sub

'*****
ErrorHandler:
Call Unterschrift_Fehlt

Load zvlg.DatenEingabeFax
zvlg.DatenEingabeFax.Show

Call DreiFragezeichen

End Sub




Attribute VB_Name = "Func_Anz_Dateien"
Option Explicit

Public AnzahlBereinigt As Long

Function Filesearch(Pfad As String, strExtension As String)
   Dim strDir As String
   Dim objFSO As Object
   Dim objDir As Object

   
   Set objFSO = CreateObject("scripting.filesystemobject")
   
   Set objDir = objFSO.GetFolder(Pfad)
   getInfo objDir, strExtension
   
   Set objDir = Nothing
   Set objFSO = Nothing
   
   Filesearch = AnzahlBereinigt
End Function

Sub getInfo(ByVal pCurrentDir As Object, ByVal strName As String)
   Dim aItem As Variant, AnzahlGesamt As Long, AnzahlOffen As Long
   
   
   
   AnzahlGesamt = 0
   AnzahlOffen = 0
   
   For Each aItem In pCurrentDir.Files
      If aItem.Name Like strName Then
         AnzahlGesamt = AnzahlGesamt + 1
'         Debug.Print aItem.Path, aItem.Name, i
      End If
   Next
   
    For Each aItem In pCurrentDir.Files
      If aItem.Name Like "~" & strName Then
         AnzahlOffen = AnzahlOffen + 1
'         Debug.Print aItem.Path, aItem.Name, i
      End If
   Next

AnzahlBereinigt = AnzahlGesamt - AnzahlOffen

''Unterordner durchsuchen
'   AnzahlGesamt = 0
'   AnzahlOffen = 0
'
'
'    For Each aItem In pCurrentDir.SubFolders
'      If aItem.Name Like strName Then
'         AnzahlGesamt = AnzahlGesamt + 1
''         Debug.Print aItem.Path, aItem.Name, i
'      End If
'   Next
'
'    For Each aItem In pCurrentDir.SubFolders
'      If aItem.Name Like "~" & strName Then
'         AnzahlOffen = AnzahlOffen + 1
''         Debug.Print aItem.Path, aItem.Name, i
'      End If
'   Next
'
'
'
'    AnzahlBereinigt = AnzahlBereinigt + AnzahlGesamt - AnzahlOffen
''Debug.Print AnzahlBereinigt

End Sub
Attribute VB_Name = "Funktionen"

Public Function TextmarkenInhaltKopieren(Textmarke As String)
' Kopiert den Inhalt einer bestimmten Textmarke als reienen Text in die Zwischenablage
' DataObject ist in MS Forms Bibliothek
On Error Resume Next
    If ActiveDocument.Bookmarks.Exists(Textmarke) = True Then 'Pr|fffd|fen ob Textmarke vorhenden
        Set MyData = New DataObject
        MyData.SetText ActiveDocument.Bookmarks(Textmarke).Range
        MyData.PutInClipboard
        Beep
    End If
End Function
Public Function Vorlage|fffd|ffnen(Vorlagenname As String, Vorlagenart As String)
    ' Public Variablen deklariern und f|fffd|llen
    On Error Resume Next
    'On Error GoTo Fehler
    
    If Rel = "" Then
        Application.Run MacroName:="AutoExec"
    End If

    VorlageSymb = Vorlagenname
    VorlageArt = Vorlagenart
    
    VorlagenPfad = Options.DefaultFilePath(wdUserTemplatesPath) & "\"
    
    Err.Clear
    
    Documents.Add Template:=VorlagenPfad & VorlageSymb, _
            NewTemplate:=False, DocumentType:=0
    
    If Err.Number = 5151 Then
        VorlageFehltFehlerZur|fffd|cksetzer = True
        Err.Clear
    Else
        VorlageFehltFehlerZur|fffd|cksetzer = False
        VorlagenPfad = Options.DefaultFilePath(wdUserTemplatesPath) & "\"
        Exit Function
    End If
    
    VorlagenPfad = Options.DefaultFilePath(wdWorkgroupTemplatesPath) & "\"
    
    Documents.Add Template:=VorlagenPfad & VorlageSymb, _
            NewTemplate:=False, DocumentType:=0
    
'ab Office 2007 dotm
    VorlageSymb = Vorlagenname & "m"
    
    VorlagenPfad = Options.DefaultFilePath(wdUserTemplatesPath) & "\"
    
    Err.Clear
    
    Documents.Add Template:=VorlagenPfad & VorlageSymb, _
            NewTemplate:=False, DocumentType:=0
    
    If Err.Number = 5151 Then
        VorlageFehltFehlerZur|fffd|cksetzer = True
        Err.Clear
    Else
        VorlageFehltFehlerZur|fffd|cksetzer = False
        VorlagenPfad = Options.DefaultFilePath(wdUserTemplatesPath) & "\"
        Exit Function
    End If
    
    VorlagenPfad = Options.DefaultFilePath(wdWorkgroupTemplatesPath) & "\"
    
    Documents.Add Template:=VorlagenPfad & VorlageSymb, _
            NewTemplate:=False, DocumentType:=0
    
    
    
    If Err.Number = 5151 Then
        Call Vorlage_Fehlt
    End If
        
    VorlageFehltFehlerZur|fffd|cksetzer = False
    VorlagenPfad = Options.DefaultFilePath(wdUserTemplatesPath) & "\"
    
'    Exit Function
'
'Fehler:
'    MsgBox Err.Description, , Err.Number
'    Resume Next
End Function

Public Function TextmarkeSetzen(Textmarke As String)
    With ActiveDocument.Bookmarks
        .Add Range:=Selection.Range, Name:=Textmarke
        .DefaultSorting = wdSortByName
        .ShowHidden = True
    End With
End Function

Public Function TextmarkenEinsetzen(Textmarke As String, Wert As String)

On Error GoTo Fehler

Dim Wertlaenge As Long

Wertlaenge = Len(Replace(Wert, Chr(13), "")) 'Zeilenwechsel duch Leerzeichen und dann l|fffd|nge des String ermitteln


    If ActiveDocument.Bookmarks.Exists(Textmarke) = True Then 'Pr|fffd|fen ob Textmarke vorhenden
        'Gehe zur Textmarke
        Selection.GoTo What:=wdGoToBookmark, Name:=Textmarke
        
        If Wert = "" Then
            Selection.TypeText " "  ' Leerzeichen stzen, damit vorhandener Wert erstzt wird
            Wertlaenge = 1          ' Wertl|fffd|nge ist 1 damit  Textmarke zum sp|fffd|teren Erstzen um Textmarke gestzt wird
        Else
            Selection.TypeText Wert
        End If
        
        'Eingef|fffd|gten Text markieren
        Selection.MoveLeft Unit:=wdCharacter, Count:=Wertlaenge, Extend:=wdExtend
        
        'Markierten Text in TExtmarke setzen
        With ActiveDocument.Bookmarks
                .Add Range:=Selection.Range, Name:=Textmarke
                .DefaultSorting = wdSortByName
                .ShowHidden = False
        End With
    End If
    
    'selbe Prozedur f|fffd|r Textmarke1
    If ActiveDocument.Bookmarks.Exists(Textmarke & "1") = True Then
        Selection.GoTo What:=wdGoToBookmark, Name:=Textmarke & "1"
        If Wert = "" Then
            Selection.TypeText " "  ' Leerzeichen stzen, damit vorhandener Wert erstzt wird
            Wertlaenge = 1          ' Wertl|fffd|nge ist 1 damit  Textmarke zum sp|fffd|teren Erstzen um Textmarke gestzt wird
        Else
            Selection.TypeText Wert
        End If

        Selection.MoveLeft Unit:=wdCharacter, Count:=Wertlaenge, Extend:=wdExtend
        With ActiveDocument.Bookmarks
                .Add Range:=Selection.Range, Name:=Textmarke & "1"
                .DefaultSorting = wdSortByName
                .ShowHidden = False
        End With
    End If
    
    'selbe Prozedur f|fffd|r Textmarke2
    If ActiveDocument.Bookmarks.Exists(Textmarke & "2") = True Then
        Selection.GoTo What:=wdGoToBookmark, Name:=Textmarke & "2"
        If Wert = "" Then
            Selection.TypeText " "  ' Leerzeichen stzen, damit vorhandener Wert erstzt wird
            Wertlaenge = 1          ' Wertl|fffd|nge ist 1 damit  Textmarke zum sp|fffd|teren Erstzen um Textmarke gestzt wird
        Else
            Selection.TypeText Wert
        End If

        Selection.MoveLeft Unit:=wdCharacter, Count:=Wertlaenge, Extend:=wdExtend
        With ActiveDocument.Bookmarks
                .Add Range:=Selection.Range, Name:=Textmarke & "2"
                .DefaultSorting = wdSortByName
                .ShowHidden = False
        End With
    End If
Exit Function
Fehler:

    If Err.Number = 5678 Then
        MsgBox "Die Textmarke mit dem Namen:" & vbCrLf & vbCrLf & _
            Textmarke & vbCrLf & vbCrLf & _
            "Befindet sich in Ihrer Vorlage entweder in einem Textfeld oder einer Fu|fffd|zeile und kann damit nicht gefunden werden!" _
            & vbCrLf & vbCrLf & "L|fffd|sung f|fffd|r Textfeld:" & vbCrLf & _
            "Wandeln Sie das Textfeld in einen Positionsrahmen um wie unter ""www.dotoffice.de/neue_vorlg.htm#textfelder_erstellen"" beschrieben." _
            & vbCrLf & vbCrLf & "L|fffd|sung f|fffd|r Kopf- und Fu|fffd|zeile:" & vbCrLf & _
            "Legen Sie den Wert der Textmarke in Ihrem Dokument ab und machen Sie diesen durch Formatierungen unsichtbar. Anschlie|fffd|end setzen Sie einen Querverweis in Ihre Kop- oder Fu|fffd|zeile und referenzieren auf den Inhalt der Textmarke." _
            , vbInformation, Msg_title
        Resume Next
    ElseIf Err.Number = 5 Then
        Err.Clear
        Resume Next
    Else
        MsgBox Err.Number & vbCrLf & vbCrLf & Err.Description, vbCritical, Msg_title
        Resume Next
    End If

    
End Function

Public Function ungueltZeicheErs1(erszeich1 As String, WerbungEig As Boolean)
    
    erszeich1 = Replace(Trim(erszeich1), Chr(9), " ") 'Tabulatoren duch Leerzeichen
    erszeich1 = Replace(Trim(erszeich1), vbCrLf, " ") 'Zeilenwechsel duch Leerzeichen
    erszeich1 = Replace(Trim(erszeich1), Chr(13), "") 'Zeilenwechsel duch Leerzeichen
    
    ActiveDocument.BuiltInDocumentProperties(wdPropertyTitle).Value _
    = erszeich1
    ActiveDocument.BuiltInDocumentProperties(wdPropertyAuthor).Value _
    = Application.UserName
    

    ' Usernamen f|fffd|r Speicherung an Dateinamen anf|fffd|gen
    erszeich1 = erszeich1
    
    ' Werbung
    If WerbungEig = True Then
        ActiveDocument.BuiltInDocumentProperties(wdPropertyComments).Value = WerbeText
        'ActiveDocument.BuiltInDocumentProperties(wdPropertyHyperlinkBase).Value _
        '    = "http://www.dotoffice.de"
    End If

    ungueltZeicheErs1 = erszeich1 ' R|fffd|ckgabewert

End Function

Public Function UmlauteErs(erszeich1 As String)
'Zeichen, bei denen 1 Zeichen durch 2 erstzt werden, die also vor Z|fffd|hlung der Zeichen erfolgen muss
    erszeich1 = Replace(Trim(erszeich1), "|fffd|", "oe") 'Unzul|fffd|ssiges Zeichen entsprechen Dateinamenkonvention Windows
    erszeich1 = Replace(Trim(erszeich1), "|fffd|", "Oe")
    erszeich1 = Replace(Trim(erszeich1), "|fffd|", "ue")
    erszeich1 = Replace(Trim(erszeich1), "|fffd|", "Ue")
    erszeich1 = Replace(Trim(erszeich1), "|fffd|", "ae")
    erszeich1 = Replace(Trim(erszeich1), "|fffd|", "Ae")
    erszeich1 = Replace(Trim(erszeich1), "|fffd|", "ss")
    erszeich1 = Replace(Trim(erszeich1), "|fffd|", "a")
    erszeich1 = Replace(Trim(erszeich1), "|fffd|", "a")
    erszeich1 = Replace(Trim(erszeich1), "|fffd|", "a")
    erszeich1 = Replace(Trim(erszeich1), "|fffd|", "e")
    erszeich1 = Replace(Trim(erszeich1), "@", "AT")
    erszeich1 = Replace(Trim(erszeich1), "|fffd|", "EUR")
    erszeich1 = Replace(Trim(erszeich1), "$", "DOL")
    erszeich1 = Replace(Trim(erszeich1), "%", "Proz")
    erszeich1 = Replace(Trim(erszeich1), "|fffd|", "Pound")
    erszeich1 = Replace(Trim(erszeich1), "|fffd|", "Yen")
    erszeich1 = Replace(Trim(erszeich1), "|fffd|", "Paragrf")
    erszeich1 = Replace(Trim(erszeich1), "%", "Proz")
    UmlauteErs = erszeich1 ' R|fffd|ckgabewert

End Function

Public Function UmlauteErs1(erszeich1 As String)

    erszeich1 = Replace(Trim(erszeich1), "|fffd|", "e") 'Unzul|fffd|ssiges Zeichen entsprechen Dateinamenkonvention Windows
    erszeich1 = Replace(Trim(erszeich1), "|fffd|", "a")
    erszeich1 = Replace(Trim(erszeich1), "|fffd|", "a")
    erszeich1 = Replace(Trim(erszeich1), "|fffd|", "a")
    erszeich1 = Replace(Trim(erszeich1), "|fffd|", "e")
    erszeich1 = Replace(Trim(erszeich1), "|fffd|", "e")
    erszeich1 = Replace(Trim(erszeich1), "|fffd|", "i")
    erszeich1 = Replace(Trim(erszeich1), "|fffd|", "i")
    erszeich1 = Replace(Trim(erszeich1), "|fffd|", "i")
    erszeich1 = Replace(Trim(erszeich1), "|fffd|", "i")
    erszeich1 = Replace(Trim(erszeich1), "|fffd|", "_")
    erszeich1 = Replace(Trim(erszeich1), "|fffd|", "n")
    erszeich1 = Replace(Trim(erszeich1), "|fffd|", "o")
    erszeich1 = Replace(Trim(erszeich1), "|fffd|", "o")
    erszeich1 = Replace(Trim(erszeich1), "|fffd|", "o")
    erszeich1 = Replace(Trim(erszeich1), "|fffd|", "0")
    erszeich1 = Replace(Trim(erszeich1), "|fffd|", "u")
    erszeich1 = Replace(Trim(erszeich1), "|fffd|", "u")
    erszeich1 = Replace(Trim(erszeich1), "|fffd|", "u")
    erszeich1 = Replace(Trim(erszeich1), "|fffd|", "y")
    erszeich1 = Replace(Trim(erszeich1), "|fffd|", "b")
    erszeich1 = Replace(Trim(erszeich1), "|fffd|", "A")
    erszeich1 = Replace(Trim(erszeich1), "|fffd|", "A")
    erszeich1 = Replace(Trim(erszeich1), "|fffd|", "A")
    erszeich1 = Replace(Trim(erszeich1), "|fffd|", "A")
    erszeich1 = Replace(Trim(erszeich1), "|fffd|", "A")
    erszeich1 = Replace(Trim(erszeich1), "|fffd|", "A")
    erszeich1 = Replace(Trim(erszeich1), "|fffd|", "A")
    erszeich1 = Replace(Trim(erszeich1), "|fffd|", "C")
    erszeich1 = Replace(Trim(erszeich1), "|fffd|", "E")
    erszeich1 = Replace(Trim(erszeich1), "|fffd|", "E")
    erszeich1 = Replace(Trim(erszeich1), "|fffd|", "E")
    erszeich1 = Replace(Trim(erszeich1), "|fffd|", "E")
    erszeich1 = Replace(Trim(erszeich1), "|fffd|", "C")
    erszeich1 = Replace(Trim(erszeich1), "|fffd|", "C")
    erszeich1 = Replace(Trim(erszeich1), "|fffd|", "R")
    
    erszeich1 = Replace(Trim(erszeich1), "&", "")
    erszeich1 = Replace(Trim(erszeich1), "+", "")

    UmlauteErs1 = erszeich1 ' R|fffd|ckgabewert

End Function

Public Function DateinamenKonventionErsetzen(erszeich1 As String)
    erszeich1 = Replace(Trim(erszeich1), Chr(9), " ") 'Tabulatoren duch Leerzeichen
    erszeich1 = Replace(Trim(erszeich1), vbCrLf, " ") 'Zeilenwechsel duch Leerzeichen
    erszeich1 = Replace(Trim(erszeich1), Chr(13), "") 'Zeilenwechsel duch Leerzeichen
    
    erszeich1 = Replace(Trim(erszeich1), Chr(34), "'") 'Anf|fffd|hrungszeichen duch Hochkomma
    erszeich1 = (Replace(Trim(erszeich1), "/", "_")) 'Unzul|fffd|ssiges Zeichen entsprechen Dateinamenkonvention Windows
    erszeich1 = Replace(Trim(erszeich1), "\", "_")
    erszeich1 = Replace(Trim(erszeich1), ":", "_")
    erszeich1 = Replace(Trim(erszeich1), "*", "+")
    erszeich1 = Replace(Trim(erszeich1), "?", "_")
    erszeich1 = Replace(Trim(erszeich1), "<", "_")
    erszeich1 = Replace(Trim(erszeich1), ">", "_")
    erszeich1 = Replace(Trim(erszeich1), ";", "_")
    
    DateinamenKonventionErsetzen = erszeich1 ' R|fffd|ckgabewert
End Function

Public Function TextmarkenAuflisten()
Dim I As Integer
Dim Meldung As String, Meldung1 As String

Meldung = "Textmarken in """ & _
  ActiveDocument.Name & """:"

  For I = 1 To ActiveDocument.Bookmarks.Count
    Meldung1 = Meldung1 & vbCrLf & I & ")  " & ActiveDocument.Bookmarks(I).Name
  Next I

If I = 1 Then
    Meldung1 = "Das Dokument enth|fffd|lt keine Textmarken!" & vbCrLf & vbCrLf _
        & "Um Textmarken entsprechechend zum Vorlagensystem mit Oulookanbindung einzuf|fffd|gen, klicken Sie bitte auf eine Textmarkennamen in der Symbolleiste um die gleichnamige Textmarke im Dokument zu erstellen!"
    
 End If
 
Meldung1 = Meldung1 & vbCrLf & vbCrLf _
        & "Weitere Informationen finden Sie unter: www.dotoffice.de/textmrk_ubers.htm"

 
  MsgBox Meldung1, vbInformation, Meldung

End Function
Public Function DreiFragezeichen()
' Springt zu den ersten ??? im Dokument

'Err.Clear
Selection.HomeKey Unit:=wdStory ' Springt zum Dokumentanfang
' Err.Clear
' MsgBox "Fehlernummer Dokumentanfang: " & Err.Number
On Error Resume Next

' ??? finden
    With ActiveDocument.Application.Selection.Find
        .ClearFormatting
        .Text = "???"
        .Replacement.Text = ""
        .Forward = True
        .Wrap = wdFindContinue
        .Format = False
        .MatchCase = False
        .MatchWholeWord = False
        .MatchWildcards = False
        .MatchSoundsLike = False
        .MatchAllWordForms = False
End With
Selection.Find.Execute
'MsgBox "Fehlernummer1: " & Err.Number

End Function

Public Function DreiFragezeichen_Abfragen()
' Springt zu den ersten ??? im Dokument

Dim Abschnittsz|fffd|hler As Long, AnzahlAbschnitte As Long
Dim Meldung_Fragez As String
Set myRange = ActiveDocument.Content


Meldung_Fragez = "Es wurden noch ""???"" gefunden!" & vbCrLf & vbCrLf _
    & "M|fffd|chten Sie diese Daten zun|fffd|chst ausf|fffd|llen bevor Sie fortfahren?" _
    & vbCrLf & vbCrLf _
    & "Hinweis:" & vbCrLf _
    & "In der Regel m|fffd|ssen Sie an ""???"" Daten vervollst|fffd|ndigen, die f|fffd|r diesen Brief oder dieses Fax notwendig sind." _
    & vbCrLf & "Klicken Sie auf ""Nein"", wenn Sie diese Daten zu einem sp|fffd|teren Zeitpunkt eingeben wollen, oder die ""???"" Bestandteil Ihrer Ausf|fffd|hrungen sind!" _
    & vbCrLf & vbCrLf & "Weitere Informationen Ihres Administrators erhalten Sie, wenn Sie jetzt auf ""Ja"" klicken und anschlie|fffd|end im Hilfemen|fffd| --> ""?"" die " _
    & vbCrLf & Chr(9) & """vorlagenagenabh|fffd|ngige Hilfe""  aufrufen bzw. unter" _
    & vbCrLf & Chr(9) & """Dokumentation"" im Kapitel ""Die Drei Fragezeichen""."


myRange.Find.Execute FindText:="???", Forward:=True
If myRange.Find.Found = True Then
        AntwortFragezeichen = MsgBox(Meldung_Fragez, vbYesNo + vbDefaultButton2 + vbInformation, "Es wurden noch ""???"" gefunden! - " & Msg_title)
End If

Set myRange = Nothing
End Function

Public Function QuickinfoSetzen(Schaltfl|fffd|chenName As String, QuickinfoText As String, SymbolleistenName As String, SymbolIndex)
    On Error GoTo FehlerSymbolleiste
    
    ' Quickinfo f|fffd|r Schltfl|fffd|chen setzen


    CommandBars(SymbolleistenName).Controls(Schaltfl|fffd|chenName).TooltipText = QuickinfoText
    SymbolIndex = CommandBars(SymbolleistenName).Controls(Schaltfl|fffd|chenName).Index + 1

QuickinfoSetzen = SymbolIndex

Exit Function

FehlerSymbolleiste:
    CommandBars(SymbolleistenName).Controls(SymbolIndex).TooltipText = CommandBars(SymbolleistenName).Controls(SymbolIndex).Caption

End Function

 Function SymbolEinblenden(Schaltfl|fffd|chenName As String, SymbolleistenName As String, Anzeigen As Boolean)
 
 Dim Sichtbar As Boolean
 Dim EinAusgeblendet As String
 
    On Error GoTo FehlerSymbolleiste
    
    Sichtbar = CommandBars(SymbolleistenName).Controls(Schaltfl|fffd|chenName).Visible
    
    If Anzeigen = Sichtbar Then Exit Function
    
    CommandBars(SymbolleistenName).Controls(Schaltfl|fffd|chenName).Visible = Anzeigen
    
    Templates(ZVL_KoernerNR).Save                 ' Zvlg_koerner.dot speichern

    
    Exit Function
FehlerSymbolleiste:
    
    If Err.Number = 5 Then
        Err.Clear
        Resume Next
    Else
        MsgBox Err.Number & vbCrLf & Err.Description, vbCritical, Msg_title
    End If

End Function

Attribute VB_Name = "FunktionenAdresseAufbereiten"
Public Function FAnredAnrede(FAnrede As String) As String

    If Trim(FAnrede) = "Herrn" Then
            FAnredAnrede = "Herr"
        Else
            FAnredAnrede = Trim(FAnrede)
    End If
End Function

Public Function AdresseAufbereiten( _
        FAnrede As String, _
        FTitel As String, _
        FPers|fffd|nlich As Boolean, _
        FVorname As String, _
        FNachname As String, _
        FFirma As String, _
        FAbteilung As String, _
        FStrasse As String, _
        FPosition As String, _
        FehlmeldungUnterdr|fffd|cken As Boolean) As String

    ' **** Adressen Bereiningen f|fffd|hrende Leerzeichen etc.
    Dim ZeilenumbruchNameleer As String
    Dim ZeilenumbruchPosition As String
    Dim ZeileumbruchFirma As String
    Dim ZeilenumbruchAnrede As String
    
    Dim PersZeilenumbruchAnredePosition As String
    Dim PersZeilenumbruchName As String
    Dim ZeielenumbruchAbteilung As String
    
    
 ' Abbruch falls weder Name noch Firma angegeben
    If FNachname = "" And FFirma = "" And FehlmeldungUnterdr|fffd|cken = False Then
        Abbruch = True
        MsgBox (FehlerMessageBrief), 16, Msg_title
        Exit Function
    End If
    
    FAbteilung = Trim(FAbteilung)
    FFirma = Trim(FFirma)
    If Trim(FAnrede) <> "" Then ZeilenumbruchAnrede = vbCrLf
    
    If Trim(FAnrede) = "Herr" Then
            FAnrede = Trim(FAnrede & "n") & " "
        Else
            FAnrede = Trim(FAnrede) & " "
    End If
    
    If Trim(FVorname) <> "" Then
            FVorname = Trim(FVorname) & " "
        Else
            FVorname = Trim(FVorname)
    End If
    
    FNachname = Trim(FNachname)
    FStrasse = Trim(FStrasse)

    
    If Trim(FTitel) <> "" Then FTitel = Trim(FTitel) & " "
    

    
If Trim(FTitel & FVorname & FNachname) <> "" And (Trim(FAbteilung) & Trim(FStrasse)) <> "" Then ZeilenumbruchNameleer = vbCrLf

If Trim(FPosition) <> "" Then FPosition = Trim(FPosition)

Select Case PositionOderKNR
Case Is = 0 ' KDNR
    If Trim(FAbteilung) <> "" Then
        If Trim(FStrasse) <> "" Then
            FAbteilung = Trim(FAbteilung) & vbCrLf
        Else
            FAbteilung = Trim(FAbteilung)
        End If
    Else
        FAbteilung = ""
    End If

        
        If Trim(FFirma) <> "" Then
          If Trim(FAbteilung) & Trim(FStrasse) <> "" Then
                FFirma = Trim(FFirma) & vbCrLf
            Else
                FFirma = Trim(FFirma)
          End If
        Else
            FFirma = ""
        End If

        If FPers|fffd|nlich Then 'Pers|fffd|nliche Anred mit Name vor Firma
                If Trim(FTitel & FVorname & FNachname) <> "" _
                    And Trim(Trim(FFirma) & Trim(FAbteilung) & Trim(FStrasse)) <> "" Then PersZeilenumbruchName = vbCrLf
                
                AdresseAufbereiten = Trim(Trim(FAnrede) & ZeilenumbruchAnrede & _
                                        Trim(FTitel & FVorname & FNachname) & PersZeilenumbruchName & _
                                        Trim(FFirma) & _
                                        Trim(FAbteilung) & _
                                        Trim(FStrasse))
            Else    'Anrede nicht Pers|fffd|nlich das hei|fffd|t erst Firma, dann Name, dann Abteilung dann Strasse
                
                If FFirma <> "" Then
                        If Trim(FTitel & FVorname & FNachname) = "" And Trim(FAnrede) <> "" Then
                            AdresseAufbereiten = Trim(Trim(FAnrede) & ZeilenumbruchAnrede & _
                                                    Trim(FFirma) & _
                                                    Trim(FAbteilung) & _
                                                    Trim(FStrasse))
                            Else
                                If Trim(FTitel & FVorname & FNachname) <> "" _
                                    And Trim(FAbteilung) & Trim(FStrasse) = "" Then PersZeilenumbruchName = vbCrLf
                            
                            AdresseAufbereiten = Trim(Trim(FFirma) & PersZeilenumbruchName & _
                                                 Trim(FAnrede & FTitel & FVorname & FNachname) & ZeilenumbruchNameleer & _
                                                 Trim(FAbteilung) & _
                                                 Trim(FStrasse))
                        End If
                        
                  Else
                    If Trim(FAnrede & FPosition) <> "" Then PersZeilenumbruchAnredePosition = vbCrLf
                    
                    AdresseAufbereiten = Trim(Trim(FAnrede) & ZeilenumbruchAnrede & _
                                            Trim(FTitel & FVorname & FNachname) & ZeilenumbruchNameleer & _
                                            Trim(FAbteilung) & _
                                            Trim(FStrasse))
                End If
        End If

Case Is = 1 ' entsprechend DIN 5008
        If Trim(FAbteilung) <> "" Then
            If Trim(FStrasse) <> "" Then
                FAbteilung = Trim(FAbteilung) & vbCrLf
            Else
                FAbteilung = Trim(FAbteilung)
            End If
        Else
            FAbteilung = ""
        End If

        
        If Trim(FPosition) <> "" Or Trim(FAnrede) <> "" Then     ' Eigenschaft gibt an, ob Position als Position (Wahr) oder als Kundenummer (Nein --> Standard)
                If Trim(FPosition) <> "" Then FPosition = Trim(FPosition) & " "
                ZeilenumbruchPosition = vbCrLf
        
            Else
                FPosition = ""
        End If
        
        If FPers|fffd|nlich Then 'Pers|fffd|nliche Anred mit Name vor Firma
        
                If Trim(FFirma) <> "" Then
                  If Trim(FAbteilung) & Trim(FStrasse) <> "" Then
                        FFirma = Trim(FFirma) & vbCrLf
                    Else
                        FFirma = Trim(FFirma)
                  End If
                Else
                    FFirma = ""
                End If
        
                If Trim(FTitel & FVorname & FNachname) <> "" And Trim(FAnrede & FPosition) <> "" Then ZeilenumbruchPosition = vbCrLf
                If Trim(FTitel & FVorname & FNachname) <> "" _
                And (Trim(FAbteilung) & Trim(FStrasse) & Trim(FFirma)) <> "" Then PersZeilenumbruchName = vbCrLf
                
                AdresseAufbereiten = Trim(Trim(FAnrede & FPosition) & ZeilenumbruchPosition & _
                                        Trim(FTitel & FVorname & FNachname) & PersZeilenumbruchName & _
                                        Trim(FFirma) & _
                                        Trim(FAbteilung) & _
                                        Trim(FStrasse))
            Else    'Anrede nicht Pers|fffd|nlich das hei|fffd|t erst Firma, dann Name, dann Abteilung dann Strasse
                
                If FFirma <> "" Then
                    If Trim(FPosition & FTitel & FVorname & FNachname) <> "" And Trim(FAbteilung & FStrasse) <> "" Then ZeilenumbruchNameleer = vbCrLf

                        
                        If Trim(FTitel & FVorname & FNachname) = "" And Trim(FAnrede) <> "" Then
                                If Trim(FFirma) <> "" Then
                                  If Trim(FAbteilung) & Trim(FStrasse) <> "" Then
                                        FFirma = Trim(FFirma) & vbCrLf
                                    Else
                                        FFirma = Trim(FFirma)
                                  End If
                                Else
                                    FFirma = ""
                                End If
                        
                            AdresseAufbereiten = Trim(Trim(FAnrede & vbCrLf & _
                                                    Trim(FFirma) & _
                                                    FPosition & FTitel & FVorname & FNachname) & ZeilenumbruchNameleer & _
                                                    Trim(FAbteilung) & _
                                                    Trim(FStrasse))
                        Else
                        If Trim(FFirma) <> "" And Trim(FAnrede & FPosition & FTitel & FVorname & FNachname & FAbteilung & FStrasse) <> "" Then PersZeilenumbruchName = vbCrLf
                        If Trim(FAnrede & FPosition & FTitel & FVorname & FNachname) <> "" And Trim(FAbteilung & FStrasse) <> "" Then ZeilenumbruchNameleer = vbCrLf
                            AdresseAufbereiten = Trim(Trim(FFirma) & PersZeilenumbruchName & _
                                                    Trim(FAnrede & FPosition & FTitel & FVorname & FNachname) & ZeilenumbruchNameleer & _
                                                    Trim(FAbteilung) & _
                                                    Trim(FStrasse))
                        
                        End If
                        
                  Else
                    If Trim(FAnrede & FPosition) <> "" Then PersZeilenumbruchAnredePosition = vbCrLf
                            If Trim(FFirma) <> "" Then
                              If Trim(FAbteilung) & Trim(FStrasse) <> "" Then
                                    FFirma = Trim(FFirma) & vbCrLf
                                Else
                                    FFirma = Trim(FFirma)
                              End If
                            Else
                                FFirma = ""
                            End If

                    AdresseAufbereiten = Trim(Trim(FAnrede & FPosition) & PersZeilenumbruchAnredePosition & _
                                            Trim(FTitel & FVorname & FNachname) & ZeilenumbruchNameleer & _
                                            Trim(FFirma) & _
                                            Trim(FAbteilung) & _
                                            Trim(FStrasse))
                End If
        End If

Case Is = 2 ' Position steht in jedem Fall darunter
    If Trim(FAbteilung) <> "" Then
        If Trim(FStrasse) <> "" Then
            FAbteilung = Trim(FAbteilung) & vbCrLf
        Else
            FAbteilung = Trim(FAbteilung)
        End If
    Else
        FAbteilung = ""
    End If

    If Trim(FPosition) <> "" _
        And Trim(Trim(FAbteilung) & Trim(FStrasse)) <> "" Then ZeilenumbruchPosition = vbCrLf
        
    If Trim(FPosition) <> "" And Trim(Trim(FFirma) & Trim(FAbteilung) & Trim(FStrasse)) <> "" Then
            PersZeilenumbruchAnredePosition = vbCrLf
        Else
            PersZeilenumbruchAnredePosition = ""
    End If
    
    If Trim(FTitel & FVorname & FNachname) <> "" _
    And Trim(Trim(FFirma) & Trim(FAbteilung) & Trim(FStrasse) & FPosition) <> "" Then PersZeilenumbruchName = vbCrLf

        If Trim(FTitel & FVorname & FNachname) <> "" Or (Trim(FAbteilung) <> "" Or Trim(FFirma) <> "") Then ZeilenumbruchNameleer = vbCrLf
        
        If FPers|fffd|nlich Then 'Pers|fffd|nliche Anred mit Name vor Firma
                If Trim(FTitel & FVorname & FNachname) <> "" And _
                   Trim(FFirma & FAbteilung & FStrasse) <> "" Then PersZeilenumbruchName = vbCrLf
                
                If Trim(FFirma) <> "" And Trim(FAbteilung & FStrasse) <> "" Then
                        ZeileumbruchFirma = vbCrLf
                    Else
                        ZeileumbruchFirma = ""
                End If
            
                AdresseAufbereiten = Trim(Trim(FAnrede) & ZeilenumbruchAnrede & _
                                        Trim(FTitel & FVorname & FNachname) & PersZeilenumbruchName & _
                                        FPosition & PersZeilenumbruchAnredePosition & _
                                        Trim(FFirma) & ZeileumbruchFirma & _
                                        Trim(FAbteilung) & _
                                        Trim(FStrasse))
            Else    'Anrede nicht Pers|fffd|nlich das hei|fffd|t erst Firma, dann Name, dann Abteilung dann Strasse
                
                If FFirma <> "" Then
                        If Trim(FFirma) <> "" And _
                                Trim(FTitel & FVorname & FNachname & FPosition & FAbteilung & FStrasse) <> "" _
                                Then ZeileumbruchFirma = vbCrLf

                        If Trim(FTitel & FVorname & FNachname) = "" And Trim(FAnrede) <> "" Then
                        
                            AdresseAufbereiten = Trim(Trim(FAnrede) & vbCrLf & _
                                                    Trim(FFirma) & ZeileumbruchFirma & _
                                                    FPosition & ZeilenumbruchPosition & _
                                                    Trim(FAbteilung) & _
                                                    Trim(FStrasse))
                        Else
                            If Trim(FTitel & FVorname & FNachname) <> "" And _
                               Trim(Trim(FAbteilung) & Trim(FStrasse) & Trim(FPosition)) <> "" Then
                                    PersZeilenumbruchName = vbCrLf
                               Else
                                    PersZeilenumbruchName = ""
                            End If

                                
                                AdresseAufbereiten = Trim(Trim(FFirma) & ZeileumbruchFirma & _
                                                        Trim(FAnrede & FTitel & FVorname & FNachname) & PersZeilenumbruchName & _
                                                        Trim(FPosition) & ZeilenumbruchPosition & _
                                                        Trim(FAbteilung) & _
                                                        Trim(FStrasse))
                        End If
                        
                  Else
                    AdresseAufbereiten = Trim(FAnrede & ZeilenumbruchAnrede & _
                                            Trim(FTitel & FVorname & FNachname) & PersZeilenumbruchName & _
                                            FPosition & ZeilenumbruchPosition & _
                                            Trim(FAbteilung) & _
                                            Trim(FStrasse))

                End If
        End If

Case Is = 3 ' Position steht in jedem Fall |fffd|ber Name
    
    If Trim(FPosition) <> "" _
        And Trim(Trim(FAbteilung) & Trim(FStrasse)) <> "" Then ZeilenumbruchPosition = vbCrLf
        
    If Trim(FPosition) <> "" And Trim(FAnrede & FTitel & FVorname & FNachname & Trim(FFirma) & Trim(FAbteilung) & Trim(FStrasse)) <> "" Then
            PersZeilenumbruchAnredePosition = vbCrLf
        Else
            PersZeilenumbruchAnredePosition = ""
    End If
    
    If Trim(FTitel & FVorname & FNachname) <> "" _
        And Trim(Trim(FFirma) & Trim(FAbteilung) & Trim(FStrasse)) <> "" Then
            PersZeilenumbruchName = vbCrLf
        Else
            PersZeilenumbruchName = ""
        End If

        If Trim(FTitel & FVorname & FNachname) <> "" Or (Trim(FAbteilung) <> "" Or Trim(FFirma) <> "") Then ZeilenumbruchNameleer = vbCrLf
        
        If FPers|fffd|nlich Then 'Pers|fffd|nliche Anred mit Name vor Firma
                If Trim(FTitel & FVorname & FNachname) <> "" And _
                   Trim(FFirma & FAbteilung & FStrasse) <> "" Then PersZeilenumbruchName = vbCrLf
                
                If Trim(FFirma) <> "" And Trim(FAbteilung & FStrasse) <> "" Then
                        ZeileumbruchFirma = vbCrLf
                    Else
                        ZeileumbruchFirma = ""
                End If
                
                If Trim(FAbteilung) <> "" And Trim(FStrasse) <> "" Then FAbteilung = Trim(FAbteilung) & vbCrLf
                
            
                If Trim(FPosition) = "" And Trim(FAnrede) <> "" Then
                    AdresseAufbereiten = Trim(FAnrede) & vbCrLf & _
                                            Trim(Trim(FTitel & FVorname & FNachname) & PersZeilenumbruchName & _
                                            Trim(FFirma) & ZeileumbruchFirma & _
                                            Trim(FAbteilung) & _
                                            Trim(FStrasse))
                Else
                    AdresseAufbereiten = FPosition & PersZeilenumbruchAnredePosition & _
                            Trim(Trim(FAnrede & FTitel & FVorname & FNachname) & PersZeilenumbruchName & _
                            Trim(FFirma) & ZeileumbruchFirma & _
                            Trim(FAbteilung) & _
                            Trim(FStrasse))
                End If

            Else    'Anrede nicht Pers|fffd|nlich das hei|fffd|t erst Firma, dann Name, dann Abteilung dann Strasse
                
               
                    If Trim(FAbteilung) <> "" And _
                        Trim(FPosition & FStrasse) <> "" _
                        Then ZeielenumbruchAbteilung = vbCrLf
                
                    If Trim(FFirma) <> "" And _
                            Trim(FTitel & FVorname & FNachname & FPosition & FAbteilung & FStrasse) <> "" _
                            Then ZeileumbruchFirma = vbCrLf

                    If Trim(FTitel & FVorname & FNachname) = "" And Trim(FAnrede) <> "" Then
                        
                        If FPosition <> "" And Trim(FStrasse) <> "" Then
                            ZeilenumbruchPosition = vbCrLf
                            Else
                            ZeilenumbruchPosition = ""
                        End If
                        
                        AdresseAufbereiten = Trim(Trim(FAnrede) & vbCrLf & _
                            Trim(FFirma) & ZeileumbruchFirma & _
                            Trim(FAbteilung) & ZeielenumbruchAbteilung & _
                            FPosition & ZeilenumbruchPosition & _
                            Trim(FStrasse))
                        Else
                            If Trim(FAbteilung) <> "" And _
                                Trim(FAnrede & FTitel & FVorname & FNachname & FPosition & FStrasse) <> "" _
                                Then ZeielenumbruchAbteilung = vbCrLf
                                
                            If Trim(FTitel & FVorname & FNachname) <> "" And Trim(FStrasse) <> "" Then
                                PersZeilenumbruchName = vbCrLf
                              Else
                                PersZeilenumbruchName = ""
                            End If
                            If Trim(FPosition) <> "" And Trim(FTitel & FVorname & FNachname & FStrasse) <> "" Then
                                    ZeilenumbruchPosition = vbCrLf
                                Else
                                    ZeilenumbruchPosition = ""
                            End If
                              
                        AdresseAufbereiten = Trim(Trim(FFirma) & ZeileumbruchFirma & _
                                                    Trim(FAbteilung) & ZeielenumbruchAbteilung & _
                                                    Trim(FPosition) & ZeilenumbruchPosition & _
                                                    Trim(FAnrede & FTitel & FVorname & FNachname) & PersZeilenumbruchName & _
                                                    Trim(FStrasse))
                        End If
                        
        End If
End Select
    AdresseAufbereiten = Trim(AdresseAufbereiten)
End Function
        
Public Function FAnsprechpartner( _
        FAnrede As String, _
        FTitel As String, _
        FVorname As String, _
        FNachname As String) As String

If Trim(FAnrede) = "Herr" Then
        FAnrede = Trim(FAnrede & "n") & " "
    Else
        FAnrede = Trim(FAnrede) & " "
End If

If Trim(FTitel) <> "" Then FTitel = Trim(FTitel) & " "

If Trim(FVorname) <> "" Then
        FVorname = Trim(FVorname) & " "
    Else
        FVorname = Trim(FVorname)
End If

FNachname = Trim(FNachname)
If Trim(FFirma) <> "" Then
        FFirma = Trim(FFirma) & vbCrLf
    Else
        FFirma = ""
End If

FAnsprechpartner = FAnrede & FTitel & FVorname & FNachname

End Function

Public Function FAnsprechpartnerP( _
        FAnrede As String, _
        FTitel As String, _
        FVorname As String, _
        FNachname As String, _
        FPosition As String) As String

If Trim(FAnrede) = "Herr" Then
        FAnrede = Trim(FAnrede & "n") & " "
    Else
        FAnrede = Trim(FAnrede) & " "
End If

If Trim(FTitel) <> "" Then FTitel = Trim(FTitel) & " "

If PositionOderKNR = 1 And Trim(FPosition) <> "" Then ' Eigenschaft gibt an, ob Position als Position (Wahr) oder als Kundenummer (Nein --> Standard)
        FPosition = Trim(FPosition) & " "
    Else
        FPosition = ""
End If

If Trim(FVorname) <> "" Then
        FVorname = Trim(FVorname) & " "
    Else
        FVorname = Trim(FVorname)
End If

FNachname = Trim(FNachname)
If Trim(FFirma) <> "" Then
        FFirma = Trim(FFirma) & vbCrLf
    Else
        FFirma = ""
End If

FAnsprechpartnerP = FAnrede & FPosition & FTitel & FVorname & FNachname

End Function

Public Function FAnsprechpartnerK( _
        FAnrede As String, _
        FTitel As String, _
        FNachname As String) As String

If Trim(FAnrede) = "Herr" Then
        FAnrede = Trim(FAnrede & "n") & " "
    Else
        FAnrede = Trim(FAnrede) & " "
End If

If Trim(FTitel) <> "" Then FTitel = Trim(FTitel) & " "

FNachname = Trim(FNachname)
If Trim(FFirma) <> "" Then
        FFirma = Trim(FFirma) & vbCrLf
    Else
        FFirma = ""
End If

FAnsprechpartnerK = FAnrede & FTitel & FNachname

End Function

Public Function FAnsprechpartnerPK( _
        FAnrede As String, _
        FTitel As String, _
        FNachname As String, _
        FPosition As String) As String

If Trim(FAnrede) = "Herr" Then
        FAnrede = Trim(FAnrede & "n") & " "
    Else
        FAnrede = Trim(FAnrede) & " "
End If

If Trim(FTitel) <> "" Then FTitel = Trim(FTitel) & " "

If PositionOderKNR = 1 And Trim(FPosition) <> "" Then ' Eigenschaft gibt an, ob Position als Position (Wahr) oder als Kundenummer (Nein --> Standard)
        FPosition = Trim(FPosition) & " "
    Else
        FPosition = ""
End If

FNachname = Trim(FNachname)
If Trim(FFirma) <> "" Then
        FFirma = Trim(FFirma) & vbCrLf
    Else
        FFirma = ""
End If

FAnsprechpartnerPK = FAnrede & FPosition & FTitel & FNachname

End Function


Public Function FAnred( _
        FAnrede As String, _
        FTitel As String, _
        FVorname As String, _
        FNachname As String) As String

If Trim(FAnrede) = "Herrn" Then
        FAnrede = "Herr" & " "
    Else
        FAnrede = Trim(FAnrede) & " "
End If

If Trim(FTitel) <> "" Then FTitel = Trim(FTitel) & " "

If Trim(FVorname) <> "" Then
        FVorname = Trim(FVorname) & " "
    Else
        FVorname = Trim(FVorname)
End If

FNachname = Trim(FNachname)
If Trim(FFirma) <> "" Then
        FFirma = Trim(FFirma) & vbCrLf
    Else
        FFirma = ""
End If

FAnred = FAnrede & FTitel & FVorname & FNachname

End Function

Public Function FAnredP( _
        FAnrede As String, _
        FTitel As String, _
        FVorname As String, _
        FNachname As String, _
        FPosition As String) As String

If Trim(FAnrede) = "Herrn" Then
        FAnrede = "Herr" & " "
    Else
        FAnrede = Trim(FAnrede) & " "
End If


If Trim(FTitel) <> "" Then FTitel = Trim(FTitel) & " "

If PositionOderKNR = 1 And Trim(FPosition) <> "" Then ' Eigenschaft gibt an, ob Position als Position (Wahr) oder als Kundenummer (Nein --> Standard)
        FPosition = Trim(FPosition) & " "
    Else
        FPosition = ""
End If

If Trim(FVorname) <> "" Then
        FVorname = Trim(FVorname) & " "
    Else
        FVorname = Trim(FVorname)
End If

FNachname = Trim(FNachname)
If Trim(FFirma) <> "" Then
        FFirma = Trim(FFirma) & vbCrLf
    Else
        FFirma = ""
End If

FAnredP = FAnrede & FPosition & FTitel & FVorname & FNachname

End Function

Public Function FAnredK( _
        FAnrede As String, _
        FTitel As String, _
        FNachname As String) As String

If Trim(FAnrede) = "Herrn" Then
        FAnrede = "Herr" & " "
    Else
        FAnrede = Trim(FAnrede) & " "
End If

If Trim(FTitel) <> "" Then FTitel = Trim(FTitel) & " "

FNachname = Trim(FNachname)
If Trim(FFirma) <> "" Then
        FFirma = Trim(FFirma) & vbCrLf
    Else
        FFirma = ""
End If

FAnredK = FAnrede & FTitel & FNachname

End Function

Public Function FAnredPK( _
        FAnrede As String, _
        FTitel As String, _
        FNachname As String, _
        FPosition As String) As String

If Trim(FAnrede) = "Herrn" Then
        FAnrede = "Herr" & " "
    Else
        FAnrede = Trim(FAnrede) & " "
End If


If Trim(FTitel) <> "" Then FTitel = Trim(FTitel) & " "

If PositionOderKNR = 1 And Trim(FPosition) <> "" Then ' Eigenschaft gibt an, ob Position als Position (Wahr) oder als Kundenummer (Nein --> Standard)
        FPosition = Trim(FPosition) & " "
    Else
        FPosition = ""
End If


FNachname = Trim(FNachname)
If Trim(FFirma) <> "" Then
        FFirma = Trim(FFirma) & vbCrLf
    Else
        FFirma = ""
End If

FAnredPK = FAnrede & FPosition & FTitel & FNachname

End Function

Public Function FVName( _
        FTitel As String, _
        FVorname As String, _
        FNachname As String) As String

If Trim(FTitel) <> "" Then FTitel = Trim(FTitel) & " "

If Trim(FVorname) <> "" Then
        FVorname = Trim(FVorname) & " "
    Else
        FVorname = Trim(FVorname)
End If

FNachname = Trim(FNachname)
If Trim(FFirma) <> "" Then
        FFirma = Trim(FFirma) & vbCrLf
    Else
        FFirma = ""
End If

FVName = FTitel & FVorname & FNachname

End Function

Public Function FKName( _
        FTitel As String, _
        FNachname As String) As String

If Trim(FTitel) <> "" Then FTitel = Trim(FTitel) & " "

FNachname = Trim(FNachname)
If Trim(FFirma) <> "" Then
        FFirma = Trim(FFirma) & vbCrLf
    Else
        FFirma = ""
End If

FKName = FTitel & FVorname & FNachname

End Function


Attribute VB_Name = "FunktionenFehler"
Public Function Vorlage_Fehlt()
' liefert Fehlermeldung falls Vorlage (bei Klick auf B- oder F-Symbol in Symbolleiste) aufgerufen wird, die nicht vorhanden ist!

Dim Ordnerart As String

VorlgAllg = "Sie k|fffd|nnen Ihre Standard-" _
        & VorlageArt & "-Vorlage mit dem Namen " _
        & VorlageSymb & " nicht aufrufen!" & vbCrLf


If VorlageFehltFehlerZur|fffd|cksetzer = False Then
    VorlgU1 = "Ursache:" & Chr(9) _
        & "Im eingestellten Vorlagen-Ordner " _
        & vbCrLf & Chr(9) & VorlagenPfad & vbCrLf & Chr(9) _
        & "fehlt die Vorlage --> " & VorlageSymb _
        & " , die mit diesem Icon aufgerufen wird!" _
        & vbCrLf & vbCrLf & vbCrLf

    VorlgL1 = "L|fffd|sung1:" & Chr(9) _
        & "Speichern Sie Ihre Standard-" & VorlageArt _
        & "-Vorlage mit den Namen --> " _
        & VorlageSymb & vbCrLf & Chr(9) _
        & "in Ihren Standard-Vorlagen-Ordner " _
        & vbCrLf & Chr(9) & "--> " & VorlagenPfad _
        & vbCrLf & vbCrLf

    VorlgL2 = "L|fffd|sung2:" & Chr(9) _
        & "Korrigieren Sie unter Extras --> Optionen" _
        & vbCrLf & Chr(9) & "Ihren Standard-Vorlagen-Ordner!" _
        & vbCrLf & Chr(9) _
        & "In diesem Fall lesen Sie bitte zun|fffd|chst die Dokumentation" _
        & vbCrLf & Chr(9) _
        & "und/oder fragen Sie Ihren Administrator!"

Else
    VorlgU1 = "Ursache:" & Chr(9) _
        & "Weder im Standard-Vorlagenordner" _
        & vbCrLf & Chr(9) & Options.DefaultFilePath(wdUserTemplatesPath) & vbCrLf & _
        "noch im Arbeitsgruppenvorlagenordner" _
        & vbCrLf & Chr(9) & VorlagenPfad & vbCrLf _
        & "existiert die Vorlage --> " & VorlageSymb _
        & " , die mit diesem Icon aufgerufen wird!" _
        & vbCrLf & vbCrLf & vbCrLf

    VorlgL1 = "L|fffd|sung1:" & Chr(9) _
        & "Speichern Sie Ihre Standard-" & VorlageArt _
        & "-Vorlage mit den Namen --> " _
        & VorlageSymb & vbCrLf & Chr(9) _
        & "in einem der o.g. Ordnern." & vbCrLf & vbCrLf

    VorlgL2 = "L|fffd|sung2:" & Chr(9) _
        & "Korrigieren Sie unter Extras --> Optionen" _
        & vbCrLf & Chr(9) & "Ihre Vorlagen-Ordner!" _
        & vbCrLf & Chr(9) _
        & "In diesem Fall lesen Sie bitte zun|fffd|chst die Dokumentation" _
        & vbCrLf & Chr(9) _
        & "und/oder fragen Sie Ihren Administrator!"

End If


    MsgBox VorlgAllg & Trenn _
        & VorlgU1 & VorlgL1 & VorlgL2, 16, Msg_title

End Function

Public Function Unterschrift_Fehlt()

' Makro gibt Fehlermeldung f|fffd|r fehlende Unterschriften aus, wenn |fffd|ber Autonew aufgerufen

Dim Textm_Unterschr As String
    
Set myTemplate = ActiveDocument.AttachedTemplate
'Set fs = Application.Filesearch

    'MsgBox myTemplate.Path & Application.PathSeparator _
    '    & myTemplate.Name
    
UntAllg = "Ihre eingescannte Unterschrift konnte nicht eingef|fffd|gt werden!"
Textm_Unterschr = "Wenn sie keine gescannte Unterschrift automatisch einf|fffd|gen wollen," & vbCrLf & _
                    "l|fffd|schen Sie bitte die Textmarke" & vbCrLf & Chr(9) _
                    & "  --> Unterschrift" & vbCrLf & " aus der Vorlage" & vbCrLf & Chr(9) _
                    & myTemplate.Path & Application.PathSeparator & myTemplate.Name & vbCrLf
UntAllg = "Unterschrift konnte nicht eingef|fffd|gt werden! " _
    & "(" & Err.Number & ")" & vbCrLf & _
    "Auf das u.g. Laufwerk konnte nicht zugegriffen werden!"
    
    
Select Case Err.Number  ' Fehlernummer auswerten.
    Case 75             ' Auf Laufwerk kann nicht zugegriffen werden
        UntAllg = "Unterschrift konnte nicht eingef|fffd|gt werden! " _
            & "(" & Err.Number & ")" & vbCrLf & _
            "Auf das u.g. Laufwerk konnte nicht zugegriffen werden!"

        MsgBox UntAllg & vbCrLf & Trenn _
            & "Ihre im Modul eingestellter Pfad zur Unterschrift:" _
            & vbCrLf & Chr(9) _
            & UnterschriftPfad & Application.PathSeparator _
            & vbCrLf & vbCrLf _
            & "Bitte pr|fffd|fen Sie auch, ob ggf. die Netzwerkverbindung besteht!" _
            & vbCrLf & Trenn & Textm_Unterschr & vbCrLf _
            , 16, Msg_title
    
    Case 76             ' Auf Laufwerk kann nicht zugegriffen werden
            UntAllg = "Unterschrift konnte nicht eingef|fffd|gt werden! " _
                & "(" & Err.Number & ")" & vbCrLf _
                & "Der im Modul eingestellte Pfad zur " _
                & "unterschrift_" & Application.UserInitials _
                & ".tif existiert nicht oder es besteht keine Netzwerkverbindung zu diesem Laufwerk!"

                
            MsgBox UntAllg & vbCrLf & Trenn _
                & Textm_Unterschr & Trenn _
                & "Ihre im Modul eingestellter Pfad zur Unterschrift lautet:" _
                & vbCrLf & Chr(9) _
                & UnterschriftPfad & Application.PathSeparator _
                & vbCrLf & vbCrLf & _
                "L|fffd|sung1:" & Chr(9) _
                & "Korrigieren Sie die Ordner zu Ihrer eingescannten Unterschrift" _
                & vbCrLf & Chr(9) & "(" & "unterschrift_" & Application.UserInitials _
                & ".tif) auf Ihrer Festplatte in: " & vbCrLf & Chr(9) _
                & UnterschriftPfad & vbCrLf & vbCrLf & _
                "L|fffd|sung2:" & Chr(9) _
                & "Korrigieren Sie den Unterschriftspfad im Modul zum tats|fffd|chlichen Ort" _
                & vbCrLf & Chr(9) _
                & "Ihrer eigescannten Unterschrift (" & "unterschrift_" & Application.UserInitials _
                & ".tif)! " & vbCrLf & Chr(9) _
                & "Lesen Sie dazu aber zun|fffd|chst die Dokumentation und/oder" _
                & vbCrLf & Chr(9) & "fragen Sie Ihren Administartor!!!", 16, Msg_title

        
    Case 5152               ' Pfadname syntaktisch falsch
            UntAllg = "Unterschrift konnte nicht eingef|fffd|gt werden! " _
                & "(" & Err.Number & ")" & vbCrLf & _
                "Bitte |fffd|berpr|fffd|fen Sie Benutzerinitialien und Dateiname Ihrer eingescannten Unterschrift (auch auf syntaktische Richtigkeit)!"
                
        MsgBox UntAllg & vbCrLf _
            & Trenn & Textm_Unterschr & vbCrLf & Trenn _
            & "Bitte pr|fffd|fen Sie ggf. die Netzwerkverbindung und die folgenden derzeitigen Einstellungen:" _
            & vbCrLf & vbCrLf & _
            "Extras --> Optionen --> Benutzerinformationen --> Benutzerinitialien: " _
            & Application.UserInitials & vbCrLf & vbCrLf & _
            "Ihre im Modul eingestellter Pfad zur Unterschrift:" & _
            vbCrLf & Chr(9) & _
            UnterschriftPfad & Application.PathSeparator & vbCrLf & _
            vbCrLf & Ind5, 16, Msg_title
                
    Case Else               ' Andere F|fffd|lle hier bearbeiten..."
        MsgBox "Fehler konnte nicht ermittelt werden. Bitte schicken Sie ggf. eine Mail an " & E_MAIL _
             & vbCrLf & vbCrLf & _
             " Bitte erkl|fffd|ren Sie dabei Ihre Einstellungen (Tastenkombination Alt+E), bei welcher Aktion der Fehler auftritt und geben Sie bitte die folgende Fehlernummer an!" _
             & vbCrLf & "Fehlernummer: " & Err.Number _
             , 16, Msg_title
End Select
    
Err.Clear                       ' Felder des Err-Objekts

        End Function

Attribute VB_Name = "LaufendeNummer"
Public Function LaufendeNummerErmitteln(Speicherpfad As String, Anfangszahl As Long, AnzahlStellenLfdNr As String) As String

On Error GoTo Fehler
Dim a As Long, z As Long
Dim Zahl As Long
Dim R|fffd|ckgabe As String

Dim AktuellerOrdner As String
AktuellerOrdner = CurDir
ChDir (SavePath)
ChDir AktuellerOrdner


Zahl = Anfangszahl + Filesearch(Speicherpfad, "*.doc*")

'MsgBox "Anfangszahl: " & Anfangszahl & vbCrLf & "A: " & a & vbCrLf & "-z: " & z & vbCrLf & Zahl & vbCrLf & Speicherpfad

LaufendeNummerErmitteln = CStr(Format(Zahl, AnzahlStellenLfdNr))

'MsgBox LaufendeNummerErmitteln

'Set fs = Nothing

Exit Function
Fehler:
    If Err.Number = 76 Then
        SavePathFehler = True
        MsgBox "Der in der Dateieigenschaft ""SavePath"" der Dokumentvorlage" & vbCrLf & vbCrLf _
            & ActiveDocument.AttachedTemplate.FullName & vbCrLf & vbCrLf _
            & "angegebene Speicherpfad" & vbCrLf & vbCrLf _
            & SavePath & vbCrLf & vbCrLf _
            & "existiert auf Ihrem System nicht!" & vbCrLf & vbCrLf _
            & "Bitte korrigieren Sie ggf. diese Dateieigenschaft oder legen Sie den Ordner an, in dem die Datei gespeichert werden soll!" _
            , vbCritical, Msg_title
        ChDir AktuellerOrdner
    ElseIf Err.Number = 5 Then
        Err.Clear
        Resume Next
    Else
        MsgBox Err.Number & vbCrLf & vbCrLf & Err.Description, vbCritical, Msg_title
    End If

End Function

Attribute VB_Name = "Lizenz"
Function Lizenzcode(Text As String)
Dim L|fffd|nge As Long
Dim TextFragment As String
Dim Programmnummer As Long
Dim LizenzcodePr|fffd|fziffer As Single
Dim Wert As String


Programmnummer = 1
Programmnummer = Programmnummer * 2

'MsgBox Asc(text)

'Nochmal:
'text = InputBox("Bitte Lizenznamen eingeben")
'
'If Len(text) < 4 Then
'    GoTo Nochmal
'End If


L|fffd|nge = Len(Text) \ 2 'Teilt die Anzahl der Buchstaben durch 2 (Ganzzahlig)
TextFragment = Text
LizenzcodePr|fffd|fziffer = 1
For I = 1 To L|fffd|nge

    LizenzcodePr|fffd|fziffer = LizenzcodePr|fffd|fziffer + Asc(TextFragment) _
     + Asc(Mid(TextFragment, 2)) / Programmnummer ' AsciCode aus ersten Buchstaben ermitteln

Next

LizenzcodePr|fffd|fziffer = LizenzcodePr|fffd|fziffer Mod 999

'Wert = InputBox("Code f|fffd|r: " & text, "Pr|fffd|fziffer", LizenzCodePr|fffd|fziffer)
Lizenzcode = LizenzcodePr|fffd|fziffer

'MsgBox Lizenzcode

End Function

Attribute VB_Name = "LizenzcodeEingabe"
Attribute VB_Base = "0{218C2B89-E971-11E7-AE36-0003FF31812D}{218C2B6E-E971-11E7-AE36-0003FF31812D}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Private Sub cmd_Cancel_Click()
    Unload LizenzcodeEingabe
End Sub

Private Sub cmd_OK_Click()
For Each aTemp In Templates
    I = I + 1
    'MsgBox I & " : " & aTemp.Name
    If aTemp.Name = "zvlg_koerner.dot" Then
'        MsgBox "Version: " & Templates(I).CustomDocumentProperties("Version") & " mit Index: " & I
        Exit For
    End If
Next aTemp

Templates(I).CustomDocumentProperties("Benutzer").Value = Trim(txt_Benutzer)
Templates(I).CustomDocumentProperties("Code").Value = Trim(txt_Code)

Templates(I).Save

Application.Run MacroName:="AutoExec"
'Application.Run MacroName:="G|fffd|lt"

If Version2 = False Then
    MsgBox "Der eingegebene Benutzername und / oder Lizenzcode war(en) nicht koorekt!", vbInformation, "Version: " & Version1 & " - " & Msg_title
    
    Else
    If FirmenName_Lizenz = "" Then
        MsgBox "Diese Version des Vorlagensystems ist lizenziert und funktioniert uneingeschr|fffd|nkt!", vbInformation, "Version: " & Version1 & " - " & Msg_title
    Else
'        MsgBox "Diese Version des Vorlagensystems ist f|fffd|r """ & Anzahl_Lizenz & """ Clients/Rechner der Firma """ & FirmenName_Lizenz & """ lizenziert und darf uneingeschr|fffd|nkt nur im Rahmen der Lizenzbedingungen eingesetzt werden!", vbInformation, "Version: " & Version1 & " - " & Msg_title
        MsgBox "Diese Version des Vorlagensystems ist lizenziert f|fffd|r" & _
        vbCrLf & vbCrLf & FirmenName_Lizenz _
        & vbCrLf & vbCrLf & "und darf uneingeschr|fffd|nkt nur im Rahmen der Lizenzbedingungen eingesetzt werden!", vbInformation, "Version: " & Version1 & " - " & Msg_title
    
        Unload LizenzcodeEingabe

    End If
End If

End Sub



Private Sub UserForm_Initialize()
    lbl_Werbung.Caption = Msg_title

End Sub
Attribute VB_Name = "Quickinfo"
Sub Quickinfo_Neu_Erstellen()
'Quickinfo in Symbolleisten Setzen

Dim SymbolIndex As Byte '|fffd|bergibt Indes des Symbols an Fehlerroutine
    SymbolIndex = 1

Call QuickinfoSetzen("Neues &leeres Dokument", _
    "Ein neues leeres Dokument erstellen", _
    "Vorlagen mit Outlookanbindung", _
    SymbolIndex)

Call QuickinfoSetzen("&Vorlagen", _
    "Vorlagen f|fffd|r ein neues Dokument ausw|fffd|hlen", _
    "Vorlagen mit Outlookanbindung", _
    SymbolIndex)
    
Call QuickinfoSetzen("Neuer Brief", _
    "Einen neuen Brief erstellen" & vbCrLf & "Dieser Brief basiert auf der Vorlage ""Brief_zvlg"" bzw. ""Brief_zvlg.dot""" & _
    vbCrLf & "aus Ihrem Vorlagenordner", _
    "Vorlagen mit Outlookanbindung", _
    SymbolIndex)

Call QuickinfoSetzen("Neues Fax", _
    "Ein neues Fax erstellen" & vbCrLf & "Dieses Fax basiert auf der Vorlage ""Fax_zvlg"" bzw. ""Fax_zvlg.dot""" & _
    vbCrLf & "aus Ihrem Vorlagenordner", _
    "Vorlagen mit Outlookanbindung", _
    SymbolIndex)

Call QuickinfoSetzen(" ??? suchen", _
    "Zu den n|fffd|chsten ??? im Dokument springen" & vbCrLf & _
        "??? sind Sprungmarken, die das Anspringen " & vbCrLf & _
        "bestimmter Textstellen in gro|fffd|en Dokumenten erleichtern.", _
    "Vorlagen mit Outlookanbindung", _
    SymbolIndex)


Call QuickinfoSetzen("&Drucken ???", _
    "Druckt Ihr Dokument auf Ihrem derzeit eingestellten Standardrucker aus." & vbCrLf & _
    "Sollten sich jedoch noch ""???"" in Ihrem Dokument befinden," & vbCrLf & _
    "haben Sie zuvor noch die M|fffd|glichkeit diese durch entsprechende Eingaben zu ersetzen.", _
    "Vorlagen mit Outlookanbindung", _
    SymbolIndex)

Call QuickinfoSetzen("Unterschrift einf|fffd|gen", _
    "F|fffd|gt Ihre eingescannte Unterschrift ein" & vbCrLf & _
    "Bitte nicht in Dokumenten benutzen, die Sie als Word-Dokumente weitergeben!!!" & vbCrLf & _
    "(z.B. Dokument direkt gefaxt oder als PDF in E-Mails --> ja / als *.doc in E-Mails --> NEIN)", _
    "Vorlagen mit Outlookanbindung", _
    SymbolIndex)

Call QuickinfoSetzen("Wiedervorlage mit MS &Outlook-Aufgabe definieren", _
    "Wiedervorlage des Dokumentes |fffd|ber eine MS Outlook-Aufgabe" & vbCrLf & _
    "Wenn Sie auf diese Schlatfl|fffd|che klicken, wird eine neue Outlook-Aufgabe erstellt," & vbCrLf & _
    "mit der Sie sich an diese Dokument erinnern lassen k|fffd|nnen." & vbCrLf & _
    "Das Dokument muss bereits gespeichert sein!", _
    "Vorlagen mit Outlookanbindung", _
    SymbolIndex)


Call QuickinfoSetzen("&vorlagenabh|fffd|ngige Hilfe", _
    "Vorlagenabh|fffd|ngige Hilfe" & vbCrLf & _
    "Sie erhalten eine Anleitung zu der Dokumentvorlage, die Sie gerade benutzen." & vbCrLf & _
    "Diese Hilfe muss Ihnen Ihr Administrator zur Verf|fffd|gung stellen!", _
    "Vorlagen mit Outlookanbindung", _
    SymbolIndex)

Call QuickinfoSetzen("&Hilfe", _
    "Hilfe Men|fffd|", _
    "Vorlagen mit Outlookanbindung", _
    SymbolIndex)

Call QuickinfoSetzen("Leerzeilen l|fffd|schen", _
    "Nur f|fffd|r Tabellen!" & vbCrLf & _
    "L|fffd|scht Leerzeilen aus einer Tabelle.", _
    "Vorlagen mit Outlookanbindung", _
    SymbolIndex)

'  Wiedervorlage mit MS &Outlook-Aufgabe definieren

'Z = InputBox("Name", "Schaltfl|fffd|che: " & SymbolIndex, CommandBars("Vorlagen mit Outlookanbindung").Controls(SymbolIndex).Caption)



End Sub
Attribute VB_Name = "SL"
Sub TextmarkenSymbolleistenEinUndAusblenden()
    On Error Resume Next
    
    If CommandBars("Textmarken").Visible Then
        'Symbolleisten zum Einf|fffd|gen der Textmarken ausblenden
    
        CommandBars("Textmarken").Visible = False
        CommandBars("Textmarken1").Visible = False
        CommandBars("Textmarken2").Visible = False
        
    Else
        CommandBars("Textmarken").Visible = True
        CommandBars("Textmarken1").Visible = True
        CommandBars("Textmarken2").Visible = True
    
    End If
End Sub

Sub FaxNummerInZwischenAblage()
    Call TextmarkenInhaltKopieren("Telefaxnummer")
End Sub

Sub BriefSchreiben()
' |fffd|ffnet Brief.dot aus Vorlagenordner (ist f|fffd|r Symbolleiste)

    Call Vorlage|fffd|ffnen("Brief_zvlg.dot", "Brief")

End Sub
Sub FaxSchreiben()

' |fffd|ffnet Fax.dot aus Vorlagenordner (ist f|fffd|r Symbolleiste)

    Call Vorlage|fffd|ffnen("Fax_zvlg.dot", "Fax")

End Sub

Sub Vorlage_wahlen()

SendKeys "%" & ZVL_VorlagenDarstellung
Dialogs(wdDialogFileNew).Show



End Sub

Sub Unterschrift()

' F|fffd|grt Unterschrift ein (Namenskonvention beachten!)

On Error GoTo ErrorHandler
        
'Globale Variablen initialissieren
If Rel = "" Then
    Application.Run MacroName:="AutoExec"
End If


'Hilfepfad testen --> Bei Fehler Sprung zu ErrorHandler

ChDir UnterschriftPfad
ChDir Curr_Folder

'Unterschrift einf|fffd|gen
Selection.InlineShapes.AddPicture FileName:=UnterschriftPfad & Application.PathSeparator & "unterschrift_" & Application.UserInitials & ".tif", LinkToFile:=False, SaveWithDocument:=True

Exit Sub

ErrorHandler:               ' Fehlerbehandlungsroutine.

Dim UntU1 As String, UntL1 As String

UntL1 = "L|fffd|sung:" & Chr(9) & Chr(9) & "Siehe Dokumentation oder bitten Sie Ihren Administrator" & vbCrLf & Chr(9) & Chr(9) & "entweder, den Pfad im Modul," & vbCrLf & Chr(9) & Chr(9) & "oder den Pfad zur Hilfe auf Ihrem System anzupassen." & vbCrLf

    Select Case Err.Number  ' Fehlernummer auswerten.
        Case 5
            Err.Clear
            Resume Next

        Case 75             ' Auf Laufwerk kann nicht zugegriffen werden
            UntAllg = "Unterschrift konnte nicht eingef|fffd|gt werden! " _
                & "(" & Err.Number & ")" & vbCrLf _
                & "Der im Modul eingestellte Pfad zur " _
                & "unterschrift_" & Application.UserInitials _
                & ".tif existiert nicht oder es besteht keine Netzwerkverbindung zu diesem Laufwerk!"

                
            MsgBox UntAllg & vbCrLf & Trenn _
                & "Ihre im Modul eingestellter Pfad zur Unterschrift lautet:" _
                & vbCrLf & Chr(9) _
                & UnterschriftPfad & Application.PathSeparator _
                & vbCrLf & vbCrLf & _
                "L|fffd|sung:" & Chr(9) & Chr(9) _
                & "Korrigieren Sie die Ordner zu Ihrer eingescannten Unterschrift (" _
                & "unterschrift_" & Application.UserInitials _
                & ".tif) in: " & vbCrLf & Chr(9) _
                & UnterschriftPfad, 16, Msg_title
        
         Case 76             ' Auf Laufwerk kann nicht zugegriffen werden
            UntAllg = "Unterschrift konnte nicht eingef|fffd|gt werden! " _
                & "(" & Err.Number & ")" & vbCrLf _
                & "Der im Modul eingestellte Pfad zur " _
                & "unterschrift_" & Application.UserInitials _
                & ".tif existiert nicht oder es besteht keine Netzwerkverbindung zu diesem Laufwerk!"

                
            MsgBox UntAllg & vbCrLf & Trenn _
                & "Ihre im Modul eingestellter Pfad zur Unterschrift lautet:" _
                & vbCrLf & Chr(9) _
                & UnterschriftPfad & Application.PathSeparator _
                & vbCrLf & vbCrLf & _
                "L|fffd|sung1:" & Chr(9) _
                & "Korrigieren Sie die Ordner zu Ihrer eingescannten Unterschrift" _
                & vbCrLf & Chr(9) & "(" & "unterschrift_" & Application.UserInitials _
                & ".tif) auf Ihrer Festplatte in: " & vbCrLf & Chr(9) _
                & UnterschriftPfad & vbCrLf & vbCrLf & _
                "L|fffd|sung2:" & Chr(9) _
                & "Korrigieren Sie den Unterschriftspfad im Modul zum tats|fffd|chlichen Ort" _
                & vbCrLf & Chr(9) _
                & "Ihrer eigescannten Unterschrift (" & "unterschrift_" & Application.UserInitials _
                & ".tif)! " & vbCrLf & Chr(9) _
                & "Lesen Sie dazu aber zun|fffd|chst die Dokumentation und/oder" _
                & vbCrLf & Chr(9) & "fragen Sie Ihren Administartor!!!", 16, Msg_title
        
        Case 5152               ' Pfadname syntaktisch falsch
            UntAllg = "Unterschrift konnte nicht eingef|fffd|gt werden! " _
                & "(" & Err.Number & ")" & vbCrLf & _
                "Bitte |fffd|berpr|fffd|fen Sie Benutzerinitialien und Dateiname Ihrer eingescannten Unterschrift (auch auf syntaktische Richtigkeit)!"
                
            MsgBox UntAllg & vbCrLf & Trenn & _
              "Ihre derzeitigen Einstellungen:" & vbCrLf & _
              " Extras --> Optionen --> Benutzerinformationen --> Benutzerinitialien: " _
              & Application.UserInitials & vbCrLf & vbCrLf & _
              "Ihre im Modul eingestellter Pfad zur Unterschrift" & vbCrLf & _
              "(Dabei geben Sie den letzten - " & Application.PathSeparator & _
              " - am Ende des Pfades nicht ein!):" & vbCrLf & vbCrLf & _
              Chr(9) & "   " & _
              UnterschriftPfad & Application.PathSeparator & vbCrLf & vbCrLf & _
              vbCrLf & Ind5, 16, Msg_title

        Case Else               ' Andere F|fffd|lle hier bearbeiten..."
            MsgBox "Fehler konnte nicht ermittelt werden. Bitte schicken Sie ggf. eine Mail an feedback.zvlg@dotoffice.de" _
             & vbCrLf & vbCrLf & _
             " Bitte erkl|fffd|ren Sie dabei Ihre Einstellungen (Tastenkombination Alt+E), bei welcher Aktion der Fehler auftritt und geben Sie bitte die folgende Fehlernummer an!" _
             & vbCrLf & "Fehlernummer: " & Err.Number _
             , 16, Msg_title
    End Select
    
Err.Clear                       ' Felder des Err-Objekts
            
End Sub



Sub Dokumentation()
'**************************************************************************
'Erstellt von:  Markus K|fffd|rner
'Fax:           01212 / 524326521
'E Mail:        feedback.zvlg@dotoffice.de
' Ruft die normal.htm auf (Dokumentation)
'**************************************************************************

On Error GoTo ErrorHandler:
'Hilfepfad testen --> Bei Fehler Sprung zu ErrorHandler
ChDir HilfePfad
ChDir Curr_Folder

' MsgBox HilfePfad & Application.PathSeparator & "normal.htm"

ActiveDocument.FollowHyperlink _
    Address:=HilfePfad & Application.PathSeparator & "normal.htm", _
    NewWindow:=True, AddHistory:=False
    


ErrorHandler:                   ' Fehlerbehandlungsroutine.
    Select Case Err.Number      ' Fehlernummer auswerten.
        Case 75            ' 75 Auf Laufwerk kann nicht zugegriffen werden
            MsgBox "Die Dokumentation konnte nicht aufgerufen werden!" _
            & "(" & Err.Number & ")" & vbCrLf & _
                "Auf das u.g. Laufwerk konnte nicht zugegriffen werden!" _
            & vbCrLf & Trenn & _
              HilfePfad & Application.PathSeparator _
              & vbCrLf & vbCrLf & vbCrLf & _
                "Bitte pr|fffd|fen Sie auch, ob die Netzwerkverbindung besteht!" _
              , 16, Msg_title
        
        Case 76                  ' 76 Pfadname syntaktisch falsch
            MsgBox "Bitte |fffd|berpr|fffd|fen Sie ob die Hilfe installiert wurde, ob ggf. keine Netzwerkverbindung besteht oder" & vbCrLf & _
            "ob der Pfad zur Hilfe korrekt eingegeben wurde (auch auf syntaktische Richtigkeit)! " _
             & "(" & Err.Number & ")" & vbCrLf & Trenn & vbCrLf _
             & "Im Modul sind folgende Einstellungen zum Aufruf der Dokumentation aktiv:" & vbCrLf _
             & vbCrLf & HilfePfad & Application.PathSeparator _
             & "normal.htm" _
             , 16, Msg_title
        
        Case 432
            HilfeAllg = "Sie k|fffd|nnen die Dokumentation (Hilfe) nicht benutzen! (" _
                    & Err.Number & ")" & vbCrLf
            HilfU1 = "Ursache:" & Chr(9) & "Im Hilfe-Ordner " & HilfePfad _
                    & vbCrLf & Chr(9) _
                    & "gibt es keine Datei mit dem Namen " _
                    & vbCrLf & Chr(9) _
                    & "Normal.html oder Normal.htm" _
                    & vbCrLf & vbCrLf
            HilfL1 = "L|fffd|sung:" & Chr(9) _
                    & "Bitten Sie Ihren Administrator die Hilfe im o.g. Ordner zu installieren." _
                    & vbCrLf & Chr(9) & "Die aktuelle Hilfe kann unter ""http://www.dotoffice.de"" heruntergeladen werden."
            
            MsgBox HilfeAllg & Trenn & HilfU1 & HilfL1, 16, Msg_title
        
        Case 4198
            HilfeAllg = "Sie k|fffd|nnen die Dokumentation (Hilfe) nicht benutzen! (" _
                    & Err.Number & ")" & vbCrLf
            HilfU1 = "Ursache:" & Chr(9) & "Im Hilfe-Ordner " & HilfePfad _
                    & vbCrLf & Chr(9) _
                    & "gibt es keine Datei mit dem Namen " _
                    & vbCrLf & Chr(9) _
                    & "Normal.html oder Normal.htm" _
                    & vbCrLf & vbCrLf
            HilfL1 = "L|fffd|sung:" & Chr(9) _
                    & "Bitten Sie Ihren Administrator die Hilfe im o.g. Ordner zu installieren." _
                    & vbCrLf & Chr(9) & "Die aktuelle Hilfe kann unter ""http://www.dotoffice.de"" heruntergeladen werden."
            
            MsgBox HilfeAllg & Trenn & HilfU1 & HilfL1, 16, Msg_title

        
        Case 0
             Exit Sub


        Case Else               ' Andere F|fffd|lle hier bearbeiten..."
            MsgBox "Fehler konnte nicht ermittelt werden. Bitte schicken Sie ggf. eine Mail an feedback.zvlg@dotoffice.de" _
             & vbCrLf & vbCrLf & _
             " Bitte erkl|fffd|ren Sie dabei Ihre Einstellungen (Tastenkombination Alt+E), bei welcher Aktion der Fehler auftritt und geben Sie bitte die folgende Fehlernummer an!" _
             & vbCrLf & "Fehlernummer: " & Err.Number _
             , 16, Msg_title
    End Select
    
Err.Clear                       ' Felder des Err-Objekts


End Sub


Sub vorlagenabh|fffd|ngige_Hilfe()
' Ruft Hilfe zur Vorlage auf (Namenskonvention beachten!)

On Error GoTo ErrorHandler:                    ' Fehlerbehandlung einschalten

'Globale Variablen initialissieren
If Rel = "" Then
    Application.Run MacroName:="AutoExec"
End If

'Hilfepfad testen --> Bei Fehler Sprung zu ErrorHandler
ChDir "C:" & Application.PathSeparator & "Temp"  ' HilfePfad '
ChDir Curr_Folder

Set myTemplate = ActiveDocument.AttachedTemplate
Set fs = Application.Filesearch

'MsgBox myTemplate.Path & Application.PathSeparator & myTemplate.Name

Vorlage = LCase(Mid(myTemplate.Name, 1, InStr(1, LCase(myTemplate.Name), ".dot") - 1))
 'MsgBox Vorlage

HilfeAllg = "Sie k|fffd|nnen die Hilfe zu dieser Vorlage nicht benutzen! (" _
        & Err.Number & ")" & vbCrLf
HilfU1 = "Ursache:" & Chr(9) & "Im Hilfe-Ordner " & HilfePfad _
        & vbCrLf & Chr(9) _
        & "gibt es keine Datei mit dem Namen " _
        & vbCrLf & Chr(9) _
        & Vorlage & ".html oder " & Vorlage & ".htm" _
        & vbCrLf & vbCrLf
HilfL1 = "L|fffd|sung:" & Chr(9) _
        & "Siehe Dokumentation oder bitten Sie Ihren Administrator" _
        & vbCrLf & Chr(9) & "diese Datei anzulegen." _
        & vbCrLf & vbCrLf & vbCrLf

'MsgBox HilfePfad & Application.PathSeparator & Vorlage & ".html"

On Error Resume Next

ActiveDocument.FollowHyperlink _
         Address:=HilfePfad & Application.PathSeparator & Vorlage & ".html", _
         NewWindow:=True, AddHistory:=False

If Err.Number <> 0 Then
    'MsgBox Err.Description, , Err.Number
    Err.Clear
    On Error GoTo ErrorHandler:
    ActiveDocument.FollowHyperlink _
        Address:=HilfePfad & Application.PathSeparator & Vorlage & ".htm", _
        NewWindow:=True, AddHistory:=False
End If



Exit Sub


ErrorHandler:                   ' Fehlerbehandlungsroutine.
    Select Case Err.Number      ' Fehlernummer auswerten.
        Case 5
            Err.Clear
            Resume Next

        Case 75            ' 75 Auf Laufwerk kann nicht zugegriffen werden
            MsgBox "Unterschrift konnte nicht eingef|fffd|gt werden!" _
            & "(" & Err.Number & ")" & vbCrLf & Trenn & vbCrLf & _
                "Auf das u.g. Laufwerk konnte nicht zugegriffen werden!" _
            & vbCrLf & Trenn & _
              HilfePfad & Application.PathSeparator _
              & vbCrLf & vbCrLf & vbCrLf & _
                "Bitte pr|fffd|fen Sie auch, ob die Netzwerkverbindung besteht!" _
              , 16, Msg_title
        
        Case 76                   ' 76 Pfadname syntaktisch falsch
            MsgBox "Bitte |fffd|berpr|fffd|fen Sie ggf. die Netzwerkverbindung oder" & vbCrLf & _
            "ob der Pfad zur Hilfe korrekt eingegeben wurde" _
             & vbCrLf & "(auch auf syntaktische Richtigkeit)! " _
             & "(" & Err.Number & ")" & vbCrLf & Trenn & vbCrLf & "Im Modul sind folgende Einstellungen aktiv:" & vbCrLf _
             & vbCrLf & HilfePfad & Application.PathSeparator _
             & vbCrLf & vbCrLf & _
             "Dabei geben Sie den letzten - " & Application.PathSeparator & _
             " - am Ende des Pfades nicht ein!" & _
             vbCrLf & "Dies erledigt das Modul selbst." _
             , 16, Msg_title
             
        Case 4198                  ' HilfeDatei nicht gefunden
            MsgBox "Bitte |fffd|berpr|fffd|fen Sie ggf. die Netzwerkverbindung, den Pfad zur Hilfe und die Exitenz der Hilfe-Datei """ & Vorlage & """.thm(l)" _
            & vbCrLf & vbCrLf & "Im Modul ist folgender Pfad zur Hilfe eingestellt:" & vbCrLf _
             & vbCrLf & vbTab & HilfePfad & Application.PathSeparator & vbTab & _
             "(Eingabe im Modul ohne "" " & Application.PathSeparator & " "" am Ende)" & _
             vbCrLf & vbCrLf & "Folgende Hilfe-Datei befindet sich nicht in diesem Ordner:" & vbCrLf _
             & vbTab & Vorlage & ".html bzw. " & Vorlage & ".htm" _
             , 16, Msg_title


        Case Else               ' Andere F|fffd|lle hier bearbeiten..."
            MsgBox "Fehler konnte nicht ermittelt werden. Bitte schicken Sie ggf. eine Mail an feedback.zvlg@dotoffice.de" _
             & vbCrLf & vbCrLf & _
             " Bitte erkl|fffd|ren Sie dabei Ihre Einstellungen (Tastenkombination Alt+E), bei welcher Aktion der Fehler auftritt und geben Sie bitte die folgende Fehlernummer an!" _
             & vbCrLf & "Fehlernummer: " & Err.Number _
             , 16, Msg_title
    End Select
    
Err.Clear                       ' Felder des Err-Objekts
                
End Sub

Sub LizenzcodeFormular|fffd|ffnen()
    Load LizenzcodeEingabe
    LizenzcodeEingabe.Show
End Sub

Sub G|fffd|lt()

' Messagebox mit G|fffd|ltigkeit --> Formularaufruf Bestellung (Alt + G)

    Dim Antwort As Integer

'Globale Variablen initialissieren
If Rel = "" Then
    Application.Run MacroName:="AutoExec"
End If
    
If Version2 = False Then
    Antwort = MsgBox("Diese Testversion funktioniert bis zum " & Format(CD, "ddddd") & "   " & vbCrLf & vbCrLf & "M|fffd|chten Sie dieses Vorlagensystem uneingeschr|fffd|nkt nutzen?", 68, "Version: " & Version1 & " - " & Msg_title)
    
    If Antwort = 6 Then
            Load Bestellung
            Bestellung.Show
    End If
    Else
    If FirmenName_Lizenz = "" Then
        MsgBox "Diese Version des Vorlagensystems ist lizenziert und funktioniert uneingeschr|fffd|nkt!", vbInformation, "Version: " & Version1 & " - " & Msg_title
    Else
'        MsgBox "Diese Version des Vorlagensystems ist f|fffd|r """ & Anzahl_Lizenz & """ Clients/Rechner der Firma """ & FirmenName_Lizenz & """ lizenziert und darf uneingeschr|fffd|nkt nur im Rahmen der Lizenzbedingungen eingesetzt werden!", vbInformation, "Version: " & Version1 & " - " & Msg_title
        MsgBox "Diese Version des Vorlagensystems ist lizenziert f|fffd|r" & _
        vbCrLf & vbCrLf & FirmenName_Lizenz _
        & vbCrLf & vbCrLf & "und darf uneingeschr|fffd|nkt nur im Rahmen der Lizenzbedingungen eingesetzt werden!", vbInformation, "Version: " & Version1 & " - " & Msg_title
    End If
End If
End Sub


Sub Einstellungen()
' Zeigt die aktuellen Benutzereinstellungen an (Alt + E)

'Globale Variablen initialissieren
If Rel = "" Then
    Application.Run MacroName:="AutoExec"
End If

    MsgBox Allg & Vorlage1 & Vorlage2 & Vorlage3 & Vorlage4 & Vorlage5 & Individ & Ind1 & Ind11 & Ind2 & Ind3 & Ind4, 64, "Version: " & Version1 & " - " & Msg_title
End Sub

Sub Fragezeichen_weiter_suchen()
' sucht die n|fffd|chsten ??? im Dokument

On Error Resume Next

' ??? finden
    With ActiveDocument.Application.Selection.Find
        .ClearFormatting
        .Text = "???"
        .Replacement.Text = ""
        .Forward = True
        .Wrap = wdFindAsk
        .Format = False
        .MatchCase = False
        .MatchWholeWord = False
        .MatchWildcards = False
        .MatchSoundsLike = False
        .MatchAllWordForms = False
    End With
Selection.Find.Execute
'MsgBox "Fehlernummer1: " & Err.Number
End Sub

Sub TM_Liste()

' Listet in Msgbox die im Dokument enthaltenen Textmarken auf!

    Call TextmarkenAuflisten
End Sub





Attribute VB_Name = "Sonstige"
Sub UnterschriftEinfg()

On Error GoTo ErrorHandler

If Rel = "" Then
    Application.Run MacroName:="AutoExec"
End If


'Hilfepfad testen --> Bei Fehler Sprung zu ErrorHandler
ChDir UnterschriftPfad
ChDir Curr_Folder

'Unterschrift einf|fffd|gen
If ActiveDocument.Bookmarks.Exists("Unterschrift") = True Then
    Selection.GoTo What:=wdGoToBookmark, Name:="Unterschrift": Selection.InlineShapes.AddPicture FileName:=UnterschriftPfad & Application.PathSeparator & "unterschrift_" & Application.UserInitials & ".tif", LinkToFile:=False, SaveWithDocument:=True
End If

Call DreiFragezeichen

Exit Sub

ErrorHandler:               ' Fehlerbehandlungsroutine.

Dim UntU1 As String, UntL1 As String

UntL1 = "L|fffd|sung:" & Chr(9) & Chr(9) & "Siehe Dokumentation oder bitten Sie Ihren Administrator" & vbCrLf & Chr(9) & Chr(9) & "entweder, den Pfad im Modul," & vbCrLf & Chr(9) & Chr(9) & "oder den Pfad zur Hilfe auf Ihrem System anzupassen." & vbCrLf

    Select Case Err.Number  ' Fehlernummer auswerten.
        Case 5
            Err.Clear
            Resume Next
        Case 75             ' Auf Laufwerk kann nicht zugegriffen werden
            UntAllg = "Unterschrift konnte nicht eingef|fffd|gt werden! " _
                & "(" & Err.Number & ")" & vbCrLf _
                & "Der im Modul eingestellte Pfad zur " _
                & "unterschrift_" & Application.UserInitials _
                & ".tif existiert nicht oder es besteht keine Netzwerkverbindung zu diesem Laufwerk!"

                
            MsgBox UntAllg & vbCrLf & Trenn _
                & "Ihre im Modul eingestellter Pfad zur Unterschrift lautet:" _
                & vbCrLf & Chr(9) _
                & UnterschriftPfad & Application.PathSeparator _
                & vbCrLf & vbCrLf & _
                "L|fffd|sung:" & Chr(9) & Chr(9) _
                & "Korrigieren Sie die Ordner zu Ihrer eingescannten Unterschrift (" _
                & "unterschrift_" & Application.UserInitials _
                & ".tif) in: " & vbCrLf & Chr(9) _
                & UnterschriftPfad, 16, Msg_title
        
         Case 76             ' Auf Laufwerk kann nicht zugegriffen werden
            UntAllg = "Unterschrift konnte nicht eingef|fffd|gt werden! " _
                & "(" & Err.Number & ")" & vbCrLf _
                & "Der im Modul eingestellte Pfad zur " _
                & "unterschrift_" & Application.UserInitials _
                & ".tif existiert nicht oder es besteht keine Netzwerkverbindung zu diesem Laufwerk!"

                
            MsgBox UntAllg & vbCrLf & Trenn _
                & "Ihre im Modul eingestellter Pfad zur Unterschrift lautet:" _
                & vbCrLf & Chr(9) _
                & UnterschriftPfad & Application.PathSeparator _
                & vbCrLf & vbCrLf & _
                "L|fffd|sung1:" & Chr(9) _
                & "Korrigieren Sie die Ordner zu Ihrer eingescannten Unterschrift" _
                & vbCrLf & Chr(9) & "(" & "unterschrift_" & Application.UserInitials _
                & ".tif) auf Ihrer Festplatte in: " & vbCrLf & Chr(9) _
                & UnterschriftPfad & vbCrLf & vbCrLf & _
                "L|fffd|sung2:" & Chr(9) _
                & "Korrigieren Sie den Unterschriftspfad im Modul zum tats|fffd|chlichen Ort" _
                & vbCrLf & Chr(9) _
                & "Ihrer eigescannten Unterschrift (" & "unterschrift_" & Application.UserInitials _
                & ".tif)! " & vbCrLf & Chr(9) _
                & "Lesen Sie dazu aber zun|fffd|chst die Dokumentation und/oder" _
                & vbCrLf & Chr(9) & "fragen Sie Ihren Administartor!!!", 16, Msg_title
        
        Case 5152               ' Pfadname syntaktisch falsch
            UntAllg = "Unterschrift konnte nicht eingef|fffd|gt werden! " _
                & "(" & Err.Number & ")" & vbCrLf & _
                "Bitte |fffd|berpr|fffd|fen Sie Benutzerinitialien und Dateiname Ihrer eingescannten Unterschrift (auch auf syntaktische Richtigkeit)!"
                
            MsgBox UntAllg & vbCrLf & Trenn & _
              "Ihre derzeitigen Einstellungen:" & vbCrLf & _
              " Extras --> Optionen --> Benutzerinformationen --> Benutzerinitialien: " _
              & Application.UserInitials & vbCrLf & vbCrLf & _
              "Ihre im Modul eingestellter Pfad zur Unterschrift" & vbCrLf & _
              "(Dabei geben Sie den letzten - " & Application.PathSeparator & _
              " - am Ende des Pfades nicht ein!):" & vbCrLf & vbCrLf & _
              Chr(9) & "   " & _
              UnterschriftPfad & Application.PathSeparator & vbCrLf & vbCrLf & _
              vbCrLf & Ind5, 16, Msg_title

        Case Else               ' Andere F|fffd|lle hier bearbeiten..."
            MsgBox "Fehler konnte nicht ermittelt werden. Bitte schicken Sie ggf. eine Mail an feedback.zvlg@dotoffice.de" _
             & vbCrLf & vbCrLf & _
             " Bitte erkl|fffd|ren Sie dabei Ihre Einstellungen (Tastenkombination Alt+E), bei welcher Aktion der Fehler auftritt und geben Sie bitte die folgende Fehlernummer an!" _
             & vbCrLf & "Fehlernummer: " & Err.Number _
             , 16, Msg_title
    End Select
    
Err.Clear                       ' Felder des Err-Objekts
            

End Sub






Attribute VB_Name = "Speichername"
Function SpeichernameErmitteln(Speichername As String, _
                                Firma As String, _
                                Ansprechpartner As String, _
                                Betreff As String, _
                                Datum As String, _
                                Kundennummer As String, _
                                Pr|fffd|fix As String, _
                                FormatSpeicherDatum As String, _
                                LaufendeNummer As String, _
                                Stichworte As String, _
                                IhrZeichenSP As String) As String

On Error Resume Next

'MsgBox Speichername
' Dabei steht
' F f|fffd|r Firma
' N f|fffd|r Name
' B f|fffd|r Betreff
' D f|fffd|r Datum
' U f|fffd|r User
' I f|fffd|r Userinitialien
' K f|fffd|r KDNR
' P f|fffd|r Prefix
' # laufende Nummer
' S Stichworte
' Z Ihr Zeichen

Dim Ende As Byte
Ende = Len(Speichername)

If FormatSpeicherDatum = "" Then FormatSpeicherDatum = FormatSaveDate   'Falls kein Format f|fffd|r Speicherdatum in Datei vorgegeben


If Ende >= 1 Then
    Select Case Left(Speichername, 1)
        Case Is = "F"
            Dateiname = Firma
        Case Is = "N"
            Dateiname = Ansprechpartner
        Case Is = "B"
            Dateiname = Betreff
        Case Is = "D"
            Dateiname = Format(DateValue(Datum), FormatSpeicherDatum)
        Case Is = "U"
            Dateiname = Application.UserName
        Case Is = "I"
            Dateiname = Application.UserInitials
        Case Is = "K"
            If Trim(Kundennummer) <> "" Then
                Dateiname = Trim(Kundennummer)
            Else
                Dateiname = "Ohne KDNR"
            End If
        Case Is = "P"
            If Trim(Pr|fffd|fix) <> "" Then
                Dateiname = Trim(Pr|fffd|fix)
            Else
                Dateiname = "kein Pr|fffd|fix"
            End If
        Case Is = "#"
            If LaufendeNummer <> "" Then
                Dateiname = LaufendeNummer
            Else
                Dateiname = "keine Nr"
            End If
        Case Is = "S"
            If Stichworte <> "" Then
                Dateiname = Stichworte
            Else
                Dateiname = "keine Stichworte"
            End If
        Case Is = "Z"
            If IhrZeichenSP <> "" Then
                Dateiname = Trim(IhrZeichenSP)
            Else
                Dateiname = "kein Zeichen"
            End If
      End Select
End If

If Ende >= 2 Then
  For I = 2 To Ende
    Select Case Right(Left(Speichername, I), 1)
        Case Is = "F"
            Dateiname = Dateiname & SP_Trennzeichen & Firma
        Case Is = "N"
            Dateiname = Dateiname & SP_Trennzeichen & Ansprechpartner
        Case Is = "B"
            Dateiname = Dateiname & SP_Trennzeichen & Betreff
        Case Is = "D"
            Dateiname = Dateiname & SP_Trennzeichen & Format(DateValue(Datum), FormatSpeicherDatum)
        Case Is = "U"
            Dateiname = Dateiname & SP_Trennzeichen & Application.UserName
        Case Is = "I"
            Dateiname = Dateiname & SP_Trennzeichen & Application.UserInitials
        Case Is = "K"
            If Trim(Kundennummer) <> "" Then
                Dateiname = Dateiname & SP_Trennzeichen & Trim(Kundennummer)
            Else
                Dateiname = Dateiname & SP_Trennzeichen & "Ohne KDNR"
            End If
        Case Is = "P"
            If Trim(Pr|fffd|fix) <> "" Then
                Dateiname = Dateiname & SP_Trennzeichen & Trim(Pr|fffd|fix)
            Else
                Dateiname = Dateiname & SP_Trennzeichen & "kein Pr|fffd|fix"
            End If
        Case Is = "#"
            If LaufendeNummer <> "" Then
                Dateiname = Dateiname & SP_Trennzeichen & LaufendeNummer
            Else
                Dateiname = Dateiname
            End If
        Case Is = "S"
            If Stichworte <> "" Then
                Dateiname = Dateiname & SP_Trennzeichen & Stichworte
            Else
                Dateiname = Dateiname & SP_Trennzeichen & "keine Stichworte"
            End If
        Case Is = "Z"
            If IhrZeichenSP <> "" Then
                Dateiname = Dateiname & SP_Trennzeichen & Trim(IhrZeichenSP)
            Else
                Dateiname = Dateiname & SP_Trennzeichen & "kein Zeichen"
            End If

    End Select
    
    'MsgBox "i: " & i & vbCrLf & Right(Left(Speichername, i), 1) & vbCrLf & Dateiname

  Next I
End If


If Err.Number <> 0 Then
If Ende >= 1 Then
    Select Case Left(Speichername, 1)
        Case Is = "F"
            Dateiname = Firma
        Case Is = "N"
            Dateiname = Ansprechpartner
        Case Is = "B"
            Dateiname = Betreff
        Case Is = "D"
            Dateiname = Format(DateValue(Datum), FormatSpeicherDatum)
        Case Is = "U"
            Dateiname = Application.UserName
        Case Is = "I"
            Dateiname = Application.UserInitials
        Case Is = "K"
            If Trim(Kundennummer) <> "" Then
                Dateiname = Trim(Kundennummer)
            Else
                Dateiname = "Ohne KDNR"
            End If
        Case Is = "P"
            If Trim(Pr|fffd|fix) <> "" Then
                Dateiname = Trim(Pr|fffd|fix)
            Else
                Dateiname = "kein Pr|fffd|fix"
            End If
        Case Is = "#"
            If LaufendeNummer <> "" Then
                Dateiname = LaufendeNummer
            Else
                Dateiname = "keine Nr"
            End If
        Case Is = "S"
            If Stichworte <> "" Then
                Dateiname = Stichworte
            Else
                Dateiname = "keine Stichworte"
            End If
        Case Is = "Z"
            If IhrZeichenSP <> "" Then
                Dateiname = Trim(IhrZeichenSP)
            Else
                Dateiname = "kein Zeichen"
            End If


End Select
End If

If Ende >= 2 Then
  For I = 2 To Ende
    Select Case Right(Left(Speichername, I), 1)
        Case Is = "F"
            Dateiname = Dateiname & SP_Trennzeichen & Firma
        Case Is = "N"
            Dateiname = Dateiname & SP_Trennzeichen & Ansprechpartner
        Case Is = "B"
            Dateiname = Dateiname & SP_Trennzeichen & Betreff
        Case Is = "D"
            Dateiname = Dateiname & SP_Trennzeichen & Format(Date, FormatSpeicherDatum) 'Statt Datum der Dialogbox, wird nun aktuelles Datum genutzt, da Datum von KW m|fffd|glicherweise nicht auswertbar
        Case Is = "U"
            Dateiname = Dateiname & SP_Trennzeichen & Application.UserName
        Case Is = "I"
            Dateiname = Dateiname & SP_Trennzeichen & Application.UserInitials
        Case Is = "K"
            If Trim(Kundennummer) <> "" Then
                Dateiname = Dateiname & SP_Trennzeichen & Trim(Kundennummer)
            Else
                Dateiname = Dateiname & SP_Trennzeichen & "Ohne KDNR"
            End If
        Case Is = "P"
            If Trim(Pr|fffd|fix) <> "" Then
                Dateiname = Dateiname & SP_Trennzeichen & Trim(Pr|fffd|fix)
            Else
                Dateiname = Dateiname & SP_Trennzeichen & "kein Pr|fffd|fix"
            End If
        Case Is = "#"
            If LaufendeNummer <> "" Then
                Dateiname = Dateiname & SP_Trennzeichen & LaufendeNummer
            Else
                Dateiname = Dateiname
            End If
        Case Is = "S"
            If Stichworte <> "" Then
                Dateiname = Dateiname & SP_Trennzeichen & Stichworte
            Else
                Dateiname = Dateiname & SP_Trennzeichen & "keine Stichworte"
            End If
        Case Is = "Z"
            If IhrZeichenSP <> "" Then
                Dateiname = Dateiname & SP_Trennzeichen & Trim(IhrZeichenSP)
            Else
                Dateiname = Dateiname & SP_Trennzeichen & "kein Zeichen"
            End If
    End Select
    'MsgBox "i: " & i & vbCrLf & Right(Left(Speichername, i), 1) & vbCrLf & TempDateiname

  Next I
    Err.Clear
End If
End If




' R|fffd|ckgabe
SpeichernameErmitteln = Dateiname
End Function

Attribute VB_Name = "StandardBefehl_ersatz"
Sub FilePrint()
    On Error Resume Next
    If StandardBefehle = True Then 'Pr|fffd|fen, ob User Standardbefehle m|fffd|chte
        Dialogs(wdDialogFilePrint).Show    ' Original (Default)Datei Drucken -Befehl
    Else                                 ' User m|fffd|chte ??? Pr|fffd|fung

        Call DreiFragezeichen_Abfragen
        If AntwortFragezeichen = 6 Then
             Call DreiFragezeichen
             AntwortFragezeichen = 10
        Else
            Dialogs(wdDialogFilePrint).Show
        End If
    End If
End Sub

Sub FileSave()
    On Error Resume Next
    If StandardBefehle = True Then 'Pr|fffd|fen, ob User Standardbefehle m|fffd|chte
            ActiveDocument.Save     ' Standardspeicherbefehl
    Else                            ' User m|fffd|chte ??? Pr|fffd|fung
        If ActiveDocument.Name = "" Then
            Application.Run MacroName:="FileSaveAs"
        Else
            Call DreiFragezeichen_Abfragen
            If AntwortFragezeichen = 6 Then
                 Call DreiFragezeichen
                 AntwortFragezeichen = 10
            Else
                ActiveDocument.Save
            End If
        End If
    End If
End Sub

Sub FileSaveAs()
    On Error Resume Next
    If StandardBefehle = True Then 'Pr|fffd|fen, ob User Standardbefehle m|fffd|chte
        Dialogs(wdDialogFileSaveAs).Show      ' Standardspeicherbefehl
    Else                            ' User m|fffd|chte ??? Pr|fffd|fung

        Call DreiFragezeichen_Abfragen
        If AntwortFragezeichen = 6 Then
             Call DreiFragezeichen
             AntwortFragezeichen = 10
        Else
            Dialogs(wdDialogFileSaveAs).Show
        End If
    End If
End Sub


Sub PrintToolbar()
    On Error Resume Next
    Call DreiFragezeichen_Abfragen
    If AntwortFragezeichen = 6 Then
        Call DreiFragezeichen
    Else
       ActiveDocument.PrintOut
    End If
End Sub



Attribute VB_Name = "TM"
Sub TextmarkenSymbolleistenAusblenden()

On Error Resume Next
'Symbolleisten zum Einf|fffd|gen der Textmarken ausblenden
    CommandBars("Textmarken").Visible = False
    CommandBars("Textmarken1").Visible = False
    CommandBars("Textmarken2").Visible = False
    
End Sub



Sub Adresse()
Attribute Adresse.VB_Description = "Makro aufgezeichnet am 14.04.2002 von Markus K|fffd|rner"
Attribute Adresse.VB_ProcData.VB_Invoke_Func = "Normal.NewMacros.Betreff"
    Call TextmarkeSetzen("Adresse")
End Sub
Sub Adresse1()
    Call TextmarkeSetzen("Adresse1")
End Sub
Sub Adresse2()
    Call TextmarkeSetzen("Adresse2")
End Sub
Sub Firmenadresse()
Attribute Firmenadresse.VB_Description = "Makro aufgezeichnet am 14.04.2002 von Markus K|fffd|rner"
Attribute Firmenadresse.VB_ProcData.VB_Invoke_Func = "Normal.NewMacros.IhrZeichen"
    Call TextmarkeSetzen("Firmenadresse")
End Sub
Sub Firmenadresse1()
    Call TextmarkeSetzen("Firmenadresse1")
End Sub
Sub Firmenadresse2()
    Call TextmarkeSetzen("Firmenadresse2")
End Sub
Sub Abteilung()
    Call TextmarkeSetzen("Abteilung")
End Sub
Sub Abteilung1()
    Call TextmarkeSetzen("Abteilung1")
End Sub
Sub Abteilung2()
    Call TextmarkeSetzen("Abteilung2")
End Sub
Sub Strasse()
    Call TextmarkeSetzen("Strasse")
End Sub
Sub Strasse1()
    Call TextmarkeSetzen("Strasse1")
End Sub
Sub Strasse2()
    Call TextmarkeSetzen("Strasse2")
End Sub
Sub PLZOrt()
    Call TextmarkeSetzen("PLZOrt")
End Sub
Sub PLZOrt1()
    Call TextmarkeSetzen("PLZOrt1")
End Sub
Sub PLZOrt2()
    Call TextmarkeSetzen("PLZOrt2")
End Sub
Sub IhrZeichen()
    Call TextmarkeSetzen("IhrZeichen")
End Sub
Sub IhrZeichen1()
    Call TextmarkeSetzen("IhrZeichen1")
End Sub
Sub IhrZeichen2()
    Call TextmarkeSetzen("IhrZeichen2")
End Sub
Sub KDNR()
    Call TextmarkeSetzen("KDNR")
End Sub
Sub KDNR1()
    Call TextmarkeSetzen("KDNR1")
End Sub
Sub KDNR2()
    Call TextmarkeSetzen("KDNR2")
End Sub
Sub Datum()
    Call TextmarkeSetzen("Datum")
End Sub
Sub Datum1()
    Call TextmarkeSetzen("Datum1")
End Sub
Sub Datum2()
    Call TextmarkeSetzen("Datum2")
End Sub
Sub Betreff()
    Call TextmarkeSetzen("Betreff")
End Sub
Sub Betreff1()
    Call TextmarkeSetzen("Betreff1")
End Sub
Sub Betreff2()
    Call TextmarkeSetzen("Betreff2")
End Sub
Sub Briefanrede()
    Call TextmarkeSetzen("Briefanrede")
End Sub
Sub Briefanrede1()
    Call TextmarkeSetzen("Briefanrede1")
End Sub
Sub Briefanrede2()
    Call TextmarkeSetzen("Briefanrede2")
End Sub
Sub TelNr()
    Call TextmarkeSetzen("TelNr")
End Sub
Sub TelNr1()
    Call TextmarkeSetzen("TelNr1")
End Sub
Sub TelNr2()
    Call TextmarkeSetzen("TelNr2")
End Sub
Sub FaxNr()
    Call TextmarkeSetzen("FaxNr")
End Sub
Sub FaxNr1()
    Call TextmarkeSetzen("FaxNr1")
End Sub
Sub FaxNr2()
    Call TextmarkeSetzen("FaxNr2")
End Sub
Sub Firma()
    Call TextmarkeSetzen("Firma")
End Sub
Sub Firma1()
    Call TextmarkeSetzen("Firma1")
End Sub
Sub Firma2()
    Call TextmarkeSetzen("Firma2")
End Sub
Sub OrtLand()
    Call TextmarkeSetzen("OrtLand")
End Sub
Sub OrtLand1()
    Call TextmarkeSetzen("OrtLand1")
End Sub
Sub OrtLand2()
    Call TextmarkeSetzen("OrtLand2")
End Sub
Sub Ansprechpartner()
    Call TextmarkeSetzen("Ansprechpartner")
End Sub
Sub Ansprechpartner1()
    Call TextmarkeSetzen("Ansprechpartner1")
End Sub
Sub Ansprechpartner2()
    Call TextmarkeSetzen("Ansprechpartner2")
End Sub
Sub AnsprechpartnerK()
    Call TextmarkeSetzen("AnsprechpartnerK")
End Sub
Sub AnsprechpartnerK1()
    Call TextmarkeSetzen("AnsprechpartnerK1")
End Sub
Sub AnsprechpartnerK2()
    Call TextmarkeSetzen("AnsprechpartnerK2")
End Sub

Sub AnsprechpartnerP()
    Call TextmarkeSetzen("AnsprechpartnerP")
End Sub
Sub AnsprechpartnerP1()
    Call TextmarkeSetzen("AnsprechpartnerP1")
End Sub
Sub AnsprechpartnerP2()
    Call TextmarkeSetzen("AnsprechpartnerP2")
End Sub
Sub AnsprechpartnerPK()
    Call TextmarkeSetzen("AnsprechpartnerPK")
End Sub
Sub AnsprechpartnerPK1()
    Call TextmarkeSetzen("AnsprechpartnerPK1")
End Sub
Sub AnsprechpartnerPK2()
    Call TextmarkeSetzen("AnsprechpartnerPK2")
End Sub
Sub Anred()
    Call TextmarkeSetzen("Anred")
End Sub
Sub Anred1()
    Call TextmarkeSetzen("Anred1")
End Sub
Sub Anred2()
    Call TextmarkeSetzen("Anred2")
End Sub
Sub AnredK()
    Call TextmarkeSetzen("AnredK")
End Sub
Sub AnredK1()
    Call TextmarkeSetzen("AnredK1")
End Sub
Sub AnredK2()
    Call TextmarkeSetzen("AnredK2")
End Sub
Sub AnredP()
    Call TextmarkeSetzen("AnredP")
End Sub
Sub AnredP1()
    Call TextmarkeSetzen("AnredP1")
End Sub
Sub AnredP2()
    Call TextmarkeSetzen("AnredP2")
End Sub
Sub AnredPK()
    Call TextmarkeSetzen("AnredPK")
End Sub
Sub AnredPK1()
    Call TextmarkeSetzen("AnredPK1")
End Sub
Sub AnredPK2()
    Call TextmarkeSetzen("AnredPK2")
End Sub
Sub Unterschrift()
    Call TextmarkeSetzen("Unterschrift")
End Sub
Sub Titel()
    Call TextmarkeSetzen("Titel")
End Sub
Sub Titel1()
    Call TextmarkeSetzen("Titel1")
End Sub
Sub Titel2()
    Call TextmarkeSetzen("Titel2")
End Sub
Sub Vorname()
    Call TextmarkeSetzen("Vorname")
End Sub
Sub Vorname1()
    Call TextmarkeSetzen("Vorname1")
End Sub
Sub Vorname2()
    Call TextmarkeSetzen("Vorname2")
End Sub
Sub Nachname()
    Call TextmarkeSetzen("Nachname")
End Sub
Sub Nachname1()
    Call TextmarkeSetzen("Nachname1")
End Sub
Sub Nachname2()
    Call TextmarkeSetzen("Nachname2")
End Sub
Sub VName0()
    Call TextmarkeSetzen("VName")
End Sub
Sub VName1()
    Call TextmarkeSetzen("VName1")
End Sub
Sub VName2()
    Call TextmarkeSetzen("VName2")
End Sub
Sub KName0()
    Call TextmarkeSetzen("KName")
End Sub
Sub KName1()
    Call TextmarkeSetzen("KName1")
End Sub
Sub KName2()
    Call TextmarkeSetzen("KName2")
End Sub
Sub Anrede()
    Call TextmarkeSetzen("Anrede")
End Sub
Sub Anrede1()
    Call TextmarkeSetzen("Anrede1")
End Sub
Sub Anrede2()
    Call TextmarkeSetzen("Anrede2")
End Sub

Sub LaufendeNr()
    Call TextmarkeSetzen("LaufendeNr")
End Sub
Sub LaufendeNr1()
    Call TextmarkeSetzen("LaufendeNr1")
End Sub
Sub LaufendeNr2()
    Call TextmarkeSetzen("LaufendeNr2")
End Sub
Sub Stichworte()
    Call TextmarkeSetzen("Stichworte")
End Sub
Sub Stichworte1()
    Call TextmarkeSetzen("Stichworte1")
End Sub
Sub Stichworte2()
    Call TextmarkeSetzen("Stichworte2")
End Sub




Attribute VB_Name = "Tabellen"
Public Sub TabellenZeillenL|fffd|schen()
  '***Leerzeilen Tabelle L|fffd|schen, nicht ausgelagert da bei Abruch auch nicht gespeichert werden soll
  '**********************************

  Dim docTemp As Document, tblTemp As Table
  Dim rgAktZeile As Range, clAktZelle As Cell
  Dim blnZeileBenutzt As Boolean
  Dim I1 As Integer, J1 As Integer
  Dim intAnzZeilen As Integer, intAnzZellen As Integer
  Dim SpaltenVonRechtsNicht As Byte, SpaltenVonRechtsNichtDefault As Byte
  Dim SpaltenVonRechtsNichtInput As String
  
    
 'Anzahl der Spalten, die von rechts gesehen nicht mit auf Inhalt gepr|fffd|ft werden.
 'Somit kann in rechter Spalte Formel stehen, die Inhalt darstellt
 'Wenn aber keine Werte in Zellen links neben der Formel f|fffd|r die Formel vorhanden sind
 'werden diese Zeilen mit den Formeln gel|fffd|scht
  
  
On Error GoTo Fehler

' Auslesen der Anzahl der Spalten von Rechts aus den Dateieigenschaften der aktiven Datei. Falls nicht vorhanden, dann |fffd|ber Fehler 5 Inputbox

SpaltenVonRechtsNicht = 0
SpaltenVonRechtsNicht = CByte(ActiveDocument.CustomDocumentProperties("TableColumn"))


' L|fffd|schprozedere


  Set docTemp = ActiveDocument
  If docTemp.Tables.Count = 0 Then
    Beep
    MsgBox "Es sind keine Tabellen im aktuellen Dokument vorhanden!", _
        vbOKOnly + vbCritical, "Leere Zeilen l|fffd|schen" & " - " & Msg_title
    Exit Sub
  End If

  Application.ScreenUpdating = False

  If Not Selection.Information(wdWithInTable) Then
    MsgBox "Bitte setzen Sie den Cursor zun|fffd|chst in die gew|fffd|nschte Tabelle", _
           vbOKOnly + vbCritical, "Leere Zeilen l|fffd|schen" & " - " & Msg_title
    Exit Sub
  End If

  Set tblTemp = Selection.Tables(1)

  Set rgAktZeile = tblTemp.Rows(1).Range
  intAnzZeilen = tblTemp.Rows.Count
  

  For I1 = 1 To intAnzZeilen
    DoEvents
    intAnzZellen = rgAktZeile.Rows(1).Cells.Count
    intAnzZellen = intAnzZellen - SpaltenVonRechtsNicht
    blnZeileBenutzt = False
    For J1 = 1 To intAnzZellen
      DoEvents
      Set clAktZelle = rgAktZeile.Rows(1).Cells(J1)
      If clAktZelle.Range.Characters.Count > 1 Then
         blnZeileBenutzt = True
         Exit For
      End If
    Next J1 'N|fffd|chste Zelle
    If Not blnZeileBenutzt Then
      rgAktZeile.Rows(1).Delete
    Else
      Set rgAktZeile = rgAktZeile.Next(wdRow)
    End If
  Next I1 'N|fffd|chste Zeile

  Application.ScreenUpdating = True
  Application.ScreenRefresh
  DoEvents
  
Exit Sub
Fehler:
    If Err.Number = 5 Then
        SpaltenVonRechtsNichtInput = InputBox("Bitte geben Sie die Anzahl der Spalten ein, die in der Tabelle von rechts aus gesehen nicht auf Inhalte gepr|fffd|ft werden sollen." & _
                              vbCrLf & vbCrLf & _
                             "Somit k|fffd|nnen in den rechten Spalten einer Tabelle Formeln stehen, die Werte aus den weiter links gelegenen Spalten berechnen." & _
                             " Diese rechte Spalte mit den Formeln stellen Inhalt dar! Sollen diese Zeilen, die ausser den Formeln keine weiteren Werte enthalten auch gel|fffd|scht werden, muss hier die Anzahl der Spalten eingeben werden, die (von rechts gesehen) nicht gepr|fffd|ft werden sollen!" & _
                             vbCrLf & vbCrLf & _
                             "Wenn Sie zum Beispiel den Default-Wert ""0"" best|fffd|tigen, werden alle Spalten auf Inhalt gepr|fffd|ft." & vbCrLf & _
                             "Wenn Sie den Wert ""1"" eingeben werden alle Spalten der Tabelle bis auf die Letzte auf Inhalte gepr|fffd|ft." _
                             , Msg_title, SpaltenVonRechtsNichtDefault)
        
        If SpaltenVonRechtsNichtInput = "" Then
            MsgBox "Es wurden keine Zeilen gel|fffd|scht, da Sie eine unzul|fffd|ssige Spaltenzahl eingegeben oder abgebrochen haben!", vbInformation, Msg_title
            Exit Sub
        End If
        SpaltenVonRechtsNicht = CByte(SpaltenVonRechtsNichtInput)

        Resume Next
    Else
        MsgBox Err.Number & vbCrLf & vbCrLf & Err.Description, vbCritical, Msg_title
    End If
End Sub
Attribute VB_Name = "ThisDocument"
Attribute VB_Base = "0{00020906-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Variablenzuweisung"
Public Trenn1$, Msg_title$, Vorlage$, HilfePfad$, Version$, Version1$, Vers$, Rel$, UnterschriftPfad$, VorlagenPfad$, Individ$, Ind1$, Ind11$, Ind2$, Ind3$, Ind4$, Ind5 As String
Public Datum1 As Date, DatumSystem As Date, CD As Date
Public E_preis As Currency, E_preis1 As Currency, E_preis2 As Currency, Version2 As Boolean, FirmenName_Lizenz$, Anzahl_Lizenz As String
Public Verk$, HilfeAllg$, Trenn$, HilfU1$, HilfU2$, HilfL1$, HilfL2$, VorlageArt$, VorlageSymb$, VorlgAllg$, VorlgU1$, VorlgU2$, VorlgL1$, VorlgL2$, E_preis_form As String
Public Allg$, Inst_Dir$, Vorlage1$, Vorlage2$, Vorlage3$, Vorlage4$, Vorlage5$, FehlerMessageBrief$, FehlerMessageFax$, UntAllg$, Temp_dir$, Curr_Folder$, E_MAIL$, Internet$, Nutzungsbedingungen As String
Public AntwortFragezeichen As Integer, FaxNrErs As Boolean, Dat_kurz As Boolean, WerbungEig As Boolean, FaxErsatz$, WerbeText$, LandKrzl1$, LandKrzl2$, LandKrzl3$
Public SP_Firma_length As Byte, SP_Name_length As Byte, SP_Betreff_length As Byte, SP_Umlaute As Boolean
Public B_Dat_form As String, F_Dat_form As String, SP_Trennzeichen As String, SP_Speichern As Boolean
Public Save_Dat_Form As String, Be_Betreff$, Be_IhrZeichen$, Be_KDNR$
Public StandardBefehle As Boolean
Public GultJahr$, GultMonat$, GultTag$  ' Datumsfragmente f|fffd|r Ablaufdatum der Testversion
Public MwST_S As Single
Public SpeichernameGenerell As String ' Gibt Ordnung des Dateinamens an
Public Benutzer As String
Public StichworteAnzeigen As Boolean, Historie As Boolean, MemoHistorie As String, Be_Stichworte As String
Public SaveWithoutDialog As Boolean, SavePrefix As String, SavePrefixUse As Boolean
Public FileCount As Boolean, StartCount As Long
Public UseSavePath As Boolean, SavePath As String, SpezSaveorder As Boolean, SavorderFile As String, FormatSaveDate As String
Public LaufendeNummerDateien As String, FileCountFormat As String
Public VorlageFehltFehlerZur|fffd|cksetzer As Boolean
Public VersionsNr As String, UpdateNr As String, AnpassungsNr As String
Public ZVL_KoernerNR As Byte
Public Pers|fffd|nlichVorbelegen As Boolean, PositionOderKNR As Byte
Public Abbruch As Boolean
Public BriefanredenEndZeichen As String
Public AuslStadtGross As Boolean
Public ZVL_VorlagenDarstellung As Byte




Public Sub AutoExec()
'Hier werden die Globalen Variablen f|fffd|r alle Module festgelegt
'Dieser Makro mu|fffd|, falls es noch nicht von einem anderen Modul gestartet
' wurde vor in jedem Modul vor der Variablenverwendung gestartet werden
' mit --> ' Application.Run MacroName:="AutoExec"

On Error GoTo Fehler
Version = 3
Rel = 3

GultTag = "30"
GultMonat = "06"
GultJahr = "2020"

VersionsNr = 6
UpdateNr = 0
AnpassungsNr = 35

CD = DateSerial(GultJahr, GultMonat, GultTag) 'Ermittelt das Ablaufdatum Typenvertr|fffd|glich auch f|fffd|r andere Formate


Verk = "MK"
Anzahl_Lizenz = ""
' Version aus Dokumenteigenschaften auslesen
Dim Manuell As Boolean
Dim aTemp As Object
Dim I As Byte
Dim Code As String
Dim CodePr|fffd|fz As String


Abbruch = False
WerbungEig = True   'Um Werbung in den Dokumenteigenschaften ein/auszuschalten (True = ein)
Internet = "www.dotoffice.de"
Msg_title = "Created by " & Internet

E_MAIL = "feedback.zvlg@dotoffice.de"

Datum1 = Date  ' Datum1 enth|fffd|lt das aktuelle Systemdatum.
DatumSystem = Date    ' Systemdatum zuweisen.



If DatumSystem < DateSerial(2006, 12, 31) Then
    MwST_S = 0.16
    E_preis1 = 35
    E_preis2 = 55
    E_preis = 25
 Else
    MwST_S = 0.19
    E_preis1 = 39
    E_preis2 = 59
    E_preis = 29
End If

E_preis_form = Format(E_preis, "##,##0.00 |fffd|") ': MsgBox E_preis_form
Trenn = "___________________________________________________________________" & vbCrLf & vbCrLf
Trenn1 = vbCrLf & "***************************************************************************" & vbCrLf & vbCrLf
VorlageFehltFehlerZur|fffd|cksetzer = False

Version2 = False    'zur Lizenz (bei Lizenz = True)

For Each aTemp In Templates
    I = I + 1
    'MsgBox I & " : " & aTemp.Name
    If aTemp.Name = "zvlg_koerner.dot" Then
        'MsgBox "Version: " & Templates(I).CustomDocumentProperties("Version") & " mit Index: " & I
        Exit For
    End If
Next aTemp

ZVL_KoernerNR = I

' Lizenzcode auslesen
Benutzer = Trim(Templates(I).CustomDocumentProperties("Benutzer"))
Code = Trim(Templates(I).CustomDocumentProperties("Code"))
CodePr|fffd|fz = Mid(Code, 1, 3)

    
If Code = "hX2r79AW6rU" Or Code = "oXnru6jl@" Or CodePr|fffd|fz = Lizenzcode(Benutzer) Then
    Version2 = True
    
    If Benutzer = "0" Or Benutzer = "" Then  'Zuweisung f|fffd|r Lizenztext
        Msg_title = "Lizenziert - " & "Created by " & Internet
    Else
        FirmenName_Lizenz = Benutzer
        Msg_title = "Lizenziert f|fffd|r: " & Benutzer & " - " & Msg_title
    End If
Else
        Msg_title = "Lizenziert f|fffd|r: ""unlizenziert""" & " - " & Msg_title
End If


' Dokumenteigenschaften auslesen
Manuell = Templates(I).CustomDocumentProperties("Manuell")
Version1 = VersionsNr _
    & "." & UpdateNr _
    & "." & AnpassungsNr

If Version2 = True Then
    HilfePfad = Templates(I).CustomDocumentProperties("Pfad_Hilfe")
    UnterschriftPfad = Templates(I).CustomDocumentProperties("Pfad_Unt")
    
'    If FirmenName_Lizenz <> "" Then
'        WerbeText = "Erstellt mit einer f|fffd|r die Firma """ & FirmenName_Lizenz _
'            & """ lizenzierten Version des Vorlagensystem von " _
'            & vbCrLf & Internet
'    Else
        WerbeText = "Erstellt mit dem Vorlagensystem von " _
            & vbCrLf & Internet
'    End If
Else
    UnterschriftPfad = "\Unterschrift"      ' Damit in unlizenzierter Version Pfad von Hilfe und Unterschrift nicht ge|fffd|ndert werden kann
    HilfePfad = "\Hilfe"
    
    WerbeText = "Erstellt mit einer unlizenzierten Version (" & Version1 & ") des Vorlagensystem von " _
            & vbCrLf & Internet
    
    'Benachrichtigung beim Word-Start dass die nur eine Testversion
    

    
    If CD - Date <= 10 Then
        Antwort = MsgBox("Sie benutzen eine unlizenzierte Testversion des Word-Vorlagensystems mit Outlookanbindung." _
            & vbCrLf & "Diese Testversion funktioniert uneingeschr|fffd|nkt bis zum " _
            & Format(CD, "ddddd") & "." & vbCrLf & vbCrLf _
            & "Wenn Sie das Vorlagensystem jetzt lizenzieren wollen, klicken Sie bitte auf ""Ja"". " _
            & vbCrLf & vbCrLf _
            & "(Diese Meldung erscheint nur in der unlizenzierten Version!)", vbYesNo, "Version: " & Version1 & " - " & Msg_title)
    
        If Antwort = 6 Then ' Auswerten der Antwort
                Load Bestellung
                Bestellung.Show
        End If
    End If
End If
    
    
FaxNrErs = Templates(I).CustomDocumentProperties("Fax Nummer ersetzen") ' Faxnummern erstzen +49 (0 in (0 ersetzen ein/auszuschalten (True = ein)
FaxErsatz = Templates(I).CustomDocumentProperties("FaxErsatz") ' Zu erstzende Internationale Einwahl z.B. +49 ( --> Achtung kein Leerzeichen zwischen + und 49

' L|fffd|ngen der Fragmnente f|fffd|r den Dateinamen, wenn dieser gek|fffd|rzt werden muss
SP_Umlaute = Templates(I).CustomDocumentProperties("Umlaute") ' gibt an ob alle Umlaute erstzt werden sollen
Dat_kurz = Templates(I).CustomDocumentProperties("Dat_kurz") ' Gibt an ob Dateiname speuiell f|fffd|r Novellserver gek|fffd|rzt werden sollen
SP_Firma_length = Templates(I).CustomDocumentProperties("Firma_length") 'L|fffd|nge der Begrenzung des Firmennamens im Dateinamen wenn Dat_kurz auf true
SP_Name_length = Templates(I).CustomDocumentProperties("Name_length")   'L|fffd|nge der Begrenzung des Ansprechpartnernamens im Dateinamen wenn Dat_kurz auf true
SP_Betreff_length = Templates(I).CustomDocumentProperties("Betreff_length") 'L|fffd|nge der Begrenzung des Betreffs im Dateinamen wenn Dat_kurz auf true
SP_Trennzeichen = Templates(I).CustomDocumentProperties("Trennzeichen") ' Trennzeichen im Dateinamen zweischen Firma, Ansprechpartner und Betreff etc.



B_Dat_form = Templates(I).CustomDocumentProperties("B_Dat_form") ' gibt das Standardformat des Datums in Brief-Dialogbox an
F_Dat_form = Templates(I).CustomDocumentProperties("F_Dat_form") ' gibt das Standardformat des Datums in Fax-Dialogbox an
FormatSaveDate = "yyyy-mm-dd" ' gibt das Standardformat des Datums zum Speichern an

SP_Speichern = Templates(I).CustomDocumentProperties("Speichern") ' Entscheidet ob in den Dialogboxen Speichern vorbelegt ist
WerbungEig = Templates(I).CustomDocumentProperties("wb")          'Um Werbung in den Dokumenteigenschaften ein/auszuschalten (True = ein)


'Beschriftungen f|fffd|r Dialogbox
Be_Betreff = Templates(I).CustomDocumentProperties("Bez_Betreff")
Be_IhrZeichen = Templates(I).CustomDocumentProperties("Bez_IhrZeichen")
Be_KDNR = Templates(I).CustomDocumentProperties("Bez_KDNR")

' Behandlung ob Position = Position (True) oder Kundennummer = False
PositionOderKNR = Templates(I).CustomDocumentProperties("Position")  ' Belegt vor ob Feld Position als Position oder Kundennummer verwendet werden soll

' Symbole ein und ausblenden
Call SymbolEinblenden("Leerzeilen l|fffd|schen", "Vorlagen mit Outlookanbindung", Templates(I).CustomDocumentProperties("TabellenZeilenL|fffd|schenAnzeigen"))

Pers|fffd|nlichVorbelegen = Templates(I).CustomDocumentProperties("pers|fffd|nl")


SpeichernameGenerell = Templates(I).CustomDocumentProperties("Saveorder")  ' Liest Art des Speichernamens aus
' Dabei steht
' F f|fffd|r Firma etc.

'Einsatz der Standardbefehle oder mit Erweiterung f|fffd|r ???
StandardBefehle = Templates(I).CustomDocumentProperties("StandardBefehle")

' Historie
Historie = Templates(I).CustomDocumentProperties("Historie")
StichworteAnzeigen = Templates(I).CustomDocumentProperties("Stichworte")
Be_Stichworte = Templates(I).CustomDocumentProperties("Bez_Stichworte")

BriefanredenEndZeichen = Templates(I).CustomDocumentProperties("BriefanredenEndZeichen")    ' M|fffd|glichkeit, damit Schweizer Komma wegnehmen k|fffd|nnen
If BriefanredenEndZeichen = " " Then BriefanredenEndZeichen = ""


AuslStadtGross = Templates(I).CustomDocumentProperties("AuslStadtGross") 'Wenn True, dann wird ausl|fffd|ndiche Stadt und Land Gro|fffd| geschrieben
ZVL_VorlagenDarstellung = Templates(I).CustomDocumentProperties("VorlagenDarstellung") 'ANSICHT DER DIALOGBOX (LISTE ODER SYMBOL ETC)




Select Case FaxErsatz 'Land auswerten anhand der Internationalen Vorwahl um z.B. Deutschland in einem Brief aus Deutschland nach Deutschland zu ersetzen
    Case "+49 ("
        LandKrzl1 = "D"
        LandKrzl2 = "Deutschland"
        LandKrzl3 = "Germany"
    Case "+49"
        LandKrzl1 = "D"
        LandKrzl2 = "Deutschland"
        LandKrzl3 = "Germany"
    Case "+ 49"
        LandKrzl1 = "D"
        LandKrzl2 = "Deutschland"
        LandKrzl3 = "Germany"
    Case "0049"
        LandKrzl1 = "D"
        LandKrzl2 = "Deutschland"
        LandKrzl3 = "Germany"
    
    Case "+43 ("
        LandKrzl1 = "A"
        LandKrzl2 = "|fffd|sterreich"
        LandKrzl3 = "Austria"
    Case "+43"
        LandKrzl1 = "A"
        LandKrzl2 = "|fffd|sterreich"
        LandKrzl3 = "Austria"
    Case "+ 43"
        LandKrzl1 = "A"
        LandKrzl2 = "|fffd|sterreich"
        LandKrzl3 = "Austria"
    Case "0043"
        LandKrzl1 = "A"
        LandKrzl2 = "|fffd|sterreich"
        LandKrzl3 = "Austria"
    
    Case "+41 ("
        LandKrzl1 = "CH"
        LandKrzl2 = "Schweiz"
        LandKrzl3 = "Switzerland"
    Case "+41"
        LandKrzl1 = "CH"
        LandKrzl2 = "Schweiz"
        LandKrzl3 = "Switzerland"
    Case "+ 41"
        LandKrzl1 = "CH"
        LandKrzl2 = "Schweiz"
        LandKrzl3 = "Switzerland"
    Case "0041"
        LandKrzl1 = "CH"
        LandKrzl2 = "Schweiz"
        LandKrzl3 = "Switzerland"
     
     Case "+39 ("
        LandKrzl1 = "I"
        LandKrzl2 = "Italien"
        LandKrzl3 = "Italy"
     Case "+39"
        LandKrzl1 = "I"
        LandKrzl2 = "Italien"
        LandKrzl3 = "Italy"
     Case "+ 39"
        LandKrzl1 = "I"
        LandKrzl2 = "Italien"
        LandKrzl3 = "Italy"
     Case "0039"
        LandKrzl1 = "I"
        LandKrzl2 = "Italien"
        LandKrzl3 = "Italy"
   
    Case Else
        LandKrzl1 = "D"
        LandKrzl2 = "Deutschland"
        LandKrzl3 = "Germany"
End Select



Curr_Folder = Options.DefaultFilePath(wdCurrentFolderPath)

'************************************************************
'Ermitteln des Laufwerks, auf dem sich der Hilfeordner bzw Unterschriftspfad befindet
'Soll Ermittlung ausgeschaltet werden, dann ist Manuell auf False zu setzen

If Manuell = False Then
Dim Einstellungen As Variant

On Error Resume Next

Einstellungen = GetAllSettings(appname:="zvlg_koerner", Section:="Settings")
    For intSettings = LBound(Einstellungen, 1) To UBound(Einstellungen, 1)
        ' Debug.Print Einstellungen(intSettings, 0), Einstellungen(intSettings, 1)
        If Einstellungen(intSettings, 0) = "Inst_Dir" Then
            'MsgBox Einstellungen(intSettings, 0) & " = " & Einstellungen(intSettings, 1)
            Inst_Dir = Einstellungen(intSettings, 1)
        End If
    Next intSettings
'MsgBox Inst_Dir, vbInformation, "Endg|fffd|ltig"

    U_pfad = Inst_Dir & UnterschriftPfad
    'MsgBox U_pfad
    Inst_pfad = Inst_Dir
    'MsgBox Inst_pfad
    H_pfad = Inst_Dir & HilfePfad
    'MsgBox H_pfad

    
Err.Clear                       ' Felder des Err-Objekts
'MsgBox "Laufwerk: " & Inst_pfad

On Error GoTo Fehler

HilfePfad = H_pfad
UnterschriftPfad = U_pfad
' MsgBox HilfePfad & vbCrLf & UnterschriftPfad

End If
'************************************************************
  
    VorlagenPfad = Options.DefaultFilePath(wdUserTemplatesPath) & "\"
' MsgBox Options.DefaultFilePath(wdUserTemplatesPath)
' MsgBox Options.DefaultFilePath(wdWorkgroupTemplatesPath)


    Allg = "Ordner unter Extras --> Optionen:" & vbCrLf
    Vorlage1 = "  Benutzervorlagen:" & Chr(9) & Chr(9) _
        & Options.DefaultFilePath(wdUserTemplatesPath) & vbCrLf
    
    Vorlage2 = "  Arbeitsgruppenvorlagen:" & Chr(9) _
        & Options.DefaultFilePath(wdWorkgroupTemplatesPath) _
        & vbCrLf
    
    Vorlage3 = "  StartUp-Ordner:" & Chr(9) & Chr(9) _
        & Options.DefaultFilePath(wdStartupPath) & vbCrLf
    
    Vorlage4 = "  Aktueller Ordner:" & Chr(9) & Chr(9) _
        & Options.DefaultFilePath(wdCurrentFolderPath) & vbCrLf
    
    Vorlage5 = "  Benutzerinitialien:" & Chr(9) & Chr(9) _
        & Application.UserInitials
    
  
    Individ = vbCrLf & vbCrLf _
        & "In diesem Projekt eingestellte Ordner:" _
        & vbCrLf & vbCrLf
    
    Ind1 = "  Pfad der Hilfe:" & Chr(9) & Chr(9) _
        & H_pfad & vbCrLf & vbCrLf
    
    Ind2 = "Details siehe Dokumentation." & vbCrLf & Chr(9) _
        & "Namenkonvention:" & Chr(9) _
        & "[Vorlagenname].html  (Vorlagenname ohne .dot!!!) " _
        & vbCrLf & vbCrLf
    
    
    Ind11 = "In diesem Ordner k|fffd|nnen sich Hilfe-Dateien im Format *.html oder *. htm zu den Vorlagen befinden. "
    
    Ind3 = "  Pfad und Dateiname der Unterschrift:" _
        & vbCrLf & Chr(9) _
        & U_pfad & Application.PathSeparator _
        & "unterschrift_" & Application.UserInitials & ".tif" _
        & vbCrLf & vbCrLf
    
    Ind4 = "In diesem Ordner und unter diesem Namen sollte sich Ihre gescannte Unterschriften befinden, damit diese  entsprechend eingef|fffd|gt wird. " _
        & vbCrLf _
        & "(Pfad in Modul und Benutzerintialien unter Extras --> Optionen |fffd|ndern)" _
        & vbCrLf & Chr(9) & "Namenkonvention:" & Chr(9) _
        & "unterschrift_ [Benutzerintialien].tif" & vbCrLf
    
    Ind5 = "Entsprechend der Namenkonvention" _
        & vbCrLf & Chr(9) _
        & "--> unterschrift_ [Benutzerintialien].tif" _
        & vbCrLf _
        & "mu|fffd| sich Ihre gescannte Unterschrift in diesem Ordner und unter diesem Namen befinden (Bitte pr|fffd|fen!):" _
        & vbCrLf & vbCrLf & Chr(9) & "  " _
        & U_pfad & Application.PathSeparator _
        & "unterschrift_" & Application.UserInitials & ".tif"
        
TextmarkenSymbolleistenAusblenden

Exit Sub

Fehler:


If Err.Number = 5 Then
    Err.Clear
    Resume Next
Else
    MsgBox "Im Modul """ & Err.Source & """ wurde ein Fehler mit Fehlernummer """ & Err.Number & _
        """verursacht!" & vbCrLf & vbCrLf & "Fehlerbeschreibung:" & vbCrLf & _
        Err.Description & vbCrLf & vbCrLf & _
        "Bitte schicken Sie ggf. eine Mail an " & E_MAIL _
        , vbCritical, Msg_title
    Resume Next
End If
End Sub
Attribute VB_Name = "frm_eigenschaften"
Attribute VB_Base = "0{218C2B8D-E971-11E7-AE36-0003FF31812D}{218C2B70-E971-11E7-AE36-0003FF31812D}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False

' InQuest injected base64 decoded content
' wYz'!z
' zw^6
' +mzY
' Szjej
' *'zp
' zz+vw
' l6'!
' l6'!

INQUEST-PP=macro
