Attribute VB_Name = "NewMacros"
Sub DruckenArchivieren()
'
' DruckenArchivieren Makro
'
'

End Sub
Attribute VB_Name = "NewMacros1"

Private Declare Function GetProfileString Lib "kernel32" _
   Alias "GetProfileStringA" _
  (ByVal lpAppName As String, _
   ByVal lpKeyName As String, _
   ByVal lpDefault As String, _
   ByVal lpReturnedString As String, _
   ByVal nSize As Long) As Long

Private Declare Function WriteProfileString Lib "kernel32" _
   Alias "WriteProfileStringA" _
  (ByVal lpszSection As String, _
   ByVal lpszKeyName As String, _
   ByVal lpszString As String) As Long

Private Declare Function SendMessage Lib "user32" _
   Alias "SendMessageA" _
  (ByVal hwnd As Long, _
   ByVal wMsg As Long, _
   ByVal wParam As Long, _
   lparam As Any) As Long

'DataAL Makros
Dim DataAl As DataAl.Application

Function GetDataProgID() As String
    Dim DataProgName As String
    DataProgName = GetDocumentVariable("DataProgID")
    ' MsgBox (DataProgName)
    If DataProgName = "" Then
       GetDataProgID = "DataAl.Application"
    Else
       GetDataProgID = DataProgName
    End If
End Function

Sub Wasser_Ein(Wasserzeichen As String)
'   Wasserzeichen "Kopie" definieren
    ActiveWindow.ActivePane.View.SeekView = wdSeekCurrentPageHeader
    Selection.HeaderFooter.Shapes.SelectAll
    Selection.HeaderFooter.Shapes.AddTextEffect(Waterprint, Wasserzeichen, "Times New Roman", 1, False, False, 0, 0).Select
    Selection.ShapeRange.Name = "MyWaterprint"
    Selection.ShapeRange.TextEffect.NormalizedHeight = False
    Selection.ShapeRange.Line.Visible = False
    Selection.ShapeRange.Fill.Visible = True
    Selection.ShapeRange.Fill.Solid
    Selection.ShapeRange.Fill.ForeColor.RGB = RGB(192, 192, 192)
    Selection.ShapeRange.Fill.Transparency = 0.5    'ActiveDocument.Variables("Transparenz").Value / 100
    Selection.ShapeRange.Rotation = 315
    Selection.ShapeRange.LockAspectRatio = True
    Selection.ShapeRange.Height = CentimetersToPoints(7.52)
    Selection.ShapeRange.Width = CentimetersToPoints(15.04)
    Selection.ShapeRange.WrapFormat.AllowOverlap = True
    Selection.ShapeRange.WrapFormat.Side = wdWrapNone
    Selection.ShapeRange.WrapFormat.Type = 3
    'Selection.ShapeRange.RelativeHorizontalPosition = wdRelativeHorizontalPositionMargin
    Selection.ShapeRange.RelativeVerticalPosition = wdRelativeVerticalPositionMargin
    Selection.ShapeRange.Left = wdShapeCenter
    Selection.ShapeRange.Top = wdShapeCenter
    ActiveWindow.ActivePane.View.SeekView = wdSeekMainDocument
End Sub

Sub Wasser_Aus()
'   Wasserzeichen wieder l|fffd|schen
    ActiveWindow.ActivePane.View.SeekView = wdSeekCurrentPageHeader
    Selection.HeaderFooter.Shapes("MyWaterprint").Select
    Selection.Delete
    ActiveWindow.ActivePane.View.SeekView = wdSeekMainDocument
End Sub

Sub DruckWasserzeichenKopie(Wasserzeichen As String, Kopien As Integer)
'   Ausdrucken mit Wasserzeichen "Kopie" auf den Kopien
    'MsgBox (Wasserzeichen)
    'MsgBox (Kopien)
    Application.PrintOut
'   Ausdrucken mit Wasserzeichen, anschlie|fffd|end wieder l|fffd|schen
    If Wasserzeichen <> "" Then
        Call Wasser_Ein(Wasserzeichen)
    End If
    For i = 1 To Kopien
        Application.PrintOut
    Next
    If Wasserzeichen <> "" Then
        Call Wasser_Aus
        ActiveDocument.Saved = True
    End If
End Sub

Function WatermarkCopies() As Integer
    For Each aVar In ActiveDocument.Variables
        If aVar.Name = "Kopien" Then num = aVar.Index
    Next aVar
    If num > 0 Then
        WatermarkCopies = ActiveDocument.Variables("Kopien").Value
    Else
        WatermarkCopies = 0
    End If
End Function

Sub DruckmitWasserzeichen()
    'MsgBox ("DruckmitWasserzeichen")
    Dim Watermark As String
    Dim WmCopies As Integer
    Watermark = GetDocumentVariable("Wasserzeichen")
    'MsgBox (Watermark)
    If Watermark = "" Then
        Set DataAl = CreateObject(GetDataProgID())
        'MsgBox "get watermark from datal"
        Watermark = DataAl.Wasserzeichen
        'MsgBox (Watermark)
        Set DataAl = Nothing
    End If
    If WmCopies = 0 Then
        Set DataAl = CreateObject(GetDataProgID())
        'MsgBox "get copies from datal"
        WmCopies = DataAl.Kopien
        'MsgBox (WmCopies)
        Set DataAl = Nothing
    End If
    Call DruckWasserzeichenKopie(Watermark, WmCopies)
End Sub
Sub Ausdrucken()
'   Ausdrucken ohne Wasserzeichen
    Application.PrintOut
'   Ausdrucken mit Wasserzeichen, anschlie|fffd|end wieder l|fffd|schen
    Call Wasser_Ein("Kopie")
    Application.PrintOut
    Call Wasser_Aus
End Sub

Sub Wasserzeichen_Setzen_alle()
'generiert ein Wasserzeichen auf Ebene Header/Footer
' mit dem uebergebenen Text und Objektnamen (zum Wiederfinden und Zugriff darauf)
    'ActiveDocument.Sections(1).Range.Select
    ActiveWindow.ActivePane.View.SeekView = wdSeekCurrentPageHeader
    Selection.HeaderFooter.Shapes.AddTextEffect(Waterprint, _
        "Kopie", "Times New Roman", 1, False, False, 0, 0).Select
    Selection.ShapeRange.Name = "MyWaterprint"
    Selection.ShapeRange.TextEffect.NormalizedHeight = False
    Selection.ShapeRange.Line.Visible = False
    Selection.ShapeRange.Fill.Visible = True
    Selection.ShapeRange.Fill.Solid
    Selection.ShapeRange.Fill.ForeColor.RGB = RGB(192, 192, 192)
    Selection.ShapeRange.Fill.Transparency = 0.5 'ActiveDocument.Variables("Transparenz").Value / 100
    Selection.ShapeRange.Rotation = 315
    Selection.ShapeRange.LockAspectRatio = True
    Selection.ShapeRange.Height = CentimetersToPoints(4.93)
    Selection.ShapeRange.Width = CentimetersToPoints(19.74)
    Selection.ShapeRange.WrapFormat.AllowOverlap = True
    Selection.ShapeRange.WrapFormat.Side = wdWrapNone
    Selection.ShapeRange.WrapFormat.Type = 3
    Selection.ShapeRange.RelativeHorizontalPosition = _
        wdRelativeVerticalPositionMargin
    Selection.ShapeRange.RelativeVerticalPosition = _
        wdRelativeVerticalPositionMargin
    Selection.ShapeRange.Left = wdShapeCenter
    Selection.ShapeRange.Top = wdShapeCenter
    ActiveWindow.ActivePane.View.SeekView = wdSeekMainDocument
End Sub

Sub DateiDruckereinrichtung()
    'MsgBox ("DateiDruckereinrichtung")
    'Set oWord = CreateObject("Word.Application")
    WordBasic.FilePrintSetup Printer:="PDFCreator", DoNotSetAsSysDefault:=1
End Sub

Private Function fstrDField(mytext As String, delim As String, groupnum As Integer) As String
   ' this is a standard delimiter routine that every developer I know has.
   ' This routine has a million uses. This routine is great for splitting up
   ' data fields, or sending multiple parms to a openargs of a form
   '
   '  Parms are
   '        mytext   - a delimited string
   '        delim    - our delimiter (usually a , or / or a space)
   '        groupnum - which of the delimited values to return
   '
Dim startpos As Integer, endpos As Integer
Dim groupptr As Integer, chptr As Integer
chptr = 1
startpos = 0
 For groupptr = 1 To groupnum - 1
    chptr = InStr(chptr, mytext, delim)
    If chptr = 0 Then
       fstrDField = ""
       Exit Function
    Else
       chptr = chptr + 1
    End If
 Next groupptr
startpos = chptr
endpos = InStr(startpos + 1, mytext, delim)
If endpos = 0 Then
   endpos = Len(mytext) + 1
End If
fstrDField = Mid$(mytext, startpos, endpos - startpos)
End Function
   
Function GetDefaultPrinter() As String
   Dim strDefault    As String
   Dim lngbuf        As Long
   strDefault = String(255, Chr(0))
   lngbuf = GetProfileString("Windows", "Device", "", strDefault, Len(strDefault))
   If lngbuf > 0 Then
      GetDefaultPrinter = fstrDField(strDefault, ",", 1)
   Else
      GetDefaultPrinter = ""
   End If
End Function
Sub SetActivePrinter()
    'MsgBox ("SetActivePrinter=" + ActiveDocumentPrinter)
    'Set oWord = CreateObject("Word.Application")
    DocumentPrinter = ActiveDocumentPrinter()
    If DocumentPrinter = "" Then
        DocumentPrinter = GetDefaultPrinter()
    End If
    If DocumentPrinter <> "" Then
        WordBasic.FilePrintSetup Printer:=DocumentPrinter, DoNotSetAsSysDefault:=1
    End If
End Sub
Function ActiveDocumentPrinter() As String
    For Each aVar In ActiveDocument.Variables
        If aVar.Name = "Drucker" Then num = aVar.Index
    Next aVar
    If num > 0 Then
        ActiveDocumentPrinter = ActiveDocument.Variables("Drucker").Value
    Else
        ActiveDocumentPrinter = ""
    End If
End Function
Function GetDocumentVariable(VarName) As String
    For Each aVar In ActiveDocument.Variables
        If aVar.Name = VarName Then num = aVar.Index
    Next aVar
    If num > 0 Then
        GetDocumentVariable = ActiveDocument.Variables(VarName).Value
    Else
        GetDocumentVariable = ""
    End If
End Function

Sub Dauermedikamente1()
    Set DataAl = CreateObject(GetDataProgID())
    Dim Dauermedikation As Dauermedikamente
    Dim Dauermed As Dauermedikament
    Set Dauermedikation = DataAl.Dauermedikamente
    If Dauermedikation.Open(SelectionString) Then
        MsgBox ("Selektionsfehler")
    Else
        'MsgBox (Dauermedikation.Count)
        For Each Dauermed In Dauermedikation
            Application.Selection.TypeText (Dauermed.Rezepttext)
            Application.Selection.TypeParagraph
        Next
    End If
    Set Dauermedikation = Nothing
    Set DataAl = Nothing
End Sub

Sub XXX()
    Set DataAl = CreateObject(GetDataProgID())
    Dim Diagnose As GestellteDiagnose
    Dim Diagnosen As GestellteDiagnosen
    Set Diagnosen = DataAl.GestellteDiagnosen
    MsgBox (Diagnosen.Fields.Count)
    MsgBox (Diagnosen.Fields(18).Name)
    For i = 1 To Diagnosen.Fields.Count
        Application.Selection.TypeText (Diagnosen.Fields(i).Name)
    Next
    Set Diagnosen = Nothing
    Set DataAl = Nothing
End Sub
Sub YYY()
    Set DataAl = CreateObject(GetDataProgID())
    'Dim SPatient As Patient
    'Dim SPatienten As Patienten
    Set SelPatienten = DataAl.Patienten
    'MsgBox (SelPatienten.Fields.Count)
    'MsgBox (SelPatienten.Fields(18).Name)
    'For i = 1 To SelPatienten.Fields.Count
    '    Application.Selection.TypeText (SelPatienten.Fields(i).Name)
    'Next
    If SelPatienten.Open("PatNr=1") Then
        MsgBox ("Selektionsfehler")
    Else
        MsgBox (SelPatienten.Count)
        For Each SelPatient In SelPatienten
            Application.Selection.TypeText (SelPatient.Name)
            Application.Selection.TypeParagraph
        Next
    End If
    Set SelPatienten = Nothing
    Set DataAl = Nothing
End Sub

Sub displayfield()
    Set DataAl = CreateObject(GetDataProgID())
    Dim Diag As GestellteDiagnose
    Dim Diagnose As GestellteDiagnose
    Dim Diagnosen As GestellteDiagnosen
    Set Diagnosen = DataAl.GestellteDiagnosen
    If Diagnosen.Open("Bezeichnung=h") Then
        MsgBox ("Selektionsfehler")
    Else
        MsgBox (Diagnosen.Count)
    End If
    Set Diag = Nothing
    Set Diagnosen = Nothing
    Set DataAl = Nothing
End Sub
Sub XDiagnosen()
    Set DataAl = CreateObject(GetDataProgID())
    Dim Diag As GestellteDiagnose
    Dim Diagnose As GestellteDiagnose
    Dim Diagnosen As GestellteDiagnosen
    Set Diagnosen = DataAl.GestellteDiagnosen
    If Diagnosen.Open(PatientFallSelection(Patientennummer)) Then
        MsgBox ("Selektionsfehler")
    Else
        'MsgBox (Diagnosen.Item(1).Diagnosetext)
        Set Diag = Diagnosen.Item(2)
        On Error GoTo DiagFehler
        MsgBox Diag.Diagnosetext
        Set Diag = Nothing
        'For Each Diagnose In Diagnosen
        '    Application.Selection.TypeText (Diagnose.Diagnosetext)
        '    Application.Selection.TypeParagraph
        'Next
        Diagnosen.Close
    End If
    Set Diagnosen = Nothing
    Set DataAl = Nothing
    GoTo Cleanup
DiagFehler:
    MsgBox ("Es ist ein Fehler aufgetreten")
Cleanup:
    Set Diag = Nothing
    Set Diagnosen = Nothing
    Set DataAl = Nothing
End Sub

Sub RecordSet()
    Set DataAl = CreateObject(GetDataProgID())
    Dim Records As RecordSet
    Dim Pat As Patient
    Set Records = DataAl.RecordSet
    'Set Records = CreateObject("DataAL.Recordset")
    If Records.Open("patient:Name=K") Then
        MsgBox ("Selektionsfehler")
    Else
        'MsgBox Records.Count
        'For Each Pat In Records
         '   Application.Selection.TypeText (Pat.Name)
          '  Application.Selection.TypeParagraph
        'Next
        For i = 1 To Records.Count
            Set Pat = Records.Item(i)
            Application.Selection.TypeText (Pat.Name)
        Next
        Records.Close
    End If
    Set Records = Nothing
    Set DataAl = Nothing
End Sub

Function NewLine() As String
    If Application.Version Like "8.*" Then
        NewLine = "^z"
    Else
        NewLine = "^l"
    End If
End Function

Sub DisplayPropertyInfo(dp As DocumentProperty)
    MsgBox "value = " & dp.Value & Chr(13) & _
        "type = " & dp.Type & Chr(13) & _
        "name = " & dp.Name
End Sub

Sub PropertyTest()
    Dim dp As DocumentProperty
    Set dp = ActiveDocument.CustomDocumentProperties("PrintCopies")
    Call DisplayPropertyInfo(dp)
End Sub

Function NumPrint() As Integer
    NumPrint = 1
    Exemplare = System.PrivateProfileString("dataword.ini", "MacroSettings", _
            "DruckExemplare")
    If IsNumeric(Exemplare) Then
        NumPrint = CInt(Exemplare)
    End If
    Dim dp As DocumentProperty
    For Each dp In ActiveDocument.CustomDocumentProperties
        If dp.Name = "Kopien" Then NumPrint = dp.Value
    Next dp
End Function

Sub AddProperty()
    With ActiveDocument.CustomDocumentProperties
    .Add Name:="PrintCopies", _
        LinkToContent:=False, _
        Type:=msoPropertyTypeNumber, _
        Value:=2
    End With
End Sub

Sub Einstellungen()
    Dim NachrichtCopies As String
    UserForm1.Show
End Sub

Function Nachrichtan(Praxisname, i, x) As String
   Dim Nachricht As String
   For j = 0 To i - 1
      If j <> x Then
         If Nachricht <> "" Then Nachricht = Nachricht + NewLine
         Nachricht = Nachricht + Praxisname(j)
      End If
   Next j
   Nachrichtan = Nachricht
End Function

Function PraxisAerzte(UePraxis) As String
    'Dim UeArzt As Arzt
    Dim UeAerzte As Aerzte
    Set UeAerzte = DataAl.Aerzte
    Dim Arztname As String
    If UeAerzte.Open("Praxis=" + UePraxis + "^") Then
        MsgBox ("Selektionsfehler")
    Else
        For Each UeArzt In UeAerzte
            If Arztname <> "" Then Arztname = Arztname + ", "
            Arztname = Arztname + UeArzt.Titel + " " + UeArzt.Vorname + " " + UeArzt.Name
        Next
        Set UeAerzte = Nothing
    End If
    PraxisAerzte = Arztname
End Function

Private Sub InsertAerzte(UePraxis As String)
    'Dim UeArzt As Arzt
    Dim UeAerzte As Aerzte
    Set UeAerzte = DataAl.Aerzte
    Dim Arztname As String
    If UeAerzte.Open("Praxis=" + UePraxis + "^") Then
        MsgBox ("Selektionsfehler")
    Else
        For Each UeArzt In UeAerzte
            If Arztname <> "" Then Arztname = Arztname + NewLine
            Arztname = Arztname + UeArzt.Titel + " " + UeArzt.Vorname + " " + UeArzt.Name
        Next
        Set UeAerzte = Nothing
        Call DoFindReplace("<<ARZT>>", Arztname)
    End If
End Sub

Private Sub InsertArztAnrede(UePraxis As String)
    'Dim UeArzt As Arzt
    Dim UeAerzte As Aerzte
    Set UeAerzte = DataAl.Aerzte
    Dim Arztname As String
    If UeAerzte.Open("Praxis=" + UePraxis + "^") Then
        MsgBox ("Selektionsfehler")
    Else
        For Each UeArzt In UeAerzte
            If Arztname <> "" Then Arztname = Arztname + NewLine
            Arztname = Arztname + UeArzt.Anrede
        Next
        Set UeAerzte = Nothing
        Call DoFindReplace("<<ARZTANREDE>>", Arztname)
    End If
End Sub

Function Quartal(Datum As Date) As String
    Monat% = CInt(Format(Datum, "mm"))
    Quart% = (Monat% - 1) / 3 + 1
    Quartal = Format(Datum, "yyyy") + "/" + Format(Quart%)
End Function

Function Vorquartal(Datum As Date) As String
    Jahr% = CInt(Format(Datum, "yyyy"))
    Monat% = CInt(Format(Datum, "mm"))
    Quart% = (Monat% - 1) / 3
    If Quart% = 0 Then
        Quart% = 4
        Jahr% = Jahr% - 1
    End If
    Vorquartal = Format(Jahr%) + "/" + Format(Quart%)
End Function

Private Sub Qtest()
    MsgBox (Format(Date$))
    MsgBox (Vorquartal(Date$))
End Sub

Private Sub Pxtest()
    Set DataAl = CreateObject(GetDataProgID())
    Dim Arztpraxis As Praxis
    Dim Arztpraxen As Praxen
    Set Arztpraxen = DataAl.Praxen
    MsgBox (TypeName(Arztpraxen))
    If Arztpraxen.Open("Praxis=a") Then
        MsgBox ("Selektionsfehler")
    Else
        MsgBox (Arztpraxen.Count)
        'Arztpraxen.Append ("Praxis=b")
        'Arztpraxen.Select
    End If
    'Dim Auswahl As Praxen
    Set Auswahl = DataAl.Praxen
    MsgBox (TypeName(Auswahl))
    If Auswahl.Open("Praxis=ab") Then
        MsgBox ("Selektionsfehler")
    Else
        Arztpraxen.Preselect (Auswahl)
        Set Auswahl = Nothing
    End If
    Set Arztpraxen = Nothing
End Sub

Sub Nachrichtlich()
    Set DataAl = CreateObject(GetDataProgID())
    Set Uebpraxen = DataAl.Praxen
    Dim Scheine As Krankenscheine
    Dim Schein As Krankenschein
    Dim UebPatient As Patient
    Set UebPatient = DataAl.Patient
    UebPatient.PatNr = Patientennummer
    UebPatient.read
    If UebPatient.Hausarzt <> "" Then
        If Uebpraxen.Open("Praxis=" + UebPatient.Hausarzt + ";sichtbar=0") Then
            MsgBox ("Selektionsfehler bei Hausarzt")
        End If
    End If
    Set Scheine = DataAl.Krankenscheine
    If Scheine.Open("PatNr=" + Str(UebPatient.PatNr) _
            + ";Scheinart=" + Str(Scheinart_UEberweisungsschein) _
            + ";Quartal>=" + Vorquartal(Date$)) Then
        MsgBox ("Selektionsfehler bei Krankenscheinen")
    Else
        'MsgBox ("Anzahl Scheine:" + Str(Scheine.Count))
        For Each Schein In Scheine
            If Schein.UEberwvon <> "" Then
                Uebpraxen.Append ("Praxis=" + Schein.UEberwvon + ";sichtbar=0")
            End If
        Next
    End If
    Set Scheine = Nothing
    Set UebPatient = Nothing
    'MsgBox ("ueberw.Praxen:" + Str(Uebpraxen.Count))
    Dim Arztpraxis As Praxis
    Dim Arztpraxen As Praxen
    Dim Praxisname(10) As String
    Set Arztpraxen = DataAl.Praxen
    If Arztpraxen.Open("sichtbar=0") Then
        MsgBox ("Selektionsfehler")
    Else
        OldWindowState = Application.WindowState
        Application.WindowState = wdWindowStateMinimize
        'ActiveDocument.ActiveWindow.WindowState = wdWindowStateMinimize
        Arztpraxen.Preselect (Uebpraxen)
        Application.WindowState = OldWindowState
        i = 0
        For Each Arztpraxis In Arztpraxen
            Praxisname(i) = PraxisAerzte(Arztpraxis.Praxis)
            If Praxisname(i) = "" Then
                If MsgBox("Keine |fffd|rzte angegeben f|fffd|r Praxis '" + _
                        Arztpraxis.Praxis + "'" + Chr(13) + Chr(10) _
                        + "Druck abbrechen?", vbYesNo) = vbYes Then
                    GoTo NachrichtlichEnde
                End If
            End If
            i = i + 1
        Next
        Arztpraxen.Reset
        ActiveDocument.SaveAs FileName:="__nachrichtlich.rtf"
        k = 0
        For Each Arztpraxis In Arztpraxen
            Documents.Open FileName:="__nachrichtlich.rtf", Revert:=1
            Call DoFindReplace("<<PRAXISANREDE>>", Arztpraxis.Anrede)
            Call DoFindReplace("<<PRAXISBEMERKUNG>>", Arztpraxis.Bem)
            Call DoFindReplace("<<PRAXIS>>", Arztpraxis.Praxis)
            Call DoFindReplace("<<STRASSE>>", Arztpraxis.Strasse)
            Call DoFindReplace("<<PXFACH>>", Arztpraxis.Fachgruppe)
            Call InsertAerzte(Arztpraxis.Praxis)
            Call InsertArztAnrede(Arztpraxis.Praxis)
            Call DoFindReplace("<<PLZ>>", Arztpraxis.PLZ)
            Call DoFindReplace("<<ORT>>", Arztpraxis.Ort)
            Call DoFindReplace("<<NACHRICHTLICH>>", Nachrichtan(Praxisname, i, k))
            If System.PrivateProfileString("dataword.ini", "MacroSettings", _
                "nichtdrucken") = Str(True) Then
                ActiveDocument.SaveAs ("__nachrichtlich" + Str(k + 1) + ".rtf")
            Else
                ActiveDocument.PrintOut Copies:=NumPrint(), Collate:=True
            End If
            k = k + 1
        Next
        Arztpraxen.Close
    End If
    If k > 0 Then                           ' wurde gedruckt
        If System.PrivateProfileString("dataword.ini", "MacroSettings", _
                "Archivieren") = Str(True) Then
            SaveArchive (PatientNummer)
        Else
            If System.PrivateProfileString("dataword.ini", "MacroSettings", _
                "nichtdrucken") <> Str(True) Then
                ActiveDocument.SaveAs FileName:="__letzterbrief.rtf"
            End If
        End If
    End If
NachrichtlichEnde: Uebpraxen.Close
    Set Uebpraxen = Nothing
    Set Arztpraxen = Nothing
    Set DataAl = Nothing
End Sub

Sub Adresseeinfuegen()
    With Application.Selection
        .TypeText ("<<ARZT>>")
        .TypeParagraph
        .TypeText ("<<STRASSE>>")
        .TypeParagraph
        .TypeText ("<<PLZ>> <<ORT>>")
    End With
End Sub

Sub Nachrichtlicheinfuegen()
        With Selection.ParagraphFormat
            .LeftIndent = InchesToPoints(1.25)
            .SpaceBeforeAuto = False
            .SpaceAfterAuto = False
            .SpaceBeforeAuto = False
            .SpaceAfterAuto = False
            .FirstLineIndent = InchesToPoints(-1.25)
        End With
    With Application.Selection
        .TypeText ("nachrichtlich an:" + Chr(9) + "<<NACHRICHTLICH>>")
    End With
End Sub

Private Sub FindReplace(pattern As String, replace As String)
    Set myRange = ActiveDocument.Content
    With myRange.Find
        .ClearFormatting
        .Text = pattern
        .Replacement.ClearFormatting
        .Replacement.Text = replace
        .Execute replace:=wdReplaceAll, Forward:=True, _
        Wrap:=wdFindContinue
    End With
End Sub

Private Sub DoFindReplace(pattern As String, replace As String)
    If ActiveDocument.ProtectionType <> wdNoProtection Then
        ActiveDocument.Unprotect
        Call FindReplace(pattern, replace)
        ActiveDocument.Protect (wdAllowOnlyComments)
    Else
        Call FindReplace(pattern, replace)
    End If
End Sub

Function InputPatNr() As Long
    Dim PatNummer As String
    Do
        PatNummer = InputBox("Bitte Patientennummer eingeben")
        If PatNummer = "" Then
            Exit Function
        End If
        If IsNumeric(PatNummer) Then
            InputPatNr = CLng(PatNummer)
        Else
            PatNummer = ""
            MsgBox "Bitte eine Zahl eingeben"
        End If
    Loop While PatNummer = ""
End Function

Function PatientNummer() As Long
    For Each aVar In ActiveDocument.Variables
        If aVar.Name = "Patientennummer" Then num = aVar.Index
    Next aVar
    If num > 0 Then
        PatientNummer = ActiveDocument.Variables("Patientennummer").Value
    Else
        PatientNummer = undefLong
    End If
End Function

Function Patientennummer() As Long
    For Each aVar In ActiveDocument.Variables
        If aVar.Name = "Patientennummer" Then num = aVar.Index
    Next aVar
    If num > 0 Then
        Patientennummer = ActiveDocument.Variables("Patientennummer").Value
    Else
        Patientennummer = InputPatNr()
    End If
End Function

Function FallNummer() As Long
    For Each aVar In ActiveDocument.Variables
        If aVar.Name = "Behandlungsfall" Then num = aVar.Index
    Next aVar
    If num > 0 Then
        FallNummer = ActiveDocument.Variables("Behandlungsfall").Value
    Else
        FallNummer = 0
    End If
End Function
    
Function PatientFallSelection(PatNummer) As String
    Behandlungsfall& = FallNummer()
    If Behandlungsfall& < 0 Then
        PatientFallSelection = "PatNr=" + Str(PatNummer)
    Else
        PatientFallSelection = "PatNr=" + Str(PatNummer) _
            + ";Fall=^|" + Str(Behandlungsfall&)
    End If
End Function

Function SelectionString() As String
    SelectionString = PatientFallSelection(Patientennummer)
End Function

Function LetzterBesuch(PatNummer) As String
    Dim Patient As Patient
    Set Patient = DataAl.Patient
    Patient.PatNr = PatNummer
    Patient.read
    LetzterBesuch = Patient.Besuch
    Set Patient = Nothing
End Function

Function BesuchSelection(PatNummer) As String
    BesuchSelection = "PatNr=" + Str(PatNummer)
    DatumSeit = LetzterBesuch(PatNummer)
    If DatumSeit <> "" Then
        BesuchSelection = BesuchSelection + ";Datum>=" + DatumSeit
    End If
End Function

Function BesuchFallSelection(PatNummer) As String
    BesuchFallSelection = PatientFallSelection(PatNummer)
    DatumSeit = LetzterBesuch(PatNummer)
    If DatumSeit <> "" Then
        BesuchFallSelection = BesuchFallSelection + ";Datum>=" + DatumSeit
    End If
End Function

Sub Diagnosen()
    Set DataAl = CreateObject(GetDataProgID())
    Dim Diagnose As GestellteDiagnose
    Dim Diagnosen As GestellteDiagnosen
    Set Diagnosen = DataAl.GestellteDiagnosen
    If Diagnosen.Open(PatientFallSelection(Patientennummer)) Then
        MsgBox ("Selektionsfehler")
    Else
        For Each Diagnose In Diagnosen
            Application.Selection.TypeText (Diagnose.Diagnosetext)
            'Application.Selection.TypeText (Diagnose.Bemerkung)
            Application.Selection.TypeParagraph
        Next
        Diagnosen.Close
    End If
    Set Diagnosen = Nothing
    Set DataAl = Nothing
End Sub

Sub DiagnosenAuswahl()
    Set DataAl = CreateObject(GetDataProgID())
    Dim Diagnose As GestellteDiagnose
    Dim Diagnosen As GestellteDiagnosen
    Set Diagnosen = DataAl.GestellteDiagnosen
    If Diagnosen.Open(SelectionString) Then
        MsgBox ("Selektionsfehler")
    Else
        If Diagnosen.Count > 0 Then
            OldWindowState = Application.WindowState
            Application.WindowState = wdWindowStateMinimize
            Diagnosen.Select
            Application.WindowState = OldWindowState
        End If
        For Each Diagnose In Diagnosen
            Application.Selection.TypeText (Diagnose.Diagnosetext)
            Application.Selection.TypeParagraph
        Next
        Diagnosen.Close
    End If
    Set Diagnosen = Nothing
    Set DataAl = Nothing
End Sub

Sub Konsultationen()
    Set DataAl = CreateObject(GetDataProgID())
    Dim Besuch As Konsultation
    Dim Besuche As Konsultationen
    Set Besuche = DataAl.Konsultationen
    If Besuche.Open("PatNr=" + Str(Patientennummer)) Then
        MsgBox ("Selektionsfehler")
    Else
        For Each Besuch In Besuche
            Application.Selection.TypeText (Besuch.Datum)
            Application.Selection.TypeParagraph
        Next
        Besuche.Close
    End If
    Set Besuche = Nothing
    Set DataAl = Nothing
End Sub

Sub Verordnungen()
    Set DataAl = CreateObject(GetDataProgID())
    Dim Medikamente As Verordnungen
    Dim Medikament As Verordnung
    Set Medikamente = DataAl.Verordnungen
    If Medikamente.Open(PatientFallSelection(Patientennummer)) Then
        MsgBox ("Selektionsfehler")
    Else
        For Each Medikament In Medikamente
            'MsgBox (Medikament.Freitextmedikament)
            Application.Selection.TypeText (Medikament.Verordnung)
            'Application.Selection.TypeText (Medikament.PZN)
            Application.Selection.TypeParagraph
        Next
        
        Medikamente.Close
    End If
    Set Medikamente = Nothing
    Set DataAl = Nothing
End Sub

Sub VerordnungsAuswahl()
    Set DataAl = CreateObject(GetDataProgID())
    Dim Medikamente As Verordnungen
    Set Medikamente = DataAl.Verordnungen
    If Medikamente.Open(SelectionString) Then
        MsgBox ("Selektionsfehler")
    Else
        If Medikamente.Count > 0 Then
            OldWindowState = Application.WindowState
            Application.WindowState = wdWindowStateMinimize
            Medikamente.Select
            Application.WindowState = OldWindowState
        End If
        For Each Medikament In Medikamente
            Application.Selection.TypeText (Medikament.Verordnung)
            Application.Selection.TypeParagraph
        Next
        Medikamente.Close
    End If
    Set Medikamente = Nothing
    Set DataAl = Nothing
End Sub

Function Medplandatum(PatNummer) As String
    Dim Medplan As Medplanverordnungen
    Set Medplan = DataAl.Medplanverordnungen
    Dim Medplanzeile As Medplanverordnung
    If Medplan.Open("PatNr=" + Str(PatNummer)) Then
        MsgBox ("Selektionsfehler")
    Else                            'neuestes medikamentenplandatum ermitteln
        For Each Medplanzeile In Medplan
            Medplandatum = Medplanzeile.Datum
        Next
        Medplan.Close
    End If
    Set Medplan = Nothing
End Function

Sub PrintMedplanzeile(Medplanzeile As Medplanverordnung)
    Application.Selection.TypeText (Medplanzeile.Verordnung + vbTab _
        + Medplanzeile.morgens + " - " + Medplanzeile.mittags + " - " _
        + Medplanzeile.abends + " - " + Medplanzeile.nachts + "  " _
        + Medplanzeile.wann + vbTab + Medplanzeile.Bemerkung)
        Application.Selection.TypeParagraph
End Sub

Sub PrintMedplan(Medplan As Medplanverordnungen)
    Dim Medplanzeile As Medplanverordnung
    Dim Fremdmedikation As Boolean      ' True falls Fremdmedikation vorhanden
    Dim WannEssen As Boolean            ' Angabe vorhanden: v=vor dem Essen, w=w|fffd|hrend dem Essen, n=nach dem Essen
    For Each Medplanzeile In Medplan
        If Medplanzeile.fremdverordnet Then
            Application.Selection.TypeText ("*")
            Fremdmedikation = True
        End If
        If Medplanzeile.wann <> "" Then WannEssen = True
        Call PrintMedplanzeile(Medplanzeile)
    Next
    Medplan.Close
    If WannEssen Then
        Application.Selection.TypeText ("v=vor dem Essen, w=w|fffd|hrend dem Essen, n=nach dem Essen")
        Application.Selection.TypeParagraph
    End If
    If Fremdmedikation Then
        Application.Selection.TypeText ("* =Fremdmedikament")
        Application.Selection.TypeParagraph
    End If
End Sub

Sub Medikamentenplan()
    Set DataAl = CreateObject(GetDataProgID())
    Dim Medplan As Medplanverordnungen
    Set Medplan = DataAl.Medplanverordnungen
    PatNummer = Patientennummer
    If Medplan.Open("PatNr=" + Str(PatNummer) + ";Datum=" + Medplandatum(PatNummer)) Then
        MsgBox ("Selektionsfehler")
    Else
        'MsgBox (Medplan.Count)
        Call PrintMedplan(Medplan)
    End If
    Set Medplan = Nothing
    Set DataAl = Nothing
End Sub

Sub MedikamentenplanAuswahl()
    Set DataAl = CreateObject(GetDataProgID())
    Dim Medplan As Medplanverordnungen
    Set Medplan = DataAl.Medplanverordnungen
    If Medplan.Open("PatNr=" + Str(Patientennummer)) Then
        MsgBox ("Selektionsfehler")
    Else
        If Medplan.Count > 0 Then
            OldWindowState = Application.WindowState
            Application.WindowState = wdWindowStateMinimize
            Medplan.Select
            Application.WindowState = OldWindowState
        End If
        Call PrintMedplan(Medplan)
        Medplan.Close
    End If
    Set Medplan = Nothing
    Set DataAl = Nothing
End Sub

Sub PrintDauermed(Dauermedikation As Dauermedikamente)
    Dim Dauermed As Dauermedikament
    For Each Dauermed In Dauermedikation
        Application.Selection.TypeText (Dauermed.Rezepttext)
        Application.Selection.TypeParagraph
    Next
End Sub

Sub Dauermedikamente()
    Set DataAl = CreateObject(GetDataProgID())
    Dim Dauermedikation As Dauermedikamente
    Set Dauermedikation = DataAl.Dauermedikamente
    If Dauermedikation.Open(SelectionString) Then
        MsgBox ("Selektionsfehler")
    Else
        Call PrintDauermed(Dauermedikation)
    End If
    Set Dauermedikation = Nothing
    Set DataAl = Nothing
End Sub

Sub DauermedikamenteAuswahl()
    Set DataAl = CreateObject(GetDataProgID())
    Dim Dauermedikation As Dauermedikamente
    Set Dauermedikation = DataAl.Dauermedikamente
    If Dauermedikation.Open(SelectionString) Then
        MsgBox ("Selektionsfehler")
    Else
        If Dauermedikation.Count > 0 Then
            OldWindowState = Application.WindowState
            Application.WindowState = wdWindowStateMinimize
            Dauermedikation.Select
            Application.WindowState = OldWindowState
        End If
        Call PrintDauermed(Dauermedikation)
        Dauermedikation.Close
    End If
    Set Dauermedikation = Nothing
    Set DataAl = Nothing
End Sub

Sub TypeLaborwert(Laborwert As Laborwert)
    With Application.Selection
        .TypeText (Laborwert.Datum)
        .TypeText (Chr(9) + Laborwert.LabParam + Chr(9))
        '.TypeText (Chr(9) + Laborwert.Parametername + Chr(9))
        'If Laborwert.Wert <> undefLong Then
            .TypeText (Format(Laborwert.Messwert) + " " + Laborwert.Einheit)
        'End If
        .TypeText (Chr(9))
        If Laborwert.Minwert <> undefLong Then
            .TypeText (Format(Laborwert.Minwert) + " " + Laborwert.Einheit)
        End If
        .TypeText (Chr(9))
        If Laborwert.Maxwert <> undefLong Then
            .TypeText (Format(Laborwert.Maxwert) + " " + Laborwert.Einheit)
        End If
        .TypeText (Chr(9))
        .TypeText (Laborwert.Gw)
        '.TypeText (Laborwert.Ergebnistext)
        '.TypeText (Laborwert.Bemerkung)
        '.TypeText (Laborwert.Normalwert)
        .TypeParagraph
    End With
End Sub
Sub llltest()
    'MsgBox (GetDataProgID())
    Set DataAl = CreateObject(GetDataProgID())
    Set Labordaten = DataAl.Laborwerte
    ' DataAl.DBCollectionInterface laborwerte = applicationClass.Laborwerte;
    '     laborwerte.Open("PatNr=" + intPatNr + ";Datum<=" + bis.ToShortDateString() + ";Datum>=" + von.ToShortDateString());
    ' n = Labordaten.Open("PatNr=6;Datum<=11.02.2011;Datum>=01.01.2011")
    ' If Labordaten.Open("PatNr=6;Datum>=01.01.2010;Datum<=11.02.2011") Then
    ' If Labordaten.Open("PatNr=6;Datum<=11.02.2011;Datum>=01.01.2010") Then
    If Labordaten.Open("PatNr=6;Datum=01.01.2010-25.01.2010;@key=LDKEY") Then
        MsgBox ("Selektionsfehler")
    End If
    MsgBox ("Anzahl=" + Str(Labordaten.Count))
    ' MsgBox (Labordaten.Count)
End Sub
Sub Laborwerte()
    Set DataAl = CreateObject(GetDataProgID())
    Dim Labwert As Laborwert
    Dim Labordaten As Laborwerte
    Set Labordaten = DataAl.Laborwerte
    PatNummer& = Patientennummer
    BesuchDatum = LetzterBesuch(PatNummer&)
    LabSelection = "PatNr=" + Str(PatNummer&)
    If BesuchDatum <> "" Then
        LabSelection = LabSelection + ";Datum>=" + BesuchDatum
    End If
    If Labordaten.Open(LabSelection) Then
        MsgBox ("Selektionsfehler")
    Else
        For Each Labwert In Labordaten
            If Labwert.Laborgeraet = "" Then
                Call TypeLaborwert(Labwert)
            End If
        Next
        Labordaten.Close
    End If
    Set Labordaten = Nothing
    Set DataAl = Nothing
End Sub

Sub LaborwerteAuswahl()
    Set DataAl = CreateObject(GetDataProgID())
    Dim Labwert As Laborwert
    Dim Labordaten As Laborwerte
    Set Labordaten = DataAl.Laborwerte
    If Labordaten.Open("PatNr=" + Str(Patientennummer()) + ";Laborger|fffd|t=^^") Then
        MsgBox ("Selektionsfehler")
    Else
        If Labordaten.Count > 0 Then
            OldWindowState = Application.WindowState
            Application.WindowState = wdWindowStateMinimize
            Labordaten.Select
            Application.WindowState = OldWindowState
            For Each Labwert In Labordaten
                Call TypeLaborwert(Labwert)
            Next
        End If
        Labordaten.Close
    End If
    Set Labordaten = Nothing
    Set DataAl = Nothing
End Sub

Sub TypeMedizintechnik(Laborwert As Laborwert)
    With Application.Selection
        .TypeText (Laborwert.Datum)
        .TypeText (Chr(9) + Laborwert.Parametername)
        If Laborwert.Wert <> undefLong Then
            .TypeText (Chr(9) + Format(Laborwert.Messwert) + " " + Laborwert.Einheit)
        End If
        .TypeParagraph
        '.TypeText (NewLine)
        .TypeText (Laborwert.Ergebnistext)
        If Laborwert.Bemerkung <> "" Then
            .TypeParagraph
            .TypeText (Laborwert.Bemerkung)
        End If
    End With
End Sub

Sub Medizintechnik()
    Set DataAl = CreateObject(GetDataProgID())
    Dim Labwert As Laborwert
    Dim Labordaten As Laborwerte
    Set Labordaten = DataAl.Laborwerte
    PatNummer& = Patientennummer
    BesuchDatum = LetzterBesuch(PatNummer&)
    LabSelection = "PatNr=" + Str(PatNummer&)
    If BesuchDatum <> "" Then
        LabSelection = LabSelection + ";Datum>=" + BesuchDatum
    End If
    If Labordaten.Open(LabSelection) Then
        MsgBox ("Selektionsfehler")
    Else
        For Each Labwert In Labordaten
            If Labwert.Laborgeraet <> "" Then
                Call TypeMedizintechnik(Labwert)
            End If
        Next
        Labordaten.Close
    End If
    Set Labordaten = Nothing
    Set DataAl = Nothing
End Sub

Sub MedizintechnikAuswahl()
    Set DataAl = CreateObject(GetDataProgID())
    Dim Labwert As Laborwert
    Dim Labordaten As Laborwerte
    Set Labordaten = DataAl.Laborwerte
    If Labordaten.Open("PatNr=" + Str(Patientennummer()) + ";Laborger|fffd|t=#") Then
        MsgBox ("Selektionsfehler")
    Else
        If Labordaten.Count > 0 Then
            OldWindowState = Application.WindowState
            Application.WindowState = wdWindowStateMinimize
            Labordaten.Select
            Application.WindowState = OldWindowState
            For Each Labwert In Labordaten
                Call TypeMedizintechnik(Labwert)
            Next
        End If
        Labordaten.Close
    End If
    Set Labordaten = Nothing
    Set DataAl = Nothing
End Sub

Sub Dokumentation()
    Set DataAl = CreateObject(GetDataProgID())
    Dim Befunde As Dokumentationen
    Dim Befund As Dokumentation
    Set Befunde = DataAl.Dokumentationen
    DokuTyp = InputBox("Bitte Dokumentationstyp eingeben, leer = alle Typen")
    If Befunde.Open(PatientFallSelection(Patientennummer) + ";Typ=" + DokuTyp) Then
        MsgBox ("Selektionsfehler")
    Else
        For Each Befund In Befunde
            Application.Selection.TypeText (Befund.Text)
            Application.Selection.TypeParagraph
        Next
        Befunde.Close
    End If
    Set Befunde = Nothing
    Set DataAl = Nothing
End Sub

Sub DokumentationsAuswahl()
    Set DataAl = CreateObject(GetDataProgID())
    Dim Befunde As Dokumentationen
    Dim Befund As Dokumentation
    Set Befunde = DataAl.Dokumentationen
    'PatNummer = Patientennummer()
    DokuTyp = InputBox("Bitte Dokumentationstyp eingeben, leer = alle Typen")
    If Befunde.Open(SelectionString + ";Typ=" + DokuTyp + ";@key=BDPAT") Then
        MsgBox ("Selektionsfehler")
    Else
        If Befunde.Count > 0 Then
            OldWindowState = Application.WindowState
            Application.WindowState = wdWindowStateMinimize
            Befunde.Select
            Application.WindowState = OldWindowState
        End If
        For Each Befund In Befunde
            Application.Selection.TypeText (Befund.Text)
            Application.Selection.TypeParagraph
        Next
        Befunde.Close
    End If
    Set Befunde = Nothing
    Set DataAl = Nothing
End Sub

Function BesuchArchiv(PatNummer) As String
    BesuchArchiv = PatientFallSelection(PatNummer)
    DatumSeit = LetzterBesuch(PatNummer)
    If DatumSeit <> "" Then
        BesuchArchiv = BesuchArchiv + ";Befunddatum>=" + DatumSeit
    End If
End Function
                                    
Private Sub InsertGrafic(ArchivDokument As GrafischesDokument)
    Set fs = CreateObject("Scripting.FileSystemObject")
    DokExt = fs.GetExtensionName(ArchivDokument.DateiPfad)
    Set fs = Nothing
    If DokExt = "RTF" Or DokExt = "DOC" Then
        Selection.InsertFile FileName:=ArchivDokument.DateiPfad
    Else
        Selection.InlineShapes.AddPicture FileName:=ArchivDokument.DateiPfad, _
            LinkToFile:=False, SaveWithDocument:=True
        Selection.TypeParagraph
        Selection.TypeText (ArchivDokument.Untersuchung)
        Selection.TypeParagraph
        Selection.TypeText (ArchivDokument.Befund)
    End If
    Selection.TypeParagraph
End Sub

Sub GrafischesDokument()
    Set DataAl = CreateObject(GetDataProgID())
    Dim ArchivDokumente As GrafischeDokumente
    Dim ArchivDokument As GrafischesDokument
    Set ArchivDokumente = DataAl.GrafischeDokumente
    'MsgBox (BesuchArchiv(Patientennummer))
    If ArchivDokumente.Open(BesuchArchiv(Patientennummer)) Then
        MsgBox ("Selektionsfehler")
    Else
        For Each ArchivDokument In ArchivDokumente
            Call InsertGrafic(ArchivDokument)
        Next
        ArchivDokumente.Close
    End If
    Set ArchivDokumente = Nothing
    Set DataAl = Nothing
End Sub

Sub GrafischeDokumenteAuswahl()
    Set DataAl = CreateObject(GetDataProgID())
    Dim ArchivDokumente As GrafischeDokumente
    Dim ArchivDokument As GrafischesDokument
    Set ArchivDokumente = DataAl.GrafischeDokumente
    If ArchivDokumente.Open(SelectionString) Then
        MsgBox ("Selektionsfehler")
    Else
        If ArchivDokumente.Count > 0 Then
            OldWindowState = Application.WindowState
            Application.WindowState = wdWindowStateMinimize
            ArchivDokumente.Select
            Application.WindowState = OldWindowState
        End If
        For Each ArchivDokument In ArchivDokumente
            Call InsertGrafic(ArchivDokument)
        Next
        ArchivDokumente.Close
    End If
    Set ArchivDokumente = Nothing
    Set DataAl = Nothing
End Sub

Sub Patient()
    Set DataAl = CreateObject(GetDataProgID())
    Dim Patient As Patient
    Set Patient = DataAl.Patient
    'Patient.Anrede = "hi"
    'MsgBox (Patient.Anrede)
    Patient.PatNr = Patientennummer()
    If (Patient.read() = 0) Then
       MsgBox ("Patient nicht gefunden")
    Else
       'MsgBox (Patient.BMI)
       'MsgBox (Patient.Alter)
       'MsgBox (Patient.kg)
       Application.Selection.TypeText (Patient.Titel + " " _
        + Patient.Vorname + " " + Patient.Name _
        + ", geb. " + Patient.Geburtsdatum)
       ' test
       'Application.Selection.TypeParagraph
       'If (Patient.kg = undefLong) Then
       '   Application.Selection.TypeText (Str(Patient.cm) + " undef " + Patient.BMI)
       'Else
       '   Application.Selection.TypeText (Str(Patient.cm) + " " + Str(Patient.kg) + "  " + Patient.BMI)
       'End If
       'Application.Selection.TypeParagraph
       'Patient.kg = undefLong
       'Application.Selection.TypeText (Str(Patient.cm) + " " + Str(Patient.kg) + "  " + Patient.BMI)
    End If
    Set Patient = Nothing
    Set DataAl = Nothing
End Sub

Sub Patienten()
    Set DataAl = CreateObject(GetDataProgID())
    Dim Pats As Patienten
    Set Pats = DataAl.Patienten
    If Pats.Open("Alter=8-9") Then
        MsgBox ("Selektionsfehler")
    Else
        MsgBox (Str(Pats.Count) + " Patienten gefunden")
        'For Each Befund In Befunde
        '    Application.Selection.TypeText (Befund.Text)
        '    Application.Selection.TypeParagraph
        'Next
        Pats.Close
    End If
    Set Pats = Nothing
    Set DataAl = Nothing
End Sub

Sub Praxis()
    Set DataAl = CreateObject(GetDataProgID())
    Dim Patient As Patient
    Set Patient = DataAl.Patient
    Application.Selection.TypeText (Patient.eval("Stempel:[ARZTSTEMPEL]"))
    Set Patient = Nothing
    Set DataAl = Nothing
End Sub

Sub Praxis1()
    Set DataAl = CreateObject(GetDataProgID())
    Dim Praxis As Praxis
    Set Praxis = DataAl.Praxis
    Praxis.Praxis = "Arztpraxis"
    If (Praxis.read() = 0) Then
        MsgBox ("Die Daten der eigenen Praxis wurden nicht gefunden.")
    Else
        With Application.Selection
            .TypeText (Praxis.Anrede)
            .TypeParagraph
            .TypeText (Praxis.fuer)
            .TypeParagraph
            .TypeText (Praxis.Strasse)
            .TypeParagraph
            .TypeText (Praxis.PLZ + " " + Praxis.Ort)
            .TypeParagraph
            .TypeText ("Tel.:" + Praxis.Telefon + ", Fax:" + Praxis.Fax)
            .TypeParagraph
            '.TypeText (Praxis.Bankverb)
            '.TypeParagraph
            '.TypeText ("Kto:" + Praxis.Kontonr + " BLZ:" + Praxis.BLZ)
            '.TypeParagraph
            .TypeText (Praxis.KVNummer)
        End With
    End If
    Set Praxis = Nothing
End Sub

Sub Testarc()
   MsgBox (Str(wdFormatRTF))
End Sub

Private Sub Schliessen()
        If System.PrivateProfileString("dataword.ini", "MacroSettings", _
                "Schliessen") = Str(True) Then
            If Options.PrintBackground = True Then
                Jobs = Application.BackgroundPrintingStatus
            Else
                Jobs = 0
            End If
            ActiveDocument.Close
            If Documents.Count = 0 And Jobs = 0 Then
                Application.Quit
            End If
        End If
End Sub

Private Sub SaveArchive(PatNummer As Long)
    OldWindowState = Application.WindowState
    Application.WindowState = wdWindowStateMinimize
    Dim ArcFormat As Long
    If System.PrivateProfileString("dataword.ini", "MacroSettings", _
        "ArchivformatDocument") = Str(True) Then
        ArcFormat = wdFormatDocument
    Else
        ArcFormat = wdFormatRTF
    End If
    ArcFile = DataAl.Archivieren(PatNummer, Application.Selection.Text, ArcFormat)
    Application.WindowState = OldWindowState
    If ArcFile <> "" Then
        ActiveDocument.SaveAs FileName:=ArcFile, FileFormat:=ArcFormat
        Schliessen
    Else
        MsgBox ("Dokument konnte nicht archiviert werden")
    End If
End Sub
        
Private Sub SaveArchivePdf(PatNummer As Long)
    OldWindowState = Application.WindowState
    Application.WindowState = wdWindowStateMinimize
    ArcFile = DataAl.eArztbrief(PatNummer, Application.Selection.Text, wdFormatPDF)
    If ArcFile <> "" Then
        ActiveDocument.ExportAsFixedFormat OutputFileName:=ArcFile, _
        ExportFormat:=wdExportFormatPDF, OpenAfterExport:=False, OptimizeFor:= _
        wdExportOptimizeForPrint, Range:=wdExportAllDocument, From:=1, To:=1, _
        Item:=wdExportDocumentContent, IncludeDocProps:=True, KeepIRM:=True, _
        CreateBookmarks:=wdExportCreateNoBookmarks, DocStructureTags:=True, _
        BitmapMissingFonts:=True, UseISO19005_1:=True
        Flag = DataAl.SendArztbrief(PatNummer, ArcFile)
    Else
        MsgBox ("Dokument konnte nicht archiviert werden")
    End If
    Application.WindowState = OldWindowState
    Schliessen
End Sub


Private Sub SaveArchivePdfx(PatNummer As Long)
        'ActiveDocument.SaveAs FileName:=ArcFile, FileFormat:=ArcFormat
        ActiveDocument.ExportAsFixedFormat OutputFileName:= _
        "C:\Users\hmoeller.DATA-AL.000\AppData\Local\Temp\Data-AL\NONAME.pdf", _
        ExportFormat:=wdExportFormatPDF, OpenAfterExport:=False, OptimizeFor:= _
        wdExportOptimizeForPrint, Range:=wdExportAllDocument, From:=1, To:=1, _
        Item:=wdExportDocumentContent, IncludeDocProps:=True, KeepIRM:=True, _
        CreateBookmarks:=wdExportCreateNoBookmarks, DocStructureTags:=True, _
        BitmapMissingFonts:=True, UseISO19005_1:=True

    OldWindowState = Application.WindowState
    Application.WindowState = wdWindowStateMinimize
    ArcFile = DataAl.DateiArchivieren(PatNummer, Application.Selection.Text, wdFormatPDF, "C:\Users\hmoeller.DATA-AL.000\AppData\Local\Temp\Data-AL\NONAME.pdf")
    Application.WindowState = OldWindowState
    If ArcFile <> "" Then
        If System.PrivateProfileString("dataword.ini", "MacroSettings", _
                "Schliessen") = Str(True) Then
            If Options.PrintBackground = True Then
                Jobs = Application.BackgroundPrintingStatus
            Else
                Jobs = 0
            End If
            ActiveDocument.Close
            If Documents.Count = 0 And Jobs = 0 Then
                Application.Quit
            End If
        End If
    Else
        MsgBox ("Dokument konnte nicht archiviert werden")
    End If
End Sub

Sub Archivieren()
    'Set DataAl = CreateObject("DataAL.Application")
    Set DataAl = CreateObject(GetDataProgID())
    SaveArchive (PatientNummer)
    Set DataAl = Nothing
End Sub

Sub ArchivierenPdf()
    Set DataAl = CreateObject(GetDataProgID())
    SaveArchivePdf (PatientNummer)
    Set DataAl = Nothing
End Sub

Sub Archivierenx()
    Set DataAl = CreateObject(GetDataProgID())
    SaveArchive (PatientNummer)
    Set DataAl = Nothing
End Sub

Sub DruckenArchivieren()
    Set DataAl = CreateObject(GetDataProgID())
    ActiveDocument.PrintOut Copies:=NumPrint(), Collate:=True, Background:=False
    SaveArchive (PatientNummer)
    Set DataAl = Nothing
End Sub

Sub Faelle()
    Set DataAl = CreateObject(GetDataProgID())
    Dim Faelle As Behandlungsfaelle
    Set Faelle = DataAl.Behandlungsfaelle
    If Faelle.Open("PatNr=" + Str(Patientennummer)) Then
        MsgBox ("Selektionsfehler")
    Else
        For Each Fall In Faelle
            Application.Selection.TypeText (Fall.FallNummer)
            Application.Selection.TypeParagraph
        Next
        Faelle.Close
    End If
    Set Faelle = Nothing
    Set DataAl = Nothing
End Sub

Sub FaelleAuswahl()
    Set DataAl = CreateObject(GetDataProgID())
    Dim Faelle As Behandlungsfaelle
    Set Faelle = DataAl.Behandlungsfaelle
    If Faelle.Open("PatNr=" + Str(Patientennummer)) Then
        MsgBox ("Selektionsfehler")
    Else
        If Faelle.Count > 0 Then
            OldWindowState = Application.WindowState
            Application.WindowState = wdWindowStateMinimize
            Faelle.Select
            Application.WindowState = OldWindowState
        End If
        For Each Fall In Faelle
            Application.Selection.TypeText (Fall.FallNummer)
            Application.Selection.TypeParagraph
        Next
        Faelle.Close
    End If
    Set Faelle = Nothing
    Set DataAl = Nothing
End Sub

Sub LeistungenEBM()
    Set DataAl = CreateObject(GetDataProgID())
    Dim Leistungen As LeistungenEBM
    Set Leistungen = DataAl.LeistungenEBM
    If Leistungen.Open("") Then
        MsgBox ("Selektionsfehler")
    Else
        For Each Leistung In Leistungen
            Application.Selection.TypeText (Leistung.GOZiff)
            Application.Selection.TypeParagraph
        Next
        Leistungen.Close
    End If
    Set Leistungen = Nothing
    Set DataAl = Nothing
End Sub

Sub LeistungenEBMAuswahl()
    Set DataAl = CreateObject(GetDataProgID())
    Dim Leistungen As LeistungenEBM
    Set Leistungen = DataAl.LeistungenEBM
    If Leistungen.Open("") Then
        MsgBox ("Selektionsfehler")
    Else
        If Leistungen.Count > 0 Then
            OldWindowState = Application.WindowState
            Application.WindowState = wdWindowStateMinimize
            Leistungen.Select
            Application.WindowState = OldWindowState
        End If
        For Each Leistung In Leistungen
            Application.Selection.TypeText (Leistung.GOZiff)
            Application.Selection.TypeParagraph
        Next
        Leistungen.Close
    End If
    Set Leistungen = Nothing
    Set DataAl = Nothing
End Sub

Sub ErbrachteLeistungenEBMAuswahl()
    Set DataAl = CreateObject(GetDataProgID())
    Dim Leistungen As ErbrachteLeistungenEBM
    Set Leistungen = DataAl.ErbrachteLeistungenEBM
    If Leistungen.Open(BesuchSelection(Patientennummer)) Then
        MsgBox ("Selektionsfehler")
    Else
        If Leistungen.Count > 0 Then
            OldWindowState = Application.WindowState
            Application.WindowState = wdWindowStateMinimize
            Leistungen.Select
            Application.WindowState = OldWindowState
        End If
        For Each Leistung In Leistungen
            Application.Selection.TypeText (Leistung.Leist)
            Application.Selection.TypeParagraph
        Next
        Leistungen.Close
    End If
    Set Leistungen = Nothing
    Set DataAl = Nothing
End Sub

Sub ErbrachteLeistungenGOAEAuswahl()
    Set DataAl = CreateObject(GetDataProgID())
    Dim Leistungen As ErbrachteLeistungenGOAE
    Set Leistungen = DataAl.ErbrachteLeistungenGOAE
    If Leistungen.Open("") Then
        MsgBox ("Selektionsfehler")
    Else
        If Leistungen.Count > 0 Then
            OldWindowState = Application.WindowState
            Application.WindowState = wdWindowStateMinimize
            Leistungen.Select
            Application.WindowState = OldWindowState
        End If
        For Each Leistung In Leistungen
            Application.Selection.TypeText (Leistung.Leist)
            Application.Selection.TypeParagraph
        Next
        Leistungen.Close
    End If
    Set Leistungen = Nothing
    Set DataAl = Nothing
End Sub

Sub RegelwerksdatenEBM()
    Set DataAl = CreateObject(GetDataProgID())
    Dim Regelwerksdaten As RegelwerksdatenEBM
    Set Regelwerksdaten = DataAl.RegelwerksdatenEBM
    If Regelwerksdaten.Open("") Then
        MsgBox ("Selektionsfehler")
    Else
        For Each Regelwerk In Regelwerksdaten
            Application.Selection.TypeText (Regelwerk.GOZiffer)
            Application.Selection.TypeParagraph
        Next
        Regelwerksdaten.Close
    End If
    Set Regelwerksdaten = Nothing
    Set DataAl = Nothing
End Sub

Sub RegelwerksdatenEBMAuswahl()
    Set DataAl = CreateObject(GetDataProgID())
    Dim Regelwerksdaten As RegelwerksdatenEBM
    Set Regelwerksdaten = DataAl.RegelwerksdatenEBM
    If Regelwerksdaten.Open("") Then
        MsgBox ("Selektionsfehler")
    Else
        If Regelwerksdaten.Count > 0 Then
            OldWindowState = Application.WindowState
            Application.WindowState = wdWindowStateMinimize
            Regelwerksdaten.Select
            Application.WindowState = OldWindowState
        End If
        For Each Regelwerk In Regelwerksdaten
            Application.Selection.TypeText (Regelwerk.GOZiffer)
            Application.Selection.TypeParagraph
        Next
        Regelwerksdaten.Close
    End If
    Set Regelwerksdaten = Nothing
    Set DataAl = Nothing
End Sub

Sub Krankenkassen()
    Set DataAl = CreateObject(GetDataProgID())
    Dim Kassen As Krankenkassen
    Dim Kasse As Krankenkasse
    Set Kassen = DataAl.Krankenkassen
    If Kassen.Open("") Then
        MsgBox ("Selektionsfehler")
    Else
        For Each Kasse In Kassen
            Application.Selection.TypeText (Kasse.Name)
            Application.Selection.TypeParagraph
        Next
        Kassen.Close
    End If
    Set Kassen = Nothing
    Set DataAl = Nothing
End Sub

Sub KrankenkassenAuswahl()
    Set DataAl = CreateObject(GetDataProgID())
    Dim Kassen As Krankenkassen
    Set Kassen = DataAl.Krankenkassen
    If Kassen.Open("") Then
        MsgBox ("Selektionsfehler")
    Else
        If Kassen.Count > 0 Then
            OldWindowState = Application.WindowState
            Application.WindowState = wdWindowStateMinimize
            Kassen.Select
            Application.WindowState = OldWindowState
        End If
        For Each Kasse In Kassen
            Application.Selection.TypeText (Kasse.Name)
            Application.Selection.TypeParagraph
        Next
        Kassen.Close
    End If
    Set Kassen = Nothing
    Set DataAl = Nothing
End Sub

Sub Rechnungen()
    Set DataAl = CreateObject(GetDataProgID())
    Dim Rechnungsliste As Rechnungen
    Set Rechnungsliste = DataAl.Rechnungen
    If Rechnungsliste.Open("PatNr=" + Str(Patientennummer)) Then
        MsgBox ("Selektionsfehler")
    Else
        For Each Rechnung In Rechnungsliste
            RechnungsText = Str(Rechnung.Rechnungsnr) + Rechnung.Krankenkasse
            If Rechnung.Betrag <> undefLong Then
                Application.Selection.TypeText (RechnungsText + " Betrag:" + Str(Rechnung.Betrag / 100))
            Else
                Application.Selection.TypeText (RechnungsText)
            End If
            Application.Selection.TypeParagraph
        Next
        Rechnungsliste.Close
    End If
    Set Rechnungsliste = Nothing
    Set DataAl = Nothing
End Sub

Sub RechnungsAuswahl()
    Set DataAl = CreateObject(GetDataProgID())
    Dim Rechnungsliste As Rechnungen
    Set Rechnungsliste = DataAl.Rechnungen
    If Rechnungsliste.Open("PatNr=" + Str(Patientennummer)) Then
        MsgBox ("Selektionsfehler")
    Else
        If Rechnungsliste.Count > 0 Then
            OldWindowState = Application.WindowState
            Application.WindowState = wdWindowStateMinimize
            Rechnungsliste.Select
            Application.WindowState = OldWindowState
        End If
        For Each Rechnung In Rechnungsliste
            RechnungsText = Str(Rechnung.Rechnungsnr) + Rechnung.Krankenkasse
            If Rechnung.Betrag <> undefLong Then
                Application.Selection.TypeText (RechnungsText + " Betrag:" + Str(Rechnung.Betrag / 100))
            Else
                Application.Selection.TypeText (RechnungsText)
            End If
            Application.Selection.TypeParagraph
        Next
        Rechnungsliste.Close
    End If
    Set Rechnungsliste = Nothing
    Set DataAl = Nothing
End Sub

Function HMVVotext(Anzahl As Integer, Heilmittel As String, AnzahlWoche As String) As String
    If Anzahl <> undefInteger Then
       HMVVotext = Str(Anzahl) + vbTab + Heilmittel
    Else
       HMVVotext = vbTab + Heilmittel
    End If
    If AnzahlWoche <> "" Then
        HMVVotext = HMVVotext + vbTab + AnzahlWoche
    End If
End Function

Sub TypeHMV13(HMV As Heilmittelverordnung13)
    Application.Selection.TypeText (HMV.Datum + vbTab)
    Application.Selection.TypeText (HMV.Indikationsschluessel)
    Application.Selection.TypeText (HMVVotext(HMV.Anzahl1Heilmittel, HMV.Heilmittel1, HMV.AnzahlWoche1Heilmittel))
    Application.Selection.TypeParagraph
    If HMV.Heilmittel2 <> "" Then
        Application.Selection.TypeText (vbTab)
        Application.Selection.TypeText (HMVVotext(HMV.Anzahl2Heilmittel, HMV.Heilmittel2, HMV.AnzahlWoche2Heilmittel))
        Application.Selection.TypeParagraph
    End If
End Sub

Sub Heilmittelverordnungen13()
    Dim HMV As Heilmittelverordnung13
    Set DataAl = CreateObject(GetDataProgID())
    Dim HMVen As Heilmittelverordnungen13
    Set HMVen = DataAl.Heilmittelverordnungen13
    If HMVen.Open("PatNr=" + Str(Patientennummer)) Then
        MsgBox ("Selektionsfehler")
    Else
        For Each HMV In HMVen
            Call TypeHMV13(HMV)
        Next
        HMVen.Close
    End If
    Set HMVen = Nothing
    Set DataAl = Nothing
End Sub

Sub Heilmittelverordnung13Auswahl()
    Dim HMV As Heilmittelverordnung13
    Set DataAl = CreateObject(GetDataProgID())
    Dim HMVen As Heilmittelverordnungen13
    Set HMVen = DataAl.Heilmittelverordnungen13
    If HMVen.Open("PatNr=" + Str(Patientennummer)) Then
        MsgBox ("Selektionsfehler")
    Else
        If HMVen.Count > 0 Then
            OldWindowState = Application.WindowState
            Application.WindowState = wdWindowStateMinimize
            HMVen.Select
            Application.WindowState = OldWindowState
        End If
        For Each HMV In HMVen
            Call TypeHMV13(HMV)
        Next
        HMVen.Close
    End If
    Set HMVen = Nothing
    Set DataAl = Nothing
End Sub

Sub TypeHMV14(HMV As Heilmittelverordnung14)
    Application.Selection.TypeText (HMV.Datum + vbTab + HMV.Patientenname)
    Application.Selection.TypeParagraph
End Sub

Sub Heilmittelverordnungen14()
    Dim HMV As Heilmittelverordnung14
    Set DataAl = CreateObject(GetDataProgID())
    Dim HMVen As Heilmittelverordnungen14
    Set HMVen = DataAl.Heilmittelverordnungen14
    If HMVen.Open("PatNr=" + Str(Patientennummer)) Then
        MsgBox ("Selektionsfehler")
    Else
        For Each HMV In HMVen
            Call TypeHMV14(HMV)
        Next
        HMVen.Close
    End If
    Set HMVen = Nothing
    Set DataAl = Nothing
End Sub

Sub Heilmittelverordnung14Auswahl()
    Dim HMV As Heilmittelverordnung14
    Set DataAl = CreateObject(GetDataProgID())
    Dim HMVen As Heilmittelverordnungen14
    Set HMVen = DataAl.Heilmittelverordnungen14
    If HMVen.Open("PatNr=" + Str(Patientennummer)) Then
        MsgBox ("Selektionsfehler")
    Else
        If HMVen.Count > 0 Then
            OldWindowState = Application.WindowState
            Application.WindowState = wdWindowStateMinimize
            HMVen.Select
            Application.WindowState = OldWindowState
        End If
        For Each HMV In HMVen
            Call TypeHMV14(HMV)
        Next
        HMVen.Close
    End If
    Set HMVen = Nothing
    Set DataAl = Nothing
End Sub

Sub TypeHMV18(HMV As Heilmittelverordnung18)
    Application.Selection.TypeText (HMV.Datum + vbTab)
    Application.Selection.TypeText (HMV.Indikationsschluessel)
    Application.Selection.TypeText (HMVVotext(HMV.Anzahl1Heilmittel, HMV.Heilmittel1, HMV.AnzahlWoche1Heilmittel))
    Application.Selection.TypeParagraph
    If HMV.Heilmittel2 <> "" Then
        Application.Selection.TypeText (vbTab)
        Application.Selection.TypeText (HMVVotext(HMV.Anzahl2Heilmittel, HMV.Heilmittel2, HMV.AnzahlWoche2Heilmittel))
        Application.Selection.TypeParagraph
    End If
End Sub

Sub Heilmittelverordnungen18()
    Dim HMV As Heilmittelverordnung18
    Set DataAl = CreateObject(GetDataProgID())
    Dim HMVen As Heilmittelverordnungen18
    Set HMVen = DataAl.Heilmittelverordnungen18
    If HMVen.Open("PatNr=" + Str(Patientennummer)) Then
        MsgBox ("Selektionsfehler")
    Else
        For Each HMV In HMVen
            Call TypeHMV18(HMV)
        Next
        HMVen.Close
    End If
    Set HMVen = Nothing
    Set DataAl = Nothing
End Sub

Sub Heilmittelverordnung18Auswahl()
    Dim HMV As Heilmittelverordnung18
    Set DataAl = CreateObject(GetDataProgID())
    Dim HMVen As Heilmittelverordnungen18
    Set HMVen = DataAl.Heilmittelverordnungen18
    If HMVen.Open("PatNr=" + Str(Patientennummer)) Then
        MsgBox ("Selektionsfehler")
    Else
        If HMVen.Count > 0 Then
            OldWindowState = Application.WindowState
            Application.WindowState = wdWindowStateMinimize
            HMVen.Select
            Application.WindowState = OldWindowState
        End If
        For Each HMV In HMVen
            Call TypeHMV18(HMV)
        Next
        HMVen.Close
    End If
    Set HMVen = Nothing
    Set DataAl = Nothing
End Sub

Sub HMV13Statistik()
    Set DataAl = CreateObject(GetDataProgID())
    Dim HMVen As Heilmittelverordnungen13
    Dim Summe As Long
    Set HMVen = DataAl.Heilmittelverordnungen13
    If HMVen.Open("") Then
        MsgBox ("Selektionsfehler")
    Else
        For Each HMV In HMVen
            HMVText = "hmv:" + Str(HMV.PatNr) + HMV.Patientenname
            Application.Selection.TypeText (HMVText)
            Application.Selection.TypeParagraph
            'MsgBox (HMV.Preis1Heilmittel)
            If HMV.Preis1Heilmittel <> undefLong Then
                Summe = Summe + HMV.Preis1Heilmittel
            End If
            If HMV.Preis2Heilmittel <> undefLong Then
                Summe = Summe + HMV.Preis2Heilmittel
            End If
        Next
        Application.Selection.TypeText ("Gesamtbetrag Heilmittel:" + FormatCurrency(Summe / 100))
        Application.Selection.TypeParagraph
        HMVen.Close
    End If
    Set HMVen = Nothing
    Set DataAl = Nothing
End Sub

Sub DataALInfo()
    Set DataAl = CreateObject(GetDataProgID())
    MsgBox DataAl.Version
    MsgBox DataAl.Programmpfad
    MsgBox DataAl.DMPLizenz
    Set DataAl = Nothing
End Sub

Attribute VB_Name = "ThisDocument"
Attribute VB_Base = "0{00020906-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "UserForm1"
Attribute VB_Base = "0{036F1ED1-E03F-4F85-B259-705213777744}{AD3AE315-4D4E-4A58-BA53-EB03CCC2C50D}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False

Private Sub CancelButton_Click()
    Unload UserForm1
End Sub

Private Sub CommandAdressfeld_Click()
    Adresseeinfuegen
End Sub

Private Sub CommandNachrichtlich_Click()
    Nachrichtlicheinfuegen
End Sub

Private Sub CommandButton1_Click()
    If IsNumeric(TextBox1.Text) Then
        System.PrivateProfileString("dataword.ini", "MacroSettings", _
            "DruckExemplare") = TextBox1.Text
        System.PrivateProfileString("dataword.ini", "MacroSettings", _
            "nichtdrucken") = Str(nichtdrucken.Value)
        System.PrivateProfileString("dataword.ini", "MacroSettings", _
            "Archivieren") = Str(sofortarchivieren.Value)
        System.PrivateProfileString("dataword.ini", "MacroSettings", _
            "Schliessen") = Str(fensterschliessen.Value)
         System.PrivateProfileString("dataword.ini", "MacroSettings", _
            "ArchivformatDocument") = Str(ArchivformatDocument.Value)
       Unload UserForm1
    Else
        MsgBox ("Bitte eine Zahl eingeben")
        TextBox1.SetFocus
    End If
End Sub

Private Sub UserForm_Activate()
    TextBox1.Text = System.PrivateProfileString("dataword.ini", "MacroSettings", _
            "DruckExemplare")
    If System.PrivateProfileString("dataword.ini", "MacroSettings", _
            "nichtdrucken") = Str(True) Then
        nichtdrucken.Value = True
    End If
    If System.PrivateProfileString("dataword.ini", "MacroSettings", _
            "Archivieren") = Str(True) Then
        sofortarchivieren.Value = True
    End If
    If System.PrivateProfileString("dataword.ini", "MacroSettings", _
            "Schliessen") = Str(True) Then
        fensterschliessen.Value = True
    End If
    If System.PrivateProfileString("dataword.ini", "MacroSettings", _
            "ArchivformatDocument") = Str(True) Then
        ArchivformatDocument.Value = True
    End If
End Sub

Private Sub TextBox1_Change()
    'If Not IsNumeric(TextBox1.Text) Then
    '    MsgBox ("Bitte eine Zahl eingeben--change")
    'End If
End Sub


' InQuest injected base64 decoded content
' z'!zr
' +mz[
' +mz[
' +mz[
' +mz[

INQUEST-PP=macro
