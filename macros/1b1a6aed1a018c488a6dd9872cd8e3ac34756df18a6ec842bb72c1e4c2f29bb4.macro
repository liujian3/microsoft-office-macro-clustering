Attribute VB_Name = "Markenfilter"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Private Sub Worksheet_BeforeDoubleClick(ByVal Target As Range, cancel As Boolean)
    If Target.Cells.Count = 1 Then
        Call Worksheet_BeforeRightClick(Target, cancel)
    End If
End Sub
Private Sub Worksheet_SelectionChange(ByVal Target As Range)
    If Target.Cells.Count > 1 Then
        Call Worksheet_BeforeRightClick(Target, False)
    End If
End Sub

Private Sub Worksheet_BeforeRightClick(ByVal Target As Range, cancel As Boolean)
    Dim beginning As Long
        beginning = Target.Row
    Dim ending As Long
        ending = beginning + Target.Count - 1
    
    If ((Target.Column = 4) And Target.Row > 1) Then
        If Target.Cells.Count = 1 Then
        If Not Intersect(Target, Range("D2", "D" & Markenfilter.UsedRange.Rows.Count)) Is Nothing Then
            If Target = "a" Then
                Target.ClearContents
            Else
                Target = "a"
            End If
        End If
        End If
        If ((Target.FormulaArray = "a")) Then
            Unprotect Password:="TD-Landwehr"
            With Markenfilter.Range("A" & beginning, "C" & ending)
                .Font.Bold = True
                .Font.color = colors.blue
            End With
            With Markenfilter.Range("D" & beginning, "D" & ending)
                .Font.Bold = True
                .Font.color = colors.white
                .Interior.color = colors.orange
            End With
            Protect Password:="TD-Landwehr"
        Else
            Unprotect Password:="TD-Landwehr"
            With Markenfilter.Range("A" & beginning, "D" & ending)
                .Font.Bold = False
                .Font.color = colors.black
                .Interior.color = colors.white
            End With
            Protect Password:="TD-Landwehr"
        End If
    End If
    cancel = True
End Sub

Friend Function SA101(isSingleExport As Boolean) As Boolean
    ProgressForm.Caption = "Processing SA101 (Brands). Please wait..."
    Dim intro As String
        intro = "9999101"
    
    Dim mandator As Variant
        mandator = Split(Workbook.GetMandator(), ",")
    
    If mandator(0) = "0" Then
        Exit Function
    End If
    
    Dim brands As Collection
    Set brands = Workbook.fillCollection(1)
    
    If brands.Count = 0 Then
        Exit Function
    End If
    
    Dim myFile
        myFile = ActiveWorkbook.Path & "\Brands_" & mandator(0) & Format(Now, "_yyyymmdd") & ".SA101"
    
    fnum = FreeFile()
    
    Dim onePercent As Long
        onePercent = brands.Count / 100
    Dim usedPercent As Integer
        usedPercent = 0
    Dim counter As Integer
        counter = 0
    
    Call ProgressForm.start(3, "101")
    Open myFile For Output As fnum
        For i = 1 To brands.Count
            counter = counter + 1
            If (counter = onePercent) Then
                usedPercent = usedPercent + 1
                Call ProgressForm.refresh(usedPercent)
                counter = 0
            End If
            
            Print #fnum, intro & mandator(1) & Workbook.GetBrand(brands.Item(i))
        Next i
    Close #fnum
    ProgressForm.stopit
    SA101 = True
End Function

Friend Function SAXXX(isSingleExport As Boolean) As Boolean ' Unusable in this case
    ProgressForm.Caption = "Processing SAXXX (Categories). Please wait..."
    Dim intro As String
        intro = "9999XXX"
    
    Dim mandator As Variant
        mandator = Split(Workbook.GetMandator(), ",")
    
    If mandator(0) = "0" Then
        Exit Function
    End If
    
    Dim categories As Collection
    Set categories = Workbook.fillCollection(2)
    
    If categories.Count = 0 Then
        Exit Function
    End If
    
    Dim myFile
        myFile = ActiveWorkbook.Path & "\Categories_" & mandator(0) & Format(Now, "_yyyymmdd") & ".SAXXX"
    
    fnum = FreeFile()
    
    Dim onePercent As Long
        onePercent = categories.Count / 100
    Dim usedPercent As Integer
        usedPercent = 0
    Dim counter As Integer
        counter = 0
    
    Call ProgressForm.start(4, "XXX")
    Open myFile For Output As fnum
        For i = 1 To categories.Count
            counter = counter + 1
            If (counter = onePercent) Then
                usedPercent = usedPercent + 1
                Call ProgressForm.refresh(usedPercent)
                counter = 0
            End If
            
            Print #fnum, intro & mandator(1) & categories.Item(i) & 9999
        Next i
    Close #fnum
    ProgressForm.stopit
    SAXXX = True
End Function






Attribute VB_Name = "ProgressForm"
Attribute VB_Base = "0{88C831FC-86CB-4527-A461-AF6FBF18A898}{97A45F66-5923-4261-9148-FBCAA829BAFC}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Private Sub UserForm_Activate()
    ProgressForm.InfoLabel.Caption = "Done"
    ProgressForm.ProgressLabel.Width = 220
End Sub

Friend Sub firstRun(percent As Integer)
    setupForm
    If percent <= 0 Then
        ProgressForm.InfoLabel.Caption = "Preparing sheets for the first run."
        ProgressForm.ProgressLabel.Width = 0
        
        ProgressForm.Left = Application.Width / 2 - Me.Width / 2
        ProgressForm.Top = Application.Height / 2 - Me.Height / 2

        ProgressForm.Repaint
        ProgressForm.Show (vbModeless)
    Else
        ProgressForm.ProgressLabel.Width = percent
        ProgressForm.Repaint
    End If
    
End Sub

Friend Sub start(step As Integer, sa As String)
'1 = processing brands
'2 = validate processing
'3 = generating SA101
'4 = generating SAXXX


    setupForm
    Select Case (sa)
    Case "101"
        ProgressForm.Caption = "Processing SA101 (Brands). Please wait..."
    Case "XXX"
        ProgressForm.Caption = "Processing SAXXX (Categories). Please wait..."
    End Select
    
    Select Case (step)
    Case 1
        ProgressForm.InfoLabel.Caption = "Selection processing: brands"
    Case 2
        ProgressForm.InfoLabel.Caption = "Selection processing: validation"
    Case 3
        ProgressForm.InfoLabel.Caption = "Generating SA101"
    Case 4
        ProgressForm.InfoLabel.Caption = "Generating SAXXX"
    End Select
    
    ProgressForm.Left = Application.Width / 2 - Me.Width / 2
    ProgressForm.Top = Application.Height / 2 - Me.Height / 2

    ProgressForm.Show (vbModeless)
    Call refresh(0)
End Sub

Friend Sub refresh(percent As Integer)
    ProgressForm.ProgressLabel.Width = 220 / 100 * percent
    ProgressForm.Repaint
End Sub

Friend Sub stopit()
    Application.Wait Now + TimeSerial(0, 0, 2)
    Unload ProgressForm
End Sub

Friend Sub abort()
    Unload ProgressForm
End Sub

Private Sub setupForm()
    ProgressForm.BackColor = colors.blue
    ProgressForm.BorderColor = colors.white
    
    ProgressLabel.BackColor = colors.orange
    ProgressLabel.BorderColor = ProgressForm.BorderColor
    
    ProgressFrame.BackColor = colors.grey
    
    InfoLabel.BackColor = ProgressForm.BackColor
    InfoLabel.ForeColor = colors.white
End Sub

Attribute VB_Name = "Workbook"
Attribute VB_Base = "0{00020819-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Option Explicit

Public Enum colors
'   TecDoc Standard-Farben
    orange = 3368703
    blue = 13395507
    black = 0
    grey = 10789538
    white = 16777215
End Enum

Private Sub Workbook_Open()
    Markenfilter.Select
    If Not (Range("A1").Interior.color = colors.blue) And (Range("A1").Font.color = colors.black) Then
        ProgressForm.firstRun (0)
        processing (True)
        setupSheets
        remarkEntries
        processing (False)
    End If
    
'    MsgBox "Please give the brands you want one of the following categories:" & Chr(10) & Chr(10) _
        & " A - Primary brand" & Chr(10) _
        & " B - Secondary brand" & Chr(10) & Chr(10) _
        & "After selecting the brands you can choose the belonging " & Chr(10) _
        & "articles within the Articles-Sheet.", vbInformation, "User's guide"

'        & " C - For later purpose" & Chr(10) _
'        & " X - For categoryless" & Chr(10) & Chr(10)
End Sub

' Generierungsprozess f|fffd|r
Private Sub Generate_All_SA()
    Dim mandator As Variant
        mandator = Split(GetMandator(), ",")
    
    If mandator(0) = "0" Then
        Exit Sub
    End If
    
    If fillCollection(1).Count <= 0 Then
        MsgBox "No brands selected!", vbCritical, "Generate all SA"
        Markenfilter.Select
        Exit Sub
    End If
       
    Dim response
    
    response = MsgBox("Would you like to collect the available data for SA-Types?", vbYesNo + vbQuestion, "Generate all SA")
    If response = vbYes Then
        Dim brands As Boolean
        Dim categories As Boolean
        
        brands = Markenfilter.SA101(False)          'Brands
        'categories = Markenfilter.SAXXX(False)      'Categories
                
        response = MsgBox("Overview:" & Chr(10) & Chr(10) _
            & "Brands = " & brands & Chr(10) _
            & "Categories = " & categories & Chr(10), vbOKOnly, "Result of SA creation")

    End If
End Sub

Public Sub Generate_SA101()
    Dim response
    Dim mandator As Variant
        mandator = Split(GetMandator(), ",")
    
    If mandator(0) = "0" Then
        Exit Sub
    End If
     
    response = MsgBox("Would you like to collect the available data for SA101?", vbYesNo + vbQuestion, "Generate SA101")
    If response = vbYes Then
        Markenfilter.SA101 (True)
    End If
    
End Sub

' Kategorisierung, falls sp|fffd|ter ben|fffd|tigt:
Private Sub Generate_SAXXX()
    Dim response
    Dim mandator As Variant
        mandator = Split(GetMandator(), ",")

    If mandator(0) = "0" Then
        Exit Sub
    End If

    response = MsgBox("Would you like to collect the available data for SAXXX?", vbYesNo + vbQuestion, "Generate SAXXX")
    If response = vbYes Then
        Markenfilter.SAXXX (True)
    End If
End Sub

Friend Function GetMandator() As String

    Dim mand_id As Long
        mand_id = Markenfilter.Range("E2")
        
    Dim mandator As String
        
    If mand_id = 0 Then
        MsgBox "No Provider ID given (or is 0) !" & Chr(10) _
        & "Operation canceled.", vbCritical, "Provider ID"
        mandator = "0"
    Else
        mandator = "00000"
        mandator = mandator & mand_id
        mandator = Right(mandator, 5)
        mandator = mand_id & "," & mandator
    End If
    
    GetMandator = mandator

End Function

Friend Function GetBrand(br_id As Long) As String
    Dim br As String
    br = "0000"
    br = br & br_id
    GetBrand = Right(br, 4)
End Function

Friend Function GetSort(sort_nr As Long) As String
    Dim sort As String
    sort = "0000"
    sort = sort & sort_nr
    GetSort = Right(sort, 4)
End Function

Function fillCollection(sheet As Long) As Collection
' sheet = 1 => Marken
' sheet = 2 => Marken + Kategorien
' sheet = 3 => Marken ohne "Kategorielos"
    
    Dim i As Long
    Dim activeRow As Long
    
    Dim result As Collection
    Set result = New Collection

    If sheet = 1 Then
        For i = 2 To Markenfilter.UsedRange.Rows.Count
            If (Markenfilter.Range("D" & i).Value = "a") Then
                result.Add Markenfilter.Range("A" & i).Value, Markenfilter.Range("A" & i).Value & ""
            End If
        Next i
    
    ElseIf sheet = 2 Then
        For i = 2 To Markenfilter.UsedRange.Rows.Count
            If (Markenfilter.Range("D" & i).Value = "a") Then
                result.Add GetBrand(Markenfilter.Range("A" & i).Value) & (Markenfilter.Range("D" & i).Value), Markenfilter.Range("A" & i).Value & ""
            End If
        Next i
    
    ElseIf sheet = 3 Then
        For i = 2 To Markenfilter.UsedRange.Rows.Count
            If (Markenfilter.Range("D" & i).Value = "a") Then
                result.Add Markenfilter.Range("A" & i).Value, Markenfilter.Range("A" & i).Value & ""
            End If
        Next i
    End If
    Set fillCollection = result
End Function

Public Sub processing(activated As Boolean)
    If (activated And Application.ScreenUpdating) Then
        Application.StatusBar = "Please wait while the processing is going on..."
        Application.Cursor = xlWait
        'Application.EnableEvents = False
        ActiveWorkbook.PrecisionAsDisplayed = False
        Application.ScreenUpdating = False
    Else
        If Not (activated) Then
            If Not (Application.ScreenUpdating) Then
                Application.StatusBar = False
                Application.ScreenUpdating = True
                ActiveWorkbook.PrecisionAsDisplayed = True
                'Application.EnableEvents = True
                Application.Cursor = xlDefault
            End If
        End If
    End If
End Sub

Public Function IsInCollection(ByRef col As Collection, ByRef elem As String) As Boolean
  On Error Resume Next
    If IsEmpty(col(elem)) Then: 'DoNothing
    IsInCollection = (Err.Number = 0)
  On Error GoTo 0
End Function

Private Sub setupSheets()
    Const addWidth = 3

'   Marken
    Markenfilter.Unprotect Password:="TD-Landwehr"
'    Markenfilter.Columns("A:C").EntireColumn.AutoFit
    
    Dim col As Range
    With Markenfilter.UsedRange
        .Columns.AutoFit
        .HorizontalAlignment = xlCenter
        'increase each column's width by addWidth
        For Each col In .Columns
            col.ColumnWidth = col.ColumnWidth + addWidth
        Next col
    End With
    
    With Markenfilter.Range("A2", "D" & Markenfilter.UsedRange.Rows.Count)
        .Interior.color = colors.white
        .Borders.color = colors.black
        .Borders(xlEdgeLeft).Weight = xlThick
        .Borders(xlEdgeLeft).LineStyle = xlContinuous
        .Borders(xlEdgeRight).Weight = xlThick
        .Borders(xlEdgeRight).LineStyle = xlContinuous
        .Borders(xlInsideVertical).Weight = xlThick
        .Borders(xlInsideVertical).LineStyle = xlContinuous
        .Borders(xlInsideHorizontal).Weight = xlThin
        '.Borders(xlInsideHorizontal).LineStyle = xlContinuous
        .Borders(xlEdgeBottom).Weight = xlThick
        .Borders(xlEdgeBottom).LineStyle = xlContinuous
    End With
    
    With Markenfilter.Range("A1", "D1")
        .Interior.color = colors.blue
        .Font.Bold = True
        .Font.color = colors.white
        .Borders.color = colors.black
        .Borders(xlEdgeTop).Weight = xlThick
        .Borders(xlEdgeTop).LineStyle = xlContinuous
        .Borders(xlEdgeLeft).Weight = xlThick
        .Borders(xlEdgeLeft).LineStyle = xlContinuous
        .Borders(xlEdgeRight).Weight = xlThick
        .Borders(xlEdgeRight).LineStyle = xlContinuous
        .Borders(xlInsideVertical).Weight = xlThick
        .Borders(xlInsideVertical).LineStyle = xlContinuous
        .Borders(xlEdgeBottom).Weight = xlThick
        .Borders(xlEdgeBottom).LineStyle = xlContinuous
    End With
        
'    With Markenfilter.Range("C2", "C" & Markenfilter.UsedRange.Rows.count)
'        .Borders(xlInsideHorizontal).Weight = xlThin
'        .Borders(xlInsideHorizontal).LineStyle = xlContinuous
'    End With
    
    With Markenfilter.Range("D1")
        .Interior.color = colors.orange
    End With
    
    With Markenfilter.Range("D2", "D" & Markenfilter.UsedRange.Rows.Count)
        .Font.Name = "Marlett"
    End With
    
    With Markenfilter.Range("E1", "E2")
        .Interior.color = colors.grey
        .Font.Bold = True
        .Font.color = colors.white
        .Borders(xlEdgeTop).Weight = xlThick
        .Borders(xlEdgeTop).LineStyle = xlContinuous
        .Borders(xlEdgeLeft).Weight = xlThick
        .Borders(xlEdgeLeft).LineStyle = xlContinuous
        .Borders(xlEdgeRight).Weight = xlThick
        .Borders(xlEdgeRight).LineStyle = xlContinuous
        .Borders(xlInsideHorizontal).Weight = xlThick
        .Borders(xlInsideHorizontal).LineStyle = xlContinuous
        .Borders(xlEdgeBottom).Weight = xlThick
        .Borders(xlEdgeBottom).LineStyle = xlContinuous
    End With
    
    Markenfilter.Columns("C").Hidden = True
    
    Markenfilter.Protect Password:="TD-Landwehr"
    Markenfilter.EnableSelection = xlNoRestrictions
    ProgressForm.firstRun (33)
    
End Sub

Private Sub remarkEntries()
    ProgressForm.firstRun (66)
    Markenfilter.Unprotect Password:="TD-Landwehr"
    Markenfilter.Range("D2", "D" & Markenfilter.UsedRange.Rows.Count - 1).Locked = False
    Markenfilter.Range("E2").Locked = False
    
    Dim i As Long
    For i = 2 To Markenfilter.UsedRange.Rows.Count
        If (Markenfilter.Range("D" & i).Value = "X") Then
            Markenfilter.Range("D" & i).Value = "a"
        End If
        If (Markenfilter.Range("D" & i).Value = "a") Then
            With Markenfilter.Range("A" & i, "D" & i)
                .Font.color = colors.blue
                .Font.Bold = True
            End With
            With Markenfilter.Range("D" & i)
                .Interior.color = colors.orange
                .Font.color = colors.white
            End With
        End If
    Next i
    Markenfilter.Protect Password:="TD-Landwehr"
    Markenfilter.EnableSelection = xlNoRestrictions
    ProgressForm.stopit
End Sub

Public Sub Generate_Sales_Report()
    Dim CalcMode As Long
    Dim ViewMode As Long
    Dim sheetName As String
        sheetName = "Selected_Brands"
        
    Dim brands As Collection
    Set brands = Workbook.fillCollection(2) 'Marken + Kategorielos (X)
    
    If (brands.Count = 0) Then
        MsgBox "No brands selected!", vbCritical, "Sales Report"
        Markenfilter.Select
    Else
        Dim position As Integer
            position = sheetPosition(sheetName)
        If (position > -1) Then
            Application.DisplayAlerts = False
            Worksheets(position).Delete
            Application.DisplayAlerts = True
        End If
        
        With Application
            .ScreenUpdating = False
        End With
        
        Markenfilter.Cells.Copy
        ThisWorkbook.Sheets.Add AFTER:=Worksheets(Worksheets.Count)
        Worksheets(Worksheets.Count).Name = sheetName
        ThisWorkbook.Sheets(sheetName).Cells.PasteSpecial xlPasteAll
        
        Dim i As Long
        With ThisWorkbook.Sheets(sheetName)
            .Select
    
            For i = ThisWorkbook.Sheets(sheetName).UsedRange.Rows.Count To 2 Step -1
                With Cells(i, "D")
                    If Not IsError(.Value) Then
                        If Not (.Value = "a") Then
                            .EntireRow.Delete
                        End If
                    End If
                End With
            Next i
        End With
        
        With ThisWorkbook.Sheets(sheetName)
            .Select
    
            For i = ThisWorkbook.Sheets(sheetName).UsedRange.Rows.Count To 2 Step -1
                With Cells(i, "C")
                    If Not IsError(.Value) Then
                        If (.Value = "X") Then
                            With Range("A" & i, "C" & i)
                                .Font.Bold = True
                                .Font.color = colors.blue
                            End With
            
                            With Range("C" & i, "C" & i)
                                .Font.Bold = True
                                .Font.color = colors.white
                                .Interior.color = colors.orange
                            End With

                        Else
                            With Range("A" & i, "C" & i)
                                .Font.Bold = False
                                .Font.color = colors.black
                                .Interior.color = colors.white
                            End With
                        End If
                    End If
                End With
            Next i
        End With
        
        
        With ThisWorkbook.Sheets(sheetName).Range("A" & ThisWorkbook.Sheets(sheetName).UsedRange.Rows.Count, "D" & ThisWorkbook.Sheets(sheetName).UsedRange.Rows.Count)
            .Borders(xlEdgeBottom).Weight = xlThick
            .Borders(xlEdgeBottom).LineStyle = xlContinuous
        End With
        
        Markenfilter.Cells(2, 5).Copy
        ThisWorkbook.Sheets(sheetName).Cells(2, 5).PasteSpecial xlPasteValues
        With ThisWorkbook.Sheets(sheetName).Range("E1", "E2")
            .Interior.color = colors.grey
            .Font.Bold = True
            .Font.color = colors.white
            .Borders(xlEdgeBottom).Weight = xlThick
            .Borders(xlEdgeBottom).LineStyle = xlContinuous
            .Borders(xlEdgeRight).Weight = xlThick
            .Borders(xlEdgeRight).LineStyle = xlContinuous
        End With
        
        With ThisWorkbook.Sheets(sheetName).Range("C1")
            .Interior.color = colors.orange
            .Font.Bold = True
            .Font.color = colors.white
        End With
        
        ThisWorkbook.Sheets(sheetName).Columns("C:D").EntireColumn.Hidden = True
        
        With Application
            .ScreenUpdating = True
        End With
        
        ThisWorkbook.Sheets(sheetName).Range("E2").Select
    End If
End Sub

Private Function sheetPosition(sheetName As String) As Integer
    Dim position As Integer
        position = -1
    Dim sheet As Worksheet
    For Each sheet In Sheets
        If (sheetName = sheet.Name) Then
            position = sheet.Index
        End If
    Next sheet
    sheetPosition = position
End Function








INQUEST-PP=macro
