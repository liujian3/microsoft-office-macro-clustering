Attribute VB_Name = "Module1"
'*****************************************************************
'*
'*   @ |fffd|J |fffd||fffd| |fffd||fffd| |fffd|i G r  |fffd|} |fffd|N |fffd||fffd| @
'*
'*
'*   |fffd||fffd| |fffd||fffd| |fffd|F V B A
'*
'*   |fffd||fffd| |fffd||fffd| |fffd|F Webasto Japan Co. Ltd  e-Solution Gr H.Horie
'*
'*****************************************************************

'----------------------------
'|fffd|\|fffd||fffd||fffd||310||933e|
'----------------------------

Type DATA_DT
    A As String     'Awarded probability
    B As String
    C As String
    D As String
    E As String
    F As String
    G As String
    H As String
    i As String
    J As String
    K As String
    L As String
    M As String
    N As String
    O As String
    P As String
    Q As String
    r As String
    S As String
    T As String
    U As String
    V As String
    W As String
    x As String
    y As String
    Z As String
    AA As String
    AB As String
    AC As String
    AD As String
    AE As String
    AF As String
    AG As String
    AH As String
    AI As String
    AJ As String
    ' ActType|fffd||fffd||1c9||fffd||fffd||389||fffd| 16.05.12 T.MURAKAMI
    AK As String
    MONTH() As String
    DAY() As Double
    ' AN-AS SAP|fffd|\|fffd|t|fffd|p|fffd||fffd||fffd|C|fffd||389||fffd| 16.05.09 T.MURAKAMI
    AN As String
    AO As String
    AP As String
    AQ As String
    'AR As String
    ' AS As String
End Type

Type ALLOC_DT
    CODE    As String       'Project code
    ACODE   As String       'Allocated code
    RATE    As Double       'ratio
End Type

Type PJT_DT
    CODE        As String       'Project code
    CODE_AD     As String       'AD CD
    CODE_DV1    As String       'DV1
    CODE_DV2    As String       'DV2
    CODE_DV3    As String       'DV3
    CODE_DV4    As String       'DV4
    CODE_DV5    As String       'DV5
    CODE_PS     As String       'PS
End Type

'----------------------------
'|fffd|R|fffd||fffd||fffd|X|fffd|^|fffd||fffd||fffd|X|fffd||933e|
'----------------------------
Public Const iStartCol = 6       '|fffd||635e||fffd|J|fffd|n|fffd|s
Public Const iDefStrat = 44      '|fffd||fffd||fffd||5ca|J|fffd|n|fffd||fffd|
Public Const iStartPos = 2       '|fffd|X|fffd|^|fffd|[|fffd|g|fffd|||fffd|W|fffd|V|fffd||fffd||fffd||fffd| |fffd||635e||fffd||fffd|
Public Const iStartPos2 = 2      '|fffd|X|fffd|^|fffd|[|fffd|g|fffd|||fffd|W|fffd|V|fffd||fffd||fffd||fffd| |fffd||635e||fffd||fffd|
Public Const iMaxPos = 60000     '|fffd|N|fffd||fffd||fffd|A|fffd|V|fffd|[|fffd|g|fffd|s
Public Const rngDateFrom = "E1"  '|fffd|Z|fffd||fffd||fffd|F|fffd|J|fffd|n|fffd||fffd||fffd|t
Public Const rngDateTo = "G1"    '|fffd|Z|fffd||fffd||fffd|F|fffd|I|fffd||fffd||fffd||fffd||fffd|t
Public Const rngCCenter = "E2"   '|fffd|Z|fffd||fffd||fffd|F|fffd|R|fffd|X|fffd|g|fffd|Z|fffd||fffd||fffd|^|fffd|[
Public Const rngActType = "F2"   '|fffd|Z|fffd||fffd||fffd|FActType
Public Const rngPivotDate = "B1" '|fffd|Z|fffd||fffd||fffd|F|fffd|s|fffd|{|fffd|b|fffd|g|fffd||38f||6d3||fffd||fffd|t

Public Const sConsTIM1 = "Advanced_Design"     'AD
Public Const sConsTIM2 = "Phase1 (Acquisition)"     'AQ
Public Const sConsTIM3 = "Phase2 (DV)"     'DV
Public Const sConsTIM4 = "Phase3 (DV)"     'DV
Public Const sConsTIM5 = "Phase4 (DV)"     'DV
Public Const sConsTIM6 = "Phase5 (DV)"     'DV
Public Const sConsTIM7 = "Production (PS)"     'PS

'----------------------------
'|fffd|O|fffd||fffd||fffd|[|fffd|o|fffd||fffd||fffd||3d0||fffd|
'----------------------------
Public gtDT()   As DATA_DT  '|fffd|z|fffd||fffd|
Public glLp     As Long     '|fffd|J|fffd|E|fffd||fffd||fffd|g
Public glLp2     As Long     '|fffd|J|fffd|E|fffd||fffd||fffd|g
Public gtALDT()   As ALLOC_DT  '|fffd|z|fffd||fffd|
Public glALLp     As Long     '|fffd|J|fffd|E|fffd||fffd||fffd|g
Public gtPJDT()   As PJT_DT  '|fffd|z|fffd||fffd|
Public glPJLp     As Long     '|fffd|J|fffd|E|fffd||fffd||fffd|g


'-----------------------------------------------------------------
'
'   |fffd|V|fffd|[|fffd|g|fffd||303|N|fffd||fffd||fffd|A
'
'   |fffd|C|fffd|x|fffd||fffd||fffd|g |fffd|F |fffd|V|fffd|[|fffd|g|fffd||fffd||fffd||fffd|N|fffd||fffd||fffd|A|fffd||fffd||fffd||fffd|B
'
'   |fffd||fffd||fffd||fffd| : sheet
'
'   |fffd||7c2||fffd|l :
'
'-----------------------------------------------------------------
Public Sub sbClear_sheet(sSheet As Object)
Dim plLp    As Long
Dim piLp    As Long


'|fffd||fffd||fffd||fffd||fffd||fffd|
plLp = 0
piLp = 0
sSheet.Select
'Range(sSheet.Cells(iStartPos, 1), sSheet.Cells(iMaxPos, 31)).Select
Range(sSheet.Cells(iStartPos, 1), sSheet.Cells(iMaxPos, 44)).Select
Selection.ClearContents

'For plLp = iStartPos To iMaxPos
'    For piLp = 1 To 15
'        sSheet.Cells(plLp, piLp) = ""
'
'    Next
'Next

End Sub


'-----------------------------------------------------------------
'
'   |fffd|z|fffd||fffd||243|f|fffd|[|fffd|^|fffd||fffd||fffd|i|fffd|[
'
'   |fffd|C|fffd|x|fffd||fffd||fffd|g |fffd|F |fffd|z|fffd||fffd||24e||635e||fffd||fffd||fffd||303|f|fffd|[|fffd|^|fffd||fffd||fffd|i|fffd|[|fffd||fffd||fffd||fffd|
'
'   |fffd||fffd||fffd||fffd| : sSheet - |fffd||635e||fffd||fffd||fffd|t|fffd|@|fffd|C|fffd||fffd|
'          lStrCol - |fffd|J|fffd|n|fffd|s
'          lEndCol - |fffd|I|fffd||fffd||fffd|s
'
'   |fffd||7c2||fffd|l : |fffd||fffd||fffd|^|fffd|[|fffd||fffd||fffd|R|fffd|[|fffd|h
'
'-----------------------------------------------------------------
Public Function fSetData(sSheet As Object, lStrCol As Long, lEndcol As Long) As Long
Dim plEndCol    As Long    '|fffd|V|fffd|[|fffd|g|fffd|I|fffd||fffd||fffd|s
Dim plSLp       As Long     '|fffd|V|fffd|[|fffd|g|fffd||fffd||fffd|[|fffd|v|fffd||3d0||fffd|
Dim plSLp2      As Long     '|fffd|V|fffd|[|fffd|g|fffd||fffd||fffd|[|fffd|v|fffd||3d0||fffd|
Dim plLp        As Long     '|fffd||fffd||fffd|[|fffd|v|fffd||3d0||fffd|
Dim plLp2       As Long     '|fffd||fffd||fffd|[|fffd|v|fffd||3d0||fffd|
Dim ptDT()      As DATA_DT  '|fffd|z|fffd||fffd|
Dim plRet       As Long     '|fffd||fffd||fffd|^|fffd|[|fffd||fffd||fffd|R|fffd|[|fffd|h
Dim piDef       As Integer  '|fffd||fffd||fffd||5ca|J|fffd|n|fffd||fffd|
Dim psBuf       As String   '|fffd|o|fffd|b|fffd|t|fffd|@
Dim blankFormula As String  ' |fffd|u|fffd||fffd||fffd||fffd||fffd|N|fffd||242||202||93ae|
Dim period      As Integer  '|fffd||fffd||fffd||fffd|
Dim dateFrom    As String  '|fffd|J|fffd|n|fffd||fffd||fffd|t
Dim dateTo      As String  '|fffd|I|fffd||fffd||fffd||fffd||fffd|t
Dim dateLoopEnd As Integer  '|fffd||fffd||fffd|t|fffd|J|fffd||fffd||502||fffd||fffd||fffd||fffd||fffd||fffd||30f|I|fffd||fffd||fffd||fffd|
Dim clmNoSearchDate As Integer  ' |fffd||fffd||fffd||fffd||fffd||fffd||fffd|t|fffd||fffd||50d||fffd|

Dim ptALDT()    As ALLOC_DT        '|fffd|z|fffd||fffd||fffd|z|fffd||fffd|
Dim plALCnt     As Long            '|fffd|z|fffd||fffd|J|fffd|E|fffd||fffd||fffd|g
Dim ptPJTDT()   As PJT_DT          '|fffd|v|fffd||fffd||fffd|W|fffd|F|fffd|N|fffd|g|fffd|z|fffd||fffd|
Dim plPJTCnt    As Long            '|fffd|z|fffd||fffd|J|fffd|E|fffd||fffd||fffd|g
Dim ptCALDT()    As ALLOC_DT       '|fffd|z|fffd||fffd||fffd|z|fffd||fffd|
Dim plCALCnt    As Long            '|fffd|`|fffd|F|fffd|b|fffd|N
Dim plALp       As Long             '|fffd||fffd||fffd|[|fffd|v|fffd||3d0||fffd|
Dim psPJCode    As String           'tmp|fffd|v|fffd||fffd||fffd|W|fffd|F|fffd|N|fffd|g|fffd|R|fffd|[|fffd|h|fffd|i|fffd|[

'On Error GoTo Err_trip

'|fffd||fffd||fffd||fffd||fffd||fffd|
plSLp = lStrCol
plSLp2 = iDefStrat
plLp = 0
plLp2 = 0
plRet = -1
plEndCol = lEndcol + lStrCol
piDef = iDefStrat
psBuf = ""
plCALCnt = 0
plALp = 0
psPJCode = ""

' |fffd||fffd||fffd|s|fffd|{|fffd|b|fffd|g|fffd|e|fffd|[|fffd|u|fffd||fffd||fffd||242||101|A|fffd||d4483|Z|fffd||fffd||fffd||341|u"(|fffd||fffd|)"|fffd|v|fffd||195|\|fffd||fffd||fffd||fffd||fffd||fffd||90aa||fffd|A|fffd|R|fffd|s|fffd|[|fffd||fffd||fffd||fffd||fffd||a347||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||182||fffd||fffd||101|u|fffd||d4481|v|fffd||fffd||fffd|L|fffd|^|fffd||fffd||fffd||fffd||102||fffd||fffd||702||fffd||fffd|iSAP|fffd||243|R|fffd|s|fffd|[|fffd||fffd||fffd||fffd||6c2||255|s|fffd|s|fffd||fffd||fffd|j
' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||90bd||fffd||7c1|A|fffd|v|fffd|Z|fffd||30c||fffd||fffd||282||fffd||fffd|u|fffd||fffd||fffd||fffd||fffd|N|fffd||242||202||93ae||fffd||fffd||fffd||fffd||fffd||253||fffd||fffd||fffd||90b1||fffd||182||141|A|fffd|s|fffd|{|fffd|b|fffd|g|fffd|e|fffd|[|fffd|u|fffd||fffd||fffd||142||fffd||fffd|u|fffd||fffd||fffd||fffd||fffd|N|fffd|\|fffd||fffd||fffd||fffd||fffd||94|\|fffd||182||202||90bd||fffd||7c2||311||389||fffd|
blankFormula = "=TRIM("" "")"

'|fffd||fffd||fffd||fffd||fffd|v|fffd|Z|fffd||303|I|fffd|t
sSheet.EnableCalculation = False

'|fffd||fffd||fffd||352|l|fffd||30e||64fe|
dateFrom = sSheet.Range(rngDateFrom).Value
dateTo = sSheet.Range(rngDateTo).Value

If Not IsDate(dateFrom) Or Not IsDate(dateTo) Then
    MsgBox "|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd|s|fffd||fffd||fffd||142||fffd||fffd|B|fffd||fffd||fffd|t|fffd|`|fffd||fffd||fffd||153||fffd||fffd||342||fffd||fffd||102||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|B"
    GoTo Err_trip
End If

If CDate(dateFrom) > CDate(dateTo) Then
    MsgBox "|fffd|J|fffd|n|fffd||fffd||fffd|t|fffd||fffd||fffd|I|fffd||fffd||fffd||fffd||fffd|t|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||242||202||fffd||fffd||102||fffd||fffd||702||fffd||fffd|B"
    GoTo Err_trip
End If

'|fffd||38f||6ca||fffd||fffd||502||30a|J|fffd|n|fffd||fffd||fffd||30c||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|l|fffd||fffd||752||fffd|
clmNoSearchDate = iDefStrat

'|fffd||38f||6ca||fffd||fffd||502||30a|J|fffd|n|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|A|fffd||752||80b7||fffd||fffd|
Do
    '|fffd||fffd||303|`|fffd|F|fffd|b|fffd|N
    psBuf = sSheet.Cells(4, clmNoSearchDate)
    If psBuf = dateFrom Then
        Exit Do
    ElseIf psBuf = "" Then
        MsgBox "|fffd||38f||6d3||fffd||fffd|t|fffd||303|f|fffd|[|fffd|^|fffd||fffd||fffd|o|fffd|^|fffd||fffd||fffd||fffd||102||fffd||fffd||702||fffd||fffd||fffd|B"
        GoTo Err_trip
    End If
    clmNoSearchDate = clmNoSearchDate + 1
Loop

'|fffd||38f||6ca||fffd||fffd||502||30f|I|fffd||fffd||fffd||fffd||fffd||fffd||752||fffd|
dateLoopEnd = clmNoSearchDate + DateDiff("d", CDate(dateFrom), CDate(dateTo))

'|fffd|z|fffd||fffd||243|Z|fffd|b|fffd|g
Do Until plSLp > plEndCol - 1
    '2016/05/10 H.Horie |fffd|v|fffd||fffd||fffd|W|fffd|F|fffd|N|fffd|g|fffd|O|fffd||343|R|fffd|s|fffd|[|fffd||fffd||fffd||202||fffd|
    If sSheet.Cells(plSLp, 2) <> "Not_Project" And sSheet.Cells(plSLp, 2) <> "" Then
    
        '|fffd|z|fffd||fffd||fffd||fffd||fffd|`|fffd|F|fffd|b|fffd|N
        plCALCnt = 0
        plCALCnt = fCheckALLOC(Trim$(sSheet.Cells(plSLp, 5)), ptCALDT())
        
        '|fffd|o|fffd||354|z|fffd||fffd||582||303|Z|fffd|b|fffd|g
        If plCALCnt > -1 Then
            '|fffd|z|fffd||fffd||fffd||fffd|L|fffd||30f||a347|
            For plALp = 0 To plCALCnt
                '|fffd|z|fffd||fffd||fffd||fffd|R|fffd|[|fffd|h|fffd||1c2||751||582||fffd|
                psPJCode = fReplaceCODE(ptCALDT(), plALp, sSheet.Cells(plSLp, 8))
                If psPJCode = "" Then
                    MsgBox sSheet.Cells(plSLp, 6) & "|fffd||314|z|fffd||fffd||fffd||fffd|R|fffd|[|fffd|h|fffd||fffd||fffd||fffd||fffd||82||fffd||fffd||fffd||702||fffd||fffd||fffd|B|fffd|}|fffd|X|fffd|^|fffd||fffd||fffd|m|fffd|F|fffd||fffd||fffd||102||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|B", vbInformation, "Tracking sheet"
                    fSetData = plRet
                    Exit Function
                Else
                    '|fffd|z|fffd||fffd||303|Z|fffd|b|fffd|g
                    ReDim Preserve ptDT(plLp)
        
                    ptDT(plLp).A = sSheet.Cells(plSLp, 2)
                    ptDT(plLp).B = sSheet.Cells(plSLp, 3)
                    ptDT(plLp).C = sSheet.Cells(plSLp, 4)
                    ptDT(plLp).D = sSheet.Cells(plSLp, 5)   'Project code
                    ptDT(plLp).D = ptCALDT(plALp).CODE      '|fffd|z|fffd||fffd||fffd||fffd|Project code
                    ptDT(plLp).E = sSheet.Cells(plSLp, 6)   'SAP CODE
                    ptDT(plLp).E = psPJCode                   'SAP CODE
                    'ptDT(plLp).F = sSheet.Cells(plSLp, 7)   'WBS
                    ptDT(plLp).F = psPJCode & sSheet.Cells(plSLp, 21)   'WBS
                    ptDT(plLp).G = sSheet.Cells(plSLp, 8)   'Timing
                    ptDT(plLp).H = sSheet.Cells(plSLp, 9)
                    ptDT(plLp).i = sSheet.Cells(plSLp, 10)
                    ptDT(plLp).J = sSheet.Cells(plSLp, 11)
                    ptDT(plLp).K = sSheet.Cells(plSLp, 12)
                    ptDT(plLp).L = sSheet.Cells(plSLp, 13)
                    ptDT(plLp).M = Trim$(sSheet.Cells(plSLp, 14))
                    ptDT(plLp).N = sSheet.Cells(plSLp, 15)
                    ptDT(plLp).O = sSheet.Cells(plSLp, 16)
                    ptDT(plLp).P = sSheet.Cells(plSLp, 17)
                    ptDT(plLp).Q = sSheet.Cells(plSLp, 18)
                    ptDT(plLp).r = sSheet.Cells(plSLp, 19)
                    ptDT(plLp).S = sSheet.Cells(plSLp, 20)
                    ptDT(plLp).T = sSheet.Cells(plSLp, 21)  'WBS number
                    ptDT(plLp).U = sSheet.Cells(plSLp, 22)
                    ptDT(plLp).V = sSheet.Cells(plSLp, 23)
                    ptDT(plLp).W = sSheet.Cells(plSLp, 24)
                    ptDT(plLp).x = sSheet.Cells(plSLp, 25)
                    ptDT(plLp).y = sSheet.Cells(plSLp, 26)
                    ptDT(plLp).Z = sSheet.Cells(plSLp, 27)
                    ptDT(plLp).AA = sSheet.Cells(plSLp, 28)
                    ptDT(plLp).AB = sSheet.Cells(plSLp, 29)
                    ptDT(plLp).AC = sSheet.Cells(plSLp, 30)
                    ptDT(plLp).AD = sSheet.Cells(plSLp, 31)
                    ptDT(plLp).AE = sSheet.Cells(plSLp, 32)
                    ptDT(plLp).AF = sSheet.Cells(plSLp, 33)
                    ptDT(plLp).AG = sSheet.Cells(plSLp, 34)
                    ptDT(plLp).AH = sSheet.Cells(plSLp, 35)
                    ptDT(plLp).AI = sSheet.Cells(plSLp, 36)
                    ptDT(plLp).AJ = sSheet.Cells(plSLp, 37)
                    ptDT(plLp).AK = sSheet.Cells(plSLp, 38)
                    ptDT(plLp).AN = blankFormula
                    ptDT(plLp).AO = blankFormula
                    ptDT(plLp).AP = blankFormula
                    ptDT(plLp).AQ = blankFormula
                    ''|fffd||fffd||fffd||5c2||303|Z|fffd|b|fffd|g
                    '|fffd||fffd||fffd||fffd||fffd||fffd|
                    plLp2 = 0
                    plSLp2 = clmNoSearchDate
            
                    Do
                        '|fffd||fffd||303|`|fffd|F|fffd|b|fffd|N
                        psBuf = sSheet.Cells(4, plSLp2)
                        If psBuf = "" Then
                            Exit Do
                        End If
            
                        ReDim Preserve ptDT(plLp).DAY(plLp2)
                        ReDim Preserve ptDT(plLp).MONTH(plLp2)
                        ptDT(plLp).MONTH(plLp2) = sSheet.Cells(4, plSLp2)
                        '2013/09/19|fffd|@|fffd|^|fffd|s|fffd||fffd|v|fffd||389||fffd|
                        If Trim$(sSheet.Cells(plSLp, plSLp2)) = "" Then
                            ptDT(plLp).DAY(plLp2) = 0
                        Else
                            '|fffd|z|fffd||fffd||fffd||fffd||fffd||30f||fffd|Z |fffd||fffd||fffd||fffd||fffd||fffd|Q|fffd||282||702||151||fffd|R|fffd||282||fffd||fffd|l|fffd||30c||713||fffd|
'                            ptDT(plLp).DAY(plLp2) = IIf((sSheet.Cells(plSLp, plSLp2) * (ptCALDT(plALp).RATE / 100)) - Int((sSheet.Cells(plSLp, plSLp2) * (ptCALDT(plALp).RATE / 100))) = 0, _
'                                                    (sSheet.Cells(plSLp, plSLp2) * (ptCALDT(plALp).RATE / 100)), Int((sSheet.Cells(plSLp, plSLp2) * (ptCALDT(plALp).RATE / 100))))
                            ptDT(plLp).DAY(plLp2) = WorksheetFunction.Round((sSheet.Cells(plSLp, plSLp2) * (ptCALDT(plALp).RATE / 100)), 2)
                        End If
                        plLp2 = plLp2 + 1
                        plSLp2 = plSLp2 + 1
                    Loop While plSLp2 <= dateLoopEnd
                    '|fffd|J|fffd|E|fffd||fffd||fffd|g|fffd|A|fffd|b|fffd|v
                    plLp = plLp + 1
                End If
            Next
        Else
            ReDim Preserve ptDT(plLp)
        
            ptDT(plLp).A = sSheet.Cells(plSLp, 2)
            ptDT(plLp).B = sSheet.Cells(plSLp, 3)
            ptDT(plLp).C = sSheet.Cells(plSLp, 4)
            ptDT(plLp).D = sSheet.Cells(plSLp, 5)
            ptDT(plLp).E = sSheet.Cells(plSLp, 6)   'Project code
            ptDT(plLp).F = sSheet.Cells(plSLp, 7)
            ptDT(plLp).G = sSheet.Cells(plSLp, 8)
            ptDT(plLp).H = sSheet.Cells(plSLp, 9)   'Timing
            ptDT(plLp).i = sSheet.Cells(plSLp, 10)
            ptDT(plLp).J = sSheet.Cells(plSLp, 11)
            ptDT(plLp).K = sSheet.Cells(plSLp, 12)
            ptDT(plLp).L = sSheet.Cells(plSLp, 13)
            'ptDT(plLp).M = Trim$(sSheet.Cells(plSLp, 14).Value)
            ptDT(plLp).M = ""
            'ptDT(plLp).N = sSheet.Cells(plSLp, 15)
            'ptDT(plLp).O = sSheet.Cells(plSLp, 16)
            'ptDT(plLp).P = sSheet.Cells(plSLp, 17)
            'ptDT(plLp).Q = sSheet.Cells(plSLp, 18)
            ptDT(plLp).r = sSheet.Cells(plSLp, 19)
            ptDT(plLp).S = sSheet.Cells(plSLp, 20)
            ptDT(plLp).T = sSheet.Cells(plSLp, 21)
            ptDT(plLp).U = sSheet.Cells(plSLp, 22)  'WBS number
            ptDT(plLp).V = sSheet.Cells(plSLp, 23)
            ptDT(plLp).W = sSheet.Cells(plSLp, 24)
            ptDT(plLp).x = sSheet.Cells(plSLp, 25)
            ptDT(plLp).y = sSheet.Cells(plSLp, 26)
            ptDT(plLp).Z = sSheet.Cells(plSLp, 27)
            ptDT(plLp).AA = sSheet.Cells(plSLp, 28)
            ptDT(plLp).AB = sSheet.Cells(plSLp, 29)
            ptDT(plLp).AC = sSheet.Cells(plSLp, 30)
            ptDT(plLp).AD = sSheet.Cells(plSLp, 31)
            ptDT(plLp).AE = sSheet.Cells(plSLp, 32)
            ptDT(plLp).AF = sSheet.Cells(plSLp, 33)
            ptDT(plLp).AG = sSheet.Cells(plSLp, 34)
            ptDT(plLp).AH = sSheet.Cells(plSLp, 35)
            ptDT(plLp).AI = sSheet.Cells(plSLp, 36)
            ptDT(plLp).AJ = sSheet.Cells(plSLp, 37)
            ' ActType|fffd||fffd||1c9||fffd||fffd||389||fffd| 16.05.12 T.MURAKAMI
            ptDT(plLp).AK = sSheet.Cells(plSLp, 38)
            ' AN-AS SAP|fffd|\|fffd|t|fffd|p|fffd||fffd||fffd|C|fffd||389||fffd| 16.05.09 T.MURAKAMI
            ' ptDT(plLp).AN = sSheet.Range(rngCCenter).Value
            ' ptDT(plLp).AO = sSheet.Range(rngActType).Value
            ptDT(plLp).AN = blankFormula
            ptDT(plLp).AO = blankFormula
            ptDT(plLp).AP = blankFormula
            ptDT(plLp).AQ = blankFormula
            ' ptDT(plLp).AR = blankFormula
            ' ptDT(plLp).AS = blankFormula
            ''|fffd||fffd||fffd||5c2||303|Z|fffd|b|fffd|g
            '|fffd||fffd||fffd||fffd||fffd||fffd|
            plLp2 = 0
            ' plSLp2 = iDefStrat
            plSLp2 = clmNoSearchDate
    
            Do
                '|fffd||fffd||303|`|fffd|F|fffd|b|fffd|N
                psBuf = sSheet.Cells(4, plSLp2)
                If psBuf = "" Then
                    Exit Do
                End If
    
                ReDim Preserve ptDT(plLp).DAY(plLp2)
                ReDim Preserve ptDT(plLp).MONTH(plLp2)
                ptDT(plLp).MONTH(plLp2) = sSheet.Cells(4, plSLp2)
                '2013/09/19|fffd|@|fffd|^|fffd|s|fffd||fffd|v|fffd||389||fffd|
                If Trim$(sSheet.Cells(plSLp, plSLp2)) = "" Then
                    ptDT(plLp).DAY(plLp2) = 0
                Else
                    ptDT(plLp).DAY(plLp2) = sSheet.Cells(plSLp, plSLp2)
                End If
                plLp2 = plLp2 + 1
                plSLp2 = plSLp2 + 1
            Loop While plSLp2 <= dateLoopEnd
            '|fffd|J|fffd|E|fffd||fffd||fffd|g|fffd|A|fffd|b|fffd|v
            'plSLp = plSLp + 1
            plLp = plLp + 1
        End If
    End If
    
    '|fffd|J|fffd|E|fffd||fffd||fffd|g|fffd|A|fffd|b|fffd|v
    plSLp = plSLp + 1
Loop

'|fffd|O|fffd||fffd||fffd|[|fffd|o|fffd||fffd||fffd||3d0||fffd||fffd||582||303|Z|fffd|b|fffd|g
gtDT = ptDT
glLp = plLp
glLp2 = plLp2


'|fffd||fffd||fffd||fffd||fffd|v|fffd|Z|fffd||303|I|fffd||fffd|
sSheet.EnableCalculation = True

'|fffd||fffd||fffd|^|fffd|[|fffd||fffd||fffd|R|fffd|[|fffd|h|fffd||303|Z|fffd|b|fffd|g
plRet = plLp
fSetData = plRet

Exit Function

'|fffd|G|fffd||fffd||fffd|[|fffd||fffd||fffd||fffd|
Err_trip:

MsgBox Err.Number & " : " & Err.Description, vbCritical, "Error"
MsgBox plSLp & "|fffd|s|fffd||fffd| " & plSLp2 & "|fffd||fffd||682||315||fffd||fffd||fffd||fffd||12c82||5c2||102||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|B", vbInformation

'|fffd||fffd||fffd||fffd||fffd|v|fffd|Z|fffd||303|I|fffd||fffd|
sSheet.EnableCalculation = True

fSetData = plRet

End Function

'-----------------------------------------------------------------
'
'   |fffd|V|fffd|[|fffd|g|fffd||594|z|fffd||fffd||fffd|}|fffd||fffd|
'
'|fffd|C|fffd|x|fffd||fffd||fffd|g:      |fffd|z|fffd||fffd|f|fffd|[|fffd|^|fffd||fffd||fffd|V|fffd|[|fffd|g|fffd||591|}|fffd||fffd|
'
'|fffd||fffd||fffd||fffd|:     sSheet -|fffd|\|fffd||fffd|t|fffd||fffd||fffd||fffd|t|fffd|@|fffd|C|fffd||fffd|
'          lStrCol -|fffd|J|fffd|n|fffd|s
'          lStrRow -|fffd|J|fffd|n|fffd||fffd|
'
'|fffd||7c2||fffd|l:     |fffd||fffd||fffd|^|fffd|[|fffd||fffd||fffd|R|fffd|[|fffd|h
'
'-----------------------------------------------------------------
Public Function fPastData(sSheet As Object, lStrCol As Long, lStrRow As Long) As Long
Dim plLp    As Long     '|fffd||fffd||fffd|[|fffd|v|fffd||3d0||fffd|
Dim plLp2   As Long     '|fffd||fffd||fffd|[|fffd|v|fffd||3d0||fffd|
Dim plCol   As Long     '|fffd|V|fffd|[|fffd|g|fffd|s
Dim plRow   As Long     '|fffd|V|fffd|[|fffd|g|fffd||fffd|
Dim plRet   As Long     '|fffd||fffd||fffd|^|fffd|[|fffd||fffd||fffd|R|fffd|[|fffd|h
Dim pbFlg   As Boolean  '|fffd|t|fffd||fffd||fffd|O

On Error GoTo Err_trip

'|fffd||fffd||fffd||fffd||fffd||fffd|
plLp = 0
plLp2 = 0
plCol = lStrCol
plRow = lStrRow
plRet = -1
pbFlg = False

'|fffd||fffd||fffd||fffd||fffd|v|fffd|Z|fffd||303|I|fffd|t
sSheet.EnableCalculation = False


'|fffd|V|fffd|[|fffd|g|fffd||583|f|fffd|[|fffd|^|fffd||303|Z|fffd|b|fffd|g
For plLp = 0 To glLp - 1

    '|fffd||fffd||fffd||fffd||fffd||fffd|
    pbFlg = False

    For plLp2 = 0 To glLp2 - 1
        '|fffd||fffd||fffd||fffd||fffd||fffd|
        plRow = lStrRow

        If pbFlg = False Then
            '|fffd|f|fffd|[|fffd|^|fffd|Z|fffd|b|fffd|g
            sSheet.Cells(plCol, plRow) = gtDT(plLp).A       'Awarded probability
            plRow = plRow + 1
            sSheet.Cells(plCol, plRow) = gtDT(plLp).B
            plRow = plRow + 1
            sSheet.Cells(plCol, plRow) = gtDT(plLp).C
            plRow = plRow + 1
            sSheet.Cells(plCol, plRow) = gtDT(plLp).D
            plRow = plRow + 1
            sSheet.Cells(plCol, plRow) = gtDT(plLp).E
            plRow = plRow + 1
            sSheet.Cells(plCol, plRow) = gtDT(plLp).F
            plRow = plRow + 1
            sSheet.Cells(plCol, plRow) = gtDT(plLp).G
            plRow = plRow + 1
            sSheet.Cells(plCol, plRow) = gtDT(plLp).H
            plRow = plRow + 1
            sSheet.Cells(plCol, plRow) = gtDT(plLp).i
            plRow = plRow + 1
            sSheet.Cells(plCol, plRow) = gtDT(plLp).J
            plRow = plRow + 1
            sSheet.Cells(plCol, plRow) = gtDT(plLp).K
            plRow = plRow + 1
            sSheet.Cells(plCol, plRow) = gtDT(plLp).L
            plRow = plRow + 1
            sSheet.Cells(plCol, plRow) = gtDT(plLp).M
            plRow = plRow + 1
            sSheet.Cells(plCol, plRow) = gtDT(plLp).N
            plRow = plRow + 1
            sSheet.Cells(plCol, plRow) = gtDT(plLp).O
            plRow = plRow + 1
            sSheet.Cells(plCol, plRow) = gtDT(plLp).P
            plRow = plRow + 1
            sSheet.Cells(plCol, plRow) = gtDT(plLp).Q
            plRow = plRow + 1
            sSheet.Cells(plCol, plRow) = gtDT(plLp).r
            plRow = plRow + 1
            sSheet.Cells(plCol, plRow) = gtDT(plLp).S
            plRow = plRow + 1
            sSheet.Cells(plCol, plRow) = gtDT(plLp).T
            plRow = plRow + 1
            sSheet.Cells(plCol, plRow) = gtDT(plLp).U
            plRow = plRow + 1
            sSheet.Cells(plCol, plRow) = gtDT(plLp).V
            plRow = plRow + 1
            sSheet.Cells(plCol, plRow) = gtDT(plLp).W
            plRow = plRow + 1
            sSheet.Cells(plCol, plRow) = gtDT(plLp).x
            plRow = plRow + 1
            sSheet.Cells(plCol, plRow) = gtDT(plLp).y
            plRow = plRow + 1
            sSheet.Cells(plCol, plRow) = gtDT(plLp).Z
            plRow = plRow + 1
            sSheet.Cells(plCol, plRow) = gtDT(plLp).AA
            plRow = plRow + 1
            sSheet.Cells(plCol, plRow) = gtDT(plLp).AB
            plRow = plRow + 1
            sSheet.Cells(plCol, plRow) = gtDT(plLp).AC
            plRow = plRow + 1
            sSheet.Cells(plCol, plRow) = gtDT(plLp).AD
            plRow = plRow + 1
            sSheet.Cells(plCol, plRow) = gtDT(plLp).AE
            plRow = plRow + 1
            sSheet.Cells(plCol, plRow) = gtDT(plLp).AF
            plRow = plRow + 1
            sSheet.Cells(plCol, plRow) = gtDT(plLp).AG
            plRow = plRow + 1
            sSheet.Cells(plCol, plRow) = gtDT(plLp).AH
            plRow = plRow + 1
            sSheet.Cells(plCol, plRow) = gtDT(plLp).AI
            plRow = plRow + 1
            sSheet.Cells(plCol, plRow) = gtDT(plLp).AJ
            plRow = plRow + 1
            sSheet.Cells(plCol, plRow) = gtDT(plLp).AK
            '|fffd|t|fffd||fffd||fffd|O|fffd||3cd|X
            pbFlg = True
        Else
'            sSheet.Range(sSheet.Cells(plCol, plRow), sSheet.Cells(plCol, plRow + 27)).Value = sSheet.Range(sSheet.Cells(plCol - 1, plRow), sSheet.Cells(plCol - 1, plRow + 27)).Value
'            plRow = plRow + 27
            sSheet.Range(sSheet.Cells(plCol, plRow), sSheet.Cells(plCol, plRow + 36)).Value = sSheet.Range(sSheet.Cells(plCol - 1, plRow), sSheet.Cells(plCol - 1, plRow + 36)).Value
            plRow = plRow + 36
        End If
        plRow = plRow + 1
        sSheet.Cells(plCol, plRow) = gtDT(plLp).MONTH(plLp2)
        plRow = plRow + 1
        sSheet.Cells(plCol, plRow) = gtDT(plLp).DAY(plLp2)
        ' AN-AS SAP|fffd|\|fffd|t|fffd|p|fffd||fffd||fffd|C|fffd||389||fffd| 16.05.09 T.MURAKAMI
        plRow = plRow + 1
        sSheet.Cells(plCol, plRow) = gtDT(plLp).AN
        plRow = plRow + 1
        sSheet.Cells(plCol, plRow) = gtDT(plLp).AO
        plRow = plRow + 1
        sSheet.Cells(plCol, plRow) = gtDT(plLp).AP
        plRow = plRow + 1
        sSheet.Cells(plCol, plRow) = gtDT(plLp).AQ
        'plRow = plRow + 1
        'sSheet.Cells(plCol, plRow) = gtDT(plLp).AR
        ' plRow = plRow + 1
        ' sSheet.Cells(plCol, plRow) = gtDT(plLp).AS

        plCol = plCol + 1

        If plCol Mod 100 = 0 Then
            DoEvents
            Sheet1.Activate
            Sheet1.Cells(2, 2) = plCol & " / " & glLp * glLp2 & "|fffd|s"
        End If
    Next

Next

'|fffd||fffd||fffd||fffd||fffd|v|fffd|Z|fffd||303|I|fffd||fffd|
sSheet.EnableCalculation = True


plRet = plLp
fPastData = plRet

Exit Function

'|fffd|G|fffd||fffd||fffd|[|fffd||fffd||fffd||fffd|
Err_trip:

'|fffd||fffd||fffd||fffd||fffd|v|fffd|Z|fffd||303|I|fffd||fffd|
sSheet.EnableCalculation = True


MsgBox Err.Number & " : " & Err.Description, vbCritical, "Error"
fPastData = plRet


End Function


'-----------------------------------------------------------------
'
'   |fffd|V|fffd|[|fffd|g|fffd||594|z|fffd||fffd||fffd|}|fffd||fffd|
'
'   |fffd|C|fffd|x|fffd||fffd||fffd|g |fffd|F |fffd|z|fffd||fffd|f|fffd|[|fffd|^|fffd||fffd||fffd|V|fffd|[|fffd|g|fffd||591|}|fffd||fffd|
'
'   |fffd||fffd||fffd||fffd| : sSheet - |fffd|\|fffd||fffd|t|fffd||fffd||fffd||fffd|t|fffd|@|fffd|C|fffd||fffd|
'          lStrCol - |fffd|J|fffd|n|fffd|s
'          lStrRow - |fffd|J|fffd|n|fffd||fffd|
'
'   |fffd||7c2||fffd|l : |fffd||fffd||fffd|^|fffd|[|fffd||fffd||fffd|R|fffd|[|fffd|h
'
'-----------------------------------------------------------------
'Public Function fPastData(sSheet As Object, lStrCol As Long, lStrRow As Long) As Long
'Dim plLp    As Long     '|fffd||fffd||fffd|[|fffd|v|fffd||3d0||fffd|
'Dim plLp2   As Long     '|fffd||fffd||fffd|[|fffd|v|fffd||3d0||fffd|
'Dim plCol   As Long     '|fffd|V|fffd|[|fffd|g|fffd|s
'Dim plRow   As Long     '|fffd|V|fffd|[|fffd|g|fffd||fffd|
'Dim plRet   As Long     '|fffd||fffd||fffd|^|fffd|[|fffd||fffd||fffd|R|fffd|[|fffd|h
'
''On Error GoTo Err_trip
'
''|fffd||fffd||fffd||fffd||fffd||fffd|
'plLp = 0
'plLp2 = 0
'plCol = lStrCol
'plRow = lStrRow
'plRet = -1
'
''|fffd|V|fffd|[|fffd|g|fffd||583|f|fffd|[|fffd|^|fffd||303|Z|fffd|b|fffd|g
'For plLp = 0 To glLp - 1
'
'    For plLp2 = 0 To glLp2 - 1
'        '|fffd||fffd||fffd||fffd||fffd||fffd|
'        plRow = lStrRow
'
'        '|fffd|f|fffd|[|fffd|^|fffd|Z|fffd|b|fffd|g
'        sSheet.Cells(plCol, plRow) = gtDT(plLp).A       'Awarded probability
'        plRow = plRow + 1
'        sSheet.Cells(plCol, plRow) = gtDT(plLp).B
'        plRow = plRow + 1
'        sSheet.Cells(plCol, plRow) = gtDT(plLp).C
'        plRow = plRow + 1
'        sSheet.Cells(plCol, plRow) = gtDT(plLp).D
'        plRow = plRow + 1
'        sSheet.Cells(plCol, plRow) = gtDT(plLp).E
'        plRow = plRow + 1
'        sSheet.Cells(plCol, plRow) = gtDT(plLp).F
'        plRow = plRow + 1
'        sSheet.Cells(plCol, plRow) = gtDT(plLp).G
'        plRow = plRow + 1
'        sSheet.Cells(plCol, plRow) = gtDT(plLp).H
'        plRow = plRow + 1
'        sSheet.Cells(plCol, plRow) = gtDT(plLp).I
'        plRow = plRow + 1
'        sSheet.Cells(plCol, plRow) = gtDT(plLp).J
'        plRow = plRow + 1
'        sSheet.Cells(plCol, plRow) = gtDT(plLp).K
'        plRow = plRow + 1
'        sSheet.Cells(plCol, plRow) = gtDT(plLp).L
'        plRow = plRow + 1
'        sSheet.Cells(plCol, plRow) = gtDT(plLp).M
'        plRow = plRow + 1
'        sSheet.Cells(plCol, plRow) = gtDT(plLp).N
'        plRow = plRow + 1
'        sSheet.Cells(plCol, plRow) = gtDT(plLp).O
'        plRow = plRow + 1
'        sSheet.Cells(plCol, plRow) = gtDT(plLp).P
'        plRow = plRow + 1
'        sSheet.Cells(plCol, plRow) = gtDT(plLp).Q
'        plRow = plRow + 1
'        sSheet.Cells(plCol, plRow) = gtDT(plLp).R
'        plRow = plRow + 1
'        sSheet.Cells(plCol, plRow) = gtDT(plLp).S
'        plRow = plRow + 1
'        sSheet.Cells(plCol, plRow) = gtDT(plLp).T
'        plRow = plRow + 1
'        sSheet.Cells(plCol, plRow) = gtDT(plLp).U
'        plRow = plRow + 1
'        sSheet.Cells(plCol, plRow) = gtDT(plLp).V
'        plRow = plRow + 1
'        sSheet.Cells(plCol, plRow) = gtDT(plLp).W
'        plRow = plRow + 1
'        sSheet.Cells(plCol, plRow) = gtDT(plLp).X
'        plRow = plRow + 1
'        sSheet.Cells(plCol, plRow) = gtDT(plLp).Y
'        plRow = plRow + 1
'        sSheet.Cells(plCol, plRow) = gtDT(plLp).Z
'        plRow = plRow + 1
'        sSheet.Cells(plCol, plRow) = gtDT(plLp).AA
'        plRow = plRow + 1
'        sSheet.Cells(plCol, plRow) = gtDT(plLp).AB
'        plRow = plRow + 1
'        sSheet.Cells(plCol, plRow) = gtDT(plLp).MONTH(plLp2)
'        plRow = plRow + 1
'        sSheet.Cells(plCol, plRow) = gtDT(plLp).DAY(plLp2)
'
'        plCol = plCol + 1
'
'        If plCol Mod 100 = 0 Then
'            DoEvents
'            Sheet1.Activate
'            Sheet1.Cells(2, 2) = plCol & " / " & (glLp - 1) * (glLp2 - 1) & "|fffd|s"
'        End If
'    Next
'
'Next
'
'
'fPastData = plRet
'
'Exit Function
'
''|fffd|G|fffd||fffd||fffd|[|fffd||fffd||fffd||fffd|
'Err_trip:
'
'MsgBox Err.Number & " : " & Err.Description, vbCritical, "Error"
'fPastData = plRet
'
'
'End Function


' |fffd|w|fffd||fffd||313||fffd||fffd|t|fffd||fffd||fffd||702||fffd|1|fffd|T|fffd||502||fffd||fffd|t|fffd|B|fffd||fffd||fffd|^|fffd||14d|i|fffd||835e||fffd||fffd||155|\|fffd||fffd|
' Act type|fffd||14d|i|fffd||835e||fffd||fffd||155|\|fffd||fffd|
Public Function CommandButton1_Click(sSheet As Object)
Dim poPt As PivotTable
Dim poPf    As PivotField
Dim poPf2    As PivotField
Dim poPf3    As PivotField

Dim pdStr   As Date
Dim pdEnd   As Date

'|fffd||fffd||fffd||fffd||fffd||fffd|
pdStr = Cells(2, 3)
pdEnd = Cells(2, 4)

Set poPt = sSheet.PivotTables("|fffd||fffd||fffd||7af||fffd||f0||fffd||fffd||fffd|1")
'|fffd|X|fffd|V
poPt.PivotCache.Refresh

Set poPf = poPt.PivotFields("DATE")
Set poPf2 = poPt.PivotFields("Send. CCtr")

With poPf
    ' |fffd|t|fffd|B|fffd||fffd||fffd|^|fffd|N|fffd||fffd||fffd|A
    .ClearAllFilters
    ' |fffd||fffd||fffd|t|fffd||348||34e|w|fffd||fffd||14d|i|fffd||835e||fffd||fffd|
    .PivotFilters.Add Type:=xlDateBetween, Value1:=Format(pdStr, "yyyy/mm/dd"), Value2:=Format(pdEnd, "yyyy/mm/dd")

End With
With poPf2
    ' |fffd|t|fffd|B|fffd||fffd||fffd|^|fffd|N|fffd||fffd||fffd|A
    .ClearAllFilters
    '(|fffd||fffd|)|fffd||fffd||fffd||fffd||fffd||fffd|
    .PivotItems("(blank)").Visible = False
    ' |fffd||fffd||fffd|g|fffd||fffd|Cost Center|fffd||14d|i|fffd||835e||fffd||fffd| 2016/05/10 H.Horie
    '.PivotFilters.Add Type:=xlCaptionEquals, Value1:=Sheet1.Cells(2, 5)
End With


End Function

'-----------------------------------------------------------------
'
'   CostCenter-ActType|fffd||fffd||fffd||451||582||fffd|
'
'   |fffd|C|fffd|x|fffd||fffd||fffd|g |fffd|F ASC1(CostCenter), ASC2(ActType)|fffd||fffd|USER_LIST|fffd||fffd||fffd||fffd||451||582||fffd||fffd||fffd|
'
'   |fffd||fffd||fffd||fffd| : |fffd||202||fffd|
'
'   |fffd||7c2||fffd|l : |fffd||202||fffd|
'
'-----------------------------------------------------------------
Public Function autoSortUserList()

    Const wkSheetNm = "USER_LIST"   ' |fffd|V|fffd|[|fffd|g|fffd||fffd|
    Const rowDataStart = 4          ' |fffd|f|fffd|[|fffd|^|fffd|J|fffd|n|fffd|s|fffd||50d||fffd|
    Const rngInputRows = "I2"       ' |fffd|Z|fffd||fffd||fffd|F|fffd||fffd||fffd||34d|s|fffd||fffd|

    Dim wkSht As Worksheet
    Dim inputRows

    Set wkSht = ActiveWorkbook.Worksheets(wkSheetNm)

    ' |fffd||fffd||fffd||34d|s|fffd||fffd||fffd||fffd||fffd||64fe|
    inputRows = wkSht.Range(rngInputRows)

    ' |fffd||fffd||fffd||451||582||fffd|
    With wkSht.Sort
        .SortFields.Clear
        ' ASC1|fffd||fffd||143|\|fffd|[|fffd|g
        .SortFields.Add Key:=Range("C" & rowDataStart & ":C" & inputRows) _
                , SortOn:=xlSortOnValues, Order:=xlAscending, DataOption:=xlSortTextAsNumbers
        ' ASC2|fffd||fffd||143|\|fffd|[|fffd|g
        .SortFields.Add Key:=Range("B" & rowDataStart & ":B" & inputRows) _
                , SortOn:=xlSortOnValues, Order:=xlAscending, DataOption:=xlSortNormal

        ' |fffd|\|fffd|[|fffd|g|fffd||348||342||fffd||fffd|w|fffd||fffd|
        .SetRange Range("A" & rowDataStart & ":F" & inputRows)
        .Header = xlNo
        .MatchCase = False
        .Orientation = xlTopToBottom
        .SortMethod = xlPinYin
        .Apply
    End With
End Function
'-----------------------------------------------------------------
'
'   |fffd|z|fffd||fffd||fffd|ALLOC|fffd|f|fffd|[|fffd|^|fffd||fffd||fffd|i|fffd|[
'
'   |fffd|C|fffd|x|fffd||fffd||fffd|g |fffd|F |fffd|z|fffd||fffd||24e||635e||fffd||fffd||fffd||303|f|fffd|[|fffd|^|fffd||fffd||fffd|i|fffd|[|fffd||fffd||fffd||fffd|
'
'   |fffd||fffd||fffd||fffd| : sSheet - |fffd||635e||fffd||fffd||fffd|t|fffd|@|fffd|C|fffd||fffd|
'          lStrCol - |fffd|J|fffd|n|fffd|s
'          lEndCol - |fffd|I|fffd||fffd||fffd|s
'
'   |fffd||7c2||fffd|l : |fffd||fffd||fffd|^|fffd|[|fffd||fffd||fffd|R|fffd|[|fffd|h
'
'-----------------------------------------------------------------
Public Function fSetAllocData(sSheet As Object) As Long
Dim plSLp    As Long     '|fffd|V|fffd|[|fffd|g|fffd||fffd||fffd|[|fffd|v|fffd||3d0||fffd|
Dim plLp    As Long     '|fffd||fffd||fffd|[|fffd|v|fffd||3d0||fffd|
Dim ptDT()  As ALLOC_DT '|fffd|z|fffd||fffd|
Dim plRet   As Long     '|fffd||fffd||fffd|^|fffd|[|fffd||fffd||fffd|R|fffd|[|fffd|h

On Error GoTo Err_trip

'|fffd||fffd||fffd||fffd||fffd||fffd|
plSLp = 2
plLp = 0
plRet = -1

'|fffd|z|fffd||fffd||243|Z|fffd|b|fffd|g
Do
    
    If Trim(sSheet.Cells(plSLp, 1)) = "0" Then
        Exit Do
    Else
    
        ReDim Preserve ptDT(plLp)
    
        ptDT(plLp).ACODE = Trim$(sSheet.Cells(plSLp, 2))    '|fffd|z|fffd||fffd||fffd||fffd||fffd|R|fffd|[|fffd|h
        ptDT(plLp).CODE = Trim$(sSheet.Cells(plSLp, 3))       '|fffd|z|fffd||fffd||fffd||fffd|R|fffd|[|fffd|h
        ptDT(plLp).RATE = Trim$(sSheet.Cells(plSLp, 4))       '|fffd|z|fffd||fffd||fffd||fffd|
        '|fffd|J|fffd|E|fffd||fffd||fffd|g|fffd|A|fffd|b|fffd|v
        plLp = plLp + 1
    End If
    
    '|fffd|J|fffd|E|fffd||fffd||fffd|g|fffd|A|fffd|b|fffd|v
    plSLp = plSLp + 1
Loop

'|fffd|O|fffd||fffd||fffd|[|fffd|o|fffd||fffd||fffd||3d0||fffd||fffd||582||303|Z|fffd|b|fffd|g
gtALDT = ptDT
glALLp = plLp - 1

'|fffd||fffd||fffd|^|fffd|[|fffd||fffd||fffd|R|fffd|[|fffd|h|fffd||303|Z|fffd|b|fffd|g
plRet = plLp
fSetAllocData = plRet

Exit Function

'|fffd|G|fffd||fffd||fffd|[|fffd||fffd||fffd||fffd|
Err_trip:

MsgBox Err.Number & " : " & Err.Description, vbCritical, "Error"
MsgBox plSLp & "|fffd|s|fffd||fffd| " & plSLp2 & "|fffd||fffd||682||315||fffd||fffd||fffd||fffd||12c82||5c2||102||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|B", vbInformation

fSetAllocData = plRet

End Function

'-----------------------------------------------------------------
'
'   |fffd|z|fffd||fffd||fffd|PRJ|fffd|f|fffd|[|fffd|^|fffd||fffd||fffd|i|fffd|[
'
'   |fffd|C|fffd|x|fffd||fffd||fffd|g |fffd|F |fffd|z|fffd||fffd||24e||635e||fffd||fffd||fffd||303|f|fffd|[|fffd|^|fffd||fffd||fffd|i|fffd|[|fffd||fffd||fffd||fffd|
'
'   |fffd||fffd||fffd||fffd| : sSheet - |fffd||635e||fffd||fffd||fffd|t|fffd|@|fffd|C|fffd||fffd|
'
'   |fffd||7c2||fffd|l : |fffd||fffd||fffd|^|fffd|[|fffd||fffd||fffd|R|fffd|[|fffd|h
'
'-----------------------------------------------------------------
Public Function fSetPJTData(sSheet As Object) As Long
Dim plSLp    As Long     '|fffd|V|fffd|[|fffd|g|fffd||fffd||fffd|[|fffd|v|fffd||3d0||fffd|
Dim plLp    As Long     '|fffd||fffd||fffd|[|fffd|v|fffd||3d0||fffd|
Dim ptDT()  As PJT_DT '|fffd|z|fffd||fffd|
Dim plRet   As Long     '|fffd||fffd||fffd|^|fffd|[|fffd||fffd||fffd|R|fffd|[|fffd|h

On Error GoTo Err_trip

'|fffd||fffd||fffd||fffd||fffd||fffd|
plSLp = 3
plLp = 0
plRet = -1

'|fffd|z|fffd||fffd||243|Z|fffd|b|fffd|g
Do
    
    If Trim(sSheet.Cells(plSLp, 1)) = "" Then
        Exit Do
    Else
    
        ReDim Preserve ptDT(plLp)
    
        ptDT(plLp).CODE = Trim$(sSheet.Cells(plSLp, 1))             '|fffd|v|fffd||fffd||fffd|W|fffd|F|fffd|N|fffd|g|fffd|R|fffd|[|fffd|h
        ptDT(plLp).CODE_AD = Trim$(sSheet.Cells(plSLp, 5))          'AD
        ptDT(plLp).CODE_DV1 = Trim$(sSheet.Cells(plSLp, 6))         'DV1
        ptDT(plLp).CODE_DV2 = Trim$(sSheet.Cells(plSLp, 7))         'DV2
        ptDT(plLp).CODE_DV3 = Trim$(sSheet.Cells(plSLp, 8))         'DV3
        ptDT(plLp).CODE_DV4 = Trim$(sSheet.Cells(plSLp, 9))         'DV4
        ptDT(plLp).CODE_DV5 = Trim$(sSheet.Cells(plSLp, 10))        'DV5
        ptDT(plLp).CODE_PS = Trim$(sSheet.Cells(plSLp, 11))         'PS
        
        '|fffd|J|fffd|E|fffd||fffd||fffd|g|fffd|A|fffd|b|fffd|v
        plLp = plLp + 1
    End If
    
    '|fffd|J|fffd|E|fffd||fffd||fffd|g|fffd|A|fffd|b|fffd|v
    plSLp = plSLp + 1
Loop

'|fffd|O|fffd||fffd||fffd|[|fffd|o|fffd||fffd||fffd||3d0||fffd||fffd||582||303|Z|fffd|b|fffd|g
gtPJDT = ptDT
glPJLp = plLp - 1

'|fffd||fffd||fffd|^|fffd|[|fffd||fffd||fffd|R|fffd|[|fffd|h|fffd||303|Z|fffd|b|fffd|g
plRet = plLp
fSetPJTData = plRet

Exit Function

'|fffd|G|fffd||fffd||fffd|[|fffd||fffd||fffd||fffd|
Err_trip:

MsgBox Err.Number & " : " & Err.Description, vbCritical, "Error"
MsgBox plSLp & "|fffd|s|fffd||fffd| " & plSLp2 & "|fffd||fffd||682||315||fffd||fffd||fffd||fffd||12c82||5c2||102||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|B", vbInformation

fSetPJTData = plRet

End Function
'-----------------------------------------------------------------
'
'   |fffd|z|fffd||fffd||fffd||fffd||fffd|`|fffd|F|fffd|b|fffd|N
'
'   |fffd|C|fffd|x|fffd||fffd||fffd|g |fffd|F |fffd|z|fffd||fffd||fffd||fffd||fffd|v|fffd||fffd||fffd|W|fffd|F|fffd|N|fffd|g|fffd||24a|Y|fffd||fffd||fffd||fffd||fffd||90a9||fffd|`|fffd|F|fffd|b|fffd|N
'
'   |fffd||fffd||fffd||fffd| : sCode,tDT
'
'   |fffd||7c2||fffd|l : |fffd||fffd||fffd|^|fffd|[|fffd||fffd||fffd|R|fffd|[|fffd|h
'
'-----------------------------------------------------------------
Public Function fCheckALLOC(sCode As String, tDT() As ALLOC_DT) As Long
Dim ptBDT()     As ALLOC_DT '|fffd|}|fffd|X|fffd|^|fffd|z|fffd||fffd|
Dim plBCnt      As Long     '|fffd|J|fffd|E|fffd||fffd||fffd|g
Dim plBLp       As Long     '|fffd||fffd||fffd|[|fffd|v|fffd||3d0||fffd|
Dim ptDT()      As ALLOC_DT '|fffd||fffd||fffd|^|fffd|[|fffd||fffd||fffd|z|fffd||fffd|
Dim plLp        As Long     '|fffd||fffd||fffd|^|fffd|[|fffd||fffd||fffd||fffd||fffd|[|fffd|v|fffd||3d0||fffd|
Dim plRet       As Long     '|fffd||fffd||fffd|^|fffd|[|fffd||fffd||fffd|R|fffd|[|fffd|h

On Error GoTo Err_trip

'|fffd||fffd||fffd||fffd||fffd||fffd|
plLp = 0
plBLp = 0
plRet = -1
ptBDT() = gtALDT()  '|fffd|}|fffd|X|fffd|^|fffd|z|fffd||fffd||303|Z|fffd|b|fffd|g
plBCnt = glALLp     '|fffd|}|fffd|X|fffd|^|fffd|J|fffd|E|fffd||fffd||fffd|g|fffd||303|Z|fffd|b|fffd|g

'|fffd|}|fffd|X|fffd|^|fffd|`|fffd|F|fffd|b|fffd|N
For plBLp = 0 To plBCnt
    If ptBDT(plBLp).ACODE = sCode Then
        ReDim Preserve ptDT(plLp)
        ptDT(plLp).ACODE = ptBDT(plBLp).ACODE   '|fffd|z|fffd||fffd||fffd||fffd|
        ptDT(plLp).CODE = ptBDT(plBLp).CODE   '|fffd|z|fffd||fffd||fffd||fffd|
        ptDT(plLp).RATE = ptBDT(plBLp).RATE   '|fffd|z|fffd||fffd||fffd||fffd|
        plLp = plLp + 1
    End If
Next

'|fffd||7c2||fffd|l|fffd||243|Z|fffd|b|fffd|g
tDT = ptDT
fCheckALLOC = plLp - 1

Exit Function

'|fffd|G|fffd||fffd||fffd|[|fffd||fffd||fffd||fffd|
Err_trip:

MsgBox Err.Number & " : " & Err.Description, vbCritical, "Error"
MsgBox plSLp & "|fffd|s|fffd||fffd| " & plSLp2 & "|fffd||fffd||682||315||fffd||fffd||fffd||fffd||12c82||5c2||102||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|B", vbInformation

fCheckALLOC = plRet

End Function

'-----------------------------------------------------------------
'
'   |fffd|z|fffd||fffd||fffd||fffd|R|fffd|[|fffd|h|fffd||1c2||751||582||fffd|
'
'   |fffd|C|fffd|x|fffd||fffd||fffd|g |fffd|F |fffd|z|fffd||fffd||fffd||fffd|R|fffd|[|fffd|h|fffd||582||313||1c2||751||582||fffd|
'
'   |fffd||fffd||fffd||fffd| : lInt,tDT,sTiming
'
'   |fffd||7c2||fffd|l : |fffd||fffd||fffd|^|fffd|[|fffd||fffd||fffd|R|fffd|[|fffd|h
'
'-----------------------------------------------------------------
Public Function fReplaceCODE(tDT() As ALLOC_DT, lInt As Long, sTiming As String) As String
Dim ptDT()      As ALLOC_DT '|fffd||fffd||fffd|^|fffd|[|fffd||fffd||fffd|z|fffd||fffd|
Dim plLp        As Long     '|fffd||fffd||fffd|^|fffd|[|fffd||fffd||fffd||fffd||fffd|[|fffd|v|fffd||3d0||fffd|
Dim ptPDT()     As PJT_DT   '|fffd|v|fffd||fffd||fffd|W|fffd|F|fffd|N|fffd|g|fffd|z|fffd||fffd|
Dim plPLp       As Long     '|fffd||fffd||fffd|^|fffd|[|fffd||fffd||fffd||fffd||fffd|[|fffd|v|fffd||3d0||fffd|
Dim plPCnt      As Long     '|fffd|J|fffd|E|fffd||fffd||fffd|g
Dim psRet       As String   '|fffd|z|fffd||fffd|
Dim psTiming    As String   '|fffd|^|fffd|C|fffd|~|fffd||fffd||fffd|O|fffd|i|fffd|[|fffd||3d0||fffd|


On Error GoTo Err_trip

'|fffd||fffd||fffd||fffd||fffd||fffd|
plPLp = 0
plPCnt = glPJLp
ptPDT() = gtPJDT()
psRet = ""
ptDT() = tDT()  '|fffd|}|fffd|X|fffd|^|fffd|z|fffd||fffd||303|Z|fffd|b|fffd|g
plLp = lInt     '|fffd|X|fffd|^|fffd|J|fffd|E|fffd||fffd||fffd|g|fffd||303|Z|fffd|b|fffd|g
psTiming = sTiming  '|fffd|^|fffd|C|fffd|~|fffd||fffd||fffd|O|fffd|Z|fffd|b|fffd|g

'|fffd|}|fffd|X|fffd|^|fffd|`|fffd|F|fffd|b|fffd|N
For plPLp = 0 To plPCnt
    If ptPDT(plPLp).CODE = ptDT(plLp).CODE Then
        'SAP|fffd|v|fffd||fffd||fffd|W|fffd|F|fffd|N|fffd|g|fffd|R|fffd|[|fffd|h|fffd||303|Z|fffd|b|fffd|g
        Select Case psTiming
            Case sConsTIM1
                psRet = ptPDT(plPLp).CODE_AD    'AD
            Case sConsTIM2
                psRet = ptPDT(plPLp).CODE_DV1    'DV
            Case sConsTIM3
                psRet = ptPDT(plPLp).CODE_DV2    'DV
            Case sConsTIM4
                psRet = ptPDT(plPLp).CODE_DV3    'DV
            Case sConsTIM5
                psRet = ptPDT(plPLp).CODE_DV4    'DV
            Case sConsTIM6
                psRet = ptPDT(plPLp).CODE_DV5    'DV
            Case sConsTIM7
                psRet = ptPDT(plPLp).CODE_PS    'PS
        End Select
        
        Exit For
        
    End If
Next

'|fffd||7c2||fffd|l|fffd||243|Z|fffd|b|fffd|g
fReplaceCODE = psRet


Exit Function

'|fffd|G|fffd||fffd||fffd|[|fffd||fffd||fffd||fffd|
Err_trip:

MsgBox Err.Number & " : " & Err.Description, vbCritical, "Error"
MsgBox plSLp & "|fffd|s|fffd||fffd| " & plSLp2 & "|fffd||fffd||682||315||fffd||fffd||fffd||fffd||12c82||5c2||102||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|B", vbInformation

fReplaceCODE = psRet

End Function
'-----------------------------------------------------------------
'
'   InputWorkingMode|fffd||313||fffd||fffd||34b|K|fffd||fffd||fffd||14e|g|fffd||fffd||fffd||348||342||fffd||fffd||64fe||fffd||fffd||fffd||fffd|B
'
'   |fffd||fffd||fffd||fffd| : lInt,tDT,sTiming
'
'   |fffd||7c2||fffd|l : |fffd||fffd||fffd|^|fffd|[|fffd||fffd||fffd|R|fffd|[|fffd|h
'
'-----------------------------------------------------------------
Function FilterInputWorkingModeRange(defaultRange As String, costCenter As String, actType As String) As String
    Dim r As Range
    Dim y As Range
    Dim rngCostCenter As Range
    Dim rngActType As Range
    Dim sheetName As String
    Dim startRow As Long
    Dim endRow As Long
    Dim lastRow As Long
    
    Set r = Range(defaultRange)
    sheetName = r.Worksheet.Name
    startRow = -1
    endRow = -1
    
    ' |fffd||fffd||fffd||fffd||fffd||157|^|fffd||fffd||fffd||fffd||a0bd||fffd||348||342||fffd||fffd||fffd|
    ' costCenter|fffd||fffd|actType|fffd||fffd||fffd||fffd|v|fffd||fffd||fffd||102||fffd||fffd||fffd||348||342||fffd||fffd||fffd||fffd||82||fffd||fffd||fffd|B
    For Each y In r
        Set rngActType = Range(sheetName & "!" & "E" & y.Row)    ' Act type|fffd||fffd||303|Z|fffd||fffd|
        Set rngCostCenter = Range(sheetName & "!" & "H" & y.Row) ' Cost Center|fffd||fffd||303|Z|fffd||fffd|
        lastRow = y.Row
        
        If (actType = "" Or rngActType.Value = actType) And rngCostCenter.Value = costCenter And startRow = -1 Then
            ' |fffd||14f||fffd||fffd||252|l|fffd||fffd||fffd||fffd|v|fffd||fffd||fffd||fffd||fffd|s|fffd||50d||fffd||fffd||fffd||6d1||fffd|
            startRow = lastRow
        End If
        
        If ((actType <> "" And rngActType.Value <> actType) Or rngCostCenter.Value <> costCenter) And startRow <> -1 Then
            ' |fffd||14c||fffd||252|l|fffd||fffd||fffd||fffd|v|fffd||fffd||fffd||fffd||fffd|s|fffd||50d||fffd||fffd||fffd||6d1||fffd|(|fffd||fffd||91|O|fffd||30d|s|fffd|j
            endRow = lastRow - 1
            Exit For
        End If
    Next
    If endRow = -1 Then
        endRow = lastRow
    End If
    
    If startRow = -1 Then
        FilterInputWorkingModeRange = defaultRange
    Else
        FilterInputWorkingModeRange = sheetName & "!" & "C" & startRow & ":" & "C" & endRow
    End If
    
End Function

'-----------------------------------------------------------------
'
'   InputWorkingMode|fffd||313||fffd||fffd||34b|K|fffd||fffd||fffd||14e|g|fffd||fffd||fffd||348||342||fffd||fffd||64fe||fffd||fffd||fffd||fffd|B(Non project)
'
'   |fffd||fffd||fffd||fffd| : lInt,tDT,sTiming
'
'   |fffd||7c2||fffd|l : |fffd||fffd||fffd|^|fffd|[|fffd||fffd||fffd|R|fffd|[|fffd|h
'
'-----------------------------------------------------------------
Function FilterInputWorkingModeRange_NP(defaultRange As String, costCenter As String, actType As String) As String
    Dim r As Range
    Dim y As Range
    Dim rngCostCenter As Range
    Dim rngActType As Range
    Dim sheetName As String
    Dim startRow As Long
    Dim endRow As Long
    Dim lastRow As Long
    
    Set r = Range(defaultRange)
    sheetName = r.Worksheet.Name
    startRow = -1
    endRow = -1
    
    ' |fffd||fffd||fffd||fffd||fffd||157|^|fffd||fffd||fffd||fffd||a0bd||fffd||348||342||fffd||fffd||fffd|
    ' costCenter|fffd||fffd|actType|fffd||fffd||fffd||fffd|v|fffd||fffd||fffd||102||fffd||fffd||fffd||348||342||fffd||fffd||fffd||fffd||82||fffd||fffd||fffd|B
    For Each y In r
        Set rngActType = Range(sheetName & "!" & "D" & y.Row)    ' Act type|fffd||fffd||303|Z|fffd||fffd|
        Set rngCostCenter = Range(sheetName & "!" & "K" & y.Row) ' Cost Center|fffd||fffd||303|Z|fffd||fffd|
        lastRow = y.Row
        
        If (actType = "" Or rngActType.Value = actType) And rngCostCenter.Value = costCenter And startRow = -1 Then
            ' |fffd||14f||fffd||fffd||252|l|fffd||fffd||fffd||fffd|v|fffd||fffd||fffd||fffd||fffd|s|fffd||50d||fffd||fffd||fffd||6d1||fffd|
            startRow = lastRow
        End If
        
        If ((actType <> "" And rngActType.Value <> actType) Or rngCostCenter.Value <> costCenter) And startRow <> -1 Then
            ' |fffd||14c||fffd||252|l|fffd||fffd||fffd||fffd|v|fffd||fffd||fffd||fffd||fffd|s|fffd||50d||fffd||fffd||fffd||6d1||fffd|(|fffd||fffd||91|O|fffd||30d|s|fffd|j
            endRow = lastRow - 1
            Exit For
        End If
    Next
    If endRow = -1 Then
        endRow = lastRow
    End If
    
    If startRow = -1 Then
        FilterInputWorkingModeRange_NP = defaultRange
    Else
        FilterInputWorkingModeRange_NP = sheetName & "!" & "C" & startRow & ":" & "C" & endRow
    End If
    
End Function


Attribute VB_Name = "Sheet1"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Control = "commandbutton, 2, 0, MSForms, CommandButton"
'----------------------------------------
'
'   @) |fffd||fffd||fffd|[|fffd|N|fffd|V|fffd|[|fffd|g|fffd||fffd||3cd|X|fffd||fffd||fffd||fffd||fffd||182||fffd|
'
'
'----------------------------------------

Private Sub Worksheet_Change(ByVal Target As Range)
    
    
    
    
    ' |fffd||48f|W|fffd||fffd||fffd||a0bd||fffd||42a91||38f||6c2||142||202||fffd||fffd||a347||fffd||34f||fffd||fffd||fffd||fffd|I|fffd||fffd|
    If Intersect(Target, Range("$B$" & iStartCol & ":$B$405")) Is Nothing Then
        Exit Sub
    

    
    ' Working Type|fffd||42a95||48f|W|fffd||fffd||fffd||a0bd||fffd||a347|
    Else
    
    'ActiveSheet.Protect UserInterfaceOnly:=True
    
    
        ' 1|fffd|Z|fffd||fffd||fffd||302||755||48f|W|fffd||fffd|
        If Target.Count = 1 Then
            ' Working Type|fffd||fffd||fffd||fffd||fffd||342||fffd||fffd||fffd||101|AActType|fffd||42a83|u|fffd||fffd||fffd||fffd||fffd|N|fffd||30f||a347||fffd|A|fffd||fffd||fffd|[|fffd|U|fffd|[|fffd||fffd|ActType|fffd||fffd||752||fffd|
            If Target <> "" And Trim(Range("J" & Target.Row).Value) = "" Then
                Range("J" & Target.Row).Value = Range(rngActType).Value
            End If

        ' |fffd||fffd||fffd||fffd||fffd|Z|fffd||fffd||fffd||308||a287||fffd||48f|W|fffd||fffd|
        Else
            Dim tg
            For Each tg In Target
                ' Working Type|fffd||fffd||fffd||fffd||fffd||342||fffd||fffd||fffd||101|AActType|fffd||42a83|u|fffd||fffd||fffd||fffd||fffd|N|fffd||30f||a347||fffd|A|fffd||fffd||fffd|[|fffd|U|fffd|[|fffd||fffd|ActType|fffd||fffd||752||fffd|
                If tg <> "" And Trim(Range("J" & tg.Row).Value) = "" Then
                    Range("J" & tg.Row).Value = Range(rngActType).Value
                End If
            Next
        End If
        
    End If
End Sub


'----------------------------------------
'
'   @) |fffd|R|fffd|}|fffd||fffd||fffd|h|fffd|{|fffd|^|fffd||fffd||fffd||fffd||fffd|N|fffd||fffd||fffd|b|fffd|N|fffd||fffd||fffd||fffd||fffd||182||fffd|
'
'
'----------------------------------------
Private Sub commandbutton_Click()

Dim plInput     As Long     '|fffd||fffd||fffd||34f|I|fffd||fffd||fffd|s
Dim plRet       As Long     '|fffd||fffd||fffd|^|fffd|[|fffd||fffd||fffd|R|fffd|[|fffd|h
Dim plStrCol    As Long     '|fffd|J|fffd|n|fffd|s
Dim dateFrom                '|fffd|J|fffd|n|fffd||fffd||fffd|t



'|fffd||fffd||fffd||fffd||fffd||fffd|
psBuf = ""
plInput = 0
plStrCol = iStartCol    '|fffd|J|fffd|n|fffd|s
plRet = 0

If MsgBox("CAT2|fffd||fffd||fffd||fffd||fffd||303|R|fffd|s|fffd|[|fffd|p|fffd|V|fffd|[|fffd|g|fffd||fffd||fffd|X|fffd|V|fffd||fffd||fffd||702||fffd||fffd||fffd|?", vbYesNo + vbQuestion, "Tracking sheet") = vbNo Then
    Exit Sub
End If

'|fffd|I|fffd||fffd||fffd|s|fffd||313||fffd||fffd||fffd|
psBuf = InputBox("|fffd||635e||fffd||74f|I|fffd||fffd||fffd|s|fffd||312|l|fffd||fffd||fffd||fffd||342||fffd||fffd||102||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|B", "|fffd||fffd||fffd||fffd|", 405)

'|fffd||fffd||fffd||fffd||fffd|`|fffd|F|fffd|b|fffd|N
If IsNumeric(psBuf) = False Then
    MsgBox "|fffd||fffd||fffd|l|fffd||fffd||fffd||fffd||342||fffd||fffd||102||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|B", vbExclamation
    Exit Sub
End If

'|fffd||fffd||290||fffd||fffd||fffd|
Application.EnableEvents = False
Application.ScreenUpdating = False
Application.Cursor = xlWait

'|fffd||fffd||fffd||fffd||fffd|v|fffd|Z|fffd||303|I|fffd|t
'ActiveSheet.EnableCalculation = False
Application.Calculation = xlCalculationManual
plInput = psBuf - 5

'|fffd|z|fffd||fffd||583|Z|fffd|b|fffd|g
If plInput = 0 Then
    Exit Sub
Else

    ''***2016/06/10 H.Horie Common|fffd|v|fffd||fffd||fffd|W|fffd|F|fffd|N|fffd|g|fffd||fffd||fffd||fffd||303|R|fffd|X|fffd|g|fffd|z|fffd||fffd||fffd||fffd||fffd||fffd||fffd||312||1c9||fffd|***
    '|fffd|z|fffd||fffd||fffd|}|fffd|X|fffd|^|fffd||314|z|fffd||fffd|Z|fffd|b|fffd|g
    plRet = fSetAllocData(Sheet10)
    If plRet < 0 Then
        Application.Cursor = xlDefault
        Application.ScreenUpdating = True
        Application.EnableEvents = True
        Application.Calculation = xlCalculationAutomatic
        'ActiveSheet.EnableCalculation = True
        MsgBox "|fffd|}|fffd|N|fffd||fffd||fffd||303|G|fffd||fffd||fffd|[|fffd||142||fffd||fffd|B|fffd|G|fffd||fffd||fffd|[|fffd||fffd||fffd|b|fffd|Z|fffd|[|fffd|W|fffd||313||fffd||fffd|e|fffd||fffd||fffd|V|fffd|X|fffd|e|fffd||fffd||fffd|S|fffd||fffd||fffd||482||598|A|fffd||fffd||fffd||fffd||fffd||102||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|B", vbCritical, "Error"
        Exit Sub
    End If
    '|fffd|v|fffd||fffd||fffd|W|fffd|F|fffd|N|fffd|g|fffd|}|fffd|X|fffd|^|fffd||314|z|fffd||fffd|Z|fffd|b|fffd|g
    plRet = fSetPJTData(Sheet7)
    If plRet < 0 Then
        Application.Cursor = xlDefault
        Application.ScreenUpdating = True
        Application.EnableEvents = True
        Application.Calculation = xlCalculationAutomatic
        'ActiveSheet.EnableCalculation = True
        MsgBox "|fffd|}|fffd|N|fffd||fffd||fffd||303|G|fffd||fffd||fffd|[|fffd||142||fffd||fffd|B|fffd|G|fffd||fffd||fffd|[|fffd||fffd||fffd|b|fffd|Z|fffd|[|fffd|W|fffd||313||fffd||fffd|e|fffd||fffd||fffd|V|fffd|X|fffd|e|fffd||fffd||fffd|S|fffd||fffd||fffd||482||598|A|fffd||fffd||fffd||fffd||fffd||102||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|B", vbCritical, "Error"
        Exit Sub
    End If

    plRet = fSetData(Sheet1, plStrCol, plInput) '|fffd|Q|fffd||190||fffd|V|fffd|[|fffd|g
End If

If plRet < 0 Then
    Application.Cursor = xlDefault
    Application.ScreenUpdating = True
    Application.EnableEvents = True
    'ActiveSheet.EnableCalculation = True
    Application.Calculation = xlCalculationAutomatic
    MsgBox "|fffd|}|fffd|N|fffd||fffd||fffd||303|G|fffd||fffd||fffd|[|fffd||142||fffd||fffd|B|fffd|G|fffd||fffd||fffd|[|fffd||fffd||fffd|b|fffd|Z|fffd|[|fffd|W|fffd||313||fffd||fffd|e|fffd||fffd||fffd|V|fffd|X|fffd|e|fffd||fffd||fffd|S|fffd||fffd||fffd||482||598|A|fffd||fffd||fffd||fffd||fffd||102||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|B", vbCritical, "Error"
    Exit Sub
End If

'|fffd|R|fffd|s|fffd|[|fffd||fffd||303|V|fffd|[|fffd|g|fffd|N|fffd||fffd||fffd|A
Call sbClear_sheet(Sheet2)

plRet = 0

'|fffd|R|fffd|s|fffd|[
plRet = fPastData(Sheet2, iStartPos, iStartPos2)

'Sheet1.Cells(2, 2) = ""

If plRet < 0 Then
    Application.Cursor = xlDefault
    Application.ScreenUpdating = True
    Application.EnableEvents = True
    'ActiveSheet.EnableCalculation = True
    Application.Calculation = xlCalculationAutomatic
    MsgBox "|fffd|}|fffd|N|fffd||fffd||fffd||303|G|fffd||fffd||fffd|[|fffd||142||fffd||fffd|B|fffd|G|fffd||fffd||fffd|[|fffd||fffd||fffd|b|fffd|Z|fffd|[|fffd|W|fffd||313||fffd||fffd|e|fffd||fffd||fffd|V|fffd|X|fffd|e|fffd||fffd||fffd|S|fffd||fffd||fffd||482||598|A|fffd||fffd||fffd||fffd||fffd||102||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|B", vbCritical, "Error"
    Exit Sub
    
End If

'|fffd||fffd||fffd||352|l|fffd||30e||64fe||fffd||fffd||fffd|APIVOT_TABLE|fffd|V|fffd|[|fffd|g|fffd||253|]|fffd|L
dateFrom = Sheet1.Range(rngDateFrom).Value
Sheet4.Range(rngPivotDate) = dateFrom
Sheet4.Select

'|fffd|t|fffd|B|fffd||fffd||fffd|^|fffd|[|fffd|@|fffd|\|fffd||fffd||fffd||fffd||fffd|s
Call Module1.CommandButton1_Click(Sheet4)

Application.Cursor = xlDefault
Application.ScreenUpdating = True
Application.EnableEvents = True
'ActiveSheet.EnableCalculation = True
Application.Calculation = xlCalculationAutomatic
MsgBox "CAT2|fffd||fffd||fffd||fffd||fffd||303|R|fffd|s|fffd|[|fffd|p|fffd|V|fffd|[|fffd|g|fffd||fffd||fffd|X|fffd|V|fffd||fffd||fffd||702||fffd||fffd||fffd||fffd|B", vbInformation, "|fffd||fffd||fffd||fffd|"

End Sub
Attribute VB_Name = "Sheet10"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Sheet11"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Sheet12"
Attribute VB_Base = "0{00020819-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Attribute VB_Name = "Sheet13"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Sheet14"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Sheet15"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Sheet16"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Sheet17"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Sheet2"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Sheet20"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Sheet21"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Sheet22"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Sheet23"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Sheet3"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Sheet4"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
'Public Sub clickBtnFilter()
'
'    Call Module1.CommandButton1_Click(Sheet4)
'
'End Sub
Attribute VB_Name = "Sheet5"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Sheet6"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Sheet7"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Sheet8"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Sheet9"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "ThisWorkbook"
Attribute VB_Base = "0{00020819-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True


INQUEST-PP=macro
