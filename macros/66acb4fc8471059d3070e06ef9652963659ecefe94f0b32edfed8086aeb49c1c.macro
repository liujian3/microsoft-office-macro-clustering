Attribute VB_Name = "Module1"
'This is the coding which allows the logo to be customised. The dimensions are statement standard.
Sub UploadPicture()
    ' Set Screen Updating to False
    Application.ScreenUpdating = False
    
    Application.EnableEvents = False
    ' Unlock Sheet
    ActiveSheet.Unprotect ThisWorkbook.CurrPass
    
OppnaStruct
    
    Dim thePictureName As String
    Dim curWks As Worksheet
    Dim myPictName As Variant
    Dim xtop, xleft, xheight, xwidth As Variant
    Dim MyPic As Shape
    
    thePictureName = "NSC_Logo"
    On Error GoTo UploadPicture_Err
    Set curWks = ActiveSheet
    myPictName = Application.GetOpenFilename

    If myPictName = False Then
        'protect sheet
        Application.ScreenUpdating = False
    
        ' Lock
        ActiveSheet.Protect ThisWorkbook.CurrPass
        Exit Sub
        
    End If

    'Delete current Logo
    curWks.Shapes(thePictureName).Select
    
    'Save size settings
    xtop = curWks.Shapes(thePictureName).Top
    xleft = curWks.Shapes(thePictureName).Left
    xheight = curWks.Shapes(thePictureName).Height
    xwidth = curWks.Shapes(thePictureName).Width
    curWks.Shapes(thePictureName).Delete

    'Insert new logo
    ActiveSheet.Range("J2").Select
    Set MyPic = curWks.Shapes.AddPicture(myPictName, _
                msoFalse, msoTrue, xleft, xtop, -1, -1)
    '           LinkTo    SaveWith Location_L&R -1 = keep size
    
    ' Add Attributes
    MyPic.Height = 50
    MyPic.Name = thePictureName
    MyPic.OnAction = "UploadPicture"
    
LasStruct


    Application.EnableEvents = True

    ' Set Screen Updating to True
    Application.ScreenUpdating = True

    ' Lock
    ActiveSheet.Protect ThisWorkbook.CurrPass
    Exit Sub

UploadPicture_Err:
    MsgBox "Upload Image Error ..... " & Err.Description, vbCritical, "Update Logo"

End Sub

Sub MenuReturn()
OppnaStruct
Sheet1.Visible = xlSheetVisible
Sheet1.Select
Sheet1.Range("NetSur_Meny").Select
'Sheets("Menu").Select
'Range("MenuRtrn").Select
LasStruct
End Sub
Private Sub OppnaStruct()
    ThisWorkbook.Unprotect "CreditPolicy1"
 End Sub
 
Private Sub LasStruct()
    ThisWorkbook.Protect "CreditPolicy1", True, True
 End Sub
Attribute VB_Name = "Module2"





' Key movement behaviour Sheet3

Sub MoveDownKey()

If ActiveWorkbook.Name <> ThisWorkbook.Name Then
    Application.OnKey "{TAB}"
    Application.OnKey "{RETURN}"
    Application.OnKey "{ENTER}"
    Application.OnKey "{DOWN}"
   Exit Sub
End If

Application.EnableEvents = False
'Application.ScreenUpdating = False

Dim i As Integer
Dim i2 As Integer

Dim theDropDownColor As Long
Dim theInputFieldColor As Long
Dim theInputFieldColor_Alternative_1 As Long

i = 0
i2 = 1

theDropDownColor = 13431551
theInputFieldColor = 10092543
theInputFieldColor_Alternative_1 = 9699327

If (ActiveCell.Address = Range("EndOfInput").Address Or _
(ActiveCell.Row > Range("EndOfInput").Row And ActiveCell.Column < Range("EndOfInput").Column)) Then

'Do Nothing

Else

    Do While ActiveCell.Offset(i, i2).Locked = True And _
        (Range("EndOfInput").Address <> ActiveCell.Offset(i, i2).Address And ActiveCell.Row <= Range("EndOfInput").Row) And i < 400
        
        Do While ActiveCell.Offset(i, i2).Locked = True And _
        (Range("EndOfInput").Address <> ActiveCell.Offset(i, i2).Address And ActiveCell.Row <= Range("EndOfInput").Row) And i2 < 11
        
            i2 = i2 + 1
        Loop
        
        If (i2 >= 11) Then
            i = i + 1
            i2 = 1
            i2 = i2 - ActiveCell.Column
        Else
            'i2 = i2 + 1
        End If
    
        If (ActiveCell.Offset(i, i2).EntireRow.Hidden = True) Then
            Do While (ActiveCell.Offset(i, i2).EntireRow.Hidden = True)
                i = i + 1
            Loop

        End If

    Loop
    
    If (Range("EndOfInput").Address = ActiveCell.Offset(i, i2).Address) Then
        Application.EnableEvents = True
        ActiveCell.Offset(i, i2).Select
    Else
        ActiveCell.Offset(i, i2).Select
    End If

End If
    
Application.EnableEvents = True
'Application.ScreenUpdating = True

End Sub


Attribute VB_Name = "Module3"
Sub REFI()
Attribute REFI.VB_Description = "Macro recorded 16/11/2006 by JF"
Attribute REFI.VB_ProcData.VB_Invoke_Func = " \n14"
'
' REFI Macro
' Macro recorded 16/11/2006 by JF
'

'
    Application.CommandBars("Stop Recording").Visible = False
    ActiveCell.FormulaR1C1 = ""
    Range("E15").Select
    ActiveWindow.SmallScroll Down:=-15
    Range("G20:O20").Select
    Selection.Hyperlinks(1).Follow NewWindow:=False, AddHistory:=True
    ActiveWindow.SmallScroll Down:=-6
    Range("F55").Select
    ActiveWindow.SmallScroll Down:=-3
End Sub
Attribute VB_Name = "Module4"
Sub Print_preview()
Attribute Print_preview.VB_ProcData.VB_Invoke_Func = " \n14"
'
' Print_preview Macro
'

'
    Sheets(Array("Net Surplus Calculator")).PrintPreview
    Sheets("Net Surplus Calculator").Select
    Range("A1").Select
    
    
End Sub
Attribute VB_Name = "Sheet1"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Control = "MenuExit, 2, 0, MSForms, CommandButton"

Private Sub Worksheet_BeforeRightClick(ByVal Target As Range, _
 Cancel As Boolean)
    If ActiveSheet.ProtectContents Then
        ' Do Nothing
    Else
           ActiveSheet.Protect "" ' Locking Mek
    End If
End Sub
Private Sub Worksheet_SelectionChange(ByVal Target As Range)
    If ActiveSheet.ProtectContents Then
        ' Do Nothing
    Else
           ActiveSheet.Protect "" ' Locking Mek
    End If
End Sub

Private Sub HELP_Click()
'Not used
OppnaStruct
Sheets("Macro Instructions").Select

    Sheet9.Visible = xlSheetVisible
    Sheet1.Visible = xlSheetVeryHidden
    Sheet9.Select
LasStruct
End Sub

Private Sub MenuExit_Click()
'MsgBox "By selecting the Exit Button the calculator will prompt you to save a copy of the file", vbOKOnly, "Information"

ActiveWorkbook.Close (True)

If Not ActiveWorkbook.Saved Then
    MsgBox "This workbook contains unsaved changes."
    ActiveWorkbook.Close (False)
End If

End Sub


Sub GoBet_Meny_Click()
OppnaStruct
    Sheet5.Visible = xlSheetVisible
    Sheet1.Visible = xlSheetVeryHidden
    Sheet5.Select
LasStruct
End Sub

Private Sub OppnaStruct()
    ThisWorkbook.Unprotect "CreditPolicy1"
 End Sub
 
Private Sub LasStruct()
    ThisWorkbook.Protect "CreditPolicy1", True, True
 End Sub
Attribute VB_Name = "Sheet13"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Sheet5"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Control = "chkEstablishedDwelling, 12446, 0, MSForms, CheckBox"
Attribute VB_Control = "chkConstruction, 12447, 1, MSForms, CheckBox"
Attribute VB_Control = "chkYes, 12448, 2, MSForms, CheckBox"
Attribute VB_Control = "chkNo, 12449, 3, MSForms, CheckBox"
Attribute VB_Control = "chk12Mths, 12467, 4, MSForms, CheckBox"
Dim xReset As Boolean


Private Sub Worksheet_BeforeRightClick(ByVal Target As Range, _
 Cancel As Boolean)
    If ActiveSheet.ProtectContents Then
        ' Do Nothing
    Else
           ActiveSheet.Protect "" ' Locking Mek
    End If
End Sub
Private Sub Worksheet_SelectionChange(ByVal Target As Range)
    If ActiveSheet.ProtectContents Then
        ' Do Nothing
    Else
           ActiveSheet.Protect "" ' Locking Mek
    End If
End Sub

Function IsFormula(MyCell As Range) As Boolean
    ' Unlock
    Sheet5.Unprotect ThisWorkbook.CurrPass
    IsFormula = MyCell.HasFormula
    ' Lock
    Sheet5.Protect ThisWorkbook.CurrPass
End Function

Sub Calculate2_Click()
    ' Unlock
    Sheet5.Unprotect ThisWorkbook.CurrPass
    Rows("55:58").Select
    Selection.EntireRow.Hidden = False
    ' Lock
    Sheet5.Protect ThisWorkbook.CurrPass
End Sub

Sub Calculate_GoBet_Click()
        Call CheckingEntries1
End Sub

'NS removed 6 month option as at 11/07/07

'Private Sub chk6Mths_Click()
'If chk6Mths.Value = True Then
    'chk12Mths.Enabled = True
    'chk12Mths.Value = False
    'Range("J47").Value = "2"
    'Range("IIntRate").Select
    'Call InterestRatesCheck
'End If
'End Sub

Sub chk12Mths_Click()

    ' Unlock
    Sheet5.Unprotect ThisWorkbook.CurrPass
    
If chk12Mths.Value = True Then
'NS removed 6 month option as at 11/07/07
    'chk6Mths.Enabled = True
    'chk6Mths.Value = False
    Range("J47").Value = "1"
    Range("IIntRate").Select
End If

    ' Lock
    Sheet5.Protect ThisWorkbook.CurrPass
    
End Sub

Sub chkYes_Click()

    ' Unlock
    Sheet5.Unprotect ThisWorkbook.CurrPass

If chkYes.Value = True Then
    chkNo.Enabled = True
    chkNo.Value = False
    Range("InitialIntRate").Select
    ' Unlock
    Sheet5.Unprotect ThisWorkbook.CurrPass
    Selection.EntireRow.Hidden = False
    Range("IIntRate").Select
End If
    ' Lock
    Sheet5.Protect ThisWorkbook.CurrPass
End Sub

Sub chkNo_Click()

    ' Unlock
    Sheet5.Unprotect ThisWorkbook.CurrPass

If chkNo.Value = True Then
    chkYes.Enabled = True
    chkYes.Value = False
    'NS removed 6 month option as at 11/07/07
    'chk6Mths.Value = False
    chk12Mths.Value = False
    
    ' Unlock
    Sheet5.Unprotect ThisWorkbook.CurrPass
    
    Range("InitialIntRate").EntireRow.Hidden = True
    ' Unlock
    Sheet5.Unprotect ThisWorkbook.CurrPass
    Range("LoanInterestRate").Select
End If
    ' Lock
    Sheet5.Protect ThisWorkbook.CurrPass
End Sub

Sub cmdCalcSellingCosts_Click()

    ' Unlock
    Sheet5.Unprotect ThisWorkbook.CurrPass

    If Range("SoldValue").Value = 0 Then
       MsgBox "Please enter a property to be sold value", vbOKOnly, "ERROR"
       Range("SoldValue").Select
    Else
       Range("SellingCosts").Value = Range("SoldValue") * 0.05
    End If
    ' Lock
    Sheet5.Protect ThisWorkbook.CurrPass
End Sub

Sub CmdMenu2_Click()
    'Call CmdReset_Click
    Call MenuReturn
End Sub

Sub CmdReset_Click()

OppnaStruct

    ' Unlock
    Sheet5.Unprotect ThisWorkbook.CurrPass
    Sheet5.Range("endDebtPrompt").Value = ""
    
      Application.ScreenUpdating = False
    Dim xRange As Range
    xReset = True
    
    For Each xRange In Range("Print_GoBetween")
        If Not xRange.Locked Then
            If Not IsFormula(xRange) Then
                xRange.Value = ""
            End If
        End If
    Next

chkEstablishedDwelling.Value = False
chkConstruction.Value = False
'references to 'no' twice to hide the range
chkNo.Value = True
chkNo.Value = False
    ' Unlock
    Sheet5.Unprotect ThisWorkbook.CurrPass
Sheet5.Range("PeakDebtResults").EntireRow.Hidden = True
Sheet5.Range("EndDebtResults").EntireRow.Hidden = True
Sheet5.Range("EstablishedDwelling").EntireRow.Hidden = True
Sheet5.Range("Construction").EntireRow.Hidden = True

Range("SoldValue").Select

  Application.ScreenUpdating = True
    ' Lock
    Sheet5.Protect ThisWorkbook.CurrPass

LasStruct

End Sub

Sub Worksheet_Deactivate()
OppnaStruct
    If Sheet5.Range("TotalLoanRequired") = 0 Then
        Sheet5.Visible = xlSheetVeryHidden
    End If
LasStruct
End Sub



Private Sub OppnaStruct()
    ThisWorkbook.Unprotect "CreditPolicy1"
 End Sub
 
Private Sub LasStruct()
    ThisWorkbook.Protect "CreditPolicy1", True, True
 End Sub


Sub chkConstruction_Click()


'This deselects the other option box and places a figure for calculation purposes in the sheet.
        If chkConstruction.Value = True Then
            Call ClearFields
    ' Unlock
    Sheet5.Unprotect ThisWorkbook.CurrPass
    
            Sheet5.Range("EstablishedDwelling").EntireRow.Hidden = True
                Sheet5.Range("Construction").EntireRow.Hidden = False
                    chkEstablishedDwelling.Enabled = True
                    chkEstablishedDwelling.Value = False
            Sheet5.Range("AddSecurity").Select
    ' Unlock
    Sheet5.Unprotect ThisWorkbook.CurrPass
            Sheet5.Range("PropertyType").Value = "C"
            Sheet5.Range("interestRateLabel").Value = "12 Months Interest on Loan"
            Sheet5.Range("endDebtPrompt").Value = "Construction - Minimum Net Surplus Ratio 1.25 must be applied, unless unconditional contract is held on the property to be sold."
            
            Call ValidateCheckBoxes
            
            Range("PurchPriceLand").Select
        End If
    ' Lock
    Sheet5.Protect ThisWorkbook.CurrPass
End Sub

Sub chkEstablishedDwelling_Click()


'This deselects the other option box and places a figure for calculation purposes in the sheet.
        If chkEstablishedDwelling.Value = True Then
            Call ClearFields
    ' Unlock
    Sheet5.Unprotect ThisWorkbook.CurrPass
    
            Sheet5.Range("Construction").EntireRow.Hidden = True
                Sheet5.Range("EstablishedDwelling").EntireRow.Hidden = False
                    chkConstruction.Enabled = True
                    chkConstruction.Value = False
                    
            Range("AddSecurity").Select
    ' Unlock
    Sheet5.Unprotect ThisWorkbook.CurrPass
            Sheet5.Range("PropertyType").Value = "C"
            Sheet5.Range("interestRateLabel").Value = "6 Months Interest on Loan"
            Sheet5.Range("endDebtPrompt").Value = "Established Dwelling - Minimum Net Surplus Ratio 1.15 must be applied, unless unconditional contract is held on the property to be sold."
            
            Sheet5.Range("PurchPrice").Select
            End If
    ' Lock
    Sheet5.Protect ThisWorkbook.CurrPass
End Sub

Sub ClearFields()

    ' Unlock
    Sheet5.Unprotect ThisWorkbook.CurrPass

    Sheet5.Range("PropertyType").Value = ""
    Sheet5.Range("interestRateLabel").Value = ""
    ' Lock
    Sheet5.Protect ThisWorkbook.CurrPass
End Sub


Sub ValidateCheckBoxes()

Dim displayError As Boolean

    ' Unlock
    Sheet5.Unprotect ThisWorkbook.CurrPass

displayError = False

    If chkConstruction.Value = True And Range("Refin1").Value > 0 Then
        displayError = True
    End If
   
    If displayError = True Then
        ans1 = MsgBox("Interest starts capitalising on a Go-Between Building Loan from the day the first drawdown occurs. Refinancing an existing loan as part of the Go-Between Building Loan means that the customer only has 12 months from the day the refinance settles NOT from the day the first progress payment for the construction is made before they are required to either reduce their loan to the end debt or commence repayments on the peak debt.", vbOKCancel, "WARNING - Interest Capitalisation Commences on Day of Refinance")
            If ans1 = 1 Then
               Range("PurchPriceLand").Select
            Else
                If ans1 = 2 Then
                   Range("Refin1").Select
                End If
            End If
    End If
    ' Lock
    Sheet5.Protect ThisWorkbook.CurrPass
End Sub



Sub CheckingEntries1()
' This macro runs through the sheet and checks if values are entered in vital cells.

Dim ShowResults As Boolean

    ' Unlock
    Sheet5.Unprotect ThisWorkbook.CurrPass

displayShowResults = False


            If Range("SoldValue").Value = 0 Then
               Range("SoldValue").Select
               MsgBox "Please enter a property to be sold value", vbOKOnly, "ERROR"
               displayShowResults = True
            End If
            
            If chkConstruction.Value = False And chkEstablishedDwelling.Value = False Then
               Range("SoldValue").Select
               MsgBox "Please select either Established Dwelling or Construction and enter the relevant details", vbOKOnly, "ERROR"
               displayShowResults = True
            End If
            
            If chkEstablishedDwelling.Value = True And Range("PurchPrice").Value = 0 Then
               Range("PurchPrice").Select
               MsgBox "Please enter a Purchase Price", vbOKOnly, "ERROR"
               displayShowResults = True
            End If
            
            If chkConstruction.Value = True And Range("ConstContrPrice").Value = 0 Then
               Range("ConstContrPrice").Select
               MsgBox "Please enter a Construction/Contract Price", vbOKOnly, "ERROR"
               displayShowResults = True
            End If
            
            'If Range("E11").Value > 0 And Range("Refin1").Value > 0 Then
               'Range("Refin1").Select
               'MsgBox "Please enter a value in either Outstanding Loan Amount or Loan Amount to be Refinanced", vbOKOnly, "ERROR"
               'displayShowResults = True
            'End If
            
            'If Range("E35").Value > 0 And Range("G35").Value > 0 Then
               'Range("G35").Select
               'MsgBox "Please enter a value in either Outstanding Loan Amount or Loan Amount to be Refinanced", vbOKOnly, "ERROR"
               'displayShowResults = True
            'End If
            
            
            If Range("LoanInterestRate").Value = 0 Then
               Range("LoanInterestRate").Select
               MsgBox "Please enter an Interest Rate", vbOKOnly, "ERROR"
               displayShowResults = True
            End If
            
           
            If Range("SellingCosts").Value = 0 Then
               Range("SellingCosts").Select
               MsgBox "Please either press the Calculate Selling Costs button or enter actual value (if known)", vbOKOnly, "ERROR"
               displayShowResults = True
            End If
            
            'NS removed 6 month option as at 11/07/07
            'If chk6Mths.Value = True And Range("IIntRate").Value = 0 Then
               'MsgBox "Interest has only been calculated over a 6 month period please enter a roll to rate", vbOKOnly, "ERROR"
               'displayShowResults = True
            'End If
                      
            If chkEstablishedDwelling.Value = True And Range("Refin1").Value > Range("SoldValue") = True Then
               Range("SoldValue").Select
               MsgBox "Loan Amount to be refinanced cannot exceed property value", vbOKOnly, "ERROR"
               displayShowResults = True
            Else
            
                If chkConstruction.Value = True And Range("Refin1").Value > Range("SoldValue") = True Then
                   Range("SoldValue").Select
                   MsgBox "Loan Amount to be refinanced cannot exceed property value", vbOKOnly, "ERROR"
                   displayShowResults = True
                End If
            End If
                                    
            If chkEstablishedDwelling.Value = True And Range("IIntRate").Value > 0 And Range("LoanInterestRate").Value > 0 Then
               MsgBox "The interest capitalisation period is equal to the initial interest rate period. The Initial Interest Rate has been used in the capitalised interest calculation.", vbOKOnly, "Information"
            End If


    ' Unlock
    Sheet5.Unprotect ThisWorkbook.CurrPass

            If Range("PeekDebtLVR").Value > 0.8 Then
               MsgBox "Note: Peak Debt LVR must be less than or equal to 80%.", vbOKOnly, "ERROR"
               displayShowResults = True
            End If
            
            If Range("EndDebtLVR").Value > 1 Then
               MsgBox "Note: End Debt LVR must be less than or equal to 100%.", vbOKOnly, "ERROR"
               displayShowResults = True
            End If


    ' Unlock
    Sheet5.Unprotect ThisWorkbook.CurrPass
If displayShowResults = False Then
        Range("PeakDebtResults").EntireRow.Hidden = False
        Range("EndDebtResults").EntireRow.Hidden = False
        Range("RetainedFunds").Select
Else
    If displayShowResults = True Then
        Range("PeakDebtResults").EntireRow.Hidden = True
        Range("EndDebtResults").EntireRow.Hidden = True
        
        Range("SoldValue").Select
        
    End If
End If
            

    ' Lock
    Sheet5.Protect ThisWorkbook.CurrPass

End Sub


Sub InterestRatesCheck()

    ' Unlock
    Sheet5.Unprotect ThisWorkbook.CurrPass

    If chkConstruction.Value = True And chk6Mths.Value = True Then
       MsgBox "Please enter an initial interest rate and a Loan Interest Rate", vbOKOnly, "Help"
    End If
    ' Lock
    Sheet5.Protect ThisWorkbook.CurrPass
End Sub

'The macros below include the message boxes for the help text.
'They are activated by the i button next to each maintainable field

Sub Value1()

    ' Unlock
    Sheet5.Unprotect ThisWorkbook.CurrPass

    MsgBox "Value - Customer's estimate of the value of the property they currently reside in (existing property)", vbOKOnly, "Information"
    Range("SoldValue").Select
    ' Lock
    Sheet5.Protect ThisWorkbook.CurrPass
End Sub

Sub LnAmt_LnRefin1()

    ' Unlock
    Sheet5.Unprotect ThisWorkbook.CurrPass

    MsgBox "Outstanding Loan Amount - The current balance of any existing loan(s) which are secured by this property and will remain open for the duration of the Go-Between period. The loan(s) may be with ABL or other financial institutions.                                                                                                                                                                                                                                                  Loan amount to be Refinanced - The amount required to payout any existing loan(s) which are secured by this property and will be refinanced as part of the Go-between Loan. This includes loans with ABL or other financial institutions. Note: Interest will start capitalising on the loan from day on which the refinance is settled. ", vbOKOnly, "Information"
    Range("Refin1").Select
    ' Lock
    Sheet5.Protect ThisWorkbook.CurrPass
End Sub

Sub PurchasePrice()

    ' Unlock
    Sheet5.Unprotect ThisWorkbook.CurrPass

    MsgBox "Purchase Price - The price of the property being purchased (without any fees, transfer costs etc) ", vbOKOnly, "Information"
    Range("PurchPrice").Select
    ' Lock
    Sheet5.Protect ThisWorkbook.CurrPass
End Sub

Sub Deposit1()

    ' Unlock
    Sheet5.Unprotect ThisWorkbook.CurrPass

    MsgBox "Less deposit paid - Amount paid by the customer as a deposit for the property being purchased. Any additional customer contributions should also be included in this section.", vbOKOnly, "Information"
    Range("PurchDeposit").Select
    ' Lock
    Sheet5.Protect ThisWorkbook.CurrPass
End Sub

Sub LandPurchase()

    ' Unlock
    Sheet5.Unprotect ThisWorkbook.CurrPass

    MsgBox "Land Purchase - The price of the land being purchased (without any fees, transfer costs). Note: Interest will start capitalising on the loan from settlement of the land purchase.", vbOKOnly, "Information"
    Range("PurchPriceLand").Select
    ' Lock
    Sheet5.Protect ThisWorkbook.CurrPass
End Sub

Sub Deposit2()

    ' Unlock
    Sheet5.Unprotect ThisWorkbook.CurrPass

    MsgBox "Less deposit paid - Amount paid by the customer as a deposit for the land being purchased. Any additional customer contributions should also be included in this section.", vbOKOnly, "Information"
    Range("Cust_Deposit").Select
    ' Lock
    Sheet5.Protect ThisWorkbook.CurrPass
End Sub

Sub Const_ContrPrice()

    ' Unlock
    Sheet5.Unprotect ThisWorkbook.CurrPass

    MsgBox "Construction/Contract Price - The cost to complete construction as per the building contract.", vbOKOnly, "Information"
    Range("ConstContrPrice").Select
    ' Lock
    Sheet5.Protect ThisWorkbook.CurrPass
End Sub

Sub AddSec_Value()

    ' Unlock
    Sheet5.Unprotect ThisWorkbook.CurrPass

    MsgBox "Value - Customer's estimate of the value of the property to be used as additional security.", vbOKOnly, "Information"
    Range("AddSecurity").Select
    ' Lock
    Sheet5.Protect ThisWorkbook.CurrPass
End Sub

Sub LnAmt_LnRefin2()

    ' Unlock
    Sheet5.Unprotect ThisWorkbook.CurrPass

    MsgBox "Outstanding Loan Amount - The current balance of any existing loan(s) which are secured by this property and will remain open for the duration of the Go-Between period. This includes loans with ABL or other financial institutions.                                                                                                                                                                                                                                                  Loan amount to be Refinanced - The amount required to payout any existing loan(s), which are secured by this property and will be refinanced as part of the Go-between Loan. This includes loans with ABL or other financial institutions. Note: Interest will start capitalising on the loan from on which the refinance is settled.", vbOKOnly, "Information"
    Range("Refin2").Select
    ' Lock
    Sheet5.Protect ThisWorkbook.CurrPass
End Sub

Sub Fees_Charges()

    ' Unlock
    Sheet5.Unprotect ThisWorkbook.CurrPass

    MsgBox "Loan Fees/Charges - The fees/costs associated with purchasing land/property. This includes all bank & government charges that the customer will need to borrow.", vbOKOnly, "Information"
    Range("AddLnFees").Select
    ' Lock
    Sheet5.Protect ThisWorkbook.CurrPass
End Sub

Sub Other()

    ' Unlock
    Sheet5.Unprotect ThisWorkbook.CurrPass

    MsgBox "Other - any additional funds the customer will require as part of the Go-Between Loan.", vbOKOnly, "Information"
    Range("AddLnOther").Select
    ' Lock
    Sheet5.Protect ThisWorkbook.CurrPass
End Sub

Sub InitialInterestRate()

    ' Unlock
    Sheet5.Unprotect ThisWorkbook.CurrPass

    MsgBox "Initial Interest Rate - enter the initial/introductory rate for the Go-Between Loan", vbOKOnly, "Information"
    Range("IIntRate").Select
    ' Lock
    Sheet5.Protect ThisWorkbook.CurrPass
End Sub

Sub InterestRate()

    ' Unlock
    Sheet5.Unprotect ThisWorkbook.CurrPass

    MsgBox "Loan Interest Rate - enter the applicable rate/rollover rate for the Go-Between Loan", vbOKOnly, "Information"
    Range("LoanInterestRate").Select
    ' Lock
    Sheet5.Protect ThisWorkbook.CurrPass
End Sub

Sub SellingCosts()

    ' Unlock
    Sheet5.Unprotect ThisWorkbook.CurrPass

    MsgBox "Selling costs - input actual amount, if known or press button to calculate at 5% of property to be sold value ", vbOKOnly, "Information"
    Range("SellingCosts").Select
    ' Lock
    Sheet5.Protect ThisWorkbook.CurrPass
End Sub

Sub FundsRetained()

    ' Unlock
    Sheet5.Unprotect ThisWorkbook.CurrPass

    MsgBox "Funds to be retained by Borrower/s - any funds the borrowers may want to keep from the net sales proceeds.", vbOKOnly, "Information"
    Range("RetainedFunds").Select
    ' Lock
    Sheet5.Protect ThisWorkbook.CurrPass
End Sub

Sub LMICap()

    ' Unlock
    Sheet5.Unprotect ThisWorkbook.CurrPass

    MsgBox "Please enter the amount of LMI to be borrowed i.e. capitalised", vbOKOnly, "Information"
    Range("AddLnLMI").Select
    ' Lock
    Sheet5.Protect ThisWorkbook.CurrPass
End Sub




Attribute VB_Name = "Sheet9"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True

Private Sub CmdMenu4_Click()
    Call MenuReturn
End Sub
Attribute VB_Name = "ThisWorkbook"
Attribute VB_Base = "0{00020819-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True

Public CurrVar As String
Public Unpro As String

Public CurrPass As String


Private Sub Workbook_Activate()

    Dim LAS As Boolean
                    LAS = True   ' ***************************
    CurrPass = ""
    Dim XWorkSheet As Worksheet
    CurrVar = CurrPass
    Unpro = CurrPass
  '  Unpro = ""
      OppnaStruct   ' **@@&&## ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ' LOCK
    If (LAS) Then
        For Each XWorkSheet In ActiveWorkbook.Sheets
            If XWorkSheet.ProtectContents Then
                ' DO NOTHING
            Else
                XWorkSheet.Protect Password:=CurrVar, UserInterfaceOnly:=True
            End If
            If (Sheet1.Name <> XWorkSheet.Name) Then
                XWorkSheet.Visible = xlSheetVeryHidden
            Else
                XWorkSheet.Visible = xlSheetVisible
            End If
        Next
    ' UNLOCK
    Else
        For Each XWorkSheet In ActiveWorkbook.Sheets
            If XWorkSheet.ProtectContents Then
                XWorkSheet.Unprotect Password:=Unpro
            Else
                ' DO NOTHING
            End If
            XWorkSheet.Visible = xlSheetVisible
        Next
    ' END LOCK
    End If
    'Set file attribute to read only to ensure noone can change it.
    ActiveWorkbook.Saved = True

    'Code to ensure that the menu sheet is selected when the workbook is opened.
    Sheet1.Visible = xlSheetVisible
   '     Sheet1.Select
   '     Sheet1.Range("A1").Select

      LasStruct   ' **@@&&## ^^^^^^^^^^^^^^^^^^^^^^^^^^^^

End Sub
'When you need to change file name please ensure that read only attribute text is updated
'Make sure userinterface operates correctly when changes are made which may include manually protecting each sheet (with unlocked cells only selected)

Private Sub OppnaStruct()
    ThisWorkbook.Unprotect "CreditPolicy1"
 End Sub
 
Private Sub LasStruct()
    ThisWorkbook.Protect "CreditPolicy1", True, True
 End Sub



Private Sub Workbook_BeforeSave(ByVal SaveAsUI As Boolean, Cancel As Boolean)

    If SaveAsUI = True Then
        MsgBox "This NS Calculator MUST NOT be saved in .xlsx (Excel Workbook (*.xlsx)) format. Please save this file in either .xls (Excel 97-2003 Workbook) or .xlsm (Excel Macro-Enabled Workbook) format."
        'Cancel = True
        'MsgBox Not "Workbook Not Saved"
    Else
        'MsgBox "You have clicked Save. Workbook Saved."
    End If

End Sub


Private Sub Workbook_Deactivate()
    Application.OnKey "{TAB}"
    Application.OnKey "{ENTER}"
    Application.OnKey "{RETURN}"
    Application.OnKey "{DOWN}"
End Sub


Private Sub Workbook_BeforeClose(Cancel As Boolean)
    Application.OnKey "{TAB}"
    Application.OnKey "{ENTER}"
    Application.OnKey "{RETURN}"
    Application.OnKey "{DOWN}"
End Sub




Sub GetTheItemName()
'MsgBox Range(Selection.Address).Item(Selection.Row, Selection.Column)
'MsgBox Range(Selection.Address).AddressLocal.Name
MsgBox Selection.Item(1).Name.Name
End Sub





INQUEST-PP=macro
