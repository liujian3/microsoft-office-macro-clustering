Attribute VB_Name = "Module1"
Attribute VB_Name = "Sheet1"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Option Explicit

Private Const INTERNET_OPEN_TYPE_PRECONFIG = 0
Private Const INTERNET_OPEN_TYPE_DIRECT = 1
Private Const INTERNET_OPEN_TYPE_PROXY = 3

Private Const scUserAgent = "VB Project"
Private Const INTERNET_FLAG_RELOAD = &H80000000

Private Declare Function InternetOpen Lib "wininet.dll" _
  Alias "InternetOpenA" (ByVal sAgent As String, _
  ByVal lAccessType As Long, ByVal sProxyName As String, _
  ByVal sProxyBypass As String, ByVal lFlags As Long) As Long

Private Declare Function InternetOpenUrl Lib "wininet.dll" _
  Alias "InternetOpenUrlA" (ByVal hOpen As Long, _
  ByVal sUrl As String, ByVal sHeaders As String, _
  ByVal lLength As Long, ByVal lFlags As Long, _
  ByVal lContext As Long) As Long

Private Declare Function InternetReadFile Lib "wininet.dll" _
  (ByVal hFile As Long, ByVal sBuffer As String, _
   ByVal lNumBytesToRead As Long, lNumberOfBytesRead As Long) _
  As Integer

Private Declare Function InternetCloseHandle _
   Lib "wininet.dll" (ByVal hInet As Long) As Integer

Private Function OpenURL(ByVal sUrl As String) As String

    Dim hOpen               As Long
    Dim hOpenUrl            As Long
    Dim bDoLoop             As Boolean
    Dim bRet                As Boolean
    Dim sReadBuffer         As String * 2048
    Dim lNumberOfBytesRead  As Long
    Dim sBuffer             As String
    Dim query               As String
    Dim fullstring          As String
    Dim longquery           As Boolean
        
       
hOpen = InternetOpen(scUserAgent, INTERNET_OPEN_TYPE_PRECONFIG, _
    vbNullString, vbNullString, 0)
    
    query = ActiveCell.Row

hOpenUrl = InternetOpenUrl(hOpen, sUrl, vbNullString, 0, _
   INTERNET_FLAG_RELOAD, 0)
   
   If query > 13 Then longquery = True
   If Len(fullstring) > 26 Then longquery = True
      
    bDoLoop = True
    
    While bDoLoop
        sReadBuffer = vbNullString
        bRet = InternetReadFile(hOpenUrl, sReadBuffer, _
           Len(sReadBuffer), lNumberOfBytesRead)
        sBuffer = sBuffer & Left$(sReadBuffer, _
             lNumberOfBytesRead)
        If Not CBool(lNumberOfBytesRead) Then bDoLoop = False
        If longquery Then sBuffer = bDoLoop
    Wend
             
    If hOpenUrl <> 0 Then InternetCloseHandle (hOpenUrl)
    If hOpen <> 0 Then InternetCloseHandle (hOpen)
    OpenURL = sBuffer
    
    If longquery Then OpenURL = Mid(sBuffer, Len(sBuffer), 1)

End Function

Sub check_keyword()
Attribute check_keyword.VB_Description = "Check current keyword position in Google"
Attribute check_keyword.VB_ProcData.VB_Invoke_Func = " \n14"

Dim searchresults As String

Dim googlestring1 As String
Dim googlestring2 As String
Dim googlequeryurl As String

Dim keyword As String
Dim domain As String

Dim firstfindlocation As String
Dim firstfindstring As String

Dim rank As Integer
Dim page As String

googlestring1 = "http://www.google.com/ie?q="
googlestring2 = "&num=100"

If ActiveCell.Row < 8 Then End
  
keyword = Cells(ActiveCell.Row, 2)
keyword = Replace(keyword, " ", "+", 1)

If keyword = "" Then End

domain = Range("B5:B5").Value

If Cells(ActiveCell.Row, 3) <> "" Then domain = Cells(ActiveCell.Row, 3)
   
If domain = "" Then
    MsgBox "You must specify either a default domain or a domain for this keyword."
    End
End If


'domain = Replace(domain, "http://", "", 1)


googlequeryurl = googlestring1 & keyword & googlestring2

Cells(ActiveCell.Row, 5).Value = Cells(ActiveCell.Row, 4).Value
Cells(ActiveCell.Row, 4).Value = "Checking..."

searchresults = OpenURL(googlequeryurl)

firstfindlocation = InStr(1, searchresults, domain)

If firstfindlocation > 0 Then

    firstfindstring = Right(searchresults, (Len(searchresults) - firstfindlocation))

    rank = Val(Mid$(firstfindstring, InStr(1, firstfindstring, "<NOBR>") + 6, 3)) - 1
        
    firstfindlocation = InStr(1, searchresults, domain & "/")
        
    firstfindstring = Right(searchresults, (Len(searchresults) - firstfindlocation))
    
    page = Mid(firstfindstring, Len(domain), InStr(1, firstfindstring, ">") - Len(domain))
    
    'page = Mid(firstfindstring, Len(domain), InStr(1, firstfindstring, ">") - Len(domain))
    
    'page = "http://" & Mid(firstfindstring, 1, InStr(1, firstfindstring, ">"))
    'page = "http://" & Mid(firstfindstring, 1, InStr(1, firstfindstring, ">") - 1)
    
    If page = "/" Then page = "/ (site root)"
        
    If rank = -1 Then rank = 100
    
    If rank = 0 Then rank = 100

    Cells(ActiveCell.Row, 4).Value = rank
    
    If Val(Cells(ActiveCell.Row, 5).Value) = 0 Or Val(Cells(ActiveCell.Row, 4).Value) = 0 Then
        Cells(ActiveCell.Row, 6).Value = "N/A"
    Else
       Cells(ActiveCell.Row, 6).Value = Cells(ActiveCell.Row, 5).Value - Cells(ActiveCell.Row, 4).Value
    End If
    
change_continue:
    On Error GoTo 0
        
    Cells(ActiveCell.Row, 7).Value = page
    
Else
    
    Cells(ActiveCell.Row, 4).Value = "Not Found"
    Cells(ActiveCell.Row, 6).Value = "N/A"
    Cells(ActiveCell.Row, 7).Value = "None"

End If

    Cells(ActiveCell.Row, 8).Value = Date
    

End Sub

Private Sub CheckBox1_Click()

If CheckBox1.Value = True Then Sheet1.Columns("c").ColumnWidth = 25
If CheckBox1.Value = False Then Sheet1.Columns("c").ColumnWidth = 0


End Sub


Private Sub Worksheet_Change(ByVal Target As Range)
    
If Target.Column = 3 Or Target.Column = 2 Then
    
    Cells(Target.Row, Target.Column).Hyperlinks.Delete
    
End If
    
    
End Sub


Private Sub Worksheet_BeforeDoubleClick(ByVal Target As Range, Cancel As Boolean)

If ActiveCell.Column = 1 Then check_keyword

End Sub
Attribute VB_Name = "Sheet2"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Sheet3"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "ThisWorkbook"
Attribute VB_Base = "0{00020819-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True

Private Sub Workbook_BeforeSave(ByVal SaveAsUI As Boolean, Cancel As Boolean)
    
    Range("e1:e4").Font.Color = QBColor(2)
    Range("e1:e4").Font.Size = 8
    Application.OnTime Now, "ThisWorkbook.CheckSave"
    
End Sub

Public Sub CheckSave()
    
        Range("e1:e4").Font.Size = 5
        Range("e1:e4").Font.Color = QBColor(15)

End Sub


Private Sub Workbook_Open()
         
    Range("e1:e4").Font.Size = 5
    Range("e1:e4").Font.Color = QBColor(15)
                           
End Sub

Private Sub Workbook_SheetSelectionChange(ByVal Sh As Object, ByVal Target As Excel.Range)

If Target.Row > 13 And ActiveCell.Column = 1 Then
    MsgBox "Trial Version is Limited to 6 Keywords" & Chr(13) & Chr(13) & "Visit www.keywordranker.com to purchase."

    End
End If


If ActiveCell.Column = 1 Then Sheet1.check_keyword
    
    
    
End Sub

Sub CheckBox4_Click()

If Sheet1.Columns("c").ColumnWidth > 0 Then
    Sheet1.Columns("c").ColumnWidth = 0
    End
End If

    Sheet1.Columns("c").ColumnWidth = 25

End Sub


INQUEST-PP=macro
