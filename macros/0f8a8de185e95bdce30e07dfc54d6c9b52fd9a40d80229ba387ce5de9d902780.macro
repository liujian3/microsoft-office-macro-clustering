Attribute VB_Name = "Module1"
Option Explicit
Sub ISTMacro(excelFile As String, GGG As Integer, MMM As Integer)
Attribute ISTMacro.VB_Description = "Macro recorded 04.11.2013 by ."
Attribute ISTMacro.VB_ProcData.VB_Invoke_Func = " \n14"
    
    Windows(excelFile).Activate
    Worksheets(1).Select
    ActiveSheet.Range("A1").Select
    
    Application.DisplayAlerts = False
    Dim wksht As Worksheet
  
      For Each wksht In Sheets
        Sheets(wksht.Name).Select
        Dim red As Long
        red = Last(1, ActiveSheet.Cells)
        Dim vred
        Dim r As Long
        Dim kk As Long
        
        For r = 1 To red
            Dim kol As Long 'ISTASA
            kol = ActiveSheet.Cells(r, ActiveSheet.Columns.Count).End(xlToLeft).Column
            Dim niz() As String
            If ActiveWorkbook.Worksheets(wksht.Name).Cells(r, kol).Value <> Empty Then
                Dim strg As String
                strg = ""
                vred = ActiveWorkbook.Worksheets(wksht.Name).Cells(r, kol).Value
                If Len(vred) > 0 And InStr(vred, "ISTASA") > 0 Then
                    vred = Replace(vred, "ISTASA;", "")
                    niz = Split(vred, ";")
                    Dim i As Long
                    For i = LBound(niz) To UBound(niz)
                        If niz(i) = "B" Then
                            ActiveWorkbook.Worksheets(wksht.Name).Rows(r).Font.bold = True
                        End If
                        If niz(i) = "P" Then
                            ActiveWorkbook.Worksheets(wksht.Name).Rows(r).Font.Underline = True
                        End If
                        If niz(i) = "I" Then
                            ActiveWorkbook.Worksheets(wksht.Name).Rows(r).Font.Italic = True
                        End If
                        If InStr(niz(i), "V") > 0 Then
                            Dim vis As String
                            vis = Replace(niz(i), "V", "")
                            If vis <> "" Then
                                ActiveWorkbook.Worksheets(wksht.Name).Rows(r).RowHeight = CInt(vis)
                            Else
                                ActiveWorkbook.Worksheets(wksht.Name).Rows(r).RowHeight = 20
                            End If
                        End If
                        If InStr(niz(i), "FS") > 0 Then
                            Dim fs As String
                            fs = Replace(niz(i), "FS", "")
                            If fs <> "" Then
                                ActiveWorkbook.Worksheets(wksht.Name).Rows(r).Font.Size = CInt(fs)
                            End If
                        End If
                        If InStr(niz(i), "C") > 0 Then
                            Dim sel As String
                            Dim rng As Range
                            sel = "A" + Trim(Str(r)) + ":" + ConvertToLetter(kol) + Trim(Str(r))
                            'sel = Replace(sel, " ", "")
                            For kk = 1 To kol
                                vred = ActiveWorkbook.Worksheets(wksht.Name).Cells(r, kk).Value
                                If Len(vred) = 0 Then ActiveWorkbook.Worksheets(wksht.Name).Cells(r, kk).Value = Space(0)
                            Next
                            Set rng = ActiveWorkbook.Worksheets(wksht.Name).Range(sel)
                            rng.HorizontalAlignment = xlCenterAcrossSelection
                        End If
                        
                        If InStr(niz(i), "R") > 0 Then
                            niz(i) = Replace(niz(i), "R", "")
                            If InStr(niz(i), "[") > 0 Then
                                niz(i) = Replace(niz(i), "[", "")
                                niz(i) = Replace(niz(i), "]", "")
                                    sel = "A" + Trim(Str(r)) + ":" + ConvertToLetter(kol) + Trim(Str(r))
                                    'sel = Replace(sel, " ", "")
                                    For kk = 1 To kol
                                        vred = ActiveWorkbook.Worksheets(wksht.Name).Cells(r, kk).Value
                                        If Len(vred) = 0 Then
                                            If niz(i) <> "" Then
                                                ActiveWorkbook.Worksheets(wksht.Name).Cells(r, kk).Value = niz(i)
                                            Else
                                                ActiveWorkbook.Worksheets(wksht.Name).Cells(r, kk).Value = Space(0)
                                            End If
                                            sel = ConvertToLetter(kk) + Str(r)
                                            sel = Replace(sel, " ", "")
                                            Set rng = ActiveWorkbook.Worksheets(wksht.Name).Range(sel)
                                            rng.NumberFormat = "@"
                                            rng.HorizontalAlignment = xlRight
                                        End If
                                    Next
                            End If
                        End If
                        
                        If InStr(niz(i), "K") = 1 Then
                            Dim pom As String
                            pom = Replace(niz(i), "K", "")
                            Dim s As Long
                            Dim kojaKolona As String
                            For s = 1 To 3
                                If IsNumeric(Left(pom, s)) = False Then Exit For
                            Next
                            If s - 1 = 0 Then
                                kojaKolona = "1"
                            Else
                                kojaKolona = Left(pom, s - 1)
                            End If
                            
                            niz(i) = Replace(niz(i), "K" + kojaKolona, "")
                            kk = CInt(kojaKolona)
                            
                            If InStr(niz(i), "I") > 0 Then
                                niz(i) = Replace(niz(i), "I", "")
                                ActiveWorkbook.Worksheets(wksht.Name).Cells(r, kk).Font.Italic = True
                            End If
                            If InStr(niz(i), "B") > 0 Then
                                niz(i) = Replace(niz(i), "B", "")
                                ActiveWorkbook.Worksheets(wksht.Name).Cells(r, kk).Font.bold = True
                            End If
                            If InStr(niz(i), "P") > 0 Then
                                niz(i) = Replace(niz(i), "P", "")
                                ActiveWorkbook.Worksheets(wksht.Name).Cells(r, kk).Font.Underline = True
                            End If
                            If InStr(niz(i), "U") > 0 Then
                                niz(i) = Replace(niz(i), "U", "")
                                vred = ActiveWorkbook.Worksheets(wksht.Name).Cells(r, kk).Value
                                ActiveWorkbook.Worksheets(wksht.Name).Cells(r, kk).Value = UCase(vred)
                            End If
                            If InStr(niz(i), "N") > 0 Then
                                Dim uvuci As String
                                uvuci = Replace(niz(i), "N", "")
                                If uvuci <> "" Then
                                    vred = ActiveWorkbook.Worksheets(wksht.Name).Cells(r, kk).Value
                                    ActiveWorkbook.Worksheets(wksht.Name).Cells(r, kk).Value = Space(5 * CInt(uvuci)) + vred
                                End If
                            End If
                           If InStr(niz(i), "FO") > 0 Then
                                niz(i) = Replace(niz(i), "FO", "")
                                ActiveWorkbook.Worksheets(wksht.Name).Cells(r, kk).Font.Color = vbRed
                            End If
                            If InStr(niz(i), "TO") > 0 Then
                                niz(i) = Replace(niz(i), "TO", "")
                                ActiveWorkbook.Worksheets(wksht.Name).Cells(r, kk).Interior.Color = vbRed
                            End If
                            If InStr(niz(i), "FA") > 0 Then
                                niz(i) = Replace(niz(i), "FA", "")
                                ActiveWorkbook.Worksheets(wksht.Name).Cells(r, kk).Font.Color = vbBlue
                            End If
                            If InStr(niz(i), "TA") > 0 Then
                                niz(i) = Replace(niz(i), "TA", "")
                                ActiveWorkbook.Worksheets(wksht.Name).Cells(r, kk).Interior.Color = vbBlue
                            End If
                           If InStr(niz(i), "FG") > 0 Then
                                niz(i) = Replace(niz(i), "FG", "")
                                ActiveWorkbook.Worksheets(wksht.Name).Cells(r, kk).Font.Color = vbGreen
                            End If
                            If InStr(niz(i), "TG") > 0 Then
                                niz(i) = Replace(niz(i), "TG", "")
                                ActiveWorkbook.Worksheets(wksht.Name).Cells(r, kk).Interior.Color = vbGreen
                            End If
                            If InStr(niz(i), "FM") > 0 Then
                                niz(i) = Replace(niz(i), "FM", "")
                                ActiveWorkbook.Worksheets(wksht.Name).Cells(r, kk).Font.Color = vbMagenta
                            End If
                            If InStr(niz(i), "TM") > 0 Then
                                niz(i) = Replace(niz(i), "TM", "")
                                ActiveWorkbook.Worksheets(wksht.Name).Cells(r, kk).Interior.Color = vbMagenta
                            End If
                            If InStr(niz(i), "[") > 0 Then
                                niz(i) = Replace(niz(i), "[", "")
                                niz(i) = Replace(niz(i), "]", "")
                                sel = ConvertToLetter(kk) + Str(r)
                                sel = Replace(sel, " ", "")
                                Set rng = ActiveWorkbook.Worksheets(wksht.Name).Range(sel)
                                rng.NumberFormat = "@"
                                rng.HorizontalAlignment = xlRight
                                If niz(i) <> "" Then
                                    ActiveWorkbook.Worksheets(wksht.Name).Cells(r, kk).Value = niz(i)
                                Else
                                    ActiveWorkbook.Worksheets(wksht.Name).Cells(r, kk).Value = Space(0)
                                End If
                            End If
                        End If
                    Next i 'u okviru ISTASA
                    'obrisi polednju kolonu
                    ActiveWorkbook.Worksheets(wksht.Name).Cells(r, kol).Value = Space(0)
                End If
            End If 'If Len(vred) > 0 And InStr(niz(i), "ISTASA") > 0 Then
        Next r  'red
    Next wksht


    Worksheets(1).Select
    ActiveSheet.Range("A1").Select
     
    ActiveWorkbook.Save
    ActiveWindow.Close
    
    Windows("ISTMacro.xls").Activate
    ActiveWindow.Close
    Application.DisplayAlerts = True
End Sub
Function ConvertToLetter(iCol As Long) As String

   ConvertToLetter = Split(Cells(, iCol).Address, "$")(1)

'   Dim iAlpha As Long
'   Dim iRemainder As Long
'   iAlpha = Int(iCol / 27)
'   iRemainder = iCol - (iAlpha * 26)
'   If iAlpha > 0 Then
'      ConvertToLetter = Chr(iAlpha + 64)
'   End If
'   If iRemainder > 0 Then
'      ConvertToLetter = ConvertToLetter & Chr(iRemainder + 64)
'   End If
End Function
Function Last(choice As Long, rng As Range)
' 1 = last row Last(1, ActiveSheet.Cells)
' 2 = last column (R1C1) Last(2, ActiveSheet.Cells)
' 3 = last cell  Last(3, ActiveSheet.Cells)
' 4 = last column (A1) Last(4, ActiveSheet.Cells)
    Dim lrw As Long
    Dim lcol As Long

    Select Case choice
    Case 1:
        On Error Resume Next
        Last = rng.Find(What:="*", _
                        After:=rng.Cells(1), _
                        LookAt:=xlPart, _
                        LookIn:=xlFormulas, _
                        SearchOrder:=xlByRows, _
                        SearchDirection:=xlPrevious, _
                        MatchCase:=False).Row
        On Error GoTo 0

    Case 2:
        On Error Resume Next
        Last = rng.Find(What:="*", _
                        After:=rng.Cells(1), _
                        LookAt:=xlPart, _
                        LookIn:=xlFormulas, _
                        SearchOrder:=xlByColumns, _
                        SearchDirection:=xlPrevious, _
                        MatchCase:=False).Column
        On Error GoTo 0

    Case 3:
        On Error Resume Next
        lrw = rng.Find(What:="*", _
                       After:=rng.Cells(1), _
                       LookAt:=xlPart, _
                       LookIn:=xlFormulas, _
                       SearchOrder:=xlByRows, _
                       SearchDirection:=xlPrevious, _
                       MatchCase:=False).Row
        lcol = rng.Find(What:="*", _
                        After:=rng.Cells(1), _
                        LookAt:=xlPart, _
                        LookIn:=xlFormulas, _
                        SearchOrder:=xlByColumns, _
                        SearchDirection:=xlPrevious, _
                        MatchCase:=False).Column
        Last = Cells(lrw, lcol).Address(False, False)
        If Err.Number > 0 Then
            Last = rng.Cells(1).Address(False, False)
            Err.Clear
        End If
        On Error GoTo 0
    Case 4:
        On Error Resume Next
        Last = rng.Find(What:="*", _
                        After:=rng.Cells(1), _
                        LookAt:=xlPart, _
                        LookIn:=xlFormulas, _
                        SearchOrder:=xlByColumns, _
                        SearchDirection:=xlPrevious, _
                        MatchCase:=False).Column
        On Error GoTo 0
        Last = R1C1converter("R1C" & Last, 1)
        Dim i As Long
        Dim s As String
        Dim s1 As String
        For i = 1 To Len(Last)
            s = Mid(Last, i, 1)
            If Not s Like "#" Then s1 = s1 & s
        Next i
        Last = s1

    End Select

End Function

Function R1C1converter(Address As String, Optional R1C1_output As Long, Optional RefCell As Range) As String
    'Converts input address to either A1 or R1C1 style reference relative to RefCell
    'If R1C1_output is xlR1C1, then result is R1C1 style reference.
    'If R1C1_output is xlA1 (or missing), then return A1 style reference.
    'If RefCell is missing, then the address is relative to the active cell
    'If there is an error in conversion, the function returns the input Address string
    Dim x As Variant
    If RefCell Is Nothing Then Set RefCell = ActiveCell
    If R1C1_output = xlR1C1 Then
        x = Application.ConvertFormula(Address, xlA1, xlR1C1, , RefCell) 'Convert A1 to R1C1
    Else
        x = Application.ConvertFormula(Address, xlR1C1, xlA1, , RefCell) 'Convert R1C1 to A1
    End If
    If IsError(x) Then
        R1C1converter = Address
    Else
        'If input address is A1 reference and A1 is requested output, then Application.ConvertFormula
        'surrounds the address in single quotes.
        If Right(x, 1) = "'" Then
            R1C1converter = Mid(x, 2, Len(x) - 2)
        Else
            x = Application.Substitute(x, "$", "")
            R1C1converter = x
        End If
    End If
End Function

Attribute VB_Name = "Module2"
Sub tttt()

End Sub
Attribute VB_Name = "Sheet1"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "ThisWorkbook"
Attribute VB_Base = "0{00020819-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True


INQUEST-PP=macro
