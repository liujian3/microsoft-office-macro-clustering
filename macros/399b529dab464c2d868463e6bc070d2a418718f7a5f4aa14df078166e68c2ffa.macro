Attribute VB_Name = "Bericht"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "DRUCK"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True

Attribute VB_Name = "Daten"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "DieseArbeitsmappe"
Attribute VB_Base = "0{00020819-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Option Explicit

Dim zz As Integer
Dim speicherpfadbackup
Dim zaehler


Private WithEvents m_Menu1 As CommandBarButton
Attribute m_Menu1.VB_VarHelpID = -1
Private WithEvents m_Menu2 As CommandBarButton
Attribute m_Menu2.VB_VarHelpID = -1
Private WithEvents m_Menu3 As CommandBarButton
Attribute m_Menu3.VB_VarHelpID = -1
Private WithEvents m_Menu4 As CommandBarComboBox
Attribute m_Menu4.VB_VarHelpID = -1
Private WithEvents m_Menu5 As CommandBarComboBox
Attribute m_Menu5.VB_VarHelpID = -1
Private WithEvents m_Menu6 As CommandBarButton
Attribute m_Menu6.VB_VarHelpID = -1

Private Sub m_Menu1_Click( _
ByVal Ctrl As Office.CommandBarButton, _
CancelDefault As Boolean _
)
Zurueck
CancelDefault = True
End Sub

Private Sub m_Menu2_Click( _
ByVal Ctrl As Office.CommandBarButton, _
CancelDefault As Boolean _
)
Startx
CancelDefault = True
End Sub

Private Sub m_Menu3_Click( _
ByVal Ctrl As Office.CommandBarButton, _
CancelDefault As Boolean _
)
Vorwaerts
CancelDefault = True
End Sub

Private Sub m_Menu4_change( _
ByVal Ctrl As Office.CommandBarComboBox)

Auswahl
'CancelDefault = True
End Sub

Private Sub m_Menu5_change( _
ByVal Ctrl As Office.CommandBarComboBox)

Auswahl2
'CancelDefault = True
End Sub



Private Sub m_Menu6_Click( _
ByVal Ctrl As Office.CommandBarButton, _
CancelDefault As Boolean _
)
Hilfe2
CancelDefault = True
End Sub



Private Sub Workbook_Activate()
Dim cb As CommandBar

For Each cb In Application.CommandBars
 If cb.Name = "Haufe-V" Then Exit Sub
Next cb
SymbolLeisteErstellen
If ThisWorkbook.BuiltinDocumentProperties("Category").Value <> "" Then
ActiveWindow.Caption = "Haufe_" & ThisWorkbook.sheets("Startseite").Range("B1").Value & "_" & ThisWorkbook.BuiltinDocumentProperties("Category").Value
Else
ActiveWindow.Caption = "Haufe_" & ThisWorkbook.sheets("Startseite").Range("B1").Value
End If
StatusleisteEdit
Application.CommandBars("ply").Enabled = False

Set m_Menu1 = Application.CommandBars("Haufe-V").Controls(1) ' zur|fffd|ck
Set m_Menu2 = Application.CommandBars("Haufe-V").Controls(2) ' Hause
Set m_Menu3 = Application.CommandBars("Haufe-V").Controls(3) ' vor
Set m_Menu4 = Application.CommandBars("Haufe-V").Controls(7) ' Tabellenauswahl
Set m_Menu5 = Application.CommandBars("Haufe-V").Controls(16) ' Optionen
Set m_Menu6 = Application.CommandBars("Haufe-V").Controls(18)


SpeichernWeg
End Sub

Private Sub Workbook_BeforeClose(Cancel As Boolean)
Dim i As Integer

Application.ScreenUpdating = False
On Error Resume Next
SymbolLeisteLoeschen
SpeichernDa


'Tabellen und Diagramme ausblenden
sheets("Makro_Deakt").Visible = True
For i = 1 To ThisWorkbook.sheets.Count
 If sheets(i).CodeName <> "MakroDeakt" Then
  sheets(i).Visible = xlSheetVeryHidden
 End If
Next i


ThisWorkbook.Save
Application.ScreenUpdating = True
End Sub

Private Sub Workbook_BeforePrint(Cancel As Boolean)

If ActiveSheet.Name = "Startseite" Then
'START.Shapes("Picture 15").Visible = False
End If

End Sub

Private Sub Workbook_BeforeSave(ByVal SaveAsUI As Boolean, Cancel As Boolean)
Dim strDat As String
Dim VarDat As Variant
Dim strName As String
Dim s As String

If ThisWorkbook.BuiltinDocumentProperties("Category").Value <> "" Then
ActiveWindow.Caption = "Haufe_" & ThisWorkbook.sheets("Startseite").Range("B1").Value & "_" & ThisWorkbook.BuiltinDocumentProperties("Category").Value
Else
ActiveWindow.Caption = "Haufe_" & ThisWorkbook.sheets("Startseite").Range("B1").Value
End If

'Online-Variante
If InStr(ThisWorkbook.Path, "Temporary Internet Files") > 0 Then

'Hier H. Sproll versuchen wir die Date zu killen
On Error Resume Next
Kill ThisWorkbook.Path & "\Temporary Internet Files\" & ThisWorkbook.BuiltinDocumentProperties("Category") & ".xls"

zaehler = InStr(ThisWorkbook.Path, "Temporary Internet Files") - 1
speicherpfadbackup = Mid(ThisWorkbook.Path, 1, zaehler)
End If
speicherpfadbackup = Mid(ThisWorkbook.Path, 1, zaehler) & "\" & ThisWorkbook.BuiltinDocumentProperties("Category") & ".xls"
'Hier H. Sproll findet der Vergleich statt
'If speicherpfadbackup = ThisWorkbook.FullName Then
'  ChDir "C:\"
'  CurDir "c:\"
'  Application.EnableEvents = False
'  Application.Dialogs(xlDialogSaveAs).Show "C:\"
'  Application.EnableEvents = True
'  Exit Sub
'End If


 
'MIME-Variante
strName = Left(ThisWorkbook.Name, Len(ThisWorkbook.Name) - 4)
If InStr(UCase(ThisWorkbook.FullName), "MIME\") > 0 Then
 If MsgBox("Bitte speichern Sie diese Datei au|fffd|erhalb des installierten Produktes " & vbLf & _
 "in einem Verzeichnis Ihrer Wahl - es besteht sonst die Gefahr, dass von " & vbLf & _
 "Ihnen eingegebene Daten bei einem Produktupdate verloren gehen.", vbOKCancel + vbInformation) = vbOK Then
 
 ChDir "C:\"
 CurDir "c:\"

 Application.EnableEvents = False
 s = Application.GetSaveAsFilename
 If s = "Falsch" Then
 Application.EnableEvents = True
 Cancel = True
 Exit Sub
 Else
  If InStr(UCase(CurDir), "MIME\") > 0 Then
    MsgBox "Bitte speichern Sie diese Datei au|fffd|erhalb des installierten Produktes " & vbLf & _
   "in einem Verzeichnis Ihrer Wahl - es besteht sonst die Gefahr, dass von " & vbLf & _
   "Ihnen eingegebene Daten bei einem Produktupdate verloren gehen.", vbInformation
   Cancel = True
   Application.EnableEvents = True
   Exit Sub
  Else
  On Error Resume Next
  ThisWorkbook.SaveAs s
  End If
 End If
 
 Application.EnableEvents = True
 SaveAsUI = True
 Cancel = True
  Else
  Cancel = True
   SaveAsUI = False
 End If


 End If

EreignisAn
End Sub

Private Sub Workbook_Deactivate()
Application.CommandBars("ply").Enabled = True
SymbolLeisteLoeschen
'ActiveWindow.Caption = ""
Application.StatusBar = False
SpeichernDa
End Sub

Private Sub Workbook_NewSheet(ByVal Sh As Object)
Application.CommandBars("Haufe-V").Controls(7).AddItem Sh.Name
End Sub

Private Sub Workbook_Open()
Dim Blatt As Worksheet
Dim i As Integer
Dim VBEObj As Object
Dim Verweis As Object
Dim b As Boolean
Dim rs As Object

b = False
'Tabellen und Diagramme ausblenden
For i = 1 To ThisWorkbook.sheets.Count
 If sheets(i).Columns(256).Hidden = True Then
 Else
  sheets(i).Visible = True
 End If
 
Next i
sheets("Makro_Deakt").Visible = xlSheetVeryHidden

'|fffd|bersicht.Range("IV1").Value = ""
'|fffd|bersicht.Range("IV2").Value = ""


On Error Resume Next
'Test gleich beim |fffd|ffnen - lokal speichern
If InStr(ThisWorkbook.Path, "Temporary Internet Files") > 0 Then
zaehler = InStr(ThisWorkbook.Path, "Temporary Internet Files") - 1
speicherpfadbackup = Mid(ThisWorkbook.Path, 1, zaehler)
Application.DisplayAlerts = False
Application.DisplayStatusBar = False
ThisWorkbook.SaveAs speicherpfadbackup & ThisWorkbook.BuiltinDocumentProperties("Category")
Application.DisplayStatusBar = True
Application.DisplayAlerts = True
End If



'F|fffd|r Excel 2007 - Zoom auf Hilfe-Seite hochsetzen, damit Grafiken richtig angezeigt werden
If Application.Version = "12.0" Then
Application.ScreenUpdating = False
 HILFE.Activate
 ActiveWindow.Zoom = 100
 START.Activate
Application.ScreenUpdating = True
End If

sheets("Startseite").Activate
'Sheets("Startseite").ScrollArea = "$A$1:$D$37"
SymbolLeisteErstellen
SymbolleisteSchuetzen
StatusleisteEdit
ActiveWindow.Caption = ThisWorkbook.sheets("Startmen|fffd|").Range("B1").Value & "_" & ThisWorkbook.BuiltinDocumentProperties("Category").Value
ThisWorkbook.sheets("VERLAUF").Cells(1, 1).Value = "START"
ThisWorkbook.sheets("VERLAUF").Cells(1, 2).Value = 1
ThisWorkbook.sheets("VERLAUF").Range("A2:A65536").ClearContents


For Each Blatt In ThisWorkbook.Worksheets

 If Blatt.Visible = True Then
 
  Blatt.DisplayPageBreaks = False
 End If

Next Blatt

Set m_Menu1 = Application.CommandBars("Haufe-V").Controls(1) ' zur|fffd|ck
Set m_Menu2 = Application.CommandBars("Haufe-V").Controls(2) ' Hause
Set m_Menu3 = Application.CommandBars("Haufe-V").Controls(3) ' vor
Set m_Menu4 = Application.CommandBars("Haufe-V").Controls(7) ' Tabellenauswahl
Set m_Menu5 = Application.CommandBars("Haufe-V").Controls(16) ' Optionen
Set m_Menu6 = Application.CommandBars("Haufe-V").Controls(18)


SpeichernWeg
Application.CommandBars("ply").Enabled = False
ActiveWindow.DisplayWorkbookTabs = False

On Error Resume Next
START.Shapes("TextMakro").Visible = False


End Sub

Private Sub Workbook_SheetActivate(ByVal Sh As Object)
 ThisWorkbook.sheets("VERLAUF").Cells(ThisWorkbook.sheets("VERLAUF").Range("A65536").End(xlUp).Row + 1, 1).Value = Sh.Name
 zz = zz + 1
 ThisWorkbook.sheets("VERLAUF").Cells(1, 2).Value = zz
 On Error Resume Next
   Sh.Range("A5").Select
 
'Listbox synchronisieren
LBSynchron
Application.CommandBars("Haufe-V").Controls(7).Text = Sh.Name
Sh.DisplayPageBreaks = False
End Sub










Attribute VB_Name = "GeFa"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "GefahrNote"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "HILFE"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True

Attribute VB_Name = "HILFE1"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True

Attribute VB_Name = "ICONS"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True

Attribute VB_Name = "MakroDeakt"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "START"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True



Private Sub Worksheet_SelectionChange(ByVal Target As Range)
If Target.Address <> "$C$12:$E$12" Then Exit Sub

Dialoganzeigen
End Sub
Attribute VB_Name = "SchuMa"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "TABVORLAGE"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True



Attribute VB_Name = "Tabelle1"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Tabelle3"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Termine"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "UntGef"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "VERLAUF"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True

Attribute VB_Name = "dlg_Beurteilung"
Attribute VB_Base = "0{AE481FD3-AB91-4C72-9D67-772E53BB02C3}{DBAF8509-4C8E-4602-9E90-F5679025C41C}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Private Sub img_ge_lv_Click()
' Wahrscheinlichkeit: Gering, Schadensschwere: Leichte Verletzungen
' Farbe: gr|fffd|n
  sheets("Steuerung").Cells(1, 1).Value = "gruen"
  Unload Me
End Sub

Private Sub img_ge_mk_Click()
' Wahrscheinlichkeit: Mittel, Schadensschwere: M|fffd|glicher Tod
' Farbe: rot
  sheets("Steuerung").Cells(1, 1).Value = "rot"
  Unload Me
End Sub

Private Sub img_ge_mv_Click()
' Wahrscheinlichkeit: Gering, Schadensschwere: Mittelschwere Verletzungen
' Farbe: gelb
  sheets("Steuerung").Cells(1, 1).Value = "gelb"
  Unload Me
End Sub

Private Sub img_ge_sv_Click()
' Wahrscheinlichkeit: Mittel, Schadensschwere: Schwere Verletzungen
' Farbe: gelb
  sheets("Steuerung").Cells(1, 1).Value = "gelb"
  Unload Me
End Sub

Private Sub img_ho_lv_Click()
' Wahrscheinlichkeit: Hoch, Schadensschwere: Leichte Verletzungen
' Farbe: gelb
  sheets("Steuerung").Cells(1, 1).Value = "gelb"
  Unload Me
End Sub

Private Sub img_ho_mk_Click()
' Wahrscheinlichkeit: Hoch, Schadensschwere: M|fffd|glicher Tod
' Farbe: rot
  sheets("Steuerung").Cells(1, 1).Value = "rot"
  Unload Me
End Sub

Private Sub img_ho_mv_Click()
' Wahrscheinlichkeit: Hoch, Schadensschwere: Mittelschwere Verletzungen
' Farbe: rot
  sheets("Steuerung").Cells(1, 1).Value = "rot"
  Unload Me
End Sub

Private Sub img_ho_sv_Click()
' Wahrscheinlichkeit: Hoch, Schadensschwere: Schwere Verletzungen
' Farbe: rot
  sheets("Steuerung").Cells(1, 1).Value = "rot"
  Unload Me
End Sub

Private Sub img_mi_lv_Click()
' Wahrscheinlichkeit: Mittel, Schadensschwere: Leichte Verletzungen
' Farbe: gelb
  sheets("Steuerung").Cells(1, 1).Value = "gelb"
  Unload Me
End Sub

Private Sub img_mi_mk_Click()
' Wahrscheinlichkeit: Mittel, Schadensschwere: M|fffd|glicher Tod
' Farbe: rot
  sheets("Steuerung").Cells(1, 1).Value = "rot"
  Unload Me
End Sub

Private Sub img_mi_mv_Click()
' Wahrscheinlichkeit: Mittel, Schadensschwere: Mittelschwere Verletzungen
' Farbe: gelb
  sheets("Steuerung").Cells(1, 1).Value = "gelb"
  Unload Me
End Sub

Private Sub img_mi_sv_Click()
' Wahrscheinlichkeit: Mittel, Schadensschwere: Schwere Verletzungen
' Farbe: rot
  sheets("Steuerung").Cells(1, 1).Value = "rot"
  Unload Me
End Sub

Private Sub img_sg_lv_Click()
' Wahrscheinlichkeit: Sehr gering, Schadensschwere: Leichte Verletzungen
' Farbe: gr|fffd|n
  sheets("Steuerung").Cells(1, 1).Value = "gruen"
  Unload Me
End Sub

Private Sub img_sg_mk_Click()
' Wahrscheinlichkeit: Sehr gering, Schadensschwere: M|fffd|glicher Tod
' Farbe: gelb
  sheets("Steuerung").Cells(1, 1).Value = "gelb"
  Unload Me
End Sub

Private Sub img_sg_mv_Click()
' Wahrscheinlichkeit: Sehr gering, Schadensschwere: Mittelschwere Verletzungen
' Farbe: gr|fffd|n
  sheets("Steuerung").Cells(1, 1).Value = "gruen"
  Unload Me
End Sub

Private Sub img_sg_sv_Click()
' Wahrscheinlichkeit: Sehr gering, Schadensschwere: Schwere Verletzungen
' Farbe: gelb
  sheets("Steuerung").Cells(1, 1).Value = "gelb"
  Unload Me
End Sub

Private Sub UserForm_Initialize()
  sheets("Steuerung").Cells(1, 1).Value = ""
End Sub
Attribute VB_Name = "dlg_KopfUndFuss"
Attribute VB_Base = "0{086A000B-D722-4D3A-991E-CC532CFA2273}{33B5B074-43E2-4C95-B3E3-045FDB71A53C}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False





Private Sub CheckBox1_Change()
If CheckBox1.Value = False Then
 ComboBox1.ListIndex = 0
 OptionButton1.Value = False
 OptionButton2.Value = False
 OptionButton3.Value = False
End If
End Sub

Private Sub CheckBox2_Change()
If CheckBox2.Value = False Then
 ComboBox2.ListIndex = 0
 OptionButton4.Value = False
 OptionButton5.Value = False
 OptionButton6.Value = False
End If
End Sub



Private Sub CheckBox3_Change()
If CheckBox3.Value = False Then
 ComboBox3.ListIndex = 0
 OptionButton7.Value = False
 OptionButton8.Value = False
 OptionButton9.Value = False
End If
End Sub



Private Sub CheckBox4_Change()
If CheckBox4.Value = False Then
 ComboBox4.ListIndex = 0
 OptionButton10.Value = False
 OptionButton11.Value = False
 OptionButton12.Value = False
End If
End Sub



Private Sub CheckBox5_Change()
If CheckBox5.Value = False Then
 ComboBox5.ListIndex = 0
 OptionButton13.Value = False
 OptionButton14.Value = False
 OptionButton15.Value = False
End If
End Sub



Private Sub CheckBox6_Change()
If CheckBox6.Value = False Then
 ComboBox6.ListIndex = 0
 OptionButton16.Value = False
 OptionButton17.Value = False
 OptionButton18.Value = False
End If
End Sub



Private Sub cmd_cancel_Click()
'abbrechen
 Unload Me
End Sub

Private Sub cmd_Del_Click()
Dim Blatt As Worksheet

For Each Blatt In ThisWorkbook.Worksheets
 With Blatt.PageSetup
  .LeftHeader = ""
  .CenterHeader = ""
  .RightHeader = ""
  .LeftFooter = ""
  .CenterFooter = ""
  .RightFooter = ""
 End With
Next Blatt

With dlg_KopfUndFuss
  .CheckBox1.Value = False
  .CheckBox2.Value = False
  .CheckBox3.Value = False
  .CheckBox4.Value = False
  .CheckBox5.Value = False
  .CheckBox6.Value = False
  .ComboBox1.ListIndex = 0
  .ComboBox2.ListIndex = 0
  .ComboBox3.ListIndex = 0
  .ComboBox4.ListIndex = 0
  .ComboBox5.ListIndex = 0
  .ComboBox6.ListIndex = 0
  .OptionButton1.Value = False
  .OptionButton2.Value = False
  .OptionButton3.Value = False
  .OptionButton4.Value = False
  .OptionButton5.Value = False
  .OptionButton6.Value = False
  .OptionButton7.Value = False
  .OptionButton8.Value = False
  .OptionButton9.Value = False
  .OptionButton10.Value = False
  .OptionButton11.Value = False
  .OptionButton12.Value = False
  .OptionButton13.Value = False
  .OptionButton14.Value = False
  .OptionButton15.Value = False
  .OptionButton16.Value = False
  .OptionButton17.Value = False
  .OptionButton18.Value = False
  TXT_Firma.Value = ""
  TXT_Abteilung.Value = ""
  TXT_Autor.Value = ""
  
  DRUCK.Range("A1:A6").Value = False
  DRUCK.Range("A7:A9").Value = ""
  DRUCK.Range("C1:E6").Value = False
  
End With

End Sub

Private Sub cmd_Save_Click()
'Kopf- und Fu|fffd|zeile zusammenstellen
Dim Blatt As Worksheet

'Vorab Pr|fffd|fungen
If CheckBox1.Value = True And ComboBox1.Value <> "Bitte w|fffd|hlen" Then
 If OptionButton1.Value = False And OptionButton2.Value = False And OptionButton3.Value = False Then
 MsgBox "Bitte Platzierung 'Firma' noch angeben!", vbCritical
 Exit Sub
 End If
End If
If CheckBox2.Value = True And ComboBox2.Value <> "Bitte w|fffd|hlen" Then
 If OptionButton4.Value = False And OptionButton5.Value = False And OptionButton6.Value = False Then
 MsgBox "Bitte Platzierung 'Abteilung' noch angeben!", vbCritical
 Exit Sub
 End If
End If
If CheckBox3.Value = True And ComboBox3.Value <> "Bitte w|fffd|hlen" Then
 If OptionButton7.Value = False And OptionButton8.Value = False And OptionButton9.Value = False Then
 MsgBox "Bitte Platzierung 'Autor' noch angeben!", vbCritical
 Exit Sub
 End If
End If
If CheckBox4.Value = True And ComboBox4.Value <> "Bitte w|fffd|hlen" Then
 If OptionButton10.Value = False And OptionButton11.Value = False And OptionButton12.Value = False Then
 MsgBox "Bitte Platzierung 'Letzte |fffd|nderung' noch angeben!", vbCritical
 Exit Sub
 End If
End If
If CheckBox5.Value = True And ComboBox5.Value <> "Bitte w|fffd|hlen" Then
 If OptionButton13.Value = False And OptionButton14.Value = False And OptionButton15.Value = False Then
 MsgBox "Bitte Platzierung 'Datei - Pfadname' noch angeben!", vbCritical
 Exit Sub
 End If
End If
If CheckBox6.Value = True And ComboBox6.Value <> "Bitte w|fffd|hlen" Then
If OptionButton16.Value = False And OptionButton17.Value = False And OptionButton18.Value = False Then
 MsgBox "Bitte Platzierung 'Seitenzahlen' noch angeben!", vbCritical
 Exit Sub
 End If
End If

'Zuerst einmal alles l|fffd|schen
ActiveSheet.PageSetup.LeftHeader = ""
ActiveSheet.PageSetup.CenterHeader = ""
ActiveSheet.PageSetup.RightHeader = ""
ActiveSheet.PageSetup.LeftFooter = ""
ActiveSheet.PageSetup.CenterFooter = ""
ActiveSheet.PageSetup.RightFooter = ""

'Firma
If CheckBox1.Value = True Then
Select Case ComboBox1.Value
 Case "Bitte w|fffd|hlen"
  MsgBox "Bitte noch den Bereich ausw|fffd|hlen!": Exit Sub
 Case "Kopfzeile"
  If OptionButton1.Value = True Then
   ActiveSheet.PageSetup.LeftHeader = TXT_Firma.Value
  End If
  If OptionButton2.Value = True Then
   ActiveSheet.PageSetup.CenterHeader = TXT_Firma.Value
  End If
  If OptionButton3.Value = True Then
   ActiveSheet.PageSetup.RightHeader = TXT_Firma.Value
  End If
 Case "Fu|fffd|zeile"
 If OptionButton1.Value = True Then
   ActiveSheet.PageSetup.LeftFooter = TXT_Firma.Value
  End If
  If OptionButton2.Value = True Then
   ActiveSheet.PageSetup.CenterFooter = TXT_Firma.Value
  End If
  If OptionButton3.Value = True Then
   ActiveSheet.PageSetup.RightFooter = TXT_Firma.Value
  End If
End Select
End If

'Abteilung
If CheckBox2.Value = True Then
Select Case ComboBox2.Value
 Case "Bitte w|fffd|hlen"
  MsgBox "Bitte noch den Bereich ausw|fffd|hlen!": Exit Sub
 Case "Kopfzeile"
  If OptionButton4.Value = True Then
   ActiveSheet.PageSetup.LeftHeader = TXT_Abteilung.Value
  End If
  If OptionButton5.Value = True Then
   ActiveSheet.PageSetup.CenterHeader = TXT_Abteilung.Value
  End If
  If OptionButton6.Value = True Then
   ActiveSheet.PageSetup.RightHeader = TXT_Abteilung.Value
  End If
 Case "Fu|fffd|zeile"
 If OptionButton4.Value = True Then
   ActiveSheet.PageSetup.LeftFooter = TXT_Abteilung.Value
  End If
  If OptionButton5.Value = True Then
   ActiveSheet.PageSetup.CenterFooter = TXT_Abteilung.Value
  End If
  If OptionButton6.Value = True Then
   ActiveSheet.PageSetup.RightFooter = TXT_Abteilung.Value
  End If
End Select
End If

'Autor
If CheckBox3.Value = True Then
Select Case ComboBox3.Value
 Case "Bitte w|fffd|hlen"
  MsgBox "Bitte noch den Bereich ausw|fffd|hlen!": Exit Sub
 Case "Kopfzeile"
  If OptionButton7.Value = True Then
   ActiveSheet.PageSetup.LeftHeader = TXT_Autor.Value
  End If
  If OptionButton8.Value = True Then
   ActiveSheet.PageSetup.CenterHeader = TXT_Autor.Value
  End If
  If OptionButton9.Value = True Then
   ActiveSheet.PageSetup.RightHeader = TXT_Autor.Value
  End If
 Case "Fu|fffd|zeile"
 If OptionButton7.Value = True Then
   ActiveSheet.PageSetup.LeftFooter = TXT_Autor.Value
  End If
  If OptionButton8.Value = True Then
   ActiveSheet.PageSetup.CenterFooter = TXT_Autor.Value
  End If
  If OptionButton9.Value = True Then
   ActiveSheet.PageSetup.RightFooter = TXT_Autor.Value
  End If
End Select
End If

'letzte |fffd|nderung
If CheckBox4.Value = True Then
Select Case ComboBox4.Value
 Case "Bitte w|fffd|hlen"
  MsgBox "Bitte noch den Bereich ausw|fffd|hlen!": Exit Sub
 Case "Kopfzeile"
  If OptionButton10.Value = True Then
   ActiveSheet.PageSetup.LeftHeader = Format(ThisWorkbook.BuiltinDocumentProperties("last save time"), "DD.MM.YYYY")
  End If
  If OptionButton11.Value = True Then
   ActiveSheet.PageSetup.CenterHeader = Format(ThisWorkbook.BuiltinDocumentProperties("last save time"), "DD.MM.YYYY")
  End If
  If OptionButton12.Value = True Then
   ActiveSheet.PageSetup.RightHeader = Format(ThisWorkbook.BuiltinDocumentProperties("last save time"), "DD.MM.YYYY")
  End If
 Case "Fu|fffd|zeile"
 If OptionButton10.Value = True Then
   ActiveSheet.PageSetup.LeftFooter = Format(ThisWorkbook.BuiltinDocumentProperties("last save time"), "DD.MM.YYYY")
  End If
  If OptionButton11.Value = True Then
   ActiveSheet.PageSetup.CenterFooter = Format(ThisWorkbook.BuiltinDocumentProperties("last save time"), "DD.MM.YYYY")
  End If
  If OptionButton12.Value = True Then
   ActiveSheet.PageSetup.RightFooter = Format(ThisWorkbook.BuiltinDocumentProperties("last save time"), "DD.MM.YYYY")
  End If
End Select
End If

'Datei-Pfadname
If CheckBox5.Value = True Then
Select Case ComboBox5.Value
 Case "Bitte w|fffd|hlen"
  MsgBox "Bitte noch den Bereich ausw|fffd|hlen!": Exit Sub
 Case "Kopfzeile"
  If OptionButton13.Value = True Then
   ActiveSheet.PageSetup.LeftHeader = ThisWorkbook.FullName
  End If
  If OptionButton14.Value = True Then
   ActiveSheet.PageSetup.CenterHeader = ThisWorkbook.FullName
  End If
  If OptionButton15.Value = True Then
   ActiveSheet.PageSetup.RightHeader = ThisWorkbook.FullName
  End If
 Case "Fu|fffd|zeile"
 If OptionButton13.Value = True Then
   ActiveSheet.PageSetup.LeftFooter = ThisWorkbook.FullName
  End If
  If OptionButton14.Value = True Then
   ActiveSheet.PageSetup.CenterFooter = ThisWorkbook.FullName
  End If
  If OptionButton15.Value = True Then
   ActiveSheet.PageSetup.RightFooter = ThisWorkbook.FullName
  End If
End Select
End If

'Seitenzahlen
If CheckBox6.Value = True Then
Select Case ComboBox6.Value
 Case "Bitte w|fffd|hlen"
  MsgBox "Bitte noch den Bereich ausw|fffd|hlen!": Exit Sub
 Case "Kopfzeile"
  If OptionButton16.Value = True Then
   ActiveSheet.PageSetup.LeftHeader = "&""Verdana,Standard""Seite &P von &N Seiten"
  End If
  If OptionButton17.Value = True Then
   ActiveSheet.PageSetup.CenterHeader = "&""Verdana,Standard""Seite &P von &N Seiten"
  End If
  If OptionButton18.Value = True Then
   ActiveSheet.PageSetup.RightHeader = "&""Verdana,Standard""Seite &P von &N Seiten"
  End If
 Case "Fu|fffd|zeile"
 If OptionButton16.Value = True Then
   ActiveSheet.PageSetup.LeftFooter = "&""Verdana,Standard""Seite &P von &N Seiten"
  End If
  If OptionButton17.Value = True Then
   ActiveSheet.PageSetup.CenterFooter = "&""Verdana,Standard""Seite &P von &N Seiten"
  End If
  If OptionButton18.Value = True Then
   ActiveSheet.PageSetup.RightFooter = "&""Verdana,Standard""Seite &P von &N Seiten"
  End If
End Select
End If

For Each Blatt In ThisWorkbook.Worksheets
If Blatt.Visible = True Then
  Blatt.PageSetup.LeftHeader = ActiveSheet.PageSetup.LeftHeader
  Blatt.PageSetup.CenterHeader = ActiveSheet.PageSetup.CenterHeader
  Blatt.PageSetup.RightHeader = ActiveSheet.PageSetup.RightHeader
  Blatt.PageSetup.LeftFooter = ActiveSheet.PageSetup.LeftFooter
  Blatt.PageSetup.CenterFooter = ActiveSheet.PageSetup.CenterFooter
  Blatt.PageSetup.RightFooter = ActiveSheet.PageSetup.RightFooter
 End If
Next Blatt

'Speichern der Werte in Tabelle DRUCK
With DRUCK
 .Range("A1").Value = CheckBox1.Value
 .Range("A2").Value = CheckBox2.Value
 .Range("A3").Value = CheckBox3.Value
 .Range("A4").Value = CheckBox4.Value
 .Range("A5").Value = CheckBox5.Value
 .Range("A6").Value = CheckBox6.Value

 .Range("B1").Value = ComboBox1.Value
 .Range("B2").Value = ComboBox2.Value
 .Range("B3").Value = ComboBox3.Value
 .Range("B4").Value = ComboBox4.Value
 .Range("B5").Value = ComboBox5.Value
 .Range("B6").Value = ComboBox6.Value
 
 .Range("C1").Value = OptionButton1.Value
 .Range("D1").Value = OptionButton2.Value
 .Range("E1").Value = OptionButton3.Value
 .Range("C2").Value = OptionButton4.Value
 .Range("D2").Value = OptionButton5.Value
 .Range("E2").Value = OptionButton6.Value
 .Range("C3").Value = OptionButton7.Value
 .Range("D3").Value = OptionButton8.Value
 .Range("E3").Value = OptionButton9.Value
 .Range("C4").Value = OptionButton10.Value
 .Range("D4").Value = OptionButton11.Value
 .Range("E4").Value = OptionButton12.Value
 .Range("C5").Value = OptionButton13.Value
 .Range("D5").Value = OptionButton14.Value
 .Range("E5").Value = OptionButton15.Value
 .Range("C6").Value = OptionButton16.Value
 .Range("D6").Value = OptionButton17.Value
 .Range("E6").Value = OptionButton18.Value
 .Range("A7").Value = TXT_Firma.Value
 .Range("A8").Value = TXT_Abteilung.Value
 .Range("A9").Value = TXT_Autor.Value
End With

End Sub



Private Sub ComboBox1_Change()
If ComboBox1.Value = "Bitte w|fffd|hlen" Then
 OptionButton1.Value = False
 OptionButton2.Value = False
 OptionButton3.Value = False
End If
End Sub


Private Sub ComboBox2_Change()
If ComboBox2.Value = "Bitte w|fffd|hlen" Then
 OptionButton4.Value = False
 OptionButton5.Value = False
 OptionButton6.Value = False
End If
End Sub

Private Sub ComboBox3_Change()
If ComboBox3.Value = "Bitte w|fffd|hlen" Then
 OptionButton7.Value = False
 OptionButton8.Value = False
 OptionButton9.Value = False
End If
End Sub

Private Sub ComboBox4_Change()
If ComboBox4.Value = "Bitte w|fffd|hlen" Then
 OptionButton10.Value = False
 OptionButton11.Value = False
 OptionButton12.Value = False
End If
End Sub

Private Sub ComboBox5_Change()
If ComboBox5.Value = "Bitte w|fffd|hlen" Then
 OptionButton13.Value = False
 OptionButton14.Value = False
 OptionButton15.Value = False
End If
End Sub

Private Sub ComboBox6_Change()
If ComboBox6.Value = "Bitte w|fffd|hlen" Then
 OptionButton16.Value = False
 OptionButton17.Value = False
 OptionButton18.Value = False
End If
End Sub

Private Sub Image1_Click()
Dim i As Integer
'Application.Dialogs(xlDialogFont).Show
'Application.Dialogs(xlDialogFormatFont).Show
 Application.Dialogs(xlDialogStandardFont).Show
 
 
End Sub

Private Sub Label6_Click()
dlg_KopfUndFuss.Hide
Application.Dialogs(xlDialogPrintPreview).Show
dlg_KopfUndFuss.Show
End Sub

Private Sub MultiPage1_Change()

End Sub

Private Sub OptionButton1_Click()
Dim b As Boolean
b = Pr|fffd|fSchonBelegt(ComboBox1, "ComboBox1", OptionButton1.Caption)
If b = True Then OptionButton1.Value = False

End Sub

Private Sub OptionButton10_Click()
Dim b As Boolean
b = Pr|fffd|fSchonBelegt(ComboBox4, "ComboBox4", OptionButton10.Caption)
If b = True Then OptionButton10.Value = False
End Sub

Private Sub OptionButton11_Click()
Dim b As Boolean
b = Pr|fffd|fSchonBelegt(ComboBox4, "ComboBox4", OptionButton11.Caption)
If b = True Then OptionButton11.Value = False
End Sub

Private Sub OptionButton12_Click()
Dim b As Boolean
b = Pr|fffd|fSchonBelegt(ComboBox4, "ComboBox4", OptionButton12.Caption)
If b = True Then OptionButton12.Value = False
End Sub

Private Sub OptionButton13_Click()
Dim b As Boolean
b = Pr|fffd|fSchonBelegt(ComboBox5, "ComboBox5", OptionButton13.Caption)
If b = True Then OptionButton13.Value = False
End Sub

Private Sub OptionButton14_Click()
Dim b As Boolean
b = Pr|fffd|fSchonBelegt(ComboBox5, "ComboBox5", OptionButton14.Caption)
If b = True Then OptionButton14.Value = False
End Sub

Private Sub OptionButton15_Click()
Dim b As Boolean
b = Pr|fffd|fSchonBelegt(ComboBox5, "ComboBox5", OptionButton15.Caption)
If b = True Then OptionButton15.Value = False
End Sub

Private Sub OptionButton16_Click()
Dim b As Boolean
b = Pr|fffd|fSchonBelegt(ComboBox6, "ComboBox6", OptionButton16.Caption)
If b = True Then OptionButton16.Value = False
End Sub

Private Sub OptionButton17_Click()
Dim b As Boolean
b = Pr|fffd|fSchonBelegt(ComboBox6, "ComboBox6", OptionButton17.Caption)
If b = True Then OptionButton17.Value = False
End Sub

Private Sub OptionButton18_Click()
Dim b As Boolean
b = Pr|fffd|fSchonBelegt(ComboBox6, "ComboBox6", OptionButton18.Caption)
If b = True Then OptionButton18.Value = False
End Sub

Private Sub OptionButton2_Click()
Dim b As Boolean
b = Pr|fffd|fSchonBelegt(ComboBox1, "ComboBox1", OptionButton2.Caption)
If b = True Then OptionButton2.Value = False

End Sub

Private Sub OptionButton3_Click()
Dim b As Boolean
b = Pr|fffd|fSchonBelegt(ComboBox1, "ComboBox1", OptionButton3.Caption)
If b = True Then OptionButton3.Value = False

End Sub

Private Sub OptionButton4_Click()
Dim b As Boolean
b = Pr|fffd|fSchonBelegt(ComboBox2, "ComboBox2", OptionButton4.Caption)
If b = True Then OptionButton4.Value = False
End Sub

Private Sub OptionButton5_Click()
Dim b As Boolean
b = Pr|fffd|fSchonBelegt(ComboBox2, "ComboBox2", OptionButton5.Caption)
If b = True Then OptionButton5.Value = False
End Sub

Private Sub OptionButton6_Click()
Dim b As Boolean
b = Pr|fffd|fSchonBelegt(ComboBox2, "ComboBox2", OptionButton6.Caption)
If b = True Then OptionButton6.Value = False
End Sub

Private Sub OptionButton7_Click()
Dim b As Boolean
b = Pr|fffd|fSchonBelegt(ComboBox3, "ComboBox3", OptionButton7.Caption)
If b = True Then OptionButton7.Value = False
End Sub

Private Sub OptionButton8_Click()
Dim b As Boolean
b = Pr|fffd|fSchonBelegt(ComboBox3, "ComboBox3", OptionButton8.Caption)
If b = True Then OptionButton8.Value = False
End Sub

Private Sub OptionButton9_Click()
Dim b As Boolean
b = Pr|fffd|fSchonBelegt(ComboBox3, "ComboBox3", OptionButton9.Caption)
If b = True Then OptionButton9.Value = False
End Sub

Private Sub UserForm_Initialize()
dlg_KopfUndFuss.MultiPage1.Value = 0
dlg_KopfUndFuss.MultiPage1.Font = "Verdana"
dlg_KopfUndFuss.MultiPage1.Font.Size = 10
dlg_KopfUndFuss.BackColor = RGB(205, 205, 205)
dlg_KopfUndFuss.Label6.BackColor = RGB(205, 205, 205)
dlg_KopfUndFuss.cmd_cancel.BackColor = RGB(205, 205, 205)
dlg_KopfUndFuss.cmd_Save.BackColor = RGB(205, 205, 205)
dlg_KopfUndFuss.cmd_Del.BackColor = RGB(205, 205, 205)
dlg_KopfUndFuss.MultiPage1.BackColor = RGB(205, 205, 205)


With dlg_KopfUndFuss.ComboBox1
 .AddItem "Bitte w|fffd|hlen"
 .AddItem "Kopfzeile"
 .AddItem "Fu|fffd|zeile"
 .ListIndex = 0
End With

With dlg_KopfUndFuss.ComboBox2
 .AddItem "Bitte w|fffd|hlen"
 .AddItem "Kopfzeile"
 .AddItem "Fu|fffd|zeile"
 .ListIndex = 0
End With

With dlg_KopfUndFuss.ComboBox3
 .AddItem "Bitte w|fffd|hlen"
 .AddItem "Kopfzeile"
 .AddItem "Fu|fffd|zeile"
 .ListIndex = 0
End With

With dlg_KopfUndFuss.ComboBox4
 .AddItem "Bitte w|fffd|hlen"
 .AddItem "Kopfzeile"
 .AddItem "Fu|fffd|zeile"
 .ListIndex = 0
End With

With dlg_KopfUndFuss.ComboBox5
 .AddItem "Bitte w|fffd|hlen"
 .AddItem "Kopfzeile"
 .AddItem "Fu|fffd|zeile"
 .ListIndex = 0
End With

With dlg_KopfUndFuss.ComboBox6
 .AddItem "Bitte w|fffd|hlen"
 .AddItem "Kopfzeile"
 .AddItem "Fu|fffd|zeile"
 .ListIndex = 0
End With

'TXT_Firma.Value = ThisWorkbook.BuiltinDocumentProperties("Company")
'TXT_Autor.Value = ThisWorkbook.BuiltinDocumentProperties("Author")
TXT_Firma.Value = DRUCK.Range("A7").Value
TXT_Abteilung.Value = DRUCK.Range("A8").Value
TXT_Autor.Value = DRUCK.Range("A9").Value

With DRUCK
  CheckBox1.Value = .Range("A1").Value
  CheckBox2.Value = .Range("A2").Value
  CheckBox3.Value = .Range("A3").Value
  CheckBox4.Value = .Range("A4").Value
  CheckBox5.Value = .Range("A5").Value
  CheckBox6.Value = .Range("A6").Value

  ComboBox1.Value = .Range("B1").Value
  ComboBox2.Value = .Range("B2").Value
  ComboBox3.Value = .Range("B3").Value
  ComboBox4.Value = .Range("B4").Value
  ComboBox5.Value = .Range("B5").Value
  ComboBox6.Value = .Range("B6").Value
 
  OptionButton1.Value = .Range("C1").Value
  OptionButton2.Value = .Range("D1").Value
  OptionButton3.Value = .Range("E1").Value
  OptionButton4.Value = .Range("C2").Value
  OptionButton5.Value = .Range("D2").Value
  OptionButton6.Value = .Range("E2").Value
  OptionButton7.Value = .Range("C3").Value
  OptionButton8.Value = .Range("D3").Value
  OptionButton9.Value = .Range("E3").Value
  OptionButton10.Value = .Range("C4").Value
  OptionButton11.Value = .Range("D4").Value
  OptionButton12.Value = .Range("E4").Value
  OptionButton13.Value = .Range("C5").Value
  OptionButton14.Value = .Range("D5").Value
  OptionButton15.Value = .Range("E5").Value
  OptionButton16.Value = .Range("C6").Value
  OptionButton17.Value = .Range("D6").Value
  OptionButton18.Value = .Range("E6").Value
 
End With

End Sub
Attribute VB_Name = "dlg_Sicherheit"
Attribute VB_Base = "0{34B488F6-C2BC-42A0-8661-96B15251EDDC}{B22A8F6B-A6ED-48FD-B5AB-9A8C2C357469}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False

Public Eigenschaft1 As String
Public Eigenschaft2 As Integer

Private Sub cmd_cancel_Click()
Unload Me
End Sub

Private Sub cmd_Del_Click()
 Application.DisplayAlerts = False
     ThisWorkbook.sheets(dlg_Sicherheit.Eigenschaft1).Delete
     Application.DisplayAlerts = True

     'Herausnehmen des Eintrages aus dem Listenfeld
     dlg_TabKonfig.ListBox1.RemoveItem dlg_Sicherheit.Eigenschaft2
     'Positionieren auf Starttabelle
     dlg_TabKonfig.ListBox1.ListIndex = 0
    Unload Me
End Sub





Private Sub UserForm_Initialize()
dlg_Sicherheit.BackColor = RGB(205, 205, 205)
dlg_Sicherheit.LabelFehler.BackColor = RGB(205, 205, 205)
dlg_Sicherheit.Image1.BackColor = RGB(205, 205, 205)
dlg_Sicherheit.cmd_cancel.BackColor = RGB(205, 205, 205)
dlg_Sicherheit.cmd_Del.BackColor = RGB(205, 205, 205)
End Sub
Attribute VB_Name = "dlg_TabKonfig"
Attribute VB_Base = "0{3A58E8A9-CBD3-4282-80BD-5AE03919569E}{DC37C22A-B410-4741-80AA-6D757AC8D789}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False



Private Sub SortTab()
Dim i As Integer

With ListBox1
For i = .ListCount - 1 To 1 Step -1
  sheets(.List(i)).Move after:=sheets(.List(0))
Next i
ThisWorkbook.sheets("Startseite").Select
End With
End Sub


Private Sub cmd_cancel_Click()
'Userform abbrechen
 Unload Me
End Sub

Private Sub cmd_copy_Click()
'Tabelle kopieren
 Dim s As String
 Dim i As Integer
 Dim ipos As Integer
 Dim strHilf As String
 Dim strZahl As String
 
 If ListBox1.ListIndex = 0 Then MsgBox "Die Startseite darf nicht dupliziert werden!", vbInformation: Exit Sub
 If ListBox1.ListIndex <> -1 Then
 i = ListBox1.ListIndex
 
 If i = 0 Then Exit Sub
Application.DisplayAlerts = False
   s = ListBox1.List(i)
     
   ThisWorkbook.sheets(s).Copy after:=ThisWorkbook.sheets(ThisWorkbook.sheets.Count)
   'Leere Zeichen aus Tabellennamen entfernen
   For ipos = 1 To Len(ActiveSheet.Name)
    Select Case Mid(ActiveSheet.Name, ipos, 1)
     Case " "
     
     Case Else
      
      strHilf = strHilf & Mid(ActiveSheet.Name, ipos, 1)
      strHilf = LeereRaus(ActiveSheet.Name)
      
    End Select
   Next ipos
   
   If TabExists(strHilf) = False Then
    ActiveSheet.Name = LeereRaus(strHilf)
   Else
    strZahl = Mid(strHilf, InStr(strHilf, "(") + 1, Len(strHilf) - InStr(strHilf, ")") + 1) + 1
    
   Do Until TabExists(LeereRaus(Left(strHilf, InStr(strHilf, "(")) & strZahl & ")")) = False
    strZahl = strZahl + 1
   Loop
    'If TabExists(LeereRaus(Left(strHilf, InStr(strHilf, "(")) & strZahl & ")")) = True Then
    'ActiveSheet.Name = LeereRaus(Left(strHilf, InStr(strHilf, "(")) & strZahl + 1 & ")")
    'Else
    ActiveSheet.Name = LeereRaus(Left(strHilf, InStr(strHilf, "(")) & strZahl & ")")
    'End If
   
   End If
   ListBox1.AddItem ActiveSheet.Name, ListBox1.ListCount
   
  
   
  Else
  MsgBox "Sie m|fffd|ssen zuerst eine Tabelle" & vbLf & _
  "im Listenfeld ausw|fffd|hlen!", vbInformation
 End If
Application.DisplayAlerts = True
ThisWorkbook.sheets("Startseite").Select
LBSynchron
End Sub

Private Sub cmd_Del_Click()
'Tabelle l|fffd|schen
 Dim s As String
 Dim i As Integer
 Dim ir|fffd|ck As Integer
 
 If ListBox1.ListIndex = 0 Then MsgBox "Die Startseite darf nicht gel|fffd|scht werden!", vbInformation: Exit Sub
 If ListBox1.Value = "Hilfe" Then MsgBox "Die Hilfe-Seite darf nicht gel|fffd|scht werden!", vbInformation: Exit Sub
 If ListBox1.ListIndex <> -1 Then
 i = ListBox1.ListIndex
 If i = 0 Then Exit Sub
   s = ListBox1.List(i)
   'L|fffd|schen der Tabelle
     dlg_Sicherheit.Eigenschaft1 = s
     dlg_Sicherheit.Eigenschaft2 = i
     dlg_Sicherheit.Show
     

     Else
     MsgBox "Sie m|fffd|ssen zuerst eine Tabelle" & vbLf & _
     "im Listenfeld ausw|fffd|hlen!", vbInformation
 End If
ThisWorkbook.sheets("Startseite").Select

ThisWorkbook.sheets("VERLAUF").Columns(1).ClearContents
ThisWorkbook.sheets("VERLAUF").Range("A1").Value = "Startseite"


LBSynchron
End Sub



Private Sub cmd_Rename_Click()
 Dim s As String
 Dim i As Integer
 If ListBox1.ListIndex = -1 Then Exit Sub
 If ListBox1.List(ListBox1.ListIndex) = "Startseite" Then MsgBox "Die Startseite darf nicht umbenannt werden!", vbInformation: Exit Sub
 If ListBox1.List(ListBox1.ListIndex) = "Hilfe" Then MsgBox "Die Seite Hilfe darf nicht umbenannt werden!", vbInformation: Exit Sub
 
 If TXT_Tabname.Value <> "" Then
 
 If ListBox1.ListIndex <> -1 Then
 i = ListBox1.ListIndex
 If i = 0 Then Exit Sub
   s = ListBox1.List(i)
   If TabExists(TXT_Tabname) = False Then
     ListBox1.RemoveItem i
     ListBox1.AddItem TXT_Tabname, i
     ListBox1.ListIndex = i
     sheets(s).Name = TXT_Tabname
    Else
    'Tabelle kann nicht umbenannt werden, da der neue Name bereits existiert
    MsgBox "Der Tabellenname " & TXT_Tabname & " exisitiert bereits in der Mappe!", vbCritical
   End If
   Else
   MsgBox "Sie m|fffd|ssen zuerst eine Tabelle" & vbLf & _
  "im Listenfeld ausw|fffd|hlen!", vbInformation
 End If
 Else
 MsgBox "Bitte geben Sie zuerst einen neuen Namen " & vbLf & _
 "im Feld 'Neuer Tabellenname' ein!", vbInformation
 End If
 ThisWorkbook.sheets("Startseite").Select
 TXT_Tabname.Value = ""
 LBSynchron
End Sub

Private Sub cmd_Save_Click()
'Konfiguration speichern
Dim imax As Integer
Dim iZeilen As Integer
Dim Startadress As String
Dim hyper As Hyperlink
Dim Bereich As Range
Dim zelle As Range

'Das Tabelleninhaltsverzeichnis l|fffd|schen

With ThisWorkbook.sheets("Startseite")
.Activate
.Unprotect
Set Bereich = .Range("C11:I27")
For Each zelle In Bereich
 If zelle.Interior.ColorIndex = 15 Then
  zelle.Value = ""
 End If
Next zelle

.Range("A1").Select
End With


'Die Tabellenhyperlinks entfernen
For Each hyper In ThisWorkbook.sheets("Startseite").Hyperlinks
 If InStr(hyper.TextToDisplay, "|fffd|") > 0 Then
  hyper.Delete
 End If
Next hyper


Startadress = ThisWorkbook.sheets("Startseite").Range("C10").Address
'Eintr|fffd|ge in Listbox z|fffd|hlen abz|fffd|glich der ersten Seite
imax = ListBox1.ListCount - 1
iZeilen = Application.WorksheetFunction.RoundUp(imax / 2, 0)

'|fffd|
With ListBox1
For i = 1 To .ListCount - 1
  
  'Tabellenindex schreiben
  If i > iZeilen Then Exit For
  
  ThisWorkbook.sheets("Startseite").Range(Startadress).Offset(1, 0).Value = ListBox1.List(i)
  
  If Left(Application.Version, 1) <> 8 Then
    
  If InStr(ListBox1.List(i), " ") > 0 Then
  ThisWorkbook.sheets("Startseite").Hyperlinks.Add Anchor:=Range(Startadress).Offset(1, 0), Address:="", SubAddress:= _
        "'" & ListBox1.List(i) & "'" & "!A1", ScreenTip:=ListBox1.List(i), _
        TextToDisplay:="|fffd| " & ListBox1.List(i)
  Else
'  ThisWorkbook.Sheets("Startseite").Hyperlinks.Add Anchor:=Range(Startadress).Offset(1, 0), Address:="", SubAddress:= _
'        ListBox1.List(i) & "!A1", ScreenTip:=ListBox1.List(i), _
'        TextToDisplay:="|fffd| " & ListBox1.List(i)
'
  ThisWorkbook.sheets("Startseite").Hyperlinks.Add Anchor:=Range(Startadress).Offset(1, 0), Address:="", SubAddress:= _
        "'" & ListBox1.List(i) & "'" & "!A1", ScreenTip:=ListBox1.List(i), _
        TextToDisplay:="|fffd| " & ListBox1.List(i)
        
  End If
    If Left(Range(Startadress).Offset(1, 0).Value, 1) <> "|fffd|" Then
    Range(Startadress).Offset(1, 0).Value = "|fffd| " & Range(Startadress).Offset(1, 0).Value
   End If

  ThisWorkbook.sheets("Startseite").Range(Startadress).Offset(1, 0).Font.ColorIndex = 47
  ThisWorkbook.sheets("Startseite").Range(Startadress).Offset(1, 0).Font.Bold = True
  Startadress = ThisWorkbook.sheets("Startseite").Range(Startadress).Offset(1, 0).Address
  
  Else
  
  If InStr(ListBox1.List(i), " ") > 0 Then
  ThisWorkbook.sheets("Startseite").Hyperlinks.Add Anchor:=Range(Startadress).Offset(1, 0), Address:="", SubAddress:= _
        "'" & ListBox1.List(i) & "'" & "!A1"
  Else
  ThisWorkbook.sheets("Startseite").Hyperlinks.Add Anchor:=Range(Startadress).Offset(1, 0), Address:="", SubAddress:= _
        ListBox1.List(i) & "!A1"
  End If
    If Left(Range(Startadress).Offset(1, 0).Value, 1) <> "|fffd|" Then
    Range(Startadress).Offset(1, 0).Value = "|fffd| " & Range(Startadress).Offset(1, 0).Value
   End If

  ThisWorkbook.sheets("Startseite").Range(Startadress).Offset(1, 0).Font.ColorIndex = 47
  ThisWorkbook.sheets("Startseite").Range(Startadress).Offset(1, 0).Font.Bold = True
  Startadress = ThisWorkbook.sheets("Startseite").Range(Startadress).Offset(1, 0).Address
  
  End If 'excel 97
  
Next i


Startadress = ThisWorkbook.sheets("Startseite").Range("G10").Address
For i = i To .ListCount - 1
  'Tabellenindex schreiben
  ThisWorkbook.sheets("Startseite").Range(Startadress).Offset(1, 0).Value = ListBox1.List(i)
  
  If Left(Application.Version, 1) <> 8 Then
  
  If InStr(ListBox1.List(i), " ") > 0 Then
  ThisWorkbook.sheets("Startseite").Hyperlinks.Add Anchor:=Range(Startadress).Offset(1, 0), Address:="", _
        SubAddress:="'" & ListBox1.List(i) & "'" & "!A1", ScreenTip:=ListBox1.List(i), _
        TextToDisplay:="|fffd| " & ListBox1.List(i)
  Else

     ThisWorkbook.sheets("Startseite").Hyperlinks.Add Anchor:=Range(Startadress).Offset(1, 0), Address:="", SubAddress:= _
        "'" & ListBox1.List(i) & "'" & "!A1", ScreenTip:=ListBox1.List(i), _
        TextToDisplay:="|fffd| " & ListBox1.List(i)
   End If
   If Left(Range(Startadress).Offset(1, 0).Value, 1) <> "|fffd|" Then
    Range(Startadress).Offset(1, 0).Value = "|fffd| " & Range(Startadress).Offset(1, 0).Value
   End If

  ThisWorkbook.sheets("Startseite").Range(Startadress).Offset(1, 0).Font.ColorIndex = 47
  ThisWorkbook.sheets("Startseite").Range(Startadress).Offset(1, 0).Font.Bold = True
  Startadress = ThisWorkbook.sheets("Startseite").Range(Startadress).Offset(1, 0).Address
  
  Else
  
  If InStr(ListBox1.List(i), " ") > 0 Then
  ThisWorkbook.sheets("Startseite").Hyperlinks.Add Anchor:=Range(Startadress).Offset(1, 0), Address:="", SubAddress:="" _
        , SubAddress:="'" & ListBox1.List(i) & "'" & "!A1"
  Else

     ThisWorkbook.sheets("Startseite").Hyperlinks.Add Anchor:=Range(Startadress).Offset(1, 0), Address:="", SubAddress:= _
        "'" & ListBox1.List(i) & "'" & "!A1"
   End If
   If Left(Range(Startadress).Offset(1, 0).Value, 1) <> "|fffd|" Then
    Range(Startadress).Offset(1, 0).Value = "|fffd| " & Range(Startadress).Offset(1, 0).Value
   End If

  ThisWorkbook.sheets("Startseite").Range(Startadress).Offset(1, 0).Font.ColorIndex = 47
  ThisWorkbook.sheets("Startseite").Range(Startadress).Offset(1, 0).Font.Bold = True
  Startadress = ThisWorkbook.sheets("Startseite").Range(Startadress).Offset(1, 0).Address
  
  End If 'excel 97
  
Next i

If iZeilen > 10 Then
 ThisWorkbook.sheets("Startseite").Rows(23).Hidden = False
 ThisWorkbook.sheets("Startseite").Rows(24).Hidden = False
 ThisWorkbook.sheets("Startseite").Rows(25).Hidden = False
 ThisWorkbook.sheets("Startseite").Rows(26).Hidden = False
 ThisWorkbook.sheets("Startseite").Rows(27).Hidden = False
 ThisWorkbook.sheets("Startseite").Rows(28).Hidden = False
 Else
 ThisWorkbook.sheets("Startseite").Rows(23).Hidden = True
 ThisWorkbook.sheets("Startseite").Rows(24).Hidden = True
 ThisWorkbook.sheets("Startseite").Rows(25).Hidden = True
 ThisWorkbook.sheets("Startseite").Rows(26).Hidden = True
 ThisWorkbook.sheets("Startseite").Rows(27).Hidden = True
 ThisWorkbook.sheets("Startseite").Rows(28).Hidden = True
End If

End With
ThisWorkbook.sheets("Startseite").Protect
Unload Me
End Sub

Private Sub cmd_Search_Click()
'Grafik zuweisen
 Dim fd 'As FileDialog
 Dim i As Integer
 Dim sFilePfad As String
 Dim vrtSelectedItem As Variant

If Left(Application.Version, 1) = 8 Or Left(Application.Version, 1) = 9 Then
 'MsgBox "Excel 97, Excel 2000"
 GetFileName = Application.GetOpenFilename("Grafiken(*.gif; *.jpg; *.bmp),*.gif, *.jpg, *.bmp ,All Files (*.*),*.* ")

    If GetFileName <> False Then
         TXT_Logo.Value = GetFileName
    End If
 
Else

    Set fd = Application.FileDialog(msoFileDialogFilePicker)
    With fd
            .Filters.Clear
            .Filters.Add "Bildformate / Grafiken", "*.gif;*.jpg;*.jpeg;*.bmp", 1
        If .Show = -1 Then


            For Each vrtSelectedItem In .SelectedItems

                sFilePfad = vrtSelectedItem


                i = Len(sFilePfad)

                Do Until Mid(sFilePfad, i, 1) = "\"
                    i = i - 1
                If i = 0 Then
                End If
                Exit Do
                Loop
              
                GetFileName = sFilePfad
                TXT_Logo.Value = GetFileName


            Next vrtSelectedItem
        
        Else
        End If
        
    End With


    '
    Set fd = Nothing
    
End If
       
End Sub

Private Sub cmd_TabAdd_Click()
'Tabelle hinzuf|fffd|gen
Dim i As Integer
Dim s As String

If TXT_Tabname = "" Then MsgBox "Sie m|fffd|ssen zuerst einen Namen" & vbLf & _
"f|fffd|r die neue Tabelle festlegen!", vbInformation: Exit Sub
 s = TXT_Tabname.Value
 If TabExists(TXT_Tabname) = False Then
 
 'Neuen Eintrag ans Ende der Listbox bewegen
 ListBox1.AddItem s, ListBox1.ListCount
 'Tabelle einf|fffd|gen undbenennen
 'Sheets.Add
 Application.DisplayAlerts = False
 sheets("Tabvorlage").Visible = True
 sheets("Tabvorlage").Copy after:=ThisWorkbook.sheets(ThisWorkbook.sheets.Count)
 ActiveSheet.Name = s
 sheets(s).Unprotect
 sheets(s).Columns.Hidden = False
 
 sheets("Tabvorlage").Visible = False
 Application.DisplayAlerts = True
 SortTab
 Else
     MsgBox "Der Tabellenname " & TXT_Tabname & " existiert bereits in der Mappe!", vbCritical
 End If
LBSynchron
End Sub

Private Sub cmd_Upload_Click()
'Grafik auf alle Tabellen einf|fffd|gen
Dim shp As Picture
Dim Blatt As Worksheet
Dim spalte As Integer
If TXT_Logo.Value = "" Then MsgBox "Bitte w|fffd|hlen Sie zuerst |fffd|ber die Schaltfl|fffd|che Durchsuchen eine Grafik aus!": Exit Sub

For Each Blatt In ThisWorkbook.Worksheets
 Select Case Blatt.Name
 Case "VERLAUF", "ICONS", "Tabelle1"
 
 Case Else
 If Blatt.Visible = True Then
     Blatt.Unprotect
     Blatt.Activate
    
    If HaufeLogo1("HaufeLogo") = True Then
     Set shp = Blatt.Pictures.Insert(TXT_Logo.Value)
     
     shp.Top = Selection.Top
     shp.Left = Selection.Left + Blatt.Shapes("HaufeLogo").Width - shp.Width
     ActiveSheet.Shapes("HaufeLogo").Delete
     shp.Select
     Selection.Name = "ALogo"
     
     Else
    
     Set shp = Blatt.Pictures.Insert(TXT_Logo.Value)
    If ALogo1("ALogo") = True Then
     shp.Top = Selection.Top
     shp.Left = Selection.Left + Blatt.Shapes("ALogo").Width - shp.Width
     ActiveSheet.Shapes("ALogo").Delete
     shp.Select
     Selection.Name = "ALogo"
    '  spalte = Blatt.Range("IV1").End(xlToLeft).Column
    '  Set Shp = Blatt.Pictures.Insert(TXT_Logo.Value)
    ' Shp.Top = Blatt.Cells(1, spalte)
    ' Shp.Left = Blatt.Cells(1, spalte)
    End If
    End If
    Blatt.Protect
    End If
End Select
Next Blatt

ThisWorkbook.sheets("Firmendaten").Select
Unload Me
End Sub


Private Sub cmd_Gehezu_Click()
'Tabelle aktivieren
Dim i As Integer
Dim s As String

If ListBox1.ListIndex <> -1 Then
i = ListBox1.ListIndex
 'If i = 0 Then Exit Sub
   s = ListBox1.List(i)
   ThisWorkbook.sheets(s).Select
   Else
   MsgBox "Sie m|fffd|ssen zuerst eine Tabelle" & vbLf & _
  "im Listenfeld ausw|fffd|hlen!", vbInformation
 End If

End Sub


Private Sub Image1_Click()
'Ganz nach oben
Dim i As Integer
Dim s As String

If ListBox1.ListIndex = 0 Then Exit Sub
If ListBox1.ListIndex <> -1 Then
 i = ListBox1.ListIndex
 If i = 0 Then Exit Sub
   s = ListBox1.List(i)
   ListBox1.RemoveItem i
   ListBox1.AddItem s, 1
   ListBox1.ListIndex = 1
   
End If
SortTab
End Sub

Private Sub Image2_Click()
'Ganz nach unten
Dim i As Integer
Dim s As String

If ListBox1.ListIndex = 0 Then Exit Sub
If ListBox1.ListIndex <> -1 Then
 i = ListBox1.ListIndex
 If i = 0 Then Exit Sub
   s = ListBox1.List(i)
   ListBox1.RemoveItem i
   ListBox1.AddItem s, ListBox1.ListCount
   ListBox1.ListIndex = ListBox1.ListCount - 1
   
End If
SortTab
End Sub

Private Sub Label2_Click()

End Sub

Private Sub SpinButton1_SpinUp()
'Eine Position nach oben
Dim i As Integer
Dim s As String

If ListBox1.ListIndex = 0 Or ListBox1.ListIndex = 1 Then Exit Sub

If ListBox1.ListIndex <> -1 Then
 i = ListBox1.ListIndex
 If i = 0 Then Exit Sub
   s = ListBox1.List(i)
   ListBox1.RemoveItem i
   ListBox1.AddItem s, i - 1
   ListBox1.ListIndex = i - 1
   SpinButton1.Value = 0
End If
SortTab
End Sub


Private Sub SpinButton1_SpinDown()
'Eine Position nach unten
Dim i As Integer
Dim s As String

If ListBox1.ListIndex = 0 Then Exit Sub
If ListBox1.ListIndex <> -1 Then
 i = ListBox1.ListIndex
 If i = ListBox1.ListCount - 1 Then Exit Sub
 
   s = ListBox1.List(i)
   ListBox1.RemoveItem i
   ListBox1.AddItem s, i + 1
   ListBox1.ListIndex = i + 1
   SpinButton1.Value = 0
End If
SortTab
End Sub




Private Sub TXT_Tabname_Change()
'Leere Zeichen entfernen
If Len(TXT_Tabname.Value) = 1 Then
 Select Case TXT_Tabname.Value
   Case " ", ":", "/", "\", "?", "*", "[", "]"
        TXT_Tabname.Value = ""
   Case Else
  End Select
End If

Select Case Right(TXT_Tabname.Value, 1)
Case " ", ":", "/", "\", "?", "*", "[", "]"
  TXT_Tabname.Value = Left(TXT_Tabname.Value, Len(TXT_Tabname.Value) - 1)
Case Else
End Select

If Len(TXT_Tabname.Value) > 31 Then TXT_Tabname.Value = Left(TXT_Tabname, 31)
End Sub

Private Sub UserForm_Initialize()
'Listbox mit allen sichtbaren Tabellen und Diagrammbl|fffd|ttern f|fffd|llen
Dim iTab As Integer
dlg_TabKonfig.BackColor = RGB(205, 205, 205)
dlg_TabKonfig.Label1.BackColor = RGB(205, 205, 205)
dlg_TabKonfig.Frame3.BackColor = RGB(205, 205, 205)
dlg_TabKonfig.Label2.BackColor = RGB(205, 205, 205)
dlg_TabKonfig.Label3.BackColor = RGB(205, 205, 205)
dlg_TabKonfig.Label4.BackColor = RGB(205, 205, 205)
dlg_TabKonfig.Label5.BackColor = RGB(205, 205, 205)
dlg_TabKonfig.cmd_Rename.BackColor = RGB(205, 205, 205)
dlg_TabKonfig.cmd_cancel.BackColor = RGB(205, 205, 205)
dlg_TabKonfig.cmd_copy.BackColor = RGB(205, 205, 205)
dlg_TabKonfig.cmd_Save.BackColor = RGB(205, 205, 205)
dlg_TabKonfig.cmd_Search.BackColor = RGB(205, 205, 205)
dlg_TabKonfig.cmd_TabAdd.BackColor = RGB(205, 205, 205)
dlg_TabKonfig.cmd_Upload.BackColor = RGB(205, 205, 205)
dlg_TabKonfig.cmd_Gehezu.BackColor = RGB(205, 205, 205)
dlg_TabKonfig.cmd_Del.BackColor = RGB(205, 205, 205)
dlg_TabKonfig.SpinButton1.BackColor = RGB(205, 205, 205)
dlg_TabKonfig.Image1.BackColor = RGB(205, 205, 205)
dlg_TabKonfig.Image2.BackColor = RGB(205, 205, 205)

For iTab = 1 To ThisWorkbook.sheets.Count

 If ThisWorkbook.sheets(iTab).Visible = True Then
 
  dlg_TabKonfig.ListBox1.AddItem ThisWorkbook.sheets(iTab).Name
 
 End If


Next iTab
End Sub


Attribute VB_Name = "frm_Gefahr"
Attribute VB_Base = "0{54F352AB-D510-463F-8EF8-5334D57719F8}{1C5EE441-8C44-45A3-B00D-57474C98C1AE}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False



'FUNKTIONEN
Function Pr|fffd|fenUnterGefa(strNr As String, Nr As Integer) As String
  'Neue Funktion
  Dim Treffer As Range
  
  Set Treffer = Daten.Range("A:A").Find(what:=strNr, lookat:=xlWhole)
  If Treffer Is Nothing Then
   Pr|fffd|fenUnterGefa = ""
  Else
  If Daten.Cells(Treffer.Row, Nr + 1).Value = "X" Then
   Pr|fffd|fenUnterGefa = "X"
   Else
   Pr|fffd|fenUnterGefa = ""
   End If
  
  End If
End Function

Function Pr|fffd|fenSchutzMa(strNr As String, Nr As Integer) As String
'Neue Funktion
  Dim Treffer As Range
  
  Set Treffer = Daten.Range("A:A").Find(what:=strNr, lookat:=xlWhole)
  If Treffer Is Nothing Then
   Pr|fffd|fenSchutzMa = ""
  Else
  If Daten.Cells(Treffer.Row, Nr + 22).Value = "X" Then
   Pr|fffd|fenSchutzMa = "X"
   Else
   Pr|fffd|fenSchutzMa = ""
   End If
  
  End If
End Function

Function HoleMaText(strText As String) As String
Dim Treffer As Range

Set Treffer = SchuMa.UsedRange.Find(what:=strText, lookat:=xlPart)
If Not Treffer Is Nothing Then
 HoleMaText = Treffer.Value
End If

End Function



Private Sub cmd_Kal1_Click()
If Me.Lb_1_SM.ListIndex >= 0 Then
 uf_Kalender.TXT_KalR|fffd| = 1
 uf_Kalender.Show 'vbModeless
End If
End Sub

Private Sub cmd_kal2_Click()
If Me.Lb_1_SM.ListIndex >= 0 Then
 uf_Kalender.TXT_KalR|fffd| = 2
 uf_Kalender.Show 'vbModeless
End If
End Sub






Private Sub LB_1_Click()
'nur eigene Gef|fffd|hrdungen d|fffd|rfen gel|fffd|scht werden
Dim Treffer As Range

Set Treffer = GeFa.UsedRange.Find(what:=Me.LB_1.Column(2, Me.LB_1.ListIndex), lookat:=xlWhole)
If Not Treffer Is Nothing Then

If Treffer.Offset(0, 1).Interior.ColorIndex = 3 Then
 Me.Cmd_L|fffd|schen.Enabled = True
 Me.Cmd_|fffd|ndern.Enabled = True
 Me.Cmd_SchuMa_|fffd|ndern.Enabled = True
 Me.Cmd_SchuMa_L|fffd|schen.Enabled = True
 Me.Cmd_UGef_|fffd|ndern.Enabled = True
 Me.Cmd_UGef_l|fffd|schen.Enabled = True
Else
 Me.Cmd_L|fffd|schen.Enabled = False
 Me.Cmd_|fffd|ndern.Enabled = False
 Me.Cmd_SchuMa_|fffd|ndern.Enabled = False
 Me.Cmd_SchuMa_L|fffd|schen.Enabled = False
 Me.Cmd_UGef_|fffd|ndern.Enabled = False
 Me.Cmd_UGef_l|fffd|schen.Enabled = False
End If

End If



End Sub

'Beim Start der Userform
Private Sub UserForm_Initialize()
Dim zeileMax As Long
Dim zeile As Long
Dim i As Integer

i = 0
Daten.Range("A3").Value = "1.1"
'Gef|fffd|hrdungen einlesen
With Me.LB_1
 
zeileMax = GeFa.Range("B65536").End(xlUp).Row

  For zeile = 2 To zeileMax
      .AddItem ""
      .Column(1, i) = GeFa.Cells(zeile, 2).Value
      .Column(2, i) = GeFa.Cells(zeile, 1).Value
      i = i + 1
  Next zeile

End With

 
With Me.Cmb_Gefahr
.AddItem "Mechanische Gef|fffd|hrdungen"
.AddItem "Elektrische Gef|fffd|hrdungen"
.AddItem "Gef|fffd|hrdung durch Stoffe"
.AddItem "Gef|fffd|hrdung durch Br|fffd|nde/Explosionen"
.AddItem "Biologische Gef|fffd|hrdung"
.AddItem "Gef|fffd|hrdung duch spezielle physikalische Einwirkungen"
.AddItem "Gef|fffd|hrdung durch Arbeitsplatzgestaltung"
.AddItem "Gef|fffd|hrdung durch ergonomische Faktoren"
.AddItem "Psychische Belastungsfaktoren"
.AddItem "Sonstige Gef|fffd|hrdungs- und Belastungsfaktoren"
.ListIndex = 0
End With
 
'Untergef|fffd|hrdungen einlesen
Me.Lb_1UG.Clear
With Me.Lb_1UG
i = 0

Set Treffer = UntGef.Rows(1).Find(what:="1.1", lookat:=xlWhole)

If Treffer Is Nothing Then
Else
zeileMax = UntGef.Cells(65536, Treffer.Column).End(xlUp).Row

For zeile = 2 To zeileMax

     .AddItem Pr|fffd|fenUnterGefa(Me.LB_1.Column(2, Me.LB_1.ListIndex), i + 1)
     .Column(1, i) = UntGef.Cells(zeile, Treffer.Column).Value
     .Column(2, i) = ""
     .Column(3, i) = ""
     .Column(4, i) = ""
     .Column(5, i) = UntGef.Cells(1, Treffer.Column)
     i = i + 1
        
Next zeile

End If

End With

'dazugeh|fffd|rige TOPS und Termine suchen und einspielen
With Me.Lb_1_SM
  For i = 0 To Me.Lb_1_SM.ListCount - 1
  strkey = i & Me.LB_1.Column(2, Me.LB_1.ListIndex)
  
  Set Treffer = Termine.Range("H:H").Find(strkey, lookat:=xlWhole)
  
  If Not Treffer Is Nothing Then
   
       .Column(2, i) = Termine.Cells(Treffer.Row, 3).Value
       .Column(3, i) = Termine.Cells(Treffer.Row, 4).Value
       .Column(4, i) = Termine.Cells(Treffer.Row, 5).Value
       .Column(5, i) = Termine.Cells(Treffer.Row, 6).Value
       .Column(6, i) = Termine.Cells(Treffer.Row, 7).Value
       '.Column(7, i) = SchuMa.Cells(1, Treffer.Column)
       .Column(8, i) = Termine.Cells(Treffer.Row, 9).Value
       .Column(9, i) = Termine.Cells(Treffer.Row, 10).Value
   
  End If
  
  Next i
End With

Me.LB_1.ListIndex = 0
LB_1_Change
End Sub


Private Sub LB_1_Change()
Dim zeile As Long
Dim zeileMax As Long
Dim i As Integer
Dim Treffer As Range
Dim strkey As String

'Neue Prozedur
Me.Lb_1UG.Clear

Me.TXT_DatSM.Value = ""
Me.TXT_DatSM2.Value = ""
Me.TXT_Verant.Value = ""
Me.TXT_Verant2.Value = ""
Me.TXT_UGef.Value = ""
Me.Txt_SchuMa.Value = ""

With Me.Lb_1UG
  i = 0
  
  If Me.LB_1.ListIndex = -1 Then
   Me.Lb_1UG.Clear
   Me.Lb_1_SM.Clear
   Exit Sub
  End If
  
  
  Set Treffer = UntGef.Rows(1).Find(what:=Me.LB_1.Column(2, Me.LB_1.ListIndex), lookat:=xlWhole)
  If Treffer Is Nothing Then
  Else
  zeileMax = UntGef.Cells(65536, Treffer.Column).End(xlUp).Row
  For zeile = 2 To zeileMax
       .AddItem Pr|fffd|fenUnterGefa(Me.LB_1.Column(2, Me.LB_1.ListIndex), i + 1)
       .Column(1, i) = UntGef.Cells(zeile, Treffer.Column).Value
       .Column(2, i) = ""
       .Column(3, i) = ""
       .Column(4, i) = ""
       .Column(5, i) = UntGef.Cells(1, Treffer.Column)
       i = i + 1
  Next zeile
  End If

End With

'dazugeh|fffd|rige Noten finden
i = 0
With Me.Lb_1UG
 For i = 0 To Me.Lb_1UG.ListCount - 1
  strkey = i & Me.LB_1.Column(2, Me.LB_1.ListIndex)
  Set Treffer = GefahrNote.Range("D:D").Find(strkey, lookat:=xlWhole)
  If Not Treffer Is Nothing Then
   Select Case GefahrNote.Cells(Treffer.Row, 3).Value
    Case "Gr|fffd|n"
      Me.Lb_1UG.Column(2, i) = "X"
      Me.Lb_1UG.Column(3, i) = ""
      Me.Lb_1UG.Column(4, i) = ""
    Case "Gelb"
      Me.Lb_1UG.Column(3, i) = "X"
      Me.Lb_1UG.Column(2, i) = ""
      Me.Lb_1UG.Column(4, i) = ""
    Case "Rot"
      Me.Lb_1UG.Column(4, i) = "X"
      Me.Lb_1UG.Column(2, i) = ""
      Me.Lb_1UG.Column(3, i) = ""
    End Select
  End If
 Next i
End With


'Ma|fffd|nahmen suchen und einspielen
i = 0
With Me.Lb_1_SM
 .Clear
  
Set Treffer = SchuMa.Rows(1).Find(what:=Me.LB_1.Column(2, Me.LB_1.ListIndex), lookat:=xlWhole)

If Treffer Is Nothing Then
Else
zeileMax = SchuMa.Cells(65536, Treffer.Column).End(xlUp).Row
  For zeile = 2 To zeileMax
    
       .AddItem Pr|fffd|fenSchutzMa(Me.LB_1.Column(2, Me.LB_1.ListIndex), i + 1)
       If Len(SchuMa.Cells(zeile, Treffer.Column).Value) > 70 Then
       .Column(1, i) = Left(SchuMa.Cells(zeile, Treffer.Column).Value, 75) & "..."
       Else
       .Column(1, i) = SchuMa.Cells(zeile, Treffer.Column).Value
       End If
       
       .Column(2, i) = ""
       .Column(3, i) = ""
       .Column(4, i) = ""
       .Column(5, i) = ""
       .Column(6, i) = ""
       .Column(7, i) = SchuMa.Cells(1, Treffer.Column)
       .Column(8, i) = ""
       .Column(9, i) = ""
      
      i = i + 1
  Next zeile
End If

End With


'dazugeh|fffd|rige TOPS und Termine suchen und einspielen
With Me.Lb_1_SM
  For i = 0 To Me.Lb_1_SM.ListCount - 1
  strkey = i & Me.LB_1.Column(2, Me.LB_1.ListIndex)
  
  Set Treffer = Termine.Range("H:H").Find(strkey, lookat:=xlWhole)
  
  If Not Treffer Is Nothing Then
       .Column(0, i) = "X"
       .Column(2, i) = Termine.Cells(Treffer.Row, 3).Value
       .Column(3, i) = Termine.Cells(Treffer.Row, 4).Value
       .Column(4, i) = Termine.Cells(Treffer.Row, 5).Value
       .Column(5, i) = Termine.Cells(Treffer.Row, 6).Value
       .Column(6, i) = Termine.Cells(Treffer.Row, 7).Value
       '.Column(7, i) = SchuMa.Cells(1, Treffer.Column)
       .Column(8, i) = Termine.Cells(Treffer.Row, 9).Value
       .Column(9, i) = Termine.Cells(Treffer.Row, 10).Value
   
  End If
  
  Next i
End With

End Sub



Private Sub LB_1_DblClick(ByVal Cancel As MSForms.ReturnBoolean)
Dim Treffer As Range
Dim b As Boolean
Dim Trefferkreuz As Range
Dim TrefferGef As Range
'neu: Ein- und Ausschalten des Kreuzsymboles



If Me.LB_1.Column(0, Me.LB_1.ListIndex) = "X" Then
 Me.LB_1.Column(0, Me.LB_1.ListIndex) = ""
 'Alle dazugeh|fffd|rigen Noten, TOPS und Termine l|fffd|schen
If MsgBox("Beim Deaktivieren des Gef|fffd|hrdungsfaktors werden alle dazugeh|fffd|rigen " & _
"Untergef|fffd|hrdungen und Schutzma|fffd|nahmen deaktiviert und Termine gel|fffd|scht." & vbLf & vbLf & _
"Trotzdem deaktivieren?", vbYesNo + vbQuestion) = vbYes Then
For i = 0 To Me.Lb_1UG.ListCount - 1
  Me.Lb_1UG.Column(0, i) = ""
  
   'die dazugeh|fffd|rigen Noten l|fffd|schen
    Me.Lb_1UG.Column(2, i) = ""
    Me.Lb_1UG.Column(3, i) = ""
    Me.Lb_1UG.Column(4, i) = ""
    
    'Update in Tabelle Daten
    Set Treffer = Daten.Columns(1).Find(what:=Me.LB_1.Column(2, Me.LB_1.ListIndex), lookat:=xlWhole)
     If Not Treffer Is Nothing Then
         
        spalte = i + 2
        Daten.Cells(Treffer.Row, spalte).Value = ""
     
     End If
    
    'Ende Update Daten
    
    Application.EnableEvents = False
    HakenReinRaus
    Application.EnableEvents = True
   
    s = i & Me.LB_1.Column(2, Me.LB_1.ListIndex)
    Set Treffer = GefahrNote.Columns(4).Find(what:=s, lookat:=xlWhole)
    If Not Treffer Is Nothing Then
     GefahrNote.Rows(Treffer.Row).Delete
    End If
Next i


For i = 0 To Me.Lb_1_SM.ListCount - 1

'Ma|fffd|nahmen entfernen, TOPs und Termine
    Me.Lb_1_SM.Column(0, i) = ""
     
      'Synchronisierung in Tabelle Daten
        Set Treffer = Daten.Columns(1).Find(what:=Me.LB_1.Column(2, Me.LB_1.ListIndex), lookat:=xlWhole)
        If Treffer Is Nothing Then
        
        Else
         zeile = Treffer.Row
        End If
        
        spalte = i + 23 'Korrektur SO am 08.07.2013
        Daten.Cells(zeile, spalte).Value = ""
        
        'jetzt die TOPs
        Me.Lb_1_SM.Column(0, i) = ""
        Me.Lb_1_SM.Column(2, i) = ""
        Me.Lb_1_SM.Column(3, i) = ""
        Me.Lb_1_SM.Column(4, i) = ""
      
     
        'jetzt die Termine
        s = i & Me.LB_1.Column(2, Me.LB_1.ListIndex)
        Set Treffer = Termine.Columns(8).Find(what:=s, lookat:=xlWhole)
        If Not Treffer Is Nothing Then
          Termine.Rows(Treffer.Row).Delete
          Me.Lb_1_SM.Column(5, i) = ""
          Me.Lb_1_SM.Column(6, i) = ""
          Me.Lb_1_SM.Column(8, i) = ""
          Me.Lb_1_SM.Column(9, i) = ""
        End If
      
   Next i
   'Ende Ma|fffd|nahmen entfernen
  b = False
Else
Me.LB_1.Column(0, Me.LB_1.ListIndex) = "X"
b = True
End If
 
Else
 Me.LB_1.Column(0, Me.LB_1.ListIndex) = "X"
 b = True
End If

Set Treffer = GeFa.UsedRange.Find(what:=Me.LB_1.Column(2, Me.LB_1.ListIndex), lookat:=xlWhole)
If Not Treffer Is Nothing Then
 If b = False Then
  Treffer.Interior.ColorIndex = xlColorIndexNone
 Else
  Treffer.Interior.ColorIndex = 4
 End If
End If

 'Synchronisierung in Tabelle |fffd|bersicht
  Set Trefferkreuz = |fffd|bersicht.Range("A6:T70").Find(what:=Me.LB_1.Column(2, Me.LB_1.ListIndex), lookat:=xlWhole)
  If Trefferkreuz Is Nothing Then
  Else
  Application.EnableEvents = False
  |fffd|bersicht.Unprotect
   |fffd|bersicht.Cells(Trefferkreuz.Row + 1, Trefferkreuz.Column).Value = Me.LB_1.Column(0, Me.LB_1.ListIndex)
    |fffd|bersicht.Protect
  Application.EnableEvents = True
  End If

End Sub

Private Sub Cmb_Gefahr_Change()
Dim zeileMax As Integer
Dim zeile As Integer
Dim Treffer As Range


Me.LB_1.Clear
Me.Lb_1UG.Clear
Me.Lb_1_SM.Clear


With Me.LB_1

Set Treffer = GeFa.Rows(1).Find(what:=Me.Cmb_Gefahr.Value, lookat:=xlWhole)
If Treffer Is Nothing Then

Else

zeileMax = GeFa.Cells(65536, Treffer.Column).End(xlUp).Row

For zeile = 2 To zeileMax

    .AddItem "X"
    .Column(1, i) = GeFa.Cells(zeile, Treffer.Column).Value
    .Column(2, i) = GeFa.Cells(zeile, Treffer.Column - 1).Value
    i = i + 1
                         
Next zeile

End If
End With

'Checken, welche Gef|fffd|hrdungen angekreuzt sind
Set Treffer = GeFa.Rows(1).Find(what:=Me.Cmb_Gefahr.Value, lookat:=xlWhole)
If Treffer Is Nothing Then
Else
zeileMax = GeFa.Cells(65536, Treffer.Column).End(xlUp).Row

  For zeile = 2 To zeileMax
   If GeFa.Cells(zeile, Treffer.Column - 1).Interior.ColorIndex >= 0 Then
    Me.LB_1.Column(0, zeile - 2) = "X"
   Else
    Me.LB_1.Column(0, zeile - 2) = ""
   End If
  Next zeile
End If
'Ende check

Me.LB_1.SetFocus
Me.LB_1.ListIndex = 0
End Sub




Private Sub Lb_1UG_DblClick(ByVal Cancel As MSForms.ReturnBoolean)
Dim Treffer As Range
Dim i As Integer
Dim zeile As Integer
Dim s As String
Dim ipos As Integer

On Error GoTo ende
i = Me.Lb_1UG.ListIndex
  'Daten holen aus Tabelle Daten
  Set Treffer = Daten.Columns(1).Find(what:=Me.LB_1.Column(2, Me.LB_1.ListIndex), lookat:=xlWhole)
  If Treffer Is Nothing Then
  zeile = 3
  Else
   zeile = Treffer.Row
  End If
  
  Application.EnableEvents = False
   
  If Daten.Cells(Treffer.Row, Me.Lb_1UG.ListIndex + 2).Value = "X" Then
  
   Me.Lb_1UG.Column(0, Me.Lb_1UG.ListIndex) = ""
   Daten.Cells(Treffer.Row, Me.Lb_1UG.ListIndex + 2).Value = ""
   
   'die dazugeh|fffd|rigen Noten l|fffd|schen
   Me.Lb_1UG.Column(0, Me.Lb_1UG.ListIndex) = ""
   Me.Lb_1UG.Column(2, Me.Lb_1UG.ListIndex) = ""
   Me.Lb_1UG.Column(3, Me.Lb_1UG.ListIndex) = ""
   Me.Lb_1UG.Column(4, Me.Lb_1UG.ListIndex) = ""
   
   
  ' HakenReinRaus
 
  
  'Ablage in Tabelle Gefahr
   s = Me.Lb_1UG.ListIndex & Me.LB_1.Column(2, Me.LB_1.ListIndex)
   Set Treffer = GefahrNote.Columns(4).Find(what:=s, lookat:=xlWhole)
   If Treffer Is Nothing Then
    ipos = GefahrNote.Range("A65536").End(xlUp).Row + 1
   Else
    ipos = Treffer.Row
   End If
   GefahrNote.Rows(ipos).Delete
   
  Else
   Me.Lb_1UG.Column(0, Me.Lb_1UG.ListIndex) = "X"
   'Me.LB_1.Column(0, Me.LB_1.ListIndex) = "X"  'Vorsicht: Dieser Befehl sorgt daf|fffd|r, dass die erste Spalte in Daten |fffd|berschrieben wird.
   Daten.Cells(Treffer.Row, Me.Lb_1UG.ListIndex + 2).Value = "X"
  End If
  
  Application.EnableEvents = True
 Me.Lb_1UG.ListIndex = i
ende:
End Sub



Private Sub Lb_1_SM_DblClick(ByVal Cancel As MSForms.ReturnBoolean)
'neue Prozedur
Dim Treffer As Range
Dim s As String
Dim ipos As Integer

On Error GoTo ende
'Daten holen aus Tabelle Daten
Set Treffer = Daten.Columns(1).Find(what:=Me.LB_1.Column(2, Me.LB_1.ListIndex), lookat:=xlWhole)
If Treffer Is Nothing Then
Else
 zeile = Treffer.Row
End If

If Me.Lb_1_SM.Column(0, Me.Lb_1_SM.ListIndex) = "X" Then
 If MsgBox("Beim Deaktivieren der Schutzma|fffd|nahme werden alle dazugeh|fffd|rigen " & _
"TOP's und Termine und verantwortliche Personen der Schutzma|fffd|nahme entfernt." & vbLf & vbLf & _
"Trotzdem deaktivieren?", vbYesNo + vbQuestion) = vbYes Then

     Me.Lb_1_SM.Column(0, Me.Lb_1_SM.ListIndex) = ""
     Daten.Cells(zeile, Me.Lb_1_SM.ListIndex + 23) = ""
     'die dazugeh|fffd|rigen TOPS und Termine l|fffd|schen
    If Me.Lb_1_SM.ListIndex < 0 Then Exit Sub
     
     Me.Lb_1_SM.Column(2, Me.Lb_1_SM.ListIndex) = ""
     Me.Lb_1_SM.Column(3, Me.Lb_1_SM.ListIndex) = ""
     Me.Lb_1_SM.Column(4, Me.Lb_1_SM.ListIndex) = ""
    
    'Synchronisierung in Tabelle Daten
      Set Treffer = Daten.Columns(1).Find(what:=Me.LB_1.Column(2, Me.LB_1.ListIndex), lookat:=xlWhole)
      If Treffer Is Nothing Then
      
      Else
       zeile = Treffer.Row
      End If
           
     MassnahmeLoeschen 'Korrektur von SO am 11.07.2013
 End If
Else
 Me.Lb_1_SM.Column(0, Me.Lb_1_SM.ListIndex) = "X"
 Daten.Cells(zeile, Me.Lb_1_SM.ListIndex + 23).Value = "X"
End If
ende:
End Sub


Private Sub Im_Gruen_Click()
Dim Treffer As Range
Dim s As String
Dim ipos As Integer
Dim Trefferkreuz As Range

If Me.Lb_1UG.ListIndex >= 0 Then
  
  'Gr|fffd|n kennzeichnen
   Me.Lb_1UG.Column(0, Me.Lb_1UG.ListIndex) = "X"
   Me.Lb_1UG.Column(2, Me.Lb_1UG.ListIndex) = "X"
   Me.Lb_1UG.Column(3, Me.Lb_1UG.ListIndex) = ""
   Me.Lb_1UG.Column(4, Me.Lb_1UG.ListIndex) = ""
   
  Application.EnableEvents = False
  HakenReinRaus
  Application.EnableEvents = True
  
  'Ablage in Tabelle Gefahr
  s = Me.Lb_1UG.ListIndex & Me.LB_1.Column(2, Me.LB_1.ListIndex)
  Set Treffer = GefahrNote.Columns(4).Find(what:=s, lookat:=xlWhole)
  If Treffer Is Nothing Then
   ipos = GefahrNote.Range("A65536").End(xlUp).Row + 1
  Else
   ipos = Treffer.Row
  End If
  GefahrNote.Cells(ipos, 1).Value = Me.Lb_1UG.ListIndex
  GefahrNote.Cells(ipos, 2).Value = Me.LB_1.Column(2, Me.LB_1.ListIndex)
  GefahrNote.Cells(ipos, 3).Value = "Gr|fffd|n"
  GefahrNote.Cells(ipos, 4).Value = GefahrNote.Cells(ipos, 1).Value & GefahrNote.Cells(ipos, 2).Value
  
  'Synchronisierung in Tabelle |fffd|bersicht
  Set Trefferkreuz = |fffd|bersicht.Range("A6:T70").Find(what:=Me.LB_1.Column(2, Me.LB_1.ListIndex), lookat:=xlWhole)
  If Trefferkreuz Is Nothing Then
  Else
  Application.EnableEvents = False
  |fffd|bersicht.Unprotect
  |fffd|bersicht.Cells(Trefferkreuz.Row + 1, Trefferkreuz.Column).Value = "X"
  |fffd|bersicht.Protect
  Application.EnableEvents = True
  End If
  
  'Synchronisierung in Tabelle Daten
  Set Treffer = Daten.Columns(1).Find(what:=Me.LB_1.Column(2, Me.LB_1.ListIndex), lookat:=xlWhole)
  If Treffer Is Nothing Then
  Else
   zeile = Treffer.Row
  End If
  
  spalte = Me.Lb_1UG.ListIndex
  If spalte >= 0 Then 'Korrektur SO am 08.07.2013
    If Me.Lb_1UG.Column(0, spalte) = "X" Then
    Daten.Cells(zeile, spalte + 2).Value = "X"
    Else
    Daten.Cells(zeile, spalte + 2).Value = ""
    End If
  End If

End If

End Sub

Private Sub Img_Gelb_Click()
Dim Treffer As Range
Dim s As String
Dim ipos As Integer
Dim Trefferkreuz As Range

If Me.Lb_1UG.ListIndex >= 0 Then
  
  'Gelb kennzeichnen
   Me.Lb_1UG.Column(0, Me.Lb_1UG.ListIndex) = "X"
   Me.Lb_1UG.Column(2, Me.Lb_1UG.ListIndex) = ""
   Me.Lb_1UG.Column(3, Me.Lb_1UG.ListIndex) = "X"
   Me.Lb_1UG.Column(4, Me.Lb_1UG.ListIndex) = ""
   
  Application.EnableEvents = False
  HakenReinRaus
  Application.EnableEvents = True
  
  'Ablage in Tabelle Gefahr
  s = Me.Lb_1UG.ListIndex & Me.LB_1.Column(2, Me.LB_1.ListIndex)
  Set Treffer = GefahrNote.Columns(4).Find(what:=s, lookat:=xlWhole)
  If Treffer Is Nothing Then
   ipos = GefahrNote.Range("A65536").End(xlUp).Row + 1
  Else
   ipos = Treffer.Row
  End If
  GefahrNote.Cells(ipos, 1).Value = Me.Lb_1UG.ListIndex
  GefahrNote.Cells(ipos, 2).Value = Me.LB_1.Column(2, Me.LB_1.ListIndex)
  GefahrNote.Cells(ipos, 3).Value = "Gelb"
  GefahrNote.Cells(ipos, 4).Value = GefahrNote.Cells(ipos, 1).Value & GefahrNote.Cells(ipos, 2).Value
  
  'Synchronisierung in Tabelle |fffd|bersicht
  Set Trefferkreuz = |fffd|bersicht.Range("A6:T70").Find(what:=Me.LB_1.Column(2, Me.LB_1.ListIndex), lookat:=xlWhole)
  If Trefferkreuz Is Nothing Then
  Else
  Application.EnableEvents = False
  |fffd|bersicht.Unprotect
  |fffd|bersicht.Cells(Trefferkreuz.Row + 1, Trefferkreuz.Column).Value = "X"
  |fffd|bersicht.Protect
  Application.EnableEvents = True
  End If
  
  'Synchronisierung in Tabelle Daten
  Set Treffer = Daten.Columns(1).Find(what:=Me.LB_1.Column(2, Me.LB_1.ListIndex), lookat:=xlWhole)
  If Treffer Is Nothing Then
  Else
   zeile = Treffer.Row
  End If
  
  spalte = Me.Lb_1UG.ListIndex
  If spalte >= 0 Then 'Korrektur SO am 08.07.2013
    If Me.Lb_1UG.Column(0, spalte) = "X" Then
    Daten.Cells(zeile, spalte + 2).Value = "X"
    Else
    Daten.Cells(zeile, spalte + 2).Value = ""
    End If
  End If

End If

End Sub

Private Sub IMG_Rot3_Click()
Dim Treffer As Range
Dim s As String
Dim ipos As Integer
Dim Trefferkreuz As Range

If Me.Lb_1UG.ListIndex >= 0 Then
  
  'Rot kennzeichnen
   Me.Lb_1UG.Column(0, Me.Lb_1UG.ListIndex) = "X"
   Me.Lb_1UG.Column(2, Me.Lb_1UG.ListIndex) = ""
   Me.Lb_1UG.Column(3, Me.Lb_1UG.ListIndex) = ""
   Me.Lb_1UG.Column(4, Me.Lb_1UG.ListIndex) = "X"
   
  Application.EnableEvents = False
  HakenReinRaus
  Application.EnableEvents = True
  
  'Ablage in Tabelle Gefahr
  s = Me.Lb_1UG.ListIndex & Me.LB_1.Column(2, Me.LB_1.ListIndex)
  Set Treffer = GefahrNote.Columns(4).Find(what:=s, lookat:=xlWhole)
  If Treffer Is Nothing Then
   ipos = GefahrNote.Range("A65536").End(xlUp).Row + 1
  Else
   ipos = Treffer.Row
  End If
  GefahrNote.Cells(ipos, 1).Value = Me.Lb_1UG.ListIndex
  GefahrNote.Cells(ipos, 2).Value = Me.LB_1.Column(2, Me.LB_1.ListIndex)
  GefahrNote.Cells(ipos, 3).Value = "Rot"
  GefahrNote.Cells(ipos, 4).Value = GefahrNote.Cells(ipos, 1).Value & GefahrNote.Cells(ipos, 2).Value
  
  'Synchronisierung in Tabelle |fffd|bersicht
  Set Trefferkreuz = |fffd|bersicht.Range("A6:T70").Find(what:=Me.LB_1.Column(2, Me.LB_1.ListIndex), lookat:=xlWhole)
  If Trefferkreuz Is Nothing Then
  Else
  Application.EnableEvents = False
  |fffd|bersicht.Unprotect
  |fffd|bersicht.Cells(Trefferkreuz.Row + 1, Trefferkreuz.Column).Value = "X"
   |fffd|bersicht.Protect
  Application.EnableEvents = True
  End If
  
  'Synchronisierung in Tabelle Daten
  Set Treffer = Daten.Columns(1).Find(what:=Me.LB_1.Column(2, Me.LB_1.ListIndex), lookat:=xlWhole)
  If Treffer Is Nothing Then
  Else
   zeile = Treffer.Row
  End If
  
  spalte = Me.Lb_1UG.ListIndex
  If spalte >= 0 Then 'Korrektur SO am 08.07.2013
    If Me.Lb_1UG.Column(0, spalte) = "X" Then
    Daten.Cells(zeile, spalte + 2).Value = "X"
    Else
    Daten.Cells(zeile, spalte + 2).Value = ""
    End If
  End If

End If
End Sub


Private Sub Cmd_GefA_Hinzu_Click()
'Gef|fffd|hrdungsfaktor hinzuf|fffd|gen
Dim Treffer As Range
Dim spalte As Integer
Dim ipos As Integer

If Me.LB_1.ListCount = 12 Then
 MsgBox "Es k|fffd|nnen keine weiteren Gef|fffd|hrdungsfaktoren mehr eingef|fffd|gt werden!", vbInformation
 Exit Sub
End If


If Me.TXT_Gefa.Value <> "" Then
Select Case Me.Cmb_Gefahr.ListIndex
 Case 0
  spalte = 2
 Case 1
  spalte = 4
 Case 2
  spalte = 6
 Case 3
  spalte = 8
 Case 4
  spalte = 10
 Case 5
  spalte = 12
 Case 6
  spalte = 14
 Case 7
  spalte = 16
 Case 8
  spalte = 18
 Case 9
  spalte = 20
 Case Else
  
End Select

If spalte <> 0 Then

  Set Treffer = GeFa.Columns(spalte).Find(what:=Me.TXT_Gefa.Value, lookat:=xlWhole)
  If Treffer Is Nothing Then
  ipos = GeFa.Cells(65536, spalte).End(xlUp).Row + 1
  GeFa.Cells(ipos, spalte).Value = Me.TXT_Gefa.Value
  'Benutzerdefinierte Faktoren werden Rot formatiert
   GeFa.Cells(ipos, spalte - 1).Interior.ColorIndex = 4 'korr. 13.1.12
  GeFa.Cells(ipos, spalte).Interior.ColorIndex = 3
  
   i = Me.LB_1.ListCount - 1
   Me.LB_1.AddItem "X"
   i = Me.LB_1.ListCount
   Me.LB_1.Column(1, i - 1) = GeFa.Cells(ipos, spalte).Value
   Me.LB_1.Column(2, i - 1) = GeFa.Cells(ipos, spalte - 1).Value
   Me.LB_1.ListIndex = i - 1
  Else
   MsgBox "Diesen Gef|fffd|hrdungsfaktor gibt es schon!", vbInformation
   Exit Sub
  End If


End If
TXT_Gefa.Value = ""

Set Trefferkreuz = |fffd|bersicht.Range("A6:T70").Find(what:=Me.LB_1.Column(2, i - 1), lookat:=xlWhole)
  If Trefferkreuz Is Nothing Then
  Else
    Application.EnableEvents = False
    |fffd|bersicht.Unprotect
    |fffd|bersicht.Cells(Trefferkreuz.Row + 1, Trefferkreuz.Column).Value = "X"
    |fffd|bersicht.Protect
    Application.EnableEvents = True
  End If

End If



Call FaktorenSetzen

End Sub

Private Sub Cmd_|fffd|ndern_Click()
Dim spalte As Integer
Dim Treffer As Range


If Me.TXT_Gefa.Value <> "" Then
Application.ScreenUpdating = False
Select Case Me.Cmb_Gefahr.ListIndex
 Case 0
  spalte = 2
 Case 1
  spalte = 4
 Case 2
  spalte = 6
 Case 3
  spalte = 8
 Case 4
  spalte = 10
 Case 5
  spalte = 12
 Case 6
  spalte = 14
 Case 7
  spalte = 16
 Case 8
  spalte = 18
 Case 9
  spalte = 20
 Case Else
  
End Select

If spalte <> 0 Then

  Set Treffer = GeFa.Columns(spalte).Find(what:=Me.LB_1.Column(1, Me.LB_1.ListIndex), lookat:=xlWhole)
    If Treffer Is Nothing Then
    Else
    ipos = Treffer.Row
    GeFa.Cells(ipos, spalte).Value = Me.TXT_Gefa.Value
    'Benutzerdefinierte Faktoren werden Rot formatiert
    GeFa.Cells(ipos, spalte).Interior.ColorIndex = 3
    
    'Listenfeld aktualisieren
    Me.LB_1.Column(1, Me.LB_1.ListIndex) = GeFa.Cells(ipos, spalte).Value
    Me.TXT_Gefa.Value = ""
    End If

End If
Application.ScreenUpdating = True
End If

FaktorenSetzen

End Sub

Private Sub Cmd_L|fffd|schen_Click()
Dim spalte As Integer
Dim Treffer As Range
Dim zeile As Long
Dim zeileMax As Long
Dim Trefferkreuz As Range
Dim TrefferGef As Range
Dim Treffersch As Range

 If MsgBox("Beim L|fffd|schen des Gef|fffd|hrdungsfaktors werden alle dazugeh|fffd|rigen " & _
  "Untergef|fffd|hrdungen und Schutzma|fffd|nahmen deaktiviert und Termine gel|fffd|scht." & vbLf & vbLf & _
  "Trotzdem l|fffd|schen?", vbYesNo + vbQuestion) = vbYes Then
     
  Set Trefferkreuz = |fffd|bersicht.Range("A6:T70").Find(what:=Me.LB_1.Column(2, Me.LB_1.ListIndex), lookat:=xlWhole)
  If Trefferkreuz Is Nothing Then
  Else
    Application.EnableEvents = False
    |fffd|bersicht.Unprotect
    |fffd|bersicht.Cells(Trefferkreuz.Row, Trefferkreuz.Column + 1).Value = ""
    |fffd|bersicht.Cells(Trefferkreuz.Row + 1, Trefferkreuz.Column).Value = ""
    |fffd|bersicht.Protect
    Application.EnableEvents = True
  End If
  
    
     'L|fffd|schen aller dazugeh|fffd|rigen Daten
     Call Img_Del_Click
     Me.TXT_UGef.Value = ""
     Me.Txt_SchuMa.Value = ""
     zzmax = GefahrNote.Range("A65536").End(xlUp).Row
    
    For zz = zzmax To 2 Step -1
     If GefahrNote.Cells(zz, 2).Value = Me.LB_1.Column(2, Me.LB_1.ListIndex) Then
      GefahrNote.Rows(zz).Delete
     End If
    Next zz
    
     zzmax = Termine.Range("A65536").End(xlUp).Row
    For zz = zzmax To 2 Step -1
     If Termine.Cells(zz, 2).Value = Me.LB_1.Column(2, Me.LB_1.ListIndex) Then
      Termine.Rows(zz).Delete
     End If
    Next zz

'Untergef|fffd|hrdungen entfernen
Set TrefferGef = UntGef.Rows(1).Find(Me.LB_1.Column(2, Me.LB_1.ListIndex), lookat:=xlWhole)
If TrefferGef Is Nothing Then
Else
UntGef.Range(UntGef.Cells(2, TrefferGef.Column), UntGef.Cells(20, TrefferGef.Column)).Value = ""
UntGef.Range(UntGef.Cells(2, TrefferGef.Column), UntGef.Cells(20, TrefferGef.Column)).Interior.ColorIndex = xlColorIndexNone
End If

'Ma|fffd|nahmen entfernen
Set Treffersch = SchuMa.Rows(1).Find(Me.LB_1.Column(2, Me.LB_1.ListIndex), lookat:=xlWhole)
If Treffersch Is Nothing Then
Else
SchuMa.Range(SchuMa.Cells(2, Treffersch.Column), SchuMa.Cells(20, Treffersch.Column)).Value = ""
SchuMa.Range(SchuMa.Cells(2, Treffersch.Column), SchuMa.Cells(20, Treffersch.Column)).Interior.ColorIndex = xlColorIndexNone
End If


Set TRefferDaten = Daten.Columns(1).Find(Me.LB_1.Column(2, Me.LB_1.ListIndex), lookat:=xlWhole)
If TRefferDaten Is Nothing Then
Else
 Daten.Range(Daten.Cells(TRefferDaten.Row, 2), Daten.Cells(TRefferDaten.Row, 255)).Value = ""
End If

'If Me.TXT_Gefa.Value = "" Then
Select Case Me.Cmb_Gefahr.ListIndex
 Case 0
  spalte = 2
 Case 1
  spalte = 4
 Case 2
  spalte = 6
 Case 3
  spalte = 8
 Case 4
  spalte = 10
 Case 5
  spalte = 12
 Case 6
  spalte = 14
 Case 7
  spalte = 16
 Case 8
  spalte = 18
 Case 9
  spalte = 20
 Case Else
  
End Select

If spalte <> 0 Then

Set Treffer = GeFa.Columns(spalte).Find(what:=Me.LB_1.Column(1, Me.LB_1.ListIndex), lookat:=xlWhole)
If Treffer Is Nothing Then
Else
ipos = Treffer.Row
'Benutzerdefinierte Faktoren werden Rot formatiert
GeFa.Cells(ipos, spalte).Interior.ColorIndex = xlColorIndexNone
GeFa.Cells(ipos, spalte - 1).Interior.ColorIndex = xlColorIndexNone 'Korr. 13.1.12
GeFa.Cells(ipos, spalte).Delete Shift:=xlUp
FaktorenSetzen

'Listenfeld aktualisieren
Me.LB_1.Column(0, Me.LB_1.ListIndex) = ""

'Listenfeld l|fffd|schen
Me.LB_1.Clear

'Listenfeld neu einlesen
With Me.LB_1
 
zeileMax = GeFa.Range("B65536").End(xlUp).Row

  For zeile = 2 To zeileMax
      .AddItem ""
      .Column(1, i) = GeFa.Cells(zeile, 2).Value
      .Column(2, i) = GeFa.Cells(zeile, 1).Value
      i = i + 1
  Next zeile

End With
'ende Listenfeld neu einlesen

End If
TXT_Gefa.Value = ""


'NEU
'Checken, welche Gef|fffd|hrdungen angekreuzt sind
Set Treffer = GeFa.Rows(1).Find(what:=Me.Cmb_Gefahr.Value, lookat:=xlWhole)
If Treffer Is Nothing Then
Else
zeileMax = GeFa.Cells(65536, Treffer.Column).End(xlUp).Row

  For zeile = 2 To zeileMax
   If GeFa.Cells(zeile, Treffer.Column - 1).Interior.ColorIndex >= 0 Then
    Me.LB_1.Column(0, zeile - 2) = "X"
   Else
    Me.LB_1.Column(0, zeile - 2) = ""
   End If
  Next zeile
End If
Me.LB_1.ListIndex = 0
'Ende check

'Unload Me

End If

Else 'msgbox

End If

End Sub


Private Sub cmd_Termin_Click()
Dim ipos As Integer
Dim Treffer As Range
Dim s As String
Dim i As Integer

If Me.Lb_1_SM.ListIndex < 0 Then Exit Sub
If Me.Lb_1_SM.Column(0, Me.Lb_1_SM.ListIndex) = "" Then
 MsgBox "Aktievieren Sie zuerst die Schutzma|fffd|nahme per Doppelklick!", vbInformation
 Exit Sub
End If

i = Me.Lb_1_SM.ListIndex
'in Listbox einf|fffd|gen

  With Me.Lb_1_SM
     .Column(5, i) = Me.TXT_DatSM.Value
     .Column(6, i) = Me.TXT_Verant.Value
     .Column(8, i) = Me.TXT_DatSM2.Value
     .Column(9, i) = Me.TXT_Verant2.Value
   End With

 
s = i & Me.LB_1.Column(2, Me.LB_1.ListIndex)
Set Treffer = Termine.Columns(8).Find(what:=s, lookat:=xlWhole)

If Treffer Is Nothing Then
'in Tabelle Termine schreiben
ipos = Termine.Range("A65536").End(xlUp).Row + 1
Else
ipos = Treffer.Row
End If

Termine.Cells(ipos, 1).Value = Me.Lb_1_SM.ListIndex
Termine.Cells(ipos, 2).Value = Me.LB_1.Column(2, Me.LB_1.ListIndex)
Termine.Cells(ipos, 3).Value = Me.Lb_1_SM.Column(2, Me.Lb_1_SM.ListIndex)
Termine.Cells(ipos, 4).Value = Me.Lb_1_SM.Column(3, Me.Lb_1_SM.ListIndex)
Termine.Cells(ipos, 5).Value = Me.Lb_1_SM.Column(4, Me.Lb_1_SM.ListIndex)
Termine.Cells(ipos, 6).Value = Me.Lb_1_SM.Column(5, Me.Lb_1_SM.ListIndex)
Termine.Cells(ipos, 7).Value = Me.Lb_1_SM.Column(6, Me.Lb_1_SM.ListIndex)
Termine.Cells(ipos, 8).Value = Termine.Cells(ipos, 1).Value & Termine.Cells(ipos, 2).Value
Termine.Cells(ipos, 9).Value = Me.Lb_1_SM.Column(8, Me.Lb_1_SM.ListIndex)
Termine.Cells(ipos, 10).Value = Me.Lb_1_SM.Column(9, Me.Lb_1_SM.ListIndex)

End Sub

Private Sub Cmd_1T_Click()
Dim Treffer As Range
Dim s As String
Dim ipos As Integer


If Me.Lb_1_SM.ListIndex < 0 Then Exit Sub

'T kennzeichnen
 If Me.Lb_1_SM.Column(2, Me.Lb_1_SM.ListIndex) = "X" Then
  Me.Lb_1_SM.Column(2, Me.Lb_1_SM.ListIndex) = ""
  Me.Lb_1_SM.Column(0, Me.Lb_1_SM.ListIndex) = ""
 Else
  Me.Lb_1_SM.Column(2, Me.Lb_1_SM.ListIndex) = "X"
  Me.Lb_1_SM.Column(0, Me.Lb_1_SM.ListIndex) = "X"
 End If
 Me.Lb_1_SM.Column(3, Me.Lb_1_SM.ListIndex) = ""
 Me.Lb_1_SM.Column(4, Me.Lb_1_SM.ListIndex) = ""
 
'Ende Update


'Ablage in Tabelle Termine

i = Me.Lb_1_SM.ListCount
s = Me.Lb_1_SM.ListIndex & Me.LB_1.Column(2, Me.LB_1.ListIndex)
Set Treffer = Termine.Columns(8).Find(what:=s, lookat:=xlWhole)
If Treffer Is Nothing Then
 ipos = Termine.Range("A65536").End(xlUp).Row + 1
Else
 ipos = Treffer.Row
End If
Termine.Cells(ipos, 1).Value = Me.Lb_1_SM.ListIndex
Termine.Cells(ipos, 2).Value = Me.LB_1.Column(2, Me.LB_1.ListIndex)
Termine.Cells(ipos, 3).Value = "X"
Termine.Cells(ipos, 4).Value = ""
Termine.Cells(ipos, 5).Value = ""
Termine.Cells(ipos, 8).Value = Termine.Cells(ipos, 1).Value & Termine.Cells(ipos, 2).Value

'Synchronisierung in Tabelle Daten
Set Treffer = Daten.Columns(1).Find(what:=Me.LB_1.Column(2, Me.LB_1.ListIndex), lookat:=xlWhole)
If Treffer Is Nothing Then

Else
 zeile = Treffer.Row
End If

spalte = Me.Lb_1_SM.ListIndex + 23 'Korrektur SO am 08.07.2013
If Me.Lb_1_SM.Column(0, Me.Lb_1_SM.ListIndex) = "X" Then
Daten.Cells(zeile, spalte).Value = "X"
Else
Daten.Cells(zeile, spalte).Value = ""
End If

End Sub


Private Sub Cmd_1O_Click()
Dim Treffer As Range
Dim s As String
Dim ipos As Integer

If Me.Lb_1_SM.ListIndex < 0 Then Exit Sub

'O kennzeichnen
 If Me.Lb_1_SM.Column(3, Me.Lb_1_SM.ListIndex) = "X" Then
  Me.Lb_1_SM.Column(3, Me.Lb_1_SM.ListIndex) = ""
  Me.Lb_1_SM.Column(0, Me.Lb_1_SM.ListIndex) = ""
 Else
  Me.Lb_1_SM.Column(3, Me.Lb_1_SM.ListIndex) = "X"
  Me.Lb_1_SM.Column(0, Me.Lb_1_SM.ListIndex) = "X"
 End If
 Me.Lb_1_SM.Column(2, Me.Lb_1_SM.ListIndex) = ""
 Me.Lb_1_SM.Column(4, Me.Lb_1_SM.ListIndex) = ""
 
'Ende Update


'Ablage in Tabelle Termine

i = Me.Lb_1_SM.ListCount
s = Me.Lb_1_SM.ListIndex & Me.LB_1.Column(2, Me.LB_1.ListIndex)
Set Treffer = Termine.Columns(8).Find(what:=s, lookat:=xlWhole)
If Treffer Is Nothing Then
 ipos = Termine.Range("A65536").End(xlUp).Row + 1
Else
 ipos = Treffer.Row
End If
Termine.Cells(ipos, 1).Value = Me.Lb_1_SM.ListIndex
Termine.Cells(ipos, 2).Value = Me.LB_1.Column(2, Me.LB_1.ListIndex)
Termine.Cells(ipos, 3).Value = ""
Termine.Cells(ipos, 4).Value = "X"
Termine.Cells(ipos, 5).Value = ""
Termine.Cells(ipos, 8).Value = Termine.Cells(ipos, 1).Value & Termine.Cells(ipos, 2).Value

'Synchronisierung in Tabelle Daten
Set Treffer = Daten.Columns(1).Find(what:=Me.LB_1.Column(2, Me.LB_1.ListIndex), lookat:=xlWhole)
If Treffer Is Nothing Then

Else
 zeile = Treffer.Row
End If

spalte = Me.Lb_1_SM.ListIndex + 23 'Korrektur SO am 08.07.2013
If Me.Lb_1_SM.Column(0, Me.Lb_1_SM.ListIndex) = "X" Then
Daten.Cells(zeile, spalte).Value = "X"
Else
Daten.Cells(zeile, spalte).Value = ""
End If

End Sub


Private Sub Cmd_1P_Click()
Dim Treffer As Range
Dim s As String
Dim ipos As Integer

If Me.Lb_1_SM.ListIndex < 0 Then Exit Sub

'P kennzeichnen
 If Me.Lb_1_SM.Column(4, Me.Lb_1_SM.ListIndex) = "X" Then
  Me.Lb_1_SM.Column(4, Me.Lb_1_SM.ListIndex) = ""
  Me.Lb_1_SM.Column(0, Me.Lb_1_SM.ListIndex) = ""
 Else
  Me.Lb_1_SM.Column(4, Me.Lb_1_SM.ListIndex) = "X"
  Me.Lb_1_SM.Column(0, Me.Lb_1_SM.ListIndex) = "X"
 End If
 Me.Lb_1_SM.Column(2, Me.Lb_1_SM.ListIndex) = ""
 Me.Lb_1_SM.Column(3, Me.Lb_1_SM.ListIndex) = ""
 
'Ende Update


'Ablage in Tabelle Termine

i = Me.Lb_1_SM.ListCount
s = Me.Lb_1_SM.ListIndex & Me.LB_1.Column(2, Me.LB_1.ListIndex)
Set Treffer = Termine.Columns(8).Find(what:=s, lookat:=xlWhole)
If Treffer Is Nothing Then
 ipos = Termine.Range("A65536").End(xlUp).Row + 1
Else
 ipos = Treffer.Row
End If
Termine.Cells(ipos, 1).Value = Me.Lb_1_SM.ListIndex
Termine.Cells(ipos, 2).Value = Me.LB_1.Column(2, Me.LB_1.ListIndex)
Termine.Cells(ipos, 3).Value = ""
Termine.Cells(ipos, 4).Value = ""
Termine.Cells(ipos, 5).Value = "X"
Termine.Cells(ipos, 8).Value = Termine.Cells(ipos, 1).Value & Termine.Cells(ipos, 2).Value

'Synchronisierung in Tabelle Daten
Set Treffer = Daten.Columns(1).Find(what:=Me.LB_1.Column(2, Me.LB_1.ListIndex), lookat:=xlWhole)
If Treffer Is Nothing Then

Else
 zeile = Treffer.Row
End If

spalte = Me.Lb_1_SM.ListIndex + 23 'Korrektur SO am 08.07.2013
If Me.Lb_1_SM.Column(0, Me.Lb_1_SM.ListIndex) = "X" Then
Daten.Cells(zeile, spalte).Value = "X"
Else
Daten.Cells(zeile, spalte).Value = ""
End If
End Sub

Private Sub cmd_Abbrechen_Click()
 Unload Me
End Sub

Private Sub Lb_1_SM_Click()
Dim Treffer As Range
Dim TrefferSchuMa As Range

'|fffd|bertragen der Inhalte aus dem Listenfeld Lb_1_SM in die darunter liegenden Textfelder

Me.Txt_SchuMa.Value = HoleMaText(Left(Me.Lb_1_SM.Column(1, Me.Lb_1_SM.ListIndex), 75))

Me.TXT_DatSM.Value = Me.Lb_1_SM.Column(5, Me.Lb_1_SM.ListIndex)
Me.TXT_Verant.Value = Me.Lb_1_SM.Column(6, Me.Lb_1_SM.ListIndex)
Me.TXT_DatSM2.Value = Me.Lb_1_SM.Column(8, Me.Lb_1_SM.ListIndex)
Me.TXT_Verant2.Value = Me.Lb_1_SM.Column(9, Me.Lb_1_SM.ListIndex)


'Pr|fffd|fen, ob es sich um eine benutzerdefinierte Schutzma|fffd|nahme handelt
Set Treffer = SchuMa.Rows(1).Find(what:=Me.LB_1.Column(2, Me.LB_1.ListIndex), lookat:=xlWhole)
If Not Treffer Is Nothing Then

 Set TrefferSchuMa = SchuMa.Columns(Treffer.Column).Find(what:=Me.Lb_1_SM.Column(1, Me.Lb_1_SM.ListIndex), lookat:=xlWhole)
 If Not TrefferSchuMa Is Nothing Then
  If TrefferSchuMa.Interior.ColorIndex = 3 Then
   Me.Cmd_SchuMa_|fffd|ndern.Enabled = True
   Me.Cmd_SchuMa_L|fffd|schen.Enabled = True
  Else
   Me.Cmd_SchuMa_|fffd|ndern.Enabled = False
   Me.Cmd_SchuMa_L|fffd|schen.Enabled = False
  End If
 End If

End If

End Sub


Private Sub Cmd_Risikomatrix_Click()
If Me.Lb_1UG.ListIndex < 0 Then
 MsgBox "Bitte markieren Sie zun|fffd|chst einen Eintrag im Listenfeld Untergef|fffd|hrdungen!", vbInformation
 Exit Sub
End If
  dlg_Beurteilung.Show
  Select Case sheets("Steuerung").Cells(1, 1).Value
    Case "gruen"
      Im_Gruen_Click
    Case "gelb"
      Img_Gelb_Click
    Case "rot"
      IMG_Rot3_Click
    Case Else
  End Select
  Unload dlg_Beurteilung
  'dlg_Beurteilung.Hide
End Sub


Private Sub Cmd_UGef_hinzu_Click()
'Gef|fffd|hrdungsfaktor hinzuf|fffd|gen
Dim Treffer As Range
Dim spalte As Integer
Dim ipos As Integer
Dim i As Integer

If Me.TXT_UGef.Value <> "" Then

Set Treffer = UntGef.Rows(1).Find(what:=Me.LB_1.Column(2, Me.LB_1.ListIndex), lookat:=xlWhole)
If Treffer Is Nothing Then
Exit Sub
Else
spalte = Treffer.Column
End If

If spalte <> 0 Then

Set Treffer = UntGef.Columns(spalte).Find(what:=Me.TXT_UGef.Value, lookat:=xlWhole)
If Treffer Is Nothing Then
 ipos = UntGef.Cells(65536, spalte).End(xlUp).Row + 1
 UntGef.Cells(ipos, spalte).Value = Me.TXT_UGef.Value
 
 'Benutzerdefinierte Untergef|fffd|hrungen Rot f|fffd|rben
 UntGef.Cells(ipos, spalte).Interior.ColorIndex = 3
 
  Me.Lb_1UG.AddItem "X"
           
  i = Me.Lb_1UG.ListCount
  
  Me.Lb_1UG.Column(1, i - 1) = Me.TXT_UGef.Value
  Me.Lb_1UG.Column(2, i - 1) = ""
  Me.Lb_1UG.Column(3, i - 1) = ""
  Me.Lb_1UG.Column(4, i - 1) = ""
  Me.Lb_1UG.Column(5, i - 1) = UntGef.Cells(1, spalte)
  Me.Lb_1UG.ListIndex = i - 1
  
  'neu am 17.3.12
  Set Treffer = Daten.Columns(1).Find(what:=Me.LB_1.Column(2, Me.LB_1.ListIndex), lookat:=xlWhole)
  If Treffer Is Nothing Then
  zeile = 3
  Else
   zeile = Treffer.Row
  End If

  Daten.Cells(Treffer.Row, Me.Lb_1UG.ListIndex + 2).Value = "X"
  'ende neu 17.3.12
  
Else
 MsgBox "Diese Gef|fffd|hrdung gibt es schon!", vbInformation
End If


End If
Me.TXT_UGef.Value = ""
'Me.Lb_1UG.ListIndex = 0
End If
End Sub



Private Sub Lb_1UG_Click()
Dim Treffer As Range
Dim TrefferUntge As Range

'neue Prozedur
If Me.Lb_1UG.ListIndex >= 0 Then
  Me.TXT_UGef.Value = Me.Lb_1UG.Column(1, Me.Lb_1UG.ListIndex)
 Else
 Me.TXT_UGef.Value = ""
End If

'Pr|fffd|fen, ob es sich um einen benutzerdefinierten Eitnrag handelt
Set Treffer = UntGef.Rows(1).Find(what:=Me.LB_1.Column(2, Me.LB_1.ListIndex), lookat:=xlWhole)
If Not Treffer Is Nothing Then

 Set TrefferUntge = UntGef.Columns(Treffer.Column).Find(what:=Me.Lb_1UG.Column(1, Me.Lb_1UG.ListIndex), lookat:=xlWhole)
 
If Not TrefferUntge Is Nothing Then
 If TrefferUntge.Interior.ColorIndex = 3 Then
  Me.Cmd_UGef_|fffd|ndern.Enabled = True
  Me.Cmd_UGef_l|fffd|schen.Enabled = True
 Else
  Me.Cmd_UGef_|fffd|ndern.Enabled = False
  Me.Cmd_UGef_l|fffd|schen.Enabled = False
 End If
End If

End If

End Sub

Private Sub Cmd_UGef_|fffd|ndern_Click()
Dim Treffer As Range
Dim spalte As Integer
Dim ipos As Integer
Dim i As Integer

If Me.TXT_UGef.Value <> "" Then

Set Treffer = UntGef.Rows(1).Find(what:=Me.LB_1.Column(2, Me.LB_1.ListIndex), lookat:=xlWhole)
If Treffer Is Nothing Then
Else
spalte = Treffer.Column
End If

If spalte <> 0 Then

Set Treffer = UntGef.Columns(spalte).Find(what:=Me.Lb_1UG.Column(1, Me.Lb_1UG.ListIndex), lookat:=xlWhole)
If Treffer Is Nothing Then
Else
 ipos = Treffer.Row
 UntGef.Cells(ipos, spalte).Value = Me.TXT_UGef.Value
 'Benutzerdefinierte Untergef|fffd|hrungen Rot f|fffd|rben
 UntGef.Cells(ipos, spalte).Interior.ColorIndex = 3
 'Listenfeld aktualisieren
Me.Lb_1UG.Column(1, Me.Lb_1UG.ListIndex) = UntGef.Cells(ipos, spalte).Value
 
End If

End If
Me.TXT_UGef.Value = ""
End If

End Sub


Private Sub Cmd_UGef_l|fffd|schen_Click()
'L|fffd|schen benutzerdefinierter Untergef|fffd|hrdungen
Dim Treffer As Range
Dim spalte As Integer
Dim ipos As Integer
Dim i As Integer
Dim zeile As Long
Dim zeileMax As Long

If Me.TXT_UGef.Value <> "" Then


Set Treffer = UntGef.Rows(1).Find(what:=Me.LB_1.Column(2, Me.LB_1.ListIndex), lookat:=xlWhole)
If Treffer Is Nothing Then
Else
spalte = Treffer.Column
End If

If spalte <> 0 Then

Set Treffer = UntGef.Columns(spalte).Find(what:=Me.Lb_1UG.Column(1, Me.Lb_1UG.ListIndex), lookat:=xlWhole)
If Treffer Is Nothing Then
Else
 ipos = Treffer.Row
 UntGef.Cells(ipos, spalte).Interior.ColorIndex = xlColorIndexNone
 UntGef.Cells(ipos, spalte).Delete Shift:=xlUp
 Me.TXT_Gefa.Value = ""
 FaktorenSetzen
 
 'Listenfeld neu einlesen
Me.Lb_1UG.Clear
With Me.Lb_1UG
  i = 0

  Set Treffer = UntGef.Rows(1).Find(what:=Me.LB_1.Column(2, Me.LB_1.ListIndex), lookat:=xlWhole)

  If Treffer Is Nothing Then
  Else
  zeileMax = UntGef.Cells(65536, Treffer.Column).End(xlUp).Row

  For zeile = 2 To zeileMax

       .AddItem Pr|fffd|fenUnterGefa(Me.LB_1.Column(2, Me.LB_1.ListIndex), i + 1)
       .Column(1, i) = UntGef.Cells(zeile, Treffer.Column).Value
       .Column(2, i) = ""
       .Column(3, i) = ""
       .Column(4, i) = ""
       .Column(5, i) = UntGef.Cells(1, Treffer.Column)
       i = i + 1

  Next zeile

  End If

End With

Me.TXT_UGef.Value = ""
  If Me.Lb_1UG.ListCount > 0 Then
   Me.Lb_1UG.ListIndex = 0
  End If
End If

End If

End If

End Sub


Private Sub Cmd_SchuMa_Hinzu_Click()
'Schutzma|fffd|name hinzuf|fffd|gen
Dim Treffer As Range
Dim spalte As Integer
Dim ipos As Integer
Dim i As Integer

'neu am 12.03.2012
'If Lb_1_SM.Column(1, Me.Lb_1_SM.ListIndex) = Me.Txt_SchuMa.Value Then
' Exit Sub
'End If

If Me.Txt_SchuMa.Value <> "" Then
  Set Treffer = SchuMa.Rows(1).Find(what:=Me.LB_1.Column(2, Me.LB_1.ListIndex), lookat:=xlWhole)
  If Treffer Is Nothing Then
  
  Else
  spalte = Treffer.Column
  End If
  
  If spalte <> 0 Then
  
      Set Treffer = SchuMa.Columns(spalte).Find(what:=Me.Txt_SchuMa.Value, lookat:=xlWhole)
      If Treffer Is Nothing Then
        ipos = SchuMa.Cells(65536, spalte).End(xlUp).Row + 1
        SchuMa.Cells(ipos, spalte).Value = Me.Txt_SchuMa.Value
        'Benutzerdefinierte Schutzma|fffd|nahme rot f|fffd|rben
        SchuMa.Cells(ipos, spalte).Interior.ColorIndex = 3
        
        i = Me.Lb_1_SM.ListCount
       
         Me.Lb_1_SM.AddItem "X", i
         Me.Lb_1_SM.Column(1, i) = Me.Txt_SchuMa.Value
         Me.Lb_1_SM.Column(2, i) = ""
         Me.Lb_1_SM.Column(3, i) = ""
         Me.Lb_1_SM.Column(4, i) = ""
         Me.Lb_1_SM.Column(5, i) = ""
         Me.Lb_1_SM.Column(6, i) = ""
         Me.Lb_1_SM.Column(7, i) = SchuMa.Cells(1, spalte)
         Me.Lb_1_SM.Column(8, i) = ""
         Me.Lb_1_SM.Column(9, i) = ""
          
         'In DATEN-Tabelle das Kreuz bei den Ma|fffd|nahmen setzen
          Set Treffer = Daten.Columns(1).Find(what:=Me.LB_1.Column(2, Me.LB_1.ListIndex), lookat:=xlWhole)
          If Treffer Is Nothing Then
          zeile = 3
          Else
           zeile = Treffer.Row
          End If
          
        i = Me.Lb_1_SM.ListCount - 1
        Me.Lb_1_SM.Column(0, i) = "X"
        
         Daten.Cells(zeile, i + 23).Value = "X"
       
 
        If Me.Lb_1_SM.ListCount > 0 Then
         Me.Lb_1_SM.ListIndex = i
        End If
    Else
     MsgBox "Diese Schutzma|fffd|nahme gibt es schon!", vbInformation
   End If
  End If

End If
Me.Txt_SchuMa.Value = ""
'End If
End Sub

Private Sub Cmd_SchuMa_|fffd|ndern_Click()
Dim Treffer As Range
Dim spalte As Integer
Dim ipos As Integer
Dim i As Integer

If Me.Lb_1_SM.ListIndex < 0 Then Exit Sub

Set Treffer = SchuMa.Rows(1).Find(what:=Me.LB_1.Column(2, Me.LB_1.ListIndex), lookat:=xlWhole)
If Treffer Is Nothing Then
Else
spalte = Treffer.Column
End If

If spalte <> 0 Then

Set Treffer = SchuMa.Columns(spalte).Find(what:=Me.Lb_1_SM.Column(1, Me.Lb_1_SM.ListIndex), lookat:=xlWhole)
If Treffer Is Nothing Then
Else
 ipos = Treffer.Row
 SchuMa.Cells(ipos, spalte).Value = Me.Txt_SchuMa.Value
 'Listenfeld aktualisieren
 Me.Lb_1_SM.Column(1, Me.Lb_1_SM.ListIndex) = SchuMa.Cells(ipos, spalte).Value
End If

End If

End Sub


Private Sub Cmd_SchuMa_L|fffd|schen_Click()
'L|fffd|schen benutzerdefinierter Schutzma|fffd|nahme
Dim Treffer As Range
Dim spalte As Integer
Dim ipos As Integer
Dim i As Integer
Dim zeile As Long
Dim zeileMax As Long
Dim TRefferDaten As Range


If Me.Lb_1_SM.ListIndex < 0 Then Exit Sub

If MsgBox("Beim L|fffd|schen der benutzerdefinierten Schutzma|fffd|nahme werden alle dazugeh|fffd|rigen " & _
"TOP's und Termine und verantwortliche Personen der Schutzma|fffd|nahme entfernt." & vbLf & vbLf & _
"Trotzdem l|fffd|schen?", vbYesNo + vbQuestion) = vbYes Then

 'neu am 22.3.12
  strkey = Me.Lb_1_SM.ListIndex & Me.LB_1.Column(2, Me.LB_1.ListIndex)
      
      Set Treffer = Termine.Range("H:H").Find(strkey, lookat:=xlWhole)
      
      If Not Treffer Is Nothing Then
       Termine.Rows(Treffer.Row).Delete
      End If
  
 
 'end Neu
   'L|fffd|schen Schutzma|fffd|nahme aus DATEN
   spalte = Me.Lb_1_SM.ListIndex + 23
   Set TRefferDaten = Daten.Columns(1).Find(what:=Me.LB_1.Column(2, Me.LB_1.ListIndex), lookat:=xlWhole)
   If Not TRefferDaten Is Nothing Then
    Daten.Cells(TRefferDaten.Row, spalte).Value = ""
   End If
   
   'Ende
  


    Set Treffer = SchuMa.Rows(1).Find(what:=Me.LB_1.Column(2, Me.LB_1.ListIndex), lookat:=xlWhole)
    If Treffer Is Nothing Then
    Else
    spalte = Treffer.Column
    End If
    
    If spalte <> 0 Then
    
    Set Treffer = SchuMa.Columns(spalte).Find(what:=Me.Lb_1_SM.Column(1, Me.Lb_1_SM.ListIndex), lookat:=xlWhole)
    
    If Treffer Is Nothing Then
    Else
     ipos = Treffer.Row
     SchuMa.Cells(ipos, spalte).Interior.ColorIndex = xlColorIndexNone
     SchuMa.Cells(ipos, spalte).Delete Shift:=xlUp
     Me.Txt_SchuMa.Value = ""
     FaktorenSetzen
     
     'Aktualisieren
    'Ma|fffd|nahmen suchen und einspielen
    i = 0
    With Me.Lb_1_SM
     .Clear
      
    Set Treffer = SchuMa.Rows(1).Find(what:=Me.LB_1.Column(2, Me.LB_1.ListIndex), lookat:=xlWhole)
    
    If Treffer Is Nothing Then
    Else
    zeileMax = SchuMa.Cells(65536, Treffer.Column).End(xlUp).Row
      For zeile = 2 To zeileMax
        
           .AddItem Pr|fffd|fenSchutzMa(Me.LB_1.Column(2, Me.LB_1.ListIndex), i + 1)
           If Len(SchuMa.Cells(zeile, Treffer.Column).Value) > 70 Then
           .Column(1, i) = Left(SchuMa.Cells(zeile, Treffer.Column).Value, 70) & "..."
           Else
           .Column(1, i) = SchuMa.Cells(zeile, Treffer.Column).Value
           End If
           
           .Column(2, i) = ""
           .Column(3, i) = ""
           .Column(4, i) = ""
           .Column(5, i) = ""
           .Column(6, i) = ""
           .Column(7, i) = SchuMa.Cells(1, Treffer.Column)
           .Column(8, i) = ""
           .Column(9, i) = ""
          
          i = i + 1
      Next zeile
      
      
      
    End If
    
    If Me.Lb_1_SM.ListCount > 0 Then
     Me.Lb_1_SM.ListIndex = 0
    End If
    
    End With
    
    
    'dazugeh|fffd|rige TOPS und Termine suchen und einspielen
    With Me.Lb_1_SM
      For i = 0 To Me.Lb_1_SM.ListCount - 1
      strkey = i & Me.LB_1.Column(2, Me.LB_1.ListIndex)
      
      Set Treffer = Termine.Range("H:H").Find(strkey, lookat:=xlWhole)
      
      If Not Treffer Is Nothing Then
       
           .Column(2, i) = Termine.Cells(Treffer.Row, 3).Value
           .Column(3, i) = Termine.Cells(Treffer.Row, 4).Value
           .Column(4, i) = Termine.Cells(Treffer.Row, 5).Value
           .Column(5, i) = Termine.Cells(Treffer.Row, 6).Value
           .Column(6, i) = Termine.Cells(Treffer.Row, 7).Value
           '.Column(7, i) = SchuMa.Cells(1, Treffer.Column)
           .Column(8, i) = Termine.Cells(Treffer.Row, 9).Value
           .Column(9, i) = Termine.Cells(Treffer.Row, 10).Value
       
      End If
      
      Next i
    End With
     
    End If
    
    End If
    
    

    
End If 'R|fffd|ckfrage

End Sub

Private Sub Img_Del_Click()
Dim strkey As String
Dim i As Integer

'Termine l|fffd|schen
If Me.Lb_1_SM.ListIndex < 0 Then


Else
i = Me.Lb_1_SM.ListIndex
'dazugeh|fffd|rige TOPS und Termine suchen und einspielen
With Me.Lb_1_SM

  strkey = i & Me.LB_1.Column(2, Me.LB_1.ListIndex)
  
  Set Treffer = Termine.Range("H:H").Find(strkey, lookat:=xlWhole)
  
  If Not Treffer Is Nothing Then
   
   Termine.Range(Termine.Cells(Treffer.Row, 6), Termine.Cells(Treffer.Row, 7)).ClearContents 'Korrektur SO am 08.07.2013
   Termine.Range(Termine.Cells(Treffer.Row, 9), Termine.Cells(Treffer.Row, 10)).ClearContents 'Korrektur SO am 08.07.2013
'   Termine.Rows(Treffer.Row).Delete 'Korrektur SO am 08.07.2013
   
   'ListBox aktualisieren
   Me.Lb_1_SM.Column(5, i) = ""
   Me.Lb_1_SM.Column(6, i) = ""
   Me.Lb_1_SM.Column(8, i) = ""
   Me.Lb_1_SM.Column(9, i) = ""
   'Ende ListBox aktualisieren
   
  End If
  
End With
 
 
 Me.TXT_DatSM.Value = ""
 Me.TXT_Verant.Value = ""
 Me.TXT_DatSM2.Value = ""
 Me.TXT_Verant2.Value = ""
End If

 
End Sub



Sub HakenReinRaus()

'Haken in Tabelle |fffd|bersicht setzen/wegnehmen
Select Case Me.LB_1.Column(2, Me.LB_1.ListIndex)
 Case "1.1"
   |fffd|bersicht.Range("D7").Value = s
 Case "1.2"
   |fffd|bersicht.Range("G7").Value = s
 Case "1.3"
   |fffd|bersicht.Range("J7").Value = s
 Case "1.4"
   |fffd|bersicht.Range("M7").Value = s
 Case "1.5"
   |fffd|bersicht.Range("P7").Value = s
 Case "1.6"
   |fffd|bersicht.Range("S7").Value = s
 Case "1.7"
   |fffd|bersicht.Range("D10").Value = s
 Case "1.8"
   |fffd|bersicht.Range("G10").Value = s
 Case "1.9"
   |fffd|bersicht.Range("J10").Value = s
 Case "1.10"
   |fffd|bersicht.Range("M10").Value = s
 Case "1.11"
   |fffd|bersicht.Range("P10").Value = s
 Case "1.12"
   |fffd|bersicht.Range("S10").Value = s
   
 '2
 Case "2.1"
   |fffd|bersicht.Range("D14").Value = s
 Case "2.2"
   |fffd|bersicht.Range("G14").Value = s
 Case "2.3"
   |fffd|bersicht.Range("J14").Value = s
 Case "2.4"
   |fffd|bersicht.Range("M14").Value = s
 Case "2.5"
   |fffd|bersicht.Range("P14").Value = s
 Case "2.6"
   |fffd|bersicht.Range("S14").Value = s
 Case "2.7"
   |fffd|bersicht.Range("D17").Value = s
 Case "2.8"
   |fffd|bersicht.Range("G17").Value = s
 Case "2.9"
   |fffd|bersicht.Range("J17").Value = s
 Case "2.10"
   |fffd|bersicht.Range("M17").Value = s
 Case "2.11"
   |fffd|bersicht.Range("P17").Value = s
 Case "2.12"
   |fffd|bersicht.Range("S17").Value = s
     
 '3
 Case "3.1"
   |fffd|bersicht.Range("D20").Value = s
 Case "3.2"
   |fffd|bersicht.Range("G20").Value = s
 Case "3.3"
   |fffd|bersicht.Range("J20").Value = s
 Case "3.4"
   |fffd|bersicht.Range("M20").Value = s
 Case "3.5"
   |fffd|bersicht.Range("P20").Value = s
 Case "3.6"
   |fffd|bersicht.Range("S20").Value = s
 Case "3.7"
   |fffd|bersicht.Range("D23").Value = s
 Case "3.8"
   |fffd|bersicht.Range("G23").Value = s
 Case "3.9"
   |fffd|bersicht.Range("J23").Value = s
 Case "3.10"
   |fffd|bersicht.Range("M23").Value = s
 Case "3.11"
   |fffd|bersicht.Range("P23").Value = s
 Case "3.12"
   |fffd|bersicht.Range("S23").Value = s
   
   
   '4
 Case "4.1"
   |fffd|bersicht.Range("D23").Value = s
 Case "4.2"
   |fffd|bersicht.Range("G23").Value = s
 Case "4.3"
   |fffd|bersicht.Range("J23").Value = s
 Case "4.4"
   |fffd|bersicht.Range("M23").Value = s
 Case "4.5"
   |fffd|bersicht.Range("P23").Value = s
 Case "4.6"
   |fffd|bersicht.Range("S23").Value = s
 Case "4.7"
   |fffd|bersicht.Range("D29").Value = s
 Case "4.8"
   |fffd|bersicht.Range("G29").Value = s
 Case "4.9"
   |fffd|bersicht.Range("J29").Value = s
 Case "4.10"
   |fffd|bersicht.Range("M29").Value = s
 Case "4.11"
   |fffd|bersicht.Range("P29").Value = s
 Case "4.12"
   |fffd|bersicht.Range("S29").Value = s
   
   
   '5
 Case "5.1"
   |fffd|bersicht.Range("D32").Value = s
 Case "5.2"
   |fffd|bersicht.Range("G32").Value = s
 Case "5.3"
   |fffd|bersicht.Range("J32").Value = s
 Case "5.4"
   |fffd|bersicht.Range("M32").Value = s
 Case "5.5"
   |fffd|bersicht.Range("P32").Value = s
 Case "5.6"
   |fffd|bersicht.Range("S32").Value = s
 Case "5.7"
   |fffd|bersicht.Range("D35").Value = s
 Case "5.8"
   |fffd|bersicht.Range("G35").Value = s
 Case "5.9"
   |fffd|bersicht.Range("J35").Value = s
 Case "5.10"
   |fffd|bersicht.Range("M35").Value = s
 Case "5.11"
   |fffd|bersicht.Range("P35").Value = s
 Case "5.12"
   |fffd|bersicht.Range("S35").Value = s
   
   
   '6
 Case "6.1"
   |fffd|bersicht.Range("D38").Value = s
 Case "6.2"
   |fffd|bersicht.Range("G38").Value = s
 Case "6.3"
   |fffd|bersicht.Range("J38").Value = s
 Case "6.4"
   |fffd|bersicht.Range("M38").Value = s
 Case "6.5"
   |fffd|bersicht.Range("P38").Value = s
 Case "6.6"
   |fffd|bersicht.Range("S38").Value = s
 Case "6.7"
   |fffd|bersicht.Range("D41").Value = s
 Case "6.8"
   |fffd|bersicht.Range("G41").Value = s
 Case "6.9"
   |fffd|bersicht.Range("J41").Value = s
 Case "6.10"
   |fffd|bersicht.Range("M41").Value = s
 Case "6.11"
   |fffd|bersicht.Range("P41").Value = s
 Case "6.12"
   |fffd|bersicht.Range("S41").Value = s

  '7
 Case "7.1"
   |fffd|bersicht.Range("D44").Value = s
 Case "7.2"
   |fffd|bersicht.Range("G44").Value = s
 Case "7.3"
   |fffd|bersicht.Range("J44").Value = s
 Case "7.4"
   |fffd|bersicht.Range("M44").Value = s
 Case "7.5"
   |fffd|bersicht.Range("P44").Value = s
 Case "7.6"
   |fffd|bersicht.Range("S44").Value = s
 Case "7.7"
   |fffd|bersicht.Range("D47").Value = s
 Case "7.8"
   |fffd|bersicht.Range("G47").Value = s
 Case "7.9"
   |fffd|bersicht.Range("J47").Value = s
 Case "7.10"
   |fffd|bersicht.Range("M47").Value = s
 Case "7.11"
   |fffd|bersicht.Range("P47").Value = s
 Case "7.12"
   |fffd|bersicht.Range("S47").Value = s

 '8
 Case "8.1"
   |fffd|bersicht.Range("D50").Value = s
 Case "8.2"
   |fffd|bersicht.Range("G50").Value = s
 Case "8.3"
   |fffd|bersicht.Range("J50").Value = s
 Case "8.4"
   |fffd|bersicht.Range("M50").Value = s
 Case "8.5"
   |fffd|bersicht.Range("P50").Value = s
 Case "8.6"
   |fffd|bersicht.Range("S50").Value = s
 Case "8.7"
   |fffd|bersicht.Range("D53").Value = s
 Case "8.8"
   |fffd|bersicht.Range("G53").Value = s
 Case "8.9"
   |fffd|bersicht.Range("J53").Value = s
 Case "8.10"
   |fffd|bersicht.Range("M53").Value = s
 Case "8.11"
   |fffd|bersicht.Range("P53").Value = s
 Case "8.12"
   |fffd|bersicht.Range("S53").Value = s

 '9
 Case "9.1"
   |fffd|bersicht.Range("D56").Value = s
 Case "9.2"
   |fffd|bersicht.Range("G56").Value = s
 Case "9.3"
   |fffd|bersicht.Range("J56").Value = s
 Case "9.4"
   |fffd|bersicht.Range("M56").Value = s
 Case "9.5"
   |fffd|bersicht.Range("P56").Value = s
 Case "9.6"
   |fffd|bersicht.Range("S56").Value = s
 Case "9.7"
   |fffd|bersicht.Range("D59").Value = s
 Case "9.8"
   |fffd|bersicht.Range("G59").Value = s
 Case "9.9"
   |fffd|bersicht.Range("J59").Value = s
 Case "9.10"
   |fffd|bersicht.Range("M59").Value = s
 Case "9.11"
   |fffd|bersicht.Range("P59").Value = s
 Case "9.12"
   |fffd|bersicht.Range("S59").Value = s

'10
 Case "10.1"
   |fffd|bersicht.Range("D62").Value = s
 Case "10.2"
   |fffd|bersicht.Range("G62").Value = s
 Case "10.3"
   |fffd|bersicht.Range("J62").Value = s
 Case "10.4"
   |fffd|bersicht.Range("M62").Value = s
 Case "10.5"
   |fffd|bersicht.Range("P62").Value = s
 Case "10.6"
   |fffd|bersicht.Range("S62").Value = s
 Case "10.7"
   |fffd|bersicht.Range("D65").Value = s
 Case "10.8"
   |fffd|bersicht.Range("G65").Value = s
 Case "10.9"
   |fffd|bersicht.Range("J65").Value = s
 Case "10.10"
   |fffd|bersicht.Range("M65").Value = s
 Case "10.11"
   |fffd|bersicht.Range("P65").Value = s
 Case "10.12"
   |fffd|bersicht.Range("S65").Value = s

 Case Else
   
End Select

'Suche nach dem Gefa und gr|fffd|n einf|fffd|rben bei Selektierung des Kontrollk|fffd|stchens
Set Treffer = GeFa.UsedRange.Find(what:=Me.LB_1.Column(2, Me.LB_1.ListIndex), lookat:=xlWhole)
If Treffer Is Nothing Then
Debug.Print Me.LB_1.Column(0, Me.LB_1.ListIndex)
Else

If Me.LB_1.Column(0, Me.LB_1.ListIndex) = "X" Then
 Treffer.Interior.ColorIndex = 4
 Else
 Treffer.Interior.ColorIndex = xlColorIndexNone
End If

End If

'Ende Haken


End Sub

Private Sub Cmd_Bericht_Click()
'Update 12.03.2012 MAngelnde Aktualisierung
Application.ScreenUpdating = False
 UserForm_Initialize
 BerichtErstellen
 Unload Me
Application.ScreenUpdating = True
End Sub



Private Sub MassnahmeLoeschen() 'Eingef|fffd|gt von SO am 11.07.2013
Dim strkey As String
Dim i As Integer

'Termine l|fffd|schen
If Me.Lb_1_SM.ListIndex < 0 Then


Else
i = Me.Lb_1_SM.ListIndex
'dazugeh|fffd|rige TOPS und Termine suchen und einspielen
With Me.Lb_1_SM

  strkey = i & Me.LB_1.Column(2, Me.LB_1.ListIndex)
  
  Set Treffer = Termine.Range("H:H").Find(strkey, lookat:=xlWhole)
  
  If Not Treffer Is Nothing Then
   
 
   Termine.Rows(Treffer.Row).Delete
   
   'ListBox aktualisieren
   Me.Lb_1_SM.Column(5, i) = ""
   Me.Lb_1_SM.Column(6, i) = ""
   Me.Lb_1_SM.Column(8, i) = ""
   Me.Lb_1_SM.Column(9, i) = ""
   'Ende ListBox aktualisieren
   
  End If
  
End With
 
 
 Me.TXT_DatSM.Value = ""
 Me.TXT_Verant.Value = ""
 Me.TXT_DatSM2.Value = ""
 Me.TXT_Verant2.Value = ""
End If

 
End Sub



Attribute VB_Name = "mdl_Bericht"
Attribute VB_Name = "mdl_Dialog"
Sub TabKonfigZeigen()
 dlg_TabKonfig.Caption = "Eigenes Logo laden"
 dlg_TabKonfig.Show
End Sub

Sub KopfUndFuss()
 dlg_KopfUndFuss.Show
End Sub

Attribute VB_Name = "mdl_Formatvorlage"
Sub StatusleisteEdit()

Application.StatusBar = "Haufe Index:HI3338293 - Version 1.1.2.0 - Stand: 10.07.2013 |fffd| Haufe-Lexware GmbH & Co. KG"

End Sub
Sub SymbolLeisteErstellen()
Dim SB As CommandBar
Dim DropSym As CommandBarControl
Dim Symbol As CommandBarControl
Dim Symbol2 As CommandBarButton
Dim NeuSymb As Object
Dim i As Integer
Dim z As Integer

  On Error Resume Next
  Set SB = Application.CommandBars.Add("Haufe-V", Position:=msoBarTop)
  SB.Visible = True
  
                
Set Symbol = Application.CommandBars("Haufe-V").Controls _
    .Add(Type:=msoControlButton)
   Symbol.BeginGroup = True
   Symbol.FaceId = 1017
   'ThisWorkbook.Sheets("ICONS").Shapes("cmdzurueck").Copy
   'Symbol.PasteFace
   Symbol.TooltipText = "zur|fffd|ck"
   Symbol.OnAction = "Zurueck"
   
Set Symbol = Application.CommandBars("Haufe-V").Controls _
    .Add(Type:=msoControlButton)
   ' ThisWorkbook.Sheets("ICONS").Shapes("cmdStart").Copy
   ' Symbol.PasteFace
   Symbol.FaceId = 1016
    Symbol.Caption = "START"
    Symbol.OnAction = "Startx"
         
Set Symbol = Application.CommandBars("Haufe-V").Controls _
    .Add(Type:=msoControlButton)
     Symbol.FaceId = 1018
   'ThisWorkbook.Sheets("ICONS").Shapes("cmdvorwaerts").Copy
   'Symbol.PasteFace
   Symbol.TooltipText = "vor"
   Symbol.OnAction = "Vorwaerts"
                          
    Set Symbol = Application.CommandBars("Haufe-V").Controls _
    .Add(Type:=msoControlButton)
    Symbol.Enabled = False
    Set Symbol = Application.CommandBars("Haufe-V").Controls _
    .Add(Type:=msoControlButton)
    Symbol.Enabled = False
    Set Symbol = Application.CommandBars("Haufe-V").Controls _
    .Add(Type:=msoControlButton)
    Symbol.Enabled = False
    
  
  
    
    Set Symbol = Application.CommandBars("Haufe-V").Controls _
    .Add(Type:=msoControlComboBox)
    Symbol.Width = 200
    With Symbol
    For i = 1 To ThisWorkbook.sheets.Count
     If ThisWorkbook.sheets(i).Visible = True Then
      .AddItem Text:=sheets(i).Name
     End If
    Next i
    .ListIndex = 1
    .DropDownLines = i
    .DropDownWidth = 200
    .ListHeaderCount = 0
    .OnAction = "Auswahl"
End With
  
  For z = 1 To 3
    Set Symbol = Application.CommandBars("Haufe-V").Controls _
    .Add(Type:=msoControlButton)
    Symbol.Enabled = False
  Next z
  
'Speichern
'Set Symbol = Application.CommandBars("Haufe-V").Controls _
'    .Add(Type:=msoControlButton, ID:=3)
Set Symbol = Application.CommandBars("Haufe-V").Controls _
    .Add(Type:=msoControlButton, ID:=748)
    Symbol.Caption = "Speichern..."
    Symbol.FaceId = 3
             
'Drucken
Set Symbol = Application.CommandBars("Haufe-V").Controls _
    .Add(Type:=msoControlButton, ID:=2521)

'Kopieren
Set Symbol = Application.CommandBars("Haufe-V").Controls _
    .Add(Type:=msoControlButton, ID:=19)

         
 'Einf|fffd|gen
  Set Symbol = Application.CommandBars("Haufe-V").Controls _
    .Add(Type:=13, ID:=6002)
  
  
  'Ein leeres Symbol einf|fffd|gen
  Set Symbol = Application.CommandBars("Haufe-V").Controls _
    .Add(Type:=msoControlButton)
  Symbol.Enabled = False
  

  
    Set DropSym = SB.Controls.Add(Type:=msoControlDropdown)
  DropSym.Caption = "Optionen"
  
  DropSym.Width = 250
    With DropSym
        .AddItem Text:="Option ausw|fffd|hlen..."
        .AddItem Text:="Gitternetz ein/aus"
        .AddItem Text:="Zeilen- und Spaltenbeschriftung ein/aus"
        .AddItem Text:="Blattregister ein/aus"
        .AddItem Text:="Zoom einstellen"
        .AddItem Text:="Kopf-/Fu|fffd|zeile einstellen"
    .ListIndex = 1
    .DropDownLines = 6
    .DropDownWidth = 250
    .ListHeaderCount = 0
     '.OnAction = "Auswahl"
   End With
'Ein leeres Symbol einf|fffd|gen
  Set Symbol = Application.CommandBars("Haufe-V").Controls _
    .Add(Type:=msoControlButton)
  Symbol.Enabled = False
  
  Set Symbol2 = Application.CommandBars("Haufe-V").Controls _
    .Add(Type:=msoControlButton)
  Symbol2.Caption = "HILFE"
  Symbol2.Style = msoButtonCaption
  'Symbol.FaceId = 49
  Symbol2.OnAction = "Hilfex"
    
  Set Symbol = Application.CommandBars("Haufe-V").Controls _
    .Add(Type:=msoControlButton)
  Symbol.Enabled = False
    
End Sub

Sub SymbolLeisteLoeschen()
On Error Resume Next
 Application.CommandBars("Haufe-V").Delete
End Sub



Sub Auswahl()
Dim index As Integer

index = Application.CommandBars("Haufe-V").Controls.Item(7).ListIndex
sheets(Application.CommandBars("Haufe-V").Controls.Item(7).List(Application.CommandBars("Haufe-V").Controls.Item(7).ListIndex)).Activate
 
End Sub

Sub Auswahl2()
Dim Index2 As Integer

Index2 = Application.CommandBars("Haufe-V").Controls.Item(16).ListIndex
 
 Select Case Index2
  Case 1
  
  Case 2
   Gitternetz
  Case 3
   Spaltenbeschriftung
  Case 4
   Blattregister
  Case 5
   Zoom
  Case 6
   KopfUndFuss
'
 End Select
 
 
End Sub




Sub Gitternetz()
If ActiveWindow.DisplayGridlines = True Then
ActiveWindow.DisplayGridlines = False
Else
ActiveWindow.DisplayGridlines = True
End If
End Sub


Sub Spaltenbeschriftung()
If ActiveWindow.DisplayHeadings = True Then
ActiveWindow.DisplayHeadings = False
Else
ActiveWindow.DisplayHeadings = True
End If
End Sub

Sub Startx()
 sheets("Startseite").Activate
End Sub

Sub Hilfe2()
 
 
sheets("Hilfe").Activate

End Sub



Sub Internet()

ThisWorkbook.FollowHyperlink Address:="http://www.haufe.de", _
    NewWindow:=True
        

End Sub


Sub StatusleisteWeg()
Application.DisplayStatusBar = True
Application.StatusBar = False
End Sub

Sub AnsichtWeg()
 ActiveWindow.DisplayHeadings = False
 ActiveWindow.DisplayWorkbookTabs = False
 'Application.DisplayStatusBar = False
 Application.DisplayFormulaBar = False
 
 ActiveWindow.DisplayWorkbookTabs = True
End Sub

Sub AnsichtDA()
ActiveWindow.DisplayHeadings = True
ActiveWindow.DisplayWorkbookTabs = True
Application.DisplayStatusBar = True
Application.DisplayFormulaBar = True

End Sub


Sub Blattregister()
If ActiveWindow.DisplayWorkbookTabs = True Then
ActiveWindow.DisplayWorkbookTabs = False
Else
ActiveWindow.DisplayWorkbookTabs = True
End If
End Sub


Sub Zoom()
Application.Dialogs(xlDialogZoom).Show
End Sub

Sub SymbolleisteSchuetzen()
With Application.CommandBars("Haufe-V")
    .Protection = msoBarNoChangeVisible + msoBarNoCustomize + msoBarNoMove
    .Visible = True
End With
End Sub

Sub Zurueck()
On Error GoTo ende
 zz = ThisWorkbook.sheets("VERLAUF").Cells(1, 2).Value
zz = zz - 1

If zz = 1 Then
sheets("Startmen|fffd|").Select
Else
sheets(ThisWorkbook.sheets("VERLAUF").Cells(zz, 1).Value).Select
End If
ThisWorkbook.sheets("VERLAUF").Cells(1, 2).Value = zz
Exit Sub

ende:
zz = 1
End Sub


Sub Vorwaerts()
On Error GoTo ende
zz = ThisWorkbook.sheets("VERLAUF").Cells(1, 2).Value
zz = zz + 1

sheets(ThisWorkbook.sheets("VERLAUF").Cells(zz, 1).Value).Select
ThisWorkbook.sheets("VERLAUF").Cells(1, 2).Value = zz

Exit Sub

ende:
zz = 1
End Sub



Sub sichtbar()
 Application.CommandBars("Toolbar list").Enabled = True
 ActiveWindow.DisplayHeadings = True
 Application.DisplayFormulaBar = True

End Sub

Sub Unsichtbar()
Application.CommandBars("Toolbar list").Enabled = True
 ActiveWindow.DisplayHeadings = False
 Application.DisplayFormulaBar = False
  ActiveWindow.DisplayGridlines = False
End Sub

Sub BerichtAufrufen()
UserForm2.Show
End Sub


Sub ZoomAuf85()
Dim Blatt As Worksheet

For Each Blatt In ThisWorkbook.Worksheets
 Blatt.Activate
 ActiveWindow.Zoom = 85
Next Blatt
sheets("Startmen|fffd|").Select
End Sub
Sub tttt()
MsgBox ActiveCell.Interior.ColorIndex
End Sub


Sub LBSynchron()
On Error Resume Next
Set Symbol = Application.CommandBars("Haufe-V").Controls(7)

 Symbol.Clear


    With Symbol
    For i = 1 To ThisWorkbook.sheets.Count
     If ThisWorkbook.sheets(i).Visible = True Then
      .AddItem Text:=sheets(i).Name
     End If
    Next i
    .ListIndex = 1
    .DropDownLines = i
    .DropDownWidth = 200
    .ListHeaderCount = 0
    .OnAction = "Auswahl"
    End With
    
End Sub
Attribute VB_Name = "mdl_Funktionen"
Function Pr|fffd|feVerweis(strVerweis As String) As Boolean

     Dim Verweis As Reference

    
    For Each Verweis In Application.VBE.ActiveVBProject.References
        If Verweis.Name = strVerweis Then
         Pr|fffd|feVerweis = True
         Exit Function
        End If
    Next Verweis

End Function

Function holeGefaItem(strT As String) As String
Dim Treffer As Range

Set Treffer = GeFa.UsedRange.Find(what:=strT, lookat:=xlWhole)
If Treffer Is Nothing Then
Else
holeGefaItem = GeFa.Cells(1, Treffer.Column)
End If
End Function

Function HoleUnterGef(strSuch As String, i As Integer) As String
Dim Treffer As Range

Set Treffer = UntGef.Rows(1).Find(what:=strSuch, lookat:=xlWhole)
If Treffer Is Nothing Then
Else
HoleUnterGef = UntGef.Cells(i, Treffer.Column)
End If


End Function

Function HoleSchutz(strSuch As String, i As Integer) As String
Dim Treffer As Range

Set Treffer = SchuMa.Rows(1).Find(what:=strSuch, lookat:=xlWhole)
If Treffer Is Nothing Then
Else
HoleSchutz = SchuMa.Cells(i, Treffer.Column).Value
End If


End Function




Function TabExists(Tabname As String) As Boolean
Dim i As Integer

TabExists = False
For i = 1 To ThisWorkbook.sheets.Count

 If Tabname = ThisWorkbook.sheets(i).Name Then
  TabExists = True
  Exit For
 End If

Next i
Exit Function

End Function

Function LeereRaus(s As String) As String
Dim i As Integer

For i = 1 To Len(s)
 Select Case Mid(s, i, 1)
  Case " "
  
  Case Else
   LeereRaus = LeereRaus & Mid(s, i, 1)
 
 End Select

Next i
End Function

Private Function GetFileName(sFilePfad As String)
    Dim i As Integer


    i = Len(sFilePfad)


    Do Until Mid(sFilePfad, i, 1) = "\"
       i = i - 1
       If i = 0 Then
          Exit Do
    Loop


    If i = 0 Then
       GetFileName = sFilePfad
    Else
       GetFileName = Mid(sFilePfad, i + 1)
    End If
End Function



Function HaufeLogo1(str As String) As Boolean
HaufeLogo1 = False
On Error GoTo Fehler
ActiveSheet.Shapes("HaufeLogo").Select
HaufeLogo1 = True
Exit Function
Fehler:

End Function


Function ALogo1(str As String) As Boolean
ALogo1 = False
On Error GoTo Fehler
ActiveSheet.Shapes("aLogo").Select
ALogo1 = True
Exit Function
Fehler:

End Function


Function Pr|fffd|fSchonBelegt(strCombo As String, StrComboNr As String, strOpt As String) As Boolean
Dim obj As Control
Dim strSchl|fffd|ssel As String
Dim vglstrSchl|fffd|ssel As String
Dim i As Integer

vglstrSchl|fffd|ssel = strCombo & strOpt
i = 0
Pr|fffd|fSchonBelegt = False
For Each obj In dlg_KopfUndFuss.Controls

Select Case obj.Name

Case "ComboBox1"

If strCombo = dlg_KopfUndFuss.ComboBox1.Value Then
  If dlg_KopfUndFuss.OptionButton1.Value = True Then strSchl|fffd|ssel = strCombo & dlg_KopfUndFuss.OptionButton1.Caption
  If dlg_KopfUndFuss.OptionButton2.Value = True Then strSchl|fffd|ssel = strCombo & dlg_KopfUndFuss.OptionButton2.Caption
  If dlg_KopfUndFuss.OptionButton3.Value = True Then strSchl|fffd|ssel = strCombo & dlg_KopfUndFuss.OptionButton3.Caption
End If

 Case "ComboBox2"
 If strCombo = dlg_KopfUndFuss.ComboBox2.Value Then
  If dlg_KopfUndFuss.OptionButton4.Value = True Then strSchl|fffd|ssel = strCombo & dlg_KopfUndFuss.OptionButton4.Caption
  If dlg_KopfUndFuss.OptionButton5.Value = True Then strSchl|fffd|ssel = strCombo & dlg_KopfUndFuss.OptionButton5.Caption
  If dlg_KopfUndFuss.OptionButton6.Value = True Then strSchl|fffd|ssel = strCombo & dlg_KopfUndFuss.OptionButton6.Caption
End If

 Case "ComboBox3"
If strCombo = dlg_KopfUndFuss.ComboBox3.Value Then
  If dlg_KopfUndFuss.OptionButton7.Value = True Then strSchl|fffd|ssel = strCombo & dlg_KopfUndFuss.OptionButton7.Caption
  If dlg_KopfUndFuss.OptionButton8.Value = True Then strSchl|fffd|ssel = strCombo & dlg_KopfUndFuss.OptionButton8.Caption
  If dlg_KopfUndFuss.OptionButton9.Value = True Then strSchl|fffd|ssel = strCombo & dlg_KopfUndFuss.OptionButton9.Caption
End If

 Case "ComboBox4"
If strCombo = dlg_KopfUndFuss.ComboBox4.Value Then
  If dlg_KopfUndFuss.OptionButton10.Value = True Then strSchl|fffd|ssel = strCombo & dlg_KopfUndFuss.OptionButton10.Caption
  If dlg_KopfUndFuss.OptionButton11.Value = True Then strSchl|fffd|ssel = strCombo & dlg_KopfUndFuss.OptionButton11.Caption
  If dlg_KopfUndFuss.OptionButton12.Value = True Then strSchl|fffd|ssel = strCombo & dlg_KopfUndFuss.OptionButton12.Caption
End If

 Case "ComboBox5"
If strCombo = dlg_KopfUndFuss.ComboBox5.Value Then
  If dlg_KopfUndFuss.OptionButton13.Value = True Then strSchl|fffd|ssel = strCombo & dlg_KopfUndFuss.OptionButton13.Caption
  If dlg_KopfUndFuss.OptionButton14.Value = True Then strSchl|fffd|ssel = strCombo & dlg_KopfUndFuss.OptionButton14.Caption
  If dlg_KopfUndFuss.OptionButton15.Value = True Then strSchl|fffd|ssel = strCombo & dlg_KopfUndFuss.OptionButton15.Caption
End If
 Case "ComboBox6"
 If strCombo = dlg_KopfUndFuss.ComboBox6.Value Then
  If dlg_KopfUndFuss.OptionButton16.Value = True Then strSchl|fffd|ssel = strCombo & dlg_KopfUndFuss.OptionButton16.Caption
  If dlg_KopfUndFuss.OptionButton17.Value = True Then strSchl|fffd|ssel = strCombo & dlg_KopfUndFuss.OptionButton17.Caption
  If dlg_KopfUndFuss.OptionButton18.Value = True Then strSchl|fffd|ssel = strCombo & dlg_KopfUndFuss.OptionButton18.Caption
End If
 Case Else
  strSchl|fffd|ssel = ""

End Select

If vglstrSchl|fffd|ssel = strSchl|fffd|ssel Then
i = i + 1
strSchl|fffd|ssel = ""
End If

If i > 1 Then
  MsgBox "Diese Kombination wird doppelt verwendet." & vbLf & _
  "Bitte eine andere Option setzen!", vbInformation
  Pr|fffd|fSchonBelegt = True
  Exit Function
End If


Next obj


End Function
Attribute VB_Name = "mdl_NEU"
Option Explicit
'** komplett austuschen
'mdl_Verarbeitung
'mdl_Formatvorlage
'mdl_Tools
'mdl_Dialog
'dlg_TabKonfig
'frm_Gefahr

'**Weitere Aktionen
'Blattschutz-Kennwort rausnehmen
'VBE-Passwort setzen
'Tabelle Gef|fffd|hrungsbeurteilung austauschen

Attribute VB_Name = "mdl_Tools"

Sub BerichtErstellen()
Dim zeile As Long
Dim zeileMax As Long
Dim GefaBereich As Range
Dim GefaZelle As Range
Dim ipos As Long
Dim i As Integer
Dim isMa As Integer
Dim strTitel As String
Dim iNr As Integer
Dim TrefferGefahr As Range
Dim spalte As Integer
Dim strNach As String
Dim strSuchKey As String
Dim TrefferNote As Range
Dim TrefferSchuhMa As Range
Dim epos As Integer

Set GefaBereich = GeFa.Range("A2:S20")


With Bericht
.Unprotect
.Rows.Hidden = False
.Range("G11").Value = " "
.Range("G12").Value = " "
ipos = 13

'Berichtsdaten l|fffd|schen
.Range(.Range("StartBericht").Address, .Range("O65536")).Clear
.Range("A:A").NumberFormat = "@"
.Range("H:H").HorizontalAlignment = 3
.Range(.Rows(13), .Rows(5000)).WrapText = True
.Range(.Range("StartBericht").Address, .Range("B65536")).Font.Bold = False
.Range(.Range("StartBericht").Address, .Range("E65536")).Interior.ColorIndex = xlColorIndexNone
 zeileMax = 65536

'Gef|fffd|hrdungstitel schreiben
For i = 1 To 10

Select Case i
 Case 1
   strTitel = "Mechanische Gef|fffd|hrdungen"
   iNr = 1
 Case 2
   strTitel = "Elektrische Gef|fffd|hrdungen"
   iNr = 3
 Case 3
   strTitel = "Gef|fffd|hrdung durch Stoffe"
   iNr = 5
 Case 4
   strTitel = "Gef|fffd|hrdung durch Br|fffd|nde/Explosionen"
   iNr = 7
 Case 5
   strTitel = "Biologische Gef|fffd|hrdung"
   iNr = 9
 Case 6
   strTitel = "Gef|fffd|hrdung durch spezielle physikalische Einwirkungen"
   iNr = 11
 Case 7
   strTitel = "Gef|fffd|hrdung durch Arbeitsplatzgestaltung"
   iNr = 13
 Case 8
  strTitel = "Gef|fffd|hrdung durch ergonomische Faktoren"
  iNr = 15
 Case 9
  strTitel = "Gef|fffd|hrdung durch psychische Belastungsfaktoren"
  iNr = 17
 Case 10
  strTitel = "Sonstige Gef|fffd|hrdungs- und Belastungsfaktoren"
  iNr = 19
End Select

If .Cells(ipos, 1).Value = "" Then
    ipos = .Range("g65536").End(xlUp).Row + 1
 Else
    ipos = .Range("a65536").End(xlUp).Row + 1
End If


 .Cells(ipos, 1).Value = i
 .Cells(ipos, 2).Value = strTitel
 .Range(.Cells(ipos, 1), .Cells(ipos, 2)).Font.Bold = True


'Holen Gef|fffd|hrdungsfaktoren
For Each GefaZelle In GefaBereich

 If GefaZelle.Interior.ColorIndex = 4 And iNr = GefaZelle.Column Then
    If .Cells(ipos, 1).Value = "" Then
         ipos = .Range("g65536").End(xlUp).Row + 1
         Else
         ipos = .Range("a65536").End(xlUp).Row + 1
     End If

    .Cells(ipos, 1).Value = GefaZelle.Value

  
  strNach = GefaZelle.Value
  
  .Cells(ipos, 2).Value = GefaZelle.Offset(0, 1).Value
 .Range(.Cells(ipos, 1), .Cells(ipos, 2)).Font.Bold = True
 
 
 Set TrefferGefahr = Daten.Columns(1).Find(what:=GefaZelle.Value, lookat:=xlWhole)
 If TrefferGefahr Is Nothing Then
 Else
 For spalte = 23 To 63
 If Daten.Cells(TrefferGefahr.Row, spalte).Value = "X" Then
   .Cells(ipos, 7).Value = HoleSchutz(Daten.Cells(TrefferGefahr.Row, 1).Value, spalte - 21)
   
     ismax = Termine.Range("A65536").End(xlUp).Row
     For isMa = 2 To ismax
     If Termine.Cells(isMa, 8).Value = spalte - 23 & strNach Then
       If Termine.Cells(isMa, 3).Value = "X" Then .Cells(ipos, 8).Value = "T"
       If Termine.Cells(isMa, 4).Value = "X" Then .Cells(ipos, 8).Value = "O"
       If Termine.Cells(isMa, 5).Value = "X" Then .Cells(ipos, 8).Value = "P"
       If Termine.Cells(isMa, 6).Value <> "" Then
       .Cells(ipos, 9).Value = Termine.Cells(isMa, 6).Value
       .Cells(ipos, 10).Value = Termine.Cells(isMa, 7).Value
       End If
       If Termine.Cells(isMa, 9).Value <> "" Then
       .Cells(ipos, 11).Value = Termine.Cells(isMa, 9).Value
       .Cells(ipos, 12).Value = Termine.Cells(isMa, 10).Value
       End If
    End If

     Next isMa

   ipos = ipos + 1
 End If
 Next spalte
 
 End If
 
 'Holen der ausgef|fffd|llten Untergef|fffd|hrdungen
  Set TrefferGefahr = Daten.Columns(1).Find(what:=GefaZelle.Value, lookat:=xlWhole)
  If TrefferGefahr Is Nothing Then
  
  Else
   For spalte = 2 To 22
    If Daten.Cells(TrefferGefahr.Row, spalte).Value = "X" Then
         If .Cells(ipos, 1).Value = "" Then
         ipos = .Range("G65536").End(xlUp).Row + 1
         Else
         ipos = .Range("A65536").End(xlUp).Row + 1
         End If
                 
         .Cells(ipos, 1).Value = strNach & "." & spalte - 1
         .Cells(ipos, 2).Value = HoleUnterGef(Daten.Cells(TrefferGefahr.Row, 1).Value, spalte)
         'Hole dazugeh|fffd|riges Risiko
         strSuchKey = spalte - 2 & strNach
         Set TrefferNote = GefahrNote.Columns(4).Find(what:=strSuchKey, lookat:=xlWhole)
         If TrefferNote Is Nothing Then
         Else
         Select Case GefahrNote.Cells(TrefferNote.Row, 3).Value
          Case "Gr|fffd|n"
           zspalte = 3
           .Cells(ipos, zspalte).Interior.ColorIndex = 4
          Case "Gelb"
           zspalte = 4
           .Cells(ipos, zspalte).Interior.ColorIndex = 6
          Case "Rot"
           zspalte = 5
           .Cells(ipos, zspalte).Interior.ColorIndex = 3
          Case Else
           .Cells(ipos, 3).Interior.ColorIndex = xlColorIndexNone
         End Select
               
         End If
 
        End If
        
   Next spalte
   
   
  End If

 
 End If

Next GefaZelle


Next i
 zeileMax = .Range("A65536").End(xlUp).Row
 
 For zeile = zeileMax To 13 Step -1
  If Bericht.Cells(zeile, 2).Value = "" And Bericht.Cells(zeile, 7).Value = "" Then
   Bericht.Rows(zeile).Delete
  End If
 Next zeile
 
Bericht.PageSetup.PrintArea = "$A$1:$L$" & zeileMax
Bericht.Activate


'Bereinigung
For zeile = zeileMax + 1 To 13 Step -1
If Bericht.Cells(zeile, 1).Value <> "" Then
 If InStr(Bericht.Cells(zeile, 1).Value, ".") > 0 Then
  'diese auf keinen Fall l|fffd|schen
 Else
 epos = InStr(Bericht.Cells(zeile, 1).Value, ".")

  If epos = 0 And InStr(Bericht.Cells(zeile + 1, 1).Value, ".") = 0 Then
     Bericht.Rows(zeile).Delete
  End If
 End If
End If
Next zeile

 Bericht.Names.Add Name:="StartBericht", RefersTo:="=Gef|fffd|hrdungsbeurteilung!$a$13"

'UPDATE vom 1.4.2009 Bereinigen
zeileMax = .Range("B65536").End(xlUp).Row

.Range("A13:L" & zeileMax).BorderAround 1, xlThin, xlColorIndexAutomatic

For zeile = zeileMax + 1 To zeileMax + 20
 If .Cells(zeile, 7).Value = "" Then
  .Rows(zeile).Hidden = True
 End If
Next zeile

.Protect
End With
End Sub
Sub SpalteAKleinmachen()
Dim Blatt As Worksheet

For Each Blatt In ThisWorkbook.Worksheets
 Blatt.Activate
 Columns(1).ColumnWidth = 0.1
Next Blatt
End Sub


Sub TabellenEntSch|fffd|tzen()
Dim Blatt As Worksheet

For Each Blatt In ThisWorkbook.Worksheets

If Blatt.Visible = True Then
 Blatt.Activate
Blatt.Unprotect
 
End If
Next Blatt


End Sub

Sub TabellenSch|fffd|tzen()
Dim Blatt As Worksheet

For Each Blatt In ThisWorkbook.Worksheets

If Blatt.Visible = True Then
 Blatt.Activate
Blatt.Protect
End If
Next Blatt
START.Activate
End Sub

Sub KommForm()
Dim Notiz As Comment
Dim Blatt As Worksheet
For Each Blatt In Worksheets
    For Each Notiz In Worksheets(Blatt.Name).Comments
        With Notiz.Shape.TextFrame.Characters.Font
         .Name = "Verdana"
         .Size = 10
        End With
    Next Notiz
Next Blatt
End Sub

Sub FarbenAuslesen()
 MsgBox ActiveCell.Interior.ColorIndex
End Sub
Sub farben|fffd|bernehmen()
ThisWorkbook.Colors = ActiveWorkbook.Colors
End Sub

Sub Kopf()
Dim Blatt As Worksheet
'muss f|fffd|r jedes Tool angepasst werden
For Each Blatt In ThisWorkbook.Worksheets

 If Blatt.Visible = True Then
 
  Blatt.PageSetup.LeftFooter = "Haufe Index: HI1445369 - Version 1.1.1.0 - Stand: 08.03.2008"
  Blatt.DisplayPageBreaks = False
 End If

Next Blatt
End Sub

Sub SeitenAuf85Prozent()
Dim Blatt As Worksheet

For Each Blatt In ThisWorkbook.Worksheets

 If Blatt.Visible = True Then
  Blatt.Select
  ActiveWindow.Zoom = 85
 End If

Next Blatt
End Sub


Sub LabelsUmsetzenAllgemein()
Dim obj As Shape

With ActiveSheet
CheckBox2.BackColor = RGB(205, 205, 205)
 For Each obj In .Shapes
 
 If InStr(obj.Name, "CheckBox") > 0 Then
   obj.Select
   obj.Fill.BackColor.RGB = RGB(205, 205, 205)
 End If
 Next obj
End With
End Sub

Sub AlleSteuerelementeEinfaerbenAlle()
Dim OLEo As OLEObject


    Set OLEo = Nothing
    On Error Resume Next
    For Each OLEo In ActiveSheet.OLEObjects
 
   
     OLEo.Object.BackColor = RGB(204, 204, 204)
     'OLEo.Object.Font.Name = "Verdana"
     'OLEo.Object.Font.Size = 10
    
    Next OLEo
    
End Sub

Sub NamenL|fffd|schen()
Dim rngName As Name

For Each rngName In ThisWorkbook.Names

If InStr(rngName.RefersTo, "#REF") > 0 Then
On Error Resume Next
 rngName.Delete
End If

Next rngName
End Sub

Sub Version()
MsgBox Application.Version
End Sub



Sub SpaltenUndZeilenAusblenden()
Dim Blatt As Worksheet
For Each Blatt In ThisWorkbook.Worksheets
If Blatt.Visible = True Then
 Blatt.Activate
   ActiveWindow.DisplayHeadings = False
 End If
 Next Blatt

sheets(1).Select
End Sub


Sub HyperlinkInfosWegmachen()
Dim Blatt As Worksheet
Dim hyper As Hyperlink

For Each Blatt In ThisWorkbook.Worksheets

If Blatt.Visible = True Then
Blatt.Unprotect ""
For Each hyper In Blatt.Hyperlinks
    hyper.ScreenTip = hyper.TextToDisplay
    
 Next hyper
Blatt.Protect ""
End If

Next Blatt
End Sub


'Function PfadAuslesen() As Boolean
'Dim strDat As String
'Dim VarDat As Variant
'Dim strName As String
'
'PfadAuslesen = True
'strName = Left(ThisWorkbook.Name, Len(ThisWorkbook.Name) - 4)
'If InStr(UCase(ThisWorkbook.FullName), "MIME\") > 0 Then
' If MsgBox("Bitte speichern Sie diese Datei au|fffd|erhalb des installierten Produktes " & vbLf & _
' "in einem Verzeichnis Ihrer Wahl - es besteht sonst die Gefahr, dass von " & vbLf & _
' "Ihnen eingegebene Daten bei einem Produktupdate verloren gehen.", vbOKCancel + vbInformation) = vbOK Then
'
''On Error Resume Next
' ChDir Environ("USERPROFILE") & "\Desktop\"
' Application.EnableEvents = False
'' Application.DisplayAlerts = False
' Application.CommandBars(1).Controls(1).Controls(5).Execute
' Application.EnableEvents = True
' 'Application.DisplayAlerts = True
' PfadAuslesen = True
'  Else
' PfadAuslesen = False
' End If
'
' End If
'
'
'
'End Function
'
Sub EreignisAn()
 Application.EnableEvents = True
End Sub

Sub testerle()
Dim zaehler As Integer
Dim speicherpfadbackup As String

zaehler = InStr(ThisWorkbook.Path, "Unterhaltsrechner") - 1
speicherpfadbackup = Mid(ThisWorkbook.Path, 1, zaehler)
MsgBox speicherpfadbackup

End Sub


Sub menueid()
Dim cb As CommandBarControl

For Each cb In Application.CommandBars(1).Controls(1).Controls
 Debug.Print cb.Caption & " " & cb.ID
Next cb
End Sub


Sub SpeichernWeg()
Dim cb As CommandBarControl

For Each cb In Application.CommandBars _
("Worksheet Menu Bar").Controls(1).Controls

 If cb.ID = 3 Then
    cb.Enabled = False
 End If

Next cb


For Each cb In Application.CommandBars _
("Standard").Controls

 If cb.ID = 3 Then
    cb.Enabled = False
 End If

Next cb

Application.OnKey "^s", "MakroTest"


End Sub

Sub SpeichernDa()
Dim cb As CommandBarControl

For Each cb In Application.CommandBars _
("Worksheet Menu Bar").Controls(1).Controls

 If cb.ID = 3 Then
    cb.Enabled = True
 End If

Next cb
For Each cb In Application.CommandBars _
("Standard").Controls

 If cb.ID = 3 Then
    cb.Enabled = True
 End If

Next cb
Application.OnKey "^s"
End Sub

Sub Makrotest()
 MsgBox "Bitte benutzen Sie den Speicherbefehl in der Haufe-Symbolleiste!", vbInformation
End Sub

Sub MakroWarnungAn()
On Error Resume Next
START.Shapes("TextMakro").Visible = True
End Sub

Sub MakroWarnungAus()
On Error Resume Next
START.Shapes("TextMakro").Visible = False
End Sub


Sub Aufmachen()
Dim Tabelle As Worksheet

For Each Tabelle In ActiveWorkbook.Worksheets
 Tabelle.Visible = True
Next Tabelle

End Sub

Sub tttt()
Application.CommandBars("ply").Enabled = True
End Sub


Sub InfosZuBibliothekenAusgeben()
    Dim Verweis As Reference

    On Error Resume Next
    For Each Verweis In Application.VBE.ActiveVBProject.References
        Debug.Print Verweis.Name
    Next Verweis

End Sub


Sub WeitereBibliothekenEinbinden()
    Dim VBEObj As Object

    Set VBEObj = Application.VBE.ActiveVBProject.References
    'On Error Resume Next
    VBEObj.AddFromFile "MSComctlLib"

End Sub


Sub References_Beispiel()
    Dim Verweis As Object

    For Each Verweis In Application.VBE.ActiveVBProject.References

        Debug.Print Verweis.GUID
    Next Verweis

End Sub

Sub EinbindenVerweis()
On Error Resume Next
Set objVBE_MSComctlLib = Application.VBE.ActiveVBProject.References. _
AddFromGuid("{831FDD16-0C5C-11D2-A9FC-0000F8754DA1}", 2, 0)

End Sub


Sub alleShapesAufTabelleWeg()
Dim shp As Shape

For Each shp In ActiveSheet.Shapes
 shp.Delete
Next shp

End Sub
Attribute VB_Name = "mdl_Verarbeitung"


Sub Dialoganzeigen()

 frm_Gefahr.Show vbModeless


End Sub

Sub EreignisEin()
Application.EnableEvents = True
End Sub


Sub BewegungsdatenEntfernen()

Termine.Range("A2:IV65536").ClearContents
GefahrNote.Range("A2:IV65536").ClearContents
Daten.Range("B3:IV65536").ClearContents
End Sub

Sub FaktorenSetzen()
'Neu 29.12.2010
  Dim zelle As Range
  Dim Treffer As Range
  
  Application.ScreenUpdating = False
  For Each zelle In |fffd|bersicht.UsedRange.Cells
  
  Select Case zelle.Row
  
    Case 6, 9, 13, 16, 19, 22, 25, 28, 31, 34, 37, 40, 43, 46, 49, 52, 55, 58, 61, 64
      
      Select Case zelle.Column
        
        Case 5, 8, 11, 14, 17, 20
          
          Set Treffer = GeFa.Cells.Find(what:=zelle.Offset(0, -1).Value, lookat:=xlWhole)
          
          If Not Treffer Is Nothing Then
            
            |fffd|bersicht.Unprotect
            zelle.Value = Treffer.Offset(0, 1).Value
            |fffd|bersicht.Protect
          
          End If
        
        Case Else
      
      End Select
    
    Case Else
  
  End Select
  
  Next zelle
  Application.ScreenUpdating = True
End Sub
Attribute VB_Name = "mdl_XXXfuerAutoren"
Attribute VB_Name = "uf_Kalender"
Attribute VB_Base = "0{5EF7AB67-3148-40E1-88FB-A68A2135875B}{4BBE4D65-71D5-4A0A-86C8-8784D8A137C1}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False



'Option Explicit

Const SprungMonate = 6 'Anzahl der Monate vorw|fffd|rts und r|fffd|ckw|fffd|rts
Const byAnsicht = 0 'Kalender: 0=Leere Button ausblenden; 1=Leere Button anzeigen
Const byAnzFTg = 85 'Max. Anzahl der Feier- und Gedenktage
Dim objA(37) As Object 'Datum-Tasten im Formular
Dim objB(6) As Object 'KW im Formular
Dim aktDate As Date 'Aktuelles Datum
Dim aktDateM As Date 'Merker des aktuellen Datum
Dim iLand As Integer 'Bundesland
Dim iDay As Integer 'Tag
Dim iMon As Integer 'Monat
Dim iYear As Integer 'Jahr
Dim iDayM As Integer 'Merker Tag
Dim iMonM As Integer 'Merker Monat
Dim iYearM As Integer 'Merker Jahr
Dim sTg(37) As String 'Tage
Dim sKW(6) As String 'Kalenderwoche
Dim vBundL As Variant 'Bundesl|fffd|nder
Dim vBlFeier As Variant 'Spezielle Feiertage in Bundesl|fffd|nder
Dim daFeiertag() As Date 'Alle Feier- und Gedenktage als Datum
Dim sFeiertag() As String 'Alle Feier- und Gedenktage als String
Dim sFtg As String 'Name Feier- oder Gedenktag

Private Function BerechnenFeiertage(jr As Integer)
  'Berechnung von Feiertagen und sonstigen Gedenktagen
  
  'Durch Auskommentieren werden entsprechnende Tage im Kalender nicht mehr angezeigt
  'Hochkommas in zusammengeh|fffd|renden Zeilen l|fffd|schen, wenn die entsprechenden Feier-
  'oder Gedenktage im Kalender angezeigt werden sollen.
 
  'Weitere Gedenktage k|fffd|nnen angef|fffd|gt werden. Die Variable "byAnzFTg" muss dann erh|fffd|ht werden.
  
  Dim bo As Boolean
  Dim daOstern As Date
  Dim daAdvent_1 As Date
  Dim i As Integer
  Dim iO(13) As Integer
  
  ReDim daFeiertag(byAnzFTg) As Date 'Alle Feiertage und Gedenktage als Datum
  ReDim sFeiertag(byAnzFTg) As String 'Alle Feiertage und Gedenktage als String
  
  'Berechnung Ostern
  iO(1) = jr Mod 19
  iO(2) = jr \ 100
  iO(3) = jr Mod 100
  iO(4) = iO(2) \ 4
  iO(5) = iO(2) Mod 4
  iO(6) = (iO(2) + 8) \ 25
  iO(7) = (iO(2) - iO(6) + 1) \ 3
  iO(8) = (19 * iO(1) + iO(2) - iO(4) - iO(7) + 15) Mod 30
  iO(9) = iO(3) \ 4
  iO(10) = iO(3) Mod 4
  iO(11) = (32 + 2 * iO(5) + 2 * iO(9) - iO(8) - iO(10)) Mod 7
  iO(12) = (iO(1) + 11 * iO(8) + 22 * iO(11)) \ 451
  iO(13) = iO(8) + iO(11) - 7 * iO(12) + 22
  If iO(13) > 31 Then
      iO(13) = iO(13) - 31
      daOstern = CDate(iO(13) & ". April " & jr)
  Else
      daOstern = CDate(iO(13) & ". M|fffd|rz " & jr)
  End If
  
  'Berechnung 1. Advent
  If Weekday(CDate("24.12." & jr)) = 1 Then
    daAdvent_1 = CDate("24.12." & jr) - 21
  Else
    daAdvent_1 = CDate("24.12." & jr) - 20 - Weekday(CDate("24.12." & jr))
  End If
  
  'Gesetzliche Feiertage in ganz Deutschland berechnen
  sFeiertag(1) = "Neujahrstag"
  daFeiertag(1) = CDate("1.1." & jr)
  
  sFeiertag(2) = "Karfreitag"
  daFeiertag(2) = daOstern - 2
  
  sFeiertag(3) = "Ostersonntag"
  daFeiertag(3) = daOstern
  
  sFeiertag(4) = "Ostermontag"
  daFeiertag(4) = daOstern + 1

  sFeiertag(5) = "Tag der Arbeit"
  daFeiertag(5) = CDate("1.5." & jr)
  
  sFeiertag(6) = "Christi Himmelfahrt"
  daFeiertag(6) = daOstern + 39
  
  sFeiertag(7) = "Pfingstsonntag"
  daFeiertag(7) = daOstern + 49
  
  sFeiertag(8) = "Pfingstmontag"
  daFeiertag(8) = daOstern + 50
  
  sFeiertag(9) = "Tag d. Dt. Einheit"
  daFeiertag(9) = CDate("3.10." & jr)
  
  sFeiertag(10) = "1. Weihnachtstag"
  daFeiertag(10) = CDate("25.12." & jr)
  
  sFeiertag(11) = "2. Weihnachtstag"
  daFeiertag(11) = CDate("26.12." & jr)
  
  'Reserve
  
  'Gesetzliche Feiertage in Teilen Deutschlands
  sFeiertag(20) = "Heilige 3 K|fffd|nige"
  daFeiertag(20) = CDate("6.1." & jr)
  
  sFeiertag(21) = "Fronleichnam"
  daFeiertag(21) = daOstern + 60
  
  sFeiertag(22) = "Augsburger Friedensfest"
  daFeiertag(22) = CDate("8.8." & jr)
  
  sFeiertag(23) = "Mari|fffd| Himmelfahrt"
  daFeiertag(23) = CDate("15.8." & jr)
  
  sFeiertag(24) = "Reformationstag"
  daFeiertag(24) = CDate("31.10." & jr)
  
  sFeiertag(25) = "Allerheiligen"
  daFeiertag(25) = CDate("1.11." & jr)
  
  sFeiertag(26) = "Bu|fffd|- und Bettag"
  daFeiertag(26) = daAdvent_1 - 11
  
  'Reserve
  
  'Sonstige Gedenktage berechnen
'  sFeiertag(40) = "Weiber Fastnacht"
'  daFeiertag(40) = daOstern - 52
 
  sFeiertag(41) = "Rosenmontag"
  daFeiertag(41) = daOstern - 48
  
  sFeiertag(42) = "Fasnacht"
  daFeiertag(42) = daOstern - 47
  
  sFeiertag(43) = "Aschermittwoch"
  daFeiertag(43) = daOstern - 46
    
  sFeiertag(44) = "Volkstrauertag"
  daFeiertag(44) = daAdvent_1 - 14
  
  sFeiertag(45) = "Totensonntag"
  daFeiertag(45) = daAdvent_1 - 7
  
  sFeiertag(46) = "1. Advent"
  daFeiertag(46) = daAdvent_1
  
  sFeiertag(47) = "2. Advent"
  daFeiertag(47) = daAdvent_1 + 7
  
  sFeiertag(48) = "3. Advent"
  daFeiertag(48) = daAdvent_1 + 14
  
  sFeiertag(49) = "4. Advent"
  daFeiertag(49) = daAdvent_1 + 21
    
  sFeiertag(50) = "Heilig Abend"
  daFeiertag(50) = CDate("24.12." & jr)
  
  sFeiertag(51) = "Silvester"
  daFeiertag(51) = CDate("31.12." & jr)
  
  sFeiertag(52) = "Beginn der Sommerzeit"
  For i = 31 To 20 Step -1
    If Weekday(CDate(i & ".3." & jr), vbMonday) = 7 Then
      daFeiertag(52) = i & ".3." & jr
      Exit For
    End If
  Next i
  
  sFeiertag(53) = "Ende der Sommerzeit"
  For i = 31 To 20 Step -1
    If Weekday(CDate(i & ".10." & jr), vbMonday) = 7 Then
      daFeiertag(53) = i & ".10." & jr
      Exit For
    End If
  Next i
  
'  sFeiertag(54) = "Valentinstag"
'  daFeiertag(54) = "14.02." & jr
'
'  sFeiertag(55) = "Nikolaus"
'  daFeiertag(55) = "06.12." & jr
'
'  sFeiertag(56) = "Eisheiligen: Mamertus"
'  daFeiertag(56) = "11.05." & jr
'
'  sFeiertag(57) = "Eisheiligen: Pankratius"
'  daFeiertag(57) = "12.05." & jr
'
'  sFeiertag(58) = "Eisheiligen: Servatius"
'  daFeiertag(58) = "13.05." & jr
'
'  sFeiertag(59) = "Eisheiligen: Bonifatius"
'  daFeiertag(59) = "14.05." & jr
'
'  sFeiertag(60) = "Eisheiligen: Kalte Sophie"
'  daFeiertag(60) = "15.05." & jr
'
'  sFeiertag(61) = "Siebenschl|fffd|fer"
'  daFeiertag(61) = CDate("27.6." & jr)
'
'  sFeiertag(62) = "Muttertag"
'  bo = False
'  For i = 1 To 31
'    If WeekDay(CDate(i & ".5." & jr), vbMonday) = 7 Then
'      If bo = True Then
'        daFeiertag(62) = CDate(i & ".5." & jr)
'        Exit For
'      Else
'        bo = True
'      End If
'    End If
'  Next i
'
'  sFeiertag(63) = "Erntedankfest"
'  For i = 1 To 16
'    If WeekDay(CDate(i & ".10." & jr), vbMonday) = 7 Then
'      daFeiertag(63) = CDate(i & ".10." & jr)
'      Exit For
'    End If
'  Next i
'
'  sFeiertag(64) = "Fr|fffd|hlingsanfang"
'  daFeiertag(64) = "20.03." & jr
'
'  sFeiertag(65) = "Sommeranfang"
'  daFeiertag(65) = "21.06." & jr
'
'  sFeiertag(66) = "Herbstanfang"
'  daFeiertag(66) = "22.09." & jr
'
'  sFeiertag(67) = "Winteranfang"
'  daFeiertag(67) = "21.12." & jr
'
'  sFeiertag(68) = "Gr|fffd|ndonnerstag"
'  daFeiertag(68) = daOstern - 3
'
'  sFeiertag(69) = "Karsamstag"
'  daFeiertag(69) = daOstern - 1
'
'  sFeiertag(70) = "Wei|fffd|er Sonntag"
'  daFeiertag(70) = daOstern + 7
'
'  sFeiertag(71) = "Darstellung des Herrn"
'  daFeiertag(71) = "02.02." & jr
'
'  sFeiertag(72) = "Josefstag"
'  daFeiertag(72) = "19.03." & jr
'
'  sFeiertag(73) = "Verk|fffd|ndigung des Herrn"
'  daFeiertag(73) = "25.03." & jr
'
'  sFeiertag(74) = "Geburt Johannes des T|fffd|ufers"
'  daFeiertag(74) = "24.06." & jr
'
'  sFeiertag(75) = "Fest der Apostel Petrus und Paulus"
'  daFeiertag(75) = "29.06." & jr
'
'  sFeiertag(76) = "Mari|fffd| Heimsuchung"
'  daFeiertag(76) = "02.07." & jr
'
'  sFeiertag(77) = "Verkl|fffd|rung des Herrn"
'  daFeiertag(77) = "06.08." & jr
'
'  sFeiertag(78) = "Kreuzerh|fffd|hung"
'  daFeiertag(78) = "14.09." & jr
'
'  sFeiertag(79) = "Fest der Erzengel Michael, Gabriel und Raphael"
'  daFeiertag(79) = "29.09." & jr
'
'  sFeiertag(80) = "Allerseelen"
'  daFeiertag(80) = "2.11." & jr
'
'  sFeiertag(81) = "Unbefleckte Empf|fffd|ngnis Mariens"
'  daFeiertag(81) = "08.12." & jr
'
'  sFeiertag(82) = "Johannistag"
'  daFeiertag(82) = "24.06." & jr
'
'  sFeiertag(83) = "Tag des Gedenkens an die Opfer des Nationalsozialismus"
'  daFeiertag(83) = "27.01." & jr
'
'  sFeiertag(84) = "Europatag"
'  daFeiertag(84) = "05.05." & jr
'
'  sFeiertag(85) = "Tag der Umwelt"
'  daFeiertag(85) = "05.06." & jr

End Function

Private Function Kalender()
  Dim vPosA As Variant
  Dim vMon As Variant
  Dim i As Integer
  Dim iTg As Integer
  Dim iTgM As Integer
  Dim iAnzF As Integer
  Dim wt As Byte
  Dim bFt As Byte
  Dim tx As String
  
  'Bundesl|fffd|nder
  vBundL = Array(21, "Baden-W|fffd|rttemberg", "Bayern", "Bayern - |fffd|berw. kath. Bev|fffd|lkerung", "Bayern - Stadtkreis Augsburg", _
      "Berlin", "Brandenburg", "Bremen", "Hamburg", "Hessen", "Mecklenburg-Vorpommern", _
      "Niedersachsen", "Nordrhein-Westfalen", "Rheinland-Pfalz", "Saarland", "Saarland - |fffd|berw. kath. Bev|fffd|lkerung", _
      "Sachsen", "Sachsen - |fffd|berw. kath. Bev|fffd|lkerung", "Sachsen-Anhalt", "Schleswig-Holstein", "Th|fffd|ringen", _
      "Th|fffd|ringen - |fffd|berw. kath. Bev|fffd|lkerung") 'Anzahl in vBundL, Bundesl|fffd|nder
  
  'Feiertage in Abh|fffd|ngigkeit der Bundesl|fffd|nder
  vBlFeier = Array(21, "1100010", "1100010", "1101010", "1111010", "0000000", "0000100", "0000000", _
      "0000000", "0100000", "0000100", "0000000", "0100010", "0100010", "0100010", "0101010", _
      "0000101", "0100101", "1000100", "0000000", "0000100", "0100100")
  
  vPosA = Array(, 1, 8, 15, 22, 29, 36)
  vMon = Array("", "Januar", "Februar", "M|fffd|rz", "April", "Mai", "Juni", "Juli", "August", "September", "Oktober", "November", "Dezember")
  
  VariableZuweisen
  
  'Datumswerte pr|fffd|fen / |fffd|ndern
  Do While iMon < 1
    iMon = 12 + iMon
    iYear = iYear - 1
  Loop
  
  Do While iMon > 12
    iMon = iMon - 12
    iYear = iYear + 1
  Loop
  
  If iYear < 1900 Then iYear = 1900
  If iYear > 2100 Then iYear = 2100
  
  'Berechnung
  BerechnenFeiertage (iYear)
  aktDate = CDate("01." & iMon & "." & iYear)
  aktDateM = aktDate
  
  'Tage in Tabelle berechnen
  wt = Weekday(aktDate, vbMonday)
  iTg = 0
  For i = 1 To 37
    sTg(i) = ""
    If i >= wt Then
      iTgM = Day(aktDate)
      If iTgM > iTg Or iTg = 0 Then
        iTg = Day(aktDate)
        sTg(i) = iTg
        aktDate = aktDate + 1
      End If
    End If
    objA(i).Caption = sTg(i)
  Next i
  
  'Feiertage setzen
  iAnzF = 0
  uf_Kalender.ListBox1.Clear
  For i = 1 To 37
    objA(i).ForeColor = "&H80000012" 'Schrift sw
    objA(i).BackColor = "&H8000000F" 'Schalter gr
    
    
    If sTg(i) <> "" Then
      wt = Weekday(CDate(Val(sTg(i)) & "." & iMon & "." & iYear), vbMonday)
      bFt = IstFeiertg(CDate(Val(sTg(i)) & "." & iMon & "." & iYear))
      If bFt > 0 Then
        If wt = 7 Then objA(i).ForeColor = "&H000000FF"  'Schrift rt
        If bFt = 1 Then objA(i).BackColor = RGB(205, 205, 205): objA(i).ForeColor = "&H80000012"
        If bFt = 2 Then objA(i).ForeColor = "&H80000012": objA(i).BackColor = RGB(205, 205, 205)
        If bFt = 3 Then objA(i).ForeColor = "&H80000012": objA(i).BackColor = RGB(205, 205, 205)
        If wt = 7 Then objA(i).ForeColor = "&H000000FF"  'Schrift rt
        tx = CDate(Val(sTg(i)) & "." & iMon & "." & iYear) & "  " & sFtg
        If bFt <= 3 Then uf_Kalender.ListBox1.AddItem tx 'ListBox laden
        objA(i).ControlTipText = sFtg 'Control-Tip-Text setzen
        iAnzF = iAnzF + 1
      Else
        If wt = 7 Then objA(i).ForeColor = "&H000000FF"  'Schrift rt
        If wt <> 7 Then objA(i).ForeColor = "&H80000012" 'Schrift sw
        objA(i).BackColor = RGB(205, 205, 205)
        objA(i).ControlTipText = "" 'Control-Tip-Text r|fffd|cksetzen
      End If
      objA(i).Visible = True
    Else
      If byAnsicht = 0 Then objA(i).Visible = False
    End If
    'Heutiges Datum
    If CDate(Val(sTg(i)) & "." & iMon & "." & iYear) = Date Then
      objA(i).BackColor = RGB(205, 205, 205)
      If objA(i).ControlTipText = "" Then
        objA(i).ControlTipText = "Heute"
      Else
        objA(i).ControlTipText = objA(i).ControlTipText & "; Heute"
      End If
    End If
    'Vorgabe-Datum
    If iDayM > 0 Then
      If CDate(Val(sTg(i)) & "." & iMon & "." & iYear) = CDate(iDayM & "." & iMonM & "." & iYearM) Then
        objA(i).BackColor = RGB(0, 255, 0) 'angeklicktes Datum
        tx = objA(i).ControlTipText
        If objA(i).ControlTipText = "" Then
          objA(i).ControlTipText = "Vorgabe-Datum"
        Else
          objA(i).ControlTipText = objA(i).ControlTipText & "; Vorgabe-Datum"
        End If
      End If
    End If
  Next i
  For i = iAnzF To 3
    uf_Kalender.ListBox1.AddItem " " 'Listbox f|fffd|llen
  Next i
  
  'Kalenderwochen bestimmen
  For i = 1 To 6
    iTg = Val(sTg(vPosA(i)))
    If iTg = 0 And i = 1 Then iTg = Val(sTg(vPosA(i) + 6))
    sKW(i) = ""
    If iTg > 0 Then
      sKW(i) = KalWo(CDate(iTg & "." & Month(aktDateM) & "." & Year(aktDateM)))
    End If
  Next i
  
  For i = 1 To 6
    objB(i).Caption = sKW(i)
    If sKW(i) <> "" Then
      objB(i).Visible = True
    Else
      If byAnsicht = 0 Then objB(i).Visible = False
    End If
  Next i
  
  'Kalendermonat f|fffd|r |fffd|berschrift
  tx = Month(aktDateM)
  tx = Year(aktDateM)
  tx = vMon(Month(aktDateM)) & " " & Year(aktDateM)
  uf_Kalender.ComBActuell.Caption = tx
End Function

Private Function VariableZuweisen()
  'Zuweisen von Variablen
  With uf_Kalender
    Set objA(1) = .CommandButton1
    Set objA(2) = .CommandButton2
    Set objA(3) = .CommandButton3
    Set objA(4) = .CommandButton4
    Set objA(5) = .CommandButton5
    Set objA(6) = .CommandButton6
    Set objA(7) = .CommandButton7
    Set objA(8) = .CommandButton8
    Set objA(9) = .CommandButton9
    Set objA(10) = .CommandButton10
    Set objA(11) = .CommandButton11
    Set objA(12) = .CommandButton12
    Set objA(13) = .CommandButton13
    Set objA(14) = .CommandButton14
    Set objA(15) = .CommandButton15
    Set objA(16) = .CommandButton16
    Set objA(17) = .CommandButton17
    Set objA(18) = .CommandButton18
    Set objA(19) = .CommandButton19
    Set objA(20) = .CommandButton20
    Set objA(21) = .CommandButton21
    Set objA(22) = .CommandButton22
    Set objA(23) = .CommandButton23
    Set objA(24) = .CommandButton24
    Set objA(25) = .CommandButton25
    Set objA(26) = .CommandButton26
    Set objA(27) = .CommandButton27
    Set objA(28) = .CommandButton28
    Set objA(29) = .CommandButton29
    Set objA(30) = .CommandButton30
    Set objA(31) = .CommandButton31
    Set objA(32) = .CommandButton32
    Set objA(33) = .CommandButton33
    Set objA(34) = .CommandButton34
    Set objA(35) = .CommandButton35
    Set objA(36) = .CommandButton36
    Set objA(37) = .CommandButton37
    
    Set objB(1) = .ComBKW1
    Set objB(2) = .ComBKW2
    Set objB(3) = .ComBKW3
    Set objB(4) = .ComBKW4
    Set objB(5) = .ComBKW5
    Set objB(6) = .ComBKW6
  End With
End Function

Private Function IstFeiertg(da1 As Date) As Byte
    'Pr|fffd|ft, ob Datum ein Feiertag ist
    Dim byZ As Byte
    Dim bs As Byte
    
    IstFeiertg = 0
    sFtg = ""
    For byZ = 1 To byAnzFTg
      If IsDate(daFeiertag(byZ)) = True Then
        If da1 = daFeiertag(byZ) Then
          If sFtg = "" Then
            sFtg = sFeiertag(byZ)
          Else
            sFtg = sFtg & "; " & sFeiertag(byZ)
          End If
          If byZ < 20 Then IstFeiertg = 1 'Gesetzlicher Feiertag
          If byZ >= 20 And byZ < 40 Then 'Gesetzlicher Feiertag in Teilen Deutschlandss
            If IstFeiertg = 0 Or IstFeiertg > 2 Then IstFeiertg = 2
            If Mid(vBlFeier(iLand + 1), byZ - 20 + 1, 1) = 1 Then IstFeiertg = 1
          End If
          If byZ >= 40 And IstFeiertg = 0 Then IstFeiertg = 3 'Sonstiger Gedenktag
        End If
      End If
    Next byZ
End Function

Private Function KalWo(d) As Integer
  'Kalenderwoche berechnen nach DIN 1355 (f|fffd|r Deutschland g|fffd|ltig)
  Dim Don As Date
  Dim Jahr As Integer
  Dim Wochen As Integer
  
  Don = d - Weekday(d, vbMonday) + 4
  Jahr = Year(Don)
  Wochen = ((Don - DateSerial(Jahr, 1, 1)) \ 7) + 1
  KalWo = Wochen
End Function

Private Sub cmd_OK_Click()

 If uf_Kalender.TXT_KalR|fffd| = 1 Then
  frm_Gefahr.TXT_DatSM.Value = Me.TextBox1.Value
  Unload Me
 End If
 
 If uf_Kalender.TXT_KalR|fffd| = 2 Then
   frm_Gefahr.TXT_DatSM2.Value = Me.TextBox1.Value
  Unload Me
 End If
 
 

End Sub


Private Sub UserForm_Activate()
  Dim i As Integer
  
  ComBActuell.BackColor = RGB(51, 102, 153)
  ComBActuell.ForeColor = RGB(255, 255, 255)
  ComBKW1.BackColor = RGB(51, 102, 153)
  ComBKW1.ForeColor = RGB(255, 255, 255)
  ComBKW2.BackColor = RGB(51, 102, 153)
  ComBKW2.ForeColor = RGB(255, 255, 255)
  ComBKW3.BackColor = RGB(51, 102, 153)
  ComBKW3.ForeColor = RGB(255, 255, 255)
  ComBKW4.BackColor = RGB(51, 102, 153)
  ComBKW4.ForeColor = RGB(255, 255, 255)
  ComBKW5.BackColor = RGB(51, 102, 153)
  ComBKW5.ForeColor = RGB(255, 255, 255)
  ComBKW6.BackColor = RGB(51, 102, 153)
  ComBKW6.ForeColor = RGB(255, 255, 255)
  
  'Position f|fffd|r Kalender
  'uf_Kalender.StartUpPosition = 0 'Fensterposition einstellungsabh|fffd|ngig
  'uf_Kalender.StartUpPosition = 0
  'Update Held - 18. Juni 2010
  uf_Kalender.Left = 150
  uf_Kalender.Top = 110
  
  If Val(uf_Kalender.StartUpPosition) = 0 Then
    If scUfKaLeft < 0 Then scUfKaLeft = 0
    If scUfKaTop < 0 Then scUfKaTop = 0
    uf_Kalender.Left = scUfKaLeft
    uf_Kalender.Top = scUfKaTop
  End If
  
  If Me.TXT_KalR|fffd| = 1 Then
  datVorgabedatum = frm_Gefahr.Lb_1_SM.Column(5, frm_Gefahr.Lb_1_SM.ListIndex)
  Else
  datVorgabedatum = frm_Gefahr.Lb_1_SM.Column(8, frm_Gefahr.Lb_1_SM.ListIndex)
  End If
  
  'Vorgabedatum
  If IsDate(datVorgabedatum) And datVorgabedatum <> 0 Then
    iDay = Day(datVorgabedatum)
    iMon = Month(datVorgabedatum)
    iYear = Year(datVorgabedatum)
  Else
    iDay = 0
    iMon = Month(Date)
    iYear = Year(Date)
  End If
  iDayM = iDay
  iMonM = iMon
  iYearM = iYear
  datRueckgabedatum = 0
  byFeiertag = 0
  byKalenderwoche = 0
  stFeiertag = ""
  
  Kalender
  
  uf_Kalender.ComBLi2.ControlTipText = SprungMonate & " Monate fr|fffd|her"
  uf_Kalender.ComBLi.ControlTipText = "Letzter Monat"
  uf_Kalender.ComBActuell.ControlTipText = "Aktueller Monat"
  uf_Kalender.ComBRe.ControlTipText = "N|fffd|chster Monat"
  uf_Kalender.ComBRe2.ControlTipText = SprungMonate & " Monate sp|fffd|ter"
  
Application.EnableEvents = False

 
  uf_Kalender.ComBActuell.SetFocus
  

 

  Application.EnableEvents = True
  
End Sub

Private Sub ComBActuell_Click()
  iMon = Month(Date)
  iYear = Year(Date)
  Kalender
End Sub

Private Sub ComBLi_Click()
'Update Held - 18. Juni 2010
  Me.TextBox1.Value = ""
  iMon = iMon - 1
  Kalender
End Sub

Private Sub ComBLi2_Click()
Me.TextBox1.Value = ""
  iMon = iMon - SprungMonate
  Kalender
End Sub

Private Sub ComBRe_Click()
Me.TextBox1.Value = ""
  iMon = iMon + 1
  Kalender
End Sub

Private Sub ComBRe2_Click()
Me.TextBox1.Value = ""
  iMon = iMon + SprungMonate
  Kalender
End Sub

Private Sub CommandButton1_Click()
' Tastewert (1)
  'unloadMe
  'Update Held - 18. Juni 2010 ff
 Me.TextBox1.Value = CDate(ActiveControl.Caption & "." & ComBActuell.Caption)
End Sub

Private Sub CommandButton2_Click()
'Tastewert(2)
  'unloadMe
  Me.TextBox1.Value = CDate(ActiveControl.Caption & "." & ComBActuell.Caption)
End Sub

Private Sub CommandButton3_Click()
  'Tastewert (3)
  'unloadMe
  Me.TextBox1.Value = CDate(ActiveControl.Caption & "." & ComBActuell.Caption)
End Sub

Private Sub CommandButton4_Click()
  'Tastewert (4)
  'unloadMe
  Me.TextBox1.Value = CDate(ActiveControl.Caption & "." & ComBActuell.Caption)
End Sub

Private Sub CommandButton5_Click()
  'Tastewert (5)
  'unloadMe
  Me.TextBox1.Value = CDate(ActiveControl.Caption & "." & ComBActuell.Caption)
End Sub

Private Sub CommandButton6_Click()
  'Tastewert (6)
  'unloadMe
  Me.TextBox1.Value = CDate(ActiveControl.Caption & "." & ComBActuell.Caption)
End Sub

Private Sub CommandButton7_Click()
  'Tastewert (7)
  'unloadMe
  Me.TextBox1.Value = CDate(ActiveControl.Caption & "." & ComBActuell.Caption)
End Sub

Private Sub CommandButton8_Click()
  'Tastewert (8)
  'unloadMe
  Me.TextBox1.Value = CDate(ActiveControl.Caption & "." & ComBActuell.Caption)
End Sub

Private Sub CommandButton9_Click()
  'Tastewert (9)
  'unloadMe
  Me.TextBox1.Value = CDate(ActiveControl.Caption & "." & ComBActuell.Caption)
End Sub

Private Sub CommandButton10_Click()
  'Tastewert (10)
  'unloadMe
  Me.TextBox1.Value = CDate(ActiveControl.Caption & "." & ComBActuell.Caption)
End Sub

Private Sub CommandButton11_Click()
  'Tastewert (11)
  'unloadMe
  Me.TextBox1.Value = CDate(ActiveControl.Caption & "." & ComBActuell.Caption)
End Sub

Private Sub CommandButton12_Click()
  'Tastewert (12)
  'unloadMe
  Me.TextBox1.Value = CDate(ActiveControl.Caption & "." & ComBActuell.Caption)
End Sub

Private Sub CommandButton13_Click()
  'Tastewert (13)
  'unloadMe
  Me.TextBox1.Value = CDate(ActiveControl.Caption & "." & ComBActuell.Caption)
End Sub

Private Sub CommandButton14_Click()
  'Tastewert (14)
  'unloadMe
  Me.TextBox1.Value = CDate(ActiveControl.Caption & "." & ComBActuell.Caption)
End Sub

Private Sub CommandButton15_Click()
  'Tastewert (15)
  'unloadMe
  Me.TextBox1.Value = CDate(ActiveControl.Caption & "." & ComBActuell.Caption)
End Sub

Private Sub CommandButton16_Click()
  'Tastewert (16)
  'unloadMe
  Me.TextBox1.Value = CDate(ActiveControl.Caption & "." & ComBActuell.Caption)
End Sub

Private Sub CommandButton17_Click()
  'Tastewert (17)
  'unloadMe
  Me.TextBox1.Value = CDate(ActiveControl.Caption & "." & ComBActuell.Caption)
End Sub

Private Sub CommandButton18_Click()
  'Tastewert (18)
  'unloadMe
  Me.TextBox1.Value = CDate(ActiveControl.Caption & "." & ComBActuell.Caption)
End Sub

Private Sub CommandButton19_Click()
  'Tastewert (19)
  'unloadMe
  Me.TextBox1.Value = CDate(ActiveControl.Caption & "." & ComBActuell.Caption)
End Sub

Private Sub CommandButton20_Click()
  'Tastewert (20)
  'unloadMe
  Me.TextBox1.Value = CDate(ActiveControl.Caption & "." & ComBActuell.Caption)
End Sub

Private Sub CommandButton21_Click()
  'Tastewert (21)
  'unloadMe
  Me.TextBox1.Value = CDate(ActiveControl.Caption & "." & ComBActuell.Caption)
End Sub

Private Sub CommandButton22_Click()
  'Tastewert (22)
  'unloadMe
  Me.TextBox1.Value = CDate(ActiveControl.Caption & "." & ComBActuell.Caption)
End Sub

Private Sub CommandButton23_Click()
  'Tastewert (23)
  'unloadMe
  Me.TextBox1.Value = CDate(ActiveControl.Caption & "." & ComBActuell.Caption)
End Sub

Private Sub CommandButton24_Click()
  'Tastewert (24)
  'unloadMe
  Me.TextBox1.Value = CDate(ActiveControl.Caption & "." & ComBActuell.Caption)
End Sub

Private Sub CommandButton25_Click()
  'Tastewert (25)
  'unloadMe
  Me.TextBox1.Value = CDate(ActiveControl.Caption & "." & ComBActuell.Caption)
End Sub

Private Sub CommandButton26_Click()
  'Tastewert (26)
  'unloadMe
  Me.TextBox1.Value = CDate(ActiveControl.Caption & "." & ComBActuell.Caption)
End Sub

Private Sub CommandButton27_Click()
  'Tastewert (27)
  'unloadMe
  Me.TextBox1.Value = CDate(ActiveControl.Caption & "." & ComBActuell.Caption)
End Sub

Private Sub CommandButton28_Click()
  'Tastewert (28)
  'unloadMe
  Me.TextBox1.Value = CDate(ActiveControl.Caption & "." & ComBActuell.Caption)
End Sub

Private Sub CommandButton29_Click()
  'Tastewert (29)
  'unloadMe
  Me.TextBox1.Value = CDate(ActiveControl.Caption & "." & ComBActuell.Caption)
End Sub

Private Sub CommandButton30_Click()
  'Tastewert (30)
  'unloadMe
  Me.TextBox1.Value = CDate(ActiveControl.Caption & "." & ComBActuell.Caption)
End Sub

Private Sub CommandButton31_Click()
  'Tastewert (31)
  'unloadMe
  Me.TextBox1.Value = CDate(ActiveControl.Caption & "." & ComBActuell.Caption)
End Sub

Private Sub CommandButton32_Click()
  'Tastewert (32)
  'unloadMe
  Me.TextBox1.Value = CDate(ActiveControl.Caption & "." & ComBActuell.Caption)
End Sub

Private Sub CommandButton33_Click()
  'Tastewert (33)
  'unloadMe
  Me.TextBox1.Value = CDate(ActiveControl.Caption & "." & ComBActuell.Caption)
End Sub

Private Sub CommandButton34_Click()
  'Tastewert (34)
  'unloadMe
  Me.TextBox1.Value = CDate(ActiveControl.Caption & "." & ComBActuell.Caption)
End Sub

Private Sub CommandButton35_Click()
  'Tastewert (35)
  'unloadMe
  Me.TextBox1.Value = CDate(ActiveControl.Caption & "." & ComBActuell.Caption)
End Sub

Private Sub CommandButton36_Click()
  'Tastewert (36)
  'unloadMe
  Me.TextBox1.Value = CDate(ActiveControl.Caption & "." & ComBActuell.Caption)
End Sub

Private Sub CommandButton37_Click()
  'Tastewert (37)
  'unloadMe
  Me.TextBox1.Value = CDate(ActiveControl.Caption & "." & ComBActuell.Caption)
End Sub

Private Function PositionMerken()
  scUfKaLeft = uf_Kalender.Left
  scUfKaTop = uf_Kalender.Top
End Function

Private Function Tastewert(iT) As String
  Dim iTg As Integer
  PositionMerken
  
  iTg = Val(sTg(Val(iT)))
  If iTg = 0 Then Exit Function
  datRueckgabedatum = CDate(iTg & "." & iMon & "." & iYear)
  byFeiertag = IstFeiertg(datRueckgabedatum)
  stFeiertag = sFtg
  byKalenderwoche = KalWo(datRueckgabedatum)
End Function

Private Sub ComBAbbrechen_Click()
  PositionMerken
  Me.Hide
  'Unload Me
  
End Sub

Private Sub UserForm_Initialize()
 uf_Kalender.Caption = "Kalender f|fffd|r " & Environ("username")
End Sub

Private Sub UserForm_QueryClose _
  (Cancel As Integer, CloseMode As Integer)
  PositionMerken
  'Auf X nicht reagieren
'  If CloseMode = vbFormControlMenu Then
'    Cancel = True
'  End If
End Sub

Function TabSchutz(s As String) As Boolean

    On Error GoTo Fehler

    If sheets(s).ProtectContents = True Then
        TabSchutz = True
    End If

    Exit Function

Fehler:
    TabSchutz = False
End Function


Attribute VB_Name = "|fffd|bersicht"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Private Sub Worksheet_BeforeDoubleClick(ByVal Target As Range, Cancel As Boolean)
Dim Trefferkreuz As Range
Dim zz As Long
Dim zzmax As Long
Dim sitem As String

Select Case Target.Address
 Case "$D$7", "$G$7", "$J$7", "$M$7", "$P$7", "$S$7", "$D$10", "$G$10", "$J$10", "$M$10", "$P$10", "$S$10", _
       "$D$14", "$G$14", "$J$14", "$M$14", "$P$14", "$S$14", "$D$17", "$G$17", "$J$17", "$M$17", "$P$17", "$S$17", _
       "$D$20", "$G$20", "$J$20", "$M$20", "$P$20", "$S$20", "$D$23", "$G$23", "$J$23", "$M$23", "$P$23", "$S$23", _
       "$D$26", "$G$26", "$J$26", "$M$26", "$P$26", "$S$26", "$D$29", "$G$29", "$J$29", "$M$29", "$P$29", "$S$29", _
       "$D$32", "$G$32", "$J$32", "$M$32", "$P$32", "$S$32", "$D$35", "$G$35", "$J$35", "$M$35", "$P$35", "$S$35", _
        "$D$38", "$G$38", "$J$38", "$M$38", "$P$38", "$S$38", "$D$41", "$G$41", "$J$41", "$M$41", "$P$41", "$S$41", _
        "$D$44", "$G$44", "$J$44", "$M$44", "$P$44", "$S$44", "$D$47", "$G$47", "$J$47", "$M$47", "$P$47", "$S$47", _
        "$D$50", "$G$50", "$J$50", "$M$50", "$P$50", "$S$50", "$D$53", "$G$53", "$J$53", "$M$53", "$P$53", "$S$53", _
        "$D$56", "$G$56", "$J$56", "$M$56", "$P$56", "$S$56", "$D$59", "$G$59", "$J$59", "$M$59", "$P$59", "$S$59", _
        "$D$62", "$G$62", "$J$62", "$M$62", "$P$62", "$S$62", "$D$65", "$G$65", "$J$65", "$M$65", "$P$65", "$S$65"
        
  If Target.Value = "X" Then
  
        'Ab hier neu
        If MsgBox("Beim Deaktivieren des Gef|fffd|hrdungsfaktors werden alle dazugeh|fffd|rigen Untergef|fffd|hrdungen und Schutzma|fffd|nahmen deaktiviert und Termine gel|fffd|scht. Trotzdem Deaktivieren?", vbYesNo + vbQuestion) = vbYes Then
        sitem = Target.Offset(-1, 0).Value
        Set Trefferkreuz = |fffd|bersicht.Range("A6:T70").Find(what:=sitem, lookat:=xlWhole)
        If Trefferkreuz Is Nothing Then
        Else
        Application.EnableEvents = False
        |fffd|bersicht.Cells(Trefferkreuz.Row + 1, Trefferkreuz.Column).Value = ""
        Application.EnableEvents = True
      
        End If
           
           'L|fffd|schen aller dazugeh|fffd|rigen Daten
          
           zzmax = GefahrNote.Range("A65536").End(xlUp).Row
          
          For zz = zzmax To 2 Step -1
           If GefahrNote.Cells(zz, 2).Value = sitem Then
            GefahrNote.Rows(zz).Delete
           End If
          Next zz
          
           zzmax = Termine.Range("A65536").End(xlUp).Row
          For zz = zzmax To 2 Step -1
           If Termine.Cells(zz, 2).Value = sitem Then
            Termine.Rows(zz).Delete
           End If
          Next zz
      
      Set TRefferDaten = Daten.Columns(1).Find(sitem, lookat:=xlWhole)
      If TRefferDaten Is Nothing Then
      Else
       Daten.Range(Daten.Cells(TRefferDaten.Row, 2), Daten.Cells(TRefferDaten.Row, 255)).Value = ""
      End If
        
       Target.Value = ""
        
       Else
      'Target.Value = "X"
        
       End If
       
         
        'Ende neu
Else
 Target.Value = "X"
  End If
  End Select
Cancel = True
End Sub

Private Sub Worksheet_Change(ByVal Target As Range)
Dim Treffer As Range
Dim s As String
Dim spalte As Integer

If Target.Row < 5 Then Exit Sub

Select Case Target.Address
 Case "$D$7", "$G$7", "$J$7", "$M$7", "$P$7", "$S$7", "$D$10", "$G$10", "$J$10", "$M$10", "$P$10", "$S$10"
    spalte = 1
 Case "$D$14", "$G$14", "$J$14", "$M$14", "$P$14", "$S$14", "$D$17", "$G$17", "$J$17", "$M$17", "$P$17", "$S$17"
    spalte = 3
 Case "$D$20", "$G$20", "$J$20", "$M$20", "$P$20", "$S$20", "$D$23", "$G$23", "$J$23", "$M$23", "$P$23", "$S$23"
    spalte = 5
 Case "$D$26", "$G$26", "$J$26", "$M$26", "$P$26", "$S$26", "$D$29", "$G$29", "$J$29", "$M$29", "$P$29", "$S$29"
    spalte = 7
 Case "$D$32", "$G$32", "$J$32", "$M$32", "$P$32", "$S$32", "$D$35", "$G$35", "$J$35", "$M$35", "$P$35", "$S$35"
    spalte = 9
 Case "$D$38", "$G$38", "$J$38", "$M$38", "$P$38", "$S$38", "$D$41", "$G$41", "$J$41", "$M$41", "$P$41", "$S$41"
    spalte = 11
 Case "$D$44", "$G$44", "$J$44", "$M$44", "$P$44", "$S$44", "$D$47", "$G$47", "$J$47", "$M$47", "$P$47", "$S$47"
    spalte = 13
 Case "$D$50", "$G$50", "$J$50", "$M$50", "$P$50", "$S$50", "$D$53", "$G$53", "$J$53", "$M$53", "$P$53", "$S$53"
    spalte = 15
 Case "$D$56", "$G$56", "$J$56", "$M$56", "$P$56", "$S$56", "$D$59", "$G$59", "$J$59", "$M$59", "$P$59", "$S$59"
    spalte = 17
 Case "$D$62", "$G$62", "$J$62", "$M$62", "$P$62", "$S$62", "$D$65", "$G$65", "$J$65", "$M$65", "$P$65", "$S$65"
    spalte = 19
 Case Else
   Exit Sub
  End Select
  
  s = Target.Offset(-1, 0).Value

 Set Treffer = GeFa.Columns(spalte).Find(what:=s, lookat:=xlWhole)
 If Treffer Is Nothing Then
  MsgBox "kein Treffer"
  Else
  '|fffd|nderung am 16.10.2008
    If Target.Value = "X" Then
       GeFa.Cells(Treffer.Row, spalte).Interior.ColorIndex = 4
      Else
       GeFa.Cells(Treffer.Row, spalte).Interior.ColorIndex = xlColorIndexNone
      End If
 End If



End Sub



' InQuest injected base64 decoded content
' -j[n
' szp%
' jY^J
' zY^Y

INQUEST-PP=macro
