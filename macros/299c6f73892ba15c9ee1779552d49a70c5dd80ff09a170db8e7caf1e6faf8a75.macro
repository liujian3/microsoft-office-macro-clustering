Attribute VB_Name = "EditorialMacros"
Option Explicit

Public Sub InitForEditorial()
  '
  ' Code for editorial special setups that need to be called
  '  after saving or on worksheet initialization.
  '
End Sub

Public Sub Workbook_BeforeClose_Editorial()
  '
  ' Code for editorial special setups that need to be called
  '  before close.
  '
End Sub

Attribute VB_Name = "EditorialMacros_Deactivate"
Option Explicit

Public Sub Workbook_Deactivate_Editorial()
  '
  ' Code for editorial special setups that need to be called
  '  when leaving the workbook without closing it. This, will
  '  also run when closing workbook.
  '
End Sub

Attribute VB_Name = "Module2"
Sub clear()
'
' clear Macro
' Macro recorded by Practitioners Publishing Company
'

    Msg = "Are you sure you want to clear all of the " & vbCrLf
    Msg = Msg & "input items from the worksheet?"
    Ans = MsgBox(Msg, vbYesNo, "PPC's Workpapers")
    
    If Ans = vbNo Then  ' User chose No.
    Exit Sub
    End If
    
    Application.ScreenUpdating = False
    Sheet1.Select
    Range("clear_input").ClearContents
    Range("option_default").Select
    Selection.Copy
    Range("option_response").Select
    Selection.PasteSpecial Paste:=xlValues, Operation:=xlNone, SkipBlanks:= _
        False, Transpose:=False
    Application.CutCopyMode = False
    Range("fsdate").Value = "=PPC_GetBalanceSheetDate()"
    Range("Client").Value = "=PPC_GetClientName()"
    Application.ActiveWorkbook.CustomDocumentProperties("PPC_Template_Client_Name") = "[Client Name]"
    Application.ActiveWorkbook.CustomDocumentProperties("PPC_Template_Engagement_Date") = ""
    Application.ActiveWorkbook.ActiveSheet.EnableCalculation = False
    Application.ActiveWorkbook.ActiveSheet.EnableCalculation = True
Application.ScreenUpdating = True
    Range("input").Select
End Sub

Attribute VB_Name = "PPC_CodeModule"
Public Sub MacroCheck()
'Do nothing. This sub will be called from .NET code to check macro is enabled or not
End Sub


Public Function PPC_GetClientName()
  PPC_GetClientName = Application.ActiveWorkbook.CustomDocumentProperties("PPC_Template_Client_Name")
End Function

Public Function PPC_GetBalanceSheetDate()
  PPC_GetBalanceSheetDate = Application.ActiveWorkbook.CustomDocumentProperties("PPC_Template_Engagement_Date")
End Function

Attribute VB_Name = "Sheet1"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Private Sub Worksheet_Activate()
  Range("input").Select
End Sub

Private Sub Worksheet_Calculate()

    On Error GoTo recover
    Application.EnableEvents = False
    If Range("entity") = 1 Then
        Range("lessee_input").EntireRow.Hidden = False
        Range("lessor_input").EntireRow.Hidden = True
    ElseIf Range("entity") = 2 Then
        Range("lessee_input").EntireRow.Hidden = True
        Range("lessor_input").EntireRow.Hidden = False
    Else
        Range("lessee_lessor_input").EntireRow.Hidden = False
    End If
    
    ' Make sure events are turned back on
    Application.EnableEvents = True
    On Error GoTo 0
    Exit Sub

recover:
  ' Make sure events are turned back on
  Application.EnableEvents = True
  On Error GoTo 0
    
End Sub
Attribute VB_Name = "Sheet2"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True

Private Sub Worksheet_Activate()
    
    Application.ScreenUpdating = False
    
    If Sheet1.Range("entity").Value = 1 Then
        Range("AmortLessee").EntireRow.Hidden = False
        Range("AmortLessor").EntireRow.Hidden = True
        Range("AmortSalesType").EntireRow.Hidden = True
    ElseIf Sheet1.Range("entity").Value = 2 And Sheet1.Range("Lease_type").Value = 2 Then
        Range("AmortLessee").EntireRow.Hidden = True
        Range("AmortLessor").EntireRow.Hidden = False
        Range("AmortSalesType").EntireRow.Hidden = True
    ElseIf Sheet1.Range("Entity").Value = 2 And Sheet1.Range("Lease_type").Value = 3 Then
        Range("AmortLessee").EntireRow.Hidden = True
        Range("AmortLessor").EntireRow.Hidden = False
        Range("AmortSalesType").EntireRow.Hidden = False
    Else
        Range("AmortLessee").EntireRow.Hidden = False
        Range("AmortLessor").EntireRow.Hidden = False
        Range("AmortSalesType").EntireRow.Hidden = False
    End If
    
    Range("inception").Select
    Range("filter_amort_schedule").AdvancedFilter Action:=xlFilterInPlace, CriteriaRange:= _
        Range("Criteria"), Unique:=False
    Range("amort_schedule").Select
    Application.StatusBar = "Ready"
    Application.ScreenUpdating = True
End Sub

Private Sub Worksheet_Deactivate()
    Application.StatusBar = False
End Sub
Attribute VB_Name = "Sheet3"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Private Sub Worksheet_Activate()
    Range("filter_fs_disclosures").AdvancedFilter Action:=xlFilterInPlace, CriteriaRange:= _
        Range("Criteria"), Unique:=False
    Application.StatusBar = "Ready"
    Range("fs_disclosures").Select
End Sub

Private Sub Worksheet_Deactivate()
    Application.StatusBar = False
End Sub
Attribute VB_Name = "ThisWorkbook"
Attribute VB_Base = "0{00020819-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Option Explicit

'
' This code is protected and passworded when complete.
'

Private Const XL4MACRO As String = "PPCSecurityMacro"
Private Const INFORMATION As String = "INFORMATION"

Private Const bIsIDxR As Boolean = False        ' Set True if Interactive Disclosure Library
#Const IDxR = 0                                 ' Set 1 if Interactive Disclosure Library

      ' Declare security class

Private Sub Workbook_Activate()

  
  InitForEditorial
  
  On Error GoTo 0
End Sub

Private Sub Workbook_BeforeClose(Cancel As Boolean)
  Workbook_BeforeClose_Editorial
End Sub



Public Function bIsSaving() As Boolean
  bIsSaving = False
End Function



INQUEST-PP=macro
