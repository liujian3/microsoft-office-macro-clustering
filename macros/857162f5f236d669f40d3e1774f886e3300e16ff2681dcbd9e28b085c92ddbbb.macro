Attribute VB_Name = "BeiDatum|fffd|ndern_JahresPlan"
Option Explicit

Sub AllesNeu() ' Hauptprogramm
   Application.ScreenUpdating = False
   Application.EnableEvents = False
   Application.ReferenceStyle = xlA1
   Init  ' bei True wird alles gel|fffd|scht
   Application.EnableEvents = True
   Application.ScreenUpdating = True
End Sub

Sub Init() ' Unterprogramm
Dim Tabelle, idx%, sDate$, mDate, mTest, Memo$(1)
sDate = DateSerial(Sheets("JahresPlan").Cells(1, 1), 1, 1) ' aus Jahreszahl Datum erstellen 01.01.JJJJ
If Not (IsDate(sDate)) Then Exit Sub ' wenn kein g|fffd|ltiges Datum
Application.DisplayCommentIndicator = xlCommentIndicatorOnly

For Each Tabelle In ActiveWorkbook.Sheets ' siehe ErstEinrichtung
'  ######## nur Jahresplan ##############
   If Tabelle.Index = 1 Then
      Tabelle.Select
      Tabelle.Activate
      Range("E6:AI18").Select
      RahmenL|fffd|schen
      Selection.ClearContents
      Selection.Interior.ColorIndex = xlNone
      Selection.Font.ColorIndex = 0
      Selection.Font.Bold = False
      Selection.ClearNotes
      Range("E6").Select
   End If
'  ##################################
   If Tabelle.Index > 1 Then
      Tabelle.Select
      Tabelle.Activate
      If L|fffd|schen And Tabelle.Index = 2 Then Cells(8, 5) = 0
      Range("A12:J42").Select
      Selection.ClearNotes
      Selection.Font.Bold = False
      If L|fffd|schen Then
         Selection.ClearContents
         Selection.Interior.ColorIndex = xlNone
      End If
      Tabelle.Cells(6, 4) = Sheets("JahresPlan").Cells(1, 1) & "/" & Format(Tabelle.Index - 1, "00") ' Jahr/Monat (2-stellg) in alle Tabellen
      mDate = DateSerial(Sheets("JahresPlan").Cells(1, 1), Tabelle.Index - 1, 1) ' 1. im jeweiligen Monat
      Tabelle.Cells(51, 5) = mDate ' Unterschrift gezeichn.
      
      For idx = 12 To 42
         Range("A" & idx & ":B" & idx).Select
         Selection.FormatConditions.Delete
         Cells(idx, 1).Select
         mTest = Month(mDate)
         If mTest = Tabelle.Index - 1 Then
            Cells(idx, 1) = mDate
            Cells(idx, 2) = Cells(idx, 1)
            Range("A" & idx & ":B" & idx).Select
            Selection.FormatConditions.Delete
            Selection.FormatConditions.Add Type:=xlExpression, Formula1:="=WOCHENTAG(A$" & idx & ")=7"
            Selection.FormatConditions(1).Interior.ColorIndex = FarbeSamstag
            Selection.FormatConditions.Add Type:=xlExpression, Formula1:="=WOCHENTAG(A$" & idx & ")=1"
            Selection.FormatConditions(2).Interior.ColorIndex = FarbeSontag
               IsFeiertag Cells(idx, 1), Memo
                  Cells(idx, 1).Font.ColorIndex = Memo(1)
                  Cells(idx, 2).Font.ColorIndex = Memo(1)
                  Sheets(1).Cells(3, 4).Font.ColorIndex = Memo(1)
                  If Memo(1) <> 1 Then
                     Cells(idx, 1).Font.Bold = True
                     Cells(idx, 2).Font.Bold = True
                     Sheets(1).Cells(Tabelle.Index + 4, idx - 7).Font.ColorIndex = Memo(1)
                     Sheets(1).Cells(Tabelle.Index + 4, idx - 7).Font.Bold = True
                  End If
                  If Memo(0) <> "" Then
                     Cells(idx, 2).NoteText Memo(0)
                     Sheets(1).Cells(Tabelle.Index + 4, idx - 7).NoteText Memo(0)
                  End If
                  If Format(Cells(idx, 1), "ddd") = "So" Then Sheets(1).Cells(Tabelle.Index + 4, idx - 7).Interior.ColorIndex = FarbeSontag
            mDate = mDate + 1
         Else
            Selection.FormatConditions.Delete
            Cells(idx, 1) = ""
            Cells(idx, 2) = ""
            Cells(idx, 2).ClearNotes
            Sheets(1).Cells(Tabelle.Index + 4, idx - 7).Interior.ColorIndex = 2
            Sheets(1).Cells(Tabelle.Index + 4, idx - 7).Interior.Pattern = xlUp
            Sheets(1).Cells(Tabelle.Index + 4, idx - 7).Interior.PatternColorIndex = xlAutomatic
         End If
      Next idx
      Range("A11").Select
   End If
Next Tabelle
Sheets(2).Select
End Sub

Sub RahmenL|fffd|schen() ' Unterprogramm
   Selection.Interior.ColorIndex = xlNone
   '.Interior.Pattern
   '.Interior.PatternColorIndex

    Selection.Borders(xlDiagonalDown).LineStyle = xlNone
    Selection.Borders(xlDiagonalUp).LineStyle = xlNone
    With Selection.Borders(xlEdgeLeft)
        .LineStyle = xlContinuous
        .Weight = xlThin
        .ColorIndex = xlAutomatic
    End With
    With Selection.Borders(xlEdgeTop)
        .LineStyle = xlContinuous
        .Weight = xlThin
        .ColorIndex = xlAutomatic
    End With
    With Selection.Borders(xlEdgeBottom)
        .LineStyle = xlContinuous
        .Weight = xlThin
        .ColorIndex = xlAutomatic
    End With
    With Selection.Borders(xlEdgeRight)
        .LineStyle = xlContinuous
        .Weight = xlThin
        .ColorIndex = xlAutomatic
    End With
    With Selection.Borders(xlInsideVertical)
        .LineStyle = xlContinuous
        .Weight = xlThin
        .ColorIndex = xlAutomatic
    End With
    With Selection.Borders(xlInsideHorizontal)
        .LineStyle = xlContinuous
        .Weight = xlThin
        .ColorIndex = xlAutomatic
    End With
End Sub

Attribute VB_Name = "BeiErstEinrichtung_Handstart"
Option Explicit

Sub ErstEinrichtung() ' Hauptprogramm Hier starten
Dim Tabelle
Application.EnableEvents = False

   For Each Tabelle In ActiveWorkbook.Sheets
      Sheets(Tabelle.Name).Select

' JahresTabelle = idx1 der Rest (Monate) nach lf. idx bezeichnen bzw in richtige Reihenfolge f|fffd|r Programmierg. bringen
' so k|fffd|nnen die MonatsTabellen |fffd|ber Ziffern 1-12 statt Namen angesprochen werden
      If Tabelle.Index > 1 Then
         Tabelle.Select
         Select Case Tabelle.Index
            Case 2: Tabelle.Name = "Jan"
            Case 3: Tabelle.Name = "Feb" ' Schaltjahre
            Case 4: Tabelle.Name = "Mar"
            Case 5: Tabelle.Name = "Apr"
            Case 6: Tabelle.Name = "Mai"
            Case 7: Tabelle.Name = "Jun"
            Case 8: Tabelle.Name = "Jul"
            Case 9: Tabelle.Name = "Aug"
            Case 10: Tabelle.Name = "Sep"
            Case 11: Tabelle.Name = "Okt"
            Case 12: Tabelle.Name = "Nov"
            Case 13: Tabelle.Name = "Dez"
         End Select
         SeiteEinrichten 'dauert lange
         TabelleFormatieren
         Zusatz
         HelleFarbenFestlegen
         Cells(1, 1).Select
      End If
   Next Tabelle
AllesNeu
Application.EnableEvents = True
End Sub

Sub Zusatz() ' Unterprogramm
Dim Tabelle
   For Each Tabelle In ActiveWorkbook.Sheets
      Sheets(Tabelle.Name).Select
      Sheets(Tabelle.Name).Activate
      ActiveWindow.DisplayGridlines = False
      If Tabelle.Index <> 1 Then
         ActiveSheet.ScrollArea = "A1:M55"
      Else
         ActiveSheet.ScrollArea = "A1:AO32"
      End If
   Next Tabelle
End Sub

Sub SeiteEinrichten() ' Unterprogramm
    With ActiveSheet.PageSetup
        .PrintTitleRows = ""
        .PrintTitleColumns = ""
    End With
    ActiveSheet.PageSetup.PrintArea = ""
    With ActiveSheet.PageSetup
        .LeftHeader = ""
        .CenterHeader = ""
        .RightHeader = ""
        .LeftFooter = ""
        .CenterFooter = ""
        .RightFooter = ""
        .LeftMargin = Application.CentimetersToPoints(LinkerRand)
        .RightMargin = Application.CentimetersToPoints(RechterRand)
        .TopMargin = Application.CentimetersToPoints(RandOben)
        .BottomMargin = Application.CentimetersToPoints(RandUnten)
'        .HeaderMargin = Application.CentimetersToPoints(0.5)
'        .FooterMargin = Application.CentimetersToPoints(0.5)
        .PrintHeadings = False
        .PrintGridlines = False
        .PrintComments = xlPrintNoComments
'        .PrintQuality = 600 ' Druckerabh|fffd|ngig
        .CenterHorizontally = False
        .CenterVertically = False
        .Orientation = xlPortrait
'        .Draft = False
        .PaperSize = xlPaperA4
        .FirstPageNumber = xlAutomatic
        .Order = xlDownThenOver
        .BlackAndWhite = False
'        .Zoom = 100
        .Zoom = False
        .FitToPagesWide = 1
        .FitToPagesTall = 1
    End With
End Sub

Sub TabelleFormatieren() ' Unterprogramm
   Range("A12:I42").Select
      Selection.FormatConditions.Delete
      Selection.Interior.ColorIndex = xlNone

   ' Spaltenbreite
   [A1].Select: Selection.ColumnWidth = 7
   [B1].Select: Selection.ColumnWidth = 4
   [C1].Select: Selection.ColumnWidth = 9
   [D1].Select: Selection.ColumnWidth = 9
   [E1].Select: Selection.ColumnWidth = 7.71
   [F1].Select: Selection.ColumnWidth = 7.71
   [G1].Select: Selection.ColumnWidth = 5
   [H1].Select: Selection.ColumnWidth = 5
   [I1].Select: Selection.ColumnWidth = 16
   [J1].Select: Selection.ColumnWidth = 18
   Cells(1, 1) = "Marco" ' = Range("A1") = [A1]
   Cells(2, 1) = "Gle|fffd|"
   Cells(4, 1) = "PNR.:53"
   Cells(1, 3) = "Abt: Montage"
   Cells(4, 3) = "STS"  ' = Range("C4") = [C4]
   Cells(6, 3) = "Stunden."
   Cells(8, 3) = "Std.Konto-Vormonat"
   Range("A11:B11").Select
    Selection.MergeCells = True
   [A11] = "TAG"
   [B11] = "TAG"
   [C11] = "Geleistet"
   [D11] = "Schreiben"
   [E11] = "ins Kto" & Chr(10) & "STS"
   [F11] = "vom Kto" & Chr(10) & "STS"
   Range("G11:H11").Select
    Selection.MergeCells = True
   [G11] = "Arbeitszeit" & Chr(10) & "von     bis"
   [I11] = "Baustelle"
   [J11] = "Project"
   Range("A1:H11").Select
      Selection.Font.Bold = False
      Selection.Font.Bold = True
   Range("A12:A42").Select
      Selection.NumberFormat = "dd/mmm"
   Range("B12:B42").Select
      Selection.NumberFormat = "ddd"
   Range("G12:G42").Select
      Selection.NumberFormat = "00\:00"
   Range("H12:H42").Select
      Selection.NumberFormat = "00\:00"
    Range("A11:I11").Select ' Kopfzeile
    Selection.Borders(xlDiagonalDown).LineStyle = xlNone
    Selection.Borders(xlDiagonalUp).LineStyle = xlNone
    With Selection.Borders(xlEdgeLeft)
        .LineStyle = xlContinuous
        .Weight = xlMedium
        .ColorIndex = xlAutomatic
    End With
    With Selection.Borders(xlEdgeTop)
        .LineStyle = xlContinuous
        .Weight = xlMedium
        .ColorIndex = xlAutomatic
    End With
    With Selection.Borders(xlEdgeRight)
        .LineStyle = xlContinuous
        .Weight = xlMedium
        .ColorIndex = xlAutomatic
    End With
    With Selection.Borders(xlInsideVertical)
        .LineStyle = xlContinuous
        .Weight = xlThin
        .ColorIndex = xlAutomatic
    End With
Range("A12").Select
Selection.RowHeight = 15
End Sub

Attribute VB_Name = "BeiSelection"
Option Explicit

Sub Allselect(Zeile, Spalte) ' Hauptprogramm SelectionChange
Dim Text

Select Case Spalte
   Case 3: Text = "########## Geleistet"
   Case 4: Text = "########## Schreiben"
   Case 5: Text = "########## ins Konto"
   Case 6: Text = "########## vom Konto"
   Case 7: Text = "########## Beginn Arbeitszeit"
   Case 8: Text = "########## Ende Arbeitszeit"
   Case 9: Text = "########## Baustelle"
   Case 10: Text = "########## Projekt"
   Case Else
      Text = ""
End Select
Application.StatusBar = Text
End Sub

Attribute VB_Name = "Bei|fffd|nderungTabelle"
Option Explicit
' WICHTIG WICHTIG Die ersten Zeilen bis "Exit Sub" d|fffd|rfen nicht ver|fffd|ndert werden - Wegen Berechnung Ein Aus
Sub AlleTabellen(Zeile, Spalte) ' Hauptprogramm Change
'Exit Sub



' Ab Hier kannst du machen was du willst
On Error GoTo FEHLERBEHANDLUNG
Application.EnableEvents = False
If Zeile > 11 And Zeile < 43 Then
   Select Case Spalte
      Case 3 ' StundenSpalte
         
      Case 4 ' Abk|fffd|rzungen f|fffd|r Spalte 4
         Cells(Zeile, Spalte) = TabErsetzen(Cells(Zeile, Spalte))
      Case 7 ' Arbeitszeit Beginn
         If Cells(Zeile, Spalte) <> "" Then Arbeitszeit Zeile
         Cells(Zeile, Spalte + 1).Select ' In n|fffd|chste Spalte rechts
      Case 8
         If Cells(Zeile, Spalte) <> "" Then Arbeitszeit Zeile
         Cells(Zeile, Spalte + 1).Select ' In n|fffd|chste Spalte rechts
      Case 9
         If Cells(Zeile, Spalte) <> "" Then
            sWort = Cells(Zeile, Spalte)
            BaustelleZeigen
            Cells(Zeile, Spalte) = sWort
         End If
      Case 10 ' ProjektSpalte
         
      Case Else
         Application.EnableEvents = True
         Exit Sub
   End Select
End If
Application.EnableEvents = True
Exit Sub
FEHLERBEHANDLUNG:
Select Case Err
   Case 13
      MsgBox "FEHLER " & Err.Number & " -> " & Err.Description
      Application.EnableEvents = True
      Application.ScreenUpdating = True
'    Case 52 ' Dateiname oder -nummer falsch (Fehler 52)
'        Resume Next
'    Case 1004 ' LaufzeitFehler
'        Resume Next
    Case Else
        MsgBox "FEHLER " & Err.Number & " -> " & Err.Description
        Resume
End Select
End Sub

Sub BaustelleZeigen()
Dim RngAct As Range, Rng As Range, idx, Lng
   Set Rng = Sheets("Jahresplan").Range("D20:AE30")
   Lng = Len(sWort)
   With frmBau.BauListe
'      .RemoveAllItems
      For Each RngAct In Rng
         If RngAct <> "" And LCase(Left(RngAct, Lng)) = LCase(sWort) Then
            If sWort <> RngAct Then
               .AddItem RngAct
            End If
         End If
      Next RngAct
   End With
If frmBau.BauListe.ListCount > 0 Then frmBau.Show
End Sub

Sub Arbeitszeit(zzz) ' Unterprogramm
Dim ZeitB, ZeitE, zBh, zBm, zEh, zEm, TimBeg, TimEnd, EndZ
   ZeitB = Cells(zzz, 7)
   ZeitE = Cells(zzz, 8)
   If ZeitB < 25 Then ZeitB = ZeitB * 100
   If ZeitE < 25 Then ZeitE = ZeitE * 100
'   If ZeitB = 0 And ZeitE = 0 Then ZeitB = ""
   Cells(zzz, 7) = ZeitB
   Cells(zzz, 8) = ZeitE
'   If ZeitB = "" Or ZeitE = "" Then Exit Sub
   ' Stunden
   zBh = ZeitB \ 100
   zEh = ZeitE \ 100
   TimBeg = DateAdd("h", zBh, Cells(zzz, 1))
   TimEnd = DateAdd("h", zEh, Cells(zzz, 1))
   ' Minuten
   zBm = ZeitB - zBh * 100
   zEm = ZeitE - zEh * 100
   TimBeg = DateAdd("n", zBm, TimBeg)
   TimEnd = DateAdd("n", zEm, TimEnd)
   If TimEnd < TimBeg Then TimEnd = DateAdd("d", 1, TimEnd) ' 1 Tag dazu
   EndZ = DateDiff("n", TimBeg, TimEnd) / 60
   If EndZ < 8 Then EndZ = EndZ - 0.75 Else EndZ = EndZ - 1
   Cells(zzz, 3) = EndZ
End Sub

Function Token(Source$, Nr%, TS$) As String  ' Unterprogramm
Dim von%, bis%, sLen%, Gefunden%
Dim TokenSeperator As String
TokenSeperator = TS
Source = LTrim(RTrim(Source))
von = 1
bis = 0
sLen = Len(Source)
Do While Nr > 1 And von <= sLen
    If InStr(TokenSeperator, Mid$(Source, von, 1)) Then Nr = Nr - 1
    von = von + 1
Loop
If Nr = 1 Then
    Gefunden = 0
    bis = von
    Do While bis <= sLen And Not Gefunden
        If InStr(TokenSeperator, Mid$(Source, bis, 1)) Then
            Gefunden = -1
        Else
            bis = bis + 1
        End If
    Loop
If Gefunden Then bis = bis - 1
End If
If bis >= von Then
    Token = Mid$(Source, von, bis - von + 1)
Else
    Token = ""
End If
End Function
Attribute VB_Name = "DieseArbeitsmappe"
Attribute VB_Base = "0{00020819-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Option Explicit

Attribute VB_Name = "Einstellungen"
Option Explicit

Public Const LinkerRand = 1.5 ' Sub ErstEinrichtung() von Hand starten
Public Const RechterRand = 0.5 ' SeitenFormat nur bei ErstEinrichtung // Semikolon muss entfernt werden
Public Const RandOben = 1.5
Public Const RandUnten = 1.5

' Bei Datums|fffd|nderung
Public L|fffd|schen
Public sWort
Public Const FarbeSamstag = 16
Public Const FarbeSontag = 15

Sub HelleFarbenFestlegen() ' benutzerdefinierte Farben // bzw JahresTabelle Farben f|fffd|r Projekte
   
' |fffd|nderungen im Men|fffd| Farbe
   
   ' 2. Reihe von oben rechts Grauton |fffd|ndern
   ActiveWorkbook.Colors(16) = RGB(220, 220, 220)
   
   ' Farben der unteren 2 Reihen in AuswahlMen|fffd| |fffd|ndern
   ActiveWorkbook.Colors(17) = RGB(0, 192, 192)
   ActiveWorkbook.Colors(18) = RGB(0, 255, 204)
   ActiveWorkbook.Colors(19) = RGB(153, 204, 255)
   ActiveWorkbook.Colors(20) = RGB(190, 102, 255)
   ActiveWorkbook.Colors(21) = RGB(248, 252, 0)
   ActiveWorkbook.Colors(22) = RGB(168, 168, 0)
   ActiveWorkbook.Colors(23) = RGB(208, 208, 0)
   ActiveWorkbook.Colors(24) = RGB(224, 200, 144)
   ActiveWorkbook.Colors(25) = RGB(192, 144, 128)
   ActiveWorkbook.Colors(26) = RGB(102, 255, 51)
   ActiveWorkbook.Colors(27) = RGB(102, 255, 153)
   ActiveWorkbook.Colors(28) = RGB(153, 204, 102)
   ActiveWorkbook.Colors(29) = RGB(255, 102, 102)
   ActiveWorkbook.Colors(30) = RGB(255, 102, 204)
   ActiveWorkbook.Colors(31) = RGB(255, 153, 102)
   ActiveWorkbook.Colors(32) = RGB(255, 204, 204)
    FarbWechsel
End Sub

Sub FarbWechsel() ' JahresTabelle Farben f|fffd|r Projekte
Dim idx, sdx, farb, mPat, mPatC
Sheets("Jahresplan").Select
farb = 17
   For idx = 20 To 26 Step 2
      For sdx = 2 To 29 Step 9
         Cells(idx, sdx).Select
         With Selection.Interior
              .ColorIndex = farb
'              .Pattern = xlSolid
'              .PatternColorIndex = xlAutomatic
         End With
         farb = farb + 1
      Next sdx
   Next idx
End Sub


Attribute VB_Name = "JahrTab"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Option Explicit

Private Sub Worksheet_Activate()
Dim TabNr, idx, sGel, iKonto, vKonto, KStand
Application.EnableEvents = False
Application.ScreenUpdating = False
Application.StatusBar = "Bereit"
   For TabNr = 2 To 13
      For idx = 12 To 42
         If Sheets(TabNr).Cells(idx, 3) <> "" Then
            Cells(TabNr + 4, idx - 7) = Sheets(TabNr).Cells(idx, 3)
         Else
            Cells(TabNr + 4, idx - 7) = Sheets(TabNr).Cells(idx, 4)
         End If
         If Not (IsNumeric(Cells(TabNr + 4, idx - 7))) Then Cells(TabNr + 4, idx - 7) = Ersetzen(Cells(TabNr + 4, idx - 7))
         If Sheets(TabNr).Cells(idx, 9) <> "" Then
            ' Farbe Baustelle
            Cells(TabNr + 4, idx - 7).Interior.ColorIndex = BaustellenFarbe(Sheets(TabNr).Cells(idx, 9), 1)
            Cells(TabNr + 4, idx - 7).Interior.Pattern = BaustellenFarbe(Sheets(TabNr).Cells(idx, 9), 2)
            Cells(TabNr + 4, idx - 7).Interior.PatternColorIndex = BaustellenFarbe(Sheets(TabNr).Cells(idx, 9), 3)
         End If
      Next idx
      sGel = Sheets(TabNr).Cells(43, 3) ' Summe Geleistet
      iKonto = Sheets(TabNr).Cells(43, 5) ' Summe ins Konto
      vKonto = Sheets(TabNr).Cells(43, 6) ' Summe vom Konto
      KStand = Sheets(TabNr).Cells(48, 4) ' Kontostand
      
      Cells(TabNr + 4, 36) = sGel + vKonto ' ins Konto ist schon abgezogen
      Cells(TabNr + 4, 37) = iKonto
      Cells(TabNr + 4, 38) = vKonto
      Cells(TabNr + 4, 39) = KStand
      
   Next TabNr
Application.EnableEvents = True
Application.ScreenUpdating = True
End Sub

Private Sub Worksheet_Change(ByVal Target As Range)
Dim antw
'Exit Sub
Application.EnableEvents = False
   If Target.Row = 2 And Target.Column = 27 Then
      antw = MsgBox("Alle Daten l|fffd|schen ?", vbYesNoCancel, "Neues Jahr")
      If antw = vbCancel Then
         Application.Undo
         myReset
         Exit Sub
      End If
      If antw = vbYes Then L|fffd|schen = True Else L|fffd|schen = False
      Cells(1, 1) = Val(Target)
      AllesNeu
   End If
Application.EnableEvents = True
End Sub

Function BaustellenFarbe(Baustelle, Wahl) ' Unterproramm
Dim idx, sdx, farb
Baustelle = Ersetzen(Baustelle)
If Baustelle = "" Then Exit Function
   For idx = 20 To 28 Step 2
      For sdx = 4 To 31 Step 9
         If Cells(idx, sdx) = Baustelle Then
            Cells(idx, sdx - 2).Select
            If Wahl = 1 Then BaustellenFarbe = Selection.Interior.ColorIndex
            If Wahl = 2 Then BaustellenFarbe = Selection.Interior.Pattern
            If Wahl = 3 Then BaustellenFarbe = Selection.Interior.PatternColorIndex
            Exit Function
         End If
      Next sdx
   Next idx
   If BaustellenFarbe = "" Then MsgBox Baustelle & " nicht gefunden"
   BaustellenFarbe = 0
End Function

Attribute VB_Name = "Klasse1"
Attribute VB_Base = "0{FCFB3D2A-A0FA-1068-A738-08002B3371B5}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = False
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Attribute VB_Name = "Men|fffd|"

Option Explicit

Const VerwName = "StundenVerwaltung"

Sub Auto_Open()
Auto_Close
Dim objCB As CommandBar
Dim objCTL As CommandBarControl
    On Error Resume Next
    CommandBars(VerwName).Delete
    Set objCB = CommandBars.Add(Name:=VerwName)
    With objCB
        Call ButtonAnlegen("Berechnung EIN / AUS", 2628, "AusEin", False)
        Call ButtonAnlegen("Reset falls Programmfehler auftritt", 59, "myReset", False)
        .Position = msoBarLeft
        .Visible = True
    End With
   BerechngEIN
   frmHilfe.Show
End Sub

Sub Auto_Close()
    On Error Resume Next
    CommandBars(VerwName).Delete
End Sub

Private Sub ButtonAnlegen(strCaption As String, intFaceID As Integer, strMakro As String, blnGruppe As Boolean)
    Dim objCTL As CommandBarControl
    Set objCTL = CommandBars(VerwName).Controls.Add(Type:=msoControlButton)
    With objCTL
        .BeginGroup = blnGruppe
        .Caption = strCaption
        If intFaceID <> 0 Then .FaceId = intFaceID
        .OnAction = strMakro
    End With
End Sub

Sub AusEin()
Dim objCTL As CommandBarControl
Set objCTL = CommandBars(VerwName).Controls("Berechnung EIN / AUS")
With ThisWorkbook.VBProject.VBComponents("Bei|fffd|nderungTabelle").CodeModule
    If .Lines(4, 1) = "'Exit Sub" Then
        .ReplaceLine 4, "Exit Sub"
        objCTL.FaceId = 1019
        MsgBox "Berechnung AUS"
    Else
        If .Lines(4, 1) = "Exit Sub" Then
            .ReplaceLine 4, "'Exit Sub" ' "Berechnung EIN"
            objCTL.FaceId = 2628
        End If
    End If
    End With
End Sub

Sub BerechngEIN()
Exit Sub
Dim objCTL As CommandBarControl
Set objCTL = CommandBars(VerwName).Controls("Berechnung EIN / AUS")
With ThisWorkbook.VBProject.VBComponents("Bei|fffd|nderungTabelle").CodeModule
        If .Lines(4, 1) = "Exit Sub" Then
            .ReplaceLine 4, "'Exit Sub" ' "Berechnung EIN"
            objCTL.FaceId = 2628
        End If
End With
End Sub

Sub myReset() ' Hier starten falls keine Reaktion bei |fffd|nderungen
   Application.EnableEvents = True
   Application.ScreenUpdating = True
End Sub

Attribute VB_Name = "Modul1"
Sub Urlaub()
Attribute Urlaub.VB_ProcData.VB_Invoke_Func = " \n14"
'
' Urlaub Makro
'

'
    Range("K26").Select
    With Selection.Interior
        .Pattern = xlSolid
        .PatternColorIndex = xlAutomatic
        .Color = 13382655
        .TintAndShade = 0
        .PatternTintAndShade = 0
    End With
    Range("M26").Select
    ActiveCell.FormulaR1C1 = "Urlaub"
    Range("M27").Select
End Sub
Attribute VB_Name = "Modul2"
Attribute VB_Name = "Tabelle1"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Tabelle13"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Option Explicit

Private Sub Worksheet_Change(ByVal Target As Range)
   AlleTabellen Target.Row, Target.Column
End Sub

Private Sub Worksheet_SelectionChange(ByVal Target As Range)
   If Selection.Rows.Count > 1 Then Exit Sub
   Allselect Target.Row, Target.Column
End Sub


Attribute VB_Name = "Tabelle14"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Option Explicit

Private Sub Worksheet_Change(ByVal Target As Range)
   AlleTabellen Target.Row, Target.Column
End Sub

Private Sub Worksheet_SelectionChange(ByVal Target As Range)
   If Selection.Rows.Count > 1 Then Exit Sub
   Allselect Target.Row, Target.Column
End Sub


Attribute VB_Name = "Tabelle15"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Option Explicit

Private Sub Worksheet_Change(ByVal Target As Range)
   AlleTabellen Target.Row, Target.Column
End Sub

Private Sub Worksheet_SelectionChange(ByVal Target As Range)
   If Selection.Rows.Count > 1 Then Exit Sub
   Allselect Target.Row, Target.Column
End Sub


Attribute VB_Name = "Tabelle16"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Option Explicit

Private Sub Worksheet_Change(ByVal Target As Range)
   AlleTabellen Target.Row, Target.Column
End Sub

Private Sub Worksheet_SelectionChange(ByVal Target As Range)
   If Selection.Rows.Count > 1 Then Exit Sub
   Allselect Target.Row, Target.Column
End Sub


Attribute VB_Name = "Tabelle17"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Option Explicit

Private Sub Worksheet_Change(ByVal Target As Range)
   AlleTabellen Target.Row, Target.Column
End Sub

Private Sub Worksheet_SelectionChange(ByVal Target As Range)
   If Selection.Rows.Count > 1 Then Exit Sub
   Allselect Target.Row, Target.Column
End Sub


Attribute VB_Name = "Tabelle18"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Option Explicit

Private Sub Worksheet_Change(ByVal Target As Range)
   AlleTabellen Target.Row, Target.Column
End Sub

Private Sub Worksheet_SelectionChange(ByVal Target As Range)
   If Selection.Rows.Count > 1 Then Exit Sub
   Allselect Target.Row, Target.Column
End Sub


Attribute VB_Name = "Tabelle19"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Option Explicit

Private Sub Worksheet_Change(ByVal Target As Range)
   AlleTabellen Target.Row, Target.Column
End Sub

Private Sub Worksheet_SelectionChange(ByVal Target As Range)
   If Selection.Rows.Count > 1 Then Exit Sub
   Allselect Target.Row, Target.Column
End Sub


Attribute VB_Name = "Tabelle20"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Option Explicit

Private Sub Worksheet_Change(ByVal Target As Range)
   AlleTabellen Target.Row, Target.Column
End Sub

Private Sub Worksheet_SelectionChange(ByVal Target As Range)
   If Selection.Rows.Count > 1 Then Exit Sub
   Allselect Target.Row, Target.Column
End Sub


Attribute VB_Name = "Tabelle21"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Option Explicit

Private Sub Worksheet_Change(ByVal Target As Range)
   AlleTabellen Target.Row, Target.Column
End Sub

Private Sub Worksheet_SelectionChange(ByVal Target As Range)
   If Selection.Rows.Count > 1 Then Exit Sub
   Allselect Target.Row, Target.Column
End Sub


Attribute VB_Name = "Tabelle22"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Option Explicit

Private Sub Worksheet_Change(ByVal Target As Range)
   AlleTabellen Target.Row, Target.Column
End Sub

Private Sub Worksheet_SelectionChange(ByVal Target As Range)
   If Selection.Rows.Count > 1 Then Exit Sub
   Allselect Target.Row, Target.Column
End Sub


Attribute VB_Name = "Tabelle23"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Option Explicit

Private Sub Worksheet_Change(ByVal Target As Range)
   AlleTabellen Target.Row, Target.Column
End Sub

Private Sub Worksheet_SelectionChange(ByVal Target As Range)
   If Selection.Rows.Count > 1 Then Exit Sub
   Allselect Target.Row, Target.Column
End Sub


Attribute VB_Name = "Tabelle24"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Option Explicit

Private Sub Worksheet_Change(ByVal Target As Range)
   AlleTabellen Target.Row, Target.Column
End Sub

Private Sub Worksheet_SelectionChange(ByVal Target As Range)
   If Selection.Rows.Count > 1 Then Exit Sub
   Allselect Target.Row, Target.Column
End Sub


Attribute VB_Name = "UserForm1"
Attribute VB_Base = "0{BBF97ED0-7556-472E-BFA9-F9EAD8B926F3}{305B1AA7-5362-4067-8C73-5D822862D802}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Attribute VB_Name = "frmBau"
Attribute VB_Base = "0{C9366FBF-A5EC-4F28-A986-FB8ABB1608E2}{1505BE5F-218A-4445-9278-DC3B0E1FE80B}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Option Explicit

Private Sub BauListe_Click()
   sWort = Me.BauListe.Text
   UserForm_Terminate
End Sub

Private Sub UserForm_Terminate()
'   Application.EnableEvents = True
'   Application.ScreenUpdating = True
   Unload Me
End Sub
Attribute VB_Name = "frmHilfe"
Attribute VB_Base = "0{0A718EAD-970F-49F0-8AFC-25BCE7AB9229}{FF27A7AA-381A-4518-A016-E91D3886391E}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Option Explicit

Private Sub CommandButton1_Click()
   Unload Me
End Sub

Private Sub TextBox1_Change()

End Sub

Private Sub UserForm_Initialize()
Dim v, t
v = Chr(10)
t = Chr(9)
   Me.TextBox1 = "ARBEITSZEITEN nur als Ziffern:" & v & _
     "  6" & t & " = 06:00" & v & _
     "  14" & t & " = 14:00" & v & _
     "  630" & t & " = 06:30" & v & _
     "  1445" & t & " = 14:45" & v & v & _
     "Stunden werden in Spalte 3 eingetragen" & v & _
     "------------------------------------------------------------------------" & v & _
     v & "BAUSTELLEN als K|fffd|rzel" & v & _
   "  AnfangsBuchstaben eingeben und Enter" & v & _
   "  Alle Baustellen mit den eingegebenen AnfangsBuchstaben werden in Liste angezeigt" & v & v & _
   t & "Baustelle einfach anklicken"
End Sub
Attribute VB_Name = "mKalender"
Option Explicit

Function KWoche(ByVal d As Date)
Dim t As Long
 t = DateSerial(Year(d + (8 - Weekday(d)) Mod 7 - 3), 1, 1)
 KWoche = ((d - t - 3 + (Weekday(t) + 1) Mod 7)) \ 7 + 1
End Function

Function dKWoche(ByVal dat As Date) As Integer ' deutsche Kalenderwoche
    Dim kw As Integer
    kw = Int((dat - DateSerial(Year(dat), 1, 1) + ((Weekday(DateSerial(Year(dat), 1, 1)) + 1) Mod 7) - 3) / 7) + 1
    If kw = 0 Then
        kw = dKWoche(DateSerial(Year(dat) - 1, 12, 31))
    ElseIf kw = 53 And (Weekday(DateSerial(Year(dat), 12, 31)) - 1) Mod 7 <= 3 Then
        kw = 1
    End If
    dKWoche = kw
End Function

Function IsFeiertag(mDate, ByRef NT)
Dim Tag, mon, Jah, FT$, Ost As Date, dat As Date, Adv As Date
Tag = Format(Day(mDate), "00")
mon = Format(Month(mDate), "00")
Jah = Year(mDate)
Ost = Ostern(Jah)
Adv = Advent(Jah)
dat = mDate
FT = Tag & mon
Select Case FT ' NT(1) = 3 ist f|fffd|r Feiertage in rot // Case TTMM ( Tag + Monat )
    Case "0101": NT(0) = "Neujahr": NT(1) = 3 ' Farbe
    Case "0601": NT(0) = "Heilige Drei K|fffd|nige"
    Case "1402": NT(0) = "ValentinsTag"
    Case "2702": NT(0) = "Hochzeitstag 2004": NT(1) = 3 ' Farbe
    Case "0105": NT(0) = "MaiFeiertag": NT(1) = 3
    Case "1508": NT(0) = "Maria Himmelfahrt"
    Case "0310": NT(0) = "Tag der Dt. Einheit": NT(1) = 3
    Case "3110": NT(0) = "Reformationstag"
    Case "0111": NT(0) = "Allerheiligen"
    Case "0612": NT(0) = "Nikolaus"
    Case "2412": NT(0) = "Heilig Abend"
    Case "2512": NT(0) = "1.Weihnacht": NT(1) = 3
    Case "2612": NT(0) = "2.Weihnacht": NT(1) = 3
    Case "3112": NT(0) = "Sylvester"
Case Else
    NT(0) = "": NT(1) = 1
End Select
If dat = Ost - 48 Then NT(0) = NT(0) & vbLf & "RosenMontag"
If dat = Ost - 47 Then NT(0) = NT(0) & vbLf & "Fastnacht"
If dat = Ost - 46 Then NT(0) = NT(0) & vbLf & "Aschermittwoch"
If dat = Ost - 2 Then NT(0) = NT(0) & vbLf & "Karfreitag": NT(1) = 3
If dat = Ost Then NT(0) = NT(0) & vbLf & "OsterSonntag": NT(1) = 3
If dat = Ost + 1 Then NT(0) = NT(0) & vbLf & "OsterMontag": NT(1) = 3
If dat = Ost + 39 Then NT(0) = NT(0) & vbLf & "Cristi Himmelfahrt": NT(1) = 3
If dat = Ost + 49 Then NT(0) = NT(0) & vbLf & "PfingstSonntag": NT(1) = 3
If dat = Ost + 50 Then NT(0) = NT(0) & vbLf & "PfingstMontag": NT(1) = 3
If dat = Ost + 60 Then NT(0) = NT(0) & vbLf & "FronLeichnam"
If dat = Adv - 11 Then NT(0) = NT(0) & vbLf & "Bu|fffd|- und BetTag"
If dat = Adv Then NT(0) = NT(0) & vbLf & "1.Advent"
If dat = Adv + 7 Then NT(0) = NT(0) & vbLf & "2.Advent"
If dat = Adv + 14 Then NT(0) = NT(0) & vbLf & "3.Advent"
If dat = Adv + 21 Then NT(0) = NT(0) & vbLf & "4.Advent"
IsFeiertag = NT
End Function

Function Ostern(Jahreszahl As Variant)
    Dim a, B, C, d, E, TagesZahl As Integer
    a = Jahreszahl Mod 19                             ' Formel nach Gau|fffd|
    B = Jahreszahl Mod 4                              ' Werte f|fffd|r den Zeitraum
    C = Jahreszahl Mod 7                              ' 1900 - 2099
    d = (19 * a + 24) Mod 30                          ' M=24
    E = (2 * B + 4 * C + 6 * d + 5) Mod 7        ' N=5
    TagesZahl = 22 + d + E                            ' Ermittlung des Tages
    If TagesZahl > 31 Then                            ' M|fffd|rz oder April ?
        TagesZahl = TagesZahl - 31                    ' wenn April dann 31 Tage abziehen
        If TagesZahl = 26 Then TagesZahl = 19         ' wenn Ostern am 26.April
                                                      ' dann immer 19.April
                                                      ' 1. Ausnahme
        If (TagesZahl = 25 And d = 28 And a > 10) Then TagesZahl = 18
                                                      ' 2. Ausnahme
       Ostern = DateSerial(Jahreszahl, 4, TagesZahl)  ' Ostern im April
    Else
       Ostern = DateSerial(Jahreszahl, 3, TagesZahl)  ' Ostern im M|fffd|rz
    End If
End Function

Function Advent(Jahreszahl)
Const Sonntag = 1
If Weekday(DateSerial(Jahreszahl, 12, 24)) = Sonntag Then
    Advent = DateSerial(Jahreszahl, 12, 3)
Else
    Advent = DateSerial(Jahreszahl, 12, 24) - Weekday(DateSerial(Jahreszahl, 12, 24))
    Advent = Advent - 20
End If
End Function

Attribute VB_Name = "wErsetzen"
Option Explicit

Function Ersetzen(wJahresPlan)
Dim tmp
tmp = LCase(wJahresPlan) ' wegen unterschiedlicher Gross- Kleinschreibung umwandeln
Select Case tmp
   Case "urlaub": wJahresPlan = "U"
   Case "krank": wJahresPlan = "Kr"
   Case "schulung": wJahresPlan = "Sch"
   Case "kind": wJahresPlan = "Kid"
   Case "bad": wJahresPlan = ""
   Case "ft": wJahresPlan = "FT" ' FeierTag
   Case "stadtwerke-ff-oder": wJahresPlan = "Stadtwerke-Frankfurt-Oder"
   Case "sur-shipdock-nl": wJahresPlan = "SUR-Shipdock Harlingen/NL"
End Select
Ersetzen = wJahresPlan
End Function

Function TabErsetzen(K|fffd|rzel)
If IsNumeric(K|fffd|rzel) Or K|fffd|rzel = "" Then
   TabErsetzen = K|fffd|rzel
   Exit Function
End If
Dim tmp
tmp = LCase(K|fffd|rzel) ' wegen unterschiedlicher Gross- Kleinschreibung umwandeln
If ActiveCell.Column = 4 Then
   Select Case tmp
      Case "u": K|fffd|rzel = "Urlaub"
      Case "k": K|fffd|rzel = "Krank"
      Case "s": K|fffd|rzel = "Schulung"
      Case "kd": K|fffd|rzel = "Kind"
   Case Else
      TabErsetzen = K|fffd|rzel
   End Select
End If
TabErsetzen = K|fffd|rzel
End Function



INQUEST-PP=macro
