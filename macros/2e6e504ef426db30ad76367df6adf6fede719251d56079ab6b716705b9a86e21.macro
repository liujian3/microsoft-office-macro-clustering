Attribute VB_Name = "Annual"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Donors"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Entry"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Module1"
Sub DisplayMenu()
Attribute DisplayMenu.VB_ProcData.VB_Invoke_Func = "x\n14"
Dim MenuChoice, Answer As Integer
Dim strVersion, MyMenuText, InputBoxText As String

    strVersion = "Version 3.10.20 (11/18/17)"

    If ActiveWorkbook.Name = Range("Parameters!MasterFileName") Then
        MyMenuText = "Enter your menu selection, 1-9, or 0 to exit menu" & vbCrLf & vbCrLf
        MyMenuText = MyMenuText & "1 - Entry Is Complete so Save and Print" & vbCrLf
        MyMenuText = MyMenuText & "2 - Insert Additional Entry Rows" & vbCrLf
        MyMenuText = MyMenuText & "3 - Print Monthly Reports" & vbCrLf
        MyMenuText = MyMenuText & "4 - Clear Entry Sheet and Start Again" & vbCrLf
        MyMenuText = MyMenuText & "5 - Print Donor List" & vbCrLf
        MyMenuText = MyMenuText & "6 - Print Receipts" & vbCrLf
        MyMenuText = MyMenuText & "7 - Insert Additional Check Detail Rows" & vbCrLf
        MyMenuText = MyMenuText & "8 - Refresh List of Specials" & vbCrLf
        MyMenuText = MyMenuText & "9 - Start A New Year" & vbCrLf
    Else: MyMenuText = "Enter your menu selection or 0 to exit menu" & vbCrLf & vbCrLf
    MyMenuText = MyMenuText & "R - Reprint the Giving Information" & vbCrLf
    End If
    MyMenuText = MyMenuText & "0 - Exit the menu" & vbCrLf
    MenuChoice = 0
    InputBoxText = InputBox(Prompt:=MyMenuText, _
          Title:="MENU - use option+command+x to bring up this menu", Default:=MenuChoice)
    
    If UCase(InputBoxText) = "V" Then Answer = MsgBox(strVersion, vbOKOnly, "Version")
    
    MenuChoice = 0
    If (InputBoxText >= "1" And InputBoxText <= "9") Then MenuChoice = CInt(InputBoxText)
    If MenuChoice = 1 Then Call EntryComplete
    If MenuChoice = 2 Then Call InsertEntryRows
    If MenuChoice = 3 Then Call PrintReports
    If MenuChoice = 4 Then
        Answer = MsgBox("Would you really like to Clear Entry Sheet and Start Again?", vbYesNo + vbQuestion, "Really Start Again?")
        If Answer = vbYes Then
            Call ClearEntrySheet
            Call GetGivingDate
        End If
    End If
    If MenuChoice = 5 Then Call PrintDonorList
    If MenuChoice = 6 Then Call PrintReceipts
    If MenuChoice = 7 Then Call InsertCheckDetailsRows
    If MenuChoice = 8 Then Call RefreshPivotTables
    If MenuChoice = 9 Then Call StartNewYear
    If UCase(InputBoxText) = "R" Then Call PrintGivingInfo

End Sub

Sub EntryComplete()
Dim dtDonationDate As Date
Dim strDate, strGivingFileName As String
Dim strMasterFile, strFolderPath As String
Dim Answer, Counter As Integer
Dim NumDonorCols, NumDetailCols, NumPastorDetailCols, NumCopies, NumPrintPages As Integer
Dim FileExists, Done, RptPortrait As Boolean
Dim obj_fso As Object
Dim NumRows, RowToPaste, NR_Row, PT_Row  As Long
Dim wbSource As Workbook
Dim FileCollection As New Collection
Dim strFileName As String
Dim NumFiles, FileCounter  As Long


    Call RefreshPivotTables 'Refresh Pivot Tables

    Answer = MsgBox("Do you really want to complete the entry, save and print?", vbYesNo + vbQuestion, "Really Complete Entry?")
    If Answer = vbYes Then

        strFolderPath = ActiveWorkbook.Path
        strMasterFile = ActiveWorkbook.FullName
        Set wbSource = ActiveWorkbook
    
        'Get needed info from Entry sheet
        Entry.Activate
        NumDonorCols = Range("DonorRange").Columns.Count
        NumDetailCols = Range("DetailsRange").Columns.Count
        NumRows = Cells(Range("GivingEntry").Row + Range("GivingEntry").Rows.Count - 1, Range("GivingEntry").Column).End(xlUp).Row - Range("GivingEntry").Row + 1
    
          'Get FileName For SaveCopyAs
    If Right$(strFolderPath, 1) <> "/" Then
        strFolderPath = strFolderPath & "/"
    End If
 
    strFileName = Dir$(strFolderPath) 'Get first filename
 
    Do While Len(strFileName)
        FileCollection.Add strFileName
        strFileName = Dir$
   Loop
    
        Range("DonationDate").Select
        dtDonationDate = Range("DonationDate").Value
        strDate = Format(Range("DonationDate").Value, "yyyymmdd")
        Done = False
        Counter = 1
        Do While Not Done
            strGivingFileName = strDate + " Weekly Giving Record-" + CStr(Counter) + ".xlsm"
            FileExists = False
            NumFiles = FileCollection.Count
            FileCounter = 1
            Do While FileCounter <= NumFiles And FileExists = False
                file = FileCollection(FileCounter)
                If FileCollection(FileCounter) = strGivingFileName Then FileExists = True
                FileCounter = FileCounter + 1
            Loop
            If Not FileExists Then Done = True
            Counter = Counter + 1
        Loop
        strGivingFileName = strFolderPath + strGivingFileName
 
        'Save sheets in new workbook
        ActiveWorkbook.SaveCopyAs strGivingFileName
  
          
        'Paste giving info in the Annual sheet
        wbSource.Activate
        Annual.Activate
        RowToPaste = ActiveSheet.Cells(ActiveSheet.Rows.Count, "A").End(xlUp).Row + 1
        Range("DonorRange").Resize(NumRows, NumDonorCols).Copy
        ActiveSheet.Range("A1").Cells(RowToPaste, 1).Select
        Selection.PasteSpecial Paste:=xlValues, Operation:=xlNone, SkipBlanks:=False, Transpose:=False
        
        Range("DetailsRange").Resize(NumRows, NumDetailCols).Copy
        ActiveSheet.Range("A1").Cells(RowToPaste, NumDonorCols + 1).Select
        Selection.PasteSpecial Paste:=xlValues, Operation:=xlNone, SkipBlanks:=False, Transpose:=False
        ActiveSheet.Range("A1").Select
        
        'Now Print, cleanup and save Master sheet
        Call PrintGivingInfo
        
        'Clear the data from the Entry sheet and save the Master file
        Call ClearEntrySheet
        Call RefreshPivotTables 'Refresh Pivot Tables
        wbSource.Save
        MsgBox ("Master was saved and the Entry information has been saved as " & strGivingFileName)
        If Month(dtDonationDate) <> Month(dtDonationDate + 7) Then
            MsgBox ("You may want to print your Monthly Report as this is the last week of the month.")
        End If
        
    End If
    
    Set obj_fso = Nothing
    Set wbSource = Nothing

End Sub
Sub PrintGivingInfo()
Dim Answer, Counter As Integer
Dim NumCopies, NumPrintPages As Integer
Dim RptPortrait As Boolean

        Answer = MsgBox("Would you like to Print the Giving Information?", vbYesNo + vbQuestion, "Print Giving Info")
        If Answer = vbYes Then
            If UCase(Range("RptOrientation")) = "L" Then RptPortrait = False Else RptPortrait = True
            If RptPortrait Then LinesPerPage = 45 Else LinesPerPage = 32
            Entry.Activate
            ActiveSheet.PageSetup.PrintArea = "Print_GivingDetails"
            NumPrintPages = Range("Print_GivingDetails").Rows.Count / 45
            With ActiveSheet.PageSetup
                If RptPortrait Then .Orientation = xlPortrait Else .Orientation = xlLandscape
                .BlackAndWhite = True
                .Zoom = False
                .FitToPagesWide = 1
                .FitToPagesTall = NumPrintPages
            End With
            NumCopies = Range("NumDetailCopies")
            ActiveWindow.SelectedSheets.PrintOut Copies:=NumCopies, Collate:=True
            
            ActiveSheet.PageSetup.PrintArea = "Print_GivingSummary"
            With ActiveSheet.PageSetup
                .Orientation = xlPortrait
                .BlackAndWhite = True
                .Zoom = False
                .FitToPagesWide = 1
                .FitToPagesTall = 1
            End With
            NumCopies = Range("NumSummaryCopies")
            ActiveWindow.SelectedSheets.PrintOut Copies:=NumCopies, Collate:=True
        End If

End Sub

Sub ClearEntrySheet()
' Clear all Entries and shrink Entry rows back to default number
Dim RowNum, NumberOfRows As Long
Dim NR_Row, PT_Row  As Long
Dim PT As PivotTable
    
    Entry.Activate
    ActiveSheet.Range("DonationDate").ClearContents
    ActiveSheet.Range("GivingEntry").ClearContents
    ActiveSheet.Range("ChurchCashEntry").ClearContents
    ActiveSheet.Range("ChurchCheckEntry").ClearContents
    
    'Reset Entry Rows to Default
    NumberOfRows = Range("DefaultEntryRows")
    If Range("GivingEntry").Rows.Count > NumberOfRows + 1 Then
        RowNum = Range("GivingEntry").Row + Range("GivingEntry").Rows.Count - 3
        Rows(RowNum).Select
        Rows(CStr(RowNum) & ":" & CStr(Range("GivingEntry").Row + NumberOfRows - 1)).Select
        Selection.Delete Shift:=xlUp
        Application.CutCopyMode = False
    End If
        
    'Reset Check Details Rows to Default, Minimum of 10 rows
    NumberOfRows = Range("DefaultCheckDetailsRows")
    If NumberOfRows < 10 Then NumberOfRows = 10
    If Range("ChurchCheckEntry").Rows.Count > NumberOfRows Then
        RowNum = Range("ChurchCheckEntry").Row + Range("ChurchCheckEntry").Rows.Count - 3
        Rows(RowNum).Select
        Rows(CStr(RowNum) & ":" & CStr(Range("ChurchCheckEntry").Row + NumberOfRows - 2)).Select
        Selection.Delete Shift:=xlUp
        Application.CutCopyMode = False
    End If
        
    Call RefreshPivotTables 'Refresh Pivot Tables
    
    ActiveSheet.Range("EntryStartingCell").Select
    Set PT = Nothing

End Sub

Sub InsertEntryRows()
Dim RowNum, NumberOfRows As Long
Dim ColNum, NumberOfColumns As Integer
    
    Entry.Activate
    ColNum = Range("GivingEntry").Column
    NumberOfColumns = Range("GivingEntry").Columns.Count
    RowNum = Range("GivingEntry").Row + Range("GivingEntry").Rows.Count - 2
    NumberOfRows = Range("EntryRowsToInsert")
    Rows(RowNum).Select
    Selection.Copy
    Rows(CStr(RowNum) & ":" & CStr(RowNum + NumberOfRows - 1)).Select
    Selection.Insert Shift:=xlDown
    ActiveSheet.Range(Cells(RowNum, ColNum), Cells(RowNum + NumberOfRows - 1, NumberOfColumns + 1)).Select
    Selection.ClearContents
    Application.CutCopyMode = False
    ActiveSheet.Cells(RowNum, ColNum).Select

End Sub

Sub InsertCheckDetailsRows()
Dim RowNum, NumberOfRows As Long
Dim ColNum, NumberOfColumns As Integer
    
    Entry.Activate
    ColNum = Range("ChurchCheckEntry").Column
    NumberOfColumns = Range("ChurchCheckEntry").Columns.Count
    RowNum = Range("ChurchCheckEntry").Row + Range("ChurchCheckEntry").Rows.Count - 2
    NumberOfRows = Range("CheckDetailsRowsToInsert")
    Rows(RowNum).Select
    Selection.Copy
    Rows(CStr(RowNum) & ":" & CStr(RowNum + NumberOfRows - 1)).Select
    Selection.Insert Shift:=xlDown
    ActiveSheet.Range(Cells(RowNum, ColNum), Cells(RowNum + NumberOfRows - 1, NumberOfColumns + 1)).Select
    Selection.ClearContents
    Application.CutCopyMode = False
    ActiveSheet.Cells(RowNum, ColNum).Select

End Sub

Sub GetGivingDate()
Dim strDate As String
    
    Entry.Activate
    If UCase(strDate) = "DEBUG" Then
        ActiveSheet.Range("DonationDate").Value = ""
        ActiveSheet.Unprotect
        Annual.Unprotect
        Receipt.Unprotect
        Reports.Unprotect
        Parameters.Unprotect
        Donors.Unprotect
    Else
        ActiveSheet.Protect UserInterfaceOnly:=True
        Annual.Protect UserInterfaceOnly:=True
        Receipt.Protect UserInterfaceOnly:=True
        Reports.Protect UserInterfaceOnly:=True
        Parameters.Protect UserInterfaceOnly:=True
        Donors.Unprotect
    End If
    If Not IsDate(Range("DonationDate").Value) Then
        strDate = InputBox(Prompt:="Enter the date (of the Donation).", _
          Title:="ENTER DATE", Default:=Format(Now(), "mm/dd/yyyy"))
        Range("DonationDate").Value = strDate
        Columns("B:B").EntireColumn.AutoFit
    End If
    Range("EntryStartingCell").Select
    
End Sub

Sub RefreshPivotTables()
Dim NumRows, RowToPaste, NR_Row, PT_Row  As Long
Dim PT As PivotTable

    'Refresh Giving Summary Pivot Table
    Entry.Activate
    Set PT = ActiveSheet.PivotTables("PT_Specials")
    PT.RefreshTable
    PT_Row = PT.TableRange1.Rows(PT.TableRange1.Rows.Count).Row
    NR_Row = Range("Print_GivingSummary").Row + Range("Print_GivingSummary").Rows.Count - 1
    With Range("Print_GivingSummary")
    .Resize(.Rows.Count + PT_Row - NR_Row, .Columns.Count).Name = "Print_GivingSummary"
    End With
    ActiveSheet.PageSetup.PrintArea = Range("Print_GivingSummary").Address
    Columns("B:B").EntireColumn.AutoFit

    'Refresh Report Pivot Table
    Annual.Activate
    RowToPaste = ActiveSheet.Cells(ActiveSheet.Rows.Count, "A").End(xlUp).Row + 1
    NR_Row = Range("AnnualSpecials").Row + Range("AnnualSpecials").Rows.Count - 1
    With Range("AnnualSpecials")
    .Resize(.Rows.Count + RowToPaste - NR_Row, .Columns.Count).Name = "AnnualSpecials"
    End With
    
    Reports.Activate
    Set PT = ActiveSheet.PivotTables("PT_RptSpecials")
    PT.RefreshTable
    PT_Row = PT.TableRange1.Rows(PT.TableRange1.Rows.Count).Row
    NR_Row = Range("Print_Report").Row + Range("Print_Report").Rows.Count - 1
    With Range("Print_Report")
    .Resize(.Rows.Count + PT_Row - NR_Row, .Columns.Count).Name = "Print_Report"
    End With
    ActiveSheet.PageSetup.PrintArea = Range("Print_Report").Address
    Columns("B:B").EntireColumn.AutoFit

    Entry.Activate
    Set PT = Nothing

End Sub

Sub PrintReceipts()
Dim Answer, Counter, DonorNum, NumDonorCols, NumDetailCols As Integer
Dim NumDonorRows As Long

    'Print Receipts
    Answer = MsgBox("Would you like to Print the Giving Receipts?", vbYesNo + vbQuestion, "Print Giving Receipts")
    If Answer = vbYes Then
        Donors.Activate
        NumDonorRows = ActiveSheet.Cells(ActiveSheet.Rows.Count, "A").End(xlUp).Row + 1
        Range("ListOfDonors").Sort Key1:=Range("B1"), Order1:=xlAscending, Header:=xlYes
        Receipt.Activate
        Done = False
        Counter = 1
        Do While Not Done
            If IsNumeric(Donors.Range("A1").Cells(Counter, 1).Value) Then
                DonorNum = Donors.Range("A1").Cells(Counter, 1).Value
                Range("ReceiptDonorNum").Value = DonorNum
                If Range("TotalDonation").Value >= Range("Minimum_Receipt_Amount") Then
                    ActiveSheet.PageSetup.PrintArea = "Print_Receipt"
                    With ActiveSheet.PageSetup
                        .Orientation = xlPortrait
                        .BlackAndWhite = True
                        .Zoom = False
                        .FitToPagesWide = 1
                        .FitToPagesTall = 1
                    End With
                    ActiveWindow.SelectedSheets.PrintOut Copies:=1, Collate:=True
                End If
            End If
            Counter = Counter + 1
            If Counter = NumDonorRows Then Done = True
        Loop
        Donors.Activate
        Range("ListOfDonors").Sort Key1:=Range("A1"), Order1:=xlAscending, Header:=xlYes
        ActiveSheet.Range("A1").Cells(NumDonorRows, 1).Select
    End If


End Sub

Sub PrintReports()
Dim Answer, NumCopies, NumPrintPages As Integer
Dim RptPortrait As Boolean

    If UCase(Range("RptOrientation")) = "L" Then RptPortrait = False Else RptPortrait = True
    If RptPortrait Then LinesPerPage = 45 Else LinesPerPage = 32
    'Now Print Receipts
    Answer = MsgBox("Would you like to Print the Monthly Reports?", vbYesNo + vbQuestion, "Print Monthly Reports")
    If Answer = vbYes Then
        Call RefreshPivotTables
        Reports.Activate
        NumPrintPages = Range("NumReportPages")
        ActiveSheet.PageSetup.PrintArea = "Print_Report"
        With ActiveSheet.PageSetup
        If RptPortrait Then .Orientation = xlPortrait Else .Orientation = xlLandscape
'            .Orientation = xlPortrait
'            .Orientation = xlLandscape
            .BlackAndWhite = True
            .Zoom = False
            .FitToPagesWide = 1
            .FitToPagesTall = NumPrintPages
        End With
        NumCopies = Range("NumReportCopies")
        ActiveWindow.SelectedSheets.PrintOut Copies:=NumCopies, Collate:=True
    End If

End Sub

Sub PrintDonorList()
Dim NumRows As Long
Dim NumCols, Answer, NumCopies, NumPrintPages As Integer

    'Now Print List of Donors
    Answer = MsgBox("Would you like to Print Donor List?", vbYesNo + vbQuestion, "Print Donor List")
    If Answer = vbYes Then
    Donors.Activate
    ActiveSheet.PageSetup.PrintArea = "ListOfDonors"
    NumPrintPages = Range("ListOfDonors").Rows.Count / 45
    With ActiveSheet.PageSetup
        .Orientation = xlPortrait
        .BlackAndWhite = True
        .Zoom = False
        .FitToPagesWide = 1
        .FitToPagesTall = NumPrintPages
    End With
    NumCopies = 1
    Range("ListOfDonors").Sort Key1:=Range("B1"), Order1:=xlAscending, Header:=xlYes
    ActiveWindow.SelectedSheets.PrintOut Copies:=NumCopies, Collate:=True
    Range("ListOfDonors").Sort Key1:=Range("A1"), Order1:=xlAscending, Header:=xlYes
    ActiveWindow.SelectedSheets.PrintOut Copies:=NumCopies, Collate:=True
    End If

End Sub

Sub StartNewYear()
Dim RowNum, NumberOfRows As Long
Dim ColNum, NumberOfColumns As Integer

    Answer = MsgBox("Would you like to Erase your history and Start a new year?", vbYesNo + vbQuestion, "Print Donor List")
    If Answer = vbYes Then

    'Clear the Annual sheet
    Annual.Activate
    ColNum = Range("AnnualHeaderRow").Column
    NumberOfColumns = Range("AnnualHeaderRow").Columns.Count
    RowNum = Range("AnnualHeaderRow").Row + 1
    NumberOfRows = ActiveSheet.Cells(ActiveSheet.Rows.Count, "A").End(xlUp).Row - RowNum
    If NumberOfRows >= 0 Then
        ActiveSheet.Range(Cells(RowNum, ColNum), Cells(NumberOfRows + RowNum, NumberOfColumns)).Select
        Selection.ClearContents
        Application.CutCopyMode = False
    End If
    ActiveSheet.Range("A1").Select

    'Clear Entry Sheet and Save Workbook
    Call ClearEntrySheet
    ActiveWorkbook.Save
    End If

End Sub


Attribute VB_Name = "Parameters"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Receipt"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Reports"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "ThisWorkbook"
Attribute VB_Base = "0{00020819-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True


Private Sub Workbook_Open()
Dim strDate As String
Dim Answer As Integer
    
    Call GetGivingDate
    If Application.ActiveWorkbook.Name = Range("Parameters!MasterFileName") Then
    Answer = MsgBox("Enter your giving information, then use option+command+x to bring up the menu", vbOKOnly, "To bring up the menu")
    End If
End Sub


' InQuest injected base64 decoded content
' j)lF

INQUEST-PP=macro
