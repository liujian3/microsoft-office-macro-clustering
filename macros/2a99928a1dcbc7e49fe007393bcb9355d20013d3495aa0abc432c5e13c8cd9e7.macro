Attribute VB_Name = "CodeRuntimeMacros"
Option Explicit
Dim StartTime, SecondsElapsed  As Double

Sub StopCalc() 'This macro stops calclulations and updating. Disabling events can be inlcuded as well. By adding this macro, at the begining of a Macro then using the ResetCalc, your code is sped up considerably
    With Application
      '  .EnableEvents = False 'Turns Off Enabling Events '(optional)
        .Calculation = xlCalculationManual 'Sets Workbook Calculation to Manual
        .ScreenUpdating = False 'Turns Off Screen Updating
    End With
End Sub
    
Sub ResetCalc() 'This macro reset Calculations, screen updating and events and should be used at the end of a macro when StopCalc has been used
    With Application
     '   .EnableEvents = True 'Re-enabled Events (optional)
        .Calculation = xlCalculationAutomatic 'Resets workbook Calculations to Automatic
        .ScreenUpdating = True 'Turns on Screen Updating
    End With
End Sub



'Start Clock and StopClock Macros can be used inside other macros to set a Time on Macros. This helps test the speed of macros, so when you make changes, you can see how it affects the speed of those macros

Sub StartClock() 'Starts the Timer
  StartTime = Timer 'Starts Timer
End Sub

Sub StopClock()
  SecondsElapsed = Round(Timer - StartTime, 2) 'Determine how many seconds code took to run
  MsgBox "This code ran successfully in " & SecondsElapsed & " seconds", vbInformation 'Notifies the user how long the macro took to run (in seconds)
End Sub


Attribute VB_Name = "FadeOutMessages"
Option Explicit


Sub FoldDefaultMess()
Dim i As Integer
Dim delay As Double
Dim StartTime As Double
With ActiveSheet.Shapes("SetDefaultMsg")
.Visible = True
  For i = 1 To 100
  .Fill.Transparency = i / 100
    delay = 0.006
    StartTime = Timer
    Do
    DoEvents
    Loop While Timer - StartTime < delay
  Next i
.Visible = False
End With
End Sub




Attribute VB_Name = "FileMacros"
Option Explicit
Dim LastRow, FileRow, LastFiltRow As Long
Dim Resp As Integer

Sub SelectedFilesFilter()
With Sheet1
LastRow = .Range("S9999").End(xlUp).Row
If LastRow < 8 Then Exit Sub
.Range("BA3:BH99,CA3:CH999").ClearContents 'Clear any remaining Criteria Or Results
.Range("BA3").Value = Sheet2.Range("CheckIcon").Value
.Range("Q7:X" & LastRow).AdvancedFilter xlFilterCopy, CriteriaRange:=.Range("BA2:BH3"), CopyToRange:=.Range("CA2:CH2"), Unique:=True
End With
End Sub

Sub CopySelectedFiles()
Attribute CopySelectedFiles.VB_ProcData.VB_Invoke_Func = " \n14"
With Sheet1
    LastRow = .Range("S9999").End(xlUp).Row
    If LastRow < 8 Then Exit Sub
    .Range("EA3:EH999").ClearContents 'Clear any remaining  Results
    .Range("Q7:X" & LastRow).AdvancedFilter xlFilterCopy, CriteriaRange:=.Range("DA2:DH3"), CopyToRange:=.Range("EA2:EH2"), Unique:=True
End With
End Sub


Sub PasteSelectedFiles()
Dim SourceFilename, DestinationFilename As String
With Sheet1
    LastRow = .Range("EC99999").End(xlUp).Row
    If LastRow < 3 Then
        MsgBox "No files have been copied to the clipboard to paste. Please select and copy files to be pasted"
        Exit Sub
    End If
    StopCalc
    For FileRow = 3 To LastRow
        SourceFilename = .Range("EH" & FileRow).Value 'Determine Source Filename
        DestinationFilename = .Range("B5").Value & "\" & .Range("EC" & FileRow).Value 'Determine Destination Filename
        'On Error Resume Next
        If Dir(DestinationFilename) <> "" Then  'File already exists
        'On Error GoTo 0
            Resp = MsgBox("The file " & DestinationFilename & vbCrLf & "already exists. Would you like to overwrite this file?", vbYesNo, "File Exists")
            If Resp = vbNo Then GoTo NextFile
        End If
                  'Two Different Copy Methods, use just one
                FileCopy SourceFilename, DestinationFilename 'SImple File Copy Method
                'Call ObjFile.CopyFile(SourceFilename, DestinationFilename, True) 'Using FSO Option -True means Overwrite, False means don't overwrite
NextFile:
    Next FileRow
    ReloadFolder 'Reload Current Folder
End With
ResetCalc
End Sub


Sub DeleteSelectedFiles()
Dim DeleteFilename As String
Resp = MsgBox("Are you sure you want to delete the selected files?", vbYesNo, "Delete Files")
If Resp = vbNo Then Exit Sub
With Sheet1
        LastRow = .Range("S9999").End(xlUp).Row
        If LastRow < 8 Then Exit Sub
        .Range("BA3:BH99,CA3:CH999").ClearContents 'Clear any remaining Criteria Or Results
        .Range("BA3").Value = Sheet2.Range("CheckIcon").Value
        .Range("Q7:X" & LastRow).AdvancedFilter xlFilterCopy, CriteriaRange:=.Range("BA2:BH3"), CopyToRange:=.Range("CA2:CH2"), Unique:=True
        LastFiltRow = .Range("CH99999").End(xlUp).Row
        If LastFiltRow < 3 Then
            MsgBox "Please select files to delete first"
            Exit Sub
        End If
        StopCalc
        For FileRow = 3 To LastFiltRow
            DeleteFilename = .Range("CH" & FileRow).Value 'Determine Source Filename
            'On Error Resume Next
            Kill (DeleteFilename)
            'On Error GoTo 0
NextFile:
        Next FileRow
End With
ReloadFolder
ResetCalc
End Sub


Sub ReloadFolder()
Dim ObjFile, ObjFSO, ObjFolder As Object
Set ObjFSO = VBA.CreateObject("Scripting.FileSystemObject")

With Sheet1
 .Range("Q8:Q9999,S8:X9999").ClearContents 'Clear Existing Folder to reload
FileRow = 8
      Set ObjFolder = ObjFSO.GetFolder(.Range("B5").Value)
    For Each ObjFile In ObjFolder.Files
        .Range("Q" & FileRow).Value = Sheet2.Range("UncheckIcon").Value
        .Range("S" & FileRow).Value = ObjFile.Name
        .Range("T" & FileRow).Value = ObjFile.Type
        .Range("U" & FileRow).Value = ObjFile.Size
        .Range("V" & FileRow).Value = ObjFile.DateCreated
        .Range("W" & FileRow).Value = ObjFile.DateLastModified
        .Range("X" & FileRow).Value = ObjFile.Path
        FileRow = FileRow + 1
     Next ObjFile
    .Range("A1").Select
    .Range("B2").Value = False 'Set Load Files To False
    ActiveWindow.ScrollRow = 8
End With
End Sub
Attribute VB_Name = "FolderMacros"

Option Explicit
Dim SubfolderQty, RowNum, ItemNum, LastRow, ColNum, NextRow, FileRow, ActRow  As Long
Dim ObjFSO, ObjFolder, ObjSubFolder, ObjFile As Object
Dim Rng, FoundLast As Range
Sub GoToHomeFolder()
 Sheet1.Range("B3").Value = Sheet1.Range("B5").Value 'Set Previous Folder
Sheet1.Range("B5").Value = Sheet1.Range("B6").Value  'Set Home Folder as Current folder
OpenFolder
End Sub
Sub GoToParentFolder()
 Set ObjFSO = CreateObject("Scripting.FileSystemObject")
 Set ObjFolder = ObjFSO.GetFolder(Sheet1.Range("B5").Value)
 Sheet1.Range("B3").Value = Sheet1.Range("B5").Value 'Set Previous Folder
 On Error GoTo DriveLoc
 Sheet1.Range("B5").Value = ObjFolder.ParentFolder.Path
 OpenFolder
 Exit Sub
DriveLoc:
 MsgBox "You are at the first folder level)"
End Sub
Sub GoToPrevFolder()
If Sheet1.Range("B3").Value = Empty Then
    MsgBox "You are at the last record" 'Future Versions of this applicaiton save a history of these folders
    Exit Sub
End If
Sheet1.Range("B5").Value = Sheet1.Range("B3").Value  'Set  Current folder
 Sheet1.Range("B4").Value = Sheet1.Range("B3").Value 'Set Next Folder
OpenFolder
End Sub
Sub GoToNextFolder()
Sheet1.Range("B5").Value = Sheet1.Range("B3").Value  'Set  Current folder
 Sheet1.Range("B4").Value = Sheet1.Range("B3").Value 'Set Next Folder
 Sheet1.Range("B3").Value = Sheet1.Range("B5").Value 'Set Previous Folder
OpenFolder
End Sub

Sub OpenFolder()
    StopCalc
    Set ObjFSO = CreateObject("Scripting.FileSystemObject")
    With Sheet1
    Set ObjFolder = ObjFSO.GetFolder(.Range("B5").Value)
    Set ObjSubFolder = ObjFolder.SubFolders
    On Error Resume Next
    SubfolderQty = ObjSubFolder.Count
    RowNum = 8
    .Range("B8:B9999,D8:O9999,Q8:Q9999,S8:X9999").ClearContents
    Sheet1.Range("B3").Value = Sheet1.Range("B5").Value 'Set Previous Folder
    For Each ObjSubFolder In ObjFolder.SubFolders
    .Range("D" & RowNum).Value = Sheet2.Range("CloseFold").Value
    .Range("E" & RowNum).Value = ObjSubFolder.Name
    .Range("B" & RowNum).Value = ObjSubFolder.Path
    RowNum = RowNum + 1
    Next ObjSubFolder
    FileRow = 8
    For Each ObjFile In ObjFolder.Files
        .Range("X" & FileRow).Value = ObjFile.Path
        .Range("Q" & FileRow).Value = Sheet2.Range("UncheckIcon").Value
        .Range("S" & FileRow).Value = ObjFile.Name
        .Range("T" & FileRow).Value = ObjFile.Type
        .Range("U" & FileRow).Value = ObjFile.Size
        .Range("V" & FileRow).Value = ObjFile.DateCreated
        .Range("W" & FileRow).Value = ObjFile.DateLastModified
        FileRow = FileRow + 1
     Next ObjFile
     .Range("H5").Value = Replace(.Range("B5").Value, "\", " > ") 'FilePath
ActiveWindow.ScrollRow = 8
.Range("B2").Value = False 'Set Load Files To False
End With
     ResetCalc
End Sub


Sub ExpandFolder()
    Set ObjFSO = CreateObject("Scripting.FileSystemObject")
    StopCalc
    With Sheet1
    Set Rng = .Range("D8:O1000")
    Set FoundLast = Rng.Find(What:="*", After:=Rng.Cells(1), Lookat:=xlPart, LookIn:=xlFormulas, SearchOrder:=xlByRows, SearchDirection:=xlPrevious, MatchCase:=False)
    .Range("B2").Value = True 'Set Load Files True
    .Range("Q8:Q9999,S8:X9999").ClearContents 'Clear Files
    ActiveCell.Value = Sheet2.Range("OpenFold").Value
    RowNum = ActiveCell.Row
    ActRow = ActiveCell.Row
    ColNum = ActiveCell.Column + 1
    LastRow = FoundLast.Row
    Sheet1.Range("B3").Value = .Range("B5").Value 'Set Previous Folder
    .Range("B5").Value = .Range("B" & ActiveCell.Row).Value
    Set ObjFolder = ObjFSO.GetFolder(.Range("B5").Value)
    
    Set ObjSubFolder = ObjFolder.SubFolders
    On Error Resume Next
    SubfolderQty = ObjSubFolder.Count
    If Err.Number <> 0 Then
     'On Error GoTo SkipFolder

       For Each ObjSubFolder In ObjFolder.SubFolders
        SubfolderQty = SubfolderQty + 1
        Next ObjSubFolder
    End If
    'On Error GoTo 0
    If SubfolderQty < 1 Then GoTo SkipExpand
    .Range("D" & RowNum + 1 & ":O" & LastRow).Copy
    .Range("D" & RowNum + 1 + SubfolderQty & ":O" & LastRow + SubfolderQty).PasteSpecial xlPasteValues
    .Range("B" & RowNum + 1 & ":B" & LastRow).Copy
    .Range("B" & RowNum + 1 + SubfolderQty & ":B" & LastRow + SubfolderQty).PasteSpecial xlPasteValues
    Application.CutCopyMode = False
    Cells(RowNum, ColNum).Select
    .Range("D" & RowNum + 1 & ":O" & RowNum + SubfolderQty).ClearContents

    For Each ObjSubFolder In ObjFolder.SubFolders
            .Cells(RowNum + 1, ColNum).Value = Sheet2.Range("CloseFold").Value
            .Cells(RowNum + 1, ColNum + 1).Value = ObjSubFolder.Name
            .Range("B" & RowNum + 1).Value = ObjSubFolder.Path
            RowNum = RowNum + 1
    Next ObjSubFolder
    
SkipExpand:
FileRow = 8
      Set ObjFolder = ObjFSO.GetFolder(.Range("B" & ActRow).Value)
    For Each ObjFile In ObjFolder.Files
        .Range("Q" & FileRow).Value = Sheet2.Range("UncheckIcon").Value
        .Range("S" & FileRow).Value = ObjFile.Name
        .Range("T" & FileRow).Value = ObjFile.Type
        .Range("U" & FileRow).Value = ObjFile.Size
        .Range("V" & FileRow).Value = ObjFile.DateCreated
        .Range("W" & FileRow).Value = ObjFile.DateLastModified
        .Range("X" & FileRow).Value = ObjFile.Path
        FileRow = FileRow + 1
     Next ObjFile
     .Range("B5").Value = .Range("B" & ActRow).Value 'Set Current Folder
    .Range("H5").Value = Replace(.Range("B5").Value, "\", " > ") 'FilePath
    .Range("A1").Select
    .Range("B2").Value = False 'Set Load Files To False
    ActiveWindow.ScrollRow = 8
End With
ResetCalc
End
End Sub


Sub CloseFolder()
 Set ObjFSO = CreateObject("Scripting.FileSystemObject")
StopCalc
With Sheet1
    Set Rng = Sheet1.Range("D8:O1000")
    Set FoundLast = Rng.Find(What:="*", After:=Rng.Cells(1), Lookat:=xlPart, LookIn:=xlFormulas, SearchOrder:=xlByRows, SearchDirection:=xlPrevious, MatchCase:=False)
    LastRow = FoundLast.Row
    .Range("B2").Value = True 'Set Load Files True
    ActiveCell.Value = Sheet2.Range("CloseFold").Value
    RowNum = ActiveCell.Row
    ColNum = ActiveCell.Column
    If ActiveCell.Offset(1, 0).Value <> Empty Then GoTo SkipCopyPaste
    NextRow = ActiveCell.Offset(0, 0).End(xlDown).Row - 1
    If NextRow > 9999 Then 'Closing Last Folder
     .Range("B" & RowNum + 1 & ":B" & LastRow).ClearContents
      .Range("D" & RowNum + 1 & ":O" & LastRow).ClearContents
     GoTo SkipCopyPaste
    End If
    .Range("D" & NextRow + 1 & ":O" & LastRow).Copy
    .Range("D" & RowNum + 1).PasteSpecial xlPasteValues
    .Range("B" & NextRow + 1 & ":B" & LastRow).Copy
    .Range("B" & RowNum + 1).PasteSpecial xlPasteValues
    .Range("D" & LastRow - NextRow + RowNum + 1 & ":O" & LastRow).ClearContents
    .Range("B" & LastRow - NextRow + RowNum + 1 & ":B" & LastRow).ClearContents
SkipCopyPaste:
FileRow = 8
 .Range("Q8:Q9999,S8:X9999").ClearContents 'Clear Existing Folder to reload
      Set ObjFolder = ObjFSO.GetFolder(.Range("B" & RowNum).Value)
      On Error Resume Next
    For Each ObjFile In ObjFolder.Files
        .Range("Q" & FileRow).Value = Sheet2.Range("UncheckIcon").Value
        .Range("S" & FileRow).Value = ObjFile.Name
        .Range("T" & FileRow).Value = ObjFile.Type
        .Range("U" & FileRow).Value = ObjFile.Size
        .Range("V" & FileRow).Value = ObjFile.DateCreated
        .Range("W" & FileRow).Value = ObjFile.DateLastModified
        .Range("X" & FileRow).Value = ObjFile.Path
        FileRow = FileRow + 1
     Next ObjFile
    .Range("H5").Value = Replace(.Range("B5").Value, "\", " > ") 'FilePath
    .Range("A1").Select
    .Range("B5").Value = .Range("B" & RowNum).Value 'Set Current Folder
    ActiveWindow.ScrollRow = 8
 ResetCalc
 .Range("B2").Value = False 'Set Load Files To False
 .Range("A1").Select
End
End With
ResetCalc
End Sub


Sub SetAsDefaultFolder()
Sheet1.Range("B6").Value = Sheet1.Range("B5").Value 'Set Default Folder
FoldDefaultMess
End Sub

Attribute VB_Name = "Sheet1"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Option Explicit



Private Sub Worksheet_SelectionChange(ByVal Target As Range)
If Target.Count > 1 Then Exit Sub
If Not Intersect(Target, Range("D8:O1000")) Is Nothing And Range("B2").Value = False Then 'On Folder Selection
    If Target.Value = Sheet2.Range("CloseFold").Value Then ExpandFolder
    If Target.Value = Sheet2.Range("OpenFold").Value Then CloseFolder
End If

If Not Intersect(Target, Range("Q8:Q1000")) Is Nothing And Target.Value <> Empty Then
If Target.Value = Sheet2.Range("UncheckIcon").Value Then Target.Value = Sheet2.Range("CheckIcon").Value Else: Target.Value = Sheet2.Range("UncheckIcon").Value
Range("A1").Select 'Unselect the current cell
End If

If Not Intersect(Target, Range("R8:W1000")) Is Nothing And Target.Value <> Empty Then
Range("Q8:Q" & Range("Q9999").End(xlUp).Row).Value = Sheet2.Range("UncheckIcon").Value
Range("B1").Value = Target.Row
Range("Q" & Target.Row).Value = Sheet2.Range("CheckIcon")
End If
End Sub
Attribute VB_Name = "Sheet2"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Option Explicit

Attribute VB_Name = "Sheet3"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Option Explicit

Attribute VB_Name = "ThisWorkbook"
Attribute VB_Base = "0{00020819-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Option Explicit



INQUEST-PP=macro
