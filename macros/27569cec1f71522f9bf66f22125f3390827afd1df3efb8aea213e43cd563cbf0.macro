Attribute VB_Name = "List1"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Control = "CommandButton1, 334, 0, MSForms, CommandButton"
Attribute VB_Control = "CommandButton2, 361, 1, MSForms, CommandButton"
Attribute VB_Control = "CommandButton3, 367, 2, MSForms, CommandButton"
Attribute VB_Control = "CommandButton4, 368, 3, MSForms, CommandButton"
Attribute VB_Control = "CommandButton5, 9, 4, MSForms, CommandButton"
Attribute VB_Control = "CommandButton6, 1185, 5, MSForms, CommandButton"
Attribute VB_Control = "Label61, 1186, 6, MSForms, Label"
Attribute VB_Control = "TextBox62, 1187, 7, MSForms, TextBox"
Attribute VB_Control = "Label62, 1188, 8, MSForms, Label"
Attribute VB_Control = "TextBox63, 1190, 9, MSForms, TextBox"
Attribute VB_Control = "Label63, 1191, 10, MSForms, Label"
Attribute VB_Control = "CommandButton41, 1192, 11, MSForms, CommandButton"
Attribute VB_Control = "TextBox61, 1193, 12, MSForms, TextBox"
Option Explicit

Private Sub CommandButton1_Click()
    Call ExportSouboru
End Sub

Private Sub CommandButton2_Click()
    Call VymazaniCeleObjednavky
End Sub

Private Sub CommandButton3_Click()
    Call VymazaniJednohoRadku
End Sub

Private Sub CommandButton4_Click()
    Call StejnaNovaPolozka
End Sub

Private Sub CommandButton41_Click()
    Call PrazdnaNovaPolozka
End Sub

Private Sub CommandButton5_Click()
    Call ZkontrolujeData
End Sub

Private Sub CommandButton6_Click()
    DPH = Me.TextBox61
    Rab = Me.TextBox62
    Mon = Me.TextBox63
    Call ExportNabidky
End Sub

Private Sub Worksheet_Change(ByVal Target As Range)
    On Error Resume Next
    If Target.Column = 4 And Target.Row > c_RadZacatek Then
        Application.EnableEvents = False
        ZmenaTypuKont Target
        Application.EnableEvents = True
    ElseIf Target.Column = 5 And Target.Row > c_RadZacatek Then
        Application.EnableEvents = False
        ZmenaBarvyKont Target
        Application.EnableEvents = True
    ElseIf Target.Column = 6 And Target.Row > c_RadZacatek Then
        Application.EnableEvents = False
        ZmenaSirkyKont Target
        Application.EnableEvents = True
    ElseIf Target.Column = 7 And Target.Row > c_RadZacatek Then
        Application.EnableEvents = False
        ZmenaDelkyKont Target
        Application.EnableEvents = True
    ElseIf Target.Column = 10 And Target.Row > c_RadZacatek Then
        Application.EnableEvents = False
        ZmenaKrytkyKont Target
        Application.EnableEvents = True
    End If
End Sub

Private Sub Worksheet_SelectionChange(ByVal Target As Range)
    If Target.Row > c_RadZacatek Then
        NastaviFirmu Target
        NastaviVzorce Target
        If Target.Column = 4 Then
            NastaviTypOvereni Target
        ElseIf Target.Column = 5 Then
            NastaviBarOvereni Target
        ElseIf Target.Column = 6 Then
            NastaviSirOvereni Target
        ElseIf Target.Column = 7 Then
            NastaviDelOvereni Target
        ElseIf Target.Column = 10 Then
            NastaviKryOvereni Target
        End If
    End If
End Sub
Attribute VB_Name = "List11"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Option Explicit

Private Sub Worksheet_BeforeDoubleClick(ByVal Target As Range, Cancel As Boolean)
    If Target.Address = "$G$1" Then
        Call ZmeniVsechnyNazvyPoli(Target)
    End If
End Sub

Attribute VB_Name = "List12"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Option Explicit

Attribute VB_Name = "List2"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Option Explicit

Attribute VB_Name = "List3"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "List4"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Option Explicit

Attribute VB_Name = "List5"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Option Explicit

Attribute VB_Name = "List6"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Option Explicit

Attribute VB_Name = "List7"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Option Explicit

Attribute VB_Name = "List8"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Option Explicit

Attribute VB_Name = "List9"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Option Explicit

Attribute VB_Name = "Nastaveni"
Option Explicit
'-----------------------------------------------------------------------------------------------------------
'Verze 14.00 27.04.2012
'Ponech|fffd|n|fffd| ceny
'Dopln|fffd|n|fffd| o nab|fffd|dky oprava hled|fffd|n|fffd| v se|fffd|itu wbk
'-----------------------------------------------------------------------------------------------------------
Type t_List
    ListN As String
    Rad As Long
    Slo As Long
End Type
'***********************************************************************************************************
'Konstanty pro parametry programu
'***********************************************************************************************************
Public Const c_NazListZakazek As String = "Zak|fffd|zky"     'Jm|fffd|no listu se seznamem objednan|fffd|ho zbo|fffd||fffd|
Public Const c_NaLiSortiment As String = "Sortiment"    'Jm|fffd|no listu se seznamem sortimentu
Public Const c_RadZacatek As Long = 8                   '|fffd||fffd|dek um|fffd|sten|fffd| hlavi|fffd|ky seznamu objednan|fffd|ho zbo|fffd||fffd|

Public DPH As String                                    'DPH
Public Rab As String                                    'Rabat
Public Mon As String                                    'Mont|fffd|
Public DPHC As Double                                   'DPH
Public RabC As Double                                   'Rabat
Public MonC As Double                                   'Mont|fffd|

Const c_KeKrytkam As String = ""                 'Text do pozn|fffd|mky ke krytkam
Const c_FirmaAdr As String = "C6"                       'Um|fffd|st|fffd|n|fffd| polo|fffd|ky jm|fffd|no firmy
Const c_DatumAdr As String = "C7"                       'Um|fffd|sten|fffd| polo|fffd|ky datum objedn|fffd|vky
Const c_SloFirma As Long = 2                            '|fffd||fffd|slo sloupce kde je ulo|fffd|ena firma
Const c_SloZakazka As Long = 3                          '|fffd||fffd|slo sloupce kde je ulo|fffd|ena zak|fffd|zka
Const c_SloTyp As Long = 4                              '|fffd||fffd|slo sloupce kde je ulo|fffd|en typ parapetu
Const c_SloBarva As Long = 5                            '|fffd||fffd|slo sloupce kde je ulo|fffd|ena barva parapetu
Const c_SloSirka As Long = 6                            '|fffd||fffd|slo sloupce kde je ulo|fffd|ena |fffd||fffd||fffd|ka parapetu
Const c_SloDelka As Long = 7                            '|fffd||fffd|slo sloupce kde je ulo|fffd|ena delka parapetu
Const c_SloKsPar As Long = 8                            '|fffd||fffd|slo sloupce kde je ulo|fffd|ena kusy parapetu
Const c_SloCenPar As Long = 9                           '|fffd||fffd|slo sloupce kde je ulo|fffd|ena cena jednoho metru parapetu
Const c_SloKrytka As Long = 10                          '|fffd||fffd|slo sloupce kde je ulo|fffd|en typ krytky
Const c_SloKsKry As Long = 11                           '|fffd||fffd|slo sloupce kde je ulo|fffd|ena kusy krytky
Const c_SloCenKry As Long = 12                          '|fffd||fffd|slo sloupce kde je ulo|fffd|ena cena jedn|fffd| krytky
Const c_SloCena As Long = 13                            '|fffd||fffd|slo sloupce kde je ulo|fffd|ena cena |fffd||fffd|dku
Const c_SloPoznamka As Long = 14                        '|fffd||fffd|slo sloupce kde je ulo|fffd|ena pozn|fffd|mka
Const c_SloChyb As Long = 15                            '|fffd||fffd|slo sloupce kde je kontrola chyb
'***********************************************************************************************************
Const n_Typ As String = "Typy"                          'Jm|fffd|no oblasti pro typy sortimentu
Const n_MaxDel As String = "MDel"                       'Jm|fffd|no oblasti pro maximaln|fffd| d|fffd|lky
Const n_MaxSir As String = "MSir"                       'Jm|fffd|no oblasti pro maximaln|fffd| |fffd||fffd|rky dle typ|fffd|
Const n_Barvy As String = "Bar"                         'Jm|fffd|na oblasti pro barvy typ|fffd| dle typ|fffd|
Const n_Sirky As String = "Sir"                         'Jm|fffd|na oblasti pro |fffd||fffd|rky typ|fffd| dle typ|fffd|
Const n_Ceny As String = "Cen"                          'Jm|fffd|na oblasti pro ceny typ|fffd| dle typ|fffd|
Const n_KryMaxSir As String = "KrMSi"                   'Jm|fffd|no oblasti krytek pro max|fffd||fffd||fffd|ky dle typ|fffd|
Const n_Krytky As String = "KrBar"                      'Jm|fffd|no oblasti krytek pro barvy dle typ|fffd|
Const n_KryCeny As String = "KrCen"                     'Jm|fffd|no oblasti krytek pro ceny dle typ|fffd|
'***********************************************************************************************************
Const o_Typ As String = "T"                             'Odd|fffd|lova|fffd| n|fffd|zvu pol|fffd| pro typy
Const o_Bar As String = "B"                             'Odd|fffd|lova|fffd| n|fffd|zvu pol|fffd| pro barvy
Const o_Sir As String = "S"                             'Odd|fffd|lova|fffd| n|fffd|zvu pol|fffd| pro sirky
'***********************************************************************************************************
Const a_TypPar As String = "B4"                         'Za|fffd||fffd|tek tabulky pro typy sortimentu
Const a_MaxDel As String = "C4"                         'Za|fffd||fffd|tek tabulky pro maximaln|fffd| d|fffd|lky
'***********************************************************************************************************
'|fffd||fffd|el: Export do souboru bez cen
'Parametry: Vyvol|fffd| se stiskem tla|fffd||fffd|tka na zad|fffd|vac|fffd|m formul|fffd||fffd|i (vol|fffd| list zak|fffd|zky)
'Popis: Exortuje do souboru s jedn|fffd|m listem bez cen
'Return:
'Vol|fffd|n|fffd|:
'Datum: 3.11.2010
'***********************************************************************************************************
Sub ExportSouboru()
Dim wbkZdr As Workbook
Dim wbkCil As Workbook
Dim shtZdr As Worksheet
Dim shtCil As Worksheet
Dim sht As Worksheet
Dim i As Long
Dim RadKon As Long
Dim pomStr As String
    'Ulo|fffd||fffd| zdroj-------------------------------------------------------------------------
    Set wbkZdr = ActiveWorkbook
    Set shtZdr = ActiveSheet
    'Vytvo|fffd||fffd| c|fffd|l-------------------------------------------------------------------------
    Set wbkCil = Workbooks.Add(xlWBATWorksheet)
    Set shtCil = ActiveSheet
    For Each sht In wbkCil.Worksheets
        If sht.Name <> shtCil.Name Then
            Application.DisplayAlerts = False
            sht.Delete
            Application.DisplayAlerts = True
        End If
    Next sht
    'Kop|fffd|ruje hlavi|fffd|ky-------------------------------------------------------------------
    'shtZdr.Rows("1:8").Copy shtCil.Rows("1:8")
    'Application.CutCopyMode = False
    shtZdr.Rows("1:1").Copy shtCil.Rows("1:1")
    shtZdr.Rows("5:8").Copy shtCil.Rows("5:8")
    Application.CutCopyMode = False
    shtZdr.Rows("2:4").Copy
    shtCil.Rows("2:4").PasteSpecial Paste:=xlPasteFormats, Operation:=xlNone, SkipBlanks:=False, Transpose:=False
    Application.CutCopyMode = False
    shtCil.Range("B9").Activate
    shtCil.Range("B2") = shtZdr.Range("B2")
    shtCil.Range("B3") = shtZdr.Range("B3")
    shtCil.Range("B4") = shtZdr.Range("B4")
    shtCil.Range("C2") = shtZdr.Range("C2")
    shtCil.Range("C3") = shtZdr.Range("C3")
    shtCil.Range("C4") = shtZdr.Range("C4")
    shtCil.Range("F2") = shtZdr.Range("F2")
    shtCil.Range("F3") = shtZdr.Range("F3")
    shtCil.Range("F4") = shtZdr.Range("F4")
    shtCil.Range("H2") = shtZdr.Range("H2")
    shtCil.Range("H3") = shtZdr.Range("H3")
    shtCil.Range("H4") = shtZdr.Range("H4")
    'Uprav|fffd| |fffd||fffd||fffd|ky------------------------------------------------------------------------
    Application.ScreenUpdating = False
    For i = 1 To 16
        shtCil.Columns(i).ColumnWidth = shtZdr.Columns(i).ColumnWidth
    Next i
    shtCil.Columns(9).ColumnWidth = shtZdr.Columns(14).ColumnWidth
    shtCil.Columns(10).ColumnWidth = shtZdr.Columns(15).ColumnWidth
    'Vyma|fffd|e mepot|fffd|ebn|fffd|-------------------------------------------------------------------
    'shtCil.Range("F6:H7").ClearContents
    shtZdr.Range("F6:H7").Copy
    shtCil.Range("F6:H7").PasteSpecial Paste:=xlPasteValues, Operation:=xlNone, SkipBlanks:=False, Transpose:=False
    Application.CutCopyMode = False
    '------------------------------------------------------------------------------------
    shtCil.Range("I6:M8").Delete Shift:=xlToLeft
    shtCil.Range("K1:O5").Delete Shift:=xlToLeft
    shtCil.Columns("K:O").Delete Shift:=xlToLeft
    RadKon = Range(AdrPoslNeprazdne(shtZdr.Range("B1"))).Row
    Application.ScreenUpdating = False
    'P|fffd|enese udaje-----------------------------------------------------------------------
    For i = 9 To RadKon
        shtZdr.Cells(i, 2).Resize(1, 7).Copy
        shtCil.Cells(i, 2).PasteSpecial Paste:=xlPasteValues, Operation:=xlNone, SkipBlanks _
                :=False, Transpose:=False
        Application.CutCopyMode = False
        shtZdr.Cells(i, 14).Resize(1, 2).Copy
        shtCil.Cells(i, 9).PasteSpecial Paste:=xlPasteValues, Operation:=xlNone, SkipBlanks _
                :=False, Transpose:=False
        Application.CutCopyMode = False
        If Val(shtZdr.Cells(i, 11)) > 0 Then
            pomStr = "[" & c_KeKrytkam & shtZdr.Cells(i, 10) & " " & shtZdr.Cells(i, 11) & " ks]"
        Else
            pomStr = ""
        End If
        If IsEmpty(shtCil.Cells(i, 9)) Then
            shtCil.Cells(i, 9) = shtCil.Cells(i, 9) & pomStr
        Else
            shtCil.Cells(i, 9) = shtCil.Cells(i, 9) & vbCrLf & pomStr
        End If
    Next i
    'Uprav|fffd| form|fffd|ty----------------------------------------------------------------------
    Application.ScreenUpdating = False
    If RadKon <= 9 Then RadKon = 10
    With shtCil.Cells(9, 2).Resize(RadKon - 8, 9)
        .Font.Size = 9
        .WrapText = True
        .VerticalAlignment = xlCenter
        .Borders(xlEdgeLeft).LineStyle = xlContinuous
        .Borders(xlEdgeRight).LineStyle = xlContinuous
        .Borders(xlEdgeTop).LineStyle = xlContinuous
        .Borders(xlEdgeBottom).LineStyle = xlContinuous
        .Borders(xlInsideVertical).LineStyle = xlContinuous
        .Borders(xlInsideHorizontal).LineStyle = xlContinuous
    End With
    With ActiveSheet.PageSetup
        .PrintArea = "$B:$J"
        .PrintTitleRows = "$1:$8"
        .LeftFooter = "&D &T"
        .RightFooter = "&P/&N"
        .LeftMargin = Application.InchesToPoints(0.6)
        .RightMargin = Application.InchesToPoints(0.24)
        .TopMargin = Application.InchesToPoints(0.75)
        .BottomMargin = Application.InchesToPoints(0.75)
        .HeaderMargin = Application.InchesToPoints(0.31)
        .FooterMargin = Application.InchesToPoints(0.31)
    End With
    Application.ScreenUpdating = True
End Sub

Sub ExportNabidky()
Dim wbkZdr As Workbook
Dim wbkCil As Workbook
Dim shtZdr As Worksheet
Dim shtCil As Worksheet
Dim sht As Worksheet
Dim i As Long
Dim RadKon As Long
Dim pomStr As String

    'Ulo|fffd||fffd| zdroj-------------------------------------------------------------------------
    Set wbkZdr = ActiveWorkbook
    Set shtZdr = ActiveSheet
    'Vytvo|fffd||fffd| c|fffd|l-------------------------------------------------------------------------
    wbkZdr.Sheets("Nab|fffd|dka").Select
    Sheets("Nab|fffd|dka").Copy
    Set wbkCil = ActiveWorkbook
    Set shtCil = ActiveSheet
    If IsNumeric(DPH) Then DPHC = CDbl(DPH)
    If IsNumeric(Rab) Then RabC = CDbl(Rab)
    If IsNumeric(Mon) Then MonC = CDbl(Mon)
    Mon = Replace(Format$(MonC, "0.000"), ",", ".")
    '------------------------------------------------------------------------------------
    Application.ScreenUpdating = False
    wbkZdr.Activate
    shtZdr.Activate
    RadKon = Range(AdrPoslNeprazdne(shtZdr.Range("B1"))).Row
    'P|fffd|enese udaje-----------------------------------------------------------------------
    With shtCil
        For i = 9 To RadKon
            Dim pom As Double
            Dim pom1
            .Cells(6, 3) = Cells(6, 3)
            .Cells(7, 3) = Cells(7, 3)
            .Cells(6, 5) = Cells(6, 5)
            
            .Cells(i, 2).Value = Cells(i, 2).Value
            .Cells(i, 3).Value = Cells(i, 3).Value
            .Cells(i, 4).Value = Cells(i, 4).Value
            .Cells(i, 5).Value = Cells(i, 5).Value
            .Cells(i, 6).Value = Cells(i, 6).Value
            .Cells(i, 7).Value = Cells(i, 7).Value
            .Cells(i, 8).Value = Cells(i, 8).Value
            If Not IsError(Cells(i, 9).Value) Then
                .Cells(i, 9).Value = Cells(i, 9).Value * (1 + RabC / 100)
            Else
                .Cells(i, 9).Value = 0
            End If
            .Cells(i, 10).Value = Cells(i, 10).Value
            .Cells(i, 11).Value = Cells(i, 11).Value
            .Cells(i, 12).Value = Cells(i, 12).Value * (1 + RabC / 100)
            .Cells(i, 13).FormulaR1C1 = Cells(i, 13).FormulaR1C1
            .Cells(7, 12) = DPHC / 100
            .Cells(7, 15) = MonC
            .Cells(i, 14).FormulaR1C1 = "=RC[-7]*RC[-6]*R7C15/1000"
'            .Cells(i, 14).FormulaR1C1 = "=RC[-7]*RC[-6]*" & Mon & "/1000"
            
            .Cells(i, 15).Value = Cells(i, 14).Value
        Next i
    End With
    'Uprav|fffd| form|fffd|ty----------------------------------------------------------------------
    
    wbkCil.Activate
    Application.ScreenUpdating = True
End Sub
Sub VymazaniCeleObjednavky()
'vymaze v|fffd|echny polozky
Dim RadKonec As Long
    RadKonec = PoslRadZad(1)
    Do
        Range("C" & RadKonec).Activate
        Call VymazaniJednohoRadku
        RadKonec = RadKonec - 1
    Loop Until RadKonec < 9

End Sub
Sub VymazaniJednohoRadku()
'vymaze polozku na kter|fffd| stoj|fffd| kurzor
Dim Rad As Long
    Rad = ActiveCell.Row
    If Rad < 9 Then
        MsgBox "|fffd||fffd|dek neze vymazat", vbCritical
    ElseIf Rad > PoslRadZad(1) Then
        MsgBox "|fffd||fffd|dek neze vymazat", vbCritical
    Else
        Rows(Rad).Delete Shift:=xlUp
    End If
End Sub
Sub StejnaNovaPolozka()
'Vytvo|fffd||fffd| novou polozku stejnou jako ta na kter|fffd| stoj|fffd| kurzor
Dim RadKonec As Long
    If Not TestZac Then Exit Sub
    Call NovaStejna
    RadKonec = PoslRadZad(1)
    Range("G" & RadKonec).Select
End Sub
Sub PrazdnaNovaPolozka()
'Vytvo|fffd||fffd| novou polozku pr|fffd|zdnou jako ta na kter|fffd| stoj|fffd| kurzor
Dim RadKonec As Long
    If Not TestZac Then Exit Sub
    Call NovaStejna
    RadKonec = PoslRadZad(1)
    Range("C" & RadKonec & ":O" & RadKonec).ClearContents
    FormatujRadek RadKonec
    Range("C" & RadKonec).Select
End Sub
'***********************************************************************************************************
'|fffd||fffd|el: Kontrola vypln|fffd|n|fffd|ch dat na spr|fffd|vnost |fffd|daj|fffd|
'Parametry: Vyvol|fffd| se stiskem tla|fffd||fffd|tka na zad|fffd|vac|fffd|m formul|fffd||fffd|i (vol|fffd| list zak|fffd|zky)
'Popis: P|fffd|i chyb|fffd| i bezchybnosti vyp|fffd|e zpr|fffd|vu o proveden|fffd|kontrole
'Return:
'Vol|fffd|n|fffd|: KontrolaDat
'Datum: 3.11.2010
'***********************************************************************************************************
Sub ZkontrolujeData()
    If Not KontrolaDat Then
        MsgBox "Kontrola vykazuje chyby, nutno opravit!"
    Else
        MsgBox "Kontrola je OK!"
    End If
End Sub
'***********************************************************************************************************
'|fffd||fffd|el: Vlastn|fffd| kontrola vypln|fffd|n|fffd|ch dat na spr|fffd|vnost |fffd|daj|fffd|
'Parametry: Vol|fffd| se p|fffd|i  stisku tla|fffd||fffd|tka z procedury - ZkontrolujeData
'Popis: Kontroluje jednotliv|fffd| |fffd||fffd|dky na spr|fffd|vnost
'Return:P|fffd|i chyb|fffd|=false bezchybnosti=true
'Vol|fffd|n|fffd|: NacteVsechnyNazvyPoli + kontroly jednotliv|fffd| + ChybaZapsat
'Datum: 3.11.2010
'***********************************************************************************************************
Private Function KontrolaDat() As Boolean
Dim RadKonec As Long
Dim RadZacatek As Long
Dim i As Long
'------------------------------------------------------------
Dim Firma
Dim Zakazka
Dim Typ As String
Dim Barva As String
Dim Sirka As Variant
Dim Delka As Long
Dim KsPar As Long
Dim CenPar As Double
Dim Krytka As String
Dim KsKry As Long
Dim CenKry As Double
Dim Cena As Double
Dim Poznamka As String
Dim Chyb As String
'------------------------------------------------------------
    If Not TestZac Then Exit Function       'Test na z|fffd|kladn|fffd| udaje FIRMA DATUM
    KontrolaDat = True
    RadZacatek = c_RadZacatek + 1
    RadKonec = PoslRadZad(0)
    Call MazeChyby                          'Maze chyby
    'Call NacteVsechnyNazvyPoli              'Na|fffd|te nov|fffd| parametry ze sortimentu
    
    For i = RadZacatek To RadKonec
        'Nastav|fffd| se na ka|fffd|d|fffd| |fffd||fffd|dek aby se obnovili vzorce-------------------------------------
        Cells(i, c_SloChyb).Select
        '-------------------------------------------------
        Firma = Cells(i, c_SloFirma)
        Zakazka = Cells(i, c_SloZakazka)
        Typ = CStr(Cells(i, c_SloTyp))
            Barva = CStr(Cells(i, c_SloBarva))
            Sirka = Cells(i, c_SloSirka)
            Delka = Val(Cells(i, c_SloDelka))
        KsPar = Val(Cells(i, c_SloKsPar))
        CenPar = CDbl(Cells(i, c_SloCenPar))
            Krytka = CStr(Cells(i, c_SloKrytka))
        KsKry = Val(Cells(i, c_SloKsKry))
        CenKry = CDbl(Cells(i, c_SloCenKry))
        Cena = CDbl(Cells(i, c_SloCena))
        Poznamka = CStr(Cells(i, c_SloPoznamka))
        Chyb = CStr(Cells(i, c_SloChyb))
        'Nastav|fffd| format podle prvn|fffd|ho |fffd||fffd|dku---------------------------------------------------
        If i = RadZacatek Then
            Call FormatujRadek(i)
        End If
        Cells(RadZacatek, 1).Resize(, c_SloChyb).Copy
        Cells(i, 1).PasteSpecial Paste:=xlPasteFormats, Operation:=xlNone, SkipBlanks:=False, Transpose:=False
        Application.CutCopyMode = False
        'Firma-------------------------------------------------------
        If IsEmpty(Firma) Then Call ChybaZapsat(i, "Firma"): KontrolaDat = False
        'Zak|fffd|zka-----------------------------------------------------
        If IsEmpty(Zakazka) Then Call ChybaZapsat(i, "Zak|fffd|zka"): KontrolaDat = False
        'Typ---------------------------------------------------------
        If Not KontrolaTypu(Typ, ActiveWorkbook) Then Call ChybaZapsat(i, "Typ"): KontrolaDat = False
        'Barva-------------------------------------------------------
        If Not KontrolaBarvy(Typ, Barva, ActiveWorkbook) Then Call ChybaZapsat(i, "Barva"): KontrolaDat = False
        '|fffd||fffd||fffd|ka-------------------------------------------------------
        If Not KontrolaSirky(Typ, Barva, Sirka, ActiveWorkbook) Then Call ChybaZapsat(i, "|fffd||fffd||fffd|ka"): KontrolaDat = False
        'D|fffd|lka-------------------------------------------------------
        If Not KontrolaDelky(Typ, Delka, ActiveWorkbook) Then Call ChybaZapsat(i, "D|fffd|lka"): KontrolaDat = False
        'Kusy parapetu-----------------------------------------------
        If KsPar <= 0 Then Call ChybaZapsat(i, "Kusy par"): KontrolaDat = False
        'Ceny parapetu-----------------------------------------------
        If CenPar < 0 Then Call ChybaZapsat(i, "Cena parpetu"): KontrolaDat = False
        'Krytka------------------------------------------------------
        If Not KontrolaKrytky(Typ, Krytka, ActiveWorkbook) Then Call ChybaZapsat(i, "Krytka"): KontrolaDat = False
        'Kusy krytky-------------------------------------------------
        If KsKry < 0 Then Call ChybaZapsat(i, "Kusy krytky"): KontrolaDat = False
        'Ceny krytky-------------------------------------------------
        If CenKry < 0 Then Call ChybaZapsat(i, "Cena krytky"): KontrolaDat = False
        'Cena |fffd||fffd|dku--------------------------------------------------
        'Pozn|fffd|mka----------------------------------------------------
        'Chyby-------------------------------------------------------
        'Nastav|fffd| se na ka|fffd|d|fffd| |fffd||fffd|dek aby se obnovili vzorce-------------------------------------
''        Cells(i, c_SloChyb).Select
    Next i
    Cells(c_RadZacatek, c_SloZakazka).Activate
End Function
Sub ZmeniVsechnyNazvyPoli(Appi As Range)
Dim sht As Worksheet
Dim Zamceno As Boolean
Dim Sloup As Long
    If MsgBox("M|fffd|m zm|fffd|nit v|fffd|echny n|fffd|zvy pol|fffd|", vbQuestion + vbYesNo) = vbYes Then
        '--------------------------------------------------------------------------------
        Zamceno = False
        For Each sht In ThisWorkbook.Worksheets
            If sht.ProtectContents = True Then
                Zamceno = True
                Exit For
            End If
        Next sht
        If Zamceno Then
            MsgBox "Na|fffd|el zam|fffd|en|fffd| list: " & sht.Name & vbCrLf & vbCrLf _
                    & "Nutno nejprve odemknout!", vbCritical
        End If
        '--------------------------------------------------------------------------------
        For Each sht In ThisWorkbook.Worksheets
            sht.Cells.EntireColumn.Hidden = False
        Next sht
        '--------------------------------------------------------------------------------
        NacteVsechnyNazvyPoli
        '--------------------------------------------------------------------------------
        If Appi.Value <> "0" Then
            For Each sht In ThisWorkbook.Worksheets
                If sht.Name = c_NazListZakazek Then
                    Sloup = 17
                    sht.Range(sht.Columns(Sloup), sht.Columns(Sloup).End(xlToRight)).EntireColumn.Hidden = True
                ElseIf sht.Name = c_NaLiSortiment Then
                    Sloup = 7
                    sht.Range(sht.Columns(Sloup), sht.Columns(Sloup).End(xlToRight)).EntireColumn.Hidden = True
                Else
                    Sloup = 12
                    sht.Range(sht.Columns(Sloup), sht.Columns(Sloup).End(xlToRight)).EntireColumn.Hidden = True
                End If
            Next sht
        End If
    End If
End Sub
'***********************************************************************************************************
'|fffd||fffd|el: Nastav|fffd| v|fffd|echny n|fffd|zvy oblast|fffd|
'Parametry: Vol|fffd| se p|fffd|i kontrole (a p|fffd|i otev|fffd|en|fffd| se|fffd|itu)
'Popis: Nastav|fffd| n|fffd|zvy oblast|fffd| pro dal|fffd||fffd| pou|fffd|it|fffd|
'Return:
'Vol|fffd|n|fffd|: NacteNazvyOblasti
'Datum: 3.11.2010
'***********************************************************************************************************
Private Sub NacteVsechnyNazvyPoli()
Dim PoTyp() As t_List
Dim wbk As Workbook
Dim sht As Worksheet
Dim Fisht As Worksheet
Dim ZaRa As Long
Dim KoRa As Long
Dim ZaSl As Long
Dim KoSl As Long
Dim FiRa As Long
Dim FiSl As Long
Dim AkNa As String
Dim CountTyp As Long
Dim i As Long
'--------------------------------------
Dim OdkazStr As String
Dim OdkLis As String
Dim OdkRad As Long
Dim OdkSlo As Long
'--------------------------------------
    Set wbk = ActiveWorkbook
    Set sht = wbk.Sheets(c_NaLiSortiment)
    Set Fisht = wbk.Sheets(c_NaLiSortiment)
    'Sma|fffd|e v|fffd|echny n|fffd|zvy v se|fffd|it|fffd|-----------------------------------------------
    MazeNazvy ActiveWorkbook
    'N|fffd|zvy na hlavn|fffd|m list|fffd|-----------------------------------------------------
    With sht
        'Nastav|fffd| rozsah typ|fffd|----------------------------------------------------
        ZaRa = .Range(a_TypPar).Row + 1
        KoRa = .Range(a_TypPar).End(xlDown).Row
        CountTyp = KoRa - ZaRa + 1
        'Nastav|fffd| jm|fffd|no pro typy-------------------------------------------------
        ZaSl = .Range(a_TypPar).Column
        KoSl = ZaSl
        FiRa = KoRa + 1
        FiSl = ZaSl
        Call PridejNazev(n_Typ, sht, ZaRa, ZaSl, KoRa, KoSl)
        ReDim PoTyp(1 To CountTyp)
        For i = 1 To CountTyp
            OdkazStr = .Cells(ZaRa - 1 + i, ZaSl).FormulaR1C1
            If Not RozeberOdkaz(OdkazStr, OdkLis, OdkRad, OdkSlo) Then
                MsgBox "Chyba definice cen|fffd|ku" & vbCrLf & OdkazStr, vbCritical
                Exit Sub
            End If
            PoTyp(i).ListN = OdkLis
            PoTyp(i).Rad = OdkRad
            PoTyp(i).Slo = OdkSlo
        Next i
        'Nastav|fffd| fiktivn|fffd| jmena-------------------------------------------------
        AkNa = DejJmeObl1(n_MaxSir, 0)
        Call PridejNazev(AkNa, Fisht, FiRa, FiSl, FiRa, FiSl)
        AkNa = DejJmeObl1(n_KryMaxSir, 0)
        Call PridejNazev(AkNa, Fisht, FiRa, FiSl, FiRa, FiSl)
        AkNa = DejJmeObl1(n_Barvy, 0)
        Call PridejNazev(AkNa, Fisht, FiRa, FiSl, FiRa, FiSl)
        AkNa = DejJmeObl1(n_Krytky, 0)
        Call PridejNazev(AkNa, Fisht, FiRa, FiSl, FiRa, FiSl)
        AkNa = DejJmeObl1(n_Sirky, 0)
        Call PridejNazev(AkNa, Fisht, FiRa, FiSl, FiRa, FiSl)
        AkNa = DejJmeObl1(n_Ceny, 0)
        Call PridejNazev(AkNa, Fisht, FiRa, FiSl, FiRa, FiSl)
        AkNa = DejJmeObl1(n_KryCeny, 0)
        Call PridejNazev(AkNa, Fisht, FiRa, FiSl, FiRa, FiSl)
        'Nastav|fffd| jm|fffd|no pro max delky--------------------------------------------
        ZaSl = .Range(a_MaxDel).Column
        KoSl = ZaSl
        Call PridejNazev(n_MaxDel, sht, ZaRa, ZaSl, KoRa, KoSl)
    End With
    'N|fffd|zvy na jednotliv|fffd|ch listech----------------------------------------------
    For i = 1 To CountTyp
        Set sht = wbk.Sheets(PoTyp(i).ListN)
        With sht
            'Nastav|fffd| omezen|fffd| M|fffd||fffd||fffd|ek pro jednotliv|fffd| typy-------------------------
            ZaRa = PoTyp(i).Rad + 2
            ZaSl = PoTyp(i).Slo + 1
            KoRa = ZaRa
            KoSl = .Cells(ZaRa, ZaSl).End(xlToRight).Column
            If Not IsEmpty(.Cells(ZaRa, ZaSl)) Then
                AkNa = DejJmeObl1(n_MaxSir, i)
                Call PridejNazev(AkNa, sht, ZaRa, ZaSl, KoRa, KoSl)
                'Krytky--------------------------------
                If Not IsEmpty(.Cells(ZaRa, KoSl + 2)) Then
                    ZaSl = KoSl + 2
                    KoSl = .Cells(ZaRa, ZaSl).End(xlToRight).Column
                    AkNa = DejJmeObl1(n_KryMaxSir, i)
                    Call PridejNazev(AkNa, sht, ZaRa, ZaSl, KoRa, KoSl)
                Else
                    AkNa = DejJmeObl1(n_KryMaxSir, i)
                    Call PridejNazev(AkNa, Fisht, FiRa, FiSl, FiRa, FiSl)
                End If
                '--------------------------------------
            Else
                AkNa = DejJmeObl1(n_MaxSir, i)
                Call PridejNazev(AkNa, Fisht, FiRa, FiSl, FiRa, FiSl)
            End If
            'Nastav|fffd| jmeno barev pro jednotliv|fffd| typy----------------------------
            ZaRa = PoTyp(i).Rad + 3
            ZaSl = PoTyp(i).Slo + 1
            KoRa = ZaRa
            KoSl = .Cells(ZaRa, ZaSl).End(xlToRight).Column
            If Not IsEmpty(.Cells(ZaRa, ZaSl)) Then
                AkNa = DejJmeObl1(n_Barvy, i)
                Call PridejNazev(AkNa, sht, ZaRa, ZaSl, KoRa, KoSl)
                'Krytky--------------------------------
                If Not IsEmpty(.Cells(ZaRa, KoSl + 2)) Then
                    ZaSl = KoSl + 2
                    KoSl = .Cells(ZaRa, ZaSl).End(xlToRight).Column
                    AkNa = DejJmeObl1(n_Krytky, i)
                    Call PridejNazev(AkNa, sht, ZaRa, ZaSl, KoRa, KoSl)
                Else
                    AkNa = DejJmeObl1(n_Krytky, i)
                    Call PridejNazev(AkNa, Fisht, FiRa, FiSl, FiRa, FiSl)
                End If
                '--------------------------------------
            Else
                AkNa = DejJmeObl1(n_Barvy, i)
                Call PridejNazev(AkNa, Fisht, FiRa, FiSl, FiRa, FiSl)
            End If
            'Nastav|fffd| jm|fffd|no |fffd||fffd||fffd|ek pro jednotliv|fffd| typy----------------------------
            ZaRa = PoTyp(i).Rad + 4
            ZaSl = PoTyp(i).Slo
            KoRa = .Cells(ZaRa, ZaSl).End(xlDown).Row
            KoSl = ZaSl
            If Not IsEmpty(.Cells(ZaRa, ZaSl)) Then
                AkNa = DejJmeObl1(n_Sirky, i)
                Call PridejNazev(AkNa, sht, ZaRa, ZaSl, KoRa, KoSl)
            Else
                AkNa = DejJmeObl1(n_Sirky, i)
                Call PridejNazev(AkNa, Fisht, FiRa, FiSl, FiRa, FiSl)
            End If
            'Nastav|fffd| jm|fffd|no cen parapet|fffd| pro jednotliv|fffd| typy---------------------
            ZaRa = PoTyp(i).Rad + 4
            ZaSl = PoTyp(i).Slo + 1
            KoRa = .Cells(ZaRa, ZaSl).End(xlDown).Row
            KoSl = .Cells(ZaRa, ZaSl).End(xlToRight).Column
            If Not IsEmpty(.Cells(ZaRa, ZaSl)) Then
                AkNa = DejJmeObl1(n_Ceny, i)
                Call PridejNazev(AkNa, sht, ZaRa, ZaSl, KoRa, KoSl)
                'Krytky--------------------------------
                If Not IsEmpty(.Cells(ZaRa, KoSl + 2)) Then
                    ZaSl = KoSl + 2
                    KoRa = .Cells(ZaRa, ZaSl).End(xlDown).Row
                    KoSl = .Cells(ZaRa, ZaSl).End(xlToRight).Column
                    AkNa = DejJmeObl1(n_KryCeny, i)
                    Call PridejNazev(AkNa, sht, ZaRa, ZaSl, KoRa, KoSl)
                Else
                    AkNa = DejJmeObl1(n_KryCeny, i)
                    Call PridejNazev(AkNa, Fisht, FiRa, FiSl, FiRa, FiSl)
                End If
            Else
                AkNa = DejJmeObl1(n_Ceny, i)
                Call PridejNazev(AkNa, Fisht, FiRa, FiSl, FiRa, FiSl)
            End If
        End With
    Next i
End Sub
'***********************************************************************************************************
'|fffd||fffd|el: P|fffd|id|fffd| n|fffd|zev oblasti do se|fffd|itu
'Parametry: Nazev, se|fffd|it, jmeno listu, |fffd||fffd|dek za|fffd||fffd|tku, sloupec za|fffd||fffd|tku, |fffd||fffd|dek konce, sloupec konce
'Popis: Jen obalovac|fffd| funkce
'Return:
'Vol|fffd|n|fffd|:
'Datum: 10.11.2010
'***********************************************************************************************************
Private Sub PridejNazev(Nazev As String, sht As Worksheet, _
                        RadZ As Long, SloZ As Long, RadK As Long, SloK As Long)
Dim LiNa As String
    LiNa = sht.Name
    LiNa = "'" & LiNa & "'"
    sht.Parent.Names.Add Name:=Nazev, RefersToR1C1:="=" & LiNa & "!R" & RadZ & "C" & SloZ & ":R" & RadK & "C" & SloK
End Sub
'***********************************************************************************************************
'|fffd||fffd|el: Rozpozn|fffd| n|fffd|zev listu, radek a sloupec z |fffd|et|fffd|zce odkazu typu R1C1
'Parametry: Strint odkazu
'Popis: Rozebere odkaz na jednotliv|fffd| polo|fffd|ky (list,radek,sloupec)
'Return: list, radek, sloupec
'Vol|fffd|n|fffd|:
'Datum: 22.11.2010
'***********************************************************************************************************
Private Function RozeberOdkaz(ByVal Odkaz As String, NazListu As String, Radek As Long, Sloupec As Long) As Boolean
Dim i As Integer
Dim Length As Integer
Dim RadStr As String
Dim SloStr As String
Dim CastAdr As Boolean
Dim CastSlo As Boolean
Dim Oddel As Boolean
Dim Znak As String
    CastAdr = True
    CastSlo = True
    Oddel = False
    Length = Len(Odkaz)
    NazListu = ""
    RadStr = ""
    SloStr = ""
    For i = Length To 1 Step -1
        Znak = Mid(Odkaz, i, 1)
        If CastAdr Then                     '|fffd|ast adresn|fffd|
            If CastSlo Then                 '|fffd||fffd|st sloupce
                If Znak = "C" Then
                    CastSlo = False
                Else
                    SloStr = Znak & SloStr
                End If
            Else                            '|fffd|ast radku
                If Znak = "R" Then
                    CastAdr = False
                Else
                    RadStr = Znak & RadStr
                End If
            End If
        Else                                'Cast nazvu listu
            If Znak <> "!" And _
                Znak <> "'" And _
                Znak <> "=" _
            Then
                NazListu = Znak & NazListu
            End If
        End If
    Next i
    Radek = Val(RadStr)
    Sloupec = Val(SloStr)
    If Radek = 0 Or Sloupec = 0 Then RozeberOdkaz = False Else RozeberOdkaz = True
End Function
'***********************************************************************************************************
'|fffd||fffd|el: Vytvo|fffd||fffd| n|fffd|zev oblasti s jedn|fffd|m indexem
'Parametry: Zakladn|fffd| n|fffd|zev, index1
'Popis: Jen obalovac|fffd| funkce
'Return: Nazev oblasti
'Vol|fffd|n|fffd|:
'Datum: 24.11.2010
'***********************************************************************************************************
Private Function DejJmeObl1(ZakJmeNazvu As String, TypP As Long) As String
'Vytvo|fffd||fffd| indexovan|fffd| jm|fffd|no
    DejJmeObl1 = o_Typ & Format(TypP, "00") & ZakJmeNazvu
End Function
'***********************************************************************************************************
'|fffd||fffd|el: Vytvo|fffd||fffd| n|fffd|zev oblasti se dv|fffd|ma indexy
'Parametry: Zakladn|fffd| n|fffd|zev, index1, index2
'Popis: Jen obalovac|fffd| funkce
'Return: Nazev oblasti
'Vol|fffd|n|fffd|:
'Datum: 24.11.2010
'***********************************************************************************************************
Private Function DejJmeObl2(ZakJmeNazvu As String, Indx1 As Long, Oddelovac As String, Indx2 As Long) As String
'Vytvo|fffd||fffd| indexovan|fffd| jm|fffd|no
    DejJmeObl2 = o_Typ & Format(Indx1, "00") & Oddelovac & Format(Indx2, "00") & ZakJmeNazvu
End Function
'***********************************************************************************************************
'|fffd||fffd|el: Test na za|fffd||fffd|tek pr|fffd|ce mus|fffd| byt spln|fffd|ny po|fffd|adavky
'Parametry:
'Popis: Mus|fffd| b|fffd|t zad|fffd|n n|fffd|zev firmy pro pou|fffd|it|fffd| v |fffd||fffd|dku a mus|fffd| b|fffd|t stanoven datum objedn|fffd|vky
'Return: true=kontrola je ok
'Datum: 3.11.2010
'***********************************************************************************************************
Private Function TestZac() As Boolean
Dim Firma, Datum
    Firma = Range(c_FirmaAdr)
    Datum = Range(c_DatumAdr)
    If IsEmpty(Firma) Then
        MsgBox "Nejprve mus|fffd| b|fffd|t zad|fffd|n n|fffd|zev va|fffd||fffd| firmy", vbCritical
        Range(c_FirmaAdr).Activate
        Exit Function
    ElseIf IsEmpty(Datum) Then
        MsgBox "Nejprve mus|fffd| b|fffd|t zad|fffd|n datum", vbCritical
        Range(c_DatumAdr).Activate
        Exit Function
    Else
        TestZac = True
    End If
End Function
'***********************************************************************************************************
'|fffd||fffd|el: Vyhled|fffd|n|fffd| posledn|fffd|hozapln|fffd|n|fffd|ho |fffd||fffd|dku
'Parametry: Typ=1 ur|fffd|uje zda se zahrne i sloupec kontroly
'Popis: Nejmen|fffd||fffd| vysledek je radek nadpisu + 1
'Return: Adresa posledn|fffd| bu|fffd|ky, jeli sloupec pr|fffd|zdn|fffd| vr|fffd|t|fffd| adresu testovan|fffd| bu|fffd|ky
'Vol|fffd|n|fffd|: AdrPoslNeprazdne
'Datum: 3.11.2010
'***********************************************************************************************************
Private Function PoslRadZad(Typ As Long) As Long
Dim RadKon As Long
Dim RadKon1 As Long
    RadKon1 = Range(AdrPoslNeprazdne(Cells(1, c_SloFirma))).Row
    If RadKon < RadKon1 Then RadKon = RadKon1
    RadKon1 = Range(AdrPoslNeprazdne(Cells(1, c_SloZakazka))).Row
    If RadKon < RadKon1 Then RadKon = RadKon1
    RadKon1 = Range(AdrPoslNeprazdne(Cells(1, c_SloTyp))).Row
    If RadKon < RadKon1 Then RadKon = RadKon1
    RadKon1 = Range(AdrPoslNeprazdne(Cells(1, c_SloBarva))).Row
    If RadKon < RadKon1 Then RadKon = RadKon1
    RadKon1 = Range(AdrPoslNeprazdne(Cells(1, c_SloSirka))).Row
    If RadKon < RadKon1 Then RadKon = RadKon1
    RadKon1 = Range(AdrPoslNeprazdne(Cells(1, c_SloDelka))).Row
    If RadKon < RadKon1 Then RadKon = RadKon1
    RadKon1 = Range(AdrPoslNeprazdne(Cells(1, c_SloKsPar))).Row
    If RadKon < RadKon1 Then RadKon = RadKon1
    RadKon1 = Range(AdrPoslNeprazdne(Cells(1, c_SloCenPar))).Row
    If RadKon < RadKon1 Then RadKon = RadKon1
    RadKon1 = Range(AdrPoslNeprazdne(Cells(1, c_SloKrytka))).Row
    If RadKon < RadKon1 Then RadKon = RadKon1
    RadKon1 = Range(AdrPoslNeprazdne(Cells(1, c_SloKsKry))).Row
    If RadKon < RadKon1 Then RadKon = RadKon1
    If Typ = 1 Then
        RadKon1 = Range(AdrPoslNeprazdne(Cells(1, c_SloChyb))).Row
        If RadKon < RadKon1 Then RadKon = RadKon1
    End If
    If RadKon < c_RadZacatek + 1 Then RadKon = c_RadZacatek + 1
    PoslRadZad = RadKon
End Function
'***********************************************************************************************************
'|fffd||fffd|el: Vr|fffd|t|fffd| adresu posledn|fffd| bu|fffd|ky v sloupci
'Parametry: Libovoln|fffd| bu|fffd|ka ve hledan|fffd|m soupci
'Popis:
'Return: Adresa posledn|fffd| bu|fffd|ky, jeli sloupec pr|fffd|zdn|fffd| vr|fffd|t|fffd| adresu testovan|fffd| bu|fffd|ky
'Vol|fffd|n|fffd|:
'Datum: 3.11.2010
'***********************************************************************************************************
Private Function AdrPoslNeprazdne(RanImp As Range) As String
    Application.Volatile
    With RanImp.Parent
        With .Cells(.Rows.Count, RanImp.Column)
            If Not IsEmpty(.Value) Then
                AdrPoslNeprazdne = .Address
            ElseIf IsEmpty(.End(xlUp)) Then
                AdrPoslNeprazdne = RanImp.Address
            Else
                AdrPoslNeprazdne = .End(xlUp).Address
            End If
        End With
    End With
End Function
'***********************************************************************************************************
'|fffd||fffd|el: Vyma|fffd|e soupec chyb
'Parametry:
'Popis: Ma|fffd|e v|fffd|echny chyby a vynuluje barvy
'Return:
'Vol|fffd|n|fffd|: PoslRadZad
'Datum: 3.11.2010
'***********************************************************************************************************
Private Sub MazeChyby()
Dim PoRa As Long
    PoRa = PoslRadZad(1)
    Cells(PoRa, c_SloChyb).Select
    Range(Cells(c_RadZacatek + 1, c_SloChyb), Cells(PoRa, c_SloChyb)).ClearContents
    Range(Cells(c_RadZacatek + 1, c_SloChyb), Cells(PoRa, c_SloChyb)).Interior.ColorIndex = xlNone
End Sub
'***********************************************************************************************************
'|fffd||fffd|el: Zap|fffd|e kumulovan|fffd| chyby do r|fffd|dku
'Parametry: |fffd||fffd|dek kam zapsat, Text co zapsat
'Popis: Zap|fffd|e chyby do |fffd||fffd|dku a nastav|fffd| barvu
'Return:
'Vol|fffd|n|fffd|:
'Datum: 3.11.2010
'***********************************************************************************************************
Private Sub ChybaZapsat(Radek As Long, text As String)
    If IsEmpty(Cells(Radek, c_SloChyb)) Then
        Cells(Radek, c_SloChyb) = text
        Cells(Radek, c_SloChyb).Interior.ColorIndex = 3
    Else
        Cells(Radek, c_SloChyb) = Cells(Radek, c_SloChyb) & "," & text
    End If
End Sub
'***********************************************************************************************************
'|fffd||fffd|el: Hled|fffd| pozici "CO" v pojmenovan|fffd| oblasti "JmKde"
'Parametry: Co se m|fffd| hledat, N|fffd|zev oblasti kde se bude hledat
'Popis:
'Return: Vrac|fffd| po|fffd|adov|fffd| |fffd||fffd|slo v|fffd|skytu v oblasti, kdy|fffd| nenajde tak 0
'Vol|fffd|n|fffd|:
'Datum: 24.11.2010
'***********************************************************************************************************
Private Function HledejPoz(Co As Variant, JmKde As String, wbk As Workbook) As Long
    On Error Resume Next
    HledejPoz = Application.WorksheetFunction.Match(Co, wbk.Names(JmKde).RefersToRange, 0)
End Function
'***********************************************************************************************************
'|fffd||fffd|el: Hled|fffd| nejblize vy|fffd||fffd||fffd| nebo stejnou pozici "CO" v pojmenovan|fffd| oblasti "JmKde"
'Parametry: Co se m|fffd| hledat, N|fffd|zev oblasti kde se bude hledat
'Popis:
'Return: Vrac|fffd| po|fffd|adov|fffd| |fffd||fffd|slo v|fffd|skytu v oblasti, kdy|fffd| nenajde tak 0
'Vol|fffd|n|fffd|:
'Datum: 24.11.2010
'***********************************************************************************************************
Private Function HledejMaxPoz(Co As Variant, JmKde As String, wbk As Workbook) As Long
Dim CoL As Long
Dim AktL As Long
Dim Akt As Variant
Dim i As Long
    CoL = Val(Co)
    i = 1
    AktL = -1
    Do While AktL <> 0
        Akt = DejHodOblasti(JmKde, i, 1, wbk)
        AktL = Val(Akt)
        If CoL <= AktL Then Exit Do
        i = i + 1
    Loop
    HledejMaxPoz = i
End Function
'***********************************************************************************************************
'|fffd||fffd|el: Vr|fffd|t|fffd| hodnotu bu|fffd|ky v pojmenovan|fffd| oblasti na pozici indexu
'Parametry: Index v hledan|fffd| oblasti
'Popis:
'Return: Vrac|fffd| Hodnotu  na pozici
'Vol|fffd|n|fffd|:
'Datum: 24.11.2010
'***********************************************************************************************************
Private Function DejHodOblasti(JmKde As String, Rad As Long, Slo As Long, wbk As Workbook) As Variant
    If Rad <= 0 Then DejHodOblasti = Null: Exit Function
    On Error Resume Next
    DejHodOblasti = Application.WorksheetFunction.Index(wbk.Names(JmKde).RefersToRange, Rad, Slo)
    If Err <> 0 Then
        DejHodOblasti = Null
    End If
End Function
'***********************************************************************************************************
'|fffd||fffd|el: Vr|fffd|t|fffd| maxim|fffd|ln|fffd| d|fffd|lku podle indexu
'Parametry: Index hledan|fffd|ho sortimentu
'Popis:
'Return: Vrac|fffd| maxim|fffd|ln|fffd| d|fffd|lku sortimentu
'Vol|fffd|n|fffd|:
'Datum: 24.11.2010
'***********************************************************************************************************
Private Function DejMaxDelku(TypP As Long, wbk As Workbook) As Long
    On Error Resume Next
    DejMaxDelku = DejHodOblasti(n_MaxDel, TypP, 1, wbk)
End Function
'***********************************************************************************************************
'|fffd||fffd|el: Vr|fffd|t|fffd| maxim|fffd|ln|fffd| |fffd||fffd||fffd|ku podle indexu
'Parametry: Index hledan|fffd|ho sortimentu
'Popis:
'Return: Vrac|fffd| maxim|fffd|ln|fffd| |fffd||fffd||fffd|ku sortimentu
'Vol|fffd|n|fffd|:
'Datum: 3.11.2010
'***********************************************************************************************************
Private Function DejMaxSirku(TypP As Long, BarP As Long, wbk As Workbook) As Long
    On Error Resume Next
    DejMaxSirku = DejHodOblasti(DejJmeObl1(n_MaxSir, TypP), 1, BarP, wbk)
End Function
'***********************************************************************************************************
'|fffd||fffd|el: Vr|fffd|t|fffd| limit |fffd||fffd||fffd|ky po|fffd|tu kus|fffd| odle indexu krytky
'Parametry: Index hledan|fffd|ho sortimentu
'Popis:
'Return: Vrac|fffd| limituj|fffd|c|fffd| |fffd||fffd|tku krytky
'Vol|fffd|n|fffd|:
'Datum: 3.11.2010
'***********************************************************************************************************
Private Function DejLimSirku(TypP As Long, KryP As Long, wbk As Workbook) As Long
    On Error Resume Next
    DejLimSirku = DejHodOblasti(DejJmeObl1(n_KryMaxSir, TypP), 1, KryP, wbk)
End Function
'***********************************************************************************************************
'|fffd||fffd|el: Kontroluje zda se Typ nach|fffd|z|fffd| v pojmenovan|fffd| oblasti
'Parametry: Typ sortimentu jako text
'Popis:
'Return: Vrac|fffd| true kdy|fffd| najde prvek v oblasti
'Vol|fffd|n|fffd|:
'Datum: 3.11.2010
'***********************************************************************************************************
Private Function KontrolaTypu(Typ As Variant, wbk As Workbook) As Boolean
    If HledejPoz(Typ, n_Typ, wbk) = 0 Then KontrolaTypu = False Else KontrolaTypu = True
End Function
'***********************************************************************************************************
'|fffd||fffd|el: Kontroluje zda se Barva pro dan|fffd| Typ se nach|fffd|z|fffd| v pojmenovan|fffd| oblasti barvy
'Parametry: Typ sortimentu jako text, Barva sortimentu jako text
'Popis:
'Return: Vrac|fffd| true kdy|fffd| najde prvek v oblasti
'Vol|fffd|n|fffd|:
'Datum: 3.11.2010
'***********************************************************************************************************
Private Function KontrolaBarvy(Typ As Variant, Barva As Variant, wbk As Workbook) As Boolean
    If HledejPoz(Barva, DejJmeObl1(n_Barvy, HledejPoz(Typ, n_Typ, wbk)), wbk) = 0 Then KontrolaBarvy = False Else KontrolaBarvy = True
End Function
'***********************************************************************************************************
'|fffd||fffd|el: Kontroluje zda je Delka pro dan|fffd| Typ men|fffd||fffd| nebo rovna maxim|fffd|ln|fffd| d|fffd|lce a zda nen|fffd| nulov|fffd|
'Parametry: Typ sortimentu jako text, D|fffd|lka sortimentu jako |fffd||fffd|slo
'Popis:
'Return: Vrac|fffd| true kdy|fffd| je d|fffd|lka spr|fffd|vn|fffd|
'Vol|fffd|n|fffd|:
'Datum: 3.11.2010
'***********************************************************************************************************
Private Function KontrolaDelky(Typ As Variant, Delka As Variant, wbk As Workbook) As Boolean
Dim DelkaL As Long
    DelkaL = Val(Delka)
    If (DelkaL > DejMaxDelku(HledejPoz(Typ, n_Typ, wbk), wbk)) Or (Delka <= 0) Then KontrolaDelky = False Else KontrolaDelky = True
End Function
'***********************************************************************************************************
'|fffd||fffd|el: Kontroluje zda je |fffd||fffd||fffd|ka pro dan|fffd| Typ men|fffd||fffd| nebo rovna maxim|fffd|ln|fffd| |fffd||fffd||fffd|ce nebo zda je obsa|fffd|ena v oblasti |fffd||fffd||fffd|ky
'Parametry: Typ sortimentu , Barva, |fffd||fffd||fffd|ka sortimentu
'Popis:
'Return: Vrac|fffd| true kdy|fffd| je |fffd||fffd||fffd|ka spr|fffd|vn|fffd|
'Vol|fffd|n|fffd|:
'Datum: 3.11.2010
'***********************************************************************************************************
Private Function KontrolaSirky(Typ As Variant, Barva As Variant, Sirka As Variant, wbk As Workbook) As Boolean
Dim TypMaxSir As Long
Dim TypP As Long
Dim BarP As Long
Dim SirkaL As Long
    TypP = HledejPoz(Typ, n_Typ, wbk)
    BarP = HledejPoz(Barva, DejJmeObl1(n_Barvy, TypP), wbk)
    TypMaxSir = DejMaxSirku(TypP, BarP, wbk)
    SirkaL = Val(Sirka)
    If TypMaxSir > 0 Then                   'Kontroluje jen maxim|fffd|ln|fffd| |fffd||fffd||fffd|ku
        If (SirkaL > TypMaxSir) Or (SirkaL <= 0) Then KontrolaSirky = False Else KontrolaSirky = True
    Else                                    'Kontroluje zda je v p|fffd|edepsan|fffd| |fffd|k|fffd|le |fffd||fffd||fffd|ek
        If HledejPoz(Sirka, DejJmeObl1(n_Sirky, TypP), wbk) = 0 Then KontrolaSirky = False Else KontrolaSirky = True
    End If
End Function
'***********************************************************************************************************
'|fffd||fffd|el: Kontroluje zda se Krytka pro dan|fffd| Typ se nach|fffd|z|fffd| v pojmenovan|fffd| oblasti krytek
'Parametry: Typ sortimentu jako text, Krytka sortimentu jako text
'Popis:
'Return: Vrac|fffd| true kdy|fffd| najde prvek v oblasti
'Vol|fffd|n|fffd|:
'Datum: 3.11.2010
'***********************************************************************************************************
Private Function KontrolaKrytky(Typ As Variant, Krytka As Variant, wbk As Workbook) As Boolean
Dim LimitSir As Long
Dim TypP As Long
Dim TypK As Long
    TypP = HledejPoz(Typ, n_Typ, wbk)
    TypK = HledejPoz(Krytka, DejJmeObl1(n_Krytky, TypP), wbk)
    LimitSir = DejLimSirku(TypP, TypK, wbk)
    'Hled|fffd| typKrytky------------------------------------------
    If HledejPoz(Krytka, DejJmeObl1(n_Krytky, TypP), wbk) = 0 Then KontrolaKrytky = False Else KontrolaKrytky = True
    'Hled|fffd| Limit pro krytku-----------------------------------
'    If LimitSir <= 0 Then KontrolaKrytky = True   nefunguje proto|fffd|e vyu|fffd|it|fffd| 2x
    If Krytka = "" Then KontrolaKrytky = True
End Function
'***********************************************************************************************************
'|fffd||fffd|el: Kontroluje nastaven|fffd| hodnoty p|fffd|i zm|fffd|ne typu
'Parametry: Pol|fffd||fffd|ko zm|fffd|ny
'Popis: P|fffd|i zm|fffd|n|fffd| typu kontroluje barvu, |fffd||fffd||fffd|ku, delku a v p|fffd||fffd|pad|fffd| nesrovnalosti ji vyma|fffd|e
'Return:
'Vol|fffd|n|fffd|: KontrolaBarvy, KontrolaSirky, KontrolaDelky
'Datum: 3.11.2010
'***********************************************************************************************************
Sub ZmenaTypuKont(rngT As Range)
Dim rng As Range
Dim HodnT 'As String
Dim HodnB 'As String
Dim HodnS 'As Long
Dim HodnD 'As Long
Dim HodnK 'As String
Dim Rad As Long
Dim i As Long
    Set rng = rngT.Columns(1)
    Rad = rng.Rows.Count
    For i = 1 To Rad
        HodnT = rng.Rows(i)
        HodnB = rng.Rows(i).Offset(0, c_SloBarva - c_SloTyp)
        HodnS = rng.Rows(i).Offset(0, c_SloSirka - c_SloTyp)
        HodnD = rng.Rows(i).Offset(0, c_SloDelka - c_SloTyp)
        HodnK = rng.Rows(i).Offset(0, c_SloKrytka - c_SloTyp)
        If Not KontrolaBarvy(HodnT, HodnB, rngT.Parent.Parent) Then rng.Rows(i).Offset(0, c_SloBarva - c_SloTyp) = ""
        If Not KontrolaSirky(HodnT, HodnB, HodnS, rngT.Parent.Parent) Then rng.Rows(i).Offset(0, c_SloSirka - c_SloTyp) = ""
        If Not KontrolaDelky(HodnT, HodnD, rngT.Parent.Parent) Then rng.Rows(i).Offset(0, c_SloDelka - c_SloTyp) = ""
        If Not KontrolaKrytky(HodnT, HodnK, rngT.Parent.Parent) Then rng.Rows(i).Offset(0, c_SloKrytka - c_SloTyp) = ""
    Next i
End Sub
'***********************************************************************************************************
'|fffd||fffd|el: Kontroluje nastaven|fffd| barvy p|fffd|i zm|fffd|n|fffd| barvy
'Parametry: Oblast zm|fffd|ny
'Popis: P|fffd|i zm|fffd|n|fffd| barvy kontroluje barvu a v p|fffd||fffd|pad|fffd| nesrovnalosti ji vyma|fffd|e
'Return:
'Vol|fffd|n|fffd|: KontrolaBarvy
'Datum: 3.11.2010
'***********************************************************************************************************
Sub ZmenaBarvyKont(rngT As Range)
Dim rng As Range
Dim HodnT 'As String
Dim HodnB 'As String
Dim HodnS 'As Long
Dim Rad As Long
Dim i As Long
    Set rng = rngT.Columns(1)
    Rad = rng.Rows.Count
    For i = 1 To Rad
        HodnT = rng.Rows(i).Offset(0, c_SloTyp - c_SloBarva)
        HodnB = rng.Rows(i)
        HodnS = rng.Rows(i).Offset(0, c_SloSirka - c_SloBarva)
        If Not KontrolaBarvy(HodnT, HodnB, rngT.Parent.Parent) Then rng.Rows(i) = ""
        If Not KontrolaSirky(HodnT, HodnB, HodnS, rngT.Parent.Parent) Then rng.Rows(i).Offset(0, c_SloSirka - c_SloBarva) = ""
    Next i
End Sub
'***********************************************************************************************************
'|fffd||fffd|el: Kontroluje nastaven|fffd| |fffd||fffd||fffd|ky p|fffd|i zm|fffd|n|fffd| |fffd||fffd||fffd|ky
'Parametry: Oblast zm|fffd|ny
'Popis: P|fffd|i zm|fffd|n|fffd| |fffd||fffd||fffd|ky kontroluje |fffd||fffd||fffd|ku a v p|fffd||fffd|pad|fffd| nesrovnalosti ji vyma|fffd|e
'Return:
'Vol|fffd|n|fffd|: KontrolaSirky
'Datum: 3.11.2010
'***********************************************************************************************************
Sub ZmenaSirkyKont(rngT As Range)
Dim rng As Range
Dim HodnT 'As String
Dim HodnB 'As String
Dim HodnS 'As Long
Dim Rad As Long
Dim i As Long
    Set rng = rngT.Columns(1)
    Rad = rng.Rows.Count
    For i = 1 To Rad
        HodnT = rng.Rows(i).Offset(0, c_SloTyp - c_SloSirka)
        HodnB = rng.Rows(i).Offset(0, c_SloBarva - c_SloSirka)
        HodnS = rng.Rows(i)
        If Not KontrolaSirky(HodnT, HodnB, HodnS, rngT.Parent.Parent) Then rng.Rows(i) = ""
    Next i
End Sub
'***********************************************************************************************************
'|fffd||fffd|el: Kontroluje nastaven|fffd| d|fffd|lky p|fffd|i zm|fffd|n|fffd| d|fffd|lky
'Parametry: Oblast zm|fffd|ny
'Popis: P|fffd|i zm|fffd|n|fffd| d|fffd|lky kontroluje d|fffd|lku a v p|fffd||fffd|pad|fffd| nesrovnalosti ji vyma|fffd|e
'Return:
'Vol|fffd|n|fffd|: KontrolaDelky
'Datum: 3.11.2010
'***********************************************************************************************************
Sub ZmenaDelkyKont(rngT As Range)
Dim rng As Range
Dim HodnT 'As String
Dim HodnD 'As Long
Dim Rad As Long
Dim i As Long
    Set rng = rngT.Columns(1)
    Rad = rng.Rows.Count
    For i = 1 To Rad
        HodnT = rng.Rows(i).Offset(0, c_SloTyp - c_SloDelka)
        HodnD = rng.Rows(i)
        If Not KontrolaDelky(HodnT, HodnD, rngT.Parent.Parent) Then rng.Rows(i) = ""
    Next i
End Sub
'***********************************************************************************************************
'|fffd||fffd|el: Kontroluje nastaven|fffd| krytky p|fffd|i zm|fffd|n|fffd| krytky
'Parametry: Oblast zm|fffd|ny
'Popis: P|fffd|i zm|fffd|n|fffd| krytky kontroluje krytku a v p|fffd||fffd|pad|fffd| nesrovnalosti ji vyma|fffd|e
'Return:
'Vol|fffd|n|fffd|: KontrolaKrytky
'Datum: 3.11.2010
'***********************************************************************************************************
Sub ZmenaKrytkyKont(rngT As Range)
Dim rng As Range
Dim HodnT 'As String
Dim HodnK 'As String
Dim Rad As Long
Dim i As Long
    Set rng = rngT.Columns(1)
    Rad = rng.Rows.Count
    For i = 1 To Rad
        HodnT = rng.Rows(i).Offset(0, c_SloTyp - c_SloKrytka)
        HodnK = rng.Rows(i)
        If Not KontrolaKrytky(HodnT, HodnK, rngT.Parent.Parent) Then rng.Rows(i) = ""
    Next i
End Sub
'***********************************************************************************************************
'|fffd||fffd|el: Kontroluje nastaven|fffd| polo|fffd|ky firma v |fffd||fffd|dku
'Parametry: Oblast zm|fffd|ny
'Popis: Kontroluje zda je nastavena firma v objedn|fffd|vce
'       potom zda je vypn|fffd|no zak|fffd|zka a typ pak vypn|fffd| firmu
'Return:
'Vol|fffd|n|fffd|: TestZac
'Datum: 3.11.2010
'***********************************************************************************************************
Sub NastaviFirmu(rngT As Range)
Dim Rad As Long
    TestZac
    Rad = rngT.Row
    If IsEmpty(Cells(Rad, c_SloFirma)) Then
        If Not IsEmpty(Cells(Rad, c_SloZakazka)) Or _
           Not IsEmpty(Cells(Rad, c_SloTyp)) Then
            Cells(Rad, c_SloFirma) = Range(c_FirmaAdr)
        End If
    End If
End Sub
'***********************************************************************************************************
'|fffd||fffd|el: Kontroluje nastaven|fffd| vzorc|fffd| v |fffd||fffd|dku a form|fffd|tov|fffd|n|fffd| podle prvn|fffd|ho |fffd||fffd|dku
'Parametry: Oblast zm|fffd|ny
'Popis: Kontroluje zda jsou nastaveny vzorce (cena parapetu, po|fffd|et krytek, cena kratky, cena)v |fffd||fffd|dku a vypn|fffd| je
'       Z|fffd|rove|fffd| nastav|fffd| form|fffd|ty podle prvn|fffd|ho |fffd||fffd|dku
'Return:
'Vol|fffd|n|fffd|:DejCenuParapetu, VypoctiPocetKrytek, DejCenukrytky, a vzorec pro cenu |fffd||fffd|dku
'Datum: 3.11.2010
'***********************************************************************************************************
Sub NastaviVzorce(rngT As Range)
Dim Rad As Long
    Rad = rngT.Row
    If Cells(Rad, c_SloCenPar).FormulaR1C1 = "" Then
        If Not IsEmpty(Cells(Rad, c_SloZakazka)) Or _
           Not IsEmpty(Cells(Rad, c_SloTyp)) Then
            Cells(Rad, c_SloCenPar) = "=DejCenuParapetu(RC[-5],RC[-3],RC[-4])"
            Cells(Rad, c_SloCenPar).NumberFormat = "#,##0 $"
        End If
    End If
    If Cells(Rad, c_SloKsKry).FormulaR1C1 = "" Then
        If Not IsEmpty(Cells(Rad, c_SloZakazka)) Or _
           Not IsEmpty(Cells(Rad, c_SloTyp)) Then
            Cells(Rad, c_SloKsKry) = "=VypoctiPocetKrytek(RC[-3],RC[-7],RC[-1],RC[-5])"
        End If
    End If
    If Cells(Rad, c_SloCenKry).FormulaR1C1 = "" Then
        If Not IsEmpty(Cells(Rad, c_SloZakazka)) Or _
           Not IsEmpty(Cells(Rad, c_SloTyp)) Then
            Cells(Rad, c_SloCenKry) = "=DejCenukrytky(RC[-8],RC[-7],RC[-6],RC[-2])"
            Cells(Rad, c_SloCenKry).NumberFormat = "#,##0 $"
        End If
    End If
    If Cells(Rad, c_SloCena).FormulaR1C1 = "" Then
        If Not IsEmpty(Cells(Rad, c_SloZakazka)) Or _
           Not IsEmpty(Cells(Rad, c_SloTyp)) Then
            Cells(Rad, c_SloCena) = "=RC[-6]*RC[-5]*RC[-4]/1000+RC[-2]*RC[-1]"
            Cells(Rad, c_SloCena).NumberFormat = "#,##0 $"
        End If
    End If
End Sub
'***********************************************************************************************************
'|fffd||fffd|el: Nastav|fffd| ov|fffd||fffd|ov|fffd|n|fffd| Typu pro prvn|fffd| |fffd|adek a soupec oblasti
'Parametry: Oblast
'Popis: Nastav|fffd| ov|fffd||fffd|ov|fffd|n|fffd| typu podle jm|fffd|na typu oblasti
'Return:
'Vol|fffd|n|fffd|:
'Datum: 3.11.2010
'***********************************************************************************************************
Sub NastaviTypOvereni(rngT As Range)
Dim rng As Range
    Set rng = rngT.Columns(1).Rows(1)
    With rng.Validation
        .Delete
        .Add Type:=xlValidateList, AlertStyle:=xlValidAlertStop, Operator:= _
        xlBetween, Formula1:="=" & n_Typ
        .IgnoreBlank = True
        .InCellDropdown = True
        .InputTitle = ""
        .ErrorTitle = "Chyba zad|fffd|n|fffd|"
        .InputMessage = ""
        .ErrorMessage = "Vyber jen nab|fffd|zen|fffd| hodnoty"
        .ShowInput = True
        .ShowError = True
    End With
End Sub
'***********************************************************************************************************
'|fffd||fffd|el: Nastav|fffd| ov|fffd||fffd|ov|fffd|n|fffd| Barvy pro prvn|fffd| |fffd|adek a soupec oblasti
'Parametry: Oblast
'Popis: Nastav|fffd| ov|fffd||fffd|ov|fffd|n|fffd| barvy podle jm|fffd|na barev oblasti
'Return:
'Vol|fffd|n|fffd|: DejJmenoOblasti
'Datum: 3.11.2010
'***********************************************************************************************************
Sub NastaviBarOvereni(rngB As Range)
Dim rng As Range
Dim HodnT 'As String
Dim TypP As Long
Dim JmBar As String
    Set rng = rngB.Columns(1).Rows(1)
    HodnT = rng.Offset(0, -1)
    TypP = HledejPoz(HodnT, n_Typ, rngB.Parent.Parent)
    JmBar = DejJmeObl1(n_Barvy, TypP)
    With rng.Validation
        .Delete
        .Add Type:=xlValidateList, AlertStyle:=xlValidAlertStop, Operator:= _
        xlBetween, Formula1:="=" & JmBar
        .IgnoreBlank = True
        .InCellDropdown = True
        .InputTitle = ""
        .ErrorTitle = "Chyba zad|fffd|n|fffd|"
        .InputMessage = ""
        .ErrorMessage = "Vyber jen nab|fffd|zen|fffd| hodnoty"
        .ShowInput = True
        .ShowError = True
    End With
End Sub
'***********************************************************************************************************
'|fffd||fffd|el: Nastav|fffd| ov|fffd||fffd|ov|fffd|n|fffd| D|fffd|lky pro prvn|fffd| |fffd|adek a soupec oblasti
'Parametry: Oblast
'Popis: Nastav|fffd| ov|fffd||fffd|ov|fffd|n|fffd| d|fffd|lky podle Maxd|fffd|lky
'Return:
'Vol|fffd|n|fffd|: DejMaxDelku
'Datum: 3.11.2010
'***********************************************************************************************************
Sub NastaviDelOvereni(rngD As Range)
Dim rng As Range
Dim HodnT 'As String
Dim Delka As Long
    Set rng = rngD.Columns(1).Rows(1)
    HodnT = rng.Offset(0, -3)
    Delka = DejMaxDelku(HledejPoz(HodnT, n_Typ, rngD.Parent.Parent), rngD.Parent.Parent)
    With Selection.Validation
        .Delete
        .Add Type:=xlValidateCustom, AlertStyle:=xlValidAlertStop, Operator:= _
        xlBetween, Formula1:="=" & rng.Address & "<=" & Delka
        .IgnoreBlank = True
        .InCellDropdown = True
        .InputTitle = ""
        .ErrorTitle = "Chyba zad|fffd|n|fffd|"
        .InputMessage = ""
        .ErrorMessage = "P|fffd|ekro|fffd|ena maxim|fffd|ln|fffd| d|fffd|lky " & Delka & " mm"
        .ShowInput = True
        .ShowError = True
    End With
End Sub
'***********************************************************************************************************
'|fffd||fffd|el: Nastav|fffd| ov|fffd||fffd|ov|fffd|n|fffd| |fffd|i|fffd|ky pro prvn|fffd| |fffd|adek a soupec oblasti
'Parametry: Oblast
'Popis: Nastav|fffd| ov|fffd||fffd|ov|fffd|n|fffd| d|fffd|lky podle Max|fffd||fffd||fffd|ky, nebo podle jm|fffd|na |fffd||fffd||fffd|ek oblasti
'Return:
'Vol|fffd|n|fffd|: DejMaxSirku, DejJmenoOblasti
'Datum: 3.11.2010
'***********************************************************************************************************
Sub NastaviSirOvereni(rngS As Range)
Dim rng As Range
Dim HodnT 'As String
Dim HodnB 'As String
Dim TypP As Long
Dim BarP As Long
Dim MaxSirka As Long
Dim JmSir As String
    Set rng = rngS.Columns(1).Rows(1)
    HodnT = rng.Offset(0, c_SloTyp - c_SloSirka)
    HodnB = rng.Offset(0, c_SloBarva - c_SloSirka)
    TypP = HledejPoz(HodnT, n_Typ, rngS.Parent.Parent)
    BarP = HledejPoz(HodnB, DejJmeObl1(n_Barvy, TypP), rngS.Parent.Parent)
    MaxSirka = DejMaxSirku(TypP, BarP, rngS.Parent.Parent)
    If MaxSirka > 0 Then                        'Nastaven|fffd| kontroly max|fffd||fffd||fffd|ky
        With Selection.Validation
            .Delete
            .Add Type:=xlValidateCustom, AlertStyle:=xlValidAlertStop, Operator:= _
            xlBetween, Formula1:="=" & rng.Address & "<=" & MaxSirka
            .IgnoreBlank = True
            .InCellDropdown = True
            .InputTitle = ""
            .ErrorTitle = "Chyba zad|fffd|n|fffd|"
            .InputMessage = ""
            .ErrorMessage = "P|fffd|ekro|fffd|ena maxim|fffd|ln|fffd| |fffd||fffd||fffd|ka " & MaxSirka & " mm"
            .ShowInput = True
            .ShowError = True
        End With
    Else                                        'Nastaven|fffd|
        JmSir = DejJmeObl1(n_Sirky, TypP)
        With rng.Validation
            .Delete
            .Add Type:=xlValidateList, AlertStyle:=xlValidAlertStop, Operator:= _
            xlBetween, Formula1:="=" & JmSir
            .IgnoreBlank = True
            .InCellDropdown = True
            .InputTitle = ""
            .ErrorTitle = "Chyba zad|fffd|n|fffd|"
            .InputMessage = ""
            .ErrorMessage = "Vyber jen nab|fffd|zen|fffd| hodnoty"
            .ShowInput = True
            .ShowError = True
        End With
    End If
End Sub
'***********************************************************************************************************
'|fffd||fffd|el: Nastav|fffd| ov|fffd||fffd|ov|fffd|n|fffd| Krytky pro prvn|fffd| |fffd|adek a soupec oblasti
'Parametry: Oblast
'Popis: Nastav|fffd| ov|fffd||fffd|ov|fffd|n|fffd| krytky podle jm|fffd|na krytek oblasti
'Return:
'Vol|fffd|n|fffd|: DejJmenoOblasti
'Datum: 3.11.2010
'***********************************************************************************************************
Sub NastaviKryOvereni(rngB As Range)
Dim rng As Range
Dim HodnT 'As String
Dim JmKry As String
    Set rng = rngB.Columns(1).Rows(1)
    HodnT = rng.Offset(0, -6)
    JmKry = DejJmeObl1(n_Krytky, HledejPoz(HodnT, n_Typ, rngB.Parent.Parent))
    With rng.Validation
        .Delete
        .Add Type:=xlValidateList, AlertStyle:=xlValidAlertStop, Operator:= _
        xlBetween, Formula1:="=" & JmKry
        .IgnoreBlank = True
        .InCellDropdown = True
        .InputTitle = ""
        .ErrorTitle = "Chyba zad|fffd|n|fffd|"
        .InputMessage = ""
        .ErrorMessage = "Vyber jen nab|fffd|zen|fffd| hodnoty"
        .ShowInput = True
        .ShowError = True
    End With
End Sub
'***********************************************************************************************************
'|fffd||fffd|el: Funkce listu vlastn|fffd| pro v|fffd|po|fffd|et po|fffd|tu krytek
'Parametry: Po|fffd|et kus|fffd| parapetu, typ krytky, |fffd||fffd||fffd|ka parapetu
'Popis:
'Return: Vrac|fffd| po|fffd|et krytek pot|fffd|ebn|fffd|ch
'Vol|fffd|n|fffd|:
'Datum: 24.11.2010
'***********************************************************************************************************
Function VypoctiPocetKrytek(PocetParapetu As Range, TypParapetu As Range, TypKrytky As Range, SirkaParapetu As Range) As Long
Dim PocPar As Long
Dim HodnT As Variant
Dim HodnK As Variant
Dim SirPar As Long
Dim LimitSir As Long
Dim TypP As Long
Dim TypK As Long
    'Application.Volatile
    PocPar = Val(PocetParapetu.Value)
    HodnT = TypParapetu.Value
    HodnK = TypKrytky.Value
    SirPar = Val(SirkaParapetu.Value)
    TypP = HledejPoz(HodnT, n_Typ, PocetParapetu.Parent.Parent)
    TypK = HledejPoz(HodnK, DejJmeObl1(n_Krytky, TypP), PocetParapetu.Parent.Parent)
    LimitSir = DejLimSirku(TypP, TypK, PocetParapetu.Parent.Parent)
    If LimitSir <= 0 Then
        VypoctiPocetKrytek = 0
    Else
        If SirPar <= LimitSir Then
            VypoctiPocetKrytek = 1 * PocetParapetu
        Else
            VypoctiPocetKrytek = 2 * PocetParapetu
        End If
    End If
End Function
'***********************************************************************************************************
'|fffd||fffd|el: Funkce listu vlastn|fffd| pro v|fffd|po|fffd|et ceny za metr
'Parametry:
'Popis:
'Return: Vrac|fffd| cenu jednoho metru parapetu
'Vol|fffd|n|fffd|:
'Datum: 24.11.2010
'***********************************************************************************************************
Function DejCenuParapetu(TypParapetu As Range, SirParapetu As Range, BarvaParapetu As Range) As Long
Dim HodnT As Variant
Dim HodnS As Variant
Dim HodnB As Variant
Dim TypP As Long
Dim TypS As Long
Dim TypB As Long
Dim TypMaxSir As Long
Dim Cena As Long
    '''
    'Application.Volatile
    'On Error GoTo aaa
    HodnT = TypParapetu.Value
    HodnS = SirParapetu.Value
    HodnB = BarvaParapetu.Value
    TypP = HledejPoz(HodnT, n_Typ, TypParapetu.Parent.Parent)
    TypB = HledejPoz(HodnB, DejJmeObl1(n_Barvy, TypP), TypParapetu.Parent.Parent)
    TypMaxSir = DejMaxSirku(TypP, TypB, TypParapetu.Parent.Parent)
    If TypMaxSir > 0 Then                   'Nejedn|fffd| st o tabulkov|fffd| hodnoty
        TypS = HledejMaxPoz(HodnS, DejJmeObl1(n_Sirky, TypP), TypParapetu.Parent.Parent)
    Else                                    'Jedn|fffd| st o tabulkov|fffd| hodnoty
        TypS = HledejPoz(HodnS, DejJmeObl1(n_Sirky, TypP), TypParapetu.Parent.Parent)
    End If
    Cena = DejHodOblasti(DejJmeObl1(n_Ceny, TypP), TypS, TypB, TypParapetu.Parent.Parent)
    DejCenuParapetu = Cena
    Exit Function
aaa:
    MsgBox Err.Description
    MsgBox Err.Number
    'Resume
End Function
'***********************************************************************************************************
'|fffd||fffd|el: Funkce listu vlastn|fffd| pro v|fffd|po|fffd|et ceny krytky
'Parametry:
'Popis:
'Return: Vrac|fffd| cenu jedn|fffd| krytky
'Vol|fffd|n|fffd|:
'Datum: 3.11.2010
'***********************************************************************************************************
Function DejCenukrytky(TypParapetu As Range, BarvaParapetu As Range, SirkaParapetu As Range, TypKrytky As Range) As Double
Dim HodnT As Variant
Dim HodnS As Variant
Dim HodnB As Variant
Dim HodnK As Variant
Dim TypP As Long
Dim TypS As Long
Dim TypB As Long
Dim TypK As Long
Dim TypMaxSir As Long
Dim Cena As Double
    HodnT = TypParapetu.Value
    HodnS = SirkaParapetu.Value
    HodnB = BarvaParapetu.Value
    HodnK = TypKrytky.Value
    TypP = HledejPoz(HodnT, n_Typ, TypParapetu.Parent.Parent)
    TypB = HledejPoz(HodnB, DejJmeObl1(n_Barvy, TypP), TypParapetu.Parent.Parent)
    TypMaxSir = DejMaxSirku(TypP, TypB, TypParapetu.Parent.Parent)
    TypK = HledejPoz(HodnK, DejJmeObl1(n_Krytky, TypP), TypParapetu.Parent.Parent)
    If TypMaxSir > 0 Then                   'Nejedn|fffd| st o tabulkov|fffd| hodnoty
        TypS = HledejMaxPoz(HodnS, DejJmeObl1(n_Sirky, TypP), TypParapetu.Parent.Parent)
    Else                                    'Jedn|fffd| st o tabulkov|fffd| hodnoty
        TypS = HledejPoz(HodnS, DejJmeObl1(n_Sirky, TypP), TypParapetu.Parent.Parent)
    End If
    'Test vyj|fffd|mky
    If TypP = 2 And JeBila(HodnB) Then TypK = TypK + 2
    If TypP = 3 And JeBila(HodnB) Then TypK = TypK + 2
    If TypK <> 0 Then
        Cena = DejHodOblasti(DejJmeObl1(n_KryCeny, TypP), TypS, TypK, TypParapetu.Parent.Parent)
    Else
        Cena = 0
    End If
    DejCenukrytky = Cena
End Function
'*****************OPRAVA 1.5.2012**************
Private Function JeBila(Hodnota As Variant) As Boolean
Dim Position As Long
Dim Barva
    Barva = CStr(Hodnota)
    Position = InStr(1, Barva, "B|fffd|L|fffd|", vbTextCompare)
    JeBila = Position > 0
End Function
'***********************************************************************************************************
'|fffd||fffd|el: Zform|fffd|tuje |fffd||fffd|dek na listu zad|fffd|van|fffd|
'Parametry:
'Popis:
'Return:
'Vol|fffd|n|fffd|:
'Datum: 24.11.2010
'***********************************************************************************************************
Sub FormatujRadek(Rad As Long)
    With Cells(Rad, 1).Resize(, c_SloChyb)
        .HorizontalAlignment = xlGeneral
        .VerticalAlignment = xlBottom
        .WrapText = False
        .Orientation = 0
        .AddIndent = False
        .IndentLevel = 0
        .ShrinkToFit = False
        .ReadingOrder = xlContext
        .MergeCells = False
        .Interior.ColorIndex = xlNone
        With .Borders(xlEdgeLeft)
            .LineStyle = xlContinuous
            .Weight = xlThin
            .ColorIndex = xlAutomatic
        End With
        With .Borders(xlEdgeTop)
            .LineStyle = xlContinuous
            .Weight = xlThin
            .ColorIndex = xlAutomatic
        End With
        With .Borders(xlEdgeBottom)
            .LineStyle = xlContinuous
            .Weight = xlThin
            .ColorIndex = xlAutomatic
        End With
        With .Borders(xlEdgeRight)
            .LineStyle = xlContinuous
            .Weight = xlThin
            .ColorIndex = xlAutomatic
        End With
        With .Borders(xlInsideVertical)
            .LineStyle = xlContinuous
            .Weight = xlThin
            .ColorIndex = xlAutomatic
        End With
    End With
    With Cells(Rad, c_SloFirma).Interior
        .ColorIndex = 34
        .Pattern = xlSolid
        .PatternColorIndex = xlAutomatic
    End With
    With Cells(Rad, c_SloCenPar).Interior
        .ColorIndex = 34
        .Pattern = xlSolid
        .PatternColorIndex = xlAutomatic
    End With
    With Cells(Rad, c_SloKsKry).Interior
        .ColorIndex = 34
        .Pattern = xlSolid
        .PatternColorIndex = xlAutomatic
    End With
    With Cells(Rad, c_SloCenKry).Interior
        .ColorIndex = 34
        .Pattern = xlSolid
        .PatternColorIndex = xlAutomatic
    End With
    With Cells(Rad, c_SloCena).Interior
        .ColorIndex = 34
        .Pattern = xlSolid
        .PatternColorIndex = xlAutomatic
    End With
End Sub
'***********************************************************************************************************
'|fffd||fffd|el: Ma|fffd|e v|fffd|echny n|fffd|zvy oblast|fffd|
'Parametry: Vol|fffd| se p|fffd|ed nastaven|fffd|m n|fffd|zv|fffd|
'Popis: Ma|fffd|e v|fffd|echny n|fffd|zvy oblast|fffd|
'Return:
'Vol|fffd|n|fffd|:
'Datum: 22.11.2010
'***********************************************************************************************************
Private Sub MazeNazvy(wbk As Workbook)
Dim item
    For Each item In wbk.Names
        item.Delete
    Next item
End Sub
Private Sub NovaStejna()
'Vytvo|fffd||fffd| novou polozku stejnou jako ta, na kter|fffd| stoj|fffd| kurzor a vytvo|fffd||fffd| stejnou na konci
Dim Rad As Long
Dim RadKonec As Long
    RadKonec = PoslRadZad(1)
    Rad = ActiveCell.Row
    If Rad < 9 Then Rad = 9
    If Rad > RadKonec Then Rad = RadKonec
    Range("B" & Rad & ":O" & Rad).Copy
    Range("B" & RadKonec + 1).Select
    Selection.Insert Shift:=xlDown
    Application.CutCopyMode = False
End Sub

Attribute VB_Name = "ThisWorkbook"
Attribute VB_Base = "0{00020819-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Option Explicit

Private Sub Workbook_Open()
    Application.EnableEvents = True
    Columns("I:I").EntireColumn.Hidden = False
    Columns("K:K").EntireColumn.Hidden = False
    Columns("L:L").EntireColumn.Hidden = False
    Columns("M:M").EntireColumn.Hidden = False
End Sub


INQUEST-PP=macro
