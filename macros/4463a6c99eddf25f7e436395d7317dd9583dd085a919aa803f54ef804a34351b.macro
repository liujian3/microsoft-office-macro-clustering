Attribute VB_Name = "DieseArbeitsmappe"
Attribute VB_Base = "0{00020819-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True

Option Explicit
Dim I

Sub MonatsTabellenEinf|fffd|gen()
     Call MonatsTabellenGrundstellen
End Sub

Private Sub Workbook_Open()
Dim x

    If InStr(1, Date, ".") = 3 _
    Then
        Sprache = "D"
    Else
        Sprache = "E"
    End If
    
    Application.Caption = Mid(ThisWorkbook.Name, 1, InStr(ThisWorkbook.Name, ".") - 1) & _
            IIf(ThisWorkbook.Sheets("Jahr").Range("C3") = "freies Budget", _
            ": Einnahmen und Ausgaben im Griff", ": Incomes and Spendings under control")
    
    Call Men|fffd|L|fffd|schen

    Application.EnableEvents = True
    Application.Calculation = xlCalculationAutomatic
    Application.ScreenUpdating = False
    PfadNameAlt = ThisWorkbook.Path

    Exestart_Kenner = False
    FolgejahrUmstellung = False

    Call NeuesMen|fffd|Einf|fffd|gen

    Application.ScreenUpdating = False
    Sheets("EAMuster").Visible = xlVeryHidden
    Sheets("Backup").Visible = xlVeryHidden
    ScreenFactor = 1

    Set OrgWb = ThisWorkbook
    Set UniWb = ThisWorkbook
    
    Application.ScreenUpdating = False
    If Worksheets("Jahr").Cells(8, 11) = "" _
        Then Z_Auswahl = "&Planung, Jahres-|fffd|bersicht" _
        Else Z_Auswahl = Worksheets("Jahr").Range("K8")
    MenueItem = Z_Auswahl
    
    Application.EnableEvents = False
    Application.ScreenUpdating = False

    If ThisWorkbook.Sheets("Jahr").Cells(50, 28) = "FALSCH" _
    Then
        Sheets("Jahr").Range("ExeStart") = "FALSCH"
        MenueItem = Worksheets("Jahr").Range("K8")
        Call MenueAuswahl
    End If
    Call FormateAusPlanungInTabbenUebertragen

    Application.EnableEvents = True
    Application.ScreenUpdating = True
End Sub

Private Sub Workbook_BeforeClose(Cancel As Boolean)

'    Application.CommandBars("Cell").Reset
    Application.EnableEvents = False
    
    If Not (Sheets("Jahr").Range("ExeStart") = "Wahr") _
    Then
        ThisWorkbook.Saved = True
    End If
    Application.EnableEvents = True
End Sub

Private Sub Workbook_SheetChange(ByVal sh As Object, ByVal Target As Range)
    Dim ChangeLang
    Dim LangOld
    Dim Grundstellen

    If FolgejahrUmstellung Or Exestart_Kenner _
    Then
        Sprache = IIf(ThisWorkbook.Sheets("Jahr").Range("C3") = "freies Budget", "D", "E")
        Exit Sub
    End If

    Application.EnableEvents = False
    Application.ScreenUpdating = False

    Sheets("Jahr").Select

    If ThisWorkbook.Sheets("Jahr").Cells(50, 28) <> "FALSCH" _
    Then
    
        If (Sprache = "D" _
        And Sheets("Jahr").Range("AbbJahr2") = "Startsaldo Bankkonto: ") _
        Or (Sprache = "E" _
        And Sheets("Jahr").Range("AbbJahr2") = "Opening balance bank account: ") _
        Then

        Else
'GoTo OhneTranslate
            Application.ScreenUpdating = True
            
            Select Case (True)
                    Case Sheets("Planung").Range("B5") = "Version 2.1, Deutsch" And Sprache = "E"
                        ChangeLang = MsgBox("Die deutsche Benutzeroberfl|fffd|che wird nach 'Englisch' |fffd|bersetzt.", _
                            vbExclamation + vbOKCancel, "Deutsches MS-Office")
                    Case Sheets("Planung").Range("B5") = "Version 2.1, English" And Sprache = "D"
                        ChangeLang = MsgBox("The English user interface will be translated into 'German'.", _
                            vbExclamation + vbOKCancel, "English MS-Office")
                    Case Else
            End Select

            If ChangeLang = 1 _
            Then
            Else
                Select Case (True)
                    Case Sheets("Planung").Range("B5") = "Version 2.1, Deutsch" And Sprache = "E"
                        MsgBox "|fffd|bersetzung der deutschen Benutzeroberfl|fffd|che nach 'Englisch' abgebrochen.", _
                            vbExclamation, "Deutsches MS-Office"
                        LangOld = "D"
                    Case Sheets("Planung").Range("B5") = "Version 2.1, English" And Sprache = "D"
                        MsgBox "Translation of English user interface into 'German' aborted.", _
                            vbExclamation, "English MS-Office"
                        LangOld = "E"
                    Case Else
                        GoTo TransAbort
                End Select
                
                Application.EnableEvents = False
                Application.ScreenUpdating = False

'                Call Men|fffd|L|fffd|schen
                Sprache = LangOld
'                Call NeuesMen|fffd|Einf|fffd|gen
            
                GoTo TransAbort
            End If
            
            Application.ScreenUpdating = False
            Call SchutzEntfernen(Sheets("Jahr"))
            If InStr(1, Date, ".") = 3 _
                Then Range("Sprache") = "D" _
                Else Range("Sprache") = "E"
            Call SchutzSetzen(Sheets("Jahr"), True)
            
            Application.EnableEvents = False
            
            Call SpracheAnpassen(Sprache)
            Call Men|fffd|L|fffd|schen
            Call NeuesMen|fffd|Einf|fffd|gen
            
            Application.ScreenUpdating = True
                        
            Application.Caption = Mid(ThisWorkbook.Name, 1, InStr(ThisWorkbook.Name, ".") - 1) & _
                        IIf(ThisWorkbook.Sheets("Jahr").Range("C3") = "freies Budget", _
                        ": Einnahmen und Ausgaben im Griff", ": Incomes and Spendings under control")

            If ChangeLang = 1 Then
                Select Case (True)
                    Case Sheets("Planung").Range("B5") = "Version 2.1, Deutsch" And Sprache = "D"
                        MsgBox "|fffd|bersetzung englischer Benutzeroberfl|fffd|che nach 'Deutsch' abgeschlossen.", _
                        vbExclamation, "Deutsches MS-Office"
                    Case Sheets("Planung").Range("B5") = "Version 2.1, English" And Sprache = "E"
                        MsgBox "Translation of German user interface into 'English' finished.", _
                        vbExclamation, "English MS-Office"
                    Case Else
                End Select
            End If
TransAbort:
OhneTranslate:

            Call LoeschenZwischenablage
'            Application.ScreenUpdating = True
        End If

        Application.ScreenUpdating = False
        Sheets("Jahr").Range("ExeStart") = "Wahr"
        Sheets("Jahr").Cells(50, 28) = "FALSCH"
        Exestart_Kenner = True
    Else
        ThisWorkbook.Sheets("Jahr").Cells(50, 28).Value = "FALSCH"
        Sheets("Jahr").Range("ExeStart") = "FALSCH"
    End If

    If Sheets("Jahr").Range("ExeStart") = "FALSCH" _
    Then
        If Sprache = "D" _
        Then
            MsgBox "Diese Excel-Mappe kann nur |fffd|ber die EA-Rechner.EXE ge|fffd|ffnet werden.", _
                vbExclamation, "Starten des EA-Rechner"
        Else
            MsgBox "This Excel workbook can be opened only from the Calculator.EXE", _
                vbExclamation, "Start of Calculator"
        End If
        
        Application.Quit
    Else
'        ThisWorkbook.Save
        MenueItem = Z_Auswahl
        Call MenueAuswahl
    End If
    
    
    
    If Sprache = "D" _
    Then
        If Sheets("Planung").Range("B29") = "Version 2.1, Deutsch" _
        Then
            GettingStarted.Show
'            Grundstellen = MsgBox( _
'                    "Jahres-Planung Grundstellen bei Erst- bzw. Neu-Installation: " & vbCr & vbCr _
'                    & "1. Hinweise unter "" Einnahmen/Ausgaben Kategorien lesen ""." & vbCr _
'                    & "2. Mit " & """ Ja """ & " werden "" Einnahmen/Ausgaben "" gel|fffd|scht (empfohlen)." & vbCr & vbCr _
'                    & "Alternativ erm|fffd|glicht "" Nein "" oder "" Abbrechen "" L|fffd|schen bzw. |fffd|berschreiben per Hand." & vbCr & vbCr _
'                    & "Beide Optionen k|fffd|nnen f|fffd|r Testzwecke r|fffd|ckg|fffd|ngig gemacht" & vbCr _
'                    & "werden, wenn die Mappe anschlie|fffd|end ohne Sichern geschlossen wird.", _
'                    vbExclamation + vbYesNoCancel + vbDefaultButton1, "Initialisieren")
'
'            Select Case (Grundstellen)
'                Case vbYes
'                    Call GrundstellenJahresPlanung
'                Case vbNo
'                    Sheets("Planung").Range("B5").Select
'                Case Else
'            End Select
'
        End If
    Else
        If Sheets("Planung").Range("B5") = "Version 2.1, English" _
        Then
            Grundstellen = MsgBox( _
                    " Initial reset "" Annual-Planning "" at First- or New-Installation: " & vbCr & vbCr _
                    & "1. Read hints below "" Incomes/expenditures categories "" thoroughly." & vbCr _
                    & "2. Choose "" Yes "" for to delete text under "" Incomes/expenditures "" (recommendet)." & vbCr & vbCr _
                    & "Alternatively confirming "" No "" or "" Cancel "" keeps the text, and " & vbCr _
                    & "enables deleting or overwriting by hand." & vbCr & vbCr _
                    & "For test purpose both optiones can be cancelled during close " & vbCr _
                    & "of workbook by confirming the qestion 'save changes' " & vbCr _
                    & "with "" No "".", _
                    vbExclamation + vbYesNoCancel + vbDefaultButton1, "Initial setting")
            Select Case (Grundstellen)
                Case vbYes
                    Call GrundstellenJahresPlanung
                Case vbNo
                    Sheets("Planung").Range("B5") = "Salary"
                    Sheets("Planung").Range("B5").Select
                Case Else
            End Select
        End If
    End If
    Application.ScreenUpdating = True
    Application.EnableEvents = True
    Sprache = IIf(ThisWorkbook.Sheets("Jahr").Range("C3") = "freies Budget", "D", "E")
End Sub

Public Sub FormateAusPlanungInTabbenUebertragen()
    Dim x
    Dim Name
    Application.EnableEvents = False
    Application.ScreenUpdating = False
    Sheets("Planung").Select
    Application.GoTo Reference:="ArtKtoBew"
    With Selection.Interior
        .PatternColorIndex = xlAutomatic
'        .ThemeColor = xlThemeColorDark1
'        .TintAndShade = 0
'        .PatternTintAndShade = 0
    End With
    For I = 15 To 26
        Sheets("Planung").Select
        Range("ArtKtoBew").Select
        Selection.Copy
    
        ThisWorkbook.Sheets(I).Select
'        Name = ActiveSheet.Name

        Cells(10, 2).Select
        Selection.PasteSpecial Paste:=xlPasteFormats, Operation:=xlNone, _
        SkipBlanks:=False, Transpose:=False
        Application.CutCopyMode = False
        Cells(10, 2).Select
    Next
    
    Application.GoTo Reference:="ArtKtoBew"
    With Selection.Interior
        .Pattern = xlSolid
        .PatternColorIndex = xlAutomatic
'        .ThemeColor = xlThemeColorDark1
'        .TintAndShade = -0.249977111117893
'        .PatternTintAndShade = 0
    End With
    Cells(5, 2).Select
    
    I = 11
    Sheets("Planung").Select
    Range("ArtKtoBew").Select
    Selection.Copy

    ThisWorkbook.Sheets(I).Select

    Cells(5, 2).Select
    Selection.PasteSpecial Paste:=xlPasteFormats, Operation:=xlNone, _
    SkipBlanks:=False, Transpose:=False
    Application.CutCopyMode = False
    Cells(5, 2).Select

    
    
    Application.CutCopyMode = False
'    Application.ScreenUpdating = True
End Sub

Attribute VB_Name = "GettingStarted"
Attribute VB_Base = "0{F4231EE7-CF69-42A9-939A-C42F9804883E}{ABB5826A-4A0A-4CC6-B507-F265136BEB0E}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False

Private Sub DemoInitialise_Click()
    Select Case (True)
        Case OptionButton1.Value
            Call GettingStarted.Hide
            Call BackupImport
        Case OptionButton2.Value
            Call GettingStarted.Hide
            Sheets("Planung").Range("B29") = ""
            Sheets("Planung").Range("B5").Select
        Case OptionButton3.Value
            Call GettingStarted.Hide
    End Select
    Sheets("Planung").Range("B5").Select
End Sub
Attribute VB_Name = "Initialisieren"
Sub GrundstellenJahresPlanung()
    Application.EnableEvents = True
    Application.ScreenUpdating = True
    Sheets("Planung").Select
    Sheets("Planung").Range("B29").Select
    ActiveCell.FormulaR1C1 = ""
    Application.EnableEvents = False
    Application.ScreenUpdating = False
End Sub


Attribute VB_Name = "LangChange"
Option Explicit

Public Sub SpracheAnpassen(Kenner)
    
    Dim Jahr As Worksheet
    Dim Suf
    Dim Sprache
    Dim SichTab
    Dim MonString
    Dim TabTab
    Dim AnzFelder
    Dim I, II As Integer
    Dim Referenzen
    Dim Name
    Dim MonatD
    Dim MonatE
    Dim ComDtschJ
    Dim ComEnglY
    Dim ComDtschP
    Dim ComEnglP
    Dim ComDtschM
    Dim ComEnglM
    Dim myCom As Comment
    Dim myCom2 As Comment
    
    MonatD = Array(, "Januar", "Februar", "M|fffd|rz", "April", "Mai", "Juni", _
                     "Juli", "August", "September", "Oktober", "November", "Dezember")
    MonatE = Array(, "January", "February", "March", "April", "May", "June", _
                     "July", "August", "September", "October", "November", "December")
                     
    ComDtschJ = Array(, _
       "Mappe auf ein anderes bzw. auf das  Folgejahr umstellen:" & Chr(10) & "Men|fffd|leiste (Add Ins) Datensicherung -> Mappe auf Folgejahr umstellen.", _
       "Vorgabe der W|fffd|hrungsbezeichnung, |fffd|nderbar.", _
       "Hier kann eingestellt werden welches Datenblatt beim |fffd|ffnen der Mappe angezeigt wird.")
       
    ComEnglY = Array(, _
       "Reseting workbook for the subsequent or different year" & Chr(10) & "Meunuebar (Add-Ins) Backup -> Reset workbook for subsequent year.", _
       "Default of the currency designation, alterable. ", _
       "Set the default which spreadsheet is shown when workbook opens.")
                     
    ComDtschP = Array(, _
        "Die einzelne Zelle dieser Spalte ist Doppelklick-sensitiv. " & _
        "Die F|fffd|lligkeit der Einnahme bzw. Ausgabe zur jeweils eingetragenen " & _
        "Kategorie wird f|fffd|r alle Monate des Jahres per Doppelklick ein- bzw. ausgetragen." _
        & Chr(10) & Chr(10) & _
        "Einzelne Monate k|fffd|nnen im grauen Zellbereich unter ""F|fffd|lligkeit Monat"" " & _
        "durch Doppelklick aktiviert bzw. deaktiviert werden.", _
        "Die einzelne Zelle des Spaltenbereichs ""F|fffd|lligkeit Monat"" ist " & _
        "Doppelklick-sensitiv." & Chr(10) & Chr(10) & _
        "Die F|fffd|lligkeit wird f|fffd|r den jeweiligen Monat ein- bzw. ausgetragen." _
        )
       
    ComEnglP = Array(, _
        "Each gray cell of this column is double click-sensitive. " & _
        "The amounts of income or spending for each category " & _
        "is inserted for each maturity month by double click on the category." _
        & Chr(10) & Chr(10) & _
        "Single months can be activated or deactivated by double clicking the grey cells " & _
        "in area under headline ""Month due"". ", _
        "Single months can be activated or deactivated by double clicking the grey cells " & _
        "in area under headline ""Month due""." _
        )
        
    ComDtschM = Array(, "Die Spalte ""a. Kto."" ist zum Abgleich mit den Kontobewegungen Ihres Kontoauszuges vorgesehen." & Chr(10) & Chr(10) & _
        "Die einzelne Zelle des grauen Spaltenbereiches ist  Doppelklick-sensitiv." & Chr(10) & Chr(10) & _
        "Durch Doppelklick wird der geplante, und jetzt  lt. Kontoauszug auf dem Bankkonto gebuchte Betrag, in die  Spalte ""Konto"" |fffd|bernommen." & Chr(10) & Chr(10) & _
        "Sind auf diese Weise alle Bewegungen des aktuellen Kontoauszuges hier gebucht, stimmt der ""Kontostand aktuell"" (oben rechts in diesem Datenblatt) mit dem Saldo des Kontoauszuges |fffd|berein.")
     
     ComEnglM = Array(, "The column ""booked"" is intended to enable the ""alignment"" with the movements of your Account statement." & Chr(10) & Chr(10) & _
        "There for each cell of the grey column range is double click sensitiv. " & Chr(10) & Chr(10) & _
        "By double click the ""planned"" amount, listed as movement in the Account statement, gets copied into the column ""Account""." & Chr(10) & Chr(10) & _
        "As soon as all movements of the current Account statement are ""booked"" in this manner, the ""Account balance up-to-date"" (upper right hand side) is conform, to the balance of the Acc. statement.")
    
    Sprache = Left(Kenner, 1)
    AnzFelder = Array(, 9, 5, 2, 7)
    SichTab = Array(, "Jahr", "Planung", "Varianten", "EAMuster")
    Referenzen = Array(, "$C$3:$C$5", "$G$3:$G$4", "$G$6", "$B$8", _
    "C$7:$F$8", "$G$8", "H$7:$K$8")
   
    If InStr(1, Sheets("Planung").Cells(5, 2), "Deutsch") > 0 _
    Or InStr(1, Sheets("Planung").Cells(5, 2), "English") > 0 _
    Then
        AnzFelder(2) = 5
    Else
        AnzFelder(2) = 4
    End If

    For I = 1 To 4               ' Schleife auf Tabellen
        If I = 1 _
        Then
            Set Jahr = Sheets(SichTab(I))
            Jahr.Cells(8, 11) = AuswahlUmsetzen(Jahr.Cells(8, 11), Sprache)
'            Application.ScreenUpdating = False
            If Sheets("Jahr").BedingteFormatierung1.Value _
                Then Sheets("Jahr").BedingteFormatierung1.Caption = IIf(Sprache = "D", "Legende aus", "Legend off") _
                Else Sheets("Jahr").BedingteFormatierung1.Caption = IIf(Sprache = "D", "Legende ein", "Legend on")
'            Application.ScreenUpdating = True
        End If
        
        Call SchutzEntfernen(Sheets(SichTab(I)))
        Sheets(SichTab(I)).Visible = -1
        
        For Suf = 1 To AnzFelder(I)
            Sheets("Img" & I & Sprache).Visible = -1
            Sheets("Img" & I & Sprache).Select

            Select Case (I)
                Case 1, 2, 3
                    Range("Abb" & SichTab(I) & Sprache & Suf).Select
                    Selection.Copy

                    Sheets(SichTab(I)).Select
                    Range("Abb" & SichTab(I) & Suf).Select
                    ActiveSheet.Paste
                    
                    If I > 1 _
                    Then
                        Sheets(SichTab(I)).AddLineBtn.Caption = _
                            IIf(Sprache = "D", "Zeile einf|fffd|gen", "Add row")
                        Sheets(SichTab(I)).DelLineBtn.Caption = _
                            IIf(Sprache = "D", "Zeile l|fffd|schen", "Delete row")
                    End If
                    
                    If I = 2 And Suf = 2 _
                    Then
                        On Error GoTo addcomment1
                        Set myCom = ActiveSheet.Range("B3").AddComment
                        On Error GoTo 0
                        On Error GoTo addcomment2
                        Set myCom2 = Range("AbbPlanung2").AddComment
                        On Error GoTo 0
                        With myCom
                            .Visible = False
                            .Text Text:=IIf(Sprache = "D", ComDtschP(1), ComEnglP(1))
                            .Shape.TextFrame.Characters.Font.Bold = False
                            .Shape.TextFrame.Characters.Font.Size = 8
                            .Shape.Height = 200
                            .Shape.Width = 90
                        End With
                        With myCom2
                            .Visible = False
                            .Text Text:=IIf(Sprache = "D", ComDtschP(2), ComEnglP(2))
                            .Shape.TextFrame.Characters.Font.Bold = False
                            .Shape.TextFrame.Characters.Font.Size = 8
                            .Shape.Height = 120
                            .Shape.Width = 80
                        End With
                    End If
                Case 4
                    If Suf = 1 _
                    Then
                        MonString = "EAMuster"
                        For II = 1 To 12
                            MonString = MonString & "," & Jahr.Cells(5 + II, 2) & ""
                        Next
                        TabTab = Split(MonString, ",", -1)
                        
                        Sheets(SichTab(4)).AddLineBtn.Caption = _
                            IIf(Sprache = "D", "Zeile einf|fffd|gen", "Add row")
                        Sheets(SichTab(4)).DelLineBtn.Caption = _
                            IIf(Sprache = "D", "Zeile l|fffd|schen", "Delete row")
                            
                        If Sprache = "D" _
                        Then
                            Sheets(SichTab(4)).Cells(9, 5).Comment.Text Text:=ComDtschM(1)
                            Sheets(SichTab(4)).Cells(9, 10).Comment.Text Text:=ComDtschM(1)
                        Else
                            Sheets(SichTab(4)).Cells(9, 5).Comment.Text Text:=ComEnglM(1)
                            Sheets(SichTab(4)).Cells(9, 10).Comment.Text Text:=ComEnglM(1)
                        End If
                    End If
                    
                    Sheets(SichTab(4)).Visible = -1
                    Call SchutzEntfernen(Sheets(SichTab(4)))
                    Sheets("Img" & I & Sprache).Visible = -1
                    Sheets("Img" & I & Sprache).Select
                    Range("Abb" & SichTab(I) & Sprache & Suf).Select
                    Selection.Copy
        
                    II = 0
                    Sheets(TabTab(II)).Select
                    Range("Abb" & SichTab(I) & Suf).Select
                    ActiveSheet.Paste
                    Cells(1, 2).Select
                    Sheets("Img" & I & Sprache).Visible = 2
                        
                    For II = 1 To 12
                        Call SchutzEntfernen(Sheets(TabTab(II)))
                        Sheets("Img" & I & Sprache).Visible = -1
                        Sheets("Img" & I & Sprache).Select
                        Range("Abb" & SichTab(I) & Sprache & Suf).Select
                        Selection.Copy
                        
                        Sheets(TabTab(II)).Select
                        Range(Referenzen(Suf)).Select
                        ActiveWorkbook.Names.Add Name:="Referenz", _
                            RefersToR1C1:=Selection
                        Range("Referenz").Select
                        ActiveSheet.Paste
                        
                        If Suf = 1 _
                        Then
                            Sheets(TabTab(II)).AddLineBtn.Caption = _
                                IIf(Sprache = "D", "Zeile einf|fffd|gen", "Add row")
                            Sheets(TabTab(II)).DelLineBtn.Caption = _
                                IIf(Sprache = "D", "Zeile l|fffd|schen", "Delete row")
    
                            Name = Worksheets("Jahr").Cells(II + 5, 2).Text
                            If Sprache = "D" _
                            Then
                                ActiveSheet.Cells(1, 2) = "Monatsdaten " _
                                & Mid(Name, 1, 5) & Sheets("Jahr").Cells(6, 11)
                                ActiveSheet.Cells(9, 5).Comment.Text Text:=ComDtschM(1)
                                ActiveSheet.Cells(9, 10).Comment.Text Text:=ComDtschM(1)
                            Else
                                ActiveSheet.Cells(1, 2) = "Figures " _
                                & Mid(Name, 1, 5) & Sheets("Jahr").Cells(6, 11)
                                ActiveSheet.Cells(9, 5).Comment.Text Text:=ComEnglM(1)
                                ActiveSheet.Cells(9, 10).Comment.Text Text:=ComEnglM(1)
                            End If
                            Cells(10, 7).Select
                        End If
                    Next
                    
                Case Else
            End Select
            If I < 4 _
                Then Cells(5, 2).Select
        Next
        Sheets(SichTab(4)).Visible = 2
        Sheets("Img" & I & Sprache).Visible = 2
    Next
    
    For I = 1 To 3
        If Sprache = "D" _
        Then
            Jahr.Cells(I + 5, 11).Comment.Text Text:=ComDtschJ(I)
        Else
            Jahr.Cells(I + 5, 11).Comment.Text Text:=ComEnglY(I)
        End If
        If I = 1 _
        Then
            If Sprache = "D" _
            Then
                Jahr.Range("I1").Comment.Text Text:= _
                    "Vorschlag: Bei der ersten Verwendung des E/A-Rechners " & _
                    "kann hier der Saldo ""alt"" des aktuellen Kontoauszuges " & _
                    "eingetragen werden." & Chr(10) & "" & Chr(10) & "Siehe " & _
                    " hierzu auch die Bedienanleitung Punkt C.1.  ""|fffd|nderung " & _
                    "Startsaldo Bankkonto""" & Chr(10) & "" & Chr(10)
                Jahr.Range("I1").Comment.Text Text:= _
                    "Vorteil:   Nach Aktivierung der neuen Kontobewegungen in der " & _
                    "Monats-Tabelle stimmt ", Start:=300
                Jahr.Range("I1").Comment.Text Text:= _
                    "der ""Kontostand aktuell"" im lfd. Monat mit dem Saldo ""neu"" " & _
                    "des jeweiligen Kontoauszuges |fffd|berein.", Start:=500
            Else
                Jahr.Range("I1").Comment.Text Text:= _
                    "Suggestion: When you use this calculator first time then insert the " & _
                    "accout balance ""old"" of your present Account statement " & _
                     Chr(10) & "" & Chr(10) & "See also item " & _
                    "C.1. of the documentation ""Changing start balance of Bank Account""" & _
                    Chr(10) & "" & Chr(10)
                Jahr.Range("I1").Comment.Text Text:= _
                     "Advantage:   When movements of the account statement are ""activated"" " & _
                     "in the Months sheets ", Start:=300
                Jahr.Range("I1").Comment.Text Text:= _
                    "the ""Account balance up-to-date"" gets conform to the ""new""" & _
                    " balance of the Acc. statement", Start:=500
            End If
        End If
    Next
    Call BackupReplace("<-", Sprache)
    Exit Sub
    
addcomment1:
    Set myCom = ActiveSheet.Range("B3").Comment
    Resume Next
addcomment2:
    Set myCom2 = Range("AbbPlanung2").Comment
    Resume Next
End Sub



Attribute VB_Name = "Modul1"
Sub Makro2()
Attribute Makro2.VB_ProcData.VB_Invoke_Func = " \n14"
'
' Makro2 Makro
'

'
    With Selection.Interior
        .Pattern = xlSolid
        .PatternColorIndex = xlAutomatic
'        .ThemeColor = xlThemeColorDark1
        .TintAndShade = -0.249977111117893
        .PatternTintAndShade = 0
    End With
End Sub
Sub Makro3()
Attribute Makro3.VB_ProcData.VB_Invoke_Func = " \n14"
'
' Makro3 Makro
'

'
    Application.GoTo Reference:="ArtKtoBew"
    With Selection.Interior
        .PatternColorIndex = xlAutomatic
        .ThemeColor = xlThemeColorDark1
        .TintAndShade = -0.249977111117893
        .PatternTintAndShade = 0
    End With
End Sub
Sub Makro4()
Attribute Makro4.VB_ProcData.VB_Invoke_Func = " \n14"
'
' Makro4 Makro
'

'
    Application.GoTo Reference:="ArtKtoBew"
    With Selection.Interior
        .Pattern = xlSolid
        .PatternColorIndex = xlAutomatic
'        .ThemeColor = xlThemeColorDark1
        .TintAndShade = 0
        .PatternTintAndShade = 0
    End With
End Sub
Attribute VB_Name = "Tabelle1"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Control = "BedingteFormatierung1, 110, 1, MSForms, OptionButton"
Attribute VB_Control = "BedingteFormatierung2, 111, 2, MSForms, OptionButton"
Attribute VB_Control = "cbtInfo, 121, 3, MSForms, CommandButton"
Option Explicit

Private Sub BedingteFormatierung1_Click()
    Application.ScreenUpdating = False
    BedingteFormatierung1.Caption = IIf(Sprache = "D", "Legende aus", "Legend off")
    BedingteFormatierung1.BackStyle = 0
    BedingteFormatierung2.BackStyle = 0
    Call BedingteFarben("Aus")
    Application.ScreenUpdating = True
End Sub

Private Sub BedingteFormatierung2_Click()
    Application.ScreenUpdating = False
    BedingteFormatierung1.Caption = IIf(Sprache = "D", "Legende ein", "Legend on")
    BedingteFormatierung1.BackStyle = 0
    BedingteFormatierung2.BackStyle = 0
    Call BedingteFarben("Ein")
    Call BedingteFarben("Aus2")
    Application.ScreenUpdating = True
End Sub

Private Sub cbtInfo_Click()
    
    If Sprache = "D" _
    Then
        MsgBox "Peter Ostermann" & vbLf & _
        "Copyright 2006" & vbLf & _
        "info@pkf-ostermann.de", vbInformation, "Info Einnahme-, Ausgaben-Rechner"
    Else
        MsgBox "Peter Ostermann" & vbLf & _
        "Copyright 2006" & vbLf & _
        "info@pkf-ostermann.de", vbInformation, "Info Incomes and Spendings Calculator"
    End If
End Sub


Private Sub Worksheet_Beforedoubleclick(ByVal Target As Range, Cancel As Boolean)
    Dim Monat
    Call SchutzEntfernen(Sheets("Jahr"))
    If Not Application.Intersect(Target, [MonatE]) Is Nothing _
    Then
        Monat = Target.Text
        Sheets(Monat).Select
    End If
    Call SchutzSetzen(Sheets("Jahr"), True)
End Sub

Private Sub CbLinks1_Click()
    Call Zur|fffd|ck
End Sub

Private Sub CBRechts1_Click()
    Call Vor
End Sub
Private Sub Worksheet_Change(ByVal Target As Range)

    Application.ScreenUpdating = False
    Call SchutzEntfernen(Sheets("Jahr"))
    Application.ScreenUpdating = True
    If Not Application.Intersect(Target, [syncsumme]) Is Nothing _
    Then
        Call JahresZahlenErmitteln
    End If
    If FolgejahrUmstellung = False _
        Then Call SchutzSetzen(Sheets("Jahr"), True)
End Sub

Public Sub BedingteFarben(Kenner)
    Dim Grenzwert
    Grenzwert = 999.99
    If Kenner = "Aus2" _
    Then
        Range("BedingteFarben2").Select
    Else
        Range("BedingteFarben").Select
    End If
    
    Call SchutzEntfernen(Sheets("Jahr"))
    Selection.FormatConditions.Delete
      
    If Kenner = "Aus" Or Kenner = "Aus2" _
    Then
        Cells(1, 2).Select
        Call SchutzSetzen(Sheets("Jahr"), True)
        Exit Sub
    End If
    On Error Resume Next

    Selection.FormatConditions.Add Type:=xlCellValue, Operator:=xlLess, _
        Formula1:="0"
    Selection.FormatConditions(1).Interior.ColorIndex = 38
    Selection.FormatConditions.Add Type:=xlCellValue, Operator:=xlBetween, _
        Formula1:="0", Formula2:=Grenzwert
    Selection.FormatConditions(2).Interior.ColorIndex = xlNone
    Selection.FormatConditions.Add Type:=xlCellValue, Operator:=xlGreater, _
        Formula1:=Grenzwert
    Selection.FormatConditions(3).Interior.ColorIndex = 35
    
    Call SchutzSetzen(Sheets("Jahr"), True)
    Cells(1, 2).Select
End Sub
Attribute VB_Name = "Tabelle10"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Tabelle13"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Tabelle14"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Tabelle15"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Tabelle16"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Tabelle17"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Control = "DelLineBtn, 17, 2, MSForms, CommandButton"
Attribute VB_Control = "AddLineBtn, 18, 3, MSForms, CommandButton"
Option Explicit

Private Sub Worksheet_Activate()
    Dim I
    Dim Calc
    Dim Change
    Dim Scrupd
    
    Change = Application.EnableEvents
    Scrupd = Application.ScreenUpdating
    Calc = Application.Calculation
    
    Application.EnableEvents = False
    Application.ScreenUpdating = False
    Application.Calculation = xlManual
    
    If Cells(9, 5) = "x" _
    Then
        For I = 10 To 51
            If Cells(I, 5 - 1).Text <> "" _
            Or Cells(I, 5 - 2).Text <> "" _
            Then
                Call SchutzEntfernen(ActiveSheet)
                Cells(I, 5) = "x"
                Call SchutzSetzen(ActiveSheet, Z_Protect)
            Else
                Call SchutzEntfernen(ActiveSheet)
                Cells(I, 5) = ""
                Call SchutzSetzen(ActiveSheet, Z_Protect)
            End If
        Next I
    End If

    Application.EnableEvents = Change
    Application.ScreenUpdating = False
    Application.Calculation = Calc
    Application.ScreenUpdating = Scrupd
End Sub

Private Sub Worksheet_Beforedoubleclick(ByVal Target As Range, Cancel As Boolean)
    Dim Spalte
    Dim BlattNr
    Dim Calc
    Dim Change
    Dim Scrupd
  
    Change = Application.EnableEvents
    Scrupd = Application.ScreenUpdating
    Calc = Application.Calculation
    
    Application.EnableEvents = False
    Application.Calculation = xlManual
    Application.ScreenUpdating = False

    If Not Application.Intersect(Target, [ungepX]) Is Nothing _
    Or Not Application.Intersect(Target, [gepX]) Is Nothing _
    Then
        Call SchutzEntfernen(ActiveSheet)
        If IsEmpty(Target.Value) _
        Then
            Target.Value = "x"
            Target.Font.Bold = True
        Else
            Target.Font.Bold = False
            Target.Value = ""
        End If
        Target.Offset(1, 0).Select
        Call SchutzSetzen(ActiveSheet, Z_Protect)
    End If
    Application.EnableEvents = Change
    Application.ScreenUpdating = False
    Application.Calculation = Calc
    Call JahresZahlenErmitteln
    Application.ScreenUpdating = Scrupd
End Sub

Private Sub Worksheet_Change(ByVal Target As Range)
    Dim Pos As Range
    Dim Zeile
    Dim Spalte
    Dim Calc
    Dim Change
    Dim Scrupd
  
    Change = Application.EnableEvents
    Scrupd = Application.ScreenUpdating
    Calc = Application.Calculation
    
    Application.EnableEvents = False
    Application.Calculation = xlManual
    Application.ScreenUpdating = False
       
    If Application.Intersect(Target, [ungepAusg]) Is Nothing _
    And Application.Intersect(Target, [ungepEinn]) Is Nothing _
    Then
        Call JahresZahlenErmitteln
        GoTo Ende
    End If
    On Error GoTo Ende

    Set Pos = Target
    Spalte = Pos.Column
    Zeile = Pos.Row
    Select Case (True)
        Case Not Application.Intersect(Target, [ungepAusg]) Is Nothing
            If Not IsEmpty(Pos.Offset(0, 0)) _
            And Not IsEmpty(Pos.Offset(0, 1)) _
                Then Pos.Offset(0, 1) = ""
            
        Case Not Application.Intersect(Target, [ungepEinn]) Is Nothing
             If Not IsEmpty(Pos.Offset(0, 0)) _
             And Not IsEmpty(Pos.Offset(0, -1)) _
                Then Pos.Offset(0, -1) = ""
        Case Else
    End Select
    
    Call SchutzEntfernen(ActiveSheet)
    If Application.Intersect(Target, [ungepAusg]) Is Nothing _
    Or Application.Intersect(Target, [ungepEinn]) Is Nothing _
    Then
        If Application.Intersect(Target, [ungepAusg]) Is Nothing _
        Then
            If IsEmpty(Cells(Zeile, Spalte)) _
            And IsEmpty(Cells(Zeile, Spalte - 1)) _
                Then Pos.Offset(0, 1) = ""
        Else
            If IsEmpty(Cells(Zeile, Spalte)) _
            And IsEmpty(Cells(Zeile, Spalte + 1)) _
                Then Pos.Offset(0, 2) = ""
        End If
    End If
Ende:
    Call SchutzSetzen(ActiveSheet, Z_Protect)
    Application.EnableEvents = Change
    Application.ScreenUpdating = False
    Application.Calculation = Calc
    Call JahresZahlenErmitteln
    Application.ScreenUpdating = Scrupd
End Sub

Private Sub CbLinks4_Click()
    Call Zur|fffd|ck
End Sub

Private Sub CbRechts4_Click()
    Call Vor
End Sub

Private Sub AddLineBtn_Click()
    Call AddLine
End Sub

Private Sub DelLineBtn_Click()
    Call DelLine
End Sub






















Attribute VB_Name = "Tabelle18"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Control = "DelLineBtn, 1, 0, MSForms, CommandButton"
Attribute VB_Control = "AddLineBtn, 2, 1, MSForms, CommandButton"
Option Explicit

Private Sub Worksheet_Activate()
    Dim I
    Dim Calc
    Dim Change
    Dim Scrupd
    
    Change = Application.EnableEvents
    Scrupd = Application.ScreenUpdating
    Calc = Application.Calculation
    
    Application.EnableEvents = False
    Application.ScreenUpdating = False
    Application.Calculation = xlManual
    
    If Cells(9, 5) = "x" _
    Then
        For I = 10 To 51
            If Cells(I, 5 - 1).Text <> "" _
            Or Cells(I, 5 - 2).Text <> "" _
            Then
                Call SchutzEntfernen(ActiveSheet)
                Cells(I, 5) = "x"
                Call SchutzSetzen(ActiveSheet, Z_Protect)
            Else
                Call SchutzEntfernen(ActiveSheet)
                Cells(I, 5) = ""
                Call SchutzSetzen(ActiveSheet, Z_Protect)
            End If
        Next I
    End If

    Application.EnableEvents = Change
    Application.ScreenUpdating = False
    Application.Calculation = Calc
    Application.ScreenUpdating = Scrupd
End Sub

Private Sub Worksheet_Beforedoubleclick(ByVal Target As Range, Cancel As Boolean)
    Dim Spalte
    Dim BlattNr
    Dim Calc
    Dim Change
    Dim Scrupd
  
    Change = Application.EnableEvents
    Scrupd = Application.ScreenUpdating
    Calc = Application.Calculation
    
    Application.EnableEvents = False
    Application.Calculation = xlManual
    Application.ScreenUpdating = False

    If Not Application.Intersect(Target, [ungepX]) Is Nothing _
    Or Not Application.Intersect(Target, [gepX]) Is Nothing _
    Then
        Call SchutzEntfernen(ActiveSheet)
        If IsEmpty(Target.Value) _
        Then
            Target.Value = "x"
            Target.Font.Bold = True
        Else
            Target.Font.Bold = False
            Target.Value = ""
        End If
        Target.Offset(1, 0).Select
        Call SchutzSetzen(ActiveSheet, Z_Protect)
    End If
    Application.EnableEvents = Change
    Application.ScreenUpdating = False
    Application.Calculation = Calc
    Call JahresZahlenErmitteln
    Application.ScreenUpdating = Scrupd
End Sub

Private Sub Worksheet_Change(ByVal Target As Range)
    Dim Pos As Range
    Dim Zeile
    Dim Spalte
    Dim Calc
    Dim Change
    Dim Scrupd
  
    Change = Application.EnableEvents
    Scrupd = Application.ScreenUpdating
    Calc = Application.Calculation
    
    Application.EnableEvents = False
    Application.Calculation = xlManual
    Application.ScreenUpdating = False
       
    If Application.Intersect(Target, [ungepAusg]) Is Nothing _
    And Application.Intersect(Target, [ungepEinn]) Is Nothing _
    Then
        Call JahresZahlenErmitteln
        GoTo Ende
    End If
    On Error GoTo Ende

    Set Pos = Target
    Spalte = Pos.Column
    Zeile = Pos.Row
    Select Case (True)
        Case Not Application.Intersect(Target, [ungepAusg]) Is Nothing
            If Not IsEmpty(Pos.Offset(0, 0)) _
            And Not IsEmpty(Pos.Offset(0, 1)) _
                Then Pos.Offset(0, 1) = ""
            
        Case Not Application.Intersect(Target, [ungepEinn]) Is Nothing
             If Not IsEmpty(Pos.Offset(0, 0)) _
             And Not IsEmpty(Pos.Offset(0, -1)) _
                Then Pos.Offset(0, -1) = ""
        Case Else
    End Select
    
    Call SchutzEntfernen(ActiveSheet)
    If Application.Intersect(Target, [ungepAusg]) Is Nothing _
    Or Application.Intersect(Target, [ungepEinn]) Is Nothing _
    Then
        If Application.Intersect(Target, [ungepAusg]) Is Nothing _
        Then
            If IsEmpty(Cells(Zeile, Spalte)) _
            And IsEmpty(Cells(Zeile, Spalte - 1)) _
                Then Pos.Offset(0, 1) = ""
        Else
            If IsEmpty(Cells(Zeile, Spalte)) _
            And IsEmpty(Cells(Zeile, Spalte + 1)) _
                Then Pos.Offset(0, 2) = ""
        End If
    End If
Ende:
    Call SchutzSetzen(ActiveSheet, Z_Protect)
    Application.EnableEvents = Change
    Application.ScreenUpdating = False
    Application.Calculation = Calc
    Call JahresZahlenErmitteln
    Application.ScreenUpdating = Scrupd
End Sub

Private Sub CbLinks4_Click()
    Call Zur|fffd|ck
End Sub

Private Sub CbRechts4_Click()
    Call Vor
End Sub

Private Sub AddLineBtn_Click()
    Call AddLine
End Sub

Private Sub DelLineBtn_Click()
    Call DelLine
End Sub






















Attribute VB_Name = "Tabelle19"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Control = "DelLineBtn, 1, 0, MSForms, CommandButton"
Attribute VB_Control = "AddLineBtn, 2, 1, MSForms, CommandButton"
Option Explicit

Private Sub Worksheet_Activate()
    Dim I
    Dim Calc
    Dim Change
    Dim Scrupd
    
    Change = Application.EnableEvents
    Scrupd = Application.ScreenUpdating
    Calc = Application.Calculation
    
    Application.EnableEvents = False
    Application.ScreenUpdating = False
    Application.Calculation = xlManual
    
    If Cells(9, 5) = "x" _
    Then
        For I = 10 To 51
            If Cells(I, 5 - 1).Text <> "" _
            Or Cells(I, 5 - 2).Text <> "" _
            Then
                Call SchutzEntfernen(ActiveSheet)
                Cells(I, 5) = "x"
                Call SchutzSetzen(ActiveSheet, Z_Protect)
            Else
                Call SchutzEntfernen(ActiveSheet)
                Cells(I, 5) = ""
                Call SchutzSetzen(ActiveSheet, Z_Protect)
            End If
        Next I
    End If

    Application.EnableEvents = Change
    Application.ScreenUpdating = False
    Application.Calculation = Calc
    Application.ScreenUpdating = Scrupd
End Sub

Private Sub Worksheet_Beforedoubleclick(ByVal Target As Range, Cancel As Boolean)
    Dim Spalte
    Dim BlattNr
    Dim Calc
    Dim Change
    Dim Scrupd
  
    Change = Application.EnableEvents
    Scrupd = Application.ScreenUpdating
    Calc = Application.Calculation
    
    Application.EnableEvents = False
    Application.Calculation = xlManual
    Application.ScreenUpdating = False

    If Not Application.Intersect(Target, [ungepX]) Is Nothing _
    Or Not Application.Intersect(Target, [gepX]) Is Nothing _
    Then
        Call SchutzEntfernen(ActiveSheet)
        If IsEmpty(Target.Value) _
        Then
            Target.Value = "x"
            Target.Font.Bold = True
        Else
            Target.Font.Bold = False
            Target.Value = ""
        End If
        Target.Offset(1, 0).Select
        Call SchutzSetzen(ActiveSheet, Z_Protect)
    End If
    Application.EnableEvents = Change
    Application.ScreenUpdating = False
    Application.Calculation = Calc
    Call JahresZahlenErmitteln
    Application.ScreenUpdating = Scrupd
End Sub

Private Sub Worksheet_Change(ByVal Target As Range)
    Dim Pos As Range
    Dim Zeile
    Dim Spalte
    Dim Calc
    Dim Change
    Dim Scrupd
  
    Change = Application.EnableEvents
    Scrupd = Application.ScreenUpdating
    Calc = Application.Calculation
    
    Application.EnableEvents = False
    Application.Calculation = xlManual
    Application.ScreenUpdating = False
       
    If Application.Intersect(Target, [ungepAusg]) Is Nothing _
    And Application.Intersect(Target, [ungepEinn]) Is Nothing _
    Then
        Call JahresZahlenErmitteln
        GoTo Ende
    End If
    On Error GoTo Ende

    Set Pos = Target
    Spalte = Pos.Column
    Zeile = Pos.Row
    Select Case (True)
        Case Not Application.Intersect(Target, [ungepAusg]) Is Nothing
            If Not IsEmpty(Pos.Offset(0, 0)) _
            And Not IsEmpty(Pos.Offset(0, 1)) _
                Then Pos.Offset(0, 1) = ""
            
        Case Not Application.Intersect(Target, [ungepEinn]) Is Nothing
             If Not IsEmpty(Pos.Offset(0, 0)) _
             And Not IsEmpty(Pos.Offset(0, -1)) _
                Then Pos.Offset(0, -1) = ""
        Case Else
    End Select
    
    Call SchutzEntfernen(ActiveSheet)
    If Application.Intersect(Target, [ungepAusg]) Is Nothing _
    Or Application.Intersect(Target, [ungepEinn]) Is Nothing _
    Then
        If Application.Intersect(Target, [ungepAusg]) Is Nothing _
        Then
            If IsEmpty(Cells(Zeile, Spalte)) _
            And IsEmpty(Cells(Zeile, Spalte - 1)) _
                Then Pos.Offset(0, 1) = ""
        Else
            If IsEmpty(Cells(Zeile, Spalte)) _
            And IsEmpty(Cells(Zeile, Spalte + 1)) _
                Then Pos.Offset(0, 2) = ""
        End If
    End If
Ende:
    Call SchutzSetzen(ActiveSheet, Z_Protect)
    Application.EnableEvents = Change
    Application.ScreenUpdating = False
    Application.Calculation = Calc
    Call JahresZahlenErmitteln
    Application.ScreenUpdating = Scrupd
End Sub

Private Sub CbLinks4_Click()
    Call Zur|fffd|ck
End Sub

Private Sub CbRechts4_Click()
    Call Vor
End Sub

Private Sub AddLineBtn_Click()
    Call AddLine
End Sub

Private Sub DelLineBtn_Click()
    Call DelLine
End Sub






















Attribute VB_Name = "Tabelle2"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Control = "DelLineBtn, 59, 3, MSForms, CommandButton"
Attribute VB_Control = "AddLineBtn, 60, 4, MSForms, CommandButton"
Option Explicit


Private Sub Worksheet_Change(ByVal Target As Range)
    Static Pos As Range
    Static Zeile
    Static Spalte
    Static Zeile2
    Static Spalte2
    Dim x
    Dim Calc
    Dim Change
    Dim Scrupd
    
     If Application.Intersect(Target, [AusgabePeriodisch]) Is Nothing _
     And Application.Intersect(Target, [EinnahmePeriodisch]) Is Nothing _
    Then
        If Not Application.Intersect(Target, [BuchText]) Is Nothing _
        Then
            Call F|fffd|lligkeitMonatLoeschen(Target)
        End If
        Exit Sub
    End If

    Change = Application.EnableEvents
    Scrupd = Application.ScreenUpdating
    Calc = Application.Calculation
    
    Application.EnableEvents = False
    Application.ScreenUpdating = False
    Application.Calculation = xlManual
    
    On Error GoTo Ende

    Set Pos = Target
    Zeile = Pos.Row
    Spalte = Pos.Column
    Call SchutzEntfernen(ActiveSheet)
    
    Select Case (True)
        Case Not Application.Intersect(Target, [AusgabePeriodisch]) Is Nothing
            If Not Application.Intersect(Target, [AusgabePeriodisch]) Is Nothing _
            And Not Application.Intersect(Target, [EinnahmePeriodisch]) Is Nothing _
            Then
            Else
                If Not IsEmpty(Pos.Offset(0, 0)) _
                And Not IsEmpty(Pos.Offset(0, 1)) _
                Then
                    Pos.Offset(0, 1) = ""
                Else
                    Call F|fffd|lligkeitMonatLoeschen(Target)
                End If
            End If
        Case Not Application.Intersect(Target, [EinnahmePeriodisch]) Is Nothing
            If Not Application.Intersect(Target, [AusgabePeriodisch]) Is Nothing _
            And Not Application.Intersect(Target, [EinnahmePeriodisch]) Is Nothing _
            Then
            Else
                If Not IsEmpty(IsEmpty(Pos.Offset(0, 0))) _
                And Not IsEmpty(Pos.Offset(0, -1)) _
                Then
                    Pos.Offset(0, -1) = ""
                Else
                    Call F|fffd|lligkeitMonatLoeschen(Target)
                End If
            End If
        Case Else
    End Select
    Application.Calculation = xlCalculationAutomatic
    Call JahresZahlenErmitteln
Ende:
    Call SchutzSetzen(ActiveSheet, Z_Protect)
    Application.EnableEvents = Change
    Application.ScreenUpdating = False
    Application.Calculation = Calc
    Application.ScreenUpdating = Scrupd
End Sub

Private Sub Worksheet_Beforedoubleclick(ByVal Target As Range, Cancel As Boolean)
    Static FlipFlop As Boolean
    Dim Spalte
    Dim Eintrag
    Dim I
    Dim Calc
    Dim Change
    Dim Scrupd
    
    Change = Application.EnableEvents
    Scrupd = Application.ScreenUpdating
    Calc = Application.Calculation
   
    If Application.Intersect(Target, [MonatsMatrix]) Is Nothing _
    And Application.Intersect(Target, [BuchText]) Is Nothing _
        Then Exit Sub
     
    Application.EnableEvents = False
    Application.ScreenUpdating = False
    Application.Calculation = xlManual
           
    Call SchutzEntfernen(Sheets("Planung"))
    
    Spalte = Target.Column
    If Not Application.Intersect(Target, [MonatsMatrix]) Is Nothing _
    Then
        If Target.Offset(0, 0) = "" _
            Then Cells(Target.Row, Spalte) = Spalte - 4 _
            Else Cells(Target.Row, Spalte) = ""
    End If
    
    If FlipFlop _
        Then FlipFlop = False _
        Else FlipFlop = True
    If Not Application.Intersect(Target, [BuchText]) Is Nothing _
    Then
        Eintrag = Target.Offset(0, 1 + 2)
        For I = 1 To 12
            If IsEmpty(Eintrag) _
                Then Target.Offset(0, I + 2) = I _
                Else Target.Offset(0, I + 2) = ""
        Next I
    End If
    Call SchutzSetzen(Sheets("Planung"), Z_Protect)
    
    Target.Offset(0, 1).Select
    
    Application.EnableEvents = Change
    Application.ScreenUpdating = False
    Application.Calculation = Calc
    Call JahresZahlenErmitteln
    Application.ScreenUpdating = Scrupd
End Sub

Private Sub CbLinks2_Click()
    Call Zur|fffd|ck
End Sub

Private Sub CBRechts2_Click()
    Call Vor
End Sub

Private Sub AddLineBtn_Click()
    Call AddLine
End Sub

Private Sub DelLineBtn_Click()
    Call DelLine
End Sub


Public Sub F|fffd|lligkeitMonatLoeschen(Target)
    Dim Eintrag1, Eintrag2, Eintrag3, I
    If Not Application.Intersect(Target, [AusgabePeriodisch]) Is Nothing _
    Then
        Eintrag1 = Target.Offset(0, 0)
        Eintrag2 = Target.Offset(0, 1)
        Eintrag3 = Target.Offset(0, -1)
        
        If IsEmpty(Eintrag1) _
        And IsEmpty(Eintrag2) _
        And IsEmpty(Eintrag3) _
        Then
            For I = 1 To 12
                Target.Offset(0, I + 1) = ""
            Next I
        End If
    End If
    If Not Application.Intersect(Target, [EinnahmePeriodisch]) Is Nothing _
    Then
        Eintrag1 = Target.Offset(0, 0)
        Eintrag2 = Target.Offset(0, -1)
        Eintrag3 = Target.Offset(0, -2)
        
        If IsEmpty(Eintrag1) _
        And IsEmpty(Eintrag2) _
        And IsEmpty(Eintrag3) _
        Then
            For I = 1 To 12
                Target.Offset(0, I) = ""
            Next I
        End If
    End If
    If Not Application.Intersect(Target, [BuchText]) Is Nothing _
    Then
        Eintrag1 = Target.Offset(0, 0)
        Eintrag2 = Target.Offset(0, 1)
        Eintrag3 = Target.Offset(0, 2)
        
        Application.EnableEvents = False
        Application.ScreenUpdating = False
        Application.Calculation = xlManual
        Call SchutzEntfernen(ActiveSheet)
        
        If IsEmpty(Eintrag1) _
        And IsEmpty(Eintrag2) _
        And IsEmpty(Eintrag3) _
        Then
            For I = 1 To 12
                Target.Offset(0, I + 2) = ""
            Next I
        End If
        Application.EnableEvents = True
        Application.ScreenUpdating = True
        Application.Calculation = xlAutomatic
        Call SchutzSetzen(ActiveSheet, Z_Protect)
    End If
End Sub









Attribute VB_Name = "Tabelle20"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Control = "DelLineBtn, 1, 0, MSForms, CommandButton"
Attribute VB_Control = "AddLineBtn, 2, 1, MSForms, CommandButton"
Option Explicit

Private Sub Worksheet_Activate()
    Dim I
    Dim Calc
    Dim Change
    Dim Scrupd
    
    Change = Application.EnableEvents
    Scrupd = Application.ScreenUpdating
    Calc = Application.Calculation
    
    Application.EnableEvents = False
    Application.ScreenUpdating = False
    Application.Calculation = xlManual
    
    If Cells(9, 5) = "x" _
    Then
        For I = 10 To 51
            If Cells(I, 5 - 1).Text <> "" _
            Or Cells(I, 5 - 2).Text <> "" _
            Then
                Call SchutzEntfernen(ActiveSheet)
                Cells(I, 5) = "x"
                Call SchutzSetzen(ActiveSheet, Z_Protect)
            Else
                Call SchutzEntfernen(ActiveSheet)
                Cells(I, 5) = ""
                Call SchutzSetzen(ActiveSheet, Z_Protect)
            End If
        Next I
    End If

    Application.EnableEvents = Change
    Application.ScreenUpdating = False
    Application.Calculation = Calc
    Application.ScreenUpdating = Scrupd
End Sub

Private Sub Worksheet_Beforedoubleclick(ByVal Target As Range, Cancel As Boolean)
    Dim Spalte
    Dim BlattNr
    Dim Calc
    Dim Change
    Dim Scrupd
  
    Change = Application.EnableEvents
    Scrupd = Application.ScreenUpdating
    Calc = Application.Calculation
    
    Application.EnableEvents = False
    Application.Calculation = xlManual
    Application.ScreenUpdating = False

    If Not Application.Intersect(Target, [ungepX]) Is Nothing _
    Or Not Application.Intersect(Target, [gepX]) Is Nothing _
    Then
        Call SchutzEntfernen(ActiveSheet)
        If IsEmpty(Target.Value) _
        Then
            Target.Value = "x"
            Target.Font.Bold = True
        Else
            Target.Font.Bold = False
            Target.Value = ""
        End If
        Target.Offset(1, 0).Select
        Call SchutzSetzen(ActiveSheet, Z_Protect)
    End If
    Application.EnableEvents = Change
    Application.ScreenUpdating = False
    Application.Calculation = Calc
    Call JahresZahlenErmitteln
    Application.ScreenUpdating = Scrupd
End Sub

Private Sub Worksheet_Change(ByVal Target As Range)
    Dim Pos As Range
    Dim Zeile
    Dim Spalte
    Dim Calc
    Dim Change
    Dim Scrupd
  
    Change = Application.EnableEvents
    Scrupd = Application.ScreenUpdating
    Calc = Application.Calculation
    
    Application.EnableEvents = False
    Application.Calculation = xlManual
    Application.ScreenUpdating = False
       
    If Application.Intersect(Target, [ungepAusg]) Is Nothing _
    And Application.Intersect(Target, [ungepEinn]) Is Nothing _
    Then
        Call JahresZahlenErmitteln
        GoTo Ende
    End If
    On Error GoTo Ende

    Set Pos = Target
    Spalte = Pos.Column
    Zeile = Pos.Row
    Select Case (True)
        Case Not Application.Intersect(Target, [ungepAusg]) Is Nothing
            If Not IsEmpty(Pos.Offset(0, 0)) _
            And Not IsEmpty(Pos.Offset(0, 1)) _
                Then Pos.Offset(0, 1) = ""
            
        Case Not Application.Intersect(Target, [ungepEinn]) Is Nothing
             If Not IsEmpty(Pos.Offset(0, 0)) _
             And Not IsEmpty(Pos.Offset(0, -1)) _
                Then Pos.Offset(0, -1) = ""
        Case Else
    End Select
    
    Call SchutzEntfernen(ActiveSheet)
    If Application.Intersect(Target, [ungepAusg]) Is Nothing _
    Or Application.Intersect(Target, [ungepEinn]) Is Nothing _
    Then
        If Application.Intersect(Target, [ungepAusg]) Is Nothing _
        Then
            If IsEmpty(Cells(Zeile, Spalte)) _
            And IsEmpty(Cells(Zeile, Spalte - 1)) _
                Then Pos.Offset(0, 1) = ""
        Else
            If IsEmpty(Cells(Zeile, Spalte)) _
            And IsEmpty(Cells(Zeile, Spalte + 1)) _
                Then Pos.Offset(0, 2) = ""
        End If
    End If
Ende:
    Call SchutzSetzen(ActiveSheet, Z_Protect)
    Application.EnableEvents = Change
    Application.ScreenUpdating = False
    Application.Calculation = Calc
    Call JahresZahlenErmitteln
    Application.ScreenUpdating = Scrupd
End Sub

Private Sub CbLinks4_Click()
    Call Zur|fffd|ck
End Sub

Private Sub CbRechts4_Click()
    Call Vor
End Sub

Private Sub AddLineBtn_Click()
    Call AddLine
End Sub

Private Sub DelLineBtn_Click()
    Call DelLine
End Sub






















Attribute VB_Name = "Tabelle21"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Control = "DelLineBtn, 1, 0, MSForms, CommandButton"
Attribute VB_Control = "AddLineBtn, 2, 1, MSForms, CommandButton"
Option Explicit

Private Sub Worksheet_Activate()
    Dim I
    Dim Calc
    Dim Change
    Dim Scrupd
    
    Change = Application.EnableEvents
    Scrupd = Application.ScreenUpdating
    Calc = Application.Calculation
    
    Application.EnableEvents = False
    Application.ScreenUpdating = False
    Application.Calculation = xlManual
    
    If Cells(9, 5) = "x" _
    Then
        For I = 10 To 51
            If Cells(I, 5 - 1).Text <> "" _
            Or Cells(I, 5 - 2).Text <> "" _
            Then
                Call SchutzEntfernen(ActiveSheet)
                Cells(I, 5) = "x"
                Call SchutzSetzen(ActiveSheet, Z_Protect)
            Else
                Call SchutzEntfernen(ActiveSheet)
                Cells(I, 5) = ""
                Call SchutzSetzen(ActiveSheet, Z_Protect)
            End If
        Next I
    End If

    Application.EnableEvents = Change
    Application.ScreenUpdating = False
    Application.Calculation = Calc
    Application.ScreenUpdating = Scrupd
End Sub

Private Sub Worksheet_Beforedoubleclick(ByVal Target As Range, Cancel As Boolean)
    Dim Spalte
    Dim BlattNr
    Dim Calc
    Dim Change
    Dim Scrupd
  
    Change = Application.EnableEvents
    Scrupd = Application.ScreenUpdating
    Calc = Application.Calculation
    
    Application.EnableEvents = False
    Application.Calculation = xlManual
    Application.ScreenUpdating = False

    If Not Application.Intersect(Target, [ungepX]) Is Nothing _
    Or Not Application.Intersect(Target, [gepX]) Is Nothing _
    Then
        Call SchutzEntfernen(ActiveSheet)
        If IsEmpty(Target.Value) _
        Then
            Target.Value = "x"
            Target.Font.Bold = True
        Else
            Target.Font.Bold = False
            Target.Value = ""
        End If
        Target.Offset(1, 0).Select
        Call SchutzSetzen(ActiveSheet, Z_Protect)
    End If
    Application.EnableEvents = Change
    Application.ScreenUpdating = False
    Application.Calculation = Calc
    Call JahresZahlenErmitteln
    Application.ScreenUpdating = Scrupd
End Sub

Private Sub Worksheet_Change(ByVal Target As Range)
    Dim Pos As Range
    Dim Zeile
    Dim Spalte
    Dim Calc
    Dim Change
    Dim Scrupd
  
    Change = Application.EnableEvents
    Scrupd = Application.ScreenUpdating
    Calc = Application.Calculation
    
    Application.EnableEvents = False
    Application.Calculation = xlManual
    Application.ScreenUpdating = False
       
    If Application.Intersect(Target, [ungepAusg]) Is Nothing _
    And Application.Intersect(Target, [ungepEinn]) Is Nothing _
    Then
        Call JahresZahlenErmitteln
        GoTo Ende
    End If
    On Error GoTo Ende

    Set Pos = Target
    Spalte = Pos.Column
    Zeile = Pos.Row
    Select Case (True)
        Case Not Application.Intersect(Target, [ungepAusg]) Is Nothing
            If Not IsEmpty(Pos.Offset(0, 0)) _
            And Not IsEmpty(Pos.Offset(0, 1)) _
                Then Pos.Offset(0, 1) = ""
            
        Case Not Application.Intersect(Target, [ungepEinn]) Is Nothing
             If Not IsEmpty(Pos.Offset(0, 0)) _
             And Not IsEmpty(Pos.Offset(0, -1)) _
                Then Pos.Offset(0, -1) = ""
        Case Else
    End Select
    
    Call SchutzEntfernen(ActiveSheet)
    If Application.Intersect(Target, [ungepAusg]) Is Nothing _
    Or Application.Intersect(Target, [ungepEinn]) Is Nothing _
    Then
        If Application.Intersect(Target, [ungepAusg]) Is Nothing _
        Then
            If IsEmpty(Cells(Zeile, Spalte)) _
            And IsEmpty(Cells(Zeile, Spalte - 1)) _
                Then Pos.Offset(0, 1) = ""
        Else
            If IsEmpty(Cells(Zeile, Spalte)) _
            And IsEmpty(Cells(Zeile, Spalte + 1)) _
                Then Pos.Offset(0, 2) = ""
        End If
    End If
Ende:
    Call SchutzSetzen(ActiveSheet, Z_Protect)
    Application.EnableEvents = Change
    Application.ScreenUpdating = False
    Application.Calculation = Calc
    Call JahresZahlenErmitteln
    Application.ScreenUpdating = Scrupd
End Sub

Private Sub CbLinks4_Click()
    Call Zur|fffd|ck
End Sub

Private Sub CbRechts4_Click()
    Call Vor
End Sub

Private Sub AddLineBtn_Click()
    Call AddLine
End Sub

Private Sub DelLineBtn_Click()
    Call DelLine
End Sub






















Attribute VB_Name = "Tabelle22"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Control = "DelLineBtn, 1, 0, MSForms, CommandButton"
Attribute VB_Control = "AddLineBtn, 2, 1, MSForms, CommandButton"
Option Explicit

Private Sub Worksheet_Activate()
    Dim I
    Dim Calc
    Dim Change
    Dim Scrupd
    
    Change = Application.EnableEvents
    Scrupd = Application.ScreenUpdating
    Calc = Application.Calculation
    
    Application.EnableEvents = False
    Application.ScreenUpdating = False
    Application.Calculation = xlManual
    
    If Cells(9, 5) = "x" _
    Then
        For I = 10 To 51
            If Cells(I, 5 - 1).Text <> "" _
            Or Cells(I, 5 - 2).Text <> "" _
            Then
                Call SchutzEntfernen(ActiveSheet)
                Cells(I, 5) = "x"
                Call SchutzSetzen(ActiveSheet, Z_Protect)
            Else
                Call SchutzEntfernen(ActiveSheet)
                Cells(I, 5) = ""
                Call SchutzSetzen(ActiveSheet, Z_Protect)
            End If
        Next I
    End If

    Application.EnableEvents = Change
    Application.ScreenUpdating = False
    Application.Calculation = Calc
    Application.ScreenUpdating = Scrupd
End Sub

Private Sub Worksheet_Beforedoubleclick(ByVal Target As Range, Cancel As Boolean)
    Dim Spalte
    Dim BlattNr
    Dim Calc
    Dim Change
    Dim Scrupd
  
    Change = Application.EnableEvents
    Scrupd = Application.ScreenUpdating
    Calc = Application.Calculation
    
    Application.EnableEvents = False
    Application.Calculation = xlManual
    Application.ScreenUpdating = False

    If Not Application.Intersect(Target, [ungepX]) Is Nothing _
    Or Not Application.Intersect(Target, [gepX]) Is Nothing _
    Then
        Call SchutzEntfernen(ActiveSheet)
        If IsEmpty(Target.Value) _
        Then
            Target.Value = "x"
            Target.Font.Bold = True
        Else
            Target.Font.Bold = False
            Target.Value = ""
        End If
        Target.Offset(1, 0).Select
        Call SchutzSetzen(ActiveSheet, Z_Protect)
    End If
    Application.EnableEvents = Change
    Application.ScreenUpdating = False
    Application.Calculation = Calc
    Call JahresZahlenErmitteln
    Application.ScreenUpdating = Scrupd
End Sub

Private Sub Worksheet_Change(ByVal Target As Range)
    Dim Pos As Range
    Dim Zeile
    Dim Spalte
    Dim Calc
    Dim Change
    Dim Scrupd
  
    Change = Application.EnableEvents
    Scrupd = Application.ScreenUpdating
    Calc = Application.Calculation
    
    Application.EnableEvents = False
    Application.Calculation = xlManual
    Application.ScreenUpdating = False
       
    If Application.Intersect(Target, [ungepAusg]) Is Nothing _
    And Application.Intersect(Target, [ungepEinn]) Is Nothing _
    Then
        Call JahresZahlenErmitteln
        GoTo Ende
    End If
    On Error GoTo Ende

    Set Pos = Target
    Spalte = Pos.Column
    Zeile = Pos.Row
    Select Case (True)
        Case Not Application.Intersect(Target, [ungepAusg]) Is Nothing
            If Not IsEmpty(Pos.Offset(0, 0)) _
            And Not IsEmpty(Pos.Offset(0, 1)) _
                Then Pos.Offset(0, 1) = ""
            
        Case Not Application.Intersect(Target, [ungepEinn]) Is Nothing
             If Not IsEmpty(Pos.Offset(0, 0)) _
             And Not IsEmpty(Pos.Offset(0, -1)) _
                Then Pos.Offset(0, -1) = ""
        Case Else
    End Select
    
    Call SchutzEntfernen(ActiveSheet)
    If Application.Intersect(Target, [ungepAusg]) Is Nothing _
    Or Application.Intersect(Target, [ungepEinn]) Is Nothing _
    Then
        If Application.Intersect(Target, [ungepAusg]) Is Nothing _
        Then
            If IsEmpty(Cells(Zeile, Spalte)) _
            And IsEmpty(Cells(Zeile, Spalte - 1)) _
                Then Pos.Offset(0, 1) = ""
        Else
            If IsEmpty(Cells(Zeile, Spalte)) _
            And IsEmpty(Cells(Zeile, Spalte + 1)) _
                Then Pos.Offset(0, 2) = ""
        End If
    End If
Ende:
    Call SchutzSetzen(ActiveSheet, Z_Protect)
    Application.EnableEvents = Change
    Application.ScreenUpdating = False
    Application.Calculation = Calc
    Call JahresZahlenErmitteln
    Application.ScreenUpdating = Scrupd
End Sub

Private Sub CbLinks4_Click()
    Call Zur|fffd|ck
End Sub

Private Sub CbRechts4_Click()
    Call Vor
End Sub

Private Sub AddLineBtn_Click()
    Call AddLine
End Sub

Private Sub DelLineBtn_Click()
    Call DelLine
End Sub






















Attribute VB_Name = "Tabelle23"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Control = "DelLineBtn, 1, 0, MSForms, CommandButton"
Attribute VB_Control = "AddLineBtn, 2, 1, MSForms, CommandButton"
Option Explicit

Private Sub Worksheet_Activate()
    Dim I
    Dim Calc
    Dim Change
    Dim Scrupd
    
    Change = Application.EnableEvents
    Scrupd = Application.ScreenUpdating
    Calc = Application.Calculation
    
    Application.EnableEvents = False
    Application.ScreenUpdating = False
    Application.Calculation = xlManual
    
    If Cells(9, 5) = "x" _
    Then
        For I = 10 To 51
            If Cells(I, 5 - 1).Text <> "" _
            Or Cells(I, 5 - 2).Text <> "" _
            Then
                Call SchutzEntfernen(ActiveSheet)
                Cells(I, 5) = "x"
                Call SchutzSetzen(ActiveSheet, Z_Protect)
            Else
                Call SchutzEntfernen(ActiveSheet)
                Cells(I, 5) = ""
                Call SchutzSetzen(ActiveSheet, Z_Protect)
            End If
        Next I
    End If

    Application.EnableEvents = Change
    Application.ScreenUpdating = False
    Application.Calculation = Calc
    Application.ScreenUpdating = Scrupd
End Sub

Private Sub Worksheet_Beforedoubleclick(ByVal Target As Range, Cancel As Boolean)
    Dim Spalte
    Dim BlattNr
    Dim Calc
    Dim Change
    Dim Scrupd
  
    Change = Application.EnableEvents
    Scrupd = Application.ScreenUpdating
    Calc = Application.Calculation
    
    Application.EnableEvents = False
    Application.Calculation = xlManual
    Application.ScreenUpdating = False

    If Not Application.Intersect(Target, [ungepX]) Is Nothing _
    Or Not Application.Intersect(Target, [gepX]) Is Nothing _
    Then
        Call SchutzEntfernen(ActiveSheet)
        If IsEmpty(Target.Value) _
        Then
            Target.Value = "x"
            Target.Font.Bold = True
        Else
            Target.Font.Bold = False
            Target.Value = ""
        End If
        Target.Offset(1, 0).Select
        Call SchutzSetzen(ActiveSheet, Z_Protect)
    End If
    Application.EnableEvents = Change
    Application.ScreenUpdating = False
    Application.Calculation = Calc
    Call JahresZahlenErmitteln
    Application.ScreenUpdating = Scrupd
End Sub

Private Sub Worksheet_Change(ByVal Target As Range)
    Dim Pos As Range
    Dim Zeile
    Dim Spalte
    Dim Calc
    Dim Change
    Dim Scrupd
  
    Change = Application.EnableEvents
    Scrupd = Application.ScreenUpdating
    Calc = Application.Calculation
    
    Application.EnableEvents = False
    Application.Calculation = xlManual
    Application.ScreenUpdating = False
       
    If Application.Intersect(Target, [ungepAusg]) Is Nothing _
    And Application.Intersect(Target, [ungepEinn]) Is Nothing _
    Then
        Call JahresZahlenErmitteln
        GoTo Ende
    End If
    On Error GoTo Ende

    Set Pos = Target
    Spalte = Pos.Column
    Zeile = Pos.Row
    Select Case (True)
        Case Not Application.Intersect(Target, [ungepAusg]) Is Nothing
            If Not IsEmpty(Pos.Offset(0, 0)) _
            And Not IsEmpty(Pos.Offset(0, 1)) _
                Then Pos.Offset(0, 1) = ""
            
        Case Not Application.Intersect(Target, [ungepEinn]) Is Nothing
             If Not IsEmpty(Pos.Offset(0, 0)) _
             And Not IsEmpty(Pos.Offset(0, -1)) _
                Then Pos.Offset(0, -1) = ""
        Case Else
    End Select
    
    Call SchutzEntfernen(ActiveSheet)
    If Application.Intersect(Target, [ungepAusg]) Is Nothing _
    Or Application.Intersect(Target, [ungepEinn]) Is Nothing _
    Then
        If Application.Intersect(Target, [ungepAusg]) Is Nothing _
        Then
            If IsEmpty(Cells(Zeile, Spalte)) _
            And IsEmpty(Cells(Zeile, Spalte - 1)) _
                Then Pos.Offset(0, 1) = ""
        Else
            If IsEmpty(Cells(Zeile, Spalte)) _
            And IsEmpty(Cells(Zeile, Spalte + 1)) _
                Then Pos.Offset(0, 2) = ""
        End If
    End If
Ende:
    Call SchutzSetzen(ActiveSheet, Z_Protect)
    Application.EnableEvents = Change
    Application.ScreenUpdating = False
    Application.Calculation = Calc
    Call JahresZahlenErmitteln
    Application.ScreenUpdating = Scrupd
End Sub

Private Sub CbLinks4_Click()
    Call Zur|fffd|ck
End Sub

Private Sub CbRechts4_Click()
    Call Vor
End Sub

Private Sub AddLineBtn_Click()
    Call AddLine
End Sub

Private Sub DelLineBtn_Click()
    Call DelLine
End Sub






















Attribute VB_Name = "Tabelle24"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Control = "DelLineBtn, 1, 0, MSForms, CommandButton"
Attribute VB_Control = "AddLineBtn, 2, 1, MSForms, CommandButton"
Option Explicit

Private Sub Worksheet_Activate()
    Dim I
    Dim Calc
    Dim Change
    Dim Scrupd
    
    Change = Application.EnableEvents
    Scrupd = Application.ScreenUpdating
    Calc = Application.Calculation
    
    Application.EnableEvents = False
    Application.ScreenUpdating = False
    Application.Calculation = xlManual
    
    If Cells(9, 5) = "x" _
    Then
        For I = 10 To 51
            If Cells(I, 5 - 1).Text <> "" _
            Or Cells(I, 5 - 2).Text <> "" _
            Then
                Call SchutzEntfernen(ActiveSheet)
                Cells(I, 5) = "x"
                Call SchutzSetzen(ActiveSheet, Z_Protect)
            Else
                Call SchutzEntfernen(ActiveSheet)
                Cells(I, 5) = ""
                Call SchutzSetzen(ActiveSheet, Z_Protect)
            End If
        Next I
    End If

    Application.EnableEvents = Change
    Application.ScreenUpdating = False
    Application.Calculation = Calc
    Application.ScreenUpdating = Scrupd
End Sub

Private Sub Worksheet_Beforedoubleclick(ByVal Target As Range, Cancel As Boolean)
    Dim Spalte
    Dim BlattNr
    Dim Calc
    Dim Change
    Dim Scrupd
  
    Change = Application.EnableEvents
    Scrupd = Application.ScreenUpdating
    Calc = Application.Calculation
    
    Application.EnableEvents = False
    Application.Calculation = xlManual
    Application.ScreenUpdating = False

    If Not Application.Intersect(Target, [ungepX]) Is Nothing _
    Or Not Application.Intersect(Target, [gepX]) Is Nothing _
    Then
        Call SchutzEntfernen(ActiveSheet)
        If IsEmpty(Target.Value) _
        Then
            Target.Value = "x"
            Target.Font.Bold = True
        Else
            Target.Font.Bold = False
            Target.Value = ""
        End If
        Target.Offset(1, 0).Select
        Call SchutzSetzen(ActiveSheet, Z_Protect)
    End If
    Application.EnableEvents = Change
    Application.ScreenUpdating = False
    Application.Calculation = Calc
    Call JahresZahlenErmitteln
    Application.ScreenUpdating = Scrupd
End Sub

Private Sub Worksheet_Change(ByVal Target As Range)
    Dim Pos As Range
    Dim Zeile
    Dim Spalte
    Dim Calc
    Dim Change
    Dim Scrupd
  
    Change = Application.EnableEvents
    Scrupd = Application.ScreenUpdating
    Calc = Application.Calculation
    
    Application.EnableEvents = False
    Application.Calculation = xlManual
    Application.ScreenUpdating = False
       
    If Application.Intersect(Target, [ungepAusg]) Is Nothing _
    And Application.Intersect(Target, [ungepEinn]) Is Nothing _
    Then
        Call JahresZahlenErmitteln
        GoTo Ende
    End If
    On Error GoTo Ende

    Set Pos = Target
    Spalte = Pos.Column
    Zeile = Pos.Row
    Select Case (True)
        Case Not Application.Intersect(Target, [ungepAusg]) Is Nothing
            If Not IsEmpty(Pos.Offset(0, 0)) _
            And Not IsEmpty(Pos.Offset(0, 1)) _
                Then Pos.Offset(0, 1) = ""
            
        Case Not Application.Intersect(Target, [ungepEinn]) Is Nothing
             If Not IsEmpty(Pos.Offset(0, 0)) _
             And Not IsEmpty(Pos.Offset(0, -1)) _
                Then Pos.Offset(0, -1) = ""
        Case Else
    End Select
    
    Call SchutzEntfernen(ActiveSheet)
    If Application.Intersect(Target, [ungepAusg]) Is Nothing _
    Or Application.Intersect(Target, [ungepEinn]) Is Nothing _
    Then
        If Application.Intersect(Target, [ungepAusg]) Is Nothing _
        Then
            If IsEmpty(Cells(Zeile, Spalte)) _
            And IsEmpty(Cells(Zeile, Spalte - 1)) _
                Then Pos.Offset(0, 1) = ""
        Else
            If IsEmpty(Cells(Zeile, Spalte)) _
            And IsEmpty(Cells(Zeile, Spalte + 1)) _
                Then Pos.Offset(0, 2) = ""
        End If
    End If
Ende:
    Call SchutzSetzen(ActiveSheet, Z_Protect)
    Application.EnableEvents = Change
    Application.ScreenUpdating = False
    Application.Calculation = Calc
    Call JahresZahlenErmitteln
    Application.ScreenUpdating = Scrupd
End Sub

Private Sub CbLinks4_Click()
    Call Zur|fffd|ck
End Sub

Private Sub CbRechts4_Click()
    Call Vor
End Sub

Private Sub AddLineBtn_Click()
    Call AddLine
End Sub

Private Sub DelLineBtn_Click()
    Call DelLine
End Sub






















Attribute VB_Name = "Tabelle25"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Control = "DelLineBtn, 1, 0, MSForms, CommandButton"
Attribute VB_Control = "AddLineBtn, 2, 1, MSForms, CommandButton"
Option Explicit

Private Sub Worksheet_Activate()
    Dim I
    Dim Calc
    Dim Change
    Dim Scrupd
    
    Change = Application.EnableEvents
    Scrupd = Application.ScreenUpdating
    Calc = Application.Calculation
    
    Application.EnableEvents = False
    Application.ScreenUpdating = False
    Application.Calculation = xlManual
    
    If Cells(9, 5) = "x" _
    Then
        For I = 10 To 51
            If Cells(I, 5 - 1).Text <> "" _
            Or Cells(I, 5 - 2).Text <> "" _
            Then
                Call SchutzEntfernen(ActiveSheet)
                Cells(I, 5) = "x"
                Call SchutzSetzen(ActiveSheet, Z_Protect)
            Else
                Call SchutzEntfernen(ActiveSheet)
                Cells(I, 5) = ""
                Call SchutzSetzen(ActiveSheet, Z_Protect)
            End If
        Next I
    End If

    Application.EnableEvents = Change
    Application.ScreenUpdating = False
    Application.Calculation = Calc
    Application.ScreenUpdating = Scrupd
End Sub

Private Sub Worksheet_Beforedoubleclick(ByVal Target As Range, Cancel As Boolean)
    Dim Spalte
    Dim BlattNr
    Dim Calc
    Dim Change
    Dim Scrupd
  
    Change = Application.EnableEvents
    Scrupd = Application.ScreenUpdating
    Calc = Application.Calculation
    
    Application.EnableEvents = False
    Application.Calculation = xlManual
    Application.ScreenUpdating = False

    If Not Application.Intersect(Target, [ungepX]) Is Nothing _
    Or Not Application.Intersect(Target, [gepX]) Is Nothing _
    Then
        Call SchutzEntfernen(ActiveSheet)
        If IsEmpty(Target.Value) _
        Then
            Target.Value = "x"
            Target.Font.Bold = True
        Else
            Target.Font.Bold = False
            Target.Value = ""
        End If
        Target.Offset(1, 0).Select
        Call SchutzSetzen(ActiveSheet, Z_Protect)
    End If
    Application.EnableEvents = Change
    Application.ScreenUpdating = False
    Application.Calculation = Calc
    Call JahresZahlenErmitteln
    Application.ScreenUpdating = Scrupd
End Sub

Private Sub Worksheet_Change(ByVal Target As Range)
    Dim Pos As Range
    Dim Zeile
    Dim Spalte
    Dim Calc
    Dim Change
    Dim Scrupd
  
    Change = Application.EnableEvents
    Scrupd = Application.ScreenUpdating
    Calc = Application.Calculation
    
    Application.EnableEvents = False
    Application.Calculation = xlManual
    Application.ScreenUpdating = False
       
    If Application.Intersect(Target, [ungepAusg]) Is Nothing _
    And Application.Intersect(Target, [ungepEinn]) Is Nothing _
    Then
        Call JahresZahlenErmitteln
        GoTo Ende
    End If
    On Error GoTo Ende

    Set Pos = Target
    Spalte = Pos.Column
    Zeile = Pos.Row
    Select Case (True)
        Case Not Application.Intersect(Target, [ungepAusg]) Is Nothing
            If Not IsEmpty(Pos.Offset(0, 0)) _
            And Not IsEmpty(Pos.Offset(0, 1)) _
                Then Pos.Offset(0, 1) = ""
            
        Case Not Application.Intersect(Target, [ungepEinn]) Is Nothing
             If Not IsEmpty(Pos.Offset(0, 0)) _
             And Not IsEmpty(Pos.Offset(0, -1)) _
                Then Pos.Offset(0, -1) = ""
        Case Else
    End Select
    
    Call SchutzEntfernen(ActiveSheet)
    If Application.Intersect(Target, [ungepAusg]) Is Nothing _
    Or Application.Intersect(Target, [ungepEinn]) Is Nothing _
    Then
        If Application.Intersect(Target, [ungepAusg]) Is Nothing _
        Then
            If IsEmpty(Cells(Zeile, Spalte)) _
            And IsEmpty(Cells(Zeile, Spalte - 1)) _
                Then Pos.Offset(0, 1) = ""
        Else
            If IsEmpty(Cells(Zeile, Spalte)) _
            And IsEmpty(Cells(Zeile, Spalte + 1)) _
                Then Pos.Offset(0, 2) = ""
        End If
    End If
Ende:
    Call SchutzSetzen(ActiveSheet, Z_Protect)
    Application.EnableEvents = Change
    Application.ScreenUpdating = False
    Application.Calculation = Calc
    Call JahresZahlenErmitteln
    Application.ScreenUpdating = Scrupd
End Sub

Private Sub CbLinks4_Click()
    Call Zur|fffd|ck
End Sub

Private Sub CbRechts4_Click()
    Call Vor
End Sub

Private Sub AddLineBtn_Click()
    Call AddLine
End Sub

Private Sub DelLineBtn_Click()
    Call DelLine
End Sub






















Attribute VB_Name = "Tabelle26"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Control = "DelLineBtn, 1, 0, MSForms, CommandButton"
Attribute VB_Control = "AddLineBtn, 2, 1, MSForms, CommandButton"
Option Explicit

Private Sub Worksheet_Activate()
    Dim I
    Dim Calc
    Dim Change
    Dim Scrupd
    
    Change = Application.EnableEvents
    Scrupd = Application.ScreenUpdating
    Calc = Application.Calculation
    
    Application.EnableEvents = False
    Application.ScreenUpdating = False
    Application.Calculation = xlManual
    
    If Cells(9, 5) = "x" _
    Then
        For I = 10 To 51
            If Cells(I, 5 - 1).Text <> "" _
            Or Cells(I, 5 - 2).Text <> "" _
            Then
                Call SchutzEntfernen(ActiveSheet)
                Cells(I, 5) = "x"
                Call SchutzSetzen(ActiveSheet, Z_Protect)
            Else
                Call SchutzEntfernen(ActiveSheet)
                Cells(I, 5) = ""
                Call SchutzSetzen(ActiveSheet, Z_Protect)
            End If
        Next I
    End If

    Application.EnableEvents = Change
    Application.ScreenUpdating = False
    Application.Calculation = Calc
    Application.ScreenUpdating = Scrupd
End Sub

Private Sub Worksheet_Beforedoubleclick(ByVal Target As Range, Cancel As Boolean)
    Dim Spalte
    Dim BlattNr
    Dim Calc
    Dim Change
    Dim Scrupd
  
    Change = Application.EnableEvents
    Scrupd = Application.ScreenUpdating
    Calc = Application.Calculation
    
    Application.EnableEvents = False
    Application.Calculation = xlManual
    Application.ScreenUpdating = False

    If Not Application.Intersect(Target, [ungepX]) Is Nothing _
    Or Not Application.Intersect(Target, [gepX]) Is Nothing _
    Then
        Call SchutzEntfernen(ActiveSheet)
        If IsEmpty(Target.Value) _
        Then
            Target.Value = "x"
            Target.Font.Bold = True
        Else
            Target.Font.Bold = False
            Target.Value = ""
        End If
        Target.Offset(1, 0).Select
        Call SchutzSetzen(ActiveSheet, Z_Protect)
    End If
    Application.EnableEvents = Change
    Application.ScreenUpdating = False
    Application.Calculation = Calc
    Call JahresZahlenErmitteln
    Application.ScreenUpdating = Scrupd
End Sub

Private Sub Worksheet_Change(ByVal Target As Range)
    Dim Pos As Range
    Dim Zeile
    Dim Spalte
    Dim Calc
    Dim Change
    Dim Scrupd
  
    Change = Application.EnableEvents
    Scrupd = Application.ScreenUpdating
    Calc = Application.Calculation
    
    Application.EnableEvents = False
    Application.Calculation = xlManual
    Application.ScreenUpdating = False
       
    If Application.Intersect(Target, [ungepAusg]) Is Nothing _
    And Application.Intersect(Target, [ungepEinn]) Is Nothing _
    Then
        Call JahresZahlenErmitteln
        GoTo Ende
    End If
    On Error GoTo Ende

    Set Pos = Target
    Spalte = Pos.Column
    Zeile = Pos.Row
    Select Case (True)
        Case Not Application.Intersect(Target, [ungepAusg]) Is Nothing
            If Not IsEmpty(Pos.Offset(0, 0)) _
            And Not IsEmpty(Pos.Offset(0, 1)) _
                Then Pos.Offset(0, 1) = ""
            
        Case Not Application.Intersect(Target, [ungepEinn]) Is Nothing
             If Not IsEmpty(Pos.Offset(0, 0)) _
             And Not IsEmpty(Pos.Offset(0, -1)) _
                Then Pos.Offset(0, -1) = ""
        Case Else
    End Select
    
    Call SchutzEntfernen(ActiveSheet)
    If Application.Intersect(Target, [ungepAusg]) Is Nothing _
    Or Application.Intersect(Target, [ungepEinn]) Is Nothing _
    Then
        If Application.Intersect(Target, [ungepAusg]) Is Nothing _
        Then
            If IsEmpty(Cells(Zeile, Spalte)) _
            And IsEmpty(Cells(Zeile, Spalte - 1)) _
                Then Pos.Offset(0, 1) = ""
        Else
            If IsEmpty(Cells(Zeile, Spalte)) _
            And IsEmpty(Cells(Zeile, Spalte + 1)) _
                Then Pos.Offset(0, 2) = ""
        End If
    End If
Ende:
    Call SchutzSetzen(ActiveSheet, Z_Protect)
    Application.EnableEvents = Change
    Application.ScreenUpdating = False
    Application.Calculation = Calc
    Call JahresZahlenErmitteln
    Application.ScreenUpdating = Scrupd
End Sub

Private Sub CbLinks4_Click()
    Call Zur|fffd|ck
End Sub

Private Sub CbRechts4_Click()
    Call Vor
End Sub

Private Sub AddLineBtn_Click()
    Call AddLine
End Sub

Private Sub DelLineBtn_Click()
    Call DelLine
End Sub






















Attribute VB_Name = "Tabelle27"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Control = "DelLineBtn, 1, 0, MSForms, CommandButton"
Attribute VB_Control = "AddLineBtn, 2, 1, MSForms, CommandButton"
Option Explicit

Private Sub Worksheet_Activate()
    Dim I
    Dim Calc
    Dim Change
    Dim Scrupd
    
    Change = Application.EnableEvents
    Scrupd = Application.ScreenUpdating
    Calc = Application.Calculation
    
    Application.EnableEvents = False
    Application.ScreenUpdating = False
    Application.Calculation = xlManual
    
    If Cells(9, 5) = "x" _
    Then
        For I = 10 To 51
            If Cells(I, 5 - 1).Text <> "" _
            Or Cells(I, 5 - 2).Text <> "" _
            Then
                Call SchutzEntfernen(ActiveSheet)
                Cells(I, 5) = "x"
                Call SchutzSetzen(ActiveSheet, Z_Protect)
            Else
                Call SchutzEntfernen(ActiveSheet)
                Cells(I, 5) = ""
                Call SchutzSetzen(ActiveSheet, Z_Protect)
            End If
        Next I
    End If

    Application.EnableEvents = Change
    Application.ScreenUpdating = False
    Application.Calculation = Calc
    Application.ScreenUpdating = Scrupd
End Sub

Private Sub Worksheet_Beforedoubleclick(ByVal Target As Range, Cancel As Boolean)
    Dim Spalte
    Dim BlattNr
    Dim Calc
    Dim Change
    Dim Scrupd
  
    Change = Application.EnableEvents
    Scrupd = Application.ScreenUpdating
    Calc = Application.Calculation
    
    Application.EnableEvents = False
    Application.Calculation = xlManual
    Application.ScreenUpdating = False

    If Not Application.Intersect(Target, [ungepX]) Is Nothing _
    Or Not Application.Intersect(Target, [gepX]) Is Nothing _
    Then
        Call SchutzEntfernen(ActiveSheet)
        If IsEmpty(Target.Value) _
        Then
            Target.Value = "x"
            Target.Font.Bold = True
        Else
            Target.Font.Bold = False
            Target.Value = ""
        End If
        Target.Offset(1, 0).Select
        Call SchutzSetzen(ActiveSheet, Z_Protect)
    End If
    Application.EnableEvents = Change
    Application.ScreenUpdating = False
    Application.Calculation = Calc
    Call JahresZahlenErmitteln
    Application.ScreenUpdating = Scrupd
End Sub

Private Sub Worksheet_Change(ByVal Target As Range)
    Dim Pos As Range
    Dim Zeile
    Dim Spalte
    Dim Calc
    Dim Change
    Dim Scrupd
  
    Change = Application.EnableEvents
    Scrupd = Application.ScreenUpdating
    Calc = Application.Calculation
    
    Application.EnableEvents = False
    Application.Calculation = xlManual
    Application.ScreenUpdating = False
       
    If Application.Intersect(Target, [ungepAusg]) Is Nothing _
    And Application.Intersect(Target, [ungepEinn]) Is Nothing _
    Then
        Call JahresZahlenErmitteln
        GoTo Ende
    End If
    On Error GoTo Ende

    Set Pos = Target
    Spalte = Pos.Column
    Zeile = Pos.Row
    Select Case (True)
        Case Not Application.Intersect(Target, [ungepAusg]) Is Nothing
            If Not IsEmpty(Pos.Offset(0, 0)) _
            And Not IsEmpty(Pos.Offset(0, 1)) _
                Then Pos.Offset(0, 1) = ""
            
        Case Not Application.Intersect(Target, [ungepEinn]) Is Nothing
             If Not IsEmpty(Pos.Offset(0, 0)) _
             And Not IsEmpty(Pos.Offset(0, -1)) _
                Then Pos.Offset(0, -1) = ""
        Case Else
    End Select
    
    Call SchutzEntfernen(ActiveSheet)
    If Application.Intersect(Target, [ungepAusg]) Is Nothing _
    Or Application.Intersect(Target, [ungepEinn]) Is Nothing _
    Then
        If Application.Intersect(Target, [ungepAusg]) Is Nothing _
        Then
            If IsEmpty(Cells(Zeile, Spalte)) _
            And IsEmpty(Cells(Zeile, Spalte - 1)) _
                Then Pos.Offset(0, 1) = ""
        Else
            If IsEmpty(Cells(Zeile, Spalte)) _
            And IsEmpty(Cells(Zeile, Spalte + 1)) _
                Then Pos.Offset(0, 2) = ""
        End If
    End If
Ende:
    Call SchutzSetzen(ActiveSheet, Z_Protect)
    Application.EnableEvents = Change
    Application.ScreenUpdating = False
    Application.Calculation = Calc
    Call JahresZahlenErmitteln
    Application.ScreenUpdating = Scrupd
End Sub

Private Sub CbLinks4_Click()
    Call Zur|fffd|ck
End Sub

Private Sub CbRechts4_Click()
    Call Vor
End Sub

Private Sub AddLineBtn_Click()
    Call AddLine
End Sub

Private Sub DelLineBtn_Click()
    Call DelLine
End Sub






















Attribute VB_Name = "Tabelle28"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Control = "DelLineBtn, 1, 0, MSForms, CommandButton"
Attribute VB_Control = "AddLineBtn, 2, 1, MSForms, CommandButton"
Option Explicit

Private Sub Worksheet_Activate()
    Dim I
    Dim Calc
    Dim Change
    Dim Scrupd
    
    Change = Application.EnableEvents
    Scrupd = Application.ScreenUpdating
    Calc = Application.Calculation
    
    Application.EnableEvents = False
    Application.ScreenUpdating = False
    Application.Calculation = xlManual
    
    If Cells(9, 5) = "x" _
    Then
        For I = 10 To 51
            If Cells(I, 5 - 1).Text <> "" _
            Or Cells(I, 5 - 2).Text <> "" _
            Then
                Call SchutzEntfernen(ActiveSheet)
                Cells(I, 5) = "x"
                Call SchutzSetzen(ActiveSheet, Z_Protect)
            Else
                Call SchutzEntfernen(ActiveSheet)
                Cells(I, 5) = ""
                Call SchutzSetzen(ActiveSheet, Z_Protect)
            End If
        Next I
    End If

    Application.EnableEvents = Change
    Application.ScreenUpdating = False
    Application.Calculation = Calc
    Application.ScreenUpdating = Scrupd
End Sub

Private Sub Worksheet_Beforedoubleclick(ByVal Target As Range, Cancel As Boolean)
    Dim Spalte
    Dim BlattNr
    Dim Calc
    Dim Change
    Dim Scrupd
  
    Change = Application.EnableEvents
    Scrupd = Application.ScreenUpdating
    Calc = Application.Calculation
    
    Application.EnableEvents = False
    Application.Calculation = xlManual
    Application.ScreenUpdating = False

    If Not Application.Intersect(Target, [ungepX]) Is Nothing _
    Or Not Application.Intersect(Target, [gepX]) Is Nothing _
    Then
        Call SchutzEntfernen(ActiveSheet)
        If IsEmpty(Target.Value) _
        Then
            Target.Value = "x"
            Target.Font.Bold = True
        Else
            Target.Font.Bold = False
            Target.Value = ""
        End If
        Target.Offset(1, 0).Select
        Call SchutzSetzen(ActiveSheet, Z_Protect)
    End If
    Application.EnableEvents = Change
    Application.ScreenUpdating = False
    Application.Calculation = Calc
    Call JahresZahlenErmitteln
    Application.ScreenUpdating = Scrupd
End Sub

Private Sub Worksheet_Change(ByVal Target As Range)
    Dim Pos As Range
    Dim Zeile
    Dim Spalte
    Dim Calc
    Dim Change
    Dim Scrupd
  
    Change = Application.EnableEvents
    Scrupd = Application.ScreenUpdating
    Calc = Application.Calculation
    
    Application.EnableEvents = False
    Application.Calculation = xlManual
    Application.ScreenUpdating = False
       
    If Application.Intersect(Target, [ungepAusg]) Is Nothing _
    And Application.Intersect(Target, [ungepEinn]) Is Nothing _
    Then
        Call JahresZahlenErmitteln
        GoTo Ende
    End If
    On Error GoTo Ende

    Set Pos = Target
    Spalte = Pos.Column
    Zeile = Pos.Row
    Select Case (True)
        Case Not Application.Intersect(Target, [ungepAusg]) Is Nothing
            If Not IsEmpty(Pos.Offset(0, 0)) _
            And Not IsEmpty(Pos.Offset(0, 1)) _
                Then Pos.Offset(0, 1) = ""
            
        Case Not Application.Intersect(Target, [ungepEinn]) Is Nothing
             If Not IsEmpty(Pos.Offset(0, 0)) _
             And Not IsEmpty(Pos.Offset(0, -1)) _
                Then Pos.Offset(0, -1) = ""
        Case Else
    End Select
    
    Call SchutzEntfernen(ActiveSheet)
    If Application.Intersect(Target, [ungepAusg]) Is Nothing _
    Or Application.Intersect(Target, [ungepEinn]) Is Nothing _
    Then
        If Application.Intersect(Target, [ungepAusg]) Is Nothing _
        Then
            If IsEmpty(Cells(Zeile, Spalte)) _
            And IsEmpty(Cells(Zeile, Spalte - 1)) _
                Then Pos.Offset(0, 1) = ""
        Else
            If IsEmpty(Cells(Zeile, Spalte)) _
            And IsEmpty(Cells(Zeile, Spalte + 1)) _
                Then Pos.Offset(0, 2) = ""
        End If
    End If
Ende:
    Call SchutzSetzen(ActiveSheet, Z_Protect)
    Application.EnableEvents = Change
    Application.ScreenUpdating = False
    Application.Calculation = Calc
    Call JahresZahlenErmitteln
    Application.ScreenUpdating = Scrupd
End Sub

Private Sub CbLinks4_Click()
    Call Zur|fffd|ck
End Sub

Private Sub CbRechts4_Click()
    Call Vor
End Sub

Private Sub AddLineBtn_Click()
    Call AddLine
End Sub

Private Sub DelLineBtn_Click()
    Call DelLine
End Sub






















Attribute VB_Name = "Tabelle29"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Control = "DelLineBtn, 1, 0, MSForms, CommandButton"
Attribute VB_Control = "AddLineBtn, 2, 1, MSForms, CommandButton"
Option Explicit

Private Sub Worksheet_Activate()
    Dim I
    Dim Calc
    Dim Change
    Dim Scrupd
    
    Change = Application.EnableEvents
    Scrupd = Application.ScreenUpdating
    Calc = Application.Calculation
    
    Application.EnableEvents = False
    Application.ScreenUpdating = False
    Application.Calculation = xlManual
    
    If Cells(9, 5) = "x" _
    Then
        For I = 10 To 51
            If Cells(I, 5 - 1).Text <> "" _
            Or Cells(I, 5 - 2).Text <> "" _
            Then
                Call SchutzEntfernen(ActiveSheet)
                Cells(I, 5) = "x"
                Call SchutzSetzen(ActiveSheet, Z_Protect)
            Else
                Call SchutzEntfernen(ActiveSheet)
                Cells(I, 5) = ""
                Call SchutzSetzen(ActiveSheet, Z_Protect)
            End If
        Next I
    End If

    Application.EnableEvents = Change
    Application.ScreenUpdating = False
    Application.Calculation = Calc
    Application.ScreenUpdating = Scrupd
End Sub

Private Sub Worksheet_Beforedoubleclick(ByVal Target As Range, Cancel As Boolean)
    Dim Spalte
    Dim BlattNr
    Dim Calc
    Dim Change
    Dim Scrupd
  
    Change = Application.EnableEvents
    Scrupd = Application.ScreenUpdating
    Calc = Application.Calculation
    
    Application.EnableEvents = False
    Application.Calculation = xlManual
    Application.ScreenUpdating = False

    If Not Application.Intersect(Target, [ungepX]) Is Nothing _
    Or Not Application.Intersect(Target, [gepX]) Is Nothing _
    Then
        Call SchutzEntfernen(ActiveSheet)
        If IsEmpty(Target.Value) _
        Then
            Target.Value = "x"
            Target.Font.Bold = True
        Else
            Target.Font.Bold = False
            Target.Value = ""
        End If
        Target.Offset(1, 0).Select
        Call SchutzSetzen(ActiveSheet, Z_Protect)
    End If
    Application.EnableEvents = Change
    Application.ScreenUpdating = False
    Application.Calculation = Calc
    Call JahresZahlenErmitteln
    Application.ScreenUpdating = Scrupd
End Sub

Private Sub Worksheet_Change(ByVal Target As Range)
    Dim Pos As Range
    Dim Zeile
    Dim Spalte
    Dim Calc
    Dim Change
    Dim Scrupd
  
    Change = Application.EnableEvents
    Scrupd = Application.ScreenUpdating
    Calc = Application.Calculation
    
    Application.EnableEvents = False
    Application.Calculation = xlManual
    Application.ScreenUpdating = False
       
    If Application.Intersect(Target, [ungepAusg]) Is Nothing _
    And Application.Intersect(Target, [ungepEinn]) Is Nothing _
    Then
        Call JahresZahlenErmitteln
        GoTo Ende
    End If
    On Error GoTo Ende

    Set Pos = Target
    Spalte = Pos.Column
    Zeile = Pos.Row
    Select Case (True)
        Case Not Application.Intersect(Target, [ungepAusg]) Is Nothing
            If Not IsEmpty(Pos.Offset(0, 0)) _
            And Not IsEmpty(Pos.Offset(0, 1)) _
                Then Pos.Offset(0, 1) = ""
            
        Case Not Application.Intersect(Target, [ungepEinn]) Is Nothing
             If Not IsEmpty(Pos.Offset(0, 0)) _
             And Not IsEmpty(Pos.Offset(0, -1)) _
                Then Pos.Offset(0, -1) = ""
        Case Else
    End Select
    
    Call SchutzEntfernen(ActiveSheet)
    If Application.Intersect(Target, [ungepAusg]) Is Nothing _
    Or Application.Intersect(Target, [ungepEinn]) Is Nothing _
    Then
        If Application.Intersect(Target, [ungepAusg]) Is Nothing _
        Then
            If IsEmpty(Cells(Zeile, Spalte)) _
            And IsEmpty(Cells(Zeile, Spalte - 1)) _
                Then Pos.Offset(0, 1) = ""
        Else
            If IsEmpty(Cells(Zeile, Spalte)) _
            And IsEmpty(Cells(Zeile, Spalte + 1)) _
                Then Pos.Offset(0, 2) = ""
        End If
    End If
Ende:
    Call SchutzSetzen(ActiveSheet, Z_Protect)
    Application.EnableEvents = Change
    Application.ScreenUpdating = False
    Application.Calculation = Calc
    Call JahresZahlenErmitteln
    Application.ScreenUpdating = Scrupd
End Sub

Private Sub CbLinks4_Click()
    Call Zur|fffd|ck
End Sub

Private Sub CbRechts4_Click()
    Call Vor
End Sub

Private Sub AddLineBtn_Click()
    Call AddLine
End Sub

Private Sub DelLineBtn_Click()
    Call DelLine
End Sub






















Attribute VB_Name = "Tabelle3"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Control = "DelLineBtn, 10, 2, MSForms, CommandButton"
Attribute VB_Control = "AddLineBtn, 11, 3, MSForms, CommandButton"
Option Explicit
Private Sub AddLineBtn_Click()
    Call AddLine
End Sub

Private Sub DelLineBtn_Click()
    Call DelLine
End Sub

Private Sub Worksheet_Change(ByVal Target As Range)
    Call JahresZahlenErmitteln
    Call SchutzSetzen(Sheets("Varianten"), True)
End Sub

Private Sub CbLinks3_Click()
    Call Zur|fffd|ck
End Sub

Private Sub CbRechts3_Click()
    Call Vor
End Sub
Private Sub Worksheet_Beforedoubleclick(ByVal Target As Range, Cancel As Boolean)
'    Call SchutzEntfernen(Sheets("Jahr"))
    Call SchutzSetzen(Sheets("Varianten"), True)
End Sub

Attribute VB_Name = "Tabelle4"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Tabelle5"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Tabelle6"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Tabelle7"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Tabelle8"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Tabelle9"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "ZentraleRoutinen"
Option Explicit

Public ScreenFactor
Public Auswahl
Public Z_Auswahl
Public MenueEintrag
Public MenueItem
Public Z_Protect As Boolean
Public LetzteZeile
Public LetzteZeileNamBer
Public FremdWb As Workbook
Public OrgWb As Workbook
Public UniWb As Workbook
Public PfadNameAlt
Public PfadName
Public Jahreszahl
Public Schltr_Planung As Boolean
Public Schltr_Varianten As Boolean
Public Schltr_Monate As Boolean
Public Blatt As Worksheet
Public FocusSheet As Worksheet
Public NamensBereich
Public LetzteZeileOffset
Public MonateSichern
Public KeinePruefungBeiEinpflegenAusBackup As Boolean
Public ContS As Worksheet
Public BkUp As Worksheet
Public FolgejahrUmstellung As Boolean
Public ImportAusAndererMappe As Boolean
Public Exestart_Kenner
Const PW = "Graefen"
Public Sprache



Private Declare Function FindWindow Lib "user32" Alias "FindWindowA" (ByVal lpClassName As String, ByVal lpWindowName As String) As Long
Private Declare Function OpenClipboard Lib "user32" (ByVal hwnd As Long) As Long
Private Declare Function EmptyClipboard Lib "user32" () As Long
Private Declare Function CloseClipboard Lib "user32" () As Long

Public Function ErwirtschaftetBisUltimo(Test) As Variant
    Dim Monat
    Dim Summe
    Dim I
    Dim Calc
    Dim Change
    Dim Scrupd
    
    Change = Application.EnableEvents
    Scrupd = Application.ScreenUpdating
    Calc = Application.Calculation
    
    Application.EnableEvents = False
    Application.Calculation = xlCalculationManual
    Application.ScreenUpdating = False
    
    Summe = 0
    Monat = Format(Date, "MM") + 5
    Summe = Sheets("Jahr").Cells(Monat, 7).Value
    ErwirtschaftetBisUltimo = Summe
    
    Application.EnableEvents = Change
    Application.ScreenUpdating = False
    Application.Calculation = Calc
    Application.ScreenUpdating = Scrupd
End Function

Sub JahresZahlenErmitteln()
    Dim Calc
    Dim Change
    Dim Scrupd

    Change = Application.EnableEvents
    Scrupd = Application.ScreenUpdating
    Calc = Application.Calculation
    
    Application.EnableEvents = False
    Application.Calculation = xlCalculationManual
    Application.ScreenUpdating = False

    Call SchutzEntfernen(Sheets("Jahr"))
    Call FreiesBudgetMonatsAnfang
    Call FreiesBudgetMonatsEnde
    Call NochZuBuchen
    Call SchutzSetzen(Sheets("Jahr"), Z_Protect)
    
    Application.EnableEvents = Change
    Application.ScreenUpdating = False
    Application.Calculation = Calc
    Application.Calculate
    Application.ScreenUpdating = Scrupd
End Sub

Sub FreiesBudgetMonatsEnde()
    Dim wks As Worksheet
    Dim I
    Dim Summe
    I = 6
    For Each wks In Worksheets
        If wks.Name = Sheets("Jahr").Cells(I, 2).Text _
        Then
            Summe _
            = -wks.Cells(9, 3) _
            + wks.Cells(9, 4) _
            + -wks.Cells(9, 8) _
            + wks.Cells(9, 9)
            Worksheets("Jahr").Cells(I, 4) = Summe
            I = I + 1
       End If
    Next wks
End Sub

Sub FreiesBudgetMonatsAnfang()
    Dim wks As Worksheet
    Dim I
    Dim Summe
    I = 6
    For Each wks In Worksheets
        If wks.Name = Sheets("Jahr").Cells(I, 2).Text _
        Then
            Summe _
            = -wks.Cells(9, 3) _
            + wks.Cells(9, 4)
            Worksheets("Jahr").Cells(I, 3) = Summe
            I = I + 1
       End If
    Next wks
End Sub

Sub NochZuBuchen()
    Dim wks As Worksheet
    Dim I
    Dim Summe
    Dim periodischeAusgaben
    Dim periodischeEinnahmen
    Dim geplanteAussenstaende
    Dim ungeplanteAussenstaende
    Dim KontostandVormonat
    On Error Resume Next
    I = 6
    For Each wks In Worksheets
        If wks.Name = Sheets("Jahr").Cells(I, 2).Text _
        Then
            periodischeEinnahmen = wks.Cells(9, 4)
            periodischeAusgaben = wks.Cells(9, 3)
            geplanteAussenstaende = wks.Cells(3, 6) * -1
            ungeplanteAussenstaende = wks.Cells(9, 11) * -1
            If I = 6 Then KontostandVormonat = Sheets("Jahr").Cells(1, 9)
               
            Summe _
            = periodischeEinnahmen _
            - (periodischeAusgaben _
            - geplanteAussenstaende) _
            - ungeplanteAussenstaende _
            + KontostandVormonat
            
            Worksheets("Jahr").Cells(I, 8) = Summe
            KontostandVormonat = Summe
            I = I + 1
       End If
    Next wks
End Sub

Public Function AbweichungenEinpflegen(Faelligkeit, Ausgabe, Einnahme, Variante)

    Dim Pos As Range
    Dim Adresse
    Dim Z_Faelligkeit
    Dim Z_Ausgabe
    Dim Z_Einnahme
    Dim Z_Variante

'    Set Pos = Application.Caller
'    Adresse = Application.Caller.Address

     Z_Faelligkeit = Faelligkeit
     Z_Ausgabe = Ausgabe
     Z_Einnahme = Einnahme
     Z_Variante = Variante
     
    Select Case (True)
        Case Z_Faelligkeit = ""
            AbweichungenEinpflegen = ""

        Case Z_Ausgabe <> "" And Z_Variante = ""
            AbweichungenEinpflegen = -Z_Ausgabe

        Case Z_Ausgabe <> "" And Z_Variante <> ""
            AbweichungenEinpflegen = -Z_Variante

        Case Z_Einnahme <> "" And Z_Variante = ""
            AbweichungenEinpflegen = Z_Einnahme

        Case Z_Einnahme <> "" And Z_Variante <> ""
            AbweichungenEinpflegen = Z_Variante

        Case Else
            AbweichungenEinpflegen = ""
    End Select
End Function

Sub Euro_nach_DM()
Attribute Euro_nach_DM.VB_ProcData.VB_Invoke_Func = "d\n14"
    Dim Zeile
    Dim Spalte
    Dim xf
    
    Zeile = ActiveCell.Row
    Spalte = ActiveCell.Column
    
    On Error Resume Next
    Selection.Copy
    xf = Selection.Value
    Selection.Value = xf * 1.95583
    ActiveSheet.Paste
    ActiveSheet.Paste
'    ActiveSheet.Cells(Zeile + 1, Spalte).Activate
    
End Sub
Sub DM_nach_Euro()
Attribute DM_nach_Euro.VB_ProcData.VB_Invoke_Func = "e\n14"
    Dim Zeile
    Dim Spalte
    Dim xf
    
    Zeile = ActiveCell.Row
    Spalte = ActiveCell.Column
    
    On Error Resume Next
    Selection.Copy
    xf = Selection.Value
    Selection.Value = xf / 1.95583
    ActiveSheet.Paste
'    ActiveSheet.Cells(Zeile + 1, Spalte).Activate

End Sub

Sub NeuesMen|fffd|Einf|fffd|gen()
    Dim I As Integer
    Dim I2
    Dim i_Hilfe As Integer
    Dim Men|fffd|Neu As CommandBarControl
    Dim MB As CommandBarControl
    Dim x
    Dim Sprache

    Sprache = IIf(ThisWorkbook.Sheets("Jahr").Range("C3") = "freies Budget", "D", "E")
    If Sprache = "D" _
    Then
        MenueEintrag = Array(, _
        "Jahres-|fffd|bersicht", _
        "lfd. Monat, Jahres-|fffd|bersicht", _
        "Planung", _
        "Varianten", _
        "Planung, Jahres-|fffd|bersicht", _
        "Varianten, Jahres-|fffd|bersicht", _
        "Januar", _
        "Februar", _
        "M|fffd|rz", _
        "April", _
        "Mai", _
        "Juni", _
        "Juli", _
        "August", _
        "September", _
        "Oktober", _
        "November", _
        "Dezember", _
        "Fenster Normal", _
        "Fenster Klein", _
        "Fenster Gro|fffd|")
    Else
        MenueEintrag = Array(, _
        "Annual Overview", _
        "current month, Annual Overview", _
        "Annual Budget", _
        "Diverging amounts", _
        "Annual Budget, Annual Overview", _
        "Diverging amounts, Annual Overview", _
        "January", _
        "February", _
        "March", _
        "April", _
        "May", _
        "June", _
        "July", _
        "August", _
        "September", _
        "October", _
        "November", _
        "December", _
        "Window size normal", _
        "Window size small", _
        "Window size large")
    End If

    I = Application.CommandBars(1).Controls.Count
    i_Hilfe = Application.CommandBars(1).Controls(I).Index + 1
    Set Men|fffd|Neu = Application.CommandBars(1). _
        Controls.Add(Type:=msoControlPopup, _
        Before:=i_Hilfe, Temporary:=True)
        Men|fffd|Neu.Caption = IIf(Sprache = "D", "Fenster-Auswahl", "Window Selection")
        
    For I2 = 1 To 21
        Set MB = Men|fffd|Neu.Controls.Add _
            (Type:=msoControlButton)
        With MB
            .Caption = MenueEintrag(I2)
            .Parameter = MenueEintrag(I2)
            .Style = msoButtonIconAndCaption
            .OnAction = "MenueAuswahl"
            If I2 > 6 _
                Then .FaceId = 222 _
                Else .FaceId = 247
            If I2 = 19 Then .FaceId = 1111
            If I2 = 20 Then .FaceId = 171
            If I2 = 21 Then .FaceId = 170
            
            If MenueEintrag(I2) = IIf(Sprache = "D", "Januar", "January") _
            Or MenueEintrag(I2) = IIf(Sprache = "D", "Fenster Normal", "Window size normal") _
                Then .BeginGroup = True _
                Else .BeginGroup = False
            
        End With
    Next I2
    
    I = Application.CommandBars(1).Controls.Count
    i_Hilfe = Application.CommandBars(1).Controls(I).Index + 1
    Set Men|fffd|Neu = Application.CommandBars(1). _
        Controls.Add(Type:=msoControlPopup, _
        Before:=i_Hilfe, Temporary:=True)
        Men|fffd|Neu.Caption = IIf(Sprache = "D", "Datensicherung", "Backup")
    
    Set MB = Men|fffd|Neu.Controls.Add _
        (Type:=msoControlButton)
    With MB
        .Caption = IIf(Sprache = "D", "Backup Anlegen", "Creating backup")
        .Style = msoButtonIconAndCaption
        .OnAction = "BackupExport"
        .FaceId = 3
    End With
    
    Set MB = Men|fffd|Neu.Controls.Add _
        (Type:=msoControlButton)
    With MB
        .Caption = IIf(Sprache = "D", "Backup Einpflegen", "Update with backup")
        .Style = msoButtonIconAndCaption
        .OnAction = "BackupImport"
        .FaceId = 22
    End With
    Set MB = Men|fffd|Neu.Controls.Add _
        (Type:=msoControlButton)
    With MB
        .Caption = IIf(Sprache = "D", "Backup Anlegen (Import aus anderem E-A Rechner)", _
                                    "Import data from another calculator into internal backup")
        .Style = msoButtonIconAndCaption
        .OnAction = "BackupImportMappenDaten"
        .BeginGroup = True
        .FaceId = 3
    End With
    
    Set MB = Men|fffd|Neu.Controls.Add _
        (Type:=msoControlButton)
    With MB
        .Caption = IIf(Sprache = "D", "Mappe auf Folgejahr umstellen", "Prepare calculator for next year")
        .Style = msoButtonIconAndCaption
        .OnAction = "FolgejahrAnlegen"
        .FaceId = 22
    End With
End Sub

Sub Men|fffd|L|fffd|schen()
On Error Resume Next
    With Application.CommandBars(1)
        .Controls("Fenster-Auswahl").Delete
        .Controls("Window Selection").Delete
        .Controls("Datensicherung").Delete
        .Controls("Backup").Delete
    End With
End Sub

Sub MenueAuswahl()
    Dim Tabelle
    Dim Zelle
    Dim wksName
    
    Application.ScreenUpdating = True
    wksName = ThisWorkbook.Name
    
    On Error GoTo KeinZweitesFenster
    Windows(wksName & ":2").Activate
    ActiveWindow.Close
KeinZweitesFenster:

    If MenueItem <> "" _
    Then
        Auswahl = AuswahlUmsetzen(MenueItem, "D")
        MenueItem = ""
    Else
        Auswahl = IIf(CommandBars.ActionControl.Parameter <> _
        "", CommandBars.ActionControl.Parameter, IIf(Sprache = "D", "Jahres-|fffd|bersicht", "Annual Overview"))
    End If
    
    If ScreenFactor = "" _
        Then ScreenFactor = 1
    
    Zelle = "B10"
    If Z_Auswahl = "" _
        Then Z_Auswahl = IIf(Sprache = "D", "Planung, Jahres-|fffd|bersicht", "Annual Plannig, Annual Overview")
        
Start:
    ActiveWindow.WindowState = xlNormal
    Select Case Auswahl
        Case "Jahres-|fffd|bersicht", "Annual Overview"
            Tabelle = "Jahr"
            Zelle = "B1"
        Case Is = "Planung", "Annual Budget"
            Tabelle = "Planung"
            Zelle = "B4"
        Case Is = "Varianten", "Diverging amounts"
            Tabelle = "Varianten"
            Zelle = "B4"
        Case Is = "Planung, Jahres-|fffd|bersicht", "Annual Budget, Annual Overview"
            Sheets("Planung").Select
            Sheets("Planung").Range("B5").Select
            With ActiveWindow
                If ScreenFactor = 1 _
                    Then .Height = Application.UsableHeight _
                    Else .Height = 450 * ScreenFactor
                .Width = 441.25 * ScreenFactor
                .Top = 1
                .Left = 1
            End With

            Sheets("Planung").Activate
            ActiveSheet.Range("B1").Activate
            
            ActiveWindow.NewWindow
            With ActiveWindow
                .Width = 325 * ScreenFactor
                If ScreenFactor = 1 _
                Then
                    .Height = Application.UsableHeight
                    .Width = Application.UsableWidth - 438.75 * ScreenFactor
                Else
                    .Height = 450 * ScreenFactor
                End If
                .Top = 1
                .Left = 442.75 * ScreenFactor
            End With
            Z_Auswahl = Auswahl
            Sheets("Jahr").Activate
            Sheets("Jahr").Range("B5").Activate
            GoTo Ende
            
        Case Is = "Varianten, Jahres-|fffd|bersicht", "Diverging amounts, Annual Overview"
            Sheets("Varianten").Select
            Sheets("Varianten").Range("B5").Select
            With ActiveWindow
                .Width = 441.25 * ScreenFactor
                If ScreenFactor = 1 _
                    Then .Height = Application.UsableHeight _
                    Else .Height = 450 * ScreenFactor
                .Top = 1
                .Left = 1
            End With
            
            ActiveWindow.NewWindow
            Sheets("Jahr").Select
            Sheets("Jahr").Range("B5").Select
            With ActiveWindow
                .Width = 325 * ScreenFactor
                If ScreenFactor = 1 _
                Then
                    .Height = Application.UsableHeight
                    .Width = Application.UsableWidth - 438.75 * ScreenFactor
                Else
                    .Height = 450 * ScreenFactor
                End If
                .Top = 1
                .Left = 442.75 * ScreenFactor
            End With
            Z_Auswahl = Auswahl
            GoTo Ende
        Case Is = "lfd. Monat, Jahres-|fffd|bersicht", "current month, Annual Overview"
            Tabelle = Worksheets("Jahr").Cells(6 + LfdNrMonat, 2).Text
            Sheets(Tabelle).Select
            Sheets(Tabelle).Range(Zelle).Select
            
            With ActiveWindow
                .Width = 438.75 * ScreenFactor
                If ScreenFactor = 1 _
                    Then .Height = Application.UsableHeight _
                    Else .Height = 450 * ScreenFactor
                .Top = 1
                .Left = 1
            End With
            
            ActiveWindow.NewWindow
            Sheets("Jahr").Select
            Sheets("Jahr").Range("B5").Select
            With ActiveWindow
                .Width = 325 * ScreenFactor
                If ScreenFactor = 1 _
                Then
                    .Height = Application.UsableHeight
                    .Width = Application.UsableWidth - 438.75 * ScreenFactor
                Else
                    .Height = 450 * ScreenFactor
                End If
                .Top = 1
                .Left = 442.75 * ScreenFactor
            End With
            Z_Auswahl = Auswahl
            GoTo Ende
        Case Is = "lfd. Monat", "current month"
            Tabelle = Worksheets("Jahr").Cells(6 + LfdNrMonat, 2).Text
            Sheets(Tabelle).Select
            Sheets(Tabelle).Range(Zelle).Select
            
'            Application.ScreenUpdating = False
            With ActiveWindow
                .Width = 438.75 * ScreenFactor
                If ScreenFactor = 1 _
                Then
                    .Height = Application.UsableHeight
                    .Width = Application.UsableWidth
                Else
                    .Height = 450 * ScreenFactor
                End If
                .Top = 1
                .Left = 1
            End With
            Z_Auswahl = Auswahl
            GoTo Ende

        Case Is = "Januar", "January"
            Tabelle = Worksheets("Jahr").Cells(6, 2).Text
        Case Is = "Februar", "February"
            Tabelle = Worksheets("Jahr").Cells(7, 2).Text
        Case Is = "M|fffd|rz", "March"
            Tabelle = Worksheets("Jahr").Cells(8, 2).Text
        Case Is = "April"
            Tabelle = Worksheets("Jahr").Cells(9, 2).Text
        Case Is = "Mai", "May"
            Tabelle = Worksheets("Jahr").Cells(10, 2).Text
        Case Is = "Juni", "June"
            Tabelle = Worksheets("Jahr").Cells(11, 2).Text
        Case Is = "Juli", "July"
            Tabelle = Worksheets("Jahr").Cells(12, 2).Text
        Case Is = "August"
            Tabelle = Worksheets("Jahr").Cells(13, 2).Text
        Case Is = "September"
            Tabelle = Worksheets("Jahr").Cells(14, 2).Text
        Case Is = "Oktober", "October"
            Tabelle = Worksheets("Jahr").Cells(15, 2).Text
        Case Is = "November"
            Tabelle = Worksheets("Jahr").Cells(16, 2).Text
        Case Is = "Dezember", "December"
            Tabelle = Worksheets("Jahr").Cells(17, 2).Text
        Case Is = "Fenster Normal", "Window size normal"
            ScreenFactor = 1
            Auswahl = Z_Auswahl
            ActiveWindow.Height = Application.UsableHeight
            ActiveWindow.Width = Application.UsableWidth
            GoTo Start
        Case Is = "Fenster Klein", "Window size small"
            ScreenFactor = 0.8
            Auswahl = Z_Auswahl
            ActiveWindow.Width = 760.5 * ScreenFactor
            ActiveWindow.Height = 449.25 * ScreenFactor
            GoTo Start
        Case Is = "Fenster Gro|fffd|", "Window size large"
            ScreenFactor = 1.2
            Auswahl = Z_Auswahl
            ActiveWindow.Width = 760.5 * ScreenFactor
            ActiveWindow.Height = 449.25 * ScreenFactor
            GoTo Start
        Case Else
            Exit Sub
    End Select
    Z_Auswahl = Auswahl

    Worksheets(Tabelle).Select
    Worksheets(Tabelle).Range(Zelle).Select
    Worksheets(Tabelle).Activate
    With ActiveWindow
        If ScreenFactor = 1 _
        Then
            .Height = Application.UsableHeight
            .Width = Application.UsableWidth
            ActiveWindow.Height = Application.UsableHeight
            ActiveWindow.Width = Application.UsableWidth
        Else
            .Width = 760.5 * ScreenFactor
            .Height = 449.25 * ScreenFactor
        End If
    End With
Ende:
    Call SchutzSetzen(ActiveSheet, True)
End Sub

Public Function LfdNrMonat()
    Dim dat As String

    dat = IIf(InStr(1, Date, "."), Mid(Date, 4, 2), Mid(Date, 1, InStr(1, Date & "/", "/") - 1))
    LfdNrMonat = dat - 1
    
End Function

Public Sub Vor()
    Sheets(Monats_Tabelle(Mid(ActiveSheet.Name, 1, 4), "Vor")).Select
End Sub

Public Sub Zur|fffd|ck()
    Sheets(Monats_Tabelle(Mid(ActiveSheet.Name, 1, 4), "Zur|fffd|ck")).Select
End Sub

Public Sub SchutzEntfernen(Blatt As Worksheet)
    Z_Protect = Blatt.ProtectContents
    Blatt.Unprotect (PW)
End Sub

Public Sub SchutzSetzen(Blatt As Worksheet, Vorgabe As Boolean)
'Exit Sub
    Blatt.Unprotect (PW)
    
    If Vorgabe = True _
        Then Blatt.Protect (PW), AllowFormattingCells:=True _
        Else Blatt.Unprotect (PW)
    Z_Protect = True
Ende:
End Sub

Public Sub BackupExport()
    Dim LetztesBlatt
    Dim sh As Worksheet
    Dim I
    Dim TabNam
    
    If Sheets("Jahr").Range("ExeStart") = False _
    Then
        If Sprache = "D" _
        Then
            MsgBox "Diese Excel-Mappe kann nur |fffd|ber die EA-Rechner.EXE ge|fffd|ffnet werden.", _
                vbExclamation, "Starten des EA-Rechner"
        Else
            MsgBox "This Excel workbook can be opened only from the Calculator.EXE", _
                vbExclamation, "Start of Calculator"
        End If
        
        Application.Quit
        Exit Sub
    End If
    On Error GoTo Ende
    
    Application.EnableEvents = False
    Application.DisplayAlerts = False
    Application.Calculation = xlCalculationManual
    
    If ImportAusAndererMappe _
    Then
        MonateSichern = vbYes
    Else
        If Sprache = "D" _
        Then
            MonateSichern = MsgBox("Es wird ein schon bestehendes, (internes) Backup |fffd|berschrieben." & vbLf & vbLf & _
                "Mit "" Nein/No "" k|fffd|nnen Sie diese Aktion |fffd|berspringen und " & vbLf _
                & " - falls erforderlich - vorher eine Kopie des Ordners und/oder" & vbLf _
                & " dieser Mappe sichern. ", 36 + 256, "Backup anlegen")
        Else
            MonateSichern = MsgBox("The present internal backup, will be overwritten." & vbLf & vbLf & _
                "By "" No/Nein"" you can skip this action and - if necessary - " & vbLf & _
                "at first save a copy of the folder and/or this workbook. ", 36 + 256, "Choice of interrupt for copy ")
        End If
    End If
    If MonateSichern = vbYes _
    Then
        MenueItem = "Jahres-|fffd|bersicht"
        Call MenueAuswahl
        
        OrgWb.Sheets("Backup").Visible = True
        OrgWb.Sheets("Backup").Delete
        On Error GoTo Ende
        Application.DisplayAlerts = True
        Application.ScreenUpdating = False
        OrgWb.Sheets.Add
        OrgWb.Activate
        ActiveSheet.Name = "Backup"
        LetztesBlatt = OrgWb.Sheets.Count
        OrgWb.Sheets("Backup").Move After:=Sheets(LetztesBlatt)

        If Not (ImportAusAndererMappe) Then Set UniWb = OrgWb
        For Each sh In UniWb.Worksheets
            TabNam = Mid(sh.Name, 1, 4)
            
            Select Case (TabNam)
                Case "Jahr"
                    Call JahrSichern(TabNam, I)
                Case "Plan"
                    Call PlanSichern(TabNam, I)
                Case "Vari"
                    Call VariSichern(TabNam, I)
                Case _
                "Jan.", "Feb.", "Mrz.", "Mar.", _
                "Apr.", "Mai.", "May.", "Jun.", _
                "Jul.", "Aug.", "Sep.", _
                "Okt.", "Oct.", "Nov.", "Dez.", "Dec."
                    Call MonatSichern(TabNam, I, sh.Name)
            End Select
        Next
    Else
        Application.ScreenUpdating = True
        Application.Calculation = xlCalculationAutomatic
        Application.EnableEvents = True
        Exit Sub
    End If
    OrgWb.Sheets("Backup").Cells.Select
    Selection.Columns.AutoFit
    OrgWb.Sheets("Backup").Cells(2, 1).Select
    
    Application.ScreenUpdating = True
    Application.CutCopyMode = False
    Application.Calculation = xlCalculationAutomatic
    Application.EnableEvents = True
    
    If Worksheets("Jahr").Cells(8, 11) = "" _
        Then Z_Auswahl = "Planung, Jahres-|fffd|bersicht" _
        Else Z_Auswahl = Worksheets("Jahr").Range("K8")
    MenueItem = Z_Auswahl
    Call MenueAuswahl
    Sheets("Backup").Visible = xlVeryHidden
    Exit Sub
Ende:
    If Sprache = "D" _
    Then
        MsgBox "Ein Fehler ist beim Anlegen des Backup aufgetreten."
    Else
        MsgBox "An error occurred while creating the backup."
    End If
End Sub

Public Sub JahrSichern(SatzArt, I)
    Dim II
    Dim FeldZl
    Dim FeldSp
    
    FeldZl = Array(, 1, 6, 7)
    FeldSp = Array(, 9, 11, 11)

    For II = 1 To 3
        I = I + 1
        OrgWb.Sheets("Backup").Cells(I, 1) = SatzArt
        OrgWb.Sheets("Backup").Cells(I, 2) = FeldZl(II)
        OrgWb.Sheets("Backup").Cells(I, 3) = FeldSp(II)
        OrgWb.Sheets("Backup").Cells(I, 4) = _
            UniWb.Sheets("Jahr").Cells(FeldZl(II), FeldSp(II))
        Select Case (True)
            Case II = 1 And OrgWb.Sheets("Backup").Cells(I, 4) = ""
                OrgWb.Sheets("Backup").Cells(I, 4) = 0
            Case II = 2 And OrgWb.Sheets("Backup").Cells(I, 4) = ""
                OrgWb.Sheets("Backup").Cells(I, 4) = 2006
            Case II = 3 And OrgWb.Sheets("Backup").Cells(I, 4) = ""
                OrgWb.Sheets("Backup").Cells(I, 4) = Range("Currency")
        End Select
    Next
End Sub

Public Sub PlanSichern(SatzArt, I)
    Dim II
    Dim LetzteTabZeile
    
    LetzteTabZeile = LetzteBenutzteZeile("Planung")
    II = 5
    Do While (II < LetzteTabZeile + 1)
        I = I + 1
        OrgWb.Sheets("Backup").Cells(I, 1) = SatzArt
        OrgWb.Sheets("Backup").Cells(I, 2) = II
        OrgWb.Sheets("Backup").Cells(I, 3) = "E"
        OrgWb.Sheets("Backup").Cells(I, 4) = UniWb.Sheets("Planung").Cells(II, 2)
        OrgWb.Sheets("Backup").Cells(I, 5) = UniWb.Sheets("Planung").Cells(II, 3)
        OrgWb.Sheets("Backup").Cells(I, 6) = UniWb.Sheets("Planung").Cells(II, 4)
        UniWb.Sheets("Planung").Range("E" & II & ":P" & II).Copy
        Range("G" & I).Select
        Selection.PasteSpecial Paste:=xlValues
        II = II + 1
    Loop
End Sub

Public Sub VariSichern(SatzArt, I)
    Dim Z
    Dim LetzteTabZeile
    
    LetzteTabZeile = LetzteBenutzteZeile("Varianten")
    For Z = 5 To LetzteTabZeile
        I = I + 1
        OrgWb.Sheets("Backup").Cells(I, 1) = SatzArt
        OrgWb.Sheets("Backup").Cells(I, 2) = Z
        OrgWb.Sheets("Backup").Cells(I, 3) = "C"
        UniWb.Sheets("Varianten").Range("C" & Z & ":N" & Z).Copy
        Range("D" & I).Select
        Selection.PasteSpecial Paste:=xlValues
    Next
End Sub

Public Sub MonatSichern(SatzArt, I, Blatt)
    Dim Z
    Dim LetzteTabZeile
    On Error GoTo Ende
    LetzteTabZeile = LetzteBenutzteZeile(Blatt)
    
    For Z = 10 To LetzteTabZeile
        I = I + 1
        OrgWb.Sheets("Backup").Cells(I, 1) = SatzArt
        OrgWb.Sheets("Backup").Cells(I, 2) = Z
        OrgWb.Sheets("Backup").Cells(I, 3) = "C, G"
        
        UniWb.Sheets(Blatt).Range("E" & Z & ":E" & Z).Copy
        Range("D" & I).Select
        Selection.PasteSpecial Paste:=xlValues
        UniWb.Sheets(Blatt).Range("G" & Z & ":J" & Z).Copy
        Range("E" & I).Select
        Selection.PasteSpecial Paste:=xlValues
    Next
    
    Exit Sub
Ende:
        If Sprache = "D" _
        Then
            MsgBox "Beim Sichern der Monats-Tabellen ist ein Fehler aufgetreten."
        Else
            MsgBox "An error occurred during backup of the months sheets."
        End If
End Sub

Public Sub BackupImport()
    Dim Bl|fffd|tter|fffd|berschreiben
    Dim sh As Worksheet
    Dim I
    Dim TabNam
    Dim Z_Summe
    Dim ZeilenFaktor
    Dim Conf
    
    If Sheets("Jahr").Range("ExeStart") = False _
    Then
        If Sprache = "D" _
        Then
            MsgBox "Diese Excel-Mappe kann nur |fffd|ber die EA-Rechner.EXE ge|fffd|ffnet werden.", _
                vbExclamation, "Starten des EA-Rechner"
        Else
            MsgBox "This Excel workbook can be opened only from the Calculator.EXE", _
                vbExclamation, "Start of Calculator"
        End If
        Application.Quit
        Exit Sub
    End If
    
    On Error GoTo Ende
  
    ZeilenFaktor = ZeilenDifferenz
    If ZeilenFaktor <> 0 _
    Then
        Application.ScreenUpdating = False
        If Sprache = "D" _
        Then
            MsgBox "Die Zeilenanzahl im EA-Rechner mu|fffd| an die Anzahl im Backup angeglichen werden.", _
            vbExclamation, "Zeilenanzahl angleichen"
        Else
            MsgBox "The number of lines in the spread sheets must be increased to match the number in the backup", _
            vbExclamation, "Aligning number of lines"
        End If

        Select Case (ZeilenFaktor)
            Case Is > 0
                For I = 1 To ZeilenFaktor
                    Call AddLine
                Next
            Case Is < 0
                KeinePruefungBeiEinpflegenAusBackup = True
                For I = 1 To (ZeilenFaktor * -1)
                    Call DelLine
                Next
                KeinePruefungBeiEinpflegenAusBackup = False
            Case Else
        End Select
        Cells(1, 1).Select
    End If
        
    Set BkUp = Worksheets("Backup")
    LetzteZeile = BkUp.Range("A65536").End(xlUp).Row
    
    On Error Resume Next
    
    Application.EnableEvents = False
    Application.DisplayAlerts = False
    Application.Calculation = xlCalculationManual
        
    
    If Sprache = "D" _
    Then
        Bl|fffd|tter|fffd|berschreiben = MsgBox("Alle aktuellen EA-Daten werden durch die Backup-Daten ersetzt.", _
        vbExclamation + vbOKCancel + vbDefaultButton2, "Backup einpflegen")
    Else
        Bl|fffd|tter|fffd|berschreiben = MsgBox("All current data is replaced with the backup data", _
        vbExclamation + vbOKCancel + vbDefaultButton2, "Update from Backup")
    End If
        
    If Bl|fffd|tter|fffd|berschreiben = vbOK _
    Then
        Application.DisplayAlerts = True
        Application.ScreenUpdating = True
            
        MenueItem = "Jahres-|fffd|bersicht"
        Call MenueAuswahl

        For Each sh In Worksheets
            TabNam = Mid(sh.Name, 1, 4)
            
            Select Case (TabNam)
                Case "Jahr"
                    Call JahrEinpflegen(TabNam, I, sh.Name)
                Case "Plan"
                    I = 5
                    Call PlanEinpflegen(TabNam, I, sh.Name)
                Case "Vari"
                    I = 5
                    Call VariEinpflegen(TabNam, I, sh.Name)
                Case _
                "Jan.", "Feb.", "Mrz.", "Mar.", _
                "Apr.", "Mai.", "May.", "Jun.", _
                "Jul.", "Aug.", "Sep.", _
                "Okt.", "Oct.", "Nov.", "Dez.", "Dec."
                    I = 10
                    Application.Calculation = xlCalculationAutomatic
                    Application.ScreenUpdating = True
                    Call MonateEinpflegen(TabNam, I, sh.Name)
                    Application.Calculation = xlCalculationManual
            End Select
        Next
    Else
        Exit Sub
    End If
Ende:
    
    Application.Calculation = xlCalculationAutomatic
    Application.EnableEvents = True
    
    Call Schutz(False)
    Application.ScreenUpdating = False
    Call JahresZahlenErmitteln
    Application.ScreenUpdating = True
    Call Schutz(True)
    
    If Worksheets("Jahr").Cells(8, 11) = "" _
        Then Z_Auswahl = "Planung, Jahres-|fffd|bersicht" _
        Else Z_Auswahl = Worksheets("Jahr").Range("K8")
    MenueItem = Z_Auswahl
    Call MenueAuswahl
    Sheets("Backup").Visible = xlVeryHidden

End Sub

Public Sub JahrEinpflegen(SatzArt, I, Tabelle)
    Dim II, Z, S
    Dim JahrFestschreiben

    Call SchutzEntfernen(Sheets(Tabelle))
    JahrFestschreiben = Sheets("Jahr").Cells(6, 11)
    For II = 1 To LetzteZeile
        If Sheets("Backup").Cells(II, 1) = SatzArt _
        Then
            Z = Sheets("Backup").Cells(II, 2)
            S = Sheets("Backup").Cells(II, 3)
            Sheets(Tabelle).Cells(Z, S) = Sheets("Backup").Cells(II, 4)
        End If
    Next
    Sheets("Jahr").Cells(6, 11) = JahrFestschreiben
    Call SchutzSetzen(Sheets(Tabelle), True)
    Cells(6, 2).Activate
End Sub

Public Sub PlanEinpflegen(SatzArt, I, Tabelle)
    Dim II, Z, S
    
    Call SchutzEntfernen(Sheets(Tabelle))
    For II = 1 To LetzteZeile
        If Sheets("Backup").Cells(II, 1) = SatzArt _
        Then
            BkUp.Range("D" & II & ":R" & II).Copy
            Sheets(Tabelle).Select
            Range("B" & I).Select
            Selection.PasteSpecial Paste:=xlValues
            Application.CutCopyMode = False
            I = I + 1
        End If
    Next
    Call SchutzSetzen(Sheets(Tabelle), True)
    Cells(5, 2).Activate
End Sub

Public Sub VariEinpflegen(SatzArt, I, Tabelle)
    Dim II
    Call SchutzEntfernen(Sheets(Tabelle))
    For II = 1 To LetzteZeile
        If Sheets("Backup").Cells(II, 1) = SatzArt _
        Then
            BkUp.Range("D" & II & ":O" & II).Copy
            Sheets(Tabelle).Select
            Range("C" & I).Select
            Selection.PasteSpecial Paste:=xlValues
            Application.CutCopyMode = False
            I = I + 1
        End If
    Next
    Call SchutzSetzen(Sheets(Tabelle), True)
    Cells(5, 2).Activate
End Sub

Public Sub MonateEinpflegen(SatzArt, I, Tabelle)
    Dim II
    Call SchutzEntfernen(Sheets(Tabelle))
    For II = 1 To LetzteZeile
        If Sheets("Backup").Cells(II, 1) = SatzArt _
        Or SatzArt = "Mar." And Sheets("Backup").Cells(II, 1) = "Mrz." _
        Or SatzArt = "Mrz." And Sheets("Backup").Cells(II, 1) = "Mar." _
        Or SatzArt = "May." And Sheets("Backup").Cells(II, 1) = "Mai." _
        Or SatzArt = "Mai." And Sheets("Backup").Cells(II, 1) = "May." _
        Or SatzArt = "Oct." And Sheets("Backup").Cells(II, 1) = "Okt." _
        Or SatzArt = "Okt." And Sheets("Backup").Cells(II, 1) = "Oct." _
        Or SatzArt = "Dec." And Sheets("Backup").Cells(II, 1) = "Dez." _
        Or SatzArt = "Dez." And Sheets("Backup").Cells(II, 1) = "Dec." _
        Then
            Sheets(Tabelle).Cells(I, 5) = Sheets("Backup").Cells(II, 4)
            BkUp.Range("E" & II & ":H" & II).Copy
            Sheets(Tabelle).Select
            Range("G" & I).Select
            Selection.PasteSpecial Paste:=xlValues
            Application.CutCopyMode = False
            I = I + 1
        End If
    Next
    Call SchutzSetzen(Sheets(Tabelle), True)
    Cells(10, 2).Activate
End Sub

Public Sub BackupImportMappenDaten()
    Dim VarVerzPfad
    Dim VarMBoxErr
    Dim Name
    Dim Tabelle As Worksheet
    
    
    If Sheets("Jahr").Range("ExeStart") = False _
    Then
        If Sprache = "D" _
        Then
            MsgBox "Diese Excel-Mappe kann nur |fffd|ber die EA-Rechner.EXE ge|fffd|ffnet werden.", _
                vbExclamation, "Starten des EA-Rechner"
        Else
            MsgBox "This Excel workbook can be opened only from the Calculator.EXE", _
                vbExclamation, "Start of Calculator"
        End If
        Application.Quit
        Exit Sub
    End If
    
    MenueItem = IIf(Sprache = "D", "Jahres-|fffd|bersicht", "Annual Overview")
    Call MenueAuswahl
    
    PfadNameAlt = ThisWorkbook.Path
    
    VarVerzPfad = Application.GetOpenFilename("Excel Dateien (*.xls), *.xls", , _
    "Daten aus anderer Mappe |fffd|bernehmen")

    If VarVerzPfad = False _
    Then
        Set UniWb = OrgWb
        Exit Sub
    Else
        Name = Mid(VarVerzPfad, InStrRev(VarVerzPfad, "\") + 1)
        
        If Name = ThisWorkbook.Name _
        Then
            If Sprache = "D" _
            Then
                MsgBox "Verarbeitung bei identischen Mappen-Namen nicht m|fffd|glich." & vbLf & vbLf & _
                    "L|fffd|sung: Im |fffd|ffnen-Dialog den identischen Namen |fffd|ndern.", _
                    vbCritical, "Daten|fffd|bernahmen aus anderer Mappe"
            Else
                MsgBox "Processing with identical Workbook name impossible." & vbLf & vbLf & _
                    "Solution: Change identical name in the Open-dialogue.", _
                    vbCritical, "Data transfer from another Workbook"
            End If
            Exit Sub
        End If
        
        PfadName = Mid(VarVerzPfad, 1, InStrRev(VarVerzPfad, "\") - 1)
        ChDir PfadName & "\"
        
        Application.EnableEvents = False
        Workbooks.Open Filename:=Name, UpdateLinks:=0
        Application.EnableEvents = True
        Workbooks(Name).Activate
        
        Dim wbk As Workbook
        Set wbk = Workbooks(Name)
         
        For Each Tabelle In wbk.Worksheets
            If Tabelle.Name = "Jahr" Then GoTo Gefunden
        Next
Gefunden:

        If Tabelle.Name = "Jahr" _
        Then
        Else
            Workbooks(Name).Close savechanges:=False
            If Sprache = "D" _
            Then
                MsgBox "F|fffd|r Datenimport mu|fffd| eine ""EA Rechner"" Mappe ausgew|fffd|hlt sein."
            Else
                MsgBox "For data import an ""Calculator"" Workbook must be selected."
            End If
            Exit Sub
        End If
        Set FremdWb = ActiveWorkbook
        Set UniWb = FremdWb
        ActiveWindow.WindowState = xlMinimized
        
        ChDir PfadNameAlt
        
        ImportAusAndererMappe = True
        Call BackupExport
        ImportAusAndererMappe = False
        
        If MonateSichern = vbNo _
        Then
            If Sprache = "D" _
            Then
                MsgBox "Der Datenimport aus einer anderen EA Rechner-Mappe wurde abgebrochen."
            Else
                MsgBox "The data import from another Calculator Workbook was cancelled."
            End If
        Else
            If Sprache = "D" _
            Then
                MsgBox "Backup wurde erfolgreich mit den Daten aus einer anderen EA Rechner-Mappe aufdatiert." _
                & vbLf & vbLf & "Um die Daten in diesen EA Rechner zu |fffd|bernehmen bitte den Men|fffd|punkt" _
                & vbLf & vbLf & vbTab & vbTab & """ Datensicherung -> Backup Einpflegen""" _
                & vbLf & vbLf & "aufrufen."
            Else
                MsgBox "Backup has been successfully updated with data from another Calculator workbook." _
                & vbLf & vbLf & "To update the data in this workbook click the menue item" _
                & vbLf & vbLf & vbTab & vbTab & """ Backup -> Update with Backup"""
            End If
        End If
        
        FremdWb.Saved = True
        FremdWb.Close savechanges:=False
        Application.DisplayAlerts = True
    End If
End Sub

Public Sub FolgejahrAnlegen()
    Dim MonatsBl|fffd|tterGrundstellen
    Dim LetztesBlatt
    Dim TabName
    Dim Zeile
    Dim JahresWechsel
    Dim LetzterBankSaldo
    
    If Sheets("Jahr").Range("ExeStart") = False _
    Then
        If Sprache = "D" _
        Then
            MsgBox "Diese Excel-Mappe kann nur |fffd|ber die EA-Rechner.EXE ge|fffd|ffnet werden.", _
                vbExclamation, "Starten des EA-Rechner"
        Else
            MsgBox "This Excel workbook can be opened only from the Calculator.EXE", _
                vbExclamation, "Start of Calculator"
        End If
        Application.Quit
        Exit Sub
    End If
    FolgejahrUmstellung = False

    If Sprache = "D" _
    Then
        MonatsBl|fffd|tterGrundstellen = MsgBox _
            ("1. Neues Kalenderjahr wird festgelegt " & vbLf & vbLf & _
             "2. Optional: Das laufende Jahr kann unter "" Backup "" (intern) gesichert werden." & vbLf & vbLf & _
             "3. Daten des alten Jahres in "" Varianten "" sowie die in "" Monatstabellen "" werden grundgestellt." & vbLf & vbLf & _
             "4. Die Daten in "" Planung "" bleiben zur Verwendung/Anpassung f|fffd|r das neue Jahr erhalten." & vbLf & vbLf & _
             "Achtung: Wenn Sie eigene Tabellen angelegt haben dann jetzt " _
             & vbLf & vbLf & """Abbrechen""" & vbLf & vbLf & "und erst Mappe kopieren/sichern!", _
             vbInformation + vbOKCancel + vbDefaultButton2, _
             "Aktionen f|fffd|r Jahres-Wechsel")
    Else
        MonatsBl|fffd|tterGrundstellen = MsgBox _
            ("1. New calendar year gets set." & vbLf & vbLf & _
             "2. Optional: The current year can backed up in the (internal) ""Backup"" sheet." & vbLf & vbLf & _
             "3. ""Varianten"" with its data of the old year and also the ""months""-sheets are reset." & vbLf & vbLf & _
             "4. The data in ""Planung"" remain for further usage or change in the new year." & vbLf & vbLf & _
             "Caution: If you created your own additional sheets in the workbook then" _
             & vbLf & vbLf & " ""Cancel""" & vbLf & vbLf & "and backup the folder and/or workbook first.", _
             vbInformation + vbOKCancel + vbDefaultButton2, _
             "Actions for to prepare the workbook for a new year")
    End If
     
    If MonatsBl|fffd|tterGrundstellen = 1 _
    Then
        FolgejahrUmstellung = True
        TabName = "Jahr"
        Application.Calculation = xlCalculationManual
        Jahreszahl = IIf(InStr(1, Date, "."), Mid(Date, InStrRev(Date, ".") + 1, 4), Mid(Date, InStrRev(Date, "/") + 1, 4)) + 1
        Do
            If Sprache = "D" _
            Then
                Jahreszahl = InputBox("Bitte legen Sie ein neues Kalender-Jahr" _
                    & vbLf & "zwischen 1996 und 2030 fest.", "Grundstellen f|fffd|r Folgejahr", Jahreszahl)
            Else
                Jahreszahl = InputBox("Insert th new calendar year." _
                    & vbLf & "within range of 1996 to 2030.", "Determine the year", Jahreszahl)
            End If
            If Jahreszahl = "" Then Exit Sub
        Loop Until (Jahreszahl > 1995 And Jahreszahl < 2031)
        
        ImportAusAndererMappe = False
        Call BackupExport
        If MonateSichern = vbNo _
        Then
            If Sprache = "D" _
            Then
                JahresWechsel = MsgBox("Internes Backup wurde |fffd|bergangen. Umstellung auf das Folgejahr fortsetzen?", _
                    vbQuestion + vbYesNo + vbDefaultButton1, "Jahreswechsel")
            Else
                JahresWechsel = MsgBox("Internal backup remains unchanged. Continue with reset for the determined year?", _
                    vbQuestion + vbYesNo + vbDefaultButton1, "Reset workbook for another year")
            End If

            If JahresWechsel = vbYes _
                Then _
                Else Exit Sub
        End If
        
        Call SchutzEntfernen(Sheets("Jahr"))
        Sheets("Jahr").Cells(6, 11) = Jahreszahl
        LetzterBankSaldo = Sheets("Jahr").Cells(17, 8)
        Call SchutzSetzen(Sheets("Jahr"), True)
        
        Call MonatsTabellenGrundstellen
        
        Application.Calculation = xlCalculationAutomatic
        Call JahresZahlenErmitteln
        LetztesBlatt = Sheets.Count
        
        Sheets("Varianten").Select
        Zeile = Range("Varianten").Rows.Count + 4
        Range("C5:N" & Zeile).Select
        Selection.ClearContents
        Cells(5, 3).Select
        Application.CutCopyMode = False
        
        On Error Resume Next

        Sheets("Backup").Move After:=Sheets(LetztesBlatt)
        
        Call BackupAnsEndeVerschieben
        
        Application.EnableEvents = True
        
        MenueItem = "Jahres-|fffd|bersicht"
        Call MenueAuswahl
    
        Sheets("Jahr").Select
        Cells(1, 9).Value = Cells(1, 9).Value
        
        If Sprache = "D" _
        Then
            MsgBox "Der momentane ""Startsaldo Bankkonto: "" " & vbTab & Format(Cells(1, 9).Value, "##,##0.00") & " " & Cells(1, 4) & vbLf & _
            "wird durch den Dezember-Saldo des alten Jahres: " & vbLf & vbTab & vbTab & vbTab & vbTab & _
            Format(LetzterBankSaldo, "##,##0.00") & " " & Cells(1, 4) & vbLf & _
            "ersetzt.", vbExclamation, "Startsaldo auf Seite ""Jahres-|fffd|bersicht |fffd|bersicht"""
        Else
            MsgBox "The actual ""Opening balance bank account: "" " _
            & vbTab & Format(Cells(1, 9).Value, "##,##0.00") & " " & Cells(1, 4) & vbLf & _
            "gets replaced by the December-balance of " & vbLf & "the old year: " & vbTab & vbTab & vbTab & vbTab _
            & Format(LetzterBankSaldo, "##,##0.00") & " " & Cells(1, 4) & ".", _
            vbExclamation, "Opening balance bank account in the ""Annual Overview"" sheet"
        End If

        Cells(1, 9).Value = LetzterBankSaldo
        ThisWorkbook.Sheets("Jahr").Cells(50, 28) = ""

        If Sprache = "D" _
        Then
            MsgBox "Beim ersten Nutzen der Excel-Anwendung im Jahr " & Jahreszahl & _
                " beachten Sie " & vbLf & "bitte, dass der korrekte " & _
                """ Startsaldo Bankkonto "" aus dem ersten " & vbLf & "Kontoauszug f|fffd|r das neue Jahr Verwendung findet!", _
                vbExclamation, "Startsaldo auf Jahres-Seite"
        Else
            MsgBox "At first usage of the reset Calculator " & _
                " please make sure, that the" & vbLf & _
                " "" Starting balance bank accout  "" is eaqual to the start balance " & vbLf & _
                "listed in your first bankaccount statement.", _
                vbExclamation, "Start balance in the the ""Annual Overview"" sheet"
        End If
        
        If Sprache = "D" _
        Then
            MsgBox "Nach Umstellung auf das Folgejahr mu|fffd| die Mappe geschlossen werden.", vbInformation, "Grundstellung abgeschlossen"
        Else
            MsgBox "After changing to the determined new year the session must be closed.", vbInformation, "Reset finished"
        End If

        Call SchutzSetzen(Sheets("Jahr"), True)
        FolgejahrUmstellung = False
        Application.EnableEvents = False
 
        ThisWorkbook.Save
        Application.Quit
    End If
End Sub

Public Sub MonatsTabellenGrundstellen()
    Dim I As Integer
    Dim Name As Variant
    Dim FocusSheet As Worksheet
    Dim TabName
    Dim Monats_Tab
    
    If InStr(1, Date, "/") = 0 _
    Then
        Monats_Tab = Array(, "Jan. ", "Feb. ", "Mrz. ", "Apr. ", "Mai. ", "Jun. ", _
        "Jul. ", "Aug. ", "Sep. ", "Okt. ", "Nov. ", "Dez. ")
    Else
         Monats_Tab = Array(, "Jan. ", "Feb. ", "Mar. ", "Apr. ", "May. ", "Jun. " _
        , "Jul. ", "Aug. ", "Sep. ", "Oct. ", "Nov. ", "Dec. ")
    End If
    
    Sheets("EAMuster").Visible = True
    Sheets("Backup").Visible = True
    
    Z_Protect = True
    For Each FocusSheet In Worksheets
        Call SchutzEntfernen(FocusSheet)
    Next
    
    Application.EnableEvents = False
    Application.DisplayAlerts = False
    Application.Calculation = xlCalculationManual
    
    For Each FocusSheet In Worksheets
        Select Case (True)
            Case FocusSheet.Name = "EAMuster"
            Case FocusSheet.Name = "Jahr"
            Case FocusSheet.Name = "Planung"
            Case FocusSheet.Name = "Varianten"
            Case InStr(1, FocusSheet.Name, "Backup") > 0
            Case InStr(1, FocusSheet.Name, "Img") > 0
            Case Else
                FocusSheet.Delete
        End Select
    Next
    
    Application.ScreenUpdating = False

    For I = 6 To 17
        Application.Calculation = xlCalculationAutomatic
        
        Sheets("Jahr").Range("Monate").Cells(I - 5, 1).Value = _
            Monats_Tab(I - 5) & Mid(Sheets("Jahr").Cells(6, 11), 3, 2)
        Name = Worksheets("Jahr").Cells(I, 2).Text
        
        Sheets("EAMuster").Cells(1, 15) = I - 6
        Sheets("EAMuster").Copy After:=Worksheets(Worksheets.Count)
        
        ActiveSheet.Name = Name
        
        Call SchutzEntfernen(ActiveSheet)
        ActiveSheet.Cells(1, 12) = Format(Name, "MM. yy")
        ActiveSheet.Cells(1, 13) = Format(Name, "MMM. yy")
        If Sprache = "D" _
        Then
            ActiveSheet.Cells(1, 2) = "Monatsdaten " _
            & Mid(Name, 1, 5) & Sheets("Jahr").Cells(6, 11)
        Else
            ActiveSheet.Cells(1, 2) = "Figures " _
            & Mid(Name, 1, 5) & Sheets("Jahr").Cells(6, 11)
        End If
        
        Application.Calculation = xlCalculationManual
    Next I
    
    Sheets("EAMuster").Visible = False
    Sheets("Backup").Visible = False
    Application.EnableEvents = True
    Application.ScreenUpdating = True
    Application.DisplayAlerts = True
    Application.Calculation = xlCalculationAutomatic
    
    Call FreiesBudgetMonatsEnde
    
    For Each FocusSheet In Worksheets
        Call SchutzSetzen(FocusSheet, True)
        Worksheets(FocusSheet.Name).Activate
        ActiveSheet.Range("B10").Select
    Next
End Sub


Public Sub BackupAnsEndeVerschieben()
    Dim FocusSheet As Worksheet
    Dim LetztesBlatt
    
    For Each FocusSheet In Worksheets
        Select Case (True)
            Case InStr(1, FocusSheet.Name, "Backup") > 0
                LetztesBlatt = Worksheets.Count
                FocusSheet.Move After:=Sheets(LetztesBlatt)
            Case Else
        End Select
    Next
    Sheets("Jahr").Select
End Sub

Public Sub Schutz(Schalter As Boolean)
  Dim FocusSheet As Worksheet
  
  For Each FocusSheet In Worksheets
        Call SchutzSetzen(FocusSheet, Schalter)
  Next
End Sub

Sub AddLine()
    Dim ProtBak
    Dim NamePlus1Zeile
    Dim Bl|fffd|tter
    Dim I
    Dim ContexSeite
    Dim ContexZeile
    Dim Einf|fffd|geZeile
    
    On Error GoTo Ende
    
    ContexSeite = ActiveSheet.Name
    ContexZeile = ActiveCell.Row
    Set ContS = ActiveSheet
    
    Bl|fffd|tter = Array(, "Planung", "Varianten", "Jan.Feb.Mrz.Mar.Apr.Mai.May.Jun.Jul.Aug.Sep.Okt.Oct.Nov.Dez.Dec.EAMuster")
    
    Application.EnableEvents = False
    Application.ScreenUpdating = False
    Application.Calculation = xlCalculationManual
    
    Call ZeileEinf|fffd|gen("Varianten", 2)

    For Each FocusSheet In Worksheets
        If InStr(1, Bl|fffd|tter(3), Left(FocusSheet.Name, 4)) > 0 _
        Then
            Call ZeileEinf|fffd|gen(FocusSheet.Name, 3)
        End If
    Next
    
    Call ZeileEinf|fffd|gen("Planung", 1)
Ende:
    Sheets(ContexSeite).Select
    NamensBereich = IIf(ContexSeite = "Planung" _
                    Or ContexSeite = "Varianten", ContexSeite, "BuchZeilen")
    LetzteZeileNamBer = Range(NamensBereich).Rows.Count
    Cells(LetzteZeileNamBer + IIf(ContexSeite = "Planung" Or ContexSeite = "Varianten", 4, 9), _
                        IIf(ContexSeite = "Planung" Or ContexSeite = "Varianten", 2, 7)).Activate
    ContS.Activate
    ActiveWindow.ScrollRow = LetzteZeileNamBer - IIf(ContexSeite = "Planung" Or ContexSeite = "Varianten", 5, 0)
    
    Application.EnableEvents = True
    Application.Calculation = xlCalculationAutomatic
    Calculate
    Application.ScreenUpdating = True
    Sheets("EAMuster").Visible = xlSheetVeryHidden
End Sub

Public Sub ZeileEinf|fffd|gen(FocusSheet, Zahl)
    Dim NameBeg
    Dim NameEnd
    Dim L|fffd|schSpalteBeginn
    Dim L|fffd|schSpalteEnde
    Dim Name_Ber_Letzte_Zeile_Pus1
    Dim Einf|fffd|geZeile
    
    Name_Ber_Letzte_Zeile_Pus1 = Array(, 5, 5, 10)
    L|fffd|schSpalteBeginn = Array(, 2, 3, 7)
    L|fffd|schSpalteEnde = Array(, 16, 14, 10)
    NameBeg = Array(, "!R5C2:R", "!R5C2:R", "!R10C2:R")
    NameEnd = Array(, "C29", "C14", "C11")
    
    Set Blatt = Worksheets(FocusSheet)
    
    If Blatt.Name = "EAMuster" _
        Then Blatt.Visible = True
    Blatt.Activate
    NamensBereich = IIf(Blatt.Name = "Planung" _
                    Or Blatt.Name = "Varianten", Blatt.Name, "BuchZeilen")
    
    Blatt.Unprotect Password:=PW
    
    Einf|fffd|geZeile = Range(NamensBereich).Rows.Count + Name_Ber_Letzte_Zeile_Pus1(Zahl)
    Blatt.Cells(Einf|fffd|geZeile, 2).Select
    ActiveCell.Offset(-1, 0).EntireRow.Copy
    ActiveCell.Offset(0, 0).EntireRow.Insert
    
    ActiveWorkbook.Names.Add Name:=NamensBereich, _
    RefersToR1C1:="='" & FocusSheet & "'" & NameBeg(Zahl) & Einf|fffd|geZeile & NameEnd(Zahl)
    
    Call NamenInMonatsTabPflegen(FocusSheet, Einf|fffd|geZeile)
    
    Range(Cells(ActiveCell.Row, L|fffd|schSpalteBeginn(Zahl)), _
    Cells(ActiveCell.Row, L|fffd|schSpalteEnde(Zahl))).ClearContents
    
    Application.CutCopyMode = False
    ActiveWindow.ScrollRow = 1
    ActiveWindow.ScrollColumn = 1
    
    Cells(Name_Ber_Letzte_Zeile_Pus1(Zahl), 2).Activate
    ActiveSheet.Protect Contents:=True, Password:=PW, AllowFormattingCells:=True
End Sub

Sub DelLine()
    Dim Conf
    Dim Bl|fffd|tter
    Dim ContexSeite
    Dim ContexZeile
    
    On Error GoTo Ende
    
    Bl|fffd|tter = Array(, "Planung", "Varianten", "Jan.Feb.Mrz.Mar.Apr.Mai.May.Jun.Jul.Aug.Sep.Okt.Oct.Nov.Dez.Dec.EAMuster")
    ContexSeite = ActiveSheet.Name
    ContexZeile = ActiveCell.Row
    Set ContS = ActiveSheet
      
    If UntersteZeilenLeer _
    Then
        Call ZeileL|fffd|schen("Varianten", 2)
        
        For Each FocusSheet In Worksheets
            If InStr(1, Bl|fffd|tter(3), Left(FocusSheet.Name, 4)) > 0 _
            Then
                Call ZeileL|fffd|schen(FocusSheet.Name, 3)
            End If
        Next
        Call ZeileL|fffd|schen("Planung", 1)
        Sheets(ContexSeite).Select
        NamensBereich = IIf(ContexSeite = "Planung" _
                    Or ContexSeite = "Varianten", ContexSeite, "BuchZeilen")
        LetzteZeileNamBer = Range(NamensBereich).Rows.Count
        Cells(LetzteZeileNamBer + IIf(ContexSeite = "Planung" Or ContexSeite = "Varianten", 4, 9), _
                            IIf(ContexSeite = "Planung" Or ContexSeite = "Varianten", 2, 7)).Activate
        ContS.Activate
        ActiveWindow.ScrollRow = LetzteZeileNamBer - IIf(ContexSeite = "Planung" Or ContexSeite = "Varianten", 5, 0)
    End If
Ende:
    Application.EnableEvents = True
    Application.Calculation = xlCalculationAutomatic
    Calculate
    Application.ScreenUpdating = True
End Sub

Public Sub ZeileL|fffd|schen(FocusSheet, Zahl)
    
    LetzteZeileOffset = Array(, 4, 4, 9)

    Application.ScreenUpdating = False
    Application.EnableEvents = False
    
    Set Blatt = Sheets(FocusSheet)
    Blatt.Activate
    NamensBereich = IIf(Blatt.Name = "Planung" _
                    Or Blatt.Name = "Varianten", Blatt.Name, "BuchZeilen")
                    
    Blatt.Unprotect Password:=PW
    LetzteZeileNamBer = Range(NamensBereich).Rows.Count + LetzteZeileOffset(Zahl)
    Blatt.Cells(LetzteZeileNamBer, 2).Select
    
    ActiveCell.EntireRow.Delete
    ActiveWindow.ScrollRow = 1
    ActiveWindow.ScrollColumn = 1
    
    Cells(LetzteZeileOffset(Zahl) + 1, 2).Activate
    ActiveSheet.Protect Contents:=True, Password:=PW, AllowFormattingCells:=True
End Sub

Public Function UntersteZeilenLeer() As Boolean
    Dim Bl|fffd|tter
    Dim I
    
    If KeinePruefungBeiEinpflegenAusBackup _
    Then
        UntersteZeilenLeer = True
        Exit Function
    End If
    
    Bl|fffd|tter = Array(, "Planung", "Varianten", "Jan.Feb.Mrz.Mar.Apr.Mai.May.Jun.Jul.Aug.Sep.Okt.Oct.Nov.Dez.Dec.EAMuster")
    
    For I = 1 To 3
        For Each FocusSheet In Worksheets
            If InStr(1, Bl|fffd|tter(I), Left(FocusSheet.Name, 4)) > 0 _
            Then
                If RowEmpty(FocusSheet.Name, I) _
                Then
                Else
                    UntersteZeilenLeer = False
                    Exit Function
                End If
            End If
        Next
    Next
    UntersteZeilenLeer = True
End Function

Public Function RowEmpty(FocusSheet, Zahl)
    Dim I
    
    LetzteZeileOffset = Array(, 4, 4, 9)

    Application.ScreenUpdating = False
    
    Set Blatt = Sheets(FocusSheet)
    Blatt.Activate
    NamensBereich = IIf(Blatt.Name = "Planung" _
                    Or Blatt.Name = "Varianten", Blatt.Name, "BuchZeilen")
      
    If Range(NamensBereich).Rows.Count <= 10 _
    Then
        If Sprache = "D" _
        Then
            MsgBox "10 Zeilen m|fffd|ssen mindestens bleiben!", vbExclamation
        Else
            MsgBox "10 rows got to be left over!", vbExclamation
        End If

        RowEmpty = False
        Exit Function
    End If
    
    LetzteZeileNamBer = Range(NamensBereich).Rows.Count + LetzteZeileOffset(Zahl)
    Blatt.Cells(LetzteZeileNamBer, 2).Select
    Select Case (True)
        Case NamensBereich = "Planung"
            For I = 2 To 4
                If Cells(ActiveCell.Row, I) <> "" _
                Then
                    If Sprache = "D" _
                    Then
                        MsgBox "Unterste Eingabe-Zeile in Tabellenblatt " & vbLf & """" & FocusSheet & """" & _
                        vbLf & " ist nicht leer, Abbruch.", vbOKOnly + vbCritical, "Letzte Zeile l|fffd|schen"
                    Else
                        MsgBox "Lowermost input row in sheet " & vbLf & """" & FocusSheet & """" & _
                        vbLf & " is not empty, Abort.", vbOKOnly + vbCritical, "Delete last row"
                    End If

                    RowEmpty = False
                    Sheets(FocusSheet).Select
                    Cells(ActiveCell.Row, I).Select
                    Exit Function
                End If
            Next
        Case NamensBereich = "Varianten"
             For I = 3 To 14
                If Cells(ActiveCell.Row, I) <> "" _
                Then
                    If Sprache = "D" _
                    Then
                        MsgBox "Unterste Eingabe-Zeile in Tabellenblatt " & vbLf & vbLf & """" & FocusSheet & """" & _
                        vbLf & vbLf & " ist nicht leer, Abbruch.", vbOKOnly + vbCritical, "Letzte Zeile l|fffd|schen"
                    Else
                        MsgBox "Lowermost input row in sheet " & vbLf & vbLf & """" & FocusSheet & """" & _
                        vbLf & vbLf & " is not empty, Abort.", vbOKOnly + vbCritical, "Delete last row"
                    End If
                    RowEmpty = False
                    Sheets(FocusSheet).Select
                    Cells(ActiveCell.Row, I).Select
                    Exit Function
                End If
            Next
        Case NamensBereich = "BuchZeilen"
             For I = 7 To 9
             Dim x
             x = Cells(ActiveCell.Row, I)
                If Cells(ActiveCell.Row, I) = " " _
                Or Cells(ActiveCell.Row, I) = "" _
                Then
                Else
                MsgBox """ inhalt "" " & "" & x & ""
                    If Sprache = "D" _
                    Then
                        MsgBox "Unterste Eingabe-Zeile in Tabellenblatt " & vbLf & """" & FocusSheet & """" & _
                        vbLf & " ist nicht leer, Abbruch.", vbOKOnly + vbCritical, "Letzte Zeile l|fffd|schen"
                    Else
                        MsgBox "Lowermost input row in sheet " & vbLf & """" & FocusSheet & """" & _
                        vbLf & " is not empty, Abort.", vbOKOnly + vbCritical, "Delete last row"
                    End If
                    RowEmpty = False
                    Sheets(FocusSheet).Select
                    Cells(ActiveCell.Row, I).Select
                    Exit Function
                End If
            Next
        Case Else
    End Select
    
    ActiveWindow.ScrollRow = 1
    ActiveWindow.ScrollColumn = 1
    
    Cells(LetzteZeileOffset(Zahl) + 1, 2).Activate
    RowEmpty = True
End Function

Public Function LetzteBenutzteZeile(Blatt)
    Dim NamensBereich
    Dim x

    NamensBereich = IIf(Blatt = "Planung" _
                     Or Blatt = "Varianten", Blatt, "BuchZeilen")
    LetzteZeileNamBer = UniWb.Sheets(Blatt).Range(NamensBereich).Rows.Count
    LetzteBenutzteZeile = LetzteZeileNamBer + IIf(Blatt = "Planung" Or Blatt = "Varianten", 4, 9)
End Function

Public Sub NamenInMonatsTabPflegen(FocusSheet, Zeile)
    Dim Bl|fffd|tter
    Dim Blatt
    Dim I
    Dim Spalte
    
    NamensBereich = Array(, "gepAusg", "gepBkbu", "gepEinn", "gepX", "ungepAusg", "ungepBkbu", "ungepEinn", "ungepX")
    Spalte = Array(, 3, 6, 4, 5, 8, 11, 9, 10)
    
    Bl|fffd|tter = "Jan.Feb.Mrz.Mar.Apr.Mai.May.Jun.Jul.Aug.Sep.Okt.Oct.Nov.Dez.Dec.EAMuster"
    
    Blatt = Mid(FocusSheet, 1, 4)
    If InStr(Bl|fffd|tter, Blatt) = 0 Then Exit Sub
    For I = 1 To 8
        ActiveWorkbook.Names.Add Name:=NamensBereich(I), _
        RefersToR1C1:="='" & FocusSheet & "'" & "!R10C" & Spalte(I) & ":R" & Zeile & "C" & Spalte(I)
    Next
End Sub

Public Function ZeilenDifferenz()
    Dim I
    Dim ZeilenGesichert
    
    I = 4
    Do
        ZeilenGesichert = ZeilenGesichert + 1
        I = I + 1
    Loop Until (Sheets("Backup").Cells(I, 1) <> "Plan")
    
    ZeilenDifferenz = ZeilenGesichert - Sheets("Planung").Range("Planung").Rows.Count
End Function

Public Function Monats_Tabelle(Name, Richtung) As Integer
    Dim BlattNr(16)
    Dim NamTab
    Dim I
    Dim sh As Worksheet
    Dim TabNam
    Dim wb As Workbook
    Dim x

    I = 0
    Set wb = ThisWorkbook
    For Each sh In wb.Worksheets
        TabNam = Mid(sh.Name, 1, 4)
        
        Select Case (TabNam)
            Case _
            "Jahr", "Plan", "Vari", _
            "Jan.", "Feb.", "Mrz.", "Mar.", _
            "Apr.", "Mai.", "May.", "Jun.", _
            "Jul.", "Aug.", "Sep.", _
            "Okt.", "Oct.", "Nov.", "Dez.", "Dec."
                I = I + 1
                NamTab = NamTab & TabNam
                BlattNr(I) = sh.Index
        End Select
    Next
    BlattNr(0) = BlattNr(1)
    BlattNr(16) = BlattNr(15)
    x = BlattNr(((InStr(NamTab, Name) + 3) / 4) + 1)
    If Richtung = "Vor" _
        Then Monats_Tabelle = x
    If Richtung = "Zur|fffd|ck" _
        Then Monats_Tabelle = BlattNr(((InStr(NamTab, Name) + 3) / 4) - 1)
End Function

Public Function AuswahlUmsetzen(MenueItem, Kenner)
    Dim TabelleE
    Dim TabelleD
    Dim I
    
    TabelleD = Array("Jahres-|fffd|bersicht", "Planung", "Varianten", "Januar", _
        "Februar", "M|fffd|rz", "April", "Mai", "Juni", "Juli", "August", _
        "September", "Oktober", "November", "Dezember", "lfd. Monat", _
        "Planung, Jahres-|fffd|bersicht", "Varianten, Jahres-|fffd|bersicht", _
        "lfd. Monat, Jahres-|fffd|bersicht")
    TabelleE = Array("Annual Overview", "Annual Budget", "Diverging amounts", "January", _
        "February", "March", "April", "May", "June", "July", "August", _
        "September", "October", "November", "December", "Current month", _
        "Annual Plannig, Annual Overview", "Diverging amounts, Annual Overview", _
        "Current month, Annual Overview")
        
    Select Case (Kenner)
        Case "D"
            For I = 1 To UBound(TabelleE)
                If TabelleE(I) = MenueItem _
                Then
                    AuswahlUmsetzen = TabelleD(I)
                    Exit Function
                End If
            Next
        Case "E"
            For I = 1 To UBound(TabelleD)
                If TabelleD(I) = MenueItem _
                Then
                    AuswahlUmsetzen = TabelleE(I)
                    Exit Function
                End If
            Next
        Case Else
    End Select
    AuswahlUmsetzen = MenueItem
End Function

Sub BackupReplace(Direction, Language)
    Dim wb As Workbook
    Dim ws As Worksheet
    Dim ws2 As Worksheet
    
    Sheets("Backup").Visible = -1
    Sheets("Backup" & Language).Visible = -1
    Call SchutzEntfernen(Sheets("Backup" & Language))
    Call SchutzEntfernen(Sheets("Backup"))
    Set wb = ActiveWorkbook
    Set ws = wb.Sheets("Backup" & Language)
    Set ws2 = wb.Sheets("Backup")
    
    Select Case (Direction)
        Case "->"
            ws2.Activate
            ws2.Cells.Select
            Selection.Copy
            ws.Select
            ws.Cells.Select
            ActiveSheet.Paste
        Case "<-"
            ws.Activate
            ws.Cells.Select
            Selection.Copy
            ws2.Select
            ws2.Cells.Select
            ActiveSheet.Paste
    End Select
    Sheets("Backup").Visible = 2
    Sheets("Backup" & "D").Visible = 2
    Sheets("Backup" & "E").Visible = 2
End Sub

Public Sub LoeschenZwischenablage()
    OpenClipboard FindWindow("xlMain", vbNullString)
    EmptyClipboard
    CloseClipboard
End Sub









INQUEST-PP=macro
