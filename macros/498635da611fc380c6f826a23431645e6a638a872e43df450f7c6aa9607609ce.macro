Attribute VB_Name = "DieseArbeitsmappe"
Attribute VB_Base = "0{00020819-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True

 Private Sub Workbook_Open()
Call Genauigkeit
ActiveSheet.Protect userinterfaceonly:=True
ActiveSheet.EnableOutlining = True 'f|fffd|r Gliederung
ActiveSheet.EnableAutoFilter = True 'f|fffd|r Autofilter
Application.MoveAfterReturnDirection = xlToRight

ActiveSheet.Unprotect
Cells(5, 4).Value = "x"
ActiveSheet.Protect DrawingObjects:=False, Contents:=True, Scenarios:=True
End Sub

 Private Sub Workbook_BeforeClose(Cancel As Boolean)
Application.MoveAfterReturnDirection = xlDown
 End Sub


Attribute VB_Name = "Excel_Optionen_Genauigkeit"
Sub Genauigkeit()
Attribute Genauigkeit.VB_ProcData.VB_Invoke_Func = " \n14"

    ActiveWorkbook.PrecisionAsDisplayed = True
End Sub
Attribute VB_Name = "Hilfe"
Attribute VB_Base = "0{13904A7C-670C-4C1B-9C55-EA6FEE762A0A}{5ABC7A54-BBFC-4522-B038-64E9C874094A}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Private Sub TabStrip1_Change()

End Sub

Private Sub Label1_Click()

End Sub

Private Sub Image1_BeforeDragOver(ByVal Cancel As MSForms.ReturnBoolean, ByVal Data As MSForms.DataObject, ByVal x As Single, ByVal Y As Single, ByVal DragState As MSForms.fmDragState, ByVal Effect As MSForms.ReturnEffect, ByVal Shift As Integer)

End Sub

Private Sub UserForm_Click()

End Sub
Attribute VB_Name = "Ribb_ExportExc"
Sub ExportExc(control As IRibbonControl)

With Application
    .ScreenUpdating = False
    .Calculation = xlCalculationManual
    .EnableEvents = False
End With

ActiveWorkbook.Save
ActiveSheet.Unprotect

Dim pfad            As String

pfad = ThisWorkbook.Path
DateiName = ActiveWorkbook.Name


'MsgBox pfad

    Cells.Select
    Selection.Copy
    Workbooks.Add
    Cells.Select
    Selection.PasteSpecial Paste:=xlPasteAllUsingSourceTheme, Operation:=xlNone _
        , SkipBlanks:=False, Transpose:=False
'    Cells.Select
'    Selection.RowHeight = 17
    ActiveWindow.Zoom = 85
    Range("Q:Q").EntireColumn.Hidden = False
    Columns("Q:S").Select
    Application.CutCopyMode = False
    Selection.Copy
    Selection.PasteSpecial Paste:=xlPasteValues, Operation:=xlNone, SkipBlanks _
        :=False, Transpose:=False
    Range("Q:Q").EntireColumn.Hidden = True
    
    Columns("C:C").Select
    Application.CutCopyMode = False
    Selection.Copy
    Selection.PasteSpecial Paste:=xlPasteValues, Operation:=xlNone, SkipBlanks _
        :=False, Transpose:=False
    Range("Y9").Select
    ActiveWindow.FreezePanes = True
       
    Columns("T:AE").Select
    Selection.EntireColumn.Hidden = False
    
    Columns("V:AA").Select
    Application.CutCopyMode = False
    Selection.Delete Shift:=xlToLeft
    Columns("T:X").Select
    Selection.EntireColumn.Hidden = True

    Range("A5").Value = "x"
    Range("B5").Value = "x"
    
    
    Windows(DateiName).Activate

    Set DateiName = Nothing
        
    Application.ScreenUpdating = True
    MsgBox "bereinigte Excel-Datei wurde erstellt"
    
ActiveSheet.Protect DrawingObjects:=False, Contents:=True, Scenarios:=True, AllowFormattingCells:=True
With Application
    .ScreenUpdating = True
    .Calculation = xlCalculationAutomatic
    .EnableEvents = True
End With

End Sub
Attribute VB_Name = "Ribb_Filter"
Sub FilterEin(control As IRibbonControl, ByRef pressed)

ThisWorkbook.Sheets(1).PageSetup.PrintArea = ""

With Application
    .ScreenUpdating = False
    .Calculation = xlCalculationManual
    .EnableEvents = False
End With
ActiveSheet.DisplayPageBreaks = False

ActiveSheet.Unprotect

If pressed = True Then
     bolS3 = True

Range("Filterzeile").EntireRow.Hidden = False

Else
     bolS3 = False
Range("Filterzeile").EntireRow.Hidden = True
On Error GoTo fehler
ActiveSheet.ShowAllData

End If

fehler:

ActiveSheet.Protect DrawingObjects:=False, Contents:=True, Scenarios:=True, AllowFormattingCells:=True
With Application
    .ScreenUpdating = True
    .Calculation = xlCalculationAutomatic
    .EnableEvents = True
End With

End Sub
Attribute VB_Name = "Ribbon_Drucken"
Sub Drucken(control As IRibbonControl)
Attribute Drucken.VB_ProcData.VB_Invoke_Func = " \n14"

If Range("Taktung").Value = 1 Then

If Cells(4, 13).Value > Cells(5, 13).Value Then
On Error Resume Next
For Each c In Range("Zeitschiene_1")
If c.Value = Cells(4, 13).Value + 1 Then
ActiveSheet.PageSetup.PrintArea = "$A$1:" & c.Offset(-45, 1).Address
End If
Next c

Else

On Error Resume Next
For Each c In Range("Zeitschiene_1")
If c.Value = Cells(5, 13).Value + 1 Then
ActiveSheet.PageSetup.PrintArea = "$A$1:" & c.Offset(-45, 1).Address
End If
Next c
End If

End If

If Range("Taktung").Value = 0.5 Then

If Cells(4, 13).Value > Cells(5, 13).Value Then
On Error Resume Next
For Each c In Range("Zeitschiene_05")
If c.Value = Cells(4, 13).Value + 1 Then
ActiveSheet.PageSetup.PrintArea = "$A$1:" & c.Offset(-45, 1).Address
End If
Next c

Else

On Error Resume Next
For Each c In Range("Zeitschiene_05")
If c.Value = Cells(5, 13).Value + 1 Then
ActiveSheet.PageSetup.PrintArea = "$A$1:" & c.Offset(-45, 1).Address
End If
Next c
End If

End If

If Range("Taktung").Value = 0.1 Then

If Cells(4, 13).Value > Cells(5, 13).Value Then
On Error Resume Next
For Each c In Range("Zeitschiene_01")
If c.Value = Cells(4, 13).Value + 1 Then
ActiveSheet.PageSetup.PrintArea = "$A$1:" & c.Offset(-45, 1).Address
End If
Next c

Else

On Error Resume Next
For Each c In Range("Zeitschiene_01")
If c.Value = Cells(5, 13).Value + 1 Then
ActiveSheet.PageSetup.PrintArea = "$A$1:" & c.Offset(-45, 1).Address
End If
Next c
End If

End If



Application.Dialogs(xlDialogPrint).Show

End Sub
Attribute VB_Name = "Ribbon_Format"
Sub Spaltenbreite_Plus(control As IRibbonControl)

ThisWorkbook.Sheets(1).PageSetup.PrintArea = ""

With Application
    .ScreenUpdating = False
    .Calculation = xlCalculationManual
    .EnableEvents = False
End With
ActiveSheet.DisplayPageBreaks = False

ActiveSheet.Unprotect

Dim Breite As Single

Breite = Range("Einfuegepunkt_Taktung").ColumnWidth

    Range("Grafik").ColumnWidth = Breite * 1.25
    Range("D10").Select
    
ActiveSheet.Protect DrawingObjects:=False, Contents:=True, Scenarios:=True, AllowFormattingCells:=True
With Application
    .ScreenUpdating = True
    .Calculation = xlCalculationAutomatic
    .EnableEvents = True
End With

End Sub

Sub Spaltenbreite_Minus(control As IRibbonControl)

ThisWorkbook.Sheets(1).PageSetup.PrintArea = ""

With Application
    .ScreenUpdating = False
    .Calculation = xlCalculationManual
    .EnableEvents = False
End With
ActiveSheet.DisplayPageBreaks = False

ActiveSheet.Unprotect

Dim Breite As Single

Breite = Range("Einfuegepunkt_Taktung").ColumnWidth

    Range("Grafik").ColumnWidth = Breite / 1.25
    Range("D10").Select
    
ActiveSheet.Protect DrawingObjects:=False, Contents:=True, Scenarios:=True, AllowFormattingCells:=True
With Application
    .ScreenUpdating = True
    .Calculation = xlCalculationAutomatic
    .EnableEvents = True
End With

End Sub

Sub Hoehe_Minus(control As IRibbonControl)

ThisWorkbook.Sheets(1).PageSetup.PrintArea = ""

    With Application
        .ScreenUpdating = False
        .Calculation = xlCalculationManual
        .EnableEvents = False
    End With
    ActiveSheet.DisplayPageBreaks = False
    
    Dim H|fffd|he As Single
    
H|fffd|he = ActiveCell.RowHeight

    Range("Arbeitsbereich").RowHeight = H|fffd|he - 1.5
    Range("Musterzeile").RowHeight = 0.1
    
    If H|fffd|he - 1.5 <= 10.5 Then
    Range("Arbeitsbereich").Font.Size = 8
    End If
    
    If H|fffd|he - 1.5 <= 9 Then
    Range("Arbeitsbereich").Font.Size = 6
    End If

ActiveSheet.Protect DrawingObjects:=False, Contents:=True, Scenarios:=True, AllowFormattingCells:=True
With Application
    .ScreenUpdating = True
    .Calculation = xlCalculationAutomatic
    .EnableEvents = True
End With
    
End Sub

Sub Hoehe_Plus(control As IRibbonControl)

ThisWorkbook.Sheets(1).PageSetup.PrintArea = ""

    With Application
        .ScreenUpdating = False
        .Calculation = xlCalculationManual
        .EnableEvents = False
    End With
    ActiveSheet.DisplayPageBreaks = False
    
    Dim H|fffd|he As Single

H|fffd|he = ActiveCell.RowHeight

    Range("Arbeitsbereich").RowHeight = H|fffd|he + 1.5
    Range("Musterzeile").RowHeight = 0.1
    
    If H|fffd|he + 1.5 > 9 Then
    Range("Arbeitsbereich").Font.Size = 8
    End If
    
    If H|fffd|he + 1.5 > 10.5 Then
    Range("Arbeitsbereich").Font.Size = 10
    End If
    
ActiveSheet.Protect DrawingObjects:=False, Contents:=True, Scenarios:=True, AllowFormattingCells:=True
With Application
    .ScreenUpdating = True
    .Calculation = xlCalculationAutomatic
    .EnableEvents = True
End With
    
End Sub

Sub Breite_Plus(control As IRibbonControl)

ThisWorkbook.Sheets(1).PageSetup.PrintArea = ""

    With Application
        .ScreenUpdating = False
        .Calculation = xlCalculationManual
        .EnableEvents = False
    End With
    ActiveSheet.DisplayPageBreaks = False
    
    ActiveSheet.Unprotect
    
    Dim Breite As Single
    
    If Not Application.Intersect(Selection, Range("A:A")) Is Nothing Then
    On Error Resume Next
        If Columns("A:A").Hidden = False Then
            Breite = Range("A:A").ColumnWidth
            Range("A:A").ColumnWidth = Breite + 3
        End If
    End If
    
    If Not Application.Intersect(Selection, Range("B:B")) Is Nothing Then
    On Error Resume Next
        If Columns("B:B").Hidden = False Then
            Breite = Range("B:B").ColumnWidth
            Range("B:B").ColumnWidth = Breite + 3
        End If
    End If
    
    If Not Application.Intersect(Selection, Range("C:C")) Is Nothing Then
    On Error Resume Next
        If Columns("C:C").Hidden = False Then
            Breite = Range("C:C").ColumnWidth
            Range("C:C").ColumnWidth = Breite + 3
        End If
    End If
    
    If Not Application.Intersect(Selection, Range("D:D")) Is Nothing Then
    On Error Resume Next
        If Columns("D:D").Hidden = False Then
            Breite = Range("D:D").ColumnWidth
            Range("D:D").ColumnWidth = Breite + 3
        End If
    End If
    
    If Not Application.Intersect(Selection, Range("E:E")) Is Nothing Then
    On Error Resume Next
        If Columns("E:E").Hidden = False Then
            Breite = Range("E:E").ColumnWidth
            Range("E:E").ColumnWidth = Breite + 3
        End If
    End If

    If Not Application.Intersect(Selection, Range("F:F")) Is Nothing Then
    On Error Resume Next
    If Columns("F:F").Hidden = False Then
        Breite = Range("F:F").ColumnWidth
        Range("F:F").ColumnWidth = Breite + 3
    End If
    End If
    
    If Not Application.Intersect(Selection, Range("G:G")) Is Nothing Then
    On Error Resume Next
    If Columns("G:G").Hidden = False Then
        Breite = Range("G:G").ColumnWidth
        Range("G:G").ColumnWidth = Breite + 3
    End If
    End If
    
    If Not Application.Intersect(Selection, Range("H:H")) Is Nothing Then
    On Error Resume Next
    If Columns("H:H").Hidden = False Then
        Breite = Range("H:H").ColumnWidth
        Range("H:H").ColumnWidth = Breite + 3
    End If
    End If

    If Not Application.Intersect(Selection, Range("I:I")) Is Nothing Then
    On Error Resume Next
    If Columns("I:I").Hidden = False Then
        Breite = Range("I:I").ColumnWidth
        Range("I:I").ColumnWidth = Breite + 3
    End If
    End If
    
    If Not Application.Intersect(Selection, Range("J:J")) Is Nothing Then
    On Error Resume Next
    If Columns("J:J").Hidden = False Then
        Breite = Range("J:J").ColumnWidth
        Range("J:J").ColumnWidth = Breite + 3
    End If
    End If
    
    If Not Application.Intersect(Selection, Range("K:K")) Is Nothing Then
    On Error Resume Next
    If Columns("K:K").Hidden = False Then
        Breite = Range("K:K").ColumnWidth
        Range("K:K").ColumnWidth = Breite + 3
    End If
    End If
    
    If Not Application.Intersect(Selection, Range("L:L")) Is Nothing Then
    On Error Resume Next
    If Columns("L:L").Hidden = False Then
        Breite = Range("L:L").ColumnWidth
        Range("L:L").ColumnWidth = Breite + 3
    End If
    End If

    If Not Application.Intersect(Selection, Range("M:M")) Is Nothing Then
    On Error Resume Next
    If Columns("M:M").Hidden = False Then
        Breite = Range("M:M").ColumnWidth
        Range("M:M").ColumnWidth = Breite + 3
    End If
    End If
    
    If Not Application.Intersect(Selection, Range("N:N")) Is Nothing Then
    On Error Resume Next
    If Columns("N:N").Hidden = False Then
        Breite = Range("N:N").ColumnWidth
        Range("N:N").ColumnWidth = Breite + 3
    End If
    End If
    
    If Not Application.Intersect(Selection, Range("O:O")) Is Nothing Then
    On Error Resume Next
    If Columns("O:O").Hidden = False Then
        Breite = Range("O:O").ColumnWidth
        Range("O:O").ColumnWidth = Breite + 3
    End If
    End If
    
    If Not Application.Intersect(Selection, Range("P:P")) Is Nothing Then
    On Error Resume Next
    If Columns("P:P").Hidden = False Then
        Breite = Range("P:P").ColumnWidth
        Range("P:P").ColumnWidth = Breite + 3
    End If
    End If
    
    If Not Application.Intersect(Selection, Range("Q:Q")) Is Nothing Then
    On Error Resume Next
    If Columns("Q:Q").Hidden = False Then
        Breite = Range("Q:Q").ColumnWidth
        Range("Q:Q").ColumnWidth = Breite + 3
    End If
    End If
    
    If Not Application.Intersect(Selection, Range("R:R")) Is Nothing Then
    On Error Resume Next
    If Columns("R:R").Hidden = False Then
        Breite = Range("R:R").ColumnWidth
        Range("R:R").ColumnWidth = Breite + 3
    End If
    End If
    
    If Not Application.Intersect(Selection, Range("S:S")) Is Nothing Then
    On Error Resume Next
    If Columns("S:S").Hidden = False Then
        Breite = Range("S:S").ColumnWidth
        Range("S:S").ColumnWidth = Breite + 3
    End If
    End If
    
    ActiveSheet.Protect DrawingObjects:=False, Contents:=True, Scenarios:=True, AllowFormattingCells:=True
    With Application
        .ScreenUpdating = True
        .Calculation = xlCalculationAutomatic
        .EnableEvents = True
    End With

End Sub

Sub Breite_Minus(control As IRibbonControl)

ThisWorkbook.Sheets(1).PageSetup.PrintArea = ""

With Application
    .ScreenUpdating = False
    .Calculation = xlCalculationManual
    .EnableEvents = False
End With
ActiveSheet.DisplayPageBreaks = False

ActiveSheet.Unprotect

Dim Breite As Single

    If Not Application.Intersect(Selection, Range("A:A")) Is Nothing Then
    On Error Resume Next
        If Columns("A:A").Hidden = False Then
            Breite = Range("A:A").ColumnWidth
            Range("A:A").ColumnWidth = Breite - 3
        If Breite - 3 <= 0 Then
            Range("A:A").ColumnWidth = 1
        End If
        End If
    End If
    
    If Not Application.Intersect(Selection, Range("B:B")) Is Nothing Then
    On Error Resume Next
        If Columns("B:B").Hidden = False Then
            Breite = Range("B:B").ColumnWidth
            Range("B:B").ColumnWidth = Breite - 3
        If Breite - 3 <= 0 Then
            Range("B:B").ColumnWidth = 1
        End If
        End If
    End If
    
    If Not Application.Intersect(Selection, Range("C:C")) Is Nothing Then
    On Error Resume Next
        If Columns("C:C").Hidden = False Then
            Breite = Range("C:C").ColumnWidth
            Range("C:C").ColumnWidth = Breite - 3
        If Breite - 3 <= 0 Then
            Range("C:C").ColumnWidth = 1
        End If
        End If
    End If
    
    If Not Application.Intersect(Selection, Range("D:D")) Is Nothing Then
    On Error Resume Next
        If Columns("D:D").Hidden = False Then
            Breite = Range("D:D").ColumnWidth
            Range("D:D").ColumnWidth = Breite - 3
        If Breite - 3 <= 0 Then
            Range("D:D").ColumnWidth = 1
        End If
        End If
    End If
    
    If Not Application.Intersect(Selection, Range("E:E")) Is Nothing Then
    On Error Resume Next
        If Columns("E:E").Hidden = False Then
            Breite = Range("E:E").ColumnWidth
            Range("E:E").ColumnWidth = Breite - 3
        If Breite - 3 <= 0 Then
            Range("E:E").ColumnWidth = 1
        End If
        End If
    End If

    If Not Application.Intersect(Selection, Range("F:F")) Is Nothing Then
    On Error Resume Next
    If Columns("F:F").Hidden = False Then
        Breite = Range("F:F").ColumnWidth
        Range("F:F").ColumnWidth = Breite - 3
    If Breite - 3 <= 0 Then
            Range("D:D").ColumnWidth = 1
        End If
    End If
    End If
    
    If Not Application.Intersect(Selection, Range("G:G")) Is Nothing Then
    On Error Resume Next
    If Columns("G:G").Hidden = False Then
        Breite = Range("G:G").ColumnWidth
        Range("G:G").ColumnWidth = Breite - 3
    If Breite - 3 <= 0 Then
            Range("G:G").ColumnWidth = 1
        End If
    End If
    End If
    
    If Not Application.Intersect(Selection, Range("H:H")) Is Nothing Then
    On Error Resume Next
    If Columns("H:H").Hidden = False Then
        Breite = Range("H:H").ColumnWidth
        Range("H:H").ColumnWidth = Breite - 3
    If Breite - 3 <= 0 Then
            Range("H:H").ColumnWidth = 1
        End If
    End If
    End If

    If Not Application.Intersect(Selection, Range("I:I")) Is Nothing Then
    On Error Resume Next
    If Columns("I:I").Hidden = False Then
        Breite = Range("I:I").ColumnWidth
        Range("I:I").ColumnWidth = Breite - 3
    If Breite - 3 <= 0 Then
            Range("I:I").ColumnWidth = 1
        End If
    End If
    End If
    
    If Not Application.Intersect(Selection, Range("J:J")) Is Nothing Then
    On Error Resume Next
    If Columns("J:J").Hidden = False Then
        Breite = Range("J:J").ColumnWidth
        Range("J:J").ColumnWidth = Breite - 3
    If Breite - 3 <= 0 Then
            Range("J:J").ColumnWidth = 1
        End If
    End If
    End If
    
    If Not Application.Intersect(Selection, Range("K:K")) Is Nothing Then
    On Error Resume Next
    If Columns("K:K").Hidden = False Then
        Breite = Range("K:K").ColumnWidth
        Range("K:K").ColumnWidth = Breite - 3
    If Breite - 3 <= 0 Then
            Range("K:K").ColumnWidth = 1
        End If
    End If
    End If
    
    If Not Application.Intersect(Selection, Range("L:L")) Is Nothing Then
    On Error Resume Next
    If Columns("L:L").Hidden = False Then
        Breite = Range("L:L").ColumnWidth
        Range("L:L").ColumnWidth = Breite - 3
    If Breite - 3 <= 0 Then
            Range("L:L").ColumnWidth = 1
        End If
    End If
    End If

    If Not Application.Intersect(Selection, Range("M:M")) Is Nothing Then
    On Error Resume Next
    If Columns("M:M").Hidden = False Then
        Breite = Range("M:M").ColumnWidth
        Range("M:M").ColumnWidth = Breite - 3
    If Breite - 3 <= 0 Then
            Range("M:M").ColumnWidth = 1
        End If
    End If
    End If
    
    If Not Application.Intersect(Selection, Range("N:N")) Is Nothing Then
    On Error Resume Next
    If Columns("N:N").Hidden = False Then
        Breite = Range("N:N").ColumnWidth
        Range("N:N").ColumnWidth = Breite - 3
    If Breite - 3 <= 0 Then
            Range("N:N").ColumnWidth = 1
        End If
    End If
    End If
    
    If Not Application.Intersect(Selection, Range("O:O")) Is Nothing Then
    On Error Resume Next
    If Columns("O:O").Hidden = False Then
        Breite = Range("O:O").ColumnWidth
        Range("O:O").ColumnWidth = Breite - 3
    If Breite - 3 <= 0 Then
            Range("O:O").ColumnWidth = 1
        End If
    End If
    End If
    
    If Not Application.Intersect(Selection, Range("P:P")) Is Nothing Then
    On Error Resume Next
    If Columns("P:P").Hidden = False Then
        Breite = Range("P:P").ColumnWidth
        Range("P:P").ColumnWidth = Breite - 3
    If Breite - 3 <= 0 Then
            Range("P:P").ColumnWidth = 1
        End If
    End If
    End If
    
    If Not Application.Intersect(Selection, Range("Q:Q")) Is Nothing Then
    On Error Resume Next
    If Columns("Q:Q").Hidden = False Then
        Breite = Range("Q:Q").ColumnWidth
        Range("Q:Q").ColumnWidth = Breite - 3
    If Breite - 3 <= 0 Then
            Range("Q:Q").ColumnWidth = 1
        End If
    End If
    End If
    
    If Not Application.Intersect(Selection, Range("R:R")) Is Nothing Then
    On Error Resume Next
    If Columns("R:R").Hidden = False Then
        Breite = Range("R:R").ColumnWidth
        Range("R:R").ColumnWidth = Breite - 3
    If Breite - 3 <= 0 Then
            Range("R:R").ColumnWidth = 1
        End If
    End If
    End If
    
    If Not Application.Intersect(Selection, Range("S:S")) Is Nothing Then
    On Error Resume Next
    If Columns("S:S").Hidden = False Then
        Breite = Range("S:S").ColumnWidth
        Range("S:S").ColumnWidth = Breite - 3
    If Breite - 3 <= 0 Then
            Range("S:S").ColumnWidth = 1
        End If
    End If
    End If
 
ActiveSheet.Protect DrawingObjects:=False, Contents:=True, Scenarios:=True, AllowFormattingCells:=True
With Application
    .ScreenUpdating = True
    .Calculation = xlCalculationAutomatic
    .EnableEvents = True
End With

End Sub

Attribute VB_Name = "Ribbon_Gruppieren"
Sub Zwischensumme(control As IRibbonControl)

ThisWorkbook.Sheets(1).PageSetup.PrintArea = ""

With Application
    .ScreenUpdating = False
    .Calculation = xlCalculationManual
    .EnableEvents = False
End With
ActiveSheet.DisplayPageBreaks = False

ActiveSheet.Unprotect

Selection.Rows.Group

ActiveSheet.Protect DrawingObjects:=False, Contents:=True, Scenarios:=True, AllowFormattingCells:=True
With Application
    .ScreenUpdating = True
    .Calculation = xlCalculationAutomatic
    .EnableEvents = True
End With

End Sub



Attribute VB_Name = "Ribbon_Gruppieren_auf_zu"
Sub GruppierungAufZU(control As IRibbonControl)

ThisWorkbook.Sheets(1).PageSetup.PrintArea = ""

    With Application
        .ScreenUpdating = False
        .Calculation = xlCalculationManual
        .EnableEvents = False
    End With
    ActiveSheet.DisplayPageBreaks = False
    
    ActiveSheet.Unprotect
    
    Dim NrZeileA    As Long
    Dim NrZeileE    As Long
    Dim a           As Long
    Dim b           As Long
    Dim s           As Long
    
    a = Selection.Row
    s = Selection.Column
    
    Range("Arbeitsbereich").Select
        NrZeileA = Selection.Row + 1
        NrZeileE = Selection.Rows.Count + Selection.Row - 1
        b = 0
    
        On Error Resume Next
        For i = NrZeileA To NrZeileE
        If Rows(i).Hidden = True Then b = 1
        Next
    
        If b = 1 Then
        ActiveSheet.Outline.ShowLevels RowLevels:=5
        Else
        ActiveSheet.Outline.ShowLevels RowLevels:=1
        End If
        
    Cells(a, s).Select
    
    ActiveSheet.Protect DrawingObjects:=False, Contents:=True, Scenarios:=True, AllowFormattingCells:=True
    With Application
        .ScreenUpdating = True
        .Calculation = xlCalculationAutomatic
        .EnableEvents = True
    End With

End Sub


Attribute VB_Name = "Ribbon_Gruppieren_aufheben"
Sub ZwischensummeLoeschen(control As IRibbonControl)

ThisWorkbook.Sheets(1).PageSetup.PrintArea = ""

With Application
    .ScreenUpdating = False
    .Calculation = xlCalculationManual
    .EnableEvents = False
End With
ActiveSheet.DisplayPageBreaks = False

ActiveSheet.Unprotect

ActiveSheet.Outline.ShowLevels RowLevels:=5
Selection.Rows.Ungroup

ActiveSheet.Protect DrawingObjects:=False, Contents:=True, Scenarios:=True, AllowFormattingCells:=True
With Application
    .ScreenUpdating = True
    .Calculation = xlCalculationAutomatic
    .EnableEvents = True
End With

End Sub
Attribute VB_Name = "Ribbon_Kopieren"

Sub kopieren(control As IRibbonControl)

ThisWorkbook.Sheets(1).PageSetup.PrintArea = ""

With Application
    .ScreenUpdating = False
    .Calculation = xlCalculationManual
    .EnableEvents = False
End With
ActiveSheet.DisplayPageBreaks = False

ActiveSheet.Unprotect

Dim a           As Long
Dim b           As Long
Dim rng2        As Range
Dim NrZeileA    As Long
Dim NrZeileE    As Long
Dim BereichA    As Long
Dim BereichE    As Long
Dim lngNr       As Long
Dim rngZelle    As Range
Dim Sp6         As Long
Dim Adr6        As String
Dim Zw6         As Long
Dim Nr6         As String
Dim zelle       As Range
Dim Arbeitsbereich    As Long

'Erfasste Spaltennummer Modus
    Sp6 = ActiveSheet.Range("Modus").Column
    Adr6 = ActiveSheet.Cells(1, Sp6).Address
    Zw6 = InStr(2, Adr6, "$") - 1
    Nr6 = WorksheetFunction.Substitute(Left(Adr6, Len(Adr6) - (Len(Adr6) - Zw6)), "$", "")

    Arbeitsbereich = Range("Arbeitsbereich").Rows.Count + 8
    NrZeileA = Selection.Row
    NrZeileE = Selection.Rows.Count + Selection.Row - 1
    BereichA = Range("Arbeitsbereich").Row + 1
    BereichE = Range("Arbeitsbereich").Rows.Count + Range("Arbeitsbereich").Row - 1

If Selection.Row > 9 And NrZeileE <= Arbeitsbereich Then

    Application.ScreenUpdating = True
abfrage:
    On Error GoTo fehler
    Set rng2 = Application.InputBox(prompt:="Einf|fffd|geposition anklicken", Type:=8)
Application.ScreenUpdating = False

rng2.EntireRow.Select
a = Selection.Row
b = Selection.Row + NrZeileE - NrZeileA
  
   For Each zelle In Range("E" & a & ":E" & b)
      If zelle.Value <> "" Then
      ActiveSheet.Range("A" & a & ":A" & b).EntireRow.Select
      Application.ScreenUpdating = True
      MsgBox "zu wenig freie Zeilen vorhanden"
      GoTo fehler
      End If
   Next zelle

ActiveSheet.Range("B" & NrZeileA & ":P" & NrZeileE).Copy
ActiveSheet.Range("B" & a).Select
Selection.PasteSpecial Paste:=xlPasteFormulas, Operation:=xlNone, _
        SkipBlanks:=False, Transpose:=False
  
'Formeln kopieren
    Range("Formelblock_1_0").Select
    Selection.Copy
    
    Application.GoTo Reference:="Formelblock_0_0"
    ActiveSheet.Paste
    
    Application.GoTo Reference:="Formelblock_1"
    Selection.ClearContents
    
    Range("Formelblock_0_0").Select
    Selection.Copy
    
    Application.GoTo Reference:="Formelblock_1"
    ActiveSheet.Paste
    
    Application.GoTo Reference:="Formelblock_0_0"
    Selection.ClearContents
    
    Application.CutCopyMode = False
  
fehler:

End If

ActiveSheet.Protect DrawingObjects:=False, Contents:=True, Scenarios:=True, AllowFormattingCells:=True

With Application
    .ScreenUpdating = True
    .Calculation = xlCalculationAutomatic
    .EnableEvents = True
End With

End Sub

Attribute VB_Name = "Ribbon_MTMEinAusblenden"
Public Sub MTMEinblenden(control As IRibbonControl)

ThisWorkbook.Sheets(1).PageSetup.PrintArea = ""

With Application
    .ScreenUpdating = False
    .Calculation = xlCalculationManual
    .EnableEvents = False
End With
ActiveSheet.DisplayPageBreaks = False

ActiveSheet.Unprotect

If Range("MTM_Zeiten").EntireColumn.Hidden = True Then

    Range("MTM_Zeiten").EntireColumn.Hidden = False

Else

Range("MTM_Zeiten").EntireColumn.Hidden = True

End If

ActiveSheet.Protect DrawingObjects:=False, Contents:=True, Scenarios:=True, AllowFormattingCells:=True
With Application
    .ScreenUpdating = True
    .Calculation = xlCalculationAutomatic
    .EnableEvents = True
End With

End Sub

Attribute VB_Name = "Ribbon_MTM_Berechnen"

Sub MTMBerechnen(control As IRibbonControl)

ThisWorkbook.Sheets(1).PageSetup.PrintArea = ""

ActiveSheet.DisplayPageBreaks = False

If Selection.Row > 9 Then

If UserForm1.visible = False Then
UserForm1.Show
    Range("MTM_Zeiten").EntireColumn.Hidden = False
Else
UserForm1.Hide
End If
End If
If Selection.Row < 10 Then
 MsgBox "Auswahl au|fffd|erhalb des g|fffd|ltigen Bereichs"
End If

End Sub
Attribute VB_Name = "Ribbon_MTM_loeschen"
Sub MTM_loeschen(control As IRibbonControl)

ThisWorkbook.Sheets(1).PageSetup.PrintArea = ""

With Application
    .ScreenUpdating = False
    .Calculation = xlCalculationManual
    .EnableEvents = False
End With
ActiveSheet.DisplayPageBreaks = False

ActiveSheet.Unprotect

Dim NrZeileA As Long
Dim NrZeileE As Long
Dim Sp1, Sp2, Sp3, Sp4, Sp5, Sp6, Sp7, Sp8, Sp9, Sp10, Sp11, Sp12, Sp13, Sp14, Sp15, Sp16, Sp17, Sp18, Sp19, Sp20, Sp21, Sp22, Sp23, Sp24, Sp25, Sp26, Sp27 As Long
Dim Adr1, Adr2, Adr3, Adr4, Adr5, Adr6, Adr7, Adr8, Adr9, Adr10, Adr11, Adr12, Adr13, Adr14, Adr15, Adr16, Adr17, Adr18, Adr19, Adr20, Adr21, Adr22, Adr23, Adr24, Adr25, Adr26, Adr27 As String
Dim Zw1, Zw2, Zw3, Zw4, Zw5, Zw6, Zw7, Zw8, Zw9, Zw10, Zw11, Zw12, Zw13, Zw14, Zw15, Zw16, Zw17, Zw18, Zw19, Zw20, Zw21, Zw22, Zw23, Zw24, Zw25, Zw26, Zw27 As Long
Dim Nr1, Nr2, Nr3, Nr4, Nr5, Nr6, Nr7, Nr8, Nr9, Nr10, Nr11, Nr12, Nr13, Nr14, Nr15, Nr16, Nr17, Nr18, Nr19, Nr20, Nr21, Nr22, Nr23, Nr24, Nr25, Nr26, Nr27 As String
Dim zelle       As Range

'Erfasste Spaltennummer Modus
        Sp6 = ActiveSheet.Range("Modus").Column
        Adr6 = ActiveSheet.Cells(1, Sp6).Address
        Zw6 = InStr(2, Adr6, "$") - 1
        Nr6 = WorksheetFunction.Substitute(Left(Adr6, Len(Adr6) - (Len(Adr6) - Zw6)), "$", "")
'Erfasste Spaltennummer Zeit
        Sp9 = ActiveSheet.Range("Zeit").Column
        Adr9 = ActiveSheet.Cells(1, Sp9).Address
        Zw9 = InStr(2, Adr9, "$") - 1
        Nr9 = WorksheetFunction.Substitute(Left(Adr9, Len(Adr9) - (Len(Adr9) - Zw9)), "$", "")
'Erfasste Spaltennummer Kode
        Sp10 = ActiveSheet.Range("Kode").Column
        Adr10 = ActiveSheet.Cells(1, Sp10).Address
        Zw10 = InStr(2, Adr10, "$") - 1
        Nr10 = WorksheetFunction.Substitute(Left(Adr10, Len(Adr10) - (Len(Adr10) - Zw10)), "$", "")
'Erfasste Spaltennummer Entf_Bereich
        Sp11 = ActiveSheet.Range("Entf_Bereich").Column
        Adr11 = ActiveSheet.Cells(1, Sp11).Address
        Zw11 = InStr(2, Adr11, "$") - 1
        Nr11 = WorksheetFunction.Substitute(Left(Adr11, Len(Adr11) - (Len(Adr11) - Zw11)), "$", "")
'Erfasste Spaltennummer Anzahl
        Sp12 = ActiveSheet.Range("Anzahl").Column
        Adr12 = ActiveSheet.Cells(1, Sp12).Address
        Zw12 = InStr(2, Adr12, "$") - 1
        Nr12 = WorksheetFunction.Substitute(Left(Adr12, Len(Adr12) - (Len(Adr12) - Zw12)), "$", "")

If Selection.Row > 9 Then

NrZeileA = Selection.Row
NrZeileE = Selection.Rows.Count + Selection.Row - 1


For Each zelle In Range(Cells(NrZeileA, Nr10), Cells(NrZeileE, Nr12))
If zelle.Value <> "" Then
Range("MTM_Zeiten").EntireColumn.Hidden = False
Range(Cells(NrZeileA, Nr10), Cells(NrZeileE, Nr12)).Select
Application.ScreenUpdating = True

If MsgBox("Markierte MTM-Zeiten wirklich l|fffd|schen?", vbYesNo) = vbYes Then
On Error Resume Next
For Each c In Range(Cells(NrZeileA, Nr9), Cells(NrZeileE, Nr9))
If c.Value <> "" And c.Value = c.Offset(0, 11).Value Then
c.Value = c.Offset(0, 11).Value
End If
Next c
ActiveSheet.Range(Cells(NrZeileA, Nr10), Cells(NrZeileE, Nr12)).Value = ""
GoTo fehler
Else
GoTo fehler
End If
End If
Next zelle

fehler:
End If

ActiveSheet.Protect DrawingObjects:=False, Contents:=True, Scenarios:=True, AllowFormattingCells:=True
With Application
    .ScreenUpdating = True
    .Calculation = xlCalculationAutomatic
    .EnableEvents = True
End With

End Sub

Attribute VB_Name = "Ribbon_Modus"
Sub Manuell_1(control As IRibbonControl)

ThisWorkbook.Sheets(1).PageSetup.PrintArea = ""

With Application
    .ScreenUpdating = False
    .Calculation = xlCalculationManual
    .EnableEvents = False
End With
ActiveSheet.DisplayPageBreaks = False

ActiveSheet.Unprotect

Dim NrZeileA    As Long
Dim NrZeileE    As Long
Dim zelle       As Range
Dim Sp1, Sp2, Sp3, Sp4, Sp5, Sp6, Sp7, Sp8, Sp9, Sp10, Sp11, Sp12, Sp13, Sp14, Sp15, Sp16, Sp17, Sp18, Sp19, Sp20, Sp21, Sp22, Sp23, Sp24, Sp25, Sp26, Sp27 As Long
Dim Adr1, Adr2, Adr3, Adr4, Adr5, Adr6, Adr7, Adr8, Adr9, Adr10, Adr11, Adr12, Adr13, Adr14, Adr15, Adr16, Adr17, Adr18, Adr19, Adr20, Adr21, Adr22, Adr23, Adr24, Adr25, Adr26, Adr27 As String
Dim Zw1, Zw2, Zw3, Zw4, Zw5, Zw6, Zw7, Zw8, Zw9, Zw10, Zw11, Zw12, Zw13, Zw14, Zw15, Zw16, Zw17, Zw18, Zw19, Zw20, Zw21, Zw22, Zw23, Zw24, Zw25, Zw26, Zw27 As Long
Dim Nr1, Nr2, Nr3, Nr4, Nr5, Nr6, Nr7, Nr8, Nr9, Nr10, Nr11, Nr12, Nr13, Nr14, Nr15, Nr16, Nr17, Nr18, Nr19, Nr20, Nr21, Nr22, Nr23, Nr24, Nr25, Nr26, Nr27 As String
Dim i           As Integer

'Erfasste Spaltennummer Modus
        Sp6 = ActiveSheet.Range("Modus").Column
        Adr6 = ActiveSheet.Cells(1, Sp6).Address
        Zw6 = InStr(2, Adr6, "$") - 1
        Nr6 = WorksheetFunction.Substitute(Left(Adr6, Len(Adr6) - (Len(Adr6) - Zw6)), "$", "")

'Erfasste Spaltennummer Warten
        Sp8 = ActiveSheet.Range("Warten").Column
        Adr8 = ActiveSheet.Cells(1, Sp8).Address
        Zw8 = InStr(2, Adr8, "$") - 1
        Nr8 = WorksheetFunction.Substitute(Left(Adr8, Len(Adr8) - (Len(Adr8) - Zw8)), "$", "")

'Erfasste Spaltennummer Benennung
        Sp17 = ActiveSheet.Range("Benennung").Column
        Adr17 = ActiveSheet.Cells(1, Sp17).Address
        Zw17 = InStr(2, Adr17, "$") - 1
        Nr17 = WorksheetFunction.Substitute(Left(Adr17, Len(Adr17) - (Len(Adr17) - Zw17)), "$", "")
'Erfasste Spaltennummer Benennung_E
        Sp18 = ActiveSheet.Range("Benennung_E").Column
        Adr18 = ActiveSheet.Cells(1, Sp18).Address
        Zw18 = InStr(2, Adr18, "$") - 1
        Nr18 = WorksheetFunction.Substitute(Left(Adr18, Len(Adr18) - (Len(Adr18) - Zw18)), "$", "")

        
If Selection.Row > 9 Then

NrZeileA = Selection.Row
NrZeileE = Selection.Rows.Count + Selection.Row - 1

For Each zelle In Range(Cells(NrZeileA, Nr6), Cells(NrZeileE, Nr6))
If zelle.Value = "ZWS" Then
MsgBox "ZWS kann nicht |fffd|berschrieben werden" & Chr(13) & " ", vbExclamation, "WARNUNG!"
GoTo fehler
End If
Next zelle

ActiveSheet.Range(Cells(NrZeileA, Nr6), Cells(NrZeileE, Nr6)).Value = "Man"
ActiveSheet.Range(Cells(NrZeileA, Nr17), Cells(NrZeileE, Nr17)).Value = "Werker"
ActiveSheet.Range(Cells(NrZeileA, Nr8), Cells(NrZeileE, Nr8)).Value = ""

'Bestehenden Pfeil (Warten)l|fffd|schen
    On Error Resume Next
    For i = NrZeileA To NrZeileE
        For Each shp In ActiveSheet.Shapes
        If shp.Name = "Warten" & i Then shp.Delete
        Next
        Next i
        
fehler:
End If
    
ActiveSheet.Protect DrawingObjects:=False, Contents:=True, Scenarios:=True, AllowFormattingCells:=True
With Application
    .ScreenUpdating = True
    .Calculation = xlCalculationAutomatic
    .EnableEvents = True
End With

End Sub

Sub Automatik_1(control As IRibbonControl)

ThisWorkbook.Sheets(1).PageSetup.PrintArea = ""

With Application
    .ScreenUpdating = False
    .Calculation = xlCalculationManual
    .EnableEvents = False
End With
ActiveSheet.DisplayPageBreaks = False

ActiveSheet.Unprotect

Dim NrZeileA As Long
Dim NrZeileE As Long
Dim Sp6         As Long
Dim Adr6        As String
Dim Zw6         As Long
Dim Nr6         As String
Dim zelle       As Range
Dim i           As Integer

'Erfasste Spaltennummer Modus
    Sp6 = ActiveSheet.Range("Modus").Column
    Adr6 = ActiveSheet.Cells(1, Sp6).Address
    Zw6 = InStr(2, Adr6, "$") - 1
    Nr6 = WorksheetFunction.Substitute(Left(Adr6, Len(Adr6) - (Len(Adr6) - Zw6)), "$", "")
    
'Erfasste Spaltennummer Warten
        Sp8 = ActiveSheet.Range("Warten").Column
        Adr8 = ActiveSheet.Cells(1, Sp8).Address
        Zw8 = InStr(2, Adr8, "$") - 1
        Nr8 = WorksheetFunction.Substitute(Left(Adr8, Len(Adr8) - (Len(Adr8) - Zw8)), "$", "")
    
If Selection.Row > 8 Then

NrZeileA = Selection.Row
NrZeileE = Selection.Rows.Count + Selection.Row - 1

For Each zelle In Range(Cells(NrZeileA, Nr6), Cells(NrZeileE, Nr6))
If zelle.Value = "ZWS" Then
MsgBox "ZWS kann nicht |fffd|berschrieben werden" & Chr(13) & " ", vbExclamation, "WARNUNG!"
GoTo fehler
End If
Next zelle

ActiveSheet.Range(Cells(NrZeileA, Nr6), Cells(NrZeileE, Nr6)).Value = "Aut"
ActiveSheet.Range(Cells(NrZeileA, Nr8), Cells(NrZeileE, Nr8)).Value = ""

'Bestehenden Pfeil (Warten)l|fffd|schen
    On Error Resume Next
    For i = NrZeileA To NrZeileE
        For Each shp In ActiveSheet.Shapes
        If shp.Name = "Warten" & i Then shp.Delete
        Next
        Next i
        
fehler:
End If
  
ActiveSheet.Protect DrawingObjects:=False, Contents:=True, Scenarios:=True, AllowFormattingCells:=True
With Application
    .ScreenUpdating = True
    .Calculation = xlCalculationAutomatic
    .EnableEvents = True
End With

End Sub

Sub Automatik_im_Verbund_1(control As IRibbonControl)

ThisWorkbook.Sheets(1).PageSetup.PrintArea = ""

With Application
    .ScreenUpdating = False
    .Calculation = xlCalculationManual
    .EnableEvents = False
End With
ActiveSheet.DisplayPageBreaks = False

ActiveSheet.Unprotect

Dim NrZeileA As Long
Dim NrZeileE As Long
Dim Sp6         As Long
Dim Adr6        As String
Dim Zw6         As Long
Dim Nr6         As String
Dim zelle       As Range
Dim i           As Integer

'Erfasste Spaltennummer Modus
    Sp6 = ActiveSheet.Range("Modus").Column
    Adr6 = ActiveSheet.Cells(1, Sp6).Address
    Zw6 = InStr(2, Adr6, "$") - 1
    Nr6 = WorksheetFunction.Substitute(Left(Adr6, Len(Adr6) - (Len(Adr6) - Zw6)), "$", "")
    
'Erfasste Spaltennummer Warten
        Sp8 = ActiveSheet.Range("Warten").Column
        Adr8 = ActiveSheet.Cells(1, Sp8).Address
        Zw8 = InStr(2, Adr8, "$") - 1
        Nr8 = WorksheetFunction.Substitute(Left(Adr8, Len(Adr8) - (Len(Adr8) - Zw8)), "$", "")
        
If Selection.Row > 8 Then

NrZeileA = Selection.Row
NrZeileE = Selection.Rows.Count + Selection.Row - 1

For Each zelle In Range(Cells(NrZeileA, Nr6), Cells(NrZeileE, Nr6))
If zelle.Value = "ZWS" Then
MsgBox "ZWS kann nicht |fffd|berschrieben werden" & Chr(13) & " ", vbExclamation, "WARNUNG!"
GoTo fehler
End If
Next zelle

ActiveSheet.Range(Cells(NrZeileA, Nr6), Cells(NrZeileE, Nr6)).Value = "Aiv"
ActiveSheet.Range(Cells(NrZeileA, Nr8), Cells(NrZeileE, Nr8)).Value = ""

'Bestehenden Pfeil (Warten)l|fffd|schen
    On Error Resume Next
    For i = NrZeileA To NrZeileE
        For Each shp In ActiveSheet.Shapes
        If shp.Name = "Warten" & i Then shp.Delete
        Next
        Next i
        
fehler:
End If

ActiveSheet.Protect DrawingObjects:=False, Contents:=True, Scenarios:=True, AllowFormattingCells:=True
With Application
    .ScreenUpdating = True
    .Calculation = xlCalculationAutomatic
    .EnableEvents = True
End With

End Sub

Sub Robot(control As IRibbonControl)

ThisWorkbook.Sheets(1).PageSetup.PrintArea = ""

With Application
    .ScreenUpdating = False
    .Calculation = xlCalculationManual
    .EnableEvents = False
End With
ActiveSheet.DisplayPageBreaks = False

ActiveSheet.Unprotect

Dim NrZeileA As Long
Dim NrZeileE As Long
Dim zelle       As Range
Dim Sp1, Sp2, Sp3, Sp4, Sp5, Sp6, Sp7, Sp8, Sp9, Sp10, Sp11, Sp12, Sp13, Sp14, Sp15, Sp16, Sp17, Sp18, Sp19, Sp20, Sp21, Sp22, Sp23, Sp24, Sp25, Sp26, Sp27 As Long
Dim Adr1, Adr2, Adr3, Adr4, Adr5, Adr6, Adr7, Adr8, Adr9, Adr10, Adr11, Adr12, Adr13, Adr14, Adr15, Adr16, Adr17, Adr18, Adr19, Adr20, Adr21, Adr22, Adr23, Adr24, Adr25, Adr26, Adr27 As String
Dim Zw1, Zw2, Zw3, Zw4, Zw5, Zw6, Zw7, Zw8, Zw9, Zw10, Zw11, Zw12, Zw13, Zw14, Zw15, Zw16, Zw17, Zw18, Zw19, Zw20, Zw21, Zw22, Zw23, Zw24, Zw25, Zw26, Zw27 As Long
Dim Nr1, Nr2, Nr3, Nr4, Nr5, Nr6, Nr7, Nr8, Nr9, Nr10, Nr11, Nr12, Nr13, Nr14, Nr15, Nr16, Nr17, Nr18, Nr19, Nr20, Nr21, Nr22, Nr23, Nr24, Nr25, Nr26, Nr27 As String
Dim i           As Integer

'Erfasste Spaltennummer Modus
    Sp6 = ActiveSheet.Range("Modus").Column
    Adr6 = ActiveSheet.Cells(1, Sp6).Address
    Zw6 = InStr(2, Adr6, "$") - 1
    Nr6 = WorksheetFunction.Substitute(Left(Adr6, Len(Adr6) - (Len(Adr6) - Zw6)), "$", "")

'Erfasste Spaltennummer Warten
        Sp8 = ActiveSheet.Range("Warten").Column
        Adr8 = ActiveSheet.Cells(1, Sp8).Address
        Zw8 = InStr(2, Adr8, "$") - 1
        Nr8 = WorksheetFunction.Substitute(Left(Adr8, Len(Adr8) - (Len(Adr8) - Zw8)), "$", "")

'Erfasste Spaltennummer Benennung
        Sp17 = ActiveSheet.Range("Benennung").Column
        Adr17 = ActiveSheet.Cells(1, Sp17).Address
        Zw17 = InStr(2, Adr17, "$") - 1
        Nr17 = WorksheetFunction.Substitute(Left(Adr17, Len(Adr17) - (Len(Adr17) - Zw17)), "$", "")
'Erfasste Spaltennummer Benennung_E
        Sp18 = ActiveSheet.Range("Benennung_E").Column
        Adr18 = ActiveSheet.Cells(1, Sp18).Address
        Zw18 = InStr(2, Adr18, "$") - 1
        Nr18 = WorksheetFunction.Substitute(Left(Adr18, Len(Adr18) - (Len(Adr18) - Zw18)), "$", "")
        
If Selection.Row > 8 Then

NrZeileA = Selection.Row
NrZeileE = Selection.Rows.Count + Selection.Row - 1

For Each zelle In Range(Cells(NrZeileA, Nr6), Cells(NrZeileE, Nr6))
If zelle.Value = "ZWS" Then
MsgBox "ZWS kann nicht |fffd|berschrieben werden" & Chr(13) & " ", vbExclamation, "WARNUNG!"
GoTo fehler
End If
Next zelle

ActiveSheet.Range(Cells(NrZeileA, Nr6), Cells(NrZeileE, Nr6)).Value = "Rob"
ActiveSheet.Range(Cells(NrZeileA, Nr17), Cells(NrZeileE, Nr17)).Value = "Roboter"
ActiveSheet.Range(Cells(NrZeileA, Nr8), Cells(NrZeileE, Nr8)).Value = ""

'Bestehenden Pfeil (Warten)l|fffd|schen
    On Error Resume Next
    For i = NrZeileA To NrZeileE
        For Each shp In ActiveSheet.Shapes
        If shp.Name = "Warten" & i Then shp.Delete
        Next
        Next i
        
fehler:
End If

ActiveSheet.Protect DrawingObjects:=False, Contents:=True, Scenarios:=True, AllowFormattingCells:=True
With Application
    .ScreenUpdating = True
    .Calculation = xlCalculationAutomatic
    .EnableEvents = True
End With

End Sub

Sub Koerperbewegung_1(control As IRibbonControl)

ThisWorkbook.Sheets(1).PageSetup.PrintArea = ""

With Application
    .ScreenUpdating = False
    .Calculation = xlCalculationManual
    .EnableEvents = False
End With
ActiveSheet.DisplayPageBreaks = False

ActiveSheet.Unprotect

Dim NrZeileA As Long
Dim NrZeileE As Long
Dim Sp6         As Long
Dim Adr6        As String
Dim Zw6         As Long
Dim Nr6         As String
Dim zelle       As Range
Dim i           As Integer

'Erfasste Spaltennummer Modus
    Sp6 = ActiveSheet.Range("Modus").Column
    Adr6 = ActiveSheet.Cells(1, Sp6).Address
    Zw6 = InStr(2, Adr6, "$") - 1
    Nr6 = WorksheetFunction.Substitute(Left(Adr6, Len(Adr6) - (Len(Adr6) - Zw6)), "$", "")

'Erfasste Spaltennummer Warten
        Sp8 = ActiveSheet.Range("Warten").Column
        Adr8 = ActiveSheet.Cells(1, Sp8).Address
        Zw8 = InStr(2, Adr8, "$") - 1
        Nr8 = WorksheetFunction.Substitute(Left(Adr8, Len(Adr8) - (Len(Adr8) - Zw8)), "$", "")

'Erfasste Spaltennummer Benennung
        Sp17 = ActiveSheet.Range("Benennung").Column
        Adr17 = ActiveSheet.Cells(1, Sp17).Address
        Zw17 = InStr(2, Adr17, "$") - 1
        Nr17 = WorksheetFunction.Substitute(Left(Adr17, Len(Adr17) - (Len(Adr17) - Zw17)), "$", "")
    
If Selection.Row > 8 Then

NrZeileA = Selection.Row
NrZeileE = Selection.Rows.Count + Selection.Row - 1

For Each zelle In Range(Cells(NrZeileA, Nr6), Cells(NrZeileE, Nr6))
If zelle.Value = "ZWS" Then
MsgBox "ZWS kann nicht |fffd|berschrieben werden" & Chr(13) & " ", vbExclamation, "WARNUNG!"
GoTo fehler
End If
Next zelle

ActiveSheet.Range(Cells(NrZeileA, Nr6), Cells(NrZeileE, Nr6)).Value = "KB"
ActiveSheet.Range(Cells(NrZeileA, Nr17), Cells(NrZeileE, Nr17)).Value = "Werker"
ActiveSheet.Range(Cells(NrZeileA, Nr8), Cells(NrZeileE, Nr8)).Value = ""

'Bestehenden Pfeil (Warten)l|fffd|schen
    On Error Resume Next
    For i = NrZeileA To NrZeileE
        For Each shp In ActiveSheet.Shapes
        If shp.Name = "Warten" & i Then shp.Delete
        Next
        Next i
        
fehler:
End If

ActiveSheet.Protect DrawingObjects:=False, Contents:=True, Scenarios:=True, AllowFormattingCells:=True
With Application
    .ScreenUpdating = True
    .Calculation = xlCalculationAutomatic
    .EnableEvents = True
End With

End Sub

Sub Warten_1(control As IRibbonControl)

ThisWorkbook.Sheets(1).PageSetup.PrintArea = ""

With Application
    .ScreenUpdating = False
    .Calculation = xlCalculationManual
    .EnableEvents = False
End With
ActiveSheet.DisplayPageBreaks = False

ActiveSheet.Unprotect

Dim NrZeileA As Long
Dim NrZeileE As Long
Dim Sp6         As Long
Dim Adr6        As String
Dim Zw6         As Long
Dim Nr6         As String
Dim zelle       As Range

'Erfasste Spaltennummer Modus
    Sp6 = ActiveSheet.Range("Modus").Column
    Adr6 = ActiveSheet.Cells(1, Sp6).Address
    Zw6 = InStr(2, Adr6, "$") - 1
    Nr6 = WorksheetFunction.Substitute(Left(Adr6, Len(Adr6) - (Len(Adr6) - Zw6)), "$", "")

'Erfasste Spaltennummer Warten
        Sp8 = ActiveSheet.Range("Warten").Column
        Adr8 = ActiveSheet.Cells(1, Sp8).Address
        Zw8 = InStr(2, Adr8, "$") - 1
        Nr8 = WorksheetFunction.Substitute(Left(Adr8, Len(Adr8) - (Len(Adr8) - Zw8)), "$", "")

'Erfasste Spaltennummer Zeit
        Sp9 = ActiveSheet.Range("Zeit").Column
        Adr9 = ActiveSheet.Cells(1, Sp9).Address
        Zw9 = InStr(2, Adr9, "$") - 1
        Nr9 = WorksheetFunction.Substitute(Left(Adr9, Len(Adr9) - (Len(Adr9) - Zw9)), "$", "")
        
'Erfasste Spaltennummer Benennung
        Sp17 = ActiveSheet.Range("Benennung").Column
        Adr17 = ActiveSheet.Cells(1, Sp17).Address
        Zw17 = InStr(2, Adr17, "$") - 1
        Nr17 = WorksheetFunction.Substitute(Left(Adr17, Len(Adr17) - (Len(Adr17) - Zw17)), "$", "")
    
If Selection.Row > 8 Then

NrZeileA = Selection.Row
NrZeileE = Selection.Rows.Count + Selection.Row - 1

Nr = NrZeileA
ActiveSheet.Cells(Nr, Nr8).FormulaLocal = "= " & Nr9 & "" & Nr & ""

For Each zelle In Range(Cells(NrZeileA, Nr6), Cells(NrZeileE, Nr6))
If zelle.Value = "ZWS" Then
MsgBox "ZWS kann nicht |fffd|berschrieben werden" & Chr(13) & " ", vbExclamation, "WARNUNG!"
GoTo fehler
End If
Next zelle

ActiveSheet.Range(Cells(NrZeileA, Nr6), Cells(NrZeileE, Nr6)).Value = "W"
ActiveSheet.Range(Cells(NrZeileA, Nr17), Cells(NrZeileE, Nr17)).Value = "Werker"

fehler:
End If

ActiveSheet.Protect DrawingObjects:=False, Contents:=True, Scenarios:=True, AllowFormattingCells:=True
With Application
    .ScreenUpdating = True
    .Calculation = xlCalculationAutomatic
    .EnableEvents = True
End With

End Sub


Sub Modus_Loeschen(control As IRibbonControl)

ThisWorkbook.Sheets(1).PageSetup.PrintArea = ""

With Application
    .ScreenUpdating = False
    .Calculation = xlCalculationManual
    .EnableEvents = False
End With
ActiveSheet.DisplayPageBreaks = False

ActiveSheet.Unprotect

Dim NrZeileA As Long
Dim NrZeileE As Long
Dim Sp6         As Long
Dim Adr6        As String
Dim Zw6         As Long
Dim Nr6         As String
Dim zelle       As Range
Dim i           As Integer

'Erfasste Spaltennummer Modus
    Sp6 = ActiveSheet.Range("Modus").Column
    Adr6 = ActiveSheet.Cells(1, Sp6).Address
    Zw6 = InStr(2, Adr6, "$") - 1
    Nr6 = WorksheetFunction.Substitute(Left(Adr6, Len(Adr6) - (Len(Adr6) - Zw6)), "$", "")

'Erfasste Spaltennummer Warten
    Sp8 = ActiveSheet.Range("Warten").Column
    Adr8 = ActiveSheet.Cells(1, Sp8).Address
    Zw8 = InStr(2, Adr8, "$") - 1
    Nr8 = WorksheetFunction.Substitute(Left(Adr8, Len(Adr8) - (Len(Adr8) - Zw8)), "$", "")

If Selection.Row > 8 Then

NrZeileA = Selection.Row
NrZeileE = Selection.Rows.Count + Selection.Row - 1


For Each zelle In Range(Cells(NrZeileA, Nr6), Cells(NrZeileE, Nr6))
If zelle.Value = "ZWS" Then
MsgBox "ZWS kann nicht |fffd|berschrieben werden" & Chr(13) & " ", vbExclamation, "WARNUNG!"
GoTo fehler
End If
Next zelle

ActiveSheet.Range(Cells(NrZeileA, Nr6), Cells(NrZeileE, Nr6)).Value = ""
ActiveSheet.Range(Cells(NrZeileA, Nr8), Cells(NrZeileE, Nr8)).Value = ""

'Bestehenden Pfeil (Warten)l|fffd|schen
    On Error Resume Next
    For i = NrZeileA To NrZeileE
        For Each shp In ActiveSheet.Shapes
        If shp.Name = "Warten" & i Then shp.Delete
        Next
        Next i
    
fehler:
End If

ActiveSheet.Protect DrawingObjects:=False, Contents:=True, Scenarios:=True, AllowFormattingCells:=True
With Application
    .ScreenUpdating = True
    .Calculation = xlCalculationAutomatic
    .EnableEvents = True
End With

End Sub
Attribute VB_Name = "Ribbon_PfeilEinfuegen"
Sub PfeilEinfuegen(control As IRibbonControl)

ThisWorkbook.Sheets(1).PageSetup.PrintArea = ""

With Application
  .ScreenUpdating = False
    .Calculation = xlCalculationManual
    .EnableEvents = False
End With
ActiveSheet.DisplayPageBreaks = False

ActiveSheet.Unprotect

    ActiveSheet.Shapes.Range(Array("Pfeil_1")).Select
    Selection.Copy

    Range("Einfuegepunkt_Pfeil").Select
    ActiveSheet.Paste

ActiveSheet.Protect DrawingObjects:=False, Contents:=True, Scenarios:=True, AllowFormattingCells:=True
With Application
    .ScreenUpdating = True
    .Calculation = xlCalculationAutomatic
    .EnableEvents = True
End With

End Sub
Attribute VB_Name = "Ribbon_REGEN"
Sub Aktualisieren(control As IRibbonControl)

ActiveSheet.Unprotect

ThisWorkbook.Sheets(1).PageSetup.PrintArea = ""

With Application
    .ScreenUpdating = False
    .EnableEvents = False
    .Calculation = xlCalculationManual
End With

ActiveSheet.DisplayPageBreaks = False

Dim a           As Variant
Dim s           As Variant
Dim rngZelle    As Range
Dim lngNr       As Long
Dim pos        As Long
Dim c          As Range
Dim d          As Range
Dim e          As Range
Dim Nr          As Long
Dim rng         As Range
Dim NrZeileA    As Long
Dim NrZeileE    As Long
Dim zelle       As Range

a = Selection.Row
s = Selection.Column

With ActiveSheet
     If .AutoFilterMode Then If _
     .AutoFilter.FilterMode Then _
     .AutoFilter.ShowAllData
 End With
 
Range("Arbeitsbereich").Select
    NrZeileA = Selection.Row
    NrZeileE = Selection.Rows.Count + Selection.Row - 1
    Nr = NrZeileA

'Formeln kopieren
    Range("Formelblock_1_0").Select
    Selection.Copy
    
    Application.GoTo Reference:="Formelblock_0_0"
    ActiveSheet.Paste
    
    Application.GoTo Reference:="Formelblock_1"
    Selection.ClearContents
    
    Range("Formelblock_0_0").Select
    Selection.Copy
    
    Application.GoTo Reference:="Formelblock_1"
    ActiveSheet.Paste
    
    Application.GoTo Reference:="Formelblock_0_0"
    Selection.ClearContents
    
    Application.CutCopyMode = False
 
'XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX

    Range("A8").Value = 0
    Range("A9").Value = 1
    Range("A8:A9").Select
    Selection.AutoFill Destination:=Range("Nummernfeld")

    Range("Arbeitsbereich").RowHeight = 15
    Range("Musterzeile").RowHeight = 0.1
    Range("Arbeitsbereich").Font.Size = 10

    If Range("Taktung").Value = 1 Then
    Range("Grafik").ColumnWidth = 2.5
    End If

    If Range("Taktung").Value = 0.5 Then
    Range("Grafik").ColumnWidth = 1
    End If

    If Range("Taktung").Value = 0.1 Then
    Range("Grafik").ColumnWidth = 0.15
    End If

    Range("Ausblenden_2").EntireColumn.Hidden = True

    Rows("1:4").EntireRow.RowHeight = 17

    'Spaltenbreiten anpassen
    Columns("a:a").EntireColumn.AutoFit
    Columns("b:b").EntireColumn.AutoFit
    Columns("c:c").EntireColumn.AutoFit
    Columns("d:d").EntireColumn.AutoFit
    Columns("g:g").EntireColumn.AutoFit
    Columns("l:l").EntireColumn.AutoFit
    Columns("m:m").EntireColumn.AutoFit
    Columns("r:r").EntireColumn.AutoFit
    Columns("s:s").EntireColumn.AutoFit
    
    If Columns("E:E").Hidden = False Then
    Columns("E:E").EntireColumn.AutoFit
    End If
    If Columns("F:F").Hidden = False Then
    Columns("f:f").EntireColumn.AutoFit
    End If
    If Columns("G:G").Hidden = False Then
    Columns("G:G").EntireColumn.AutoFit
    End If
    If Columns("h:h").Hidden = False Then
    Columns("h:h").EntireColumn.AutoFit
    End If
    If Columns("i:i").Hidden = False Then
    Columns("i:i").EntireColumn.AutoFit
    End If
    If Columns("j:j").Hidden = False Then
    Columns("j:j").EntireColumn.AutoFit
    End If
    If Columns("k:k").Hidden = False Then
    Columns("k:k").EntireColumn.AutoFit
    End If
    If Columns("n:n").Hidden = False Then
    Columns("n:n").EntireColumn.AutoFit
    End If
    If Columns("o:o").Hidden = False Then
    Columns("o:o").EntireColumn.AutoFit
    End If
    If Columns("p:p").Hidden = False Then
    Columns("p:p").EntireColumn.AutoFit
    End If
    If Columns("Q:Q").Hidden = False Then
    Columns("Q:Q").EntireColumn.AutoFit
    End If

'XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
'Summe Werker und Roboter ein-ausblenden

    On Error Resume Next
    For Each c In Range("Werker_Ende")
    If c.Value = 0 Then
    c.EntireRow.RowHeight = 0.1
    End If
    Next c

    On Error Resume Next
    For Each c In Range("Werker_Ende")
    If c.Value > 0 Then
    c.EntireRow.RowHeight = 17
    End If
    Next c

    On Error Resume Next
    For Each c In Range("Roboter_Ende")
    If c.Value = 0 Then
    c.EntireRow.RowHeight = 0.1
    End If
    Next c

    On Error Resume Next
    For Each c In Range("Roboter_Ende")
    If c.Value > 0 Then
    c.EntireRow.RowHeight = 17
    End If
    Next c
'XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX

'MTM-Zeiten |fffd|berschreiben
    Application.Calculation = xlCalculationAutomatic
    On Error Resume Next
    For Each e In Range("berechneteZeit")
    If e.Value <> "" And e.Value <> e.Offset(0, -11).Value Then
    e.EntireRow.Select
    Application.ScreenUpdating = True
    If MsgBox("In der markierten Zeile stimmt die eingetragene Zeit nicht mit der MTM-Zeit |fffd|berein! Soll sie mit der MTM-Zeit |fffd|berschrieben werden?", vbYesNo) = vbYes Then
    e.Offset(0, -11).Value = e.Value
    End If
    End If
    Next e

Cells(a, s).Select

ActiveSheet.Protect DrawingObjects:=False, Contents:=True, Scenarios:=True, AllowFormattingCells:=True
With Application
    .ScreenUpdating = True
    .Calculation = xlCalculationAutomatic
    .EnableEvents = True
End With

End Sub



Attribute VB_Name = "Ribbon_SchriftkopfEinAusblenden"
Public Sub Schriftkopfausblenden(control As IRibbonControl, ByRef pressed)

ThisWorkbook.Sheets(1).PageSetup.PrintArea = ""

With Application
    .ScreenUpdating = False
    .Calculation = xlCalculationManual
    .EnableEvents = False
End With
ActiveSheet.DisplayPageBreaks = False

ActiveSheet.Unprotect
Dim zelle As Range

If pressed = True Then
     bolS4 = True

Rows("1:4").EntireRow.RowHeight = 0.1

Else
     bolS4 = False
Rows("1:4").EntireRow.RowHeight = 17

End If

ActiveSheet.Protect DrawingObjects:=False, Contents:=True, Scenarios:=True, AllowFormattingCells:=True
With Application
    .ScreenUpdating = True
    .Calculation = xlCalculationAutomatic
    .EnableEvents = True
End With

End Sub

Attribute VB_Name = "Ribbon_Sprache"
Sub Sprache(control As IRibbonControl)

ThisWorkbook.Sheets(1).PageSetup.PrintArea = ""

With Application
    .ScreenUpdating = False
    .Calculation = xlCalculationManual
    .EnableEvents = False
End With
ActiveSheet.DisplayPageBreaks = False

ActiveSheet.Unprotect
    
Dim Sp1, Sp2, Sp3, Sp4, Sp5, Sp6, Sp7, Sp8, Sp9, Sp10, Sp11, Sp12, Sp13, Sp14, Sp15, Sp16, Sp17, Sp18, Sp19, Sp20, Sp21, Sp22, Sp23 As Long
Dim Adr1, Adr2, Adr3, Adr4, Adr5, Adr6, Adr7, Adr8, Adr9, Adr10, Adr11, Adr12, Adr13, Adr14, Adr15, Adr16, Adr17, Adr18, Adr19, Adr20, Adr21, Adr22, Adr23 As String
Dim Zw1, Zw2, Zw3, Zw4, Zw5, Zw6, Zw7, Zw8, Zw9, Zw10, Zw11, Zw12, Zw13, Zw14, Zw15, Zw16, Zw17, Zw18, Zw19, Zw20, Zw21, Zw22, Zw23 As Long
Dim Nr1, Nr2, Nr3, Nr4, Nr5, Nr6, Nr7, Nr8, Nr9, Nr10, Nr11, Nr12, Nr13, Nr14, Nr15, Nr16, Nr17, Nr18, Nr19, Nr20, Nr21, Nr22, Nr23 As String
 
'Erfasste Spaltennummer Ende
        Sp2 = ActiveSheet.Range("Ende").Column
        Adr2 = ActiveSheet.Cells(1, Sp2).Address
        Zw2 = InStr(2, Adr2, "$") - 1
        Nr2 = WorksheetFunction.Substitute(Left(Adr2, Len(Adr2) - (Len(Adr2) - Zw2)), "$", "")
'Erfasste Spaltennummer Verknuepfung
        Sp5 = ActiveSheet.Range("Verknuepfung").Column
        Adr5 = ActiveSheet.Cells(1, Sp5).Address
        Zw5 = InStr(2, Adr5, "$") - 1
        Nr5 = WorksheetFunction.Substitute(Left(Adr5, Len(Adr5) - (Len(Adr5) - Zw5)), "$", "")
'Erfasste Spaltennummer Warten
        Sp8 = ActiveSheet.Range("Warten").Column
        Adr8 = ActiveSheet.Cells(1, Sp8).Address
        Zw8 = InStr(2, Adr8, "$") - 1
        Nr8 = WorksheetFunction.Substitute(Left(Adr8, Len(Adr8) - (Len(Adr8) - Zw8)), "$", "")
'Erfasste Spaltennummer Kode
        Sp10 = ActiveSheet.Range("Kode").Column
        Adr10 = ActiveSheet.Cells(1, Sp10).Address
        Zw10 = InStr(2, Adr10, "$") - 1
        Nr10 = WorksheetFunction.Substitute(Left(Adr10, Len(Adr10) - (Len(Adr10) - Zw10)), "$", "")
'Erfasste Spaltennummer Entf_Bereich
        Sp11 = ActiveSheet.Range("Entf_Bereich").Column
        Adr11 = ActiveSheet.Cells(1, Sp11).Address
        Zw11 = InStr(2, Adr11, "$") - 1
        Nr11 = WorksheetFunction.Substitute(Left(Adr11, Len(Adr11) - (Len(Adr11) - Zw11)), "$", "")
'Erfasste Spaltennummer Anzahl
        Sp12 = ActiveSheet.Range("Anzahl").Column
        Adr12 = ActiveSheet.Cells(1, Sp12).Address
        Zw12 = InStr(2, Adr12, "$") - 1
        Nr12 = WorksheetFunction.Substitute(Left(Adr12, Len(Adr12) - (Len(Adr12) - Zw12)), "$", "")
'Erfasste Spaltennummer Zeit
        Sp9 = ActiveSheet.Range("Zeit").Column
        Adr9 = ActiveSheet.Cells(1, Sp9).Address
        Zw9 = InStr(2, Adr9, "$") - 1
        Nr9 = WorksheetFunction.Substitute(Left(Adr9, Len(Adr9) - (Len(Adr9) - Zw9)), "$", "")
'Erfasste Spaltennummer Station
        Sp21 = ActiveSheet.Range("Station").Column
        Adr21 = ActiveSheet.Cells(1, Sp21).Address
        Zw21 = InStr(2, Adr21, "$") - 1
        Nr21 = WorksheetFunction.Substitute(Left(Adr21, Len(Adr21) - (Len(Adr21) - Zw21)), "$", "")
'Erfasste Spaltennummer Bemerkung
        Sp23 = ActiveSheet.Range("Bemerkung").Column
        Adr23 = ActiveSheet.Cells(1, Sp23).Address
        Zw23 = InStr(2, Adr23, "$") - 1
        Nr23 = WorksheetFunction.Substitute(Left(Adr23, Len(Adr23) - (Len(Adr23) - Zw23)), "$", "")
        
'deutsch einblenden
If Range("Benennung").EntireColumn.Hidden = False And Range("Benennung_E").EntireColumn.Hidden = False Then
    Range("Benennung").EntireColumn.Hidden = False
    Range("Aktion").EntireColumn.Hidden = False
    Range("Bemerkung").EntireColumn.Hidden = False
    Range("Benennung_E").EntireColumn.Hidden = True
    Range("Aktion_E").EntireColumn.Hidden = True
    Range("Bemerkung_E").EntireColumn.Hidden = True
    
    Range("A1").Value = "Projektbez.:"
    Range("A2").Value = "Stationsbez.:"
    Range("A3").Value = "Bearbeiter:"
    Range("A4").Value = "Meistermessung:"
    Cells(1, Nr23).Value = "Projekt-Nr.:"
    Cells(2, Nr23).Value = "Station-Nr.:"
    Cells(3, Nr23).Value = "Datum:"
    Cells(4, Nr23).Value = "Soll-Taktzeit:"
    Cells(5, Nr23).Value = "Ist-Taktzeit:"
    Cells(2, Nr10).Value = "Kode"
    Cells(2, Nr11).Value = "Entf. Bereich"
    Cells(2, Nr12).Value = "Anzahl"
    Cells(6, Nr8).Value = "Warten"
    Cells(6, Nr9).Value = "Zeit"
    Cells(6, Nr2).Value = "Ende"
    Cells(5, 5).Value = "Taktzeitanalyse"
    Cells(5, 6).Value = ""
GoTo ende
End If

'enlisch einblenden
If Range("Benennung").EntireColumn.Hidden = False And Range("Benennung_E").EntireColumn.Hidden = True Then
    Range("Benennung").EntireColumn.Hidden = True
    Range("Aktion").EntireColumn.Hidden = True
    Range("Bemerkung").EntireColumn.Hidden = True
    Range("Benennung_E").EntireColumn.Hidden = False
    Range("Aktion_E").EntireColumn.Hidden = False
    Range("Bemerkung_E").EntireColumn.Hidden = False

    Range("A1").Value = "Project Title:"
    Range("A2").Value = "Station Title:"
    Range("A3").Value = "Editor:"
    Range("A4").Value = "Master:"
    Cells(1, Nr23).Value = "Project-No.:"
    Cells(2, Nr23).Value = "Station-No.:"
    Cells(3, Nr23).Value = "Date:"
    Cells(4, Nr23).Value = "Target-Cycle-Time:"
    Cells(5, Nr23).Value = "Cycle-Time:"
    Cells(2, Nr10).Value = "Code"
    Cells(2, Nr11).Value = "Distance Range"
    Cells(2, Nr12).Value = "Count"
    Cells(6, Nr8).Value = "Waiting"
    Cells(6, Nr9).Value = "Time"
    Cells(6, Nr2).Value = "End"
    Cells(5, 5).Value = ""
    Cells(5, 5).Value = "Cycle Time "
GoTo ende
End If

'deutsch und enlisch einblenden
If Range("Benennung").EntireColumn.Hidden = True And Range("Benennung_E").EntireColumn.Hidden = False Then
    Range("Benennung").EntireColumn.Hidden = False
    Range("Aktion").EntireColumn.Hidden = False
    Range("Bemerkung").EntireColumn.Hidden = False
    Range("Benennung_E").EntireColumn.Hidden = False
    Range("Aktion_E").EntireColumn.Hidden = False
    Range("Bemerkung_E").EntireColumn.Hidden = False

    Range("A1").Value = "Projektbez.:"
    Range("A2").Value = "Stationsbez.:"
    Range("A3").Value = "Bearbeiter:"
    Range("A4").Value = "Meistermessung:"
    Cells(1, Nr23).Value = "Projekt-Nr.:"
    Cells(2, Nr23).Value = "Station-Nr.:"
    Cells(3, Nr23).Value = "Datum:"
    Cells(4, Nr23).Value = "Soll-Taktzeit:"
    Cells(5, Nr23).Value = "Ist-Taktzeit:"
    Cells(2, Nr10).Value = "Kode"
    Cells(2, Nr11).Value = "Entf. Bereich"
    Cells(2, Nr12).Value = "Anzahl"
    Cells(6, Nr8).Value = "Warten"
    Cells(6, Nr9).Value = "Zeit"
    Cells(6, Nr2).Value = "Ende"
    Cells(5, 5).Value = "Taktzeitanalyse"
    Cells(5, 6).Value = ""
GoTo ende
End If

'deutsch einblenden
If Range("Benennung").EntireColumn.Hidden = True And Range("Benennung_E").EntireColumn.Hidden = True Then
    Range("Benennung").EntireColumn.Hidden = False
    Range("Aktion").EntireColumn.Hidden = False
    Range("Bemerkung").EntireColumn.Hidden = False
    Range("Benennung_E").EntireColumn.Hidden = True
    Range("Aktion_E").EntireColumn.Hidden = True
    Range("Bemerkung_E").EntireColumn.Hidden = True

    Range("A1").Value = "Projektbez.:"
    Range("A2").Value = "Stationsbez.:"
    Range("A3").Value = "Bearbeiter:"
    Range("A4").Value = "Meistermessung:"
    Cells(1, Nr23).Value = "Projekt-Nr.:"
    Cells(2, Nr23).Value = "Station-Nr.:"
    Cells(3, Nr23).Value = "Datum:"
    Cells(4, Nr23).Value = "Soll-Taktzeit:"
    Cells(5, Nr23).Value = "Ist-Taktzeit:"
    Cells(2, Nr10).Value = "Kode"
    Cells(2, Nr11).Value = "Entf. Bereich"
    Cells(2, Nr12).Value = "Anzahl"
    Cells(6, Nr8).Value = "Warten"
    Cells(6, Nr9).Value = "Zeit"
    Cells(6, Nr2).Value = "Ende"
    Cells(5, 5).Value = "Taktzeitanalyse"
    Cells(5, 6).Value = ""
GoTo ende
End If

ende:
ActiveSheet.Protect DrawingObjects:=False, Contents:=True, Scenarios:=True, AllowFormattingCells:=True
With Application
    .ScreenUpdating = True
    .Calculation = xlCalculationAutomatic
    .EnableEvents = True
End With

End Sub

Sub Uebersetzen(control As IRibbonControl)

ThisWorkbook.Sheets(1).PageSetup.PrintArea = ""

With Application
    .ScreenUpdating = False
    .Calculation = xlCalculationManual
    .EnableEvents = False
End With
ActiveSheet.DisplayPageBreaks = False

ActiveSheet.Unprotect

Dim a           As Variant
Dim letzte      As Long
Dim i           As Long
Dim wksQ        As Worksheet
Dim wksZ        As Worksheet
Dim zelle       As Range
Dim Nr          As Long
Dim Zeile       As Long
Dim Sp1, Sp2, Sp3, Sp4, Sp5, Sp6, Sp7, Sp8, Sp9, Sp10, Sp11, Sp12, Sp13, Sp14, Sp15, Sp16, Sp17, Sp18, Sp19, Sp20 As Long
Dim Adr1, Adr2, Adr3, Adr4, Adr5, Adr6, Adr7, Adr8, Adr9, Adr10, Adr11, Adr12, Adr13, Adr14, Adr15, Adr16, Adr17, Adr18, Adr19, Adr20 As String
Dim Zw1, Zw2, Zw3, Zw4, Zw5, Zw6, Zw7, Zw8, Zw9, Zw10, Zw11, Zw12, Zw13, Zw14, Zw15, Zw16, Zw17, Zw18, Zw19, Zw20 As Long
Dim Nr1, Nr2, Nr3, Nr4, Nr5, Nr6, Nr7, Nr8, Nr9, Nr10, Nr11, Nr12, Nr13, Nr14, Nr15, Nr16, Nr17, Nr18, Nr19, Nr20 As String

'XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX

'Erfasste Spaltennummer Benennung
        Sp17 = ActiveSheet.Range("Benennung").Column
        Adr17 = ActiveSheet.Cells(1, Sp17).Address
        Zw17 = InStr(2, Adr17, "$") - 1
        Nr17 = WorksheetFunction.Substitute(Left(Adr17, Len(Adr17) - (Len(Adr17) - Zw17)), "$", "")
'Erfasste Spaltennummer Benennung_E
        Sp18 = ActiveSheet.Range("Benennung_E").Column
        Adr18 = ActiveSheet.Cells(1, Sp18).Address
        Zw18 = InStr(2, Adr18, "$") - 1
        Nr18 = WorksheetFunction.Substitute(Left(Adr18, Len(Adr18) - (Len(Adr18) - Zw18)), "$", "")
'Erfasste Spaltennummer Aktion
        Sp19 = ActiveSheet.Range("Aktion").Column
        Adr19 = ActiveSheet.Cells(1, Sp19).Address
        Zw19 = InStr(2, Adr19, "$") - 1
        Nr19 = WorksheetFunction.Substitute(Left(Adr19, Len(Adr19) - (Len(Adr19) - Zw19)), "$", "")
'Erfasste Spaltennummer Aktion_E
        Sp20 = ActiveSheet.Range("Aktion_E").Column
        Adr20 = ActiveSheet.Cells(1, Sp20).Address
        Zw20 = InStr(2, Adr20, "$") - 1
        Nr20 = WorksheetFunction.Substitute(Left(Adr20, Len(Adr20) - (Len(Adr20) - Zw20)), "$", "")
'XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
   


Set wksQ = Worksheets("Uebersetzung")
Set wksZ = Worksheets("Ablauf-Taktzeit")
 letzte = wksZ.Cells(wksZ.Rows.Count, 2).End(xlUp).Row
    For i = 1 To letzte
      a = Application.Match(wksZ.Cells(i, Nr17), wksQ.Columns(2), 0)
        If IsNumeric(a) Then
          wksZ.Cells(i, Nr18).Value = wksQ.Cells(a, 3).Value
        End If
    Next
    
     For i = 1 To letzte
      a = Application.Match(wksZ.Cells(i, Nr19), wksQ.Columns(2), 0)
        If IsNumeric(a) Then
          wksZ.Cells(i, Nr20).Value = wksQ.Cells(a, 3).Value
        End If
    Next
    
Set wksQ = Nothing
Set wksZ = Nothing

Range("Benennung_E").EntireColumn.Hidden = False
Range("Aktion_E").EntireColumn.Hidden = False

ActiveSheet.Protect DrawingObjects:=False, Contents:=True, Scenarios:=True, AllowFormattingCells:=True
With Application
    .ScreenUpdating = True
    .Calculation = xlCalculationAutomatic
    .EnableEvents = True
End With
Range("D9").Activate
End Sub


Attribute VB_Name = "Ribbon_Taktung"
Sub Taktung_1(control As IRibbonControl)

ThisWorkbook.Sheets(1).PageSetup.PrintArea = ""

With Application
    .ScreenUpdating = False
    .Calculation = xlCalculationManual
    .EnableEvents = False
    .DisplayAlerts = False
End With
ActiveSheet.DisplayPageBreaks = False

ActiveSheet.Unprotect

Range("Taktung") = 1
  
  Range("Grafik").ColumnWidth = 2.5
  
  
    Range("Zeitschiene_1").Select
    Selection.Copy
    Range("Einfuegepunkt_Taktung").Select
    ActiveSheet.Paste
    Range("D9").Select

ActiveSheet.Protect DrawingObjects:=False, Contents:=True, Scenarios:=True, AllowFormattingCells:=True
With Application
    .ScreenUpdating = True
    .Calculation = xlCalculationAutomatic
    .EnableEvents = True
    .DisplayAlerts = True
End With

End Sub

Sub Taktung_05(control As IRibbonControl)

ThisWorkbook.Sheets(1).PageSetup.PrintArea = ""

With Application
    .ScreenUpdating = False
    .Calculation = xlCalculationManual
    .EnableEvents = False
    .DisplayAlerts = False
End With
ActiveSheet.DisplayPageBreaks = False

ActiveSheet.Unprotect

Range("Taktung") = 0.5
  
  Range("Grafik").ColumnWidth = 1
  
    Range("Zeitschiene_05").Select
    Selection.Copy
    Range("Einfuegepunkt_Taktung").Select
    ActiveSheet.Paste
    Range("D9").Select
    
ActiveSheet.Protect DrawingObjects:=False, Contents:=True, Scenarios:=True, AllowFormattingCells:=True
With Application
    .ScreenUpdating = True
    .Calculation = xlCalculationAutomatic
    .EnableEvents = True
    .DisplayAlerts = Tru
End With

End Sub

Sub Taktung_01(control As IRibbonControl)

ThisWorkbook.Sheets(1).PageSetup.PrintArea = ""

With Application
    .ScreenUpdating = False
    .Calculation = xlCalculationManual
    .EnableEvents = False
    .DisplayAlerts = False
End With
ActiveSheet.DisplayPageBreaks = False

ActiveSheet.Unprotect

Range("Taktung") = 0.1
  
  Range("Grafik").ColumnWidth = 0.15
  
    Range("Zeitschiene_01").Select
    Selection.Copy
    Range("Einfuegepunkt_Taktung").Select
    ActiveSheet.Paste
    Range("D9").Select

ActiveSheet.Protect DrawingObjects:=False, Contents:=True, Scenarios:=True, AllowFormattingCells:=True
With Application
    .ScreenUpdating = True
    .Calculation = xlCalculationAutomatic
    .EnableEvents = True
    .DisplayAlerts = Tru
End With

End Sub
Attribute VB_Name = "Ribbon_Variablen"
Public ribMeinRibbon As IRibbonUI                   ' Variable Symbolleiste zur|fffd|cksetzen
Public BoRegister As Boolean                        ' Varible Register einblenden
Public BoBtnVisible As Boolean                      ' Varible f|fffd|r Zustand Gruppe/Button
Public BoBtnEnabled As Boolean                      ' Variable Zustand Schalter
'Public bolS1     As Boolean
'Public bolS2     As Boolean
'Public bolS3     As Boolean
'Public bolS4     As Boolean
'Public bolS5     As Boolean
Attribute VB_Name = "Ribbon_Verkn|fffd|pfen"
Sub Verknuepfen(control As IRibbonControl)

ThisWorkbook.Sheets(1).PageSetup.PrintArea = ""

With Application
    .ScreenUpdating = False
    .Calculation = xlCalculationManual
    .EnableEvents = False
End With
ActiveSheet.DisplayPageBreaks = False

ActiveSheet.Unprotect

Dim i               As Integer
Dim NrZeileA        As Long
Dim NrZeileE        As Long
Dim rngZelle        As Range
Dim lngNr           As Long
Dim zelle           As Range

'Erfasste Spaltennummer Verknuepfung
        Sp5 = ActiveSheet.Range("Verknuepfung").Column
        Adr5 = ActiveSheet.Cells(1, Sp5).Address
        Zw5 = InStr(2, Adr5, "$") - 1
        Nr5 = WorksheetFunction.Substitute(Left(Adr5, Len(Adr5) - (Len(Adr5) - Zw5)), "$", "")
        
If Selection.Row > 9 Then

NrZeileA = Selection.Row
NrZeileE = Selection.Rows.Count + Selection.Row - 1

    For Each zelle In Range(Cells(NrZeileA, Nr5), Cells(NrZeileE, Nr5))
         zelle.FormulaR1C1 = "=(R[" & -1 & "]C[-2])"
    Next zelle

End If

ActiveCell.Offset(0, 1).Select

ActiveSheet.Protect DrawingObjects:=False, Contents:=True, Scenarios:=True, AllowFormattingCells:=True
With Application
    .ScreenUpdating = True
    .Calculation = xlCalculationAutomatic
    .EnableEvents = True
End With

End Sub

Attribute VB_Name = "Ribbon_Verkn|fffd|pfen_Warten"

Sub Verknuepfung_Warten(control As IRibbonControl)

ThisWorkbook.Sheets(1).PageSetup.PrintArea = ""

With Application
    .ScreenUpdating = False
    .Calculation = xlCalculationManual
    .EnableEvents = False
End With
ActiveSheet.DisplayPageBreaks = False

ActiveSheet.Unprotect

Dim rng2        As Range
Dim a           As Variant
Dim s           As Variant
Dim rngZelle    As Range
Dim lngNr       As Long
Dim pos        As Long
Dim c          As Range
Dim Nr          As Long
Dim rng         As Range
Dim NrZeileA    As Long
Dim NrZeileE    As Long
Dim NrZeileW    As Long
Dim WartenE    As Long
Dim WartenA    As Long
Dim zelle       As Range
Dim Arbeitsbereich    As Long
Dim Sp1, Sp2, Sp3, Sp4, Sp5, Sp6, Sp7, Sp8, Sp9, Sp10, Sp11, Sp12, Sp13, Sp14, Sp15, Sp16, Sp17, Sp18, Sp19, Sp20, Sp21, Sp22, Sp23, Sp24, Sp25, Sp26, Sp27, Sp28, Sp29 As Long
Dim Adr1, Adr2, Adr3, Adr4, Adr5, Adr6, Adr7, Adr8, Adr9, Adr10, Adr11, Adr12, Adr13, Adr14, Adr15, Adr16, Adr17, Adr18, Adr19, Adr20, Adr21, Adr22, Adr23, Adr24, Adr25, Adr26, Adr27, Adr28, Adr29 As String
Dim Zw1, Zw2, Zw3, Zw4, Zw5, Zw6, Zw7, Zw8, Zw9, Zw10, Zw11, Zw12, Zw13, Zw14, Zw15, Zw16, Zw17, Zw18, Zw19, Zw20, Zw21, Zw22, Zw23, Zw24, Zw25, Zw26, Zw27, Zw28, Zw29 As Long
Dim Nr1, Nr2, Nr3, Nr4, Nr5, Nr6, Nr7, Nr8, Nr9, Nr10, Nr11, Nr12, Nr13, Nr14, Nr15, Nr16, Nr17, Nr18, Nr19, Nr20, Nr21, Nr22, Nr23, Nr24, Nr25, Nr26, Nr27, Nr28, Nr29 As String

a = Selection.Row
s = Selection.Column
Arbeitsbereich = Range("Arbeitsbereich").Rows.Count + 8

If Selection.Row > 8 And Selection.Row < Arbeitsbereich Then

'XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
'Erfasste Spaltennummer Start
        Sp1 = ActiveSheet.Range("Start").Column
        Adr1 = ActiveSheet.Cells(1, Sp1).Address
        Zw1 = InStr(2, Adr1, "$") - 1
        Nr1 = WorksheetFunction.Substitute(Left(Adr1, Len(Adr1) - (Len(Adr1) - Zw1)), "$", "")
'Erfasste Spaltennummer Ende
        Sp2 = ActiveSheet.Range("Ende").Column
        Adr2 = ActiveSheet.Cells(1, Sp2).Address
        Zw2 = InStr(2, Adr2, "$") - 1
        Nr2 = WorksheetFunction.Substitute(Left(Adr2, Len(Adr2) - (Len(Adr2) - Zw2)), "$", "")

'Erfasste Spaltennummer Verknuepfung
        Sp5 = ActiveSheet.Range("Verknuepfung").Column
        Adr5 = ActiveSheet.Cells(1, Sp5).Address
        Zw5 = InStr(2, Adr5, "$") - 1
        Nr5 = WorksheetFunction.Substitute(Left(Adr5, Len(Adr5) - (Len(Adr5) - Zw5)), "$", "")

'Erfasste Spaltennummer Modus
        Sp6 = ActiveSheet.Range("Modus").Column
        Adr6 = ActiveSheet.Cells(1, Sp6).Address
        Zw6 = InStr(2, Adr6, "$") - 1
        Nr6 = WorksheetFunction.Substitute(Left(Adr6, Len(Adr6) - (Len(Adr6) - Zw6)), "$", "")

'Erfasste Spaltennummer Warten
        Sp8 = ActiveSheet.Range("Warten").Column
        Adr8 = ActiveSheet.Cells(1, Sp8).Address
        Zw8 = InStr(2, Adr8, "$") - 1
        Nr8 = WorksheetFunction.Substitute(Left(Adr8, Len(Adr8) - (Len(Adr8) - Zw8)), "$", "")
        
'Erfasste Spaltennummer Zeit
        Sp9 = ActiveSheet.Range("Zeit").Column
        Adr9 = ActiveSheet.Cells(1, Sp9).Address
        Zw9 = InStr(2, Adr9, "$") - 1
        Nr9 = WorksheetFunction.Substitute(Left(Adr9, Len(Adr9) - (Len(Adr9) - Zw9)), "$", "")

'Erfasste Spaltennummer Aktion
        Sp19 = ActiveSheet.Range("Aktion").Column
        Adr19 = ActiveSheet.Cells(1, Sp19).Address
        Zw19 = InStr(2, Adr19, "$") - 1
        Nr19 = WorksheetFunction.Substitute(Left(Adr19, Len(Adr19) - (Len(Adr19) - Zw19)), "$", "")

'Erfasste Spaltennummer Hilfsspalte_2
        Sp25 = ActiveSheet.Range("Hilfsspalte_2").Column
        Adr25 = ActiveSheet.Cells(1, Sp25).Address
        Zw25 = InStr(2, Adr25, "$") - 1
        Nr25 = WorksheetFunction.Substitute(Left(Adr25, Len(Adr25) - (Len(Adr25) - Zw25)), "$", "")
        
'Erfasste Spaltennummer Endeneu
        Sp28 = ActiveSheet.Range("Endeneu").Column
        Adr28 = ActiveSheet.Cells(1, Sp28).Address
        Zw28 = InStr(2, Adr28, "$") - 1
        Nr28 = WorksheetFunction.Substitute(Left(Adr28, Len(Adr28) - (Len(Adr28) - Zw28)), "$", "")

'Erfasste Spaltennummer Startneu
        Sp29 = ActiveSheet.Range("Startneu").Column
        Adr29 = ActiveSheet.Cells(1, Sp29).Address
        Zw29 = InStr(2, Adr29, "$") - 1
        Nr29 = WorksheetFunction.Substitute(Left(Adr29, Len(Adr29) - (Len(Adr29) - Zw29)), "$", "")
       
'XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX

Range("Arbeitsbereich").Select
    NrZeileA = Selection.Row
    NrZeileE = Selection.Rows.Count + Selection.Row - 1
    
    Cells(a, s).EntireRow.Select

    Application.ScreenUpdating = True
    On Error GoTo fehler
    Set rng2 = Application.InputBox(prompt:="Arbeitsschritt anklicken, auf den gewartet werden muss" & Chr(13) & "Die markierte Zeile wird |fffd|berschrieben", Type:=8)
    Application.ScreenUpdating = False
    rng2.EntireRow.Select
    NrZeileW = Selection.Row

'XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
'Zeile Verkn|fffd|pfen
        
        If a = NrZeileW + 1 Then
        ActiveSheet.Cells(a, Nr5).FormulaR1C1 = "=(R[" & -2 & "]C[-2])"
        Else
        ActiveSheet.Cells(a, Nr5).FormulaR1C1 = "=(R[" & -1 & "]C[-2])"
        End If
        
        ActiveSheet.Cells(a + 1, Nr5).FormulaR1C1 = "=(R[" & -1 & "]C[-2])"
        
'XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
'Formeln ausf|fffd|llen (Warten)

    Nr = a
    
    If a > NrZeileW Then
    ActiveSheet.Cells(Nr, Nr8).FormulaLocal = "= " & Nr28 & "" & NrZeileW & "-" & Nr29 & "" & Nr & ""
    End If
    
    If a < NrZeileW Then
    ActiveSheet.Cells(Nr, Nr8).FormulaLocal = "= WENN(oder(und(" & Nr25 & "" & NrZeileW & "=0;" & Nr6 & "" & NrZeileW & "=""AiV"");" & Nr28 & "" & NrZeileW & " - " & Nr29 & "" & Nr & "<0);0;" & Nr28 & "" & NrZeileW & " - " & Nr29 & "" & Nr & ")"
    End If

'XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
'Wartezeit in die Spalte ZEIT |fffd|bertragen

    Calculate
    
    Nr = a
    
    ActiveSheet.Cells(Nr, Nr8).Copy
    ActiveSheet.Cells(Nr, Nr9).PasteSpecial Paste:=xlPasteValues, Operation:=xlNone, SkipBlanks _
            :=False, Transpose:=False

'XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
'Modus und Warten eintragen

    Nr = a
    
    ActiveSheet.Cells(Nr, Nr19).Value = "Warten"
    
    ActiveSheet.Cells(Nr, Nr6).Value = "W"

'XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
'Pfeil

'Bestehenden Pfeil l|fffd|schen
    On Error Resume Next
    For Each shp In ActiveSheet.Shapes
    If shp.Name = "Warten" & a Then shp.Delete
    Next
'Neuen Pfeil einf|fffd|gen
    If Range("Taktung") = 0.1 Then
    WartenE = Cells(NrZeileW, Nr28).Value * 10 + 30
    End If
    If Range("Taktung") = 0.5 Then
    WartenE = Cells(NrZeileW, Nr28).Value * 2 + 30
    End If
    If Range("Taktung") = 1 Then
    WartenE = Cells(NrZeileW, Nr28).Value + 30
    End If

If Nr > NrZeileW Then

        Ax = Cells(NrZeileW, Nr28).Left '+ Cells(NrZeileW, Nr28).Width ' / 2
        Ay = Cells(NrZeileW, Nr28).Top + Cells(NrZeileW, Nr28).Height / 2
        Bx = Cells(Nr, Nr28).Left '+ Cells(Nr, Nr28).Width ' / 2
        By = Cells(Nr, Nr28).Top + Cells(Nr, Nr28).Height / 2
        ActiveSheet.Shapes.AddLine(Ax, Ay, Bx, By).Select
        Selection.ShapeRange.Line.BeginArrowheadStyle = msoArrowheadDiamond
        Selection.ShapeRange.Line.BeginArrowheadLength = msoArrowheadLengthMedium
        Selection.ShapeRange.Line.BeginArrowheadWidth = msoArrowheadWidthMedium
        Selection.ShapeRange.Line.EndArrowheadStyle = msoArrowheadDiamond
        Selection.ShapeRange.Line.EndArrowheadLength = msoArrowheadLengthMedium
        Selection.ShapeRange.Line.EndArrowheadWidth = msoArrowheadWidthMedium
        Selection.ShapeRange.Line.ForeColor.SchemeColor = 2
        Selection.Name = "Warten" & a
        Selection.ShapeRange.Line.Weight = 1.5
        
End If

If Nr < NrZeileW Then
         
        Ax = Cells(NrZeileW, Nr28).Left '+ Cells(NrZeileW, Nr28).Width / 1.05
        Ay = Cells(NrZeileW, Nr28).Top + Cells(NrZeileW, Nr28).Height / 2
        Bx = Cells(Nr, Nr28).Left '+ Cells(Nr, Nr28).Width / 1.05
        By = Cells(Nr, Nr28).Top + Cells(Nr, Nr28).Height / 2
        ActiveSheet.Shapes.AddLine(Ax, Ay, Bx, By).Select
        Selection.ShapeRange.Line.BeginArrowheadStyle = msoArrowheadDiamond
        Selection.ShapeRange.Line.BeginArrowheadLength = msoArrowheadLengthMedium
        Selection.ShapeRange.Line.BeginArrowheadWidth = msoArrowheadWidthMedium
        Selection.ShapeRange.Line.EndArrowheadStyle = msoArrowheadDiamond
        Selection.ShapeRange.Line.EndArrowheadLength = msoArrowheadLengthMedium
        Selection.ShapeRange.Line.EndArrowheadWidth = msoArrowheadWidthMedium
        Selection.ShapeRange.Line.ForeColor.SchemeColor = 2
        Selection.Name = "Warten" & a
        Selection.ShapeRange.Line.Weight = 1.5
        
End If

'XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
End If

fehler:

Cells(a, s).Select

ActiveSheet.Protect DrawingObjects:=False, Contents:=True, Scenarios:=True, AllowFormattingCells:=True
With Application
    .ScreenUpdating = True
    .Calculation = xlCalculationAutomatic
    .EnableEvents = True
End With


End Sub

Attribute VB_Name = "Ribbon_Verkn|fffd|pfung_aendern"
Sub Verknuepfung_aendern(control As IRibbonControl)

ThisWorkbook.Sheets(1).PageSetup.PrintArea = ""

With Application
    .ScreenUpdating = False
    .Calculation = xlCalculationManual
    .EnableEvents = False
End With
ActiveSheet.DisplayPageBreaks = False

ActiveSheet.Unprotect

Dim i           As Integer
Dim rng2        As Range
Dim Nr1         As Long
Dim Nr2         As Long

'Erfasste Spaltennummer Verknuepfung
    Sp5 = ActiveSheet.Range("Verknuepfung").Column
    Adr5 = ActiveSheet.Cells(1, Sp5).Address
    Zw5 = InStr(2, Adr5, "$") - 1
    Nr5 = WorksheetFunction.Substitute(Left(Adr5, Len(Adr5) - (Len(Adr5) - Zw5)), "$", "")
        
If Selection.Row > 8 Then

ActiveCell.EntireRow.Select
Nr1 = ActiveCell.Row

Application.ScreenUpdating = True
abfrage:
    On Error GoTo fehler
    Set rng2 = Application.InputBox(prompt:="Neuen Vorg|fffd|nger anklicken", Type:=8)

Application.ScreenUpdating = False

Nr2 = rng2.Row

 If Nr2 < 9 Then
MsgBox "gew|fffd|hlter Vorg|fffd|nger befindet sich nicht im g|fffd|ltigen Bereich", 16, "Warnung"
GoTo abfrage
End If

ActiveCell.Range("A1").Select
i = Nr1 - Nr2

Cells(Nr1, Nr5).FormulaR1C1 = "=(R[" & -i & "]C[-2])"

fehler:
End If

ActiveCell.Offset(0, 1).Select

ActiveSheet.Protect DrawingObjects:=False, Contents:=True, Scenarios:=True, AllowFormattingCells:=True
With Application
    .ScreenUpdating = True
    .Calculation = xlCalculationAutomatic
    .EnableEvents = True
End With

End Sub

Attribute VB_Name = "Ribbon_Verkn|fffd|pfung_loeschen"
Sub Verknuepfung_loeschen(control As IRibbonControl)

ThisWorkbook.Sheets(1).PageSetup.PrintArea = ""

With Application
    .ScreenUpdating = False
    .Calculation = xlCalculationManual
    .EnableEvents = False
End With
ActiveSheet.DisplayPageBreaks = False

ActiveSheet.Unprotect

Dim NrZeileA        As Long
Dim NrZeileE        As Long

'Erfasste Spaltennummer Verknuepfung
        Sp5 = ActiveSheet.Range("Verknuepfung").Column
        Adr5 = ActiveSheet.Cells(1, Sp5).Address
        Zw5 = InStr(2, Adr5, "$") - 1
        Nr5 = WorksheetFunction.Substitute(Left(Adr5, Len(Adr5) - (Len(Adr5) - Zw5)), "$", "")
        
If Selection.Row > 8 Then

NrZeileA = Selection.Row
NrZeileE = Selection.Rows.Count + Selection.Row - 1

ActiveSheet.Range(Cells(NrZeileA, Nr5), Cells(NrZeileE, Nr5)).Select

Application.ScreenUpdating = True

'If MsgBox("Markierte Verkn|fffd|pfungen l|fffd|schen?", vbYesNo) = vbYes Then

Application.ScreenUpdating = False

Selection.Value = ""
'End If

End If
   
ActiveSheet.Protect DrawingObjects:=False, Contents:=True, Scenarios:=True, AllowFormattingCells:=True

With Application
    .ScreenUpdating = True
    .Calculation = xlCalculationAutomatic
    .EnableEvents = True
End With

End Sub
Attribute VB_Name = "Ribbon_Verkn|fffd|pfung_zeigen"
Sub Verknuepfung_zeigen(control As IRibbonControl)

ThisWorkbook.Sheets(1).PageSetup.PrintArea = ""

With Application
    .ScreenUpdating = False
    .Calculation = xlCalculationManual
    .EnableEvents = False
End With

ActiveSheet.Unprotect

'Dim n           As String
Dim a           As String
Dim v           As String
Dim x           As String

'n = ActiveCell.EntireRow.Cells(1).Value
a = ActiveCell.EntireRow.Cells(1).Value + 8
v = ActiveCell.EntireRow.Cells(3).Value + 8

Union(Range(Cells(a, 1), Cells(a, 10000)), Range(Cells(v, 1), Cells(v, 10000))).Select

ActiveSheet.Protect DrawingObjects:=False, Contents:=True, Scenarios:=True, AllowFormattingCells:=True
    
With Application
    .ScreenUpdating = True
    .Calculation = xlCalculationAutomatic
    .EnableEvents = True
End With
End Sub

Attribute VB_Name = "Ribbon_Zeile_einf|fffd|gen"
Sub ASeinfuegen(control As IRibbonControl)

With Application
    .ScreenUpdating = False
    .Calculation = xlCalculationManual
    .EnableEvents = False
End With
ActiveSheet.DisplayPageBreaks = False

ActiveSheet.Unprotect

Dim a           As Long
Dim s           As Variant
Dim b           As String
Dim c           As String
Dim d           As Long
Dim e           As Long
Dim rngZelle    As Range
Dim lngNr       As Long
Dim rng         As Range
Dim NrZeileA    As Long
Dim NrZeileE    As Long
Dim Arbeitsbereich  As Long
Dim zelle       As Range
Dim Nr          As Long
Dim Zeile       As Long
Dim Gruppe      As Long
Dim BereichA    As Long
Dim BereichE    As Long
Dim H|fffd|he        As Single
Dim Sp1, Sp2, Sp3, Sp4, Sp5, Sp6, Sp7, Sp8, Sp9, Sp10, Sp11, Sp12, Sp13, Sp14, Sp15, Sp16, Sp17, Sp18, Sp19, Sp20, Sp21, Sp22, Sp23, Sp24, Sp25, Sp26, Sp27, Sp28, Sp29 As Long
Dim Adr1, Adr2, Adr3, Adr4, Adr5, Adr6, Adr7, Adr8, Adr9, Adr10, Adr11, Adr12, Adr13, Adr14, Adr15, Adr16, Adr17, Adr18, Adr19, Adr20, Adr21, Adr22, Adr23, Adr24, Adr25, Adr26, Adr27, Adr28, Adr29 As String
Dim Zw1, Zw2, Zw3, Zw4, Zw5, Zw6, Zw7, Zw8, Zw9, Zw10, Zw11, Zw12, Zw13, Zw14, Zw15, Zw16, Zw17, Zw18, Zw19, Zw20, Zw21, Zw22, Zw23, Zw24, Zw25, Zw26, Zw27, Zw28, Zw29 As Long
Dim Nr1, Nr2, Nr3, Nr4, Nr5, Nr6, Nr7, Nr8, Nr9, Nr10, Nr11, Nr12, Nr13, Nr14, Nr15, Nr16, Nr17, Nr18, Nr19, Nr20, Nr21, Nr22, Nr23, Nr24, Nr25, Nr26, Nr27, Nr28, Nr29 As String
Dim i           As Integer
       
H|fffd|he = ActiveCell.RowHeight

'XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
'Erfasste Spaltennummer Start
        Sp1 = ActiveSheet.Range("Start").Column
        Adr1 = ActiveSheet.Cells(1, Sp1).Address
        Zw1 = InStr(2, Adr1, "$") - 1
        Nr1 = WorksheetFunction.Substitute(Left(Adr1, Len(Adr1) - (Len(Adr1) - Zw1)), "$", "")
'Erfasste Spaltennummer Ende
        Sp2 = ActiveSheet.Range("Ende").Column
        Adr2 = ActiveSheet.Cells(1, Sp2).Address
        Zw2 = InStr(2, Adr2, "$") - 1
        Nr2 = WorksheetFunction.Substitute(Left(Adr2, Len(Adr2) - (Len(Adr2) - Zw2)), "$", "")
'Erfasste Spaltennummer ZWS_Min
        Sp3 = ActiveSheet.Range("ZWS_Min").Column
        Adr3 = ActiveSheet.Cells(1, Sp3).Address
        Zw3 = InStr(2, Adr3, "$") - 1
        Nr3 = WorksheetFunction.Substitute(Left(Adr3, Len(Adr3) - (Len(Adr3) - Zw3)), "$", "")
'Erfasste Spaltennummer ZWS_Max
        Sp4 = ActiveSheet.Range("ZWS_Max").Column
        Adr4 = ActiveSheet.Cells(1, Sp4).Address
        Zw4 = InStr(2, Adr4, "$") - 1
        Nr4 = WorksheetFunction.Substitute(Left(Adr4, Len(Adr4) - (Len(Adr4) - Zw4)), "$", "")
'Erfasste Spaltennummer Verknuepfung
        Sp5 = ActiveSheet.Range("Verknuepfung").Column
        Adr5 = ActiveSheet.Cells(1, Sp5).Address
        Zw5 = InStr(2, Adr5, "$") - 1
        Nr5 = WorksheetFunction.Substitute(Left(Adr5, Len(Adr5) - (Len(Adr5) - Zw5)), "$", "")
'Erfasste Spaltennummer Modus
        Sp6 = ActiveSheet.Range("Modus").Column
        Adr6 = ActiveSheet.Cells(1, Sp6).Address
        Zw6 = InStr(2, Adr6, "$") - 1
        Nr6 = WorksheetFunction.Substitute(Left(Adr6, Len(Adr6) - (Len(Adr6) - Zw6)), "$", "")
'Erfasste Spaltennummer Hilfswert
        Sp7 = ActiveSheet.Range("Hilfswert").Column
        Adr7 = ActiveSheet.Cells(1, Sp7).Address
        Zw7 = InStr(2, Adr7, "$") - 1
        Nr7 = WorksheetFunction.Substitute(Left(Adr7, Len(Adr7) - (Len(Adr7) - Zw7)), "$", "")
'Erfasste Spaltennummer Warten
        Sp8 = ActiveSheet.Range("Warten").Column
        Adr8 = ActiveSheet.Cells(1, Sp8).Address
        Zw8 = InStr(2, Adr8, "$") - 1
        Nr8 = WorksheetFunction.Substitute(Left(Adr8, Len(Adr8) - (Len(Adr8) - Zw8)), "$", "")
'Erfasste Spaltennummer Zeit
        Sp9 = ActiveSheet.Range("Zeit").Column
        Adr9 = ActiveSheet.Cells(1, Sp9).Address
        Zw9 = InStr(2, Adr9, "$") - 1
        Nr9 = WorksheetFunction.Substitute(Left(Adr9, Len(Adr9) - (Len(Adr9) - Zw9)), "$", "")
'Erfasste Spaltennummer Kode
        Sp10 = ActiveSheet.Range("Kode").Column
        Adr10 = ActiveSheet.Cells(1, Sp10).Address
        Zw10 = InStr(2, Adr10, "$") - 1
        Nr10 = WorksheetFunction.Substitute(Left(Adr10, Len(Adr10) - (Len(Adr10) - Zw10)), "$", "")
'Erfasste Spaltennummer Entf_Bereich
        Sp11 = ActiveSheet.Range("Entf_Bereich").Column
        Adr11 = ActiveSheet.Cells(1, Sp11).Address
        Zw11 = InStr(2, Adr11, "$") - 1
        Nr11 = WorksheetFunction.Substitute(Left(Adr11, Len(Adr11) - (Len(Adr11) - Zw11)), "$", "")
'Erfasste Spaltennummer Anzahl
        Sp12 = ActiveSheet.Range("Anzahl").Column
        Adr12 = ActiveSheet.Cells(1, Sp12).Address
        Zw12 = InStr(2, Adr12, "$") - 1
        Nr12 = WorksheetFunction.Substitute(Left(Adr12, Len(Adr12) - (Len(Adr12) - Zw12)), "$", "")
'Erfasste Spaltennummer TMU_Hilfswert
        Sp13 = ActiveSheet.Range("TMU_Hilfswert").Column
        Adr13 = ActiveSheet.Cells(1, Sp13).Address
        Zw13 = InStr(2, Adr13, "$") - 1
        Nr13 = WorksheetFunction.Substitute(Left(Adr13, Len(Adr13) - (Len(Adr13) - Zw13)), "$", "")
'Erfasste Spaltennummer Gruppierung
        Sp15 = ActiveSheet.Range("Gruppierung").Column
        Adr15 = ActiveSheet.Cells(1, Sp15).Address
        Zw15 = InStr(2, Adr15, "$") - 1
        Nr15 = WorksheetFunction.Substitute(Left(Adr15, Len(Adr15) - (Len(Adr15) - Zw15)), "$", "")
'Erfasste Spaltennummer Benennung
        Sp17 = ActiveSheet.Range("Benennung").Column
        Adr17 = ActiveSheet.Cells(1, Sp17).Address
        Zw17 = InStr(2, Adr17, "$") - 1
        Nr17 = WorksheetFunction.Substitute(Left(Adr17, Len(Adr17) - (Len(Adr17) - Zw17)), "$", "")
'Erfasste Spaltennummer Benennung_E
        Sp18 = ActiveSheet.Range("Benennung_E").Column
        Adr18 = ActiveSheet.Cells(1, Sp18).Address
        Zw18 = InStr(2, Adr18, "$") - 1
        Nr18 = WorksheetFunction.Substitute(Left(Adr18, Len(Adr18) - (Len(Adr18) - Zw18)), "$", "")
'Erfasste Spaltennummer Aktion
        Sp19 = ActiveSheet.Range("Aktion").Column
        Adr19 = ActiveSheet.Cells(1, Sp19).Address
        Zw19 = InStr(2, Adr19, "$") - 1
        Nr19 = WorksheetFunction.Substitute(Left(Adr19, Len(Adr19) - (Len(Adr19) - Zw19)), "$", "")
'Erfasste Spaltennummer Aktion_E
        Sp20 = ActiveSheet.Range("Aktion_E").Column
        Adr20 = ActiveSheet.Cells(1, Sp20).Address
        Zw20 = InStr(2, Adr20, "$") - 1
        Nr20 = WorksheetFunction.Substitute(Left(Adr20, Len(Adr20) - (Len(Adr20) - Zw20)), "$", "")
'Erfasste Spaltennummer Station
        Sp21 = ActiveSheet.Range("Station").Column
        Adr21 = ActiveSheet.Cells(1, Sp21).Address
        Zw21 = InStr(2, Adr21, "$") - 1
        Nr21 = WorksheetFunction.Substitute(Left(Adr21, Len(Adr21) - (Len(Adr21) - Zw21)), "$", "")
'Erfasste Spaltennummer TMU
        Sp22 = ActiveSheet.Range("TMU").Column
        Adr22 = ActiveSheet.Cells(1, Sp22).Address
        Zw22 = InStr(2, Adr22, "$") - 1
        Nr22 = WorksheetFunction.Substitute(Left(Adr22, Len(Adr22) - (Len(Adr22) - Zw22)), "$", "")
'Erfasste Spaltennummer Bemerkung
        Sp23 = ActiveSheet.Range("Bemerkung").Column
        Adr23 = ActiveSheet.Cells(1, Sp23).Address
        Zw23 = InStr(2, Adr23, "$") - 1
        Nr23 = WorksheetFunction.Substitute(Left(Adr23, Len(Adr23) - (Len(Adr23) - Zw23)), "$", "")
'Erfasste Spaltennummer Hilfsspalte_1
        Sp24 = ActiveSheet.Range("Hilfsspalte_1").Column
        Adr24 = ActiveSheet.Cells(1, Sp24).Address
        Zw24 = InStr(2, Adr24, "$") - 1
        Nr24 = WorksheetFunction.Substitute(Left(Adr24, Len(Adr24) - (Len(Adr24) - Zw24)), "$", "")
'Erfasste Spaltennummer Hilfsspalte_2
        Sp25 = ActiveSheet.Range("Hilfsspalte_2").Column
        Adr25 = ActiveSheet.Cells(1, Sp25).Address
        Zw25 = InStr(2, Adr25, "$") - 1
        Nr25 = WorksheetFunction.Substitute(Left(Adr25, Len(Adr25) - (Len(Adr25) - Zw25)), "$", "")
'Erfasste Spaltennummer Bemerkung_E
        Sp26 = ActiveSheet.Range("Bemerkung_E").Column
        Adr26 = ActiveSheet.Cells(1, Sp26).Address
        Zw26 = InStr(2, Adr26, "$") - 1
        Nr26 = WorksheetFunction.Substitute(Left(Adr26, Len(Adr26) - (Len(Adr26) - Zw26)), "$", "")
'Erfasste Spaltennummer Nr
        Sp27 = ActiveSheet.Range("Nr").Column
        Adr27 = ActiveSheet.Cells(1, Sp27).Address
        Zw27 = InStr(2, Adr27, "$") - 1
        Nr27 = WorksheetFunction.Substitute(Left(Adr27, Len(Adr27) - (Len(Adr27) - Zw27)), "$", "")
'Erfasste Spaltennummer Endeneu
        Sp28 = ActiveSheet.Range("Endeneu").Column
        Adr28 = ActiveSheet.Cells(1, Sp28).Address
        Zw28 = InStr(2, Adr28, "$") - 1
        Nr28 = WorksheetFunction.Substitute(Left(Adr28, Len(Adr28) - (Len(Adr28) - Zw28)), "$", "")
'Erfasste Spaltennummer Startneu
        Sp29 = ActiveSheet.Range("Startneu").Column
        Adr29 = ActiveSheet.Cells(1, Sp29).Address
        Zw29 = InStr(2, Adr29, "$") - 1
        Nr29 = WorksheetFunction.Substitute(Left(Adr29, Len(Adr29) - (Len(Adr29) - Zw29)), "$", "")
        
'XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX

Arbeitsbereich = Range("Arbeitsbereich").Rows.Count + 8

If Selection.Row > 9 And Selection.Row <= Arbeitsbereich Then

a = Selection.Row
s = Selection.Column
d = Selection.Rows.Count + Selection.Row - 1
e = Selection.Rows.Count

Selection.EntireRow.Select
Selection.Insert Shift:=xlDown, CopyOrigin:=xlFormatFromLeftOrAbove

ThisWorkbook.Sheets(1).PageSetup.PrintArea = ""

Range("Arbeitsbereich").Select
    NrZeileA = Selection.Row
    NrZeileE = Selection.Rows.Count + Selection.Row - 1
    Nr = NrZeileA
    
    'Bestehenden Pfeil (Warten)umbenennen
    On Error Resume Next
    For i = NrZeileA To NrZeileE
        For Each shp In ActiveSheet.Shapes
        If shp.Name = "Warten" & i And i >= a Then shp.Name = "WWarten" & i + e
        Next
        Next i

    On Error Resume Next
    For i = NrZeileA To NrZeileE
        For Each shp In ActiveSheet.Shapes
        If shp.Name = "WWarten" & i Then shp.Name = "Warten" & i
        Next
        Next i
        
'Formeln kopieren
    Range("Formelblock_1_0").Select
    Selection.Copy
    
    Application.GoTo Reference:="Formelblock_0_0"
    ActiveSheet.Paste
    
    Application.GoTo Reference:="Formelblock_1"
    Selection.ClearContents
    
    Range("Formelblock_0_0").Select
    Selection.Copy
    
    Application.GoTo Reference:="Formelblock_1"
    ActiveSheet.Paste
    
    Application.GoTo Reference:="Formelblock_0_0"
    Selection.ClearContents
    
    Application.CutCopyMode = False
                       
    Range("A8").Value = 0
    Range("A9").Value = 1
    Range("A8:A9").Select
    Selection.AutoFill Destination:=Range("Nummernfeld")
    
    Range("Arbeitsbereich").RowHeight = H|fffd|he
    Range("Musterzeile").RowHeight = 0.1

Cells(a, s).Select
End If

fehler:

ActiveSheet.Protect DrawingObjects:=False, Contents:=True, Scenarios:=True, AllowFormattingCells:=True
With Application
    .ScreenUpdating = True
    .Calculation = xlCalculationAutomatic
    .EnableEvents = True
End With

End Sub


Attribute VB_Name = "Ribbon_Zeile_loeschen"
Sub loeschen(control As IRibbonControl)

ThisWorkbook.Sheets(1).PageSetup.PrintArea = ""

With Application
    .ScreenUpdating = False
    .Calculation = xlCalculationManual
    .EnableEvents = False
End With
ActiveSheet.DisplayPageBreaks = False

ActiveSheet.Unprotect

Dim a           As Long
Dim s           As Long
Dim e           As Long
Dim NrZeileA    As Long
Dim NrZeileE    As Long
Dim lngNr       As Long
Dim NrAs        As Long
Dim rngZelle    As Range
Dim zelle       As Range
Dim Arbeitsbereich    As Long
Dim i           As Integer

NrZeileA = Selection.Row
NrZeileE = Selection.Rows.Count + Selection.Row - 1
Arbeitsbereich = Range("Arbeitsbereich").Rows.Count + 8
    
If Selection.Row > 9 And NrZeileE <= Arbeitsbereich Then

a = Selection.Row
s = Selection.Column
e = Selection.Rows.Count

Selection.EntireRow.Select

On Error Resume Next
Application.ScreenUpdating = True
If MsgBox("Markierte Zeilen l|fffd|schen?", vbYesNo) = vbYes Then
Application.ScreenUpdating = False
Selection.EntireRow.Delete

Application.Calculation = xlCalculationAutomatic
    Application.GoTo Reference:="Verknuepfung"
    Selection.SpecialCells(xlCellTypeFormulas, 16).ClearContents
Application.Calculation = xlCalculationManual

lngNr = -1
For Each rngZelle In Range("Nummernfeld")
      If Not rngZelle.MergeCells Or rngZelle = rngZelle.MergeArea(1) Then
         lngNr = lngNr + 1
         rngZelle.Value = lngNr
      End If
Next rngZelle

'Bestehenden Pfeil (Warten)l|fffd|schen
    On Error Resume Next
    For i = NrZeileA To NrZeileE
        For Each shp In ActiveSheet.Shapes
        If shp.Name = "Warten" & i Then shp.Delete
        Next
        Next i

Range("Arbeitsbereich").Select
    NrZeileA = Selection.Row
    NrZeileE = Selection.Rows.Count + Selection.Row - 1
    
'Bestehenden Pfeil (Warten)umbenennen
    On Error Resume Next
    For i = NrZeileA To NrZeileE
        For Each shp In ActiveSheet.Shapes
        If shp.Name = "Warten" & i And i >= a Then shp.Name = "WWarten" & i - e
        Next
        Next i

    On Error Resume Next
    For i = NrZeileA To NrZeileE
        For Each shp In ActiveSheet.Shapes
        If shp.Name = "WWarten" & i Then shp.Name = "Warten" & i
        Next
        Next i

'Formeln kopieren
    Range("Formelblock_1_0").Select
    Selection.Copy
    
    Application.GoTo Reference:="Formelblock_0_0"
    ActiveSheet.Paste
    
    Application.GoTo Reference:="Formelblock_1"
    Selection.ClearContents
    
    Range("Formelblock_0_0").Select
    Selection.Copy
    
    Application.GoTo Reference:="Formelblock_1"
    ActiveSheet.Paste
    
    Application.GoTo Reference:="Formelblock_0_0"
    Selection.ClearContents
    
    Application.CutCopyMode = False
    
End If

Cells(a, s).Select
End If

ActiveSheet.Protect DrawingObjects:=False, Contents:=True, Scenarios:=True, AllowFormattingCells:=True
With Application
    .ScreenUpdating = True
    .Calculation = xlCalculationAutomatic
    .EnableEvents = True
End With

End Sub


Attribute VB_Name = "Ribbon_Zeile_verschieben"
Sub Zeileverschieben(control As IRibbonControl)

ThisWorkbook.Sheets(1).PageSetup.PrintArea = ""

With Application
    .ScreenUpdating = False
    .Calculation = xlCalculationManual
    .EnableEvents = False
End With
ActiveSheet.DisplayPageBreaks = False

ActiveSheet.Unprotect

Dim a           As Variant
Dim rng2        As Range
Dim NrZeileA    As Long
Dim NrZeileE    As Long
Dim BereichA    As Long
Dim BereichE    As Long
Dim lngNr       As Long
Dim rngZelle    As Range
Dim Sp6         As Long
Dim Adr6        As String
Dim Zw6         As Long
Dim Nr6         As String
Dim zelle       As Range
Dim Arbeitsbereich    As Long

'Erfasste Spaltennummer Modus
    Sp6 = ActiveSheet.Range("Modus").Column
    Adr6 = ActiveSheet.Cells(1, Sp6).Address
    Zw6 = InStr(2, Adr6, "$") - 1
    Nr6 = WorksheetFunction.Substitute(Left(Adr6, Len(Adr6) - (Len(Adr6) - Zw6)), "$", "")

    Arbeitsbereich = Range("Arbeitsbereich").Rows.Count + 8
    NrZeileA = Selection.Row
    NrZeileE = Selection.Rows.Count + Selection.Row - 1
    BereichA = Range("Arbeitsbereich").Row + 1
    BereichE = Range("Arbeitsbereich").Rows.Count + Range("Arbeitsbereich").Row - 1

If Selection.Row > 9 And NrZeileE <= Arbeitsbereich Then

    ActiveSheet.Range("A" & NrZeileA & ":A" & NrZeileE).EntireRow.Select
    
    Application.ScreenUpdating = True
abfrage:
    On Error GoTo fehler
    Set rng2 = Application.InputBox(prompt:="Neue Position anklicken", Type:=8)
Application.ScreenUpdating = False

rng2.EntireRow.Select
a = Selection.Row


ActiveSheet.Range("A" & NrZeileA & ":A" & NrZeileE).EntireRow.Cut

rng2.EntireRow.Select
If Selection.Row >= BereichA And Selection.Row <= BereichE Then
    Selection.Insert Shift:=xlDown
Else
MsgBox "Auswahl au|fffd|erhalb vom g|fffd|ltigen Bereich" & Chr(10) & " "
GoTo abfrage
End If

lngNr = -1
For Each rngZelle In Range("Nummernfeld")
      If Not rngZelle.MergeCells Or rngZelle = rngZelle.MergeArea(1) Then
         lngNr = lngNr + 1
         rngZelle.Value = lngNr
      End If
Next rngZelle

'Formeln kopieren
    Range("Formelblock_1_0").Select
    Selection.Copy
    
    Application.GoTo Reference:="Formelblock_0_0"
    ActiveSheet.Paste
    
    Application.GoTo Reference:="Formelblock_1"
    Selection.ClearContents
    
    Range("Formelblock_0_0").Select
    Selection.Copy
    
    Application.GoTo Reference:="Formelblock_1"
    ActiveSheet.Paste
    
    Application.GoTo Reference:="Formelblock_0_0"
    Selection.ClearContents
    
    Application.CutCopyMode = False
  
fehler:

End If

ActiveSheet.Protect DrawingObjects:=False, Contents:=True, Scenarios:=True, AllowFormattingCells:=True

With Application
    .ScreenUpdating = True
    .Calculation = xlCalculationAutomatic
    .EnableEvents = True
End With

End Sub

Attribute VB_Name = "Ribbon_allgemein"
Sub RibbonInitialisieren(Ribbon As IRibbonUI)
    ' Ribbon initialisieren, Symbolleiste zur|fffd|cksetzen
    Set ribMeinRibbon = Ribbon
    BoRegister = True
    BoBtnVisible = True
    BoBtnEnabled = True
End Sub

Public Sub sichtbar(control As IRibbonControl, ByRef visible)

    visible = True
    
End Sub
Attribute VB_Name = "Stammanalysen"
Attribute VB_Base = "0{F1C93C78-2AEF-44BE-9C6C-0198ED78A35D}{C364939F-11A0-4E28-BD4A-9A20F0993487}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Private Sub Image1_BeforeDragOver(ByVal Cancel As MSForms.ReturnBoolean, ByVal Data As MSForms.DataObject, ByVal x As Single, ByVal Y As Single, ByVal DragState As MSForms.fmDragState, ByVal Effect As MSForms.ReturnEffect, ByVal Shift As Integer)

End Sub
Attribute VB_Name = "Tabelle1"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Tabelle10"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Tabelle2"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Tabelle3"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Tabelle4"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Tabelle7"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Tabelle8"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True

Attribute VB_Name = "UserForm1"
Attribute VB_Base = "0{CC3A831E-EF8C-48D7-97DB-B49F89E1F341}{8DE8FFB8-9F49-44D0-AC17-3BC1CEFA527C}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False


Private Sub Hilfe_einblenden_Click()
Hilfe.Show
End Sub

Private Sub Image1_BeforeDragOver(ByVal Cancel As MSForms.ReturnBoolean, ByVal Data As MSForms.DataObject, ByVal x As Single, ByVal Y As Single, ByVal DragState As MSForms.fmDragState, ByVal Effect As MSForms.ReturnEffect, ByVal Shift As Integer)

End Sub




Private Sub Inhalt_kopieren_Click()
With Application
    .ScreenUpdating = False
    .Calculation = xlCalculationManual
    .EnableEvents = False
End With
ActiveSheet.Unprotect

Dim NrZA        As Long
Dim Sp1, Sp2, Sp3, Sp4, Sp5, Sp6, Sp7, Sp8, Sp9, Sp10, Sp11, Sp12, Sp13, Sp14, Sp15, Sp16, Sp17, Sp18, Sp19, Sp20, Sp21, Sp22, Sp23, Sp24, Sp25, Sp26, Sp27 As Long
Dim Adr1, Adr2, Adr3, Adr4, Adr5, Adr6, Adr7, Adr8, Adr9, Adr10, Adr11, Adr12, Adr13, Adr14, Adr15, Adr16, Adr17, Adr18, Adr19, Adr20, Adr21, Adr22, Adr23, Adr24, Adr25, Adr26, Adr27 As String
Dim Zw1, Zw2, Zw3, Zw4, Zw5, Zw6, Zw7, Zw8, Zw9, Zw10, Zw11, Zw12, Zw13, Zw14, Zw15, Zw16, Zw17, Zw18, Zw19, Zw20, Zw21, Zw22, Zw23, Zw24, Zw25, Zw26, Zw27 As Long
Dim Nr1, Nr2, Nr3, Nr4, Nr5, Nr6, Nr7, Nr8, Nr9, Nr10, Nr11, Nr12, Nr13, Nr14, Nr15, Nr16, Nr17, Nr18, Nr19, Nr20, Nr21, Nr22, Nr23, Nr24, Nr25, Nr26, Nr27 As String
'XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
'Erfasste Spaltennummer Modus
        Sp6 = ActiveSheet.Range("Modus").Column
        Adr6 = ActiveSheet.Cells(1, Sp6).Address
        Zw6 = InStr(2, Adr6, "$") - 1
        Nr6 = WorksheetFunction.Substitute(Left(Adr6, Len(Adr6) - (Len(Adr6) - Zw6)), "$", "")
'Erfasste Spaltennummer Zeit
        Sp9 = ActiveSheet.Range("Zeit").Column
        Adr9 = ActiveSheet.Cells(1, Sp9).Address
        Zw9 = InStr(2, Adr9, "$") - 1
        Nr9 = WorksheetFunction.Substitute(Left(Adr9, Len(Adr9) - (Len(Adr9) - Zw9)), "$", "")
'Erfasste Spaltennummer Kode
        Sp10 = ActiveSheet.Range("Kode").Column
        Adr10 = ActiveSheet.Cells(1, Sp10).Address
        Zw10 = InStr(2, Adr10, "$") - 1
        Nr10 = WorksheetFunction.Substitute(Left(Adr10, Len(Adr10) - (Len(Adr10) - Zw10)), "$", "")
'Erfasste Spaltennummer Entf_Bereich
        Sp11 = ActiveSheet.Range("Entf_Bereich").Column
        Adr11 = ActiveSheet.Cells(1, Sp11).Address
        Zw11 = InStr(2, Adr11, "$") - 1
        Nr11 = WorksheetFunction.Substitute(Left(Adr11, Len(Adr11) - (Len(Adr11) - Zw11)), "$", "")
'Erfasste Spaltennummer Anzahl
        Sp12 = ActiveSheet.Range("Anzahl").Column
        Adr12 = ActiveSheet.Cells(1, Sp12).Address
        Zw12 = InStr(2, Adr12, "$") - 1
        Nr12 = WorksheetFunction.Substitute(Left(Adr12, Len(Adr12) - (Len(Adr12) - Zw12)), "$", "")
'Erfasste Spaltennummer berechneteZeit
        Sp15 = ActiveSheet.Range("berechneteZeit").Column
        Adr15 = ActiveSheet.Cells(1, Sp15).Address
        Zw15 = InStr(2, Adr15, "$") - 1
        Nr15 = WorksheetFunction.Substitute(Left(Adr15, Len(Adr15) - (Len(Adr15) - Zw15)), "$", "")
'Erfasste Spaltennummer Benennung
        Sp17 = ActiveSheet.Range("Benennung").Column
        Adr17 = ActiveSheet.Cells(1, Sp17).Address
        Zw17 = InStr(2, Adr17, "$") - 1
        Nr17 = WorksheetFunction.Substitute(Left(Adr17, Len(Adr17) - (Len(Adr17) - Zw17)), "$", "")
'Erfasste Spaltennummer Benennung_E
        Sp18 = ActiveSheet.Range("Benennung_E").Column
        Adr18 = ActiveSheet.Cells(1, Sp18).Address
        Zw18 = InStr(2, Adr18, "$") - 1
        Nr18 = WorksheetFunction.Substitute(Left(Adr18, Len(Adr18) - (Len(Adr18) - Zw18)), "$", "")
'Erfasste Spaltennummer Aktion
        Sp19 = ActiveSheet.Range("Aktion").Column
        Adr19 = ActiveSheet.Cells(1, Sp19).Address
        Zw19 = InStr(2, Adr19, "$") - 1
        Nr19 = WorksheetFunction.Substitute(Left(Adr19, Len(Adr19) - (Len(Adr19) - Zw19)), "$", "")
'Erfasste Spaltennummer Aktion
        Sp20 = ActiveSheet.Range("Aktion_E").Column
        Adr20 = ActiveSheet.Cells(1, Sp20).Address
        Zw20 = InStr(2, Adr20, "$") - 1
        Nr20 = WorksheetFunction.Substitute(Left(Adr20, Len(Adr20) - (Len(Adr19) - Zw20)), "$", "")
'Erfasste Spaltennummer Station
        Sp21 = ActiveSheet.Range("Station").Column
        Adr21 = ActiveSheet.Cells(1, Sp21).Address
        Zw21 = InStr(2, Adr21, "$") - 1
        Nr21 = WorksheetFunction.Substitute(Left(Adr21, Len(Adr21) - (Len(Adr21) - Zw21)), "$", "")
'Erfasste Spaltennummer Bemerkung
        Sp23 = ActiveSheet.Range("Bemerkung").Column
        Adr23 = ActiveSheet.Cells(1, Sp23).Address
        Zw23 = InStr(2, Adr23, "$") - 1
        Nr23 = WorksheetFunction.Substitute(Left(Adr23, Len(Adr23) - (Len(Adr23) - Zw23)), "$", "")
'Erfasste Spaltennummer Bemerkung_E
        Sp26 = ActiveSheet.Range("Bemerkung_E").Column
        Adr26 = ActiveSheet.Cells(1, Sp26).Address
        Zw26 = InStr(2, Adr26, "$") - 1
        Nr26 = WorksheetFunction.Substitute(Left(Adr26, Len(Adr26) - (Len(Adr26) - Zw26)), "$", "")
'Erfasste Spaltennummer Nr
        Sp27 = ActiveSheet.Range("Nr").Column
        Adr27 = ActiveSheet.Cells(1, Sp27).Address
        Zw27 = InStr(2, Adr27, "$") - 1
        Nr27 = WorksheetFunction.Substitute(Left(Adr27, Len(Adr27) - (Len(Adr27) - Zw27)), "$", "")
'XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX

NrZA = Selection.Row

'Entfernungsbereich
If ActiveSheet.Cells(NrZA, Nr11).Value = 1 Then
AuP1 = True
End If

If ActiveSheet.Cells(NrZA, Nr11).Value = 2 Then
AuP2 = True
End If

If ActiveSheet.Cells(NrZA, Nr11).Value = 3 Then
AuP3 = True
End If

'Spalte Kode ausf|fffd|llen
If ActiveSheet.Cells(NrZA, Nr10).Value = "AA" Then
AA = True
    If ActiveSheet.Cells(NrZA, Nr19).Value = "Aufnehmen" Then
    Aufnehmen = True
    Else
    AufnehmenundPlatzieren = True
    End If
End If

If ActiveSheet.Cells(NrZA, Nr10).Value = "AB" Then
AB = True
    If ActiveSheet.Cells(NrZA, Nr19).Value = "Aufnehmen" Then
    Aufnehmen = True
    Else
    AufnehmenundPlatzieren = True
    End If
End If

If ActiveSheet.Cells(NrZA, Nr10).Value = "AC" Then
AC = True
    If ActiveSheet.Cells(NrZA, Nr19).Value = "Aufnehmen" Then
    Aufnehmen = True
    Else
    AufnehmenundPlatzieren = True
    End If
End If

If ActiveSheet.Cells(NrZA, Nr10).Value = "AD" Then
AD = True
    If ActiveSheet.Cells(NrZA, Nr19).Value = "Aufnehmen" Then
    Aufnehmen = True
    Else
    AufnehmenundPlatzieren = True
    End If
End If

If ActiveSheet.Cells(NrZA, Nr10).Value = "AE" Then
AE = True
AufnehmenundPlatzieren = True
End If

If ActiveSheet.Cells(NrZA, Nr10).Value = "AF" Then
AF = True
    If ActiveSheet.Cells(NrZA, Nr19).Value = "Aufnehmen" Then
    Aufnehmen = True
    Else
    AufnehmenundPlatzieren = True
    End If
End If

If ActiveSheet.Cells(NrZA, Nr10).Value = "AG" Then
AG = True
    If ActiveSheet.Cells(NrZA, Nr19).Value = "Aufnehmen" Then
    Aufnehmen = True
    Else
    AufnehmenundPlatzieren = True
    End If
End If

If ActiveSheet.Cells(NrZA, Nr10).Value = "AH" Then
AH = True
    If ActiveSheet.Cells(NrZA, Nr19).Value = "Aufnehmen" Then
    Aufnehmen = True
    Else
    AufnehmenundPlatzieren = True
    End If
End If

If ActiveSheet.Cells(NrZA, Nr10).Value = "AJ" Then
AJ = True
    If ActiveSheet.Cells(NrZA, Nr19).Value = "Aufnehmen" Then
    Aufnehmen = True
    Else
    AufnehmenundPlatzieren = True
    End If
End If

If ActiveSheet.Cells(NrZA, Nr10).Value = "AK" Then
AK = True
    If ActiveSheet.Cells(NrZA, Nr19).Value = "Aufnehmen" Then
    Aufnehmen = True
    Else
    AufnehmenundPlatzieren = True
    End If
End If

If ActiveSheet.Cells(NrZA, Nr10).Value = "AL" Then
AL = True
    If ActiveSheet.Cells(NrZA, Nr19).Value = "Aufnehmen" Then
    Aufnehmen = True
    Else
    AufnehmenundPlatzieren = True
    End If
End If

If ActiveSheet.Cells(NrZA, Nr10).Value = "AM" Then
AM = True
    If ActiveSheet.Cells(NrZA, Nr19).Value = "Aufnehmen" Then
    Aufnehmen = True
    Else
    AufnehmenundPlatzieren = True
    End If
End If

If ActiveSheet.Cells(NrZA, Nr10).Value = "AN" Then
AN = True
    If ActiveSheet.Cells(NrZA, Nr19).Value = "Aufnehmen" Then
    Aufnehmen = True
    Else
    AufnehmenundPlatzieren = True
    End If
End If

If ActiveSheet.Cells(NrZA, Nr10).Value = "PA" Then
PA = True
End If

If ActiveSheet.Cells(NrZA, Nr10).Value = "PB" Then
PB = True
End If

If ActiveSheet.Cells(NrZA, Nr10).Value = "PC" Then
PC = True
End If

If ActiveSheet.Cells(NrZA, Nr10).Value = "HA" Then
HA = True
End If

If ActiveSheet.Cells(NrZA, Nr10).Value = "HB" Then
HB = True
End If

If ActiveSheet.Cells(NrZA, Nr10).Value = "HC" Then
HC = True
End If

If ActiveSheet.Cells(NrZA, Nr10).Value = "BA" Then
BA = True
End If

If ActiveSheet.Cells(NrZA, Nr10).Value = "BB" Then
BB = True
End If

If ActiveSheet.Cells(NrZA, Nr10).Value = "ZA" Then
ZA = True
End If

If ActiveSheet.Cells(NrZA, Nr10).Value = "ZB" Then
ZB = True
End If

If ActiveSheet.Cells(NrZA, Nr10).Value = "ZC" Then
ZC = True
End If

If ActiveSheet.Cells(NrZA, Nr10).Value = "ZD" Then
ZD = True
End If

If ActiveSheet.Cells(NrZA, Nr10).Value = "ZD" Then
ZD1 = True
End If

If ActiveSheet.Cells(NrZA, Nr10).Value = "KA" Then
KA = True
End If

If ActiveSheet.Cells(NrZA, Nr10).Value = "KB" Then
KB = True
End If

If ActiveSheet.Cells(NrZA, Nr10).Value = "KC" Then
KC = True
End If

If ActiveSheet.Cells(NrZA, Nr10).Value = "VA" Then
VA = True
End If

If ActiveSheet.Cells(NrZA, Nr10).Value = "M-SAA" Then
MSAA = True
End If

If ActiveSheet.Cells(NrZA, Nr10).Value = "M-SBA" Then
MSBA = True
End If

If ActiveSheet.Cells(NrZA, Nr10).Value = "M-SCA" Then
MSCA = True
End If

If ActiveSheet.Cells(NrZA, Nr10).Value = "M-SDA" Then
MSDA = True
End If

If ActiveSheet.Cells(NrZA, Nr10).Value = "M-NCA" Then
MNCA = True
End If

If ActiveSheet.Cells(NrZA, Nr10).Value = "M-SHS" Then
MSHS = True
End If

If ActiveSheet.Cells(NrZA, Nr10).Value = "M-EH1" Then
MEH1 = True
End If

If ActiveSheet.Cells(NrZA, Nr10).Value = "M-EH2" Then
MEH2 = True
End If

If ActiveSheet.Cells(NrZA, Nr10).Value = "M-EH3" Then
MEH3 = True
End If

If ActiveSheet.Cells(NrZA, Nr10).Value = "M-ET3" Then
MET3 = True
End If

Stationsfeld.Value = ActiveSheet.Cells(NrZA, Nr21).Value

Werker_Nr.Value = ActiveSheet.Cells(NrZA, Nr27).Value

Bemerkung.Value = ActiveSheet.Cells(NrZA, Nr23).Value

Bemerkung_E.Value = ActiveSheet.Cells(NrZA, Nr26).Value

Anzahlfeld.Value = ActiveSheet.Cells(NrZA, Nr12).Value

ActiveSheet.Protect DrawingObjects:=False, Contents:=True, Scenarios:=True, AllowFormattingCells:=True
With Application
    .ScreenUpdating = True
    .Calculation = xlCalculationAutomatic
    .EnableEvents = True
End With

End Sub

Private Sub Stammanalysen_einblenden_Click()
Stammanalysen.Show
End Sub

Private Sub Stationsfeld_Change()

End Sub

Private Sub TextBox1_Change()

End Sub

Private Sub UserForm_Initialize()
Werker_Nr.RowSource = "Werker_Nr"
Bemerkung.RowSource = "Bemerkung_DD"
Bemerkung_E.RowSource = "Bemerkung_E_DD"
Anzahlfeld.Value = "1"
End Sub

Private Sub MTM_Zeit_berechnen_Click()
'Berechnen der MTM Zeit
With Application
    .ScreenUpdating = False
    .Calculation = xlCalculationManual
    .EnableEvents = False
End With
ActiveSheet.Unprotect

Dim NrZA        As Long
Dim Sp1, Sp2, Sp3, Sp4, Sp5, Sp6, Sp7, Sp8, Sp9, Sp10, Sp11, Sp12, Sp13, Sp14, Sp15, Sp16, Sp17, Sp18, Sp19, Sp20, Sp21, Sp22, Sp23, Sp24, Sp25, Sp26, Sp27 As Long
Dim Adr1, Adr2, Adr3, Adr4, Adr5, Adr6, Adr7, Adr8, Adr9, Adr10, Adr11, Adr12, Adr13, Adr14, Adr15, Adr16, Adr17, Adr18, Adr19, Adr20, Adr21, Adr22, Adr23, Adr24, Adr25, Adr26, Adr27 As String
Dim Zw1, Zw2, Zw3, Zw4, Zw5, Zw6, Zw7, Zw8, Zw9, Zw10, Zw11, Zw12, Zw13, Zw14, Zw15, Zw16, Zw17, Zw18, Zw19, Zw20, Zw21, Zw22, Zw23, Zw24, Zw25, Zw26, Zw27 As Long
Dim Nr1, Nr2, Nr3, Nr4, Nr5, Nr6, Nr7, Nr8, Nr9, Nr10, Nr11, Nr12, Nr13, Nr14, Nr15, Nr16, Nr17, Nr18, Nr19, Nr20, Nr21, Nr22, Nr23, Nr24, Nr25, Nr26, Nr27 As String
'XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
'Erfasste Spaltennummer Modus
        Sp6 = ActiveSheet.Range("Modus").Column
        Adr6 = ActiveSheet.Cells(1, Sp6).Address
        Zw6 = InStr(2, Adr6, "$") - 1
        Nr6 = WorksheetFunction.Substitute(Left(Adr6, Len(Adr6) - (Len(Adr6) - Zw6)), "$", "")
'Erfasste Spaltennummer Zeit
        Sp9 = ActiveSheet.Range("Zeit").Column
        Adr9 = ActiveSheet.Cells(1, Sp9).Address
        Zw9 = InStr(2, Adr9, "$") - 1
        Nr9 = WorksheetFunction.Substitute(Left(Adr9, Len(Adr9) - (Len(Adr9) - Zw9)), "$", "")
'Erfasste Spaltennummer Kode
        Sp10 = ActiveSheet.Range("Kode").Column
        Adr10 = ActiveSheet.Cells(1, Sp10).Address
        Zw10 = InStr(2, Adr10, "$") - 1
        Nr10 = WorksheetFunction.Substitute(Left(Adr10, Len(Adr10) - (Len(Adr10) - Zw10)), "$", "")
'Erfasste Spaltennummer Entf_Bereich
        Sp11 = ActiveSheet.Range("Entf_Bereich").Column
        Adr11 = ActiveSheet.Cells(1, Sp11).Address
        Zw11 = InStr(2, Adr11, "$") - 1
        Nr11 = WorksheetFunction.Substitute(Left(Adr11, Len(Adr11) - (Len(Adr11) - Zw11)), "$", "")
'Erfasste Spaltennummer Anzahl
        Sp12 = ActiveSheet.Range("Anzahl").Column
        Adr12 = ActiveSheet.Cells(1, Sp12).Address
        Zw12 = InStr(2, Adr12, "$") - 1
        Nr12 = WorksheetFunction.Substitute(Left(Adr12, Len(Adr12) - (Len(Adr12) - Zw12)), "$", "")
'Erfasste Spaltennummer berechneteZeit
        Sp15 = ActiveSheet.Range("berechneteZeit").Column
        Adr15 = ActiveSheet.Cells(1, Sp15).Address
        Zw15 = InStr(2, Adr15, "$") - 1
        Nr15 = WorksheetFunction.Substitute(Left(Adr15, Len(Adr15) - (Len(Adr15) - Zw15)), "$", "")
'Erfasste Spaltennummer Benennung
        Sp17 = ActiveSheet.Range("Benennung").Column
        Adr17 = ActiveSheet.Cells(1, Sp17).Address
        Zw17 = InStr(2, Adr17, "$") - 1
        Nr17 = WorksheetFunction.Substitute(Left(Adr17, Len(Adr17) - (Len(Adr17) - Zw17)), "$", "")
'Erfasste Spaltennummer Benennung_E
        Sp18 = ActiveSheet.Range("Benennung_E").Column
        Adr18 = ActiveSheet.Cells(1, Sp18).Address
        Zw18 = InStr(2, Adr18, "$") - 1
        Nr18 = WorksheetFunction.Substitute(Left(Adr18, Len(Adr18) - (Len(Adr18) - Zw18)), "$", "")
'Erfasste Spaltennummer Aktion
        Sp19 = ActiveSheet.Range("Aktion").Column
        Adr19 = ActiveSheet.Cells(1, Sp19).Address
        Zw19 = InStr(2, Adr19, "$") - 1
        Nr19 = WorksheetFunction.Substitute(Left(Adr19, Len(Adr19) - (Len(Adr19) - Zw19)), "$", "")
'Erfasste Spaltennummer Aktion
        Sp20 = ActiveSheet.Range("Aktion_E").Column
        Adr20 = ActiveSheet.Cells(1, Sp20).Address
        Zw20 = InStr(2, Adr20, "$") - 1
        Nr20 = WorksheetFunction.Substitute(Left(Adr20, Len(Adr20) - (Len(Adr19) - Zw20)), "$", "")
'Erfasste Spaltennummer Station
        Sp21 = ActiveSheet.Range("Station").Column
        Adr21 = ActiveSheet.Cells(1, Sp21).Address
        Zw21 = InStr(2, Adr21, "$") - 1
        Nr21 = WorksheetFunction.Substitute(Left(Adr21, Len(Adr21) - (Len(Adr21) - Zw21)), "$", "")
'Erfasste Spaltennummer Bemerkung
        Sp23 = ActiveSheet.Range("Bemerkung").Column
        Adr23 = ActiveSheet.Cells(1, Sp23).Address
        Zw23 = InStr(2, Adr23, "$") - 1
        Nr23 = WorksheetFunction.Substitute(Left(Adr23, Len(Adr23) - (Len(Adr23) - Zw23)), "$", "")
'Erfasste Spaltennummer Bemerkung_E
        Sp26 = ActiveSheet.Range("Bemerkung_E").Column
        Adr26 = ActiveSheet.Cells(1, Sp26).Address
        Zw26 = InStr(2, Adr26, "$") - 1
        Nr26 = WorksheetFunction.Substitute(Left(Adr26, Len(Adr26) - (Len(Adr26) - Zw26)), "$", "")
'Erfasste Spaltennummer Nr
        Sp27 = ActiveSheet.Range("Nr").Column
        Adr27 = ActiveSheet.Cells(1, Sp27).Address
        Zw27 = InStr(2, Adr27, "$") - 1
        Nr27 = WorksheetFunction.Substitute(Left(Adr27, Len(Adr27) - (Len(Adr27) - Zw27)), "$", "")
'XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX

NrZA = Selection.Row

If ActiveSheet.Cells(NrZA, Nr6).Value <> "" Then
If MsgBox("Inhalt der aktuellen Zeile |fffd|berschreiben?", vbYesNo) = vbYes Then
GoTo weiter
Else
GoTo ende
End If
End If

weiter:

'Entfernungsbereich
If AuP1 = True Then
ActiveSheet.Cells(NrZA, Nr11).Value = 1
End If
If AuP2 = True Then
ActiveSheet.Cells(NrZA, Nr11).Value = 2
End If
If AuP3 = True Then
ActiveSheet.Cells(NrZA, Nr11).Value = 3
End If

'Spalte Kode ausf|fffd|llen
If AA = True Then
ActiveSheet.Cells(NrZA, Nr10).Value = "AA"
ActiveSheet.Cells(NrZA, Nr6).Value = "Man"
    If Aufnehmen = True Then
    ActiveSheet.Cells(NrZA, Nr19).Value = "Aufnehmen"
    Else
    ActiveSheet.Cells(NrZA, Nr19).Value = "Aufnehmen und Platzieren"
    End If
End If
If AB = True Then
ActiveSheet.Cells(NrZA, Nr10).Value = "AB"
ActiveSheet.Cells(NrZA, Nr6).Value = "Man"
    If Aufnehmen = True Then
    ActiveSheet.Cells(NrZA, Nr19).Value = "Aufnehmen"
    Else
    ActiveSheet.Cells(NrZA, Nr19).Value = "Aufnehmen und Platzieren"
    End If
End If
If AC = True Then
ActiveSheet.Cells(NrZA, Nr10).Value = "AC"
ActiveSheet.Cells(NrZA, Nr6).Value = "Man"
    If Aufnehmen = True Then
    ActiveSheet.Cells(NrZA, Nr19).Value = "Aufnehmen"
    Else
    ActiveSheet.Cells(NrZA, Nr19).Value = "Aufnehmen und Platzieren"
    End If
End If
If AD = True Then
ActiveSheet.Cells(NrZA, Nr10).Value = "AD"
ActiveSheet.Cells(NrZA, Nr6).Value = "Man"
    If Aufnehmen = True Then
    ActiveSheet.Cells(NrZA, Nr19).Value = "Aufnehmen"
    Else
    ActiveSheet.Cells(NrZA, Nr19).Value = "Aufnehmen und Platzieren"
    End If
End If
If AE = True Then
ActiveSheet.Cells(NrZA, Nr10).Value = "AE"
ActiveSheet.Cells(NrZA, Nr6).Value = "Man"
ActiveSheet.Cells(NrZA, Nr19).Value = "Aufnehmen und Platzieren"
End If
If AF = True Then
ActiveSheet.Cells(NrZA, Nr10).Value = "AF"
ActiveSheet.Cells(NrZA, Nr6).Value = "Man"
    If Aufnehmen = True Then
    ActiveSheet.Cells(NrZA, Nr19).Value = "Aufnehmen"
    Else
    ActiveSheet.Cells(NrZA, Nr19).Value = "Aufnehmen und Platzieren"
    End If
End If
If AG = True Then
ActiveSheet.Cells(NrZA, Nr10).Value = "AG"
ActiveSheet.Cells(NrZA, Nr6).Value = "Man"
    If Aufnehmen = True Then
    ActiveSheet.Cells(NrZA, Nr19).Value = "Aufnehmen"
    Else
    ActiveSheet.Cells(NrZA, Nr19).Value = "Aufnehmen und Platzieren"
    End If
End If
If AH = True Then
ActiveSheet.Cells(NrZA, Nr10).Value = "AH"
ActiveSheet.Cells(NrZA, Nr6).Value = "Man"
    If Aufnehmen = True Then
    ActiveSheet.Cells(NrZA, Nr19).Value = "Aufnehmen"
    Else
    ActiveSheet.Cells(NrZA, Nr19).Value = "Aufnehmen und Platzieren"
    End If
End If
If AJ = True Then
ActiveSheet.Cells(NrZA, Nr10).Value = "AJ"
ActiveSheet.Cells(NrZA, Nr6).Value = "Man"
    If Aufnehmen = True Then
    ActiveSheet.Cells(NrZA, Nr19).Value = "Aufnehmen"
    Else
    ActiveSheet.Cells(NrZA, Nr19).Value = "Aufnehmen und Platzieren"
    End If
End If
If AK = True Then
ActiveSheet.Cells(NrZA, Nr10).Value = "AK"
ActiveSheet.Cells(NrZA, Nr6).Value = "Man"
    If Aufnehmen = True Then
    ActiveSheet.Cells(NrZA, Nr19).Value = "Aufnehmen"
    Else
    ActiveSheet.Cells(NrZA, Nr19).Value = "Aufnehmen und Platzieren"
    End If
End If
If AL = True Then
ActiveSheet.Cells(NrZA, Nr10).Value = "AL"
ActiveSheet.Cells(NrZA, Nr6).Value = "Man"
    If Aufnehmen = True Then
    ActiveSheet.Cells(NrZA, Nr19).Value = "Aufnehmen"
    Else
    ActiveSheet.Cells(NrZA, Nr19).Value = "Aufnehmen und Platzieren"
    End If
End If
If AM = True Then
ActiveSheet.Cells(NrZA, Nr10).Value = "AM"
ActiveSheet.Cells(NrZA, Nr6).Value = "Man"
    If Aufnehmen = True Then
    ActiveSheet.Cells(NrZA, Nr19).Value = "Aufnehmen"
    Else
    ActiveSheet.Cells(NrZA, Nr19).Value = "Aufnehmen und Platzieren"
    End If
End If
If AN = True Then
ActiveSheet.Cells(NrZA, Nr10).Value = "AN"
ActiveSheet.Cells(NrZA, Nr6).Value = "Man"
    If Aufnehmen = True Then
    ActiveSheet.Cells(NrZA, Nr19).Value = "Aufnehmen"
    Else
    ActiveSheet.Cells(NrZA, Nr19).Value = "Aufnehmen und Platzieren"
    End If
End If
If PA = True Then
ActiveSheet.Cells(NrZA, Nr10).Value = "PA"
ActiveSheet.Cells(NrZA, Nr6).Value = "Man"
ActiveSheet.Cells(NrZA, Nr19).Value = "Platzieren"
End If
If PB = True Then
ActiveSheet.Cells(NrZA, Nr10).Value = "PB"
ActiveSheet.Cells(NrZA, Nr6).Value = "Man"
ActiveSheet.Cells(NrZA, Nr19).Value = "Platzieren"
End If
If PC = True Then
ActiveSheet.Cells(NrZA, Nr10).Value = "PC"
ActiveSheet.Cells(NrZA, Nr6).Value = "Man"
ActiveSheet.Cells(NrZA, Nr19).Value = "Platzieren"
End If
If HA = True Then
ActiveSheet.Cells(NrZA, Nr10).Value = "HA"
ActiveSheet.Cells(NrZA, Nr6).Value = "Man"
ActiveSheet.Cells(NrZA, Nr19).Value = "Hilfsmittel aufnehmen, ansetzen, ablegen"
End If
If HB = True Then
ActiveSheet.Cells(NrZA, Nr10).Value = "HB"
ActiveSheet.Cells(NrZA, Nr6).Value = "Man"
ActiveSheet.Cells(NrZA, Nr19).Value = "Hilfsmittel aufnehmen, ansetzen, ablegen"
End If
If HC = True Then
ActiveSheet.Cells(NrZA, Nr10).Value = "HC"
ActiveSheet.Cells(NrZA, Nr6).Value = "Man"
ActiveSheet.Cells(NrZA, Nr19).Value = "Hilfsmittel aufnehmen, ansetzen, ablegen"
End If
If BA = True Then
ActiveSheet.Cells(NrZA, Nr10).Value = "BA"
ActiveSheet.Cells(NrZA, Nr6).Value = "Man"
ActiveSheet.Cells(NrZA, Nr19).Value = "Bet|fffd|tigen"
End If
If BB = True Then
ActiveSheet.Cells(NrZA, Nr10).Value = "BB"
ActiveSheet.Cells(NrZA, Nr6).Value = "Man"
ActiveSheet.Cells(NrZA, Nr19).Value = "Bet|fffd|tigen"
End If
If ZA = True Then
ActiveSheet.Cells(NrZA, Nr10).Value = "ZA"
ActiveSheet.Cells(NrZA, Nr6).Value = "Man"
ActiveSheet.Cells(NrZA, Nr19).Value = "Bewegungszyklus eine Bewegung"
End If
If ZB = True Then
ActiveSheet.Cells(NrZA, Nr10).Value = "ZB"
ActiveSheet.Cells(NrZA, Nr6).Value = "Man"
ActiveSheet.Cells(NrZA, Nr19).Value = "Bewegungszyklus Bewegungsfolge"
End If
If ZC = True Then
ActiveSheet.Cells(NrZA, Nr10).Value = "ZC"
ActiveSheet.Cells(NrZA, Nr6).Value = "Man"
ActiveSheet.Cells(NrZA, Nr19).Value = "Bewegungszyklus mit Umsetzen"
End If
If ZD = True Then
ActiveSheet.Cells(NrZA, Nr10).Value = "ZD"
ActiveSheet.Cells(NrZA, Nr6).Value = "Man"
ActiveSheet.Cells(NrZA, Nr19).Value = "Festmachen"
End If
If ZD1 = True Then
ActiveSheet.Cells(NrZA, Nr10).Value = "ZD"
ActiveSheet.Cells(NrZA, Nr6).Value = "Man"
ActiveSheet.Cells(NrZA, Nr19).Value = "L|fffd|sen"
End If
If KA = True Then
ActiveSheet.Cells(NrZA, Nr10).Value = "KA"
ActiveSheet.Cells(NrZA, Nr11).Value = ""
ActiveSheet.Cells(NrZA, Nr6).Value = "KB"
ActiveSheet.Cells(NrZA, Nr19).Value = "Gehen"
End If
If KB = True Then
ActiveSheet.Cells(NrZA, Nr10).Value = "KB"
ActiveSheet.Cells(NrZA, Nr11).Value = ""
ActiveSheet.Cells(NrZA, Nr6).Value = "KB"
ActiveSheet.Cells(NrZA, Nr19).Value = "B|fffd|cken u. Aufrichten"
End If
If KC = True Then
ActiveSheet.Cells(NrZA, Nr10).Value = "KC"
ActiveSheet.Cells(NrZA, Nr11).Value = ""
ActiveSheet.Cells(NrZA, Nr6).Value = "KB"
ActiveSheet.Cells(NrZA, Nr19).Value = "Setzen u. Aufsetzen"
End If
If VA = True Then
ActiveSheet.Cells(NrZA, Nr10).Value = "VA"
ActiveSheet.Cells(NrZA, Nr11).Value = ""
ActiveSheet.Cells(NrZA, Nr6).Value = "Man"
ActiveSheet.Cells(NrZA, Nr19).Value = "Visuelle Kontrolle"
End If
If MSAA = True Then
ActiveSheet.Cells(NrZA, Nr10).Value = "M-SAA"
ActiveSheet.Cells(NrZA, Nr11).Value = ""
ActiveSheet.Cells(NrZA, Nr6).Value = "Man"
ActiveSheet.Cells(NrZA, Nr19).Value = "Schraube stecken, Gang suchen (einhand)"
End If
If MSBA = True Then
ActiveSheet.Cells(NrZA, Nr10).Value = "M-SBA"
ActiveSheet.Cells(NrZA, Nr11).Value = ""
ActiveSheet.Cells(NrZA, Nr6).Value = "Man"
ActiveSheet.Cells(NrZA, Nr19).Value = "Schraube stecken, Gang suchen (zweihand)"
End If
If MSCA = True Then
ActiveSheet.Cells(NrZA, Nr10).Value = "M-SCA"
ActiveSheet.Cells(NrZA, Nr11).Value = ""
ActiveSheet.Cells(NrZA, Nr6).Value = "Man"
ActiveSheet.Cells(NrZA, Nr19).Value = "Schraube stecken, eindrehen (einhand)"
End If
If MSDA = True Then
ActiveSheet.Cells(NrZA, Nr10).Value = "M-SDA"
ActiveSheet.Cells(NrZA, Nr11).Value = ""
ActiveSheet.Cells(NrZA, Nr6).Value = "Man"
ActiveSheet.Cells(NrZA, Nr19).Value = "Schraube stecken, eindrehen (zweihand)"
End If
If MNCA = True Then
ActiveSheet.Cells(NrZA, Nr10).Value = "M-NCA"
ActiveSheet.Cells(NrZA, Nr11).Value = ""
ActiveSheet.Cells(NrZA, Nr6).Value = "Man"
ActiveSheet.Cells(NrZA, Nr19).Value = "SiRi mit Werkzeug montieren"
End If
If MSHS = True Then
ActiveSheet.Cells(NrZA, Nr10).Value = "M-SHS"
ActiveSheet.Cells(NrZA, Nr11).Value = ""
ActiveSheet.Cells(NrZA, Nr6).Value = "Man"
ActiveSheet.Cells(NrZA, Nr19).Value = "Schraubarbeit mit Maschinenschrauber"
End If
If MEH1 = True Then
ActiveSheet.Cells(NrZA, Nr10).Value = "M-EH1"
ActiveSheet.Cells(NrZA, Nr11).Value = ""
ActiveSheet.Cells(NrZA, Nr6).Value = "Man"
ActiveSheet.Cells(NrZA, Nr19).Value = "Erg|fffd|nzungswert Hilfsmittel handhaben"
End If
If MEH2 = True Then
ActiveSheet.Cells(NrZA, Nr10).Value = "M-EH2"
ActiveSheet.Cells(NrZA, Nr11).Value = ""
ActiveSheet.Cells(NrZA, Nr6).Value = "Man"
ActiveSheet.Cells(NrZA, Nr19).Value = "Erg|fffd|nzungswert Hilfsmittel handhaben"
End If
If MEH3 = True Then
ActiveSheet.Cells(NrZA, Nr10).Value = "M-EH3"
ActiveSheet.Cells(NrZA, Nr11).Value = ""
ActiveSheet.Cells(NrZA, Nr6).Value = "Man"
ActiveSheet.Cells(NrZA, Nr19).Value = "Erg|fffd|nzungswert Hilfsmittel handhaben"
End If
If MET3 = True Then
ActiveSheet.Cells(NrZA, Nr10).Value = "M-ET3"
ActiveSheet.Cells(NrZA, Nr11).Value = ""
ActiveSheet.Cells(NrZA, Nr6).Value = "Man"
ActiveSheet.Cells(NrZA, Nr19).Value = "Erg|fffd|nzungswert Teil handhaben"
End If

If Stationsfeld.Value <> "" Then
ActiveSheet.Cells(NrZA, Nr21).Value = Stationsfeld.Value
End If

If Werker_Nr.Value <> "" Then
ActiveSheet.Cells(NrZA, Nr27).Value = Werker_Nr.Value
End If

If Bemerkung.Value <> "" Then
ActiveSheet.Cells(NrZA, Nr23).Value = Bemerkung.Value
'Bemerkung.Value = ""
End If

If Bemerkung_E.Value <> "" Then
ActiveSheet.Cells(NrZA, Nr26).Value = Bemerkung_E.Value
'Bemerkung_E.Value = ""
End If

If Anzahlfeld.Value <> "" Then
ActiveSheet.Cells(NrZA, Nr12).Value = Anzahlfeld.Value
Anzahlfeld.Value = "1"
End If

ActiveSheet.Cells(NrZA, Nr17).Value = "Werker"
ActiveSheet.Cells(NrZA, Nr18).Value = "Operator"

Application.Calculation = xlCalculationAutomatic
'ActiveSheet.Cells(NrZA, Nr9).Value = Cells(NrZA, Nr15).Value

ActiveSheet.Cells(NrZA, Nr9).FormulaLocal = "=" & Nr15 & "" & NrZA & ""

ActiveCell.Offset(1, 0).Select

ende:

ActiveSheet.Protect DrawingObjects:=False, Contents:=True, Scenarios:=True, AllowFormattingCells:=True
With Application
    .ScreenUpdating = True
    .Calculation = xlCalculationAutomatic
    .EnableEvents = True
End With

End Sub






INQUEST-PP=macro
