Attribute VB_Name = "DieseArbeitsmappe"
Attribute VB_Base = "0{00020819-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Module1"
' ---------------------- Directory Choosing Helper Functions -----------------------
' Excel and VBA do not provide any convenient directory chooser or file chooser
' dialogs, but these functions will provide a reference to a system DLL
' with the necessary capabilities
Private Type BROWSEINFO ' used by the function GetFolderName
    hOwner As LongPtr
    pidlRoot As LongPtr
    pszDisplayName As String
    lpszTitle As String
    ulFlags As Long
    lpfn As LongPtr
    lParam As LongPtr
    iImage As Long
End Type

Private Declare PtrSafe Function SHGetPathFromIDList Lib "shell32.dll" _
    Alias "SHGetPathFromIDListA" (ByVal pidl As LongPtr, ByVal pszPath As String) As Long
Private Declare PtrSafe Function SHBrowseForFolder Lib "shell32.dll" _
    Alias "SHBrowseForFolderA" (lpBrowseInfo As BROWSEINFO) As LongPtr
Function GetFolderName(Msg As String) As String
' returns the name of the folder selected by the user
Dim bInfo As BROWSEINFO, path As String, r As Long
Dim X As LongPtr, pos As Integer
    bInfo.pidlRoot = 0& ' Root folder = Desktop
    If IsMissing(Msg) Then
        bInfo.lpszTitle = "Select a folder."
        ' the dialog title
    Else
        bInfo.lpszTitle = Msg ' the dialog title
    End If
    bInfo.ulFlags = &H1 ' Type of directory to return
    X = SHBrowseForFolder(bInfo) ' display the dialog
    ' Parse the result
    path = Space$(512)
    r = SHGetPathFromIDList(ByVal X, ByVal path)
    If r Then
        pos = InStr(path, Chr$(0))
        GetFolderName = Left(path, pos - 1)
    Else
        GetFolderName = ""
    End If
End Function
'---------------------- END Directory Chooser Helper Functions ----------------------

Public Sub DoTheExport()
Dim fname As Variant
Dim Sep As String
Dim wsSheet As Worksheet
Dim nFileNum As Integer
Dim csvPath As String

mydate = Date
mydate = Format(Date, "yyyymmdd")
mydate = Left(mydate, 8)
Sep = "|"

csvPath = GetFolderName("Choose the folder to export CSV files to:")
If csvPath = "" Then
    MsgBox ("You didn't choose an export directory. Nothing will be exported.")
    Exit Sub
    End If

With wsSheet
    Set wsSheet = Sheets("SHIPMENT")
End With

wsSheet.Activate
nFileNum = FreeFile
Open csvPath & "\" & _
  wsSheet.Name & "_" & mydate & ".csv" For Output As #nFileNum
ExportToTextFile CStr(nFileNum), Sep, False
Close nFileNum

End Sub
'---------------------- END Directory Chooser Helper Functions ----------------------
Public Sub ExportToTextFile(nFileNum As Integer, _
Sep As String, SelectionOnly As Boolean)

Dim WholeLine As String
Dim RowNdx As Long
Dim ColNdx As Integer
Dim StartRow As Long
Dim EndRow As Long
Dim StartCol As Integer
Dim EndCol As Integer
Dim CellValue As String
Dim ID_column As Boolean
Dim mydate As String
Dim ZIPCode As String
Dim myprice As Double
Dim myID As Integer
Dim RowNdxItem As Long
Dim ColNdxItem As Integer
Dim StartRowndxItem As Long
Dim EndRowndxItem As Long
Dim StartColndxItem As Integer
Dim EndColndxItem As Integer
Dim ws_items As Worksheet

Set ws_items = Sheets("ITEMS")

Application.ScreenUpdating = False
On Error GoTo EndMacro:

If SelectionOnly = True Then
    With Selection
        'StartRow = .Cells(2).Row
        StartRow = 3
        StartCol = .Cells(1).Column
        EndRow = .Cells(.Cells.Count).Row
        EndCol = .Cells(.Cells.Count).Column
        End With
Else
    With ActiveSheet.UsedRange
        'StartRow = .Cells(2).Row
        StartRow = 3
        StartCol = .Cells(1).Column
        EndRow = .Cells(.Cells.Count).Row
        EndCol = .Cells(.Cells.Count).Column
        End With
    End If

For RowNdx = StartRow To EndRow
If Cells(RowNdx, 1).Value = "x" Then
    GoTo EndMacro
Else
    myID = Cells(RowNdx, 1).Value

    For ColNdx = StartCol To EndCol
    
        If Cells(2, ColNdx) = "ID" Then
        WholeLine = "FRT-SHIPMENT" & Sep
        ID_column = True
        
        ElseIf Cells(RowNdx, 1).Value = "x" Then
            GoTo EndMacro
        
        ElseIf Cells(2, ColNdx).Value = "Number of Packages" Then
            GoTo dalsi_zaznam
        
        ElseIf Cells(2, ColNdx).Value = "Weight/Piece" Then
            GoTo dalsi_zaznam

        ElseIf Cells(2, ColNdx) = "Shipment date" Then
            mydate = Cells(RowNdx, ColNdx).Value
            mydate = Format(Date, "yyyymmdd")
            mydate = Left(mydate, 8)
        WholeLine = Left(WholeLine, Len(WholeLine) - Len(Sep))
        WholeLine = WholeLine & Sep & mydate & Sep
        
        ElseIf Cells(2, ColNdx) = "COD Amount" Then
            If Cells(RowNdx, 17).Value = "CZK" Then
                myprice = Cells(RowNdx, ColNdx).Value
                myprice = Round(myprice, 0)
            Else
                myprice = Cells(RowNdx, ColNdx).Value
                End If
        WholeLine = Left(WholeLine, Len(WholeLine) - Len(Sep))
        WholeLine = WholeLine & Sep & myprice & Sep
        
        'ElseIf Cells(2, ColNdx) = "Delivery Date" Then
         '   mydate = Cells(RowNdx, ColNdx).Value
          '  mydate = Format(Date, "yyyymmdd")
           ' mydate = Left(mydate, 8)
        'WholeLine = Left(WholeLine, Len(WholeLine) - Len(Sep))
        'WholeLine = WholeLine & Sep & mydate & Sep
        
        'ElseIf Cells(2, ColNdx) = "Shipping date Attention" Then
         '   mydate = Cells(RowNdx, ColNdx).Value
          '  mydate = Format(Date, "yyyymmdd")
           ' mydate = Left(mydate, 8)
        'WholeLine = Left(WholeLine, Len(WholeLine) - Len(Sep))
        'WholeLine = WholeLine & Sep & mydate & Sep
            
        ElseIf Cells(2, ColNdx) = "ID2" Then
        ID_column = True
        WholeLine = Left(WholeLine, Len(WholeLine) - Len(Sep))
        Print #nFileNum, WholeLine
        WholeLine = "FRT-SENDER" & Sep
        
        ElseIf Cells(2, ColNdx) = "ID3" Then
        ID_column = True
        WholeLine = Left(WholeLine, Len(WholeLine) - Len(Sep)) & Sep
        Print #nFileNum, WholeLine
        WholeLine = "FRT-RECEIVER" & Sep
        
        ElseIf Cells(2, ColNdx) = "ID4" Then
        ID_column = True
        WholeLine = Left(WholeLine, Len(WholeLine) - Len(Sep))
        Print #nFileNum, WholeLine
        Sheets("ITEMS").Activate
            With ActiveSheet.UsedRange
                'StartRow = .Cells(2).Row
                StartRowndxItem = 3
                StartColndxItem = .Cells(1).Column
                EndRowndxItem = .Cells(.Cells.Count).Row
                EndColndxItem = .Cells(.Cells.Count).Column
                End With
            For RowNdxItem = StartRowndxItem To EndRowndxItem
                myIDitem = Cells(RowNdxItem, 1).Value
                WholeLine = ""
                If myID = myIDitem Then
                    For ColNdxItem = StartColndxItem To EndColndxItem

                            If Cells(2, ColNdxItem).Value = "ID" Then
                                WholeLine = "FRT-ITEM" & Sep
                    
                            ElseIf Cells(RowNdxItem, 1).Value = "x" Then
                                GoTo EndMacro
                    
                            ElseIf Cells(2, ColNdxItem).Value = "Receiver" Then
                                WholeLine = Left(WholeLine, Len(WholeLine) - Len(Sep)) & Sep
                                Print #nFileNum, WholeLine
                                GoTo endItem
                    
                            ElseIf ID_column = True Then
                                If Cells(RowNdxItem, ColNdxItem).Value = "" Then
                                    WholeLine = WholeLine & "" & Sep
                                Else
                                    WholeLine = WholeLine & Cells(RowNdxItem, ColNdxItem).Value & Sep
                                    End If
                                End If
                    Next ColNdxItem
                        WholeLine = Left(WholeLine, Len(WholeLine) - Len(Sep))
                        If ID_column = True Then
                            Print #nFileNum, WholeLine
                            End If
endItem:
                    End If
                Next RowNdxItem
                
        ElseIf Cells(2, ColNdx) = "ID5" Then
        WholeLine = Left(WholeLine, Len(WholeLine) - Len(Sep)) & Sep
        Print #nFileNum, WholeLine
        Sheets("SHIPMENT").Activate
            If Cells(RowNdx, ColNdx) <> "" Then
                WholeLine = "FRT-PICKUP" & Sep
                ID_column = True
            Else
                ID_column = False
                End If
        
        Else
            If ID_column = True Then
                Sheets("SHIPMENT").Activate
                If Cells(RowNdx, ColNdx).Value = "" Then
                WholeLine = WholeLine & "" & Sep
                Else
                WholeLine = WholeLine & Cells(RowNdx, ColNdx).Value & Sep
                End If
            End If
       End If
dalsi_zaznam:
    Next ColNdx

    WholeLine = Left(WholeLine, Len(WholeLine) - Len(Sep)) & "1"
    If ID_column = False Then
    Print #nFileNum, WholeLine
    End If
    End If
    
Next RowNdx

EndMacro:
On Error GoTo 0
Application.ScreenUpdating = True

End Sub
Sub ReplaceLocalChar()
    
    Cells.Replace What:="|fffd|", Replacement:="a", LookAt:=xlPart, SearchOrder:=xlByRows, MatchCase:=True, SearchFormat:=False, ReplaceFormat:=False
    Cells.Replace What:="|fffd|", Replacement:="A", LookAt:=xlPart, SearchOrder:=xlByRows, MatchCase:=True, SearchFormat:=False, ReplaceFormat:=False
    Cells.Replace What:="|fffd|", Replacement:="a", LookAt:=xlPart, SearchOrder:=xlByRows, MatchCase:=True, SearchFormat:=False, ReplaceFormat:=False
    Cells.Replace What:="|fffd|", Replacement:="A", LookAt:=xlPart, SearchOrder:=xlByRows, MatchCase:=True, SearchFormat:=False, ReplaceFormat:=False
    Cells.Replace What:="|fffd|", Replacement:="c", LookAt:=xlPart, SearchOrder:=xlByRows, MatchCase:=True, SearchFormat:=False, ReplaceFormat:=False
    Cells.Replace What:="|fffd|", Replacement:="C", LookAt:=xlPart, SearchOrder:=xlByRows, MatchCase:=True, SearchFormat:=False, ReplaceFormat:=False
    Cells.Replace What:="|fffd|", Replacement:="d", LookAt:=xlPart, SearchOrder:=xlByRows, MatchCase:=True, SearchFormat:=False, ReplaceFormat:=False
    Cells.Replace What:="|fffd|", Replacement:="D", LookAt:=xlPart, SearchOrder:=xlByRows, MatchCase:=True, SearchFormat:=False, ReplaceFormat:=False
    Cells.Replace What:="|fffd|", Replacement:="e", LookAt:=xlPart, SearchOrder:=xlByRows, MatchCase:=True, SearchFormat:=False, ReplaceFormat:=False
    Cells.Replace What:="|fffd|", Replacement:="E", LookAt:=xlPart, SearchOrder:=xlByRows, MatchCase:=True, SearchFormat:=False, ReplaceFormat:=False
    Cells.Replace What:="|fffd|", Replacement:="e", LookAt:=xlPart, SearchOrder:=xlByRows, MatchCase:=True, SearchFormat:=False, ReplaceFormat:=False
    Cells.Replace What:="|fffd|", Replacement:="E", LookAt:=xlPart, SearchOrder:=xlByRows, MatchCase:=True, SearchFormat:=False, ReplaceFormat:=False
    Cells.Replace What:="|fffd|", Replacement:="E", LookAt:=xlPart, SearchOrder:=xlByRows, MatchCase:=True, SearchFormat:=False, ReplaceFormat:=False
    Cells.Replace What:="|fffd|", Replacement:="e", LookAt:=xlPart, SearchOrder:=xlByRows, MatchCase:=True, SearchFormat:=False, ReplaceFormat:=False
    Cells.Replace What:="|fffd|", Replacement:="i", LookAt:=xlPart, SearchOrder:=xlByRows, MatchCase:=True, SearchFormat:=False, ReplaceFormat:=False
    Cells.Replace What:="|fffd|", Replacement:="I", LookAt:=xlPart, SearchOrder:=xlByRows, MatchCase:=True, SearchFormat:=False, ReplaceFormat:=False
    Cells.Replace What:="|fffd|", Replacement:="l", LookAt:=xlPart, SearchOrder:=xlByRows, MatchCase:=True, SearchFormat:=False, ReplaceFormat:=False
    Cells.Replace What:="|fffd|", Replacement:="L", LookAt:=xlPart, SearchOrder:=xlByRows, MatchCase:=True, SearchFormat:=False, ReplaceFormat:=False
    Cells.Replace What:="|fffd|", Replacement:="l", LookAt:=xlPart, SearchOrder:=xlByRows, MatchCase:=True, SearchFormat:=False, ReplaceFormat:=False
    Cells.Replace What:="|fffd|", Replacement:="L", LookAt:=xlPart, SearchOrder:=xlByRows, MatchCase:=True, SearchFormat:=False, ReplaceFormat:=False
    Cells.Replace What:="|fffd|", Replacement:="n", LookAt:=xlPart, SearchOrder:=xlByRows, MatchCase:=True, SearchFormat:=False, ReplaceFormat:=False
    Cells.Replace What:="|fffd|", Replacement:="N", LookAt:=xlPart, SearchOrder:=xlByRows, MatchCase:=True, SearchFormat:=False, ReplaceFormat:=False
    Cells.Replace What:="|fffd|", Replacement:="o", LookAt:=xlPart, SearchOrder:=xlByRows, MatchCase:=True, SearchFormat:=False, ReplaceFormat:=False
    Cells.Replace What:="|fffd|", Replacement:="O", LookAt:=xlPart, SearchOrder:=xlByRows, MatchCase:=True, SearchFormat:=False, ReplaceFormat:=False
    Cells.Replace What:="|fffd|", Replacement:="o", LookAt:=xlPart, SearchOrder:=xlByRows, MatchCase:=True, SearchFormat:=False, ReplaceFormat:=False
    Cells.Replace What:="|fffd|", Replacement:="O", LookAt:=xlPart, SearchOrder:=xlByRows, MatchCase:=True, SearchFormat:=False, ReplaceFormat:=False
    Cells.Replace What:="|fffd|", Replacement:="o", LookAt:=xlPart, SearchOrder:=xlByRows, MatchCase:=True, SearchFormat:=False, ReplaceFormat:=False
    Cells.Replace What:="|fffd|", Replacement:="O", LookAt:=xlPart, SearchOrder:=xlByRows, MatchCase:=True, SearchFormat:=False, ReplaceFormat:=False
    Cells.Replace What:="|fffd|", Replacement:="r", LookAt:=xlPart, SearchOrder:=xlByRows, MatchCase:=True, SearchFormat:=False, ReplaceFormat:=False
    Cells.Replace What:="|fffd|", Replacement:="R", LookAt:=xlPart, SearchOrder:=xlByRows, MatchCase:=True, SearchFormat:=False, ReplaceFormat:=False
    Cells.Replace What:="|fffd|", Replacement:="r", LookAt:=xlPart, SearchOrder:=xlByRows, MatchCase:=True, SearchFormat:=False, ReplaceFormat:=False
    Cells.Replace What:="|fffd|", Replacement:="R", LookAt:=xlPart, SearchOrder:=xlByRows, MatchCase:=True, SearchFormat:=False, ReplaceFormat:=False
    Cells.Replace What:="|fffd|", Replacement:="ss", LookAt:=xlPart, SearchOrder:=xlByRows, MatchCase:=True, SearchFormat:=False, ReplaceFormat:=False
    Cells.Replace What:="|fffd|", Replacement:="s", LookAt:=xlPart, SearchOrder:=xlByRows, MatchCase:=True, SearchFormat:=False, ReplaceFormat:=False
    Cells.Replace What:="|fffd|", Replacement:="S", LookAt:=xlPart, SearchOrder:=xlByRows, MatchCase:=True, SearchFormat:=False, ReplaceFormat:=False
    Cells.Replace What:="|fffd|", Replacement:="t", LookAt:=xlPart, SearchOrder:=xlByRows, MatchCase:=True, SearchFormat:=False, ReplaceFormat:=False
    Cells.Replace What:="|fffd|", Replacement:="T", LookAt:=xlPart, SearchOrder:=xlByRows, MatchCase:=True, SearchFormat:=False, ReplaceFormat:=False
    Cells.Replace What:="|fffd|", Replacement:="u", LookAt:=xlPart, SearchOrder:=xlByRows, MatchCase:=True, SearchFormat:=False, ReplaceFormat:=False
    Cells.Replace What:="|fffd|", Replacement:="U", LookAt:=xlPart, SearchOrder:=xlByRows, MatchCase:=True, SearchFormat:=False, ReplaceFormat:=False
    Cells.Replace What:="|fffd|", Replacement:="u", LookAt:=xlPart, SearchOrder:=xlByRows, MatchCase:=True, SearchFormat:=False, ReplaceFormat:=False
    Cells.Replace What:="|fffd|", Replacement:="U", LookAt:=xlPart, SearchOrder:=xlByRows, MatchCase:=True, SearchFormat:=False, ReplaceFormat:=False
    Cells.Replace What:="|fffd|", Replacement:="u", LookAt:=xlPart, SearchOrder:=xlByRows, MatchCase:=True, SearchFormat:=False, ReplaceFormat:=False
    Cells.Replace What:="|fffd|", Replacement:="U", LookAt:=xlPart, SearchOrder:=xlByRows, MatchCase:=True, SearchFormat:=False, ReplaceFormat:=False
    Cells.Replace What:="|fffd|", Replacement:="u", LookAt:=xlPart, SearchOrder:=xlByRows, MatchCase:=True, SearchFormat:=False, ReplaceFormat:=False
    Cells.Replace What:="|fffd|", Replacement:="U", LookAt:=xlPart, SearchOrder:=xlByRows, MatchCase:=True, SearchFormat:=False, ReplaceFormat:=False
    Cells.Replace What:="|fffd|", Replacement:="y", LookAt:=xlPart, SearchOrder:=xlByRows, MatchCase:=True, SearchFormat:=False, ReplaceFormat:=False
    Cells.Replace What:="|fffd|", Replacement:="Y", LookAt:=xlPart, SearchOrder:=xlByRows, MatchCase:=True, SearchFormat:=False, ReplaceFormat:=False
    Cells.Replace What:="|fffd|", Replacement:="y", LookAt:=xlPart, SearchOrder:=xlByRows, MatchCase:=True, SearchFormat:=False, ReplaceFormat:=False
    Cells.Replace What:="|fffd|", Replacement:="z", LookAt:=xlPart, SearchOrder:=xlByRows, MatchCase:=True, SearchFormat:=False, ReplaceFormat:=False
    Cells.Replace What:="|fffd|", Replacement:="Z", LookAt:=xlPart, SearchOrder:=xlByRows, MatchCase:=True, SearchFormat:=False, ReplaceFormat:=False
    Cells.Replace What:="|fffd|", Replacement:="e", LookAt:=xlPart, SearchOrder:=xlByRows, MatchCase:=True, SearchFormat:=False, ReplaceFormat:=False
    Cells.Replace What:="|fffd|", Replacement:="r", LookAt:=xlPart, SearchOrder:=xlByRows, MatchCase:=True, SearchFormat:=False, ReplaceFormat:=False

End_macro:
End Sub

Attribute VB_Name = "Module2"
Dim vrtSelectedItem As Variant
Dim SummaryWB As Workbook
Dim ws_options As Worksheet
Dim CompanyName As String
Dim CompanyName2 As String
Dim CompanyName3 As String
Dim CustomerIDNumber As String
Dim ContactPerson As String
Dim StreetName As String
Dim HouseNumber As String
Dim AdditionalAddress As String
Dim ZIPCode As String
Dim City As String
Dim ISOCountryCode As String
Dim ReceiverNumber As String
Dim EmailAddress As String
Dim TelephoneNumber As String
Dim VATNumber As String
Dim Matchcode As String
Dim DeliveryNote As String
Dim InternalNote As String
Dim ReceiverCCNumber As String
Dim DeliabilityNumber As String
Dim CompanyName4 As String
Dim TotalShipmentWeight As String
Dim TotalShipmentWeight2 As String
Dim TotalShipmentWeight3 As String
Dim TotalShipmentWeight4 As String
Dim NumberOfPackages As String
Dim CODAmount As String
Dim CustomerReference As String
Dim PieceDescription As String

Sub ImportObj()
Attribute ImportObj.VB_ProcData.VB_Invoke_Func = " \n14"

    With Application.FileDialog(msoFileDialogOpen)
        .InitialFileName = "C:\Users\magolan\Desktop"
        .AllowMultiSelect = False
        .Show
        For Each vrtSelectedItem In .SelectedItems
            Set SummaryWB = Workbooks.Open(vrtSelectedItem)
        Next
    End With

    If SummaryWB Is Nothing Then
        Exit Sub
        End If
    Copy (False)
    ReplaceLocalChar
End Sub

Private Sub Copy(SelectionOnly As Boolean)

Dim RowNdx As Long
Dim ColNdx As Integer
Dim StartRow As Long
Dim EndRow As Long
Dim StartCol As Integer
Dim EndCol As Integer
Dim CellValue As String
Dim ID_column As Boolean

Application.ScreenUpdating = False

Dim ws_options As Worksheet
    
Windows("Intraship_import_shipping_orders_macro.xlsm").Activate
    
Set ws_options = Sheets("OPTIONS")
    
With ws_options
    CompanyName = .Cells(4, 6).Value
    CompanyName2 = .Cells(5, 6).Value
    CompanyName3 = .Cells(6, 6).Value
    CustomerIDNumber = .Cells(7, 6).Value
    ContactPerson = .Cells(8, 6).Value
    StreetName = .Cells(9, 6).Value
    HouseNumber = .Cells(10, 6).Value
    AdditionalAddress = .Cells(11, 6).Value
    ZIPCode = .Cells(12, 6).Value
    City = .Cells(13, 6).Value
    ISOCountryCode = .Cells(14, 6).Value
    ReceiverNumber = .Cells(15, 6).Value
    EmailAddress = .Cells(16, 6).Value
    TelephoneNumber = .Cells(17, 6).Value
    VATNumber = .Cells(18, 6).Value
    Matchcode = .Cells(19, 6).Value
    DeliveryNote = .Cells(20, 6).Value
    InternalNote = .Cells(21, 6).Value
    ReceiverCCNumber = .Cells(21, 6).Value
    DeliabilityNumber = .Cells(22, 6).Value
    CompanyName4 = .Cells(23, 6).Value
    TotalShipmentWeight = .Cells(7, 2).Value
    TotalShipmentWeight2 = .Cells(8, 2).Value
    TotalShipmentWeight3 = .Cells(9, 2).Value
    TotalShipmentWeight4 = .Cells(10, 2).Value
    NumberOfPackages = .Cells(11, 2).Value
    CODAmount = .Cells(21, 2).Value
    CustomerReference = .Cells(17, 2).Value
    End With

Windows(SummaryWB.Name).Activate

If SelectionOnly = True Then
    With Selection
        'StartRow = .Cells(2).Row
        StartRow = 2
        StartCol = .Cells(1).Column
        EndRow = .Cells(.Cells.Count).Row
        EndCol = .Cells(.Cells.Count).Column
        End With
Else
    With ActiveSheet.UsedRange
        'StartRow = .Cells(2).Row
        StartRow = 2
        StartCol = .Cells(1).Column
        EndRow = .Cells(.Cells.Count).Row
        EndCol = .Cells(.Cells.Count).Column
        End With
    End If

For RowNdx = StartRow To EndRow

    For ColNdx = StartCol To EndCol
            
        If Cells(1, ColNdx) = TotalShipmentWeight Then
            Cells(2, ColNdx).Select
            Range(Selection, Selection.End(xlDown)).Select
            Selection.Copy
            Windows("Intraship_import_shipping_orders_macro.xlsm").Activate
            Sheets("SHIPMENT").Select
            Range("E3").Select
            Selection.pastespecial Paste:=xlPasteValues, Operation:=xlNone, SkipBlanks _
            :=False, Transpose:=False
            Windows(SummaryWB.Name).Activate
        
        ElseIf Cells(1, ColNdx) = TotalShipmentWeight2 Then
            Cells(2, ColNdx).Select
            Range(Selection, Selection.End(xlDown)).Select
            Selection.Copy
            Windows("Intraship_import_shipping_orders_macro.xlsm").Activate
            Range("E3").Select
            Selection.pastespecial Paste:=xlPasteValues, Operation:=xlNone, SkipBlanks _
            :=False, Transpose:=False
            Windows(SummaryWB.Name).Activate
        
        ElseIf Cells(1, ColNdx) = TotalShipmentWeight3 Then
            Cells(2, ColNdx).Select
            Range(Selection, Selection.End(xlDown)).Select
            Selection.Copy
            Windows("Intraship_import_shipping_orders_macro.xlsm").Activate
            Range("E3").Select
            Selection.pastespecial Paste:=xlPasteValues, Operation:=xlNone, SkipBlanks _
            :=False, Transpose:=False
            Windows(SummaryWB.Name).Activate
        
        ElseIf Cells(1, ColNdx) = TotalShipmentWeight4 Then
            Cells(2, ColNdx).Select
            Range(Selection, Selection.End(xlDown)).Select
            Selection.Copy
            Windows("Intraship_import_shipping_orders_macro.xlsm").Activate
            Range("E3").Select
            Selection.pastespecial Paste:=xlPasteValues, Operation:=xlNone, SkipBlanks _
            :=False, Transpose:=False
            Windows(SummaryWB.Name).Activate
        
        ElseIf Cells(1, ColNdx) = NumberOfPackages Then
            Cells(2, ColNdx).Select
            Range(Selection, Selection.End(xlDown)).Select
            Selection.Copy
            Windows("Intraship_import_shipping_orders_macro.xlsm").Activate
            Range("F3").Select
            Selection.pastespecial Paste:=xlPasteValues, Operation:=xlNone, SkipBlanks _
            :=False, Transpose:=False
            Windows(SummaryWB.Name).Activate
        
        ElseIf Cells(1, ColNdx) = CODAmount Then
            Cells(2, ColNdx).Select
            Range(Selection, Selection.End(xlDown)).Select
            Selection.Copy
            Windows("Intraship_import_shipping_orders_macro.xlsm").Activate
            Range("Q3").Select
            Selection.pastespecial Paste:=xlPasteValues, Operation:=xlNone, SkipBlanks _
            :=False, Transpose:=False
            Windows(SummaryWB.Name).Activate
        
        ElseIf Cells(1, ColNdx) = CompanyName Then
            Cells(2, ColNdx).Select
            Range(Selection, Selection.End(xlDown)).Select
            Selection.Copy
            Windows("Intraship_import_shipping_orders_macro.xlsm").Activate
            Range("CR3").Select
            Selection.pastespecial Paste:=xlPasteValues, Operation:=xlNone, SkipBlanks _
            :=False, Transpose:=False
            Windows(SummaryWB.Name).Activate
        
        ElseIf Cells(1, ColNdx) = StreetName Then
            Cells(2, ColNdx).Select
            Range(Selection, Selection.End(xlDown)).Select
            Selection.Copy
            Windows("Intraship_import_shipping_orders_macro.xlsm").Activate
            Range("CW3").Select
            Selection.pastespecial Paste:=xlPasteValues, Operation:=xlNone, SkipBlanks _
            :=False, Transpose:=False
            Windows(SummaryWB.Name).Activate

        ElseIf Cells(1, ColNdx) = HouseNumber Then
            Cells(2, ColNdx).Select
            Range(Selection, Selection.End(xlDown)).Select
            Selection.Copy
            Windows("Intraship_import_shipping_orders_macro.xlsm").Activate
            Range("CX3").Select
            Selection.pastespecial Paste:=xlPasteValues, Operation:=xlNone, SkipBlanks _
            :=False, Transpose:=False
            Windows(SummaryWB.Name).Activate
        
        ElseIf Cells(1, ColNdx) = City Then
            Cells(2, ColNdx).Select
            Range(Selection, Selection.End(xlDown)).Select
            Selection.Copy
            Windows("Intraship_import_shipping_orders_macro.xlsm").Activate
            Range("DA3").Select
            Selection.pastespecial Paste:=xlPasteValues, Operation:=xlNone, SkipBlanks _
            :=False, Transpose:=False
            Windows(SummaryWB.Name).Activate
        
        ElseIf Cells(1, ColNdx) = ZIPCode Then
            Cells(2, ColNdx).Select
            Range(Selection, Selection.End(xlDown)).Select
            Selection.Copy
            Windows("Intraship_import_shipping_orders_macro.xlsm").Activate
            Range("CZ3").Select
            Selection.pastespecial Paste:=xlPasteValues, Operation:=xlNone, SkipBlanks _
            :=False, Transpose:=False
            Windows(SummaryWB.Name).Activate
            
        ElseIf Cells(1, ColNdx) = ISOCountryCode Then
            Cells(2, ColNdx).Select
            Range(Selection, Selection.End(xlDown)).Select
            Selection.Copy
            Windows("Intraship_import_shipping_orders_macro.xlsm").Activate
            Range("DB3").Select
            Selection.pastespecial Paste:=xlPasteValues, Operation:=xlNone, SkipBlanks _
            :=False, Transpose:=False
            Windows(SummaryWB.Name).Activate
        
        ElseIf Cells(1, ColNdx) = TelephoneNumber Then
            Cells(2, ColNdx).Select
            Range(Selection, Selection.End(xlDown)).Select
            Selection.Copy
            Windows("Intraship_import_shipping_orders_macro.xlsm").Activate
            Range("DE3").Select
            Selection.pastespecial Paste:=xlPasteValues, Operation:=xlNone, SkipBlanks _
            :=False, Transpose:=False
            Windows(SummaryWB.Name).Activate
        
        ElseIf Cells(1, ColNdx) = EmailAddress Then
            Cells(2, ColNdx).Select
            Range(Selection, Selection.End(xlDown)).Select
            Selection.Copy
            Windows("Intraship_import_shipping_orders_macro.xlsm").Activate
            Range("DD3").Select
            Selection.pastespecial Paste:=xlPasteValues, Operation:=xlNone, SkipBlanks _
            :=False, Transpose:=False
            Windows(SummaryWB.Name).Activate
            
        ElseIf Cells(1, ColNdx) = CustomerReference Then
            Cells(2, ColNdx).Select
            Range(Selection, Selection.End(xlDown)).Select
            Selection.Copy
            Windows("Intraship_import_shipping_orders_macro.xlsm").Activate
            Range("M3").Select
            Selection.pastespecial Paste:=xlPasteValues, Operation:=xlNone, SkipBlanks _
            :=False, Transpose:=False
            Range("E3").Select
            End If
        Next ColNdx
    Next RowNdx
    
ReplaceLocalChar
    
Windows("Intraship_import_shipping_orders_macro.xlsm").Activate
Sheets("SHIPMENT").Select

Dim i As Long, r As Range, coltoSearch As String

coltoSearch = "A"

    For i = 1 To Range(coltoSearch & Rows.Count).End(xlUp).Row
        Set r = Range(coltoSearch & i)
        If Len(r.Value) = 0 Then
            Range(coltoSearch & i).FormulaR1C1 = "x"
            GoTo end_import
        End If
    Next i

end_import:
Windows(SummaryWB.Name).Close

On Error GoTo 0
Application.ScreenUpdating = True

End Sub

Public Sub Options()
    Dim ws_options As Worksheet
    
    Windows("Intraship_import_shipping_orders_macro.xlsm").Activate
    
    Set ws_options = Sheets("OPTIONS")
    
    With ws_options
        CompanyName = .Cells(4, 6).Value
        CompanyName2 = .Cells(5, 6).Value
        CompanyName3 = .Cells(6, 6).Value
        CustomerIDNumber = .Cells(7, 6).Value
        ContactPerson = .Cells(8, 6).Value
        StreetName = .Cells(9, 6).Value
        HouseNumber = .Cells(10, 6).Value
        AdditionalAddress = .Cells(11, 6).Value
        ZIPCode = .Cells(12, 6).Value
        City = .Cells(13, 6).Value
        ISOCountryCode = .Cells(14, 6).Value
        ReceiverNumber = .Cells(15, 6).Value
        EmailAddress = .Cells(16, 6).Value
        TelephoneNumber = .Cells(17, 6).Value
        VATNumber = .Cells(18, 6).Value
        Matchcode = .Cells(19, 6).Value
        DeliveryNote = .Cells(20, 6).Value
        InternalNote = .Cells(21, 6).Value
        ReceiverCCNumber = .Cells(21, 6).Value
        DeliabilityNumber = .Cells(22, 6).Value
        CompanyName4 = .Cells(23, 6).Value
        TotalShipmentWeight = .Cells(7, 2).Value
        TotalShipmentWeight2 = .Cells(8, 2).Value
        TotalShipmentWeight3 = .Cells(9, 2).Value
        TotalShipmentWeight4 = .Cells(10, 2).Value
        NumberOfPackages = .Cells(11, 2).Value
        CODAmount = .Cells(21, 2).Value
        CustomerReference = .Cells(17, 2).Value
        PieceDescription = .Cells(9, 8).Value
    End With
    
End Sub
Attribute VB_Name = "Module3"
Dim CompanyName As String
Dim CompanyName2 As String
Dim CompanyName3 As String
Dim CustomerIDNumber As String
Dim ContactPerson As String
Dim StreetName As String
Dim HouseNumber As String
Dim AdditionalAddress As String
Dim ZIPCode As String
Dim City As String
Dim ISOCountryCode As String
Dim ReceiverNumber As String
Dim EmailAddress As String
Dim TelephoneNumber As String
Dim VATNumber As String
Dim Matchcode As String
Dim DeliveryNote As String
Dim InternalNote As String
Dim ReceiverCCNumber As String
Dim DeliabilityNumber As String
Dim CompanyName4 As String
Dim TotalShipmentWeight As String
Dim TotalShipmentWeight2 As String
Dim TotalShipmentWeight3 As String
Dim PieceDescription As String

Sub ImportItems()

Dim RowNdx As Long
Dim ColNdx As Integer
Dim StartRow As Long
Dim EndRow As Long
Dim StartCol As Integer
Dim EndCol As Integer
Dim CellValue As String
Dim ID_column As Boolean
Dim ws As Worksheet
Dim vrtSelectedItem As Variant
Dim SummaryWB As Workbook

Dim ws_options As Worksheet
    
Windows("Intraship_import_shipping_orders_macro.xlsm").Activate
    
Set ws_options = Sheets("OPTIONS")
    
With ws_options
    CompanyName = .Cells(17, 8).Value
    PieceDescription = .Cells(9, 8).Value
    End With

MsgBox "Please choose the file with items!"

With Application.FileDialog(msoFileDialogOpen)
    .InitialFileName = "C:\Users\magolan\Desktop"
    .AllowMultiSelect = False
   .Show
    For Each vrtSelectedItem In .SelectedItems
        Set SummaryWB = Workbooks.Open(vrtSelectedItem)
    Next
End With

If SummaryWB Is Nothing Then
    Exit Sub
    End If


Application.ScreenUpdating = False

Windows(SummaryWB.Name).Activate

If SelectionOnly = True Then
    With Selection
        'StartRow = .Cells(2).Row
        StartRow = 2
        StartCol = .Cells(1).Column
        EndRow = .Cells(.Cells.Count).Row
        EndCol = .Cells(.Cells.Count).Column
        End With
Else
    With ActiveSheet.UsedRange
        'StartRow = .Cells(2).Row
        StartRow = 2
        StartCol = .Cells(1).Column
        EndRow = .Cells(.Cells.Count).Row
        EndCol = .Cells(.Cells.Count).Column
        End With
    End If

    For ColNdx = StartCol To EndCol
            
        If Cells(1, ColNdx) = CompanyName Then
            Cells(2, ColNdx).Select
            Range(Selection, Selection.End(xlDown)).Select
            Selection.Copy
            Windows("Intraship_import_shipping_orders_macro.xlsm").Activate
            Sheets("ITEMS").Select
            Range("N3").Select
            Selection.pastespecial Paste:=xlPasteValues, Operation:=xlNone, SkipBlanks _
            :=False, Transpose:=False
            Windows(SummaryWB.Name).Activate
        
        ElseIf Cells(1, ColNdx) = PieceDescription Then
            Cells(2, ColNdx).Select
            Range(Selection, Selection.End(xlDown)).Select
            Selection.Copy
            Windows("Intraship_import_shipping_orders_macro.xlsm").Activate
            Sheets("ITEMS").Activate
            Range("G3").Select
            Selection.pastespecial Paste:=xlPasteValues, Operation:=xlNone, SkipBlanks _
            :=False, Transpose:=False
            Windows(SummaryWB.Name).Close
            Windows("Intraship_import_shipping_orders_macro.xlsm").Activate
            Sheets("ITEMS").Select
            Range("A3").Select
            End If
        Next ColNdx

Windows("Intraship_import_shipping_orders_macro.xlsm").Activate
Sheets("ITEMS").Activate
Range("A3").Select

ReplaceLocalChar

Range("A3").Select
For RowNdx = 1 To 1374
    If Cells(RowNdx, 1).Value = "" Then
        Cells(RowNdx, 1).Value = "x"
        GoTo end_import
        End If
    Next RowNdx
    
end_import:

On Error GoTo 0
Application.ScreenUpdating = True

With ActiveSheet.UsedRange
    'StartRow = .Cells(2).Row
    StartRow = 3
    StartCol = .Cells(1).Column
    EndRow = .Cells(.Cells.Count).Row
    EndCol = .Cells(.Cells.Count).Column
    End With

For RowNdx = StartRow To EndRow
    If Cells(2, 7).Value = "Piece Description" Then
        If Cells(RowNdx, 7).Value = "DOPRAVNE NAKLADY" Then
            Cells(RowNdx, 20).Select
            Range(Selection, Selection.End(xlToLeft)).Select
            Range(Selection, Selection.End(xlToLeft)).Select
            Selection.Delete Shift:=xlUp
        Else
            GoTo next_row
            End If
        End If
next_row:
    Next RowNdx

End Sub



Attribute VB_Name = "Sheet1"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Control = "CommandButton1, 1, 0, MSForms, CommandButton"
Private Sub CommandButton1_Click()
'   On Error GoTo dalsie_macro
   ReplaceLocalChar
'dalsie_macro:
    DoTheExport
End Sub

Private Sub CommandButton2_Click()
    ImportObj
End Sub
Attribute VB_Name = "Sheet2"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Sheet3"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Control = "Label1, 1, 0, MSForms, Label"
Attribute VB_Control = "CustomerCCNumber, 2, 1, MSForms, TextBox"
Attribute VB_Control = "Label3, 3, 2, MSForms, Label"
Attribute VB_Control = "CompanyName2, 4, 3, MSForms, TextBox"
Attribute VB_Control = "Label2, 5, 4, MSForms, Label"
Attribute VB_Control = "CompanyName, 6, 5, MSForms, TextBox"
Attribute VB_Control = "Label4, 7, 6, MSForms, Label"
Attribute VB_Control = "ContactPerson, 8, 7, MSForms, TextBox"
Attribute VB_Control = "Label5, 9, 8, MSForms, Label"
Attribute VB_Control = "StreetName, 10, 9, MSForms, TextBox"
Attribute VB_Control = "Label6, 11, 10, MSForms, Label"
Attribute VB_Control = "HouseNumber, 12, 11, MSForms, TextBox"
Attribute VB_Control = "label7, 13, 12, MSForms, Label"
Attribute VB_Control = "ZIPCode, 14, 13, MSForms, TextBox"
Attribute VB_Control = "Label8, 15, 14, MSForms, Label"
Attribute VB_Control = "City, 16, 15, MSForms, TextBox"
Attribute VB_Control = "label9, 17, 16, MSForms, Label"
Attribute VB_Control = "ISOCountryCode, 18, 17, MSForms, TextBox"
Attribute VB_Control = "Label10, 19, 18, MSForms, Label"
Attribute VB_Control = "EmailAddress, 20, 19, MSForms, TextBox"
Attribute VB_Control = "Label11, 21, 20, MSForms, Label"
Attribute VB_Control = "TelephoneNumber, 22, 21, MSForms, TextBox"
Attribute VB_Control = "Label12, 23, 22, MSForms, Label"
Attribute VB_Control = "Remark, 24, 23, MSForms, TextBox"
Attribute VB_Control = "Label13, 25, 24, MSForms, Label"
Attribute VB_Control = "MeterNumber, 26, 25, MSForms, TextBox"
Attribute VB_Control = "Label14, 27, 26, MSForms, Label"
Attribute VB_Control = "Opunit, 28, 27, MSForms, TextBox"
Attribute VB_Control = "Label15, 29, 28, MSForms, Label"
Attribute VB_Control = "BankSortCode, 30, 29, MSForms, TextBox"
Attribute VB_Control = "Label16, 31, 30, MSForms, Label"
Attribute VB_Control = "BankAccountNumber, 32, 31, MSForms, TextBox"
Attribute VB_Control = "Label17, 33, 32, MSForms, Label"
Attribute VB_Control = "BankName, 34, 33, MSForms, TextBox"
Attribute VB_Control = "Label18, 35, 34, MSForms, Label"
Attribute VB_Control = "BankAccountHolder, 36, 35, MSForms, TextBox"
Attribute VB_Control = "Label19, 37, 36, MSForms, Label"
Attribute VB_Control = "BankPurpose, 38, 37, MSForms, TextBox"
Attribute VB_Control = "Label20, 39, 38, MSForms, Label"
Attribute VB_Control = "ContractNumber, 40, 39, MSForms, TextBox"
Attribute VB_Control = "Label21, 41, 40, MSForms, Label"
Attribute VB_Control = "ScheduleNumber, 42, 41, MSForms, TextBox"
Attribute VB_Control = "Label22, 43, 42, MSForms, Label"
Attribute VB_Control = "VATNumber, 44, 43, MSForms, TextBox"
Attribute VB_Control = "Label23, 45, 44, MSForms, Label"
Attribute VB_Control = "EntryTermCode, 46, 45, MSForms, TextBox"
Attribute VB_Control = "Label24, 47, 46, MSForms, Label"
Attribute VB_Control = "DepotCode, 48, 47, MSForms, TextBox"
Attribute VB_Control = "Label25, 49, 48, MSForms, Label"
Attribute VB_Control = "Reserved3, 50, 49, MSForms, TextBox"
Attribute VB_Control = "Label26, 51, 50, MSForms, Label"
Attribute VB_Control = "Reserved1, 52, 51, MSForms, TextBox"
Attribute VB_Control = "Label27, 53, 52, MSForms, Label"
Attribute VB_Control = "Reserved2, 54, 53, MSForms, TextBox"
Attribute VB_Control = "Label28, 55, 54, MSForms, Label"
Attribute VB_Control = "AdditionalAddress, 56, 55, MSForms, TextBox"

Private Sub OnePickUpAddressForAllShipments_Click()
    If OnePickUpAddressForAllShipments.Value = True Then
        Sheets("PICK-UP").Visible = True
        Sheets("PICK-UP PER SHIPMENT").Visible = False
        Else
            Sheets("PICK-UP").Visible = False
            Sheets("PICK-UP PER SHIPMENT").Visible = True
        End If
End Sub

Private Sub OnePickUpAddressPerShipment_Click()
    If OnePickUpAddressPerShipment.Value = True Then
        Sheets("PICK-UP PER SHIPMENT").Visible = True
        Sheets("PICK-UP").Visible = False
        Else
            Sheets("PICK-UP PER SHIPMENT").Visible = False
            Sheets("PICK-UP").Visible = True
        End If
End Sub

Private Sub PickupAddressSenderAddress_Click()
    If PickupAddressSenderAddress.Value = True Then
        Sheets("PICK-UP PER SHIPMENT").Visible = False
        Sheets("PICK-UP").Visible = False
        End If
End Sub
Attribute VB_Name = "Sheet4"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Sheet5"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Sheet6"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Control = "Label1, 1, 0, MSForms, Label"
Attribute VB_Control = "CompanyName, 2, 1, MSForms, TextBox"
Attribute VB_Control = "Label2, 3, 2, MSForms, Label"
Attribute VB_Control = "StreetName, 4, 3, MSForms, TextBox"
Attribute VB_Control = "Label3, 5, 4, MSForms, Label"
Attribute VB_Control = "HouseNumber, 6, 5, MSForms, TextBox"
Attribute VB_Control = "Label4, 7, 6, MSForms, Label"
Attribute VB_Control = "ZIPCode, 8, 7, MSForms, TextBox"
Attribute VB_Control = "Label5, 9, 8, MSForms, Label"
Attribute VB_Control = "City, 10, 9, MSForms, TextBox"
Attribute VB_Control = "Label6, 11, 10, MSForms, Label"
Attribute VB_Control = "ISOCountryCode, 12, 11, MSForms, TextBox"
Attribute VB_Control = "Label7, 13, 12, MSForms, Label"
Attribute VB_Control = "CompanyName2, 14, 13, MSForms, TextBox"
Attribute VB_Control = "Label8, 15, 14, MSForms, Label"
Attribute VB_Control = "CompanyName3, 16, 15, MSForms, TextBox"
Attribute VB_Control = "Label9, 17, 16, MSForms, Label"
Attribute VB_Control = "CustomerIDNumber, 18, 17, MSForms, TextBox"
Attribute VB_Control = "Label10, 19, 18, MSForms, Label"
Attribute VB_Control = "ContactPerson, 20, 19, MSForms, TextBox"
Attribute VB_Control = "Label11, 21, 20, MSForms, Label"
Attribute VB_Control = "AdditionalAddress, 22, 21, MSForms, TextBox"
Attribute VB_Control = "Label12, 23, 22, MSForms, Label"
Attribute VB_Control = "ReceiverNumber, 24, 23, MSForms, TextBox"
Attribute VB_Control = "Label13, 25, 24, MSForms, Label"
Attribute VB_Control = "EmailAddress, 26, 25, MSForms, TextBox"
Attribute VB_Control = "Label14, 27, 26, MSForms, Label"
Attribute VB_Control = "TelephoneNumber, 28, 27, MSForms, TextBox"
Attribute VB_Control = "Label15, 29, 28, MSForms, Label"
Attribute VB_Control = "Salutation, 30, 29, MSForms, TextBox"
Attribute VB_Control = "Label16, 31, 30, MSForms, Label"
Attribute VB_Control = "VATNumber, 32, 31, MSForms, TextBox"
Attribute VB_Control = "Label17, 33, 32, MSForms, Label"
Attribute VB_Control = "Matchcode, 34, 33, MSForms, TextBox"
Attribute VB_Control = "Label18, 35, 34, MSForms, Label"
Attribute VB_Control = "DeliveryNote, 36, 35, MSForms, TextBox"
Attribute VB_Control = "Label19, 37, 36, MSForms, Label"
Attribute VB_Control = "InternalNote, 38, 37, MSForms, TextBox"
Attribute VB_Control = "Label20, 39, 38, MSForms, Label"
Attribute VB_Control = "ReceiverAccountNumber, 40, 39, MSForms, TextBox"
Attribute VB_Control = "Label21, 41, 40, MSForms, Label"
Attribute VB_Control = "DeliabilityNumber, 42, 41, MSForms, TextBox"
Attribute VB_Control = "Label22, 43, 42, MSForms, Label"
Attribute VB_Control = "CompanyName4, 44, 43, MSForms, TextBox"

Attribute VB_Name = "Tabelle1"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Tabelle2"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Tabelle3"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Tabelle4"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True

' InQuest injected base64 decoded content
' *fz{

INQUEST-PP=macro
