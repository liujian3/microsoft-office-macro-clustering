Attribute VB_Name = "AgencyAmounts"



Sub ViewServDetail()
' Purpose of macro is to hide the columns on the ServiceDetail worksheet where there is no data entered on AssumptionsSummary worksheet.
' This will clean up the ServiceDetail worksheet to make more manageable to see everything
Dim UniqueRng As Range
Dim Rng As Range, Cell As Range
 Dim StartTime As Double
Dim SecondsElapsed As Double
Dim LastRow As Integer
Dim LastRow2 As Integer
Dim ActSheet As Worksheet

Application.ScreenUpdating = False

Set ActSheet = ThisWorkbook.ActiveSheet

Call ViewAssumptions


'Sheet1.Range("ServNum") = Sheet16.Range("ServDetailNum")
'Call ViewAssumptions
LastRow = Sheet16.Range("A" & Rows.Count).End(xlUp).Row


'' This part now has formulas
'Sheet16.Select
'Sheet16.Range("ServDetailTop").Offset(1, 0).Resize(LastRow, 6).ClearContents

Sheet2.Visible = xlSheetVisible
Sheet3.Visible = xlSheetVisible

If Sheet16.Range("ServDetailTop") = 0 Then
Exit Sub

Else

''*****************This section is now formula driven and no longer need to obtain data from this sheet
'    Sheet3.Select
'    Sheet3.Range("DBTop").Select
'    ''Right here is the issue when there is only
'    Selection.AutoFilter Field:=2, Criteria1:=Sheet16.Range("E1") & "*"  'Criteria = SS*
'    Application.DisplayAlerts = False
'    Sheet3.UsedRange.Offset(1, 0).Resize(ActiveSheet.UsedRange.Rows.count - 1, 6).Rows.Copy
'    Application.DisplayAlerts = True
'
'   Sheet16.Range("ServDetailTop").Offset(1, 0).PasteSpecial xlPasteValues
'
'   'Clear the filter on DB Worksheet (Sheet3)
'    Sheet3.Select
'    Sheet3.Range("DBTop").Select
'    Selection.AutoFilter
    
'     NewDBLastRow = Sheet3.Range("A" & Rows.count).End(xlUp).Row
'     Sheet13.Range("AllocationTop").Offset(1, 0).Resize(LastRow, 6).Copy
'     Sheet3.Range("DBTop").Offset(NewDBLastRow, 0).PasteSpecial xlPasteValuesAndNumberFormats
End If

'
  '' This should be on the part where you select new service not on the SAVE
  Set UniqueRng = Sheet16.Range("UniqueItemcheck").Resize(1, 10)
  
  UniqueRng.EntireColumn.Hidden = False
  
 LastRow2 = Sheet16.Range("A" & Rows.Count).End(xlUp).Row
  
 Sheet16.Range("Sheet16Formulas").Copy
Sheet16.Range("UniqueItemcheck").Offset(1, 0).Resize(LastRow2 - 11).PasteSpecial xlPasteFormulas
Sheet16.Range("UniqueItemcheck").Offset(1, 0).Resize(LastRow2 - 11, 10).Copy
Sheet16.Range("UniqueItemcheck").Offset(1, 0).Resize(LastRow2 - 11, 10).PasteSpecial xlPasteValues
    Application.CutCopyMode = False


 
'Sheet1.Select

Call HideColumns
'If ActSheet = ActiveWorkbook.Sheet16 Then

Call ViewAllocations

ActSheet.Select
ActSheet.Range("D12").Select
'Sheet16.Range("ServDetailNum").Offset(0, 12).Select
'Else
'Sheet1.Select
'Sheet1.Range("C12").Select
'End If

'  SecondsElapsed = Round(Timer - StartTime, 2)
'
'Sheet16.Range("c2") = SecondsElapsed & " seconds"
 
Sheet2.Visible = xlSheetVeryHidden
Sheet3.Visible = xlSheetVeryHidden
 
    Application.ScreenUpdating = True
End Sub
Sub HideColumns()
Dim UniqueRng As Range
Dim Rng As Range, Cell As Range
  Dim StartTime As Double
Dim SecondsElapsed As Double
Dim LastRow As Integer

Set Rng = Sheet16.Range("HideColumns")
For Each Cell In Rng
     If Cell.Value = 0 Then
         Cell.EntireColumn.Hidden = True
         
     Else: Cell.EntireColumn.Hidden = False
     
     End If
 Next Cell

End Sub





Sub UpdateAssumptions()

Dim Rng As Range, res As Variant
Dim rngFY As Range, ResFy As Variant

  Dim StartTime As Double
Dim SecondsElapsed As Double
Dim lastRowDekPak2 As Integer
Dim LastRowDB As Integer

'Purpose of the macro is to populate the data on the assumptions worksheet based on the dropdown
    Application.ScreenUpdating = False
  
'Application.ScreenUpdating = False
Application.Calculation = xlAutomatic
    Sheet5.Visible = xlSheetVisible
    Sheet5.Select
    Sheet5.Range("DecPakTop").Select

Set Rng = Sheet5.Range("DecPakHeaders")
'need to setup the "ServCode" to refer to a named cell
res = Application.Match("ServCode", Rng, 0)

If Sheet5.Range("DecPakCount") > 0 Then
'    Delete rows where filter criteria is met.  Criteria is based on the dropdown on the AssumptionsSummary worksheet

    Selection.AutoFilter Field:=res, Criteria1:=Sheet1.Range("ServiceDec") & "*" 'Criteria = SS*
    Application.DisplayAlerts = False
    ActiveSheet.UsedRange.Offset(1, 0).Resize(ActiveSheet.UsedRange.Rows.Count - 1).Rows.Delete ' just dont understand why offset 2 and not 1 so header is not deleted
    Application.DisplayAlerts = True
    
     'Removes Filter on Sheet5
     Selection.AutoFilter
Else
End If

'        Sheet2.Range("ServAgy").Copy Sheet2.Range("B1").Offset(1, 0).Resize(lr4)
        Sheet1.Range("Assumptions").Copy 'Sheet2.Range("CopyFormulas").Offset(1, -7).Resize(lr4)

    lr3 = Sheet5.Range("A" & Rows.Count).End(xlUp).Row
    Sheet5.Range("DecPakTop").Offset(lr3, 0).PasteSpecial xlPasteValues


    lastRowDekPak2 = Sheet5.Range("A" & Rows.Count).End(xlUp).Row
    Sheet5.Range("DecPakFYSplits").Copy Sheet5.Range("DecPakTop").Offset(1, 11).Resize(lastRowDekPak2)
 
Application.Calculation = xlCalculationAutomatic


'Set the FY Split on the Service Info Worksheet
Sheet11.Select
Sheet11.Range("ServiceTop").Select

Set rngFY = Sheet11.Range("ServiceTop").Offset(0, 1).Resize(100, 1)
'need to setup the "ServCode" to refer to a named cell
ResFy = Application.Match(Sheet1.Range("ServiceDec"), rngFY, 0) - 1

    Sheet11.Range("ServiceTop").Offset(ResFy, 7) = Sheet1.Range("MSplit")
    Sheet11.Range("ServiceTop").Offset(ResFy, 8) = Sheet1.Range("PSplit")
    Application.DisplayAlerts = True

    LastRowDB = Sheet3.Range("A" & Rows.Count).End(xlUp).Row - 1
    Sheet3.Range("DBFormulas").Copy
    Sheet3.Range("DBTop").Offset(1, 6).Resize(LastRowDB).PasteSpecial xlPasteFormulas

    Sheet1.Select
    Sheet1.Range("Start").Offset(0, 2).Select

    Sheet5.Visible = xlSheetVeryHidden

Call CopiesFormulasToServiceOnly
'Call FundSplits
'Call FundSplitsFormulasOnly
Call HideColumns


 Sheet1.Select
 Sheet1.Range("F11").Select

    Application.ScreenUpdating = True

End Sub




Sub ViewAssumptions()

Dim msgRes As VbMsgBoxResult
Dim LastRow As Integer
'Changes filter to match on the ServDetail (Sheet16)
Sheet16.Range("ServDetailNum") = Sheet1.Range("ServNum")


'Application.ScreenUpdating = False

'copy formulas in hidden row 13 and copy in first section on assumptions sheet and then in second section
Sheet1.Range("AssumptionsFormula").Copy
Sheet1.Range("Start").Offset(0, 2).Resize(17).PasteSpecial xlPasteFormulas
Sheet1.Range("Start").Offset(0, 2).Resize(17, 6).Copy
Sheet1.Range("Start").Offset(0, 2).Resize(17).PasteSpecial xlPasteValues

Sheet1.Range("AssumptionsFormula").Copy
Sheet1.Range("Start").Offset(19, 2).Resize(10).PasteSpecial xlPasteFormulas
Sheet1.Range("Start").Offset(19, 2).Resize(10, 6).Copy
Sheet1.Range("Start").Offset(19, 2).Resize(10).PasteSpecial xlPasteValues
'Application.Calculation = xlCalculationAutomatic
'Copy formula to handle

Application.CutCopyMode = False

Sheet1.Range("ServNumOrg") = Sheet1.Range("ServNum")

'currently not used.  This cell was to check if changes are made on Assumptions worksheet
Sheet1.Range("ChangeChk") = 0

'copy formulas on Service Detail Sheet.  This will keep the Assumptions and the Detail Sheets in Synch with the drop down selection
LastRow2 = Sheet16.Range("A" & Rows.Count).End(xlUp).Row - 12
Sheet16.Range("Sheet16Formulas").Copy
Sheet16.Range("UniqueItemcheck").Offset(1, 0).Resize(LastRow2).PasteSpecial xlPasteFormulas
Sheet16.Range("UniqueItemcheck").Offset(1, 0).Resize(LastRow2, 10).Copy
Sheet16.Range("UniqueItemcheck").Offset(1, 0).Resize(LastRow2, 10).PasteSpecial xlPasteValues
    Application.CutCopyMode = False

End Sub

Sub UniqueItems()
Dim StartLastRow As Integer
Dim LastRow As Integer
Dim LastRow2 As Integer
Dim FinalLastRow As Integer
Dim LookupValue As Range
Dim res As Variant
Dim Res2 As Variant
Dim Rng As Range

'If Sheet1.Range("SelectAgencyCheck") <> 10 Then
'    MsgBox "Totals do not match on the Assumptions worksheet and ServDetail Sheet.  Must match on each sheet in order to save."
'    Exit Sub
'End If

'Should not need to below anymore.  Users will not be able to see column to enter data until they have updated the Assumptions worksheet.
'If Sheet16.Range("UniqueCheck") = 1 Then
'    MsgBox "Need to enter amount and information on the Assumptions worksheet first"
'    Exit Sub
'End If

Set Rng = Sheet8.Range("Sheet8Headers")
'Finds columns number to filter.  Changed below to just filter on column 3.
res = Application.Match("ServCode", Rng, 0)
Res2 = Application.Match("AssumptionAmount", Rng, 0)

Application.ScreenUpdating = False

    StartLastRow = Sheet8.Range("UniqueRows")
    
 Sheet8.Visible = xlSheetVisible
 Sheet8.Select
 Sheet8.Range("A1").Select
    
    If StartLastRow > 0 Then
    Sheet8.Select
    Selection.AutoFilter Field:=3, Criteria1:=Sheet1.Range("ServiceDec") ' & "*" 'Criteria = SS*
    Application.DisplayAlerts = False
    ActiveSheet.UsedRange.Offset(1, 0).Resize(ActiveSheet.UsedRange.Rows.Count - 1).Rows.Delete ' just dont understand why offset 2 and not 1 so header is not deleted
    Application.DisplayAlerts = True
    End If

     Selection.AutoFilter

For i = 1 To 10
    'Loop through each column where the amounts will manually entered for the unique decisions from bottom part of assumptions sheet
    If Sheet16.Range("UniqueItemcheck").Offset(0, i - 1) = 1 Then
        LastRow = Sheet8.Range("A" & Rows.Count).End(xlUp).Row
        LastRow2 = Sheet16.Range("A" & Rows.Count).End(xlUp).Row
        
        'Copy ServiceCode+Agy and AgyCode
        Sheet16.Range("UniqueDetail").Copy
        Sheet8.Range("Sheet8Start").Offset(LastRow, 1).PasteSpecial xlPasteValues
        'Copy agy amount
        Sheet16.Range("UniqueItemCheck").Offset(1, i - 1).Resize(LastRow2, 1).Copy
        Sheet8.Range("Sheet8Start").Offset(LastRow, 4).PasteSpecial xlPasteValues

'copy the 2 digit code for the service
 Sheet8.Range("Sheet8Start").Offset(LastRow, 0).Resize(LastRow2 - 12, 1) = Sheet16.Range("UniqueItemCheck").Offset(-4, i - 1)
' copy the Fy Split and whether its M/P from the Assumptions sheet
 Sheet8.Range("Sheet8Start").Offset(LastRow, 5).Resize(LastRow2 - 12, 1) = Sheet1.Range("Start").Offset(18 + i, 4)
 Sheet8.Range("Sheet8Start").Offset(LastRow, 6).Resize(LastRow2 - 12, 1) = Sheet1.Range("Start").Offset(18 + i, 5)
    End If
    
 Next
    'need to only do this part when not all the items are 0 or blank********************THIS NEEDS FIXING
    'Filter the table where the agency amounts are blank.  This will keep the table small
    If Sheet16.Range("UniqueCheck") = 1 Then
    Sheet8.Select
    Sheet8.Range("Sheet8Start").Select
    Selection.AutoFilter Field:=5, Criteria1:=0, Operator:=xlOr, Criteria2:="" 'Criteria = SS*
    Application.DisplayAlerts = False
    ActiveSheet.UsedRange.Offset(1, 0).Resize(ActiveSheet.UsedRange.Rows.Count - 1).Rows.Delete
    Application.DisplayAlerts = True
    End If
        
     'Removes Filter on Sheet8
     Selection.AutoFilter

    ' Populate all Four fiscal years with formala
    FinalLastRow = Sheet8.Range("A" & Rows.Count).End(xlUp).Row - 1
    
    If FinalLastRow > 0 Then
    Sheet8.Range("Sheet8Formulas").Copy
    Sheet8.Range("Sheet8Start").Offset(1, 7).Resize(FinalLastRow).PasteSpecial xlPasteFormulas
    End If
     
    Sheet16.Select
    Sheet16.Range("D12").Select
    
Call CopiesFormulasToServiceOnly

 Sheet8.Visible = xlSheetHidden

 Sheet16.Select
 Sheet16.Range("F11").Select
 
Application.ScreenUpdating = True
        
End Sub


Sub FundSplits()

Dim LastRowMiscLoadDB1 As Integer
Dim LastRowMiscLoadDB2 As Integer
Dim LastRowMiscLoadDB3 As Integer
Dim FinalRowMiscLoadDB As Integer
Dim LastRowFundSplits As Integer
Dim MiscLoadRng1 As Range
Dim MiscLoadFormularng As Range
Dim LastRowServInfo As Integer
Dim ServiceCode As String
Dim ServiceCodeNum As Integer
Dim SecondsElapsed As Double
Dim split9 As Range, split10 As String
Dim WinSumCode As String
 
 Application.ScreenUpdating = False
 
 Sheet2.Visible = xlSheetVisible
 
 StartTime = Timer
 
Application.EnableEvents = False
'Application.Calculation = xlCalculationManual

'Find last row Fund splits and take out the header rows
 LastRowFundSplits = Sheet10.Range("A" & Rows.Count).End(xlUp).Row - 1

'Delete All Data on MiscLoadDB
LastRowMiscLoadDB1 = Sheet2.Range("A" & Rows.Count).End(xlUp).Row
Set MiscLoadRng1 = Sheet2.Range("Top").Offset(1, 0).Resize(LastRowMiscLoadDB1, 26)

MiscLoadRng1.ClearContents
  

'Find out how many services there are in the Service Info Table.  The minus six is to exclude the header rows

LastRowServInfo = Sheet11.Range("D" & Rows.Count).End(xlUp).Row - 6

For iAgy = 1 To LastRowServInfo
 
 ServiceCode = Sheet11.Range("ServiceTop").Offset(iAgy, 1).Resize(1, 1)
 ServiceCodeNum = Sheet11.Range("ServiceTop").Offset(iAgy, -1).Resize(1, 1) - 1
 WinSumCode = Sheet11.Range("ServiceTop").Offset(iAgy, 3).Resize(1, 1).Text
 
 LastRowMiscLoadDB2 = Sheet2.Range("A" & Rows.Count).End(xlUp).Row

'Copy AgyFundsplits
Sheet10.Range("TopFundDB").Offset(1, 0).Resize(LastRowFundSplits, 5).Copy
Sheet2.Range("Top").Offset(LastRowMiscLoadDB2, 2).PasteSpecial xlPasteValues
'Copies the FundSplits percentages
Sheet10.Range("TopFundDB").Offset(1, ServiceCodeNum).Resize(LastRowFundSplits, 1).Copy
Sheet2.Range("Top").Offset(LastRowMiscLoadDB2, 7).PasteSpecial xlPasteValues

'Find New LastRow in Misc Load sheet to find the start and size to copy remaining information
 LastRowMiscLoadDB3 = Sheet2.Range("A" & Rows.Count).End(xlUp).Row
 
 Sheet2.Range("Top").Offset(LastRowMiscLoadDB2, 0).Resize(LastRowFundSplits, 1) = ServiceCode
  Sheet2.Range("Top").Offset(LastRowMiscLoadDB2, 1).Resize(LastRowFundSplits, 1) = WinSumCode

Next iAgy

'Call CopiesFormulasToServiceOnly
Call FundSplitsFormulasOnly

 Sheet2.Visible = xlSheetHidden

End Sub


Sub FundSplitsFormulasOnly()

Dim LastRowMiscLoadDB1 As Integer
Dim LastRowMiscLoadDB2 As Integer
Dim LastRowMiscLoadDB3 As Integer
Dim FinalRowMiscLoadDB As Integer
Dim LastRowFundSplits As Integer
Dim MiscLoadRng1 As Range
Dim MiscLoadFormularng As Range
Dim LastRowServInfo As Integer
Dim ServiceCode As String
Dim ServiceCodeNum As Integer

Dim SecondsElapsed As Double
Dim split9 As Range, split10 As String
 
 Application.ScreenUpdating = False
 

 
Application.EnableEvents = False
'Application.Calculation = xlCalculationManual


'FinalRowMiscLoadDB
 FinalRowMiscLoadDB = Sheet2.Range("A" & Rows.Count).End(xlUp).Row - 1

Application.Calculation = xlCalculationManual

Sheet2.Range("MiscLoadDBFormulas").Copy
Sheet2.Range("Top").Offset(1, 8).Resize(FinalRowMiscLoadDB).PasteSpecial xlPasteFormulas
'MiscLoadFormularng
Application.Calculation = xlCalculationAutomatic

Set MiscLoadDBFormulas = Sheet2.Range("Top").Offset(1, 8).Resize(FinalRowMiscLoadDB, 9)
MiscLoadDBFormulas.Copy
MiscLoadDBFormulas.PasteSpecial xlPasteValues

Sheet1.Select
Sheet1.Range("C12").Select

'MiscLoadDBFormulas
Application.ScreenUpdating = True

'MsgBox "Complete"

End Sub


Sub ViewAllocations()

Dim Rng As Range, res As Variant
Dim rngFY As Range, ResFy As Variant
Dim StartTime As Double
Dim SecondsElapsed As Double
Dim LastRow As Integer
Dim LastRowDB As Integer
Dim FinalLastRow As Integer
Dim FilteredRowsDB As Integer
Dim NewAllocationLastRow As Integer


'Purpose of the macro is to Update New Allocation %
    Application.ScreenUpdating = False
    Sheet13.Select
    Sheet13.Range("A1").Select
'Clear Data on the Allocation Screen
LastRow = Sheet13.Range("A" & Rows.Count).End(xlUp).Row - 5
'
'If LastRow > 0 Then
'Sheet13.Range("AllocationTop").Offset(1, 0).Resize(LastRow, 6).Select
'Sheet13.Range("AllocationTop").Offset(1, 0).Resize(LastRow, 6).ClearContents
'Else
'End If

    Sheet13.Range("AllocationFormula").Copy
    'Find the last row when new list and only the agency code and agency title are populated minus the header rows
    NewAllocationLastRow = Sheet13.Range("C" & Rows.Count).End(xlUp).Row - 5
    Sheet13.Range("AllocationTop").Offset(1, 4).Resize(LastRow).PasteSpecial xlPasteFormulas
    
    Sheet13.Range("AllocationTop").Offset(1, 4).Resize(LastRow, 2).Copy
    Sheet13.Range("AllocationTop").Offset(1, 4).Resize(LastRow, 2).PasteSpecial xlPasteValuesAndNumberFormats

Application.CutCopyMode = False

''    Delete rows where filter criteria is met.  Criteria is based on the dropdown on the AssumptionsSummary worksheet
'    Sheet3.Visible = xlSheetVisible
'    Sheet3.Select
'    Sheet3.Range("A1").Select

'    Selection.AutoFilter Field:=2, Criteria1:=Sheet13.Range("AllocationFormula").Offset(0, 1) & "*" 'Criteria = SS*
'    Application.DisplayAlerts = False
'
'     'Find the lastRow on the DB worksheet minus top header
'    LastRowDB = Sheet3.Range("A" & Rows.count).End(xlUp).Row - 1
'
 ''Copy Filtered Rows on the DB sheet and paste them into the Allocation worksheet
'Check if after rows have been filtered if there is any data.  If there is not then probably a new service
'if new service then need to populate a agency list with no allocations or current balances to start from scratch
'
'FilteredRowsDB = Sheet3.Range("A" & Rows.count).End(xlUp).Row - 1
'
' If FilteredRowsDB = 0 Then
'    Sheet7.Range("AgencyAllocationList").Copy
'    Sheet13.Range("AllocationTop").Offset(1, 2).PasteSpecial xlPasteValuesAndNumberFormats
'
'    'Add Formulas in columns A and B to get the ServCode and ServCode+AgyCode
'    Sheet13.Range("AllocationFormula").Copy
'    'Find the last row when new list and only the agency code and agency title are populated minus the header rows
'    NewAllocationLastRow = Sheet13.Range("C" & Rows.count).End(xlUp).Row - 5
'    Sheet13.Range("AllocationTop").Offset(4, 1).Resize(NewAllocationLastRow).PasteSpecial xlPasteFormulas
'
'
' Else
'    'If the service is not new and there are currently allocations and balances in the DB worksheet
'    Sheet3.Range("DBTop").Offset(1, 0).Resize(LastRowDB, 6).Copy
'    Sheet13.Range("AllocationTop").Offset(1, 0).PasteSpecial xlPasteValuesAndNumberFormats
' End If
'
'    Sheet3.Select
'    Sheet3.Range("A1").Select
'    Selection.AutoFilter
    
    Sheet13.Select
    Sheet13.Range("C5").Select

    Sheet2.Visible = xlSheetVeryHidden
    Sheet3.Visible = xlSheetVeryHidden
    Application.ScreenUpdating = True
    


End Sub


Sub UpdateAllocations()
Dim Rng As Range, res As Variant
Dim rngFY As Range, ResFy As Variant
Dim StartTime As Double
Dim SecondsElapsed As Double
Dim LastRow As Integer
Dim LastRowDB As Integer
Dim FinalLastRow As Integer
Dim FilteredRowsDB As Integer
Dim NewDBLastRow As Integer
Dim rngAllocations As Range

    Application.ScreenUpdating = False
    
    Sheet3.Visible = xlSheetVisible
    'Clear any data that is filtered on the DB worksheet for updated data to come in from the Allocation Worksheet
     LastRow = Sheet13.Range("C" & Rows.Count).End(xlUp).Row - 5
  
      Sheet13.Range("A1").Resize(1, 2).Copy
      Sheet13.Range("AllocationTop").Offset(1, 0).Resize(LastRow).PasteSpecial xlPasteFormulas
      Set rngAllocations = Sheet13.Range("AllocationTop").Offset(1, 0).Resize(LastRow, 2)
'    Set MiscLoadDBFormulas = Sheet2.Range("Top").Offset(1, 17).Resize(FinalRowMiscLoadDB, 4)
'      rngAllocations.Copy
'      rngAllocations.PasteSpecial xlPasteValues
     
If Sheet13.Range("A1").Offset(0, 2) = 0 Then
     LastRowDB = Sheet3.Range("A" & Rows.Count).End(xlUp).Row
     
     Sheet13.Range("AllocationTop").Offset(1, 0).Resize(LastRow, 6).Copy
     Sheet3.Range("DBTop").Offset(LastRowDB, 0).PasteSpecial xlPasteValuesAndNumberFormats
Else
    Sheet3.Select
    Sheet3.Range("DBTop").Select
    ''Right here is the issue when there is only
    Selection.AutoFilter Field:=2, Criteria1:=Sheet13.Range("A1").Offset(0, 1) & "*"  'Criteria = SS*
    Application.DisplayAlerts = False
    Sheet3.UsedRange.Offset(1, 0).Resize(ActiveSheet.UsedRange.Rows.Count - 1).Rows.Delete
    Application.DisplayAlerts = True
   
   'Clear the filter on DB Worksheet (Sheet3)
    Selection.AutoFilter
    
     NewDBLastRow = Sheet3.Range("A" & Rows.Count).End(xlUp).Row
     Sheet13.Range("AllocationTop").Offset(1, 0).Resize(LastRow, 6).Copy
     Sheet3.Range("DBTop").Offset(NewDBLastRow, 0).PasteSpecial xlPasteValuesAndNumberFormats
End If
  
    FinalLastRow = Sheet3.Range("A" & Rows.Count).End(xlUp).Row - 1
    Sheet3.Range("DBFormulas").Copy
    Sheet3.Range("DBTop").Offset(1, 6).Resize(FinalLastRow).PasteSpecial xlPasteFormulasAndNumberFormats
    
    Call FundSplits
    
    Sheet3.Visible = xlSheetVeryHidden
    
    Call ViewServDetail
    
    MsgBox "Allcoations and Fund splits have been successfully saved"

    Sheet13.Select
    Sheet13.Range("C5").Select
  
    Application.ScreenUpdating = True

End Sub

Sub SaveNewAgency()
Dim LastRow As Integer
Dim AgyCode As String
Dim Agytitle As String
     
     LastRow = Sheet12.Range("H" & Rows.Count).End(xlUp).Row - 2
     
     If Sheet13.Range("NewAgency") = "" Then
        Exit Sub
     Else
        AgyCode = Sheet13.Range("NewAgency").Text
        Agytitle = Sheet13.Range("NewAgency").Offset(0, 2).Text
        
        Sheet12.Range("AgencyTop").Offset(LastRow, 0) = AgyCode + "-" + Agytitle
     End If
     
MsgBox "Agency has been Saved"

End Sub



Sub FixRounding()
Dim LastRowMiscLoadDB1 As Integer
Dim LastRowMiscLoadDB2 As Integer
Dim LastRowMiscLoadDB3 As Integer
Dim FinalRowMiscLoadDB As Integer
Dim LastRowFundSplits As Integer
Dim MiscLoadRng1 As Range
Dim MiscLoadFormularng As Range
Dim LastRowServInfo As Integer
Dim ServiceCode As String
Dim ServiceCodeNum As Integer
Dim ActSheet As Worksheet

Dim StartTime As Double
Dim SecondsElapsed As Double

Application.ScreenUpdating = False

Call FundSplitsFormulasOnly

'If Sheet2.Range("ZeroCheck") = 0 Then
'Exit Sub
'End If

 StartTime = Timer
 
Set ActSheet = ThisWorkbook.ActiveSheet
'Dim SecondsElapsed As Double
'Dim split9 As Range, split10 As String
 
 
    Sheet2.Visible = xlSheetVisible
    
 
Application.EnableEvents = False
'Application.Calculation = xlCalculationManual

Application.CutCopyMode = False

'FinalRowMiscLoadDB
 FinalRowMiscLoadDB = Sheet2.Range("A" & Rows.Count).End(xlUp).Row - 1

Application.Calculation = xlCalculationManual

Call CopyRankFormulas

Sheet2.Range("RoundingRank").Copy
Sheet2.Range("Top").Offset(1, 17).Resize(FinalRowMiscLoadDB).PasteSpecial xlPasteFormulas


Application.Calculation = xlCalculationAutomatic

Set MiscLoadDBFormulas = Sheet2.Range("Top").Offset(1, 17).Resize(FinalRowMiscLoadDB, 4)
MiscLoadDBFormulas.Copy
MiscLoadDBFormulas.PasteSpecial xlPasteValues


Application.CutCopyMode = False

Sheet1.Select
Sheet1.Range("D15").Select

Application.ScreenUpdating = True

  SecondsElapsed = Round(Timer - StartTime, 2)

MsgBox SecondsElapsed

End Sub


Sub CopyRankFormulas()

Sheet2.Range("AN1") = "=IF(AG1=0,0,(SUMPRODUCT(--(W1=$A$2:$A$15000),--(abs(AG1)<abs($K$2:$K$15000)))+1)+COUNTIFS(AG1:AG$2,AG1,W1:W$2,W1)-1)"
Sheet2.Range("AO1") = "=IF(AI1=0,0,(SUMPRODUCT(--(W1=$A$2:$A$15000),--(abs(AI1)<abs($M$2:$M$15000)))+1)+COUNTIFS(AI1:AI$2,AI1,W1:W$2,W1)-1)"

End Sub

Sub RunAll()

Call FundSplits
Call FixRounding

End Sub


 Sub CopiesFormulasToServiceOnly()
 Dim Rng As Range
 Dim Fmla As Range
 Dim Fmla2 As Range
 Dim ValueRange As Range
 Dim LastRowMiscLoadDB3 As Integer
 
 
     Sheet2.Visible = xlSheetVisible
     Sheet2.Select
    Sheet2.Range("Top").Select
'     Selection.AutoFilter
     
    ''Right here is the issue when there is only
    Selection.AutoFilter Field:=1, Criteria1:=Sheet1.Range("ServiceDec")  'Criteria = SS*
    Application.DisplayAlerts = False
'    Sheet3.UsedRange.Offset(1, 0).Resize(ActiveSheet.UsedRange.Rows.count - 1).Rows.Delete
 LastRowMiscLoadDB3 = Sheet2.Range("A" & Rows.Count).End(xlUp).Row
   
   'Clear the filter on DB Worksheet (Sheet3)
'    Selection.AutoFilter
'
'     NewDBLastRow = Sheet3.Range("A" & Rows.count).End(xlUp).Row
'     Sheet13.Range("AllocationTop").Offset(1, 0).Resize(LastRow, 6).Copy
'     Sheet3.Range("DBTop").Offset(NewDBLastRow, 0).PasteSpecial xlPasteValuesAndNumberFormats
 
 Set Fmla = Sheet2.Range("MiscLoadDBFormulas")
 Set Fmla2 = Sheet2.Range("RoundingRank")
 
 Application.Calculation = xlCalculationManual
 
 Set Rng = Sheet2.Range("Top").Offset(1, 8).Resize(LastRowMiscLoadDB3)
 Fmla.Copy
 Rng.SpecialCells(xlCellTypeVisible).PasteSpecial (xlPasteFormulas)
 
 Set Rng = Sheet2.Range("Top").Offset(1, 17).Resize(LastRowMiscLoadDB3)
 Fmla2.Copy
 Rng.SpecialCells(xlCellTypeVisible).PasteSpecial (xlPasteFormulas)
 
  Set ValueRange = Sheet2.Range("Top").Offset(1, 8).Resize(LastRowMiscLoadDB3, 13).SpecialCells(xlCellTypeVisible)
  
Application.Calculation = xlCalculationAutomatic
  
  ValueRange.Copy
  ValueRange.PasteSpecial xlPasteValues
 
     Application.DisplayAlerts = True
 
 Selection.AutoFilter
 
 End Sub

Attribute VB_Name = "AssumptionsSummary"
Sub AssumptionSummary()
'PURPOSE: Automatically readjust a Pivot Table's data source range
'SOURCE: www.TheSpreadsheetGuru.com/The-Code-Vault

Dim Data_sht As Worksheet
Dim Pivot_sht As Worksheet
Dim StartPoint As Range
Dim DataRange As Range
Dim PivotName As String
Dim NewRange As String


    Application.ScreenUpdating = False
    
    Sheet5.Visible = xlSheetVisible
Sheet5.Select
Sheet5.Range("A1").Select

'Find Last row on MiscDB sheet
     LastRowDB = Sheet5.Range("A" & Rows.Count).End(xlUp).Row

'Determine the data range you want to pivot
  Set sht = ThisWorkbook.Worksheets("DecPak")
     Set DataRange = Sheet5.Range("A1").Resize(LastRowDB, 18)
'Set Variables Equal to Data Sheet and Pivot Sheet
  Set Data_sht = ThisWorkbook.Worksheets("DecPak")
  Set Pivot_sht = ThisWorkbook.Worksheets("AssumptionsSummary")

'Enter in Pivot Table Name
  PivotName = "PivotTable1"

'Dynamically Retrieve Range Address of Data
  Set StartPoint = Data_sht.Range("A1")
'  Set DataRange = Data_sht.Range(StartPoint, StartPoint.SpecialCells(xlLastCell))
  
  NewRange = Data_sht.Name & "!" & _
    DataRange.Address(ReferenceStyle:=xlR1C1)

'Make sure every column in data set has a heading and is not blank (error prevention)
  If WorksheetFunction.CountBlank(DataRange.Rows(1)) > 0 Then
    MsgBox "One of your data columns has a blank heading." & vbNewLine _
      & "Please fix and re-run!.", vbCritical, "Column Heading Missing!"
    Exit Sub
  End If

'Change Pivot Table Data Source Range Address
  Pivot_sht.PivotTables(PivotName).ChangePivotCache _
    ThisWorkbook.PivotCaches.Create( _
    SourceType:=xlDatabase, _
    SourceData:=NewRange)
      
'Ensure Pivot Table is Refreshed
  Pivot_sht.PivotTables(PivotName).RefreshTable

    Sheet5.Visible = xlSheetVeryHidden

'Complete Message
'  MsgBox PivotName & "'s data source range has been successfully updated!"
 Sheet19.Select
 Sheet19.Range("F11").Select

    Application.ScreenUpdating = True

End Sub

Attribute VB_Name = "LEAPDoc"
Sub LEAPDoc()
Dim StartRow As Long, EndRow As Long, J As Integer, K As Long, L As Integer
Dim FinalRow As Integer
Dim LEAPDocEndRow As Integer
'Assuming your data is in Sheets(1) and 'All Codes' is in column 'C'
Application.ScreenUpdating = False
StartRow = 8
Sheet14.Select
Sheet14.Range("A6:K2500").ClearContents
'Sheets(2).Columns("A:IV").Clear
Sheet17.Select
Sheet17.Cells(1, 3).Select

 FinalRow = Sheet17.Range("A" & Rows.Count).End(xlUp).Row - 8

Sheet17.Range("A8").Offset(1, 0).Resize(FinalRow).Copy

Sheet14.Select
Sheet14.Range("A7").Select
    Selection.PasteSpecial Paste:=xlPasteValues, Operation:=xlNone, SkipBlanks _
        :=False, Transpose:=False
        
 LEAPDocEndRow = Sheet14.Range("A" & Rows.Count).End(xlUp).Row - 7
        
Sheet14.Range("A6").Resize(LEAPDocEndRow).RemoveDuplicates Columns:=1, Header:=xlYes


Sheets(1).Cells(1, 4).Select
Sheets(1).Cells(ActiveSheet.Rows.Count, 4).Select
EndRow = Selection.End(xlUp).Row
Sheets(1).Range(Range(Cells(StartRow, 4), Cells(EndRow, 4)).Address).Copy


MsgBox "Done." & vbNewLine & "Unique records copied to clipboard"


End Sub

Option Explicit
Sub GetUniques()
' hiker95, 07/26/2012
' http://www.mrexcel.com/forum/showthread.php?649576-Extract-unique-values-from-one-column-using-VBA
Dim d As Object, c As Variant, i As Long, lr As Long

Sheet14.Select
Sheet14.Range("A6:K2500").ClearContents

Sheet17.Select


Set d = CreateObject("Scripting.Dictionary")
lr = Cells(Rows.Count, 2).End(xlUp).Row
c = Range("A9:A" & lr)
For i = 1 To UBound(c, 1)
  d(c(i, 1)) = 1
Next i
Sheet14.Range("A7").Resize(d.Count) = Application.Transpose(d.keys)
End Sub
Attribute VB_Name = "MiscLoadPivot"



Sub AdjustPivotDataRange()
'PURPOSE: Automatically readjust a Pivot Table's data source range
'SOURCE: www.TheSpreadsheetGuru.com/The-Code-Vault

Dim Data_sht As Worksheet
Dim Pivot_sht As Worksheet
Dim StartPoint As Range
Dim DataRange As Range
Dim PivotName As String
Dim NewRange As String

    Sheet2.Visible = xlSheetVisible
Sheet2.Select
Sheet2.Range("A1").Select

'Find Last row on MiscDB sheet
     LastRowDB = Sheet2.Range("A" & Rows.Count).End(xlUp).Row

'Determine the data range you want to pivot
  Set sht = ThisWorkbook.Worksheets("miscloaddb")
     Set DataRange = Sheet2.Range("Top").Resize(LastRowDB, 21)
'Set Variables Equal to Data Sheet and Pivot Sheet
  Set Data_sht = ThisWorkbook.Worksheets("MiscLoadDB")
  Set Pivot_sht = ThisWorkbook.Worksheets("PivotMiscLoad")

'Enter in Pivot Table Name
  PivotName = "PivotTable1"

'Dynamically Retrieve Range Address of Data
  Set StartPoint = Data_sht.Range("A1")
'  Set DataRange = Data_sht.Range(StartPoint, StartPoint.SpecialCells(xlLastCell))
  
  NewRange = Data_sht.Name & "!" & _
    DataRange.Address(ReferenceStyle:=xlR1C1)

'Make sure every column in data set has a heading and is not blank (error prevention)
  If WorksheetFunction.CountBlank(DataRange.Rows(1)) > 0 Then
    MsgBox "One of your data columns has a blank heading." & vbNewLine _
      & "Please fix and re-run!.", vbCritical, "Column Heading Missing!"
    Exit Sub
  End If

'Change Pivot Table Data Source Range Address
  Pivot_sht.PivotTables(PivotName).ChangePivotCache _
    ThisWorkbook.PivotCaches.Create( _
    SourceType:=xlDatabase, _
    SourceData:=NewRange)
      
'Ensure Pivot Table is Refreshed
  Pivot_sht.PivotTables(PivotName).RefreshTable

    Sheet2.Visible = xlSheetVeryHidden

'Complete Message
'  MsgBox PivotName & "'s data source range has been successfully updated!"

End Sub

Sub CreateMiscLoad()
'PURPOSE: Filter on a single item with the Report Filter field
'SOURCE: www.TheSpreadsheetGuru.com
Dim ws As Worksheet
Dim dd As DropDown
Dim ddItemGroup As DropDown
Dim ddWinSumCode As DropDown
Dim ddAnalyst As DropDown
Dim sWinSumCode As String
    
Dim pf As PivotField
Dim pf2 As PivotField
Dim pf3 As PivotField
Dim pf4 As PivotField



Call FixRounding

Call AdjustPivotDataRange
Call ClearMiscLoad

Application.ScreenUpdating = False

Set pf = Sheet17.PivotTables("PivotTable1").PivotFields("TranspoFlag")
Set pf2 = Sheet17.PivotTables("PivotTable1").PivotFields("WinSumCode")
Set pf3 = Sheet17.PivotTables("PivotTable1").PivotFields("MaintCheck")
Set pf4 = Sheet17.PivotTables("PivotTable1").PivotFields("PolicyCheck")

sWinSumCode = Sheet1.Range("WinSumCode")


Set dd = Sheet1.Shapes("BudetTypeDrop").OLEFormat.Object
Set ddAnalyst = Sheet1.Shapes("DropDownAnalyst").OLEFormat.Object
Set ddItemGroup = Sheet1.Shapes("ItemGroupDrop").OLEFormat.Object

' Check which Analyst is creating MiscLoad.  If OFM then Omni and Tranpo will be included.  Otherwise House/Senate must specifiy which piece to load
    If ddAnalyst.List(ddAnalyst.ListIndex) = "OFM" Then
        pf.ClearAllFilters
    Else
        If dd.List(dd.ListIndex) = "Transpo" Then
             pf.ClearAllFilters
             pf.PivotFilters. _
                Add Type:=xlCaptionEquals, Value1:="1"
        ElseIf dd.List(dd.ListIndex) = "Omni" Then
                     pf.ClearAllFilters
             pf.PivotFilters. _
                Add Type:=xlCaptionEquals, Value1:="0"
        End If
    End If
    
    
 'Filter data depending if Maint or Policy to take out the zero records
     If ddItemGroup.List(ddItemGroup.ListIndex) = "Policy" Then
        pf3.ClearAllFilters
        pf4.ClearAllFilters
        pf4.PivotFilters. _
            Add xlCaptionDoesNotEqual, Value1:="1"
        
    ElseIf ddItemGroup.List(ddItemGroup.ListIndex) = "Maintenance" Then
        pf3.ClearAllFilters
        pf4.ClearAllFilters
        pf3.PivotFilters. _
            Add xlCaptionDoesNotEqual, Value1:="1"
    End If
 
 
 'Filter which WinSumCode is selected in drop down box
  If Sheet1.Range("WinSumCode") = "All" Then
    pf2.ClearAllFilters
 'This piece is only to be used if Leg takes what OFM does for 92R which is back out what happened last year.
 'If they keep what OFM has then the below code will just make sure 92R does not show on the MiscLoad sheet
'        pf2.PivotFilters. _
'        Add Type:=xlCaptionDoesNotEqual, Value1:="92R"
  Else
    pf2.ClearAllFilters
    pf2.PivotFilters. _
       Add Type:=xlCaptionEquals, Value1:=sWinSumCode
  End If



Call CopyToMiscLoad

'Changes Agency 359 to 300-359 for purpose of MiscLoad only.  For now model %'s and balances Charter is treated as its own ageny
Call FixCharterSchools

    Application.ScreenUpdating = True

    MsgBox "Complete"


End Sub
Sub CopyToMiscLoad()
'Purpose is to copy the records on the PivotMiscLoad onto the MiscLoad Worksheet

Dim LastRowPvtDB As Integer

LastRowPvtDB = Sheet17.Range("A" & Rows.Count).End(xlUp).Row - 8

    Sheet17.Visible = xlSheetVisible

If LastRowPvtDB > 0 Then

    'copy agency detail
    Sheet17.Range("PivotTop").Offset(3, 0).Resize(LastRowPvtDB, 3).Copy
    Sheet6.Range("MiscLoadTop").Offset(2, 0).PasteSpecial xlPasteValues
Else

End If

'Enter is either M4 or P4 based on the itemgrp drop down
If Sheet1.Range("ItemGrpNum") = 1 Then
    Sheet6.Range("MiscLoadTop").Offset(2, 3).Resize(LastRowPvtDB) = "M4"
ElseIf Sheet1.Range("ItemGrpNum") = 2 Then
    Sheet6.Range("MiscLoadTop").Offset(2, 3).Resize(LastRowPvtDB) = "P4"
End If
'copy Item
Sheet17.Range("PivotTop").Offset(3, 3).Resize(LastRowPvtDB, 1).Copy
Sheet6.Range("MiscLoadTop").Offset(2, 4).PasteSpecial xlPasteValues
'Copy formula to get the Item Title
Sheet6.Range("MiscLoadFormula").Copy
Sheet6.Range("MiscLoadTop").Offset(2, 5).Resize(LastRowPvtDB).PasteSpecial xlPasteFormulas
Sheet6.Range("MiscLoadTop").Offset(2, 5).Resize(LastRowPvtDB).Copy
Sheet6.Range("MiscLoadTop").Offset(2, 5).Resize(LastRowPvtDB).PasteSpecial xlPasteValues

'copy Fund and AppropType
Sheet17.Range("PivotTop").Offset(3, 4).Resize(LastRowPvtDB, 2).Copy
Sheet6.Range("MiscLoadTop").Offset(2, 6).PasteSpecial xlPasteValues

'determin if  loading Maint or Policy to determine which columns to load.  1 = Maint(order in dropdown), 2 = Policy
If Sheet1.Range("ItemGrpNum") = 1 Then
    Sheet17.Range("PivotTop").Offset(3, 9).Resize(LastRowPvtDB, 2).Copy
    Sheet6.Range("MiscLoadTop").Offset(2, 8).PasteSpecial xlPasteValues
ElseIf Sheet1.Range("ItemGrpNum") = 2 Then
    Sheet17.Range("PivotTop").Offset(3, 11).Resize(LastRowPvtDB, 2).Copy
    Sheet6.Range("MiscLoadTop").Offset(2, 8).PasteSpecial xlPasteValues
End If

    Sheet17.Visible = xlSheetVeryHidden

End Sub

Sub ClearMiscLoad()

Dim LastRowMiscLoad As Integer
Dim Rng As Range

Sheet6.Visible = xlSheetVisible
Sheet6.Select
Sheet6.Range("A2").Select
Selection.AutoFilter
'Sheet6.ShowAllData


'Find LastRow in MiscLoad
LastRowMiscLoad = Sheet6.Range("A" & Rows.Count).End(xlUp).Row - 2

'Set rng = Sheet6.Range("MiscLoadTop").Offset(2, 0).Resize(LastRow, 12)
'Sheet2.Visible = xlSheetVisible
Sheet6.Visible = xlSheetVisible

If LastRowMiscLoad > 0 Then

Sheet6.Select
    Sheet6.Range("MiscLoadTop").Offset(2, 0).Resize(LastRowMiscLoad, 12).Select
    Sheet6.Range("MiscLoadTop").Offset(2, 0).Resize(LastRowMiscLoad, 12).ClearContents

Else

End If

End Sub


Sub Whatever()
    Dim someLargeObject As SomeObject

    'expensive computation

    Set someLargeObject = Nothing
End Sub


Sub FixCharterSchools()
    Dim lngRow As Long
    Dim BotRow As Long
    
    Cells(Rows.Count, "A").Select
    Selection.End(xlUp).Select
    BotRow = Selection.Row
    For lngRow = 1 To BotRow
        If UCase(Cells(lngRow, "A")) = "359" Then
            Cells(lngRow, "B") = "'359"
            Cells(lngRow, "A") = "'350"
        End If
    Next
End Sub

Attribute VB_Name = "Navigation"
Sub GoToFundSplits()
Sheet9.Select
Sheet9.Range("G10").Select

End Sub

Sub GoToServiceInfo()
Sheet11.Select
Sheet11.Range("E7").Select

End Sub


Sub GoToAllocations()
Sheet13.Select
Sheet13.Range("C10").Select
End Sub

Sub GoToServiceDetail()

Call UpdateAssumptions

Sheet16.Select
Sheet16.Range("D11").Select
End Sub

Sub GotoAssumptions()
Sheet1.Select
Sheet1.Range("F14").Select
End Sub

Sub GotoReport()
Sheet42.Select
Sheet42.Range("C6").Select
End Sub


Attribute VB_Name = "PopulateFundSplits"
Sub populateForm()

 Dim BR As Integer, LC As Integer, Cell As Range, ServCode As String, dataRng As Range, lr3 As Long, refRng As Range, ref As Range, DataRng2 As Range
 Dim agyCount As Long
 Dim LookupRange As String, LookupValue3 As Long
 Dim LookupValue As Range
 Dim Split1 As Variant, split2 As Variant, split3 As Range, split4 As Range, Split5 As String, split6 As Variant, split7 As Integer, split8 As Integer
 Dim split9 As Range, split10 As String
 Dim DataRng3 As Range, LookupSplit As String
 
 ' purpose of macro to populate columns on AgencyList worksheet with amounts and Decision in header
' number of agencies used.  there are 4 extra rows in case of added agencies.


'Sets agency and Service to populate in the loop
'    Range("Crit1").Value = Range("AgencyCrit").Offset(split8).Resize(1, 1)
        
        
     split10 = Sheet9.Range("AgyCode")
'     agyCount = Sheet9.Range("AgencyCount")
        
    Sheet10.Select
'    Sheet10.ShowAllData
    Sheet10.Range("$A$2:$M$253").AutoFilter Field:=1, Criteria1:=split10
    
      Selection.AutoFilter
   
    
    Range("FundSplitTopFundDB").Offset(1, 0).Resize(agyCount, 1).Copy 'Destination:=Sheet10.Range("StartFund").Offset(1, 0)
    
    
    Sheet10.ShowAllData
    

 'Finds row to get the values
'    With Sheet4
'        Set split9 = Sheet10.Cells.Find(What:=split10, After:=.Cells(1, 1), LookIn:=xlValues, Lookat:=xlPart, Searchorder:=xlByColumns, SearchDirection:=xlNext, MatchCase:=False _
'                    , SearchFormat:=False)
'    End With
End Sub


Sub UpdateForm()
'    Dim c As Range
    Dim Rng As Range
    Dim lr As Long
    Dim split10 As String
       
    Sheet9.Unprotect
       

    Application.ScreenUpdating = False
        
        Sheet9.Range("clear").ClearContents
    Sheet10.Visible = True
        Sheet10.Select
        
        split10 = Sheet9.Range("AgyCode")
        
        lr = Cells(Rows.Count, "A").End(xlUp).Row
        Set Rng = Sheet10.Range("A1:S" & lr)
'        Range("E2:E" & LR).AdvancedFilter Action:=xlFilterCopy, CopyToRange:=Range("O1"), Unique:=True

If Sheet10.Range("ChckAgyExist") > 0 Then
            With Rng
                .AutoFilter
                .AutoFilter Field:=1, Criteria1:=split10
                .SpecialCells(xlCellTypeVisible).Copy
                
                Sheet9.Select
                Sheet9.Range("StartFund").Offset(2, 0).PasteSpecial Paste:=xlPasteValues, Operation:=xlNone, SkipBlanks:=False, Transpose:=False
            End With
            
            Sheet10.ShowAllData
End If


If Sheet9.Range("AgyChoice") = 1 Then
    Sheet10.Select
    Sheet10.Range("TopFundDB").Offset(1, 0).End(xlDown).End(xlToRight).Select
    Sheet10.UsedRange.Offset(1, 0).Resize(ActiveSheet.UsedRange.Rows.Count - 1).Rows.Copy
    
    Sheet9.Select
    Sheet9.Range("StartFund").Offset(3, 0).PasteSpecial Paste:=xlPasteValues, Operation:=xlNone, SkipBlanks:=False, Transpose:=False
    
End If
    Sheet9.Select
    Rows("9:9").Select
'    Range("F9").Activate
'    Selection.Delete Shift:=xlUp
       
     Sheet10.Visible = False
       
             Sheet9.Range("F6").Select

If Sheet9.Range("AgyCode") = "107" Or Sheet9.Range("AgyCode") = "300" Or Sheet9.Range("AgyCode") = "305" Or Sheet9.Range("AgyCode") = "305" Or Sheet9.Range("AgyCode") = "310" Or Sheet9.Range("AgyCode") = "340" Or Sheet9.Range("AgyCode") = "350" Or Sheet9.Range("AgyCode") = "307" Or Sheet9.Range("AgyCode") = "405" Then
    
    Range("G7").Select
    Selection.ClearComments
    
    Range("G7").Select
    Selection.AddComment
    ActiveCell.Comment.Visible = False
    
    Range("G7").Comment.Text Text:="Must select a Program for this agency."
'    Selection.ShapeRange.ScaleWidth 0.52, msoFalse, msoScaleFromTopFundDBLeft
'    Selection.ShapeRange.ScaleHeight 0.57, msoFalse, msoScaleFromTopFundDBLeft
'    Selection.ShapeRange.ScaleHeight 0.66, msoFalse, msoScaleFromTopFundDBLeft
'    Selection.ShapeRange.IncrementLeft -189.75
'    Selection.ShapeRange.IncrementTopFundDB -13.5
    
    
Else


        If Sheet9.Range("agychoice") = 1 Then
            Range("G7").Select
            Selection.ClearComments
            
            Range("G7").Select
        Else
            Range("G7").Select
            Selection.ClearComments
            
            Range("G7").Select
            Selection.AddComment
            ActiveCell.Comment.Visible = True
    
            Range("G7").Comment.Text Text:="Program column should be left blank for this agency."
        End If
End If

'Call CommentsFormat
 
If Sheet9.Range("AgyChoice") = 1 Then
    Sheet9.Protect DrawingObjects:=True, Contents:=True, Scenarios:=True
Else
End If

    Application.ScreenUpdating = True
    
End Sub

Sub CommentsFormat()
 Dim MyComments As Comment
 Dim cmt As Comment
 Dim LArea As Long

 
 For Each cmt In ActiveSheet.Comments
   cmt.Shape.TopFundDB = cmt.Parent.TopFundDB - 10
   cmt.Shape.Left = cmt.Parent.Offset(0, 1).Left - 150
   cmt.Shape.Width = 125
   cmt.Shape.Height = 30
   cmt.Shape.TextFrame.Characters.Font.Size = 8
Next
 
 End Sub

Sub SaveFundSplits()
    Dim LR2 As Long
    Dim Rng As Range
    Dim lr As Long
    Application.ScreenUpdating = False

'    Call ApprovalBox
If Sheet9.Range("AgyChoice") = 1 Then
    MsgBox "To update Agency/Fund splits choose one agency from drop down and then make necessary edits"
    
    Exit Sub
End If



Call DeleteCurrentFundSplits
     Sheet10.Visible = True
        
        lr = Sheet9.Cells(Rows.Count, "F").End(xlUp).Row
        LR2 = Sheet10.Cells(Rows.Count, "A").End(xlUp).Row
        
If lr <= 8 Then
    MsgBox "You must have at least one row of data with fund splits to be able to Save/Update"
    Exit Sub
End If

        
Sheet9.Range("Formulas").Copy
Sheet9.Range("StartFund").Offset(3, 0).Resize(lr - 9).PasteSpecial xlPasteFormulas
Sheet9.Range("StartFund").Offset(3, 0).Resize(lr - 9, 5).Copy
Sheet9.Range("StartFund").Offset(3, 0).Resize(lr - 9).PasteSpecial xlPasteValues
                
        
        Set Rng = Sheet9.Range("A10:S" & lr)
        
        Rng.Copy
        
        Sheet10.Select
        
'Need to paste at bottom of FundSplitsDB.  todo set the offset 1 to bottom of sheet
'resort table
'its pasting totals row

        Sheet10.Range("TopFundDB").Offset(LR2, 0).PasteSpecial Paste:=xlPasteValues, Operation:=xlNone, SkipBlanks:=False, Transpose:=False
       
'        LR = Cells(Rows.Count, "A").End(xlUp).Row
'        Set rng = Sheet10.Range("A1:Q" & LR)
        
            With Sheet10
                .Range("A1").CurrentRegion.Sort Key1:=.Range("A1"), Order1:=xlAscending, _
                Header:=xlYes, OrderCustom:=1, DataOption1:=xlSortNormal
            End With
        
        
       

             
         Application.CutCopyMode = False
             
'Call FundSplits
'Call FixRounding

     Sheet9.Select
     Sheet9.Range("F7").Select

    MsgBox "Fund Splits have been updated"
    
     Application.ScreenUpdating = True
        
'    Sheet9.Range("H6").Select
                    
     Sheet10.Visible = False

End Sub

Sub DeleteCurrentFundSplits()

Dim Rng As Range, res As Variant
  Dim StartFundTime As Double
Dim SecondsElapsed As Double

'Purpose of the macro is to populate the data on the assumptions worksheet based on the dropdown

  StartFundTime = Timer
  
Application.ScreenUpdating = False
'Application.Calculation = xlManual


'Set rng = Sheet10.Range("Headers")
''need to setup the "ServCode" to refer to a named cell
'res = Application.Match("AgyCode", rng, 0)
    Sheet10.Visible = True

If Sheet10.Range("ChckAgyExist") > 0 Then
'    Delete rows where filter criteria is met.  Criteria is based on the dropdown on the AssumptionsSummary worksheet
    Sheet10.Select
    Selection.AutoFilter Field:=1, Criteria1:=Sheet9.Range("AgyCode") '& "*" 'Criteria = SS*
    Application.DisplayAlerts = False
    ActiveSheet.UsedRange.Offset(1, 0).Resize(ActiveSheet.UsedRange.Rows.Count - 1).Rows.Delete ' just dont understand why offset 2 and not 1 so header is not deleted
    Application.DisplayAlerts = True
     
'Clear filter
ActiveSheet.ShowAllData
End If

If Sheet9.Range("AgyChoice") = 1 Then
    Sheet10.Select
    Sheet10.Range("TopFundDB").Offset(1, 0).End(xlDown).End(xlToRight).Select
    Sheet10.UsedRange.Offset(1, 0).Resize(ActiveSheet.UsedRange.Rows.Count - 1).Rows.Delete
End If
    Sheet10.Visible = False
End Sub
Attribute VB_Name = "Reports"
Sub rptHideColumns()
Dim UniqueRng As Range
Dim Rng As Range, Cell As Range
  Dim StartTime As Double
Dim SecondsElapsed As Double
Dim LastRow As Integer

Application.ScreenUpdating = False

Set Rng = Sheet42.Range("D12:S12")
For Each Cell In Rng
     If Cell.Value = 0 Then
         Cell.EntireColumn.Hidden = True
         
     Else: Cell.EntireColumn.Hidden = False
     
     End If
 Next Cell

Call rptHideRows

Application.ScreenUpdating = True

End Sub

Sub rptHideRows()
Dim UniqueRng As Range
Dim Rng As Range, Cell As Range
  Dim StartTime As Double
Dim SecondsElapsed As Double
Dim LastRow As Integer



Set Rng = Sheet42.Range("B13:B62")
For Each Cell In Rng
     If Cell.Value = 0 Then
         Cell.EntireRow.Hidden = True
         
     Else: Cell.EntireRow.Hidden = False
     
     End If
 Next Cell



End Sub

Sub rptUnhideAllRows()
Dim UniqueRng As Range
Dim Rng As Range, Cell As Range
  Dim StartTime As Double
Dim SecondsElapsed As Double
Dim LastRow As Integer

Application.ScreenUpdating = False

Set Rng = Sheet42.Range("B13:B62")

    Rng.EntireRow.Hidden = False

Sheet42.Range("D10").Select

Application.ScreenUpdating = True

End Sub

Sub FinalReport()

Dim iAgency As Integer, LastRowRpt As Integer, LastRowFinalRpt As Integer, LastRowFinalRptAdj As Integer
  Dim StartTime As Double
Dim SecondsElapsed As Double
Dim AgyLastRow As Integer

Application.ScreenUpdating = False

AgyLastRow = Sheet12.Range("H" & Rows.Count).End(xlUp).Row - 4
    ActiveSheet.Cells.EntireColumn.Hidden = False
' StartTime = Timer

Sheet18.Cells.ClearContents
Sheet18.Cells.ClearFormats
Sheet18.ResetAllPageBreaks
Sheet18.Cells.EntireRow.Hidden = False

For iAgency = 0 To AgyLastRow
        Sheet42.Select
        'Place the current agency number in cell
       
'        Range("reportselection").offsest(-2, -1).Value = Range("AgencyList").Offset(iAgency).Resize(1, 1)
        
'        Range("C1").Value = Range("AgencyList").Offset(1 + iAgency).Resize(1, 1)
        Range("C1").Value = iAgency + 1
        

        LastRowRpt = Sheet42.Range("B" & Rows.Count).End(xlUp).Row - 6
        LastRowFinalRpt = Sheet18.Range("A" & Rows.Count).End(xlUp).Row + 1
        
        Range("reportselection").Offset(2, -1).Resize(LastRowRpt, 19).Select
        Selection.SpecialCells(xlCellTypeVisible).Select
        Selection.Copy
        
        Sheet18.Range("A1").Offset(LastRowFinalRpt, 0).PasteSpecial xlPasteValues
        Sheet18.Range("A1").Offset(LastRowFinalRpt, 0).PasteSpecial xlPasteFormats
        
    Range("C11:T80").Select
    Selection.SpecialCells(xlCellTypeVisible).Select
    Selection.Copy
'        ActiveSheet.HPageBreaks.Add Before:=Rows(LastRowFinalRptAdj + 4)
        
Next iAgency

         Sheet18.Columns("D:D").EntireColumn.Delete
         Sheet18.Columns("E:E").EntireColumn.Delete
         Sheet18.Columns("G:H").EntireColumn.Delete
         Sheet18.Columns("F:G").EntireColumn.Delete
         Sheet18.Columns("G:G").EntireColumn.Delete
         Sheet18.Columns("H:J").EntireColumn.Delete
         
'Call rptFinalHideRows
    Sheet42.Columns("A:b").Hidden = True
    Sheet18.Columns("A").Hidden = True
    Call rptHideRows
    Call rptHideColumns
    Call PageBreaks
    Call CreateHeaders
    
         Sheet18.Columns("C:H").ColumnWidth = 12
    
'  SecondsElapsed = Round(Timer - StartTime, 2)

Application.ScreenUpdating = True

'MsgBox SecondsElapsed

End Sub


Sub rptFinalHideRows()
Dim UniqueRng As Range
Dim Rng As Range, Cell As Range
  Dim StartTime As Double
Dim SecondsElapsed As Double
Dim LastRow As Integer
Dim Rng2 As Range

' StartTime = Timer

LastRowRpt = Sheet18.Range("A" & Rows.Count).End(xlUp).Row - 6

Set Rng = Sheet18.Range("A4").Resize(LastRowRpt)

For Each Cell In Rng
     If Cell.Value = 0 Then
         Cell.EntireRow.Hidden = True
         
     Else: Cell.EntireRow.Hidden = False
     
     End If
 Next Cell

'Set Rng2 = Sheet18.Range("B4").Resize(LastRowRpt)
'
'For Each Cell In Rng2
'     If Cell.Text = "Hidden Row" Then
'         Cell.EntireRow.Hidden = True
'     End If
' Next Cell

'  SecondsElapsed = Round(Timer - StartTime, 2)

'MsgBox SecondsElapsed

End Sub

Sub PageBreaks()

Dim LastRow As Long
Dim row_index As Long
Dim rw As Long

' StartTime = Timer


rw = 53
Sheet18.Select

With ActiveSheet
    .ResetAllPageBreaks
    LastRow = .Cells(Rows.Count, "B").End(xlUp).Row + 1
    For row_index = rw + 1 To LastRow Step rw
        .HPageBreaks.Add Before:=.Cells(row_index, 1)
    Next
End With

    With ActiveSheet.PageSetup
        .Zoom = 74
    End With
    

ActiveSheet.VPageBreaks.Add Before:=Columns("J")

'  SecondsElapsed = Round(Timer - StartTime, 2)

'MsgBox SecondsElapsed

End Sub

Sub CreateHeaders()

Dim LastRow As Long
Dim row_index As Long
Dim rw As Long
Dim rDest As Range
Dim rSource As Range

' StartTime = Timer

Application.DisplayAlerts = False

rw = 53
Set rDest = Sheet18.Range("rptTop").Offset(-1, 2)
Set rSource = Sheet7.Range("rptHeaders")
rSource.Copy

'Sheet18.Range("rptTop").Offset(-1, 2).PasteSpecial xlPastealues

Sheet18.Select
With ActiveSheet
    
    LastRow = .Cells(Rows.Count, "B").End(xlUp).Row - rw + 1
    For row_index = 0 To LastRow Step rw
        rDest.Offset(row_index).RowHeight = 15
        rDest.Offset(row_index).Resize(1, 1).PasteSpecial xlPasteAll
    Next
End With

Sheet18.Range("C3").Select
    
Application.DisplayAlerts = True
'ActiveSheet.VPageBreaks.Add Before:=Columns("I")

'  SecondsElapsed = Round(Timer - StartTime, 2)

'MsgBox SecondsElapsed

End Sub
Attribute VB_Name = "Sheet10"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Sheet12"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Sheet4"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Sheet9"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "TestFundSplits"

Sub FundSplitsTest()

Dim LastRowMiscLoadDB1 As Integer
Dim LastRowMiscLoadDB2 As Integer
Dim LastRowMiscLoadDB3 As Integer
Dim FinalRowMiscLoadDB As Integer
Dim LastRowFundSplits As Integer
Dim MiscLoadRng1 As Range
Dim MiscLoadFormularng As Range
Dim LastRowServInfo As Integer
Dim ServiceCode As String
Dim ServiceCodeNum As Integer
Dim SecondsElapsed As Double
Dim split9 As Range, split10 As String
Dim WinSumCode As String
 
 Application.ScreenUpdating = False
 
 StartTime = Timer
 
Application.EnableEvents = False
'Application.Calculation = xlCalculationManual

'Find last row Fund splits and take out the header rows
 LastRowFundSplits = Sheet10.Range("A" & Rows.Count).End(xlUp).Row - 1

'Delete All Data on MiscLoadDB
LastRowMiscLoadDB1 = Sheet2.Range("A" & Rows.Count).End(xlUp).Row
Set MiscLoadRng1 = Sheet2.Range("Top").Offset(1, 0).Resize(LastRowMiscLoadDB1, 26)

MiscLoadRng1.ClearContents
  

'Find out how many services there are in the Service Info Table.  The minus six is to exclude the header rows

LastRowServInfo = Sheet11.Range("D" & Rows.Count).End(xlUp).Row - 6

For iAgy = 1 To LastRowServInfo
 
 ServiceCode = Sheet11.Range("ServiceTop").Offset(iAgy, 1).Resize(1, 1)
 ServiceCodeNum = Sheet11.Range("ServiceTop").Offset(iAgy, -1).Resize(1, 1) - 1
 WinSumCode = Sheet11.Range("ServiceTop").Offset(iAgy, 3).Resize(1, 1).Text
 
 LastRowMiscLoadDB2 = Sheet2.Range("A" & Rows.Count).End(xlUp).Row

'Copy AgyFundsplits
Sheet10.Range("TopFundDB").Offset(1, 0).Resize(LastRowFundSplits, 5).Copy
Sheet2.Range("Top").Offset(LastRowMiscLoadDB2, 2).PasteSpecial xlPasteValues
'Copies the FundSplits percentages
Sheet10.Range("TopFundDB").Offset(1, ServiceCodeNum).Resize(LastRowFundSplits, 1).Copy
Sheet2.Range("Top").Offset(LastRowMiscLoadDB2, 7).PasteSpecial xlPasteValues

'Find New LastRow in Misc Load sheet to find the start and size to copy remaining information
 LastRowMiscLoadDB3 = Sheet2.Range("A" & Rows.Count).End(xlUp).Row
 
 Sheet2.Range("Top").Offset(LastRowMiscLoadDB2, 0).Resize(LastRowFundSplits, 1) = ServiceCode
  Sheet2.Range("Top").Offset(LastRowMiscLoadDB2, 1).Resize(LastRowFundSplits, 1) = WinSumCode

Next iAgy


Call FundSplitsFormulasOnly

End Sub



 Sub CopiesFormulasToServiceOnlyXXX()
 Dim Rng As Range
 Dim Fmla As Range
 Dim Fmla2 As Range
 Dim ValueRange As Range
 Dim LastRowMiscLoadDB3 As Integer
 
     Sheet2.Select
    Sheet2.Range("Top").Select
    ''Right here is the issue when there is only
    Selection.AutoFilter Field:=1, Criteria1:=Sheet1.Range("ServiceDec")  'Criteria = SS*
    Application.DisplayAlerts = False
'    Sheet3.UsedRange.Offset(1, 0).Resize(ActiveSheet.UsedRange.Rows.count - 1).Rows.Delete
 LastRowMiscLoadDB3 = Sheet2.Range("A" & Rows.Count).End(xlUp).Row
   
   'Clear the filter on DB Worksheet (Sheet3)
'    Selection.AutoFilter
'
'     NewDBLastRow = Sheet3.Range("A" & Rows.count).End(xlUp).Row
'     Sheet13.Range("AllocationTop").Offset(1, 0).Resize(LastRow, 6).Copy
'     Sheet3.Range("DBTop").Offset(NewDBLastRow, 0).PasteSpecial xlPasteValuesAndNumberFormats
 
 Set Fmla = Sheet2.Range("MiscLoadDBFormulas")
 Set Fmla2 = Sheet2.Range("RoundingRank")
 
 Set Rng = Sheet2.Range("Top").Offset(1, 8).Resize(LastRowMiscLoadDB3)
 Fmla.Copy
 Rng.SpecialCells(xlCellTypeVisible).PasteSpecial (xlPasteFormulas)
 
 Set Rng = Sheet2.Range("Top").Offset(1, 17).Resize(LastRowMiscLoadDB3)
 Fmla2.Copy
 Rng.SpecialCells(xlCellTypeVisible).PasteSpecial (xlPasteFormulas)
 
  Set ValueRange = Sheet2.Range("Top").Offset(1, 8).Resize(LastRowMiscLoadDB3, 13).SpecialCells(xlCellTypeVisible)
  
  ValueRange.Copy
  ValueRange.PasteSpecial xlPasteValues
 
     Application.DisplayAlerts = True
 
 Selection.AutoFilter
 
 End Sub
Attribute VB_Name = "ThisWorkbook"
Attribute VB_Base = "0{00020819-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
'Private Sub Workbook_Open()
'
'For Each ws In Sheets
'
'   With ws
'
''       .Unprotect Password:=""
''
''       .Protect Password:="", UserInterfaceOnly:=True
'
'       .EnableOutlining = True
'
'    End With
'
'Next ws
'
'End Sub
'
'Option Explicit


'Private Sub Workbook_Open()
'
' With Worksheets("AssumptionsSummary")
' .Protect Password:="", userinterfaceonly:=True
' .EnableOutlining = True
' End With
'
'  With Worksheets("085-Sec")
' .Protect Password:="", userinterfaceonly:=True
' .EnableOutlining = True
' End With
'
'  With Worksheets("095-Auditor")
' .Protect Password:="", userinterfaceonly:=True
' .EnableOutlining = True
' End With
'
'  With Worksheets("100-AttGen")
' .Protect Password:="", userinterfaceonly:=True
' .EnableOutlining = True
' End With
'
'  With Worksheets("105-OCIO")
' .Protect Password:="", userinterfaceonly:=True
' .EnableOutlining = True
' End With
''
''  With Worksheets("105-OAH")
'' .Protect Password:="", userinterfaceonly:=True
'' .EnableOutlining = True
'' End With
'
'  With Worksheets("147 - OMWBE")
' .Protect Password:="", userinterfaceonly:=True
' .EnableOutlining = True
' End With
'
'  With Worksheets("163-SGS")
' .Protect Password:="", userinterfaceonly:=True
' .EnableOutlining = True
' End With
'
'  With Worksheets("163-ESI")
' .Protect Password:="", userinterfaceonly:=True
' .EnableOutlining = True
' End With
'
'  With Worksheets("179-AccessInsideWa")
' .Protect Password:="", userinterfaceonly:=True
' .EnableOutlining = True
' End With
'
'  With Worksheets("179 - Campus Rent")
' .Protect Password:="", userinterfaceonly:=True
' .EnableOutlining = True
' End With
'
'  With Worksheets("179 - Cap Proj Surcharge")
' .Protect Password:="", userinterfaceonly:=True
' .EnableOutlining = True
' End With
'
'  With Worksheets("179 - DES HRMS")
' .Protect Password:="", userinterfaceonly:=True
' .EnableOutlining = True
' End With
'
'  With Worksheets("179 - Fin Cost Rec")
' .Protect Password:="", userinterfaceonly:=True
' .EnableOutlining = True
' End With
'
'  With Worksheets("179-Pers Services")
' .Protect Password:="", userinterfaceonly:=True
' .EnableOutlining = True
' End With
'
'  With Worksheets("179-ProdSupport")
' .Protect Password:="", userinterfaceonly:=True
' .EnableOutlining = True
' End With
'
'   With Worksheets("179 - DES - Pub & Hist")
' .Protect Password:="", userinterfaceonly:=True
' .EnableOutlining = True
' End With
'
'   With Worksheets("179-RealEstate")
' .Protect Password:="", userinterfaceonly:=True
' .EnableOutlining = True
'  End With
'
'   With Worksheets("173-SecureFile")
' .Protect Password:="", userinterfaceonly:=True
' .EnableOutlining = True
'  End With
'
'    With Worksheets("173-ITServices")
' .Protect Password:="", userinterfaceonly:=True
' .EnableOutlining = True
'  End With
'
'    With Worksheets("179-Risk management")
' .Protect Password:="", userinterfaceonly:=True
' .EnableOutlining = True
'  End With
'
'    With Worksheets("179-SmallAgyAcct")
' .Protect Password:="", userinterfaceonly:=True
' .EnableOutlining = True
' End With
'
' End Sub


INQUEST-PP=macro
