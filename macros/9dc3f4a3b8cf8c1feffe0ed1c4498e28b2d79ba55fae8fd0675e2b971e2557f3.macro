Attribute VB_Name = "F_Postup"
Attribute VB_Base = "0{EF891380-A673-4C1B-8EBD-43E4F78C3CFA}{BB6BA89D-7451-4EF8-86AD-C07E3C8A447D}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Option Explicit
Private Sub UserForm_Activate()
 Call Aktualizovat_postup(True)
 If Kontroly And Proces > 0 Then
  Call Aktualizovat_postup(True)
  Select Case Proces
   Case 1: Call Zelene_karty
   Case 2: Call Sestava_smluv
   Case 3: Call Sestava_smluv_kalkul
  End Select
 End If
 Unload F_Postup
End Sub
Private Sub UserForm_QueryClose(Cancel As Integer, CloseMode As Integer)
 If CloseMode = vbFormControlMenu Then Cancel = True
End Sub

Attribute VB_Name = "F_Prihlaseni_do_SPS"
Attribute VB_Base = "0{88CF4EE0-76C2-4C8D-A317-E93950DEF0C0}{10888D66-B8A6-4EF9-BF3E-0C287C4B0CD8}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Option Explicit
Private Sub UserForm_Activate()
 Dim SUsr As String

 If CInt(GetSetting("GOL", "LOGIN", "IDMax", 99)) <> 99 Then Call DeleteSetting("GOL", "LOGIN")

 P_Web_login = Environ$("UserName")
 SUsr = GetSetting("GOL", "SPS", "SUsr", "")
 If SUsr <> "" And Not P_Web_prihlasen Then
  If SUsr <> P_Web_login Then P_Web_login = SUsr
  P_Web_heslo = DeKodovani(GetSetting("GOL", "SPS", P_Web_login, ""))
  chbReg.Value = True
  PAJmeno = P_Web_login
  PAHeslo = P_Web_heslo
 End If
 tbJmeno.text = P_Web_login
 tbHeslo.text = P_Web_heslo
 With tbJmeno
  .SetFocus
  .SelStart = 0
  .SelLength = Len(.text)
 End With
End Sub
Private Sub UserForm_QueryClose(Cancel As Integer, CloseMode As Integer)
 If CloseMode = 0 Then
  P_Web_prihlasen = False
  Call AddMenu
 End If
End Sub
Private Sub cbPrihlasit_Click()
 If tbJmeno.text = "" Then
  MsgBox "Nen|fffd| vypln|fffd|no jm|fffd|no", vbCritical
 ElseIf tbHeslo.text = "" Then
  MsgBox "Nen|fffd| vypln|fffd|no heslo", vbCritical
 Else
  P_Web_login = tbJmeno.text
  P_Web_heslo = tbHeslo.text
  Call Web_services
  If P_Web_prihlasen Then
   If chbReg.Value Then
    If PAJmeno <> P_Web_login Or PAHeslo <> P_Web_heslo Then
     If PAJmeno <> P_Web_login Then Call ResReg
     Call SaveSetting("GOL", "SPS", P_Web_login, Kodovani(P_Web_heslo))
     PAJmeno = P_Web_login
     PAHeslo = P_Web_heslo
    End If
   Else
    Call ResReg
   End If
   Call SaveSetting("GOL", "SPS", "SUsr", IIf(chbReg.Value, P_Web_login, ""))
  End If
  Unload Me
 End If
End Sub
Private Sub ResReg()
 Call SaveSetting("GOL", "SPS", "xxx", "xxx")
 Call DeleteSetting("GOL", "SPS")
End Sub
Attribute VB_Name = "List1"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Control = "Kalkulace_vozidel, 1185, 0, MSForms, CommandButton"
Attribute VB_Control = "Pojistky_vozidel, 1, 1, MSForms, CommandButton"
Option Explicit
Private Sub Kalkulace_vozidel_Click()
 Call Stav_kalkul(2)
 Data.Select
End Sub
Private Sub Pojistky_vozidel_Click()
 Call Stav_kalkul(0)
 Data.Select
End Sub
Attribute VB_Name = "List2"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Option Explicit
Private Sub Worksheet_Change(ByVal Target As Range)
 Dim Bunka As Range
 P_Zmenen = False
 With ActiveSheet
  Application.EnableEvents = False
  If Kalkul = 0 Then
   
  ElseIf Kalkul > 1 And Target.Row <= P_Pocatek_hla_r Then
   For Each Bunka In Target
    If Bunka.Row = P_Pocatek_hla_r Then
     Select Case Bunka.Column
      Case P_hk02_poj_ico: .Cells(P_Pocatek_hla_r, P_hl02_poj_ico).Value = .Cells(P_Pocatek_hla_r, P_hk02_poj_ico).Value
      Case P_hk05_frek_pl: .Cells(P_Pocatek_hla_r, P_hl05_frek_pl).Value = .Cells(P_Pocatek_hla_r, P_hk05_frek_pl).Value
      Case P_hk06_sle_pov: .Cells(P_Pocatek_hla_r, P_hl06_sle_pov).Value = .Cells(P_Pocatek_hla_r, P_hk06_sle_pov).Value
      Case P_hk07_sle_hav: .Cells(P_Pocatek_hla_r, P_hl07_sle_hav).Value = .Cells(P_Pocatek_hla_r, P_hk07_sle_hav).Value
      Case P_hk08_sle_pas: .Cells(P_Pocatek_hla_r, P_hl08_sle_pas).Value = .Cells(P_Pocatek_hla_r, P_hk08_sle_pas).Value
      Case P_hk09_sle_stp: .Cells(P_Pocatek_hla_r, P_hl09_sle_stp).Value = .Cells(P_Pocatek_hla_r, P_hk09_sle_stp).Value
      Case P_hk10_sle_gap: .Cells(P_Pocatek_hla_r, P_hl10_sle_gap).Value = .Cells(P_Pocatek_hla_r, P_hk10_sle_gap).Value
      Case P_hk12_dat_poc: .Cells(P_Pocatek_hla_r, P_hl12_dat_poc).Value = .Cells(P_Pocatek_hla_r, P_hk12_dat_poc).Value
     End Select
    End If
   Next Bunka
  End If
  Application.EnableEvents = True
 End With
End Sub
Attribute VB_Name = "List4"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Option Explicit
Private Sub Worksheet_Change(ByVal Target As Range)
 If Target.Row + Target.Rows.Count - 1 > 7 Then Call Uprav_storna
End Sub
Attribute VB_Name = "List5"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Option Explicit

Attribute VB_Name = "List6"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "List7"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Option Explicit

Attribute VB_Name = "List8"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Option Explicit

Attribute VB_Name = "M_00Format_kontola"
Option Explicit
Function Kontroly() As Boolean
 Dim Pocet_smluv As Long, Radek As Long, Funkce As Long, Bunka As Range, Typ As String
 Dim Hlaseni As Byte, Vystup As String, Adresa As Range, Sloupec As Byte

 Application.ScreenUpdating = False
 Call Test_funkcnosti
 Procenta = 1 / 83
 PC_hlas = 0
 Data.Unprotect C_Heslo_sesitu
 Kontroly = True
 If P_Zmenen And Not Prerus Then GoTo Na_konec1
 Prerus = False

 Call Aktualizovat_proces("Form|fffd|tuji a kontroluji data ...")
 Application.EnableEvents = False
 Call Smaz_prazdne_radky(Sesit.Name, Data.Name)
 Do_radku = Rozah_listu(Sesit.Name, Data.Name)
 Pocet_smluv = Do_radku - P_Pocatek_dat_r + 1
 Data.Cells(P_Pocatek_dat_r - 1, P_Pocatek_dat_s) = Pocet_smluv
 Call Format_listu(Do_radku)
 If P_Preteceni_PS Then
  MsgBox ("Chyst|fffd|te se zpracovat v|fffd|t|fffd||fffd| po|fffd|et smluv, ne|fffd| DS podporuje." & vbLf & "Maxim|fffd|ln|fffd| je mo|fffd|n|fffd| zpracovat " & P_Max_poj & " smluv." & vbLf & vbLf & "Akce nebude dokon|fffd|ena.")
  Kontroly = False
  GoTo Na_konec2
 ElseIf Pocet_smluv = 0 Then
  MsgBox ("Nebyla vypln|fffd|na |fffd||fffd|dn|fffd| smlouva.")
  Prerus = True
  GoTo Na_konec2
 End If

 With Nastav
  For Each Bunka In .Range(.Cells(11, C_Sl_kod).Address & ":" & .Cells(11, C_Sl_kod).End(xlDown).Address)
   For Funkce = C_Sl_fce01 To C_Sl_fcexx
    If .Cells(Bunka.Row, Funkce).Value <> "" Then
     If Kalkul > 0 Then
      If UCase(Bunka.Offset(0, 1).Value) = "X" Then
       Select Case Bunka.Row - 10
        Case P_hl01_poj_naz: Sloupec = P_hl01_poj_naz
        Case P_hl02_poj_ico: Sloupec = P_hk02_poj_ico
        Case P_hl05_frek_pl: Sloupec = P_hk05_frek_pl
        Case P_hl06_sle_pov: Sloupec = P_hk06_sle_pov
        Case P_hl07_sle_hav: Sloupec = P_hk07_sle_hav
        Case P_hl08_sle_pas: Sloupec = P_hk08_sle_pas
        Case P_hl09_sle_stp: Sloupec = P_hk09_sle_stp
        Case P_hl10_sle_gap: Sloupec = P_hk10_sle_gap
        Case P_hl11_dat_sjp: Sloupec = P_hl11_dat_sjp
        Case P_hl12_dat_poc: Sloupec = P_hk12_dat_poc
       End Select
       If Not Uni_fce(Data.Cells(P_Pocatek_hla_r, Sloupec), Bunka.Offset(0, 3).Value, Funkce - C_Sl_fce01 + 1, "hl_" & Bunka.Offset(0, -1).Value, .Cells(Bunka.Row, Funkce).Value) Then Kontroly = False
      End If
     Else
      If Not Uni_fce(Data.Cells(P_Pocatek_hla_r, Bunka.Row - 10), Bunka.Offset(0, 3).Value, Funkce - C_Sl_fce01 + 1, "hl_" & Bunka.Offset(0, -1).Value, .Cells(Bunka.Row, Funkce).Value) Then Kontroly = False
     End If
    End If
   Next Funkce
  Next Bunka
  Call Aktualizovat_postup

  If Kontroly Then
   Data.Cells(P_Pocatek_hla_r, P_hl11_dat_sjp).Locked = True
   Data.Cells(P_Pocatek_hla_r, P_hk12_dat_poc).Locked = True
   PC_unik = 1
   ReDim Unik_zazn(1)
   ReDim P_Smlouva(P_Pocatek_dat_r To Pocet_smluv + P_Pocatek_dat_r)
   For Each Bunka In .Range(.Cells(31, C_Sl_kod).Address & ":" & .Cells(31, C_Sl_kod).End(xlDown).Address)
    If Kalkul = 0 Or Kalkul > 0 And UCase(Bunka.Offset(0, 1).Value) = "X" Then
     Typ = Bunka.Offset(0, -2).Value
     If Typ = "" Then Typ = Bunka.Offset(0, -2).End(xlUp).Value
     Typ = "-" & Typ & " - " & Bunka.Offset(0, -1).Value & " - "
     Select Case Bunka.Row - 30
      Case P_0501POV, P_0601HAV, P_0701PSk, P_0801UPO, P_0901PZa, P_1001PNV, P_1101PAs, P_1201PPR, P_1301PLi, P_1401StP, P_1501GAP
       ReDim P_MamPOJ(Pocet_smluv)
       ReDim P_Zaloha(5)
     End Select
     For Funkce = C_Sl_fce01 To C_Sl_fcexx
      If .Cells(Bunka.Row, Funkce).Value <> "" Then
       For Radek = P_Pocatek_dat_r To Do_radku
        Call Uni_fce(Data.Cells(Radek, Bunka.Row - 30), Bunka.Offset(0, 3).Value, Funkce - C_Sl_fce01 + 1, Typ, .Cells(Bunka.Row, Funkce).Value)
       Next Radek
       PC_unik = 1
       ReDim Unik_zazn(1)
      End If
     Next Funkce
    End If
    Call Aktualizovat_postup
   Next Bunka
  End If
 End With

 If Not (Prerus Or Not Kontroly) Then
  With Sesit.Worksheets("napoveda")
   If PC_hlas > 0 Then
    For Hlaseni = 0 To PC_hlas - 1
     For Each Adresa In .Range("A11:" & .Cells(11, 1).End(xlDown).Address)
      If P_Hlaseni(Hlaseni) = Adresa.Value Then
       If P_Web_kosilka And Adresa.Offset(0, 2).Value = "A" Or Not P_Web_kosilka Then Vystup = Vystup & Adresa.Offset(0, 1).Value & vbLf & vbLf
      End If
     Next Adresa
    Next Hlaseni
    If Len(Vystup) > 0 Then MsgBox Vystup
   End If
  End With
 End If
 P_Zmenen = True

Na_konec1:
 If Not Kontroly Then
  MsgBox "Z|fffd|va|fffd|n|fffd| chyby v |fffd|daj|fffd|ch Flotily (hlavi|fffd|ce)" & vbLf & vbLf & "- kontrola p|fffd|eru|fffd|ena", vbCritical
 ElseIf Prerus Then
  MsgBox "Kontrola prob|fffd|hla" & vbLf & vbLf & "- n|fffd|kter|fffd| data nebyla vypln|fffd|na spr|fffd|vn|fffd|", vbExclamation
  Kontroly = False
  Prerus = False
 ElseIf Proces = 0 Then
  MsgBox "Kontrola prob|fffd|hla" & vbLf & vbLf & "- v|fffd|e v po|fffd||fffd|dku" & IIf(P_Web_kosilka, vbLf & "- IK ov|fffd||fffd|ena", "")
  Nastav.Cells(9, C_Sl_kod).Value = "A"
 End If
Na_konec2:
 With Data
  .Select
  Call Format_sloupcu
  .Cells.EntireRow.AutoFit
  If Kontroly Or P_Anon Then Call GDPR(Not P_Web_prihlasen)
  Application.EnableEvents = True
  Application.ScreenUpdating = True
  .Cells(P_Pocatek_dat_r, P_hk02_poj_ico).Activate
 End With
End Function
Attribute VB_Name = "M_01Format"
Option Explicit
Function Pouze_cisla(Retezec As String, Optional Desetin As Byte = 0, Optional Minus As Boolean = False, Optional Do1NeCisla As Boolean = False, Optional Bez0 As Boolean = False) As String
 Dim Retezec_cisty As String, Pozice As Byte, MamCislo As Boolean, MamMinus As Boolean, MamDeset As Boolean, Hodnota As String * 1

 MamCislo = False
 MamMinus = False
 MamDeset = False
 Retezec = Trim(Retezec)
 For Pozice = 1 To Len(Retezec)
  Hodnota = Mid(Retezec, Pozice, 1)
  Select Case Hodnota
   Case "-"
    If MamCislo Then
     If Do1NeCisla Or MamMinus Then Exit For
    ElseIf Not MamMinus And Minus Then
     MamMinus = Not MamMinus
     Retezec_cisty = "-"
    End If
   Case ",", "."
    If Not MamDeset Then
     MamDeset = Not MamDeset
     If Not MamCislo Then Retezec_cisty = Retezec_cisty & "0"
     Retezec_cisty = Retezec_cisty & ","
    ElseIf MamCislo And (Do1NeCisla Or MamDeset) Then
     Exit For
    End If
   Case "0", "1", "2", "3", "4", "5", "6", "7", "8", "9"
    MamCislo = True
    Retezec_cisty = Retezec_cisty & Hodnota
   Case Else
    If MamCislo And Do1NeCisla Then Exit For
  End Select
 Next Pozice
 If MamCislo Then
  If Not Bez0 Then
   Pouze_cisla = Retezec_cisty
  Else
   Pouze_cisla = Round2(Retezec_cisty, Desetin)
  End If
 End If
End Function
Function Bez_znamenek(Retezec As String) As String
 Dim ASCI As String * 80, US As String * 80, Pozice As Byte, Znak_a As String * 1, Znak_b As String * 1

 ASCI = Chr(228) & Chr(196) & Chr(225) & Chr(193) & Chr(226) & Chr(194) & Chr(227) & Chr(195) & Chr(185) & Chr(165) & Chr(230) & Chr(198) & _
        Chr(231) & Chr(199) & Chr(232) & Chr(200) & Chr(239) & Chr(207) & Chr(240) & Chr(208) & Chr(235) & Chr(203) & Chr(233) & Chr(201) & _
        Chr(236) & Chr(204) & Chr(234) & Chr(202) & Chr(237) & Chr(205) & Chr(238) & Chr(206) & Chr(229) & Chr(197) & Chr(190) & Chr(188) & _
        Chr(179) & Chr(163) & Chr(241) & Chr(209) & Chr(242) & Chr(210) & Chr(246) & Chr(214) & Chr(243) & Chr(211) & Chr(244) & Chr(212) & _
        Chr(245) & Chr(213) & Chr(224) & Chr(192) & Chr(248) & Chr(216) & Chr(156) & Chr(140) & Chr(186) & Chr(170) & Chr(154) & Chr(138) & _
        Chr(157) & Chr(141) & Chr(254) & Chr(222) & Chr(252) & Chr(220) & Chr(250) & Chr(218) & Chr(249) & Chr(217) & Chr(251) & Chr(219) & _
        Chr(253) & Chr(221) & Chr(191) & Chr(175) & Chr(159) & Chr(143) & Chr(158) & Chr(142)
 US = "aAaAaAaAaAcCcCcCdDdDeEeEeEeEiIiIlLlLlLnNnNoOoOoOoOrRrRsSsSsStTtTuUuUuUuUyYzZzZzZ"
 For Pozice = 1 To 80
  Znak_a = Mid(ASCI, Pozice, 1)
  Znak_b = Mid(US, Pozice, 1)
  Retezec = Replace(Retezec, Znak_a, Znak_b)
 Next Pozice
 Bez_znamenek = Retezec
End Function
Function Bez_znamenek_velka(Retezec As String) As String
 Dim ASCI As String * 40, US As String * 40, Pozice As Byte, Znak_a As String * 1, Znak_b As String * 1

 ASCI = Chr(196) & Chr(193) & Chr(194) & Chr(195) & Chr(165) & Chr(198) & Chr(199) & Chr(200) & Chr(207) & Chr(208) & Chr(203) & Chr(201) & _
        Chr(204) & Chr(202) & Chr(205) & Chr(206) & Chr(197) & Chr(188) & Chr(163) & Chr(209) & Chr(210) & Chr(214) & Chr(211) & Chr(212) & _
        Chr(213) & Chr(192) & Chr(216) & Chr(140) & Chr(170) & Chr(138) & Chr(141) & Chr(222) & Chr(220) & Chr(218) & Chr(217) & Chr(219) & _
        Chr(221) & Chr(175) & Chr(143) & Chr(142)
 US = "AAAAACCCDDEEEEIILLLNNOOOORRSSSTTUUUUYZZZ"
 For Pozice = 1 To 40
  Znak_a = Mid(ASCI, Pozice, 1)
  Znak_b = Mid(US, Pozice, 1)
  Retezec = Replace(Retezec, Znak_a, Znak_b)
 Next Pozice
 Bez_znamenek_velka = Retezec
End Function
Function Parametry(ID As String, Optional Retezec As String, Optional Vstup As Byte, Optional Vystup As Byte, Optional Radek_sml As Long, Optional DI As String) As String
 'Vstup = 0 - bez diakritiky/prvni ID, 1 - s diakritikou; Vystup = sl. od ID
 Dim Radek As Byte, Sloupec As Byte, Hodnota1 As String, Hodnota2 As String, MamShodu As Boolean, Cislo As Double

 MamShodu = False
 With Nastav
  For Radek = 2 To .Cells(2, C_Sl_par).End(xlDown).Row
   If ID = .Cells(Radek, C_Sl_par).Value Then
    Select Case ID
     Case "ID_300"
      Hodnota1 = .Cells(Radek, C_Sl_par + 3).Value
      If Vstup = 0 Then Hodnota1 = Bez_znamenek(Hodnota1)
      If Hodnota1 <> Retezec Then
       For Sloupec = C_Sl_par + 2 To .Cells(Radek, C_Sl_par + 2).End(xlToRight).Column
        If .Cells(Radek, Sloupec).Value = Retezec Then MamShodu = True: Exit For
       Next Sloupec
      End If
      If Hodnota1 = Retezec Or MamShodu Then
       Select Case .Cells(Radek, C_Sl_par + 2).Value
        Case "E", "F", "K", "L", "P", "R"
         If IsNumeric(DI) Then Cislo = CDbl(DI)
       End Select
       Select Case .Cells(Radek, C_Sl_par + 2).Value
        Case "E", "F"
         If Cislo > 400 Then
          MamShodu = True
          Exit For
         End If
        Case "K", "L"
         If Cislo <= 400 Then
          MamShodu = True
          Exit For
         End If
        Case "P"
         If Cislo <= 750 Then
          MamShodu = True
          Exit For
         End If
        Case "R"
         If Cislo > 750 Then
          MamShodu = True
          Exit For
         End If
        Case Else
         MamShodu = True
         Exit For
       End Select
      End If
     Case "ID_332"
      If InStr(1, .Cells(Radek, C_Sl_par + 1).Value, DI) > 0 Then
       If IsNumeric(Retezec) And DI <> "H" Then Cislo = CDbl(Retezec)
       Hodnota1 = .Cells(Radek, C_Sl_par + 3).Value
       Hodnota2 = .Cells(Radek, C_Sl_par + 4).Value
       If DI = "H" Then
        If .Cells(Radek, C_Sl_par + 2).Value = Retezec Then
         MamShodu = True
         Exit For
        End If
       ElseIf Hodnota1 = "" Then
        MamShodu = True
        Exit For
       ElseIf Cislo >= Hodnota1 And Cislo <= Hodnota2 Then
        Hodnota1 = .Cells(Radek, C_Sl_par + 8).Value
        Hodnota2 = .Cells(Radek, C_Sl_par + 9).Value
        If Hodnota2 <> "" Then
         If P_Smlouva(Radek_sml).Vykon = "" Then Call Kontrola_VOHP(Cells(Radek_sml, P_0408PrP), Nastav.Cells(P_0408PrP + 30, C_Sl_kod + 3).Value, "-" & Nastav.Cells(P_0401PrP + 30, C_Sl_kod - 2).Value & " - " & Nastav.Cells(P_0408PrP + 30, C_Sl_kod - 1).Value & " - ", "KV")
         If P_Smlouva(Radek_sml).Vykon = "^" Then Exit For
         If CDbl(P_Smlouva(Radek_sml).Vykon) >= Hodnota1 And CDbl(P_Smlouva(Radek_sml).Vykon) <= Hodnota2 Then
          MamShodu = True
          Exit For
         End If
        Else
         MamShodu = True
         Exit For
        End If
       End If
      End If
     Case "ID_TYP"
      For Sloupec = C_Sl_par + 2 To .Cells(Radek, C_Sl_par + 2).End(xlToRight).Column
       If InStr(1, Retezec, .Cells(Radek, Sloupec).Value) > 0 Then MamShodu = True: Exit For
      Next Sloupec
      If MamShodu Then Exit For
     Case "ID_FLOT"
      If Vstup = 0 Then
       MamShodu = True: Exit For
      Else
       For Sloupec = C_Sl_par + 2 To .Cells(Radek, C_Sl_par + 2).End(xlToRight).Column
        If Retezec = .Cells(Radek, Sloupec).Value Then MamShodu = True: Exit For
       Next Sloupec
       If MamShodu Then Exit For
      End If
    End Select
   End If
  Next Radek
  Select Case ID
   Case "ID_300"
    If MamShodu Then
     Parametry = .Cells(Radek, C_Sl_par + Vystup).Value
     P_Smlouva(Radek_sml).Dru_voz = .Cells(Radek, C_Sl_par + 2).Value
     P_Smlouva(Radek_sml).Dru_voz_DI = Trim(.Cells(Radek, C_Sl_par + 1).Value)
    Else
     P_Smlouva(Radek_sml).Dru_voz = "^"
    End If
   Case "ID_332"
    If MamShodu Then
     P_Smlouva(Radek_sml).Dru_voz_kod = .Cells(Radek, C_Sl_par + 2).Value
     Parametry = .Cells(Radek, C_Sl_par + Vystup).Value & .Cells(Radek, C_Sl_par + Vystup + 1).Value & .Cells(Radek, C_Sl_par + Vystup + 2).Value
    Else
     P_Smlouva(Radek_sml).Dru_voz_kod = "^"
    End If
   Case "ID_TYP"
    If MamShodu Then
     Parametry = .Cells(Radek, C_Sl_par + Vystup).Value
     P_Smlouva(Radek_sml).Znacka_v_H = .Cells(Radek, C_Sl_par + 2).Value
    Else
     Parametry = Retezec
    End If
   Case "ID_FLOT"
    Parametry = IIf(MamShodu, .Cells(Radek, C_Sl_par + Vystup).Value, "^")
  End Select
 End With
End Function
Function Sazebnik(Kod_saz As String, ByVal Sl_vstup As Byte, Optional Hodnota As Variant = "NiC", Optional Sl_vystup As Byte, Optional Cast As Boolean = False) As Variant
 Dim Bunka_saz As Range, Hlaseni As Boolean

 P_Hlasit = ""
 Hlaseni = True
 If Hodnota <> "^" Then
  With Sesit.Worksheets("sazebnik")
   For Each Bunka_saz In .Range(.Cells(2, 2).Address & ":" & .Cells(2, 2).End(xlDown).Address)
    If Bunka_saz.Value = Kod_saz Then
     Hlaseni = False
     Sazebnik = Bunka_saz.Offset(0, Sl_vstup + 1).Value
     If Hodnota = "NiC" Or Sazebnik = Hodnota Or Cast And InStr(1, Sazebnik, Hodnota) > 0 Then
      If Hodnota <> "NiC" Then Sazebnik = Bunka_saz.Offset(0, Sl_vystup + 1).Value
      P_Hlasit = Trim(Bunka_saz.Offset(0, 1).Value)
      Exit Function
     ElseIf IsDate(Hodnota) Then
      If CDate(Hodnota) >= CDate(Bunka_saz.Offset(0, Sl_vstup + 1).Value) And CDate(Hodnota) <= CDate(Bunka_saz.Offset(0, Sl_vstup + 2).Value) Then Sazebnik = Bunka_saz.Offset(0, Sl_vystup + 1).Value: Exit Function
     ElseIf IsNumeric(Hodnota) And InStr(Kod_saz, "_RH") > 0 Then
      If CLng(Hodnota) >= CLng(Bunka_saz.Offset(0, Sl_vstup + 1).Value) And CLng(Hodnota) <= CLng(Bunka_saz.Offset(0, Sl_vstup + 2).Value) Then Sazebnik = Bunka_saz.Offset(0, Sl_vystup + 1).Value: Exit Function
     End If
    End If
   Next Bunka_saz
  End With
 End If
 If Hodnota <> "NiC" Then Sazebnik = "^"
 If Hlaseni Then MsgBox "K|fffd|d sazby nenalezen (" & Kod_saz & ")."
End Function
Sub Format_hlavicky(Optional Nic As Boolean)
 Dim Sloupec As Byte, SysScreen As Boolean, SysEvents As Boolean

 SysScreen = Application.ScreenUpdating: Application.ScreenUpdating = False
 SysEvents = Application.EnableEvents: Application.EnableEvents = False
 With Data
  With .Range(.Rows(P_Pocatek_hla_r - 1).Address & ":" & .Rows(P_Pocatek_hla_r).Address & "," & _
              .Cells(P_Pocatek_hla_r + 1, P_0001PCh).Address & ":" & .Cells(P_Pocatek_hla_r + 1, P_0418PrP).Address)
   With .Font
    .Bold = False
    .Name = "Arial"
    .FontStyle = "Oby|fffd|ejn|fffd|"
    .Size = 10
    .ColorIndex = xlAutomatic
   End With
   .HorizontalAlignment = xlGeneral
   .VerticalAlignment = xlGeneral
   .Interior.ColorIndex = 2
  End With
  With .Range(.Cells(P_Pocatek_hla_r - 1, P_hl01_poj_naz).Address & ":" & .Cells(P_Pocatek_hla_r - 1, P_hk12_dat_poc).Address)
   .HorizontalAlignment = xlCenter
   .Font.Bold = True
  End With
  .Range(.Cells(P_Pocatek_hla_r - 1, P_hl01_poj_naz).Address & ":" & .Cells(P_Pocatek_hla_r, P_0501POV - 1).Address).Borders.LineStyle = xlNone
  .Range(.Cells(P_Pocatek_hla_r - 1, P_hl01_poj_naz).Address & ":" & .Cells(P_Pocatek_hla_r - 1, P_hk12_dat_poc).Address).Interior.ColorIndex = 36
  .Range(.Cells(P_Pocatek_hla_r - 1, P_hk12_dat_poc + 1).Address & ":" & .Cells(P_Pocatek_hla_r + 1, P_0501POV - 1).Address & "," & _
         .Cells(P_Pocatek_hla_r + 1, P_hl01_poj_naz).Address & ":" & .Cells(P_Pocatek_hla_r + 1, P_hk12_dat_poc).Address).ClearContents
  .Range(.Cells(P_Pocatek_hla_r - 1, P_hk06_sle_pov).Address & ":" & .Cells(P_Pocatek_hla_r - 1, P_hk07_sle_hav).Address).Interior.ColorIndex = 35
  .Range(.Cells(P_Pocatek_hla_r - 1, P_hk08_sle_pas).Address & ":" & .Cells(P_Pocatek_hla_r - 1, P_hk10_sle_gap).Address).Interior.ColorIndex = 37
  With .Range(.Cells(P_Pocatek_hla_r - 1, P_hl01_poj_naz).Address & ":" & .Cells(P_Pocatek_hla_r, P_hk12_dat_poc).Address).Borders
   .LineStyle = xlContinuous
   .ColorIndex = xlAutomatic
   .Weight = xlThin
  End With
  For Sloupec = 7 To 10
   With .Range(.Cells(P_Pocatek_hla_r - 1, P_hl01_poj_naz).Address & ":" & .Cells(P_Pocatek_hla_r, IIf(Kalkul > 1, P_hk02_poj_ico, P_hk05_frek_pl)).Address & "," & _
               .Cells(P_Pocatek_hla_r - 1, P_hk06_sle_pov).Address & ":" & .Cells(P_Pocatek_hla_r, P_hk10_sle_gap).Address & "," & _
               .Cells(P_Pocatek_hla_r - 1, IIf(Kalkul < 2, P_hl11_dat_sjp, P_hk12_dat_poc)).Address & ":" & .Cells(P_Pocatek_hla_r, P_hk12_dat_poc).Address).Borders(Sloupec)
    .LineStyle = xlContinuous
    .ColorIndex = xlAutomatic
    .Weight = xlMedium
   End With
  Next Sloupec
 End With
 Application.ScreenUpdating = SysScreen
 Application.EnableEvents = SysEvents
End Sub
Sub Format_pojistek(ByVal Radku As Long)
 Dim Sloupec As Byte, Dodatek As String, Videt As Boolean, SysScreen As Boolean, SysEvents As Boolean
 Const Nadpis As Byte = 3, Soucty As Byte = 6

 Dodatek = ""
 SysScreen = Application.ScreenUpdating: Application.ScreenUpdating = False
 SysEvents = Application.EnableEvents: Application.EnableEvents = False
 With Data
  If Radku < 20 Then Radku = 20
  With .Range(.Rows(Nadpis + 1).Address & ":" & .Rows(.Rows.Count).Address & "," & _
              .Cells(Nadpis, P_0501POV).Address & ":" & .Cells(Nadpis, P_1703Gol).Address)
   With .Font
    .Bold = False
    .Name = "Arial"
    .FontStyle = "Oby|fffd|ejn|fffd|"
    .Size = 10
    .ColorIndex = xlAutomatic
   End With
   .HorizontalAlignment = xlGeneral
   .VerticalAlignment = xlGeneral
   .Interior.ColorIndex = 2
  End With
  With .Range(.Cells(Nadpis, P_0501POV).Address & ":" & Cells(Nadpis, P_1703Gol).Address & "," & _
              .Cells(Nadpis + 1, P_0001PCh).Address & ":" & Cells(Soucty, P_Pocet_sloupcu).Address)
   .HorizontalAlignment = xlCenter
   .Font.Bold = True
  End With
  .Range(.Cells(P_Pocatek_hla_r - 1, P_0501POV).Address & ":" & .Cells(Nadpis, .Columns.Count).Address & "," & _
         .Cells(Nadpis + 1, P_0001PCh).Address & ":" & .Cells(Nadpis, .Columns.Count).Address).Borders.LineStyle = xlNone
  .Range(.Cells(P_Pocatek_dat_r, P_0001PCh).Address & ":" & .Cells(Radku, P_0001PCh).Address & "," & _
         .Cells(1, P_Pocet_sloupcu + 1).Address & ":" & .Cells(Radku, P_Pocet_sloupcu + 1).Address).ClearContents
  .Range(.Cells(Nadpis + 1, P_0201Drz).Address & ":" & .Cells(Nadpis + 2, P_0208Drz).Address & "," & _
         .Cells(Nadpis, P_0501POV).Address & ":" & .Cells(Nadpis + 2, P_0606HAV).Address).Interior.ColorIndex = 35
  .Range(.Cells(Nadpis, P_0801UPO).Address & ":" & .Cells(Nadpis + 2, P_1406StP).Address).Interior.ColorIndex = 37
  .Range(.Cells(Nadpis + 1, P_0101Sml).Address & ":" & .Cells(Nadpis + 2, P_0105Sml).Address & "," & _
         .Cells(Nadpis + 1, P_0401PrP).Address & ":" & .Cells(Nadpis + 2, P_0418PrP).Address).Interior.ColorIndex = 40
  .Range(.Cells(Nadpis + 1, P_0301Vla).Address & ":" & .Cells(Nadpis + 2, P_0308Vla).Address & "," & _
         .Cells(Nadpis, P_0701PSk).Address & ":" & .Cells(Nadpis + 2, P_0702PSk).Address & "," & _
         .Cells(Nadpis, P_0901PZa).Address & ":" & .Cells(Nadpis + 2, P_0902PZa).Address & "," & _
         .Cells(Nadpis, P_1101PAs).Address & ":" & .Cells(Nadpis + 2, P_1103PAs).Address & "," & _
         .Cells(Nadpis, P_1301PLi).Address & ":" & .Cells(Nadpis + 2, P_1302PLi).Address & "," & _
         .Cells(Nadpis, P_1501GAP).Address & ":" & .Cells(Nadpis + 2, P_1504GAP).Address).Interior.ColorIndex = 34
  .Range(.Cells(Nadpis + 1, P_0001PCh).Address & ":" & .Cells(Radku, P_0001PCh).Address & "," & _
         .Cells(Soucty, P_0101Sml).Address & ":" & .Cells(Soucty, P_1603Kal).Address & "," & _
         .Cells(Nadpis + 2, P_0503POV).Address & ":" & .Cells(Radku, P_0504POV).Address & "," & _
         .Cells(Nadpis + 2, P_0605HAV).Address & ":" & .Cells(Radku, P_0606HAV).Address & "," & _
         .Cells(Nadpis + 2, P_0702PSk).Address & ":" & .Cells(Radku, P_0702PSk).Address & "," & _
         .Cells(Nadpis + 2, P_0803UPO).Address & ":" & .Cells(Radku, P_0803UPO).Address & "," & _
         .Cells(Nadpis + 2, P_0902PZa).Address & ":" & .Cells(Radku, P_0902PZa).Address & "," & _
         .Cells(Nadpis + 2, P_1002PNV).Address & ":" & .Cells(Radku, P_1002PNV).Address & "," & _
         .Cells(Nadpis + 2, P_1102PAs).Address & ":" & .Cells(Radku, P_1103PAs).Address & "," & _
         .Cells(Nadpis + 2, P_1202PPR).Address & ":" & .Cells(Radku, P_1202PPR).Address & "," & _
         .Cells(Nadpis + 2, P_1302PLi).Address & ":" & .Cells(Radku, P_1302PLi).Address & "," & _
         .Cells(Nadpis + 2, P_1405StP).Address & ":" & .Cells(Radku, P_1406StP).Address & "," & _
         .Cells(Nadpis + 2, P_1503GAP).Address & ":" & .Cells(Radku, P_1504GAP).Address & "," & _
         .Cells(Nadpis + 1, P_1601Kal).Address & ":" & .Cells(Radku, P_1603Kal).Address).Interior.ColorIndex = 15
  With .Range(.Cells(Nadpis + 2, P_0001PCh).Address & ":" & Cells(Radku, P_Pocet_sloupcu).Address).Borders
   .LineStyle = xlContinuous
   .ColorIndex = xlAutomatic
   .Weight = xlThin
  End With
  For Sloupec = 7 To 10
   With .Range(.Cells(Nadpis + 1, P_0001PCh).Address & ":" & Cells(Nadpis + 1, P_Pocet_sloupcu).Address & "," & _
               .Cells(Soucty, P_0001PCh).Address & ":" & Cells(Soucty, P_Pocet_sloupcu).Address).Borders(Sloupec)
    .LineStyle = xlContinuous
    .ColorIndex = xlAutomatic
    .Weight = xlMedium
   End With
  Next Sloupec
  For Sloupec = 7 To 10
   With .Range(.Cells(Nadpis + 1, P_0001PCh).Address & ":" & .Cells(Radku, P_0001PCh).Address & "," & _
               .Cells(Nadpis + 1, P_0101Sml).Address & ":" & .Cells(Radku, P_0105Sml).Address & "," & _
               .Cells(Nadpis + 1, P_0201Drz).Address & ":" & .Cells(Radku, P_0208Drz).Address & "," & _
               .Cells(Nadpis + 1, P_0301Vla).Address & ":" & .Cells(Radku, P_0308Vla).Address & "," & _
               .Cells(Nadpis + 1, P_0401PrP).Address & ":" & .Cells(Radku, P_0418PrP).Address & "," & _
               .Cells(Nadpis, P_0501POV).Address & ":" & .Cells(Radku, P_0504POV).Address & "," & _
               .Cells(Nadpis, P_0601HAV).Address & ":" & .Cells(Radku, P_0606HAV).Address & "," & _
               .Cells(Nadpis, P_0701PSk).Address & ":" & .Cells(Radku, P_0702PSk).Address & "," & _
               .Cells(Nadpis, P_0801UPO).Address & ":" & .Cells(Radku, P_0803UPO).Address & "," & _
               .Cells(Nadpis, P_0901PZa).Address & ":" & .Cells(Radku, P_0902PZa).Address & "," & _
               .Cells(Nadpis, P_1001PNV).Address & ":" & .Cells(Radku, P_1002PNV).Address & "," & _
               .Cells(Nadpis, P_1101PAs).Address & ":" & .Cells(Radku, P_1103PAs).Address & "," & _
               .Cells(Nadpis, P_1201PPR).Address & ":" & .Cells(Radku, P_1202PPR).Address & "," & _
               .Cells(Nadpis, P_1301PLi).Address & ":" & .Cells(Radku, P_1302PLi).Address & "," & _
               .Cells(Nadpis, P_1401StP).Address & ":" & .Cells(Radku, P_1406StP).Address & "," & _
               .Cells(Nadpis, P_1501GAP).Address & ":" & .Cells(Radku, P_1504GAP).Address & "," & _
               .Cells(Nadpis + 1, P_1601Kal).Address & ":" & .Cells(Radku, P_1603Kal).Address).Borders(Sloupec)
    .LineStyle = xlContinuous
    .ColorIndex = xlAutomatic
    .Weight = xlMedium
   End With
  Next Sloupec
  .Cells(P_Pocatek_dat_r - 1, P_0503POV).FormulaR1C1 = "=SUM(R[1]C:R" & Radku & "C)"
  .Cells(P_Pocatek_dat_r - 1, P_0504POV).FormulaR1C1 = "=SUM(R[1]C:R" & Radku & "C)"
  .Cells(P_Pocatek_dat_r - 1, P_0605HAV).FormulaR1C1 = "=SUM(R[1]C:R" & Radku & "C)"
  .Cells(P_Pocatek_dat_r - 1, P_0606HAV).FormulaR1C1 = "=SUM(R[1]C:R" & Radku & "C)"
  .Cells(P_Pocatek_dat_r - 1, P_0702PSk).FormulaR1C1 = "=SUM(R[1]C:R" & Radku & "C)"
  .Cells(P_Pocatek_dat_r - 1, P_0803UPO).FormulaR1C1 = "=SUM(R[1]C:R" & Radku & "C)"
  .Cells(P_Pocatek_dat_r - 1, P_0902PZa).FormulaR1C1 = "=SUM(R[1]C:R" & Radku & "C)"
  .Cells(P_Pocatek_dat_r - 1, P_1002PNV).FormulaR1C1 = "=SUM(R[1]C:R" & Radku & "C)"
  .Cells(P_Pocatek_dat_r - 1, P_1102PAs).FormulaR1C1 = "=SUM(R[1]C:R" & Radku & "C)"
  .Cells(P_Pocatek_dat_r - 1, P_1103PAs).FormulaR1C1 = "=SUM(R[1]C:R" & Radku & "C)"
  .Cells(P_Pocatek_dat_r - 1, P_1202PPR).FormulaR1C1 = "=SUM(R[1]C:R" & Radku & "C)"
  .Cells(P_Pocatek_dat_r - 1, P_1302PLi).FormulaR1C1 = "=SUM(R[1]C:R" & Radku & "C)"
  .Cells(P_Pocatek_dat_r - 1, P_1405StP).FormulaR1C1 = "=SUM(R[1]C:R" & Radku & "C)"
  .Cells(P_Pocatek_dat_r - 1, P_1406StP).FormulaR1C1 = "=SUM(R[1]C:R" & Radku & "C)"
  .Cells(P_Pocatek_dat_r - 1, P_1503GAP).FormulaR1C1 = "=SUM(R[1]C:R" & Radku & "C)"
  .Cells(P_Pocatek_dat_r - 1, P_1504GAP).FormulaR1C1 = "=SUM(R[1]C:R" & Radku & "C)"
  .Cells(P_Pocatek_dat_r - 1, P_1601Kal).FormulaR1C1 = "=SUM(R[1]C:R" & Radku & "C)"
  .Cells(P_Pocatek_dat_r - 1, P_1602Kal).FormulaR1C1 = "=SUM(R[1]C:R" & Radku & "C)"
  .Cells(P_Pocatek_dat_r - 1, P_1603Kal).FormulaR1C1 = "=SUM(R[1]C:R" & Radku & "C)"
 End With
 Application.ScreenUpdating = SysScreen
 Application.EnableEvents = SysEvents
End Sub
Sub Format_listu(Radku As Long)
 Dim SysScreen As Boolean, SysEvents As Boolean

 SysScreen = Application.ScreenUpdating: Application.ScreenUpdating = False
 SysEvents = Application.EnableEvents: Application.EnableEvents = False
 With Data
  With .Cells
   With .Font
    .Bold = False
    .Name = "Arial"
    .FontStyle = "Oby|fffd|ejn|fffd|"
    .Size = 10
    .ColorIndex = xlAutomatic
   End With
   .HorizontalAlignment = xlGeneral
   .VerticalAlignment = xlGeneral
   .Interior.ColorIndex = 2
  End With
  .Cells.Borders.LineStyle = xlNone
  Call Format_hlavicky
  Call Format_pojistek(Radku)
 End With
 Application.ScreenUpdating = SysScreen
 Application.EnableEvents = SysEvents
End Sub
Sub Format_sloupcu()
 Dim Sloupec As Byte, SysScreen As Boolean, SysEvents As Boolean

 SysScreen = Application.ScreenUpdating: Application.ScreenUpdating = False
 SysEvents = Application.EnableEvents: Application.EnableEvents = False
 With Data
  For Sloupec = 1 To P_Pocet_sloupcu
   .Columns(Sloupec).ColumnWidth = 70
  Next Sloupec
  .Cells.EntireColumn.AutoFit
  If Kalkul > 1 Then
   .Range(.Columns(P_0101Sml).Address & ":" & .Columns(P_0308Vla).Address).EntireColumn.Hidden = True
   If Kalkul > 2 Then
    .Range(.Columns(P_0402PrP).Address & "," & _
           .Columns(P_0412PrP).Address & ":" & .Columns(P_0416PrP).Address & "," & _
           .Columns(P_0418PrP).Address).EntireColumn.Hidden = True
   End If
   .Columns(P_0104Sml).Hidden = False
  End If
  .Range(Columns(P_1701Gol).Address, Columns(P_1703Gol).Address).EntireColumn.Hidden = True
  .Shapes("com_sps").Top = 5
  .Shapes("com_sps").Left = .Cells(P_Pocatek_hla_r, P_hk12_dat_poc + 1).Left + 5
  .Shapes("com_sps").Height = 43
  .Shapes("com_sps").Width = 113
 End With
 Application.ScreenUpdating = SysScreen
 Application.EnableEvents = SysEvents
End Sub
Sub Format_sloupcu2(Nazev_sesitu As String, Nazev_listu As String, ByVal Do_sloupce As Byte)
 Dim Sloupec As Byte, SysScreen As Boolean, SysEvents As Boolean

 SysScreen = Application.ScreenUpdating: Application.ScreenUpdating = False
 SysEvents = Application.EnableEvents: Application.EnableEvents = False
 With Workbooks(Nazev_sesitu).Worksheets(Nazev_listu)
  For Sloupec = 1 To Do_sloupce
   .Columns(Sloupec).ColumnWidth = 70
  Next Sloupec
  .Cells.EntireColumn.AutoFit
  .Cells.EntireRow.AutoFit
 End With
 Application.ScreenUpdating = SysScreen
 Application.EnableEvents = SysEvents
End Sub
Sub GDPR(Optional Anon As Boolean = False)
 Dim FList As Worksheet, Bunka As Range, SysScreen As Boolean, SysEvents As Boolean, OdRadku As Byte, DoRadku As Long, Sloupec As Byte, Hlava As Boolean, Oblast As Range

 SysScreen = Application.ScreenUpdating: Application.ScreenUpdating = False
 SysEvents = Application.EnableEvents: Application.EnableEvents = False
 Call Zaklad2
 If Not P_Anon Then Anon = False
 Data.Unprotect C_Heslo_sesitu
 Sesit.Worksheets("Odhl|fffd|ky").Unprotect C_Heslo_sesitu
 Sesit.Worksheets("Zm|fffd|ny").Unprotect C_Heslo_sesitu
 With Nastav
  For Each Bunka In .Range(.Cells(11, C_Sl_kod).Address & ":" & .Cells(.Rows.Count, C_Sl_kod).End(xlUp).Address)
   Select Case Bunka.Row
    Case 11 To 29
     Sloupec = Bunka.Row - 10
     Select Case Sloupec
      Case 2: Sloupec = P_hk02_poj_ico
      Case 5: Sloupec = P_hk05_frek_pl
      Case 6: Sloupec = P_hk06_sle_pov
      Case 7: Sloupec = P_hk07_sle_hav
      Case 8: Sloupec = P_hk08_sle_pas
      Case 9: Sloupec = P_hk09_sle_stp
      Case 10: Sloupec = P_hk10_sle_gap
      Case 12: Sloupec = P_hk12_dat_poc
     End Select
    Case 31 To 129:  Sloupec = Bunka.Row - 30
    Case 131 To 149: Sloupec = Bunka.Row - 130
    Case 151 To 179: Sloupec = Bunka.Row - 150
    Case 181 To 199: Sloupec = Bunka.Row - 180
    Case 201 To 219: Sloupec = Bunka.Row - 200
   End Select
   Select Case Bunka.Row
    Case 11:  Hlava = True:  OdRadku = P_Pocatek_hla_r: DoRadku = P_Pocatek_hla_r: Set FList = Data
    Case 31:  Hlava = False: OdRadku = P_Pocatek_dat_r: DoRadku = FList.Cells(.Rows.Count, P_0101Sml).End(xlUp).Row: DoRadku = IIf(DoRadku < OdRadku, OdRadku, DoRadku)
    Case 131: Hlava = True:  OdRadku = 4: DoRadku = 4: Set FList = Sesit.Worksheets("Zm|fffd|ny")
    Case 151: Hlava = False: OdRadku = 8: DoRadku = FList.Cells(.Rows.Count, 1).End(xlUp).Row: DoRadku = IIf(DoRadku < OdRadku, OdRadku, DoRadku)
    Case 181: Hlava = True:  OdRadku = 4: DoRadku = 4: Set FList = Sesit.Worksheets("Odhl|fffd|ky")
    Case 201: Hlava = False: OdRadku = 8: DoRadku = FList.Cells(.Rows.Count, 1).End(xlUp).Row: DoRadku = IIf(DoRadku < OdRadku, OdRadku, DoRadku)
   End Select
   If UCase(Bunka.Offset(0, 2).Value) = "X" Then
    Set Oblast = IIf(Hlava, FList.Cells(OdRadku, Sloupec), FList.Range(.Cells(OdRadku, Sloupec).Address & ":" & .Cells(DoRadku, Sloupec).Address))
    Oblast.Font.ColorIndex = IIf(Anon, 1, xlAutomatic)
    Oblast.Interior.ColorIndex = IIf(Anon, 1, xlAutomatic)
    If Oblast.Row <> 4 Then Oblast.Locked = Anon
   End If
  Next Bunka
 End With
 Call Zamkni_list(Data.Name)
 Call Zamkni_list("Odhl|fffd|ky")
 Call Zamkni_list("Zm|fffd|ny")
 Application.ScreenUpdating = SysScreen
 Application.EnableEvents = SysEvents
End Sub

Attribute VB_Name = "M_02Kontrola"
Option Explicit
Function Kontrola_ic_rc(Bunka As Range, Format_bunky As String, Typ As String, Parametr As String) As Boolean
 Dim Text_chyby As String, Retezec As String

 On Error GoTo MamChybu
 Retezec = Trim(Bunka.Value)
 If Retezec = "" Then
  Text_chyby = "nen|fffd| vypln|fffd|no"
 Else
  Retezec = Pouze_cisla(Retezec)
  Select Case Len(Retezec)
   Case 9, 10: Text_chyby = Kontrola_rc(Retezec)
   Case 8: Text_chyby = Kontrola_ic(Retezec)
   Case Else: Text_chyby = "nelze zkontrolovat"
  End Select
 End If

MamChybu:
 If Err <> 0 Then Text_chyby = "neplatn|fffd| hodnota"
 On Error GoTo 0
 If Parametr = "HIP" Then
  If Text_chyby = "" And P_Web_kosilka Then
   If Retezec <> K_Flotila.PIC Then Text_chyby = "neodpov|fffd|d|fffd| SPS"
  End If
  If Text_chyby = "" Then P_Flotila.PIC = Retezec
 ElseIf Text_chyby <> "" Then
  If Left(Text_chyby, 2) = "I|fffd|" Or Left(Text_chyby, 2) = "R|fffd|" Then Typ = Replace(Typ, "I|fffd|/R|fffd| - ", "")
  Text_chyby = Typ & Text_chyby
 End If
 Kontrola_ic_rc = Zaver_kontoly(Bunka, Retezec, Text_chyby, Format_bunky)
End Function
Private Function Kontrola_rc(Retezec As String) As String
 Dim Rok As Integer, Mesic As Byte, Den As Byte

 Rok = Mid(Retezec, 1, 2)
 Mesic = Mid(Retezec, 3, 2)
 Den = Mid(Retezec, 5, 2)
 If Len(Retezec) = 9 Then
  Rok = Rok + 1900
 ElseIf Rok >= 0 And Rok <= Year(Now) - 2000 Then
  Rok = Rok + 2000
 Else
  Rok = Rok + 1900
 End If
 If Len(Retezec) = 9 Then
  If Rok > 1954 Then
   Kontrola_rc = "R|fffd| - |fffd|patn|fffd| form|fffd|t"
   Exit Function
  End If
 ElseIf Mid(Retezec, 7, 4) <> "9999" And Mid(Retezec, 7, 4) <> "1111" Then
  If Right(Left(Retezec, 9) Mod 11, 1) <> Right(Retezec, 1) Then
   Kontrola_rc = "R|fffd| - |fffd|patn|fffd| form|fffd|t"
   Exit Function
  End If
 End If

 'zda je pripocitana spravna hodnota, 0 a 20 muz, 50 a 70 zena
 If Rok > 2003 Then
  Select Case Mesic
   Case 21 To 32, 71 To 82: Mesic = Mesic - 20
  End Select
 End If
 Select Case Mesic
  Case 51 To 62: Mesic = Mesic - 50
 End Select

 If Rok <= Year(Now) And Mesic >= 1 And Mesic <= 12 Then
  If Den >= Day(DateSerial(Rok, Mesic, 1)) And Den <= Day(DateSerial(Rok, Mesic + 1, 0)) Then Exit Function
 End If
 Kontrola_rc = "R|fffd| - |fffd|patn|fffd| form|fffd|t"
End Function
Private Function Kontrola_ic(Retezec As String) As String
 Dim Pozice As Byte, Celkem As Integer

 For Pozice = 1 To 7
  Celkem = Celkem + (Mid(Retezec, Pozice, 1) * (9 - Pozice))
 Next Pozice
 Pozice = Right(Retezec, 1)
 Celkem = Celkem Mod 11
 Select Case Celkem
  Case 0, 10: If Pozice = 1 Then Exit Function
  Case 1: If Pozice = 0 Then Exit Function
  Case Else: If Pozice = 11 - Celkem Then Exit Function
 End Select
 Kontrola_ic = "I|fffd| - |fffd|patn|fffd| form|fffd|t"
End Function
Function Kontrola_cisla_smlouvy(Bunka As Range, Format_bunky As String, Typ As String, Parametr As String) As Boolean
 Dim Text_chyby As String, Retezec As String, Pozice As Byte, Celkem As Integer, Radek As Long

 On Error GoTo MamChybu
 Radek = Bunka.Row
 Retezec = Trim(Bunka.Value)
 If Retezec = "" Then
  Text_chyby = "nen|fffd| vypln|fffd|no"
 Else
  Retezec = Pouze_cisla(Retezec)
  Retezec = Right("000000000" & Retezec, 10)
  Select Case Len(Retezec)
   Case 10
    If Mid(Retezec, 1, 3) <> "388" And Parametr = "HIP" Then
     Text_chyby = "mus|fffd| za|fffd||fffd|nat na 388..."
    ElseIf Mid(Retezec, 1, 2) <> "38" And Parametr = "PS" Then
     If P_Smlouva(Radek).MamPOV = "A" Or P_Smlouva(Radek).MamHAV = "A" Then Text_chyby = IIf(P_Smlouva(Radek).MamPOV = "A", "u POV ", "u HAV ") & "mus|fffd| za|fffd||fffd|nat na 38..."
    ElseIf Mid(Retezec, 1, 3) = "388" And Parametr = "PS" Then
     Text_chyby = "nesm|fffd| za|fffd||fffd|nat na 388..."
    Else
     If Mid(Retezec, 1, 2) = "38" And Parametr = "PS" Then If Not (P_Smlouva(Radek).MamPOV = "A" Or P_Smlouva(Radek).MamHAV = "A") Then Text_chyby = "u dodatku nesm|fffd| za|fffd||fffd|nat na 38..."
    End If
    If Text_chyby = "" Then
     For Pozice = 1 To 9
      Celkem = Celkem + (Mid(Retezec, Pozice, 1) * Pozice)
     Next Pozice
     Celkem = Celkem Mod 11
     If Not Right(CStr(Celkem), 1) = Right(Retezec, 1) Then Text_chyby = "nen|fffd| platn|fffd|"
    End If
   Case Else
    Text_chyby = "neplatn|fffd| d|fffd|lka"
  End Select
 End If

MamChybu:
 If Err <> 0 Then Text_chyby = "neplatn|fffd| hodnota"
 On Error GoTo 0
 If Text_chyby <> "" And Parametr <> "HIP" Then Text_chyby = Typ & Text_chyby
 Kontrola_cisla_smlouvy = Zaver_kontoly(Bunka, Retezec, Text_chyby, Format_bunky)
End Function
Function Kontrola_typu_flotily(Bunka As Range, Format_bunky As String, Optional Zakladni As Boolean = False) As Boolean
 Dim Text_chyby As String, Retezec As String

 On Error GoTo MamChybu
 Retezec = Bez_znamenek(Trim(UCase(Bunka.Value)))

 P_Flotila.Typ = Parametry("ID_FLOT", Retezec, IIf(Zakladni, 0, 1), 2)
 If P_Flotila.Typ = "^" Then
  Text_chyby = "neplatn|fffd| hodnota"
 Else
  P_BezSaz = IIf(InStr(1, P_Flotila.Typ, "X") > 0, True, False)
 End If

MamChybu:
 If Err <> 0 Then Text_chyby = "neplatn|fffd| hodnota"
 On Error GoTo 0
 If Text_chyby = "" And P_Web_kosilka Then
  If P_Flotila.Typ <> K_Flotila.Typ Then Text_chyby = "neodpov|fffd|d|fffd| SPS"
 End If
 Kontrola_typu_flotily = Zaver_kontoly(Bunka, P_Flotila.Typ, Text_chyby, Format_bunky)
End Function
Function Kontrola_frekvence_placeni(Bunka As Range, Format_bunky As String) As Boolean
 Dim Text_chyby As String, Retezec As String

 On Error GoTo MamChybu
 Retezec = Trim(Bunka.Value)
 If Retezec = "" Then
  Text_chyby = "nen|fffd| vypln|fffd|na"
 Else
  Retezec = Pouze_cisla(Retezec, Bez0:=True)
  Select Case Retezec
   Case "1", "2", "4", "12": P_Flotila.Frk = CByte(Retezec)
   Case Else: Text_chyby = "neplatn|fffd| hodnota"
  End Select
 End If

MamChybu:
 If Err <> 0 Then Text_chyby = "neplatn|fffd| hodnota"
 On Error GoTo 0
 If Text_chyby = "" And P_Web_kosilka Then
  If P_Flotila.Frk <> K_Flotila.Frk Then Text_chyby = "neodpov|fffd|d|fffd| SPS"
 End If
 If Text_chyby <> "" Then P_Flotila.Frk = "^"
 Kontrola_frekvence_placeni = Zaver_kontoly(Bunka, Retezec, Text_chyby, Format_bunky)
End Function
Function Kontrola_obchodni_slevy(Bunka As Range, Format_bunky As String, Typ As String) As Boolean
 Dim Text_chyby As String, Retezec As String, Cislo As Double, Min As Double, Max As Double

 On Error GoTo MamChybu
 Typ = Mid(Typ, 4, Len(Typ))
 Retezec = Trim(Bunka.Value)
 If Retezec = "" Then
  Text_chyby = "nen|fffd| vypln|fffd|na"
 Else
  Retezec = Pouze_cisla(Retezec, 2, True, True, True)
  If Retezec = "" Then
   Text_chyby = "nep|fffd||fffd|pustn|fffd| hodnota"
  Else
   Min = Sazebnik("SLV_" & Typ, 3)
   Max = Sazebnik("SLV_" & Typ, 4)
   Cislo = CDbl(Retezec)
   Select Case Cislo
    Case Min To Max
    Case Min / 100 To Max / 100: Cislo = Cislo * 100
    Case Else: Text_chyby = "nep|fffd||fffd|pustn|fffd| hodnota"
   End Select
  End If
 End If

MamChybu:
 If Err <> 0 Then Text_chyby = "neplatn|fffd| hodnota"
 On Error GoTo 0
 If Text_chyby = "" And P_Web_kosilka Then
  Select Case Typ
   Case "POV": If Retezec <> K_Flotila.POV Then Text_chyby = "neodpov|fffd|d|fffd| SPS"
   Case "HAV": If Retezec <> K_Flotila.HAV Then Text_chyby = "neodpov|fffd|d|fffd| SPS"
   Case "PAS": If Retezec <> K_Flotila.PAs Then Text_chyby = "neodpov|fffd|d|fffd| SPS"
   Case "STP": If Retezec <> K_Flotila.StP Then Text_chyby = "neodpov|fffd|d|fffd| SPS"
   Case "GAP": If Retezec <> K_Flotila.GAP Then Text_chyby = "neodpov|fffd|d|fffd| SPS"
  End Select
 End If
 If Text_chyby = "" Then
  If Cislo > Sazebnik("SLV_" & Typ, 2) Then
   Call Pridej_hlaseni(P_Hlasit)
   Bunka.Interior.ColorIndex = C_Barva_chyby_spravce
  End If
  Retezec = (100 - Cislo) / 100
 Else
  Retezec = "^"
 End If
 Select Case Typ
  Case "POV": P_Flotila.POV = Retezec
  Case "HAV": P_Flotila.HAV = Retezec
  Case "PAS": P_Flotila.PAs = Retezec
  Case "STP": P_Flotila.StP = Retezec
  Case "GAP": P_Flotila.GAP = Retezec
 End Select
 Kontrola_obchodni_slevy = Zaver_kontoly(Bunka, Cislo, Text_chyby, Format_bunky)
End Function
Function Kontrola_volby(Bunka As Range, Format_bunky As String, Typ As String, Parametr As String) As Boolean
 Dim Text_chyby As String, Retezec As String

 On Error GoTo MamChybu
 Retezec = Bez_znamenek(UCase(Trim(Bunka.Value)))
 Select Case Parametr
  Case "PD"
   Select Case Retezec
    Case "P", "PRVOVZNIK", "D", "DODATEK"
     Retezec = Left(Retezec, 1)
     P_Smlouva(Bunka.Row).P_D = Retezec
    Case Else
     Text_chyby = "neobsahuje hodnotu P/D"
     P_Smlouva(Bunka.Row).P_D = "^"
   End Select
  Case "AN"
   Select Case Retezec
    Case "A", "ANO", "N", "NE": Retezec = Left(Retezec, 1)
    Case Else: Text_chyby = "neobsahuje hodnotu A/N"
   End Select
 End Select

MamChybu:
 If Err <> 0 Then Text_chyby = "neplatn|fffd| hodnota"
 On Error GoTo 0
 If Text_chyby <> "" Then Text_chyby = Typ & Text_chyby
 Kontrola_volby = Zaver_kontoly(Bunka, Retezec, Text_chyby, Format_bunky)
End Function
Function Kontrola_data(Bunka As Range, Format_bunky As String, Typ As String, Parametr As String) As Boolean
 Dim Text_chyby As String, Retezec As String, DatumSazOd As Date, DatumSazDo As Date, Datum As Date, DatupPred As Date, BunkaPredchozi As Range, Barva As Byte

 On Error GoTo MamChybu
 If Parametr <> "KP" And Parametr <> "SF" And Parametr <> "PF" Then
  DatumSazOd = Sazebnik("DAT_" & Parametr, 1)
  DatumSazDo = Sazebnik("DAT_" & Parametr, 2)
 End If
 If Parametr <> "SP" And Parametr <> "SF" Then
  Set BunkaPredchozi = Bunka.Offset(0, -1)
 End If
 Barva = C_Barva_chyby
 Retezec = Trim(Bunka.Value)
 If Retezec = "" Then
  If Not (Parametr = "KP" Or Parametr = "SF" And Kalkul > 0) Then Text_chyby = "nen|fffd| vypln|fffd|n"
 ElseIf IsDate(Retezec) Or IsNumeric(Retezec) Then
  Datum = CDate(Retezec)
  If (Datum < DatumSazOd Or Datum > DatumSazDo) And Parametr <> "KP" And Parametr <> "SF" And Parametr <> "PF" Then
   Text_chyby = "je mimo povolen|fffd| obdob|fffd|"
  ElseIf Parametr = "SF" Then
  ElseIf Parametr = "SP" Then
   If Datum > Date And Not P_Web_test Then
    Text_chyby = "je v budoucnosti"
   ElseIf Datum < DateAdd("d", Sazebnik("DAT_MAX", 1), Date) Then
    Text_chyby = "nesm|fffd| b|fffd|t star|fffd||fffd| " & Replace(Sazebnik("DAT_MAX", 1), "-", "") & " dn|fffd|"
    Barva = C_Barva_chyby_spravce
   End If
  ElseIf BunkaPredchozi.Interior.ColorIndex = C_Barva_chyby And Kalkul = 0 Then
   Text_chyby = "nelze zkontrolovat"
  Else
   DatupPred = CDate(BunkaPredchozi.Value)
   If Parametr = "PP" Or Parametr = "PF" Then
    If Kalkul = 0 Then
     If Datum < DatupPred Then
      Text_chyby = "p|fffd|edch|fffd|z|fffd| datu sjedn|fffd|n|fffd|"
     ElseIf Parametr = "PF" Then
     ElseIf Datum > DateAdd("d", Sazebnik("DAT_MAX", 2), DatupPred) Then
      Text_chyby = "nen|fffd| v rozsahu + " & Sazebnik("DAT_MAX", 2) & " dn|fffd| od data sjedn|fffd|n|fffd|"
     End If
    End If
   Else
    If Datum <= DatupPred Then
     Text_chyby = "je stejn|fffd| nebo p|fffd|edch|fffd|z|fffd| datu po|fffd||fffd|tku"
    ElseIf Datum < DateSerial(Year(DatupPred) + 1, Month(DatupPred), Day(DatupPred) - 1) And P_Bez_ZK Then
     Text_chyby = "nesm|fffd| b|fffd|t men|fffd||fffd| ne|fffd| 1 rok od po|fffd||fffd|tku smlouvy"
    End If
   End If
  End If
 Else
  Text_chyby = "nen|fffd| datum"
 End If

MamChybu:
 If Err <> 0 Then Text_chyby = "neplatn|fffd| hodnota"
 On Error GoTo 0
 
 If Parametr = "SF" Or Parametr = "PF" Then
  If Text_chyby = "" And P_Web_kosilka Then
   If Parametr = "SF" And Datum <> K_Flotila.DSF Or Parametr = "PF" And Datum <> K_Flotila.DPF Then Text_chyby = "neodpov|fffd|d|fffd| SPS"
  End If
  If Text_chyby = "" Then
   If Parametr = "SF" Then
    P_Flotila.DSF = Datum
   Else
    P_Flotila.DPF = Datum
   End If
  End If
 ElseIf Text_chyby <> "" Then
  Text_chyby = Typ & Text_chyby
 End If
 Kontrola_data = Zaver_kontoly(Bunka, Datum, Text_chyby, Format_bunky, True, Barva)
End Function
Function Kontrola_vyplneni_dle_bunky(Bunka As Range, Format_bunky As String, Typ As String, Parametr As String) As Boolean
 Dim Text_chyby As String, Retezec As String, BunkaVazana As Range

 On Error GoTo MamChybu
 Select Case Parametr
  Case "0201": Set BunkaVazana = Bunka.Offset(0, P_0201Drz - Bunka.Column)
  Case "0301": Set BunkaVazana = Bunka.Offset(0, P_0301Vla - Bunka.Column)
  Case "0412": Set BunkaVazana = Bunka.Offset(0, P_0412PrP - Bunka.Column)
 End Select

 Retezec = Trim(Bunka.Value)
 If BunkaVazana.Interior.ColorIndex <> C_Barva_chyby Then
  If Parametr = "0412" Then
   If BunkaVazana.Value = "N" And Retezec <> "" Then Text_chyby = "lze vyplnit pouze v p|fffd||fffd|pad|fffd| ozna|fffd|en|fffd| leasingov|fffd|ho n|fffd|jmu 'A'"
  ElseIf Len(BunkaVazana.Value) = 8 Then
   If Retezec <> "" Then Text_chyby = "u podnikatele se nevypl|fffd|uje"
  Else
   If Retezec = "" And InStr(Typ, "jm|fffd|no") > 0 Then Text_chyby = "nen|fffd| vypln|fffd|n|fffd|"
  End If
 End If

MamChybu:
 If Err <> 0 Then Text_chyby = "neplatn|fffd| hodnota"
 On Error GoTo 0
 If Text_chyby <> "" Then Text_chyby = Typ & Text_chyby
 Kontrola_vyplneni_dle_bunky = Zaver_kontoly(Bunka, Retezec, Text_chyby, Format_bunky)
End Function
Function Kontrola_PSC(Bunka As Range, Format_bunky As String, Typ As String) As Boolean
 Dim Text_chyby As String, Retezec As String, Cislo As Long

 On Error GoTo MamChybu
 Retezec = Trim(Bunka.Value)
 If Retezec = "" Then
  Text_chyby = "nen|fffd| vypln|fffd|no"
 Else
  Cislo = Pouze_cisla(Retezec)
  If Len(CStr(Cislo)) <> 5 Then Text_chyby = "chybn|fffd| vypln|fffd|n|fffd|"
 End If

MamChybu:
 If Err <> 0 Then Text_chyby = "neplatn|fffd| hodnota"
 On Error GoTo 0
 If Text_chyby <> "" Then Text_chyby = Typ & Text_chyby
 Kontrola_PSC = Zaver_kontoly(Bunka, Cislo, Text_chyby, Format_bunky)
End Function
Function Kontrola_RZ(Bunka As Range, Format_bunky As String, Typ As String) As Boolean
 Dim Text_chyby As String, Retezec As String, Pozice As Byte, N_jin As Boolean

 On Error GoTo MamChybu
 Retezec = Trim(Bunka.Value)
 If Retezec <> "" Then
  Retezec = Bez_znamenek_velka(UCase(Retezec))
  Retezec = Replace(Retezec, " ", "")
  Retezec = Replace(Retezec, "-", "")
  Retezec = Replace(Retezec, "/", "")
  N_jin = False
  For Pozice = 1 To Len(Retezec)
   Select Case Mid(Retezec, Pozice, 1)
    Case 0 To 9, "A" To "Z"
    Case Else: N_jin = True: Exit For
   End Select
  Next Pozice
  If N_jin Then Text_chyby = "obsahuje nepovolen|fffd| znaky"
  If Retezec = "NENI" Then Text_chyby = "nepovolen|fffd| obsah"
  If Text_chyby = "" And Len(Retezec) > 12 Then Text_chyby = IIf(Len(Text_chyby) > 0, Text_chyby & ", ", "") & "je del|fffd||fffd| ne|fffd| 12 znak|fffd|"
 End If

MamChybu:
 If Err <> 0 Then Text_chyby = "neplatn|fffd| hodnota"
 On Error GoTo 0
 If Text_chyby <> "" Then Text_chyby = Typ & Text_chyby
 Kontrola_RZ = Zaver_kontoly(Bunka, Retezec, Text_chyby, Format_bunky)
End Function
Function Kontrola_TP(Bunka As Range, Format_bunky As String, Typ As String) As Boolean
 Dim Text_chyby As String, Retezec As String, Retezec_cisty As String, Pozice As Byte, Znak As String * 1, Neplatny_znak As String

 On Error GoTo MamChybu
 Retezec = Trim(Bunka.Value)
 If Retezec <> "" Then
  Retezec = Bez_znamenek_velka(UCase(Retezec))
  Retezec = Replace(Retezec, " ", "")
  Retezec = Replace(Retezec, "-", "")
  Retezec = Replace(Retezec, "/", "")
  For Pozice = 1 To Len(Retezec)
   Znak = Mid(Retezec, Pozice, 1)
   Select Case Znak
    Case "Q": Neplatny_znak = Neplatny_znak & ", " & Znak
    Case "A" To "Z"
     If Pozice > 2 Then
      If Znak = "O" Then
       Znak = "0"
      Else
       Text_chyby = "neplatn|fffd| form|fffd|t (od 3 znaku mus|fffd| b|fffd|t |fffd||fffd|sla)"
       Exit For
      End If
     End If
     Retezec_cisty = Retezec_cisty & Znak
    Case 0 To 9
     If Pozice < 3 Then
      If Znak = "0" Then
       Znak = "O"
      Else
       Text_chyby = "neplatn|fffd| form|fffd|t (1 a 2 znak mus|fffd| b|fffd|t p|fffd|smeno)"
       Exit For
      End If
     End If
     Retezec_cisty = Retezec_cisty & Znak
    Case Else: Neplatny_znak = Neplatny_znak & ", " & Znak
   End Select
  Next Pozice
  If Len(Neplatny_znak) > 0 Then Text_chyby = "obsahuje neplatn|fffd| znak(" & Mid(Neplatny_znak, 3) & ")"
  If Text_chyby = "" Then
   If Len(Retezec_cisty) < 8 Then
    Text_chyby = "nem|fffd| d|fffd|lku 8 znak|fffd|"
   ElseIf Len(Retezec_cisty) > 8 Then
    Text_chyby = "je del|fffd||fffd| ne|fffd| 8 znak|fffd|"
   End If
  End If
 End If

MamChybu:
 If Err <> 0 Then Text_chyby = "neplatn|fffd| hodnota"
 On Error GoTo 0
 If Text_chyby <> "" Then Text_chyby = Typ & Text_chyby
 Kontrola_TP = Zaver_kontoly(Bunka, Retezec_cisty, Text_chyby, Format_bunky)
End Function
Function Kontrola_VIN(Bunka As Range, Format_bunky As String, Typ As String) As Boolean
 Dim Text_chyby As String, Retezec As String, Retezec_cisty As String, Pozice As Byte, Znak As String * 1, Neplatny_znak As String

 On Error GoTo MamChybu
 Retezec = Trim(Bunka.Value)
 If Retezec <> "" Then
  Retezec = Bez_znamenek_velka(UCase(Retezec))
  For Pozice = 1 To Len(Retezec)
   Znak = Mid(Retezec, Pozice, 1)
   Select Case Znak
    Case "I", "Q": Neplatny_znak = Neplatny_znak & ", " & Znak
    Case "A" To "Z", 0 To 9
     If Znak = "O" And Pozice > 0 Then
      Znak = "0"
     End If
     Retezec_cisty = Retezec_cisty & Znak
    Case " ", "-", "/", ".", ",", "%", "?"
    Case Else: Neplatny_znak = Neplatny_znak & ", " & Znak
   End Select
  Next Pozice
  If Len(Neplatny_znak) > 0 Then Text_chyby = "obsahuje neplatn|fffd| znak(" & Mid(Neplatny_znak, 3) & ")"
  If Text_chyby = "" And Len(Retezec_cisty) > 17 Then Text_chyby = "je del|fffd||fffd| ne|fffd| 17 znak|fffd|"
 End If

MamChybu:
 If Err <> 0 Then Text_chyby = "neplatn|fffd| hodnota"
 On Error GoTo 0
 If Text_chyby <> "" Then Text_chyby = Typ & Text_chyby
 Kontrola_VIN = Zaver_kontoly(Bunka, Retezec_cisty, Text_chyby, Format_bunky)
End Function
Function Kontrola_RZ_TP_VIN(ByVal Bunka As Range, Kod As String) As String
 Dim MamRZ As Boolean, MamTP As Boolean, MamVIN As Boolean, RZ As Range, TP As Range, VIN As Range, Podm As String

 MamRZ = False: MamTP = False: MamVIN = False
 Set RZ = Bunka.Offset(0, P_0401PrP - Bunka.Column)
 Set TP = Bunka.Offset(0, P_0402PrP - Bunka.Column)
 Set VIN = Bunka.Offset(0, P_0403PrP - Bunka.Column)
 Set Bunka = VIN

 Podm = Parametry("ID_332", Kod, 0, 5, VIN.Row, P_Smlouva(VIN.Row).Dru_voz)
 If Kalkul > 0 Then Exit Function

 If RZ.Value <> "" Then MamRZ = True
 If TP.Value <> "" Then MamTP = True
 If VIN.Value <> "" Then MamVIN = True

 If (MamVIN Or Mid(Podm, 1, 1) = "N") And (MamTP Or Mid(Podm, 2, 1) = "N") And (MamRZ Or Mid(Podm, 3, 1) = "N") Then
  If RZ.Value = VIN.Value And Not (RZ.Value = "" Or VIN.Value = "") Then
   RZ.Interior.ColorIndex = C_Barva_chyby
   Kontrola_RZ_TP_VIN = "RZ a VIN - nesm|fffd| se shodovat"
  ElseIf TP.Value = VIN.Value And Not (TP.Value = "" Or VIN.Value = "") Then
   TP.Interior.ColorIndex = C_Barva_chyby
   Kontrola_RZ_TP_VIN = "TP a VIN - nesm|fffd| se shodovat"
  ElseIf RZ.Value = TP.Value And Not (RZ.Value = "" Or TP.Value = "") Then
   Set Bunka = TP
   RZ.Interior.ColorIndex = C_Barva_chyby
   Kontrola_RZ_TP_VIN = "RZ a TP - nesm|fffd| se shodovat"
  End If
 Else
  Kontrola_RZ_TP_VIN = "je nutn|fffd| vyplnit "
  If Not MamVIN And Mid(Podm, 1, 1) = "A" Then
   VIN.Interior.ColorIndex = C_Barva_chyby
   Kontrola_RZ_TP_VIN = Kontrola_RZ_TP_VIN & "VIN, "
  End If
  If Not MamTP And Mid(Podm, 2, 1) = "A" Then
   Set Bunka = TP
   TP.Interior.ColorIndex = C_Barva_chyby
   Kontrola_RZ_TP_VIN = Kontrola_RZ_TP_VIN & "TP, "
  End If
  If Not MamRZ And Mid(Podm, 3, 1) = "A" Then
   Set Bunka = RZ
   RZ.Interior.ColorIndex = C_Barva_chyby
   Kontrola_RZ_TP_VIN = Kontrola_RZ_TP_VIN & "RZ, "
  End If
  Kontrola_RZ_TP_VIN = Left(Kontrola_RZ_TP_VIN, Len(Kontrola_RZ_TP_VIN) - 2)
 End If
 If Kontrola_RZ_TP_VIN <> "" Then Call Zaver_kontoly(Bunka, Bunka.Value, "-" & Nastav.Cells(P_0401PrP + 30, C_Sl_kod - 2).Value & " - " & Kontrola_RZ_TP_VIN, "@")
End Function
Function Kontrola_druhu_vozidla(Bunka As Range, Format_bunky As String, Typ As String) As Boolean
 Dim Text_chyby As String, Retezec As String

 On Error GoTo MamChybu
 Retezec = Bez_znamenek_velka(UCase(Trim(Bunka.Value)))
 If Retezec = "" Then
  Text_chyby = "nen|fffd| vypln|fffd|n"
 Else
  Retezec = Parametry("ID_300", Retezec, 0, 3, Bunka.Row, Bunka.Offset(0, P_0410PrP - Bunka.Column).Value)
  If Retezec = "" Then Text_chyby = "nen|fffd| vypln|fffd|na p|fffd||fffd|pustn|fffd| hodnota"
 End If

MamChybu:
 If Err <> 0 Then Text_chyby = "neplatn|fffd| hodnota"
 On Error GoTo 0
 If Text_chyby <> "" Then
  Text_chyby = Typ & Text_chyby
  P_Smlouva(Bunka.Row).Dru_voz = "^"
 End If
 Kontrola_druhu_vozidla = Zaver_kontoly(Bunka, Retezec, Text_chyby, Format_bunky)
End Function
Function Kontrola_tovarni_znacky(Bunka As Range, Format_bunky As String, Typ As String) As Boolean
 Dim Text_chyby As String, Retezec As String, Polozka As Long, MamTZ As Boolean

 On Error GoTo MamChybu
 MamTZ = False
 Retezec = UCase(Trim(Bunka.Value))
 With Nastav
  If Retezec = "" Then
   Text_chyby = "nen|fffd| vypln|fffd|na"
  Else
   For Polozka = 2 To .Cells(2, C_Sl_tzn).End(xlDown).Row
    If Retezec = .Cells(Polozka, C_Sl_tzn) Then
     P_Smlouva(Bunka.Row).Znacka_voz = Retezec
     P_Smlouva(Bunka.Row).Znacka_v_H = Retezec
     MamTZ = True
     Exit For
    End If
   Next Polozka
   If Not MamTZ Then Text_chyby = "nezn|fffd|m|fffd| zna|fffd|ka"
  End If
 End With

MamChybu:
 If Err <> 0 Then Text_chyby = "neplatn|fffd| hodnota"
 On Error GoTo 0
 If Text_chyby <> "" Then
  Text_chyby = Typ & Text_chyby
  P_Smlouva(Bunka.Row).Znacka_voz = "^"
  P_Smlouva(Bunka.Row).Znacka_v_H = "^"
 End If
 Kontrola_tovarni_znacky = Zaver_kontoly(Bunka, Retezec, Text_chyby, Format_bunky)
End Function
Function Kontrola_typu_vozidla(Bunka As Range, Format_bunky As String, Typ As String) As Boolean
 Dim Text_chyby As String, Retezec As String, Bunka_zn As Range, Znacka As String, Cast_nacky As String, PoziceOd As Byte, PoziceDo As Byte, Delka As Byte

 On Error GoTo MamChybu
 With Bunka
  Retezec = UCase(Trim(.Value))
  If Retezec = "" Then
   Text_chyby = "nen|fffd| vypln|fffd|n"
  Else
   Znacka = P_Smlouva(.Row).Znacka_voz
   PoziceOd = 1
   Do
    PoziceDo = InStr(PoziceOd, Znacka, " ")
    If PoziceDo > 1 Then
     Cast_nacky = Mid(Znacka, PoziceOd, PoziceDo - PoziceOd)
    Else
     PoziceDo = Len(Znacka)
     Cast_nacky = IIf(PoziceOd > 1, Mid(Znacka, PoziceOd), Znacka)
    End If
    If InStr(1, Cast_nacky, Retezec) > 0 Then
     .Offset(0, P_0405PrP - .Column).Interior.ColorIndex = C_Barva_chyby_spravce
     Text_chyby = "nesm|fffd| obsahovat zna|fffd|ku vozidla"
     Exit Do
    End If
    PoziceOd = PoziceDo + 1
   Loop Until PoziceOd > Len(Znacka)
   Select Case P_Smlouva(.Row).Dru_voz
    Case "O", "D", "S", "N"
     If P_Smlouva(.Row).Znacka_voz = "|fffd|KODA" Then Retezec = Parametry("ID_TYP", Retezec, 0, 3, .Row): If P_Smlouva(.Row).Znacka_v_H = "^" Then Text_chyby = "nezn|fffd|m|fffd| typ vozidla"
   End Select
  End If
 End With

MamChybu:
 If Err <> 0 Then Text_chyby = "neplatn|fffd| hodnota"
 On Error GoTo 0
 If Text_chyby <> "" Then Text_chyby = Typ & Text_chyby
 Kontrola_typu_vozidla = Zaver_kontoly(Bunka, Retezec, Text_chyby, Format_bunky)
End Function
Function Kontrola_roku_vyroby(Bunka As Range, Format_bunky As String, Typ As String) As Boolean
 Dim Text_chyby As String, Retezec As String, Cislo As Integer

 On Error GoTo MamChybu
 Retezec = Trim(Bunka.Value)
 If Retezec = "" Then
  Text_chyby = "nen|fffd| vypln|fffd|n"
 ElseIf IsDate(Retezec) Or IsNumeric(Retezec) Then
  If IsDate(Retezec) Then Retezec = Year(Retezec)
  Cislo = CInt(Retezec)
  If Cislo < 1910 Or Cislo > Year(Date) Then Text_chyby = "mimo povolen|fffd| obdob|fffd|"
 Else
  Text_chyby = "obsahuje nep|fffd||fffd|pustnou hodnotu"
 End If

MamChybu:
 If Err <> 0 Then Text_chyby = "neplatn|fffd| hodnota"
 On Error GoTo 0
 If Text_chyby <> "" Then Text_chyby = Typ & Text_chyby
 Kontrola_roku_vyroby = Zaver_kontoly(Bunka, Cislo, Text_chyby, Format_bunky)
End Function
Function Kontrola_VOHP(Bunka As Range, Format_bunky As String, Typ As String, Parametr As String) As Boolean
 Dim Text_chyby As String, Retezec As String, Cislo As Double, Min As Double, Max As Double, Druh_vozidla As Range, Pozice As Byte

 On Error GoTo MamChybu
 Retezec = Trim(Bunka.Value)
 If Retezec = "" Then
  Text_chyby = "nen|fffd| vypln|fffd|n" & IIf(Parametr = "KH", "a", "")
 Else
  If Parametr = "KV" Or Parametr = "KP" Then
   Retezec = Pouze_cisla(Trim(Bunka.Value), Do1NeCisla:=True, Bez0:=True)
  Else
   Retezec = Pouze_cisla(Trim(Bunka.Value))
  End If
  If Retezec = "" Or Not CStr(Round2(CDbl(Retezec))) = Retezec Then
   Text_chyby = "nen|fffd| vypl|fffd|no cel|fffd| |fffd||fffd|slo"
  Else
   Set Druh_vozidla = Bunka.Offset(0, P_0404PrP - Bunka.Column)
   If Druh_vozidla.Interior.ColorIndex = C_Barva_chyby Then
    Text_chyby = "nelze zkontrolovat, nen|fffd| ur|fffd|en spr|fffd|vn|fffd| druh vozidla"
   Else
    Select Case Parametr
     Case "KV": Pozice = 1
     Case "KO": Pozice = 3
     Case "KH": Pozice = 5
     Case "KP": Pozice = 7
    End Select
    Min = Sazebnik("LIM_DV" & P_Smlouva(Bunka.Row).Dru_voz, Pozice)
    Max = Sazebnik("LIM_DV" & P_Smlouva(Bunka.Row).Dru_voz, Pozice + 1)
    Cislo = CDbl(Retezec)
    Select Case Cislo
     Case Min To Max
      If P_Smlouva(Bunka.Row).Dru_voz_kod = "" Then
       If Parametr = "KH" And P_Smlouva(Bunka.Row).Dru_voz_DI = "H" _
       Or Parametr = "KO" And P_Smlouva(Bunka.Row).Dru_voz_DI = "O" Then
         Call Kontrola_RZ_TP_VIN(Bunka, Retezec)
       ElseIf Parametr = "KH" And P_Smlouva(Bunka.Row).Dru_voz_DI <> "H" And P_Smlouva(Bunka.Row).Dru_voz_DI <> "O" Then
        Call Kontrola_RZ_TP_VIN(Bunka, P_Smlouva(Bunka.Row).Dru_voz_DI)
       End If
      End If
     Case Else
      Text_chyby = "mimo p|fffd||fffd|pustn|fffd| rozmez|fffd| (" & Min & " - " & Format(Max, Format_bunky) & ")"
    End Select
   End If
  End If
 End If

MamChybu:
 If Err <> 0 Then Text_chyby = "neplatn|fffd| hodnota"
 On Error GoTo 0
 If Text_chyby <> "" Then
  Text_chyby = Typ & Text_chyby
  Retezec = "^"
 End If
 Select Case Parametr
  Case "KV": P_Smlouva(Bunka.Row).Vykon = Retezec
  Case "KO": P_Smlouva(Bunka.Row).Objem = Retezec
  Case "KH": P_Smlouva(Bunka.Row).Hmotnost = Retezec
  Case "KP": P_Smlouva(Bunka.Row).Poc_os = Retezec
 End Select
 Kontrola_VOHP = Zaver_kontoly(Bunka, Cislo, Text_chyby, Format_bunky)
End Function
Function Kontrola_POV(Bunka As Range, Format_bunky As String, Typ As String, Parametr As String) As Boolean
 Select Case Parametr
  Case "RPZ", "RPS": Kontrola_POV = Vypocet_POV(Bunka, Format_bunky, Typ, Parametr)
  Case Else: Kontrola_POV = Kontrola_dle_ID(Bunka, Format_bunky, Typ, Parametr, P_0501POV)
 End Select
End Function
Function Vypocet_POV(Bunka As Range, Format_bunky As String, Typ As String, Parametr As String) As Boolean
 Dim Text_chyby As String, Sazba As Double, Kod As String * 2, Retezec As String, Radek As Long

 On Error GoTo MamChybu
 Radek = Bunka.Row
 Select Case Parametr
  Case "RPZ"
   P_Smlouva(Radek).MamPOV = "N"
   If P_Smlouva(Radek).POV_Lim_pln = "^" Or P_Smlouva(Radek).POV_Koef_spec_prov = "^" Then
    Text_chyby = "chybn|fffd| vypln|fffd|ny n|fffd|kter|fffd| vstupn|fffd| |fffd|daje"
   ElseIf P_Smlouva(Radek).POV_Lim_pln <> "" And P_Smlouva(Radek).POV_Koef_spec_prov <> "" Then
    If P_Smlouva(Radek).Dru_voz = "^" Then
     Text_chyby = "chybn|fffd| vypln|fffd|ny n|fffd|kter|fffd| vstupn|fffd| |fffd|daje"
    Else
     If Kalkul > 0 And P_Smlouva(Radek).Dru_voz_DI = "O" Then Call Kontrola_VOHP(Bunka.Offset(0, P_0409PrP - Bunka.Column), Nastav.Cells(P_0409PrP + 30, C_Sl_kod + 3).Value, "-" & Nastav.Cells(P_0401PrP + 30, C_Sl_kod - 2).Value & " - " & Nastav.Cells(P_0409PrP + 30, C_Sl_kod - 1).Value & " - ", "KO")
     If P_Smlouva(Radek).Dru_voz_kod = "^" Or P_Smlouva(Radek).Dru_voz_kod = "" Then
      Text_chyby = "chybn|fffd| vypln|fffd|ny n|fffd|kter|fffd| vstupn|fffd| |fffd|daje"
     Else
      If P_BezSaz Then
       Retezec = Trim(Bunka.Value)
       If Retezec = "" Then
        Text_chyby = "nen|fffd| vypln|fffd|no"
       Else
        Retezec = Pouze_cisla(Retezec)
        If Retezec = "" Then
         Text_chyby = "nep|fffd||fffd|pustn|fffd| hodnota"
        Else
         Sazba = CDbl(Retezec)
        End If
       End If
      Else
       Kod = P_Smlouva(Radek).Dru_voz_kod
       P_Smlouva(Radek).POV_Min_saz = Sazebnik(Sazebnik("VER_SAZ", 1, P_Flotila.DPF, 3) & "_POV_" & P_Smlouva(Radek).Dru_voz & Kod, Sazebnik("ID_1048", 2, P_Smlouva(Radek).POV_Lim_pln, 4))
       P_Smlouva(Radek).POV_Saz = Sazebnik(Sazebnik("VER_SAZ", 1, P_Flotila.DPF, 3) & "_POV_" & P_Smlouva(Radek).Dru_voz & Kod, Sazebnik("ID_1048", 2, P_Smlouva(Radek).POV_Lim_pln, 3))
       Sazba = P_Smlouva(Radek).POV_Saz * P_Smlouva(Radek).POV_Koef_spec_prov
       Bunka.Offset(0, P_1702Gol - Bunka.Column).Value = P_Smlouva(Radek).POV_Saz
       Bunka.Offset(0, P_1703Gol - Bunka.Column).Value = P_Smlouva(Radek).POV_Min_saz
      End If
      If Text_chyby = "" Then P_Smlouva(Radek).MamPOV = "A"
      With Bunka.Offset(0, P_0407PrP - Bunka.Column)
       If .Interior.ColorIndex = C_Barva_chyby Then
       ElseIf .Value <= Sazebnik("ID_VYR", 1) Then
        Call Pridej_hlaseni("tb_vyr")
        .Interior.ColorIndex = C_Barva_chyby_spravce
       End If
      End With
     End If
    End If
   End If
  Case "RPS"
   If P_Smlouva(Radek).MamPOV = "A" Then
    If P_Flotila.POV = "^" Then
     Text_chyby = "chybn|fffd| vypln|fffd|ny n|fffd|kter|fffd| vstupn|fffd| |fffd|daje"
    ElseIf P_BezSaz Then
     Sazba = P_Smlouva(Radek).POV_RPZ * P_Flotila.POV
    ElseIf P_Smlouva(Radek).POV_Min_saz > P_Smlouva(Radek).POV_Saz * P_Flotila.POV Then
     Sazba = P_Smlouva(Radek).POV_Min_saz * P_Smlouva(Radek).POV_Koef_spec_prov
    Else
     Sazba = P_Smlouva(Radek).POV_RPZ * P_Flotila.POV
    End If
   End If
 End Select
 If Text_chyby = "" And P_Smlouva(Radek).MamPOV = "A" Then
  Sazba = Round2(Sazba)
  Retezec = Sazba
 End If

MamChybu:
 If Err <> 0 Then Text_chyby = "neplatn|fffd| hodnota"
 On Error GoTo 0
 If Text_chyby <> "" Then
  Text_chyby = Typ & Text_chyby
  Retezec = "^"
  If Parametr = "RPZ" Then
   P_Smlouva(Radek).MamPOV = "^"
   P_Smlouva(Radek).POV_Saz = "^"
  End If
 End If
 If Parametr = "RPZ" Then
  P_Smlouva(Radek).POV_RPZ = Retezec
 ElseIf Parametr = "RPS" Then
  P_Smlouva(Radek).POV_RPS = Retezec
 End If
 Vypocet_POV = Zaver_kontoly(Bunka, Sazba, Text_chyby, Format_bunky, False)
End Function
Function Kontrola_HAV(Bunka As Range, Format_bunky As String, Typ As String, Parametr As String) As Boolean
 Select Case Parametr
  Case "RPZ", "RPS": Kontrola_HAV = Vypocet_HAV(Bunka, Format_bunky, Typ, Parametr)
  Case Else: Kontrola_HAV = Kontrola_dle_ID(Bunka, Format_bunky, Typ, Parametr, P_0601HAV)
 End Select
End Function
Function Vypocet_HAV(Bunka As Range, Format_bunky As String, Typ As String, Parametr As String) As Boolean
 Dim Text_chyby As String, Sazba As Double, Retezec As String, Radek As Long, Pozice As Byte, Rok As Integer

 On Error GoTo MamChybu
 Radek = Bunka.Row
 Select Case Parametr
  Case "RPZ"
   P_Smlouva(Radek).MamHAV = "N"
   If P_Smlouva(Radek).HAV_Roz_poj = "^" Or P_Smlouva(Radek).HAV_Nes_riz = "^" Or P_Smlouva(Radek).HAV_Uze_roz = "^" Or P_Smlouva(Radek).HAV_Spoluu = "^" Then
    Text_chyby = "chybn|fffd| vypln|fffd|ny n|fffd|kter|fffd| vstupn|fffd| |fffd|daje"
   ElseIf P_Smlouva(Radek).HAV_Roz_poj <> "" And P_Smlouva(Radek).HAV_Nes_riz <> "" And P_Smlouva(Radek).HAV_Uze_roz <> "" And P_Smlouva(Radek).HAV_Spoluu <> "" Then
    If P_Smlouva(Radek).Poj_castka = "" Then
     Call Zaver_kontoly(Bunka.Offset(0, P_0417PrP - Bunka.Column), "", "-" & Nastav.Cells(P_0401PrP + 30, C_Sl_kod - 2).Value & " - " & Nastav.Cells(P_0417PrP + 30, C_Sl_kod - 1).Value & " - hodnota nen|fffd| vypln|fffd|na", "@")
     P_Smlouva(Radek).Poj_castka = "^"
    End If
    With Bunka.Offset(0, P_0104Sml - Bunka.Column)
     If .Interior.ColorIndex = C_Barva_chyby Then
      P_Smlouva(Radek).Koef_stari = "^"
     Else
      If .Value = "" Then
       .Value = Date
       Call Kontrola_data(.Offset, Nastav.Cells(P_0104Sml + 30, C_Sl_kod + 3).Value, "-" & Nastav.Cells(P_0101Sml + 30, C_Sl_kod - 2).Value & " - " & Nastav.Cells(P_0104Sml + 30, C_Sl_kod - 1).Value & " - ", "PP")
       If .Interior.ColorIndex = C_Barva_chyby Then
        P_Smlouva(Radek).Koef_stari = "^"
        GoTo Chyba
       End If
      End If
      Rok = Year(.Value)
      With Bunka.Offset(0, P_0407PrP - Bunka.Column)
       If Kalkul > 0 Then
        Call Kontrola_roku_vyroby(.Offset, Nastav.Cells(P_0407PrP + 30, C_Sl_kod + 3).Value, "-" & Nastav.Cells(P_0401PrP + 30, C_Sl_kod - 2).Value & " - " & Nastav.Cells(P_0407PrP + 30, C_Sl_kod - 1).Value & " - ")
        Call Kontrola_delky_hodnoty(.Offset, Nastav.Cells(P_0407PrP + 30, C_Sl_kod + 3).Value, "-" & Nastav.Cells(P_0401PrP + 30, C_Sl_kod - 2).Value & " - " & Nastav.Cells(P_0407PrP + 30, C_Sl_kod - 1).Value & " - ", Nastav.Cells(P_0407PrP + 30, C_Sl_kod + 21).Value)
       End If
       If .Interior.ColorIndex = C_Barva_chyby Then
        P_Smlouva(Radek).Koef_stari = "^"
       Else
        Pozice = Rok - .Value + 1
        If Pozice > 11 Then Pozice = 12
        P_Smlouva(Radek).Koef_stari = Sazebnik("vsg1RV", Pozice)
       End If
      End With
     End If
    End With
    If P_Smlouva(Radek).Poj_castka = "^" Or P_Smlouva(Radek).Koef_stari = "^" Or P_Smlouva(Radek).Znacka_voz = "^" Or P_Smlouva(Radek).Dru_voz = "^" Or P_Smlouva(Radek).Dru_voz = "N" And P_Smlouva(Radek).Dru_voz_kod = "^" Then
Chyba:
     Text_chyby = "chybn|fffd| vypln|fffd|ny n|fffd|kter|fffd| vstupn|fffd| |fffd|daje"
    Else
     If P_Smlouva(Radek).Dru_voz = "O" Or P_Smlouva(Radek).Dru_voz = "D" Or P_Smlouva(Radek).Dru_voz = "S" Or P_Smlouva(Radek).Dru_voz = "N" And P_Smlouva(Radek).Dru_voz_kod = "12" Then
      Retezec = Sazebnik("ID_R1", 1, P_Smlouva(Radek).Znacka_v_H, P_Smlouva(Radek).HAV_Roz_poj + CByte(P_Smlouva(Radek).HAV_Spoluu))
     Else
      Retezec = Sazebnik("ID_R2", 1, P_Smlouva(Radek).Dru_voz, P_Smlouva(Radek).HAV_Roz_poj + CByte(P_Smlouva(Radek).HAV_Spoluu), True)
     End If
     Select Case UCase(Retezec)
      Case "X"
       Call Zaver_kontoly(Bunka.Offset(0, P_0604HAV - Bunka.Column), "", Mid(P_Zaloha(P_0604HAV - P_0601HAV).Typ, 1, Len(P_Zaloha(P_0604HAV - P_0601HAV).Typ) - 2) & Bunka.Offset(0, P_0604HAV - Bunka.Column).Value & "% - pro toto vozidlo nen|fffd| p|fffd||fffd|pustn|fffd|", P_Zaloha(P_0604HAV - P_0601HAV).Format_bunky)
       Text_chyby = "chybn|fffd| vypln|fffd|ny n|fffd|kter|fffd| vstupn|fffd| |fffd|daje"
      Case "D"
       Call Zaver_kontoly(Bunka.Offset(0, P_0604HAV - Bunka.Column), "", Mid(P_Zaloha(P_0604HAV - P_0601HAV).Typ, 1, Len(P_Zaloha(P_0604HAV - P_0601HAV).Typ) - 2) & Bunka.Offset(0, P_0604HAV - Bunka.Column).Value & "% - pouze na dotaz |fffd|PF |fffd|PP, a.s.", P_Zaloha(P_0604HAV - P_0601HAV).Format_bunky)
       Text_chyby = "chybn|fffd| vypln|fffd|ny n|fffd|kter|fffd| vstupn|fffd| |fffd|daje"
      Case "^"
       Call Zaver_kontoly(Bunka.Offset(0, P_0604HAV - Bunka.Column), "", Mid(P_Zaloha(P_0604HAV - P_0601HAV).Typ, 1, Len(P_Zaloha(P_0604HAV - P_0601HAV).Typ) - 2) & Bunka.Offset(0, P_0604HAV - Bunka.Column).Value & "% - pouze na dotaz |fffd|PF |fffd|PP, a.s.", P_Zaloha(P_0604HAV - P_0601HAV).Format_bunky)
       Text_chyby = "chybn|fffd| vypln|fffd|ny n|fffd|kter|fffd| vstupn|fffd| |fffd|daje"
      Case Else
       Sazba = P_Smlouva(Radek).Poj_castka * CDbl(Retezec) * P_Smlouva(Radek).Koef_stari * P_Smlouva(Radek).HAV_Nes_riz * P_Smlouva(Radek).HAV_Uze_roz
       Bunka.Offset(0, P_1701Gol - Bunka.Column).Value = Retezec
     End Select
     If P_BezSaz Then
      Retezec = Trim(Bunka.Value)
      If Retezec = "" Then
       Text_chyby = "nen|fffd| vypln|fffd|no"
      Else
       Retezec = Pouze_cisla(Retezec)
       If Retezec = "" Then
        Text_chyby = "nep|fffd||fffd|pustn|fffd| hodnota"
       Else
        Sazba = CDbl(Retezec)
       End If
      End If
     End If
     If Text_chyby = "" Then
      P_Smlouva(Radek).MamHAV = "A"
     End If
    End If
   End If
  Case "RPS"
   If P_Smlouva(Radek).MamHAV = "A" Then
    If P_Flotila.HAV = "^" Then
     Text_chyby = "chybn|fffd| vypln|fffd|ny n|fffd|kter|fffd| vstupn|fffd| |fffd|daje"
    Else
     Sazba = P_Smlouva(Radek).HAV_RPZ * P_Flotila.HAV
    End If
   End If
 End Select
 If Text_chyby = "" And P_Smlouva(Radek).MamHAV = "A" Then
  Sazba = Round2(Sazba)
  Retezec = Sazba
 End If

MamChybu:
 If Err <> 0 Then Text_chyby = "neplatn|fffd| hodnota"
 On Error GoTo 0
 If Text_chyby <> "" Then
  Text_chyby = Typ & Text_chyby
  Retezec = "^"
  If Parametr = "RPZ" Then P_Smlouva(Radek).MamHAV = "^"
 End If
 If Parametr = "RPZ" Then
  P_Smlouva(Radek).HAV_RPZ = Retezec
 ElseIf Parametr = "RPS" Then
  P_Smlouva(Radek).HAV_RPS = Retezec
 End If
 Vypocet_HAV = Zaver_kontoly(Bunka, Sazba, Text_chyby, Format_bunky, False)
End Function
Function Kontrola_dle_ID(Bunka As Range, Format_bunky As String, Typ As String, Parametr As String, ByVal Oblast As String) As Boolean
 Dim Text_chyby As String, Retezec As String, Cislo As Double, Limit As Double, Opakovat As Byte, Hodnota As String, Radek As Long

 On Error GoTo MamChybu
 Radek = Bunka.Row
 Retezec = UCase(Trim(Bunka.Value))
 P_Zaloha(Bunka.Column - Oblast).Format_bunky = Format_bunky
 P_Zaloha(Bunka.Column - Oblast).Typ = Typ
 P_Zaloha(Bunka.Column - Oblast).Parametr = Parametr
 If Retezec = "" Then
  If P_MamPOJ(Radek - P_Pocatek_dat_r) Then Text_chyby = "nen|fffd| vypln|fffd|n"
 Else
  If Not P_MamPOJ(Radek - P_Pocatek_dat_r) And Bunka.Column > Oblast Then
   P_MamPOJ(Radek - P_Pocatek_dat_r) = True
   For Opakovat = Oblast To Bunka.Column - 1
    Call Kontrola_dle_ID(Bunka.Offset(0, Opakovat - Bunka.Column), P_Zaloha(Opakovat - Oblast).Format_bunky, P_Zaloha(Opakovat - Oblast).Typ, P_Zaloha(Opakovat - Oblast).Parametr, Oblast)
   Next Opakovat
  End If
  P_MamPOJ(Radek - P_Pocatek_dat_r) = True
  If Format_bunky = "@" Then
   If Bunka.Column = P_0502POV And P_Smlouva(Radek).Dru_voz = "H" And P_Smlouva(Radek).Dru_voz_kod = "99" And (Retezec = "H" Or Retezec = "S") Then
    Text_chyby = "nelze pojistit u tohoto druhu vozidla"
   Else
    Hodnota = Sazebnik("ID_" & Parametr, 1, Retezec, 2)
   End If
  Else
   Retezec = Pouze_cisla(Retezec, Bez0:=True)
   If Retezec = "" Then
    Text_chyby = "nen|fffd| vypl|fffd|no cel|fffd| |fffd||fffd|slo"
   Else
    Cislo = CDbl(Retezec)
    Hodnota = Sazebnik("ID_" & Parametr, 1, Cislo, 2)
   End If
  End If
  If Hodnota = "^" Then
   Text_chyby = "nepovolen|fffd| hodnota"
  End If
 End If

MamChybu:
 If Err <> 0 Then Text_chyby = "neplatn|fffd| hodnota"
 On Error GoTo 0
 If Text_chyby <> "" Then
  Text_chyby = Typ & Text_chyby
  Hodnota = "^"
 ElseIf P_Hlasit <> "" Then
  Call Pridej_hlaseni(P_Hlasit)
  Bunka.Interior.ColorIndex = C_Barva_chyby_spravce
 End If
 Select Case Bunka.Column
  Case P_0501POV: P_Smlouva(Radek).POV_Lim_pln = Hodnota
  Case P_0502POV: P_Smlouva(Radek).POV_Koef_spec_prov = Hodnota
  Case P_0601HAV: P_Smlouva(Radek).HAV_Roz_poj = Hodnota
  Case P_0602HAV: P_Smlouva(Radek).HAV_Nes_riz = Hodnota
  Case P_0603HAV: P_Smlouva(Radek).HAV_Uze_roz = Hodnota
  Case P_0604HAV: P_Smlouva(Radek).HAV_Spoluu = Hodnota
 End Select
 Select Case Format_bunky
  Case "@": Kontrola_dle_ID = Zaver_kontoly(Bunka, Retezec, Text_chyby, Format_bunky, False)
  Case Else: Kontrola_dle_ID = Zaver_kontoly(Bunka, Cislo, Text_chyby, Format_bunky, False)
 End Select
End Function
Function Kontrola_OST(Bunka As Range, Format_bunky As String, Typ As String, Parametr As String) As Boolean
 Select Case Parametr
  Case "R0701": Kontrola_OST = Kontrola_dle_ID_OST(Bunka, Format_bunky, Typ, Parametr, P_0701PSk)
  Case "R0801", "R0802": Kontrola_OST = Kontrola_dle_ID_OST(Bunka, Format_bunky, Typ, Parametr, P_0801UPO)
  Case "R0901": Kontrola_OST = Kontrola_dle_ID_OST(Bunka, Format_bunky, Typ, Parametr, P_0901PZa)
  Case "R1001": Kontrola_OST = Kontrola_dle_ID_OST(Bunka, Format_bunky, Typ, Parametr, P_1001PNV)
  Case "R1101": Kontrola_OST = Kontrola_dle_ID_OST(Bunka, Format_bunky, Typ, Parametr, P_1101PAs)
  Case "R1201": Kontrola_OST = Kontrola_dle_ID_OST(Bunka, Format_bunky, Typ, Parametr, P_1201PPR)
  Case "R1301": Kontrola_OST = Kontrola_dle_ID_OST(Bunka, Format_bunky, Typ, Parametr, P_1301PLi)
  Case "R1401", "R1402", "R1403", "R1404": Kontrola_OST = Kontrola_dle_ID_OST(Bunka, Format_bunky, Typ, Parametr, P_1401StP)
  Case "R1501", "R1502": Kontrola_OST = Kontrola_dle_ID_OST(Bunka, Format_bunky, Typ, Parametr, P_1501GAP)
  Case Else: Kontrola_OST = Vypocet_OST(Bunka, Format_bunky, Typ, Parametr)
 End Select
End Function
Function Kontrola_dle_ID_OST(Bunka As Range, Format_bunky As String, Typ As String, Parametr As String, ByVal Oblast As String) As Boolean
 Dim Text_chyby As String, Retezec As String, Cislo As Double, Limit As Double, Opakovat As Byte, Hodnota As String, Test As String, Vystup1 As Byte, Vystup2 As Byte

 On Error GoTo MamChybu
 P_Zaloha(Bunka.Column - Oblast).Format_bunky = Format_bunky
 P_Zaloha(Bunka.Column - Oblast).Typ = Typ
 P_Zaloha(Bunka.Column - Oblast).Parametr = Parametr
 With P_Smlouva(Bunka.Row)
  Retezec = UCase(Trim(Bunka.Value))
  If Retezec = "" Then
   If P_MamPOJ(Bunka.Row - P_Pocatek_dat_r) Then Text_chyby = "nen|fffd| vypln|fffd|n"
  ElseIf .P_D = "^" Or .Dru_voz = "^" Or Left(Parametr, 3) = "R14" And (.MamHAV = "^" Or .HAV_Roz_poj = "^") Or .MamHAV = "^" And .MamPOV = "^" Then
   Text_chyby = "chybn|fffd| vypln|fffd|ny n|fffd|kter|fffd| vstupn|fffd| |fffd|daje"
  Else
   Select Case Parametr
    Case "R0701": Vystup1 = 2
    Case "R0801", "R0802": Vystup1 = 3
    Case "R0901": Vystup1 = 4
    Case "R1001": Vystup1 = 5
    Case "R1101": Vystup1 = 6
    Case "R1201": Vystup1 = 7
    Case "R1301": Vystup1 = 8
    Case "R1401"
     .StP_Druh = Retezec
     Select Case Retezec
      Case "ST1": Vystup1 = 9
      Case "ST2": Vystup1 = 10
      Case Else: Text_chyby = "neplatn|fffd| hodnota"
     End Select
    Case "R1402", "R1403", "R1404"
     Select Case .StP_Druh
      Case "ST1": Text_chyby = "nevypl|fffd|uje se u poj. ST1"
      Case "ST2": Vystup1 = 10
      Case Else: Text_chyby = "nelze zkontrolovat"
     End Select
    Case "R1501", "R1502"
     Vystup1 = 11
   End Select
   If Text_chyby = "" Then
    If Left(Parametr, 3) = "R14" And (Not .MamHAV = "A" Or .MamHAV = "A" And .HAV_Roz_poj <> "2") Then
     Text_chyby = "lze sjednat pouze k HAV varianty ALL RISK"
    ElseIf .P_D = "P" And Not (.MamPOV = "A" Or .MamHAV = "A") Then
     Text_chyby = "nelze sjednat samostatn|fffd|"
    Else
     Test = UCase(Trim(Sazebnik("ID_R5", 1, .Dru_voz, Vystup1)))
     If Not (Test = "A" Or Test = "") Or Parametr = "R1101" And Test = "" And ( _
        Not (.Dru_voz = "P" Or .Dru_voz = "R" Or .Dru_voz = "I") And (Bunka.Value = "APV" Or Bunka.Value = "ACAP1" Or Bunka.Value = "ACAP2" Or Bunka.Value = "ACTP") Or _
            (.Dru_voz = "P" Or .Dru_voz = "R" Or .Dru_voz = "I") And (Bunka.Value = "ATPV" Or Bunka.Value = "ACAT1" Or Bunka.Value = "ACAT2" Or Bunka.Value = "ACTT")) Then
      Text_chyby = "nelze sjednat u tohoto druhu vozidla"
     Else
      Select Case Parametr
       Case "R0701", "R1101", "R1501", "R1502"
        If Left(Parametr, 3) = "R15" Then
         If Kalkul > 0 And .MamHAV <> "A" Then
          Call Kontrola_roku_vyroby(Bunka.Offset(0, P_0407PrP - Bunka.Column), Nastav.Cells(P_0407PrP + 30, C_Sl_kod + 3).Value, "-" & Nastav.Cells(P_0407PrP + 30, C_Sl_kod - 2).Value & " - " & Nastav.Cells(P_0407PrP + 30, C_Sl_kod - 1).Value & " - ")
          Call Kontrola_delky_hodnoty(Bunka.Offset(0, P_0407PrP - Bunka.Column), Nastav.Cells(P_0407PrP + 30, C_Sl_kod + 3).Value, "-" & Nastav.Cells(P_0407PrP + 30, C_Sl_kod - 2).Value & " - " & Nastav.Cells(P_0407PrP + 30, C_Sl_kod - 1).Value & " - ", Nastav.Cells(P_0407PrP + 30, C_Sl_kod + 21).Value)
         End If
         With Bunka.Offset(0, P_0407PrP - Bunka.Column)
          If .Interior.ColorIndex = C_Barva_chyby Then
           Text_chyby = "chybn|fffd| vypln|fffd|ny n|fffd|kter|fffd| vstupn|fffd| |fffd|daje"
          ElseIf .Value < Year(Now) - 3 Then
           Text_chyby = "nelze pojistit vozidla star|fffd||fffd|ch 3 let"
          End If
         End With
         If .MamPOV = "A" And Bunka.Offset(0, P_0502POV - Bunka.Column).Value <> "B" Or .MamHAV = "A" And Bunka.Offset(0, P_0602HAV - Bunka.Column).Value <> "B" Then Text_chyby = "nelze sjednat u tohoto provozu vozidla"
        End If
        If Text_chyby <> "" Then
        ElseIf .Hmotnost = "^" Then
         Text_chyby = "chybn|fffd| vypln|fffd|ny n|fffd|kter|fffd| vstupn|fffd| |fffd|daje"
        Else
         Vystup2 = Sazebnik("ID_" & Parametr & "_RH", 1, .Hmotnost, 3)
        End If
       Case "R1301"
        If Not Kontrola_volby(Bunka, Format_bunky, Typ, "AN") Then
         .PLi_RPZ = "^"
         Exit Function
        End If
        Vystup2 = 2
       Case Else: Vystup2 = 2
      End Select
      If Text_chyby = "" Then
       If Not P_MamPOJ(Bunka.Row - P_Pocatek_dat_r) And Bunka.Column > Oblast Then
        P_MamPOJ(Bunka.Row - P_Pocatek_dat_r) = True
        For Opakovat = Oblast To Bunka.Column - 1
         Call Kontrola_dle_ID(Bunka.Offset(0, Opakovat - Bunka.Column), P_Zaloha(Opakovat - Oblast).Format_bunky, P_Zaloha(Opakovat - Oblast).Typ, P_Zaloha(Opakovat - Oblast).Parametr, Oblast)
        Next Opakovat
       End If
       If Parametr = "R1401" And .StP_Druh = "ST1" Then
        .StP_NRP = Sazebnik("ID_R1405", 1, P_Smlouva(Bunka.Row).Dru_voz, 2, True)
       Else
        P_MamPOJ(Bunka.Row - P_Pocatek_dat_r) = True
       End If
       If Format_bunky = "@" Then
        Hodnota = Sazebnik("ID_" & Parametr, 1, Retezec, Vystup2)
       Else
        Retezec = Pouze_cisla(Retezec, Bez0:=True)
        If Retezec = "" Then
         Text_chyby = "nen|fffd| vypl|fffd|no cel|fffd| |fffd||fffd|slo"
        Else
         Cislo = CDbl(Retezec)
         Hodnota = Sazebnik("ID_" & Parametr, 1, Cislo, Vystup2)
        End If
       End If
       If Hodnota = "^" Then Text_chyby = "nepovolen|fffd| hodnota"
      End If
     End If
    End If
   End If
  End If

MamChybu:
  If Err <> 0 Then Text_chyby = "neplatn|fffd| hodnota"
  On Error GoTo 0
  If Text_chyby <> "" Then
   Text_chyby = Typ & Text_chyby
   Hodnota = "^"
  ElseIf P_Hlasit <> "" Then
   If Parametr = "R1401" And Retezec = "ST2" Then
    With Bunka.Offset(0, P_0407PrP - Bunka.Column)
     If .Interior.ColorIndex = C_Barva_chyby Then
      Text_chyby = "chybn|fffd| vypln|fffd|ny n|fffd|kter|fffd| vstupn|fffd| |fffd|daje"
     ElseIf .Value < Year(Now) - 8 Then
      Call Pridej_hlaseni(P_Hlasit)
      Bunka.Interior.ColorIndex = C_Barva_chyby_spravce
     Else
      P_Hlasit = ""
     End If
    End With
   Else
    Call Pridej_hlaseni(P_Hlasit)
    Bunka.Interior.ColorIndex = C_Barva_chyby_spravce
   End If
  End If
  If Text_chyby <> "" Or Retezec <> "" Then
   Select Case Parametr
    Case "R0701", "R0801"
     If Parametr = "R0701" Then
      .PSk_RPZ = Hodnota
     Else
      .UPO_Poj = Hodnota
     End If
     If Text_chyby = "" And Kalkul > 0 Then
      If Parametr = "R0701" And (.Dru_voz = "V" Or .Dru_voz = "Z") Or .Dru_voz = "P" Or .Dru_voz = "R" Or .Dru_voz = "I" Then
        Call Zaver_kontoly(Bunka, "", Typ & "POZOR na druh vozidla", Format_bunky, Barva:=C_Barva_chyby_spravce)
        Bunka.Offset(0, P_0404PrP - Bunka.Column).Interior.ColorIndex = C_Barva_chyby_spravce
      End If
     End If
    Case "R0802": .UPO_NRP = Hodnota
    Case "R0901": .PZa_RPZ = Hodnota
    Case "R1001": .PNV_RPZ = Hodnota
    Case "R1101": .PAs_RPZ = Hodnota
    Case "R1201": .PPR_RPZ = Hodnota
    Case "R1301": .PLi_RPZ = Hodnota
    Case "R1401": .StP_Druh = Hodnota
    Case "R1402": .StP_Kat = Hodnota
    Case "R1403": .StP_Spol = Hodnota
    Case "R1404": .StP_NRP = Hodnota
    Case "R1501": .GAP_Prim = Hodnota
    Case "R1502": .GAP_Spol = Hodnota
   End Select
  End If
 End With
 Select Case Format_bunky
  Case "@": Kontrola_dle_ID_OST = Zaver_kontoly(Bunka, Retezec, Text_chyby, Format_bunky, False)
  Case Else: Kontrola_dle_ID_OST = Zaver_kontoly(Bunka, Cislo, Text_chyby, Format_bunky, False)
 End Select
End Function
Function Vypocet_OST(Bunka As Range, Format_bunky As String, Typ As String, Parametr As String) As Boolean
 Dim Text_chyby As String, Sazba As Double, Retezec As String, Radek As Long

 On Error GoTo MamChybu
 Radek = Bunka.Row
 Retezec = Trim(Bunka.Value)
 If P_BezSaz And Retezec <> "" Then
  Retezec = Pouze_cisla(Retezec)
  If Retezec = "" Then
   Text_chyby = "nep|fffd||fffd|pustn|fffd| hodnota"
  Else
   Sazba = CDbl(Retezec)
  End If
 End If
 If Text_chyby = "" Then
  Select Case Parametr
   Case "RPZPS"
    If Not (P_Smlouva(Radek).PSk_RPZ = "" Or P_Smlouva(Radek).PSk_RPZ = "^") Then
     If P_BezSaz And Retezec = "" Or Not P_BezSaz Then Sazba = P_Smlouva(Radek).PSk_RPZ
     Sazba = Round2(Sazba)
     P_Smlouva(Radek).PSk_RPZ = Sazba
    End If
   Case "RPZUP"
    If Not (P_Smlouva(Radek).UPO_Poj = "" Or P_Smlouva(Radek).UPO_NRP = "") Then
     If Kalkul > 0 Then Call Kontrola_VOHP(Bunka.Offset(0, P_0411PrP - Bunka.Column), Nastav.Cells(P_0411PrP + 30, C_Sl_kod + 3).Value, "-" & Nastav.Cells(P_0411PrP + 30, C_Sl_kod - 2).Value & " - " & Nastav.Cells(P_0411PrP + 30, C_Sl_kod - 1).Value & " - ", "KP")
     If P_Smlouva(Radek).UPO_Poj = "^" Or P_Smlouva(Radek).UPO_NRP = "^" Then
      P_Smlouva(Radek).UPO_RPZ = "^"
     ElseIf P_Smlouva(Radek).Poc_os = "^" Then
      Text_chyby = "chybn|fffd| vypln|fffd|ny n|fffd|kter|fffd| vstupn|fffd| |fffd|daje"
     Else
      If P_BezSaz And Retezec = "" Or Not P_BezSaz Then Sazba = P_Smlouva(Radek).Poc_os * P_Smlouva(Radek).UPO_Poj * P_Smlouva(Radek).UPO_NRP
      Sazba = Round2(Sazba)
      P_Smlouva(Radek).UPO_RPZ = Sazba
     End If
    End If
   Case "RPZPZ"
    If Not (P_Smlouva(Radek).PZa_RPZ = "" Or P_Smlouva(Radek).PZa_RPZ = "^") Then
     If P_BezSaz And Retezec = "" Or Not P_BezSaz Then Sazba = P_Smlouva(Radek).PZa_RPZ
     Sazba = Round2(Sazba)
     P_Smlouva(Radek).PZa_RPZ = Sazba
    End If
   Case "RPZPN"
    If Not (P_Smlouva(Radek).PNV_RPZ = "" Or P_Smlouva(Radek).PNV_RPZ = "^") Then
     If P_BezSaz And Retezec = "" Or Not P_BezSaz Then Sazba = P_Smlouva(Radek).PNV_RPZ
     Sazba = Round2(Sazba)
     P_Smlouva(Radek).PNV_RPZ = Sazba
    End If
   Case "RPZPA"
    If Not (P_Smlouva(Radek).PAs_RPZ = "" Or P_Smlouva(Radek).PAs_RPZ = "^") Then
     If P_BezSaz And Retezec = "" Or Not P_BezSaz Then Sazba = P_Smlouva(Radek).PAs_RPZ
     Sazba = Round2(Sazba)
     P_Smlouva(Radek).PAs_RPZ = Sazba
    End If
   Case "RPSPA"
    If Not (P_Smlouva(Radek).PAs_RPZ = "" Or P_Smlouva(Radek).PAs_RPZ = "^") Then
     Sazba = Round2(P_Smlouva(Radek).PAs_RPZ * P_Flotila.PAs)
     P_Smlouva(Radek).PAs_RPS = Sazba
    End If
   Case "RPZPP"
    If Not (P_Smlouva(Radek).PPR_RPZ = "" Or P_Smlouva(Radek).PPR_RPZ = "^") Then
     If P_BezSaz And Retezec = "" Or Not P_BezSaz Then Sazba = P_Smlouva(Radek).PPR_RPZ
     Sazba = Round2(Sazba)
     P_Smlouva(Radek).PPR_RPZ = Sazba
    End If
   Case "RPZPL"
    If Not (P_Smlouva(Radek).PLi_RPZ = "" Or P_Smlouva(Radek).PLi_RPZ = "^") Then
     If P_BezSaz And Retezec = "" Or Not P_BezSaz Then Sazba = P_Smlouva(Radek).PLi_RPZ
     Sazba = Round2(Sazba)
     P_Smlouva(Radek).PLi_RPZ = Sazba
    End If
   Case "RPZSP"
    If Not P_Smlouva(Radek).StP_Druh = "" Then
     If P_Smlouva(Radek).StP_Druh = "^" Then
      P_Smlouva(Radek).StP_RPZ = "^"
     ElseIf (P_Smlouva(Radek).StP_Druh = "ST1" And (P_Smlouva(Radek).StP_NRP = "^" Or P_Smlouva(Radek).HAV_RPZ = "^") Or _
             P_Smlouva(Radek).StP_Druh = "ST2" And (P_Smlouva(Radek).StP_Kat = "^" Or P_Smlouva(Radek).StP_Spol = "^" Or P_Smlouva(Radek).StP_NRP = "^" Or _
             P_Smlouva(Radek).Poj_castka = "^" Or P_Smlouva(Radek).Koef_stari = "^" Or P_Smlouva(Radek).HAV_Uze_roz = "^")) Then
      Text_chyby = "chybn|fffd| vypln|fffd|ny n|fffd|kter|fffd| vstupn|fffd| |fffd|daje"
     Else
      If P_BezSaz And Retezec = "" Or Not P_BezSaz Then
       If P_Smlouva(Radek).StP_Druh = "ST1" Then
        Sazba = P_Smlouva(Radek).HAV_RPZ * P_Smlouva(Radek).StP_NRP
       Else
        Sazba = P_Smlouva(Radek).Poj_castka * P_Smlouva(Radek).StP_Kat * P_Smlouva(Radek).Koef_stari * P_Smlouva(Radek).StP_NRP * P_Smlouva(Radek).HAV_Uze_roz * P_Smlouva(Radek).StP_Spol
       End If
      End If
      Sazba = Round2(Sazba)
      P_Smlouva(Radek).StP_RPZ = Sazba
     End If
    End If
   Case "RPSSP"
    If Not (P_Smlouva(Radek).StP_RPZ = "" Or P_Smlouva(Radek).StP_RPZ = "^" Or P_Flotila.StP = "^") Then
     Sazba = Round2(P_Smlouva(Radek).StP_RPZ * P_Flotila.StP)
     P_Smlouva(Radek).StP_RPS = Sazba
    End If
   Case "RPZGA"
    If Not (P_Smlouva(Radek).GAP_Prim = "" Or P_Smlouva(Radek).GAP_Spol = "") Then
     If P_Smlouva(Radek).GAP_Prim = "^" Or P_Smlouva(Radek).GAP_Spol = "^" Then
      P_Smlouva(Radek).GAP_RPZ = "^"
     ElseIf P_Smlouva(Radek).Znacka_voz = "^" Or P_Smlouva(Radek).Dru_voz = "^" Or P_Smlouva(Radek).Poj_castka = "" Or P_Smlouva(Radek).Poj_castka = "^" Then
      If P_Smlouva(Radek).Poj_castka = "" Then Call Zaver_kontoly(Bunka.Offset(0, P_0417PrP - Bunka.Column), "", "-" & Nastav.Cells(P_0417PrP + 30, C_Sl_kod - 2).End(xlUp).Value & " - " & Nastav.Cells(P_0417PrP + 30, C_Sl_kod - 1).Value & " - hodnota pro poj. GAP mus|fffd| b|fffd|t vypln|fffd|na", "@")
      Text_chyby = "chybn|fffd| vypln|fffd|ny n|fffd|kter|fffd| vstupn|fffd| |fffd|daje"
     Else
      If Kalkul = 0 Then
       With Bunka.Offset(0, P_0401PrP - Bunka.Column)
        If .Interior.ColorIndex = C_Barva_chyby Then
         Text_chyby = "chybn|fffd| vypln|fffd|ny n|fffd|kter|fffd| vstupn|fffd| |fffd|daje"
        ElseIf .Value = "" Then
         Call Zaver_kontoly(Bunka.Offset(0, P_0401PrP - Bunka.Column), "", "-" & Nastav.Cells(P_0401PrP + 30, C_Sl_kod - 2).End(xlUp).Value & " - " & Nastav.Cells(P_0401PrP + 30, C_Sl_kod - 1).Value & " - hodnota pro poj. GAP mus|fffd| b|fffd|t vypln|fffd|na", "@")
         Text_chyby = "chybn|fffd| vypln|fffd|ny n|fffd|kter|fffd| vstupn|fffd| |fffd|daje"
        End If
       End With
      End If
      If P_Smlouva(Radek).Dru_voz = "O" Or P_Smlouva(Radek).Dru_voz = "D" Then
       Retezec = Sazebnik("ID_R1", 1, P_Smlouva(Radek).Znacka_v_H, 18)
      Else
       Retezec = Sazebnik("ID_R2", 1, P_Smlouva(Radek).Dru_voz, 18, True)
      End If
      Select Case UCase(Retezec)
       Case "X"
        Call Zaver_kontoly(Bunka.Offset(0, P_1501GAP - Bunka.Column), "", P_Zaloha(P_1501GAP - P_1501GAP).Typ & "nelze pojistit", P_Zaloha(P_1501GAP - P_1501GAP).Format_bunky)
        Call Zaver_kontoly(Bunka.Offset(0, P_1502GAP - Bunka.Column), "", P_Zaloha(P_1502GAP - P_1501GAP).Typ & "nelze pojistit", P_Zaloha(P_1502GAP - P_1501GAP).Format_bunky)
        Text_chyby = "chybn|fffd| vypln|fffd|ny n|fffd|kter|fffd| vstupn|fffd| |fffd|daje"
       Case "D", "^"
        Call Zaver_kontoly(Bunka.Offset(0, P_1501GAP - Bunka.Column), "", P_Zaloha(P_1501GAP - P_1501GAP).Typ & "pouze na dotaz |fffd|PF |fffd|PP, a.s.", P_Zaloha(P_1501GAP - P_1501GAP).Format_bunky)
        Call Zaver_kontoly(Bunka.Offset(0, P_1502GAP - Bunka.Column), "", P_Zaloha(P_1502GAP - P_1501GAP).Typ & "pouze na dotaz |fffd|PF |fffd|PP, a.s.", P_Zaloha(P_1502GAP - P_1501GAP).Format_bunky)
        Text_chyby = "chybn|fffd| vypln|fffd|ny n|fffd|kter|fffd| vstupn|fffd| |fffd|daje"
       Case Else
        If P_BezSaz And Retezec = "" Or Not P_BezSaz Then Sazba = P_Smlouva(Radek).Poj_castka * CDbl(Retezec) * P_Smlouva(Radek).GAP_Prim * P_Smlouva(Radek).GAP_Spol
      End Select
      If Text_chyby = "" Then
       Sazba = Round2(Sazba)
       P_Smlouva(Radek).GAP_RPZ = Sazba
      End If
     End If
    End If
   Case "RPSGA"
    If Not (P_Smlouva(Radek).GAP_RPZ = "" Or P_Smlouva(Radek).GAP_RPZ = "^" Or P_Flotila.GAP = "^") Then
     Sazba = Round2(P_Smlouva(Radek).GAP_RPZ * P_Flotila.GAP)
     P_Smlouva(Radek).GAP_RPS = Sazba
    End If
  End Select
 End If

MamChybu:
 If Err <> 0 Then Text_chyby = "neplatn|fffd| hodnota"
 On Error GoTo 0
 If Text_chyby <> "" Then
  Text_chyby = Typ & Text_chyby
  Select Case Parametr
   Case "RPZPS": P_Smlouva(Radek).PSk_RPZ = "^"
   Case "RPZUP": P_Smlouva(Radek).PSk_RPZ = "^"
   Case "RPZPZ": P_Smlouva(Radek).PZa_RPZ = "^"
   Case "RPZPN": P_Smlouva(Radek).PNV_RPZ = "^"
   Case "RPZPA": P_Smlouva(Radek).PAs_RPZ = "^"
   Case "RPSPA": P_Smlouva(Radek).PAs_RPS = "^"
   Case "RPZPP": P_Smlouva(Radek).PPR_RPZ = "^"
   Case "RPZPL": P_Smlouva(Radek).PLi_RPZ = "^"
   Case "RPZSP": P_Smlouva(Radek).StP_RPZ = "^"
   Case "RPSSP": P_Smlouva(Radek).StP_RPS = "^"
   Case "RPZGA": P_Smlouva(Radek).GAP_RPZ = "^"
   Case "RPSGA": P_Smlouva(Radek).GAP_RPS = "^"
  End Select
 End If
 Vypocet_OST = Zaver_kontoly(Bunka, Sazba, Text_chyby, Format_bunky, False)
End Function
Function Kalkulace(Bunka As Range, Format_bunky As String, Typ As String, Parametr As String) As Boolean
 Dim Text_chyby As String, Sazba As Double, Retezec As String

 On Error GoTo MamChybu
 With P_Smlouva(Bunka.Row)
  Select Case Parametr
   Case "RPZ"
    If .POV_RPZ = "^" Or .HAV_RPZ = "^" Or .PSk_RPZ = "^" Or .UPO_RPZ = "^" Or .PZa_RPZ = "^" Or .PNV_RPZ = "^" Or .PAs_RPZ = "^" Or .PPR_RPZ = "^" Or .PLi_RPZ = "^" Or .StP_RPZ = "^" Or .GAP_RPZ = "^" Then
     Text_chyby = "chybn|fffd| vypln|fffd|ny n|fffd|kter|fffd| vstupn|fffd| |fffd|daje"
    Else
     If .POV_RPZ <> "" Then Sazba = Sazba + CDbl(.POV_RPZ)
     If .HAV_RPZ <> "" Then Sazba = Sazba + CDbl(.HAV_RPZ)
     If .PSk_RPZ <> "" Then Sazba = Sazba + CDbl(.PSk_RPZ)
     If .UPO_RPZ <> "" Then Sazba = Sazba + CDbl(.UPO_RPZ)
     If .PZa_RPZ <> "" Then Sazba = Sazba + CDbl(.PZa_RPZ)
     If .PNV_RPZ <> "" Then Sazba = Sazba + CDbl(.PNV_RPZ)
     If .PAs_RPZ <> "" Then Sazba = Sazba + CDbl(.PAs_RPZ)
     If .PPR_RPZ <> "" Then Sazba = Sazba + CDbl(.PPR_RPZ)
     If .PLi_RPZ <> "" Then Sazba = Sazba + CDbl(.PLi_RPZ)
     If .StP_RPZ <> "" Then Sazba = Sazba + CDbl(.StP_RPZ)
     If .GAP_RPZ <> "" Then Sazba = Sazba + CDbl(.GAP_RPZ)
     If Sazba = 0 Then
      Text_chyby = "nebylo sjedn|fffd|no |fffd||fffd|dn|fffd| poji|fffd|t|fffd|n|fffd|"
     Else
      If Kalkul = 0 Then
       Call Kontrola_cisla_smlouvy(Bunka.Offset(0, P_0101Sml - Bunka.Column), Nastav.Cells(P_0101Sml + 30, C_Sl_kod + 3).Value, "-" & Nastav.Cells(P_0101Sml + 30, C_Sl_kod - 2).Value & " - " & Nastav.Cells(P_0101Sml + 30, C_Sl_kod - 1).Value & " - ", "PS")
      ElseIf .POV_RPZ = "" And .HAV_RPZ = "" Then
       Call Zaver_kontoly(Bunka.Offset(0, P_0101Sml - Bunka.Column), "", "POZOR, pouze dopl|fffd|kov|fffd| poj.", "@", Barva:=C_Barva_chyby_spravce)
      End If
     End If
    End If
   Case "RPS"
    If Not .Kal_RPZ = "^" Then
     If .POV_RPS <> "" Then Sazba = Sazba + CDbl(.POV_RPS)
     If .HAV_RPS <> "" Then Sazba = Sazba + CDbl(.HAV_RPS)
     If .PSk_RPZ <> "" Then Sazba = Sazba + CDbl(.PSk_RPZ)
     If .UPO_RPZ <> "" Then Sazba = Sazba + CDbl(.UPO_RPZ)
     If .PZa_RPZ <> "" Then Sazba = Sazba + CDbl(.PZa_RPZ)
     If .PNV_RPZ <> "" Then Sazba = Sazba + CDbl(.PNV_RPZ)
     If .PAs_RPS <> "" Then Sazba = Sazba + CDbl(.PAs_RPS)
     If .PPR_RPZ <> "" Then Sazba = Sazba + CDbl(.PPR_RPZ)
     If .PLi_RPZ <> "" Then Sazba = Sazba + CDbl(.PLi_RPZ)
     If .StP_RPS <> "" Then Sazba = Sazba + CDbl(.StP_RPS)
     If .GAP_RPS <> "" Then Sazba = Sazba + CDbl(.GAP_RPS)
    End If
   Case "LPS"
    If P_Flotila.Frk = "^" Then
     Text_chyby = "chybn|fffd| vypln|fffd|ny n|fffd|kter|fffd| vstupn|fffd| |fffd|daje"
    ElseIf Not .Kal_RPZ = "^" Then
     If .POV_RPS <> "" Then Sazba = Sazba + CDbl(.POV_RPS)
     If .HAV_RPS <> "" Then Sazba = Sazba + CDbl(.HAV_RPS)
     If .PSk_RPZ <> "" Then Sazba = Sazba + CDbl(.PSk_RPZ)
     If .UPO_RPZ <> "" Then Sazba = Sazba + CDbl(.UPO_RPZ)
     If .PZa_RPZ <> "" Then Sazba = Sazba + CDbl(.PZa_RPZ)
     If .PNV_RPZ <> "" Then Sazba = Sazba + CDbl(.PNV_RPZ)
     If .PAs_RPS <> "" Then Sazba = Sazba + CDbl(.PAs_RPS)
     If .PPR_RPZ <> "" Then Sazba = Sazba + CDbl(.PPR_RPZ)
     If .PLi_RPZ <> "" Then Sazba = Sazba + CDbl(.PLi_RPZ)
     If .StP_RPS <> "" Then Sazba = Sazba + CDbl(.StP_RPS)
     If .GAP_RPS <> "" Then Sazba = Sazba + CDbl(.GAP_RPS)
     Sazba = Round2(Sazba / P_Flotila.Frk)
    End If
  End Select

MamChybu:
  If Err <> 0 Then Text_chyby = "neplatn|fffd| hodnota"
  On Error GoTo 0
  If Text_chyby <> "" Then
   Text_chyby = Typ & Text_chyby
   Retezec = "^"
  Else
   Retezec = Sazba
  End If
  Select Case Parametr
   Case "RPZ": .Kal_RPZ = Retezec
   Case "RPS": .Kal_RPS = Retezec
   Case "LPS": .Kal_LPS = Retezec
  End Select
 End With
 Kalkulace = Zaver_kontoly(Bunka, Sazba, Text_chyby, Format_bunky, False)
End Function
Function Kontrola_cisla(Bunka As Range, Format_bunky As String, Typ As String, Parametr As String) As Boolean
 Dim Text_chyby As String, Retezec As String, Cislo As Double

 On Error GoTo MamChybu
 Retezec = Trim(Bunka.Value)
 If Retezec <> "" Then
  If IsNumeric(Parametr) Then Cislo = CDbl(Parametr)
  Retezec = Pouze_cisla(Retezec, CByte(Cislo), True, False, True)
  If Retezec = "" Then
   Text_chyby = "nen|fffd| vypl|fffd|no cel|fffd| |fffd||fffd|slo"
  Else
   Cislo = CDbl(Retezec)
   If Not IsNumeric(Parametr) Then
    If Cislo >= Sazebnik(Parametr & "_ODDO", 1) And Cislo <= Sazebnik(Parametr & "_ODDO", 2) Then
     P_Smlouva(Bunka.Row).Poj_castka = Retezec
    Else
     Text_chyby = "hodnota je mimo povolen|fffd| rozmez|fffd|"
    End If
   End If
  End If
 End If

MamChybu:
 If Err <> 0 Then Text_chyby = "neplatn|fffd| hodnota"
 On Error GoTo 0
 If Text_chyby <> "" Then
  Text_chyby = Typ & Text_chyby
  P_Smlouva(Bunka.Row).Poj_castka = "^"
 End If
 Kontrola_cisla = Zaver_kontoly(Bunka, Cislo, Text_chyby, Format_bunky)
End Function
Function Kontrola_unikatnosti(Bunka As Range, Format_bunky As String, Typ As String, Parametr As String) As Boolean
 Dim Text_chyby As String, Retezec As String, Polozka As Long, Min As Integer, Max As Integer, Rozdelit As Byte

 On Error GoTo MamChybu
 Kontrola_unikatnosti = True
 Parametr = UCase(Parametr)
 If Parametr <> "X" Then
  Rozdelit = InStr(1, Parametr, "|")
  Min = CInt(Mid(Parametr, 1, Rozdelit - 1))
  Max = CInt(Mid(Parametr, Rozdelit + 1, Len(Parametr)))
 End If

 On Error Resume Next
 Retezec = Bunka.Value
 If Err <> 0 Then
  On Error GoTo 0
  Exit Function
 End If
 On Error GoTo 0
 
 If InStr(1, Typ, "|fffd||fffd|slo PS") > 0 And PC_unik = 1 Then
  Unik_zazn(0).Hodnota = Data.Cells(P_Pocatek_hla_r, P_hl03_cis_hip).Value
 End If

 If Retezec = "" Or Parametr <> "X" And (Len(Retezec) < Min Or Len(Retezec) > Max) Then Exit Function
 For Polozka = 0 To PC_unik - 1
  If Unik_zazn(Polozka).Hodnota = Retezec Then
   If Polozka = 0 Then
    Text_chyby = "je shodn|fffd| s |fffd||fffd|slem flotily"
   Else
    Text_chyby = "bylo ji|fffd| pou|fffd|ito"
    Bunka.Offset(Unik_zazn(Polozka).Radek - Bunka.Row, 0).Interior.ColorIndex = C_Barva_chyby_spravce
   End If
MamChybu:
   If Err <> 0 Then Text_chyby = "neplatn|fffd| hodnota"
   On Error GoTo 0
   Text_chyby = Typ & Text_chyby
   Kontrola_unikatnosti = Zaver_kontoly(Bunka, Retezec, Text_chyby, Format_bunky)
   Exit Function
  End If
 Next Polozka
 ReDim Preserve Unik_zazn(PC_unik)
 Unik_zazn(PC_unik).Hodnota = Retezec
 Unik_zazn(PC_unik).Radek = Bunka.Row
 PC_unik = PC_unik + 1
End Function
Function Kontrola_delky_hodnoty(Bunka As Range, Format_bunky As String, Typ As String, Parametr As String) As Boolean
 Dim Text_chyby As String, Retezec As String, Min As Integer, Max As Integer, Rozdelit As Byte

 On Error GoTo MamChybu
 If Bunka.Interior.ColorIndex <> C_Barva_chyby Then
  Retezec = Trim(Bunka.Value)
  Rozdelit = InStr(1, Parametr, "|")
  If Rozdelit > 0 Then
   Min = CInt(Mid(Parametr, 1, Rozdelit - 1))
   Max = CInt(Mid(Parametr, Rozdelit + 1, Len(Parametr)))
  Else
   Min = Parametr
   Max = Parametr
  End If

  If Retezec = "" And Min > 0 Then
   Text_chyby = "polo|fffd|ka nevypln|fffd|na"
  ElseIf Len(Retezec) < Min Then
   Text_chyby = "hodnota p|fffd||fffd|li|fffd| kr|fffd|tk|fffd|"
  ElseIf Len(Retezec) > Max Then
   Text_chyby = "hodnota p|fffd||fffd|li|fffd| dlouh|fffd|"
  End If
 End If

MamChybu:
 If Err <> 0 Then Text_chyby = "neplatn|fffd| hodnota"
 On Error GoTo 0
 If Mid(Typ, 1, 3) = "hl_" Then
  If Text_chyby = "" And P_Web_kosilka Then
   If Retezec <> K_Flotila.PNz Then Text_chyby = "neodpov|fffd|d|fffd| SPS"
  End If
  If Text_chyby = "" Then P_Flotila.PNz = Retezec
 ElseIf Text_chyby <> "" Then
  Text_chyby = Typ & Text_chyby
 End If
 Kontrola_delky_hodnoty = Zaver_kontoly(Bunka, Bunka.Value, Text_chyby, Format_bunky)
End Function
Attribute VB_Name = "M_Funkce_procedury"
Option Explicit
Sub Odemkni_sesit(Optional Nic As Boolean)
 Sesit.Unprotect C_Heslo_sesitu
End Sub
Sub Zamkni_sesit(Optional Nic As Boolean)
 Sesit.Protect Password:=C_Heslo_sesitu, Structure:=True, Windows:=False
End Sub
Sub Zamkni_list(Nazev As String)
 Sesit.Worksheets(Nazev).Protect C_Heslo_sesitu, DrawingObjects:=True, Contents:=True, Scenarios:=True, UserInterfaceOnly:=True, AllowFormattingCells:=False, AllowFormattingColumns:=True, AllowFormattingRows:=True, AllowInsertingRows:=True, AllowDeletingRows:=True, AllowSorting:=True, AllowFiltering:=True
'Password
'DrawingObjects           - Upravit objekty
'Contents                 -
'Scenarios                - Upravit sc|fffd|n|fffd||fffd|e
'UserInterfaceOnly        -
'AllowFormattingCells     - Form|fffd|tovat bu|fffd|ky
'AllowFormattingColumns   - Form|fffd|tovat sloupce
'AllowFormattingRows      - Form|fffd|tovat |fffd||fffd|dky
'AllowInsertingColumns    - Vlo|fffd|it sloupce
'AllowInsertingRows       - Vlo|fffd|it |fffd||fffd|dky
'AllowInsertingHyperlinks - Vlo|fffd|it hypertextov|fffd| odkazy
'AllowDeletingColumns     - Odstranit sloupce
'AllowDeletingRows        - Odstranit |fffd||fffd|dky
'AllowSorting             - Se|fffd|adit
'AllowFiltering           - Pou|fffd||fffd|t automatick|fffd| filtr
'AllowUsingPivotTables    - Pou|fffd||fffd|t sestavy kontingen|fffd|n|fffd|ch tabulek

'Vybrat uzam|fffd|en|fffd| bu|fffd|ky
'Vybrat odemknut|fffd| bu|fffd|ky
End Sub
Sub Vyber_napovedu(Optional Nic As Boolean)
 Select Case ActiveSheet.Name
  Case "N|fffd|pov|fffd|da", "data", "Zm|fffd|ny", "Odhl|fffd|ky"
  Case Else
   Sesit.Worksheets("N|fffd|pov|fffd|da").Select
 End Select
End Sub
Sub Odemkni_zobraz_vse(Optional Nic As Boolean)
 Call Odemkni_sesit
 With Sesit
  For Each List In .Worksheets
   List.Visible = True
  Next List
 End With
End Sub
Sub Zamkni_sktyj_vse(Optional Nic As Boolean)
 Call Test_funkcnosti
 Call Odemkni_sesit
 With Sesit
  For Each List In .Worksheets
   Select Case List.Name
    Case "N|fffd|pov|fffd|da", "data"
    Case "Zm|fffd|ny", "Odhl|fffd|ky"
     If Kalkul > 0 Then List.Visible = False
    Case Else
     List.Visible = False
   End Select
  Next List
  .Worksheets("data").Select
 End With
 Call Zamkni_sesit
End Sub
Sub Zobraz_list(Nazev_listu As String, Zobrazit As Boolean, Optional Prepnout As Boolean = False)
 Call Test_funkcnosti
 Call Odemkni_sesit
 With Sesit.Worksheets(Nazev_listu)
  .Visible = Zobrazit
  If Prepnout Then .Select
 End With
 Call Zamkni_sesit
End Sub
Sub Aktualizovat_postup(Optional Nulovat As Boolean)
 With F_Postup
  Stav = IIf(Nulovat, 0, Stav + Procenta)
  .Ramec_postupu.Caption = Format(Stav, "0%")
  .Popis_postupu.Width = Stav * (.Ramec_postupu.Width - 10)
  .Repaint
 End With
 DoEvents
End Sub
Sub Aktualizovat_proces(text As String)
 With F_Postup
  .Popis_procesu.Caption = text
  .Repaint
 End With
End Sub
Function Rozah_listu(Kde_soubor As String, Kde_list As String) As Long
 Dim i As Integer, Pocet_radku As Long, Max_pocet_poj As Long
 Max_pocet_poj = 0

 With Workbooks(Kde_soubor).Worksheets(Kde_list)
  For i = 2 To P_Pocet_sloupcu
   If Not IsEmpty(.Cells(.Rows.Count, i)) Then
    Max_pocet_poj = Rows.Count
    Exit For
   Else
    Pocet_radku = .Cells(.Rows.Count, i).End(xlUp).Row
    If Pocet_radku > Max_pocet_poj Then Max_pocet_poj = Pocet_radku
   End If
  Next i
 End With
 P_Preteceni_PS = IIf(P_Max_poj <= Max_pocet_poj - P_Pocatek_dat_r, True, False)
 Rozah_listu = IIf(Max_pocet_poj < P_Pocatek_dat_r, P_Pocatek_dat_r - 1, Max_pocet_poj)
End Function
Sub Smaz_prazdne_radky(Kde_soubor As String, Kde_list As String)
 Dim Posledni_radek As Long, Radek As Long, Sloupec As Byte

 With Workbooks(Kde_soubor).Worksheets(Kde_list)
  Posledni_radek = Rozah_listu(Kde_soubor, Kde_list)
  If .Cells.SpecialCells(xlLastCell).Row > Posledni_radek Then .Range(.Rows(Posledni_radek + 1).Address, .Rows(.Cells.SpecialCells(xlLastCell).Row).Address).Delete
  On Error Resume Next
  If Posledni_radek < 7 Then Exit Sub
  For Radek = Posledni_radek To P_Pocatek_dat_r Step -1
   For Sloupec = P_Pocatek_dat_s To P_1502GAP
    Select Case Sloupec
     Case P_0503POV, P_0504POV, P_0605HAV, P_0606HAV, P_0702PSk, P_0803UPO, P_0902PZa, P_1002PNV, P_1102PAs, P_1103PAs, P_1202PPR, P_1302PLi, P_1405StP, P_1406StP
     Case Else
      If .Cells(Radek, Sloupec).Value <> "" Or Err <> 0 Then Exit For
    End Select
   Next Sloupec
   If Sloupec = P_1502GAP + 1 Then .Rows(Radek).Delete Shift:=xlUp
  Next Radek
  On Error GoTo 0
 End With
End Sub
Sub Zapis_chyby(Text_chyby As String, Bunka_chyba As Range, Barva As Byte)
 Dim Bunka_popis As Range

 With Bunka_chyba
  If .Row = P_Pocatek_hla_r Then
   Set Bunka_popis = .Offset(1, 0)
  Else
   Set Bunka_popis = Data.Cells(.Row, 1)
  End If
 End With
 With Bunka_popis
  If IsEmpty(.Value) Then
   .Value = Text_chyby
   .Interior.ColorIndex = Barva
  Else
   If .Interior.ColorIndex <> C_Barva_chyby And Barva = C_Barva_chyby Then .Interior.ColorIndex = Barva
   .Value = IIf(Len(.Value & vbLf & Text_chyby) > 1024, Left(.Value & vbLf & Text_chyby, 1000) & vbLf & "P|fffd||fffd|li|fffd| mnoho chyb.", .Value & vbLf & Text_chyby)
  End If
 End With
 Bunka_chyba.Interior.ColorIndex = Barva
End Sub
Function Zaver_kontoly(Bunka As Range, Retezec As Variant, Text_chyby As String, Format_bunky As String, Optional Nula As Boolean = True, Optional Barva As Byte = C_Barva_chyby) As Boolean
 Dim Cislo As Double, MamCislo As Boolean, Barva_zmeny As Byte

 MamCislo = False
 Zaver_kontoly = True
 With Bunka
  .NumberFormatLocal = Format_bunky
  On Error Resume Next
  If Format_bunky <> "@" Then
   Cislo = Retezec * 1
   If Err = 0 Then MamCislo = True
  End If
  On Error GoTo 0

  If Text_chyby <> "" Then
   Zaver_kontoly = False
   Call Zapis_chyby(Text_chyby, Bunka, Barva)
   If Barva = C_Barva_chyby Then
    Prerus = True
    Exit Function
   End If
  End If

  Barva_zmeny = IIf(.Interior.ColorIndex = C_Barva_chyby_spravce, C_Barva_chyby_zmeny, C_Barva_zmeny)
  If MamCislo Then
   If Cislo <> .Value Then
    .Value = Retezec
    .Interior.ColorIndex = Barva_zmeny
   ElseIf TypeName(.Value) = "String" Then
    .Value = Retezec
   ElseIf Not Nula And Cislo = 0 And Not IsEmpty(.Value) And Not P_BezSaz Then
    .Value = ""
    .Interior.ColorIndex = Barva_zmeny
   End If
  ElseIf Retezec <> .Value Then
   .Value = Retezec
   .Interior.ColorIndex = Barva_zmeny
  End If
 End With
End Function
Function Uni_fce(Bunka As Range, Format_bunky As String, Funkce As Byte, Typ As String, Optional Parametr As String) As Boolean
 Select Case Funkce
  Case 1: Uni_fce = Kontrola_ic_rc(Bunka, Format_bunky, Typ, Parametr)
  Case 2: Uni_fce = Kontrola_cisla_smlouvy(Bunka, Format_bunky, Typ, Parametr)
  Case 3: Uni_fce = Kontrola_typu_flotily(Bunka, Format_bunky)
  Case 4: Uni_fce = Kontrola_frekvence_placeni(Bunka, Format_bunky)
  Case 5: Uni_fce = Kontrola_obchodni_slevy(Bunka, Format_bunky, Typ)
  Case 6: Uni_fce = Kontrola_volby(Bunka, Format_bunky, Typ, Parametr)
  Case 7: Uni_fce = Kontrola_data(Bunka, Format_bunky, Typ, Parametr)
  Case 8: Uni_fce = Kontrola_vyplneni_dle_bunky(Bunka, Format_bunky, Typ, Parametr)
  Case 9
   Select Case Parametr
    Case "PSC": Uni_fce = Kontrola_PSC(Bunka, Format_bunky, Typ)
    Case "RZ": Uni_fce = Kontrola_RZ(Bunka, Format_bunky, Typ)
    Case "TP": Uni_fce = Kontrola_TP(Bunka, Format_bunky, Typ)
    Case "VIN": Uni_fce = Kontrola_VIN(Bunka, Format_bunky, Typ)
    Case "DV": Uni_fce = Kontrola_druhu_vozidla(Bunka, Format_bunky, Typ)
    Case "TZ": Uni_fce = Kontrola_tovarni_znacky(Bunka, Format_bunky, Typ)
    Case "TV": Uni_fce = Kontrola_typu_vozidla(Bunka, Format_bunky, Typ)
    Case "RV": Uni_fce = Kontrola_roku_vyroby(Bunka, Format_bunky, Typ)
    Case "KV", "KO", "KH", "KP": Uni_fce = Kontrola_VOHP(Bunka, Format_bunky, Typ, Parametr)
   End Select
  Case 10: Uni_fce = Kontrola_POV(Bunka, Format_bunky, Typ, Parametr)
  Case 11: Uni_fce = Kontrola_HAV(Bunka, Format_bunky, Typ, Parametr)
  Case 12: Uni_fce = Kontrola_OST(Bunka, Format_bunky, Typ, Parametr)
  Case 13: Uni_fce = Kalkulace(Bunka, Format_bunky, Typ, Parametr)
  Case 14
  Case 16: Uni_fce = Kontrola_cisla(Bunka, Format_bunky, Typ, Parametr)
  Case 17: Uni_fce = Kontrola_unikatnosti(Bunka, Format_bunky, Typ, Parametr)
  Case 18: Uni_fce = Kontrola_delky_hodnoty(Bunka, Format_bunky, Typ, Parametr)
 End Select
End Function
Sub Pridej_hlaseni(ByVal Kod As String)
 Dim Pozice As Byte

 P_Hlasit = ""
 If Trim(Kod) = "" Then Exit Sub
 If PC_hlas <> 0 Then
  For Pozice = 0 To PC_hlas - 1
   If Kod = P_Hlaseni(Pozice) Then Exit Sub
  Next Pozice
 End If
 ReDim Preserve P_Hlaseni(PC_hlas)
 P_Hlaseni(PC_hlas) = Kod
 PC_hlas = PC_hlas + 1
End Sub
Function Round2(ByVal Cislo As Double, Optional Desetin As Byte = 0) As Double
 Round2 = CDbl(FormatNumber(Cislo, Desetin))
End Function
Function Nacteni_ze_SPS(Optional Ulozit As Boolean = True) As Boolean
 Dim CisloFlot As Range

 Call Test_funkcnosti
 Nacteni_ze_SPS = False
 If P_Web_prihlasen And P_Web_prava = 0 Then
  MsgBox "U|fffd|ivatel nem|fffd| pr|fffd|va k aplikaci."
  Exit Function
 End If
 With Data
  .Unprotect C_Heslo_sesitu
  Set CisloFlot = .Cells(P_Pocatek_hla_r, P_hl03_cis_hip)
  Call Format_hlavicky
  Call Format_sloupcu
  If Kontrola_cisla_smlouvy(CisloFlot, "@", "", "HIP") Then
   If P_Web_prihlasen Then
    Call Web_services
   Else
    F_Prihlaseni_do_SPS.Show
   End If
   If P_Web_kosilka And Ulozit Then
    Application.ScreenUpdating = False
    Application.EnableEvents = False
    .Cells(P_Pocatek_hla_r, P_hl01_poj_naz).Value = K_Flotila.PNz
    .Cells(P_Pocatek_hla_r, P_hk02_poj_ico).Value = K_Flotila.PIC
    .Cells(P_Pocatek_hla_r, P_hl04_typ_flo).Value = K_Flotila.Typ
    .Cells(P_Pocatek_hla_r, P_hk05_frek_pl).Value = K_Flotila.Frk
    .Cells(P_Pocatek_hla_r, P_hk06_sle_pov).Value = K_Flotila.POV
    .Cells(P_Pocatek_hla_r, P_hk07_sle_hav).Value = K_Flotila.HAV
    .Cells(P_Pocatek_hla_r, P_hk08_sle_pas).Value = K_Flotila.PAs
    .Cells(P_Pocatek_hla_r, P_hk09_sle_stp).Value = K_Flotila.StP
    .Cells(P_Pocatek_hla_r, P_hk10_sle_gap).Value = K_Flotila.GAP
    .Cells(P_Pocatek_hla_r, P_hl11_dat_sjp).Value = K_Flotila.DSF
    .Cells(P_Pocatek_hla_r, P_hk12_dat_poc).Value = K_Flotila.DPF
    Call Format_sloupcu
    .Cells(P_Pocatek_hla_r, P_hk12_dat_poc).Locked = True
    Application.EnableEvents = True
    Application.ScreenUpdating = True
   End If
   If P_Web_kosilka Then Nacteni_ze_SPS = True
  Else
   MsgBox "Chyba v |fffd||fffd|sle flotily"
  End If
  Call Zamkni_list(.Name)
 End With
 With Sesit.Worksheets("Odhl|fffd|ky")
  .Unprotect C_Heslo_sesitu
  .Cells(4, 4).Value = K_Flotila.DSF
  Call Zamkni_list(.Name)
 End With
 Call GDPR(Not P_Web_prihlasen)
End Function
Function Ulozit_verzi() As Boolean
 Dim Nova_ver As Boolean, Novy_saz As Boolean, Verze As String, Datum As Date, Hlaseni As String

 Ulozit_verzi = False
 Call Zamkni_sktyj_vse
 If P_Web_prava = 3 Then
  Nova_ver = False: Novy_saz = False
  Verze = Sazebnik("VER_FAP", 1)
  Datum = Sazebnik("SAZ_DAT", 1)
  With Sesit.Worksheets("N|fffd|pov|fffd|da")
   If .Range("H5").Value <> Verze Then Hlaseni = "verze DS"
   If .Range("J5").Value <> Datum Then
    If Len(Hlaseni) > 0 Then Hlaseni = Hlaseni & " a "
    Hlaseni = Hlaseni & "data sazebn|fffd|ku"
   End If
   .Select
   .Unprotect C_Heslo_sesitu
   .Range("J5") = Datum
   Datum = Sazebnik("DAT_PP", 1)
   .Range("G3") = Datum
   .Range("I3") = Sazebnik("DAT_PP", 2)
   .Range("H5") = "'" & Verze
   .Protect C_Heslo_sesitu
  End With
  Verze = Replace(Verze, ".", "")
  If Len(Hlaseni) > 0 Then
   If MsgBox("Do|fffd|lo ke zm|fffd|n|fffd| " & Hlaseni & ", m|fffd| se proto DS ulo|fffd|it pod nov|fffd|m n|fffd|zvem: DS-" & Sazebnik("TYP_DS", 1) & "-" & Format(Datum, "yyyy-") & Verze & ".xlsm?", vbYesNo) = vbYes Then
    Sesit.SaveAs Sesit.Path & "\DS-" & Sazebnik("TYP_DS", 1) & "-" & Format(Datum, "yyyy-") & Verze & ".xlsm"
    Ulozit_verzi = True
   End If
  End If
 End If
End Function
Sub Test_funkcnosti(Optional Nic As Boolean)
 Dim DTest As String

 On Error Resume Next
  DTest = Sesit.Name
  If Err = 91 Then Call Zaklad
 On Error GoTo 0
End Sub
Sub Smaz_menu(Optional Nic As Boolean)
 On Error Resume Next
 Application.CommandBars("Worksheet Menu Bar").Controls(Sazebnik("TYP_DS", 1) & " Flotily").Delete
 On Error GoTo 0
End Sub
Sub Stav_kalkul(Optional New_stav As Byte = 0)
 Dim Old_stav As Byte, SysScreen As Boolean, SysEvents As Boolean

 Call Test_funkcnosti
 With Data
  Nastav.Cells(8, C_Sl_kod).Value = New_stav
  Old_stav = Kalkul
  SysScreen = Application.ScreenUpdating: Application.ScreenUpdating = False
  SysEvents = Application.EnableEvents: Application.EnableEvents = False
  .Unprotect C_Heslo_sesitu
  If Old_stav <> New_stav Then P_Zmenen = False
  If Old_stav < 2 And New_stav < 2 Or Old_stav = New_stav Then
  ElseIf Old_stav > 1 Then
   .Cells(P_Pocatek_hla_r, P_hl02_poj_ico).Value = .Cells(P_Pocatek_hla_r, P_hk02_poj_ico).Value
   .Cells(P_Pocatek_hla_r, P_hl05_frek_pl).Value = .Cells(P_Pocatek_hla_r, P_hk05_frek_pl).Value
   .Cells(P_Pocatek_hla_r, P_hl06_sle_pov).Value = .Cells(P_Pocatek_hla_r, P_hk06_sle_pov).Value
   .Cells(P_Pocatek_hla_r, P_hl07_sle_hav).Value = .Cells(P_Pocatek_hla_r, P_hk07_sle_hav).Value
   .Cells(P_Pocatek_hla_r, P_hl08_sle_pas).Value = .Cells(P_Pocatek_hla_r, P_hk08_sle_pas).Value
   .Cells(P_Pocatek_hla_r, P_hl09_sle_stp).Value = .Cells(P_Pocatek_hla_r, P_hk09_sle_stp).Value
   .Cells(P_Pocatek_hla_r, P_hl10_sle_gap).Value = .Cells(P_Pocatek_hla_r, P_hk10_sle_gap).Value
   .Cells(P_Pocatek_hla_r, P_hl12_dat_poc).Value = .Cells(P_Pocatek_hla_r, P_hk12_dat_poc).Value
  End If
  Call Zaklad
  If New_stav > 1 Then
   .Cells(P_Pocatek_hla_r - 1, P_hl02_poj_ico).Copy .Cells(P_Pocatek_hla_r - 1, P_hk02_poj_ico)
   .Cells(P_Pocatek_hla_r, P_hl02_poj_ico).Copy .Cells(P_Pocatek_hla_r, P_hk02_poj_ico)
   .Cells(P_Pocatek_hla_r, P_hl05_frek_pl).Copy .Cells(P_Pocatek_hla_r, P_hk05_frek_pl)
   .Range(.Cells(P_Pocatek_hla_r - 1, P_hl06_sle_pov).Address & ":" & .Cells(P_Pocatek_hla_r - 1, P_hl10_sle_gap).Address).Copy .Cells(P_Pocatek_hla_r - 1, P_hk06_sle_pov)
   .Cells(P_Pocatek_hla_r, P_hl06_sle_pov).Copy .Cells(P_Pocatek_hla_r, P_hk06_sle_pov)
   .Cells(P_Pocatek_hla_r, P_hl07_sle_hav).Copy .Cells(P_Pocatek_hla_r, P_hk07_sle_hav)
   .Cells(P_Pocatek_hla_r, P_hl08_sle_pas).Copy .Cells(P_Pocatek_hla_r, P_hk08_sle_pas)
   .Cells(P_Pocatek_hla_r, P_hl09_sle_stp).Copy .Cells(P_Pocatek_hla_r, P_hk09_sle_stp)
   .Cells(P_Pocatek_hla_r, P_hl10_sle_gap).Copy .Cells(P_Pocatek_hla_r, P_hk10_sle_gap)
   .Cells(P_Pocatek_hla_r - 1, P_hl12_dat_poc).Copy .Cells(P_Pocatek_hla_r - 1, P_hk12_dat_poc)
   .Cells(P_Pocatek_hla_r, P_hl12_dat_poc).Copy .Cells(P_Pocatek_hla_r, P_hk12_dat_poc)
  End If
  If Old_stav > 0 And New_stav = 0 Then .Range(.Cells(P_Pocatek_dat_r - 1, P_1601Kal).Address, .Cells(.Cells.SpecialCells(xlLastCell).Row, P_1703Gol).Address).ClearContents
  Call Format_hlavicky
  Call Format_sloupcu
  .Cells.EntireRow.AutoFit
  Call Odemkni_zobraz_vse
  Call Zamkni_sktyj_vse
  Call AddMenu
  Call Zamkni_list(.Name)
  If New_stav > 0 Then Call Kontrola_typu_flotily(.Cells(P_Pocatek_hla_r, P_hl04_typ_flo), "@", True)
  With Sesit.Worksheets("N|fffd|pov|fffd|da")
   .Unprotect C_Heslo_sesitu
   .Cells(1, 1).Value = IIf(New_stav = 0, "N", "A")
   Call Zamkni_list(.Name)
  End With
  Call GDPR(Not P_Web_prihlasen)
  Application.ScreenUpdating = SysScreen
  Application.EnableEvents = SysEvents
  .Cells(P_Pocatek_dat_r, P_hk02_poj_ico).Select
 End With
End Sub
Sub Uprav_storna(Optional Nic As Boolean)
 Dim PRadek As Long, Sloupec As Integer, ARadek As Long, MRadek As Long, Oblast As Range
 With Sesit.Worksheets("Odhl|fffd|ky")
  Application.ScreenUpdating = False
  Application.EnableEvents = False
  Application.Calculation = xlCalculationManual
  .Unprotect C_Heslo_sesitu
  PRadek = .Cells.SpecialCells(xlLastCell).Row
  If PRadek < 8 Then
   MRadek = 8
  Else
   MRadek = PRadek
   For ARadek = PRadek To 8 Step -1
    If Application.WorksheetFunction.CountA(.Range(.Cells(ARadek, 1).Address & ":" & .Cells(ARadek, 7).Address)) = 0 Then
     .Rows(ARadek).Delete
     MRadek = MRadek - 1
    End If
   Next ARadek
   If MRadek < 8 Then MRadek = 8
  End If
  MRadek = MRadek + 1
  On Error Resume Next
  .Range(.Cells(8, 9).Address & ":" & .Cells(MRadek, 9).Address).FormulaR1C1 = _
        "=IF(OR(R4C4="""",RC[-5]="""",RC[-4]=""""),"""",IF(AND(MATCH(RC[-3],duvody,0)=2,OR(R4C4>41639,MATCH(RC[-2],rizika,0)<3),RC[-5]>=RC[-4],RC[-5]>=RC[-4]+15),RC[-5],RC[-4]))"
  .Range(.Cells(8, 10).Address & ":" & .Cells(MRadek, 10).Address).FormulaR1C1 = _
        "=IF(R4C4="""","""",IF(OR(RC[-6]="""",RC[-5]=""""),"""",IF(MATCH(RC[-4],duvody,0)>2,RC[-4],IF(AND(RC[-6]>=RC[-5],RC[-6]>=RC[-5]+15),RC[-4],""Dohodou""))))"
  With .Range(.Cells(8, 4).Address & ":" & .Cells(MRadek, 4).Address).Validation
   .Delete
   .Add Type:=xlValidateDate, AlertStyle:=xlValidAlertStop, Operator:=xlBetween, Formula1:="1/1/1999", Formula2:="=TODAY()"
   .IgnoreBlank = True
   .InCellDropdown = True
   .ErrorTitle = "Datum doru|fffd|en|fffd|/nahl|fffd|en|fffd|"
   .ErrorMessage = "Datum neni v rozmez|fffd| 1.1.1999 - " & Date
   .ShowError = True
   .InputMessage = "Zadejte datum v rozmez|fffd| 1.1.1999 - " & Date
  End With
  With .Range(.Cells(8, 5).Address & ":" & .Cells(MRadek, 5).Address).Validation
   .Delete
   .Add Type:=xlValidateDate, AlertStyle:=xlValidAlertStop, Operator:=xlBetween, Formula1:="1/1/1999", Formula2:="=TODAY()+90"
   .IgnoreBlank = True
   .InCellDropdown = True
   .ErrorTitle = "Datum z|fffd|niku"
   .ErrorMessage = "Datum neni v rozmez|fffd| 1.1.1999 - " & Date + 90
   .ShowError = True
   .InputMessage = "Zadejte datum v rozmez|fffd| 1.1.1999 - " & Date + 90
  End With
  With .Range(.Cells(8, 6).Address & ":" & .Cells(MRadek, 6).Address).Validation
   .Delete
   .Add Type:=xlValidateList, AlertStyle:=xlValidAlertStop, Operator:=xlBetween, Formula1:="=duvody"
   .IgnoreBlank = False
   .InCellDropdown = True
   .ErrorTitle = "D|fffd|vod z|fffd|niku"
   .ErrorMessage = "Chyba: Hodnotu mus|fffd|te vybrat ze seznamu"
   .ShowError = True
   .InputMessage = "Vyberte ze seznamu"
  End With
  With .Range(.Cells(8, 7).Address & ":" & .Cells(MRadek, 7).Address).Validation
   .Delete
   .Add Type:=xlValidateList, AlertStyle:=xlValidAlertStop, Operator:=xlBetween, Formula1:="=rizika"
   .IgnoreBlank = False
   .InCellDropdown = True
   .ErrorTitle = "Zanikaj|fffd|c|fffd| riziko"
   .ErrorMessage = "Chyba: Hodnotu mus|fffd|te vybrat ze seznamu"
   .ShowError = True
   .InputMessage = "Vyberte ze seznamu"
  End With
  With .Range("A8:G" & MRadek & ",I8:J" & MRadek).Borders
   .LineStyle = xlNone
   .LineStyle = xlContinuous
   .Weight = xlThin
  End With
  For Sloupec = 7 To 10
   With .Range("A8:A" & MRadek & ",B8:C" & MRadek & ",D8:G" & MRadek & ",I8:J" & MRadek).Borders(Sloupec)
    .Weight = xlMedium
   End With
  Next Sloupec
  .Cells.FormatConditions.Delete
  ARadek = 8
  For ARadek = 8 To MRadek
   With .Cells(ARadek, 4)
    .FormatConditions.Add Type:=xlExpression, Formula1:="=KDY|fffd|(A(PO|fffd|ET2($D$" & ARadek & ":$G$" & ARadek & ")>0;JE.PR|fffd|ZDN|fffd|($D$" & ARadek & "));PRAVDA)"
    .FormatConditions(1).Interior.ColorIndex = 3
   End With
   With .Cells(ARadek, 5)
    .FormatConditions.Add Type:=xlExpression, Formula1:="=KDY|fffd|(A(PO|fffd|ET2($D$" & ARadek & ":$G$" & ARadek & ")>0;JE.PR|fffd|ZDN|fffd|($E$" & ARadek & "));PRAVDA)"
    .FormatConditions(1).Interior.ColorIndex = 3
   End With
   With .Cells(ARadek, 6)
    .FormatConditions.Add Type:=xlExpression, Formula1:="=KDY|fffd|(A(PO|fffd|ET2($D$" & ARadek & ":$G$" & ARadek & ")>0;JE.PR|fffd|ZDN|fffd|($F$" & ARadek & "));PRAVDA)"
    .FormatConditions(1).Interior.ColorIndex = 3
   End With
   With .Cells(ARadek, 7)
    .FormatConditions.Add Type:=xlExpression, Formula1:="=KDY|fffd|(A(PO|fffd|ET2($D$" & ARadek & ":$G$" & ARadek & ")>0;JE.PR|fffd|ZDN|fffd|($G$" & ARadek & "));PRAVDA)"
    .FormatConditions(1).Interior.ColorIndex = 3
   End With
   With .Cells(ARadek, 9)
    .FormatConditions.Add Type:=xlExpression, Formula1:="=KDY|fffd|(A($D$4<41640; POZVYHLEDAT($G$" & ARadek & ";rizika;0)=1;POZVYHLEDAT($F$" & ARadek & ";duvody;0)=2);PRAVDA)"
    .FormatConditions(1).Interior.ColorIndex = 43
   End With
   With .Cells(ARadek, 10)
    .FormatConditions.Add Type:=xlExpression, Formula1:="=KDY|fffd|(A($D$4<41640;POZVYHLEDAT($G$" & ARadek & ";rizika;0)=1;POZVYHLEDAT($F$" & ARadek & ";duvody;0)=2);PRAVDA)"
    .FormatConditions(1).Interior.ColorIndex = 43
   End With
  Next ARadek
  For Each Oblast In .Cells.SpecialCells(xlCellTypeAllValidation)
   If Err.Number = 0 Then
    With Oblast
     If .Value <> "" Then
      If Not .Validation.Value Then
       MsgBox .Validation.ErrorMessage, vbCritical, .Validation.ErrorTitle
       .ClearContents
      End If
     End If
    End With
   End If
  Next Oblast
  On Error GoTo 0
  Call Zamkni_list(.Name)
  Application.Calculation = xlCalculationAutomatic
  Application.EnableEvents = True
  Application.ScreenUpdating = True
 End With
End Sub
Function DecToBin(ByVal Cislo As Long, ByVal Pozic As Integer) As String
 Dim i As Integer
 If Cislo > 2 ^ Pozic - 1 Then
  DecToBin = "0"
 Else
  For i = Pozic To 1 Step -1
   If Cislo >= 2 ^ (i - 1) Then
    DecToBin = DecToBin & "1"
    Cislo = Cislo - (2 ^ (i - 1))
   Else
    DecToBin = DecToBin & "0"
   End If
  Next i
 End If
End Function
Function Kodovani(Heslo As String) As String
 Dim Pozice1 As Byte, Pozice2 As Byte, Hodnota As String, Nasobek1 As Byte, Nasobek2 As Byte, ZmenO1 As Byte, ZmenO2 As Byte

 Randomize
 If Len(Heslo) < 29 Then
  Heslo = Heslo & Chr(254) & Chr(247)
  For Pozice1 = Len(Heslo) To 30
   Heslo = Heslo & Mid(Rnd(), 3, 1)
  Next Pozice1
 End If
 Nasobek1 = Int((9 * Rnd) + 1)
 Nasobek2 = Int((9 * Rnd) + 1)
 ZmenO1 = Int((41 * Rnd) + 10)
 ZmenO2 = Int((41 * Rnd) + 10)
 Kodovani = ToHex(Nasobek1 & ZmenO2)
 For Pozice1 = 1 To Len(Heslo)
  Hodnota = ""
  If Pozice1 Mod 2 > 0 Then
   Hodnota = (Asc(Mid(Heslo, Pozice1)) - 6 + Pozice1) * Nasobek1 - ZmenO1
  Else
   Hodnota = (Asc(Mid(Heslo, Pozice1)) + 3 - Pozice1) * Nasobek2 + ZmenO2
  End If
  Kodovani = ToHex(Hodnota) & Kodovani
 Next Pozice1
 Kodovani = ToHex(Nasobek2 & ZmenO1) & Kodovani
End Function
Function DeKodovani(Heslo As String) As String
 Dim Pozice1 As Byte, Pozice2 As Byte, Hodnota As String, Nasobek1 As Byte, Nasobek2 As Byte, ZmenO1 As Byte, ZmenO2 As Byte

 If Heslo = "" Then Exit Function
 Nasobek1 = Left(CInt("&H" & Right(Heslo, 3)), 1)
 Nasobek2 = Left(CInt("&H" & Left(Heslo, 3)), 1)
 ZmenO1 = Right(CInt("&H" & Left(Heslo, 3)), 2)
 ZmenO2 = Right(CInt("&H" & Right(Heslo, 3)), 2)
 Pozice1 = Len(Heslo) - 2
 Pozice2 = 0
 Do Until Pozice1 = 4
  Pozice1 = Pozice1 - 3
  Pozice2 = Pozice2 + 1
  Hodnota = CInt("&H" & Mid(Heslo, Pozice1, 3))
  If Pozice1 Mod 2 > 0 Then
   Hodnota = Chr((Hodnota - ZmenO2) / Nasobek2 - 3 + Pozice2)
  Else
   Hodnota = Chr((Hodnota + ZmenO1) / Nasobek1 + 6 - Pozice2)
  End If
  If Hodnota = Chr(247) And Right(DeKodovani, 1) = Chr(254) Then
   DeKodovani = Left(DeKodovani, Len(DeKodovani) - 1)
   Exit Do
  End If
  DeKodovani = DeKodovani & Hodnota
 Loop
End Function
Function ToHex(Cislo As String) As String
 ToHex = Hex(Cislo)
 ToHex = String(3 - Len(ToHex), "0") & ToHex
End Function

Attribute VB_Name = "M_Konstanty_promenne"
Option Explicit
Public Sesit As Workbook, List As Worksheet, Nastav As Worksheet, Data As Worksheet, Kalkul As Byte, Do_radku As Long
Public Prerus As Boolean, NovaVerze As Boolean, PouzeLogin As Boolean, Proces As Byte, Procenta As Double, Stav As Double
Public Type Zaznam
 Hodnota As String
 Radek As Long
End Type
Public Type Zaloha
 Format_bunky As String
 Typ As String
 Parametr As String
End Type
Public Type Polozka_sml
 P_D As String * 1
 MamPOV As String * 1
 MamHAV As String * 1
 Dru_voz As String
 Dru_voz_DI As String
 Dru_voz_kod As String
 Znacka_voz As String
 Znacka_v_H As String
 Koef_stari As String
 Vykon As String
 Objem As String
 Hmotnost As String
 Poc_os As String
 Poj_castka As String
 POV_Lim_pln As String * 1
 POV_Koef_spec_prov As String
 POV_Saz As String
 POV_Min_saz As String
 POV_RPZ As String
 POV_RPS As String
 HAV_Roz_poj As String
 HAV_Nes_riz As String
 HAV_Uze_roz As String
 HAV_Spoluu As String
 HAV_RPZ As String
 HAV_RPS As String
 PSk_RPZ As String
 UPO_Poj As String
 UPO_NRP As String
 UPO_RPZ As String
 PZa_RPZ As String
 PNV_RPZ As String
 PAs_RPZ As String
 PAs_RPS As String
 PPR_RPZ As String
 PLi_RPZ As String
 StP_Druh As String
 StP_Kat As String
 StP_Spol As String
 StP_NRP As String
 StP_RPZ As String
 StP_RPS As String
 GAP_Prim As String
 GAP_Spol As String
 GAP_RPZ As String
 GAP_RPS As String
 Kal_RPZ As String
 Kal_RPS As String
 Kal_LPS As String
End Type
Public Type Flotila
 Typ As String
 Frk As String
 PIC As String
 PNz As String
 POV As String
 HAV As String
 PAs As String
 StP As String
 GAP As String
 DSF As Date
 DPF As Date
End Type

Public P_Web_kosilka As Boolean, P_Web_prava As Byte, P_Web_prihlasen As Boolean, P_Web_login As String, P_Web_heslo As String, P_Web_test As Boolean, PAJmeno As String, PAHeslo As String
Public P_Zmenen As Boolean, P_BezSaz As Boolean, P_Bez_ZK As Boolean, P_Anon As Boolean
'zda je v DS vyplneno vice smluuv, nez je jeho kapacita
Public P_Preteceni_PS As Boolean
'varovna hlaseni
Public P_Hlaseni() As String, PC_hlas As Byte, P_Hlasit As String

Public PC_unik As Long, Unik_zazn() As Zaznam
Public P_MamPOJ() As Boolean, P_Zaloha() As Zaloha, P_Smlouva() As Polozka_sml, P_Flotila As Flotila, K_Flotila As Flotila
Public P_verzeFAP As String, P_DatSaz As Date, P_Kod_asist As String

'hesla
Public Const C_Heslo_sesitu As String = "a456"
Public Const C_Barva_chyby As Byte = 3 'Cervena
Public Const C_Barva_chyby_spravce As Byte = 40 'Svetle oranzova
Public Const C_Barva_chyby_zmeny As Byte = 14 'Tmava azurova
Public Const C_Barva_zmeny As Byte = 24 'Svetle modra
Public Const C_Bez_barvy As Byte = 2
Public Const C_Sl_kod As Byte = 3
Public Const C_Sl_fce01 As Byte = 7
Public Const C_Sl_fcexx As Byte = 24
Public Const C_Sl_tzn As Byte = 27
Public Const C_Sl_par As Byte = 29

'########################
'##nastaveni bunek v listu data
'########################
'souradnice, odkud se zacinaji vyplnovat smlouvy
Public P_Pocatek_dat_s As Byte
Public P_Pocatek_dat_r As Byte
Public P_Pocatek_hla_r As Byte
'pocet sloupcu
Public P_Pocet_sloupcu As Byte
'posledni radek, ktery se ma zpracovat
Public P_Max_poj As Long
'zahlavi
Public P_hl01_poj_naz As Byte
Public P_hl02_poj_ico As Byte
Public P_hl03_cis_hip As Byte
Public P_hl04_typ_flo As Byte
Public P_hl05_frek_pl As Byte
Public P_hl06_sle_pov As Byte
Public P_hl07_sle_hav As Byte
Public P_hl08_sle_pas As Byte
Public P_hl09_sle_stp As Byte
Public P_hl10_sle_gap As Byte
Public P_hl11_dat_sjp As Byte
Public P_hl12_dat_poc As Byte

Public P_hk02_poj_ico As Byte
Public P_hk05_frek_pl As Byte
Public P_hk06_sle_pov As Byte
Public P_hk07_sle_hav As Byte
Public P_hk08_sle_pas As Byte
Public P_hk09_sle_stp As Byte
Public P_hk10_sle_gap As Byte
Public P_hk12_dat_poc As Byte

'tabulka
Public P_0001PCh As Byte 'Popis chyby
Public P_0101Sml As Byte '|fffd||fffd|slo poj. smlouvy
Public P_0102Sml As Byte 'Prvovznik nebo dodatek
Public P_0103Sml As Byte 'Sjedn|fffd|n|fffd| - datum
Public P_0104Sml As Byte 'Po|fffd|atek poji|fffd|t|fffd|n|fffd| - datum
Public P_0105Sml As Byte 'Konec poji|fffd|t|fffd|n|fffd| - datum
Public P_0201Drz As Byte 'I|fffd| / R|fffd|
Public P_0202Drz As Byte 'Titul
Public P_0203Drz As Byte 'Jm|fffd|no
Public P_0204Drz As Byte 'P|fffd||fffd|jmen|fffd|/N|fffd|zev spole|fffd|nosti
Public P_0205Drz As Byte 'Ulice
Public P_0206Drz As Byte '|fffd||fffd|slo domu
Public P_0207Drz As Byte 'PS|fffd|
Public P_0208Drz As Byte 'Obec
Public P_0301Vla As Byte 'I|fffd| / R|fffd|
Public P_0302Vla As Byte 'Titul
Public P_0303Vla As Byte 'Jm|fffd|no
Public P_0304Vla As Byte 'P|fffd||fffd|jmen|fffd|/N|fffd|zev spole|fffd|nosti
Public P_0305Vla As Byte 'Ulice
Public P_0306Vla As Byte '|fffd||fffd|slo domu
Public P_0307Vla As Byte 'PS|fffd|
Public P_0308Vla As Byte 'Obec
Public P_0401PrP As Byte 'Registra|fffd|n|fffd| zna|fffd|ka
Public P_0402PrP As Byte '|fffd||fffd|slo velk|fffd|ho TP
Public P_0403PrP As Byte 'VIN
Public P_0404PrP As Byte 'Druh vozidla
Public P_0405PrP As Byte 'Zna|fffd|ka vozidla
Public P_0406PrP As Byte 'Typ vozidla
Public P_0407PrP As Byte 'Rok v|fffd|roby
Public P_0408PrP As Byte 'V|fffd|kon
Public P_0409PrP As Byte 'Objem
Public P_0410PrP As Byte 'Hmotnost
Public P_0411PrP As Byte 'Po|fffd|et m|fffd|st k sezen|fffd|
Public P_0412PrP As Byte 'Leasingov|fffd| n|fffd|jem
Public P_0413PrP As Byte 'N|fffd|zev leasingov|fffd| firmy
Public P_0414PrP As Byte '|fffd||fffd|slo leasingov|fffd| smlouvy
Public P_0415PrP As Byte 'Vinkulace
Public P_0416PrP As Byte 'Zvl|fffd|tn|fffd| v|fffd|bava
Public P_0417PrP As Byte 'Pojistn|fffd| |fffd||fffd|stka (pro HAV), Po|fffd|izovac|fffd| cena (pro GAP)
Public P_0418PrP As Byte 'Odpo|fffd|et DPH
Public P_0501POV As Byte 'POV limit pln|fffd|n|fffd|
Public P_0502POV As Byte 'Koeficient speci|fffd|ln|fffd|ho provozu
Public P_0503POV As Byte 'Ro|fffd|n|fffd| pojistn|fffd| - z|fffd|kladn|fffd|
Public P_0504POV As Byte 'Ro|fffd|n|fffd| pojistn|fffd| - po slev|fffd|
Public P_0601HAV As Byte 'Rozsah poji|fffd|t|fffd|n|fffd|
Public P_0602HAV As Byte 'Nestandardn|fffd| rizika - provoz
Public P_0603HAV As Byte '|fffd|zemn|fffd| rozsah
Public P_0604HAV As Byte 'Spolu|fffd||fffd|ast
Public P_0605HAV As Byte 'Ro|fffd|n|fffd| pojistn|fffd| - z|fffd|kladn|fffd|
Public P_0606HAV As Byte 'Ro|fffd|n|fffd| pojistn|fffd| - po slev|fffd|
Public P_0701PSk As Byte 'Limit pln|fffd|n|fffd|
Public P_0702PSk As Byte 'Ro|fffd|n|fffd| pojistn|fffd| - z|fffd|kladn|fffd|
Public P_0801UPO As Byte 'Pojistn|fffd| |fffd||fffd|stka
Public P_0802UPO As Byte 'Nestandardn|fffd| rizika - provoz
Public P_0803UPO As Byte 'Ro|fffd|n|fffd| pojistn|fffd| - z|fffd|kladn|fffd|
Public P_0901PZa As Byte 'Limit pln|fffd|n|fffd|
Public P_0902PZa As Byte 'Ro|fffd|n|fffd| pojistn|fffd| - z|fffd|kladn|fffd|
Public P_1001PNV As Byte 'Limit pln|fffd|n|fffd|
Public P_1002PNV As Byte 'Ro|fffd|n|fffd| pojistn|fffd| - z|fffd|kladn|fffd|
Public P_1101PAs As Byte 'Rozsah asistence
Public P_1102PAs As Byte 'Ro|fffd|n|fffd| pojistn|fffd| - z|fffd|kladn|fffd|
Public P_1103PAs As Byte 'Ro|fffd|n|fffd| pojistn|fffd| - po slev|fffd|
Public P_1201PPR As Byte 'Limit pln|fffd|n|fffd|
Public P_1202PPR As Byte 'Ro|fffd|n|fffd| pojistn|fffd| - z|fffd|kladn|fffd|
Public P_1301PLi As Byte 'P|fffd||fffd|m|fffd| likvidace
Public P_1302PLi As Byte 'Ro|fffd|n|fffd| pojistn|fffd| - z|fffd|kladn|fffd|
Public P_1401StP As Byte 'Druh (ST1, ST2)
Public P_1402StP As Byte 'Kategorie pro ST2
Public P_1403StP As Byte 'Spolu|fffd||fffd|ast pro ST2
Public P_1404StP As Byte 'Nestandardn|fffd| rizika - provoz
Public P_1405StP As Byte 'Ro|fffd|n|fffd| pojistn|fffd| - z|fffd|kladn|fffd|
Public P_1406StP As Byte 'Ro|fffd|n|fffd| pojistn|fffd| - po slev|fffd|
Public P_1501GAP As Byte 'Prim|fffd|rn|fffd| pojistitel
Public P_1502GAP As Byte 'Spolu|fffd||fffd|ast prim|fffd|rn|fffd|ho poji|fffd|t|fffd|n|fffd|
Public P_1503GAP As Byte 'Ro|fffd|n|fffd| pojistn|fffd| - z|fffd|kladn|fffd|
Public P_1504GAP As Byte 'Ro|fffd|n|fffd| pojistn|fffd| - po slev|fffd|
Public P_1601Kal As Byte 'Ro|fffd|n|fffd| pojistn|fffd| - z|fffd|kladn|fffd|
Public P_1602Kal As Byte 'Ro|fffd|n|fffd| pojistn|fffd| - po slev|fffd|
Public P_1603Kal As Byte 'Lh|fffd|tn|fffd| pojistn|fffd| - po slev|fffd|
Public P_1701Gol As Byte 'HAV sazby pro Golem
Public P_1702Gol As Byte 'POV pojistn|fffd| pro Golem
Public P_1703Gol As Byte 'POV minpoj pro Golem

Sub Zaklad(Optional Nic As Boolean)
 Dim Bunka As Range, Sloupec As Byte

 Set Sesit = ActiveWorkbook
 Set Nastav = Sesit.Worksheets("nastaveni")
 Set Data = Sesit.Worksheets("data")
 PC_hlas = 0
 P_Bez_ZK = True
 Call Zaklad2
 With Nastav
  For Each Bunka In .Range(.Cells(11, C_Sl_kod).Address & ":" & .Cells(31, C_Sl_kod).End(xlDown).Address)
   Select Case Bunka.Row
    Case 11 To 29: Sloupec = Bunka.Row - 10
    Case 31 To 129: Sloupec = Bunka.Row - 30
   End Select
   Select Case Bunka.Value
    'hlavicka
    Case "hl01": P_hl01_poj_naz = Sloupec
    Case "hl02": P_hl02_poj_ico = Sloupec
    Case "hl03": P_hl03_cis_hip = Sloupec
    Case "hl04": P_hl04_typ_flo = Sloupec
    Case "hl05": P_hl05_frek_pl = Sloupec
    Case "hl06": P_hl06_sle_pov = Sloupec
    Case "hl07": P_hl07_sle_hav = Sloupec
    Case "hl08": P_hl08_sle_pas = Sloupec
    Case "hl09": P_hl09_sle_stp = Sloupec
    Case "hl10": P_hl10_sle_gap = Sloupec
    Case "hl11": P_hl11_dat_sjp = Sloupec
    Case "hl12": P_hl12_dat_poc = Sloupec
    'data
    Case "0001": P_0001PCh = Sloupec
    Case "0101": P_0101Sml = Sloupec
    Case "0102": P_0102Sml = Sloupec
    Case "0103": P_0103Sml = Sloupec
    Case "0104": P_0104Sml = Sloupec
    Case "0105": P_0105Sml = Sloupec
    Case "0201": P_0201Drz = Sloupec
    Case "0202": P_0202Drz = Sloupec
    Case "0203": P_0203Drz = Sloupec
    Case "0204": P_0204Drz = Sloupec
    Case "0205": P_0205Drz = Sloupec
    Case "0206": P_0206Drz = Sloupec
    Case "0207": P_0207Drz = Sloupec
    Case "0208": P_0208Drz = Sloupec
    Case "0301": P_0301Vla = Sloupec
    Case "0302": P_0302Vla = Sloupec
    Case "0303": P_0303Vla = Sloupec
    Case "0304": P_0304Vla = Sloupec
    Case "0305": P_0305Vla = Sloupec
    Case "0306": P_0306Vla = Sloupec
    Case "0307": P_0307Vla = Sloupec
    Case "0308": P_0308Vla = Sloupec
    Case "0401": P_0401PrP = Sloupec
    Case "0402": P_0402PrP = Sloupec
    Case "0403": P_0403PrP = Sloupec
    Case "0404": P_0404PrP = Sloupec
    Case "0405": P_0405PrP = Sloupec
    Case "0406": P_0406PrP = Sloupec
    Case "0407": P_0407PrP = Sloupec
    Case "0408": P_0408PrP = Sloupec
    Case "0409": P_0409PrP = Sloupec
    Case "0410": P_0410PrP = Sloupec
    Case "0411": P_0411PrP = Sloupec
    Case "0412": P_0412PrP = Sloupec
    Case "0413": P_0413PrP = Sloupec
    Case "0414": P_0414PrP = Sloupec
    Case "0415": P_0415PrP = Sloupec
    Case "0416": P_0416PrP = Sloupec
    Case "0417": P_0417PrP = Sloupec
    Case "0418": P_0418PrP = Sloupec
    Case "0501": P_0501POV = Sloupec
    Case "0502": P_0502POV = Sloupec
    Case "0503": P_0503POV = Sloupec
    Case "0504": P_0504POV = Sloupec
    Case "0601": P_0601HAV = Sloupec
    Case "0602": P_0602HAV = Sloupec
    Case "0603": P_0603HAV = Sloupec
    Case "0604": P_0604HAV = Sloupec
    Case "0605": P_0605HAV = Sloupec
    Case "0606": P_0606HAV = Sloupec
    Case "0701": P_0701PSk = Sloupec
    Case "0702": P_0702PSk = Sloupec
    Case "0801": P_0801UPO = Sloupec
    Case "0802": P_0802UPO = Sloupec
    Case "0803": P_0803UPO = Sloupec
    Case "0901": P_0901PZa = Sloupec
    Case "0902": P_0902PZa = Sloupec
    Case "1001": P_1001PNV = Sloupec
    Case "1002": P_1002PNV = Sloupec
    Case "1101": P_1101PAs = Sloupec
    Case "1102": P_1102PAs = Sloupec
    Case "1103": P_1103PAs = Sloupec
    Case "1201": P_1201PPR = Sloupec
    Case "1202": P_1202PPR = Sloupec
    Case "1301": P_1301PLi = Sloupec
    Case "1302": P_1302PLi = Sloupec
    Case "1401": P_1401StP = Sloupec
    Case "1402": P_1402StP = Sloupec
    Case "1403": P_1403StP = Sloupec
    Case "1404": P_1404StP = Sloupec
    Case "1405": P_1405StP = Sloupec
    Case "1406": P_1406StP = Sloupec
    Case "1501": P_1501GAP = Sloupec
    Case "1502": P_1502GAP = Sloupec
    Case "1503": P_1503GAP = Sloupec
    Case "1504": P_1504GAP = Sloupec
    Case "1601": P_1601Kal = Sloupec
    Case "1602": P_1602Kal = Sloupec
    Case "1603": P_1603Kal = Sloupec
    Case "1701": P_1701Gol = Sloupec
    Case "1702": P_1702Gol = Sloupec
    Case "1703": P_1703Gol = Sloupec
   End Select
  Next Bunka
  Select Case Kalkul
   Case 0, 1
    P_hk02_poj_ico = P_hl02_poj_ico
    P_hk05_frek_pl = P_hl05_frek_pl
    P_hk06_sle_pov = P_hl06_sle_pov
    P_hk07_sle_hav = P_hl07_sle_hav
    P_hk08_sle_pas = P_hl08_sle_pas
    P_hk09_sle_stp = P_hl09_sle_stp
    P_hk10_sle_gap = P_hl10_sle_gap
    P_hk12_dat_poc = P_hl12_dat_poc
   Case 2
    P_hk02_poj_ico = P_0401PrP
    P_hk05_frek_pl = P_0104Sml
    P_hk06_sle_pov = P_0402PrP
    P_hk07_sle_hav = P_0403PrP
    P_hk08_sle_pas = P_0404PrP
    P_hk09_sle_stp = P_0405PrP
    P_hk10_sle_gap = P_0406PrP
    P_hk12_dat_poc = P_0407PrP
   Case 3
    P_hk02_poj_ico = P_0401PrP
    P_hk05_frek_pl = P_0104Sml
    P_hk06_sle_pov = P_0403PrP
    P_hk07_sle_hav = P_0404PrP
    P_hk08_sle_pas = P_0405PrP
    P_hk09_sle_stp = P_0406PrP
    P_hk10_sle_gap = P_0407PrP
    P_hk12_dat_poc = P_0408PrP
  End Select
 End With
End Sub
Sub Zaklad2(Optional Nic As Boolean)
 Call Test_funkcnosti
 With Nastav
  P_Max_poj = .Cells(2, C_Sl_kod).Value
  P_Pocet_sloupcu = .Cells(3, C_Sl_kod).Value
  P_Pocatek_dat_r = .Cells(4, C_Sl_kod).Value
  P_Pocatek_dat_s = .Cells(5, C_Sl_kod).Value
  P_Pocatek_hla_r = .Cells(6, C_Sl_kod).Value
  P_Web_test = IIf(.Cells(7, C_Sl_kod).Value = "A", True, False)
  Kalkul = .Cells(8, C_Sl_kod).Value
  P_Anon = IIf(.Cells(9, C_Sl_kod).Value = "A", True, False)
 End With
End Sub
Attribute VB_Name = "M_Menu"
Option Explicit
Sub AddMenu(Optional Nic As Boolean)
 Dim cbMenuBar As CommandBar, cbpNewMenu As CommandBarPopup
 Set cbMenuBar = CommandBars("Worksheet Menu Bar")

 Call Smaz_menu
 Call Test_funkcnosti

'vlozim novou poluzku do hlavniho menu a nastavim promenou noveho menu
 Set cbpNewMenu = cbMenuBar.Controls.Add(Type:=msoControlPopup, Temporary:=True)

'nastavim nadpis nove polozky
 With cbpNewMenu
  .Caption = Sazebnik("TYP_DS", 1) & " Flotily"

  With .Controls.Add(Type:=msoControlPopup)
   If Kalkul = 0 Then
    .Caption = "P|fffd|epnout do kalkulace"
   Else
    .Caption = "Kalkulace vozidel"
   End If

'Menu kontrol a tisku
   If Kalkul > 0 Then
    With .Controls.Add(Type:=msoControlButton)
     .Caption = "&Form|fffd|tov|fffd|n|fffd| a kontola dat"
     .OnAction = "Format_kontola"
    End With
    With .Controls.Add(Type:=msoControlButton)
     .Caption = "&Generovat kalkulaci"
     .OnAction = "Sestava_smluv_kalkul_menu"
    End With
   End If

'Menu vzhledu
   With .Controls.Add(Type:=msoControlPopup)
    .Caption = "Vzhled - viditelnost sloupc|fffd|"
    With .Controls.Add(Type:=msoControlButton)
     .Caption = "|fffd||fffd|dn|fffd| skryt|fffd| sl. - klasick|fffd| DS"
     .OnAction = "Vzhled_kl"
    End With
    With .Controls.Add(Type:=msoControlButton)
     .Caption = "Skr|fffd|t|fffd| sl. - smlouva a|fffd| vlastn|fffd|k"
     .OnAction = "Vzhled_sv"
    End With
    With .Controls.Add(Type:=msoControlButton)
     .Caption = "Pouze sazbotvorn|fffd| a kalkula|fffd|n|fffd| sl."
     .OnAction = "Vzhled_sp"
    End With
   End With
  End With
  
  If Kalkul > 0 Then
   With .Controls.Add(Type:=msoControlButton)
    .Caption = "P|fffd|epnout do DS"
    .OnAction = "Stav_kalkul"
   End With
  Else
   With .Controls.Add(Type:=msoControlPopup)
    .Caption = "Datov|fffd| sb|fffd|ra|fffd|"

'Menu kontrol
    With .Controls.Add(Type:=msoControlButton)
     .Caption = "Form|fffd|tov|fffd|n|fffd| a kontola dat"
     .OnAction = "Format_kontola"
    End With
    With .Controls.Add(Type:=msoControlButton)
     .Caption = "Kontrola hlavi|fffd|ky"
     .OnAction = "Kontrola_IK"
    End With

'Menu tisky
    With .Controls.Add(Type:=msoControlPopup)
     .Caption = "Tisk"
     If P_Web_prihlasen Then
      With .Controls.Add(Type:=msoControlButton)
       .Caption = "Sestava smluv"
       .OnAction = "Sestava_smluv_menu"
      End With
     End If
     With .Controls.Add(Type:=msoControlButton)
      .Caption = "Zelen|fffd| karty"
      .OnAction = "Zelene_karty_menu"
     End With
    End With
   End With
  End If

'Menu vymazani
  With .Controls.Add(Type:=msoControlPopup)
   .Caption = "Vymazat obsah DS"
   With .Controls.Add(Type:=msoControlButton)
    .Caption = "Vymazat hlavi|fffd|ku"
    .OnAction = "Vymazat_hl"
   End With
   With .Controls.Add(Type:=msoControlButton)
    .Caption = "Vymazat pojistky"
    .OnAction = "Vymazat_poj"
   End With
   If Sesit.Worksheets("Zm|fffd|ny").Visible Then
    With .Controls.Add(Type:=msoControlButton)
     .Caption = "Vymazat zm|fffd|ny"
     .OnAction = "Vymazat_zm"
    End With
   End If
   If Sesit.Worksheets("Odhl|fffd|ky").Visible Then
    With .Controls.Add(Type:=msoControlButton)
     .Caption = "Vymazat odhl|fffd|ky"
     .OnAction = "Vymazat_of"
    End With
   End If
   With .Controls.Add(Type:=msoControlButton)
    .Caption = "Vymazat v|fffd|e"
    .OnAction = "Vymazat_vse"
   End With
  End With

'Menu admina
  If P_Web_prava = 3 Then
   With .Controls.Add(Type:=msoControlPopup)
    .Caption = "Administrace"
    With .Controls.Add(Type:=msoControlButton)
     .Caption = "Upravit n|fffd|pov|fffd|du"
     .OnAction = "Upravit_napovedu"
    End With
    With .Controls.Add(Type:=msoControlButton)
     .Caption = "Upravit sazebn|fffd|k"
     .OnAction = "Upravit_sazebnik"
    End With
    With .Controls.Add(Type:=msoControlButton)
     .Caption = "Upravit nastaven|fffd| DS"
     .OnAction = "Upravit_nastaveni_ds"
    End With
    With .Controls.Add(Type:=msoControlButton)
     .Caption = "Zobrazit v|fffd|echny listy"
     .OnAction = "Odemkni_zobraz_menu"
    End With
   End With
  End If

'Menu prihlaseni
  If P_Web_prihlasen Then
   With .Controls.Add(Type:=msoControlButton)
    .Caption = "Odhl|fffd|sit"
    .OnAction = "Odhlasit"
   End With
  Else
   With .Controls.Add(Type:=msoControlButton)
    .Caption = "P|fffd|ihl|fffd|sit se do SPS (" & IIf(P_Web_test, "test", "ostr|fffd|") & ")"
    .OnAction = "Prihlasit"
   End With
  End If
 End With
 Set cbMenuBar = Nothing
 Set cbpNewMenu = Nothing
 Exit Sub
End Sub
Private Sub Vzhled_kl()
 Call Stav_kalkul(1)
End Sub
Private Sub Vzhled_sv()
 Call Stav_kalkul(2)
End Sub
Private Sub Vzhled_sp()
 Call Stav_kalkul(3)
End Sub
Private Sub Format_kontola()
 P_Zmenen = False
 Proces = 0: F_Postup.Show
End Sub
Private Sub Zelene_karty_menu()
 P_Bez_ZK = False
 Proces = 1: F_Postup.Show
 P_Bez_ZK = True
End Sub
Private Sub Sestava_smluv_menu()
 Proces = 2: F_Postup.Show
End Sub
Private Sub Sestava_smluv_kalkul_menu()
 Proces = 3: F_Postup.Show
End Sub
Private Sub Vymazat(Kde_list As String, Adresa As String, Hlaseni As String, Optional S_hlasenim As Boolean = True)
 Set List = ActiveSheet
 Call Test_funkcnosti
 With Sesit.Worksheets(Kde_list)
  .Select
  If S_hlasenim Then
   If MsgBox("Budou smaz|fffd|ny ve|fffd|ker|fffd| zadan|fffd| informace" & Hlaseni & ", chcete opravdu tuto akci prov|fffd|st?", vbCritical + vbYesNo + vbDefaultButton2) = vbNo Then Exit Sub
  End If
  Application.ScreenUpdating = False
  Application.EnableEvents = False
  If Kde_list = Data.Name Then
   .Unprotect C_Heslo_sesitu
   If .Range(Adresa).Row = P_Pocatek_dat_r Then
    Do_radku = .Cells.SpecialCells(xlLastCell).Row
    .Rows(P_Pocatek_dat_r - 1).ClearContents
    .Range(Adresa, .Rows(Do_radku).Address).Delete
    Call Format_pojistek(1)
   Else
    .Range(Adresa).ClearContents
    .Range(Adresa).Locked = False
    Call Format_hlavicky
   End If
   Call Format_sloupcu
   .Cells.EntireRow.AutoFit
   Application.ScreenUpdating = True
   .Cells(1, 1).Select
   Call Zamkni_list(.Name)
  Else
   .Cells(4, 4).ClearContents
   .Range(Adresa).ClearContents
  End If
  List.Select
  Application.EnableEvents = True
  Application.ScreenUpdating = True
 End With
End Sub
Private Sub Vymazat_hl(Optional S_hlasenim As Boolean = True)
 Call Test_funkcnosti
 With Data
  Call Vymazat(.Name, .Range(.Cells(P_Pocatek_hla_r, P_hl01_poj_naz).Address, .Cells(P_Pocatek_hla_r, P_hk12_dat_poc).Address).Address, " z hlavi|fffd|ky flotily", S_hlasenim)
 End With
End Sub
Private Sub Vymazat_poj(Optional S_hlasenim As Boolean = True)
 Call Test_funkcnosti
 With Data
  Call Vymazat(.Name, .Cells(P_Pocatek_dat_r, 1).Address, " o pojistk|fffd|ch", S_hlasenim)
 End With
End Sub
Private Sub Vymazat_zm(Optional S_hlasenim As Boolean = True)
 Call Test_funkcnosti
 With Sesit.Worksheets("Zm|fffd|ny")
  .Unprotect C_Heslo_sesitu
  Call Vymazat(.Name, "A8:V" & .Cells.SpecialCells(xlLastCell).Row, " na listu Zm|fffd|ny", S_hlasenim)
  Call Zamkni_list(.Name)
 End With
End Sub
Private Sub Vymazat_of(Optional S_hlasenim As Boolean = True)
 Call Test_funkcnosti
 With Sesit.Worksheets("Odhl|fffd|ky")
  .Unprotect C_Heslo_sesitu
  Call Vymazat(.Name, "A8:G" & .Cells.SpecialCells(xlLastCell).Row, " na listu Odhl|fffd|ky vozidel", S_hlasenim)
  Call Uprav_storna
 End With
End Sub
Private Sub Vymazat_vse()
 Call Test_funkcnosti
 Set List = ActiveSheet
 Call Vymazat_hl
 Call Vymazat_poj
 If Sesit.Worksheets("Zm|fffd|ny").Visible Then Call Vymazat_zm
 If Sesit.Worksheets("Odhl|fffd|ky").Visible Then Call Vymazat_of
 Nastav.Cells(9, C_Sl_kod).Value = "N"
 Call GDPR(False)
 With Sesit.Worksheets("N|fffd|pov|fffd|da")
  .Unprotect C_Heslo_sesitu
  .Cells(1, 1).Value = "N"
  Call Zamkni_list(.Name)
 End With
 List.Select
 Set List = Nothing
End Sub
Private Sub Upravit_napovedu()
 Call Zobraz_list("napoveda", True, True)
End Sub
Private Sub Upravit_sazebnik()
 Call Zobraz_list("sazebnik", True, True)
End Sub
Private Sub Upravit_nastaveni_ds()
 Call Zobraz_list("nastaveni", True, True)
End Sub
Sub Odhlasit(Optional Nic As Boolean)
 Application.ScreenUpdating = False
 P_Web_prihlasen = False
 If P_Web_prava = 3 Then Call Ulozit_verzi
 P_Web_prava = 0
 P_Web_login = ""
 P_Web_heslo = ""
 P_Web_kosilka = False
 Call GDPR(True)
 Call AddMenu
 Call Zamkni_sktyj_vse
 Application.ScreenUpdating = True
End Sub
Private Sub Prihlasit()
 PouzeLogin = True
 F_Prihlaseni_do_SPS.Show
End Sub
Function Kontrola_IK(Optional Hlasit As Boolean = True) As Boolean
 Dim Bunka As Range, Funkce As Long, Sloupec As Byte

 Kontrola_IK = True
 If Nacteni_ze_SPS(False) Then
  Application.ScreenUpdating = False
  Application.EnableEvents = False
  With Data
   .Unprotect C_Heslo_sesitu
   Call Format_hlavicky
   With Nastav
    For Each Bunka In .Range(.Cells(11, C_Sl_kod).Address & ":" & .Cells(11, C_Sl_kod).End(xlDown).Address)
     For Funkce = C_Sl_fce01 To C_Sl_fcexx
      If .Cells(Bunka.Row, Funkce).Value <> "" Then
       If Not Uni_fce(Data.Cells(P_Pocatek_hla_r, Bunka.Row - 10), Bunka.Offset(0, 3).Value, Funkce - C_Sl_fce01 + 1, "hl_" & Bunka.Offset(0, -1).Value, .Cells(Bunka.Row, Funkce).Value) Then Kontrola_IK = False
      End If
     Next Funkce
    Next Bunka
   End With
   Call Format_sloupcu
   .Cells.EntireRow.AutoFit
   Call Zamkni_list(.Name)
  End With
  Application.EnableEvents = True
  Application.ScreenUpdating = True
  If Kontrola_IK Then
   If Hlasit Then MsgBox "Ov|fffd||fffd|en|fffd| dle IK - OK"
  Else
   MsgBox "Ov|fffd||fffd|en|fffd| dle IK - zji|fffd|t|fffd|ny rozd|fffd|ly", vbExclamation
  End If
 End If
End Function
Private Sub Odemkni_zobraz_menu()
 Application.ScreenUpdating = False
 Call Odemkni_zobraz_vse
 Application.ScreenUpdating = True
End Sub

Attribute VB_Name = "M_Sestava_Smluv"
Option Explicit
Sub Sestava_smluv(Optional Nic As Boolean)
 Dim WBVystup As Workbook, VList As Worksheet, Do_radku As Long, Pocet_smluv As Long, Sloupec As Long, Radek1 As Long, Radek2 As Long, Zalomeni As Byte, Konec1 As Byte, Konec2 As Byte, Konec3 As Byte
 Const HlR01 As Byte = 6, HlR02 As Byte = 7, HlR03 As Byte = 8, HlR04 As Byte = 9, HlR05 As Byte = 10, HlR06 As Byte = 11

 Call Aktualizovat_proces("Generuji sestavu ...")
 
 Application.ScreenUpdating = False
 Set WBVystup = Workbooks.Add
 Set VList = WBVystup.Worksheets(1)
 VList.Name = "Sestava"
 Application.DisplayAlerts = False
 If Application.Version <> "12.0" Then
  For Each List In WBVystup.Worksheets
   If List.Name <> VList.Name Then List.Delete
  Next List
 End If
 Application.DisplayAlerts = True

 Do_radku = Rozah_listu(Sesit.Name, Data.Name)
 Pocet_smluv = Do_radku - P_Pocatek_dat_r + 1
 Procenta = 1 / (Pocet_smluv + 2)

 Set List = VList
 With VList
  Sloupec = 1
  Call Sloucit(HlR01, Sloupec, "P." & vbLf & "|fffd|.", 4, 0)
  Sloupec = Sloupec + 1
  Call Sloucit(HlR01, Sloupec, "|fffd||fffd|slo" & vbLf & "pojistn|fffd|" & vbLf & "smlouvy", 4, 0)
  .Cells(HlR06, Sloupec).Value = Pocet_smluv
  Sloupec = Sloupec + 1
  .Cells(HlR01, Sloupec).Value = "VLASTN|fffd|K"
  Call Sloucit(HlR02, Sloupec, "P|fffd||fffd|jmen|fffd|/N|fffd|zev" & vbLf & "spole|fffd|nosti", 1, 0)
  Call Sloucit(HlR04, Sloupec, "R|fffd|/I|fffd|", 1, 0)
  Sloupec = Sloupec + 1
  .Cells(HlR01, Sloupec).Value = "DR|fffd|ITEL/PROVOZOVATEL"
  Call Sloucit(HlR02, Sloupec, "P|fffd||fffd|jmen|fffd|/N|fffd|zev" & vbLf & "spole|fffd|nosti", 1, 0)
  Call Sloucit(HlR04, Sloupec, "R|fffd|/I|fffd|", 1, 0)
  Sloupec = Sloupec + 1
  Call Sloucit(HlR01, Sloupec, "|fffd|daje o vozidle", 0, 4)
  Call Sloucit(HlR02, Sloupec, "Zna|fffd|ka", 1, 0)
  Call Sloucit(HlR04, Sloupec, "Typ", 1, 0)
  Sloupec = Sloupec + 1
  Call Sloucit(HlR02, Sloupec, "RZ", 1, 0)
  Call Sloucit(HlR04, Sloupec, "VIN", 1, 0)
  Sloupec = Sloupec + 1
  Call Sloucit(HlR02, Sloupec, "Druh", 1, 0)
  Call Sloucit(HlR04, Sloupec, "|fffd||fffd|slo TP", 1, 0)
  Sloupec = Sloupec + 1
  Call Sloucit(HlR02, Sloupec, "Objem" & vbLf & "(ccm)", 1, 0)
  Call Sloucit(HlR04, Sloupec, "Rok" & vbLf & "v|fffd|roby", 1, 0)
  Sloupec = Sloupec + 1
  Call Sloucit(HlR02, Sloupec, "Hmotnost" & vbLf & "(kg)", 1, 0)
  Call Sloucit(HlR04, Sloupec, "Po|fffd|et" & vbLf & "m|fffd|st", 1, 0)
  Sloupec = Sloupec + 1
  Call Sloucit(HlR01, Sloupec, "Po|fffd||fffd|tek" & vbLf & "poji|fffd|t|fffd|n|fffd|", 4, 0)
  Sloupec = Sloupec + 1
  Call Sloucit(HlR01, Sloupec, "POV", 0, 1)
  Call Sloucit(HlR02, Sloupec, "Limit" & vbLf & "pln|fffd|n|fffd|", 1, 0)
  Call Sloucit(HlR04, Sloupec, "Druh" & vbLf & "provozu", 1, 0)
  Sloupec = Sloupec + 1
  Call Sloucit(HlR02, Sloupec, "Ro|fffd|n|fffd|" & vbLf & "pojistn|fffd|" & vbLf & "z|fffd|kladn|fffd|", 3, 0)
  Call Sloucit(HlR06, Sloupec - 1, Data.Cells(P_Pocatek_dat_r - 1, P_0503POV).Value, 0, 1)
  Sloupec = Sloupec + 1
  Call Sloucit(HlR01, Sloupec, "HAV", 0, 2)
  Call Sloucit(HlR02, Sloupec, "Rozsah" & vbLf & "poj.", 1, 0)
  Call Sloucit(HlR04, Sloupec, "Spolu|fffd||fffd|ast", 1, 0)
  Sloupec = Sloupec + 1
  Call Sloucit(HlR02, Sloupec, "Poj. |fffd||fffd|stka" & vbLf & "vozidla", 1, 0)
  Call Sloucit(HlR04, Sloupec, "Druh" & vbLf & "provozu", 1, 0)
  Sloupec = Sloupec + 1
  Call Sloucit(HlR02, Sloupec, "|fffd|zemn|fffd|" & vbLf & "rozsah", 1, 0)
  Call Sloucit(HlR04, Sloupec, "Ro|fffd|n|fffd| poj." & vbLf & "z|fffd|kladn|fffd|", 1, 0)
  Call Sloucit(HlR06, Sloupec - 2, Data.Cells(P_Pocatek_dat_r - 1, P_0605HAV).Value, 0, 2)
  Sloupec = Sloupec + 1
  .Cells(HlR01, Sloupec).Value = "SKLA"
  Call Sloucit(HlR02, Sloupec, "Limit" & vbLf & "pln|fffd|n|fffd|", 1, 0)
  Call Sloucit(HlR04, Sloupec, "Ro|fffd|n|fffd| poj." & vbLf & "z|fffd|kladn|fffd|", 1, 0)
  .Cells(HlR06, Sloupec).Value = Data.Cells(P_Pocatek_dat_r - 1, P_0702PSk).Value
  Sloupec = Sloupec + 1
  Call Sloucit(HlR01, Sloupec, "|fffd|RAZ", 0, 1)
  Call Sloucit(HlR02, Sloupec, "Pojistn|fffd|" & vbLf & "|fffd||fffd|stky v K|fffd|", 1, 0)
  Call Sloucit(HlR04, Sloupec, "Druh" & vbLf & "provozu", 1, 0)
  Sloupec = Sloupec + 1
  Call Sloucit(HlR02, Sloupec, "Ro|fffd|n|fffd|" & vbLf & "pojistn|fffd|" & vbLf & "z|fffd|kladn|fffd|", 3, 0)
  Call Sloucit(HlR06, Sloupec - 1, Data.Cells(P_Pocatek_dat_r - 1, P_0803UPO).Value, 0, 1)
  Sloupec = Sloupec + 1
  .Cells(HlR01, Sloupec).Value = "ZAVAZADLA"
  Call Sloucit(HlR02, Sloupec, "Limit" & vbLf & "pln|fffd|n|fffd|", 1, 0)
  Call Sloucit(HlR04, Sloupec, "Ro|fffd|n|fffd| poj." & vbLf & "z|fffd|kladn|fffd|", 1, 0)
  .Cells(HlR06, Sloupec).Value = Data.Cells(P_Pocatek_dat_r - 1, P_0902PZa).Value
  Sloupec = Sloupec + 1
  .Cells(HlR01, Sloupec).Value = "N|fffd|HRADN|fffd| VOZIDLO"
  Call Sloucit(HlR02, Sloupec, "Limit" & vbLf & "pln|fffd|n|fffd|", 1, 0)
  Call Sloucit(HlR04, Sloupec, "Ro|fffd|n|fffd| poj." & vbLf & "z|fffd|kladn|fffd|", 1, 0)
  .Cells(HlR06, Sloupec).Value = Data.Cells(P_Pocatek_dat_r - 1, P_1002PNV).Value
  Sloupec = Sloupec + 1
  .Cells(HlR01, Sloupec).Value = "ASISTENCE"
  Call Sloucit(HlR02, Sloupec, "Rozsah", 1, 0)
  Call Sloucit(HlR04, Sloupec, "Ro|fffd|n|fffd| poj." & vbLf & "z|fffd|kladn|fffd|", 1, 0)
  .Cells(HlR06, Sloupec).Value = Data.Cells(P_Pocatek_dat_r - 1, P_1102PAs).Value
  Sloupec = Sloupec + 1
  .Cells(HlR01, Sloupec).Value = "P|fffd||fffd|RODN|fffd| RIZIKA"
  Call Sloucit(HlR02, Sloupec, "Limit" & vbLf & "pln|fffd|n|fffd|", 1, 0)
  Call Sloucit(HlR04, Sloupec, "Ro|fffd|n|fffd| poj." & vbLf & "z|fffd|kladn|fffd|", 1, 0)
  .Cells(HlR06, Sloupec).Value = Data.Cells(P_Pocatek_dat_r - 1, P_1202PPR).Value
  Sloupec = Sloupec + 1
  .Cells(HlR01, Sloupec).Value = "P|fffd||fffd|M|fffd| LIKVIDACE"
  Call Sloucit(HlR02, Sloupec, "St|fffd|et+n|fffd|jem" & vbLf & "vozidla", 1, 0)
  Call Sloucit(HlR04, Sloupec, "Ro|fffd|n|fffd| poj." & vbLf & "z|fffd|kladn|fffd|", 1, 0)
  .Cells(HlR06, Sloupec).Value = Data.Cells(P_Pocatek_dat_r - 1, P_1302PLi).Value
  Sloupec = Sloupec + 1
  Call Sloucit(HlR01, Sloupec, "STROJN|fffd| POJI|fffd|T|fffd|N|fffd|", 0, 2)
  Call Sloucit(HlR02, Sloupec, "Druh", 1, 0)
  Call Sloucit(HlR04, Sloupec, "Kategorie" & vbLf & "pro ST2", 1, 0)
  Sloupec = Sloupec + 1
  Call Sloucit(HlR02, Sloupec, "Spolu|fffd||fffd|ast" & vbLf & "pro ST2", 1, 0)
  Call Sloucit(HlR04, Sloupec, "Druh" & vbLf & "provozu", 1, 0)
  Sloupec = Sloupec + 1
  Call Sloucit(HlR02, Sloupec, "Ro|fffd|n|fffd|" & vbLf & "pojistn|fffd|" & vbLf & "z|fffd|kladn|fffd|", 3, 0)
  Call Sloucit(HlR06, Sloupec - 2, Data.Cells(P_Pocatek_dat_r - 1, P_1405StP).Value, 0, 2)
  Sloupec = Sloupec + 1
  .Cells(HlR01, Sloupec).Value = "GAP"
  Call Sloucit(HlR02, Sloupec, "Spolu|fffd||fffd|ast" & vbLf & "prim|fffd|rn|fffd|ho poj.", 1, 0)
  Call Sloucit(HlR04, Sloupec, "Ro|fffd|n|fffd| poj." & vbLf & "z|fffd|kladn|fffd|", 1, 0)
  .Cells(HlR06, Sloupec).Value = Data.Cells(P_Pocatek_dat_r - 1, P_1503GAP).Value
  Sloupec = Sloupec + 1
  Call Sloucit(HlR01, Sloupec, "Ro|fffd|n|fffd|" & vbLf & "z|fffd|kladn|fffd|" & vbLf & "pojistn|fffd|" & vbLf & "v|fffd|etn|fffd|" & vbLf & "p|fffd|ipoji|fffd|t|fffd|n|fffd|", 4, 0)
  .Cells(HlR06, Sloupec).Value = Data.Cells(P_Pocatek_dat_r - 1, P_1601Kal).Value
  Sloupec = Sloupec + 1
  Call Sloucit(HlR01, Sloupec, "Ro|fffd|n|fffd| poj." & vbLf & "v|fffd|etn|fffd|" & vbLf & "p|fffd|ipoji|fffd|t|fffd|n|fffd|" & vbLf & "po slev|fffd|/" & vbLf & "p|fffd|ir|fffd|ce", 4, 0)
  .Cells(HlR06, Sloupec).Value = Data.Cells(P_Pocatek_dat_r - 1, P_1602Kal).Value
  Sloupec = Sloupec + 1
  Call Sloucit(HlR01, Sloupec, "Lh|fffd|tn|fffd| poj." & vbLf & "v|fffd|etn|fffd|" & vbLf & "p|fffd|ipoji|fffd|t|fffd|n|fffd|" & vbLf & "po slev|fffd|/" & vbLf & "p|fffd|ir|fffd|ce", 4, 0)
  .Cells(HlR06, Sloupec).Value = Data.Cells(P_Pocatek_dat_r - 1, P_1603Kal).Value
  Sloupec = Sloupec + 1
  Call Sloucit(HlR01, Sloupec, "P." & vbLf & "|fffd|.", 4, 0)
  Sloupec = Sloupec + 1
  Call Sloucit(HlR01, Sloupec, "|fffd||fffd|slo" & vbLf & "pojistn|fffd|" & vbLf & "smlouvy", 4, 0)
  .Cells(HlR06, Sloupec).Value = Pocet_smluv

  Call Aktualizovat_postup
  Radek2 = P_Pocatek_dat_r
  Pocet_smluv = Pocet_smluv * 2 + HlR06
  .Range("A3:E4,A" & HlR01 & ":AF" & Pocet_smluv).Borders.LineStyle = xlContinuous
  For Radek1 = HlR06 + 1 To Pocet_smluv Step 2
   Sloupec = 1
   Call Sloucit(Radek1, Sloupec, (Radek1 - HlR06 - 1) / 2 + 1, 1, 0)
   Sloupec = Sloupec + 1
   Call Sloucit(Radek1, Sloupec, Data.Cells(Radek2, P_0101Sml).Value, 1, 0)
   Sloupec = Sloupec + 1
   .Cells(Radek1, Sloupec).Value = Trim(Data.Cells(Radek2, P_0302Vla).Value & " " & Data.Cells(Radek2, P_0303Vla).Value & " " & Data.Cells(Radek2, P_0304Vla).Value)
   .Cells(Radek1 + 1, Sloupec).Value = IIf(Len(Data.Cells(Radek2, P_0301Vla).Value) = 8, "I|fffd| ", "R|fffd| ") & Data.Cells(Radek2, P_0301Vla).Value
   Sloupec = Sloupec + 1
   .Cells(Radek1, Sloupec).Value = Trim(Data.Cells(Radek2, P_0202Drz).Value & " " & Data.Cells(Radek2, P_0203Drz).Value & " " & Data.Cells(Radek2, P_0204Drz).Value)
   .Cells(Radek1 + 1, Sloupec).Value = IIf(Len(Data.Cells(Radek2, P_0201Drz).Value) = 8, "I|fffd| ", "R|fffd| ") & Data.Cells(Radek2, P_0201Drz).Value
   Sloupec = Sloupec + 1
   .Cells(Radek1, Sloupec).Value = Data.Cells(Radek2, P_0405PrP).Value
   .Cells(Radek1 + 1, Sloupec).Value = Data.Cells(Radek2, P_0406PrP).Value
   Sloupec = Sloupec + 1
   .Cells(Radek1, Sloupec).Value = Data.Cells(Radek2, P_0401PrP).Value
   .Cells(Radek1 + 1, Sloupec).Value = "'" & Data.Cells(Radek2, P_0403PrP).Value
   Sloupec = Sloupec + 1
   .Cells(Radek1, Sloupec).Value = Data.Cells(Radek2, P_0404PrP).Value
   .Cells(Radek1 + 1, Sloupec).Value = Data.Cells(Radek2, P_0402PrP).Value
   Sloupec = Sloupec + 1
   .Cells(Radek1, Sloupec).Value = Data.Cells(Radek2, P_0409PrP).Value
   .Cells(Radek1 + 1, Sloupec).Value = Data.Cells(Radek2, P_0407PrP).Value
   Sloupec = Sloupec + 1
   .Cells(Radek1, Sloupec).Value = Data.Cells(Radek2, P_0410PrP).Value
   .Cells(Radek1 + 1, Sloupec).Value = Data.Cells(Radek2, P_0411PrP).Value
   Sloupec = Sloupec + 1
   Call Sloucit(Radek1, Sloupec, Data.Cells(Radek2, P_0104Sml).Value, 1, 0)
   Sloupec = Sloupec + 1
   Select Case Data.Cells(Radek2, P_0501POV).Value
    Case 35: .Cells(Radek1, Sloupec).Value = "35/35 mil.K|fffd|"
    Case 50: .Cells(Radek1, Sloupec).Value = "50/50 mil.K|fffd|"
    Case 100: .Cells(Radek1, Sloupec).Value = "100/100 mil.K|fffd|"
    Case 150: .Cells(Radek1, Sloupec).Value = "150/150 mil.K|fffd|"
    Case 200: .Cells(Radek1, Sloupec).Value = "200/200 mil.K|fffd|"
    Case 240: .Cells(Radek1, Sloupec).Value = "240/240 mil.K|fffd|"
   End Select
   .Cells(Radek1 + 1, Sloupec).Value = Preved(Data.Cells(Radek2, P_0502POV).Value)
   Sloupec = Sloupec + 1
   If P_Smlouva(Radek2).POV_RPZ <> "" Then Call Sloucit(Radek1, Sloupec, P_Smlouva(Radek2).POV_RPZ, 1, 0)
   Sloupec = Sloupec + 1
   Select Case Data.Cells(Radek2, P_0601HAV).Value
    Case "A": .Cells(Radek1, Sloupec).Value = "KASKO Hav|fffd|rie+|fffd|ivel+vandalismus+odcizen|fffd|"
    Case "H": .Cells(Radek1, Sloupec).Value = "KASKO Hav|fffd|rie+|fffd|ivel+vandalismus"
    Case "O": .Cells(Radek1, Sloupec).Value = "KASKO Odcizen|fffd|+|fffd|ivel"
    Case "T": .Cells(Radek1, Sloupec).Value = "TOTAL Hav|fffd|rie+|fffd|ivel+vandalismus+odcizen|fffd|"
   End Select
   Select Case Data.Cells(Radek2, P_0604HAV).Value
    Case 1: .Cells(Radek1 + 1, Sloupec).Value = "1%, min. 1 000,-K|fffd|"
    Case 5: .Cells(Radek1 + 1, Sloupec).Value = "5%, min. 5 000,-K|fffd|"
    Case 10: .Cells(Radek1 + 1, Sloupec).Value = "10%, min. 10 000,-K|fffd|"
    Case 20: .Cells(Radek1 + 1, Sloupec).Value = "20%, min. 20 000,-K|fffd|"
   End Select
   Sloupec = Sloupec + 1
   .Cells(Radek1, Sloupec).Value = Data.Cells(Radek2, P_0417PrP).Value
   .Cells(Radek1 + 1, Sloupec).Value = Preved(Data.Cells(Radek2, P_0602HAV).Value)
   Sloupec = Sloupec + 1
   .Cells(Radek1, Sloupec).Value = Data.Cells(Radek2, P_0603HAV).Value
   If P_Smlouva(Radek2).HAV_RPZ <> "" Then
    .Cells(Radek1 + 1, Sloupec).Value = P_Smlouva(Radek2).HAV_RPZ
   End If
   Sloupec = Sloupec + 1
   .Cells(Radek1, Sloupec).Value = Data.Cells(Radek2, P_0701PSk).Value
   If P_Smlouva(Radek2).PSk_RPZ <> "" Then .Cells(Radek1 + 1, Sloupec).Value = P_Smlouva(Radek2).PSk_RPZ
   Sloupec = Sloupec + 1
   Select Case Data.Cells(Radek2, P_0801UPO).Value
    Case 1: .Cells(Radek1, Sloupec).Value = "100 000/200 000/100/100"
    Case 2: .Cells(Radek1, Sloupec).Value = "200 000/400 000/200/200"
    Case 3: .Cells(Radek1, Sloupec).Value = "300 000/600 000/200/200"
    Case 4: .Cells(Radek1, Sloupec).Value = "400 000/800 000/200/200"
   End Select
   .Cells(Radek1 + 1, Sloupec).Value = Preved(Data.Cells(Radek2, P_0802UPO).Value)
   Sloupec = Sloupec + 1
   If P_Smlouva(Radek2).UPO_RPZ <> "" Then Call Sloucit(Radek1, Sloupec, P_Smlouva(Radek2).UPO_RPZ, 1, 0)
   Sloupec = Sloupec + 1
   .Cells(Radek1, Sloupec).Value = Data.Cells(Radek2, P_0901PZa).Value
   If P_Smlouva(Radek2).PZa_RPZ <> "" Then .Cells(Radek1 + 1, Sloupec).Value = P_Smlouva(Radek2).PZa_RPZ
   Sloupec = Sloupec + 1
   .Cells(Radek1, Sloupec).Value = Data.Cells(Radek2, P_1001PNV).Value
   If P_Smlouva(Radek2).PNV_RPZ <> "" Then .Cells(Radek1 + 1, Sloupec).Value = P_Smlouva(Radek2).PNV_RPZ
   Sloupec = Sloupec + 1
   Select Case Data.Cells(Radek2, P_1101PAs).Value
    Case "AP1": .Cells(Radek1, Sloupec).Value = "Asistence Plus 1x"
    Case "AP2": .Cells(Radek1, Sloupec).Value = "Asistence Plus 2x"
    Case "ACT": .Cells(Radek1, Sloupec).Value = "Asistence CAR/TIR+"
    Case "APV": .Cells(Radek1, Sloupec).Value = "Asistence p|fffd||fffd|pojn|fffd|ho vozidla"
    Case "ACAP1": .Cells(Radek1, Sloupec).Value = "Asistence Plus 1x a Asistence p|fffd||fffd|pojn|fffd|ho vozidla"
    Case "ACAP2": .Cells(Radek1, Sloupec).Value = "Asistence Plus 2x a Asistence p|fffd||fffd|pojn|fffd|ho vozidla"
    Case "ACTP": .Cells(Radek1, Sloupec).Value = "Asistence CAR/TIR+ a Asistence p|fffd||fffd|pojn|fffd|ho vozidla"
   End Select
   If P_Smlouva(Radek2).PAs_RPZ <> "" Then .Cells(Radek1 + 1, Sloupec).Value = P_Smlouva(Radek2).PAs_RPZ
   Sloupec = Sloupec + 1
   .Cells(Radek1, Sloupec).Value = Data.Cells(Radek2, P_1201PPR).Value
   If P_Smlouva(Radek2).PPR_RPZ <> "" Then .Cells(Radek1 + 1, Sloupec).Value = P_Smlouva(Radek2).PPR_RPZ
   Sloupec = Sloupec + 1
   If Data.Cells(Radek2, P_1301PLi).Value = "A" Then .Cells(Radek1, Sloupec).Value = "Ano"
   If P_Smlouva(Radek2).PLi_RPZ <> "" Then .Cells(Radek1 + 1, Sloupec).Value = P_Smlouva(Radek2).PLi_RPZ
   Sloupec = Sloupec + 1
   .Cells(Radek1, Sloupec).Value = Data.Cells(Radek2, P_1401StP).Value
   Select Case Data.Cells(Radek2, P_1402StP).Value
    Case 1: .Cells(Radek1 + 1, Sloupec).Value = "N|fffd|kladn|fffd| automobil se skl|fffd|p|fffd||fffd|kou nebo jinou n|fffd|stavbou mimo kat.2"
    Case 2: .Cells(Radek1 + 1, Sloupec).Value = "Autobagr, autoje|fffd||fffd|b, mix na beton"
    Case 3: .Cells(Radek1 + 1, Sloupec).Value = "Stavebn|fffd| stroj, skladov|fffd| a manipula|fffd|n|fffd| technika"
    Case 4: .Cells(Radek1 + 1, Sloupec).Value = "N|fffd|v|fffd|s nebo p|fffd||fffd|v|fffd|s se strojn|fffd| n|fffd|stavbou"
    Case 5: .Cells(Radek1 + 1, Sloupec).Value = "Traktor nebo jin|fffd| zem|fffd|d|fffd|lsk|fffd| technika mimo kombajn"
    Case 6: .Cells(Radek1 + 1, Sloupec).Value = "Kombajn"
   End Select
   Sloupec = Sloupec + 1
   Select Case Data.Cells(Radek2, P_1403StP).Value
    Case 5: .Cells(Radek1, Sloupec).Value = "5%, min. 5 000,-K|fffd|"
    Case 10: .Cells(Radek1, Sloupec).Value = "10%, min. 10 000,-K|fffd|"
    Case 20: .Cells(Radek1, Sloupec).Value = "20%, min. 20 000,-K|fffd|"
   End Select
   .Cells(Radek1 + 1, Sloupec).Value = Preved(Data.Cells(Radek2, P_1404StP).Value)
   Sloupec = Sloupec + 1
   If P_Smlouva(Radek2).StP_RPZ <> "" Then Call Sloucit(Radek1, Sloupec, P_Smlouva(Radek2).StP_RPZ, 1, 0)
   Sloupec = Sloupec + 1
   Select Case Data.Cells(Radek2, P_1502GAP).Value
    Case 1: .Cells(Radek1, Sloupec).Value = "1% - 5%, nebo do min. 5 000,-K|fffd|"
    Case 2: .Cells(Radek1, Sloupec).Value = "6% - 10%, nebo do min. 10 000,-K|fffd|"
    Case 3: .Cells(Radek1, Sloupec).Value = "11% - 20%, nebo do min. 20 000,-K|fffd|"
    Case 4: .Cells(Radek1, Sloupec).Value = "21% - 50%, nebo do min. 50 000,-K|fffd|"
   End Select
   If P_Smlouva(Radek2).GAP_RPZ <> "" Then .Cells(Radek1 + 1, Sloupec).Value = P_Smlouva(Radek2).GAP_RPZ
   Sloupec = Sloupec + 1
   If P_Smlouva(Radek2).Kal_RPZ <> "" Then Call Sloucit(Radek1, Sloupec, P_Smlouva(Radek2).Kal_RPZ, 1, 0)
   Sloupec = Sloupec + 1
   If P_Smlouva(Radek2).Kal_RPS <> "" Then Call Sloucit(Radek1, Sloupec, P_Smlouva(Radek2).Kal_RPS, 1, 0)
   Sloupec = Sloupec + 1
   If P_Smlouva(Radek2).Kal_LPS <> "" Then Call Sloucit(Radek1, Sloupec, P_Smlouva(Radek2).Kal_LPS, 1, 0)
   .Range(.Cells(Radek1, 1).Address & ":" & .Cells(Radek1, Sloupec).Address).Borders(xlEdgeBottom).LineStyle = xlDot
   Sloupec = Sloupec + 1
   Call Sloucit(Radek1, Sloupec, (Radek1 - HlR06 - 1) / 2 + 1, 1, 0)
   Sloupec = Sloupec + 1
   Call Sloucit(Radek1, Sloupec, Data.Cells(Radek2, P_0101Sml).Value, 1, 0)
   Radek2 = Radek2 + 1
   Call Aktualizovat_postup
  Next Radek1
  With .Cells
   With .Font
    .Bold = False
    .Name = "Arial"
    .FontStyle = "Oby|fffd|ejn|fffd|"
    .Size = 10
    .ColorIndex = xlAutomatic
   End With
   .HorizontalAlignment = xlGeneral
   .VerticalAlignment = xlCenter
   .Interior.ColorIndex = xlNone
  End With
  With .Range("A1:AF" & HlR05 & ",B" & HlR06 + 1 & ":B" & Pocet_smluv & ",AF" & HlR06 + 1 & ":AF" & Pocet_smluv)
   .HorizontalAlignment = xlCenter
   .Font.Bold = True
  End With
  .Range("A1:AF1").Font.Size = 14
  .Range("A" & HlR06 & ":AF" & HlR06 & "").Font.Bold = True
  .Range("J" & HlR06 + 1 & ":J" & Pocet_smluv).Font.Bold = True
  .Range("K" & HlR06 & ":AD" & Pocet_smluv).NumberFormatLocal = "# ##0 K|fffd|"
  .Range("E" & HlR06 & ":E" & Pocet_smluv).HorizontalAlignment = xlLeft
  .Range("K" & HlR06 + 1 & ":K" & Pocet_smluv).HorizontalAlignment = xlCenter

  .Cells.Interior.ColorIndex = 2
  .Range("A1:AF1,A" & HlR01 & ":AF" & HlR06).Interior.ColorIndex = 35
  .Range("K" & HlR01 & ":L" & HlR06).Interior.ColorIndex = 6
  .Range("M" & HlR01 & ":O" & HlR06).Interior.ColorIndex = 24
  .Range("P" & HlR01 & ":P" & HlR06 & ",S" & HlR01 & ":S" & HlR06).Interior.ColorIndex = 46
  .Range("Q" & HlR01 & ":R" & HlR06).Interior.ColorIndex = 44
  .Range("T" & HlR01 & ":T" & HlR06).Interior.ColorIndex = 4
  .Range("U" & HlR01 & ":U" & HlR06 & ",AA" & HlR01 & ":AA" & HlR06).Interior.ColorIndex = 22
  .Range("W" & HlR01 & ":W" & HlR06).Interior.ColorIndex = 37
  .Range("X" & HlR01 & ":Z" & HlR06).Interior.ColorIndex = 36

  With .Range("K" & HlR01 & ":L" & Pocet_smluv & ",P" & HlR01 & ":P" & Pocet_smluv & ",S" & HlR01 & ":S" & Pocet_smluv & ",U" & HlR01 & ":U" & Pocet_smluv & ",W" & HlR01 & ":W" & Pocet_smluv & ",AA" & HlR01 & ":AA" & Pocet_smluv & ",AE" & HlR01 & ":AF" & Pocet_smluv)
   .Borders(xlEdgeLeft).Weight = xlMedium
   .Borders(xlEdgeRight).Weight = xlMedium
  End With
  .Range("K" & HlR01 & ":AA" & HlR01).Borders(xlEdgeBottom).Weight = xlMedium
  .Range("A" & HlR03 & ":AF" & HlR03).Borders(xlEdgeBottom).LineStyle = xlDot
  .Range("A" & HlR05 & ":AF" & HlR05).Borders(xlEdgeBottom).LineStyle = xlDouble
  For Sloupec = 1 To 32
   .Columns(Sloupec).ColumnWidth = 70
  Next Sloupec
  .Cells.EntireColumn.AutoFit
  .Cells.EntireRow.AutoFit
  .Rows(1).RowHeight = 25.5
  .Select
  .Range("A1").Select
  ActiveWindow.View = xlPageBreakPreview
  .VPageBreaks.Add .Range("R1")
  ActiveWindow.View = xlNormalView
  With .PageSetup
   .PrintTitleRows = HlR01 & ":" & HlR05
   .PrintTitleColumns = ""
   .PrintArea = "A1:AF" & Pocet_smluv + 5
   .LeftHeader = ""
   .CenterHeader = ""
   .RightHeader = "[&P - &N]" & vbLf & DateDiff("d", "1.1.1900", Date)
   .LeftFooter = "&""Arial,Tu|fffd|n|fffd|""&12|fffd|esk|fffd| podnikatelsk|fffd| poji|fffd||fffd|ovna, a.s., VIENNA INSURANCE GROUP&""Arial,Oby|fffd|ejn|fffd|""&10" & vbLf & "je zapsan|fffd| v obchodn|fffd|m rejst|fffd||fffd|ku veden|fffd|m M|fffd|stsk|fffd|m soudem v Praze - odd|fffd|l B, vlo|fffd|ka 3433. I|fffd|: 63998530, DI|fffd|: CZ63998530, bankovn|fffd| spojen|fffd|: 700135002/0800"
   .CenterFooter = ""
   .RightFooter = ""
   .LeftMargin = 35
   .RightMargin = 35
   .TopMargin = 65
   .BottomMargin = 65
   .HeaderMargin = 35
   .FooterMargin = 35
   .PrintHeadings = False
   .PrintGridlines = False
   .PrintComments = xlPrintNoComments
   .CenterHorizontally = False
   .CenterVertically = False
   .Orientation = xlLandscape
   .Draft = False
   .PaperSize = xlPaperA4
   .FirstPageNumber = xlAutomatic
   .Order = xlOverThenDown
   .BlackAndWhite = False
   .PrintErrors = xlPrintErrorsDisplayed
   .Zoom = False
   .FitToPagesWide = 2
   .FitToPagesTall = 110
  End With

  If .VPageBreaks.Count > 0 Then Zalomeni = .VPageBreaks(1).Location.Column + 1
  If Zalomeni < 15 Then Zalomeni = 15
  With .Cells(HlR01, Zalomeni).MergeArea
   Sloupec = .Column
   Zalomeni = Sloupec + IIf(Zalomeni - Sloupec < Sloupec + .Columns.Count - Zalomeni, 0, .Columns.Count)
  End With
  .Columns("AE:AF").Cut
  .Columns(Zalomeni).Insert xlToRight
  ActiveWindow.View = xlPageBreakPreview
  .ResetAllPageBreaks
  Set .VPageBreaks(1).Location = .Columns(Zalomeni)
  Konec1 = Zalomeni + 2
  If .Columns(Konec1).ColumnWidth < 30 Then Konec1 = Konec1 + 1
  Konec2 = Konec1 + 1
  If .Columns(Konec2).ColumnWidth < 19.5 Then Konec2 = Konec2 + 1
  Konec3 = Konec2 + 1
  If .Columns(Konec3).ColumnWidth < 17.5 Then Konec3 = Konec3 + 1
  .Range(.Cells(3, Zalomeni).Address & ":" & .Cells(4, Konec3).Address).Borders.LineStyle = xlContinuous
  .Range("A3:E4," & .Cells(3, Zalomeni).Address & ":" & .Cells(4, Konec3).Address).Interior.ColorIndex = 35
  .Range("A3:E3," & .Cells(3, Zalomeni).Address & ":" & .Cells(3, Konec3).Address).Borders(xlEdgeBottom).LineStyle = xlDouble
  .Range("A1," & .Cells(1, Zalomeni).Address).Value = "Flotilov|fffd| seznam vozidel FAP"
  .Range("A1:" & .Cells(1, Zalomeni - 1).Address & "").Merge
  .Range(.Cells(1, Zalomeni).Address & ":AF1").Merge

  .Range("A3," & .Cells(3, Zalomeni).Address).Value = "|fffd||fffd|slo flotily"
  .Range("A3:B3").Merge
  .Range(.Cells(3, Zalomeni).Address & ":" & .Cells(3, Zalomeni + 1).Address).Merge
  .Range("C3," & .Cells(3, Zalomeni + 2).Address).Value = "Pojistn|fffd|k/flotiln|fffd|k - n|fffd|zev"
  .Range(.Cells(3, Zalomeni + 2).Address & ":" & .Cells(3, Konec1).Address).Merge
  .Range("D3," & .Cells(3, Konec1 + 1).Address).Value = "Pojistn|fffd|k/flotiln|fffd|k - I|fffd|"
  .Range(.Cells(3, Konec1 + 1).Address & ":" & .Cells(3, Konec2).Address).Merge
  .Range("E3," & .Cells(3, Konec2 + 1).Address).Value = "Frekvence placen|fffd|"
  .Range(.Cells(3, Konec2 + 1).Address & ":" & .Cells(3, Konec3).Address).Merge
  .Range("A4," & .Cells(4, Zalomeni).Address).Value = Data.Cells(P_Pocatek_hla_r, P_hl03_cis_hip).Value
  .Range("A4:B4").Merge
  .Range(.Cells(4, Zalomeni).Address & ":" & .Cells(4, Zalomeni + 1).Address).Merge
  .Range("C4," & .Cells(4, Zalomeni + 2).Address).Value = P_Flotila.PNz
  .Range(.Cells(4, Zalomeni + 2).Address & ":" & .Cells(4, Konec1).Address).Merge
  .Range("D4," & .Cells(4, Konec1 + 1).Address).Value = P_Flotila.PIC
  .Range(.Cells(4, Konec1 + 1).Address & ":" & .Cells(4, Konec2).Address).Merge
  .Range("E4," & .Cells(4, Konec2 + 1).Address).Value = P_Flotila.Frk
  .Range(.Cells(4, Konec2 + 1).Address & ":" & .Cells(4, Konec3).Address).Merge
  With .Range("A1:" & .Cells(1, Zalomeni - 1).Address & "," & .Cells(1, Zalomeni).Address & ":AF1,A3:E4," & .Cells(3, Zalomeni).Address & ":" & .Cells(4, Konec3).Address & ",A" & HlR01 & ":" & .Cells(HlR04, Zalomeni - 1).Address & "," & .Cells(HlR01, Zalomeni).Address & ":AF" & HlR04 & ",A" & HlR05 & ":" & .Cells(Pocet_smluv, Zalomeni - 1).Address & "," & .Cells(HlR05, Zalomeni).Address & ":AF" & Pocet_smluv)
   .Borders(xlEdgeTop).Weight = xlThick
   .Borders(xlEdgeLeft).Weight = xlThick
   .Borders(xlEdgeRight).Weight = xlThick
   .Borders(xlEdgeBottom).Weight = xlThick
  End With

  For Zalomeni = 1 To .HPageBreaks.Count
   Radek2 = .Cells(.HPageBreaks(Zalomeni).Location.Row, 1).MergeArea.Row
   If Radek2 <> .HPageBreaks(Zalomeni).Location.Row Then Set .HPageBreaks(Zalomeni).Location = .Rows(Radek2)
  Next Zalomeni
  ActiveWindow.View = xlNormalView

  Radek1 = Radek1 + 1
  .Cells(Radek1, 1).Value = "Po|fffd|izovac|fffd| cena vozidla pro poji|fffd|t|fffd|n|fffd| GAP je uvedena v poli Pojistn|fffd| |fffd||fffd|stka vozidla HAV."
  .Range(.Cells(Radek1, 1).Address & ":" & .Cells(Radek1, 32).Address).Merge
  Radek1 = Radek1 + 1
  .Cells(Radek1, 1).Value = "M|fffd|sto poji|fffd|t|fffd|n|fffd| pro Poji|fffd|t|fffd|n|fffd| stroj|fffd| je uvedeno v poli |fffd|zemn|fffd| rozsah HAV."
  .Range(.Cells(Radek1, 1).Address & ":" & .Cells(Radek1, 32).Address).Merge
  Radek1 = Radek1 + 1
  .Cells(Radek1, 1).Value = "POV: Pro typy poji|fffd|t|fffd|n|fffd| 50 POV a 100 POV je sjedn|fffd|no |fffd|razov|fffd| p|fffd|ipoji|fffd|t|fffd|n|fffd| |fffd|idi|fffd|e vozidla dle DPPPOV."
  .Range(.Cells(Radek1, 1).Address & ":" & .Cells(Radek1, 32).Address).Merge
  Radek1 = Radek1 + 1
  .Cells(Radek1, 1).Value = "HAV: Pro typ poji|fffd|t|fffd|n|fffd| KASKO je sjedn|fffd|no poji|fffd|t|fffd|n|fffd| n|fffd|klad|fffd| na n|fffd|jem n|fffd|hradn|fffd|ho vozidla dle DPPHAV ODD|fffd|L I - Havarijn|fffd| poji|fffd|t|fffd|n|fffd|."
  .Range(.Cells(Radek1, 1).Address & ":" & .Cells(Radek1, 32).Address).Merge

  .Protect "hesloobchod", True, True, True, AllowFormattingCells:=True, AllowFormattingColumns:=True, AllowFormattingRows:=True, AllowSorting:=True, AllowFiltering:=True
  Application.ScreenUpdating = True
  .Range("A1").Select
 End With
 Call Aktualizovat_postup
End Sub
Private Function Preved(Hodnota As String) As String
 'Case P_0502POV, P_0602HAV, P_0802UPO, P_1404StP
 Select Case Hodnota
  Case "A": Preved = "Autop|fffd|j|fffd|ovna"
  Case "ADR", "N": Preved = "Nebezpe|fffd|n|fffd|"
  Case "B": Preved = "B|fffd|n|fffd|"
  Case "H": Preved = "Historick|fffd|"
  Case "R": Preved = "Rizikov|fffd|"
  Case "S": Preved = "Star|fffd||fffd|"
  Case "T": Preved = "Taxi"
 End Select
End Function
Attribute VB_Name = "M_Sestava_Smluv_kalkul"
Option Explicit
Public WBVystup As Workbook, Makler As String, Zpracoval As String
Sub Sestava_smluv_kalkul(Optional Nic As Boolean)
 Dim Adresa As Range, Nadpis1 As String, Nadpis2 As String, Nadpis3 As String, RPZ As String, Lim As String, KPH As String, Hodnota As String, RP As String, SP1 As Byte, SP2 As Byte, SP3 As Byte, SP4 As Byte, SP5 As Byte
 Dim Pocet_smluv As Long, Radek As Long, Sloupec As Long, Posun1 As Integer, Posun2 As Integer
 Dim VList As Byte, Barva As Byte, Polozka As Byte, Mam As Boolean
 Dim Posledni As Long, Sl(5) As Long
 Const HlR01 As Byte = 11, HlR02 As Byte = 12, HlR03 As Byte = 13, Sumace As Byte = 14

 Call Aktualizovat_proces("Generuji sestavu ...")
 Procenta = 1 / 65

 Application.ScreenUpdating = False
 Application.EnableEvents = False
 Set WBVystup = Workbooks.Add
 VList = WBVystup.Worksheets.Count
 If VList < 5 Then
  VList = 5 - VList
  WBVystup.Worksheets.Add Count:=VList
 End If
 Application.EnableEvents = True
 
 Do_radku = Rozah_listu(Sesit.Name, Data.Name)
 Pocet_smluv = Do_radku - P_Pocatek_dat_r + 1
 Posledni = HlR03 + Pocet_smluv + 1

 Makler = InputBox("N|fffd|zev makl|fffd||fffd|e:", Default:=Makler)
 Zpracoval = InputBox("Kalkulaci zpracoval/a:", Default:=Zpracoval)
 KPH = "k POV / HAV"
 RP = "Ro|fffd|n|fffd|" & vbLf & "pojistn|fffd|"
 RPZ = RP & vbLf & "- z|fffd|kladn|fffd|"
 SP1 = IIf(P_Flotila.POV = 1, 0, IIf(P_Flotila.POV < 1, 1, 5))
 SP2 = IIf(P_Flotila.HAV = 1, 0, IIf(P_Flotila.HAV < 1, 1, 5))
 SP3 = IIf(P_Flotila.PAs = 1, 0, IIf(P_Flotila.PAs < 1, 1, 5))
 SP4 = IIf(P_Flotila.StP = 1, 0, IIf(P_Flotila.StP < 1, 1, 5))
 SP5 = IIf(P_Flotila.GAP = 1, 0, IIf(P_Flotila.GAP < 1, 1, 5))
 Lim = "Limit" & vbLf & "pln|fffd|n|fffd|"
 For VList = 1 To 5
  Set List = WBVystup.Worksheets(VList)
  With List
   With .Cells
    .Interior.ColorIndex = 2
    .Font.Name = "Arial"
    .Font.Size = 10
   End With
   Select Case VList
    Case 1
     .Name = "POV"
     Barva = 37
     Nadpis1 = "Kalkulace POV"
    Case 2
     .Name = "HAV"
     Barva = 35
     Nadpis1 = "Kalkulace HAV"
    Case 3
     .Name = "Dopl|fffd|kov|fffd| poj. I"
     Barva = 40
     Nadpis1 = "Kalkulace dopl|fffd|kov|fffd|ho poji|fffd|t|fffd|n|fffd| I"
    Case 4
     .Name = "Dopl|fffd|kov|fffd| poj. II"
     Barva = 40
     Nadpis1 = "Kalkulace dopl|fffd|kov|fffd|ho poji|fffd|t|fffd|n|fffd| II"
    Case 5
     .Name = "Souhrn"
     Barva = 39
     Nadpis1 = "Rekapitulace pojistn|fffd|ho"
   End Select
   Sesit.Worksheets("N|fffd|pov|fffd|da").Shapes("Logo |fffd|PP").Copy
   .Paste

' 1 tabulka
   For Radek = 0 To 7
    Select Case Radek
     Case 0
      Posun1 = 0
      Nadpis2 = Nadpis1
     Case 1
      Nadpis2 = "Spole|fffd|nost:"
      Hodnota = P_Flotila.PNz
     Case 2
      Nadpis2 = "N|fffd|vrh ze dne:"
      Hodnota = Date
     Case 3
      Nadpis2 = "Makl|fffd||fffd|:"
      Hodnota = Makler
      Posun2 = 55
      Nadpis3 = "|fffd|esk|fffd| podnikatelsk|fffd| poji|fffd||fffd|ovna, a.s., VIENNA INSURANCE GROUP,"
     Case 4
      Nadpis2 = "Platnost t|fffd|to kalkulace:"
      Hodnota = "30 dn|fffd|"
      Nadpis3 = "se s|fffd|dlem Pob|fffd|e|fffd|n|fffd| 665/23, 186 00 Praha 8, zapsan|fffd| v obchodn|fffd|m"
     Case 5
      Nadpis2 = "|fffd|kodn|fffd| pr|fffd|b|fffd|h:"
      Hodnota = Format(0, " %")
      Nadpis3 = "rejst|fffd||fffd|ku veden|fffd|m M|fffd|stsk|fffd|m soudem v Praze, odd|fffd|l B, vlo|fffd|ka 3433,"
     Case 6
      Nadpis2 = "Kalkulaci zpracoval/a:"
      Hodnota = Zpracoval
      Nadpis3 = "I|fffd|: 63998530, DI|fffd|: CZ63998530, bankovn|fffd| spojen|fffd|: 700135002/0800,"
     Case 7
      Nadpis3 = "web: www.cpp.cz"
    End Select

    If Radek < 7 Then
     With .Shapes.AddTextbox(msoTextOrientationHorizontal, 270, Posun1, IIf(Radek = 0, 300, 120), 17)
      .Placement = xlFreeFloating
      With .TextFrame
       .HorizontalAlignment = IIf(Radek = 0, xlCenter, xlLeft)
       .VerticalAlignment = xlCenter
       .MarginLeft = 2.8
       .MarginRight = 2.8
       .MarginBottom = 2.8
       .MarginTop = 2.8
       With .Characters
        .text = Nadpis2
        With .Font
         .Name = "Arial"
         .Size = 10
         .Bold = True
        End With
       End With
      End With
      With .Fill
       .ForeColor.SchemeColor = IIf(Radek = 0, Barva + 7, 1)
       .Visible = msoTrue
       .Solid
      End With
      With .Line
       .Weight = 0.75
       .ForeColor.SchemeColor = 0
       .Visible = msoTrue
       .Style = msoLineSingle
      End With
     End With
    End If

    If Radek > 0 And Radek < 7 Then
     With .Shapes.AddTextbox(msoTextOrientationHorizontal, 390, Posun1, 180, 17)
      .Placement = xlFreeFloating
      With .TextFrame
       .HorizontalAlignment = xlCenter
       .VerticalAlignment = xlCenter
       .MarginLeft = 2.8
       .MarginRight = 2.8
       .MarginBottom = 2.8
       .MarginTop = 2.8
       With .Characters
        .text = Hodnota
        With .Font
         .Name = "Arial"
         .Size = 10
         .Bold = False
        End With
       End With
      End With
      With .Fill
       .ForeColor.SchemeColor = 1
       .Visible = msoTrue
       .Solid
      End With
      With .Line
       .Weight = 0.75
       .ForeColor.SchemeColor = 0
       .Visible = msoTrue
       .Style = msoLineSingle
      End With
     End With
    End If

    If Radek > 2 Then
     With .Shapes.AddTextbox(msoTextOrientationHorizontal, 0, Posun2, 269, 13)
      .Placement = xlFreeFloating
      With .TextFrame
       .HorizontalAlignment = xlLeft
       .VerticalAlignment = xlCenter
       .MarginLeft = 2.8
       .MarginRight = 2.8
       .MarginBottom = 2.8
       .MarginTop = 2.8
       With .Characters
        .text = Nadpis3
        With .Font
         .Name = "Arial"
         .Size = 8
         .Bold = IIf(Radek = 3, True, False)
        End With
       End With
      End With
      With .Fill
       .ForeColor.SchemeColor = 1
       .Visible = msoTrue
       .Solid
      End With
      With .Line
       .ForeColor.SchemeColor = 1
       .Visible = msoTrue
      End With
     End With
     Posun2 = Posun2 + 13
    End If
    
    If Radek = 0 Then
     With .Shapes.AddTextbox(msoTextOrientationHorizontal, 571, 0, 300, 119)
      .Placement = xlFreeFloating
      With .TextFrame
       .HorizontalAlignment = xlCenter
       .VerticalAlignment = xlCenter
       .MarginLeft = 2.8
       .MarginRight = 2.8
       .MarginBottom = 2.8
       .MarginTop = 2.8
       With .Characters
        .text = "INFORMACE O|fffd|ZPRACOV|fffd|N|fffd| OSOBN|fffd|CH |fffd|DAJ|fffd|" & vbCr & _
                "Z|fffd|jemce o|fffd|poji|fffd|t|fffd|n|fffd| bere na v|fffd|dom|fffd|, |fffd|e jeho osobn|fffd| |fffd|daje zpracov|fffd|v|fffd| pojistitel pro |fffd||fffd|ely kalkulace, n|fffd|vrhu a|fffd|uzav|fffd|en|fffd| pojistn|fffd| smlouvy a|fffd|posouzen|fffd| p|fffd|ijatelnosti do poji|fffd|t|fffd|n|fffd|, kdy|fffd| v|fffd|t|fffd|chto p|fffd||fffd|padech jde o|fffd|zpracov|fffd|n|fffd| nezbytn|fffd| pro uzav|fffd|en|fffd| smlouvy a|fffd|pln|fffd|n|fffd| pr|fffd|vn|fffd| povinnosti, kter|fffd| se na pojistitele vztahuje." & vbCr & _
                "Informace o|fffd|zpracov|fffd|n|fffd| Va|fffd|ich osobn|fffd|ch |fffd|daj|fffd| naleznete v|fffd|dokumentu " & Chr(34) & "Informace o|fffd|zpracov|fffd|n|fffd| osobn|fffd|ch |fffd|daj|fffd|" & Chr(34) & " v|fffd|poji|fffd|t|fffd|n|fffd| vozidel, kter|fffd| je trvale dostupn|fffd| na webov|fffd| str|fffd|nce www.cpp.cz v|fffd|sekci " & Chr(34) & "O|fffd|SPOLE|fffd|NOSTI" & Chr(34) & "."
        With .Font
         .Name = "Arial"
         .Size = 9
         .Bold = False
        End With
       End With
      End With
      With .Fill
       .ForeColor.SchemeColor = 1
       .Visible = msoTrue
       .Solid
      End With
      With .Line
       .ForeColor.SchemeColor = 1
       .Visible = msoTrue
      End With
     End With
    End If
    
    Posun1 = Posun1 + 17
   Next Radek

   Call Aktualizovat_postup
' 2 tabulka
   Sloupec = 1
   Select Case VList
    Case 1
     Nadpis1 = SPStav(SP1, True)
     Nadpis2 = vbLf & SPStav(SP1)
     Call Sloucit(HlR01, Sloupec, "POV", 0, IIf(Nadpis1 = "", 12, 11))
     Call Sloucit(HlR02, Sloupec, "", 0, IIf(Nadpis1 = "", 12, 11))
    Case 2
     Nadpis1 = SPStav(SP2, True)
     Nadpis2 = vbLf & SPStav(SP2)
     Call Sloucit(HlR01, Sloupec, "HAV", 0, IIf(Nadpis1 = "", 16, 15))
     Call Sloucit(HlR02, Sloupec, "", 0, IIf(Nadpis1 = "", 16, 15))
    Case 3
     Call Sloucit(HlR01, Sloupec, "Dopl|fffd|kov|fffd| poji|fffd|t|fffd|n|fffd| I", 0, 2)
     Call Sloucit(HlR02, Sloupec, "", 0, 2)
    Case 4
     Call Sloucit(HlR01, Sloupec, "Dopl|fffd|kov|fffd| poji|fffd|t|fffd|n|fffd| II", 0, 2)
     Call Sloucit(HlR02, Sloupec, "", 0, 2)
    Case 5
     Call Sloucit(HlR01, Sloupec, "Rekapitulace pojistn|fffd|ho", 0, 18)
     Call Sloucit(HlR02, Sloupec, "", 0, 18)
   End Select
   .Cells(HlR03, Sloupec).Value = "P." & vbLf & "|fffd|."
   Sloupec = Sloupec + 1
   .Cells(HlR03, Sloupec).Value = "Registra|fffd|n|fffd|" & vbLf & "zna|fffd|ka"
   Sloupec = Sloupec + 1
   .Cells(HlR03, Sloupec).Value = "VIN"
   Sloupec = Sloupec + 1
   Select Case VList
    Case 1, 2, 5
     .Cells(HlR03, Sloupec).Value = "Zna|fffd|ka" & vbLf & "vozidla"
     Sloupec = Sloupec + 1
     .Cells(HlR03, Sloupec).Value = "Typ" & vbLf & "vozidla"
     Sloupec = Sloupec + 1
     If VList < 3 Then
      .Cells(HlR03, Sloupec).Value = "Druh" & vbLf & "vozidla"
      Sloupec = Sloupec + 1
     End If
     If VList > 1 Then
      .Cells(HlR03, Sloupec).Value = "Rok" & vbLf & "v|fffd|roby"
      Sloupec = Sloupec + 1
     End If
     If VList < 3 Then
      With .Cells(HlR03, Sloupec)
       .Value = "Objem" & vbLf & "(cm3)"
       .Characters(Start:=10, Length:=1).Font.Superscript = True
      End With
      Sloupec = Sloupec + 1
      .Cells(HlR03, Sloupec).Value = "Hmotnost" & vbLf & "(kg)"
      Sloupec = Sloupec + 1
      .Cells(HlR03, Sloupec).Value = "Po|fffd|et" & vbLf & "m|fffd|st k" & vbLf & "sezen|fffd|"
      Sloupec = Sloupec + 1
     End If
     If VList = 1 Then
      .Cells(HlR03, Sloupec).Value = "Limit" & vbLf & "pln|fffd|n|fffd|"
      Sloupec = Sloupec + 1
      .Cells(HlR03, Sloupec).Value = "Druh" & vbLf & "provozu"
      Sloupec = Sloupec + 1
     ElseIf VList = 2 Then
      .Cells(HlR03, Sloupec).Value = "Pojistn|fffd|" & vbLf & "|fffd||fffd|stka"
      Sloupec = Sloupec + 1
      .Cells(HlR03, Sloupec).Value = "Rozsah" & vbLf & "poji|fffd|t|fffd|n|fffd|"
      Sloupec = Sloupec + 1
      .Cells(HlR03, Sloupec).Value = "Druh" & vbLf & "provozu"
      Sloupec = Sloupec + 1
      .Cells(HlR03, Sloupec).Value = "|fffd|zemn|fffd|" & vbLf & "rozsah"
      Sloupec = Sloupec + 1
      .Cells(HlR03, Sloupec).Value = "Spolu|fffd||fffd|ast"
      Sloupec = Sloupec + 1
     Else
      .Cells(HlR03, Sloupec).Value = "POV" & vbLf & SPStav(SP1)
      Sloupec = Sloupec + 1
      .Cells(HlR03, Sloupec).Value = "HAV" & vbLf & SPStav(SP2)
      Sloupec = Sloupec + 1
      .Cells(HlR03, Sloupec).Value = "Skla"
      Sloupec = Sloupec + 1
      .Cells(HlR03, Sloupec).Value = "|fffd|raz"
      Sloupec = Sloupec + 1
      .Cells(HlR03, Sloupec).Value = "Zavazadla"
      Sloupec = Sloupec + 1
      .Cells(HlR03, Sloupec).Value = "N|fffd|hradn|fffd|" & vbLf & "vozidlo"
      Sloupec = Sloupec + 1
      .Cells(HlR03, Sloupec).Value = "Asistence" & vbLf & SPStav(SP3)
      Sloupec = Sloupec + 1
      .Cells(HlR03, Sloupec).Value = "P|fffd||fffd|rodn|fffd|" & vbLf & "rizika"
      Sloupec = Sloupec + 1
      .Cells(HlR03, Sloupec).Value = "P|fffd||fffd|m|fffd|" & vbLf & "likvidace"
      Sloupec = Sloupec + 1
      .Cells(HlR03, Sloupec).Value = "Strojn|fffd|" & vbLf & "poji|fffd|t|fffd|n|fffd|" & vbLf & SPStav(SP4)
      Sloupec = Sloupec + 1
      .Cells(HlR03, Sloupec).Value = "GAP" & vbLf & SPStav(SP5)
      Sloupec = Sloupec + 1
     End If
     .Cells(HlR03, Sloupec).Value = RPZ
     Sloupec = Sloupec + 1
     If VList < 3 And Nadpis1 <> "" Then
      .Cells(HlR01, Sloupec).Value = Nadpis1
      With .Cells(HlR02, Sloupec)
       .Value = 1 - IIf(VList = 1, P_Flotila.POV, P_Flotila.HAV)
       .NumberFormat = "0%"
      End With
     End If
     If VList = 5 Then Nadpis2 = vbLf & SPStav(SP1 + SP2 + SP3 + SP4 + SP5)
     .Cells(HlR03, Sloupec).Value = RP & Nadpis2
    Case 3
     Call Sloucit(HlR01, Sloupec, "SKLA", 0, 1)
     Call Sloucit(HlR02, Sloupec, KPH, 0, 1)
     .Cells(HlR03, Sloupec).Value = Lim
     Sloupec = Sloupec + 1
     .Cells(HlR03, Sloupec).Value = RPZ
     Sloupec = Sloupec + 1
     Call Sloucit(HlR01, Sloupec, "|fffd|RAZ", 0, 2)
     Call Sloucit(HlR02, Sloupec, KPH, 0, 2)
     .Cells(HlR03, Sloupec).Value = "Pojistn|fffd|" & vbLf & "|fffd||fffd|stky"
     Sloupec = Sloupec + 1
     .Cells(HlR03, Sloupec).Value = "Druh" & vbLf & "provozu"
     Sloupec = Sloupec + 1
     .Cells(HlR03, Sloupec).Value = RPZ
     Sloupec = Sloupec + 1
     Call Sloucit(HlR01, Sloupec, "ZAVAZADLA", 0, 1)
     Call Sloucit(HlR02, Sloupec, KPH, 0, 1)
     .Cells(HlR03, Sloupec).Value = Lim
     Sloupec = Sloupec + 1
     .Cells(HlR03, Sloupec).Value = RPZ
     Sloupec = Sloupec + 1
     Call Sloucit(HlR01, Sloupec, "N|fffd|HRADN|fffd| VOZIDLO", 0, 1)
     Call Sloucit(HlR02, Sloupec, KPH, 0, 1)
     .Cells(HlR03, Sloupec).Value = Lim
     Sloupec = Sloupec + 1
     .Cells(HlR03, Sloupec).Value = RPZ
     Sloupec = Sloupec + 1
     Nadpis1 = SPStav(SP3, True)
     Nadpis2 = "Ro|fffd|n|fffd|" & vbLf & "pojistn|fffd|" & vbLf & SPStav(SP3)
     Call Sloucit(HlR01, Sloupec, "ASISTENCE", 0, IIf(Nadpis1 = "", 2, 1))
     Call Sloucit(HlR02, Sloupec, KPH, 0, IIf(Nadpis1 = "", 2, 1))
     .Cells(HlR03, Sloupec).Value = "Rozsah"
     Sloupec = Sloupec + 1
     .Cells(HlR03, Sloupec).Value = RPZ
     Sloupec = Sloupec + 1
     If Nadpis1 <> "" Then
      .Cells(HlR01, Sloupec).Value = Nadpis1
      With .Cells(HlR02, Sloupec)
       .Value = 1 - P_Flotila.PAs
       .NumberFormat = "0%"
      End With
     End If
     .Cells(HlR03, Sloupec).Value = Nadpis2
     Sloupec = Sloupec + 1
     Call Sloucit(HlR01, Sloupec, "P|fffd||fffd|RODN|fffd| RIZIKA", 0, 1)
     Call Sloucit(HlR02, Sloupec, KPH, 0, 1)
     .Cells(HlR03, Sloupec).Value = Lim
     Sloupec = Sloupec + 1
     .Cells(HlR03, Sloupec).Value = RPZ
    Case 4
     .Cells(HlR01, Sloupec).Value = "P|fffd||fffd|M|fffd| LIKVIDACE"
     .Cells(HlR02, Sloupec).Value = KPH
     .Cells(HlR03, Sloupec).Value = RPZ
     Sloupec = Sloupec + 1
     Nadpis1 = SPStav(SP4, True)
     Nadpis2 = "Ro|fffd|n|fffd|" & vbLf & "pojistn|fffd|" & vbLf & SPStav(SP4)
     Call Sloucit(HlR01, Sloupec, "STROJN|fffd| POJI|fffd|T|fffd|N|fffd|", 0, IIf(Nadpis1 = "", 5, 4))
     Call Sloucit(HlR02, Sloupec, "k HAV, varianta ALL RISK", 0, IIf(Nadpis1 = "", 5, 4))
     .Cells(HlR03, Sloupec).Value = "Druh"
     Sloupec = Sloupec + 1
     .Cells(HlR03, Sloupec).Value = "Kategorie" & vbLf & "pro ST2"
     Sloupec = Sloupec + 1
     .Cells(HlR03, Sloupec).Value = "Spolu|fffd||fffd|ast" & vbLf & "pro ST2"
     Sloupec = Sloupec + 1
     .Cells(HlR03, Sloupec).Value = "Druh" & vbLf & "provozu" & vbLf & " pro ST2"
     Sloupec = Sloupec + 1
     .Cells(HlR03, Sloupec).Value = RPZ
     Sloupec = Sloupec + 1
     If Nadpis1 <> "" Then
      .Cells(HlR01, Sloupec).Value = Nadpis1
      With .Cells(HlR02, Sloupec)
       .Value = 1 - P_Flotila.StP
       .NumberFormat = "0%"
      End With
     End If
     .Cells(HlR03, Sloupec).Value = Nadpis2
     Sloupec = Sloupec + 1
     Nadpis1 = SPStav(SP5, True)
     Nadpis2 = "Ro|fffd|n|fffd|" & vbLf & "pojistn|fffd|" & vbLf & SPStav(SP5)
     Call Sloucit(HlR01, Sloupec, "GAP", 0, IIf(Nadpis1 = "", 4, 3))
     Call Sloucit(HlR02, Sloupec, KPH, 0, IIf(Nadpis1 = "", 4, 3))
     .Cells(HlR03, Sloupec).Value = "Prim|fffd|rn|fffd|" & vbLf & "pojistitel"
     Sloupec = Sloupec + 1
     .Cells(HlR03, Sloupec).Value = "Po|fffd|izovac|fffd|" & vbLf & "cena" & vbLf & "vozidla"
     Sloupec = Sloupec + 1
     .Cells(HlR03, Sloupec).Value = "Spolu|fffd||fffd|ast" & vbLf & "prim|fffd|rn|fffd|ho" & vbLf & "poji|fffd|t|fffd|n|fffd|"
     Sloupec = Sloupec + 1
     .Cells(HlR03, Sloupec).Value = RPZ
     Sloupec = Sloupec + 1
     If Nadpis1 <> "" Then
      .Cells(HlR01, Sloupec).Value = Nadpis1
      With .Cells(HlR02, Sloupec)
       .Value = 1 - P_Flotila.GAP
       .NumberFormat = "0%"
      End With
     End If
     .Cells(HlR03, Sloupec).Value = Nadpis2
   End Select
   Sloupec = Sloupec + 1
   .Cells(HlR01, Sloupec).Value = "Frekvence"
   .Cells(HlR02, Sloupec).Value = P_Flotila.Frk
   If VList = 3 Then Nadpis2 = vbLf & SPStav(SP3)
   If VList = 4 Then Nadpis2 = vbLf & SPStav(SP4 + SP5)
   .Cells(HlR03, Sloupec).Value = "Lh|fffd|tn|fffd|" & vbLf & "pojistn|fffd|" & Nadpis2
   Sl(VList) = Sloupec
   With .Range(.Cells(HlR01, 1).Address & ":" & .Cells(HlR02, Sloupec).Address & "," & _
               .Cells(HlR03, 1).Address & ":" & .Cells(HlR03, Sloupec).Address)
    .Interior.ColorIndex = Barva
    .HorizontalAlignment = xlCenter
    .VerticalAlignment = xlTop
   End With
   .Range(.Cells(HlR01, 1).Address & ":" & .Cells(HlR01, Sloupec).Address & "," & _
          .Cells(HlR03, 1).Address & ":" & .Cells(Sumace, Sloupec).Address & "," & _
          .Cells(HlR03 + 1, 1).Address & ":" & .Cells(Posledni, 1).Address).Font.Bold = True
   With .Range(.Cells(HlR01, 1).Address & ":" & .Cells(HlR02, Sloupec).Address & "," & _
               .Cells(HlR03, 1).Address & ":" & .Cells(Posledni, Sloupec).Address)
    With .Borders
     .LineStyle = xlContinuous
     .ColorIndex = xlAutomatic
     .Weight = xlThin
    End With
   End With
   Mam = True
   Select Case VList
    Case 1, 2, 5
     Set Adresa = .Range(.Cells(HlR01, 1).Address & ":" & .Cells(Sumace, Sloupec).Address & "," & _
                         .Cells(HlR03, 1).Address & ":" & .Cells(Posledni, Sloupec).Address)
    Case 3
     Set Adresa = .Range(.Cells(HlR01, 1).Address & ":" & .Cells(Posledni, 3).Address & "," & _
                         .Cells(HlR01, 4).Address & ":" & .Cells(Posledni, 5).Address & "," & _
                         .Cells(HlR01, 6).Address & ":" & .Cells(Posledni, 8).Address & "," & _
                         .Cells(HlR01, 9).Address & ":" & .Cells(Posledni, 10).Address & "," & _
                         .Cells(HlR01, 11).Address & ":" & .Cells(Posledni, 12).Address & "," & _
                         .Cells(HlR01, 13).Address & ":" & .Cells(Posledni, 15).Address & "," & _
                         .Cells(HlR01, 16).Address & ":" & .Cells(Posledni, 17).Address & "," & _
                         .Cells(HlR01, 18).Address & ":" & .Cells(Posledni, Sloupec).Address)
    Case 4
     Set Adresa = .Range(.Cells(HlR01, 1).Address & ":" & .Cells(Posledni, 3).Address & "," & _
                         .Cells(HlR01, 4).Address & ":" & .Cells(Posledni, 4).Address & "," & _
                         .Cells(HlR01, 5).Address & ":" & .Cells(Posledni, 10).Address & "," & _
                         .Cells(HlR01, 11).Address & ":" & .Cells(Posledni, 15).Address & "," & _
                         .Cells(HlR01, 16).Address & ":" & .Cells(Posledni, Sloupec).Address)
   End Select
Znovu:
   With Adresa
    For Polozka = xlEdgeLeft To xlEdgeRight
     .Borders(Polozka).Weight = xlMedium
    Next Polozka
   End With
   If (VList = 3 Or VList = 4) And Mam Then
    Set Adresa = .Range(.Cells(HlR03, 1).Address & ":" & .Cells(Sumace, Sloupec).Address)
    Mam = False
    GoTo Znovu
   End If
   .Range(.Cells(HlR01, 1).Address, .Cells(HlR02, Sloupec).Address).VerticalAlignment = xlCenter
   Select Case VList
    Case 1, 2, 5
     .Range(.Cells(HlR01, 1).Address, .Cells(HlR02, Sloupec).Address).Borders(11).LineStyle = xlNone
     .Range(.Cells(HlR01, 1).Address, .Cells(HlR02, Sloupec).Address).Borders(12).LineStyle = xlNone
    Case 3
     .Range(.Cells(HlR01, 14).Address & ":" & .Cells(HlR02, 15).Address).Borders(11).LineStyle = xlNone
    Case 4
     .Range(.Cells(HlR01, 9).Address & ":" & .Cells(HlR02, 10).Address & "," & _
            .Cells(HlR01, 14).Address & ":" & .Cells(HlR02, 15).Address).Borders(11).LineStyle = xlNone
   End Select
   .Range(.Cells(Sumace, 1).Address & ":" & .Cells(Sumace, Sloupec).Address).Borders(xlEdgeTop).LineStyle = xlDouble
   If VList < 5 Then
    .Cells(Posledni + 1, 1).Value = "Sou|fffd|et lh|fffd|tn|fffd|ho pojistn|fffd|ho za jednotliv|fffd| druhy poji|fffd|t|fffd|n|fffd| m|fffd||fffd|e vykazovat drobn|fffd| rozd|fffd|l v porovn|fffd|n|fffd| s |fffd|dajem uveden|fffd|m v souhrnn|fffd| tabulce. Tento rozd|fffd|l je zp|fffd|soben zaokrouhlov|fffd|n|fffd|m a z|fffd|vazn|fffd| je |fffd|daj uveden|fffd| v souhrnn|fffd| tabulce."
    .Range(.Cells(Posledni + 1, 1).Address & ":" & .Cells(Posledni + 2, Sloupec).Address).Merge
    .Range(.Cells(Posledni + 3, 1).Address & ":" & .Cells(Posledni + 4, Sloupec).Address).Merge
    With .Range(.Cells(Posledni + 1, 1).Address & ":" & .Cells(Posledni + 4, Sloupec).Address)
     .WrapText = True
     .VerticalAlignment = xlTop
     .Font.Italic = True
     .Font.ColorIndex = 56
    End With
   End If
  End With
  Call Aktualizovat_postup
 Next VList
 Call Zapis(P_0104Sml)
 Call Zapis(P_0308Vla, 1, 1, 1, 1, 1)
 Call Zapis(P_0401PrP, 2, 2, 2, 2, 2, "@")
 Call Zapis(P_0403PrP, 3, 3, 3, 3, 3, "@")
 Call Zapis(P_0404PrP, 6, 6)
 Call Zapis(P_0405PrP, 4, 4, 0, 0, 4, "@")
 Call Zapis(P_0406PrP, 5, 5, 0, 0, 5, "@")
 Call Zapis(P_0407PrP, 0, 7, 0, 0, 6, "0")
 Call Zapis(P_0409PrP, 7, 8, 0, 0, 0, "# ##0")
 Call Zapis(P_0410PrP, 8, 9, 0, 0, 0, "# ##0")
 Call Zapis(P_0411PrP, 9, 10, 0, 0, 0, "# ##0")
 Call Zapis(P_0417PrP, 0, 11, 0, 12, 0, "# ##0 K|fffd|")
 Call Zapis(P_0501POV, 10)
 Call Zapis(P_0502POV, 11)
 Call Zapis(P_0503POV, 12, 0, 0, 0, 0, "# ##0 K|fffd|", True)
 Call Zapis(P_0504POV, 13, 0, 0, 0, 7, "# ##0 K|fffd|", True)
 Call Zapis(P_0601HAV, 0, 12)
 Call Zapis(P_0602HAV, 0, 13)
 Call Zapis(P_0603HAV, 0, 14)
 Call Zapis(P_0604HAV, 0, 15)
 Call Zapis(P_0605HAV, 0, 16, 0, 0, 0, "# ##0 K|fffd|", True)
 Call Zapis(P_0606HAV, 0, 17, 0, 0, 8, "# ##0 K|fffd|", True)
 Call Zapis(P_0701PSk, 0, 0, 4, 0, 0, "# ##0 K|fffd|")
 Call Zapis(P_0702PSk, 0, 0, 5, 0, 9, "# ##0 K|fffd|", True)
 Call Zapis(P_0801UPO, 0, 0, 6)
 Call Zapis(P_0802UPO, 0, 0, 7)
 Call Zapis(P_0803UPO, 0, 0, 8, 0, 10, "# ##0 K|fffd|", True)
 Call Zapis(P_0901PZa, 0, 0, 9, 0, 0, "# ##0 K|fffd|")
 Call Zapis(P_0902PZa, 0, 0, 10, 0, 11, "# ##0 K|fffd|", True)
 Call Zapis(P_1001PNV, 0, 0, 11, 0, 0, "# ##0 K|fffd|")
 Call Zapis(P_1002PNV, 0, 0, 12, 0, 12, "# ##0 K|fffd|", True)
 Call Zapis(P_1101PAs, 0, 0, 13)
 Call Zapis(P_1102PAs, 0, 0, 14, 0, 0, "# ##0 K|fffd|", True)
 Call Zapis(P_1103PAs, 0, 0, 15, 0, 13, "# ##0 K|fffd|", True)
 Call Zapis(P_1201PPR, 0, 0, 16, 0, 0, "# ##0 K|fffd|")
 Call Zapis(P_1202PPR, 0, 0, 17, 0, 14, "# ##0 K|fffd|", True)
 Call Zapis(P_1302PLi, 0, 0, 0, 4, 15, "# ##0 K|fffd|", True)
 Call Zapis(P_1401StP, 0, 0, 0, 5)
 Call Zapis(P_1402StP, 0, 0, 0, 6)
 Call Zapis(P_1403StP, 0, 0, 0, 7)
 Call Zapis(P_1404StP, 0, 0, 0, 8)
 Call Zapis(P_1405StP, 0, 0, 0, 9, 0, "# ##0 K|fffd|", True)
 Call Zapis(P_1406StP, 0, 0, 0, 10, 16, "# ##0 K|fffd|", True)
 Call Zapis(P_1501GAP, 0, 0, 0, 11)
 Call Zapis(P_1502GAP, 0, 0, 0, 13)
 Call Zapis(P_1503GAP, 0, 0, 0, 14, 0, "# ##0 K|fffd|", True)
 Call Zapis(P_1504GAP, 0, 0, 0, 15, 17, "# ##0 K|fffd|", True)
 Call Zapis(P_1601Kal, 0, 0, 0, 0, 18, "# ##0 K|fffd|", True)
 Call Zapis(P_1602Kal, 0, 0, 0, 0, 19, "# ##0 K|fffd|", True)
 Call Zapis(P_1603Kal, 14, 18, 18, 16, 20, "# ##0 K|fffd|", True)
 For VList = 1 To 5
  With WBVystup.Worksheets(VList)
   .Select
   .Cells(1, 1).Select
   Call Format_sloupcu2(WBVystup.Name, .Name, Sl(VList))
   .Columns(Sl(VList) + 1).ColumnWidth = 0
   .Range(.Cells(HlR03, 1).Address & ":" & .Cells(HlR03, Sl(VList)).Address).AutoFilter
   Application.ExecuteExcel4Macro "PAGE.SETUP("""",""&CStr|fffd|nka &P z &N"",0.5,0.5,0.9,0.9,False,False,False,False,2,9," & _
                                              "{1,100},1,2,False,600,0.5,0.5,False,False)"
'PAGE.SETUP(head, foot, left, right, top, bot, hdng, grid, h_cntr, v_cntr,orient, paper_size,
'scale,pg_num, pg_order, bw_cells, quality, head_margin,foot_margin, notes, draft)
   With .PageSetup
    .PrintTitleRows = HlR01 & ":" & HlR03
    .PrintTitleColumns = ""
    .PrintErrors = xlPrintErrorsDisplayed
   End With
'  .Protect "hesloobchod", True, True, True, AllowFormattingCells:=True, AllowFormattingColumns:=True, AllowFormattingRows:=True, AllowSorting:=True, AllowFiltering:=True
  End With
  Call Aktualizovat_postup
 Next VList
 WBVystup.Worksheets(1).Select
 Application.ScreenUpdating = True
End Sub
Sub Sloucit(Radek As Long, S As Long, Nazev As String, Optional Radku As Long = 0, Optional Sloupcu As Long = 0)
 With List
  .Cells(Radek, S).Value = Nazev
  .Range(.Cells(Radek, S).Address, .Cells(Radek + Radku, S + Sloupcu).Address).Merge
 End With
End Sub
Private Function SPStav(SP As Byte, Optional Prvni As Boolean = False) As String
 Select Case SP
  Case 0: SPStav = ""
  Case Is < 5: SPStav = IIf(Prvni, "Sleva", "- po slev|fffd|")
  Case 5: SPStav = IIf(Prvni, "P|fffd|ir|fffd|ka", "- po p|fffd|ir|fffd|ce")
  Case Else: SPStav = IIf(SP Mod 5 > 0, "- po slev|fffd|/p|fffd|ir|fffd|ce", "- po p|fffd|ir|fffd|ce")
 End Select
End Function
Private Sub Zapis(ByVal Sloupec As Byte, Optional S1 As Byte = 0, Optional S2 As Byte = 0, Optional S3 As Byte = 0, Optional S4 As Byte = 0, Optional S5 As Byte = 0, Optional Format_bunky As String, Optional Sumace As Boolean = False)
 Dim Radek1 As Long, Radek2 As Long, Hodnota As String, Mam As Byte, Polozka(6) As String, Zapsano As Boolean, Dat_max As Date, Dat_min As Date, Datum As Date, VList As Byte

 Call Aktualizovat_postup
 Dat_min = Now + 365
 Mam = 0
 Radek2 = 14
 With WBVystup
  If Sumace Then
   If S1 > 0 Then .Worksheets(1).Cells(Radek2, S1).FormulaR1C1 = "=SUM(R[1]C:R" & Do_radku + 16 - P_Pocatek_dat_r & "C)"
   If S2 > 0 Then .Worksheets(2).Cells(Radek2, S2).FormulaR1C1 = "=SUM(R[1]C:R" & Do_radku + 16 - P_Pocatek_dat_r & "C)"
   If S3 > 0 Then .Worksheets(3).Cells(Radek2, S3).FormulaR1C1 = "=SUM(R[1]C:R" & Do_radku + 16 - P_Pocatek_dat_r & "C)"
   If S4 > 0 Then .Worksheets(4).Cells(Radek2, S4).FormulaR1C1 = "=SUM(R[1]C:R" & Do_radku + 16 - P_Pocatek_dat_r & "C)"
   If S5 > 0 Then .Worksheets(5).Cells(Radek2, S5).FormulaR1C1 = "=SUM(R[1]C:R" & Do_radku + 16 - P_Pocatek_dat_r & "C)"
  End If
  Radek2 = Radek2 + 1
  For Radek1 = P_Pocatek_dat_r To Do_radku
   Hodnota = ""
   Select Case Sloupec
    Case P_0104Sml
     If IsDate(Data.Cells(Radek1, Sloupec).Value) Then
      Datum = Data.Cells(Radek1, Sloupec).Value
      If Datum > Dat_max Then Dat_max = Datum
      If Datum < Dat_min Then Dat_min = Datum
     End If
     Zapsano = True
    Case P_0308Vla: Hodnota = Radek1 - P_Pocatek_dat_r + 1
    Case P_0403PrP: Hodnota = "'" & Data.Cells(Radek1, Sloupec).Value
    Case P_0405PrP: Hodnota = P_Smlouva(Radek1).Znacka_voz
    Case P_0410PrP: Hodnota = P_Smlouva(Radek1).Hmotnost
    Case P_0417PrP: Hodnota = P_Smlouva(Radek1).Poj_castka
    Case P_0501POV
     Select Case P_Smlouva(Radek1).POV_Lim_pln
      Case "V": Hodnota = "35/35 mil.K|fffd|"
      Case "S": Hodnota = "50/50 mil.K|fffd|": Polozka(1) = Hodnota
      Case "N": Hodnota = "100/100 mil.K|fffd|": Polozka(2) = Hodnota
      Case "T": Hodnota = "150/150 mil.K|fffd|": Polozka(3) = Hodnota
      Case "Y": Hodnota = "200/200 mil.K|fffd|": Polozka(4) = Hodnota
      Case "Z": Hodnota = "240/240 mil.K|fffd|": Polozka(5) = Hodnota
     End Select
     If Len(Hodnota) > 0 Then
      Mam = 1
      Polozka(0) = "Sjedn|fffd|no |fffd|razov|fffd| p|fffd|ipoji|fffd|t|fffd|n|fffd| |fffd|idi|fffd|e vozidla zdarma u limitu pln|fffd|n|fffd|: "
     End If
    Case P_0502POV, P_0602HAV, P_0802UPO, P_1404StP
     Select Case Data.Cells(Radek1, Sloupec).Value
      Case "A": Hodnota = "Autop|fffd|j|fffd|ovna"
      Case "ADR", "N": Hodnota = "Nebezpe|fffd|n|fffd|"
      Case "B": Hodnota = "B|fffd|n|fffd|"
      Case "H": Hodnota = "Historick|fffd|"
      Case "R": Hodnota = "Rizikov|fffd|"
      Case "S": Hodnota = "Star|fffd||fffd|"
      Case "T": Hodnota = "Taxi"
     End Select
    Case P_0503POV: Hodnota = P_Smlouva(Radek1).POV_RPZ
    Case P_0504POV: Hodnota = P_Smlouva(Radek1).POV_RPS
    Case P_0601HAV
     Select Case P_Smlouva(Radek1).HAV_Roz_poj
      Case 2: Hodnota = "ALL RISK": Polozka(1) = "ALL RISK - hav|fffd|rie+|fffd|ivel+vandalismus+odcizen|fffd|"
      Case 6: Hodnota = "HAV|fffd|RIE": Polozka(2) = "HAV|fffd|RIE - hav|fffd|rie+|fffd|ivel+vandalismus"
      Case 10: Hodnota = "ODCIZEN|fffd|": Polozka(3) = "ODCIZEN|fffd| - odcizen|fffd|+|fffd|ivel"
      Case 14: Hodnota = "TOTAL": Polozka(4) = "TOTAL - hav|fffd|rie+|fffd|ivel+vandalismus+odcizen|fffd| v p|fffd||fffd|pad|fffd| tot|fffd|ln|fffd| |fffd|kody"
     End Select
     If Len(Hodnota) > 0 Then
      Mam = 2
      Polozka(0) = "Rozsah poji|fffd|t|fffd|n|fffd|: "
     End If
    Case P_0604HAV
     Select Case P_Smlouva(Radek1).HAV_Spoluu
      Case 0: Hodnota = "1%, min. 1 000 K|fffd|"
      Case 1: Hodnota = "5%, min. 5 000 K|fffd|"
      Case 2: Hodnota = "10%, min. 10 000 K|fffd|"
      Case 3: Hodnota = "20%, min. 20 000 K|fffd|"
     End Select
    Case P_0605HAV: Hodnota = P_Smlouva(Radek1).HAV_RPZ
    Case P_0606HAV: Hodnota = P_Smlouva(Radek1).HAV_RPS
    Case P_0702PSk: Hodnota = P_Smlouva(Radek1).PSk_RPZ
    Case P_0801UPO
     Select Case Data.Cells(Radek1, Sloupec).Value
      Case 1: Hodnota = "100 000/200 000/100/100"
      Case 2: Hodnota = "200 000/400 000/200/200"
      Case 3: Hodnota = "300 000/600 000/200/200"
      Case 4: Hodnota = "400 000/800 000/200/200"
     End Select
     If Len(Hodnota) > 0 Then
      Mam = 3
      Polozka(0) = "|fffd|RAZ - Pojistn|fffd| |fffd||fffd|stky: Smrt/Trval|fffd| n|fffd|sledky/Denn|fffd| od|fffd|kodn|fffd| b|fffd|hem l|fffd||fffd|en|fffd|/Denn|fffd| od|fffd|kodn|fffd| po dobu hospitalizace"
     End If
    Case P_0803UPO: Hodnota = P_Smlouva(Radek1).UPO_RPZ
    Case P_0902PZa: Hodnota = P_Smlouva(Radek1).PZa_RPZ
    Case P_1002PNV: Hodnota = P_Smlouva(Radek1).PNV_RPZ
    Case P_1101PAs
     Select Case Data.Cells(Radek1, Sloupec).Value
      Case "AP1": Hodnota = "Plus 1x"
      Case "AP2": Hodnota = "Plus 2x"
      Case "ACT": Hodnota = "CAR/TIR+"
      Case "APV": Hodnota = "P|fffd||fffd|pojn|fffd| vozidlo"
      Case "ACAP1": Hodnota = "Plus 1x a p|fffd||fffd|pojn|fffd| vozidlo"
      Case "ACAP2": Hodnota = "Plus 2x a p|fffd||fffd|pojn|fffd| vozidlo"
      Case "ACTP": Hodnota = "CAR/TIR+ a p|fffd||fffd|pojn|fffd| vozidlo"
     End Select
    Case P_1102PAs: Hodnota = P_Smlouva(Radek1).PAs_RPZ
    Case P_1103PAs: Hodnota = P_Smlouva(Radek1).PAs_RPS
    Case P_1202PPR: Hodnota = P_Smlouva(Radek1).PPR_RPZ
    Case P_1302PLi: Hodnota = P_Smlouva(Radek1).PLi_RPZ
    Case P_1405StP: Hodnota = P_Smlouva(Radek1).StP_RPZ
    Case P_1406StP: Hodnota = P_Smlouva(Radek1).StP_RPS
    Case P_1503GAP: Hodnota = P_Smlouva(Radek1).GAP_RPZ
    Case P_1504GAP: Hodnota = P_Smlouva(Radek1).GAP_RPS
    Case P_1601Kal: Hodnota = P_Smlouva(Radek1).Kal_RPZ
    Case P_1602Kal: Hodnota = P_Smlouva(Radek1).Kal_RPS
    Case P_1603Kal
     Zapsano = True
     If S1 > 0 Or S2 > 0 Then Hodnota = "=RC[-1]/" & P_Flotila.Frk
     If S1 > 0 Then .Worksheets(1).Cells(Radek2, S1).FormulaR1C1 = Hodnota
     If S2 > 0 Then .Worksheets(2).Cells(Radek2, S2).FormulaR1C1 = Hodnota
     If S3 > 0 Then .Worksheets(3).Cells(Radek2, S3).FormulaR1C1 = "=(RC[-13]+RC[-10]+RC[-8]+RC[-6]+RC[-3]+RC[-1])/" & P_Flotila.Frk
     If S4 > 0 Then .Worksheets(4).Cells(Radek2, S4).FormulaR1C1 = "=(RC[-12]+RC[-6]+RC[-1])/" & P_Flotila.Frk
     If S5 > 0 Then .Worksheets(5).Cells(Radek2, S5).Value = P_Smlouva(Radek1).Kal_LPS
    
    Case P_1402StP
     Select Case Data.Cells(Radek1, Sloupec).Value
      Case 1: Hodnota = "N|fffd|KLADN|fffd|": Polozka(1) = "N|fffd|KLADN|fffd| - n|fffd|kladn|fffd| automobil se skl|fffd|p|fffd||fffd|kou nebo jinou n|fffd|stavbou mimo kat.2"
      Case 2: Hodnota = "AUTOBAGR": Polozka(2) = "AUTOBAGR - autobagr, autoje|fffd||fffd|b, mix na beton"
      Case 3: Hodnota = "STAVEBN|fffd|": Polozka(3) = "STAVEBN|fffd| - stavebn|fffd| stroj, skladov|fffd| a manipula|fffd|n|fffd| technika"
      Case 4: Hodnota = "N|fffd|V|fffd|S": Polozka(4) = "N|fffd|V|fffd|S - n|fffd|v|fffd|s nebo p|fffd||fffd|v|fffd|s se strojn|fffd| n|fffd|stavbou"
      Case 5: Hodnota = "TRAKTOR": Polozka(5) = "TRAKTOR - traktor nebo jin|fffd| zem|fffd|d|fffd|lsk|fffd| technika mimo kombajn"
      Case 6: Hodnota = "KOMBAJN": Polozka(6) = "KOMBAJN - Kombajn"
     End Select
     If Len(Hodnota) > 0 Then
      Mam = 4
      Polozka(0) = "Kategorie pro ST2: "
     End If
    Case P_1403StP
     Select Case Data.Cells(Radek1, Sloupec).Value
      Case 5: Hodnota = "5%, min. 5 000 K|fffd|"
      Case 10: Hodnota = "10%, min. 10 000 K|fffd|"
      Case 20: Hodnota = "20%, min. 20 000 K|fffd|"
     End Select
    Case P_1502GAP
     Select Case Data.Cells(Radek1, Sloupec).Value
      Case 1: Hodnota = "1% - 5%, nebo do min. 5 000 K|fffd|"
      Case 2: Hodnota = "6% - 10%, nebo do min. 10 000 K|fffd|"
      Case 3: Hodnota = "11% - 20%, nebo do min. 20 000 K|fffd|"
      Case 4: Hodnota = "21% - 50%, nebo do min. 50 000 K|fffd|"
     End Select
    Case Else: Hodnota = Data.Cells(Radek1, Sloupec).Value
   End Select
   If Zapsano Then
    Zapsano = False
   Else
    If S1 > 0 Then .Worksheets(1).Cells(Radek2, S1).Value = Hodnota
    If S2 > 0 Then .Worksheets(2).Cells(Radek2, S2).Value = Hodnota
    If S3 > 0 Then .Worksheets(3).Cells(Radek2, S3).Value = Hodnota
    If S4 > 0 Then If Not (Sloupec = P_0417PrP And P_Smlouva(Radek1).GAP_RPZ = "") Then .Worksheets(4).Cells(Radek2, S4).Value = Hodnota
    If S5 > 0 Then .Worksheets(5).Cells(Radek2, S5).Value = Hodnota
   End If
   Radek2 = Radek2 + 1
  Next Radek1
  If Sloupec = P_0104Sml Then
   For VList = 1 To 5
    .Worksheets(VList).Cells(12, 1).Value = "Po|fffd||fffd|tek poji|fffd|t|fffd|n|fffd|: " & Dat_min & IIf(Dat_min <> Dat_max, " - " & Dat_max, "")
   Next VList
  ElseIf Format_bunky <> "" Then
   If S1 > 0 Then .Worksheets(1).Range(Cells(14, S1).Address, Cells(Radek2, S1).Address).NumberFormatLocal = Format_bunky
   If S2 > 0 Then .Worksheets(2).Range(Cells(14, S2).Address, Cells(Radek2, S2).Address).NumberFormatLocal = Format_bunky
   If S3 > 0 Then .Worksheets(3).Range(Cells(14, S3).Address, Cells(Radek2, S3).Address).NumberFormatLocal = Format_bunky
   If S4 > 0 Then .Worksheets(4).Range(Cells(14, S4).Address, Cells(Radek2, S4).Address).NumberFormatLocal = Format_bunky
   If S5 > 0 Then .Worksheets(5).Range(Cells(14, S5).Address, Cells(Radek2, S5).Address).NumberFormatLocal = Format_bunky
  End If
  If Mam > 0 Then
   Hodnota = ""
   For Radek1 = 1 To 6
    If Len(Polozka(Radek1)) > 0 Then
     If Mam = 2 Then
      If Radek1 < 4 Then
       Polozka(5) = "pro osobn|fffd| a n|fffd|kladn|fffd| vozidla do 3 500kg sjedn|fffd|no zdarma poji|fffd|t|fffd|n|fffd| n|fffd|klad|fffd| na n|fffd|jem n|fffd|hradn|fffd|ho vozidla"
      ElseIf Radek1 = 4 And Len(Polozka(5)) > 0 Then
       Polozka(5) = "mimo variantu TOTAL je " & Polozka(5)
      ElseIf Radek1 = 5 Then
       Hodnota = Hodnota & " (" & Polozka(Radek1) & ")."
       Exit For
      End If
     End If
     If Len(Hodnota) > 0 Then
      Hodnota = Hodnota & ", " & Polozka(Radek1)
     Else
      Hodnota = Polozka(Radek1)
     End If
    End If
   Next Radek1
   Hodnota = Polozka(0) & Hodnota
   If S1 > 0 And Mam = 1 Then .Worksheets(1).Cells(Radek2 + 2, 1).Value = Hodnota
   If S2 > 0 And Mam = 2 Then .Worksheets(2).Cells(Radek2 + 2, 1).Value = Hodnota
   If S3 > 0 And Mam = 3 Then .Worksheets(3).Cells(Radek2 + 2, 1).Value = Hodnota
   If S4 > 0 And Mam = 4 Then .Worksheets(4).Cells(Radek2 + 2, 1).Value = Hodnota
  End If
 End With
End Sub
Attribute VB_Name = "M_Web_service"
Option Explicit
Sub Web_services(Optional Nic As Boolean)
 Dim ObjHTTP As Object, Odpoved As Object, Polozka, BinHod As String * 4, PolozkaHod As String, Chyba As String, Status As String

 Call Test_funkcnosti
 On Error GoTo MamChybu
 P_Web_prihlasen = False
 P_Web_kosilka = False
 P_Web_prava = 0
 Set ObjHTTP = CreateObject("Microsoft.XMLHTTP")
 Set Odpoved = CreateObject("Microsoft.XMLDOM")
 Set Polozka = CreateObject("Microsoft.XMLDOM")
 With ObjHTTP
  .Open "POST", "http://flotily.cpp.cz/dsv_fap" & IIf(P_Web_test, "-test", "") & "/xml_sit/SluzbaKosilka3.php", False
  .SetRequestHeader "Content-Type", "application/x-www-form-urlencoded"
  .Send ("login=" & P_Web_login & "&pwd=" & P_Web_heslo & "&cisloFlotily=" & Data.Cells(P_Pocatek_hla_r, P_hl03_cis_hip).Value)
  If .readyState = 4 And .Status = 200 Then
   Odpoved.Load .responseXML
'   Debug.Print .responsetext
   Status = Odpoved.getElementsByTagName("ResponseIK").Item(0).getAttributeNode("status").text
   Select Case Status
    Case "ok", "notificationfail"
     For Each Polozka In Odpoved.getElementsByTagName("ResponseIK/ResponseItem")
      PolozkaHod = Polozka.getAttributeNode("hodnota").text
      Chyba = ""
      Select Case Polozka.getAttributeNode("polozka").text
       Case "prava": P_Web_prava = IIf(IsNumeric(PolozkaHod), PolozkaHod, Chyba = "Nelze zjistit va|fffd|e pr|fffd|va")
       Case "typFlotily": K_Flotila.Typ = PolozkaHod
       Case "frekvencePlaceni": K_Flotila.Frk = PolozkaHod
       Case "pojistnikIC": K_Flotila.PIC = PolozkaHod
       Case "pojistnikNazev": K_Flotila.PNz = PolozkaHod
       Case "slevaPOV": K_Flotila.POV = PolozkaHod
       Case "slevaHAV": K_Flotila.HAV = PolozkaHod
       Case "slevaPAs": K_Flotila.PAs = PolozkaHod
       Case "slevaStrojni": K_Flotila.StP = PolozkaHod
       Case "slevaGAP": K_Flotila.GAP = PolozkaHod
       Case "verzeFAP": P_verzeFAP = PolozkaHod
       Case "DatSaz": P_DatSaz = IIf(IsDate(PolozkaHod), PolozkaHod, Chyba = "Nelze zjistit datum sazebn|fffd|ku")
       Case "kodAsistence": P_Kod_asist = IIf(Status = "notificationfail", "", PolozkaHod)
       Case "datumSjednani"
        If IsDate(PolozkaHod) Then
         K_Flotila.DSF = CDate(PolozkaHod)
        Else
         Chyba = "Nelze zjistit datum sjedn|fffd|n|fffd| flotily"
        End If
       Case "datumPocatku"
        If IsDate(PolozkaHod) Then
         K_Flotila.DPF = CDate(PolozkaHod)
        Else
         Chyba = "Nelze zjistit datum po|fffd||fffd|tku flotily"
        End If
      End Select
      If Chyba <> "" Then GoTo MamChybu
     Next Polozka
     P_Web_prihlasen = True
     Call GDPR(False)
     If Status = "ok" Then P_Web_kosilka = True
     If NovaVerze And (P_verzeFAP <> "" Or P_DatSaz <> "0:00:00") Then
      If Sazebnik("VER_FAP", 1) >= P_verzeFAP Or Sazebnik("SAZ_DAT", 1) >= P_DatSaz Then
       MsgBox "Pou|fffd||fffd|v|fffd|te starou verzi " & Sazebnik("TYP_DS", 1) & "u", vbExclamation
       NovaVerze = False
      End If
     End If
     If Status = "notificationfail" Then
      If PouzeLogin Then
       PouzeLogin = False
      Else
       MsgBox Odpoved.getElementsByTagName("ResponseIK").Item(0).getAttributeNode("message").text
      End If
     End If
    Case Else: MsgBox Odpoved.getElementsByTagName("ResponseIK").Item(0).getAttributeNode("message").text
   End Select
  Else
   MsgBox "Probl|fffd|m p|fffd|i komunikaci se serverem."
  End If
  BinHod = DecToBin(P_Web_prava, 4)
  If Mid(BinHod, 1, 1) = "1" Then P_Web_prava = P_Web_prava - 8
  Call AddMenu
 End With
MamChybu:
 If Err <> 0 Then
  If Chyba = "" Then Chyba = "Chyba komunikace"
  MsgBox Chyba
 End If
 On Error GoTo 0
End Sub
Attribute VB_Name = "M_Zelene_karty"
Option Explicit
Sub Zelene_karty(Optional Nic As Boolean)
 Dim WBVystup As Workbook, VList As Worksheet, VRadek As Long, ZRadek As Long, DatPoc As Date, DatKon As Date, Ident As String, Hodnota As String, Polozka As Byte, Typ As String, Uber As Single

 Call Aktualizovat_proces("Generuji zelen|fffd| karty ...")

 Application.ScreenUpdating = False
 Set WBVystup = Workbooks.Add
 Set VList = WBVystup.Worksheets(1)
 VList.Name = "Tisk"
 Application.DisplayAlerts = False
 If Application.Version <> "12.0" Then
  For Each List In WBVystup.Worksheets
   If List.Name <> VList.Name Then List.Delete
  Next List
 End If
 Application.DisplayAlerts = True
 Do_radku = Rozah_listu(Sesit.Name, Data.Name)
 Procenta = 1 / (Do_radku - P_Pocatek_dat_r + 3)

 If Val(Application.Version) = 15 Then Uber = 0.4
 With VList
  .Columns(1).ColumnWidth = 5.43 - Uber
  .Columns(2).ColumnWidth = 5.43 - Uber
  .Columns(3).ColumnWidth = 5.43 - Uber
  .Columns(4).ColumnWidth = 5.43 - Uber
  .Columns(5).ColumnWidth = 5.43 - Uber
  .Columns(6).ColumnWidth = 5.43 - Uber
  .Columns(7).ColumnWidth = 9 - Uber
  .Columns(8).ColumnWidth = 20 - Uber
  .Columns(9).ColumnWidth = 2 - Uber
  .Columns(10).ColumnWidth = 22.43 - Uber
  .Columns("A:H").HorizontalAlignment = xlCenter
  With .Cells
   .NumberFormat = "@"
   .Font.Size = 8
   .Font.Name = "Arial"
   .VerticalAlignment = xlCenter
  End With
  With .Columns("A:G").Font
   .Bold = True
   .Size = 10
  End With
  ZRadek = P_Pocatek_dat_r - 1

  If P_Kod_asist = "" Then P_Kod_asist = Sazebnik("ID_FLOT", 1, Data.Cells(P_Pocatek_hla_r, P_hl03_cis_hip).Value, 2)
  If P_Kod_asist = "^" Then If MsgBox("Asisten|fffd|n|fffd| slu|fffd|ba Global Assistance je poskytov|fffd|na", vbQuestion + vbYesNo) = vbNo Then P_Kod_asist = "NE"
  If P_Kod_asist = "^" Then P_Kod_asist = Sazebnik("VER_ZK", 1, P_Flotila.DSF, 3)
  
  For VRadek = 1 To (Do_radku - P_Pocatek_dat_r + 1) * 20 Step 20
   Do
    If Do_radku = ZRadek Then Exit For
    ZRadek = ZRadek + 1
    Call Aktualizovat_postup
   Loop Until P_Smlouva(ZRadek).MamPOV = "A"
   .Rows(VRadek).RowHeight = 245.25
   .Rows(VRadek + 1).RowHeight = 10.5
   .Rows(VRadek + 2).RowHeight = 10.5
   .Rows(VRadek + 3).RowHeight = 10.5
   .Rows(VRadek + 4).RowHeight = 3.75
   .Rows(VRadek + 5).RowHeight = 12.75
   .Rows(VRadek + 6).RowHeight = 12.75
   .Rows(VRadek + 7).RowHeight = 26.25
   .Rows(VRadek + 8).RowHeight = 22.5
   .Rows(VRadek + 9).RowHeight = 112.5
   .Rows(VRadek + 10).RowHeight = 66
'   .Rows(VRadek + 9).RowHeight = 176.25
   .Rows(VRadek + 11).RowHeight = 10.5
   .Rows(VRadek + 12).RowHeight = 10.5
   .Rows(VRadek + 13).RowHeight = 10.5
   .Rows(VRadek + 14).RowHeight = 3.75
   .Rows(VRadek + 15).RowHeight = 12.75
   .Rows(VRadek + 16).RowHeight = 12.75
   .Rows(VRadek + 17).RowHeight = 26.25
   .Rows(VRadek + 18).RowHeight = 22.5
   .Rows(VRadek + 19).RowHeight = 112.5

   .Range(.Cells(VRadek + 1, 10).Address & "," & .Cells(VRadek + 11, 10).Address).Value = Trim(Data.Cells(ZRadek, P_0202Drz).Value & " " & Data.Cells(ZRadek, P_0204Drz).Value & " " & Data.Cells(ZRadek, P_0203Drz).Value)
   .Range(.Cells(VRadek + 2, 10).Address & "," & .Cells(VRadek + 12, 10).Address).Value = Trim(Data.Cells(ZRadek, P_0205Drz).Value & " " & Data.Cells(ZRadek, P_0206Drz).Value)
   .Range(.Cells(VRadek + 3, 10).Address & "," & .Cells(VRadek + 13, 10).Address).Value = Trim(Format(Data.Cells(ZRadek, P_0207Drz).Value, "000\ 00") & "  " & Data.Cells(ZRadek, P_0208Drz).Value)
   With .Range(.Cells(VRadek + 5, 8).Address & "," & .Cells(VRadek + 15, 8).Address)
    .Value = Data.Cells(ZRadek, P_0101Sml).Value
    .HorizontalAlignment = xlLeft
    .Font.Size = 10
    .Font.Bold = True
   End With
   DatPoc = Data.Cells(ZRadek, P_0104Sml).Value
   .Range(.Cells(VRadek + 6, 1).Address & "," & .Cells(VRadek + 16, 1).Address).Value = Format(DatPoc, "dd")
   .Range(.Cells(VRadek + 6, 2).Address & "," & .Cells(VRadek + 16, 2).Address).Value = Format(DatPoc, "mm")
   .Range(.Cells(VRadek + 6, 3).Address & "," & .Cells(VRadek + 16, 3).Address).Value = Format(DatPoc, "yyyy")
   DatKon = DateSerial(Year(DatPoc) + 1, Month(DatPoc), Day(DatPoc) - 1)
   If Data.Cells(ZRadek, P_0105Sml).Value > 0 And Data.Cells(ZRadek, P_0105Sml).Value < DatKon Then
    DatKon = Data.Cells(ZRadek, P_0105Sml).Value
    If DatKon - DatPoc < 15 Then DatKon = DatPoc + 15
   End If
   .Range(.Cells(VRadek + 6, 4).Address & "," & .Cells(VRadek + 16, 4).Address).Value = Format(DatKon, "dd")
   .Range(.Cells(VRadek + 6, 5).Address & "," & .Cells(VRadek + 16, 5).Address).Value = Format(DatKon, "mm")
   .Range(.Cells(VRadek + 6, 6).Address & "," & .Cells(VRadek + 16, 6).Address).Value = Format(DatKon, "yyyy")
   Ident = ""
   Hodnota = Data.Cells(ZRadek, P_0401PrP).Value
   If Hodnota <> "" Then
    Ident = "RZ: " & Hodnota
   Else
    Hodnota = Data.Cells(ZRadek, P_0403PrP).Value
    Ident = "VIN: " & Hodnota
   End If
   With .Range(.Cells(VRadek + 8, 1).Address & "," & .Cells(VRadek + 18, 1).Address)
    .Value = Trim(Ident)
    .Font.Size = 9
   End With
   Select Case P_Smlouva(ZRadek).Dru_voz
    Case "O", "Q", "S": Hodnota = "A"
    Case "E", "F", "K", "L", "M": Hodnota = "B"
    Case "D", "H", "N", "T", "U", "V": Hodnota = "C"
    Case "A", "B", "J": Hodnota = "E"
    Case "I", "P", "R": Hodnota = "F"
    Case "X", "Y", "W", "Z": Hodnota = "G"
   End Select
   .Range(.Cells(VRadek + 8, 7).Address & "," & .Cells(VRadek + 18, 7).Address).Value = Hodnota
   .Range(.Cells(VRadek + 8, 8).Address & "," & .Cells(VRadek + 18, 8).Address).Value = Trim(P_Smlouva(ZRadek).Znacka_voz & vbLf & Data.Cells(ZRadek, P_0406PrP).Value)
   If P_Kod_asist <> "NE" And P_Kod_asist <> "^" Then
    Hodnota = ""
    For Polozka = 1 To 3
     Select Case Polozka
      Case 1: Ident = P_Smlouva(ZRadek).POV_Lim_pln: Typ = "POV"
      Case 2: Ident = P_0601HAV: Typ = "HAV"
      Case 3: Ident = P_1101PAs: Typ = ""
     End Select
     If Polozka > 1 Then Ident = Data.Cells(ZRadek, CByte(Ident)).Value
     If Ident <> "" Then Hodnota = Hodnota & ", " & Sazebnik(P_Kod_asist & "_ID_TA", 1, Typ & Ident, IIf(P_Smlouva(ZRadek).Hmotnost > 3500, 3, 2))
    Next Polozka
    With .Range(.Cells(VRadek + 9, 10).Address & "," & .Cells(VRadek + 19, 10).Address)
     .Value = Mid(Hodnota, 3)
     .VerticalAlignment = xlBottom
    End With
   End If
   .Range(.Cells(VRadek + 5, 8).Address, .Cells(VRadek + 6, 8).Address).Merge
   .Range(.Cells(VRadek + 15, 8).Address, .Cells(VRadek + 16, 8).Address).Merge
   .Range(.Cells(VRadek + 8, 1).Address, .Cells(VRadek + 8, 6).Address).Merge
   .Range(.Cells(VRadek + 18, 1).Address, .Cells(VRadek + 18, 6).Address).Merge
   If Do_radku < ZRadek Then Exit For
  Next VRadek
  Call Aktualizovat_postup

  With .PageSetup
   .LeftMargin = 18
   .RightMargin = 28
   .TopMargin = IIf(Val(Application.Version) = 15, 74, 69)
   .BottomMargin = 40
   .HeaderMargin = 37
   .FooterMargin = 37
   .PrintTitleRows = ""
   .PrintTitleColumns = ""
   .LeftHeader = ""
   .CenterHeader = ""
   .RightHeader = ""
   .LeftFooter = ""
   .CenterFooter = ""
   .RightFooter = ""
   .PrintHeadings = False
   .PrintGridlines = False
   .PrintComments = xlPrintNoComments
   .CenterHorizontally = False
   .CenterVertically = False
   .Orientation = xlLandscape
   .Orientation = xlPortrait
   .Draft = False
   .PaperSize = xlPaperA4
   .FirstPageNumber = xlAutomatic
   .Order = xlDownThenOver
   .BlackAndWhite = False
   .PrintErrors = xlPrintErrorsDisplayed
   .Zoom = CByte(GetSetting("DS-FAP", "TiskZK", "Zoom24", 100))
  End With
  Call Aktualizovat_postup
'  If Do_radku - P_Pocatek_dat_r <> .HPageBreaks.Count Then MsgBox "Pozor, je rozd|fffd|l mezi po|fffd|tem smluv a po|fffd|tem str|fffd|nek!" & vbCrLf & "Ov|fffd||fffd|te nastaven|fffd| tisk|fffd|rny a vzhledu p|fffd|ed tiskem.", vbCritical
  .Protect "hesloobchod", True, True, True, AllowFormattingCells:=True, AllowFormattingColumns:=True, AllowFormattingRows:=True, AllowSorting:=True, AllowFiltering:=True
 End With
 Application.ScreenUpdating = True
End Sub
Attribute VB_Name = "ThisWorkbook"
Attribute VB_Base = "0{00020819-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
 Option Explicit
Private Sub Workbook_Activate()
 Call Test_funkcnosti
 Call AddMenu
End Sub
Private Sub Workbook_BeforeClose(Cancel As Boolean)
 Call Smaz_menu
End Sub
Private Sub Workbook_BeforePrint(Cancel As Boolean)
 If ActiveSheet.Name = "Odhl|fffd|ky" And Range("D4").Value = 0 Then
  MsgBox "List odhl|fffd|ek nejde vytisknou p|fffd|ed ov|fffd||fffd|en|fffd|m ko|fffd|ilky"
  Cancel = True
 End If
End Sub
Private Sub Workbook_Deactivate()
 Call Test_funkcnosti
 Call Smaz_menu
End Sub
Private Sub Workbook_BeforeSave(ByVal SaveAsUI As Boolean, Cancel As Boolean)
 Application.EnableEvents = False
 Call Test_funkcnosti
 Call GDPR(True)
 Cancel = Ulozit_verzi
 Application.EnableEvents = True
End Sub
Private Sub Workbook_Open()
 Call Zaklad
 Call Zamkni_sktyj_vse
 NovaVerze = True
 PouzeLogin = False
 P_Web_kosilka = False
 Sesit.Worksheets("N|fffd|pov|fffd|da").Select
End Sub
Private Sub Workbook_SheetFollowHyperlink(ByVal Sh As Object, ByVal Target As Hyperlink)
 If Sh.Name = "data" Then MsgBox Range(Replace(Target.Name, "data!", "napoveda!")).Value
End Sub

' InQuest injected base64 decoded content
' t7CxG

INQUEST-PP=macro
