Attribute VB_Name = "Feuil1"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Control = "cmdTaux, 41, 0, MSForms, CommandButton"
Attribute VB_Control = "txtPassWord, 42, 1, MSForms, TextBox"
Attribute VB_Control = "lblPassWord, 43, 2, MSForms, Label"


Private Sub cmdTaux_Click()
    On Error Resume Next
    txtPassWord.Value = ""
    lblPassWord.Visible = True
    txtPassWord.Visible = True
    txtPassWord.Enabled = True
    txtPassWord.Activate
    
End Sub

Private Sub CommandButton1_Click()
On Error GoTo erreur_impression
Application.ScreenUpdating = False
    Sheets(Array(SheetName(3), SheetName(10), SheetName(11), SheetName(13), SheetName(15))).Select
    Sheets(SheetName(3)).Activate
    ActiveWindow.SelectedSheets.PrintOut Copies:=1
    Sheets(SheetName(3)).Select
erreur_impression:
Exit Sub

    
End Sub

Private Sub lblPassWord_Click()

End Sub

Private Sub txtPassword_Change()
    Debug.Print txtPassWord.Text
End Sub

Private Sub txtPassword_KeyUp(ByVal KeyCode As MSForms.ReturnInteger, ByVal Shift As Integer)
    If KeyCode = vbKeyReturn Then
        IsPassWOk
    End If
End Sub

Private Sub txtPassword_LostFocus()
    IsPassWOk
End Sub

Public Sub IsPassWOk()
Dim IsOk As Boolean

    IsOk = False
    If Worksheets(SheetName(5)).Cells(30, 13).Value = "" Then
        Worksheets(SheetName(5)).Cells(30, 13).Value = txtPassWord.Text
        IsOk = True
    Else
        If StrComp(txtPassWord.Text, Worksheets(SheetName(5)).Cells(30, 13).Value) = 0 Then
            IsOk = True
        End If
    End If
    If btnChangPW = True Then
        Worksheets(SheetName(5)).Cells(30, 13).Value = txtPassWord.Text
    End If
    
    lblPassWord.Visible = False
    txtPassWord.Visible = False
    txtPassWord.Value = ""
       
    If IsOk = True Then
       Application.ScreenUpdating = False
       ActiveWorkbook.Unprotect (pg)
       Sheets(SheetName(5)).Visible = True
       Worksheets(SheetName(5)).Activate

       ActiveSheet.Unprotect Password:=pg
       ActiveSheet.Range("B4:C250").Select
       Selection.Locked = False
       ActiveSheet.Range("B4").Select
       ActiveSheet.Protect Password:=pg

       Worksheets(SheetName(5)).Cells(4, 1).Select
   
       ActiveWorkbook.Protect Password:=pg
       Application.ScreenUpdating = True
    End If


End Sub

Private Sub Worksheet_Activate()

    cmdTaux.Left = 521
    cmdTaux.Top = 96
    If Language = 1 Then
        cmdTaux.Caption = "Taux 1"
    Else
        cmdTaux.Caption = "Rate 1"
    End If
    cmdTaux.Visible = True
   '*** Password Control
    lblPassWord.Visible = False
    txtPassWord.Visible = False
    txtPassWord.Value = ""
    
End Sub

Attribute VB_Name = "Feuil10"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Feuil11"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Feuil12"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Control = "btn_CorrectionBacColler, 2, 0, MSForms, CommandButton"

Private Sub btn_CorrectionBacColler_Click()

'Dim iCol, iRow, iCompt1, iCompt2 As Integer
'Dim sInString, s As String
'iCol = 2
'iRow = 7
'iCompt1 = 0
'iCompt2 = 0
'For iCompt1 = iRow To 250
'    For iCompt2 = 2 To 91
'        If Len(Trim(Sheets(SheetName(9)).Cells(iCompt1, iCompt2).Value)) > 0 Then
'           Sheets(SheetName(9)).Cells(iCompt1, iCompt2).Value = cleanUpDayString(Sheets(SheetName(9)).Cells(iCompt1, iCompt2).Value)
'        End If
'    Next
'Next

Const LineChange = vbCr + vbLf
Dim iCol, iRow, iCompt1 As Integer
Dim sInString, s As String
Dim sStringInput As Variant

Application.ScreenUpdating = False
Sheets(SheetName(9)).Select
ActiveSheet.Unprotect Password:=pg
Range("A7:CM250").Select
  
For iCol = 2 To 91
For iRow = 7 To 250
    If Len(Cells(iRow, iCol).Value) > 0 Then
      sStringInput = Cells(iRow, iCol).Value
      Cells(iRow, iCol).ClearContents
      Cells(iRow, iCol).ClearFormats
    
      sStringInput = Replace(sStringInput, ",", ".")
      sStringInput = Replace(sStringInput, "$", "")
      sStringInput = Replace(sStringInput, " ", "")
      sStringInput = removeASCII(sStringInput)
      sStringInput = cleanUpDayString(sStringInput)
      Cells(iRow, iCol).Value = sStringInput
    End If
Next
Next


Range("B4:E250").Select

If Application.International(xlCountrySetting) = 1 Then
  Selection.NumberFormat = "# ##0"
Else
  Selection.NumberFormat = "#,##0"
End If

With Selection
  .HorizontalAlignment = xlCenter
  .VerticalAlignment = xlBottom
  .WrapText = False
  .Orientation = 0
  .AddIndent = False
  .IndentLevel = 0
  .ShrinkToFit = False
  .ReadingOrder = xlContext
  .MergeCells = False
End With

Range("A4:E250").Select
With Selection.Borders(xlInsideHorizontal)
  .LineStyle = xlContinuous
  .Weight = xlThin
  .ColorIndex = xlAutomatic
End With
Range("A4").Select
ActiveSheet.Protect Password:=pg
Application.ScreenUpdating = True


If Language = 1 Then
    s = MsgBox("Fin du traitement", vbOKOnly, "Correction termin|fffd|e")
Else
    s = MsgBox("End of process", vbOKOnly, "Correction Completed")
End If
End Sub
Function cleanUpDayString(InString As Variant) As Variant

Dim iStringLenght, iPos, iCompt1 As Integer
iStringLenght = Len(InString)
If (iStringLenght > 0) Then
    For iCompt1 = 1 To iStringLenght
        If UCase(Mid(InString, iCompt1, 1)) = "J" Or UCase(Mid(InString, iCompt1, 1)) = "D" Then
            Exit For
        End If
    Next
    
    cleanUpDayString = Trim(Mid(InString, 1, (iCompt1 - 1)))
Else
    cleanUpDayString = ""
End If


End Function
Private Function removeASCII(sInput As Variant) As Variant

Dim sStringInput, sCharInput, sStringOutput As Variant
Dim sMessageDisplay As String, I As Integer


sStringInput = sInput
sStringOutput = ""
For I = 1 To Len(sStringInput)
sCharInput = Mid(sStringInput, I, 1)

If Asc(sCharInput) <> "160" Then
    sStringOutput = sStringOutput & sCharInput
End If

Next

removeASCII = sStringOutput

End Function

Attribute VB_Name = "Feuil13"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Control = "btn_CorrectionTaux1Rate, 2, 0, MSForms, CommandButton"
Attribute VB_Control = "btnCorrectionDailyRate, 3, 1, MSForms, CommandButton"


Private Sub CommandButton1_Click()
Application.ScreenUpdating = False
boxmotdepasse.Show
Range("nouveau").Value = Range("mot")
Range("a1").Select

End Sub

Private Sub btn_CorrectionTaux1Rate_Click()
Const LineChange = vbCr + vbLf
Dim iCol, iRow, iCompt1 As Integer
Dim sInString, sStringInput As String

Application.ScreenUpdating = False
Sheets(SheetName(5)).Select
ActiveSheet.Unprotect Password:=pg
Range("B4:C250").Select
Selection.Locked = False
Range("B4").Select

iCol = 3
iRow = 4
iCompt1 = 0
For iCompt1 = iRow To 250
  sStringInput = Cells(iCompt1, iCol).Value
  If Not IsNumeric(sStringInput) Then
    If Len(sStringInput) > 0 Then
      Cells(iCompt1, iCol).ClearContents
      Cells(iCompt1, iCol).ClearFormats
      sStringInput = Replace(sStringInput, "$", "")
      Cells(iCompt1, iCol).Value = cleanUpRate1String(sStringInput)
    End If
  End If
Next
Range("C4:C250").Select
If Application.International(xlCountrySetting) = 1 Then
 Selection.NumberFormat = "$#,##0.00"
Else
 Selection.NumberFormat = "$# ##0.00"
End If
With Selection
      .HorizontalAlignment = xlCenter
      .VerticalAlignment = xlBottom
      .WrapText = False
      .Orientation = 0
      .AddIndent = False
      .IndentLevel = 0
      .ShrinkToFit = False
      .ReadingOrder = xlContext
      .MergeCells = False
End With
Range("B4:C250").Select
Selection.Locked = False
Range("C4:C250").Select
Selection.Borders(xlDiagonalDown).LineStyle = xlNone
Selection.Borders(xlDiagonalUp).LineStyle = xlNone
With Selection.Borders(xlEdgeLeft)
    .LineStyle = xlContinuous
    .Weight = xlThin
    .ColorIndex = xlAutomatic
End With
With Selection.Borders(xlEdgeTop)
    .LineStyle = xlContinuous
    .Weight = xlThin
    .ColorIndex = xlAutomatic
End With
With Selection.Borders(xlEdgeBottom)
    .LineStyle = xlContinuous
    .Weight = xlThin
    .ColorIndex = xlAutomatic
End With

With Selection.Borders(xlEdgeRight)
    .LineStyle = xlContinuous
    .Weight = xlMedium
    .ColorIndex = xlAutomatic
End With
Selection.Borders(xlInsideVertical).LineStyle = xlNone
With Selection.Borders(xlInsideHorizontal)
    .LineStyle = xlContinuous
    .Weight = xlThin
    .ColorIndex = xlAutomatic
End With
ActiveSheet.Range("B4").Select
ActiveSheet.Protect Password:=pg
Application.ScreenUpdating = True

If Language = 1 Then
    s = MsgBox("Fin du traitement", vbOKOnly, "Correction termin|fffd|e")
Else
    s = MsgBox("End of process", vbOKOnly, "Correction completed")
End If
End Sub
Function cleanUpRate1String(InString As String) As String
Dim iStringLenght, iPos, iCompt1 As Integer
iStringLenght = Len(InString)
If (iStringLenght > 0) Then
    For iCompt1 = 1 To iStringLenght
        If UCase(Mid(InString, iCompt1, 1)) = "J" Or UCase(Mid(InString, iCompt1, 1)) = "D" Or UCase(Mid(InString, iCompt1, 1)) = "H" Then
            Exit For
        End If
    Next
    If UCase(Mid(Trim(InString), iCompt1, 1)) = "H" Then
        cleanUpRate1String = Replace(Trim(Mid(InString, 1, (iCompt1 - 2)) * 7.5), ",", ".")
       
    Else
       cleanUpRate1String = Trim(Mid(InString, 1, (iCompt1 - 2)))
    End If
Else
    cleanUpRate1String = ""
End If
End Function

Private Sub btnCorrectionDailyRate_Click()
Dim iCol, iRow, iCompt1 As Integer
Dim sInString, s  As String

iCol = 3
iRow = 4
iCompt1 = 0
   
    For iCompt1 = iRow To 250
         Sheets(SheetName(5)).Cells(iCompt1, iCol).Value = Sheets(SheetName(5)).Cells(iCompt1, iCol).Value * 7.5
    Next
If Language = 1 Then
    s = MsgBox("Fin du traitement", vbOKOnly, "Conversion termin|fffd|e")
Else
    s = MsgBox("End of process", vbOKOnly, "Conversion completed")
End If
End Sub


Private Sub Worksheet_Deactivate()
    
'    Application.ScreenUpdating = False
    ' change le format pour un format standard : cause du changement copie coller
   
'    ActiveWorkbook.Unprotect Password:=pg
    'Sheets(sheetname(5)).Visible = True
'    Sheets(SheetName(5)).Visible = False
  
'    ActiveWorkbook.Protect Password:=pg
 
End Sub

Sub copie_ress()


End Sub

Attribute VB_Name = "Feuil14"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Feuil15"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Feuil2"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Control = "Btn_Correction_EVA, 8, 0, MSForms, CommandButton"


Private Sub Btn_Correction_EVA_Click()
Dim sStringInput As Variant
Application.ScreenUpdating = False
Sheets(SheetName(10)).Select

ActiveSheet.Unprotect Password:=pg
Range("B14:F74").Select
Selection.Locked = False
Range("B14").Select

For iCol = 2 To 6
For iRow = 14 To 74
    If Len(Cells(iRow, iCol).Value) > 0 Then
      sStringInput = Cells(iRow, iCol).Value
      Cells(iRow, iCol).ClearContents
      Cells(iRow, iCol).ClearFormats
    
      sStringInput = Replace(sStringInput, ",", ".")
      sStringInput = Replace(sStringInput, "$", "")
      sStringInput = Replace(sStringInput, " ", "")
      sStringInput = removeASCII(sStringInput)
      Cells(iRow, iCol).Value = sStringInput
    End If
Next
Next
Range("C14:F74").Select
  Selection.NumberFormat = "#,##0"
  With Selection
      .HorizontalAlignment = xlCenter
      .VerticalAlignment = xlBottom
      .WrapText = False
      .Orientation = 0
      .AddIndent = False
      .IndentLevel = 0
      .ShrinkToFit = False
      .ReadingOrder = xlContext
      .MergeCells = False
  End With

Range("B14:B74").Select
With Selection.Interior
  .ColorIndex = 6
  .Pattern = xlSolid
End With



Range("B14:F74").Select
Selection.Locked = False



Range("B14").Select
ActiveSheet.Protect Password:=pg
Application.ScreenUpdating = True


End Sub
Private Function removeASCII(sInput As Variant) As Variant

Dim sStringInput, sCharInput, sStringOutput As Variant
Dim sMessageDisplay As String


sStringInput = sInput
sStringOutput = ""
For I = 1 To Len(sStringInput)
sCharInput = Mid(sStringInput, I, 1)

If Asc(sCharInput) <> "160" Then
    sStringOutput = sStringOutput & sCharInput
End If

Next

removeASCII = sStringOutput

End Function



Attribute VB_Name = "Feuil3"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Control = "Btn_Correction_Detail, 4, 0, MSForms, CommandButton"

Private Sub Btn_Correction_Detail_Click()

Dim sStringInput As Variant
Application.ScreenUpdating = False
Sheets(SheetName(11)).Select

ActiveSheet.Unprotect Password:=pg
Range("B8:E1007").Select
Selection.Locked = False
Range("B8").Select

For iCol = 2 To 5
For iRow = 8 To 1007
    If Len(Cells(iRow, iCol).Value) > 0 Then
      sStringInput = Cells(iRow, iCol).Value
      Cells(iRow, iCol).ClearContents
      Cells(iRow, iCol).ClearFormats
    
      sStringInput = Replace(sStringInput, ",", ".")
      sStringInput = Replace(sStringInput, "$", "")
      sStringInput = Replace(sStringInput, " ", "")
      sStringInput = removeASCII(sStringInput)
      Cells(iRow, iCol).Value = sStringInput
    End If
Next
Next
Range("B8:E1007").Select
  Selection.NumberFormat = "#,##0"
  With Selection
      .HorizontalAlignment = xlCenter
      .VerticalAlignment = xlBottom
      .WrapText = False
      .Orientation = 0
      .AddIndent = False
      .IndentLevel = 0
      .ShrinkToFit = False
      .ReadingOrder = xlContext
      .MergeCells = False
  End With

Range("A8:E1007").Select
Selection.Locked = False






Range("B8").Select
ActiveSheet.Protect Password:=pg
Application.ScreenUpdating = True



End Sub

Private Function removeASCII(sInput As Variant) As Variant

Dim sStringInput, sCharInput, sStringOutput As Variant
Dim sMessageDisplay As String


sStringInput = sInput
sStringOutput = ""
For I = 1 To Len(sStringInput)
sCharInput = Mid(sStringInput, I, 1)

If Asc(sCharInput) <> "160" Then
    sStringOutput = sStringOutput & sCharInput
End If

Next

removeASCII = sStringOutput

End Function

Attribute VB_Name = "Feuil4"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Private Sub Worksheet_SelectionChange(ByVal Target As Excel.Range)

End Sub
Attribute VB_Name = "Feuil5"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Feuil6"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Control = "cmdBtnValiderListeRessource, 3, 0, MSForms, CommandButton"
Attribute VB_Control = "btnCorrections, 9, 2, MSForms, CommandButton"
Attribute VB_Control = "cmdBtnValiderTaux1, 8, 3, MSForms, CommandButton"
Option Explicit

Private Sub btnCorrections_Click()
Const LineChange = vbCr + vbLf
Dim iCol, iRow, iCompt1 As Integer
Dim sInString, s As String
Dim sStringInput As Variant

Application.ScreenUpdating = False
Sheets(SheetName(7)).Select
ActiveSheet.Unprotect Password:=pg
Range("A4:E250").Select

'iCol = 2
'iRow = 4
'iCompt1 = 0
'    For iCompt1 = iRow To 250
'        Cells(iCompt1, iCol).Value = cleanUpDayString(Cells(iCompt1, iCol).Value)
'        Cells(iCompt1, iCol + 1).Value = cleanUpDayString(Cells(iCompt1, iCol + 1).Value)
'        Cells(iCompt1, iCol + 2).Value = cleanUpDayString(Cells(iCompt1, iCol + 2).Value)
'    Next
    
For iCol = 2 To 4
For iRow = 4 To 250
    If Len(Cells(iRow, iCol).Value) > 0 Then
      sStringInput = Cells(iRow, iCol).Value
      Cells(iRow, iCol).ClearContents
      Cells(iRow, iCol).ClearFormats
    
      sStringInput = Replace(sStringInput, ",", ".")
      sStringInput = Replace(sStringInput, "$", "")
      sStringInput = Replace(sStringInput, " ", "")
      sStringInput = removeASCII(sStringInput)
      sStringInput = cleanUpDayString(sStringInput)
      Cells(iRow, iCol).Value = sStringInput
    End If
Next
Next


Range("B4:E250").Select

If Application.International(xlCountrySetting) = 1 Then
  Selection.NumberFormat = "# ##0"
Else
  Selection.NumberFormat = "#,##0"
End If

With Selection
  .HorizontalAlignment = xlCenter
  .VerticalAlignment = xlBottom
  .WrapText = False
  .Orientation = 0
  .AddIndent = False
  .IndentLevel = 0
  .ShrinkToFit = False
  .ReadingOrder = xlContext
  .MergeCells = False
End With

Range("A4:E250").Select
With Selection.Borders(xlInsideHorizontal)
  .LineStyle = xlContinuous
  .Weight = xlThin
  .ColorIndex = xlAutomatic
End With
Range("A4").Select
ActiveSheet.Protect Password:=pg
Application.ScreenUpdating = True


If Language = 1 Then
    s = MsgBox("Fin du traitement", vbOKOnly, "Correction termin|fffd|e")
Else
    s = MsgBox("End of process", vbOKOnly, "Correction Completed")
End If
End Sub
Function cleanUpDayString(InString As Variant) As Variant

Dim iStringLenght, iPos, iCompt1 As Integer
iStringLenght = Len(InString)
If (iStringLenght > 0) Then
    For iCompt1 = 1 To iStringLenght
        If UCase(Mid(InString, iCompt1, 1)) = "J" Or UCase(Mid(InString, iCompt1, 1)) = "D" Then
            Exit For
        End If
    Next
    
    cleanUpDayString = Trim(Mid(InString, 1, (iCompt1 - 1)))
Else
    cleanUpDayString = ""
End If


End Function
Private Function removeASCII(sInput As Variant) As Variant

Dim sStringInput, sCharInput, sStringOutput As Variant
Dim sMessageDisplay As String, I As Integer


sStringInput = sInput
sStringOutput = ""
For I = 1 To Len(sStringInput)
sCharInput = Mid(sStringInput, I, 1)

If Asc(sCharInput) <> "160" Then
    sStringOutput = sStringOutput & sCharInput
End If

Next

removeASCII = sStringOutput

End Function


Private Sub cmdBtnValiderListeRessource_Click()
'********************************************************************
' Procedure: cmdBtnValiderListeRessource_Click()
' Arguments: Aucun
' Effet: Valider la liste des noms des ressources qui se trouvent dans la feuille Ressources-Coller
'        avec les noms dans la liste des ressources quib se trouvent dans la feuille Taux Vendant
' Appel|fffd| par: Bouton cmdBtnValiderListeRessource
'*********************************************************************
' Version: 1.0
' Date: 2004-06-23
' Par : Hugo page, CGI
'*********************************************************************

Const LineChange = vbCr + vbLf
Dim iCountRessListe, iCountTaux, iCol As Integer
Dim sStringOutput, sStringTitle, answer, sMsgBoxTitle As String
Dim bFind As Boolean
    
    
iCountRessListe = 4
iCountTaux = 4
iCol = 1
If Language = 1 Then
    sMsgBoxTitle = "R|fffd|sultat de la validation de la feuille: RH-Coller "
    sStringTitle = "Il n'y a pas de correspondance pour ce(s) nom(s) dans la feuille: Taux Vendant" & LineChange
Else
    sMsgBoxTitle = "Validation results from HR-Paste"
    sStringTitle = "There are no match for the name(s) in the worksheet: Selling Rate" & LineChange
End If
For iCountRessListe = 4 To 250
 bFind = False
 If Len(Trim(Sheets(SheetName(7)).Cells(iCountRessListe, iCol).Value)) > 0 Then
    For iCountTaux = 4 To 250
       If Len(Trim(Sheets(SheetName(4)).Cells(iCountTaux, iCol).Value)) > 0 Then
        If Sheets(SheetName(7)).Cells(iCountRessListe, iCol).Value = Sheets(SheetName(4)).Cells(iCountTaux, iCol).Value Then
            bFind = True
            Exit For
        End If
       End If
    Next
    If Not bFind Then
        sStringOutput = sStringOutput & "-" & Sheets(SheetName(7)).Cells(iCountRessListe, iCol).Value & LineChange
    End If
 
 End If
    
Next
    If Len(Trim(sStringOutput)) > 0 Then
        answer = MsgBox(sStringTitle & sStringOutput, vbCritical, sMsgBoxTitle)
    Else
        If Language = 1 Then
            answer = MsgBox("Feuille taux vendant: Validation termin|fffd|e", vbInformation, sMsgBoxTitle)
        Else
            answer = MsgBox("Worksheet Selling Rate: Validation completed", vbInformation, sMsgBoxTitle)
        End If
    End If
End Sub

Private Sub cmdBtnValiderTaux1_Click()
'********************************************************************
' Procedure: cmdBtnValiderTaux1_Click()
' Arguments: Aucun
' Effet: Valider la liste des noms des ressources qui se trouvent dans la feuille Ressources-Coller
'        avec les noms dans la liste des ressources quib se trouvent dans la feuille Taux (Hidden Sheet)
' Appel|fffd| par: Bouton cmdBtnValiderListeRessource
'*********************************************************************
' Version: 1.0
' Date: 2004-06-23
' Par : Hugo page, CGI
'*********************************************************************

Const LineChange = vbCr + vbLf
Dim iCountRessListe, iCountTaux, iCol As Integer
Dim sStringOutput, sStringTitle, answer, sMsgBoxTitle As String
Dim bFind As Boolean
    
    
iCountRessListe = 4
iCountTaux = 4
iCol = 1
    
If Language = 1 Then
    sMsgBoxTitle = "R|fffd|sultat de la validation de la feuille: RH-Coller "
    sStringTitle = "Il n'y a pas de correspondance pour ce(s) nom(s) dans la feuille: Taux 1" & LineChange
Else
    sMsgBoxTitle = "Validation results from HR-Paste"
    sStringTitle = "There are no match for the name(s) in the worksheet: Rate 1" & LineChange
End If
  
    
For iCountRessListe = 4 To 250
 bFind = False
 If Len(Trim(Sheets(SheetName(7)).Cells(iCountRessListe, iCol).Value)) > 0 Then
    For iCountTaux = 4 To 250
       If Len(Trim(Sheets(SheetName(5)).Cells(iCountTaux, iCol + 1).Value)) > 0 Then
        If Sheets(SheetName(7)).Cells(iCountRessListe, iCol).Value = Sheets(SheetName(5)).Cells(iCountTaux, iCol + 1).Value Then
            bFind = True
            Exit For
        End If
       End If
    Next
    If Not bFind Then
        sStringOutput = sStringOutput & "-" & Sheets(SheetName(7)).Cells(iCountRessListe, iCol).Value & LineChange
    End If
 
 End If
    
Next
    If Len(Trim(sStringOutput)) > 0 Then
        answer = MsgBox(sStringTitle & sStringOutput, vbCritical, sMsgBoxTitle)
    Else
        If Language = 1 Then
            answer = MsgBox("Feuille taux 1: Validation termin|fffd|e", vbInformation, sMsgBoxTitle)
        Else
            answer = MsgBox("Worksheet Rate 1: Validation completed", vbInformation, sMsgBoxTitle)
        End If
    End If
End Sub



Private Sub RH_Coller_Reset_Click()





End Sub
Attribute VB_Name = "Feuil61"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Control = "btnCorrectionContigence, 2, 0, MSForms, CommandButton"


Private Sub btnCorrectionContigence_Click()
Const LineChange = vbCr + vbLf
Dim iCol, iRow, iCompt1 As Integer
Dim sInString, s As String

Application.ScreenUpdating = False
Sheets(SheetName(8)).Select
ActiveSheet.Unprotect Password:=pg
Range("A4:D4").Select
Selection.Locked = False

iCol = 2
iRow = 4
iCompt1 = 0
    For iCompt1 = iRow To 4
        Cells(iCompt1, iCol).Value = cleanUpDayString(Cells(iCompt1, iCol).Value)
        Cells(iCompt1, iCol + 1).Value = cleanUpDayString(Cells(iCompt1, iCol + 1).Value)
        Cells(iCompt1, iCol + 2).Value = cleanUpDayString(Cells(iCompt1, iCol + 2).Value)
    Next


Range("B4:D4").Select

If Application.International(xlCountrySetting) = 1 Then
  Selection.NumberFormat = "# ##0"
Else
  Selection.NumberFormat = "#,##0"
End If

With Selection
  .HorizontalAlignment = xlCenter
  .VerticalAlignment = xlBottom
  .WrapText = False
  .Orientation = 0
  .AddIndent = False
  .IndentLevel = 0
  .ShrinkToFit = False
  .ReadingOrder = xlContext
  .MergeCells = False
End With
Range("A4:D4").Select
With Selection.Borders(xlEdgeTop)
  .LineStyle = xlContinuous
  .Weight = xlThin
  .ColorIndex = xlAutomatic
End With
With Selection.Borders(xlEdgeBottom)
  .LineStyle = xlContinuous
  .Weight = xlThin
  .ColorIndex = xlAutomatic
End With
Range("A4").Select
ActiveSheet.Protect Password:=pg
Application.ScreenUpdating = True


If Language = 1 Then
    s = MsgBox("Fin du traitement", vbOKOnly, "Correction termin|fffd|e")
Else
    s = MsgBox("End of process", vbOKOnly, "Correction Completed")
End If


End Sub
Function cleanUpDayString(InString As String) As String

Dim iStringLenght, iPos, iCompt1 As Integer
iStringLenght = Len(InString)
If (iStringLenght > 0) Then
    For iCompt1 = 1 To iStringLenght
        If UCase(Mid(InString, iCompt1, 1)) = "J" Or UCase(Mid(InString, iCompt1, 1)) = "D" Then
            Exit For
        End If
    Next
    
    cleanUpDayString = Trim(Mid(InString, 1, (iCompt1 - 1)))
Else
    cleanUpDayString = ""
End If


End Function

Attribute VB_Name = "Feuil7"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Feuil8"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Private Sub Worksheet_Activate()
Cells(1, 1).Select
End Sub

Private Sub Worksheet_SelectionChange(ByVal Target As Range)

End Sub
Attribute VB_Name = "Feuil9"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Control = "Btn_IncreaseHeight, 26, 0, MSForms, CommandButton"
Private Sub Btn_IncreaseHeight_Click()
Dim iRowHeightMax As Integer
iRowHeightMax = 409

Application.ScreenUpdating = False
Sheets(SheetName(14)).Select
ActiveSheet.Unprotect Password:=pg
Sheets(SheetName(2)).Select
ActiveSheet.Unprotect Password:=pg

With Worksheets(2)
     For Each c In .Range(.Rows(6), .Rows(13))
         mLigne = 1
         mCaractere = 0
         mLongueur = Len(.Cells(c.Row, 4))
         Do While mCaractere < mLongueur
            mPos = InStr(Right(.Cells(c.Row, 4), mLongueur - mCaractere), Chr(10))
            If mPos = 0 Then
               If mLongueur - mCaractere > 175 Then mLigne = mLigne + 1
               mCaractere = mLongueur
            Else
               mLigne = mLigne + 1
            End If
            If mPos > 175 Then mLigne = mLigne + 1
            mCaractere = mCaractere + mPos
         Loop
         
         iRowHeight = 15 + 15 * (mLigne - 1)
         If iRowHeight > iRowHeightMax Then
            c.RowHeight = iRowHeightMax
         Else
            c.RowHeight = iRowHeight
         End If
         
         iRowHeight = 12 + 12 * (mLigne - 1)
         If iRowHeight > iRowHeightMax Then
            Worksheets(14).Rows(c.Row + 13).RowHeight = iRowHeightMax
         Else
            Worksheets(14).Rows(c.Row + 13).RowHeight = iRowHeight
         End If
     Next
         
     mLigne = 1
     mCaractere = 0
     mLongueur = Len(.Cells(16, 1))
     Do While mCaractere < mLongueur
        mPos = InStr(Right(.Cells(16, 1), mLongueur - mCaractere), Chr(10))
        If mPos = 0 Then
           If mLongueur - mCaractere > 175 Then mLigne = mLigne + 1
           mCaractere = mLongueur
        Else
           mLigne = mLigne + 1
        End If
        If mPos > 175 Then mLigne = mLigne + 1
        mCaractere = mCaractere + mPos
     Loop
     'c.RowHeight = 15 + 15 * (mLigne - 1)
     For Each c In .Range(.Rows(16), .Rows(18))
         iRowHeight = (15 + 15 * (mLigne - 1)) / 3
         If iRowHeight > iRowHeightMax Then
            c.RowHeight = iRowHeightMax
         Else
            c.RowHeight = iRowHeight
         
         End If
     Next
End With

ActiveSheet.Range("A1").Select
ActiveSheet.Protect Password:=pg
Sheets(SheetName(14)).Select
ActiveSheet.Protect Password:=pg
Sheets(SheetName(2)).Select
Application.ScreenUpdating = True

End Sub

Attribute VB_Name = "Module1"
Public pg As String
Public Language As Integer
Public SheetName(20) As String
Option Explicit
Public Sub TraduireLibell|fffd|()
'/********************************************************
'/Proc|fffd|dure:    Rapport fran|fffd|ais
'/Arguments:    Language 1=fran|fffd|ais 2=anglais
'/Effet:        Affiche les titres du rapport progr|fffd|s en anglais
'/Appel|fffd| par:   Bouton sur la feuille "Ent|fffd|te"
'/********************************************************
'/Version:      1.0
'/Date:         16 juin 2004
'/Auteur:       Jean-Pierre Hamelin, CGI
'/********************************************************

Dim I As Integer
Dim Line As Integer
Dim Done As Boolean
Dim a As Integer
Dim Msg As String
On Error GoTo Error_handler

Line = 2
For I = 1 To Worksheets.Count - 2
        
    Sheets(SheetName(I)).Select
    ActiveSheet.Unprotect Password:=pg
    Done = False
        
    If I = 3 Then
        ' Modifier la s|fffd|lection de la liste afin de r|fffd|fl|fffd|ter les choix
        ' dans la langue correspondante
        Range("B14").Select
            If Language = 1 Then
                With Selection.Validation
                    .Delete
                    .Add Type:=xlValidateList, AlertStyle:=xlValidAlertStop, Operator:= _
                    xlBetween, Formula1:="=$F$53:$F$54"
                    .IgnoreBlank = False
                    .InCellDropdown = True
                    .InputTitle = ""
                    .ErrorTitle = "Ne pas modifier"
                    .InputMessage = ""
                    .ErrorMessage = ""
                    .ShowInput = True
                    .ShowError = True
                End With
                If Range("B14") = "Y" Then
                    Range("B14") = "O"
                End If
            Else
                With Selection.Validation
                    .Delete
                    .Add Type:=xlValidateList, AlertStyle:=xlValidAlertStop, Operator:= _
                    xlBetween, Formula1:="=$F$55:$F$56"
                    .IgnoreBlank = False
                    .InCellDropdown = True
                    .InputTitle = ""
                    .ErrorTitle = "Do not modify"
                    .InputMessage = ""
                    .ErrorMessage = ""
                    .ShowInput = True
                    .ShowError = True
                End With
                If Range("B14") = "O" Then
                    Range("B14") = "Y"
                End If
            End If
    End If
    If I = 13 Then
        Sheets(SheetName(13)).Select
        ActiveSheet.ChartObjects("Chart 1").Activate
        If Language = 1 Then
            
            ActiveChart.ChartTitle.Select
            Selection.Characters.Text = Worksheets("Param|fffd|tres-Langue").Cells(20, 8)
        Else
            ActiveChart.ChartTitle.Select
            Selection.Characters.Text = Worksheets("Param|fffd|tres-Langue").Cells(20, 9)
        End If
        ActiveSheet.ChartObjects("Chart 2").Activate
        If Language = 1 Then
            ActiveChart.ChartTitle.Select
            Selection.Characters.Text = Worksheets("Param|fffd|tres-Langue").Cells(21, 8)
        Else
            ActiveChart.ChartTitle.Select
            Selection.Characters.Text = Worksheets("Param|fffd|tres-Langue").Cells(21, 9)
        End If
        Sheets(SheetName(13)).Cells(1, 1).Select
    End If
    While Not Done
      If Worksheets("Param|fffd|tres-Langue").Cells(Line + 1, 1) <> "" Then
        Done = True
      End If
      If Language = 1 Then
        Sheets(I).Cells(Worksheets("Param|fffd|tres-Langue").Cells(Line, 2), Worksheets("Param|fffd|tres-Langue").Cells(Line, 3)) = Worksheets("Param|fffd|tres-Langue").Cells(Line, 4)
      Else
        Sheets(I).Cells(Worksheets("Param|fffd|tres-Langue").Cells(Line, 2), Worksheets("Param|fffd|tres-Langue").Cells(Line, 3)) = Worksheets("Param|fffd|tres-Langue").Cells(Line, 5)
      End If
      Line = Line + 1
    Wend
Next I

Exit Sub
Error_handler:
    Msg = "Error # " & Str(Err.Number) & Chr(13) & Err.Description
    MsgBox Msg, , "Error"

End Sub

Public Sub RapportFrancais()
'/********************************************************
'/Proc|fffd|dure:    Rapport fran|fffd|ais
'/Arguments:    Language
'/Effet:        Assigne le code de langue pour l'affichage
'/Appel|fffd| par:   Bouton sur la feuille "Ent|fffd|te"
'/********************************************************
'/Version:      1.0
'/Date:         16 juin 2004
'/Auteur:       Jean-Pierre Hamelin, CGI
'/********************************************************
    Language = 1 ' Anglais
    Traduction
End Sub
Public Sub RapportAnglais()
'/********************************************************
'/Proc|fffd|dure:    Rapport anglais
'/Arguments:    Language
'/Effet:        Assigne le code de langue pour l'affichage
'/Appel|fffd| par:   Bouton sur la feuille "Ent|fffd|te"
'/********************************************************
'/Version:      1.0
'/Date:         16 juin 2004
'/Auteur:       Jean-Pierre Hamelin, CGI
'/********************************************************
    Language = 2 ' Anglais
    Traduction
End Sub
Public Sub TraduireCommentaires()
'/********************************************************
'/Proc|fffd|dure:    Rapport fran|fffd|ais
'/Arguments:    Language 1=fran|fffd|ais 2=anglais
'/Effet:        Affiche les titres du rapport progr|fffd|s en anglais
'/Appel|fffd| par:   Bouton sur la feuille "Ent|fffd|te"
'/********************************************************
'/Version:      1.0
'/Date:         16 juin 2004
'/Auteur:       Jean-Pierre Hamelin, CGI
'/********************************************************
Dim I As Integer
Dim J As Integer
Dim Line As Integer
Dim Done As Boolean
Dim LanguageCol As Integer
Dim NextComments As Boolean
Dim FormatStartLine As Integer
Dim FormatStartChar As Integer
Dim FormatEndLine As Integer
Dim FormatLenght As Integer
Dim CommentRow As Integer
Dim Comments As Boolean
Dim strComments As String
Dim Msg As String
On Error GoTo Error_handler

Line = 3
ActiveWorkbook.Unprotect Password:=pg
Sheets(SheetName(5)).Visible = True
For I = 1 To Worksheets.Count - 2

    Sheets(I).Select
    ActiveSheet.Unprotect Password:=pg
    Done = False
    NextComments = False
    If Worksheets("Param|fffd|tres-Commentaires").Cells(Line, 7) <> "N" Then
            NextComments = True
    Else
            Line = Line + 1
            
    End If
    
    While Not Done And NextComments = True
        If Language = 1 Then
            LanguageCol = 5
        Else
            LanguageCol = 6
        End If
        
        Comments = True
        strComments = ""
        CommentRow = Line
        FormatStartLine = Line
        While Comments
            If Worksheets("Param|fffd|tres-Commentaires").Cells(Line, LanguageCol) = "" Then
                strComments = strComments & Chr(10)
            Else
                strComments = strComments & Worksheets("Param|fffd|tres-Commentaires").Cells(Line, LanguageCol) & Chr(10)
            End If
            
            Line = Line + 1
            
            If Worksheets("Param|fffd|tres-Commentaires").Cells(Line + 1, 3) <> "" Then
                Comments = False
                strComments = strComments & Worksheets("Param|fffd|tres-Commentaires").Cells(Line, LanguageCol) & Chr(10)
                If Worksheets("Param|fffd|tres-Commentaires").Cells(Line + 1, 1) <> "" Then
                    Done = True
                End If
            End If
        Wend
            
        FormatEndLine = Line
        
        Sheets(I).Cells(Worksheets("Param|fffd|tres-Commentaires").Cells(CommentRow, 2), Worksheets("Param|fffd|tres-Commentaires").Cells(CommentRow, 3)).Comment.Text Text:=strComments
        
        FormatStartChar = 1
   
        For J = FormatStartLine To FormatEndLine
            FormatLenght = Len(Worksheets("Param|fffd|tres-Commentaires").Cells(J, LanguageCol))
            If Worksheets("Param|fffd|tres-Commentaires").Cells(J, 4) = "G" Or Worksheets("Param|fffd|tres-Commentaires").Cells(J, 4) = "g" Then
                With Sheets(I).Cells(Worksheets("Param|fffd|tres-Commentaires").Cells(CommentRow, 2), Worksheets("Param|fffd|tres-Commentaires").Cells(CommentRow, 3)).Comment.Shape.TextFrame.Characters(Start:=FormatStartChar, Length:=FormatLenght).Font
                    .Bold = True
                End With
            Else
                With Sheets(I).Cells(Worksheets("Param|fffd|tres-Commentaires").Cells(CommentRow, 2), Worksheets("Param|fffd|tres-Commentaires").Cells(CommentRow, 3)).Comment.Shape.TextFrame.Characters(Start:=FormatStartChar, Length:=FormatLenght).Font
                    .Bold = False
                End With
            
            End If
            FormatStartChar = FormatStartChar + FormatLenght + 1
        Next J
        Line = Line + 1
    Wend
Next I
Exit Sub
Error_handler:
    Msg = "Error # " & Str(Err.Number) & Chr(13) & Err.Description
    MsgBox Msg, , "Error"
End Sub

'/********************************************************
'/Proc|fffd|dure:    Mettre|fffd|JourGraphiques
'/Arguments:    Aucun
'/Effet:        Modifie les formules des s|fffd|ries de donn|fffd|es
'/              des graphiques de la feuille "Graphiques"
'/Appel|fffd| par:   Bouton sur la feuille "Projet"
'/********************************************************
'/Version:      1.0
'/Date:         8 mai 1998
'/Auteur:       Martin Daoust, CGI
'/********************************************************

Sub Mettre|fffd|JourGraphiques()
Attribute Mettre|fffd|JourGraphiques.VB_ProcData.VB_Invoke_Func = " \n14"
    
'Protection off
    Application.ScreenUpdating = False
    Sheets(SheetName(10)).Select
    ActiveSheet.Unprotect Password:=pg
    Sheets(SheetName(11)).Select
    ActiveSheet.Unprotect Password:=pg
    Sheets(SheetName(13)).Select
    ActiveSheet.Unprotect Password:=pg
    Sheets(SheetName(10)).Select
    Application.ScreenUpdating = True
    
    Dim intDernierMoisProjet As Integer
    Dim intDernierMoisDonn|fffd|es As Integer
    Dim intLigneD|fffd|butDonn|fffd|es As Integer
    Dim x As Object
    Dim varTemp As Variant
    Dim intDerni|fffd|reLigne As Integer
    Dim plLignesInutiles As Range
    Dim sglMin As Single
    Dim strMessage As String
    
    On Error GoTo Erreur_Mettre|fffd|JourGraphiques
    
    With Application
        .ScreenUpdating = False
        .Calculation = xlManual
        .Cursor = xlWait
    End With
    
    '/V|fffd|rifier si les donn|fffd|es n|fffd|cessaires sont pr|fffd|sentes
    If IsEmpty(Range("D|fffd|but_Projet")) Then
        If Language = 1 Then
            strMessage = "Vous n'avez pas sp|fffd|cifi|fffd| la date de d|fffd|but du projet." & Chr(10) & Chr(13)
        Else
            strMessage = "Project Start Date not specified" & Chr(10) & Chr(13)
        End If
    End If
    
    If IsEmpty(Range("Fin_Projet")) Then
        If Language = 1 Then
            strMessage = strMessage & "Vous n'avez pas sp|fffd|cifi|fffd| la date de fin du projet." & Chr(10) & Chr(13)
        Else
            strMessage = strMessage & "Project End Date not specified" & Chr(10) & Chr(13)
        End If
    End If
    
    If IsEmpty(Range("Ligne_EnT|fffd|te").Offset(1, 1)) Then
        If Language = 1 Then
            strMessage = strMessage & "Vous n'avez pas import|fffd| de donn|fffd|es ou elles ne sont pas au bon endroit."
        Else
            strMessage = strMessage & "No data imported." & Chr(10) & Chr(13)
        End If
    End If
    
    If strMessage <> "" Then
        If Language = 1 Then
            MsgBox strMessage, vbOKOnly, "Valeur gagn|fffd|e"
        Else
            MsgBox strMessage, vbOKOnly, "Earned Value"
        End If
        GoTo Sortie_Mettre|fffd|JourGraphiques
    End If
    
    intLigneD|fffd|butDonn|fffd|es = ActiveSheet.Range("Ligne_EnT|fffd|te").Row
    intDerni|fffd|reLigne = ActiveSheet.Range("Derni|fffd|re_Ligne").Row
    
    ActiveSheet.Rows.Hidden = False
    
    intDernierMoisProjet = intCalculerNombreMois() + intLigneD|fffd|butDonn|fffd|es + 1
    intDernierMoisDonn|fffd|es = ActiveSheet.Range("Ligne_EnT|fffd|te").Offset(0, 1).End(xlDown).Row
    
    sglMin = Application.Min(ActiveSheet.Range(Cells(intLigneD|fffd|butDonn|fffd|es + 1, 11), Cells(intDernierMoisDonn|fffd|es, 12)))
    
    '/Transformer les donn|fffd|es import|fffd|es de PW en nombres
    For Each x In ActiveSheet.Range(Cells(intLigneD|fffd|butDonn|fffd|es + 1, 3), Cells(intDernierMoisDonn|fffd|es, 5)).Cells
        varTemp = x.Value
        If Len(Trim(CStr(x.Value))) > 1 Then
            x.Value = CDbl(varTemp)
        End If
    Next
        
    
    '/Ajustement des donn|fffd|es du graphique 1
    With ThisWorkbook.Worksheets(SheetName(13)).ChartObjects("Chart 1").Chart
        .SeriesCollection(1).XValues = ActiveSheet.Range(Cells(intLigneD|fffd|butDonn|fffd|es + 1, 1), Cells(intDernierMoisProjet, 1))
        .SeriesCollection(1).Values = ActiveSheet.Range(Cells(intLigneD|fffd|butDonn|fffd|es + 1, 9), Cells(intDernierMoisProjet, 9))
        .SeriesCollection(2).Values = ActiveSheet.Range(Cells(intLigneD|fffd|butDonn|fffd|es + 1, 5), Cells(intDernierMoisDonn|fffd|es, 5))
        .SeriesCollection(3).Values = ActiveSheet.Range(Cells(intLigneD|fffd|butDonn|fffd|es + 1, 10), Cells(intDernierMoisDonn|fffd|es, 10))
        .SeriesCollection(4).Values = ActiveSheet.Range(Cells(intLigneD|fffd|butDonn|fffd|es + 1, 11), Cells(intDernierMoisDonn|fffd|es, 11))
    End With
    
    '/Ajustement des donn|fffd|es du graphique 2
    With ThisWorkbook.Worksheets(SheetName(13)).ChartObjects("Chart 2").Chart
        If sglMin < 1 Then
            .Axes(xlValue).MinimumScale = Application.RoundDown(sglMin, 1)
        Else
            .Axes(xlValue).MinimumScale = 1
        End If
        .SeriesCollection(1).XValues = ActiveSheet.Range(Cells(intLigneD|fffd|butDonn|fffd|es + 1, 1), Cells(intDernierMoisDonn|fffd|es, 1))
        .SeriesCollection(1).Values = ActiveSheet.Range(Cells(intLigneD|fffd|butDonn|fffd|es + 1, 12), Cells(intDernierMoisDonn|fffd|es, 12))
        .SeriesCollection(2).Values = ActiveSheet.Range(Cells(intLigneD|fffd|butDonn|fffd|es + 1, 13), Cells(intDernierMoisDonn|fffd|es, 13))
    End With
    
    '/Masquer les lignes non-utilis|fffd|es
    intDerni|fffd|reLigne = intDerni|fffd|reLigne - 1
    ActiveSheet.Range(Cells(intDernierMoisProjet + 1, 1), Cells(intDerni|fffd|reLigne, 1)).EntireRow.Rows.Hidden = True

    GoTo Sortie_Mettre|fffd|JourGraphiques

Erreur_Mettre|fffd|JourGraphiques:
    If Language = 1 Then
        MsgBox "Une erreur s'est produite. Contactez la personne responsable", vbOKOnly, "Valeur gagn|fffd|e"
    Else
        MsgBox "An error has occured. Contact your representative", vbOKOnly, "Valeur gagn|fffd|e"
    End If
Sortie_Mettre|fffd|JourGraphiques:
    With Application
        .ScreenUpdating = True
        .Calculation = xlAutomatic
        .Cursor = xlNormal
    End With
    Application.ScreenUpdating = False
    Sheets(SheetName(10)).Select
    ActiveSheet.Protect Password:=pg
    Sheets(SheetName(11)).Select
    ActiveSheet.Protect Password:=pg
    Sheets(SheetName(13)).Select
    ActiveSheet.Protect Password:=pg
    Sheets(SheetName(10)).Select
     Application.ScreenUpdating = True
End Sub

'/********************************************************
'/Fonction:     intCalculerNombreMoisProjet
'/Arguments:    Auncun
'/|fffd|l|fffd|ments:     Plage nomm|fffd|e "D|fffd|but_Projet", feuille "Projet"
'/              Plage nomm|fffd|e "Fin_Projet", feuille "Projet"
'/Retour:       Nombre de mois du projet
'/Appel|fffd|e par:  Mettre|fffd|JourGraphiques
'/********************************************************
'/Version:      1.0
'/Date:         8 mai 1998
'/Auteur:       Martin Daoust, CGI
'/********************************************************

Function intCalculerNombreMois() As Integer
Attribute intCalculerNombreMois.VB_ProcData.VB_Invoke_Func = " \n14"
    
    Dim DateD|fffd|but As Date
    Dim DateFin As Date
    Dim intMois As Integer
    Dim intAns As Integer
    
    intMois = 1
    
    DateD|fffd|but = ActiveSheet.Range("D|fffd|but_Projet").Value
    DateFin = ActiveSheet.Range("Fin_Projet").Value
    
    If Year(DateFin) > Year(DateD|fffd|but) Then
        intMois = 12 - Month(DateD|fffd|but)
        intMois = intMois + Month(DateFin)
        intAns = Year(DateFin) - Year(DateD|fffd|but) - 1
        intMois = intMois + (12 * intAns)
    Else
        intMois = intMois + Month(DateFin) - Month(DateD|fffd|but)
    End If
        
    intCalculerNombreMois = intMois

End Function

'/********************************************************
'/Proc|fffd|dure:    CorrigerDonn|fffd|esD|fffd|tail
'/Arguments:    Aucun
'/Effet:        Transforme les cha|fffd|nes de caract|fffd|res
'/              en nombres
'/Appel|fffd| par:   Bouton sur la feuille "D|fffd|tail"
'/********************************************************
'/Version:      1.0
'/Date:         9 mai 1998
'/Auteur:       Martin Daoust, CGI
'/********************************************************


Sub CorrigerDonn|fffd|esD|fffd|tail()
Attribute CorrigerDonn|fffd|esD|fffd|tail.VB_ProcData.VB_Invoke_Func = " \n14"

    Application.ScreenUpdating = False
    Sheets(SheetName(10)).Select
    ActiveSheet.Unprotect Password:=pg
    Sheets(SheetName(11)).Select
    ActiveSheet.Unprotect Password:=pg
    Sheets(SheetName(13)).Select
    ActiveSheet.Unprotect Password:=pg
    Sheets(SheetName(11)).Select
    Application.ScreenUpdating = True
    
    Dim intLigneD|fffd|butDonn|fffd|esD|fffd|tail As Integer
    Dim intLigneFinDonn|fffd|esD|fffd|tail As Integer
    Dim varTemp As Variant
    Dim strD|fffd|butDonn|fffd|es As String
    Dim strFinDonn|fffd|es As String
    Dim intDerni|fffd|reLigneD|fffd|tail As Integer
    Dim x As Object
    
    On Error GoTo Erreur_CorrigerDonn|fffd|esD|fffd|tail
    
    With Application
        .ScreenUpdating = False
        .Calculation = xlManual
        .Cursor = xlWait
    End With
    
    '/Afficher toutes les lignes
    ActiveSheet.Rows.Hidden = False
    
    strD|fffd|butDonn|fffd|es = ActiveSheet.Name & "!D|fffd|but_Donn|fffd|es_D|fffd|tail"
    strFinDonn|fffd|es = ActiveSheet.Name & "!Fin_Donn|fffd|es_D|fffd|tail"
    
    intLigneD|fffd|butDonn|fffd|esD|fffd|tail = ActiveSheet.Range(strD|fffd|butDonn|fffd|es).Row + 2
    intLigneFinDonn|fffd|esD|fffd|tail = ActiveSheet.Range(strD|fffd|butDonn|fffd|es).Offset(2, 0).End(xlDown).Row
    
    '/Transformer les donn|fffd|es import|fffd|es de PW en nombres
    For Each x In ActiveSheet.Range(Cells(intLigneD|fffd|butDonn|fffd|esD|fffd|tail + 2, 3), Cells(intLigneFinDonn|fffd|esD|fffd|tail, 5)).Cells
        varTemp = x.Value
        If Len(Trim(CStr(x.Value))) > 1 Then
            x.Value = CDbl(varTemp)
        End If
    Next

    '/Masquer les lignes non-utilis|fffd|es
    intDerni|fffd|reLigneD|fffd|tail = ActiveSheet.Range(strFinDonn|fffd|es).Row - 1
    ActiveSheet.Range(Cells(intLigneFinDonn|fffd|esD|fffd|tail + 1, 1), Cells(intDerni|fffd|reLigneD|fffd|tail, 1)).EntireRow.Rows.Hidden = True
    
    ActiveSheet.Range("A8").Select
    
    GoTo Sortie_CorrigerDonn|fffd|esD|fffd|tail

Erreur_CorrigerDonn|fffd|esD|fffd|tail:
    If Language = 1 Then
        MsgBox "Une erreur s'est produite. Contactez la personne responsable", vbOKOnly, "Valeur gagn|fffd|e"
    Else
        MsgBox "An error has occured. Contact your representative", vbOKOnly, "Valeur gagn|fffd|e"
    End If
    
    
Sortie_CorrigerDonn|fffd|esD|fffd|tail:
    With Application
        .ScreenUpdating = True
        .Calculation = xlAutomatic
        .Cursor = xlNormal
    End With
    
    Application.ScreenUpdating = False
    Sheets(SheetName(10)).Select
    ActiveSheet.Protect Password:=pg
    Sheets(SheetName(11)).Select
    ActiveSheet.Protect Password:=pg
    Sheets(SheetName(13)).Select
    ActiveSheet.Protect Password:=pg
    Sheets(SheetName(11)).Select
    Application.ScreenUpdating = True
    
End Sub


Sub compile()
Attribute compile.VB_ProcData.VB_Invoke_Func = " \n14"
End Sub

Public Sub TraduireBoutton()
    Dim Msg As String
    On Error GoTo Error_handler
    
    'Indicateur
    Sheets(SheetName(2)).Select
    If Language = 1 Then
        ActiveSheet.OLEObjects("Btn_IncreaseHeight").Object.Caption = "Ajuster la hauteur des lignes"
    '    ActiveSheet.OLEObjects("Btn_DecreaseHeight").Object.Caption = "Diminuer hauteur des lignes"
    Else
        ActiveSheet.OLEObjects("Btn_IncreaseHeight").Object.Caption = "Adjust rows heights"
    '    ActiveSheet.OLEObjects("Btn_DecreaseHeight").Object.Caption = "Decrease rows heights"
    End If
   
    'Finance
    Sheets(SheetName(3)).Select
    ActiveSheet.Shapes("Button 7").Select
    If Language = 1 Then
        Selection.Characters.Text = "Imprimer"
        ActiveSheet.OLEObjects("lblPassWord").Object.Caption = "Mot de passe"
    Else
        Selection.Characters.Text = "Print"
        ActiveSheet.OLEObjects("lblPassWord").Object.Caption = "Password"
    End If
    
    ActiveSheet.Shapes("Button 135").Select
    If Language = 1 Then
        Selection.Characters.Text = "Ajuster la hauteur des lignes"
    Else
        Selection.Characters.Text = "Adjust rows heights"
    End If
    
    
    'Taux vendant
    Sheets(SheetName(4)).Select
    
    If Language = 1 Then
        ActiveSheet.OLEObjects("btnCorrectionSellingRate").Object.Caption = "Convertir en taux quotidien (Ms Project)"
        ActiveSheet.OLEObjects("btn_CorrectionWB").Object.Caption = "Convertir en taux quotidien (WB)"
    Else
        ActiveSheet.OLEObjects("btnCorrectionSellingRate").Object.Caption = "Convert to daily rate (Ms Project)"
        ActiveSheet.OLEObjects("btn_CorrectionWB").Object.Caption = "Convert to daily rate (WB)"
    End If
    
    ' RH -Coller
    Sheets(SheetName(7)).Select
    If Language = 1 Then
        ActiveSheet.OLEObjects("cmdBtnValiderListeRessource").Object.Caption = "Valider la liste des employ|fffd|s (taux vendant)"
        ActiveSheet.OLEObjects("cmdBtnValiderTaux1").Object.Caption = "Valider la liste des employ|fffd|s (taux 1)"
        ActiveSheet.OLEObjects("btnCorrections").Object.Caption = "Correction (pour Ms Project)"
    Else
        ActiveSheet.OLEObjects("cmdBtnValiderListeRessource").Object.Caption = "Validate resource list (selling Rate)"
        ActiveSheet.OLEObjects("cmdBtnValiderTaux1").Object.Caption = "Validate resource list (rate 1)"
        ActiveSheet.OLEObjects("btnCorrections").Object.Caption = "Correction (for Ms Project)"
    End If
    ActiveSheet.Shapes("Button 14").Select
     If Language = 1 Then
        Selection.Characters.Text = "Remise |fffd| neuf"
     Else
        Selection.Characters.Text = "Initialize"
     End If
    
    ' Contingence-Coller
    Sheets(SheetName(8)).Select
    If Language = 1 Then
        ActiveSheet.OLEObjects("btnCorrectionContigence").Object.Caption = "Correction Contingence (pour Ms Project)"
    Else
        ActiveSheet.OLEObjects("btnCorrectionContigence").Object.Caption = "Correction Contingency (for Ms Project)"
    End If
    ActiveSheet.Shapes("Button 3").Select
     If Language = 1 Then
        Selection.Characters.Text = "Remise |fffd| neuf"
     Else
        Selection.Characters.Text = "Initialize"
     End If
        
    ' BAC-Coller
    Sheets(SheetName(9)).Select
    If Language = 1 Then
        ActiveSheet.OLEObjects("btn_CorrectionBacColler").Object.Caption = "Correction BAC-Coller (pour Ms Project)"
    Else
        ActiveSheet.OLEObjects("btn_CorrectionBacColler").Object.Caption = "Correction BAC-Paste (for Ms Project)"
    End If
    
     ActiveSheet.Shapes("Button 3").Select
     If Language = 1 Then
        Selection.Characters.Text = "Remise |fffd| neuf"
     Else
        Selection.Characters.Text = "Initialize"
     End If
    
    
    
    ' Valeur gagn|fffd|e
    Sheets(SheetName(10)).Select
    ActiveSheet.Shapes("BtnMAJ2").Select
    If Language = 1 Then
        Selection.Characters.Text = "Mise |fffd| jour"
        ActiveSheet.OLEObjects("btn_Correction_EVA").Object.Caption = "Correction (pour WB)"
    Else
        Selection.Characters.Text = "Update"
        ActiveSheet.OLEObjects("btn_Correction_EVA").Object.Caption = "Correction (for WB)"
    End If
    
   
        
    ' D|fffd|tail
    Sheets(SheetName(11)).Select
    ActiveSheet.Shapes("Button 3").Select
    If Language = 1 Then
        Selection.Characters.Text = "Remise |fffd| neuf"
        ActiveSheet.OLEObjects("btn_Correction_Detail").Object.Caption = "Correction (pour WB)"
    Else
        Selection.Characters.Text = "Initialize"
        ActiveSheet.OLEObjects("btn_Correction_Detail").Object.Caption = "Correction (for WB)"
    End If
    
    
   
    ActiveSheet.Shapes("BtnMAJ2").Select
    If Language = 1 Then
        Selection.Characters.Text = "Mise |fffd| jour"
    Else
        Selection.Characters.Text = "Update"
    End If
    
    ' Taux 1
    ActiveWorkbook.Unprotect (pg)
    Sheets(SheetName(5)).Visible = True
    Sheets(SheetName(5)).Select
    If Language = 1 Then
        ActiveSheet.OLEObjects("btn_CorrectionTaux1Rate").Object.Caption = "Correction taux 1 (pour Ms Project)"
        ActiveSheet.OLEObjects("btnCorrectionDailyRate").Object.Caption = "Convertir taux quotidien (WB)"
    Else
        ActiveSheet.OLEObjects("btn_CorrectionTaux1Rate").Object.Caption = "Correction rate 1 (for Ms Project)"
        ActiveSheet.OLEObjects("btnCorrectionDailyRate").Object.Caption = "Convert daily rate (WB)"
    End If
    Sheets(SheetName(5)).Visible = False
    ActiveWorkbook.Protect (pg)
    
    
    
    Exit Sub
Error_handler:
    Msg = "Error # " & Str(Err.Number) & Chr(13) & Err.Description
    MsgBox Msg, , "Error"
End Sub

Public Sub Traduction()
'/********************************************************
'/Proc|fffd|dure:    Traduction
'/Arguments:    Language
'/Effet:        Affiche les titres du rapport progr|fffd|s en fran|fffd|ais ou anglais
                
'/Appel|fffd| par:   Rapport fran|fffd|ais ou Rapport anglais
'/********************************************************
'/Version:      1.0
'/Date:         16 juin 2004
'/Auteur:       Jean-Pierre Hamelin, CGI
'/********************************************************
    Dim I As Integer
    Dim Msg As String
    On Error GoTo Error_handler
  
    Application.ScreenUpdating = False
    
    If SheetName(1) = "" Then
        ChargerNomOnglets
    End If
    ActiveWorkbook.Unprotect Password:=pg

    Sheets(SheetName(5)).Visible = True

    For I = 1 To Worksheets.Count - 2
        Sheets(I).Unprotect Password:=pg
    Next I

    TraduireLibell|fffd|
    TraduireCommentaires
    TraduireBoutton
    TraduireOnglets

    For I = 1 To Worksheets.Count - 2
      Sheets(I).Protect Password:=pg
    Next I
    
    Sheets(1).Select
    ActiveWorkbook.Protect Password:=pg
    Application.ScreenUpdating = True
    Exit Sub
Error_handler:
    Msg = "Error # " & Str(Err.Number) & Chr(13) & Err.Description
    MsgBox Msg, , "Error"

End Sub

Public Sub TraduireOnglets()
    Dim I As Integer
    Dim Line As Integer
    Dim Msg As String
    On Error GoTo Error_handler
    
    Line = 2
    For I = 1 To Worksheets.Count - 2
        If Language = 1 Then
            SheetName(I) = Worksheets("Param|fffd|tres-Langue").Cells(Line, 8)
            ActiveWorkbook.Unprotect Password:=pg
            Worksheets(I).Name = SheetName(I)
            Line = Line + 1
        Else
            SheetName(I) = Worksheets("Param|fffd|tres-Langue").Cells(Line, 9)
            ActiveWorkbook.Unprotect Password:=pg
            Worksheets(I).Name = SheetName(I)
            Line = Line + 1
        End If
    Next I
    Exit Sub
Error_handler:
    Msg = "Error # " & Str(Err.Number) & Chr(13) & Err.Description
    MsgBox Msg, , "Error"
End Sub

Public Sub ChargerNomOnglets()
    'Obtenir la langue lors de l'ouverture du chiffrier
    If Worksheets(1).Name = Worksheets("Param|fffd|tres-Langue").Cells(2, 8) Then
        Language = 1
    Else
        Language = 2
    End If
    
    ' Assigner les noms des onglets |fffd| la variable SheetName()
    ' Requis pour les r|fffd|f|fffd|rences aux noms des onglets dans le code VBA
    TraduireOnglets
End Sub


Attribute VB_Name = "Module10"
Sub Adjust_RowHeight_Finance_Click()
    
Application.ScreenUpdating = False
ActiveWorkbook.Worksheets(14).Unprotect Password:=pg
ActiveWorkbook.Sheets(3).Select
ActiveWorkbook.Worksheets(3).Unprotect Password:=pg
      
 With ActiveWorkbook.Worksheets(3)
     For Each c In .Range(.Rows(45), .Rows(46))
         mLigne = 1
         mCaractere = 0
         mLongueur = Len(.Cells(c.Row, 2))
         Do While mCaractere < mLongueur
            mPos = InStr(Right(.Cells(c.Row, 2), mLongueur - mCaractere), Chr(10))
            If mPos = 0 Then
               If mLongueur - mCaractere > 175 Then mLigne = mLigne + 1
               mCaractere = mLongueur
            Else
               mLigne = mLigne + 1
            End If
            If mPos > 175 Then mLigne = mLigne + 1
            mCaractere = mCaractere + mPos
         Loop
         iRowHeight = 15 + 15 * (mLigne - 1) 'Hauteur maximale fix|fffd|e par MS-Excel d'un ligne est de 409
         If iRowHeight > 409 Then
            c.RowHeight = 409
         Else
            c.RowHeight = iRowHeight
         End If
 
     Next
   
End With
' Ajuster la hauteur des lignes du HC avec les valeurs des cellules de la feuille finance
If ActiveWorkbook.Worksheets(3).Rows(45).RowHeight < 27 Then
    ActiveWorkbook.Worksheets(14).Rows(16).RowHeight = 27
Else
    ActiveWorkbook.Worksheets(14).Rows(16).RowHeight = ActiveWorkbook.Worksheets(3).Rows(45).RowHeight

End If


ActiveWorkbook.Worksheets(14).Rows(17).RowHeight = ActiveWorkbook.Worksheets(3).Rows(46).RowHeight
    
    
ActiveWorkbook.Worksheets(3).Range("B7").Select
ActiveWorkbook.Worksheets(3).Protect Password:=pg
ActiveWorkbook.Worksheets(14).Protect Password:=pg
Application.ScreenUpdating = True
    
End Sub
Attribute VB_Name = "Module2"



Sub Protection()
Attribute Protection.VB_Description = "Macro enregistr|fffd|e le 98-12-09 par Stephan Dussault"
Attribute Protection.VB_ProcData.VB_Invoke_Func = " \n14"
'
' Protection Macro
' Macro enregistr|fffd|e le 98-12-09 par Stephan Dussault
'

'
    Sheets(SheetName(10)).Select
    ActiveSheet.Unprotect Password:=pg
    Sheets(SheetName(11)).Select
    ActiveSheet.Unprotect Password:=pg
    Sheets(SheetName(13)).Select
    ActiveSheet.Unprotect Password:=pg
    Sheets(SheetName(10)).Select
    
End Sub
Attribute VB_Name = "Module3"


Sub print_all()
Attribute print_all.VB_Description = "Macro enregistr|fffd|e le 98-12-09 par Stephan Dussault"
Attribute print_all.VB_ProcData.VB_Invoke_Func = " \n14"
'
' print_all Macro
' Macro enregistr|fffd|e le 98-12-09 par Stephan Dussault
'

'
    Application.ScreenUpdating = False
    Sheets(Array(SheetName(1), SheetName(2), SheetName(3), SheetName(6), SheetName(10), SheetName(11), SheetName(13), SheetName(14), SheetName(15))) _
        .Select
    Sheets(SheetName(3)).Activate
    ActiveWindow.SelectedSheets.PrintOut Copies:=1
    Sheets(SheetName(3)).Select
    Range("I2").Select
    Application.ScreenUpdating = True
End Sub
Attribute VB_Name = "Module4"
Sub RhCollerReset2()
Attribute RhCollerReset2.VB_Description = "Macro recorded 2004-08-25 by Hugo Page"
Attribute RhCollerReset2.VB_ProcData.VB_Invoke_Func = " \n14"
Application.ScreenUpdating = False
Sheets(SheetName(7)).Select
ActiveSheet.Unprotect Password:=pg

Range("A4:E250").Select

Selection.ClearContents
Selection.Locked = False

With Selection.Borders(xlInsideHorizontal)
  .LineStyle = xlContinuous
  .Weight = xlThin
  .ColorIndex = xlAutomatic
End With

Range("B4:E250").Select
If Application.International(xlCountrySetting) = 1 Then
  Selection.NumberFormat = "# ##0"
Else
  Selection.NumberFormat = "#,##0"
End If

With Selection
  .HorizontalAlignment = xlCenter
  .VerticalAlignment = xlBottom
  .WrapText = False
  .Orientation = 0
  .AddIndent = False
  .IndentLevel = 0
  .ShrinkToFit = False
  .ReadingOrder = xlContext
  .MergeCells = False
End With


Range("A4").Select
ActiveSheet.Protect Password:=pg
Application.ScreenUpdating = True


End Sub
Attribute VB_Name = "Module5"

Sub auto_open()

'
' auto_open Macro
' Macro enregistr|fffd|e le 98-12-09 par Stephan Dussault
'

'MsgBox "stop"
pg = "Colonia01"

ChargerNomOnglets
Dim strFormule As String
Dim bToolPackF As Boolean
Dim bToolPackE As Boolean

bToolPackF = False
bToolPackE = False



If Val(Application.Version) < 10 Then
   If Application.LanguageSettings.LanguageID(msoLanguageIDUI) = 1033 Then
        mReturn = MsgBox("The ""GM - Health Check"" application require MS Excel Version 2002 or more", vbOKOnly)
   Else
        mReturn = MsgBox("L'application ""Rapport |fffd|tat de sant|fffd| GM"" requiert la version 2002 de MS Excel or plus", vbOKOnly)
   End If
   Workbooks(ActiveWorkbook.Name).Close SaveChanges:=False
End If

Application.ScreenUpdating = False


bToolPackF = ValiderToolPackF()
bToolPackE = ValiderToolPackE()
If (bToolPackF = False) And (bToolPackE = False) Then
    If Application.LanguageSettings.LanguageID(msoLanguageIDUI) = 1033 Then
        mReturn = MsgBox("The ""GM - Health Check"" application require the ""Analysis ToolPak""", vbOKOnly)
    Else
        mReturn = MsgBox("L'application ""Rapport |fffd|tat de sant|fffd| GM"" requiert l'""Utilitaire d'analyse""", vbOKOnly)
    End If
    Workbooks(ActiveWorkbook.Name).Close SaveChanges:=False
   
Else
    If Application.LanguageSettings.LanguageID(msoLanguageIDUI) = 1033 Then
        strFormule = "=EOMONTH"
    Else
        strFormule = "=FIN.MOIS"
    End If
    'MsgBox ("R|fffd|sultat strFormule :" & strFormule)
End If




'If Application.LanguageSettings.LanguageID(msoLanguageIDUI) = 1033 Then
'   AddIns("Analysis ToolPak").Installed = True
'   strFormule = "=EOMONTH"
'   If Not AddIns("Analysis ToolPak").Installed = True Then
'      mReturn = MsgBox("The ""GM - Health Check"" application require the ""Analysis ToolPak""", vbOKOnly)
'      Workbooks(ActiveWorkbook.Name).Close SaveChanges:=False
'   End If
'Else
'   strFormule = "=FIN.MOIS"
'   On Error GoTo NewAddIns
'   AddIns("Utilitaire d'analyse").Installed = True
'    If Not AddIns("Utilitaire d'analyse").Installed = True Then
'      mReturn = MsgBox("L'application ""Rapport |fffd|tat de sant|fffd| GM"" requiert l'""Utilitaire d'analyse""", vbOKOnly)
'      Workbooks(ActiveWorkbook.Name).Close SaveChanges:=False
'   End If
'   On Error GoTo 0
'End If

TraduireFormules (strFormule)

Application.ScreenUpdating = False
ActiveWorkbook.Unprotect Password:=pg
Sheets(SheetName(5)).Visible = False
ActiveWorkbook.Protect Password:=pg

NettoieCellulesBloquees

Sheets(SheetName(1)).Select

Exit Sub

'NewAddIns:
'     AddIns("Analysis ToolPak").Installed = True
'     strFormule = "=EOMONTH"
'     If Not AddIns("Analysis ToolPak").Installed = True Then
'        mReturn = MsgBox("The ""GM - Health Check"" application require the ""Analysis ToolPak""", vbOKOnly)
'        Workbooks(ActiveWorkbook.Name).Close SaveChanges:=False
'     End If
'Resume Next




End Sub

Function ValiderToolPackF() As Boolean
On Error GoTo AddInsF
AddIns("Utilitaire d'analyse").Installed = True
ValiderToolPackF = True
Exit Function

AddInsF:
ValiderToolPackF = False

End Function

Function ValiderToolPackE() As Boolean
On Error GoTo AddInsF
AddIns("Analysis ToolPak").Installed = True
ValiderToolPackE = True
Exit Function

AddInsF:
ValiderToolPackE = False

End Function





Sub TraduireFormules(ByVal strFormule As String)

' Proc|fffd|dures cr|fffd|es par M. Jasic 2004-04-06
' "Traduire" la formule FIN.MOIS en EOMONTH pour |fffd|viter le conflit
' si la langue d'application est l'anglais

Dim I As Integer
Dim strCell As String
pg = "Colonia01"
    
    Sheets(SheetName(10)).Select
    ActiveSheet.Unprotect Password:=pg
    Sheets(SheetName(9)).Select
    ActiveSheet.Unprotect Password:=pg

SetFormule_BAC_Coller (strFormule)
SetFormule_ValeurGagnee (strFormule)

Worksheets(SheetName(10)).Cells(1, 1).Select


    Sheets(SheetName(10)).Select
    ActiveSheet.Protect Password:=pg
    Sheets(SheetName(9)).Select
    ActiveSheet.Protect Password:=pg

    Sheets(SheetName(1)).Select
    Range("A1").Select
    
End Sub


Private Sub SetFormule_ValeurGagnee(strFormule As String)

Sheets(SheetName(10)).Select
Worksheets(SheetName(10)).Cells(14, 1).Select
ActiveCell.Formula = strFormule & "(D|fffd|but_Projet,0)"

For I = 14 To 73
    strCell = "A" & I
    Worksheets(SheetName(10)).Cells(I + 1, 1).Select
     ActiveCell.Formula = strFormule & "(" & strCell & "," & 1 & ")"
Next

Worksheets(SheetName(10)).Cells(1, 1).Select

End Sub

Private Sub SetFormule_BAC_Coller(strFormule As String)

Dim strCellFormula As String
Dim pos As Integer


Sheets(SheetName(9)).Select
Worksheets(SheetName(9)).Cells(2, 2).Select

ActiveCell.Formula = strFormule & "(D|fffd|but_Projet,0)"

For I = 2 To 90
    Worksheets(SheetName(9)).Cells(2, I + 1).Select
    pos = InStr(ActiveCell.Formula, "(")
    strCellFormula = Mid$(ActiveCell.Formula, pos)
    ActiveCell.Formula = strFormule & strCellFormula
Next

Worksheets(SheetName(9)).Cells(1, 1).Select

End Sub

Sub NettoieCellulesBloquees()

Application.ScreenUpdating = False

'Taux Vendant
Sheets(SheetName(4)).Select
ActiveSheet.Unprotect Password:=pg
Range("A4:B250").Select
Selection.Locked = False
ActiveSheet.Range("A4").Select
ActiveSheet.Protect Password:=pg

'Taux 1
ActiveWorkbook.Unprotect Password:=pg
Sheets(SheetName(5)).Visible = True
Sheets(SheetName(5)).Select
ActiveSheet.Unprotect Password:=pg
Range("B4:C250").Select
Selection.Locked = False
ActiveSheet.Range("B4").Select
ActiveSheet.Protect Password:=pg
Sheets(SheetName(5)).Visible = False
ActiveWorkbook.Protect Password:=pg
Application.ScreenUpdating = True

'Jalon-Coller
Sheets(SheetName(6)).Select
ActiveSheet.Unprotect Password:=pg
Range("B5:F38").Select
Selection.Locked = False
ActiveSheet.Range("B5").Select
ActiveSheet.Protect Password:=pg

'RH-Coller
Sheets(SheetName(7)).Select
ActiveSheet.Unprotect Password:=pg
Range("A4:E250").Select
Selection.Locked = False
ActiveSheet.Range("A4").Select
ActiveSheet.Protect Password:=pg

'Contingence-Coller
Sheets(SheetName(8)).Select
ActiveSheet.Unprotect Password:=pg
Range("A4:D4").Select
Selection.Locked = False
ActiveSheet.Range("A4").Select
ActiveSheet.Protect Password:=pg

'BAC-Coller
Sheets(SheetName(9)).Select
ActiveSheet.Unprotect Password:=pg
Range("A7:CM250").Select
Selection.Locked = False
ActiveSheet.Range("A7").Select
ActiveSheet.Protect Password:=pg

'Valeur gagn|fffd|e
Sheets(SheetName(10)).Select
ActiveSheet.Unprotect Password:=pg
Range("B14:F74").Select
Selection.Locked = False
ActiveSheet.Range("B14").Select
ActiveSheet.Protect Password:=pg

'D|fffd|tail
Sheets(SheetName(11)).Select
ActiveSheet.Unprotect Password:=pg
Range("B8:E1007").Select
Selection.Locked = False
ActiveSheet.Range("B8").Select
ActiveSheet.Protect Password:=pg

'Tierce partie-Coller
Sheets(SheetName(12)).Select
ActiveSheet.Unprotect Password:=pg
Range("A6:E263").Select
Selection.Locked = False
ActiveSheet.Range("A6").Select
ActiveSheet.Protect Password:=pg

Application.ScreenUpdating = True

End Sub
Attribute VB_Name = "Module6"
Sub d|fffd|tail_d|fffd|part()
Attribute d|fffd|tail_d|fffd|part.VB_Description = "Macro enregistr|fffd|e le 98-12-10 par Stephan Dussault"
Attribute d|fffd|tail_d|fffd|part.VB_ProcData.VB_Invoke_Func = " \n14"
'
' d|fffd|tail_d|fffd|part Macro
' Macro enregistr|fffd|e le 98-12-10 par Stephan Dussault
'

'
    Application.ScreenUpdating = False
    
    Sheets(SheetName(11)).Select
    ActiveSheet.Unprotect Password:=pg
    
    ActiveWindow.SmallScroll Down:=24
    ActiveWindow.ScrollRow = 1
    Rows("8:1007").Select
    Selection.EntireRow.Hidden = False
    Range("A8:E1007").Select
    Selection.ClearContents
    Selection.Locked = False
    Range("A8").Select
    
    Sheets(SheetName(11)).Select
    ActiveSheet.Protect Password:=pg
     Application.ScreenUpdating = True
    
End Sub
Attribute VB_Name = "Module7"
Sub ContigenceCollerReset()
Attribute ContigenceCollerReset.VB_Description = "Macro recorded 2004-08-25 by Hugo Page"
Attribute ContigenceCollerReset.VB_ProcData.VB_Invoke_Func = " \n14"
Application.ScreenUpdating = False
Sheets(SheetName(8)).Select
ActiveSheet.Unprotect Password:=pg

Range("A4:D4").Select

Selection.ClearContents
Selection.Locked = False

If Application.International(xlCountrySetting) = 1 Then
  Selection.NumberFormat = "# ##0"
Else
  Selection.NumberFormat = "#,##0"
End If

With Selection
  .HorizontalAlignment = xlCenter
  .VerticalAlignment = xlBottom
  .WrapText = False
  .Orientation = 0
  .AddIndent = False
  .IndentLevel = 0
  .ShrinkToFit = False
  .ReadingOrder = xlContext
  .MergeCells = False
End With
With Selection.Borders(xlEdgeTop)
  .LineStyle = xlContinuous
  .Weight = xlThin
  .ColorIndex = xlAutomatic
End With
With Selection.Borders(xlEdgeBottom)
  .LineStyle = xlContinuous
  .Weight = xlThin
  .ColorIndex = xlAutomatic
End With


Range("A4").Select
ActiveSheet.Protect Password:=pg
Application.ScreenUpdating = True
End Sub
Attribute VB_Name = "Module8"
Sub BacCollerReset()
Attribute BacCollerReset.VB_Description = "Macro recorded 2004-08-25 by Hugo Page"
Attribute BacCollerReset.VB_ProcData.VB_Invoke_Func = " \n14"

Application.ScreenUpdating = False
Sheets(SheetName(9)).Select
ActiveSheet.Unprotect Password:=pg
Range("A7:CM250").Select
Selection.Locked = False
Selection.ClearContents

With Selection.Borders(xlInsideHorizontal)
  .LineStyle = xlContinuous
  .Weight = xlThin
  .ColorIndex = xlAutomatic
End With
With Selection.Borders(xlInsideVertical)
  .LineStyle = xlContinuous
  .Weight = xlThin
  .ColorIndex = xlAutomatic
End With
With Selection.Borders(xlEdgeLeft)
  .LineStyle = xlContinuous
  .Weight = xlThin
  .ColorIndex = xlAutomatic
End With
With Selection.Borders(xlEdgeRight)
  .LineStyle = xlContinuous
  .Weight = xlThin
  .ColorIndex = xlAutomatic
End With
With Selection
  .HorizontalAlignment = xlLeft
  .VerticalAlignment = xlBottom
  .WrapText = False
  .Orientation = 0
  .AddIndent = False
  .IndentLevel = 0
  .ShrinkToFit = False
  .ReadingOrder = xlContext
  .MergeCells = False
End With

Range("B7:CM250").Select
If Application.International(xlCountrySetting) = 1 Then
  Selection.NumberFormat = "# ##0"
Else
  Selection.NumberFormat = "#,##0"
End If

With Selection
  .HorizontalAlignment = xlCenter
  .VerticalAlignment = xlBottom
  .WrapText = False
  .Orientation = 0
  .AddIndent = False
  .IndentLevel = 0
  .ShrinkToFit = False
  .ReadingOrder = xlContext
  .MergeCells = False
End With

Range("A7").Select
ActiveSheet.Protect Password:=pg
Application.ScreenUpdating = True

End Sub
Attribute VB_Name = "Module9"
Sub Button134_Click()

End Sub
Attribute VB_Name = "Sheet1"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Control = "btnCorrectionSellingRate, 1, 0, MSForms, CommandButton"
Attribute VB_Control = "btn_CorrectionWB, 2, 1, MSForms, CommandButton"

Private Sub btn_CorrectionWB_Click()
Dim iCol, iRow, iCompt1 As Integer
Dim sInString, s  As String

iCol = 2
iRow = 4
iCompt1 = 0
   
    For iCompt1 = iRow To 250
       If Len(Trim(ActiveSheet.Cells(iCompt1, iCol).Value)) > 0 Then
         ActiveSheet.Cells(iCompt1, iCol).Value = ActiveSheet.Cells(iCompt1, iCol).Value * 7.5
       End If
    Next
    If Language = 1 Then
        s = MsgBox("Fin du traitement", vbOKOnly, "Conversion termin|fffd|e")
    Else
        s = MsgBox("End of process", vbOKOnly, "Conversion completed")
    End If
End Sub

Private Sub btnCorrectionSellingRate_Click()
Const LineChange = vbCr + vbLf
Dim iCol, iRow, iCompt1 As Integer
Dim sInString, sStringInput As String

Application.ScreenUpdating = False
Sheets(SheetName(4)).Select
ActiveSheet.Unprotect Password:=pg
Range("A4:B250").Select
Selection.Locked = False
Range("A4").Select

iCol = 2
iRow = 4
iCompt1 = 0
For iCompt1 = iRow To 250
  sStringInput = Cells(iCompt1, iCol).Value
  If Not IsNumeric(sStringInput) Then
    If Len(sStringInput) > 0 Then
      Cells(iCompt1, iCol).ClearContents
      Cells(iCompt1, iCol).ClearFormats
      sStringInput = Replace(sStringInput, "$", "")
      Cells(iCompt1, iCol).Value = cleanUpSellingRateString(sStringInput)
    End If
  End If
Next
Range("B4:B250").Select
If Application.International(xlCountrySetting) = 1 Then
 Selection.NumberFormat = "$#,##0.00"
Else
 Selection.NumberFormat = "$# ##0.00"
End If
With Selection
      .HorizontalAlignment = xlCenter
      .VerticalAlignment = xlBottom
      .WrapText = False
      .Orientation = 0
      .AddIndent = False
      .IndentLevel = 0
      .ShrinkToFit = False
      .ReadingOrder = xlContext
      .MergeCells = False
End With
Range("A4:B250").Select
Selection.Locked = False
Range("B4:B250").Select
Selection.Borders(xlDiagonalDown).LineStyle = xlNone
Selection.Borders(xlDiagonalUp).LineStyle = xlNone
With Selection.Borders(xlEdgeLeft)
    .LineStyle = xlContinuous
    .Weight = xlThin
    .ColorIndex = xlAutomatic
End With
With Selection.Borders(xlEdgeTop)
    .LineStyle = xlContinuous
    .Weight = xlThin
    .ColorIndex = xlAutomatic
End With
With Selection.Borders(xlEdgeBottom)
    .LineStyle = xlContinuous
    .Weight = xlThin
    .ColorIndex = xlAutomatic
End With

With Selection.Borders(xlEdgeRight)
    .LineStyle = xlContinuous
    .Weight = xlMedium
    .ColorIndex = xlAutomatic
End With
Selection.Borders(xlInsideVertical).LineStyle = xlNone
With Selection.Borders(xlInsideHorizontal)
    .LineStyle = xlContinuous
    .Weight = xlThin
    .ColorIndex = xlAutomatic
End With
ActiveSheet.Range("A4").Select
ActiveSheet.Protect Password:=pg
Application.ScreenUpdating = True

If Language = 1 Then
    s = MsgBox("Fin du traitement", vbOKOnly, "Correction termin|fffd|e")
Else
    s = MsgBox("End of process", vbOKOnly, "Correction completed")
End If
End Sub
Function cleanUpSellingRateString(InString As String) As String

Dim iStringLenght, iPos, iCompt1 As Integer
iStringLenght = Len(InString)
If (iStringLenght > 0) Then
    For iCompt1 = 1 To iStringLenght
        If UCase(Mid(InString, iCompt1, 1)) = "J" Or UCase(Mid(InString, iCompt1, 1)) = "D" Or UCase(Mid(InString, iCompt1, 1)) = "H" Then
            Exit For
        End If
    Next
    If UCase(Mid(Trim(InString), iCompt1, 1)) = "H" Then
        'cleanUpSellingRateString = Round(Int(Round(Trim(Mid(InString, 1, (iCompt1 - 2))))) * 7.5)
        cleanUpSellingRateString = Replace(Trim(Mid(InString, 1, (iCompt1 - 2)) * 7.5), ",", ".")
       
    Else
        cleanUpSellingRateString = Trim(Mid(InString, 1, (iCompt1 - 2)))
    End If
Else
    cleanUpSellingRateString = ""
End If


End Function


Attribute VB_Name = "Sheet2"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Private Sub Worksheet_Activate()
Worksheets(SheetName(14)).PageSetup.RightFooter = "For period ending " & Sheets(SheetName(3)).Cells(2, 11)
End Sub

Attribute VB_Name = "ThisWorkbook"
Attribute VB_Base = "0{00020819-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Private Sub Workbook_BeforeClose(Cancel As Boolean)
    
On Error Resume Next
Application.ScreenUpdating = False
ActiveWorkbook.Unprotect Password:=pg
Sheets(SheetName(5)).Visible = False
ActiveWorkbook.Protect Password:=pg
On Error GoTo 0

End Sub

Private Sub Workbook_BeforeSave(ByVal SaveAsUI As Boolean, Cancel As Boolean)

Application.ScreenUpdating = False
ActiveWorkbook.Unprotect Password:=pg
Sheets(SheetName(5)).Visible = False
ActiveWorkbook.Protect Password:=pg
Application.ScreenUpdating = True

End Sub

Attribute VB_Name = "boxmotdepasse"
Attribute VB_Base = "0{F155DD63-F3A0-4DFD-8E77-A2AB7F0446AB}{FD6ED1CC-D683-4DF0-983C-AC01351B640E}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False






Private Sub cmdannuler_Click()
boxmotdepasse.Hide
Range("mot").Value = Range("mot_de_passe")
Range("e4").Select
End Sub

Private Sub Cmdok_Click()

boxmotdepasse.Hide
Range("mot_de_passe").Value = Range("mot").Value
Range("e4").Select
End Sub

' InQuest injected base64 decoded content
' {BjW.
' JRzYb

INQUEST-PP=macro
