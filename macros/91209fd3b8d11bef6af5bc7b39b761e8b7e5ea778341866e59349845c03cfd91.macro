Attribute VB_Name = "Bohrprogramme"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Control = "CmdZur|fffd|ck, 1, 0, MSForms, CommandButton"

Private Sub CmdZur|fffd|ck_Click()
    formBarku.Show
End Sub

Private Sub Worksheet_Activate()

End Sub

Private Sub Worksheet_SelectionChange(ByVal Target As Range)

End Sub
Attribute VB_Name = "DieseArbeitsmappe"
Attribute VB_Base = "0{00020819-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Private Sub Workbook_Open()
    formBarku.Show
End Sub

Private Sub Workbook_SheetActivate(ByVal Sh As Object)
    MsgBox Sh.Name
End Sub
Attribute VB_Name = "XemoConst"
'  Bits im Systemstatus
' -------------------------------
Public Const STATE_F0 = &H1
Public Const STATE_F1 = &H2
Public Const STATE_F2 = &H4
Public Const STATE_ERR = &H8
Public Const STATE_MS = &H10
Public Const STATE_OR0 = &H20
Public Const STATE_RUN = &H40

Public Const PSTATE_PSTATE = &H7
Public Const PSTATE_ERROR = &H8
Public Const PSTATE_ONERROR = &H10
Public Const PSTATE_DEBUG = &H40

Public Const STATE_FIFO = &H3
Public Const STATE_FIFO_EMPTY = 0
Public Const STATE_FIFO_LOW = 1
Public Const STATE_FIFO_HIGH = 2
Public Const STATE_FIFO_FULL = 3

'  Syscontrol Kommandos
Public Const m_Reset = 1                '  System Reset
Public Const m_Break = 2                '  MotionBasic Programm unterbrechen
Public Const m_Halt = 3         '  MotionBasic Programm anhalten

Public Const m_PrgQuit = 100            '  MotionBasic Programm benden
Public Const m_DebugShell = 101         '  Zur Debug-Shell wechseln
Public Const m_OnlineShell = 102                '  Zur Online-Shell wechseln

'  SetFifo FifoStatus
' -------------------------------
Public Const m_FfDisable = 1
Public Const m_FfEnable = 2
Public Const m_FfClear = 3

'  Tastatur-Codes
Public Const m_Key_F1 = &H13B
Public Const m_Key_F2 = &H13C
Public Const m_Key_F3 = &H13D
Public Const m_Key_F4 = &H13E
Public Const m_Key_Bs = &H8
Public Const m_Key_Enter = &HD
Public Const m_Key_Up = &H148
Public Const m_Key_Down = &H150
Public Const m_Key_Right = &H14D
Public Const m_Key_Left = &H14B

'  KeyLed-Codes
' -------------------------------
Public Const m_LedOff = 0
Public Const m_LedOn = 1
Public Const m_LedBlink = 10
Public Const m_LedFlash = 11

'  Die Achsbezeichner
' -------------------------------
Public Const m_X = 0
Public Const m_Y = 1
Public Const m_Z = 2
Public Const m_A = 3
Public Const m_XALL = 255               '  Alle Achsen / Achsparameter
Public Const m_ALL = 254                '  Alle Achs- und Bahnparameter

'  Seriell IO
Public Const m_COM1 = 1
Public Const m_BD9600 = 5
Public Const m_BD19200 = 6
Public Const m_BD28800 = 7
Public Const m_BD38400 = 8
Public Const m_BD57600 = 9

'  USB
Public Const USB_OFF = 0
Public Const USB_AUTO = 1
Public Const USB_ONLY = 2

'  Diverse
Public Const m_Off = 0

'  Systemparameter
Public Const BOT_SPARM_NO = 1000

Public Const m_State = 1000
Public Const m_Version = 1004
Public Const m_Release = 1005
Public Const m_ComRelease = 1006
Public Const m_Extent = 1007
Public Const m_Clock = 1008

Public Const m_ErrNo = 1010
Public Const m_ErrState = 1011
Public Const m_ErrLine = 1012
Public Const m_ErrAxis = 1013
Public Const m_ErrParam = 1014
Public Const m_SubError = 1015

Public Const m_FifoSize = 1021
Public Const m_FifoLevel = 1022
Public Const m_FifoLeft = 1023
Public Const m_FifoMarker = 1024

Public Const m_Mode1 = 1030
Public Const m_CanMode = 1034
Public Const m_OtSelect = 1035
Public Const m_Can2Mode = 1036
Public Const m_Can1Device = 1038
Public Const m_Can2Device = 1039

Public Const m_IpGroup = 1040

Public Const m_BkPwmCycle = 1050
Public Const m_BkPwmDuty = 1051

Public Const m_AnlIn = 1060
Public Const m_AnlOut = 1061

Public Const m_OvrIn = 1062
Public Const m_JoyX = 1063
Public Const m_JoyY = 1064

Public Const m_HandWheel = 1070
Public Const m_Encoder = 1071
Public Const m_EncIdx = 1072
Public Const m_EncIpr = 1073

Public Const m_Ovride = 1075
Public Const m_Omode = 1076
Public Const m_OvScale = 1077

Public Const m_SAnlIn0 = 1080
Public Const m_SAnlIn1 = 1081
Public Const m_SAnlIn2 = 1082

Public Const m_VoMode = 1090
Public Const m_VoScale = 1091
Public Const m_VoOffs = 1092
Public Const m_VoMin = 1093
Public Const m_VoMax = 1094

Public Const m_AnlFSel = 1100
Public Const m_AFType = 1101
Public Const m_AFSTime = 1102
Public Const m_AFSpread = 1103
Public Const m_AFHyster = 1104
Public Const m_AFTrack = 1105
Public Const m_AFAverage = 1106

'  ab 1200 sind zun|fffd|chst nicht dokumetierte
'  Systemparameter zur Ger|fffd|te|fffd|berwachung
Public Const TOP_SPARM_NO = 1250        '  Gr|fffd|sste Systemparameter-Nummer

'  Setup-Parameter
'  Die Setup-Parameter sind besonders schreibgesch|fffd|tzt
'  und k|fffd|nnen nur beschrieben werden, wenn der Hexschalter auf 0x0e steht
Public Const BOT_SUPARM_NO = 1400
Public Const m_ComPort = 1400   '  RS232 Programmier-Schnittstelle ausw|fffd|hlen
Public Const m_Bdrate = 1401    '  Baudrate der RS232 Schnittstelle festlegen
Public Const m_DsplContr = 1402 '  Xemo Display Kontrast
Public Const m_PonComDelay = 1403       '  Power On ComPort Delay
Public Const m_USBConfig = 1404 '  USB Schnittstelle konfigurieren
Public Const TOP_SUPARM_NO = 1404

'  Achsparameter
Public Const BOT_XPARM_NO = 2000

Public Const m_Speed = 2000
Public Const m_Accel = 2001
Public Const m_Decel = 2002
Public Const m_Vmin = 2003
Public Const m_LDecel = 2004
Public Const m_MaxVel = 2008
Public Const m_MaxAcc = 2009
Public Const m_IpLink = 2010
Public Const m_IpAxis = 2011

Public Const m_NodeId = 2012

Public Const m_H1Speed = 2020
Public Const m_H2Speed = 2021
Public Const m_H3Speed = 2022
Public Const m_HOffset = 2023
Public Const m_HVerify = 2024
Public Const m_HMethod = 2025

Public Const m_OpMode = 2030
Public Const m_Current = 2031
Public Const m_FErrWin = 2032
Public Const m_TPosWin = 2033
Public Const m_TPosTime = 2034
Public Const m_BrakeOutp = 2035
Public Const m_BrkDelay1 = 2036
Public Const m_BrkDelay2 = 2037

Public Const m_Uscale = 2040
Public Const m_Iscale = 2041

Public Const m_Zero = 2042
Public Const m_Origin = 2043
Public Const m_Refp = 2044
Public Const m_SlLimit = 2045
Public Const m_SrLimit = 2046
Public Const m_Pmode = 2047
Public Const m_BLash = 2048

Public Const m_Micro = 2050
Public Const m_MPhi = 2051
Public Const m_StopCurr = 2052

Public Const m_APos = 2061
Public Const m_RPos = 2062
Public Const m_RVelo = 2063
Public Const m_XEncoder = 2064

Public Const m_XOvr = 2075
Public Const m_XOmode = 2076

Public Const m_EgState = 2090
Public Const m_EgMode = 2092
Public Const m_EgSource = 2093
Public Const m_EgMult = 2094

Public Const TOP_XPARM_NO = 2094

'  Bahnparameter
Public Const BOT_IPARM_NO = 3000

Public Const m_IpSpeed = 3000
Public Const m_IpAccel = 3001
Public Const m_IpDecel = 3002
Public Const m_IpVmin = 3003
Public Const m_IpLDecel = 3004
Public Const m_IpVend = 3005
Public Const m_IpFeed = 3006
Public Const m_IpMaxVel = 3008
Public Const m_IpMaxAcc = 3009
Public Const m_IpDim = 3010
Public Const m_IpUnit = 3011

Public Const m_IpLaFact = 3013
Public Const m_IpLaCvFact = 3014
Public Const m_IpLaTprof = 3015

Public Const m_IpVelo = 3063

Public Const m_IpOvr = 3075
Public Const m_IpOmode = 3076

Public Const TOP_IPARM_NO = 3076

'  EA-Parameter
Public Const BOT_IOPARM_NO = 4000
Public Const m_InPolarity = 4000
Public Const m_OutPolarity = 4001
Public Const TOP_IOPARM_NO = 4003


'  Xemo_DLL Koordinaten-Bezeichner
' -------------------------------
Public Const C_X = &H1
Public Const C_Y = &H2
Public Const C_XY = &H3
Public Const C_Z = &H4
Public Const C_XZ = &H5
Public Const C_YZ = &H6
Public Const C_XYZ = &H7
Public Const C_A = &H8
Public Const C_XA = &H9
Public Const C_YA = &HA
Public Const C_XYA = &HB
Public Const C_ZA = &HC
Public Const C_XZA = &HD
Public Const C_YZA = &HE
Public Const C_XYZA = &HF

'  Xemo_DLL Error-Codes
' -------------------------------
Public Const ERR_XEMO = 1
Public Const ERR_COM_PORT = 2
Public Const ERR_RCV_OVERFLOW = 3
Public Const ERR_RCV_TIMEOUT = 4
Public Const ERR_FIFO_TIMEOUT = 5
Public Const ERR_GETSTATE = 6
Public Const ERR_RCV_CMD = 7
Public Const ERR_TRM_TIMEOUT = 8
Public Const ERR_CHECKSUM = 9

'  Xemo_DLL Error-Status
' -------------------------------
Public Const ERR_LEFT = -1
Public Const NO_ERR = 0
Public Const ERR_XEMO_PENDING = 1
Public Const ERR_COM_PENDING = 2
Public Const ERR_RETRY = 3
Public Const ERR_CANCEL = 4
Public Const ERR_COM_DEINI = 5
Attribute VB_Name = "XemoDll"

Public Const XEMO_DLL_VESRION = "2.07"







' ----------------------------------------------------------------------
'  Initialisierungs Funktionen
' ----------------------------------------------------------------------
Public Declare PtrSafe Sub ML_TimeOut Lib "C:\Windows\SysWOW64\Xemo64.dll" (ByVal ComTimeout As Double, ByVal FifoTimeout As Double)
Public Declare PtrSafe Sub ML_FifoIdle Lib "C:\Windows\SysWOW64\Xemo64.dll" (ByVal FifoIdle As Long)
Public Declare PtrSafe Function ML_IniCom Lib "C:\Windows\SysWOW64\Xemo64.dll" (ByVal ComNo As Integer, ByVal Baud As Long) As Integer
Public Declare PtrSafe Sub ML_DeIniCom Lib "C:\Windows\SysWOW64\Xemo64.dll" ()
Public Declare PtrSafe Sub ML_CsumMode Lib "C:\Windows\SysWOW64\Xemo64.dll" (ByVal mode As Integer)


Public Declare PtrSafe Sub ML_GetDllVersion Lib "C:\Windows\SysWOW64\Xemo64.dll" (ByVal VERSION As String, ByVal MaxLen As Integer)

' ----------------------------------------------------------------------
'  Fehlerbehandlung
' ----------------------------------------------------------------------
Public Declare PtrSafe Sub ML_ErrorCallBack Lib "C:\Windows\SysWOW64\Xemo64.dll" (ByVal ErrorFunc As Long)
Public Declare PtrSafe Sub ML_RunErrCallBack Lib "C:\Windows\SysWOW64\Xemo64.dll" (ByVal ErrorFunc As Long)
Public Declare PtrSafe Function ML_GetErrCode Lib "C:\Windows\SysWOW64\Xemo64.dll" () As Integer
Public Declare PtrSafe Function ML_GetErrState Lib "C:\Windows\SysWOW64\Xemo64.dll" () As Integer
Public Declare PtrSafe Sub ML_SetErrState Lib "C:\Windows\SysWOW64\Xemo64.dll" (ByVal state As Integer)
Public Declare PtrSafe Function ML_LastRunErr Lib "C:\Windows\SysWOW64\Xemo64.dll" () As Integer



Public Declare PtrSafe Sub ML_GetComErrText Lib "C:\Windows\SysWOW64\Xemo64.dll" (ByVal ErrCode As Integer, ByVal ErrTxt As String, ByVal MaxLen As Integer)

' ----------------------------------------------------------------------
'  Daten|fffd|bertragung
' ----------------------------------------------------------------------
Public Declare PtrSafe Function ML_FifoFull Lib "C:\Windows\SysWOW64\Xemo64.dll" () As Integer
Public Declare PtrSafe Sub ML_FifoBreak Lib "C:\Windows\SysWOW64\Xemo64.dll" ()
Public Declare PtrSafe Sub ML_DoEvents Lib "C:\Windows\SysWOW64\Xemo64.dll" ()

Public Declare PtrSafe Sub ML_PutChar Lib "C:\Windows\SysWOW64\Xemo64.dll" (ByVal TrmChar As Integer)
Public Declare PtrSafe Sub ML_PutWord Lib "C:\Windows\SysWOW64\Xemo64.dll" (ByVal TrmWord As Integer)
Public Declare PtrSafe Sub ML_PutLong Lib "C:\Windows\SysWOW64\Xemo64.dll" (ByVal TrmLong As Long)
Public Declare PtrSafe Sub ML_PutData Lib "C:\Windows\SysWOW64\Xemo64.dll" (ByRef TrmData As Any, ByVal Size As Integer)

Public Declare PtrSafe Function ML_GetRcvState Lib "C:\Windows\SysWOW64\Xemo64.dll" () As Integer
Public Declare PtrSafe Function ML_GetChar Lib "C:\Windows\SysWOW64\Xemo64.dll" () As Integer
Public Declare PtrSafe Function ML_GetWord Lib "C:\Windows\SysWOW64\Xemo64.dll" () As Integer
Public Declare PtrSafe Function ML_GetLong Lib "C:\Windows\SysWOW64\Xemo64.dll" () As Long
Public Declare PtrSafe Sub ML_GetData Lib "C:\Windows\SysWOW64\Xemo64.dll" (ByRef RcvData As Any, ByVal Size As Integer)

' ----------------------------------------------------------------------
'  MotionBasic-Funktionen
' ----------------------------------------------------------------------
'  Systemkontrolle
Public Declare PtrSafe Sub MB_SysControl Lib "C:\Windows\SysWOW64\Xemo64.dll" (ByVal Control As Integer)
Public Declare PtrSafe Function MB_GetState Lib "C:\Windows\SysWOW64\Xemo64.dll" () As Integer
Public Declare PtrSafe Sub MB_SetFifo Lib "C:\Windows\SysWOW64\Xemo64.dll" (ByVal state As Integer)
Public Declare PtrSafe Sub MB_ResErr Lib "C:\Windows\SysWOW64\Xemo64.dll" ()
Public Declare PtrSafe Sub MB_Call Lib "C:\Windows\SysWOW64\Xemo64.dll" (ByVal ProgNr As Integer)

'  Systemparameter
Public Declare PtrSafe Sub MB_Set Lib "C:\Windows\SysWOW64\Xemo64.dll" (ByVal Parameter As Integer, ByVal Wert As Long)
Public Declare PtrSafe Sub MB_ASet Lib "C:\Windows\SysWOW64\Xemo64.dll" (ByVal Achse As Integer, ByVal Parameter As Integer, ByVal Wert As Long)
Public Declare PtrSafe Sub MB_IoSet Lib "C:\Windows\SysWOW64\Xemo64.dll" (ByVal ByteNr As Integer, ByVal BitNr1 As Integer, ByVal BitNr2 As Integer, ByVal Parameter As Integer, ByVal Wert As Integer)
Public Declare PtrSafe Function MB_Get Lib "C:\Windows\SysWOW64\Xemo64.dll" (ByVal Parameter As Integer) As Long
Public Declare PtrSafe Function MB_AGet Lib "C:\Windows\SysWOW64\Xemo64.dll" (ByVal Achse As Integer, ByVal Parameter As Integer) As Long
Public Declare PtrSafe Function MB_IoGet Lib "C:\Windows\SysWOW64\Xemo64.dll" (ByVal ByteNr As Integer, ByVal BitNr1 As Integer, ByVal BitNr2 As Integer, ByVal Parameter As Integer) As Integer

'  Steuerung einzelner Achsen
Public Declare PtrSafe Sub MB_Jog Lib "C:\Windows\SysWOW64\Xemo64.dll" (ByVal Achse As Integer, ByVal Geschwindigkeit As Long)
Public Declare PtrSafe Sub MB_Amove Lib "C:\Windows\SysWOW64\Xemo64.dll" (ByVal Achse As Integer, ByVal Zielposition As Long)
Public Declare PtrSafe Sub MB_Rmove Lib "C:\Windows\SysWOW64\Xemo64.dll" (ByVal Achse As Integer, ByVal Verfahrweg As Long)
Public Declare PtrSafe Sub MB_Home Lib "C:\Windows\SysWOW64\Xemo64.dll" (ByVal Achse As Integer)
Public Declare PtrSafe Sub MB_Stop Lib "C:\Windows\SysWOW64\Xemo64.dll" (ByVal Achse As Integer)
Public Declare PtrSafe Function MB_Busy Lib "C:\Windows\SysWOW64\Xemo64.dll" (ByVal Achse As Integer) As Integer

'  Bahnsteuerung
Public Declare PtrSafe Sub MB_Lin Lib "C:\Windows\SysWOW64\Xemo64.dll" (ByVal C_Mask As Integer, ByRef Coordinate As Long)
Public Declare PtrSafe Sub MB_Lin0 Lib "C:\Windows\SysWOW64\Xemo64.dll" (ByVal C_Mask As Integer, ByRef Coordinate As Long)
Public Declare PtrSafe Sub MB_Lin1 Lib "C:\Windows\SysWOW64\Xemo64.dll" (ByVal C_Mask As Integer, ByRef Coordinate As Long)
Public Declare PtrSafe Sub MB_Circle Lib "C:\Windows\SysWOW64\Xemo64.dll" (ByVal Radius As Long, ByVal Anfangswinkel As Long, ByVal Endwinkel As Long)
Public Declare PtrSafe Sub MB_Arc Lib "C:\Windows\SysWOW64\Xemo64.dll" (ByVal C_Mask As Integer, ByVal Radius As Long, ByRef Coordinate As Long)
Public Declare PtrSafe Sub MB_Arcc Lib "C:\Windows\SysWOW64\Xemo64.dll" (ByVal C_Mask As Integer, ByVal Mx As Long, ByVal My As Long, ByRef Coordinate As Long)
Public Declare PtrSafe Sub MB_Arcw Lib "C:\Windows\SysWOW64\Xemo64.dll" (ByVal C_Mask As Integer, ByVal Mx As Long, ByVal My As Long, ByRef Coordinate As Long)

'  Ein- und Ausg|fffd|nge
Public Declare PtrSafe Sub MB_Out Lib "C:\Windows\SysWOW64\Xemo64.dll" (ByVal ByteNr As Integer, ByVal BitNr1 As Integer, ByVal BitNr2 As Integer, ByVal Wert As Integer)
Public Declare PtrSafe Sub MB_Sout Lib "C:\Windows\SysWOW64\Xemo64.dll" (ByVal ByteNr As Integer, ByVal BitNr1 As Integer, ByVal BitNr2 As Integer, ByVal Wert As Integer)
Public Declare PtrSafe Function MB_Rout Lib "C:\Windows\SysWOW64\Xemo64.dll" (ByVal ByteNr As Integer, ByVal BitNr1 As Integer, ByVal BitNr2 As Integer) As Integer
Public Declare PtrSafe Function MB_In Lib "C:\Windows\SysWOW64\Xemo64.dll" (ByVal ByteNr As Integer, ByVal BitNr1 As Integer, ByVal BitNr2 As Integer) As Integer
Public Declare PtrSafe Sub MB_Waitinp Lib "C:\Windows\SysWOW64\Xemo64.dll" (ByVal ByteNr As Integer, ByVal BitNr1 As Integer, ByVal BitNr2 As Integer, ByVal Wert As Integer)

Public Declare PtrSafe Function MB_Inw Lib "C:\Windows\SysWOW64\Xemo64.dll" (ByVal ByteNr As Integer) As Integer
Public Declare PtrSafe Sub MB_Outw Lib "C:\Windows\SysWOW64\Xemo64.dll" (ByVal ByteNr As Integer, ByVal Wert As Integer)
Public Declare PtrSafe Function MB_Routw Lib "C:\Windows\SysWOW64\Xemo64.dll" (ByVal ByteNr As Integer) As Integer

'  Textausgabe
Public Declare PtrSafe Sub MB_Print Lib "C:\Windows\SysWOW64\Xemo64.dll" (ByVal text As String)
Public Declare PtrSafe Sub MB_Printxy Lib "C:\Windows\SysWOW64\Xemo64.dll" (ByVal x As Integer, ByVal y As Integer, ByVal text As String)
Public Declare PtrSafe Sub MB_Cpos Lib "C:\Windows\SysWOW64\Xemo64.dll" (ByVal x As Integer, ByVal y As Integer)
Public Declare PtrSafe Sub MB_Ctype Lib "C:\Windows\SysWOW64\Xemo64.dll" (ByVal cType As Integer)
Public Declare PtrSafe Sub MB_TextAttrib Lib "C:\Windows\SysWOW64\Xemo64.dll" (ByVal Attrib As Integer)
Public Declare PtrSafe Sub MB_Cls Lib "C:\Windows\SysWOW64\Xemo64.dll" ()
Public Declare PtrSafe Sub MB_Cleol Lib "C:\Windows\SysWOW64\Xemo64.dll" ()

'  Tastatureingabe
Public Declare PtrSafe Function MB_KeyState Lib "C:\Windows\SysWOW64\Xemo64.dll" () As Integer
Public Declare PtrSafe Function MB_KeyPressed Lib "C:\Windows\SysWOW64\Xemo64.dll" () As Integer
Public Declare PtrSafe Function MB_KeyRead Lib "C:\Windows\SysWOW64\Xemo64.dll" () As Integer
Public Declare PtrSafe Sub MB_KeyClear Lib "C:\Windows\SysWOW64\Xemo64.dll" ()
Public Declare PtrSafe Sub MB_KeyLed Lib "C:\Windows\SysWOW64\Xemo64.dll" (ByVal Key As Integer, ByVal Onoff As Integer)

'  Zeitfunktionen
Public Declare PtrSafe Sub MB_Delay Lib "C:\Windows\SysWOW64\Xemo64.dll" (ByVal Verweilzeit As Long)
Public Declare PtrSafe Sub MB_Still Lib "C:\Windows\SysWOW64\Xemo64.dll" (ByVal Achse As Integer)


' ----------------------------------------------------------------------
'  Weitere nicht dokumetierte Funktionen
' ----------------------------------------------------------------------
Public Declare PtrSafe Sub MB_SdoTrm Lib "C:\Windows\SysWOW64\Xemo64.dll" (ByVal NodeId As Integer, ByVal Index As Integer, ByVal SubIndex As Integer, ByVal Value As Long)
Public Declare PtrSafe Function MB_SdoRcv Lib "C:\Windows\SysWOW64\Xemo64.dll" (ByVal NodeId As Integer, ByVal Index As Integer, ByVal SubIndex As Integer) As Long
Public Declare PtrSafe Function ML_PutDataCsum Lib "C:\Windows\SysWOW64\Xemo64.dll" (ByRef TrmData As Any, ByVal Size As Integer) As Integer


Attribute VB_Name = "formBarku"
Attribute VB_Base = "0{39EC1E09-4847-4C1D-A289-EA86865F0CD5}{3CAA82BA-8509-4897-9317-F3F1C2B0CC2F}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Option Explicit

Dim UebertragungAbgebrochen As Integer

Function Ini_Xemo() As Boolean
Dim vers_xemo As Long
Dim sw As Long
Dim text As String

    ML_IniCom 0, 19200
    Do
        
        MB_GetState
           
        Dim ErrState As Integer
        ErrState = ML_GetErrState()
        
        Select Case ErrState
        Case NO_ERR
            sw = MB_Get(REG_NR_SW_XEMO)
            If sw <> SW_NR_XEMO Then
                MsgBox ("wrong software in the xemo")
                text = Str(sw)
                MsgBox (text)
            End If
            vers_xemo = MB_Get(REG_NR_VERS_XEMO)
            If vers_xemo < MIN_VERS_XEMO Then
                MsgBox ("minimum version " + Str(MIN_VERS_XEMO))
                text = Str(vers_xemo)
                MsgBox (text)
            End If
            MB_Set REG_NR_VERS, VERSION
            Ini_Xemo = True
            Exit Do

        Case ERR_CANCEL
            Ini_Xemo = False
            Exit Function

        Case Else
        
            Call MsgBox("serial connection cannot be opened", vbOKCancel + vbQuestion, "BTH welding")
         
            Ini_Xemo = False
            Exit Function
        End Select
    Loop

End Function
Function daten_senden() As Integer
Dim i As Integer
Dim state As Integer
Dim ack_state As Long
Dim retval As Integer
Dim pos_text As String
Dim ack As Long
Dim prog As Long

    UebertragungAbgebrochen = False
    daten_senden = False
    retval = MsgBox("xemo in start menu?", vbOKCancel + vbQuestion, "BTH welding")
    If retval <> vbOK Then
        Exit Function
        MsgBox ("sending of data aborted")
    End If
    ListBoxPositionen_.Clear
    
    For i = 1 To MAX_DATENSAETZE
        pos_text = Str(i) + ":" + Str(pos_array(0, i)) + "," + Str(pos_array(1, i))
        pos_text = pos_text + "," + Str(pos_array(2, i)) + "," + Str(pos_array(3, i))
        pos_text = pos_text + "," + Str(pos_array(4, i)) + "," + Str(pos_array(5, i))
        pos_text = pos_text + "," + Str(pos_array(6, i)) + "," + Str(pos_array(7, i))
        TextStatus.text = pos_text
        ListBoxPositionen_.AddItem pos_text
    Next

    MB_Set REG_NR_DATEN, C_DATEN_SENDEN
    MB_Set REG_NR_PROG, 0
    For i = 1 To MAX_DATENSAETZE
        If pos_array(0, i) > 0 Then
            Do
                If UebertragungAbgebrochen Then
                    MB_Set REG_NR_DATEN, C_KEINE_DATEN
                    Exit Function
                End If
                If ML_GetErrState() <> 0 Then
                    UebertragungAbgebrochen = True
                    Exit For
                End If
                If MB_Get(REG_NR_DATEN) = C_KEINE_DATEN Then
                    UebertragungAbgebrochen = True
                    Exit Function
                End If
                ack = MB_Get(REG_NR_ACK)
                prog = MB_Get(REG_NR_PROG)
                If ack = 0 And prog = -1 Then
                    Exit Do
                End If
                DoEvents
            Loop
            MB_Set REG_NR_ACK, 0
            MB_Set REG_NR_PROG, pos_array(0, i)
            MB_Set REG_NR_SATZ, pos_array(1, i)
            MB_Set REG_NR_X, pos_array(2, i)
            MB_Set REG_NR_Y, pos_array(3, i)
            MB_Set REG_NR_Z, pos_array(4, i)
            MB_Set REG_NR_TYP, pos_array(5, i)
            MB_Set REG_NR_KOPF_NR, pos_array(6, i)
            MB_Set REG_NR_TYP_NR, pos_array(7, i)
            MB_Set REG_NR_ACK, 1
    
            If ML_GetErrState() <> 0 Then
                UebertragungAbgebrochen = True
                Exit For
            End If
            TextStatus.text = "Pos. " + Str(i) + "," + Str(pos_array(0, i)) + "," + Str(pos_array(1, i)) + "," + Str(pos_array(2, i)) + "," + Str(pos_array(3, i)) + "," + Str(pos_array(4, i)) + "," + Str(pos_array(5, i)) + "," + Str(pos_array(6, i)) + " transferred"
            DoEvents
        End If
    Next
    MB_Set REG_NR_DATEN, C_KEINE_DATEN
    daten_senden = True
End Function
Function daten_empfangen() As Integer
Dim i As Integer
Dim j As Integer
Dim state As Integer
Dim ack_state As Long
Dim retval As Integer

    daten_empfangen = False
    UebertragungAbgebrochen = False
    retval = MsgBox("xemo in start menu?", vbOKCancel + vbQuestion, "BTH welding")
    If retval <> vbOK Then Exit Function
    
    For i = 0 To 7
        For j = 1 To MAX_DATENSAETZE
            pos_array(i, j) = 0
        Next
    Next
    MB_Set REG_NR_ACK, 0
    MB_Set REG_NR_DATEN, C_DATEN_EMPFANGEN

    For i = 1 To MAX_DATENSAETZE
        Do
            If ML_GetErrState() <> 0 Then
            UebertragungAbgebrochen = True
               Exit For
            End If
            If UebertragungAbgebrochen Then
                MB_Set REG_NR_DATEN, C_KEINE_DATEN
                Exit Function
            End If

            If MB_Get(REG_NR_DATEN) = C_KEINE_DATEN Then
                Exit For
            End If
            DoEvents
        Loop While MB_Get(REG_NR_ACK) = 0
        pos_array(0, i) = MB_Get(REG_NR_PROG)
        pos_array(1, i) = MB_Get(REG_NR_SATZ)
        pos_array(2, i) = MB_Get(REG_NR_X)
        pos_array(3, i) = MB_Get(REG_NR_Y)
        pos_array(4, i) = MB_Get(REG_NR_Z)
        pos_array(5, i) = MB_Get(REG_NR_TYP)
        pos_array(6, i) = MB_Get(REG_NR_KOPF_NR)
        pos_array(7, i) = MB_Get(REG_NR_TYP_NR)
        MB_Set REG_NR_ACK, 0

        state = ML_GetErrState()

        If state <> 0 Then Exit For
        TextStatus.text = "pos. " + Str(i) + " transferred"
        DoEvents
    Next
    MB_Set REG_NR_DATEN, C_KEINE_DATEN
    
    daten_zurueckschreiben
'    daten_initialisieren
    
    daten_empfangen = True
End Function
Sub daten_zurueckschreiben()
Dim i As Integer
Dim j As Integer
Dim pos_text As String
Dim pos_x As Single
Dim pos_y As Single
Dim pos_z As Single

    ListBoxPositionen_.Clear
    
    For i = 1 To MAX_DATENSAETZE
        pos_text = Str(i) + ":" + Str(pos_array(0, i)) + "," + Str(pos_array(1, i))
        pos_text = pos_text + "," + Str(pos_array(2, i)) + "," + Str(pos_array(3, i))
        pos_text = pos_text + "," + Str(pos_array(4, i)) + "," + Str(pos_array(5, i))
        pos_text = pos_text + "," + Str(pos_array(6, i)) + "," + Str(pos_array(7, i))
        ListBoxPositionen_.AddItem pos_text
    Next
    
    For i = 1 To MAX_DATENSAETZE
        ' Kommentarfeld l|fffd|schen
        Application.ActiveWorkbook.Worksheets("Bohrprogramme").Cells(i + 1, 1).Value = ""
        ' Programmnummer
        Application.ActiveWorkbook.Worksheets("Bohrprogramme").Cells(i + 1, 2).Value = pos_array(0, i)
        ' Satznummer
        Application.ActiveWorkbook.Worksheets("Bohrprogramme").Cells(i + 1, 3).Value = pos_array(1, i)
        ' X
        pos_x = pos_array(2, i) / 100
        Application.ActiveWorkbook.Worksheets("Bohrprogramme").Cells(i + 1, 4).Value = pos_x
        ' Y
        pos_y = pos_array(3, i) / 100
        Application.ActiveWorkbook.Worksheets("Bohrprogramme").Cells(i + 1, 5).Value = pos_y
        ' Z
        pos_z = pos_array(4, i) / 100
        Application.ActiveWorkbook.Worksheets("Bohrprogramme").Cells(i + 1, 6).Value = pos_z
        ' Typ
        Application.ActiveWorkbook.Worksheets("Bohrprogramme").Cells(i + 1, 7).Value = pos_array(5, i)
        ' Kopfnummer
        Application.ActiveWorkbook.Worksheets("Bohrprogramme").Cells(i + 1, 8).Value = pos_array(6, i)
        ' Schwei|fffd|typnummer
        Application.ActiveWorkbook.Worksheets("Bohrprogramme").Cells(i + 1, 9).Value = pos_array(7, i)
    Next

End Sub
Sub daten_initialisieren()
Dim i As Integer
Dim pos_text As String
Dim j As Integer
Dim pos As Long
Dim pos_single As Single

    For i = 0 To 6
        For j = 1 To MAX_DATENSAETZE
            pos_array(i, j) = 0
        Next
    Next

    i = 1
    
    Do
        If i > MAX_DATENSAETZE Then Exit Do
        ' Prognummer
        pos_text = Application.ActiveWorkbook.Worksheets("Bohrprogramme").Cells(i + 1, 2).Value
        If Len(pos_text) > 0 Then
            pos = Val(pos_text)
            If pos <> 0 Then
                pos_array(0, i) = pos
                ' Satznummer
                pos_text = Application.ActiveWorkbook.Worksheets("Bohrprogramme").Cells(i + 1, 3).Value
                If Len(pos_text) > 0 Then
                    pos = Val(pos_text)
                    pos_array(1, i) = pos
                End If
                ' x
                pos_text = Application.ActiveWorkbook.Worksheets("Bohrprogramme").Cells(i + 1, 4).Value
                If Len(pos_text) > 0 Then
                    pos_single = CSng(pos_text) * 100
                    pos = CLng(pos_single)
                    pos_array(2, i) = pos
                End If
                ' y
                pos_text = Application.ActiveWorkbook.Worksheets("Bohrprogramme").Cells(i + 1, 5).Value
                If Len(pos_text) > 0 Then
                    pos_single = CSng(pos_text) * 100
                    pos = CLng(pos_single)
                    pos_array(3, i) = pos
                End If
                ' z
                pos_text = Application.ActiveWorkbook.Worksheets("Bohrprogramme").Cells(i + 1, 6).Value
                If Len(pos_text) > 0 Then
                    pos_single = CSng(pos_text) * 100
                    pos = CLng(pos_single)
                    pos_array(4, i) = pos
                End If
                ' Typ
                pos_text = Application.ActiveWorkbook.Worksheets("Bohrprogramme").Cells(i + 1, 7).Value
                If Len(pos_text) > 0 Then
                    pos = Val(pos_text)
                    pos_array(5, i) = pos
                End If
                ' Kopfnummer
                pos_text = Application.ActiveWorkbook.Worksheets("Bohrprogramme").Cells(i + 1, 8).Value
                If Len(pos_text) > 0 Then
                    pos = Val(pos_text)
                    pos_array(6, i) = pos
                End If
                ' Schwei|fffd|typnummer
                pos_text = Application.ActiveWorkbook.Worksheets("Bohrprogramme").Cells(i + 1, 9).Value
                If Len(pos_text) > 0 Then
                    pos = Val(pos_text)
                    pos_array(7, i) = pos
                End If
            End If
        Else
            Exit Do
        End If

        i = i + 1
    Loop
    
    ListBoxPositionen_.Clear
    
    For i = 1 To MAX_DATENSAETZE
        pos_text = Str(i) + ":" + Str(pos_array(0, i)) + "," + Str(pos_array(1, i))
        pos_text = pos_text + "," + Str(pos_array(2, i)) + "," + Str(pos_array(3, i))
        pos_text = pos_text + "," + Str(pos_array(4, i)) + "," + Str(pos_array(5, i))
        pos_text = pos_text + "," + Str(pos_array(6, i)) + "," + Str(pos_array(7, i))
        TextStatus.text = pos_text
        ListBoxPositionen_.AddItem pos_text
    Next
    
End Sub


Private Sub CmdAbbruch_Click()
    UebertragungAbgebrochen = True
End Sub

Private Sub CmdBearbeiten_Click()
    Application.ActiveWorkbook.Activate
    '
    formBarku.Hide
    
End Sub

Private Sub CmdBeenden_Click()
    Application.Quit
End Sub

Private Sub CmdEmpfangen_Click()
Dim error As Integer
Dim state As Integer
Dim retval As Integer

    TextStatus.text = "receive data"
    UebertragungAbgebrochen = False
    Ini_Xemo
    state = ML_GetErrState
    If state = 0 Then
        TextStatus.text = "initialization ready"
        activate_abbrechen
        retval = daten_empfangen()
        deactivate_abbrechen
    Else
        error = ML_GetErrCode
    End If
    If state <> 0 Or UebertragungAbgebrochen Then
        TextStatus.text = "receiving aborted"
        MsgBox "Fehler bei der |fffd|bertragung" + Str(state) + ", " + Str(error)
    ElseIf retval = True Then
        TextStatus.text = "receiving ready"
    Else
        TextStatus.text = "receive status: " + Str(retval)
    End If
    ML_DeIniCom

End Sub

Private Sub CmdInitialisieren_Click()
Dim i As Integer
Dim j As Integer
Dim text As String

    ' Fehlerhandling ausschalten
    ML_ErrorCallBack 0
    
    daten_initialisieren
End Sub
Sub activate_abbrechen()
    UebertragungAbgebrochen = False
    CmdSenden.Enabled = False
    CmdEmpfangen.Enabled = False
    CmdAbbruch.Enabled = True
    CmdBearbeiten.Enabled = False
    CmdBeenden.Enabled = False
    CmdInitialisieren.Enabled = False
End Sub
Sub deactivate_abbrechen()
    CmdSenden.Enabled = True
    CmdEmpfangen.Enabled = True
    CmdAbbruch.Enabled = False
    CmdBearbeiten.Enabled = True
    CmdBeenden.Enabled = True
    CmdInitialisieren.Enabled = True
End Sub
Private Sub CmdSenden_Click()
Dim error As Integer
Dim state As Integer
Dim retval As Integer

    UebertragungAbgebrochen = False
    Ini_Xemo
    state = ML_GetErrState
    error = ML_GetErrCode
    If state = 0 And error = 0 Then
        TextStatus.text = "initialization ready"
        activate_abbrechen
        retval = daten_senden()
        deactivate_abbrechen
    Else
        error = ML_GetErrCode
    End If
    If state <> 0 Or UebertragungAbgebrochen Then
        TextStatus.text = "transfer aborted"
        MsgBox "error during data transfer" + Str(state) + ", " + Str(error)
    Else
        TextStatus.text = "transfer ready"
    End If
    ML_DeIniCom
End Sub

Private Sub CommandButton1_Click()
Application.ActiveWorkbook.Worksheets("Bohrprogramme").Range("A2:C50").Sort _
        Key1:=Worksheets("Sheet1").Range("A2")
End Sub


Private Sub TextBox1_AfterUpdate()
Dim i As Integer
Dim laenge  As Integer
Dim text As String

    laenge = Len(TextBox1.text)
    For i = 1 To ListBoxPositionsauswahl.ListCount
        text = ListBoxPositionsauswahl.List(i - 1)
        If Mid(text, 1, laenge) = TextBox1.text Then
            ListBoxPositionsauswahl.ListIndex = i - 1
            Exit For
        End If
        
    Next


End Sub


'Private Sub FormBTH_Click()
'    FormBarku.Visible = True
'End Sub

Private Sub UserForm_Terminate()
    Application.Quit
    
End Sub

Private Sub UserForm_Activate()
    CmdInitialisieren_Click
End Sub

Private Sub UserForm_Initialize()
Dim i As Integer
Dim text As String

    ' Fehlerhandling ausschalten
    ML_ErrorCallBack 0

    'ListBoxPositionen_.AddItem "data:"
    daten_initialisieren

End Sub
Attribute VB_Name = "konstanten"

Public Const MAX_DATENSAETZE = 2000

Public pos_array(0 To 7, 1 To MAX_DATENSAETZE) As Long

Public Const VERSION = 300
Public Const SW_NR_XEMO = 496
Public Const MIN_VERS_XEMO = 300

Public Const REG_NR_VERS = 97
Public Const REG_NR_SW_XEMO = 98
Public Const REG_NR_VERS_XEMO = 99
Public Const REG_NR_DATEN = 100
Public Const REG_NR_ACK = 101
Public Const REG_NR_PROG = 102
Public Const REG_NR_SATZ = 103
Public Const REG_NR_X = 104
Public Const REG_NR_Y = 105
Public Const REG_NR_Z = 106
Public Const REG_NR_TYP = 107
Public Const REG_NR_KOPF_NR = 108
Public Const REG_NR_TYP_NR = 109


Public Const C_KEINE_DATEN = 0
Public Const C_DATEN_SENDEN = 2
Public Const C_DATEN_EMPFANGEN = 1

Public Arbeitsmappe As Workbook
Public Arbeitsblatt As Worksheet


Private Sub Workbook_Open()
    'UserForm1.Show
End Sub


INQUEST-PP=macro
