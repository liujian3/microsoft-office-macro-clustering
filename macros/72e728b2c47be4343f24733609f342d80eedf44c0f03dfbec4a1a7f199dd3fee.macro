Attribute VB_Name = "DieseArbeitsmappe"
Attribute VB_Base = "0{00020819-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Module1"
Option Explicit ' force declaration of variables
Option Base 1   ' vector indices start with 1
Const DDD = 51  ' offset between blocks of projections = number of projection years (50) + header (1)


' Clear output ranges
Sub ClearOutputs()
    Dim iSens As Long ' sensitivity counter
    
    Application.ScreenUpdating = False              ' turn off screen updating to boost performance
    Application.Calculation = xlCalculationManual   ' turn off automatic calculation to boost performance
    
    Worksheets("Output").Range("oPar").ClearContents
    Worksheets("Output").Range("oPV").ClearContents
    
    For iSens = 0 To Range("nSens").Value - 1
        Worksheets("Output").Range("oT").Offset(iSens * DDD).ClearContents
        Worksheets("Output").Range("oP").Offset(iSens * DDD).ClearContents
        Worksheets("Output").Range("oE").Offset(iSens * DDD).ClearContents
        Worksheets("Output").Range("oC").Offset(iSens * DDD).ClearContents
        Worksheets("Output").Range("oN").Offset(iSens * DDD).ClearContents
        Worksheets("EffectPAP").Range("oCF").Offset(iSens * DDD).ClearContents
    Next iSens
    
    Worksheets("Output").Range("aT_").ClearContents
    Worksheets("Output").Range("aP_").ClearContents
    Worksheets("Output").Range("aE_").ClearContents
    Worksheets("Output").Range("aC_").ClearContents
    Worksheets("Output").Range("aN_").ClearContents

    Application.Calculation = xlCalculationAutomatic    ' switch automatic calculation back on and trigger calculation of entire workbook
    Application.ScreenUpdating = True                   ' switch screen updating back on
End Sub


' Calculate results of baseline scenario
Sub CalculateBaseline()
    Call CalculateScenario(0)
End Sub


' Calculate results of baseline scenario and stress scenarios, including anti-selection
Sub CalculateSensitivities()
    Dim iSens As Long ' sensitivity counter
    For iSens = 0 To Range("nSens").Value - 1
        Call CalculateScenario(iSens)
    Next iSens
End Sub


' Calculate cash flows for a given scenario
Sub CalculateScenario(iSens As Long)
    Dim nPtf As Long ' number of portfolios
    Dim iPtf As Long ' portfolio counter
    Dim oSens As Long
    
    Application.ScreenUpdating = False              ' turn off screen updating to boost performance
    Application.Calculation = xlCalculationManual   ' turn off automatic calculation to boost performance
    
    Worksheets("HE_Kernel").Range("pSens").Value = Worksheets("Inputparam").Range("sensPar").Columns(iSens + 1).Value
    
    nPtf = Range("nPTF").Value
    
    ' loop over portfolios
    For iPtf = 1 To nPtf
        ' copy input parameters
        Worksheets("HE_Kernel").Range("pPar").Value = Worksheets("Portfolio_Input").Range("iPar").Columns(iPtf).Value   ' parameters
        Worksheets("HE_Kernel").Range("pN").Value = Worksheets("Portfolio_Input").Range("iN").Columns(iPtf).Value       ' number of contracts
        Worksheets("HE_Kernel").Range("pP").Value = Worksheets("Portfolio_Input").Range("iP").Columns(iPtf).Value       ' premium per contract
        Worksheets("HE_Kernel").Range("pC").Value = Worksheets("Portfolio_Input").Range("iC").Columns(iPtf).Value       ' claims per ontract
        Worksheets("HE_Kernel").Range("pR").Value = Worksheets("Portfolio_Input").Range("iR").Columns(iPtf).Value       ' premium rebate per contract
        Worksheets("HE_Kernel").Range("pPA").Value = Application.Transpose(Worksheets("Portfolio_Input").Range("iPA").Columns(iPtf).Value)  ' premium adjustment
        Worksheets("HE_Kernel").Range("pCI").Value = Application.Transpose(Worksheets("Portfolio_Input").Range("iCI").Columns(iPtf).Value)  ' claims inflation
        
        ' trigger calculation on selected sheets to boost performance. Sheets "_pxy" and "_sxy" require recalculaiton because the selection of tables depends on inputs on sheet "HE_Kernel"
        Worksheets("_pxy").Calculate
        Worksheets("_sxy").Calculate
        Worksheets("HE_Kernel").Calculate
        
        Worksheets("Output").Range("oT").Columns(-2).Offset(iSens * DDD).Value = Worksheets("Inputparam").Range("sensName").Cells(1, iSens + 1).Value
        
        ' copy results
        If iSens = 0 Then
            Worksheets("Output").Range("oPar").Columns(iPtf).Value = Worksheets("HE_Kernel").Range("pPar").Value                        ' portfolio parameters
            Worksheets("Output").Range("oPV").Columns(iPtf).Value = Application.Transpose(Worksheets("HE_Kernel").Range("rPV").Value)   ' PV
            
            Worksheets("Output").Range("aT_").Columns(iPtf).Value = Worksheets("HE_Kernel").Range("aT").Value   ' total PV by age
            Worksheets("Output").Range("aP_").Columns(iPtf).Value = Worksheets("HE_Kernel").Range("aP").Value   ' premium PV ba age
            Worksheets("Output").Range("aE_").Columns(iPtf).Value = Worksheets("HE_Kernel").Range("aE").Value   ' expense PV by age
            Worksheets("Output").Range("aC_").Columns(iPtf).Value = Worksheets("HE_Kernel").Range("aC").Value   ' claims PV by age
            Worksheets("Output").Range("aN_").Columns(iPtf).Value = Worksheets("HE_Kernel").Range("aN").Value   ' number of contracts by age
        End If
        
        ' copy cash flows
        Worksheets("Output").Range("oT").Columns(iPtf).Offset(iSens * DDD).Value = Application.Transpose(Worksheets("HE_Kernel").Range("rT").Value) ' total cash flow
        Worksheets("Output").Range("oP").Columns(iPtf).Offset(iSens * DDD).Value = Application.Transpose(Worksheets("HE_Kernel").Range("rP").Value) ' premium cash flow
        Worksheets("Output").Range("oE").Columns(iPtf).Offset(iSens * DDD).Value = Application.Transpose(Worksheets("HE_Kernel").Range("rE").Value) ' expense cash flow
        Worksheets("Output").Range("oC").Columns(iPtf).Offset(iSens * DDD).Value = Application.Transpose(Worksheets("HE_Kernel").Range("rClaims").Value) ' claims cash flow
        Worksheets("Output").Range("oN").Columns(iPtf).Offset(iSens * DDD).Value = Application.Transpose(Worksheets("HE_Kernel").Range("rN").Value) ' number of contracts
    Next iPtf
    
    ' the cash flows for all products are available. Now calculate effect of premium adjustment plan
    Worksheets("Aggregation").Calculate     'aggregate results from all portfolios
    Worksheets("EffectPAP").Calculate       ' prepare input cash flows for PAP
    oSens = Worksheets("DynamicPremiumAdjustment").Range("_scen").Value ' store value of range "_scen"
    Worksheets("DynamicPremiumAdjustment").Range("_scen").Value = iSens ' override value of range "_scen"
    Worksheets("DynamicPremiumAdjustment").Calculate                    ' calculate premium adjustment plan
    Worksheets("EffectPAP").Range("oCF").Offset(iSens * DDD).Value = Worksheets("DynamicPremiumAdjustment").Range("_CF").Value ' save values to sheet "EffectPAP"
    Worksheets("DynamicPremiumAdjustment").Range("_scen").Value = oSens ' restore previous value of range "_scen"
    
    Application.Calculation = xlCalculationAutomatic    ' switch automatic calculation back on and trigger calculation of entire workbook
    Application.ScreenUpdating = True                   ' switch screen updating back on
    
End Sub


Attribute VB_Name = "Sheet1"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Sheet2"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Sheet3"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Sheet4"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Sheet5"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Sheet6"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Sheet7"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Tabelle1"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Tabelle2"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Tabelle22"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Tabelle3"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Tabelle36"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Tabelle4"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Tabelle5"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Tabelle6"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True


INQUEST-PP=macro
