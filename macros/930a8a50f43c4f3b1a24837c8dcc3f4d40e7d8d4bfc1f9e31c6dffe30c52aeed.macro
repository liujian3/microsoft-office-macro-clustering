Attribute VB_Name = "EditorialMacros"
Option Explicit

Public Sub InitForEditorial()
  '
  ' Code for editorial special setups that need to be called
  '  after saving or on worksheet initialization.
  '
    Application.ThisWorkbook.Application.OnKey "{TAB}", "Sheet1.Proceed"
    Application.ThisWorkbook.Application.OnKey "+{TAB}", "Sheet1.Retreat"
    Application.ThisWorkbook.Application.OnKey "{ENTER}", "Sheet1.Proceed"
    Application.ThisWorkbook.Application.OnKey "+{ENTER}", "Sheet1.Retreat"
  
End Sub

Public Sub Workbook_BeforeClose_Editorial()
  '
  ' Code for editorial special setups that need to be called
  '  before close.
  '
    Application.OnKey "{TAB}"
    Application.OnKey "+{TAB}"
    Application.OnKey "{ENTER}"
    Application.OnKey "+{ENTER}"

End Sub

Attribute VB_Name = "EditorialMacros_Deactivate"
Option Explicit

Public Sub Workbook_Deactivate_Editorial()
  '
  ' Code for editorial special setups that need to be called
  '  when leaving the workbook without closing it. This, will
  '  also run when closing workbook.
  '
    Application.OnKey "{TAB}"
    Application.OnKey "+{TAB}"
    Application.OnKey "{ENTER}"
    Application.OnKey "+{ENTER}"

End Sub

Attribute VB_Name = "PPC_CodeModule"
Public Sub MacroCheck()
'Do nothing. This sub will be called from .NET code to check macro is enabled or not
End Sub


Public Function PPC_GetClientName()
  PPC_GetClientName = Application.ActiveWorkbook.CustomDocumentProperties("PPC_Template_Client_Name")
End Function

Public Function PPC_GetBalanceSheetDate()
  PPC_GetBalanceSheetDate = Application.ActiveWorkbook.CustomDocumentProperties("PPC_Template_Engagement_Date")
End Function

Attribute VB_Name = "Sheet1"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Control = "ClearWorksheet, 13, 0, MSForms, CommandButton"
Attribute VB_Control = "Con2TB1, 12, 1, MSForms, TextBox"
Attribute VB_Control = "Con5TB2, 11, 2, MSForms, TextBox"
Attribute VB_Control = "Con5TB1, 10, 3, MSForms, TextBox"
Attribute VB_Control = "Con4TB2, 9, 4, MSForms, TextBox"
Attribute VB_Control = "Con4TB1, 8, 5, MSForms, TextBox"
Attribute VB_Control = "Con3TB2, 7, 6, MSForms, TextBox"
Attribute VB_Control = "Con3TB1, 6, 7, MSForms, TextBox"
Attribute VB_Control = "Con2TB2, 5, 8, MSForms, TextBox"
Attribute VB_Control = "Con1TB2, 4, 9, MSForms, TextBox"
Attribute VB_Control = "Con1TB1, 3, 10, MSForms, TextBox"
Dim ConTBBegLC As Integer
Dim ConTBEndLC As Integer
Dim Con1TB1BegLC As Integer
Dim Con1TB1EndLC As Integer
Dim Con1TB2BegLC As Integer
Dim Con1TB2EndLC As Integer
Dim Con2TB1BegLC As Integer
Dim Con2TB1EndLC As Integer
Dim Con2TB2BegLC As Integer
Dim Con2TB2EndLC As Integer
Dim Con3TB1BegLC As Integer
Dim Con3TB1EndLC As Integer
Dim Con3TB2BegLC As Integer
Dim Con3TB2EndLC As Integer
Dim Con4TB1BegLC As Integer
Dim Con4TB1EndLC As Integer
Dim Con4TB2BegLC As Integer
Dim Con4TB2EndLC As Integer
Dim Con5TB1BegLC As Integer
Dim Con5TB1EndLC As Integer
Dim Con5TB2BegLC As Integer
Dim Con5TB2EndLC As Integer
Dim InsRow As Integer
Dim DelRow As Integer

Private Sub ClearWorksheet_Click()

    Call Clear

End Sub

Private Static Sub Con1TB1_GotFocus()

Application.EnableEvents = False

If Con1TB1.Activate = False Then
    Exit Sub
End If
Con1TB1BegLC = Con1TB1.LineCount
Call Con1TB1_Change

End Sub

Private Sub Con1TB1_Change()

Application.EnableEvents = False

Con1TB1.Width = 530.25
If Con1TB1.LineCount <= 4 Then
    Con1TB1.Height = 52.5
Else
    Con1TB1.Height = (Con1TB1.LineCount) * 13
End If

Application.EnableEvents = True

End Sub

Private Sub Con1TB1_KeyDown(ByVal KeyCode As MSForms.ReturnInteger, ByVal Shift As Integer)
    
Dim MoveBack As Boolean
    
Select Case KeyCode
        ''' This is the only key necessary.
    Case vbKeyTab
        Application.ScreenUpdating = False
            ''' Determine if need to move backwards.
        MoveBack = CBool(Shift And 1)
            ''' Activate appropriate control based on key(s) pressed.
        If MoveBack Then
            Call Con1TB1_LostFocus
            Range("Con1Amt").Select
        Else
            Call Con1TB1_LostFocus
            Con1TB2.Activate
        End If
            
        Application.ScreenUpdating = True
    End Select

End Sub

Private Sub Con1TB1_LostFocus()

Application.EnableEvents = False

Con1TB1EndLC = Con1TB1.LineCount

    If Con1TB1BegLC <= 4 And Con1TB1EndLC <= 4 Or Con1TB1BegLC = Con1TB1EndLC Then
        GoTo AfterRowChange
    End If
    
    If Con1TB1BegLC <= 4 And Con1TB1EndLC > 4 Then
        InsRow = Con1TB1EndLC - 5
        Range("Con1Script").Select
        Range("Con1Script").Offset(2, 0).Select
        With Sheet1
            .Range(ActiveCell, ActiveCell.Offset(InsRow, 0)).EntireRow.Insert
        End With
    GoTo AfterRowChange
    End If
    
    If Con1TB1BegLC > 4 And Con1TB1EndLC <= 4 Then
        DelRow = (Con1TB1BegLC - 4) - 1
        Range("Con1Script").Select
        Range("Con1Script").Offset(2, 0).Select
        With Sheet1
            .Range(ActiveCell, ActiveCell.Offset(DelRow, 0)).EntireRow.Delete
        End With
    GoTo AfterRowChange
    End If
    
    If Con1TB1BegLC > 4 And Con1TB1EndLC > 4 And Con1TB1BegLC < Con1TB1EndLC Then
        InsRow = (Con1TB1EndLC - 1) - Con1TB1BegLC
        Range("Con1Script").Select
        Range("Con1Script").Offset(2, 0).Select
        With Sheet1
            .Range(ActiveCell, ActiveCell.Offset(InsRow, 0)).EntireRow.Insert
        End With
    GoTo AfterRowChange
    End If
    
    If Con1TB1BegLC > 4 And Con1TB1EndLC > 4 And Con1TB1BegLC > Con1TB1EndLC Then
        DelRow = (Con1TB1BegLC - Con1TB1EndLC) - 1
        Range("Con1Script").Select
        Range("Con1Script").Offset(2, 0).Select
        With Sheet1
            .Range(ActiveCell, ActiveCell.Offset(DelRow, 0)).EntireRow.Delete
        End With
        GoTo AfterRowChange
    End If

AfterRowChange:
Range("Con1Disp").Select
Application.Calculate
Application.EnableEvents = True

End Sub

Private Static Sub Con1TB2_GotFocus()

Application.EnableEvents = False
If Con1TB2.Activate = False Then
    Exit Sub
End If
Con1TB2BegLC = Con1TB2.LineCount
Call Con1TB2_Change

End Sub

Private Sub Con1TB2_Change()

Application.EnableEvents = False

Con1TB2.Width = 530.25

If Con1TB2.LineCount <= 4 Then
    Con1TB2.Height = 52.5
    Else
    Con1TB2.Height = (Con1TB2.LineCount) * 13
End If

Application.EnableEvents = True

End Sub

Private Sub Con1TB2_KeyDown(ByVal KeyCode As MSForms.ReturnInteger, ByVal Shift As Integer)
    
Dim MoveBack As Boolean
    
Select Case KeyCode
        ''' This is the only key we necessary.
    Case vbKeyTab
        Application.ScreenUpdating = False
            ''' Determine if need to move backwards.
        MoveBack = CBool(Shift And 1)
            ''' Activate appropriate control based on key(s) pressed.
        If MoveBack Then
            Call Con1TB2_LostFocus
            Con1TB1.Activate
        Else
            Call Con1TB2_LostFocus
            Range("Con2AA").Select
        End If
            
        Application.ScreenUpdating = True
    End Select

End Sub

Private Sub Con1TB2_LostFocus()

Application.EnableEvents = False

Con1TB2EndLC = Con1TB2.LineCount

    If Con1TB2BegLC <= 4 And Con1TB2EndLC <= 4 Or Con1TB2BegLC = Con1TB2EndLC Then
        GoTo AfterRowChange
    End If
    
    If Con1TB2BegLC <= 4 And Con1TB2EndLC > 4 Then
        InsRow = Con1TB2EndLC - 5
        Range("Con1Disp").Select
        Range("Con1Disp").Offset(2, 0).Select
        With Sheet1
            .Range(ActiveCell, ActiveCell.Offset(InsRow, 0)).EntireRow.Insert
        End With
    GoTo AfterRowChange
    End If
    
    If Con1TB2BegLC > 4 And Con1TB2EndLC <= 4 Then
        DelRow = (Con1TB2BegLC - 4) - 1
        Range("Con1Disp").Select
        Range("Con1Disp").Offset(2, 0).Select
        With Sheet1
            .Range(ActiveCell, ActiveCell.Offset(DelRow, 0)).EntireRow.Delete
        End With
    GoTo AfterRowChange
    End If
    
    If Con1TB2BegLC > 4 And Con1TB2EndLC > 4 And Con1TB2BegLC < Con1TB2EndLC Then
        InsRow = (Con1TB2EndLC - 1) - Con1TB2BegLC
        Range("Con1Disp").Select
        Range("Con1Disp").Offset(2, 0).Select
        With Sheet1
            .Range(ActiveCell, ActiveCell.Offset(InsRow, 0)).EntireRow.Insert
        End With
    GoTo AfterRowChange
    End If
    
    If Con1TB2BegLC > 4 And Con1TB2EndLC > 4 And Con1TB2BegLC > Con1TB2EndLC Then
        DelRow = (Con1TB2BegLC - Con1TB2EndLC) - 1
        Range("Con1Disp").Select
        Range("Con1Disp").Offset(2, 0).Select
        With Sheet1
            .Range(ActiveCell, ActiveCell.Offset(DelRow, 0)).EntireRow.Delete
        End With
        GoTo AfterRowChange
    End If

AfterRowChange:
Range("Con2AA").Select
Application.Calculate
Application.EnableEvents = True

End Sub
Private Static Sub Con2TB1_GotFocus()

Application.EnableEvents = False

If Con2TB1.Activate = False Then
    Exit Sub
End If
Con2TB1BegLC = Con2TB1.LineCount
Call Con2TB1_Change

End Sub

Private Sub Con2TB1_Change()

Application.EnableEvents = False

Con2TB1.Width = 530.25
If Con2TB1.LineCount <= 4 Then
    Con2TB1.Height = 52.5
    Else
    Con2TB1.Height = (Con2TB1.LineCount) * 13
End If

Application.EnableEvents = True

End Sub

Private Sub Con2TB1_KeyDown(ByVal KeyCode As MSForms.ReturnInteger, ByVal Shift As Integer)
    
Dim MoveBack As Boolean
    
Select Case KeyCode
        ''' This is the only key we necessary.
    Case vbKeyTab
        Application.ScreenUpdating = False
            ''' Determine if need to move backwards.
        MoveBack = CBool(Shift And 1)
            ''' Activate appropriate control based on key(s) pressed.
        If MoveBack Then
            Call Con2TB1_LostFocus
            Range("Con2Amt").Select
        Else
            Call Con2TB1_LostFocus
            Con2TB2.Activate
        End If
            
        Application.ScreenUpdating = True
    End Select

End Sub

Private Sub Con2TB1_LostFocus()

Application.EnableEvents = False

Con2TB1EndLC = Con2TB1.LineCount

    If Con2TB1BegLC <= 4 And Con2TB1EndLC <= 4 Or Con2TB1BegLC = Con2TB1EndLC Then
        GoTo AfterRowChange
    End If
    
    If Con2TB1BegLC <= 4 And Con2TB1EndLC > 4 Then
        InsRow = Con2TB1.LineCount - 5
        Range("Con2Script").Select
        Range("Con2Script").Offset(2, 0).Select
        With Sheet1
            .Range(ActiveCell, ActiveCell.Offset(InsRow, 0)).EntireRow.Insert
        End With
    GoTo AfterRowChange
    End If
    
    If Con2TB1BegLC > 4 And Con2TB1EndLC <= 4 Then
        DelRow = (Con2TB1BegLC - 4) - 1
        Range("Con2Script").Select
        Range("Con2Script").Offset(2, 0).Select
        With Sheet1
            .Range(ActiveCell, ActiveCell.Offset(DelRow, 0)).EntireRow.Delete
        End With
    GoTo AfterRowChange
    End If
    
    If Con2TB1BegLC > 4 And Con2TB1EndLC > 4 And Con2TB1BegLC < Con2TB1EndLC Then
        InsRow = (Con2TB1EndLC - 1) - Con2TB1BegLC
        Range("Con2Script").Select
        Range("Con2Script").Offset(2, 0).Select
        With Sheet1
            .Range(ActiveCell, ActiveCell.Offset(InsRow, 0)).EntireRow.Insert
        End With
    GoTo AfterRowChange
    End If
    
    If Con2TB1BegLC > 4 And Con2TB1EndLC > 4 And Con2TB1BegLC > Con2TB1EndLC Then
        DelRow = (Con2TB1BegLC - Con2TB1EndLC) - 1
        Range("Con2Script").Select
        Range("Con2Script").Offset(2, 0).Select
        With Sheet1
            .Range(ActiveCell, ActiveCell.Offset(DelRow, 0)).EntireRow.Delete
        End With
        GoTo AfterRowChange
    End If

AfterRowChange:
Range("Con2Disp").Select
Application.Calculate
Application.EnableEvents = True

End Sub
Private Static Sub Con2TB2_GotFocus()

Application.EnableEvents = False

If Con2TB2.Activate = False Then
    Exit Sub
End If
Con2TB2BegLC = Con2TB2.LineCount
Call Con2TB2_Change

End Sub

Private Sub Con2TB2_Change()

Application.EnableEvents = False

Con2TB2.Width = 530.25
If Con2TB2.LineCount <= 4 Then
    Con2TB2.Height = 52.5
    Else
    Con2TB2.Height = (Con2TB2.LineCount) * 13
End If

Application.EnableEvents = True

End Sub

Private Sub Con2TB2_KeyDown(ByVal KeyCode As MSForms.ReturnInteger, ByVal Shift As Integer)
    
Dim MoveBack As Boolean
    
Select Case KeyCode
        ''' This is the only key we necessary.
    Case vbKeyTab
        Application.ScreenUpdating = False
            ''' Determine if need to move backwards.
        MoveBack = CBool(Shift And 1)
            ''' Activate appropriate control based on key(s) pressed.
        If MoveBack Then
            Call Con2TB2_LostFocus
            Con2TB1.Activate
        Else
            Call Con2TB2_LostFocus
            Range("Con3AA").Select
        End If
            
        Application.ScreenUpdating = True

    End Select
End Sub

Private Sub Con2TB2_LostFocus()

Application.EnableEvents = False

Con2TB2EndLC = Con2TB2.LineCount

    If Con2TB2BegLC <= 4 And Con2TB2EndLC <= 4 Or Con2TB2BegLC = Con2TB2EndLC Then
            GoTo AfterRowChange
    End If
    
    If Con2TB2BegLC <= 4 And Con2TB2EndLC > 4 Then
        InsRow = Con2TB2EndLC - 5
        Range("Con2Disp").Select
        Range("Con2Disp").Offset(2, 0).Select
        With Sheet1
            .Range(ActiveCell, ActiveCell.Offset(InsRow, 0)).EntireRow.Insert
        End With
    GoTo AfterRowChange
    End If
    
    If Con2TB2BegLC > 4 And Con2TB2EndLC <= 4 Then
        DelRow = (Con2TB2BegLC - 4) - 1
        Range("Con2Disp").Select
        Range("Con2Disp").Offset(2, 0).Select
        With Sheet1
            .Range(ActiveCell, ActiveCell.Offset(DelRow, 0)).EntireRow.Delete
        End With
    GoTo AfterRowChange
    End If
    
    If Con2TB2BegLC > 4 And Con2TB2EndLC > 4 And Con2TB2BegLC < Con2TB2EndLC Then
        InsRow = (Con2TB2EndLC - 1) - Con2TB2BegLC
        Range("Con2Disp").Select
        Range("Con2Disp").Offset(2, 0).Select
        With Sheet1
            .Range(ActiveCell, ActiveCell.Offset(InsRow, 0)).EntireRow.Insert
        End With
    GoTo AfterRowChange
    End If
    
    If Con2TB2BegLC > 4 And Con2TB2EndLC > 4 And Con2TB2BegLC > Con2TB2EndLC Then
        DelRow = (Con2TB2BegLC - Con2TB2EndLC) - 1
        Range("Con2Disp").Select
        Range("Con2Disp").Offset(2, 0).Select
        With Sheet1
            .Range(ActiveCell, ActiveCell.Offset(DelRow, 0)).EntireRow.Delete
        End With
        GoTo AfterRowChange
    End If

AfterRowChange:
Range("Con3AA").Select
Application.Calculate
Application.EnableEvents = True

End Sub

Private Static Sub Con3TB1_GotFocus()

Application.EnableEvents = False

If Con3TB1.Activate = False Then
    Exit Sub
End If
Con3TB1BegLC = Con3TB1.LineCount
Call Con3TB1_Change

End Sub

Private Sub Con3TB1_Change()

Application.EnableEvents = False

Con3TB1.Width = 530.25
    If Con3TB1.LineCount <= 4 Then
       Con3TB1.Height = 52.5
    Else
       Con3TB1.Height = (Con3TB1.LineCount) * 13
    End If

Application.EnableEvents = True

End Sub

Private Sub Con3TB1_KeyDown(ByVal KeyCode As MSForms.ReturnInteger, ByVal Shift As Integer)
    
Dim MoveBack As Boolean
    
Select Case KeyCode
        ''' This is the only key we necessary.
    Case vbKeyTab
        Application.ScreenUpdating = False
            ''' Determine if need to move backwards.
        MoveBack = CBool(Shift And 1)
            ''' Activate appropriate control based on key(s) pressed.
        If MoveBack Then
            Call Con3TB1_LostFocus
            Range("Con3Amt").Select
        Else
            Call Con3TB1_LostFocus
            Con3TB2.Activate
        End If
            
        Application.ScreenUpdating = True
    End Select

End Sub

Private Sub Con3TB1_LostFocus()

Application.EnableEvents = False

Con3TB1EndLC = Con3TB1.LineCount

    If Con3TB1BegLC <= 4 And Con3TB1EndLC <= 4 Or Con3TB1BegLC = Con3TB1EndLC Then
        GoTo AfterRowChange
    End If
    
    If Con3TB1BegLC <= 4 And Con3TB1EndLC > 4 Then
        InsRow = Con3TB1.LineCount - 5
        Range("Con3Script").Select
        Range("Con3Script").Offset(2, 0).Select
        With Sheet1
            .Range(ActiveCell, ActiveCell.Offset(InsRow, 0)).EntireRow.Insert
        End With
    GoTo AfterRowChange
    End If
    
    If Con3TB1BegLC > 4 And Con3TB1EndLC <= 4 Then
        DelRow = (Con3TB1BegLC - 4) - 1
        Range("Con3Script").Select
        Range("Con3Script").Offset(2, 0).Select
        With Sheet1
            .Range(ActiveCell, ActiveCell.Offset(DelRow, 0)).EntireRow.Delete
        End With
    GoTo AfterRowChange
    End If
    
    If Con3TB1BegLC > 4 And Con3TB1EndLC > 4 And Con3TB1BegLC < Con3TB1EndLC Then
        InsRow = (Con3TB1EndLC - 1) - Con3TB1BegLC
        Range("Con3Script").Select
        Range("Con3Script").Offset(2, 0).Select
        With Sheet1
            .Range(ActiveCell, ActiveCell.Offset(InsRow, 0)).EntireRow.Insert
        End With
    GoTo AfterRowChange
    End If
    
    If Con3TB1BegLC > 4 And Con3TB1EndLC > 4 And Con3TB1BegLC > Con3TB1EndLC Then
        DelRow = (Con3TB1BegLC - Con3TB1EndLC) - 1
        Range("Con3Script").Select
        Range("Con3Script").Offset(2, 0).Select
        With Sheet1
            .Range(ActiveCell, ActiveCell.Offset(DelRow, 0)).EntireRow.Delete
        End With
        GoTo AfterRowChange
    End If

AfterRowChange:
Range("Con3Disp").Select
Application.Calculate
Application.EnableEvents = True

End Sub
Private Static Sub Con3TB2_GotFocus()

Application.EnableEvents = False

If Con3TB2.Activate = False Then
    Exit Sub
End If
Con3TB2BegLC = Con3TB2.LineCount
Call Con3TB2_Change

End Sub

Private Sub Con3TB2_Change()

Application.EnableEvents = False

Con3TB2.Width = 530.25
    If Con3TB2.LineCount <= 4 Then
       Con3TB2.Height = 52.5
    Else
       Con3TB2.Height = (Con3TB2.LineCount) * 13
    End If

Application.EnableEvents = True

End Sub

Private Sub Con3TB2_KeyDown(ByVal KeyCode As MSForms.ReturnInteger, ByVal Shift As Integer)
    
Dim MoveBack As Boolean
    
Select Case KeyCode
        ''' This is the only key we necessary.
    Case vbKeyTab
        Application.ScreenUpdating = False
            ''' Determine if need to move backwards.
        MoveBack = CBool(Shift And 1)
            ''' Activate appropriate control based on key(s) pressed.
        If MoveBack Then
            Call Con3TB2_LostFocus
            Con3TB1.Activate
        Else
            Call Con3TB2_LostFocus
            Range("Con4AA").Select
        End If
            
        Application.ScreenUpdating = True
    End Select

End Sub

Private Sub Con3TB2_LostFocus()

Application.EnableEvents = False

Con3TB2EndLC = Con3TB2.LineCount

    If Con3TB2BegLC <= 4 And Con3TB2EndLC <= 4 Or Con3TB2BegLC = Con3TB2EndLC Then
        GoTo AfterRowChange
    End If
    
    If Con3TB2BegLC <= 4 And Con3TB2EndLC > 4 Then
        InsRow = Con3TB2EndLC - 5
        Range("Con3Disp").Select
        Range("Con3Disp").Offset(2, 0).Select
        With Sheet1
            .Range(ActiveCell, ActiveCell.Offset(InsRow, 0)).EntireRow.Insert
        End With
    GoTo AfterRowChange
    End If
    
    If Con3TB2BegLC > 4 And Con3TB2EndLC <= 4 Then
        DelRow = (Con3TB2BegLC - 4) - 1
        Range("Con3Disp").Select
        Range("Con3Disp").Offset(2, 0).Select
        With Sheet1
            .Range(ActiveCell, ActiveCell.Offset(DelRow, 0)).EntireRow.Delete
        End With
    GoTo AfterRowChange
    End If
    
    If Con3TB2BegLC > 4 And Con3TB2EndLC > 4 And Con3TB2BegLC < Con3TB2EndLC Then
        InsRow = (Con3TB2EndLC - 1) - Con3TB2BegLC
        Range("Con3Disp").Select
        Range("Con3Disp").Offset(2, 0).Select
        With Sheet1
            .Range(ActiveCell, ActiveCell.Offset(InsRow, 0)).EntireRow.Insert
        End With
    GoTo AfterRowChange
    End If
    
    If Con3TB2BegLC > 4 And Con3TB2EndLC > 4 And Con3TB2BegLC > Con3TB2EndLC Then
        DelRow = (Con3TB2BegLC - Con3TB2EndLC) - 1
        Range("Con3Disp").Select
        Range("Con3Disp").Offset(2, 0).Select
        With Sheet1
            .Range(ActiveCell, ActiveCell.Offset(DelRow, 0)).EntireRow.Delete
        End With
        GoTo AfterRowChange
    End If

AfterRowChange:
Range("Con4AA").Select
Application.Calculate
Application.EnableEvents = True

End Sub

Private Static Sub Con4TB1_GotFocus()

Application.EnableEvents = False

If Con4TB1.Activate = False Then
    Exit Sub
End If
Con4TB1BegLC = Con4TB1.LineCount
Call Con4TB1_Change

End Sub

Private Sub Con4TB1_Change()

Application.EnableEvents = False

Con4TB1.Width = 530.25
    If Con4TB1.LineCount <= 4 Then
       Con4TB1.Height = 52.5
    Else
       Con4TB1.Height = (Con4TB1.LineCount) * 13
    End If

Application.EnableEvents = True

End Sub

Private Sub Con4TB1_KeyDown(ByVal KeyCode As MSForms.ReturnInteger, ByVal Shift As Integer)
    
Dim MoveBack As Boolean
    
Select Case KeyCode
        ''' This is the only key we necessary.
    Case vbKeyTab
        Application.ScreenUpdating = False
            ''' Determine if need to move backwards.
        MoveBack = CBool(Shift And 1)
            ''' Activate appropriate control based on key(s) pressed.

        If MoveBack Then
            Call Con4TB1_LostFocus
            Range("Con4Amt").Select
        Else
            Call Con4TB1_LostFocus
            Con4TB2.Activate
        End If
            
        Application.ScreenUpdating = True
    End Select

End Sub

Private Sub Con4TB1_LostFocus()

Application.EnableEvents = False

Con4TB1EndLC = Con4TB1.LineCount

    If Con4TB1BegLC <= 4 And Con4TB1EndLC <= 4 Or Con4TB1BegLC = Con4TB1EndLC Then
        GoTo AfterRowChange
    End If
    
    If Con4TB1BegLC <= 4 And Con4TB1EndLC > 4 Then
        InsRow = Con4TB1.LineCount - 5
        Range("Con4Script").Select
        Range("Con4Script").Offset(2, 0).Select
        With Sheet1
            .Range(ActiveCell, ActiveCell.Offset(InsRow, 0)).EntireRow.Insert
        End With
    GoTo AfterRowChange
    End If
    
    If Con4TB1BegLC > 4 And Con4TB1EndLC <= 4 Then
        DelRow = (Con4TB1BegLC - 4) - 1
        Range("Con4Script").Select
        Range("Con4Script").Offset(2, 0).Select
        With Sheet1
            .Range(ActiveCell, ActiveCell.Offset(DelRow, 0)).EntireRow.Delete
        End With
    GoTo AfterRowChange
    End If
    
    If Con4TB1BegLC > 4 And Con4TB1EndLC > 4 And Con4TB1BegLC < Con4TB1EndLC Then
        InsRow = (Con4TB1EndLC - 1) - Con4TB1BegLC
        Range("Con4Script").Select
        Range("Con4Script").Offset(2, 0).Select
        With Sheet1
            .Range(ActiveCell, ActiveCell.Offset(InsRow, 0)).EntireRow.Insert
        End With
    GoTo AfterRowChange
    End If
    
    If Con4TB1BegLC > 4 And Con4TB1EndLC > 4 And Con4TB1BegLC > Con4TB1EndLC Then
        DelRow = (Con4TB1BegLC - Con4TB1EndLC) - 1
        Range("Con4Script").Select
        Range("Con4Script").Offset(2, 0).Select
        With Sheet1
            .Range(ActiveCell, ActiveCell.Offset(DelRow, 0)).EntireRow.Delete
        End With
        GoTo AfterRowChange
    End If

AfterRowChange:
Range("Con4Disp").Select
Application.Calculate
Application.EnableEvents = True

End Sub
Private Static Sub Con4TB2_GotFocus()

Application.EnableEvents = False

If Con4TB2.Activate = False Then
    Exit Sub
End If
Con4TB2BegLC = Con4TB2.LineCount
Call Con4TB2_Change

End Sub

Private Sub Con4TB2_Change()

Application.EnableEvents = False

Con4TB2.Width = 530.25
    If Con4TB2.LineCount <= 4 Then
       Con4TB2.Height = 52.5
    Else
       Con4TB2.Height = (Con4TB2.LineCount) * 13
    End If

Application.EnableEvents = True

End Sub

Private Sub Con4TB2_KeyDown(ByVal KeyCode As MSForms.ReturnInteger, ByVal Shift As Integer)
    
Dim MoveBack As Boolean
    
Select Case KeyCode
        ''' This is the only key we necessary.
    Case vbKeyTab
        Application.ScreenUpdating = False
            ''' Determine if need to move backwards.
        MoveBack = CBool(Shift And 1)
            ''' Activate appropriate control based on key(s) pressed.
        If MoveBack Then
            Call Con4TB2_LostFocus
            Con4TB1.Activate
        Else
            Call Con4TB2_LostFocus
            Range("Con5AA").Select
        End If
            
        Application.ScreenUpdating = True
    End Select

End Sub

Private Sub Con4TB2_LostFocus()

Application.EnableEvents = False

Con4TB2EndLC = Con4TB2.LineCount

    If Con4TB2BegLC <= 4 And Con4TB2EndLC <= 4 Or Con4TB2BegLC = Con4TB2EndLC Then
        GoTo AfterRowChange
    End If
    
    If Con4TB2BegLC <= 4 And Con4TB2EndLC > 4 Then
        InsRow = Con4TB2EndLC - 5
        Range("Con4Disp").Select
        Range("Con4Disp").Offset(2, 0).Select
        With Sheet1
            .Range(ActiveCell, ActiveCell.Offset(InsRow, 0)).EntireRow.Insert
        End With
    GoTo AfterRowChange
    End If
    
    If Con4TB2BegLC > 4 And Con4TB2EndLC <= 4 Then
        DelRow = (Con4TB2BegLC - 4) - 1
        Range("Con4Disp").Select
        Range("Con4Disp").Offset(2, 0).Select
        With Sheet1
            .Range(ActiveCell, ActiveCell.Offset(DelRow, 0)).EntireRow.Delete
        End With
    GoTo AfterRowChange
    End If
    
    If Con4TB2BegLC > 4 And Con4TB2EndLC > 4 And Con4TB2BegLC < Con4TB2EndLC Then
        InsRow = (Con4TB2EndLC - 1) - Con4TB2BegLC
        Range("Con4Disp").Select
        Range("Con4Disp").Offset(2, 0).Select
        With Sheet1
            .Range(ActiveCell, ActiveCell.Offset(InsRow, 0)).EntireRow.Insert
        End With
    GoTo AfterRowChange
    End If
    
    If Con4TB2BegLC > 4 And Con4TB2EndLC > 4 And Con4TB2BegLC > Con4TB2EndLC Then
        DelRow = (Con4TB2BegLC - Con4TB2EndLC) - 1
        Range("Con4Disp").Select
        Range("Con4Disp").Offset(2, 0).Select
        With Sheet1
            .Range(ActiveCell, ActiveCell.Offset(DelRow, 0)).EntireRow.Delete
        End With
        GoTo AfterRowChange
    End If

AfterRowChange:
Range("Con5AA").Select
Application.Calculate
Application.EnableEvents = True

End Sub

Private Static Sub Con5TB1_GotFocus()

Application.EnableEvents = False

If Con5TB1.Activate = False Then
    Exit Sub
End If
Con5TB1BegLC = Con5TB1.LineCount
Call Con5TB1_Change


End Sub

Private Sub Con5TB1_Change()

Application.EnableEvents = False

Con5TB1.Width = 530.25
    If Con5TB1.LineCount <= 4 Then
       Con5TB1.Height = 52.5
    Else
       Con5TB1.Height = (Con5TB1.LineCount) * 13
    End If

Application.EnableEvents = True

End Sub

Private Sub Con5TB1_KeyDown(ByVal KeyCode As MSForms.ReturnInteger, ByVal Shift As Integer)
    
Dim MoveBack As Boolean
    
Select Case KeyCode
        ''' This is the only key we necessary.
    Case vbKeyTab
        Application.ScreenUpdating = False
            ''' Determine if need to move backwards.
        MoveBack = CBool(Shift And 1)
            ''' Activate appropriate control based on key(s) pressed.

        If MoveBack Then
            Call Con5TB1_LostFocus
            Range("Con5Amt").Select
        Else
            Call Con5TB1_LostFocus
            Con5TB2.Activate
        End If
            
        Application.ScreenUpdating = True
    End Select

End Sub

Private Sub Con5TB1_LostFocus()

Application.EnableEvents = False
Con5TB1EndLC = Con5TB1.LineCount

    If Con5TB1BegLC <= 4 And Con5TB1EndLC <= 4 Or Con5TB1BegLC = Con5TB1EndLC Then
        GoTo AfterRowChange
    End If
    
    If Con5TB1BegLC <= 4 And Con5TB1EndLC > 4 Then
        InsRow = Con5TB1.LineCount - 5
        Range("Con5Script").Select
        Range("Con5Script").Offset(2, 0).Select
        With Sheet1
            .Range(ActiveCell, ActiveCell.Offset(InsRow, 0)).EntireRow.Insert
        End With
    GoTo AfterRowChange
    End If
    
    If Con5TB1BegLC > 4 And Con5TB1EndLC <= 4 Then
        DelRow = (Con5TB1BegLC - 4) - 1
        Range("Con5Script").Select
        Range("Con5Script").Offset(2, 0).Select
        With Sheet1
            .Range(ActiveCell, ActiveCell.Offset(DelRow, 0)).EntireRow.Delete
        End With
    GoTo AfterRowChange
    End If
    
    If Con5TB1BegLC > 4 And Con5TB1EndLC > 4 And Con5TB1BegLC < Con5TB1EndLC Then
        InsRow = (Con5TB1EndLC - 1) - Con5TB1BegLC
        Range("Con5Script").Select
        Range("Con5Script").Offset(2, 0).Select
        With Sheet1
            .Range(ActiveCell, ActiveCell.Offset(InsRow, 0)).EntireRow.Insert
        End With
    GoTo AfterRowChange
    End If
    
    If Con5TB1BegLC > 4 And Con5TB1EndLC > 4 And Con5TB1BegLC > Con5TB1EndLC Then
        DelRow = (Con5TB1BegLC - Con5TB1EndLC) - 1
        Range("Con5Script").Select
        Range("Con5Script").Offset(2, 0).Select
        With Sheet1
            .Range(ActiveCell, ActiveCell.Offset(DelRow, 0)).EntireRow.Delete
        End With
        GoTo AfterRowChange
    End If

AfterRowChange:
Range("Con5Disp").Select
Application.Calculate
Application.EnableEvents = True
End Sub
Private Static Sub Con5TB2_GotFocus()

Application.EnableEvents = False

If Con5TB2.Activate = False Then
    Exit Sub
End If
Con5TB2BegLC = Con5TB2.LineCount
Call Con5TB2_Change

End Sub

Private Sub Con5TB2_Change()

Application.EnableEvents = False

Con5TB2.Width = 530.25
    If Con5TB2.LineCount <= 4 Then
       Con5TB2.Height = 52.5
    Else
       Con5TB2.Height = (Con5TB2.LineCount) * 13
    End If

Application.EnableEvents = True

End Sub

Private Sub Con5TB2_KeyDown(ByVal KeyCode As MSForms.ReturnInteger, ByVal Shift As Integer)
    
Dim MoveBack As Boolean
    
Select Case KeyCode
        ''' This is the only key we necessary.
    Case vbKeyTab
        Application.ScreenUpdating = False
            ''' Determine if need to move backwards.
        MoveBack = CBool(Shift And 1)
            ''' Activate appropriate control based on key(s) pressed.
        If MoveBack Then
            Call Con5TB2_LostFocus
            Con5TB1.Activate
        Else
            Call Con5TB2_LostFocus
            Range("H2").Select
        End If
            
        Application.ScreenUpdating = True
    End Select

End Sub

Private Sub Con5TB2_LostFocus()

Application.EnableEvents = False

Con5TB2EndLC = Con5TB2.LineCount

    If Con5TB2BegLC <= 4 And Con5TB2EndLC <= 4 Or Con5TB2BegLC = Con5TB2EndLC Then
        GoTo AfterRowChange
    End If
    
    If Con5TB2BegLC <= 4 And Con5TB2EndLC > 4 Then
        InsRow = Con5TB2EndLC - 5
        Range("Con5Disp").Select
        Range("Con5Disp").Offset(2, 0).Select
        With Sheet1
            .Range(ActiveCell, ActiveCell.Offset(InsRow, 0)).EntireRow.Insert
        End With
    GoTo AfterRowChange
    End If
    
    If ConTBBegLC > 4 And ConTBEndLC <= 4 Then
        DelRow = (Con5TB2BegLC - 4) - 1
        Range("Con5Disp").Select
        Range("Con5Disp").Offset(2, 0).Select
        With Sheet1
            .Range(ActiveCell, ActiveCell.Offset(DelRow, 0)).EntireRow.Delete
        End With
    GoTo AfterRowChange
    End If
    
    If Con5TB2BegLC > 4 And Con5TB2EndLC > 4 And Con5TB2BegLC < Con5TB2EndLC Then
        InsRow = (Con5TB2EndLC - 1) - Con5TB2BegLC
        Range("Con5Disp").Select
        Range("Con5Disp").Offset(2, 0).Select
        With Sheet1
            .Range(ActiveCell, ActiveCell.Offset(InsRow, 0)).EntireRow.Insert
        End With
    GoTo AfterRowChange
    End If
    
    If Con5TB2BegLC > 4 And Con5TB2EndLC > 4 And Con5TB2BegLC > Con5TB2EndLC Then
        DelRow = (Con5TB2BegLC - Con5TB2EndLC) - 1
        Range("Con5Disp").Select
        Range("Con5Disp").Offset(2, 0).Select
        With Sheet1
            .Range(ActiveCell, ActiveCell.Offset(DelRow, 0)).EntireRow.Delete
        End With
        GoTo AfterRowChange
    End If

AfterRowChange:
Range("H2").Select
Application.Calculate
Application.EnableEvents = True

End Sub

Private Sub Worksheet_Activate()
'    Application.Calculate
'    Application.ThisWorkbook.Application.OnKey "{TAB}", "Sheet1.Proceed"
'    Application.ThisWorkbook.Application.OnKey "+{TAB}", "Sheet1.Retreat"
'    Application.ThisWorkbook.Application.OnKey "~", "Sheet1.Proceed"
'    Application.ThisWorkbook.Application.OnKey "+~", "Sheet1.Retreat"
End Sub

Sub Clear()

Msg = "Are you sure you want to clear all of the " & vbCrLf
      Msg = Msg & "input items from the worksheet?"
ans = MsgBox(Msg, vbYesNo, "PPC's Workpapers")

If ans = vbNo Then  ' User chose No.
    Exit Sub
End If
    
Call Con1TB1_GotFocus
Con1TB1.Text = ""
Call Con1TB1_Change
Call Con1TB1_LostFocus

Call Con1TB2_GotFocus
Con1TB2.Text = ""
Call Con1TB2_Change
Call Con1TB2_LostFocus

Call Con2TB1_GotFocus
Con2TB1.Text = ""
Call Con2TB1_Change
Call Con2TB1_LostFocus

Call Con2TB2_GotFocus
Con2TB2.Text = ""
Call Con2TB2_Change
Call Con2TB2_LostFocus

Call Con3TB1_GotFocus
Con3TB1.Text = ""
Call Con3TB1_Change
Call Con3TB1_LostFocus

Call Con3TB2_GotFocus
Con3TB2.Text = ""
Call Con3TB2_Change
Call Con3TB2_LostFocus

Call Con4TB1_GotFocus
Con4TB1.Text = ""
Call Con4TB1_Change
Call Con4TB1_LostFocus

Call Con4TB2_GotFocus
Con4TB2.Text = ""
Call Con4TB2_Change
Call Con4TB2_LostFocus

Call Con5TB1_GotFocus
Con5TB1.Text = ""
Call Con5TB1_Change
Call Con5TB1_LostFocus

Call Con5TB2_GotFocus
Con5TB2.Text = ""
Call Con5TB2_Change
Call Con5TB2_LostFocus

Application.ScreenUpdating = False
Sheet1.Range("ConInputClear").ClearContents
Range("YearEnd").Value = "=PPC_GetBalanceSheetDate()"
Range("Client").Value = "=PPC_GetClientName()"
Application.ActiveWorkbook.CustomDocumentProperties("PPC_Template_Client_Name") = "[Client Name]"
Application.ActiveWorkbook.CustomDocumentProperties("PPC_Template_Engagement_Date") = ""
Application.ActiveWorkbook.ActiveSheet.EnableCalculation = False
Application.ActiveWorkbook.ActiveSheet.EnableCalculation = True
Range("a1").Select
Application.Calculate
Application.ScreenUpdating = True

End Sub

Private Sub Proceed()
    
Application.EnableEvents = False
    If ActiveWindow.RangeSelection.Address = Range("A1").Address Then
        Range("H2").Select
        GoTo AfterProceed
    End If
    If ActiveWindow.RangeSelection.Address = Range("H2").Address Then
        Range("Client").Select
        GoTo AfterProceed
    End If
    If ActiveWindow.RangeSelection.Address = Range("Client").Address Then
        Range("YearEnd").Select
        GoTo AfterProceed
    End If
    If ActiveWindow.RangeSelection.Address = Range("YearEnd").Address Then
        Range("C6").Select
        GoTo AfterProceed
    End If
    If ActiveWindow.RangeSelection.Address = Range("C6").Address Then
        Range("H6").Select
        GoTo AfterProceed
    End If
        If ActiveWindow.RangeSelection.Address = Range("H6").Address Then
        Range("Con1AA").Select
        GoTo AfterProceed
    End If
    If ActiveWindow.RangeSelection.Address = Range("Con1AA").Address Then
        Range("Con1Amt").Select
        GoTo AfterProceed
    End If
    If ActiveWindow.RangeSelection.Address = Range("Con1Amt").Address Then
        Con1TB1.Activate
        Call Con1TB1_GotFocus
        GoTo AfterProceed
    End If
    If ActiveWindow.RangeSelection.Address = Range("Con1Disp").Address Then
        Con1TB2.Activate
        Call Con1TB2_GotFocus
        GoTo AfterProceed
    End If
    If ActiveWindow.RangeSelection.Address = Range("Con2AA").Address Then
        Range("Con2Amt").Select
        GoTo AfterProceed
    End If
    If ActiveWindow.RangeSelection.Address = Range("Con2Amt").Address Then
        Con2TB1.Activate
        Call Con2TB1_GotFocus
        GoTo AfterProceed
    End If
    If ActiveWindow.RangeSelection.Address = Range("Con2Disp").Address Then
        Con2TB2.Activate
        Call Con2TB2_GotFocus
        GoTo AfterProceed
    End If
    If ActiveWindow.RangeSelection.Address = Range("Con3AA").Address Then
        Range("Con3Amt").Select
        GoTo AfterProceed
    End If
    If ActiveWindow.RangeSelection.Address = Range("Con3Amt").Address Then
        Con3TB1.Activate
        Call Con3TB1_GotFocus
        GoTo AfterProceed
    End If
    If ActiveWindow.RangeSelection.Address = Range("Con3Disp").Address Then
        Con3TB2.Activate
        Call Con3TB2_GotFocus
        GoTo AfterProceed
    End If
    If ActiveWindow.RangeSelection.Address = Range("Con4AA").Address Then
        Range("Con4Amt").Select
        GoTo AfterProceed
    End If
    If ActiveWindow.RangeSelection.Address = Range("Con4Amt").Address Then
        Con4TB1.Activate
        Call Con4TB1_GotFocus
        GoTo AfterProceed
    End If
    If ActiveWindow.RangeSelection.Address = Range("Con4Disp").Address Then
        Con4TB2.Activate
        Call Con4TB2_GotFocus
        GoTo AfterProceed
    End If
    If ActiveWindow.RangeSelection.Address = Range("Con5AA").Address Then
        Range("Con5Amt").Select
        GoTo AfterProceed
    End If
    If ActiveWindow.RangeSelection.Address = Range("Con5Amt").Address Then
        Con5TB1.Activate
        Call Con5TB1_GotFocus
        GoTo AfterProceed
    End If
    If ActiveWindow.RangeSelection.Address = Range("Con5Disp").Address Then
        Con5TB2.Activate
        Call Con5TB2_GotFocus
        GoTo AfterProceed
    End If
AfterProceed:
Application.EnableEvents = True

End Sub

Private Sub Retreat()
Application.EnableEvents = False
    If ActiveWindow.RangeSelection.Address = Range("A1").Address Then
        Con5TB2.Activate
        Call Con5TB2_GotFocus
        GoTo AfterRetreat
    End If
    If ActiveWindow.RangeSelection.Address = Range("H2").Address Then
        Con5TB2.Activate
        Call Con5TB2_GotFocus
        GoTo AfterRetreat
    End If
    If ActiveWindow.RangeSelection.Address = Range("Client").Address Then
        Range("H2").Select
        GoTo AfterRetreat
    End If
    If ActiveWindow.RangeSelection.Address = Range("YearEnd").Address Then
        Range("Client").Select
        GoTo AfterRetreat
    End If
    If ActiveWindow.RangeSelection.Address = Range("C6").Address Then
        Range("YearEnd").Select
        GoTo AfterRetreat
    End If
        If ActiveWindow.RangeSelection.Address = Range("H6").Address Then
        Range("C6").Select
        GoTo AfterRetreat
    End If
    If ActiveWindow.RangeSelection.Address = Range("Con1AA").Address Then
        Range("H6").Select
        GoTo AfterRetreat
    End If
    If ActiveWindow.RangeSelection.Address = Range("Con1Amt").Address Then
        Range("Con1AA").Select
        GoTo AfterRetreat
    End If
    If ActiveWindow.RangeSelection.Address = Range("Con1Disp").Address Then
        Con1TB1.Activate
        Call Con1TB1_GotFocus
        GoTo AfterRetreat
    End If
    If ActiveWindow.RangeSelection.Address = Range("Con2AA").Address Then
        Con1TB2.Activate
        Call Con1TB2_GotFocus
        GoTo AfterRetreat
    End If
    If ActiveWindow.RangeSelection.Address = Range("Con2Amt").Address Then
        Range("Con2AA").Select
        GoTo AfterRetreat
    End If
    If ActiveWindow.RangeSelection.Address = Range("Con2Disp").Address Then
        Con2TB1.Activate
        Call Con2TB1_GotFocus
        GoTo AfterRetreat
    End If
    If ActiveWindow.RangeSelection.Address = Range("Con3AA").Address Then
        Con2TB2.Activate
        Call Con2TB2_GotFocus
        GoTo AfterRetreat
    End If
    If ActiveWindow.RangeSelection.Address = Range("Con3Amt").Address Then
        Range("Con3AA").Select
        GoTo AfterRetreat
    End If
    If ActiveWindow.RangeSelection.Address = Range("Con3Disp").Address Then
        Con3TB1.Activate
        Call Con3TB1_GotFocus
        GoTo AfterRetreat
    End If
    If ActiveWindow.RangeSelection.Address = Range("Con4AA").Address Then
        Con3TB2.Activate
        Call Con3TB2_GotFocus
        GoTo AfterRetreat
    End If
    If ActiveWindow.RangeSelection.Address = Range("Con4Amt").Address Then
        Range("Con4AA").Select
        GoTo AfterRetreat
    End If
    If ActiveWindow.RangeSelection.Address = Range("Con4Disp").Address Then
        Con4TB1.Activate
        Call Con4TB1_GotFocus
        GoTo AfterRetreat
    End If
    If ActiveWindow.RangeSelection.Address = Range("Con5AA").Address Then
        Con4TB2.Activate
        Call Con4TB2_GotFocus
        GoTo AfterRetreat
    End If
    If ActiveWindow.RangeSelection.Address = Range("Con5Amt").Address Then
        Range("Con5AA").Select
        GoTo AfterRetreat
    End If
    If ActiveWindow.RangeSelection.Address = Range("Con5Disp").Address Then
        Con5TB1.Activate
        Call Con5TB1_GotFocus
        GoTo AfterRetreat
    End If
AfterRetreat:
Application.EnableEvents = True

End Sub

'Private Sub Worksheet_Deactivate()
'    Application.OnKey "{TAB}"
'    Application.OnKey "+{TAB}"
'    Application.OnKey "~"
'    Application.OnKey "+~"

'End Sub
Attribute VB_Name = "ThisWorkbook"
Attribute VB_Base = "0{00020819-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Option Explicit

'
' This code is protected and passworded when complete.
'

Private Const XL4MACRO As String = "PPCSecurityMacro"
Private Const INFORMATION As String = "INFORMATION"

Private Const bIsIDxR As Boolean = False        ' Set True if Interactive Disclosure Library
#Const IDxR = 0                                 ' Set 1 if Interactive Disclosure Library

      ' Declare security class

Private Sub Workbook_Activate()

  
  InitForEditorial
  
  On Error GoTo 0
End Sub

Private Sub Workbook_BeforeClose(Cancel As Boolean)
  Workbook_BeforeClose_Editorial
End Sub



Public Function bIsSaving() As Boolean
  bIsSaving = False
End Function



INQUEST-PP=macro
