Attribute VB_Name = "NewMacros"
Dim nb_champs  As Integer
Dim nb_fois As Integer
Dim nb_champs_cou As Integer
Dim ArrayStr(1000) As Integer
Dim str_chaine As String
Sub macro_item()
Dim str_item As String
Dim str_mot As String
Dim position_item As Double
Dim position_mot As Double
Dim champ As Field

 'X = GetTickCount
  For Each champ In ActiveDocument.Fields
    If InStr(1, str_chaine, "ITEM") = 0 Then
      Exit For
    End If
      
    str_item = Trim(Mid(champ.Code, Len(" MACROBUTTON ELIT-TEAM ") + 1))
    position_item = InStr(1, str_chaine, str_item)
    
    If position_item > 0 Then
        position_mot = InStr(position_item, str_chaine, "*X*") + 3
        str_mot = Mid(str_chaine, position_mot, InStr(position_mot, str_chaine, "*X*") - position_mot)
        If str_mot = "" Then
            champ.Delete
        Else
            champ.Select
            Selection.Text = str_mot
           
        End If
         str_chaine = Mid(str_chaine, 1, position_item - 1) & Mid(str_chaine, position_mot + Len(str_mot) + 3)
    End If
  Next

 str_chaine = ""
 Selection.GoTo what:=wdGoToLine, Which:=wdGoToFirst, Count:=1, Name:=""
 

' MsgBox "Temp execution" & GetTickCount - X & " ms"
End Sub

Sub macro_suppress()
'
' macto_suppress Macro
' Macro enregistr|fffd|e le 12/03/97 par MAR
'
For i = 1 To ActiveDocument.Fields.Count
  ActiveDocument.Fields(1).Delete
Next
End Sub
Sub macro_debut_insert()
'
' macro_debut_insert Macro
' Macro cr|fffd||fffd|e le 26/07/99 par Matthieu BRUN
'
Selection.GoTo what:=wdGoToLine, Which:=wdGoToFirst, Count:=1, Name:=""
End Sub
Sub macro_fin_insert()
'
' macro_debut_insert Macro
' Macro cr|fffd||fffd|e le 26/07/99 par Matthieu BRUN
'
str_chaine = str_chaine & Selection.Text
If InStr(1, Selection.Text, "*X*") > 0 Then
    Selection.Delete
End If
End Sub
Sub item_add()
Attribute item_add.VB_Description = "Macro enregistr|fffd|e le 12/03/97 par MAR"
Attribute item_add.VB_ProcData.VB_Invoke_Func = "Normal.NewMacros.Macro1"
'
' Macro1 Macro
' Macro enregistr|fffd|e le 12/03/97 par MAR
Dim str_item As String
str_item = Selection.Text
Selection.Delete
Selection.Fields.Add Range:=Selection.Range, Type:=wdFieldEmpty, Text:= _
        "MACROBUTTON ELIT-TEAM " + str_item, PreserveFormatting:=False
End Sub
Sub macro_del_item()
Dim str_chaine As String
Dim nb_elem As Integer
nb_elem = ActiveDocument.Fields.Count
str_chaine = Trim(Selection.Text)
Selection.Delete
For i = 1 To nb_elem
  If ActiveDocument.Fields(i).Code = " MACROBUTTON ELIT-TEAM " + str_chaine + " " Then
      ActiveDocument.Fields(i).Delete
    Exit For
  End If
Next
End Sub

Sub print_file()
Attribute print_file.VB_Description = "Macro enregistr|fffd|e le 12/03/97 par MAR"
Attribute print_file.VB_ProcData.VB_Invoke_Func = "Normal.NewMacros.Macro1"
'
' Macro1 Macro
' Macro enregistr|fffd|e le 12/03/97 par MAR
'
Dim str_chaine As String
Dim str_printer As String
Dim copies As Integer
str_chaine = Selection.Text
Selection.Cut
str_printer = Right(str_chaine, Len(str_chaine) - 3)
ActivePrinter = str_printer
copies = CInt(Left(str_chaine, 3))
    With Options
        .UpdateFieldsAtPrint = False
        .UpdateLinksAtPrint = False
        .DefaultTray = "Utiliser config. imprimante"
        .PrintBackground = False
        .PrintProperties = False
        .PrintFieldCodes = False
        .PrintComments = False
        .PrintHiddenText = False
        .PrintDrawingObjects = True
        .PrintDraft = False
        .PrintReverse = False
        .MapPaperSize = True
    End With
    With ActiveDocument
        .PrintPostScriptOverText = False
        .PrintFormsData = False
    End With
Application.PrintOut FileName:="", Range:=wdPrintAllDocument, Item:= _
        wdPrintDocumentContent, copies:=copies, Pages:="", PageType:=wdPrintAllPages, _
        Collate:=True, Background:=True, PrintToFile:=True, OutputFileName:="c:\windows\" & Left(ActiveDocument.Name, Len(ActiveDocument.Name) - 3) + ".prn", _
        Append:=False
End Sub
Sub print_doc()
Attribute print_doc.VB_Description = "Macro enregistr|fffd|e le 12/03/97 par MAR"
Attribute print_doc.VB_ProcData.VB_Invoke_Func = "Normal.NewMacros.Macro2"
Dim str_chaine As String
Dim str_printer As String
Dim copies As Integer
str_chaine = Selection.Text
Selection.Cut
str_printer = Left(str_chaine, Len(str_chaine) - 3)
ActivePrinter = str_printer
copies = CInt(Right(str_chaine, 3))
    With Options
        .UpdateFieldsAtPrint = False
        .UpdateLinksAtPrint = False
        .DefaultTray = "Utiliser config. imprimante"
        .PrintBackground = False
        .PrintProperties = False
        .PrintFieldCodes = False
        .PrintComments = False
        .PrintHiddenText = False
        .PrintDrawingObjects = True
        .PrintDraft = False
        .PrintReverse = False
        .MapPaperSize = True
    End With
    With ActiveDocument
        .PrintPostScriptOverText = False
        .PrintFormsData = False
    End With

Application.PrintOut FileName:="", Range:=wdPrintAllDocument, Item:= _
        wdPrintDocumentContent, copies:=copies, Pages:="", PageType:=wdPrintAllPages, _
        Collate:=True, Background:=False, PrintToFile:=False
End Sub
Sub multiplier_document()
Attribute multiplier_document.VB_Description = "Macro enregistr|fffd|e le 12/03/99 par MAR"
Attribute multiplier_document.VB_ProcData.VB_Invoke_Func = "Normal.NewMacros.multiplier_document"
  Dim str_chaine As String
  Dim copies As Integer
  nb_champs = ActiveDocument.Fields.Count
  str_chaine = Selection.Text
  Selection.Delete
  copies = CInt(str_chaine)

  
    Selection.WholeStory
    Selection.Cut
    For i = 1 To copies
      Selection.Paste
      If i <> copies Then
        Selection.InsertBreak Type:=wdPageBreak
      End If
    Next
    Selection.GoTo what:=wdGoToPage, Which:=wdGoToNext, Name:="1"
    Selection.GoTo what:=wdGoToLine, Which:=wdGoToFirst, Count:=1, Name:=""
End Sub
Sub Select_item_info()
Attribute Select_item_info.VB_Description = "Macro enregistr|fffd|e le 06/05/97 par MAR"
Attribute Select_item_info.VB_ProcData.VB_Invoke_Func = "Normal.NewMacros.Macro2"
  ActiveDocument.Fields(1).Code
End Sub
Sub debut_info()
Attribute debut_info.VB_Description = "Macro enregistr|fffd|e le 07/05/97 par MAR"
Attribute debut_info.VB_ProcData.VB_Invoke_Func = "Normal.NewMacros.dsdsdsdsdsdsdsd"
If Selection.Type <> 1 Then
   Selection.Copy
   Selection.MoveRight Unit:=wdWord, Count:=1
   Selection.PasteSpecial Link:=False, DataType:=wdPasteText, Placement:= _
        wdInLine, DisplayAsIcon:=False
   Selection.MoveLeft Unit:=wdWord, Count:=1, Extend:=wdExtend
End If
End Sub
Sub select_all()
'
' macto_suppress Macro
' Macro enregistr|fffd|e le 12/03/97 par MAR
'
Dim str_item As String
Dim nb_elem As Integer

nb_elem = ActiveDocument.Fields.Count
  
For i = 1 To nb_elem
  str_item = str_item + "*X*" + RTrim(LTrim(Right(ActiveDocument.Fields(i).Code, Len(ActiveDocument.Fields(i).Code) - InStr(ActiveDocument.Fields(i).Code, "ITEM") + 1)))
Next
str_item = str_item + "*X*"
Selection.HomeKey Unit:=wdLine
Selection.Text = str_item
End Sub
Sub minimize()
'
' minimize Macro
' Macro enregistr|fffd|e le 03/06/99 par MAR
'
    Application.WindowState = wdWindowStateMinimize
End Sub
Sub PremierPlan()
'
' minimize Macro
' Macro enregistr|fffd|e le 03/06/99 par MAR
'
    Application.Activate
    Application.WindowState = wdWindowStateMinimize
    Application.WindowState = wdWindowStateMaximize
    
End Sub
Sub Save()
Attribute Save.VB_Description = "Macro enregistr|fffd|e le 21/06/99 par MAR"
Attribute Save.VB_ProcData.VB_Invoke_Func = "Normal.NewMacros.Macro3"
'
' Save Macro
' Macro enregistr|fffd|e le 21/06/99 par MAR
'
  If ActiveDocument.Saved = False Then
    ActiveDocument.Save
  End If

End Sub

Sub doc2rtf()
    Dim str_chaine As String
    
    str_chaine = Selection.Text
    Selection.Cut
    
    ActiveDocument.SaveAs FileName:=str_chaine, FileFormat:=wdFormatRTF, _
                        lockcomments:=False, Password:="", AddToRecentFiles:=False, _
                        WritePassword:="", ReadOnlyRecommended:=False, EmbedTrueTypeFonts:=False, _
                        savenativepictureformat:=False, SaveFormsData:=False, SaveAsAOCELetter:=False
                        
                        
    
End Sub

Sub print_file2()
'
'Par rapport a print file, on passe en plus le chemin et le nom du document
'de facon a ne pas avoir de pb sur l'endroit
'Par contre n'imprime qu'un exemplaire
'Le but est de faire une impression dans un fichier
'syntaxe : chemin/nom imprimante
Dim str_chaine As String
Dim str_printer As String
Dim copies As Integer
Dim num_pos As Integer

str_chaine = Selection.Text
Selection.Cut
num_pos = InStr(1, str_chaine, "/")
str_chemin = Left(str_chaine, num_pos - 1)
str_printer = Right(str_chaine, Len(str_chaine) - num_pos)

ActivePrinter = str_printer
copies = 1
    With Options
        .UpdateFieldsAtPrint = False
        .UpdateLinksAtPrint = False
        .DefaultTray = "Utiliser config. imprimante"
        .PrintBackground = False
        .PrintProperties = False
        .PrintFieldCodes = False
        .PrintComments = False
        .PrintHiddenText = False
        .PrintDrawingObjects = True
        .PrintDraft = False
        .PrintReverse = False
        .MapPaperSize = True
    End With
    With ActiveDocument
        .PrintPostScriptOverText = False
        .PrintFormsData = False
    End With
Application.PrintOut FileName:="", Range:=wdPrintAllDocument, Item:= _
        wdPrintDocumentContent, copies:=copies, Pages:="", PageType:=wdPrintAllPages, _
        Collate:=True, Background:=False, PrintToFile:=True, _
        OutputFileName:=str_chemin & Left(ActiveDocument.Name, Len(ActiveDocument.Name) - 4) + ".prn", _
        Append:=False
End Sub

Sub zetafax()
    Dim str_chaine As String 'n|fffd|,nom_dest
    Dim str_num As String
    Dim str_dest As String
    Dim num_pos As Integer
    
    str_chaine = Selection.Text
    Selection.Cut

    num_pos = InStr(1, str_chaine, ",")
    str_num = Left(str_chaine, num_pos - 1)

    If Len(str_chaine) > num_pos Then
      str_dest = Right(str_chaine, Len(str_chaine) - num_pos)
    End If
    
    Rem D|fffd|finir le control DDE de Zetafax
    conv1 = DDEInitiate(App:="Zetafax", Topic:="Addressing")
    DDEExecute channel:=conv1, Command:="[DDEControl]"
    
    Rem Destinataire
    DDEPoke channel:=conv1, Item:="Fax", Data:=str_num
    If Len(str_chaine) > num_pos Then
      DDEPoke channel:=conv1, Item:="Name", Data:=str_dest
    End If
    

    str_printer = "Zetafax Printer"
    ActivePrinter = str_printer
    Application.PrintOut Background:=False

    Rem Envoi
    DDEExecute channel:=conv1, Command:="[Send]"
    
    
    Rem fin
    DDEExecute channel:=conv1, Command:="[DDERelease]"
    DDETerminate channel:=conv1
End Sub

Sub supp_fin_page()
Dim str_chaine As String
Dim str_item As String
Dim str_mot As String
Dim position As Integer
Dim nb_ligne As Integer
  str_chaine = Selection.Text
  Selection.Delete
  position = InStr(1, str_chaine, "*X*")

If position > 0 Then
    str_item = Left(str_chaine, position - 1)
    nb_enreg = ActiveDocument.Fields.Count

    For i = 1 To nb_enreg
        str_code = ActiveDocument.Fields(i).Code
        If str_code = " MACROBUTTON ELIT-TEAM " + str_item + " " Then
            ActiveDocument.Fields(i).Select
            Selection.HomeKey Unit:=wdLine
            Selection.EndKey Unit:=wdStory, Extend:=wdExtend
            Selection.Delete
            Exit For
        End If
        Next
End If

End Sub

Sub supp_ligne()
Dim str_chaine As String
Dim str_item As String
Dim str_mot As String
Dim position As Integer
Dim nb_ligne As Integer
  str_chaine = Selection.Text
  Selection.Delete
  position = InStr(1, str_chaine, "*X*")

If position > 0 Then
    str_item = Left(str_chaine, position - 1)
    nb_enreg = ActiveDocument.Fields.Count

    For i = 1 To nb_enreg
        str_code = ActiveDocument.Fields(i).Code
        If str_code = " MACROBUTTON ELIT-TEAM " + str_item + " " Then
            ActiveDocument.Fields(i).Select
            Selection.HomeKey Unit:=wdLine
            Selection.EndKey Unit:=wdLine, Extend:=wdExtend
            Selection.Delete Unit:=wdCharacter, Count:=1
            Exit For
        End If
        Next
End If

End Sub
Sub Sup_ligne_vide_tableau()
'
' Sup_ligne_vide_tableau
'

Dim X As Integer
Dim ColumnCnt As Integer
Dim i As Integer
Dim nb_Tables As Integer
Dim nb_table_deb As Integer
Dim nb_table_before As Integer
Dim nb_table_after As Integer
Dim nb_table_del As Integer

nb_table_deb = ActiveDocument.Tables.Count

If nb_table_deb >= 1 Then
    For nb_Tables = 1 To ActiveDocument.Tables.Count
    X = 1
        If ActiveDocument.Tables.Count >= 1 And nb_Tables <= nb_table_deb - nb_table_del Then
          ColumnCnt = ActiveDocument.Tables(nb_Tables).Columns.Count
          For Each aRow In ActiveDocument.Tables(nb_Tables).Rows
            i = 0
            For Each aCell In ActiveDocument.Tables(nb_Tables).Rows(X).Cells
               Set MyRange = ActiveDocument.Range(Start:=aCell.Range.Start, _
                   End:=aCell.Range.End - 1)
               If MyRange.Text Like "" Then
                   i = i + 1
               End If
             Next aCell
             If i = ColumnCnt Then
                nb_table_before = ActiveDocument.Tables.Count
                ActiveDocument.Tables(nb_Tables).Rows(X).Select
                Selection.Rows.Delete
                nb_table_after = ActiveDocument.Tables.Count
                If nb_table_before <> nb_table_after Then
                   nb_Tables = nb_Tables - 1
                   nb_table_del = nb_table_del + 1
                End If
              Else
                 X = X + 1
              End If
         Next aRow
       End If
    Next nb_Tables
End If

End Sub

Sub recup_item()
'Created by Damien Robert
'Macro a lancer que depuis satellit.doc
'Cette macro g|fffd|n|fffd|re un script sql qui peut |fffd|tre lanc|fffd| dans la base pour mettre |fffd| jour
'la table sticcpdoc (les items r|fffd|ellement dans les documents)
Dim WordDoc As Word.Document
Dim str_nom_doc As String
Dim fNum As Integer
Dim nom_script_sql As String
Dim Appli As Word.Application

  'on passe le nom du doc en 1|fffd|re ligne (r|fffd|pertoire complet + nom du doc)
  str_nom_doc = Selection.Text
  
  'On ouvre le fichier script dans sat\sql\
  fNum = FreeFile
  nom_script_sql = ActiveDocument.Path & "\fax\sql\" & Format(Date, "dd_mm_yyyy") & ".sql"
  Open nom_script_sql For Append As #fNum
    
   If str_nom_doc = "EXIT_SCRIPT" Then
   'Si nom_doc = "EXIT_SCRIPT" on rajoute un exit dans le script car il est fini
        Print #fNum, "EXIT;"
        Selection.Delete
        ActiveDocument.Save
   
   Else
   
          On Error GoTo GestionErreur
          'on ouvre le document nom_doc
          Documents.Open FileName:=str_nom_doc & ".doc", ConfirmConversions:=False, ReadOnly:= _
                        False, AddToRecentFiles:=False, PasswordDocument:="", PasswordTemplate:= _
                        "", Revert:=False, WritePasswordDocument:="", WritePasswordTemplate:="", _
                         Format:=wdOpenFormatAuto
          'on efface la table sticcpdoc (items) pour ce document
        Print #fNum, "Delete sticcpdoc where doce_code = '" & Mid(ActiveDocument.Name, 1, Len(ActiveDocument.Name) - 4) & "';"
        
          'pour chaque item trouv|fffd| on insert l'item dans sticcpdoc
        For Each champ In ActiveDocument.Fields
            'si c'est un champ de type ITEM
            If InStr(1, champ.Code, "ITEM") > 0 Then
                str_item = Trim(Mid(champ.Code, Len(" MACROBUTTON SAT ") + 1))
                Print #fNum, "INSERT INTO STICCPDOC ( DOCE_CODE, DOCE_ITEM, DOCE_LONG, DOCE_SEQ,DOCE_SEQ2 ) VALUES ( '" & Mid(ActiveDocument.Name, 1, Len(ActiveDocument.Name) - 4) & "','" & Mid(str_item, 1, 10) & "','" & Mid(str_item, 11, 3) & "','" & Mid(str_item, 14, 3) & "','" & Mid(str_item, 17, 3) & "');"
            End If
        Next
        
        'on commit les insert pour ce document
        Print #fNum, "COMMIT;"
        Close #fNum
        
        'on ferme le document
        ActiveDocument.Close
        'on supprime le nom du doc ajouter pour param|fffd|tre dans satellit.doc
        Selection.Delete
        'on sauve satellit.doc
        ActiveDocument.Save
        
  End If
  
  'On quitte Word
  Word.Application.Quit
  
GestionErreur:
  'gestion erreur 5174 : si document inexistant dans le r|fffd|pertoire
  If Err.Number = 5174 Then
     num_choix = MsgBox("Le document " & str_nom_doc & " est inexistant." & Chr(13) & "Mais il existe encore dans la base, penser |fffd| le supprimer de la base.", 0, "Document inexistant")
     Selection.Delete
     ActiveDocument.Save
     Word.Application.Quit
  End If

  
End Sub













Attribute VB_Name = "NewMacros2"
Sub Duplication_macros()
'Duplique toutes les macros de ce documents dans tous les documents .doc pr|fffd|sents dans le m|fffd|me r|fffd|pertoire
'
'11/08/2008
'Created by Damien Robert

Dim Appli As Word.Application
Dim WordDoc As Word.Document
Dim VBComp As Object
Dim X As Integer
Dim str_fichier As Object
Dim str_fichier_original As String
Dim o_system_fichier As Object
Dim o_repertoire As Object
Dim nom_fichier As String
Dim num_choix As Integer
Dim Msg As String

'On Error Resume Next
On Error GoTo Traite_exception

str_fichier_original = ActiveDocument.Name

Set o_system_fichier = CreateObject("Scripting.FileSystemObject")
Set o_repertoire = o_system_fichier.GetFolder(ActiveDocument.Path)

num_choix = MsgBox("Dupliquer les macros de ce document dans tous les autres documents Word pr|fffd|sents dans le r|fffd|pertoire " + ActiveDocument.Path + " ?" & Chr(13) & "NB : Attention, les anciennes macros existantes seront supprim|fffd|es", 4, "Attention Duplication de macros")

If num_choix = 6 Then
    'Boucle sur chaque fichier
    For Each str_fichier In o_repertoire.Files
        str_nom_fichier = str_fichier.Name
        'Test si c'est un .doc et que ce n'ai pas satellit.doc
        If Right(UCase(str_nom_fichier), 4) = ".DOC" And Left(str_nom_fichier, 1) <> "~" And str_nom_fichier <> ActiveDocument.Name Then
        
            'Ouvre le document
            Documents.Open FileName:=ActiveDocument.Path & "\" & str_nom_fichier, ConfirmConversions:=False, ReadOnly:= _
                  False, AddToRecentFiles:=False, PasswordDocument:="", PasswordTemplate:= _
                  "", Revert:=False, WritePasswordDocument:="", WritePasswordTemplate:="", _
                   Format:=wdOpenFormatAuto
            
            
            Set Appli = GetObject(, "Word.Application")
            'Identifie les documents
            Set WordDoc = Appli.Documents(str_nom_fichier)
            Set WordDoc_original = Appli.Documents(str_fichier_original)
            
            'Identifie les modules VBA
            Set VBComp_original = WordDoc_original.VBProject.VBComponents(WordDoc_original.VBProject.VBComponents(2).Name)
            Set VBComp = WordDoc.VBProject.VBComponents(WordDoc.VBProject.VBComponents(2).Name)
         
            'Dans le document trouv|fffd|
            With WordDoc.VBProject.VBComponents(VBComp.Name).CodeModule
                X = .CountOfLines
                'Supprime les toutes les macros
                .DeleteLines 1, .CountOfLines
            End With
            
            'Avec le document satellit.doc, copie toutes les macro dans le document trouv|fffd|
            With WordDoc_original.VBProject.VBComponents(VBComp_original.Name).CodeModule
            WordDoc.VBProject.VBComponents(VBComp.Name).CodeModule.InsertLines X + 1, .Lines(1, .CountOfLines)
            End With
            
            'Fermeture du document trouv|fffd|
            WordDoc.Save
Doc_suivant:
            Windows(str_nom_fichier).Activate
            ActiveWindow.Close
        
        End If
    
    Next

num_choix = MsgBox("Duplication termin|fffd|e", 0, "Fin")

End If
GoTo Fin_proc|fffd|dure


Traite_exception:
 If Err.Number = 9 Then
    WordDoc.VBProject.VBComponents.Add (1)
    WordDoc.VBProject.VBComponents(2).Name = "NewMacros"
    Resume
 Else
    Msg = "L'erreur " & Str(Err.Number) & " a |fffd|t|fffd| g|fffd|n|fffd|r|fffd|e par la macro sur le document " & str_nom_fichier & Chr(13) & "Err: " & Err.Description & Chr(13) & "La duplication n'a pas |fffd|t|fffd| effectu|fffd|e sur ce document." & Chr(13) & "La duplication va continuer pour les autres documents."
    MsgBox Msg, , "Erreur", Err.HelpFile, Err.HelpContext
    End If
 
Fin_proc|fffd|dure:

End Sub


Attribute VB_Name = "ThisDocument"
Attribute VB_Base = "1Normal.ThisDocument"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = True
Attribute VB_Customizable = True




INQUEST-PP=macro
