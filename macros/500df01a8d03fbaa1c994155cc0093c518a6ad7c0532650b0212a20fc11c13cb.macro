Attribute VB_Name = "Modul1"
Sub Duplikate()
Attribute Duplikate.VB_ProcData.VB_Invoke_Func = " \n14"
'
' Duplikate Makro
'

'
    Range("B3").Select
    Range(Selection, Selection.End(xlDown)).Select
    ActiveSheet.Range("Table7[#Alle]").RemoveDuplicates Columns:=1, Header:= _
        xlYes
End Sub
Attribute VB_Name = "Modul2"
Sub Schaltfl|fffd|che2_Klicken()
Dim wkbMappe As Workbook
    
       Set wkbMappe = Workbooks.Add
    Sheets("Tabelle1").Range("A1").Value = "Konditionsart"
    Sheets("Tabelle1").Range("B1").Value = "Rabattgruppe / Materialgruppe / Material"
    Sheets("Tabelle1").Range("C1").Value = "Bezeichnung"
    Sheets("Tabelle1").Range("D1").Value = "Wert/Betrag"
    Sheets("Tabelle1").Range("E1").Value = "Einheit"
    
    
    ThisWorkbook.Worksheets("Netto Preise").Range("B3:B500").Copy
    Sheets("Tabelle1").Range("B2:B500").PasteSpecial Paste:=xlPasteValues
    
    ThisWorkbook.Worksheets("Netto Preise").Range("E3:E500").Copy
    Sheets("Tabelle1").Range("D2:D500").PasteSpecial Paste:=xlPasteValues
    
    ThisWorkbook.Worksheets("Netto Preise").Range("Q3:Q500").Copy
    Sheets("Tabelle1").Range("A2:A500").PasteSpecial Paste:=xlPasteValues
    
    ThisWorkbook.Worksheets("Netto Preise").Range("R3:R500").Copy
    Sheets("Tabelle1").Range("E2:E500").PasteSpecial Paste:=xlPasteValues
    
    
    
    MsgBox "Tabelle f|fffd|r Sch|fffd|cal Import erstellt"
End Sub
Attribute VB_Name = "Modul3"
Sub Sonderartikel_Clear()
Sheets("Sonderartikel").Range("B3:K50").ClearContents
End Sub
Attribute VB_Name = "Modul4"
Option Explicit
    Dim Stamm As String
    Dim varFile As Variant
    Dim varName As Variant
    Dim Blatt As String

Sub Sonderartikel_Import()
On Error GoTo Err
    Stamm = ActiveWorkbook.Name
    varFile = Application.GetOpenFilename("Excel Files (*.xlsx), *.xlsx", , "XLSX", "Auswahl", False)
    If TypeName(varFile) Like "Boolean" Then
        MsgBox "Keine Datei gew|fffd|hlt!", vbInformation
        Exit Sub
    Else

      varName = Right$(varFile, Len(varFile) - InStrRev(varFile, "\"))
     Workbooks.Open varFile
     Workbooks(varName).Sheets("Zusammenfassung Umarbeitung").Range("A2:J50").Copy
     Workbooks(Stamm).Sheets("Sonderartikel").Range("B3:K50").PasteSpecial xlPasteValues
     
     Workbooks(varName).Close
     Application.CutCopyMode = False

    End If
  Exit Sub
Err:
  Call MsgBox("Bitte |fffd|berpr|fffd|ffen ob die Tabelle" _
              & vbCrLf & "|fffd|Zusammenfassung Umarbeitung|fffd| in dieser Datei vorhanden ist" _
              , vbExclamation, "Fehler")

End Sub


Attribute VB_Name = "Sheet1"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Sheet2"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Tabelle3"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Tabelle4"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "ThisWorkbook"
Attribute VB_Base = "0{00020819-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "mBereinigung"
Sub Bereinigung()
    
    'Selection.Delete
    'Sheets("Umarbeitung Sch|fffd|co").Select
    'Range("Table2[[BVH]:[Gewicht]]").Select
    'Selection.PasteSpecial xlPasteValues
    'ActiveSheet.Paste
    
    If MsgBox("Wollen Sie die Bereinigung wirklich starten? Dieser Vorgang kann nicht r|fffd|ckg|fffd|ngig gemacht werden!", vbYesNo, "ACHTUNG") = vbYes Then

    Application.ScreenUpdating = False
    
    Dim specialItems As Range
    Dim allItems As Range
    Dim barItems As Range
    Dim divItems As Range
    Dim netPrices As Range
    
    
    Dim rng1 As Range
    Dim rng2 As Range
    Dim old As Range
    Dim neu As Range
    Dim div As Range
    Dim rgr1 As Range
    Dim rgr2 As Range
    Dim i As Long
    Dim a As Long
    Dim changed As Boolean
    Dim updated As Boolean
    'Dim divisor As Double
    Dim netPrice As Range
    'Dim form As String
 
    Set allItems = Sheets("Umarbeitung Sch|fffd|co").Range("Table2")
    Set divItems = Sheets("ME Umrechnungen").Range("Table17")
    Set netPrices = Sheets("Netto Preise").Range("Table7")
    Set multis = Sheets("Multis").Range("Table1")
    
    a = 0
    i = 1
    updated = False
    Set netPrice = netPrices.Columns(1).Cells
    
    'create hard copy of net prices and copy them to separate sheet
    For Each rng1 In allItems.Columns(23).Cells
        'For Each rng2 In divItems.Columns(1).Cells
            'If Trim(rng1.value) = Trim(rng2.value) Then
            If rng1.Interior.Color = RGB(255, 192, 0) Or rng1.Interior.Color = RGB(255, 255, 0) Then
                'ME
                Set old = allItems.Columns(23).Cells
                old(rng1.row - 5).Select
                old(rng1.row - 5) = Round(old(rng1.row - 5).Value, 2)
                'Selection.PasteSpecial xlPasteValues
                Set aNr = allItems.Columns(3).Cells
                Set pDim = allItems.Columns(13).Cells
                
                'aNr(rng1.row - 5).Select
                
                netPrice(i, 1) = aNr(rng1.row - 5)
                netPrice(i, 3) = pDim(rng1.row - 5)
                netPrice(i, 2) = old(rng1.row - 5)
                netPrice(i, 2).Interior.Color = rng1.Interior.Color
                netPrice(i, 2).Font.Color = rng1.DisplayFormat.Font.Color
                'Selection.Copy
                'Sheets("Netto Preise").Select
                
                Set neu = allItems.Columns(22).Cells
                neu(rng1.row - 5) = ""
                
                
                'netPrices.Insert
                i = i + 1
            Else
                Set RGR = allItems.Columns(15).Cells
                If Range("U3").Value = "ja" And (Trim(RGR(rng1.row - 5)) = "050" Or Trim(RGR(rng1.row - 5)) = "060" Or Trim(RGR(rng1.row - 5)) = "063") Then
                    Set old = allItems.Columns(23).Cells
                    old(rng1.row - 5).Select
                    old(rng1.row - 5) = Round(old(rng1.row - 5).Value, 2)
                    
                    Set neu = allItems.Columns(22).Cells
                    neu(rng1.row - 5) = ""
                Else
                    rng1.Select
                    ActiveCell.Formula = "=ROUND([@[VK Bto]]*[@Multi],2)"
            
                    Set neu = allItems.Columns(22).Cells
                    neu(rng1.row - 5).Select
                    ActiveCell.Formula = "=VLOOKUP(TRIM([@RBG]),Table1,6,FALSE)"
                End If
            End If
       ' Next
    Next
    
    'Sheets("Netto Preise").Select
    'Range("Table7").Select
    'netPrices.Paste
    
    'For Each rng1 In allItems.Columns(3).Cells
    '    For Each rng2 In divItems.Columns(1).Cells
    '        If Trim(rng1.value) = Trim(rng2.value) Then
                'ME
    '            Set old = allItems.Columns(8).Cells
                'Set neu = allItems.Columns(8).Cells
    '            Set div = divItems.Columns(2).Cells
                'divisor = Replace(div(rng2.row - 1), ",", ".") '.value
                'divisor = divisor / 100
                'old(rng1.row - 5).FormulaR1C1 = "=" & neu(rng1.row - 5) & "/" & div(rng2.row - 1) & ""
    '            old(rng1.row - 5).Select
    '            ActiveCell.FormulaR1C1 = Replace("=" & old(rng1.row - 5) & "/" & div(rng2.row - 1) & "", ",", ".")
                'old(rng1.row - 5).Formula = Replace("=" & neu(rng1.row - 5) & "/" & div(rng2.row - 1) & "", ",", ".")
                '"=" & neu(rng1.row - 5) & "/" & div(rng2.row - 1) & ""
                'old(rng1.row - 5).Formula = neu(rng1.row - 5) / div(rng2.row - 1)
                'old(rng1.row - 5).Interior.Color = RGB(255, 192, 0)
    '            ActiveCell.Interior.Color = RGB(255, 192, 0)
    '        End If
    '    Next
    'Next
    
    Sheets("Umarbeitung Sch|fffd|co").Select
    Range("Table2[[WKZ Kosten]:[WKZ Kosten]]").Select
    Selection.Copy
    Selection.PasteSpecial xlPasteValues
    
    Sheets("Multis").Select
    a = multis.Rows.Count + 4
    Range("D" & a).ClearContents
    a = a + 1
    Range("D" & a).ClearContents
    Range("E" & a).ClearContents
    Range("H:J").Delete
    
    If Sheets("Umarbeitung Sch|fffd|co").Range("U3").Value = "ja" Then
    
        Dim rngMultis As Range
        Set rngMultis = Sheets("Multis").Range("Table1")
        Dim rngCounter As Range
        
        For Each rngCounter In rngMultis.Columns(1).Cells
        
            If rngCounter.Value = 60 Or rngCounter.Value = 63 Or rngCounter.Value = 50 Then
            
                rngCounter.Offset(0, 6) = "KG"
            
            End If
        
        Next
    
    End If
    
    Sheets("Umarbeitung Sch|fffd|co").Select
    Range("AA:AC").Delete
    Range("T:U").Delete
    Range("P:Q").Delete
    Range("K:K").Delete
    Application.DisplayAlerts = False
    Sheets("Umarbeitung Sch|fffd|co Basis").Delete
    Sheets("Sonderartikel").Delete
    Sheets("Steg").Delete
    Sheets("ME Umrechnungen").Delete
    Application.DisplayAlerts = True

    Sheets("Umarbeitung Sch|fffd|co").Select
    a = allItems.Rows.Count + 3
    Range("A" & a).Select
    
    MsgBox ("Bereinigung beendet!")
    End If
    
    Application.ScreenUpdating = True
    
    Sheets("Netto Preise").Select
    Range("Table7[A-Nr]").Select
    ActiveSheet.Range("Table7[A-Nr]").RemoveDuplicates Columns:=1, Header:=xlYes
   
    MsgBox ("Doppelte Nettopreise entfernt!")

    
    
    
End Sub
Attribute VB_Name = "mDatenuebertragung"
Sub Daten|fffd|bernahme()
Attribute Daten|fffd|bernahme.VB_Description = "|fffd|bernahme der Rohdaten in Gesamttabelle"
Attribute Daten|fffd|bernahme.VB_ProcData.VB_Invoke_Func = "|fffd|\n14"
'
' Daten|fffd|bernahme Macro
' |fffd|bernahme der Rohdaten in Gesamttabelle
'
' Keyboard Shortcut: Ctrl+|fffd|
'
    Sheets("Umarbeitung Sch|fffd|co Basis").Select
    Range("Table25[[BVH]:[Gewicht]]").Select
    Selection.Copy
    Sheets("Umarbeitung Sch|fffd|co").Select
    Range("Table2[[BVH]:[Gewicht]]").Select
    ActiveSheet.Paste
    
    Sheets("Umarbeitung Sch|fffd|co Basis").Select
    Range("Table25[[VK Bto]:[Lagereinheit]]").Select
    Selection.Copy
    Sheets("Umarbeitung Sch|fffd|co").Select
    Range("Table2[[VK Bto]:[Lagereinheit]]").Select
    ActiveSheet.Paste
    
    Dim specialItems As Range
    Dim allItems As Range
    Dim barItems As Range
    Dim divItems As Range
    
    'specialItems = Worksheets("Sonderartikel").Range("[Table3[Art. Nr.]")
    'Sheets("Sonderartikel").Select
    
    Dim rng1 As Range
    Dim rng2 As Range
    Dim old As Range
    Dim neu As Range
    Dim div As Range
    Dim rgr1 As Range
    Dim rgr2 As Range
    Dim i As Long
    Dim a As Long
    Dim changed As Boolean
    Dim updated As Boolean
    'Dim divisor As Double
    
    Set allItems = Sheets("Umarbeitung Sch|fffd|co").Range("Table2")
    Set specialItems = Sheets("Sonderartikel").Range("Table3")
    Set barItems = Sheets("Steg").Range("Table5")
    Set divItems = Sheets("ME Umrechnungen").Range("Table17")
    
    a = 0
    i = 0
    updated = False
    
    
    For Each rng1 In specialItems.Columns(1).Cells
        a = a + 1
        updated = False
        For Each rng2 In allItems.Columns(3).Cells
            If Trim(rng1.Value) = Trim(rng2.Value) Then
                'kg/m
                Set old = allItems.Columns(16).Cells
                Set neu = specialItems.Columns(4).Cells
                old(rng2.row - 5) = neu(rng1.row - 2)
                'RGR
                Set old = allItems.Columns(15).Cells
                Set neu = specialItems.Columns(5).Cells
                old(rng2.row - 5) = neu(rng1.row - 2)
                'DIM
                Set old = allItems.Columns(13).Cells
                Set neu = specialItems.Columns(7).Cells
                old(rng2.row - 5) = neu(rng1.row - 2)
                'EKP
                Set old = allItems.Columns(17).Cells
                Set neu = specialItems.Columns(8).Cells
                old(rng2.row - 5) = neu(rng1.row - 2)
                old(rng2.row - 5).Interior.Color = RGB(71, 175, 233)
                'WKZ Kosten
                Set old = allItems.Columns(27).Cells
                Set neu = specialItems.Columns(11).Cells
                old(rng2.row - 5) = neu(rng1.row - 2)
                updated = True
            End If
        Next
        If updated Then
            i = i + 1
        End If
    Next
    MsgBox ("Sonderartikel: " & i & " von " & a & " |fffd|bertragen!")
    
    For Each rng1 In allItems.Columns(3).Cells
        changed = False
        For Each rng2 In barItems.Columns(1).Cells
            If Trim(rng1.Value) = Trim(rng2.Value) Then
                'EKP
                Set rgr1 = allItems.Columns(15).Cells
                If Trim(rgr1(rng1.row - 5)) = "61" Or Trim(rgr1(rng1.row - 5)) = "62" Or Trim(rgr1(rng1.row - 5)) = "64" Or Trim(rgr1(rng1.row - 5)) = "65" Then
                    changed = True
                End If
                Set old = allItems.Columns(17).Cells
                Set neu = barItems.Columns(5).Cells
                old(rng1.row - 5) = neu(rng2.row - 1)
                
            End If
        Next
        Set rgr1 = allItems.Columns(15).Cells
        If changed = False And (Trim(rgr1(rng1.row - 5)) = "61" Or Trim(rgr1(rng1.row - 5)) = "62" Or Trim(rgr1(rng1.row - 5)) = "64" Or Trim(rgr1(rng1.row - 5)) = "65") Then
            Set old = allItems.Columns(17).Cells
            old(rng1.row - 5).Interior.Color = RGB(191, 143, 0)
        End If
    Next
    
    MsgBox ("Stegpreise |fffd|bertragen!")
    
    For Each rng1 In allItems.Columns(3).Cells
        For Each rng2 In divItems.Columns(1).Cells
            If Trim(rng1.Value) = Trim(rng2.Value) Then
                'ME
                Set old = allItems.Columns(8).Cells
                'Set neu = allItems.Columns(8).Cells
                Set div = divItems.Columns(2).Cells
                'divisor = Replace(div(rng2.row - 1), ",", ".") '.value
                'divisor = divisor / 100
                'old(rng1.row - 5).FormulaR1C1 = "=" & neu(rng1.row - 5) & "/" & div(rng2.row - 1) & ""
                old(rng1.row - 5).Select
                ActiveCell.FormulaR1C1 = Replace("=" & old(rng1.row - 5) & "/" & div(rng2.row - 1) & "", ",", ".")
                'old(rng1.row - 5).Formula = Replace("=" & neu(rng1.row - 5) & "/" & div(rng2.row - 1) & "", ",", ".")
                '"=" & neu(rng1.row - 5) & "/" & div(rng2.row - 1) & ""
                'old(rng1.row - 5).Formula = neu(rng1.row - 5) / div(rng2.row - 1)
                'old(rng1.row - 5).Interior.Color = RGB(255, 192, 0)
                ActiveCell.Interior.Color = RGB(255, 192, 0)
            End If
        Next
    Next
    
    MsgBox ("ME Umrechnungen durchgef|fffd|hrt - Macro beendet!")
    
    'specialItems = Worksheets("Sonderartikel").Range("[Table3[Art. Nr.]")
    'Set allItems = Worksheets("Umarbeitung Sch|fffd|co").ListObject("Table2")
    
    'For Each value In specialItems
        'allItems.DataBodyRange.Columns (3)
        'row = allItems.Range.Find(value).row
        ' r = Worksheets("Sonderartikel").Range("[Table3[kg/m]")
    
    'Next value
    
    

    
'    Sheets("Sonderartikel").Select
'    Range("Table3[Art. Nr.]").Select
'    Selection.Copy
'    Sheets("Umarbeitung Sch|fffd|co").Select
'    Range("Table2[Art. Nr.]").Select
'    Selection.End(xlDown).Select
'    'Selection.EndOf Unit:=wdLine, Extend:=wdMove
'    ActiveSheet.Paste
'
'    Sheets("Sonderartikel").Select
'    Range("Table3[Bezeichnung]").Select
'    Selection.Copy
'    Sheets("Umarbeitung Sch|fffd|co").Select
'    Range("Table2[Bezeichnung]").Select
'    Selection.End(xlDown).Select
'    ActiveSheet.Paste
'
'    Sheets("Sonderartikel").Select
'    Range("Table3[ME]").Select
'    Selection.Copy
'    Sheets("Umarbeitung Sch|fffd|co").Select
'    Range("Table2[Meh]").Select
'    Selection.End(xlDown).Select
'    ActiveSheet.Paste
'
'    Sheets("Sonderartikel").Select
'    Range("Table3[kg/m]").Select
'    Selection.Copy
'    Sheets("Umarbeitung Sch|fffd|co").Select
'    Range("Table2[kg/m]").Select
'    Selection.End(xlDown).Select
'    ActiveSheet.Paste
'
'    Sheets("Sonderartikel").Select
'    Range("Table3[RGR]").Select
'    Selection.Copy
'    Sheets("Umarbeitung Sch|fffd|co").Select
'    Range("Table2[RBG]").Select
'    Selection.End(xlDown).Select
'    ActiveSheet.Paste
'
'    Sheets("Sonderartikel").Select
'    Range("Table3[Vk Bto]").Select
'    Selection.Copy
'    Sheets("Umarbeitung Sch|fffd|co").Select
'    Range("Table2[Vk Bto]").Select
'    Selection.End(xlDown).Select
'    Selection.PasteSpecial Paste:=xlPasteValues
'
'    Sheets("Sonderartikel").Select
'    Range("Table3[DIM]").Select
'    Selection.Copy
'    Sheets("Umarbeitung Sch|fffd|co").Select
'    Range("Table2[AS400 DIM]").Select
'    Selection.End(xlDown).Select
'    ActiveSheet.Paste
'
'    Sheets("Sonderartikel").Select
'    Range("Table3[EKP/ME]").Select
'    Selection.Copy
'    Sheets("Umarbeitung Sch|fffd|co").Select
'    Range("Table2[V1 (Access, tempor|fffd|r)]").Select
'    Selection.End(xlDown).Select
'    Selection.PasteSpecial Paste:=xlPasteValues
End Sub
Attribute VB_Name = "mDruck"
Sub StartDruck()

    Application.ScreenUpdating = False

    Sheets("PV_Druck_Hilfsblatt").Visible = -1

    Copy_Rabatt_9
    Copy_Artikelnummer
    
    Sheets("PV_Druck_Hilfsblatt").Visible = 0
    
    Application.ScreenUpdating = True

End Sub

Sub Copy_Rabatt_9()

    Sheets("PV_Druck").Unprotect ("NETTO")
    
    Sheets("PV_Druck").Range("X51:AF88").UnMerge

    Sheets("PV_Druck_Hilfsblatt").Range("X51:X88").Copy
    
    Sheets("PV_Druck").Select
    Range("X51").Select
    Selection.PasteSpecial Paste:=xlPasteValues, Operation:=xlNone, SkipBlanks _
        :=False, Transpose:=False
        
    Range("X51:Z88").Select
    Selection.Merge True
    With Selection
        .HorizontalAlignment = xlCenter
        .VerticalAlignment = xlCenter
        .WrapText = False
        .Orientation = 0
        .AddIndent = False
        .IndentLevel = 0
        .ShrinkToFit = False
        .ReadingOrder = xlContext
    End With
    
    Sheets("PV_Druck_Hilfsblatt").Range("AB51:AB88").Copy
    
    Sheets("PV_Druck").Select
    Sheets("PV_Druck").Range("AB51").Select
    Selection.PasteSpecial Paste:=xlPasteValues, Operation:=xlNone, SkipBlanks _
        :=False, Transpose:=False
        
    Range("AB51:AD88").Select
    Selection.Merge True
    With Selection
        .HorizontalAlignment = xlCenter
        .VerticalAlignment = xlCenter
        .WrapText = False
        .Orientation = 0
        .AddIndent = False
        .IndentLevel = 0
        .ShrinkToFit = False
        .ReadingOrder = xlContext
    End With
    
    Sheets("PV_Druck_Hilfsblatt").Range("AF51:AF88").Copy
    
    Sheets("PV_Druck").Range("AF51").Select
    Selection.PasteSpecial Paste:=xlPasteValues, Operation:=xlNone, SkipBlanks _
        :=False, Transpose:=False
        
    Range("AF51:AH88").Select
    Selection.Merge True
    With Selection
        .HorizontalAlignment = xlCenter
        .VerticalAlignment = xlCenter
        .WrapText = False
        .Orientation = 0
        .AddIndent = False
        .IndentLevel = 0
        .ShrinkToFit = False
        .ReadingOrder = xlContext
    End With
    
      Sheets("PV_Druck_Hilfsblatt").Range("AJ51:AJ88").Copy
    
    Sheets("PV_Druck").Range("AJ51").Select
    Selection.PasteSpecial Paste:=xlPasteValues, Operation:=xlNone, SkipBlanks _
        :=False, Transpose:=False
        
    Range("AJ51:AJ88").Select
    Selection.Merge True
    With Selection
        .HorizontalAlignment = xlLeft
        .VerticalAlignment = xlCenter
        .WrapText = False
        .Orientation = 0
        .AddIndent = False
        .IndentLevel = 0
        .ShrinkToFit = False
        .ReadingOrder = xlContext
    End With
    
    
    
    Sheets("PV_Druck").Protect ("NETTO")

End Sub

Sub Copy_Artikelnummer()

    Dim rngNettoPreise As Range
    Set rngNettoPreise = Sheets("Netto Preise").Range("Table7")
    Dim rngCounter As Range
    
    Sheets("PV_Druck").Unprotect ("NETTO")
    
    Sheets("PV_Druck_Hilfsblatt").Range("F210:F314").ClearContents
        
    Sheets("Netto Preise").Range("B3:B" & rngNettoPreise.Rows.Count + 2).Copy
    
    Sheets("PV_Druck_Hilfsblatt").Select
    Range("F210").Select
    Selection.PasteSpecial Paste:=xlPasteValues, Operation:=xlNone, SkipBlanks _
            :=False, Transpose:=False
            
    Sheets("PV_Druck_Hilfsblatt").Range("F210:AR314").Copy
    Sheets("PV_Druck").Select
    Range("F210").Select
    Selection.PasteSpecial Paste:=xlPasteValues, Operation:=xlNone, SkipBlanks _
            :=False, Transpose:=False
    Sheets("PV_Druck").Protect ("NETTO")
    MsgBox ("Nettokalkulation wurde |fffd|bernommen!")

End Sub


Attribute VB_Name = "mExport"
Sub StartExport()

    Application.ScreenUpdating = False

    Sheets("PV_Export").Visible = -1

    ClearExportTable
    CopyArtikelNummer
    CreateExportFile
    
    Sheets("PV_Export").Visible = 0
    
    Application.ScreenUpdating = True

End Sub

Sub ClearExportTable()

     Dim objPVExport As Object
     Set objPVExport = Sheets("PV_Export").ListObjects("Tabelle8")

     DeleteTableRows objPVExport
     
     Sheets("PV_Export").Range("I2").ClearContents

End Sub

Sub DeleteTableRows(ByRef Table As ListObject)
    On Error Resume Next
    'Delete all the other rows `IF `they exist
    Table.DataBodyRange.Offset(1, 0).Resize(Table.DataBodyRange.Rows.Count - 1, _
    Table.DataBodyRange.Columns.Count).Rows.Delete
    On Error GoTo 0
    
End Sub

Sub CopyArtikelNummer()

    Dim rngNettoArtikel As Range
    Set rngNettoArtikel = Sheets("Netto Preise").Range("Table7")

    Sheets("Netto Preise").Range("B3:B" & rngNettoArtikel.Rows.Count + 2).Copy
    Sheets("PV_Export").Select
    Range("I2").Select
        Selection.PasteSpecial Paste:=xlPasteValues, Operation:=xlNone, SkipBlanks _
            :=False, Transpose:=False
            
    Dim rngMultiArtikel As Range
    Set rngMultiArtikel = Sheets("Multis").Range("Table1")

    Sheets("Multis").Range("B3:B" & rngMultiArtikel.Rows.Count + 2).Copy
    
    Sheets("PV_Export").Select
    Range("I" & rngNettoArtikel.Rows.Count + 2).Select
        Selection.PasteSpecial Paste:=xlPasteValues, Operation:=xlNone, SkipBlanks _
            :=False, Transpose:=False

End Sub

Sub CreateExportFile()

    Sheets("PV_Export").Copy
    
    Range("A1").CurrentRegion.Select
    Selection.Copy
    Selection.PasteSpecial Paste:=xlPasteValues, Operation:=xlNone, SkipBlanks _
        :=False, Transpose:=False
        
    Dim relativePath As String
    relativePath = ThisWorkbook.Path & "\" & Left(ThisWorkbook.Name, Len(ThisWorkbook.Name) - 5) & "_AX_Import_" & Hour(Now()) & "-" & Minute(Now()) & "-" & Second(Now()) & ".xlsx"
    ActiveWorkbook.SaveAs Filename:=relativePath
    ActiveWorkbook.Close
MsgBox ("AX-Upload-Datei wurde erstellt!")
End Sub




INQUEST-PP=macro
