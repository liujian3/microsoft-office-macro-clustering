Attribute VB_Name = "Modul1"
'*** Austausch des linken Teils des Referenzpfades
'*** Aufruf: vba run [ref_laufwerk]ref_laufwerk  alt neu
'*** ge|fffd|ndert 2/16: Aufruf: vba run [ref_laufwerk]ref_laufwerk  alt > neu
'*** ArturG 01/2005

'*** |fffd|nderung 02/2007
'*** Aufruf ohne Parameter m|fffd|glich, dann |fffd|ffnet sich Dialogbox zur Eingabe der Werte

'*** |fffd|nderung 2/2008 ArturG : wenn .displayflag = false - dann kein Abbruch
Public Declare Function mdlRefFile_getParameters Lib "stdmdlbltin.dll" (ByVal param As String, ByVal paramName As Long, ByVal modelRef As Long) As Long
' erster Parameter von Long auf String ge|fffd|ndert gegen|fffd|ber mdl Beschreibung -> Strings Handling bei unterschiedlichen R|fffd|ckgabem|fffd|glichkeiten

'*** Unterst|fffd|tzung von Leerzeichen im Pfad, dazu muss ein Trennsymbol verwendet werden, dazu dieses Zeichen definiert: >
'''' ArturG 2/2016


Public Const REFERENCE_FILENAME = 7

Sub ref_laufwerk()
Dim oatts As Attachments
Dim oatt As Attachment
Dim oMods As ModelReferences
Dim oMod As ModelReference
Dim zeile As String
Dim alt As String
Dim neu As String
Dim p() As String
Dim i As Integer
     
Dim strFullName As String
'Allocate the buffer
strFullName = Space(512)
     
zeile = KeyinArguments
i = InStr(Trim(zeile), ">")
p = Split(Trim$(zeile), ">")
If (UBound(p) - LBound(p) <> 1) Or (i < 2) Or (i > (Len(Trim(zeile)) - 1)) Then
        UserForm1.Show vbModeless
Else
    alt = Trim$(p(0))
    neu = Trim$(p(1))
    
    Set oatts = ActiveModelReference.Attachments
    For Each oatt In oatts

        Dim rtc As Long
        Dim charP As Long

        strFullName = Space(512)
        rtc = mdlRefFile_getParameters(strFullName, REFERENCE_FILENAME, oatt.MdlModelRefP)
        If rtc = 0 Then
         If Len(strFullName) > 0 Then
         strFullName = Left$(strFullName, InStr(1, strFullName, vbNullChar) - 1)
        
         zeile = strFullName
         If zeile = "" Then zeile = oatt.AttachName
        
         i = InStr(UCase$(zeile), UCase$(alt))
         If i = 1 Then
                zeile = neu + Right$(zeile, Len(zeile) - Len(alt))
                oatt.SetAttachNameDeferred (zeile)
                oatt.Rewrite
         End If
       End If
     End If
    Next
End If
End Sub












Attribute VB_Name = "UserForm1"
Attribute VB_Base = "0{020CBE85-7653-424F-B3DC-ED4BF68C9E3C}{1E0EDF67-5555-4B54-98EB-18C7E0E1D977}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False

Private Sub CommandButton1_Click()

Dim oatts As Attachments
Dim oatt As Attachment
Dim alt As String
Dim neu As String
Dim i As Integer

Dim strFullName As String
'Allocate the buffer
strFullName = Space(512)

'On Error Resume Next

If (Len(TextBox1.Text) > 0) And (Len(TextBox2.Text) > 0) Then

alt = TextBox1.Text
neu = TextBox2.Text

    Set oatts = ActiveModelReference.Attachments
    For Each oatt In oatts

        Dim rtc As Long
        Dim charP As Long

        strFullName = Space(512)
        rtc = mdlRefFile_getParameters(strFullName, REFERENCE_FILENAME, oatt.MdlModelRefP)
        If rtc = 0 Then
         If Len(strFullName) > 0 Then
         strFullName = Left$(strFullName, InStr(1, strFullName, vbNullChar) - 1)
        
         zeile = strFullName
         If zeile = "" Then zeile = oatt.AttachName
        
         i = InStr(UCase$(zeile), UCase$(alt))
         If i = 1 Then
                zeile = neu + Right$(zeile, Len(zeile) - Len(alt))
                oatt.SetAttachNameDeferred (zeile)
                oatt.Rewrite
         End If
       End If
     End If
    Next
End If
End Sub

Private Sub CommandButton2_Click()
Unload Me
End Sub


INQUEST-PP=macro
