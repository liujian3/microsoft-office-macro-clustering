Attribute VB_Name = "Common"

'*********************************************************************8
'***
'*    Common Module across ALL Workbooks except EntFuncs.Xls
'***
'*********************************************************************8

Option Explicit
Option Private Module

Global EntServer As Object
Global ServerSet As Boolean


' returns True if the passed Nominal Code is valid
Public Function ValidCompany(Company$) As Boolean
    Company$ = Trim(Company$)
    
    If (Len(Company) > 0) And (Len(Company) <= 6) Then
        ValidCompany = True
    Else
        Error 516
        ValidCompany = False
    End If
End Function
 

' returns True if the passed General Ledger Code is valid
Public Function ValidGLCode(GLCode As Long) As Boolean
    If (GLCode <= 0) Then
        If (GLCode < 0) Then
            Error 511
        End If
        
        ValidGLCode = False
    Else
        ValidGLCode = True
    End If
End Function


' returns True if the passed year is valid
Public Function ValidYear(TheYear%) As Boolean
    If ((TheYear > 1900) And (TheYear < 2100)) Or (TheYear = -99) Then
        ' Actual Year or F6 Year
        ValidYear = True
    Else
        Error 512
        ValidYear = False
    End If
End Function


' returns True if the passed period is valid
Public Function ValidPeriod(ThePeriod%) As Boolean
    If ((ThePeriod >= 0) And (ThePeriod <= 99)) Or (ThePeriod = -99) Or (ThePeriod = -98) Or ((ThePeriod >= 101) And (ThePeriod <= 199)) Then
        ' Actual Period or F6 Period or CTD or CTD Period Offset
        ValidPeriod = True
    Else
        Error 513
        ValidPeriod = False
    End If
End Function

Public Function ValidTransactionPeriod(ThePeriod%) As Boolean
    If (ThePeriod >= 1) And (ThePeriod <= 99) Then
        ' Actual Period or F6 Period or CTD or CTD Period Offset
        ValidTransactionPeriod = True
    Else
        Error 513
        ValidTransactionPeriod = False
    End If
End Function


' returns True if the passed currency is valid
Public Function ValidCcy(TheCcy%) As Boolean
    If (TheCcy < 0) Or (TheCcy > 90) Then
        Error 514
        ValidCcy = False
    Else
        ValidCcy = True
    End If
End Function


' returns true if the passed customer code is valid
Public Function ValidCustCode(CustCode$, CSType$) As Boolean
    CustCode$ = UCase(Trim(CustCode$))

    If (Len(CustCode) > 0) And (Len(CustCode) <= 6) Then
        ValidCustCode = True
    Else
        ValidCustCode = False
        If (CSType$ = "C") Then
            Error 515
        Else
            Error 526
        End If
    End If
End Function

' returns True if the passed Stock Code is valid
Public Function ValidStockCode(StockCode$) As Boolean
    StockCode$ = UCase(Trim(StockCode$))
    
    ValidStockCode = True
End Function

' returns True if the passed Stock Code is valid
Public Function ValidLocation(LocCode$) As Boolean
    LocCode$ = UCase(Trim(LocCode$))
    
    If (Len(LocCode$) > 0) And (Len(LocCode$) <= 3) Then
        ValidLocation = True
    Else
        ValidLocation = False
        Error 527
    End If
End Function

' returns True if the passed Cost Centre or Department is valid
Public Function ValidCCDep(IsCC%, ByRef CCDep$) As Boolean
    CCDep$ = UCase(Trim(CCDep$))

    If (Len(CCDep$) >= 0) And (Len(CCDep$) <= 3) Then
        ValidCCDep = True
    Else
        If IsCC% = True Then
            Error 519
        Else
            Error 520
        End If
        ValidCCDep = False
    End If
End Function


' Returns True if the passed JC Total Type is valid
Public Function ValidTotType(TType%) As Boolean
    If (TType% = 10) Or (TType% = 20) Or (TType% = 30) Or (TType% = 40) Or (TType% = 50) Or (TType% = 60) Or (TType% = 99) Or (TType% = 160) Or (TType% = 170) Or (TType% = 180) Or (TType% = 190) Then
        ValidTotType = True
    Else
        Error 531
        ValidTotType = False
    End If
End Function


' returns True if the passed Stock Code is valid
Public Function ValidJobCode(JobCode$) As Boolean
    JobCode$ = UCase(Trim(JobCode$))
    
    If (Len(JobCode$) > 0) And (Len(JobCode$) <= 10) Then
        ValidJobCode = True
    Else
        ValidJobCode = False
        Error 521
    End If
End Function


' returns True if the passed date is valid
Public Function ValidDate(TheDate$, ActDate As Date, ErrNo%) As Boolean
On Error GoTo ValidDate_Error

    If IsDate(TheDate) Then
        ValidDate = True
        ActDate = CDate(TheDate$)
    Else
        ValidDate = False
        Error ErrNo%
    End If
    
    GoTo ValidDate_Exit
    
ValidDate_Error:
    Error ErrNo%
    ValidDate = False

ValidDate_Exit:
End Function


' Validates the Posted/Committed parameter used in some JC history functions
Public Function ValidPC(PCStr$) As Boolean
    PCStr$ = UCase(PCStr$)
    
    If (Len(PCStr$) = 1) And ((Left$(PCStr$, 1) = "P") Or (Left$(PCStr$, 1) = "C")) Then
        ' 1 Char long and "P" or "C"
        ValidPC = True
    Else
        Error 533       ' Invalid Posted/Commited Flag
        ValidPC = False
    End If
End Function


' returns a formatted error string
Public Function GetErrorStr() As String
    GetErrorStr = "Error (" + Trim(Str(Err)) + "): " + EntErrorStr(Err)
End Function


' returns a formatted error string for number fields
Public Function GetErrorNumStr() As String
    GetErrorNumStr = "#(" + Trim(Str(Err)) + "): " + EntErrorStr(Err)
End Function


' Checks for the local server, and gets the server from EntFuncs.XLA if necessary
Public Function LocalCheckServer() As Boolean
On Error GoTo LocalCheckServer_Error

    If Not ServerSet Then
        ' Server Not Running - Start server
        If ZSYS9194(719, EntServer) Then
            ServerSet = True
        Else
            ServerSet = False
        End If
    End If

    ' Finish procedure without causing an error
    LocalCheckServer = ServerSet
    GoTo LocalCheckServer_Exit
    
LocalCheckServer_Error:
    Error 500
    LocalCheckServer = False

LocalCheckServer_Exit:
End Function



Attribute VB_Name = "CommonSQL"
Option Explicit
Option Private Module

'Public Enum Hive
'  HKEY_CLASSES_ROOT
'  HKEY_CURRENT_USER
'  HKEY_LOCAL_MACHINE
'  HKEY_USERS
'  HKEY_CURRENT_CONFIG
'End Enum
'
Public CompanyCount As Integer
Public CompanyCode(2000) As String
Public CurrComp As Integer
Public CurrCompCode As String
Public CompNo As Integer
Public CompStr$
Public CCNT As Integer
Public Count As Integer

' Database Connections and Connection Strings
Public CNT(2000) As ADODB.Connection
Dim stADO As String
Dim CompanyConnect(2000) As String
Dim SingleConnect As String

Private Const clOneMask = 16515072          '000000 111111 111111 111111
Private Const clTwoMask = 258048            '111111 000000 111111 111111
Private Const clThreeMask = 4032            '111111 111111 000000 111111
Private Const clFourMask = 63               '111111 111111 111111 000000

Private Const clHighMask = 16711680         '11111111 00000000 00000000
Private Const clMidMask = 65280             '00000000 11111111 00000000
Private Const clLowMask = 255               '00000000 00000000 11111111

Private Const cl2Exp18 = 262144             '2 to the 18th power
Private Const cl2Exp12 = 4096               '2 to the 12th
Private Const cl2Exp6 = 64                  '2 to the 6th
Private Const cl2Exp8 = 256                 '2 to the 8th
Private Const cl2Exp16 = 65536              '2 to the 16th

'Function GetHive(hivetype As Hive) As Variant
'' return enumerated value depending on the hive chosen
'  Select Case hivetype
'    Case 0
'      GetHive = &H80000000  ' HKEY_CLASSES_ROOT
'    Case 1
'      GetHive = &H80000001  ' HKEY_CURRENT_USER
'    Case 2
'      GetHive = &H80000002  ' HKEY_LOCAL_MACHINE
'    Case 3
'      GetHive = &H80000003  ' HKEY_USERS
'    Case 4
'      GetHive = &H80000005  ' HKEY_CURRENT_CONFIG
'  End Select
'
'End Function
'
'Function GetStringValFromRegistry(hivetype As Hive, registryKey As String, _
'    keyValue As String) As String
'
'Dim objReg As Object
'Dim strKeyPath As String
'Dim ValueName As String
'Dim strValue As String
'
'  Set objReg = GetStdRegProv
'
'  strKeyPath = registryKey
'  ValueName = keyValue
'
'  ' put key value into strValue variable
'  objReg.GetStringValue GetHive(hivetype), strKeyPath, ValueName, strValue
'  GetStringValFromRegistry = strValue
'
'End Function
'
'Function GetStdRegProv() As Object
'' http://msdn.microsoft.com/en-us/library/aa394600(VS.85).aspx
'Dim strComputer As String
'
'  strComputer = "."
'
'  Set GetStdRegProv = GetObject("winmgmts:" _
'                              & "{impersonationLevel=impersonate}!\\" _
'                              & strComputer & "\root\default:StdRegProv")
'End Function

Public Function GetRWConnection() As String
Dim XDoc As MSXML2.DOMDocument
Dim xConnect As MSXML2.IXMLDOMNode
Dim xChild As MSXML2.IXMLDOMNode
Dim inbuf As String
Dim con1 As New clsCryptoFilterBox
Dim oToolkit As Enterprise04.Toolkit
Dim registryKey As String
Dim keyName As String
 
    Set oToolkit = CreateObject("Enterprise04.Toolkit")
    
    Set XDoc = New MSXML2.DOMDocument
    XDoc.async = False
    XDoc.validateOnParse = False
    XDoc.Load (oToolkit.Configuration.EnterpriseDirectory + "ExchSQLLogin.xml")
    
    Set xConnect = XDoc.DocumentElement
    Set xChild = xConnect.FirstChild
    
    For Each xConnect In xConnect.ChildNodes
    For Each xChild In xConnect.ChildNodes
        inbuf = xChild.Text
    Next xChild
    Next xConnect
    
    con1.InBuffer = Decode64(inbuf)
    con1.Decrypt
    GetRWConnection = con1.OutBuffer
    
End Function

Public Function Decode64(sString As String) As String

    Dim bOut() As Byte, bIn() As Byte, bTrans(255) As Byte, lPowers6(63) As Long, lPowers12(63) As Long
    Dim lPowers18(63) As Long, lQuad As Long, iPad As Integer, lChar As Long, lPos As Long, sOut As String
    Dim lTemp As Long

    sString = Replace(sString, vbCr, vbNullString)      'Get rid of the vbCrLfs.  These could be in...
    sString = Replace(sString, vbLf, vbNullString)      'either order.

    lTemp = Len(sString) Mod 4                          'Test for valid input.
    If lTemp Then
        Call Err.Raise(vbObjectError, "MyDecode", "Input string is not valid Base64.")
    End If

    If InStrRev(sString, "==") Then                     'InStrRev is faster when you know it's at the end.
        iPad = 2                                        'Note:  These translate to 0, so you can leave them...
    ElseIf InStrRev(sString, "=") Then                  'in the string and just resize the output.
        iPad = 1
    End If

    For lTemp = 0 To 255                                'Fill the translation table.
        Select Case lTemp
            Case 65 To 90
                bTrans(lTemp) = lTemp - 65              'A - Z
            Case 97 To 122
                bTrans(lTemp) = lTemp - 71              'a - z
            Case 48 To 57
                bTrans(lTemp) = lTemp + 4               '1 - 0
            Case 43
                bTrans(lTemp) = 62                      'Chr(43) = "+"
            Case 47
                bTrans(lTemp) = 63                      'Chr(47) = "/"
        End Select
    Next lTemp

    For lTemp = 0 To 63                                 'Fill the 2^6, 2^12, and 2^18 lookup tables.
        lPowers6(lTemp) = lTemp * cl2Exp6
        lPowers12(lTemp) = lTemp * cl2Exp12
        lPowers18(lTemp) = lTemp * cl2Exp18
    Next lTemp

    bIn = StrConv(sString, vbFromUnicode)               'Load the input byte array.
    ReDim bOut((((UBound(bIn) + 1) \ 4) * 3) - 1)       'Prepare the output buffer.

    For lChar = 0 To UBound(bIn) Step 4
        lQuad = lPowers18(bTrans(bIn(lChar))) + lPowers12(bTrans(bIn(lChar + 1))) + _
                lPowers6(bTrans(bIn(lChar + 2))) + bTrans(bIn(lChar + 3))           'Rebuild the bits.
        lTemp = lQuad And clHighMask                    'Mask for the first byte
        bOut(lPos) = lTemp \ cl2Exp16                   'Shift it down
        lTemp = lQuad And clMidMask                     'Mask for the second byte
        bOut(lPos + 1) = lTemp \ cl2Exp8                'Shift it down
        bOut(lPos + 2) = lQuad And clLowMask            'Mask for the third byte
        lPos = lPos + 3
    Next lChar

    sOut = StrConv(bOut, vbUnicode)                     'Convert back to a string.
    If iPad Then sOut = Left$(sOut, Len(sOut) - iPad)   'Chop off any extra bytes.
    Decode64 = sOut

End Function

Public Function OpenDBConnection(CompCode As String)
    
    If SingleConnect = "" Then SingleConnect = GetRWConnection()
    If CNT(CurrComp) Is Nothing Then
        Set CNT(CurrComp) = New ADODB.Connection
        
        stADO = SingleConnect

        With CNT(CurrComp)
            .CursorLocation = adUseClient
            .ConnectionString = stADO
            .Open
        End With
        
    End If
    
End Function
Attribute VB_Name = "GLCOMGetCCRanges"
Option Explicit
Public Message As String

'*******************************************************************************************************
' Name:        EntSQLGLCCCOMActualCCRange
' Description: Gets the General Ledger Actual values for the specified Currency, Year, Period, CCs and GLCode
'*******************************************************************************************************
Public Function EntSQLGLCCCOMActualCCRange(Company$, TheYear%, ThePeriod%, TheCcy%, GLCode As Long, CCCodes As Range) As Variant
Attribute EntSQLGLCCCOMActualCCRange.VB_Description = "This function returns the General Ledger Committed Actual value for the specified Currency, Year, Period, GLCode and CostCentres."
On Error GoTo EntSQLGLCCCOMActualCCRange_Error
    Dim ErrStr$
    Dim DblVal As Double
    Dim Result%
    Dim stADO As String
    Dim RST As ADODB.Recordset
    Dim stSQL As String
    Dim AddVal As Double
    Dim CurrInv As Boolean
    Dim CCRange As String
    Dim CCRowRange(1000) As Double
    Dim CCCodeRange(1000) As String
    Dim CCValueRange() As Variant
    Dim CCRowCount As Double
    Dim NextRow As Double
    
    DoEvents
    
    Result% = 0
    
    DblVal# = 0#
    
    CompStr$ = UCase(Company$)
    
    If ValidCompany(Company) And ValidYear(TheYear) And ValidPeriod(ThePeriod) And ValidCcy(TheCcy%) And ValidGLCode(GLCode) Then
        If LocalCheckServer() Then
            
            'Check User Permissions
            Result = EntServer.CheckUserPermission(Company$, 487)
            
            If Result <> 0 Then
                Error Result
                GoTo EntSQLGLCCCOMActualCCRange_Error
            End If
            
            'Concatenate CC Range into CSV for passing to SQL select statement
            CCRowCount = 1
            
            For Each CCCodes In CCCodes.Rows
                
                If CStr(CCCodes.Value) <> "" Then
                    CCRange = CCRange + CStr(CCCodes.Value) & "','"
                    CCRowRange(CCRowCount) = CCCodes.Row
                    CCCodeRange(CCRowCount) = CStr(CCCodes.Value)
                End If
                
                CCRowCount = CCRowCount + 1
            Next
            
            'Correct Row Count
            CCRowCount = CCRowCount - 1
            
            'Remove extra comma off end of csv list
            CCRange = Left(CCRange, Len(CCRange) - 2)
            
            CCRange = "'" & CCRange
            
            stSQL = "SELECT EXCHQCHKcode1Trans1," + CStr(Trim(CompStr$)) + ".ifn_GetNominalValue(3, " + CStr(TheYear%) + "," + CStr(ThePeriod%) + "," + CStr(TheCcy%) + "," + CStr(GLCode) + ",EXCHQCHKcode1Trans1,'','C',1)" & _
                    "FROM " + CStr(Trim(CompStr$)) + ".EXCHQCHK WHERE (RecPfix = 'C' AND SubType = 67) AND EXCHQCHKcode1Trans1 IN (" & CStr(CCRange) & ")"
            
            OpenDBConnection (CompStr$)
            
            With CNT(CurrComp)
                .CommandTimeout = 0
                Set RST = .Execute(stSQL)
            End With
            
            If RST.RecordCount = 0 Then
                EntSQLGLCCCOMActualCCRange = 0
                GoTo EntSQLGLCCCOMActualCCRange_Exit
            End If
            
            ReDim CCValueRange(1 To CCRowCount, 1 To 1)
            
                For NextRow = 1 To CCRowCount
                    If CStr(CCCodeRange(NextRow)) <> "" Then
                        RST.MoveFirst
                        RST.Find ("EXCHQCHKcode1Trans1 = '" & CStr(CCCodeRange(NextRow))) & "'"
                        
                        If Not RST.EOF Then
                            If RST.Fields.Item(1) = 100000511 Then
                                CCValueRange(NextRow, 1) = 0
                            ElseIf RST.Fields.Item(1) = 100000519 Then
                                CCValueRange(NextRow, 1) = 0
                            ElseIf RST.Fields.Item(1) = 100000520 Then
                                CCValueRange(NextRow, 1) = 0
                            Else
                                CCValueRange(NextRow, 1) = RST.Fields.Item(1)
                            End If
                        Else
                            RST.MoveFirst
                            ' Add to avoid summation errors when text error returned
                            CCValueRange(NextRow, 1) = 0
                        End If
                    Else
                        CCValueRange(NextRow, 1) = ""
                    End If
                    
    
                Next
            
            Set RST = Nothing
            
        End If
    End If
    
EntSQLGLCCCOMActualCCRange_Zero:
    EntSQLGLCCCOMActualCCRange = CCValueRange
    
    GoTo EntSQLGLCCCOMActualCCRange_Exit
        
EntSQLGLCCCOMActualCCRange_Error:
    If ErrStr = "" Then ErrStr = GetErrorNumStr
    EntSQLGLCCCOMActualCCRange = ErrStr

EntSQLGLCCCOMActualCCRange_Exit:

End Function

'*******************************************************************************************************
' Name:        EntSQLGLCCDpCOMActualCCRange
' Description: Gets the General Ledger Actual values for the specified Currency, Year, Period, CCs, Dp and GLCode
'*******************************************************************************************************
Public Function EntSQLGLCCDpCOMActualCCRange(Company$, TheYear%, ThePeriod%, TheCcy%, GLCode As Long, CCCodes As Range, DpCode$) As Variant
Attribute EntSQLGLCCDpCOMActualCCRange.VB_Description = "This function returns the General Ledger Committed Actual value for the specified Currency, Year, Period, GLCode, CostCentres and Department."
On Error GoTo EntSQLGLCCDpCOMActualCCRange_Error
    Dim ErrStr$
    Dim DblVal As Double
    Dim Result%
    Dim stADO As String
    Dim RST As ADODB.Recordset
    Dim stSQL As String
    Dim AddVal As Double
    Dim CurrInv As Boolean
    Dim CCRange As String
    Dim CCRowRange(1000) As Double
    Dim CCCodeRange(1000) As String
    Dim CCValueRange() As Variant
    Dim CCRowCount As Double
    Dim NextRow As Double
    
    DoEvents
    
    Result% = 0
    
    DblVal# = 0#
    
    CompStr$ = UCase(Company$)
    
    If ValidCompany(Company) And ValidYear(TheYear) And ValidPeriod(ThePeriod) And ValidCcy(TheCcy%) And ValidGLCode(CStr(GLCode)) And ValidCCDep(False, DpCode$) Then
        If LocalCheckServer() Then
            
            'Check User Permissions
            Result = EntServer.CheckUserPermission(Company$, 487)
            
            If Result <> 0 Then
                Error Result
                GoTo EntSQLGLCCDpCOMActualCCRange_Error
            End If
            
            'Concatenate CC Range into CSV for passing to SQL select statement
            CCRowCount = 1
            
            For Each CCCodes In CCCodes.Rows
                
                If CStr(CCCodes.Value) <> "" Then
                    CCRange = CCRange + CStr(CCCodes.Value) & "','"
                    CCRowRange(CCRowCount) = CCCodes.Row
                    CCCodeRange(CCRowCount) = CStr(CCCodes.Value)
                End If
                
                CCRowCount = CCRowCount + 1
            Next
            
            'Correct Row Count
            CCRowCount = CCRowCount - 1
            
            'Remove extra comma off end of csv list
            CCRange = Left(CCRange, Len(CCRange) - 2)
            
            CCRange = "'" & CCRange
            
            stSQL = "SELECT EXCHQCHKcode1Trans1," + CStr(Trim(CompStr$)) + ".ifn_GetNominalValue(3, " + CStr(TheYear%) + "," + CStr(ThePeriod%) + "," + CStr(TheCcy%) + "," + CStr(GLCode) + ",EXCHQCHKcode1Trans1,'" + CStr(Trim(DpCode$)) + "','C',1) " & _
                    "FROM " + CStr(Trim(CompStr$)) + ".EXCHQCHK WHERE (RecPfix = 'C' AND SubType = 67) AND EXCHQCHKcode1Trans1 IN (" & CStr(CCRange) & ")"
            
            OpenDBConnection (CompStr$)
            
            With CNT(CurrComp)
                .CommandTimeout = 0
                Set RST = .Execute(stSQL)
            End With
            
            If RST.RecordCount = 0 Then
                EntSQLGLCCDpCOMActualCCRange = 0
                GoTo EntSQLGLCCDpCOMActualCCRange_Exit
            End If
            
            ReDim CCValueRange(1 To CCRowCount, 1 To 1)
            
                For NextRow = 1 To CCRowCount
                    If CStr(CCCodeRange(NextRow)) <> "" Then
                        RST.MoveFirst
                        RST.Find ("EXCHQCHKcode1Trans1 = '" & CStr(CCCodeRange(NextRow))) & "'"
                        
                        If Not RST.EOF Then
                            If RST.Fields.Item(1) = 100000511 Then
                                CCValueRange(NextRow, 1) = 0
                            ElseIf RST.Fields.Item(1) = 100000519 Then
                                CCValueRange(NextRow, 1) = 0
                            ElseIf RST.Fields.Item(1) = 100000520 Then
                                CCValueRange(NextRow, 1) = 0
                            Else
                                CCValueRange(NextRow, 1) = RST.Fields.Item(1)
                            End If
                        Else
                            RST.MoveFirst
                            ' Add to avoid summation errors when text error returned
                            CCValueRange(NextRow, 1) = 0
                        End If
                    Else
                        CCValueRange(NextRow, 1) = ""
                    End If
                    
    
                Next
            
            Set RST = Nothing
            
        End If
    End If
    
EntSQLGLCCDpCOMActualCCRange_Zero:
    EntSQLGLCCDpCOMActualCCRange = CCValueRange
    
    GoTo EntSQLGLCCDpCOMActualCCRange_Exit
        
EntSQLGLCCDpCOMActualCCRange_Error:
    If ErrStr = "" Then ErrStr = GetErrorNumStr
    EntSQLGLCCDpCOMActualCCRange = ErrStr

EntSQLGLCCDpCOMActualCCRange_Exit:

End Function

'**************************************************************************************************************
'**                                              CREDIT                                                      **
'**************************************************************************************************************

'*******************************************************************************************************
' Name:        EntSQLGLCCCOMCreditCCRange
' Description: Gets the General Ledger Credit values for the specified Currency, Year, Period, CC and GLCodes
'*******************************************************************************************************
Public Function EntSQLGLCCCOMCreditCCRange(Company$, TheYear%, ThePeriod%, TheCcy%, GLCode As Long, CCCodes As Range) As Variant
Attribute EntSQLGLCCCOMCreditCCRange.VB_Description = "This function returns the General Ledger Committed Credit value for the specified Currency, Year, Period, GLCode and CostCentres."
On Error GoTo EntSQLGLCCCOMCreditCCRange_Error
    Dim ErrStr$
    Dim DblVal As Double
    Dim Result%
    Dim stADO As String
    Dim RST As ADODB.Recordset
    Dim stSQL As String
    Dim AddVal As Double
    Dim CurrInv As Boolean
    Dim CCRange As String
    Dim CCRowRange(1000) As Double
    Dim CCCodeRange(1000) As String
    Dim CCValueRange() As Variant
    Dim CCRowCount As Double
    Dim NextRow As Double
    
    DoEvents
    
    Result% = 0
    
    DblVal# = 0#
    
    CompStr$ = UCase(Company$)
    
    If ValidCompany(Company) And ValidYear(TheYear) And ValidPeriod(ThePeriod) And ValidCcy(TheCcy%) And ValidGLCode(GLCode) Then
        If LocalCheckServer() Then
            
            'Check User Permissions
            Result = EntServer.CheckUserPermission(Company$, 487)
            
            If Result <> 0 Then
                Error Result
                GoTo EntSQLGLCCCOMCreditCCRange_Error
            End If
            
            'Concatenate CC Range into CSV for passing to SQL select statement
            CCRowCount = 1
            
            For Each CCCodes In CCCodes.Rows
                
                If CStr(CCCodes.Value) <> "" Then
                    CCRange = CCRange + CStr(CCCodes.Value) & "','"
                    CCRowRange(CCRowCount) = CCCodes.Row
                    CCCodeRange(CCRowCount) = CStr(CCCodes.Value)
                End If
                
                CCRowCount = CCRowCount + 1
            Next
            
            'Correct Row Count
            CCRowCount = CCRowCount - 1
            
            'Remove extra comma off end of csv list
            CCRange = Left(CCRange, Len(CCRange) - 2)
            
            CCRange = "'" & CCRange
            
            stSQL = "SELECT EXCHQCHKcode1Trans1," + CStr(Trim(CompStr$)) + ".ifn_GetNominalValue(1, " + CStr(TheYear%) + "," + CStr(ThePeriod%) + "," + CStr(TheCcy%) + "," + CStr(GLCode) + ",EXCHQCHKcode1Trans1,'','C',1)" & _
                    "FROM " + CStr(Trim(CompStr$)) + ".EXCHQCHK WHERE (RecPfix = 'C' AND SubType = 67) AND EXCHQCHKcode1Trans1 IN (" & CStr(CCRange) & ")"
            
            OpenDBConnection (CompStr$)
            
            With CNT(CurrComp)
                .CommandTimeout = 0
                Set RST = .Execute(stSQL)
            End With
            
            If RST.RecordCount = 0 Then
                EntSQLGLCCCOMCreditCCRange = 0
                GoTo EntSQLGLCCCOMCreditCCRange_Exit
            End If
            
            ReDim CCValueRange(1 To CCRowCount, 1 To 1)
            
                For NextRow = 1 To CCRowCount
                    If CStr(CCCodeRange(NextRow)) <> "" Then
                        RST.MoveFirst
                        RST.Find ("EXCHQCHKcode1Trans1 = '" & CStr(CCCodeRange(NextRow))) & "'"
                        
                        If Not RST.EOF Then
                            If RST.Fields.Item(1) = 100000511 Then
                                CCValueRange(NextRow, 1) = 0
                            ElseIf RST.Fields.Item(1) = 100000519 Then
                                CCValueRange(NextRow, 1) = 0
                            ElseIf RST.Fields.Item(1) = 100000520 Then
                                CCValueRange(NextRow, 1) = 0
                            Else
                                CCValueRange(NextRow, 1) = RST.Fields.Item(1)
                            End If
                        Else
                            RST.MoveFirst
                            ' Add to avoid summation errors when text error returned
                            CCValueRange(NextRow, 1) = 0
                        End If
                    Else
                        CCValueRange(NextRow, 1) = ""
                    End If
                    
    
                Next
            
            Set RST = Nothing
            
        End If
    End If
    
EntSQLGLCCCOMCreditCCRange_Zero:
    EntSQLGLCCCOMCreditCCRange = CCValueRange
    
    GoTo EntSQLGLCCCOMCreditCCRange_Exit
        
EntSQLGLCCCOMCreditCCRange_Error:
    If ErrStr = "" Then ErrStr = GetErrorNumStr
    EntSQLGLCCCOMCreditCCRange = ErrStr

EntSQLGLCCCOMCreditCCRange_Exit:

End Function

'*******************************************************************************************************
' Name:        EntSQLGLCCDpCOMCreditCCRange
' Description: Gets the General Ledger Credit values for the specified Currency, Year, Period, CC, Dp and GLCodes
'*******************************************************************************************************
Public Function EntSQLGLCCDpCOMCreditCCRange(Company$, TheYear%, ThePeriod%, TheCcy%, GLCode As Long, CCCodes As Range, DpCode$) As Variant
Attribute EntSQLGLCCDpCOMCreditCCRange.VB_Description = "This function returns the General Ledger Committed Credit value for the specified Currency, Year, Period, GLCode, CostCentres and Department."
On Error GoTo EntSQLGLCCDpCOMCreditCCRange_Error
    Dim ErrStr$
    Dim DblVal As Double
    Dim Result%
    Dim stADO As String
    Dim RST As ADODB.Recordset
    Dim stSQL As String
    Dim AddVal As Double
    Dim CurrInv As Boolean
    Dim CCRange As String
    Dim CCRowRange(1000) As Double
    Dim CCCodeRange(1000) As String
    Dim CCValueRange() As Variant
    Dim CCRowCount As Double
    Dim NextRow As Double
    
    DoEvents
    
    Result% = 0
    
    DblVal# = 0#
    
    CompStr$ = UCase(Company$)
    
    If ValidCompany(Company) And ValidYear(TheYear) And ValidPeriod(ThePeriod) And ValidCcy(TheCcy%) And ValidGLCode(CStr(GLCode)) And ValidCCDep(False, DpCode$) Then
        If LocalCheckServer() Then
            
            'Check User Permissions
            Result = EntServer.CheckUserPermission(Company$, 487)
            
            If Result <> 0 Then
                Error Result
                GoTo EntSQLGLCCDpCOMCreditCCRange_Error
            End If
            
            'Concatenate CC Range into CSV for passing to SQL select statement
            CCRowCount = 1
            
            For Each CCCodes In CCCodes.Rows
                
                If CStr(CCCodes.Value) <> "" Then
                    CCRange = CCRange + CStr(CCCodes.Value) & "','"
                    CCRowRange(CCRowCount) = CCCodes.Row
                    CCCodeRange(CCRowCount) = CStr(CCCodes.Value)
                End If
                
                CCRowCount = CCRowCount + 1
            Next
            
            'Correct Row Count
            CCRowCount = CCRowCount - 1
            
            'Remove extra comma off end of csv list
            CCRange = Left(CCRange, Len(CCRange) - 2)
            
            CCRange = "'" & CCRange
            
            stSQL = "SELECT EXCHQCHKcode1Trans1," + CStr(Trim(CompStr$)) + ".ifn_GetNominalValue(1, " + CStr(TheYear%) + "," + CStr(ThePeriod%) + "," + CStr(TheCcy%) + "," + CStr(GLCode) + ",EXCHQCHKcode1Trans1,'" + CStr(Trim(DpCode$)) + "','C',1) " & _
                    "FROM " + CStr(Trim(CompStr$)) + ".EXCHQCHK WHERE (RecPfix = 'C' AND SubType = 67) AND EXCHQCHKcode1Trans1 IN (" & CStr(CCRange) & ")"
            
            OpenDBConnection (CompStr$)
            
            With CNT(CurrComp)
                .CommandTimeout = 0
                Set RST = .Execute(stSQL)
            End With
            
            If RST.RecordCount = 0 Then
                EntSQLGLCCDpCOMCreditCCRange = 0
                GoTo EntSQLGLCCDpCOMCreditCCRange_Exit
            End If
            
            ReDim CCValueRange(1 To CCRowCount, 1 To 1)
            
                For NextRow = 1 To CCRowCount
                    If CStr(CCCodeRange(NextRow)) <> "" Then
                        RST.MoveFirst
                        RST.Find ("EXCHQCHKcode1Trans1 = '" & CStr(CCCodeRange(NextRow))) & "'"
                        
                        If Not RST.EOF Then
                            If RST.Fields.Item(1) = 100000511 Then
                                CCValueRange(NextRow, 1) = 0
                            ElseIf RST.Fields.Item(1) = 100000519 Then
                                CCValueRange(NextRow, 1) = 0
                            ElseIf RST.Fields.Item(1) = 100000520 Then
                                CCValueRange(NextRow, 1) = 0
                            Else
                                CCValueRange(NextRow, 1) = RST.Fields.Item(1)
                            End If
                        Else
                            RST.MoveFirst
                            ' Add to avoid summation errors when text error returned
                            CCValueRange(NextRow, 1) = 0
                        End If
                    Else
                        CCValueRange(NextRow, 1) = ""
                    End If
                    
    
                Next
            
            Set RST = Nothing
            
        End If
    End If
    
EntSQLGLCCDpCOMCreditCCRange_Zero:
    EntSQLGLCCDpCOMCreditCCRange = CCValueRange
    
    GoTo EntSQLGLCCDpCOMCreditCCRange_Exit
        
EntSQLGLCCDpCOMCreditCCRange_Error:
    If ErrStr = "" Then ErrStr = GetErrorNumStr
    EntSQLGLCCDpCOMCreditCCRange = ErrStr

EntSQLGLCCDpCOMCreditCCRange_Exit:

End Function


'**************************************************************************************************************
'**                                              DEBIT                                                     **
'**************************************************************************************************************

'*******************************************************************************************************
' Name:        EntSQLGLCCCOMDebitCCRange
' Description: Gets the General Ledger Debit values for the specified Currency, Year, Period, CC and GLCodes
'*******************************************************************************************************
Public Function EntSQLGLCCCOMDebitCCRange(Company$, TheYear%, ThePeriod%, TheCcy%, GLCode As Long, CCCodes As Range) As Variant
Attribute EntSQLGLCCCOMDebitCCRange.VB_Description = "This function returns the General Ledger Committed Debit value for the specified Currency, Year, Period, GLCode and CostCentres."
On Error GoTo EntSQLGLCCCOMDebitCCRange_Error
    Dim ErrStr$
    Dim DblVal As Double
    Dim Result%
    Dim stADO As String
    Dim RST As ADODB.Recordset
    Dim stSQL As String
    Dim AddVal As Double
    Dim CurrInv As Boolean
    Dim CCRange As String
    Dim CCRowRange(1000) As Double
    Dim CCCodeRange(1000) As String
    Dim CCValueRange() As Variant
    Dim CCRowCount As Double
    Dim NextRow As Double
    
    DoEvents
    
    Result% = 0
    
    DblVal# = 0#
    
    CompStr$ = UCase(Company$)
    
    If ValidCompany(Company) And ValidYear(TheYear) And ValidPeriod(ThePeriod) And ValidCcy(TheCcy%) And ValidGLCode(GLCode) Then
        If LocalCheckServer() Then
            
            'Check User Permissions
            Result = EntServer.CheckUserPermission(Company$, 487)
            
            If Result <> 0 Then
                Error Result
                GoTo EntSQLGLCCCOMDebitCCRange_Error
            End If
            
            'Concatenate CC Range into CSV for passing to SQL select statement
            CCRowCount = 1
            
            For Each CCCodes In CCCodes.Rows
                
                If CStr(CCCodes.Value) <> "" Then
                    CCRange = CCRange + CStr(CCCodes.Value) & "','"
                    CCRowRange(CCRowCount) = CCCodes.Row
                    CCCodeRange(CCRowCount) = CStr(CCCodes.Value)
                End If
                
                CCRowCount = CCRowCount + 1
            Next
            
            'Correct Row Count
            CCRowCount = CCRowCount - 1
            
            'Remove extra comma off end of csv list
            CCRange = Left(CCRange, Len(CCRange) - 2)
            
            CCRange = "'" & CCRange
            
            stSQL = "SELECT EXCHQCHKcode1Trans1," + CStr(Trim(CompStr$)) + ".ifn_GetNominalValue(2, " + CStr(TheYear%) + "," + CStr(ThePeriod%) + "," + CStr(TheCcy%) + "," + CStr(GLCode) + ",EXCHQCHKcode1Trans1,'','C',1)" & _
                    "FROM " + CStr(Trim(CompStr$)) + ".EXCHQCHK WHERE (RecPfix = 'C' AND SubType = 67) AND EXCHQCHKcode1Trans1 IN (" & CStr(CCRange) & ")"
            
            OpenDBConnection (CompStr$)
            
            With CNT(CurrComp)
                .CommandTimeout = 0
                Set RST = .Execute(stSQL)
            End With
            
            If RST.RecordCount = 0 Then
                EntSQLGLCCCOMDebitCCRange = 0
                GoTo EntSQLGLCCCOMDebitCCRange_Exit
            End If
            
            ReDim CCValueRange(1 To CCRowCount, 1 To 1)
            
                For NextRow = 1 To CCRowCount
                    If CStr(CCCodeRange(NextRow)) <> "" Then
                        RST.MoveFirst
                        RST.Find ("EXCHQCHKcode1Trans1 = '" & CStr(CCCodeRange(NextRow))) & "'"
                        
                        If Not RST.EOF Then
                            If RST.Fields.Item(1) = 100000511 Then
                                CCValueRange(NextRow, 1) = 0
                            ElseIf RST.Fields.Item(1) = 100000519 Then
                                CCValueRange(NextRow, 1) = 0
                            ElseIf RST.Fields.Item(1) = 100000520 Then
                                CCValueRange(NextRow, 1) = 0
                            Else
                                CCValueRange(NextRow, 1) = RST.Fields.Item(1)
                            End If
                        Else
                            RST.MoveFirst
                            ' Add to avoid summation errors when text error returned
                            CCValueRange(NextRow, 1) = 0
                        End If
                    Else
                        CCValueRange(NextRow, 1) = ""
                    End If
                    
    
                Next
            
            Set RST = Nothing
            
        End If
    End If
    
EntSQLGLCCCOMDebitCCRange_Zero:
    EntSQLGLCCCOMDebitCCRange = CCValueRange
    
    GoTo EntSQLGLCCCOMDebitCCRange_Exit
        
EntSQLGLCCCOMDebitCCRange_Error:
    If ErrStr = "" Then ErrStr = GetErrorNumStr
    EntSQLGLCCCOMDebitCCRange = ErrStr

EntSQLGLCCCOMDebitCCRange_Exit:

End Function

'*******************************************************************************************************
' Name:        EntSQLGLCCDpCOMDebitCCRange
' Description: Gets the General Ledger Credit values for the specified Currency, Year, Period, CC, Dp and GLCodes
'*******************************************************************************************************
Public Function EntSQLGLCCDpCOMDebitCCRange(Company$, TheYear%, ThePeriod%, TheCcy%, GLCode As Long, CCCodes As Range, DpCode$) As Variant
Attribute EntSQLGLCCDpCOMDebitCCRange.VB_Description = "This function returns the General Ledger Committed Debit value for the specified Currency, Year, Period, GLCode CostCentres and Department."
On Error GoTo EntSQLGLCCDpCOMDebitCCRange_Error
    Dim ErrStr$
    Dim DblVal As Double
    Dim Result%
    Dim stADO As String
    Dim RST As ADODB.Recordset
    Dim stSQL As String
    Dim AddVal As Double
    Dim CurrInv As Boolean
    Dim CCRange As String
    Dim CCRowRange(1000) As Double
    Dim CCCodeRange(1000) As String
    Dim CCValueRange() As Variant
    Dim CCRowCount As Double
    Dim NextRow As Double
    
    DoEvents
    
    Result% = 0
    
    DblVal# = 0#
    
    CompStr$ = UCase(Company$)
    
    If ValidCompany(Company) And ValidYear(TheYear) And ValidPeriod(ThePeriod) And ValidCcy(TheCcy%) And ValidGLCode(CStr(GLCode)) And ValidCCDep(False, DpCode$) Then
         If LocalCheckServer() Then
            
            'Check User Permissions
            Result = EntServer.CheckUserPermission(Company$, 487)
            
            If Result <> 0 Then
                Error Result
                GoTo EntSQLGLCCDpCOMDebitCCRange_Error
            End If
            
            'Concatenate CC Range into CSV for passing to SQL select statement
            CCRowCount = 1
            
            For Each CCCodes In CCCodes.Rows
                
                If CStr(CCCodes.Value) <> "" Then
                    CCRange = CCRange + CStr(CCCodes.Value) & "','"
                    CCRowRange(CCRowCount) = CCCodes.Row
                    CCCodeRange(CCRowCount) = CStr(CCCodes.Value)
                End If
                
                CCRowCount = CCRowCount + 1
            Next
            
            'Correct Row Count
            CCRowCount = CCRowCount - 1
            
            'Remove extra comma off end of csv list
            CCRange = Left(CCRange, Len(CCRange) - 2)
            
            CCRange = "'" & CCRange
            
            stSQL = "SELECT EXCHQCHKcode1Trans1," + CStr(Trim(CompStr$)) + ".ifn_GetNominalValue(2, " + CStr(TheYear%) + "," + CStr(ThePeriod%) + "," + CStr(TheCcy%) + "," + CStr(GLCode) + ",EXCHQCHKcode1Trans1,'" + CStr(Trim(DpCode$)) + "','C',1) " & _
                    "FROM " + CStr(Trim(CompStr$)) + ".EXCHQCHK WHERE (RecPfix = 'C' AND SubType = 67) AND EXCHQCHKcode1Trans1 IN (" & CStr(CCRange) & ")"
            
            OpenDBConnection (CompStr$)
            
            With CNT(CurrComp)
                .CommandTimeout = 0
                Set RST = .Execute(stSQL)
            End With
            
            If RST.RecordCount = 0 Then
                EntSQLGLCCDpCOMDebitCCRange = 0
                GoTo EntSQLGLCCDpCOMDebitCCRange_Exit
            End If
            
            ReDim CCValueRange(1 To CCRowCount, 1 To 1)
            
                For NextRow = 1 To CCRowCount
                    If CStr(CCCodeRange(NextRow)) <> "" Then
                        RST.MoveFirst
                        RST.Find ("EXCHQCHKcode1Trans1 = '" & CStr(CCCodeRange(NextRow))) & "'"
                        
                        If Not RST.EOF Then
                            If RST.Fields.Item(1) = 100000511 Then
                                CCValueRange(NextRow, 1) = 0
                            ElseIf RST.Fields.Item(1) = 100000519 Then
                                CCValueRange(NextRow, 1) = 0
                            ElseIf RST.Fields.Item(1) = 100000520 Then
                                CCValueRange(NextRow, 1) = 0
                            Else
                                CCValueRange(NextRow, 1) = RST.Fields.Item(1)
                            End If
                        Else
                            RST.MoveFirst
                            ' Add to avoid summation errors when text error returned
                            CCValueRange(NextRow, 1) = 0
                        End If
                    Else
                        CCValueRange(NextRow, 1) = ""
                    End If
                    
    
                Next
            
            Set RST = Nothing
            
        End If
    End If
    
EntSQLGLCCDpCOMDebitCCRange_Zero:
    EntSQLGLCCDpCOMDebitCCRange = CCValueRange
    
    GoTo EntSQLGLCCDpCOMDebitCCRange_Exit
        
EntSQLGLCCDpCOMDebitCCRange_Error:
    If ErrStr = "" Then ErrStr = GetErrorNumStr
    EntSQLGLCCDpCOMDebitCCRange = ErrStr

EntSQLGLCCDpCOMDebitCCRange_Exit:

End Function
Attribute VB_Name = "GLCOMGetDpRanges"
Option Explicit
Public Message As String

'*******************************************************************************************************
' Name:        EntSQLGLDpCOMActualDpRange
' Description: Gets the General Ledger Actual values for the specified Currency, Year, Period, Depts and GLCode
'*******************************************************************************************************
Public Function EntSQLGLDpCOMActualDpRange(Company$, TheYear%, ThePeriod%, TheCcy%, GLCode As Long, DpCodes As Range) As Variant
Attribute EntSQLGLDpCOMActualDpRange.VB_Description = "This function returns the General Ledger Committed Actual value for the specified Currency, Year, Period, GLCode and Departments."
On Error GoTo EntSQLGLDpCOMActualDpRange_Error
    Dim ErrStr$
    Dim DblVal As Double
    Dim Result%
    Dim stADO As String
    Dim RST As ADODB.Recordset
    Dim stSQL As String
    Dim AddVal As Double
    Dim CurrInv As Boolean
    Dim DpRange As String
    Dim DpRowRange(1000) As Double
    Dim DpCodeRange(1000) As String
    Dim DpValueRange() As Variant
    Dim DpRowCount As Double
    Dim NextRow As Double
    
    DoEvents
    
    Result% = 0
    
    DblVal# = 0#
    
    CompStr$ = UCase(Company$)
    
    If ValidCompany(Company) And ValidYear(TheYear) And ValidPeriod(ThePeriod) And ValidCcy(TheCcy%) And ValidGLCode(GLCode) Then
        If LocalCheckServer() Then
            
            'Check User Permissions
            Result = EntServer.CheckUserPermission(Company$, 487)
            
            If Result <> 0 Then
                Error Result
                GoTo EntSQLGLDpCOMActualDpRange_Error
            End If
            
            'Concatenate Dp Range into CSV for passing to SQL select statement
            DpRowCount = 1
            
            For Each DpCodes In DpCodes.Rows
                
                If CStr(DpCodes.Value) <> "" Then
                    DpRange = DpRange + CStr(DpCodes.Value) & "','"
                    DpRowRange(DpRowCount) = DpCodes.Row
                    DpCodeRange(DpRowCount) = CStr(DpCodes.Value)
                End If
                
                DpRowCount = DpRowCount + 1
            Next
            
            'Correct Row Count
            DpRowCount = DpRowCount - 1
            
            'Remove extra comma off end of csv list
            DpRange = Left(DpRange, Len(DpRange) - 2)
            
            DpRange = "'" & DpRange
            
            stSQL = "SELECT EXCHQCHKcode1Trans1," + CStr(Trim(CompStr$)) + ".ifn_GetNominalValue(3, " + CStr(TheYear%) + "," + CStr(ThePeriod%) + "," + CStr(TheCcy%) + "," + CStr(GLCode) + ",'',EXCHQCHKcode1Trans1,'D',1)" & _
                    "FROM " + CStr(Trim(CompStr$)) + ".EXCHQCHK WHERE (RecPfix = 'C' AND SubType = 68) AND EXCHQCHKcode1Trans1 IN (" & CStr(DpRange) & ")"
            
            OpenDBConnection (CompStr$)
            
            With CNT(CurrComp)
                .CommandTimeout = 0
                Set RST = .Execute(stSQL)
            End With
            
            If RST.RecordCount = 0 Then
                EntSQLGLDpCOMActualDpRange = 0
                GoTo EntSQLGLDpCOMActualDpRange_Exit
            End If
            
            ReDim DpValueRange(1 To DpRowCount, 1 To 1)
            
                For NextRow = 1 To DpRowCount
                    If CStr(DpCodeRange(NextRow)) <> "" Then
                        RST.MoveFirst
                        RST.Find ("EXCHQCHKcode1Trans1 = '" & CStr(DpCodeRange(NextRow))) & "'"
                        
                        If Not RST.EOF Then
                            If RST.Fields.Item(1) = 100000511 Then
                                DpValueRange(NextRow, 1) = 0
                            ElseIf RST.Fields.Item(1) = 100000519 Then
                                DpValueRange(NextRow, 1) = 0
                            ElseIf RST.Fields.Item(1) = 100000520 Then
                                DpValueRange(NextRow, 1) = 0
                            Else
                                DpValueRange(NextRow, 1) = RST.Fields.Item(1)
                            End If
                        Else
                            RST.MoveFirst
                            ' Add to avoid summation errors when text error returned
                            DpValueRange(NextRow, 1) = 0
                        End If
                    Else
                        DpValueRange(NextRow, 1) = ""
                    End If
                    
    
                Next
            
            Set RST = Nothing
            
        End If
    End If
    
EntSQLGLDpCOMActualDpRange_Zero:
    EntSQLGLDpCOMActualDpRange = DpValueRange
    
    GoTo EntSQLGLDpCOMActualDpRange_Exit
        
EntSQLGLDpCOMActualDpRange_Error:
    If ErrStr = "" Then ErrStr = GetErrorNumStr
    EntSQLGLDpCOMActualDpRange = ErrStr

EntSQLGLDpCOMActualDpRange_Exit:

End Function

'*******************************************************************************************************
' Name:        EntSQLGLCCDpCOMActualDpRange
' Description: Gets the General Ledger Actual values for the specified Currency, Year, Period, CC, Dps and GLCode
'*******************************************************************************************************
Public Function EntSQLGLCCDpCOMActualDpRange(Company$, TheYear%, ThePeriod%, TheCcy%, GLCode As Long, CCCode$, DpCodes As Range) As Variant
Attribute EntSQLGLCCDpCOMActualDpRange.VB_Description = "This function returns the General Ledger Committed Actual value for the specified Currency, Year, Period, GLCode, CostCentre and Departments."
On Error GoTo EntSQLGLCCDpCOMActualDpRange_Error
    Dim ErrStr$
    Dim DblVal As Double
    Dim Result%
    Dim stADO As String
    Dim RST As ADODB.Recordset
    Dim stSQL As String
    Dim AddVal As Double
    Dim CurrInv As Boolean
    Dim DpRange As String
    Dim DpRowRange(1000) As Double
    Dim DpCodeRange(1000) As String
    Dim DpValueRange() As Variant
    Dim DpRowCount As Double
    Dim NextRow As Double
    
    DoEvents
    
    Result% = 0
    
    DblVal# = 0#
    
    CompStr$ = UCase(Company$)
    
    If ValidCompany(Company) And ValidYear(TheYear) And ValidPeriod(ThePeriod) And ValidCcy(TheCcy%) And ValidGLCode(CStr(GLCode)) And ValidCCDep(True, CCCode$) Then
        If LocalCheckServer() Then
            
            'Check User Permissions
            Result = EntServer.CheckUserPermission(Company$, 487)
            
            If Result <> 0 Then
                Error Result
                GoTo EntSQLGLCCDpCOMActualDpRange_Error
            End If
            
            'Concatenate Dp Range into CSV for passing to SQL select statement
            DpRowCount = 1
            
            For Each DpCodes In DpCodes.Rows
                
                If CStr(DpCodes.Value) <> "" Then
                    DpRange = DpRange + CStr(DpCodes.Value) & "','"
                    DpRowRange(DpRowCount) = DpCodes.Row
                    DpCodeRange(DpRowCount) = CStr(DpCodes.Value)
                End If
                
                DpRowCount = DpRowCount + 1
            Next
            
            'Correct Row Count
            DpRowCount = DpRowCount - 1
            
            'Remove extra comma off end of csv list
            DpRange = Left(DpRange, Len(DpRange) - 2)
            
            DpRange = "'" & DpRange
            
            stSQL = "SELECT EXCHQCHKcode1Trans1," + CStr(Trim(CompStr$)) + ".ifn_GetNominalValue(3, " + CStr(TheYear%) + "," + CStr(ThePeriod%) + "," + CStr(TheCcy%) + "," + CStr(GLCode) + ",'" + CStr(Trim(CCCode$)) + "',EXCHQCHKcode1Trans1" + ",'C',1) " & _
                    "FROM " + CStr(Trim(CompStr$)) + ".EXCHQCHK WHERE (RecPfix = 'C' AND SubType = 68) AND EXCHQCHKcode1Trans1 IN (" & CStr(DpRange) & ")"
            
            OpenDBConnection (CompStr$)
            
            With CNT(CurrComp)
                .CommandTimeout = 0
                Set RST = .Execute(stSQL)
            End With
            
            If RST.RecordCount = 0 Then
                EntSQLGLCCDpCOMActualDpRange = 0
                GoTo EntSQLGLCCDpCOMActualDpRange_Exit
            End If
            
            ReDim DpValueRange(1 To DpRowCount, 1 To 1)
            
                For NextRow = 1 To DpRowCount
                    If CStr(DpCodeRange(NextRow)) <> "" Then
                        RST.MoveFirst
                        RST.Find ("EXCHQCHKcode1Trans1 = '" & CStr(DpCodeRange(NextRow))) & "'"
                        
                        If Not RST.EOF Then
                            If RST.Fields.Item(1) = 100000511 Then
                                DpValueRange(NextRow, 1) = 0
                            ElseIf RST.Fields.Item(1) = 100000519 Then
                                DpValueRange(NextRow, 1) = 0
                            ElseIf RST.Fields.Item(1) = 100000520 Then
                                DpValueRange(NextRow, 1) = 0
                            Else
                                DpValueRange(NextRow, 1) = RST.Fields.Item(1)
                            End If
                        Else
                            RST.MoveFirst
                            ' Add to avoid summation errors when text error returned
                            DpValueRange(NextRow, 1) = 0
                        End If
                    Else
                        DpValueRange(NextRow, 1) = ""
                    End If
                    
    
                Next
            
            Set RST = Nothing
            
        End If
    End If
    
EntSQLGLCCDpCOMActualDpRange_Zero:
    EntSQLGLCCDpCOMActualDpRange = DpValueRange
    
    GoTo EntSQLGLCCDpCOMActualDpRange_Exit
        
EntSQLGLCCDpCOMActualDpRange_Error:
    If ErrStr = "" Then ErrStr = GetErrorNumStr
    EntSQLGLCCDpCOMActualDpRange = ErrStr

EntSQLGLCCDpCOMActualDpRange_Exit:

End Function

'**************************************************************************************************************
'**                                              CREDIT                                                      **
'**************************************************************************************************************

'*******************************************************************************************************
' Name:        EntSQLGLDpCOMCreditDpRange
' Description: Gets the General Ledger Credit values for the specified Currency, Year, Period, Depts and GLCode
'*******************************************************************************************************
Public Function EntSQLGLDpCOMCreditDpRange(Company$, TheYear%, ThePeriod%, TheCcy%, GLCode As Long, DpCodes As Range) As Variant
Attribute EntSQLGLDpCOMCreditDpRange.VB_Description = "This function returns the General Ledger Committed Credit value for the specified Currency, Year, Period, GLCode and Departments."
On Error GoTo EntSQLGLDpCOMCreditDpRange_Error
    Dim ErrStr$
    Dim DblVal As Double
    Dim Result%
    Dim stADO As String
    Dim RST As ADODB.Recordset
    Dim stSQL As String
    Dim AddVal As Double
    Dim CurrInv As Boolean
    Dim DpRange As String
    Dim DpRowRange(1000) As Double
    Dim DpCodeRange(1000) As String
    Dim DpValueRange() As Variant
    Dim DpRowCount As Double
    Dim NextRow As Double
    
    DoEvents
    
    Result% = 0
    
    DblVal# = 0#
    
    CompStr$ = UCase(Company$)
    
    If ValidCompany(Company) And ValidYear(TheYear) And ValidPeriod(ThePeriod) And ValidCcy(TheCcy%) And ValidGLCode(GLCode) Then
        If LocalCheckServer() Then
            
            'Check User Permissions
            Result = EntServer.CheckUserPermission(Company$, 487)
            
            If Result <> 0 Then
                Error Result
                GoTo EntSQLGLDpCOMCreditDpRange_Error
            End If
            
            'Concatenate Dp Range into CSV for passing to SQL select statement
            DpRowCount = 1
            
            For Each DpCodes In DpCodes.Rows
                
                If CStr(DpCodes.Value) <> "" Then
                    DpRange = DpRange + CStr(DpCodes.Value) & "','"
                    DpRowRange(DpRowCount) = DpCodes.Row
                    DpCodeRange(DpRowCount) = CStr(DpCodes.Value)
                End If
                
                DpRowCount = DpRowCount + 1
            Next
            
            'Correct Row Count
            DpRowCount = DpRowCount - 1
            
            'Remove extra comma off end of csv list
            DpRange = Left(DpRange, Len(DpRange) - 2)
            
            DpRange = "'" & DpRange
            
            stSQL = "SELECT EXCHQCHKcode1Trans1," + CStr(Trim(CompStr$)) + ".ifn_GetNominalValue(1, " + CStr(TheYear%) + "," + CStr(ThePeriod%) + "," + CStr(TheCcy%) + "," + CStr(GLCode) + ",'',EXCHQCHKcode1Trans1,'D',1)" & _
                    "FROM " + CStr(Trim(CompStr$)) + ".EXCHQCHK WHERE (RecPfix = 'C' AND SubType = 68) AND EXCHQCHKcode1Trans1 IN (" & CStr(DpRange) & ")"
            
            OpenDBConnection (CompStr$)
            
            With CNT(CurrComp)
                .CommandTimeout = 0
                Set RST = .Execute(stSQL)
            End With
            
            If RST.RecordCount = 0 Then
                EntSQLGLDpCOMCreditDpRange = 0
                GoTo EntSQLGLDpCOMCreditDpRange_Exit
            End If
            
            ReDim DpValueRange(1 To DpRowCount, 1 To 1)
            
                For NextRow = 1 To DpRowCount
                    If CStr(DpCodeRange(NextRow)) <> "" Then
                        RST.MoveFirst
                        RST.Find ("EXCHQCHKcode1Trans1 = '" & CStr(DpCodeRange(NextRow))) & "'"
                        
                        If Not RST.EOF Then
                            If RST.Fields.Item(1) = 100000511 Then
                                DpValueRange(NextRow, 1) = 0
                            ElseIf RST.Fields.Item(1) = 100000519 Then
                                DpValueRange(NextRow, 1) = 0
                            ElseIf RST.Fields.Item(1) = 100000520 Then
                                DpValueRange(NextRow, 1) = 0
                            Else
                                DpValueRange(NextRow, 1) = RST.Fields.Item(1)
                            End If
                        Else
                            RST.MoveFirst
                            ' Add to avoid summation errors when text error returned
                            DpValueRange(NextRow, 1) = 0
                        End If
                    Else
                        DpValueRange(NextRow, 1) = ""
                    End If
                    
    
                Next
            
            Set RST = Nothing
            
        End If
    End If
    
EntSQLGLDpCOMCreditDpRange_Zero:
    EntSQLGLDpCOMCreditDpRange = DpValueRange
    
    GoTo EntSQLGLDpCOMCreditDpRange_Exit
        
EntSQLGLDpCOMCreditDpRange_Error:
    If ErrStr = "" Then ErrStr = GetErrorNumStr
    EntSQLGLDpCOMCreditDpRange = ErrStr

EntSQLGLDpCOMCreditDpRange_Exit:

End Function

'*******************************************************************************************************
' Name:        EntSQLGLCCDpCOMCreditDpRange
' Description: Gets the General Ledger Credit values for the specified Currency, Year, Period, CC, Dps and GLCode
'*******************************************************************************************************
Public Function EntSQLGLCCDpCOMCreditDpRange(Company$, TheYear%, ThePeriod%, TheCcy%, GLCode As Long, CCCode$, DpCodes As Range) As Variant
Attribute EntSQLGLCCDpCOMCreditDpRange.VB_Description = "This function returns the General Ledger Committed Credit value for the specified Currency, Year, Period, GLCode, CostCentre and Departments."
On Error GoTo EntSQLGLCCDpCOMCreditDpRange_Error
    Dim ErrStr$
    Dim DblVal As Double
    Dim Result%
    Dim stADO As String
    Dim RST As ADODB.Recordset
    Dim stSQL As String
    Dim AddVal As Double
    Dim CurrInv As Boolean
    Dim DpRange As String
    Dim DpRowRange(1000) As Double
    Dim DpCodeRange(1000) As String
    Dim DpValueRange() As Variant
    Dim DpRowCount As Double
    Dim NextRow As Double
    
    DoEvents
    
    Result% = 0
    
    DblVal# = 0#
    
    CompStr$ = UCase(Company$)
    
    If ValidCompany(Company) And ValidYear(TheYear) And ValidPeriod(ThePeriod) And ValidCcy(TheCcy%) And ValidGLCode(CStr(GLCode)) And ValidCCDep(True, CCCode$) Then
        If LocalCheckServer() Then
            
            'Check User Permissions
            Result = EntServer.CheckUserPermission(Company$, 487)
            
            If Result <> 0 Then
                Error Result
                GoTo EntSQLGLCCDpCOMCreditDpRange_Error
            End If
            
            'Concatenate Dp Range into CSV for passing to SQL select statement
            DpRowCount = 1
            
            For Each DpCodes In DpCodes.Rows
                
                If CStr(DpCodes.Value) <> "" Then
                    DpRange = DpRange + CStr(DpCodes.Value) & "','"
                    DpRowRange(DpRowCount) = DpCodes.Row
                    DpCodeRange(DpRowCount) = CStr(DpCodes.Value)
                End If
                
                DpRowCount = DpRowCount + 1
            Next
            
            'Correct Row Count
            DpRowCount = DpRowCount - 1
            
            'Remove extra comma off end of csv list
            DpRange = Left(DpRange, Len(DpRange) - 2)
            
            DpRange = "'" & DpRange
            
            stSQL = "SELECT EXCHQCHKcode1Trans1," + CStr(Trim(CompStr$)) + ".ifn_GetNominalValue(1, " + CStr(TheYear%) + "," + CStr(ThePeriod%) + "," + CStr(TheCcy%) + "," + CStr(GLCode) + ",'" + CStr(Trim(CCCode$)) + "',EXCHQCHKcode1Trans1" + ",'C',1) " & _
                    "FROM " + CStr(Trim(CompStr$)) + ".EXCHQCHK WHERE (RecPfix = 'C' AND SubType = 68) AND EXCHQCHKcode1Trans1 IN (" & CStr(DpRange) & ")"
            
            OpenDBConnection (CompStr$)
            
            With CNT(CurrComp)
                .CommandTimeout = 0
                Set RST = .Execute(stSQL)
            End With
            
            If RST.RecordCount = 0 Then
                EntSQLGLCCDpCOMCreditDpRange = 0
                GoTo EntSQLGLCCDpCOMCreditDpRange_Exit
            End If
            
            ReDim DpValueRange(1 To DpRowCount, 1 To 1)
            
                For NextRow = 1 To DpRowCount
                    If CStr(DpCodeRange(NextRow)) <> "" Then
                        RST.MoveFirst
                        RST.Find ("EXCHQCHKcode1Trans1 = '" & CStr(DpCodeRange(NextRow))) & "'"
                        
                        If Not RST.EOF Then
                            If RST.Fields.Item(1) = 100000511 Then
                                DpValueRange(NextRow, 1) = 0
                            ElseIf RST.Fields.Item(1) = 100000519 Then
                                DpValueRange(NextRow, 1) = 0
                            ElseIf RST.Fields.Item(1) = 100000520 Then
                                DpValueRange(NextRow, 1) = 0
                            Else
                                DpValueRange(NextRow, 1) = RST.Fields.Item(1)
                            End If
                        Else
                            RST.MoveFirst
                            ' Add to avoid summation errors when text error returned
                            DpValueRange(NextRow, 1) = 0
                        End If
                    Else
                        DpValueRange(NextRow, 1) = ""
                    End If
                    
    
                Next
            
            Set RST = Nothing
            
        End If
    End If
    
EntSQLGLCCDpCOMCreditDpRange_Zero:
    EntSQLGLCCDpCOMCreditDpRange = DpValueRange
    
    GoTo EntSQLGLCCDpCOMCreditDpRange_Exit
        
EntSQLGLCCDpCOMCreditDpRange_Error:
    If ErrStr = "" Then ErrStr = GetErrorNumStr
    EntSQLGLCCDpCOMCreditDpRange = ErrStr

EntSQLGLCCDpCOMCreditDpRange_Exit:

End Function


'**************************************************************************************************************
'**                                              DEBIT                                                     **
'**************************************************************************************************************

'*******************************************************************************************************
' Name:        EntSQLGLDpCOMDebitDpRange
' Description: Gets the General Ledger Debit values for the specified Currency, Year, Period, Depts and GLCode
'*******************************************************************************************************
Public Function EntSQLGLDpCOMDebitDpRange(Company$, TheYear%, ThePeriod%, TheCcy%, GLCode As Long, DpCodes As Range) As Variant
Attribute EntSQLGLDpCOMDebitDpRange.VB_Description = "This function returns the General Ledger Committed Debit value for the specified Currency, Year, Period, GLCode and Departments."
On Error GoTo EntSQLGLDpCOMDebitDpRange_Error
    Dim ErrStr$
    Dim DblVal As Double
    Dim Result%
    Dim stADO As String
    Dim RST As ADODB.Recordset
    Dim stSQL As String
    Dim AddVal As Double
    Dim CurrInv As Boolean
    Dim DpRange As String
    Dim DpRowRange(1000) As Double
    Dim DpCodeRange(1000) As String
    Dim DpValueRange() As Variant
    Dim DpRowCount As Double
    Dim NextRow As Double
    
    DoEvents
    
    Result% = 0
    
    DblVal# = 0#
    
    CompStr$ = UCase(Company$)
    
    If ValidCompany(Company) And ValidYear(TheYear) And ValidPeriod(ThePeriod) And ValidCcy(TheCcy%) And ValidGLCode(GLCode) Then
        If LocalCheckServer() Then
            
            'Check User Permissions
            Result = EntServer.CheckUserPermission(Company$, 487)
            
            If Result <> 0 Then
                Error Result
                GoTo EntSQLGLDpCOMDebitDpRange_Error
            End If
            
            'Concatenate Dp Range into CSV for passing to SQL select statement
            DpRowCount = 1
            
            For Each DpCodes In DpCodes.Rows
                
                If CStr(DpCodes.Value) <> "" Then
                    DpRange = DpRange + CStr(DpCodes.Value) & "','"
                    DpRowRange(DpRowCount) = DpCodes.Row
                    DpCodeRange(DpRowCount) = CStr(DpCodes.Value)
                End If
                
                DpRowCount = DpRowCount + 1
            Next
            
            'Correct Row Count
            DpRowCount = DpRowCount - 1
            
            'Remove extra comma off end of csv list
            DpRange = Left(DpRange, Len(DpRange) - 2)
            
            DpRange = "'" & DpRange
            
            stSQL = "SELECT EXCHQCHKcode1Trans1," + CStr(Trim(CompStr$)) + ".ifn_GetNominalValue(2, " + CStr(TheYear%) + "," + CStr(ThePeriod%) + "," + CStr(TheCcy%) + "," + CStr(GLCode) + ",'',EXCHQCHKcode1Trans1,'D',1)" & _
                    "FROM " + CStr(Trim(CompStr$)) + ".EXCHQCHK WHERE (RecPfix = 'C' AND SubType = 68) AND EXCHQCHKcode1Trans1 IN (" & CStr(DpRange) & ")"
            
            OpenDBConnection (CompStr$)
            
            With CNT(CurrComp)
                .CommandTimeout = 0
                Set RST = .Execute(stSQL)
            End With
            
            If RST.RecordCount = 0 Then
                EntSQLGLDpCOMDebitDpRange = 0
                GoTo EntSQLGLDpCOMDebitDpRange_Exit
            End If
            
            ReDim DpValueRange(1 To DpRowCount, 1 To 1)
            
                For NextRow = 1 To DpRowCount
                    If CStr(DpCodeRange(NextRow)) <> "" Then
                        RST.MoveFirst
                        RST.Find ("EXCHQCHKcode1Trans1 = '" & CStr(DpCodeRange(NextRow))) & "'"
                        
                        If Not RST.EOF Then
                            If RST.Fields.Item(1) = 100000511 Then
                                DpValueRange(NextRow, 1) = 0
                            ElseIf RST.Fields.Item(1) = 100000519 Then
                                DpValueRange(NextRow, 1) = 0
                            ElseIf RST.Fields.Item(1) = 100000520 Then
                                DpValueRange(NextRow, 1) = 0
                            Else
                                DpValueRange(NextRow, 1) = RST.Fields.Item(1)
                            End If
                        Else
                            RST.MoveFirst
                            ' Add to avoid summation errors when text error returned
                            DpValueRange(NextRow, 1) = 0
                        End If
                    Else
                        DpValueRange(NextRow, 1) = ""
                    End If
                    
    
                Next
            
            Set RST = Nothing
            
        End If
    End If
    
EntSQLGLDpCOMDebitDpRange_Zero:
    EntSQLGLDpCOMDebitDpRange = DpValueRange
    
    GoTo EntSQLGLDpCOMDebitDpRange_Exit
        
EntSQLGLDpCOMDebitDpRange_Error:
    If ErrStr = "" Then ErrStr = GetErrorNumStr
    EntSQLGLDpCOMDebitDpRange = ErrStr

EntSQLGLDpCOMDebitDpRange_Exit:

End Function

'*******************************************************************************************************
' Name:        EntSQLGLCCDpCOMDebitDpRange
' Description: Gets the General Ledger Debit values for the specified Currency, Year, Period, CC, Dps and GLCode
'*******************************************************************************************************
Public Function EntSQLGLCCDpCOMDebitDpRange(Company$, TheYear%, ThePeriod%, TheCcy%, GLCode As Long, CCCode$, DpCodes As Range) As Variant
Attribute EntSQLGLCCDpCOMDebitDpRange.VB_Description = "This function returns the General Ledger Committed Debit value for the specified Currency, Year, Period, GLCode CostCentre and Departments."
On Error GoTo EntSQLGLCCDpCOMDebitDpRange_Error
    Dim ErrStr$
    Dim DblVal As Double
    Dim Result%
    Dim stADO As String
    Dim RST As ADODB.Recordset
    Dim stSQL As String
    Dim AddVal As Double
    Dim CurrInv As Boolean
    Dim DpRange As String
    Dim DpRowRange(1000) As Double
    Dim DpCodeRange(1000) As String
    Dim DpValueRange() As Variant
    Dim DpRowCount As Double
    Dim NextRow As Double
    
    DoEvents
    
    Result% = 0
    
    DblVal# = 0#
    
    CompStr$ = UCase(Company$)
    
    If ValidCompany(Company) And ValidYear(TheYear) And ValidPeriod(ThePeriod) And ValidCcy(TheCcy%) And ValidGLCode(CStr(GLCode)) And ValidCCDep(True, CCCode$) Then
        If LocalCheckServer() Then
            
            'Check User Permissions
            Result = EntServer.CheckUserPermission(Company$, 487)
            
            If Result <> 0 Then
                Error Result
                GoTo EntSQLGLCCDpCOMDebitDpRange_Error
            End If
            
            'Concatenate Dp Range into CSV for passing to SQL select statement
            DpRowCount = 1
            
            For Each DpCodes In DpCodes.Rows
                
                If CStr(DpCodes.Value) <> "" Then
                    DpRange = DpRange + CStr(DpCodes.Value) & "','"
                    DpRowRange(DpRowCount) = DpCodes.Row
                    DpCodeRange(DpRowCount) = CStr(DpCodes.Value)
                End If
                
                DpRowCount = DpRowCount + 1
            Next
            
            'Correct Row Count
            DpRowCount = DpRowCount - 1
            
            'Remove extra comma off end of csv list
            DpRange = Left(DpRange, Len(DpRange) - 2)
            
            DpRange = "'" & DpRange
            
            stSQL = "SELECT EXCHQCHKcode1Trans1," + CStr(Trim(CompStr$)) + ".ifn_GetNominalValue(2, " + CStr(TheYear%) + "," + CStr(ThePeriod%) + "," + CStr(TheCcy%) + "," + CStr(GLCode) + ",'" + CStr(Trim(CCCode$)) + "',EXCHQCHKcode1Trans1" + ",'C',1) " & _
                    "FROM " + CStr(Trim(CompStr$)) + ".EXCHQCHK WHERE (RecPfix = 'C' AND SubType = 68) AND EXCHQCHKcode1Trans1 IN (" & CStr(DpRange) & ")"
            
            OpenDBConnection (CompStr$)
            
            With CNT(CurrComp)
                .CommandTimeout = 0
                Set RST = .Execute(stSQL)
            End With
            
            If RST.RecordCount = 0 Then
                EntSQLGLCCDpCOMDebitDpRange = 0
                GoTo EntSQLGLCCDpCOMDebitDpRange_Exit
            End If
            
            ReDim DpValueRange(1 To DpRowCount, 1 To 1)
            
                For NextRow = 1 To DpRowCount
                    If CStr(DpCodeRange(NextRow)) <> "" Then
                        RST.MoveFirst
                        RST.Find ("EXCHQCHKcode1Trans1 = '" & CStr(DpCodeRange(NextRow))) & "'"
                        
                        If Not RST.EOF Then
                            If RST.Fields.Item(1) = 100000511 Then
                                DpValueRange(NextRow, 1) = 0
                            ElseIf RST.Fields.Item(1) = 100000519 Then
                                DpValueRange(NextRow, 1) = 0
                            ElseIf RST.Fields.Item(1) = 100000520 Then
                                DpValueRange(NextRow, 1) = 0
                            Else
                                DpValueRange(NextRow, 1) = RST.Fields.Item(1)
                            End If
                        Else
                            RST.MoveFirst
                            ' Add to avoid summation errors when text error returned
                            DpValueRange(NextRow, 1) = 0
                        End If
                    Else
                        DpValueRange(NextRow, 1) = ""
                    End If
                    
    
                Next
            
            Set RST = Nothing
            
        End If
    End If
    
EntSQLGLCCDpCOMDebitDpRange_Zero:
    EntSQLGLCCDpCOMDebitDpRange = DpValueRange
    
    GoTo EntSQLGLCCDpCOMDebitDpRange_Exit
        
EntSQLGLCCDpCOMDebitDpRange_Error:
    If ErrStr = "" Then ErrStr = GetErrorNumStr
    EntSQLGLCCDpCOMDebitDpRange = ErrStr

EntSQLGLCCDpCOMDebitDpRange_Exit:

End Function
Attribute VB_Name = "GLCOMGetGLRanges"
Option Explicit
Public Message As String
Dim CompanyList As Variant
Dim NoCompanies As Long

'*******************************************************************************************************
' Name:        EntSQLGLCOMActualGLRange
' Description: Gets the General Ledger Actual value for the specified Currency, Year, Period and GLCode
'*******************************************************************************************************
Public Function EntSQLGLCOMActualGLRange(Company$, TheYear%, ThePeriod%, TheCcy%, GLCodes As Range) As Variant
Attribute EntSQLGLCOMActualGLRange.VB_Description = "This function returns the General Ledger Committed Actual value for the specified Currency, Year, Period, and GLCodes."
On Error GoTo EntSQLGLCOMActualGLRange_Error
    Dim ErrStr$
    Dim DblVal As Double
    Dim Result%
    Dim stADO As String
    Dim RST As ADODB.Recordset
    Dim stSQL As String
    Dim AddVal As Double
    Dim CurrInv As Boolean
    Dim GLRange As String
    Dim GLRowRange(1000) As Double
    Dim GLCodeRange(1000) As String
    Dim GLValueRange() As Variant
    Dim GLRowCount As Double
    Dim NextRow As Double
    Dim SingleCompany As String
    Dim LPosition As Integer
    
    DoEvents
    
    Result% = 0
    
    DblVal# = 0#
    
    LPosition = 0
    CompStr$ = UCase(Company$)
    LPosition = InStr(CompStr$, ",")
    
    If LPosition <> 0 Then
        Company$ = Left(CompStr$, LPosition - 1)
    End If
    
    If ValidCompany(Company$) And ValidYear(TheYear) And ValidPeriod(ThePeriod) And ValidCcy(TheCcy%) Then
        If LocalCheckServer() Then
            
            'Check User Permissions for all companies
            CompanyList = Split(CompStr$, ",")
            For NoCompanies = 0 To UBound(CompanyList)
                Result = EntServer.CheckUserPermission(CompanyList(NoCompanies), 487)
                
                If Result <> 0 Then
                    Error Result
                    GoTo EntSQLGLCOMActualGLRange_Error
                End If
            Next NoCompanies
            
            GLRowCount = 1
            
            For Each GLCodes In GLCodes.Rows
                
                If CStr(GLCodes.Value) <> "" And (GLCodes.Value > 0 And GLCodes.Value <= 2147483647) Then
                    GLRange = GLRange + CStr(GLCodes.Value) & ","
                    GLRowRange(GLRowCount) = GLCodes.Row
                    GLCodeRange(GLRowCount) = CStr(GLCodes.Value)
                End If
                
                GLRowCount = GLRowCount + 1
            Next
            
            'Correct Row Count
            GLRowCount = GLRowCount - 1
            
            'Remove extra comma off end of csv list
            GLRange = Left(GLRange, Len(GLRange) - 1)
            
            stSQL = "EXEC common.esp_GetNominalValue '" + CompStr$ + "',3," + CStr(TheYear%) + "," + CStr(ThePeriod%) + "," + CStr(TheCcy%) + ",'" + CStr(GLRange) + "','','','',1"
        
            OpenDBConnection (CompStr$)
            
            With CNT(CurrComp)
                .CommandTimeout = 0
                Set RST = .Execute(stSQL)
            End With
            
            If RST.RecordCount = 0 Then
                EntSQLGLCOMActualGLRange = 0
                GoTo EntSQLGLCOMActualGLRange_Exit
            End If
            
            ReDim GLValueRange(1 To GLRowCount, 1 To 1)
            
                For NextRow = 1 To GLRowCount
                    If CStr(GLCodeRange(NextRow)) <> "" Then
                        RST.MoveFirst
                        RST.Find ("glCode = " & CStr(GLCodeRange(NextRow)))
                        
                        If Not RST.EOF Then
                            If RST.Fields.Item(1) = 100000511 Then
                                GLValueRange(NextRow, 1) = 0
                            ElseIf RST.Fields.Item(1) = 100000519 Then
                                GLValueRange(NextRow, 1) = 0
                            ElseIf RST.Fields.Item(1) = 100000520 Then
                                GLValueRange(NextRow, 1) = 0
                            Else
                                GLValueRange(NextRow, 1) = RST.Fields.Item(1)
                            End If
                        Else
                            RST.MoveFirst
                            ' Add to avoid summation errors when text error returned
                            GLValueRange(NextRow, 1) = 0
                        End If
                    Else
                        GLValueRange(NextRow, 1) = ""
                    End If
                    
                Next
            
            Set RST = Nothing
            
        End If
    End If
    
EntSQLGLCOMActualGLRange_Zero:
    EntSQLGLCOMActualGLRange = GLValueRange
    
    GoTo EntSQLGLCOMActualGLRange_Exit
        
EntSQLGLCOMActualGLRange_Error:
    If ErrStr = "" Then ErrStr = GetErrorNumStr
    EntSQLGLCOMActualGLRange = ErrStr

EntSQLGLCOMActualGLRange_Exit:

End Function

'*******************************************************************************************************
' Name:        EntSQLGLCCCOMActualGLRange
' Description: Gets the General Ledger Actual values for the specified Currency, Year, Period, CC and GLCodes
'*******************************************************************************************************
Public Function EntSQLGLCCCOMActualGLRange(Company$, TheYear%, ThePeriod%, TheCcy%, GLCodes As Range, CCCode$) As Variant
Attribute EntSQLGLCCCOMActualGLRange.VB_Description = "This function returns the General Ledger Committed Actual value for the specified Currency, Year, Period, GLCodes and CostCentre."
On Error GoTo EntSQLGLCCCOMActualGLRange_Error
    Dim ErrStr$
    Dim DblVal As Double
    Dim Result%
    Dim stADO As String
    Dim RST As ADODB.Recordset
    Dim stSQL As String
    Dim AddVal As Double
    Dim CurrInv As Boolean
    Dim GLRange As String
    Dim GLRowRange(1000) As Double
    Dim GLCodeRange(1000) As String
    Dim GLValueRange() As Variant
    Dim GLRowCount As Double
    Dim NextRow As Double
    Dim SingleCompany As String
    Dim LPosition As Integer
    
    DoEvents
    
    Result% = 0
    
    DblVal# = 0#
    
    LPosition = 0
    CompStr$ = UCase(Company$)
    LPosition = InStr(CompStr$, ",")
    
    If LPosition <> 0 Then
        Company$ = Left(CompStr$, LPosition - 1)
    End If
    
    If ValidCompany(Company$) And ValidYear(TheYear) And ValidPeriod(ThePeriod) And ValidCcy(TheCcy%) Then
        If LocalCheckServer() Then
            
            'Check User Permissions for all companies
            CompanyList = Split(CompStr$, ",")
            For NoCompanies = 0 To UBound(CompanyList)
                Result = EntServer.CheckUserPermission(CompanyList(NoCompanies), 487)
                
                If Result <> 0 Then
                    Error Result
                    GoTo EntSQLGLCCCOMActualGLRange_Error
                End If
            Next NoCompanies
            
            GLRowCount = 1
            
            For Each GLCodes In GLCodes.Rows
                
                If CStr(GLCodes.Value) <> "" And (GLCodes.Value > 0 And GLCodes.Value <= 2147483647) Then
                    GLRange = GLRange + CStr(GLCodes.Value) & ","
                    GLRowRange(GLRowCount) = GLCodes.Row
                    GLCodeRange(GLRowCount) = CStr(GLCodes.Value)
                End If
                
                GLRowCount = GLRowCount + 1
            Next
            
            'Correct Row Count
            GLRowCount = GLRowCount - 1
            
            'Remove extra comma off end of csv list
            GLRange = Left(GLRange, Len(GLRange) - 1)
            
            stSQL = "EXEC common.esp_GetNominalValue '" + CompStr$ + "',3," + CStr(TheYear%) + "," + CStr(ThePeriod%) + "," + CStr(TheCcy%) + ",'" + CStr(GLRange) + "','" + CStr(Trim(CCCode$)) + "','','C',1"
            
            OpenDBConnection (CompStr$)
            
            With CNT(CurrComp)
                .CommandTimeout = 0
                Set RST = .Execute(stSQL)
            End With
            
            If RST.RecordCount = 0 Then
                EntSQLGLCCCOMActualGLRange = 0
                GoTo EntSQLGLCCCOMActualGLRange_Exit
            End If
            
            ReDim GLValueRange(1 To GLRowCount, 1 To 1)
            
                For NextRow = 1 To GLRowCount
                    If CStr(GLCodeRange(NextRow)) <> "" Then
                        RST.MoveFirst
                        RST.Find ("glCode = " & CStr(GLCodeRange(NextRow)))
                        
                        If Not RST.EOF Then
                            If RST.Fields.Item(1) = 100000511 Then
                                GLValueRange(NextRow, 1) = 0
                            ElseIf RST.Fields.Item(1) = 100000519 Then
                                GLValueRange(NextRow, 1) = 0
                            ElseIf RST.Fields.Item(1) = 100000520 Then
                                GLValueRange(NextRow, 1) = 0
                            Else
                                GLValueRange(NextRow, 1) = RST.Fields.Item(1)
                            End If
                        Else
                            RST.MoveFirst
                            ' Add to avoid summation errors when text error returned
                            GLValueRange(NextRow, 1) = 0
                        End If
                    Else
                        GLValueRange(NextRow, 1) = ""
                    End If
                    
    
                Next
            
            Set RST = Nothing
            
        End If
    End If
    
EntSQLGLCCCOMActualGLRange_Zero:
    EntSQLGLCCCOMActualGLRange = GLValueRange
    
    GoTo EntSQLGLCCCOMActualGLRange_Exit
        
EntSQLGLCCCOMActualGLRange_Error:
    If ErrStr = "" Then ErrStr = GetErrorNumStr
    EntSQLGLCCCOMActualGLRange = ErrStr

EntSQLGLCCCOMActualGLRange_Exit:

End Function

'*******************************************************************************************************
' Name:        EntSQLGLDpCOMActualGLRange
' Description: Gets the General Ledger Actual values for the specified Currency, Year, Period, Dp and GLCodes
'*******************************************************************************************************
Public Function EntSQLGLDpCOMActualGLRange(Company$, TheYear%, ThePeriod%, TheCcy%, GLCodes As Range, DpCode$) As Variant
Attribute EntSQLGLDpCOMActualGLRange.VB_Description = "This function returns the General Ledger Committed Actual value for the specified Currency, Year, Period, GLCodes and Department."
On Error GoTo EntSQLGLDpCOMActualGLRange_Error
    Dim ErrStr$
    Dim DblVal As Double
    Dim Result%
    Dim stADO As String
    Dim RST As ADODB.Recordset
    Dim stSQL As String
    Dim AddVal As Double
    Dim CurrInv As Boolean
    Dim GLRange As String
    Dim GLRowRange(1000) As Double
    Dim GLCodeRange(1000) As String
    Dim GLValueRange() As Variant
    Dim GLRowCount As Double
    Dim NextRow As Double
    Dim SingleCompany As String
    Dim LPosition As Integer
    
    DoEvents
    
    Result% = 0
    
    DblVal# = 0#
    
    LPosition = 0
    CompStr$ = UCase(Company$)
    LPosition = InStr(CompStr$, ",")
    
    If LPosition <> 0 Then
        Company$ = Left(CompStr$, LPosition - 1)
    End If
    
    If ValidCompany(Company$) And ValidYear(TheYear) And ValidPeriod(ThePeriod) And ValidCcy(TheCcy%) Then
        If LocalCheckServer() Then
            
            'Check User Permissions for all companies
            CompanyList = Split(CompStr$, ",")
            For NoCompanies = 0 To UBound(CompanyList)
                Result = EntServer.CheckUserPermission(CompanyList(NoCompanies), 487)
                
                If Result <> 0 Then
                    Error Result
                    GoTo EntSQLGLDpCOMActualGLRange_Error
                End If
            Next NoCompanies
            
            GLRowCount = 1
            
            For Each GLCodes In GLCodes.Rows
                
                If CStr(GLCodes.Value) <> "" And (GLCodes.Value > 0 And GLCodes.Value <= 2147483647) Then
                    GLRange = GLRange + CStr(GLCodes.Value) & ","
                    GLRowRange(GLRowCount) = GLCodes.Row
                    GLCodeRange(GLRowCount) = CStr(GLCodes.Value)
                End If
                
                GLRowCount = GLRowCount + 1
            Next
            
            'Correct Row Count
            GLRowCount = GLRowCount - 1
            
            'Remove extra comma off end of csv list
            GLRange = Left(GLRange, Len(GLRange) - 1)
            
            stSQL = "EXEC common.esp_GetNominalValue '" + CompStr$ + "',3," + CStr(TheYear%) + "," + CStr(ThePeriod%) + "," + CStr(TheCcy%) + ",'" + CStr(GLRange) + "','','" + CStr(Trim(DpCode$)) + "','D',1"
            
            OpenDBConnection (CompStr$)
            
            With CNT(CurrComp)
                .CommandTimeout = 0
                Set RST = .Execute(stSQL)
            End With
            
            If RST.RecordCount = 0 Then
                EntSQLGLDpCOMActualGLRange = 0
                GoTo EntSQLGLDpCOMActualGLRange_Exit
            End If
            
            ReDim GLValueRange(1 To GLRowCount, 1 To 1)
            
                For NextRow = 1 To GLRowCount
                    If CStr(GLCodeRange(NextRow)) <> "" Then
                        RST.MoveFirst
                        RST.Find ("glCode = " & CStr(GLCodeRange(NextRow)))
                        
                        If Not RST.EOF Then
                            If RST.Fields.Item(1) = 100000511 Then
                                GLValueRange(NextRow, 1) = 0
                            ElseIf RST.Fields.Item(1) = 100000519 Then
                                GLValueRange(NextRow, 1) = 0
                            ElseIf RST.Fields.Item(1) = 100000520 Then
                                GLValueRange(NextRow, 1) = 0
                            Else
                                GLValueRange(NextRow, 1) = RST.Fields.Item(1)
                            End If
                        Else
                            RST.MoveFirst
                            ' Add to avoid summation errors when text error returned
                            GLValueRange(NextRow, 1) = 0
                        End If
                    Else
                        GLValueRange(NextRow, 1) = ""
                    End If
                    
    
                Next
            
            Set RST = Nothing
            
        End If
    End If
    
EntSQLGLDpCOMActualGLRange_Zero:
    EntSQLGLDpCOMActualGLRange = GLValueRange
    
    GoTo EntSQLGLDpCOMActualGLRange_Exit
        
EntSQLGLDpCOMActualGLRange_Error:
    If ErrStr = "" Then ErrStr = GetErrorNumStr
    EntSQLGLDpCOMActualGLRange = ErrStr

EntSQLGLDpCOMActualGLRange_Exit:

End Function

'*******************************************************************************************************
' Name:        EntSQLGLCCDpCOMActualGLRange
' Description: Gets the General Ledger Actual values for the specified Currency, Year, Period, CC, Dp and GLCodes
'*******************************************************************************************************
Public Function EntSQLGLCCDpCOMActualGLRange(Company$, TheYear%, ThePeriod%, TheCcy%, GLCodes As Range, CCCode$, DpCode$) As Variant
Attribute EntSQLGLCCDpCOMActualGLRange.VB_Description = "This function returns the General Ledger Committed Actual value for the specified Currency, Year, Period, GLCodes, CostCentre and Department."
On Error GoTo EntSQLGLCCDpCOMActualGLRange_Error
    Dim ErrStr$
    Dim DblVal As Double
    Dim Result%
    Dim stADO As String
    Dim RST As ADODB.Recordset
    Dim stSQL As String
    Dim AddVal As Double
    Dim CurrInv As Boolean
    Dim GLRange As String
    Dim GLRowRange(1000) As Double
    Dim GLCodeRange(1000) As String
    Dim GLValueRange() As Variant
    Dim GLRowCount As Double
    Dim NextRow As Double
    Dim SingleCompany As String
    Dim LPosition As Integer
    
    DoEvents
    
    Result% = 0
    
    DblVal# = 0#
    
    LPosition = 0
    CompStr$ = UCase(Company$)
    LPosition = InStr(CompStr$, ",")
    
    If LPosition <> 0 Then
        Company$ = Left(CompStr$, LPosition - 1)
    End If
    
    If ValidCompany(Company$) And ValidYear(TheYear) And ValidPeriod(ThePeriod) And ValidCcy(TheCcy%) Then
        If LocalCheckServer() Then
            
            'Check User Permissions for all companies
            CompanyList = Split(CompStr$, ",")
            For NoCompanies = 0 To UBound(CompanyList)
                Result = EntServer.CheckUserPermission(CompanyList(NoCompanies), 487)
                
                If Result <> 0 Then
                    Error Result
                    GoTo EntSQLGLCCDpCOMActualGLRange_Error
                End If
            Next NoCompanies
            
            GLRowCount = 1
            
            For Each GLCodes In GLCodes.Rows
                
                If CStr(GLCodes.Value) <> "" And (GLCodes.Value > 0 And GLCodes.Value <= 2147483647) Then
                    GLRange = GLRange + CStr(GLCodes.Value) & ","
                    GLRowRange(GLRowCount) = GLCodes.Row
                    GLCodeRange(GLRowCount) = CStr(GLCodes.Value)
                End If
                
                GLRowCount = GLRowCount + 1
            Next
            
            'Correct Row Count
            GLRowCount = GLRowCount - 1
            
            'Remove extra comma off end of csv list
            GLRange = Left(GLRange, Len(GLRange) - 1)
            
            stSQL = "EXEC common.esp_GetNominalValue '" + CompStr$ + "',3," + CStr(TheYear%) + "," + CStr(ThePeriod%) + "," + CStr(TheCcy%) + ",'" + CStr(GLRange) + "','" + CStr(Trim(CCCode$)) + "','" + CStr(Trim(DpCode$)) + "','C',1"
            
            OpenDBConnection (CompStr$)
            
            With CNT(CurrComp)
                .CommandTimeout = 0
                Set RST = .Execute(stSQL)
            End With
            
            If RST.RecordCount = 0 Then
                EntSQLGLCCDpCOMActualGLRange = 0
                GoTo EntSQLGLCCDpCOMActualGLRange_Exit
            End If
            
            ReDim GLValueRange(1 To GLRowCount, 1 To 1)
            
                For NextRow = 1 To GLRowCount
                    If CStr(GLCodeRange(NextRow)) <> "" Then
                        RST.MoveFirst
                        RST.Find ("glCode = " & CStr(GLCodeRange(NextRow)))
                        
                        If Not RST.EOF Then
                            If RST.Fields.Item(1) = 100000511 Then
                                GLValueRange(NextRow, 1) = 0
                            ElseIf RST.Fields.Item(1) = 100000519 Then
                                GLValueRange(NextRow, 1) = 0
                            ElseIf RST.Fields.Item(1) = 100000520 Then
                                GLValueRange(NextRow, 1) = 0
                            Else
                                GLValueRange(NextRow, 1) = RST.Fields.Item(1)
                            End If
                        Else
                            RST.MoveFirst
                            ' Add to avoid summation errors when text error returned
                            GLValueRange(NextRow, 1) = 0
                        End If
                    Else
                        GLValueRange(NextRow, 1) = ""
                    End If
                    
    
                Next
            
            Set RST = Nothing
            
        End If
    End If
    
EntSQLGLCCDpCOMActualGLRange_Zero:
    EntSQLGLCCDpCOMActualGLRange = GLValueRange
    
    GoTo EntSQLGLCCDpCOMActualGLRange_Exit
        
EntSQLGLCCDpCOMActualGLRange_Error:
    If ErrStr = "" Then ErrStr = GetErrorNumStr
    EntSQLGLCCDpCOMActualGLRange = ErrStr

EntSQLGLCCDpCOMActualGLRange_Exit:

End Function

'**************************************************************************************************************
'**                                              CREDIT                                                      **
'**************************************************************************************************************

'*******************************************************************************************************
' Name:        EntSQLGLCOMCreditGLRange
' Description: Gets the General Ledger Credit value for the specified Currency, Year, Period and GLCode
'*******************************************************************************************************
Public Function EntSQLGLCOMCreditGLRange(Company$, TheYear%, ThePeriod%, TheCcy%, GLCodes As Range) As Variant
Attribute EntSQLGLCOMCreditGLRange.VB_Description = "This function returns the General Ledger Committed Credit value for the specified Currency, Year, Period, and GLCodes."
On Error GoTo EntSQLGLCOMCreditGLRange_Error
    Dim ErrStr$
    Dim DblVal As Double
    Dim Result%
    Dim stADO As String
    Dim RST As ADODB.Recordset
    Dim stSQL As String
    Dim AddVal As Double
    Dim CurrInv As Boolean
    Dim GLRange As String
    Dim GLRowRange(1000) As Double
    Dim GLCodeRange(1000) As String
    Dim GLValueRange() As Variant
    Dim GLRowCount As Double
    Dim NextRow As Double
    Dim SingleCompany As String
    Dim LPosition As Integer
    
    DoEvents
    
    Result% = 0
    
    DblVal# = 0#
    
    LPosition = 0
    CompStr$ = UCase(Company$)
    LPosition = InStr(CompStr$, ",")
    
    If LPosition <> 0 Then
        Company$ = Left(CompStr$, LPosition - 1)
    End If
    
    If ValidCompany(Company$) And ValidYear(TheYear) And ValidPeriod(ThePeriod) And ValidCcy(TheCcy%) Then
        If LocalCheckServer() Then
            
            'Check User Permissions for all companies
            CompanyList = Split(CompStr$, ",")
            For NoCompanies = 0 To UBound(CompanyList)
                Result = EntServer.CheckUserPermission(CompanyList(NoCompanies), 487)
                
                If Result <> 0 Then
                    Error Result
                    GoTo EntSQLGLCOMCreditGLRange_Error
                End If
            Next NoCompanies
            
            GLRowCount = 1
            
            For Each GLCodes In GLCodes.Rows
                
                If CStr(GLCodes.Value) <> "" And (GLCodes.Value > 0 And GLCodes.Value <= 2147483647) Then
                    GLRange = GLRange + CStr(GLCodes.Value) & ","
                    GLRowRange(GLRowCount) = GLCodes.Row
                    GLCodeRange(GLRowCount) = CStr(GLCodes.Value)
                End If
                
                GLRowCount = GLRowCount + 1
            Next
            
            'Correct Row Count
            GLRowCount = GLRowCount - 1
            
            'Remove extra comma off end of csv list
            GLRange = Left(GLRange, Len(GLRange) - 1)
            
            stSQL = "EXEC common.esp_GetNominalValue '" + CompStr$ + "',1," + CStr(TheYear%) + "," + CStr(ThePeriod%) + "," + CStr(TheCcy%) + ",'" + CStr(GLRange) + "','','','',1"
        
            OpenDBConnection (CompStr$)
            
            With CNT(CurrComp)
                .CommandTimeout = 0
                Set RST = .Execute(stSQL)
            End With
            
            If RST.RecordCount = 0 Then
                EntSQLGLCOMCreditGLRange = 0
                GoTo EntSQLGLCOMCreditGLRange_Exit
            End If
            
            ReDim GLValueRange(1 To GLRowCount, 1 To 1)
            
                For NextRow = 1 To GLRowCount
                    If CStr(GLCodeRange(NextRow)) <> "" Then
                        RST.MoveFirst
                        RST.Find ("glCode = " & CStr(GLCodeRange(NextRow)))
                        
                        If Not RST.EOF Then
                            If RST.Fields.Item(1) = 100000511 Then
                                GLValueRange(NextRow, 1) = 0
                            ElseIf RST.Fields.Item(1) = 100000519 Then
                                GLValueRange(NextRow, 1) = 0
                            ElseIf RST.Fields.Item(1) = 100000520 Then
                                GLValueRange(NextRow, 1) = 0
                            Else
                                GLValueRange(NextRow, 1) = RST.Fields.Item(1)
                            End If
                        Else
                            RST.MoveFirst
                            ' Add to avoid summation errors when text error returned
                            GLValueRange(NextRow, 1) = 0
                        End If
                    Else
                        GLValueRange(NextRow, 1) = ""
                    End If
                    
    
                Next
            
            Set RST = Nothing
            
        End If
    End If
    
EntSQLGLCOMCreditGLRange_Zero:
    EntSQLGLCOMCreditGLRange = GLValueRange
    
    GoTo EntSQLGLCOMCreditGLRange_Exit
        
EntSQLGLCOMCreditGLRange_Error:
    If ErrStr = "" Then ErrStr = GetErrorNumStr
    EntSQLGLCOMCreditGLRange = ErrStr

EntSQLGLCOMCreditGLRange_Exit:

End Function

'*******************************************************************************************************
' Name:        EntSQLGLCCCOMCreditGLRange
' Description: Gets the General Ledger Credit values for the specified Currency, Year, Period, CC and GLCodes
'*******************************************************************************************************
Public Function EntSQLGLCCCOMCreditGLRange(Company$, TheYear%, ThePeriod%, TheCcy%, GLCodes As Range, CCCode$) As Variant
Attribute EntSQLGLCCCOMCreditGLRange.VB_Description = "This function returns the General Ledger Committed Credit value for the specified Currency, Year, Period, GLCodes and CostCentre."
On Error GoTo EntSQLGLCCCOMCreditGLRange_Error
    Dim ErrStr$
    Dim DblVal As Double
    Dim Result%
    Dim stADO As String
    Dim RST As ADODB.Recordset
    Dim stSQL As String
    Dim AddVal As Double
    Dim CurrInv As Boolean
    Dim GLRange As String
    Dim GLRowRange(1000) As Double
    Dim GLCodeRange(1000) As String
    Dim GLValueRange() As Variant
    Dim GLRowCount As Double
    Dim NextRow As Double
    Dim SingleCompany As String
    Dim LPosition As Integer
    
    DoEvents
    
    Result% = 0
    
    DblVal# = 0#
    
    LPosition = 0
    CompStr$ = UCase(Company$)
    LPosition = InStr(CompStr$, ",")
    
    If LPosition <> 0 Then
        Company$ = Left(CompStr$, LPosition - 1)
    End If
    
    If ValidCompany(Company$) And ValidYear(TheYear) And ValidPeriod(ThePeriod) And ValidCcy(TheCcy%) Then
        If LocalCheckServer() Then
            
            'Check User Permissions for all companies
            CompanyList = Split(CompStr$, ",")
            For NoCompanies = 0 To UBound(CompanyList)
                Result = EntServer.CheckUserPermission(CompanyList(NoCompanies), 487)
                
                If Result <> 0 Then
                    Error Result
                    GoTo EntSQLGLCCCOMCreditGLRange_Error
                End If
            Next NoCompanies
            
            GLRowCount = 1
            
            For Each GLCodes In GLCodes.Rows
                
                If CStr(GLCodes.Value) <> "" And (GLCodes.Value > 0 And GLCodes.Value <= 2147483647) Then
                    GLRange = GLRange + CStr(GLCodes.Value) & ","
                    GLRowRange(GLRowCount) = GLCodes.Row
                    GLCodeRange(GLRowCount) = CStr(GLCodes.Value)
                End If
                
                GLRowCount = GLRowCount + 1
            Next
            
            'Correct Row Count
            GLRowCount = GLRowCount - 1
            
            'Remove extra comma off end of csv list
            GLRange = Left(GLRange, Len(GLRange) - 1)
            
            stSQL = "EXEC common.esp_GetNominalValue '" + CompStr$ + "',1," + CStr(TheYear%) + "," + CStr(ThePeriod%) + "," + CStr(TheCcy%) + ",'" + CStr(GLRange) + "','" + CStr(Trim(CCCode$)) + "','','C',1"
            
            OpenDBConnection (CompStr$)
            
            With CNT(CurrComp)
                .CommandTimeout = 0
                Set RST = .Execute(stSQL)
            End With
            
            If RST.RecordCount = 0 Then
                EntSQLGLCCCOMCreditGLRange = 0
                GoTo EntSQLGLCCCOMCreditGLRange_Exit
            End If
            
            ReDim GLValueRange(1 To GLRowCount, 1 To 1)
            
                For NextRow = 1 To GLRowCount
                    If CStr(GLCodeRange(NextRow)) <> "" Then
                        RST.MoveFirst
                        RST.Find ("glCode = " & CStr(GLCodeRange(NextRow)))
                        
                        If Not RST.EOF Then
                            If RST.Fields.Item(1) = 100000511 Then
                                GLValueRange(NextRow, 1) = 0
                            ElseIf RST.Fields.Item(1) = 100000519 Then
                                GLValueRange(NextRow, 1) = 0
                            ElseIf RST.Fields.Item(1) = 100000520 Then
                                GLValueRange(NextRow, 1) = 0
                            Else
                                GLValueRange(NextRow, 1) = RST.Fields.Item(1)
                            End If
                        Else
                            RST.MoveFirst
                            ' Add to avoid summation errors when text error returned
                            GLValueRange(NextRow, 1) = 0
                        End If
                    Else
                        GLValueRange(NextRow, 1) = ""
                    End If
                    
    
                Next
            
            Set RST = Nothing
            
        End If
    End If
    
EntSQLGLCCCOMCreditGLRange_Zero:
    EntSQLGLCCCOMCreditGLRange = GLValueRange
    
    GoTo EntSQLGLCCCOMCreditGLRange_Exit
        
EntSQLGLCCCOMCreditGLRange_Error:
    If ErrStr = "" Then ErrStr = GetErrorNumStr
    EntSQLGLCCCOMCreditGLRange = ErrStr

EntSQLGLCCCOMCreditGLRange_Exit:

End Function


'*******************************************************************************************************
' Name:        EntSQLGLDpCOMCreditGLRange
' Description: Gets the General Ledger Credit values for the specified Currency, Year, Period, Dp and GLCodes
'*******************************************************************************************************
Public Function EntSQLGLDpCOMCreditGLRange(Company$, TheYear%, ThePeriod%, TheCcy%, GLCodes As Range, DpCode$) As Variant
Attribute EntSQLGLDpCOMCreditGLRange.VB_Description = "This function returns the General Ledger Committed Credit value for the specified Currency, Year, Period, GLCodes and Department."
On Error GoTo EntSQLGLDpCOMCreditGLRange_Error
    Dim ErrStr$
    Dim DblVal As Double
    Dim Result%
    Dim stADO As String
    Dim RST As ADODB.Recordset
    Dim stSQL As String
    Dim AddVal As Double
    Dim CurrInv As Boolean
    Dim GLRange As String
    Dim GLRowRange(1000) As Double
    Dim GLCodeRange(1000) As String
    Dim GLValueRange() As Variant
    Dim GLRowCount As Double
    Dim NextRow As Double
    Dim SingleCompany As String
    Dim LPosition As Integer
    
    DoEvents
    
    Result% = 0
    
    DblVal# = 0#
    
    LPosition = 0
    CompStr$ = UCase(Company$)
    LPosition = InStr(CompStr$, ",")
    
    If LPosition <> 0 Then
        Company$ = Left(CompStr$, LPosition - 1)
    End If
    
    If ValidCompany(Company$) And ValidYear(TheYear) And ValidPeriod(ThePeriod) And ValidCcy(TheCcy%) Then
        If LocalCheckServer() Then
            
            'Check User Permissions for all companies
            CompanyList = Split(CompStr$, ",")
            For NoCompanies = 0 To UBound(CompanyList)
                Result = EntServer.CheckUserPermission(CompanyList(NoCompanies), 487)
                
                If Result <> 0 Then
                    Error Result
                    GoTo EntSQLGLDpCOMCreditGLRange_Error
                End If
            Next NoCompanies
            
            GLRowCount = 1
            
            For Each GLCodes In GLCodes.Rows
                
                If CStr(GLCodes.Value) <> "" And (GLCodes.Value > 0 And GLCodes.Value <= 2147483647) Then
                    GLRange = GLRange + CStr(GLCodes.Value) & ","
                    GLRowRange(GLRowCount) = GLCodes.Row
                    GLCodeRange(GLRowCount) = CStr(GLCodes.Value)
                End If
                
                GLRowCount = GLRowCount + 1
            Next
            
            'Correct Row Count
            GLRowCount = GLRowCount - 1
            
            'Remove extra comma off end of csv list
            GLRange = Left(GLRange, Len(GLRange) - 1)
            
            stSQL = "EXEC common.esp_GetNominalValue '" + CompStr$ + "',1," + CStr(TheYear%) + "," + CStr(ThePeriod%) + "," + CStr(TheCcy%) + ",'" + CStr(GLRange) + "','','" + CStr(Trim(DpCode$)) + "','D',1"

            OpenDBConnection (CompStr$)
            
            With CNT(CurrComp)
                .CommandTimeout = 0
                Set RST = .Execute(stSQL)
            End With
            
            If RST.RecordCount = 0 Then
                EntSQLGLDpCOMCreditGLRange = 0
                GoTo EntSQLGLDpCOMCreditGLRange_Exit
            End If
            
            ReDim GLValueRange(1 To GLRowCount, 1 To 1)
            
                For NextRow = 1 To GLRowCount
                    If CStr(GLCodeRange(NextRow)) <> "" Then
                        RST.MoveFirst
                        RST.Find ("glCode = " & CStr(GLCodeRange(NextRow)))
                        
                        If Not RST.EOF Then
                            If RST.Fields.Item(1) = 100000511 Then
                                GLValueRange(NextRow, 1) = 0
                            ElseIf RST.Fields.Item(1) = 100000519 Then
                                GLValueRange(NextRow, 1) = 0
                            ElseIf RST.Fields.Item(1) = 100000520 Then
                                GLValueRange(NextRow, 1) = 0
                            Else
                                GLValueRange(NextRow, 1) = RST.Fields.Item(1)
                            End If
                        Else
                            RST.MoveFirst
                            ' Add to avoid summation errors when text error returned
                            GLValueRange(NextRow, 1) = 0
                        End If
                    Else
                        GLValueRange(NextRow, 1) = ""
                    End If
                    
    
                Next
            
            Set RST = Nothing
            
        End If
    End If
    
EntSQLGLDpCOMCreditGLRange_Zero:
    EntSQLGLDpCOMCreditGLRange = GLValueRange
    
    GoTo EntSQLGLDpCOMCreditGLRange_Exit
        
EntSQLGLDpCOMCreditGLRange_Error:
    If ErrStr = "" Then ErrStr = GetErrorNumStr
    EntSQLGLDpCOMCreditGLRange = ErrStr

EntSQLGLDpCOMCreditGLRange_Exit:

End Function


'*******************************************************************************************************
' Name:        EntSQLGLCCDpCOMCreditGLRange
' Description: Gets the General Ledger Credit values for the specified Currency, Year, Period, CC, Dp and GLCodes
'*******************************************************************************************************
Public Function EntSQLGLCCDpCOMCreditGLRange(Company$, TheYear%, ThePeriod%, TheCcy%, GLCodes As Range, CCCode$, DpCode$) As Variant
Attribute EntSQLGLCCDpCOMCreditGLRange.VB_Description = "This function returns the General Ledger Committed Credit value for the specified Currency, Year, Period, GLCodes, CostCentre and Department."
On Error GoTo EntSQLGLCCDpCOMCreditGLRange_Error
    Dim ErrStr$
    Dim DblVal As Double
    Dim Result%
    Dim stADO As String
    Dim RST As ADODB.Recordset
    Dim stSQL As String
    Dim AddVal As Double
    Dim CurrInv As Boolean
    Dim GLRange As String
    Dim GLRowRange(1000) As Double
    Dim GLCodeRange(1000) As String
    Dim GLValueRange() As Variant
    Dim GLRowCount As Double
    Dim NextRow As Double
    Dim SingleCompany As String
    Dim LPosition As Integer
    
    DoEvents
    
    Result% = 0
    
    DblVal# = 0#
    
    LPosition = 0
    CompStr$ = UCase(Company$)
    LPosition = InStr(CompStr$, ",")
    
    If LPosition <> 0 Then
        Company$ = Left(CompStr$, LPosition - 1)
    End If
    
    If ValidCompany(Company$) And ValidYear(TheYear) And ValidPeriod(ThePeriod) And ValidCcy(TheCcy%) Then
        If LocalCheckServer() Then
            
            'Check User Permissions for all companies
            CompanyList = Split(CompStr$, ",")
            For NoCompanies = 0 To UBound(CompanyList)
                Result = EntServer.CheckUserPermission(CompanyList(NoCompanies), 487)
                
                If Result <> 0 Then
                    Error Result
                    GoTo EntSQLGLCCDpCOMCreditGLRange_Error
                End If
            Next NoCompanies
            
            GLRowCount = 1
            
            For Each GLCodes In GLCodes.Rows
                
                If CStr(GLCodes.Value) <> "" And (GLCodes.Value > 0 And GLCodes.Value <= 2147483647) Then
                    GLRange = GLRange + CStr(GLCodes.Value) & ","
                    GLRowRange(GLRowCount) = GLCodes.Row
                    GLCodeRange(GLRowCount) = CStr(GLCodes.Value)
                End If
                
                GLRowCount = GLRowCount + 1
            Next
            
            'Correct Row Count
            GLRowCount = GLRowCount - 1
            
            'Remove extra comma off end of csv list
            GLRange = Left(GLRange, Len(GLRange) - 1)
            
            stSQL = "EXEC common.esp_GetNominalValue '" + CompStr$ + "',1," + CStr(TheYear%) + "," + CStr(ThePeriod%) + "," + CStr(TheCcy%) + ",'" + CStr(GLRange) + "','" + CStr(Trim(CCCode$)) + "','" + CStr(Trim(DpCode$)) + "','C',1"

            OpenDBConnection (CompStr$)
            
            With CNT(CurrComp)
                .CommandTimeout = 0
                Set RST = .Execute(stSQL)
            End With
            
            If RST.RecordCount = 0 Then
                EntSQLGLCCDpCOMCreditGLRange = 0
                GoTo EntSQLGLCCDpCOMCreditGLRange_Exit
            End If
            
            ReDim GLValueRange(1 To GLRowCount, 1 To 1)
            
                For NextRow = 1 To GLRowCount
                    If CStr(GLCodeRange(NextRow)) <> "" Then
                        RST.MoveFirst
                        RST.Find ("glCode = " & CStr(GLCodeRange(NextRow)))
                        
                        If Not RST.EOF Then
                            If RST.Fields.Item(1) = 100000511 Then
                                GLValueRange(NextRow, 1) = 0
                            ElseIf RST.Fields.Item(1) = 100000519 Then
                                GLValueRange(NextRow, 1) = 0
                            ElseIf RST.Fields.Item(1) = 100000520 Then
                                GLValueRange(NextRow, 1) = 0
                            Else
                                GLValueRange(NextRow, 1) = RST.Fields.Item(1)
                            End If
                        Else
                            RST.MoveFirst
                            ' Add to avoid summation errors when text error returned
                            GLValueRange(NextRow, 1) = 0
                        End If
                    Else
                        GLValueRange(NextRow, 1) = ""
                    End If
                    
    
                Next
            
            Set RST = Nothing
            
        End If
    End If
    
EntSQLGLCCDpCOMCreditGLRange_Zero:
    EntSQLGLCCDpCOMCreditGLRange = GLValueRange
    
    GoTo EntSQLGLCCDpCOMCreditGLRange_Exit
        
EntSQLGLCCDpCOMCreditGLRange_Error:
    If ErrStr = "" Then ErrStr = GetErrorNumStr
    EntSQLGLCCDpCOMCreditGLRange = ErrStr

EntSQLGLCCDpCOMCreditGLRange_Exit:

End Function

'**************************************************************************************************************
'**                                              DEBIT                                                     **
'**************************************************************************************************************

'*******************************************************************************************************
' Name:        EntSQLGLCOMDebitGLRange
' Description: Gets the General Ledger Debit value for the specified Currency, Year, Period and GLCode
'*******************************************************************************************************
Public Function EntSQLGLCOMDebitGLRange(Company$, TheYear%, ThePeriod%, TheCcy%, GLCodes As Range) As Variant
Attribute EntSQLGLCOMDebitGLRange.VB_Description = "This function returns the General Ledger Committed Debit value for the specified Currency, Year, Period, and GLCodes."
On Error GoTo EntSQLGLCOMDebitGLRange_Error
    Dim ErrStr$
    Dim DblVal As Double
    Dim Result%
    Dim stADO As String
    Dim RST As ADODB.Recordset
    Dim stSQL As String
    Dim AddVal As Double
    Dim CurrInv As Boolean
    Dim GLRange As String
    Dim GLRowRange(1000) As Double
    Dim GLCodeRange(1000) As String
    Dim GLValueRange() As Variant
    Dim GLRowCount As Double
    Dim NextRow As Double
    Dim SingleCompany As String
    Dim LPosition As Integer
    
    DoEvents
    
    Result% = 0
    
    DblVal# = 0#
    
    LPosition = 0
    CompStr$ = UCase(Company$)
    LPosition = InStr(CompStr$, ",")
    
    If LPosition <> 0 Then
        Company$ = Left(CompStr$, LPosition - 1)
    End If
    
    If ValidCompany(Company$) And ValidYear(TheYear) And ValidPeriod(ThePeriod) And ValidCcy(TheCcy%) Then
        If LocalCheckServer() Then
            
            'Check User Permissions for all companies
            CompanyList = Split(CompStr$, ",")
            For NoCompanies = 0 To UBound(CompanyList)
                Result = EntServer.CheckUserPermission(CompanyList(NoCompanies), 487)
                
                If Result <> 0 Then
                    Error Result
                    GoTo EntSQLGLCOMDebitGLRange_Error
                End If
            Next NoCompanies
            
            GLRowCount = 1
            
            For Each GLCodes In GLCodes.Rows
                
                If CStr(GLCodes.Value) <> "" And (GLCodes.Value > 0 And GLCodes.Value <= 2147483647) Then
                    GLRange = GLRange + CStr(GLCodes.Value) & ","
                    GLRowRange(GLRowCount) = GLCodes.Row
                    GLCodeRange(GLRowCount) = CStr(GLCodes.Value)
                End If
                
                GLRowCount = GLRowCount + 1
            Next
            
            'Correct Row Count
            GLRowCount = GLRowCount - 1
            
            'Remove extra comma off end of csv list
            GLRange = Left(GLRange, Len(GLRange) - 1)
            
            stSQL = "EXEC common.esp_GetNominalValue '" + CompStr$ + "',2," + CStr(TheYear%) + "," + CStr(ThePeriod%) + "," + CStr(TheCcy%) + ",'" + CStr(GLRange) + "','','','',1"
        
            OpenDBConnection (CompStr$)
            
            With CNT(CurrComp)
                .CommandTimeout = 0
                Set RST = .Execute(stSQL)
            End With
            
            If RST.RecordCount = 0 Then
                EntSQLGLCOMDebitGLRange = 0
                GoTo EntSQLGLCOMDebitGLRange_Exit
            End If
            
            ReDim GLValueRange(1 To GLRowCount, 1 To 1)
            
                For NextRow = 1 To GLRowCount
                    If CStr(GLCodeRange(NextRow)) <> "" Then
                        RST.MoveFirst
                        RST.Find ("glCode = " & CStr(GLCodeRange(NextRow)))
                        
                        If Not RST.EOF Then
                            If RST.Fields.Item(1) = 100000511 Then
                                GLValueRange(NextRow, 1) = 0
                            ElseIf RST.Fields.Item(1) = 100000519 Then
                                GLValueRange(NextRow, 1) = 0
                            ElseIf RST.Fields.Item(1) = 100000520 Then
                                GLValueRange(NextRow, 1) = 0
                            Else
                                GLValueRange(NextRow, 1) = RST.Fields.Item(1)
                            End If
                        Else
                            RST.MoveFirst
                            ' Add to avoid summation errors when text error returned
                            GLValueRange(NextRow, 1) = 0
                        End If
                    Else
                        GLValueRange(NextRow, 1) = ""
                    End If
                    
    
                Next
            
            Set RST = Nothing
            
        End If
    End If
    
EntSQLGLCOMDebitGLRange_Zero:
    EntSQLGLCOMDebitGLRange = GLValueRange
    
    GoTo EntSQLGLCOMDebitGLRange_Exit
        
EntSQLGLCOMDebitGLRange_Error:
    If ErrStr = "" Then ErrStr = GetErrorNumStr
    EntSQLGLCOMDebitGLRange = ErrStr

EntSQLGLCOMDebitGLRange_Exit:

End Function

'*******************************************************************************************************
' Name:        EntSQLGLCCCOMDebitGLRange
' Description: Gets the General Ledger Debit values for the specified Currency, Year, Period, CC and GLCodes
'*******************************************************************************************************
Public Function EntSQLGLCCCOMDebitGLRange(Company$, TheYear%, ThePeriod%, TheCcy%, GLCodes As Range, CCCode$) As Variant
Attribute EntSQLGLCCCOMDebitGLRange.VB_Description = "This function returns the General Ledger Committed Debit value for the specified Currency, Year, Period, GLCodes and CostCentre."
On Error GoTo EntSQLGLCCCOMDebitGLRange_Error
    Dim ErrStr$
    Dim DblVal As Double
    Dim Result%
    Dim stADO As String
    Dim RST As ADODB.Recordset
    Dim stSQL As String
    Dim AddVal As Double
    Dim CurrInv As Boolean
    Dim GLRange As String
    Dim GLRowRange(1000) As Double
    Dim GLCodeRange(1000) As String
    Dim GLValueRange() As Variant
    Dim GLRowCount As Double
    Dim NextRow As Double
    Dim SingleCompany As String
    Dim LPosition As Integer
    
    DoEvents
    
    Result% = 0
    
    DblVal# = 0#
    
    LPosition = 0
    CompStr$ = UCase(Company$)
    LPosition = InStr(CompStr$, ",")
    
    If LPosition <> 0 Then
        Company$ = Left(CompStr$, LPosition - 1)
    End If
    
    If ValidCompany(Company$) And ValidYear(TheYear) And ValidPeriod(ThePeriod) And ValidCcy(TheCcy%) Then
        If LocalCheckServer() Then
            
            'Check User Permissions for all companies
            CompanyList = Split(CompStr$, ",")
            For NoCompanies = 0 To UBound(CompanyList)
                Result = EntServer.CheckUserPermission(CompanyList(NoCompanies), 487)
                
                If Result <> 0 Then
                    Error Result
                    GoTo EntSQLGLCCCOMDebitGLRange_Error
                End If
            Next NoCompanies
            
            GLRowCount = 1
            
            For Each GLCodes In GLCodes.Rows
                
                If CStr(GLCodes.Value) <> "" And (GLCodes.Value > 0 And GLCodes.Value <= 2147483647) Then
                    GLRange = GLRange + CStr(GLCodes.Value) & ","
                    GLRowRange(GLRowCount) = GLCodes.Row
                    GLCodeRange(GLRowCount) = CStr(GLCodes.Value)
                End If
                
                GLRowCount = GLRowCount + 1
            Next
            
            'Correct Row Count
            GLRowCount = GLRowCount - 1
            
            'Remove extra comma off end of csv list
            GLRange = Left(GLRange, Len(GLRange) - 1)
            
            stSQL = "EXEC common.esp_GetNominalValue '" + CompStr$ + "',2," + CStr(TheYear%) + "," + CStr(ThePeriod%) + "," + CStr(TheCcy%) + ",'" + CStr(GLRange) + "','" + CStr(Trim(CCCode$)) + "','','C',1"

            OpenDBConnection (CompStr$)
            
            With CNT(CurrComp)
                .CommandTimeout = 0
                Set RST = .Execute(stSQL)
            End With
            
            If RST.RecordCount = 0 Then
                EntSQLGLCCCOMDebitGLRange = 0
                GoTo EntSQLGLCCCOMDebitGLRange_Exit
            End If
            
            ReDim GLValueRange(1 To GLRowCount, 1 To 1)
            
                For NextRow = 1 To GLRowCount
                    If CStr(GLCodeRange(NextRow)) <> "" Then
                        RST.MoveFirst
                        RST.Find ("glCode = " & CStr(GLCodeRange(NextRow)))
                        
                        If Not RST.EOF Then
                            If RST.Fields.Item(1) = 100000511 Then
                                GLValueRange(NextRow, 1) = 0
                            ElseIf RST.Fields.Item(1) = 100000519 Then
                                GLValueRange(NextRow, 1) = 0
                            ElseIf RST.Fields.Item(1) = 100000520 Then
                                GLValueRange(NextRow, 1) = 0
                            Else
                                GLValueRange(NextRow, 1) = RST.Fields.Item(1)
                            End If
                        Else
                            RST.MoveFirst
                            ' Add to avoid summation errors when text error returned
                            GLValueRange(NextRow, 1) = 0
                        End If
                    Else
                        GLValueRange(NextRow, 1) = ""
                    End If
                    
    
                Next
            
            Set RST = Nothing
            
        End If
    End If
    
EntSQLGLCCCOMDebitGLRange_Zero:
    EntSQLGLCCCOMDebitGLRange = GLValueRange
    
    GoTo EntSQLGLCCCOMDebitGLRange_Exit
        
EntSQLGLCCCOMDebitGLRange_Error:
    If ErrStr = "" Then ErrStr = GetErrorNumStr
    EntSQLGLCCCOMDebitGLRange = ErrStr

EntSQLGLCCCOMDebitGLRange_Exit:

End Function


'*******************************************************************************************************
' Name:        EntSQLGLDpCOMDebitGLRange
' Description: Gets the General Ledger Debit values for the specified Currency, Year, Period, Dp and GLCodes
'*******************************************************************************************************
Public Function EntSQLGLDpCOMDebitGLRange(Company$, TheYear%, ThePeriod%, TheCcy%, GLCodes As Range, DpCode$) As Variant
Attribute EntSQLGLDpCOMDebitGLRange.VB_Description = "This function returns the General Ledger Committed Debit value for the specified Currency, Year, Period, GLCodes and Department."
On Error GoTo EntSQLGLDpCOMDebitGLRange_Error
    Dim ErrStr$
    Dim DblVal As Double
    Dim Result%
    Dim stADO As String
    Dim RST As ADODB.Recordset
    Dim stSQL As String
    Dim AddVal As Double
    Dim CurrInv As Boolean
    Dim GLRange As String
    Dim GLRowRange(1000) As Double
    Dim GLCodeRange(1000) As String
    Dim GLValueRange() As Variant
    Dim GLRowCount As Double
    Dim NextRow As Double
    Dim SingleCompany As String
    Dim LPosition As Integer
    
    DoEvents
    
    Result% = 0
    
    DblVal# = 0#
    
    LPosition = 0
    CompStr$ = UCase(Company$)
    LPosition = InStr(CompStr$, ",")
    
    If LPosition <> 0 Then
        Company$ = Left(CompStr$, LPosition - 1)
    End If
    
    If ValidCompany(Company$) And ValidYear(TheYear) And ValidPeriod(ThePeriod) And ValidCcy(TheCcy%) Then
        If LocalCheckServer() Then
            
            'Check User Permissions for all companies
            CompanyList = Split(CompStr$, ",")
            For NoCompanies = 0 To UBound(CompanyList)
                Result = EntServer.CheckUserPermission(CompanyList(NoCompanies), 487)
                
                If Result <> 0 Then
                    Error Result
                    GoTo EntSQLGLDpCOMDebitGLRange_Error
                End If
            Next NoCompanies
            
            GLRowCount = 1
            
            For Each GLCodes In GLCodes.Rows
                
                If CStr(GLCodes.Value) <> "" And (GLCodes.Value > 0 And GLCodes.Value <= 2147483647) Then
                    GLRange = GLRange + CStr(GLCodes.Value) & ","
                    GLRowRange(GLRowCount) = GLCodes.Row
                    GLCodeRange(GLRowCount) = CStr(GLCodes.Value)
                End If
                
                GLRowCount = GLRowCount + 1
            Next
            
            'Correct Row Count
            GLRowCount = GLRowCount - 1
            
            'Remove extra comma off end of csv list
            GLRange = Left(GLRange, Len(GLRange) - 1)
            
            stSQL = "EXEC common.esp_GetNominalValue '" + CompStr$ + "',2," + CStr(TheYear%) + "," + CStr(ThePeriod%) + "," + CStr(TheCcy%) + ",'" + CStr(GLRange) + "','','" + CStr(Trim(DpCode$)) + "','D',1"

            OpenDBConnection (CompStr$)
            
            With CNT(CurrComp)
                .CommandTimeout = 0
                Set RST = .Execute(stSQL)
            End With
            
            If RST.RecordCount = 0 Then
                EntSQLGLDpCOMDebitGLRange = 0
                GoTo EntSQLGLDpCOMDebitGLRange_Exit
            End If
            
            ReDim GLValueRange(1 To GLRowCount, 1 To 1)
            
                For NextRow = 1 To GLRowCount
                    If CStr(GLCodeRange(NextRow)) <> "" Then
                        RST.MoveFirst
                        RST.Find ("glCode = " & CStr(GLCodeRange(NextRow)))
                        
                        If Not RST.EOF Then
                            If RST.Fields.Item(1) = 100000511 Then
                                GLValueRange(NextRow, 1) = 0
                            ElseIf RST.Fields.Item(1) = 100000519 Then
                                GLValueRange(NextRow, 1) = 0
                            ElseIf RST.Fields.Item(1) = 100000520 Then
                                GLValueRange(NextRow, 1) = 0
                            Else
                                GLValueRange(NextRow, 1) = RST.Fields.Item(1)
                            End If
                        Else
                            RST.MoveFirst
                            ' Add to avoid summation errors when text error returned
                            GLValueRange(NextRow, 1) = 0
                        End If
                    Else
                        GLValueRange(NextRow, 1) = ""
                    End If
                    
    
                Next
            
            Set RST = Nothing
            
        End If
    End If
    
EntSQLGLDpCOMDebitGLRange_Zero:
    EntSQLGLDpCOMDebitGLRange = GLValueRange
    
    GoTo EntSQLGLDpCOMDebitGLRange_Exit
        
EntSQLGLDpCOMDebitGLRange_Error:
    If ErrStr = "" Then ErrStr = GetErrorNumStr
    EntSQLGLDpCOMDebitGLRange = ErrStr

EntSQLGLDpCOMDebitGLRange_Exit:

End Function


'*******************************************************************************************************
' Name:        EntSQLGLCCDpCOMDebitGLRange
' Description: Gets the General Ledger Debit values for the specified Currency, Year, Period, CC, Dp and GLCodes
'*******************************************************************************************************
Public Function EntSQLGLCCDpCOMDebitGLRange(Company$, TheYear%, ThePeriod%, TheCcy%, GLCodes As Range, CCCode$, DpCode$) As Variant
Attribute EntSQLGLCCDpCOMDebitGLRange.VB_Description = "This function returns the General Ledger Committed Debit value for the specified Currency, Year, Period, GLCodes, CostCentre and Department."
On Error GoTo EntSQLGLCCDpCOMDebitGLRange_Error
    Dim ErrStr$
    Dim DblVal As Double
    Dim Result%
    Dim stADO As String
    Dim RST As ADODB.Recordset
    Dim stSQL As String
    Dim AddVal As Double
    Dim CurrInv As Boolean
    Dim GLRange As String
    Dim GLRowRange(1000) As Double
    Dim GLCodeRange(1000) As String
    Dim GLValueRange() As Variant
    Dim GLRowCount As Double
    Dim NextRow As Double
    Dim SingleCompany As String
    Dim LPosition As Integer
    
    DoEvents
    
    Result% = 0
    
    DblVal# = 0#
    
    LPosition = 0
    CompStr$ = UCase(Company$)
    LPosition = InStr(CompStr$, ",")
    
    If LPosition <> 0 Then
        Company$ = Left(CompStr$, LPosition - 1)
    End If
    
    If ValidCompany(Company$) And ValidYear(TheYear) And ValidPeriod(ThePeriod) And ValidCcy(TheCcy%) Then
        If LocalCheckServer() Then
            
            'Check User Permissions for all companies
            CompanyList = Split(CompStr$, ",")
            For NoCompanies = 0 To UBound(CompanyList)
                Result = EntServer.CheckUserPermission(CompanyList(NoCompanies), 487)
                
                If Result <> 0 Then
                    Error Result
                    GoTo EntSQLGLCCDpCOMDebitGLRange_Error
                End If
            Next NoCompanies
            
            GLRowCount = 1
            
            For Each GLCodes In GLCodes.Rows
                
                If CStr(GLCodes.Value) <> "" And (GLCodes.Value > 0 And GLCodes.Value <= 2147483647) Then
                    GLRange = GLRange + CStr(GLCodes.Value) & ","
                    GLRowRange(GLRowCount) = GLCodes.Row
                    GLCodeRange(GLRowCount) = CStr(GLCodes.Value)
                End If
                
                GLRowCount = GLRowCount + 1
            Next
            
            'Correct Row Count
            GLRowCount = GLRowCount - 1
            
            'Remove extra comma off end of csv list
            GLRange = Left(GLRange, Len(GLRange) - 1)
            
            stSQL = "EXEC common.esp_GetNominalValue '" + CompStr$ + "',2," + CStr(TheYear%) + "," + CStr(ThePeriod%) + "," + CStr(TheCcy%) + ",'" + CStr(GLRange) + "','" + CStr(Trim(CCCode$)) + "','" + CStr(Trim(DpCode$)) + "','C',1"

            OpenDBConnection (CompStr$)
            
            With CNT(CurrComp)
                .CommandTimeout = 0
                Set RST = .Execute(stSQL)
            End With
            
            If RST.RecordCount = 0 Then
                EntSQLGLCCDpCOMDebitGLRange = 0
                GoTo EntSQLGLCCDpCOMDebitGLRange_Exit
            End If
            
            ReDim GLValueRange(1 To GLRowCount, 1 To 1)
            
                For NextRow = 1 To GLRowCount
                    If CStr(GLCodeRange(NextRow)) <> "" Then
                        RST.MoveFirst
                        RST.Find ("glCode = " & CStr(GLCodeRange(NextRow)))
                        
                        If Not RST.EOF Then
                            If RST.Fields.Item(1) = 100000511 Then
                                GLValueRange(NextRow, 1) = 0
                            ElseIf RST.Fields.Item(1) = 100000519 Then
                                GLValueRange(NextRow, 1) = 0
                            ElseIf RST.Fields.Item(1) = 100000520 Then
                                GLValueRange(NextRow, 1) = 0
                            Else
                                GLValueRange(NextRow, 1) = RST.Fields.Item(1)
                            End If
                        Else
                            RST.MoveFirst
                            ' Add to avoid summation errors when text error returned
                            GLValueRange(NextRow, 1) = 0
                        End If
                    Else
                        GLValueRange(NextRow, 1) = ""
                    End If
                    
    
                Next
            
            Set RST = Nothing
            
        End If
    End If
    
EntSQLGLCCDpCOMDebitGLRange_Zero:
    EntSQLGLCCDpCOMDebitGLRange = GLValueRange
    
    GoTo EntSQLGLCCDpCOMDebitGLRange_Exit
        
EntSQLGLCCDpCOMDebitGLRange_Error:
    If ErrStr = "" Then ErrStr = GetErrorNumStr
    EntSQLGLCCDpCOMDebitGLRange = ErrStr

EntSQLGLCCDpCOMDebitGLRange_Exit:

End Function
Attribute VB_Name = "GLGetCCRanges"
Option Explicit
Public Message As String

'*******************************************************************************************************
' Name:        EntSQLGLCCActualCCRange
' Description: Gets the General Ledger Actual values for the specified Currency, Year, Period, CCs and GLCode
'*******************************************************************************************************
Public Function EntSQLGLCCActualCCRange(Company$, TheYear%, ThePeriod%, TheCcy%, GLCode As Long, CCCodes As Range) As Variant
Attribute EntSQLGLCCActualCCRange.VB_Description = "This function returns the General Ledger Actual value for the specified Currency, Year, Period, GLCode and CostCentres."
On Error GoTo EntSQLGLCCActualCCRange_Error
    Dim ErrStr$
    Dim DblVal As Double
    Dim Result%
    Dim stADO As String
    Dim RST As ADODB.Recordset
    Dim stSQL As String
    Dim AddVal As Double
    Dim CurrInv As Boolean
    Dim CCRange As String
    Dim CCRowRange(1000) As Double
    Dim CCCodeRange(1000) As String
    Dim CCValueRange() As Variant
    Dim CCRowCount As Double
    Dim NextRow As Double
    
    DoEvents
    
    Result% = 0
    
    DblVal# = 0#
    
    CompStr$ = UCase(Company$)
    
    If ValidCompany(Company) And ValidYear(TheYear) And ValidPeriod(ThePeriod) And ValidCcy(TheCcy%) And ValidGLCode(GLCode) Then
        If LocalCheckServer() Then
            
            'Check User Permissions
            Result = EntServer.CheckUserPermission(Company$, 487)
            
            If Result <> 0 Then
                Error Result
                GoTo EntSQLGLCCActualCCRange_Error
            End If
            
            'Concatenate CC Range into CSV for passing to SQL select statement
            CCRowCount = 1
            
            For Each CCCodes In CCCodes.Rows
                
                If CStr(CCCodes.Value) <> "" Then
                    CCRange = CCRange + CStr(CCCodes.Value) & "','"
                    CCRowRange(CCRowCount) = CCCodes.Row
                    CCCodeRange(CCRowCount) = CStr(CCCodes.Value)
                End If
                
                CCRowCount = CCRowCount + 1
            Next
            
            'Correct Row Count
            CCRowCount = CCRowCount - 1
            
            'Remove extra comma off end of csv list
            CCRange = Left(CCRange, Len(CCRange) - 2)
            
            CCRange = "'" & CCRange
            
            stSQL = "SELECT EXCHQCHKcode1Trans1," + CStr(Trim(CompStr$)) + ".ifn_GetNominalValue(3, " + CStr(TheYear%) + "," + CStr(ThePeriod%) + "," + CStr(TheCcy%) + "," + CStr(GLCode) + ",EXCHQCHKcode1Trans1,'','C',0)" & _
                    "FROM " + CStr(Trim(CompStr$)) + ".EXCHQCHK WHERE (RecPfix = 'C' AND SubType = 67) AND EXCHQCHKcode1Trans1 IN (" & CStr(CCRange) & ")"
            
            OpenDBConnection (CompStr$)
            
            With CNT(CurrComp)
                .CommandTimeout = 0
                Set RST = .Execute(stSQL)
            End With
            
            If RST.RecordCount = 0 Then
                EntSQLGLCCActualCCRange = 0
                GoTo EntSQLGLCCActualCCRange_Exit
            End If
            
            ReDim CCValueRange(1 To CCRowCount, 1 To 1)
            
                For NextRow = 1 To CCRowCount
                    If CStr(CCCodeRange(NextRow)) <> "" Then
                        RST.MoveFirst
                        RST.Find ("EXCHQCHKcode1Trans1 = '" & CStr(CCCodeRange(NextRow))) & "'"
                        
                        If Not RST.EOF Then
                            If RST.Fields.Item(1) = 100000511 Then
                                CCValueRange(NextRow, 1) = 0
                            ElseIf RST.Fields.Item(1) = 100000519 Then
                                CCValueRange(NextRow, 1) = 0
                            ElseIf RST.Fields.Item(1) = 100000520 Then
                                CCValueRange(NextRow, 1) = 0
                            Else
                                CCValueRange(NextRow, 1) = RST.Fields.Item(1)
                            End If
                        Else
                            RST.MoveFirst
                            ' Add to avoid summation errors when text error returned
                            CCValueRange(NextRow, 1) = 0
                        End If
                    Else
                        CCValueRange(NextRow, 1) = ""
                    End If
                    
    
                Next
            
            Set RST = Nothing
            
        End If
    End If
    
EntSQLGLCCActualCCRange_Zero:
    EntSQLGLCCActualCCRange = CCValueRange
    
    GoTo EntSQLGLCCActualCCRange_Exit
        
EntSQLGLCCActualCCRange_Error:
    If ErrStr = "" Then ErrStr = GetErrorNumStr
    EntSQLGLCCActualCCRange = ErrStr

EntSQLGLCCActualCCRange_Exit:

End Function

'*******************************************************************************************************
' Name:        EntSQLGLCCDpActualCCRange
' Description: Gets the General Ledger Actual values for the specified Currency, Year, Period, CCs, Dp and GLCode
'*******************************************************************************************************
Public Function EntSQLGLCCDpActualCCRange(Company$, TheYear%, ThePeriod%, TheCcy%, GLCode As Long, CCCodes As Range, DpCode$) As Variant
Attribute EntSQLGLCCDpActualCCRange.VB_Description = "This function returns the General Ledger Actual value for the specified Currency, Year, Period, GLCode CostCentres and Department."
On Error GoTo EntSQLGLCCDpActualCCRange_Error
    Dim ErrStr$
    Dim DblVal As Double
    Dim Result%
    Dim stADO As String
    Dim RST As ADODB.Recordset
    Dim stSQL As String
    Dim AddVal As Double
    Dim CurrInv As Boolean
    Dim CCRange As String
    Dim CCRowRange(1000) As Double
    Dim CCCodeRange(1000) As String
    Dim CCValueRange() As Variant
    Dim CCRowCount As Double
    Dim NextRow As Double
    
    DoEvents
    
    Result% = 0
    
    DblVal# = 0#
    
    CompStr$ = UCase(Company$)
    
    If ValidCompany(Company) And ValidYear(TheYear) And ValidPeriod(ThePeriod) And ValidCcy(TheCcy%) And ValidGLCode(CStr(GLCode)) And ValidCCDep(False, DpCode$) Then
        If LocalCheckServer() Then
            
            'Check User Permissions
            Result = EntServer.CheckUserPermission(Company$, 487)
            
            If Result <> 0 Then
                Error Result
                GoTo EntSQLGLCCDpActualCCRange_Error
            End If
            
            'Concatenate CC Range into CSV for passing to SQL select statement
            CCRowCount = 1
            
            For Each CCCodes In CCCodes.Rows
                
                If CStr(CCCodes.Value) <> "" Then
                    CCRange = CCRange + CStr(CCCodes.Value) & "','"
                    CCRowRange(CCRowCount) = CCCodes.Row
                    CCCodeRange(CCRowCount) = CStr(CCCodes.Value)
                End If
                
                CCRowCount = CCRowCount + 1
            Next
            
            'Correct Row Count
            CCRowCount = CCRowCount - 1
            
            'Remove extra comma off end of csv list
            CCRange = Left(CCRange, Len(CCRange) - 2)
            
            CCRange = "'" & CCRange
            
            stSQL = "SELECT EXCHQCHKcode1Trans1," + CStr(Trim(CompStr$)) + ".ifn_GetNominalValue(3, " + CStr(TheYear%) + "," + CStr(ThePeriod%) + "," + CStr(TheCcy%) + "," + CStr(GLCode) + ",EXCHQCHKcode1Trans1,'" + CStr(Trim(DpCode$)) + "','C',0) " & _
                    "FROM " + CStr(Trim(CompStr$)) + ".EXCHQCHK WHERE (RecPfix = 'C' AND SubType = 67) AND EXCHQCHKcode1Trans1 IN (" & CStr(CCRange) & ")"
            
            OpenDBConnection (CompStr$)
            
            With CNT(CurrComp)
                .CommandTimeout = 0
                Set RST = .Execute(stSQL)
            End With
            
            If RST.RecordCount = 0 Then
                EntSQLGLCCDpActualCCRange = 0
                GoTo EntSQLGLCCDpActualCCRange_Exit
            End If
            
            ReDim CCValueRange(1 To CCRowCount, 1 To 1)
            
                For NextRow = 1 To CCRowCount
                    If CStr(CCCodeRange(NextRow)) <> "" Then
                        RST.MoveFirst
                        RST.Find ("EXCHQCHKcode1Trans1 = '" & CStr(CCCodeRange(NextRow))) & "'"
                        
                        If Not RST.EOF Then
                            If RST.Fields.Item(1) = 100000511 Then
                                CCValueRange(NextRow, 1) = 0
                            ElseIf RST.Fields.Item(1) = 100000519 Then
                                CCValueRange(NextRow, 1) = 0
                            ElseIf RST.Fields.Item(1) = 100000520 Then
                                CCValueRange(NextRow, 1) = 0
                            Else
                                CCValueRange(NextRow, 1) = RST.Fields.Item(1)
                            End If
                        Else
                            RST.MoveFirst
                            ' Add to avoid summation errors when text error returned
                            CCValueRange(NextRow, 1) = 0
                        End If
                    Else
                        CCValueRange(NextRow, 1) = ""
                    End If
                    
    
                Next
            
            Set RST = Nothing
            
        End If
    End If
    
EntSQLGLCCDpActualCCRange_Zero:
    EntSQLGLCCDpActualCCRange = CCValueRange
    
    GoTo EntSQLGLCCDpActualCCRange_Exit
        
EntSQLGLCCDpActualCCRange_Error:
    If ErrStr = "" Then ErrStr = GetErrorNumStr
    EntSQLGLCCDpActualCCRange = ErrStr

EntSQLGLCCDpActualCCRange_Exit:

End Function

'**************************************************************************************************************
'**                                              BUDGET                                                      **
'**************************************************************************************************************

'*******************************************************************************************************
' Name:        EntSQLGLCCBudgetCCRange
' Description: Gets the General Ledger Budget values for the specified Currency, Year, Period, CCs and GLCode
'*******************************************************************************************************
Public Function EntSQLGLCCBudgetCCRange(Company$, TheYear%, ThePeriod%, TheCcy%, GLCode As Long, CCCodes As Range) As Variant
Attribute EntSQLGLCCBudgetCCRange.VB_Description = "This function returns the General Ledger Budget value for the specified Currency, Year, Period, GLCode and CostCentres."
On Error GoTo EntSQLGLCCBudgetCCRange_Error
    Dim ErrStr$
    Dim DblVal As Double
    Dim Result%
    Dim stADO As String
    Dim RST As ADODB.Recordset
    Dim stSQL As String
    Dim AddVal As Double
    Dim CurrInv As Boolean
    Dim CCRange As String
    Dim CCRowRange(1000) As Double
    Dim CCCodeRange(1000) As String
    Dim CCValueRange() As Variant
    Dim CCRowCount As Double
    Dim NextRow As Double
    
    DoEvents
    
    Result% = 0
    
    DblVal# = 0#
    
    CompStr$ = UCase(Company$)
    
    If ValidCompany(Company) And ValidYear(TheYear) And ValidPeriod(ThePeriod) And ValidCcy(TheCcy%) And ValidGLCode(GLCode) Then
        If LocalCheckServer() Then
            
            'Check User Permissions
            Result = EntServer.CheckUserPermission(Company$, 487)
            
            If Result <> 0 Then
                Error Result
                GoTo EntSQLGLCCBudgetCCRange_Error
            End If
            
            'Concatenate CC Range into CSV for passing to SQL select statement
            CCRowCount = 1
            
            For Each CCCodes In CCCodes.Rows
                
                If CStr(CCCodes.Value) <> "" Then
                    CCRange = CCRange + CStr(CCCodes.Value) & "','"
                    CCRowRange(CCRowCount) = CCCodes.Row
                    CCCodeRange(CCRowCount) = CStr(CCCodes.Value)
                End If
                
                CCRowCount = CCRowCount + 1
            Next
            
            'Correct Row Count
            CCRowCount = CCRowCount - 1
            
            'Remove extra comma off end of csv list
            CCRange = Left(CCRange, Len(CCRange) - 2)
            
            CCRange = "'" & CCRange
            
            stSQL = "SELECT EXCHQCHKcode1Trans1," + CStr(Trim(CompStr$)) + ".ifn_GetNominalValue(4, " + CStr(TheYear%) + "," + CStr(ThePeriod%) + "," + CStr(TheCcy%) + "," + CStr(GLCode) + ",EXCHQCHKcode1Trans1,'','C',0)" & _
                    "FROM " + CStr(Trim(CompStr$)) + ".EXCHQCHK WHERE (RecPfix = 'C' AND SubType = 67) AND EXCHQCHKcode1Trans1 IN (" & CStr(CCRange) & ")"
            
            OpenDBConnection (CompStr$)
            
            With CNT(CurrComp)
                .CommandTimeout = 0
                Set RST = .Execute(stSQL)
            End With
            
            If RST.RecordCount = 0 Then
                EntSQLGLCCBudgetCCRange = 0
                GoTo EntSQLGLCCBudgetCCRange_Exit
            End If
            
            ReDim CCValueRange(1 To CCRowCount, 1 To 1)
            
                For NextRow = 1 To CCRowCount
                    If CStr(CCCodeRange(NextRow)) <> "" Then
                        RST.MoveFirst
                        RST.Find ("EXCHQCHKcode1Trans1 = '" & CStr(CCCodeRange(NextRow))) & "'"
                        
                        If Not RST.EOF Then
                            If RST.Fields.Item(1) = 100000511 Then
                                CCValueRange(NextRow, 1) = 0
                            ElseIf RST.Fields.Item(1) = 100000519 Then
                                CCValueRange(NextRow, 1) = 0
                            ElseIf RST.Fields.Item(1) = 100000520 Then
                                CCValueRange(NextRow, 1) = 0
                            Else
                                CCValueRange(NextRow, 1) = RST.Fields.Item(1)
                            End If
                        Else
                            RST.MoveFirst
                            ' Add to avoid summation errors when text error returned
                            CCValueRange(NextRow, 1) = 0
                        End If
                    Else
                        CCValueRange(NextRow, 1) = ""
                    End If
                    
    
                Next
            
            Set RST = Nothing
            
        End If
    End If
    
EntSQLGLCCBudgetCCRange_Zero:
    EntSQLGLCCBudgetCCRange = CCValueRange
    
    GoTo EntSQLGLCCBudgetCCRange_Exit
        
EntSQLGLCCBudgetCCRange_Error:
    If ErrStr = "" Then ErrStr = GetErrorNumStr
    EntSQLGLCCBudgetCCRange = ErrStr

EntSQLGLCCBudgetCCRange_Exit:

End Function

'*******************************************************************************************************
' Name:        EntSQLGLCCDpBudgetCCRange
' Description: Gets the General Ledger Budget values for the specified Currency, Year, Period, CCs, Dp and GLCode
'*******************************************************************************************************
Public Function EntSQLGLCCDpBudgetCCRange(Company$, TheYear%, ThePeriod%, TheCcy%, GLCode As Long, CCCodes As Range, DpCode$) As Variant
Attribute EntSQLGLCCDpBudgetCCRange.VB_Description = "This function returns the General Ledger Budget value for the specified Currency, Year, Period, GLCode CostCentres and Department."
On Error GoTo EntSQLGLCCDpBudgetCCRange_Error
    Dim ErrStr$
    Dim DblVal As Double
    Dim Result%
    Dim stADO As String
    Dim RST As ADODB.Recordset
    Dim stSQL As String
    Dim AddVal As Double
    Dim CurrInv As Boolean
    Dim CCRange As String
    Dim CCRowRange(1000) As Double
    Dim CCCodeRange(1000) As String
    Dim CCValueRange() As Variant
    Dim CCRowCount As Double
    Dim NextRow As Double
    
    DoEvents
    
    Result% = 0
    
    DblVal# = 0#
    
    CompStr$ = UCase(Company$)
    
    If ValidCompany(Company) And ValidYear(TheYear) And ValidPeriod(ThePeriod) And ValidCcy(TheCcy%) And ValidGLCode(CStr(GLCode)) And ValidCCDep(False, DpCode$) Then
        If LocalCheckServer() Then
            
            'Check User Permissions
            Result = EntServer.CheckUserPermission(Company$, 487)
            
            If Result <> 0 Then
                Error Result
                GoTo EntSQLGLCCDpBudgetCCRange_Error
            End If
            
            'Concatenate CC Range into CSV for passing to SQL select statement
            CCRowCount = 1
            
            For Each CCCodes In CCCodes.Rows
                
                If CStr(CCCodes.Value) <> "" Then
                    CCRange = CCRange + CStr(CCCodes.Value) & "','"
                    CCRowRange(CCRowCount) = CCCodes.Row
                    CCCodeRange(CCRowCount) = CStr(CCCodes.Value)
                End If
                
                CCRowCount = CCRowCount + 1
            Next
            
            'Correct Row Count
            CCRowCount = CCRowCount - 1
            
            'Remove extra comma off end of csv list
            CCRange = Left(CCRange, Len(CCRange) - 2)
            
            CCRange = "'" & CCRange
            
            stSQL = "SELECT EXCHQCHKcode1Trans1," + CStr(Trim(CompStr$)) + ".ifn_GetNominalValue(4, " + CStr(TheYear%) + "," + CStr(ThePeriod%) + "," + CStr(TheCcy%) + "," + CStr(GLCode) + ",EXCHQCHKcode1Trans1,'" + CStr(Trim(DpCode$)) + "','C',0) " & _
                    "FROM " + CStr(Trim(CompStr$)) + ".EXCHQCHK WHERE (RecPfix = 'C' AND SubType = 67) AND EXCHQCHKcode1Trans1 IN (" & CStr(CCRange) & ")"
            
            OpenDBConnection (CompStr$)
            
            With CNT(CurrComp)
                .CommandTimeout = 0
                Set RST = .Execute(stSQL)
            End With
            
            If RST.RecordCount = 0 Then
                EntSQLGLCCDpBudgetCCRange = 0
                GoTo EntSQLGLCCDpBudgetCCRange_Exit
            End If
            
            ReDim CCValueRange(1 To CCRowCount, 1 To 1)
            
                For NextRow = 1 To CCRowCount
                    If CStr(CCCodeRange(NextRow)) <> "" Then
                        RST.MoveFirst
                        RST.Find ("EXCHQCHKcode1Trans1 = '" & CStr(CCCodeRange(NextRow))) & "'"
                        
                        If Not RST.EOF Then
                            If RST.Fields.Item(1) = 100000511 Then
                                CCValueRange(NextRow, 1) = 0
                            ElseIf RST.Fields.Item(1) = 100000519 Then
                                CCValueRange(NextRow, 1) = 0
                            ElseIf RST.Fields.Item(1) = 100000520 Then
                                CCValueRange(NextRow, 1) = 0
                            Else
                                CCValueRange(NextRow, 1) = RST.Fields.Item(1)
                            End If
                        Else
                            RST.MoveFirst
                            ' Add to avoid summation errors when text error returned
                            CCValueRange(NextRow, 1) = 0
                        End If
                    Else
                        CCValueRange(NextRow, 1) = ""
                    End If
                    
    
                Next
            
            Set RST = Nothing
            
        End If
    End If
    
EntSQLGLCCDpBudgetCCRange_Zero:
    EntSQLGLCCDpBudgetCCRange = CCValueRange
    
    GoTo EntSQLGLCCDpBudgetCCRange_Exit
        
EntSQLGLCCDpBudgetCCRange_Error:
    If ErrStr = "" Then ErrStr = GetErrorNumStr
    EntSQLGLCCDpBudgetCCRange = ErrStr

EntSQLGLCCDpBudgetCCRange_Exit:

End Function

'**************************************************************************************************************
'**                                              BUDGET2                                                     **
'**************************************************************************************************************

'*******************************************************************************************************
' Name:        EntSQLGLCCBudget2CCRange
' Description: Gets the General Ledger Budget2 values for the specified Currency, Year, Period, CC and GLCodes
'*******************************************************************************************************
Public Function EntSQLGLCCBudget2CCRange(Company$, TheYear%, ThePeriod%, TheCcy%, GLCode As Long, CCCodes As Range) As Variant
Attribute EntSQLGLCCBudget2CCRange.VB_Description = "This function returns the General Ledger Budget2 value for the specified Currency, Year, Period, GLCode and CostCentres."
On Error GoTo EntSQLGLCCBudget2CCRange_Error
    Dim ErrStr$
    Dim DblVal As Double
    Dim Result%
    Dim stADO As String
    Dim RST As ADODB.Recordset
    Dim stSQL As String
    Dim AddVal As Double
    Dim CurrInv As Boolean
    Dim CCRange As String
    Dim CCRowRange(1000) As Double
    Dim CCCodeRange(1000) As String
    Dim CCValueRange() As Variant
    Dim CCRowCount As Double
    Dim NextRow As Double
    
    DoEvents
    
    Result% = 0
    
    DblVal# = 0#
    
    CompStr$ = UCase(Company$)
    
    If ValidCompany(Company) And ValidYear(TheYear) And ValidPeriod(ThePeriod) And ValidCcy(TheCcy%) And ValidGLCode(GLCode) Then
        If LocalCheckServer() Then
            
            'Check User Permissions
            Result = EntServer.CheckUserPermission(Company$, 487)
            
            If Result <> 0 Then
                Error Result
                GoTo EntSQLGLCCBudget2CCRange_Error
            End If
            
            'Concatenate CC Range into CSV for passing to SQL select statement
            CCRowCount = 1
            
            For Each CCCodes In CCCodes.Rows
                
                If CStr(CCCodes.Value) <> "" Then
                    CCRange = CCRange + CStr(CCCodes.Value) & "','"
                    CCRowRange(CCRowCount) = CCCodes.Row
                    CCCodeRange(CCRowCount) = CStr(CCCodes.Value)
                End If
                
                CCRowCount = CCRowCount + 1
            Next
            
            'Correct Row Count
            CCRowCount = CCRowCount - 1
            
            'Remove extra comma off end of csv list
            CCRange = Left(CCRange, Len(CCRange) - 2)
            
            CCRange = "'" & CCRange
            
            stSQL = "SELECT EXCHQCHKcode1Trans1," + CStr(Trim(CompStr$)) + ".ifn_GetNominalValue(5, " + CStr(TheYear%) + "," + CStr(ThePeriod%) + "," + CStr(TheCcy%) + "," + CStr(GLCode) + ",EXCHQCHKcode1Trans1,'','C',0)" & _
                    "FROM " + CStr(Trim(CompStr$)) + ".EXCHQCHK WHERE (RecPfix = 'C' AND SubType = 67) AND EXCHQCHKcode1Trans1 IN (" & CStr(CCRange) & ")"
            
            OpenDBConnection (CompStr$)
            
            With CNT(CurrComp)
                .CommandTimeout = 0
                Set RST = .Execute(stSQL)
            End With
            
            If RST.RecordCount = 0 Then
                EntSQLGLCCBudget2CCRange = 0
                GoTo EntSQLGLCCBudget2CCRange_Exit
            End If
            
            ReDim CCValueRange(1 To CCRowCount, 1 To 1)
            
                For NextRow = 1 To CCRowCount
                    If CStr(CCCodeRange(NextRow)) <> "" Then
                        RST.MoveFirst
                        RST.Find ("EXCHQCHKcode1Trans1 = '" & CStr(CCCodeRange(NextRow))) & "'"
                        
                        If Not RST.EOF Then
                            If RST.Fields.Item(1) = 100000511 Then
                                CCValueRange(NextRow, 1) = 0
                            ElseIf RST.Fields.Item(1) = 100000519 Then
                                CCValueRange(NextRow, 1) = 0
                            ElseIf RST.Fields.Item(1) = 100000520 Then
                                CCValueRange(NextRow, 1) = 0
                            Else
                                CCValueRange(NextRow, 1) = RST.Fields.Item(1)
                            End If
                        Else
                            RST.MoveFirst
                            ' Add to avoid summation errors when text error returned
                            CCValueRange(NextRow, 1) = 0
                        End If
                    Else
                        CCValueRange(NextRow, 1) = ""
                    End If
                    
    
                Next
            
            Set RST = Nothing
            
        End If
    End If
    
EntSQLGLCCBudget2CCRange_Zero:
    EntSQLGLCCBudget2CCRange = CCValueRange
    
    GoTo EntSQLGLCCBudget2CCRange_Exit
        
EntSQLGLCCBudget2CCRange_Error:
    If ErrStr = "" Then ErrStr = GetErrorNumStr
    EntSQLGLCCBudget2CCRange = ErrStr

EntSQLGLCCBudget2CCRange_Exit:

End Function

'*******************************************************************************************************
' Name:        EntSQLGLCCDpBudget2CCRange
' Description: Gets the General Ledger Budget2 values for the specified Currency, Year, Period, CC, Dp and GLCodes
'*******************************************************************************************************
Public Function EntSQLGLCCDpBudget2CCRange(Company$, TheYear%, ThePeriod%, TheCcy%, GLCode As Long, CCCodes As Range, DpCode$) As Variant
Attribute EntSQLGLCCDpBudget2CCRange.VB_Description = "This function returns the General Ledger Budget2 value for the specified Currency, Year, Period, GLCode, CostCentres and Department."
On Error GoTo EntSQLGLCCDpBudget2CCRange_Error
    Dim ErrStr$
    Dim DblVal As Double
    Dim Result%
    Dim stADO As String
    Dim RST As ADODB.Recordset
    Dim stSQL As String
    Dim AddVal As Double
    Dim CurrInv As Boolean
    Dim CCRange As String
    Dim CCRowRange(1000) As Double
    Dim CCCodeRange(1000) As String
    Dim CCValueRange() As Variant
    Dim CCRowCount As Double
    Dim NextRow As Double
    
    DoEvents
    
    Result% = 0
    
    DblVal# = 0#
    
    CompStr$ = UCase(Company$)
    
    If ValidCompany(Company) And ValidYear(TheYear) And ValidPeriod(ThePeriod) And ValidCcy(TheCcy%) And ValidGLCode(CStr(GLCode)) And ValidCCDep(False, DpCode$) Then
        If LocalCheckServer() Then
            
            'Check User Permissions
            Result = EntServer.CheckUserPermission(Company$, 487)
            
            If Result <> 0 Then
                Error Result
                GoTo EntSQLGLCCDpBudget2CCRange_Error
            End If
            
            'Concatenate CC Range into CSV for passing to SQL select statement
            CCRowCount = 1
            
            For Each CCCodes In CCCodes.Rows
                
                If CStr(CCCodes.Value) <> "" Then
                    CCRange = CCRange + CStr(CCCodes.Value) & "','"
                    CCRowRange(CCRowCount) = CCCodes.Row
                    CCCodeRange(CCRowCount) = CStr(CCCodes.Value)
                End If
                
                CCRowCount = CCRowCount + 1
            Next
            
            'Correct Row Count
            CCRowCount = CCRowCount - 1
            
            'Remove extra comma off end of csv list
            CCRange = Left(CCRange, Len(CCRange) - 2)
            
            CCRange = "'" & CCRange
            
            stSQL = "SELECT EXCHQCHKcode1Trans1," + CStr(Trim(CompStr$)) + ".ifn_GetNominalValue(5, " + CStr(TheYear%) + "," + CStr(ThePeriod%) + "," + CStr(TheCcy%) + "," + CStr(GLCode) + ",EXCHQCHKcode1Trans1,'" + CStr(Trim(DpCode$)) + "','C',0) " & _
                    "FROM " + CStr(Trim(CompStr$)) + ".EXCHQCHK WHERE (RecPfix = 'C' AND SubType = 67) AND EXCHQCHKcode1Trans1 IN (" & CStr(CCRange) & ")"
            
            OpenDBConnection (CompStr$)
            
            With CNT(CurrComp)
                .CommandTimeout = 0
                Set RST = .Execute(stSQL)
            End With
            
            If RST.RecordCount = 0 Then
                EntSQLGLCCDpBudget2CCRange = 0
                GoTo EntSQLGLCCDpBudget2CCRange_Exit
            End If
            
            ReDim CCValueRange(1 To CCRowCount, 1 To 1)
            
                For NextRow = 1 To CCRowCount
                    If CStr(CCCodeRange(NextRow)) <> "" Then
                        RST.MoveFirst
                        RST.Find ("EXCHQCHKcode1Trans1 = '" & CStr(CCCodeRange(NextRow))) & "'"
                        
                        If Not RST.EOF Then
                            If RST.Fields.Item(1) = 100000511 Then
                                CCValueRange(NextRow, 1) = 0
                            ElseIf RST.Fields.Item(1) = 100000519 Then
                                CCValueRange(NextRow, 1) = 0
                            ElseIf RST.Fields.Item(1) = 100000520 Then
                                CCValueRange(NextRow, 1) = 0
                            Else
                                CCValueRange(NextRow, 1) = RST.Fields.Item(1)
                            End If
                        Else
                            RST.MoveFirst
                            ' Add to avoid summation errors when text error returned
                            CCValueRange(NextRow, 1) = 0
                        End If
                    Else
                        CCValueRange(NextRow, 1) = ""
                    End If
                    
    
                Next
            
            Set RST = Nothing
            
        End If
    End If
    
EntSQLGLCCDpBudget2CCRange_Zero:
    EntSQLGLCCDpBudget2CCRange = CCValueRange
    
    GoTo EntSQLGLCCDpBudget2CCRange_Exit
        
EntSQLGLCCDpBudget2CCRange_Error:
    If ErrStr = "" Then ErrStr = GetErrorNumStr
    EntSQLGLCCDpBudget2CCRange = ErrStr

EntSQLGLCCDpBudget2CCRange_Exit:

End Function

'**************************************************************************************************************
'**                                              CREDIT                                                      **
'**************************************************************************************************************

'*******************************************************************************************************
' Name:        EntSQLGLCCCreditCCRange
' Description: Gets the General Ledger Credit values for the specified Currency, Year, Period, CC and GLCodes
'*******************************************************************************************************
Public Function EntSQLGLCCCreditCCRange(Company$, TheYear%, ThePeriod%, TheCcy%, GLCode As Long, CCCodes As Range) As Variant
Attribute EntSQLGLCCCreditCCRange.VB_Description = "This function returns the General Ledger Credit value for the specified Currency, Year, Period, GLCode, and CostCentres.\r\n"
On Error GoTo EntSQLGLCCCreditCCRange_Error
    Dim ErrStr$
    Dim DblVal As Double
    Dim Result%
    Dim stADO As String
    Dim RST As ADODB.Recordset
    Dim stSQL As String
    Dim AddVal As Double
    Dim CurrInv As Boolean
    Dim CCRange As String
    Dim CCRowRange(1000) As Double
    Dim CCCodeRange(1000) As String
    Dim CCValueRange() As Variant
    Dim CCRowCount As Double
    Dim NextRow As Double
    
    DoEvents
    
    Result% = 0
    
    DblVal# = 0#
    
    CompStr$ = UCase(Company$)
    
    If ValidCompany(Company) And ValidYear(TheYear) And ValidPeriod(ThePeriod) And ValidCcy(TheCcy%) And ValidGLCode(GLCode) Then
        If LocalCheckServer() Then
            
            'Check User Permissions
            Result = EntServer.CheckUserPermission(Company$, 487)
            
            If Result <> 0 Then
                Error Result
                GoTo EntSQLGLCCCreditCCRange_Error
            End If
            
            'Concatenate CC Range into CSV for passing to SQL select statement
            CCRowCount = 1
            
            For Each CCCodes In CCCodes.Rows
                
                If CStr(CCCodes.Value) <> "" Then
                    CCRange = CCRange + CStr(CCCodes.Value) & "','"
                    CCRowRange(CCRowCount) = CCCodes.Row
                    CCCodeRange(CCRowCount) = CStr(CCCodes.Value)
                End If
                
                CCRowCount = CCRowCount + 1
            Next
            
            'Correct Row Count
            CCRowCount = CCRowCount - 1
            
            'Remove extra comma off end of csv list
            CCRange = Left(CCRange, Len(CCRange) - 2)
            
            CCRange = "'" & CCRange
            
            stSQL = "SELECT EXCHQCHKcode1Trans1," + CStr(Trim(CompStr$)) + ".ifn_GetNominalValue(1, " + CStr(TheYear%) + "," + CStr(ThePeriod%) + "," + CStr(TheCcy%) + "," + CStr(GLCode) + ",EXCHQCHKcode1Trans1,'','C',0)" & _
                    "FROM " + CStr(Trim(CompStr$)) + ".EXCHQCHK WHERE (RecPfix = 'C' AND SubType = 67) AND EXCHQCHKcode1Trans1 IN (" & CStr(CCRange) & ")"
            
            OpenDBConnection (CompStr$)
            
            With CNT(CurrComp)
                .CommandTimeout = 0
                Set RST = .Execute(stSQL)
            End With
            
            If RST.RecordCount = 0 Then
                EntSQLGLCCCreditCCRange = 0
                GoTo EntSQLGLCCCreditCCRange_Exit
            End If
            
            ReDim CCValueRange(1 To CCRowCount, 1 To 1)
            
                For NextRow = 1 To CCRowCount
                    If CStr(CCCodeRange(NextRow)) <> "" Then
                        RST.MoveFirst
                        RST.Find ("EXCHQCHKcode1Trans1 = '" & CStr(CCCodeRange(NextRow))) & "'"
                        
                        If Not RST.EOF Then
                            If RST.Fields.Item(1) = 100000511 Then
                                CCValueRange(NextRow, 1) = 0
                            ElseIf RST.Fields.Item(1) = 100000519 Then
                                CCValueRange(NextRow, 1) = 0
                            ElseIf RST.Fields.Item(1) = 100000520 Then
                                CCValueRange(NextRow, 1) = 0
                            Else
                                CCValueRange(NextRow, 1) = RST.Fields.Item(1)
                            End If
                        Else
                            RST.MoveFirst
                            ' Add to avoid summation errors when text error returned
                            CCValueRange(NextRow, 1) = 0
                        End If
                    Else
                        CCValueRange(NextRow, 1) = ""
                    End If
                    
    
                Next
            
            Set RST = Nothing
            
        End If
    End If
    
EntSQLGLCCCreditCCRange_Zero:
    EntSQLGLCCCreditCCRange = CCValueRange
    
    GoTo EntSQLGLCCCreditCCRange_Exit
        
EntSQLGLCCCreditCCRange_Error:
    If ErrStr = "" Then ErrStr = GetErrorNumStr
    EntSQLGLCCCreditCCRange = ErrStr

EntSQLGLCCCreditCCRange_Exit:

End Function

'*******************************************************************************************************
' Name:        EntSQLGLCCDpCreditCCRange
' Description: Gets the General Ledger Credit values for the specified Currency, Year, Period, CC, Dp and GLCodes
'*******************************************************************************************************
Public Function EntSQLGLCCDpCreditCCRange(Company$, TheYear%, ThePeriod%, TheCcy%, GLCode As Long, CCCodes As Range, DpCode$) As Variant
Attribute EntSQLGLCCDpCreditCCRange.VB_Description = "This function returns the General Ledger Credit value for the specified Currency, Year, Period, GLCode, Cost Centres and Department.\r\n"
On Error GoTo EntSQLGLCCDpCreditCCRange_Error
    Dim ErrStr$
    Dim DblVal As Double
    Dim Result%
    Dim stADO As String
    Dim RST As ADODB.Recordset
    Dim stSQL As String
    Dim AddVal As Double
    Dim CurrInv As Boolean
    Dim CCRange As String
    Dim CCRowRange(1000) As Double
    Dim CCCodeRange(1000) As String
    Dim CCValueRange() As Variant
    Dim CCRowCount As Double
    Dim NextRow As Double
    
    DoEvents
    
    Result% = 0
    
    DblVal# = 0#
    
    CompStr$ = UCase(Company$)
    
    If ValidCompany(Company) And ValidYear(TheYear) And ValidPeriod(ThePeriod) And ValidCcy(TheCcy%) And ValidGLCode(CStr(GLCode)) And ValidCCDep(False, DpCode$) Then
        If LocalCheckServer() Then
            
            'Check User Permissions
            Result = EntServer.CheckUserPermission(Company$, 487)
            
            If Result <> 0 Then
                Error Result
                GoTo EntSQLGLCCDpCreditCCRange_Error
            End If
            
            'Concatenate CC Range into CSV for passing to SQL select statement
            CCRowCount = 1
            
            For Each CCCodes In CCCodes.Rows
                
                If CStr(CCCodes.Value) <> "" Then
                    CCRange = CCRange + CStr(CCCodes.Value) & "','"
                    CCRowRange(CCRowCount) = CCCodes.Row
                    CCCodeRange(CCRowCount) = CStr(CCCodes.Value)
                End If
                
                CCRowCount = CCRowCount + 1
            Next
            
            'Correct Row Count
            CCRowCount = CCRowCount - 1
            
            'Remove extra comma off end of csv list
            CCRange = Left(CCRange, Len(CCRange) - 2)
            
            CCRange = "'" & CCRange
            
            stSQL = "SELECT EXCHQCHKcode1Trans1," + CStr(Trim(CompStr$)) + ".ifn_GetNominalValue(1, " + CStr(TheYear%) + "," + CStr(ThePeriod%) + "," + CStr(TheCcy%) + "," + CStr(GLCode) + ",EXCHQCHKcode1Trans1,'" + CStr(Trim(DpCode$)) + "','C',0) " & _
                    "FROM " + CStr(Trim(CompStr$)) + ".EXCHQCHK WHERE (RecPfix = 'C' AND SubType = 67) AND EXCHQCHKcode1Trans1 IN (" & CStr(CCRange) & ")"
            
            OpenDBConnection (CompStr$)
            
            With CNT(CurrComp)
                .CommandTimeout = 0
                Set RST = .Execute(stSQL)
            End With
            
            If RST.RecordCount = 0 Then
                EntSQLGLCCDpCreditCCRange = 0
                GoTo EntSQLGLCCDpCreditCCRange_Exit
            End If
            
            ReDim CCValueRange(1 To CCRowCount, 1 To 1)
            
                For NextRow = 1 To CCRowCount
                    If CStr(CCCodeRange(NextRow)) <> "" Then
                        RST.MoveFirst
                        RST.Find ("EXCHQCHKcode1Trans1 = '" & CStr(CCCodeRange(NextRow))) & "'"
                        
                        If Not RST.EOF Then
                            If RST.Fields.Item(1) = 100000511 Then
                                CCValueRange(NextRow, 1) = 0
                            ElseIf RST.Fields.Item(1) = 100000519 Then
                                CCValueRange(NextRow, 1) = 0
                            ElseIf RST.Fields.Item(1) = 100000520 Then
                                CCValueRange(NextRow, 1) = 0
                            Else
                                CCValueRange(NextRow, 1) = RST.Fields.Item(1)
                            End If
                        Else
                            RST.MoveFirst
                            ' Add to avoid summation errors when text error returned
                            CCValueRange(NextRow, 1) = 0
                        End If
                    Else
                        CCValueRange(NextRow, 1) = ""
                    End If
                    
    
                Next
            
            Set RST = Nothing
            
        End If
    End If
    
EntSQLGLCCDpCreditCCRange_Zero:
    EntSQLGLCCDpCreditCCRange = CCValueRange
    
    GoTo EntSQLGLCCDpCreditCCRange_Exit
        
EntSQLGLCCDpCreditCCRange_Error:
    If ErrStr = "" Then ErrStr = GetErrorNumStr
    EntSQLGLCCDpCreditCCRange = ErrStr

EntSQLGLCCDpCreditCCRange_Exit:

End Function


'**************************************************************************************************************
'**                                              DEBIT                                                     **
'**************************************************************************************************************

'*******************************************************************************************************
' Name:        EntSQLGLCCDebitCCRange
' Description: Gets the General Ledger Debit values for the specified Currency, Year, Period, CC and GLCodes
'*******************************************************************************************************
Public Function EntSQLGLCCDebitCCRange(Company$, TheYear%, ThePeriod%, TheCcy%, GLCode As Long, CCCodes As Range) As Variant
Attribute EntSQLGLCCDebitCCRange.VB_Description = "This function returns the General Ledger Debit value for the specified Currency, Year, Period, GLCode and CostCentres."
On Error GoTo EntSQLGLCCDebitCCRange_Error
    Dim ErrStr$
    Dim DblVal As Double
    Dim Result%
    Dim stADO As String
    Dim RST As ADODB.Recordset
    Dim stSQL As String
    Dim AddVal As Double
    Dim CurrInv As Boolean
    Dim CCRange As String
    Dim CCRowRange(1000) As Double
    Dim CCCodeRange(1000) As String
    Dim CCValueRange() As Variant
    Dim CCRowCount As Double
    Dim NextRow As Double
    
    DoEvents
    
    Result% = 0
    
    DblVal# = 0#
    
    CompStr$ = UCase(Company$)
    
    If ValidCompany(Company) And ValidYear(TheYear) And ValidPeriod(ThePeriod) And ValidCcy(TheCcy%) And ValidGLCode(GLCode) Then
        If LocalCheckServer() Then
            
            'Check User Permissions
            Result = EntServer.CheckUserPermission(Company$, 487)
            
            If Result <> 0 Then
                Error Result
                GoTo EntSQLGLCCDebitCCRange_Error
            End If
            
            'Concatenate CC Range into CSV for passing to SQL select statement
            CCRowCount = 1
            
            For Each CCCodes In CCCodes.Rows
                
                If CStr(CCCodes.Value) <> "" Then
                    CCRange = CCRange + CStr(CCCodes.Value) & "','"
                    CCRowRange(CCRowCount) = CCCodes.Row
                    CCCodeRange(CCRowCount) = CStr(CCCodes.Value)
                End If
                
                CCRowCount = CCRowCount + 1
            Next
            
            'Correct Row Count
            CCRowCount = CCRowCount - 1
            
            'Remove extra comma off end of csv list
            CCRange = Left(CCRange, Len(CCRange) - 2)
            
            CCRange = "'" & CCRange
            
            stSQL = "SELECT EXCHQCHKcode1Trans1," + CStr(Trim(CompStr$)) + ".ifn_GetNominalValue(2, " + CStr(TheYear%) + "," + CStr(ThePeriod%) + "," + CStr(TheCcy%) + "," + CStr(GLCode) + ",EXCHQCHKcode1Trans1,'','C',0)" & _
                    "FROM " + CStr(Trim(CompStr$)) + ".EXCHQCHK WHERE (RecPfix = 'C' AND SubType = 67) AND EXCHQCHKcode1Trans1 IN (" & CStr(CCRange) & ")"
            
            OpenDBConnection (CompStr$)
            
            With CNT(CurrComp)
                .CommandTimeout = 0
                Set RST = .Execute(stSQL)
            End With
            
            If RST.RecordCount = 0 Then
                EntSQLGLCCDebitCCRange = 0
                GoTo EntSQLGLCCDebitCCRange_Exit
            End If
            
            ReDim CCValueRange(1 To CCRowCount, 1 To 1)
            
                For NextRow = 1 To CCRowCount
                    If CStr(CCCodeRange(NextRow)) <> "" Then
                        RST.MoveFirst
                        RST.Find ("EXCHQCHKcode1Trans1 = '" & CStr(CCCodeRange(NextRow))) & "'"
                        
                        If Not RST.EOF Then
                            If RST.Fields.Item(1) = 100000511 Then
                                CCValueRange(NextRow, 1) = 0
                            ElseIf RST.Fields.Item(1) = 100000519 Then
                                CCValueRange(NextRow, 1) = 0
                            ElseIf RST.Fields.Item(1) = 100000520 Then
                                CCValueRange(NextRow, 1) = 0
                            Else
                                CCValueRange(NextRow, 1) = RST.Fields.Item(1)
                            End If
                        Else
                            RST.MoveFirst
                            ' Add to avoid summation errors when text error returned
                            CCValueRange(NextRow, 1) = 0
                        End If
                    Else
                        CCValueRange(NextRow, 1) = ""
                    End If
                    
    
                Next
            
            Set RST = Nothing
            
        End If
    End If
    
EntSQLGLCCDebitCCRange_Zero:
    EntSQLGLCCDebitCCRange = CCValueRange
    
    GoTo EntSQLGLCCDebitCCRange_Exit
        
EntSQLGLCCDebitCCRange_Error:
    If ErrStr = "" Then ErrStr = GetErrorNumStr
    EntSQLGLCCDebitCCRange = ErrStr

EntSQLGLCCDebitCCRange_Exit:

End Function

'*******************************************************************************************************
' Name:        EntSQLGLCCDpDebitCCRange
' Description: Gets the General Ledger Credit values for the specified Currency, Year, Period, CC, Dp and GLCodes
'*******************************************************************************************************
Public Function EntSQLGLCCDpDebitCCRange(Company$, TheYear%, ThePeriod%, TheCcy%, GLCode As Long, CCCodes As Range, DpCode$) As Variant
Attribute EntSQLGLCCDpDebitCCRange.VB_Description = "This function returns the General Ledger Credit value for the specified Currency, Year, Period, GLCode, Cost Centres and Department."
On Error GoTo EntSQLGLCCDpDebitCCRange_Error
    Dim ErrStr$
    Dim DblVal As Double
    Dim Result%
    Dim stADO As String
    Dim RST As ADODB.Recordset
    Dim stSQL As String
    Dim AddVal As Double
    Dim CurrInv As Boolean
    Dim CCRange As String
    Dim CCRowRange(1000) As Double
    Dim CCCodeRange(1000) As String
    Dim CCValueRange() As Variant
    Dim CCRowCount As Double
    Dim NextRow As Double
    
    DoEvents
    
    Result% = 0
    
    DblVal# = 0#
    
    CompStr$ = UCase(Company$)
    
    If ValidCompany(Company) And ValidYear(TheYear) And ValidPeriod(ThePeriod) And ValidCcy(TheCcy%) And ValidGLCode(CStr(GLCode)) And ValidCCDep(False, DpCode$) Then
        If LocalCheckServer() Then
            
            'Check User Permissions
            Result = EntServer.CheckUserPermission(Company$, 487)
            
            If Result <> 0 Then
                Error Result
                GoTo EntSQLGLCCDpDebitCCRange_Error
            End If
            
            'Concatenate CC Range into CSV for passing to SQL select statement
            CCRowCount = 1
            
            For Each CCCodes In CCCodes.Rows
                
                If CStr(CCCodes.Value) <> "" Then
                    CCRange = CCRange + CStr(CCCodes.Value) & "','"
                    CCRowRange(CCRowCount) = CCCodes.Row
                    CCCodeRange(CCRowCount) = CStr(CCCodes.Value)
                End If
                
                CCRowCount = CCRowCount + 1
            Next
            
            'Correct Row Count
            CCRowCount = CCRowCount - 1
            
            'Remove extra comma off end of csv list
            CCRange = Left(CCRange, Len(CCRange) - 2)
            
            CCRange = "'" & CCRange
            
            stSQL = "SELECT EXCHQCHKcode1Trans1," + CStr(Trim(CompStr$)) + ".ifn_GetNominalValue(2, " + CStr(TheYear%) + "," + CStr(ThePeriod%) + "," + CStr(TheCcy%) + "," + CStr(GLCode) + ",EXCHQCHKcode1Trans1,'" + CStr(Trim(DpCode$)) + "','C',0) " & _
                    "FROM " + CStr(Trim(CompStr$)) + ".EXCHQCHK WHERE (RecPfix = 'C' AND SubType = 67) AND EXCHQCHKcode1Trans1 IN (" & CStr(CCRange) & ")"
            
            OpenDBConnection (CompStr$)
            
            With CNT(CurrComp)
                .CommandTimeout = 0
                Set RST = .Execute(stSQL)
            End With
            
            If RST.RecordCount = 0 Then
                EntSQLGLCCDpDebitCCRange = 0
                GoTo EntSQLGLCCDpDebitCCRange_Exit
            End If
            
            ReDim CCValueRange(1 To CCRowCount, 1 To 1)
            
                For NextRow = 1 To CCRowCount
                    If CStr(CCCodeRange(NextRow)) <> "" Then
                        RST.MoveFirst
                        RST.Find ("EXCHQCHKcode1Trans1 = '" & CStr(CCCodeRange(NextRow))) & "'"
                        
                        If Not RST.EOF Then
                            If RST.Fields.Item(1) = 100000511 Then
                                CCValueRange(NextRow, 1) = 0
                            ElseIf RST.Fields.Item(1) = 100000519 Then
                                CCValueRange(NextRow, 1) = 0
                            ElseIf RST.Fields.Item(1) = 100000520 Then
                                CCValueRange(NextRow, 1) = 0
                            Else
                                CCValueRange(NextRow, 1) = RST.Fields.Item(1)
                            End If
                        Else
                            RST.MoveFirst
                            ' Add to avoid summation errors when text error returned
                            CCValueRange(NextRow, 1) = 0
                        End If
                    Else
                        CCValueRange(NextRow, 1) = ""
                    End If
                    
    
                Next
            
            Set RST = Nothing
            
        End If
    End If
    
EntSQLGLCCDpDebitCCRange_Zero:
    EntSQLGLCCDpDebitCCRange = CCValueRange
    
    GoTo EntSQLGLCCDpDebitCCRange_Exit
        
EntSQLGLCCDpDebitCCRange_Error:
    If ErrStr = "" Then ErrStr = GetErrorNumStr
    EntSQLGLCCDpDebitCCRange = ErrStr

EntSQLGLCCDpDebitCCRange_Exit:

End Function

'**************************************************************************************************************
'**                                              REVISED BUDGET 1                                                     **
'**************************************************************************************************************

'*******************************************************************************************************
' Name:        EntSQLGLCCRevisedBudget1CCRange
' Description: Gets the General Ledger Revised Budget 1 values for the specified Currency, Year, Period, CC and GLCodes
'*******************************************************************************************************
Public Function EntSQLGLCCRevisedBudget1CCRange(Company$, TheYear%, ThePeriod%, TheCcy%, GLCode As Long, CCCodes As Range) As Variant
On Error GoTo EntSQLGLCCRevisedBudget1CCRange_Error
    Dim ErrStr$
    Dim DblVal As Double
    Dim Result%
    Dim stADO As String
    Dim RST As ADODB.Recordset
    Dim stSQL As String
    Dim AddVal As Double
    Dim CurrInv As Boolean
    Dim CCRange As String
    Dim CCRowRange(1000) As Double
    Dim CCCodeRange(1000) As String
    Dim CCValueRange() As Variant
    Dim CCRowCount As Double
    Dim NextRow As Double
    
    DoEvents
    
    Result% = 0
    
    DblVal# = 0#
    
    CompStr$ = UCase(Company$)
    
    If ValidCompany(Company) And ValidYear(TheYear) And ValidPeriod(ThePeriod) And ValidCcy(TheCcy%) And ValidGLCode(GLCode) Then
        If LocalCheckServer() Then
            
            'Check User Permissions
            Result = EntServer.CheckUserPermission(Company$, 487)
            
            If Result <> 0 Then
                Error Result
                GoTo EntSQLGLCCRevisedBudget1CCRange_Error
            End If
            
            'Concatenate CC Range into CSV for passing to SQL select statement
            CCRowCount = 1
            
            For Each CCCodes In CCCodes.Rows
                
                If CStr(CCCodes.Value) <> "" Then
                    CCRange = CCRange + CStr(CCCodes.Value) & "','"
                    CCRowRange(CCRowCount) = CCCodes.Row
                    CCCodeRange(CCRowCount) = CStr(CCCodes.Value)
                End If
                
                CCRowCount = CCRowCount + 1
            Next
            
            'Correct Row Count
            CCRowCount = CCRowCount - 1
            
            'Remove extra comma off end of csv list
            CCRange = Left(CCRange, Len(CCRange) - 2)
            
            CCRange = "'" & CCRange
            
            stSQL = "SELECT EXCHQCHKcode1Trans1," + CStr(Trim(CompStr$)) + ".ifn_GetNominalValue(5, " + CStr(TheYear%) + "," + CStr(ThePeriod%) + "," + CStr(TheCcy%) + "," + CStr(GLCode) + ",EXCHQCHKcode1Trans1,'','C',0)" & _
                    "FROM " + CStr(Trim(CompStr$)) + ".EXCHQCHK WHERE (RecPfix = 'C' AND SubType = 67) AND EXCHQCHKcode1Trans1 IN (" & CStr(CCRange) & ")"
            
            OpenDBConnection (CompStr$)
            
            With CNT(CurrComp)
                .CommandTimeout = 0
                Set RST = .Execute(stSQL)
            End With
            
            If RST.RecordCount = 0 Then
                EntSQLGLCCRevisedBudget1CCRange = 0
                GoTo EntSQLGLCCRevisedBudget1CCRange_Exit
            End If
            
            ReDim CCValueRange(1 To CCRowCount, 1 To 1)
            
                For NextRow = 1 To CCRowCount
                    If CStr(CCCodeRange(NextRow)) <> "" Then
                        RST.MoveFirst
                        RST.Find ("EXCHQCHKcode1Trans1 = '" & CStr(CCCodeRange(NextRow))) & "'"
                        
                        If Not RST.EOF Then
                            If RST.Fields.Item(1) = 100000511 Then
                                CCValueRange(NextRow, 1) = 0
                            ElseIf RST.Fields.Item(1) = 100000519 Then
                                CCValueRange(NextRow, 1) = 0
                            ElseIf RST.Fields.Item(1) = 100000520 Then
                                CCValueRange(NextRow, 1) = 0
                            Else
                                CCValueRange(NextRow, 1) = RST.Fields.Item(1)
                            End If
                        Else
                            RST.MoveFirst
                            ' Add to avoid summation errors when text error returned
                            CCValueRange(NextRow, 1) = 0
                        End If
                    Else
                        CCValueRange(NextRow, 1) = ""
                    End If
                    
    
                Next
            
            Set RST = Nothing
            
        End If
    End If
    
EntSQLGLCCRevisedBudget1CCRange_Zero:
    EntSQLGLCCRevisedBudget1CCRange = CCValueRange
    
    GoTo EntSQLGLCCRevisedBudget1CCRange_Exit
        
EntSQLGLCCRevisedBudget1CCRange_Error:
    If ErrStr = "" Then ErrStr = GetErrorNumStr
    EntSQLGLCCRevisedBudget1CCRange = ErrStr

EntSQLGLCCRevisedBudget1CCRange_Exit:

End Function

'*******************************************************************************************************
' Name:        EntSQLGLCCDpRevisedBudget1CCRange
' Description: Gets the General Ledger Revised Budget 1 values for the specified Currency, Year, Period, CC, Dp and GLCodes
'*******************************************************************************************************
Public Function EntSQLGLCCDpRevisedBudget1CCRange(Company$, TheYear%, ThePeriod%, TheCcy%, GLCode As Long, CCCodes As Range, DpCode$) As Variant
On Error GoTo EntSQLGLCCDpRevisedBudget1CCRange_Error
    Dim ErrStr$
    Dim DblVal As Double
    Dim Result%
    Dim stADO As String
    Dim RST As ADODB.Recordset
    Dim stSQL As String
    Dim AddVal As Double
    Dim CurrInv As Boolean
    Dim CCRange As String
    Dim CCRowRange(1000) As Double
    Dim CCCodeRange(1000) As String
    Dim CCValueRange() As Variant
    Dim CCRowCount As Double
    Dim NextRow As Double
    
    DoEvents
    
    Result% = 0
    
    DblVal# = 0#
    
    CompStr$ = UCase(Company$)
    
    If ValidCompany(Company) And ValidYear(TheYear) And ValidPeriod(ThePeriod) And ValidCcy(TheCcy%) And ValidGLCode(CStr(GLCode)) And ValidCCDep(False, DpCode$) Then
        If LocalCheckServer() Then
            
            'Check User Permissions
            Result = EntServer.CheckUserPermission(Company$, 487)
            
            If Result <> 0 Then
                Error Result
                GoTo EntSQLGLCCDpRevisedBudget1CCRange_Error
            End If
            
            'Concatenate CC Range into CSV for passing to SQL select statement
            CCRowCount = 1
            
            For Each CCCodes In CCCodes.Rows
                
                If CStr(CCCodes.Value) <> "" Then
                    CCRange = CCRange + CStr(CCCodes.Value) & "','"
                    CCRowRange(CCRowCount) = CCCodes.Row
                    CCCodeRange(CCRowCount) = CStr(CCCodes.Value)
                End If
                
                CCRowCount = CCRowCount + 1
            Next
            
            'Correct Row Count
            CCRowCount = CCRowCount - 1
            
            'Remove extra comma off end of csv list
            CCRange = Left(CCRange, Len(CCRange) - 2)
            
            CCRange = "'" & CCRange
            
            stSQL = "SELECT EXCHQCHKcode1Trans1," + CStr(Trim(CompStr$)) + ".ifn_GetNominalValue(5, " + CStr(TheYear%) + "," + CStr(ThePeriod%) + "," + CStr(TheCcy%) + "," + CStr(GLCode) + ",EXCHQCHKcode1Trans1,'" + CStr(Trim(DpCode$)) + "','C',0) " & _
                    "FROM " + CStr(Trim(CompStr$)) + ".EXCHQCHK WHERE (RecPfix = 'C' AND SubType = 67) AND EXCHQCHKcode1Trans1 IN (" & CStr(CCRange) & ")"
            
            OpenDBConnection (CompStr$)
            
            With CNT(CurrComp)
                .CommandTimeout = 0
                Set RST = .Execute(stSQL)
            End With
            
            If RST.RecordCount = 0 Then
                EntSQLGLCCDpRevisedBudget1CCRange = 0
                GoTo EntSQLGLCCDpRevisedBudget1CCRange_Exit
            End If
            
            ReDim CCValueRange(1 To CCRowCount, 1 To 1)
            
                For NextRow = 1 To CCRowCount
                    If CStr(CCCodeRange(NextRow)) <> "" Then
                        RST.MoveFirst
                        RST.Find ("EXCHQCHKcode1Trans1 = '" & CStr(CCCodeRange(NextRow))) & "'"
                        
                        If Not RST.EOF Then
                            If RST.Fields.Item(1) = 100000511 Then
                                CCValueRange(NextRow, 1) = 0
                            ElseIf RST.Fields.Item(1) = 100000519 Then
                                CCValueRange(NextRow, 1) = 0
                            ElseIf RST.Fields.Item(1) = 100000520 Then
                                CCValueRange(NextRow, 1) = 0
                            Else
                                CCValueRange(NextRow, 1) = RST.Fields.Item(1)
                            End If
                        Else
                            RST.MoveFirst
                            ' Add to avoid summation errors when text error returned
                            CCValueRange(NextRow, 1) = 0
                        End If
                    Else
                        CCValueRange(NextRow, 1) = ""
                    End If
                    
    
                Next
            
            Set RST = Nothing
            
        End If
    End If
    
EntSQLGLCCDpRevisedBudget1CCRange_Zero:
    EntSQLGLCCDpRevisedBudget1CCRange = CCValueRange
    
    GoTo EntSQLGLCCDpRevisedBudget1CCRange_Exit
        
EntSQLGLCCDpRevisedBudget1CCRange_Error:
    If ErrStr = "" Then ErrStr = GetErrorNumStr
    EntSQLGLCCDpRevisedBudget1CCRange = ErrStr

EntSQLGLCCDpRevisedBudget1CCRange_Exit:

End Function

'**************************************************************************************************************
'**                                              REVISED BUDGET 2                                                     **
'**************************************************************************************************************

'*******************************************************************************************************
' Name:        EntSQLGLCCRevisedBudget2CCRange
' Description: Gets the General Ledger Revised Budget 2 values for the specified Currency, Year, Period, CC and GLCodes
'*******************************************************************************************************
Public Function EntSQLGLCCRevisedBudget2CCRange(Company$, TheYear%, ThePeriod%, TheCcy%, GLCode As Long, CCCodes As Range) As Variant
On Error GoTo EntSQLGLCCRevisedBudget2CCRange_Error
    Dim ErrStr$
    Dim DblVal As Double
    Dim Result%
    Dim stADO As String
    Dim RST As ADODB.Recordset
    Dim stSQL As String
    Dim AddVal As Double
    Dim CurrInv As Boolean
    Dim CCRange As String
    Dim CCRowRange(1000) As Double
    Dim CCCodeRange(1000) As String
    Dim CCValueRange() As Variant
    Dim CCRowCount As Double
    Dim NextRow As Double
    
    DoEvents
    
    Result% = 0
    
    DblVal# = 0#
    
    CompStr$ = UCase(Company$)
    
    If ValidCompany(Company) And ValidYear(TheYear) And ValidPeriod(ThePeriod) And ValidCcy(TheCcy%) And ValidGLCode(GLCode) Then
        If LocalCheckServer() Then
            
            'Check User Permissions
            Result = EntServer.CheckUserPermission(Company$, 487)
            
            If Result <> 0 Then
                Error Result
                GoTo EntSQLGLCCRevisedBudget2CCRange_Error
            End If
            
            'Concatenate CC Range into CSV for passing to SQL select statement
            CCRowCount = 1
            
            For Each CCCodes In CCCodes.Rows
                
                If CStr(CCCodes.Value) <> "" Then
                    CCRange = CCRange + CStr(CCCodes.Value) & "','"
                    CCRowRange(CCRowCount) = CCCodes.Row
                    CCCodeRange(CCRowCount) = CStr(CCCodes.Value)
                End If
                
                CCRowCount = CCRowCount + 1
            Next
            
            'Correct Row Count
            CCRowCount = CCRowCount - 1
            
            'Remove extra comma off end of csv list
            CCRange = Left(CCRange, Len(CCRange) - 2)
            
            CCRange = "'" & CCRange
            
            stSQL = "SELECT EXCHQCHKcode1Trans1," + CStr(Trim(CompStr$)) + ".ifn_GetNominalValue(7, " + CStr(TheYear%) + "," + CStr(ThePeriod%) + "," + CStr(TheCcy%) + "," + CStr(GLCode) + ",EXCHQCHKcode1Trans1,'','C',0)" & _
                    "FROM " + CStr(Trim(CompStr$)) + ".EXCHQCHK WHERE (RecPfix = 'C' AND SubType = 67) AND EXCHQCHKcode1Trans1 IN (" & CStr(CCRange) & ")"
            
            OpenDBConnection (CompStr$)
            
            With CNT(CurrComp)
                .CommandTimeout = 0
                Set RST = .Execute(stSQL)
            End With
            
            If RST.RecordCount = 0 Then
                EntSQLGLCCRevisedBudget2CCRange = 0
                GoTo EntSQLGLCCRevisedBudget2CCRange_Exit
            End If
            
            ReDim CCValueRange(1 To CCRowCount, 1 To 1)
            
                For NextRow = 1 To CCRowCount
                    If CStr(CCCodeRange(NextRow)) <> "" Then
                        RST.MoveFirst
                        RST.Find ("EXCHQCHKcode1Trans1 = '" & CStr(CCCodeRange(NextRow))) & "'"
                        
                        If Not RST.EOF Then
                            If RST.Fields.Item(1) = 100000511 Then
                                CCValueRange(NextRow, 1) = 0
                            ElseIf RST.Fields.Item(1) = 100000519 Then
                                CCValueRange(NextRow, 1) = 0
                            ElseIf RST.Fields.Item(1) = 100000520 Then
                                CCValueRange(NextRow, 1) = 0
                            Else
                                CCValueRange(NextRow, 1) = RST.Fields.Item(1)
                            End If
                        Else
                            RST.MoveFirst
                            ' Add to avoid summation errors when text error returned
                            CCValueRange(NextRow, 1) = 0
                        End If
                    Else
                        CCValueRange(NextRow, 1) = ""
                    End If
                    
    
                Next
            
            Set RST = Nothing
            
        End If
    End If
    
EntSQLGLCCRevisedBudget2CCRange_Zero:
    EntSQLGLCCRevisedBudget2CCRange = CCValueRange
    
    GoTo EntSQLGLCCRevisedBudget2CCRange_Exit
        
EntSQLGLCCRevisedBudget2CCRange_Error:
    If ErrStr = "" Then ErrStr = GetErrorNumStr
    EntSQLGLCCRevisedBudget2CCRange = ErrStr

EntSQLGLCCRevisedBudget2CCRange_Exit:

End Function

'*******************************************************************************************************
' Name:        EntSQLGLCCDpRevisedBudget2CCRange
' Description: Gets the General Ledger Revised Budget 2 values for the specified Currency, Year, Period, CC, Dp and GLCodes
'*******************************************************************************************************
Public Function EntSQLGLCCDpRevisedBudget2CCRange(Company$, TheYear%, ThePeriod%, TheCcy%, GLCode As Long, CCCodes As Range, DpCode$) As Variant
On Error GoTo EntSQLGLCCDpRevisedBudget2CCRange_Error
    Dim ErrStr$
    Dim DblVal As Double
    Dim Result%
    Dim stADO As String
    Dim RST As ADODB.Recordset
    Dim stSQL As String
    Dim AddVal As Double
    Dim CurrInv As Boolean
    Dim CCRange As String
    Dim CCRowRange(1000) As Double
    Dim CCCodeRange(1000) As String
    Dim CCValueRange() As Variant
    Dim CCRowCount As Double
    Dim NextRow As Double
    
    DoEvents
    
    Result% = 0
    
    DblVal# = 0#
    
    CompStr$ = UCase(Company$)
    
    If ValidCompany(Company) And ValidYear(TheYear) And ValidPeriod(ThePeriod) And ValidCcy(TheCcy%) And ValidGLCode(CStr(GLCode)) And ValidCCDep(False, DpCode$) Then
        If LocalCheckServer() Then
            
            'Check User Permissions
            Result = EntServer.CheckUserPermission(Company$, 487)
            
            If Result <> 0 Then
                Error Result
                GoTo EntSQLGLCCDpRevisedBudget2CCRange_Error
            End If
            
            'Concatenate CC Range into CSV for passing to SQL select statement
            CCRowCount = 1
            
            For Each CCCodes In CCCodes.Rows
                
                If CStr(CCCodes.Value) <> "" Then
                    CCRange = CCRange + CStr(CCCodes.Value) & "','"
                    CCRowRange(CCRowCount) = CCCodes.Row
                    CCCodeRange(CCRowCount) = CStr(CCCodes.Value)
                End If
                
                CCRowCount = CCRowCount + 1
            Next
            
            'Correct Row Count
            CCRowCount = CCRowCount - 1
            
            'Remove extra comma off end of csv list
            CCRange = Left(CCRange, Len(CCRange) - 2)
            
            CCRange = "'" & CCRange
            
            stSQL = "SELECT EXCHQCHKcode1Trans1," + CStr(Trim(CompStr$)) + ".ifn_GetNominalValue(7, " + CStr(TheYear%) + "," + CStr(ThePeriod%) + "," + CStr(TheCcy%) + "," + CStr(GLCode) + ",EXCHQCHKcode1Trans1,'" + CStr(Trim(DpCode$)) + "','C',0) " & _
                    "FROM " + CStr(Trim(CompStr$)) + ".EXCHQCHK WHERE (RecPfix = 'C' AND SubType = 67) AND EXCHQCHKcode1Trans1 IN (" & CStr(CCRange) & ")"
            
            OpenDBConnection (CompStr$)
            
            With CNT(CurrComp)
                .CommandTimeout = 0
                Set RST = .Execute(stSQL)
            End With
            
            If RST.RecordCount = 0 Then
                EntSQLGLCCDpRevisedBudget2CCRange = 0
                GoTo EntSQLGLCCDpRevisedBudget2CCRange_Exit
            End If
            
            ReDim CCValueRange(1 To CCRowCount, 1 To 1)
            
                For NextRow = 1 To CCRowCount
                    If CStr(CCCodeRange(NextRow)) <> "" Then
                        RST.MoveFirst
                        RST.Find ("EXCHQCHKcode1Trans1 = '" & CStr(CCCodeRange(NextRow))) & "'"
                        
                        If Not RST.EOF Then
                            If RST.Fields.Item(1) = 100000511 Then
                                CCValueRange(NextRow, 1) = 0
                            ElseIf RST.Fields.Item(1) = 100000519 Then
                                CCValueRange(NextRow, 1) = 0
                            ElseIf RST.Fields.Item(1) = 100000520 Then
                                CCValueRange(NextRow, 1) = 0
                            Else
                                CCValueRange(NextRow, 1) = RST.Fields.Item(1)
                            End If
                        Else
                            RST.MoveFirst
                            ' Add to avoid summation errors when text error returned
                            CCValueRange(NextRow, 1) = 0
                        End If
                    Else
                        CCValueRange(NextRow, 1) = ""
                    End If
                    
    
                Next
            
            Set RST = Nothing
            
        End If
    End If
    
EntSQLGLCCDpRevisedBudget2CCRange_Zero:
    EntSQLGLCCDpRevisedBudget2CCRange = CCValueRange
    
    GoTo EntSQLGLCCDpRevisedBudget2CCRange_Exit
        
EntSQLGLCCDpRevisedBudget2CCRange_Error:
    If ErrStr = "" Then ErrStr = GetErrorNumStr
    EntSQLGLCCDpRevisedBudget2CCRange = ErrStr

EntSQLGLCCDpRevisedBudget2CCRange_Exit:

End Function

'**************************************************************************************************************
'**                                              REVISED BUDGET 3                                                     **
'**************************************************************************************************************

'*******************************************************************************************************
' Name:        EntSQLGLCCRevisedBudget3CCRange
' Description: Gets the General Ledger Revised Budget 3 values for the specified Currency, Year, Period, CC and GLCodes
'*******************************************************************************************************
Public Function EntSQLGLCCRevisedBudget3CCRange(Company$, TheYear%, ThePeriod%, TheCcy%, GLCode As Long, CCCodes As Range) As Variant
On Error GoTo EntSQLGLCCRevisedBudget3CCRange_Error
    Dim ErrStr$
    Dim DblVal As Double
    Dim Result%
    Dim stADO As String
    Dim RST As ADODB.Recordset
    Dim stSQL As String
    Dim AddVal As Double
    Dim CurrInv As Boolean
    Dim CCRange As String
    Dim CCRowRange(1000) As Double
    Dim CCCodeRange(1000) As String
    Dim CCValueRange() As Variant
    Dim CCRowCount As Double
    Dim NextRow As Double
    
    DoEvents
    
    Result% = 0
    
    DblVal# = 0#
    
    CompStr$ = UCase(Company$)
    
    If ValidCompany(Company) And ValidYear(TheYear) And ValidPeriod(ThePeriod) And ValidCcy(TheCcy%) And ValidGLCode(GLCode) Then
        If LocalCheckServer() Then
            
            'Check User Permissions
            Result = EntServer.CheckUserPermission(Company$, 487)
            
            If Result <> 0 Then
                Error Result
                GoTo EntSQLGLCCRevisedBudget3CCRange_Error
            End If
            
            'Concatenate CC Range into CSV for passing to SQL select statement
            CCRowCount = 1
            
            For Each CCCodes In CCCodes.Rows
                
                If CStr(CCCodes.Value) <> "" Then
                    CCRange = CCRange + CStr(CCCodes.Value) & "','"
                    CCRowRange(CCRowCount) = CCCodes.Row
                    CCCodeRange(CCRowCount) = CStr(CCCodes.Value)
                End If
                
                CCRowCount = CCRowCount + 1
            Next
            
            'Correct Row Count
            CCRowCount = CCRowCount - 1
            
            'Remove extra comma off end of csv list
            CCRange = Left(CCRange, Len(CCRange) - 2)
            
            CCRange = "'" & CCRange
            
            stSQL = "SELECT EXCHQCHKcode1Trans1," + CStr(Trim(CompStr$)) + ".ifn_GetNominalValue(8, " + CStr(TheYear%) + "," + CStr(ThePeriod%) + "," + CStr(TheCcy%) + "," + CStr(GLCode) + ",EXCHQCHKcode1Trans1,'','C',0)" & _
                    "FROM " + CStr(Trim(CompStr$)) + ".EXCHQCHK WHERE (RecPfix = 'C' AND SubType = 67) AND EXCHQCHKcode1Trans1 IN (" & CStr(CCRange) & ")"
            
            OpenDBConnection (CompStr$)
            
            With CNT(CurrComp)
                .CommandTimeout = 0
                Set RST = .Execute(stSQL)
            End With
            
            If RST.RecordCount = 0 Then
                EntSQLGLCCRevisedBudget3CCRange = 0
                GoTo EntSQLGLCCRevisedBudget3CCRange_Exit
            End If
            
            ReDim CCValueRange(1 To CCRowCount, 1 To 1)
            
                For NextRow = 1 To CCRowCount
                    If CStr(CCCodeRange(NextRow)) <> "" Then
                        RST.MoveFirst
                        RST.Find ("EXCHQCHKcode1Trans1 = '" & CStr(CCCodeRange(NextRow))) & "'"
                        
                        If Not RST.EOF Then
                            If RST.Fields.Item(1) = 100000511 Then
                                CCValueRange(NextRow, 1) = 0
                            ElseIf RST.Fields.Item(1) = 100000519 Then
                                CCValueRange(NextRow, 1) = 0
                            ElseIf RST.Fields.Item(1) = 100000520 Then
                                CCValueRange(NextRow, 1) = 0
                            Else
                                CCValueRange(NextRow, 1) = RST.Fields.Item(1)
                            End If
                        Else
                            RST.MoveFirst
                            ' Add to avoid summation errors when text error returned
                            CCValueRange(NextRow, 1) = 0
                        End If
                    Else
                        CCValueRange(NextRow, 1) = ""
                    End If
                    
    
                Next
            
            Set RST = Nothing
            
        End If
    End If
    
EntSQLGLCCRevisedBudget3CCRange_Zero:
    EntSQLGLCCRevisedBudget3CCRange = CCValueRange
    
    GoTo EntSQLGLCCRevisedBudget3CCRange_Exit
        
EntSQLGLCCRevisedBudget3CCRange_Error:
    If ErrStr = "" Then ErrStr = GetErrorNumStr
    EntSQLGLCCRevisedBudget3CCRange = ErrStr

EntSQLGLCCRevisedBudget3CCRange_Exit:

End Function

'*******************************************************************************************************
' Name:        EntSQLGLCCDpRevisedBudget3CCRange
' Description: Gets the General Ledger Revised Budget 3 values for the specified Currency, Year, Period, CC, Dp and GLCodes
'*******************************************************************************************************
Public Function EntSQLGLCCDpRevisedBudget3CCRange(Company$, TheYear%, ThePeriod%, TheCcy%, GLCode As Long, CCCodes As Range, DpCode$) As Variant
On Error GoTo EntSQLGLCCDpRevisedBudget3CCRange_Error
    Dim ErrStr$
    Dim DblVal As Double
    Dim Result%
    Dim stADO As String
    Dim RST As ADODB.Recordset
    Dim stSQL As String
    Dim AddVal As Double
    Dim CurrInv As Boolean
    Dim CCRange As String
    Dim CCRowRange(1000) As Double
    Dim CCCodeRange(1000) As String
    Dim CCValueRange() As Variant
    Dim CCRowCount As Double
    Dim NextRow As Double
    
    DoEvents
    
    Result% = 0
    
    DblVal# = 0#
    
    CompStr$ = UCase(Company$)
    
    If ValidCompany(Company) And ValidYear(TheYear) And ValidPeriod(ThePeriod) And ValidCcy(TheCcy%) And ValidGLCode(CStr(GLCode)) And ValidCCDep(False, DpCode$) Then
        If LocalCheckServer() Then
            
            'Check User Permissions
            Result = EntServer.CheckUserPermission(Company$, 487)
            
            If Result <> 0 Then
                Error Result
                GoTo EntSQLGLCCDpRevisedBudget3CCRange_Error
            End If
            
            'Concatenate CC Range into CSV for passing to SQL select statement
            CCRowCount = 1
            
            For Each CCCodes In CCCodes.Rows
                
                If CStr(CCCodes.Value) <> "" Then
                    CCRange = CCRange + CStr(CCCodes.Value) & "','"
                    CCRowRange(CCRowCount) = CCCodes.Row
                    CCCodeRange(CCRowCount) = CStr(CCCodes.Value)
                End If
                
                CCRowCount = CCRowCount + 1
            Next
            
            'Correct Row Count
            CCRowCount = CCRowCount - 1
            
            'Remove extra comma off end of csv list
            CCRange = Left(CCRange, Len(CCRange) - 2)
            
            CCRange = "'" & CCRange
            
            stSQL = "SELECT EXCHQCHKcode1Trans1," + CStr(Trim(CompStr$)) + ".ifn_GetNominalValue(8, " + CStr(TheYear%) + "," + CStr(ThePeriod%) + "," + CStr(TheCcy%) + "," + CStr(GLCode) + ",EXCHQCHKcode1Trans1,'" + CStr(Trim(DpCode$)) + "','C',0) " & _
                    "FROM " + CStr(Trim(CompStr$)) + ".EXCHQCHK WHERE (RecPfix = 'C' AND SubType = 67) AND EXCHQCHKcode1Trans1 IN (" & CStr(CCRange) & ")"
            
            OpenDBConnection (CompStr$)
            
            With CNT(CurrComp)
                .CommandTimeout = 0
                Set RST = .Execute(stSQL)
            End With
            
            If RST.RecordCount = 0 Then
                EntSQLGLCCDpRevisedBudget3CCRange = 0
                GoTo EntSQLGLCCDpRevisedBudget3CCRange_Exit
            End If
            
            ReDim CCValueRange(1 To CCRowCount, 1 To 1)
            
                For NextRow = 1 To CCRowCount
                    If CStr(CCCodeRange(NextRow)) <> "" Then
                        RST.MoveFirst
                        RST.Find ("EXCHQCHKcode1Trans1 = '" & CStr(CCCodeRange(NextRow))) & "'"
                        
                        If Not RST.EOF Then
                            If RST.Fields.Item(1) = 100000511 Then
                                CCValueRange(NextRow, 1) = 0
                            ElseIf RST.Fields.Item(1) = 100000519 Then
                                CCValueRange(NextRow, 1) = 0
                            ElseIf RST.Fields.Item(1) = 100000520 Then
                                CCValueRange(NextRow, 1) = 0
                            Else
                                CCValueRange(NextRow, 1) = RST.Fields.Item(1)
                            End If
                        Else
                            RST.MoveFirst
                            ' Add to avoid summation errors when text error returned
                            CCValueRange(NextRow, 1) = 0
                        End If
                    Else
                        CCValueRange(NextRow, 1) = ""
                    End If
                    
    
                Next
            
            Set RST = Nothing
            
        End If
    End If
    
EntSQLGLCCDpRevisedBudget3CCRange_Zero:
    EntSQLGLCCDpRevisedBudget3CCRange = CCValueRange
    
    GoTo EntSQLGLCCDpRevisedBudget3CCRange_Exit
        
EntSQLGLCCDpRevisedBudget3CCRange_Error:
    If ErrStr = "" Then ErrStr = GetErrorNumStr
    EntSQLGLCCDpRevisedBudget3CCRange = ErrStr

EntSQLGLCCDpRevisedBudget3CCRange_Exit:

End Function

'**************************************************************************************************************
'**                                              REVISED BUDGET 4                                                     **
'**************************************************************************************************************

'*******************************************************************************************************
' Name:        EntSQLGLCCRevisedBudget4CCRange
' Description: Gets the General Ledger Revised Budget 4 values for the specified Currency, Year, Period, CC and GLCodes
'*******************************************************************************************************
Public Function EntSQLGLCCRevisedBudget4CCRange(Company$, TheYear%, ThePeriod%, TheCcy%, GLCode As Long, CCCodes As Range) As Variant
On Error GoTo EntSQLGLCCRevisedBudget4CCRange_Error
    Dim ErrStr$
    Dim DblVal As Double
    Dim Result%
    Dim stADO As String
    Dim RST As ADODB.Recordset
    Dim stSQL As String
    Dim AddVal As Double
    Dim CurrInv As Boolean
    Dim CCRange As String
    Dim CCRowRange(1000) As Double
    Dim CCCodeRange(1000) As String
    Dim CCValueRange() As Variant
    Dim CCRowCount As Double
    Dim NextRow As Double
    
    DoEvents
    
    Result% = 0
    
    DblVal# = 0#
    
    CompStr$ = UCase(Company$)
    
    If ValidCompany(Company) And ValidYear(TheYear) And ValidPeriod(ThePeriod) And ValidCcy(TheCcy%) And ValidGLCode(GLCode) Then
        If LocalCheckServer() Then
            
            'Check User Permissions
            Result = EntServer.CheckUserPermission(Company$, 487)
            
            If Result <> 0 Then
                Error Result
                GoTo EntSQLGLCCRevisedBudget4CCRange_Error
            End If
            
            'Concatenate CC Range into CSV for passing to SQL select statement
            CCRowCount = 1
            
            For Each CCCodes In CCCodes.Rows
                
                If CStr(CCCodes.Value) <> "" Then
                    CCRange = CCRange + CStr(CCCodes.Value) & "','"
                    CCRowRange(CCRowCount) = CCCodes.Row
                    CCCodeRange(CCRowCount) = CStr(CCCodes.Value)
                End If
                
                CCRowCount = CCRowCount + 1
            Next
            
            'Correct Row Count
            CCRowCount = CCRowCount - 1
            
            'Remove extra comma off end of csv list
            CCRange = Left(CCRange, Len(CCRange) - 2)
            
            CCRange = "'" & CCRange
            
            stSQL = "SELECT EXCHQCHKcode1Trans1," + CStr(Trim(CompStr$)) + ".ifn_GetNominalValue(9, " + CStr(TheYear%) + "," + CStr(ThePeriod%) + "," + CStr(TheCcy%) + "," + CStr(GLCode) + ",EXCHQCHKcode1Trans1,'','C',0)" & _
                    "FROM " + CStr(Trim(CompStr$)) + ".EXCHQCHK WHERE (RecPfix = 'C' AND SubType = 67) AND EXCHQCHKcode1Trans1 IN (" & CStr(CCRange) & ")"
            
            OpenDBConnection (CompStr$)
            
            With CNT(CurrComp)
                .CommandTimeout = 0
                Set RST = .Execute(stSQL)
            End With
            
            If RST.RecordCount = 0 Then
                EntSQLGLCCRevisedBudget4CCRange = 0
                GoTo EntSQLGLCCRevisedBudget4CCRange_Exit
            End If
            
            ReDim CCValueRange(1 To CCRowCount, 1 To 1)
            
                For NextRow = 1 To CCRowCount
                    If CStr(CCCodeRange(NextRow)) <> "" Then
                        RST.MoveFirst
                        RST.Find ("EXCHQCHKcode1Trans1 = '" & CStr(CCCodeRange(NextRow))) & "'"
                        
                        If Not RST.EOF Then
                            If RST.Fields.Item(1) = 100000511 Then
                                CCValueRange(NextRow, 1) = 0
                            ElseIf RST.Fields.Item(1) = 100000519 Then
                                CCValueRange(NextRow, 1) = 0
                            ElseIf RST.Fields.Item(1) = 100000520 Then
                                CCValueRange(NextRow, 1) = 0
                            Else
                                CCValueRange(NextRow, 1) = RST.Fields.Item(1)
                            End If
                        Else
                            RST.MoveFirst
                            ' Add to avoid summation errors when text error returned
                            CCValueRange(NextRow, 1) = 0
                        End If
                    Else
                        CCValueRange(NextRow, 1) = ""
                    End If
                    
    
                Next
            
            Set RST = Nothing
            
        End If
    End If
    
EntSQLGLCCRevisedBudget4CCRange_Zero:
    EntSQLGLCCRevisedBudget4CCRange = CCValueRange
    
    GoTo EntSQLGLCCRevisedBudget4CCRange_Exit
        
EntSQLGLCCRevisedBudget4CCRange_Error:
    If ErrStr = "" Then ErrStr = GetErrorNumStr
    EntSQLGLCCRevisedBudget4CCRange = ErrStr

EntSQLGLCCRevisedBudget4CCRange_Exit:

End Function

'*******************************************************************************************************
' Name:        EntSQLGLCCDpRevisedBudget4CCRange
' Description: Gets the General Ledger Revised Budget 4 values for the specified Currency, Year, Period, CC, Dp and GLCodes
'*******************************************************************************************************
Public Function EntSQLGLCCDpRevisedBudget4CCRange(Company$, TheYear%, ThePeriod%, TheCcy%, GLCode As Long, CCCodes As Range, DpCode$) As Variant
On Error GoTo EntSQLGLCCDpRevisedBudget4CCRange_Error
    Dim ErrStr$
    Dim DblVal As Double
    Dim Result%
    Dim stADO As String
    Dim RST As ADODB.Recordset
    Dim stSQL As String
    Dim AddVal As Double
    Dim CurrInv As Boolean
    Dim CCRange As String
    Dim CCRowRange(1000) As Double
    Dim CCCodeRange(1000) As String
    Dim CCValueRange() As Variant
    Dim CCRowCount As Double
    Dim NextRow As Double
    
    DoEvents
    
    Result% = 0
    
    DblVal# = 0#
    
    CompStr$ = UCase(Company$)
    
    If ValidCompany(Company) And ValidYear(TheYear) And ValidPeriod(ThePeriod) And ValidCcy(TheCcy%) And ValidGLCode(CStr(GLCode)) And ValidCCDep(False, DpCode$) Then
        If LocalCheckServer() Then
            
            'Check User Permissions
            Result = EntServer.CheckUserPermission(Company$, 487)
            
            If Result <> 0 Then
                Error Result
                GoTo EntSQLGLCCDpRevisedBudget4CCRange_Error
            End If
            
            'Concatenate CC Range into CSV for passing to SQL select statement
            CCRowCount = 1
            
            For Each CCCodes In CCCodes.Rows
                
                If CStr(CCCodes.Value) <> "" Then
                    CCRange = CCRange + CStr(CCCodes.Value) & "','"
                    CCRowRange(CCRowCount) = CCCodes.Row
                    CCCodeRange(CCRowCount) = CStr(CCCodes.Value)
                End If
                
                CCRowCount = CCRowCount + 1
            Next
            
            'Correct Row Count
            CCRowCount = CCRowCount - 1
            
            'Remove extra comma off end of csv list
            CCRange = Left(CCRange, Len(CCRange) - 2)
            
            CCRange = "'" & CCRange
            
            stSQL = "SELECT EXCHQCHKcode1Trans1," + CStr(Trim(CompStr$)) + ".ifn_GetNominalValue(9, " + CStr(TheYear%) + "," + CStr(ThePeriod%) + "," + CStr(TheCcy%) + "," + CStr(GLCode) + ",EXCHQCHKcode1Trans1,'" + CStr(Trim(DpCode$)) + "','C',0) " & _
                    "FROM " + CStr(Trim(CompStr$)) + ".EXCHQCHK WHERE (RecPfix = 'C' AND SubType = 67) AND EXCHQCHKcode1Trans1 IN (" & CStr(CCRange) & ")"
            
            OpenDBConnection (CompStr$)
            
            With CNT(CurrComp)
                .CommandTimeout = 0
                Set RST = .Execute(stSQL)
            End With
            
            If RST.RecordCount = 0 Then
                EntSQLGLCCDpRevisedBudget4CCRange = 0
                GoTo EntSQLGLCCDpRevisedBudget4CCRange_Exit
            End If
            
            ReDim CCValueRange(1 To CCRowCount, 1 To 1)
            
                For NextRow = 1 To CCRowCount
                    If CStr(CCCodeRange(NextRow)) <> "" Then
                        RST.MoveFirst
                        RST.Find ("EXCHQCHKcode1Trans1 = '" & CStr(CCCodeRange(NextRow))) & "'"
                        
                        If Not RST.EOF Then
                            If RST.Fields.Item(1) = 100000511 Then
                                CCValueRange(NextRow, 1) = 0
                            ElseIf RST.Fields.Item(1) = 100000519 Then
                                CCValueRange(NextRow, 1) = 0
                            ElseIf RST.Fields.Item(1) = 100000520 Then
                                CCValueRange(NextRow, 1) = 0
                            Else
                                CCValueRange(NextRow, 1) = RST.Fields.Item(1)
                            End If
                        Else
                            RST.MoveFirst
                            ' Add to avoid summation errors when text error returned
                            CCValueRange(NextRow, 1) = 0
                        End If
                    Else
                        CCValueRange(NextRow, 1) = ""
                    End If
                    
    
                Next
            
            Set RST = Nothing
            
        End If
    End If
    
EntSQLGLCCDpRevisedBudget4CCRange_Zero:
    EntSQLGLCCDpRevisedBudget4CCRange = CCValueRange
    
    GoTo EntSQLGLCCDpRevisedBudget4CCRange_Exit
        
EntSQLGLCCDpRevisedBudget4CCRange_Error:
    If ErrStr = "" Then ErrStr = GetErrorNumStr
    EntSQLGLCCDpRevisedBudget4CCRange = ErrStr

EntSQLGLCCDpRevisedBudget4CCRange_Exit:

End Function


'**************************************************************************************************************
'**                                              REVISED BUDGET 5                                                     **
'**************************************************************************************************************

'*******************************************************************************************************
' Name:        EntSQLGLCCRevisedBudget5CCRange
' Description: Gets the General Ledger Revised Budget 5 values for the specified Currency, Year, Period, CC and GLCodes
'*******************************************************************************************************
Public Function EntSQLGLCCRevisedBudget5CCRange(Company$, TheYear%, ThePeriod%, TheCcy%, GLCode As Long, CCCodes As Range) As Variant
On Error GoTo EntSQLGLCCRevisedBudget5CCRange_Error
    Dim ErrStr$
    Dim DblVal As Double
    Dim Result%
    Dim stADO As String
    Dim RST As ADODB.Recordset
    Dim stSQL As String
    Dim AddVal As Double
    Dim CurrInv As Boolean
    Dim CCRange As String
    Dim CCRowRange(1000) As Double
    Dim CCCodeRange(1000) As String
    Dim CCValueRange() As Variant
    Dim CCRowCount As Double
    Dim NextRow As Double
    
    DoEvents
    
    Result% = 0
    
    DblVal# = 0#
    
    CompStr$ = UCase(Company$)
    
    If ValidCompany(Company) And ValidYear(TheYear) And ValidPeriod(ThePeriod) And ValidCcy(TheCcy%) And ValidGLCode(GLCode) Then
        If LocalCheckServer() Then
            
            'Check User Permissions
            Result = EntServer.CheckUserPermission(Company$, 487)
            
            If Result <> 0 Then
                Error Result
                GoTo EntSQLGLCCRevisedBudget5CCRange_Error
            End If
            
            'Concatenate CC Range into CSV for passing to SQL select statement
            CCRowCount = 1
            
            For Each CCCodes In CCCodes.Rows
                
                If CStr(CCCodes.Value) <> "" Then
                    CCRange = CCRange + CStr(CCCodes.Value) & "','"
                    CCRowRange(CCRowCount) = CCCodes.Row
                    CCCodeRange(CCRowCount) = CStr(CCCodes.Value)
                End If
                
                CCRowCount = CCRowCount + 1
            Next
            
            'Correct Row Count
            CCRowCount = CCRowCount - 1
            
            'Remove extra comma off end of csv list
            CCRange = Left(CCRange, Len(CCRange) - 2)
            
            CCRange = "'" & CCRange
            
            stSQL = "SELECT EXCHQCHKcode1Trans1," + CStr(Trim(CompStr$)) + ".ifn_GetNominalValue(10, " + CStr(TheYear%) + "," + CStr(ThePeriod%) + "," + CStr(TheCcy%) + "," + CStr(GLCode) + ",EXCHQCHKcode1Trans1,'','C',0)" & _
                    "FROM " + CStr(Trim(CompStr$)) + ".EXCHQCHK WHERE (RecPfix = 'C' AND SubType = 67) AND EXCHQCHKcode1Trans1 IN (" & CStr(CCRange) & ")"
            
            OpenDBConnection (CompStr$)
            
            With CNT(CurrComp)
                .CommandTimeout = 0
                Set RST = .Execute(stSQL)
            End With
            
            If RST.RecordCount = 0 Then
                EntSQLGLCCRevisedBudget5CCRange = 0
                GoTo EntSQLGLCCRevisedBudget5CCRange_Exit
            End If
            
            ReDim CCValueRange(1 To CCRowCount, 1 To 1)
            
                For NextRow = 1 To CCRowCount
                    If CStr(CCCodeRange(NextRow)) <> "" Then
                        RST.MoveFirst
                        RST.Find ("EXCHQCHKcode1Trans1 = '" & CStr(CCCodeRange(NextRow))) & "'"
                        
                        If Not RST.EOF Then
                            If RST.Fields.Item(1) = 100000511 Then
                                CCValueRange(NextRow, 1) = 0
                            ElseIf RST.Fields.Item(1) = 100000519 Then
                                CCValueRange(NextRow, 1) = 0
                            ElseIf RST.Fields.Item(1) = 100000520 Then
                                CCValueRange(NextRow, 1) = 0
                            Else
                                CCValueRange(NextRow, 1) = RST.Fields.Item(1)
                            End If
                        Else
                            RST.MoveFirst
                            ' Add to avoid summation errors when text error returned
                            CCValueRange(NextRow, 1) = 0
                        End If
                    Else
                        CCValueRange(NextRow, 1) = ""
                    End If
                    
    
                Next
            
            Set RST = Nothing
            
        End If
    End If
    
EntSQLGLCCRevisedBudget5CCRange_Zero:
    EntSQLGLCCRevisedBudget5CCRange = CCValueRange
    
    GoTo EntSQLGLCCRevisedBudget5CCRange_Exit
        
EntSQLGLCCRevisedBudget5CCRange_Error:
    If ErrStr = "" Then ErrStr = GetErrorNumStr
    EntSQLGLCCRevisedBudget5CCRange = ErrStr

EntSQLGLCCRevisedBudget5CCRange_Exit:

End Function

'*******************************************************************************************************
' Name:        EntSQLGLCCDpRevisedBudget5CCRange
' Description: Gets the General Ledger Revised Budget 5 values for the specified Currency, Year, Period, CC, Dp and GLCodes
'*******************************************************************************************************
Public Function EntSQLGLCCDpRevisedBudget5CCRange(Company$, TheYear%, ThePeriod%, TheCcy%, GLCode As Long, CCCodes As Range, DpCode$) As Variant
On Error GoTo EntSQLGLCCDpRevisedBudget5CCRange_Error
    Dim ErrStr$
    Dim DblVal As Double
    Dim Result%
    Dim stADO As String
    Dim RST As ADODB.Recordset
    Dim stSQL As String
    Dim AddVal As Double
    Dim CurrInv As Boolean
    Dim CCRange As String
    Dim CCRowRange(1000) As Double
    Dim CCCodeRange(1000) As String
    Dim CCValueRange() As Variant
    Dim CCRowCount As Double
    Dim NextRow As Double
    
    DoEvents
    
    Result% = 0
    
    DblVal# = 0#
    
    CompStr$ = UCase(Company$)
    
    If ValidCompany(Company) And ValidYear(TheYear) And ValidPeriod(ThePeriod) And ValidCcy(TheCcy%) And ValidGLCode(CStr(GLCode)) And ValidCCDep(False, DpCode$) Then
        If LocalCheckServer() Then
            
            'Check User Permissions
            Result = EntServer.CheckUserPermission(Company$, 487)
            
            If Result <> 0 Then
                Error Result
                GoTo EntSQLGLCCDpRevisedBudget5CCRange_Error
            End If
            
            'Concatenate CC Range into CSV for passing to SQL select statement
            CCRowCount = 1
            
            For Each CCCodes In CCCodes.Rows
                
                If CStr(CCCodes.Value) <> "" Then
                    CCRange = CCRange + CStr(CCCodes.Value) & "','"
                    CCRowRange(CCRowCount) = CCCodes.Row
                    CCCodeRange(CCRowCount) = CStr(CCCodes.Value)
                End If
                
                CCRowCount = CCRowCount + 1
            Next
            
            'Correct Row Count
            CCRowCount = CCRowCount - 1
            
            'Remove extra comma off end of csv list
            CCRange = Left(CCRange, Len(CCRange) - 2)
            
            CCRange = "'" & CCRange
            
            stSQL = "SELECT EXCHQCHKcode1Trans1," + CStr(Trim(CompStr$)) + ".ifn_GetNominalValue(10, " + CStr(TheYear%) + "," + CStr(ThePeriod%) + "," + CStr(TheCcy%) + "," + CStr(GLCode) + ",EXCHQCHKcode1Trans1,'" + CStr(Trim(DpCode$)) + "','C',0) " & _
                    "FROM " + CStr(Trim(CompStr$)) + ".EXCHQCHK WHERE (RecPfix = 'C' AND SubType = 67) AND EXCHQCHKcode1Trans1 IN (" & CStr(CCRange) & ")"
            
            OpenDBConnection (CompStr$)
            
            With CNT(CurrComp)
                .CommandTimeout = 0
                Set RST = .Execute(stSQL)
            End With
            
            If RST.RecordCount = 0 Then
                EntSQLGLCCDpRevisedBudget5CCRange = 0
                GoTo EntSQLGLCCDpRevisedBudget5CCRange_Exit
            End If
            
            ReDim CCValueRange(1 To CCRowCount, 1 To 1)
            
                For NextRow = 1 To CCRowCount
                    If CStr(CCCodeRange(NextRow)) <> "" Then
                        RST.MoveFirst
                        RST.Find ("EXCHQCHKcode1Trans1 = '" & CStr(CCCodeRange(NextRow))) & "'"
                        
                        If Not RST.EOF Then
                            If RST.Fields.Item(1) = 100000511 Then
                                CCValueRange(NextRow, 1) = 0
                            ElseIf RST.Fields.Item(1) = 100000519 Then
                                CCValueRange(NextRow, 1) = 0
                            ElseIf RST.Fields.Item(1) = 100000520 Then
                                CCValueRange(NextRow, 1) = 0
                            Else
                                CCValueRange(NextRow, 1) = RST.Fields.Item(1)
                            End If
                        Else
                            RST.MoveFirst
                            ' Add to avoid summation errors when text error returned
                            CCValueRange(NextRow, 1) = 0
                        End If
                    Else
                        CCValueRange(NextRow, 1) = ""
                    End If
                    
    
                Next
            
            Set RST = Nothing
            
        End If
    End If
    
EntSQLGLCCDpRevisedBudget5CCRange_Zero:
    EntSQLGLCCDpRevisedBudget5CCRange = CCValueRange
    
    GoTo EntSQLGLCCDpRevisedBudget5CCRange_Exit
        
EntSQLGLCCDpRevisedBudget5CCRange_Error:
    If ErrStr = "" Then ErrStr = GetErrorNumStr
    EntSQLGLCCDpRevisedBudget5CCRange = ErrStr

EntSQLGLCCDpRevisedBudget5CCRange_Exit:

End Function
Attribute VB_Name = "GLGetDpRanges"
Option Explicit
Public Message As String

'*******************************************************************************************************
' Name:        EntSQLGLDpActualDpRange
' Description: Gets the General Ledger Actual values for the specified Currency, Year, Period, Depts and GLCode
'*******************************************************************************************************
Public Function EntSQLGLDpActualDpRange(Company$, TheYear%, ThePeriod%, TheCcy%, GLCode As Long, DpCodes As Range) As Variant
Attribute EntSQLGLDpActualDpRange.VB_Description = "This function returns the General Ledger Actual value for the specified Currency, Year, Period, GLCode and Departments."
On Error GoTo EntSQLGLDpActualDpRange_Error
    Dim ErrStr$
    Dim DblVal As Double
    Dim Result%
    Dim stADO As String
    Dim RST As ADODB.Recordset
    Dim stSQL As String
    Dim AddVal As Double
    Dim CurrInv As Boolean
    Dim DpRange As String
    Dim DpRowRange(1000) As Double
    Dim DpCodeRange(1000) As String
    Dim DpValueRange() As Variant
    Dim DpRowCount As Double
    Dim NextRow As Double
    
    DoEvents
    
    Result% = 0
    
    DblVal# = 0#
    
    CompStr$ = UCase(Company$)
    
    If ValidCompany(Company) And ValidYear(TheYear) And ValidPeriod(ThePeriod) And ValidCcy(TheCcy%) And ValidGLCode(GLCode) Then
        If LocalCheckServer() Then
            
            'Check User Permissions
            Result = EntServer.CheckUserPermission(Company$, 487)
            
            If Result <> 0 Then
                Error Result
                GoTo EntSQLGLDpActualDpRange_Error
            End If
            
            'Concatenate Dp Range into CSV for passing to SQL select statement
            DpRowCount = 1
            
            For Each DpCodes In DpCodes.Rows
                
                If CStr(DpCodes.Value) <> "" Then
                    DpRange = DpRange + CStr(DpCodes.Value) & "','"
                    DpRowRange(DpRowCount) = DpCodes.Row
                    DpCodeRange(DpRowCount) = CStr(DpCodes.Value)
                End If
                
                DpRowCount = DpRowCount + 1
            Next
            
            'Correct Row Count
            DpRowCount = DpRowCount - 1
            
            'Remove extra comma off end of csv list
            DpRange = Left(DpRange, Len(DpRange) - 2)
            
            DpRange = "'" & DpRange
            
            stSQL = "SELECT EXCHQCHKcode1Trans1," + CStr(Trim(CompStr$)) + ".ifn_GetNominalValue(3, " + CStr(TheYear%) + "," + CStr(ThePeriod%) + "," + CStr(TheCcy%) + "," + CStr(GLCode) + ",'',EXCHQCHKcode1Trans1,'D',0)" & _
                    "FROM " + CStr(Trim(CompStr$)) + ".EXCHQCHK WHERE (RecPfix = 'C' AND SubType = 68) AND EXCHQCHKcode1Trans1 IN (" & CStr(DpRange) & ")"
            
            OpenDBConnection (CompStr$)
            
            With CNT(CurrComp)
                .CommandTimeout = 0
                Set RST = .Execute(stSQL)
            End With
            
            If RST.RecordCount = 0 Then
                EntSQLGLDpActualDpRange = 0
                GoTo EntSQLGLDpActualDpRange_Exit
            End If
            
            ReDim DpValueRange(1 To DpRowCount, 1 To 1)
            
                For NextRow = 1 To DpRowCount
                    If CStr(DpCodeRange(NextRow)) <> "" Then
                        RST.MoveFirst
                        RST.Find ("EXCHQCHKcode1Trans1 = '" & CStr(DpCodeRange(NextRow))) & "'"
                        
                        If Not RST.EOF Then
                            If RST.Fields.Item(1) = 100000511 Then
                                DpValueRange(NextRow, 1) = 0
                            ElseIf RST.Fields.Item(1) = 100000519 Then
                                DpValueRange(NextRow, 1) = 0
                            ElseIf RST.Fields.Item(1) = 100000520 Then
                                DpValueRange(NextRow, 1) = 0
                            Else
                                DpValueRange(NextRow, 1) = RST.Fields.Item(1)
                            End If
                        Else
                            RST.MoveFirst
                            ' Add to avoid summation errors when text error returned
                            DpValueRange(NextRow, 1) = 0
                        End If
                    Else
                        DpValueRange(NextRow, 1) = ""
                    End If
                    
    
                Next
            
            Set RST = Nothing
            
        End If
    End If
    
EntSQLGLDpActualDpRange_Zero:
    EntSQLGLDpActualDpRange = DpValueRange
    
    GoTo EntSQLGLDpActualDpRange_Exit
        
EntSQLGLDpActualDpRange_Error:
    If ErrStr = "" Then ErrStr = GetErrorNumStr
    EntSQLGLDpActualDpRange = ErrStr

EntSQLGLDpActualDpRange_Exit:

End Function

'*******************************************************************************************************
' Name:        EntSQLGLCCDpActualDpRange
' Description: Gets the General Ledger Actual values for the specified Currency, Year, Period, CC, Dps and GLCode
'*******************************************************************************************************
Public Function EntSQLGLCCDpActualDpRange(Company$, TheYear%, ThePeriod%, TheCcy%, GLCode As Long, CCCode$, DpCodes As Range) As Variant
Attribute EntSQLGLCCDpActualDpRange.VB_Description = "This function returns the General Ledger Actual value for the specified Currency, Year, Period, GLCode CostCentre and Departments."
On Error GoTo EntSQLGLCCDpActualDpRange_Error
    Dim ErrStr$
    Dim DblVal As Double
    Dim Result%
    Dim stADO As String
    Dim RST As ADODB.Recordset
    Dim stSQL As String
    Dim AddVal As Double
    Dim CurrInv As Boolean
    Dim DpRange As String
    Dim DpRowRange(1000) As Double
    Dim DpCodeRange(1000) As String
    Dim DpValueRange() As Variant
    Dim DpRowCount As Double
    Dim NextRow As Double
    
    DoEvents
    
    Result% = 0
    
    DblVal# = 0#
    
    CompStr$ = UCase(Company$)
    
    If ValidCompany(Company) And ValidYear(TheYear) And ValidPeriod(ThePeriod) And ValidCcy(TheCcy%) And ValidGLCode(CStr(GLCode)) And ValidCCDep(True, CCCode$) Then
        If LocalCheckServer() Then
            
            'Check User Permissions
            Result = EntServer.CheckUserPermission(Company$, 487)
            
            If Result <> 0 Then
                Error Result
                GoTo EntSQLGLCCDpActualDpRange_Error
            End If
            
            'Concatenate Dp Range into CSV for passing to SQL select statement
            DpRowCount = 1
            
            For Each DpCodes In DpCodes.Rows
                
                If CStr(DpCodes.Value) <> "" Then
                    DpRange = DpRange + CStr(DpCodes.Value) & "','"
                    DpRowRange(DpRowCount) = DpCodes.Row
                    DpCodeRange(DpRowCount) = CStr(DpCodes.Value)
                End If
                
                DpRowCount = DpRowCount + 1
            Next
            
            'Correct Row Count
            DpRowCount = DpRowCount - 1
            
            'Remove extra comma off end of csv list
            DpRange = Left(DpRange, Len(DpRange) - 2)
            
            DpRange = "'" & DpRange
            
            stSQL = "SELECT EXCHQCHKcode1Trans1," + CStr(Trim(CompStr$)) + ".ifn_GetNominalValue(3, " + CStr(TheYear%) + "," + CStr(ThePeriod%) + "," + CStr(TheCcy%) + "," + CStr(GLCode) + ",'" + CStr(Trim(CCCode$)) + "',EXCHQCHKcode1Trans1" + ",'C',0) " & _
                    "FROM " + CStr(Trim(CompStr$)) + ".EXCHQCHK WHERE (RecPfix = 'C' AND SubType = 68) AND EXCHQCHKcode1Trans1 IN (" & CStr(DpRange) & ")"
            
            OpenDBConnection (CompStr$)
            
            With CNT(CurrComp)
                .CommandTimeout = 0
                Set RST = .Execute(stSQL)
            End With
            
            If RST.RecordCount = 0 Then
                EntSQLGLCCDpActualDpRange = 0
                GoTo EntSQLGLCCDpActualDpRange_Exit
            End If
            
            ReDim DpValueRange(1 To DpRowCount, 1 To 1)
            
                For NextRow = 1 To DpRowCount
                    If CStr(DpCodeRange(NextRow)) <> "" Then
                        RST.MoveFirst
                        RST.Find ("EXCHQCHKcode1Trans1 = '" & CStr(DpCodeRange(NextRow))) & "'"
                        
                        If Not RST.EOF Then
                            If RST.Fields.Item(1) = 100000511 Then
                                DpValueRange(NextRow, 1) = 0
                            ElseIf RST.Fields.Item(1) = 100000519 Then
                                DpValueRange(NextRow, 1) = 0
                            ElseIf RST.Fields.Item(1) = 100000520 Then
                                DpValueRange(NextRow, 1) = 0
                            Else
                                DpValueRange(NextRow, 1) = RST.Fields.Item(1)
                            End If
                        Else
                            RST.MoveFirst
                            ' Add to avoid summation errors when text error returned
                            DpValueRange(NextRow, 1) = 0
                        End If
                    Else
                        DpValueRange(NextRow, 1) = ""
                    End If
                    
    
                Next
            
            Set RST = Nothing
            
        End If
    End If
    
EntSQLGLCCDpActualDpRange_Zero:
    EntSQLGLCCDpActualDpRange = DpValueRange
    
    GoTo EntSQLGLCCDpActualDpRange_Exit
        
EntSQLGLCCDpActualDpRange_Error:
    If ErrStr = "" Then ErrStr = GetErrorNumStr
    EntSQLGLCCDpActualDpRange = ErrStr

EntSQLGLCCDpActualDpRange_Exit:

End Function

'**************************************************************************************************************
'**                                              BUDGET                                                      **
'**************************************************************************************************************

'*******************************************************************************************************
' Name:        EntSQLGLDpBudgetDpRange
' Description: Gets the General Ledger Budget values for the specified Currency, Year, Period, Depts and GLCode
'*******************************************************************************************************
Public Function EntSQLGLDpBudgetDpRange(Company$, TheYear%, ThePeriod%, TheCcy%, GLCode As Long, DpCodes As Range) As Variant
Attribute EntSQLGLDpBudgetDpRange.VB_Description = "This function returns the General Ledger Budget value for the specified Currency, Year, Period, GLCode and Departments."
On Error GoTo EntSQLGLDpBudgetDpRange_Error
    Dim ErrStr$
    Dim DblVal As Double
    Dim Result%
    Dim stADO As String
    Dim RST As ADODB.Recordset
    Dim stSQL As String
    Dim AddVal As Double
    Dim CurrInv As Boolean
    Dim DpRange As String
    Dim DpRowRange(1000) As Double
    Dim DpCodeRange(1000) As String
    Dim DpValueRange() As Variant
    Dim DpRowCount As Double
    Dim NextRow As Double
    
    DoEvents
    
    Result% = 0
    
    DblVal# = 0#
    
    CompStr$ = UCase(Company$)
    
    If ValidCompany(Company) And ValidYear(TheYear) And ValidPeriod(ThePeriod) And ValidCcy(TheCcy%) And ValidGLCode(GLCode) Then
        If LocalCheckServer() Then
            
            'Check User Permissions
            Result = EntServer.CheckUserPermission(Company$, 487)
            
            If Result <> 0 Then
                Error Result
                GoTo EntSQLGLDpBudgetDpRange_Error
            End If
            
            'Concatenate Dp Range into CSV for passing to SQL select statement
            DpRowCount = 1
            
            For Each DpCodes In DpCodes.Rows
                
                If CStr(DpCodes.Value) <> "" Then
                    DpRange = DpRange + CStr(DpCodes.Value) & "','"
                    DpRowRange(DpRowCount) = DpCodes.Row
                    DpCodeRange(DpRowCount) = CStr(DpCodes.Value)
                End If
                
                DpRowCount = DpRowCount + 1
            Next
            
            'Correct Row Count
            DpRowCount = DpRowCount - 1
            
            'Remove extra comma off end of csv list
            DpRange = Left(DpRange, Len(DpRange) - 2)
            
            DpRange = "'" & DpRange
            
            stSQL = "SELECT EXCHQCHKcode1Trans1," + CStr(Trim(CompStr$)) + ".ifn_GetNominalValue(4, " + CStr(TheYear%) + "," + CStr(ThePeriod%) + "," + CStr(TheCcy%) + "," + CStr(GLCode) + ",'',EXCHQCHKcode1Trans1,'D',0)" & _
                    "FROM " + CStr(Trim(CompStr$)) + ".EXCHQCHK WHERE (RecPfix = 'C' AND SubType = 68) AND EXCHQCHKcode1Trans1 IN (" & CStr(DpRange) & ")"
            
            OpenDBConnection (CompStr$)
            
            With CNT(CurrComp)
                .CommandTimeout = 0
                Set RST = .Execute(stSQL)
            End With
            
            If RST.RecordCount = 0 Then
                EntSQLGLDpBudgetDpRange = 0
                GoTo EntSQLGLDpBudgetDpRange_Exit
            End If
            
            ReDim DpValueRange(1 To DpRowCount, 1 To 1)
            
                For NextRow = 1 To DpRowCount
                    If CStr(DpCodeRange(NextRow)) <> "" Then
                        RST.MoveFirst
                        RST.Find ("EXCHQCHKcode1Trans1 = '" & CStr(DpCodeRange(NextRow))) & "'"
                        
                        If Not RST.EOF Then
                            If RST.Fields.Item(1) = 100000511 Then
                                DpValueRange(NextRow, 1) = 0
                            ElseIf RST.Fields.Item(1) = 100000519 Then
                                DpValueRange(NextRow, 1) = 0
                            ElseIf RST.Fields.Item(1) = 100000520 Then
                                DpValueRange(NextRow, 1) = 0
                            Else
                                DpValueRange(NextRow, 1) = RST.Fields.Item(1)
                            End If
                        Else
                            RST.MoveFirst
                            ' Add to avoid summation errors when text error returned
                            DpValueRange(NextRow, 1) = 0
                        End If
                    Else
                        DpValueRange(NextRow, 1) = ""
                    End If
                    
    
                Next
            
            Set RST = Nothing
            
        End If
    End If
    
EntSQLGLDpBudgetDpRange_Zero:
    EntSQLGLDpBudgetDpRange = DpValueRange
    
    GoTo EntSQLGLDpBudgetDpRange_Exit
        
EntSQLGLDpBudgetDpRange_Error:
    If ErrStr = "" Then ErrStr = GetErrorNumStr
    EntSQLGLDpBudgetDpRange = ErrStr

EntSQLGLDpBudgetDpRange_Exit:

End Function

'*******************************************************************************************************
' Name:        EntSQLGLCCDpBudgetDpRange
' Description: Gets the General Ledger Budget values for the specified Currency, Year, Period, CC, Dps and GLCode
'*******************************************************************************************************
Public Function EntSQLGLCCDpBudgetDpRange(Company$, TheYear%, ThePeriod%, TheCcy%, GLCode As Long, CCCode$, DpCodes As Range) As Variant
Attribute EntSQLGLCCDpBudgetDpRange.VB_Description = "This function returns the General Ledger Budget value for the specified Currency, Year, Period, GLCode CostCentre and Departments."
On Error GoTo EntSQLGLCCDpBudgetDpRange_Error
    Dim ErrStr$
    Dim DblVal As Double
    Dim Result%
    Dim stADO As String
    Dim RST As ADODB.Recordset
    Dim stSQL As String
    Dim AddVal As Double
    Dim CurrInv As Boolean
    Dim DpRange As String
    Dim DpRowRange(1000) As Double
    Dim DpCodeRange(1000) As String
    Dim DpValueRange() As Variant
    Dim DpRowCount As Double
    Dim NextRow As Double
    
    DoEvents
    
    Result% = 0
    
    DblVal# = 0#
    
    CompStr$ = UCase(Company$)
    
    If ValidCompany(Company) And ValidYear(TheYear) And ValidPeriod(ThePeriod) And ValidCcy(TheCcy%) And ValidGLCode(CStr(GLCode)) And ValidCCDep(True, CCCode$) Then
        If LocalCheckServer() Then
            
            'Check User Permissions
            Result = EntServer.CheckUserPermission(Company$, 487)
            
            If Result <> 0 Then
                Error Result
                GoTo EntSQLGLCCDpBudgetDpRange_Error
            End If
            
            'Concatenate Dp Range into CSV for passing to SQL select statement
            DpRowCount = 1
            
            For Each DpCodes In DpCodes.Rows
                
                If CStr(DpCodes.Value) <> "" Then
                    DpRange = DpRange + CStr(DpCodes.Value) & "','"
                    DpRowRange(DpRowCount) = DpCodes.Row
                    DpCodeRange(DpRowCount) = CStr(DpCodes.Value)
                End If
                
                DpRowCount = DpRowCount + 1
            Next
            
            'Correct Row Count
            DpRowCount = DpRowCount - 1
            
            'Remove extra comma off end of csv list
            DpRange = Left(DpRange, Len(DpRange) - 2)
            
            DpRange = "'" & DpRange
            
            stSQL = "SELECT EXCHQCHKcode1Trans1," + CStr(Trim(CompStr$)) + ".ifn_GetNominalValue(4, " + CStr(TheYear%) + "," + CStr(ThePeriod%) + "," + CStr(TheCcy%) + "," + CStr(GLCode) + ",'" + CStr(Trim(CCCode$)) + "',EXCHQCHKcode1Trans1" + ",'C',0) " & _
                    "FROM " + CStr(Trim(CompStr$)) + ".EXCHQCHK WHERE (RecPfix = 'C' AND SubType = 68) AND EXCHQCHKcode1Trans1 IN (" & CStr(DpRange) & ")"
            
            OpenDBConnection (CompStr$)
            
            With CNT(CurrComp)
                .CommandTimeout = 0
                Set RST = .Execute(stSQL)
            End With
            
            If RST.RecordCount = 0 Then
                EntSQLGLCCDpBudgetDpRange = 0
                GoTo EntSQLGLCCDpBudgetDpRange_Exit
            End If
            
            ReDim DpValueRange(1 To DpRowCount, 1 To 1)
            
                For NextRow = 1 To DpRowCount
                    If CStr(DpCodeRange(NextRow)) <> "" Then
                        RST.MoveFirst
                        RST.Find ("EXCHQCHKcode1Trans1 = '" & CStr(DpCodeRange(NextRow))) & "'"
                        
                        If Not RST.EOF Then
                            If RST.Fields.Item(1) = 100000511 Then
                                DpValueRange(NextRow, 1) = 0
                            ElseIf RST.Fields.Item(1) = 100000519 Then
                                DpValueRange(NextRow, 1) = 0
                            ElseIf RST.Fields.Item(1) = 100000520 Then
                                DpValueRange(NextRow, 1) = 0
                            Else
                                DpValueRange(NextRow, 1) = RST.Fields.Item(1)
                            End If
                        Else
                            RST.MoveFirst
                            ' Add to avoid summation errors when text error returned
                            DpValueRange(NextRow, 1) = 0
                        End If
                    Else
                        DpValueRange(NextRow, 1) = ""
                    End If
                    
    
                Next
            
            Set RST = Nothing
            
        End If
    End If
    
EntSQLGLCCDpBudgetDpRange_Zero:
    EntSQLGLCCDpBudgetDpRange = DpValueRange
    
    GoTo EntSQLGLCCDpBudgetDpRange_Exit
        
EntSQLGLCCDpBudgetDpRange_Error:
    If ErrStr = "" Then ErrStr = GetErrorNumStr
    EntSQLGLCCDpBudgetDpRange = ErrStr

EntSQLGLCCDpBudgetDpRange_Exit:

End Function

'**************************************************************************************************************
'**                                              BUDGET2                                                     **
'**************************************************************************************************************

'*******************************************************************************************************
' Name:        EntSQLGLDpBudget2DpRange
' Description: Gets the General Ledger Budget2 values for the specified Currency, Year, Period, Depts and GLCode
'*******************************************************************************************************
Public Function EntSQLGLDpBudget2DpRange(Company$, TheYear%, ThePeriod%, TheCcy%, GLCode As Long, DpCodes As Range) As Variant
Attribute EntSQLGLDpBudget2DpRange.VB_Description = "This function returns the General Ledger Budget2 value for the specified Currency, Year, Period, GLCode and Departments."
On Error GoTo EntSQLGLDpBudget2DpRange_Error
    Dim ErrStr$
    Dim DblVal As Double
    Dim Result%
    Dim stADO As String
    Dim RST As ADODB.Recordset
    Dim stSQL As String
    Dim AddVal As Double
    Dim CurrInv As Boolean
    Dim DpRange As String
    Dim DpRowRange(1000) As Double
    Dim DpCodeRange(1000) As String
    Dim DpValueRange() As Variant
    Dim DpRowCount As Double
    Dim NextRow As Double
    
    DoEvents
    
    Result% = 0
    
    DblVal# = 0#
    
    CompStr$ = UCase(Company$)
    
    If ValidCompany(Company) And ValidYear(TheYear) And ValidPeriod(ThePeriod) And ValidCcy(TheCcy%) And ValidGLCode(GLCode) Then
        If LocalCheckServer() Then
            
            'Check User Permissions
            Result = EntServer.CheckUserPermission(Company$, 487)
            
            If Result <> 0 Then
                Error Result
                GoTo EntSQLGLDpBudget2DpRange_Error
            End If
            
            'Concatenate Dp Range into CSV for passing to SQL select statement
            DpRowCount = 1
            
            For Each DpCodes In DpCodes.Rows
                
                If CStr(DpCodes.Value) <> "" Then
                    DpRange = DpRange + CStr(DpCodes.Value) & "','"
                    DpRowRange(DpRowCount) = DpCodes.Row
                    DpCodeRange(DpRowCount) = CStr(DpCodes.Value)
                End If
                
                DpRowCount = DpRowCount + 1
            Next
            
            'Correct Row Count
            DpRowCount = DpRowCount - 1
            
            'Remove extra comma off end of csv list
            DpRange = Left(DpRange, Len(DpRange) - 2)
            
            DpRange = "'" & DpRange
            
            stSQL = "SELECT EXCHQCHKcode1Trans1," + CStr(Trim(CompStr$)) + ".ifn_GetNominalValue(5, " + CStr(TheYear%) + "," + CStr(ThePeriod%) + "," + CStr(TheCcy%) + "," + CStr(GLCode) + ",'',EXCHQCHKcode1Trans1,'D',0)" & _
                    "FROM " + CStr(Trim(CompStr$)) + ".EXCHQCHK WHERE (RecPfix = 'C' AND SubType = 68) AND EXCHQCHKcode1Trans1 IN (" & CStr(DpRange) & ")"
            
            OpenDBConnection (CompStr$)
            
            With CNT(CurrComp)
                .CommandTimeout = 0
                Set RST = .Execute(stSQL)
            End With
            
            If RST.RecordCount = 0 Then
                EntSQLGLDpBudget2DpRange = 0
                GoTo EntSQLGLDpBudget2DpRange_Exit
            End If
            
            ReDim DpValueRange(1 To DpRowCount, 1 To 1)
            
                For NextRow = 1 To DpRowCount
                    If CStr(DpCodeRange(NextRow)) <> "" Then
                        RST.MoveFirst
                        RST.Find ("EXCHQCHKcode1Trans1 = '" & CStr(DpCodeRange(NextRow))) & "'"
                        
                        If Not RST.EOF Then
                            If RST.Fields.Item(1) = 100000511 Then
                                DpValueRange(NextRow, 1) = 0
                            ElseIf RST.Fields.Item(1) = 100000519 Then
                                DpValueRange(NextRow, 1) = 0
                            ElseIf RST.Fields.Item(1) = 100000520 Then
                                DpValueRange(NextRow, 1) = 0
                            Else
                                DpValueRange(NextRow, 1) = RST.Fields.Item(1)
                            End If
                        Else
                            RST.MoveFirst
                            ' Add to avoid summation errors when text error returned
                            DpValueRange(NextRow, 1) = 0
                        End If
                    Else
                        DpValueRange(NextRow, 1) = ""
                    End If
                    
    
                Next
            
            Set RST = Nothing
            
        End If
    End If
    
EntSQLGLDpBudget2DpRange_Zero:
    EntSQLGLDpBudget2DpRange = DpValueRange
    
    GoTo EntSQLGLDpBudget2DpRange_Exit
        
EntSQLGLDpBudget2DpRange_Error:
    If ErrStr = "" Then ErrStr = GetErrorNumStr
    EntSQLGLDpBudget2DpRange = ErrStr

EntSQLGLDpBudget2DpRange_Exit:

End Function

'*******************************************************************************************************
' Name:        EntSQLGLCCDpBudget2DpRange
' Description: Gets the General Ledger Budget2 values for the specified Currency, Year, Period, CC, Dps and GLCode
'*******************************************************************************************************
Public Function EntSQLGLCCDpBudget2DpRange(Company$, TheYear%, ThePeriod%, TheCcy%, GLCode As Long, CCCode$, DpCodes As Range) As Variant
Attribute EntSQLGLCCDpBudget2DpRange.VB_Description = "This function returns the General Ledger Budget2 value for the specified Currency, Year, Period, GLCode CostCentre and Departments."
On Error GoTo EntSQLGLCCDpBudget2DpRange_Error
    Dim ErrStr$
    Dim DblVal As Double
    Dim Result%
    Dim stADO As String
    Dim RST As ADODB.Recordset
    Dim stSQL As String
    Dim AddVal As Double
    Dim CurrInv As Boolean
    Dim DpRange As String
    Dim DpRowRange(1000) As Double
    Dim DpCodeRange(1000) As String
    Dim DpValueRange() As Variant
    Dim DpRowCount As Double
    Dim NextRow As Double
    
    DoEvents
    
    Result% = 0
    
    DblVal# = 0#
    
    CompStr$ = UCase(Company$)
    
    If ValidCompany(Company) And ValidYear(TheYear) And ValidPeriod(ThePeriod) And ValidCcy(TheCcy%) And ValidGLCode(CStr(GLCode)) And ValidCCDep(True, CCCode$) Then
        If LocalCheckServer() Then
            
            'Check User Permissions
            Result = EntServer.CheckUserPermission(Company$, 487)
            
            If Result <> 0 Then
                Error Result
                GoTo EntSQLGLCCDpBudget2DpRange_Error
            End If
            
            'Concatenate Dp Range into CSV for passing to SQL select statement
            DpRowCount = 1
            
            For Each DpCodes In DpCodes.Rows
                
                If CStr(DpCodes.Value) <> "" Then
                    DpRange = DpRange + CStr(DpCodes.Value) & "','"
                    DpRowRange(DpRowCount) = DpCodes.Row
                    DpCodeRange(DpRowCount) = CStr(DpCodes.Value)
                End If
                
                DpRowCount = DpRowCount + 1
            Next
            
            'Correct Row Count
            DpRowCount = DpRowCount - 1
            
            'Remove extra comma off end of csv list
            DpRange = Left(DpRange, Len(DpRange) - 2)
            
            DpRange = "'" & DpRange
            
            stSQL = "SELECT EXCHQCHKcode1Trans1," + CStr(Trim(CompStr$)) + ".ifn_GetNominalValue(5, " + CStr(TheYear%) + "," + CStr(ThePeriod%) + "," + CStr(TheCcy%) + "," + CStr(GLCode) + ",'" + CStr(Trim(CCCode$)) + "',EXCHQCHKcode1Trans1" + ",'C',0) " & _
                    "FROM " + CStr(Trim(CompStr$)) + ".EXCHQCHK WHERE (RecPfix = 'C' AND SubType = 68) AND EXCHQCHKcode1Trans1 IN (" & CStr(DpRange) & ")"
            
            OpenDBConnection (CompStr$)
            
            With CNT(CurrComp)
                .CommandTimeout = 0
                Set RST = .Execute(stSQL)
            End With
            
            If RST.RecordCount = 0 Then
                EntSQLGLCCDpBudget2DpRange = 0
                GoTo EntSQLGLCCDpBudget2DpRange_Exit
            End If
            
            ReDim DpValueRange(1 To DpRowCount, 1 To 1)
            
                For NextRow = 1 To DpRowCount
                    If CStr(DpCodeRange(NextRow)) <> "" Then
                        RST.MoveFirst
                        RST.Find ("EXCHQCHKcode1Trans1 = '" & CStr(DpCodeRange(NextRow))) & "'"
                        
                        If Not RST.EOF Then
                            If RST.Fields.Item(1) = 100000511 Then
                                DpValueRange(NextRow, 1) = 0
                            ElseIf RST.Fields.Item(1) = 100000519 Then
                                DpValueRange(NextRow, 1) = 0
                            ElseIf RST.Fields.Item(1) = 100000520 Then
                                DpValueRange(NextRow, 1) = 0
                            Else
                                DpValueRange(NextRow, 1) = RST.Fields.Item(1)
                            End If
                        Else
                            RST.MoveFirst
                            ' Add to avoid summation errors when text error returned
                            DpValueRange(NextRow, 1) = 0
                        End If
                    Else
                        DpValueRange(NextRow, 1) = ""
                    End If
                    
    
                Next
            
            Set RST = Nothing
            
        End If
    End If
    
EntSQLGLCCDpBudget2DpRange_Zero:
    EntSQLGLCCDpBudget2DpRange = DpValueRange
    
    GoTo EntSQLGLCCDpBudget2DpRange_Exit
        
EntSQLGLCCDpBudget2DpRange_Error:
    If ErrStr = "" Then ErrStr = GetErrorNumStr
    EntSQLGLCCDpBudget2DpRange = ErrStr

EntSQLGLCCDpBudget2DpRange_Exit:

End Function


'**************************************************************************************************************
'**                                              CREDIT                                                      **
'**************************************************************************************************************

'*******************************************************************************************************
' Name:        EntSQLGLDpCreditDpRange
' Description: Gets the General Ledger Credit values for the specified Currency, Year, Period, Depts and GLCode
'*******************************************************************************************************
Public Function EntSQLGLDpCreditDpRange(Company$, TheYear%, ThePeriod%, TheCcy%, GLCode As Long, DpCodes As Range) As Variant
Attribute EntSQLGLDpCreditDpRange.VB_Description = "This function returns the General Ledger Credit value for the specified Currency, Year, Period, GLCode and Departments."
On Error GoTo EntSQLGLDpCreditDpRange_Error
    Dim ErrStr$
    Dim DblVal As Double
    Dim Result%
    Dim stADO As String
    Dim RST As ADODB.Recordset
    Dim stSQL As String
    Dim AddVal As Double
    Dim CurrInv As Boolean
    Dim DpRange As String
    Dim DpRowRange(1000) As Double
    Dim DpCodeRange(1000) As String
    Dim DpValueRange() As Variant
    Dim DpRowCount As Double
    Dim NextRow As Double
    
    DoEvents
    
    Result% = 0
    
    DblVal# = 0#
    
    CompStr$ = UCase(Company$)
    
    If ValidCompany(Company) And ValidYear(TheYear) And ValidPeriod(ThePeriod) And ValidCcy(TheCcy%) And ValidGLCode(GLCode) Then
        If LocalCheckServer() Then
            
            'Check User Permissions
            Result = EntServer.CheckUserPermission(Company$, 487)
            
            If Result <> 0 Then
                Error Result
                GoTo EntSQLGLDpCreditDpRange_Error
            End If
            
            'Concatenate Dp Range into CSV for passing to SQL select statement
            DpRowCount = 1
            
            For Each DpCodes In DpCodes.Rows
                
                If CStr(DpCodes.Value) <> "" Then
                    DpRange = DpRange + CStr(DpCodes.Value) & "','"
                    DpRowRange(DpRowCount) = DpCodes.Row
                    DpCodeRange(DpRowCount) = CStr(DpCodes.Value)
                End If
                
                DpRowCount = DpRowCount + 1
            Next
            
            'Correct Row Count
            DpRowCount = DpRowCount - 1
            
            'Remove extra comma off end of csv list
            DpRange = Left(DpRange, Len(DpRange) - 2)
            
            DpRange = "'" & DpRange
            
            stSQL = "SELECT EXCHQCHKcode1Trans1," + CStr(Trim(CompStr$)) + ".ifn_GetNominalValue(1, " + CStr(TheYear%) + "," + CStr(ThePeriod%) + "," + CStr(TheCcy%) + "," + CStr(GLCode) + ",'',EXCHQCHKcode1Trans1,'D',0)" & _
                    "FROM " + CStr(Trim(CompStr$)) + ".EXCHQCHK WHERE (RecPfix = 'C' AND SubType = 68) AND EXCHQCHKcode1Trans1 IN (" & CStr(DpRange) & ")"
            
            OpenDBConnection (CompStr$)
            
            With CNT(CurrComp)
                .CommandTimeout = 0
                Set RST = .Execute(stSQL)
            End With
            
            If RST.RecordCount = 0 Then
                EntSQLGLDpCreditDpRange = 0
                GoTo EntSQLGLDpCreditDpRange_Exit
            End If
            
            ReDim DpValueRange(1 To DpRowCount, 1 To 1)
            
                For NextRow = 1 To DpRowCount
                    If CStr(DpCodeRange(NextRow)) <> "" Then
                        RST.MoveFirst
                        RST.Find ("EXCHQCHKcode1Trans1 = '" & CStr(DpCodeRange(NextRow))) & "'"
                        
                        If Not RST.EOF Then
                            If RST.Fields.Item(1) = 100000511 Then
                                DpValueRange(NextRow, 1) = 0
                            ElseIf RST.Fields.Item(1) = 100000519 Then
                                DpValueRange(NextRow, 1) = 0
                            ElseIf RST.Fields.Item(1) = 100000520 Then
                                DpValueRange(NextRow, 1) = 0
                            Else
                                DpValueRange(NextRow, 1) = RST.Fields.Item(1)
                            End If
                        Else
                            RST.MoveFirst
                            ' Add to avoid summation errors when text error returned
                            DpValueRange(NextRow, 1) = 0
                        End If
                    Else
                        DpValueRange(NextRow, 1) = ""
                    End If
                    
    
                Next
            
            Set RST = Nothing
            
        End If
    End If
    
EntSQLGLDpCreditDpRange_Zero:
    EntSQLGLDpCreditDpRange = DpValueRange
    
    GoTo EntSQLGLDpCreditDpRange_Exit
        
EntSQLGLDpCreditDpRange_Error:
    If ErrStr = "" Then ErrStr = GetErrorNumStr
    EntSQLGLDpCreditDpRange = ErrStr

EntSQLGLDpCreditDpRange_Exit:

End Function

'*******************************************************************************************************
' Name:        EntSQLGLCCDpCreditDpRange
' Description: Gets the General Ledger Credit values for the specified Currency, Year, Period, CC, Dps and GLCode
'*******************************************************************************************************
Public Function EntSQLGLCCDpCreditDpRange(Company$, TheYear%, ThePeriod%, TheCcy%, GLCode As Long, CCCode$, DpCodes As Range) As Variant
Attribute EntSQLGLCCDpCreditDpRange.VB_Description = "This function returns the General Ledger Credit value for the specified Currency, Year, Period, GLCode, Cost Centre and Departments."
On Error GoTo EntSQLGLCCDpCreditDpRange_Error
    Dim ErrStr$
    Dim DblVal As Double
    Dim Result%
    Dim stADO As String
    Dim RST As ADODB.Recordset
    Dim stSQL As String
    Dim AddVal As Double
    Dim CurrInv As Boolean
    Dim DpRange As String
    Dim DpRowRange(1000) As Double
    Dim DpCodeRange(1000) As String
    Dim DpValueRange() As Variant
    Dim DpRowCount As Double
    Dim NextRow As Double
    
    DoEvents
    
    Result% = 0
    
    DblVal# = 0#
    
    CompStr$ = UCase(Company$)
    
    If ValidCompany(Company) And ValidYear(TheYear) And ValidPeriod(ThePeriod) And ValidCcy(TheCcy%) And ValidGLCode(CStr(GLCode)) And ValidCCDep(True, CCCode$) Then
        If LocalCheckServer() Then
            
            'Check User Permissions
            Result = EntServer.CheckUserPermission(Company$, 487)
            
            If Result <> 0 Then
                Error Result
                GoTo EntSQLGLCCDpCreditDpRange_Error
            End If
            
            'Concatenate Dp Range into CSV for passing to SQL select statement
            DpRowCount = 1
            
            For Each DpCodes In DpCodes.Rows
                
                If CStr(DpCodes.Value) <> "" Then
                    DpRange = DpRange + CStr(DpCodes.Value) & "','"
                    DpRowRange(DpRowCount) = DpCodes.Row
                    DpCodeRange(DpRowCount) = CStr(DpCodes.Value)
                End If
                
                DpRowCount = DpRowCount + 1
            Next
            
            'Correct Row Count
            DpRowCount = DpRowCount - 1
            
            'Remove extra comma off end of csv list
            DpRange = Left(DpRange, Len(DpRange) - 2)
            
            DpRange = "'" & DpRange
            
            stSQL = "SELECT EXCHQCHKcode1Trans1," + CStr(Trim(CompStr$)) + ".ifn_GetNominalValue(1, " + CStr(TheYear%) + "," + CStr(ThePeriod%) + "," + CStr(TheCcy%) + "," + CStr(GLCode) + ",'" + CStr(Trim(CCCode$)) + "',EXCHQCHKcode1Trans1" + ",'C',0) " & _
                    "FROM " + CStr(Trim(CompStr$)) + ".EXCHQCHK WHERE (RecPfix = 'C' AND SubType = 68) AND EXCHQCHKcode1Trans1 IN (" & CStr(DpRange) & ")"
            
            OpenDBConnection (CompStr$)
            
            With CNT(CurrComp)
                .CommandTimeout = 0
                Set RST = .Execute(stSQL)
            End With
            
            If RST.RecordCount = 0 Then
                EntSQLGLCCDpCreditDpRange = 0
                GoTo EntSQLGLCCDpCreditDpRange_Exit
            End If
            
            ReDim DpValueRange(1 To DpRowCount, 1 To 1)
            
                For NextRow = 1 To DpRowCount
                    If CStr(DpCodeRange(NextRow)) <> "" Then
                        RST.MoveFirst
                        RST.Find ("EXCHQCHKcode1Trans1 = '" & CStr(DpCodeRange(NextRow))) & "'"
                        
                        If Not RST.EOF Then
                            If RST.Fields.Item(1) = 100000511 Then
                                DpValueRange(NextRow, 1) = 0
                            ElseIf RST.Fields.Item(1) = 100000519 Then
                                DpValueRange(NextRow, 1) = 0
                            ElseIf RST.Fields.Item(1) = 100000520 Then
                                DpValueRange(NextRow, 1) = 0
                            Else
                                DpValueRange(NextRow, 1) = RST.Fields.Item(1)
                            End If
                        Else
                            RST.MoveFirst
                            ' Add to avoid summation errors when text error returned
                            DpValueRange(NextRow, 1) = 0
                        End If
                    Else
                        DpValueRange(NextRow, 1) = ""
                    End If
                    
    
                Next
            
            Set RST = Nothing
            
        End If
    End If
    
EntSQLGLCCDpCreditDpRange_Zero:
    EntSQLGLCCDpCreditDpRange = DpValueRange
    
    GoTo EntSQLGLCCDpCreditDpRange_Exit
        
EntSQLGLCCDpCreditDpRange_Error:
    If ErrStr = "" Then ErrStr = GetErrorNumStr
    EntSQLGLCCDpCreditDpRange = ErrStr

EntSQLGLCCDpCreditDpRange_Exit:

End Function


'**************************************************************************************************************
'**                                              DEBIT                                                     **
'**************************************************************************************************************

'*******************************************************************************************************
' Name:        EntSQLGLDpDebitDpRange
' Description: Gets the General Ledger Debit values for the specified Currency, Year, Period, Depts and GLCode
'*******************************************************************************************************
Public Function EntSQLGLDpDebitDpRange(Company$, TheYear%, ThePeriod%, TheCcy%, GLCode As Long, DpCodes As Range) As Variant
Attribute EntSQLGLDpDebitDpRange.VB_Description = "This function returns the General Ledger Debit value for the specified Currency, Year, Period, GLCode and Departments."
On Error GoTo EntSQLGLDpDebitDpRange_Error
    Dim ErrStr$
    Dim DblVal As Double
    Dim Result%
    Dim stADO As String
    Dim RST As ADODB.Recordset
    Dim stSQL As String
    Dim AddVal As Double
    Dim CurrInv As Boolean
    Dim DpRange As String
    Dim DpRowRange(1000) As Double
    Dim DpCodeRange(1000) As String
    Dim DpValueRange() As Variant
    Dim DpRowCount As Double
    Dim NextRow As Double
    
    DoEvents
    
    Result% = 0
    
    DblVal# = 0#
    
    CompStr$ = UCase(Company$)
    
    If ValidCompany(Company) And ValidYear(TheYear) And ValidPeriod(ThePeriod) And ValidCcy(TheCcy%) And ValidGLCode(GLCode) Then
        If LocalCheckServer() Then
            
            'Check User Permissions
            Result = EntServer.CheckUserPermission(Company$, 487)
            
            If Result <> 0 Then
                Error Result
                GoTo EntSQLGLDpDebitDpRange_Error
            End If
            
            'Concatenate Dp Range into CSV for passing to SQL select statement
            DpRowCount = 1
            
            For Each DpCodes In DpCodes.Rows
                
                If CStr(DpCodes.Value) <> "" Then
                    DpRange = DpRange + CStr(DpCodes.Value) & "','"
                    DpRowRange(DpRowCount) = DpCodes.Row
                    DpCodeRange(DpRowCount) = CStr(DpCodes.Value)
                End If
                
                DpRowCount = DpRowCount + 1
            Next
            
            'Correct Row Count
            DpRowCount = DpRowCount - 1
            
            'Remove extra comma off end of csv list
            DpRange = Left(DpRange, Len(DpRange) - 2)
            
            DpRange = "'" & DpRange
            
            stSQL = "SELECT EXCHQCHKcode1Trans1," + CStr(Trim(CompStr$)) + ".ifn_GetNominalValue(2, " + CStr(TheYear%) + "," + CStr(ThePeriod%) + "," + CStr(TheCcy%) + "," + CStr(GLCode) + ",'',EXCHQCHKcode1Trans1,'D',0)" & _
                    "FROM " + CStr(Trim(CompStr$)) + ".EXCHQCHK WHERE (RecPfix = 'C' AND SubType = 68) AND EXCHQCHKcode1Trans1 IN (" & CStr(DpRange) & ")"
            
            OpenDBConnection (CompStr$)
            
            With CNT(CurrComp)
                .CommandTimeout = 0
                Set RST = .Execute(stSQL)
            End With
            
            If RST.RecordCount = 0 Then
                EntSQLGLDpDebitDpRange = 0
                GoTo EntSQLGLDpDebitDpRange_Exit
            End If
            
            ReDim DpValueRange(1 To DpRowCount, 1 To 1)
            
                For NextRow = 1 To DpRowCount
                    If CStr(DpCodeRange(NextRow)) <> "" Then
                        RST.MoveFirst
                        RST.Find ("EXCHQCHKcode1Trans1 = '" & CStr(DpCodeRange(NextRow))) & "'"
                        
                        If Not RST.EOF Then
                            If RST.Fields.Item(1) = 100000511 Then
                                DpValueRange(NextRow, 1) = 0
                            ElseIf RST.Fields.Item(1) = 100000519 Then
                                DpValueRange(NextRow, 1) = 0
                            ElseIf RST.Fields.Item(1) = 100000520 Then
                                DpValueRange(NextRow, 1) = 0
                            Else
                                DpValueRange(NextRow, 1) = RST.Fields.Item(1)
                            End If
                        Else
                            RST.MoveFirst
                            ' Add to avoid summation errors when text error returned
                            DpValueRange(NextRow, 1) = 0
                        End If
                    Else
                        DpValueRange(NextRow, 1) = ""
                    End If
                    
    
                Next
            
            Set RST = Nothing
            
        End If
    End If
    
EntSQLGLDpDebitDpRange_Zero:
    EntSQLGLDpDebitDpRange = DpValueRange
    
    GoTo EntSQLGLDpDebitDpRange_Exit
        
EntSQLGLDpDebitDpRange_Error:
    If ErrStr = "" Then ErrStr = GetErrorNumStr
    EntSQLGLDpDebitDpRange = ErrStr

EntSQLGLDpDebitDpRange_Exit:

End Function

'*******************************************************************************************************
' Name:        EntSQLGLCCDpDebitDpRange
' Description: Gets the General Ledger Debit values for the specified Currency, Year, Period, CC, Dps and GLCode
'*******************************************************************************************************
Public Function EntSQLGLCCDpDebitDpRange(Company$, TheYear%, ThePeriod%, TheCcy%, GLCode As Long, CCCode$, DpCodes As Range) As Variant
Attribute EntSQLGLCCDpDebitDpRange.VB_Description = "This function returns the General Ledger Debit value for the specified Currency, Year, Period, GLCode, Cost Centre and Departments."
On Error GoTo EntSQLGLCCDpDebitDpRange_Error
    Dim ErrStr$
    Dim DblVal As Double
    Dim Result%
    Dim stADO As String
    Dim RST As ADODB.Recordset
    Dim stSQL As String
    Dim AddVal As Double
    Dim CurrInv As Boolean
    Dim DpRange As String
    Dim DpRowRange(1000) As Double
    Dim DpCodeRange(1000) As String
    Dim DpValueRange() As Variant
    Dim DpRowCount As Double
    Dim NextRow As Double
    
    DoEvents
    
    Result% = 0
    
    DblVal# = 0#
    
    CompStr$ = UCase(Company$)
    
    If ValidCompany(Company) And ValidYear(TheYear) And ValidPeriod(ThePeriod) And ValidCcy(TheCcy%) And ValidGLCode(CStr(GLCode)) And ValidCCDep(True, CCCode$) Then
        If LocalCheckServer() Then
            
            'Check User Permissions
            Result = EntServer.CheckUserPermission(Company$, 487)
            
            If Result <> 0 Then
                Error Result
                GoTo EntSQLGLCCDpDebitDpRange_Error
            End If
            
            'Concatenate Dp Range into CSV for passing to SQL select statement
            DpRowCount = 1
            
            For Each DpCodes In DpCodes.Rows
                
                If CStr(DpCodes.Value) <> "" Then
                    DpRange = DpRange + CStr(DpCodes.Value) & "','"
                    DpRowRange(DpRowCount) = DpCodes.Row
                    DpCodeRange(DpRowCount) = CStr(DpCodes.Value)
                End If
                
                DpRowCount = DpRowCount + 1
            Next
            
            'Correct Row Count
            DpRowCount = DpRowCount - 1
            
            'Remove extra comma off end of csv list
            DpRange = Left(DpRange, Len(DpRange) - 2)
            
            DpRange = "'" & DpRange
            
            stSQL = "SELECT EXCHQCHKcode1Trans1," + CStr(Trim(CompStr$)) + ".ifn_GetNominalValue(2, " + CStr(TheYear%) + "," + CStr(ThePeriod%) + "," + CStr(TheCcy%) + "," + CStr(GLCode) + ",'" + CStr(Trim(CCCode$)) + "',EXCHQCHKcode1Trans1" + ",'C',0) " & _
                    "FROM " + CStr(Trim(CompStr$)) + ".EXCHQCHK WHERE (RecPfix = 'C' AND SubType = 68) AND EXCHQCHKcode1Trans1 IN (" & CStr(DpRange) & ")"
            
            OpenDBConnection (CompStr$)
            
            With CNT(CurrComp)
                .CommandTimeout = 0
                Set RST = .Execute(stSQL)
            End With
            
            If RST.RecordCount = 0 Then
                EntSQLGLCCDpDebitDpRange = 0
                GoTo EntSQLGLCCDpDebitDpRange_Exit
            End If
            
            ReDim DpValueRange(1 To DpRowCount, 1 To 1)
            
                For NextRow = 1 To DpRowCount
                    If CStr(DpCodeRange(NextRow)) <> "" Then
                        RST.MoveFirst
                        RST.Find ("EXCHQCHKcode1Trans1 = '" & CStr(DpCodeRange(NextRow))) & "'"
                        
                        If Not RST.EOF Then
                            If RST.Fields.Item(1) = 100000511 Then
                                DpValueRange(NextRow, 1) = 0
                            ElseIf RST.Fields.Item(1) = 100000519 Then
                                DpValueRange(NextRow, 1) = 0
                            ElseIf RST.Fields.Item(1) = 100000520 Then
                                DpValueRange(NextRow, 1) = 0
                            Else
                                DpValueRange(NextRow, 1) = RST.Fields.Item(1)
                            End If
                        Else
                            RST.MoveFirst
                            ' Add to avoid summation errors when text error returned
                            DpValueRange(NextRow, 1) = 0
                        End If
                    Else
                        DpValueRange(NextRow, 1) = ""
                    End If
                    
    
                Next
            
            Set RST = Nothing
            
        End If
    End If
    
EntSQLGLCCDpDebitDpRange_Zero:
    EntSQLGLCCDpDebitDpRange = DpValueRange
    
    GoTo EntSQLGLCCDpDebitDpRange_Exit
        
EntSQLGLCCDpDebitDpRange_Error:
    If ErrStr = "" Then ErrStr = GetErrorNumStr
    EntSQLGLCCDpDebitDpRange = ErrStr

EntSQLGLCCDpDebitDpRange_Exit:

End Function

'**************************************************************************************************************
'**                                              REVISED BUDGET 1                                                     **
'**************************************************************************************************************

'*******************************************************************************************************
' Name:        EntSQLGLDpRevisedBudget1DpRange
' Description: Gets the General Ledger Revised Budget 1 values for the specified Currency, Year, Period, Depts and GLCode
'*******************************************************************************************************
Public Function EntSQLGLDpRevisedBudget1DpRange(Company$, TheYear%, ThePeriod%, TheCcy%, GLCode As Long, DpCodes As Range) As Variant
On Error GoTo EntSQLGLDpRevisedBudget1DpRange_Error
    Dim ErrStr$
    Dim DblVal As Double
    Dim Result%
    Dim stADO As String
    Dim RST As ADODB.Recordset
    Dim stSQL As String
    Dim AddVal As Double
    Dim CurrInv As Boolean
    Dim DpRange As String
    Dim DpRowRange(1000) As Double
    Dim DpCodeRange(1000) As String
    Dim DpValueRange() As Variant
    Dim DpRowCount As Double
    Dim NextRow As Double
    
    DoEvents
    
    Result% = 0
    
    DblVal# = 0#
    
    CompStr$ = UCase(Company$)
    
    If ValidCompany(Company) And ValidYear(TheYear) And ValidPeriod(ThePeriod) And ValidCcy(TheCcy%) And ValidGLCode(GLCode) Then
        If LocalCheckServer() Then
            
            'Check User Permissions
            Result = EntServer.CheckUserPermission(Company$, 487)
            
            If Result <> 0 Then
                Error Result
                GoTo EntSQLGLDpRevisedBudget1DpRange_Error
            End If
            
            'Concatenate Dp Range into CSV for passing to SQL select statement
            DpRowCount = 1
            
            For Each DpCodes In DpCodes.Rows
                
                If CStr(DpCodes.Value) <> "" Then
                    DpRange = DpRange + CStr(DpCodes.Value) & "','"
                    DpRowRange(DpRowCount) = DpCodes.Row
                    DpCodeRange(DpRowCount) = CStr(DpCodes.Value)
                End If
                
                DpRowCount = DpRowCount + 1
            Next
            
            'Correct Row Count
            DpRowCount = DpRowCount - 1
            
            'Remove extra comma off end of csv list
            DpRange = Left(DpRange, Len(DpRange) - 2)
            
            DpRange = "'" & DpRange
            
            stSQL = "SELECT EXCHQCHKcode1Trans1," + CStr(Trim(CompStr$)) + ".ifn_GetNominalValue(5, " + CStr(TheYear%) + "," + CStr(ThePeriod%) + "," + CStr(TheCcy%) + "," + CStr(GLCode) + ",'',EXCHQCHKcode1Trans1,'D',0)" & _
                    "FROM " + CStr(Trim(CompStr$)) + ".EXCHQCHK WHERE (RecPfix = 'C' AND SubType = 68) AND EXCHQCHKcode1Trans1 IN (" & CStr(DpRange) & ")"
            
            OpenDBConnection (CompStr$)
            
            With CNT(CurrComp)
                .CommandTimeout = 0
                Set RST = .Execute(stSQL)
            End With
            
            If RST.RecordCount = 0 Then
                EntSQLGLDpRevisedBudget1DpRange = 0
                GoTo EntSQLGLDpRevisedBudget1DpRange_Exit
            End If
            
            ReDim DpValueRange(1 To DpRowCount, 1 To 1)
            
                For NextRow = 1 To DpRowCount
                    If CStr(DpCodeRange(NextRow)) <> "" Then
                        RST.MoveFirst
                        RST.Find ("EXCHQCHKcode1Trans1 = '" & CStr(DpCodeRange(NextRow))) & "'"
                        
                        If Not RST.EOF Then
                            If RST.Fields.Item(1) = 100000511 Then
                                DpValueRange(NextRow, 1) = 0
                            ElseIf RST.Fields.Item(1) = 100000519 Then
                                DpValueRange(NextRow, 1) = 0
                            ElseIf RST.Fields.Item(1) = 100000520 Then
                                DpValueRange(NextRow, 1) = 0
                            Else
                                DpValueRange(NextRow, 1) = RST.Fields.Item(1)
                            End If
                        Else
                            RST.MoveFirst
                            ' Add to avoid summation errors when text error returned
                            DpValueRange(NextRow, 1) = 0
                        End If
                    Else
                        DpValueRange(NextRow, 1) = ""
                    End If
                    
    
                Next
            
            Set RST = Nothing
            
        End If
    End If
    
EntSQLGLDpRevisedBudget1DpRange_Zero:
    EntSQLGLDpRevisedBudget1DpRange = DpValueRange
    
    GoTo EntSQLGLDpRevisedBudget1DpRange_Exit
        
EntSQLGLDpRevisedBudget1DpRange_Error:
    If ErrStr = "" Then ErrStr = GetErrorNumStr
    EntSQLGLDpRevisedBudget1DpRange = ErrStr

EntSQLGLDpRevisedBudget1DpRange_Exit:

End Function

'*******************************************************************************************************
' Name:        EntSQLGLCCDpRevisedBudget1DpRange
' Description: Gets the General Ledger Revised Budget 1 values for the specified Currency, Year, Period, CC, Dps and GLCode
'*******************************************************************************************************
Public Function EntSQLGLCCDpRevisedBudget1DpRange(Company$, TheYear%, ThePeriod%, TheCcy%, GLCode As Long, CCCode$, DpCodes As Range) As Variant
On Error GoTo EntSQLGLCCDpRevisedBudget1DpRange_Error
    Dim ErrStr$
    Dim DblVal As Double
    Dim Result%
    Dim stADO As String
    Dim RST As ADODB.Recordset
    Dim stSQL As String
    Dim AddVal As Double
    Dim CurrInv As Boolean
    Dim DpRange As String
    Dim DpRowRange(1000) As Double
    Dim DpCodeRange(1000) As String
    Dim DpValueRange() As Variant
    Dim DpRowCount As Double
    Dim NextRow As Double
    
    DoEvents
    
    Result% = 0
    
    DblVal# = 0#
    
    CompStr$ = UCase(Company$)
    
    If ValidCompany(Company) And ValidYear(TheYear) And ValidPeriod(ThePeriod) And ValidCcy(TheCcy%) And ValidGLCode(CStr(GLCode)) And ValidCCDep(True, CCCode$) Then
        If LocalCheckServer() Then
            
            'Check User Permissions
            Result = EntServer.CheckUserPermission(Company$, 487)
            
            If Result <> 0 Then
                Error Result
                GoTo EntSQLGLCCDpRevisedBudget1DpRange_Error
            End If
            
            'Concatenate Dp Range into CSV for passing to SQL select statement
            DpRowCount = 1
            
            For Each DpCodes In DpCodes.Rows
                
                If CStr(DpCodes.Value) <> "" Then
                    DpRange = DpRange + CStr(DpCodes.Value) & "','"
                    DpRowRange(DpRowCount) = DpCodes.Row
                    DpCodeRange(DpRowCount) = CStr(DpCodes.Value)
                End If
                
                DpRowCount = DpRowCount + 1
            Next
            
            'Correct Row Count
            DpRowCount = DpRowCount - 1
            
            'Remove extra comma off end of csv list
            DpRange = Left(DpRange, Len(DpRange) - 2)
            
            DpRange = "'" & DpRange
            
            stSQL = "SELECT EXCHQCHKcode1Trans1," + CStr(Trim(CompStr$)) + ".ifn_GetNominalValue(5, " + CStr(TheYear%) + "," + CStr(ThePeriod%) + "," + CStr(TheCcy%) + "," + CStr(GLCode) + ",'" + CStr(Trim(CCCode$)) + "',EXCHQCHKcode1Trans1" + ",'C',0) " & _
                    "FROM " + CStr(Trim(CompStr$)) + ".EXCHQCHK WHERE (RecPfix = 'C' AND SubType = 68) AND EXCHQCHKcode1Trans1 IN (" & CStr(DpRange) & ")"
            
            OpenDBConnection (CompStr$)
            
            With CNT(CurrComp)
                .CommandTimeout = 0
                Set RST = .Execute(stSQL)
            End With
            
            If RST.RecordCount = 0 Then
                EntSQLGLCCDpRevisedBudget1DpRange = 0
                GoTo EntSQLGLCCDpRevisedBudget1DpRange_Exit
            End If
            
            ReDim DpValueRange(1 To DpRowCount, 1 To 1)
            
                For NextRow = 1 To DpRowCount
                    If CStr(DpCodeRange(NextRow)) <> "" Then
                        RST.MoveFirst
                        RST.Find ("EXCHQCHKcode1Trans1 = '" & CStr(DpCodeRange(NextRow))) & "'"
                        
                        If Not RST.EOF Then
                            If RST.Fields.Item(1) = 100000511 Then
                                DpValueRange(NextRow, 1) = 0
                            ElseIf RST.Fields.Item(1) = 100000519 Then
                                DpValueRange(NextRow, 1) = 0
                            ElseIf RST.Fields.Item(1) = 100000520 Then
                                DpValueRange(NextRow, 1) = 0
                            Else
                                DpValueRange(NextRow, 1) = RST.Fields.Item(1)
                            End If
                        Else
                            RST.MoveFirst
                            ' Add to avoid summation errors when text error returned
                            DpValueRange(NextRow, 1) = 0
                        End If
                    Else
                        DpValueRange(NextRow, 1) = ""
                    End If
                    
    
                Next
            
            Set RST = Nothing
            
        End If
    End If
    
EntSQLGLCCDpRevisedBudget1DpRange_Zero:
    EntSQLGLCCDpRevisedBudget1DpRange = DpValueRange
    
    GoTo EntSQLGLCCDpRevisedBudget1DpRange_Exit
        
EntSQLGLCCDpRevisedBudget1DpRange_Error:
    If ErrStr = "" Then ErrStr = GetErrorNumStr
    EntSQLGLCCDpRevisedBudget1DpRange = ErrStr

EntSQLGLCCDpRevisedBudget1DpRange_Exit:

End Function

'**************************************************************************************************************
'**                                              REVISED BUDGET 2                                                     **
'**************************************************************************************************************

'*******************************************************************************************************
' Name:        EntSQLGLDpRevisedBudget2DpRange
' Description: Gets the General Ledger Revised Budget 2 values for the specified Currency, Year, Period, Depts and GLCode
'*******************************************************************************************************
Public Function EntSQLGLDpRevisedBudget2DpRange(Company$, TheYear%, ThePeriod%, TheCcy%, GLCode As Long, DpCodes As Range) As Variant
On Error GoTo EntSQLGLDpRevisedBudget2DpRange_Error
    Dim ErrStr$
    Dim DblVal As Double
    Dim Result%
    Dim stADO As String
    Dim RST As ADODB.Recordset
    Dim stSQL As String
    Dim AddVal As Double
    Dim CurrInv As Boolean
    Dim DpRange As String
    Dim DpRowRange(1000) As Double
    Dim DpCodeRange(1000) As String
    Dim DpValueRange() As Variant
    Dim DpRowCount As Double
    Dim NextRow As Double
    
    DoEvents
    
    Result% = 0
    
    DblVal# = 0#
    
    CompStr$ = UCase(Company$)
    
    If ValidCompany(Company) And ValidYear(TheYear) And ValidPeriod(ThePeriod) And ValidCcy(TheCcy%) And ValidGLCode(GLCode) Then
        If LocalCheckServer() Then
            
            'Check User Permissions
            Result = EntServer.CheckUserPermission(Company$, 487)
            
            If Result <> 0 Then
                Error Result
                GoTo EntSQLGLDpRevisedBudget2DpRange_Error
            End If
            
            'Concatenate Dp Range into CSV for passing to SQL select statement
            DpRowCount = 1
            
            For Each DpCodes In DpCodes.Rows
                
                If CStr(DpCodes.Value) <> "" Then
                    DpRange = DpRange + CStr(DpCodes.Value) & "','"
                    DpRowRange(DpRowCount) = DpCodes.Row
                    DpCodeRange(DpRowCount) = CStr(DpCodes.Value)
                End If
                
                DpRowCount = DpRowCount + 1
            Next
            
            'Correct Row Count
            DpRowCount = DpRowCount - 1
            
            'Remove extra comma off end of csv list
            DpRange = Left(DpRange, Len(DpRange) - 2)
            
            DpRange = "'" & DpRange
            
            stSQL = "SELECT EXCHQCHKcode1Trans1," + CStr(Trim(CompStr$)) + ".ifn_GetNominalValue(7, " + CStr(TheYear%) + "," + CStr(ThePeriod%) + "," + CStr(TheCcy%) + "," + CStr(GLCode) + ",'',EXCHQCHKcode1Trans1,'D',0)" & _
                    "FROM " + CStr(Trim(CompStr$)) + ".EXCHQCHK WHERE (RecPfix = 'C' AND SubType = 68) AND EXCHQCHKcode1Trans1 IN (" & CStr(DpRange) & ")"
            
            OpenDBConnection (CompStr$)
            
            With CNT(CurrComp)
                .CommandTimeout = 0
                Set RST = .Execute(stSQL)
            End With
            
            If RST.RecordCount = 0 Then
                EntSQLGLDpRevisedBudget2DpRange = 0
                GoTo EntSQLGLDpRevisedBudget2DpRange_Exit
            End If
            
            ReDim DpValueRange(1 To DpRowCount, 1 To 1)
            
                For NextRow = 1 To DpRowCount
                    If CStr(DpCodeRange(NextRow)) <> "" Then
                        RST.MoveFirst
                        RST.Find ("EXCHQCHKcode1Trans1 = '" & CStr(DpCodeRange(NextRow))) & "'"
                        
                        If Not RST.EOF Then
                            If RST.Fields.Item(1) = 100000511 Then
                                DpValueRange(NextRow, 1) = 0
                            ElseIf RST.Fields.Item(1) = 100000519 Then
                                DpValueRange(NextRow, 1) = 0
                            ElseIf RST.Fields.Item(1) = 100000520 Then
                                DpValueRange(NextRow, 1) = 0
                            Else
                                DpValueRange(NextRow, 1) = RST.Fields.Item(1)
                            End If
                        Else
                            RST.MoveFirst
                            ' Add to avoid summation errors when text error returned
                            DpValueRange(NextRow, 1) = 0
                        End If
                    Else
                        DpValueRange(NextRow, 1) = ""
                    End If
                    
    
                Next
            
            Set RST = Nothing
            
        End If
    End If
    
EntSQLGLDpRevisedBudget2DpRange_Zero:
    EntSQLGLDpRevisedBudget2DpRange = DpValueRange
    
    GoTo EntSQLGLDpRevisedBudget2DpRange_Exit
        
EntSQLGLDpRevisedBudget2DpRange_Error:
    If ErrStr = "" Then ErrStr = GetErrorNumStr
    EntSQLGLDpRevisedBudget2DpRange = ErrStr

EntSQLGLDpRevisedBudget2DpRange_Exit:

End Function

'*******************************************************************************************************
' Name:        EntSQLGLCCDpRevisedBudget2DpRange
' Description: Gets the General Ledger Revised Budget 2 values for the specified Currency, Year, Period, CC, Dps and GLCode
'*******************************************************************************************************
Public Function EntSQLGLCCDpRevisedBudget2DpRange(Company$, TheYear%, ThePeriod%, TheCcy%, GLCode As Long, CCCode$, DpCodes As Range) As Variant
On Error GoTo EntSQLGLCCDpRevisedBudget2DpRange_Error
    Dim ErrStr$
    Dim DblVal As Double
    Dim Result%
    Dim stADO As String
    Dim RST As ADODB.Recordset
    Dim stSQL As String
    Dim AddVal As Double
    Dim CurrInv As Boolean
    Dim DpRange As String
    Dim DpRowRange(1000) As Double
    Dim DpCodeRange(1000) As String
    Dim DpValueRange() As Variant
    Dim DpRowCount As Double
    Dim NextRow As Double
    
    DoEvents
    
    Result% = 0
    
    DblVal# = 0#
    
    CompStr$ = UCase(Company$)
    
    If ValidCompany(Company) And ValidYear(TheYear) And ValidPeriod(ThePeriod) And ValidCcy(TheCcy%) And ValidGLCode(CStr(GLCode)) And ValidCCDep(True, CCCode$) Then
        If LocalCheckServer() Then
            
            'Check User Permissions
            Result = EntServer.CheckUserPermission(Company$, 487)
            
            If Result <> 0 Then
                Error Result
                GoTo EntSQLGLCCDpRevisedBudget2DpRange_Error
            End If
            
            'Concatenate Dp Range into CSV for passing to SQL select statement
            DpRowCount = 1
            
            For Each DpCodes In DpCodes.Rows
                
                If CStr(DpCodes.Value) <> "" Then
                    DpRange = DpRange + CStr(DpCodes.Value) & "','"
                    DpRowRange(DpRowCount) = DpCodes.Row
                    DpCodeRange(DpRowCount) = CStr(DpCodes.Value)
                End If
                
                DpRowCount = DpRowCount + 1
            Next
            
            'Correct Row Count
            DpRowCount = DpRowCount - 1
            
            'Remove extra comma off end of csv list
            DpRange = Left(DpRange, Len(DpRange) - 2)
            
            DpRange = "'" & DpRange
            
            stSQL = "SELECT EXCHQCHKcode1Trans1," + CStr(Trim(CompStr$)) + ".ifn_GetNominalValue(7, " + CStr(TheYear%) + "," + CStr(ThePeriod%) + "," + CStr(TheCcy%) + "," + CStr(GLCode) + ",'" + CStr(Trim(CCCode$)) + "',EXCHQCHKcode1Trans1" + ",'C',0) " & _
                    "FROM " + CStr(Trim(CompStr$)) + ".EXCHQCHK WHERE (RecPfix = 'C' AND SubType = 68) AND EXCHQCHKcode1Trans1 IN (" & CStr(DpRange) & ")"
            
            OpenDBConnection (CompStr$)
            
            With CNT(CurrComp)
                .CommandTimeout = 0
                Set RST = .Execute(stSQL)
            End With
            
            If RST.RecordCount = 0 Then
                EntSQLGLCCDpRevisedBudget2DpRange = 0
                GoTo EntSQLGLCCDpRevisedBudget2DpRange_Exit
            End If
            
            ReDim DpValueRange(1 To DpRowCount, 1 To 1)
            
                For NextRow = 1 To DpRowCount
                    If CStr(DpCodeRange(NextRow)) <> "" Then
                        RST.MoveFirst
                        RST.Find ("EXCHQCHKcode1Trans1 = '" & CStr(DpCodeRange(NextRow))) & "'"
                        
                        If Not RST.EOF Then
                            If RST.Fields.Item(1) = 100000511 Then
                                DpValueRange(NextRow, 1) = 0
                            ElseIf RST.Fields.Item(1) = 100000519 Then
                                DpValueRange(NextRow, 1) = 0
                            ElseIf RST.Fields.Item(1) = 100000520 Then
                                DpValueRange(NextRow, 1) = 0
                            Else
                                DpValueRange(NextRow, 1) = RST.Fields.Item(1)
                            End If
                        Else
                            RST.MoveFirst
                            ' Add to avoid summation errors when text error returned
                            DpValueRange(NextRow, 1) = 0
                        End If
                    Else
                        DpValueRange(NextRow, 1) = ""
                    End If
                    
    
                Next
            
            Set RST = Nothing
            
        End If
    End If
    
EntSQLGLCCDpRevisedBudget2DpRange_Zero:
    EntSQLGLCCDpRevisedBudget2DpRange = DpValueRange
    
    GoTo EntSQLGLCCDpRevisedBudget2DpRange_Exit
        
EntSQLGLCCDpRevisedBudget2DpRange_Error:
    If ErrStr = "" Then ErrStr = GetErrorNumStr
    EntSQLGLCCDpRevisedBudget2DpRange = ErrStr

EntSQLGLCCDpRevisedBudget2DpRange_Exit:

End Function

'**************************************************************************************************************
'**                                              REVISED BUDGET 3                                                     **
'**************************************************************************************************************

'*******************************************************************************************************
' Name:        EntSQLGLDpRevisedBudget3DpRange
' Description: Gets the General Ledger Revised Budget 3 values for the specified Currency, Year, Period, Depts and GLCode
'*******************************************************************************************************
Public Function EntSQLGLDpRevisedBudget3DpRange(Company$, TheYear%, ThePeriod%, TheCcy%, GLCode As Long, DpCodes As Range) As Variant
On Error GoTo EntSQLGLDpRevisedBudget3DpRange_Error
    Dim ErrStr$
    Dim DblVal As Double
    Dim Result%
    Dim stADO As String
    Dim RST As ADODB.Recordset
    Dim stSQL As String
    Dim AddVal As Double
    Dim CurrInv As Boolean
    Dim DpRange As String
    Dim DpRowRange(1000) As Double
    Dim DpCodeRange(1000) As String
    Dim DpValueRange() As Variant
    Dim DpRowCount As Double
    Dim NextRow As Double
    
    DoEvents
    
    Result% = 0
    
    DblVal# = 0#
    
    CompStr$ = UCase(Company$)
    
    If ValidCompany(Company) And ValidYear(TheYear) And ValidPeriod(ThePeriod) And ValidCcy(TheCcy%) And ValidGLCode(GLCode) Then
        If LocalCheckServer() Then
            
            'Check User Permissions
            Result = EntServer.CheckUserPermission(Company$, 487)
            
            If Result <> 0 Then
                Error Result
                GoTo EntSQLGLDpRevisedBudget3DpRange_Error
            End If
            
            'Concatenate Dp Range into CSV for passing to SQL select statement
            DpRowCount = 1
            
            For Each DpCodes In DpCodes.Rows
                
                If CStr(DpCodes.Value) <> "" Then
                    DpRange = DpRange + CStr(DpCodes.Value) & "','"
                    DpRowRange(DpRowCount) = DpCodes.Row
                    DpCodeRange(DpRowCount) = CStr(DpCodes.Value)
                End If
                
                DpRowCount = DpRowCount + 1
            Next
            
            'Correct Row Count
            DpRowCount = DpRowCount - 1
            
            'Remove extra comma off end of csv list
            DpRange = Left(DpRange, Len(DpRange) - 2)
            
            DpRange = "'" & DpRange
            
            stSQL = "SELECT EXCHQCHKcode1Trans1," + CStr(Trim(CompStr$)) + ".ifn_GetNominalValue(8, " + CStr(TheYear%) + "," + CStr(ThePeriod%) + "," + CStr(TheCcy%) + "," + CStr(GLCode) + ",'',EXCHQCHKcode1Trans1,'D',0)" & _
                    "FROM " + CStr(Trim(CompStr$)) + ".EXCHQCHK WHERE (RecPfix = 'C' AND SubType = 68) AND EXCHQCHKcode1Trans1 IN (" & CStr(DpRange) & ")"
            
            OpenDBConnection (CompStr$)
            
            With CNT(CurrComp)
                .CommandTimeout = 0
                Set RST = .Execute(stSQL)
            End With
            
            If RST.RecordCount = 0 Then
                EntSQLGLDpRevisedBudget3DpRange = 0
                GoTo EntSQLGLDpRevisedBudget3DpRange_Exit
            End If
            
            ReDim DpValueRange(1 To DpRowCount, 1 To 1)
            
                For NextRow = 1 To DpRowCount
                    If CStr(DpCodeRange(NextRow)) <> "" Then
                        RST.MoveFirst
                        RST.Find ("EXCHQCHKcode1Trans1 = '" & CStr(DpCodeRange(NextRow))) & "'"
                        
                        If Not RST.EOF Then
                            If RST.Fields.Item(1) = 100000511 Then
                                DpValueRange(NextRow, 1) = 0
                            ElseIf RST.Fields.Item(1) = 100000519 Then
                                DpValueRange(NextRow, 1) = 0
                            ElseIf RST.Fields.Item(1) = 100000520 Then
                                DpValueRange(NextRow, 1) = 0
                            Else
                                DpValueRange(NextRow, 1) = RST.Fields.Item(1)
                            End If
                        Else
                            RST.MoveFirst
                            ' Add to avoid summation errors when text error returned
                            DpValueRange(NextRow, 1) = 0
                        End If
                    Else
                        DpValueRange(NextRow, 1) = ""
                    End If
                    
    
                Next
            
            Set RST = Nothing
            
        End If
    End If
    
EntSQLGLDpRevisedBudget3DpRange_Zero:
    EntSQLGLDpRevisedBudget3DpRange = DpValueRange
    
    GoTo EntSQLGLDpRevisedBudget3DpRange_Exit
        
EntSQLGLDpRevisedBudget3DpRange_Error:
    If ErrStr = "" Then ErrStr = GetErrorNumStr
    EntSQLGLDpRevisedBudget3DpRange = ErrStr

EntSQLGLDpRevisedBudget3DpRange_Exit:

End Function

'*******************************************************************************************************
' Name:        EntSQLGLCCDpRevisedBudget3DpRange
' Description: Gets the General Ledger Revised Budget 3 values for the specified Currency, Year, Period, CC, Dps and GLCode
'*******************************************************************************************************
Public Function EntSQLGLCCDpRevisedBudget3DpRange(Company$, TheYear%, ThePeriod%, TheCcy%, GLCode As Long, CCCode$, DpCodes As Range) As Variant
On Error GoTo EntSQLGLCCDpRevisedBudget3DpRange_Error
    Dim ErrStr$
    Dim DblVal As Double
    Dim Result%
    Dim stADO As String
    Dim RST As ADODB.Recordset
    Dim stSQL As String
    Dim AddVal As Double
    Dim CurrInv As Boolean
    Dim DpRange As String
    Dim DpRowRange(1000) As Double
    Dim DpCodeRange(1000) As String
    Dim DpValueRange() As Variant
    Dim DpRowCount As Double
    Dim NextRow As Double
    
    DoEvents
    
    Result% = 0
    
    DblVal# = 0#
    
    CompStr$ = UCase(Company$)
    
    If ValidCompany(Company) And ValidYear(TheYear) And ValidPeriod(ThePeriod) And ValidCcy(TheCcy%) And ValidGLCode(CStr(GLCode)) And ValidCCDep(True, CCCode$) Then
        If LocalCheckServer() Then
            
            'Check User Permissions
            Result = EntServer.CheckUserPermission(Company$, 487)
            
            If Result <> 0 Then
                Error Result
                GoTo EntSQLGLCCDpRevisedBudget3DpRange_Error
            End If
            
            'Concatenate Dp Range into CSV for passing to SQL select statement
            DpRowCount = 1
            
            For Each DpCodes In DpCodes.Rows
                
                If CStr(DpCodes.Value) <> "" Then
                    DpRange = DpRange + CStr(DpCodes.Value) & "','"
                    DpRowRange(DpRowCount) = DpCodes.Row
                    DpCodeRange(DpRowCount) = CStr(DpCodes.Value)
                End If
                
                DpRowCount = DpRowCount + 1
            Next
            
            'Correct Row Count
            DpRowCount = DpRowCount - 1
            
            'Remove extra comma off end of csv list
            DpRange = Left(DpRange, Len(DpRange) - 2)
            
            DpRange = "'" & DpRange
            
            stSQL = "SELECT EXCHQCHKcode1Trans1," + CStr(Trim(CompStr$)) + ".ifn_GetNominalValue(8, " + CStr(TheYear%) + "," + CStr(ThePeriod%) + "," + CStr(TheCcy%) + "," + CStr(GLCode) + ",'" + CStr(Trim(CCCode$)) + "',EXCHQCHKcode1Trans1" + ",'C',0) " & _
                    "FROM " + CStr(Trim(CompStr$)) + ".EXCHQCHK WHERE (RecPfix = 'C' AND SubType = 68) AND EXCHQCHKcode1Trans1 IN (" & CStr(DpRange) & ")"
            
            OpenDBConnection (CompStr$)
            
            With CNT(CurrComp)
                .CommandTimeout = 0
                Set RST = .Execute(stSQL)
            End With
            
            If RST.RecordCount = 0 Then
                EntSQLGLCCDpRevisedBudget3DpRange = 0
                GoTo EntSQLGLCCDpRevisedBudget3DpRange_Exit
            End If
            
            ReDim DpValueRange(1 To DpRowCount, 1 To 1)
            
                For NextRow = 1 To DpRowCount
                    If CStr(DpCodeRange(NextRow)) <> "" Then
                        RST.MoveFirst
                        RST.Find ("EXCHQCHKcode1Trans1 = '" & CStr(DpCodeRange(NextRow))) & "'"
                        
                        If Not RST.EOF Then
                            If RST.Fields.Item(1) = 100000511 Then
                                DpValueRange(NextRow, 1) = 0
                            ElseIf RST.Fields.Item(1) = 100000519 Then
                                DpValueRange(NextRow, 1) = 0
                            ElseIf RST.Fields.Item(1) = 100000520 Then
                                DpValueRange(NextRow, 1) = 0
                            Else
                                DpValueRange(NextRow, 1) = RST.Fields.Item(1)
                            End If
                        Else
                            RST.MoveFirst
                            ' Add to avoid summation errors when text error returned
                            DpValueRange(NextRow, 1) = 0
                        End If
                    Else
                        DpValueRange(NextRow, 1) = ""
                    End If
                    
    
                Next
            
            Set RST = Nothing
            
        End If
    End If
    
EntSQLGLCCDpRevisedBudget3DpRange_Zero:
    EntSQLGLCCDpRevisedBudget3DpRange = DpValueRange
    
    GoTo EntSQLGLCCDpRevisedBudget3DpRange_Exit
        
EntSQLGLCCDpRevisedBudget3DpRange_Error:
    If ErrStr = "" Then ErrStr = GetErrorNumStr
    EntSQLGLCCDpRevisedBudget3DpRange = ErrStr

EntSQLGLCCDpRevisedBudget3DpRange_Exit:

End Function

'**************************************************************************************************************
'**                                              REVISED BUDGET 4                                                     **
'**************************************************************************************************************

'*******************************************************************************************************
' Name:        EntSQLGLDpRevisedBudget4DpRange
' Description: Gets the General Ledger Revised Budget 4 values for the specified Currency, Year, Period, Depts and GLCode
'*******************************************************************************************************
Public Function EntSQLGLDpRevisedBudget4DpRange(Company$, TheYear%, ThePeriod%, TheCcy%, GLCode As Long, DpCodes As Range) As Variant
On Error GoTo EntSQLGLDpRevisedBudget4DpRange_Error
    Dim ErrStr$
    Dim DblVal As Double
    Dim Result%
    Dim stADO As String
    Dim RST As ADODB.Recordset
    Dim stSQL As String
    Dim AddVal As Double
    Dim CurrInv As Boolean
    Dim DpRange As String
    Dim DpRowRange(1000) As Double
    Dim DpCodeRange(1000) As String
    Dim DpValueRange() As Variant
    Dim DpRowCount As Double
    Dim NextRow As Double
    
    DoEvents
    
    Result% = 0
    
    DblVal# = 0#
    
    CompStr$ = UCase(Company$)
    
    If ValidCompany(Company) And ValidYear(TheYear) And ValidPeriod(ThePeriod) And ValidCcy(TheCcy%) And ValidGLCode(GLCode) Then
        If LocalCheckServer() Then
            
            'Check User Permissions
            Result = EntServer.CheckUserPermission(Company$, 487)
            
            If Result <> 0 Then
                Error Result
                GoTo EntSQLGLDpRevisedBudget4DpRange_Error
            End If
            
            'Concatenate Dp Range into CSV for passing to SQL select statement
            DpRowCount = 1
            
            For Each DpCodes In DpCodes.Rows
                
                If CStr(DpCodes.Value) <> "" Then
                    DpRange = DpRange + CStr(DpCodes.Value) & "','"
                    DpRowRange(DpRowCount) = DpCodes.Row
                    DpCodeRange(DpRowCount) = CStr(DpCodes.Value)
                End If
                
                DpRowCount = DpRowCount + 1
            Next
            
            'Correct Row Count
            DpRowCount = DpRowCount - 1
            
            'Remove extra comma off end of csv list
            DpRange = Left(DpRange, Len(DpRange) - 2)
            
            DpRange = "'" & DpRange
            
            stSQL = "SELECT EXCHQCHKcode1Trans1," + CStr(Trim(CompStr$)) + ".ifn_GetNominalValue(9, " + CStr(TheYear%) + "," + CStr(ThePeriod%) + "," + CStr(TheCcy%) + "," + CStr(GLCode) + ",'',EXCHQCHKcode1Trans1,'D',0)" & _
                    "FROM " + CStr(Trim(CompStr$)) + ".EXCHQCHK WHERE (RecPfix = 'C' AND SubType = 68) AND EXCHQCHKcode1Trans1 IN (" & CStr(DpRange) & ")"
            
            OpenDBConnection (CompStr$)
            
            With CNT(CurrComp)
                .CommandTimeout = 0
                Set RST = .Execute(stSQL)
            End With
            
            If RST.RecordCount = 0 Then
                EntSQLGLDpRevisedBudget4DpRange = 0
                GoTo EntSQLGLDpRevisedBudget4DpRange_Exit
            End If
            
            ReDim DpValueRange(1 To DpRowCount, 1 To 1)
            
                For NextRow = 1 To DpRowCount
                    If CStr(DpCodeRange(NextRow)) <> "" Then
                        RST.MoveFirst
                        RST.Find ("EXCHQCHKcode1Trans1 = '" & CStr(DpCodeRange(NextRow))) & "'"
                        
                        If Not RST.EOF Then
                            If RST.Fields.Item(1) = 100000511 Then
                                DpValueRange(NextRow, 1) = 0
                            ElseIf RST.Fields.Item(1) = 100000519 Then
                                DpValueRange(NextRow, 1) = 0
                            ElseIf RST.Fields.Item(1) = 100000520 Then
                                DpValueRange(NextRow, 1) = 0
                            Else
                                DpValueRange(NextRow, 1) = RST.Fields.Item(1)
                            End If
                        Else
                            RST.MoveFirst
                            ' Add to avoid summation errors when text error returned
                            DpValueRange(NextRow, 1) = 0
                        End If
                    Else
                        DpValueRange(NextRow, 1) = ""
                    End If
                    
    
                Next
            
            Set RST = Nothing
            
        End If
    End If
    
EntSQLGLDpRevisedBudget4DpRange_Zero:
    EntSQLGLDpRevisedBudget4DpRange = DpValueRange
    
    GoTo EntSQLGLDpRevisedBudget4DpRange_Exit
        
EntSQLGLDpRevisedBudget4DpRange_Error:
    If ErrStr = "" Then ErrStr = GetErrorNumStr
    EntSQLGLDpRevisedBudget4DpRange = ErrStr

EntSQLGLDpRevisedBudget4DpRange_Exit:

End Function

'*******************************************************************************************************
' Name:        EntSQLGLCCDpRevisedBudget4DpRange
' Description: Gets the General Ledger Revised Budget 4 values for the specified Currency, Year, Period, CC, Dps and GLCode
'*******************************************************************************************************
Public Function EntSQLGLCCDpRevisedBudget4DpRange(Company$, TheYear%, ThePeriod%, TheCcy%, GLCode As Long, CCCode$, DpCodes As Range) As Variant
On Error GoTo EntSQLGLCCDpRevisedBudget4DpRange_Error
    Dim ErrStr$
    Dim DblVal As Double
    Dim Result%
    Dim stADO As String
    Dim RST As ADODB.Recordset
    Dim stSQL As String
    Dim AddVal As Double
    Dim CurrInv As Boolean
    Dim DpRange As String
    Dim DpRowRange(1000) As Double
    Dim DpCodeRange(1000) As String
    Dim DpValueRange() As Variant
    Dim DpRowCount As Double
    Dim NextRow As Double
    
    DoEvents
    
    Result% = 0
    
    DblVal# = 0#
    
    CompStr$ = UCase(Company$)
    
    If ValidCompany(Company) And ValidYear(TheYear) And ValidPeriod(ThePeriod) And ValidCcy(TheCcy%) And ValidGLCode(CStr(GLCode)) And ValidCCDep(True, CCCode$) Then
        If LocalCheckServer() Then
            
            'Check User Permissions
            Result = EntServer.CheckUserPermission(Company$, 487)
            
            If Result <> 0 Then
                Error Result
                GoTo EntSQLGLCCDpRevisedBudget4DpRange_Error
            End If
            
            'Concatenate Dp Range into CSV for passing to SQL select statement
            DpRowCount = 1
            
            For Each DpCodes In DpCodes.Rows
                
                If CStr(DpCodes.Value) <> "" Then
                    DpRange = DpRange + CStr(DpCodes.Value) & "','"
                    DpRowRange(DpRowCount) = DpCodes.Row
                    DpCodeRange(DpRowCount) = CStr(DpCodes.Value)
                End If
                
                DpRowCount = DpRowCount + 1
            Next
            
            'Correct Row Count
            DpRowCount = DpRowCount - 1
            
            'Remove extra comma off end of csv list
            DpRange = Left(DpRange, Len(DpRange) - 2)
            
            DpRange = "'" & DpRange
            
            stSQL = "SELECT EXCHQCHKcode1Trans1," + CStr(Trim(CompStr$)) + ".ifn_GetNominalValue(9, " + CStr(TheYear%) + "," + CStr(ThePeriod%) + "," + CStr(TheCcy%) + "," + CStr(GLCode) + ",'" + CStr(Trim(CCCode$)) + "',EXCHQCHKcode1Trans1" + ",'C',0) " & _
                    "FROM " + CStr(Trim(CompStr$)) + ".EXCHQCHK WHERE (RecPfix = 'C' AND SubType = 68) AND EXCHQCHKcode1Trans1 IN (" & CStr(DpRange) & ")"
            
            OpenDBConnection (CompStr$)
            
            With CNT(CurrComp)
                .CommandTimeout = 0
                Set RST = .Execute(stSQL)
            End With
            
            If RST.RecordCount = 0 Then
                EntSQLGLCCDpRevisedBudget4DpRange = 0
                GoTo EntSQLGLCCDpRevisedBudget4DpRange_Exit
            End If
            
            ReDim DpValueRange(1 To DpRowCount, 1 To 1)
            
                For NextRow = 1 To DpRowCount
                    If CStr(DpCodeRange(NextRow)) <> "" Then
                        RST.MoveFirst
                        RST.Find ("EXCHQCHKcode1Trans1 = '" & CStr(DpCodeRange(NextRow))) & "'"
                        
                        If Not RST.EOF Then
                            If RST.Fields.Item(1) = 100000511 Then
                                DpValueRange(NextRow, 1) = 0
                            ElseIf RST.Fields.Item(1) = 100000519 Then
                                DpValueRange(NextRow, 1) = 0
                            ElseIf RST.Fields.Item(1) = 100000520 Then
                                DpValueRange(NextRow, 1) = 0
                            Else
                                DpValueRange(NextRow, 1) = RST.Fields.Item(1)
                            End If
                        Else
                            RST.MoveFirst
                            ' Add to avoid summation errors when text error returned
                            DpValueRange(NextRow, 1) = 0
                        End If
                    Else
                        DpValueRange(NextRow, 1) = ""
                    End If
                    
    
                Next
            
            Set RST = Nothing
            
        End If
    End If
    
EntSQLGLCCDpRevisedBudget4DpRange_Zero:
    EntSQLGLCCDpRevisedBudget4DpRange = DpValueRange
    
    GoTo EntSQLGLCCDpRevisedBudget4DpRange_Exit
        
EntSQLGLCCDpRevisedBudget4DpRange_Error:
    If ErrStr = "" Then ErrStr = GetErrorNumStr
    EntSQLGLCCDpRevisedBudget4DpRange = ErrStr

EntSQLGLCCDpRevisedBudget4DpRange_Exit:

End Function

'**************************************************************************************************************
'**                                              REVISED BUDGET 5                                                     **
'**************************************************************************************************************

'*******************************************************************************************************
' Name:        EntSQLGLDpRevisedBudget5DpRange
' Description: Gets the General Ledger Revised Budget 5 values for the specified Currency, Year, Period, Depts and GLCode
'*******************************************************************************************************
Public Function EntSQLGLDpRevisedBudget5DpRange(Company$, TheYear%, ThePeriod%, TheCcy%, GLCode As Long, DpCodes As Range) As Variant
On Error GoTo EntSQLGLDpRevisedBudget5DpRange_Error
    Dim ErrStr$
    Dim DblVal As Double
    Dim Result%
    Dim stADO As String
    Dim RST As ADODB.Recordset
    Dim stSQL As String
    Dim AddVal As Double
    Dim CurrInv As Boolean
    Dim DpRange As String
    Dim DpRowRange(1000) As Double
    Dim DpCodeRange(1000) As String
    Dim DpValueRange() As Variant
    Dim DpRowCount As Double
    Dim NextRow As Double
    
    DoEvents
    
    Result% = 0
    
    DblVal# = 0#
    
    CompStr$ = UCase(Company$)
    
    If ValidCompany(Company) And ValidYear(TheYear) And ValidPeriod(ThePeriod) And ValidCcy(TheCcy%) And ValidGLCode(GLCode) Then
        If LocalCheckServer() Then
            
            'Check User Permissions
            Result = EntServer.CheckUserPermission(Company$, 487)
            
            If Result <> 0 Then
                Error Result
                GoTo EntSQLGLDpRevisedBudget5DpRange_Error
            End If
            
            'Concatenate Dp Range into CSV for passing to SQL select statement
            DpRowCount = 1
            
            For Each DpCodes In DpCodes.Rows
                
                If CStr(DpCodes.Value) <> "" Then
                    DpRange = DpRange + CStr(DpCodes.Value) & "','"
                    DpRowRange(DpRowCount) = DpCodes.Row
                    DpCodeRange(DpRowCount) = CStr(DpCodes.Value)
                End If
                
                DpRowCount = DpRowCount + 1
            Next
            
            'Correct Row Count
            DpRowCount = DpRowCount - 1
            
            'Remove extra comma off end of csv list
            DpRange = Left(DpRange, Len(DpRange) - 2)
            
            DpRange = "'" & DpRange
            
            stSQL = "SELECT EXCHQCHKcode1Trans1," + CStr(Trim(CompStr$)) + ".ifn_GetNominalValue(10, " + CStr(TheYear%) + "," + CStr(ThePeriod%) + "," + CStr(TheCcy%) + "," + CStr(GLCode) + ",'',EXCHQCHKcode1Trans1,'D',0)" & _
                    "FROM " + CStr(Trim(CompStr$)) + ".EXCHQCHK WHERE (RecPfix = 'C' AND SubType = 68) AND EXCHQCHKcode1Trans1 IN (" & CStr(DpRange) & ")"
            
            OpenDBConnection (CompStr$)
            
            With CNT(CurrComp)
                .CommandTimeout = 0
                Set RST = .Execute(stSQL)
            End With
            
            If RST.RecordCount = 0 Then
                EntSQLGLDpRevisedBudget5DpRange = 0
                GoTo EntSQLGLDpRevisedBudget5DpRange_Exit
            End If
            
            ReDim DpValueRange(1 To DpRowCount, 1 To 1)
            
                For NextRow = 1 To DpRowCount
                    If CStr(DpCodeRange(NextRow)) <> "" Then
                        RST.MoveFirst
                        RST.Find ("EXCHQCHKcode1Trans1 = '" & CStr(DpCodeRange(NextRow))) & "'"
                        
                        If Not RST.EOF Then
                            If RST.Fields.Item(1) = 100000511 Then
                                DpValueRange(NextRow, 1) = 0
                            ElseIf RST.Fields.Item(1) = 100000519 Then
                                DpValueRange(NextRow, 1) = 0
                            ElseIf RST.Fields.Item(1) = 100000520 Then
                                DpValueRange(NextRow, 1) = 0
                            Else
                                DpValueRange(NextRow, 1) = RST.Fields.Item(1)
                            End If
                        Else
                            RST.MoveFirst
                            ' Add to avoid summation errors when text error returned
                            DpValueRange(NextRow, 1) = 0
                        End If
                    Else
                        DpValueRange(NextRow, 1) = ""
                    End If
                    
    
                Next
            
            Set RST = Nothing
            
        End If
    End If
    
EntSQLGLDpRevisedBudget5DpRange_Zero:
    EntSQLGLDpRevisedBudget5DpRange = DpValueRange
    
    GoTo EntSQLGLDpRevisedBudget5DpRange_Exit
        
EntSQLGLDpRevisedBudget5DpRange_Error:
    If ErrStr = "" Then ErrStr = GetErrorNumStr
    EntSQLGLDpRevisedBudget5DpRange = ErrStr

EntSQLGLDpRevisedBudget5DpRange_Exit:

End Function

'*******************************************************************************************************
' Name:        EntSQLGLCCDpRevisedBudget5DpRange
' Description: Gets the General Ledger Revised Budget 5 values for the specified Currency, Year, Period, CC, Dps and GLCode
'*******************************************************************************************************
Public Function EntSQLGLCCDpRevisedBudget5DpRange(Company$, TheYear%, ThePeriod%, TheCcy%, GLCode As Long, CCCode$, DpCodes As Range) As Variant
On Error GoTo EntSQLGLCCDpRevisedBudget5DpRange_Error
    Dim ErrStr$
    Dim DblVal As Double
    Dim Result%
    Dim stADO As String
    Dim RST As ADODB.Recordset
    Dim stSQL As String
    Dim AddVal As Double
    Dim CurrInv As Boolean
    Dim DpRange As String
    Dim DpRowRange(1000) As Double
    Dim DpCodeRange(1000) As String
    Dim DpValueRange() As Variant
    Dim DpRowCount As Double
    Dim NextRow As Double
    
    DoEvents
    
    Result% = 0
    
    DblVal# = 0#
    
    CompStr$ = UCase(Company$)
    
    If ValidCompany(Company) And ValidYear(TheYear) And ValidPeriod(ThePeriod) And ValidCcy(TheCcy%) And ValidGLCode(CStr(GLCode)) And ValidCCDep(True, CCCode$) Then
        If LocalCheckServer() Then
            
            'Check User Permissions
            Result = EntServer.CheckUserPermission(Company$, 487)
            
            If Result <> 0 Then
                Error Result
                GoTo EntSQLGLCCDpRevisedBudget5DpRange_Error
            End If
            
            'Concatenate Dp Range into CSV for passing to SQL select statement
            DpRowCount = 1
            
            For Each DpCodes In DpCodes.Rows
                
                If CStr(DpCodes.Value) <> "" Then
                    DpRange = DpRange + CStr(DpCodes.Value) & "','"
                    DpRowRange(DpRowCount) = DpCodes.Row
                    DpCodeRange(DpRowCount) = CStr(DpCodes.Value)
                End If
                
                DpRowCount = DpRowCount + 1
            Next
            
            'Correct Row Count
            DpRowCount = DpRowCount - 1
            
            'Remove extra comma off end of csv list
            DpRange = Left(DpRange, Len(DpRange) - 2)
            
            DpRange = "'" & DpRange
            
            stSQL = "SELECT EXCHQCHKcode1Trans1," + CStr(Trim(CompStr$)) + ".ifn_GetNominalValue(10, " + CStr(TheYear%) + "," + CStr(ThePeriod%) + "," + CStr(TheCcy%) + "," + CStr(GLCode) + ",'" + CStr(Trim(CCCode$)) + "',EXCHQCHKcode1Trans1" + ",'C',0) " & _
                    "FROM " + CStr(Trim(CompStr$)) + ".EXCHQCHK WHERE (RecPfix = 'C' AND SubType = 68) AND EXCHQCHKcode1Trans1 IN (" & CStr(DpRange) & ")"
            
            OpenDBConnection (CompStr$)
            
            With CNT(CurrComp)
                .CommandTimeout = 0
                Set RST = .Execute(stSQL)
            End With
            
            If RST.RecordCount = 0 Then
                EntSQLGLCCDpRevisedBudget5DpRange = 0
                GoTo EntSQLGLCCDpRevisedBudget5DpRange_Exit
            End If
            
            ReDim DpValueRange(1 To DpRowCount, 1 To 1)
            
                For NextRow = 1 To DpRowCount
                    If CStr(DpCodeRange(NextRow)) <> "" Then
                        RST.MoveFirst
                        RST.Find ("EXCHQCHKcode1Trans1 = '" & CStr(DpCodeRange(NextRow))) & "'"
                        
                        If Not RST.EOF Then
                            If RST.Fields.Item(1) = 100000511 Then
                                DpValueRange(NextRow, 1) = 0
                            ElseIf RST.Fields.Item(1) = 100000519 Then
                                DpValueRange(NextRow, 1) = 0
                            ElseIf RST.Fields.Item(1) = 100000520 Then
                                DpValueRange(NextRow, 1) = 0
                            Else
                                DpValueRange(NextRow, 1) = RST.Fields.Item(1)
                            End If
                        Else
                            RST.MoveFirst
                            ' Add to avoid summation errors when text error returned
                            DpValueRange(NextRow, 1) = 0
                        End If
                    Else
                        DpValueRange(NextRow, 1) = ""
                    End If
                    
    
                Next
            
            Set RST = Nothing
            
        End If
    End If
    
EntSQLGLCCDpRevisedBudget5DpRange_Zero:
    EntSQLGLCCDpRevisedBudget5DpRange = DpValueRange
    
    GoTo EntSQLGLCCDpRevisedBudget5DpRange_Exit
        
EntSQLGLCCDpRevisedBudget5DpRange_Error:
    If ErrStr = "" Then ErrStr = GetErrorNumStr
    EntSQLGLCCDpRevisedBudget5DpRange = ErrStr

EntSQLGLCCDpRevisedBudget5DpRange_Exit:

End Function


Attribute VB_Name = "GLGetGLRanges"
Option Explicit
Public Message As String
Dim CompanyList As Variant
Dim NoCompanies As Long

'*******************************************************************************************************
' Name:        EntSQLGLActualGLRange
' Description: Gets the General Ledger Actual value for the specified Currency, Year, Period and GLCode
'*******************************************************************************************************
Public Function EntSQLGLActualGLRange(Company$, TheYear%, ThePeriod%, TheCcy%, GLCodes As Range) As Variant
Attribute EntSQLGLActualGLRange.VB_Description = "This function returns the General Ledger Actual value for the specified Currency, Year, Period and GLCodes"
On Error GoTo EntSQLGLActualGLRange_Error
    Dim ErrStr$
    Dim DblVal As Double
    Dim Result%
    Dim stADO As String
    Dim RST As ADODB.Recordset
    Dim stSQL As String
    Dim AddVal As Double
    Dim CurrInv As Boolean
    Dim GLRange As String
    Dim GLRowRange(1000) As Double
    Dim GLCodeRange(1000) As String
    Dim GLValueRange() As Variant
    Dim GLRowCount As Double
    Dim NextRow As Double
    Dim SingleCompany As String
    Dim LPosition As Integer
    
    DoEvents
    
    Result% = 0
    
    DblVal# = 0#
    
    LPosition = 0
    CompStr$ = UCase(Company$)
    LPosition = InStr(CompStr$, ",")
    
    If LPosition <> 0 Then
        Company$ = Left(CompStr$, LPosition - 1)
    End If
    
    If ValidCompany(Company$) And ValidYear(TheYear) And ValidPeriod(ThePeriod) And ValidCcy(TheCcy%) Then
        If LocalCheckServer() Then
            
            'Check User Permissions for all companies
            CompanyList = Split(CompStr$, ",")
            For NoCompanies = 0 To UBound(CompanyList)
                Result = EntServer.CheckUserPermission(CompanyList(NoCompanies), 487)
                
                If Result <> 0 Then
                    Error Result
                    GoTo EntSQLGLActualGLRange_Error
                End If
            Next NoCompanies
            
            GLRowCount = 1
            
            For Each GLCodes In GLCodes.Rows
                
                If CStr(GLCodes.Value) <> "" And (GLCodes.Value > 0 And GLCodes.Value <= 2147483647) Then
                    GLRange = GLRange + CStr(GLCodes.Value) & ","
                    GLRowRange(GLRowCount) = GLCodes.Row
                    GLCodeRange(GLRowCount) = CStr(GLCodes.Value)
                End If
                
                GLRowCount = GLRowCount + 1
            Next
            
            'Correct Row Count
            GLRowCount = GLRowCount - 1
            
            'Remove extra comma off end of csv list
            GLRange = Left(GLRange, Len(GLRange) - 1)
            
            stSQL = "EXEC common.esp_GetNominalValue '" + CompStr$ + "',3," + CStr(TheYear%) + "," + CStr(ThePeriod%) + "," + CStr(TheCcy%) + ",'" + CStr(GLRange) + "','','','',0"
            
            OpenDBConnection (CompStr$)
            
            With CNT(CurrComp)
                .CommandTimeout = 0
                Set RST = .Execute(stSQL)
            End With
            
            If RST.RecordCount = 0 Then
                EntSQLGLActualGLRange = 0
                GoTo EntSQLGLActualGLRange_Exit
            End If
            
            ReDim GLValueRange(1 To GLRowCount, 1 To 1)
            
                For NextRow = 1 To GLRowCount
                    If CStr(GLCodeRange(NextRow)) <> "" Then
                        RST.MoveFirst
                        RST.Find ("glCode = " & CStr(GLCodeRange(NextRow)))
                        
                        If Not RST.EOF Then
                            If RST.Fields.Item(1) = 100000511 Then
                                GLValueRange(NextRow, 1) = 0
                            ElseIf RST.Fields.Item(1) = 100000519 Then
                                GLValueRange(NextRow, 1) = 0
                            ElseIf RST.Fields.Item(1) = 100000520 Then
                                GLValueRange(NextRow, 1) = 0
                            Else
                                GLValueRange(NextRow, 1) = RST.Fields.Item(1)
                            End If
                        Else
                            RST.MoveFirst
                            ' Add to avoid summation errors when text error returned
                            GLValueRange(NextRow, 1) = 0
                        End If
                    Else
                        GLValueRange(NextRow, 1) = ""
                    End If
                    
                Next
            
            Set RST = Nothing
            
        End If
    End If
    
EntSQLGLActualGLRange_Zero:
    EntSQLGLActualGLRange = GLValueRange

    GoTo EntSQLGLActualGLRange_Exit
        
EntSQLGLActualGLRange_Error:
    If ErrStr = "" Then ErrStr = GetErrorNumStr
    EntSQLGLActualGLRange = ErrStr

EntSQLGLActualGLRange_Exit:

End Function

'*******************************************************************************************************
' Name:        EntSQLGLCCActualGLRange
' Description: Gets the General Ledger Actual values for the specified Currency, Year, Period, CC and GLCodes
'*******************************************************************************************************
Public Function EntSQLGLCCActualGLRange(Company$, TheYear%, ThePeriod%, TheCcy%, GLCodes As Range, CCCode$) As Variant
Attribute EntSQLGLCCActualGLRange.VB_Description = "This function returns the General Ledger Actual value for the specified Currency, Year, Period, GLCodes and CostCentre"
On Error GoTo EntSQLGLCCActualGLRange_Error
    Dim ErrStr$
    Dim DblVal As Double
    Dim Result%
    Dim stADO As String
    Dim RST As ADODB.Recordset
    Dim stSQL As String
    Dim AddVal As Double
    Dim CurrInv As Boolean
    Dim GLRange As String
    Dim GLRowRange(1000) As Double
    Dim GLCodeRange(1000) As String
    Dim GLValueRange() As Variant
    Dim GLRowCount As Double
    Dim NextRow As Double
    Dim SingleCompany As String
    Dim LPosition As Integer
    
    DoEvents
    
    Result% = 0
    
    DblVal# = 0#
    
    LPosition = 0
    CompStr$ = UCase(Company$)
    LPosition = InStr(CompStr$, ",")
    
    If LPosition <> 0 Then
        Company$ = Left(CompStr$, LPosition - 1)
    End If
    
    If ValidCompany(Company) And ValidYear(TheYear) And ValidPeriod(ThePeriod) And ValidCcy(TheCcy%) Then
        If LocalCheckServer() Then
            
            'Check User Permissions for all companies
            CompanyList = Split(CompStr$, ",")
            For NoCompanies = 0 To UBound(CompanyList)
                Result = EntServer.CheckUserPermission(CompanyList(NoCompanies), 487)
                
                If Result <> 0 Then
                    Error Result
                    GoTo EntSQLGLCCActualGLRange_Error
                End If
            Next NoCompanies
            
            GLRowCount = 1
            
            For Each GLCodes In GLCodes.Rows
                
                If CStr(GLCodes.Value) <> "" And (GLCodes.Value > 0 And GLCodes.Value <= 2147483647) Then
                    GLRange = GLRange + CStr(GLCodes.Value) & ","
                    GLRowRange(GLRowCount) = GLCodes.Row
                    GLCodeRange(GLRowCount) = CStr(GLCodes.Value)
                End If
                
                GLRowCount = GLRowCount + 1
            Next
            
            'Correct Row Count
            GLRowCount = GLRowCount - 1
            
            'Remove extra comma off end of csv list
            GLRange = Left(GLRange, Len(GLRange) - 1)
            
            stSQL = "EXEC common.esp_GetNominalValue '" + CompStr$ + "',3," + CStr(TheYear%) + "," + CStr(ThePeriod%) + "," + CStr(TheCcy%) + ",'" + CStr(GLRange) + "','" + CStr(Trim(CCCode$)) + "','','C',0"
            
            OpenDBConnection (CompStr$)
            
            With CNT(CurrComp)
                .CommandTimeout = 0
                Set RST = .Execute(stSQL)
            End With
            
            If RST.RecordCount = 0 Then
                EntSQLGLCCActualGLRange = 0
                GoTo EntSQLGLCCActualGLRange_Exit
            End If
            
            ReDim GLValueRange(1 To GLRowCount, 1 To 1)
            
                For NextRow = 1 To GLRowCount
                    If CStr(GLCodeRange(NextRow)) <> "" Then
                        RST.MoveFirst
                        RST.Find ("glCode = " & CStr(GLCodeRange(NextRow)))
                        
                        If Not RST.EOF Then
                            If RST.Fields.Item(1) = 100000511 Then
                                GLValueRange(NextRow, 1) = 0
                            ElseIf RST.Fields.Item(1) = 100000519 Then
                                GLValueRange(NextRow, 1) = 0
                            ElseIf RST.Fields.Item(1) = 100000520 Then
                                GLValueRange(NextRow, 1) = 0
                            Else
                                GLValueRange(NextRow, 1) = RST.Fields.Item(1)
                            End If
                        Else
                            RST.MoveFirst
                            ' Add to avoid summation errors when text error returned
                            GLValueRange(NextRow, 1) = 0
                        End If
                    Else
                        GLValueRange(NextRow, 1) = ""
                    End If
                    
    
                Next
            
            Set RST = Nothing
            
        End If
    End If
    
EntSQLGLCCActualGLRange_Zero:
    EntSQLGLCCActualGLRange = GLValueRange
    
    GoTo EntSQLGLCCActualGLRange_Exit
        
EntSQLGLCCActualGLRange_Error:
    If ErrStr = "" Then ErrStr = GetErrorNumStr
    EntSQLGLCCActualGLRange = ErrStr

EntSQLGLCCActualGLRange_Exit:

End Function

'*******************************************************************************************************
' Name:        EntSQLGLDpActualGLRange
' Description: Gets the General Ledger Actual values for the specified Currency, Year, Period, Dp and GLCodes
'*******************************************************************************************************
Public Function EntSQLGLDpActualGLRange(Company$, TheYear%, ThePeriod%, TheCcy%, GLCodes As Range, DpCode$) As Variant
Attribute EntSQLGLDpActualGLRange.VB_Description = "This function returns the General Ledger Actual value for the specified Currency, Year, Period, GLCodes and Department."
On Error GoTo EntSQLGLDpActualGLRange_Error
    Dim ErrStr$
    Dim DblVal As Double
    Dim Result%
    Dim stADO As String
    Dim RST As ADODB.Recordset
    Dim stSQL As String
    Dim AddVal As Double
    Dim CurrInv As Boolean
    Dim GLRange As String
    Dim GLRowRange(1000) As Double
    Dim GLCodeRange(1000) As String
    Dim GLValueRange() As Variant
    Dim GLRowCount As Double
    Dim NextRow As Double
    Dim SingleCompany As String
    Dim LPosition As Integer
    
    DoEvents
    
    Result% = 0
    
    DblVal# = 0#
    
    LPosition = 0
    CompStr$ = UCase(Company$)
    LPosition = InStr(CompStr$, ",")
    
    If LPosition <> 0 Then
        Company$ = Left(CompStr$, LPosition - 1)
    End If
    
    If ValidCompany(Company) And ValidYear(TheYear) And ValidPeriod(ThePeriod) And ValidCcy(TheCcy%) Then
        If LocalCheckServer() Then
            
            'Check User Permissions for all companies
            CompanyList = Split(CompStr$, ",")
            For NoCompanies = 0 To UBound(CompanyList)
                Result = EntServer.CheckUserPermission(CompanyList(NoCompanies), 487)
                
                If Result <> 0 Then
                    Error Result
                    GoTo EntSQLGLDpActualGLRange_Error
                End If
            Next NoCompanies
            
            GLRowCount = 1
            
            For Each GLCodes In GLCodes.Rows
                
                If CStr(GLCodes.Value) <> "" And (GLCodes.Value > 0 And GLCodes.Value <= 2147483647) Then
                    GLRange = GLRange + CStr(GLCodes.Value) & ","
                    GLRowRange(GLRowCount) = GLCodes.Row
                    GLCodeRange(GLRowCount) = CStr(GLCodes.Value)
                End If
                
                GLRowCount = GLRowCount + 1
            Next
            
            'Correct Row Count
            GLRowCount = GLRowCount - 1
            
            'Remove extra comma off end of csv list
            GLRange = Left(GLRange, Len(GLRange) - 1)
            
            stSQL = "EXEC common.esp_GetNominalValue '" + CompStr$ + "',3," + CStr(TheYear%) + "," + CStr(ThePeriod%) + "," + CStr(TheCcy%) + ",'" + CStr(GLRange) + "','','" + CStr(Trim(DpCode$)) + "','D',0"
            
            OpenDBConnection (CompStr$)
            
            With CNT(CurrComp)
                .CommandTimeout = 0
                Set RST = .Execute(stSQL)
            End With
            
            If RST.RecordCount = 0 Then
                EntSQLGLDpActualGLRange = 0
                GoTo EntSQLGLDpActualGLRange_Exit
            End If
            
            ReDim GLValueRange(1 To GLRowCount, 1 To 1)
            
                For NextRow = 1 To GLRowCount
                    If CStr(GLCodeRange(NextRow)) <> "" Then
                        RST.MoveFirst
                        RST.Find ("glCode = " & CStr(GLCodeRange(NextRow)))
                        
                        If Not RST.EOF Then
                            If RST.Fields.Item(1) = 100000511 Then
                                GLValueRange(NextRow, 1) = 0
                            ElseIf RST.Fields.Item(1) = 100000519 Then
                                GLValueRange(NextRow, 1) = 0
                            ElseIf RST.Fields.Item(1) = 100000520 Then
                                GLValueRange(NextRow, 1) = 0
                            Else
                                GLValueRange(NextRow, 1) = RST.Fields.Item(1)
                            End If
                        Else
                            RST.MoveFirst
                            ' Add to avoid summation errors when text error returned
                            GLValueRange(NextRow, 1) = 0
                        End If
                    Else
                        GLValueRange(NextRow, 1) = ""
                    End If
                    
    
                Next
            
            Set RST = Nothing
            
        End If
    End If
    
EntSQLGLDpActualGLRange_Zero:
    EntSQLGLDpActualGLRange = GLValueRange
    
    GoTo EntSQLGLDpActualGLRange_Exit
        
EntSQLGLDpActualGLRange_Error:
    If ErrStr = "" Then ErrStr = GetErrorNumStr
    EntSQLGLDpActualGLRange = ErrStr

EntSQLGLDpActualGLRange_Exit:

End Function

'*******************************************************************************************************
' Name:        EntSQLGLCCDpActualGLRange
' Description: Gets the General Ledger Actual values for the specified Currency, Year, Period, CC, Dp and GLCodes
'*******************************************************************************************************
Public Function EntSQLGLCCDpActualGLRange(Company$, TheYear%, ThePeriod%, TheCcy%, GLCodes As Range, CCCode$, DpCode$) As Variant
Attribute EntSQLGLCCDpActualGLRange.VB_Description = "This function returns the General Ledger Actual value for the specified Currency, Year, Period, GLCodes CostCentre and Department.\r\n"
On Error GoTo EntSQLGLCCDpActualGLRange_Error
    Dim ErrStr$
    Dim DblVal As Double
    Dim Result%
    Dim stADO As String
    Dim RST As ADODB.Recordset
    Dim stSQL As String
    Dim AddVal As Double
    Dim CurrInv As Boolean
    Dim GLRange As String
    Dim GLRowRange(1000) As Double
    Dim GLCodeRange(1000) As String
    Dim GLValueRange() As Variant
    Dim GLRowCount As Double
    Dim NextRow As Double
    Dim SingleCompany As String
    Dim LPosition As Integer
    
    DoEvents
    
    Result% = 0
    
    DblVal# = 0#
    
    LPosition = 0
    CompStr$ = UCase(Company$)
    LPosition = InStr(CompStr$, ",")
    
    If LPosition <> 0 Then
        Company$ = Left(CompStr$, LPosition - 1)
    End If
    
    If ValidCompany(Company) And ValidYear(TheYear) And ValidPeriod(ThePeriod) And ValidCcy(TheCcy%) Then
        If LocalCheckServer() Then
            
            'Check User Permissions for all companies
            CompanyList = Split(CompStr$, ",")
            For NoCompanies = 0 To UBound(CompanyList)
                Result = EntServer.CheckUserPermission(CompanyList(NoCompanies), 487)
                
                If Result <> 0 Then
                    Error Result
                    GoTo EntSQLGLCCDpActualGLRange_Error
                End If
            Next NoCompanies
            
            GLRowCount = 1
            
            For Each GLCodes In GLCodes.Rows
                
                If CStr(GLCodes.Value) <> "" And (GLCodes.Value > 0 And GLCodes.Value <= 2147483647) Then
                    GLRange = GLRange + CStr(GLCodes.Value) & ","
                    GLRowRange(GLRowCount) = GLCodes.Row
                    GLCodeRange(GLRowCount) = CStr(GLCodes.Value)
                End If
                
                GLRowCount = GLRowCount + 1
            Next
            
            'Correct Row Count
            GLRowCount = GLRowCount - 1
            
            'Remove extra comma off end of csv list
            GLRange = Left(GLRange, Len(GLRange) - 1)
            
            stSQL = "EXEC common.esp_GetNominalValue '" + CompStr$ + "',3," + CStr(TheYear%) + "," + CStr(ThePeriod%) + "," + CStr(TheCcy%) + ",'" + CStr(GLRange) + "','" + CStr(Trim(CCCode$)) + "','" + CStr(Trim(DpCode$)) + "','C',0"
            
            OpenDBConnection (CompStr$)
            
            With CNT(CurrComp)
                .CommandTimeout = 0
                Set RST = .Execute(stSQL)
            End With
            
            If RST.RecordCount = 0 Then
                EntSQLGLCCDpActualGLRange = 0
                GoTo EntSQLGLCCDpActualGLRange_Exit
            End If
            
            ReDim GLValueRange(1 To GLRowCount, 1 To 1)
            
                For NextRow = 1 To GLRowCount
                    If CStr(GLCodeRange(NextRow)) <> "" Then
                        RST.MoveFirst
                        RST.Find ("glCode = " & CStr(GLCodeRange(NextRow)))
                        
                        If Not RST.EOF Then
                            If RST.Fields.Item(1) = 100000511 Then
                                GLValueRange(NextRow, 1) = 0
                            ElseIf RST.Fields.Item(1) = 100000519 Then
                                GLValueRange(NextRow, 1) = 0
                            ElseIf RST.Fields.Item(1) = 100000520 Then
                                GLValueRange(NextRow, 1) = 0
                            Else
                                GLValueRange(NextRow, 1) = RST.Fields.Item(1)
                            End If
                        Else
                            RST.MoveFirst
                            ' Add to avoid summation errors when text error returned
                            GLValueRange(NextRow, 1) = 0
                        End If
                    Else
                        GLValueRange(NextRow, 1) = ""
                    End If
                    
    
                Next
            
            Set RST = Nothing
            
        End If
    End If
    
EntSQLGLCCDpActualGLRange_Zero:
    EntSQLGLCCDpActualGLRange = GLValueRange
    
    GoTo EntSQLGLCCDpActualGLRange_Exit
        
EntSQLGLCCDpActualGLRange_Error:
    If ErrStr = "" Then ErrStr = GetErrorNumStr
    EntSQLGLCCDpActualGLRange = ErrStr

EntSQLGLCCDpActualGLRange_Exit:

End Function

'**************************************************************************************************************
'**                                              BUDGET                                                      **
'**************************************************************************************************************

'*******************************************************************************************************
' Name:        EntSQLGLBudgetGLRange
' Description: Gets the General Ledger Budget value for the specified Currency, Year, Period and GLCode
'*******************************************************************************************************
Public Function EntSQLGLBudgetGLRange(Company$, TheYear%, ThePeriod%, TheCcy%, GLCodes As Range) As Variant
Attribute EntSQLGLBudgetGLRange.VB_Description = "This function returns the General Ledger Budget value for the specified Currency, Year, Period and GLCodes."
On Error GoTo EntSQLGLBudgetGLRange_Error
    Dim ErrStr$
    Dim DblVal As Double
    Dim Result%
    Dim stADO As String
    Dim RST As ADODB.Recordset
    Dim stSQL As String
    Dim AddVal As Double
    Dim CurrInv As Boolean
    Dim GLRange As String
    Dim GLRowRange(1000) As Double
    Dim GLCodeRange(1000) As String
    Dim GLValueRange() As Variant
    Dim GLRowCount As Double
    Dim NextRow As Double
    Dim SingleCompany As String
    Dim LPosition As Integer
    
    DoEvents
    
    Result% = 0
    
    DblVal# = 0#
    
    LPosition = 0
    CompStr$ = UCase(Company$)
    LPosition = InStr(CompStr$, ",")
    
    If LPosition <> 0 Then
        Company$ = Left(CompStr$, LPosition - 1)
    End If
    
    If ValidCompany(Company$) And ValidYear(TheYear) And ValidPeriod(ThePeriod) And ValidCcy(TheCcy%) Then
        If LocalCheckServer() Then
            
            'Check User Permissions for all companies
            CompanyList = Split(CompStr$, ",")
            For NoCompanies = 0 To UBound(CompanyList)
                Result = EntServer.CheckUserPermission(CompanyList(NoCompanies), 487)
                
                If Result <> 0 Then
                    Error Result
                    GoTo EntSQLGLBudgetGLRange_Error
                End If
            Next NoCompanies
            
            GLRowCount = 1
            
            For Each GLCodes In GLCodes.Rows
                
                If CStr(GLCodes.Value) <> "" And (GLCodes.Value > 0 And GLCodes.Value <= 2147483647) Then
                    GLRange = GLRange + CStr(GLCodes.Value) & ","
                    GLRowRange(GLRowCount) = GLCodes.Row
                    GLCodeRange(GLRowCount) = CStr(GLCodes.Value)
                End If
                
                GLRowCount = GLRowCount + 1
            Next
            
            'Correct Row Count
            GLRowCount = GLRowCount - 1
            
            'Remove extra comma off end of csv list
            GLRange = Left(GLRange, Len(GLRange) - 1)
            
            stSQL = "EXEC common.esp_GetNominalValue '" + CompStr$ + "',4," + CStr(TheYear%) + "," + CStr(ThePeriod%) + "," + CStr(TheCcy%) + ",'" + CStr(GLRange) + "','','','',0"
            
            OpenDBConnection (CompStr$)
            
            With CNT(CurrComp)
                .CommandTimeout = 0
                Set RST = .Execute(stSQL)
            End With
            
            If RST.RecordCount = 0 Then
                EntSQLGLBudgetGLRange = 0
                GoTo EntSQLGLBudgetGLRange_Exit
            End If
            
            
            ReDim GLValueRange(1 To GLRowCount, 1 To 1)
            
                For NextRow = 1 To GLRowCount
                    If CStr(GLCodeRange(NextRow)) <> "" Then
                        RST.MoveFirst
                        RST.Find ("glCode = " & CStr(GLCodeRange(NextRow)))
                        
                        If Not RST.EOF Then
                            If RST.Fields.Item(1) = 100000511 Then
                                GLValueRange(NextRow, 1) = 0
                            ElseIf RST.Fields.Item(1) = 100000519 Then
                                GLValueRange(NextRow, 1) = 0
                            ElseIf RST.Fields.Item(1) = 100000520 Then
                                GLValueRange(NextRow, 1) = 0
                            Else
                                GLValueRange(NextRow, 1) = RST.Fields.Item(1)
                            End If
                        Else
                            RST.MoveFirst
                            ' Add to avoid summation errors when text error returned
                            GLValueRange(NextRow, 1) = 0
                        End If
                    Else
                        GLValueRange(NextRow, 1) = ""
                    End If
                    
    
                Next
            
            Set RST = Nothing
            
        End If
    End If
    
EntSQLGLBudgetGLRange_Zero:
    EntSQLGLBudgetGLRange = GLValueRange
    
    GoTo EntSQLGLBudgetGLRange_Exit
        
EntSQLGLBudgetGLRange_Error:
    If ErrStr = "" Then ErrStr = GetErrorNumStr
    EntSQLGLBudgetGLRange = ErrStr

EntSQLGLBudgetGLRange_Exit:

End Function

'*******************************************************************************************************
' Name:        EntSQLGLCCBudgetGLRange
' Description: Gets the General Ledger Budget values for the specified Currency, Year, Period, CC and GLCodes
'*******************************************************************************************************
Public Function EntSQLGLCCBudgetGLRange(Company$, TheYear%, ThePeriod%, TheCcy%, GLCodes As Range, CCCode$) As Variant
Attribute EntSQLGLCCBudgetGLRange.VB_Description = "This function returns the General Ledger Budget value for the specified Currency, Year, Period, GLCodes and CostCentre"
On Error GoTo EntSQLGLCCBudgetGLRange_Error
    Dim ErrStr$
    Dim DblVal As Double
    Dim Result%
    Dim stADO As String
    Dim RST As ADODB.Recordset
    Dim stSQL As String
    Dim AddVal As Double
    Dim CurrInv As Boolean
    Dim GLRange As String
    Dim GLRowRange(1000) As Double
    Dim GLCodeRange(1000) As String
    Dim GLValueRange() As Variant
    Dim GLRowCount As Double
    Dim NextRow As Double
    Dim SingleCompany As String
    Dim LPosition As Integer
    
    DoEvents
    
    Result% = 0
    
    DblVal# = 0#
    
    LPosition = 0
    CompStr$ = UCase(Company$)
    LPosition = InStr(CompStr$, ",")
    
    If LPosition <> 0 Then
        Company$ = Left(CompStr$, LPosition - 1)
    End If
    
    If ValidCompany(Company) And ValidYear(TheYear) And ValidPeriod(ThePeriod) And ValidCcy(TheCcy%) Then
        If LocalCheckServer() Then
            
            'Check User Permissions for all companies
            CompanyList = Split(CompStr$, ",")
            For NoCompanies = 0 To UBound(CompanyList)
                Result = EntServer.CheckUserPermission(CompanyList(NoCompanies), 487)
                
                If Result <> 0 Then
                    Error Result
                    GoTo EntSQLGLCCBudgetGLRange_Error
                End If
            Next NoCompanies
            
            GLRowCount = 1
            
            For Each GLCodes In GLCodes.Rows
                
                If CStr(GLCodes.Value) <> "" And (GLCodes.Value > 0 And GLCodes.Value <= 2147483647) Then
                    GLRange = GLRange + CStr(GLCodes.Value) & ","
                    GLRowRange(GLRowCount) = GLCodes.Row
                    GLCodeRange(GLRowCount) = CStr(GLCodes.Value)
                End If
                
                GLRowCount = GLRowCount + 1
            Next
            
            'Correct Row Count
            GLRowCount = GLRowCount - 1
            
            'Remove extra comma off end of csv list
            GLRange = Left(GLRange, Len(GLRange) - 1)
            
            stSQL = "EXEC common.esp_GetNominalValue '" + CompStr$ + "',4," + CStr(TheYear%) + "," + CStr(ThePeriod%) + "," + CStr(TheCcy%) + ",'" + CStr(GLRange) + "','" + CStr(Trim(CCCode$)) + "','','C',0"

            OpenDBConnection (CompStr$)
            
            With CNT(CurrComp)
                .CommandTimeout = 0
                Set RST = .Execute(stSQL)
            End With
            
            If RST.RecordCount = 0 Then
                EntSQLGLCCBudgetGLRange = 0
                GoTo EntSQLGLCCBudgetGLRange_Exit
            End If
            
            ReDim GLValueRange(1 To GLRowCount, 1 To 1)
            
                For NextRow = 1 To GLRowCount
                    If CStr(GLCodeRange(NextRow)) <> "" Then
                        RST.MoveFirst
                        RST.Find ("glCode = " & CStr(GLCodeRange(NextRow)))
                        
                        If Not RST.EOF Then
                            If RST.Fields.Item(1) = 100000511 Then
                                GLValueRange(NextRow, 1) = 0
                            ElseIf RST.Fields.Item(1) = 100000519 Then
                                GLValueRange(NextRow, 1) = 0
                            ElseIf RST.Fields.Item(1) = 100000520 Then
                                GLValueRange(NextRow, 1) = 0
                            Else
                                GLValueRange(NextRow, 1) = RST.Fields.Item(1)
                            End If
                        Else
                            RST.MoveFirst
                            ' Add to avoid summation errors when text error returned
                            GLValueRange(NextRow, 1) = 0
                        End If
                    Else
                        GLValueRange(NextRow, 1) = ""
                    End If
                    
    
                Next
            
            Set RST = Nothing
            
        End If
    End If
    
EntSQLGLCCBudgetGLRange_Zero:
    EntSQLGLCCBudgetGLRange = GLValueRange
    
    GoTo EntSQLGLCCBudgetGLRange_Exit
        
EntSQLGLCCBudgetGLRange_Error:
    If ErrStr = "" Then ErrStr = GetErrorNumStr
    EntSQLGLCCBudgetGLRange = ErrStr

EntSQLGLCCBudgetGLRange_Exit:

End Function


'*******************************************************************************************************
' Name:        EntSQLGLDpBudgetGLRange
' Description: Gets the General Ledger Budget values for the specified Currency, Year, Period, Dp and GLCodes
'*******************************************************************************************************
Public Function EntSQLGLDpBudgetGLRange(Company$, TheYear%, ThePeriod%, TheCcy%, GLCodes As Range, DpCode$) As Variant
Attribute EntSQLGLDpBudgetGLRange.VB_Description = "This function returns the General Ledger Budget value for the specified Currency, Year, Period, GLCodes and Department."
On Error GoTo EntSQLGLDpBudgetGLRange_Error
    Dim ErrStr$
    Dim DblVal As Double
    Dim Result%
    Dim stADO As String
    Dim RST As ADODB.Recordset
    Dim stSQL As String
    Dim AddVal As Double
    Dim CurrInv As Boolean
    Dim GLRange As String
    Dim GLRowRange(1000) As Double
    Dim GLCodeRange(1000) As String
    Dim GLValueRange() As Variant
    Dim GLRowCount As Double
    Dim NextRow As Double
    Dim SingleCompany As String
    Dim LPosition As Integer
    
    DoEvents
    
    Result% = 0
    
    DblVal# = 0#
    
    LPosition = 0
    CompStr$ = UCase(Company$)
    LPosition = InStr(CompStr$, ",")
    
    If LPosition <> 0 Then
        Company$ = Left(CompStr$, LPosition - 1)
    End If
    
    If ValidCompany(Company) And ValidYear(TheYear) And ValidPeriod(ThePeriod) And ValidCcy(TheCcy%) Then
        If LocalCheckServer() Then
            
            'Check User Permissions for all companies
            CompanyList = Split(CompStr$, ",")
            For NoCompanies = 0 To UBound(CompanyList)
                Result = EntServer.CheckUserPermission(CompanyList(NoCompanies), 487)
                
                If Result <> 0 Then
                    Error Result
                    GoTo EntSQLGLDpBudgetGLRange_Error
                End If
            Next NoCompanies
            
            GLRowCount = 1
            
            For Each GLCodes In GLCodes.Rows
                
                If CStr(GLCodes.Value) <> "" And (GLCodes.Value > 0 And GLCodes.Value <= 2147483647) Then
                    GLRange = GLRange + CStr(GLCodes.Value) & ","
                    GLRowRange(GLRowCount) = GLCodes.Row
                    GLCodeRange(GLRowCount) = CStr(GLCodes.Value)
                End If
                
                GLRowCount = GLRowCount + 1
            Next
            
            'Correct Row Count
            GLRowCount = GLRowCount - 1
            
            'Remove extra comma off end of csv list
            GLRange = Left(GLRange, Len(GLRange) - 1)
            
            stSQL = "EXEC common.esp_GetNominalValue '" + CompStr$ + "',4," + CStr(TheYear%) + "," + CStr(ThePeriod%) + "," + CStr(TheCcy%) + ",'" + CStr(GLRange) + "','','" + CStr(Trim(DpCode$)) + "','D',0"

            OpenDBConnection (CompStr$)
            
            With CNT(CurrComp)
                .CommandTimeout = 0
                Set RST = .Execute(stSQL)
            End With
            
            If RST.RecordCount = 0 Then
                EntSQLGLDpBudgetGLRange = 0
                GoTo EntSQLGLDpBudgetGLRange_Exit
            End If
            
            ReDim GLValueRange(1 To GLRowCount, 1 To 1)
            
                For NextRow = 1 To GLRowCount
                    If CStr(GLCodeRange(NextRow)) <> "" Then
                        RST.MoveFirst
                        RST.Find ("glCode = " & CStr(GLCodeRange(NextRow)))
                        
                        If Not RST.EOF Then
                            If RST.Fields.Item(1) = 100000511 Then
                                GLValueRange(NextRow, 1) = 0
                            ElseIf RST.Fields.Item(1) = 100000519 Then
                                GLValueRange(NextRow, 1) = 0
                            ElseIf RST.Fields.Item(1) = 100000520 Then
                                GLValueRange(NextRow, 1) = 0
                            Else
                                GLValueRange(NextRow, 1) = RST.Fields.Item(1)
                            End If
                        Else
                            RST.MoveFirst
                            ' Add to avoid summation errors when text error returned
                            GLValueRange(NextRow, 1) = 0
                        End If
                    Else
                        GLValueRange(NextRow, 1) = ""
                    End If
                    
    
                Next
            
            Set RST = Nothing
            
        End If
    End If
    
EntSQLGLDpBudgetGLRange_Zero:
    EntSQLGLDpBudgetGLRange = GLValueRange
    
    GoTo EntSQLGLDpBudgetGLRange_Exit
        
EntSQLGLDpBudgetGLRange_Error:
    If ErrStr = "" Then ErrStr = GetErrorNumStr
    EntSQLGLDpBudgetGLRange = ErrStr

EntSQLGLDpBudgetGLRange_Exit:

End Function


'*******************************************************************************************************
' Name:        EntSQLGLCCDpBudgetGLRange
' Description: Gets the General Ledger Budget values for the specified Currency, Year, Period, CC, Dp and GLCodes
'*******************************************************************************************************
Public Function EntSQLGLCCDpBudgetGLRange(Company$, TheYear%, ThePeriod%, TheCcy%, GLCodes As Range, CCCode$, DpCode$) As Variant
Attribute EntSQLGLCCDpBudgetGLRange.VB_Description = "This function returns the General Ledger Budget value for the specified Currency, Year, Period, GLCodes CostCentre and Department."
On Error GoTo EntSQLGLCCDpBudgetGLRange_Error
    Dim ErrStr$
    Dim DblVal As Double
    Dim Result%
    Dim stADO As String
    Dim RST As ADODB.Recordset
    Dim stSQL As String
    Dim AddVal As Double
    Dim CurrInv As Boolean
    Dim GLRange As String
    Dim GLRowRange(1000) As Double
    Dim GLCodeRange(1000) As String
    Dim GLValueRange() As Variant
    Dim GLRowCount As Double
    Dim NextRow As Double
    Dim SingleCompany As String
    Dim LPosition As Integer
    
    DoEvents
    
    Result% = 0
    
    DblVal# = 0#
    
    LPosition = 0
    CompStr$ = UCase(Company$)
    LPosition = InStr(CompStr$, ",")
    
    If LPosition <> 0 Then
        Company$ = Left(CompStr$, LPosition - 1)
    End If
    
    If ValidCompany(Company) And ValidYear(TheYear) And ValidPeriod(ThePeriod) And ValidCcy(TheCcy%) Then
        If LocalCheckServer() Then
            
            'Check User Permissions for all companies
            CompanyList = Split(CompStr$, ",")
            For NoCompanies = 0 To UBound(CompanyList)
                Result = EntServer.CheckUserPermission(CompanyList(NoCompanies), 487)
                
                If Result <> 0 Then
                    Error Result
                    GoTo EntSQLGLCCDpBudgetGLRange_Error
                End If
            Next NoCompanies
            
            GLRowCount = 1
            
            For Each GLCodes In GLCodes.Rows
                
                If CStr(GLCodes.Value) <> "" And (GLCodes.Value > 0 And GLCodes.Value <= 2147483647) Then
                    GLRange = GLRange + CStr(GLCodes.Value) & ","
                    GLRowRange(GLRowCount) = GLCodes.Row
                    GLCodeRange(GLRowCount) = CStr(GLCodes.Value)
                End If
                
                GLRowCount = GLRowCount + 1
            Next
            
            'Correct Row Count
            GLRowCount = GLRowCount - 1
            
            'Remove extra comma off end of csv list
            GLRange = Left(GLRange, Len(GLRange) - 1)
            
            stSQL = "EXEC common.esp_GetNominalValue '" + CompStr$ + "',4," + CStr(TheYear%) + "," + CStr(ThePeriod%) + "," + CStr(TheCcy%) + ",'" + CStr(GLRange) + "','" + CStr(Trim(CCCode$)) + "','" + CStr(Trim(DpCode$)) + "','C',0"
            
            OpenDBConnection (CompStr$)
            
            With CNT(CurrComp)
                .CommandTimeout = 0
                Set RST = .Execute(stSQL)
            End With
            
            If RST.RecordCount = 0 Then
                EntSQLGLCCDpBudgetGLRange = 0
                GoTo EntSQLGLCCDpBudgetGLRange_Exit
            End If
            
            ReDim GLValueRange(1 To GLRowCount, 1 To 1)
            
                For NextRow = 1 To GLRowCount
                    If CStr(GLCodeRange(NextRow)) <> "" Then
                        RST.MoveFirst
                        RST.Find ("glCode = " & CStr(GLCodeRange(NextRow)))
                        
                        If Not RST.EOF Then
                            If RST.Fields.Item(1) = 100000511 Then
                                GLValueRange(NextRow, 1) = 0
                            ElseIf RST.Fields.Item(1) = 100000519 Then
                                GLValueRange(NextRow, 1) = 0
                            ElseIf RST.Fields.Item(1) = 100000520 Then
                                GLValueRange(NextRow, 1) = 0
                            Else
                                GLValueRange(NextRow, 1) = RST.Fields.Item(1)
                            End If
                        Else
                            RST.MoveFirst
                            ' Add to avoid summation errors when text error returned
                            GLValueRange(NextRow, 1) = 0
                        End If
                    Else
                        GLValueRange(NextRow, 1) = ""
                    End If
                    
    
                Next
            
            Set RST = Nothing
            
        End If
    End If
    
EntSQLGLCCDpBudgetGLRange_Zero:
    EntSQLGLCCDpBudgetGLRange = GLValueRange
    
    GoTo EntSQLGLCCDpBudgetGLRange_Exit
        
EntSQLGLCCDpBudgetGLRange_Error:
    If ErrStr = "" Then ErrStr = GetErrorNumStr
    EntSQLGLCCDpBudgetGLRange = ErrStr

EntSQLGLCCDpBudgetGLRange_Exit:

End Function

'**************************************************************************************************************
'**                                              BUDGET2                                                     **
'**************************************************************************************************************

'*******************************************************************************************************
' Name:        EntSQLGLBudget2GLRange
' Description: Gets the General Ledger Budget2 value for the specified Currency, Year, Period and GLCode
'*******************************************************************************************************
Public Function EntSQLGLBudget2GLRange(Company$, TheYear%, ThePeriod%, TheCcy%, GLCodes As Range) As Variant
Attribute EntSQLGLBudget2GLRange.VB_Description = "This function returns the General Ledger Budget2 value for the specified Currency, Year, Period and GLCodes."
On Error GoTo EntSQLGLBudget2GLRange_Error
    Dim ErrStr$
    Dim DblVal As Double
    Dim Result%
    Dim stADO As String
    Dim RST As ADODB.Recordset
    Dim stSQL As String
    Dim AddVal As Double
    Dim CurrInv As Boolean
    Dim GLRange As String
    Dim GLRowRange(1000) As Double
    Dim GLCodeRange(1000) As String
    Dim GLValueRange() As Variant
    Dim GLRowCount As Double
    Dim NextRow As Double
    Dim SingleCompany As String
    Dim LPosition As Integer
    
    DoEvents
    
    Result% = 0
    
    DblVal# = 0#
    
    LPosition = 0
    CompStr$ = UCase(Company$)
    LPosition = InStr(CompStr$, ",")
    
    If LPosition <> 0 Then
        Company$ = Left(CompStr$, LPosition - 1)
    End If
    
    If ValidCompany(Company$) And ValidYear(TheYear) And ValidPeriod(ThePeriod) And ValidCcy(TheCcy%) Then
        If LocalCheckServer() Then
            
            'Check User Permissions for all companies
            CompanyList = Split(CompStr$, ",")
            For NoCompanies = 0 To UBound(CompanyList)
                Result = EntServer.CheckUserPermission(CompanyList(NoCompanies), 487)
                
                If Result <> 0 Then
                    Error Result
                    GoTo EntSQLGLBudget2GLRange_Error
                End If
            Next NoCompanies
            
            GLRowCount = 1
            
            For Each GLCodes In GLCodes.Rows
                
                If CStr(GLCodes.Value) <> "" And (GLCodes.Value > 0 And GLCodes.Value <= 2147483647) Then
                    GLRange = GLRange + CStr(GLCodes.Value) & ","
                    GLRowRange(GLRowCount) = GLCodes.Row
                    GLCodeRange(GLRowCount) = CStr(GLCodes.Value)
                End If
                
                GLRowCount = GLRowCount + 1
            Next
            
            'Correct Row Count
            GLRowCount = GLRowCount - 1
            
            'Remove extra comma off end of csv list
            GLRange = Left(GLRange, Len(GLRange) - 1)
            
            stSQL = "EXEC common.esp_GetNominalValue '" + CompStr$ + "',5," + CStr(TheYear%) + "," + CStr(ThePeriod%) + "," + CStr(TheCcy%) + ",'" + CStr(GLRange) + "','','','',0"

            OpenDBConnection (CompStr$)
            
            With CNT(CurrComp)
                .CommandTimeout = 0
                Set RST = .Execute(stSQL)
            End With
            
            If RST.RecordCount = 0 Then
                EntSQLGLBudget2GLRange = 0
                GoTo EntSQLGLBudget2GLRange_Exit
            End If
            
            ReDim GLValueRange(1 To GLRowCount, 1 To 1)
            
                For NextRow = 1 To GLRowCount
                    If CStr(GLCodeRange(NextRow)) <> "" Then
                        RST.MoveFirst
                        RST.Find ("glCode = " & CStr(GLCodeRange(NextRow)))
                        
                        If Not RST.EOF Then
                            If RST.Fields.Item(1) = 100000511 Then
                                GLValueRange(NextRow, 1) = 0
                            ElseIf RST.Fields.Item(1) = 100000519 Then
                                GLValueRange(NextRow, 1) = 0
                            ElseIf RST.Fields.Item(1) = 100000520 Then
                                GLValueRange(NextRow, 1) = 0
                            Else
                                GLValueRange(NextRow, 1) = RST.Fields.Item(1)
                            End If
                        Else
                            RST.MoveFirst
                            ' Add to avoid summation errors when text error returned
                            GLValueRange(NextRow, 1) = 0
                        End If
                    Else
                        GLValueRange(NextRow, 1) = ""
                    End If
                    
    
                Next
            
            Set RST = Nothing
            
        End If
    End If
    
EntSQLGLBudget2GLRange_Zero:
    EntSQLGLBudget2GLRange = GLValueRange
    
    GoTo EntSQLGLBudget2GLRange_Exit
        
EntSQLGLBudget2GLRange_Error:
    If ErrStr = "" Then ErrStr = GetErrorNumStr
    EntSQLGLBudget2GLRange = ErrStr

EntSQLGLBudget2GLRange_Exit:

End Function

'*******************************************************************************************************
' Name:        EntSQLGLCCBudget2GLRange
' Description: Gets the General Ledger Budget2 values for the specified Currency, Year, Period, CC and GLCodes
'*******************************************************************************************************
Public Function EntSQLGLCCBudget2GLRange(Company$, TheYear%, ThePeriod%, TheCcy%, GLCodes As Range, CCCode$) As Variant
Attribute EntSQLGLCCBudget2GLRange.VB_Description = "This function returns the General Ledger Budget2 value for the specified Currency, Year, Period, GLCodes and CostCentre."
On Error GoTo EntSQLGLCCBudget2GLRange_Error
    Dim ErrStr$
    Dim DblVal As Double
    Dim Result%
    Dim stADO As String
    Dim RST As ADODB.Recordset
    Dim stSQL As String
    Dim AddVal As Double
    Dim CurrInv As Boolean
    Dim GLRange As String
    Dim GLRowRange(1000) As Double
    Dim GLCodeRange(1000) As String
    Dim GLValueRange() As Variant
    Dim GLRowCount As Double
    Dim NextRow As Double
    Dim SingleCompany As String
    Dim LPosition As Integer
    
    DoEvents
    
    Result% = 0
    
    DblVal# = 0#
    
    LPosition = 0
    CompStr$ = UCase(Company$)
    LPosition = InStr(CompStr$, ",")
    
    If LPosition <> 0 Then
        Company$ = Left(CompStr$, LPosition - 1)
    End If
    
    If ValidCompany(Company) And ValidYear(TheYear) And ValidPeriod(ThePeriod) And ValidCcy(TheCcy%) Then
        If LocalCheckServer() Then
            
            'Check User Permissions for all companies
            CompanyList = Split(CompStr$, ",")
            For NoCompanies = 0 To UBound(CompanyList)
                Result = EntServer.CheckUserPermission(CompanyList(NoCompanies), 487)
                
                If Result <> 0 Then
                    Error Result
                    GoTo EntSQLGLCCBudget2GLRange_Error
                End If
            Next NoCompanies
            
            GLRowCount = 1
            
            For Each GLCodes In GLCodes.Rows
                
                If CStr(GLCodes.Value) <> "" And (GLCodes.Value > 0 And GLCodes.Value <= 2147483647) Then
                    GLRange = GLRange + CStr(GLCodes.Value) & ","
                    GLRowRange(GLRowCount) = GLCodes.Row
                    GLCodeRange(GLRowCount) = CStr(GLCodes.Value)
                End If
                
                GLRowCount = GLRowCount + 1
            Next
            
            'Correct Row Count
            GLRowCount = GLRowCount - 1
            
            'Remove extra comma off end of csv list
            GLRange = Left(GLRange, Len(GLRange) - 1)
            
            stSQL = "EXEC common.esp_GetNominalValue '" + CompStr$ + "',5," + CStr(TheYear%) + "," + CStr(ThePeriod%) + "," + CStr(TheCcy%) + ",'" + CStr(GLRange) + "','" + CStr(Trim(CCCode$)) + "','','C',0"

            OpenDBConnection (CompStr$)
            
            With CNT(CurrComp)
                .CommandTimeout = 0
                Set RST = .Execute(stSQL)
            End With
            
            If RST.RecordCount = 0 Then
                EntSQLGLCCBudget2GLRange = 0
                GoTo EntSQLGLCCBudget2GLRange_Exit
            End If
            
            ReDim GLValueRange(1 To GLRowCount, 1 To 1)
            
                For NextRow = 1 To GLRowCount
                    If CStr(GLCodeRange(NextRow)) <> "" Then
                        RST.MoveFirst
                        RST.Find ("glCode = " & CStr(GLCodeRange(NextRow)))
                        
                        If Not RST.EOF Then
                            If RST.Fields.Item(1) = 100000511 Then
                                GLValueRange(NextRow, 1) = 0
                            ElseIf RST.Fields.Item(1) = 100000519 Then
                                GLValueRange(NextRow, 1) = 0
                            ElseIf RST.Fields.Item(1) = 100000520 Then
                                GLValueRange(NextRow, 1) = 0
                            Else
                                GLValueRange(NextRow, 1) = RST.Fields.Item(1)
                            End If
                        Else
                            RST.MoveFirst
                            ' Add to avoid summation errors when text error returned
                            GLValueRange(NextRow, 1) = 0
                        End If
                    Else
                        GLValueRange(NextRow, 1) = ""
                    End If
                    
    
                Next
            
            Set RST = Nothing
            
        End If
    End If
    
EntSQLGLCCBudget2GLRange_Zero:
    EntSQLGLCCBudget2GLRange = GLValueRange
    
    GoTo EntSQLGLCCBudget2GLRange_Exit
        
EntSQLGLCCBudget2GLRange_Error:
    If ErrStr = "" Then ErrStr = GetErrorNumStr
    EntSQLGLCCBudget2GLRange = ErrStr

EntSQLGLCCBudget2GLRange_Exit:

End Function


'*******************************************************************************************************
' Name:        EntSQLGLDpBudget2GLRange
' Description: Gets the General Ledger Budget2 values for the specified Currency, Year, Period, Dp and GLCodes
'*******************************************************************************************************
Public Function EntSQLGLDpBudget2GLRange(Company$, TheYear%, ThePeriod%, TheCcy%, GLCodes As Range, DpCode$) As Variant
Attribute EntSQLGLDpBudget2GLRange.VB_Description = "This function returns the General Ledger Budget2 value for the specified Currency, Year, Period, GLCodes and Department."
On Error GoTo EntSQLGLDpBudget2GLRange_Error
    Dim ErrStr$
    Dim DblVal As Double
    Dim Result%
    Dim stADO As String
    Dim RST As ADODB.Recordset
    Dim stSQL As String
    Dim AddVal As Double
    Dim CurrInv As Boolean
    Dim GLRange As String
    Dim GLRowRange(1000) As Double
    Dim GLCodeRange(1000) As String
    Dim GLValueRange() As Variant
    Dim GLRowCount As Double
    Dim NextRow As Double
    Dim SingleCompany As String
    Dim LPosition As Integer
    
    DoEvents
    
    Result% = 0
    
    DblVal# = 0#
    
    LPosition = 0
    CompStr$ = UCase(Company$)
    LPosition = InStr(CompStr$, ",")
    
    If LPosition <> 0 Then
        Company$ = Left(CompStr$, LPosition - 1)
    End If
    
    If ValidCompany(Company) And ValidYear(TheYear) And ValidPeriod(ThePeriod) And ValidCcy(TheCcy%) Then
        If LocalCheckServer() Then
            
            'Check User Permissions for all companies
            CompanyList = Split(CompStr$, ",")
            For NoCompanies = 0 To UBound(CompanyList)
                Result = EntServer.CheckUserPermission(CompanyList(NoCompanies), 487)
                
                If Result <> 0 Then
                    Error Result
                    GoTo EntSQLGLDpBudget2GLRange_Error
                End If
            Next NoCompanies
            
            GLRowCount = 1
            
            For Each GLCodes In GLCodes.Rows
                
                If CStr(GLCodes.Value) <> "" And (GLCodes.Value > 0 And GLCodes.Value <= 2147483647) Then
                    GLRange = GLRange + CStr(GLCodes.Value) & ","
                    GLRowRange(GLRowCount) = GLCodes.Row
                    GLCodeRange(GLRowCount) = CStr(GLCodes.Value)
                End If
                
                GLRowCount = GLRowCount + 1
            Next
            
            'Correct Row Count
            GLRowCount = GLRowCount - 1
            
            'Remove extra comma off end of csv list
            GLRange = Left(GLRange, Len(GLRange) - 1)
            
            stSQL = "EXEC common.esp_GetNominalValue '" + CompStr$ + "',5," + CStr(TheYear%) + "," + CStr(ThePeriod%) + "," + CStr(TheCcy%) + ",'" + CStr(GLRange) + "','','" + CStr(Trim(DpCode$)) + "','D',0"

            OpenDBConnection (CompStr$)
            
            With CNT(CurrComp)
                .CommandTimeout = 0
                Set RST = .Execute(stSQL)
            End With
            
            If RST.RecordCount = 0 Then
                EntSQLGLDpBudget2GLRange = 0
                GoTo EntSQLGLDpBudget2GLRange_Exit
            End If
            
            ReDim GLValueRange(1 To GLRowCount, 1 To 1)
            
                For NextRow = 1 To GLRowCount
                    If CStr(GLCodeRange(NextRow)) <> "" Then
                        RST.MoveFirst
                        RST.Find ("glCode = " & CStr(GLCodeRange(NextRow)))
                        
                        If Not RST.EOF Then
                            If RST.Fields.Item(1) = 100000511 Then
                                GLValueRange(NextRow, 1) = 0
                            ElseIf RST.Fields.Item(1) = 100000519 Then
                                GLValueRange(NextRow, 1) = 0
                            ElseIf RST.Fields.Item(1) = 100000520 Then
                                GLValueRange(NextRow, 1) = 0
                            Else
                                GLValueRange(NextRow, 1) = RST.Fields.Item(1)
                            End If
                        Else
                            RST.MoveFirst
                            ' Add to avoid summation errors when text error returned
                            GLValueRange(NextRow, 1) = 0
                        End If
                    Else
                        GLValueRange(NextRow, 1) = ""
                    End If
                    
    
                Next
            
            Set RST = Nothing
            
        End If
    End If
    
EntSQLGLDpBudget2GLRange_Zero:
    EntSQLGLDpBudget2GLRange = GLValueRange
    
    GoTo EntSQLGLDpBudget2GLRange_Exit
        
EntSQLGLDpBudget2GLRange_Error:
    If ErrStr = "" Then ErrStr = GetErrorNumStr
    EntSQLGLDpBudget2GLRange = ErrStr

EntSQLGLDpBudget2GLRange_Exit:

End Function


'*******************************************************************************************************
' Name:        EntSQLGLCCDpBudget2GLRange
' Description: Gets the General Ledger Budget2 values for the specified Currency, Year, Period, CC, Dp and GLCodes
'*******************************************************************************************************
Public Function EntSQLGLCCDpBudget2GLRange(Company$, TheYear%, ThePeriod%, TheCcy%, GLCodes As Range, CCCode$, DpCode$) As Variant
Attribute EntSQLGLCCDpBudget2GLRange.VB_Description = "This function returns the General Ledger Budget2 value for the specified Currency, Year, Period, GLCodes, CostCentre and Department."
On Error GoTo EntSQLGLCCDpBudget2GLRange_Error
    Dim ErrStr$
    Dim DblVal As Double
    Dim Result%
    Dim stADO As String
    Dim RST As ADODB.Recordset
    Dim stSQL As String
    Dim AddVal As Double
    Dim CurrInv As Boolean
    Dim GLRange As String
    Dim GLRowRange(1000) As Double
    Dim GLCodeRange(1000) As String
    Dim GLValueRange() As Variant
    Dim GLRowCount As Double
    Dim NextRow As Double
    Dim SingleCompany As String
    Dim LPosition As Integer
    
    DoEvents
    
    Result% = 0
    
    DblVal# = 0#
    
    LPosition = 0
    CompStr$ = UCase(Company$)
    LPosition = InStr(CompStr$, ",")
    
    If LPosition <> 0 Then
        Company$ = Left(CompStr$, LPosition - 1)
    End If
    
    If ValidCompany(Company) And ValidYear(TheYear) And ValidPeriod(ThePeriod) And ValidCcy(TheCcy%) Then
        If LocalCheckServer() Then
            
            'Check User Permissions for all companies
            CompanyList = Split(CompStr$, ",")
            For NoCompanies = 0 To UBound(CompanyList)
                Result = EntServer.CheckUserPermission(CompanyList(NoCompanies), 487)
                
                If Result <> 0 Then
                    Error Result
                    GoTo EntSQLGLCCDpBudget2GLRange_Error
                End If
            Next NoCompanies
            
            GLRowCount = 1
            
            For Each GLCodes In GLCodes.Rows
                
                If CStr(GLCodes.Value) <> "" And (GLCodes.Value > 0 And GLCodes.Value <= 2147483647) Then
                    GLRange = GLRange + CStr(GLCodes.Value) & ","
                    GLRowRange(GLRowCount) = GLCodes.Row
                    GLCodeRange(GLRowCount) = CStr(GLCodes.Value)
                End If
                
                GLRowCount = GLRowCount + 1
            Next
            
            'Correct Row Count
            GLRowCount = GLRowCount - 1
            
            'Remove extra comma off end of csv list
            GLRange = Left(GLRange, Len(GLRange) - 1)
            
            stSQL = "EXEC common.esp_GetNominalValue '" + CompStr$ + "',5," + CStr(TheYear%) + "," + CStr(ThePeriod%) + "," + CStr(TheCcy%) + ",'" + CStr(GLRange) + "','" + CStr(Trim(CCCode$)) + "','" + CStr(Trim(DpCode$)) + "','C',0"
            
            OpenDBConnection (CompStr$)
            
            With CNT(CurrComp)
                .CommandTimeout = 0
                Set RST = .Execute(stSQL)
            End With
            
            If RST.RecordCount = 0 Then
                EntSQLGLCCDpBudget2GLRange = 0
                GoTo EntSQLGLCCDpBudget2GLRange_Exit
            End If
            
            ReDim GLValueRange(1 To GLRowCount, 1 To 1)
            
                For NextRow = 1 To GLRowCount
                    If CStr(GLCodeRange(NextRow)) <> "" Then
                        RST.MoveFirst
                        RST.Find ("glCode = " & CStr(GLCodeRange(NextRow)))
                        
                        If Not RST.EOF Then
                            If RST.Fields.Item(1) = 100000511 Then
                                GLValueRange(NextRow, 1) = 0
                            ElseIf RST.Fields.Item(1) = 100000519 Then
                                GLValueRange(NextRow, 1) = 0
                            ElseIf RST.Fields.Item(1) = 100000520 Then
                                GLValueRange(NextRow, 1) = 0
                            Else
                                GLValueRange(NextRow, 1) = RST.Fields.Item(1)
                            End If
                        Else
                            RST.MoveFirst
                            ' Add to avoid summation errors when text error returned
                            GLValueRange(NextRow, 1) = 0
                        End If
                    Else
                        GLValueRange(NextRow, 1) = ""
                    End If
                    
    
                Next
            
            Set RST = Nothing
            
        End If
    End If
    
EntSQLGLCCDpBudget2GLRange_Zero:
    EntSQLGLCCDpBudget2GLRange = GLValueRange
    
    GoTo EntSQLGLCCDpBudget2GLRange_Exit
        
EntSQLGLCCDpBudget2GLRange_Error:
    If ErrStr = "" Then ErrStr = GetErrorNumStr
    EntSQLGLCCDpBudget2GLRange = ErrStr

EntSQLGLCCDpBudget2GLRange_Exit:

End Function


'**************************************************************************************************************
'**                                              CREDIT                                                      **
'**************************************************************************************************************

'*******************************************************************************************************
' Name:        EntSQLGLCreditGLRange
' Description: Gets the General Ledger Credit value for the specified Currency, Year, Period and GLCode
'*******************************************************************************************************
Public Function EntSQLGLCreditGLRange(Company$, TheYear%, ThePeriod%, TheCcy%, GLCodes As Range) As Variant
Attribute EntSQLGLCreditGLRange.VB_Description = "This function returns the General Ledger Credit value for the specified Currency, Year, Period and GLCodes."
On Error GoTo EntSQLGLCreditGLRange_Error
    Dim ErrStr$
    Dim DblVal As Double
    Dim Result%
    Dim stADO As String
    Dim RST As ADODB.Recordset
    Dim stSQL As String
    Dim AddVal As Double
    Dim CurrInv As Boolean
    Dim GLRange As String
    Dim GLRowRange(1000) As Double
    Dim GLCodeRange(1000) As String
    Dim GLValueRange() As Variant
    Dim GLRowCount As Double
    Dim NextRow As Double
    Dim SingleCompany As String
    Dim LPosition As Integer
    
    DoEvents
    
    Result% = 0
    
    DblVal# = 0#
    
    LPosition = 0
    CompStr$ = UCase(Company$)
    LPosition = InStr(CompStr$, ",")
    
    If LPosition <> 0 Then
        Company$ = Left(CompStr$, LPosition - 1)
    End If
    
    If ValidCompany(Company$) And ValidYear(TheYear) And ValidPeriod(ThePeriod) And ValidCcy(TheCcy%) Then
        If LocalCheckServer() Then
            
            'Check User Permissions for all companies
            CompanyList = Split(CompStr$, ",")
            For NoCompanies = 0 To UBound(CompanyList)
                Result = EntServer.CheckUserPermission(CompanyList(NoCompanies), 487)
                
                If Result <> 0 Then
                    Error Result
                    GoTo EntSQLGLCreditGLRange_Error
                End If
            Next NoCompanies
            
            GLRowCount = 1
            
            For Each GLCodes In GLCodes.Rows
                
                If CStr(GLCodes.Value) <> "" And (GLCodes.Value > 0 And GLCodes.Value <= 2147483647) Then
                    GLRange = GLRange + CStr(GLCodes.Value) & ","
                    GLRowRange(GLRowCount) = GLCodes.Row
                    GLCodeRange(GLRowCount) = CStr(GLCodes.Value)
                End If
                
                GLRowCount = GLRowCount + 1
            Next
            
            'Correct Row Count
            GLRowCount = GLRowCount - 1
            
            'Remove extra comma off end of csv list
            GLRange = Left(GLRange, Len(GLRange) - 1)
            
            stSQL = "EXEC common.esp_GetNominalValue '" + CompStr$ + "',1," + CStr(TheYear%) + "," + CStr(ThePeriod%) + "," + CStr(TheCcy%) + ",'" + CStr(GLRange) + "','','','',0"

            OpenDBConnection (CompStr$)
            
            With CNT(CurrComp)
                .CommandTimeout = 0
                Set RST = .Execute(stSQL)
            End With
            
            If RST.RecordCount = 0 Then
                EntSQLGLCreditGLRange = 0
                GoTo EntSQLGLCreditGLRange_Exit
            End If
            
            ReDim GLValueRange(1 To GLRowCount, 1 To 1)
            
                For NextRow = 1 To GLRowCount
                    If CStr(GLCodeRange(NextRow)) <> "" Then
                        RST.MoveFirst
                        RST.Find ("glCode = " & CStr(GLCodeRange(NextRow)))
                        
                        If Not RST.EOF Then
                            If RST.Fields.Item(1) = 100000511 Then
                                GLValueRange(NextRow, 1) = 0
                            ElseIf RST.Fields.Item(1) = 100000519 Then
                                GLValueRange(NextRow, 1) = 0
                            ElseIf RST.Fields.Item(1) = 100000520 Then
                                GLValueRange(NextRow, 1) = 0
                            Else
                                GLValueRange(NextRow, 1) = RST.Fields.Item(1)
                            End If
                        Else
                            RST.MoveFirst
                            ' Add to avoid summation errors when text error returned
                            GLValueRange(NextRow, 1) = 0
                        End If
                    Else
                        GLValueRange(NextRow, 1) = ""
                    End If
                    
    
                Next
            
            Set RST = Nothing
            
        End If
    End If
    
EntSQLGLCreditGLRange_Zero:
    EntSQLGLCreditGLRange = GLValueRange
    
    GoTo EntSQLGLCreditGLRange_Exit
        
EntSQLGLCreditGLRange_Error:
    If ErrStr = "" Then ErrStr = GetErrorNumStr
    EntSQLGLCreditGLRange = ErrStr

EntSQLGLCreditGLRange_Exit:

End Function

'*******************************************************************************************************
' Name:        EntSQLGLCCCreditGLRange
' Description: Gets the General Ledger Credit values for the specified Currency, Year, Period, CC and GLCodes
'*******************************************************************************************************
Public Function EntSQLGLCCCreditGLRange(Company$, TheYear%, ThePeriod%, TheCcy%, GLCodes As Range, CCCode$) As Variant
Attribute EntSQLGLCCCreditGLRange.VB_Description = "This function returns the General Ledger Credit value for the specified Currency, Year, Period, GLCodes and CostCentre.\r\n"
On Error GoTo EntSQLGLCCCreditGLRange_Error
    Dim ErrStr$
    Dim DblVal As Double
    Dim Result%
    Dim stADO As String
    Dim RST As ADODB.Recordset
    Dim stSQL As String
    Dim AddVal As Double
    Dim CurrInv As Boolean
    Dim GLRange As String
    Dim GLRowRange(1000) As Double
    Dim GLCodeRange(1000) As String
    Dim GLValueRange() As Variant
    Dim GLRowCount As Double
    Dim NextRow As Double
    Dim SingleCompany As String
    Dim LPosition As Integer
    
    DoEvents
    
    Result% = 0
    
    DblVal# = 0#
    
    LPosition = 0
    CompStr$ = UCase(Company$)
    LPosition = InStr(CompStr$, ",")
    
    If LPosition <> 0 Then
        Company$ = Left(CompStr$, LPosition - 1)
    End If
    
    If ValidCompany(Company) And ValidYear(TheYear) And ValidPeriod(ThePeriod) And ValidCcy(TheCcy%) Then
        If LocalCheckServer() Then
            
            'Check User Permissions for all companies
            CompanyList = Split(CompStr$, ",")
            For NoCompanies = 0 To UBound(CompanyList)
                Result = EntServer.CheckUserPermission(CompanyList(NoCompanies), 487)
                
                If Result <> 0 Then
                    Error Result
                    GoTo EntSQLGLCCCreditGLRange_Error
                End If
            Next NoCompanies
            
            GLRowCount = 1
            
            For Each GLCodes In GLCodes.Rows
                
                If CStr(GLCodes.Value) <> "" And (GLCodes.Value > 0 And GLCodes.Value <= 2147483647) Then
                    GLRange = GLRange + CStr(GLCodes.Value) & ","
                    GLRowRange(GLRowCount) = GLCodes.Row
                    GLCodeRange(GLRowCount) = CStr(GLCodes.Value)
                End If
                
                GLRowCount = GLRowCount + 1
            Next
            
            'Correct Row Count
            GLRowCount = GLRowCount - 1
            
            'Remove extra comma off end of csv list
            GLRange = Left(GLRange, Len(GLRange) - 1)
            
            stSQL = "EXEC common.esp_GetNominalValue '" + CompStr$ + "',1," + CStr(TheYear%) + "," + CStr(ThePeriod%) + "," + CStr(TheCcy%) + ",'" + CStr(GLRange) + "','" + CStr(Trim(CCCode$)) + "','','C',0"

            OpenDBConnection (CompStr$)
            
            With CNT(CurrComp)
                .CommandTimeout = 0
                Set RST = .Execute(stSQL)
            End With
            
            If RST.RecordCount = 0 Then
                EntSQLGLCCCreditGLRange = 0
                GoTo EntSQLGLCCCreditGLRange_Exit
            End If
            
            ReDim GLValueRange(1 To GLRowCount, 1 To 1)
            
                For NextRow = 1 To GLRowCount
                    If CStr(GLCodeRange(NextRow)) <> "" Then
                        RST.MoveFirst
                        RST.Find ("glCode = " & CStr(GLCodeRange(NextRow)))
                        
                        If Not RST.EOF Then
                            If RST.Fields.Item(1) = 100000511 Then
                                GLValueRange(NextRow, 1) = 0
                            ElseIf RST.Fields.Item(1) = 100000519 Then
                                GLValueRange(NextRow, 1) = 0
                            ElseIf RST.Fields.Item(1) = 100000520 Then
                                GLValueRange(NextRow, 1) = 0
                            Else
                                GLValueRange(NextRow, 1) = RST.Fields.Item(1)
                            End If
                        Else
                            RST.MoveFirst
                            ' Add to avoid summation errors when text error returned
                            GLValueRange(NextRow, 1) = 0
                        End If
                    Else
                        GLValueRange(NextRow, 1) = ""
                    End If
                    
    
                Next
            
            Set RST = Nothing
            
        End If
    End If
    
EntSQLGLCCCreditGLRange_Zero:
    EntSQLGLCCCreditGLRange = GLValueRange
    
    GoTo EntSQLGLCCCreditGLRange_Exit
        
EntSQLGLCCCreditGLRange_Error:
    If ErrStr = "" Then ErrStr = GetErrorNumStr
    EntSQLGLCCCreditGLRange = ErrStr

EntSQLGLCCCreditGLRange_Exit:

End Function


'*******************************************************************************************************
' Name:        EntSQLGLDpCreditGLRange
' Description: Gets the General Ledger Credit values for the specified Currency, Year, Period, Dp and GLCodes
'*******************************************************************************************************
Public Function EntSQLGLDpCreditGLRange(Company$, TheYear%, ThePeriod%, TheCcy%, GLCodes As Range, DpCode$) As Variant
Attribute EntSQLGLDpCreditGLRange.VB_Description = "This function returns the General Ledger Credit value for the specified Currency, Year, Period, GLCodes and Department."
On Error GoTo EntSQLGLDpCreditGLRange_Error
    Dim ErrStr$
    Dim DblVal As Double
    Dim Result%
    Dim stADO As String
    Dim RST As ADODB.Recordset
    Dim stSQL As String
    Dim AddVal As Double
    Dim CurrInv As Boolean
    Dim GLRange As String
    Dim GLRowRange(1000) As Double
    Dim GLCodeRange(1000) As String
    Dim GLValueRange() As Variant
    Dim GLRowCount As Double
    Dim NextRow As Double
    Dim SingleCompany As String
    Dim LPosition As Integer
    
    DoEvents
    
    Result% = 0
    
    DblVal# = 0#
    
    LPosition = 0
    CompStr$ = UCase(Company$)
    LPosition = InStr(CompStr$, ",")
    
    If LPosition <> 0 Then
        Company$ = Left(CompStr$, LPosition - 1)
    End If
    
    If ValidCompany(Company) And ValidYear(TheYear) And ValidPeriod(ThePeriod) And ValidCcy(TheCcy%) Then
        If LocalCheckServer() Then
            
            'Check User Permissions for all companies
            CompanyList = Split(CompStr$, ",")
            For NoCompanies = 0 To UBound(CompanyList)
                Result = EntServer.CheckUserPermission(CompanyList(NoCompanies), 487)
                
                If Result <> 0 Then
                    Error Result
                    GoTo EntSQLGLDpCreditGLRange_Error
                End If
            Next NoCompanies
            
            GLRowCount = 1
            
            For Each GLCodes In GLCodes.Rows
                
                If CStr(GLCodes.Value) <> "" And (GLCodes.Value > 0 And GLCodes.Value <= 2147483647) Then
                    GLRange = GLRange + CStr(GLCodes.Value) & ","
                    GLRowRange(GLRowCount) = GLCodes.Row
                    GLCodeRange(GLRowCount) = CStr(GLCodes.Value)
                End If
                
                GLRowCount = GLRowCount + 1
            Next
            
            'Correct Row Count
            GLRowCount = GLRowCount - 1
            
            'Remove extra comma off end of csv list
            GLRange = Left(GLRange, Len(GLRange) - 1)
            
            stSQL = "EXEC common.esp_GetNominalValue '" + CompStr$ + "',1," + CStr(TheYear%) + "," + CStr(ThePeriod%) + "," + CStr(TheCcy%) + ",'" + CStr(GLRange) + "','','" + CStr(Trim(DpCode$)) + "','D',0"

            OpenDBConnection (CompStr$)
            
            With CNT(CurrComp)
                .CommandTimeout = 0
                Set RST = .Execute(stSQL)
            End With
            
            If RST.RecordCount = 0 Then
                EntSQLGLDpCreditGLRange = 0
                GoTo EntSQLGLDpCreditGLRange_Exit
            End If
            
            ReDim GLValueRange(1 To GLRowCount, 1 To 1)
            
                For NextRow = 1 To GLRowCount
                    If CStr(GLCodeRange(NextRow)) <> "" Then
                        RST.MoveFirst
                        RST.Find ("glCode = " & CStr(GLCodeRange(NextRow)))
                        
                        If Not RST.EOF Then
                            If RST.Fields.Item(1) = 100000511 Then
                                GLValueRange(NextRow, 1) = 0
                            ElseIf RST.Fields.Item(1) = 100000519 Then
                                GLValueRange(NextRow, 1) = 0
                            ElseIf RST.Fields.Item(1) = 100000520 Then
                                GLValueRange(NextRow, 1) = 0
                            Else
                                GLValueRange(NextRow, 1) = RST.Fields.Item(1)
                            End If
                        Else
                            RST.MoveFirst
                            ' Add to avoid summation errors when text error returned
                            GLValueRange(NextRow, 1) = 0
                        End If
                    Else
                        GLValueRange(NextRow, 1) = ""
                    End If
                    
    
                Next
            
            Set RST = Nothing
            
        End If
    End If
    
EntSQLGLDpCreditGLRange_Zero:
    EntSQLGLDpCreditGLRange = GLValueRange
    
    GoTo EntSQLGLDpCreditGLRange_Exit
        
EntSQLGLDpCreditGLRange_Error:
    If ErrStr = "" Then ErrStr = GetErrorNumStr
    EntSQLGLDpCreditGLRange = ErrStr

EntSQLGLDpCreditGLRange_Exit:

End Function


'*******************************************************************************************************
' Name:        EntSQLGLCCDpCreditGLRange
' Description: Gets the General Ledger Credit values for the specified Currency, Year, Period, CC, Dp and GLCodes
'*******************************************************************************************************
Public Function EntSQLGLCCDpCreditGLRange(Company$, TheYear%, ThePeriod%, TheCcy%, GLCodes As Range, CCCode$, DpCode$) As Variant
Attribute EntSQLGLCCDpCreditGLRange.VB_Description = "This function returns the General Ledger Credit value for the specified Currency, Year, Period, GLCodes CostCentre and Department."
On Error GoTo EntSQLGLCCDpCreditGLRange_Error
    Dim ErrStr$
    Dim DblVal As Double
    Dim Result%
    Dim stADO As String
    Dim RST As ADODB.Recordset
    Dim stSQL As String
    Dim AddVal As Double
    Dim CurrInv As Boolean
    Dim GLRange As String
    Dim GLRowRange(1000) As Double
    Dim GLCodeRange(1000) As String
    Dim GLValueRange() As Variant
    Dim GLRowCount As Double
    Dim NextRow As Double
    Dim SingleCompany As String
    Dim LPosition As Integer
    
    DoEvents
    
    Result% = 0
    
    DblVal# = 0#
    
    LPosition = 0
    CompStr$ = UCase(Company$)
    LPosition = InStr(CompStr$, ",")
    
    If LPosition <> 0 Then
        Company$ = Left(CompStr$, LPosition - 1)
    End If
    
    If ValidCompany(Company) And ValidYear(TheYear) And ValidPeriod(ThePeriod) And ValidCcy(TheCcy%) Then
        If LocalCheckServer() Then
            
            'Check User Permissions for all companies
            CompanyList = Split(CompStr$, ",")
            For NoCompanies = 0 To UBound(CompanyList)
                Result = EntServer.CheckUserPermission(CompanyList(NoCompanies), 487)
                
                If Result <> 0 Then
                    Error Result
                    GoTo EntSQLGLCCDpCreditGLRange_Error
                End If
            Next NoCompanies
            
            GLRowCount = 1
            
            For Each GLCodes In GLCodes.Rows
                
                If CStr(GLCodes.Value) <> "" And (GLCodes.Value > 0 And GLCodes.Value <= 2147483647) Then
                    GLRange = GLRange + CStr(GLCodes.Value) & ","
                    GLRowRange(GLRowCount) = GLCodes.Row
                    GLCodeRange(GLRowCount) = CStr(GLCodes.Value)
                End If
                
                GLRowCount = GLRowCount + 1
            Next
            
            'Correct Row Count
            GLRowCount = GLRowCount - 1
            
            'Remove extra comma off end of csv list
            GLRange = Left(GLRange, Len(GLRange) - 1)
            
            stSQL = "EXEC common.esp_GetNominalValue '" + CompStr$ + "',1," + CStr(TheYear%) + "," + CStr(ThePeriod%) + "," + CStr(TheCcy%) + ",'" + CStr(GLRange) + "','" + CStr(Trim(CCCode$)) + "','" + CStr(Trim(DpCode$)) + "','C',0"

            OpenDBConnection (CompStr$)
            
            With CNT(CurrComp)
                .CommandTimeout = 0
                Set RST = .Execute(stSQL)
            End With
            
            If RST.RecordCount = 0 Then
                EntSQLGLCCDpCreditGLRange = 0
                GoTo EntSQLGLCCDpCreditGLRange_Exit
            End If
            
            ReDim GLValueRange(1 To GLRowCount, 1 To 1)
            
                For NextRow = 1 To GLRowCount
                    If CStr(GLCodeRange(NextRow)) <> "" Then
                        RST.MoveFirst
                        RST.Find ("glCode = " & CStr(GLCodeRange(NextRow)))
                        
                        If Not RST.EOF Then
                            If RST.Fields.Item(1) = 100000511 Then
                                GLValueRange(NextRow, 1) = 0
                            ElseIf RST.Fields.Item(1) = 100000519 Then
                                GLValueRange(NextRow, 1) = 0
                            ElseIf RST.Fields.Item(1) = 100000520 Then
                                GLValueRange(NextRow, 1) = 0
                            Else
                                GLValueRange(NextRow, 1) = RST.Fields.Item(1)
                            End If
                        Else
                            RST.MoveFirst
                            ' Add to avoid summation errors when text error returned
                            GLValueRange(NextRow, 1) = 0
                        End If
                    Else
                        GLValueRange(NextRow, 1) = ""
                    End If
                    
    
                Next
            
            Set RST = Nothing
            
        End If
    End If
    
EntSQLGLCCDpCreditGLRange_Zero:
    EntSQLGLCCDpCreditGLRange = GLValueRange
    
    GoTo EntSQLGLCCDpCreditGLRange_Exit
        
EntSQLGLCCDpCreditGLRange_Error:
    If ErrStr = "" Then ErrStr = GetErrorNumStr
    EntSQLGLCCDpCreditGLRange = ErrStr

EntSQLGLCCDpCreditGLRange_Exit:

End Function

'**************************************************************************************************************
'**                                              DEBIT                                                     **
'**************************************************************************************************************

'*******************************************************************************************************
' Name:        EntSQLGLDebitGLRange
' Description: Gets the General Ledger Debit value for the specified Currency, Year, Period and GLCode
'*******************************************************************************************************
Public Function EntSQLGLDebitGLRange(Company$, TheYear%, ThePeriod%, TheCcy%, GLCodes As Range) As Variant
Attribute EntSQLGLDebitGLRange.VB_Description = "This function returns the General Ledger Debit value for the specified Currency, Year, Period and GLCodes."
On Error GoTo EntSQLGLDebitGLRange_Error
    Dim ErrStr$
    Dim DblVal As Double
    Dim Result%
    Dim stADO As String
    Dim RST As ADODB.Recordset
    Dim stSQL As String
    Dim AddVal As Double
    Dim CurrInv As Boolean
    Dim GLRange As String
    Dim GLRowRange(1000) As Double
    Dim GLCodeRange(1000) As String
    Dim GLValueRange() As Variant
    Dim GLRowCount As Double
    Dim NextRow As Double
    Dim SingleCompany As String
    Dim LPosition As Integer
    
    DoEvents
    
    Result% = 0
    
    DblVal# = 0#
    
    LPosition = 0
    CompStr$ = UCase(Company$)
    LPosition = InStr(CompStr$, ",")
    
    If LPosition <> 0 Then
        Company$ = Left(CompStr$, LPosition - 1)
    End If
    
    If ValidCompany(Company$) And ValidYear(TheYear) And ValidPeriod(ThePeriod) And ValidCcy(TheCcy%) Then
        If LocalCheckServer() Then
            
            'Check User Permissions for all companies
            CompanyList = Split(CompStr$, ",")
            For NoCompanies = 0 To UBound(CompanyList)
                Result = EntServer.CheckUserPermission(CompanyList(NoCompanies), 487)
                
                If Result <> 0 Then
                    Error Result
                    GoTo EntSQLGLDebitGLRange_Error
                End If
            Next NoCompanies
            
            GLRowCount = 1
            
            For Each GLCodes In GLCodes.Rows
                
                If CStr(GLCodes.Value) <> "" And (GLCodes.Value > 0 And GLCodes.Value <= 2147483647) Then
                    GLRange = GLRange + CStr(GLCodes.Value) & ","
                    GLRowRange(GLRowCount) = GLCodes.Row
                    GLCodeRange(GLRowCount) = CStr(GLCodes.Value)
                End If
                
                GLRowCount = GLRowCount + 1
            Next
            
            'Correct Row Count
            GLRowCount = GLRowCount - 1
            
            'Remove extra comma off end of csv list
            GLRange = Left(GLRange, Len(GLRange) - 1)
            
            stSQL = "EXEC common.esp_GetNominalValue '" + CompStr$ + "',2," + CStr(TheYear%) + "," + CStr(ThePeriod%) + "," + CStr(TheCcy%) + ",'" + CStr(GLRange) + "','','','',0"

            OpenDBConnection (CompStr$)
            
            With CNT(CurrComp)
                .CommandTimeout = 0
                Set RST = .Execute(stSQL)
            End With
            
            If RST.RecordCount = 0 Then
                EntSQLGLDebitGLRange = 0
                GoTo EntSQLGLDebitGLRange_Exit
            End If
            
            ReDim GLValueRange(1 To GLRowCount, 1 To 1)
            
                For NextRow = 1 To GLRowCount
                    If CStr(GLCodeRange(NextRow)) <> "" Then
                        RST.MoveFirst
                        RST.Find ("glCode = " & CStr(GLCodeRange(NextRow)))
                        
                        If Not RST.EOF Then
                            If RST.Fields.Item(1) = 100000511 Then
                                GLValueRange(NextRow, 1) = 0
                            ElseIf RST.Fields.Item(1) = 100000519 Then
                                GLValueRange(NextRow, 1) = 0
                            ElseIf RST.Fields.Item(1) = 100000520 Then
                                GLValueRange(NextRow, 1) = 0
                            Else
                                GLValueRange(NextRow, 1) = RST.Fields.Item(1)
                            End If
                        Else
                            RST.MoveFirst
                            ' Add to avoid summation errors when text error returned
                            GLValueRange(NextRow, 1) = 0
                        End If
                    Else
                        GLValueRange(NextRow, 1) = ""
                    End If
                    
    
                Next
            
            Set RST = Nothing
            
        End If
    End If
    
EntSQLGLDebitGLRange_Zero:
    EntSQLGLDebitGLRange = GLValueRange
    
    GoTo EntSQLGLDebitGLRange_Exit
        
EntSQLGLDebitGLRange_Error:
    If ErrStr = "" Then ErrStr = GetErrorNumStr
    EntSQLGLDebitGLRange = ErrStr

EntSQLGLDebitGLRange_Exit:

End Function

'*******************************************************************************************************
' Name:        EntSQLGLCCDebitGLRange
' Description: Gets the General Ledger Debit values for the specified Currency, Year, Period, CC and GLCodes
'*******************************************************************************************************
Public Function EntSQLGLCCDebitGLRange(Company$, TheYear%, ThePeriod%, TheCcy%, GLCodes As Range, CCCode$) As Variant
Attribute EntSQLGLCCDebitGLRange.VB_Description = "This function returns the General Ledger Debit value for the specified Currency, Year, Period, GLCodes and CostCentre.\r\n"
On Error GoTo EntSQLGLCCDebitGLRange_Error
    Dim ErrStr$
    Dim DblVal As Double
    Dim Result%
    Dim stADO As String
    Dim RST As ADODB.Recordset
    Dim stSQL As String
    Dim AddVal As Double
    Dim CurrInv As Boolean
    Dim GLRange As String
    Dim GLRowRange(1000) As Double
    Dim GLCodeRange(1000) As String
    Dim GLValueRange() As Variant
    Dim GLRowCount As Double
    Dim NextRow As Double
    Dim SingleCompany As String
    Dim LPosition As Integer
    
    DoEvents
    
    Result% = 0
    
    DblVal# = 0#
    
    LPosition = 0
    CompStr$ = UCase(Company$)
    LPosition = InStr(CompStr$, ",")
    
    If LPosition <> 0 Then
        Company$ = Left(CompStr$, LPosition - 1)
    End If
    
    If ValidCompany(Company) And ValidYear(TheYear) And ValidPeriod(ThePeriod) And ValidCcy(TheCcy%) Then
        If LocalCheckServer() Then
            
            'Check User Permissions for all companies
            CompanyList = Split(CompStr$, ",")
            For NoCompanies = 0 To UBound(CompanyList)
                Result = EntServer.CheckUserPermission(CompanyList(NoCompanies), 487)
                
                If Result <> 0 Then
                    Error Result
                    GoTo EntSQLGLCCDebitGLRange_Error
                End If
            Next NoCompanies
            
            GLRowCount = 1
            
            For Each GLCodes In GLCodes.Rows
                
                If CStr(GLCodes.Value) <> "" And (GLCodes.Value > 0 And GLCodes.Value <= 2147483647) Then
                    GLRange = GLRange + CStr(GLCodes.Value) & ","
                    GLRowRange(GLRowCount) = GLCodes.Row
                    GLCodeRange(GLRowCount) = CStr(GLCodes.Value)
                End If
                
                GLRowCount = GLRowCount + 1
            Next
            
            'Correct Row Count
            GLRowCount = GLRowCount - 1
            
            'Remove extra comma off end of csv list
            GLRange = Left(GLRange, Len(GLRange) - 1)
            
            stSQL = "EXEC common.esp_GetNominalValue '" + CompStr$ + "',2," + CStr(TheYear%) + "," + CStr(ThePeriod%) + "," + CStr(TheCcy%) + ",'" + CStr(GLRange) + "','" + CStr(Trim(CCCode$)) + "','','C',0"

            OpenDBConnection (CompStr$)
            
            With CNT(CurrComp)
                .CommandTimeout = 0
                Set RST = .Execute(stSQL)
            End With
            
            If RST.RecordCount = 0 Then
                EntSQLGLCCDebitGLRange = 0
                GoTo EntSQLGLCCDebitGLRange_Exit
            End If
            
            ReDim GLValueRange(1 To GLRowCount, 1 To 1)
            
                For NextRow = 1 To GLRowCount
                    If CStr(GLCodeRange(NextRow)) <> "" Then
                        RST.MoveFirst
                        RST.Find ("glCode = " & CStr(GLCodeRange(NextRow)))
                        
                        If Not RST.EOF Then
                            If RST.Fields.Item(1) = 100000511 Then
                                GLValueRange(NextRow, 1) = 0
                            ElseIf RST.Fields.Item(1) = 100000519 Then
                                GLValueRange(NextRow, 1) = 0
                            ElseIf RST.Fields.Item(1) = 100000520 Then
                                GLValueRange(NextRow, 1) = 0
                            Else
                                GLValueRange(NextRow, 1) = RST.Fields.Item(1)
                            End If
                        Else
                            RST.MoveFirst
                            ' Add to avoid summation errors when text error returned
                            GLValueRange(NextRow, 1) = 0
                        End If
                    Else
                        GLValueRange(NextRow, 1) = ""
                    End If
                    
    
                Next
            
            Set RST = Nothing
            
        End If
    End If
    
EntSQLGLCCDebitGLRange_Zero:
    EntSQLGLCCDebitGLRange = GLValueRange
    
    GoTo EntSQLGLCCDebitGLRange_Exit
        
EntSQLGLCCDebitGLRange_Error:
    If ErrStr = "" Then ErrStr = GetErrorNumStr
    EntSQLGLCCDebitGLRange = ErrStr

EntSQLGLCCDebitGLRange_Exit:

End Function


'*******************************************************************************************************
' Name:        EntSQLGLDpDebitGLRange
' Description: Gets the General Ledger Debit values for the specified Currency, Year, Period, Dp and GLCodes
'*******************************************************************************************************
Public Function EntSQLGLDpDebitGLRange(Company$, TheYear%, ThePeriod%, TheCcy%, GLCodes As Range, DpCode$) As Variant
Attribute EntSQLGLDpDebitGLRange.VB_Description = "This function returns the General Ledger Debit value for the specified Currency, Year, Period, GLCodes and Department."
On Error GoTo EntSQLGLDpDebitGLRange_Error
    Dim ErrStr$
    Dim DblVal As Double
    Dim Result%
    Dim stADO As String
    Dim RST As ADODB.Recordset
    Dim stSQL As String
    Dim AddVal As Double
    Dim CurrInv As Boolean
    Dim GLRange As String
    Dim GLRowRange(1000) As Double
    Dim GLCodeRange(1000) As String
    Dim GLValueRange() As Variant
    Dim GLRowCount As Double
    Dim NextRow As Double
    Dim SingleCompany As String
    Dim LPosition As Integer
    
    DoEvents
    
    Result% = 0
    
    DblVal# = 0#
    
    LPosition = 0
    CompStr$ = UCase(Company$)
    LPosition = InStr(CompStr$, ",")
    
    If LPosition <> 0 Then
        Company$ = Left(CompStr$, LPosition - 1)
    End If
    
    If ValidCompany(Company) And ValidYear(TheYear) And ValidPeriod(ThePeriod) And ValidCcy(TheCcy%) Then
        If LocalCheckServer() Then
            
            'Check User Permissions for all companies
            CompanyList = Split(CompStr$, ",")
            For NoCompanies = 0 To UBound(CompanyList)
                Result = EntServer.CheckUserPermission(CompanyList(NoCompanies), 487)
                
                If Result <> 0 Then
                    Error Result
                    GoTo EntSQLGLDpDebitGLRange_Error
                End If
            Next NoCompanies
            
            GLRowCount = 1
            
            For Each GLCodes In GLCodes.Rows
                
                If CStr(GLCodes.Value) <> "" And (GLCodes.Value > 0 And GLCodes.Value <= 2147483647) Then
                    GLRange = GLRange + CStr(GLCodes.Value) & ","
                    GLRowRange(GLRowCount) = GLCodes.Row
                    GLCodeRange(GLRowCount) = CStr(GLCodes.Value)
                End If
                
                GLRowCount = GLRowCount + 1
            Next
            
            'Correct Row Count
            GLRowCount = GLRowCount - 1
            
            'Remove extra comma off end of csv list
            GLRange = Left(GLRange, Len(GLRange) - 1)
            
            stSQL = "EXEC common.esp_GetNominalValue '" + CompStr$ + "',2," + CStr(TheYear%) + "," + CStr(ThePeriod%) + "," + CStr(TheCcy%) + ",'" + CStr(GLRange) + "','','" + CStr(Trim(DpCode$)) + "','D',0"

            OpenDBConnection (CompStr$)
            
            With CNT(CurrComp)
                .CommandTimeout = 0
                Set RST = .Execute(stSQL)
            End With
            
            If RST.RecordCount = 0 Then
                EntSQLGLDpDebitGLRange = 0
                GoTo EntSQLGLDpDebitGLRange_Exit
            End If
            
            ReDim GLValueRange(1 To GLRowCount, 1 To 1)
            
                For NextRow = 1 To GLRowCount
                    If CStr(GLCodeRange(NextRow)) <> "" Then
                        RST.MoveFirst
                        RST.Find ("glCode = " & CStr(GLCodeRange(NextRow)))
                        
                        If Not RST.EOF Then
                            If RST.Fields.Item(1) = 100000511 Then
                                GLValueRange(NextRow, 1) = 0
                            ElseIf RST.Fields.Item(1) = 100000519 Then
                                GLValueRange(NextRow, 1) = 0
                            ElseIf RST.Fields.Item(1) = 100000520 Then
                                GLValueRange(NextRow, 1) = 0
                            Else
                                GLValueRange(NextRow, 1) = RST.Fields.Item(1)
                            End If
                        Else
                            RST.MoveFirst
                            ' Add to avoid summation errors when text error returned
                            GLValueRange(NextRow, 1) = 0
                        End If
                    Else
                        GLValueRange(NextRow, 1) = ""
                    End If
                    
    
                Next
            
            Set RST = Nothing
            
        End If
    End If
    
EntSQLGLDpDebitGLRange_Zero:
    EntSQLGLDpDebitGLRange = GLValueRange
    
    GoTo EntSQLGLDpDebitGLRange_Exit
        
EntSQLGLDpDebitGLRange_Error:
    If ErrStr = "" Then ErrStr = GetErrorNumStr
    EntSQLGLDpDebitGLRange = ErrStr

EntSQLGLDpDebitGLRange_Exit:

End Function


'*******************************************************************************************************
' Name:        EntSQLGLCCDpDebitGLRange
' Description: Gets the General Ledger Debit values for the specified Currency, Year, Period, CC, Dp and GLCodes
'*******************************************************************************************************
Public Function EntSQLGLCCDpDebitGLRange(Company$, TheYear%, ThePeriod%, TheCcy%, GLCodes As Range, CCCode$, DpCode$) As Variant
Attribute EntSQLGLCCDpDebitGLRange.VB_Description = "This function returns the General Ledger Debit value for the specified Currency, Year, Period, GLCodes CostCentre and Department."
On Error GoTo EntSQLGLCCDpDebitGLRange_Error
    Dim ErrStr$
    Dim DblVal As Double
    Dim Result%
    Dim stADO As String
    Dim RST As ADODB.Recordset
    Dim stSQL As String
    Dim AddVal As Double
    Dim CurrInv As Boolean
    Dim GLRange As String
    Dim GLRowRange(1000) As Double
    Dim GLCodeRange(1000) As String
    Dim GLValueRange() As Variant
    Dim GLRowCount As Double
    Dim NextRow As Double
    Dim SingleCompany As String
    Dim LPosition As Integer
    
    DoEvents
    
    Result% = 0
    
    DblVal# = 0#
    
    LPosition = 0
    CompStr$ = UCase(Company$)
    LPosition = InStr(CompStr$, ",")
    
    If LPosition <> 0 Then
        Company$ = Left(CompStr$, LPosition - 1)
    End If
    
    If ValidCompany(Company) And ValidYear(TheYear) And ValidPeriod(ThePeriod) And ValidCcy(TheCcy%) Then
        If LocalCheckServer() Then
            
            'Check User Permissions for all companies
            CompanyList = Split(CompStr$, ",")
            For NoCompanies = 0 To UBound(CompanyList)
                Result = EntServer.CheckUserPermission(CompanyList(NoCompanies), 487)
                
                If Result <> 0 Then
                    Error Result
                    GoTo EntSQLGLCCDpDebitGLRange_Error
                End If
            Next NoCompanies
            
            GLRowCount = 1
            
            For Each GLCodes In GLCodes.Rows
                
                If CStr(GLCodes.Value) <> "" And (GLCodes.Value > 0 And GLCodes.Value <= 2147483647) Then
                    GLRange = GLRange + CStr(GLCodes.Value) & ","
                    GLRowRange(GLRowCount) = GLCodes.Row
                    GLCodeRange(GLRowCount) = CStr(GLCodes.Value)
                End If
                
                GLRowCount = GLRowCount + 1
            Next
            
            'Correct Row Count
            GLRowCount = GLRowCount - 1
            
            'Remove extra comma off end of csv list
            GLRange = Left(GLRange, Len(GLRange) - 1)
            
            stSQL = "EXEC common.esp_GetNominalValue '" + CompStr$ + "',2," + CStr(TheYear%) + "," + CStr(ThePeriod%) + "," + CStr(TheCcy%) + ",'" + CStr(GLRange) + "','" + CStr(Trim(CCCode$)) + "','" + CStr(Trim(DpCode$)) + "','C',0"

            OpenDBConnection (CompStr$)
            
            With CNT(CurrComp)
                .CommandTimeout = 0
                Set RST = .Execute(stSQL)
            End With
            
            If RST.RecordCount = 0 Then
                EntSQLGLCCDpDebitGLRange = 0
                GoTo EntSQLGLCCDpDebitGLRange_Exit
            End If
            
            ReDim GLValueRange(1 To GLRowCount, 1 To 1)
            
                For NextRow = 1 To GLRowCount
                    If CStr(GLCodeRange(NextRow)) <> "" Then
                        RST.MoveFirst
                        RST.Find ("glCode = " & CStr(GLCodeRange(NextRow)))
                        
                        If Not RST.EOF Then
                            If RST.Fields.Item(1) = 100000511 Then
                                GLValueRange(NextRow, 1) = 0
                            ElseIf RST.Fields.Item(1) = 100000519 Then
                                GLValueRange(NextRow, 1) = 0
                            ElseIf RST.Fields.Item(1) = 100000520 Then
                                GLValueRange(NextRow, 1) = 0
                            Else
                                GLValueRange(NextRow, 1) = RST.Fields.Item(1)
                            End If
                        Else
                            RST.MoveFirst
                            ' Add to avoid summation errors when text error returned
                            GLValueRange(NextRow, 1) = 0
                        End If
                    Else
                        GLValueRange(NextRow, 1) = ""
                    End If
                    
                Next
            
            Set RST = Nothing
            
        End If
    End If
    
EntSQLGLCCDpDebitGLRange_Zero:
    EntSQLGLCCDpDebitGLRange = GLValueRange
    
    GoTo EntSQLGLCCDpDebitGLRange_Exit
        
EntSQLGLCCDpDebitGLRange_Error:
    If ErrStr = "" Then ErrStr = GetErrorNumStr
    EntSQLGLCCDpDebitGLRange = ErrStr

EntSQLGLCCDpDebitGLRange_Exit:

End Function

'**************************************************************************************************************
'**                                              Revised Budget 1                                            **
'**************************************************************************************************************

'*******************************************************************************************************
' Name:        EntSQLGLRevisedBudget1GLRange
' Description: Gets the General Ledger Revised Budget 1 value for the specified Currency, Year, Period and GLCode
'*******************************************************************************************************
Public Function EntSQLGLRevisedBudget1GLRange(Company$, TheYear%, ThePeriod%, TheCcy%, GLCodes As Range) As Variant
On Error GoTo EntSQLGLRevisedBudget1GLRange_Error
    Dim ErrStr$
    Dim DblVal As Double
    Dim Result%
    Dim stADO As String
    Dim RST As ADODB.Recordset
    Dim stSQL As String
    Dim AddVal As Double
    Dim CurrInv As Boolean
    Dim GLRange As String
    Dim GLRowRange(1000) As Double
    Dim GLCodeRange(1000) As String
    Dim GLValueRange() As Variant
    Dim GLRowCount As Double
    Dim NextRow As Double
    Dim SingleCompany As String
    Dim LPosition As Integer
    
    DoEvents
    
    Result% = 0
    
    DblVal# = 0#
    
    LPosition = 0
    CompStr$ = UCase(Company$)
    LPosition = InStr(CompStr$, ",")
    
    If LPosition <> 0 Then
        Company$ = Left(CompStr$, LPosition - 1)
    End If
    
    If ValidCompany(Company$) And ValidYear(TheYear) And ValidPeriod(ThePeriod) And ValidCcy(TheCcy%) Then
        If LocalCheckServer() Then
            
            'Check User Permissions for all companies
            CompanyList = Split(CompStr$, ",")
            For NoCompanies = 0 To UBound(CompanyList)
                Result = EntServer.CheckUserPermission(CompanyList(NoCompanies), 487)
                
                If Result <> 0 Then
                    Error Result
                    GoTo EntSQLGLRevisedBudget1GLRange_Error
                End If
            Next NoCompanies
            
            GLRowCount = 1
            
            For Each GLCodes In GLCodes.Rows
                
                If CStr(GLCodes.Value) <> "" And (GLCodes.Value > 0 And GLCodes.Value <= 2147483647) Then
                    GLRange = GLRange + CStr(GLCodes.Value) & ","
                    GLRowRange(GLRowCount) = GLCodes.Row
                    GLCodeRange(GLRowCount) = CStr(GLCodes.Value)
                End If
                
                GLRowCount = GLRowCount + 1
            Next
            
            'Correct Row Count
            GLRowCount = GLRowCount - 1
            
            'Remove extra comma off end of csv list
            GLRange = Left(GLRange, Len(GLRange) - 1)
            
            stSQL = "EXEC common.esp_GetNominalValue '" + CompStr$ + "',5," + CStr(TheYear%) + "," + CStr(ThePeriod%) + "," + CStr(TheCcy%) + ",'" + CStr(GLRange) + "','','','',0"

            OpenDBConnection (CompStr$)
            
            With CNT(CurrComp)
                .CommandTimeout = 0
                Set RST = .Execute(stSQL)
            End With
            
            If RST.RecordCount = 0 Then
                EntSQLGLRevisedBudget1GLRange = 0
                GoTo EntSQLGLRevisedBudget1GLRange_Exit
            End If
            
            ReDim GLValueRange(1 To GLRowCount, 1 To 1)
            
                For NextRow = 1 To GLRowCount
                    If CStr(GLCodeRange(NextRow)) <> "" Then
                        RST.MoveFirst
                        RST.Find ("glCode = " & CStr(GLCodeRange(NextRow)))
                        
                        If Not RST.EOF Then
                            If RST.Fields.Item(1) = 100000511 Then
                                GLValueRange(NextRow, 1) = 0
                            ElseIf RST.Fields.Item(1) = 100000519 Then
                                GLValueRange(NextRow, 1) = 0
                            ElseIf RST.Fields.Item(1) = 100000520 Then
                                GLValueRange(NextRow, 1) = 0
                            Else
                                GLValueRange(NextRow, 1) = RST.Fields.Item(1)
                            End If
                        Else
                            RST.MoveFirst
                            ' Add to avoid summation errors when text error returned
                            GLValueRange(NextRow, 1) = 0
                        End If
                    Else
                        GLValueRange(NextRow, 1) = ""
                    End If
                    
    
                Next
            
            Set RST = Nothing
            
        End If
    End If
    
EntSQLGLRevisedBudget1GLRange_Zero:
    EntSQLGLRevisedBudget1GLRange = GLValueRange
    
    GoTo EntSQLGLRevisedBudget1GLRange_Exit
        
EntSQLGLRevisedBudget1GLRange_Error:
    If ErrStr = "" Then ErrStr = GetErrorNumStr
    EntSQLGLRevisedBudget1GLRange = ErrStr

EntSQLGLRevisedBudget1GLRange_Exit:

End Function

'*******************************************************************************************************
' Name:        EntSQLGLCCRevisedBudget1GLRange
' Description: Gets the General Ledger Revised Budget 1 values for the specified Currency, Year, Period, CC and GLCodes
'*******************************************************************************************************
Public Function EntSQLGLCCRevisedBudget1GLRange(Company$, TheYear%, ThePeriod%, TheCcy%, GLCodes As Range, CCCode$) As Variant
On Error GoTo EntSQLGLCCRevisedBudget1GLRange_Error
    Dim ErrStr$
    Dim DblVal As Double
    Dim Result%
    Dim stADO As String
    Dim RST As ADODB.Recordset
    Dim stSQL As String
    Dim AddVal As Double
    Dim CurrInv As Boolean
    Dim GLRange As String
    Dim GLRowRange(1000) As Double
    Dim GLCodeRange(1000) As String
    Dim GLValueRange() As Variant
    Dim GLRowCount As Double
    Dim NextRow As Double
    Dim SingleCompany As String
    Dim LPosition As Integer
    
    DoEvents
    
    Result% = 0
    
    DblVal# = 0#
    
    LPosition = 0
    CompStr$ = UCase(Company$)
    LPosition = InStr(CompStr$, ",")
    
    If LPosition <> 0 Then
        Company$ = Left(CompStr$, LPosition - 1)
    End If
    
    If ValidCompany(Company) And ValidYear(TheYear) And ValidPeriod(ThePeriod) And ValidCcy(TheCcy%) Then
        If LocalCheckServer() Then
            
            'Check User Permissions for all companies
            CompanyList = Split(CompStr$, ",")
            For NoCompanies = 0 To UBound(CompanyList)
                Result = EntServer.CheckUserPermission(CompanyList(NoCompanies), 487)
                
                If Result <> 0 Then
                    Error Result
                    GoTo EntSQLGLCCRevisedBudget1GLRange_Error
                End If
            Next NoCompanies
            
            GLRowCount = 1
            
            For Each GLCodes In GLCodes.Rows
                
                If CStr(GLCodes.Value) <> "" And (GLCodes.Value > 0 And GLCodes.Value <= 2147483647) Then
                    GLRange = GLRange + CStr(GLCodes.Value) & ","
                    GLRowRange(GLRowCount) = GLCodes.Row
                    GLCodeRange(GLRowCount) = CStr(GLCodes.Value)
                End If
                
                GLRowCount = GLRowCount + 1
            Next
            
            'Correct Row Count
            GLRowCount = GLRowCount - 1
            
            'Remove extra comma off end of csv list
            GLRange = Left(GLRange, Len(GLRange) - 1)
            
            stSQL = "EXEC common.esp_GetNominalValue '" + CompStr$ + "',5," + CStr(TheYear%) + "," + CStr(ThePeriod%) + "," + CStr(TheCcy%) + ",'" + CStr(GLRange) + "','" + CStr(Trim(CCCode$)) + "','','C',0"

            OpenDBConnection (CompStr$)
            
            With CNT(CurrComp)
                .CommandTimeout = 0
                Set RST = .Execute(stSQL)
            End With
            
            If RST.RecordCount = 0 Then
                EntSQLGLCCRevisedBudget1GLRange = 0
                GoTo EntSQLGLCCRevisedBudget1GLRange_Exit
            End If
            
            ReDim GLValueRange(1 To GLRowCount, 1 To 1)
            
                For NextRow = 1 To GLRowCount
                    If CStr(GLCodeRange(NextRow)) <> "" Then
                        RST.MoveFirst
                        RST.Find ("glCode = " & CStr(GLCodeRange(NextRow)))
                        
                        If Not RST.EOF Then
                            If RST.Fields.Item(1) = 100000511 Then
                                GLValueRange(NextRow, 1) = 0
                            ElseIf RST.Fields.Item(1) = 100000519 Then
                                GLValueRange(NextRow, 1) = 0
                            ElseIf RST.Fields.Item(1) = 100000520 Then
                                GLValueRange(NextRow, 1) = 0
                            Else
                                GLValueRange(NextRow, 1) = RST.Fields.Item(1)
                            End If
                        Else
                            RST.MoveFirst
                            ' Add to avoid summation errors when text error returned
                            GLValueRange(NextRow, 1) = 0
                        End If
                    Else
                        GLValueRange(NextRow, 1) = ""
                    End If
                    
    
                Next
            
            Set RST = Nothing
            
        End If
    End If
    
EntSQLGLCCRevisedBudget1GLRange_Zero:
    EntSQLGLCCRevisedBudget1GLRange = GLValueRange
    
    GoTo EntSQLGLCCRevisedBudget1GLRange_Exit
        
EntSQLGLCCRevisedBudget1GLRange_Error:
    If ErrStr = "" Then ErrStr = GetErrorNumStr
    EntSQLGLCCRevisedBudget1GLRange = ErrStr

EntSQLGLCCRevisedBudget1GLRange_Exit:

End Function


'*******************************************************************************************************
' Name:        EntSQLGLDpRevisedBudget1GLRange
' Description: Gets the General Ledger Revised Budget 1 values for the specified Currency, Year, Period, Dp and GLCodes
'*******************************************************************************************************
Public Function EntSQLGLDpRevisedBudget1GLRange(Company$, TheYear%, ThePeriod%, TheCcy%, GLCodes As Range, DpCode$) As Variant
On Error GoTo EntSQLGLDpRevisedBudget1GLRange_Error
    Dim ErrStr$
    Dim DblVal As Double
    Dim Result%
    Dim stADO As String
    Dim RST As ADODB.Recordset
    Dim stSQL As String
    Dim AddVal As Double
    Dim CurrInv As Boolean
    Dim GLRange As String
    Dim GLRowRange(1000) As Double
    Dim GLCodeRange(1000) As String
    Dim GLValueRange() As Variant
    Dim GLRowCount As Double
    Dim NextRow As Double
    Dim SingleCompany As String
    Dim LPosition As Integer
    
    DoEvents
    
    Result% = 0
    
    DblVal# = 0#
    
    LPosition = 0
    CompStr$ = UCase(Company$)
    LPosition = InStr(CompStr$, ",")
    
    If LPosition <> 0 Then
        Company$ = Left(CompStr$, LPosition - 1)
    End If
    
    If ValidCompany(Company) And ValidYear(TheYear) And ValidPeriod(ThePeriod) And ValidCcy(TheCcy%) Then
        If LocalCheckServer() Then
            
            'Check User Permissions for all companies
            CompanyList = Split(CompStr$, ",")
            For NoCompanies = 0 To UBound(CompanyList)
                Result = EntServer.CheckUserPermission(CompanyList(NoCompanies), 487)
                
                If Result <> 0 Then
                    Error Result
                    GoTo EntSQLGLDpRevisedBudget1GLRange_Error
                End If
            Next NoCompanies
            
            GLRowCount = 1
            
            For Each GLCodes In GLCodes.Rows
                
                If CStr(GLCodes.Value) <> "" And (GLCodes.Value > 0 And GLCodes.Value <= 2147483647) Then
                    GLRange = GLRange + CStr(GLCodes.Value) & ","
                    GLRowRange(GLRowCount) = GLCodes.Row
                    GLCodeRange(GLRowCount) = CStr(GLCodes.Value)
                End If
                
                GLRowCount = GLRowCount + 1
            Next
            
            'Correct Row Count
            GLRowCount = GLRowCount - 1
            
            'Remove extra comma off end of csv list
            GLRange = Left(GLRange, Len(GLRange) - 1)
            
            stSQL = "EXEC common.esp_GetNominalValue '" + CompStr$ + "',5," + CStr(TheYear%) + "," + CStr(ThePeriod%) + "," + CStr(TheCcy%) + ",'" + CStr(GLRange) + "','','" + CStr(Trim(DpCode$)) + "','D',0"

            OpenDBConnection (CompStr$)
            
            With CNT(CurrComp)
                .CommandTimeout = 0
                Set RST = .Execute(stSQL)
            End With
            
            If RST.RecordCount = 0 Then
                EntSQLGLDpRevisedBudget1GLRange = 0
                GoTo EntSQLGLDpRevisedBudget1GLRange_Exit
            End If
            
            ReDim GLValueRange(1 To GLRowCount, 1 To 1)
            
                For NextRow = 1 To GLRowCount
                    If CStr(GLCodeRange(NextRow)) <> "" Then
                        RST.MoveFirst
                        RST.Find ("glCode = " & CStr(GLCodeRange(NextRow)))
                        
                        If Not RST.EOF Then
                            If RST.Fields.Item(1) = 100000511 Then
                                GLValueRange(NextRow, 1) = 0
                            ElseIf RST.Fields.Item(1) = 100000519 Then
                                GLValueRange(NextRow, 1) = 0
                            ElseIf RST.Fields.Item(1) = 100000520 Then
                                GLValueRange(NextRow, 1) = 0
                            Else
                                GLValueRange(NextRow, 1) = RST.Fields.Item(1)
                            End If
                        Else
                            RST.MoveFirst
                            ' Add to avoid summation errors when text error returned
                            GLValueRange(NextRow, 1) = 0
                        End If
                    Else
                        GLValueRange(NextRow, 1) = ""
                    End If
                    
    
                Next
            
            Set RST = Nothing
            
        End If
    End If
    
EntSQLGLDpRevisedBudget1GLRange_Zero:
    EntSQLGLDpRevisedBudget1GLRange = GLValueRange
    
    GoTo EntSQLGLDpRevisedBudget1GLRange_Exit
        
EntSQLGLDpRevisedBudget1GLRange_Error:
    If ErrStr = "" Then ErrStr = GetErrorNumStr
    EntSQLGLDpRevisedBudget1GLRange = ErrStr

EntSQLGLDpRevisedBudget1GLRange_Exit:

End Function


'*******************************************************************************************************
' Name:        EntSQLGLCCDpRevisedBudget1GLRange
' Description: Gets the General Ledger Revised Budget 1 values for the specified Currency, Year, Period, CC, Dp and GLCodes
'*******************************************************************************************************
Public Function EntSQLGLCCDpRevisedBudget1GLRange(Company$, TheYear%, ThePeriod%, TheCcy%, GLCodes As Range, CCCode$, DpCode$) As Variant
On Error GoTo EntSQLGLCCDpRevisedBudget1GLRange_Error
    Dim ErrStr$
    Dim DblVal As Double
    Dim Result%
    Dim stADO As String
    Dim RST As ADODB.Recordset
    Dim stSQL As String
    Dim AddVal As Double
    Dim CurrInv As Boolean
    Dim GLRange As String
    Dim GLRowRange(1000) As Double
    Dim GLCodeRange(1000) As String
    Dim GLValueRange() As Variant
    Dim GLRowCount As Double
    Dim NextRow As Double
    Dim SingleCompany As String
    Dim LPosition As Integer
    
    DoEvents
    
    Result% = 0
    
    DblVal# = 0#
    
    LPosition = 0
    CompStr$ = UCase(Company$)
    LPosition = InStr(CompStr$, ",")
    
    If LPosition <> 0 Then
        Company$ = Left(CompStr$, LPosition - 1)
    End If
    
    If ValidCompany(Company) And ValidYear(TheYear) And ValidPeriod(ThePeriod) And ValidCcy(TheCcy%) Then
        If LocalCheckServer() Then
            
            'Check User Permissions for all companies
            CompanyList = Split(CompStr$, ",")
            For NoCompanies = 0 To UBound(CompanyList)
                Result = EntServer.CheckUserPermission(CompanyList(NoCompanies), 487)
                
                If Result <> 0 Then
                    Error Result
                    GoTo EntSQLGLCCDpRevisedBudget1GLRange_Error
                End If
            Next NoCompanies
            
            GLRowCount = 1
            
            For Each GLCodes In GLCodes.Rows
                
                If CStr(GLCodes.Value) <> "" And (GLCodes.Value > 0 And GLCodes.Value <= 2147483647) Then
                    GLRange = GLRange + CStr(GLCodes.Value) & ","
                    GLRowRange(GLRowCount) = GLCodes.Row
                    GLCodeRange(GLRowCount) = CStr(GLCodes.Value)
                End If
                
                GLRowCount = GLRowCount + 1
            Next
            
            'Correct Row Count
            GLRowCount = GLRowCount - 1
            
            'Remove extra comma off end of csv list
            GLRange = Left(GLRange, Len(GLRange) - 1)
            
            stSQL = "EXEC common.esp_GetNominalValue '" + CompStr$ + "',5," + CStr(TheYear%) + "," + CStr(ThePeriod%) + "," + CStr(TheCcy%) + ",'" + CStr(GLRange) + "','" + CStr(Trim(CCCode$)) + "','" + CStr(Trim(DpCode$)) + "','C',0"
            
            OpenDBConnection (CompStr$)
            
            With CNT(CurrComp)
                .CommandTimeout = 0
                Set RST = .Execute(stSQL)
            End With
            
            If RST.RecordCount = 0 Then
                EntSQLGLCCDpRevisedBudget1GLRange = 0
                GoTo EntSQLGLCCDpRevisedBudget1GLRange_Exit
            End If
            
            ReDim GLValueRange(1 To GLRowCount, 1 To 1)
            
                For NextRow = 1 To GLRowCount
                    If CStr(GLCodeRange(NextRow)) <> "" Then
                        RST.MoveFirst
                        RST.Find ("glCode = " & CStr(GLCodeRange(NextRow)))
                        
                        If Not RST.EOF Then
                            If RST.Fields.Item(1) = 100000511 Then
                                GLValueRange(NextRow, 1) = 0
                            ElseIf RST.Fields.Item(1) = 100000519 Then
                                GLValueRange(NextRow, 1) = 0
                            ElseIf RST.Fields.Item(1) = 100000520 Then
                                GLValueRange(NextRow, 1) = 0
                            Else
                                GLValueRange(NextRow, 1) = RST.Fields.Item(1)
                            End If
                        Else
                            RST.MoveFirst
                            ' Add to avoid summation errors when text error returned
                            GLValueRange(NextRow, 1) = 0
                        End If
                    Else
                        GLValueRange(NextRow, 1) = ""
                    End If
                    
    
                Next
            
            Set RST = Nothing
            
        End If
    End If
    
EntSQLGLCCDpRevisedBudget1GLRange_Zero:
    EntSQLGLCCDpRevisedBudget1GLRange = GLValueRange
    
    GoTo EntSQLGLCCDpRevisedBudget1GLRange_Exit
        
EntSQLGLCCDpRevisedBudget1GLRange_Error:
    If ErrStr = "" Then ErrStr = GetErrorNumStr
    EntSQLGLCCDpRevisedBudget1GLRange = ErrStr

EntSQLGLCCDpRevisedBudget1GLRange_Exit:

End Function

'**************************************************************************************************************
'**                                              Revised Budget 2                                            **
'**************************************************************************************************************

'*******************************************************************************************************
' Name:        EntSQLGLRevisedBudget2GLRange
' Description: Gets the General Ledger Revised Budget 2 value for the specified Currency, Year, Period and GLCode
'*******************************************************************************************************
Public Function EntSQLGLRevisedBudget2GLRange(Company$, TheYear%, ThePeriod%, TheCcy%, GLCodes As Range) As Variant
On Error GoTo EntSQLGLRevisedBudget2GLRange_Error
    Dim ErrStr$
    Dim DblVal As Double
    Dim Result%
    Dim stADO As String
    Dim RST As ADODB.Recordset
    Dim stSQL As String
    Dim AddVal As Double
    Dim CurrInv As Boolean
    Dim GLRange As String
    Dim GLRowRange(1000) As Double
    Dim GLCodeRange(1000) As String
    Dim GLValueRange() As Variant
    Dim GLRowCount As Double
    Dim NextRow As Double
    Dim SingleCompany As String
    Dim LPosition As Integer
    
    DoEvents
    
    Result% = 0
    
    DblVal# = 0#
    
    LPosition = 0
    CompStr$ = UCase(Company$)
    LPosition = InStr(CompStr$, ",")
    
    If LPosition <> 0 Then
        Company$ = Left(CompStr$, LPosition - 1)
    End If
    
    If ValidCompany(Company$) And ValidYear(TheYear) And ValidPeriod(ThePeriod) And ValidCcy(TheCcy%) Then
        If LocalCheckServer() Then
            
            'Check User Permissions for all companies
            CompanyList = Split(CompStr$, ",")
            For NoCompanies = 0 To UBound(CompanyList)
                Result = EntServer.CheckUserPermission(CompanyList(NoCompanies), 487)
                
                If Result <> 0 Then
                    Error Result
                    GoTo EntSQLGLRevisedBudget2GLRange_Error
                End If
            Next NoCompanies
            
            GLRowCount = 1
            
            For Each GLCodes In GLCodes.Rows
                
                If CStr(GLCodes.Value) <> "" And (GLCodes.Value > 0 And GLCodes.Value <= 2147483647) Then
                    GLRange = GLRange + CStr(GLCodes.Value) & ","
                    GLRowRange(GLRowCount) = GLCodes.Row
                    GLCodeRange(GLRowCount) = CStr(GLCodes.Value)
                End If
                
                GLRowCount = GLRowCount + 1
            Next
            
            'Correct Row Count
            GLRowCount = GLRowCount - 1
            
            'Remove extra comma off end of csv list
            GLRange = Left(GLRange, Len(GLRange) - 1)
            
            stSQL = "EXEC common.esp_GetNominalValue '" + CompStr$ + "',7," + CStr(TheYear%) + "," + CStr(ThePeriod%) + "," + CStr(TheCcy%) + ",'" + CStr(GLRange) + "','','','',0"

            OpenDBConnection (CompStr$)
            
            With CNT(CurrComp)
                .CommandTimeout = 0
                Set RST = .Execute(stSQL)
            End With
            
            If RST.RecordCount = 0 Then
                EntSQLGLRevisedBudget2GLRange = 0
                GoTo EntSQLGLRevisedBudget2GLRange_Exit
            End If
            
            ReDim GLValueRange(1 To GLRowCount, 1 To 1)
            
                For NextRow = 1 To GLRowCount
                    If CStr(GLCodeRange(NextRow)) <> "" Then
                        RST.MoveFirst
                        RST.Find ("glCode = " & CStr(GLCodeRange(NextRow)))
                        
                        If Not RST.EOF Then
                            If RST.Fields.Item(1) = 100000511 Then
                                GLValueRange(NextRow, 1) = 0
                            ElseIf RST.Fields.Item(1) = 100000519 Then
                                GLValueRange(NextRow, 1) = 0
                            ElseIf RST.Fields.Item(1) = 100000520 Then
                                GLValueRange(NextRow, 1) = 0
                            Else
                                GLValueRange(NextRow, 1) = RST.Fields.Item(1)
                            End If
                        Else
                            RST.MoveFirst
                            ' Add to avoid summation errors when text error returned
                            GLValueRange(NextRow, 1) = 0
                        End If
                    Else
                        GLValueRange(NextRow, 1) = ""
                    End If
                    
    
                Next
            
            Set RST = Nothing
            
        End If
    End If
    
EntSQLGLRevisedBudget2GLRange_Zero:
    EntSQLGLRevisedBudget2GLRange = GLValueRange
    
    GoTo EntSQLGLRevisedBudget2GLRange_Exit
        
EntSQLGLRevisedBudget2GLRange_Error:
    If ErrStr = "" Then ErrStr = GetErrorNumStr
    EntSQLGLRevisedBudget2GLRange = ErrStr

EntSQLGLRevisedBudget2GLRange_Exit:

End Function

'*******************************************************************************************************
' Name:        EntSQLGLCCRevisedBudget2GLRange
' Description: Gets the General Ledger Revised Budget 2 values for the specified Currency, Year, Period, CC and GLCodes
'*******************************************************************************************************
Public Function EntSQLGLCCRevisedBudget2GLRange(Company$, TheYear%, ThePeriod%, TheCcy%, GLCodes As Range, CCCode$) As Variant
On Error GoTo EntSQLGLCCRevisedBudget2GLRange_Error
    Dim ErrStr$
    Dim DblVal As Double
    Dim Result%
    Dim stADO As String
    Dim RST As ADODB.Recordset
    Dim stSQL As String
    Dim AddVal As Double
    Dim CurrInv As Boolean
    Dim GLRange As String
    Dim GLRowRange(1000) As Double
    Dim GLCodeRange(1000) As String
    Dim GLValueRange() As Variant
    Dim GLRowCount As Double
    Dim NextRow As Double
    Dim SingleCompany As String
    Dim LPosition As Integer
    
    DoEvents
    
    Result% = 0
    
    DblVal# = 0#
    
    LPosition = 0
    CompStr$ = UCase(Company$)
    LPosition = InStr(CompStr$, ",")
    
    If LPosition <> 0 Then
        Company$ = Left(CompStr$, LPosition - 1)
    End If
    
    If ValidCompany(Company) And ValidYear(TheYear) And ValidPeriod(ThePeriod) And ValidCcy(TheCcy%) Then
        If LocalCheckServer() Then
            
            'Check User Permissions for all companies
            CompanyList = Split(CompStr$, ",")
            For NoCompanies = 0 To UBound(CompanyList)
                Result = EntServer.CheckUserPermission(CompanyList(NoCompanies), 487)
                
                If Result <> 0 Then
                    Error Result
                    GoTo EntSQLGLCCRevisedBudget2GLRange_Error
                End If
            Next NoCompanies
            
            GLRowCount = 1
            
            For Each GLCodes In GLCodes.Rows
                
                If CStr(GLCodes.Value) <> "" And (GLCodes.Value > 0 And GLCodes.Value <= 2147483647) Then
                    GLRange = GLRange + CStr(GLCodes.Value) & ","
                    GLRowRange(GLRowCount) = GLCodes.Row
                    GLCodeRange(GLRowCount) = CStr(GLCodes.Value)
                End If
                
                GLRowCount = GLRowCount + 1
            Next
            
            'Correct Row Count
            GLRowCount = GLRowCount - 1
            
            'Remove extra comma off end of csv list
            GLRange = Left(GLRange, Len(GLRange) - 1)
            
            stSQL = "EXEC common.esp_GetNominalValue '" + CompStr$ + "',7," + CStr(TheYear%) + "," + CStr(ThePeriod%) + "," + CStr(TheCcy%) + ",'" + CStr(GLRange) + "','" + CStr(Trim(CCCode$)) + "','','C',0"

            OpenDBConnection (CompStr$)
            
            With CNT(CurrComp)
                .CommandTimeout = 0
                Set RST = .Execute(stSQL)
            End With
            
            If RST.RecordCount = 0 Then
                EntSQLGLCCRevisedBudget2GLRange = 0
                GoTo EntSQLGLCCRevisedBudget2GLRange_Exit
            End If
            
            ReDim GLValueRange(1 To GLRowCount, 1 To 1)
            
                For NextRow = 1 To GLRowCount
                    If CStr(GLCodeRange(NextRow)) <> "" Then
                        RST.MoveFirst
                        RST.Find ("glCode = " & CStr(GLCodeRange(NextRow)))
                        
                        If Not RST.EOF Then
                            If RST.Fields.Item(1) = 100000511 Then
                                GLValueRange(NextRow, 1) = 0
                            ElseIf RST.Fields.Item(1) = 100000519 Then
                                GLValueRange(NextRow, 1) = 0
                            ElseIf RST.Fields.Item(1) = 100000520 Then
                                GLValueRange(NextRow, 1) = 0
                            Else
                                GLValueRange(NextRow, 1) = RST.Fields.Item(1)
                            End If
                        Else
                            RST.MoveFirst
                            ' Add to avoid summation errors when text error returned
                            GLValueRange(NextRow, 1) = 0
                        End If
                    Else
                        GLValueRange(NextRow, 1) = ""
                    End If
                    
    
                Next
            
            Set RST = Nothing
            
        End If
    End If
    
EntSQLGLCCRevisedBudget2GLRange_Zero:
    EntSQLGLCCRevisedBudget2GLRange = GLValueRange
    
    GoTo EntSQLGLCCRevisedBudget2GLRange_Exit
        
EntSQLGLCCRevisedBudget2GLRange_Error:
    If ErrStr = "" Then ErrStr = GetErrorNumStr
    EntSQLGLCCRevisedBudget2GLRange = ErrStr

EntSQLGLCCRevisedBudget2GLRange_Exit:

End Function


'*******************************************************************************************************
' Name:        EntSQLGLDpRevisedBudget2GLRange
' Description: Gets the General Ledger Revised Budget 2 values for the specified Currency, Year, Period, Dp and GLCodes
'*******************************************************************************************************
Public Function EntSQLGLDpRevisedBudget2GLRange(Company$, TheYear%, ThePeriod%, TheCcy%, GLCodes As Range, DpCode$) As Variant
On Error GoTo EntSQLGLDpRevisedBudget2GLRange_Error
    Dim ErrStr$
    Dim DblVal As Double
    Dim Result%
    Dim stADO As String
    Dim RST As ADODB.Recordset
    Dim stSQL As String
    Dim AddVal As Double
    Dim CurrInv As Boolean
    Dim GLRange As String
    Dim GLRowRange(1000) As Double
    Dim GLCodeRange(1000) As String
    Dim GLValueRange() As Variant
    Dim GLRowCount As Double
    Dim NextRow As Double
    Dim SingleCompany As String
    Dim LPosition As Integer
    
    DoEvents
    
    Result% = 0
    
    DblVal# = 0#
    
    LPosition = 0
    CompStr$ = UCase(Company$)
    LPosition = InStr(CompStr$, ",")
    
    If LPosition <> 0 Then
        Company$ = Left(CompStr$, LPosition - 1)
    End If
    
    If ValidCompany(Company) And ValidYear(TheYear) And ValidPeriod(ThePeriod) And ValidCcy(TheCcy%) Then
        If LocalCheckServer() Then
            
            'Check User Permissions for all companies
            CompanyList = Split(CompStr$, ",")
            For NoCompanies = 0 To UBound(CompanyList)
                Result = EntServer.CheckUserPermission(CompanyList(NoCompanies), 487)
                
                If Result <> 0 Then
                    Error Result
                    GoTo EntSQLGLDpRevisedBudget2GLRange_Error
                End If
            Next NoCompanies
            
            GLRowCount = 1
            
            For Each GLCodes In GLCodes.Rows
                
                If CStr(GLCodes.Value) <> "" And (GLCodes.Value > 0 And GLCodes.Value <= 2147483647) Then
                    GLRange = GLRange + CStr(GLCodes.Value) & ","
                    GLRowRange(GLRowCount) = GLCodes.Row
                    GLCodeRange(GLRowCount) = CStr(GLCodes.Value)
                End If
                
                GLRowCount = GLRowCount + 1
            Next
            
            'Correct Row Count
            GLRowCount = GLRowCount - 1
            
            'Remove extra comma off end of csv list
            GLRange = Left(GLRange, Len(GLRange) - 1)
            
            stSQL = "EXEC common.esp_GetNominalValue '" + CompStr$ + "',7," + CStr(TheYear%) + "," + CStr(ThePeriod%) + "," + CStr(TheCcy%) + ",'" + CStr(GLRange) + "','','" + CStr(Trim(DpCode$)) + "','D',0"

            OpenDBConnection (CompStr$)
            
            With CNT(CurrComp)
                .CommandTimeout = 0
                Set RST = .Execute(stSQL)
            End With
            
            If RST.RecordCount = 0 Then
                EntSQLGLDpRevisedBudget2GLRange = 0
                GoTo EntSQLGLDpRevisedBudget2GLRange_Exit
            End If
            
            ReDim GLValueRange(1 To GLRowCount, 1 To 1)
            
                For NextRow = 1 To GLRowCount
                    If CStr(GLCodeRange(NextRow)) <> "" Then
                        RST.MoveFirst
                        RST.Find ("glCode = " & CStr(GLCodeRange(NextRow)))
                        
                        If Not RST.EOF Then
                            If RST.Fields.Item(1) = 100000511 Then
                                GLValueRange(NextRow, 1) = 0
                            ElseIf RST.Fields.Item(1) = 100000519 Then
                                GLValueRange(NextRow, 1) = 0
                            ElseIf RST.Fields.Item(1) = 100000520 Then
                                GLValueRange(NextRow, 1) = 0
                            Else
                                GLValueRange(NextRow, 1) = RST.Fields.Item(1)
                            End If
                        Else
                            RST.MoveFirst
                            ' Add to avoid summation errors when text error returned
                            GLValueRange(NextRow, 1) = 0
                        End If
                    Else
                        GLValueRange(NextRow, 1) = ""
                    End If
                    
    
                Next
            
            Set RST = Nothing
            
        End If
    End If
    
EntSQLGLDpRevisedBudget2GLRange_Zero:
    EntSQLGLDpRevisedBudget2GLRange = GLValueRange
    
    GoTo EntSQLGLDpRevisedBudget2GLRange_Exit
        
EntSQLGLDpRevisedBudget2GLRange_Error:
    If ErrStr = "" Then ErrStr = GetErrorNumStr
    EntSQLGLDpRevisedBudget2GLRange = ErrStr

EntSQLGLDpRevisedBudget2GLRange_Exit:

End Function


'*******************************************************************************************************
' Name:        EntSQLGLCCDpRevisedBudget2GLRange
' Description: Gets the General Ledger Revised Budget 2 values for the specified Currency, Year, Period, CC, Dp and GLCodes
'*******************************************************************************************************
Public Function EntSQLGLCCDpRevisedBudget2GLRange(Company$, TheYear%, ThePeriod%, TheCcy%, GLCodes As Range, CCCode$, DpCode$) As Variant
On Error GoTo EntSQLGLCCDpRevisedBudget2GLRange_Error
    Dim ErrStr$
    Dim DblVal As Double
    Dim Result%
    Dim stADO As String
    Dim RST As ADODB.Recordset
    Dim stSQL As String
    Dim AddVal As Double
    Dim CurrInv As Boolean
    Dim GLRange As String
    Dim GLRowRange(1000) As Double
    Dim GLCodeRange(1000) As String
    Dim GLValueRange() As Variant
    Dim GLRowCount As Double
    Dim NextRow As Double
    Dim SingleCompany As String
    Dim LPosition As Integer
    
    DoEvents
    
    Result% = 0
    
    DblVal# = 0#
    
    LPosition = 0
    CompStr$ = UCase(Company$)
    LPosition = InStr(CompStr$, ",")
    
    If LPosition <> 0 Then
        Company$ = Left(CompStr$, LPosition - 1)
    End If
    
    If ValidCompany(Company) And ValidYear(TheYear) And ValidPeriod(ThePeriod) And ValidCcy(TheCcy%) Then
        If LocalCheckServer() Then
            
            'Check User Permissions for all companies
            CompanyList = Split(CompStr$, ",")
            For NoCompanies = 0 To UBound(CompanyList)
                Result = EntServer.CheckUserPermission(CompanyList(NoCompanies), 487)
                
                If Result <> 0 Then
                    Error Result
                    GoTo EntSQLGLCCDpRevisedBudget2GLRange_Error
                End If
            Next NoCompanies
            
            GLRowCount = 1
            
            For Each GLCodes In GLCodes.Rows
                
                If CStr(GLCodes.Value) <> "" And (GLCodes.Value > 0 And GLCodes.Value <= 2147483647) Then
                    GLRange = GLRange + CStr(GLCodes.Value) & ","
                    GLRowRange(GLRowCount) = GLCodes.Row
                    GLCodeRange(GLRowCount) = CStr(GLCodes.Value)
                End If
                
                GLRowCount = GLRowCount + 1
            Next
            
            'Correct Row Count
            GLRowCount = GLRowCount - 1
            
            'Remove extra comma off end of csv list
            GLRange = Left(GLRange, Len(GLRange) - 1)
            
            stSQL = "EXEC common.esp_GetNominalValue '" + CompStr$ + "',7," + CStr(TheYear%) + "," + CStr(ThePeriod%) + "," + CStr(TheCcy%) + ",'" + CStr(GLRange) + "','" + CStr(Trim(CCCode$)) + "','" + CStr(Trim(DpCode$)) + "','C',0"
            
            OpenDBConnection (CompStr$)
            
            With CNT(CurrComp)
                .CommandTimeout = 0
                Set RST = .Execute(stSQL)
            End With
            
            If RST.RecordCount = 0 Then
                EntSQLGLCCDpRevisedBudget2GLRange = 0
                GoTo EntSQLGLCCDpRevisedBudget2GLRange_Exit
            End If
            
            ReDim GLValueRange(1 To GLRowCount, 1 To 1)
            
                For NextRow = 1 To GLRowCount
                    If CStr(GLCodeRange(NextRow)) <> "" Then
                        RST.MoveFirst
                        RST.Find ("glCode = " & CStr(GLCodeRange(NextRow)))
                        
                        If Not RST.EOF Then
                            If RST.Fields.Item(1) = 100000511 Then
                                GLValueRange(NextRow, 1) = 0
                            ElseIf RST.Fields.Item(1) = 100000519 Then
                                GLValueRange(NextRow, 1) = 0
                            ElseIf RST.Fields.Item(1) = 100000520 Then
                                GLValueRange(NextRow, 1) = 0
                            Else
                                GLValueRange(NextRow, 1) = RST.Fields.Item(1)
                            End If
                        Else
                            RST.MoveFirst
                            ' Add to avoid summation errors when text error returned
                            GLValueRange(NextRow, 1) = 0
                        End If
                    Else
                        GLValueRange(NextRow, 1) = ""
                    End If
                    
    
                Next
            
            Set RST = Nothing
            
        End If
    End If
    
EntSQLGLCCDpRevisedBudget2GLRange_Zero:
    EntSQLGLCCDpRevisedBudget2GLRange = GLValueRange
    
    GoTo EntSQLGLCCDpRevisedBudget2GLRange_Exit
        
EntSQLGLCCDpRevisedBudget2GLRange_Error:
    If ErrStr = "" Then ErrStr = GetErrorNumStr
    EntSQLGLCCDpRevisedBudget2GLRange = ErrStr

EntSQLGLCCDpRevisedBudget2GLRange_Exit:

End Function

'**************************************************************************************************************
'**                                              Revised Budget 3                                            **
'**************************************************************************************************************

'*******************************************************************************************************
' Name:        EntSQLGLRevisedBudget3GLRange
' Description: Gets the General Ledger Revised Budget 3 value for the specified Currency, Year, Period and GLCode
'*******************************************************************************************************
Public Function EntSQLGLRevisedBudget3GLRange(Company$, TheYear%, ThePeriod%, TheCcy%, GLCodes As Range) As Variant
On Error GoTo EntSQLGLRevisedBudget3GLRange_Error
    Dim ErrStr$
    Dim DblVal As Double
    Dim Result%
    Dim stADO As String
    Dim RST As ADODB.Recordset
    Dim stSQL As String
    Dim AddVal As Double
    Dim CurrInv As Boolean
    Dim GLRange As String
    Dim GLRowRange(1000) As Double
    Dim GLCodeRange(1000) As String
    Dim GLValueRange() As Variant
    Dim GLRowCount As Double
    Dim NextRow As Double
    Dim SingleCompany As String
    Dim LPosition As Integer
    
    DoEvents
    
    Result% = 0
    
    DblVal# = 0#
    
    LPosition = 0
    CompStr$ = UCase(Company$)
    LPosition = InStr(CompStr$, ",")
    
    If LPosition <> 0 Then
        Company$ = Left(CompStr$, LPosition - 1)
    End If
    
    If ValidCompany(Company$) And ValidYear(TheYear) And ValidPeriod(ThePeriod) And ValidCcy(TheCcy%) Then
        If LocalCheckServer() Then
            
            'Check User Permissions for all companies
            CompanyList = Split(CompStr$, ",")
            For NoCompanies = 0 To UBound(CompanyList)
                Result = EntServer.CheckUserPermission(CompanyList(NoCompanies), 487)
                
                If Result <> 0 Then
                    Error Result
                    GoTo EntSQLGLRevisedBudget3GLRange_Error
                End If
            Next NoCompanies
            
            GLRowCount = 1
            
            For Each GLCodes In GLCodes.Rows
                
                If CStr(GLCodes.Value) <> "" And (GLCodes.Value > 0 And GLCodes.Value <= 2147483647) Then
                    GLRange = GLRange + CStr(GLCodes.Value) & ","
                    GLRowRange(GLRowCount) = GLCodes.Row
                    GLCodeRange(GLRowCount) = CStr(GLCodes.Value)
                End If
                
                GLRowCount = GLRowCount + 1
            Next
            
            'Correct Row Count
            GLRowCount = GLRowCount - 1
            
            'Remove extra comma off end of csv list
            GLRange = Left(GLRange, Len(GLRange) - 1)
            
            stSQL = "EXEC common.esp_GetNominalValue '" + CompStr$ + "',8," + CStr(TheYear%) + "," + CStr(ThePeriod%) + "," + CStr(TheCcy%) + ",'" + CStr(GLRange) + "','','','',0"

            OpenDBConnection (CompStr$)
            
            With CNT(CurrComp)
                .CommandTimeout = 0
                Set RST = .Execute(stSQL)
            End With
            
            If RST.RecordCount = 0 Then
                EntSQLGLRevisedBudget3GLRange = 0
                GoTo EntSQLGLRevisedBudget3GLRange_Exit
            End If
            
            ReDim GLValueRange(1 To GLRowCount, 1 To 1)
            
                For NextRow = 1 To GLRowCount
                    If CStr(GLCodeRange(NextRow)) <> "" Then
                        RST.MoveFirst
                        RST.Find ("glCode = " & CStr(GLCodeRange(NextRow)))
                        
                        If Not RST.EOF Then
                            If RST.Fields.Item(1) = 100000511 Then
                                GLValueRange(NextRow, 1) = 0
                            ElseIf RST.Fields.Item(1) = 100000519 Then
                                GLValueRange(NextRow, 1) = 0
                            ElseIf RST.Fields.Item(1) = 100000520 Then
                                GLValueRange(NextRow, 1) = 0
                            Else
                                GLValueRange(NextRow, 1) = RST.Fields.Item(1)
                            End If
                        Else
                            RST.MoveFirst
                            ' Add to avoid summation errors when text error returned
                            GLValueRange(NextRow, 1) = 0
                        End If
                    Else
                        GLValueRange(NextRow, 1) = ""
                    End If
                    
    
                Next
            
            Set RST = Nothing
            
        End If
    End If
    
EntSQLGLRevisedBudget3GLRange_Zero:
    EntSQLGLRevisedBudget3GLRange = GLValueRange
    
    GoTo EntSQLGLRevisedBudget3GLRange_Exit
        
EntSQLGLRevisedBudget3GLRange_Error:
    If ErrStr = "" Then ErrStr = GetErrorNumStr
    EntSQLGLRevisedBudget3GLRange = ErrStr

EntSQLGLRevisedBudget3GLRange_Exit:

End Function

'*******************************************************************************************************
' Name:        EntSQLGLCCRevisedBudget3GLRange
' Description: Gets the General Ledger Revised Budget 3 values for the specified Currency, Year, Period, CC and GLCodes
'*******************************************************************************************************
Public Function EntSQLGLCCRevisedBudget3GLRange(Company$, TheYear%, ThePeriod%, TheCcy%, GLCodes As Range, CCCode$) As Variant
On Error GoTo EntSQLGLCCRevisedBudget3GLRange_Error
    Dim ErrStr$
    Dim DblVal As Double
    Dim Result%
    Dim stADO As String
    Dim RST As ADODB.Recordset
    Dim stSQL As String
    Dim AddVal As Double
    Dim CurrInv As Boolean
    Dim GLRange As String
    Dim GLRowRange(1000) As Double
    Dim GLCodeRange(1000) As String
    Dim GLValueRange() As Variant
    Dim GLRowCount As Double
    Dim NextRow As Double
    Dim SingleCompany As String
    Dim LPosition As Integer
    
    DoEvents
    
    Result% = 0
    
    DblVal# = 0#
    
    LPosition = 0
    CompStr$ = UCase(Company$)
    LPosition = InStr(CompStr$, ",")
    
    If LPosition <> 0 Then
        Company$ = Left(CompStr$, LPosition - 1)
    End If
    
    If ValidCompany(Company) And ValidYear(TheYear) And ValidPeriod(ThePeriod) And ValidCcy(TheCcy%) Then
        If LocalCheckServer() Then
            
            'Check User Permissions for all companies
            CompanyList = Split(CompStr$, ",")
            For NoCompanies = 0 To UBound(CompanyList)
                Result = EntServer.CheckUserPermission(CompanyList(NoCompanies), 487)
                
                If Result <> 0 Then
                    Error Result
                    GoTo EntSQLGLCCRevisedBudget3GLRange_Error
                End If
            Next NoCompanies
            
            GLRowCount = 1
            
            For Each GLCodes In GLCodes.Rows
                
                If CStr(GLCodes.Value) <> "" And (GLCodes.Value > 0 And GLCodes.Value <= 2147483647) Then
                    GLRange = GLRange + CStr(GLCodes.Value) & ","
                    GLRowRange(GLRowCount) = GLCodes.Row
                    GLCodeRange(GLRowCount) = CStr(GLCodes.Value)
                End If
                
                GLRowCount = GLRowCount + 1
            Next
            
            'Correct Row Count
            GLRowCount = GLRowCount - 1
            
            'Remove extra comma off end of csv list
            GLRange = Left(GLRange, Len(GLRange) - 1)
            
            stSQL = "EXEC common.esp_GetNominalValue '" + CompStr$ + "',8," + CStr(TheYear%) + "," + CStr(ThePeriod%) + "," + CStr(TheCcy%) + ",'" + CStr(GLRange) + "','" + CStr(Trim(CCCode$)) + "','','C',0"

            OpenDBConnection (CompStr$)
            
            With CNT(CurrComp)
                .CommandTimeout = 0
                Set RST = .Execute(stSQL)
            End With
            
            If RST.RecordCount = 0 Then
                EntSQLGLCCRevisedBudget3GLRange = 0
                GoTo EntSQLGLCCRevisedBudget3GLRange_Exit
            End If
            
            ReDim GLValueRange(1 To GLRowCount, 1 To 1)
            
                For NextRow = 1 To GLRowCount
                    If CStr(GLCodeRange(NextRow)) <> "" Then
                        RST.MoveFirst
                        RST.Find ("glCode = " & CStr(GLCodeRange(NextRow)))
                        
                        If Not RST.EOF Then
                            If RST.Fields.Item(1) = 100000511 Then
                                GLValueRange(NextRow, 1) = 0
                            ElseIf RST.Fields.Item(1) = 100000519 Then
                                GLValueRange(NextRow, 1) = 0
                            ElseIf RST.Fields.Item(1) = 100000520 Then
                                GLValueRange(NextRow, 1) = 0
                            Else
                                GLValueRange(NextRow, 1) = RST.Fields.Item(1)
                            End If
                        Else
                            RST.MoveFirst
                            ' Add to avoid summation errors when text error returned
                            GLValueRange(NextRow, 1) = 0
                        End If
                    Else
                        GLValueRange(NextRow, 1) = ""
                    End If
                    
    
                Next
            
            Set RST = Nothing
            
        End If
    End If
    
EntSQLGLCCRevisedBudget3GLRange_Zero:
    EntSQLGLCCRevisedBudget3GLRange = GLValueRange
    
    GoTo EntSQLGLCCRevisedBudget3GLRange_Exit
        
EntSQLGLCCRevisedBudget3GLRange_Error:
    If ErrStr = "" Then ErrStr = GetErrorNumStr
    EntSQLGLCCRevisedBudget3GLRange = ErrStr

EntSQLGLCCRevisedBudget3GLRange_Exit:

End Function


'*******************************************************************************************************
' Name:        EntSQLGLDpRevisedBudget3GLRange
' Description: Gets the General Ledger Revised Budget 3 values for the specified Currency, Year, Period, Dp and GLCodes
'*******************************************************************************************************
Public Function EntSQLGLDpRevisedBudget3GLRange(Company$, TheYear%, ThePeriod%, TheCcy%, GLCodes As Range, DpCode$) As Variant
On Error GoTo EntSQLGLDpRevisedBudget3GLRange_Error
    Dim ErrStr$
    Dim DblVal As Double
    Dim Result%
    Dim stADO As String
    Dim RST As ADODB.Recordset
    Dim stSQL As String
    Dim AddVal As Double
    Dim CurrInv As Boolean
    Dim GLRange As String
    Dim GLRowRange(1000) As Double
    Dim GLCodeRange(1000) As String
    Dim GLValueRange() As Variant
    Dim GLRowCount As Double
    Dim NextRow As Double
    Dim SingleCompany As String
    Dim LPosition As Integer
    
    DoEvents
    
    Result% = 0
    
    DblVal# = 0#
    
    LPosition = 0
    CompStr$ = UCase(Company$)
    LPosition = InStr(CompStr$, ",")
    
    If LPosition <> 0 Then
        Company$ = Left(CompStr$, LPosition - 1)
    End If
    
    If ValidCompany(Company) And ValidYear(TheYear) And ValidPeriod(ThePeriod) And ValidCcy(TheCcy%) Then
        If LocalCheckServer() Then
            
            'Check User Permissions for all companies
            CompanyList = Split(CompStr$, ",")
            For NoCompanies = 0 To UBound(CompanyList)
                Result = EntServer.CheckUserPermission(CompanyList(NoCompanies), 487)
                
                If Result <> 0 Then
                    Error Result
                    GoTo EntSQLGLDpRevisedBudget3GLRange_Error
                End If
            Next NoCompanies
            
            GLRowCount = 1
            
            For Each GLCodes In GLCodes.Rows
                
                If CStr(GLCodes.Value) <> "" And (GLCodes.Value > 0 And GLCodes.Value <= 2147483647) Then
                    GLRange = GLRange + CStr(GLCodes.Value) & ","
                    GLRowRange(GLRowCount) = GLCodes.Row
                    GLCodeRange(GLRowCount) = CStr(GLCodes.Value)
                End If
                
                GLRowCount = GLRowCount + 1
            Next
            
            'Correct Row Count
            GLRowCount = GLRowCount - 1
            
            'Remove extra comma off end of csv list
            GLRange = Left(GLRange, Len(GLRange) - 1)
            
            stSQL = "EXEC common.esp_GetNominalValue '" + CompStr$ + "',8," + CStr(TheYear%) + "," + CStr(ThePeriod%) + "," + CStr(TheCcy%) + ",'" + CStr(GLRange) + "','','" + CStr(Trim(DpCode$)) + "','D',0"

            OpenDBConnection (CompStr$)
            
            With CNT(CurrComp)
                .CommandTimeout = 0
                Set RST = .Execute(stSQL)
            End With
            
            If RST.RecordCount = 0 Then
                EntSQLGLDpRevisedBudget3GLRange = 0
                GoTo EntSQLGLDpRevisedBudget3GLRange_Exit
            End If
            
            ReDim GLValueRange(1 To GLRowCount, 1 To 1)
            
                For NextRow = 1 To GLRowCount
                    If CStr(GLCodeRange(NextRow)) <> "" Then
                        RST.MoveFirst
                        RST.Find ("glCode = " & CStr(GLCodeRange(NextRow)))
                        
                        If Not RST.EOF Then
                            If RST.Fields.Item(1) = 100000511 Then
                                GLValueRange(NextRow, 1) = 0
                            ElseIf RST.Fields.Item(1) = 100000519 Then
                                GLValueRange(NextRow, 1) = 0
                            ElseIf RST.Fields.Item(1) = 100000520 Then
                                GLValueRange(NextRow, 1) = 0
                            Else
                                GLValueRange(NextRow, 1) = RST.Fields.Item(1)
                            End If
                        Else
                            RST.MoveFirst
                            ' Add to avoid summation errors when text error returned
                            GLValueRange(NextRow, 1) = 0
                        End If
                    Else
                        GLValueRange(NextRow, 1) = ""
                    End If
                    
    
                Next
            
            Set RST = Nothing
            
        End If
    End If
    
EntSQLGLDpRevisedBudget3GLRange_Zero:
    EntSQLGLDpRevisedBudget3GLRange = GLValueRange
    
    GoTo EntSQLGLDpRevisedBudget3GLRange_Exit
        
EntSQLGLDpRevisedBudget3GLRange_Error:
    If ErrStr = "" Then ErrStr = GetErrorNumStr
    EntSQLGLDpRevisedBudget3GLRange = ErrStr

EntSQLGLDpRevisedBudget3GLRange_Exit:

End Function


'*******************************************************************************************************
' Name:        EntSQLGLCCDpRevisedBudget3GLRange
' Description: Gets the General Ledger Revised Budget 3 values for the specified Currency, Year, Period, CC, Dp and GLCodes
'*******************************************************************************************************
Public Function EntSQLGLCCDpRevisedBudget3GLRange(Company$, TheYear%, ThePeriod%, TheCcy%, GLCodes As Range, CCCode$, DpCode$) As Variant
On Error GoTo EntSQLGLCCDpRevisedBudget3GLRange_Error
    Dim ErrStr$
    Dim DblVal As Double
    Dim Result%
    Dim stADO As String
    Dim RST As ADODB.Recordset
    Dim stSQL As String
    Dim AddVal As Double
    Dim CurrInv As Boolean
    Dim GLRange As String
    Dim GLRowRange(1000) As Double
    Dim GLCodeRange(1000) As String
    Dim GLValueRange() As Variant
    Dim GLRowCount As Double
    Dim NextRow As Double
    Dim SingleCompany As String
    Dim LPosition As Integer
    
    DoEvents
    
    Result% = 0
    
    DblVal# = 0#
    
    LPosition = 0
    CompStr$ = UCase(Company$)
    LPosition = InStr(CompStr$, ",")
    
    If LPosition <> 0 Then
        Company$ = Left(CompStr$, LPosition - 1)
    End If
    
    If ValidCompany(Company) And ValidYear(TheYear) And ValidPeriod(ThePeriod) And ValidCcy(TheCcy%) Then
        If LocalCheckServer() Then
            
            'Check User Permissions for all companies
            CompanyList = Split(CompStr$, ",")
            For NoCompanies = 0 To UBound(CompanyList)
                Result = EntServer.CheckUserPermission(CompanyList(NoCompanies), 487)
                
                If Result <> 0 Then
                    Error Result
                    GoTo EntSQLGLCCDpRevisedBudget3GLRange_Error
                End If
            Next NoCompanies
            
            GLRowCount = 1
            
            For Each GLCodes In GLCodes.Rows
                
                If CStr(GLCodes.Value) <> "" And (GLCodes.Value > 0 And GLCodes.Value <= 2147483647) Then
                    GLRange = GLRange + CStr(GLCodes.Value) & ","
                    GLRowRange(GLRowCount) = GLCodes.Row
                    GLCodeRange(GLRowCount) = CStr(GLCodes.Value)
                End If
                
                GLRowCount = GLRowCount + 1
            Next
            
            'Correct Row Count
            GLRowCount = GLRowCount - 1
            
            'Remove extra comma off end of csv list
            GLRange = Left(GLRange, Len(GLRange) - 1)
            
            stSQL = "EXEC common.esp_GetNominalValue '" + CompStr$ + "',8," + CStr(TheYear%) + "," + CStr(ThePeriod%) + "," + CStr(TheCcy%) + ",'" + CStr(GLRange) + "','" + CStr(Trim(CCCode$)) + "','" + CStr(Trim(DpCode$)) + "','C',0"
            
            OpenDBConnection (CompStr$)
            
            With CNT(CurrComp)
                .CommandTimeout = 0
                Set RST = .Execute(stSQL)
            End With
            
            If RST.RecordCount = 0 Then
                EntSQLGLCCDpRevisedBudget3GLRange = 0
                GoTo EntSQLGLCCDpRevisedBudget3GLRange_Exit
            End If
            
            ReDim GLValueRange(1 To GLRowCount, 1 To 1)
            
                For NextRow = 1 To GLRowCount
                    If CStr(GLCodeRange(NextRow)) <> "" Then
                        RST.MoveFirst
                        RST.Find ("glCode = " & CStr(GLCodeRange(NextRow)))
                        
                        If Not RST.EOF Then
                            If RST.Fields.Item(1) = 100000511 Then
                                GLValueRange(NextRow, 1) = 0
                            ElseIf RST.Fields.Item(1) = 100000519 Then
                                GLValueRange(NextRow, 1) = 0
                            ElseIf RST.Fields.Item(1) = 100000520 Then
                                GLValueRange(NextRow, 1) = 0
                            Else
                                GLValueRange(NextRow, 1) = RST.Fields.Item(1)
                            End If
                        Else
                            RST.MoveFirst
                            ' Add to avoid summation errors when text error returned
                            GLValueRange(NextRow, 1) = 0
                        End If
                    Else
                        GLValueRange(NextRow, 1) = ""
                    End If
                    
    
                Next
            
            Set RST = Nothing
            
        End If
    End If
    
EntSQLGLCCDpRevisedBudget3GLRange_Zero:
    EntSQLGLCCDpRevisedBudget3GLRange = GLValueRange
    
    GoTo EntSQLGLCCDpRevisedBudget3GLRange_Exit
        
EntSQLGLCCDpRevisedBudget3GLRange_Error:
    If ErrStr = "" Then ErrStr = GetErrorNumStr
    EntSQLGLCCDpRevisedBudget3GLRange = ErrStr

EntSQLGLCCDpRevisedBudget3GLRange_Exit:

End Function

'**************************************************************************************************************
'**                                              Revised Budget 4                                            **
'**************************************************************************************************************

'*******************************************************************************************************
' Name:        EntSQLGLRevisedBudget4GLRange
' Description: Gets the General Ledger Revised Budget 4 value for the specified Currency, Year, Period and GLCode
'*******************************************************************************************************
Public Function EntSQLGLRevisedBudget4GLRange(Company$, TheYear%, ThePeriod%, TheCcy%, GLCodes As Range) As Variant
On Error GoTo EntSQLGLRevisedBudget4GLRange_Error
    Dim ErrStr$
    Dim DblVal As Double
    Dim Result%
    Dim stADO As String
    Dim RST As ADODB.Recordset
    Dim stSQL As String
    Dim AddVal As Double
    Dim CurrInv As Boolean
    Dim GLRange As String
    Dim GLRowRange(1000) As Double
    Dim GLCodeRange(1000) As String
    Dim GLValueRange() As Variant
    Dim GLRowCount As Double
    Dim NextRow As Double
    Dim SingleCompany As String
    Dim LPosition As Integer
    
    DoEvents
    
    Result% = 0
    
    DblVal# = 0#
    
    LPosition = 0
    CompStr$ = UCase(Company$)
    LPosition = InStr(CompStr$, ",")
    
    If LPosition <> 0 Then
        Company$ = Left(CompStr$, LPosition - 1)
    End If
    
    If ValidCompany(Company$) And ValidYear(TheYear) And ValidPeriod(ThePeriod) And ValidCcy(TheCcy%) Then
        If LocalCheckServer() Then
            
            'Check User Permissions for all companies
            CompanyList = Split(CompStr$, ",")
            For NoCompanies = 0 To UBound(CompanyList)
                Result = EntServer.CheckUserPermission(CompanyList(NoCompanies), 487)
                
                If Result <> 0 Then
                    Error Result
                    GoTo EntSQLGLRevisedBudget4GLRange_Error
                End If
            Next NoCompanies
            
            GLRowCount = 1
            
            For Each GLCodes In GLCodes.Rows
                
                If CStr(GLCodes.Value) <> "" And (GLCodes.Value > 0 And GLCodes.Value <= 2147483647) Then
                    GLRange = GLRange + CStr(GLCodes.Value) & ","
                    GLRowRange(GLRowCount) = GLCodes.Row
                    GLCodeRange(GLRowCount) = CStr(GLCodes.Value)
                End If
                
                GLRowCount = GLRowCount + 1
            Next
            
            'Correct Row Count
            GLRowCount = GLRowCount - 1
            
            'Remove extra comma off end of csv list
            GLRange = Left(GLRange, Len(GLRange) - 1)
            
            stSQL = "EXEC common.esp_GetNominalValue '" + CompStr$ + "',9," + CStr(TheYear%) + "," + CStr(ThePeriod%) + "," + CStr(TheCcy%) + ",'" + CStr(GLRange) + "','','','',0"

            OpenDBConnection (CompStr$)
            
            With CNT(CurrComp)
                .CommandTimeout = 0
                Set RST = .Execute(stSQL)
            End With
            
            If RST.RecordCount = 0 Then
                EntSQLGLRevisedBudget4GLRange = 0
                GoTo EntSQLGLRevisedBudget4GLRange_Exit
            End If
            
            ReDim GLValueRange(1 To GLRowCount, 1 To 1)
            
                For NextRow = 1 To GLRowCount
                    If CStr(GLCodeRange(NextRow)) <> "" Then
                        RST.MoveFirst
                        RST.Find ("glCode = " & CStr(GLCodeRange(NextRow)))
                        
                        If Not RST.EOF Then
                            If RST.Fields.Item(1) = 100000511 Then
                                GLValueRange(NextRow, 1) = 0
                            ElseIf RST.Fields.Item(1) = 100000519 Then
                                GLValueRange(NextRow, 1) = 0
                            ElseIf RST.Fields.Item(1) = 100000520 Then
                                GLValueRange(NextRow, 1) = 0
                            Else
                                GLValueRange(NextRow, 1) = RST.Fields.Item(1)
                            End If
                        Else
                            RST.MoveFirst
                            ' Add to avoid summation errors when text error returned
                            GLValueRange(NextRow, 1) = 0
                        End If
                    Else
                        GLValueRange(NextRow, 1) = ""
                    End If
                    
    
                Next
            
            Set RST = Nothing
            
        End If
    End If
    
EntSQLGLRevisedBudget4GLRange_Zero:
    EntSQLGLRevisedBudget4GLRange = GLValueRange
    
    GoTo EntSQLGLRevisedBudget4GLRange_Exit
        
EntSQLGLRevisedBudget4GLRange_Error:
    If ErrStr = "" Then ErrStr = GetErrorNumStr
    EntSQLGLRevisedBudget4GLRange = ErrStr

EntSQLGLRevisedBudget4GLRange_Exit:

End Function

'*******************************************************************************************************
' Name:        EntSQLGLCCRevisedBudget4GLRange
' Description: Gets the General Ledger Revised Budget 4 values for the specified Currency, Year, Period, CC and GLCodes
'*******************************************************************************************************
Public Function EntSQLGLCCRevisedBudget4GLRange(Company$, TheYear%, ThePeriod%, TheCcy%, GLCodes As Range, CCCode$) As Variant
On Error GoTo EntSQLGLCCRevisedBudget4GLRange_Error
    Dim ErrStr$
    Dim DblVal As Double
    Dim Result%
    Dim stADO As String
    Dim RST As ADODB.Recordset
    Dim stSQL As String
    Dim AddVal As Double
    Dim CurrInv As Boolean
    Dim GLRange As String
    Dim GLRowRange(1000) As Double
    Dim GLCodeRange(1000) As String
    Dim GLValueRange() As Variant
    Dim GLRowCount As Double
    Dim NextRow As Double
    Dim SingleCompany As String
    Dim LPosition As Integer
    
    DoEvents
    
    Result% = 0
    
    DblVal# = 0#
    
    LPosition = 0
    CompStr$ = UCase(Company$)
    LPosition = InStr(CompStr$, ",")
    
    If LPosition <> 0 Then
        Company$ = Left(CompStr$, LPosition - 1)
    End If
    
    If ValidCompany(Company) And ValidYear(TheYear) And ValidPeriod(ThePeriod) And ValidCcy(TheCcy%) Then
        If LocalCheckServer() Then
            
            'Check User Permissions for all companies
            CompanyList = Split(CompStr$, ",")
            For NoCompanies = 0 To UBound(CompanyList)
                Result = EntServer.CheckUserPermission(CompanyList(NoCompanies), 487)
                
                If Result <> 0 Then
                    Error Result
                    GoTo EntSQLGLCCRevisedBudget4GLRange_Error
                End If
            Next NoCompanies
            
            GLRowCount = 1
            
            For Each GLCodes In GLCodes.Rows
                
                If CStr(GLCodes.Value) <> "" And (GLCodes.Value > 0 And GLCodes.Value <= 2147483647) Then
                    GLRange = GLRange + CStr(GLCodes.Value) & ","
                    GLRowRange(GLRowCount) = GLCodes.Row
                    GLCodeRange(GLRowCount) = CStr(GLCodes.Value)
                End If
                
                GLRowCount = GLRowCount + 1
            Next
            
            'Correct Row Count
            GLRowCount = GLRowCount - 1
            
            'Remove extra comma off end of csv list
            GLRange = Left(GLRange, Len(GLRange) - 1)
            
            stSQL = "EXEC common.esp_GetNominalValue '" + CompStr$ + "',9," + CStr(TheYear%) + "," + CStr(ThePeriod%) + "," + CStr(TheCcy%) + ",'" + CStr(GLRange) + "','" + CStr(Trim(CCCode$)) + "','','C',0"

            OpenDBConnection (CompStr$)
            
            With CNT(CurrComp)
                .CommandTimeout = 0
                Set RST = .Execute(stSQL)
            End With
            
            If RST.RecordCount = 0 Then
                EntSQLGLCCRevisedBudget4GLRange = 0
                GoTo EntSQLGLCCRevisedBudget4GLRange_Exit
            End If
            
            ReDim GLValueRange(1 To GLRowCount, 1 To 1)
            
                For NextRow = 1 To GLRowCount
                    If CStr(GLCodeRange(NextRow)) <> "" Then
                        RST.MoveFirst
                        RST.Find ("glCode = " & CStr(GLCodeRange(NextRow)))
                        
                        If Not RST.EOF Then
                            If RST.Fields.Item(1) = 100000511 Then
                                GLValueRange(NextRow, 1) = 0
                            ElseIf RST.Fields.Item(1) = 100000519 Then
                                GLValueRange(NextRow, 1) = 0
                            ElseIf RST.Fields.Item(1) = 100000520 Then
                                GLValueRange(NextRow, 1) = 0
                            Else
                                GLValueRange(NextRow, 1) = RST.Fields.Item(1)
                            End If
                        Else
                            RST.MoveFirst
                            ' Add to avoid summation errors when text error returned
                            GLValueRange(NextRow, 1) = 0
                        End If
                    Else
                        GLValueRange(NextRow, 1) = ""
                    End If
                    
    
                Next
            
            Set RST = Nothing
            
        End If
    End If
    
EntSQLGLCCRevisedBudget4GLRange_Zero:
    EntSQLGLCCRevisedBudget4GLRange = GLValueRange
    
    GoTo EntSQLGLCCRevisedBudget4GLRange_Exit
        
EntSQLGLCCRevisedBudget4GLRange_Error:
    If ErrStr = "" Then ErrStr = GetErrorNumStr
    EntSQLGLCCRevisedBudget4GLRange = ErrStr

EntSQLGLCCRevisedBudget4GLRange_Exit:

End Function


'*******************************************************************************************************
' Name:        EntSQLGLDpRevisedBudget4GLRange
' Description: Gets the General Ledger Revised Budget 4 values for the specified Currency, Year, Period, Dp and GLCodes
'*******************************************************************************************************
Public Function EntSQLGLDpRevisedBudget4GLRange(Company$, TheYear%, ThePeriod%, TheCcy%, GLCodes As Range, DpCode$) As Variant
On Error GoTo EntSQLGLDpRevisedBudget4GLRange_Error
    Dim ErrStr$
    Dim DblVal As Double
    Dim Result%
    Dim stADO As String
    Dim RST As ADODB.Recordset
    Dim stSQL As String
    Dim AddVal As Double
    Dim CurrInv As Boolean
    Dim GLRange As String
    Dim GLRowRange(1000) As Double
    Dim GLCodeRange(1000) As String
    Dim GLValueRange() As Variant
    Dim GLRowCount As Double
    Dim NextRow As Double
    Dim SingleCompany As String
    Dim LPosition As Integer
    
    DoEvents
    
    Result% = 0
    
    DblVal# = 0#
    
    LPosition = 0
    CompStr$ = UCase(Company$)
    LPosition = InStr(CompStr$, ",")
    
    If LPosition <> 0 Then
        Company$ = Left(CompStr$, LPosition - 1)
    End If
    
    If ValidCompany(Company) And ValidYear(TheYear) And ValidPeriod(ThePeriod) And ValidCcy(TheCcy%) Then
        If LocalCheckServer() Then
            
            'Check User Permissions for all companies
            CompanyList = Split(CompStr$, ",")
            For NoCompanies = 0 To UBound(CompanyList)
                Result = EntServer.CheckUserPermission(CompanyList(NoCompanies), 487)
                
                If Result <> 0 Then
                    Error Result
                    GoTo EntSQLGLDpRevisedBudget4GLRange_Error
                End If
            Next NoCompanies
            
            GLRowCount = 1
            
            For Each GLCodes In GLCodes.Rows
                
                If CStr(GLCodes.Value) <> "" And (GLCodes.Value > 0 And GLCodes.Value <= 2147483647) Then
                    GLRange = GLRange + CStr(GLCodes.Value) & ","
                    GLRowRange(GLRowCount) = GLCodes.Row
                    GLCodeRange(GLRowCount) = CStr(GLCodes.Value)
                End If
                
                GLRowCount = GLRowCount + 1
            Next
            
            'Correct Row Count
            GLRowCount = GLRowCount - 1
            
            'Remove extra comma off end of csv list
            GLRange = Left(GLRange, Len(GLRange) - 1)
            
            stSQL = "EXEC common.esp_GetNominalValue '" + CompStr$ + "',9," + CStr(TheYear%) + "," + CStr(ThePeriod%) + "," + CStr(TheCcy%) + ",'" + CStr(GLRange) + "','','" + CStr(Trim(DpCode$)) + "','D',0"

            OpenDBConnection (CompStr$)
            
            With CNT(CurrComp)
                .CommandTimeout = 0
                Set RST = .Execute(stSQL)
            End With
            
            If RST.RecordCount = 0 Then
                EntSQLGLDpRevisedBudget4GLRange = 0
                GoTo EntSQLGLDpRevisedBudget4GLRange_Exit
            End If
            
            ReDim GLValueRange(1 To GLRowCount, 1 To 1)
            
                For NextRow = 1 To GLRowCount
                    If CStr(GLCodeRange(NextRow)) <> "" Then
                        RST.MoveFirst
                        RST.Find ("glCode = " & CStr(GLCodeRange(NextRow)))
                        
                        If Not RST.EOF Then
                            If RST.Fields.Item(1) = 100000511 Then
                                GLValueRange(NextRow, 1) = 0
                            ElseIf RST.Fields.Item(1) = 100000519 Then
                                GLValueRange(NextRow, 1) = 0
                            ElseIf RST.Fields.Item(1) = 100000520 Then
                                GLValueRange(NextRow, 1) = 0
                            Else
                                GLValueRange(NextRow, 1) = RST.Fields.Item(1)
                            End If
                        Else
                            RST.MoveFirst
                            ' Add to avoid summation errors when text error returned
                            GLValueRange(NextRow, 1) = 0
                        End If
                    Else
                        GLValueRange(NextRow, 1) = ""
                    End If
                    
    
                Next
            
            Set RST = Nothing
            
        End If
    End If
    
EntSQLGLDpRevisedBudget4GLRange_Zero:
    EntSQLGLDpRevisedBudget4GLRange = GLValueRange
    
    GoTo EntSQLGLDpRevisedBudget4GLRange_Exit
        
EntSQLGLDpRevisedBudget4GLRange_Error:
    If ErrStr = "" Then ErrStr = GetErrorNumStr
    EntSQLGLDpRevisedBudget4GLRange = ErrStr

EntSQLGLDpRevisedBudget4GLRange_Exit:

End Function


'*******************************************************************************************************
' Name:        EntSQLGLCCDpRevisedBudget4GLRange
' Description: Gets the General Ledger Revised Budget 4 values for the specified Currency, Year, Period, CC, Dp and GLCodes
'*******************************************************************************************************
Public Function EntSQLGLCCDpRevisedBudget4GLRange(Company$, TheYear%, ThePeriod%, TheCcy%, GLCodes As Range, CCCode$, DpCode$) As Variant
On Error GoTo EntSQLGLCCDpRevisedBudget4GLRange_Error
    Dim ErrStr$
    Dim DblVal As Double
    Dim Result%
    Dim stADO As String
    Dim RST As ADODB.Recordset
    Dim stSQL As String
    Dim AddVal As Double
    Dim CurrInv As Boolean
    Dim GLRange As String
    Dim GLRowRange(1000) As Double
    Dim GLCodeRange(1000) As String
    Dim GLValueRange() As Variant
    Dim GLRowCount As Double
    Dim NextRow As Double
    Dim SingleCompany As String
    Dim LPosition As Integer
    
    DoEvents
    
    Result% = 0
    
    DblVal# = 0#
    
    LPosition = 0
    CompStr$ = UCase(Company$)
    LPosition = InStr(CompStr$, ",")
    
    If LPosition <> 0 Then
        Company$ = Left(CompStr$, LPosition - 1)
    End If
    
    If ValidCompany(Company) And ValidYear(TheYear) And ValidPeriod(ThePeriod) And ValidCcy(TheCcy%) Then
        If LocalCheckServer() Then
            
            'Check User Permissions for all companies
            CompanyList = Split(CompStr$, ",")
            For NoCompanies = 0 To UBound(CompanyList)
                Result = EntServer.CheckUserPermission(CompanyList(NoCompanies), 487)
                
                If Result <> 0 Then
                    Error Result
                    GoTo EntSQLGLCCDpRevisedBudget4GLRange_Error
                End If
            Next NoCompanies
            
            GLRowCount = 1
            
            For Each GLCodes In GLCodes.Rows
                
                If CStr(GLCodes.Value) <> "" And (GLCodes.Value > 0 And GLCodes.Value <= 2147483647) Then
                    GLRange = GLRange + CStr(GLCodes.Value) & ","
                    GLRowRange(GLRowCount) = GLCodes.Row
                    GLCodeRange(GLRowCount) = CStr(GLCodes.Value)
                End If
                
                GLRowCount = GLRowCount + 1
            Next
            
            'Correct Row Count
            GLRowCount = GLRowCount - 1
            
            'Remove extra comma off end of csv list
            GLRange = Left(GLRange, Len(GLRange) - 1)
            
            stSQL = "EXEC common.esp_GetNominalValue '" + CompStr$ + "',9," + CStr(TheYear%) + "," + CStr(ThePeriod%) + "," + CStr(TheCcy%) + ",'" + CStr(GLRange) + "','" + CStr(Trim(CCCode$)) + "','" + CStr(Trim(DpCode$)) + "','C',0"
            
            OpenDBConnection (CompStr$)
            
            With CNT(CurrComp)
                .CommandTimeout = 0
                Set RST = .Execute(stSQL)
            End With
            
            If RST.RecordCount = 0 Then
                EntSQLGLCCDpRevisedBudget4GLRange = 0
                GoTo EntSQLGLCCDpRevisedBudget4GLRange_Exit
            End If
            
            ReDim GLValueRange(1 To GLRowCount, 1 To 1)
            
                For NextRow = 1 To GLRowCount
                    If CStr(GLCodeRange(NextRow)) <> "" Then
                        RST.MoveFirst
                        RST.Find ("glCode = " & CStr(GLCodeRange(NextRow)))
                        
                        If Not RST.EOF Then
                            If RST.Fields.Item(1) = 100000511 Then
                                GLValueRange(NextRow, 1) = 0
                            ElseIf RST.Fields.Item(1) = 100000519 Then
                                GLValueRange(NextRow, 1) = 0
                            ElseIf RST.Fields.Item(1) = 100000520 Then
                                GLValueRange(NextRow, 1) = 0
                            Else
                                GLValueRange(NextRow, 1) = RST.Fields.Item(1)
                            End If
                        Else
                            RST.MoveFirst
                            ' Add to avoid summation errors when text error returned
                            GLValueRange(NextRow, 1) = 0
                        End If
                    Else
                        GLValueRange(NextRow, 1) = ""
                    End If
                    
    
                Next
            
            Set RST = Nothing
            
        End If
    End If
    
EntSQLGLCCDpRevisedBudget4GLRange_Zero:
    EntSQLGLCCDpRevisedBudget4GLRange = GLValueRange
    
    GoTo EntSQLGLCCDpRevisedBudget4GLRange_Exit
        
EntSQLGLCCDpRevisedBudget4GLRange_Error:
    If ErrStr = "" Then ErrStr = GetErrorNumStr
    EntSQLGLCCDpRevisedBudget4GLRange = ErrStr

EntSQLGLCCDpRevisedBudget4GLRange_Exit:

End Function

'**************************************************************************************************************
'**                                              Revised Budget 5                                            **
'**************************************************************************************************************

'*******************************************************************************************************
' Name:        EntSQLGLRevisedBudget5GLRange
' Description: Gets the General Ledger Revised Budget 5 value for the specified Currency, Year, Period and GLCode
'*******************************************************************************************************
Public Function EntSQLGLRevisedBudget5GLRange(Company$, TheYear%, ThePeriod%, TheCcy%, GLCodes As Range) As Variant
On Error GoTo EntSQLGLRevisedBudget5GLRange_Error
    Dim ErrStr$
    Dim DblVal As Double
    Dim Result%
    Dim stADO As String
    Dim RST As ADODB.Recordset
    Dim stSQL As String
    Dim AddVal As Double
    Dim CurrInv As Boolean
    Dim GLRange As String
    Dim GLRowRange(1000) As Double
    Dim GLCodeRange(1000) As String
    Dim GLValueRange() As Variant
    Dim GLRowCount As Double
    Dim NextRow As Double
    Dim SingleCompany As String
    Dim LPosition As Integer
    
    DoEvents
    
    Result% = 0
    
    DblVal# = 0#
    
    LPosition = 0
    CompStr$ = UCase(Company$)
    LPosition = InStr(CompStr$, ",")
    
    If LPosition <> 0 Then
        Company$ = Left(CompStr$, LPosition - 1)
    End If
    
    If ValidCompany(Company$) And ValidYear(TheYear) And ValidPeriod(ThePeriod) And ValidCcy(TheCcy%) Then
        If LocalCheckServer() Then
            
            'Check User Permissions for all companies
            CompanyList = Split(CompStr$, ",")
            For NoCompanies = 0 To UBound(CompanyList)
                Result = EntServer.CheckUserPermission(CompanyList(NoCompanies), 487)
                
                If Result <> 0 Then
                    Error Result
                    GoTo EntSQLGLRevisedBudget5GLRange_Error
                End If
            Next NoCompanies
            
            GLRowCount = 1
            
            For Each GLCodes In GLCodes.Rows
                
                If CStr(GLCodes.Value) <> "" And (GLCodes.Value > 0 And GLCodes.Value <= 2147483647) Then
                    GLRange = GLRange + CStr(GLCodes.Value) & ","
                    GLRowRange(GLRowCount) = GLCodes.Row
                    GLCodeRange(GLRowCount) = CStr(GLCodes.Value)
                End If
                
                GLRowCount = GLRowCount + 1
            Next
            
            'Correct Row Count
            GLRowCount = GLRowCount - 1
            
            'Remove extra comma off end of csv list
            GLRange = Left(GLRange, Len(GLRange) - 1)
            
            stSQL = "EXEC common.esp_GetNominalValue '" + CompStr$ + "',10," + CStr(TheYear%) + "," + CStr(ThePeriod%) + "," + CStr(TheCcy%) + ",'" + CStr(GLRange) + "','','','',0"

            OpenDBConnection (CompStr$)
            
            With CNT(CurrComp)
                .CommandTimeout = 0
                Set RST = .Execute(stSQL)
            End With
            
            If RST.RecordCount = 0 Then
                EntSQLGLRevisedBudget5GLRange = 0
                GoTo EntSQLGLRevisedBudget5GLRange_Exit
            End If
            
            ReDim GLValueRange(1 To GLRowCount, 1 To 1)
            
                For NextRow = 1 To GLRowCount
                    If CStr(GLCodeRange(NextRow)) <> "" Then
                        RST.MoveFirst
                        RST.Find ("glCode = " & CStr(GLCodeRange(NextRow)))
                        
                        If Not RST.EOF Then
                            If RST.Fields.Item(1) = 100000511 Then
                                GLValueRange(NextRow, 1) = 0
                            ElseIf RST.Fields.Item(1) = 100000519 Then
                                GLValueRange(NextRow, 1) = 0
                            ElseIf RST.Fields.Item(1) = 100000520 Then
                                GLValueRange(NextRow, 1) = 0
                            Else
                                GLValueRange(NextRow, 1) = RST.Fields.Item(1)
                            End If
                        Else
                            RST.MoveFirst
                            ' Add to avoid summation errors when text error returned
                            GLValueRange(NextRow, 1) = 0
                        End If
                    Else
                        GLValueRange(NextRow, 1) = ""
                    End If
                    
    
                Next
            
            Set RST = Nothing
            
        End If
    End If
    
EntSQLGLRevisedBudget5GLRange_Zero:
    EntSQLGLRevisedBudget5GLRange = GLValueRange
    
    GoTo EntSQLGLRevisedBudget5GLRange_Exit
        
EntSQLGLRevisedBudget5GLRange_Error:
    If ErrStr = "" Then ErrStr = GetErrorNumStr
    EntSQLGLRevisedBudget5GLRange = ErrStr

EntSQLGLRevisedBudget5GLRange_Exit:

End Function

'*******************************************************************************************************
' Name:        EntSQLGLCCRevisedBudget5GLRange
' Description: Gets the General Ledger Revised Budget 5 values for the specified Currency, Year, Period, CC and GLCodes
'*******************************************************************************************************
Public Function EntSQLGLCCRevisedBudget5GLRange(Company$, TheYear%, ThePeriod%, TheCcy%, GLCodes As Range, CCCode$) As Variant
On Error GoTo EntSQLGLCCRevisedBudget5GLRange_Error
    Dim ErrStr$
    Dim DblVal As Double
    Dim Result%
    Dim stADO As String
    Dim RST As ADODB.Recordset
    Dim stSQL As String
    Dim AddVal As Double
    Dim CurrInv As Boolean
    Dim GLRange As String
    Dim GLRowRange(1000) As Double
    Dim GLCodeRange(1000) As String
    Dim GLValueRange() As Variant
    Dim GLRowCount As Double
    Dim NextRow As Double
    Dim SingleCompany As String
    Dim LPosition As Integer
    
    DoEvents
    
    Result% = 0
    
    DblVal# = 0#
    
    LPosition = 0
    CompStr$ = UCase(Company$)
    LPosition = InStr(CompStr$, ",")
    
    If LPosition <> 0 Then
        Company$ = Left(CompStr$, LPosition - 1)
    End If
    
    If ValidCompany(Company) And ValidYear(TheYear) And ValidPeriod(ThePeriod) And ValidCcy(TheCcy%) Then
        If LocalCheckServer() Then
            
            'Check User Permissions for all companies
            CompanyList = Split(CompStr$, ",")
            For NoCompanies = 0 To UBound(CompanyList)
                Result = EntServer.CheckUserPermission(CompanyList(NoCompanies), 487)
                
                If Result <> 0 Then
                    Error Result
                    GoTo EntSQLGLCCRevisedBudget5GLRange_Error
                End If
            Next NoCompanies
            
            GLRowCount = 1
            
            For Each GLCodes In GLCodes.Rows
                
                If CStr(GLCodes.Value) <> "" And (GLCodes.Value > 0 And GLCodes.Value <= 2147483647) Then
                    GLRange = GLRange + CStr(GLCodes.Value) & ","
                    GLRowRange(GLRowCount) = GLCodes.Row
                    GLCodeRange(GLRowCount) = CStr(GLCodes.Value)
                End If
                
                GLRowCount = GLRowCount + 1
            Next
            
            'Correct Row Count
            GLRowCount = GLRowCount - 1
            
            'Remove extra comma off end of csv list
            GLRange = Left(GLRange, Len(GLRange) - 1)
            
            stSQL = "EXEC common.esp_GetNominalValue '" + CompStr$ + "',10," + CStr(TheYear%) + "," + CStr(ThePeriod%) + "," + CStr(TheCcy%) + ",'" + CStr(GLRange) + "','" + CStr(Trim(CCCode$)) + "','','C',0"

            OpenDBConnection (CompStr$)
            
            With CNT(CurrComp)
                .CommandTimeout = 0
                Set RST = .Execute(stSQL)
            End With
            
            If RST.RecordCount = 0 Then
                EntSQLGLCCRevisedBudget5GLRange = 0
                GoTo EntSQLGLCCRevisedBudget5GLRange_Exit
            End If
            
            ReDim GLValueRange(1 To GLRowCount, 1 To 1)
            
                For NextRow = 1 To GLRowCount
                    If CStr(GLCodeRange(NextRow)) <> "" Then
                        RST.MoveFirst
                        RST.Find ("glCode = " & CStr(GLCodeRange(NextRow)))
                        
                        If Not RST.EOF Then
                            If RST.Fields.Item(1) = 100000511 Then
                                GLValueRange(NextRow, 1) = 0
                            ElseIf RST.Fields.Item(1) = 100000519 Then
                                GLValueRange(NextRow, 1) = 0
                            ElseIf RST.Fields.Item(1) = 100000520 Then
                                GLValueRange(NextRow, 1) = 0
                            Else
                                GLValueRange(NextRow, 1) = RST.Fields.Item(1)
                            End If
                        Else
                            RST.MoveFirst
                            ' Add to avoid summation errors when text error returned
                            GLValueRange(NextRow, 1) = 0
                        End If
                    Else
                        GLValueRange(NextRow, 1) = ""
                    End If
                    
    
                Next
            
            Set RST = Nothing
            
        End If
    End If
    
EntSQLGLCCRevisedBudget5GLRange_Zero:
    EntSQLGLCCRevisedBudget5GLRange = GLValueRange
    
    GoTo EntSQLGLCCRevisedBudget5GLRange_Exit
        
EntSQLGLCCRevisedBudget5GLRange_Error:
    If ErrStr = "" Then ErrStr = GetErrorNumStr
    EntSQLGLCCRevisedBudget5GLRange = ErrStr

EntSQLGLCCRevisedBudget5GLRange_Exit:

End Function


'*******************************************************************************************************
' Name:        EntSQLGLDpRevisedBudget5GLRange
' Description: Gets the General Ledger Revised Budget 5 values for the specified Currency, Year, Period, Dp and GLCodes
'*******************************************************************************************************
Public Function EntSQLGLDpRevisedBudget5GLRange(Company$, TheYear%, ThePeriod%, TheCcy%, GLCodes As Range, DpCode$) As Variant
On Error GoTo EntSQLGLDpRevisedBudget5GLRange_Error
    Dim ErrStr$
    Dim DblVal As Double
    Dim Result%
    Dim stADO As String
    Dim RST As ADODB.Recordset
    Dim stSQL As String
    Dim AddVal As Double
    Dim CurrInv As Boolean
    Dim GLRange As String
    Dim GLRowRange(1000) As Double
    Dim GLCodeRange(1000) As String
    Dim GLValueRange() As Variant
    Dim GLRowCount As Double
    Dim NextRow As Double
    Dim SingleCompany As String
    Dim LPosition As Integer
    
    DoEvents
    
    Result% = 0
    
    DblVal# = 0#
    
    LPosition = 0
    CompStr$ = UCase(Company$)
    LPosition = InStr(CompStr$, ",")
    
    If LPosition <> 0 Then
        Company$ = Left(CompStr$, LPosition - 1)
    End If
    
    If ValidCompany(Company) And ValidYear(TheYear) And ValidPeriod(ThePeriod) And ValidCcy(TheCcy%) Then
        If LocalCheckServer() Then
            
            'Check User Permissions for all companies
            CompanyList = Split(CompStr$, ",")
            For NoCompanies = 0 To UBound(CompanyList)
                Result = EntServer.CheckUserPermission(CompanyList(NoCompanies), 487)
                
                If Result <> 0 Then
                    Error Result
                    GoTo EntSQLGLDpRevisedBudget5GLRange_Error
                End If
            Next NoCompanies
            
            GLRowCount = 1
            
            For Each GLCodes In GLCodes.Rows
                
                If CStr(GLCodes.Value) <> "" And (GLCodes.Value > 0 And GLCodes.Value <= 2147483647) Then
                    GLRange = GLRange + CStr(GLCodes.Value) & ","
                    GLRowRange(GLRowCount) = GLCodes.Row
                    GLCodeRange(GLRowCount) = CStr(GLCodes.Value)
                End If
                
                GLRowCount = GLRowCount + 1
            Next
            
            'Correct Row Count
            GLRowCount = GLRowCount - 1
            
            'Remove extra comma off end of csv list
            GLRange = Left(GLRange, Len(GLRange) - 1)
            
            stSQL = "EXEC common.esp_GetNominalValue '" + CompStr$ + "',10," + CStr(TheYear%) + "," + CStr(ThePeriod%) + "," + CStr(TheCcy%) + ",'" + CStr(GLRange) + "','','" + CStr(Trim(DpCode$)) + "','D',0"

            OpenDBConnection (CompStr$)
            
            With CNT(CurrComp)
                .CommandTimeout = 0
                Set RST = .Execute(stSQL)
            End With
            
            If RST.RecordCount = 0 Then
                EntSQLGLDpRevisedBudget5GLRange = 0
                GoTo EntSQLGLDpRevisedBudget5GLRange_Exit
            End If
            
            ReDim GLValueRange(1 To GLRowCount, 1 To 1)
            
                For NextRow = 1 To GLRowCount
                    If CStr(GLCodeRange(NextRow)) <> "" Then
                        RST.MoveFirst
                        RST.Find ("glCode = " & CStr(GLCodeRange(NextRow)))
                        
                        If Not RST.EOF Then
                            If RST.Fields.Item(1) = 100000511 Then
                                GLValueRange(NextRow, 1) = 0
                            ElseIf RST.Fields.Item(1) = 100000519 Then
                                GLValueRange(NextRow, 1) = 0
                            ElseIf RST.Fields.Item(1) = 100000520 Then
                                GLValueRange(NextRow, 1) = 0
                            Else
                                GLValueRange(NextRow, 1) = RST.Fields.Item(1)
                            End If
                        Else
                            RST.MoveFirst
                            ' Add to avoid summation errors when text error returned
                            GLValueRange(NextRow, 1) = 0
                        End If
                    Else
                        GLValueRange(NextRow, 1) = ""
                    End If
                    
    
                Next
            
            Set RST = Nothing
            
        End If
    End If
    
EntSQLGLDpRevisedBudget5GLRange_Zero:
    EntSQLGLDpRevisedBudget5GLRange = GLValueRange
    
    GoTo EntSQLGLDpRevisedBudget5GLRange_Exit
        
EntSQLGLDpRevisedBudget5GLRange_Error:
    If ErrStr = "" Then ErrStr = GetErrorNumStr
    EntSQLGLDpRevisedBudget5GLRange = ErrStr

EntSQLGLDpRevisedBudget5GLRange_Exit:

End Function


'*******************************************************************************************************
' Name:        EntSQLGLCCDpRevisedBudget5GLRange
' Description: Gets the General Ledger Revised Budget 5 values for the specified Currency, Year, Period, CC, Dp and GLCodes
'*******************************************************************************************************
Public Function EntSQLGLCCDpRevisedBudget5GLRange(Company$, TheYear%, ThePeriod%, TheCcy%, GLCodes As Range, CCCode$, DpCode$) As Variant
On Error GoTo EntSQLGLCCDpRevisedBudget5GLRange_Error
    Dim ErrStr$
    Dim DblVal As Double
    Dim Result%
    Dim stADO As String
    Dim RST As ADODB.Recordset
    Dim stSQL As String
    Dim AddVal As Double
    Dim CurrInv As Boolean
    Dim GLRange As String
    Dim GLRowRange(1000) As Double
    Dim GLCodeRange(1000) As String
    Dim GLValueRange() As Variant
    Dim GLRowCount As Double
    Dim NextRow As Double
    Dim SingleCompany As String
    Dim LPosition As Integer
    
    DoEvents
    
    Result% = 0
    
    DblVal# = 0#
    
    LPosition = 0
    CompStr$ = UCase(Company$)
    LPosition = InStr(CompStr$, ",")
    
    If LPosition <> 0 Then
        Company$ = Left(CompStr$, LPosition - 1)
    End If
    
    If ValidCompany(Company) And ValidYear(TheYear) And ValidPeriod(ThePeriod) And ValidCcy(TheCcy%) Then
        If LocalCheckServer() Then
            
            'Check User Permissions for all companies
            CompanyList = Split(CompStr$, ",")
            For NoCompanies = 0 To UBound(CompanyList)
                Result = EntServer.CheckUserPermission(CompanyList(NoCompanies), 487)
                
                If Result <> 0 Then
                    Error Result
                    GoTo EntSQLGLCCDpRevisedBudget5GLRange_Error
                End If
            Next NoCompanies
            
            GLRowCount = 1
            
            For Each GLCodes In GLCodes.Rows
                
                If CStr(GLCodes.Value) <> "" And (GLCodes.Value > 0 And GLCodes.Value <= 2147483647) Then
                    GLRange = GLRange + CStr(GLCodes.Value) & ","
                    GLRowRange(GLRowCount) = GLCodes.Row
                    GLCodeRange(GLRowCount) = CStr(GLCodes.Value)
                End If
                
                GLRowCount = GLRowCount + 1
            Next
            
            'Correct Row Count
            GLRowCount = GLRowCount - 1
            
            'Remove extra comma off end of csv list
            GLRange = Left(GLRange, Len(GLRange) - 1)
            
            stSQL = "EXEC common.esp_GetNominalValue '" + CompStr$ + "',10," + CStr(TheYear%) + "," + CStr(ThePeriod%) + "," + CStr(TheCcy%) + ",'" + CStr(GLRange) + "','" + CStr(Trim(CCCode$)) + "','" + CStr(Trim(DpCode$)) + "','C',0"
            
            OpenDBConnection (CompStr$)
            
            With CNT(CurrComp)
                .CommandTimeout = 0
                Set RST = .Execute(stSQL)
            End With
            
            If RST.RecordCount = 0 Then
                EntSQLGLCCDpRevisedBudget5GLRange = 0
                GoTo EntSQLGLCCDpRevisedBudget5GLRange_Exit
            End If
            
            ReDim GLValueRange(1 To GLRowCount, 1 To 1)
            
                For NextRow = 1 To GLRowCount
                    If CStr(GLCodeRange(NextRow)) <> "" Then
                        RST.MoveFirst
                        RST.Find ("glCode = " & CStr(GLCodeRange(NextRow)))
                        
                        If Not RST.EOF Then
                            If RST.Fields.Item(1) = 100000511 Then
                                GLValueRange(NextRow, 1) = 0
                            ElseIf RST.Fields.Item(1) = 100000519 Then
                                GLValueRange(NextRow, 1) = 0
                            ElseIf RST.Fields.Item(1) = 100000520 Then
                                GLValueRange(NextRow, 1) = 0
                            Else
                                GLValueRange(NextRow, 1) = RST.Fields.Item(1)
                            End If
                        Else
                            RST.MoveFirst
                            ' Add to avoid summation errors when text error returned
                            GLValueRange(NextRow, 1) = 0
                        End If
                    Else
                        GLValueRange(NextRow, 1) = ""
                    End If
                    
    
                Next
            
            Set RST = Nothing
            
        End If
    End If
    
EntSQLGLCCDpRevisedBudget5GLRange_Zero:
    EntSQLGLCCDpRevisedBudget5GLRange = GLValueRange
    
    GoTo EntSQLGLCCDpRevisedBudget5GLRange_Exit
        
EntSQLGLCCDpRevisedBudget5GLRange_Error:
    If ErrStr = "" Then ErrStr = GetErrorNumStr
    EntSQLGLCCDpRevisedBudget5GLRange = ErrStr

EntSQLGLCCDpRevisedBudget5GLRange_Exit:

End Function


Attribute VB_Name = "JCGetJCRanges"
Option Explicit
Public Message As String

'**********************************************************************************
' Name:        EntSQLJCAnalActualJCRange
' Description: Gets the Actual Amount for the Job Codes and Analysis Code requested.
'**********************************************************************************
Public Function EntSQLJCAnalActualJCRange(Company$, TheYear%, ThePeriod%, TheCcy%, JobCodes As Range, AnalCode$, PostComm$) As Variant
Attribute EntSQLJCAnalActualJCRange.VB_Description = "This function gets the Actual Amount for the Job Codes, Analysis Code and Posting Type requested."
On Error GoTo EntSQLJCAnalActualJCRange_Error
    Dim ErrStr$, CCNT%
    Dim DblVal As Double
    Dim Result%
    Dim stADO As String
    Dim RST As ADODB.Recordset
    Dim stSQL As String
    Dim AddVal As Double
    Dim CurrInv As Boolean
    Dim PostCommSQL As String
    Dim JobRange As String
    Dim JobRowRange(10000) As Double
    Dim JobCodeRange(10000) As String
    Dim JobValueRange() As Variant
    Dim JobRowCount As Double
    Dim NextRow As Double

    Result% = 0
    
    DblVal# = 0#
    
    CompStr$ = UCase(Company$)
    
    If ValidCompany(Company) And ValidYear(TheYear) And ValidPeriod(ThePeriod) And ValidCcy(TheCcy%) And ValidPC(PostComm$) Then
        If LocalCheckServer() Then
            
            'Check User Permissions
            Result = EntServer.CheckUserPermission(Company$, 515)
            
            If Result <> 0 Then
                Error Result
                GoTo EntSQLJCAnalActualJCRange_Error
            End If
            
            'Concatenate Job Code Range into CSV for passing to SQL select statement
            JobRowCount = 1
            
            For Each JobCodes In JobCodes.Rows
                
                If CStr(JobCodes.Value) <> "" Then
                    JobRange = JobRange + CStr(JobCodes.Value) & "','"
                    JobRowRange(JobRowCount) = JobCodes.Row
                    JobCodeRange(JobRowCount) = CStr(JobCodes.Value)
                End If
                
                JobRowCount = JobRowCount + 1
            Next
            
            'Correct Row Count
            JobRowCount = JobRowCount - 1
            
            'Remove extra comma off end of csv list
            JobRange = Left(JobRange, Len(JobRange) - 2)
            
            JobRange = "'" & JobRange
            
            stSQL = "SELECT JobCode," + CStr(Trim(CompStr$)) + ".ifn_GetJCValue(6,'B',10,'" + UCase(PostComm$) + "'," + _
                            CStr(TheYear%) + "," + CStr(ThePeriod%) + "," + CStr(TheCcy%) + ",JobCode" + _
                            ",'" + CStr(Trim(UCase(AnalCode$))) + "') " & _
                            "FROM " + CStr(Trim(CompStr$)) + ".JOBHEAD WHERE JobCode IN (" & JobRange & ")"
        
            OpenDBConnection (CompStr$)
            
            With CNT(CurrComp)
                .CommandTimeout = 0
                Set RST = .Execute(stSQL)
            End With
            
            If RST.RecordCount = 0 Then
                EntSQLJCAnalActualJCRange = 0
                GoTo EntSQLJCAnalActualJCRange_Exit
            End If
            
            ReDim JobValueRange(1 To JobRowCount, 1 To 1)
            
                For NextRow = 1 To JobRowCount
                    If CStr(JobCodeRange(NextRow)) <> "" Then
                        RST.MoveFirst
                        RST.Find ("JobCode = '" & CStr(JobCodeRange(NextRow))) & "'"
                        
                        If Not RST.EOF Then
                            If RST.Fields.Item(1) = 100000522 Then
                                Error 522
                                GoTo EntSQLJCAnalActualJCRange_Error
                            Else
                                JobValueRange(NextRow, 1) = RST.Fields.Item(1)
                            End If
                        Else
                            RST.MoveFirst
                            ' Add to avoid summation errors when text error returned
                            JobValueRange(NextRow, 1) = 0
                        End If
                    Else
                        JobValueRange(NextRow, 1) = ""
                    End If
                    
    
                Next
            Set RST = Nothing
            
        End If
    End If
        
EntSQLJCAnalActualJCRange_Zero:
    EntSQLJCAnalActualJCRange = JobValueRange
    
    GoTo EntSQLJCAnalActualJCRange_Exit
        
EntSQLJCAnalActualJCRange_Error:
    If ErrStr = "" Then ErrStr = GetErrorNumStr
    EntSQLJCAnalActualJCRange = ErrStr

EntSQLJCAnalActualJCRange_Exit:
    
End Function

'**********************************************************************************
' Name:        EntSQLJCAnalActualQtyJCRange
' Description: Gets the Actual Qty Amount for the Job Codes and Analysis Code requested.
'**********************************************************************************
Public Function EntSQLJCAnalActualQtyJCRange(Company$, TheYear%, ThePeriod%, TheCcy%, JobCodes As Range, AnalCode$) As Variant
Attribute EntSQLJCAnalActualQtyJCRange.VB_Description = "This function gets the Actual Quantity for the Job Codes and Analysis Code requested."
On Error GoTo EntSQLJCAnalActualQtyJCRange_Error
    Dim ErrStr$, CCNT%
    Dim DblVal As Double
    Dim Result%
    Dim stADO As String
    Dim RST As ADODB.Recordset
    Dim stSQL As String
    Dim AddVal As Double
    Dim CurrInv As Boolean
    Dim PostCommSQL As String
    Dim JobRange As String
    Dim JobRowRange(10000) As Double
    Dim JobCodeRange(10000) As String
    Dim JobValueRange() As Variant
    Dim JobRowCount As Double
    Dim NextRow As Double

    Result% = 0
    
    DblVal# = 0#
    
    CompStr$ = UCase(Company$)
    
    If ValidCompany(Company) And ValidYear(TheYear) And ValidPeriod(ThePeriod) And ValidCcy(TheCcy%) Then
        If LocalCheckServer() Then
            
            'Check User Permissions
            Result = EntServer.CheckUserPermission(Company$, 515)
            
            If Result <> 0 Then
                Error Result
                GoTo EntSQLJCAnalActualQtyJCRange_Error
            End If
            
            'Concatenate Job Code Range into CSV for passing to SQL select statement
            JobRowCount = 1
            
            For Each JobCodes In JobCodes.Rows
                
                If CStr(JobCodes.Value) <> "" Then
                    JobRange = JobRange + CStr(JobCodes.Value) & "','"
                    JobRowRange(JobRowCount) = JobCodes.Row
                    JobCodeRange(JobRowCount) = CStr(JobCodes.Value)
                End If
                
                JobRowCount = JobRowCount + 1
            Next
            
            'Correct Row Count
            JobRowCount = JobRowCount - 1
            
            'Remove extra comma off end of csv list
            JobRange = Left(JobRange, Len(JobRange) - 2)
            
            JobRange = "'" & JobRange
            
            stSQL = "SELECT JobCode," + CStr(Trim(CompStr$)) + ".ifn_GetJCValue(5,'B',10,'P'," + _
                            CStr(TheYear%) + "," + CStr(ThePeriod%) + "," + CStr(TheCcy%) + ",JobCode" + _
                            ",'" + CStr(Trim(UCase(AnalCode$))) + "') " & _
                            "FROM " + CStr(Trim(CompStr$)) + ".JOBHEAD WHERE JobCode IN (" & JobRange & ")"
        
            OpenDBConnection (CompStr$)
            
            With CNT(CurrComp)
                .CommandTimeout = 0
                Set RST = .Execute(stSQL)
            End With
            
            If RST.RecordCount = 0 Then
                EntSQLJCAnalActualQtyJCRange = 0
                GoTo EntSQLJCAnalActualQtyJCRange_Exit
            End If
            
            ReDim JobValueRange(1 To JobRowCount, 1 To 1)
            
                For NextRow = 1 To JobRowCount
                    If CStr(JobCodeRange(NextRow)) <> "" Then
                        RST.MoveFirst
                        RST.Find ("JobCode = '" & CStr(JobCodeRange(NextRow))) & "'"
                        
                        If Not RST.EOF Then
                            If RST.Fields.Item(1) = 100000522 Then
                                Error 522
                                GoTo EntSQLJCAnalActualQtyJCRange_Error
                            Else
                                JobValueRange(NextRow, 1) = RST.Fields.Item(1)
                            End If
                        Else
                            RST.MoveFirst
                            ' Add to avoid summation errors when text error returned
                            JobValueRange(NextRow, 1) = 0
                        End If
                    Else
                        JobValueRange(NextRow, 1) = ""
                    End If
                    
    
                Next
            Set RST = Nothing
            
        End If
    End If
        
EntSQLJCAnalActualQtyJCRange_Zero:
    EntSQLJCAnalActualQtyJCRange = JobValueRange
    
    GoTo EntSQLJCAnalActualQtyJCRange_Exit
        
EntSQLJCAnalActualQtyJCRange_Error:
    If ErrStr = "" Then ErrStr = GetErrorNumStr
    EntSQLJCAnalActualQtyJCRange = ErrStr

EntSQLJCAnalActualQtyJCRange_Exit:
    
End Function


'**********************************************************************************
' Name:        EntSQLJCAnalBudgetJCRange
' Description: Gets the Budget Amount for the Job Codes and Analysis Code requested.
'**********************************************************************************
Public Function EntSQLJCAnalBudgetJCRange(Company$, TheYear%, ThePeriod%, TheCcy%, JobCodes As Range, AnalCode$, PostComm$) As Variant
Attribute EntSQLJCAnalBudgetJCRange.VB_Description = "This function gets the Budget Amount for the Job Codes, Analysis Code and Posting type requested."
On Error GoTo EntSQLJCAnalBudgetJCRange_Error
    Dim ErrStr$, CCNT%
    Dim DblVal As Double
    Dim Result%
    Dim stADO As String
    Dim RST As ADODB.Recordset
    Dim stSQL As String
    Dim AddVal As Double
    Dim CurrInv As Boolean
    Dim PostCommSQL As String
    Dim JobRange As String
    Dim JobRowRange(10000) As Double
    Dim JobCodeRange(10000) As String
    Dim JobValueRange() As Variant
    Dim JobRowCount As Double
    Dim NextRow As Double

    Result% = 0
    
    DblVal# = 0#
    
    CompStr$ = UCase(Company$)
    
    If ValidCompany(Company) And ValidYear(TheYear) And ValidPeriod(ThePeriod) And ValidCcy(TheCcy%) And ValidPC(PostComm$) Then
        If LocalCheckServer() Then
            
            'Check User Permissions
            Result = EntServer.CheckUserPermission(Company$, 515)
            
            If Result <> 0 Then
                Error Result
                GoTo EntSQLJCAnalBudgetJCRange_Error
            End If
            
            'Concatenate Job Code Range into CSV for passing to SQL select statement
            JobRowCount = 1
            
            For Each JobCodes In JobCodes.Rows
                
                If CStr(JobCodes.Value) <> "" Then
                    JobRange = JobRange + CStr(JobCodes.Value) & "','"
                    JobRowRange(JobRowCount) = JobCodes.Row
                    JobCodeRange(JobRowCount) = CStr(JobCodes.Value)
                End If
                
                JobRowCount = JobRowCount + 1
            Next
            
            'Correct Row Count
            JobRowCount = JobRowCount - 1
            
            'Remove extra comma off end of csv list
            JobRange = Left(JobRange, Len(JobRange) - 2)
            
            JobRange = "'" & JobRange
            
            stSQL = "SELECT JobCode," + CStr(Trim(CompStr$)) + ".ifn_GetJCValue(2,'B',10,'" + UCase(PostComm$) + "'," + _
                            CStr(TheYear%) + "," + CStr(ThePeriod%) + "," + CStr(TheCcy%) + ",JobCode" + _
                            ",'" + CStr(Trim(UCase(AnalCode$))) + "') " & _
                            "FROM " + CStr(Trim(CompStr$)) + ".JOBHEAD WHERE JobCode IN (" & JobRange & ")"
        
            OpenDBConnection (CompStr$)
            
            With CNT(CurrComp)
                .CommandTimeout = 0
                Set RST = .Execute(stSQL)
            End With
            
            If RST.RecordCount = 0 Then
                EntSQLJCAnalBudgetJCRange = 0
                GoTo EntSQLJCAnalBudgetJCRange_Exit
            End If
            
            ReDim JobValueRange(1 To JobRowCount, 1 To 1)
            
                For NextRow = 1 To JobRowCount
                    If CStr(JobCodeRange(NextRow)) <> "" Then
                        RST.MoveFirst
                        RST.Find ("JobCode = '" & CStr(JobCodeRange(NextRow))) & "'"
                        
                        If Not RST.EOF Then
                            If RST.Fields.Item(1) = 100000522 Then
                                Error 522
                                GoTo EntSQLJCAnalBudgetJCRange_Error
                            Else
                                JobValueRange(NextRow, 1) = RST.Fields.Item(1)
                            End If
                        Else
                            RST.MoveFirst
                            ' Add to avoid summation errors when text error returned
                            JobValueRange(NextRow, 1) = 0
                        End If
                    Else
                        JobValueRange(NextRow, 1) = ""
                    End If
                    
    
                Next
            Set RST = Nothing
            
        End If
    End If
        
EntSQLJCAnalBudgetJCRange_Zero:
    EntSQLJCAnalBudgetJCRange = JobValueRange
    
    GoTo EntSQLJCAnalBudgetJCRange_Exit
        
EntSQLJCAnalBudgetJCRange_Error:
    If ErrStr = "" Then ErrStr = GetErrorNumStr
    EntSQLJCAnalBudgetJCRange = ErrStr

EntSQLJCAnalBudgetJCRange_Exit:
    
End Function

'**********************************************************************************
' Name:        EntSQLJCAnalBudgetQtyJCRange
' Description: Gets the Budget Qty Amount for the Job Codes and Analysis Code requested.
'**********************************************************************************
Public Function EntSQLJCAnalBudgetQtyJCRange(Company$, TheYear%, ThePeriod%, TheCcy%, JobCodes As Range, AnalCode$) As Variant
Attribute EntSQLJCAnalBudgetQtyJCRange.VB_Description = "This function gets the Budget Quantity for the Job Codes and Analysis Code requested."
On Error GoTo EntSQLJCAnalBudgetQtyJCRange_Error
    Dim ErrStr$, CCNT%
    Dim DblVal As Double
    Dim Result%
    Dim stADO As String
    Dim RST As ADODB.Recordset
    Dim stSQL As String
    Dim AddVal As Double
    Dim CurrInv As Boolean
    Dim PostCommSQL As String
    Dim JobRange As String
    Dim JobRowRange(10000) As Double
    Dim JobCodeRange(10000) As String
    Dim JobValueRange() As Variant
    Dim JobRowCount As Double
    Dim NextRow As Double

    Result% = 0
    
    DblVal# = 0#
    
    CompStr$ = UCase(Company$)
    
    If ValidCompany(Company) And ValidYear(TheYear) And ValidPeriod(ThePeriod) And ValidCcy(TheCcy%) Then
        If LocalCheckServer() Then
            
            'Check User Permissions
            Result = EntServer.CheckUserPermission(Company$, 515)
            
            If Result <> 0 Then
                Error Result
                GoTo EntSQLJCAnalBudgetQtyJCRange_Error
            End If
            
            'Concatenate Job Code Range into CSV for passing to SQL select statement
            JobRowCount = 1
            
            For Each JobCodes In JobCodes.Rows
                
                If CStr(JobCodes.Value) <> "" Then
                    JobRange = JobRange + CStr(JobCodes.Value) & "','"
                    JobRowRange(JobRowCount) = JobCodes.Row
                    JobCodeRange(JobRowCount) = CStr(JobCodes.Value)
                End If
                
                JobRowCount = JobRowCount + 1
            Next
            
            'Correct Row Count
            JobRowCount = JobRowCount - 1
            
            'Remove extra comma off end of csv list
            JobRange = Left(JobRange, Len(JobRange) - 2)
            
            JobRange = "'" & JobRange
            
            stSQL = "SELECT JobCode," + CStr(Trim(CompStr$)) + ".ifn_GetJCValue(1,'B',10,'P'," + _
                            CStr(TheYear%) + "," + CStr(ThePeriod%) + "," + CStr(TheCcy%) + ",JobCode" + _
                            ",'" + CStr(Trim(UCase(AnalCode$))) + "') " & _
                            "FROM " + CStr(Trim(CompStr$)) + ".JOBHEAD WHERE JobCode IN (" & JobRange & ")"
        
            OpenDBConnection (CompStr$)
            
            With CNT(CurrComp)
                .CommandTimeout = 0
                Set RST = .Execute(stSQL)
            End With
            
            If RST.RecordCount = 0 Then
                EntSQLJCAnalBudgetQtyJCRange = 0
                GoTo EntSQLJCAnalBudgetQtyJCRange_Exit
            End If
            
            ReDim JobValueRange(1 To JobRowCount, 1 To 1)
            
                For NextRow = 1 To JobRowCount
                    If CStr(JobCodeRange(NextRow)) <> "" Then
                        RST.MoveFirst
                        RST.Find ("JobCode = '" & CStr(JobCodeRange(NextRow))) & "'"
                        
                        If Not RST.EOF Then
                            If RST.Fields.Item(1) = 100000522 Then
                                Error 522
                                GoTo EntSQLJCAnalBudgetQtyJCRange_Error
                            Else
                                JobValueRange(NextRow, 1) = RST.Fields.Item(1)
                            End If
                        Else
                            RST.MoveFirst
                            ' Add to avoid summation errors when text error returned
                            JobValueRange(NextRow, 1) = 0
                        End If
                    Else
                        JobValueRange(NextRow, 1) = ""
                    End If
    
                Next
            Set RST = Nothing
            
        End If
    End If
        
EntSQLJCAnalBudgetQtyJCRange_Zero:
    EntSQLJCAnalBudgetQtyJCRange = JobValueRange
    
    GoTo EntSQLJCAnalBudgetQtyJCRange_Exit
        
EntSQLJCAnalBudgetQtyJCRange_Error:
    If ErrStr = "" Then ErrStr = GetErrorNumStr
    EntSQLJCAnalBudgetQtyJCRange = ErrStr

EntSQLJCAnalBudgetQtyJCRange_Exit:
    
End Function

'**********************************************************************************
' Name:        EntSQLJCAnalRevBudgetJCRange
' Description: Gets the Rev Budget Amount for the Job Codes and Analysis Code requested.
'**********************************************************************************
Public Function EntSQLJCAnalRevBudgetJCRange(Company$, TheYear%, ThePeriod%, TheCcy%, JobCodes As Range, AnalCode$, PostComm$) As Variant
Attribute EntSQLJCAnalRevBudgetJCRange.VB_Description = "This function gets the Revised Budget Amount for the Job Codes, Analysis Code and Posting type requested"
On Error GoTo EntSQLJCAnalRevBudgetJCRange_Error
    Dim ErrStr$, CCNT%
    Dim DblVal As Double
    Dim Result%
    Dim stADO As String
    Dim RST As ADODB.Recordset
    Dim stSQL As String
    Dim AddVal As Double
    Dim CurrInv As Boolean
    Dim PostCommSQL As String
    Dim JobRange As String
    Dim JobRowRange(10000) As Double
    Dim JobCodeRange(10000) As String
    Dim JobValueRange() As Variant
    Dim JobRowCount As Double
    Dim NextRow As Double

    Result% = 0
    
    DblVal# = 0#
    
    CompStr$ = UCase(Company$)
    
    If ValidCompany(Company) And ValidYear(TheYear) And ValidPeriod(ThePeriod) And ValidCcy(TheCcy%) And ValidPC(PostComm$) Then
        If LocalCheckServer() Then
            
            'Check User Permissions
            Result = EntServer.CheckUserPermission(Company$, 515)
            
            If Result <> 0 Then
                Error Result
                GoTo EntSQLJCAnalRevBudgetJCRange_Error
            End If
            
            'Concatenate Job Code Range into CSV for passing to SQL select statement
            JobRowCount = 1
            
            For Each JobCodes In JobCodes.Rows
                
                If CStr(JobCodes.Value) <> "" Then
                    JobRange = JobRange + CStr(JobCodes.Value) & "','"
                    JobRowRange(JobRowCount) = JobCodes.Row
                    JobCodeRange(JobRowCount) = CStr(JobCodes.Value)
                End If
                
                JobRowCount = JobRowCount + 1
            Next
            
            'Correct Row Count
            JobRowCount = JobRowCount - 1
            
            'Remove extra comma off end of csv list
            JobRange = Left(JobRange, Len(JobRange) - 2)
            
            JobRange = "'" & JobRange
            
            stSQL = "SELECT JobCode," + CStr(Trim(CompStr$)) + ".ifn_GetJCValue(4,'B',10,'" + UCase(PostComm$) + "'," + _
                            CStr(TheYear%) + "," + CStr(ThePeriod%) + "," + CStr(TheCcy%) + ",JobCode" + _
                            ",'" + CStr(Trim(UCase(AnalCode$))) + "') " & _
                            "FROM " + CStr(Trim(CompStr$)) + ".JOBHEAD WHERE JobCode IN (" & JobRange & ")"
        
            OpenDBConnection (CompStr$)
            
            With CNT(CurrComp)
                .CommandTimeout = 0
                Set RST = .Execute(stSQL)
            End With
            
            If RST.RecordCount = 0 Then
                EntSQLJCAnalRevBudgetJCRange = 0
                GoTo EntSQLJCAnalRevBudgetJCRange_Exit
            End If
            
            ReDim JobValueRange(1 To JobRowCount, 1 To 1)
            
                For NextRow = 1 To JobRowCount
                    If CStr(JobCodeRange(NextRow)) <> "" Then
                        RST.MoveFirst
                        RST.Find ("JobCode = '" & CStr(JobCodeRange(NextRow))) & "'"
                        
                        If Not RST.EOF Then
                            If RST.Fields.Item(1) = 100000522 Then
                                Error 522
                                GoTo EntSQLJCAnalRevBudgetJCRange_Error
                            Else
                                JobValueRange(NextRow, 1) = RST.Fields.Item(1)
                            End If
                        Else
                            RST.MoveFirst
                            ' Add to avoid summation errors when text error returned
                            JobValueRange(NextRow, 1) = 0
                        End If
                    Else
                        JobValueRange(NextRow, 1) = ""
                    End If
                    
    
                Next
            Set RST = Nothing
            
        End If
    End If
        
EntSQLJCAnalRevBudgetJCRange_Zero:
    EntSQLJCAnalRevBudgetJCRange = JobValueRange
    
    GoTo EntSQLJCAnalRevBudgetJCRange_Exit
        
EntSQLJCAnalRevBudgetJCRange_Error:
    If ErrStr = "" Then ErrStr = GetErrorNumStr
    EntSQLJCAnalRevBudgetJCRange = ErrStr

EntSQLJCAnalRevBudgetJCRange_Exit:
    
End Function

'**********************************************************************************
' Name:        EntSQLJCAnalRevBudgetQtyJCRange
' Description: Gets the Rev Budget Qty Amount for the Job Codes and Analysis Code requested.
'**********************************************************************************
Public Function EntSQLJCAnalRevBudgetQtyJCRange(Company$, TheYear%, ThePeriod%, TheCcy%, JobCodes As Range, AnalCode$) As Variant
Attribute EntSQLJCAnalRevBudgetQtyJCRange.VB_Description = "This function gets the Revised Budget Quantity for the Job Codes and Analysis Code requested."
On Error GoTo EntSQLJCAnalRevBudgetQtyJCRange_Error
    Dim ErrStr$, CCNT%
    Dim DblVal As Double
    Dim Result%
    Dim stADO As String
    Dim RST As ADODB.Recordset
    Dim stSQL As String
    Dim AddVal As Double
    Dim CurrInv As Boolean
    Dim PostCommSQL As String
    Dim JobRange As String
    Dim JobRowRange(10000) As Double
    Dim JobCodeRange(10000) As String
    Dim JobValueRange() As Variant
    Dim JobRowCount As Double
    Dim NextRow As Double

    Result% = 0
    
    DblVal# = 0#
    
    CompStr$ = UCase(Company$)
    
    If ValidCompany(Company) And ValidYear(TheYear) And ValidPeriod(ThePeriod) And ValidCcy(TheCcy%) Then
        If LocalCheckServer() Then
            
            'Check User Permissions
            Result = EntServer.CheckUserPermission(Company$, 515)
            
            If Result <> 0 Then
                Error Result
                GoTo EntSQLJCAnalRevBudgetQtyJCRange_Error
            End If
            
            'Concatenate Job Code Range into CSV for passing to SQL select statement
            JobRowCount = 1
            
            For Each JobCodes In JobCodes.Rows
                
                If CStr(JobCodes.Value) <> "" Then
                    JobRange = JobRange + CStr(JobCodes.Value) & "','"
                    JobRowRange(JobRowCount) = JobCodes.Row
                    JobCodeRange(JobRowCount) = CStr(JobCodes.Value)
                End If
                
                JobRowCount = JobRowCount + 1
            Next
            
            'Correct Row Count
            JobRowCount = JobRowCount - 1
            
            'Remove extra comma off end of csv list
            JobRange = Left(JobRange, Len(JobRange) - 2)
            
            JobRange = "'" & JobRange
            
            stSQL = "SELECT JobCode," + CStr(Trim(CompStr$)) + ".ifn_GetJCValue(3,'B',10,'P'," + _
                            CStr(TheYear%) + "," + CStr(ThePeriod%) + "," + CStr(TheCcy%) + ",JobCode" + _
                            ",'" + CStr(Trim(UCase(AnalCode$))) + "') " & _
                            "FROM " + CStr(Trim(CompStr$)) + ".JOBHEAD WHERE JobCode IN (" & JobRange & ")"
        
            OpenDBConnection (CompStr$)
            
            With CNT(CurrComp)
                .CommandTimeout = 0
                Set RST = .Execute(stSQL)
            End With
            
            If RST.RecordCount = 0 Then
                EntSQLJCAnalRevBudgetQtyJCRange = 0
                GoTo EntSQLJCAnalRevBudgetQtyJCRange_Exit
            End If
            
            ReDim JobValueRange(1 To JobRowCount, 1 To 1)
            
                For NextRow = 1 To JobRowCount
                    If CStr(JobCodeRange(NextRow)) <> "" Then
                        RST.MoveFirst
                        RST.Find ("JobCode = '" & CStr(JobCodeRange(NextRow))) & "'"
                        
                        If Not RST.EOF Then
                            If RST.Fields.Item(1) = 100000522 Then
                                Error 522
                                GoTo EntSQLJCAnalRevBudgetQtyJCRange_Error
                            Else
                                JobValueRange(NextRow, 1) = RST.Fields.Item(1)
                            End If
                        Else
                            RST.MoveFirst
                            ' Add to avoid summation errors when text error returned
                            JobValueRange(NextRow, 1) = 0
                        End If
                    Else
                        JobValueRange(NextRow, 1) = ""
                    End If
                    
    
                Next
            Set RST = Nothing
            
        End If
    End If
        
EntSQLJCAnalRevBudgetQtyJCRange_Zero:
    EntSQLJCAnalRevBudgetQtyJCRange = JobValueRange
    
    GoTo EntSQLJCAnalRevBudgetQtyJCRange_Exit
        
EntSQLJCAnalRevBudgetQtyJCRange_Error:
    If ErrStr = "" Then ErrStr = GetErrorNumStr
    EntSQLJCAnalRevBudgetQtyJCRange = ErrStr

EntSQLJCAnalRevBudgetQtyJCRange_Exit:
    
End Function

'*********************************************************************************
' Name:        EntSQLJCTotActualJCRange
' Description: Gets the Actual Amount for the Job Code and Posting Type requested.
'*********************************************************************************
Public Function EntSQLJCTotActualJCRange(Company$, TheYear%, ThePeriod%, TheCcy%, Cat%, JobCodes As Range, PostComm$) As Variant
Attribute EntSQLJCTotActualJCRange.VB_Description = "This function gets the Actual Amount for the Job Codes and Posting Type requested."
On Error GoTo EntSQLJCTotActualJCRange_Error
    Dim ErrStr$, CCNT%
    Dim DblVal As Double
    Dim Result%
    Dim stADO As String

    Dim RST As ADODB.Recordset
    Dim stSQL As String
    Dim AddVal As Double
    Dim CurrInv As Boolean
    Dim PostCommSQL As String
    Dim JobRange As String
    Dim JobRowRange(10000) As Double
    Dim JobCodeRange(10000) As String
    Dim JobValueRange() As Variant
    Dim JobRowCount As Double
    Dim NextRow As Double
 
    Result% = 0
    
    DblVal# = 0#
    
    CompStr$ = UCase(Company$)
    
    If ValidCompany(Company) And ValidYear(TheYear) And ValidPeriod(ThePeriod) And ValidCcy(TheCcy%) And ValidPC(PostComm$) Then
        If LocalCheckServer() Then
            
            'Check User Permissions
            Result = EntServer.CheckUserPermission(Company$, 515)
            
            If Result <> 0 Then
                Error Result
                GoTo EntSQLJCTotActualJCRange_Error
            End If
            
            'Concatenate Job Code Range into CSV for passing to SQL select statement
            JobRowCount = 1
            
            For Each JobCodes In JobCodes.Rows
                
                If CStr(JobCodes.Value) <> "" Then
                    JobRange = JobRange + CStr(JobCodes.Value) & "','"
                    JobRowRange(JobRowCount) = JobCodes.Row
                    JobCodeRange(JobRowCount) = CStr(JobCodes.Value)
                End If
                
                JobRowCount = JobRowCount + 1
            Next
            
            'Correct Row Count
            JobRowCount = JobRowCount - 1
            
            'Remove extra comma off end of csv list
            JobRange = Left(JobRange, Len(JobRange) - 2)
            
            JobRange = "'" & JobRange
            
            If PostComm$ = "C" Then
                PostCommSQL = "1"
            Else
                PostCommSQL = "0"
            End If
            
            stSQL = "SELECT JobCode," + CStr(Trim(CompStr$)) + ".ifn_GetJobBudgetValue(6," + CStr(TheYear%) + _
                            "," + CStr(ThePeriod%) + "," + CStr(TheCcy%) + ",JobCode," + _
                            CStr(Cat%) + "," + PostCommSQL + ") " & _
                            "FROM " + CStr(Trim(CompStr$)) + ".JOBHEAD WHERE JobCode IN (" & JobRange & ")"
        
            OpenDBConnection (CompStr$)
            
            With CNT(CurrComp)
                .CommandTimeout = 0
                Set RST = .Execute(stSQL)
            End With
            
            If RST.RecordCount = 0 Then
                EntSQLJCTotActualJCRange = 0
                GoTo EntSQLJCTotActualJCRange_Exit
            End If
            
            ReDim JobValueRange(1 To JobRowCount, 1 To 1)
            
                For NextRow = 1 To JobRowCount
                    If CStr(JobCodeRange(NextRow)) <> "" Then
                        RST.MoveFirst
                        RST.Find ("JobCode = '" & CStr(JobCodeRange(NextRow))) & "'"
                        
                        If Not RST.EOF Then
                            If RST.Fields.Item(1) = 100000522 Then
                                Error 522
                                GoTo EntSQLJCTotActualJCRange_Error
                            Else
                                JobValueRange(NextRow, 1) = RST.Fields.Item(1)
                            End If
                        Else
                            RST.MoveFirst
                            ' Add to avoid summation errors when text error returned
                            JobValueRange(NextRow, 1) = 0
                        End If
                    Else
                        JobValueRange(NextRow, 1) = ""
                    End If
                    
    
                Next
                
            Set RST = Nothing
            
        End If
    End If
    
EntSQLJCTotActualJCRange_Zero:
    EntSQLJCTotActualJCRange = JobValueRange
    
    GoTo EntSQLJCTotActualJCRange_Exit
        
EntSQLJCTotActualJCRange_Error:
    If ErrStr = "" Then ErrStr = GetErrorNumStr
    EntSQLJCTotActualJCRange = ErrStr

EntSQLJCTotActualJCRange_Exit:
    
End Function

'*********************************************************************************
' Name:        EntSQLJCTotActualQtyJCRange
' Description: Gets the Actual Qty Amount for the Job Code and Posting Type requested.
'*********************************************************************************
Public Function EntSQLJCTotActualQtyJCRange(Company$, TheYear%, ThePeriod%, TheCcy%, Cat%, JobCodes As Range) As Variant
Attribute EntSQLJCTotActualQtyJCRange.VB_Description = "This function gets the Actual Quantity for the Job Codes requested."
On Error GoTo EntSQLJCTotActualQtyJCRange_Error
    Dim ErrStr$, CCNT%
    Dim DblVal As Double
    Dim Result%
    Dim stADO As String

    Dim RST As ADODB.Recordset
    Dim stSQL As String
    Dim AddVal As Double
    Dim CurrInv As Boolean
    Dim JobRange As String
    Dim JobRowRange(10000) As Double
    Dim JobCodeRange(10000) As String
    Dim JobValueRange() As Variant
    Dim JobRowCount As Double
    Dim NextRow As Double
 
    Result% = 0
    
    DblVal# = 0#
    
    CompStr$ = UCase(Company$)
    
    If ValidCompany(Company) And ValidYear(TheYear) And ValidPeriod(ThePeriod) And ValidCcy(TheCcy%) Then
        If LocalCheckServer() Then
            
            'Check User Permissions
            Result = EntServer.CheckUserPermission(Company$, 515)
            
            If Result <> 0 Then
                Error Result
                GoTo EntSQLJCTotActualQtyJCRange_Error
            End If
            
            'Concatenate Job Code Range into CSV for passing to SQL select statement
            JobRowCount = 1
            
            For Each JobCodes In JobCodes.Rows
                
                If CStr(JobCodes.Value) <> "" Then
                    JobRange = JobRange + CStr(JobCodes.Value) & "','"
                    JobRowRange(JobRowCount) = JobCodes.Row
                    JobCodeRange(JobRowCount) = CStr(JobCodes.Value)
                End If
                
                JobRowCount = JobRowCount + 1
            Next
            
            'Correct Row Count
            JobRowCount = JobRowCount - 1
            
            'Remove extra comma off end of csv list
            JobRange = Left(JobRange, Len(JobRange) - 2)
            
            JobRange = "'" & JobRange
            
            stSQL = "SELECT JobCode," + CStr(Trim(CompStr$)) + ".ifn_GetJobBudgetValue(5," + CStr(TheYear%) + _
                            "," + CStr(ThePeriod%) + "," + CStr(TheCcy%) + ",JobCode," + _
                            CStr(Cat%) + ",0) " & _
                            "FROM " + CStr(Trim(CompStr$)) + ".JOBHEAD WHERE JobCode IN (" & JobRange & ")"
        
            OpenDBConnection (CompStr$)
            
            With CNT(CurrComp)
                .CommandTimeout = 0
                Set RST = .Execute(stSQL)
            End With
            
            If RST.RecordCount = 0 Then
                EntSQLJCTotActualQtyJCRange = 0
                GoTo EntSQLJCTotActualQtyJCRange_Exit
            End If
            
            ReDim JobValueRange(1 To JobRowCount, 1 To 1)
            
                For NextRow = 1 To JobRowCount
                    If CStr(JobCodeRange(NextRow)) <> "" Then
                        RST.MoveFirst
                        RST.Find ("JobCode = '" & CStr(JobCodeRange(NextRow))) & "'"
                        
                        If Not RST.EOF Then
                            If RST.Fields.Item(1) = 100000522 Then
                                Error 522
                                GoTo EntSQLJCTotActualQtyJCRange_Error
                            Else
                                JobValueRange(NextRow, 1) = RST.Fields.Item(1)
                            End If
                        Else
                            RST.MoveFirst
                            ' Add to avoid summation errors when text error returned
                            JobValueRange(NextRow, 1) = 0
                        End If
                    Else
                        JobValueRange(NextRow, 1) = ""
                    End If
                    
    
                Next
                
            Set RST = Nothing
            
        End If
    End If
    
EntSQLJCTotActualQtyJCRange_Zero:
    EntSQLJCTotActualQtyJCRange = JobValueRange
    
    GoTo EntSQLJCTotActualQtyJCRange_Exit
        
EntSQLJCTotActualQtyJCRange_Error:
    If ErrStr = "" Then ErrStr = GetErrorNumStr
    EntSQLJCTotActualQtyJCRange = ErrStr

EntSQLJCTotActualQtyJCRange_Exit:
    
End Function

'*********************************************************************************
' Name:        EntSQLJCTotBudgetJCRange
' Description: Gets the Budget Amount for the Job Code and Posting Type requested.
'*********************************************************************************
Public Function EntSQLJCTotBudgetJCRange(Company$, TheYear%, ThePeriod%, TheCcy%, Cat%, JobCodes As Range, PostComm$) As Variant
Attribute EntSQLJCTotBudgetJCRange.VB_Description = "This function gets the Budget Amount for the Job Codes, and Posting type requested."
On Error GoTo EntSQLJCTotBudgetJCRange_Error
    Dim ErrStr$, CCNT%
    Dim DblVal As Double
    Dim Result%
    Dim stADO As String

    Dim RST As ADODB.Recordset
    Dim stSQL As String
    Dim AddVal As Double
    Dim CurrInv As Boolean
    Dim PostCommSQL As String
    Dim JobRange As String
    Dim JobRowRange(10000) As Double
    Dim JobCodeRange(10000) As String
    Dim JobValueRange() As Variant
    Dim JobRowCount As Double
    Dim NextRow As Double
 
    Result% = 0
    
    DblVal# = 0#
    
    CompStr$ = UCase(Company$)
    
    If ValidCompany(Company) And ValidYear(TheYear) And ValidPeriod(ThePeriod) And ValidCcy(TheCcy%) And ValidPC(PostComm$) Then
        If LocalCheckServer() Then
            
            'Check User Permissions
            Result = EntServer.CheckUserPermission(Company$, 515)
            
            If Result <> 0 Then
                Error Result
                GoTo EntSQLJCTotBudgetJCRange_Error
            End If
            
            'Concatenate Job Code Range into CSV for passing to SQL select statement
            JobRowCount = 1
            
            For Each JobCodes In JobCodes.Rows
                
                If CStr(JobCodes.Value) <> "" Then
                    JobRange = JobRange + CStr(JobCodes.Value) & "','"
                    JobRowRange(JobRowCount) = JobCodes.Row
                    JobCodeRange(JobRowCount) = CStr(JobCodes.Value)
                End If
                
                JobRowCount = JobRowCount + 1
            Next
            
            'Correct Row Count
            JobRowCount = JobRowCount - 1
            
            'Remove extra comma off end of csv list
            JobRange = Left(JobRange, Len(JobRange) - 2)
            
            JobRange = "'" & JobRange
            
            If PostComm$ = "C" Then
                PostCommSQL = "1"
            Else
                PostCommSQL = "0"
            End If
            
            stSQL = "SELECT JobCode," + CStr(Trim(CompStr$)) + ".ifn_GetJobBudgetValue(2," + CStr(TheYear%) + _
                            "," + CStr(ThePeriod%) + "," + CStr(TheCcy%) + ",JobCode," + _
                            CStr(Cat%) + "," + PostCommSQL + ") " & _
                            "FROM " + CStr(Trim(CompStr$)) + ".JOBHEAD WHERE JobCode IN (" & JobRange & ")"
        
            OpenDBConnection (CompStr$)
            
            With CNT(CurrComp)
                .CommandTimeout = 0
                Set RST = .Execute(stSQL)
            End With
            
            If RST.RecordCount = 0 Then
                EntSQLJCTotBudgetJCRange = 0
                GoTo EntSQLJCTotBudgetJCRange_Exit
            End If
            
            ReDim JobValueRange(1 To JobRowCount, 1 To 1)
            
                For NextRow = 1 To JobRowCount
                    If CStr(JobCodeRange(NextRow)) <> "" Then
                        RST.MoveFirst
                        RST.Find ("JobCode = '" & CStr(JobCodeRange(NextRow))) & "'"
                        
                        If Not RST.EOF Then
                            If RST.Fields.Item(1) = 100000522 Then
                                Error 522
                                GoTo EntSQLJCTotBudgetJCRange_Error
                            Else
                                JobValueRange(NextRow, 1) = RST.Fields.Item(1)
                            End If
                        Else
                            RST.MoveFirst
                            ' Add to avoid summation errors when text error returned
                            JobValueRange(NextRow, 1) = 0
                        End If
                    Else
                        JobValueRange(NextRow, 1) = ""
                    End If
                    
    
                Next
                
            Set RST = Nothing
            
        End If
    End If
    
EntSQLJCTotBudgetJCRange_Zero:
    EntSQLJCTotBudgetJCRange = JobValueRange
    
    GoTo EntSQLJCTotBudgetJCRange_Exit
        
EntSQLJCTotBudgetJCRange_Error:
    If ErrStr = "" Then ErrStr = GetErrorNumStr
    EntSQLJCTotBudgetJCRange = ErrStr

EntSQLJCTotBudgetJCRange_Exit:
    
End Function

'*********************************************************************************
' Name:        EntSQLJCTotBudgetQtyJCRange
' Description: Gets the Budget Qty Amount for the Job Code and Posting Type requested.
'*********************************************************************************
Public Function EntSQLJCTotBudgetQtyJCRange(Company$, TheYear%, ThePeriod%, TheCcy%, Cat%, JobCodes As Range) As Variant
Attribute EntSQLJCTotBudgetQtyJCRange.VB_Description = "This function gets the Budget Quantity for the Job Codes requested."
On Error GoTo EntSQLJCTotBudgetQtyJCRange_Error
    Dim ErrStr$, CCNT%
    Dim DblVal As Double
    Dim Result%
    Dim stADO As String

    Dim RST As ADODB.Recordset
    Dim stSQL As String
    Dim AddVal As Double
    Dim CurrInv As Boolean
    Dim JobRange As String
    Dim JobRowRange(10000) As Double
    Dim JobCodeRange(10000) As String
    Dim JobValueRange() As Variant
    Dim JobRowCount As Double
    Dim NextRow As Double
 
    Result% = 0
    
    DblVal# = 0#
    
    CompStr$ = UCase(Company$)
    
    If ValidCompany(Company) And ValidYear(TheYear) And ValidPeriod(ThePeriod) And ValidCcy(TheCcy%) Then
        If LocalCheckServer() Then
            
            'Check User Permissions
            Result = EntServer.CheckUserPermission(Company$, 515)
            
            If Result <> 0 Then
                Error Result
                GoTo EntSQLJCTotBudgetQtyJCRange_Error
            End If
            
            'Concatenate Job Code Range into CSV for passing to SQL select statement
            JobRowCount = 1
            
            For Each JobCodes In JobCodes.Rows
                
                If CStr(JobCodes.Value) <> "" Then
                    JobRange = JobRange + CStr(JobCodes.Value) & "','"
                    JobRowRange(JobRowCount) = JobCodes.Row
                    JobCodeRange(JobRowCount) = CStr(JobCodes.Value)
                End If
                
                JobRowCount = JobRowCount + 1
            Next
            
            'Correct Row Count
            JobRowCount = JobRowCount - 1
            
            'Remove extra comma off end of csv list
            JobRange = Left(JobRange, Len(JobRange) - 2)
            
            JobRange = "'" & JobRange
            
            stSQL = "SELECT JobCode," + CStr(Trim(CompStr$)) + ".ifn_GetJobBudgetValue(1," + CStr(TheYear%) + _
                            "," + CStr(ThePeriod%) + "," + CStr(TheCcy%) + ",JobCode," + _
                            CStr(Cat%) + ",0) " & _
                            "FROM " + CStr(Trim(CompStr$)) + ".JOBHEAD WHERE JobCode IN (" & JobRange & ")"
        
            OpenDBConnection (CompStr$)
            
            With CNT(CurrComp)
                .CommandTimeout = 0
                Set RST = .Execute(stSQL)
            End With
            
            If RST.RecordCount = 0 Then
                EntSQLJCTotBudgetQtyJCRange = 0
                GoTo EntSQLJCTotBudgetQtyJCRange_Exit
            End If
            
            ReDim JobValueRange(1 To JobRowCount, 1 To 1)
            
                For NextRow = 1 To JobRowCount
                    If CStr(JobCodeRange(NextRow)) <> "" Then
                        RST.MoveFirst
                        RST.Find ("JobCode = '" & CStr(JobCodeRange(NextRow))) & "'"
                        
                        If Not RST.EOF Then
                            If RST.Fields.Item(1) = 100000522 Then
                                Error 522
                                GoTo EntSQLJCTotBudgetQtyJCRange_Error
                            Else
                                JobValueRange(NextRow, 1) = RST.Fields.Item(1)
                            End If
                        Else
                            RST.MoveFirst
                            ' Add to avoid summation errors when text error returned
                            JobValueRange(NextRow, 1) = 0
                        End If
                    Else
                        JobValueRange(NextRow, 1) = ""
                    End If
                    
    
                Next
                
            Set RST = Nothing
            
        End If
    End If
    
EntSQLJCTotBudgetQtyJCRange_Zero:
    EntSQLJCTotBudgetQtyJCRange = JobValueRange
    
    GoTo EntSQLJCTotBudgetQtyJCRange_Exit
        
EntSQLJCTotBudgetQtyJCRange_Error:
    If ErrStr = "" Then ErrStr = GetErrorNumStr
    EntSQLJCTotBudgetQtyJCRange = ErrStr

EntSQLJCTotBudgetQtyJCRange_Exit:
    
End Function

'*********************************************************************************
' Name:        EntSQLJCTotRevBudgetJCRange
' Description: Gets the Rev Budget Amount for the Job Code and Posting Type requested.
'*********************************************************************************
Public Function EntSQLJCTotRevBudgetJCRange(Company$, TheYear%, ThePeriod%, TheCcy%, Cat%, JobCodes As Range, PostComm$) As Variant
Attribute EntSQLJCTotRevBudgetJCRange.VB_Description = "This function gets the Revised Budget Amount for the Job Codes and Posting type requested"
On Error GoTo EntSQLJCTotRevBudgetJCRange_Error
    Dim ErrStr$, CCNT%
    Dim DblVal As Double
    Dim Result%
    Dim stADO As String

    Dim RST As ADODB.Recordset
    Dim stSQL As String
    Dim AddVal As Double
    Dim CurrInv As Boolean
    Dim PostCommSQL As String
    Dim JobRange As String
    Dim JobRowRange(10000) As Double
    Dim JobCodeRange(10000) As String
    Dim JobValueRange() As Variant
    Dim JobRowCount As Double
    Dim NextRow As Double
 
    Result% = 0
    
    DblVal# = 0#
    
    CompStr$ = UCase(Company$)
    
    If ValidCompany(Company) And ValidYear(TheYear) And ValidPeriod(ThePeriod) And ValidCcy(TheCcy%) And ValidPC(PostComm$) Then
         If LocalCheckServer() Then
            
            'Check User Permissions
            Result = EntServer.CheckUserPermission(Company$, 515)
            
            If Result <> 0 Then
                Error Result
                GoTo EntSQLJCTotRevBudgetJCRange_Error
            End If
            
            'Concatenate Job Code Range into CSV for passing to SQL select statement
            JobRowCount = 1
            
            For Each JobCodes In JobCodes.Rows
                
                If CStr(JobCodes.Value) <> "" Then
                    JobRange = JobRange + CStr(JobCodes.Value) & "','"
                    JobRowRange(JobRowCount) = JobCodes.Row
                    JobCodeRange(JobRowCount) = CStr(JobCodes.Value)
                End If
                
                JobRowCount = JobRowCount + 1
            Next
            
            'Correct Row Count
            JobRowCount = JobRowCount - 1
            
            'Remove extra comma off end of csv list
            JobRange = Left(JobRange, Len(JobRange) - 2)
            
            JobRange = "'" & JobRange
            
            If PostComm$ = "C" Then
                PostCommSQL = "1"
            Else
                PostCommSQL = "0"
            End If
            
            stSQL = "SELECT JobCode," + CStr(Trim(CompStr$)) + ".ifn_GetJobBudgetValue(4," + CStr(TheYear%) + _
                            "," + CStr(ThePeriod%) + "," + CStr(TheCcy%) + ",JobCode," + _
                            CStr(Cat%) + "," + PostCommSQL + ") " & _
                            "FROM " + CStr(Trim(CompStr$)) + ".JOBHEAD WHERE JobCode IN (" & JobRange & ")"
        
            OpenDBConnection (CompStr$)
            
            With CNT(CurrComp)
                .CommandTimeout = 0
                Set RST = .Execute(stSQL)
            End With
            
            If RST.RecordCount = 0 Then
                EntSQLJCTotRevBudgetJCRange = 0
                GoTo EntSQLJCTotRevBudgetJCRange_Exit
            End If
            
            ReDim JobValueRange(1 To JobRowCount, 1 To 1)
            
                For NextRow = 1 To JobRowCount
                    If CStr(JobCodeRange(NextRow)) <> "" Then
                        RST.MoveFirst
                        RST.Find ("JobCode = '" & CStr(JobCodeRange(NextRow))) & "'"
                        
                        If Not RST.EOF Then
                            If RST.Fields.Item(1) = 100000522 Then
                                Error 522
                                GoTo EntSQLJCTotRevBudgetJCRange_Error
                            Else
                                JobValueRange(NextRow, 1) = RST.Fields.Item(1)
                            End If
                        Else
                            RST.MoveFirst
                            ' Add to avoid summation errors when text error returned
                            JobValueRange(NextRow, 1) = 0
                        End If
                    Else
                        JobValueRange(NextRow, 1) = ""
                    End If
                    
    
                Next
                
            Set RST = Nothing
            
        End If
    End If
    
EntSQLJCTotRevBudgetJCRange_Zero:
    EntSQLJCTotRevBudgetJCRange = JobValueRange
    
    GoTo EntSQLJCTotRevBudgetJCRange_Exit
        
EntSQLJCTotRevBudgetJCRange_Error:
    If ErrStr = "" Then ErrStr = GetErrorNumStr
    EntSQLJCTotRevBudgetJCRange = ErrStr

EntSQLJCTotRevBudgetJCRange_Exit:
    
End Function

'*********************************************************************************
' Name:        EntSQLJCTotRevBudgetQtyJCRange
' Description: Gets the Rev Budget Qty Amount for the Job Code and Posting Type requested.
'*********************************************************************************
Public Function EntSQLJCTotRevBudgetQtyJCRange(Company$, TheYear%, ThePeriod%, TheCcy%, Cat%, JobCodes As Range) As Variant
Attribute EntSQLJCTotRevBudgetQtyJCRange.VB_Description = "This function gets the Revised Budget Quantity for the Job Codes requested."
On Error GoTo EntSQLJCTotRevBudgetQtyJCRange_Error
    Dim ErrStr$, CCNT%
    Dim DblVal As Double
    Dim Result%
    Dim stADO As String

    Dim RST As ADODB.Recordset
    Dim stSQL As String
    Dim AddVal As Double
    Dim CurrInv As Boolean
    Dim JobRange As String
    Dim JobRowRange(10000) As Double
    Dim JobCodeRange(10000) As String
    Dim JobValueRange() As Variant
    Dim JobRowCount As Double
    Dim NextRow As Double
 
    Result% = 0
    
    DblVal# = 0#
    
    CompStr$ = UCase(Company$)
    
    If ValidCompany(Company) And ValidYear(TheYear) And ValidPeriod(ThePeriod) And ValidCcy(TheCcy%) Then
        If LocalCheckServer() Then
            
            'Check User Permissions
            Result = EntServer.CheckUserPermission(Company$, 515)
            
            If Result <> 0 Then
                Error Result
                GoTo EntSQLJCTotRevBudgetQtyJCRange_Error
            End If
            
            'Concatenate Job Code Range into CSV for passing to SQL select statement
            JobRowCount = 1
            
            For Each JobCodes In JobCodes.Rows
                
                If CStr(JobCodes.Value) <> "" Then
                    JobRange = JobRange + CStr(JobCodes.Value) & "','"
                    JobRowRange(JobRowCount) = JobCodes.Row
                    JobCodeRange(JobRowCount) = CStr(JobCodes.Value)
                End If
                
                JobRowCount = JobRowCount + 1
            Next
            
            'Correct Row Count
            JobRowCount = JobRowCount - 1
            
            'Remove extra comma off end of csv list
            JobRange = Left(JobRange, Len(JobRange) - 2)
            
            JobRange = "'" & JobRange
            
            stSQL = "SELECT JobCode," + CStr(Trim(CompStr$)) + ".ifn_GetJobBudgetValue(3," + CStr(TheYear%) + _
                            "," + CStr(ThePeriod%) + "," + CStr(TheCcy%) + ",JobCode," + _
                            CStr(Cat%) + ",0) " & _
                            "FROM " + CStr(Trim(CompStr$)) + ".JOBHEAD WHERE JobCode IN (" & JobRange & ")"
        
            OpenDBConnection (CompStr$)
            
            With CNT(CurrComp)
                .CommandTimeout = 0
                Set RST = .Execute(stSQL)
            End With
            
            If RST.RecordCount = 0 Then
                EntSQLJCTotRevBudgetQtyJCRange = 0
                GoTo EntSQLJCTotRevBudgetQtyJCRange_Exit
            End If
            
            ReDim JobValueRange(1 To JobRowCount, 1 To 1)
            
                For NextRow = 1 To JobRowCount
                    If CStr(JobCodeRange(NextRow)) <> "" Then
                        RST.MoveFirst
                        RST.Find ("JobCode = '" & CStr(JobCodeRange(NextRow))) & "'"
                        
                        If Not RST.EOF Then
                            If RST.Fields.Item(1) = 100000522 Then
                                Error 522
                                GoTo EntSQLJCTotRevBudgetQtyJCRange_Error
                            Else
                                JobValueRange(NextRow, 1) = RST.Fields.Item(1)
                            End If
                        Else
                            RST.MoveFirst
                            ' Add to avoid summation errors when text error returned
                            JobValueRange(NextRow, 1) = 0
                        End If
                    Else
                        JobValueRange(NextRow, 1) = ""
                    End If
                    
    
                Next
                
            Set RST = Nothing
            
        End If
    End If
    
EntSQLJCTotRevBudgetQtyJCRange_Zero:
    EntSQLJCTotRevBudgetQtyJCRange = JobValueRange
    
    GoTo EntSQLJCTotRevBudgetQtyJCRange_Exit
        
EntSQLJCTotRevBudgetQtyJCRange_Error:
    If ErrStr = "" Then ErrStr = GetErrorNumStr
    EntSQLJCTotRevBudgetQtyJCRange = ErrStr

EntSQLJCTotRevBudgetQtyJCRange_Exit:
    
End Function

Attribute VB_Name = "Sheet1"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "ThisWorkbook"
Attribute VB_Base = "0{00020819-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Option Explicit

Attribute VB_Name = "Version"
Option Explicit

Const AddInVer = "Exchequer 2016 R2.008"            ' should be incremented for each build

'*****************************************************************************************
' Add-In History
'
' v2016R2.008 WJ   19/05/2016  Corrected issue with CC/Dept string
' v2016R2.007 WJ   16/05/2016  Added Revised Budgets 1 - 5
' v2016R1.006 PKR  26/01/2016  Released for v2016 R1
' v7.0.005    WJ   14/05/2015  Added company CSV to retrieve cross company Nominal History Details GLRange only
' v7.0.004    WJ   10/12/2014  Corrected duplicate Help Context Ids
' v7.0.003    WJ   02/09/2014  Added additional checking around GL Ranges to ignore text values (ABSEXCH-15597)
' v7.0.002    WJ   21/07/2014  Added additional error handling for CC/Dept validation carried out in SQL
' v7.0.001    WJ   18/07/2014  Initial Build for v7.0.4 and v7.0.11 including all security

'*****************************************************************************************
' Name:        EntSQLRangeAddInVer
' Description: Returns the EntSQLRangeAddInVer.XLA Add-In Version Number
'*****************************************************************************************
Public Function EntSQLRangeAddInVer() As String
    EntSQLRangeAddInVer = "Exchequer SQL Edition Range Functions - " + AddInVer$
End Function

Attribute VB_Name = "clsCryptoFilterBox"
Attribute VB_Base = "0{FCFB3D2A-A0FA-1068-A738-08002B3371B5}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = False
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Option Explicit

Private Declare Function CryptAcquireContext Lib "advapi32.dll" Alias "CryptAcquireContextA" (phProv As Long, pszContainer As String, pszProvider As String, ByVal dwProvType As Long, ByVal dwFlags As Long) As Long
Private Declare Function CryptCreateHash Lib "advapi32.dll" (ByVal hProv As Long, ByVal Algid As Long, ByVal hKey As Long, ByVal dwFlags As Long, phHash As Long) As Long
Private Declare Function CryptDeriveKey Lib "advapi32.dll" (ByVal hProv As Long, ByVal Algid As Long, ByVal hBaseData As Long, ByVal dwFlags As Long, phKey As Long) As Long
Private Declare Function CryptDestroyHash Lib "advapi32.dll" (ByVal hHash As Long) As Long
Private Declare Function CryptDestroyKey Lib "advapi32.dll" (ByVal hKey As Long) As Long
Private Declare Function CryptEncrypt Lib "advapi32.dll" (ByVal hKey As Long, ByVal hHash As Long, ByVal Final As Long, ByVal dwFlags As Long, ByVal pbData As String, pdwDataLen As Long, ByVal dwBufLen As Long) As Long
Private Declare Function CryptDecrypt Lib "advapi32.dll" (ByVal hKey As Long, ByVal hHash As Long, ByVal Final As Long, ByVal dwFlags As Long, ByVal pbData As String, pdwDataLen As Long) As Long
Private Declare Function CryptExportKey Lib "advapi32.dll" (ByVal hKey As Long, ByVal hExpKey As Long, ByVal dwBlobType As Long, ByVal dwFlags As Long, ByVal pbData As String, pdwDataLen As Long) As Long
Private Declare Function CryptGenKey Lib "advapi32.dll" (ByVal hProv As Long, ByVal Algid As Long, ByVal dwFlags As Long, phKey As Long) As Long
Private Declare Function CryptGetProvParam Lib "advapi32.dll" (ByVal hProv As Long, ByVal dwParam As Long, pbData As Any, pdwDataLen As Long, ByVal dwFlags As Long) As Long
Private Declare Function CryptGetUserKey Lib "advapi32.dll" (ByVal hProv As Long, ByVal dwKeySpec As Long, phUserKey As Long) As Long
Private Declare Function CryptHashData Lib "advapi32.dll" (ByVal hHash As Long, ByVal pbData As String, ByVal dwDataLen As Long, ByVal dwFlags As Long) As Long
Private Declare Function CryptReleaseContext Lib "advapi32.dll" (ByVal hProv As Long, ByVal dwFlags As Long) As Long
Private Declare Function CryptSignHash Lib "advapi32.dll" Alias "CryptSignHashA" (ByVal hHash As Long, ByVal dwKeySpec As Long, ByVal sDescription As String, ByVal dwFlags As Long, ByVal pbSignature As String, pdwSigLen As Long) As Long
Private Declare Function CryptVerifySignature Lib "advapi32.dll" Alias "CryptVerifySignatureA" (ByVal hHash As Long, ByVal pbSignature As String, ByVal dwSigLen As Long, ByVal hPubKey As Long, ByVal sDescription As String, ByVal dwFlags As Long) As Long

'API error function
Private Declare Function GetLastError Lib "kernel32" () As Long

'API memory functions
Private Declare Function GlobalAlloc Lib "kernel32" (ByVal wFlags As Long, ByVal dwBytes As Long) As Long
Private Declare Function GlobalFree Lib "kernel32" (ByVal hMem As Long) As Long
Private Declare Function GlobalLock Lib "kernel32" (ByVal hMem As Long) As Long
Private Declare Function GlobalUnlock Lib "kernel32" (ByVal hMem As Long) As Long
Private Declare Sub CpyMemValAdrFromRefAdr Lib "kernel32" Alias "RtlMoveMemory" (ByVal hpvDest As Any, hpvSource As Any, ByVal cbCopy As Long)
Private Declare Sub CpyMemRefAdrFromValAdr Lib "kernel32" Alias "RtlMoveMemory" (hpvDest As Any, ByVal hpvSource As Any, ByVal cbCopy As Long)

'constants for API memory functions
Private Const GMEM_MOVEABLE = &H2
Private Const GMEM_ZEROINIT = &H40
Private Const GHND = (GMEM_MOVEABLE Or GMEM_ZEROINIT)

'constants for Cryptography API functions
Private Const MS_DEF_PROV = "Microsoft Base Cryptographic Provider v1.0"
Private Const PROV_RSA_FULL = 1
Private Const CRYPT_NEWKEYSET = &H8
Private Const PP_CONTAINER = 6
Private Const AT_KEYEXCHANGE = 1
Private Const AT_SIGNATURE = 2
Private Const SIMPLEBLOB = 1
Private Const ALG_CLASS_DATA_ENCRYPT = 24576
Private Const ALG_CLASS_HASH = 32768
Private Const ALG_TYPE_ANY = 0
Private Const ALG_TYPE_BLOCK = 1536
Private Const ALG_TYPE_STREAM = 2048
Private Const ALG_SID_RC2 = 2
Private Const ALG_SID_RC4 = 1
Private Const ALG_SID_MD5 = 3
Private Const CALG_MD5 = ((ALG_CLASS_HASH Or ALG_TYPE_ANY) Or ALG_SID_MD5)
Private Const CALG_RC2 = ((ALG_CLASS_DATA_ENCRYPT Or ALG_TYPE_BLOCK) Or ALG_SID_RC2)
Private Const CALG_RC4 = ((ALG_CLASS_DATA_ENCRYPT Or ALG_TYPE_STREAM) Or ALG_SID_RC4)

'constants from WinErr.h
Private Const NTE_NO_KEY As Long = -2146893811 '0x8009000DL
Private Const NTE_BAD_SIGNATURE As Long = -2146893818

'clsCryptoFilterBox constants
Private Const CFB_BUSY = 0
Private Const CFB_READY = 1
Private Const CFB_VALID = 2
Private Const ENCRYPT_ALGORITHM = CALG_RC4
Private Const ENCRYPT_BLOCK_SIZE = 1
Private Const CRYPT_EXPORTABLE = 1

'private property buffers
Private sInBuffer As String
Private sOutBuffer As String
Private sSignature As String
Private lStatus As Long

Public Property Get InBuffer() As String
    InBuffer = sInBuffer
End Property

Public Property Let InBuffer(vNewValue As String)
    sInBuffer = vNewValue
End Property

Public Property Get OutBuffer() As String
    OutBuffer = sOutBuffer
End Property

Public Property Get Signature() As String
    Signature = sSignature
End Property

Public Property Let Signature(vNewValue As String)
    sSignature = vNewValue
End Property

Public Sub Sign()
    'Create a signature for Inbuffer and place in Signature
    Dim sContainer As String, sDescription As String, sProvider As String, lHCryptprov As Long
    Dim lHHash As Long, lResult As Long, lSignatureLen As Long
    
    On Error GoTo ErrSign
    
    'switch Status property
    lStatus = CFB_BUSY
    
    'init Signature property
    sSignature = ""
    
    'Get handle to the default provider.
    sContainer = vbNullChar
    sProvider = MS_DEF_PROV & vbNullChar
    
    If Not CBool(CryptAcquireContext(lHCryptprov, ByVal sContainer, ByVal sProvider, PROV_RSA_FULL, 0)) Then
        MsgBox ("Error " & CStr(GetLastError) & " during CryptAcquireContext!")
        GoTo ReleaseHandles:
    End If
    
    'Create a hash object.
    If Not CBool(CryptCreateHash(lHCryptprov, CALG_MD5, 0, 0, lHHash)) Then
        MsgBox ("Error " & CStr(GetLastError) & " during CryptCreateHash!")
        GoTo ReleaseHandles:
    End If
    
    If Not CBool(CryptHashData(lHHash, sInBuffer, Len(sInBuffer), 0)) Then
        MsgBox ("Error " & CStr(GetLastError) & " during CryptHashData!")
        GoTo ReleaseHandles:
    End If
    
    'Sign hash object.
    'Determine size of signature.
    sDescription = vbNullChar
    lResult = CryptSignHash(lHHash, AT_SIGNATURE, sDescription, 0, sSignature, lSignatureLen)
    sSignature = String(lSignatureLen, vbNullChar)
    
    'Sign hash object (with signature key).
    If Not CBool(CryptSignHash(lHHash, AT_SIGNATURE, sDescription, 0, sSignature, lSignatureLen)) Then
        MsgBox ("Error " & CStr(GetLastError()) & " during CryptSignHash")
        GoTo ReleaseHandles:
    End If
    
ReleaseHandles:
    'Destroy hash object.
    If lHHash Then lResult = CryptDestroyHash(lHHash)
    
    'Release provider handle.
    If lHCryptprov Then lResult = CryptReleaseContext(lHCryptprov, 0)
    
    'switch Status property
    lStatus = CFB_READY
    Exit Sub
    
ErrSign:
    MsgBox ("ErrSign " & Error$)
    GoTo ReleaseHandles

End Sub

Public Sub Validate()
    'Validate InBuffer with Signature and assign Status with result
    Dim bValid As Boolean, sContainer As String, sDescription As String, sProvider As String
    Dim lDataLen As Long, lDataPoint As Long, lHCryptprov As Long, lHHash As Long
    Dim lResult As Long, lSignatureLen As Long, lHCryptKey As Long
    ReDim aByteData(0) As Byte
    On Error GoTo ErrValidate
    
    'switch Status property
    lStatus = CFB_BUSY
    
    'init internal valid flag
    bValid = True
    
    'Get handle to the default provider.
    sContainer = vbNullChar
    sProvider = MS_DEF_PROV & vbNullChar
    
    If Not CBool(CryptAcquireContext(lHCryptprov, ByVal sContainer, ByVal sProvider, PROV_RSA_FULL, 0)) Then
        bValid = False
        MsgBox ("Error " & CStr(GetLastError) & " during CryptAcquireContext!")
        GoTo ReleaseHandles:
    End If
    
    'Create a hash object.
    If Not CBool(CryptCreateHash(lHCryptprov, CALG_MD5, 0, 0, lHHash)) Then
        bValid = False
        MsgBox ("Error " & CStr(GetLastError) & " during CryptCreateHash!")
        GoTo ReleaseHandles:
    End If
    
    'Add data to hash object.
    If Not CBool(CryptHashData(lHHash, sInBuffer, Len(sInBuffer), 0)) Then
        bValid = False
        MsgBox ("Error " & CStr(GetLastError) & " during CryptHashData!")
        GoTo ReleaseHandles:
    End If
    
    'Get handle to signature key.
    If Not CBool(CryptGetUserKey(lHCryptprov, AT_SIGNATURE, lHCryptKey)) Then
        bValid = False
        MsgBox ("Error " & CStr(GetLastError) & " during CryptGetUserKey!")
        GoTo ReleaseHandles:
    End If
    
    lSignatureLen = Len(sSignature)
    
    'Verify signature.
    If Not CBool(CryptVerifySignature(lHHash, sSignature, lSignatureLen, lHCryptKey, sDescription, 0)) Then
        If GetLastError = NTE_BAD_SIGNATURE Then
            bValid = False
            GoTo ReleaseHandles:
        Else
            bValid = False
            MsgBox ("Error " & CStr(GetLastError) & " during CryptVerifySignature!")
            GoTo ReleaseHandles:
        End If
    End If
    
ReleaseHandles:
    'Release signature key.
    If lHCryptKey Then lResult = CryptDestroyKey(lHCryptKey)
    
    'Destroy hash object.
    If lHHash Then lResult = CryptDestroyHash(lHHash)
    
    'Release provider handle.
    If lHCryptprov Then lResult = CryptReleaseContext(lHCryptprov, 0)
    
    Select Case bValid
        Case True
            lStatus = CFB_VALID
        Case Else
            lStatus = CFB_READY
    End Select
    
    Exit Sub
    
ErrValidate:
    MsgBox ("ErrValidate " & Error$)
    Resume
    
End Sub

Public Sub Decrypt()
    'Decrypt InBuffer into OutBuffer
    Dim lHExchgKey As Long, lHCryptprov As Long, lHHash As Long, lHkey As Long
    Dim lResult As Long, sContainer As String, sProvider As String
    Dim sCryptBuffer As String, lCryptBufLen As Long, lCryptPoint As Long
    Dim lPasswordPoint As Long, lPasswordCount As Long
    On Error GoTo ErrDecrypt
    
    'switch Status property
    lStatus = CFB_BUSY
    
    'Init sOutBuffer
    sOutBuffer = ""
    
    'Get handle to the default provider.
    sContainer = "IRIS_EMULATOR_KEY_CONTAINER"
    sProvider = vbNullChar
    
    If Not CBool(CryptAcquireContext(lHCryptprov, ByVal sContainer, ByVal sProvider, PROV_RSA_FULL, 0)) Then
        MsgBox ("Error " & CStr(GetLastError) & " during CryptAcquireContext!")
        GoTo Done
    End If
    
    'Create a hash object.
    If Not CBool(CryptCreateHash(lHCryptprov, CALG_MD5, 0, 0, lHHash)) Then
        MsgBox ("Error " & CStr(GetLastError) & " during CryptCreateHash!")
        GoTo Done
    End If
    
    'Hash in the password data.
    If Not CBool(CryptHashData(lHHash, "wmie@iris!", Len("wmie@iris!"), 0)) Then
        MsgBox ("Error " & CStr(GetLastError) & " during CryptHashData!")
        GoTo Done
    End If
    
    'Derive a session key from the hash object.
    If Not CBool(CryptDeriveKey(lHCryptprov, ENCRYPT_ALGORITHM, lHHash, 0, lHkey)) Then
        MsgBox ("Error " & CStr(GetLastError) & " during CryptDeriveKey!")
        GoTo Done
    End If
    
    'Destroy the hash object.
    CryptDestroyHash (lHHash)
    lHHash = 0
    
    'Prepare sCryptBuffer for CryptDecrypt
    lCryptBufLen = Len(sInBuffer)
    sCryptBuffer = String(lCryptBufLen, vbNullChar)
    LSet sCryptBuffer = sInBuffer
    
    'Decrypt data
    If Not CBool(CryptDecrypt(lHkey, 0, 1, 0, sCryptBuffer, lCryptBufLen)) Then
        MsgBox ("bytes required:" & CStr(lCryptBufLen))
        MsgBox ("Error " & CStr(GetLastError) & " during CryptDecrypt!")
        GoTo Done
    End If
    
    'Apply decrypted string from sCryptBuffer to private buffer for OutBuffer property
    sOutBuffer = Mid$(sCryptBuffer, 1, Len(sInBuffer))
    
Done:
    'Destroy session key.
    If (lHkey) Then lResult = CryptDestroyKey(lHkey)
    
    'Release key exchange key handle.
    If lHExchgKey Then CryptDestroyKey (lHExchgKey)
    
    'Destroy hash object.
    If lHHash Then CryptDestroyHash (lHHash)
    
    'Release provider handle.
    If lHCryptprov Then lResult = CryptReleaseContext(lHCryptprov, 0)
    
    'switch Status property
    lStatus = CFB_READY
    Exit Sub
    
ErrDecrypt:
    MsgBox ("ErrDecrypt " & Error$)
    GoTo Done
    
End Sub

Public Property Get Status() As Long
    Status = lStatus
End Property

Private Function InitUser() As Long

    Dim lHCryptprov As Long, lHCryptKey As Long, avProviderData(1000) As Byte
    Dim lProviderDataAddress As Long, lProviderDataLen As Long, lDataSize As Long
    Dim lResult As Long, sContainer As String, sProvider As String
    Dim sUserName As String, lPoint As Long, lMemHandle As Long
    Dim lReturn As Long, sBuffer As String
    On Error GoTo ErrInitUser
    
    'prepare string buffers
    sContainer = vbNullChar
    sProvider = MS_DEF_PROV & vbNullChar
    
    'Attempt to acquire a handle to the default key container.
    If Not CBool(CryptAcquireContext(lHCryptprov, ByVal sContainer, ByVal sProvider, PROV_RSA_FULL, 0)) Then
    
        'Create default key container.
        If Not CBool(CryptAcquireContext(lHCryptprov, ByVal sContainer, ByVal sProvider, PROV_RSA_FULL, CRYPT_NEWKEYSET)) Then
            MsgBox ("Error creating key container! " & CStr(GetLastError))
            Exit Function
        End If
        
        'Get name of default key container.
        lProviderDataLen = Len(avProviderData(0)) * (UBound(avProviderData) + 1)
        
        If Not CBool(CryptGetProvParam(lHCryptprov, PP_CONTAINER, avProviderData(0), lProviderDataLen, 0)) Then
            MsgBox ("Error getting user name! " & CStr(GetLastError))
            avProviderData(0) = 0
        End If
        
        'Get sUserName from avProviderData()
        lPoint = LBound(avProviderData)
        
        While lPoint <= UBound(avProviderData)
            
            If avProviderData(lPoint) <> 0 Then
                sUserName = sUserName & Chr$(avProviderData(lPoint))
            Else
                lPoint = UBound(avProviderData)
            End If
            
            lPoint = lPoint + 1
        
        Wend
        
        'MsgBox ("Create key container " & sUserName)
    
    End If
    
    'Attempt to get handle to signature key
    
    If Not CBool(CryptGetUserKey(lHCryptprov, AT_SIGNATURE, lHCryptKey)) Then
    
        If GetLastError = NTE_NO_KEY Then
            'MsgBox ("Create key exchange key pair")
        
            If Not CBool(CryptGenKey(lHCryptprov, AT_SIGNATURE, 0, lHCryptKey)) Then
                MsgBox ("Error during CryptGenKey! " & CStr(GetLastError))
                Exit Function
            Else
                lResult = CryptDestroyKey(lHCryptprov)
            End If
        
        Else
            MsgBox ("Error during CryptGetUserKey! " & CStr(GetLastError))
            Exit Function
        End If
        
    End If
    
    'Attempt to get handle to exchange key
    
    If Not CBool(CryptGetUserKey(lHCryptprov, AT_KEYEXCHANGE, lHCryptKey)) Then
    
        If GetLastError = NTE_NO_KEY Then
        
            'MsgBox ("Create key exchange key pair")
            If Not CBool(CryptGenKey(lHCryptprov, AT_KEYEXCHANGE, 0, lHCryptKey)) Then
                MsgBox ("Error during CryptGenKey! " & CStr(GetLastError))
                Exit Function
            Else
                lResult = CryptDestroyKey(lHCryptprov)
            End If
        
        Else
            MsgBox ("Error during CryptGetUserKey! " & CStr(GetLastError))
            Exit Function
        End If
    End If
    
    'release handle to provider
    lResult = CryptReleaseContext(lHCryptprov, 0)
    InitUser = True
    Exit Function
    
ErrInitUser:
    MsgBox ("ErrInitUser " & Error$)
    Resume
    
End Function

Private Sub Class_Initialize()
    If InitUser <> True Then
        MsgBox ("InitUser failed")
    End If
End Sub

' InQuest injected base64 decoded content
' v+B	
' :Qjx
' :Qjx
' v+F-
' v+F-
' n+B	
' :Qjx
' :Qjx
' n+F-
' n+F-
' njT-
' r$$Z
' r$$Z
' r$$Z
' zd^|

INQUEST-PP=macro
