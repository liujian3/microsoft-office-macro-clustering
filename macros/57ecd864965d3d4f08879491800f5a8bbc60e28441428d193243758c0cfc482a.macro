Attribute VB_Name = "DocumentPropertiesTools"
Option Explicit

Public statickaPremenna
' Loading docproperties and values from file
Sub LoadDocPropFromHTML()
    Dim TextFileName As String
    Dim TextLine As String: TextLine = ""
    Dim PropertyName As String
    Dim PropertyValue As String
    Dim a As Integer
    
    Dim htmltext As String
    'zobrazi sa okienko
    UserForm_HTML2DP.Show
    'Dohoda_o_Ruceni.Show
    htmltext = statickaPremenna
    Debug.Print htmltext
    
    TextFileName = "temp123456.txt"
    Dim intFileNum As Integer
    intFileNum = FreeFile
    Open TextFileName For Output As intFileNum
    Print #intFileNum, htmltext
    Close intFileNum
 
    Open TextFileName For Input As #1
    
    ' READING LINES FROM FILE
    While Not EOF(1)
        Line Input #1, TextLine
        
        ' vymazeme zaciatocne tab ak tam je
        Do While Left(TextLine, 1) = vbTab
            TextLine = Mid(TextLine, 2)
        Loop
        
        TextLine = Trim(TextLine)
        ' if riadok sa zacina "control.SetProperty('Domain." tak
        If Left(TextLine, 28) = "control.SetProperty('Domain." Then
            TextLine = Mid(TextLine, 29)
            a = InStr(TextLine, "Value.")
            Debug.Print TextLine
            TextLine = Left(TextLine, a - 1) & Mid(TextLine, a + 6, Len(TextLine) - a - 7)
            
            If TextLine <> "" Then
                TextLine = Trim(TextLine)
                a = InStr(TextLine, "', '")
                PropertyName = ""
                PropertyValue = ""
                PropertyName = Left(TextLine, a - 1)
                PropertyValue = Mid(TextLine, a + 4, Len(TextLine) - Len(PropertyName) - 5)
                If PropertyName <> "" Then
                    Debug.Print PropertyName & "            " & PropertyValue
                    SetProp PropertyName, PropertyValue
                End If
            End If
        End If
            
        ' end if
    Wend
    Close #1
    
    If TextFileName = "temp123456.txt" Then
        Kill "temp123456.txt"
    End If
    
    MsgBox "Done!"
End Sub

' Vracia True ak existuje CustomDocumentProperty s nazvom Prop, inac vracia False
Function PropIsSet(Prop As String) As Boolean
    On Error Resume Next
    Dim tempvalue As String
    tempvalue = ThisDocument.CustomDocumentProperties(Prop).Value
    If Err <> 0 Then
        PropIsSet = False
    Else
        PropIsSet = True
    End If
    On Error GoTo 0
End Function



' Vracia hodnotu CustomDocumentProperty alebo prazdny retazec
Public Function GetProp(Prop As String) As String
    On Error Resume Next
    Dim tempvalue As String
    tempvalue = ThisDocument.CustomDocumentProperties(Prop).Value
    If Err <> 0 Then
        Debug.Print "Nena|fffd|iel sa |fffd|daj [" & Prop & "]."
        GetProp = ""
    Else
        GetProp = tempvalue
    End If
    On Error GoTo 0
End Function



' Nastavuje hodnotu CustomDocumentProperty (ak dany CustomDocumentProperty neexistuje, tak ho aj vytvori)
Sub SetProp(Prop As String, xvalue As String)
    On Error Resume Next
    Dim tempvalue As String
    tempvalue = ThisDocument.CustomDocumentProperties(Prop).Value
    If Err <> 0 Then
        Debug.Print "Creating property: " & Prop
        ThisDocument.CustomDocumentProperties.Add Name:=Prop, LinkToContent:=False, Value:=xvalue, Type:=msoPropertyTypeString
    Else
        ThisDocument.CustomDocumentProperties(Prop).Value = xvalue
    End If
    On Error GoTo 0
End Sub



' Nastavuje hodnotu viacerych CustomDocumentProperty rozdelenim textu
Sub SetPropSeq(Prop As String, xvalue As String)
    Dim i As Integer
    
    i = 1
    Do While Len(xvalue) > 0
        SetProp Prop & i, Left(xvalue, 230)
        xvalue = Mid(xvalue, 230 + 1)
        If Len(xvalue) > 1 Then
            If Asc(Mid(xvalue, 1, 1)) = 10 Then xvalue = Mid(xvalue, 2)
        End If
        i = i + 1
    Loop
End Sub



' Vymaze property
Sub DelProp(Prop As String)
    On Error Resume Next
    Err.Clear
    ThisDocument.CustomDocumentProperties(Prop).Delete
    If Err <> 0 Then
        Debug.Print "Cannot delete property: " & Prop
    End If
    On Error GoTo 0
End Sub


' Nastavenie form fieldu
Public Sub SetFormField(form_field As String, Text As String, Enabled As Boolean)
    On Error Resume Next
    ThisDocument.FormFields(form_field).TextInput.Default = Text
    ThisDocument.FormFields(form_field).Result = Text
    ThisDocument.FormFields(form_field).Enabled = Enabled
    On Error GoTo 0
End Sub



' kontrola FormField
Public Function FormFieldExists(form_field As String) As Boolean
    Err.Clear
    On Error Resume Next
    ThisDocument.FormFields(form_field).TextInput.Default = ThisDocument.FormFields(form_field).TextInput.Default
    If Err <> 0 Then
        FormFieldExists = False
    Else
        FormFieldExists = True
    End If
    On Error GoTo 0
End Function


' Kontrola, ci string obsahuje substring
Public Function isSubtextInText(ByVal Text As String, ByVal subtext As String) As Boolean
    If InStr(1, Text, subtext) > 0 Then
        isSubtextInText = True
    Else
        isSubtextInText = False
    End If
End Function



' Delete row where is some marker
Sub deleteRowWhereIsMarker(ByVal markingText As String)
    Dim xtable As Object
    Dim xrow As Object
    Dim xcell As Object
    Dim xfield As Field
    Dim wordsetup As String
    wordsetup = ""
    
    For Each xtable In ThisDocument.Tables
        
        On Error Resume Next
        For Each xrow In xtable.Rows
            
        Next xrow
        If Err <> 0 Then
            Debug.Print "zle"
        Else
            For Each xrow In xtable.Rows
                For Each xcell In xrow.Cells
                    For Each xfield In xcell.Range.Fields
                        If xfield.Code Like "*" & markingText & "*" Then
                            
                                On Error Resume Next
                                If ThisDocument.ProtectionType <> wdNoProtection Then
                                    wordsetup = "DocAdmin"
                                    ThisDocument.Unprotect wordsetup
                                End If
                                If ThisDocument.ProtectionType <> wdNoProtection Then
                                    wordsetup = StrReverse(Chr(115) & Chr(115) & Chr(97) & Chr(112) & Chr(110) & Chr(97) & Chr(111) & Chr(108))
                                    ThisDocument.Unprotect wordsetup
                                End If
                                If ThisDocument.ProtectionType <> wdNoProtection Then
                                    wordsetup = StrReverse(Chr(121) & Chr(108) & Chr(110) & Chr(111) & Chr(100) & Chr(97) & Chr(101) & Chr(114))
                                    ThisDocument.Unprotect wordsetup
                                End If
                                If ThisDocument.ProtectionType <> wdNoProtection Then
                                    wordsetup = StrReverse(Chr(107) & Chr(115) & Chr(98) & Chr(99) & Chr(117))
                                    ThisDocument.Unprotect wordsetup
                                End If
                                If ThisDocument.ProtectionType <> wdNoProtection Then
                                    wordsetup = StrReverse(Chr(49) & Chr(49) & Chr(52) & Chr(49))
                                    ThisDocument.Unprotect wordsetup
                                End If
                                If ThisDocument.ProtectionType <> wdNoProtection Then
                                    wordsetup = StrReverse(Chr(76) & Chr(76) & Chr(85) & Chr(78))
                                    ThisDocument.Unprotect wordsetup
                                End If
                            
                            On Error Resume Next
                            xrow.Delete
                            On Error GoTo 0
                        
                                If wordsetup <> "" Then
                                    ThisDocument.Protect wdAllowOnlyFormFields, True, wordsetup
                                End If
                                On Error GoTo 0
                        
                        End If
                    Next xfield
                Next xcell
            Next xrow
        End If
        On Error GoTo 0
        Err.Clear
        
    Next xtable
End Sub


' Delete row where is some marker
Sub deleteTableWhereIsMarker(ByVal markingText As String)
    Dim xtable As Object
    Dim xrow As Object
    Dim xcell As Object
    Dim xfield As Field
    Dim wordsetup As String
    wordsetup = ""
    
    For Each xtable In ThisDocument.Tables
        For Each xrow In xtable.Rows
            For Each xcell In xrow.Cells
                For Each xfield In xcell.Range.Fields
                    If xfield.Code Like "*" & markingText & "*" Then
                        
                            On Error Resume Next
                            If ThisDocument.ProtectionType <> wdNoProtection Then
                                wordsetup = "DocAdmin"
                                ThisDocument.Unprotect wordsetup
                            End If
                            If ThisDocument.ProtectionType <> wdNoProtection Then
                                wordsetup = StrReverse(Chr(115) & Chr(115) & Chr(97) & Chr(112) & Chr(110) & Chr(97) & Chr(111) & Chr(108))
                                ThisDocument.Unprotect wordsetup
                            End If
                            If ThisDocument.ProtectionType <> wdNoProtection Then
                                wordsetup = StrReverse(Chr(121) & Chr(108) & Chr(110) & Chr(111) & Chr(100) & Chr(97) & Chr(101) & Chr(114))
                                ThisDocument.Unprotect wordsetup
                            End If
                            If ThisDocument.ProtectionType <> wdNoProtection Then
                                wordsetup = StrReverse(Chr(107) & Chr(115) & Chr(98) & Chr(99) & Chr(117))
                                ThisDocument.Unprotect wordsetup
                            End If
                            If ThisDocument.ProtectionType <> wdNoProtection Then
                                wordsetup = StrReverse(Chr(49) & Chr(49) & Chr(52) & Chr(49))
                                ThisDocument.Unprotect wordsetup
                            End If
                            If ThisDocument.ProtectionType <> wdNoProtection Then
                                wordsetup = StrReverse(Chr(76) & Chr(76) & Chr(85) & Chr(78))
                                ThisDocument.Unprotect wordsetup
                            End If
                        
                        xtable.Delete
                    
                            If wordsetup <> "" Then
                                ThisDocument.Protect wdAllowOnlyFormFields, True, wordsetup
                            End If
                            On Error GoTo 0
                        GoTo ExitInTableCycle
                        
                    End If
                Next xfield
            Next xcell
        Next xrow
ExitInTableCycle:
    Next xtable
End Sub



' Delete
Sub deleteEverythingAfterMarker(ByVal markingText As String)
    Dim xfield As Variant
    Dim wordsetup As String
    For Each xfield In ThisDocument.Fields
        If xfield.Code Like "*" & markingText & "*" Then
            
            ' unprotect
                On Error Resume Next
                If ThisDocument.ProtectionType <> wdNoProtection Then
                    wordsetup = "DocAdmin"
                    ThisDocument.Unprotect wordsetup
                End If
                If ThisDocument.ProtectionType <> wdNoProtection Then
                    wordsetup = StrReverse(Chr(115) & Chr(115) & Chr(97) & Chr(112) & Chr(110) & Chr(97) & Chr(111) & Chr(108))
                    ThisDocument.Unprotect wordsetup
                End If
                If ThisDocument.ProtectionType <> wdNoProtection Then
                    wordsetup = StrReverse(Chr(121) & Chr(108) & Chr(110) & Chr(111) & Chr(100) & Chr(97) & Chr(101) & Chr(114))
                    ThisDocument.Unprotect wordsetup
                End If
                If ThisDocument.ProtectionType <> wdNoProtection Then
                    wordsetup = StrReverse(Chr(107) & Chr(115) & Chr(98) & Chr(99) & Chr(117))
                    ThisDocument.Unprotect wordsetup
                End If
                If ThisDocument.ProtectionType <> wdNoProtection Then
                    wordsetup = StrReverse(Chr(49) & Chr(49) & Chr(52) & Chr(49))
                    ThisDocument.Unprotect wordsetup
                End If
                If ThisDocument.ProtectionType <> wdNoProtection Then
                    wordsetup = StrReverse(Chr(76) & Chr(76) & Chr(85) & Chr(78))
                    ThisDocument.Unprotect wordsetup
                End If
                
            ' delete
                xfield.Select
                Selection.EndKey Unit:=wdStory, Extend:=wdExtend
                Selection.Delete Unit:=wdCharacter, count:=1
            
            ' protect
                If wordsetup <> "" Then
                    ThisDocument.Protect wdAllowOnlyFormFields, True, wordsetup
                End If
                On Error GoTo 0
        End If
    Next
End Sub



' Loading docproperties and values from file
Sub LoadDocumentPropertiesAndValuesFromFile()
    Dim TextFileName As String
    Dim TextLine As String: TextLine = ""
    Dim PropertyName As String
    Dim PropertyValue As String
    Dim a As Integer
    
    'OPEN FILE
    Dim fd As FileDialog
    Dim objfl As Variant
    Set fd = Application.FileDialog(msoFileDialogFilePicker)
    With fd
        .ButtonName = "Select"
        .AllowMultiSelect = False
        .Filters.Clear
        .Filters.Add "Files", "*.txt", 1
        .Title = "Open CustomPropertiesTextFile"
        .InitialView = msoFileDialogViewDetails
        .Show
        For Each objfl In .SelectedItems
            TextFileName = objfl
        Next objfl
        On Error GoTo 0
    End With
    Set fd = Nothing
    
    Open TextFileName For Input As #1
    ' READING LINES FROM FILE
    While Not EOF(1)
        Line Input #1, TextLine
        
        Do While Left(TextLine, 1) = vbTab
            TextLine = Mid(TextLine, 2)
        Loop
        
        If TextLine <> "" Then
            TextLine = Trim(TextLine)
            a = InStr(TextLine, " = """)
            PropertyName = ""
            PropertyValue = ""
            PropertyName = Left(TextLine, a - 1)
            PropertyValue = Mid(TextLine, a + 4, Len(TextLine) - Len(PropertyName) - 5)
            If PropertyName <> "" Then
                SetProp PropertyName, PropertyValue
            End If
        End If
    Wend
    Close #1
    MsgBox "Done!"
End Sub



' Saving docproperties and values to file
Sub SaveDocumentPropertiesAndValuesToFile()
    Dim targetFilePath As String
    targetFilePath = ThisDocument.Path & "\" & ThisDocument.Name & "_prop.txt"
    'targetFilePath = "I:\" & ThisDocument.Name & "_" & Strings.Format(Now, "yyyyMMddHHnnss") & "_prop.txt"
    
    Dim targetFile As Integer
    targetFile = FreeFile
    Open targetFilePath For Output As targetFile
    
    Dim dp As DocumentProperty
    For Each dp In ActiveDocument.CustomDocumentProperties
        Print #targetFile, dp.Name & " = " & Chr(34) & dp.Value & Chr(34)
    Next
    Close #targetFile
    
    Debug.Print targetFilePath
    Beep
    MsgBox "Ulo|fffd|en|fffd| pod n|fffd|zvom: " & targetFilePath
    
    Shell ("CMD.EXE /C START " & """" & """" & " " & """" & targetFilePath & """")
    
    Dim a As Integer
    a = MsgBox("Vyma|fffd|em s|fffd|bor: " & targetFilePath & "  ???", vbYesNo)
    If a = 6 Then Kill targetFilePath
End Sub



' Delete all docproperties from document
Sub DeleteDocumentPropertiesFromDocument()
    Dim dp As DocumentProperty
    Do While ActiveDocument.CustomDocumentProperties.count > 0
        Debug.Print ActiveDocument.CustomDocumentProperties(1).Delete
    Loop
    Beep
End Sub



' Show count ofdocument properties
Sub ShowCountOfDocumentProperties()
    Debug.Print ActiveDocument.CustomDocumentProperties.count
End Sub



' Calculate lenght of values in docproperties
Function LenghtOfValuesInDocumentProperties() As Integer
    Dim count As Integer: count = 0
    Dim i As Integer
    For i = 1 To ActiveDocument.CustomDocumentProperties.count
        count = count + Len(ActiveDocument.CustomDocumentProperties(i).Value & "")
    Next
    LenghtOfValuesInDocumentProperties = count
End Function


' KONTROLA CI JE STRING DATUM
Function JeDatum(datum_string As String) As Boolean
    Dim aa() As String
    JeDatum = True
    Dim a As String
    a = Trim(datum_string)
    aa = Split(a, ".")
    If UBound(aa) <> 2 Then JeDatum = False
    If JeDatum Then
        If Not IsNumeric(aa(0)) Then JeDatum = False
        If Not IsNumeric(aa(1)) Then JeDatum = False
        If Not IsNumeric(aa(2)) Then JeDatum = False
        If JeDatum Then
            If Not (aa(0) >= 1 And aa(0) <= 31) Then JeDatum = False
            If Not (aa(1) >= 1 And aa(1) <= 12) Then JeDatum = False
            If Not (aa(2) >= 1900 And aa(2) <= 2050) Then JeDatum = False
        End If
    End If
End Function

' 01.02.2003 to 20030201
Function StringToDateYYYYMMDD(datumtext As String) As String
    Dim datum As Date
    Dim cisla() As String
    StringToDateYYYYMMDD = ""
    cisla = Split(Trim(Replace(Replace(Replace(Replace(datumtext, " ", "."), ",", "."), "/", "."), "-", ".")), ".")
    If UBound(cisla) + 1 = 3 Then
        If IsNumeric(cisla(0)) And IsNumeric(cisla(1)) And IsNumeric(cisla(2)) Then
            ' TEST 2013.02.01 / 01.02.2013
            If InRange(cisla(0), 1800, 2099) And InRange(cisla(1), 1, 12) And InRange(cisla(2), 1, 31) Then datum = DateSerial(cisla(0), cisla(1), cisla(2))
            If InRange(cisla(0), 1, 31) And InRange(cisla(1), 1, 12) And InRange(cisla(2), 1800, 2099) Then datum = DateSerial(cisla(2), cisla(1), cisla(0))
            ' TEST 13.02.01 / 01.02.13
            If InRange(cisla(2), 0, 30) And InRange(cisla(1), 1, 12) And InRange(cisla(0), 1, 31) Then datum = DateSerial("20" & Format(cisla(0), "00"), cisla(1), cisla(2))
            If InRange(cisla(2), 30, 99) And InRange(cisla(1), 1, 12) And InRange(cisla(0), 1, 31) Then datum = DateSerial("19" & Format(cisla(0), "00"), cisla(1), cisla(2))
            If InRange(cisla(0), 1, 31) And InRange(cisla(1), 1, 12) And InRange(cisla(2), 0, 30) Then datum = DateSerial("20" & Format(cisla(2), "00"), cisla(1), cisla(0))
            If InRange(cisla(0), 1, 31) And InRange(cisla(1), 1, 12) And InRange(cisla(2), 30, 99) Then datum = DateSerial("19" & Format(cisla(2), "00"), cisla(1), cisla(0))
            StringToDateYYYYMMDD = Format(datum, "yyyymmdd")
            If StringToDateYYYYMMDD < "19000000" Then StringToDateYYYYMMDD = ""
        End If
    End If
End Function

Function InRange(ByVal number As Integer, ByVal min_value As Integer, ByVal max_value As Integer) As Boolean
    InRange = (number >= min_value And number <= max_value)
End Function



' Refreshing fileds of document
Sub RefreshDoc()
    Selection.GoTo What:=wdGoToSection, Which:=wdGoToFirst
    ThisDocument.Characters.First.Select
    ThisDocument.Fields.Update
    Selection.GoTo What:=wdGoToSection, Which:=wdGoToFirst
    ThisDocument.Characters.First.Select
    On Error Resume Next
    ActiveDocument.Sections(ActiveDocument.Sections.count).Headers(1).Range.Fields.Update
    ActiveDocument.Sections(ActiveDocument.Sections.count).Footers(1).Range.Fields.Update
    On Error GoTo 0
End Sub



' ZAOKRUHLENIE NADOL (2 cifry)
Function zaokruhlenieNadol(ByVal vstup As Double) As Double
    Dim a As Integer
    vstup = vstup * 100
    a = 0
    While (a + 1) < vstup
        a = a + 1
    Wend
    If (a + 1) & "" = vstup & "" Then
        a = a + 1
    End If
    vstup = a / 100
    zaokruhlenieNadol = vstup
End Function


' ZAOKRUHLENIE NORMALNE NA CELE CISLA (ZOHLADNUJU SA 2 DESATINNE CISLA)
Function zaokruhlenieNormal(ByVal vstup As Double) As Double
    Dim a As Long
    vstup = vstup * 100
    a = 0
    While (a + 1) < vstup
        a = a + 100
    Wend
    a = a - 100
    vstup = vstup - a
    If vstup > 49.999999 Then
        vstup = a + 100
    Else
        vstup = a
    End If
    
    vstup = vstup / 100
    zaokruhlenieNormal = vstup
End Function
Attribute VB_Name = "Form_KorespondencnaAlternAdresa"
Attribute VB_Base = "0{CA63BD4F-D16C-4DFE-A161-F87ACB258675}{217BA72E-E033-4B77-A1AF-CDA6A1ABE672}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False

' MACH - ALTERNATIVNE ADRESY ********************************************************************************************************************************************************************

Option Explicit

Private Sub UserForm_Initialize()
    SetProp "NV.KorespondencnaAdresaIndex", ""
    
    Dim i As Integer
    Dim alternativeAddressCount As Integer: alternativeAddressCount = 0
    Dim address_index As Integer: address_index = -1
    Dim addressText As String: addressText = ""
    Dim oneline As String
    
    ' COUNT ALTERNATIVE ADDRESSES
    For i = 0 To 9
        If Trim(GetProp("AlternativeAddressCollection[" & i & "].AddressIdentifier.LinkedAddressNumber")) <> "" Then
            If IsNumeric(Trim(GetProp("AlternativeAddressCollection[" & i & "].AddressIdentifier.LinkedAddressNumber"))) Then
                alternativeAddressCount = alternativeAddressCount + 1
            End If
        Else
            If Trim(GetProp("AlternativeAddressCollection[" & i & "].AddressIdentifier.SequenceNumber")) <> "" Then
                If IsNumeric(Trim(GetProp("AlternativeAddressCollection[" & i & "].AddressIdentifier.SequenceNumber"))) Then
                    alternativeAddressCount = alternativeAddressCount + 1
                End If
            End If
        End If
    Next i
    If alternativeAddressCount < 1 Then
        SetProp "NV.KorespondencnaAdresaIndex", ""
    End If
    If alternativeAddressCount = 1 Then
        SetProp "NV.KorespondencnaAdresaIndex", "0"
    End If
    If alternativeAddressCount > 1 Then
        SetProp "NV.KorespondencnaAdresaIndex", "?"
        ' NAPLNIME COMBOBOX
        ComboBox1.Clear
        For i = 0 To 9
            If GetProp("AlternativeAddressCollection[" & i & "].DeliveryAddressType") <> "" Then
                If GetProp("AlternativeAddressCollection[" & i & "].DeliveryAddressType") = "P" Then
                    oneline = ""
                    addressText = ""
                    '''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
                    oneline = Trim(GetProp("AlternativeAddressCollection[" & i & "].PhysicalAddress.AddressFirstLine"))
                    If oneline <> "" Then addressText = addressText & oneline & vbCrLf
                    '''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
                    oneline = Trim(GetProp("AlternativeAddressCollection[" & i & "].PhysicalAddress.StreetAddress"))
                    If oneline <> "" Then addressText = addressText & oneline & vbCrLf
                    '''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
                    oneline = Trim(GetProp("AlternativeAddressCollection[" & i & "].PhysicalAddress.POBox"))
                    If oneline <> "" Then addressText = addressText & "P. O. Box. " & oneline & vbCrLf
                    '''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
                    oneline = Trim(GetProp("AlternativeAddressCollection[" & i & "].PhysicalAddress.ZIPCode"))
                    If oneline <> "" Then oneline = oneline & ", "
                    If Trim(GetProp("AlternativeAddressCollection[" & i & "].PhysicalAddress.PostalPlace")) <> "" Then
                        oneline = oneline & Trim(GetProp("AlternativeAddressCollection[" & i & "].PhysicalAddress.PostalPlace"))
                    Else
                        oneline = oneline & Trim(GetProp("AlternativeAddressCollection[" & i & "].PhysicalAddress.City"))
                    End If
                    If oneline <> "" Then addressText = addressText & oneline & vbCrLf
                    '''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
                    oneline = Trim(GetProp("AlternativeAddressCollection[" & i & "].PhysicalAddress.Country.DisplayedText"))
                    If oneline = "SLOVAKIA" Then oneline = ""
                    If oneline <> "" Then addressText = addressText & oneline & vbCrLf
                    '''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
                End If
                If GetProp("AlternativeAddressCollection[" & i & "].DeliveryAddressType") = "E" Then
                    addressText = Trim(GetProp("AlternativeAddressCollection[" & i & "].ElectronicAddress.EmailAddress"))
                End If
                If GetProp("AlternativeAddressCollection[" & i & "].DeliveryAddressType") = "B" Then
                    addressText = Trim(GetProp("AlternativeAddressCollection[" & i & "].BranchAddress.StatementOPU"))
                End If
                If Right(addressText, Len(vbCrLf)) = vbCrLf Then addressText = Mid(addressText, 1, Len(addressText) - Len(vbCrLf)) ' if the string end with new line, delete new line
                addressText = Trim(Replace(addressText, vbCrLf, ", "))
                addressText = i & " - " & addressText
                ComboBox1.AddItem addressText
                If i = 0 Then ComboBox1.Text = addressText
            End If
        Next i
    End If
    
End Sub



Private Sub UserForm_Activate()
    If GetProp("NV.KorespondencnaAdresaIndex") <> "?" Then
        Unload Me
    End If
End Sub



Private Sub CommandButton1_Click()
    Unload Me
End Sub



Private Sub UserForm_Terminate()
    processAnswer
End Sub



Sub processAnswer()
    Dim temptext As String
    If GetProp("NV.KorespondencnaAdresaIndex") = "?" Then
        temptext = Split(ComboBox1.Text, " - ")(0)
        If IsNumeric(temptext) Then
            SetProp "NV.KorespondencnaAdresaIndex", temptext
        Else
            SetProp "NV.KorespondencnaAdresaIndex", ""
        End If
    End If
    
    If GetProp("NV.KorespondencnaAdresaIndex") = "" Or Not IsNumeric(GetProp("NV.KorespondencnaAdresaIndex")) Then
        ' nothing to do
    Else
        Dim i As Integer
        Dim addressText As String: addressText = ""
        Dim oneline As String
        
        i = CInt(GetProp("NV.KorespondencnaAdresaIndex"))
        
        ' KORESPONDENCNA ADRESA
        If GetProp("AlternativeAddressCollection[" & i & "].DeliveryAddressType") = "P" Then
            SetProp "NV.CorrespondenceAddress.DeliveryType", "P"
            '''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
            oneline = Trim(GetProp("AlternativeAddressCollection[" & i & "].PhysicalAddress.AddressFirstLine"))
            If oneline <> "" Then addressText = addressText & oneline & vbCrLf
            '''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
            oneline = Trim(GetProp("AlternativeAddressCollection[" & i & "].PhysicalAddress.StreetAddress"))
            If oneline <> "" Then addressText = addressText & oneline & vbCrLf
            '''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
            oneline = Trim(GetProp("AlternativeAddressCollection[" & i & "].PhysicalAddress.POBox"))
            If oneline <> "" Then addressText = addressText & "P. O. Box. " & oneline & vbCrLf
            '''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
            oneline = Trim(GetProp("AlternativeAddressCollection[" & i & "].PhysicalAddress.ZIPCode"))
            If oneline <> "" Then oneline = oneline & ", "
            If Trim(GetProp("AlternativeAddressCollection[" & i & "].PhysicalAddress.PostalPlace")) <> "" Then
                oneline = oneline & Trim(GetProp("AlternativeAddressCollection[" & i & "].PhysicalAddress.PostalPlace"))
            Else
                oneline = oneline & Trim(GetProp("AlternativeAddressCollection[" & i & "].PhysicalAddress.City"))
            End If
            If oneline <> "" Then addressText = addressText & oneline & vbCrLf
            '''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
            oneline = Trim(GetProp("AlternativeAddressCollection[" & i & "].PhysicalAddress.Country.DisplayedText"))
            If oneline = "SLOVAKIA" Then oneline = ""
            If oneline <> "" Then addressText = addressText & oneline & vbCrLf
            '''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
        End If
        If GetProp("AlternativeAddressCollection[" & i & "].DeliveryAddressType") = "E" Then
            SetProp "NV.CorrespondenceAddress.DeliveryType", "E"
            addressText = Trim(GetProp("AlternativeAddressCollection[" & i & "].ElectronicAddress.EmailAddress"))
            
            If Trim(GetProp("AlternativeAddressCollection[" & i & "].ElectronicAddress.Password")) <> "" And Trim(GetProp("AlternativeAddressCollection[" & i & "].ElectronicAddress.GWSFolder")) <> "" Then
                SetFormField "ft_Heslo_ID", Trim(GetProp("AlternativeAddressCollection[" & i & "].ElectronicAddress.Password")) & " / " & Trim(GetProp("AlternativeAddressCollection[" & i & "].ElectronicAddress.GWSFolder")), False
            Else
                If Trim(GetProp("AlternativeAddressCollection[" & i & "].ElectronicAddress.Password")) <> "" Then SetFormField "ft_Heslo_ID", Trim(GetProp("AlternativeAddressCollection[" & i & "].ElectronicAddress.Password")), False
                If Trim(GetProp("AlternativeAddressCollection[" & i & "].ElectronicAddress.GWSFolder")) <> "" Then SetFormField "ft_Heslo_ID", Trim(GetProp("AlternativeAddressCollection[" & i & "].ElectronicAddress.GWSFolder")), False
            End If
            
        End If
        If GetProp("AlternativeAddressCollection[" & i & "].DeliveryAddressType") = "B" Then
            SetProp "NV.CorrespondenceAddress.DeliveryType", "B"
            addressText = ""
            While addressText = ""
                addressText = InputBox("Klient si vybral doru|fffd|ovanie v|fffd|pisov na pobo|fffd|ku " & Trim(GetProp("AlternativeAddressCollection[" & i & "].BranchAddress.StatementOPU")) & ". Pros|fffd|m vypl|fffd|te adresu pobo|fffd|ky: ", "Adresa" & Trim(GetProp("AlternativeAddressCollection[" & i & "].BranchAddress.StatementOPU")))
            Wend
        End If
        If Right(addressText, Len(vbCrLf)) = vbCrLf Then addressText = Mid(addressText, 1, Len(addressText) - Len(vbCrLf)) ' if the string end with new line, delete new line
        SetPropSeq "NV.CorrespondenceAddress", addressText
    End If
End Sub
Attribute VB_Name = "Form_vyberpobocky"
Attribute VB_Base = "0{56F3BCEB-C9C1-4A21-A3D3-00DD6008A6AB}{C36E3D16-04BB-4518-AB81-B43AA4E6B494}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Option Explicit
Private Sub UserForm_Initialize()
    Dim item1 As String
    Dim item2 As String
    item1 = Trim(GetProp("AccountStaticDetail.OPUStreet")) & ", " & Trim(GetProp("AccountStaticDetail.OPUTown"))
    item2 = Trim(GetProp("User.OPUStreet")) & ", " & Trim(GetProp("User.OPUTown"))
    ComboBox1.Clear
    ComboBox1.AddItem item1
    ComboBox1.AddItem item2
    ComboBox1.Text = item1
    'ComboBox1
End Sub

Private Sub CommandButton1_Click()
    Unload Me
End Sub

Private Sub UserForm_Terminate()
    processAnswer
End Sub

Sub processAnswer()
    Dim item1 As String
    Dim item2 As String
    Dim sel1 As Boolean
    Dim sel2 As Boolean
    item1 = Trim(GetProp("AccountStaticDetail.OPUStreet")) & ", " & Trim(GetProp("AccountStaticDetail.OPUTown"))
    item2 = Trim(GetProp("User.OPUStreet")) & ", " & Trim(GetProp("User.OPUTown"))
    
    Dim ttext As String
    ttext = ""
    
    sel1 = False:  sel2 = False
    If Trim(ComboBox1.Text) = Trim(item1) Then
        ttext = ""
        If GetProp("AccountStaticDetail.OPUTown") <> "" Then ttext = ttext & "pobo|fffd|ka " & GetProp("AccountStaticDetail.OPUTown")
        If GetProp("AccountStaticDetail.OPUTown") <> "" And GetProp("AccountStaticDetail.OPUStreet") <> "" Then ttext = ttext & ", "
        If GetProp("AccountStaticDetail.OPUStreet") <> "" Then ttext = ttext & "ul. " & GetProp("AccountStaticDetail.OPUStreet")
        If GetProp("AccountStaticDetail.OPUStreet") <> "" And GetProp("AccountStaticDetail.OPUZipCode") <> "" Then ttext = ttext & ", "
        If GetProp("AccountStaticDetail.OPUZipCode") <> "" Then ttext = ttext & "PS|fffd|: " & GetProp("AccountStaticDetail.OPUZipCode")
        SetProp "NewValues.obchodneMiesto", ttext
        SetProp "NewValues.obchodneMiestoTel", GetProp("AccountStaticDetail.OPUTelephoneNumber")
        SetProp "NewValues.obchodneMiestoFax", GetProp("AccountStaticDetail.OPUFaxNumber")
        SetProp "NewValues.obchodneMiestoTwn", GetProp("AccountStaticDetail.OPUTown")
    End If
    If Trim(ComboBox1.Text) = Trim(item2) Then
        ttext = ""
        If GetProp("User.OPUTown") <> "" Then ttext = ttext & "pobo|fffd|ka " & GetProp("User.OPUTown")
        If GetProp("User.OPUTown") <> "" And GetProp("User.OPUStreet") <> "" Then ttext = ttext & ", "
        If GetProp("User.OPUStreet") <> "" Then ttext = ttext & "ul. " & GetProp("User.OPUStreet")
        If GetProp("User.OPUStreet") <> "" And GetProp("User.OPUZipCode") <> "" Then ttext = ttext & ", "
        If GetProp("User.OPUZipCode") <> "" Then ttext = ttext & "PS|fffd|: " & GetProp("User.OPUZipCode")
        SetProp "NewValues.obchodneMiesto", ttext
        SetProp "NewValues.obchodneMiestoTel", GetProp("User.OPUTelephoneNumber")
        SetProp "NewValues.obchodneMiestoFax", GetProp("User.OPUFaxNumber")
        SetProp "NewValues.obchodneMiestoTwn", GetProp("User.OPUTown")
    End If
End Sub
Attribute VB_Name = "ThisApplication"
Attribute VB_Base = "0{FCFB3D2A-A0FA-1068-A738-08002B3371B5}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = False
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Option Explicit
 
Public WithEvents oApp As Word.Application
Attribute oApp.VB_VarHelpID = -1
 
Private Sub oApp_DocumentBeforePrint(ByVal Doc As Document, Cancel As Boolean)
    ThisDocument.CheckDoc
End Sub


Attribute VB_Name = "ThisDocument"
Attribute VB_Base = "1Normal.ThisDocument"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = True
Attribute VB_Customizable = True
Option Explicit

Const controlProperty As String = "Process.BranchID"

' Instance of self class ThisApplication (on Class Modules), which call procedure Check before print
Dim oAppClass As New ThisApplication



' First procedure
Private Sub Document_Open()
    Debug.Print "Document_Open: " & ThisDocument.Name
    
    ' MACRO FOR THE RETAIL LOAN ADMINISTRATION TESTER
    If LCase(Left(ThisDocument.Name, 7)) = "tester_" Then LoadDocPropFromHTML

    Set oAppClass.oApp = Word.Application                                                       ' define variable oAppClass
    Application.OnTime When:=Now + TimeValue("00:00:01"), Name:="ThisDocument.TimedCheck"       ' time next run of  procedure
End Sub


' Procedure checking DocumentProperties
Sub TimedCheck()
    Static a As Integer                                                                         ' static variable for counting attempts
    a = a + 1                                                                                   ' increment counter
    
    ' KONTROLA
        Dim test As String
        test = Trim(GetProp(controlProperty))
        Debug.Print "TimedCheckDocPropTest(" & a & "," & ThisDocument.Name & "): " & controlProperty & " = " & test
        If test = "" Then                                                                           ' if property is empty (should be set)
            If a >= 200 Then                                                                        ' on 200th attempt procedure
                MsgBox Prompt:="CustomProperties are unreachable!", Title:="Warning! (#21)"         ' ptrint warning
                Exit Sub                                                                            ' exit subprocedure
            End If
            Application.OnTime When:=Now + TimeValue("00:00:02"), Name:="ThisDocument.TimedCheck"   ' schedule TimedCheck
            Exit Sub                                                                                ' exit procedure
        End If
    
    Debug.Print "PASSED!"
    DataCountCheck                                                                                  ' start procedure
End Sub



' Procedure checking count of data in  DocumentProperties
Sub DataCountCheck()
    Static lastCount As Integer
    Dim actualCount As Integer
    actualCount = LenghtOfValuesInDocumentProperties
    
    Debug.Print "DataCountCheckDocPropTest(" & ThisDocument.Name & "): actualCount = " & actualCount
    
    'If lastCount = actualCount AND actualCount > 200 Then
    If lastCount = actualCount Then
        CheckDoc
    Else
        lastCount = actualCount
        Application.OnTime When:=Now + TimeValue("00:00:02"), Name:="ThisDocument.DataCountCheck"   ' schedule DataCountCheck
    End If
End Sub



' Checking document
Sub CheckDoc()
    Debug.Print "CheckDoc"
    
    
    ' KONTROLA ********************************************************************************************************************************************************************
        Dim test As String
        test = Trim(GetProp(controlProperty))
        Debug.Print "DocPropTest: " & controlProperty & " = " & test
        If test = "" Then
            TimedCheck
            MsgBox Prompt:="CustomProperties are unreachable!", Title:="Warning! (#22)"
            Exit Sub
        End If
    
    
    ' KONTROLA CI SA NESPUSTI FUNKCIA DRUHYKRAT ********************************************************************************************************************************************************************
        If GetProp("NV.UzSaSpustilaFunkciaGenerovanie") = "Ano" Then Exit Sub
        SetProp "NV.UzSaSpustilaFunkciaGenerovanie", "Ano"
    
    
    'SKONTROLUJEME OPU SLOV ********************************************************************************************************************************************************************
        If UCase(GetProp("Process.BranchID")) = "SLOV" Then
            Form_vyberpobocky.Show
        Else
            Dim ttext As String
            ttext = ""
            If GetProp("User.OPUTown") <> "" Then ttext = ttext & "pobo|fffd|ka " & GetProp("User.OPUTown")
            If GetProp("User.OPUTown") <> "" And GetProp("User.OPUStreet") <> "" Then ttext = ttext & ", "
            If GetProp("User.OPUStreet") <> "" Then ttext = ttext & "ul. " & GetProp("User.OPUStreet")
            If GetProp("User.OPUStreet") <> "" And GetProp("User.OPUZipCode") <> "" Then ttext = ttext & ", "
            If GetProp("User.OPUZipCode") <> "" Then ttext = ttext & "PS|fffd|: " & GetProp("User.OPUZipCode")
            SetProp "NewValues.obchodneMiesto", ttext
            SetProp "NewValues.obchodneMiestoTel", GetProp("User.OPUTelephoneNumber")
            SetProp "NewValues.obchodneMiestoFax", GetProp("User.OPUFaxNumber")
            SetProp "NewValues.obchodneMiestoTwn", GetProp("User.OPUTown")
        End If
    
    
    If Trim(GetProp("AccountFee.TransferToAccount")) <> "" Then
        SetFormField "ft_CreditInterestACC", Trim(GetProp("AccountFee.TransferToAccount")) & "/1111", True
        SetFormField "ft_CreditInterestIBN", GetIBAN("1111", "000000", Trim(GetProp("AccountFee.TransferToAccount"))), True
    Else
' 26.9.2018 - po dohode s p. Urblikovou nerusit ale vlozit modifikovatelne formularove pole
        deleteRowWhereIsMarker "_PrevodNaUcet_"
'        SetFormField "ft_CreditInterestACC", "|fffd||fffd|slo |fffd||fffd|tu", True
'        SetFormField "ft_CreditInterestIBN", "IBAN", True
    End If
    
    ' Credit Interest Account  ******************************************************************************************************************************************************************************
        If Trim(GetProp("CreditInterest.InterestAccountNumber")) = "" Then
            SetFormField "ft_CreditInterestAC", Trim(GetProp("AccountStaticDetail.AccountNumber")) & "/1111", True
            SetFormField "ft_CreditInterestIB", Trim(GetProp("AccountStaticDetail.IBAN")), True
        Else
            SetFormField "ft_CreditInterestAC", Trim(GetProp("CreditInterest.InterestAccountNumber")) & "/1111", True
            SetFormField "ft_CreditInterestIB", Trim(GetProp("CreditInterest.InterestAccountNumber_IBAN")), True
            If Trim(GetProp("CreditInterest.InterestAccountNumber_IBAN")) = "" Then
                MsgBox "Pozor! V |fffd|l|fffd|nku III. v bode 4. |fffd||fffd|et na pripisovanie |fffd|rokov nem|fffd| vyplnen|fffd| IBAN. Pros|fffd|m vyplnte v |fffd|abl|fffd|ne IBAN |fffd||fffd|tu."
                SetFormField "ft_CreditInterestIB", ".......................", True
            End If
        End If
        
        
    ' MACH CHANGE - CLIENT NAME ********************************************************************************************************************************************************************
        Dim MenoKlienta As String
        Dim majitel As String
        MenoKlienta = Trim(GetProp("ClientPersonal.BusinessName1")) & Trim(GetProp("ClientPersonal.BusinessName2")) & Trim(GetProp("ClientPersonal.BusinessName3")) & Trim(GetProp("ClientPersonal.BusinessName4"))
        If Len(MenoKlienta) = 0 Then
            MenoKlienta = GetProp("ClientPersonal.ClientFirstName") & " " & GetProp("ClientPersonal.ClientLastName")
            If Len(Trim(GetProp("ClientPersonal.TitleProfessional"))) <> 0 Then
                MenoKlienta = GetProp("ClientPersonal.TitleProfessional") & " " & MenoKlienta
            End If
            If Len(Trim(GetProp("ClientPersonal.TitleAfter"))) <> 0 Then
                MenoKlienta = MenoKlienta & ", " & GetProp("ClientPersonal.TitleAfter")
            End If
        End If
        MenoKlienta = Trim(MenoKlienta)
        If Len(MenoKlienta) = 0 Then
            MenoKlienta = Trim(GetProp("ClientPersonal.Name"))
        End If
        SetFormField "ff_MenoKlienta", MenoKlienta, True
        majitel = MenoKlienta & ", majite|fffd|"
        
        
    ' MACH - ALTERNATIVNE ADRESY ********************************************************************************************************************************************************************
        Form_KorespondencnaAlternAdresa.Show
        
        
    ' KONTROLA RC *******************************************************************************************************************************************************************************
        If Trim(GetProp("ClientPersonal.PersonalIDNumber")) = "" Then
            SetProp "ClientPersonal.PersonalIDNumber", GetProp("ClientPersonal.PersonalIDCZ")
        End If
        
        
    ' OP  ********************************************************************************************************************************************************************
        Dim ClientPersonal_IDCardNumber As String
        Dim ClientPersonal_PassportNumber As String
        ClientPersonal_IDCardNumber = Trim(GetProp("ClientPersonal.IDCardNumber"))
        ClientPersonal_PassportNumber = UCase(Trim(GetProp("ClientPersonal.PassportNumber")))
        If ClientPersonal_IDCardNumber = "AA 999999" Or Left(LCase(ClientPersonal_IDCardNumber), 7) = "malolet" Then
            If ClientPersonal_PassportNumber = "N" Then
                ClientPersonal_IDCardNumber = "malolet|fffd| bez OP"
            Else
                ClientPersonal_IDCardNumber = ClientPersonal_PassportNumber
            End If
        End If
        If ClientPersonal_IDCardNumber = "AA 777777" Then
            ClientPersonal_IDCardNumber = ClientPersonal_PassportNumber
        End If
        If ClientPersonal_IDCardNumber = "" Then
            ClientPersonal_IDCardNumber = ClientPersonal_PassportNumber
        End If
        SetFormField "ff_DokladTotoz", ClientPersonal_IDCardNumber, True
   
   ' NASTAVENIE TRHOVEHO SEGMENTU ********************************************************************************************************************************************************************
        Dim TrhovySegment As String
        
        'NETLACIT PRE KLIENTOV S TRHOVYM SEGMENTOM
        TrhovySegment = Trim(GetProp("ClientOther.MarketSegment"))
        
        If TrhovySegment = "131" Then deleteRowWhereIsMarker "_NetlacitPreKlientov_"
        If TrhovySegment = "133" Then deleteRowWhereIsMarker "_NetlacitPreKlientov_"
        If TrhovySegment = "135" Then deleteRowWhereIsMarker "_NetlacitPreKlientov_"
        If TrhovySegment >= "136" Then deleteRowWhereIsMarker "_NetlacitPreKlientov_"
        
        'TLACIT PRE KLIENTOV S TRHOVYM SEGMENTOM
        If TrhovySegment < "131" Then deleteRowWhereIsMarker "_TlacitPreKlientov_"
        If TrhovySegment = "132" Then deleteRowWhereIsMarker "_TlacitPreKlientov_"
        If TrhovySegment = "134" Then deleteRowWhereIsMarker "_TlacitPreKlientov_"
        
        
        
    ' MACH CHANGE - REGISTRY ********************************************************************************************************************************************************************
        Dim finaltext    As String: finaltext = ""
        Dim registrycode As String: registrycode = Trim(GetProp("ClientLicenseRegistration.Registry"))
        Dim registry     As String: registry = Trim(GetProp("ClientLicenseRegistration.Registry.DisplayedText"))
        Dim registeredby As String: registeredby = Trim(GetProp("ClientLicenseRegistration.RegisteredBy.DisplayedText"))
        Dim issued       As String: issued = Trim(GetProp("ClientLicenseRegistration.Issued"))
        Dim documenttype As String: documenttype = Trim(GetProp("ClientLicenseRegistration.DocumentType"))
        Dim number       As String: number = Trim(GetProp("ClientLicenseRegistration.Number"))
        Dim inpart       As String: inpart = Trim(GetProp("ClientLicenseRegistration.InPart.DisplayedText"))
        
        If registeredby = "" Then registeredby = Trim(GetProp("ClientLicenseRegistration.RegisteredBy"))
        If inpart = "" Then
            inpart = Trim(GetProp("ClientLicenseRegistration.InPart"))
            If inpart = "DR" Then inpart = "Oddiel: Dr"
            If inpart = "FI" Then inpart = "Oddiel: Firm"
            If inpart = "PO" Then inpart = "Oddiel: Po"
            If inpart = "PS" Then inpart = "Oddiel: P|fffd|n"
            If inpart = "SA" Then inpart = "Oddiel: Sa"
            If inpart = "SR" Then inpart = "Oddiel: Sr"
            If inpart = "SO" Then inpart = "Oddiel: Sro"
        End If
        If Len(registrycode) > 0 Then
            If registrycode = "ID" Then finaltext = documenttype & ", " & issued & ", " & number                              ' In|fffd| doklad
            If registrycode = "LI" Then finaltext = registeredby & ", " & issued & ", vlo|fffd|ka |fffd|. " & number                    ' Licencia
            If registrycode = "OS" Then finaltext = registeredby & ", " & issued & ", " & number                              ' Osved|fffd|enie
            If registrycode = "RE" Then finaltext = registeredby & ", " & issued & ", " & number                              ' Registracia
            If registrycode = "VO" Then finaltext = registry & ", " & registeredby & ", " & inpart & ", vlo|fffd|ka |fffd|. " & number  ' V|fffd|pis z obchodn|fffd|ho registra
            If registrycode = "VZ" Then finaltext = registry & ", " & registeredby & ", " & issued & ", |fffd|. |fffd|ivn.reg. " & number  ' V|fffd|pis zo |fffd|ivnostenk|fffd|ho registra
            
            If registrycode = "OR" Then finaltext = registry & ", " & registeredby & ", " & inpart & ", vlo|fffd|ka |fffd|. " & number  ' Obchodn|fffd| register
            If registrycode = "ZL" Then finaltext = registry & ", " & registeredby & ", " & issued & ", vlo|fffd|ka |fffd|. " & number  ' |fffd|ivnostensk|fffd| list
        Else
            finaltext = Trim(GetProp("ClientLicenseRegistration.RegistryNote"))
        End If
        finaltext = Trim(Replace(finaltext, ", , ", ", "))
        If Left(finaltext, 2) = ", " Then finaltext = Mid(finaltext, 3)
        SetFormField "ff_ZapisanyVReg", finaltext, True
        
        
    ' VYTVORIME TEXT NEWVALUES.MAJITELUCTUNAKONCI ********************************************************************************************************************************************************************
        Dim pocet As Integer
        Dim vmmu As String
        Dim clientnumber As String
        pocet = 0
        
        Dim i As Integer
        Dim j As Integer
        For i = 0 To 10
            vmmu = ""
            If Len(Trim(GetProp("ClientRepresentativeCollection[" & i & "].Name"))) <> 0 Then
                majitel = GetProp("ClientRepresentativeCollection[" & i & "].Name") & " " & GetProp("ClientRepresentativeCollection[" & i & "].Surname")
                
                ' NADSTAVBA
                clientnumber = Trim(GetProp("ClientRepresentativeCollection[" & i & "].ClientRepresentativeID"))
                If Len(clientnumber) > 2 Then
                    For j = 0 To 10
                        If GetProp("AuthorizedPersonCollection[" & j & "].ClientNumber") = clientnumber Then
                            majitel = GetProp("AuthorizedPersonCollection[" & j & "].ClientPersonal.ClientFirstName") & " " & GetProp("AuthorizedPersonCollection[" & j & "].ClientPersonal.ClientLastName")
                            If Len(Trim(GetProp("AuthorizedPersonCollection[" & j & "].ClientPersonal.TitleProfessional"))) <> 0 Then
                                majitel = GetProp("AuthorizedPersonCollection[" & j & "].ClientPersonal.TitleProfessional") & " " & majitel
                            End If
                            If Len(Trim(GetProp("AuthorizedPersonCollection[" & j & "].ClientPersonal.TitleAfter"))) <> 0 Then
                                majitel = majitel & ", " & GetProp("AuthorizedPersonCollection[" & j & "].ClientPersonal.TitleAfter")
                            End If
                        End If
                    Next j
                End If
                ' KONIEC NADSTAVBY
                
                If Len(Trim(GetProp("ClientRepresentativeCollection[" & i & "].Position"))) <> 0 Then
                    majitel = majitel & vbCrLf & GetProp("ClientRepresentativeCollection[" & i & "].Position")
                End If
                
                pocet = pocet + 1
                
                vmmu = vmmu & "V mene Majite|fffd|a |fffd||fffd|tu (meno, priezvisko a funkcia):" & vbCrLf
                vmmu = vmmu & majitel & vbCrLf
                vmmu = vmmu & "Podpis:" & vbCrLf & vbCrLf
            End If
            SetProp "NewValues.VMMU" & Format(i, "00"), vmmu
        Next i
        
        If pocet = 0 Then
            vmmu = ""
            vmmu = vmmu & "V mene Majite|fffd|a |fffd||fffd|tu (meno, priezvisko a funkcia):" & vbCrLf
            vmmu = vmmu & majitel & vbCrLf
            vmmu = vmmu & "Podpis:" & vbCrLf & vbCrLf
            SetProp "NewValues.VMMU" & Format(0, "00"), vmmu
        End If
        
  
            
    '##############################     TYP KLIENTA     ##############################################################################################################################################################
    'Typ klienta = "11" alebo "99" =>Spotrebite|fffd| (Ob|fffd|an)
    'Typ klienta ="22" alebo "33" alebo "98" alebo "97" =>Nespotrebite|fffd| (|fffd|ivnostn|fffd|ci, Small Business)

    Dim ClientType As String: ClientType = ""
    
    ClientType = GetProp("ExtendedDetail.AccountOwner.ClientType")
    
    If ClientType = "" Then
        ClientType = GetProp("ClientGeneral.ClientType")
    End If
'
'    MsgBox "Client type" & ClientType
    
    'Plat|fffd| pre klientov typu 11/99
    If ClientType = "11" Or ClientType = "99" Then deleteRowWhereIsMarker "_NetlacitKedJe11,99_"

    'Plat|fffd| pre klientov typu 22,33, 97,98
    If ClientType = "22" Or ClientType = "33" Or ClientType = "97" Or ClientType = "98" Then deleteRowWhereIsMarker "_NetlacitKedJe22,33,97,98_"

    'Plati pre klienta typ 33/98 + Trhovy segment 131,133,135,136 a vyssie
'    If ClientType = "33" Or ClientType = "98" Then
'        If TrhovySegment = "131" Then deleteRowWhereIsMarker "_DorucovanieVypisov1_"
'        If TrhovySegment = "133" Then deleteRowWhereIsMarker "_DorucovanieVypisov1_"
'        If TrhovySegment = "135" Then deleteRowWhereIsMarker "_DorucovanieVypisov1_"
'        If TrhovySegment > "136" Then deleteRowWhereIsMarker "_DorucovanieVypisov1_"
'        Else
            deleteRowWhereIsMarker "_DorucovanieVypisov2_"
'    End If


    '############################################################################################################################################################################
    
    'Refresh
    Selection.GoTo What:=wdGoToSection, Which:=wdGoToFirst
    ThisDocument.Characters.First.Select
    ThisDocument.Fields.Update
    Selection.GoTo What:=wdGoToSection, Which:=wdGoToFirst
    ThisDocument.Characters.First.Select
End Sub

' KONVERZIA NA IBAN
Function GetIBAN(BankCode As String, Prefix As String, Account As String) As String
    Dim IBAN As String
    Dim cislo As String
    BankCode = Right("0000" + BankCode, 4) ' doplnenie leading zeros
    Prefix = Right("000000" + Prefix, 6) ' doplnenie leading zeros
    Account = Right("0000000000" + Account, 10) ' doplnenie leading zeros
    IBAN = BankCode & Prefix & Account & "282000"
    cislo = Right("00" & (98 - (Mod97(IBAN))), 2)
    GetIBAN = "SK" & cislo & BankCode & Prefix & Account
    If Len(GetIBAN) <> 24 Then MsgBox "IBAN - bad char count"
End Function
Function Mod97(ByVal vIban)
    Dim i, m, digit
    m = 0
    For i = 1 To Len(vIban)
        On Error Resume Next
        digit = CInt(Mid(vIban, i, 1))
        m = (10 * m + digit) Mod 97
        On Error GoTo 0
    Next
    Mod97 = m
End Function



Sub ResetMyDocProperties()
    Dim i As Integer
    For i = 0 To 10
        SetProp "NewValues.VMMU" & Format(i, "00"), ""
    Next i
    'SetProp "NewValues.VMMU", ""
    'Dim i As Integer
    'For i = 1 To 10
        'SetProp "NewValues.VMMU" & Format(i, "00") & "a", ""
        'SetProp "NewValues.VMMU" & Format(i, "00") & "b", ""
        'SetProp "NewValues.VMMU" & Format(i, "00") & "c", ""
    'Next i
End Sub

Sub PridajNoveProperties2()
    
    Dim i As Integer
    
    SetProp "ExtendedDetail.AccountOwner.ClientType", ""
    SetProp "CreditInterest.InterestAccountNumber_IBAN", ""
    SetProp "AccountStaticDetail.IBAN", ""
    
    ' MENO KLIENTA
    SetProp "ClientPersonal.TitleProfessional", ""
    SetProp "ClientPersonal.TitleAfter", ""
    SetProp "ClientPersonal.ClientFirstName", ""
    SetProp "ClientPersonal.ClientLastName", ""
    SetProp "ClientPersonal.Name", ""
    SetProp "ClientPersonal.PersonalIDCZ", ""
    
    ' DICO (nepouzivane ale pre istotu, pre buducnost)
    SetProp "ClientPersonal.VATNumber", ""
    SetProp "ClientPersonal.VATNumberPrefix", ""
    SetProp "ClientPersonal.VATNumberNumber", ""
    SetProp "ClientPersonal.VATPayer", ""
    SetProp "ClientPersonal.TaxID", ""
    
    ' REGISTER
    SetProp "ClientLicenseRegistration.Registry", ""
    SetProp "ClientLicenseRegistration.Registry.DisplayedText", ""
    SetProp "ClientLicenseRegistration.InPart", ""
    SetProp "ClientLicenseRegistration.InPart.DisplayedText", ""
    SetProp "ClientLicenseRegistration.RegisteredBy", ""
    SetProp "ClientLicenseRegistration.RegisteredBy.DisplayedText", ""
    SetProp "ClientLicenseRegistration.Issued", ""
    SetProp "ClientLicenseRegistration.DocumentType", ""
    SetProp "ClientLicenseRegistration.Number", ""
    SetProp "ClientLicenseRegistration.RegistryNote", ""
    
    Dim j As Integer
    For j = 0 To 10
        SetProp "ClientRepresentativeCollection[" & j & "].ClientRepresentativeID", ""
        SetProp "AuthorizedPersonCollection[" & j & "].ClientNumber", ""
        SetProp "AuthorizedPersonCollection[" & j & "].ClientPersonal.Name", ""
        SetProp "AuthorizedPersonCollection[" & j & "].ClientPersonal.TitleProfessional", ""
        SetProp "AuthorizedPersonCollection[" & j & "].ClientPersonal.TitleAfter", ""
        SetProp "AuthorizedPersonCollection[" & j & "].ClientPersonal.ClientLastName", ""
        SetProp "AuthorizedPersonCollection[" & j & "].ClientPersonal.ClientFirstName", ""
    Next j
End Sub




Sub AllocateAlternativeAddressCollectionFields()
    SetProp "NV.CorrespondenceAddress1", ""
    SetProp "NV.CorrespondenceAddress2", ""
    SetProp "NV.CorrespondenceAddress3", ""
    SetProp "NV.CorrespondenceAddress4", ""
    SetProp "NV.CorrespondenceAddress5", ""
    SetProp "NV.CorrespondenceAddress6", ""
    SetProp "NV.CorrespondenceAddress7", ""
    SetProp "NV.CorrespondenceAddress8", ""
    SetProp "NV.CorrespondenceAddress.DeliveryType", "P"
    
    Dim i As Integer
    For i = 0 To 9
        SetProp "AlternativeAddressCollection[" & i & "].AddressIdentifier.LinkedAddressNumber", ""                     ' hodnota = 3
        SetProp "AlternativeAddressCollection[" & i & "].AddressIdentifier.SequenceNumber", ""                          ' hodnota =
        
        SetProp "AlternativeAddressCollection[" & i & "].AddressIdentifier.OPU", ""                                     ' hodnota = BABY
        SetProp "AlternativeAddressCollection[" & i & "].AddressIdentifier.ClientNumber", ""                            ' hodnota = 1380687
        SetProp "AlternativeAddressCollection[" & i & "].AddressIdentifier.AccountNumber", ""                           ' hodnota = 1380687231
        SetProp "AlternativeAddressCollection[" & i & "].AddressIdentifier.AccountNumber_IBAN", ""                      ' hodnota = SK9811110000001380687231
        
        SetProp "AlternativeAddressCollection[" & i & "].DeliveryAddressType", ""                                       ' hodnota = P
        SetProp "AlternativeAddressCollection[" & i & "].DeliveryType", ""                                              ' hodnota = 6
        
        SetProp "AlternativeAddressCollection[" & i & "].PhysicalAddress.AddressFirstLine", ""                          ' hodnota = Roland Te|fffd|ke
        SetProp "AlternativeAddressCollection[" & i & "].PhysicalAddress.StreetAddress", ""                             ' hodnota = Koryt|fffd|rky,352
        SetProp "AlternativeAddressCollection[" & i & "].PhysicalAddress.POBox", ""                                     ' hodnota =
        SetProp "AlternativeAddressCollection[" & i & "].PhysicalAddress.ZIPCode", ""                                   ' hodnota = 96204
        SetProp "AlternativeAddressCollection[" & i & "].PhysicalAddress.City", ""                                      ' hodnota = KORYT|fffd|RKY
        SetProp "AlternativeAddressCollection[" & i & "].PhysicalAddress.Country", ""                                   ' hodnota = 105
        SetProp "AlternativeAddressCollection[" & i & "].PhysicalAddress.Country.DisplayedText", ""                     ' hodnota = SLOVAKIA
        SetProp "AlternativeAddressCollection[" & i & "].PhysicalAddress.PostalPlace", ""                               ' hodnota =
        
        SetProp "AlternativeAddressCollection[" & i & "].ElectronicAddress.EmailAddress", ""                            ' hodnota =
        SetProp "AlternativeAddressCollection[" & i & "].ElectronicAddress.GWSFolder", ""                               ' hodnota =
        SetProp "AlternativeAddressCollection[" & i & "].ElectronicAddress.Password", ""                                ' hodnota =
        
        SetProp "AlternativeAddressCollection[" & i & "].BranchAddress.StatementOPU", ""                                ' hodnota =
        
        SetProp "AlternativeAddressCollection[" & i & "].IsAdvertising", ""                                             ' hodnota =
        SetProp "AlternativeAddressCollection[" & i & "].IsUndeliverable", ""                                           ' hodnota =
        SetProp "AlternativeAddressCollection[" & i & "].PhysicalAddress.CareOf", ""                                    ' hodnota =
        SetProp "AlternativeAddressCollection[" & i & "].PhysicalAddress.District", ""                                  ' hodnota = Detva
        SetProp "AlternativeAddressCollection[" & i & "].PhysicalAddress.Complement", ""                                ' hodnota =
        SetProp "AlternativeAddressCollection[" & i & "].PhysicalAddress.Locality", ""                                  ' hodnota =
    Next i
End Sub
Attribute VB_Name = "UserForm_HTML2DP"
Attribute VB_Base = "0{B2AA0A9F-DE9F-4BDB-8FEF-FCD41106535B}{204AA331-2A29-4F3E-A828-E56C094E9276}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False




Private Sub CommandButton1_Click()
    DocumentPropertiesTools.statickaPremenna = TextBox1.Text
    
    Dim clipboard As MSForms.DataObject
    Set clipboard = New MSForms.DataObject
    clipboard.SetText "-"
    clipboard.PutInClipboard
    
    Unload Me
End Sub


INQUEST-PP=macro
