Attribute VB_Name = "AfasAdminSheet"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Option Explicit

Attribute VB_Name = "Blad2"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Module1"
Option Explicit



Attribute VB_Name = "Module2"
Option Explicit

'Declare Sub Sleep Lib "kernel32" (ByVal dwMilliseconds As Long)

Const str_DataSheetName = "Artikelen (open)"
Const str_CreateSheetName = "Brochure maken"
Const str_ExampleSheetName = "Brochure voorbeeld"
Const str_OutputSheetName = "Brochure"
Const str_PicturePrefix = "L:\AFAS_Images\Images\I_"
Const str_PicturePrefix_1 = "L:\AFAS_Images\Images_1\I_1_"
Const int_PictureOffsetLeft = 5
Const int_PictureOffsetTop = 5
Const int_PictureSizeWidth = 70
Const int_PictureSizeHeight = 70
Const int_PictureSizeMaxWidth = 620
Const int_PictureSizeMaxHeight = 440
Const str_PictureLogoFile = "L:\AFAS_Images\Logo\Logo 4everyware.png"
    
Sub Shape_Resize()
    Dim sh_Picture As Shape
    Set sh_Picture = ActiveSheet.Shapes(Application.Caller)
    If (sh_Picture.LockAspectRatio = msoFalse) Then
        sh_Picture.Visible = False
        sh_Picture.LockAspectRatio = msoTrue
        sh_Picture.ScaleHeight 1, msoTrue
        If (sh_Picture.Width > int_PictureSizeMaxWidth) Then
            sh_Picture.Width = int_PictureSizeMaxWidth
        End If
        If (sh_Picture.Height > int_PictureSizeMaxHeight) Then
            sh_Picture.Height = int_PictureSizeMaxHeight
        End If
        sh_Picture.Visible = True
        sh_Picture.ZOrder msoBringToFront
        'sh_Picture.ScaleWidth 1, msoTrue
    Else
        sh_Picture.LockAspectRatio = msoTrue
        sh_Picture.Width = int_PictureSizeWidth
        If (sh_Picture.Height > int_PictureSizeHeight) Then
            sh_Picture.Height = int_PictureSizeHeight
        End If
        sh_Picture.LockAspectRatio = msoFalse
        sh_Picture.ZOrder msoBringToFront
    End If
End Sub

Sub Button_output_Click()
    Application.ScreenUpdating = False
 
    Dim int_DataRowStart As Integer
    Dim int_DataRowFinal As Integer
    Dim int_DataRow As Integer
    Dim int_ExampleRow As Integer
    Dim int_ExampleRowStart As Integer
    Dim int_ExampleRowColumnNames As Integer
    Dim int_ExampleRowColumnNumbers As Integer
    Dim int_ExampleColumnFinal As Integer
    Dim int_ExampleColumn As Integer
    Dim int_OutputRow As Integer
    Dim str_OutputRange As String
    Dim int_DataColumnFinal As Integer
    Dim int_DataColumn As Integer
    Dim int_DataColumnPictureID As Integer

    On Error GoTo Create_Output_Err
    
    'BCL20151105: initialisatie variabelen
    int_ExampleRowStart = 9
    int_ExampleRowColumnNames = int_ExampleRowStart + 100
    int_ExampleRowColumnNumbers = int_ExampleRowStart + 101
    int_DataRowStart = 5
    int_DataRowFinal = Sheets(str_DataSheetName).Cells(Rows.Count, 1).End(xlUp).Row
    int_DataColumnPictureID = 1
    
    'BCL20151105: aanmaken output sheet
    Dim int_i As Integer
    Dim bool_OutputExists As Boolean
    
    bool_OutputExists = False
    For int_i = 1 To Sheets.Count
        If (Sheets(int_i).Name = str_OutputSheetName) Then
            bool_OutputExists = True
        End If
    Next int_i
    If (bool_OutputExists) Then
        Application.DisplayAlerts = False
        Sheets(str_OutputSheetName).Delete
        Application.DisplayAlerts = True
    End If
    Dim sheet_Output As Worksheet
    Set sheet_Output = Sheets.Add
    sheet_Output.Name = str_OutputSheetName
   
    'BCL20151105: bepaal gegevenskolom per voorbeeldkolom
    int_ExampleColumnFinal = Sheets(str_ExampleSheetName).Cells(int_ExampleRowStart, 3).End(xlToRight).Column
    int_DataColumnFinal = Sheets(str_DataSheetName).Cells(int_DataRowStart - 1, 3).End(xlToRight).Column
    For int_ExampleColumn = 1 To int_ExampleColumnFinal
        Dim str_ExampleColumnFieldname As String
        str_ExampleColumnFieldname = Sheets(str_ExampleSheetName).Cells(int_ExampleRowStart, int_ExampleColumn)
        
        Sheets(str_ExampleSheetName).Cells(int_ExampleRowColumnNames, int_ExampleColumn).Value = str_ExampleColumnFieldname
        
        For int_DataColumn = 1 To int_DataColumnFinal
            Dim str_DataColumnFieldname As String
            str_DataColumnFieldname = Sheets(str_DataSheetName).Cells(int_DataRowStart - 1, int_DataColumn)
            If (LCase(Trim(str_DataColumnFieldname)) = LCase(Trim(str_ExampleColumnFieldname))) Then
                Sheets(str_ExampleSheetName).Cells(int_ExampleRowColumnNumbers, int_ExampleColumn).Value = Trim(Str(int_DataColumn))
            End If
        Next int_DataColumn
    Next int_ExampleColumn
    
    'BCL20151105: kopieer voorbeeld header naar output sheet
    For int_ExampleRow = 1 To int_ExampleRowStart
            int_OutputRow = int_ExampleRow
            str_OutputRange = Trim(Str(int_OutputRow)) & ":" & Trim(Str(int_OutputRow))
    
            Sheets(str_ExampleSheetName).Rows(int_ExampleRow).Copy
            Sheets(str_OutputSheetName).Range(str_OutputRange).PasteSpecial Paste:=xlPasteAll
            Sheets(str_OutputSheetName).Range(str_OutputRange).PasteSpecial Paste:=xlPasteColumnWidths
    Next int_ExampleRow
    Application.CutCopyMode = False
    
    'BCL20151105: kopieer voorbeeld afbeeldingen naar output sheet
    Dim sh_ExamplePicture As Shape
    For Each sh_ExamplePicture In Sheets(str_ExampleSheetName).Shapes
        If (sh_ExamplePicture.Type = msoPicture) Then
            'sh_ExamplePicture.Copy
            'On Error Resume Next
            'Sleep 500
            'Sheets(str_OutputSheetName).Range(sh_ExamplePicture.TopLeftCell.Address).Select
            'Sheets(str_OutputSheetName).Paste
            'On Error GoTo Create_Output_Err
            If (Dir(str_PictureLogoFile) <> "") Then
                Set sh_ExamplePicture = Worksheets(str_OutputSheetName).Shapes.AddPicture( _
                    str_PictureLogoFile, msoFalse, msoCTrue, _
                    sh_ExamplePicture.Left, sh_ExamplePicture.Top, _
                    sh_ExamplePicture.Width, sh_ExamplePicture.Height)
            End If
        End If
    Next
    'Application.CutCopyMode = False

    
    'BCL20151105: kopieer gegevens regels naar output sheet
    Sheets(str_ExampleSheetName).Rows(int_ExampleRowStart).Copy
    For int_DataRow = int_DataRowStart To int_DataRowFinal
            int_OutputRow = int_ExampleRowStart + int_DataRow - int_DataRowStart
            str_OutputRange = Trim(Str(int_OutputRow)) & ":" & Trim(Str(int_OutputRow))
    
            Sheets(str_OutputSheetName).Range(str_OutputRange).PasteSpecial Paste:=xlPasteAll
            Sheets(str_OutputSheetName).Range(str_OutputRange).PasteSpecial Paste:=xlPasteColumnWidths
            
            For int_ExampleColumn = 1 To int_ExampleColumnFinal
                Dim str_DataColumn As String
                str_DataColumn = Trim(Sheets(str_ExampleSheetName).Cells(int_ExampleRowColumnNumbers, int_ExampleColumn).Value)
                If (IsNumeric(str_DataColumn)) Then
                    Worksheets(str_OutputSheetName).Cells(int_OutputRow, int_ExampleColumn).Value = Worksheets(str_DataSheetName).Cells(int_DataRow, Val(str_DataColumn))
                End If
            
                'BCL20151105: zet afbeelding in output sheet
                Dim str_DataColumnName As String
                str_DataColumnName = LCase(Trim(Sheets(str_ExampleSheetName).Cells(int_ExampleRowColumnNames, int_ExampleColumn).Value))
                If (str_DataColumnName = "afbeelding") Then
                    Dim str_PictureValue As String
                    Dim int_PictureExtensionStart As Integer
                    Dim str_PictureExtension As String
                    Dim str_PictureItem As String
                    Dim str_PictureFilename As String
                    Dim sh_Picture As Shape
                    
                    str_PictureValue = Trim(Worksheets(str_OutputSheetName).Cells(int_OutputRow, int_ExampleColumn).Value)
                    int_PictureExtensionStart = (InStrRev(str_PictureValue, "."))
                    If (int_PictureExtensionStart > 0) Then
                        str_PictureExtension = Mid(str_PictureValue, int_PictureExtensionStart)
                        str_PictureItem = Worksheets(str_DataSheetName).Cells(int_DataRow, int_DataColumnPictureID)
                        str_PictureFilename = str_PicturePrefix & str_PictureItem & str_PictureExtension
                        If (Dir(str_PictureFilename) <> "") Then
                            Set sh_Picture = Worksheets(str_OutputSheetName).Shapes.AddPicture( _
                                str_PictureFilename, msoFalse, msoCTrue, _
                                Worksheets(str_OutputSheetName).Cells(int_OutputRow, int_ExampleColumn).Left + int_PictureOffsetLeft, _
                                Worksheets(str_OutputSheetName).Cells(int_OutputRow, int_ExampleColumn).Top + int_PictureOffsetTop, _
                                -1, -1)
                            sh_Picture.LockAspectRatio = msoTrue
                            sh_Picture.Width = int_PictureSizeWidth
                            If (sh_Picture.Height > int_PictureSizeHeight) Then
                                sh_Picture.Height = int_PictureSizeHeight
                            End If
                            sh_Picture.LockAspectRatio = msoFalse
                            sh_Picture.OnAction = "Shape_Resize"
                            Worksheets(str_OutputSheetName).Cells(int_OutputRow, int_ExampleColumn).Value = ""
                        Else
                            Worksheets(str_OutputSheetName).Cells(int_OutputRow, int_ExampleColumn).Value = "Afbeelding " & str_PictureFilename & " niet gevonden."
                        End If
                    End If
                End If
                If (str_DataColumnName = "afbeelding_1") Then
                    Dim str_PictureValue_1 As String
                    Dim int_PictureExtensionStart_1 As Integer
                    Dim str_PictureExtension_1 As String
                    Dim str_PictureItem_1 As String
                    Dim str_PictureFilename_1 As String
                    Dim sh_Picture_1 As Shape
                    
                    str_PictureValue_1 = Trim(Worksheets(str_OutputSheetName).Cells(int_OutputRow, int_ExampleColumn).Value)
                    int_PictureExtensionStart_1 = (InStrRev(str_PictureValue_1, "."))
                    If (int_PictureExtensionStart_1 > 0) Then
                        str_PictureExtension_1 = Mid(str_PictureValue_1, int_PictureExtensionStart_1)
                        str_PictureItem_1 = Worksheets(str_DataSheetName).Cells(int_DataRow, int_DataColumnPictureID)
                        str_PictureFilename_1 = str_PicturePrefix_1 & str_PictureItem_1 & str_PictureExtension_1
                        If (Dir(str_PictureFilename_1) <> "") Then
                            Set sh_Picture_1 = Worksheets(str_OutputSheetName).Shapes.AddPicture( _
                                str_PictureFilename_1, msoFalse, msoCTrue, _
                                Worksheets(str_OutputSheetName).Cells(int_OutputRow, int_ExampleColumn).Left + int_PictureOffsetLeft, _
                                Worksheets(str_OutputSheetName).Cells(int_OutputRow, int_ExampleColumn).Top + int_PictureOffsetTop, _
                                -1, -1)
                            sh_Picture_1.LockAspectRatio = msoTrue
                            sh_Picture_1.Width = int_PictureSizeWidth
                            If (sh_Picture_1.Height > int_PictureSizeHeight) Then
                                sh_Picture_1.Height = int_PictureSizeHeight
                            End If
                            sh_Picture_1.LockAspectRatio = msoFalse
                            sh_Picture_1.OnAction = "Shape_Resize"
                            Worksheets(str_OutputSheetName).Cells(int_OutputRow, int_ExampleColumn).Value = ""
                        Else
                            Worksheets(str_OutputSheetName).Cells(int_OutputRow, int_ExampleColumn).Value = "Afbeelding " & str_PictureFilename_1 & " niet gevonden."
                        End If
                    End If
                End If
            Next int_ExampleColumn
            
    Next int_DataRow
    Application.CutCopyMode = False
    
    'BCL20151105: verwijder tijdelijke gegevens uit voorbeeld
    Sheets(str_ExampleSheetName).Rows(int_ExampleRowColumnNames).Clear
    Sheets(str_ExampleSheetName).Rows(int_ExampleRowColumnNumbers).Clear
    
    Sheets(str_OutputSheetName).Select

    Application.DisplayAlerts = False
    Sheets(str_CreateSheetName).Delete
    Sheets(str_ExampleSheetName).Delete
    Application.DisplayAlerts = True

Create_Output_End:
    Application.ScreenUpdating = True
    Exit Sub
    
Create_Output_Err:
    Dim str_Msg As String
    str_Msg = Err.Description
    
    If (Trim(str_Msg) <> "") Then
        Call MsgBox(str_Msg, vbOKOnly + vbExclamation)
    End If
    
    Err.Clear
    Resume Create_Output_End
End Sub


Attribute VB_Name = "Sheet3"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Sheet5"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "ThisWorkbook"
Attribute VB_Base = "0{00020819-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Option Explicit

'----------------------------------------------------------------------

Private mobjConnect As Object

'----------------------------------------------------------------------

Private Sub Workbook_Open()

  On Error Resume Next

  If mobjConnect Is Nothing Then
    Set mobjConnect = CreateObject("AntaDataAnalisisMan.CAnalisis")
    Set mobjConnect = mobjConnect.PrepareInExcel(Me)
  End If

End Sub

Public Sub HandleCommandBarAction()

  If Not mobjConnect Is Nothing Then
    mobjConnect.HandleCommandBarAction
  End If
  
End Sub

Sub DraaitabelVernieuwen()

Dim pt As PivotTable
Dim ws As Worksheet

For Each ws In ActiveWorkbook.Worksheets
    For Each pt In ws.PivotTables
        pt.PivotCache.Refresh
    Next pt
Next ws

End Sub


INQUEST-PP=macro
