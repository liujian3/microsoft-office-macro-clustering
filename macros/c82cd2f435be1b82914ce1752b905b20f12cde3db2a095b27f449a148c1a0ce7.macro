Attribute VB_Name = "DieseArbeitsmappe"
Attribute VB_Base = "0{00020819-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Modul1"
Public Function variablelesen() As String
variablelesen = kundennummer
End Function
Attribute VB_Name = "Modul2"
Attribute VB_Name = "Modul3"

Sub ESSDatenholen()
Attribute ESSDatenholen.VB_Description = "Makro am 03.11.2005 von Thomas Hagner aufgezeichnet"
Attribute ESSDatenholen.VB_ProcData.VB_Invoke_Func = "e\n14"
'
' ESSDatenholen Makro
' Makro am 03.11.2005 von Thomas Hagner aufgezeichnet
'
' Tastenkombination: Strg+e
'

Dim selecttextroh As String
Dim selecttext As String
Dim fs, f
Dim kundennummer As String
Dim datumvon As Date
Dim datummerker As String
Dim datumbis As Date
dateinamenfrage = "Unter welchem Dateinamen solle die Excel-Liste gespeichert werden?"
pfad = "T:\Auswertungen\ABF\Lieferantenerklaerung\"
dateiname = "Kundennummer_"
verbindungsdaten = "ODBC;DRIVER={PostgreSQL};DATABASE=MXDBS;SERVER=192.168.101.3;PORT=5401;UID=odbc;PWD=odbc"
Set fs = CreateObject("Scripting.FileSystemObject")
Set f = fs.OpenTextFile(pfad & "Lieferantenerklaerung.sql", 1, 0)

kundennummer = Application.InputBox("Bitte Kundennummer eingeben")
Do
    Do
        datummerker = Application.InputBox("Von Datum    Beispiel 01.01.2005", , "01.01.2005")
    Loop Until IsDate(datummerker)
    datumvon = datummerker
    Do
        datummerker = Application.InputBox("Bis Datum    Beispiel 31.12.2005", , "31.12.2005")
    Loop Until IsDate(datummerker)
    datumbis = datummerker
Loop Until datumvon <= datumbis

dateiname = dateiname & kundennummer & ".XLS"

'Set Arbeitsmappe = Workbooks.Add
'Do
'    dateiname = Application.GetSaveAsFilename(dateiname)
'Loop Until dateiname <> False

selecttextroh = f.ReadAll
selecttext = Replace(selecttextroh, "14202", kundennummer)
datummerker = Format(datumvon, "yyyy-mm-dd")
selecttext = Replace(selecttext, "2005-01-01", datummerker)
datummerker = Format(datumbis, "yyyy-mm-dd")
selecttext = Replace(selecttext, "2005-12-31", datummerker)

Set lastselects = CreateObject("Scripting.FileSystemObject")
Set lastselect = lastselects.CreateTextFile(pfad & "Letzter select Lieferantenerglaerung.sql", 8, 1)
lastselect.Write selecttext
lastselect.Close


    Sheets("Rohdaten").Select
    
    Cells.Select
    Range("E1").Activate
    Selection.ClearContents
'    Selection.QueryTable.Delete
    
    Range("A1").Select
    With ActiveSheet.QueryTables.Add(Connection:=verbindungsdaten, _
                                     Destination:=Range("A1"), _
                                     Sql:=selecttext & Chr(13) & "" & Chr(10))
         .Refresh BackgroundQuery:=False
        
        If .FetchedRowOverflow Then
            MsgBox "Es werden nicht alle Datens|fffd|tze verarbeitet, Bitte schr|fffd|nken Sie Ihren Select ein."
            Exit Sub
        End If

    End With
    
' Artikelnummernspalte
    Call Spalteneinfuegen("H2", "A15")
    Call Spaltenformatieren("A15", 10, "xlLeft")
    Call Zeilekopieren("B15", "A15")
    Call Spaltenformatieren("B15", 10, "xlLeft")
    Call Zeilekopieren("C15", "A15")
    Call Spaltenformatieren("C15", 10, "xlLeft")
  
 Range("A1").Select

ActiveWorkbook.SaveCopyAs pfad & dateiname

Workbooks.Open Filename:=pfad & dateiname

Workbooks(dateiname).Worksheets("Auswertung").Activate
Range("C6").Value = "von " & datumvon & " bis " & datumbis
 
 Workbooks("Lieferantenerklaerung.xls").Close SaveChanges:=False
End Sub
Sub Spalteneinfuegen(abzelle, zuzelle)
'
' Nimmt eine Spalte aus Rohdaten und legit sie in Auswertung
' Makro am 10.11.2005 von Thomas Hagner aufgezeichnet
'
' Schriftausrichtung: xlLeft, xlRight, xlCenter

 Sheets("Auswertung").Select
 Range(zuzelle).Select
 'Range(Selection, Cells(ActiveCell.Row + 6000, ActiveCell.Column)).Select
  Range(Selection, Selection.End(xlDown)).Select
 Selection.Delete Shift:=xlUp
  
 Sheets("Rohdaten").Select
 Range(abzelle).Select
 Range(Selection, Selection.End(xlDown)).Select
 
 If Selection.Count > 20000 Then Range(abzelle).Select
 
 Selection.Copy
 Sheets("Auswertung").Select
 Range(zuzelle).Select
 Selection.PasteSpecial Paste:=xlPasteValues, Operation:=xlNone, SkipBlanks _
        :=False, Transpose:=False
 End Sub

Sub Spaltenformatieren(abzelle, schriftgroesse, schriftausrichtung)
'
' Nimmt eine Spalte aus Rohdaten und legit sie in Auswertung
' Makro am 10.11.2005 von Thomas Hagner aufgezeichnet
'
' Schriftausrichtung: xlLeft, xlRight, xlCenter

 Sheets("Auswertung").Select
 Range(abzelle).Select
 Range(Selection, Selection.End(xlDown)).Select
  'Formatierung
 With Selection.Font
        .Name = "Arial"
        .FontStyle = "Standard"
        .Size = schriftgroesse
        .Strikethrough = False
        .Superscript = False
        .Subscript = False
        .OutlineFont = False
        .Shadow = False
        .Underline = xlUnderlineStyleNone
        .ColorIndex = xlAutomatic
    End With
'Rahmen oben und unten
    Selection.Borders(xlDiagonalDown).LineStyle = xlNone
    Selection.Borders(xlDiagonalUp).LineStyle = xlNone
    Selection.Borders(xlEdgeLeft).LineStyle = xlNone
    With Selection.Borders(xlEdgeTop)
        .LineStyle = xlContinuous
        .Weight = xlThin
        .ColorIndex = xlAutomatic
    End With
    With Selection.Borders(xlEdgeBottom)
        .LineStyle = xlContinuous
        .Weight = xlThin
        .ColorIndex = xlAutomatic
    End With
    Selection.Borders(xlEdgeRight).LineStyle = xlNone
    Selection.Borders(xlInsideVertical).LineStyle = xlNone
    With Selection.Borders(xlInsideHorizontal)
        .LineStyle = xlContinuous
        .Weight = xlThin
        .ColorIndex = xlAutomatic
    End With
' Schriftausrichtung
   With Selection
        .HorizontalAlignment = xlLeft
        .VerticalAlignment = xlBottom
        .WrapText = False
        .Orientation = 0
        .AddIndent = False
        .IndentLevel = 0
        .ShrinkToFit = False
        .ReadingOrder = xlContext
        .MergeCells = False
    End With
End Sub


Sub Zeilekopieren(abzelle, index)
'
' Nimmt eine erste Zeile und kopiert bis die Nebenzeile leer ist
' Makro am 10.11.2005 von Thomas Hagner aufgezeichnet
'

Sheets("Auswertung").Select
 Range(abzelle).Select
 Range(Cells(ActiveCell.Row + 1, ActiveCell.Column), Cells(ActiveCell.Row + 6000, ActiveCell.Column)).Select
 Selection.Delete Shift:=xlUp

Sheets("Auswertung").Select
Range(index).Select
Selection.End(xlDown).Select

zeilenende = ActiveCell.Row
Range(abzelle).Select
Selection.Copy
Range(Cells(ActiveCell.Row + 1, ActiveCell.Column), Cells(zeilenende, ActiveCell.Column)).Select
ActiveSheet.Paste
Range(abzelle).Select

End Sub
Sub Makro11()
Attribute Makro11.VB_Description = "Makro am 10.11.2005 von Thomas Hagner aufgezeichnet"
Attribute Makro11.VB_ProcData.VB_Invoke_Func = " \n14"
'
' Makro11 Makro
' Makro am 10.11.2005 von Thomas Hagner aufgezeichnet
'

'
'Antwort = MsgBox(ActiveCell.Column)
'Antwort = MsgBox(ActiveCell.Row)
'Antwort = MsgBox(ActiveCell.Row)
index = "A15"
abzelle = "B15"


Sheets("Auswertung").Select
Range(index).Select
Selection.End(xlDown).Select

zeilenende = ActiveCell.Row
Range(abzelle).Select
Selection.Copy
Range(Cells(ActiveCell.Row + 1, ActiveCell.Column), Cells(zeilenende, ActiveCell.Column)).Select
ActiveSheet.Paste


End Sub
Sub Makro1()
Attribute Makro1.VB_ProcData.VB_Invoke_Func = " \n14"
'
' Makro1 Makro
'

'
    Range("H2").Select
    Selection.Copy
End Sub
Attribute VB_Name = "Modul4"
Attribute VB_Name = "Modul5"
Attribute VB_Name = "Modul6"
Attribute VB_Name = "Modul7"
Attribute VB_Name = "Tabelle1"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Tabelle2"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True


INQUEST-PP=macro
