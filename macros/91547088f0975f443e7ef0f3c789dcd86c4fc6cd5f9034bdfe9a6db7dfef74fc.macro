Attribute VB_Name = "DynamicDropdown"
Sub Val()
Call OptimizeCode_Begin
Dim ws As Worksheet
Dim rangeOK As Range, rangeNOK As Range, rangeCOND As Range
Sheets("CCL").Select
Set ws = ThisWorkbook.Worksheets("List")

Set rangeOK = ws.Range("C3:C4")
Set rangeNOK = ws.Range("C5:C6")
Set rangeCOND = ws.Range("C7:C8")
Set rangeSTART = ws.Range("E2:E3")
Set rangeOK2 = ws.Range("C4:C5")
Set rangeNA = ws.Range("E2:E4")

Application.ScreenUpdating = False
Application.EnableEvents = False

For i = 23 To 26
    If Cells(i, 4).Value <> "F" Then
        With Cells(i, 6).Validation
                .Delete
                .Add Type:=xlValidateList, AlertStyle:=xlValidAlertStop, Formula1:="YES non StEDE ,YES StEDE"
            .IgnoreBlank = True
            .InCellDropdown = True
            .InputTitle = ""
            .ErrorTitle = ""
            .InputMessage = ""
            .ErrorMessage = ""
            .ShowInput = True
            .ShowError = False
        End With
        
    ElseIf Cells(i, 4).Value = "F" Then
        With Cells(i, 6).Validation
                    .Delete
        End With

End If
Next i


For i = 23 To 500
    Cells(i, 13).Validation.Delete
    Cells(i, 14).Validation.Delete

Next i


For i = 23 To 500

If Cells(i, 4) <> "F" And Cells(i, 3) <> "Does supplier know how Valeo will use the component in order to understand environment of the part ?" Then
    If Cells(i, 6) = "YES StEDE" And Cells(i, 15) = Empty And Cells(i, 25) = "1" Then                         'Deleting dropdown list in column O (grayed cell)
        With Cells(i, 15).Validation
            .Delete
        End With
        
        With Cells(i, 12).Validation
            .Delete
            .Add Type:=xlValidateList, AlertStyle:=xlValidAlertStop, _
                Formula1:="='" & ws.Name & "'!" & rangeNA.Address
        End With
    ElseIf Cells(i, 6) = "YES StEDE" And Cells(i, 15) = Empty And Cells(i, 12) <> "NA" Then                            'Deleting dropdown list in column O (grayed cell)
        With Cells(i, 15).Validation
            .Delete
        End With
        
        With Cells(i, 12).Validation
            .Delete
            .Add Type:=xlValidateList, AlertStyle:=xlValidAlertStop, _
                Formula1:="='" & ws.Name & "'!" & rangeSTART.Address
        End With
    ElseIf Cells(i, 6) = "YES non StEDE" Then
        With Cells(i, 12).Validation
            .Delete
        End With
        
        With Cells(i, 13).Validation
            .Delete
        End With
        
        With Cells(i, 14).Validation
            .Delete
        End With
        
        Set Rng = ThisWorkbook.Sheets("CCL").Range("O" & i)
        Dim Current_Cell As Range
        Dim counter As Long

        For Each Current_Cell In Rng
            counter = 0
            On Error Resume Next
            counter = Current_Cell.SpecialCells(xlCellTypeSameValidation).Count
            On Error GoTo 0
            If counter = 0 Then
                With Cells(i, 15).Validation
                    .Delete
                    .Add Type:=xlValidateList, AlertStyle:=xlValidAlertStop, Formula1:="OK,NOK"
                .IgnoreBlank = True
                .InCellDropdown = True
                .InputTitle = ""
                .ErrorTitle = ""
                .InputMessage = ""
                .ErrorMessage = ""
                .ShowInput = True
                .ShowError = True
                End With
    
            Else
                If Cells(i, 15).Validation.Formula1 <> "OK;NOK;NA" And Cells(i, 15).Validation.Formula1 <> "OK,NOK,NA" Then
                With Cells(i, 15).Validation
                    .Delete
                    .Add Type:=xlValidateList, AlertStyle:=xlValidAlertStop, Formula1:="OK,NOK"
                .IgnoreBlank = True
                .InCellDropdown = True
                .InputTitle = ""
                .ErrorTitle = ""
                .InputMessage = ""
                .ErrorMessage = ""
                .ShowInput = True
                .ShowError = True
                End With
                End If
            End If
        Next
    ElseIf Cells(i, 6) = "" Then                                'Deleting dropdown list in column L:N (grayed) because question NOT critical
        With Cells(i, 12).Validation
            .Delete
        End With
        
        With Cells(i, 13).Validation
            .Delete
        End With
        
        With Cells(i, 14).Validation
            .Delete
        End With
        
        Set Rng1 = ThisWorkbook.Sheets("CCL").Range("O" & i)
        Dim Current_Cell1 As Range
        Dim counter1 As Long

        For Each Current_Cell1 In Rng1
            counter1 = 0
            On Error Resume Next
            counter1 = Current_Cell1.SpecialCells(xlCellTypeSameValidation).Count
            On Error GoTo 0
            If counter1 = 0 Then
                With Cells(i, 15).Validation
                    .Delete
                    .Add Type:=xlValidateList, AlertStyle:=xlValidAlertStop, Formula1:="OK,NOK"
                .IgnoreBlank = True
                .InCellDropdown = True
                .InputTitle = ""
                .ErrorTitle = ""
                .InputMessage = ""
                .ErrorMessage = ""
                .ShowInput = True
                .ShowError = True
                End With
    
        Else
        
        If Cells(i, 15).Validation.Formula1 <> "OK;NOK;NA" And Cells(i, 15).Validation.Formula1 <> "OK,NOK,NA" Then
            With Cells(i, 15).Validation
                .Delete
                .Add Type:=xlValidateList, AlertStyle:=xlValidAlertStop, Formula1:="OK,NOK"
            .IgnoreBlank = True
            .InCellDropdown = True
            .InputTitle = ""
            .ErrorTitle = ""
            .InputMessage = ""
            .ErrorMessage = ""
            .ShowInput = True
            .ShowError = True
            End With
        End If
         End If
        Next
    End If

    If Cells(i, 12) = "OK" Then
        With Cells(i, 13).Validation
            .Delete
            .Add Type:=xlValidateList, AlertStyle:=xlValidAlertStop, _
                Formula1:="='" & ws.Name & "'!" & rangeOK.Address
                            .IgnoreBlank = True
            .InCellDropdown = True
            .InputTitle = ""
            .ErrorTitle = ""
            .InputMessage = ""
            .ErrorMessage = ""
            .ShowInput = True
            .ShowError = True
        End With
    ElseIf Cells(i, 12) = "NOK" Then
        With Cells(i, 13).Validation
            .Delete
            .Add Type:=xlValidateList, AlertStyle:=xlValidAlertStop, _
                Formula1:="='" & ws.Name & "'!" & rangeNOK.Address
                            .IgnoreBlank = True
            .InCellDropdown = True
            .InputTitle = ""
            .ErrorTitle = ""
            .InputMessage = ""
            .ErrorMessage = ""
            .ShowInput = True
            .ShowError = True
        End With
    ElseIf Cells(i, 12) = "NA" Then
        Cells(i, 13).Validation.Delete
        Cells(i, 13) = "NA"
        Cells(i, 14) = "NA"
    End If
End If
Next i

For i = 23 To 500
If Cells(i, 4) <> "F" And Cells(i, 3) <> "Does supplier know how Valeo will use the component in order to understand environment of the part ?" Then
    If Cells(i, 13) = "OK" Then
        With Cells(i, 14).Validation
            .Delete
            .Add Type:=xlValidateList, AlertStyle:=xlValidAlertStop, _
                Formula1:="='" & ws.Name & "'!" & rangeOK.Address
        End With
    ElseIf Cells(i, 13) = "NOK" Then
        With Cells(i, 14).Validation
            .Delete
            .Add Type:=xlValidateList, AlertStyle:=xlValidAlertStop, _
                Formula1:="='" & ws.Name & "'!" & rangeNOK.Address
        End With
    ElseIf Cells(i, 13) = "Conditional OK" Then
        With Cells(i, 14).Validation
            .Delete
            .Add Type:=xlValidateList, AlertStyle:=xlValidAlertStop, _
                Formula1:="='" & ws.Name & "'!" & rangeCOND.Address
        End With
    End If
End If
Next i


Call OptimizeCode_End
Application.ScreenUpdating = True
Application.EnableEvents = True

End Sub



Sub Initialisation_NOK()
Call OptimizeCode_Begin
Application.ScreenUpdating = False
Application.EnableEvents = False
For i = 23 To 500
    Cells(i, 13).Validation.Delete
    Cells(i, 14).Validation.Delete

                                        'NOK by default in ALL questions, WHY ? to avoid to already have 100% result in H6 H8 J6 J8 by answering a few questions
    For j = 12 To 14                    'Then it will converge from 0 to 100% and NOT from 100% to less
        If Cells(i, 3) <> "" And Cells(i, 6) = "YES StEDE" And Cells(i, j).Value = "" Then
        Cells(i, j).Value = "NOK"
        Cells(i, 15).Value = ""
        End If
    Next j
    
    If Cells(i, 3) <> "" And (Cells(i, 6) Like "YES non StEDE" Or Cells(i, 6) = "") And Cells(i, 15).Value = "" Then
        Cells(i, 15).Value = "NOK"
        Cells(i, 12).Value = ""
        Cells(i, 13).Value = ""
        Cells(i, 14).Value = ""
    End If
    
Next i
Application.ScreenUpdating = True
Application.EnableEvents = True
Call OptimizeCode_End
End Sub


Sub Color()

Set myRange = Range("F23:F500")
substr = "non StEDE"
substr1 = "StEDE"
txtColor = 2        'White color


For Each myString In myRange
        lenstr = Len(myString)
        lensubstr = Len(substr)
        For i = 1 To lenstr
            tempString = Mid(myString, i, lensubstr)
            If tempString = substr Then
                myString.Characters(Start:=i, Length:=lensubstr).Font.ColorIndex = txtColor
            End If
            If tempString = substr1 Then
                myString.Characters(Start:=i, Length:=lensubstr).Font.ColorIndex = txtColor
            End If
        Next i
    Next myString


End Sub

Sub Add_NA()
Call OptimizeCode_Begin
With ActiveCell.Validation
                .Delete
                .Add Type:=xlValidateList, AlertStyle:=xlValidAlertStop, Formula1:="OK,NOK,NA"
            .IgnoreBlank = True
            .InCellDropdown = True
            .InputTitle = ""
            .ErrorTitle = ""
            .InputMessage = ""
            .ErrorMessage = ""
            .ShowInput = True
            .ShowError = False
            End With
        ActiveCell.Value = "NA"
        
Dim row_number As Integer
        row_number = ActiveCell.Row     ' Put 1 in Y column in order to keep NA in dropdown list if OK or NOK is selected after NA for Yes StEDE question
        Cells(row_number, 25) = 1
Call OptimizeCode_End
End Sub
Attribute VB_Name = "Feuil1"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Feuil2"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Feuil3"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Feuil4"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Feuil5"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Feuil6"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Module1"
Sub Macro1()
Attribute Macro1.VB_ProcData.VB_Invoke_Func = " \n14"
'
' Macro1 Macro
'

'
    With Selection.Validation
        .Delete
        .Add Type:=xlValidateList, AlertStyle:=xlValidAlertStop, Operator:= _
        xlBetween, Formula1:="OK;NOK"
        .IgnoreBlank = True
        .InCellDropdown = True
        .InputTitle = ""
        .ErrorTitle = ""
        .InputMessage = ""
        .ErrorMessage = ""
        .ShowInput = True
        .ShowError = True
    End With
End Sub
Sub Macro2()
Attribute Macro2.VB_ProcData.VB_Invoke_Func = " \n14"
'
' Macro2 Macro
'

'
    With Selection.Validation
        .Delete
        .Add Type:=xlValidateList, AlertStyle:=xlValidAlertStop, Operator:= _
        xlBetween, Formula1:="OK;NOK"
        .IgnoreBlank = True
        .InCellDropdown = True
        .InputTitle = ""
        .ErrorTitle = ""
        .InputMessage = ""
        .ErrorMessage = ""
        .ShowInput = True
        .ShowError = False
    End With
End Sub
Attribute VB_Name = "RadioButton"
Public CalcState As Long
Public EventState As Boolean
Public PageBreakState As Boolean
'variables in order to improve speed of macro execution


Sub OptimizeCode_Begin()    'only to improve speed of macro execution


Application.ScreenUpdating = False

EventState = Application.EnableEvents
Application.EnableEvents = False

CalcState = Application.Calculation
Application.Calculation = xlCalculationManual

PageBreakState = ActiveSheet.DisplayPageBreaks
ActiveSheet.DisplayPageBreaks = False
End Sub
Sub OptimizeCode_End()          'only to improve speed of macro execution

ActiveSheet.DisplayPageBreaks = PageBreakState
Application.Calculation = xlCalculationAutomatic
Application.EnableEvents = EventState
Application.Calculation = xlAutomatic
Application.ScreenUpdating = True

End Sub

Sub RSQ_12()
Application.ScreenUpdating = False
 Call OptimizeCode_Begin

Sheets("CCL").Select
Cells.Select
Selection.EntireRow.Hidden = False
For i = 23 To 500
    If 1 = Range("D" & i).MergeArea.Columns.Count Then
        If Left(Cells(i, 4).Value, 1) <> "F" And Cells(i, 4).Value <> "M" Then ' Hiding rows different from M & F
            Rows(i).Hidden = True
        End If
    End If
Next i

   Range("L2").Value = 2
   Range("L2").Select
    With Selection.Font
        .ThemeColor = xlThemeColorDark1
        .TintAndShade = 0
    End With
 Range("G15") = "RSQ1/2"
 Range("H15") = "Acceptance criterion :"
 Range("H16") = "Machine = Overall " & ChrW(&H2265) & " 80% + 100% CQ"
 Range("H17") = ""
Range("B3").Select
Call OptimizeCode_End
End Sub
Sub EVAL()
Application.ScreenUpdating = False
Call OptimizeCode_Begin
Sheets("CCL").Select
    Cells.Select
    Selection.EntireRow.Hidden = False
    
       Range("L2").Value = 1
       Range("L2").Select
    With Selection.Font
        .ThemeColor = xlThemeColorDark1
        .TintAndShade = 0
    End With
     Range("G15") = "EVAL/" & Chr(10) & "SVRF"
     Range("H15") = "Acceptance criteria :"
     Range("H16") = "Machine = Overall " & ChrW(&H2265) & " 80% + 100% CQ (Excluded Enforcement)"
     Range("H17") = "Tooling = Overall " & ChrW(&H2265) & " 80% + 100% CQ (Excluded Enforcement)"
    Range("B3").Select
    Call OptimizeCode_End
End Sub
Sub RSQ_3()
Application.ScreenUpdating = False
Call OptimizeCode_Begin
Sheets("CCL").Select
Cells.Select
Selection.EntireRow.Hidden = False
For i = 23 To 500
    If 1 = Range("D" & i).MergeArea.Columns.Count Then
        If ((Left(Cells(i, 4).Value, 1)) <> "T" And Cells(i, 4).Value <> "F") Then      'Hiding all rows different from T & MT
            Rows(i).Hidden = True
        End If
    End If
Next i

   Range("L2").Value = 3
   Range("L2").Select
    With Selection.Font
        .ThemeColor = xlThemeColorDark1
        .TintAndShade = 0
    End With
    Range("G15") = "Process Audit / RSQ3"
    Range("H15") = "Acceptance criteria :"
    Range("H16") = "Tooling = Overall " & ChrW(&H2265) & " 80% + 100% CQ"
    Range("H17") = ""
Range("B3").Select
Call OptimizeCode_End
End Sub


Attribute VB_Name = "ThisWorkbook"
Attribute VB_Base = "0{00020819-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Private Sub Workbook_SheetChange(ByVal Sh As Object, ByVal Target As Range)

If ActiveSheet.Name = "CCL" Then
If Cells(14, 3).Value = "" And Cells(4, 3).Value <> "" And Cells(6, 3).Value <> "" Then
    MsgBox "Write Part number or reference produced during audit (For EVAL put N/A) in CELL C14", vbCritical, "Warning"
    Cancel = True
End If
Call Val
Call Color
End If

End Sub

Private Sub Workbook_Deactivate()
    On Error Resume Next
        With Application
            .CommandBars("Cell").Controls("Add_NA").Delete
        End With
    On Error GoTo 0
End Sub
 
Private Sub Workbook_SheetBeforeRightClick(ByVal Sh As Object, ByVal Target As Range, Cancel As Boolean)
    Dim cmdBtn As CommandBarButton
    On Error Resume Next
        With Application
            .CommandBars("Cell").Controls("Add_NA").Delete
            Set cmdBtn = .CommandBars("Cell").Controls.Add(Temporary:=True)
        End With
 
        With cmdBtn
           .Caption = "Add_NA"
           .Style = msoButtonCaption
           .OnAction = "Add_NA"
        End With
    On Error GoTo 0
    

    On Error Resume Next
        With Application
            .CommandBars("Cell").Controls("Init NOK").Delete
            Set cmdBtn = .CommandBars("Cell").Controls.Add(Temporary:=True)
        End With
 
        With cmdBtn
           .Caption = "Init NOK"
           .Style = msoButtonCaption
           .OnAction = "Initialisation_NOK"
        End With
    On Error GoTo 0
End Sub



INQUEST-PP=macro
