Attribute VB_Name = "Sheet1"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Control = "dxWetter, 47, 0, MSForms, ComboBox"
Attribute VB_Control = "cmdPrint, 58, 1, MSForms, CommandButton"
Attribute VB_Control = "cmdOpenMat, 65, 3, MSForms, CommandButton"
Attribute VB_Control = "cmdOpenInv, 64, 8, MSForms, CommandButton"
Attribute VB_Control = "cmdOpenPers, 63, 9, MSForms, CommandButton"
Option Explicit

Private Sub cmdOpenInv_Click()
  Dim nInv As Integer
  
  If ThisWorkbook.Sheets("Stamm").Cells(8, 2) <> "" Then
    If CInt(ThisWorkbook.Sheets("Stamm").Cells(8, 2)) > 20 Then
      nInv = 20
    Else
      nInv = CInt(ThisWorkbook.Sheets("Stamm").Cells(8, 2))
    End If
  Else
    nInv = 10
  End If

  If modPublic.bInvVisible = True And nInv > 0 Then
    Sheet1.Range(Sheet1.Cells(1, modCells.ColIstart + nInv), Sheet1.Cells(1, modCells.ColIend)).EntireColumn.Hidden = True
    modPublic.bInvVisible = False
  Else
    Sheet1.Range(Sheet1.Cells(1, modCells.ColIstart), Sheet1.Cells(1, modCells.ColIend)).EntireColumn.Hidden = False
    modPublic.bInvVisible = True
  End If
End Sub

Private Sub LScontr(ByVal Target As Range)
  If Target.Row = modCells.RowLsNrM And _
     Target.Column >= modCells.ColMstart And Target.Column <= modCells.ColMend Then
     
     If Cells(modCells.RowM, Target.Column) <> "" Then
        frmLS.Show
     End If
    
  End If
End Sub

Private Sub cmdOpenMat_Click()
Dim nMat As Integer
  
  If ThisWorkbook.Sheets("Stamm").Cells(9, 2) <> "" Then
    If CInt(ThisWorkbook.Sheets("Stamm").Cells(9, 2)) > 20 Then
      nMat = 20
    Else
      nMat = CInt(ThisWorkbook.Sheets("Stamm").Cells(9, 2))
    End If
  Else
    nMat = 10
  End If
  
  If modPublic.bMatVisible = True And nMat > 0 Then
    Sheet1.Range(Sheet1.Cells(1, modCells.ColMstart + nMat), Sheet1.Cells(1, modCells.ColMend)).EntireColumn.Hidden = True
    modPublic.bMatVisible = False
  Else
    Sheet1.Range(Sheet1.Cells(1, modCells.ColMstart), Sheet1.Cells(1, modCells.ColMend)).EntireColumn.Hidden = False
    modPublic.bMatVisible = True
  End If
End Sub

Private Sub cmdOpenPers_Click()
Dim nPers As Integer
  
  If ThisWorkbook.Sheets("Stamm").Cells(7, 2) <> "" Then
    If CInt(ThisWorkbook.Sheets("Stamm").Cells(7, 2)) > 20 Then
      nPers = 20
    Else
      nPers = CInt(ThisWorkbook.Sheets("Stamm").Cells(7, 2))
    End If
  Else
    nPers = 10
  End If
  
  If modPublic.bPersVisible = True And nPers > 0 Then
    Sheet1.Range(Sheet1.Cells(1, modCells.ColPstart + nPers), Sheet1.Cells(1, modCells.ColPend)).EntireColumn.Hidden = True
    modPublic.bPersVisible = False
  Else
    Sheet1.Range(Sheet1.Cells(1, modCells.ColPstart), Sheet1.Cells(1, modCells.ColPend)).EntireColumn.Hidden = False
    modPublic.bPersVisible = True
  End If
End Sub

Private Sub cmdPrint_Click()
  Sheet1.PageSetup.PrintArea = "$A$1:$BQ$33"
  Sheet1.PrintOut From:=1, To:=1, Copies:=1, Collate:=True
End Sub

Private Sub Worksheet_Activate()
    Application.OnKey "^l", "ShowLS"
End Sub

Private Sub Worksheet_Deactivate()
    Application.OnKey "^l"
End Sub

Private Sub Worksheet_BeforeDoubleClick(ByVal Target As Range, Cancel As Boolean)
  If refSBO.bNoMakro = False Then
      Call OpenStamm(Target, True)
      'Call OpenLieferant(Target, True)
      Call RegiePers(Target)
      Call LScontr(Target)
  End If
End Sub

Private Sub Worksheet_Change(ByVal Target As Range)
Dim bGoodDate As Boolean
Dim tpDate As String

  If refSBO.bNoMakro = False Then

      If Target.Column = modCells.ColDate And Target.Row = modCells.RowDate Then
          If IsDate(Target.Value) = True Then
            If refSBO.bBau2 = True Then
                Application.EnableEvents = False
                ThisWorkbook.Sheets("Bau2").Cells(modCells.RowDate, modCells.ColDate).Value = Target.Value
                Application.EnableEvents = True
            End If
          Else
            tpDate = Target.Value
            Do While bGoodDate = False
              MsgBox "Bitte geben Sie ein g|fffd|ltiges Datum ein.", vbInformation, "SORBAWorkspace"
              tpDate = InputBox("Bitte geben Sie ein Datum ein:", "SORBAWorkspace", tpDate)
              
              If IsDate(tpDate) = True Then
                Target.Value = tpDate
                bGoodDate = True
              End If
            Loop
          End If
      End If
      
      Call OpenStamm(Target, False)
      'Call OpenLieferant(Target, False)
    
      If refSBO.bBau2 = True Then
        If Target.Row >= modCells.RowVrgStart And Target.Row <= modCells.RowVrgEnd And Target.Column >= modCells.ColPstart And Target.Column <= modCells.ColPend Then
          If Cells(modCells.RowTotalH, Target.Column) <> "" Then
            If Cells(modCells.RowTotalH, Target.Column) = Cells(modCells.RowTotal, Target.Column).Value Then
              '// Wert Stimmt |fffd|berein
              Cells(modCells.RowTotalH, Target.Column).Interior.ColorIndex = 35
              Cells(modCells.RowP, Target.Column).Interior.ColorIndex = 35
            Else
              '// Wert ist falsch
              Cells(modCells.RowTotalH, Target.Column).Interior.ColorIndex = xlNone
              Cells(modCells.RowP, Target.Column).Interior.ColorIndex = xlNone
            End If
          End If
        End If
      End If
      
  End If
End Sub

Private Sub OpenLieferant(Target As Range, bShowAll As Boolean)
Dim i As Long
Dim coll As Long
Dim recs As Long

  Application.EnableEvents = False

  If Target.Row = modCells.RowLifNr And Target.Column >= modCells.ColMstart And _
    Target.Column <= modCells.ColMend And (Trim(Cells(Target.Row, Target.Column)) <> "" Or bShowAll = True) Then
    
    refSBO.DB.SeekSetField refSBO.hQadr, "SUCHNAME", "! "
    refSBO.DB.SeekSetField refSBO.hQadr, "LIEF_NR", "! "
    
    If bShowAll = False Then
      refSBO.DB.SeekSetField refSBO.hQadr, "SUCHNAME", "*" + Cells(modCells.RowLifNr, Target.Column)
    End If
    
    coll = refSBO.DB.CollCreateSeek(refSBO.hQadr, False)
    refSBO.DB.TableSetIndex coll, "SUCHNAME"
    
    recs = refSBO.DB.GetRecordCount(coll) - 1
    
    If recs > -1 Then
      
      If recs > 0 Then
        modPublic.CurStammHandle = coll
        frmLieferant.Show
        
        If modPublic.CurStammIndex > -1 Then
          Cells(modCells.RowLifNr, Target.Column) = Trim(refSBO.DB.GetFieldValue(coll, modPublic.CurStammIndex, "LIEF_NR"))
          Cells(modCells.RowLifName, Target.Column) = Trim(refSBO.DB.GetFieldValue(coll, modPublic.CurStammIndex, "SUCHNAME"))
          
          Cells(modCells.RowLifNr, Target.Column).ClearComments
          Cells(modCells.RowLifNr, Target.Column).AddComment
          Cells(modCells.RowLifNr, Target.Column).Comment.Visible = False
          Cells(modCells.RowLifNr, Target.Column).Comment.Text Text:=Trim(refSBO.DB.GetFieldValue(coll, modPublic.CurStammIndex, "SUCHNAME"))
        Else
          Cells(modCells.RowLifNr, Target.Column) = ""
          Cells(modCells.RowLifName, Target.Column) = ""
          Cells(modCells.RowLifNr, Target.Column).ClearComments
        End If
      Else
        Cells(modCells.RowLifNr, Target.Column) = Trim(refSBO.DB.GetFieldValue(coll, 0, "LIEF_NR"))
        Cells(modCells.RowLifName, Target.Column) = Trim(refSBO.DB.GetFieldValue(coll, 0, "SUCHNAME"))
        
        Cells(modCells.RowLifNr, Target.Column).ClearComments
        Cells(modCells.RowLifNr, Target.Column).AddComment
        Cells(modCells.RowLifNr, Target.Column).Comment.Visible = False
        Cells(modCells.RowLifNr, Target.Column).Comment.Text Text:=Trim(refSBO.DB.GetFieldValue(coll, 0, "SUCHNAME"))
      End If
    
      Range(Cells(modCells.RowLifNr, Target.Column + 1), Cells(modCells.RowLifNr, Target.Column + 1)).Select
    Else
      Cells(Target.Row, Target.Column) = ""
      Cells(Target.Row, Target.Column).ClearComments
      MsgBox "Es wurden keine Daten mit dem aktuellen Text gefunden", vbInformation, "SORBA Workspace"
    End If
    
    refSBO.DB.CollDelete coll
  End If
  
  Application.EnableEvents = True
  
  modPublic.CurStammIndex = -1
  
End Sub

Private Sub OpenStamm(Target As Range, bShowAll As Boolean)
Dim RS As New ADODB.Recordset
Dim i As Long
Dim recs As Long
Dim j As Long
Dim tpChar As String
Dim tpNumber As String
Dim strPosText As String

  Application.EnableEvents = False

  If refSBO.bBau2 = False Then
    '// Personaldaten ////////////////////////////////////////////////////////////////////////////////
    If Target.Row = modCells.RowP And Target.Column >= modCells.ColPstart And _
      Target.Column <= modCells.ColPend And (Trim(Cells(Target.Row, Target.Column)) <> "" Or bShowAll = True) Then
      
      RS.Open "SELECT * FROM Personalstamm", refSBO.Cn, adOpenStatic, adLockReadOnly
  
      If bShowAll = False Then
        RS.Filter = "SUCH_NAME like '%" + Replace(CStr(Cells(modCells.RowP, Target.Column)), "'", "") + "%'"
      End If
  
      recs = RS.RecordCount - 1
  
      If recs > -1 Then
  
        If recs > 0 Then
          Set modPublic.curRs = RS
          frmPers.Show
  
          If modPublic.CurStammIndex > -1 Then
            RS.MoveFirst
            RS.Move modPublic.CurStammIndex
            Cells(modCells.RowP, Target.Column) = RS!SUCH_NAME + "  -  " + CStr(RS!INR)
            
            For j = 1 To 3
              If RS.Fields("REG_TEXT" + Replace(CStr(j), "1", "")) <> "" Then
                Cells(modCells.RowTotalH, Target.Column) = RS.Fields("REG_TEXT" + Replace(CStr(j), "1", ""))
                Exit For
              End If
            Next j
          Else
            Cells(modCells.RowP, Target.Column) = ""
            Cells(modCells.RowTotalH, Target.Column) = ""
          End If
        Else
          RS.MoveFirst
          Cells(modCells.RowP, Target.Column) = RS!SUCH_NAME + "  -  " + CStr(RS!INR)
          
          For j = 1 To 3
            If RS.Fields("REG_TEXT" + Replace(CStr(j), "1", "")) <> "" Then
              Cells(modCells.RowTotalH, Target.Column) = RS.Fields("REG_TEXT" + Replace(CStr(j), "1", ""))
              Exit For
            End If
          Next j
        End If
  
        Range(Cells(Target.Row, Target.Column + 1), Cells(Target.Row, Target.Column + 1)).Select
      Else
        Cells(Target.Row, Target.Column) = ""
        MsgBox "Es wurden keine Daten mit dem aktuellen Text gefunden", vbInformation, "SORBA Workspace"
      End If
  
      RS.Close
      Set RS = Nothing
    End If

  End If

  '// Inventar ////////////////////////////////////////////////////////////////////////////////
  If Target.Row = modCells.RowI And Target.Column >= modCells.ColIstart And _
    Target.Column <= modCells.ColIend And (Trim(Cells(Target.Row, Target.Column)) <> "" Or bShowAll = True) Then

    modPublic.tRow = Target.Row
    modPublic.tCol = Target.Column
    modPublic.bShowAll = bShowAll
    modPublic.bInv = True

    frmInv.Show
  End If


  '// Material/Fremdl ////////////////////////////////////////////////////////////////////////////////
  If Target.Row = modCells.RowM And Target.Column >= modCells.ColMstart And _
    Target.Column <= modCells.ColMend And (Trim(Cells(Target.Row, Target.Column)) <> "" Or bShowAll = True) Then

    modPublic.tRow = Target.Row
    modPublic.tCol = Target.Column
    modPublic.bShowAll = bShowAll
    modPublic.bInv = False

    frmInv.Show
  End If
  
  '// Vorg|fffd|nge ////////////////////////////////////////////////////////////////////////////////
  If Target.Row >= modCells.RowVrgStart And Target.Column = modCells.ColVorgang And _
    Target.Row <= modCells.RowVrgEnd Then
    
    If refSBO.bNoMakro = False Then
      Call refRap.FillVorg(refSBO.Cn)
    End If
    
    If (Trim(Cells(Target.Row, Target.Column)) <> "" Or bShowAll = True) Then
      modPublic.tRow = Target.Row
      modPublic.tCol = Target.Column
      modPublic.bShowAll = bShowAll
      
      frmVorg.Show
      
      If Cells(Target.Row, Target.Column).Value = "" Then
        Call modPublic.UnmakeRegie(Target.Row)
      Else
        If Len(Cells(Target.Row, Target.Column).Value) > 3 Then
          If Left(Cells(Target.Row, Target.Column).Value, 3) = "[R]" Then
            Call modPublic.MakeRegie(Target.Row)
          Else
            Call modPublic.UnmakeRegie(Target.Row)
          End If
        Else
          Call modPublic.UnmakeRegie(Target.Row)
        End If
      End If
    Else
      Cells(Target.Row, Target.Column).ClearComments
    End If
  End If
  
  '// Positionslagen ////////////////////////////////////////////////////////////////////////////////
  If Target.Row >= modCells.RowVrgStart And Target.Column = modCells.ColPosl And _
    Target.Row <= modCells.RowVrgEnd And refSBO.bShowPosl = True Then
    
'    If (Trim(Cells(Target.Row, Target.Column)) <> "" Or bShowAll = True) Then
'      modPublic.tRow = Target.Row
'      modPublic.tCol = Target.Column
'      modPublic.bShowAll = bShowAll
'
'      frmPosl.Show
'    Else
'      Cells(Target.Row, Target.Column).ClearComments
'    End If
    
    If (Trim(Cells(Target.Row, Target.Column)) <> "" Or bShowAll = True) Then
        If bShowAll = True Then
          RS.Open "SELECT * FROM Poslagen WHERE DEL = '' or DEL IS NULL", refSBO.Cn, adOpenStatic, adLockOptimistic
        Else
          RS.Open "SELECT * FROM Poslagen WHERE (DEL IS NULL or DEL = '') AND UCase(POSNR) like '%" + UCase(CStr(Cells(Target.Row, Target.Column))) + "%'", refSBO.Cn, adOpenStatic, adLockOptimistic
        End If
    
        recs = RS.RecordCount - 1
        
        If recs > -1 Then
          Set modPublic.curRs = RS
    
          frmPosl.Show
    
          If modPublic.CurStammIndex > -1 Then
            RS.MoveFirst
            RS.Move modPublic.CurStammIndex
            Cells(Target.Row, Target.Column) = RS.Fields("POSNR")
          Else
            Cells(Target.Row, Target.Column) = ""
          End If
    
          Range(Cells(Target.Row + 1, Target.Column), Cells(Target.Row + 1, Target.Column)).Select
        Else
          If Trim(Cells(Target.Row, Target.Column)) <> "" Then
            If MsgBox("Die eingegebene Positionslage ist noch nicht vorhanden. Soll sie hinzugef|fffd|gt werden?", vbYesNo, "SORBAWorkspace") = vbYes Then
              j = 1
              tpChar = Right(ThisWorkbook.Names.Item("Poslagen").Value, j)
              Do While IsNumeric(tpChar) = True
                j = j + 1
                tpChar = Right(ThisWorkbook.Names.Item("Poslagen").Value, j)
              Loop
              
              tpNumber = CStr(CInt(Right(tpChar, Len(tpChar) - 1)) + 1)
              
              strPosText = InputBox("Bitte geben Sie eine Bezeichnung ein.", "SORBAWorkspace")
              
              Sheet2.Cells(tpNumber, 79).Value = Cells(modCells.RowBstNr, modCells.ColBstNr)
              Sheet2.Cells(tpNumber, 80).Value = strPosText
              Sheet2.Cells(tpNumber, 81).Value = Cells(Target.Row, Target.Column)
              Sheet2.Cells(tpNumber, 83).Value = "1"
              ThisWorkbook.Names.Item("Poslagen").Value = Left(ThisWorkbook.Names.Item("Poslagen").Value, Len(ThisWorkbook.Names.Item("Poslagen").Value) - j + 1) + tpNumber
            End If
          End If
        End If
    
        RS.Close
        Set RS = Nothing
    End If
  End If
  
  '// Vorgangstext ////////////////////////////////////////////////////////////////////////////////
  If Target.Row >= modCells.RowVrgStart And Target.Column = modCells.ColArbeitsbeschr And _
    Target.Row <= modCells.RowVrgEnd And refSBO.bVorgTextDB = True Then
    
    If (Trim(Cells(Target.Row, Target.Column)) <> "" Or bShowAll = True) Then
        If bShowAll = True Then
          RS.Open "SELECT * FROM Texte WHERE DEL = '' or DEL IS NULL", refSBO.Cn, adOpenStatic, adLockOptimistic
        Else
          RS.Open "SELECT * FROM Texte WHERE (DEL = '' or DEL IS NULL) AND UCase(TEXT) like '%" + UCase(CStr(Cells(Target.Row, Target.Column))) + "%'", refSBO.Cn, adOpenStatic, adLockOptimistic
        End If
    
        recs = RS.RecordCount - 1
    
        If recs > -1 Then
          Set modPublic.curRs = RS
    
          frmArbeitsbeschrieb.Show
    
          If modPublic.CurStammIndex > -1 Then
            RS.MoveFirst
            RS.Move modPublic.CurStammIndex
            Cells(Target.Row, Target.Column) = RS.Fields("TEXT")
          Else
            Cells(Target.Row, Target.Column) = ""
          End If
    
          Range(Cells(Target.Row + 1, Target.Column), Cells(Target.Row + 1, Target.Column)).Select
        Else
          If Trim(Cells(Target.Row, Target.Column)) <> "" Then
            If MsgBox("Der eingegebene Arbeitsbeschrieb ist noch nicht vorhanden. Soll er hinzugef|fffd|gt werden?", vbYesNo, "SORBAWorkspace") = vbYes Then
              j = 1
              tpChar = Right(ThisWorkbook.Names.Item("Texte").Value, j)
              Do While IsNumeric(tpChar) = True
                j = j + 1
                tpChar = Right(ThisWorkbook.Names.Item("Texte").Value, j)
              Loop
              
              tpNumber = CStr(CInt(Right(tpChar, Len(tpChar) - 1)) + 1)
              
              Sheet2.Cells(tpNumber, 75).Value = Cells(Target.Row, Target.Column)
              Sheet2.Cells(tpNumber, 77).Value = "1"
              ThisWorkbook.Names.Item("Texte").Value = Left(ThisWorkbook.Names.Item("Texte").Value, Len(ThisWorkbook.Names.Item("Texte").Value) - j + 1) + tpNumber
            End If
          End If
        End If
    
        RS.Close
        Set RS = Nothing
    End If
  End If

  Application.EnableEvents = True

  modPublic.CurStammIndex = -1
  
End Sub

Private Sub RegiePers(Target As Range)
Dim RS As New ADODB.Recordset
Dim i As Long
Dim coll As Long
Dim recs As Long
Dim strTEXT As String
Dim bInit As Boolean
  
  If refSBO.bBau2 = False Then
    Application.EnableEvents = False

    '// Personaldaten ////////////////////////////////////////////////////////////////////////////////
    If Target.Row = modCells.RowTotalH And Target.Column >= modCells.ColPstart And _
      Target.Column <= modCells.ColPend And Cells(modCells.RowP, Target.Column) <> "" Then

      strTEXT = Split(Cells(modCells.RowP, Target.Column), " - ", 2)(0)

      RS.Open "SELECT * FROM Personalstamm WHERE SUCH_NAME = '" + strTEXT + "'", refSBO.Cn, adOpenStatic, adLockReadOnly
  
      recs = RS.RecordCount - 1
    
      If recs > -1 Then
        
        RS.MoveFirst
        For i = 0 To 2
          Select Case i
            Case 0:
              strTEXT = "REG_TEXT"
            Case 1:
              strTEXT = "REG_TEXT2"
            Case 2:
              strTEXT = "REG_TEXT3"
          End Select
  
          If RS.Fields(strTEXT) <> "" Then
            If bInit = False Then
              ReDim modPublic.CurRegie(0)
              bInit = True
            Else
              ReDim Preserve modPublic.CurRegie(UBound(modPublic.CurRegie) + 1)
            End If
  
            modPublic.CurRegie(UBound(modPublic.CurRegie)) = RS.Fields(strTEXT)
          End If
        Next i
  
        If bInit = True Then
          If UBound(modPublic.CurRegie) > 0 Then
            frmRegie.Show
  
            If modPublic.CurStammIndex > -1 Then
              Cells(modCells.RowTotalH, Target.Column) = modPublic.CurRegie(modPublic.CurStammIndex)
            Else
              Cells(modCells.RowTotalH, Target.Column) = ""
            End If
          Else
            Cells(modCells.RowTotalH, Target.Column) = modPublic.CurRegie(0)
          End If
        Else
          MsgBox "Es wurden keine Regiedaten gefunden.", vbInformation, "SORBAWorkspace"
        End If
  
        Range(Cells(modCells.RowTotalH, Target.Column + 1), Cells(modCells.RowTotalH, Target.Column + 1)).Select
      Else
        Cells(modCells.RowTotalH, Target.Column) = ""
        MsgBox "Es wurden keine Daten mit dem aktuellen Text gefunden", vbInformation, "SORBA Workspace"
      End If
  
      RS.Close
      Set RS = Nothing
    End If

    Application.EnableEvents = True
  End If

  modPublic.CurStammIndex = -1
  
End Sub

Private Sub Worksheet_SelectionChange(ByVal Target As Range)
    If refSBO.bNoMakro = True Then Exit Sub
    
    If Target.Row = 1 And Target.Column = 1 Then
      Exit Sub '// f|fffd|r Logo einf|fffd|gen
    End If
    
    If Target.Row = modCells.RowDate And Target.Column = modCells.ColDate Then
      Exit Sub
    End If
    
    If Target.Row >= modCells.RowVrgStart And Target.Row <= modCells.RowVrgEnd And Target.Column = modCells.ColVorgang Then
        Exit Sub
    End If
    
    If Target.Row = modCells.RowTemp And Target.Column = modCells.ColTemp Then
        Exit Sub
    End If
    
    If Target.Row = modCells.RowBem And Target.Column = modCells.ColBem Then
        Exit Sub
    End If
    
    If Target.Row >= modCells.RowVrgStart And Target.Row <= modCells.RowVrgEnd And Target.Column = modCells.ColArbeitsbeschr Then
        Exit Sub
    End If
    
    If Target.Row >= modCells.RowVrgStart And Target.Row <= modCells.RowVrgEnd And Target.Column = modCells.ColPosl Then
        Exit Sub
    End If

    If refSBO.bBau2 = False Then
      If Target.Row >= modCells.RowP And Target.Row <= modCells.RowVrgEnd And Target.Column >= modCells.ColPstart And Target.Column <= modCells.ColPend Then
          Exit Sub
      End If
    Else
      If Target.Row >= modCells.RowVrgStart And Target.Row <= modCells.RowVrgEnd And Target.Column >= modCells.ColPstart And Target.Column <= modCells.ColPend Then
          Exit Sub
      End If
    End If
    
    If Target.Row >= modCells.RowVrgStart And Target.Row <= modCells.RowVrgEnd And Target.Column = modCells.ColCode Then
        Exit Sub
    End If
    
    If Target.Row >= modCells.RowP And Target.Row <= modCells.RowVrgEnd And Target.Column >= modCells.ColIstart And Target.Column <= modCells.ColIend Then
        Exit Sub
    End If
    
    If Target.Row >= modCells.RowP And Target.Row <= modCells.RowVrgEnd And Target.Column >= modCells.ColMstart And Target.Column <= modCells.ColMend Then
        Exit Sub
    End If
    
    If refSBO.bBau2 = False Then
      If Target.Row = modCells.RowMittag And Target.Column >= modCells.ColPstart And Target.Column <= modCells.ColPend Then
          Exit Sub
      End If
    End If

    Application.EnableEvents = False
    Cells(modCells.RowTemp, modCells.ColTemp).Select
    Application.EnableEvents = True
    
End Sub
Attribute VB_Name = "Sheet2"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Option Explicit

Private Sub Worksheet_Change(ByVal Target As Range)
  If Cells(1, 2) <> "" Then
    refSBO.LoadSBO
  End If
End Sub
Attribute VB_Name = "Sheet3"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Control = "cmdSave, 3, 1, MSForms, CommandButton"
Attribute VB_Control = "cmdPrint, 6, 4, MSForms, CommandButton"
Option Explicit

Private Sub cmdPrint_Click()
  Sheet1.PageSetup.PrintArea = "$A$1:$AB$47"
  Sheet1.PrintOut Copies:=1, Collate:=True
End Sub

Private Sub cmdSave_Click()
  Call SaveClick
End Sub

Public Sub SaveClick()
Dim RS As New ADODB.Recordset
Dim i As Integer
Dim curCol As Integer

  If refSBO.bNoMakro = False Then
  
      Sheet1.Range(Sheet1.Cells(modCells.RowP, modCells.ColPstart), Sheet1.Cells(modCells.RowTotalH - 1, modCells.ColPend)).ClearContents
      Sheet1.Range(Sheet1.Cells(modCells.RowMittag, modCells.ColPstart), Sheet1.Cells(modCells.RowMittag, modCells.ColPend)).ClearContents
      
      RS.Open "SELECT sum(Prod) as Prod, sum(Mittag) as Mittag, Funktion FROM Produktiv WHERE Funktion <> '' GROUP BY Funktion", refSBO.Cn, adOpenStatic, adLockReadOnly
      
      If RS.RecordCount > 0 Then
      
        RS.MoveFirst
        curCol = modCells.ColPstart
        For i = 0 To RS.RecordCount - 1
            Sheet1.Cells(modCells.RowP, curCol) = CStr(RS!Funktion)
            Sheet1.Cells(modCells.RowTotalH, curCol) = CStr(RS!Prod)
            If CStr(RS!Mittag) <> "0" Then Sheet1.Cells(modCells.RowMittag, curCol) = CStr(RS!Mittag)
        
            RS.MoveNext
            curCol = curCol + 1
            If curCol = modCells.ColPend + 1 Then Exit For
        Next i
      End If
      
      RS.Close
      Set RS = Nothing
      
      Sheet1.Activate
  
  End If
  
End Sub

Private Sub Worksheet_BeforeDoubleClick(ByVal Target As Range, Cancel As Boolean)
  If refSBO.bNoMakro = False Then
      Call OpenStamm(Target, True)
      Call RegiePers(Target)
  End If
End Sub

Private Sub Worksheet_Change(ByVal Target As Range)
Dim bGoodDate As Boolean
Dim tpDate As String

  If refSBO.bNoMakro = False Then

      If Target.Column = modCells.ColDate And Target.Row = modCells.RowDate Then
          If IsDate(Target.Value) = True Then
            Application.EnableEvents = False
            ThisWorkbook.Sheets("Bau").Cells(modCells.RowDate, modCells.ColDate).Value = Target.Value
            Application.EnableEvents = True
          Else
            tpDate = Target.Value
            Do While bGoodDate = False
              MsgBox "Bitte geben Sie ein g|fffd|ltiges Datum ein.", vbInformation, "SORBAWorkspace"
              tpDate = InputBox("Bitte geben Sie ein Datum ein:", "SORBAWorkspace", tpDate)
              
              If IsDate(tpDate) = True Then
                Target.Value = tpDate
                bGoodDate = True
              End If
            Loop
          End If
      End If
    
      Call OpenStamm(Target, False)
  
  End If

End Sub

Private Sub OpenStamm(Target As Range, bShowAll As Boolean)
Dim i As Long
Dim recs As Long
Dim RS As New ADODB.Recordset
Dim RsSoll As New ADODB.Recordset

  Application.EnableEvents = False

  '// Personaldaten ////////////////////////////////////////////////////////////////////////////////
  If Target.Row >= modCells.RowValuesStart And Target.Column = modCells.ColPers And _
  (Trim(Cells(Target.Row, Target.Column)) <> "" Or bShowAll = True) Then
    
    RS.Open "SELECT * FROM Personalstamm WHERE REG_TEXT <> '' OR REG_TEXT2 <> '' OR REG_TEXT3 <> ''", refSBO.Cn, adOpenStatic, adLockReadOnly

    If bShowAll = False Then
      RS.Filter = "SUCH_NAME like '%" + Replace(CStr(Cells(Target.Row, Target.Column)), "'", "") + "%'"
    End If

    recs = RS.RecordCount - 1

    If recs > -1 Then

      If recs > 0 Then
        Set modPublic.curRs = RS
        frmPers.Show

        If modPublic.CurStammIndex > -1 Then
          RS.MoveFirst
          RS.Move modPublic.CurStammIndex
          Cells(Target.Row, modCells.ColPers) = RS!SUCH_NAME
          Cells(Target.Row, modCells.ColFunktion) = RS!REG_TEXT
          
          If Cells(modCells.RowDate, modCells.ColDate) <> "" Then
            RsSoll.Open "SELECT * FROM Sollstunden WHERE INR = '" + CStr(RS!INR) + "' AND MONATNR = '" + CStr(Month(Cells(modCells.RowDate, modCells.ColDate))) + "' AND JAHR = '" + CStr(Year(Cells(modCells.RowDate, modCells.ColDate))) + "'", refSBO.Cn, adOpenStatic, adLockReadOnly
            
            If RsSoll.RecordCount = 1 Then
              RsSoll.MoveFirst
              Cells(Target.Row, modCells.ColSoll) = RsSoll.Fields("TAG_" + CStr(Day(Cells(modCells.RowDate, modCells.ColDate))))
            End If
            
            RsSoll.Close
            Set RsSoll = Nothing
          End If
        Else
          Cells(Target.Row, modCells.ColPers) = ""
          Cells(Target.Row, modCells.ColFunktion) = ""
          Cells(Target.Row, modCells.ColSoll) = ""
        End If
      Else
        RS.MoveFirst
        Cells(Target.Row, modCells.ColPers) = RS!SUCH_NAME
        Cells(Target.Row, modCells.ColFunktion) = RS!REG_TEXT
        
        If Cells(modCells.RowDate, modCells.ColDate) <> "" Then
          RsSoll.Open "SELECT * FROM Sollstunden WHERE INR = '" + CStr(RS!INR) + "' AND MONATNR = '" + CStr(Month(Cells(modCells.RowDate, modCells.ColDate))) + "' AND JAHR = '" + CStr(Year(Cells(modCells.RowDate, modCells.ColDate))) + "'", refSBO.Cn, adOpenStatic, adLockReadOnly
          
          If RsSoll.RecordCount = 1 Then
            RsSoll.MoveFirst
            Cells(Target.Row, modCells.ColSoll) = RsSoll.Fields("TAG_" + CStr(Day(Cells(modCells.RowDate, modCells.ColDate))))
          End If
          
          RsSoll.Close
          Set RsSoll = Nothing
        End If
      End If

      Range(Cells(Target.Row, Target.Column + 1), Cells(Target.Row, Target.Column + 1)).Select
    Else
      Cells(Target.Row, Target.Column) = ""
      MsgBox "Es wurden keine Daten mit dem aktuellen Text gefunden", vbInformation, "SORBA Workspace"
    End If

    RS.Close
    Set RS = Nothing
  End If

  Application.EnableEvents = True
  
  modPublic.CurStammIndex = -1

End Sub

Private Sub RegiePers(Target As Range)
Dim i As Long
Dim recs As Long
Dim strTEXT As String
Dim bInit As Boolean
Dim RS As New ADODB.Recordset

  Application.EnableEvents = False

  '// Personaldaten ////////////////////////////////////////////////////////////////////////////////
  If Target.Row >= modCells.RowValuesStart And Target.Column = modCells.ColFunktion And _
   Cells(Target.Row, modCells.ColPers) <> "" Then
   
    RS.Open "SELECT * FROM Personalstamm WHERE SUCH_NAME = '" + Cells(Target.Row, modCells.ColPers) + "'", refSBO.Cn, adOpenStatic, adLockReadOnly
  
    recs = RS.RecordCount - 1
  
    If recs > -1 Then
      
      RS.MoveFirst
      For i = 0 To 2
        Select Case i
          Case 0:
            strTEXT = "REG_TEXT"
          Case 1:
            strTEXT = "REG_TEXT2"
          Case 2:
            strTEXT = "REG_TEXT3"
        End Select

        If RS.Fields(strTEXT) <> "" Then
          If bInit = False Then
            ReDim modPublic.CurRegie(0)
            bInit = True
          Else
            ReDim Preserve modPublic.CurRegie(UBound(modPublic.CurRegie) + 1)
          End If

          modPublic.CurRegie(UBound(modPublic.CurRegie)) = RS.Fields(strTEXT)
        End If
      Next i

      If bInit = True Then
        If UBound(modPublic.CurRegie) > 0 Then
          frmRegie.Show

          If modPublic.CurStammIndex > -1 Then
            Cells(Target.Row, modCells.ColFunktion) = modPublic.CurRegie(modPublic.CurStammIndex)
          Else
            Cells(Target.Row, modCells.ColFunktion) = ""
          End If
        Else
          Cells(Target.Row, modCells.ColFunktion) = modPublic.CurRegie(0)
        End If
      Else
        MsgBox "Es wurden keine Regiedaten gefunden.", vbInformation, "SORBAWorkspace"
      End If

      Range(Cells(Target.Row, Target.Column + 3), Cells(Target.Row, Target.Column + 3)).Select
    Else
      Cells(Target.Row, modCells.ColFunktion) = ""
      MsgBox "Es wurden keine Daten mit dem aktuellen Text gefunden", vbInformation, "SORBA Workspace"
    End If

    RS.Close
    Set RS = Nothing
  End If

  Application.EnableEvents = True
  
  modPublic.CurStammIndex = -1
End Sub


Private Sub Worksheet_SelectionChange(ByVal Target As Range)
    If refSBO.bNoMakro = True Then Exit Sub
    
    If Target.Row = 1 And Target.Column = 1 Then
      Exit Sub '// f|fffd|r Logo einf|fffd|gen
    End If

    If Target.Row = modCells.RowDate And Target.Column = modCells.ColDate Then
      Exit Sub
    End If

    If Target.Row >= modCells.RowValuesStart And (Target.Column = modCells.ColPers Or Target.Column = modCells.ColFunktion) Then
        Exit Sub
    End If
    
    If Target.Row >= modCells.RowValuesStart And Target.Column >= modCells.ColLAstart And Target.Column <= modCells.ColLAend Then
        Exit Sub
    End If

    Application.EnableEvents = False
    Cells(modCells.RowDate, modCells.ColDate).Select
    Application.EnableEvents = True
    
End Sub
Attribute VB_Name = "Tabelle1"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "ThisWorkbook"
Attribute VB_Base = "0{00020819-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Option Explicit

Private Sub Workbook_BeforeSave(ByVal SaveAsUI As Boolean, Cancel As Boolean)
  If Trim(Sheet2.Range("C1")) = "" Then
    Application.EnableEvents = False
    With Application.Dialogs(xlDialogSaveAs)
      .Show (MakeCorrectFilename(CStr(Sheet1.Range("A6")) + "_" + Replace(CStr(Sheet1.Range("C6")), " ", "_") + "_" + CStr(Sheet1.Range("A4")) + ".xls"))
    End With
    Application.EnableEvents = True
    
    Cancel = True
  End If
End Sub

Private Function MakeCorrectFilename(strStr As String) As String

  strStr = Replace(strStr, "/", "_")
  strStr = Replace(strStr, "\", "_")
  strStr = Replace(strStr, ":", "_")
  strStr = Replace(strStr, "*", "_")
  strStr = Replace(strStr, "?", "_")
  strStr = Replace(strStr, """", "_")
  strStr = Replace(strStr, ">", "_")
  strStr = Replace(strStr, "<", "_")
  strStr = Replace(strStr, "|", "_")

  strStr = Replace(strStr, ";", "_")
  strStr = Replace(strStr, "+", "_")
  strStr = Replace(strStr, "|fffd|", "_")
  strStr = Replace(strStr, "@", "_")
  strStr = Replace(strStr, "#", "_")
  strStr = Replace(strStr, "%", "_")
  strStr = Replace(strStr, "&", "_")
  strStr = Replace(strStr, "|fffd|", "_")
  strStr = Replace(strStr, "=", "_")
  strStr = Replace(strStr, "~", "_")
  strStr = Replace(strStr, "^", "_")
  strStr = Replace(strStr, "`", "_")
  strStr = Replace(strStr, "{", "_")
  strStr = Replace(strStr, "}", "_")

  MakeCorrectFilename = strStr

End Function

Private Sub Workbook_Open()
Dim tp As String
Dim i As Long
Dim nInv As Integer
Dim nMat As Integer
Dim nPers As Integer

  Application.WindowState = xlMaximized
  
  On Error Resume Next
  Application.ErrorCheckingOptions.BackgroundChecking = False
  On Error GoTo 0
  
  Set refSBO = New clsSBO
  refSBO.LoadSBO
  
  If refSBO.bNoMakro = False Then Call AddMenus
  
  modPublic.bNotCreated = True

  Set refRap = New clsRapport
  
  refRap.FillWetter
  
  If ThisWorkbook.Sheets("Stamm").Cells(8, 2) <> "" Then
    If CInt(ThisWorkbook.Sheets("Stamm").Cells(8, 2)) > 20 Then
      nInv = 20
    Else
      nInv = CInt(ThisWorkbook.Sheets("Stamm").Cells(8, 2))
    End If
  Else
    nInv = 10
  End If
  
  If ThisWorkbook.Sheets("Stamm").Cells(9, 2) <> "" Then
    If CInt(ThisWorkbook.Sheets("Stamm").Cells(9, 2)) > 20 Then
      nMat = 20
    Else
      nMat = CInt(ThisWorkbook.Sheets("Stamm").Cells(9, 2))
    End If
  Else
    nMat = 10
  End If
  
  If ThisWorkbook.Sheets("Stamm").Cells(7, 2) <> "" Then
    If CInt(ThisWorkbook.Sheets("Stamm").Cells(7, 2)) > 20 Then
      nPers = 20
    Else
      nPers = CInt(ThisWorkbook.Sheets("Stamm").Cells(7, 2))
    End If
  Else
    nPers = 10
  End If
  
  If nPers > 0 Then
    Sheet1.Range(Sheet1.Cells(1, modCells.ColPstart + nPers), Sheet1.Cells(1, modCells.ColPend)).EntireColumn.Hidden = True
  End If
  
  If nInv > 0 Then
    Sheet1.Range(Sheet1.Cells(1, modCells.ColIstart + nInv), Sheet1.Cells(1, modCells.ColIend)).EntireColumn.Hidden = True
  End If
  
  If nMat > 0 Then
    Sheet1.Range(Sheet1.Cells(1, modCells.ColMstart + nMat), Sheet1.Cells(1, modCells.ColMend)).EntireColumn.Hidden = True
  End If
  
  Sheet2.Range("C1").Value = ""

End Sub

Private Sub Workbook_BeforeClose(Cancel As Boolean)

  Call DeleteMenu

  refSBO.UnLoadSBO

  On Error Resume Next
  Application.ErrorCheckingOptions.BackgroundChecking = True
  On Error GoTo 0
  
  Set refSBO = Nothing
  Set refRap = Nothing
  
End Sub

Sub DeleteMenu()
    On Error Resume Next
    Application.CommandBars("Worksheet Menu Bar").Controls("&Tagesrapport").Delete
    On Error GoTo 0
End Sub

Sub AddMenus()
On Error GoTo handler
Dim cbMainMenuBar As CommandBar
Dim iHelpMenu As Integer
Dim cbcCutomMenu As CommandBarControl

  On Error Resume Next
  Application.CommandBars("Worksheet Menu Bar").Controls("&Tagesrapport").Delete
  On Error GoTo 0
  
  Set cbMainMenuBar = Application.CommandBars("Worksheet Menu Bar")
       
  On Error Resume Next
  
  iHelpMenu = cbMainMenuBar.Controls("Help").index
  
  If Err.Number > 0 Then
    On Error GoTo handler
    Err.Clear
    iHelpMenu = cbMainMenuBar.Controls("?").index
  Else
    On Error GoTo handler
  End If
       
  Set cbcCutomMenu = cbMainMenuBar.Controls.Add(Type:=msoControlPopup, Before:=iHelpMenu)
                  
  cbcCutomMenu.Caption = "&Tagesrapport"
  
  With cbcCutomMenu.Controls.Add(Type:=msoControlButton)
    .Caption = "Speichern"
    .OnAction = "Sheet3.SaveClick"
  End With

handler:
End Sub
Attribute VB_Name = "clsRapport"
Attribute VB_Base = "0{FCFB3D2A-A0FA-1068-A738-08002B3371B5}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = False
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Option Explicit

Public rapnr As Long
Public RapDate As String
Public RapBstNr As Long
Public RapBem As String
Public RapWetter As String
Public Raptem As Double

Public Sub FillWetter()
  Sheet1.dxWetter.Clear
  Sheet1.dxWetter.AddItem "Soleil"
  Sheet1.dxWetter.AddItem "Nuageux"
  Sheet1.dxWetter.AddItem "Pluie"
  Sheet1.dxWetter.AddItem "Neige"
  Sheet1.dxWetter.AddItem "Brouillard"
End Sub

Public Sub FillVorg(ByRef Cn As ADODB.Connection)
Dim RS As New ADODB.Recordset
Dim i As Integer

  If modPublic.bVorgFilled = False Then
      RS.Open "SELECT * FROM Vorg|fffd|nge", Cn, adOpenStatic, adLockReadOnly
      
      If RS.RecordCount > 0 Then
      
        ReDim arrVorgText(RS.RecordCount - 1)
        ReDim modPublic.arrVorg(0)
        modPublic.arrVorg(0) = "empty"
        
        RS.MoveFirst
        
        For i = 0 To RS.RecordCount - 1
            If IsNull(RS!NK_CODE) = False Then
              
              If IsNull(RS!Text) = False Then arrVorgText(i) = CStr(RS!Text)
            
              If IsNull(RS!REG_VORG) = False Then
                If CStr(RS!REG_VORG) <> "" Then
                    If modPublic.arrVorg(0) = "empty" Then
                      modPublic.arrVorg(0) = "[R]" + CStr(RS!NK_CODE) + " - " + CStr(RS!NK_TEXT)
                    Else
                      ReDim Preserve modPublic.arrVorg(UBound(modPublic.arrVorg) + 1)
                      modPublic.arrVorg(UBound(modPublic.arrVorg)) = "[R]" + CStr(RS!NK_CODE) + " - " + CStr(RS!NK_TEXT)
                    End If
                Else
                    If modPublic.arrVorg(0) = "empty" Then
                      modPublic.arrVorg(0) = CStr(RS!NK_CODE) + " - " + CStr(RS!NK_TEXT)
                    Else
                      ReDim Preserve modPublic.arrVorg(UBound(modPublic.arrVorg) + 1)
                      modPublic.arrVorg(UBound(modPublic.arrVorg)) = CStr(RS!NK_CODE) + " - " + CStr(RS!NK_TEXT)
                    End If
                End If
              Else
                  If modPublic.arrVorg(0) = "empty" Then
                    modPublic.arrVorg(0) = CStr(RS!NK_CODE) + " - " + CStr(RS!NK_TEXT)
                  Else
                    ReDim Preserve modPublic.arrVorg(UBound(modPublic.arrVorg) + 1)
                    modPublic.arrVorg(UBound(modPublic.arrVorg)) = CStr(RS!NK_CODE) + " - " + CStr(RS!NK_TEXT)
                  End If
              End If
            End If
            
            RS.MoveNext
        Next i
      Else
        ReDim arrVorgText(0)
        arrVorgText(0) = ""
      End If
      
      RS.Clone
      Set RS = Nothing
      
      modPublic.bVorgFilled = True
  End If
      
End Sub

Public Sub SaveRap(refSBO As clsSBO)

End Sub
Attribute VB_Name = "clsSBO"
Attribute VB_Base = "0{FCFB3D2A-A0FA-1068-A738-08002B3371B5}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = False
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Option Explicit

Public bBau2 As Boolean
Public bShowPosl As Boolean
Public bVorgTextDB As Boolean
Public bNoMakro As Boolean

Public rsRegie As ADODB.Recordset
Public rsOffert As ADODB.Recordset
Public rsLager As ADODB.Recordset
Public rsSchl As ADODB.Recordset

Public bRsRegieOpened As Boolean
Public bRsOffertOpened As Boolean
Public bRsSchlOpened As Boolean
Public bRsLagerOpened As Boolean

Public Cn As ADODB.Connection

Public Function OpenRsRegie() As Boolean
Dim tpUText As String
Dim RS As ADODB.Recordset
Dim i As Long
  
  If Me.bRsRegieOpened = False Then
    Set RS = New ADODB.Recordset
    
    RS.Open "SELECT * FROM Regietarif", refSBO.Cn, adOpenStatic, adLockReadOnly
    
    If RS.RecordCount > 0 Then
      Set Me.rsRegie = New ADODB.Recordset
  
      Me.rsRegie.Fields.Append "BEZ", adVarChar, 256
      Me.rsRegie.Fields.Append "BEZ_SHOW", adVarChar, 256
      Me.rsRegie.Fields.Append "TEXT", adVarChar, 256
      Me.rsRegie.Fields.Append "PREIS", adVarChar, 32
      Me.rsRegie.Fields.Append "UPOS", adVarChar, 32
      Me.rsRegie.Fields.Append "HPOS", adVarChar, 32
      Me.rsRegie.Fields.Append "EINH", adVarChar, 32
      Me.rsRegie.Fields.Append "NR", adVarChar, 32
  
      Me.rsRegie.Open
  
      'Me.DB.winProgressStart "Regietarif wird gelesen...", Me.DB.GetRecordCount(hRegieSt) - 1, 0
  
      RS.MoveFirst
      For i = 0 To RS.RecordCount - 1
        'Me.DB.winProgressShow i, 0
  
        If RS!CO = "U" Then
          tpUText = RS!Text
        Else
          If RS!CO <> "D" Then tpUText = ""
        End If
  
        If RS!CO = "D" Then
          Me.rsRegie.AddNew
  
          If tpUText <> "" Then
            Me.rsRegie.Fields("BEZ") = tpUText + " " + Replace(RS!Text, "* ", "")
            Me.rsRegie.Fields("BEZ_SHOW") = tpUText + " " + Replace(RS!Text, "* ", "") + " - " + RS!EINH + " - " + CStr(RS!EINHPR)
          Else
            Me.rsRegie.Fields("BEZ") = RS!Text
            Me.rsRegie.Fields("BEZ_SHOW") = RS!Text + " - " + RS!EINH + " - " + CStr(RS!EINHPR)
          End If
  
          Me.rsRegie.Fields("TEXT") = RS!Text
          Me.rsRegie.Fields("PREIS") = CStr(RS!EINHPR)
          Me.rsRegie.Fields("HPOS") = CStr(RS!POSNR)
          Me.rsRegie.Fields("UPOS") = CStr(RS!POSNRG)
          Me.rsRegie.Fields("EINH") = RS!EINH
          Me.rsRegie.Fields("NR") = CStr(RS!NR)
          Me.rsRegie.Update
        End If
        
        RS.MoveNext
      Next i
  
      'Me.DB.winProgressEnd
      
      RS.Close
      Set RS = Nothing
      
      OpenRsRegie = True
      Me.bRsRegieOpened = True
    End If
  Else
    OpenRsRegie = True
  End If
  
End Function

Public Function OpenOffertSt() As Boolean
  Set Me.rsOffert = New ADODB.Recordset
  Me.rsOffert.Open "SELECT * FROM Offertstamm WHERE BEZ <> ''", refSBO.Cn, adOpenStatic, adLockReadOnly
  Me.bRsOffertOpened = True
  
  If Me.rsOffert.RecordCount > 0 Then OpenOffertSt = True
End Function

Public Function OpenLager() As Boolean
  Set Me.rsLager = New ADODB.Recordset
  Me.rsLager.Open "SELECT * FROM Lagerstamm WHERE TEXT <> ''", refSBO.Cn, adOpenStatic, adLockReadOnly
  Me.bRsLagerOpened = True
  
  If Me.rsLager.RecordCount > 0 Then OpenLager = True
End Function

Public Function OpenSchl() As Boolean
  Set Me.rsSchl = New ADODB.Recordset
  Me.rsSchl.Open "SELECT * FROM Schl|fffd|sselstamm WHERE BEZ <> ''", refSBO.Cn, adOpenStatic, adLockReadOnly
  Me.bRsSchlOpened = True
  
  If Me.rsSchl.RecordCount > 0 Then OpenSchl = True
End Function

Public Sub CloseRs()
  If Me.bRsRegieOpened = True Then
    
    If Me.rsRegie.State = 1 Then Me.rsRegie.Close
    Set Me.rsRegie = Nothing
    
    Me.bRsRegieOpened = False
  End If
  
  If Me.bRsOffertOpened = True Then
    
    If Me.rsOffert.State = 1 Then Me.rsOffert.Close
    Set Me.rsOffert = Nothing
    
    Me.bRsOffertOpened = False
  End If
  
  If Me.bRsLagerOpened = True Then
    
    If Me.rsLager.State = 1 Then Me.rsLager.Close
    Set Me.rsLager = Nothing
    
    Me.bRsLagerOpened = False
  End If
  
  If Me.bRsSchlOpened = True Then
    
    If Me.rsSchl.State = 1 Then Me.rsSchl.Close
    Set Me.rsSchl = Nothing
    
    Me.bRsSchlOpened = False
  End If
End Sub

Public Sub LoadSBO()
  If Trim(ThisWorkbook.Sheets("Stamm").Cells(10, 2)) = "1" Then
    bShowPosl = True
  End If
  
  If Trim(ThisWorkbook.Sheets("Stamm").Cells(11, 2)) = "1" Then
    bVorgTextDB = True
  End If
  
  If Trim(ThisWorkbook.Sheets("Stamm").Cells(1, 2)) = "" And Trim(ThisWorkbook.Sheets("Stamm").Cells(1, 1)) = "" Then
    bNoMakro = True
  Else
    If Trim(ThisWorkbook.Sheets("Stamm").Cells(1, 2)) = "1" Then
      bBau2 = False
    Else
      bBau2 = True
    End If
    
    Set Me.Cn = New ADODB.Connection
    
    With Me.Cn
      .Provider = "Microsoft.Jet.OLEDB.4.0"
      .ConnectionString = "Data Source=" & ThisWorkbook.FullName & ";Extended Properties=Excel 8.0;"
      .Open
    End With
  End If
End Sub

Public Sub UnLoadSBO()
  If bNoMakro = False Then
    Call Me.CloseRs
    
    Me.Cn.Close
    Set Me.Cn = Nothing
  End If
End Sub
Attribute VB_Name = "frmArbeitsbeschrieb"
Attribute VB_Base = "0{D716518F-6C8C-42C5-B9BD-2A2844A3FE97}{1DC7F9AD-BBD5-401A-8032-8C484617D4D7}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Option Explicit

Private Sub lstData_DblClick(ByVal Cancel As MSForms.ReturnBoolean)
    modPublic.CurStammIndex = lstData.ListIndex
    Unload Me
End Sub

Private Sub lstData_KeyDown(ByVal KeyCode As MSForms.ReturnInteger, ByVal Shift As Integer)
  If KeyCode = 46 Then
    If MsgBox("Soll der gew|fffd|hlte Arbeitsbeschrieb gel|fffd|scht werden?", vbYesNo, "SORBAWorkspace") = vbYes Then
      modPublic.curRs.MoveFirst
      modPublic.curRs.Move lstData.ListIndex
      modPublic.curRs.Fields("DEL").Value = "1"
      modPublic.curRs.Update
      Unload Me
    End If
  End If
End Sub

Private Sub lstData_KeyPress(ByVal KeyAscii As MSForms.ReturnInteger)
  If KeyAscii = vbKeyReturn Then
    modPublic.CurStammIndex = lstData.ListIndex
    Unload Me
  End If
  
  If KeyAscii = vbKeyEscape Then
    modPublic.CurStammIndex = -1
    Unload Me
  End If
End Sub

Private Sub UserForm_Initialize()

    'lblChose = arrLng(5, curLng)
    'Me.Caption = arrLng(7, curLng)

    Call Init
End Sub

Private Sub Init()
Dim i As Long
Dim recs As Long

    recs = modPublic.curRs.RecordCount - 1

    modPublic.curRs.MoveFirst
    For i = 0 To recs
        lstData.AddItem modPublic.curRs.Fields("TEXT")
        modPublic.curRs.MoveNext
    Next i
    
    lstData.ListIndex = 0
End Sub

Attribute VB_Name = "frmInv"
Attribute VB_Base = "0{134210A9-6B10-4D84-82A0-349CA9DF2BB8}{B10E9D1A-65C2-4F4E-B89F-DE20BB773F91}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Option Explicit

Private tables() As String
Private types() As String
Private textfield() As String
Private searchfield() As String
Private showfield() As String
Private uposfield() As String
Private hposfield() As String
Private einhfield() As String
Private nTables As Integer
Private curIndex As Integer

Private Sub ApplyFunc()
  If Me.txtBez <> "" And Me.txtEinh <> "" And Me.txtEinhPr <> "" Then
    If IsNumeric(Me.txtEinhPr) = True Then
      Sheet1.Cells(modCells.RowStamm, modPublic.tCol) = "eigentext"
      Sheet1.Cells(modPublic.tRow, modPublic.tCol) = Me.txtBez
      Sheet1.Cells(modCells.RowTotalH, modPublic.tCol) = Me.txtEinh
      Sheet1.Cells(modCells.RowUpos, modPublic.tCol) = Me.txtEinhPr
      Sheet1.Cells(modCells.RowHpos, modPublic.tCol) = Me.cboGattung
      
      Sheet1.Range(Sheet1.Cells(modPublic.tRow, modPublic.tCol + 1), Sheet1.Cells(modPublic.tRow, modPublic.tCol + 1)).Select
      
      Unload Me
    Else
      MsgBox "Das Feld Einheitspreis muss nummerisch sein.", vbInformation, "SORBAWorkspace"
    End If
  Else
    MsgBox "Es wurden nicht alle erforderlichen Felder ausgef|fffd|llt.", vbInformation, "SORBAWorkspace"
  End If
End Sub

Private Sub UserForm_KeyPress(ByVal KeyAscii As MSForms.ReturnInteger)
  If KeyAscii = vbKeyReturn And Me.txtBez.Visible = True Then
    Call ApplyFunc
  End If
End Sub

Private Sub txtBez_KeyDown(ByVal KeyCode As MSForms.ReturnInteger, ByVal Shift As Integer)
  If KeyCode = 13 Then Call ApplyFunc
End Sub

Private Sub txtEinh_KeyDown(ByVal KeyCode As MSForms.ReturnInteger, ByVal Shift As Integer)
  If KeyCode = 13 Then Call ApplyFunc
End Sub

Private Sub txtEinhPr_KeyDown(ByVal KeyCode As MSForms.ReturnInteger, ByVal Shift As Integer)
  If KeyCode = 13 Then Call ApplyFunc
End Sub

Private Sub cmdApply_Click()
  Call ApplyFunc
End Sub

Private Sub cmdCancel_Click()
  Unload Me
End Sub

Private Sub cmdNew_Click()
  Call NewArticleVisible
End Sub

Private Sub NewArticleVisible()
  Me.lblBez.Visible = True
  Me.lblEinh.Visible = True
  Me.lblEinhPr.Visible = True
  Me.lblGattung.Visible = True
  Me.lblNew.Visible = True
  Me.txtBez.Visible = True
  Me.txtEinh.Visible = True
  Me.txtEinhPr.Visible = True
  Me.cmdApply.Visible = True
  Me.cmdCancel.Visible = True
  
  Me.lblChose.Visible = False
  Me.lstData.Visible = False
  Me.cmdNew.Visible = False
  Me.cmdBack.Visible = False
  Me.cmdNext.Visible = False
End Sub

Private Sub StammVisible()
  Me.lblBez.Visible = False
  Me.lblEinh.Visible = False
  Me.lblEinhPr.Visible = False
  Me.lblGattung.Visible = False
  Me.lblNew.Visible = False
  Me.txtBez.Visible = False
  Me.txtEinh.Visible = False
  Me.txtEinhPr.Visible = False
  Me.cmdApply.Visible = False
  Me.cmdCancel.Visible = False
  
  Me.lblChose.Visible = True
  Me.lstData.Visible = True
  Me.cmdNew.Visible = True
  Me.cmdBack.Visible = True
  Me.cmdNext.Visible = True
End Sub

Private Sub lstData_DblClick(ByVal Cancel As MSForms.ReturnBoolean)
  Call FillCells
  Unload Me
End Sub

Private Sub lstData_KeyPress(ByVal KeyAscii As MSForms.ReturnInteger)
  
  If KeyAscii = vbKeyReturn Then
    Call FillCells
    Unload Me
  End If
  
  If KeyAscii = vbKeyEscape Then
    Call ClearCells
    Unload Me
  End If
End Sub

Private Sub ClearCells()
  Sheet1.Cells(modPublic.tRow, modPublic.tCol) = ""
  Sheet1.Cells(modCells.RowTotalH, modPublic.tCol) = ""
  Sheet1.Cells(modCells.RowStamm, modPublic.tCol) = ""
End Sub

Private Sub FillCells()
Dim RS As ADODB.Recordset

  Select Case types(curIndex)
  Case "Regietarief"
    Set RS = refSBO.rsRegie
  Case "Lagerstamm"
    Set RS = refSBO.rsLager
  Case "Offertstamm"
    Set RS = refSBO.rsOffert
  Case "Schl|fffd|sselstamm"
    Set RS = refSBO.rsSchl
  End Select
  
  If Not RS Is Nothing Then
    RS.MoveFirst
    RS.Move lstData.ListIndex
    
    Sheet1.Cells(modPublic.tRow, modPublic.tCol) = RS.Fields(searchfield(curIndex))
    Sheet1.Cells(modCells.RowTotalH, modPublic.tCol) = RS.Fields(einhfield(curIndex))
    Sheet1.Cells(modCells.RowUpos, modPublic.tCol) = RS.Fields(uposfield(curIndex))
    Sheet1.Cells(modCells.RowHpos, modPublic.tCol) = RS.Fields(hposfield(curIndex))
    Sheet1.Cells(modCells.RowStamm, modPublic.tCol) = tables(curIndex)
  End If
  
  Set RS = Nothing
  
  Sheet1.Range(Sheet1.Cells(modPublic.tRow, modPublic.tCol + 1), Sheet1.Cells(modPublic.tRow, modPublic.tCol + 1)).Select
End Sub

Private Sub CheckButtons()
  If curIndex = nTables - 1 Then
    Me.cmdNext.Enabled = False
  Else
    Me.cmdNext.Enabled = True
  End If
  
  If curIndex = 0 Then
    Me.cmdBack.Enabled = False
  Else
    Me.cmdBack.Enabled = True
  End If
End Sub

Private Sub FillBox(index As Integer)
Dim RS As ADODB.Recordset
Dim i As Long
Dim recs As Long
    
    lstData.Clear
    Me.Caption = types(index)
    
    Select Case types(curIndex)
    Case "Regietarief"
      Set RS = refSBO.rsRegie
    Case "Lagerstamm"
      Set RS = refSBO.rsLager
    Case "Offertstamm"
      Set RS = refSBO.rsOffert
    Case "Schl|fffd|sselstamm"
      Set RS = refSBO.rsSchl
    End Select
  
    If Not RS Is Nothing Then
      recs = RS.RecordCount - 1
      RS.MoveFirst
  
      For i = 0 To recs
          Select Case types(curIndex)
          Case "Regietarief"
            lstData.AddItem RS.Fields(showfield(index))
          Case "Lagerstamm"
            lstData.AddItem RS.Fields(textfield(index)) + " - " + RS.Fields(einhfield(index)) + " - " + RS.Fields("INR")
          Case "Offertstamm"
            lstData.AddItem RS.Fields(textfield(index)) + " - " + RS.Fields(einhfield(index))
          Case "Schl|fffd|sselstamm"
            If IsNull(RS.Fields(einhfield(index))) = False Then
              lstData.AddItem RS.Fields(textfield(index)) + " - " + RS.Fields(einhfield(index))
            Else
              lstData.AddItem RS.Fields(textfield(index))
            End If
          End Select
        
          RS.MoveNext
      Next i
    End If
    
    Set RS = Nothing

    lstData.ListIndex = 0
End Sub

Private Sub cmdBack_Click()
    curIndex = curIndex - 1
    Call FillBox(curIndex)
    Call CheckButtons
End Sub

Private Sub cmdNext_Click()
    curIndex = curIndex + 1
    Call FillBox(curIndex)
    Call CheckButtons
End Sub

Private Sub UserForm_Initialize()
Dim bInit As Boolean
Dim curTableName As String
Dim curTableTyp As String
Dim curCol As Long
Dim curTextField As String
Dim curSearchField As String
Dim curShowField As String
Dim curUposField As String
Dim curHposField As String
Dim curEinhField As String
Dim curRs As ADODB.Recordset
Dim bFilterSet As Boolean
Dim bMat As Boolean
Dim iPro As Long
Dim recs As Long
Dim i As Long
    
  For i = 1 To 4
    Select Case i
      Case 1:
        If refSBO.OpenOffertSt = True Then
          Set curRs = refSBO.rsOffert
          curTableName = "Offertstamm"
          curTableTyp = "Offertstamm"
          curTextField = "BEZ"
          curSearchField = "BEZ"
          curShowField = "BEZ"
          curUposField = "POSNRG"
          curHposField = "POSNR"
          curEinhField = "EINH"
        End If
      Case 2:
        If refSBO.OpenLager = True And Sheet2.Range("B6").Value <> "" Then
          Set curRs = refSBO.rsLager
          curTableName = Sheet2.Range("B6").Value
          curTableTyp = "Lagerstamm"
          curTextField = "TEXT"
          curSearchField = "TEXT"
          curShowField = "TEXT"
          curUposField = "UPOS"
          curHposField = "HPOS"
          curEinhField = "EH"
        End If
      Case 3:
        If refSBO.OpenSchl = True And Sheet2.Range("B3").Value <> "" Then
          Set curRs = refSBO.rsSchl
          curTableName = Sheet2.Range("B3").Value
          curTableTyp = "Schl|fffd|sselstamm"
          curTextField = "BEZ"
          curSearchField = "BEZ"
          curShowField = "BEZ"
          curUposField = "POSNRG"
          curHposField = "POSNR"
          curEinhField = "EINH"
        End If
      Case 4:
        If refSBO.OpenRsRegie = True And Sheet2.Range("B4").Value <> "" Then
          Set curRs = refSBO.rsRegie
          curTableName = Sheet2.Range("B4").Value
          curTableTyp = "Regietarief"
          curTextField = "TEXT"
          curSearchField = "BEZ"
          curShowField = "BEZ_SHOW"
          curUposField = "UPOS"
          curHposField = "HPOS"
          curEinhField = "EINH"
        End If
    End Select
    
    If Not curRs Is Nothing Then
      If curTableTyp <> "Regietarief" Then
        If bInv = True Then
          curRs.Filter = "GATTUNG = 'I'"
        Else
          curRs.Filter = "GATTUNG = 'M' OR GATTUNG = 'F'"
          bMat = True
        End If
        
        bFilterSet = True
      Else
        curRs.Filter = ""
      End If
      
      If bShowAll = False Then
        If bFilterSet = True Then
          If bMat = True Then
            curRs.Filter = "(GATTUNG = 'M' AND " + curSearchField + " like '%" + Replace(Sheet1.Cells(modPublic.tRow, modPublic.tCol), "'", "") + "%') OR " + _
                           "(GATTUNG = 'F' AND " + curSearchField + " like '%" + Replace(Sheet1.Cells(modPublic.tRow, modPublic.tCol), "'", "") + "%')"
          Else
            curRs.Filter = curRs.Filter + " AND " + curSearchField + " like '%" + Replace(Sheet1.Cells(modPublic.tRow, modPublic.tCol), "'", "") + "%'"
          End If
        Else
          curRs.Filter = curSearchField + " like '%" + Replace(Sheet1.Cells(modPublic.tRow, modPublic.tCol), "'", "") + "%'"
        End If
      Else
        If bFilterSet = False Then curRs.Filter = ""
      End If
      
      bFilterSet = False
      bMat = False
      
      recs = curRs.RecordCount
      
      If recs > 0 Then
        If bInit = False Then
          ReDim colls(0)
          ReDim tables(0)
          ReDim types(0)
          ReDim textfield(0)
          ReDim searchfield(0)
          ReDim showfield(0)
          ReDim uposfield(0)
          ReDim hposfield(0)
          ReDim einhfield(0)
          
          tables(0) = curTableName
          types(0) = curTableTyp
          textfield(0) = curTextField
          searchfield(0) = curSearchField
          showfield(0) = curShowField
          uposfield(0) = curUposField
          hposfield(0) = curHposField
          einhfield(0) = curEinhField
          
          bInit = True
        Else
          ReDim Preserve tables(UBound(tables) + 1)
          ReDim Preserve types(UBound(types) + 1)
          ReDim Preserve textfield(UBound(textfield) + 1)
          ReDim Preserve searchfield(UBound(searchfield) + 1)
          ReDim Preserve showfield(UBound(showfield) + 1)
          ReDim Preserve uposfield(UBound(uposfield) + 1)
          ReDim Preserve hposfield(UBound(hposfield) + 1)
          ReDim Preserve einhfield(UBound(einhfield) + 1)
          
          tables(UBound(tables)) = curTableName
          types(UBound(tables)) = curTableTyp
          textfield(UBound(tables)) = curTextField
          searchfield(UBound(tables)) = curSearchField
          showfield(UBound(tables)) = curShowField
          uposfield(UBound(tables)) = curUposField
          hposfield(UBound(tables)) = curHposField
          einhfield(UBound(tables)) = curEinhField
        End If
        
        nTables = nTables + 1
        curCol = -1
      End If
    End If
    
    Set curRs = Nothing
  Next i
  
  If bInv = True Then
    Me.cboGattung.AddItem "I"
  Else
    Me.cboGattung.AddItem "M"
    Me.cboGattung.AddItem "F"
  End If
  
  Me.cboGattung.ListIndex = 0
  
  If nTables > 0 Then
    Call StammVisible
    
    curIndex = 0
    Call FillBox(curIndex)
    Call CheckButtons
  Else
    Call NewArticleVisible
  
    Me.txtBez = CStr(Sheet1.Cells(modPublic.tRow, modPublic.tCol))
  End If

End Sub
Attribute VB_Name = "frmLS"
Attribute VB_Base = "0{BA7910F0-EE78-46C6-9B04-E37021422A45}{9A2ACC93-2EA8-4060-85FE-09F52FA16EA6}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Option Explicit

Dim RS As ADODB.Recordset

Private Sub cmdLieferanten_Click()
    Call ChooseLieferant(True)
End Sub

Private Sub txtSearchLieferant_KeyDown(ByVal KeyCode As MSForms.ReturnInteger, ByVal Shift As Integer)
    If KeyCode = 13 And Me.txtSearchLieferant <> "" Then
        Call ChooseLieferant(False)
    End If
End Sub

Private Sub ChooseLieferant(bShowAll As Boolean)
Dim i As Long
Dim coll As Long
Dim recs As Long

    Set RsLief = New ADODB.Recordset
    
    Application.EnableEvents = False

    RsLief.Open "SELECT * FROM Lieferant", refSBO.Cn, adOpenStatic, adLockOptimistic
    
    If bShowAll = False Then
        RsLief.Filter = "SUCHNAME like '%" + Me.txtSearchLieferant + "%'"
    End If
    
    recs = RsLief.RecordCount - 1
    
    If recs > -1 Then
      If recs > 0 Then
        frmLieferant.Show
        
        If modPublic.CurStammIndex > -1 Then
          RsLief.MoveFirst
          RsLief.Move modPublic.CurStammIndex
          
          Me.txtLiefNr = RsLief.Fields("LIEF_NR")
          Me.txtLief = RsLief.Fields("SUCHNAME")
          
          Cells(modCells.RowLifNr, ActiveCell.Column) = RsLief.Fields("LIEF_NR")
          Cells(modCells.RowLifName, ActiveCell.Column) = RsLief.Fields("SUCHNAME")
          
          Cells(modCells.RowLifNr, ActiveCell.Column).ClearComments
          Cells(modCells.RowLifNr, ActiveCell.Column).AddComment
          Cells(modCells.RowLifNr, ActiveCell.Column).Comment.Visible = False
          Cells(modCells.RowLifNr, ActiveCell.Column).Comment.Text Text:=CStr(RsLief.Fields("SUCHNAME"))
        Else
          Cells(modCells.RowLifNr, ActiveCell.Column) = ""
          Cells(modCells.RowLifName, ActiveCell.Column) = ""
          Cells(modCells.RowLifNr, ActiveCell.Column).ClearComments
        End If
      Else
        RsLief.MoveFirst
        
        Me.txtLiefNr = RsLief.Fields("LIEF_NR")
        Me.txtLief = RsLief.Fields("SUCHNAME")
          
        Cells(modCells.RowLifNr, ActiveCell.Column) = RsLief.Fields("LIEF_NR")
        Cells(modCells.RowLifName, ActiveCell.Column) = RsLief.Fields("SUCHNAME")
        
        Cells(modCells.RowLifNr, ActiveCell.Column).ClearComments
        Cells(modCells.RowLifNr, ActiveCell.Column).AddComment
        Cells(modCells.RowLifNr, ActiveCell.Column).Comment.Visible = False
        Cells(modCells.RowLifNr, ActiveCell.Column).Comment.Text Text:=CStr(RsLief.Fields("SUCHNAME"))
      End If
      
      Me.txtSearchLieferant = ""
      Me.txtMenge.SetFocus
    Else
      Me.txtLiefNr = ""
      Me.txtLief = ""
      
      Cells(modCells.RowLifNr, ActiveCell.Column) = ""
      Cells(modCells.RowLifNr, ActiveCell.Column).ClearComments
      MsgBox "Mit dem aktuellen Suchtext wurden keine Daten gefunden", vbInformation, "SORBA Workspace"
    End If
    
    RsLief.Clone
    Set RsLief = Nothing

    Application.EnableEvents = True
    modPublic.CurStammIndex = -1
End Sub

Private Sub UserForm_KeyPress(ByVal KeyAscii As MSForms.ReturnInteger)
  If KeyAscii = vbKeyEscape Then
    Unload Me
  End If
End Sub

Private Sub txtMenge_KeyDown(ByVal KeyCode As MSForms.ReturnInteger, ByVal Shift As Integer)
  If KeyCode = 27 Then Unload Me
End Sub

Private Sub txtLSNr_KeyDown(ByVal KeyCode As MSForms.ReturnInteger, ByVal Shift As Integer)
  If KeyCode = 27 Then Unload Me
End Sub

Private Sub lstData_KeyDown(ByVal KeyCode As MSForms.ReturnInteger, ByVal Shift As Integer)
  If KeyCode = 27 Then Unload Me
End Sub

Private Sub cmdAdd_KeyDown(ByVal KeyCode As MSForms.ReturnInteger, ByVal Shift As Integer)
  If KeyCode = 27 Then Unload Me
End Sub

Private Sub cmdDel_KeyDown(ByVal KeyCode As MSForms.ReturnInteger, ByVal Shift As Integer)
  If KeyCode = 27 Then Unload Me
End Sub

Private Sub cmdClose_KeyDown(ByVal KeyCode As MSForms.ReturnInteger, ByVal Shift As Integer)
  If KeyCode = 27 Then Unload Me
End Sub

Private Sub cmdAdd_Click()
Dim j As Integer
Dim tpChar As String
Dim tpNumber As String
Dim strPosText As String

  If Trim(txtMenge.Value) <> "" And Trim(txtLSNr.Value) <> "" Then
    If IsNumeric(txtMenge.Value) = True And IsNumeric(txtLSNr.Value) = True Then
        j = 1
        tpChar = Right(ThisWorkbook.Names.Item("Lieferscheine").Value, j)
        Do While IsNumeric(tpChar) = True
          j = j + 1
          tpChar = Right(ThisWorkbook.Names.Item("Lieferscheine").Value, j)
        Loop
        
        tpNumber = CStr(CInt(Right(tpChar, Len(tpChar) - 1)) + 1)
        
        Tabelle1.Cells(tpNumber, 1).Value = CStr(ActiveCell.Column)
        Tabelle1.Cells(tpNumber, 2).Value = Trim(txtMenge.Value)
        Tabelle1.Cells(tpNumber, 3).Value = Trim(txtLSNr.Value)
        ThisWorkbook.Names.Item("Lieferscheine").Value = Left(ThisWorkbook.Names.Item("Lieferscheine").Value, Len(ThisWorkbook.Names.Item("Lieferscheine").Value) - j + 1) + tpNumber
      
        txtMenge.Value = ""
        txtLSNr.Value = ""
        
        Call ReadLS
    Else
      MsgBox "Die Werte m|fffd|ssen numerisch sein.", vbInformation, "SORBAWorkspace"
    End If
  Else
    MsgBox "Bitte f|fffd|llen Sie alle Werte aus.", vbInformation, "SORBAWorkspace"
  End If
  
  txtMenge.SetFocus
End Sub

Private Sub cmdClose_Click()
  Unload Me
End Sub

Private Sub cmdDel_Click()
Dim tpArr() As String
Dim tpText As String
Dim iRow As Long

  If lstData.ListIndex > -1 Then
    iRow = 2
    
    tpArr = Split(lstData.List(lstData.ListIndex), "  -  ")
    tpText = Tabelle1.Cells(iRow, 1)
    Do While tpText <> ""
        If Tabelle1.Cells(iRow, 1) = CStr(ActiveCell.Column) And _
           Tabelle1.Cells(iRow, 2) = tpArr(0) And Tabelle1.Cells(iRow, 3) = tpArr(1) Then
           
            Tabelle1.Rows(CStr(iRow) + ":" + CStr(iRow)).Delete Shift:=xlUp
            Exit Do
        End If
        
        iRow = iRow + 1
        tpText = Tabelle1.Cells(iRow, 1)
    Loop
    
    ReadLS
  End If
End Sub

Private Sub UserForm_Initialize()
  Set RS = New ADODB.Recordset
  
  If Sheet1.Cells(modCells.RowTotal, ActiveCell.Column) <> "" Then
    txtPosMge = Replace(Sheet1.Cells(modCells.RowTotal, ActiveCell.Column), ",", ".")
  Else
    txtPosMge = 0
  End If
  
  Call ReadLS(True)
  
  If Cells(modCells.RowLifNr, ActiveCell.Column) <> "" Then
    Me.txtLiefNr = Cells(modCells.RowLifNr, ActiveCell.Column)
    Me.txtLief = Cells(modCells.RowLifName, ActiveCell.Column)
  Else
    Me.txtSearchLieferant.SetFocus
  End If
End Sub

Private Sub ReadLS(Optional bInit As Boolean = False)
Dim coll As Long
Dim i As Long
Dim strRappNr As String

  lstData.Clear
  
  If bInit = False Then
    RS.Clone
    Set RS = Nothing
    Set RS = New ADODB.Recordset
  End If
  
  RS.Open "SELECT * FROM Lieferscheine WHERE GEWICHT = '" + CStr(ActiveCell.Column) + "'", refSBO.Cn, adOpenStatic, adLockOptimistic
  
  If RS.RecordCount > 0 Then
    For i = 0 To RS.RecordCount - 1
      lstData.AddItem Trim(RS.Fields("MENGE")) + "  -  " + Trim(RS.Fields("LS"))
      RS.MoveNext
    Next i
  End If
  
  Call Calculate
End Sub

Private Sub Calculate()
Dim tpBetrag As Double
Dim tpArr() As String
Dim i As Long
  
  If lstData.ListCount > 0 Then
    For i = 0 To lstData.ListCount - 1
      tpArr = Split(lstData.List(i), "  -  ")
      tpBetrag = tpBetrag + CDbl(tpArr(0))
    Next i
  Else
    tpBetrag = 0
  End If
  
  txtTotal.Value = CStr(tpBetrag)
  
  If Sheet1.Cells(modCells.RowTotal, ActiveCell.Column) <> "" Then
    If tpBetrag <> 0 Then
      txtMenge.Value = CStr(CDbl(Sheet1.Cells(modCells.RowTotal, ActiveCell.Column)) - tpBetrag)
    Else
      txtMenge.Value = CStr(Sheet1.Cells(modCells.RowTotal, ActiveCell.Column))
    End If
  End If
  
  If CDbl(txtTotal.Value) = CDbl(Replace(txtPosMge.Value, ",", ".")) Then
    lblStatus.Visible = True
  Else
    lblStatus.Visible = False
  End If
End Sub

Private Sub UserForm_Terminate()
  RS.Close
  Set RS = Nothing
  
  If txtTotal.Value <> 0 Then
    ActiveCell.Value = txtTotal.Value
  Else
    ActiveCell.Value = ""
  End If
  
  Sheet1.Range(Cells(ActiveCell.Row, ActiveCell.Column + 1), Cells(ActiveCell.Row, ActiveCell.Column + 1)).Select
End Sub
Attribute VB_Name = "frmLieferant"
Attribute VB_Base = "0{75E3A20B-80C6-4144-BF5D-BE751206DC25}{E037087D-1C45-4761-A06C-AAB28BF3D166}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Option Explicit

Private Sub lstData_DblClick(ByVal Cancel As MSForms.ReturnBoolean)
    modPublic.CurStammIndex = lstData.ListIndex
    Unload Me
End Sub

Private Sub lstData_KeyPress(ByVal KeyAscii As MSForms.ReturnInteger)
  If KeyAscii = vbKeyReturn Then
    modPublic.CurStammIndex = lstData.ListIndex
    Unload Me
  End If
  
  If KeyAscii = vbKeyEscape Then
    modPublic.CurStammIndex = -1
    Unload Me
  End If
End Sub

Private Sub UserForm_Initialize()
Dim i As Long
Dim recs As Long

    recs = RsLief.RecordCount - 1
    
    RsLief.MoveFirst
    For i = 0 To recs
        lstData.AddItem RsLief.Fields("SUCHNAME")
        RsLief.MoveNext
    Next i
    
    lstData.ListIndex = 0
End Sub
Attribute VB_Name = "frmPers"
Attribute VB_Base = "0{EA358AA5-2CB3-457F-9C70-246A9F7169E8}{548E73CE-435F-450F-B7DD-98CB3A08EB7A}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Option Explicit

Private Sub lstData_DblClick(ByVal Cancel As MSForms.ReturnBoolean)
    modPublic.CurStammIndex = lstData.ListIndex
    Unload Me
End Sub

Private Sub lstData_KeyPress(ByVal KeyAscii As MSForms.ReturnInteger)
  If KeyAscii = vbKeyReturn Then
    modPublic.CurStammIndex = lstData.ListIndex
    Unload Me
  End If
  
  If KeyAscii = vbKeyEscape Then
    modPublic.CurStammIndex = -1
    Unload Me
  End If
End Sub

Private Sub UserForm_Initialize()
Dim i As Long
Dim recs As Long

    recs = modPublic.curRs.RecordCount - 1
    
    modPublic.curRs.MoveFirst
    For i = 0 To recs
        lstData.AddItem modPublic.curRs!SUCH_NAME + " - " + CStr(modPublic.curRs!INR)
        modPublic.curRs.MoveNext
    Next i
    
    lstData.ListIndex = 0
End Sub
Attribute VB_Name = "frmPosl"
Attribute VB_Base = "0{DC12703D-0ED4-44BD-A6F1-D79362C8159D}{012ECBAA-BFB1-40B8-B72C-219551864548}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
'
'Option Explicit
'
'Private CollPosl As Long
'
'Private Sub lstData_DblClick(ByVal Cancel As MSForms.ReturnBoolean)
'    Call WirteValue
'End Sub
'
'Private Sub lstData_KeyPress(ByVal KeyAscii As MSForms.ReturnInteger)
'    If KeyAscii = vbKeyReturn Then
'      Call WirteValue
'    End If
'
'    If KeyAscii = vbKeyEscape Then
'      Sheet1.Cells(modPublic.tRow, modPublic.tCol).Value = ""
'      Sheet1.Cells(modPublic.tRow, modPublic.tCol).ClearComments
'      Unload Me
'    End If
'End Sub
'
'Private Sub WirteValue()
'Dim tpArr() As String
'
'    tpArr = Split(lstData.List(lstData.ListIndex), "  -  ")
'    Sheet1.Cells(modPublic.tRow, modPublic.tCol).Value = tpArr(0)
'
'    Sheet1.Cells(modPublic.tRow, modPublic.tCol).ClearComments
'
''    Sheet1.Cells(modPublic.tRow, modPublic.tCol).AddComment
''    Sheet1.Cells(modPublic.tRow, modPublic.tCol).Comment.Visible = False
''    Sheet1.Cells(modPublic.tRow, modPublic.tCol).Comment.Text Text:=tpArr(1)
'
'    Sheet1.Range(Cells(modPublic.tRow + 1, modPublic.tCol), Cells(modPublic.tRow + 1, modPublic.tCol)).Select
'
'    Unload Me
'End Sub
'
'Private Sub UserForm_Activate()
'    If lstData.ListIndex = -1 Then
'        MsgBox "Es wurden keine Daten gefunden.", vbInformation, "SORBAWorkspace"
'        Unload Me
'    End If
'End Sub
'
'Private Sub UserForm_Initialize()
'Dim i As Long
'Dim bFound As Boolean
'Dim Rs As New ADODB.Recordset
'
'    'lblChose = arrLng(5, curLng)
'    'Me.Caption = arrLng(34, curLng)
'
'    If modPublic.bShowAll = True Then
'      Rs.Open "SELECT * FROM Poslagen WHERE DEL IS NULL or DEL = ''", refSBO.Cn, adOpenStatic, adLockReadOnly
'    Else
'      Rs.Open "SELECT * FROM Poslagen WHERE (DEL IS NULL or DEL = '') AND POSNR like '%" + Sheet1.Cells(modPublic.tRow, modPublic.tCol) + "%'", refSBO.Cn, adOpenStatic, adLockReadOnly
'    End If
'
'    If Rs.RecordCount > 0 Then
'      Rs.MoveFirst
'      For i = 0 To Rs.RecordCount - 1
'          lstData.AddItem Rs.Fields("POSNR") + "  -  " + Rs.Fields("POSL")
'          Rs.MoveNext
'      Next i
'
'      lstData.ListIndex = 0
'    Else
'      Sheet1.Cells(modPublic.tRow, modPublic.tCol).Value = ""
'      Sheet1.Cells(modPublic.tRow, modPublic.tCol).ClearComments
'      lstData.ListIndex = -1
'    End If
'
'    Rs.Clone
'    Set Rs = Nothing
'
'End Sub
'
'Private Sub UserForm_Terminate()
'    lstData.ListIndex = -1
'    modPublic.tRow = -1
'    modPublic.tCol = -1
'    modPublic.CurStammIndex = -1
'    modPublic.bShowAll = False
'End Sub
'

Option Explicit

Private Sub lstData_DblClick(ByVal Cancel As MSForms.ReturnBoolean)
    modPublic.CurStammIndex = lstData.ListIndex
    Unload Me
End Sub

Private Sub lstData_KeyDown(ByVal KeyCode As MSForms.ReturnInteger, ByVal Shift As Integer)
  If KeyCode = 46 Then
    If MsgBox("Soll die gew|fffd|hlte Positionslage gel|fffd|scht werden?", vbYesNo, "SORBAWorkspace") = vbYes Then
      modPublic.curRs.MoveFirst
      modPublic.curRs.Move lstData.ListIndex
      modPublic.curRs.Fields("DEL").Value = "1"
      modPublic.curRs.Update
      Unload Me
    End If
  End If
End Sub

Private Sub lstData_KeyPress(ByVal KeyAscii As MSForms.ReturnInteger)
  If KeyAscii = vbKeyReturn Then
    modPublic.CurStammIndex = lstData.ListIndex
    Unload Me
  End If
  
  If KeyAscii = vbKeyEscape Then
    modPublic.CurStammIndex = -1
    Unload Me
  End If
End Sub

Private Sub UserForm_Initialize()

    'lblChose = arrLng(5, curLng)
    'Me.Caption = arrLng(7, curLng)

    Call Init
End Sub

Private Sub Init()
Dim i As Long
Dim recs As Long

    recs = modPublic.curRs.RecordCount - 1

    modPublic.curRs.MoveFirst
    For i = 0 To recs
        lstData.AddItem modPublic.curRs.Fields("POSNR") + "  -  " + modPublic.curRs.Fields("POSL")
        modPublic.curRs.MoveNext
    Next i
    
    lstData.ListIndex = 0
End Sub


Attribute VB_Name = "frmRegie"
Attribute VB_Base = "0{92C8F445-FCC0-4990-8395-01E2D97B5952}{E505E665-C04B-4B8F-86AD-40241F255BA8}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Option Explicit

Private Sub lstData_DblClick(ByVal Cancel As MSForms.ReturnBoolean)
    modPublic.CurStammIndex = lstData.ListIndex
    Unload Me
End Sub

Private Sub lstData_KeyPress(ByVal KeyAscii As MSForms.ReturnInteger)
  If KeyAscii = vbKeyReturn Then
    modPublic.CurStammIndex = lstData.ListIndex
    Unload Me
  End If
  
  If KeyAscii = vbKeyEscape Then
    modPublic.CurStammIndex = -1
    Unload Me
  End If
End Sub

Private Sub UserForm_Initialize()
Dim i As Long
Dim recs As Long

    recs = UBound(modPublic.CurRegie)

    For i = 0 To recs
        lstData.AddItem modPublic.CurRegie(i)
    Next i
    
    lstData.ListIndex = 0
End Sub

Attribute VB_Name = "frmVorg"
Attribute VB_Base = "0{A05B11AD-45A5-48E6-8565-5290FCE15B41}{941ED6F9-0BF5-42E0-95D6-A082C4834A68}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False

Option Explicit

Private arrActualIndex() As Integer

Private Sub lstData_DblClick(ByVal Cancel As MSForms.ReturnBoolean)
    Call WirteValue
End Sub

Private Sub lstData_KeyPress(ByVal KeyAscii As MSForms.ReturnInteger)
    If KeyAscii = vbKeyReturn Then
      Call WirteValue
    End If
    
    If KeyAscii = vbKeyEscape Then
      Sheet1.Cells(modPublic.tRow, modPublic.tCol).Value = ""
      Sheet1.Cells(modPublic.tRow, modPublic.tCol).ClearComments
      Unload Me
    End If
End Sub

Private Sub WirteValue()
Dim tpArr() As String

    tpArr = Split(lstData.List(lstData.ListIndex), " - ")
    Sheet1.Cells(modPublic.tRow, modPublic.tCol).Value = tpArr(0)
    
    Sheet1.Cells(modPublic.tRow, modPublic.tCol).ClearComments
    
    Sheet1.Cells(modPublic.tRow, modPublic.tCol).AddComment
    Sheet1.Cells(modPublic.tRow, modPublic.tCol).Comment.Visible = False
    Sheet1.Cells(modPublic.tRow, modPublic.tCol).Comment.Text Text:=tpArr(1)
    
    If Trim(arrVorgText(arrActualIndex(lstData.ListIndex))) <> "" Then
        If Sheet1.Cells(modPublic.tRow, modCells.ColArbeitsbeschr) = "" Then
            Sheet1.Cells(modPublic.tRow, modCells.ColArbeitsbeschr) = arrVorgText(arrActualIndex(lstData.ListIndex))
        Else
            If MsgBox("Wollen Sie die Aktuelle Beschreibung |fffd|berschreiben?", vbYesNo, "SORBAWorkspace") = vbYes Then
                Sheet1.Cells(modPublic.tRow, modCells.ColArbeitsbeschr) = arrVorgText(arrActualIndex(lstData.ListIndex))
            End If
        End If
    End If

    Sheet1.Range(Cells(modPublic.tRow + 1, modPublic.tCol), Cells(modPublic.tRow + 1, modPublic.tCol)).Select
    
    Unload Me
End Sub

Private Sub UserForm_Activate()
    If lstData.ListIndex = -1 Then
        MsgBox "Mit dem aktuellen Filter wurde kein Text gefunden.", vbInformation, "SORBAWorkspace"
        Unload Me
    End If
End Sub

Private Sub UserForm_Initialize()
Dim i As Long
Dim bFound As Boolean
    
    If modPublic.arrVorg(0) <> "empty" Then
      For i = 0 To UBound(modPublic.arrVorg)
          If modPublic.bShowAll = True Or InStr(1, LCase(modPublic.arrVorg(i)), LCase(Sheet1.Cells(modPublic.tRow, modPublic.tCol))) > 0 Then
              If bFound = False Then
                ReDim arrActualIndex(0)
                arrActualIndex(0) = i
              Else
                ReDim Preserve arrActualIndex(UBound(arrActualIndex) + 1)
                arrActualIndex(UBound(arrActualIndex)) = i
              End If
              
              lstData.AddItem modPublic.arrVorg(i)
              bFound = True
          End If
      Next i
      
      If bFound = True Then
        lstData.ListIndex = 0
      Else
        Sheet1.Cells(modPublic.tRow, modPublic.tCol).Value = ""
        Sheet1.Cells(modPublic.tRow, modPublic.tCol).ClearComments
        lstData.ListIndex = -1
      End If
    Else
      Sheet1.Cells(modPublic.tRow, modPublic.tCol).Value = ""
      Sheet1.Cells(modPublic.tRow, modPublic.tCol).ClearComments
      lstData.ListIndex = -1
    End If
End Sub

Private Sub UserForm_Terminate()
    lstData.ListIndex = -1
    modPublic.tRow = -1
    modPublic.tCol = -1
    modPublic.CurStammIndex = -1
    modPublic.bShowAll = False
End Sub
Attribute VB_Name = "modCells"
Option Explicit

Public Const RowBstNr As Integer = 6
Public Const RowBst As Integer = 6
Public Const RowTemp As Integer = 8
Public Const RowBem As Integer = 10
Public Const RowLoadRapNr As Integer = 2
Public Const RowLoadOpen As Integer = 1
Public Const RowStamm As Integer = 33
Public Const RowUpos As Integer = 34
Public Const RowHpos As Integer = 35
Public Const RowStammNr As Integer = 1
Public Const RowMittag As Integer = 31
Public Const RowTotal As Integer = 30
Public Const RowDate As Integer = 4

Public Const ColBstNr As Integer = 1
Public Const ColBst As Integer = 3
Public Const ColTemp As Integer = 1
Public Const ColBem As Integer = 1
Public Const ColLoadRapNr As Integer = 4
Public Const ColLoadOpen As Integer = 4
Public Const ColArbeitsbeschr As Integer = 2
Public Const ColDate As Integer = 1
Public Const ColVorgang As Integer = 1

Public Const RowLsNrI As Integer = 1
Public Const RowLsNrM As Integer = 2
Public Const RowLifNr As Integer = 1
Public Const RowLifName As Integer = 36

Public Const RowP As Integer = 1
Public Const RowI As Integer = 4
Public Const RowM As Integer = 4
Public Const RowTotalH As Integer = 13

Public Const RowVrgStart As Integer = 14
Public Const RowVrgEnd As Integer = 29

Public Const ColPosl As Integer = 5
Public Const ColPstart As Integer = 6
Public Const ColPend As Integer = 25
Public Const ColIstart As Integer = 28
Public Const ColIend As Integer = 47
Public Const ColMstart As Integer = 50
Public Const ColMend As Integer = 69
Public Const ColCode As Integer = 70

Public Const RowValuesStart As Integer = 10
Public Const RowValuesEnd As Integer = 29
Public Const RowLA As Integer = 9
Public Const RowLAgroup As Integer = 8
Public Const RowLAtext As Integer = 1

Public Const ColPers As Integer = 1
Public Const ColFunktion As Integer = 2
Public Const ColSoll As Integer = 5
Public Const ColIst As Integer = 6
Public Const ColLAstart As Integer = 9
Public Const ColLAend As Integer = 28
Attribute VB_Name = "modClass"
Option Explicit

Public refSBO As clsSBO
Public refRap As clsRapport
Attribute VB_Name = "modPublic"
Option Explicit

Public CurStammIndex As Long

Public curRs As ADODB.Recordset
Public RsLief As ADODB.Recordset

Public bVorgFilled As Boolean

Public tRow As Integer
Public tCol As Integer
Public bInv As Boolean
Public bShowAll As Boolean

Public bNotCreated As Boolean
Public bNotSaved As Boolean
Public bChangingRapNr As Boolean
Public bOpeningRap As Boolean
Public bExported As Boolean

Public bPersVisible As Boolean
Public bInvVisible As Boolean
Public bMatVisible As Boolean

Public CurRegie() As String
Public arrVorgText() As String
Public arrVorg() As String

Public Sub UnmakeRegie(iRow As Long)
  Range(Cells(iRow, modCells.ColVorgang), Cells(iRow, modCells.ColArbeitsbeschr)).Interior.ColorIndex = xlNone
  Range(Cells(iRow, modCells.ColPstart), Cells(iRow, modCells.ColPend)).Interior.ColorIndex = xlNone
  Range(Cells(iRow, modCells.ColIstart), Cells(iRow, modCells.ColIend)).Interior.ColorIndex = xlNone
  Range(Cells(iRow, modCells.ColMstart), Cells(iRow, modCells.ColMend)).Interior.ColorIndex = xlNone
End Sub

Public Sub MakeRegie(iRow As Long)
  Range(Cells(iRow, modCells.ColVorgang), Cells(iRow, modCells.ColArbeitsbeschr)).Interior.ColorIndex = 40
  Range(Cells(iRow, modCells.ColPstart), Cells(iRow, modCells.ColPend)).Interior.ColorIndex = 40
  Range(Cells(iRow, modCells.ColIstart), Cells(iRow, modCells.ColIend)).Interior.ColorIndex = 40
  Range(Cells(iRow, modCells.ColMstart), Cells(iRow, modCells.ColMend)).Interior.ColorIndex = 40
End Sub

Public Sub ShowLS()
Dim iRow As Integer
Dim iCol As Integer

  If ActiveCell.Column >= modCells.ColMstart And ActiveCell.Column <= modCells.ColMend Then
     If Cells(modCells.RowM, ActiveCell.Column) <> "" Then
        iRow = ActiveCell.Row
        iCol = ActiveCell.Column
    
        Application.EnableEvents = False
        Cells(modCells.RowLsNrM, ActiveCell.Column).Select
        Application.EnableEvents = True
        frmLS.Show
        
        Range(Cells(iRow, iCol), Cells(iRow, iCol)).Select
     End If
  End If
End Sub


INQUEST-PP=macro
