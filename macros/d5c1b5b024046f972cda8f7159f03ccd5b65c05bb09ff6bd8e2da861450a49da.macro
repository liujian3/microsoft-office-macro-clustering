Attribute VB_Name = "Analysis"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Private Sub Worksheet_Activate()
If ThisWorkbook.bIsSaving Then Exit Sub
Range("A1").Select
End Sub
Attribute VB_Name = "Disclosures"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Private Sub Worksheet_Activate()
If ThisWorkbook.bIsSaving Then Exit Sub
Range("A1").Select
End Sub
Attribute VB_Name = "EditorialMacros"
Option Explicit

Public Sub InitForEditorial()
  '
  ' Code for editorial special setups that need to be called
  '  after saving or on worksheet initialization.
  '
End Sub

Public Sub Workbook_BeforeClose_Editorial()
  '
  ' Code for editorial special setups that need to be called
  '  before close.
  '
End Sub

Attribute VB_Name = "EditorialMacros_Deactivate"
Option Explicit

Public Sub Workbook_Deactivate_Editorial()
  '
  ' Code for editorial special setups that need to be called
  '  when leaving the workbook without closing it. This, will
  '  also run when closing workbook.
  '
End Sub

Attribute VB_Name = "InputSheet"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Control = "clear_button, 14, 0, MSForms, CommandButton"
Attribute VB_Control = "rollfwd_button, 13, 1, MSForms, CommandButton"
Private Sub clear_button_Click()
Clear
End Sub

Private Sub rollfwd_button_Click()
Rollforward
End Sub

Private Sub Worksheet_Activate()
If ThisWorkbook.bIsSaving Then Exit Sub
Range("A1").Select
End Sub

Attribute VB_Name = "Module1"
Sub Clear()
'
' clear Macro
' Macro recorded 5/21/98 by Practitioners Publishing Company
'
'
    ans = MsgBox("Are you sure you want to clear all amounts?", vbYesNo, "PPC's Workpapers")
        If ans = vbNo Then
        Exit Sub
        End If
    
    Application.ScreenUpdating = False
    InputSheet.Select
    Range("Input_clear").ClearContents
    Range("Analysis_clear").ClearContents
    Range("Disclosure_Clear").ClearContents
    Range("Year_end").Value = "=PPC_GetBalanceSheetDate()"
    Range("Client").Value = "=PPC_GetClientName()"
    Application.ActiveWorkbook.CustomDocumentProperties("PPC_Template_Client_Name") = "[Client Name]"
    Application.ActiveWorkbook.CustomDocumentProperties("PPC_Template_Engagement_Date") = ""
    Application.ActiveWorkbook.ActiveSheet.EnableCalculation = False
    Application.ActiveWorkbook.ActiveSheet.EnableCalculation = True
    Range("Input").Select
    Application.ScreenUpdating = True
End Sub
Attribute VB_Name = "Module2"
Option Explicit
Sub Rollforward()
' Rollforward Macro

    Dim Msg, Style, TITLE, Response
    Dim currentdate As Date
    Dim cell As Range
    Dim newdate As Date
    Beep
    Msg = "Prior period amounts will be replaced with the later period amounts. Do you want to continue?"   ' Define message.
    Style = vbOKCancel + vbQuestion + vbDefaultButton1 ' Define buttons.
    TITLE = "PPC's Workpapers"  ' Define title.
    Response = MsgBox(Msg, Style, TITLE)
    If Response = vbCancel Then    ' User chose Cancel.
        GoTo Quit
    End If
    Application.ScreenUpdating = False
    Disclosures.Select
        Range("RollDisclosuresFrom").Select
        Application.CutCopyMode = False
        Selection.Copy
        Range("RollDisclosuresTo").Select
        Selection.PasteSpecial Paste:=xlValues, Operation:=xlNone, SkipBlanks:= _
            False, Transpose:=False
        Range("ThereafterClear").ClearContents
        Range("Disclosures").Select
    
    InputSheet.Select
    Range("cy_balance").Select
    Application.CutCopyMode = False
    Selection.Copy
    Range("py_balance").Select
    Selection.PasteSpecial Paste:=xlValues, Operation:=xlNone, SkipBlanks:= _
        False, Transpose:=False
    
    For Each cell In Range("py_balance")
        If cell.Value = 0 Or cell.Value = "" Then
            cell.ClearContents
        End If
    Next cell
    
    Range("rollforward_clear").ClearContents
    Range("year_end").Value = "=PPC_GetBalanceSheetDate()"
    Application.ActiveWorkbook.CustomDocumentProperties("PPC_Template_Engagement_Date") = ""
    Application.ActiveWorkbook.ActiveSheet.EnableCalculation = False
    Application.ActiveWorkbook.ActiveSheet.EnableCalculation = True
    Range("analysis_clear").ClearContents
'    Range("disclosure_clear").ClearContents
    InputSheet.Range("input").Select
    Application.ScreenUpdating = True
Exit Sub
Quit:
End Sub

Attribute VB_Name = "PPC_CodeModule"
Public Sub MacroCheck()
'Do nothing. This sub will be called from .NET code to check macro is enabled or not
End Sub


Public Function PPC_GetClientName()
  PPC_GetClientName = Application.ActiveWorkbook.CustomDocumentProperties("PPC_Template_Client_Name")
End Function

Public Function PPC_GetBalanceSheetDate()
  PPC_GetBalanceSheetDate = Application.ActiveWorkbook.CustomDocumentProperties("PPC_Template_Engagement_Date")
End Function

Attribute VB_Name = "ThisWorkbook"
Attribute VB_Base = "0{00020819-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Option Explicit

'
' This code is protected and passworded when complete.
'

Private Const XL4MACRO As String = "PPCSecurityMacro"
Private Const INFORMATION As String = "INFORMATION"

Private Const bIsIDxR As Boolean = False        ' Set True if Interactive Disclosure Library
#Const IDxR = 0                                 ' Set 1 if Interactive Disclosure Library

      ' Declare security class

Private Sub Workbook_Activate()

  
  InitForEditorial
  
  On Error GoTo 0
End Sub

Private Sub Workbook_BeforeClose(Cancel As Boolean)
  Workbook_BeforeClose_Editorial
End Sub



Public Function bIsSaving() As Boolean
  bIsSaving = False
End Function



INQUEST-PP=macro
