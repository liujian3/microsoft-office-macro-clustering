Attribute VB_Name = "Module1"
Sub Add_interface()
'
' Add_interface Macro
'

'
      Sheets("Application Interfaces").Select
      Range("A5").Select
      ' Set Do loop to stop when an empty cell is reached.
      Do Until IsEmpty(ActiveCell)
            ' Grab our interface Value and store in memorey
            InterfaceVal = ActiveCell.Value
            ' Mark our current Cell value on the Interfaces Sheet
            Set currCell = ActiveCell
            ' Select the references sheet
            Sheets("References").Select
            ' Paste in our interface name
            Range("B26").Value = "Interface: " & InterfaceVal
            ' Select the range we want to copy
            Range("A26:K34").Select
            ' Copy
            Selection.Copy
            ' Select the paste destination
            Sheets("Threats").Select
            ' Select Row B, 4 rows below the first unused cell
            Range("B" & Rows.Count).End(xlUp).Offset(4).Select
            ' Paste the data
            ActiveSheet.Paste
            ' Return to our Interface Sheet
            Sheets("Application Interfaces").Select
            ' Select our original active cell
            currCell.Activate
         ' Step down 1 row from present location.
         ActiveCell.Offset(1, 0).Select
      Loop
      ' Finish on our Threats Sheet
      Sheets("Threats").Select
End Sub

Attribute VB_Name = "Module2"
Sub Radar()
Attribute Radar.VB_ProcData.VB_Invoke_Func = " \n14"
'
Dim mySheet As Worksheet, myOtherSheet As Worksheet, myBook As Workbook 'Define your workbooks and worksheets as variables
Set myBook = Excel.ActiveWorkbook
Set mySheet = myBook.Sheets("Threats")
Set myOtherSheet = myBook.Sheets("Threat Chart")

Dim i As Integer, j As Integer 'Define a couple integer variables for counting

j = 7 'This variable will keep track of which row we're on in Sheet2 (I'm assuming you want to start on line 28)
For i = 5 To 100 'This is the beginning the the loop which will repeat from 5 to 100 . . .
   If mySheet.Cells(i, 11).Value <> "" Then ' . . . for each digit, it will check if the cell's value is blank. If it isn't then it will . . .
      myOtherSheet.Cells(j, 2).Value = mySheet.Cells(i, 11).Value ' . . . Copy that value into the cell on Sheet2 in the row specified by our "j" variable.
      myOtherSheet.Cells(j, 3).Value = mySheet.Cells(i, 12).Value ' . . . Copy that value into the cell on Sheet2 in the row specified by our "j" variable.
      j = j + 1 'Then we add one to the "j" variable so the next time it copies, we will be on the next available row in Sheet2.
   End If
Next i 'This triggers the end of the loop and moves on to the next value of "i".

Dim rng As Range
Dim cht As Object
LastRow = ActiveSheet.Cells(Rows.Count, "B").End(xlUp).Row
'Your data range for the chart
  Set rng = ActiveSheet.Range(Cells(7, 2), Cells(LastRow, 3))

'Create a chart
  Set cht = ActiveSheet.Shapes.AddChart
'Determine the chart type
  cht.Chart.ChartType = xlRadarMarkers
    'Give chart some data
  cht.Chart.SetSourceData Source:=rng
With cht.Chart
    .HasTitle = True
    .ChartTitle.Text = "Threat Breakdown"
    .Axes(xlValue).MaximumScale = 10
    .SeriesCollection(1).Name = "DREAD Score"
    .Parent.Width = 8 * 72
    .Parent.Height = 6 * 72
    .Parent.Top = 100
    .Parent.Left = 275
End With


myRange = "C7:C" & (j - 1)
myOtherSheet.Cells(6, 4).Value = "Average Score:"
myOtherSheet.Cells(6, 5).Value = "=AVERAGE(" & myRange & ")"
    
End Sub
Attribute VB_Name = "Sheet1"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Sheet2"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Sheet3"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Sheet4"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Sheet5"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Sheet6"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "ThisWorkbook"
Attribute VB_Base = "0{00020819-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True


INQUEST-PP=macro
