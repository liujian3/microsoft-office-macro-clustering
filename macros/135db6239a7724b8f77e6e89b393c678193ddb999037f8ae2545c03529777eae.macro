Attribute VB_Name = "Module1"
Option Explicit

'|fffd||fffd||fffd||fffd||fffd||fffd| |fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
Public ParamName() As String
'|fffd||fffd||fffd|c|fffd||fffd| |fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
Public ParamValue() As String
'|fffd||fffd||fffd||fffd||fffd||fffd| |fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|.
Public SQLParams() As String
Public sDSN As String, sUserName As String, sUserPass As String, sSQLParamsString As String, sProcName As String
Public Answer As Long
'|fffd||fffd||fffd||fffd||fffd||fffd| |fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|.
Public nTypeParams() As Integer

Public bOkConnect As Boolean, bCloseConnect As Boolean, bUser As Boolean, bOkFromFile As Boolean, bIsExistInDOC As Boolean
Public cnASystem As ADODB.Connection
Public ConnectStr As String
Public rstASystem As ADODB.Recordset


'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
Public Const PE_PF_NUMBER As Integer = 0
Public Const PE_PF_CURRENCY As Integer = 1
Public Const PE_PF_BOOLEAN As Integer = 2
Public Const PE_PF_DATE As Integer = 3
Public Const PE_PF_STRING As Integer = 4
Public Const PE_PF_DATETIME As Integer = 5

Public Const PROC_NAME As String = "proc_rpt_wf_oper_select4office"
Public FieldNameArray As Variant
Public sParamNameInDOC As Variant
Public nParamTypeInDoc As Variant
Public sFieldNameParamArray As Variant
Public sAppPath As String

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd|, |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd| |fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd|, |fffd||fffd| |fffd||fffd||fffd| |fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| sql
Public sBillVATType As String

Public Sub SetFieldNameArray()
    FieldNameArray = Array("AS_NATIONAL_CURR_ID", "AS_OWN_ENTRPR_NAME", "AS_OWN_ENTRP_OKPO", "AS_OWN_ENTRPR_OFFICIAL_NAME", _
            "AS_OWN_ENTRPR_ADDRESS", "AS_OWN_ENTERPR_OKDP", "AS_OWN_ENTRPR_PHONE", "AS_OWN_ENTRPR_FAX", "AS_WF_OPER_DATE", _
            "AS_WF_FLAGS", "AS_WF_OPER_NUM", "AS_WF_OPER_CURR_ID", "AS_WF_OPER_CURR_ABBR", "AS_SUPPLIER_NAME", _
            "AS_SUPPLIER_ADDRESS", "AS_SUPPLIER_OKPO", "AS_SUPPLIER_OKDP", "AS_SUPPLIER_PHONE", "AS_SUPPLIER_FAX", _
            "AS_SUPPLIER_OFFICIAL_NAME", "AS_SUPPLIER_ACC_NUM", "AS_SUPPLIER_ACC_CORR_NUM", "AS_SUPPLIER_ACC_BIK", _
            "AS_SUPPLIER_ACC_BANK_NAME", "AS_PAYER_NAME", "AS_PAYER_ADDRESS", "AS_PAYER_OKPO", "AS_PAYER_OKDP", _
            "AS_PAYER_PHONE", "AS_PAYER_FAX", "AS_PAYER_OFFICIAL_NAME", "AS_PAYER_ACC_NUM", "AS_PAYER_ACC_CORR_NUM", _
            "AS_PAYER_ACC_BIK", "AS_PAYER_ACC_BANK_NAME", "AS_PECIPIENT_NAME", "AS_RECIPIENT_ADDRESS", "AS_RECIPIENT_OKPO", _
            "AS_RECIPIENT_OKDP", "AS_RECIPIENT_PHONE", "AS_RECIPIENT_FAX", "AS_RECIPIENT_OFFICIAL_NAME", "AS_RECIPIENT_ACC_NUM", _
            "AS_RECIPIENT_ACC_CORR_NUM", "AS_RECIPIENT_ACC_BIK", "AS_RECIPIENT_ACC_BANK_NAME", "AS_SENDER_SUBDIV_NAME", _
            "AS_RECIPIENT_SUBDIV_NAME", "AS_OUR_MOL", "AS_OUTER_MOL", "AS_SOURCE_SUBDIV_NAME", "AS_PROXY_NUM", "AS_PROXY_DATE", _
            "AS_REASON", "AS_RECIPIENT_FACT_ADDRESS", "AS_SUPPLIER_INN", "AS_SUPPLIER_KPP", "AS_PAYER_INN", "AS_PAYER_KPP", _
            "AS_OPTION_VALUE2", "AS_OPTION_VALUE2_EXISTS", "AS_OPTION_VALUE3", "AS_OPTION_VALUE3_EXISTS", "AS_OPTION_VALUE4", "AS_OPTION_VALUE4_EXISTS", _
            "AS_OPTION_VALUE5", "AS_OPTION_VALUE5_EXISTS", "AS_OPTION_VALUE6", "AS_OPTION_VALUE6_EXISTS", "AS_OPTION_VALUE1", "AS_OPTION_VALUE1_EXISTS", _
            "AS_SUPPLIER_FACT_ADDRESS", "AS_PAYER_FACT_ADDRESS", "AS_MANAGER_NAME", "AS_RECIPIENT_INN", "AS_SUPPLIER_MBKFIO", _
            "AS_OWN_ENTRPR_CHIEF_FIO", "AS_OWN_ENTRPR_INN", "AS_OWN_ENTRPR_KPP", "AS_RECIPIENT_KPP", "AS_SUBDIVISION_NAME", _
            "AS_SUPPLIER_CHIEF_FIO", "AS_OUR_MOL_POST", "AS_OUTER_MOL_POST", "AS_WF_OPER_NOTE", "AS_COMMON_FLAGS", "AS_DEST_SUBDIV_NAME", _
            "AS_SUPPLIER_OFFICIAL_SHORT_NAME", "AS_SUPPLIER_OGRN", "AS_WF_OPER_CLS_ID", _
            "AS_OPTIONVALUE1", "AS_OPTIONVALUE2", "AS_OPTIONVALUE3", "AS_OPTIONVALUE4", "AS_OPTIONVALUE5", "AS_OPTIONVALUE6", _
            "AS_CUSTOMER_OFFICIAL_NAME", "AS_CONTACT_PERSON_EMAIL", "AS_WF_CONTRACT_NUM", "AS_OWN_ENTERPR_OFFICIAL_SHORT_NAME", "AS_PAYMENT_SUMMA", _
            "AS_WF_OPER_CURR_SUM_ROUND", "AS_OWN_ENTERP_MBK_FIO", "AS_PAYER_OFFICIAL_SHORT_NAME", "AS_WF_OPER_VAT_RATE", "AS_OWNER_MATERIAL_NAME", "AS_OWNER_MATERIAL_OFFICIAL_NAME", _
            "AS_CREATOR_ID", "AS_CREATOR_NAME", "AS_CREATOR_POST", "AS_CLIENT_ID", "AS_DOC_ARCHIVE_PATH")
End Sub
Public Sub SetParamNameArray()
    sParamNameInDOC = Array("@nWFOperID", "@nReportId", "@nMeasUnitID")
    nParamTypeInDoc = Array(PE_PF_NUMBER, PE_PF_NUMBER, PE_PF_NUMBER)
    sFieldNameParamArray = Array("AS_WF_OPER_ID", "AS_REPORT_ID", "AS_MEASUNIT_ID")
End Sub

Sub OpenConnectDB()
    Dim ConnectStr As String
    Dim Answer As Integer
     
    On Error GoTo Error_Connect
    
    ConnectStr = "DSN=" & sDSN & ";UID=" & sUserName & ";PWD=" & sUserPass
    
    Set cnASystem = New ADODB.Connection
    cnASystem.Provider = "MSDASQL"
    cnASystem.ConnectionString = ConnectStr
    cnASystem.CursorLocation = adUseClient
    cnASystem.Open
    bOkConnect = True
      
Error_Connect:
    If (Err.Number = -2147467259) Then
        Answer = MsgBox("|fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd|!", vbExclamation, "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd| MS SQL |fffd||fffd||fffd||fffd||fffd||fffd||fffd|")
        ElseIf (Err.Number <> 0) Then MsgBox ("|fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| - " & str(Err.Number) & Chr(13) & " |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd|: " & Err.Description)
    End If
End Sub
Public Sub CloseConnectDB()
    If (cnASystem.State = ObjectStateEnum.adStateOpen) Then cnASystem.Close
    bCloseConnect = True
End Sub

Public Sub SetParams()
    Dim i As Integer, j As Integer
    Dim sDate  As String, sTime As String, sDateTime As String
    Dim strParamValueForSQL As String

    j = 0
   
    If IsInitialArray(ParamName) Then
        For i = 0 To UBound(ParamName)
            If Left$(ParamName(i), 1) = "@" Then
                ReDim Preserve SQLParams(j)
                strParamValueForSQL = ""
            
                If nTypeParams(i) = PE_PF_STRING Then
                    strParamValueForSQL = "'" & ParamValue(i) & "'"
                    SQLParams(j) = ParamName(i) & "=" & strParamValueForSQL
                End If
                If nTypeParams(i) = PE_PF_DATE Then
                    strParamValueForSQL = Left(ParamValue(i), 4) & Mid(ParamValue(i), 5, 2) & Mid(ParamValue(i), 7, 2)
                    strParamValueForSQL = "'" & strParamValueForSQL & "'"
                    SQLParams(j) = ParamName(i) & "=" & strParamValueForSQL
                End If
                If nTypeParams(i) = PE_PF_DATETIME Then
                    sDate = ""
                    sTime = ""
                    sDate = Left(ParamValue(i), 4) & Mid(ParamValue(i), 5, 2) & Mid(ParamValue(i), 7, 2)
                    If InStr(1, ParamValue(i), ":") > 0 Then
                    '|fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd|
                        sTime = Mid(ParamValue(i), InStr(ParamValue(i), " ") + 1, Len(ParamValue(i)) - InStr(ParamValue(i), " "))
                    End If
                    sDateTime = sDate & IIf(sTime <> "", " " & sTime, "")
                   
                    strParamValueForSQL = "'" & sDateTime & "'"
                    SQLParams(j) = ParamName(i) & "=" & strParamValueForSQL
                End If
                If nTypeParams(i) = PE_PF_NUMBER Or nTypeParams(i) = PE_PF_CURRENCY Then
                    SQLParams(j) = ParamName(i) & "=" & ParamValue(i)
                End If
                j = j + 1
            End If
        Next i
    End If
   
    sSQLParamsString = ""
    If IsInitialArray(SQLParams) Then
        For i = 0 To UBound(SQLParams)
            If sSQLParamsString <> "" Then sSQLParamsString = sSQLParamsString & ", "
            sSQLParamsString = sSQLParamsString & SQLParams(i)
        Next i
    End If
End Sub

Public Sub CheckParam(strParamName As String)
    Dim i As Integer
   
    bIsExistInDOC = False
    If IsInitialArray(sParamNameInDOC) = False Then Exit Sub
    For i = 0 To UBound(sParamNameInDOC)
        If sParamNameInDOC(i) = strParamName Then
            bIsExistInDOC = True
            Exit Sub
        End If
    Next i
End Sub
Public Sub ExecStoredProcedure()
    Dim sSQL As String, sText As String
    Dim RowAffected As Long
    Dim i As Integer
    '|fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd| |fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd| CustomDocumentProperties
    Dim objDP As DocumentProperty
  
    On Error GoTo Error_Report
  
    sProcName = PROC_NAME
  
    If Not (bUser) Then Exit Sub
  
    Application.StatusBar = "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd| SQL Server"
    Call OpenConnectDB

    '|fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| SQL |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
    sSQL = "exec " & sProcName & " " & sSQLParamsString
    cnASystem.CommandTimeout = 10000
    Set rstASystem = cnASystem.Execute(sSQL, RowAffected, CommandTypeEnum.adCmdText)
   
    If RecordsetIsEmpty(rstASystem) = False Then
        SetFieldNameArray
    
        If IsInitialArray(FieldNameArray) Then
            For Each objDP In ThisDocument.CustomDocumentProperties
                For i = 0 To UBound(FieldNameArray)
                    If objDP.Name = FieldNameArray(i) Then
                        If Not IsNull(rstASystem.Fields(i).Value) Then
                            objDP.Value = CStr(rstASystem.Fields(i).Value)
                        Else
                            objDP.Value = ""
                        End If
                        Exit For
                    End If
                Next i
            Next objDP
        End If
        
        ThisDocument.Fields.Update
    End If
    
    Call MoreActions
    Call CloseConnectDB
Error_Report:
    If (Err.Number = -2147217900) Then
        sText = "|fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd|." & Chr(13) & _
             "|fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| " & sProcName & Chr(13) & _
             "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd| |fffd||fffd| ASystem |fffd||fffd||fffd| " & Chr(13) & _
             "|fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|, |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd| ASystem" & Chr(13) & _
             " " & Chr(13) & _
             "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| support@monorhythm.ru" & Chr(13) & _
             " " & Chr(13) & _
             "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd| SQL |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| " & Chr(13) & _
             "|fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| CTRL + SHIFT + T"
        Answer = MsgBox(sText, vbExclamation, "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd| ASystem.")
    ElseIf (Err.Number <> 0) Then MsgBox ("|fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| - " & str(Err.Number) & Chr(13) & " |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd|: " & Err.Description)
    End If
 End Sub
 
Public Sub MoreActions()
    GetOptionRptSendPDF
    CreateWfInvTable
End Sub
Public Sub ResetUserPass()
    bUser = False
    sUserName = ""
    sUserPass = ""
    sDSN = ""
End Sub
'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd|.
'|fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd| |fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|, |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd| 'AS', |fffd| |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd|. |fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| FieldNameArray, |fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| - |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|, |fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| (|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|, |fffd||fffd||fffd||fffd| |fffd||fffd|
'|fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|) |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|.
'|fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd|, |fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd|: |fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| SetFieldNameArray |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd|,
'|fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| MakeField |fffd| |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd| |fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|!!!
Public Sub MakeField()
    Dim objDP As DocumentProperty
    Dim i As Integer
    
    For Each objDP In ThisDocument.CustomDocumentProperties
        If Mid(objDP.Name, 1, 2) = "AS" Then objDP.Delete
    Next objDP
    SetFieldNameArray
    If IsInitialArray(FieldNameArray) Then
        For i = 0 To UBound(FieldNameArray)
            Set objDP = ThisDocument.CustomDocumentProperties.Add(Name:=FieldNameArray(i), LinkToContent:=False, Type:=msoPropertyTypeString, Value:=FieldNameArray(i))
            'objDP.Name = FieldNameArray(i)
            'objDP.Value = rstASystem.Fields(i).Value
            'objDP.Value = FieldNameArray(i)
        Next i
    End If
    '|fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
    SetParamNameArray
    If IsInitialArray(sFieldNameParamArray) Then
        For i = 0 To UBound(sFieldNameParamArray)
            Set objDP = ThisDocument.CustomDocumentProperties.Add(Name:=sFieldNameParamArray(i), LinkToContent:=False, Type:=msoPropertyTypeString, Value:=sFieldNameParamArray(i))
        Next i
    End If
End Sub
'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| true, |fffd||fffd||fffd||fffd| recordset |fffd||fffd||fffd||fffd||fffd||fffd| (|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|)
Public Function RecordsetIsClosed(rstRecordset As Recordset)
    If rstRecordset.State = adStateClosed Then
        RecordsetIsClosed = True
    Else
        RecordsetIsClosed = False
    End If
End Function
'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| true, |fffd||fffd||fffd||fffd| recordset |fffd||fffd||fffd||fffd||fffd||fffd| (|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|) |fffd||fffd||fffd|
'|fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd|
Public Function RecordsetIsEmpty(rstRecordset As Recordset)
    If RecordsetIsClosed(rstRecordset) Then
        RecordsetIsEmpty = True
    Else
        If rstRecordset.BOF = True And rstRecordset.BOF = True Then
            RecordsetIsEmpty = True
        Else
            RecordsetIsEmpty = False
        End If
    End If
End Function
Public Sub SetWindowCaption(strTitle As String)
    ActiveWindow.Caption = strTitle
End Sub

Public Sub SetVarFromFile()
    Dim i As Integer
    
    If IsInitialArray(ParamName) = False Then Exit Sub
    For i = 0 To UBound(ParamName)
        If ParamName(i) = "dsn" Then sDSN = ParamValue(i)
        If ParamName(i) = "user" Then sUserName = ParamValue(i)
        If ParamName(i) = "password" Then sUserPass = ParamValue(i)
        If ParamName(i) = "app-path" Then sAppPath = ParamValue(i)
    Next i
    If sUserName <> "" Then bUser = True
End Sub
Public Function IsInitialArray(arArray As Variant)
    IsInitialArray = False
    On Error GoTo Error
    If LBound(arArray) <= UBound(arArray) Then IsInitialArray = True
Error:
End Function

Public Function GetParamValue(strParamName As String) As String
    Dim i As Integer
    
    For i = 0 To UBound(ParamName, 1)
        If ParamName(i) = strParamName Then
            GetParamValue = ParamValue(i)
            Exit For
        End If
    Next i
End Function
Public Sub SetFieldParamValue(iParamNum As Integer)
    Dim i As Integer
    Dim objDP As DocumentProperty

    For i = 0 To UBound(sParamNameInDOC)
        If sParamNameInDOC(i) = ParamName(iParamNum) Then
            For Each objDP In ThisDocument.CustomDocumentProperties
                If objDP.Name = sFieldNameParamArray(i) Then
                    objDP.Value = ParamValue(iParamNum)
                    Exit For
                End If
            Next objDP
        End If
    Next i
End Sub
Attribute VB_Name = "Module2"
Option Explicit

'|fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd| PROC_NAME_WF_OPER_INV_SELECT
Public iIdWfOperationInvoice As Integer
Public iObjectId As Integer
Public iObjectType As Integer
Public iObjectName As Integer
Public iTmcNomNum As Integer
Public iMeasunitName As Integer
Public iMeasunitPrec As Integer
Public iMeasunitOkeiCode As Integer
Public iAmount As Integer
Public iPrice As Integer
Public iSumma As Integer
Public iVatRate As Integer
Public iVatSumma As Integer
Public iFullSumma As Integer
Public iAuxPropvalues As Integer
Public iOrderNum As Integer
Public iEquipName As Integer
Public iPackingType As Integer
Public iBundleAmount As Integer
Public iAmountInOneBundle As Integer
Public iParentDocNum As Integer
Public iSenderSubdivName As Integer
Public iRecipientSubdivName As Integer
Public iOrders As Integer
Public iPlanDeliveryTime As Integer

Public Const BOOKMARK_WF_OPER_INV As String = "BookmarkWfOperInv"
Public Const BOOKMARK_WF_OPER_INV_TOTAL As String = "BookmarkWfOperInvTotal"
Public Const BOOKMARK_SUM2WORD As String = "BookmarkSum2Word"

Public Const PROC_NAME_WF_OPER_INV_SELECT As String = "proc_rpt_wf_oper_inv_select"
Public Const PROC_GET_SUM_IN_WORD As String = "proc_rpt_sum2word"


Public rstASystem1 As ADODB.Recordset

Public Sub CreateWfInvTable()
    '|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
    Dim sWfOperId As String, sReportId As String, sMeasunitId As String
    Dim sSQL As String
    Dim iAnswer As Integer
    Dim iBillVATType As Integer
    
    'iAnswer = InputBox("|fffd||fffd||fffd||fffd||fffd||fffd||fffd| 1 (|fffd| |fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|), 2 (|fffd||fffd||fffd| |fffd||fffd||fffd|) |fffd||fffd||fffd| 3 (|fffd| |fffd||fffd||fffd|)", , "1")
    If sBillVATType = "" Then
        iBillVATType = 1
    Else
        iBillVATType = CInt(sBillVATType)
        Select Case iBillVATType
            Case 0
                iBillVATType = 3
            Case 1
                iBillVATType = 2
            Case 2
                iBillVATType = 1
        End Select
    End If
    
    '|fffd||fffd||fffd| |fffd||fffd||fffd| |fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd|, |fffd||fffd| |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
    sWfOperId = GetParamValue("@nWFOperID")
    sReportId = GetParamValue("@nReportId")
    sMeasunitId = GetParamValue("@nMeasUnitID")
    
    sSQL = "exec " & PROC_NAME_WF_OPER_INV_SELECT & " " & sWfOperId & ", " & sReportId & ", " & sMeasunitId
    cnASystem.CommandTimeout = 10000
    Set rstASystem = cnASystem.Execute(sSQL, , CursorTypeEnum.adOpenKeyset) ' + CommandTypeEnum.adCmdText)
    
    If RecordsetIsEmpty(rstASystem) = True Then Exit Sub
    GiveNumSqlRecordset
    CreateTable iBillVATType, True
End Sub

Public Sub CreateTable(iTypeInvTable As Integer, Optional bWithoutNds As Boolean = False)
'    iTypeInvTable: |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd|
'1
'    |fffd||fffd||fffd||fffd| |fffd||fffd||fffd| |fffd||fffd||fffd| ------- |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd| |fffd||fffd||fffd| ------- |fffd||fffd||fffd| ----------------- |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd| |fffd||fffd||fffd|
'    --------------------------------------------------------------------
'                                                   |fffd||fffd||fffd||fffd||fffd| --------------- |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd| |fffd||fffd||fffd|
'                                                   |fffd| |fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd|------ |fffd||fffd||fffd|
'                                                   |fffd||fffd||fffd||fffd||fffd| |fffd| |fffd||fffd||fffd||fffd||fffd||fffd| ------ |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd| |fffd||fffd||fffd|
'
'2
'    |fffd||fffd||fffd||fffd| |fffd||fffd||fffd| |fffd||fffd||fffd| ------- |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd| |fffd||fffd||fffd|
'    --------------------------------------
'    |fffd||fffd||fffd||fffd||fffd| -------------- |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd| |fffd||fffd||fffd|
'    |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd| ---------- |fffd||fffd||fffd|
'    |fffd||fffd||fffd||fffd||fffd| |fffd| |fffd||fffd||fffd||fffd||fffd||fffd| ----- |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd| |fffd||fffd||fffd|
'
'
'3
'    |fffd||fffd||fffd||fffd| |fffd| |fffd||fffd||fffd| --------- |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd| |fffd||fffd||fffd|
'    --------------------------------------
'    |fffd||fffd||fffd||fffd||fffd| -------------- |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd| |fffd||fffd||fffd|
'    |fffd| |fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd|----- |fffd||fffd||fffd|
'    |fffd||fffd||fffd||fffd||fffd| |fffd| |fffd||fffd||fffd||fffd||fffd||fffd| ----- |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd| |fffd||fffd||fffd|

    Dim lRowTable As Long
    Dim lRowCount As Long
    Dim tTable As Table
    Dim rRange As Range
    Dim bFirstRow As Boolean
    Dim iCol As Integer, iNextGroupNum As Integer, iColCount As Integer
    Dim dCost As Double, dTotalNds As Double, dTotalSumma As Double, dPrice As Double, dTotalFullSumma As Double
    Dim strFormatQty As String
    Dim iRecordPosition As Integer
    Dim dLastColumnWidth As Double
    Dim sCurrAbbr As String, iCurrId As Integer
    Dim dTableWidth As Double
    Dim tTable1 As Table, dDifference As Double
    
    '|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd|
    If ThisDocument.Bookmarks.Exists(BOOKMARK_WF_OPER_INV) = False Then Exit Sub
    Set rRange = ThisDocument.Range(ThisDocument.Bookmarks(BOOKMARK_WF_OPER_INV).Start, ThisDocument.Bookmarks(BOOKMARK_WF_OPER_INV).End)
    
    Select Case iTypeInvTable
        Case 1
            iColCount = 8
        Case 2
            iColCount = 6
        Case 3
            iColCount = 6
    End Select
    
    Set tTable = ThisDocument.Tables.Add(rRange, 1, iColCount, , AutoFitBehavior:=wdAutoFitContent)

    lRowTable = 2
    bFirstRow = False
    rstASystem.MoveFirst
    
    '|fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd|
    With tTable
        iCol = 1
        .Cell(1, iCol).Range.InsertAfter "|fffd|"
        iCol = iCol + 1
        .Cell(1, iCol).Range.InsertAfter "|fffd||fffd||fffd||fffd||fffd||fffd| (|fffd||fffd||fffd||fffd||fffd||fffd|, |fffd||fffd||fffd||fffd||fffd||fffd|)"
        iCol = iCol + 1
        .Cell(1, iCol).Range.InsertAfter "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|"
        iCol = iCol + 1
        .Cell(1, iCol).Range.InsertAfter "|fffd||fffd|. |fffd||fffd||fffd|."
        iCol = iCol + 1
        Select Case iTypeInvTable
            Case 1
                .Cell(1, iCol).Range.InsertAfter "|fffd||fffd||fffd||fffd|"
                iCol = iCol + 1
                .Cell(1, iCol).Range.InsertAfter "|fffd||fffd||fffd||fffd||fffd|"
                iCol = iCol + 1
                .Cell(1, iCol).Range.InsertAfter "|fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd|"
                iCol = iCol + 1
                .Cell(1, iCol).Range.InsertAfter "|fffd||fffd||fffd||fffd||fffd| |fffd| |fffd||fffd||fffd|"
                iCol = iCol + 1
            Case 2
                .Cell(1, iCol).Range.InsertAfter "|fffd||fffd||fffd||fffd|"
                iCol = iCol + 1
                .Cell(1, iCol).Range.InsertAfter "|fffd||fffd||fffd||fffd||fffd|"
                iCol = iCol + 1
            Case 3
                .Cell(1, iCol).Range.InsertAfter "|fffd||fffd||fffd||fffd|"
                iCol = iCol + 1
                .Cell(1, iCol).Range.InsertAfter "|fffd||fffd||fffd||fffd||fffd|"
                iCol = iCol + 1
        End Select
    End With
 
    dTotalNds = 0
    dTotalSumma = 0
    dTotalFullSumma = 0
    iRecordPosition = 0
    
    sCurrAbbr = ThisDocument.CustomDocumentProperties.Item("AS_WF_OPER_CURR_ABBR")
    iCurrId = ThisDocument.CustomDocumentProperties.Item("AS_WF_OPER_CURR_ID")
    
    Do While rstASystem.EOF <> True
        iRecordPosition = iRecordPosition + 1
        
        If Not bFirstRow Then lRowTable = TableInsertRowBelow(tTable)
        iCol = 1
        With tTable
            .Cell(lRowTable, iCol).Range.InsertAfter iRecordPosition
            If iRecordPosition = 1 Then
                SetColumnHorizontalAlignment tTable, iCol, "Right"
            End If
            iCol = iCol + 1
            .Cell(lRowTable, iCol).Range.InsertAfter IIf(IsNull(rstASystem.Fields(iObjectName).Value), "", rstASystem.Fields(iObjectName).Value)
            If iRecordPosition = 1 Then
                SetColumnHorizontalAlignment tTable, iCol, "Left"
            End If
            iCol = iCol + 1
            .Cell(lRowTable, iCol).Range.InsertAfter IIf(IsNull(rstASystem.Fields(iAmount).Value), "", Format(rstASystem.Fields(iAmount).Value, GetStrFormatNumber(rstASystem.Fields(iMeasunitPrec).Value, False)))
            If iRecordPosition = 1 Then
                SetColumnHorizontalAlignment tTable, iCol, "Right"
            End If
            iCol = iCol + 1
            .Cell(lRowTable, iCol).Range.InsertAfter IIf(IsNull(rstASystem.Fields(iMeasunitName).Value), "", rstASystem.Fields(iMeasunitName).Value)
            If iRecordPosition = 1 Then
                SetColumnHorizontalAlignment tTable, iCol, "Left"
            End If
            iCol = iCol + 1
            
            Select Case iTypeInvTable
                Case 1
                    .Cell(lRowTable, iCol).Range.InsertAfter IIf(IsNull(rstASystem.Fields(iPrice).Value), "", Format(rstASystem.Fields(iPrice).Value, "0.00"))
                    If iRecordPosition = 1 Then
                        SetColumnHorizontalAlignment tTable, iCol, "Right"
                    End If
                    iCol = iCol + 1
                    .Cell(lRowTable, iCol).Range.InsertAfter IIf(IsNull(rstASystem.Fields(iSumma).Value), "", Format(rstASystem.Fields(iSumma).Value, "0.00"))
                    If iRecordPosition = 1 Then
                        SetColumnHorizontalAlignment tTable, iCol, "Right"
                    End If
                    iCol = iCol + 1
                    If bWithoutNds = True And (IsNull(rstASystem.Fields(iVatRate).Value) Or rstASystem.Fields(iVatRate).Value = 0) Then
                        .Cell(lRowTable, iCol).Range.InsertAfter "|fffd||fffd||fffd| |fffd||fffd||fffd|"
                    Else
                        .Cell(lRowTable, iCol).Range.InsertAfter IIf(IsNull(rstASystem.Fields(iVatSumma).Value), "", Format(rstASystem.Fields(iVatSumma).Value, "0.00"))
                    End If
                    If iRecordPosition = 1 Then
                        SetColumnHorizontalAlignment tTable, iCol, "Right"
                    End If
                    iCol = iCol + 1
                    .Cell(lRowTable, iCol).Range.InsertAfter IIf(IsNull(rstASystem.Fields(iFullSumma).Value), "", Format(rstASystem.Fields(iFullSumma).Value, "0.00"))
                    If iRecordPosition = 1 Then
                        SetColumnHorizontalAlignment tTable, iCol, "Right"
                    End If
                    iCol = iCol + 1
                Case 2
                    .Cell(lRowTable, iCol).Range.InsertAfter IIf(IsNull(rstASystem.Fields(iPrice).Value), "", Format(rstASystem.Fields(iPrice).Value, "0.00"))
                    If iRecordPosition = 1 Then
                        SetColumnHorizontalAlignment tTable, iCol, "Right"
                    End If
                    iCol = iCol + 1
                    .Cell(lRowTable, iCol).Range.InsertAfter IIf(IsNull(rstASystem.Fields(iSumma).Value), "", Format(rstASystem.Fields(iSumma).Value, "0.00"))
                    If iRecordPosition = 1 Then
                        SetColumnHorizontalAlignment tTable, iCol, "Right"
                    End If
                    iCol = iCol + 1
                Case 3
                    If CDbl(rstASystem.Fields(iAmount).Value) <> 0 And Not IsNull(rstASystem.Fields(iAmount).Value) Then
                        .Cell(lRowTable, iCol).Range.InsertAfter Format(Round(rstASystem.Fields(iFullSumma).Value / rstASystem.Fields(iAmount).Value, 2), "0.00")
                    End If
                    If iRecordPosition = 1 Then
                        SetColumnHorizontalAlignment tTable, iCol, "Right"
                    End If
                    iCol = iCol + 1
                    .Cell(lRowTable, iCol).Range.InsertAfter IIf(IsNull(rstASystem.Fields(iFullSumma).Value), "", Format(rstASystem.Fields(iFullSumma).Value, "0.00"))
                    If iRecordPosition = 1 Then
                        SetColumnHorizontalAlignment tTable, iCol, "Right"
                    End If
                    iCol = iCol + 1
            End Select
        End With
        
        dTotalNds = dTotalNds + IIf(IsNull(rstASystem.Fields(iVatSumma).Value), 0, rstASystem.Fields(iVatSumma).Value)
        dTotalSumma = dTotalSumma + IIf(IsNull(rstASystem.Fields(iSumma).Value), 0, rstASystem.Fields(iSumma).Value)
        dTotalFullSumma = dTotalFullSumma + IIf(IsNull(rstASystem.Fields(iFullSumma).Value), 0, rstASystem.Fields(iFullSumma).Value)
        
        rstASystem.MoveNext
        If bFirstRow Then bFirstRow = False
    Loop
           
    '|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd| |fffd||fffd||fffd||fffd||fffd||fffd|
    SetRowHorizontalAlignment tTable, 1, "Center"
       
    SetTableAllBorders tTable
    tTable.Rows.Alignment = wdAlignRowCenter
    tTable.Rows(1).Range.Font.Bold = True
    tTable.Range.Font.Size = 10
    
    '|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
    tTable.AutoFitBehavior wdAutoFitWindow
    tTable.AutoFitBehavior wdAutoFitContent
    tTable.PreferredWidthType = wdPreferredWidthPercent
    tTable.PreferredWidth = 100
    
    '|fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd|
'    dLastColumnWidth = tTable.Columns(tTable.Columns.Count).Width
    dTableWidth = GetTableWidth(tTable)
    
    Set tTable1 = tTable
    
    '|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| c |fffd||fffd||fffd||fffd||fffd||fffd||fffd|
    If ThisDocument.Bookmarks.Exists(BOOKMARK_WF_OPER_INV_TOTAL) = True Then
        Set rRange = ThisDocument.Range(ThisDocument.Bookmarks(BOOKMARK_WF_OPER_INV_TOTAL).Start, ThisDocument.Bookmarks(BOOKMARK_WF_OPER_INV_TOTAL).End)
        Set tTable = ThisDocument.Tables.Add(rRange, 1, 2, , AutoFitBehavior:=wdAutoFitWindow)
    
        Select Case iTypeInvTable
            Case 1
                With tTable
                    .Cell(1, 1).Range.InsertAfter "|fffd||fffd||fffd||fffd||fffd|:"
                    SetColumnHorizontalAlignment tTable, 1, "Right"
                    .Cell(1, 2).Range.InsertAfter Format(dTotalFullSumma, "0.00")
                    SetColumnHorizontalAlignment tTable, 2, "Right"
                    With tTable.Rows(1).Range.Font
                        .Bold = True
                        .Size = 10
                    End With
                    lRowTable = TableInsertRowBelow(tTable)
                    
                    .Cell(lRowTable, 1).Range.InsertAfter IIf(bWithoutNds = True And dTotalNds = 0, "", "|fffd| |fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd|:")
                    .Cell(lRowTable, 2).Range.InsertAfter IIf(bWithoutNds = True And dTotalNds = 0, "|fffd||fffd||fffd| |fffd||fffd||fffd|", Format(dTotalNds, "0.00"))
                    With tTable.Rows(lRowTable).Range.Font
                        .Bold = True
                        .Size = 10
                    End With
                    lRowTable = TableInsertRowBelow(tTable)
                    .Cell(lRowTable, 1).Range.InsertAfter "|fffd||fffd||fffd||fffd||fffd| |fffd| |fffd||fffd||fffd||fffd||fffd||fffd|:"
                    .Cell(lRowTable, 2).Range.InsertAfter Format(dTotalFullSumma, "0.00")
                    With tTable.Rows(lRowTable).Range.Font
                        .Bold = True
                        .Size = 10
                    End With
                End With
            Case 2
                With tTable
                    .Cell(1, 1).Range.InsertAfter "|fffd||fffd||fffd||fffd||fffd|:"
                    SetColumnHorizontalAlignment tTable, 1, "Right"
                    .Cell(1, 2).Range.InsertAfter Format(dTotalSumma, "0.00")
                    SetColumnHorizontalAlignment tTable, 2, "Right"
                    With tTable.Rows(1).Range.Font
                        .Bold = True
                        .Size = 10
                    End With
                    lRowTable = TableInsertRowBelow(tTable)
                    .Cell(lRowTable, 1).Range.InsertAfter IIf(bWithoutNds = True And dTotalNds = 0, "", "|fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd|:")
                    .Cell(lRowTable, 2).Range.InsertAfter IIf(bWithoutNds = True And dTotalNds = 0, "|fffd||fffd||fffd| |fffd||fffd||fffd|", Format(dTotalNds, "0.00"))
                    With tTable.Rows(lRowTable).Range.Font
                        .Bold = True
                        .Size = 10
                    End With
                    lRowTable = TableInsertRowBelow(tTable)
                    .Cell(lRowTable, 1).Range.InsertAfter "|fffd||fffd||fffd||fffd||fffd| |fffd| |fffd||fffd||fffd||fffd||fffd||fffd|:"
                    .Cell(lRowTable, 2).Range.InsertAfter Format(dTotalFullSumma, "0.00")
                    With tTable.Rows(lRowTable).Range.Font
                        .Bold = True
                        .Size = 10
                    End With
                End With
            Case 3
                With tTable
                    .Cell(1, 1).Range.InsertAfter "|fffd||fffd||fffd||fffd||fffd|:"
                    SetColumnHorizontalAlignment tTable, 1, "Right"
                    .Cell(1, 2).Range.InsertAfter Format(dTotalFullSumma, "0.00")
                    SetColumnHorizontalAlignment tTable, 2, "Right"
                    With tTable.Rows(1).Range.Font
                        .Bold = True
                        .Size = 10
                    End With
                    lRowTable = TableInsertRowBelow(tTable)
                    .Cell(lRowTable, 1).Range.InsertAfter IIf(bWithoutNds = True And dTotalNds = 0, "", "|fffd| |fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd|:")
                    .Cell(lRowTable, 2).Range.InsertAfter IIf(bWithoutNds = True And dTotalNds = 0, "|fffd||fffd||fffd| |fffd||fffd||fffd|", Format(dTotalNds, "0.00"))
                    With tTable.Rows(lRowTable).Range.Font
                        .Bold = True
                        .Size = 10
                    End With
                    lRowTable = TableInsertRowBelow(tTable)
                    .Cell(lRowTable, 1).Range.InsertAfter "|fffd||fffd||fffd||fffd||fffd| |fffd| |fffd||fffd||fffd||fffd||fffd||fffd|:"
                    .Cell(lRowTable, 2).Range.InsertAfter Format(dTotalFullSumma, "0.00")
                    With tTable.Rows(lRowTable).Range.Font
                        .Bold = True
                        .Size = 10
                    End With
                End With
            
        End Select
        
        lRowTable = TableInsertRowBelow(tTable)
        With tTable.Cell(lRowTable, 1)
            .Range.InsertAfter "|fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| " & iRecordPosition & ", |fffd||fffd| |fffd||fffd||fffd||fffd||fffd| " & _
                    Format(dTotalFullSumma, "0.00") & " " & sCurrAbbr
            .Range.ParagraphFormat.Alignment = wdAlignParagraphLeft
        End With
        
        '|fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd|
        dDifference = 5
        tTable1.Columns(2).Width = tTable1.Columns(2).Width - dDifference
        tTable1.Columns(tTable1.Columns.Count).Width = tTable1.Columns(tTable1.Columns.Count).Width + dDifference
        dLastColumnWidth = tTable1.Columns(tTable1.Columns.Count).Width
        tTable.Columns(1).Width = dTableWidth - dLastColumnWidth
        tTable.Columns(2).Width = dLastColumnWidth
    End If
    PrintSumInWord dTotalFullSumma, iCurrId
    
    ThisDocument.ActiveWindow.VerticalPercentScrolled = 0
End Sub

Public Sub GiveNumSqlRecordset()
    iIdWfOperationInvoice = 0
    iObjectId = 1
    iObjectType = 2
    iObjectName = 3
    iTmcNomNum = 4
    iMeasunitName = 5
    iMeasunitPrec = 6
    iMeasunitOkeiCode = 7
    iAmount = 8
    iPrice = 9
    iSumma = 10
    iVatRate = 11
    iVatSumma = 12
    iFullSumma = 13
    iAuxPropvalues = 14
    iOrderNum = 15
    iEquipName = 16
    iPackingType = 17
    iBundleAmount = 18
    iAmountInOneBundle = 19
    iParentDocNum = 20
    iSenderSubdivName = 21
    iRecipientSubdivName = 22
    iOrders = 23
    iPlanDeliveryTime = 24
End Sub
'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd| |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd|
Public Function TableInsertRowBelow(tTable As Table)
    Dim lRowCount As Long
    
    lRowCount = tTable.Rows.Count
    tTable.Rows(lRowCount).Select
    Selection.InsertRowsBelow
    
    TableInsertRowBelow = lRowCount + 1
End Function

Public Sub SetColumnHorizontalAlignment(tTable As Table, iColumn As Integer, sAlignment As String)
    Dim rColumnRange As Object
    Dim rCell As Object
    Dim sAlignmentConst As String
    Dim i As Integer
    
    Select Case sAlignment
        Case "Left"
            sAlignmentConst = wdAlignParagraphLeft
        Case "Right"
            sAlignmentConst = wdAlignParagraphRight
        Case "Center"
            sAlignmentConst = wdAlignParagraphCenter
    End Select
    i = 1
    Do While i <= tTable.Rows.Count
        tTable.Cell(i, iColumn).Range.ParagraphFormat.Alignment = sAlignmentConst
        i = i + 1
    Loop
End Sub
Public Sub SetRowHorizontalAlignment(tTable As Table, iRow As Integer, sAlignment As String)
    Dim sAlignmentConst As String
    Dim i As Integer
    
    Select Case sAlignment
        Case "Left"
            sAlignmentConst = wdAlignRowLeft
        Case "Right"
            sAlignmentConst = wdAlignRowRight
        Case "Center"
            sAlignmentConst = wdAlignRowCenter
    End Select
    
    i = 1
    Do While i <= tTable.Columns.Count
        tTable.Cell(iRow, i).Range.ParagraphFormat.Alignment = sAlignmentConst
        i = i + 1
    Loop
End Sub
Public Sub SetTableAllBorders(tTable As Table)
    With tTable
        With .Borders(wdBorderLeft)
            .LineStyle = wdLineStyleSingle
            .LineWidth = wdLineWidth050pt
            .Color = wdColorAutomatic
        End With
        With .Borders(wdBorderRight)
            .LineStyle = wdLineStyleSingle
            .LineWidth = wdLineWidth050pt
            .Color = wdColorAutomatic
        End With
        With .Borders(wdBorderTop)
            .LineStyle = wdLineStyleSingle
            .LineWidth = wdLineWidth050pt
            .Color = wdColorAutomatic
        End With
        With .Borders(wdBorderBottom)
            .LineStyle = wdLineStyleSingle
            .LineWidth = wdLineWidth050pt
            .Color = wdColorAutomatic
        End With
        On Error Resume Next
        With .Borders(wdBorderHorizontal)
            .LineStyle = wdLineStyleSingle
            .LineWidth = wdLineWidth050pt
            .Color = wdColorAutomatic
        End With
        With .Borders(wdBorderVertical)
            .LineStyle = wdLineStyleSingle
            .LineWidth = wdLineWidth050pt
            .Color = wdColorAutomatic
        End With
        On Error GoTo 0
    End With
End Sub

Public Sub PrintSumInWord(dSum As Double, iCurrId As Integer)
    Dim sSQL As String
    Dim rRange As Range
    
    sSQL = "exec " & PROC_GET_SUM_IN_WORD & " " & Replace(CStr(dSum), ",", ".") & ", " & iCurrId
                       
    cnASystem.CommandTimeout = 10000
    Set rstASystem1 = cnASystem.Execute(sSQL, , CursorTypeEnum.adOpenKeyset) ' + CommandTypeEnum.adCmdText)
    
    If RecordsetIsEmpty(rstASystem1) = True Then
        Exit Sub
    Else
        If Not IsNull(rstASystem1.Fields(0).Value) Then
            If ThisDocument.Bookmarks.Exists(BOOKMARK_SUM2WORD) = True Then
                Set rRange = ThisDocument.Range(ThisDocument.Bookmarks(BOOKMARK_SUM2WORD).Start, ThisDocument.Bookmarks(BOOKMARK_SUM2WORD).End)
                rRange.InsertAfter rstASystem1.Fields(0).Value
            End If
        End If
    End If
End Sub

Public Function GetTableWidth(objTable As Table)
    Dim col As Column
    
    GetTableWidth = 0
    For Each col In objTable.Columns
        GetTableWidth = GetTableWidth + col.Width
    Next col
End Function



Attribute VB_Name = "Module3"
Option Explicit

Public Declare Function SendMail Lib "ASystem.dll" Alias "__SendMail_StdCall" (ByVal to1 As String, ByVal cc As String, _
    ByVal bcc As String, _
    ByVal subject As String, ByVal body As String, ByVal files As String, _
    ByVal titles As String, ByVal flags As Long, ByVal profile As String, ByVal password As String, _
    ByVal parent As Long) As Long
    
Private Declare Function GetTempPath Lib "kernel32" Alias "GetTempPathA" _
                 (ByVal nBufferLength As Long, _
                 ByVal lpBuffer As String) As Long
                 
Private Declare Function GetTempFileName Lib "kernel32" _
         Alias "GetTempFileNameA" (ByVal lpszPath As String, _
         ByVal lpPrefixString As String, ByVal wUnique As Long, _
         ByVal lpTempFileName As String) As Long

Declare Function SetCurrentDirectory Lib "kernel32" Alias "SetCurrentDirectoryA" (ByVal lpPathName As String) As Long

Public Const TOOL_BAR_NAME As String = "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|"
Public Sub CreateToolBar()
    Dim oCurrentCustomizationContext As Object

    '|fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd| |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd|,|fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd|
    DeleteToolBar TOOL_BAR_NAME
    
    Set oCurrentCustomizationContext = Application.CustomizationContext
    Application.CustomizationContext = ThisDocument
    '|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd| |fffd||fffd||fffd||fffd||fffd||fffd|
    With CommandBars.Add(TOOL_BAR_NAME)
        With .Controls.Add(Type:=msoControlButton)
            .Caption = "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|"
            .OnAction = "SendDocToContactPerson"
            .FaceId = 279
            .TooltipText = "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|"
            .Style = msoButtonIconAndCaption
        End With
        .Position = msoBarTop
        .Visible = True
    End With
    'Application.CustomizationContext = oCurrentCustomizationContext
End Sub


Public Sub DeleteToolBarOnClose()
    DeleteToolBar TOOL_BAR_NAME
End Sub

Public Sub DeleteToolBar(strBar As String)
    On Error Resume Next
    CommandBars(strBar).Delete
    On Error GoTo 0
End Sub
Public Sub SendDocToContactPerson()
    Dim strContactEmail As String
    Dim strSubject As String
    
    strContactEmail = ThisDocument.CustomDocumentProperties.Item("AS_CONTACT_PERSON_EMAIL")
    strSubject = "|fffd||fffd||fffd||fffd|"
    If ThisDocument.CustomDocumentProperties.Item("AS_WF_OPER_NUM") <> "" Then
        strSubject = strSubject & " |fffd| " & ThisDocument.CustomDocumentProperties.Item("AS_WF_OPER_NUM")
    End If
    If ThisDocument.CustomDocumentProperties.Item("AS_WF_OPER_DATE") <> "" Then
        strSubject = strSubject & " |fffd||fffd| " & ThisDocument.CustomDocumentProperties.Item("AS_WF_OPER_DATE")
    End If
    
    SendMailWithEnclosure strContactEmail, strSubject
End Sub


Public Function GetTempDir() As String
     Dim sBuffer As String
     Dim lRetVal As Long

     sBuffer = String(255, vbNullChar)

     lRetVal = GetTempPath(Len(sBuffer), sBuffer)

     If lRetVal Then
         GetTempDir = Left$(sBuffer, lRetVal)
     End If
End Function

Public Function CreateFile(strTempPath As String)
    Dim Buffer As String * 255
    Dim Result As Long
    
    Result = GetTempFileName(strTempPath, "", 0, Buffer)
    CreateFile = Left(Buffer, InStr(1, Buffer, Chr(0)) - 1)
End Function

Public Function CheckFileName(strFileName) As String
    CheckFileName = strFileName
    CheckFileName = Replace(strFileName, "/", "_")
    CheckFileName = Replace(CheckFileName, "\", "_")
    CheckFileName = Replace(CheckFileName, "\", "_")
    CheckFileName = Replace(CheckFileName, ":", "_")
    CheckFileName = Replace(CheckFileName, "*", "_")
    CheckFileName = Replace(CheckFileName, "?", "_")
    CheckFileName = Replace(CheckFileName, ">", "_")
    CheckFileName = Replace(CheckFileName, "<", "_")
    CheckFileName = Replace(CheckFileName, "|", "_")
End Function

Attribute VB_Name = "Module4"
'|fffd||fffd||fffd||fffd||fffd||fffd|, |fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd|
Public iReportSendFormat As Integer '0 - |fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| Word, 1 - |fffd| PDF

Public Sub GetOptionRptSendPDF()
    Set rstASystem = rstASystem.NextRecordset
    
    iReportSendFormat = 0
    If Val(Application.Version) >= 12 Then
        If RecordsetIsEmpty(rstASystem) = False Then
            iReportSendFormat = IIf(IsNull(rstASystem.Fields(0).Value), 0, rstASystem.Fields(0).Value)
        End If
    End If
End Sub

Public Sub SendMailWithEnclosure(strTo1 As String, strSubject As String)
    Dim lSendMail As Long
    Dim strCurDir As String
    Dim oNewDocument As Object
    Dim rngText As Range
    Dim strTempDir As String, strTempFile As String
    Dim strFileName As String
    Dim strFileForSent As String
    
    On Error GoTo Err
    
    strCurDir = CurDir
    strTempDir = GetTempDir
    strTempFile = CreateFile(GetTempDir)
    
    Select Case iReportSendFormat
        Case 0
            Set oNewDocument = Documents.Add
            Set rngText = ThisDocument.Content
            rngText.Copy
            oNewDocument.Characters(1).Paste
            strFileForSent = Left(strTempFile, InStrRev(strTempFile, ".") - 1) & ".doc"
            oNewDocument.SaveAs strFileForSent
            oNewDocument.Close
            strFileName = CheckFileName(strSubject & ".doc")
        Case 1
            strFileForSent = Left(strTempFile, InStrRev(strTempFile, ".") - 1) & ".pdf"
            ExportToPDF ThisDocument, strFileForSent
            strFileName = CheckFileName(strSubject & ".pdf")
    End Select
    
    SetCurrentDirectory sAppPath
        
    lSendMail = SendMail(strTo1, "", "", strSubject, "", strFileForSent, strFileName, 1, "", "", 0)
    If lSendMail <> 0 Then
        MsgBox "|fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd|", vbExclamation, "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|"
    End If
    
Err:
    If Err <> 0 Then
        MsgBox "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd| " & Err.Number & Chr(10) & _
                "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd|: " & Err.Description
    End If
    SetCurrentDirectory strCurDir
    If FileExists(strTempFile) Then Kill strTempFile
    If FileExists(strFileForSent) Then Kill strFileForSent
End Sub

Public Sub ExportToPDF(objDocument As Document, strOutputFileName As String)
    objDocument.ExportAsFixedFormat strOutputFileName, wdExportFormatPDF
End Sub
Function FileExists(ByVal sFileName As String) As Boolean
    FileExists = (Dir(sFileName) <> "")
End Function

Attribute VB_Name = "Module5"
Option Explicit

Public Function GetStrFormatNumber(iDecimalNumber As Integer, Optional bIsCurrency As Boolean, Optional bIsPercent As Boolean) As String
    GetStrFormatNumber = ""
    If IsMissing(bIsCurrency) Then bIsCurrency = False
    If IsMissing(bIsPercent) Then bIsPercent = False
    
    If iDecimalNumber < 0 Then
        Exit Function
    Else
        If iDecimalNumber = 0 Then
            If bIsCurrency Then
                GetStrFormatNumber = "#,##0"
            Else
                GetStrFormatNumber = "0"
            End If
            If bIsPercent Then
                GetStrFormatNumber = GetStrFormatNumber & "%"
            End If
        Else
            If bIsCurrency Then
                GetStrFormatNumber = "#,##0." & String(iDecimalNumber, "0")
            Else
                GetStrFormatNumber = "0." & String(iDecimalNumber, "0")
            End If
            If bIsPercent Then
                GetStrFormatNumber = GetStrFormatNumber & "%"
            End If
        End If
    End If
    
End Function
Attribute VB_Name = "Module6"
Option Explicit

Public Const TOOL_BAR_SAVE_IN_ARCHIVE As String = "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd| |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|"
Sub SaveDocInArchive()
    Dim strWfNum As String, strWfDate As String, strDocName As String, strDocArchivePath As String
    Dim strFilePath As String
    
    strWfNum = ThisDocument.CustomDocumentProperties("AS_WF_OPER_NUM").Value
    strWfDate = ThisDocument.CustomDocumentProperties("AS_WF_OPER_DATE").Value
    strDocArchivePath = ThisDocument.CustomDocumentProperties("AS_DOC_ARCHIVE_PATH").Value
    
    strDocName = "|fffd||fffd||fffd||fffd|" & IIf(strWfNum <> "", " |fffd| " & strWfNum, "") & _
            IIf(strWfDate <> "", " |fffd||fffd| " & strWfDate, "")
    strDocName = CheckFileName(strDocName)
    strFilePath = strDocArchivePath & "\" & strDocName
    On Error GoTo Error
    'If Dir(strDocArchivePath, vbDirectory) <> "" Then
        With Dialogs(wdDialogFileSaveAs)
            .Name = strDocArchivePath & "\" & strDocName
            .Show
        End With
    'Else
    '    MsgBox "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| " & strDocArchivePath & " |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd|.", vbCritical, "|fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|"
    'End If
    Exit Sub
Error:
    If Err.Number = 52 Then
        MsgBox "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| " & strDocArchivePath & " |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd|.", vbCritical, "|fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|"
    Else
        MsgBox "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd| " & Err.Number & "." & Chr(10) & _
            "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd|: " & Err.Description & ".", , "|fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|"
    End If
End Sub
Public Sub CreateToolBarForSaveArchive()
    Dim oCurrentCustomizationContext As Object

    '|fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd| |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd|,|fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd|
    DeleteToolBar TOOL_BAR_SAVE_IN_ARCHIVE
    
    Set oCurrentCustomizationContext = Application.CustomizationContext
    Application.CustomizationContext = ThisDocument
    '|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd| |fffd||fffd||fffd||fffd||fffd||fffd|
    With Application.CommandBars.Add(TOOL_BAR_SAVE_IN_ARCHIVE)
        With .Controls.Add(Type:=msoControlButton)
            .Caption = "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd| |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|"
            .OnAction = "SaveDocInArchive"
            .FaceId = 271
            .TooltipText = "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd| |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|"
            .Style = msoButtonIconAndCaption
        End With
        .Position = msoBarTop
        .Visible = True
    End With
    Application.CustomizationContext = oCurrentCustomizationContext
    '|fffd||fffd||fffd||fffd||fffd||fffd|-|fffd||fffd| |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd|
    'Application.CustomizationContext = oCurrentCustomizationContext
    '|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|.
    '|fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd| |fffd||fffd||fffd| |fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
    On Error Resume Next
    CommandBars(TOOL_BAR_SAVE_IN_ARCHIVE).Visible = True
    On Error GoTo 0
End Sub

Public Sub DeleteToolBar(strBar As String)
    On Error Resume Next
    Application.CommandBars(strBar).Delete
    On Error GoTo 0
End Sub





Attribute VB_Name = "ThisDocument"
Attribute VB_Base = "1Normal.ThisDocument"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = True
Attribute VB_Customizable = True
Option Explicit

Function GetFileName() As String
    Dim sFileName As String, sFilePath As String
      
    sFilePath = Left(ThisDocument.FullName, InStr(1, ThisDocument.FullName, ThisDocument.Name) - 1)
    sFileName = Left(ThisDocument.Name, Len(ThisDocument.Name) - 4) & ".ini"
    GetFileName = sFilePath & sFileName
End Function
Function LoadTextFile(ByVal sFileName As String) As Boolean
    Dim nUnit As Integer
    Dim nNum As Long
    Dim sBuffer As String, sParam As String, sParamValue As String, sParamNameForCheck As String
    Dim vntBuf As Variant
    Dim bIsParam As Boolean, sIsSQLParam As Boolean
    
    On Error GoTo Error_File
    
    If Dir(sFileName) = "" Then
        LoadTextFile = False
        Exit Function
    End If
    nUnit = FreeFile
    Open sFileName For Input As #nUnit
    
    nNum = 0
    Do While Not EOF(nUnit)
        Line Input #nUnit, sBuffer
        vntBuf = Split(sBuffer, "")
        sParam = vntBuf(0)
        
        If InStr(1, sParam, "=") = 0 And bIsParam = True And sIsSQLParam = True Then
            ParamValue(nNum - 1) = ParamValue(nNum - 1) & vbCr & sParam
        Else
            bIsParam = False
            sIsSQLParam = False
        End If
        
        If InStr(1, sParam, "=") <> 0 Then
            sParamNameForCheck = Left(sParam, InStr(1, sParam, "=") - 1)
            sParamValue = Mid(sParam, InStr(1, sParam, "=") + 1, Len(sParam))
            
            If Left(sParamNameForCheck, 1) = "@" Then
                sIsSQLParam = True
                Call CheckParam(sParamNameForCheck)
                If bIsExistInDOC = True Then bIsParam = True
                If sParamNameForCheck = "@nBillVATType" Then sBillVATType = sParamValue
            Else
                bIsParam = True
            End If
            
            If bIsParam = True Then
                ReDim Preserve ParamName(nNum)
                ReDim Preserve ParamValue(nNum)
                ReDim Preserve nTypeParams(nNum)
                
                ParamName(nNum) = sParamNameForCheck
                ParamValue(nNum) = sParamValue
                SetFieldParamValue CInt(nNum)
                If sIsSQLParam = True Then
                    nTypeParams(nNum) = GetSQLParamType(sParamNameForCheck)
                Else
                    nTypeParams(nNum) = PE_PF_STRING
                End If
                nNum = nNum + 1
            End If
        End If
    Loop
    Close nUnit
    '|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
    Open sFileName For Output As #nUnit
    Print #nUnit, "**********"
    Close nUnit
    '|fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd|
    If Dir(sFileName) <> "" Then Kill sFileName
    
Error_File:
    If Err.Number <> 0 Then
        Select Case Err.Number    ' Evaluate error number.
            Case 54
                Answer = MsgBox("|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd| 54." & Chr(13) & _
                "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd|, |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|, |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| VBA |fffd||fffd||fffd||fffd||fffd||fffd|," & Chr(13) & _
                "|fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd|." & Chr(13) & _
                "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| " & Chr(13) & _
                "|fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|", vbExclamation, "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd| ASystem")
            Case Else
                Answer = MsgBox("|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd| " & Err.Number & Chr(13) & _
                "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| : " & Err.Description & Chr(13) & _
                "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|", vbExclamation, "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd| ASystem")
        End Select
    Else
        LoadTextFile = True
    End If
End Function
Public Sub ReadParamsFromFile()
  Dim sFullFileName As String, CellsNum As String
  Dim bOk As Boolean
      
  sFullFileName = GetFileName()
  SetParamNameArray
  bOk = LoadTextFile(sFullFileName)

  If bOk Then
     bOkFromFile = True
     Call SetParams
  End If
End Sub

Private Sub Document_Close()
    DeleteToolBarOnClose
End Sub

Private Sub Document_Open()
    Call ReadParamsFromFile
    
    If bOkFromFile Then
        SetVarFromFile
        SetWindowCaption "|fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| (MS Word)"
        Application.ScreenUpdating = False
        Call ExecStoredProcedure
        Application.ScreenUpdating = True
        CreateToolBar
        If ThisDocument.CustomDocumentProperties("AS_DOC_ARCHIVE_PATH").Value <> "" Then
            CreateToolBarForSaveArchive
        End If
        ThisDocument.Save
    End If
End Sub

Public Function GetSQLParamType(strParamName As String)
    Dim i As Integer
    
    If IsInitialArray(sParamNameInDOC) Then
        For i = 0 To UBound(sParamNameInDOC)
            If sParamNameInDOC(i) = strParamName Then
                GetSQLParamType = nParamTypeInDoc(i)
            End If
        Next i
    End If
End Function

' InQuest injected base64 decoded content
' z{Rr

INQUEST-PP=macro
