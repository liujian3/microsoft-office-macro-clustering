Attribute VB_Name = "Sheet1"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Control = "CalcItButton, 3, 0, MSForms, CommandButton"
Option Explicit
Private Sub CalcItButton_Click()
' standard step method
' based on some code in the following book:
' Hydraulics in Civil and Environmental Engineering, 2nd Ed.
' Chadwick & Morfett
' ISBN 0419181601
Dim a1 As Double, a2 As Double
Dim y1 As Double, y2 As Double
Dim e1 As Double, e2 As Double
Dim p1 As Double, p2 As Double
Dim e2g As Double
Dim k As Double
Dim x As Double
Dim L As Double
Dim B As Double
Dim z As Double
Dim Q As Double
Dim n As Double
Dim So As Double
Dim Sf As Double, Sfm As Double
Dim sf1 As Double, sf2 As Double
Dim de As Double
Dim dx As Double
Dim tol As Double
Dim i As Integer
Dim intStartCol As Integer
Dim intStartRow As Integer
Dim Num As Integer
Dim intIterCount As Integer

Const g As Double = 9.81

intStartCol = 3
intStartRow = 10

' set the tolerance
'Flow (m3 / s)
Q = Cells(intStartRow, intStartCol).Value
'Manning n
n = Cells(intStartRow + 1, intStartCol).Value 'Slope
'Slope
So = Cells(intStartRow + 2, intStartCol).Value
'Width (m)
B = Cells(intStartRow + 3, intStartCol).Value
'side slope (-)
z = Cells(intStartRow + 4, intStartCol).Value
'Initial Depth(m)
y1 = Cells(intStartRow + 5, intStartCol).Value
'Step (m)
dx = Cells(intStartRow + 6, intStartCol).Value
dx = -dx
'Length (m)
L = Cells(intStartRow + 7, intStartCol).Value
'tolerance
tol = Cells(intStartRow + 8, intStartCol).Value

intStartCol = 5

k = (n * Q) ^ 2

Num = CInt(L / Abs(dx))
Range(Cells(intStartRow, intStartCol), Cells(intStartRow + (Num + 1) * 2, intStartCol + 9)).ClearContents
For i = 0 To Num - 1
    x = -dx * i
    a1 = (B + z * y1) * y1
    p1 = B + 2 * y1 * (1 + z ^ 2) ^ 0.5
    e1 = y1 + (Q / a1) ^ 2 / (2 * g)
    sf1 = k * p1 ^ 1.3333 / a1 ^ 3.3333
    If i = 0 Then
        ' print initial data
        Cells(intStartRow + i, intStartCol + 0).Value = y1
        Cells(intStartRow + i, intStartCol + 1).Value = a1
        Cells(intStartRow + i, intStartCol + 2).Value = p1
        Cells(intStartRow + i, intStartCol + 3).Value = e1
        Cells(intStartRow + i, intStartCol + 4).Value = sf1
        Cells(intStartRow + i, intStartCol + 8).Value = e1
        Cells(intStartRow + i, intStartCol + 9).Value = x
    End If
    If i = Num + 1 Then
        Exit For
    End If
    
    y2 = y1 + (So - sf1) * dx
    ' repeat
    intIterCount = 0
    Do
        a2 = (B + y2 * z) * y2
        p2 = B + 2 * y2 * (1 + z ^ 2) ^ 0.5
        e2g = y2 + (Q / a2) ^ 2 / (2 * g)
        sf2 = k * p2 ^ 1.3333 / a2 ^ 3.3333
        Sfm = So - (sf1 + sf2) * 0.5
        de = dx * Sfm
        e2 = e1 + de
        If (e2 - e2g) > tol Then
            y2 = y2 + tol
        End If
        If (e2g - e2) > tol Then
            y2 = y2 - tol
        End If
        intIterCount = intIterCount + 1
    Loop While (Abs(e2 - e2g) >= tol)
    ' print sm de
    Cells(intStartRow + i + 1, intStartCol + 5).Value = Sfm
    Cells(intStartRow + i + 1, intStartCol + 6).Value = de
    Cells(intStartRow + i + 1, intStartCol + 7).Value = intIterCount
    ' print solution
    Cells(intStartRow + i + 1, intStartCol + 0).Value = y2
    Cells(intStartRow + i + 1, intStartCol + 1).Value = a2
    Cells(intStartRow + i + 1, intStartCol + 2).Value = p2
    Cells(intStartRow + i + 1, intStartCol + 3).Value = e2g
    Cells(intStartRow + i + 1, intStartCol + 4).Value = sf2
    Cells(intStartRow + i + 1, intStartCol + 8).Value = e2
    Cells(intStartRow + i + 1, intStartCol + 9).Value = -(x + Abs(dx))
    
    y1 = y2
    
Next i

End Sub

Private Sub CommandButton1_Click()

End Sub
Attribute VB_Name = "ThisWorkbook"
Attribute VB_Base = "0{00020819-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True


INQUEST-PP=macro
