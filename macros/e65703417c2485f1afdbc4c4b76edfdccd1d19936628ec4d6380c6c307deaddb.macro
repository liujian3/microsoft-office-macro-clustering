Attribute VB_Name = "DieseArbeitsmappe"
Attribute VB_Base = "0{00020819-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Frequenzmittel"
' HK f|fffd|r HV 9 Sep 2017 HV: Transponieren aufgehoben damit Filtrung nach R m|fffd|glich ist
' Datenauswertung Vibrometer, Email HV
' Daten im aktiven Sheet

Option Explicit


Public Sub subMittelFrequenzZeilen()

    Dim WholeLine As String
    Dim FNum As Integer
    Dim RowNdx As Long
    Dim ColNdx As Integer
    Dim StartRow As Long
    Dim EndRow As Long
    Dim StartCol As Integer
    Dim EndCol As Integer
    Dim CellValue As String

    Dim wsSource As Worksheet
    Dim wsTarget As Worksheet

    
    Dim lngMaxArrSize As Long
    Dim dblX() As Double
    Dim dblY() As Double
         
    Dim lngIndexRow As Long
    Dim lngXRow As Long
    Dim lngYRow As Long
    Dim lngIndex As Long
    Dim lngIndexMax As Long
    Dim lngIndexRowMax As Long

    Dim lngNrRolAvg As Long
    Dim lngIndexRolAvg As Long
    Dim lngIndexRolAvgMax As Long
    Dim lngIndexRolAvgInterpoliert As Long
    Dim dblXRolAvgSum As Double
    Dim dblYRolAvgSum As Double
    Dim dblXRolAvg() As Double
    Dim dblYRolAvg() As Double
    
    Dim dblDeltaX As Double
    Dim dblXVal  As Double
    Dim dblYVal  As Double

    Dim lngI As Long
    
    Dim startTime As Date
    Dim stopTime As Date
    
    'Eingaben:
     startTime = Time
    'Sheet mit Daten muss aktiv sein
    lngNrRolAvg = 13 'Anzahl Werte f|fffd|r rollenden Durchschnitt
    dblDeltaX = 2#   'Delta-x Wert f|fffd|r den y-Werte des rollenden Durchschnitts interpoliert werden.
                     'Das # steht f|fffd|r double-Wert
    
    
    'Code
    'C 170910hv:    wsTtarget.Cells Reihenfolge tauschen um transponieren zu vermeiden
            
    lngMaxArrSize = 0 'init
    Set wsSource = ActiveSheet
    If Not wsSource.Cells(4, 5) Like "*f*[kHz]*" Then
       MsgBox ("PlausiCheck failed, Zelle (4,5) nicht f [kHz], richtiges Blatt selektieren ")
       End
    End If
    'Application.ScreenUpdating = False
    ActiveWorkbook.Worksheets.Add After:=Worksheets(Worksheets.Count)
    Set wsTarget = ActiveSheet

    ' 1. copy header
    wsTarget.Cells(1, 1) = wsSource.Cells(1, 1)
    wsTarget.Cells(4, 5) = wsSource.Cells(4, 5)
    
    For ColNdx = 1 To 5
        wsTarget.Cells(7, ColNdx) = wsSource.Cells(7, ColNdx)
    Next ColNdx
    
    ' 2. Einlesen x (Frequenzen) aus Zeile 5
    StartCol = 5
    EndCol = wsSource.Cells.SpecialCells(xlCellTypeLastCell).Column
    lngIndexRow = 5
    For ColNdx = StartCol To EndCol
       If Not IsNumeric(wsSource.Cells(lngIndexRow, ColNdx)) Or _
          IsEmpty(wsSource.Cells(lngIndexRow, ColNdx)) Then
          EndCol = ColNdx - 1
          Exit For
       End If
       lngIndex = lngIndex + 1
       If lngIndex > lngMaxArrSize Then
          lngMaxArrSize = lngMaxArrSize + 10000
          ReDim Preserve dblX(lngMaxArrSize)
          ReDim Preserve dblY(lngMaxArrSize)
       End If
       dblX(lngIndex) = wsSource.Cells(lngIndexRow, ColNdx)
    Next ColNdx
    lngIndexMax = lngIndex
    
    'gleitenden Durchschnitt X ausrechnen
    'Init
    dblXRolAvgSum = 0
    ReDim dblXRolAvg(lngIndexMax)
    ReDim dblYRolAvg(lngIndexMax)

    For lngIndex = 1 To lngNrRolAvg
       dblXRolAvgSum = dblXRolAvgSum + dblX(lngIndex)
    Next lngIndex
     
    lngIndexRolAvg = 0
    For lngIndex = lngNrRolAvg + 1 To lngIndexMax + 1
        lngIndexRolAvg = lngIndexRolAvg + 1
        dblXRolAvg(lngIndexRolAvg) = dblXRolAvgSum / lngNrRolAvg
        ' wsTarget.Cells(lngIndexRow, StartCol + lngIndexRolAvg - 1) = dblXRolAvg(lngIndexRolAvg)
        If lngIndex <= lngIndexMax Then
           dblXRolAvgSum = dblXRolAvgSum + dblX(lngIndex) - dblX(lngIndex - lngNrRolAvg)
        End If
    Next lngIndex
    lngIndexRolAvgMax = lngIndexRolAvg

    
    ' 3. Zeilen mit Y durchgehen und gleitenden Durchschnitt berechnen
    
    lngIndexRowMax = wsSource.Cells.SpecialCells(xlCellTypeLastCell).Row
    
    For lngIndexRow = 8 To lngIndexRowMax
       ' Einlesen eine Zeile Y
       lngIndex = 0
       For ColNdx = StartCol To EndCol
            If Not IsNumeric(wsSource.Cells(lngIndexRow, ColNdx)) Or _
               IsEmpty(wsSource.Cells(lngIndexRow, ColNdx)) Then
               MsgBox ("Zelle (" & lngIndexRow & ", " & ColNdx & ") ist keine Zahl wie erwartet")
               Exit For
            End If
            lngIndex = lngIndex + 1
            dblY(lngIndex) = wsSource.Cells(lngIndexRow, ColNdx)
       Next ColNdx
       
       'Point, x, y, z kopieren
       For lngI = 1 To 4
          wsTarget.Cells(lngIndexRow, lngI) = wsSource.Cells(lngIndexRow, lngI)
       Next lngI
       
       ' gleitender Durchschnitt Y
       dblYRolAvgSum = 0
    
      'Init
      For lngIndex = 1 To lngNrRolAvg
         dblYRolAvgSum = dblYRolAvgSum + dblY(lngIndex)
      Next lngIndex
       
      lngIndexRolAvg = 0
      For lngIndex = lngNrRolAvg + 1 To lngIndexMax + 1
          lngIndexRolAvg = lngIndexRolAvg + 1
          dblYRolAvg(lngIndexRolAvg) = dblYRolAvgSum / lngNrRolAvg
          If lngIndex <= lngIndexMax Then
             dblYRolAvgSum = dblYRolAvgSum + dblY(lngIndex) - dblY(lngIndex - lngNrRolAvg)
          End If
      Next lngIndex


      ' 3. Ausgeben Werte gleitender Durchschnitt f|fffd|r bestimmte x-Werte (interpoliert)
      
      dblXVal = 0
      lngIndexRolAvgInterpoliert = 0
      dblXVal = dblXVal + dblDeltaX
      For lngIndexRolAvg = 1 To lngIndexRolAvgMax
           If dblXRolAvg(lngIndexRolAvg) > dblXVal Then
              'lin Interpol
              dblYVal = dblYRolAvg(lngIndexRolAvg - 1) + _
                       (dblYRolAvg(lngIndexRolAvg) - dblYRolAvg(lngIndexRolAvg - 1)) / _
                       (dblXRolAvg(lngIndexRolAvg) - dblXRolAvg(lngIndexRolAvg - 1)) * _
                       (dblXVal - dblXRolAvg(lngIndexRolAvg - 1))
              lngIndexRolAvgInterpoliert = lngIndexRolAvgInterpoliert + 1
              If lngIndexRow = 8 Then
                 ' x-Werte schreiben
                  wsTarget.Cells(5, lngIndexRolAvgInterpoliert + 4) = dblXVal
              End If
              wsTarget.Cells(lngIndexRow, lngIndexRolAvgInterpoliert + 4) = dblYVal
              dblXVal = dblXVal + dblDeltaX
           End If
        Next lngIndexRolAvg
    Next lngIndexRow
    'Application.ScreenUpdating = True
    stopTime = Time
    MsgBox ("Fertig - Anzahl gelesene Spalten: " & EndCol & "  Dauer: " & Round((stopTime - startTime) * 24 * 60 * 60, 0) & " s")

End Sub
Attribute VB_Name = "Tabelle1"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Tabelle4"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True


INQUEST-PP=macro
