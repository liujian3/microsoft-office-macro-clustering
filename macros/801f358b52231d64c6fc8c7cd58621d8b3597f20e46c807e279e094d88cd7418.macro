Attribute VB_Name = "ContactForm"
Attribute VB_Base = "0{4366FE6B-5045-4320-B562-AFB4C80C21ED}{AAA06685-4058-4030-9531-DADBE941B700}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Dim wingone As Boolean
Dim Saved As Boolean

Private Sub CommandButton1_Click()
    Saved = True
    FirstName = txtFirstName.Text
    LastName = txtLastName.Text
    MiddleName = txtMiddleName.Text
    Suffix = txtSuffix.Text
    Street1 = txtStreet1.Text
    City1 = txtCity1.Text
    State1 = txtState1.Text
    Zip1 = txtZip1.Text
    Tel1 = txtTel1.Text
    Fax1 = txtFax1.Text
    Street2 = txtStreet2.Text
    City2 = txtCity2.Text
    State2 = txtState2.Text
    Zip2 = txtZip2.Text
    Tel2 = txtTel2.Text
    Fax2 = txtFax2.Text
    Email = txtEmail.Text
    Call SaveRes
    If Not wingone Then
        ContactForm.Hide
        Unload ContactForm
    End If
    MenuForm.CommandButton2.Enabled = True
    
End Sub

Private Sub CommandButton2_Click()
    ContactForm.Hide
    Unload ContactForm
End Sub

Private Sub UserForm_Initialize()
    Saved = False
    txtFirstName.Text = FirstName
    txtLastName.Text = LastName
    txtMiddleName.Text = MiddleName
    txtSuffix.Text = Suffix
    txtStreet1.Text = Street1
    txtCity1.Text = City1
    txtState1.Text = State1
    txtZip1.Text = Zip1
    txtTel1.Text = Tel1
    txtFax1.Text = Fax1
    txtStreet2.Text = Street2
    txtCity2.Text = City2
    txtState2.Text = State2
    txtZip2.Text = Zip2
    txtTel2.Text = Tel2
    txtFax2.Text = Fax2
    txtEmail.Text = Email
        
End Sub

Private Sub UserForm_Terminate()

    Dim Response
    wingone = True
    
    If Not Saved Then
        Response = MsgBox("Do you want to Save Contact Information?", vbYesNo, "Save")
        Select Case Response
        Case 6
            Call CommandButton1_Click
        Case 7
            ' do nothing
        End Select
    End If
End Sub
Attribute VB_Name = "EducationDetail"
Attribute VB_Base = "0{7EDC037B-4CA9-4254-8200-BC8356F366B0}{7F1D4DD1-5A00-44FA-8EEE-0EE5AAC54139}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Dim theDetail As Integer

Private Sub CheckBox1_AfterUpdate()
    Sch_Bull(SpinSchoolDetail.Value) = CheckBox1.Value
End Sub

Private Sub CommandButton2_Click()
        EducationDetail.Hide
        Unload EducationDetail
End Sub

Private Sub CommandButtonDetail1_Click()
    Dim srapfile As String
       
    Sch_Det(SpinSchoolDetail) = txtDetail
    Sch_Bull(SpinSchoolDetail) = CheckBox1
    
    Edu_Det(theDetail) = Sch_Det
    Edu_Bull(theDetail) = Sch_Bull
    
    Call SaveRes
    
    If Not wingone Then
        EducationDetail.Hide
        Unload EducationDetail
    End If
       
End Sub


Private Sub CommandButtonDetail6_Click()
    Dim x
    Sch_Det(SpinSchoolDetail) = txtDetail
    Sch_Bull(SpinSchoolDetail) = CheckBox1

    x = UBound(Sch_Det)
    x = x + 1
    
    ReDim Preserve Sch_Det(x)
    ReDim Preserve Sch_Bull(x)
    Sch_Bull(x) = CheckBox1
    SpinSchoolDetail.Max = x
    SortButton.Max = x
    SpinSchoolDetail.Value = x
    SortButton.Value = x
    CommandButton7.Enabled = True
    txtDetail.SetFocus
End Sub

Private Sub CommandButton7_Click()
    If SpinSchoolDetail.Max = 0 Then
        txtDetail = ""
        CheckBox1.Value = 0
        Sch_Det(0) = ""
        Sch_Bull(0) = ""
    Else
    
        x = UBound(Sch_Det)
        
        tmparray = Sch_Det
        ReDim Sch_Det(x - 1)
        y = 0
        For i = 0 To x
            If i <> SpinSchoolDetail.Value Then
                Sch_Det(y) = tmparray(i)
                y = y + 1
            End If
        Next
        
        tmparray = Sch_Bull
        ReDim Sch_Bull(x - 1)
        y = 0
        For i = 0 To x
            If i <> SpinSchoolDetail.Value Then
                Sch_Bull(y) = tmparray(i)
                y = y + 1
            End If
        Next
         
        
    End If
    If SpinSchoolDetail.Value = SpinSchoolDetail.Max And SpinSchoolDetail.Value > 0 Then
        SpinSchoolDetail.Value = SpinSchoolDetail.Value - 1
    Else
        Call SpinSchoolDetail_Change
    End If
    If SpinSchoolDetail.Max > 0 Then
        SpinSchoolDetail.Max = SpinSchoolDetail.Max - 1
        SortButton.Max = SortButton.Max - 1
    End If
    If SpinSchoolDetail.Max = 0 Then
        CommandButton7.Enabled = False
    End If
    txtDetail.SetFocus
End Sub

Private Sub SortButton_SpinDown()

Dim temppara, tempbull


curnum = SpinSchoolDetail
newnum = curnum + 1

If newnum <= UBound(Sch_Det) Then

    temppara = Sch_Det(newnum)
    tempbull = Sch_Bull(newnum)

    Sch_Det(newnum) = Sch_Det(curnum)
    Sch_Bull(newnum) = Sch_Bull(curnum)

    Sch_Det(curnum) = temppara
    Sch_Bull(curnum) = tempbull

    SpinSchoolDetail.Value = newnum

    Call SpinSchoolDetail_Change
End If

End Sub

Private Sub SortButton_SpinUp()
Dim temppara, tempbull


curnum = SpinSchoolDetail
newnum = curnum - 1

If newnum >= LBound(Sch_Det) Then

    temppara = Sch_Det(newnum)
    tempbull = Sch_Bull(newnum)

    Sch_Det(newnum) = Sch_Det(curnum)
    Sch_Bull(newnum) = Sch_Bull(curnum)

    Sch_Det(curnum) = temppara
    Sch_Bull(curnum) = tempbull

    SpinSchoolDetail.Value = newnum

    Call SpinSchoolDetail_Change
End If

End Sub

Private Sub SpinSchoolDetail_Change()
    SortButton.Value = SpinSchoolDetail
    onNum = SpinSchoolDetail + 1
    outOfNum = UBound(Sch_Det) + 1
    txtDetail = Sch_Det(onNum - 1)
    CheckBox1 = Sch_Bull(onNum - 1)
    TextBoxDetail4.Text = "Paragraph " & onNum & "/" & outOfNum
    FrameDetail1.Caption = TextBoxDetail4.Text
    txtDetail.SetFocus
End Sub
Private Sub txtDetail_AfterUpdate()
    Sch_Det(SpinSchoolDetail.Value) = txtDetail.Text
End Sub
Private Sub UserForm_Initialize()
    Dim i As Integer
    
    theDetail = EducationForm.SpinSchool.Value
    If IsEmpty(Edu_Det(theDetail)) Then
        ReDim Sch_Det(0)
        ReDim Sch_Bull(0)
        Sch_Det(0) = ""
        Sch_Bull(0) = True
    Else
        ReDim Sch_Det(UBound(Edu_Det(theDetail)))
        ReDim Sch_Bull(UBound(Edu_Bull(theDetail)))
        For i = 0 To UBound(Edu_Det(theDetail))
            Sch_Det(i) = Edu_Det(theDetail)(i)
            Sch_Bull(i) = Edu_Bull(theDetail)(i)
        Next i

    End If
    
    SpinSchoolDetail.Max = UBound(Sch_Det)
    SortButton.Max = UBound(Sch_Det)
    txtDetail.Text = Sch_Det(0)
    CheckBox1.Value = Sch_Bull(0)
    If SpinSchoolDetail.Max = 0 Then
        CommandButton7.Enabled = False
    End If
    SpinSchoolDetail.Value = 0
    SortButton.Value = 0
End Sub
Attribute VB_Name = "EducationForm"
Attribute VB_Base = "0{70544688-2E28-45FA-83B4-C207C063039A}{68082402-CEB9-4A6A-B245-7520332CC3CB}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Dim wingone As Boolean
Dim Saved As Boolean

Private Sub CommandButton1_Click()
    Dim srapfile As String
    Saved = True
    
    schools(SpinSchool) = txtSchool
    degrees(SpinSchool) = txtDegree
    Edu_Locs(SpinSchool) = txtLocation
    Edu_Dates(SpinSchool) = txtDog
    Edu_Dates2(SpinSchool) = txtDog2
    
    Call SaveRes
    
    If Not wingone Then
        EducationForm.Hide
        Unload EducationForm
    End If
    
    MenuForm.CommandButton3.Enabled = True
    
End Sub

Private Sub CommandButton2_Click()
    EducationForm.Hide
    Unload EducationForm
End Sub

Private Sub CommandButton5_Click()
    Load EducationDetail
    EducationDetail.Show
End Sub

Private Sub CommandButton6_Click()
    Dim x
    
    schools(SpinSchool) = txtSchool
    degrees(SpinSchool) = txtDegree
    Edu_Locs(SpinSchool) = txtLocation
    Edu_Dates(SpinSchool) = txtDog
    Edu_Dates2(SpinSchool) = txtDog2
    
    x = UBound(schools)
    x = x + 1
    
    ReDim Preserve schools(x)
    ReDim Preserve degrees(x)
    ReDim Preserve Edu_Locs(x)
    ReDim Preserve Edu_Dates(x)
    ReDim Preserve Edu_Dates2(x)
    ReDim Preserve Edu_Det(x)
    ReDim Preserve Edu_Bull(x)
        
    SpinSchool.Max = x
    SortButton.Max = x
    SpinSchool.Value = x
    SortButton.Value = x
    CommandButton7.Enabled = True
    txtSchool.SetFocus
End Sub

Private Sub CommandButton7_Click()
    If SpinSchool.Max = 0 Then
        txtSchool = ""
        txtDegree = ""
        txtLocation = ""
        txtDog = ""
        txtDog2 = ""
        schools(0) = ""
        degrees(0) = ""
        Edu_Locs(0) = ""
        Edu_Dates(0) = ""
        Edu_Dates2(0) = ""
        Edu_Det(0) = ""
        Edu_Bull(0) = ""
    Else
        x = UBound(schools)
        
        tmparray = schools
        ReDim schools(x - 1)
        y = 0
        For i = 0 To x
            If i <> SpinSchool Then
                schools(y) = tmparray(i)
                y = y + 1
            End If
        Next
        
        tmparray = degrees
        ReDim degrees(x - 1)
        y = 0
        For i = 0 To x
            If i <> SpinSchool Then
                degrees(y) = tmparray(i)
                y = y + 1
            End If
        Next
         
        tmparray = Edu_Locs
        ReDim Edu_Locs(x - 1)
        y = 0
        For i = 0 To x
            If i <> SpinSchool Then
                Edu_Locs(y) = tmparray(i)
                y = y + 1
            End If
        Next
         
        tmparray = Edu_Dates
        ReDim Edu_Dates(x - 1)
        y = 0
        For i = 0 To x
            If i <> SpinSchool Then
                Edu_Dates(y) = tmparray(i)
                y = y + 1
            End If
        Next
        
        tmparray = Edu_Dates2
        ReDim Edu_Dates2(x - 1)
        y = 0
        For i = 0 To x
            If i <> SpinSchool Then
                Edu_Dates2(y) = tmparray(i)
                y = y + 1
            End If
        Next
        
        tmparray = Edu_Det
        ReDim Edu_Det(x - 1)
        y = 0
        For i = 0 To x
            If i <> SpinSchool Then
                Edu_Det(y) = tmparray(i)
                y = y + 1
            End If
        Next
        
        tmparray = Edu_Bull
        ReDim Edu_Bull(x - 1)
        y = 0
        For i = 0 To x
            If i <> SpinSchool Then
                Edu_Bull(y) = tmparray(i)
                y = y + 1
            End If
        Next
        
    End If
    If SpinSchool.Value = SpinSchool.Max And SpinSchool.Value > 0 Then
        SpinSchool.Value = SpinSchool.Value - 1
    Else
        Call SpinSchool_Change
    End If
    If SpinSchool.Max > 0 Then
        SpinSchool.Max = SpinSchool.Max - 1
        SortButton.Max = SortButton.Max - 1
    End If
    If SpinSchool.Max = 0 Then
        CommandButton7.Enabled = False
    End If
    txtSchool.SetFocus
End Sub

Private Sub SortButton_SpinDown()

Dim tempsch, tempdeg, temploc, tempdog, tempdog2, tempdet, tempbull

curnum = SpinSchool
newnum = curnum + 1

If newnum <= UBound(schools) Then

        tempsch = schools(newnum)
        tempdeg = degrees(newnum)
        temploc = Edu_Locs(newnum)
        tempdog = Edu_Dates(newnum)
        tempdog2 = Edu_Dates2(newnum)
        tempdet = Edu_Det(newnum)
        tempbull = Edu_Bull(newnum)

        schools(newnum) = schools(curnum)
        degrees(newnum) = degrees(curnum)
        Edu_Locs(newnum) = Edu_Locs(curnum)
        Edu_Dates(newnum) = Edu_Dates(curnum)
        Edu_Dates2(newnum) = Edu_Dates2(curnum)
        Edu_Det(newnum) = Edu_Det(curnum)
        Edu_Bull(newnum) = Edu_Bull(curnum)

        schools(curnum) = tempsch
        degrees(curnum) = tempdeg
        Edu_Locs(curnum) = temploc
        Edu_Dates(curnum) = tempdog
        Edu_Dates2(curnum) = tempdog2
        Edu_Det(curnum) = tempdet
        Edu_Bull(curnum) = tempbull

        SpinSchool.Value = newnum

        Call SpinSchool_Change

End If

End Sub

Private Sub SortButton_SpinUp()
Dim tempsch, tempdeg, temploc, tempdog, tempdog2, tempdet, tempbull

curnum = SpinSchool
newnum = curnum - 1

If newnum >= LBound(schools) Then

        tempsch = schools(newnum)
        tempdeg = degrees(newnum)
        temploc = Edu_Locs(newnum)
        tempdog = Edu_Dates(newnum)
        tempdog2 = Edu_Dates2(newnum)
        tempdet = Edu_Det(newnum)
        tempbull = Edu_Bull(newnum)

        schools(newnum) = schools(curnum)
        degrees(newnum) = degrees(curnum)
        Edu_Locs(newnum) = Edu_Locs(curnum)
        Edu_Dates(newnum) = Edu_Dates(curnum)
        Edu_Dates2(newnum) = Edu_Dates2(curnum)
        Edu_Det(newnum) = Edu_Det(curnum)
        Edu_Bull(newnum) = Edu_Bull(curnum)

        schools(curnum) = tempsch
        degrees(curnum) = tempdeg
        Edu_Locs(curnum) = temploc
        Edu_Dates(curnum) = tempdog
        Edu_Dates2(curnum) = tempdog2
        Edu_Det(curnum) = tempdet
        Edu_Bull(curnum) = tempbull

        SpinSchool.Value = newnum

        Call SpinSchool_Change

End If

End Sub

Private Sub SpinSchool_Change()
    SortButton.Value = SpinSchool
    onNum = SpinSchool + 1
    outOfNum = UBound(schools) + 1
    txtSchool = schools(onNum - 1)
    txtDegree = degrees(onNum - 1)
    txtLocation = Edu_Locs(onNum - 1)
    txtDog = Edu_Dates(onNum - 1)
    txtDog2 = Edu_Dates2(onNum - 1)
    TextBox4.Text = "Degree " & onNum & "/" & outOfNum
    Frame1.Caption = TextBox4.Text
    txtSchool.SetFocus
End Sub

Private Sub txtDegree_AfterUpdate()
    degrees(SpinSchool.Value) = txtDegree.Text
End Sub

Private Sub txtLocation_AfterUpdate()
    Edu_Locs(SpinSchool.Value) = txtLocation.Text
End Sub

Private Sub txtSchool_AfterUpdate()
    schools(SpinSchool.Value) = txtSchool.Text
End Sub
Private Sub txtDog_AfterUpdate()
    Edu_Dates(SpinSchool.Value) = txtDog.Text
End Sub
Private Sub txtDog2_AfterUpdate()
    Edu_Dates2(SpinSchool.Value) = txtDog2.Text
End Sub
Private Sub UserForm_Initialize()
    wingone = False
    Saved = False
    txtSchool.Text = schools(0)
    txtDegree.Text = degrees(0)
    txtLocation.Text = Edu_Locs(0)
    txtDog.Text = Edu_Dates(0)
    txtDog2.Text = Edu_Dates2(0)
    SpinSchool.Max = UBound(schools)
    SortButton.Max = UBound(schools)
    If SpinSchool.Max = 0 Then
        CommandButton7.Enabled = False
    End If
    SpinSchool.Value = 0
    SortButton.Value = 0
End Sub

Private Sub UserForm_Terminate()
    Dim Response
    wingone = True
    If Not Saved Then
        Response = MsgBox("Do you want to Save Education Information?", vbYesNo, "Save")
        Select Case Response
        Case 6
            Call CommandButton1_Click
        Case 7
            ' do nothing
        End Select
    End If
End Sub
Attribute VB_Name = "ExperienceDetail"
Attribute VB_Base = "0{159C0949-6EA0-4BB9-925C-16FF24916DDE}{83C25142-8FD6-4D5B-8D0B-C2B6345D084B}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Dim theDetail As Integer
Private Sub CheckBox1_AfterUpdate()
    Comp_Bull(SpinPositionDetail.Value) = CheckBox1.Value
End Sub

Private Sub CommandButton2_Click()
    ExperienceDetail.Hide
    Unload ExperienceDetail
End Sub

Private Sub CommandButtonDetail1_Click()
           
    Comp_det(SpinPositionDetail) = txtDetail
    Comp_Bull(SpinPositionDetail) = CheckBox1
    
    Exp_Det(theDetail) = Comp_det
    Exp_Bull(theDetail) = Comp_Bull
    
    Call SaveRes
    
    ExperienceDetail.Hide
    Unload ExperienceDetail
        
End Sub
Private Sub CommandButtonDetail6_Click()
    Dim x
    Comp_det(SpinPositionDetail) = txtDetail
    Comp_Bull(SpinPositionDetail) = CheckBox1

    x = UBound(Comp_det)
    x = x + 1
    
    ReDim Preserve Comp_det(x)
    ReDim Preserve Comp_Bull(x)
    Comp_Bull(x) = CheckBox1
     
    SpinPositionDetail.Max = x
    SortButton.Max = x
    SpinPositionDetail.Value = x
    SortButton.Value = x
    CommandButton7.Enabled = True
    txtDetail.SetFocus
End Sub

Private Sub CommandButton7_Click()
    If SpinPositionDetail.Max = 0 Then
        txtDetail = ""
        CheckBox1.Value = 0
        Comp_det(0) = ""
        Comp_Bull(0) = ""
    Else
    
        x = UBound(Comp_det)
        
        tmparray = Comp_det
        ReDim Comp_det(x - 1)
        y = 0
        For i = 0 To x
            If i <> SpinPositionDetail.Value Then
                Comp_det(y) = tmparray(i)
                y = y + 1
            End If
        Next
        
        tmparray = Comp_Bull
        ReDim Comp_Bull(x - 1)
        y = 0
        For i = 0 To x
            If i <> SpinPositionDetail.Value Then
                Comp_Bull(y) = tmparray(i)
                y = y + 1
            End If
        Next
         
        
    End If
    If SpinPositionDetail.Value = SpinPositionDetail.Max And SpinPositionDetail.Value > 0 Then
        SpinPositionDetail.Value = SpinPositionDetail.Value - 1
    Else
        Call SpinPositionDetail_Change
    End If
    If SpinPositionDetail.Max > 0 Then
        SpinPositionDetail.Max = SpinPositionDetail.Max - 1
        SortButton.Max = SortButton.Max - 1
    End If
    If SpinPositionDetail.Max = 0 Then
        CommandButton7.Enabled = False
    End If
    txtDetail.SetFocus
End Sub

Private Sub SortButton_SpinDown()
Dim temppara, tempbull

curnum = SpinPositionDetail
newnum = curnum + 1

If newnum <= UBound(Comp_det) Then

    temppara = Comp_det(newnum)
    tempbull = Comp_Bull(newnum)

    Comp_det(newnum) = Comp_det(curnum)
    Comp_Bull(newnum) = Comp_Bull(curnum)

    Comp_det(curnum) = temppara
    Comp_Bull(curnum) = tempbull

    SpinPositionDetail.Value = newnum

    Call SpinPositionDetail_Change
End If

End Sub

Private Sub SortButton_SpinUp()
Dim temppara, tempbull

curnum = SpinPositionDetail
newnum = curnum - 1

If newnum >= LBound(Comp_det) Then

    temppara = Comp_det(newnum)
    tempbull = Comp_Bull(newnum)

    Comp_det(newnum) = Comp_det(curnum)
    Comp_Bull(newnum) = Comp_Bull(curnum)

    Comp_det(curnum) = temppara
    Comp_Bull(curnum) = tempbull

    SpinPositionDetail.Value = newnum

    Call SpinPositionDetail_Change
End If
End Sub

Private Sub SpinPositionDetail_Change()

    SortButton.Value = SpinPositionDetail
    onNum = SpinPositionDetail + 1
    outOfNum = UBound(Comp_det) + 1
    txtDetail = Comp_det(onNum - 1)
    CheckBox1 = Comp_Bull(onNum - 1)
    TextBoxDetail4.Text = "Paragraph " & onNum & "/" & outOfNum
    FrameDetail1.Caption = TextBoxDetail4.Text
    txtDetail.SetFocus

End Sub
Private Sub txtDetail_AfterUpdate()
    Comp_det(SpinPositionDetail.Value) = txtDetail.Text
End Sub

Private Sub UserForm_Initialize()
    Dim i As Integer
    
    theDetail = ExperienceForm.SpinPosition.Value
    If IsEmpty(Exp_Det(theDetail)) Then
        ReDim Comp_det(0)
        ReDim Comp_Bull(0)
        Comp_det(0) = ""
        Comp_Bull(0) = True
    Else
        ReDim Comp_det(UBound(Exp_Det(theDetail)))
        ReDim Comp_Bull(UBound(Exp_Bull(theDetail)))
        For i = 0 To UBound(Exp_Det(theDetail))
            Comp_det(i) = Exp_Det(theDetail)(i)
            Comp_Bull(i) = Exp_Bull(theDetail)(i)
        Next i
        
    End If
    
    SpinPositionDetail.Max = UBound(Comp_det)
    SortButton.Max = UBound(Comp_det)
    txtDetail.Text = Comp_det(0)
    CheckBox1.Value = Comp_Bull(0)
    If SpinPositionDetail.Max = 0 Then
        CommandButton7.Enabled = False
    End If
    SpinPositionDetail.Value = 0
    SortButton.Value = 0
End Sub
Attribute VB_Name = "ExperienceForm"
Attribute VB_Base = "0{0D1BF776-D5A2-410C-9195-F9E8D028D6A2}{A866F96C-4BD4-45E4-A19D-0CFD0D91A8C8}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Dim wingone As Boolean
Dim Saved As Boolean

Private Sub CommandButton1_Click()
    Dim srapfile As String
    Saved = True
    
    Call SaveRes
    
    If Not wingone Then
        ExperienceForm.Hide
        Unload ExperienceForm
    End If
    MenuForm.CommandButton4.Enabled = True
    MenuForm.CommandButton5.Enabled = True
    
End Sub

Private Sub CommandButton2_Click()
    ExperienceForm.Hide
    Unload ExperienceForm
End Sub

Private Sub CommandButton5_Click()
    Load ExperienceDetail
    ExperienceDetail.Show
End Sub

Private Sub CommandButton6_Click()
    Dim x
    companies(SpinPosition) = txtCompany
    positions(SpinPosition) = txtPosition
    Exp_Locs(SpinPosition) = txtLocation
    Exp_Dates(SpinPosition) = txtDates
    
    x = UBound(companies)
    x = x + 1
    
    ReDim Preserve companies(x)
    ReDim Preserve positions(x)
    ReDim Preserve Exp_Locs(x)
    ReDim Preserve Exp_Dates(x)
    ReDim Preserve Exp_Det(x)
    ReDim Preserve Exp_Bull(x)
    
    SpinPosition.Max = x
    SortButton.Max = x
    SpinPosition.Value = x
    SortButton.Value = x
    CommandButton7.Enabled = True
    txtCompany.SetFocus
End Sub

Private Sub CommandButton7_Click()
    If SpinPosition.Max = 0 Then
        txtCompany = ""
        txtPosition = ""
        txtLocation = ""
        txtDates = ""
        companies(0) = ""
        positions(0) = ""
        Exp_Locs(0) = ""
        Exp_Dates(0) = ""
        Exp_Det(0) = ""
        Exp_Bull(0) = ""
    Else
    
        x = UBound(companies)
        
        tmparray = companies
        ReDim companies(x - 1)
        y = 0
        For i = 0 To x
            If i <> SpinPosition Then
                companies(y) = tmparray(i)
                y = y + 1
            End If
        Next
        
        tmparray = positions
        ReDim positions(x - 1)
        y = 0
        For i = 0 To x
            If i <> SpinPosition Then
                positions(y) = tmparray(i)
                y = y + 1
            End If
        Next
         
        tmparray = Exp_Locs
        ReDim Exp_Locs(x - 1)
        y = 0
        For i = 0 To x
            If i <> SpinPosition Then
                Exp_Locs(y) = tmparray(i)
                y = y + 1
            End If
        Next
         
        tmparray = Exp_Dates
        ReDim Exp_Dates(x - 1)
        y = 0
        For i = 0 To x
            If i <> SpinPosition Then
                Exp_Dates(y) = tmparray(i)
                y = y + 1
            End If
        Next
        
        tmparray = Exp_Det
        ReDim Exp_Det(x - 1)
        y = 0
        For i = 0 To x
            If i <> SpinPosition Then
                Exp_Det(y) = tmparray(i)
                y = y + 1
            End If
        Next
        
        tmparray = Exp_Bull
        ReDim Exp_Bull(x - 1)
        y = 0
        For i = 0 To x
            If i <> SpinPosition Then
                Exp_Bull(y) = tmparray(i)
                y = y + 1
            End If
        Next
        
    End If
    If SpinPosition.Value = SpinPosition.Max And SpinPosition.Value > 0 Then
        SpinPosition.Value = SpinPosition.Value - 1
    Else
        Call SpinPosition_Change
    End If
    If SpinPosition.Max > 0 Then
        SpinPosition.Max = SpinPosition.Max - 1
        SortButton.Max = SortButton.Max - 1
    End If
    If SpinPosition.Max = 0 Then
        CommandButton7.Enabled = False
    End If
    txtCompany.SetFocus
End Sub


Private Sub SortButton_SpinDown()
Dim tempcmp, temppos, temploc, tempdate, tempdet, tempbull

curnum = SpinPosition
newnum = curnum + 1

If newnum <= UBound(companies) Then
    tempcmp = companies(newnum)
    temppos = positions(newnum)
    temploc = Exp_Locs(newnum)
    tempdate = Exp_Dates(newnum)
    tempdet = Exp_Det(newnum)
    tempbull = Exp_Bull(newnum)

    companies(newnum) = companies(curnum)
    positions(newnum) = positions(curnum)
    Exp_Locs(newnum) = Exp_Locs(curnum)
    Exp_Dates(newnum) = Exp_Dates(curnum)
    Exp_Det(newnum) = Exp_Det(curnum)
    Exp_Bull(newnum) = Exp_Bull(curnum)


    companies(curnum) = tempcmp
    positions(curnum) = temppos
    Exp_Locs(curnum) = temploc
    Exp_Dates(curnum) = tempdate
    Exp_Det(curnum) = tempdet
    Exp_Bull(curnum) = tempbull


    SpinPosition.Value = newnum

    Call SpinPosition_Change
End If
End Sub

Private Sub SortButton_SpinUp()
Dim tempcmp, temppos, temploc, tempdate, tempdet, tempbull

curnum = SpinPosition
newnum = curnum - 1

If newnum >= LBound(companies) Then
    tempcmp = companies(newnum)
    temppos = positions(newnum)
    temploc = Exp_Locs(newnum)
    tempdate = Exp_Dates(newnum)
    tempdet = Exp_Det(newnum)
    tempbull = Exp_Bull(newnum)

    companies(newnum) = companies(curnum)
    positions(newnum) = positions(curnum)
    Exp_Locs(newnum) = Exp_Locs(curnum)
    Exp_Dates(newnum) = Exp_Dates(curnum)
    Exp_Det(newnum) = Exp_Det(curnum)
    Exp_Bull(newnum) = Exp_Bull(curnum)


    companies(curnum) = tempcmp
    positions(curnum) = temppos
    Exp_Locs(curnum) = temploc
    Exp_Dates(curnum) = tempdate
    Exp_Det(curnum) = tempdet
    Exp_Bull(curnum) = tempbull


    SpinPosition.Value = newnum

    Call SpinPosition_Change
End If
End Sub

Private Sub SpinPosition_Change()
    SortButton.Value = SpinPosition
    onNum = SpinPosition + 1
    outOfNum = UBound(companies) + 1
    txtCompany = companies(onNum - 1)
    txtPosition = positions(onNum - 1)
    txtLocation = Exp_Locs(onNum - 1)
    txtDates = Exp_Dates(onNum - 1)
    TextBox4.Text = "Position " & onNum & "/" & outOfNum
    Frame1.Caption = TextBox4.Text
    txtCompany.SetFocus
End Sub

Private Sub txtPosition_AfterUpdate()
    positions(SpinPosition.Value) = txtPosition.Text
End Sub

Private Sub txtLocation_AfterUpdate()
    Exp_Locs(SpinPosition.Value) = txtLocation.Text
End Sub

Private Sub txtCompany_AfterUpdate()
    companies(SpinPosition.Value) = UCase(txtCompany.Text)
End Sub
Private Sub txtDates_AfterUpdate()
    Exp_Dates(SpinPosition.Value) = txtDates.Text
End Sub

Private Sub UserForm_Initialize()
    scrapfile = Options.DefaultFilePath(wdDocumentsPath) + "\_scr_" + user + "_exp.dat"
    wingone = False
    Saved = False
    
    txtCompany.Text = companies(0)
    txtPosition.Text = positions(0)
    txtLocation.Text = Exp_Locs(0)
    txtDates.Text = Exp_Dates(0)
    SpinPosition.Max = UBound(companies)
    SortButton.Max = UBound(companies)
    If SpinPosition.Max = 0 Then
        CommandButton7.Enabled = False
    End If
    SpinPosition.Value = 0
    SortButton.Value = 0
End Sub

Private Sub UserForm_Terminate()
    Dim Response
    wingone = True
    If Not Saved Then
        Response = MsgBox("Do you want to Save Experience Information?", vbYesNo, "Save")
        Select Case Response
        Case 6
            Call CommandButton1_Click
        Case 7
            ' do nothing
        End Select
    End If
End Sub
Attribute VB_Name = "GenerateMod"
Dim tempstr As String
Dim i As Integer
Dim j As Integer
Dim TheFile As String
Dim bulletsOn As Boolean
Option Explicit

Sub Generate()
     
    Documents.Add
    
    Call DocDefs
    Call GenContact
    
    TheFile = Options.DefaultFilePath(wdDocumentsPath) + "\" + LastName + " " + FirstName + ".doc"
    ActiveDocument.SaveAs TheFile
    
    Call GenEdu
    Call GenExp
    
    If Opt1_Bull(0) <> "" Then
        Call GenOpt1
    End If
    
    If Opt2_Bull(0) <> "" Then
        Call GenOpt2
    End If
    
    ActiveDocument.Save
    
End Sub
Private Sub DocDefs()

    With ActiveDocument.PageSetup
        .LineNumbering.Active = False
        .Orientation = wdOrientPortrait
        .TopMargin = InchesToPoints(1)
        .BottomMargin = InchesToPoints(0.5)
        .LeftMargin = InchesToPoints(0.75)
        .RightMargin = InchesToPoints(0.75)
        .Gutter = InchesToPoints(0)
        .HeaderDistance = InchesToPoints(0.5)
        .FooterDistance = InchesToPoints(0.5)
        .PageWidth = InchesToPoints(8.5)
        .PageHeight = InchesToPoints(11)
        .FirstPageTray = wdPrinterDefaultBin
        .OtherPagesTray = wdPrinterDefaultBin
        .SectionStart = wdSectionNewPage
        .OddAndEvenPagesHeaderFooter = False
        .DifferentFirstPageHeaderFooter = False
        .VerticalAlignment = wdAlignVerticalTop
        .SuppressEndnotes = False
        .MirrorMargins = False
    End With
    
    Selection.ParagraphFormat.LineSpacingRule = wdLineSpaceExactly
    Selection.ParagraphFormat.LineSpacing = 11
    Selection.Font.Size = 11
    Selection.Font.Name = "Times New Roman"
        
End Sub
Private Sub GenContact()

    Selection.Font.Bold = wdToggle
    Selection.ParagraphFormat.Alignment = wdAlignParagraphCenter
    Selection.ParagraphFormat.TabStops.ClearAll
    Selection.ParagraphFormat.TabStops.Add Position:=InchesToPoints(7), Alignment:=wdAlignTabRight, Leader:=wdTabLeaderSpaces
    
    Selection.Font.Size = 14
    Selection.TypeText Text:=UCase(FirstName)
    Selection.TypeText Text:=" "
    Selection.TypeText Text:=UCase(MiddleName)
    If Len(MiddleName) = 1 Then
        Selection.TypeText Text:="."
    End If
    Selection.TypeText Text:=" "
    Selection.TypeText Text:=UCase(LastName)
    Selection.Font.Size = 11
    Selection.Font.Bold = wdToggle
    Selection.TypeParagraph
     
    If Len(Trim(Street2 & City2 & State2 & Zip2 & Tel2 & Fax2)) = 0 Then
        Selection.ParagraphFormat.Alignment = wdAlignParagraphCenter
        Selection.TypeText Text:=Street1
        Selection.TypeParagraph
        Selection.TypeText Text:=City1
        Selection.TypeText Text:=", "
        Selection.TypeText Text:=State1
        Selection.TypeText Text:=" "
        Selection.TypeText Text:=Zip1
        Selection.TypeParagraph
        If Len(Tel1) > 0 And Len(Fax1) > 0 Then
            Selection.TypeText Text:="tel.: "
        End If
        Selection.TypeText Text:=Tel1
        Selection.TypeParagraph
        If Len(Fax1) > 0 Then
            Selection.TypeText Text:="fax: "
            Selection.TypeText Text:=Fax1
            Selection.TypeParagraph
        End If
        Selection.TypeText Text:="e-mail: " & Email
        Selection.TypeParagraph
    Else
        Selection.ParagraphFormat.Alignment = wdAlignParagraphLeft
        Selection.TypeText Text:=Street1
        Selection.TypeText Text:=vbTab
        Selection.TypeText Text:=Street2
        Selection.TypeParagraph
        Selection.TypeText Text:=City1
        Selection.TypeText Text:=", "
        Selection.TypeText Text:=State1
        Selection.TypeText Text:=" "
        Selection.TypeText Text:=Zip1
        Selection.TypeText Text:=vbTab
        Selection.TypeText Text:=City2
        Selection.TypeText Text:=", "
        Selection.TypeText Text:=State2
        Selection.TypeText Text:=" "
        Selection.TypeText Text:=Zip2
        Selection.TypeParagraph
        If Len(Tel1) > 0 And Len(Fax1) > 0 Then
            Selection.TypeText Text:="tel.: "
        End If
        Selection.TypeText Text:=Tel1
        Selection.TypeText Text:=vbTab
        If Len(Tel2) > 0 And Len(Fax2) > 0 Then
            Selection.TypeText Text:="tel.: "
        End If
        Selection.TypeText Text:=Tel2
        Selection.TypeParagraph
        If Len(Fax1) > 0 Then
            Selection.TypeText Text:="fax: "
            Selection.TypeText Text:=Fax1
            If Len(Fax2) = 0 Then
                Selection.TypeParagraph
            End If
        End If
        If Len(Fax2) > 0 Then
            Selection.TypeText Text:=vbTab
            Selection.TypeText Text:="fax: "
            Selection.TypeText Text:=Fax2
            Selection.TypeParagraph
        End If
        Selection.TypeText Text:="e-mail: " & Email
        Selection.TypeParagraph
        
    End If
    
    Selection.TypeParagraph
    Selection.TypeParagraph


End Sub

Private Sub GenEdu()

    Selection.ParagraphFormat.TabStops.ClearAll
    Selection.ParagraphFormat.TabStops.Add Position:=InchesToPoints(7), Alignment:=wdAlignTabRight, Leader:=wdTabLeaderSpaces
    Selection.ParagraphFormat.Alignment = wdAlignParagraphLeft
    Selection.Font.Size = 10
    Selection.Font.Bold = wdToggle
    Selection.Font.Underline = wdUnderlineSingle
    Selection.TypeText Text:="EDUCATION" & vbTab
    Selection.Font.Underline = wdUnderlineNone
    Selection.Font.Bold = wdToggle
    Selection.Font.Size = 11
    Selection.TypeParagraph
    Selection.TypeParagraph
    For i = 0 To UBound(schools)
        
        Selection.ParagraphFormat.TabStops.ClearAll
        Selection.ParagraphFormat.TabStops.Add Position:=InchesToPoints(7), Alignment:=wdAlignTabRight, Leader:=wdTabLeaderSpaces
       
        If Len(schools(i) & Edu_Locs(i)) > 0 Then
            Selection.Font.Bold = wdToggle
            Selection.TypeText Text:=UCase(schools(i))
            Selection.Font.Bold = wdToggle
            Selection.TypeText Text:=vbTab & Edu_Locs(i)
            Selection.TypeParagraph
        End If
        Selection.TypeText Text:=degrees(i) & vbTab
        Selection.TypeText Edu_Dates2(i)
        Selection.TypeText Text:=" - "
        Selection.TypeText Edu_Dates(i)
        Selection.TypeParagraph
        Selection.ParagraphFormat.TabStops.ClearAll
                
        If Not IsEmpty(Edu_Det(i)) Then
        
            bulletsOn = False
            For j = 0 To UBound(Edu_Det(i))
            
                If Edu_Bull(i)(j) And Not bulletsOn Then
                    'turn bullets on
                    With ListGalleries(wdBulletGallery).ListTemplates(1).ListLevels(1)
                        .NumberFormat = ChrW(61623)
                        .TrailingCharacter = wdTrailingTab
                        .NumberStyle = wdListNumberStyleBullet
                        .NumberPosition = InchesToPoints(0)
                        .Alignment = wdListLevelAlignLeft
                        .TextPosition = InchesToPoints(0.25)
                        .TabPosition = InchesToPoints(0)
                        .ResetOnHigher = True
                        .StartAt = 1
                        With .Font
                            .Bold = wdUndefined
                            .Italic = wdUndefined
                            .StrikeThrough = wdUndefined
                            .Subscript = wdUndefined
                            .Superscript = wdUndefined
                            .Shadow = wdUndefined
                            .Outline = wdUndefined
                            .Emboss = wdUndefined
                            .Engrave = wdUndefined
                            .AllCaps = wdUndefined
                            .Hidden = wdUndefined
                            .Underline = wdUndefined
                            .ColorIndex = wdUndefined
                            .Size = wdUndefined
                            .Animation = wdUndefined
                            .DoubleStrikeThrough = wdUndefined
                            .Name = "Symbol"
                        End With
                        .LinkedStyle = ""
                    End With
                    ListGalleries(wdBulletGallery).ListTemplates(1).Name = ""
                    Selection.Range.ListFormat.ApplyListTemplate ListTemplate:=ListGalleries( _
                    wdBulletGallery).ListTemplates(1), ContinuePreviousList:=False, ApplyTo:= _
                    wdListApplyToWholeList
                    bulletsOn = True
                End If
                If Not Edu_Bull(i)(j) And bulletsOn Then
                    'turn bullets off
                    Selection.Range.ListFormat.RemoveNumbers numbertype:=wdNumberParagraph
                    bulletsOn = False
                End If
                If Len(Trim(Edu_Det(i)(j))) <> 0 Then
                    Selection.TypeText Edu_Det(i)(j)
                    Selection.TypeParagraph
                End If
            Next j
            If bulletsOn Then
                Selection.Range.ListFormat.RemoveNumbers numbertype:=wdNumberParagraph
                bulletsOn = False
            End If
           
        End If
        Selection.TypeParagraph
    Next i
        
End Sub

Private Sub GenExp()

        Selection.ParagraphFormat.TabStops.ClearAll
        Selection.ParagraphFormat.TabStops.Add Position:=InchesToPoints(7), Alignment:=wdAlignTabRight, Leader:=wdTabLeaderSpaces
        Selection.ParagraphFormat.Alignment = wdAlignParagraphLeft
        Selection.Font.Size = 10
        Selection.Font.Bold = wdToggle
        Selection.Font.Underline = wdUnderlineSingle
        Selection.TypeText Text:="EXPERIENCE" & vbTab
        Selection.Font.Underline = wdUnderlineNone
        Selection.Font.Bold = wdToggle
        Selection.Font.Size = 11
        Selection.TypeParagraph
        Selection.TypeParagraph
        
        For i = 0 To UBound(companies)
            
            Selection.ParagraphFormat.TabStops.ClearAll
            Selection.ParagraphFormat.TabStops.Add Position:=InchesToPoints(7), Alignment:=wdAlignTabRight, Leader:=wdTabLeaderSpaces
          
            If Len(companies(i) & Exp_Locs(i)) > 0 Then
                Selection.Font.Bold = wdToggle
                Selection.TypeText Text:=UCase(companies(i))
                Selection.Font.Bold = wdToggle
                Selection.TypeText Text:=vbTab & Exp_Locs(i)
                Selection.TypeParagraph
            End If
            Selection.Font.Underline = wdUnderlineSingle
            Selection.TypeText Text:=positions(i)
            Selection.Font.Underline = wdUnderlineNone
            Selection.TypeText vbTab & Exp_Dates(i)
            
            Selection.TypeParagraph
            Selection.ParagraphFormat.TabStops.ClearAll
            If Not IsEmpty(Exp_Det(i)) Then
                bulletsOn = False
                                       
                For j = 0 To UBound(Exp_Det(i))
                    
                    If Exp_Bull(i)(j) And Not bulletsOn Then
                    
                        With ListGalleries(wdBulletGallery).ListTemplates(1).ListLevels(1)
                            .NumberFormat = ChrW(61623)
                            .TrailingCharacter = wdTrailingTab
                            .NumberStyle = wdListNumberStyleBullet
                            .NumberPosition = InchesToPoints(0)
                            .Alignment = wdListLevelAlignLeft
                            .TextPosition = InchesToPoints(0.25)
                            .TabPosition = InchesToPoints(0)
                            .ResetOnHigher = True
                            .StartAt = 1
                            With .Font
                                .Bold = wdUndefined
                                .Italic = wdUndefined
                                .StrikeThrough = wdUndefined
                                .Subscript = wdUndefined
                                .Superscript = wdUndefined
                                .Shadow = wdUndefined
                                .Outline = wdUndefined
                                .Emboss = wdUndefined
                                .Engrave = wdUndefined
                                .AllCaps = wdUndefined
                                .Hidden = wdUndefined
                                .Underline = wdUndefined
                                .ColorIndex = wdUndefined
                                .Size = wdUndefined
                                .Animation = wdUndefined
                                .DoubleStrikeThrough = wdUndefined
                                .Name = "Symbol"
                            End With
                            .LinkedStyle = ""
                        End With
                        ListGalleries(wdBulletGallery).ListTemplates(1).Name = ""
                        Selection.Range.ListFormat.ApplyListTemplate ListTemplate:=ListGalleries( _
                            wdBulletGallery).ListTemplates(1), ContinuePreviousList:=False, ApplyTo:= _
                            wdListApplyToWholeList
                        bulletsOn = True
                    End If
                    If Not Exp_Bull(i)(j) And bulletsOn Then
                        'turn bullets off
                        Selection.Range.ListFormat.RemoveNumbers numbertype:=wdNumberParagraph
                        bulletsOn = False
                    End If
                    Selection.TypeText Exp_Det(i)(j)
                    Selection.TypeParagraph
                Next j
            
                If bulletsOn Then
                    Selection.Range.ListFormat.RemoveNumbers numbertype:=wdNumberParagraph
                    bulletsOn = False
                End If
                
            End If
            Selection.TypeParagraph
        Next i
            
End Sub

Private Sub GenOpt1()
        
        Selection.ParagraphFormat.TabStops.ClearAll
        Selection.ParagraphFormat.TabStops.Add Position:=InchesToPoints(7), Alignment:=wdAlignTabRight, Leader:=wdTabLeaderSpaces
        Selection.Font.Size = 10
        Selection.Font.Bold = wdToggle
        Selection.Font.Underline = wdUnderlineSingle
        Selection.TypeText Text:=UCase(Opt1_title) & vbTab
        Selection.Font.Underline = wdUnderlineNone
        Selection.Font.Bold = wdToggle
        Selection.Font.Size = 11
        Selection.TypeParagraph
        Selection.TypeParagraph
        Selection.ParagraphFormat.TabStops.ClearAll
        bulletsOn = False
                        
        For j = 0 To UBound(Opt1_Det)
            If Opt1_Bull(j) And Not bulletsOn Then
                    
                        With ListGalleries(wdBulletGallery).ListTemplates(1).ListLevels(1)
                            .NumberFormat = ChrW(61623)
                            .TrailingCharacter = wdTrailingTab
                            .NumberStyle = wdListNumberStyleBullet
                            .NumberPosition = InchesToPoints(0)
                            .Alignment = wdListLevelAlignLeft
                            .TextPosition = InchesToPoints(0.25)
                            .TabPosition = InchesToPoints(0)
                            .ResetOnHigher = True
                            .StartAt = 1
                            With .Font
                                .Bold = wdUndefined
                                .Italic = wdUndefined
                                .StrikeThrough = wdUndefined
                                .Subscript = wdUndefined
                                .Superscript = wdUndefined
                                .Shadow = wdUndefined
                                .Outline = wdUndefined
                                .Emboss = wdUndefined
                                .Engrave = wdUndefined
                                .AllCaps = wdUndefined
                                .Hidden = wdUndefined
                                .Underline = wdUndefined
                                .ColorIndex = wdUndefined
                                .Size = wdUndefined
                                .Animation = wdUndefined
                                .DoubleStrikeThrough = wdUndefined
                                .Name = "Symbol"
                            End With
                            .LinkedStyle = ""
                        End With
                        ListGalleries(wdBulletGallery).ListTemplates(1).Name = ""
                        Selection.Range.ListFormat.ApplyListTemplate ListTemplate:=ListGalleries( _
                            wdBulletGallery).ListTemplates(1), ContinuePreviousList:=False, ApplyTo:= _
                            wdListApplyToWholeList
                        bulletsOn = True
            End If
            If Not Opt1_Bull(j) And bulletsOn Then
                'turn bullets off
                Selection.Range.ListFormat.RemoveNumbers numbertype:=wdNumberParagraph
                bulletsOn = False
            End If
            Selection.TypeText Opt1_Det(j)
            Selection.TypeParagraph
        Next j
        If bulletsOn Then
            Selection.Range.ListFormat.RemoveNumbers numbertype:=wdNumberParagraph
            bulletsOn = False
        End If
        
        Selection.TypeParagraph

End Sub

Private Sub GenOpt2()

    Selection.ParagraphFormat.TabStops.ClearAll
        Selection.ParagraphFormat.TabStops.Add Position:=InchesToPoints(7), Alignment:=wdAlignTabRight, Leader:=wdTabLeaderSpaces
        Selection.Font.Size = 10
        Selection.Font.Bold = wdToggle
        Selection.Font.Underline = wdUnderlineSingle
        Selection.TypeText Text:=UCase(Opt2_title) & vbTab
        Selection.Font.Underline = wdUnderlineNone
        Selection.Font.Bold = wdToggle
        Selection.Font.Size = 11
        Selection.TypeParagraph
        Selection.TypeParagraph
        bulletsOn = False
            
            
            
    For j = 0 To UBound(Opt2_Det)
        If Opt2_Bull(j) And Not bulletsOn Then
              
                        With ListGalleries(wdBulletGallery).ListTemplates(1).ListLevels(1)
                            .NumberFormat = ChrW(61623)
                            .TrailingCharacter = wdTrailingTab
                            .NumberStyle = wdListNumberStyleBullet
                            .NumberPosition = InchesToPoints(0)
                            .Alignment = wdListLevelAlignLeft
                            .TextPosition = InchesToPoints(0.25)
                            .TabPosition = InchesToPoints(0)
                            .ResetOnHigher = True
                            .StartAt = 1
                            With .Font
                                .Bold = wdUndefined
                                .Italic = wdUndefined
                                .StrikeThrough = wdUndefined
                                .Subscript = wdUndefined
                                .Superscript = wdUndefined
                                .Shadow = wdUndefined
                                .Outline = wdUndefined
                                .Emboss = wdUndefined
                                .Engrave = wdUndefined
                                .AllCaps = wdUndefined
                                .Hidden = wdUndefined
                                .Underline = wdUndefined
                                .ColorIndex = wdUndefined
                                .Size = wdUndefined
                                .Animation = wdUndefined
                                .DoubleStrikeThrough = wdUndefined
                                .Name = "Symbol"
                            End With
                            .LinkedStyle = ""
                        End With
                        ListGalleries(wdBulletGallery).ListTemplates(1).Name = ""
                        Selection.Range.ListFormat.ApplyListTemplate ListTemplate:=ListGalleries( _
                            wdBulletGallery).ListTemplates(1), ContinuePreviousList:=False, ApplyTo:= _
                            wdListApplyToWholeList
                        bulletsOn = True
        End If
        If Not Opt2_Bull(j) And bulletsOn Then
            'turn bullets off
            Selection.Range.ListFormat.RemoveNumbers numbertype:=wdNumberParagraph
            bulletsOn = False
        End If
        Selection.TypeText Opt2_Det(j)
        Selection.TypeParagraph
    Next j
    
    If bulletsOn Then
        Selection.Range.ListFormat.RemoveNumbers numbertype:=wdNumberParagraph
        bulletsOn = False
    End If
            
    Selection.TypeParagraph
    
End Sub
Attribute VB_Name = "HandleCrMod"
Sub HandleCr()
    MsgBox "Use the [Add] button to start a new paragraph.", vbOKOnly
End Sub
Attribute VB_Name = "LoadResMod"
Sub LoadRes()
    
    Dim tempstr
    Dim totpara As Integer
    Dim docplace As Integer
    Dim scrapfile As String
    Dim i As Integer
    Dim j As Integer


    scrapfile = Options.DefaultFilePath(wdDocumentsPath) + "\_scr_" + user + ".dat"
    If Len(Dir(scrapfile)) > 0 Then
        Documents.Open FileName:=scrapfile, Addtorecentfiles:=False
        tempstr = ActiveDocument.paragraphs(1)
        FirstName = Left(tempstr, Len(tempstr) - 1)
        tempstr = ActiveDocument.paragraphs(2)
        LastName = Left(tempstr, Len(tempstr) - 1)
        tempstr = ActiveDocument.paragraphs(3)
        MiddleName = Left(tempstr, Len(tempstr) - 1)
        tempstr = ActiveDocument.paragraphs(4)
        Suffix = Left(tempstr, Len(tempstr) - 1)
        tempstr = ActiveDocument.paragraphs(5)
        Street1 = Left(tempstr, Len(tempstr) - 1)
        tempstr = ActiveDocument.paragraphs(6)
        Street2 = Left(tempstr, Len(tempstr) - 1)
        tempstr = ActiveDocument.paragraphs(7)
        City1 = Left(tempstr, Len(tempstr) - 1)
        tempstr = ActiveDocument.paragraphs(8)
        City2 = Left(tempstr, Len(tempstr) - 1)
        tempstr = ActiveDocument.paragraphs(9)
        State1 = Left(tempstr, Len(tempstr) - 1)
        tempstr = ActiveDocument.paragraphs(10)
        State2 = Left(tempstr, Len(tempstr) - 1)
        tempstr = ActiveDocument.paragraphs(11)
        Zip1 = Left(tempstr, Len(tempstr) - 1)
        tempstr = ActiveDocument.paragraphs(12)
        Zip2 = Left(tempstr, Len(tempstr) - 1)
        tempstr = ActiveDocument.paragraphs(13)
        Tel1 = Left(tempstr, Len(tempstr) - 1)
        tempstr = ActiveDocument.paragraphs(14)
        Tel2 = Left(tempstr, Len(tempstr) - 1)
        tempstr = ActiveDocument.paragraphs(15)
        Fax1 = Left(tempstr, Len(tempstr) - 1)
        tempstr = ActiveDocument.paragraphs(16)
        Fax2 = Left(tempstr, Len(tempstr) - 1)
        tempstr = ActiveDocument.paragraphs(17)
        Email = Left(tempstr, Len(tempstr) - 1)
        
        docplace = 18
        
        tempstr = ActiveDocument.paragraphs(docplace)
        totpara = CInt(Left(tempstr, Len(tempstr) - 1))
        ReDim schools(totpara)
        ReDim degrees(totpara)
        ReDim Edu_Locs(totpara)
        ReDim Edu_Dates(totpara)
        ReDim Edu_Dates2(totpara)
        ReDim Edu_Det(totpara)
        ReDim Edu_Bull(totpara)
        docplace = docplace + 1
        For i = 0 To totpara
            tempstr = ActiveDocument.paragraphs(docplace)
            schools(i) = Left(tempstr, Len(tempstr) - 1)
            docplace = docplace + 1
            tempstr = ActiveDocument.paragraphs(docplace)
            degrees(i) = Left(tempstr, Len(tempstr) - 1)
            docplace = docplace + 1
            tempstr = ActiveDocument.paragraphs(docplace)
            Edu_Locs(i) = Left(tempstr, Len(tempstr) - 1)
            docplace = docplace + 1
            tempstr = ActiveDocument.paragraphs(docplace)
            Edu_Dates(i) = Left(tempstr, Len(tempstr) - 1)
            docplace = docplace + 1
            tempstr = ActiveDocument.paragraphs(docplace)
            Edu_Dates2(i) = Left(tempstr, Len(tempstr) - 1)
            docplace = docplace + 1
            
            tempstr = ActiveDocument.paragraphs(docplace)
            totpara = CInt(Left(tempstr, Len(tempstr) - 1))
            docplace = docplace + 1
            If totpara >= 0 Then
                ReDim Sch_Det(totpara)
                ReDim Sch_Bull(totpara)
                For j = 0 To totpara
                    tempstr = ActiveDocument.paragraphs(docplace)
                    Sch_Det(j) = Left(tempstr, Len(tempstr) - 1)
                    docplace = docplace + 1
                    tempstr = ActiveDocument.paragraphs(docplace)
                    Sch_Bull(j) = Left(tempstr, Len(tempstr) - 1)
                    docplace = docplace + 1
                Next j
                Edu_Det(i) = Sch_Det
                Edu_Bull(i) = Sch_Bull
            End If
        Next i
        
            
        tempstr = ActiveDocument.paragraphs(docplace)
        totpara = CInt(Left(tempstr, Len(tempstr) - 1))
        ReDim companies(totpara)
        ReDim positions(totpara)
        ReDim Exp_Locs(totpara)
        ReDim Exp_Dates(totpara)
        ReDim Exp_Det(totpara)
        ReDim Exp_Bull(totpara)
        docplace = docplace + 1
        For i = 0 To totpara
            tempstr = ActiveDocument.paragraphs(docplace)
            companies(i) = Left(tempstr, Len(tempstr) - 1)
            docplace = docplace + 1
            tempstr = ActiveDocument.paragraphs(docplace)
            positions(i) = Left(tempstr, Len(tempstr) - 1)
            docplace = docplace + 1
            tempstr = ActiveDocument.paragraphs(docplace)
            Exp_Locs(i) = Left(tempstr, Len(tempstr) - 1)
            docplace = docplace + 1
            tempstr = ActiveDocument.paragraphs(docplace)
            Exp_Dates(i) = Left(tempstr, Len(tempstr) - 1)
            docplace = docplace + 1
            tempstr = ActiveDocument.paragraphs(docplace)
            totpara = CInt(Left(tempstr, Len(tempstr) - 1))
            docplace = docplace + 1
            If totpara >= 0 Then
                ReDim Comp_det(totpara)
                ReDim Comp_Bull(totpara)
                For j = 0 To totpara
                    tempstr = ActiveDocument.paragraphs(docplace)
                    Comp_det(j) = Left(tempstr, Len(tempstr) - 1)
                    docplace = docplace + 1
                    tempstr = ActiveDocument.paragraphs(docplace)
                    Comp_Bull(j) = Left(tempstr, Len(tempstr) - 1)
                    docplace = docplace + 1
                Next j
                Exp_Det(i) = Comp_det
                Exp_Bull(i) = Comp_Bull
            End If
        Next i
       
        tempstr = ActiveDocument.paragraphs(docplace)
        Opt1_title = Left(tempstr, Len(tempstr) - 1)
        
        docplace = docplace + 1
        
        tempstr = ActiveDocument.paragraphs(docplace)
        Opt2_title = Left(tempstr, Len(tempstr) - 1)
        
        docplace = docplace + 1
        
        tempstr = ActiveDocument.paragraphs(docplace)
        totpara = CInt(Left(tempstr, Len(tempstr) - 1))
        ReDim Opt1_Det(totpara)
        ReDim Opt1_Bull(totpara)
        docplace = docplace + 1
        For i = 0 To totpara
            tempstr = ActiveDocument.paragraphs(docplace)
            Opt1_Det(i) = Left(tempstr, Len(tempstr) - 1)
            docplace = docplace + 1
            tempstr = ActiveDocument.paragraphs(docplace)
            Opt1_Bull(i) = Left(tempstr, Len(tempstr) - 1)
            docplace = docplace + 1
        Next i
        
        tempstr = ActiveDocument.paragraphs(docplace)
        totpara = CInt(Left(tempstr, Len(tempstr) - 1))
        ReDim Opt2_Det(totpara)
        ReDim Opt2_Bull(totpara)
        docplace = docplace + 1
        For i = 0 To totpara
            tempstr = ActiveDocument.paragraphs(docplace)
            Opt2_Det(i) = Left(tempstr, Len(tempstr) - 1)
            docplace = docplace + 1
            tempstr = ActiveDocument.paragraphs(docplace)
            Opt2_Bull(i) = Left(tempstr, Len(tempstr) - 1)
            docplace = docplace + 1
        Next i
        
        Documents(scrapfile).Close
    Else
        ReDim schools(0)
        ReDim degrees(0)
        ReDim Edu_Locs(0)
        ReDim Edu_Dates(0)
        ReDim Edu_Dates2(0)
        ReDim companies(0)
        ReDim positions(0)
        ReDim Exp_Locs(0)
        ReDim Exp_Dates(0)
        ReDim Edu_Det(0)
        ReDim Edu_Bull(0)
        ReDim Exp_Det(0)
        ReDim Exp_Bull(0)
        ReDim Opt1_Det(0)
        ReDim Opt1_Bull(0)
        ReDim Opt2_Det(0)
        ReDim Opt2_Bull(0)
    End If
    

End Sub
Attribute VB_Name = "MenuForm"
Attribute VB_Base = "0{D5E5B71A-FDF4-46EE-9D7B-AB400C29AFCF}{32DB1F32-8FA0-42D3-8CEE-9D22005217CE}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Private Sub CommandButton1_Click()
    Load ContactForm
    ContactForm.Show
End Sub

Private Sub CommandButton2_Click()
    Load EducationForm
    EducationForm.Show
End Sub

Private Sub CommandButton3_Click()
    Load ExperienceForm
    ExperienceForm.Show
End Sub

Private Sub CommandButton4_Click()
    Load Optional1
    Optional1.Show
End Sub

Private Sub CommandButton5_Click()

MenuForm.Hide

Call Generate

Unload MenuForm

End Sub

Private Sub CommandButton6_Click()
    MenuForm.Hide
    Unload MenuForm
End Sub

Private Sub CommandButton7_Click()
    Load Optional2
    Optional2.Show
End Sub

Private Sub UserForm_Initialize()
   If Len(FirstName & LastName) > 0 Then
        CommandButton2.Enabled = True
    End If
    If Len(schools(0)) > 0 Then
        CommandButton3.Enabled = True
    End If
    If Len(companies(0)) > 0 Then
        CommandButton4.Enabled = True
        CommandButton5.Enabled = True
    End If
    If Len(Trim(Opt1_title)) > 0 Then
        CommandButton7.Enabled = True
    End If
End Sub

Private Sub UserForm_Terminate()
user = ""
     FirstName = ""
     LastName = ""
     MiddleName = ""
     Suffix = ""
     Street1 = ""
     Street2 = ""
     City1 = ""
     City2 = ""
     State1 = ""
     State2 = ""
     Tel1 = ""
     Tel2 = ""
     Zip1 = ""
     Zip2 = ""
     Fax1 = ""
     Fax2 = ""
     Email = ""
     ReDim schools(0)
     ReDim degrees(0)
     ReDim Edu_Locs(0)
     ReDim Edu_Dates(0)
     ReDim Edu_Dates2(0)
     ReDim companies(0)
     ReDim positions(0)
     ReDim Exp_Locs(0)
     ReDim Exp_Dates(0)
     ReDim Sch_Det(0)
     ReDim Comp_det(0)
     ReDim Opt1_Det(0)
     ReDim Opt2_Det(0)
End Sub
Attribute VB_Name = "Optional1"
Attribute VB_Base = "0{779D37AF-9368-4E7E-88CE-2110277D1B08}{516191E4-9FB0-4D41-83F0-BB42DB034E56}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Dim Saved As Boolean
Dim wingone As Boolean


Private Sub CheckBox1_AfterUpdate()
    Opt1_Bull(SpinOptional1.Value) = CheckBox1.Value
End Sub

Private Sub CommandButton2_Click()
    Optional1.Hide
    Unload Optional1
End Sub

Private Sub CommandButtonDetail1_Click()
    Dim srapfile As String
    Saved = True
   
    Opt1_title = TextBox1.Text
    Opt1_Det(SpinOptional1) = txtDetail
    Opt1_Bull(SpinAdditional) = CheckBox1
    
    Call SaveRes
  
    If Not wingone Then
        Optional1.Hide
        Unload Optional1
    End If
    MenuForm.CommandButton7.Enabled = True
End Sub


Private Sub CommandButtonDetail6_Click()
    Dim x
    Opt1_Det(SpinOptional1) = txtDetail
    Opt1_Bull(SpinOptional1) = CheckBox1

    x = UBound(Opt1_Det)
    x = x + 1
    
    ReDim Preserve Opt1_Det(x)
    ReDim Preserve Opt1_Bull(x)
    Opt1_Bull(x) = CheckBox1
     
    SpinOptional1.Max = x
    SortButton.Max = x
    SpinOptional1.Value = x
    SortButton.Value = x
    CommandButton7.Enabled = True
     txtDetail.SetFocus
End Sub

Private Sub CommandButton7_Click()
    If SpinOptional1.Max = 0 Then
        txtDetail = ""
        CheckBox1.Value = 0
        Opt1_Det(0) = ""
        Opt1_Bull(0) = ""
    Else
    
        x = UBound(Opt1_Det)
        
        tmparray = Opt1_Det
        ReDim Opt1_Det(x - 1)
        y = 0
        For i = 0 To x
            If i <> SpinOptional1.Value Then
                Opt1_Det(y) = tmparray(i)
                y = y + 1
            End If
        Next
        
        tmparray = Opt1_Bull
        ReDim Opt1_Bull(x - 1)
        y = 0
        For i = 0 To x
            If i <> SpinOptional1.Value Then
                Opt1_Bull(y) = tmparray(i)
                y = y + 1
            End If
        Next
         
        
    End If
    If SpinOptional1.Value = SpinOptional1.Max And SpinOptional1.Value > 0 Then
        SpinOptional1.Value = SpinOptional1.Value - 1
    Else
        Call SpinOptional1_Change
    End If
    If SpinOptional1.Max > 0 Then
        SpinOptional1.Max = SpinOptional1.Max - 1
        SortButton.Max = SortButton.Max - 1
    End If
    If SpinOptional1.Max = 0 Then
        CommandButton7.Enabled = False
    End If
    txtDetail.SetFocus
End Sub


Private Sub SortButton_SpinDown()
Dim temppara, tempbull

curnum = SpinOptional1
newnum = curnum + 1

If newnum <= UBound(Opt1_Det) Then

    temppara = Opt1_Det(newnum)
    tempbull = Opt1_Bull(newnum)

    Opt1_Det(newnum) = Opt1_Det(curnum)
    Opt1_Bull(newnum) = Opt1_Bull(curnum)

    Opt1_Det(curnum) = temppara
    Opt1_Bull(curnum) = tempbull

    SpinOptional1.Value = newnum

    Call SpinOptional1_Change
End If

End Sub

Private Sub SortButton_SpinUp()
Dim temppara, tempbull

curnum = SpinOptional1
newnum = curnum - 1

If newnum >= LBound(Opt1_Det) Then

    temppara = Opt1_Det(newnum)
    tempbull = Opt1_Bull(newnum)

    Opt1_Det(newnum) = Opt1_Det(curnum)
    Opt1_Bull(newnum) = Opt1_Bull(curnum)

    Opt1_Det(curnum) = temppara
    Opt1_Bull(curnum) = tempbull

    SpinOptional1.Value = newnum

    Call SpinOptional1_Change
End If
End Sub

Private Sub SpinOptional1_Change()
    SortButton.Value = SpinOptional1
    onNum = SpinOptional1 + 1
    outOfNum = UBound(Opt1_Det) + 1
    txtDetail = Opt1_Det(onNum - 1)
    CheckBox1 = Opt1_Bull(onNum - 1)
    TextBoxDetail4.Text = "Paragraph " & onNum & "/" & outOfNum
    FrameDetail1.Caption = TextBoxDetail4.Text
    txtDetail.SetFocus

End Sub
Private Sub txtDetail_AfterUpdate()
    Opt1_Det(SpinOptional1.Value) = txtDetail.Text
End Sub

Private Sub UserForm_Initialize()
    
    Saved = False
    wingone = False
    
    SpinOptional1.Max = UBound(Opt1_Det)
    SortButton.Max = UBound(Opt1_Det)
    TextBox1.Text = Opt1_title
    txtDetail.Text = Opt1_Det(0)
    If Opt1_Bull(0) = "" Then
        Opt1_Bull(0) = True
    End If
    CheckBox1.Value = Opt1_Bull(0)
    If SpinOptional1.Max = 0 Then
        CommandButton7.Enabled = False
    End If
    SpinOptional1.Value = 0
    SortButton.Value = 0
    TextBox1.SetFocus
End Sub


Private Sub UserForm_Terminate()
    wingone = True
    If Not Saved Then
        Dim Response
        Response = MsgBox("Do you want to Save Optional Category 1?", vbYesNo, "Save")
        Select Case Response
        Case 6
            Call CommandButtonDetail1_Click
        Case 7
            ' do nothing
        End Select
    End If
    MenuForm.CommandButton5.Enabled = True
End Sub
Attribute VB_Name = "Optional2"
Attribute VB_Base = "0{68B49467-1238-4512-B657-6468B75D745A}{A78B5777-EFA3-422E-869A-930100EFA068}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Dim Saved As Boolean
Dim wingone As Boolean


Private Sub CheckBox1_AfterUpdate()
    Opt2_Bull(SpinOptional2.Value) = CheckBox1.Value
End Sub

Private Sub CommandButton2_Click()
    Optional2.Hide
    Unload Optional2
End Sub

Private Sub CommandButtonDetail1_Click()
    Dim srapfile As String
    Saved = True
   
    Opt2_title = TextBox1.Text
    Opt2_Det(SpinOptional2) = txtDetail
    Opt2_Bull(SpinAdditional) = CheckBox1
    
    Call SaveRes
  
    If Not wingone Then
        Optional2.Hide
        Unload Optional2
    End If
    MenuForm.CommandButton7.Enabled = True
End Sub


Private Sub CommandButtonDetail6_Click()
    Dim x
    Opt2_Det(SpinOptional2) = txtDetail
    Opt2_Bull(SpinOptional2) = CheckBox1

    x = UBound(Opt2_Det)
    x = x + 1
    
    ReDim Preserve Opt2_Det(x)
    ReDim Preserve Opt2_Bull(x)
    Opt2_Bull(x) = CheckBox1
     
    SpinOptional2.Max = x
    SortButton.Max = x
    SpinOptional2.Value = x
    SortButton.Value = x
    CommandButton7.Enabled = True
     txtDetail.SetFocus
End Sub

Private Sub CommandButton7_Click()
    If SpinOptional2.Max = 0 Then
        txtDetail = ""
        CheckBox1.Value = 0
        Opt2_Det(0) = ""
        Opt2_Bull(0) = ""
    Else
    
        x = UBound(Opt2_Det)
        
        tmparray = Opt2_Det
        ReDim Opt2_Det(x - 1)
        y = 0
        For i = 0 To x
            If i <> SpinOptional2.Value Then
                Opt2_Det(y) = tmparray(i)
                y = y + 1
            End If
        Next
        
        tmparray = Opt2_Bull
        ReDim Opt2_Bull(x - 1)
        y = 0
        For i = 0 To x
            If i <> SpinOptional2.Value Then
                Opt2_Bull(y) = tmparray(i)
                y = y + 1
            End If
        Next
         
        
    End If
    If SpinOptional2.Value = SpinOptional2.Max And SpinOptional2.Value > 0 Then
        SpinOptional2.Value = SpinOptional2.Value - 1
    Else
        Call Spinoptional2_Change
    End If
    If SpinOptional2.Max > 0 Then
        SpinOptional2.Max = SpinOptional2.Max - 1
        SortButton.Max = SortButton.Max - 1
    End If
    If SpinOptional2.Max = 0 Then
        CommandButton7.Enabled = False
    End If
    txtDetail.SetFocus
End Sub

Private Sub FrameDetail1_Click()

End Sub

Private Sub SortButton_SpinDown()

Dim temppara, tempbull

curnum = SpinOptional2
newnum = curnum + 1

If newnum <= UBound(Opt2_Det) Then

    temppara = Opt2_Det(newnum)
    tempbull = Opt2_Bull(newnum)

    Opt2_Det(newnum) = Opt2_Det(curnum)
    Opt2_Bull(newnum) = Opt2_Bull(curnum)

    Opt2_Det(curnum) = temppara
    Opt2_Bull(curnum) = tempbull

    SpinOptional2.Value = newnum

    Call Spinoptional2_Change
End If
End Sub

Private Sub SortButton_SpinUp()
Dim temppara, tempbull

curnum = SpinOptional2
newnum = curnum - 1

If newnum >= LBound(Opt2_Det) Then

    temppara = Opt2_Det(newnum)
    tempbull = Opt2_Bull(newnum)

    Opt2_Det(newnum) = Opt2_Det(curnum)
    Opt2_Bull(newnum) = Opt2_Bull(curnum)

    Opt2_Det(curnum) = temppara
    Opt2_Bull(curnum) = tempbull

    SpinOptional2.Value = newnum

    Call Spinoptional2_Change
End If
End Sub

Private Sub Spinoptional2_Change()
    SortButton.Value = SpinOptional2
    onNum = SpinOptional2 + 1
    outOfNum = UBound(Opt2_Det) + 1
    txtDetail = Opt2_Det(onNum - 1)
    CheckBox1 = Opt2_Bull(onNum - 1)
    TextBoxDetail4.Text = "Paragraph " & onNum & "/" & outOfNum
    FrameDetail1.Caption = TextBoxDetail4.Text
    txtDetail.SetFocus

End Sub
Private Sub txtDetail_AfterUpdate()
    Opt2_Det(SpinOptional2.Value) = txtDetail.Text
End Sub

Private Sub UserForm_Initialize()
    
    Saved = False
    wingone = False
    
    SpinOptional2.Max = UBound(Opt2_Det)
    SortButton.Max = UBound(Opt2_Det)
    TextBox1.Text = Opt2_title
    txtDetail.Text = Opt2_Det(0)
    If Opt2_Bull(0) = "" Then
        Opt2_Bull(0) = True
    End If
    CheckBox1.Value = Opt2_Bull(0)
    If SpinOptional2.Max = 0 Then
        CommandButton7.Enabled = False
    End If
    SpinOptional2.Value = 0
    SortButton.Value = 0
    TextBox1.SetFocus
End Sub


Private Sub UserForm_Terminate()
    wingone = True
    If Not Saved Then
        Dim Response
        Response = MsgBox("Do you want to Save Optional Category 2?", vbYesNo, "Save")
        Select Case Response
        Case 6
            Call CommandButtonDetail1_Click
        Case 7
            ' do nothing
        End Select
    End If
    MenuForm.CommandButton5.Enabled = True
End Sub

Attribute VB_Name = "ResumeWizard"
Public user As String
Public FirstName As String
Public LastName As String
Public MiddleName As String
Public Suffix As String
Public Street1 As String
Public Street2 As String
Public City1 As String
Public City2 As String
Public State1 As String
Public State2 As String
Public Tel1 As String
Public Tel2 As String
Public Zip1 As String
Public Zip2 As String
Public Fax1 As String
Public Fax2 As String
Public Email As String
Public schools() As String
Public degrees() As String
Public Edu_Locs() As String
Public Edu_Dates() As String
Public Edu_Dates2() As String
Public companies() As String
Public positions() As String
Public Exp_Locs() As String
Public Exp_Dates() As String
Public Sch_Det() As String
Public Comp_det() As String
Public Opt1_Det() As String
Public Opt2_Det() As String

Public Edu_Det(), Edu_Bull(), Exp_Det(), Exp_Bull(), Sch_Bull(), Comp_Bull(), Opt1_Bull(), Opt2_Bull()

Public Opt1_title, Opt2_title As String


Sub ResumeWizard()
Attribute ResumeWizard.VB_Description = "Macro created 01/26/99 by Andrew B. Luck"
Attribute ResumeWizard.VB_ProcData.VB_Invoke_Func = "TemplateProject.NewMacros.AutoExec"
  Load Startup
  Startup.Show
End Sub

Attribute VB_Name = "SaveResMod"
Sub SaveRes()

Dim tempstring As String
Dim scrapfile
Dim i, j As Integer

scrapfile = Options.DefaultFilePath(wdDocumentsPath) + "\_scr_" + user + ".dat"

Documents.Add

Selection.TypeText StripCr(FirstName)
Selection.TypeParagraph
Selection.TypeText StripCr(LastName)
Selection.TypeParagraph
Selection.TypeText StripCr(MiddleName)
Selection.TypeParagraph
Selection.TypeText StripCr(Suffix)
Selection.TypeParagraph
Selection.TypeText StripCr(Street1)
Selection.TypeParagraph
Selection.TypeText StripCr(Street2)
Selection.TypeParagraph
Selection.TypeText StripCr(City1)
Selection.TypeParagraph
Selection.TypeText StripCr(City2)
Selection.TypeParagraph
Selection.TypeText StripCr(State1)
Selection.TypeParagraph
Selection.TypeText StripCr(State2)
Selection.TypeParagraph
Selection.TypeText StripCr(Zip1)
Selection.TypeParagraph
Selection.TypeText StripCr(Zip2)
Selection.TypeParagraph
Selection.TypeText StripCr(Tel1)
Selection.TypeParagraph
Selection.TypeText StripCr(Tel2)
Selection.TypeParagraph
Selection.TypeText StripCr(Fax1)
Selection.TypeParagraph
Selection.TypeText StripCr(Fax2)
Selection.TypeParagraph
Selection.TypeText StripCr(Email)
Selection.TypeParagraph

Selection.TypeText Str(UBound(schools))
Selection.TypeParagraph

For i = 0 To UBound(schools)
    Selection.TypeText StripCr(schools(i))
    Selection.TypeParagraph
    Selection.TypeText StripCr(degrees(i))
    Selection.TypeParagraph
    Selection.TypeText StripCr(Edu_Locs(i))
    Selection.TypeParagraph
    Selection.TypeText StripCr(Edu_Dates(i))
    Selection.TypeParagraph
    Selection.TypeText StripCr(Edu_Dates2(i))
    Selection.TypeParagraph
    If IsEmpty(Edu_Det(i)) Then
        Selection.TypeText "-1"
        Selection.TypeParagraph
    Else
        Selection.TypeText Str(UBound(Edu_Det(i)))
        Selection.TypeParagraph
        For j = 0 To UBound(Edu_Det(i))
            Selection.TypeText StripCr(Edu_Det(i)(j))
            Selection.TypeParagraph
            Selection.TypeText Edu_Bull(i)(j)
            Selection.TypeParagraph
        Next j
    End If
    Next i

Selection.TypeText Str(UBound(companies))
Selection.TypeParagraph

For i = 0 To UBound(companies)
    Selection.TypeText StripCr(companies(i))
    Selection.TypeParagraph
    Selection.TypeText StripCr(positions(i))
    Selection.TypeParagraph
    Selection.TypeText StripCr(Exp_Locs(i))
    Selection.TypeParagraph
    Selection.TypeText StripCr(Exp_Dates(i))
    Selection.TypeParagraph
    If IsEmpty(Exp_Det(i)) Then
        Selection.TypeText "-1"
        Selection.TypeParagraph
    Else
        Selection.TypeText Str(UBound(Exp_Det(i)))
        Selection.TypeParagraph
        For j = 0 To UBound(Exp_Det(i))
            Selection.TypeText StripCr(Exp_Det(i)(j))
            Selection.TypeParagraph
            Selection.TypeText Exp_Bull(i)(j)
            Selection.TypeParagraph
        Next j
    End If
Next i



Selection.TypeText StripCr(Opt1_title)
Selection.TypeParagraph
Selection.TypeText StripCr(Opt2_title)
Selection.TypeParagraph

Selection.TypeText Str(UBound(Opt1_Det))
Selection.TypeParagraph

For i = 0 To UBound(Opt1_Det)
    Selection.TypeText StripCr(Opt1_Det(i))
    Selection.TypeParagraph
    Selection.TypeText Opt1_Bull(i)
    Selection.TypeParagraph
Next i

Selection.TypeText Str(UBound(Opt2_Det))
Selection.TypeParagraph

For i = 0 To UBound(Opt2_Det)
    Selection.TypeText StripCr(Opt2_Det(i))
    Selection.TypeParagraph
    Selection.TypeText Opt2_Bull(i)
    Selection.TypeParagraph
Next i

ActiveDocument.SaveAs scrapfile
Documents(scrapfile).Close

End Sub

Private Function StripCr(thestring) As String

Dim i

For i = 1 To Len(thestring)
    If (Mid(thestring, i, 1) = Chr(13)) Or (Mid(thestring, i, 1) = Chr(10)) Then
        thestring = Left(thestring, i - 1) & " " & Right(thestring, Len(thestring) - i)
    End If
Next i

StripCr = Trim(thestring)

End Function
Attribute VB_Name = "Startup"
Attribute VB_Base = "0{8FE1ED1C-6784-4712-A253-EBD015BB37FC}{0373F623-3E20-4D8C-AFA9-B15B8E5B1808}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False

Private Sub CommandButton1_Click()
    user = TextBox1.Text
    Startup.Hide
    Unload Startup
    Call LoadRes
    Load MenuForm
    MenuForm.Show
End Sub


Private Sub UserForm_Initialize()
    user = "   "
    TextBox1.SetFocus
End Sub
Attribute VB_Name = "ThisDocument"
Attribute VB_Base = "0{00020906-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True


INQUEST-PP=macro
