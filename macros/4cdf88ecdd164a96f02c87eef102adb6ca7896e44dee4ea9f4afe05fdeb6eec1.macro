Attribute VB_Name = "List1"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "List2"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Control = "CheckBox_Sorting, 16, 2, MSForms, CheckBox"
Attribute VB_Control = "Label1, 13, 3, MSForms, Label"
Attribute VB_Control = "cbPDF, 9, 4, MSForms, CommandButton"
Attribute VB_Control = "cbPrintAll, 5, 5, MSForms, CommandButton"
Attribute VB_Control = "ComboBox1, 3, 6, MSForms, ComboBox"
Attribute VB_Control = "cbTisk, 6, 7, MSForms, CommandButton"
Attribute VB_Control = "cbReadCSV, 8, 8, MSForms, CommandButton"
Attribute VB_Control = "CheckBox1, 10, 9, MSForms, CheckBox"
Attribute VB_Control = "comboLanguage, 12, 10, MSForms, ComboBox"
Attribute VB_Control = "CB_ShowCosts, 15, 11, MSForms, CheckBox"
Attribute VB_Control = "cbFitToOnePage, 19, 12, MSForms, CheckBox"
Dim ChangeTest As Boolean


Private Sub cbFitToOnePage_Click()

End Sub

'Tisk do PDF
Private Sub cbPDF_Click()
Dim c As Integer
    
    Set aC = ActiveCell
    SelectedLanguage = comboLanguage.value
    SelectedLanguage_Index = GetSelectedLanguageIndex(SelectedLanguage)
    
    'c = MsgBox(Sheets.Item(6).Range("LNG_DATA").Cells(22, SelectedLanguage_Index), vbYesNo, Sheets.Item(6).Range("LNG_DATA").Cells(30, SelectedLanguage_Index))
        
    Call GetFolder
        
        For i = 1 To ComboBox1.ListCount
            ComboBox1.value = ComboBox1.List(i - 1)
            Call PrintNL2PDF(ComboBox1.value, CInt(i), ComboBox1.ListCount)
        Next i
    
    aC.Select

End Sub
'Nacte soubor
Private Sub cbReadCSV_Click()
    
    Set aC = ActiveCell
    SelectedLanguage = comboLanguage.value
    SelectedLanguage_Index = GetSelectedLanguageIndex(SelectedLanguage)
    Call MainGetInputFile
    aC.Select

End Sub

'Tisk jednoho NL
Private Sub cbTisk_Click()
    
    Set aC = ActiveCell
    SelectedLanguage = comboLanguage.value
    SelectedLanguage_Index = GetSelectedLanguageIndex(SelectedLanguage)
    Call PrintNL(1, 1)
    aC.Select

End Sub

'Doslo ke zmene hodnoty v comboboxu
Private Sub ComboBox1_Change()
Dim aC As Range
    
    Set aC = ActiveCell
    If ChangeTest Then Exit Sub
    
    Call Zacatek
    Call FillSelectedRoute(ComboBox1.value)
    Call CreateDeliveryList
    Call Konec
    
    aC.Select
   
End Sub
'Zmena jazyka
Private Sub comboLanguage_Change()

    Set aC = ActiveCell
    SelectedLanguage = comboLanguage.value
    SelectedLanguage_Index = GetSelectedLanguageIndex(SelectedLanguage)
    
    Call Zacatek
    Call FillSelectedRoute(ComboBox1.value)
    Call CreateDeliveryList
    Call ChangeLanguage_NL
    Call ChangeLanguage_Objednavky
    Call ChangeLanguage_Trasy
    Call ChangeLanguage_Gantt
    Call Konec
    
    aC.Select
    
End Sub

'Tisk vsech
Private Sub cbPrintAll_Click()
Dim c As Integer
    
    Set aC = ActiveCell
    
    SelectedLanguage = comboLanguage.value
    SelectedLanguage_Index = GetSelectedLanguageIndex(SelectedLanguage)
    c = MsgBox(Sheets.Item(6).Range("LNG_DATA").Cells(22, SelectedLanguage_Index), vbYesNo, Sheets.Item(6).Range("LNG_DATA").Cells(30, SelectedLanguage_Index))
        
    If c = 6 Then
        Order = GetOrderForPrint
        Sheets.Item(2).Select
        For i = 1 To UBound(Order)
            For j = 1 To ComboBox1.ListCount
                If ComboBox1.List(j - 1) = Order(i) Then
                    ComboBox1.value = ComboBox1.List(j - 1)
                    Call PrintNL(CInt(i), ComboBox1.ListCount)
                    Exit For
                End If
            Next j
        Next i
    End If
    
    aC.Select

End Sub


'Pri aktivaci listu se naplni combobox
Private Sub Worksheet_Activate()
   
     If Not VehiclesListRange Is Nothing Then
        ChangeTest = True
        SelectedLanguage = comboLanguage.value
        SelectedLanguage_Index = GetSelectedLanguageIndex(SelectedLanguage)
         
        If (comboLanguage.ListCount < 5) Then
            With Sheets.Item(2).comboLanguage
                .Style = fmStyleDropDownList
                .AddItem "AZE"
                .AddItem "CZE"
                .AddItem "ENG"
                .AddItem "ITA"
                .AddItem "POL"
                .AddItem "ROM"
                .AddItem "RUS"
                .AddItem "SVK"
            End With
        End If
            
        ComboBox1.Clear
        ComboBox1.Style = fmStyleDropDownList
        
        If VehiclesListRange.count = 1 Then
           ComboBox1.AddItem VehiclesListRange.value
        Else
           ComboBox1.List = VehiclesListRange.value
        End If
        
        ChangeTest = False
        ComboBox1.value = ComboBox1.List(0)
        Set VehiclesListRange = Nothing
   End If
    
End Sub





Attribute VB_Name = "List3"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "List4"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "List5"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "List6"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "List7"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "ThisWorkbook"
Attribute VB_Base = "0{00020819-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Private Sub Workbook_Open()

    Call MainOpenFile
    
End Sub
Attribute VB_Name = "a00_Declaration"
Public Const PlatesColumnNumber As Integer = 1
Public Const fRow As Integer = 2
Public Const fColumn As Integer = 3
Public Const cInputFilePrefix201 = "RIRO_OUTPUT_ITINERARY_V2.01"
Public Const cInputFilePrefix202 = "RIRO_OUTPUT_ITINERARY_V2.02"
Public Const cInputFilePrefix203 = "RIRO_OUTPUT_ITINERARY_V2.03"
Public Const cInputFilePrefix204 = "RIRO_OUTPUT_ITINERARY_V2.04"
Public Const cInputFilePrefix205 = "RIRO_OUTPUT_ITINERARY_V2.05"
Public Const cInputFilePrefix206 = "RIRO_OUTPUT_ITINERARY_V2.06"
Public Const cInputFilePrefix207 = "RIRO_OUTPUT_ITINERARY_V2.07"
Public Const cInputFilePrefix208 = "RIRO_OUTPUT_ITINERARY_V2.08"
Public Const cInputFilePrefix209 = "RIRO_OUTPUT_ITINERARY_V2.09"

Public Const cHeaderDefinition = "RIRO_OUTPUT_ITINERARY_VERSION"


'Makro related constants
Public Const cMakro_RecalculateArrivalTimes As Boolean = False
Public Const cMakro_MaxSecondsReduction = 150
Public Const cMakro_PauseLenght As Long = 1800
Public Const cMakro_MaxRouteDurationWithoutRest As Long = 4.5 * 3600

Public Const cNotDefined = -1

Public Type VehicleListItem
    PlateNumber As String
    Routes() As Integer
    RoutesUserDefinedIds() As String
    StartTimes() As Long
End Type

Public Type InputLine
    Prefix As String                '1
    DepotId As String               '2
    Depot_SpeedFactor As Integer    '3
    Depot_DepotFactor As Integer    '4
    Depot_CustomerFactor As Integer '5
    RouteOrder As Integer           '6
    RouteNumber As String           '7
    RouteComment As String          '8
    DeliveryDate As Long            '9
    CarrierUserDefinedId As String  '10
    Carrier As String               '11
    DriverUserDefinedId As String   '12
    Driver As String                '13
    VehicleNumber As String         '14
    PlateNumber As String           '15
    VehicleComment As String        '16
    Vehicle_SpeedFactor As Integer    '17
    Vehicle_DepotFactor As Integer    '18
    Vehicle_CustomerFactor As Integer '19
    RouteCosts As Double            '20
    RouteKm As Double               '21
    RouteWaitingTime As Long        '22
    RouteDrivingTime As Long        '23
    NoOfStops As Integer            '24
    LoadWeight As Double            '25
    LoadVolume As Double            '26
    LoadThird As Double             '27
     
    WeightUtilization As Integer    '28
    VolumeUtilization As Integer    '29
    ThirdUtilization As Integer     '30
    
    RouteWeight As Double           '31
    RouteVolume As Double           '32
    RouteThird As Double            '33
    RouteWeightBack As Double       '34
    RouteVolumeBack As Double       '35
    RouteThirdBack As Double        '36
    StartTime As Long               '37
    EndTime As Long                 '38
    LoadingTimeAtDepot As Long      '39
    UnloadingTimeAtDepot As Long    '40
    AdminTimeOut As Long            '41
    AdminTimeIn As Long             '42
    NoStop As Integer               '43
    LocationId As String            '44
    DueDate As Long                 '45
    Name As String                  '46
    Street As String                '47
    HouseNumber As String           '48
    PostCode As String              '49
    City As String                  '50
    Country As String               '51
    LocationComment As String       '52
    LocationComment2 As String      '53
    Mail As String                  '54
    Phone As String                 '55
    GeoX As Double                  '56
    GeoY As Double                  '57
    
    KmFromDepot As Double           '58
    TimeFromDepot As Long           '59
    
    OrderNumber As String           '60
    OrderComment As String          '61
    OrderKm As Double               '62
    WaitingTime As Long             '63
    ArrivalTime As Long             '64
    DepartureTime As Long           '65
    TW1F As Long                    '66
    TW1T As Long                    '67
    TW2F As Long                    '68
    TW2T As Long                    '69
    Kg As Double                    '70
    Volume As Double                '71
    Third As Double                 '72
    KgBack As Double                '73
    VolumeBack As Double            '74
    ThirdBack As Double             '75
    OrderItems As String            '76
        
End Type


Public Type rStop
    NoStop As Integer
    LocationId As String
    OrderId As String
    Name As String
    Street As String
    HouseNumber As String
    PostCode As String
    City As String
    Country As String
    Km As Double
    WaitingTime As Long
    Arrival As Long
    Departure As Long
    TW1F As Long
    TW1T As Long
    TW2F As Long
    TW2T As Long
    Comments As String
    Kg As Double
    Volume As Double
    KgBack As Double
    VolumeBack As Double
    Third As Double
    ThirdBack As Double
    OrderItems As String
End Type

Public Type Route
    RouteNumber As Integer
    RouteUserDefinedId As String
    RouteComment As String
    Carrier As String
    Driver As String
    PlateNumber As String
    VehicleNumber As String
    VehicleComment As String
    DeliveryDate As Long
    StartTime As Long
    EndTime As Long
    Km As Double
    Kg As Double
    KgCapacity As Double
    Volume As Double
    VolumeCapacity As Double
    Third As Double
    ThirdCapacity As Double
    Time As Long
    WaitingTime As Long
    NoOfStops As Integer
    Stops() As rStop
    TimeAtDepot As Long
    TimeAtDepotBack As Long
    AdminTimeOut As Long
    AdminTimeIn As Long
    DueDate As Date
    Costs As Double
End Type

Public InputFilePrefix As String            'Verze vstupniho souboru
Public InputFile As String                  'Cesta a jmeno vstupniho souboru
Public InputLines() As InputLine              'Vstupni data
Public VehiclesList() As VehicleListItem    'Seznam vozidel a pocty jejich rout
Public VehiclesListRange As Range           'Seznam radku    do comboboxu
Public Header As Variant                    'Seznam sloupcu v nakladovem liste
Public HeaderRoutes As Variant              'Seznam sloupcu v seznamu tras
Public HeaderOrders As Variant              'Seznam sloupcu v seznamu objednavek
Public SelectedRoute As Route               'Vybrana routa pro tisk
Public Routes() As Route                    'Seznam vsech tras
Public SelectedLanguage As String           'Vybrany jazyk
Public SelectedLanguage_Index As Integer    'Index vybraneho jazyka
Public DepotComments As String
Public ExportFolder As String


Public sDate() As String





Attribute VB_Name = "a01_Main"
'Provede import vstupnich dat
Sub MainGetInputFile()

    Range("a1").Select

    Call Zacatek
    Call GetCsvFile
    Call GetSourceData
    Call GetVehicleList
    Call CreateListOfOrders
    Call MainCreateListOfRoutes
    Call MainCreateGanttChart
    Call Konec
    
End Sub


Sub MainOpenFile()

    Call Zacatek
    Call GetVehicleList
    Call Konec

End Sub


Attribute VB_Name = "a10_GetSourceData"
Option Explicit
'Pripravi vstupni data do listu Source
Sub GetSourceData()
    ReadCSVFile
    PrintSourceData
End Sub
'Nacte CSV soubor a vyplni objekty
Sub ReadCSVFile()

Dim line As String
Dim arrayOfElements
Dim lineNumber As Integer
Dim c As Integer
    
    lineNumber = 0
  
    ReDim InputLines(1 To 1)
  
    Open InputFile For Input As #1 ' Open file for input
        Do While Not EOF(1) ' Loop until end of file
            
            Line Input #1, line
            arrayOfElements = Split(line, ";")
            If arrayOfElements(0) <> cHeaderDefinition Then
               
               lineNumber = lineNumber + 1
               ReDim Preserve InputLines(1 To lineNumber)
               
               Select Case Right(arrayOfElements(0), 27)
                   Case cInputFilePrefix201:
                       With InputLines(lineNumber)
                           .Prefix = Right(arrayOfElements(0), 27)
                           .RouteOrder = arrayOfElements(1)
                           .RouteNumber = arrayOfElements(2)
                           .DeliveryDate = arrayOfElements(3)
                           .VehicleNumber = arrayOfElements(4)
                           .PlateNumber = arrayOfElements(5)
                           .VehicleComment = ""
                           .RouteCosts = String2Double(CStr(arrayOfElements(6)))
                           .RouteKm = String2Double(CStr(arrayOfElements(7)))
                           .RouteDrivingTime = String2Double(CStr(arrayOfElements(8)))
                           .NoOfStops = arrayOfElements(9)
                           .LoadWeight = String2Double(arrayOfElements(10))
                           .LoadVolume = String2Double(CStr(arrayOfElements(11)))
                           .LoadThird = 0
                           .RouteWeight = String2Double(CStr(arrayOfElements(12)))
                           .RouteVolume = String2Double(CStr(arrayOfElements(13)))
                           .RouteThird = 0
                           .RouteWeightBack = String2Double(CStr(arrayOfElements(14)))
                           .RouteVolumeBack = String2Double(CStr(arrayOfElements(15)))
                           .RouteThirdBack = 0
                           .StartTime = arrayOfElements(16)
                           .EndTime = arrayOfElements(17)
                           .LoadingTimeAtDepot = arrayOfElements(18)
                           .UnloadingTimeAtDepot = arrayOfElements(19)
                           .AdminTimeOut = arrayOfElements(20)
                           .AdminTimeIn = arrayOfElements(21)
                           .NoStop = arrayOfElements(22)
                           .LocationId = arrayOfElements(23)
                           .DueDate = arrayOfElements(24)
                           .Name = arrayOfElements(25)
                           .Street = arrayOfElements(26)
                           .HouseNumber = arrayOfElements(27)
                           .PostCode = arrayOfElements(28)
                           .City = arrayOfElements(29)
                           .Country = arrayOfElements(30)
                           .LocationComment = arrayOfElements(31)
                           .GeoX = String2Double(CStr(arrayOfElements(32)))
                           .GeoY = String2Double(CStr(arrayOfElements(33)))
                           .OrderNumber = CStr(arrayOfElements(34))
                           .OrderComment = arrayOfElements(35)
                           .OrderKm = String2Double(CStr(arrayOfElements(36)))
                           .ArrivalTime = arrayOfElements(37)
                           .DepartureTime = arrayOfElements(38)
                           .TW1F = arrayOfElements(39)
                           .TW1T = arrayOfElements(40)
                           .TW2F = arrayOfElements(41)
                           .TW2T = arrayOfElements(42)
                           .Kg = String2Double(CStr(arrayOfElements(43)))
                           .Volume = String2Double(CStr(arrayOfElements(44)))
                           .Third = 0
                           .KgBack = String2Double(CStr(arrayOfElements(45)))
                           .VolumeBack = String2Double(CStr(arrayOfElements(46)))
                           .ThirdBack = 0
                       End With
                   Case cInputFilePrefix202:
                       With InputLines(lineNumber)
                           .Prefix = Right(arrayOfElements(0), 27)
                           .RouteOrder = arrayOfElements(1)
                           .RouteNumber = arrayOfElements(2)
                           .DeliveryDate = arrayOfElements(3)
                           .VehicleNumber = arrayOfElements(4)
                           .PlateNumber = arrayOfElements(5)
                           .VehicleComment = arrayOfElements(6)
                           .RouteCosts = String2Double(CStr(arrayOfElements(7)))
                           .RouteKm = String2Double(CStr(arrayOfElements(8)))
                           .RouteDrivingTime = String2Double(CStr(arrayOfElements(9)))
                           .NoOfStops = arrayOfElements(10)
                           .LoadWeight = String2Double(arrayOfElements(11))
                           .LoadVolume = String2Double(CStr(arrayOfElements(12)))
                           .LoadThird = String2Double(CStr(arrayOfElements(13)))
                           .RouteWeight = String2Double(CStr(arrayOfElements(14)))
                           .RouteVolume = String2Double(CStr(arrayOfElements(15)))
                           .RouteThird = String2Double(CStr(arrayOfElements(16)))
                           .RouteWeightBack = String2Double(CStr(arrayOfElements(17)))
                           .RouteVolumeBack = String2Double(CStr(arrayOfElements(18)))
                           .RouteThirdBack = String2Double(CStr(arrayOfElements(19)))
                           .StartTime = arrayOfElements(20)
                           .EndTime = arrayOfElements(21)
                           .LoadingTimeAtDepot = arrayOfElements(22)
                           .UnloadingTimeAtDepot = arrayOfElements(23)
                           .AdminTimeOut = arrayOfElements(24)
                           .AdminTimeIn = arrayOfElements(25)
                           .NoStop = arrayOfElements(26)
                           .LocationId = arrayOfElements(27)
                           .DueDate = arrayOfElements(28)
                           .Name = arrayOfElements(29)
                           .Street = arrayOfElements(30)
                           .HouseNumber = arrayOfElements(31)
                           .PostCode = arrayOfElements(32)
                           .City = arrayOfElements(33)
                           .Country = arrayOfElements(34)
                           .LocationComment = arrayOfElements(35)
                           .GeoX = String2Double(CStr(arrayOfElements(36)))
                           .GeoY = String2Double(CStr(arrayOfElements(37)))
                           .OrderNumber = arrayOfElements(38)
                           .OrderComment = arrayOfElements(39)
                           .OrderKm = String2Double(CStr(arrayOfElements(40)))
                           .ArrivalTime = arrayOfElements(41)
                           .DepartureTime = arrayOfElements(42)
                           .TW1F = arrayOfElements(43)
                           .TW1T = arrayOfElements(44)
                           .TW2F = arrayOfElements(45)
                           .TW2T = arrayOfElements(46)
                           .Kg = String2Double(CStr(arrayOfElements(47)))
                           .Volume = String2Double(CStr(arrayOfElements(48)))
                           .Third = String2Double(CStr(arrayOfElements(49)))
                           .KgBack = String2Double(CStr(arrayOfElements(50)))
                           .VolumeBack = String2Double(CStr(arrayOfElements(51)))
                           .ThirdBack = String2Double(CStr(arrayOfElements(52)))
                       End With
                   Case cInputFilePrefix203:
                       With InputLines(lineNumber)
                           .Prefix = Right(arrayOfElements(0), 27)
                           .RouteOrder = arrayOfElements(1)
                           .RouteNumber = arrayOfElements(2)
                           .RouteComment = arrayOfElements(3)
                           .DeliveryDate = arrayOfElements(4)
                           .VehicleNumber = arrayOfElements(5)
                           .PlateNumber = arrayOfElements(6)
                           .VehicleComment = arrayOfElements(7)
                           .RouteCosts = String2Double(CStr(arrayOfElements(8)))
                           .RouteKm = String2Double(CStr(arrayOfElements(9)))
                           .RouteWaitingTime = arrayOfElements(10)
                           .RouteDrivingTime = String2Double(CStr(arrayOfElements(11)))
                           .NoOfStops = arrayOfElements(12)
                           .LoadWeight = String2Double(CStr(arrayOfElements(13)))
                           .LoadVolume = String2Double(CStr(arrayOfElements(14)))
                           .LoadThird = String2Double(CStr(arrayOfElements(15)))
                           .RouteWeight = String2Double(CStr(arrayOfElements(16)))
                           .RouteVolume = String2Double(CStr(arrayOfElements(17)))
                           .RouteThird = String2Double(CStr(arrayOfElements(18)))
                           .RouteWeightBack = String2Double(CStr(arrayOfElements(19)))
                           .RouteVolumeBack = String2Double(CStr(arrayOfElements(20)))
                           .RouteThirdBack = String2Double(CStr(arrayOfElements(21)))
                           .StartTime = arrayOfElements(22)
                           .EndTime = arrayOfElements(23)
                           .LoadingTimeAtDepot = arrayOfElements(24)
                           .UnloadingTimeAtDepot = arrayOfElements(25)
                           .AdminTimeOut = arrayOfElements(26)
                           .AdminTimeIn = arrayOfElements(27)
                           .NoStop = arrayOfElements(28)
                           .LocationId = arrayOfElements(29)
                           .DueDate = arrayOfElements(30)
                           .Name = arrayOfElements(31)
                           .Street = arrayOfElements(32)
                           .HouseNumber = arrayOfElements(33)
                           .PostCode = arrayOfElements(34)
                           .City = arrayOfElements(35)
                           .Country = arrayOfElements(36)
                           .LocationComment = arrayOfElements(37)
                           .Mail = arrayOfElements(38)
                           .Phone = arrayOfElements(39)
                           .GeoX = String2Double(CStr(arrayOfElements(40)))
                           .GeoY = String2Double(CStr(arrayOfElements(41)))
                           .OrderNumber = arrayOfElements(42)
                           .OrderComment = arrayOfElements(43)
                           .OrderKm = String2Double(CStr(arrayOfElements(44)))
                           .WaitingTime = arrayOfElements(45)
                           .ArrivalTime = arrayOfElements(46)
                           .DepartureTime = arrayOfElements(47)
                           .TW1F = arrayOfElements(48)
                           .TW1T = arrayOfElements(49)
                           .TW2F = arrayOfElements(50)
                           .TW2T = arrayOfElements(51)
                           .Kg = String2Double(CStr(arrayOfElements(52)))
                           .Volume = String2Double(CStr(arrayOfElements(53)))
                           .Third = String2Double(CStr(arrayOfElements(54)))
                           .KgBack = String2Double(CStr(arrayOfElements(55)))
                           .VolumeBack = String2Double(CStr(arrayOfElements(56)))
                           .ThirdBack = String2Double(CStr(arrayOfElements(57)))
                       End With
                   Case cInputFilePrefix204:
                       With InputLines(lineNumber)
                           .Prefix = Right(arrayOfElements(0), 27)
                           .RouteOrder = arrayOfElements(1)
                           .RouteNumber = arrayOfElements(2)
                           .RouteComment = arrayOfElements(3)
                           .DeliveryDate = arrayOfElements(4)
                           .Carrier = arrayOfElements(5)
                           .Driver = arrayOfElements(6)
                           .VehicleNumber = arrayOfElements(7)
                           .PlateNumber = arrayOfElements(8)
                           .VehicleComment = arrayOfElements(9)
                           .RouteCosts = String2Double(CStr(arrayOfElements(10)))
                           .RouteKm = String2Double(CStr(arrayOfElements(11)))
                           .RouteWaitingTime = arrayOfElements(12)
                           .RouteDrivingTime = String2Double(CStr(arrayOfElements(13)))
                           .NoOfStops = arrayOfElements(14)
                           .LoadWeight = String2Double(CStr(arrayOfElements(15)))
                           .LoadVolume = String2Double(CStr(arrayOfElements(16)))
                           .LoadThird = String2Double(CStr(arrayOfElements(17)))
                           .RouteWeight = String2Double(CStr(arrayOfElements(18)))
                           .RouteVolume = String2Double(CStr(arrayOfElements(19)))
                           .RouteThird = String2Double(CStr(arrayOfElements(20)))
                           .RouteWeightBack = String2Double(CStr(arrayOfElements(21)))
                           .RouteVolumeBack = String2Double(CStr(arrayOfElements(22)))
                           .RouteThirdBack = String2Double(CStr(arrayOfElements(23)))
                           .StartTime = arrayOfElements(24)
                           .EndTime = arrayOfElements(25)
                           .LoadingTimeAtDepot = arrayOfElements(26)
                           .UnloadingTimeAtDepot = arrayOfElements(27)
                           .AdminTimeOut = arrayOfElements(28)
                           .AdminTimeIn = arrayOfElements(29)
                           .NoStop = arrayOfElements(30)
                           .LocationId = arrayOfElements(31)
                           .DueDate = arrayOfElements(32)
                           .Name = arrayOfElements(33)
                           .Street = arrayOfElements(34)
                           .HouseNumber = arrayOfElements(35)
                           .PostCode = arrayOfElements(36)
                           .City = arrayOfElements(37)
                           .Country = arrayOfElements(38)
                           .LocationComment = arrayOfElements(39)
                           .Mail = arrayOfElements(40)
                           .Phone = arrayOfElements(41)
                           .GeoX = String2Double(CStr(arrayOfElements(42)))
                           .GeoY = String2Double(CStr(arrayOfElements(43)))
                           .OrderNumber = arrayOfElements(44)
                           .OrderComment = arrayOfElements(45)
                           .OrderKm = String2Double(CStr(arrayOfElements(46)))
                           .WaitingTime = arrayOfElements(47)
                           .ArrivalTime = arrayOfElements(48)
                           .DepartureTime = arrayOfElements(49)
                           .TW1F = arrayOfElements(50)
                           .TW1T = arrayOfElements(51)
                           .TW2F = arrayOfElements(52)
                           .TW2T = arrayOfElements(53)
                           .Kg = String2Double(CStr(arrayOfElements(54)))
                           .Volume = String2Double(CStr(arrayOfElements(55)))
                           .Third = String2Double(CStr(arrayOfElements(56)))
                           .KgBack = String2Double(CStr(arrayOfElements(57)))
                           .VolumeBack = String2Double(CStr(arrayOfElements(58)))
                           .ThirdBack = String2Double(CStr(arrayOfElements(59)))
                       End With
                   Case cInputFilePrefix205
                        With InputLines(lineNumber)
                           .Prefix = Right(arrayOfElements(0), 27)
                           .DepotId = arrayOfElements(1)
                           .RouteOrder = arrayOfElements(2)
                           .RouteNumber = arrayOfElements(3)
                           .RouteComment = arrayOfElements(4)
                           .DeliveryDate = arrayOfElements(5)
                           .Carrier = arrayOfElements(6)
                           .Driver = arrayOfElements(7)
                           .VehicleNumber = arrayOfElements(8)
                           .PlateNumber = arrayOfElements(9)
                           .VehicleComment = arrayOfElements(10)
                           .RouteCosts = String2Double(CStr(arrayOfElements(11)))
                           .RouteKm = String2Double(CStr(arrayOfElements(12)))
                           .RouteWaitingTime = arrayOfElements(13)
                           .RouteDrivingTime = String2Double(CStr(arrayOfElements(14)))
                           .NoOfStops = arrayOfElements(15)
                           .LoadWeight = String2Double(CStr(arrayOfElements(16)))
                           .LoadVolume = String2Double(CStr(arrayOfElements(17)))
                           .LoadThird = String2Double(CStr(arrayOfElements(18)))
                           .RouteWeight = String2Double(CStr(arrayOfElements(19)))
                           .RouteVolume = String2Double(CStr(arrayOfElements(20)))
                           .RouteThird = String2Double(CStr(arrayOfElements(21)))
                           .RouteWeightBack = String2Double(CStr(arrayOfElements(22)))
                           .RouteVolumeBack = String2Double(CStr(arrayOfElements(23)))
                           .RouteThirdBack = String2Double(CStr(arrayOfElements(24)))
                           .StartTime = arrayOfElements(25)
                           .EndTime = arrayOfElements(26)
                           .LoadingTimeAtDepot = arrayOfElements(27)
                           .UnloadingTimeAtDepot = arrayOfElements(28)
                           .AdminTimeOut = arrayOfElements(29)
                           .AdminTimeIn = arrayOfElements(30)
                           .NoStop = arrayOfElements(31)
                           .LocationId = arrayOfElements(32)
                           .DueDate = arrayOfElements(33)
                           .Name = arrayOfElements(34)
                           .Street = arrayOfElements(35)
                           .HouseNumber = arrayOfElements(36)
                           .PostCode = arrayOfElements(37)
                           .City = arrayOfElements(38)
                           .Country = arrayOfElements(39)
                           .LocationComment = arrayOfElements(40)
                           .Mail = arrayOfElements(41)
                           .Phone = arrayOfElements(42)
                           .GeoX = String2Double(CStr(arrayOfElements(43)))
                           .GeoY = String2Double(CStr(arrayOfElements(44)))
                           .OrderNumber = arrayOfElements(45)
                           .OrderComment = arrayOfElements(46)
                           .OrderKm = String2Double(CStr(arrayOfElements(47)))
                           .WaitingTime = arrayOfElements(48)
                           .ArrivalTime = arrayOfElements(49)
                           .DepartureTime = arrayOfElements(50)
                           .TW1F = arrayOfElements(51)
                           .TW1T = arrayOfElements(52)
                           .TW2F = arrayOfElements(53)
                           .TW2T = arrayOfElements(54)
                           .Kg = String2Double(CStr(arrayOfElements(55)))
                           .Volume = String2Double(CStr(arrayOfElements(56)))
                           .Third = String2Double(CStr(arrayOfElements(57)))
                           .KgBack = String2Double(CStr(arrayOfElements(58)))
                           .VolumeBack = String2Double(CStr(arrayOfElements(59)))
                           .ThirdBack = String2Double(CStr(arrayOfElements(60)))
                           .OrderItems = arrayOfElements(61)
                        End With
                   Case cInputFilePrefix206
                        With InputLines(lineNumber)
                           .Prefix = Right(arrayOfElements(0), 27)
                           .DepotId = arrayOfElements(1)
                           .RouteOrder = arrayOfElements(2)
                           .RouteNumber = arrayOfElements(3)
                           .RouteComment = arrayOfElements(4)
                           .DeliveryDate = arrayOfElements(5)
                           .CarrierUserDefinedId = arrayOfElements(6)
                           .Carrier = arrayOfElements(7)
                           .DriverUserDefinedId = arrayOfElements(8)
                           .Driver = arrayOfElements(9)
                           .VehicleNumber = arrayOfElements(10)
                           .PlateNumber = arrayOfElements(11)
                           .VehicleComment = arrayOfElements(12)
                           .RouteCosts = String2Double(CStr(arrayOfElements(13)))
                           .RouteKm = String2Double(CStr(arrayOfElements(14)))
                           .RouteWaitingTime = arrayOfElements(15)
                           .RouteDrivingTime = String2Double(CStr(arrayOfElements(16)))
                           .NoOfStops = arrayOfElements(17)
                           .LoadWeight = String2Double(CStr(arrayOfElements(18)))
                           .LoadVolume = String2Double(CStr(arrayOfElements(19)))
                           .LoadThird = String2Double(CStr(arrayOfElements(20)))
                           .RouteWeight = String2Double(CStr(arrayOfElements(21)))
                           .RouteVolume = String2Double(CStr(arrayOfElements(22)))
                           .RouteThird = String2Double(CStr(arrayOfElements(23)))
                           .RouteWeightBack = String2Double(CStr(arrayOfElements(24)))
                           .RouteVolumeBack = String2Double(CStr(arrayOfElements(25)))
                           .RouteThirdBack = String2Double(CStr(arrayOfElements(26)))
                           .StartTime = arrayOfElements(27)
                           .EndTime = arrayOfElements(28)
                           .LoadingTimeAtDepot = arrayOfElements(29)
                           .UnloadingTimeAtDepot = arrayOfElements(30)
                           .AdminTimeOut = arrayOfElements(31)
                           .AdminTimeIn = arrayOfElements(32)
                           .NoStop = arrayOfElements(33)
                           .LocationId = arrayOfElements(34)
                           .DueDate = arrayOfElements(35)
                           .Name = arrayOfElements(36)
                           .Street = arrayOfElements(37)
                           .HouseNumber = arrayOfElements(38)
                           .PostCode = arrayOfElements(39)
                           .City = arrayOfElements(40)
                           .Country = arrayOfElements(41)
                           .LocationComment = arrayOfElements(42)
                           .Mail = arrayOfElements(43)
                           .Phone = arrayOfElements(44)
                           .GeoX = String2Double(CStr(arrayOfElements(45)))
                           .GeoY = String2Double(CStr(arrayOfElements(46)))
                           .OrderNumber = arrayOfElements(47)
                           .OrderComment = arrayOfElements(48)
                           .OrderKm = String2Double(CStr(arrayOfElements(49)))
                           .WaitingTime = arrayOfElements(50)
                           .ArrivalTime = arrayOfElements(51)
                           .DepartureTime = arrayOfElements(52)
                           .TW1F = arrayOfElements(53)
                           .TW1T = arrayOfElements(54)
                           .TW2F = arrayOfElements(55)
                           .TW2T = arrayOfElements(56)
                           .Kg = String2Double(CStr(arrayOfElements(57)))
                           .Volume = String2Double(CStr(arrayOfElements(58)))
                           .Third = String2Double(CStr(arrayOfElements(59)))
                           .KgBack = String2Double(CStr(arrayOfElements(60)))
                           .VolumeBack = String2Double(CStr(arrayOfElements(61)))
                           .ThirdBack = String2Double(CStr(arrayOfElements(62)))
                           .OrderItems = arrayOfElements(63)
                        End With
                   Case cInputFilePrefix207:
                        With InputLines(lineNumber)
                           .Prefix = Right(arrayOfElements(0), 27)
                           .DepotId = arrayOfElements(1)
                           .Depot_SpeedFactor = arrayOfElements(2)
                           .Depot_DepotFactor = arrayOfElements(3)
                           .Depot_CustomerFactor = arrayOfElements(4)
                           .RouteOrder = arrayOfElements(5)
                           .RouteNumber = arrayOfElements(6)
                           .RouteComment = arrayOfElements(7)
                           .DeliveryDate = arrayOfElements(8)
                           .CarrierUserDefinedId = arrayOfElements(9)
                           .Carrier = arrayOfElements(10)
                           .DriverUserDefinedId = arrayOfElements(11)
                           .Driver = arrayOfElements(12)
                           .VehicleNumber = arrayOfElements(13)
                           .PlateNumber = arrayOfElements(14)
                           .VehicleComment = arrayOfElements(15)
                           .Vehicle_SpeedFactor = arrayOfElements(16)
                           .Vehicle_DepotFactor = arrayOfElements(17)
                           .Vehicle_CustomerFactor = arrayOfElements(18)
                           .RouteCosts = String2Double(CStr(arrayOfElements(19)))
                           .RouteKm = String2Double(CStr(arrayOfElements(20)))
                           .RouteWaitingTime = arrayOfElements(21)
                           .RouteDrivingTime = String2Double(CStr(arrayOfElements(22)))
                           .NoOfStops = arrayOfElements(23)
                           .LoadWeight = String2Double(CStr(arrayOfElements(24)))
                           .LoadVolume = String2Double(CStr(arrayOfElements(25)))
                           .LoadThird = String2Double(CStr(arrayOfElements(26)))
                           .RouteWeight = String2Double(CStr(arrayOfElements(27)))
                           .RouteVolume = String2Double(CStr(arrayOfElements(28)))
                           .RouteThird = String2Double(CStr(arrayOfElements(29)))
                           .RouteWeightBack = String2Double(CStr(arrayOfElements(30)))
                           .RouteVolumeBack = String2Double(CStr(arrayOfElements(31)))
                           .RouteThirdBack = String2Double(CStr(arrayOfElements(32)))
                           .StartTime = arrayOfElements(33)
                           .EndTime = arrayOfElements(34)
                           .LoadingTimeAtDepot = arrayOfElements(35)
                           .UnloadingTimeAtDepot = arrayOfElements(36)
                           .AdminTimeOut = arrayOfElements(37)
                           .AdminTimeIn = arrayOfElements(38)
                           .NoStop = arrayOfElements(39)
                           .LocationId = arrayOfElements(40)
                           .DueDate = arrayOfElements(41)
                           .Name = arrayOfElements(42)
                           .Street = arrayOfElements(43)
                           .HouseNumber = arrayOfElements(44)
                           .PostCode = arrayOfElements(45)
                           .City = arrayOfElements(46)
                           .Country = arrayOfElements(47)
                           .LocationComment = arrayOfElements(48)
                           .Mail = arrayOfElements(49)
                           .Phone = arrayOfElements(50)
                           .GeoX = String2Double(CStr(arrayOfElements(51)))
                           .GeoY = String2Double(CStr(arrayOfElements(52)))
                           .OrderNumber = arrayOfElements(53)
                           .OrderComment = arrayOfElements(54)
                           .OrderKm = String2Double(CStr(arrayOfElements(55)))
                           .WaitingTime = arrayOfElements(56)
                           .ArrivalTime = arrayOfElements(57)
                           .DepartureTime = arrayOfElements(58)
                           .TW1F = arrayOfElements(59)
                           .TW1T = arrayOfElements(60)
                           .TW2F = arrayOfElements(61)
                           .TW2T = arrayOfElements(62)
                           .Kg = String2Double(CStr(arrayOfElements(63)))
                           .Volume = String2Double(CStr(arrayOfElements(64)))
                           .Third = String2Double(CStr(arrayOfElements(65)))
                           .KgBack = String2Double(CStr(arrayOfElements(66)))
                           .VolumeBack = String2Double(CStr(arrayOfElements(67)))
                           .ThirdBack = String2Double(CStr(arrayOfElements(68)))
                           .OrderItems = arrayOfElements(69)
                        End With
                   Case cInputFilePrefix208:
                        With InputLines(lineNumber)
                           .Prefix = Right(arrayOfElements(0), 27)
                           .DepotId = arrayOfElements(1)
                           .Depot_SpeedFactor = arrayOfElements(2)
                           .Depot_DepotFactor = arrayOfElements(3)
                           .Depot_CustomerFactor = arrayOfElements(4)
                           .RouteOrder = arrayOfElements(5)
                           .RouteNumber = arrayOfElements(6)
                           .RouteComment = arrayOfElements(7)
                           .DeliveryDate = arrayOfElements(8)
                           .CarrierUserDefinedId = arrayOfElements(9)
                           .Carrier = arrayOfElements(10)
                           .DriverUserDefinedId = arrayOfElements(11)
                           .Driver = arrayOfElements(12)
                           .VehicleNumber = arrayOfElements(13)
                           .PlateNumber = arrayOfElements(14)
                           .VehicleComment = arrayOfElements(15)
                           .Vehicle_SpeedFactor = arrayOfElements(16)
                           .Vehicle_DepotFactor = arrayOfElements(17)
                           .Vehicle_CustomerFactor = arrayOfElements(18)
                           .RouteCosts = String2Double(CStr(arrayOfElements(19)))
                           .RouteKm = String2Double(CStr(arrayOfElements(20)))
                           .RouteWaitingTime = arrayOfElements(21)
                           .RouteDrivingTime = String2Double(CStr(arrayOfElements(22)))
                           .NoOfStops = arrayOfElements(23)
                           .LoadWeight = String2Double(CStr(arrayOfElements(24)))
                           .LoadVolume = String2Double(CStr(arrayOfElements(25)))
                           .LoadThird = String2Double(CStr(arrayOfElements(26)))
                           .WeightUtilization = arrayOfElements(27)
                           .VolumeUtilization = arrayOfElements(28)
                           .ThirdUtilization = arrayOfElements(29)
                           .RouteWeight = String2Double(CStr(arrayOfElements(30)))
                           .RouteVolume = String2Double(CStr(arrayOfElements(31)))
                           .RouteThird = String2Double(CStr(arrayOfElements(32)))
                           .RouteWeightBack = String2Double(CStr(arrayOfElements(33)))
                           .RouteVolumeBack = String2Double(CStr(arrayOfElements(34)))
                           .RouteThirdBack = String2Double(CStr(arrayOfElements(35)))
                           .StartTime = arrayOfElements(36)
                           .EndTime = arrayOfElements(37)
                           .LoadingTimeAtDepot = arrayOfElements(38)
                           .UnloadingTimeAtDepot = arrayOfElements(39)
                           .AdminTimeOut = arrayOfElements(40)
                           .AdminTimeIn = arrayOfElements(41)
                           .NoStop = arrayOfElements(42)
                           .LocationId = arrayOfElements(43)
                           .DueDate = arrayOfElements(44)
                           .Name = arrayOfElements(45)
                           .Street = arrayOfElements(46)
                           .HouseNumber = arrayOfElements(47)
                           .PostCode = arrayOfElements(48)
                           .City = arrayOfElements(49)
                           .Country = arrayOfElements(50)
                           .LocationComment = arrayOfElements(51)
                           
                           .LocationComment2 = arrayOfElements(52)
                           
                           .Mail = arrayOfElements(53)
                           .Phone = arrayOfElements(54)
                           .GeoX = String2Double(CStr(arrayOfElements(55)))
                           .GeoY = String2Double(CStr(arrayOfElements(56)))
                           .OrderNumber = arrayOfElements(57)
                           .OrderComment = arrayOfElements(58)
                           .OrderKm = String2Double(CStr(arrayOfElements(59)))
                           .WaitingTime = arrayOfElements(60)
                           .ArrivalTime = arrayOfElements(61)
                           .DepartureTime = arrayOfElements(62)
                           .TW1F = arrayOfElements(63)
                           .TW1T = arrayOfElements(64)
                           .TW2F = arrayOfElements(65)
                           .TW2T = arrayOfElements(66)
                           .Kg = String2Double(CStr(arrayOfElements(67)))
                           .Volume = String2Double(CStr(arrayOfElements(68)))
                           .Third = String2Double(CStr(arrayOfElements(69)))
                           .KgBack = String2Double(CStr(arrayOfElements(70)))
                           .VolumeBack = String2Double(CStr(arrayOfElements(71)))
                           .ThirdBack = String2Double(CStr(arrayOfElements(72)))
                           .OrderItems = arrayOfElements(73)
                        End With
                   Case cInputFilePrefix209:
                        With InputLines(lineNumber)
                           .Prefix = Right(arrayOfElements(0), 27)
                           .DepotId = arrayOfElements(1)
                           .Depot_SpeedFactor = arrayOfElements(2)
                           .Depot_DepotFactor = arrayOfElements(3)
                           .Depot_CustomerFactor = arrayOfElements(4)
                           .RouteOrder = arrayOfElements(5)
                           .RouteNumber = arrayOfElements(6)
                           .RouteComment = arrayOfElements(7)
                           .DeliveryDate = arrayOfElements(8)
                           .CarrierUserDefinedId = arrayOfElements(9)
                           .Carrier = arrayOfElements(10)
                           .DriverUserDefinedId = arrayOfElements(11)
                           .Driver = arrayOfElements(12)
                           .VehicleNumber = arrayOfElements(13)
                           .PlateNumber = arrayOfElements(14)
                           .VehicleComment = arrayOfElements(15)
                           .Vehicle_SpeedFactor = arrayOfElements(16)
                           .Vehicle_DepotFactor = arrayOfElements(17)
                           .Vehicle_CustomerFactor = arrayOfElements(18)
                           .RouteCosts = String2Double(CStr(arrayOfElements(19)))
                           .RouteKm = String2Double(CStr(arrayOfElements(20)))
                           .RouteWaitingTime = arrayOfElements(21)
                           .RouteDrivingTime = String2Double(CStr(arrayOfElements(22)))
                           .NoOfStops = arrayOfElements(23)
                           .LoadWeight = String2Double(CStr(arrayOfElements(24)))
                           .LoadVolume = String2Double(CStr(arrayOfElements(25)))
                           .LoadThird = String2Double(CStr(arrayOfElements(26)))
                           .WeightUtilization = arrayOfElements(27)
                           .VolumeUtilization = arrayOfElements(28)
                           .ThirdUtilization = arrayOfElements(29)
                           .RouteWeight = String2Double(CStr(arrayOfElements(30)))
                           .RouteVolume = String2Double(CStr(arrayOfElements(31)))
                           .RouteThird = String2Double(CStr(arrayOfElements(32)))
                           .RouteWeightBack = String2Double(CStr(arrayOfElements(33)))
                           .RouteVolumeBack = String2Double(CStr(arrayOfElements(34)))
                           .RouteThirdBack = String2Double(CStr(arrayOfElements(35)))
                           .StartTime = arrayOfElements(36)
                           .EndTime = arrayOfElements(37)
                           .LoadingTimeAtDepot = arrayOfElements(38)
                           .UnloadingTimeAtDepot = arrayOfElements(39)
                           .AdminTimeOut = arrayOfElements(40)
                           .AdminTimeIn = arrayOfElements(41)
                           .NoStop = arrayOfElements(42)
                           .LocationId = arrayOfElements(43)
                           .DueDate = arrayOfElements(44)
                           .Name = arrayOfElements(45)
                           .Street = arrayOfElements(46)
                           .HouseNumber = arrayOfElements(47)
                           .PostCode = arrayOfElements(48)
                           .City = arrayOfElements(49)
                           .Country = arrayOfElements(50)
                           .LocationComment = arrayOfElements(51)
                           .LocationComment2 = arrayOfElements(52)
                           .Mail = arrayOfElements(53)
                           .Phone = arrayOfElements(54)
                           .GeoX = String2Double(CStr(arrayOfElements(55)))
                           .GeoY = String2Double(CStr(arrayOfElements(56)))
                           .KmFromDepot = String2Double(CStr(arrayOfElements(57)))
                           .TimeFromDepot = arrayOfElements(58)
                           .OrderNumber = arrayOfElements(59)
                           .OrderComment = arrayOfElements(60)
                           .OrderKm = String2Double(CStr(arrayOfElements(61)))
                           .WaitingTime = arrayOfElements(62)
                           .ArrivalTime = arrayOfElements(63)
                           .DepartureTime = arrayOfElements(64)
                           .TW1F = arrayOfElements(65)
                           .TW1T = arrayOfElements(66)
                           .TW2F = arrayOfElements(67)
                           .TW2T = arrayOfElements(68)
                           .Kg = String2Double(CStr(arrayOfElements(69)))
                           .Volume = String2Double(CStr(arrayOfElements(70)))
                           .Third = String2Double(CStr(arrayOfElements(71)))
                           .KgBack = String2Double(CStr(arrayOfElements(72)))
                           .VolumeBack = String2Double(CStr(arrayOfElements(73)))
                           .ThirdBack = String2Double(CStr(arrayOfElements(74)))
                           .OrderItems = arrayOfElements(75)
                        End With
                   Case Else:
                       c = MsgBox(Sheets.Item(6).Range("LNG_DATA").Cells(26, SelectedLanguage_Index), vbCritical, Sheets.Item(6).Range("LNG_DATA").Cells(25, SelectedLanguage_Index))
                       Call Konec
                       End
               End Select
            End If
        Loop
    Close #1 ' Close file.
    
End Sub
'Vytiskne data na list source
Sub PrintSourceData()
Dim i As Integer

    Sheets("Source").Select
    Cells.Clear
    
    For i = 1 To UBound(InputLines)
        With ActiveSheet
            'verze 2.01
            .Cells(i, 1) = UTF8_Decode(InputLines(i).Prefix)
            .Cells(i, 2) = InputLines(i).RouteOrder
            .Cells(i, 3) = InputLines(i).RouteNumber
            .Cells(i, 4) = InputLines(i).DeliveryDate
            .Cells(i, 5) = UTF8_Decode(InputLines(i).VehicleNumber)
            .Cells(i, 6) = UTF8_Decode(InputLines(i).PlateNumber)
            .Cells(i, 7) = InputLines(i).RouteCosts
            .Cells(i, 8) = InputLines(i).RouteKm
            .Cells(i, 9) = InputLines(i).RouteDrivingTime
            .Cells(i, 10) = InputLines(i).NoOfStops
            .Cells(i, 11) = InputLines(i).LoadWeight
            .Cells(i, 12) = InputLines(i).LoadVolume
            .Cells(i, 13) = InputLines(i).RouteWeight
            .Cells(i, 14) = InputLines(i).RouteVolume
            .Cells(i, 15) = InputLines(i).RouteWeightBack
            .Cells(i, 16) = InputLines(i).RouteVolumeBack
            .Cells(i, 17) = InputLines(i).StartTime
            .Cells(i, 18) = InputLines(i).EndTime
            .Cells(i, 19) = InputLines(i).LoadingTimeAtDepot
            .Cells(i, 20) = InputLines(i).UnloadingTimeAtDepot
            .Cells(i, 21) = InputLines(i).AdminTimeOut
            .Cells(i, 22) = InputLines(i).AdminTimeIn
            .Cells(i, 23) = InputLines(i).NoStop
            .Cells(i, 24) = UTF8_Decode(InputLines(i).LocationId)
            .Cells(i, 25) = InputLines(i).DueDate
            .Cells(i, 26) = UTF8_Decode(InputLines(i).Name)
            .Cells(i, 27) = UTF8_Decode(InputLines(i).Street)
            .Cells(i, 28) = "'" & UTF8_Decode(InputLines(i).HouseNumber)
            .Cells(i, 29) = UTF8_Decode(InputLines(i).PostCode)
            .Cells(i, 30) = UTF8_Decode(InputLines(i).City)
            .Cells(i, 31) = UTF8_Decode(InputLines(i).Country)
            .Cells(i, 32) = UTF8_Decode(InputLines(i).LocationComment)
            .Cells(i, 33) = InputLines(i).GeoX
            .Cells(i, 34) = InputLines(i).GeoY
            .Cells(i, 35) = "'" & UTF8_Decode(InputLines(i).OrderNumber)
            .Cells(i, 36) = UTF8_Decode(InputLines(i).OrderComment)
            .Cells(i, 37) = InputLines(i).OrderKm
            .Cells(i, 38) = InputLines(i).ArrivalTime
            .Cells(i, 39) = InputLines(i).DepartureTime
            .Cells(i, 40) = InputLines(i).TW1F
            .Cells(i, 41) = InputLines(i).TW1T
            .Cells(i, 42) = InputLines(i).TW2F
            .Cells(i, 43) = InputLines(i).TW2T
            .Cells(i, 44) = InputLines(i).Kg
            .Cells(i, 45) = InputLines(i).Volume
            .Cells(i, 46) = InputLines(i).KgBack
            .Cells(i, 47) = InputLines(i).VolumeBack
            'verze 2.02
            .Cells(i, 48) = UTF8_Decode(InputLines(i).VehicleComment)
            .Cells(i, 49) = InputLines(i).LoadThird
            .Cells(i, 50) = InputLines(i).RouteThird
            .Cells(i, 51) = InputLines(i).RouteThirdBack
            .Cells(i, 52) = InputLines(i).Third
            .Cells(i, 53) = InputLines(i).ThirdBack
            'verze 2.03
            .Cells(i, 54) = UTF8_Decode(InputLines(i).RouteComment)
            .Cells(i, 55) = InputLines(i).RouteWaitingTime
            .Cells(i, 56) = UTF8_Decode(InputLines(i).Mail)
            .Cells(i, 57) = UTF8_Decode(InputLines(i).Phone)
            .Cells(i, 58) = InputLines(i).WaitingTime
            'verze 2.04
            .Cells(i, 59) = UTF8_Decode(InputLines(i).Carrier)
            .Cells(i, 60) = UTF8_Decode(InputLines(i).Driver)
            'verze 2.05
            .Cells(i, 61) = UTF8_Decode(InputLines(i).DepotId)
            .Cells(i, 62) = InputLines(i).OrderItems
            'verze 2.08
            .Cells(i, 63) = UTF8_Decode(InputLines(i).LocationComment2)
            
        End With
    Next i
    
    Cells.Select
    Selection.Replace What:="#N/A", Replacement:="", LookAt:=xlPart, _
        SearchOrder:=xlByRows, MatchCase:=False, SearchFormat:=False, _
        ReplaceFormat:=False
    

End Sub



Attribute VB_Name = "a15_CreateLists"
Option Explicit
'Vytvori seznam vsech SPZ
Sub GetVehicleList()
Dim i, j, pocet As Integer
Dim test As Boolean

    pocet = 0
    i = 1
    
    Do Until Sheets("Source").Cells(i, 5) = ""
        
        j = 0
        test = False
        
        Do Until j = pocet Or test
           j = j + 1
           If Sheets("Source").Cells(i, 6) = VehiclesList(j).PlateNumber Then test = True
        Loop
            
        If Not test Then
            pocet = pocet + 1
            ReDim Preserve VehiclesList(1 To pocet)
            VehiclesList(pocet).PlateNumber = Sheets("Source").Cells(i, 6)
            
            ReDim VehiclesList(pocet).Routes(1 To 1)
            ReDim VehiclesList(pocet).RoutesUserDefinedIds(1 To 1)
            VehiclesList(pocet).Routes(1) = Sheets("Source").Cells(i, 2)
            VehiclesList(pocet).RoutesUserDefinedIds(1) = Sheets("Source").Cells(i, 3)
            
            ReDim VehiclesList(pocet).StartTimes(1 To 1)
            VehiclesList(pocet).StartTimes(1) = Sheets("Source").Cells(i, 17)
            
        Else
            If Sheets("Source").Cells(i, 2) <> Sheets("Source").Cells(i - 1, 2) Then
                ReDim Preserve VehiclesList(j).Routes(1 To UBound(VehiclesList(j).Routes) + 1)
                ReDim Preserve VehiclesList(j).RoutesUserDefinedIds(1 To UBound(VehiclesList(j).RoutesUserDefinedIds) + 1)
                VehiclesList(j).Routes(UBound(VehiclesList(j).Routes)) = Sheets("Source").Cells(i, 2)
                VehiclesList(j).RoutesUserDefinedIds(UBound(VehiclesList(j).RoutesUserDefinedIds)) = Sheets("Source").Cells(i, 3)
                ReDim Preserve VehiclesList(j).StartTimes(1 To UBound(VehiclesList(j).StartTimes) + 1)
                VehiclesList(j).StartTimes(UBound(VehiclesList(j).Routes)) = Sheets("Source").Cells(i, 17)
                
            End If
        End If
          
        i = i + 1
            
    Loop
    
    Call PrintVehicleList
 
End Sub
'Vytiskne a setridi seznam vozidel s trasami
Sub PrintVehicleList()
Dim i, j, pozice, ub As Integer
Dim testRUDI As Boolean
    
    Sheets("Data").Cells.Clear
        
    If ArrayIsNothing(VehiclesList) Then Exit Sub
    
    pozice = 1
    testRUDI = TestUsageOfRouteUserDefinedId
    
    For i = 1 To UBound(VehiclesList)
        For j = 1 To UBound(VehiclesList(i).Routes)
            
            Sheets("Data").Cells(pozice, PlatesColumnNumber) = _
                   VehiclesList(i).PlateNumber & " - " & Sheets.Item(6).Range("LNG_DATA").Cells(34, SelectedLanguage_Index) & " " & _
                   IIf(testRUDI, VehiclesList(i).RoutesUserDefinedIds(j), VehiclesList(i).Routes(j))
                   
            Sheets("Data").Cells(pozice, PlatesColumnNumber + 1).NumberFormat = "@"
            Sheets("Data").Cells(pozice, PlatesColumnNumber + 1) = CStr(VehiclesList(i).PlateNumber)
            Sheets("Data").Cells(pozice, PlatesColumnNumber + 2) = CStr(VehiclesList(i).Routes(j))
            Sheets("Data").Cells(pozice, PlatesColumnNumber + 3) = CStr(VehiclesList(i).StartTimes(j))
            Sheets("Data").Cells(pozice, PlatesColumnNumber + 4) = IIf(testRUDI, CStr(VehiclesList(i).RoutesUserDefinedIds(j)), cNotDefined)
            pozice = pozice + 1
        Next j
    Next i
    
    Set VehiclesListRange = Range(Sheets("Data").Cells(1, PlatesColumnNumber), Sheets("Data").Cells(pozice - 1, PlatesColumnNumber))
    
    Worksheets("Data").Select
    Sheets("Data").Range(Sheets("Data").Columns(PlatesColumnNumber), Sheets("Data").Columns(PlatesColumnNumber + 4)).Select
     
    Worksheets("Data").Sort.SortFields.Clear
    Worksheets("Data").Sort.SortFields.Add Key:=Worksheets("Data").Cells(1, 1), SortOn:=xlSortOnValues, Order:=xlAscending, DataOption:=xlSortNormal
    Worksheets("Data").Sort.SortFields.Add Key:=Worksheets("Data").Cells(1, 4), SortOn:=xlSortOnValues, Order:=xlAscending, DataOption:=xlSortNormal
        
    With Worksheets("Data").Sort
        .SetRange Sheets("Data").Range(Sheets("Data").Columns(PlatesColumnNumber), Sheets("Data").Columns(PlatesColumnNumber + 4))
        .Header = xlNo
        .MatchCase = False
        .Orientation = xlTopToBottom
        .SortMethod = xlPinYin
        .Apply
    End With
        
    Sheets("Data").Cells(1, 1).Select
      
End Sub




Attribute VB_Name = "a20_ReadSelectedRoute"
Option Explicit
'Nacte vybranou trasu
Sub FillSelectedRoute(inRoute As String)
Dim i, c, pocet As Integer
Dim h As String

    i = 1
    Do Until Sheets("Data").Cells(i, PlatesColumnNumber) = inRoute Or Sheets("Data").Cells(i, PlatesColumnNumber) = ""
        i = i + 1
    Loop
    
    If Sheets("Data").Cells(i, PlatesColumnNumber) <> "" Then
        SelectedRoute.PlateNumber = Sheets("Data").Cells(i, PlatesColumnNumber + 1)
        SelectedRoute.RouteNumber = Sheets("Data").Cells(i, PlatesColumnNumber + 2)
    Else
        c = MsgBox(Sheets.Item(6).Range("LNG_DATA").Cells(17, SelectedLanguage_Index) & inRoute & "!", vbCritical, Sheets.Item(6).Range("LNG_DATA").Cells(25, SelectedLanguage_Index))
        End
    End If
    
    i = 1
    Do Until (Sheets("Source").Cells(i, 2) = SelectedRoute.RouteNumber And _
              Sheets("Source").Cells(i, 6) = SelectedRoute.PlateNumber) Or _
              Sheets("Source").Cells(i, 2) = ""
        i = i + 1
    Loop
    
    On Error GoTo InputError
    
    If Sheets("Source").Cells(i, 2) <> "" Then
       SelectedRoute.RouteUserDefinedId = Sheets("Source").Cells(i, 3)
       SelectedRoute.RouteComment = Sheets("Source").Cells(i, 54)
       SelectedRoute.Carrier = Sheets("Source").Cells(i, 59)
       SelectedRoute.Driver = Sheets("Source").Cells(i, 60)
       SelectedRoute.VehicleNumber = Sheets("Source").Cells(i, 5)
       SelectedRoute.DeliveryDate = Sheets("Source").Cells(i, 4)
       SelectedRoute.Costs = Sheets("Source").Cells(i, 7)
       SelectedRoute.Km = Sheets("Source").Cells(i, 8)
       SelectedRoute.Kg = 0
       SelectedRoute.KgCapacity = Sheets("Source").Cells(i, 11)
       SelectedRoute.Volume = 0
       SelectedRoute.VolumeCapacity = Sheets("Source").Cells(i, 12)
       SelectedRoute.Third = 0
       SelectedRoute.ThirdCapacity = Sheets("Source").Cells(i, 49)
       SelectedRoute.Time = Sheets("Source").Cells(i, 9)
       SelectedRoute.WaitingTime = Sheets("Source").Cells(i, 55)
       SelectedRoute.StartTime = Sheets("Source").Cells(i, 17)
       SelectedRoute.EndTime = Sheets("Source").Cells(i, 18)
       SelectedRoute.TimeAtDepot = Sheets("Source").Cells(i, 19)
       SelectedRoute.TimeAtDepotBack = Sheets("Source").Cells(i, 20)
       SelectedRoute.AdminTimeOut = Sheets("Source").Cells(i, 21)
       SelectedRoute.AdminTimeIn = Sheets("Source").Cells(i, 22)
       h = Sheets("Source").Cells(i, 4)
       SelectedRoute.DueDate = DateSerial(Left(h, 4), Mid(h, 5, 2), Right(h, 2))
       SelectedRoute.VehicleComment = Sheets("Source").Cells(i, 48)
    
       
       'nacteni zastavek
       SelectedRoute.NoOfStops = Sheets("Source").Cells(i, 10)
       pocet = 0
       Do Until Sheets("Source").Cells(i, 2) <> SelectedRoute.RouteNumber
          pocet = pocet + 1
          ReDim Preserve SelectedRoute.Stops(1 To pocet)
          
          SelectedRoute.Stops(pocet).NoStop = Sheets("Source").Cells(i, 23)
          SelectedRoute.Stops(pocet).LocationId = Sheets("Source").Cells(i, 24)
          SelectedRoute.Stops(pocet).OrderId = Sheets("Source").Cells(i, 35)
          SelectedRoute.Stops(pocet).Name = Sheets("Source").Cells(i, 26)
          SelectedRoute.Stops(pocet).Street = Sheets("Source").Cells(i, 27)
          SelectedRoute.Stops(pocet).HouseNumber = Sheets("Source").Cells(i, 28)
          SelectedRoute.Stops(pocet).PostCode = Sheets("Source").Cells(i, 29)
          SelectedRoute.Stops(pocet).City = Sheets("Source").Cells(i, 30)
          SelectedRoute.Stops(pocet).Country = Sheets("Source").Cells(i, 31)
          SelectedRoute.Stops(pocet).Km = Sheets("Source").Cells(i, 37)
          SelectedRoute.Stops(pocet).Kg = Sheets("Source").Cells(i, 44)
          SelectedRoute.Stops(pocet).Volume = Sheets("Source").Cells(i, 45)
          SelectedRoute.Stops(pocet).Third = Sheets("Source").Cells(i, 52)
          SelectedRoute.Stops(pocet).KgBack = Sheets("Source").Cells(i, 46)
          SelectedRoute.Stops(pocet).VolumeBack = Sheets("Source").Cells(i, 47)
          SelectedRoute.Stops(pocet).ThirdBack = Sheets("Source").Cells(i, 53)
          SelectedRoute.Stops(pocet).WaitingTime = Sheets("Source").Cells(i, 58)
          
          If (pocet > 1) Then
             If (SelectedRoute.Stops(pocet).NoStop = SelectedRoute.Stops(pocet - 1).NoStop) Then
                SelectedRoute.Stops(pocet).Km = 0
                SelectedRoute.Stops(pocet).Kg = 0
                SelectedRoute.Stops(pocet).Volume = 0
                SelectedRoute.Stops(pocet).Third = 0
                SelectedRoute.Stops(pocet).KgBack = 0
                SelectedRoute.Stops(pocet).VolumeBack = 0
                SelectedRoute.Stops(pocet).ThirdBack = 0
                SelectedRoute.Stops(pocet).WaitingTime = 0
             End If
          End If
          
          
          SelectedRoute.Stops(pocet).Arrival = Sheets("Source").Cells(i, 38)
          SelectedRoute.Stops(pocet).Departure = Sheets("Source").Cells(i, 39)
          SelectedRoute.Stops(pocet).TW1F = Sheets("Source").Cells(i, 40)
          SelectedRoute.Stops(pocet).TW1T = Sheets("Source").Cells(i, 41)
          SelectedRoute.Stops(pocet).TW2F = Sheets("Source").Cells(i, 42)
          SelectedRoute.Stops(pocet).TW2T = Sheets("Source").Cells(i, 43)
          
          Dim tel As String
          
          If Len(Sheets("Source").Cells(i, 57)) > 1 Then
            tel = Sheets.Item(6).Range("LNG_DATA").Cells(68, SelectedLanguage_Index) & ":" & Sheets("Source").Cells(i, 57)
          Else
            tel = ""
          End If
          
          SelectedRoute.Stops(pocet).Comments = JoinTwoStrings(JoinTwoStrings(JoinTwoStrings(Sheets("Source").Cells(i, 32), Sheets("Source").Cells(i, 63), "/"), Sheets("Source").Cells(i, 36), "/"), tel, "/")
          SelectedRoute.Kg = SelectedRoute.Kg + SelectedRoute.Stops(pocet).Kg
          SelectedRoute.Volume = SelectedRoute.Volume + SelectedRoute.Stops(pocet).Volume
          SelectedRoute.Third = SelectedRoute.Third + SelectedRoute.Stops(pocet).Third
          SelectedRoute.Stops(pocet).OrderItems = Sheets("Source").Cells(i, 62)
          
          i = i + 1
       Loop
    Else
        c = MsgBox(Sheets.Item(6).Range("LNG_DATA").Cells(17, SelectedLanguage_Index) & inRoute & "!", vbCritical, Sheets.Item(6).Range("LNG_DATA").Cells(25, SelectedLanguage_Index))
        End
    End If
    Exit Sub
    
InputError: c = MsgBox(Sheets.Item(6).Range("LNG_DATA").Cells(7, SelectedLanguage_Index) & i & "!", vbCritical, Sheets.Item(6).Range("LNG_DATA").Cells(25, SelectedLanguage_Index))
    
    Call Konec
    End
 

End Sub




Attribute VB_Name = "a25_RecalculateArrivalTimes"
Option Explicit
'Prepocte casy na zaklade pozadavku Makra
Sub RecalculateArrivalTimes()
Dim i, locId, NoOfStops As Integer
Dim secReduction, secFromStops, actWorkingTime, cummulativeReduction, reduction As Long
Dim restInserted As Boolean
    
    If (SelectedRoute.EndTime - SelectedRoute.StartTime > cMakro_MaxRouteDurationWithoutRest) Then
         'Set number of second to reduction
         NoOfStops = GetNoOfStops(SelectedRoute)
         
         secFromStops = NoOfStops * cMakro_MaxSecondsReduction
         If (secFromStops >= cMakro_PauseLenght) Then
            secReduction = CLng(cMakro_PauseLenght / NoOfStops)
         Else
            secReduction = cMakro_MaxSecondsReduction
         End If
         
         restInserted = False
         cummulativeReduction = 0
         For i = 1 To UBound(SelectedRoute.Stops)
            If (i = 1) Then
               actWorkingTime = SelectedRoute.Stops(i).Arrival - SelectedRoute.StartTime
               cummulativeReduction = cummulativeReduction + secReduction
               SelectedRoute.Stops(i).Departure = SelectedRoute.Stops(i).Departure - cummulativeReduction
            Else
                reduction = 0
                If (SelectedRoute.Stops(i).LocationId <> SelectedRoute.Stops(i - 1).LocationId) Then
                    reduction = secReduction
                End If
                actWorkingTime = SelectedRoute.Stops(i).Arrival - SelectedRoute.StartTime
                SelectedRoute.Stops(i).Arrival = SelectedRoute.Stops(i).Arrival - cummulativeReduction
                cummulativeReduction = cummulativeReduction + reduction
                SelectedRoute.Stops(i).Departure = SelectedRoute.Stops(i).Departure - cummulativeReduction
            End If
            
            'insert defined break
            If (actWorkingTime > cMakro_MaxRouteDurationWithoutRest And Not (restInserted)) Then
                SelectedRoute.Stops(i).Arrival = SelectedRoute.Stops(i).Arrival + cMakro_PauseLenght
                SelectedRoute.Stops(i).Departure = SelectedRoute.Stops(i).Departure + cMakro_PauseLenght
                cummulativeReduction = cummulativeReduction - cMakro_PauseLenght
                locId = SelectedRoute.Stops(i).NoStop
                restInserted = True
            End If
         
         Next i
            
         'Info insertion
         If Not (restInserted) Then
            DepotComments = "!!P|fffd|est|fffd|vka na ob|fffd|d 00:30!!"
            cummulativeReduction = cummulativeReduction - cMakro_PauseLenght
         Else
            DepotComments = ""
            For i = 1 To UBound(SelectedRoute.Stops)
                If SelectedRoute.Stops(i).NoStop = locId Then
                   SelectedRoute.Stops(i).Comments = SelectedRoute.Stops(i).Comments & " !!P|fffd|est|fffd|vka na ob|fffd|d 00:30!!"
                End If
            Next i
         End If
       
         SelectedRoute.EndTime = SelectedRoute.EndTime - cummulativeReduction
         SelectedRoute.Time = SelectedRoute.Time - cummulativeReduction
         
    End If
 
End Sub
'Vrati pocet zastavek na trase
Function GetNoOfStops(r As Route) As Integer
Dim i As Integer

    GetNoOfStops = 1
    If (UBound(r.Stops) > 1) Then
        For i = 2 To UBound(r.Stops)
            If r.Stops(i).LocationId <> r.Stops(i - 1).LocationId Then GetNoOfStops = GetNoOfStops + 1
        Next i
    End If
    
End Function




Attribute VB_Name = "a30_SelectFile"

Sub GetCsvFile()

    'Declare a variable as a FileDialog object
    Dim fd As FileDialog

    'Create a FileDialog object as a File Picker dialog box.
    Set fd = Application.FileDialog(msoFileDialogFilePicker)

    'Declare a variable to contain the path
    'of each selected item. Even though the path is aString,
    'the variable must be a Variant because For Each...Next
    'routines only work with Variants and Objects.
    Dim vrtSelectedItem As Variant

    'Use a With...End With block to reference the FileDialog object.
    With fd

        .Filters.Clear
        .Filters.Add "CSV Files", "*.csv"
        .InitialFileName = ActiveWorkbook.Path
        .InitialView = msoFileDialogViewDetails
        
        'Use the Show method to display the File Picker dialog box and return the user's action.
        'If the user presses the button...
        If .Show = -1 Then

            'Step through each string in the FileDialogSelectedItems collection.
            For Each vrtSelectedItem In .SelectedItems

                'vrtSelectedItem is aString that contains the path of each selected item.
                'You can use any file I/O functions that you want to work with this path.
                'This example displays the path in a message box.
               
                InputFile = vrtSelectedItem
                
            Next vrtSelectedItem
        'If the user presses Cancel...
        Else
            Cells(1, 1).Select
            Call Konec
            End
        End If
    End With

    'Set the object variable to Nothing.
    Set fd = Nothing

  
End Sub




Attribute VB_Name = "a33_GetFolder"
Option Explicit

Sub GetFolder()

    
    Dim fldr As FileDialog
    Dim vItem As Variant
    Set fldr = Application.FileDialog(msoFileDialogFolderPicker)
    With fldr
        .Title = "Select a Folder"
        .AllowMultiSelect = False
        .InitialFileName = Application.ActiveWorkbook.Path & "\"
        If .Show <> -1 Then GoTo NextCode
        vItem = .SelectedItems(1)
    End With
NextCode:
    
    If IsEmpty(vItem) Then
       Call Konec
       End
    End If
    ExportFolder = vItem
    Set fldr = Nothing
End Sub

Attribute VB_Name = "a40_ChangeLanguage"
'Zmeni jazyk na listu "Objednavky"
Sub ChangeLanguage_NL()

    With Sheets.Item(2)
        .Label1.Caption = Sheets.Item(6).Range("LNG_DATA").Cells(8, SelectedLanguage_Index)
        .cbReadCSV.Caption = Sheets.Item(6).Range("LNG_DATA").Cells(14, SelectedLanguage_Index)
        .cbTisk.Caption = Sheets.Item(6).Range("LNG_DATA").Cells(30, SelectedLanguage_Index)
        .cbPrintAll.Caption = Sheets.Item(6).Range("LNG_DATA").Cells(32, SelectedLanguage_Index)
        .cbPDF.Caption = Sheets.Item(6).Range("LNG_DATA").Cells(33, SelectedLanguage_Index)
        .CheckBox1.Caption = Sheets.Item(6).Range("LNG_DATA").Cells(31, SelectedLanguage_Index)
        .CheckBox_Sorting.Caption = Sheets.Item(6).Range("LNG_DATA").Cells(55, SelectedLanguage_Index)
        .Name = Sheets.Item(6).Range("LNG_DATA").Cells(15, SelectedLanguage_Index)
        .CB_ShowCosts.Caption = Sheets.Item(6).Range("LNG_DATA").Cells(54, SelectedLanguage_Index)
        .cbFitToOnePage.Caption = Sheets.Item(6).Range("LNG_DATA").Cells(60, SelectedLanguage_Index)
    End With
  
End Sub
'Zmeni jazyk na listu "Objednavky"
Sub ChangeLanguage_Objednavky()
Dim i As Integer

    With Sheets.Item(4)
        For i = 0 To UBound(HeaderOrders)
            .Cells(2, 2 + i) = HeaderOrders(i)
        Next i
        .Name = Sheets.Item(6).Range("LNG_DATA").Cells(18, SelectedLanguage_Index)
        .Columns("B:L").EntireColumn.AutoFit
      
    End With

End Sub
'Zmeni jazyk na listu "Trasy"
Sub ChangeLanguage_Trasy()
Dim i As Integer

     With Sheets.Item(5)
        For i = 0 To UBound(HeaderRoutes)
            .Cells(fRow, fColumn + i) = HeaderRoutes(i)
        Next i
        .Name = Sheets.Item(6).Range("LNG_DATA").Cells(35, SelectedLanguage_Index)
        .Columns("C:N").EntireColumn.AutoFit
     End With

End Sub
'Zmeni jazyk na listu "Gantt"
Sub ChangeLanguage_Gantt()
Dim i As Integer

     With Sheets.Item(7)
        .Name = Sheets.Item(6).Range("LNG_DATA").Cells(63, SelectedLanguage_Index)
     End With

End Sub


Attribute VB_Name = "a50_CreateDeliveryList"
Option Explicit

'Vytvori nakladovy list
Sub CreateDeliveryList()

    If cMakro_RecalculateArrivalTimes Then
    
        Call RecalculateArrivalTimes
        
    End If

    With Sheets.Item(2)
        .Select
        .Cells.Clear
        .Rows.RowHeight = 12.75
        .Rows("6:6").Hidden = False
        .Columns("Q:Q").Hidden = False
        ActiveWindow.DisplayGridlines = False
    End With
    
    Call OutputHeader
    Call OutputBody
    Call DeleteThird
    
    
   'Columns("C").ColumnWidth = 10.57
   'Columns("C").EntireColumn.AutoFit
        
    If Columns("C").ColumnWidth >= 19.14 Then Columns("C").ColumnWidth = 19.14
        
    

End Sub
'Vytiskne hlavicky
Sub OutputHeader()
Dim i As Integer
Dim useRouteUserDefineId As Boolean

    With Sheets.Item(2)
        .Cells(fRow, fColumn) = Sheets.Item(6).Range("LNG_DATA").Cells(5, SelectedLanguage_Index)              'Datum
        .Cells(fRow, fColumn + 1) = SelectedRoute.DueDate
        .Cells(fRow + 1, fColumn) = Sheets.Item(6).Range("LNG_DATA").Cells(29, SelectedLanguage_Index)         'SPZ
        .Cells(fRow + 1, fColumn + 1) = SelectedRoute.PlateNumber
        .Cells(fRow + 2, fColumn) = Sheets.Item(6).Range("LNG_DATA").Cells(59, SelectedLanguage_Index)         'Ridic
        .Cells(fRow + 2, fColumn + 1) = SelectedRoute.Driver
        
        .Cells(fRow + 3, fColumn) = IIf(Sheets.Item(2).CB_ShowCosts.value, _
                                        Sheets.Item(6).Range("LNG_DATA").Cells(53, SelectedLanguage_Index), _
                                        Sheets.Item(6).Range("LNG_DATA").Cells(34, SelectedLanguage_Index))    'Trasa
        .Cells(fRow + 3, fColumn + 1) = IIf(TestUsageOfRouteUserDefinedId, SelectedRoute.RouteUserDefinedId, SelectedRoute.RouteNumber) & _
                                        IIf(Sheets.Item(2).CB_ShowCosts.value, " | " & Round(SelectedRoute.Costs, 0), "")
        
        Call FormatBlackFrame(Range(.Cells(fRow, fColumn), .Cells(fRow + 3, fColumn + 1)))
                    
        .Cells(fRow, fColumn + 3) = Sheets.Item(6).Range("LNG_DATA").Cells(36, SelectedLanguage_Index) 'Za|fffd||fffd|tek
        .Cells(fRow, fColumn + 4) = Sec2Time(CLng(SelectedRoute.StartTime))
        .Cells(fRow, fColumn + 4).NumberFormat = "h:mm"
        .Cells(fRow + 1, fColumn + 3) = Sheets.Item(6).Range("LNG_DATA").Cells(12, SelectedLanguage_Index)    'Konec
        .Cells(fRow + 1, fColumn + 4) = Sec2Time(CLng(SelectedRoute.EndTime))
        .Cells(fRow + 1, fColumn + 4).NumberFormat = "h:mm"
        .Cells(fRow + 2, fColumn + 3) = Sheets.Item(6).Range("LNG_DATA").Cells(28, SelectedLanguage_Index) '|fffd||fffd|zen|fffd|
        .Cells(fRow + 2, fColumn + 4) = Sec2Time(CLng(SelectedRoute.Time))
        .Cells(fRow + 2, fColumn + 4).NumberFormat = "h:mm"
        
               
        .Cells(fRow, fColumn + 5) = Sheets.Item(6).Range("LNG_DATA").Cells(11, SelectedLanguage_Index)    'Km
        .Cells(fRow, fColumn + 6) = CInt(SelectedRoute.Km) & " | "
        .Cells(fRow, fColumn + 6).NumberFormat = "#,##0.0"
        
        .Cells(fRow + 1, fColumn + 5) = Sheets.Item(6).Range("LNG_DATA").Cells(51, SelectedLanguage_Index) 'Tacho z.
        .Cells(fRow + 2, fColumn + 5) = Sheets.Item(6).Range("LNG_DATA").Cells(52, SelectedLanguage_Index) 'Tacho k.
        
        Call MergeCells(Range(Cells(fRow, fColumn + 6), Cells(fRow, fColumn + 7)))
        Call MergeCells(Range(Cells(fRow + 3, fColumn + 6), Cells(fRow + 3, fColumn + 7)))
        Call MergeCells(Range(Cells(fRow + 2, fColumn + 6), Cells(fRow + 2, fColumn + 7)))
        
        .Cells(fRow + 3, fColumn + 3) = Sheets.Item(6).Range("LNG_DATA").Cells(9, SelectedLanguage_Index)    'Kg
        .Cells(fRow + 3, fColumn + 4) = "'" & Round(SelectedRoute.Kg, 0) & " | " & SelectedRoute.KgCapacity
        Call MergeCells(Range(Cells(fRow + 1, fColumn + 6), Cells(fRow + 1, fColumn + 7)))
        
        .Cells(fRow + 3, fColumn + 5) = Sheets.Item(6).Range("LNG_DATA").Cells(19, SelectedLanguage_Index) 'Objem
        .Cells(fRow + 3, fColumn + 6) = "'" & Round(SelectedRoute.Volume, 1) & " | " & SelectedRoute.VolumeCapacity
        
        .Cells(fRow + 4, fColumn + 5) = Sheets.Item(6).Range("LNG_DATA").Cells(57, SelectedLanguage_Index) 'Treti
        .Cells(fRow + 4, fColumn + 6) = "'" & Round(SelectedRoute.Third, 2) & " | " & SelectedRoute.ThirdCapacity
        Call MergeCells(Range(Cells(fRow + 4, fColumn + 6), Cells(fRow + 4, fColumn + 7)))
        
        
        Call FormatBlackFrame(Range(.Cells(fRow, fColumn + 3), .Cells(fRow + 3, fColumn + 5)))
        Call FormatBlackFrame(Range(.Cells(fRow, fColumn + 6), .Cells(fRow + 3, fColumn + 7)))
        Call FormatBlackFrame(Range(.Cells(fRow + 4, fColumn + 5), .Cells(fRow + 4, fColumn + 7)))
        
        'Poznamka trasy
        Call FormatBlackFrame(Range(.Cells(fRow + 6, fColumn), .Cells(fRow + 6, fColumn + 7)))
        Call MergeCells(Range(.Cells(fRow + 6, fColumn + 1), .Cells(fRow + 6, fColumn + 7)))
        .Cells(fRow + 6, fColumn) = Sheets.Item(6).Range("LNG_DATA").Cells(62, SelectedLanguage_Index)
        .Cells(fRow + 6, fColumn + 1) = JoinTwoStrings(SelectedRoute.RouteComment, SelectedRoute.VehicleComment, " | ")
        
        'Hlavicka objednavky
        Call FormatBlackFrame(Range(.Cells(fRow + 8, fColumn), .Cells(fRow + 8, fColumn + UBound(Header) + 4)))
        Call MergeCells(Range(Cells(fRow + 8, fColumn + 1), Cells(fRow + 8, fColumn + 3)))
        Call MergeCells(Range(Cells(fRow + 8, fColumn + 4), Cells(fRow + 8, fColumn + 6)))
        
        For i = 0 To 1
            .Cells(fRow + 8, fColumn + i) = Header(i)
        Next i
        
        .Cells(fRow + 8, fColumn + 4) = Header(2)
        For i = 3 To UBound(Header)
           .Cells(fRow + 8, fColumn + 4 + i) = Header(i)
        Next i
   
    End With
       
End Sub
'Vytiskne nakladovy list
Sub OutputBody()
Dim i, j, noOfMergedRows As Integer
Dim hKm, hWT, cW As Double
Dim sWeight, sVolume, sThird As String
Dim kde As Range
    
    Set kde = Range(Sheets.Item(2).Cells(fRow + 9, fColumn - 1), Sheets.Item(2).Cells(fRow + 9 + UBound(SelectedRoute.Stops) + 1, fColumn + UBound(Header) + 4))
    Call FormatDotFrame(kde, 12.75, xlCenter)
    
    For i = 1 To UBound(SelectedRoute.Stops) + 2
        Call MergeCells(Range(Cells(fRow + 8 + i, fColumn + 1), Cells(fRow + 8 + i, fColumn + 3)))
        Call MergeCells(Range(Cells(fRow + 8 + i, fColumn + 4), Cells(fRow + 8 + i, fColumn + 6)))
    Next i
    
    noOfMergedRows = 1
    For i = 0 To UBound(SelectedRoute.Stops) + 1
        With Sheets.Item(2)
            If i = 0 Or i = UBound(SelectedRoute.Stops) + 1 Then
              .Cells(fRow + 9 + i, fColumn) = "-"
              .Cells(fRow + 9 + i, fColumn + 1) = Sheets.Item(6).Range("LNG_DATA").Cells(43, SelectedLanguage_Index)
              .Cells(fRow + 9 + i, fColumn + 4) = "-"
              If i = 0 Then     'depo na zacatku
                 .Cells(fRow + 9 + i, fColumn - 1) = "-"
                 .Cells(fRow + 9 + i, fColumn + 7) = 0
                 .Cells(fRow + 9 + i, fColumn + 7).NumberFormat = "#,##0.0"
                 .Cells(fRow + 9 + i, fColumn + 8) = "-"
                 .Cells(fRow + 9 + i, fColumn + 9) = Sec2Time(CLng(SelectedRoute.StartTime))
                 .Cells(fRow + 9 + i, fColumn + 9).NumberFormat = "h:mm"
                 .Cells(fRow + 9 + i, fColumn + 10) = Sec2Time(SelectedRoute.StartTime + SelectedRoute.TimeAtDepot + SelectedRoute.AdminTimeOut)
                 .Cells(fRow + 9 + i, fColumn + 10).NumberFormat = "h:mm"
                 .Cells(fRow + 9 + i, fColumn + 11) = "-"
                 .Cells(fRow + 9 + i, fColumn + 12) = "-"
                 .Cells(fRow + 9 + i, fColumn + 13) = "-"
                 .Cells(fRow + 9 + i, fColumn + 14) = "-"
              Else  'depo na konci
                 hKm = 0
                 hWT = 0
                 For j = 1 To UBound(SelectedRoute.Stops)
                     hKm = hKm + SelectedRoute.Stops(j).Km
                     hWT = hWT + SelectedRoute.Stops(j).WaitingTime
                 Next j
                 .Cells(fRow + 9 + i, fColumn - 1) = "-"
                 .Cells(fRow + 9 + i, fColumn + 7) = SelectedRoute.Km - hKm
                 .Cells(fRow + 9 + i, fColumn + 7).NumberFormat = "#,##0.0"
                 If (SelectedRoute.WaitingTime - hWT > 0) Then
                    .Cells(fRow + 9 + i, fColumn + 8) = Sec2Time(SelectedRoute.WaitingTime - hWT)
                    .Cells(fRow + 9 + i, fColumn + 8).NumberFormat = "h:mm"
                 Else
                    .Cells(fRow + 9 + i, fColumn + 8) = "-"
                 End If
                 .Cells(fRow + 9 + i, fColumn + 9) = Sec2Time(SelectedRoute.EndTime - SelectedRoute.TimeAtDepotBack - SelectedRoute.AdminTimeIn)
                 .Cells(fRow + 9 + i, fColumn + 9).NumberFormat = "h:mm"
                 .Cells(fRow + 9 + i, fColumn + 10) = Sec2Time(CLng(SelectedRoute.EndTime))
                 .Cells(fRow + 9 + i, fColumn + 10).NumberFormat = "h:mm"
                 .Cells(fRow + 9 + i, fColumn + 11) = "-"
                 .Cells(fRow + 9 + i, fColumn + 12) = "-"
                 .Cells(fRow + 9 + i, fColumn + 13) = "-"
                 .Cells(fRow + 9 + i, fColumn + 14) = DepotComments
                
              End If
            Else
              .Cells(fRow + 9 + i, fColumn - 1) = SelectedRoute.Stops(i).NoStop 'i
              .Cells(fRow + 9 + i, fColumn) = "'" & SelectedRoute.Stops(i).OrderId
              .Cells(fRow + 9 + i, fColumn + 1) = IIf(SelectedRoute.Stops(i).LocationId = "", SelectedRoute.Stops(i).Name, SelectedRoute.Stops(i).LocationId & " / " & SelectedRoute.Stops(i).Name)
              .Cells(fRow + 9 + i, fColumn + 4) = GetAddress(SelectedRoute.Stops(i))
              .Cells(fRow + 9 + i, fColumn + 7) = SelectedRoute.Stops(i).Km
              .Cells(fRow + 9 + i, fColumn + 7).NumberFormat = "#,##0.0"
              If (SelectedRoute.Stops(i).WaitingTime > 0) Then
                 .Cells(fRow + 9 + i, fColumn + 8) = Sec2Time(SelectedRoute.Stops(i).WaitingTime)
                 .Cells(fRow + 9 + i, fColumn + 8).NumberFormat = "h:mm"
              Else
                 .Cells(fRow + 9 + i, fColumn + 8) = "-"
              End If
              .Cells(fRow + 9 + i, fColumn + 9) = Sec2Time(SelectedRoute.Stops(i).Arrival)
              .Cells(fRow + 9 + i, fColumn + 9).NumberFormat = "h:mm"
              .Cells(fRow + 9 + i, fColumn + 10) = Sec2Time(SelectedRoute.Stops(i).Departure)
              .Cells(fRow + 9 + i, fColumn + 10).NumberFormat = "h:mm"
              .Cells(fRow + 9 + i, fColumn + 11) = TimeWindowFormatter(SelectedRoute.Stops(i).TW1F, SelectedRoute.Stops(i).TW1T, _
                                                                       SelectedRoute.Stops(i).TW2F, SelectedRoute.Stops(i).TW2T)
              'hmotnost
              If (SelectedRoute.Stops(i).Kg + SelectedRoute.Stops(i).KgBack = 0) Then
                 sWeight = ""
              Else
                 sWeight = Round(SelectedRoute.Stops(i).Kg, 1) & _
                           IIf(SelectedRoute.Stops(i).KgBack = 0, "", Chr(10) & "[" & Round(SelectedRoute.Stops(i).KgBack, 1) & "]")
              End If
              .Cells(fRow + 9 + i, fColumn + 12) = sWeight
              
              'objem
              If (SelectedRoute.Stops(i).Volume + SelectedRoute.Stops(i).VolumeBack = 0) Then
                 sVolume = ""
              Else
                 sVolume = Round(SelectedRoute.Stops(i).Volume, 1) & _
                           IIf(SelectedRoute.Stops(i).VolumeBack = 0, "", Chr(10) & "[" & Round(SelectedRoute.Stops(i).VolumeBack, 1) & "]")
              End If
              
              .Cells(fRow + 9 + i, fColumn + 13) = sVolume
              
              
              'treti
              If (SelectedRoute.Stops(i).Third + SelectedRoute.Stops(i).ThirdBack = 0) Then
                 sThird = ""
              Else
                 sThird = Round(SelectedRoute.Stops(i).Third, 2) & _
                           IIf(SelectedRoute.Stops(i).ThirdBack = 0, "", Chr(10) & "[" & Round(SelectedRoute.Stops(i).ThirdBack, 2) & "]")
              End If
              .Cells(fRow + 9 + i, fColumn + 14) = sThird
              
              
              
              .Cells(fRow + 9 + i, fColumn + 15) = SelectedRoute.Stops(i).Comments
              'Merge cells for same location
              If (SelectedRoute.Stops(i).NoStop = Cells(fRow + 9 + i - noOfMergedRows, fColumn - 1)) Then
                  noOfMergedRows = noOfMergedRows + 1
                  Rows(fRow + 9 + i - noOfMergedRows + 1).RowHeight = 12.75
                  Rows(fRow + 9 + i).RowHeight = 12.75
                  Call MergeCells(Range(Cells(fRow + 9 + i - noOfMergedRows + 1, fColumn - 1), Cells(fRow + 9 + i, fColumn - 1)))
                  Call MergeCells(Range(Cells(fRow + 9 + i - noOfMergedRows + 1, fColumn + 1), Cells(fRow + 9 + i, fColumn + 1)))
                  Call MergeCells(Range(Cells(fRow + 9 + i - noOfMergedRows + 1, fColumn + 4), Cells(fRow + 9 + i, fColumn + 4)))
                  Call MergeCells(Range(Cells(fRow + 9 + i - noOfMergedRows + 1, fColumn + 7), Cells(fRow + 9 + i, fColumn + 7)))
                  Call MergeCells(Range(Cells(fRow + 9 + i - noOfMergedRows + 1, fColumn + 8), Cells(fRow + 9 + i, fColumn + 8)))
                  Call MergeCells(Range(Cells(fRow + 9 + i - noOfMergedRows + 1, fColumn + 9), Cells(fRow + 9 + i, fColumn + 9)))
                  Call MergeCells(Range(Cells(fRow + 9 + i - noOfMergedRows + 1, fColumn + 10), Cells(fRow + 9 + i, fColumn + 10)))
                  Call MergeCells(Range(Cells(fRow + 9 + i - noOfMergedRows + 1, fColumn + 11), Cells(fRow + 9 + i, fColumn + 11)))
                  Call MergeCells(Range(Cells(fRow + 9 + i - noOfMergedRows + 1, fColumn + 12), Cells(fRow + 9 + i, fColumn + 12)))
                  Call MergeCells(Range(Cells(fRow + 9 + i - noOfMergedRows + 1, fColumn + 13), Cells(fRow + 9 + i, fColumn + 13)))
                  Call MergeCells(Range(Cells(fRow + 9 + i - noOfMergedRows + 1, fColumn + 14), Cells(fRow + 9 + i, fColumn + 14)))
              Else
                  noOfMergedRows = 1
              End If
            End If
        End With
    Next i
    
    kde.EntireRow.AutoFit
    Call AutoFitMergedCellRowHeight(kde)
    
    
End Sub
'Vrati adresu
Function GetAddress(selectedStop As rStop) As String

    With selectedStop
     GetAddress = .Street & " " & .HouseNumber + IIf(Len(.Street + .HouseNumber) > 0, ", ", "")
     GetAddress = GetAddress + .City + IIf(Len(.City) > 0, ", ", "")
     GetAddress = GetAddress + .PostCode + IIf(Len(.PostCode) > 0, ", ", "")
     GetAddress = GetAddress + .Country
     If (Right(GetAddress, 1) = ",") Then GetAddress = Left(GetAddress, Len(GetAddress) - 1)
    End With

End Function
'Otestuje jestli pouzivat cislo trasy, nebo uzivatelske id trasy
Function TestUsageOfRouteUserDefinedId() As Boolean
Dim result As Boolean
Dim i As Long

    result = False
    i = 2
    Do Until (Sheets("Source").Cells(i, 1)) = "" Or result
        If (Sheets("Source").Cells(i, 3) <> Sheets("Source").Cells(1, 3)) Then result = True
        i = i + 1
    Loop
    
    i = 2
    If result Then
         Do Until (Sheets("Source").Cells(i, 1)) = ""
            If (Sheets("Source").Cells(i, 3) = "") Then result = False
            i = i + 1
        Loop
    End If
    
    TestUsageOfRouteUserDefinedId = result
    
    TestUsageOfRouteUserDefinedId = False
    
End Function
'Smaze treti rozmer pokud neobsahuje zadna data
Sub DeleteThird()

    If SelectedRoute.Third = 0 Then
       With Sheets.Item(2)
            .Rows("6:6").Hidden = True
            .Columns("Q:Q").Hidden = True
            Call FormatBlackFrame(Range(.Cells(fRow + 3, fColumn + 5), .Cells(fRow + 3, fColumn + 7)))
       End With
    End If

End Sub

Sub AutoFitMergedCellRowHeight(kde As Range)
Dim CurrentRowHeight As Single, MergedCellRgWidth As Single
Dim CurrCell As Range
Dim ActiveCellWidth As Single, PossNewRowHeight As Single
Dim StartCell As Range, c As Range, MergeRng As Range, Cell As Range
Dim a() As String, isect As Range, i

    'Create an array of merged cell addresses that have wrapped text
    For Each c In kde
        If c.MergeCells Then
            With c.MergeArea
                If .Rows.count = 1 And .WrapText = True Then
                    If MergeRng Is Nothing Then
                        Set MergeRng = c.MergeArea
                        ReDim a(0)
                        a(0) = c.MergeArea.Address
                    Else
                    Set isect = Intersect(c, MergeRng)
                        If isect Is Nothing Then
                            Set MergeRng = Union(MergeRng, c.MergeArea)
                            ReDim Preserve a(UBound(a) + 1)
                            a(UBound(a)) = c.MergeArea.Address
                        End If
                    End If
                End If
            End With
        End If
    Next c


    Application.ScreenUpdating = False
    
    'Loop thru merged cells
    For i = 0 To UBound(a)
    Range(a(i)).Select
          With ActiveCell.MergeArea
                If .Rows.count = 1 And .WrapText = True Then
                    'Application.ScreenUpdating = False
                    CurrentRowHeight = .RowHeight
                    ActiveCellWidth = ActiveCell.ColumnWidth
                    For Each CurrCell In Selection
                        MergedCellRgWidth = CurrCell.ColumnWidth + MergedCellRgWidth
                    Next
                    .MergeCells = False
                    .Cells(1).ColumnWidth = MergedCellRgWidth
                    .EntireRow.AutoFit
                    PossNewRowHeight = .RowHeight
                    .Cells(1).ColumnWidth = ActiveCellWidth
                    .MergeCells = True
                    .RowHeight = IIf(CurrentRowHeight > PossNewRowHeight, _
                      CurrentRowHeight, PossNewRowHeight)
                End If
            End With
    MergedCellRgWidth = 0
    Next i
    
    Application.ScreenUpdating = True
    
    'Clean up
    Set c = Nothing
    Set MergeRng = Nothing
    Set Cell = Nothing

End Sub
  

Attribute VB_Name = "a55_CreateListOfOrders"
Option Explicit
'Vytvori seznam objednavke na listu Objednavky
Sub CreateListOfOrders()
Dim i, pozice As Integer

    With Sheets.Item(4)
        .Columns("B:O").ColumnWidth = 100
        .Select
        .Cells.Clear
        .Rows.RowHeight = 12.75
        ActiveWindow.DisplayGridlines = False
        For i = 0 To UBound(HeaderOrders)
            .Cells(2, 2 + i) = HeaderOrders(i)
        Next i
        Call FormatBlackFrame(Range(.Cells(2, 2), .Cells(2, 2 + UBound(HeaderOrders))))
    End With
    i = 1
    pozice = 3
    Do Until Sheets("Source").Cells(i, 1) = ""
       With Sheets.Item(4)
          .Cells(pozice, 2) = Sheets("Source").Cells(i, 35)
          .Cells(pozice, 3) = Sheets("Source").Cells(i, 2)
          .Cells(pozice, 4) = Sheets("Source").Cells(i, 3)
          .Cells(pozice, 5) = Sheets("Source").Cells(i, 23)
          .Cells(pozice, 6) = Sheets("Source").Cells(i, 24)
          .Cells(pozice, 7) = Sheets("Source").Cells(i, 26)
          .Cells(pozice, 8) = Sheets("Source").Cells(i, 30)
          .Cells(pozice, 9) = JoinTwoStrings(Sheets("Source").Cells(i, 27), Sheets("Source").Cells(i, 28), " ")
          .Cells(pozice, 10) = Sheets("Source").Cells(i, 29)
          .Cells(pozice, 11) = Sheets("Source").Cells(i, 6)
          
          .Cells(pozice, 12) = Sheets("Source").Cells(i, 60)
          
          .Cells(pozice, 13) = Sec2Time(Sheets("Source").Cells(i, 17))
          .Cells(pozice, 14) = Sec2Time(Sheets("Source").Cells(i, 38))
          .Cells(pozice, 15) = Sheets("Source").Cells(i, 44)
          .Cells(pozice, 16) = Round(Sheets("Source").Cells(i, 45), 1)
          .Cells(pozice, 17) = Round(Sheets("Source").Cells(i, 52), 1) 'treti
          .Cells(pozice, 18) = Sheets("Source").Cells(i, 46)
          .Cells(pozice, 19) = Round(Sheets("Source").Cells(i, 47), 1)
          .Cells(pozice, 20) = Round(Sheets("Source").Cells(i, 53), 1) 'treti zpet
          .Cells(pozice, 21) = Sheets("Source").Cells(i, 32) & _
                               IIf(WorksheetFunction.And(Sheets("Source").Cells(i, 32) <> "", Sheets("Source").Cells(i, 36) <> ""), "/", "") & _
                               Sheets("Source").Cells(i, 36)
          .Cells(pozice, 22) = Sheets("Source").Cells(i, 48)
          
          'u kumulovanych objednavek se nastavi objemy na nulu
          If (i > 1) Then
             If (Sheets("Source").Cells(i, 24) = Sheets("Source").Cells(i - 1, 24) And Sheets("Source").Cells(i, 23) = Sheets("Source").Cells(i - 1, 23)) Then
                .Cells(pozice, 15) = CInt(0)
                .Cells(pozice, 16) = CInt(0)
                .Cells(pozice, 17) = CInt(0)
                .Cells(pozice, 18) = CInt(0)
                .Cells(pozice, 19) = CInt(0)
                .Cells(pozice, 20) = CInt(0)
             End If
          End If
       End With
       pozice = pozice + 1
       i = i + 1
    Loop
    
    Call FormatDotFrame(Range(Sheets.Item(4).Cells(3, 2), Sheets.Item(4).Cells(pozice - 1, 2 + UBound(HeaderOrders))), 25.5, xlLeft)
    Range(Sheets.Item(4).Cells(3, 2), Sheets.Item(4).Cells(pozice - 1, 2 + UBound(HeaderOrders))).RowHeight = 12.5
    
    'Setridi dle pozadavku KBT
    Sheets.Item(4).Select
    Sheets.Item(4).Range("B2:V10000").Select
    Selection.Sort Key1:=Sheets.Item(4).Range("B3"), Order1:=xlAscending, Header:=xlGuess, _
                   Orientation:=xlTopToBottom, MatchCase:=False, DataOption1:=xlSortNormal
    'Nastavi sirku sloupce dle textu
    Columns("B:V").EntireColumn.AutoFit
    Sheets.Item(4).Cells(1, 1).Select
    
    'Nastavi zahlavi a zapati
    With Sheets.Item(4).PageSetup
        .FitToPagesWide = 1
        .FitToPagesTall = 999
        .LeftFooter = "&P/&N"
        .CenterFooter = Application.UserName & ": " & Now
        .RightFooter = "www.rinkai.cz"
        .CenterHeader = "Datum rozvozu: " & Sheets("Source").Cells(1, 25)
    End With
    
End Sub




Attribute VB_Name = "a60_CreateListOfRoutes"
Option Explicit
'Vytvori seznam tras na listu Trasy
Sub MainCreateListOfRoutes()
    
    Call GetRoutes
    Call OutputHeaderRoutes
    Call OutputBodyRoutes
   
End Sub
'Vytvori seznam vsech tras
Sub GetRoutes()
Dim i As Integer
Dim r As String

    i = 1
    
    Do Until Sheets("Data").Cells(i, 1) = ""
       r = Sheets("Data").Cells(i, 1)
       ReDim Preserve Routes(1 To i)
       FillSelectedRoute (r)
       Routes(i) = SelectedRoute
       i = i + 1
    Loop

End Sub

'Vytiskne hlavicku
Sub OutputHeaderRoutes()
Dim i As Integer

    With Sheets.Item(5)
               
        .Select
        .Cells.Clear
        
        Call FormatBlackFrame(Range(.Cells(fRow, fColumn), .Cells(fRow, fColumn + UBound(HeaderRoutes))))
        
        For i = 0 To UBound(HeaderRoutes)
            .Cells(fRow, fColumn + i) = HeaderRoutes(i)
        Next i
   
   End With
       
End Sub
'Vytiskne seznam tras
Sub OutputBodyRoutes()
Dim i, j As Integer
Dim hKg As Double
Dim uuu, ttt As Long

    Call FormatDotFrame(Range(Sheets.Item(5).Cells(fRow + 1, fColumn), Sheets.Item(5).Cells(fRow + UBound(Routes), fColumn + UBound(HeaderRoutes))), 12.75, xlCenter)
     
    For i = 1 To UBound(Routes)
    
        With Sheets.Item(5)
               
             .Cells(fRow + i, fColumn) = Routes(i).DueDate
             .Cells(fRow + i, fColumn + 1) = Routes(i).RouteNumber
             .Cells(fRow + i, fColumn + 2) = Routes(i).RouteUserDefinedId
             .Cells(fRow + i, fColumn + 3) = Routes(i).PlateNumber
             .Cells(fRow + i, fColumn + 4) = Routes(i).Driver
             .Cells(fRow + i, fColumn + 5) = Sec2Time(Routes(i).StartTime)
             .Cells(fRow + i, fColumn + 5).NumberFormat = "h:mm"
             .Cells(fRow + i, fColumn + 6) = Sec2Time(Routes(i).StartTime + Routes(i).TimeAtDepot + Routes(i).AdminTimeOut)
             .Cells(fRow + i, fColumn + 6).NumberFormat = "h:mm"
             .Cells(fRow + i, fColumn + 7) = Sec2Time(Routes(i).EndTime - Routes(i).TimeAtDepotBack - Routes(i).AdminTimeIn)
             .Cells(fRow + i, fColumn + 7).NumberFormat = "h:mm"
             .Cells(fRow + i, fColumn + 8) = Sec2Time(Routes(i).EndTime)
             .Cells(fRow + i, fColumn + 8).NumberFormat = "h:mm"
             
             .Cells(fRow + i, fColumn + 9) = Sec2Time(GetLatestStartTime(i))
             .Cells(fRow + i, fColumn + 9).NumberFormat = "h:mm"
             
             .Cells(fRow + i, fColumn + 10) = Routes(i).NoOfStops
             .Cells(fRow + i, fColumn + 11) = UBound(Routes(i).Stops)
             .Cells(fRow + i, fColumn + 12) = Routes(i).Kg
             .Cells(fRow + i, fColumn + 12).NumberFormat = "#,##0.0"
             .Cells(fRow + i, fColumn + 13) = Routes(i).Volume
             .Cells(fRow + i, fColumn + 13).NumberFormat = "#,##0.0"
             .Cells(fRow + i, fColumn + 14) = Routes(i).Third
             .Cells(fRow + i, fColumn + 14).NumberFormat = "#,##0.0"
             .Cells(fRow + i, fColumn + 15) = Routes(i).Km
             .Cells(fRow + i, fColumn + 15).NumberFormat = "#,##0.0"
             .Cells(fRow + i, fColumn + 16) = Sec2Time(Routes(i).Time)
             .Cells(fRow + i, fColumn + 16).NumberFormat = "h:mm"
        End With
    Next i
    
    Sheets.Item(5).Columns.AutoFit
    
End Sub
Function GetLatestStartTime(ByVal index As Integer) As Long
Dim i As Integer
Dim reserve, tWT As Long
Dim hStop As rStop

    reserve = 100000000
    
    For i = 1 To UBound(Routes(index).Stops)
        
        hStop = Routes(index).Stops(i)
         
        If (hStop.TW2F <> cNotDefined And hStop.TW2T <> cNotDefined And (hStop.Arrival >= hStop.TW2F And hStop.Departure <= hStop.TW2T)) Then
           tWT = hStop.TW2T
        Else
           If hStop.Arrival >= hStop.TW1F And hStop.Departure <= hStop.TW1T Then
              tWT = hStop.TW1T
           Else
               reserve = 0
           End If
        End If
            
        reserve = WorksheetFunction.Max(WorksheetFunction.Min(reserve, tWT - hStop.Arrival), 0)
    
    Next i
                
    GetLatestStartTime = reserve
    
End Function
Function GetEarliestStartTime(ByVal index As Integer)
Dim i As Integer
Dim reserve, tWF As Long
Dim hStop As rStop

    reserve = 100000000
    
    For i = 1 To UBound(Routes(index).Stops)
        
        hStop = Routes(index).Stops(i)
        
        If (hStop.TW2F <> cNotDefined And hStop.TW2T <> cNotDefined And (hStop.Arrival >= hStop.TW2F And hStop.Departure <= hStop.TW2T)) Then
           tWF = hStop.TW2F
        Else
           If hStop.Arrival >= hStop.TW1F And hStop.Departure <= hStop.TW1T Then
              tWF = hStop.TW1F
           Else
               reserve = 0
           End If
        End If
            
        reserve = WorksheetFunction.Max(WorksheetFunction.Min(reserve, hStop.Arrival - tWF), 0)
    
    Next i

    GetEarliestStartTime = reserve
    
End Function
Attribute VB_Name = "a65_CreateGanttChart"
Option Explicit

Private r As Integer
Private s As Integer
Private NoOfRows As Integer
Private NoOfColumns As Integer
'Create Gantt Chart
Sub MainCreateGanttChart()
Dim i, j, k, l, ind As Integer
Dim t, hTime, reserve As Long
Dim indexes As Variant

    Sheets.Item(7).Select
    
    r = 1
    s = 40
    
    On Error Resume Next
    
    Sheets.Item(7).ChartObjects.Delete
    Sheets.Item(7).Cells.Clear
    
    NoOfRows = UBound(VehiclesList)
    
    'Print data
    For i = 1 To UBound(VehiclesList)
    
        ReDim indexes(1 To UBound(VehiclesList(i).Routes))
    
        For k = 1 To UBound(VehiclesList(i).StartTimes)
            hTime = Application.WorksheetFunction.Small(VehiclesList(i).StartTimes, k)
        
            For l = 1 To UBound(VehiclesList(i).StartTimes)
                If VehiclesList(i).StartTimes(l) = hTime Then indexes(k) = l
            Next l
        Next k
        
        t = 0
        Sheets.Item(7).Cells(r + i, s) = VehiclesList(i).PlateNumber
        Sheets.Item(7).Cells(r + i + NoOfRows + 1, s) = VehiclesList(i).PlateNumber
        For j = 1 To UBound(VehiclesList(i).Routes)
            ind = Gantt_GetRouteIndex(VehiclesList(i).Routes(indexes(j)))
            Sheets.Item(7).Cells(r + i, s + (j - 1) * 2 + 1) = Sec2Time(Routes(ind).StartTime - t)
            t = Routes(ind).StartTime
            Sheets.Item(7).Cells(r + i, s + (j - 1) * 2 + 2) = Sec2Time(Routes(ind).EndTime - t)
            t = Routes(ind).EndTime
            'print reserve
            reserve = GetLatestStartTime(ind)
            Sheets.Item(7).Cells(r + i + NoOfRows + 1, s + (j - 1) * 2 + 2) = Sec2Time(reserve)
            
        Next j
        'Last part
        Sheets.Item(7).Cells(r + i, s + (j - 1) * 2 + 1) = Sec2Time(24 * CLng(3600) - t)
    Next i
    
    NoOfColumns = Gantt_GetNoOfColums()
    Call Gantt_SortVehicles(Range(Cells(r + 1, s), Cells(r + NoOfRows, s + NoOfColumns)))
    Call Gantt_SortVehicles(Range(Cells(r + 1 + NoOfRows + 1, s), Cells(r + NoOfRows + NoOfRows + 1, s + NoOfColumns)))
    Call Gantt_CreateGantt
    
    Cells(1, 1).Select

End Sub
'Get index of route in Routes array
Function Gantt_GetRouteIndex(ind As Integer) As Integer
Dim i As Integer
    
    For i = 1 To UBound(Routes)
        If Routes(i).RouteNumber = ind Then Gantt_GetRouteIndex = i
    Next i

End Function
'Get number of columns
Function Gantt_GetNoOfColums()
Dim i, j As Integer
Dim result As Integer

    result = 0
    
    For i = 1 To NoOfRows
        j = 0
        Do Until Sheets.Item(7).Cells(r + i, s + j) = ""
           If j > result Then result = j
           j = j + 1
        Loop
    Next

    Gantt_GetNoOfColums = result

End Function
'Sort data by plate number
Sub Gantt_SortVehicles(where As Range)
    
    Worksheets.Item(7).Select
    Worksheets.Item(7).Sort.SortFields.Clear
    Worksheets.Item(7).Sort.SortFields.Add Key:=Range(Cells(r + 1, s), Cells(r + NoOfRows, s)), _
        SortOn:=xlSortOnValues, Order:=xlDescending, DataOption:=xlSortNormal
    With ActiveWorkbook.Worksheets("Gantt").Sort
        .SetRange where
        .Header = xlGuess
        .MatchCase = False
        .Orientation = xlTopToBottom
        .SortMethod = xlPinYin
        .Apply
    End With

End Sub
'Create Gantt graph
Sub Gantt_CreateGantt()
Dim i As Integer
Dim errRange As Range
Dim testGraphAxes As Variant

    On Error Resume Next
    ActiveSheet.Shapes.AddChart.Select
    
    With ActiveChart
        .SetSourceData Source:=Range(Cells(r, s), Cells(r + NoOfRows, s + NoOfColumns))
        
        'test jestli nahodou excel samovolne neprohodil osy
        testGraphAxes = .SeriesCollection(1).XValues
        If Err.Number <> 0 Then
            .PlotBy = xlColumns
            Err = 0
        End If
        
        .ChartType = xlBarStacked
        .Parent.Left = Cells(1, 1).Left
        .Parent.Top = Cells(1, 1).Top
        .Parent.Height = Range(Cells(1, 1), Cells(45, 1)).Height
        .Parent.Width = Range(Cells(1, 1), Cells(1, 29)).Width
        .Legend.Delete
        .Axes(xlValue).MinimumScale = 0
        .Axes(xlValue).MaximumScale = 1
        .Axes(xlValue).MajorUnit = 0.083333333333333
        .SetElement (msoElementChartTitleAboveChart)
        .ChartTitle.Text = Routes(1).DueDate
        
        For i = 1 To NoOfColumns
            If i Mod 2 = 0 Then
               If i Mod 4 = 0 Then
                  .SeriesCollection(i).Interior.Color = RGB(160, 160, 160)
                  .SeriesCollection(i).Border.Color = RGB(160, 160, 160)
               Else
                  .SeriesCollection(i).Interior.Color = RGB(228, 60, 60)
                  .SeriesCollection(i).Border.Color = RGB(228, 60, 60)
               End If
               
               'add the maximum delay for each route
               Set errRange = Range(Cells(r + 1 + NoOfRows + 1, s + i), Cells(r + NoOfRows + NoOfRows + 1, s + i))
               ActiveChart.SeriesCollection(i).Select
               ActiveChart.SeriesCollection(i).ErrorBar Direction:=xlX, Include:= _
                xlPlusValues, Type:=xlCustom, Amount:=errRange
               
               
            Else
                .SeriesCollection(i).Format.Fill.Visible = msoFalse
                .SeriesCollection(i).Format.line.Visible = msoFalse
            End If
        Next i
        
    End With

End Sub
Attribute VB_Name = "a70_Formats"
Option Explicit

'cerny ramecek, zarovnani na stred
Sub FormatBlackFrame(kde As Range)

    kde.Borders(xlDiagonalDown).LineStyle = xlNone
    kde.Borders(xlDiagonalUp).LineStyle = xlNone
    With kde.Borders(xlEdgeLeft)
        .LineStyle = xlContinuous
        .ColorIndex = 0
        .Weight = xlThin
    End With
    With kde.Borders(xlEdgeTop)
        .LineStyle = xlContinuous
        .ColorIndex = 0
        .Weight = xlThin
    End With
    With kde.Borders(xlEdgeBottom)
        .LineStyle = xlContinuous
        .ColorIndex = 0
        .Weight = xlThin
    End With
    With kde.Borders(xlEdgeRight)
        .LineStyle = xlContinuous
        .ColorIndex = 0
        .Weight = xlThin
    End With
    With kde.Borders(xlInsideVertical)
        .LineStyle = xlContinuous
        .ColorIndex = 0
        .Weight = xlThin
    End With
    If kde.Rows.count > 1 Then
        With kde.Borders(xlInsideHorizontal)
            .LineStyle = xlContinuous
            .ColorIndex = 0
            .Weight = xlThin
        End With
    End If
    With kde
        .HorizontalAlignment = xlCenter
        .VerticalAlignment = xlCenter
        .WrapText = False
        .Orientation = 0
        .AddIndent = False
        .IndentLevel = 0
        .ShrinkToFit = True
        .ReadingOrder = xlContext
    End With
    
End Sub
'slouci bunky
Sub MergeCells(kde As Range)
    
    Application.DisplayAlerts = False
    
    With kde
        .HorizontalAlignment = xlCenter
        .VerticalAlignment = xlCenter
        .WrapText = True
        .Orientation = 0
        .AddIndent = False
        .IndentLevel = 0
        .ShrinkToFit = False
        .ReadingOrder = xlContext
        .MergeCells = True
    End With
    
    Application.DisplayAlerts = True
   
End Sub
'teckovany ramecek
Sub FormatDotFrame(kde As Range, HeightRows As Double, AllignTo As Variant)
    
    kde.Borders(xlDiagonalDown).LineStyle = xlNone
    kde.Borders(xlDiagonalUp).LineStyle = xlNone
    With kde.Borders(xlEdgeLeft)
        .LineStyle = xlContinuous
        .ColorIndex = 0
        .Weight = xlThin
    End With
    With kde.Borders(xlEdgeTop)
        .LineStyle = xlContinuous
        .ColorIndex = 0
        .Weight = xlThin
    End With
    With kde.Borders(xlEdgeBottom)
        .LineStyle = xlContinuous
        .ColorIndex = 0
        .Weight = xlThin
    End With
    With kde.Borders(xlEdgeRight)
        .LineStyle = xlContinuous
        .ColorIndex = 0
        .Weight = xlThin
    End With
    With kde.Borders(xlInsideVertical)
        .LineStyle = xlContinuous
        .ColorIndex = 0
        .Weight = xlHairline
    End With
    If kde.Rows.count > 1 Then
        With kde.Borders(xlInsideHorizontal)
            .LineStyle = xlContinuous
            .ColorIndex = 0
            .Weight = xlHairline
        End With
    End If
      
    With kde
        .HorizontalAlignment = AllignTo
        .VerticalAlignment = xlCenter
        .WrapText = True
        .Orientation = 0
        .AddIndent = False
        .IndentLevel = 0
        .ShrinkToFit = False
        .ReadingOrder = xlContext
        .MergeCells = False
    End With
    
    kde.Rows.RowHeight = HeightRows
    
End Sub
'Vrati casove okno ve stringu
Function TimeWindowFormatter(TW1F As Long, TW1T As Long, TW2F As Long, TW2T As Long) As String

    TimeWindowFormatter = ""
    If (TW1F <> cNotDefined) Then TimeWindowFormatter = Sec2Time(TW1F) + "-" + Sec2Time(TW1T)
    If (TW2F <> cNotDefined) Then TimeWindowFormatter = TimeWindowFormatter + ", " + Sec2Time(TW2F) + "-" + Sec2Time(TW2T)
  
End Function
'Prevod casu ze sekund do stringu
Function Sec2Time(sec As Long) As String
Dim hour, minute As Integer

    If (sec >= 0) Then
        hour = WorksheetFunction.RoundDown(sec / 3600, 0)
        minute = Round((sec - hour * 3600) / 60, 0)
        If (minute = 60) Then
            minute = 0
            hour = hour + 1
        End If
        Sec2Time = CStr(hour) + ":" + IIf(minute < 10, "0" + CStr(minute), CStr(minute))
    Else
        Sec2Time = ""
    End If

End Function

'Prevod casu ze sekund do stringu
Function Sec2Time_Skalican(sec As Long) As String
Dim hour, minute As Integer

    sec = (sec - 3 * CLng(3600) + 24 * CLng(3600)) Mod 24 * CLng(3600)

    If (sec >= 0) Then
        hour = WorksheetFunction.RoundDown(sec / 3600, 0)
        minute = Round((sec - hour * 3600) / 60, 0)
        If (minute = 60) Then
            minute = 0
            hour = hour + 1
        End If
        Sec2Time_Skalican = CStr(hour) + ":" + IIf(minute < 10, "0" + CStr(minute), CStr(minute))
    Else
        Sec2Time_Skalican = ""
    End If

End Function



Attribute VB_Name = "a80_Print"
'Vytiskne list na aktivni tiskarne
Sub PrintNL(poradi As Integer, pocet As Integer)
Dim Landscape As Boolean
Dim NoOfPages As Integer

    Landscape = Sheets.Item(2).CheckBox1.value
    NoOfPages = IIf(Sheets.Item(2).cbFitToOnePage.value, 1, 2)
    
    With Sheets.Item(2).PageSetup
        .CenterHeader = ""
        .LeftFooter = IIf(Sheets.Item(6).Range("LNG_DATA").Cells(44, SelectedLanguage_Index) = "", poradi & "/" & pocet, Sheets.Item(6).Range("LNG_DATA").Cells(44, SelectedLanguage_Index))
        .CenterFooter = IIf(Sheets.Item(6).Range("LNG_DATA").Cells(45, SelectedLanguage_Index) = "", Application.UserName & ": " & Now, Sheets.Item(6).Range("LNG_DATA").Cells(45, SelectedLanguage_Index))
        .RightFooter = Sheets.Item(6).Range("LNG_DATA").Cells(46, SelectedLanguage_Index)
        .LeftHeader = Sheets.Item(6).Range("LNG_DATA").Cells(47, SelectedLanguage_Index)
        .RightHeader = Sheets.Item(6).Range("LNG_DATA").Cells(48, SelectedLanguage_Index)
        .LeftMargin = Application.InchesToPoints(0)
        .RightMargin = Application.InchesToPoints(0)
        .TopMargin = Application.InchesToPoints(0.78740157480315)
        .BottomMargin = Application.InchesToPoints(0.78740157480315)
        .HeaderMargin = Application.InchesToPoints(0.31496062992126)
        .FooterMargin = Application.InchesToPoints(0.31496062992126)
        .PrintHeadings = False
        .PrintGridlines = False
        .PrintComments = xlPrintNoComments
        .CenterHorizontally = False
        .CenterVertically = False
        If Landscape Then .Orientation = xlLandscape Else .Orientation = xlPortrait
        .Draft = False
        .PaperSize = xlPaperA4
        .FirstPageNumber = xlAutomatic
        .Order = xlDownThenOver
        .BlackAndWhite = False
        .Zoom = False
        .FitToPagesWide = 1
        .FitToPagesTall = NoOfPages
        .PrintErrors = xlPrintErrorsDisplayed
        .OddAndEvenPagesHeaderFooter = False
        .DifferentFirstPageHeaderFooter = False
        .ScaleWithDocHeaderFooter = True
        .AlignMarginsHeaderFooter = True
    End With
    
    
    ExecuteExcel4Macro "PRINT(1,,,1,,FALSE,,,,,,2,,,TRUE,,FALSE)"

End Sub
'Ulozi list jako PDF soubor
Sub PrintNL2PDF(fileName As String, poradi As Integer, pocet As Integer)
Dim Landscape As Boolean
    
    Landscape = Sheets.Item(2).CheckBox1.value
    
    With Sheets.Item(2).PageSetup
        .LeftFooter = IIf(Sheets.Item(6).Range("LNG_DATA").Cells(44, SelectedLanguage_Index) = "", poradi & "/" & pocet, Sheets.Item(6).Range("LNG_DATA").Cells(44, SelectedLanguage_Index))
        .CenterFooter = IIf(Sheets.Item(6).Range("LNG_DATA").Cells(45, SelectedLanguage_Index) = "", Application.UserName & ": " & Now, Sheets.Item(6).Range("LNG_DATA").Cells(45, SelectedLanguage_Index))
        .RightFooter = Sheets.Item(6).Range("LNG_DATA").Cells(46, SelectedLanguage_Index)
        .LeftHeader = Sheets.Item(6).Range("LNG_DATA").Cells(47, SelectedLanguage_Index)
        .RightHeader = Sheets.Item(6).Range("LNG_DATA").Cells(48, SelectedLanguage_Index)
        If Landscape Then .Orientation = xlLandscape Else .Orientation = xlPortrait
    End With
    
    fileName = Replace(fileName, ":", "-")
    fileName = Replace(fileName, "\", "-")
    fileName = Replace(fileName, "/", "-")
        
    ActiveSheet.ExportAsFixedFormat Type:=xlTypePDF, _
                                    fileName:=ExportFolder & "\" & fileName & ".pdf", _
                                    Quality:=xlQualityStandard, _
                                    IncludeDocProperties:=True, _
                                    IgnorePrintAreas:=False, _
                                    OpenAfterPublish:=False
                                    
End Sub





Attribute VB_Name = "a90_Others"
Sub Zacatek()
    
    With Application
       .ScreenUpdating = False
       .Calculation = xlCalculationManual
    End With
    
   ' Header = Array("Obj.", "N|fffd|zev", "Adresa", "Km", "|fffd|ek|fffd|n|fffd|", "P|fffd||fffd|jezd", "Odjezd", "Okno", "Kg", "Objem", "Treti", "Pozn|fffd|mky")
    Header = Array(Sheets.Item(6).Range("LNG_DATA").Cells(37, SelectedLanguage_Index), _
                   Sheets.Item(6).Range("LNG_DATA").Cells(38, SelectedLanguage_Index), _
                   Sheets.Item(6).Range("LNG_DATA").Cells(39, SelectedLanguage_Index), _
                   Sheets.Item(6).Range("LNG_DATA").Cells(11, SelectedLanguage_Index), _
                   Sheets.Item(6).Range("LNG_DATA").Cells(56, SelectedLanguage_Index), _
                   Sheets.Item(6).Range("LNG_DATA").Cells(27, SelectedLanguage_Index), _
                   Sheets.Item(6).Range("LNG_DATA").Cells(21, SelectedLanguage_Index), _
                   Sheets.Item(6).Range("LNG_DATA").Cells(40, SelectedLanguage_Index), _
                   Sheets.Item(6).Range("LNG_DATA").Cells(9, SelectedLanguage_Index), _
                   Sheets.Item(6).Range("LNG_DATA").Cells(19, SelectedLanguage_Index), _
                   Sheets.Item(6).Range("LNG_DATA").Cells(57, SelectedLanguage_Index), _
                   Sheets.Item(6).Range("LNG_DATA").Cells(41, SelectedLanguage_Index), _
                   Sheets.Item(6).Range("LNG_DATA").Cells(70, SelectedLanguage_Index))
                       
    'HeaderOrders = Array("|fffd|.objedn|fffd|vky", "|fffd|.trasy", "Po|fffd|ad|fffd|", "|fffd|.lokace", "Lokace", "SPZ", "Ridic", "Za|fffd|.trasy", "P|fffd||fffd|jezd", "Kg", "Objem", "Kg zp|fffd|t", "Objem zp|fffd|t", "Pozn|fffd|mky", "Pozn|fffd|mka k vozidlu", "Komentar")
    HeaderOrders = Array(Sheets.Item(6).Range("LNG_DATA").Cells(4, SelectedLanguage_Index), _
                         Sheets.Item(6).Range("LNG_DATA").Cells(2, SelectedLanguage_Index), _
                         Sheets.Item(6).Range("LNG_DATA").Cells(49, SelectedLanguage_Index), _
                         Sheets.Item(6).Range("LNG_DATA").Cells(24, SelectedLanguage_Index), _
                         Sheets.Item(6).Range("LNG_DATA").Cells(3, SelectedLanguage_Index), _
                         Sheets.Item(6).Range("LNG_DATA").Cells(13, SelectedLanguage_Index), _
                         Sheets.Item(6).Range("LNG_DATA").Cells(66, SelectedLanguage_Index), _
                         Sheets.Item(6).Range("LNG_DATA").Cells(65, SelectedLanguage_Index), _
                         Sheets.Item(6).Range("LNG_DATA").Cells(67, SelectedLanguage_Index), _
                         Sheets.Item(6).Range("LNG_DATA").Cells(29, SelectedLanguage_Index), _
                         Sheets.Item(6).Range("LNG_DATA").Cells(59, SelectedLanguage_Index), _
                         Sheets.Item(6).Range("LNG_DATA").Cells(36, SelectedLanguage_Index), _
                         Sheets.Item(6).Range("LNG_DATA").Cells(27, SelectedLanguage_Index), _
                         Sheets.Item(6).Range("LNG_DATA").Cells(9, SelectedLanguage_Index), _
                         Sheets.Item(6).Range("LNG_DATA").Cells(19, SelectedLanguage_Index), _
                         Sheets.Item(6).Range("LNG_DATA").Cells(57, SelectedLanguage_Index), _
                         Sheets.Item(6).Range("LNG_DATA").Cells(10, SelectedLanguage_Index), _
                         Sheets.Item(6).Range("LNG_DATA").Cells(20, SelectedLanguage_Index), _
                         Sheets.Item(6).Range("LNG_DATA").Cells(58, SelectedLanguage_Index), _
                         Sheets.Item(6).Range("LNG_DATA").Cells(41, SelectedLanguage_Index), _
                         Sheets.Item(6).Range("LNG_DATA").Cells(69, SelectedLanguage_Index))

    'HeaderRoutes = Array("Datum", "Trasa", "SPZ", "Ridic" "Start", "V|fffd|jezd", "P|fffd||fffd|jezd", "Konec","Max. zpozdeni", "Po|fffd|et objedn|fffd|vek", "Po|fffd|et zast|fffd|vek", "Kg", "Objem", "Km", "Doba |fffd||fffd|zen|fffd|")
    HeaderRoutes = Array(Sheets.Item(6).Range("LNG_DATA").Cells(5, SelectedLanguage_Index), _
                         Sheets.Item(6).Range("LNG_DATA").Cells(34, SelectedLanguage_Index), _
                         Sheets.Item(6).Range("LNG_DATA").Cells(49, SelectedLanguage_Index), _
                         Sheets.Item(6).Range("LNG_DATA").Cells(29, SelectedLanguage_Index), _
                         Sheets.Item(6).Range("LNG_DATA").Cells(59, SelectedLanguage_Index), _
                         Sheets.Item(6).Range("LNG_DATA").Cells(42, SelectedLanguage_Index), _
                         Sheets.Item(6).Range("LNG_DATA").Cells(21, SelectedLanguage_Index), _
                         Sheets.Item(6).Range("LNG_DATA").Cells(27, SelectedLanguage_Index), _
                         Sheets.Item(6).Range("LNG_DATA").Cells(12, SelectedLanguage_Index), _
                         Sheets.Item(6).Range("LNG_DATA").Cells(64, SelectedLanguage_Index), _
                         Sheets.Item(6).Range("LNG_DATA").Cells(61, SelectedLanguage_Index), _
                         Sheets.Item(6).Range("LNG_DATA").Cells(23, SelectedLanguage_Index), _
                         Sheets.Item(6).Range("LNG_DATA").Cells(9, SelectedLanguage_Index), _
                         Sheets.Item(6).Range("LNG_DATA").Cells(19, SelectedLanguage_Index), _
                         Sheets.Item(6).Range("LNG_DATA").Cells(57, SelectedLanguage_Index), _
                         Sheets.Item(6).Range("LNG_DATA").Cells(11, SelectedLanguage_Index), _
                         Sheets.Item(6).Range("LNG_DATA").Cells(6, SelectedLanguage_Index))
    
    Worksheets("Source").Visible = True
    Worksheets("Data").Visible = True

End Sub
Sub Konec()
    
    With Application
       .ScreenUpdating = True
       .Calculation = xlCalculationAutomatic
       .StatusBar = False
    End With

    Worksheets("Source").Visible = xlVeryHidden
    Worksheets("Data").Visible = xlVeryHidden
    Sheets.Item(2).Select

End Sub
'Test jestli je pole NULL
Function ArrayIsNothing(inArray() As VehicleListItem) As Boolean
    
    On Error GoTo catch
    
    Dim i As Long
    i = UBound(inArray)
    ArrayIsNothing = False
    Exit Function
    
catch:
    ArrayIsNothing = True
    
End Function
'Vrati zvoleny
Function GetSelectedLanguageIndex(language As String) As Integer

    GetSelectedLanguageIndex = Switch(language = "CZE", 1, language = "ENG", 2, language = "RUS", 3, language = "SVK", 4, language = "POL", 5, _
                                      language = "AZE", 6, language = "ITA", 7, language = "ROM", 8)
    
End Function
'Prevod textu na double
Function String2Double(ByVal s As String)
    
    If Len(s) > 0 Then
       String2Double = CDbl(Replace(s, ".", Application.DecimalSeparator))
    Else
       String2Double = 0
    End If
    
End Function
'Prevod UTF8 na UTF16
Function UTF8_Decode(ByVal sStr As String)
Dim l As Long, sUTF8 As String, iChar As Integer, iChar2 As Integer

    For l = 1 To Len(sStr)
        iChar = Asc(Mid(sStr, l, 1))
        If iChar > 127 Then
            If Not iChar And 32 Then ' 2 chars
            iChar2 = Asc(Mid(sStr, l + 1, 1))
            sUTF8 = sUTF8 & ChrW$(((31 And iChar) * 64 + (63 And iChar2)))
            l = l + 1
        Else
            Dim iChar3 As Integer
            iChar2 = Asc(Mid(sStr, l + 1, 1))
            iChar3 = Asc(Mid(sStr, l + 2, 1))
            sUTF8 = sUTF8 & ChrW$((CLng((iChar And 15)) * 16 * 256) + ((iChar2 And 63) * 64) + (iChar3 And 63))
            l = l + 2
        End If
            Else
            sUTF8 = sUTF8 & Chr$(iChar)
        End If
    Next l
    
    'Kdyz text zacina rovnitkem, je treba predsadit uvozovky
    If (Left(sUTF8, 1) = "=") Then
        sUTF8 = "'" & sUTF8
    End If
    
    UTF8_Decode = sUTF8
        
End Function
'Vrati poradi tras v jakem se maji vytisknout
Function GetOrderForPrint() As String()
Dim i As Integer
Dim poradi() As String
    
    With Worksheets("Data")
        .Visible = True
        .Select
        .Sort.SortFields.Clear
        .Range(Sheets("Data").Columns(PlatesColumnNumber), Sheets("Data").Columns(PlatesColumnNumber + 4)).Select
    End With
        
    
    
    If Sheets.Item(2).CheckBox_Sorting.value Then
        Worksheets("Data").Sort.SortFields.Add Key:=Range("D1"), SortOn:=xlSortOnValues, Order:=xlAscending, DataOption:=xlSortNormal
        With Worksheets("Data").Sort
            .SetRange Sheets("Data").Range(Sheets("Data").Columns(PlatesColumnNumber), Sheets("Data").Columns(PlatesColumnNumber + 4))
            .Header = xlNo
            .MatchCase = False
            .Orientation = xlTopToBottom
            .SortMethod = xlPinYin
            .Apply
        End With
    Else
       If Sheets("Data").Cells(1, 5) <> cNotDefined Then
          Worksheets("Data").Sort.SortFields.Add Key:=Range("E1"), SortOn:=xlSortOnValues, Order:=xlAscending, DataOption:=xlSortNormal
          With Worksheets("Data").Sort
               .SetRange Sheets("Data").Range(Sheets("Data").Columns(PlatesColumnNumber), Sheets("Data").Columns(PlatesColumnNumber + 4))
               .Header = xlNo
               .MatchCase = False
               .Orientation = xlTopToBottom
               .SortMethod = xlPinYin
              .Apply
          End With
       End If
    End If
 
    i = 1
    Do Until Worksheets("Data").Cells(i, PlatesColumnNumber) = ""
        ReDim Preserve poradi(1 To i)
        poradi(i) = Worksheets("Data").Cells(i, PlatesColumnNumber)
        i = i + 1
    Loop
   
    Worksheets("Data").Visible = xlVeryHidden
    
    GetOrderForPrint = poradi
    
End Function


'Spoji dve retezce
Function JoinTwoStrings(ByVal s1 As String, ByVal s2 As String, separator As String) As String
Dim result As String
    
    result = s1
    If Len(s2) > 0 Then
       If Len(s1) > 0 Then
          result = result & separator & s2
       Else
          result = s2
       End If
    End If
    
    JoinTwoStrings = result

End Function


Attribute VB_Name = "h01_Combo"
Sub FullFillCombo()
        With Sheets.Item(2).comboLanguage
                .Clear
                .Style = fmStyleDropDownList
                .AddItem "AZE"
                .AddItem "CZE"
                .AddItem "ENG"
                .AddItem "ITA"
                .AddItem "POL"
                .AddItem "ROM"
                .AddItem "RUS"
                .AddItem "SVK"
        End With
End Sub



' InQuest injected base64 decoded content
' Kjx.j
' *'Z+a
' /x(Z

INQUEST-PP=macro
