Attribute VB_Name = "AdjustNamesForm"
Attribute VB_Base = "0{1E67A04E-2852-4E46-894E-24E7EF0826F2}{7FE281CE-092B-4B71-AC8C-C623739D3095}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False

Option Explicit
Private Sub AdjustNamesButton_Click()
Call Wheel_Engine.HideAdjustNames
End Sub
Attribute VB_Name = "PuzGen"
Attribute VB_Base = "0{DA04F97B-8391-4C82-B4E0-9031D31FD7B6}{144F61C7-6A79-47D1-AA02-A01841E93611}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False

Option Explicit
Private Sub ClearFormButton_Click()
PuzGen.PuzzleInput.Text = ""
PuzGen.CategoryInput.Text = ""
End Sub
Private Sub EmptyBoardButton_Click()
Dim row(1 To 4) As Long
Dim col(1 To 14) As Long
Dim rowstart(1 To 4) As Long
Dim words() As String
Dim s, e, X, y As Long
s = SlideShowWindows(1).View.Slide.SlideNumber
'Resets the current slide's board to blank tiles, clear background, no text

ActivePresentation.Slides(s).Shapes("Category").TextFrame.TextRange.Text = ""
Dim shp As Shape
On Error Resume Next
For Each shp In ActivePresentation.Slides(s).Shapes
    If shp.Name Like "Rectangle*" Then
        If shp.Name Like "*-*" Then
            shp.TextFrame.TextRange.Font.Color.RGB = RGB(255, 255, 255)
            shp.TextFrame.TextRange.Text = ""
            shp.Fill.Transparency = 1
        Else
        End If
    Else
    End If
Next shp

End Sub
Private Sub GeneratePuzzleButton_Click()
Dim row(1 To 4) As Long
Dim rowstart(1 To 4) As Long
Dim words() As String
Dim s, X, y As Long
Dim e(1 To 6) As Long
s = SlideShowWindows(1).View.Slide.SlideNumber
Dim wordblocks As New Collection

Call EmptyBoardButton_Click

'Takes the text in category field, and places it in the category text holder.
ActivePresentation.Slides(s).Shapes("Category").TextFrame.TextRange.Text = UCase(PuzGen.CategoryInput.Text)
'Takes the text in puzzle field, and splits it up into word chunks.

words() = Split(PuzGen.PuzzleInput.Text, " ")

    For X = 0 To UBound(words)
        wordblocks.Add (words(X))
    Next X
    
    For X = 1 To 4
    row(X) = 0
    Next X

'This is the tutorial board! Neat, huh?
'12         '9       '13          '4
'Loops through the rest of the rows 'Attempts to fit word chunks into rows. '12, 14, 14, 12
For X = 1 To wordblocks.Count
If row(1) + Len(wordblocks(X)) > 12 Then
If e(5) = 0 Then e(5) = 1
Else
    If e(5) < 1 Then
    row(1) = row(1) + Len(wordblocks(X)) + 1
    GoTo NextX
    Else
'    e(5) = 1
    End If
End If

If row(2) + Len(wordblocks(X)) > 14 Then
If e(5) = 1 Then e(5) = 2
Else
    If e(5) < 2 Then
    row(2) = row(2) + Len(wordblocks(X)) + 1
    GoTo NextX
    Else
'    e(5) = 2
    End If
End If

If row(3) + Len(wordblocks(X)) > 14 Then
If e(5) = 2 Then e(5) = 3
Else
    If e(5) < 3 Then
    row(3) = row(3) + Len(wordblocks(X)) + 1
    GoTo NextX
    Else
'    e(5) = 3
    End If
End If

If row(4) + Len(wordblocks(X)) > 12 Then
If e(5) = 3 Then e(5) = 4
Else
    If e(5) < 4 Then
    row(4) = row(4) + Len(wordblocks(X)) + 1
    GoTo NextX
    Else
'    e(5) = 4
    End If
End If

NextX:
Next X

'Then, checks for empty rows, centers vertically
If row(3) = 0 And row(4) = 0 Then
row(3) = row(2)
row(2) = row(1)
row(1) = 0

If row(4) = 1 Then
row(3) = row(2)
row(2) = 0

Else
End If

Else
End If

'This eliminates the possible blank space count added after a word
If row(1) > 0 Then row(1) = row(1) - 1
If row(2) > 0 Then row(2) = row(2) - 1
If row(3) > 0 Then row(3) = row(3) - 1
If row(4) > 0 Then row(4) = row(4) - 1

'Then, centers each row horizontally, stores starting value into rowstart(1 to 4)
rowstart(1) = CLng((12 - row(1)) / 2)
rowstart(2) = CLng((14 - row(2)) / 2)
rowstart(3) = CLng((14 - row(3)) / 2)
rowstart(4) = CLng((12 - row(4)) / 2)

'Then, breaks down each word into single characters, and spaces them into each of the blocks, col(rowstart(1 to 4)) = start

Dim wordsplit() As String
Dim shpname As String
For X = 1 To wordblocks.Count

If row(1) >= Len(wordblocks(X)) Then
'Splits word into single characters
        wordsplit = Split(StrConv(wordblocks(X), vbUnicode), Chr$(0))
        ReDim Preserve wordsplit(UBound(wordsplit) - 1)
        If e(1) = 0 Then e(1) = rowstart(1) + 1
        For y = 0 To Len(wordblocks(X)) - 1
        shpname = "Rectangle 1-" & e(1)
        ActivePresentation.Slides(s).Shapes(shpname).TextFrame.TextRange.Text = UCase(wordsplit(y))
        ActivePresentation.Slides(s).Shapes(shpname).Fill.Transparency = 0
        ActivePresentation.Slides(s).Shapes(shpname).Fill.ForeColor.RGB = RGB(255, 255, 255)
        If IsLetter(wordsplit(y)) = True Then
        ActivePresentation.Slides(s).Shapes(shpname).TextFrame.TextRange.Font.Color.RGB = RGB(255, 255, 255)
        Else
        ActivePresentation.Slides(s).Shapes(shpname).TextFrame.TextRange.Font.Color.RGB = RGB(0, 0, 0)
        End If
        e(1) = e(1) + 1
        row(1) = row(1) - 1
        Next y
        e(1) = e(1) + 1
        row(1) = row(1) - 1
GoTo NextWord
Else
End If

'            shp.TextFrame.TextRange.Font.Color.RGB = RGB(255, 255, 255) or RGB(0, 0, 0) 'black
'            shp.TextFrame.TextRange.Text = ""
'            shp.Fill.Transparency = 0

If row(2) >= Len(wordblocks(X)) Then
        wordsplit = Split(StrConv(wordblocks(X), vbUnicode), Chr$(0))
        ReDim Preserve wordsplit(UBound(wordsplit) - 1)
        If e(2) = 0 Then e(2) = rowstart(2) + 1
        For y = 0 To Len(wordblocks(X)) - 1
        shpname = "Rectangle 2-" & e(2)
        ActivePresentation.Slides(s).Shapes(shpname).TextFrame.TextRange.Text = UCase(wordsplit(y))
        ActivePresentation.Slides(s).Shapes(shpname).Fill.Transparency = 0
        ActivePresentation.Slides(s).Shapes(shpname).Fill.ForeColor.RGB = RGB(255, 255, 255)
        If IsLetter(wordsplit(y)) = True Then
        ActivePresentation.Slides(s).Shapes(shpname).TextFrame.TextRange.Font.Color.RGB = RGB(255, 255, 255)
        Else
        ActivePresentation.Slides(s).Shapes(shpname).TextFrame.TextRange.Font.Color.RGB = RGB(0, 0, 0)
        End If
        e(2) = e(2) + 1
        row(2) = row(2) - 1
        Next y
        e(2) = e(2) + 1
        row(2) = row(2) - 1
GoTo NextWord
Else
End If

If row(3) >= Len(wordblocks(X)) Then
        wordsplit = Split(StrConv(wordblocks(X), vbUnicode), Chr$(0))
        ReDim Preserve wordsplit(UBound(wordsplit) - 1)
        If e(3) = 0 Then e(3) = rowstart(3) + 1
        For y = 0 To Len(wordblocks(X)) - 1
        shpname = "Rectangle 3-" & e(3)
        ActivePresentation.Slides(s).Shapes(shpname).TextFrame.TextRange.Text = UCase(wordsplit(y))
        ActivePresentation.Slides(s).Shapes(shpname).Fill.Transparency = 0
        ActivePresentation.Slides(s).Shapes(shpname).Fill.ForeColor.RGB = RGB(255, 255, 255)
        If IsLetter(wordsplit(y)) = True Then
        ActivePresentation.Slides(s).Shapes(shpname).TextFrame.TextRange.Font.Color.RGB = RGB(255, 255, 255)
        Else
        ActivePresentation.Slides(s).Shapes(shpname).TextFrame.TextRange.Font.Color.RGB = RGB(0, 0, 0)
        End If
        e(3) = e(3) + 1
        row(3) = row(3) - 1
        Next y
        e(3) = e(3) + 1
        row(3) = row(3) - 1
GoTo NextWord

Else
End If

If row(4) >= Len(wordblocks(X)) Then
        wordsplit = Split(StrConv(wordblocks(X), vbUnicode), Chr$(0))
        ReDim Preserve wordsplit(UBound(wordsplit) - 1)
        If e(4) = 0 Then e(4) = rowstart(4) + 1
        For y = 0 To Len(wordblocks(X)) - 1
        shpname = "Rectangle 4-" & e(4)
        ActivePresentation.Slides(s).Shapes(shpname).TextFrame.TextRange.Text = UCase(wordsplit(y))
        ActivePresentation.Slides(s).Shapes(shpname).Fill.Transparency = 0
        ActivePresentation.Slides(s).Shapes(shpname).Fill.ForeColor.RGB = RGB(255, 255, 255)
        If IsLetter(wordsplit(y)) = True Then
        ActivePresentation.Slides(s).Shapes(shpname).TextFrame.TextRange.Font.Color.RGB = RGB(255, 255, 255)
        Else
        ActivePresentation.Slides(s).Shapes(shpname).TextFrame.TextRange.Font.Color.RGB = RGB(0, 0, 0)
        End If
        e(4) = e(4) + 1
        row(4) = row(4) - 1
        Next y
        e(4) = e(4) + 1
        row(4) = row(4) - 1
GoTo NextWord

Else
PuzGen.Hide
MsgBox "The generator was unable to fit all your puzzle on the board." & vbNewLine & "Please revise your puzzle and try again."
Exit Sub
End If

NextWord:
Next X

PuzGen.Hide
End Sub

Function IsLetter(strValue As String) As Boolean
    Dim intPos As Integer
    For intPos = 1 To Len(strValue)
        Select Case Asc(Mid(strValue, intPos, 1))
            Case 65 To 90, 97 To 122
                IsLetter = True
            Case Else
                IsLetter = False
                Exit For
        End Select
    Next
End Function

Private Sub Label1_Click()

End Sub
Attribute VB_Name = "Slide13"
Attribute VB_Base = "0{91493445-5A91-11CF-8700-00AA0060263B}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Wheel_Engine"
Option Explicit
Dim BigSpin, smallrot, wofx, i, t, edit, TCN, WheelSoundOn, WOFrounds, WOFtossups, WOFslide, WheelValue, RedScore, YellowScore, BlueScore, RedFinal, YellowFinal, BlueFinal, TossUpPrize As Long
Dim WheelStr, WOFName1, WOFName2, WOFName3 As String
Dim TileCollection As New Collection
Dim TileCounter, WedgeValue, CurrentPlayer, AddSpinTog As Long
Dim guessed(1 To 26) As Long
Dim started, editbool As Boolean
Sub AdjustNames()
AdjustNamesForm.Show vbModal
End Sub
Function HideAdjustNames()
Dim sld As Slide
On Error Resume Next
For Each sld In ActivePresentation.Slides
sld.Shapes("RedName").TextFrame.TextRange.Text = AdjustNamesForm.P1Name.Text
sld.Shapes("YellowName").TextFrame.TextRange.Text = AdjustNamesForm.P2Name.Text
sld.Shapes("BlueName").TextFrame.TextRange.Text = AdjustNamesForm.P3Name.Text
Next sld
AdjustNamesForm.Hide
ActivePresentation.SlideShowWindow.View.First
End Function
Sub StartRound()
Dim sld As Slide
Dim X As Long
'WOFslide = 1
'WOFrounds = 1
'WOFtossups = 0

On Error Resume Next

If ActivePresentation.Slides(1).Shapes("Freeform 90").TextFrame.TextRange.Text Like "EDIT*" Then AdjustNames: Exit Sub
AddSpinTog = 0
CurrentPlayer = CurrentPlayer + 1
If CurrentPlayer > 3 Then CurrentPlayer = 1
    
If ActivePresentation.Slides(WOFslide + 4).Shapes("Title 1").TextFrame.TextRange.Text Like "FINAL*" Then
    ActivePresentation.SlideShowWindow.View.GotoSlide (WOFslide + 5)
Else
    ActivePresentation.SlideShowWindow.View.GotoSlide (WOFslide + 4)
End If

    For Each sld In ActivePresentation.Slides
    sld.Shapes("EditBack").Visible = False
    sld.Shapes("EditNext").Visible = False
    sld.Shapes("EditButton").Visible = False
    Next sld

    For X = 1 To 26
    guessed(X) = 1
    Next X
    
    If ActivePresentation.Slides(WOFslide + 4).Shapes("Title 1").TextFrame.TextRange.Text Like "ROUND*" Then Call WheelRound(WOFrounds): WOFrounds = WOFrounds + 1
    If ActivePresentation.Slides(WOFslide + 4).Shapes("Title 1").TextFrame.TextRange.Text Like "TOSS UP*" Then CurrentPlayer = 0: Call TossRound(WOFtossups, WOFslide + 4): WOFtossups = WOFtossups + 1
    
    i = SlideShowWindows(1).View.Slide.SlideNumber
    If CurrentPlayer = 1 Then Call SelectTeam(ActivePresentation.Slides(i).Shapes("RedTogOff"))
    If CurrentPlayer = 2 Then Call SelectTeam(ActivePresentation.Slides(i).Shapes("YellowTogOff"))
    If CurrentPlayer = 3 Then Call SelectTeam(ActivePresentation.Slides(i).Shapes("BlueTogOff"))
WOFslide = WOFslide + 1
    wofx = 5
End Sub
Function OnSlideShowPageChange(ByVal SSW As SlideShowWindow)
'On Error Resume Next
    
'Code when visiting the Title slide
    If SSW.View.CurrentShowPosition = 1 Then 'SSW.View.CurrentShowPosition = SSW.Presentation.SlideShowSettings.StartingSlide Or
If started = False Then
wofx = 0
WOFrounds = 1
WOFtossups = 1
WOFslide = 1
started = True
End If
'        WOFslide = WOFslide + 1
            If ActivePresentation.Slides(WOFslide + 4).Shapes("Title 1").TextFrame.TextRange.Text Like "ROUND*" Then ActivePresentation.Slides(1).Shapes("Freeform 90").TextFrame.TextRange.Text = "PLAY ROUND " & WOFrounds
            If ActivePresentation.Slides(WOFslide + 4).Shapes("Title 1").TextFrame.TextRange.Text Like "TOSS*" Then ActivePresentation.Slides(1).Shapes("Freeform 90").TextFrame.TextRange.Text = "PLAY TOSS UP " & WOFtossups
            If ActivePresentation.Slides(WOFslide + 4).Shapes("Title 1").TextFrame.TextRange.Text Like "FINAL*" Then ActivePresentation.Slides(1).Shapes("Freeform 90").TextFrame.TextRange.Text = "PLAY FINAL ROUND"
End If

'Prevents the next round counter from counting while visiting the How To/Rules
    If SSW.View.CurrentShowPosition = 2 Or SSW.View.CurrentShowPosition = 3 Then If wofx < 1 Then wofx = 5

    If SSW.View.CurrentShowPosition > 4 Then TCN = 4
    If SSW.View.CurrentShowPosition = 5 Then RedScore = 0: YellowScore = 0: BlueScore = 0
    
    On Error Resume Next
    i = SlideShowWindows(1).View.Slide.SlideNumber

    If ActivePresentation.Slides(i).Shapes("Title 1").TextFrame.TextRange.Text = "WHEEL" Then
    ActivePresentation.Slides(i).Shapes("RedSpinner").Visible = False
    ActivePresentation.Slides(i).Shapes("YellowSpinner").Visible = False
    ActivePresentation.Slides(i).Shapes("BlueSpinner").Visible = False
        If CurrentPlayer = 1 Then ActivePresentation.Slides(i).Shapes("RedSpinner").Visible = True
        If CurrentPlayer = 2 Then ActivePresentation.Slides(i).Shapes("YellowSpinner").Visible = True
        If CurrentPlayer = 3 Then ActivePresentation.Slides(i).Shapes("BlueSpinner").Visible = True
        AddSpinTog = 0
    Else
    End If
End Function
Sub TossUp(oshp As Shape)
i = ActivePresentation.SlideShowWindow.View.CurrentShowPosition
'i = 5
Dim TileNo As Long
'Dim TileName As String

If oshp.Name = "PlayPuzzle" Then
    Dim TileShp() As Shape, TX As Long
    Dim thisShape As Shape
    Dim thisShapeV As Variant
    ReDim TileShp(0 To 2) As Shape
    
    If TCN = 4 Then ActivePresentation.Slides(i).Shapes("TossUpMusic").ActionSettings(ppMouseClick).SoundEffect.Play
    
    On Error Resume Next
    ActivePresentation.Slides(i).Shapes("PlayPuzzle").Visible = False
    ActivePresentation.Slides(i).Shapes("PausePuzzle").Visible = True
    
     wofx = wofx + 1
     TX = 0
     TCN = 5
     
        For Each thisShape In ActivePresentation.Slides(i).Shapes
            On Error Resume Next
            If thisShape.HasTextFrame Then
                If Len(thisShape.TextFrame.TextRange) = 1 Then
                    If thisShape.TextFrame.HasText Then
                        If thisShape.TextFrame.TextRange.Font.Color.RGB = RGB(255, 255, 255) Then
                            If thisShape.Fill.ForeColor.RGB = RGB(255, 255, 255) Then
                               TX = TX + 1
                               Set TileShp(TX) = thisShape
                               ReDim Preserve TileShp(0 To TX + 1) As Shape
                            Else
                            End If
                        Else
                        End If
                    Else
                    End If
                Else
                End If
            Else
            End If
        Next thisShape
    
    For TileCounter = 0 To TileCollection.Count
    TileCollection.Remove (1)
    Next TileCounter
    
    For TileCounter = 1 To TX
    TileCollection.Add (TileCounter)
    Next TileCounter
        
    Do While TileCollection.Count > 1 And TCN > 4
        TileNo = CLng(Rnd * TileCollection.Count) + 1
    '    TileNo = CLng((Rnd * 52) + 487)
    '    TileName = "Rectangle " & CStr(TileNo)
        If TileShp(TileCollection(TileNo)).TextFrame.TextRange.Font.Color.RGB = RGB(0, 0, 0) Then
    '    If TileShp(TileNo).TextFrame.TextRange.Font.Color.RGB = RGB(0, 0, 0) Then
        GoTo Bottom
        End If
        
        
    '    If TileShp(TileNo).Fill.ForeColor.RGB = RGB(255, 255, 255) Then
    '    TileShp(TileNo).TextFrame.TextRange.Font.Color.RGB = RGB(0, 0, 0)
        If TileShp(TileCollection(TileNo)).Fill.ForeColor.RGB = RGB(255, 255, 255) Then
        TileShp(TileCollection(TileNo)).TextFrame.TextRange.Font.Color.RGB = RGB(0, 0, 0)
        TileCollection.Remove (TileNo)
        End If
        
        t = Timer + 2
        Do Until Timer > t
        'visible=true
        DoEvents
        Loop
Bottom:
    TCN = TCN + 1
    'If TileCollection.Count <= 2 Or TCN > 75 Then
    'Exit Sub
    'End If
    
    Loop
End If

If oshp.Name = "PausePuzzle" Then
    ActivePresentation.Slides(i).Shapes("PlayPuzzle").Visible = True
    ActivePresentation.Slides(i).Shapes("PausePuzzle").Visible = False
    TCN = 0
End If
End Sub
Sub SelectTeam(oshp As Shape)
i = SlideShowWindows(1).View.Slide.SlideNumber
If ActivePresentation.Slides(i).Shapes("Title 1").TextFrame.TextRange.Text = "FINAL" Then
Else
Call HideTriggers
End If
ActivePresentation.Slides(i).Shapes("RedCover").Visible = True
ActivePresentation.Slides(i).Shapes("YellowCover").Visible = True
ActivePresentation.Slides(i).Shapes("BlueCover").Visible = True
If oshp.Name = "RedTogOff" Then
CurrentPlayer = 1
ActivePresentation.Slides(i).Shapes("RedTogOn").Visible = True
ActivePresentation.Slides(i).Shapes("YellowTogOn").Visible = False
ActivePresentation.Slides(i).Shapes("BlueTogOn").Visible = False
ActivePresentation.Slides(i).Shapes("RedCover").Visible = False
End If
If oshp.Name = "YellowTogOff" Then
CurrentPlayer = 2
ActivePresentation.Slides(i).Shapes("RedTogOn").Visible = False
ActivePresentation.Slides(i).Shapes("YellowTogOn").Visible = True
ActivePresentation.Slides(i).Shapes("BlueTogOn").Visible = False
ActivePresentation.Slides(i).Shapes("YellowCover").Visible = False
End If
If oshp.Name = "BlueTogOff" Then
CurrentPlayer = 3
ActivePresentation.Slides(i).Shapes("RedTogOn").Visible = False
ActivePresentation.Slides(i).Shapes("YellowTogOn").Visible = False
ActivePresentation.Slides(i).Shapes("BlueTogOn").Visible = True
ActivePresentation.Slides(i).Shapes("BlueCover").Visible = False
End If
End Sub
Sub TossSolved(oshp As Shape)
i = ActivePresentation.SlideShowWindow.View.CurrentShowPosition

If oshp.Name = "OkNoPlayer" Then ActivePresentation.Slides(i).Shapes("NoPlayerSelected").Visible = False

If oshp.Name = "SolvePuzzle" Then
    If CurrentPlayer = 0 Then
    Call TossUp(ActivePresentation.Slides(i).Shapes("PausePuzzle"))
    ActivePresentation.Slides(i).Shapes("NoPlayerSelected").Visible = True
    Else
    TCN = 0
    ActivePresentation.Slides(i).Shapes("TossUpSolve").ActionSettings(ppMouseClick).SoundEffect.Play
    Call Solve
    End If
Else
End If

'For i = 0 To TileCollection.Count
'TileCollection.Remove (1)
'Next i
End Sub
Sub StartCustomSlideShow(oshp As Shape)

 With oshp.ActionSettings(1)
        .Action = ppActionNamedSlideShow
        .SlideShowName = "Wheel"
        .ShowAndReturn = True
        .Run
 End With

'ActivePresentation.SlideShowSettings.Application.SlideShowWindows(1).View.GotoNamedShow ("Wheel")
'ActivePresentation.SlideShowWindow.View.GotoNamedShow ("Wheel")
'ActivePresentation.SlideShowWindow.View.GotoSlide (8)
End Sub
'Remove Trigger Letters
Function HideTriggers()
i = SlideShowWindows(1).View.Slide.SlideNumber
Dim oshp As Shape
On Error Resume Next
For Each oshp In ActivePresentation.Slides(i).Shapes
    If oshp.Name Like "Trigger*" Then
    oshp.Visible = False
    End If
Next oshp
End Function
Function ShowConsonants()
i = SlideShowWindows(1).View.Slide.SlideNumber

Dim oshp As Shape

For Each oshp In ActivePresentation.Slides(i).Shapes
On Error Resume Next
    If oshp.Name Like "Trigger*" Then
    oshp.Visible = True
    End If
Next oshp

    If guessed(1) = 0 Then ActivePresentation.Slides(i).Shapes("TriggerA").Visible = False
    If guessed(2) = 0 Then ActivePresentation.Slides(i).Shapes("TriggerB").Visible = False
    If guessed(3) = 0 Then ActivePresentation.Slides(i).Shapes("TriggerC").Visible = False
    If guessed(4) = 0 Then ActivePresentation.Slides(i).Shapes("TriggerD").Visible = False
    If guessed(5) = 0 Then ActivePresentation.Slides(i).Shapes("TriggerE").Visible = False
    If guessed(6) = 0 Then ActivePresentation.Slides(i).Shapes("TriggerF").Visible = False
    If guessed(7) = 0 Then ActivePresentation.Slides(i).Shapes("TriggerG").Visible = False
    If guessed(8) = 0 Then ActivePresentation.Slides(i).Shapes("TriggerH").Visible = False
    If guessed(9) = 0 Then ActivePresentation.Slides(i).Shapes("TriggerI").Visible = False
    If guessed(10) = 0 Then ActivePresentation.Slides(i).Shapes("TriggerJ").Visible = False
    If guessed(11) = 0 Then ActivePresentation.Slides(i).Shapes("TriggerK").Visible = False
    If guessed(12) = 0 Then ActivePresentation.Slides(i).Shapes("TriggerL").Visible = False
    If guessed(13) = 0 Then ActivePresentation.Slides(i).Shapes("TriggerM").Visible = False
    If guessed(14) = 0 Then ActivePresentation.Slides(i).Shapes("TriggerN").Visible = False
    If guessed(15) = 0 Then ActivePresentation.Slides(i).Shapes("TriggerO").Visible = False
    If guessed(16) = 0 Then ActivePresentation.Slides(i).Shapes("TriggerP").Visible = False
    If guessed(17) = 0 Then ActivePresentation.Slides(i).Shapes("TriggerQ").Visible = False
    If guessed(18) = 0 Then ActivePresentation.Slides(i).Shapes("TriggerR").Visible = False
    If guessed(19) = 0 Then ActivePresentation.Slides(i).Shapes("TriggerS").Visible = False
    If guessed(20) = 0 Then ActivePresentation.Slides(i).Shapes("TriggerT").Visible = False
    If guessed(21) = 0 Then ActivePresentation.Slides(i).Shapes("TriggerU").Visible = False
    If guessed(22) = 0 Then ActivePresentation.Slides(i).Shapes("TriggerV").Visible = False
    If guessed(23) = 0 Then ActivePresentation.Slides(i).Shapes("TriggerW").Visible = False
    If guessed(24) = 0 Then ActivePresentation.Slides(i).Shapes("TriggerX").Visible = False
    If guessed(25) = 0 Then ActivePresentation.Slides(i).Shapes("TriggerY").Visible = False
    If guessed(26) = 0 Then ActivePresentation.Slides(i).Shapes("TriggerZ").Visible = False

ActivePresentation.Slides(i).Shapes("TriggerA").Visible = False
ActivePresentation.Slides(i).Shapes("TriggerE").Visible = False
ActivePresentation.Slides(i).Shapes("TriggerI").Visible = False
ActivePresentation.Slides(i).Shapes("TriggerO").Visible = False
ActivePresentation.Slides(i).Shapes("TriggerU").Visible = False
End Function
Function ShowVowels()
i = SlideShowWindows(1).View.Slide.SlideNumber

Dim oshp As Shape

On Error Resume Next
For Each oshp In ActivePresentation.Slides(i).Shapes
    If oshp.Name Like "Trigger*" Then
    oshp.Visible = False
    End If
Next oshp

If guessed(1) = 1 Then ActivePresentation.Slides(i).Shapes("TriggerA").Visible = True
If guessed(5) = 1 Then ActivePresentation.Slides(i).Shapes("TriggerE").Visible = True
If guessed(9) = 1 Then ActivePresentation.Slides(i).Shapes("TriggerI").Visible = True
If guessed(15) = 1 Then ActivePresentation.Slides(i).Shapes("TriggerO").Visible = True
If guessed(21) = 1 Then ActivePresentation.Slides(i).Shapes("TriggerU").Visible = True
WedgeValue = 0
ActivePresentation.Slides(i).Shapes("SpunValue").TextFrame.TextRange.Text = FormatCurrency(WedgeValue, 0)
End Function
'Buy a Vowel for Each Player
Sub BuyVowel(oshp As Shape)
On Error Resume Next
i = SlideShowWindows(1).View.Slide.SlideNumber

If ActivePresentation.Slides(i).Shapes("NoMoreVowelsGroup").Visible = True Then Exit Sub

If oshp.Name = "OkVowel" Then ActivePresentation.Slides(i).Shapes("NoVowelGroup").Visible = False

If oshp.Name = "RedVowel" Then
    If RedScore < 250 Then
    Call HideTriggers
    ActivePresentation.Slides(i).Shapes("ZeroAnswer").ActionSettings(ppMouseClick).SoundEffect.Play
    ActivePresentation.Slides(i).Shapes("NoVowelGroup").Visible = True
    Else
    Call ShowVowels
    RedScore = RedScore - 250
        ActivePresentation.Slides(i).Shapes("RedScore").TextFrame.TextRange.Text = FormatCurrency(RedScore, 0)
    End If
Else
End If
If oshp.Name = "YellowVowel" Then
    If YellowScore < 250 Then
    Call HideTriggers
    ActivePresentation.Slides(i).Shapes("ZeroAnswer").ActionSettings(ppMouseClick).SoundEffect.Play
    ActivePresentation.Slides(i).Shapes("NoVowelGroup").Visible = True
    Else
    Call ShowVowels
    YellowScore = YellowScore - 250
        ActivePresentation.Slides(i).Shapes("YellowScore").TextFrame.TextRange.Text = FormatCurrency(YellowScore, 0)
    End If
Else
End If
If oshp.Name = "BlueVowel" Then
    If BlueScore < 250 Then
    Call HideTriggers
    ActivePresentation.Slides(i).Shapes("ZeroAnswer").ActionSettings(ppMouseClick).SoundEffect.Play
    ActivePresentation.Slides(i).Shapes("NoVowelGroup").Visible = True
    Else
    Call ShowVowels
    BlueScore = BlueScore - 250
        ActivePresentation.Slides(i).Shapes("BlueScore").TextFrame.TextRange.Text = FormatCurrency(BlueScore, 0)
    End If
Else
End If

End Sub
Function CheckVowels()
i = SlideShowWindows(1).View.Slide.SlideNumber
Dim oshp As Shape
Dim vowcount As Long
vowcount = 0
For Each oshp In ActivePresentation.Slides(i).Shapes
    On Error Resume Next
    If oshp.HasTextFrame Then
        If oshp.TextFrame.TextRange.Font.Color.RGB = RGB(255, 255, 255) Then
            If oshp.TextFrame.TextRange.Text = "A" Or oshp.TextFrame.TextRange.Text = "E" Or oshp.TextFrame.TextRange.Text = "I" Or oshp.TextFrame.TextRange.Text = "O" Or oshp.TextFrame.TextRange.Text = "U" Then
            vowcount = vowcount + 1
            Else
            End If
        Else
        End If
    Else
    End If
Next oshp

If vowcount = 0 Then
ActivePresentation.Slides(i).Shapes("NoMoreVowelsGroup").Visible = True
Else
End If

End Function
'Each Player Bankrupt
Sub Bankrupt()
i = SlideShowWindows(1).View.Slide.SlideNumber
On Error Resume Next
Call HideTriggers

WedgeValue = 0
ActivePresentation.Slides(i).Shapes("SpunValue").TextFrame.TextRange.Text = "$0"

If CurrentPlayer = 1 Then
RedScore = 0
CurrentPlayer = 2
ActivePresentation.Slides(i).Shapes("RedScore").TextFrame.TextRange.Text = FormatCurrency(RedScore, 0)
ActivePresentation.Slides(i).Shapes("RedTogOn").Visible = False
ActivePresentation.Slides(i).Shapes("YellowTogOn").Visible = True
ActivePresentation.Slides(i).Shapes("RedCover").Visible = True
ActivePresentation.Slides(i).Shapes("YellowCover").Visible = False
Exit Sub
End If
If CurrentPlayer = 2 Then
YellowScore = 0
CurrentPlayer = 3
ActivePresentation.Slides(i).Shapes("YellowScore").TextFrame.TextRange.Text = FormatCurrency(YellowScore, 0)
ActivePresentation.Slides(i).Shapes("BlueTogOn").Visible = True
ActivePresentation.Slides(i).Shapes("YellowTogOn").Visible = False
ActivePresentation.Slides(i).Shapes("BlueCover").Visible = False
ActivePresentation.Slides(i).Shapes("YellowCover").Visible = True
Exit Sub
End If
If CurrentPlayer = 3 Then
BlueScore = 0
CurrentPlayer = 1
ActivePresentation.Slides(i).Shapes("BlueScore").TextFrame.TextRange.Text = FormatCurrency(BlueScore, 0)
ActivePresentation.Slides(i).Shapes("RedTogOn").Visible = True
ActivePresentation.Slides(i).Shapes("BlueTogOn").Visible = False
ActivePresentation.Slides(i).Shapes("RedCover").Visible = False
ActivePresentation.Slides(i).Shapes("BlueCover").Visible = True
Exit Sub
End If
End Sub
Sub WinRound(oshp As Shape)
Dim oSld As Slide
i = ActivePresentation.SlideShowWindow.View.CurrentShowPosition
On Error Resume Next
Call HideTriggers
wofx = 0
If oshp.Name = "RedWin" Then
    If ActivePresentation.Slides(i).Shapes("Title 1").TextFrame.TextRange.Text Like "TOSS UP*" Then
    RedScore = TossUpPrize
    CurrentPlayer = 3
    Else
        If ActivePresentation.Slides(i).Shapes("Title 1").TextFrame.TextRange.Text Like "FINAL*" Then
        RedScore = CLng(ActivePresentation.Slides(i).Shapes("SpunValue").TextFrame.TextRange.Text)
        Else
        End If
    End If
    If RedScore < 1000 Then RedScore = 1000
RedFinal = RedFinal + RedScore
Else
End If

If oshp.Name = "YellowWin" Then
    If ActivePresentation.Slides(i).Shapes("Title 1").TextFrame.TextRange.Text Like "TOSS UP*" Then
    YellowScore = TossUpPrize
    CurrentPlayer = 1
    Else
            If ActivePresentation.Slides(i).Shapes("Title 1").TextFrame.TextRange.Text Like "FINAL*" Then
            YellowScore = CLng(ActivePresentation.Slides(i).Shapes("SpunValue").TextFrame.TextRange.Text)
            Else
            End If
    End If
    If YellowScore < 1000 Then YellowScore = 1000
YellowFinal = YellowFinal + YellowScore
Else
End If

If oshp.Name = "BlueWin" Then
If ActivePresentation.Slides(i).Shapes("Title 1").TextFrame.TextRange.Text Like "TOSS UP*" Then
BlueScore = TossUpPrize
CurrentPlayer = 2
Else
        If ActivePresentation.Slides(i).Shapes("Title 1").TextFrame.TextRange.Text Like "FINAL*" Then
        BlueScore = CLng(ActivePresentation.Slides(i).Shapes("SpunValue").TextFrame.TextRange.Text)
        Else
        End If
End If
    If BlueScore < 1000 Then BlueScore = 1000
BlueFinal = BlueFinal + BlueScore
Else
End If

For Each oSld In ActivePresentation.Slides
oSld.Shapes("RedFinal").TextFrame.TextRange.Text = FormatCurrency(RedFinal, 0)
oSld.Shapes("YellowFinal").TextFrame.TextRange.Text = FormatCurrency(YellowFinal, 0)
oSld.Shapes("BlueFinal").TextFrame.TextRange.Text = FormatCurrency(BlueFinal, 0)
oSld.Shapes("SpunValue").TextFrame.TextRange.Text = "$0"
RedScore = 0
YellowScore = 0
BlueScore = 0
oSld.Shapes("RedScore").TextFrame.TextRange.Text = FormatCurrency(RedScore, 0)
oSld.Shapes("YellowScore").TextFrame.TextRange.Text = FormatCurrency(YellowScore, 0)
oSld.Shapes("BlueScore").TextFrame.TextRange.Text = FormatCurrency(BlueScore, 0)
Next
wofx = 0
ActivePresentation.SlideShowWindow.View.GotoSlide (1)

End Sub
Sub LeavePuzzle(oshp As Shape)
i = ActivePresentation.SlideShowWindow.View.CurrentShowPosition
If oshp.Name = "Yes" Then
wofx = 0
ActivePresentation.SlideShowWindow.View.GotoSlide (1)
End If
If oshp.Name = "No" Then
ActivePresentation.Slides(i).Shapes("LeaveGroup").Visible = False
End If
If oshp.Name = "MainMenu" Then
ActivePresentation.Slides(i).Shapes("LeaveGroup").Visible = True
End If
End Sub
'If a player loses a turn or misses a letter
Sub Pass()
i = SlideShowWindows(1).View.Slide.SlideNumber
Call HideTriggers
WedgeValue = 0
ActivePresentation.Slides(i).Shapes("SpunValue").TextFrame.TextRange.Text = "$0"

If CurrentPlayer = 1 Then
CurrentPlayer = 2
ActivePresentation.Slides(i).Shapes("RedScore").TextFrame.TextRange.Text = FormatCurrency(RedScore, 0)
ActivePresentation.Slides(i).Shapes("RedTogOn").Visible = False
ActivePresentation.Slides(i).Shapes("YellowTogOn").Visible = True
ActivePresentation.Slides(i).Shapes("RedCover").Visible = True
ActivePresentation.Slides(i).Shapes("YellowCover").Visible = False
Exit Sub
End If
If CurrentPlayer = 2 Then
CurrentPlayer = 3
ActivePresentation.Slides(i).Shapes("YellowScore").TextFrame.TextRange.Text = FormatCurrency(YellowScore, 0)
ActivePresentation.Slides(i).Shapes("BlueTogOn").Visible = True
ActivePresentation.Slides(i).Shapes("YellowTogOn").Visible = False
ActivePresentation.Slides(i).Shapes("BlueCover").Visible = False
ActivePresentation.Slides(i).Shapes("YellowCover").Visible = True
Exit Sub
End If
If CurrentPlayer = 3 Then
CurrentPlayer = 1
ActivePresentation.Slides(i).Shapes("BlueScore").TextFrame.TextRange.Text = FormatCurrency(BlueScore, 0)
ActivePresentation.Slides(i).Shapes("RedTogOn").Visible = True
ActivePresentation.Slides(i).Shapes("BlueTogOn").Visible = False
ActivePresentation.Slides(i).Shapes("RedCover").Visible = False
ActivePresentation.Slides(i).Shapes("BlueCover").Visible = True
Exit Sub
End If

End Sub
Sub Solve()
Dim oSld As Slide
Dim oshp As Shape
i = ActivePresentation.SlideShowWindow.View.CurrentShowPosition
On Error Resume Next
ActivePresentation.Slides(i).Shapes("SolveSFX").ActionSettings(ppMouseClick).SoundEffect.Play
ActivePresentation.Slides(i).Shapes("SpunValue").Visible = True
    If CurrentPlayer = 1 Then ActivePresentation.Slides(i).Shapes("RedWin").Visible = True
    If CurrentPlayer = 2 Then ActivePresentation.Slides(i).Shapes("YellowWin").Visible = True
    If CurrentPlayer = 3 Then ActivePresentation.Slides(i).Shapes("BlueWin").Visible = True
    For Each oshp In ActivePresentation.Slides(i).Shapes
        If oshp.HasTextFrame Then
            If Len(oshp.TextFrame.TextRange) = 1 Then
                If oshp.Fill.ForeColor.RGB = RGB(255, 255, 255) Then
                    With oshp.TextFrame.TextRange
                        If .Font.Color.RGB = RGB(255, 255, 255) Then
                            .Font.Color.RGB = RGB(0, 0, 0)
                        End If
                    End With
                End If
            End If
        End If
    Next

End Sub
'The letter trigger mechanisms
Sub RevealLetter(RevealLetter As Shape)
Dim oSld As Slide
Dim oshp As Shape
Set oSld = RevealLetter.Parent
i = ActivePresentation.SlideShowWindow.View.CurrentShowPosition
For Each oshp In oSld.Shapes
    If oshp.HasTextFrame Then
        If oshp.TextFrame.TextRange.Font.Color.RGB = RGB(0, 0, 255) Then
                If oshp.Fill.ForeColor.RGB = RGB(0, 0, 255) Then
                        oshp.TextFrame.TextRange.Font.Color.RGB = RGB(0, 0, 0)
                        oshp.Fill.ForeColor.RGB = RGB(255, 255, 255)
                End If
        End If
    End If
Next oshp
Call CheckVowels
End Sub
Sub GetLetter(Trigger As Shape)
Dim oSld As Slide
Dim oshp As Shape
Set oSld = Trigger.Parent
Dim revealed As Long
revealed = 0
WheelValue = 0
i = ActivePresentation.SlideShowWindow.View.CurrentShowPosition
    Trigger.Visible = False
For Each oshp In oSld.Shapes
    On Error Resume Next
    
    Dim gletter As String
    gletter = Replace(Trigger.Name, "Trigger", "")
    Call RemoveTrigger(gletter)
    
    If oshp.HasTextFrame Then
        If oshp.TextFrame.TextRange.Font.Color.RGB = RGB(255, 255, 255) Then
            If oshp.TextFrame.TextRange.Text = Trigger.TextFrame.TextRange.Text Then
                oshp.TextFrame.TextRange.Font.Color.RGB = RGB(0, 0, 255)
                oshp.Fill.ForeColor.RGB = RGB(0, 0, 255)
                revealed = revealed + 1
            End If
        End If
        If Trigger.Name = "TriggerA" Or Trigger.Name = "TriggerI" Or Trigger.Name = "TriggerO" Or Trigger.Name = "TriggerU" Then
        ActivePresentation.Slides(i).Shapes("TimerBlock").Visible = False
        End If
    End If
Next oshp
If revealed = 0 Then
    Dim oshpAnswer2 As Shape
    Set oshpAnswer2 = ActivePresentation.Slides(i).Shapes("ZeroAnswer")
    oshpAnswer2.ActionSettings(ppMouseClick).SoundEffect.Play
    If ActivePresentation.Slides(i).Shapes("Title 1").TextFrame.TextRange.Text Like "FINAL*" Then
    Else
    Call Pass
    End If
End If
If revealed > 0 Then
    Dim oshpAnswer1 As Shape
    Set oshpAnswer1 = ActivePresentation.Slides(i).Shapes("AnswerDing")
    oshpAnswer1.ActionSettings(ppMouseClick).SoundEffect.Play
    If ActivePresentation.Slides(i).Shapes("Title 1").TextFrame.TextRange.Text Like "FINAL*" Then
    Else
    WheelValue = WedgeValue * revealed
    If CurrentPlayer = 1 Then
    RedScore = RedScore + WheelValue
    ActivePresentation.Slides(i).Shapes("RedScore").TextFrame.TextRange.Text = FormatCurrency(RedScore, 0)
    End If
    If CurrentPlayer = 2 Then
    YellowScore = YellowScore + WheelValue
    ActivePresentation.Slides(i).Shapes("YellowScore").TextFrame.TextRange.Text = FormatCurrency(YellowScore, 0)
    End If
    If CurrentPlayer = 3 Then
    BlueScore = BlueScore + WheelValue
    ActivePresentation.Slides(i).Shapes("BlueScore").TextFrame.TextRange.Text = FormatCurrency(BlueScore, 0)
    End If
End If
WedgeValue = 0
End If
If ActivePresentation.Slides(i).Shapes("Title 1").TextFrame.TextRange.Text Like "FINAL*" Then
    Trigger.Visible = False
        If Trigger.Name = "TriggerE" Then
        ActivePresentation.Slides(i).Shapes("TimerBlock").TextFrame.TextRange.Text = "Pick 3 consonants and 1 more vowel. Select vowel last."
        ActivePresentation.Slides(i).Shapes("TriggerA").Visible = True
        ActivePresentation.Slides(i).Shapes("TriggerB").Visible = True
        ActivePresentation.Slides(i).Shapes("TriggerC").Visible = True
        ActivePresentation.Slides(i).Shapes("TriggerD").Visible = True
        ActivePresentation.Slides(i).Shapes("TriggerF").Visible = True
        ActivePresentation.Slides(i).Shapes("TriggerG").Visible = True
        ActivePresentation.Slides(i).Shapes("TriggerH").Visible = True
        ActivePresentation.Slides(i).Shapes("TriggerI").Visible = True
        ActivePresentation.Slides(i).Shapes("TriggerJ").Visible = True
        ActivePresentation.Slides(i).Shapes("TriggerK").Visible = True
        ActivePresentation.Slides(i).Shapes("TriggerM").Visible = True
        ActivePresentation.Slides(i).Shapes("TriggerO").Visible = True
        ActivePresentation.Slides(i).Shapes("TriggerP").Visible = True
        ActivePresentation.Slides(i).Shapes("TriggerQ").Visible = True
        ActivePresentation.Slides(i).Shapes("TriggerU").Visible = True
        ActivePresentation.Slides(i).Shapes("TriggerV").Visible = True
        ActivePresentation.Slides(i).Shapes("TriggerW").Visible = True
        ActivePresentation.Slides(i).Shapes("TriggerX").Visible = True
        ActivePresentation.Slides(i).Shapes("TriggerY").Visible = True
        ActivePresentation.Slides(i).Shapes("TriggerZ").Visible = True
    Else
        If Trigger.Name = "TriggerA" Or Trigger.Name = "TriggerI" Or Trigger.Name = "TriggerO" Or Trigger.Name = "TriggerU" Then
            Call HideTriggers
            ActivePresentation.Slides(i).Shapes("TimerBlock").TextFrame.TextRange.Text = ""
            ActivePresentation.Slides(i).Shapes("RedTogOff").Visible = True
            ActivePresentation.Slides(i).Shapes("YellowTogOff").Visible = True
            ActivePresentation.Slides(i).Shapes("BlueTogOff").Visible = True
            
            Dim maxscore As Long
            maxscore = 0
            If RedFinal > maxscore Then maxscore = RedFinal
            If YellowFinal > maxscore Then maxscore = YellowFinal
            If BlueFinal > maxscore Then maxscore = BlueFinal
            
            If maxscore = RedFinal Then ActivePresentation.Slides(i).Shapes("RedTogOn").Visible = True
            If maxscore = YellowFinal Then ActivePresentation.Slides(i).Shapes("YellowTogOn").Visible = True
            If maxscore = BlueFinal Then ActivePresentation.Slides(i).Shapes("BlueTogOn").Visible = True
            
        Else
        End If
    Exit Sub
    End If
Else
Call HideTriggers
Call CheckVowels
ActivePresentation.Slides(i).Shapes("SpunValue").TextFrame.TextRange.Text = "$0"
End If
End Sub
'The Wheel Mechanisms
Sub AddRotation()
i = SlideShowWindows(1).View.Slide.SlideNumber

    Dim oshp As Shape
    Dim effNew As Effect
    Dim aniNew As AnimationBehavior
    Dim speedx As Double
    Dim spinx, j As Integer
If AddSpinTog = 0 Then
AddSpinTog = 1
'    wofx = wofx + 1
    Randomize
    speedx = CInt(Rnd * 15) + 1
    
    Set oshp = ActivePresentation.Slides(i).Shapes("WheelGroup")
    
    'Check if
    
    For j = 1 To ActivePresentation.Slides(i).TimeLine.InteractiveSequences.Count
    ActivePresentation.Slides(i).TimeLine.InteractiveSequences(j).FindFirstAnimationFor(oshp).Delete
    Next j
    
        Set effNew = ActivePresentation.Slides(i).TimeLine.InteractiveSequences.Add _
                    .AddEffect(Shape:=oshp, effectId:=msoAnimEffectCustom, _
                    Trigger:=msoAnimTriggerOnShapeClick)
    effNew.Timing.Duration = 4.5
    effNew.Timing.TriggerShape = ActivePresentation.Slides(i).Shapes("SpinButton")
        Set aniNew = effNew.Behaviors.Add(msoAnimTypeRotation)
    
    Randomize
    BigSpin = CLng(Round((Rnd * 20) + (speedx * Rnd) + 210 / 5) * 5) + 2
        With aniNew.RotationEffect
            '.By = CInt(Round((Rnd * 100) + (speedx * (Rnd * spinx)) / 5) * 5)
            .By = BigSpin
        End With
    End If
End Sub
Sub SpinWheel()
Dim i As Long
i = SlideShowWindows(1).View.Slide.SlideNumber
If WheelSoundOn = 0 Then ActivePresentation.Slides(i).Shapes("WheelSFX").ActionSettings(ppMouseClick).SoundEffect.Play

    t = Timer + 5
    Do Until Timer > t
    DoEvents
    Loop

smallrot = BigSpin + ActivePresentation.Slides(i).Shapes("WheelGroup").Rotation
Do While smallrot > 359
smallrot = smallrot - 360
Loop
ActivePresentation.Slides(i).Shapes("WheelGroup").Rotation = smallrot
End Sub
Sub CloseWheel()
i = SlideShowWindows(1).View.Slide.SlideNumber
smallrot = BigSpin + ActivePresentation.Slides(i).Shapes("WheelGroup").Rotation
Do While smallrot > 359
smallrot = smallrot - 360
Loop
ActivePresentation.Slides(i).Shapes("WheelGroup").Rotation = smallrot

'With SlideShowWindows(1).View
'If .IsNamedShow Then
'.Exit
'Call ShowConsonants
''    If WedgeValue = 1 Then Call Pass
'    If WedgeValue = 2 Then Call Bankrupt
'Slide93.ScrollBar1.Visible = False
'Slide94.ScrollBar1.Visible = False
'Else
'End If
'End With

If ActivePresentation.Slides(i).Shapes("Title 1").TextFrame.TextRange.Text Like "WHEEL*" Then
ActivePresentation.SlideShowWindow.View.Exit
    If WedgeValue <> 0 Then Call ShowConsonants
'Slide93.ScrollBar1.Visible = False
'Slide94.ScrollBar1.Visible = False
Else
End If

If ActivePresentation.Slides(i).Shapes("Title 1").TextFrame.TextRange.Text Like "PRIZE*" Then
'Slide93.ScrollBar1.Visible = False
'Slide94.ScrollBar1.Visible = False
ActivePresentation.SlideShowWindow.View.GotoSlide (i - 1)
ActivePresentation.Slides(i - 1).Shapes("TriggerR").Visible = True
ActivePresentation.Slides(i - 1).Shapes("TriggerS").Visible = True
ActivePresentation.Slides(i - 1).Shapes("TriggerT").Visible = True
ActivePresentation.Slides(i - 1).Shapes("TriggerL").Visible = True
ActivePresentation.Slides(i - 1).Shapes("TriggerN").Visible = True
ActivePresentation.Slides(i - 1).Shapes("TriggerE").Visible = True
ActivePresentation.Slides(i - 1).Shapes("RedTogOff").Visible = False
ActivePresentation.Slides(i - 1).Shapes("YellowTogOff").Visible = False
ActivePresentation.Slides(i - 1).Shapes("BlueTogOff").Visible = False
ActivePresentation.Slides(i - 1).Shapes("SpunValue").TextFrame.TextRange.Text = FormatCurrency(WedgeValue, 0)
ActivePresentation.Slides(i - 1).Shapes("TimerBlock").TextFrame.TextRange.Text = "Select RSTLNE letters one at a time, ending on E"
Else
End If

'End With
End Sub
Sub WheelSpinSound(oshp As Shape)
i = SlideShowWindows(1).View.Slide.SlideNumber
If oshp.Name = "WheelOn" Then
ActivePresentation.Slides(i).Shapes("WheelOn").Fill.ForeColor.RGB = RGB(0, 129, 0)
ActivePresentation.Slides(i).Shapes("WheelOff").Fill.ForeColor.RGB = RGB(64, 64, 64)
WheelSoundOn = 0
End If
If oshp.Name = "WheelOff" Then
WheelSoundOn = 1
ActivePresentation.Slides(i).Shapes("WheelOn").Fill.ForeColor.RGB = RGB(64, 64, 64)
ActivePresentation.Slides(i).Shapes("WheelOff").Fill.ForeColor.RGB = RGB(192, 0, 0)
End If
End Sub
Sub RemoveFreeSpin()
Dim osl As Slide
i = SlideShowWindows(1).View.Slide.SlideNumber
    Set osl = ActivePresentation.Slides(i)
    osl.Shapes("FreeSpinToken").Visible = False
End Sub
Sub RemoveWildCard()
Dim osl As Slide
i = SlideShowWindows(1).View.Slide.SlideNumber
    Set osl = ActivePresentation.Slides(i)
    osl.Shapes("WildCard").Visible = False
End Sub
Sub AddWheelValue(oshp As Shape)
Dim osl As Slide
On Error Resume Next
WedgeValue = 0
    If oshp.Name = "5K" Then WedgeValue = 5000
    If oshp.Name = "B10K" Then WedgeValue = 10000
    If oshp.Name = "Block Arc 29" Then WedgeValue = 0
    If oshp.Name = "Block Arc 28" Then WedgeValue = 0
    If oshp.Name = "Block Arc 27" Then WedgeValue = 1000
    If oshp.Name = "Block Arc 26" Then WedgeValue = 800
    If oshp.Name = "Block Arc 25" Then WedgeValue = 300
    If oshp.Name = "Block Arc 24" Then WedgeValue = 550
    If oshp.Name = "Block Arc 23" Then WedgeValue = 350
    If oshp.Name = "Block Arc 22" Then WedgeValue = 600
    If oshp.Name = "Block Arc 21" Then WedgeValue = 550
    If oshp.Name = "Block Arc 20" Then WedgeValue = 500
    If oshp.Name = "Block Arc 19" Then WedgeValue = 400
    If oshp.Name = "Block Arc 18" Then WedgeValue = 400
    If oshp.Name = "Block Arc 17" Then WedgeValue = 500
    If oshp.Name = "Block Arc 16" Then WedgeValue = 300
    If oshp.Name = "Block Arc 15" Then WedgeValue = 500
    If oshp.Name = "Block Arc 14" Then WedgeValue = 900
    If oshp.Name = "Block Arc 13" Then WedgeValue = 300
    If oshp.Name = "Block Arc 12" Then WedgeValue = 600
    If oshp.Name = "Block Arc 11" Then WedgeValue = 300
    If oshp.Name = "Block Arc 10" Then WedgeValue = 450
    If oshp.Name = "Block Arc 9" Then WedgeValue = 700
    If oshp.Name = "Block Arc 8" Then WedgeValue = 600
    If oshp.Name = "Block Arc 7" Then WedgeValue = 300
    If oshp.Name = "Block Arc 6" Then WedgeValue = 900
    If oshp.Name = "Block Arc 230" Then WedgeValue = 30000
    If oshp.Name = "Block Arc 229" Then WedgeValue = 20000
    If oshp.Name = "Block Arc 228" Then WedgeValue = 75000
    If oshp.Name = "Block Arc 227" Then WedgeValue = 25000
    If oshp.Name = "Block Arc 226" Then WedgeValue = 30000
    If oshp.Name = "Block Arc 225" Then WedgeValue = 35000
    If oshp.Name = "Block Arc 224" Then WedgeValue = 30000
    If oshp.Name = "Block Arc 223" Then WedgeValue = 35000
    If oshp.Name = "Block Arc 222" Then WedgeValue = 45000
    If oshp.Name = "Block Arc 221" Then WedgeValue = 20000
    If oshp.Name = "Block Arc 220" Then WedgeValue = 45000
    If oshp.Name = "Block Arc 219" Then WedgeValue = 20000
    If oshp.Name = "Block Arc 218" Then WedgeValue = 15000
    If oshp.Name = "Block Arc 217" Then WedgeValue = 15000
    If oshp.Name = "Block Arc 216" Then WedgeValue = 15000
    If oshp.Name = "Block Arc 215" Then WedgeValue = 20000
    If oshp.Name = "Block Arc 214" Then WedgeValue = 50000
    If oshp.Name = "Block Arc 213" Then WedgeValue = 100000
    If oshp.Name = "Block Arc 212" Then WedgeValue = 35000
    If oshp.Name = "Block Arc 211" Then WedgeValue = 25000
    If oshp.Name = "Block Arc 210" Then WedgeValue = 15000
    If oshp.Name = "Block Arc 209" Then WedgeValue = 40000
    If oshp.Name = "Block Arc 208" Then WedgeValue = 40000
    If oshp.Name = "Block Arc 207" Then WedgeValue = 25000

    For Each osl In ActivePresentation.Slides
    On Error Resume Next
    osl.Shapes("SpunValue").TextFrame.TextRange.Text = FormatCurrency(WedgeValue, 0)
    Next osl
    Call CloseWheel
End Sub
Sub FinalTimer()
i = SlideShowWindows(1).View.Slide.SlideNumber
Dim TimeX As Long
On Error Resume Next
If wofx < 10 Then
wofx = 11
TimeX = 10
ActivePresentation.Slides(i).Shapes("TimerSFX").ActionSettings(ppMouseClick).SoundEffect.Play
Do Until TimeX = 0
    TimeX = TimeX - 1
    ActivePresentation.Slides(i).Shapes("TimerText").TextFrame.TextRange.Text = TimeX
    t = Timer + 1
    Do Until Timer > t
    DoEvents
    Loop
Loop
ActivePresentation.Slides(i).Shapes("PlayPuzzle").Visible = False
End If
End Sub
Function OnSlideShowTerminate()
started = False
AddSpinTog = 0
wofx = 0
WOFrounds = 0
WOFtossups = 0
WOFslide = 0
WheelStr = 0
WheelValue = 0
RedScore = 0
YellowScore = 0
BlueScore = 0
RedFinal = 0
YellowFinal = 0
BlueFinal = 0
TossUpPrize = 0
WheelSoundOn = 0

ActivePresentation.Slides(1).Shapes("Freeform 90").TextFrame.TextRange.Text = "EDIT PLAYER NAMES"

Dim osl As Slide
Dim oshp As Shape

    On Error Resume Next
    For Each osl In ActivePresentation.Slides
    osl.Shapes("NoVowelGroup").Visible = False
    osl.Shapes("NoPlayerSelected").Visible = False
    osl.Shapes("NoMoreVowelsGroup").Visible = False
    osl.Shapes("RedCover").Visible = True
    osl.Shapes("YellowCover").Visible = True
    osl.Shapes("BlueCover").Visible = True
    osl.Shapes("RedTogOn").Visible = False
    osl.Shapes("YellowTogOn").Visible = False
    osl.Shapes("BlueTogOn").Visible = False
    osl.Shapes("WildCard").Visible = True
    osl.Shapes("FreeSpinToken").Visible = True
    osl.Shapes("2.5K").Visible = False
    osl.Shapes("5K").Visible = False
    osl.Shapes("B10K").Visible = False
    osl.Shapes("RedWin").Visible = False
    osl.Shapes("YellowWin").Visible = False
    osl.Shapes("BlueWin").Visible = False
    osl.Shapes("SpunValue").TextFrame.TextRange.Text = "$0"
    osl.Shapes("RedScore").TextFrame.TextRange.Text = FormatCurrency(RedScore, 0)
    osl.Shapes("YellowScore").TextFrame.TextRange.Text = FormatCurrency(YellowScore, 0)
    osl.Shapes("BlueScore").TextFrame.TextRange.Text = FormatCurrency(BlueScore, 0)
    osl.Shapes("RedFinal").TextFrame.TextRange.Text = FormatCurrency(RedFinal, 0)
    osl.Shapes("YellowFinal").TextFrame.TextRange.Text = FormatCurrency(YellowFinal, 0)
    osl.Shapes("BlueFinal").TextFrame.TextRange.Text = FormatCurrency(BlueFinal, 0)
    osl.Shapes("TriggerA").Visible = False
    osl.Shapes("TriggerB").Visible = False
    osl.Shapes("TriggerC").Visible = False
    osl.Shapes("TriggerD").Visible = False
    osl.Shapes("TriggerE").Visible = False
    osl.Shapes("TriggerF").Visible = False
    osl.Shapes("TriggerG").Visible = False
    osl.Shapes("TriggerH").Visible = False
    osl.Shapes("TriggerI").Visible = False
    osl.Shapes("TriggerJ").Visible = False
    osl.Shapes("TriggerK").Visible = False
    osl.Shapes("TriggerL").Visible = False
    osl.Shapes("TriggerM").Visible = False
    osl.Shapes("TriggerN").Visible = False
    osl.Shapes("TriggerO").Visible = False
    osl.Shapes("TriggerP").Visible = False
    osl.Shapes("TriggerQ").Visible = False
    osl.Shapes("TriggerR").Visible = False
    osl.Shapes("TriggerS").Visible = False
    osl.Shapes("TriggerT").Visible = False
    osl.Shapes("TriggerU").Visible = False
    osl.Shapes("TriggerV").Visible = False
    osl.Shapes("TriggerW").Visible = False
    osl.Shapes("TriggerX").Visible = False
    osl.Shapes("TriggerY").Visible = False
    osl.Shapes("TriggerZ").Visible = False
    osl.Shapes("StartTossUp").Visible = True
    osl.Shapes("WheelOn").Fill.ForeColor.RGB = RGB(0, 129, 0)
    osl.Shapes("WheelOff").Fill.ForeColor.RGB = RGB(64, 64, 64)
    osl.Shapes("TimerBlock").Visible = True
    osl.Shapes("TimerText").TextFrame.TextRange.Text = "0"
    osl.Shapes("LeaveGroup").Visible = False
    osl.Shapes("PlayPuzzle").Visible = True
    osl.Shapes("PausePuzzle").Visible = False
'    oSl.Shapes("EditBack").Visible = False
'    oSl.Shapes("EditNext").Visible = False
'    oSl.Shapes("EditButton").Visible = False

    If osl.Shapes("Title 1").TextFrame.TextRange.Text Like "FINAL*" Or osl.Shapes("Title 1").TextFrame.TextRange.Text Like "TOSS UP*" Then osl.Shapes("SpunValue").Visible = False

        For Each oshp In osl.Shapes
            If oshp.HasTextFrame Then
                If oshp.TextFrame.TextRange.Font.Color.RGB = RGB(0, 0, 255) Then
                    If oshp.Fill.ForeColor.RGB = RGB(0, 0, 255) Then
                        oshp.TextFrame.TextRange.Font.Color.RGB = RGB(0, 0, 0)
                        oshp.Fill.ForeColor.RGB = RGB(255, 255, 255)
                    End If
                End If
            End If
        
            If oshp.Fill.ForeColor.RGB = RGB(255, 255, 255) Then
                If oshp.HasTextFrame Then
                    With oshp.TextFrame.TextRange
                        If .Font.Color.RGB = RGB(0, 0, 0) Then
                        If .Text = "A" Then .Font.Color.RGB = RGB(255, 255, 255)
                        If .Text = "B" Then .Font.Color.RGB = RGB(255, 255, 255)
                        If .Text = "C" Then .Font.Color.RGB = RGB(255, 255, 255)
                        If .Text = "D" Then .Font.Color.RGB = RGB(255, 255, 255)
                        If .Text = "E" Then .Font.Color.RGB = RGB(255, 255, 255)
                        If .Text = "F" Then .Font.Color.RGB = RGB(255, 255, 255)
                        If .Text = "G" Then .Font.Color.RGB = RGB(255, 255, 255)
                        If .Text = "H" Then .Font.Color.RGB = RGB(255, 255, 255)
                        If .Text = "I" Then .Font.Color.RGB = RGB(255, 255, 255)
                        If .Text = "J" Then .Font.Color.RGB = RGB(255, 255, 255)
                        If .Text = "K" Then .Font.Color.RGB = RGB(255, 255, 255)
                        If .Text = "L" Then .Font.Color.RGB = RGB(255, 255, 255)
                        If .Text = "M" Then .Font.Color.RGB = RGB(255, 255, 255)
                        If .Text = "N" Then .Font.Color.RGB = RGB(255, 255, 255)
                        If .Text = "O" Then .Font.Color.RGB = RGB(255, 255, 255)
                        If .Text = "P" Then .Font.Color.RGB = RGB(255, 255, 255)
                        If .Text = "Q" Then .Font.Color.RGB = RGB(255, 255, 255)
                        If .Text = "R" Then .Font.Color.RGB = RGB(255, 255, 255)
                        If .Text = "S" Then .Font.Color.RGB = RGB(255, 255, 255)
                        If .Text = "T" Then .Font.Color.RGB = RGB(255, 255, 255)
                        If .Text = "U" Then .Font.Color.RGB = RGB(255, 255, 255)
                        If .Text = "V" Then .Font.Color.RGB = RGB(255, 255, 255)
                        If .Text = "W" Then .Font.Color.RGB = RGB(255, 255, 255)
                        If .Text = "X" Then .Font.Color.RGB = RGB(255, 255, 255)
                        If .Text = "Y" Then .Font.Color.RGB = RGB(255, 255, 255)
                        If .Text = "Z" Then .Font.Color.RGB = RGB(255, 255, 255)
                        End If
                    End With
                End If
            End If
        Next oshp
            Next

End Function
Sub EditPuzzle(oshp As Shape)
Dim sld As Slide
If oshp.Name Like "Edit*" Then
PuzGen.Show vbModal
Else

If editbool = False Then
For Each sld In ActivePresentation.Slides
On Error Resume Next
sld.Shapes("EditBack").Visible = True
sld.Shapes("EditNext").Visible = True
sld.Shapes("EditButton").Visible = True
Next sld
editbool = True
Exit Sub

Else
For Each sld In ActivePresentation.Slides
On Error Resume Next
sld.Shapes("EditBack").Visible = False
sld.Shapes("EditNext").Visible = False
sld.Shapes("EditButton").Visible = False
Next sld
editbool = False
End If

End If
End Sub

Function RemoveTrigger(letter As String)
If letter = "A" Then guessed(1) = 0
If letter = "B" Then guessed(2) = 0
If letter = "C" Then guessed(3) = 0
If letter = "D" Then guessed(4) = 0
If letter = "E" Then guessed(5) = 0
If letter = "F" Then guessed(6) = 0
If letter = "G" Then guessed(7) = 0
If letter = "H" Then guessed(8) = 0
If letter = "I" Then guessed(9) = 0
If letter = "J" Then guessed(10) = 0
If letter = "K" Then guessed(11) = 0
If letter = "L" Then guessed(12) = 0
If letter = "M" Then guessed(13) = 0
If letter = "N" Then guessed(14) = 0
If letter = "O" Then guessed(15) = 0
If letter = "P" Then guessed(16) = 0
If letter = "Q" Then guessed(17) = 0
If letter = "R" Then guessed(18) = 0
If letter = "S" Then guessed(19) = 0
If letter = "T" Then guessed(20) = 0
If letter = "U" Then guessed(21) = 0
If letter = "V" Then guessed(22) = 0
If letter = "W" Then guessed(23) = 0
If letter = "X" Then guessed(24) = 0
If letter = "Y" Then guessed(25) = 0
If letter = "Z" Then guessed(26) = 0
End Function

Function WheelRound(ByVal r As Long)
Dim osl As Slide
On Error Resume Next
If r = 1 Then
    For Each osl In ActivePresentation.Slides
    osl.Shapes("WildCard").Visible = True
    osl.Shapes("FreeSpinToken").Visible = True
    osl.Shapes("2.5K").Visible = False
    osl.Shapes("5K").Visible = False
    osl.Shapes("B10K").Visible = False
    Next osl
Else
End If
If r = 2 Then
    For Each osl In ActivePresentation.Slides
    osl.Shapes("WildCard").Visible = True
    osl.Shapes("FreeSpinToken").Visible = True
    osl.Shapes("2.5K").Visible = True
    osl.Shapes("5K").Visible = False
    osl.Shapes("B10K").Visible = False
    Next osl
Else
End If
If r = 3 Then
    For Each osl In ActivePresentation.Slides
    osl.Shapes("WildCard").Visible = True
    osl.Shapes("FreeSpinToken").Visible = True
    osl.Shapes("2.5K").Visible = True
    osl.Shapes("5K").Visible = False
    osl.Shapes("B10K").Visible = True
    Next osl
Else
End If
If r > 3 Then
    For Each osl In ActivePresentation.Slides
    osl.Shapes("WildCard").Visible = True
    osl.Shapes("FreeSpinToken").Visible = True
    osl.Shapes("2.5K").Visible = False
    osl.Shapes("5K").Visible = True
    osl.Shapes("B10K").Visible = True
    Next osl
Else
End If
          
End Function
Function TossRound(ByVal r As Long, s As Long)
Dim osl As Slide
On Error Resume Next
        ActivePresentation.Slides(s).Shapes("RedCover").Visible = True
        ActivePresentation.Slides(s).Shapes("YellowCover").Visible = True
        ActivePresentation.Slides(s).Shapes("BlueCover").Visible = True
        ActivePresentation.Slides(s).Shapes("RedTogOn").Visible = False
        ActivePresentation.Slides(s).Shapes("YellowTogOn").Visible = False
        ActivePresentation.Slides(s).Shapes("BlueTogOn").Visible = False
If r < 3 Then TossUpPrize = 1000
If r = 3 Then TossUpPrize = 2000
If r = 4 Then TossUpPrize = 3000
If r > 4 Then TossUpPrize = 5000
        ActivePresentation.Slides(s).Shapes("TossUpValue").TextFrame.TextRange.Text = FormatCurrency(TossUpPrize, 0)
        ActivePresentation.Slides(s).Shapes("SpunValue").TextFrame.TextRange.Text = FormatCurrency(TossUpPrize, 0)
End Function



' InQuest injected base64 decoded content
' u)bu
' x)br

INQUEST-PP=macro
