Attribute VB_Name = "Module1"
' PlanCAD Automation Sample
' Copyright (C) 2007 by Consistent Software, Inc.

Option Explicit

' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd|
Sub PT_RunFunc(Objects As PTObjects, ptApp As PTApplication)
  Dim flat As PTFlat
  If Objects.Count > 0 Then
    Dim obj As IPTObject
    For Each obj In Objects
      If obj.Type = ptObjTypeFlat Then
        Set flat = obj
        Exit For
      End If
    Next
  End If
  
  If Not flat Is Nothing Then
    UpdateReport flat, ptApp
  Else
    MsgBox "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd|!"
  End If
End Sub

' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
Sub Update()
  ' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd|
  Dim ptApp As PTApplication
  Set ptApp = GetPlanModel

  ' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd|
  Sheets("|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|").Select
  Dim flat As PTFlat
  Set flat = GetFlatById(Cells(2, 3).Formula, ptApp)
  If flat Is Nothing Then
    MsgBox "|fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd| |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd|!"
    Exit Sub
  End If
  
  ' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd|
  UpdateReport flat, ptApp
  
End Sub

' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
Sub UpdateReport(flat As PTFlat, ptApp As PTApplication)

  ' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
  DrawFlat flat
  
  ' |fffd||fffd||fffd||fffd||fffd|
  Cells(2, 3).Formula = flat.FlatIdShort
  ' |fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd|
  Cells(3, 3).Formula = flat.AreaType
  ' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
  Cells(4, 3).Formula = flat.Description
  ' |fffd||fffd||fffd|. |fffd||fffd| |fffd||fffd||fffd||fffd||fffd|
  Cells(5, 3).Formula = flat.UsedByFact
  ' |fffd||fffd||fffd||fffd||fffd||fffd|
  Cells(6, 3).Formula = flat.Height
  ' |fffd||fffd||fffd||fffd|
  If Not flat.Floor Is Nothing Then
    Cells(7, 3).Formula = flat.Floor.FloorId
  Else
    Cells(7, 3).Formula = ""
  End If
  ' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
  If flat.Attributes.Has("OWNER") Then
    Cells(8, 3).Formula = flat.Attributes("OWNER")
  Else
    Cells(8, 3).Formula = ""
  End If
  ' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
  If flat.Attributes.Has("COST") Then
    Cells(9, 3).Formula = flat.Attributes("COST")
  Else
    Cells(9, 3).Formula = ""
  End If
  
  ' |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
  Dim area As Double
  Dim totalArea As Double, flatArea As Double
  Dim livingArea As Double, subsdArea As Double, balcArea As Double
  totalArea = flatArea = livingArea = subsdArea = balcArea = 0#
           
  ' |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
  Dim row As Integer:  row = 13
  
  ' |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
  Dim rooms As PTObjects
  Set rooms = flat.Objects
  Dim room As PTRoom
  For Each room In rooms
  
    ' |fffd||fffd||fffd||fffd||fffd||fffd|
    Cells(row, 1).Formula = room.Litera
    ' |fffd||fffd||fffd||fffd|
    If room.Floor Is Nothing Then Cells(row, 2).Formula = "" Else Cells(row, 2).Formula = room.Floor.FloorId
    ' |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
    Cells(row, 3).Formula = flat.FlatIdShort
    ' |fffd||fffd||fffd||fffd||fffd| |fffd||fffd|
    Cells(row, 4).Formula = room.RoomId
    ' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
    Cells(row, 5).Formula = room.Description
    ' |fffd||fffd||fffd||fffd||fffd||fffd||fffd|
    Cells(row, 6).Formula = room.area.Formula
    ' |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd|
    Dim roomArea As Double
    roomArea = FormatNumber(room.area, 1)
    ' |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd|
    area = FormatNumber(roomArea * room.AreaFactor, 1)
    totalArea = totalArea + area
    If area > 0 Then Cells(row, 7).Formula = area Else Cells(row, 7).Formula = ""
    ' |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd|
    If room.AreaCategory = ptAreaCategoryLiving Or room.AreaCategory = ptAreaCategorySubsidiary Then
      area = FormatNumber(roomArea * room.AreaFactor, 1)
      flatArea = flatArea + area
    Else
      area = 0#
    End If
    If area > 0 Then Cells(row, 8).Formula = area Else Cells(row, 8).Formula = ""
    ' |fffd||fffd||fffd||fffd||fffd|
    If room.AreaCategory = ptAreaCategoryLiving Then
      area = roomArea
      livingArea = livingArea + area
    Else
      area = 0#
    End If
    If area > 0 Then Cells(row, 9).Formula = area Else Cells(row, 9).Formula = ""
    ' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
    If room.AreaCategory = ptAreaCategorySubsidiary Then
      area = FormatNumber(roomArea * room.AreaFactor, 1)
      subsdArea = subsdArea + area
    Else
      area = 0#
    End If
    If area > 0 Then Cells(row, 10).Formula = area Else Cells(row, 10).Formula = ""
    ' |fffd||fffd||fffd||fffd||fffd||fffd|, |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
    If room.AreaCategory = ptAreaCategoryCold Then
      area = FormatNumber(roomArea * room.AreaFactor, 1)
      balcArea = balcArea + area
    Else
      area = 0#
    End If
    If area > 0 Then Cells(row, 11).Formula = area Else Cells(row, 11).Formula = ""
    ' |fffd||fffd||fffd||fffd||fffd||fffd|
    Cells(row, 12).Formula = room.Height
    ' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
    Cells(row, 13).Formula = ""
    
    row = row + 1
  Next
  
  ' |fffd||fffd||fffd||fffd||fffd|
  Cells(row, 1).Formula = ""
  Cells(row, 2).Formula = ""
  Cells(row, 3).Formula = ""
  Cells(row, 4).Formula = ""
  Cells(row, 5).Formula = ""
  Cells(row, 6).Formula = "|fffd||fffd||fffd||fffd||fffd|:"
  ' |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd|
  If totalArea > 0 Then Cells(row, 7).Formula = totalArea Else Cells(row, 7).Formula = ""
  ' |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd|
  If flatArea > 0 Then Cells(row, 8).Formula = flatArea Else Cells(row, 8).Formula = ""
  ' |fffd||fffd||fffd||fffd||fffd|
  If livingArea > 0 Then Cells(row, 9).Formula = livingArea Else Cells(row, 9).Formula = ""
  ' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
  If subsdArea > 0 Then Cells(row, 10).Formula = subsdArea Else Cells(row, 10).Formula = ""
  ' |fffd||fffd||fffd||fffd||fffd||fffd|, |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
  If balcArea > 0 Then Cells(row, 11).Formula = balcArea Else Cells(row, 11).Formula = ""
  row = row + 1
  
  ' clear scraps
  While Cells(row, 3).Formula <> "" Or Cells(row, 6).Formula <> ""
    Range(Cells(row, 1), Cells(row, 13)).ClearContents
    row = row + 1
  Wend
  
End Sub

' |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
Sub DrawFlat(flat As PTFlat)
  ' get a temporary filename
  Dim fs As Object, sFilename As String
  Set fs = CreateObject("Scripting.FileSystemObject")
  sFilename = fs.GetTempName()
  sFilename = fs.GetSpecialFolder(2) + "\" + sFilename
  ' save a fragment of plan
  On Error Resume Next
  flat.SaveEMF (sFilename)
  If Err = 0 Then
    ' insert the image to the sheet
    ActiveSheet.Pictures(1).Select
    Selection.Delete
    On Error GoTo 0
    Dim pict As Variant
    Set pict = ActiveSheet.Pictures.Insert(sFilename)
    pict.ShapeRange.Left = Cells(2, 4).Left
    pict.ShapeRange.Top = Cells(2, 4).Top
    pict.ShapeRange.Height = Cells(11, 4).Top - Cells(2, 4).Top
    pict.ShapeRange.Line.Visible = msoFalse
    pict.ShapeRange.Fill.Visible = msoFalse
  Else
    On Error GoTo 0
    MsgBox ("|fffd||fffd| |fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|!")
  End If
  ' remove the temporary file
  On Error Resume Next
  fs.DeleteFile sFilename
  On Error GoTo 0
End Sub

' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd|
Function GetFlatById(sFlatId As String, ptApp As PTApplication) As PTFlat
  Set GetFlatById = Nothing
  Dim flats As PTObjects
  Set flats = ptApp.ObjectsByType(ptObjTypeFlat)
  Dim flat As PTFlat
  For Each flat In flats
    If flat.FlatIdShort = sFlatId Then
      Set GetFlatById = flat
      Exit For
    End If
  Next
End Function

' returns the plan model
Function GetPlanModel() As PTApplication
  Dim app
  Set app = CreateObject("PlanCad.Application")
  app.Visible = True
  Set GetPlanModel = app.Documents.ActivePlanModel
End Function

Attribute VB_Name = "|fffd||fffd||fffd||fffd|1"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|"
Attribute VB_Base = "0{00020819-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Option Explicit



INQUEST-PP=macro
