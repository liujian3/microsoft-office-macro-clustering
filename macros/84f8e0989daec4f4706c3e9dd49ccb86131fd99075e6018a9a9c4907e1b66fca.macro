Attribute VB_Name = "Module1"
Sub TestMacro()
Attribute TestMacro.VB_Description = "Combined Totals"
Attribute TestMacro.VB_ProcData.VB_Invoke_Func = "t\n14"
'
' TestMacro Macro
' Rip Down A Column of Things, Adding a column of number things.
' If this is the last thing of a thing set, make a column with the
' running thing total.
'
       
' Let 'em bail out.

    MsgVal = MsgBox("WARNING: This macro will modify your spreadsheet based on the values you provide.  Be sure to have a backup! (or cancel)", vbOKCancel)
    
    If MsgVal = vbCancel Then
        End
    End If
    
    PolicyColumn = InputBox("Enter the Policy (group by) COLUMN (A, B, etc..)")
    If PolicyColumn = "" Then GoTo NoInput
    
    TotalColumn = InputBox("Enter Your Total (add-em-up) COLUMN (A, B, etc..)")
    If TotalColumn = "" Then GoTo NoInput
    
    CombinedColumn = InputBox("Enter COLUMN to Hold Combined (grouped totals) Values (A, B, etc..)")
    If CombinedColumn = "" Then GoTo NoInput
    
    StartRow = Val(InputBox("Enter the Starting ROW (1, 2, etc..)"))
    If StartRow = 0 Then GoTo NoInput
    
    EndRow = Val(InputBox("Enter the Ending ROW (999, 1000, etc...)"))
    If EndRow = 0 Then GoTo NoInput
    
    ' If you are still here, go for it.
    GoTo HaveANiceDay
    
NoInput:
    MsgBox ("One or more required values was not supplied. This macro is aborted.")
    End

    ' Release the hounds...

HaveANiceDay:
    
    rowc = StartRow   ' This is our row counter
        
    Do While (rowc <= EndRow)
        ' Make Running Totals
        CombinedTotal = CombinedTotal + Cells(rowc, TotalColumn).Value
        
        ' No matter what, blank the running totals column
        ' cell.  This cleans up junk that may already be in
        ' the spreadsheet.
        Cells(rowc, CombinedColumn).ClearContents
                    
        ' Check to see if the next policy is the same.  If it
        ' isn't, create a number in the new column and reset
        ' our running totals to zero.
        
        If Cells(rowc, PolicyColumn).Value <> Cells(rowc + 1, PolicyColumn).Value Then
            If CombinedTotal <> 0 Then
                Cells(rowc, CombinedColumn).Value = CombinedTotal
                Cells(rowc, CombinedColumn).NumberFormat = "0.00"
            End If
            
            CombinedTotal = 0#
        End If
            
        rowc = rowc + 1   ' Proceed to the next column
        
    Loop

End Sub
Attribute VB_Name = "Sheet1"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "ThisWorkbook"
Attribute VB_Base = "0{00020819-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True


INQUEST-PP=macro
