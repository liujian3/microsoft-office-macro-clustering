Attribute VB_Name = "Feuil1"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Private Sub Worksheet_Activate()
Range("b3").Select
hideliste
End Sub

Attribute VB_Name = "Feuil2"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Private Sub Worksheet_Activate()
hideliste
End Sub

Private Sub Worksheet_SelectionChange(ByVal Target As Range)

End Sub
Attribute VB_Name = "Feuil3"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Private Sub Worksheet_Activate()
Dim dispgrp As String

If Not isActivated And isExpired Then
    MsgBox "Vous avez atteint la limite d'utilisation du logiciel (10 jours)."
    MsgBox "Pour continuer |fffd| utiliser le logiciel il est n|fffd|cessaire d'acqu|fffd|rir une cl|fffd| d'activation."
    Sheets("Accueil").Select
    frm_activate.Show
    Exit Sub
End If

Application.ScreenUpdating = False

hideliste
dispgrp = Range("displayedgroupe")
ActiveWindow.ScrollRow = 3

dispgroupe (dispgrp)


End Sub


Private Sub Worksheet_SelectionChange(ByVal Target As Range)
Dim col As Integer
Dim row As Integer
col = Target.Column
row = Target.row

If col = 6 And row > 2 Then
    Range("A3").Select
    vliste = Sheets("Listes").Cells(row, 3)
    dispvoca (vliste)
    
End If
End Sub
Attribute VB_Name = "Feuil4"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Private Sub Worksheet_Activate()
hideliste
End Sub

Private Sub Worksheet_SelectionChange(ByVal Target As Range)

End Sub
Attribute VB_Name = "Feuil5"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Private Sub Worksheet_Activate()

'frmvoca.Show False
End Sub

Attribute VB_Name = "Feuil6"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True

Private Sub Worksheet_Activate()
hideliste

End Sub


Attribute VB_Name = "Module1"
Option Explicit

Public chklettre(26) As Boolean
Public lettre(26) As String
Public nbtest As Integer
Public alllettre As Boolean
Public vchknom As Boolean
Public vchkverb As Boolean
Public chkadj As Boolean
Public vchkautre As Boolean
Public alltype As Boolean
Public nbcell As Integer
Public nolimit As Boolean
Public flaglettre As Boolean 'true si une case lettre au moins est coch|fffd|e
Public flagtype As Boolean
Public nosheetevent As Boolean
Public motin As String
Public sourcetest As String '"dictio" si test depuis dictionnaire
Public listetest As String
Public oldliste As String
Public listesaisie As String
Public fromdict As Boolean
Public delaimot As Integer
Public delaitraduc As Integer
Public doauto As Boolean
Public showtraduc As Boolean
Public groupelist As String 'pour la cr|fffd|ation d'une liste
Public vgroupe(1000) As String
Public vnbgroupe As Integer
Public displayedgroupe As String
Public vliste As String
Public actionmot As String

Public Const messtype = "Vous pouvez ajouter, modifier ou supprimer des mots de la liste dans cette feuille. Pour cela, |fffd|crivez les mots dans la premi|fffd|re colonne." & _
        " Les mots saisis doivent se suivre et appartenir au dictionnaire. Un contr|fffd|le automatique est fait. Si le mot saisie ne figure pas dans le dictionnaire une fen|fffd|tre s'ouvrira pour vous proposer de le rajouter. Depuis cette fen|fffd|tre, vous pourrez ajouter plusieurs mots |fffd| la suite."
Public Const listevoca = "Liste de vocabulaire"

Global wishsave As Boolean
Global nom As String
Global prenom As String
Global code As String


Public Sub OnTimer()
    frmtest.OnTimer
End Sub

Public Sub OnTimer2()
    frmtest.OnTimer2
End Sub

Public Sub pause(duree As Integer)
Dim t As Double

t = Timer
Do While Timer < t + duree
     DoEvents
Loop
    
End Sub

Sub hideliste()
razvoca
Sheets(listevoca).Visible = False
Unload frmvoca

End Sub

Public Sub dispvoca(liste As String)
Dim i As Integer
Dim nb As Integer
Dim o As Integer
Dim nblistdb As Integer

nblistdb = Range("nblistdb")

razvoca
nosheetevent = True
'on remplit la feuille
For i = 1 To nblistdb + 1
    If Sheets("listesdb").Cells(i + 2, 3) = liste Then
        nb = Sheets("listesdb").Cells(i + 2, 4)
        For o = 1 To nb
            Sheets(listevoca).Cells(o, 1) = Sheets("listesdb").Cells(i + 2, 5 + o)
        Next o
    End If
Next i

Sheets(listevoca).Visible = True
Sheets(listevoca).Activate
Range("A65536").End(xlUp)(1).Select

nosheetevent = False

MsgBox messtype
DoEvents
frmvoca.Show False

End Sub

Sub sortdata()
Dim lastlig As Integer
Dim srange As String

nbcell = Range("nbcell")
lastlig = nbcell + 1
srange = "A1:I" & lastlig
'Sheets("Dictionnaire").Visible = False

Sheets("Dictionnaire").Activate
Sheets("Dictionnaire").Range(srange).Select

Selection.Sort Key1:=Range("A1"), Order1:=xlAscending, Header:=xlGuess, _
OrderCustom:=1, MatchCase:=False, Orientation:=xlTopToBottom
Sheets("Dictionnaire").Range("A1").Select

Sheets("Dictionnaire").Visible = True
Sheets("Param").Activate

End Sub

Sub showdict()
frmdict.Show
End Sub

Sub showfrmliste()
frmliste.Show

End Sub

Sub showlistes()
Sheets("Listes").Visible = xlSheetVisible
Sheets("Listes").Activate

End Sub

Sub showgogroupe()
frmgogroupe.Show

End Sub
Sub showsaisie()
motin = ""
frmsaisie.Show

End Sub

Sub showabout()
frmabout.Show

End Sub

Sub showmenu()
frmmenu.Show

End Sub
Sub clicnextgroupe()
Dim displayedgroupe As String
Dim numgroupe As Integer

'il y a toujours un groupe affich|fffd|
displayedgroupe = Sheets("listes").Cells(3, 2)

numgroupe = getnumgroupe(displayedgroupe)

If numgroupe = vnbgroupe Then
    MsgBox "Vous |fffd|tes arriv|fffd|(e) au dernier groupe."
    Exit Sub
End If

Call dispgroupe(vgroupe(numgroupe + 1))

End Sub

Sub clicprevgroupe()
Dim displayedgroupe As String
Dim numgroupe As Integer

'il y a toujours un groupe affich|fffd|
displayedgroupe = Sheets("listes").Cells(3, 2)

numgroupe = getnumgroupe(displayedgroupe)

If numgroupe = 1 Then
    MsgBox "Vous |fffd|tes arriv|fffd|(e) au premier groupe."
    Exit Sub
End If

If numgroupe = 0 Then 'au cas o|fffd|
    numgroupe = 2
End If

Call dispgroupe(vgroupe(numgroupe - 1))

End Sub

Private Sub doformat()
With Sheets("Listes")
    .Range("B3:F1000").ClearContents
    .Range("B3:F1000").Font.Bold = False
    .Range("B3:F1000").Interior.ColorIndex = 2
    .Range("B3:F1000").Borders(xlEdgeLeft).LineStyle = xlNone
    .Range("B3:F1000").Borders(xlEdgeTop).LineStyle = xlNone
    .Range("B3:F1000").Borders(xlEdgeBottom).LineStyle = xlNone
    .Range("B3:F1000").Borders(xlEdgeRight).LineStyle = xlNone
    .Range("B3:F1000").Borders(xlInsideVertical).LineStyle = xlNone
    .Range("B3:F1000").Borders(xlInsideHorizontal).LineStyle = xlNone
End With
End Sub

Public Sub dispgroupe(groupe As String)
Dim nblistdb As Integer
Dim nb As Integer
Dim i As Integer
Dim o As Integer

Application.ScreenUpdating = False

nblistdb = Range("nblistdb")

doformat

If nblistdb = 0 Then Exit Sub

nb = 2

For i = 1 To nblistdb + 1
    If Sheets("listesdb").Cells(i + 2, 2) = groupe Then
        With Sheets("Listes")
            nb = nb + 1
            .Range("B" & nb & ":F" & nb).Value = Array(groupe, Sheets("listesdb").Cells(i + 2, 3), Sheets("listesdb").Cells(i + 2, 4), Sheets("listesdb").Cells(i + 2, 5), "Cliquez dans la cellule")
            .Cells(nb, 5).NumberFormat = "dd/mm/yyyy"
            If nb Mod 2 = 0 Then .Range("B" & nb & ":F" & nb).Interior.Color = RGB(230, 220, 220)
         End With
    End If
Next i

Range("B3:F" & nb).Select
    Selection.Borders(xlDiagonalDown).LineStyle = xlNone
    Selection.Borders(xlDiagonalUp).LineStyle = xlNone
    With Selection.Borders(xlEdgeLeft)
        .LineStyle = xlContinuous
        .ColorIndex = 0
        .TintAndShade = 0
        .Weight = xlThin
    End With
    With Selection.Borders(xlEdgeTop)
        .LineStyle = xlContinuous
        .ColorIndex = 0
        .TintAndShade = 0
        .Weight = xlThin
    End With
    With Selection.Borders(xlEdgeBottom)
        .LineStyle = xlContinuous
        .ColorIndex = 0
        .TintAndShade = 0
        .Weight = xlThin
    End With
    With Selection.Borders(xlEdgeRight)
        .LineStyle = xlContinuous
        .ColorIndex = 0
        .TintAndShade = 0
        .Weight = xlThin
    End With
    With Selection.Borders(xlInsideVertical)
        .LineStyle = xlContinuous
        .ColorIndex = 0
        .TintAndShade = 0
        .Weight = xlThin
    End With
    With Selection.Borders(xlInsideHorizontal)
        .LineStyle = xlContinuous
        .ColorIndex = 0
        .TintAndShade = 0
        .Weight = xlThin
    End With
    
ActiveWindow.ScrollColumn = 1
Application.ScreenUpdating = True

Range("A3").Select
Application.ScreenUpdating = True

End Sub

Private Function getnumgroupe(groupe) As Integer
Dim i As Integer
Dim ret As Integer

ret = 0

initgroupe 'pour |fffd|tre s|fffd|r
For i = 1 To vnbgroupe
    If groupe = vgroupe(i) Then
        ret = i
    End If
Next i

getnumgroupe = ret
End Function

Public Sub initgroupe()
Dim groupecur As String
Dim groupeprev As String
Dim nb As Integer
Dim nblistdb As Integer
Dim i As Integer

nblistdb = Range("nblistdb")
groupeprev = ""

For i = 1 To nblistdb + 1
    groupecur = Sheets("listesdb").Cells(i + 2, 2)
    
    If groupecur <> groupeprev And groupecur <> "" Then
        nb = nb + 1
        vgroupe(nb) = groupecur
    End If
    
    groupeprev = groupecur
Next i

vnbgroupe = nb
End Sub

Public Sub razvoca()
Sheets(listevoca).Range("A1:B10000").ClearContents

End Sub

Private Sub razvar()
Dim i As Integer

For i = 1 To 26
    chklettre(i) = False
Next

nbtest = Range("nbtest")
alllettre = False
vchknom = False
vchkverb = False
chkadj = False
vchkautre = False
alltype = False
lettre(1) = "A,a"
lettre(2) = "B,b"
lettre(3) = "C,c"
lettre(4) = "D,d"
lettre(5) = "E,e"
lettre(6) = "F,f"
lettre(7) = "G,g"
lettre(8) = "H,h"
lettre(9) = "I,i"
lettre(10) = "J,j"
lettre(11) = "K,k"
lettre(12) = "L,l"
lettre(13) = "M,m"
lettre(14) = "N,n"
lettre(15) = "O,o"
lettre(16) = "P,p"
lettre(17) = "Q,q"
lettre(18) = "R,r"
lettre(19) = "S,s"
lettre(20) = "T,t"
lettre(21) = "U,u"
lettre(22) = "V,v"
lettre(23) = "W,w"
lettre(24) = "X,x"
lettre(25) = "Y,y"
lettre(26) = "Z,z"

End Sub

Sub showlearn()
If Not isActivated And isExpired Then
    MsgBox "Vous avez atteint la limite d'utilisation du logiciel (10 jours)."
    MsgBox "Pour continuer |fffd| utiliser le logiciel il est n|fffd|cessaire d'acqu|fffd|rir une cl|fffd| d'activation."
    Sheets("Accueil").Select
    frm_activate.Show
    
    Exit Sub
End If

razvar

frmlearn.Show

End Sub

Sub godata()
Sheets("Dictionnaire").Visible = True

Sheets("Dictionnaire").Activate
Sheets("Dictionnaire").Range("a2").Select
End Sub

Sub quitterappli()

If WorkbookCount() = 1 Then
    Application.DisplayAlerts = False
    Application.EnableEvents = False
    Application.Quit
    

Else
'    ThisWorkbook.Close (False)
Application.OnTime Now, "Close_Xls"
End If

End Sub

Sub Close_Xls()
   ThisWorkbook.Close savechanges:=False
End Sub

Sub saveappli()

Dim newfic As String
Dim ficold As String

On Error GoTo erreur

Application.EnableEvents = False
Application.DisplayAlerts = False

newfic = Range("dirsave") & "\" & ActiveWorkbook.Name

ActiveWorkbook.Save

Application.DisplayAlerts = False
Application.EnableEvents = True

If Range("tosaveother") = True Then
    ficold = Mid(newfic, 1, Len(newfic) - 5) & "_old.xlsm"
    If FileExists(newfic) Then ActiveWorkbook.SaveCopyAs ficold
    DeleteFile (newfic)
    ActiveWorkbook.SaveCopyAs newfic
    DeleteFile (ficold)
End If

quitterappli
Exit Sub
erreur:
MsgBox "Une erreur a eu lieu lors de l'enregistrement du fichier dans le r|fffd|pertoire: " & Range("dirsave")
quitterappli

End Sub

Public Function WorkbookCount(Optional VisibleOnly As Boolean) As Long
    '''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
    ' WorkbookCount
    ' This returns the count of all open workbooks. If VisibleOnly
    ' is True, only visible workbooks are counted. If VisibleOnly is
    ' False, all workbooks are counted.
    '''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
    Dim WB As Workbook
    Dim N As Long
    For Each WB In Application.Workbooks
        If VisibleOnly = False Or (VisibleOnly = True And WB.Windows(1).Visible = True) Then
            N = N + 1
        End If
    Next WB
    WorkbookCount = N
    End Function

Public Function IsFeuilleExist(ByVal NameSheet As String) As Boolean
    Dim oSheet As Worksheet
    
For Each oSheet In ThisWorkbook.Sheets
    If oSheet.Name = NameSheet Then IsFeuilleExist = True: Exit For
Next oSheet

End Function

Sub init()

Sheets("Accueil").Select
Range("A1").Select

If Range("first") = "" Then
    MsgBox "Bienvenue et merci de votre int|fffd|r|fffd|t pour ce logiciel." & Chr(13) & Chr(13) & "N'h|fffd|sitez-pas |fffd| me contacter pour toute question ou remarque.", vbInformation, "Bienvenue"

    Range("first") = "X"
    Range("installationdate") = Format(Now, "MM/DD/YYYY")
    ThisWorkbook.Save
    
End If
End Sub

Public Sub Tri(a, gauc, droi) ' Quick sort
Dim ref As Variant
Dim g As Variant
Dim d As Variant
Dim temp As Variant

  ref = a((gauc + droi) \ 2)
  g = gauc: d = droi
  Do
     Do While a(g) < ref: g = g + 1: Loop
     Do While ref < a(d): d = d - 1: Loop
     If g <= d Then
        temp = a(g): a(g) = a(d): a(d) = temp
        g = g + 1: d = d - 1
     End If
   Loop While g <= d
   If g < droi Then Call Tri(a, g, droi)
   If gauc < d Then Call Tri(a, gauc, d)
End Sub

Function isActivated() As Boolean

isActivated = Range("isactivated")

End Function

Public Function DossierExiste(MonDossier As String)
'par Excel-Malin.com ( http://excel-malin.com )
On Error GoTo erreur
   If Len(Dir(MonDossier, vbDirectory)) > 0 Then
      DossierExiste = True
   Else
      DossierExiste = False
   End If
Exit Function
erreur:
DossierExiste = False
End Function

Public Sub chkdoublesave()
Dim dossier As String

dossier = Range("dirsave")

If Range("tosaveother") = True Then
    If dossier = "" Or Not DossierExiste(dossier) Then frm_save.Show
End If

End Sub

Function FileExists(ByVal FileToTest As String) As Boolean
   FileExists = (Dir(FileToTest) <> "")
End Function

Sub DeleteFile(ByVal FileToDelete As String)
   If FileExists(FileToDelete) Then 'See above
      ' First remove readonly attribute, if set
      SetAttr FileToDelete, vbNormal
      ' Then delete the file
      Kill FileToDelete
   End If
End Sub

Public Function MD5(ByVal sIn As String, Optional bB64 As Boolean = 0) As String
    'Set a reference to mscorlib 4.0 64-bit
    
    'Test with empty string input:
    'Hex:   d41d8cd98f00...etc
    'Base-64: 1B2M2Y8Asg...etc
        
    Dim oT As Object, oMD5 As Object
    Dim TextToHash() As Byte
    Dim bytes() As Byte
        
    Set oT = CreateObject("System.Text.UTF8Encoding")
    Set oMD5 = CreateObject("System.Security.Cryptography.MD5CryptoServiceProvider")
 
    TextToHash = oT.GetBytes_4(sIn)
    bytes = oMD5.ComputeHash_2((TextToHash))
 
    If bB64 = True Then
       MD5 = ConvToBase64String(bytes)
    Else
       MD5 = ConvToHexString(bytes)
    End If
        
    Set oT = Nothing
    Set oMD5 = Nothing

End Function

Private Function ConvToBase64String(vIn As Variant) As Variant

    Dim oD As Object
      
    Set oD = CreateObject("MSXML2.DOMDocument")
      With oD
        .LoadXML "<root />"
        .DocumentElement.DataType = "bin.base64"
        .DocumentElement.nodeTypedValue = vIn
      End With
    ConvToBase64String = Replace(oD.DocumentElement.Text, vbLf, "")
    
    Set oD = Nothing

End Function

Private Function ConvToHexString(vIn As Variant) As Variant

    Dim oD As Object
      
    Set oD = CreateObject("MSXML2.DOMDocument")
      
      With oD
        .LoadXML "<root />"
        .DocumentElement.DataType = "bin.Hex"
        .DocumentElement.nodeTypedValue = vIn
      End With
    ConvToHexString = Replace(oD.DocumentElement.Text, vbLf, "")
    
    Set oD = Nothing

End Function

Function iscodeok(nom As String, prenom As String, code As String) As Boolean
Dim lnom As String
Dim lprenom As String
Dim cle As String
Dim liste As String
Dim v As String
Dim i As Integer


lnom = UCase(nom)
lprenom = LCase(prenom)
cle = "*kj%nhb3"

liste = MD5(lnom & cle & lprenom)

For i = 25 To 1 Step -1
    v = v & Mid(liste, i, 1)
    If ((i - 1) Mod 5 = 0 And i <> 1) Then
        v = v & "-"
    End If
Next i

If UCase(code) = UCase(v) Then
    iscodeok = True
Else
    iscodeok = False
End If
End Function

Public Sub clicparam()

frm_param.Show
End Sub

Public Sub chklicense()
Dim nowdate As Date
Dim installdate As Date
Dim newdate As Date

installdate = Range("installationdate")
nowdate = Format(Now, "MM/DD/YYYY")
newdate = DateAdd("d", 10, installdate)

If newdate < nowdate Then
    
    MsgBox "Vous avez atteint la limite d'utilisation du logiciel (10 jours)."
    MsgBox "Pour continuer |fffd| utiliser le logiciel il est n|fffd|cessaire d'acqu|fffd|rir une cl|fffd| d'activation."
    frm_activate.Show

End If

End Sub

Public Function isExpired() As Boolean
Dim nowdate As Date
Dim installdate As Date
Dim newdate As Date

installdate = Range("installationdate")
nowdate = Format(Now, "MM/DD/YYYY")
newdate = DateAdd("d", 10, installdate)
If newdate < nowdate Then
    isExpired = True
Else
    isExpired = False
End If

End Function

Public Sub trace(log As String, evt As String, Optional forced As Boolean)
Dim wq As WinHttp.WinHttpRequest
Dim url As String
On Error GoTo erreur
If Not forced Then Exit Sub
If isActivated() Then Exit Sub

Set wq = New WinHttpRequest

url = "http://www.meslogicielssurexcel.fr/php/trace.php?log=" & log & "&evt=" & evt

wq.Open "GET", url, False

wq.send
Set wq = Nothing

Exit Sub
erreur:

End Sub
Attribute VB_Name = "ThisWorkbook"
Attribute VB_Base = "0{00020819-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True

Private Sub Workbook_Activate()
init

If Not isActivated Then chklicense

End Sub


Private Sub Workbook_BeforeSave(ByVal SaveAsUI As Boolean, Cancel As Boolean)
Dim newfic As String
Dim ficold As String

If Range("tosaveother") = False Then Exit Sub
On Error GoTo erreur

Application.EnableEvents = False
Application.DisplayAlerts = False

ActiveWorkbook.Save

Application.DisplayAlerts = False
Application.EnableEvents = True

newfic = Range("dirsave") & "\" & ActiveWorkbook.Name

ficold = Mid(newfic, 1, Len(newfic) - 5) & "_old.xlsm"
If FileExists(newfic) Then ActiveWorkbook.SaveCopyAs ficold

DeleteFile (newfic)

ActiveWorkbook.SaveCopyAs newfic
DeleteFile (ficold)

Cancel = True
Exit Sub
erreur:
MsgBox "Une erreur a eu lieu lors de l'enregistrement du fichier dans le r|fffd|pertoire " & Range("dirsave")

End Sub

Private Sub Workbook_SheetChange(ByVal Sh As Object, ByVal Target As Range)
Dim choice As String
Dim line As Integer

On Error GoTo erreur
If nosheetevent Then Exit Sub

If Sh.Name = listevoca Then
    If Target.Value <> "" And Not ispresent(Target.Value, line) Then
        choice = MsgBox("Ce mot ne figure pas dans le dictionnaire." & Chr(13) & Chr(13) & "Souhaitez-vous le rajouter ?", vbYesNo)
        If choice = vbYes Then
            motin = Target.Value
            listesaisie = vliste
            fromdict = False
            frmsaisie.Show
        End If
    End If
End If
Exit Sub

erreur:
End Sub

Public Function ispresent(val As String, ByRef line As Integer) As Boolean
Dim ret As Boolean

Dim i As Integer
nbcell = Range("nbcell")
ret = False

For i = 1 To nbcell
If Sheets("Dictionnaire").Cells(i + 1, 1) = val Then
    ret = True
    line = i + 1
    Exit For
End If

Next i
ispresent = ret

End Function

Private Sub Workbook_SheetFollowHyperlink(ByVal Sh As Object, ByVal Target As Hyperlink)

On Error GoTo fin

Application.Range(Target.SubAddress).Parent.Visible = xlSheetVisible

Application.Range(Target.SubAddress).Parent.Activate

fin:
End Sub

Private Sub Workbook_SheetSelectionChange(ByVal Sh As Object, ByVal Target As Range)
Dim line As Integer
On Error GoTo erreur
If Sh.Name = listevoca Then
    If (Target.Column = 2) Then
        'on affiche la traduction
        'If ispresent(Sh.Cells(Target.row, 1).Value, line) Then
            
            nosheetevent = True
            Range("recherchev").FormulaLocal = "=RECHERCHEV('Liste de vocabulaire'!A" & Target.row & ";Dictionnaire!A:H;8;FAUX)"
            line = Range("recherchev")
            Sh.Cells(Target.row, 2) = Sheets("Dictionnaire").Cells(line, 2)
            'pb plusieurs mots
            'Sh.Cells(Target.row, 2).FormulaLocal = "=RECHERCHEV(A" & Target.row & ";Dictionnaire!A:B;2;FAUX)"
            nosheetevent = False
            
        'End If
    End If

    If (Target.Column = 1) Then
        'on efface la traduction |fffd|ventuelle
            
            nosheetevent = True
            Sh.Cells(Target.row, 2) = ""
            nosheetevent = False
            
        'End If
    End If


End If

Exit Sub
erreur:

End Sub
Attribute VB_Name = "frm_activate"
Attribute VB_Base = "0{51C65CFA-7E39-410A-B87C-1FCD60FDCC1F}{9890596D-E10A-48DA-8DB6-86B52AF4E9CE}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Option Explicit

Private Sub cmdbuy_Click()
On Error GoTo erreur
Call trace("anglais", "ouvrirbuy", True)
Sheets("param").Range("linkpay").Hyperlinks(1).Follow

Exit Sub

erreur:
MsgBox ("le site n'est pas accessible.")
End Sub

Private Sub cmdclose_Click()
Unload Me
End Sub

Private Sub cmdok_Click()
valider

End Sub

Private Sub cmdpaste_Click()
txtcode.Paste

End Sub

Private Sub txtcode_KeyDown(ByVal KeyCode As MSForms.ReturnInteger, ByVal Shift As Integer)
If KeyCode = vbKeyReturn Then
    valider
End If
End Sub

Private Sub UserForm_Activate()

nom = Range("nom")
prenom = Range("prenom")
code = Range("code")

If isActivated Then
    labstatut.Caption = "Le logiciel est activ|fffd|."
    txtnom.Value = nom
    txtprenom.Value = prenom
    txtcode.Value = code
    txtnom.Enabled = False
    txtprenom.Enabled = False
    txtcode.Enabled = False
    cmdbuy.Enabled = False
    cmdok.Enabled = False
    cmdpaste.Enabled = False
       
Else
    labstatut.Caption = "Le logiciel n'est pas activ|fffd|."
    txtnom.Value = ""
    txtprenom.Value = ""
    txtcode.Value = ""
    txtnom.Enabled = True
    txtprenom.Enabled = True
    txtcode.Enabled = True
    cmdbuy.Enabled = True
    cmdok.Enabled = True
    cmdpaste.Enabled = True
    
End If

End Sub

Sub valider()
If txtnom.Value = "" Then
    MsgBox "Merci de saisir votre nom."
    txtnom.SetFocus
    Exit Sub
End If

If txtprenom.Value = "" Then
    MsgBox "Merci de saisir votre pr|fffd|nom."
    txtprenom.SetFocus
    Exit Sub
End If

If txtcode.Value = "" Then
    MsgBox "Merci de saisir la cl|fffd| d'activation."
    txtcode.SetFocus
    Exit Sub
End If

If iscodeok(txtnom.Value, txtprenom.Value, txtcode.Value) Then
    Range("activationdate") = Format(Now, "MM/DD/YYYY")
    Range("isactivated") = True
    Range("code") = txtcode.Value
    Range("nom") = txtnom.Value
    Range("prenom") = txtprenom.Value
    MsgBox ("Le logiciel est activ|fffd| !")
    txtnom.Enabled = False
    txtprenom.Enabled = False
    txtcode.Enabled = False
    cmdok.Enabled = False
    cmdpaste.Enabled = False
    cmdbuy.Enabled = False
Else
    MsgBox ("Les informations sont incorrectes.")
End If

End Sub


Attribute VB_Name = "frm_param"
Attribute VB_Base = "0{E7043E57-635C-4FC5-B6AB-3B37848ED758}{0F51CD89-8EC4-4643-9091-069E66CDA2B4}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Private Sub cmdclose_Click()
Unload Me
End Sub

Private Sub cmdsave_Click()
frm_save.Show

End Sub

Private Sub cmdvalidate_Click()
frm_activate.Show

End Sub
Attribute VB_Name = "frm_save"
Attribute VB_Base = "0{BB20F41B-86BC-450E-A57A-DF248C6B21ED}{43190AEC-BD36-48F0-95CE-4CAF254461A0}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Option Explicit

Private Sub cmdclose_Click()
If optsaveoui.Value Then
    If Range("dirsave") = "" Or Not DossierExiste(Range("dirsave")) Then
        Range("tosaveother") = False
    End If
End If

Unload Me
End Sub

Private Sub cmdselect_Click()
Dim dossier As String

With Application.FileDialog(msoFileDialogFolderPicker)
        .ButtonName = "S|fffd|lectionner"
        .Title = "S|fffd|lectionner un dossier"
        If .Show = -1 Then ' if OK is pressed
            dossier = .SelectedItems(1)
            labdir.Caption = dossier
            Range("dirsave") = dossier
        End If
End With
    
End Sub

Private Sub optsavenon_Click()
If optsavenon.Value Then
    cmdselect.Enabled = False
    labdir.Enabled = False
    Range("tosaveother") = False
End If

End Sub

Private Sub optsaveoui_Click()
If optsaveoui.Value Then
    cmdselect.Enabled = True
    labdir.Enabled = True
    Range("tosaveother") = True
End If

End Sub


Private Sub UserForm_Activate()
Dim dirsave As String
Dim tosave As Boolean
tosave = Range("tosaveother")

dirsave = Range("dirsave")
If dirsave = "" Then
    labdir.Caption = "Aucun chemin d|fffd|fini"
Else
    labdir.Caption = dirsave
End If

If tosave Then
    optsaveoui.Value = True
    optsavenon.Value = False
    labdir.Enabled = True
    If Not DossierExiste(dirsave) Then MsgBox "Le r|fffd|pertoire de sauvegarde n'existe pas ou n'est pas accessible."
Else
    optsaveoui.Value = False
    optsavenon.Value = True
    labdir.Enabled = False
End If

End Sub


Private Sub UserForm_Terminate()
If optsaveoui.Value Then
    If Range("dirsave") = "" Or Not DossierExiste(Range("dirsave")) Then
        Range("tosaveother") = False
    End If
End If
End Sub

Attribute VB_Name = "frmabout"
Attribute VB_Base = "0{49C63AC1-D73A-4FC1-B6CB-ED2AE176C3EF}{AB6DF233-7282-4CF5-8BE7-507EBC2F8DFA}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Private Sub btnok_Click()
frmabout.Hide

End Sub

Private Sub labelweb_Click()
On Error GoTo erreur

Sheets("param").Range("link").Hyperlinks(1).Follow

Exit Sub

erreur:
MsgBox ("le site n'est pas accessible.")
End Sub

Private Sub UserForm_Activate()
nom = Range("nom")
prenom = Range("prenom")

If isActivated Then
    labstatut.Caption = "La licence est attribu|fffd|e |fffd| " & prenom & " " & nom & "."
Else
    labstatut.Caption = "Le logiciel n'est pas activ|fffd|."

End If
End Sub

Private Sub UserForm_Click()

End Sub
Attribute VB_Name = "frmauto"
Attribute VB_Base = "0{D2C9DDE9-483F-4658-AFB7-256EBC620C51}{124B0B5D-E6F5-4557-BDC1-9C5BA5C49972}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Option Explicit

Private Sub btnclose_Click()
doauto = False

frmauto.Hide

End Sub

Private Sub btnok_Click()

doauto = True
showtraduc = optshowyes.Value

If Not IsNumeric(txtdelaimot.Text) Then
    MsgBox "Merci de saisir une dur|fffd|e en secondes (maximum 9)"
    Exit Sub
End If

delaimot = val(txtdelaimot.Text)

If delaimot > 9 Or delaimot < 1 Then
    MsgBox "Merci de saisir une dur|fffd|e inf|fffd|rieure ou |fffd|gale |fffd| 9 secondes et diff|fffd|rente de 0."
    Exit Sub
End If

If optsametime.Value Then
    delaitraduc = 0
Else
    If Not IsNumeric(txtdelaitraduc.Text) Then
        MsgBox "Merci de saisir une dur|fffd|e en secondes (maximum 9)"
        Exit Sub
    End If

    delaitraduc = val(txtdelaitraduc.Text)
    If delaitraduc > 9 Then
        MsgBox "Merci de saisir une dur|fffd|e inf|fffd|rieure ou |fffd|gale |fffd| 9 secondes."
    Exit Sub
End If
    
End If
frmauto.Hide

End Sub


Private Sub optafter_Click()
txtdelaitraduc.Enabled = optafter.Value

End Sub

Private Sub optsametime_Click()
txtdelaitraduc.Enabled = optafter.Value

End Sub

Private Sub optshowno_Click()

optsametime.Enabled = optshowyes.Value
optafter.Enabled = optshowyes.Value

End Sub

Private Sub optshowyes_Click()
optsametime.Enabled = optshowyes.Value
optafter.Enabled = optshowyes.Value


End Sub

Private Sub txtdelaimot_Exit(ByVal Cancel As MSForms.ReturnBoolean)
If val(txtdelaimot.Text) <= 0 Then txtdelaimot.Text = 1
End Sub

Private Sub txtdelaitraduc_Change()
If val(txtdelaitraduc.Text) <= 0 Then txtdelaitraduc.Text = 1

End Sub

Private Sub UserForm_Activate()
init
End Sub

Private Sub init()
txtdelaimot.Text = Range("delaimot")
txtdelaitraduc.Text = Range("delaitraduc")
optshowno.Value = True
optsametime.Value = True
End Sub
Attribute VB_Name = "frmcreliste"
Attribute VB_Base = "0{D523A7FF-B576-4186-84CF-D8862BB40E02}{B02407CB-F9D4-41AD-B305-10B86B9B4B3A}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Option Explicit

Private Sub btnclose_Click()
Unload Me

'frmliste.initformliste
End Sub

Private Sub btncreliste_Click()
If controler = "" Then
    nosheetevent = True
    If optnoempty.Value Then
        creliste ("alea")
    Else
        creliste ("manu")
    End If
    nosheetevent = False
    If groupelist = displayedgroupe Then
        dispgroupe (displayedgroupe)
    End If
End If
End Sub

Private Function controler() As String
Dim ret As String
Dim nomliste As String

ret = ""
nomliste = txtnomliste.Text

If optnoempty.Value And (txtnbmot.Text = "" Or nomliste = "") Then
    MsgBox "Merci de saisir un nom et un nombre de mots."
    ret = "X"
    GoTo suite
End If

If Not optnoempty.Value And nomliste = "" Then
    MsgBox "Merci de saisir un nom."
    ret = "X"
    GoTo suite

End If

If existliste(nomliste) Then
    MsgBox "Cette liste existe d|fffd|j|fffd|." & Chr(13) & "Merci de choisir un autre nom."
    ret = "X"
    GoTo suite

End If

If optnoempty.Value And Not IsNumeric(txtnbmot.Text) Then
    MsgBox "Merci de saisir un nombre de mots."
    ret = "X"
    GoTo suite
End If

suite:
controler = ret

End Function

Public Function existliste(nomliste As String) As Boolean
Dim ret As Boolean
Dim i As Integer
Dim nblistdb As Integer

nblistdb = Range("nblistdb")

If nblistdb = 0 Then
    ret = False
    GoTo suite:
End If

ret = False
For i = 1 To nblistdb + 1
    If Sheets("listesdb").Cells(i + 3, 3) = nomliste Then
        ret = True
        GoTo suite:
    End If
Next i

suite:
existliste = ret

End Function

Private Sub creliste(ltype As String)
Dim i As Integer
Dim j As Integer
Dim f As String
Dim nomliste As String
Dim nomgroupe As String
Dim groupecur As String
Dim groupenext As String
Dim liste As String
Dim doinsert As Boolean
Dim mot As String
Dim nbmot As Integer
Dim lig As Integer
Dim nblistdb As Integer

nbcell = Range("nbcell")
nblistdb = Range("nblistdb")
nomliste = txtnomliste.Value
nomgroupe = txtgroupe.Value

If ltype = "alea" Then nbmot = txtnbmot.Value

For j = 1 To nblistdb + 1
    liste = Sheets("listesdb").Cells(j + 2, 3)
    groupecur = Sheets("listesdb").Cells(j + 2, 2)
    groupenext = Sheets("listesdb").Cells(j + 3, 2)
    
    If groupecur = "Principal" Then GoTo suite
    If groupecur = nomgroupe And groupenext <> groupecur Then 'on est au dernier du groupe
        If liste = "" Then 'aucune liste en cours
            doinsert = False
            i = j + 2
        Else
            doinsert = True
            i = j + 3
        End If
        GoTo suite2
        
    End If
    
suite:
Next j

Exit Sub
suite2:

'insertion dans listesdb
If doinsert Then
    Sheets("listesdb").Visible = True
    Sheets("listesdb").Activate
    Sheets("listesdb").Cells(i, 1).Select
    Selection.EntireRow.Insert
End If

Sheets("listesdb").Cells(i, 2) = nomgroupe
Sheets("listesdb").Cells(i, 3) = nomliste

f = "=NBVAL(F" & i & ":BYC" & i & ")" 'quote pour les tirets
Sheets("listesdb").Cells(i, 4).FormulaLocal = f
Sheets("listesdb").Cells(i, 5) = Format(Now, "MM/DD/YYYY")
lig = i

If ltype = "alea" Then
    Randomize
    For i = 1 To nbmot
    
        j = Int(nbcell * Rnd + 1)
        mot = Sheets("Dictionnaire").Cells(j + 1, 1)
        
        Sheets("listesdb").Cells(lig, 5 + i) = mot
            
    Next i
End If
Sheets("listesdb").Visible = False
Sheets("Listes").Activate
frmliste.initformliste (nomgroupe)

MsgBox "La liste a |fffd|t|fffd| cr|fffd||fffd|e."

frmcreliste.Hide

End Sub

Private Sub optchange()
txtnbmot.Enabled = optnoempty.Value

If optnoempty.Value Then
    labnbmot.ForeColor = RGB(0, 0, 0)
Else
    labnbmot.ForeColor = RGB(180, 180, 180)
    
End If

End Sub

Private Sub optempty_Change()
optchange
End Sub

Private Sub UserForm_Activate()
initvar
End Sub

Private Sub initvar()

txtnomliste.Text = ""
txtnbmot.Text = ""
txtgroupe.Value = groupelist
txtnomliste.SetFocus
optempty.Value = True

End Sub

Attribute VB_Name = "frmdict"
Attribute VB_Base = "0{017BBB6E-DF24-4A40-A30C-99DDF9337F28}{F0C25250-11C6-41A9-A4BE-32736605EC3F}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Private Sub cmdclose_Click()
Unload Me
frmmenu.Hide

End Sub

Private Sub cmdgo_Click()
valider
End Sub

Private Sub valider()
Dim i As Integer
Dim icur As Integer
Dim trouve As Boolean

trouve = False

For i = 0 To ListBoxDict.ListCount - 1
    If ListBoxDict.Selected(i) Then
        trouve = True
        icur = i
        Exit For
    End If
Next

If Not trouve And txtmot.Text = "" Then
    MsgBox "Merci de saisir ou de s|fffd|lectionner un mot."
    Exit Sub
End If

If Not trouve Then
    If Not existmot(txtmot.Text) Then
        If MsgBox("Ce mot n'existe pas dans le dictionnaire. Souhaitez-vous le rajouter ?", vbYesNo) = vbYes Then
            motin = txtmot.Text
            actionmot = "add"
            fromdict = True
            frmsaisie.Show
        End If
    End If
Else
    motin = ListBoxDict.list(icur)
    actionmot = "upd"
    fromdict = True
    frmsaisie.Show
End If

End Sub

Private Sub cmdraz_Click()
txtmot.Value = ""
End Sub

Private Sub ListView_BeforeLabelEdit(Cancel As Integer)
Cancel = True
End Sub

Private Sub ListView_Click()
If ListView.SelectedItem Is Nothing Then
    cmdgo.Enabled = False

Else
    cmdgo.Enabled = True
End If
End Sub

Private Sub ListView_DblClick()
If ListView.SelectedItem Is Nothing Then Exit Sub

valider
End Sub

Private Sub ListView_KeyDown(KeyCode As Integer, ByVal Shift As Integer)
If KeyCode = vbKeyReturn Then
    If ListView.SelectedItem Is Nothing Then Exit Sub
    motin = ListView.SelectedItem
    actionmot = "upd"
    fromdict = True
    frmsaisie.Show
End If

End Sub



Private Sub ListBoxDict_DblClick(ByVal Cancel As MSForms.ReturnBoolean)
valider
End Sub

Private Sub ListBoxDict_KeyDown(ByVal KeyCode As MSForms.ReturnInteger, ByVal Shift As Integer)
Dim i As Integer
Dim trouve As Boolean

If KeyCode = vbKeyReturn Then

    trouve = False

    For i = 0 To ListBoxDict.ListCount - 1
        If ListBoxDict.Selected(i) Then
            trouve = True
            Exit For
        End If
    Next i

    If Not trouve Then Exit Sub


    motin = ListBoxDict.list(i)
    actionmot = "upd"
    fromdict = True
    frmsaisie.Show
End If
End Sub

Private Sub txtmot_Change()
updlist
End Sub

Private Function existmot(mot As String) As Boolean
Dim i As Integer
Dim nbtot As Integer
Dim found As Boolean
Dim ret As Boolean

nbtot = Range("nbcell")
found = False

For i = 1 To nbtot
    If mot = Sheets("Dictionnaire").Cells(i + 1, 1) Then
        found = True
        GoTo suite
    End If
Next i
suite:
ret = found
existmot = ret
End Function

Private Sub updlist()
Dim lval As String
Dim i As Integer
Dim j As Integer
Dim nbtot As Integer
Dim N As Integer
Dim mot As String
Dim dict1() As Variant
Dim dict2() As Variant

nbtot = Range("nbcell")
lval = txtmot.Value
ListBoxDict.Clear

If Len(lval) = 0 Then
    viewall = True
Else
    viewall = False
    
End If
N = 0

dict1 = Sheets("Dictionnaire").Range("A2:A" & nbtot + 1).Value

ReDim dict2(1 To nbtot)

For i = 1 To nbtot
    If InStr(1, dict1(i, 1), lval, 1) > 0 Or viewall Then
        N = N + 1
        dict2(N) = dict1(i, 1)
    End If
Next i
'For i = 1 To nbtot
'    mot = Sheets("Dictionnaire").Cells(i + 1, 1)
'    If InStr(1, mot, lval, 1) > 0 Or viewall Then
'        dict1(N) = mot
'        N = N + 1
'    End If
'Next i

If N = 0 Then Exit Sub
ReDim Preserve dict2(1 To N)

'For i = 0 To N - 1
'    dict2(i) = dict1(i)
'Next i

Call Tri(dict2, LBound(dict2), UBound(dict2))
ListBoxDict.list = dict2

End Sub

Private Sub txtmot_KeyDown(ByVal KeyCode As MSForms.ReturnInteger, ByVal Shift As Integer)
If KeyCode = vbKeyReturn Then
    If txtmot.Text = "" Then
        MsgBox "Merci de saisir un mot."
        Exit Sub
    End If

    If Not existmot(txtmot.Text) Then
        If MsgBox("Ce mot n'existe pas dans le dictionnaire. Souhaitez-vous le rajouter ?", vbYesNo) = vbYes Then
            motin = txtmot.Text
            actionmot = "add"
            fromdict = True
            frmsaisie.Show
        End If
    Else
        motin = txtmot.Text
        actionmot = "upd"
        fromdict = True
        frmsaisie.Show
        
    End If
End If
End Sub

Private Sub UserForm_Activate()

updlist
txtmot.SetFocus
End Sub


Attribute VB_Name = "frmgogroupe"
Attribute VB_Base = "0{43506700-C06F-4529-B571-6D3326E4B642}{B403CC4B-29F3-44E1-BB3D-EA996885642D}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Private Sub cmbgroupe_Change()
dispgroupe (cmbgroupe.Text)
Unload Me
End Sub

Private Sub UserForm_Activate()
initgroupe
loadgroupe
End Sub

Private Sub loadgroupe()
Dim i As Integer

cmbgroupe.Clear

For i = 1 To vnbgroupe
    cmbgroupe.AddItem vgroupe(i)
Next i

End Sub
Attribute VB_Name = "frmlearn"
Attribute VB_Base = "0{AD6A2828-C435-402A-866C-BC782B191963}{3DA174DF-271F-44E5-A6B2-C68C7F3B8B6E}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Option Explicit

Dim fromOther As Boolean
Dim fromOtherLetter As Boolean
Dim fromallNature As Boolean
Dim fromallLetters As Boolean

Private Sub btnclose_Click()
frmlearn.Hide
End Sub

Private Sub initvar()
Dim nb As Integer
Dim i  As Integer

chklettre(1) = chka.Value
chklettre(2) = chkb.Value
chklettre(3) = chkc.Value
chklettre(4) = chkd.Value
chklettre(5) = chke.Value
chklettre(6) = chkf.Value
chklettre(7) = chkg.Value
chklettre(8) = chkh.Value
chklettre(9) = chki.Value
chklettre(10) = chkj.Value
chklettre(11) = chkk.Value
chklettre(12) = chkl.Value
chklettre(13) = chkm.Value
chklettre(14) = chkn.Value
chklettre(15) = chko.Value
chklettre(16) = chkp.Value
chklettre(17) = chkq.Value
chklettre(18) = chkr.Value
chklettre(19) = chks.Value
chklettre(20) = chkt.Value
chklettre(21) = chku.Value
chklettre(22) = chkv.Value
chklettre(23) = chkw.Value
chklettre(24) = chkx.Value
chklettre(25) = chky.Value
chklettre(26) = chkz.Value

flaglettre = False
flagtype = False

nb = 0

'une lettre au moins est-elle coch|fffd|e ?
For i = 1 To 26
    If chklettre(i) Then
        nb = nb + 1
    End If
Next i

If nb = 0 Or nb = 26 Then
    flaglettre = False
Else
    flaglettre = True
End If

If Not chknolimit.Value Then
    nbtest = txtnbtest.Text
Else
    nbtest = Range("nbtest")
End If

alllettre = chkalllettre.Value
vchknom = chknom.Value
vchkverb = chkverb.Value
chkadj = chkadjectif.Value
vchkautre = chkautre.Value
alltype = chkallnature.Value
nolimit = chknolimit.Value

If chknom.Value Or chkverb.Value Or chkadjectif.Value Or chkautre.Value Then
    flagtype = True
End If

If Not chknom.Value And Not chkverb.Value And Not chkadjectif.Value And Not chkautre.Value Then
    flagtype = False
End If

End Sub


Private Sub btnrandom_Click()
Dim nb As Integer
Dim i As Integer
Randomize
nb = Int(Rnd * 26)

For i = 1 To 26
    If Int(Rnd * 2) = 1 Then
        chklettre(i) = True
    Else
        chklettre(i) = False
    End If
Next i
loadlettres
End Sub

Private Sub btnstart_Click()
If controler() = "" Then
    frmlearn.Hide
    If optdictio.Value Then
        sourcetest = "dictio"
    Else
        sourcetest = "liste"
        listetest = cmbliste.Text
    End If
    initvar
    frmtest.Show
End If
End Sub

Private Function controler()
Dim ret As String
ret = ""

If Not chknolimit.Value And Not IsNumeric(txtnbtest.Text) Then
    MsgBox "Saisissez un nombre de mots"
    ret = "X"
End If
controler = ret
End Function

Private Sub chka_Click()
chkallletters
End Sub

Private Sub chkadjectif_Click()
chkalltype
End Sub

Private Sub chkalllettre_Click()
Dim v As Boolean

If fromOtherLetter Then Exit Sub

fromallLetters = True

v = chkalllettre.Value

chka.Value = v
chkb.Value = v
chkc.Value = v
chkd.Value = v
chke.Value = v
chkf.Value = v
chkg.Value = v
chkh.Value = v
chki.Value = v
chkj.Value = v
chkk.Value = v
chkl.Value = v
chkm.Value = v
chkn.Value = v
chko.Value = v
chkp.Value = v
chkq.Value = v
chkr.Value = v
chks.Value = v
chkt.Value = v
chku.Value = v
chkv.Value = v
chkw.Value = v
chkx.Value = v
chky.Value = v
chkz.Value = v

fromallLetters = False

End Sub

Private Sub chkallnature_Click()

If fromOther Then Exit Sub

fromallNature = True

chknom.Value = chkallnature.Value
chkverb.Value = chkallnature.Value
chkadjectif.Value = chkallnature.Value
chkautre.Value = chkallnature.Value

fromallNature = False

End Sub

Private Sub chkautre_Click()
chkalltype
End Sub

Private Sub chkb_Click()
chkallletters
End Sub

Private Sub chkc_Click()
chkallletters
End Sub

Private Sub chkd_Click()
chkallletters
End Sub

Private Sub chke_Click()
chkallletters
End Sub

Private Sub chkf_Click()
chkallletters
End Sub

Private Sub chkg_Click()
chkallletters
End Sub

Private Sub chkh_Click()
chkallletters
End Sub

Private Sub chki_Click()
chkallletters
End Sub

Private Sub chkj_Click()
chkallletters
End Sub

Private Sub chkk_Click()
chkallletters
End Sub

Private Sub chkl_Click()
chkallletters
End Sub

Private Sub chkm_Click()
chkallletters
End Sub

Private Sub chkn_Click()
chkallletters
End Sub

Private Sub chknolimit_Click()
txtnbtest.Enabled = Not chknolimit.Value
End Sub

Private Sub chknom_Click()
chkalltype
End Sub

Private Sub chko_Click()
chkallletters
End Sub

Private Sub chkp_Click()
chkallletters
End Sub

Private Sub chkq_Click()
chkallletters
End Sub

Private Sub chkr_Click()
chkallletters
End Sub

Private Sub chks_Click()
chkallletters
End Sub

Private Sub chkt_Click()
chkallletters
End Sub

Private Sub chku_Click()
chkallletters
End Sub

Private Sub chkv_Click()
chkallletters
End Sub

Private Sub chkverb_Click()
chkalltype
End Sub

Private Sub chkalltype()

If fromallNature Then Exit Sub

fromOther = True

chkallnature.Value = chknom.Value And _
chkverb.Value And _
chkadjectif.Value And _
chkautre.Value

fromOther = False

End Sub

Private Sub chkallletters()
Dim a As Boolean
Dim b As Boolean

If fromallLetters Then Exit Sub

fromOtherLetter = True

a = chka.Value And _
chkb.Value And _
chkc.Value And _
chkd.Value And _
chke.Value And _
chkf.Value And _
chkg.Value And _
chkh.Value And _
chki.Value And _
chkj.Value And _
chkk.Value And _
chkl.Value

b = chkm.Value And _
chkn.Value And _
chko.Value And _
chkp.Value And _
chkq.Value And _
chkr.Value And _
chks.Value And _
chkt.Value And _
chku.Value And _
chkv.Value And _
chkw.Value And _
chkx.Value And _
chky.Value And _
chkz.Value

chkalllettre.Value = a And b

fromOtherLetter = False

End Sub

Private Sub chkw_Click()
chkallletters
End Sub

Private Sub chkx_Click()
chkallletters
End Sub

Private Sub chky_Click()
chkallletters
End Sub

Private Sub chkz_Click()
chkallletters
End Sub

Private Sub cmbliste_Click()
cmbliste.TextColumn = 2

End Sub

Private Sub optdictio_Change()
optchange

End Sub

Private Sub optchange()
optliste.Value = Not optdictio.Value
If optliste.Value Then
    cmbliste.Enabled = True
    frmletter.Enabled = False
    frmnature.Enabled = False
 
Else
    cmbliste.Enabled = False
    frmletter.Enabled = True
    frmnature.Enabled = True

End If

End Sub





Private Sub UserForm_Activate()
optdictio.Value = True
frmletter.Enabled = True
frmnature.Enabled = True
 
loadvar
loadlistes
End Sub

Private Sub loadlistes()
Dim i As Integer
Dim nblistdb As Integer
nblistdb = Range("nblistdb")

cmbliste.Clear
For i = 1 To nblistdb
    cmbliste.AddItem Sheets("listesdb").Cells(i + 2, 2)
    cmbliste.list(i - 1, 1) = Sheets("listesdb").Cells(i + 2, 3)

Next i
End Sub

Private Sub loadlettres()
chka.Value = chklettre(1)
chkb.Value = chklettre(2)
chkc.Value = chklettre(3)
chkd.Value = chklettre(4)
chke.Value = chklettre(5)
chkf.Value = chklettre(6)
chkg.Value = chklettre(7)
chkh.Value = chklettre(8)
chki.Value = chklettre(9)
chkj.Value = chklettre(10)
chkk.Value = chklettre(11)
chkl.Value = chklettre(12)
chkm.Value = chklettre(13)
chkn.Value = chklettre(14)
chko.Value = chklettre(15)
chkp.Value = chklettre(16)
chkq.Value = chklettre(17)
chkr.Value = chklettre(18)
chks.Value = chklettre(19)
chkt.Value = chklettre(20)
chku.Value = chklettre(21)
chkv.Value = chklettre(22)
chkw.Value = chklettre(23)
chkx.Value = chklettre(24)
chky.Value = chklettre(25)
chkz.Value = chklettre(26)

End Sub

Private Sub loadvar()
loadlettres

txtnbtest.Text = nbtest
chkalllettre.Value = alllettre
chknom.Value = vchknom
chkverb.Value = vchkverb
chkadjectif.Value = chkadj
chkautre.Value = vchkautre
chkallnature.Value = alltype


End Sub
Attribute VB_Name = "frmliste"
Attribute VB_Base = "0{591628BE-2E3B-40A5-AFDF-080E74BC41FB}{6539C3AF-B2DA-4746-8F82-3888AD7B5D98}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Option Explicit
Dim nbliste As Integer
Dim groupe(1000) As String

Private Sub btnclose_Click()
Unload Me

End Sub

Private Sub btndellist_Click()
Dim list As String
Dim choice As Variant

groupelist = listgroupe.Text
list = listlist.Text

choice = MsgBox("Confirmez-vous la suppression de la liste " & list & " ?", vbYesNo)
If choice = vbYes Then
    If nbgroup(listgroupe.Text) = 1 Then
        Call dellist("raz", list)
    Else
        Call dellist("full", list)
    
    End If
    
End If
initformliste (listgroupe.Text)
Sheets("Listes").Activate

If groupelist = displayedgroupe Then
    dispgroupe (displayedgroupe)
End If
    
End Sub

Public Function nbgroup(groupe As String) As Integer
Dim nblistdb As Integer
Dim newname As String
Dim i As Integer
Dim nb As Integer

nblistdb = Range("nblistdb")

nb = 0
For i = 1 To nblistdb + 1
    If Sheets("listesdb").Cells(i + 2, 2) = groupe Then nb = nb + 1
Next i

nbgroup = nb
End Function

Public Sub dellist(how As String, liste As String)
'how=full supprime ligne, how=raz met |fffd| z|fffd|ro
Dim i As Integer
Dim nblistdb As Integer

'On Error Resume Next

nblistdb = Range("nblistdb")

Application.DisplayAlerts = False

For i = 1 To nblistdb + 1
    If Sheets("listesdb").Cells(i + 2, 2) = "Principal" Then GoTo suite
    
    If Sheets("listesdb").Cells(i + 2, 3) = liste Then
    Sheets("listesdb").Visible = True
        If how = "full" Then
            
            Sheets("listesdb").Activate
            Sheets("listesdb").Cells(i + 2, 3).Select
            Selection.EntireRow.Delete
        Else
            With Sheets("listesdb")
                .Cells(i + 2, 3).ClearContents
                .Cells(i + 2, 4).ClearContents
                .Cells(i + 2, 5).ClearContents
                .Cells(i + 2, 6).ClearContents
            End With
            Sheets("listesdb").Range("F" & i + 2 & ":BYC" & i + 2).ClearContents
        End If
    Sheets("listesdb").Visible = False
    End If
suite:
Next i
fin:
Application.DisplayAlerts = True

End Sub

Private Sub btnnewlist_Click()
groupelist = listgroupe.Text

frmcreliste.Show

End Sub

Private Sub btnrename_Click()
Dim newlist As String
Dim oldlist As String
oldlist = listlist.Text
groupelist = listgroupe.Text

newlist = InputBox("Saisissez le nouveau nom de la liste souhait|fffd|e:", , oldlist)

If newlist = "" Then Exit Sub
    
If Not existlist(newlist) Then
    Call renamelist(oldlist, newlist)
    initformliste (listgroupe.Text)
    Sheets("Listes").Activate
    
    If groupelist = displayedgroupe Then
        dispgroupe (displayedgroupe)
    End If

    MsgBox "La liste a |fffd|t|fffd| renomm|fffd|e."
    
Else
    MsgBox "Cette liste existe d|fffd|j|fffd|. Merci de choisir un autre nom ou de renommer celle existante."
End If


End Sub

Private Sub renamelist(oldliste As String, newliste As String)
Dim i As Integer
Dim found As Boolean
Dim nblistdb As Integer

found = False
nblistdb = Range("nblistdb")

For i = 1 To nblistdb + 1

    If Sheets("listesdb").Cells(i + 2, 3) = oldliste Then
        Sheets("listesdb").Cells(i + 2, 3) = newliste
        
        found = True
        Exit For
    End If
Next i

If Not found Then
    MsgBox ("Liste non trouv|fffd|e.")
    Exit Sub
End If

Sheets("Listes").Activate

End Sub

Private Sub btnstart_Click()
If controler() = "" Then
    sourcetest = "liste"
    listetest = "Liste-" & listlist.Text
    nolimit = chknolimit.Value
    If Not nolimit Then
        nbtest = txtnbmots.Text
    Else
        nbtest = Range("nbtest")
    End If

    frmliste.Hide

    frmtest.Show
End If
End Sub

Private Function controler() As String
Dim ret As String
Dim nomliste As String

ret = ""
If Not chknolimit.Value And Not IsNumeric(txtnbmots.Text) Then
    MsgBox "Merci de saisir un nombre de mots."
    ret = "X"
    GoTo suite
End If

suite:
controler = ret

End Function

Private Sub btnupdlist_Click()
Dim nomliste As String
frmliste.Hide

nomliste = "Liste-" & listlist.Text
If Len(nomliste) > 31 Then nomliste = Left$(nomliste, 31)

Sheets(nomliste).Visible = True
Sheets(nomliste).Activate

End Sub

Private Sub chknolimit_Click()
txtnbmots.Enabled = Not chknolimit.Value
End Sub


Private Sub cmdclose_Click()
Unload Me
End Sub

Private Sub cmddelgrp_Click()
Dim oldgrp As String
oldgrp = listgroupe.Text
If MsgBox("La suppression du groupe entra|fffd|nera la suppression des listes associ|fffd|es. Confirmez-vous ?", vbYesNo) = vbYes Then
    delgrp (listgroupe.Text)
End If

Sheets("Listes").Activate

If oldgrp = displayedgroupe Then
    dispgroupe (groupe(1))
End If

initgroup

End Sub

Public Sub delgrp(group As String)
Dim nblistdb As Integer
Dim ret As Boolean
Dim i As Integer
Dim liste As String

nblistdb = Range("nblistdb")

For i = 1 To nblistdb + 1
    If Sheets("listesdb").Cells(i + 2, 2) = group Then
        liste = Sheets("listesdb").Cells(i + 2, 3)
        Call dellist("full", liste) 'on supprime tout le groupe
        i = i - 1
    End If
Next i


End Sub

Private Sub cmdnewgrp_Click()
Dim newgrp As String

newgrp = InputBox("Saisissez le nom du groupe souhait|fffd|:")

If newgrp = "" Then Exit Sub
    
If Not existgroup(newgrp) Then
    addgroup (newgrp)
    initgroup
    MsgBox "Le groupe a |fffd|t|fffd| cr|fffd||fffd|."
    
Else
    MsgBox "Ce groupe existe d|fffd|j|fffd|. Merci de choisir un autre nom ou de renommer celui existant."
End If

End Sub

Public Function existgroup(group As String) As Boolean
Dim nblistdb As Integer
Dim ret As Boolean
Dim i As Integer

nblistdb = Range("nblistdb")

If nblistdb = 0 Then
    ret = False
    GoTo fin
End If

For i = 1 To nblistdb + 1
    If Sheets("listesdb").Cells(i + 2, 2) = group Then
        ret = True
        Exit For
    End If
Next i

fin:
existgroup = ret

End Function

Public Function existlist(list As String) As Boolean
Dim nblistdb As Integer
Dim ret As Boolean
Dim i As Integer

nblistdb = Range("nblistdb")

If nblistdb = 0 Then
    ret = False
    GoTo fin
End If

For i = 1 To nblistdb + 1
    If Sheets("listesdb").Cells(i + 2, 3) = list Then
        ret = True
        Exit For
    End If
Next i

fin:
existlist = ret

End Function

Public Sub renamegroup(oldgrp As String, newgrp As String)
Dim i As Integer
Dim nblistdb As Integer
Dim lig As Integer

nblistdb = Range("nblistdb")

For i = 1 To nblistdb + 1
    If Sheets("listesdb").Cells(i + 2, 2) = "Principal" Then GoTo suite:
    If Sheets("listesdb").Cells(i + 2, 2) = oldgrp Then
            Sheets("listesdb").Cells(i + 2, 2) = newgrp
    End If
suite:
Next i

End Sub

Public Sub addgroup(group As String)
Dim nblistdb As Integer
Dim lig As Integer

nblistdb = Range("nblistdb")
lig = nblistdb + 1

Sheets("listesdb").Cells(lig + 2, 2) = group

End Sub

Private Sub cmdrenamegrp_Click()
Dim newgrp As String
Dim oldgrp As String
oldgrp = listgroupe.Text

newgrp = InputBox("Saisissez le nouveau nom du groupe souhait|fffd|:", , oldgrp)

If newgrp = "" Then Exit Sub
    
If Not existgroup(newgrp) Then
    Call renamegroup(oldgrp, newgrp)
    initformgroupe
    
    If oldgrp = displayedgroupe Then 'on rafraichit
        dispgroupe (newgrp)
    End If
    
    MsgBox "Le groupe a |fffd|t|fffd| renomm|fffd|."
    
Else
    MsgBox "Ce groupe existe d|fffd|j|fffd|. Merci de choisir un autre nom ou de renommer celui existant."
End If

End Sub


Private Sub listgroupe_Change()
On Error GoTo erreur:
If listgroupe.Text = "Principal" Then
    cmdrenamegrp.Enabled = False
    cmddelgrp.Enabled = False
    btnnewlist.Enabled = False
Else
    cmdrenamegrp.Enabled = True
    cmddelgrp.Enabled = True
    btnnewlist.Enabled = True
End If

initformliste (listgroupe.Text)

Exit Sub
erreur:

End Sub

Private Sub listgroupe_MouseUp(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
On Error GoTo erreur:
If listgroupe.Text = "Principal" Then
    cmdrenamegrp.Enabled = False
    cmddelgrp.Enabled = False
    btnnewlist.Enabled = False

Else
    cmdrenamegrp.Enabled = True
    cmddelgrp.Enabled = True
    btnnewlist.Enabled = True
End If
Exit Sub
erreur:
End Sub

Private Sub UserForm_Activate()
displayedgroupe = Range("displayedgroupe")
initgroup

End Sub

Private Sub initgroup()
initformgroupe
initformliste (groupe(1))
cmdrenamegrp.Enabled = False
cmddelgrp.Enabled = False
btnnewlist.Enabled = False

End Sub

Public Sub initformgroupe()
Dim nblistdb As Integer
Dim i As Integer
Dim groupecur As String
Dim groupeprev As String
Dim nb As Integer
listgroupe.Clear

nblistdb = Range("nblistdb")

If nblistdb = 0 Then Exit Sub

groupeprev = ""

For i = 1 To nblistdb + 1
    groupecur = Sheets("listesdb").Cells(i + 2, 2)
    
    If groupecur <> groupeprev Then
        nb = nb + 1
        groupe(i) = groupecur
        listgroupe.AddItem groupe(i)
    End If
    
    groupeprev = groupecur
Next i
listgroupe.ListIndex = 0

End Sub

Public Sub initformliste(groupe As String)
Dim nblist As Integer
Dim i As Integer
Dim nb As Integer
Dim liste As String

listlist.Clear
listlist.ColumnCount = 2
listlist.ColumnWidths = "150 pt"

If groupe = "" Then Exit Sub

nblist = Range("nblistdb")
listlist.Clear

If nblist = 0 Then GoTo suite:

For i = 1 To nblist + 1
    liste = Sheets("listesdb").Cells(i + 2, 3)

    If Sheets("listesdb").Cells(i + 2, 2) = groupe And liste <> "" Then
        nb = nb + 1
        listlist.AddItem liste
        listlist.list(nb - 1, 1) = Sheets("listesdb").Cells(i + 2, 4)
    End If
Next i

If nb > 0 Then listlist.ListIndex = 0

suite:

If nb = 0 Then
    'btnupdlist.Enabled = False
    btndellist.Enabled = False
    btnrename.Enabled = False

Else
    'btnupdlist.Enabled = True
    btndellist.Enabled = True
    btnrename.Enabled = True
End If

End Sub
Attribute VB_Name = "frmmenu"
Attribute VB_Base = "0{F5DEDD44-7994-4FB1-90F2-A0984BCA65D7}{9A3AF563-B82E-486F-89B2-DF28A918702F}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Private Sub cmdclose_Click()
Unload Me
End Sub

Private Sub cmddict_Click()
frmdict.Show
End Sub

Private Sub cmdhome_Click()
Sheets("Accueil").Activate
Unload Me
End Sub

Private Sub cmdlearn_Click()
If Not isActivated And isExpired Then
    MsgBox "Vous avez atteint la limite d'utilisation du logiciel (10 jours)."
    MsgBox "Pour continuer |fffd| utiliser le logiciel il est n|fffd|cessaire d'acqu|fffd|rir une cl|fffd| d'activation."
    Sheets("Accueil").Select
    frm_activate.Show
    Exit Sub
End If

showlearn
Unload Me
End Sub

Private Sub cmdliste_Click()
showlistes
Unload Me
End Sub

Private Sub cmdparam_Click()
frm_param.Show

End Sub

Private Sub UserForm_Activate()
cmdhome.SetFocus

End Sub


Attribute VB_Name = "frmsaisie"
Attribute VB_Base = "0{365F88F3-4D82-45E8-9F7B-F2F69C429BA9}{56630AE1-1FE3-42BF-A6D6-4FB3461D6E2A}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Option Explicit

Dim ligdict As Integer

Private Sub btnclear_Click()
txtmotin.Text = ""
clearform
txtmotin.SetFocus

End Sub

Private Sub btnclose_Click()
listesaisie = ""
quitter

End Sub

Private Sub quitter()

frmsaisie.Hide
'sortdata

End Sub

Private Sub btndelete_Click()
Dim vbchoice As Variant
Dim feuille As String

If txtmotin.Text <> "" Then

    vbchoice = MsgBox("Confirmez-vous la suppression du mot " & txtmotin.Text & " du dictionnaire ?", vbYesNo)

    If vbchoice <> vbYes Then Exit Sub

    txtmotin.Text = ""
    clearform
End If

If fromdict Then
    feuille = ActiveSheet.Name
    Sheets("Dictionnaire").Visible = True
    Sheets("Dictionnaire").Activate
    Sheets("Dictionnaire").Cells(ligdict, 1).Select
    ActiveCell.EntireRow.Delete
    Sheets("Dictionnaire").Visible = False
    Sheets(feuille).Activate
    txtnbcell = Range("nbcell")
    txtmotin.SetFocus
    
    
End If

End Sub

Private Sub btnnext_Click()
If controler = "" Then
    sauver
    motin = ""
    init
End If
End Sub


Private Sub btnsave_Click()

If (txtmotin.Text = "" And txttraduction.Text = "") Then
    ThisWorkbook.Save
    MsgBox "Sauvegarde effectu|fffd|e."
Else
    If controler = "" Then
        sauver
        ThisWorkbook.Save
        MsgBox "Sauvegarde effectu|fffd|e."
        txtmotin.SetFocus
    End If
End If



End Sub

Private Sub cmdclose_Click()
Unload Me
Unload frmdict
Unload frmmenu
End Sub

Private Sub txtmotin_Exit(ByVal Cancel As MSForms.ReturnBoolean)
chkexist (txtmotin.Text)
End Sub

Private Sub txtmotin_KeyDown(ByVal KeyCode As MSForms.ReturnInteger, ByVal Shift As Integer)
If KeyCode = vbKeyEscape Then
    quitter
End If
If KeyCode = vbKeyReturn Then
    chkexist (txtmotin.Text)
End If

End Sub

Private Sub txttraduction_Change()

End Sub

Private Sub txttraduction_KeyDown(ByVal KeyCode As MSForms.ReturnInteger, ByVal Shift As Integer)
If KeyCode = vbKeyEscape Then
    Unload Me
End If

End Sub

Private Sub UserForm_Activate()
init
End Sub

Private Sub init()

txtmotin.Text = motin
txttraduction.Text = ""
txtmnemo.Text = ""
chkverb.Value = False
chknom.Value = True
chkadjectif.Value = False
chkautre.Value = False

nbcell = Range("nbcell")
txtnbcell.Text = nbcell

If motin = "" Then
    txtmotin.SetFocus
    
Else
    If chkexist(txtmotin.Text) Then
        txttraduction.SetFocus
        txttraduction.SelStart = Len(txttraduction.Value)
    Else
        txttraduction.SetFocus
    
    End If
    
End If

End Sub

Private Function chkexist(mot As String) As Boolean
Dim i As Integer
Dim found As Boolean
Dim tabdict() As Variant
Dim nbmot As Integer
nbmot = Range("nbcell")

tabdict = Sheets("Dictionnaire").Range("A2:H" & nbmot + 1).Value

found = False
For i = 1 To nbmot
    If tabdict(i, 1) = txtmotin Then
    txttraduction.Text = tabdict(i, 2)
    txttraduction.SelStart = Len(txttraduction.Text)
        
        txtmnemo.Text = tabdict(i, 3)
        chkverb.Value = tabdict(i, 4)
        chknom.Value = tabdict(i, 5)
        chkadjectif.Value = tabdict(i, 6)
        chkautre.Value = tabdict(i, 7)
        found = True
        ligdict = tabdict(i, 8)
        Exit For
    End If
Next i
'For i = 2 To Range("nbcell") + 1
'    If Sheets("Dictionnaire").Cells(i, 1) = txtmotin.Text Then
'        txttraduction.Text = Sheets("Dictionnaire").Cells(i, 2)
'        txttraduction.SelStart = Len(txttraduction.Text)
        
'        txtmnemo.Text = Sheets("Dictionnaire").Cells(i, 3)
'        chkverb.Value = Sheets("Dictionnaire").Cells(i, 4)
'        chknom.Value = Sheets("Dictionnaire").Cells(i, 5)
'        chkadjectif.Value = Sheets("Dictionnaire").Cells(i, 6)
'        chkautre.Value = Sheets("Dictionnaire").Cells(i, 7)
'        found = True
'        ligdict = i
'        Exit For
'    End If
'Next i

chkexist = found

End Function

Private Sub clearform()

txttraduction.Text = ""
txtmnemo.Text = ""
chkverb.Value = False
chknom.Value = True
chkadjectif.Value = False
chkautre.Value = False

End Sub

Private Sub sauver()
Dim lastid As Integer
Dim nbcell2 As Integer
Dim i As Integer
Dim j As Integer
Dim lig As Integer
Dim nblistdb As Integer
Dim p As String

nblistdb = Range("nblistdb")
nbcell = Range("nbcell")

If fromdict Then 'mot saisi depuis frmdict
    If actionmot = "add" Then
        i = nbcell + 2 'c'est un mot cr|fffd||fffd|
    Else
        i = ligdict 'c'est un mot existant dans le dictionnaire
    End If
Else
    nbcell = nbcell + 1
    i = nbcell + 1
End If

Sheets("Dictionnaire").Cells(i, 1) = txtmotin.Text
Sheets("Dictionnaire").Cells(i, 2) = txttraduction.Text
Sheets("Dictionnaire").Cells(i, 3) = txtmnemo.Text
Sheets("Dictionnaire").Cells(i, 4) = chkverb.Value
Sheets("Dictionnaire").Cells(i, 5) = chknom.Value
Sheets("Dictionnaire").Cells(i, 6) = chkadjectif.Value
Sheets("Dictionnaire").Cells(i, 7) = chkautre.Value
Sheets("Dictionnaire").Cells(i, 8).FormulaLocal = "=LIGNE()"

txtnbcell.Text = nbcell

'si on met |fffd| jour une liste
If Not fromdict Then

    'le mot a-t-il d|fffd|j|fffd| |fffd|t|fffd| saisi ?
    For j = 1 To 2500
        If Sheets(listevoca).Cells(j, 1) = "" Then
            lig = j
            Exit For
        End If
        
        If Sheets(listevoca).Cells(j, 1) = txtmotin.Text Then
            Exit Sub
        End If
           
    Next j
            
    Sheets(listevoca).Cells(lig, 1) = txtmotin.Text
    
End If

End Sub

Private Function controler() As String
Dim a As String
a = ""
If (txtmotin.Text = "" Or txttraduction.Text = "") Then
    MsgBox "Merci de saisir un mot et une traduction."
    a = "X"
End If
controler = a
End Function

Private Sub UserForm_Terminate()
listesaisie = ""
End Sub
Attribute VB_Name = "frmtest"
Attribute VB_Base = "0{ABBA77BA-CF9D-4F14-B249-4E8E89D5CA23}{52A742B0-F281-4998-9500-145BB77FF8DB}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Option Explicit

Dim nbcur As Integer
Dim traduction As String
Dim mnemo As String
Dim nbgood As Integer
Dim libelnb As String
Dim outloop As Boolean
Dim nextTriggerTime As Date

Private Sub enablebtn(val As Boolean)
btnknow.Enabled = val
btnseeresult.Enabled = val
If Not showtraduc Then
    btndontknow.Enabled = True
Else
    btndontknow.Enabled = val
End If
btnback.Enabled = val
btnclose.Enabled = val
btnreinit.Enabled = val

End Sub

Private Sub btnauto_Click()
If btnauto.Caption = "Arr|fffd|ter le d|fffd|filement" Then
    btnauto.Caption = "D|fffd|filement automatique"
    btnauto.Width = 72
    enablebtn (True)
    outloop = True
    processauto
    
Else
    
    frmauto.Show

    If doauto Then
        outloop = False
        enablebtn (False)
        btnauto.Caption = "Arr|fffd|ter le d|fffd|filement"
        btnauto.Width = 72
        processauto
    End If
    doauto = False
End If

End Sub

Private Sub btnback_Click()
frmtest.Hide
frmlearn.Show
End Sub

Private Sub btnclose_Click()
frmtest.Hide

End Sub

Private Sub btndontknow_Click()

If Not outloop Then
    txttraduction.Text = traduction
    txtmnemo.Text = mnemo
    Exit Sub
End If

If Not nolimit Then
    If nbcur = nbtest Then
        txttraduction.Text = traduction
        txtmnemo.Text = mnemo
        
        loadresult
        initfrmtest
        Exit Sub
    End If
End If
 
If btndontknow.Caption = "suivant" Then
    If sourcetest = "dictio" Then
        loadrecorddict
    Else
        loadrecordliste (listetest)
    End If

    btndontknow.Caption = "je ne sais pas"
    btnknow.Enabled = True
   
Else
    txttraduction.Text = traduction
    txtmnemo.Text = mnemo
    btndontknow.Caption = "suivant"
    btnknow.Enabled = False
    nbcur = nbcur + 1

End If

End Sub

Private Sub btnknow_Click()

btndontknow.Caption = "je ne sais pas"
nbgood = nbgood + 1
If Not nolimit Then
    If nbcur = nbtest Then
        loadresult
        initfrmtest
        Exit Sub
    End If
End If
nbcur = nbcur + 1
If sourcetest = "dictio" Then
    loadrecorddict
Else
    loadrecordliste (listetest)
End If

End Sub

Private Sub loadresult()
On Error Resume Next
MsgBox nbgood & " r|fffd|sultats justes sur " & nbcur & "." & Chr(13) & Chr(13) & Int((nbgood / nbcur) * 100) & "% de r|fffd|ussite."

End Sub

Private Sub btnsee_Click()
txttraduction.Text = traduction
End Sub

Private Sub btnreinit_Click()
initfrmtest
End Sub

Private Sub btnseeresult_Click()
Dim flag As Boolean
flag = False

If nbcur > 0 Then
    nbcur = nbcur - 1
    flag = True
End If

loadresult

If flag Then nbcur = nbcur + 1

End Sub

Private Sub processauto()
Dim t0 As Date
Dim t As Date
Dim i As Integer
On Error Resume Next
If outloop Then
    
    Application.OnTime nextTriggerTime, "Module1.OnTimer", Schedule:=False
    Application.OnTime nextTriggerTime, "Module1.OnTimer2", Schedule:=False
    
    Exit Sub
End If

libelnb = ""

nbcur = nbcur + 1

i = i + 1

If sourcetest = "dictio" Then
    loadrecorddict
Else
    loadrecordliste (listetest)
End If

If showtraduc Then

    Application.OnTime nextTriggerTime, "Module1.OnTimer", Schedule:=False
    ScheduleNextTrigger2

Else
    ScheduleNextTrigger

End If

End Sub

Public Sub OnTimer()
    ''//... Trigger whatever task you want here
   
    processauto
    ''//Then schedule it to run again
    'ScheduleNextTrigger
End Sub

Public Sub OnTimer2()
    ''//... Trigger whatever task you want here
   
    txttraduction.Text = traduction
    txtmnemo.Text = mnemo

    ''//Then schedule it to run again
    ScheduleNextTrigger
End Sub


Private Sub ScheduleNextTrigger()
Dim delai As String
delai = delaimot
    nextTriggerTime = Now + TimeValue("00:00:0" & delai)
    Application.OnTime nextTriggerTime, "Module1.OnTimer"
End Sub


Private Sub ScheduleNextTrigger2()
Dim delai As String
delai = delaitraduc
    nextTriggerTime = Now + TimeValue("00:00:0" & delai)
    Application.OnTime nextTriggerTime, "Module1.OnTimer2"
End Sub

Private Sub UserForm_Activate()
initfrmtest
End Sub

Private Sub initfrmtest()
nbcur = 0
nbgood = 0
outloop = True
btnauto.Caption = "D|fffd|filement automatique"
btnauto.Width = 72

Randomize
btnknow.Enabled = True
btnknow.Caption = "je sais"
btndontknow.Caption = "je ne sais pas"
nbcur = nbcur + 1
If Not nolimit Then
    libelnb = "/" & nbtest
Else
    libelnb = ""
End If
If sourcetest = "dictio" Then
    txtorigine.Value = "Dictionnaire"
    loadrecorddict
Else
    txtorigine.Value = listetest
    loadrecordliste (listetest)
End If

End Sub

Private Sub loadrecordliste(liste As String)
Dim i As Integer
Dim j As Integer
Dim nblistdb As Integer
Dim num As Integer
Dim mot As String
Dim found As Boolean
Dim lig As Integer

nblistdb = Range("nblistdb")

For i = 1 To nblistdb + 1
    If Sheets("listesdb").Cells(i + 2, 3) = liste Then
        nbcell = Sheets("listesdb").Cells(i + 2, 4)
        lig = i + 2
        GoTo suite
    End If
Next i

Exit Sub
suite:

txtnb.Text = nbcur & libelnb

choice:
Randomize
i = Int(nbcell * Rnd)

If i = 0 Then i = 1
mot = Sheets("listesdb").Cells(lig, i + 5)
found = False

For j = 1 To Range("nbcell")
    If mot = Sheets("Dictionnaire").Cells(j + 1, 1) Then
        traduction = Sheets("Dictionnaire").Cells(j + 1, 2)
        mnemo = Sheets("Dictionnaire").Cells(j + 1, 3)
        found = True
        Exit For
    End If
Next j

If Not found Then
    traduction = "Traduction non trouv|fffd|e dans le dictionnaire."
    mnemo = ""

End If

txtmot.Text = mot
txttraduction.Text = ""
txtmnemo.Text = ""
End Sub

Private Sub loadrecorddict()
Dim i As Integer
Dim num As Integer
Dim mot As String
Dim isverb As Boolean
Dim isnom As Boolean
Dim isadjectif As Boolean
Dim isautre As Boolean
Dim ff As Integer

nbcell = Range("nbcell")

txtnb.Text = nbcur & libelnb

num = 0

choice:
Randomize
i = Int(nbcell * Rnd + 1)
mot = Sheets("Dictionnaire").Cells(i + 1, 1)
isverb = Sheets("Dictionnaire").Cells(i + 1, 4)
isnom = Sheets("Dictionnaire").Cells(i + 1, 5)
isadjectif = Sheets("Dictionnaire").Cells(i + 1, 6)
isautre = Sheets("Dictionnaire").Cells(i + 1, 7)

If flaglettre Or flagtype Then
    num = num + 1
    If Not checkmot(mot, flaglettre, flagtype, isverb, isnom, isadjectif, isautre) And num < 5000 Then
        GoTo choice:
    End If
End If

If num >= 5000 Then
    txtmot.Text = "Pas de mot trouv|fffd| avec ces crit|fffd|res"
    
    Exit Sub
End If

traduction = Sheets("Dictionnaire").Cells(i + 1, 2)
mnemo = Sheets("Dictionnaire").Cells(i + 1, 3)

txtmot.Text = mot
txttraduction.Text = ""
txtmnemo.Text = ""
End Sub

Private Function checkmot(mot As String, flaglettre As Boolean, flagtype As Boolean, isverb As Boolean, isnom As Boolean, isadjectif As Boolean, isautre As Boolean) As Boolean
Dim ret As Boolean
Dim ret2 As Boolean
Dim i As Integer

ret = False
ret2 = False
If flaglettre Then

    'test des lettres
    For i = 1 To 26

        If Not chklettre(i) Then GoTo suite
        If Left$(mot, 1) = Left$(lettre(i), 1) Or _
           Left$(mot, 1) = Right$(lettre(i), 1) Or _
           (vchkverb And isverb And Mid$(mot, 4, 1) = Left$(lettre(i), 1)) Or _
           (vchkverb And isverb And Mid$(mot, 4, 1) = Right$(lettre(i), 1)) Then
            ret = True
            Exit For
        End If
suite:
Next i
Else
    ret = True
End If
 
If flagtype Then
    ret2 = (vchkverb And isverb) Or _
           (vchknom And isnom) Or _
           (vchkautre And isautre) Or _
           (chkadj And isadjectif)
Else
    ret2 = True
End If
    
checkmot = ret And ret2
End Function

Private Sub UserForm_Terminate()
On Error Resume Next
    
Application.OnTime nextTriggerTime, "Module1.OnTimer", Schedule:=False
Application.OnTime nextTriggerTime, "Module1.OnTimer2", Schedule:=False

End Sub
Attribute VB_Name = "frmvoca"
Attribute VB_Base = "0{68D56B15-2E54-432F-A83E-529B1FB97855}{1A74BDF9-FFA8-4A7A-9B0E-7C2E6BA38C0A}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Option Explicit

Private Sub cmdclose_Click()
razvoca
Sheets("Listes").Activate
Unload Me

End Sub

Private Sub cmdsave_Click()
savemots (vliste)
razvoca
Sheets("Listes").Activate
Unload Me

End Sub

Private Sub UserForm_Activate()
labliste.Caption = vliste
End Sub

Private Sub savemots(liste As String)
Dim nblistdb As Integer
Dim i As Integer
Dim nb As Integer
Dim o As Integer
nblistdb = Range("nblistdb")

For o = 1 To 2000
    If Sheets(listevoca).Cells(o, 1) = "" Then Exit For
Next o
nb = o

For i = 1 To nblistdb + 1
    If Sheets("listesdb").Cells(i + 2, 3) = liste Then
        Sheets("listesdb").Range("F" & i + 2 & ":BYC" & i + 2).ClearContents
        For o = 1 To nb
            Sheets("listesdb").Cells(i + 2, 5 + o) = Sheets(listevoca).Cells(o, 1)
        Next o
    End If
Next i

End Sub


INQUEST-PP=macro
