Attribute VB_Name = "A_GeneralFunctions"
Public Sub PrepareRateSheet()

'
' 30/01/2014    Initial Version (3.00)
' Author        Alex McLaren (Alex.Mclaren@dhl.com)
'
' -----------------------------------------------------------------------------
' Individual procedure description:
' -----------------------------------------------------------------------------
' Description:      This procedure prepare and unhide the Rate sheet
'

If Sheet2.Range("R:R").EntireColumn.Hidden = True Then

Sheet2.Activate
Cells.Select
Selection.EntireColumn.Hidden = False
Selection.EntireRow.Hidden = False
Sheet2.Range("ORGDEST_DDOWN").Select

Else

Sheet2.Activate
Sheet2.Range("R:R").Select
Range(Selection, Selection.End(xlToRight)).Select
Selection.EntireColumn.Hidden = True
Sheet2.Range("A56").EntireRow.Select
Range(Selection, Selection.End(xlDown)).Select
Selection.EntireRow.Hidden = True
Sheet2.Range("ORGDEST_DDOWN").Select

End If

End Sub

Public Sub PreparePrintSheet()


'
' 30/01/2014    Initial Version (3.00)
' Author        Alex McLaren (Alex.Mclaren@dhl.com)
'
' -----------------------------------------------------------------------------
' Individual procedure description:
' -----------------------------------------------------------------------------
' Description:      This procedure will hide & unhide rows on the rate calc sheet
'

If Sheet6.Range("N:N").EntireColumn.Hidden = True Then

Sheet6.Activate
Cells.Select
Selection.EntireColumn.Hidden = False
Selection.EntireRow.Hidden = False
Sheet6.Range("PRINT_REF").Select

Else

Sheet6.Activate
Sheet6.Range("N:N").Select
Range(Selection, Selection.End(xlToRight)).Select
Selection.EntireColumn.Hidden = True
Sheet6.Range("A58").EntireRow.Select
Range(Selection, Selection.End(xlDown)).Select
Selection.EntireRow.Hidden = True
Sheet6.Range("PRINT_REF").Select

End If

End Sub

Public Sub PrepareROESheet()

'
' 30/01/2014    Initial Version (3.00)
' Author        Alex McLaren (Alex.Mclaren@dhl.com)
'
' -----------------------------------------------------------------------------
' Individual procedure description:
' -----------------------------------------------------------------------------
' Description:      This procedure Unhides or Hides relevant columns within the AFR ROE page
'

If Sheet1.Range("N:N").EntireColumn.Hidden = True Then

Sheet1.Activate
Cells.Select
Selection.EntireColumn.Hidden = False
Selection.EntireRow.Hidden = False
Sheet1.Range("D10").Select

Else

Sheet1.Activate
Sheet1.Range("J:XFD").EntireColumn.Select
Selection.EntireColumn.Hidden = True
Sheet1.Range("A72").EntireRow.Select
Range(Selection, Selection.End(xlDown)).Select
Selection.EntireRow.Hidden = True
Sheet1.Range("D10").Select

End If

End Sub


Sub InsertLines()

'
' 30/01/2014    Initial Version (3.00)
' Author        Alex McLaren (Alex.Mclaren@dhl.com)
'
' -----------------------------------------------------------------------------
' Individual procedure description:
' -----------------------------------------------------------------------------
' Description:      Inserts additional lines into the FREIGHT DETAILS section of the calculator (allowance for more shipment lines)
'

Application.ScreenUpdating = False

If ActiveSheet.ProtectContents = True Then

ActiveSheet.Unprotect Password:="DgfCRC2102"
ActiveSheet.EnableSelection = xlNoRestrictions

On Error GoTo NOTEXTBOXESTOUNLOCK

ActiveSheet.TextBoxes.Locked = False
ActiveSheet.TextBoxes.LockedText = False

NOTEXTBOXESTOUNLOCK:

Else

End If

Sheet1.Select

Application.GoTo reference:="C_INSERTLINES"

ActiveCell.Offset(-1, 0).Select
Selection.EntireRow.Select
Selection.Insert Shift:=xlDown, CopyOrigin:=xlFormatFromLeftOrAbove
ActiveCell.Offset(1, 0).EntireRow.Select
Selection.Copy
ActiveCell.Offset(-1, 0).EntireRow.Select
ActiveSheet.Paste

Range("C_PIECES").Select
Application.CutCopyMode = False

If ActiveSheet.ProtectContents = False Then

ZZ

Else
End If

Application.ScreenUpdating = True

End Sub

Public Sub ZZ()

'
' 13/02/2014    Initial Version (3.01)
' 13/04/2015    New version - inclusion of greater security measures (3.50)
' Author        Alex McLaren (Alex.Mclaren@dhl.com)
'
' -----------------------------------------------------------------------------
' Individual procedure description:
' -----------------------------------------------------------------------------
' Description:      This procedure will lock & unlock the sheets (password protection)
'

ActiveSheet.Select

If ActiveSheet.ProtectContents = False Then

ActiveSheet.EnableSelection = xlUnlockedCells

On Error GoTo NOTEXTBOXTOLOCK

ActiveSheet.TextBoxes.Locked = True
ActiveSheet.TextBoxes.LockedText = True

NOTEXTBOXTOLOCK:

ActiveSheet.Protect Password:="DgfCRC2102", DrawingObjects:=True, Contents:=True, Scenarios:=True, UserInterFaceOnly:=True

Else

PasswordInput1.Show
    
End If

End Sub

Public Sub ValidityCheckFailMsg()

Msg = "UNAUTHORISED ATTEMPT TO UPDATE RATES - ATTEMPT FAILED"
Msg = Msg & vbNewLine & vbNewLine
Msg = Msg & " You are not authorised to complete the uploading and refeshing of rates; "
Msg = Msg & vbNewLine
Msg = Msg & vbNewLine & " Please contact your local sales owner / UK Sales Support team to request a rate refresh "
Msg = Msg & vbNewLine
Msg = Msg & vbNewLine & " Thank you for your patience "
Msg = Msg & vbNewLine & vbNewLine
Msg = Msg & "If you experience any technical issues or "
Msg = Msg & vbNewLine & "for further details please contact UK.Sales@DHL.com"
Title = "Customer rate upload & standard formatting process - DATA IMPORT FAILED"
Ans1 = MsgBox(Msg, vbCritical, Title)

End Sub

Public Sub ValidityCheckFailMsg2()

Msg = "UNAUTHORISED ATTEMPT TO ACCESS ADMIN SCREEN - ATTEMPT FAILED"
Msg = Msg & vbNewLine & vbNewLine
Msg = Msg & " You are not authorised to complete the amendment of data within this rate calculator; "
Msg = Msg & vbNewLine
Msg = Msg & vbNewLine & " Please contact your local sales owner / UK Sales Support team to request support "
Msg = Msg & vbNewLine
Msg = Msg & vbNewLine & " Thank you for your patience "
Msg = Msg & vbNewLine & vbNewLine
Msg = Msg & "If you experience any technical issues or "
Msg = Msg & vbNewLine & "for further details please contact UK.Sales@DHL.com"
Title = "ADMIN ACCESS DENIED - ATTEMPT FAILED"
Ans1 = MsgBox(Msg, vbCritical, Title)

End Sub
Attribute VB_Name = "BB_RateImportFormat"
Public Sub RateClear()

'
' 13/01/2014    Initial Version (3.01)
' 14/10/2015    Update to range / accomodate addition of MAX values
' Author        Alex McLaren (Alex.Mclaren@dhl.com)
'
' -----------------------------------------------------------------------------
' Individual procedure description:
' -----------------------------------------------------------------------------
' Description:      This procedure will remove/clear the rate calculator in preparation
'                   for new rates to be uploaded
'

Application.ScreenUpdating = False

Sheet4.Activate

If ActiveSheet.Range("A11").Value = "" Then

    ActiveSheet.Unprotect Password:="DgfCRC2102"

Exit Sub

Else

    ActiveSheet.Unprotect Password:="DgfCRC2102"

ActiveSheet.Range("A11").EntireRow.Select
Range(Selection, Selection.End(xlDown)).Select
Selection.ClearContents

ActiveSheet.Range("I2:J5").Select
Selection.ClearContents

End If

End Sub

Public Sub RateClear2()

'
' 01/05/2015    Initial Version (4.00)
' Author        Alex McLaren (Alex.Mclaren@dhl.com)
'
' -----------------------------------------------------------------------------
' Individual procedure description:
' -----------------------------------------------------------------------------
' Description:      This procedure will remove/clear the rate calculator in preparation
'                   for new rates to be uploaded
'

Application.ScreenUpdating = False

Sheet4.Activate

If ActiveSheet.Range("A11").Value = "" Then

Exit Sub

Else

    ActiveSheet.Unprotect Password:="DgfCRC2102"

ActiveSheet.Range("A11").EntireRow.Select
Range(Selection, Selection.End(xlDown)).Select
Selection.ClearContents

ActiveSheet.Range("I2:J5").Select
Selection.ClearContents

    ActiveSheet.Protect Password:="DgfCRC2102"

End If

End Sub

Public Sub RateCalcSetUp()

'
' 13/01/2014    Initial Version (3.01)
' Author        Alex McLaren (Alex.Mclaren@dhl.com)
'
' -----------------------------------------------------------------------------
' Individual procedure description:
' -----------------------------------------------------------------------------
' Description:      This procedure will append the relevant additional information to each line item
'                   to allow the various look-ups etc within the rate calculator to be populated
'

Application.ScreenUpdating = False

Sheet4.Activate

ActiveSheet.Range("A11").Select
ActiveCell.FormulaR1C1 = "=CONCATENATE(RC[13],AD_FORMAT1,RC[20],AD_SPACES&CHAR(10),RC[27],AD_FORMAT1,RC[28],AD_FORMAT1,IF(OR(RC[22]=0,RC[22]=AD_NONHAZSHIP,RC[22]=AD_NO,RC[22]=AD_NN),AD_HAZNO,IF(OR(RC[22]=AD_YY,RC[22]=AD_HAZSHIP),AD_HAZYES)))"
ActiveCell.Offset(0, 1).Select
ActiveCell.FormulaR1C1 = "=CONCATENATE(RC[7],AD_FORMAT1,RC[14])"
ActiveCell.Offset(0, 1).Select
ActiveCell.FormulaR1C1 = "=IF(RC28=AD_BLANK,AD_FORMAT1,RC28)"
ActiveCell.Offset(0, 1).Select
ActiveCell.FormulaR1C1 = "=RC29"
ActiveCell.Offset(0, 1).Select
ActiveCell.FormulaR1C1 = "=IF(RC30=AD_BLANK,AD_FORMAT1,RC30)"
ActiveCell.Offset(0, 1).Select
ActiveCell.FormulaR1C1 = "=IF(RC54=AD_BLANK,AD_FORMAT1,RC54)"
ActiveCell.Offset(0, 1).Select
ActiveCell.FormulaR1C1 = "=IF(RC128=AD_BLANK,AD_FORMAT1,RC128)"

If Sheet4.Range("H12").Value = "" Then

ActiveSheet.Range("A11").Select
Range(ActiveCell, ActiveCell.Offset(0, 6)).Select
Selection.Copy
Selection.PasteSpecial Paste:=xlPasteValues
Application.CutCopyMode = False

Else

ActiveSheet.Range("A11").Select
Range(ActiveCell, ActiveCell.Offset(0, 6)).Select
Selection.Copy

Do Until IsEmpty(ActiveCell.Offset(1, 7).Value)

ActiveCell.Offset(1, 0).Select
ActiveSheet.Paste

Loop

ActiveSheet.Range("A11").Select
Range(ActiveCell, ActiveCell.End(xlDown)).Select
Range(Selection, Selection.Offset(0, 6)).Select
Selection.Copy
Selection.PasteSpecial Paste:=xlPasteValues
Application.CutCopyMode = False

End If

RateRangeFormatting1
RateRangeFormatting2
RateRangeFormatting3

ActiveSheet.Range("A11").Select

Sheet4.Activate

End Sub

Public Sub RateRangeFormatting1()

Application.ScreenUpdating = False

Sheet1.Activate
Sheet1.Range("AD_FORMAT98").Copy

Sheet4.Activate

If Sheet4.Range("H12").Value = "" Then

ActiveSheet.Range("A11").Select
Range(ActiveCell, ActiveCell.Offset(0, 6)).Select
Selection.PasteSpecial Paste:=xlPasteFormats

Selection.Locked = True

Application.CutCopyMode = False

Else

ActiveSheet.Range("A11").Select
Range(ActiveCell, ActiveCell.End(xlDown)).Select
Range(Selection, Selection.Offset(0, 6)).Select
Selection.PasteSpecial Paste:=xlPasteFormats

Selection.Locked = True

Application.CutCopyMode = False

End If

End Sub

Public Sub RateRangeFormatting2()

Application.ScreenUpdating = False

Sheet1.Activate
Sheet1.Range("AD_FORMAT97").Copy

Sheet4.Activate

If Sheet4.Range("H12").Value = "" Then

ActiveSheet.Range("H11").Select
Range(ActiveCell, ActiveCell.Offset(0, 141)).Select
Selection.PasteSpecial Paste:=xlPasteFormats

Selection.Locked = True

Application.CutCopyMode = False

Else

ActiveSheet.Range("H11").Select
Range(ActiveCell, ActiveCell.End(xlDown)).Select
Range(Selection, Selection.Offset(0, 141)).Select
Selection.PasteSpecial Paste:=xlPasteFormats

Selection.Locked = True

Application.CutCopyMode = False

End If

End Sub

Public Sub RateRangeFormatting3()

Application.ScreenUpdating = False

Sheet1.Activate
Sheet1.Range("AD_FORMAT99").Copy

Sheet4.Activate

ActiveSheet.Range("I2").Select
Range(Selection, Selection.Offset(3, 0)).Select
Range(Selection, Selection.Offset(0, 1)).Select
Selection.PasteSpecial Paste:=xlPasteFormats

Selection.Locked = True

Application.CutCopyMode = False

End Sub


Public Sub RateRangeUpdate()

Application.ScreenUpdating = False

Sheet4.Activate
ActiveSheet.Range("A10").Select
Range(Selection, Selection.Offset(0, 148)).Select
Range(Selection, Selection.End(xlDown)).Select
Selection.Name = "RATESHEET_LOOKUP"

ActiveSheet.Range("A11").Select
Range(Selection, Selection.End(xlDown)).Select
Selection.Name = "ORGDESTA_LOOKUP"

ActiveSheet.Range("A11").Select
Range(Selection, Selection.End(xlDown)).Select
Selection.Name = "ORGDESTCT_LOOKUP"


End Sub
 
 Public Sub RatesSortAtoZ()
 
 Application.ScreenUpdating = False
 
     Sheet4.Activate
    Range("a11").Select
    Range(ActiveCell, ActiveCell.Offset(0, 148)).Select
    Range(Selection, Selection.End(xlDown)).Select
    
    Selection.Name = "RS_SORTRNG"
    
    ActiveWorkbook.Worksheets("Rate Sheet").Sort.SortFields.Clear
    ActiveWorkbook.Worksheets("Rate Sheet").Sort.SortFields.Add Key:=Range("RS_ORGDESTA") _
    , SortOn:=xlSortOnValues, Order:=xlAscending, DataOption:=xlSortNormal
    With ActiveWorkbook.Worksheets("Rate Sheet").Sort
        .SetRange Range("RS_SORTRNG")
        .Header = xlNo
        .MatchCase = False
        .Orientation = xlTopToBottom
        .SortMethod = xlPinYin
        .Apply
    End With
 
 End Sub

Public Sub RateOtherFeesReset()


End Sub

Public Sub RateSheetClear()

Application.ScreenUpdating = False

    ActiveSheet.Unprotect Password:="DgfCRC2102"

Sheet4.Activate
Range("A11").Select

If ActiveCell.Value = "" Then

MsgBox "NO DATA TO RESET - ACTION CANCELLED", vbCritical, "NO DATA TO RESET"

Exit Sub

Else

Range("RS_CUSTDATACLEAR").ClearContents
Range("A11").EntireRow.Select
Range(Selection, Selection.End(xlDown)).Select
Selection.ClearContents

ActiveSheet.Range("A10").Select
Range(ActiveCell, ActiveCell.Offset(0, 148)).Select
Range(Selection, Selection.Offset(100, 0)).Select
Selection.Name = "RATESHEET_LOOKUP"

ActiveSheet.Range("A11").Select
Range(Selection, Selection.Offset(100, 0)).Select
Selection.Name = "ORGDESTA_LOOKUP"

ActiveSheet.Range("A11").Select
Range(Selection, Selection.Offset(100, 0)).Select
Selection.Name = "ORGDESTCT_LOOKUP"

Sheet1.Range("ORGDEST_DDOWN").Value = Sheet4.Range("A11").Value

Sheet1.Activate
ActiveSheet.Range("STARTREFRESH").Select
Selection.ClearContents

ActiveSheet.Range("AFR_SERVICETYPE").Select
ActiveCell.Value = Sheet3.Range("AD_PLEASESELECT").Value

ActiveSheet.Range("ORGDEST_DDOWN").Select

Sheet4.Activate
Sheet4.Range("R_CUSTNAME").Select

    ActiveSheet.Protect Password:="DgfCRC2102", DrawingObjects:=True, Contents:=True, Scenarios:=True _
        , AllowFiltering:=True, UserInterFaceOnly:=True

MsgBox "ALL CUSTOMER DATA REMOVED - SHEET NOW BLANK", vbInformation, "RATE SHEET BLANK"

End If

End Sub

Attribute VB_Name = "B_RateImport"
Sub ImportFile_RATES()

' Overall description:  This procedure prompts the user to locate, choose and then import an .xls file (all .xls file types)
'                       which will then be imported into the this workbook to be reformatted and displyed
'                       in a UK standard format for us during implementation, rate claculator creation & any other rate related requirement
'
' Author:   Alex McLaren, alex.mclaren@dhl.com
'
' --------------------------------------------------------------
' 13/02/2014    Initial version
' 03/09/2015    Version Update - includes additional layer of security / locked to only authorised users
'
' -----------------------------------------------------------------------------
' Individual procedure description:
' -----------------------------------------------------------------------------
' Description:      This procedure generates the user message, opens the file window allowing the user to locate/select the specific file
'                   prompting the subsequent functionality. This depends on the users' interaction (The user either selects: OK or Cancel)
'


' -----------------------------------------------
Dim val As String

  
val = LCase(Environ("USERNAME"))

'Debug.Print val

' -----------------------------------------------



Msg = "THIS OPERATION WILL TAKE A FEW MOMENTS"
Msg = Msg & vbNewLine & vbNewLine
Msg = Msg & " Please be paitent as the data is uploaded & processed; "
Msg = Msg & vbNewLine & " this process can take a few moments to complete "
Msg = Msg & vbNewLine
Msg = Msg & vbNewLine & " Thank you for your patience "
Msg = Msg & vbNewLine & vbNewLine
Msg = Msg & "If you experience any technical issues or "
Msg = Msg & vbNewLine & "for further details please contact UK.Sales@dhl.com"
Title = "Customer rate upload & standard formatting process - DATA IMPORT"
Ans1 = MsgBox(Msg, vbInformation, Title)


    Dim openfile As Variant
    Dim Ans As Integer
    Dim CancelledOp As String
          
    Ans = MsgBox("Please select the Excel file you wish to import", vbOKCancel)
    
    Select Case Ans
    
    Case vbOK
        
        openfile = Application.GetOpenFilename("Excel files (*.xls*),*.xls*", , "Open your Excel file...")
                
    If openfile = False Then
    
        MsgBox "No excel file selected", vbCritical, "File import cancelled"
    
        GoTo CancelledOp
    
    Else
   
   Application.ScreenUpdating = False
   
   RateClear
      
    Sheets("Rate Sheet").Activate
    TargetDataImport_RATES openfile
      
    End If
   
        Case vbCancel
        
        MsgBox "No files selected for import - Data will not be updated until new files imported", vbInformation, "Master Sheet data NOT updated at this time"
        
CancelledOp:
        
     Sheet4.Select
              
        End Select
        
Application.ScreenUpdating = True
    
End Sub

Public Sub TargetDataImport_RATES(st As Variant)

'
' 13/02/2014    Initial version
' 01/05/2015    Version 4.00 - Aligning import file to IPT (Internal Pricing Template)
'
' -----------------------------------------------------------------------------
' Individual procedure description:
' -----------------------------------------------------------------------------
' Description:      This procedure houses the core functionality within this workbook. Please see below for brief summaries of each element:
'                   (NB: Greater detail is given within each individual procedure)
'
'                   1. Initial section of code opens temporary window to allow excel to select / copy & paste the relevant data to a designated sheet
'                   2. RateCalcSetUp -              Adds data to rate sheet to fuel lookups
'                   3. RateRangeUpdate -            Updates / refreshes internal named ranges to include variable volumes of data
'

Dim wbk As Workbook
Dim imp_workbook As Workbook
Dim sht As Worksheet
Dim imp_sht As Worksheet
Dim bottom As Long, y As Long, bt As Long
Dim rng As Range
Dim st_2 As String, st_3 As String
Dim openfile As Variant

Set wbk = ThisWorkbook
Set sht = ActiveSheet
Set imp_workbook = Workbooks.Open(st)
Set imp_sht = ActiveSheet

'Application.ScreenUpdating = False

' This code finds the bottom row of the populated data within worksheet
bottom = sht.[a60000].End(xlUp).Row
' This code then offsets the data copy to the row below the last line of data
bottom = bottom + 1

    y = imp_sht.[b60000].End(xlUp).Row
    Set rng1 = imp_sht.Range("A13:EL" & y).Cells
    Set rng2 = imp_sht.Range("C3:C6").Cells
    rng1.Copy Destination:=sht.Range("H" & bottom)
    rng2.Copy Destination:=sht.Range("I2:J5")
    bt = sht.[a60000].End(xlUp).Row
    imp_workbook.Close False

'
' -----------------------------------------------------------------------------
' CORE FUNCTIONALITY -
' -----------------------------------------------------------------------------
'

RateCalcSetUp
RatesSortAtoZ
RateRangeUpdate

' -----------------------------------------------------------------------------

Sheet4.Activate

Range("J2:J5").ClearContents

ActiveSheet.Range("A7").Select

    ActiveSheet.Protect Password:="DgfCRC2102", DrawingObjects:=True, Contents:=True, Scenarios:=True _
        , AllowFiltering:=True, UserInterFaceOnly:=True

MsgBox "The customer rates have been uploaded & reformatted", vbInformation, "Customer rate upload completed"

End Sub


Attribute VB_Name = "C_EmailCode"

Public Sub PrepareRatesForSending()

Application.ScreenUpdating = False

    Sheets.Add After:=Sheets(Sheets.Count)
    ActiveSheet.Name = Sheet3.Range("AD_CUSTCOPY").Value
        With ActiveWorkbook.Sheets(Sheet3.Range("AD_CUSTCOPY").Value).Tab
        .Color = 49407
    End With
    
    Sheet2.Activate
    Cells.Select
    Selection.Copy
    
    Sheets(Sheet3.Range("AD_CUSTCOPY").Value).Activate
    Range("A1").Select
    Cells.Select
    ActiveSheet.Paste
    ActiveSheet.Range("A1").Select
    Application.CutCopyMode = False
    ActiveSheet.Shapes("Group 2").Select
    Selection.Delete
    ActiveWindow.Zoom = 75
    ActiveWindow.DisplayHeadings = False
    
    'Sheet2.Activate
    'ActiveSheet.Shapes("Picture 2").Select
    'Selection.Copy
    
    'Sheets("CUSTOMER COPY").Activate
    'Range("C2").Select
    'ActiveSheet.Paste
    
    'OXO
    
    'PrintSheet_CustCopy

End Sub

Public Sub RemoveCustomerCopy()

Application.ScreenUpdating = False
Application.DisplayAlerts = False

    Sheets("CUSTOMER COPY").Delete
       
    Sheet2.Activate
    Range("PRINT_REF").Select

End Sub

Sub Mail_Sheets_Array()

Application.ScreenUpdating = False

If ActiveSheet.ProtectContents = True Then

ActiveSheet.Unprotect Password:="DgfCRC2102"
ActiveSheet.EnableSelection = xlNoRestrictions

On Error GoTo NOTEXTBOXESTOUNLOCK

ActiveSheet.TextBoxes.Locked = False
ActiveSheet.TextBoxes.LockedText = False

NOTEXTBOXESTOUNLOCK:
On Error GoTo 0
Else

End If

Msg = "THIS OPERATION WILL TAKE A FEW MOMENTS"
Msg = Msg & vbNewLine & vbNewLine
Msg = Msg & " Please be paitent as the email summary "
Msg = Msg & vbNewLine & " will take a few moments to complete "
Msg = Msg & vbNewLine & " Thank you for your patience "
Msg = Msg & vbNewLine & vbNewLine
Msg = Msg & "If you experience any technical issues or "
Msg = Msg & vbNewLine & " for further details please contact UK.Sales@dhl.com"
Title = "Email Rate Summary"
Ans = MsgBox(Msg, vbInformation, Title)

PrepareRatesForSending

'Working in 2000-2010
    Dim FileExtStr As String
    Dim FileFormatNum As Long
    Dim Sourcewb As Workbook
    Dim Destwb As Workbook
    Dim TempFilePath As String
    Dim TempFileName As String
    Dim OutApp As Object
    Dim OutMail As Object
    Dim sh As Worksheet
    Dim TheActiveWindow As Window
    Dim TempWindow As Window

    With Application
        .ScreenUpdating = False
        .EnableEvents = False
    End With

    Set Sourcewb = ActiveWorkbook
    
    StRep = Array("CUSTOMER COPY")

    With Sourcewb
        Set TheActiveWindow = ActiveWindow
        Set TempWindow = .NewWindow
        Sheets(StRep).Copy
               
    End With

    TempWindow.Close

    Set Destwb = ActiveWorkbook

    With Destwb
        If val(Application.Version) < 12 Then
            FileExtStr = ".xls": FileFormatNum = -4143
        Else
            If Sourcewb.Name = .Name Then
                With Application
                    .ScreenUpdating = True
                    .EnableEvents = True
                End With
                MsgBox "Your answer is NO in the security dialog"
                Exit Sub
            Else
                Select Case Sourcewb.FileFormat
                Case 51: FileExtStr = ".xlsx": FileFormatNum = 51
                Case 52:
                    If .HasVBProject Then
                        FileExtStr = ".xlsm": FileFormatNum = 52
                    Else
                        FileExtStr = ".xlsx": FileFormatNum = 51
                    End If
                Case 56: FileExtStr = ".xls": FileFormatNum = 56
                Case Else: FileExtStr = ".xlsb": FileFormatNum = 50
                End Select
            End If
        End If
    End With
''
      For Each sh In Destwb.Worksheets
      sh.Select
      With sh.UsedRange
            .Cells.Copy
            .Cells.PasteSpecial xlPasteValuesAndNumberFormats
            .Cells(1).Select
      End With
      Application.CutCopyMode = False
      
      'OXO
      
    ZZ
      
          Destwb.Worksheets(1).Select
      Next sh

    TempFilePath = Environ$("temp") & "\"
    TempFileName = "Customer rate summary - " & Sheet2.Range("CUST_NAME").Text & " - " & Sheet2.Range("Print_Ref").Text & " - " & Format(Now, "mmm yyyy")

    Set OutApp = CreateObject("Outlook.Application")
    Set OutMail = OutApp.CreateItem(0)

    With Destwb
        .SaveAs TempFilePath & TempFileName & FileExtStr, _
                FileFormat:=FileFormatNum
        On Error Resume Next
        With OutMail
            .To = ""
            .CC = ""
            .BCC = ""
            .Subject = "Customer rate summary - " & Sheet2.Range("CUST_NAME").Text & " - " & Sheet2.Range("Print_Ref").Text & " - " & Date
            .body = EmailContent.TextBox1.Text
            .Attachments.Add Destwb.FullName
            .Display
        End With
        On Error GoTo 0
        .Close SaveChanges:=False
    End With

    Kill TempFilePath & TempFileName & FileExtStr

    Set OutMail = Nothing
    Set OutApp = Nothing

    With Application
        .ScreenUpdating = True
        .EnableEvents = True
    End With
    
    RemoveCustomerCopy
    
If ActiveSheet.ProtectContents = False Then

ZZ

Else
End If
    
End Sub

Public Sub OXO()

Sheets("CUSTOMER COPY").Activate

Application.ScreenUpdating = False

Range("J20").Font.Color = -16777024
Range("J31").Font.Color = -16777024
Range("J41").Font.Color = -16777024

If _
Sheet1.Range("C_AFRTOTAL").Value = Sheet3.Range("AD_EXPMESSAGE").Value Or _
Sheet1.Range("C_AFRTOTAL").Value = Sheet3.Range("AD_MISSINGROE").Value Or _
Sheet1.Range("C_AFRTOTAL").Value = Sheet3.Range("AD_NORATE").Value Or _
Sheet1.Range("C_AFRTOTAL").Value = Sheet3.Range("AD_PLEASESELECT").Value Or _
Sheet1.Range("C_AFRTOTAL").Value = Sheet3.Range("AD_ADDWEIGHT").Value Or _
Sheet1.Range("C_AFRTOTAL").Value = Sheet3.Range("AD_OOGTEXT").Value Then

Range("J20:J29").Rows.Hidden = False
Range("J21:J29").Rows.Hidden = True

Range("J31:J39").Rows.Hidden = False
Range("J32:J39").Rows.Hidden = True

Range("J41:J49").Rows.Hidden = False
Range("J42:J49").Rows.Hidden = True

Range("J20").Font.ThemeColor = xlThemeColorDark1
Range("J31").Font.ThemeColor = xlThemeColorDark1
Range("J41").Font.ThemeColor = xlThemeColorDark1

Else

If Sheet1.Range("C_SERVICELVL").Value = Sheet3.Range("AD_FORMAT3").Value Then

Range("J20:J29").Rows.Hidden = False

Dim cX As Range
For Each cX In Range("j21:j29")
If cX.Value = 0 Then
Rows(cX.Row).Hidden = True
Else
Rows(cX.Row).Hidden = False
End If
Next cX

Range("J31:J39").Rows.Hidden = False

Dim dX As Range
For Each dX In Range("j32:j39")
If dX.Value = 0 Then
Rows(dX.Row).Hidden = True
Else
Rows(dX.Row).Hidden = False
End If
Next dX

Range("J41:J49").Rows.Hidden = False

Dim eX As Range
For Each eX In Range("j42:j49")
If eX.Value = 0 Then
Rows(eX.Row).Hidden = True
Else
Rows(eX.Row).Hidden = False
End If
Next eX

Else

Select Case Sheet2.Range("C_SERVICELVL").Value

' ---------------------------------------------------------

Case Sheet1.Range("DTD").Value

Range("J20:J29").Rows.Hidden = False

Dim c As Range
For Each c In Range("j21:j29")
If c.Value = 0 Then
Rows(c.Row).Hidden = True
Else
Rows(c.Row).Hidden = False
End If
Next c

Range("J31:J39").Rows.Hidden = False

Dim d As Range
For Each d In Range("j32:j39")
If d.Value = 0 Then
Rows(d.Row).Hidden = True
Else
Rows(d.Row).Hidden = False
End If
Next d

Range("J41:J49").Rows.Hidden = False

Dim e As Range
For Each e In Range("j42:j49")
If e.Value = 0 Then
Rows(e.Row).Hidden = True
Else
Rows(e.Row).Hidden = False
End If
Next e

' ---------------------------------------------------------

Case Sheet1.Range("DTA").Value

Range("J20:J29").Rows.Hidden = False

Dim c1 As Range
For Each c1 In Range("j21:j29")
If c1.Value = 0 Then
Rows(c1.Row).Hidden = True
Else
Rows(c1.Row).Hidden = False
End If
Next c1

Range("J31:J39").Rows.Hidden = False

Dim d1 As Range
For Each d1 In Range("j32:j39")
If d1.Value = 0 Then
Rows(d1.Row).Hidden = True
Else
Rows(d1.Row).Hidden = False
End If
Next d1

Range("J41:J49").Rows.Hidden = True

' ---------------------------------------------------------

Case Sheet1.Range("ATA").Value

Range("J20:J29").Rows.Hidden = False

Range("J20:J29").Rows.Hidden = True

Range("J31:J39").Rows.Hidden = False

Dim d2 As Range
For Each d2 In Range("j32:j39")
If d2.Value = 0 Then
Rows(d2.Row).Hidden = True
Else
Rows(d2.Row).Hidden = False
End If
Next d2

Range("J41:J49").Rows.Hidden = False

Range("J41:J49").Rows.Hidden = True

' ---------------------------------------------------------

Case Sheet1.Range("ATD").Value

Range("J20:J29").Rows.Hidden = False

Range("J20:J29").Rows.Hidden = True

Range("J31:J39").Rows.Hidden = False

Dim d3 As Range
For Each d3 In Range("j32:j39")
If d3.Value = 0 Then
Rows(d3.Row).Hidden = True
Else
Rows(d3.Row).Hidden = False
End If
Next d3

Range("J41:J49").Rows.Hidden = False

Dim e3 As Range
For Each e3 In Range("j42:j49")
If e3.Value = 0 Then
Rows(e3.Row).Hidden = True
Else
Rows(e3.Row).Hidden = False
End If
Next e3

' ---------------------------------------------------------

Case Sheet1.Range("ALL").Value

Range("J20:J29").Rows.Hidden = False

Range("J20:J29").Rows.Hidden = True

Range("J31:J39").Rows.Hidden = False

Dim d4 As Range
For Each d4 In Range("j32:j39")
If d4.Value = 0 Then
Rows(d4.Row).Hidden = True
Else
Rows(d4.Row).Hidden = False
End If
Next d4

Range("J41:J49").Rows.Hidden = False

Range("J41:J49").Rows.Hidden = True

' ---------------------------------------------------------

End Select

End If
End If

End Sub


Attribute VB_Name = "D_PrintForm"
Public Sub PrintSheet_CustCopy()


Application.ScreenUpdating = False

Sheets("CUSTOMER COPY").Activate

If ActiveSheet.ProtectContents = True Then



Else


End If

Dim c As Range
For Each c In Range("j21:j28")
If c.Value = 0 Then
Rows(c.Row).Hidden = True
Else
Rows(c.Row).Hidden = False
End If
Next c

Dim d As Range
For Each d In Range("j31:j38")
If d.Value = 0 Then
Rows(d.Row).Hidden = True
Else
Rows(d.Row).Hidden = False
End If
Next d

Dim e As Range
For Each e In Range("j41:j49")
If e.Value = 0 Then
Rows(e.Row).Hidden = True
Else
Rows(e.Row).Hidden = False
End If
Next e

Rows("55:65").Hidden = True

End Sub
Attribute VB_Name = "DimEntry"
Attribute VB_Base = "0{DEACF7F1-7282-4D00-B311-E8E291F4247A}{EA553E7F-AE9B-4F3D-9A10-1AD0C5EDE4AE}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Private Sub CommandButton1_Click()

Unload DimEntry

End Sub

Private Sub CommandButton2_Click()

Sheet1.Range("AFR_LENGTH").Value = ""
Sheet1.Range("AFR_WIDTH").Value = ""
Sheet1.Range("AFR_HEIGHT").Value = ""

DimEntry.TextBox1.Value = ""
DimEntry.TextBox2.Value = ""
DimEntry.TextBox3.Value = ""

End Sub

Private Sub TextBox1_Change()

Sheet2.Range("AFR_LENGTH").Value = DimEntry.TextBox1.Value

End Sub
Private Sub TextBox2_Change()

Sheet2.Range("AFR_WIDTH").Value = DimEntry.TextBox2.Value

End Sub
Private Sub TextBox3_Change()

Sheet2.Range("AFR_HEIGHT").Value = DimEntry.TextBox3.Value

End Sub

Private Sub userform_initialize()

DimEntry.BackColor = RGB(255, 204, 0)
DimEntry.BorderStyle = fmBorderStyleSingle
DimEntry.BorderColor = RGB(212, 5, 17)

DimEntry.Label1.Caption = "Please enter required dimensions:"
DimEntry.Label2.Caption = "Please enter LENGTH (CM):"
DimEntry.Label3.Caption = "Please enter WIDTH (CM):"
DimEntry.Label4.Caption = "Please enter HEIGHT (CM):"

DimEntry.Label1.Font = "Calibri"
DimEntry.Label1.FontSize = "11"
DimEntry.Label1.Font.Bold = True
DimEntry.Label1.BackColor = RGB(255, 204, 0)
DimEntry.Label1.ForeColor = RGB(212, 5, 17)

DimEntry.Label2.Font = "Calibri"
DimEntry.Label2.FontSize = "8"
DimEntry.Label2.Font.Bold = True
DimEntry.Label2.BackColor = RGB(255, 204, 0)
DimEntry.Label2.ForeColor = RGB(212, 5, 17)

DimEntry.Label3.Font = "Calibri"
DimEntry.Label3.FontSize = "8"
DimEntry.Label3.Font.Bold = True
DimEntry.Label3.BackColor = RGB(255, 204, 0)
DimEntry.Label3.ForeColor = RGB(212, 5, 17)

DimEntry.Label4.Font = "Calibri"
DimEntry.Label4.FontSize = "8"
DimEntry.Label4.Font.Bold = True
DimEntry.Label4.BackColor = RGB(255, 204, 0)
DimEntry.Label4.ForeColor = RGB(212, 5, 17)

DimEntry.CommandButton1.Caption = "Click to update DIMS"
DimEntry.CommandButton1.Font = "Calibri"
DimEntry.CommandButton1.FontSize = "8"
DimEntry.CommandButton1.Font.Bold = True
DimEntry.CommandButton1.BackColor = RGB(255, 255, 153)
DimEntry.CommandButton1.ForeColor = RGB(212, 5, 17)

DimEntry.CommandButton2.Caption = "Restore default DIMS"
DimEntry.CommandButton2.Font = "Calibri"
DimEntry.CommandButton2.FontSize = "8"
DimEntry.CommandButton2.Font.Bold = True
DimEntry.CommandButton2.BackColor = RGB(51, 204, 51)
DimEntry.CommandButton2.ForeColor = RGB(255, 255, 255)

End Sub
Attribute VB_Name = "EE_MultiSheetRateCard"
Public Sub MultiSheetRC()

Application.ScreenUpdating = False

If Sheets("Customer Rate Card_1").Visible = False Then
Sheets("Customer Rate Card_1").Visible = True
Else
End If

Sheets("Customer Rate Card_1").Activate

If ActiveSheet.ProtectContents = True Then

ActiveSheet.Unprotect Password:="DgfCRC2102"
ActiveSheet.EnableSelection = xlNoRestrictions

On Error GoTo NOTEXTBOXESTOUNLOCK

ActiveSheet.TextBoxes.Locked = False
ActiveSheet.TextBoxes.LockedText = False

NOTEXTBOXESTOUNLOCK:

Else

End If

 Sheet4.Range("R_CUSTLANESCURR").Value = 1

LineItemReveal

CustInitialData
CustLaneData_A
CustLaneData_ORIGIN
CustLaneData_DEST
CustLaneData_SHIP
CustLaneData_ORIGINCHARGE
CustLaneData_MLCHARGE
CustLaneData_DESTCHARGE
LineItemRefine

Dim x As Integer
Dim y As Integer

x = Sheet4.Range("R_CUSTLANES").Value

For y = 2 To x

Sheet4.Range("R_CUSTLANESCURR").Value = y

    Sheets.Add After:=Sheets(Sheets.Count)
    ActiveSheet.Name = "Customer Rate Card_" & y
        With ActiveWorkbook.Sheets("Customer Rate Card_" & y).Tab
        .Color = 5296274
    End With

Sheets("Customer Rate Card_1").Activate
    Cells.Select
    Selection.Copy

Sheets("Customer Rate Card_" & y).Activate
    Range("A1").Select
    Cells.Select
    ActiveSheet.Paste
    ActiveSheet.Range("A1").Select
    Application.CutCopyMode = False

    ActiveWindow.Zoom = 75
    ActiveWindow.DisplayGridlines = False
    ActiveWindow.DisplayHeadings = False

    TabPageSetUp

Sheets("Customer Rate Card_1").Activate
    ActiveSheet.Shapes("RC_TITLE").Select
    Selection.Copy

Sheets("Customer Rate Card_" & y).Activate
    ActiveSheet.Range("C2").Select
    ActiveSheet.Paste
    
Sheets("Customer Rate Card_1").Activate
    ActiveSheet.Shapes("PDF_TCS").Select
    Selection.Copy

Sheets("Customer Rate Card_" & y).Activate
    ActiveSheet.Range("M23").Select
    ActiveSheet.Paste
    
' ---------------------------------------------------------
' Look up range update
' ---------------------------------------------------------

Sheets("Customer Rate Card_" & y).Activate
ActiveSheet.Range("G184").Select
ActiveCell.Value = (Sheet3.Range("G184").Value + ((y - 1) * 10))
ActiveCell.Offset(0, 1).Select
ActiveCell.Value = (Sheet3.Range("H184").Value + ((y - 1) * 10))
ActiveCell.Offset(0, 1).Select
ActiveCell.Value = (Sheet3.Range("I184").Value + ((y - 1) * 10))
ActiveCell.Offset(0, 1).Select
ActiveCell.Value = (Sheet3.Range("J184").Value + ((y - 1) * 10))
ActiveCell.Offset(0, 1).Select
ActiveCell.Value = (Sheet3.Range("K184").Value + ((y - 1) * 10))
ActiveCell.Offset(0, 1).Select
ActiveCell.Value = (Sheet3.Range("L184").Value + ((y - 1) * 10))
ActiveCell.Offset(0, 1).Select
ActiveCell.Value = (Sheet3.Range("M184").Value + ((y - 1) * 10))
ActiveCell.Offset(0, 1).Select
ActiveCell.Value = (Sheet3.Range("N184").Value + ((y - 1) * 10))
ActiveCell.Offset(0, 1).Select
ActiveCell.Value = (Sheet3.Range("O184").Value + ((y - 1) * 10))
ActiveCell.Offset(0, 1).Select
ActiveCell.Value = (Sheet3.Range("P184").Value + ((y - 1) * 10))

' ---------------------------------------------------------
' Rate card data
' ---------------------------------------------------------

CustInitialData
CustLaneData_A
CustLaneData_ORIGIN
CustLaneData_DEST
CustLaneData_SHIP
CustLaneData_ORIGINCHARGE
CustLaneData_MLCHARGE
CustLaneData_DESTCHARGE
RateRefCleaner
LineItemRefine

' ---------------------------------------------------------
'
' ---------------------------------------------------------

Next y

CustRateCardEmail
CustRateCardCleaner
CustRateCardArrayCleaner

End Sub

Public Sub TabPageSetUp()

Application.ScreenUpdating = False

    With ActiveSheet.PageSetup
        .LeftMargin = Application.InchesToPoints(0.196850393700787)
        .RightMargin = Application.InchesToPoints(0.196850393700787)
        .TopMargin = Application.InchesToPoints(0.196850393700787)
        .BottomMargin = Application.InchesToPoints(0.196850393700787)
        .HeaderMargin = Application.InchesToPoints(0.196850393700787)
        .FooterMargin = Application.InchesToPoints(0.196850393700787)
        .PrintHeadings = False
        .PrintGridlines = False
        .PrintComments = xlPrintNoComments
        .PrintQuality = 600
        .CenterHorizontally = True
        .CenterVertically = False
        .Orientation = xlPortrait
        .Draft = False
        .PaperSize = xlPaperA4
        .FirstPageNumber = xlAutomatic
        .Order = xlDownThenOver
        .BlackAndWhite = False
        .Zoom = False
        .FitToPagesWide = 1
        .FitToPagesTall = 1
        .PrintErrors = xlPrintErrorsDisplayed
        .OddAndEvenPagesHeaderFooter = False
        .DifferentFirstPageHeaderFooter = False
        .ScaleWithDocHeaderFooter = True
        .AlignMarginsHeaderFooter = True
    End With

End Sub

Attribute VB_Name = "E_RateCardCreator"
Public Sub CustRateCardCreator()

'
' 01/06/2015    Initial Version (4.01)
' Author        Alex McLaren (Alex.Mclaren@dhl.com)
'
' -----------------------------------------------------------------------------
' Individual procedure description:
' -----------------------------------------------------------------------------
' Description:      This procedure calculate the number of rows, prepare the relevant sheets and
'                   generate the customer rate cards (user friendly version)
'

Application.ScreenUpdating = False

Msg = "THIS OPERATION WILL TAKE A FEW MOMENTS"
Msg = Msg & vbNewLine & vbNewLine
Msg = Msg & " Please be paitent as your request is processed; "
Msg = Msg & vbNewLine & " this process can take a few moments to complete "
Msg = Msg & vbNewLine
Msg = Msg & vbNewLine & " Thank you for your patience "
Msg = Msg & vbNewLine & vbNewLine
Msg = Msg & "If you experience any technical issues or "
Msg = Msg & vbNewLine & "for further details please contact UK.Sales@dhl.com"
Title = "Customer rate card creation process - DATA MANAGEMENT"
Ans1 = MsgBox(Msg, vbInformation, Title)

Dim a As Integer

a = Sheet4.Range("R_CUSTLANES").Value

Select Case a

Case Is = 0

Msg = "THE CUSTOMER RATE SHEET DOES NOT CONTAIN ANY RATES"
Msg = Msg & vbNewLine & vbNewLine
Msg = Msg & " Please note that your request can not be handled; "
Msg = Msg & vbNewLine & " there are no rates listed on the RATE SHEET. "
Msg = Msg & vbNewLine & vbNewLine & " To resolve; please upload rates to the RATE SHEET "
Msg = Msg & vbNewLine & vbNewLine
Msg = Msg & "If you experience any technical issues or "
Msg = Msg & vbNewLine & "for further details please contact UK.Sales@dhl.com"
Title = "UNABLE TO BE COMPLETE - Customer rate upload & standard formatting process"
Ans1 = MsgBox(Msg, vbInformation, Title)

Exit Sub

Case Is = 1

SingleSheetRC

Case Is > 1

MultiSheetRC

End Select

Sheet4.Activate
Range("A7").Select

Msg = "OPERATION COMPLETED SUCCESSFULLY"
Msg = Msg & vbNewLine
Msg = Msg & vbNewLine & " Thank you for your patience "
Msg = Msg & vbNewLine & vbNewLine
Title = "Customer rate card creation process - COMPLETED"
Ans1 = MsgBox(Msg, vbInformation, Title)

End Sub

Public Sub SingleSheetRC()

Application.ScreenUpdating = False

If Sheets("Customer Rate Card_1").Visible = False Then
Sheets("Customer Rate Card_1").Visible = True
Else
End If

Sheets("Customer Rate Card_1").Activate

If ActiveSheet.ProtectContents = True Then

ActiveSheet.Unprotect Password:="DgfCRC2102"
ActiveSheet.EnableSelection = xlNoRestrictions

On Error GoTo NOTEXTBOXESTOUNLOCK

ActiveSheet.TextBoxes.Locked = False
ActiveSheet.TextBoxes.LockedText = False

NOTEXTBOXESTOUNLOCK:

Else

End If

Sheet4.Range("R_CUSTLANESCURR").Value = 1

LineItemReveal

CustInitialData
CustLaneData_A
CustLaneData_ORIGIN
CustLaneData_DEST
CustLaneData_SHIP
CustLaneData_ORIGINCHARGE
CustLaneData_MLCHARGE
CustLaneData_DESTCHARGE
RateRefCleaner
TabPageSetUp

LineItemRefine
CustRateCardEmail
CustRateCardCleaner

Sheet4.Activate
Range("F7").Select

End Sub

Public Sub CustInitialData()

Application.ScreenUpdating = False

Dim r As Integer

r = Sheet4.Range("R_CUSTLANESCURR").Value

Sheets("Customer Rate Card_" & r).Activate

Range("F7").Select
ActiveCell.FormulaR1C1 = "=IFERROR(IF(OR(R_CUSTNAME=AD_BLANK,R_CUSTNAME=AD_BLANK,R_CUSTNAME=AD_ZERO),AD_BLANKSPACE,R_CUSTNAME),AD_BLANKSPACE)"
ActiveCell.Offset(1, 0).Select
ActiveCell.FormulaR1C1 = "=IF(OR('Rate Sheet'!R[-5]C[3]=AD_BLANK,'Rate Sheet'!R[-5]C[3]=AD_BLANK,'Rate Sheet'!R[-5]C[3]=AD_ZERO),AD_BLANKSPACE,'Rate Sheet'!R[-5]C[3])"
ActiveCell.Offset(1, 0).Select
ActiveCell.FormulaR1C1 = "=IF(OR('Rate Sheet'!R[-5]C[3]=AD_BLANK,'Rate Sheet'!R[-5]C[3]=AD_BLANK,'Rate Sheet'!R[-5]C[3]=AD_ZERO),AD_BLANKSPACE,'Rate Sheet'!R[-5]C[3])"
ActiveCell.Offset(1, 0).Select
ActiveCell.FormulaR1C1 = "=IF(OR(R_EXPIRYDATE=AD_BLANK,R_EXPIRYDATE=AD_BLANK,R_EXPIRYDATE=AD_ZERO),AD_BLANKSPACE,R_EXPIRYDATE)"
Range("F7").Select
Range(Selection, Selection.Offset(3, 0)).Select
Selection.Copy
Selection.PasteSpecial Paste:=xlPasteValues
Application.CutCopyMode = False
Range("F7").Select

End Sub

Public Sub CustLaneData_A()

Application.ScreenUpdating = False

Dim r As Integer

r = Sheet4.Range("R_CUSTLANESCURR").Value

Sheets("Customer Rate Card_" & r).Activate

Range("G33").Select
ActiveCell.FormulaR1C1 = "=IF(OR(HLOOKUP(RC6,RATESHEET_LOOKUP,R184C,FALSE)=AD_ZERO,HLOOKUP(RC6,RATESHEET_LOOKUP,R184C,FALSE)=AD_BLANK,HLOOKUP(RC6,RATESHEET_LOOKUP,R184C,FALSE)=AD_BLANK),AD_BLANKSPACE,HLOOKUP(RC6,RATESHEET_LOOKUP,R184C,FALSE))"
ActiveCell.Offset(1, 0).Select
ActiveCell.FormulaR1C1 = "=IF(OR(HLOOKUP(RC6,RATESHEET_LOOKUP,R184C,FALSE)=AD_ZERO,HLOOKUP(RC6,RATESHEET_LOOKUP,R184C,FALSE)=AD_BLANK,HLOOKUP(RC6,RATESHEET_LOOKUP,R184C,FALSE)=AD_BLANK),AD_BLANKSPACE,HLOOKUP(RC6,RATESHEET_LOOKUP,R184C,FALSE))"
ActiveCell.Offset(1, 0).Select
ActiveCell.FormulaR1C1 = "=IF(OR(HLOOKUP(RC6,RATESHEET_LOOKUP,R184C,FALSE)=AD_ZERO,HLOOKUP(RC6,RATESHEET_LOOKUP,R184C,FALSE)=AD_BLANK,HLOOKUP(RC6,RATESHEET_LOOKUP,R184C,FALSE)=AD_BLANK),AD_BLANKSPACE,HLOOKUP(RC6,RATESHEET_LOOKUP,R184C,FALSE))"
ActiveCell.Offset(1, 0).Select
ActiveCell.FormulaR1C1 = "=IF(OR(HLOOKUP(RC6,RATESHEET_LOOKUP,R184C,FALSE)=AD_ZERO,HLOOKUP(RC6,RATESHEET_LOOKUP,R184C,FALSE)=AD_BLANK,HLOOKUP(RC6,RATESHEET_LOOKUP,R184C,FALSE)=AD_BLANK),AD_BLANKSPACE,HLOOKUP(RC6,RATESHEET_LOOKUP,R184C,FALSE))"
ActiveCell.Offset(1, 0).Select
ActiveCell.FormulaR1C1 = "=IF(OR(HLOOKUP(RC6,RATESHEET_LOOKUP,R184C,FALSE)=AD_ZERO,HLOOKUP(RC6,RATESHEET_LOOKUP,R184C,FALSE)=AD_BLANK,HLOOKUP(RC6,RATESHEET_LOOKUP,R184C,FALSE)=AD_BLANK),AD_BLANKSPACE,HLOOKUP(RC6,RATESHEET_LOOKUP,R184C,FALSE))"
ActiveCell.Offset(1, 0).Select
ActiveCell.FormulaR1C1 = "=IF(OR(HLOOKUP(RC6,RATESHEET_LOOKUP,R184C,FALSE)=AD_ZERO,HLOOKUP(RC6,RATESHEET_LOOKUP,R184C,FALSE)=AD_BLANK,HLOOKUP(RC6,RATESHEET_LOOKUP,R184C,FALSE)=AD_BLANK),AD_BLANKSPACE,HLOOKUP(RC6,RATESHEET_LOOKUP,R184C,FALSE))"
ActiveCell.Offset(1, 0).Select
ActiveCell.FormulaR1C1 = "=IF(OR(HLOOKUP(RC6,RATESHEET_LOOKUP,R184C,FALSE)=AD_ZERO,HLOOKUP(RC6,RATESHEET_LOOKUP,R184C,FALSE)=AD_BLANK,HLOOKUP(RC6,RATESHEET_LOOKUP,R184C,FALSE)=AD_BLANK),AD_BLANKSPACE,HLOOKUP(RC6,RATESHEET_LOOKUP,R184C,FALSE))"

Range("G33").Select
Range(Selection, Selection.Offset(6, 0)).Select
Range(Selection, Selection.Offset(0, 9)).Select
Selection.FillRight
Selection.Copy
Selection.PasteSpecial Paste:=xlPasteValues
Application.CutCopyMode = False
Range("G33").Select

End Sub

Public Sub CustLaneData_ORIGIN()

Application.ScreenUpdating = False

Dim r As Integer

r = Sheet4.Range("R_CUSTLANESCURR").Value

Sheets("Customer Rate Card_" & r).Activate

Range("G40").Select
ActiveCell.FormulaR1C1 = "=IF(OR(HLOOKUP(RC6,RATESHEET_LOOKUP,R184C,FALSE)=AD_ZERO,HLOOKUP(RC6,RATESHEET_LOOKUP,R184C,FALSE)=AD_BLANK,HLOOKUP(RC6,RATESHEET_LOOKUP,R184C,FALSE)=AD_BLANK),AD_BLANKSPACE,HLOOKUP(RC6,RATESHEET_LOOKUP,R184C,FALSE))"
ActiveCell.Offset(1, 0).Select
ActiveCell.FormulaR1C1 = "=IF(OR(HLOOKUP(RC6,RATESHEET_LOOKUP,R184C,FALSE)=AD_ZERO,HLOOKUP(RC6,RATESHEET_LOOKUP,R184C,FALSE)=AD_BLANK,HLOOKUP(RC6,RATESHEET_LOOKUP,R184C,FALSE)=AD_BLANK),AD_BLANKSPACE,HLOOKUP(RC6,RATESHEET_LOOKUP,R184C,FALSE))"
ActiveCell.Offset(1, 0).Select
ActiveCell.FormulaR1C1 = "=IF(OR(HLOOKUP(RC6,RATESHEET_LOOKUP,R184C,FALSE)=AD_ZERO,HLOOKUP(RC6,RATESHEET_LOOKUP,R184C,FALSE)=AD_BLANK,HLOOKUP(RC6,RATESHEET_LOOKUP,R184C,FALSE)=AD_BLANK),AD_BLANKSPACE,HLOOKUP(RC6,RATESHEET_LOOKUP,R184C,FALSE))"
ActiveCell.Offset(1, 0).Select
ActiveCell.FormulaR1C1 = "=IF(OR(HLOOKUP(RC6,RATESHEET_LOOKUP,R184C,FALSE)=AD_ZERO,HLOOKUP(RC6,RATESHEET_LOOKUP,R184C,FALSE)=AD_BLANK,HLOOKUP(RC6,RATESHEET_LOOKUP,R184C,FALSE)=AD_BLANK),AD_BLANKSPACE,HLOOKUP(RC6,RATESHEET_LOOKUP,R184C,FALSE))"
ActiveCell.Offset(1, 0).Select
ActiveCell.FormulaR1C1 = "=IF(OR(HLOOKUP(RC6,RATESHEET_LOOKUP,R184C,FALSE)=AD_ZERO,HLOOKUP(RC6,RATESHEET_LOOKUP,R184C,FALSE)=AD_BLANK,HLOOKUP(RC6,RATESHEET_LOOKUP,R184C,FALSE)=AD_BLANK),AD_BLANKSPACE,HLOOKUP(RC6,RATESHEET_LOOKUP,R184C,FALSE))"
ActiveCell.Offset(1, 0).Select
ActiveCell.FormulaR1C1 = "=IF(OR(HLOOKUP(RC6,RATESHEET_LOOKUP,R184C,FALSE)=AD_ZERO,HLOOKUP(RC6,RATESHEET_LOOKUP,R184C,FALSE)=AD_BLANK,HLOOKUP(RC6,RATESHEET_LOOKUP,R184C,FALSE)=AD_BLANK),AD_BLANKSPACE,HLOOKUP(RC6,RATESHEET_LOOKUP,R184C,FALSE))"
ActiveCell.Offset(1, 0).Select
ActiveCell.FormulaR1C1 = "=IF(OR(HLOOKUP(RC6,RATESHEET_LOOKUP,R184C,FALSE)=AD_ZERO,HLOOKUP(RC6,RATESHEET_LOOKUP,R184C,FALSE)=AD_BLANK,HLOOKUP(RC6,RATESHEET_LOOKUP,R184C,FALSE)=AD_BLANK),AD_BLANKSPACE,HLOOKUP(RC6,RATESHEET_LOOKUP,R184C,FALSE))"

Range("G40").Select
Range(Selection, Selection.Offset(6, 0)).Select
Range(Selection, Selection.Offset(0, 9)).Select
Selection.FillRight
Selection.Copy
Selection.PasteSpecial Paste:=xlPasteValues
Application.CutCopyMode = False
Range("G40").Select

End Sub

Public Sub CustLaneData_DEST()

Application.ScreenUpdating = False

Dim r As Integer

r = Sheet4.Range("R_CUSTLANESCURR").Value

Sheets("Customer Rate Card_" & r).Activate

Range("G47").Select
ActiveCell.FormulaR1C1 = "=IF(OR(HLOOKUP(RC6,RATESHEET_LOOKUP,R184C,FALSE)=AD_ZERO,HLOOKUP(RC6,RATESHEET_LOOKUP,R184C,FALSE)=AD_BLANK,HLOOKUP(RC6,RATESHEET_LOOKUP,R184C,FALSE)=AD_BLANK),AD_BLANKSPACE,HLOOKUP(RC6,RATESHEET_LOOKUP,R184C,FALSE))"
ActiveCell.Offset(1, 0).Select
ActiveCell.FormulaR1C1 = "=IF(OR(HLOOKUP(RC6,RATESHEET_LOOKUP,R184C,FALSE)=AD_ZERO,HLOOKUP(RC6,RATESHEET_LOOKUP,R184C,FALSE)=AD_BLANK,HLOOKUP(RC6,RATESHEET_LOOKUP,R184C,FALSE)=AD_BLANK),AD_BLANKSPACE,HLOOKUP(RC6,RATESHEET_LOOKUP,R184C,FALSE))"
ActiveCell.Offset(1, 0).Select
ActiveCell.FormulaR1C1 = "=IF(OR(HLOOKUP(RC6,RATESHEET_LOOKUP,R184C,FALSE)=AD_ZERO,HLOOKUP(RC6,RATESHEET_LOOKUP,R184C,FALSE)=AD_BLANK,HLOOKUP(RC6,RATESHEET_LOOKUP,R184C,FALSE)=AD_BLANK),AD_BLANKSPACE,HLOOKUP(RC6,RATESHEET_LOOKUP,R184C,FALSE))"
ActiveCell.Offset(1, 0).Select
ActiveCell.FormulaR1C1 = "=IF(OR(HLOOKUP(RC6,RATESHEET_LOOKUP,R184C,FALSE)=AD_ZERO,HLOOKUP(RC6,RATESHEET_LOOKUP,R184C,FALSE)=AD_BLANK,HLOOKUP(RC6,RATESHEET_LOOKUP,R184C,FALSE)=AD_BLANK),AD_BLANKSPACE,HLOOKUP(RC6,RATESHEET_LOOKUP,R184C,FALSE))"
ActiveCell.Offset(1, 0).Select
ActiveCell.FormulaR1C1 = "=IFERROR(IF(OR(HLOOKUP(RC6,RATESHEET_LOOKUP,R184C,FALSE)=AD_ZERO,HLOOKUP(RC6,RATESHEET_LOOKUP,R184C,FALSE)=AD_BLANK,HLOOKUP(RC6,RATESHEET_LOOKUP,R184C,FALSE)=AD_BLANK),AD_BLANKSPACE,HLOOKUP(RC6,RATESHEET_LOOKUP,R184C,FALSE)),AD_BLANKSPACE)"
ActiveCell.Offset(1, 0).Select
ActiveCell.FormulaR1C1 = "=IF(OR(HLOOKUP(RC6,RATESHEET_LOOKUP,R184C,FALSE)=AD_ZERO,HLOOKUP(RC6,RATESHEET_LOOKUP,R184C,FALSE)=AD_BLANK,HLOOKUP(RC6,RATESHEET_LOOKUP,R184C,FALSE)=AD_BLANK),AD_BLANKSPACE,HLOOKUP(RC6,RATESHEET_LOOKUP,R184C,FALSE))"
ActiveCell.Offset(1, 0).Select
ActiveCell.FormulaR1C1 = "=IF(OR(HLOOKUP(RC6,RATESHEET_LOOKUP,R184C,FALSE)=AD_ZERO,HLOOKUP(RC6,RATESHEET_LOOKUP,R184C,FALSE)=AD_BLANK,HLOOKUP(RC6,RATESHEET_LOOKUP,R184C,FALSE)=AD_BLANK),AD_BLANKSPACE,HLOOKUP(RC6,RATESHEET_LOOKUP,R184C,FALSE))"

Range("G47").Select
Range(Selection, Selection.Offset(6, 0)).Select
Range(Selection, Selection.Offset(0, 9)).Select
Selection.FillRight
Selection.Copy
Selection.PasteSpecial Paste:=xlPasteValues
Application.CutCopyMode = False
Range("G54").Select

End Sub

Public Sub CustLaneData_SHIP()

Application.ScreenUpdating = False

Dim r As Integer

r = Sheet4.Range("R_CUSTLANESCURR").Value

Sheets("Customer Rate Card_" & r).Activate

Range("G54").Select
ActiveCell.FormulaR1C1 = "=IF(OR(HLOOKUP(RC6,RATESHEET_LOOKUP,R184C,FALSE)=AD_ZERO,HLOOKUP(RC6,RATESHEET_LOOKUP,R184C,FALSE)=AD_BLANK,HLOOKUP(RC6,RATESHEET_LOOKUP,R184C,FALSE)=AD_BLANK),AD_BLANKSPACE,HLOOKUP(RC6,RATESHEET_LOOKUP,R184C,FALSE))"
ActiveCell.Offset(1, 0).Select
ActiveCell.FormulaR1C1 = "=IF(OR(HLOOKUP(RC6,RATESHEET_LOOKUP,R184C,FALSE)=AD_ZERO,HLOOKUP(RC6,RATESHEET_LOOKUP,R184C,FALSE)=AD_BLANK,HLOOKUP(RC6,RATESHEET_LOOKUP,R184C,FALSE)=AD_BLANK),AD_BLANKSPACE,HLOOKUP(RC6,RATESHEET_LOOKUP,R184C,FALSE))"
ActiveCell.Offset(1, 0).Select
ActiveCell.FormulaR1C1 = "=IF(OR(HLOOKUP(RC6,RATESHEET_LOOKUP,R184C,FALSE)=AD_ZERO,HLOOKUP(RC6,RATESHEET_LOOKUP,R184C,FALSE)=AD_BLANK,HLOOKUP(RC6,RATESHEET_LOOKUP,R184C,FALSE)=AD_BLANK),AD_BLANKSPACE,HLOOKUP(RC6,RATESHEET_LOOKUP,R184C,FALSE))"
ActiveCell.Offset(1, 0).Select
ActiveCell.FormulaR1C1 = "=IF(OR(HLOOKUP(RC6,RATESHEET_LOOKUP,R184C,FALSE)=AD_ZERO,HLOOKUP(RC6,RATESHEET_LOOKUP,R184C,FALSE)=AD_BLANK,HLOOKUP(RC6,RATESHEET_LOOKUP,R184C,FALSE)=AD_BLANK),AD_BLANKSPACE,HLOOKUP(RC6,RATESHEET_LOOKUP,R184C,FALSE))"
ActiveCell.Offset(1, 0).Select
ActiveCell.FormulaR1C1 = "=IFERROR(IF(OR(HLOOKUP(RC6,RATESHEET_LOOKUP,R184C,FALSE)=AD_ZERO,HLOOKUP(RC6,RATESHEET_LOOKUP,R184C,FALSE)=AD_BLANK,HLOOKUP(RC6,RATESHEET_LOOKUP,R184C,FALSE)=AD_BLANK),AD_BLANKSPACE,HLOOKUP(RC6,RATESHEET_LOOKUP,R184C,FALSE)),AD_BLANKSPACE)"
ActiveCell.Offset(1, 0).Select
ActiveCell.FormulaR1C1 = "=IF(OR(HLOOKUP(RC6,RATESHEET_LOOKUP,R184C,FALSE)=AD_ZERO,HLOOKUP(RC6,RATESHEET_LOOKUP,R184C,FALSE)=AD_BLANK,HLOOKUP(RC6,RATESHEET_LOOKUP,R184C,FALSE)=AD_BLANK),AD_BLANKSPACE,HLOOKUP(RC6,RATESHEET_LOOKUP,R184C,FALSE))"
ActiveCell.Offset(1, 0).Select
ActiveCell.FormulaR1C1 = "=IF(OR(HLOOKUP(RC6,RATESHEET_LOOKUP,R184C,FALSE)=AD_ZERO,HLOOKUP(RC6,RATESHEET_LOOKUP,R184C,FALSE)=AD_BLANK,HLOOKUP(RC6,RATESHEET_LOOKUP,R184C,FALSE)=AD_BLANK),AD_BLANKSPACE,HLOOKUP(RC6,RATESHEET_LOOKUP,R184C,FALSE))"
ActiveCell.Offset(1, 0).Select
ActiveCell.FormulaR1C1 = "=IF(OR(HLOOKUP(RC6,RATESHEET_LOOKUP,R184C,FALSE)=AD_ZERO,HLOOKUP(RC6,RATESHEET_LOOKUP,R184C,FALSE)=AD_BLANK,HLOOKUP(RC6,RATESHEET_LOOKUP,R184C,FALSE)=AD_BLANK),AD_BLANKSPACE,HLOOKUP(RC6,RATESHEET_LOOKUP,R184C,FALSE))"

Range("G54").Select
Range(Selection, Selection.Offset(7, 0)).Select
Range(Selection, Selection.Offset(0, 9)).Select
Selection.FillRight
Selection.Copy
Selection.PasteSpecial Paste:=xlPasteValues
Application.CutCopyMode = False
Range("G54").Select

End Sub

Public Sub CustLaneData_ORIGINCHARGE()

Application.ScreenUpdating = False

Dim r As Integer

r = Sheet4.Range("R_CUSTLANESCURR").Value

Sheets("Customer Rate Card_" & r).Activate

Range("G62").Select
ActiveCell.FormulaR1C1 = "=IF(OR(HLOOKUP(RC6,RATESHEET_LOOKUP,R184C,FALSE)=AD_ZERO,HLOOKUP(RC6,RATESHEET_LOOKUP,R184C,FALSE)=AD_BLANK,HLOOKUP(RC6,RATESHEET_LOOKUP,R184C,FALSE)=AD_BLANK),AD_BLANKSPACE,HLOOKUP(RC6,RATESHEET_LOOKUP,R184C,FALSE))"
ActiveCell.Offset(1, 0).Select
ActiveCell.FormulaR1C1 = "=IF((VLOOKUP(R33C,RATESHEET_LOOKUP,RC2,FALSE))=AD_BLANK,AD_BLANKSPACE,VLOOKUP(R33C,RATESHEET_LOOKUP,RC2,FALSE))"
ActiveCell.Offset(1, 0).Select
ActiveCell.FormulaR1C1 = "=IF((VLOOKUP(R33C,RATESHEET_LOOKUP,RC2,FALSE))=AD_BLANK,AD_BLANKSPACE,VLOOKUP(R33C,RATESHEET_LOOKUP,RC2,FALSE))"
ActiveCell.Offset(1, 0).Select
ActiveCell.FormulaR1C1 = "=IF((VLOOKUP(R33C,RATESHEET_LOOKUP,RC2,FALSE))=AD_BLANK,AD_BLANKSPACE,VLOOKUP(R33C,RATESHEET_LOOKUP,RC2,FALSE))"
ActiveCell.Offset(1, 0).Select
ActiveCell.FormulaR1C1 = "=IF((VLOOKUP(R33C,RATESHEET_LOOKUP,RC2,FALSE))=AD_BLANK,AD_BLANKSPACE,VLOOKUP(R33C,RATESHEET_LOOKUP,RC2,FALSE))"
ActiveCell.Offset(1, 0).Select
ActiveCell.FormulaR1C1 = "=IF((VLOOKUP(R33C,RATESHEET_LOOKUP,RC2,FALSE))=AD_BLANK,AD_BLANKSPACE,VLOOKUP(R33C,RATESHEET_LOOKUP,RC2,FALSE))"
ActiveCell.Offset(1, 0).Select
ActiveCell.FormulaR1C1 = "=IF((VLOOKUP(R33C,RATESHEET_LOOKUP,RC2,FALSE))=AD_BLANK,AD_BLANKSPACE,VLOOKUP(R33C,RATESHEET_LOOKUP,RC2,FALSE))"
ActiveCell.Offset(1, 0).Select
ActiveCell.FormulaR1C1 = "=IF((VLOOKUP(R33C,RATESHEET_LOOKUP,RC2,FALSE))=AD_BLANK,AD_BLANKSPACE,VLOOKUP(R33C,RATESHEET_LOOKUP,RC2,FALSE))"
ActiveCell.Offset(1, 0).Select
ActiveCell.FormulaR1C1 = "=IF((VLOOKUP(R33C,RATESHEET_LOOKUP,RC2,FALSE))=AD_BLANK,AD_BLANKSPACE,VLOOKUP(R33C,RATESHEET_LOOKUP,RC2,FALSE))"
ActiveCell.Offset(1, 0).Select
ActiveCell.FormulaR1C1 = "=IF((VLOOKUP(R33C,RATESHEET_LOOKUP,RC2,FALSE))=AD_BLANK,AD_BLANKSPACE,VLOOKUP(R33C,RATESHEET_LOOKUP,RC2,FALSE))"
ActiveCell.Offset(1, 0).Select
ActiveCell.FormulaR1C1 = "=IF((VLOOKUP(R33C,RATESHEET_LOOKUP,RC2,FALSE))=AD_BLANK,AD_BLANKSPACE,VLOOKUP(R33C,RATESHEET_LOOKUP,RC2,FALSE))"
ActiveCell.Offset(1, 0).Select
ActiveCell.FormulaR1C1 = "=IF((VLOOKUP(R33C,RATESHEET_LOOKUP,RC2,FALSE))=AD_BLANK,AD_BLANKSPACE,VLOOKUP(R33C,RATESHEET_LOOKUP,RC2,FALSE))"
ActiveCell.Offset(1, 0).Select
ActiveCell.FormulaR1C1 = "=IF((VLOOKUP(R33C,RATESHEET_LOOKUP,RC2,FALSE))=AD_BLANK,AD_BLANKSPACE,VLOOKUP(R33C,RATESHEET_LOOKUP,RC2,FALSE))"
ActiveCell.Offset(1, 0).Select
ActiveCell.FormulaR1C1 = "=IF((VLOOKUP(R33C,RATESHEET_LOOKUP,RC2,FALSE))=AD_BLANK,AD_BLANKSPACE,VLOOKUP(R33C,RATESHEET_LOOKUP,RC2,FALSE))"
ActiveCell.Offset(1, 0).Select
ActiveCell.FormulaR1C1 = "=IF((VLOOKUP(R33C,RATESHEET_LOOKUP,RC2,FALSE))=AD_BLANK,AD_BLANKSPACE,VLOOKUP(R33C,RATESHEET_LOOKUP,RC2,FALSE))"
ActiveCell.Offset(1, 0).Select
ActiveCell.FormulaR1C1 = "=IF((VLOOKUP(R33C,RATESHEET_LOOKUP,RC2,FALSE))=AD_BLANK,AD_BLANKSPACE,VLOOKUP(R33C,RATESHEET_LOOKUP,RC2,FALSE))"
ActiveCell.Offset(1, 0).Select
ActiveCell.FormulaR1C1 = "=IF((VLOOKUP(R33C,RATESHEET_LOOKUP,RC2,FALSE))=AD_BLANK,AD_BLANKSPACE,VLOOKUP(R33C,RATESHEET_LOOKUP,RC2,FALSE))"
ActiveCell.Offset(1, 0).Select
ActiveCell.FormulaR1C1 = "=IF((VLOOKUP(R33C,RATESHEET_LOOKUP,RC2,FALSE))=AD_BLANK,AD_BLANKSPACE,VLOOKUP(R33C,RATESHEET_LOOKUP,RC2,FALSE))"
ActiveCell.Offset(1, 0).Select
ActiveCell.FormulaR1C1 = "=IF((VLOOKUP(R33C,RATESHEET_LOOKUP,RC2,FALSE))=AD_BLANK,AD_BLANKSPACE,VLOOKUP(R33C,RATESHEET_LOOKUP,RC2,FALSE))"
ActiveCell.Offset(1, 0).Select
ActiveCell.FormulaR1C1 = "=IF((VLOOKUP(R33C,RATESHEET_LOOKUP,RC2,FALSE))=AD_BLANK,AD_BLANKSPACE,VLOOKUP(R33C,RATESHEET_LOOKUP,RC2,FALSE))"
ActiveCell.Offset(1, 0).Select
ActiveCell.FormulaR1C1 = "=IF((VLOOKUP(R33C,RATESHEET_LOOKUP,RC2,FALSE))=AD_BLANK,AD_BLANKSPACE,VLOOKUP(R33C,RATESHEET_LOOKUP,RC2,FALSE))"
ActiveCell.Offset(1, 0).Select
ActiveCell.FormulaR1C1 = "=IF((VLOOKUP(R33C,RATESHEET_LOOKUP,RC2,FALSE))=AD_BLANK,AD_BLANKSPACE,VLOOKUP(R33C,RATESHEET_LOOKUP,RC2,FALSE))"
ActiveCell.Offset(1, 0).Select
ActiveCell.FormulaR1C1 = "=IF((VLOOKUP(R33C,RATESHEET_LOOKUP,RC2,FALSE))=AD_BLANK,AD_BLANKSPACE,VLOOKUP(R33C,RATESHEET_LOOKUP,RC2,FALSE))"
ActiveCell.Offset(1, 0).Select
ActiveCell.FormulaR1C1 = "=IF(OR(HLOOKUP(RC6,RATESHEET_LOOKUP,R184C,FALSE)=AD_ZERO,HLOOKUP(RC6,RATESHEET_LOOKUP,R184C,FALSE)=AD_BLANK,HLOOKUP(RC6,RATESHEET_LOOKUP,R184C,FALSE)=AD_BLANK),AD_BLANKSPACE,HLOOKUP(RC6,RATESHEET_LOOKUP,R184C,FALSE))"

Range("G62").Select
Range(Selection, Selection.Offset(23, 0)).Select
Range(Selection, Selection.Offset(0, 9)).Select
Selection.FillRight
Selection.Copy
Selection.PasteSpecial Paste:=xlPasteValues
Application.CutCopyMode = False
Range("G62").Select

End Sub

Public Sub CustLaneData_DESTCHARGE()

Application.ScreenUpdating = False

Dim r As Integer

r = Sheet4.Range("R_CUSTLANESCURR").Value

Sheets("Customer Rate Card_" & r).Activate

Range("G160").Select
ActiveCell.FormulaR1C1 = "=IF(OR(HLOOKUP(RC6,RATESHEET_LOOKUP,R184C,FALSE)=AD_ZERO,HLOOKUP(RC6,RATESHEET_LOOKUP,R184C,FALSE)=AD_BLANK,HLOOKUP(RC6,RATESHEET_LOOKUP,R184C,FALSE)=AD_BLANK),AD_BLANKSPACE,HLOOKUP(RC6,RATESHEET_LOOKUP,R184C,FALSE))"
ActiveCell.Offset(1, 0).Select
ActiveCell.FormulaR1C1 = "=IF((VLOOKUP(R33C,RATESHEET_LOOKUP,RC2,FALSE))=AD_BLANK,AD_BLANKSPACE,VLOOKUP(R33C,RATESHEET_LOOKUP,RC2,FALSE))"
ActiveCell.Offset(1, 0).Select
ActiveCell.FormulaR1C1 = "=IF((VLOOKUP(R33C,RATESHEET_LOOKUP,RC2,FALSE))=AD_BLANK,AD_BLANKSPACE,VLOOKUP(R33C,RATESHEET_LOOKUP,RC2,FALSE))"
ActiveCell.Offset(1, 0).Select
ActiveCell.FormulaR1C1 = "=IF((VLOOKUP(R33C,RATESHEET_LOOKUP,RC2,FALSE))=AD_BLANK,AD_BLANKSPACE,VLOOKUP(R33C,RATESHEET_LOOKUP,RC2,FALSE))"
ActiveCell.Offset(1, 0).Select
ActiveCell.FormulaR1C1 = "=IF((VLOOKUP(R33C,RATESHEET_LOOKUP,RC2,FALSE))=AD_BLANK,AD_BLANKSPACE,VLOOKUP(R33C,RATESHEET_LOOKUP,RC2,FALSE))"
ActiveCell.Offset(1, 0).Select
ActiveCell.FormulaR1C1 = "=IF((VLOOKUP(R33C,RATESHEET_LOOKUP,RC2,FALSE))=AD_BLANK,AD_BLANKSPACE,VLOOKUP(R33C,RATESHEET_LOOKUP,RC2,FALSE))"
ActiveCell.Offset(1, 0).Select
ActiveCell.FormulaR1C1 = "=IF((VLOOKUP(R33C,RATESHEET_LOOKUP,RC2,FALSE))=AD_BLANK,AD_BLANKSPACE,VLOOKUP(R33C,RATESHEET_LOOKUP,RC2,FALSE))"
ActiveCell.Offset(1, 0).Select
ActiveCell.FormulaR1C1 = "=IF((VLOOKUP(R33C,RATESHEET_LOOKUP,RC2,FALSE))=AD_BLANK,AD_BLANKSPACE,VLOOKUP(R33C,RATESHEET_LOOKUP,RC2,FALSE))"
ActiveCell.Offset(1, 0).Select
ActiveCell.FormulaR1C1 = "=IF((VLOOKUP(R33C,RATESHEET_LOOKUP,RC2,FALSE))=AD_BLANK,AD_BLANKSPACE,VLOOKUP(R33C,RATESHEET_LOOKUP,RC2,FALSE))"
ActiveCell.Offset(1, 0).Select
ActiveCell.FormulaR1C1 = "=IF((VLOOKUP(R33C,RATESHEET_LOOKUP,RC2,FALSE))=AD_BLANK,AD_BLANKSPACE,VLOOKUP(R33C,RATESHEET_LOOKUP,RC2,FALSE))"
ActiveCell.Offset(1, 0).Select
ActiveCell.FormulaR1C1 = "=IF((VLOOKUP(R33C,RATESHEET_LOOKUP,RC2,FALSE))=AD_BLANK,AD_BLANKSPACE,VLOOKUP(R33C,RATESHEET_LOOKUP,RC2,FALSE))"
ActiveCell.Offset(1, 0).Select
ActiveCell.FormulaR1C1 = "=IF((VLOOKUP(R33C,RATESHEET_LOOKUP,RC2,FALSE))=AD_BLANK,AD_BLANKSPACE,VLOOKUP(R33C,RATESHEET_LOOKUP,RC2,FALSE))"
ActiveCell.Offset(1, 0).Select
ActiveCell.FormulaR1C1 = "=IF((VLOOKUP(R33C,RATESHEET_LOOKUP,RC2,FALSE))=AD_BLANK,AD_BLANKSPACE,VLOOKUP(R33C,RATESHEET_LOOKUP,RC2,FALSE))"
ActiveCell.Offset(1, 0).Select
ActiveCell.FormulaR1C1 = "=IF((VLOOKUP(R33C,RATESHEET_LOOKUP,RC2,FALSE))=AD_BLANK,AD_BLANKSPACE,VLOOKUP(R33C,RATESHEET_LOOKUP,RC2,FALSE))"
ActiveCell.Offset(1, 0).Select
ActiveCell.FormulaR1C1 = "=IF((VLOOKUP(R33C,RATESHEET_LOOKUP,RC2,FALSE))=AD_BLANK,AD_BLANKSPACE,VLOOKUP(R33C,RATESHEET_LOOKUP,RC2,FALSE))"
ActiveCell.Offset(1, 0).Select
ActiveCell.FormulaR1C1 = "=IF((VLOOKUP(R33C,RATESHEET_LOOKUP,RC2,FALSE))=AD_BLANK,AD_BLANKSPACE,VLOOKUP(R33C,RATESHEET_LOOKUP,RC2,FALSE))"
ActiveCell.Offset(1, 0).Select
ActiveCell.FormulaR1C1 = "=IF((VLOOKUP(R33C,RATESHEET_LOOKUP,RC2,FALSE))=AD_BLANK,AD_BLANKSPACE,VLOOKUP(R33C,RATESHEET_LOOKUP,RC2,FALSE))"
ActiveCell.Offset(1, 0).Select
ActiveCell.FormulaR1C1 = "=IF((VLOOKUP(R33C,RATESHEET_LOOKUP,RC2,FALSE))=AD_BLANK,AD_BLANKSPACE,VLOOKUP(R33C,RATESHEET_LOOKUP,RC2,FALSE))"
ActiveCell.Offset(1, 0).Select
ActiveCell.FormulaR1C1 = "=IF((VLOOKUP(R33C,RATESHEET_LOOKUP,RC2,FALSE))=AD_BLANK,AD_BLANKSPACE,VLOOKUP(R33C,RATESHEET_LOOKUP,RC2,FALSE))"
ActiveCell.Offset(1, 0).Select
ActiveCell.FormulaR1C1 = "=IF((VLOOKUP(R33C,RATESHEET_LOOKUP,RC2,FALSE))=AD_BLANK,AD_BLANKSPACE,VLOOKUP(R33C,RATESHEET_LOOKUP,RC2,FALSE))"
ActiveCell.Offset(1, 0).Select
ActiveCell.FormulaR1C1 = "=IF(OR(HLOOKUP(RC6,RATESHEET_LOOKUP,R184C,FALSE)=AD_ZERO,HLOOKUP(RC6,RATESHEET_LOOKUP,R184C,FALSE)=AD_BLANK,HLOOKUP(RC6,RATESHEET_LOOKUP,R184C,FALSE)=AD_BLANK),AD_BLANKSPACE,HLOOKUP(RC6,RATESHEET_LOOKUP,R184C,FALSE))"

Range("G160").Select
Range(Selection, Selection.Offset(20, 0)).Select
Range(Selection, Selection.Offset(0, 9)).Select
Selection.FillRight
Selection.Copy
Selection.PasteSpecial Paste:=xlPasteValues
Application.CutCopyMode = False
Range("G160").Select

End Sub

Public Sub CustLaneData_MLCHARGE()

Application.ScreenUpdating = False

Dim r As Integer

r = Sheet4.Range("R_CUSTLANESCURR").Value

Sheets("Customer Rate Card_" & r).Activate

Range("G86").Select

ActiveCell.FormulaR1C1 = "=IF(OR(HLOOKUP(RC6,RATESHEET_LOOKUP,R184C,FALSE)=AD_ZERO,HLOOKUP(RC6,RATESHEET_LOOKUP,R184C,FALSE)=AD_BLANK,HLOOKUP(RC6,RATESHEET_LOOKUP,R184C,FALSE)=AD_BLANK),AD_BLANKSPACE,HLOOKUP(RC6,RATESHEET_LOOKUP,R184C,FALSE))"
ActiveCell.Offset(1, 0).Select

For Z = 1 To 73

ActiveCell.FormulaR1C1 = "=IF((VLOOKUP(R33C,RATESHEET_LOOKUP,RC2,FALSE))=AD_BLANK,AD_BLANKSPACE,VLOOKUP(R33C,RATESHEET_LOOKUP,RC2,FALSE))"
ActiveCell.Offset(1, 0).Select

Next Z

Range("G86").Select
Range(Selection, Selection.Offset(73, 0)).Select
Range(Selection, Selection.Offset(0, 9)).Select
Selection.FillRight
Selection.Copy
Selection.PasteSpecial Paste:=xlPasteValues
Application.CutCopyMode = False
Range("G86").Select

End Sub

Public Sub RateRefCleaner()

Application.ScreenUpdating = False

Dim r As Integer

r = Sheet4.Range("R_CUSTLANESCURR").Value

Sheets("Customer Rate Card_" & r).Activate

ActiveSheet.Range("G33").Select
Range(Selection, Selection.Offset(0, 9)).Select
Range(Selection, Selection.Offset(148, 0)).Select
        
    Selection.Replace What:=Sheet1.Range("AD_REF").Value, Replacement:=Sheet1.Range("AD_BLANKSPACE").Value, LookAt:=xlWhole, _
        SearchOrder:=xlByRows, MatchCase:=True, SearchFormat:=False, _
        ReplaceFormat:=False
        
ActiveSheet.Range("F7").Select
        
End Sub


Public Sub LineItemRefine()

Application.ScreenUpdating = False

Dim r As Integer

r = Sheet4.Range("R_CUSTLANESCURR").Value

Sheets("Customer Rate Card_" & r).Activate

LineItemReveal

Dim a As Range
For Each a In Range("A63:A84")
If a.Value = 0 Then
Rows(a.Row).Hidden = True
Else
Rows(a.Row).Hidden = False
End If
Next a

Dim b As Range
For Each b In Range("A87:A159")
If b.Value = 0 Then
Rows(b.Row).Hidden = True
Else
Rows(b.Row).Hidden = False
End If
Next b

Dim c As Range
For Each c In Range("A161:A179")
If c.Value = 0 Then
Rows(c.Row).Hidden = True
Else
Rows(c.Row).Hidden = False
End If
Next c

End Sub

Public Sub LineItemReveal()

Application.ScreenUpdating = False

Range("A62:A85").Rows.Hidden = False
Range("A86:A159").Rows.Hidden = False
Range("A160:A180").Rows.Hidden = False

End Sub

Public Sub CustRateCardEmail()

Application.ScreenUpdating = False

'Working in 2000-2010
    Dim FileExtStr As String
    Dim FileFormatNum As Long
    Dim Sourcewb As Workbook
    Dim Destwb As Workbook
    Dim TempFilePath As String
    Dim TempFileName As String
    Dim OutApp As Object
    Dim OutMail As Object
    Dim sh As Worksheet
    Dim TheActiveWindow As Window
    Dim TempWindow As Window

    With Application
        .ScreenUpdating = False
        .EnableEvents = False
    End With

    Set Sourcewb = ActiveWorkbook
    
'    StRep = Array("Customer Rate Card_1")

    Dim Group_Sheets As Worksheet
    Dim My_Array As Variant

    ReDim My_Array(0)
    For Each Group_Sheets In ThisWorkbook.Worksheets
        If Left(Group_Sheets.Name, 19) = "Customer Rate Card_" Then
            My_Array(UBound(My_Array)) = Group_Sheets.Name
            ReDim Preserve My_Array(UBound(My_Array) + 1)
        End If
    Next
    ReDim Preserve My_Array(UBound(My_Array) - 1)

''    Worksheets(My_Array).Select

    With Sourcewb
        Set TheActiveWindow = ActiveWindow
        Set TempWindow = .NewWindow
        Sheets(My_Array).Copy
               
    End With

    TempWindow.Close

    Set Destwb = ActiveWorkbook

    With Destwb
        If val(Application.Version) < 12 Then
            FileExtStr = ".xls": FileFormatNum = -4143
        Else
            If Sourcewb.Name = .Name Then
                With Application
                    .ScreenUpdating = True
                    .EnableEvents = True
                End With
                MsgBox "Your answer is NO in the security dialog"
                Exit Sub
            Else
                Select Case Sourcewb.FileFormat
                Case 51: FileExtStr = ".xlsx": FileFormatNum = 51
                Case 52:
                    If .HasVBProject Then
                        FileExtStr = ".xlsm": FileFormatNum = 52
                    Else
                        FileExtStr = ".xlsx": FileFormatNum = 51
                    End If
                Case 56: FileExtStr = ".xls": FileFormatNum = 56
                Case Else: FileExtStr = ".xlsb": FileFormatNum = 50
                End Select
            End If
        End If
    End With
''
      For Each sh In Destwb.Worksheets
      sh.Select
      With sh.UsedRange
            .Cells.Copy
            .Cells.PasteSpecial xlPasteValuesAndNumberFormats
            .Cells(1).Select
      End With
      Application.CutCopyMode = False
           
     ZZ
           
          Destwb.Worksheets(1).Select
      Next sh

    TempFilePath = Environ$("temp") & "\"
    TempFileName = "Customer Rate Card - " & Sheet6.Range("CUST_NAME").Text & " - " & Format(Now, "mmm yyyy")

    Set OutApp = CreateObject("Outlook.Application")
    Set OutMail = OutApp.CreateItem(0)

    With Destwb
        .SaveAs TempFilePath & TempFileName & FileExtStr, _
                FileFormat:=FileFormatNum
        On Error Resume Next
        With OutMail
            .To = ""
            .CC = ""
            .BCC = ""
            .Subject = "Customer Rate Summary - " & Sheet6.Range("CUST_NAME").Text & " - " & "Rates Expiry Date: " & Sheet6.Range("CUST_EXPIRY").Text
            .body = EmailContent2.TextBox1.Text
            .Attachments.Add Destwb.FullName
            .Display
        End With
        On Error GoTo 0
        .Close SaveChanges:=False
    End With

    Kill TempFilePath & TempFileName & FileExtStr

    Set OutMail = Nothing
    Set OutApp = Nothing

    With Application
        .ScreenUpdating = True
        .EnableEvents = True
    End With
    
End Sub

Public Sub CustRateCardCleaner()

Application.ScreenUpdating = False

Sheets("Customer Rate Card_1").Activate

LineItemReveal

Range("F7:F10").ClearContents
Range("G33:P180").ClearContents

Range("F7").Select

ZZ

Sheets("Customer Rate Card_1").Visible = False
Sheet4.Activate
Range("A7").Select

End Sub

Public Sub CustRateCardArrayCleaner()

Application.ScreenUpdating = False
Application.DisplayAlerts = False

Dim x As Integer
Dim y As Integer

x = Sheet4.Range("R_CUSTLANES").Value

For y = 2 To x

Sheets("Customer Rate Card_" & y).Delete

Next y

Application.DisplayAlerts = False

End Sub
Attribute VB_Name = "EmailContent"
Attribute VB_Base = "0{27F806BF-D7A4-4221-9267-13DF46BB4F39}{AC69400F-70F2-4E41-9C0E-32574BB7E63B}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Attribute VB_Name = "EmailContent2"
Attribute VB_Base = "0{249D217D-37DC-4B9D-AE2C-4F3C6A8855C5}{EE36AC3A-7AA4-49FF-BB4E-34B8734212E3}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Private Sub TextBox1_Change()

End Sub
Attribute VB_Name = "K_OutputFileGeneration"
Sub CPF_File_Outputs()

Application.ScreenUpdating = False

Sheet1.Range("F22").ClearContents
Sheet1.Range("F23").ClearContents

Sheet1.Range("F22").Select
ActiveCell.FormulaR1C1 = "=now()"
Selection.Copy
Selection.PasteSpecial Paste:=xlPasteValues

CPF_ATA_aIR
CPF_MSGT
CPF_SALESEX
CPF_ATA_IPT

Msg = "THIS OPERATION HAS BEEN COMPLETED"
Msg = Msg & vbNewLine & vbNewLine
Msg = Msg & " The required output files have now been saved to your desktop "
Msg = Msg & vbNewLine
Msg = Msg & vbNewLine & " Thank you for your patience "
Msg = Msg & vbNewLine & vbNewLine
Msg = Msg & "If you experience any technical issues or "
Msg = Msg & vbNewLine & " for further details please contact UK.Sales@dhl.com"
Title = "ALL OUTPUT FILES REQUIRED - SUCCESSFULLY SAVED TO DESKTOP"
Ans = MsgBox(Msg, vbInformation, Title)

Sheet1.Activate

Sheet1.Range("F23").Select
ActiveCell.FormulaR1C1 = "=now()"
Selection.Copy
Selection.PasteSpecial Paste:=xlPasteValues
Application.CutCopyMode = False

End Sub

Sub CPF_ATA_aIR()

Application.ScreenUpdating = False

' -----------------------------------------------

    Dim val As String
  Dim start As Integer
  Dim finish As Integer
  
  start = InStr(1, ThisWorkbook.Path, "Users\") + 6
  finish = InStr(start, ThisWorkbook.Path, "\")
  
  'val = Mid(ThisWorkbook.Path, start, finish - start)
  val = LCase(Environ("USERNAME"))

'   Debug.Print val

' -----------------------------------------------

Sheets("ATA - AIR").Activate
ActiveSheet.Select
ActiveSheet.Copy
ActiveSheet.SaveAs Filename:="C:\Users\" & val & "\" & "Desktop" & "\" & "DGF UK ACC - ATA - AIR tool output_" & Format(Now, "YYMMDDHHMMSS") & ".xlsx"
ActiveWorkbook.Close

' -----------------------------------------------

Sheet1.Activate

End Sub
Attribute VB_Name = "Module1"
Sub Macro1()
Attribute Macro1.VB_ProcData.VB_Invoke_Func = " \n14"
Application.ScreenUpdating = True
End Sub
Attribute VB_Name = "Module2"
Sub Arraybuilder()



End Sub

Sub milkshake()
    Dim asWS() As String, nWS As Integer
    Dim ws As Worksheet
     
    For Each ws In Worksheets
        If Left(ws.Name, 19) = "Customer Rate Card_" Then
            nWS = nWS + 1
            ReDim Preserve asWS(1 To nWS)
            asWS(nWS) = ws.Name
        End If
    Next

Sheets(asWS).Select
    
End Sub

Public Sub Select_Group_Worksheets()
     
    Dim Group_Sheets As Worksheet
    Dim My_Array As Variant
     
    ReDim My_Array(0)
    For Each Group_Sheets In ThisWorkbook.Worksheets
        If Left(Group_Sheets.Name, 19) = "Customer Rate Card_" Then
            My_Array(UBound(My_Array)) = Group_Sheets.Name
            ReDim Preserve My_Array(UBound(My_Array) + 1)
        End If
    Next
    ReDim Preserve My_Array(UBound(My_Array) - 1)
     
    Worksheets(My_Array).Select
     
End Sub

Attribute VB_Name = "Module4"
Sub testz()

CustInitialData
CustLaneData_A
CustLaneData_ORIGIN
CustLaneData_DEST
CustLaneData_ORIGINCHARGE
CustLaneData_MLCHARGE
CustLaneData_DESTCHARGE

TabPageSetUp

LineItemRefine
CustRateCardEmail
CustRateCardCleaner

Sheet4.Activate
Range("F7").Select

End Sub
Attribute VB_Name = "PasswordInput"
Attribute VB_Base = "0{A4712BC8-0873-4C32-AD65-7B964B41B804}{77A532CF-973D-458E-A5BB-D93633BA4094}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Private Sub TextBox1_Exit(ByVal Cancel As MSForms.ReturnBoolean)

'Sheets("AFR Calculator").Range("AFR_PWORDMATCH").Calculate
'
'If Sheets("AFR Calculator").Range("AFR_EPPWORD").Value = Sheets("AFR Calculator").Range("AFR_VPPWORD").Value Then
'
'Sheets("AFR Calculator").Range("Y17").Value = "1"
'
'Else
'
'Sheets("AFR Calculator").Range("Y17").Value = "0"
'
'End If

End Sub

Private Sub userform_initialize()

PasswordInput.BackColor = RGB(255, 204, 0)
PasswordInput.BorderStyle = fmBorderStyleSingle
PasswordInput.BorderColor = RGB(212, 5, 17)

PasswordInput.Label1.Caption = "Please enter password:"
PasswordInput.Label1.Font = "Calibri"
PasswordInput.Label1.FontSize = "11"
PasswordInput.Label1.Font.Bold = True
PasswordInput.Label1.BackColor = RGB(255, 204, 0)
PasswordInput.Label1.ForeColor = RGB(212, 5, 17)

PasswordInput.CommandButton1.Caption = "Click to submit password"
PasswordInput.CommandButton1.Font = "Calibri"
PasswordInput.CommandButton1.FontSize = "8"
PasswordInput.CommandButton1.Font.Bold = True
PasswordInput.CommandButton1.BackColor = RGB(255, 255, 153)
PasswordInput.CommandButton1.ForeColor = RGB(212, 5, 17)

Sheet1.Range("AFR_EPPWORD").Value = ""

End Sub
Private Sub UserForm_QueryClose(Cancel As Integer, CloseMode As Integer)
       
  If CloseMode = vbFormControlMenu Then

Msg = "TO EXIT THE PASSWORD ENTRY SCREEN YOU MUST DO ONE OF THE FOLLOWING:"
Msg = Msg & vbNewLine & vbNewLine
Msg = Msg & "1. Enter a correct password "
Msg = Msg & vbNewLine & "2. Use the cancel button (after entering an incorrect password "
Msg = Msg & vbNewLine
Title = "EXITING THE PASSWORD ENTRY SCREEN"
Ans1 = MsgBox(Msg, vbInformation, Title)

        Cancel = True
    End If

End Sub

Private Sub CommandButton1_Click()

If Sheets("AFR Calculator").Range("AFR_PWORDMATCH").Value = 1 Then

DimEntry.Show
PasswordInput.Hide
Sheets("AFR Calculator").Range("AFR_EPPWORD").Value = " "
PasswordInput.TextBox1.Value = " "

Else

If vbCancel = MsgBox("Password incorrect - please try again", vbOKCancel, "INCORRECT PASSWORD ENTRY") Then

Sheets("AFR Calculator").Range("AFR_EPPWORD").Value = " "
PasswordInput.TextBox1.Value = " "
Unload PasswordInput

Sheet1.Activate
ZZ

Exit Sub

Else

Unload PasswordInput
PasswordInput.Show
Sheets("AFR Calculator").Range("AFR_EPPWORD").Value = " "
PasswordInput.TextBox1.Value = " "
Sheets("AFR Calculator").Range("AFR_PWORDMATCH").Calculate

End If
End If

End Sub

Private Sub TextBox1_Afterupdate()

Sheets("AFR Calculator").Range("AFR_PWORDMATCH").Calculate
Sheets("AFR Calculator").Range("AFR_EPPWORD").Value = PasswordInput.TextBox1.Value
Sheets("AFR Calculator").Range("AFR_PWORDMATCH").Calculate

End Sub


Attribute VB_Name = "PasswordInput1"
Attribute VB_Base = "0{B41B10D0-CF7E-4BF3-B12A-8BB9F3AC36DD}{E40A979F-525F-4DAD-BD23-9FFCB1C47A9F}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Private Sub CommandButton1_Click()

If Sheets("AFR Calculator").Range("AFR_PWORDMATCHA").Value = 1 Then

Unload PasswordInput1
Sheets("AFR Calculator").Range("AFR_UNLOCKPPWORDA").Value = " "
PasswordInput1.TextBox1.Value = " "

    ActiveWindow.DisplayHeadings = False
    ActiveWindow.DisplayGridlines = False
    
    ActiveSheet.Unprotect Password:="DgfCRC2102"
ActiveSheet.EnableSelection = xlNoRestrictions

Else

If vbCancel = MsgBox("Password incorrect - please try again", vbOKCancel, "INCORRECT PASSWORD ENTRY") Then

Sheets("AFR Calculator").Range("AFR_UNLOCKPPWORDA").Value = " "
PasswordInput1.TextBox1.Value = " "
Unload PasswordInput1

Exit Sub

Else

Unload PasswordInput1
PasswordInput1.Show
Sheets("AFR Calculator").Range("AFR_UNLOCKPPWORDA").Value = " "
PasswordInput1.TextBox1.Value = " "
Sheets("AFR Calculator").Range("AFR_PWORDMATCHA").Calculate

'On Error GoTo NOTEXTBOXESTOUNLOCK

ActiveSheet.TextBoxes.Locked = False
ActiveSheet.TextBoxes.LockedText = False

End If
End If


End Sub

Private Sub userform_initialize()

PasswordInput1.BackColor = RGB(255, 204, 0)
PasswordInput1.BorderStyle = fmBorderStyleSingle
PasswordInput1.BorderColor = RGB(212, 5, 17)

PasswordInput1.Label1.Caption = "Please enter password:"
PasswordInput1.Label1.Font = "Calibri"
PasswordInput1.Label1.FontSize = "11"
PasswordInput1.Label1.Font.Bold = True
PasswordInput1.Label1.BackColor = RGB(255, 204, 0)
PasswordInput1.Label1.ForeColor = RGB(212, 5, 17)

PasswordInput1.CommandButton1.Caption = "Click to submit password"
PasswordInput1.CommandButton1.Font = "Calibri"
PasswordInput1.CommandButton1.FontSize = "8"
PasswordInput1.CommandButton1.Font.Bold = True
PasswordInput1.CommandButton1.BackColor = RGB(255, 255, 153)
PasswordInput1.CommandButton1.ForeColor = RGB(212, 5, 17)

Sheet1.Range("AFR_UNLOCKPPWORDA").Value = ""

End Sub

Private Sub UserForm_QueryClose(Cancel As Integer, CloseMode As Integer)
       
  If CloseMode = vbFormControlMenu Then

Msg = "TO EXIT THE PASSWORD ENTRY SCREEN YOU MUST DO ONE OF THE FOLLOWING:"
Msg = Msg & vbNewLine & vbNewLine
Msg = Msg & "1. Enter a correct password "
Msg = Msg & vbNewLine & "2. Use the cancel button (after entering an incorrect password "
Msg = Msg & vbNewLine
Title = "EXITING THE PASSWORD ENTRY SCREEN"
Ans1 = MsgBox(Msg, vbInformation, Title)

        Cancel = True
    End If

End Sub

Private Sub TextBox1_Afterupdate()

Sheets("AFR Calculator").Range("AFR_PWORDMATCHA").Calculate
Sheets("AFR Calculator").Range("AFR_UNLOCKPPWORDA").Value = PasswordInput1.TextBox1.Value
Sheets("AFR Calculator").Range("AFR_PWORDMATCHA").Calculate

End Sub
Attribute VB_Name = "Sheet1"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Private Sub worksheet_activate()

ActiveSheet.Select

If ActiveSheet.ProtectContents = False Then

ActiveSheet.EnableSelection = xlUnlockedCells

On Error GoTo NOTEXTBOXTOLOCK

ActiveSheet.TextBoxes.Locked = True
ActiveSheet.TextBoxes.LockedText = True

NOTEXTBOXTOLOCK:

ActiveSheet.Protect Password:="DgfCRC2102", DrawingObjects:=True, Contents:=True, Scenarios:=True

Else

End If

End Sub
Private Sub Worksheet_Change(ByVal Target As Range)

'Static old_value As Variant

'If Sheet1.Range("C_HAZSHIP").Value <> old_value Then

'old_value = Sheet1.Range("C_HAZSHIP")

 'If Worksheets("AFR Calculator").Range("C_HAZSHIP").Value = "NO" Or Worksheets("AFR Calculator").Range("C_HAZSHIP").Value = " " Then
 'Exit Sub
 'Else
 'MsgBox "Ensure there are Hazardous Rates in Place for these Point Pairs", vbCritical, "HAZ LANE SELECTED - ENSURE RATES AVAILABLE?"
 'End If
 
'End If

Static g_value As Variant

If Sheet1.Range("C_OOGFLAG").Value <> old_value Then

g_value = Sheet1.Range("C_OOGFLAG")

 If Worksheets("AFR Calculator").Range("C_OOGFLAG").Value = 0 Then
 Exit Sub
 Else
 
Msg = "One or more of your shipments is considered to be OUT OF GAUGE"
Msg = Msg & vbNewLine & vbNewLine
Msg = Msg & " Please double check the shipment dimensions you have entered;"
Msg = Msg & vbNewLine & " if these are correct the shipment is OUT OF GAUGE."
Msg = Msg & vbNewLine
Msg = Msg & vbNewLine & " You must contact your account manager or local sales team to discuss"
Msg = Msg & vbNewLine
Msg = Msg & vbNewLine & " This rate calculator is unable to provide you with "
Msg = Msg & vbNewLine & " any OUT OF GAUGE shipment rates"
Msg = Msg & vbNewLine & vbNewLine
Title = "OUT OF GAUAGE shipment dimensions - PLEASE REVIEW"
Ans1 = MsgBox(Msg, vbCritical, Title)
End If
 
End If

End Sub







Attribute VB_Name = "Sheet2"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Private Sub worksheet_activate()

'
' 13/01/2014    Initial Version (3.01)
' Author        Alex McLaren (Alex.Mclaren@dhl.com)
'
' -----------------------------------------------------------------------------
' Individual procedure description:
' -----------------------------------------------------------------------------
' Description:      This procedure will unhidden rows when shipment values are avilable and hide when rows are blank
'

Application.ScreenUpdating = False

If ActiveSheet.ProtectContents = True Then

ActiveSheet.Unprotect Password:="DgfCRC2102"
ActiveSheet.EnableSelection = xlNoRestrictions

On Error GoTo NOTEXTBOXESTOUNLOCK

ActiveSheet.TextBoxes.Locked = False
ActiveSheet.TextBoxes.LockedText = False

NOTEXTBOXESTOUNLOCK:

Else

End If

Range("J20").Font.Color = -15661612
Range("J31").Font.Color = -15661612
Range("J41").Font.Color = -15661612

If _
Sheet1.Range("C_AFRTOTAL").Value = Sheet3.Range("AD_EXPMESSAGE").Value Or _
Sheet1.Range("C_AFRTOTAL").Value = Sheet3.Range("AD_MISSINGROE").Value Or _
Sheet1.Range("C_AFRTOTAL").Value = Sheet3.Range("AD_NORATE").Value Or _
Sheet1.Range("C_AFRTOTAL").Value = Sheet3.Range("AD_PLEASESELECT").Value Or _
Sheet1.Range("C_AFRTOTAL").Value = Sheet3.Range("AD_ADDWEIGHT").Value Or _
Sheet1.Range("C_AFRTOTAL").Value = Sheet3.Range("AD_OOGTEXT").Value Then

Range("J20:J29").Rows.Hidden = False
Range("J21:J29").Rows.Hidden = True

Range("J31:J39").Rows.Hidden = False
Range("J32:J39").Rows.Hidden = True

Range("J41:J49").Rows.Hidden = False
Range("J42:J49").Rows.Hidden = True

Range("J20").Font.ThemeColor = xlThemeColorDark1
Range("J31").Font.ThemeColor = xlThemeColorDark1
Range("J41").Font.ThemeColor = xlThemeColorDark1

Else

If Sheet1.Range("C_SERVICELVL").Value = Sheet3.Range("AD_FORMAT3").Value Then

Range("J20:J29").Rows.Hidden = False

Dim cX As Range
For Each cX In Range("j21:j29")
If cX.Value = 0 Then
Rows(cX.Row).Hidden = True
Else
Rows(cX.Row).Hidden = False
End If
Next cX

Range("J31:J39").Rows.Hidden = False

Dim dX As Range
For Each dX In Range("j32:j39")
If dX.Value = 0 Then
Rows(dX.Row).Hidden = True
Else
Rows(dX.Row).Hidden = False
End If
Next dX

Range("J41:J49").Rows.Hidden = False

Dim eX As Range
For Each eX In Range("j42:j49")
If eX.Value = 0 Then
Rows(eX.Row).Hidden = True
Else
Rows(eX.Row).Hidden = False
End If
Next eX

Else

Select Case Sheet1.Range("C_SERVICELVL").Value

' ---------------------------------------------------------

Case Sheet3.Range("DTD").Value

Range("J20:J29").Rows.Hidden = False

Dim c As Range
For Each c In Range("j21:j29")
If c.Value = 0 Then
Rows(c.Row).Hidden = True
Else
Rows(c.Row).Hidden = False
End If
Next c

Range("J31:J39").Rows.Hidden = False

Dim d As Range
For Each d In Range("j32:j39")
If d.Value = 0 Then
Rows(d.Row).Hidden = True
Else
Rows(d.Row).Hidden = False
End If
Next d

Range("J41:J49").Rows.Hidden = False

Dim e As Range
For Each e In Range("j42:j49")
If e.Value = 0 Then
Rows(e.Row).Hidden = True
Else
Rows(e.Row).Hidden = False
End If
Next e

' ---------------------------------------------------------

Case Sheet3.Range("DTA").Value

Range("J20:J29").Rows.Hidden = False

Dim c1 As Range
For Each c1 In Range("j21:j29")
If c1.Value = 0 Then
Rows(c1.Row).Hidden = True
Else
Rows(c1.Row).Hidden = False
End If
Next c1

Range("J31:J39").Rows.Hidden = False

Dim d1 As Range
For Each d1 In Range("j32:j39")
If d1.Value = 0 Then
Rows(d1.Row).Hidden = True
Else
Rows(d1.Row).Hidden = False
End If
Next d1


Range("J41:J49").Rows.Hidden = False

Dim e1 As Range
For Each e1 In Range("j42:j49")
If e1.Value = 0 Then
Rows(e1.Row).Hidden = True
Else
Rows(e1.Row).Hidden = False
End If
Next e1

' ---------------------------------------------------------

Case Sheet3.Range("ATA").Value

Range("J20:J29").Rows.Hidden = False

Dim c2 As Range
For Each c2 In Range("j21:j29")
If c2.Value = 0 Then
Rows(c2.Row).Hidden = True
Else
Rows(c2.Row).Hidden = False
End If
Next c2

Range("J31:J39").Rows.Hidden = False

Dim d2 As Range
For Each d2 In Range("j32:j39")
If d2.Value = 0 Then
Rows(d2.Row).Hidden = True
Else
Rows(d2.Row).Hidden = False
End If
Next d2

Range("J41:J49").Rows.Hidden = False

Dim e2 As Range
For Each e2 In Range("j42:j49")
If e2.Value = 0 Then
Rows(e2.Row).Hidden = True
Else
Rows(e2.Row).Hidden = False
End If
Next e2

' ---------------------------------------------------------

Case Sheet3.Range("ATD").Value

Range("J20:J29").Rows.Hidden = False

Dim c3 As Range
For Each c3 In Range("j21:j29")
If c3.Value = 0 Then
Rows(c3.Row).Hidden = True
Else
Rows(c3.Row).Hidden = False
End If
Next c3

Range("J31:J39").Rows.Hidden = False

Dim d3 As Range
For Each d3 In Range("j32:j39")
If d3.Value = 0 Then
Rows(d3.Row).Hidden = True
Else
Rows(d3.Row).Hidden = False
End If
Next d3

Range("J41:J49").Rows.Hidden = False

Dim e3 As Range
For Each e3 In Range("j42:j49")
If e3.Value = 0 Then
Rows(e3.Row).Hidden = True
Else
Rows(e3.Row).Hidden = False
End If
Next e3

' ---------------------------------------------------------

Case Sheet3.Range("ALL").Value

Range("J20:J29").Rows.Hidden = False

Dim c4 As Range
For Each c4 In Range("j21:j29")
If c4.Value = 0 Then
Rows(c4.Row).Hidden = True
Else
Rows(c4.Row).Hidden = False
End If
Next c4

Range("J31:J39").Rows.Hidden = False

Dim d4 As Range
For Each d4 In Range("j32:j39")
If d4.Value = 0 Then
Rows(d4.Row).Hidden = True
Else
Rows(d4.Row).Hidden = False
End If
Next d4

Range("J41:J49").Rows.Hidden = False

Dim e4 As Range
For Each e4 In Range("j42:j49")
If e4.Value = 0 Then
Rows(e4.Row).Hidden = True
Else
Rows(e4.Row).Hidden = False
End If
Next e4

' ---------------------------------------------------------

End Select

End If
End If

ActiveSheet.Range("PRINT_REF").Select

ZZ

End Sub
Attribute VB_Name = "Sheet3"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Private Sub worksheet_activate()

ActiveSheet.Select

If ActiveSheet.ProtectContents = False Then

ActiveSheet.EnableSelection = xlUnlockedCells

On Error GoTo NOTEXTBOXTOLOCK

ActiveSheet.TextBoxes.Locked = True
ActiveSheet.TextBoxes.LockedText = True

NOTEXTBOXTOLOCK:

ActiveSheet.Protect Password:="DgfCRC2102", DrawingObjects:=True, Contents:=True, Scenarios:=True

Else

End If

End Sub

Private Sub Worksheet_Change(ByVal Target As Range)

Static roe_value As Variant

If Sheet3.Range("R_ROECURR").Value <> roe_value Then

roe_value = Sheet3.Range("R_ROECURR")
 
ActiveSheet.Range("R_ROELIST").ClearContents
 
Msg = "The required final currency that this rate calculator converts to has been changed: "
Msg = Msg & vbNewLine & vbNewLine
Msg = Msg & vbNewLine & "All existing rates have been removed - "
Msg = Msg & " Please ensure that all rates of exchange are updated below "
Msg = Msg & vbNewLine & " to reflect this change of requirement "
Msg = Msg & vbNewLine & vbNewLine & "RECOMMENDED ACTION: "
Msg = Msg & vbNewLine & "Please refer to the OANDA website for exact currency conversion rates "
Msg = Msg & vbNewLine
Msg = Msg & vbNewLine & " If you are unsure or wish support please contact: "
Msg = Msg & vbNewLine & " Your account manager or local sales team to discuss & resolve "
Msg = Msg & vbNewLine & vbNewLine
Title = "Change to currency conversion table - PLEASE REVIEW"
Ans1 = MsgBox(Msg, vbInformation, Title)

Else
Exit Sub

End If
End Sub
Attribute VB_Name = "Sheet4"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True

Attribute VB_Name = "Sheet5"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "ThisWorkbook"
Attribute VB_Base = "0{00020819-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Private Sub WORKBOOK_OPEN()

'
' 13/02/2014    Initial Version (3.01)
' Author        Alex McLaren (Alex.Mclaren@dhl.com)
'
' -----------------------------------------------------------------------------
' Individual procedure description:
' -----------------------------------------------------------------------------
' Description:      Prepares the rate calculator to be used
'

Application.ScreenUpdating = False
    ActiveWindow.DisplayHeadings = False
    ActiveWindow.DisplayGridlines = False

Application.Calculation = xlCalculationAutomatic

Sheet1.Activate
ActiveSheet.Range("STARTREFRESH").Select
Selection.ClearContents

'ActiveSheet.Range("AFR_SERVICETYPE").Select
'ActiveCell.Value = Sheet1.Range("AD_PLEASESELECT").Value

ActiveSheet.Range("ORGDEST_DDOWN").Select

End Sub
Attribute VB_Name = "U_UserFormRelated"
Sub XX()
Attribute XX.VB_ProcData.VB_Invoke_Func = " \n14"

Sheet1.Activate

ZZ

PasswordInput.Show

ZZ

End Sub

Public Sub DimEntryStartUp()

Dim b As Integer

For b = 2 To 4

DimEntry.Controls("Label" & b).Font = "Calibri"
DimEntry.Controls("Label" & b).FontSize = "8"

Next b


End Sub

Sub XXXX()

' -----------------------------------------------

    Dim val As String
  Dim start As Integer
  Dim finish As Integer
  
  start = InStr(1, ThisWorkbook.Path, "Users\") + 6
  finish = InStr(start, ThisWorkbook.Path, "\")
  
  'val = Mid(ThisWorkbook.Path, start, finish - start)
  val = LCase(Environ("USERNAME"))

'   Debug.Print val

' -----------------------------------------------

If val = "amclaren" Or val = "josbalde" _
Or val = LCase(Sheet1.Range("AD_USERA").Value) _
Or val = LCase(Sheet1.Range("AD_USERB").Value) _
Or val = LCase(Sheet1.Range("AD_USERC").Value) _
Or val = LCase(Sheet1.Range("AD_USERD").Value) _
Or val = LCase(Sheet1.Range("AD_USERE").Value) _
Or val = LCase(Sheet1.Range("AD_USERF").Value) Then

UserAdmin.Show

Else
ValidityCheckFailMsg2
Exit Sub
End If

End Sub

Public Sub UserAdminStartUp()

Dim c As Integer

For c = 1 To 6

UserAdmin.Controls("TextBox" & c).FontSize = "8"
UserAdmin.Controls("TextBox" & c).Font.Bold = True
UserAdmin.Controls("TextBox" & c).BackColor = RGB(255, 255, 255)
UserAdmin.Controls("TextBox" & c).ForeColor = RGB(212, 5, 17)

Next c

UserAdmin.TextBox1.Value = Sheet1.Range("AD_USERA").Value
UserAdmin.TextBox2.Value = Sheet1.Range("AD_USERB").Value
UserAdmin.TextBox3.Value = Sheet1.Range("AD_USERC").Value
UserAdmin.TextBox4.Value = Sheet1.Range("AD_USERD").Value
UserAdmin.TextBox5.Value = Sheet1.Range("AD_USERE").Value
UserAdmin.TextBox6.Value = Sheet1.Range("AD_USERF").Value

End Sub
Attribute VB_Name = "UserAdmin"
Attribute VB_Base = "0{58458B59-D39B-4172-BA8F-E321F4952627}{A2A7A30A-1F15-4783-BBC0-91FF5BCFF48E}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Private Sub CommandButton1_Click()


Sheet2.Range("AD_USERA").Value = UserAdmin.TextBox1.Value
Sheet2.Range("AD_USERB").Value = UserAdmin.TextBox2.Value
Sheet2.Range("AD_USERC").Value = UserAdmin.TextBox3.Value
Sheet2.Range("AD_USERD").Value = UserAdmin.TextBox4.Value
Sheet2.Range("AD_USERE").Value = UserAdmin.TextBox5.Value
Sheet2.Range("AD_USERF").Value = UserAdmin.TextBox6.Value

MsgBox "Update completed", vbInformation, "ADMIN UPDATE COMPLETED"

Unload UserAdmin

End Sub

Private Sub CommandButton2_Click()

MsgBox "No update completed", vbInformation, "NO ADMIN UPDATE COMPLETED"

Unload UserAdmin

End Sub

Private Sub userform_initialize()

UserAdmin.BackColor = RGB(255, 204, 0)
UserAdmin.BorderStyle = fmBorderStyleSingle
UserAdmin.BorderColor = RGB(212, 5, 17)

For a = 1 To 6

UserAdmin.Controls("Label" & a).Caption = "Enter Admin Name:"
UserAdmin.Controls("Label" & a).FontSize = "8"
UserAdmin.Controls("Label" & a).Font.Bold = True
UserAdmin.Controls("Label" & a).BackColor = RGB(255, 204, 0)
UserAdmin.Controls("Label" & a).ForeColor = RGB(212, 5, 17)

Next a

UserAdmin.CommandButton1.Caption = "Click to submit update"
UserAdmin.CommandButton1.Font = "Calibri"
UserAdmin.CommandButton1.FontSize = "8"
UserAdmin.CommandButton1.Font.Bold = True
UserAdmin.CommandButton1.BackColor = RGB(255, 255, 153)
UserAdmin.CommandButton1.ForeColor = RGB(212, 5, 17)

UserAdmin.CommandButton2.Caption = "Click to cancel update"
UserAdmin.CommandButton2.Font = "Calibri"
UserAdmin.CommandButton2.FontSize = "8"
UserAdmin.CommandButton2.Font.Bold = True
UserAdmin.CommandButton2.BackColor = RGB(255, 255, 153)
UserAdmin.CommandButton2.ForeColor = RGB(212, 5, 17)

UserAdminStartUp

End Sub

Private Sub UserForm_QueryClose(Cancel As Integer, CloseMode As Integer)
       
  If CloseMode = vbFormControlMenu Then

Msg = "TO EXIT THE ADMIN UPDATE ENTRY SCREEN YOU MUST DO ONE OF THE FOLLOWING:"
Msg = Msg & vbNewLine & vbNewLine
Msg = Msg & "1. Click on the UPDATE button "
Msg = Msg & vbNewLine & "2. Use the cancel button"
Msg = Msg & vbNewLine
Title = "EXITING THE ADMIN ENTRY SCREEN"
Ans1 = MsgBox(Msg, vbInformation, Title)

        Cancel = True
    End If

End Sub

' InQuest injected base64 decoded content
' )^jw

INQUEST-PP=macro
