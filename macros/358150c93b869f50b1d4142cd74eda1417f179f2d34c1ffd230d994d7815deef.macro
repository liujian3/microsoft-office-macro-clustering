Attribute VB_Name = "Module1"
Sub MultipleLayersofProtection()
    Dim rngAdmin As Range
    Dim rngProjectManager As Range
    Dim sUserEnteredPW As String

    Const sSheetPassword = "CG!Friday"
    Const sAdminPW As String = "99!CFR!99"
    Const sProjectManagerPW As String = "New"

' The rngAdmin is all of the blue and red cells.
    Set rngAdmin = ActiveSheet.Range("B10:C18,E10:G18,A20:G21,B24:B74,C65:C74,E79,G84:G85,K12")
' The rngProjectManager is all of the blue cells only.
    Set rngProjectManager = ActiveSheet.Range("B10:C18,E10:G18,A20:C21,E20:G21,B24:B74,C65:C74,K12")

    sUserEnteredPW = Application.InputBox("Please enter the password:", , , , , , , 2)

    Select Case sUserEnteredPW
        Case sAdminPW
            ActiveSheet.Unprotect Password:=sSheetPassword
            rngAdmin.Locked = False
            ActiveSheet.Protect Password:=sSheetPassword
            MsgBox ("Admin Access")
        Case sProjectManagerPW
            ActiveSheet.Unprotect Password:=sSheetPassword
            rngProjectManager.Locked = False
            ActiveSheet.Protect Password:=sSheetPassword
            MsgBox ("New Order Access")
        Case Else
            MsgBox ("Read only access")
    End Select


End Sub
Attribute VB_Name = "Module2"
Sub PasswordBreaker()
  'Author unknown but submitted by brettdj of www.experts-exchange.com
  
  Dim i As Integer, j As Integer, k As Integer
  Dim l As Integer, m As Integer, n As Integer
  Dim i1 As Integer, i2 As Integer, i3 As Integer
  Dim i4 As Integer, i5 As Integer, i6 As Integer
  On Error Resume Next
  For i = 65 To 66: For j = 65 To 66: For k = 65 To 66
  For l = 65 To 66: For m = 65 To 66: For i1 = 65 To 66
  For i2 = 65 To 66: For i3 = 65 To 66: For i4 = 65 To 66
  For i5 = 65 To 66: For i6 = 65 To 66: For n = 32 To 126
     
        
 ActiveSheet.Unprotect Chr(i) & Chr(j) & Chr(k) & _
      Chr(l) & Chr(m) & Chr(i1) & Chr(i2) & Chr(i3) & _
      Chr(i4) & Chr(i5) & Chr(i6) & Chr(n)
  If ActiveSheet.ProtectContents = False Then
      MsgBox "One usable password is " & Chr(i) & Chr(j) & _
          Chr(k) & Chr(l) & Chr(m) & Chr(i1) & Chr(i2) & _
          Chr(i3) & Chr(i4) & Chr(i5) & Chr(i6) & Chr(n)
   ActiveWorkbook.Sheets(1).Select
   Range("a1").FormulaR1C1 = Chr(i) & Chr(j) & _
          Chr(k) & Chr(l) & Chr(m) & Chr(i1) & Chr(i2) & _
          Chr(i3) & Chr(i4) & Chr(i5) & Chr(i6) & Chr(n)
       Exit Sub
  End If
  Next: Next: Next: Next: Next: Next
  Next: Next: Next: Next: Next: Next

End Sub



Attribute VB_Name = "Sheet1"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Sheet2"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Sheet3"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "ThisWorkbook"
Attribute VB_Base = "0{00020819-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True


INQUEST-PP=macro
