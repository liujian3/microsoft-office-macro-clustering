Attribute VB_Name = "Module1"
Sub testOutlookIsOpenGB()
    Dim oOutlook As Object

    On Error Resume Next
    Set oOutlook = GetObject(, "Outlook.Application")
    On Error GoTo 0

    If oOutlook Is Nothing Then
        MsgBox "Outlook is not running. Please open Outlook and try again. If you are not using Outlook, this send function will not work."
    Else
        Call mailWorkbookViaOutlookGB
    End If
End Sub

Sub mailWorkbookViaOutlookGB()
'Working in Excel 2000-2013
'Mail a copy of the ActiveWorkbook with another file name
'For Tips see: http://www.rondebruin.nl/win/s1/outlook/amail1.htm
    Dim varResponse As Variant
        varResponse = MsgBox("Send filled out report to " & ThisWorkbook.Sheets("Template").Range("insuranceCompanyName").Value & " via Outlook?", vbYesNo, "Confirm")
        If varResponse <> vbYes Then Exit Sub
    Dim wb1 As Workbook
    Dim TempFilePath As String
    Dim TempFileName As String
    Dim FileExtStr As String
    Dim OutApp As Object
    Dim OutMail As Object
    Dim Cell As Range
    
    With Application
        .ScreenUpdating = False
        .EnableEvents = False
    End With

    Set wb1 = ActiveWorkbook

    'Make a copy of the file/Open it/Mail it/Delete it
    'If you want to change the file name then change only TempFileName
    TempFilePath = Environ$("temp") & "\"
    TempFileName = Format(Now, "dd-mm-yyyy h-mm") & "_ClamiNo_" & ThisWorkbook.Sheets("Template").Range("claimNumber").Value & "_" & ThisWorkbook.Sheets("Invoice").Range("invoiceSepaName").Value
    TempFileName = Replace(Replace(Replace(Replace(Replace(Replace(Replace(Replace(Replace(TempFileName, "\", ""), "/", ""), ":", ""), "*", ""), "?", ""), "<", ""), ">", ""), "|", ""), Chr(34), "")
    FileExtStr = "." & LCase(Right(wb1.Name, Len(wb1.Name) - InStrRev(wb1.Name, ".", , 1)))

    wb1.SaveCopyAs TempFilePath & TempFileName & FileExtStr

    Set OutApp = CreateObject("Outlook.Application")
    Set OutMail = OutApp.CreateItem(0)

    On Error Resume Next
    With OutMail
        .to = ThisWorkbook.Sheets("Template").Range("replyAddress").Value
        .Subject = "Copy of R&V report returned by Service Partner"
        .Body = "Insurance Company: " & ThisWorkbook.Sheets("Template").Range("insuranceCompanyName").Value & " - Claim No.: " & ThisWorkbook.Sheets("Template").Range("claimNumber").Value
        .Attachments.Add TempFilePath & TempFileName & FileExtStr
        'You can add other files also like this
        '.Attachments.Add ("C:\test.txt")
        .Send   'or use .Display
    End With
    On Error GoTo 0

    'Delete the file
    Kill TempFilePath & TempFileName & FileExtStr

    Set OutMail = Nothing
    Set OutApp = Nothing

    With Application
        .ScreenUpdating = True
        .EnableEvents = True
    End With

End Sub

Sub testOutlookIsOpenDK()
    Dim oOutlook As Object

    On Error Resume Next
    Set oOutlook = GetObject(, "Outlook.Application")
    On Error GoTo 0

    If oOutlook Is Nothing Then
        MsgBox "Outlook er ikke |fffd|bent. Venligst start Outlook og fors|fffd|g igen. Benytter du ikke Outlook, kan du ikke benytte denne funktion."
    Else
        Call mailWorkbookViaOutlookDK
    End If
End Sub

Sub mailWorkbookViaOutlookDK()
'Working in Excel 2000-2013
'Mail a copy of the ActiveWorkbook with another file name
'For Tips see: http://www.rondebruin.nl/win/s1/outlook/amail1.htm
    Dim varResponse As Variant
        varResponse = MsgBox("Send udfyldt vurderingsrapport til " & ThisWorkbook.Sheets("Template").Range("insuranceCompanyName").Value & " via Outlook?", vbYesNo, "Bekr|fffd|ft")
        If varResponse <> vbYes Then Exit Sub
    Dim wb1 As Workbook
    Dim TempFilePath As String
    Dim TempFileName As String
    Dim FileExtStr As String
    Dim OutApp As Object
    Dim OutMail As Object
    Dim Cell As Range
    
    With Application
        .ScreenUpdating = False
        .EnableEvents = False
    End With

    Set wb1 = ActiveWorkbook

    'Make a copy of the file/Open it/Mail it/Delete it
    'If you want to change the file name then change only TempFileName
    TempFilePath = Environ$("temp") & "\"
    TempFileName = Format(Now, "dd-mm-yyyy h-mm") & "_ClamiNo_" & ThisWorkbook.Sheets("Template").Range("claimNumber").Value & "_" & ThisWorkbook.Sheets("Invoice").Range("invoiceSepaName").Value
    TempFileName = Replace(Replace(Replace(Replace(Replace(Replace(Replace(Replace(Replace(TempFileName, "\", ""), "/", ""), ":", ""), "*", ""), "?", ""), "<", ""), ">", ""), "|", ""), Chr(34), "")
    FileExtStr = "." & LCase(Right(wb1.Name, Len(wb1.Name) - InStrRev(wb1.Name, ".", , 1)))

    wb1.SaveCopyAs TempFilePath & TempFileName & FileExtStr

    Set OutApp = CreateObject("Outlook.Application")
    Set OutMail = OutApp.CreateItem(0)

    On Error Resume Next
    With OutMail
        .to = ThisWorkbook.Sheets("Template").Range("replyAddress").Value
        .Subject = "Kopi af R&V rapport returneret af servicepartner"
        .Body = "Selskab: " & ThisWorkbook.Sheets("Template").Range("insuranceCompanyName").Value & " - Skadenr. " & ThisWorkbook.Sheets("Template").Range("claimNumber").Value
        .Attachments.Add TempFilePath & TempFileName & FileExtStr
        'You can add other files also like this
        '.Attachments.Add ("C:\test.txt")
        .Send   'or use .Display
    End With
    On Error GoTo 0

    'Delete the file
    Kill TempFilePath & TempFileName & FileExtStr

    Set OutMail = Nothing
    Set OutApp = Nothing

    With Application
        .ScreenUpdating = True
        .EnableEvents = True
    End With

End Sub
Attribute VB_Name = "Sheet1"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Sheet2"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Private Sub Worksheet_Change(ByVal Target As Range)

    Dim category_range As Range
    Dim subcategory_range As Range
    
    Set category_range = Worksheets("Template").Range("category") 'get Category list column
    Set subcategory_range = Worksheets("Template").Range("subCategory") 'get subCategory list column

    If Target.Cells.Count > 1 Then Exit Sub
     
    Select Case Target.Column
    Case category_range.Column 'If value of Category list changed - reset Subcategory list
        Range(ColumnName(subcategory_range.Column) & Target.Row).ClearContents

    Case Else
         'do nothing
    End Select
     
End Sub

Private Function ColumnName(ByVal ColumnNum As Integer)
ColumnName = Split(Columns(ColumnNum).Address(0, 0), ":")(0)
End Function



Attribute VB_Name = "Sheet3"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "ThisWorkbook"
Attribute VB_Base = "0{00020819-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True


INQUEST-PP=macro
