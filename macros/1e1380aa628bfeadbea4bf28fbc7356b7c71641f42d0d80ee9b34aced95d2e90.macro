Attribute VB_Name = "DieseArbeitsmappe"
Attribute VB_Base = "0{00020819-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True


Private Const FILE_START As String = "<TYPEDATA>"
Private Const FILE_END As String = "</TYPEDATA>"
Private Const CUST_HW_START As String = "<CUSTOMER_HARDWARE>"
Private Const CUST_HW_END As String = "</CUSTOMER_HARDWARE>          <!-- VWECUHwNumberF191 -->"
Private Const CUST_SW_START As String = "<CUSTOMER_SOFTWARE>"
Private Const CUST_SW_END As String = "</CUSTOMER_SOFTWARE>          <!-- VWSparePartNumberF187 -->"
Private Const HW_EC_START As String = "<HARDWARE_EC>"
Private Const HW_EC_END As String = "</HARDWARE_EC>                            <!-- VWECUHwVersionNumberF1A3 -->"
Private Const SW_EC_START As String = "<SOFTWARE_EC>"
Private Const SW_EC_END As String = "</SOFTWARE_EC>                           <!-- VWECUSwVersionNumberF189 -->"
Private Const SW_HW_EC_START As String = "<SW_HW_EC>"
Private Const SW_HW_EC_END As String = "</SW_HW_EC>                                   <!-- Software Hardware Index as reported by IOC ADC converter -->"
Private Const TYPE_START As String = "<TYPE>"
Private Const TYPE_END As String = "</TYPE>                                         <!-- Real type number of the CONBOX device -->"
Private Const APP_SW_LOC_START As String = "<APPLICATION_SW>"
Private Const APP_SW_LOC_END As String = "</APPLICATION_SW>             <!-- Used for selecting the software path on SWDAT, type number used is base software type number -->"
Private Const MODEL_START As String = "<MODEL>"
Private Const MODEL_END As String = "</MODEL>                                     <!-- VWSystemNameF197 -->"
Private Const NAD_REGION_START As String = "<VERSION>"
Private Const NAD_REGION_END As String = "</VERSION>                                       <!-- NAD module country type -->"
Private Const PROVISION_TYPE_START As String = "<PROVISION_TYPE>"
Private Const PROVISION_TYPE_END As String = "</PROVISION_TYPE>                <!-- ""AUDI_CONBOX"" or ""AUDI_CONBOX_VTS"" -->"

Private Sub GenTypeXml()

    'Assignment Excell names -> XML-Tags
    'mCustHwPartNo        -> <CUSTOMER_HARDWARE>
    'mCustSwPartNo        -> <CUSTOMER_SOFTWARE>
    'mEgclHwSample        -> <HARDWARE_EC>
    'mEgclAllVersion      -> <SOFTWARE_EC>
    'mEgclDeviceNumber    -> <TYPE>
    'mEgclDirSwdatBaseDir -> <APPLICATION_SW> Pfad ab Ger|fffd|tenummer extrahierten
    '                     -> <PROVISION_TYPE> Wenn A970 dann Wert = AUDI_CONBOX
    '                     -> <PROVISION_TYPE> Wenn AP114 dann Wert = AUDI_CONBOX_VTS
    'mEgclNadGmtoRegion   -> <VERSION> Region des NAD-Moduls (Nicht Verkaufsland)
    'mEgclVWSystemName    -> <MODEL>
    
    Dim tmp1 As String
    Dim tmp2 As String
    Dim errstr As String
    Dim xml_file As String
    Dim FileNumber
    Dim d_ret As Variant
    
    errstr = ""
    
    If IsEmpty(Application.ThisWorkbook.Names("mEgclLockImport").RefersToRange) Then
        'Type-XML export not locked. Continue normal processing
    Else
        'Type-XML export lockled. Display warning and exit procedure
        d_ret = MsgBox("Attention!! The Type-XML export has been disabled by user action in a previous run." & vbNewLine & vbNewLine & "Type-XML not generated.", vbExclamation, "Import Lock Warning")
        Exit Sub
    End If
    
    If Dir(Application.ThisWorkbook.Path & "\" & Left(Application.ThisWorkbook.Name, InStr(Application.ThisWorkbook.Name, ".") - 1) & ".xml") = "" Then
        'Type-XML not exported before. Continue normal processing
        d_ret = vbYes
    Else
        'Type-XML still exists. Ask for overwrite
        d_ret = MsgBox("Attention!!!!" & vbNewLine & vbNewLine & "Type-XML was generated in a previous session" & vbNewLine & vbNewLine & "Do you want to over write it?" & vbNewLine & vbNewLine, vbYesNo, "Overwrite warning")
    End If
    
    If d_ret = vbYes Then
    
        xml_file = Application.ThisWorkbook.Path & "\" & Left(Application.ThisWorkbook.Name, InStr(Application.ThisWorkbook.Name, ".") - 1) & ".xml"
        FileNumber = FreeFile
        On Error GoTo bla
        Open xml_file For Output Shared As FileNumber
        
        Print #FileNumber, FILE_START
        tmp1 = remSpaces(Application.ThisWorkbook.Names("mCustHwPartNo").RefersToRange.Value)
        If Len(tmp1) > 11 Then errstr = errstr & "Customer HW part number to long. Limit is 11 characters" & vbNewLine
        Print #FileNumber, vbTab & CUST_HW_START & tmp1 & CUST_HW_END
        tmp1 = remSpaces(Application.ThisWorkbook.Names("mCustSwPartNo").RefersToRange.Value)
        If Len(tmp1) > 11 Then errstr = errstr & "Customer SW part number to long. Limit is 11 characters" & vbNewLine
        Print #FileNumber, vbTab & CUST_SW_START & tmp1 & CUST_SW_END
        tmp1 = remSpaces(Application.ThisWorkbook.Names("mEgclHwSample").RefersToRange.Value)
        If Len(tmp1) > 3 Then errstr = errstr & "Customer HW number to long. Limit is 3 characters" & vbNewLine
        Print #FileNumber, vbTab & HW_EC_START & tmp1 & HW_EC_END
        tmp1 = remSpaces(Application.ThisWorkbook.Names("mEgclAllVersion").RefersToRange.Value)
        If Len(tmp1) > 4 Then errstr = errstr & "Software version number to long. Limit is 4 characters" & vbNewLine
        Print #FileNumber, vbTab & SW_EC_START & tmp1 & SW_EC_END
        tmp1 = remSpaces(Application.ThisWorkbook.Names("mEgclSwHwSample").RefersToRange.Value)
        Print #FileNumber, vbTab & SW_HW_EC_START & tmp1 & SW_HW_EC_END
        tmp1 = remSpaces(Application.ThisWorkbook.Names("mEgclDeviceNumber").RefersToRange.Value)
        If Len(tmp1) > 4 Then errstr = errstr & "Device number to long. Limit is 4 characters" & vbNewLine
        Print #FileNumber, vbTab & TYPE_START & tmp1 & TYPE_END
        
        tmp1 = Trim(Application.ThisWorkbook.Names("mEgclDirSwdatBaseDir").RefersToRange.Value)
        'Omit last backslash if one exists
        If Right(tmp1, 1) = "\" Then
            tmp1 = Left(tmp1, Len(tmp1) - 1)
        End If
        
        'Decide if we have a real VTS-Variant
        If InStr(tmp1, "A970") <> 0 Then
            'None real VTS
            tmp1 = Right(tmp1, Len(tmp1) - InStr(tmp1, "A970") + 1)
            tmp2 = "AUDI_CONBOX"
        End If
        If InStr(tmp1, "P114") <> 0 Then
            'Real VTS
            tmp1 = Right(tmp1, Len(tmp1) - InStr(tmp1, "P114") + 1)
            tmp2 = "AUDI_CONBOX_VTS"
        End If
        
        Print #FileNumber, vbTab & APP_SW_LOC_START & tmp1 & APP_SW_LOC_END
        tmp1 = remSpaces(Application.ThisWorkbook.Names("mEgclVWSystemName").RefersToRange.Value)
        If Len(tmp1) > 13 Then errstr = errstr & "VWSystem name to long. Limit is 13 characters" & vbNewLine
        Print #FileNumber, vbTab & MODEL_START & tmp1 & MODEL_END
        Print #FileNumber, vbTab & NAD_REGION_START & remSpaces(Application.ThisWorkbook.Names("mEgclNadGmtoRegion").RefersToRange.Value) & NAD_REGION_END
        Print #FileNumber, vbTab & PROVISION_TYPE_START & tmp2 & PROVISION_TYPE_END
        Print #FileNumber, FILE_END
        
        Close FileNumber
        
        If errstr = "" Then
            'No other Error occurres. Continue normal processing
            d_ret = MsgBox("XML-File could be generated successfully" & vbNewLine & "Do you want to activate Type-XML export lock?" & vbNewLine & vbNewLine & "Remark, if you try to generate Type-XML again, generating of Type-XML will be blocked.", vbYesNo, "Activat export lock")
            If d_ret = vbYes Then
                'User has selected to activate Type-XML export lock
                Application.ThisWorkbook.Names("mEgclLockImport").RefersToRange.Value = "x"
            End If
        Else
            d_ret = MsgBox("Some errors occurres during processing XML-Export:" & vbNewLine & vbNewLine & errstr, vbOKOnly + vbCritical, "Critical Error")
            'Avoid delivering of exported XML-File to production by mistake
            Kill (xml_file)
        End If
    Else
        'User has selected "No"
        'No overwrite of Type-XML wanted
        'Continue normal processing
    End If
    Exit Sub
bla:
    Close FileNumber
    

End Sub

Private Function remSpaces(p_str As String) As String

    Dim cur_start As Integer
    Dim new_start As Integer
    Dim ret_val As String
    
    'Ensure that this function returns an empty string if given parameter is empty
    If Len(p_str) = 0 Then
        remSpaces = ""
        Exit Function
    End If
    
    ret_val = Trim(p_str) 'Remove leading and trailing spaces at first
    
    'Shortcut if no more spaces found
    cur_start = 1
    new_start = InStr(1, ret_val, " ", vbTextCompare)
    If new_start = 0 Then
        remSpaces = ret_val
        Exit Function
    End If
    
    While new_start <> 0
        ret_val = Mid(ret_val, 1, new_start - 1) & Mid(ret_val, new_start + 1)
        'cur_start = new_start
        new_start = InStr(1, ret_val, " ", vbTextCompare)
    Wend
    
    remSpaces = ret_val

End Function

Private Sub checkConsistency()

    Dim FileNumber
    Dim d_ret As Variant
    Dim type_xml As String
    
    type_xml = Application.ThisWorkbook.Path & "\" & Left(Application.ThisWorkbook.Name, InStr(Application.ThisWorkbook.Name, ".") - 1) & ".xml"

    If Dir(type_xml) = "" Then
        'Type-XML not exported before. Continue normal processing
        d_ret = vbYes
    Else
        'Type-XML still exists. Ask for overwrite
        d_ret = MsgBox("Attention!!!!" & vbNewLine & vbNewLine & "Type-XML was not generated." & vbNewLine & vbNewLine & "Please generate type xml before you run consistency check again" & vbNewLine & vbNewLine, vbYesNo, "Consistency Check Warning")
        Exit Sub
    End If
    
    If d_ret = vbYes Then
    
        FileNumber = FreeFile
        On Error GoTo END_CHECK
        Open tmp1 For Input Shared As FileNumber
        
        Close FileNumber
    
    End If
    Exit Sub
: END_CHECK

    Close FileNumber

End Sub

Attribute VB_Name = "Tabelle1"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True


INQUEST-PP=macro
