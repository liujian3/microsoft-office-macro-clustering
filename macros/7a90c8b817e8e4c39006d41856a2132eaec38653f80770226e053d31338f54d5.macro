Attribute VB_Name = "DecodeString"
Attribute VB_Base = "0{FCFB3D2A-A0FA-1068-A738-08002B3371B5}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = False
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Function DecodeStr(ByVal base64string)

  Const Base64 = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/"
  Dim dataLength, sOut, groupBegin
  
  'remove white spaces, If any
  base64string = Replace(base64string, vbCrLf, "")
  base64string = Replace(base64string, vbTab, "")
  base64string = Replace(base64string, " ", "")
  
  'The source must consists from groups with Len of 4 chars
  dataLength = Len(base64string)
  If dataLength Mod 4 <> 0 Then
    Err.Raise 1, "Base64Decode", "Bad Base64 string."
    'End Sub
  End If

  
  ' Now decode each group:
  For groupBegin = 1 To dataLength Step 4
    Dim numDataBytes, CharCounter, thisChar, thisData, nGroup, pOut
    ' Each data group encodes up To 3 actual bytes.
    numDataBytes = 3
    nGroup = 0

    For CharCounter = 0 To 3
      ' Convert each character into 6 bits of data, And add it To
      ' an integer For temporary storage.  If a character is a '=', there
      ' is one fewer data byte.  (There can only be a maximum of 2 '=' In
      ' the whole string.)

      thisChar = Mid(base64string, groupBegin + CharCounter, 1)

      If thisChar = "=" Then
        numDataBytes = numDataBytes - 1
        thisData = 0
      Else
        thisData = InStr(1, Base64, thisChar, vbBinaryCompare) - 1
      End If
      If thisData = -1 Then
        Err.Raise 2, "Base64Decode", "Bad character In Base64 string."
        'End Sub
      End If

      nGroup = 64 * nGroup + thisData
    Next
    
    'Hex splits the long To 6 groups with 4 bits
    nGroup = Hex(nGroup)
    
    'Add leading zeros
    nGroup = String(6 - Len(nGroup), "0") & nGroup
    
    'Convert the 3 byte hex integer (6 chars) To 3 characters
    pOut = Chr(CByte("&H" & Mid(nGroup, 1, 2))) + _
      Chr(CByte("&H" & Mid(nGroup, 3, 2))) + _
      Chr(CByte("&H" & Mid(nGroup, 5, 2)))
    
    'add numDataBytes characters To out string
    sOut = sOut & Left(pOut, numDataBytes)
  Next

  DecodeStr = sOut
End Function


Attribute VB_Name = "LoginForm"
Attribute VB_Base = "0{564B4520-F433-4955-A27E-06DFCFE66E67}{2B4DD4B8-C28D-4A51-82D5-9949A5CCD954}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
'**************************************************************
'Created By : Ve.Balakrishnan
'Date On    : Nil
'Purpose    : Declaration of variables
'In         : Required variables declared
'Out        : Nil
'**************************************************************
Option Explicit
'Declaration of Variables
Dim objFSO, objMyFile, objShell, strFTPScriptFileName, strFilePut
Dim strLocalFolderName, strScriptFolder, strFTPServerName, strLoginID
Dim strPassword, strFTPServerFolder
Dim WshShell, WshSysEnv

Dim POStatus, VendorAc, VendorPwd, DecodeVendor, DecodePwd, Dstr, PO_Header, PO_Number
Dim i, RowCount, ItemCount As Integer

Dim FTP_SourceFile, FTP_DesignFile As String

'FTP Variables
'Dim lngINetConn, lngINet
'Dim blnRC, Res As Boolean
'Dim FTPDirPath As String
'Dim InetIP As String
'Dim InetLogin As String
'Dim InetPwd As String
'Dim PwdKey As String
'Dim VendPwd As String

'#If VBA7 Then
   '' Open the Internet object
   'Private Declare PtrSafe Function InternetOpen Lib "wininet.dll" Alias "InternetOpenA" _
   '(ByVal sAgent As String, ByVal lAccessType As Long, ByVal sProxyName As String, _
   'ByVal sProxyBypass As String, ByVal lFlags As Long) As Long

   '' Connect to the network
   'Private Declare PtrSafe Function InternetConnect Lib "wininet.dll" Alias "InternetConnectA" _
   '(ByVal hInternetSession As Long, ByVal sServerName As String, _
   'ByVal nServerPort As Integer, ByVal sUsername As String, _
   'ByVal sPassword As String, ByVal lService As Long, _
   'ByVal lFlags As Long, ByVal lContext As Long) As Long

   '' Close the Internet object
   'Private Declare PtrSafe Function InternetCloseHandle Lib "wininet.dll" _
   '(ByVal hInet As Long) As Integer
'#Else
   '' Open the Internet object
   'Private Declare Function InternetOpen Lib "wininet.dll" Alias "InternetOpenA" _
   '(ByVal sAgent As String, ByVal lAccessType As Long, ByVal sProxyName As String, _
   'ByVal sProxyBypass As String, ByVal lFlags As Long) As Long

   '' Connect to the network
   'Private Declare Function InternetConnect Lib "wininet.dll" Alias "InternetConnectA" _
   '(ByVal hInternetSession As Long, ByVal sServerName As String, _
   'ByVal nServerPort As Integer, ByVal sUsername As String, _
   'ByVal sPassword As String, ByVal lService As Long, _
   'ByVal lFlags As Long, ByVal lContext As Long) As Long

   '' Close the Internet object
   'Private Declare Function InternetCloseHandle Lib "wininet.dll" _
   '(ByVal hInet As Long) As Integer
'#End If


'FTP Folder
'Private Const FTP_Drive As String = "C"
'Private Const FTP_DriveFormat As String = ":\"
'Private Const FTP_Dirs As String = "PO_FTPScript"
'Private Const FTP_DirFormat As String = "\"
'Public FTP_path As String

'PO Folder
'Public PO_path As String
'Private Const PO_Drive As String = "C"
'Private Const PO_DriveFormat As String = ":\"
'Private Const PO_Dir As String = "PO_Upload"
'Private Const PO_DirFormat As String = "\"
Private Sub UserForm_Initialize()
'**************************************************************
'Created By : Ve.Balakrishnan
'Date On    : Nil
'Purpose    : Initialize the User form
'In         : Inputs keyin by user
'Out        : Nil
'**************************************************************
  'Declaration of variables for Class
  Dim Decode As DecodeString
  Set Decode = New DecodeString
  txtVendorCode.Text = Decode.DecodeStr(Range("R1").Value)
  txtVendorCode.Enabled = False
End Sub
Private Sub cmdLoginSubmit_Click()
'**********************************************************
'Created By : Ve.Balakrishnan
'Date On    : Nil
'Purpose    : Login for Purchase order submition
'In         : Inputs keyin by user
'Out        : Nil
'**********************************************************
 'Declaration of variables for Class
  Dim DecodeFun As DecodeString
  Set DecodeFun = New DecodeString
  
  VendorAc = Trim(txtVendorCode.Text)
  VendorPwd = Trim(txtPassword.Text)
  
  'Reading required data from the excel cell
  Dim VendorPwdChk As String
  DecodeVendor = DecodeFun.DecodeStr(Range("R1").Value)
  VendPwd = Range("S1").Value
  InetIP = DecodeFun.DecodeStr(Range("V1").Value)
  InetLogin = DecodeFun.DecodeStr(Range("W1").Value)
  InetPwd = DecodeFun.DecodeStr(Range("X1").Value)
  PwdKey = Range("Z1").Value
  
  VendorPwdChk = Encrypt(VendPwd, PwdKey)
  txtVendorCode.Text = DecodeVendor
  blnRC = False
  
   If (VendorAc = DecodeVendor And VendorPwd = VendorPwdChk) Then 'DecodePwd
     LoginForm.Hide
     'lngINet = InternetOpen("PO FTP Control", 1, vbNullString, vbNullString, 0)
     'If lngINet > 0 Then
        'lngINetConn = InternetConnect(lngINet, InetIP, 0, InetLogin, InetPwd, 1, 0, 0)
           'If (lngINetConn > 0) Then
              'MsgBox "FTP Server Connected.......", vbInformation, "FTP Alert"
              'Generate FlatFile
              Call GenerateFlatFile_PO
              'FTP Upload
              Call Upload_PO_TOFTP
              'Rename the PO file .rat to .txt
              'Call Upload_PO_TOFTP_RenameFileName
              MsgBox "PO Acknowledgement " & Range("T1").Value & " has been sent successfully. You may receive email notification,if there is any error.Thank You.", vbInformation, "PO Alert"
              Sheet6.cmdSubmit.Enabled = False
           Else
              MsgBox "PO Acknowledgement Submission Failed!.", vbCritical, "Error Alert"
              Exit Sub
           End If
     'Else
        'MsgBox "FTP Connection problem with Server..", vbCritical, "Error Alert"
        'InternetCloseHandle lngINetConn
        'InternetCloseHandle lngINet
     'End If
   Else
     MsgBox "Invalid Login", vbCritical, "Login Error"
     txtPassword.Text = ""
   End If
End Sub
Sub GenerateFlatFile_PO()
'**************************************************************
'Created By : Ve.Balakrishnan
'Date On    : Nil
'Purpose    : Generate Purchase Order as a txt file to FTP
'In         : Nil
'Out        : Nil
'**************************************************************
 On Error Resume Next
    'Call FTP_Folder
    'Call PO_Folder
    
    'PO Status
        If (Sheet6.OptionButton1.Value = True) Then
               POStatus = "Ack"
        ElseIf (Sheet6.OptionButton2.Value = True) Then
               POStatus = "Rejected"
        End If
        
    'PO Header
    PO_Number = Range("T1").Value
    RowCount = Range("U1").Value
    
    Dim LogFileName As String
    Dim FileName As String
    Dim Filena As String
    
    'FileName Save with TimeStamp
    'FileName = "PO_" & PO_Number & "_" & Format(Now(), "ddMMyyyy") & "_" & Format(Now(), "HHMMSS")
      
    'LogFileName = "C:\" & FileName & ".txt"
    'LogFileName = PO_Drive & PO_DriveFormat & PO_Dir & PO_DirFormat & FileName & ".rat"
    
    'FTP_SourceFile = FileName & ".rat"
    'FTP_DesignFile = FileName & ".txt"

    
    'Dim FileNum As Integer
    'FileNum = FreeFile
    
    Dim POItems As String
    Dim ConstRow As Integer
    Dim TempA As String
    
    ConstRow = 12
    TempA = "A"
    
    'RFQ Header Write
    'Open LogFileName For Append As #FileNum
    'Print #FileNum, "H" & "|" & PO_Number & "|"
    'Print #FileNum, POStatus
    'Close #FileNum
    
    'RFQ Item Details Write
    ItemCount = ConstRow + RowCount - 1
    For i = ConstRow To ItemCount '14
        POItems = "I" & "|" & "00" & Range(TempA & ConstRow).Value & "|" & POStatus
        
        'Open LogFileName For Append As #FileNum
            'Print #FileNum, POItems
        'Close #FileNum
        
        ConstRow = ConstRow + 1
        
    Next

End Sub
'Private Sub Upload_PO_TOFTP()
'**************************************************************
'Created By : Ve.Balakrishnan
'Date On    : Nil
'Purpose    : Generated txt file upload to FTP Server
'In         : txt file
'Out        : Nil
'**************************************************************
    'RFQ submition upload
    'On Error Resume Next
    'Dim FTPDecode As DecodeString
    'Set FTPDecode = New DecodeString
    
    'strLocalFolderName = FTP_Drive & FTP_DriveFormat & FTP_Dirs & FTP_DirFormat
    'strFTPServerName = FTPDecode.DecodeStr(Range("V1").Value)
    'strLoginID = FTPDecode.DecodeStr(Range("W1").Value)
    'strPassword = FTPDecode.DecodeStr(Range("X1").Value)
    'FTPDirPath = FTPDecode.DecodeStr(Range("Y1").Value)
    
    'Set File name
    'strFilePut = PO_Drive & PO_DriveFormat & PO_Dir & PO_DirFormat & "*.rat"
    
    'Generate FTP command
    'strFTPScriptFileName = strLocalFolderName & FTP_Dirs & ".txt"
    
    'Set objFSO = CreateObject("Scripting.FileSystemObject")
    
    'If (objFSO.FileExists(strFTPScriptFileName)) Then
    'objFSO.DeleteFile (strFTPScriptFileName)
    'End If
    
    'Set objMyFile = objFSO.CreateTextFile(strFTPScriptFileName, True)
    'objMyFile.WriteLine ("open " & strFTPServerName)
    'objMyFile.WriteLine (strLoginID)
    'objMyFile.WriteLine (strPassword)
    'objMyFile.WriteLine ("bin")
    'objMyFile.WriteLine ("lcd " & strLocalFolderName)
    'objMyFile.WriteLine ("prompt off")
    'objMyFile.WriteLine ("cd " & FTPDirPath)
    'objMyFile.WriteLine ("send " & strFilePut)
    'objMyFile.WriteLine ("prompt off")
    'objMyFile.WriteLine ("mput " & strFilePut)
    'objMyFile.WriteLine ("disconnect")
    'objMyFile.WriteLine ("prompt off")
    'objMyFile.WriteLine ("bye")
    'objMyFile.Close
    
    'Execute the FTP script.
    'Set WshShell = CreateObject("WScript.Shell")
    'Set WshSysEnv = WshShell.Environment("VOLATILE")
    'Debug.Print WshSysEnv("LOGONSERVER")
    'WshShell.Run "ftp -s:" & Chr(34) & strFTPScriptFileName & Chr(34), , True
    
    'Set objFSO = Nothing
    'Set objMyFile = Nothing
    'Set objShell = Nothing
    
     'On Error Resume Next
        'Kill FTP_Drive & FTP_DriveFormat & FTP_Dirs & FTP_DirFormat & "*.txt"
        'Kill PO_Drive & PO_DriveFormat & PO_Dir & PO_DirFormat & "*.rat"
        'On Error GoTo 0
    
'End Sub
'Private Sub Upload_PO_TOFTP_RenameFileName()
'**************************************************************
'Created By : Ve.Balakrishnan
'Date On    : Nil
'Purpose    : PO Submited file rename from .rat to .txt
'In         : txt file
'Out        : Nil
'**************************************************************
    'RFQ submition upload
    'On Error Resume Next
    'Dim FTPDecode As DecodeString
    'Set FTPDecode = New DecodeString
    
    'strLocalFolderName = FTP_Drive & FTP_DriveFormat & FTP_Dirs & FTP_DirFormat
    'strFTPServerName = FTPDecode.DecodeStr(Range("V1").Value)
    'strLoginID = FTPDecode.DecodeStr(Range("W1").Value)
    'strPassword = FTPDecode.DecodeStr(Range("X1").Value)
    'FTPDirPath = FTPDecode.DecodeStr(Range("Y1").Value)
    
    'Set File name
    'strFilePut = PO_Drive & PO_DriveFormat & PO_Dir & PO_DirFormat & "*.rat"
    
    'Generate FTP command
    'strFTPScriptFileName = strLocalFolderName & FTP_Dirs & ".txt"
    
    'Set objFSO = CreateObject("Scripting.FileSystemObject")
    
    'If (objFSO.FileExists(strFTPScriptFileName)) Then
    'objFSO.DeleteFile (strFTPScriptFileName)
    'End If
    
    'Set objMyFile = objFSO.CreateTextFile(strFTPScriptFileName, True)
    'objMyFile.WriteLine ("open " & strFTPServerName)
    'objMyFile.WriteLine (strLoginID)
    'objMyFile.WriteLine (strPassword)
    'objMyFile.WriteLine ("bin")
    'objMyFile.WriteLine ("lcd " & strLocalFolderName)
    'objMyFile.WriteLine ("prompt off")
    'objMyFile.WriteLine ("cd " & FTPDirPath)
    'objMyFile.WriteLine ("rename " & FTP_SourceFile & " " & FTP_DesignFile)
    'objMyFile.WriteLine ("disconnect")
    'objMyFile.WriteLine ("prompt off")
    'objMyFile.WriteLine ("bye")
    'objMyFile.Close
    
    'Execute the FTP script.
    'Set WshShell = CreateObject("WScript.Shell")
    'Set WshSysEnv = WshShell.Environment("VOLATILE")
    'Debug.Print WshSysEnv("LOGONSERVER")
    'WshShell.Run "ftp -s:" & Chr(34) & strFTPScriptFileName & Chr(34), , True
    
    'Set objFSO = Nothing
    'Set objMyFile = Nothing
    'Set objShell = Nothing
    
     'On Error Resume Next
        'Kill FTP_Drive & FTP_DriveFormat & FTP_Dirs & FTP_DirFormat & "*.txt"
        'Kill PO_Drive & PO_DriveFormat & PO_Dir & PO_DirFormat & "*.rat"
        'On Error GoTo 0
    
'End Sub
'Sub FTP_Folder()
    'If FTP_Dir = True Then
        'Exit Sub
    'Else
        'MkDir FTP_path
    'End If
'TheEnd:
    'Exit Sub
'End Sub
 'Function FTP_Dir() As Boolean
    'FTP_Dir = False
    
    'FTP_path = FTP_Drive
    'FTP_path = FTP_path & FTP_DriveFormat
    'FTP_path = FTP_path & FTP_Dirs
    'FTP_path = FTP_path & FTP_DirFormat
    'If Dir(FTP_path, vbDirectory) = "" Then FTP_Dir = False _
'Else FTP_Dir = True

'TheEnd:

    'Exit Function
'End Function
'Sub PO_Folder()
    'If PODir = True Then
        'Exit Sub
    'Else
        'MkDir PO_path
    'End If
'TheEnd:
    'Exit Sub
'End Sub
 'Function PODir() As Boolean
    'PODir = False
    
    'PO_path = PO_Drive
    'PO_path = PO_path & PO_DriveFormat
    'PO_path = PO_path & PO_Dir
    'PO_path = PO_path & PO_DirFormat
    'If Dir(PO_path, vbDirectory) = "" Then PODir = False _
'Else: PODir = True
     
'TheEnd:
     
    'Exit Function
     
'End Function
Function Encrypt(sText As String, Key As String) As String
'****************************************************************
'Created By : Ve.Balakrishnan
'Date On    : 26/03/2009
'Purpose    : Password Encrypt using XoR Algorithm
'In         : Encrypted Password
'Out        : Password compare
'****************************************************************
    Dim strChar1 As String
    Dim strTemp As String
    Dim intVal As Integer
    Dim keyVal As Integer
    Dim intLen As Integer
    Dim i As Integer
    Dim y As Integer
    
    Key = StrReverse(Key)
    intLen = Len(Key)
    keyVal = 0
    
    i = 0
    y = 0
    
    For i = 1 To intLen
      strChar1 = Mid(Key, i, 1)
      If strChar1 = "1" Then
        If i = 1 Then
            intVal = 1
        ElseIf i > 1 Then
            intVal = 1
          For y = 1 To i - 1
            intVal = intVal * 2
          Next y
        End If
       keyVal = keyVal + intVal
      End If
      intVal = 0
    Next i
    
    For i = 1 To Len(sText)
      strChar1 = Mid(sText, i, 1)
      strTemp = strTemp & Chr(Asc(strChar1) Xor Chr(Asc(keyVal)))
    Next i
    
    Encrypt = strTemp

End Function




Attribute VB_Name = "Module1"
Attribute VB_Name = "Sheet6"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Control = "OptionButton1, 43, 32, MSForms, OptionButton"
Attribute VB_Control = "OptionButton2, 44, 33, MSForms, OptionButton"
Private Sub cmdSubmit_Click()
'**************************************************************
'Created By : Ve.Balakrishnan
'Date On    : Nil
'Purpose    : Login user form
'In         : Nil
'Out        : Nil
'**************************************************************
'PO Login shows
LoginForm.Show
LoginForm.txtPassword.Text = ""
End Sub
Private Sub OptionButton1_Click()

End Sub
Attribute VB_Name = "ThisWorkbook"
Attribute VB_Base = "0{00020819-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True



INQUEST-PP=macro
