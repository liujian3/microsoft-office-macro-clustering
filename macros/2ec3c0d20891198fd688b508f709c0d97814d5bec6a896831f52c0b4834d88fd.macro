Attribute VB_Name = "Sheet1"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Sheet2"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Sheet3"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Sheet4"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Sheet5"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Sheet6"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Sheet7"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Sheet8"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "ThisWorkbook"
Attribute VB_Base = "0{00020819-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
'Dim Ve_cau_kien As kata_pro.Ve_cau_kien
'Sub Workbook_Open()
'    Set Ve_cau_kien = New kata_pro.Ve_cau_kien
'    Ve_cau_kien.show_thong_tin
'    Set Ve_cau_kien = Nothing
'End Sub

Attribute VB_Name = "Ve_dam"
Dim Ve_cau_kien As kata_pro.Ve_cau_kien


Sub laychieudai()
    Dim point1 As Variant
    Dim point2 As Variant
    Dim kc, x, y, x1, y1 As Double
On Error GoTo out:
    'Goi autocad tu excel
        On Error Resume Next
     Set acadapp = GetObject(, "autocad.application")
     If Err Then
        Err.Clear
        Set acadapp = CreateObject("autocad.application")
     End If
    acadapp.Visible = True
    Set AcadUt = acadapp.ActiveDocument.Utility
    point1 = AcadUt.GetPoint(, vbLf & "Select the first point:")
    point2 = AcadUt.GetPoint(point1, vbLf & "select the next point:")
    '''''''''''''''''''
    Set excelapp = GetObject(, "Excel.Application")
    With excelapp
        kc = Round(Sqr((point1(0) - point2(0)) ^ 2 + (point1(1) - point2(1)) ^ 2) / 5) * 5
        Select Case .Selection.Row
            Case 11
                .Selection = kc
                .Selection.Offset(0, 1).Select
                Do While kc > 0
                    point1 = point2
                    point2 = AcadUt.GetPoint(point1, vbLf & "select the next point:")
                    kc = Round(Sqr((point1(0) - point2(0)) ^ 2 + (point1(1) - point2(1)) ^ 2))
                    If kc > 0 Then
                        .Selection = kc
                        .Selection.Offset(0, 1).Select
                    End If
                Loop
            Case 20
                If .Selection.Column Mod 2 = 1 Then
                    Do While kc > 0
                        x = (point1(0) + point2(0)) / 2
                        y = (point1(1) + point2(1)) / 2
                        .Selection = kc
                        .Selection.Offset(1, 0).Select
                        point1 = AcadUt.GetPoint(, vbLf & "Chon diem dau cot:")
                        point2 = AcadUt.GetPoint(point1, vbLf & "Chon diem cuoi cot:")
                        x1 = (point1(0) + point2(0)) / 2
                        y1 = (point1(1) + point2(1)) / 2
                        kc = Round(Sqr((x - x1) ^ 2 + (y - y1) ^ 2))
                        If x + y > x1 + y1 Then
                            .Selection = kc
                        Else
                            .Selection = -kc
                        End If
                        .Selection.Offset(-1, 2).Select
                        point1 = Nothing
                        point1 = AcadUt.GetPoint(, vbLf & "Chon diem dau dam giao ke tiep:")
                        If IsEmpty(point1) Then Exit Do
                        point2 = AcadUt.GetPoint(point1, vbLf & "Chon diem cuoi dam giao:")
                        kc = Round(Sqr((point1(0) - point2(0)) ^ 2 + (point1(1) - point2(1)) ^ 2))
                    Loop
                End If
            Case Else
                MsgBox "Ban chon vi tri dau tien chua hop ly!", vbOKOnly, "Thong bao"
        End Select
    End With
out:
End Sub

Sub lay_chdai()
    Call laychieudai
End Sub
Sub chuyen_thep(x, sl, phi) 'x=5f20-->sl=5, phi=20
Dim f As Integer
    If Len(x) > 2 Then
        f = InStr(x, "f")
        If f = 0 Then f = InStr(x, "F")
        sl = Val(Left(x, f - 1))
        phi = Val(Right(x, Len(x) - f))
    Else
        sl = 0
    End If
End Sub
Sub chuyen_ht(x, delta_h, sl, phi) 'x=-50;5f20-->sl=5, phi=20
Dim f, ph As Integer
    f = InStr(x, "f")
    If f = 0 Then f = InStr(x, "F")
    ph = InStr(x, ";")
    If ph > 0 Then
        delta_h = Val(Left(x, f - 1))
        sl = Val(Mid(x, ph + 1, f - ph))
        phi = Val(Right(x, Len(x) - f))
    ElseIf Len(x) > 0 Then
        delta_h = Val(x)
    End If
End Sub
Sub abc()
Dim ht, hd, sl_t, phi_t, sl_d, phi_d, i As Integer
    Application.ScreenUpdating = False
    n = Range("A28")
    Call chuyen_thep(Range("B11"), sl_t, phi_t) 'so cay thep chiu luc phia tren
    Call chuyen_thep(Range("B12"), sl_d, phi_d) 'so cay thep chiu luc phia duoi
    With Range("B9")
        For i = 1 To n
            Call chuyen_ht(.Offset(10, i * 2), ht, sl_t, phi_t) 'giat dam phia tren
            Call chuyen_ht(.Offset(12, i * 2), hd, sl_d, phi_d)   'giat dam phia duoi
        Next i
    End With
    Range("B61") = Range("B5") + ht - hd
    Range("B63") = CStr(sl_t) + "f" + CStr(phi_t)
    Range("B64") = CStr(sl_d) + "f" + CStr(phi_d)
    Do While IsEmpty(Range("A24").Offset(1, 2 * n)) And IsEmpty(Range("A24").Offset(0, 2 * n)) And n > 1
        n = n - 1
    Loop
    For i = 1 To 20
        Range("E60").Offset(i, 0) = Range("A24").Offset(i, 2 * n)
        Range("E60").Offset(i, 1) = Range("A24").Offset(i, 2 * n + 1)
    Next i
    '''''''''''''''
    Dim sc As SeriesCollection
    ActiveSheet.ChartObjects("Chart 38").Activate
    Set sc = ActiveChart.SeriesCollection
    Set Ve_cau_kien = New kata_pro.Ve_cau_kien
    bieudo1 = Ve_cau_kien.bieudo(Range("E61:F80"), sc)
    Set Ve_cau_kien = Nothing
    Application.ScreenUpdating = True
End Sub
Sub xemten_bd()
    MsgBox ActiveChart.Name
End Sub


Attribute VB_Name = "save_info"
Dim i, j, j1 As Integer
Sub save()
    i = 1
    Do While (Not (IsEmpty(Sheets("save_info").Range("A1").Offset(i - 1, 4))))
        If Sheets("save_info").Range("A1").Offset(i - 1, 4) = Range("B3") Then
            Exit Do
        End If
        i = i + 1
    Loop
    With Sheets("save_info")
        .Range("A1:ZZ1").Offset(i - 1, 0).ClearContents
        For j = 1 To 9
            .Cells(i, 2 * j - 1) = Cells(j, 2)
            .Cells(i, 2 * j) = Cells(j, 7)
        Next j
        .Cells(i, 19) = Range("I1")
        .Cells(i, 20) = Range("I5")
        .Cells(i, 21) = Range("H3")
        .Cells(i, 22) = Range("H5")
        .Cells(i, 23) = Range("B10")
        .Cells(i, 24) = Range("B11")
        .Cells(i, 25) = Range("B12")
        ''dai gia cuong
        .Cells(i, 26) = Range("I8")
        .Cells(i, 27) = Range("J7")
        .Cells(i, 28) = Range("J9")
        j = 29
        ''''
        j1 = 1
        Do While Not (IsEmpty(Range("B10").Offset(1, j1)))
            .Cells(i, j) = Range("B10").Offset(1, j1)
            For k = 1 To 32
                .Cells(i, j + k) = Range("B10").Offset(2 + k, j1)
            Next k
            j = j + 33
            j1 = j1 + 1
        Loop
    End With
End Sub
Sub load_data()
Dim ten_dam As String
    i = 1
    ten_dam = InputBox("Nhap ten dam :")
    ktr = False
    Application.ScreenUpdating = False
    Do While Not (IsEmpty(Sheets("save_info").Range("A1").Offset(i - 1, 4)))
        If Sheets("save_info").Range("A1").Offset(i - 1, 4) = ten_dam Then
            ktr = True
            Range("C11:ZZ44").ClearContents
            Exit Do
        End If
        i = i + 1
    Loop
    If Not ktr Then
         MsgBox "Dam " + ten_dam + " chua duoc SAVE"
         Exit Sub
    End If
    With Sheets("save_info")
        For j = 1 To 9
            If j > 3 Or Not IsEmpty(.Cells(i, 2 * j - 1)) Then Cells(j, 2) = .Cells(i, 2 * j - 1)
            If j > 3 Or Not IsEmpty(.Cells(i, 2 * j)) Then Cells(j, 7) = .Cells(i, 2 * j)
        Next j
        Range("I1") = .Cells(i, 19)
        Range("I5") = .Cells(i, 20)
        Range("H3") = .Cells(i, 21)
        Range("H5") = .Cells(i, 22)
        Range("B10") = .Cells(i, 23)
        Range("B11") = .Cells(i, 24)
        Range("B12") = .Cells(i, 25)
        ''dai gia cuong
        Range("I8") = .Cells(i, 26)
        Range("J7") = .Cells(i, 27)
        Range("J9") = .Cells(i, 28)
        j = 29
        ''''
        j1 = 1
        Do While Not (IsEmpty(.Cells(i, j)))
            Range("B10").Offset(1, j1) = .Cells(i, j)
            For k = 1 To 32
                Range("B10").Offset(2 + k, j1) = .Cells(i, j + k)
            Next k
            j = j + 33
            j1 = j1 + 1
        Loop
    End With
    Application.ScreenUpdating = True
End Sub

Function small_kata(x As Object, k As Byte) As Double
Dim a(10000) As Double
Dim i, j As Integer
    n = 0
    Do While (Not IsEmpty(x(n + 1))) And n < x.Count
        n = n + 1
        a(n) = Val(x(n))
    Loop
    If n = 0 Then Exit Function
    For i = 1 To n - 1
        For j = i + 1 To n
            If a(i) > a(j) Then
                tam = a(i): a(i) = a(j): a(j) = tam
            End If
        Next j
    Next i
    j = 1
    If k > 1 Then
        For i = 2 To n
            If a(i - 1) <> a(i) Then
                j = j + 1
                If j = k Then
                    small_kata = a(i)
                    Exit Function
                End If
            End If
        Next i
        small_kata = 0
    Else
        small_kata = a(1)
    End If
End Function
Function tra_bang_kl(phi As Object) As Double
        Select Case Val(phi)
            Case 6
                tra_bang_kl = 0.222
            Case 8
                tra_bang_kl = 0.395
            Case 10
                tra_bang_kl = 0.617
            Case 12
                tra_bang_kl = 0.888
            Case 14
                tra_bang_kl = 1.21
            Case 16
                tra_bang_kl = 1.58
            Case 18
                tra_bang_kl = 2
            Case 20
                tra_bang_kl = 2.47
            Case 22
                tra_bang_kl = 2.98
            Case 25
                tra_bang_kl = 3.85
            Case 28
                tra_bang_kl = 4.84
            Case 32
                tra_bang_kl = 6.31
            Case 36
                tra_bang_kl = 7.99
            Case 38
                tra_bang_kl = 8.9
            Case 40
                tra_bang_kl = 9.863
            Case 41
                tra_bang_kl = 10.36
            Case 43
                tra_bang_kl = 11.4
            Case 50
                tra_bang_kl = 15.42
            Case 51
                tra_bang_kl = 16.04

        End Select
End Function
Attribute VB_Name = "to_hop"
Type info_thep_cat
    phi As Integer
    dai As Integer
    sl As Integer
    mo_ta As String
    du As Integer
End Type
Dim thep_tp() As info_thep_cat
Dim kho_thep(10 To 40) As Collection

Sub update_collection(clt As Collection, dai As Integer, sl As Integer)
Dim i As Integer
Dim text As String
Dim sl1 As Integer
    For i = 1 To clt.Count
        text = clt.Item(i)
        If Val(clt.Item(i)) = dai Then
            sl1 = Val(Right(text, Len(text) - InStr(text, "*")))
            clt.Remove i
            If sl1 + sl <> 0 Then
                If i = clt.Count + 1 Then
                    clt.Add CStr(dai) + "*" + CStr(sl1 + sl)
                Else
                    clt.Add CStr(dai) + "*" + CStr(sl1 + sl), , i
                End If
            End If
            Exit Sub
        End If
    Next
    clt.Add CStr(dai) + "*" + CStr(sl)
End Sub
Sub lay_kho_thep()
Dim dai As Integer
Dim sl As Integer
    For i = LBound(kho_thep) To UBound(kho_thep)
        Set kho_thep(i) = New Collection
        kho_thep(i).Add "11700*1000"
    Next
    With Sheets("Kho_thep").Range("A3")
        j = 0
        Do While Not (IsEmpty(.Offset(-1, j)))
            phi = Val(Right(.Offset(-1, j), 2))
            If 6 <= phi And phi <= 40 Then
                i = 1
                Do While Not (IsEmpty(.Offset(i, j)))
                    dai = .Offset(i, j)
                    sl = .Offset(i, j + 1)
                    Call update_collection(kho_thep(phi), dai, sl)
                    i = i + 1
                Loop
            End If
            j = j + 2
        Loop
    End With
End Sub
Sub up_kho_thep()
Dim cot(10 To 40) As Integer
Dim dong As Integer
    Sheets("Kho_thep").Range("A4:X1000").ClearContents
    With Sheets("Kho_thep").Range("A3")
        j = 0
        Do While Not (IsEmpty(.Offset(-1, j)))
            phi = Val(Right(.Offset(-1, j), 2))
            cot(phi) = j
            j = j + 2
        Loop
        For i = LBound(kho_thep) To UBound(kho_thep)
            't|fffd|m cot phi
            dong = 0
            If kho_thep(i).Item(1) <> "11700*1000" Then
                dong = dong + 1
                text = kho_thep(i).Item(1)
                sl1 = Val(Right(text, Len(text) - InStr(text, "*"))) - 1000
                .Offset(dong, cot(i)) = 11700
                .Offset(dong, cot(i) + 1) = sl1
            End If
            For j = 2 To kho_thep(i).Count
                dong = dong + 1
                text = kho_thep(i).Item(j)
                sl1 = Val(Right(text, Len(text) - InStr(text, "*")))
                .Offset(dong, cot(i)) = Val(text)
                .Offset(dong, cot(i) + 1) = sl1
            Next
        Next
    End With
End Sub
Sub update_kho_thep()
Dim phi As Integer
Dim dai As Integer
Dim sl As Integer
    Call lay_kho_thep
    i = 0
    With Range("Q3")
    Do While Not (IsEmpty(.Offset(i, 0)))
        phi = .Offset(i, 0)
        dai = .Offset(i, 1)
        sl = .Offset(i, 2)
        Call update_collection(kho_thep(phi), dai, -sl)
        dai = .Offset(i, 4)
        If dai > 0 Then Call update_collection(kho_thep(phi), dai, sl)
        i = i + 1
    Loop
    End With
    Call up_kho_thep
End Sub

Sub cap_nhat_thep_tp(ByVal dai As Integer, ByVal phi As Integer, ByVal sl As Integer)
Dim i As Integer
    ktra = False
        For i = 1 To UBound(thep_tp)
            If phi = thep_tp(i).phi And dai = thep_tp(i).dai Then
                thep_tp(i).sl = thep_tp(i).sl + sl
                ktra = True
                Exit For
            End If
        Next
        If Not ktra Then
            ReDim Preserve thep_tp(UBound(thep_tp) + 1)
            thep_tp(UBound(thep_tp)).phi = phi
            thep_tp(UBound(thep_tp)).sl = sl
            thep_tp(UBound(thep_tp)).dai = dai
        End If
End Sub
Function chuyen_text(ByVal text As String, ByVal phi As Integer, ByVal sl As Integer, ByRef tong As Integer) As String
Dim kq As String
Dim so() As Integer
Dim n, i, j, dem, tam As Integer
    ReDim so(1)
     n = 1: so(n) = CStr(Val(text))
    If 0 < InStr(text, "*") And InStr(text, "*") < 4 Then
        dem = so(n) - 1
        text = Right(text, Len(text) - InStr(text, "*"))
        so(n) = CStr(Val(text))
        For i = 1 To dem
            n = n + 1
            ReDim Preserve so(n)
            so(n) = CStr(Val(text))
        Next i
    End If
    Do While InStr(text, "+") > 0
        text = Right(text, Len(text) - InStr(text, "+"))
        n = n + 1
        ReDim Preserve so(n)
        so(n) = CStr(Val(text))
        If 0 < InStr(text, "*") And InStr(text, "*") < 4 Then
            dem = so(n) - 1
            text = Right(text, Len(text) - InStr(text, "*"))
            so(n) = CStr(Val(text))
            For i = 1 To dem
                n = n + 1
                ReDim Preserve so(n)
                so(n) = CStr(Val(text))
            Next i
        End If
    Loop
    'sap xep
    For i = 1 To n - 1
        For j = i + 1 To n
            If so(i) > so(j) Then
                tam = so(i): so(i) = so(j): so(j) = tam
            End If
        Next
    Next
    'don so giong nhau
    i = 1: dem = 1
    tam = so(i)
    Do While i < n
        If tam = so(i + 1) Then
            dem = dem + 1
            i = i + 1
        Else
            Exit Do
        End If
    Loop
    If dem = 1 Then
        chuyen_text = CStr(tam)
    Else
        chuyen_text = CStr(dem) + "*" + CStr(tam)
    End If
    For i = i + 1 To n
        dem = 1
        tam = so(i)
        Do While i < n
            If tam = so(i + 1) Then
                dem = dem + 1
                i = i + 1
            Else
                Exit Do
            End If
        Loop
        If dem = 1 Then
            chuyen_text = chuyen_text + "+" + CStr(tam)
        Else
            chuyen_text = chuyen_text + "+" + CStr(dem) + "*" + CStr(tam)
        End If
    Next
    tong = 0
    For i = 1 To n
        tong = tong + so(i)
        Call cap_nhat_thep_tp(so(i), phi, sl)
    Next
End Function
Function so_sanh(x As info_thep_cat, y As info_thep_cat) As Boolean
    If x.phi > y.phi Then
        so_sanh = True
    ElseIf x.phi = y.phi Then
        If x.dai > y.dai Then
            so_sanh = True
        ElseIf x.dai = y.dai And Val(x.mo_ta) > Val(y.mo_ta) Then
            so_sanh = True
        Else
            so_sanh = False
        End If
    Else
        so_sanh = False
    End If
End Function
Sub update_bang_cat_thep()
Dim x() As info_thep_cat
Dim a As info_thep_cat
Dim tam As info_thep_cat
Dim n, tong As Integer
Dim ktra As Boolean
    i = 0
    n = 0: ReDim x(0)
    ReDim thep_tp(0)
    With Range("B3")
    Do While Not (IsEmpty(.Offset(i, 0)))
        a.phi = .Offset(i, 0)
        a.dai = .Offset(i, 1)
        a.sl = .Offset(i, 2)
        a.mo_ta = chuyen_text(Range("B3").Offset(i, 3), a.phi, a.sl, tong)
        a.du = a.dai - tong
        ktra = False
        For j = 1 To n
            If a.phi = x(j).phi And a.dai = x(j).dai And a.mo_ta = x(j).mo_ta Then
                x(j).sl = x(j).sl + a.sl
                ktra = True
                Exit For
            End If
        Next
        If Not ktra Then
            n = n + 1
            ReDim Preserve x(n)
            x(n) = a
        End If
        i = i + 1
    Loop
    End With
    'sap xep
    For i = 1 To n - 1
        For j = i + 1 To n
            If so_sanh(x(i), x(j)) Then
                tam = x(i): x(i) = x(j): x(j) = tam
            End If
        Next
    Next
    '''''''''''''''
    i = 0: n1 = n + 1
    With Range("K3")
    Do While Not (IsEmpty(.Offset(i, 0)))
        a.phi = .Offset(i, 0)
        a.dai = 11700
        a.sl = .Offset(i, 2)
        a.mo_ta = CStr(.Offset(i, 1))
        a.du = a.dai - Val(a.mo_ta)
        Call cap_nhat_thep_tp(Val(a.mo_ta), a.phi, a.sl)
        ktra = False
        For j = n1 To n
            If a.phi = x(j).phi And a.mo_ta = x(j).mo_ta Then
                x(j).sl = x(j).sl + a.sl
                ktra = True
                Exit For
            End If
        Next
        If Not ktra Then
            n = n + 1
            ReDim Preserve x(n)
            x(n) = a
        End If
        i = i + 1
    Loop
    End With
    
    ''''''''''
    Range("Q3:Y10000").ClearContents
    For i = 1 To n
        With Range("Q2")
            .Offset(i, 0) = x(i).phi
            .Offset(i, 1) = x(i).dai
            .Offset(i, 2) = x(i).sl
            .Offset(i, 3) = x(i).mo_ta
            .Offset(i, 4) = x(i).du
        End With
    Next
    '''''''''
    For i = 1 To UBound(thep_tp) - 1
        For j = i + 1 To UBound(thep_tp)
            If so_sanh(thep_tp(i), thep_tp(j)) Then
                tam = thep_tp(i): thep_tp(i) = thep_tp(j): thep_tp(j) = tam
            End If
        Next
    Next
    For i = 1 To UBound(thep_tp)
        With Range("W2")
            .Offset(i, 0) = thep_tp(i).phi
            .Offset(i, 1) = thep_tp(i).dai
            .Offset(i, 2) = thep_tp(i).sl
        End With
    Next
End Sub
Sub delete_data()
Range("A3:E10000").ClearContents
Range("I3:M10000").ClearContents
End Sub


INQUEST-PP=macro
