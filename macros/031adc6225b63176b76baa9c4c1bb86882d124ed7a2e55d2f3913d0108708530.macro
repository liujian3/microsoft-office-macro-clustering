Attribute VB_Name = "DieseArbeitsmappe"
Attribute VB_Base = "0{00020819-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Modul1"


Sub NCCodeerstellen()
Attribute NCCodeerstellen.VB_Description = "Erstellen des NC-Codes"
Attribute NCCodeerstellen.VB_ProcData.VB_Invoke_Func = "|fffd|\n14"
'
' NCCodeerstellen Makro
' Erstellen des NC-Codes
'
' Tastenkombination: Strg+|fffd|
'
    
    Rows("38:50000").ClearContents
    
    
    VorschubNCC = Cells(8, 4).Value
    Pausenvorschub = Cells(4, 8).Value
    Steigung = Cells(4, 4).Value
    Pausenzeit = Cells(4, 5).Value
    AnzahlRaupen = Cells(8, 6).Value
    Rohrdurchmesser = Cells(4, 2).Value
    Schwei|fffd|strecke = Cells(4, 7).Value
    
    Dim y As Double
    Dim z As Double
    Dim Starwert As Integer
    Dim Name As String
    Dim AnzahlLinien As Integer
    Dim GezLinien As Integer
    Dim AnzahlVerschiedeneFenster As Integer
    
    Set Drawing = Tabelle2
    Set Calculating = Tabelle1
    
    Drawing.DrawingObjects.Delete
    
    Set Calculating = ActiveWorkbook
    
    Startwert = 38
    y = 0
    z = 0
    GezLinien = 0
    
    VorschubNCC = Application.Round(VorschubNCC, 3)
    
    AnzahlVerschiedeneFenster = Cells(19, 3).Value
    Dim Anfangspunkt() As Double
    ReDim Anfangspunkt(AnzahlVerschiedeneFenster - 1)
    Dim Position() As Double
    ReDim Position(AnzahlVerschiedeneFenster - 1)
    Dim L|fffd|nge() As Double
    ReDim L|fffd|nge(AnzahlVerschiedeneFenster - 1)
    Dim Teilungsabstand() As Double
    ReDim Teilungsabstand(AnzahlVerschiedeneFenster - 1)
    Dim |fffd|ffnungswinkel() As Double
    ReDim |fffd|ffnungswinkel(AnzahlVerschiedeneFenster - 1)
    Dim AnzahlFenster() As Integer
    ReDim AnzahlFenster(AnzahlVerschiedeneFenster - 1)
    Dim WinkelZuF1() As Double
    ReDim WinkelZuF1(AnzahlVerschiedeneFenster - 1)
    Dim Fensterwinkel() As Double
    ReDim Fensterwinkel(AnzahlVerschiedeneFenster - 1)
    
    Dim Fenster() As Boolean
    ReDim Fenster(AnzahlVerschiedeneFenster - 1)
    
    Dim Reihenfolge() As Integer
    ReDim Reihenfolge(AnzahlVerschiedeneFenster - 1)
    
    For w = 0 To (AnzahlVerschiedeneFenster - 1)
    
        WinkelZuF1(w) = Cells(23 + w, 8).Value
        Reihenfolge(w) = w
    
    Next w
    
    For u = 0 To (AnzahlVerschiedeneFenster - 2)
    
        If WinkelZuF1(u) > WinkelZuF1(u + 1) Then
        
            Zwischenspeicher1 = WinkelZuF1(u)
            Zwischenspeicher2 = Reihenfolge(u)
            WinkelZuF1(u) = WinkelZuF1(u + 1)
            Reihenfolge(u) = Reihenfolge(u + 1)
            WinkelZuF1(u + 1) = Zwischenspeicher1
            Reihenfolge(u + 1) = Zwischenspeicher2
        
        End If
    
    Next u
    
    For v = 0 To (AnzahlVerschiedeneFenster - 1)
    
        Position(v) = Cells(23 + Reihenfolge(v), 3).Value
        L|fffd|nge(v) = Cells(23 + Reihenfolge(v), 4).Value
        |fffd|ffnungswinkel(v) = Cells(23 + Reihenfolge(v), 5).Value
        Teilungsabstand(v) = Cells(23 + Reihenfolge(v), 6).Value
        AnzahlFenster(v) = Cells(23 + Reihenfolge(v), 7).Value
        WinkelZuF1(v) = Cells(23 + Reihenfolge(v), 8).Value
        
        Anfangspunkt(v) = Position(v) - (L|fffd|nge(v) / 2)
        Fensterwinkel(v) = Application.Round(((|fffd|ffnungswinkel(0) / 2) + WinkelZuF1(v) - (|fffd|ffnungswinkel(v) / 2)) / 360, 3)
        
        Fenster(v) = False
        
    Next v
           
    AktGezLinien = GezLinien
    
    For a = 1 To AnzahlRaupen
    
        'Abfrage welche der Fenster in dieser Raupe ber|fffd|cksichtigt werden muss
        For b = 0 To (AnzahlVerschiedeneFenster - 1)
        
            For c = 0 To (AnzahlFenster(b) - 1)
        
                If y <= Position(b) + L|fffd|nge(b) / 2 + Teilungsabstand(b) * c And y >= Position(b) - L|fffd|nge(b) / 2 + Teilungsabstand(b) * c Then
            
                    Fenster(b) = True
                    Exit For
            
                Else
            
                    Fenster(b) = False
            
                End If
                
            Next c
        
        Next b
        
        Ber|fffd|cksichtigungen = 0
        
        For b = 0 To (AnzahlVerschiedeneFenster - 1)
        
            If Fenster(b) = True Then
                
                Ber|fffd|cksichtigungen = Ber|fffd|cksichtigungen + 1
            
            End If
        
        Next b
        
        Dim BF() As Integer
        ReDim BF(Ber|fffd|cksichtigungen)
        Var = 0
        
        For b = 0 To (AnzahlVerschiedeneFenster - 1)
        
            If Fenster(b) = True Then
                
                BF(Var) = b
                Var = Var + 1
            
            End If
        
        Next b
        
        If Ber|fffd|cksichtigungen >= 2 Then
        
            Dim |fffd|berschneidung() As Boolean
            ReDim |fffd|berschneidung(Ber|fffd|cksichtigungen - 1)
        
            For b = 0 To (AnzahlVerschiedeneFenster - 2)
            
                If (Fensterwinkel(b) + (|fffd|ffnungswinkel(b) / 360)) - Fensterwinkel(b + 1) > -0.05 Then
                
                    |fffd|berschneidung(b) = True
                    
                Else
                
                    |fffd|berschneidung(b) = False
                
                End If

            Next b
        
        End If
        
        'kein Fenster wird ber|fffd|cksichtigt
        If Ber|fffd|cksichtigungen = 0 Then
            
            AnzahlRaupenbisFenster = 0
            
            Do
                
                If y >= Schwei|fffd|strecke Then
                
                    Exit Do
                    
                End If
                
                z = z + 1
                y = z * Steigung
                AnzahlRaupenbisFenster = AnzahlRaupenbisFenster + 1
                
                For b = 0 To (AnzahlVerschiedeneFenster - 1)
                
                    For c = 0 To (AnzahlFenster(b) - 1)
        
                        If y <= Position(b) + L|fffd|nge(b) / 2 + Teilungsabstand(b) * c And y >= Position(b) - L|fffd|nge(b) / 2 + Teilungsabstand(b) * c Then
            
                            Exit Do
            
                        Else
            
                            Fenster(b) = False
            
                        End If
                                
                    Next c
                                
                Next b
                
                a = a + 1
                
            Loop
            
            z = Application.Round(y / Steigung, 3)
            y = z * Steigung
            
            ' Zeichnen
                
            AktGezLinien2 = GezLinien
            
             For g = 1 To AnzahlRaupenbisFenster
                
                    x1 = 10 + (AktGezLinien2 + g) * Steigung
                    y1 = 10
                    x2 = 10 + Steigung + (AktGezLinien2 + g) * Steigung
                    y2 = 10 + Rohrdurchmesser * 3.14

                    Name = "Linie" & AktGezLinien2 + a & "," & g
            
                    Drawing.Shapes.AddLine(x1, y1, x2, y2).Name = Name
            
                    Drawing.Shapes(Name).Line.Weight = Steigung + 1
                    Drawing.Shapes(Name).Line.ForeColor.RGB = RGB(0, 0, 0)
                    
                    GezLinien = GezLinien + 1
                    
            Next g
            
        End If
        
        ' Ein Fenster wird ber|fffd|cksichtigt
        If Ber|fffd|cksichtigungen = 1 Then
        
            zAkt = z
        
            If Application.Round(z, 0) - z > 0 Then
                    
                z = Application.Round(z, 0) - (1 - Fensterwinkel(BF(0)))
                y = Application.Round(z * Steigung, 3)
               
            Else
            
                z = Application.Round(z, 0) + Fensterwinkel(BF(0))
                y = Application.Round(z * Steigung, 3)
                
            End If
                
            Cells(Startwert, 4).Value = "G1"
            Cells(Startwert, 5).Value = "y"
            Cells(Startwert, 7).Value = "z"
            Cells(Startwert, 6).Value = y
            Cells(Startwert, 8).Value = z
            Cells(Startwert, 10).Value = "F" & VorschubNCC
                
            Cells(Startwert + 1, 4).Value = "m9"
                        
            z = Application.Round(z + |fffd|ffnungswinkel(BF(0)) / 360, 3)
            y = Application.Round(z * Steigung, 3)
                        
            Cells(Startwert + 2, 4).Value = "G1"
            Cells(Startwert + 2, 5).Value = "y"
            Cells(Startwert + 2, 7).Value = "z"
            Cells(Startwert + 2, 6).Value = y
            Cells(Startwert + 2, 8).Value = z
            Cells(Startwert + 2, 10).Value = "F" & Pausenvorschub
                
            Cells(Startwert + 3, 4).Value = "m8"
                
            Cells(Startwert + 4, 4).Value = "g04"
            Cells(Startwert + 4, 5).Value = "p" & Pausenzeit
                    
            Startwert = Startwert + 5
            z = Application.Round(zAkt + 1, 3)
            y = Application.Round(z * Steigung, 3)
                    
            ' Zeichnen
                    
            x1 = 10 + (AktGezLinien + a) * Steigung
            y1 = 10
            x2 = 10 + (AktGezLinien + Fensterwinkel(BF(0)) + a) * Steigung
            y2 = 10 + (Fensterwinkel(BF(0))) * Rohrdurchmesser * 3.14
    
            Name = "Linie" & AktGezLinien + a
                
            Drawing.Shapes.AddLine(x1, y1, x2, y2).Name = Name
                        
            Drawing.Shapes(Name).Line.Weight = Steigung + 1
            Drawing.Shapes(Name).Line.ForeColor.RGB = RGB(0, 0, 0)
                        
            x1 = x2 + (|fffd|ffnungswinkel(BF(0)) / 360) * Steigung
            y1 = y2 + (|fffd|ffnungswinkel(BF(0)) / 360) * Rohrdurchmesser * 3.14
            x2 = 10 + Steigung + (AktGezLinien + a) * Steigung
            y2 = 10 + Rohrdurchmesser * 3.14
                        
            Name = "Linie" & AktGezLinien + a & "," & AktGezLinien + a
                        
            Drawing.Shapes.AddLine(x1, y1, x2, y2).Name = Name
                        
            Drawing.Shapes(Name).Line.Weight = Steigung + 1
            Drawing.Shapes(Name).Line.ForeColor.RGB = RGB(0, 0, 0)
            
            GezLinien = GezLinien + 1
        
        End If
        
        ' Zwei Fenster werden ber|fffd|cksichtigt
        If Ber|fffd|cksichtigungen = 2 Then
        
            zAkt = z
                                    
            If Application.Round(z, 0) - z > 0 Then
                            
                z = Application.Round(z, 0) - (1 - Fensterwinkel(BF(0)))
                z2 = Application.Round(z, 0) - (1 - Fensterwinkel(BF(1)))
                y = Application.Round(z * Steigung, 3)
                       
            Else
                    
                z = Application.Round(z, 0) + Fensterwinkel(BF(0))
                z2 = Application.Round(z, 0) + Fensterwinkel(BF(1))
                y = Application.Round(z * Steigung, 3)
                        
            End If
            
            If (Fenster(0) = False Or Fenster(1) = False) Then
            
                |fffd|berschneidung(0) = False
            
            End If
            
            If (Fenster(1) = False Or Fenster(2) = False) Then
            
                |fffd|berschneidung(1) = False
            
            End If
                                        
            Cells(Startwert, 4).Value = "G1"
            Cells(Startwert, 5).Value = "y"
            Cells(Startwert, 7).Value = "z"
            Cells(Startwert, 6).Value = y
            Cells(Startwert, 8).Value = z
            Cells(Startwert, 10).Value = "F" & VorschubNCC
                                        
            Cells(Startwert + 1, 4).Value = "m9"
                                        
            If |fffd|berschneidung(0) = False And |fffd|berschneidung(1) = False Then
                                        
                z = Application.Round(z + |fffd|ffnungswinkel(BF(0)) / 360, 3)
                y = Application.Round(z * Steigung, 3)
                                            
                Cells(Startwert + 2, 4).Value = "G1"
                Cells(Startwert + 2, 5).Value = "y"
                Cells(Startwert + 2, 7).Value = "z"
                Cells(Startwert + 2, 6).Value = y
                Cells(Startwert + 2, 8).Value = z
                Cells(Startwert + 2, 10).Value = "F" & Pausenvorschub
                                            
                Cells(Startwert + 3, 4).Value = "m8"
                                            
                Cells(Startwert + 4, 4).Value = "g04"
                Cells(Startwert + 4, 5).Value = "p" & Pausenzeit
                                            
                z = z2
                y = Application.Round(z * Steigung, 3)
                                            
                Cells(Startwert + 5, 4).Value = "G1"
                Cells(Startwert + 5, 5).Value = "y"
                Cells(Startwert + 5, 7).Value = "z"
                Cells(Startwert + 5, 6).Value = y
                Cells(Startwert + 5, 8).Value = z
                Cells(Startwert + 5, 10).Value = "F" & VorschubNCC
                                            
                Cells(Startwert + 6, 4).Value = "m9"
                                            
                z = Application.Round(z + |fffd|ffnungswinkel(BF(1)) / 360, 3)
                y = Application.Round(z * Steigung, 3)
                                            
                Cells(Startwert + 7, 4).Value = "G1"
                Cells(Startwert + 7, 5).Value = "y"
                Cells(Startwert + 7, 7).Value = "z"
                Cells(Startwert + 7, 6).Value = y
                Cells(Startwert + 7, 8).Value = z
                Cells(Startwert + 7, 10).Value = "F" & Pausenvorschub
                                            
                Cells(Startwert + 8, 4).Value = "m8"
                                            
                Cells(Startwert + 9, 4).Value = "g04"
                Cells(Startwert + 9, 5).Value = "p" & Pausenzeit
                                            
                Startwert = Startwert + 10
                
            End If
                
            If |fffd|berschneidung(0) = True Or |fffd|berschneidung(1) = True Then
            
                z = Application.Round(z2 + |fffd|ffnungswinkel(BF(1)) / 360, 3)
                y = Application.Round(z * Steigung, 3)
                                            
                Cells(Startwert + 2, 4).Value = "G1"
                Cells(Startwert + 2, 5).Value = "y"
                Cells(Startwert + 2, 7).Value = "z"
                Cells(Startwert + 2, 6).Value = y
                Cells(Startwert + 2, 8).Value = z
                Cells(Startwert + 2, 10).Value = "F" & Pausenvorschub
                                            
                Cells(Startwert + 3, 4).Value = "m8"
                                            
                Cells(Startwert + 4, 4).Value = "g04"
                Cells(Startwert + 4, 5).Value = "p" & Pausenzeit
                                            
                Startwert = Startwert + 5
            
            End If
            
            z = zAkt + 1
            y = z * Steigung
                                        
            ' Zeichnen
                                    
            x1 = 10 + (AktGezLinien + a) * Steigung
            y1 = 10
            x2 = 10 + (AktGezLinien + Fensterwinkel(BF(0)) + a) * Steigung
            y2 = 10 + (Fensterwinkel(BF(0))) * Rohrdurchmesser * 3.14
                
            Name = "Linie" & AktGezLinien + a
                            
            Drawing.Shapes.AddLine(x1, y1, x2, y2).Name = Name
                                    
            Drawing.Shapes(Name).Line.Weight = Steigung + 1
            Drawing.Shapes(Name).Line.ForeColor.RGB = RGB(0, 0, 0)
                                    
            x1 = x2 + (|fffd|ffnungswinkel(BF(0)) / 360) * Steigung
            y1 = y2 + (|fffd|ffnungswinkel(BF(0)) / 360) * Rohrdurchmesser * 3.14
            x2 = 10 + (AktGezLinien + Fensterwinkel(BF(1)) + a) * Steigung
            y2 = 10 + (Fensterwinkel(BF(1))) * Rohrdurchmesser * 3.14
                                
            If (|fffd|berschneidung(0) = False And |fffd|berschneidung(1) = False) Then
                                
                Name = "Linie" & AktGezLinien + a & "," & AktGezLinien + a
                                    
                Drawing.Shapes.AddLine(x1, y1, x2, y2).Name = Name
                                    
                Drawing.Shapes(Name).Line.Weight = Steigung + 1
                Drawing.Shapes(Name).Line.ForeColor.RGB = RGB(0, 0, 0)
            
            End If
                                        
            x1 = x2 + (|fffd|ffnungswinkel(BF(1)) / 360) * Steigung
            y1 = y2 + (|fffd|ffnungswinkel(BF(1)) / 360) * Rohrdurchmesser * 3.14
            x2 = 10 + Steigung + (AktGezLinien + a) * Steigung
            y2 = 10 + Rohrdurchmesser * 3.14
                                    
            If Application.Round(x1, 2) < Application.Round(x2, 2) Then
                                    
                Name = "Linie" & AktGezLinien + a & "," & AktGezLinien + a & "," & AktGezLinien + a
                                    
                Drawing.Shapes.AddLine(x1, y1, x2, y2).Name = Name
                                    
                Drawing.Shapes(Name).Line.Weight = Steigung + 1
                Drawing.Shapes(Name).Line.ForeColor.RGB = RGB(0, 0, 0)
            
            End If
                                        
            GezLinien = GezLinien + 1
        
        
        End If
        
        ' Drei Fenster werden ber|fffd|cksichtigt
        If Ber|fffd|cksichtigungen = 3 Then
        
            zAkt = z
                                    
            If Application.Round(z, 0) - z > 0 Then
                            
                z = Application.Round(z, 0) - (1 - Fensterwinkel(BF(0)))
                z2 = Application.Round(z, 0) - (1 - Fensterwinkel(BF(1)))
                z3 = Application.Round(z, 0) - (1 - Fensterwinkel(BF(2)))
                y = Application.Round(z * Steigung, 3)
                       
            Else
                    
                z = Application.Round(z, 0) + Fensterwinkel(BF(0))
                z2 = Application.Round(z, 0) + Fensterwinkel(BF(1))
                z3 = Application.Round(z, 0) + Fensterwinkel(BF(2))
                y = Application.Round(z * Steigung, 3)
                        
            End If
                                        
            Cells(Startwert, 4).Value = "G1"
            Cells(Startwert, 5).Value = "y"
            Cells(Startwert, 7).Value = "z"
            Cells(Startwert, 6).Value = y
            Cells(Startwert, 8).Value = z
            Cells(Startwert, 10).Value = "F" & VorschubNCC
                                        
            Cells(Startwert + 1, 4).Value = "m9"
            
            If |fffd|berschneidung(0) = False Then
            
                z = Application.Round(z + |fffd|ffnungswinkel(BF(0)) / 360, 3)
                y = Application.Round(z * Steigung, 3)
                                                
                Cells(Startwert + 2, 4).Value = "G1"
                Cells(Startwert + 2, 5).Value = "y"
                Cells(Startwert + 2, 7).Value = "z"
                Cells(Startwert + 2, 6).Value = y
                Cells(Startwert + 2, 8).Value = z
                Cells(Startwert + 2, 10).Value = "F" & Pausenvorschub
                                                
                Cells(Startwert + 3, 4).Value = "m8"
                                                
                Cells(Startwert + 4, 4).Value = "g04"
                Cells(Startwert + 4, 5).Value = "p" & Pausenzeit
                                                
                z = z2
                y = Application.Round(z * Steigung, 3)
                                                
                Cells(Startwert + 5, 4).Value = "G1"
                Cells(Startwert + 5, 5).Value = "y"
                Cells(Startwert + 5, 7).Value = "z"
                Cells(Startwert + 5, 6).Value = y
                Cells(Startwert + 5, 8).Value = z
                Cells(Startwert + 5, 10).Value = "F" & VorschubNCC
                                                
                Cells(Startwert + 6, 4).Value = "m9"
            
                If |fffd|berschneidung(1) = False Then
                                                                    
                    z = Application.Round(z + |fffd|ffnungswinkel(BF(1)) / 360, 3)
                    y = Application.Round(z * Steigung, 3)
                                                
                    Cells(Startwert + 7, 4).Value = "G1"
                    Cells(Startwert + 7, 5).Value = "y"
                    Cells(Startwert + 7, 7).Value = "z"
                    Cells(Startwert + 7, 6).Value = y
                    Cells(Startwert + 7, 8).Value = z
                    Cells(Startwert + 7, 10).Value = "F" & Pausenvorschub
                                                
                    Cells(Startwert + 8, 4).Value = "m8"
                                                
                    Cells(Startwert + 9, 4).Value = "g04"
                    Cells(Startwert + 9, 5).Value = "p" & Pausenzeit
                    
                    z = z3
                    y = Application.Round(z * Steigung, 3)
                                                
                    Cells(Startwert + 10, 4).Value = "G1"
                    Cells(Startwert + 10, 5).Value = "y"
                    Cells(Startwert + 10, 7).Value = "z"
                    Cells(Startwert + 10, 6).Value = y
                    Cells(Startwert + 10, 8).Value = z
                    Cells(Startwert + 10, 10).Value = "F" & VorschubNCC
                                                
                    Cells(Startwert + 11, 4).Value = "m9"
                                                
                    z = Application.Round(z + |fffd|ffnungswinkel(BF(2)) / 360, 3)
                    y = Application.Round(z * Steigung, 3)
                                                
                    Cells(Startwert + 12, 4).Value = "G1"
                    Cells(Startwert + 12, 5).Value = "y"
                    Cells(Startwert + 12, 7).Value = "z"
                    Cells(Startwert + 12, 6).Value = y
                    Cells(Startwert + 12, 8).Value = z
                    Cells(Startwert + 12, 10).Value = "F" & Pausenvorschub
                                                
                    Cells(Startwert + 13, 4).Value = "m8"
                                                
                    Cells(Startwert + 14, 4).Value = "g04"
                    Cells(Startwert + 14, 5).Value = "p" & Pausenzeit
                                                
                    Startwert = Startwert + 15
                
                Else
                
                    z = Application.Round(z3 + |fffd|ffnungswinkel(BF(2)) / 360, 3)
                    y = Application.Round(z * Steigung, 3)
                                                
                    Cells(Startwert + 7, 4).Value = "G1"
                    Cells(Startwert + 7, 5).Value = "y"
                    Cells(Startwert + 7, 7).Value = "z"
                    Cells(Startwert + 7, 6).Value = y
                    Cells(Startwert + 7, 8).Value = z
                    Cells(Startwert + 7, 10).Value = "F" & Pausenvorschub
                                                
                    Cells(Startwert + 8, 4).Value = "m8"
                                                
                    Cells(Startwert + 9, 4).Value = "g04"
                    Cells(Startwert + 9, 5).Value = "p" & Pausenzeit
                                                
                    Startwert = Startwert + 10
                
                End If
            
            Else
            
                If |fffd|berschneidung(1) = False Then
                
                    z = Application.Round(z2 + |fffd|ffnungswinkel(BF(1)) / 360, 3)
                    y = Application.Round(z * Steigung, 3)
                                                
                    Cells(Startwert + 2, 4).Value = "G1"
                    Cells(Startwert + 2, 5).Value = "y"
                    Cells(Startwert + 2, 7).Value = "z"
                    Cells(Startwert + 2, 6).Value = y
                    Cells(Startwert + 2, 8).Value = z
                    Cells(Startwert + 2, 10).Value = "F" & Pausenvorschub
                                                
                    Cells(Startwert + 3, 4).Value = "m8"
                                                
                    Cells(Startwert + 4, 4).Value = "g04"
                    Cells(Startwert + 4, 5).Value = "p" & Pausenzeit
                    
                    z = z3
                    y = Application.Round(z * Steigung, 3)
                                                
                    Cells(Startwert + 5, 4).Value = "G1"
                    Cells(Startwert + 5, 5).Value = "y"
                    Cells(Startwert + 5, 7).Value = "z"
                    Cells(Startwert + 5, 6).Value = y
                    Cells(Startwert + 5, 8).Value = z
                    Cells(Startwert + 5, 10).Value = "F" & VorschubNCC
                                                
                    Cells(Startwert + 6, 4).Value = "m9"
                                                
                    z = Application.Round(z + |fffd|ffnungswinkel(BF(2)) / 360, 3)
                    y = Application.Round(z * Steigung, 3)
                                                
                    Cells(Startwert + 7, 4).Value = "G1"
                    Cells(Startwert + 7, 5).Value = "y"
                    Cells(Startwert + 7, 7).Value = "z"
                    Cells(Startwert + 7, 6).Value = y
                    Cells(Startwert + 7, 8).Value = z
                    Cells(Startwert + 7, 10).Value = "F" & Pausenvorschub
                                                
                    Cells(Startwert + 8, 4).Value = "m8"
                                                
                    Cells(Startwert + 9, 4).Value = "g04"
                    Cells(Startwert + 9, 5).Value = "p" & Pausenzeit
                                                
                    Startwert = Startwert + 10
                
                Else
                
                    z = Application.Round(z3 + |fffd|ffnungswinkel(BF(2)) / 360, 3)
                    y = Application.Round(z * Steigung, 3)
                                                
                    Cells(Startwert + 2, 4).Value = "G1"
                    Cells(Startwert + 2, 5).Value = "y"
                    Cells(Startwert + 2, 7).Value = "z"
                    Cells(Startwert + 2, 6).Value = y
                    Cells(Startwert + 2, 8).Value = z
                    Cells(Startwert + 2, 10).Value = "F" & Pausenvorschub
                                                
                    Cells(Startwert + 3, 4).Value = "m8"
                                                
                    Cells(Startwert + 4, 4).Value = "g04"
                    Cells(Startwert + 4, 5).Value = "p" & Pausenzeit
                                                
                    Startwert = Startwert + 5
                
                End If
            
            End If
            
            z = zAkt + 1
            y = z * Steigung
                                        
            ' Zeichnen
                                    
            x1 = 10 + (AktGezLinien + a) * Steigung
            y1 = 10
            x2 = 10 + (AktGezLinien + Fensterwinkel(BF(0)) + a) * Steigung
            y2 = 10 + (Fensterwinkel(BF(0))) * Rohrdurchmesser * 3.14
                
            Name = "Linie" & AktGezLinien + a
                            
            Drawing.Shapes.AddLine(x1, y1, x2, y2).Name = Name
                                    
            Drawing.Shapes(Name).Line.Weight = Steigung + 1
            Drawing.Shapes(Name).Line.ForeColor.RGB = RGB(0, 0, 0)
                                    
            x1 = x2 + (|fffd|ffnungswinkel(BF(0)) / 360) * Steigung
            y1 = y2 + (|fffd|ffnungswinkel(BF(0)) / 360) * Rohrdurchmesser * 3.14
            x2 = 10 + (AktGezLinien + Fensterwinkel(BF(1)) + a) * Steigung
            y2 = 10 + (Fensterwinkel(BF(1))) * Rohrdurchmesser * 3.14
                                
            If |fffd|berschneidung(0) = False Then
                                
                Name = "Linie" & AktGezLinien + a & "," & AktGezLinien + a
                                    
                Drawing.Shapes.AddLine(x1, y1, x2, y2).Name = Name
                                    
                Drawing.Shapes(Name).Line.Weight = Steigung + 1
                Drawing.Shapes(Name).Line.ForeColor.RGB = RGB(0, 0, 0)
            
            End If
                                        
            x1 = x2 + (|fffd|ffnungswinkel(BF(1)) / 360) * Steigung
            y1 = y2 + (|fffd|ffnungswinkel(BF(1)) / 360) * Rohrdurchmesser * 3.14
            x2 = 10 + (AktGezLinien + Fensterwinkel(BF(2)) + a) * Steigung
            y2 = 10 + (Fensterwinkel(BF(2))) * Rohrdurchmesser * 3.14
                                    
            If |fffd|berschneidung(1) = True Then
                                    
                Name = "Linie" & AktGezLinien + a & "," & AktGezLinien + a & "," & AktGezLinien + a
                                    
                Drawing.Shapes.AddLine(x1, y1, x2, y2).Name = Name
                                    
                Drawing.Shapes(Name).Line.Weight = Steigung + 1
                Drawing.Shapes(Name).Line.ForeColor.RGB = RGB(0, 0, 0)
            
            End If
            
            x1 = x2 + (|fffd|ffnungswinkel(BF(2)) / 360) * Steigung
            y1 = y2 + (|fffd|ffnungswinkel(BF(2)) / 360) * Rohrdurchmesser * 3.14
            x2 = 10 + Steigung + (AktGezLinien + a) * Steigung
            y2 = 10 + Rohrdurchmesser * 3.14
                                    
            If Application.Round(x1, 2) < Application.Round(x2, 2) Then
                                    
                Name = "Linie" & AktGezLinien + a & "," & AktGezLinien + a & "," & AktGezLinien + a & "," & AktGezLinien + a
                                    
                Drawing.Shapes.AddLine(x1, y1, x2, y2).Name = Name
                                    
                Drawing.Shapes(Name).Line.Weight = Steigung + 1
                Drawing.Shapes(Name).Line.ForeColor.RGB = RGB(0, 0, 0)
                                        
                GezLinien = GezLinien + 1
                
            End If
        
        End If
        
    Next a
    
    Cells(Startwert, 4).Value = "G1"
    Cells(Startwert, 5).Value = "y"
    Cells(Startwert, 7).Value = "z"
    Cells(Startwert, 6).Value = y
    Cells(Startwert, 8).Value = z
    Cells(Startwert, 10).Value = "F" & VorschubNCC
                                        
    Cells(Startwert + 1, 4).Value = "m9"
    
    Startwert = Startwert + 2
                
    Cells(23, 12).Value = Startwert - 34
    
    MsgBox "NC-Code wurde erstellt"
    
End Sub
Attribute VB_Name = "Modul2"
Sub Textfileerstellen()
Attribute Textfileerstellen.VB_Description = "Erstellen des Textfiles zum NC-Code"
Attribute Textfileerstellen.VB_ProcData.VB_Invoke_Func = "m\n14"
'
' Textfileerstellen Makro
' Erstellen des Textfiles zum NC-Code
'
' Tastenkombination: Strg+m
'

Dim strDateiname As String, strPath As String
Dim i As Long, lngZeile As Long
    
strPath = "C:\Test\"       'Speicherpfad eintragen
strDateiname = Cells(23, 10).Value & ".txt"                                                             'Dateinamen mit Dateiendung eintragen

lngZeile = Cells(28, 2).Value

MsgBox "Dateinamen eingetragen ?"

Open strPath & strDateiname For Output As #1

For i = 34 To lngZeile
        Print #1, Cells(i, 4) & " " & Cells(i, 5) & Cells(i, 6) & " " & Cells(i, 7) & Cells(i, 8) & " " & Cells(i, 10)
Next i

Close #1

MsgBox "Textfile wurde erstellt"

End Sub
Attribute VB_Name = "Tabelle1"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Tabelle2"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Tabelle3"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Tabelle4"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True

' InQuest injected base64 decoded content
' z{-z

INQUEST-PP=macro
