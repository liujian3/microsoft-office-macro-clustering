Attribute VB_Name = "Sheet1"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Dim sUserFullName As String

Dim FirstQuestionRow As Integer
Dim LastQuestionRow As Integer
Dim FCPARelevantRow As Integer
Dim FCPAApprovalStatusRow As Integer
Dim BlanketApprovalRow As Integer
Dim RequestorRow As Integer
Dim ProductRow As Integer
Dim YearlySpendingRow As Integer
Dim WrittenAgreementRow As Integer
Dim VendorTypeRow As Integer
Dim RequestTypeRow As Integer
Dim DPCompanyCodeRow As Integer
Dim DPConsentRow As Integer
Dim Name1Row As Integer
Dim Name2Row As Integer
Dim Name3Row As Integer

Dim RangeChanged As Range

Private Sub Worksheet_Activate()

End Sub

Private Sub Worksheet_Calculate()

End Sub

Private Sub Worksheet_Change(ByVal Target As Range)

Dim YesCount As Integer
Dim NoCount As Integer
Dim BlankCount As Integer
Dim RowCounter As Integer
'Dim wshUpload As Worksheet
Dim wsSource As Worksheet
Dim ws As Worksheet

'RangeChanged = Target

YesCount = 0
NoCount = 0
BlankCount = 0
FirstQuestionRow = 69
LastQuestionRow = 73
FCPARelevantRow = 74
FCPAApprovalStatusRow = 75
BlanketApprovalRow = 76
RequestorRow = 81
ProductRow = 63
YearlySpendingRow = 66
WrittenAgreementRow = 67
VendorTypeRow = 68
RequestTypeRow = 4
DPCompanyCodeRow = 9
DPConsentRow = 10
Name1Row = 14
Name2Row = 15
Name3Row = 16

On Error Resume Next


For Each ws In ThisWorkbook.Worksheets
'    If ws.Name = "ERD Upload Sheet" Then
'        Set wshUpload = ws
'    Else
        If ws.Name = "Source data" Then
            Set wsSource = ws
        End If
'    End If
Next ws

For RowCounter = FirstQuestionRow To LastQuestionRow
    If Cells(RowCounter, 3) = "YES" Then
        YesCount = YesCount + 1
    Else
        If Cells(RowCounter, 3) = "" Then
            BlankCount = BlankCount + 1
        Else
            NoCount = NoCount + 1
        End If
    End If
Next

If (Target.Column = 2 And Target.Row = RequestTypeRow) Or _
    (Target.Column = 3 And Target.Row >= FirstQuestionRow And Target.Row <= LastQuestionRow) Then
    If Target.Column = 2 And Target.Row = RequestTypeRow Then
        Range("C" & FirstQuestionRow, "C" & LastQuestionRow) = ""
    End If
    
    On Error Resume Next
    
    'YES/NO drop-down validation
    If Cells(RequestTypeRow, 2) = "ADD" Or Cells(RequestTypeRow, 2) = "EXTEND" Or Cells(RequestTypeRow, 2) = "RE-ACTIVATE" Then  'Or Cells(RequestTypeRow, 2) = "CHANGE" Then
        If Target.Row >= FirstQuestionRow And Target.Row <= LastQuestionRow Then
        
            wsSource.Unprotect ("\")
            If YesCount > 0 Then
                Cells(FCPARelevantRow, 2) = "FCPA APPROVAL REQUIRED!"
            ElseIf NoCount < 5 Then
                Cells(FCPARelevantRow, 2) = ""
            Else
                Cells(FCPARelevantRow, 2) = "Not FCPA Relevant"
            End If
            Range("B" & FCPAApprovalStatusRow, "B" & BlanketApprovalRow) = ""
            Range("E" & FCPAApprovalStatusRow, "E" & BlanketApprovalRow) = ""
            
            wsSource.Protect ("\")
            
            If YesCount > 4 Then
                MsgBox "'YES' can not be selected for all 5 of the questions.", vbExclamation + vbOKOnly, "Error"
                Cells(Target.Row, Target.Column) = "No"
            End If
        End If
    Else
        wsSource.Unprotect ("\")
        Cells(FCPARelevantRow, 2) = ""
        wsSource.Protect ("\")
    End If
ElseIf Target.Row = FCPAApprovalStatusRow Then
    If Target.Column = 2 Then
        'FCPA Approval Status Change
        If Target.Text = "Not FCPA Relevant" And YesCount > 0 Then
            MsgBox "Vendor cannot be 'Not FCPA Relevant' if 'Yes' was selected for any of the questions.", vbExclamation + vbOKOnly, "Error"
            Cells(Target.Row, Target.Column) = ""
        Else
            If (Target.Text = "Mandatory Service - requirement of law" Or _
                Target.Text = "FCPA Approved" Or _
                Target.Text = "FCPA approval required for each transaction") And NoCount = 5 Then
                MsgBox "Please answer 'Yes' to one or more questions before setting the Vendor as FCPA Relevant.", vbExclamation + vbOKOnly, "Error"
                Cells(Target.Row, Target.Column) = ""
            End If
        End If
    ElseIf Target.Column = 5 Then
        'FCPA Approval Date Change
        If Target.Text = "" Then
            Cells(BlanketApprovalRow, 5) = ""
        End If
    End If
ElseIf Target.Row = BlanketApprovalRow Then
    If Target.Column = 5 Then
        'FCPA Expiration Date Change
        If Target.Text > "" Then
            If Cells(FCPAApprovalStatusRow, 5) = "" Then
                MsgBox "Please enter an approval date before entering an expiry date.", vbExclamation + vbOKOnly, "Error"
                Cells(BlanketApprovalRow, 5) = ""
                Range("E" & FCPAApprovalStatusRow).Select
            Else
                If Day(DateValue(Target.Value)) <> Day(DateSerial(Year(DateValue(Target.Value)), Month(DateValue(Target.Value)) + 1, 0)) Then
                    Target.Value = DateSerial(Year(DateValue(Target.Value)), Month(DateValue(Target.Value)) + 1, 0)
                End If
            End If
        End If
    End If
End If

Application.EnableEvents = False

If Target.Column > 1 And Target.Row <> DPCompanyCodeRow And Target.Row <> DPConsentRow Then
    If Target.Column = 2 And (Target.Row = Name1Row Or Target.Row = Name2Row Or Target.Row = Name3Row) Then
        Cells(Target.Row, Target.Column) = Mid(UCase(Target.Text), 1, 35)
    Else
        If Target.Row < FirstQuestionRow Then
            If Target.Column < 4 Then
                If Len(Target.Text) > 0 Then Cells(Target.Row, Target.Column) = UCase(Target.Text)
            End If
        End If
    End If
End If

Application.EnableEvents = True

'If ActiveSheet.Name = wsSource.Name Then
'    With wshUpload
'        .Range("B24") = UCase(wsSource.Range("B10")) 'SAP NUMBER
'        .Range("C24") = UCase(wsSource.Range("B4")) 'ACTION
'        .Range("D24") = UCase(wsSource.Range("B6")) 'COMPANY CODE
'        .Range("E24") = UCase(wsSource.Range("B7")) 'PURCH ORG
'        .Range("F24") = "00001 VENDOR" 'ACCOUNT GROUP
'        .Range("G24") = UCase(wsSource.Range("B11")) 'NAME1
'        .Range("H24") = UCase(wsSource.Range("B12")) 'NAME2
'        .Range("J24") = UCase(wsSource.Range("B13")) 'ADDRESS
'        .Range("K24") = UCase(wsSource.Range("B14")) 'POSTAL CODE
'        .Range("L24") = UCase(wsSource.Range("B15")) 'CITY
'        .Range("M24") = UCase(wsSource.Range("B20")) 'COUNTRY
'        .Range("N24") = UCase(wsSource.Range("B16")) 'REGION
'        .Range("O24") = UCase(wsSource.Range("B17")) 'PO BOX
'        .Range("P24") = UCase(wsSource.Range("B18")) 'POSTAL CODE PO BOX
'        .Range("Q24") = UCase(wsSource.Range("B19")) 'CITY PO BOX
'        '.Range("S24") 'LANG KEY
'        .Range("T24") = UCase(wsSource.Range("B22")) 'PHONE 1
'        .Range("U24") = UCase(wsSource.Range("B23")) 'PHONE 2
'        .Range("V24") = UCase(wsSource.Range("B24")) 'FAX NUMBER
'        .Range("W24") = wsSource.Range("B25") 'EMAIL
'        .Range("X24") = UCase(wsSource.Range("B29")) 'TAXCODE1
'        .Range("Y24") = UCase(wsSource.Range("B30")) 'TAXCODE2
'        .Range("Z24") = UCase(wsSource.Range("B28")) 'VATNR
'        '.Range ("AA24") 'DATE OF BIRTH
'        '.Range ("AB24") 'SEX (GENDER)
'        '.Range ("AC24") 'PLACE OF BIRTH
'        .Range("AD24") = UCase(wsSource.Range("B36")) 'BANK COUNTRY
'        .Range("AE24") = UCase(wsSource.Range("B39")) 'BANK KEY
'        .Range("AF24") = UCase(wsSource.Range("B34")) 'BANK ACCOUNT
'        .Range("AG24") = UCase(wsSource.Range("B40")) 'BANK CONTROL KEY
'        .Range("AH24") = UCase(wsSource.Range("B35")) 'BANK NAME
'        '.Range("AH24")'BANK ADDRESS DETAILS
'        .Range("AJ24") = UCase(wsSource.Range("B37")) 'SWIFT
'        .Range("AK24") = UCase(wsSource.Range("B38")) 'IBAN
'        .Range("AL24") = wsSource.Range("B31") 'WITH HOLDING TAX
'        .Range("AM24") = wsSource.Range("B32") 'WITH HOLDING TAX EXPIRY DATE
'        .Range("AN24") = UCase(wsSource.Range("B41")) 'PAY TERMS
'        .Range("AO24") = UCase(wsSource.Range("B42")) 'PAY METHOD
'        .Range("AP24") = UCase(wsSource.Range("B44")) 'ORDER CURRENCY
'        .Range("AQ24") = UCase(wsSource.Range("B43")) 'INCO TERMS 1
'        '.Range("AR24")  'INCO TERMS 2
'        .Range("AS24") = UCase(wsSource.Range("B21")) 'SALESPERSON
'        '.Range("AT24") = UCase(wsSource.Range("B5")) 'REMARKS
'        .Range("AU24") = UCase(wsSource.Range("B5")) 'FCPA_REQUESTING_DEPARTMENT
'        .Range("AV24") = UCase(wsSource.Range("C53")) 'FCPA_PROVIDE_ANYTHING OF VALUE
'        .Range("AW24") = UCase(wsSource.Range("C54")) 'FCPA_TP_INTERACT_WT_OFFICIALS
'        .Range("AX24") = UCase(wsSource.Range("C55")) 'FCPA_TP_IS_OFFICIAL
'        .Range("AY24") = UCase(wsSource.Range("C56")) 'FCPA_TP_RELATIVE_TO_OFFICIAL
'        .Range("AZ24") = UCase(wsSource.Range("C57")) 'FCPA_GOVERNMENT ENGAGEMENT
'        .Range("BA24") = UCase(wsSource.Range("B52")) 'FCPA_VENDOR_TYPE
'        .Range("BB24") = UCase(wsSource.Range("B59")) 'FCPA_APPROVAL_STATUS
'        .Range("BC24") = wsSource.Range("E59") 'FCPA APPROVAL DATE
'        .Range("BD24") = wsSource.Range("E60") 'FCPA_EXPIRATION_DATE
'        .Range("BE24") = UCase(wsSource.Range("B60")) 'FCPA_BLANKET/REGIONAL_APPROVAL
'    End With
'End If

End Sub

'
'Private Function GetUserdetails() As Boolean
'
'GetUserdetails = False
'
'Set WshNetwork = CreateObject("WScript.Network")
'sUserName = WshNetwork.UserName
'Set objIADsUser = GetObject("WinNT://" & WshNetwork.UserDomain & "/" & sUserName & ",user")
'sUserFullName = objIADsUser.FullName
'
'GetUserdetails = True
'
'End Function



Private Sub Worksheet_Deactivate()

End Sub




Attribute VB_Name = "Sheet2"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Private Sub Worksheet_SelectionChange(ByVal Target As Range)

End Sub
Attribute VB_Name = "Sheet3"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Sheet4"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Sheet5"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Sheet6"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True

Private Sub Worksheet_Calculate()
Dim DataCount As Integer

Worksheets("Info").Unprotect ("\")

DataCount = 1

On Error GoTo Continue

For RowCounter = 2 To 85
    If Cells(RowCounter, 3) <> "" And Cells(RowCounter, 3) <> "#VALUE!" Then
        DataCount = DataCount + 1
    End If
Next
Worksheets("Info").Protect ("\")

Continue:

ActiveWorkbook.Names("Purchasing_Organization").RefersTo = "=Info!$C$2:$C$" & DataCount
Worksheets("Info").Protect ("\")

End Sub

Attribute VB_Name = "Sheet7"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Sheet8"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "ThisWorkbook"
Attribute VB_Base = "0{00020819-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Option Explicit
' this code is from http://answers.microsoft.com/en-us/office/forum/office_2007-customize/excel-guru-force-enable-macro-solution-seriously/cdf9885f-f4e3-4424-8fab-7adc541d1c6f
Const WelcomePage = "Macros"
Dim objIADsUser
Dim WshNetwork
Dim sUserName As String
Dim sUserFullName As String
Dim sDepartment As String
Dim sTitle As String

Dim FirstQuestionRow As Integer
Dim LastQuestionRow As Integer
Dim FCPARelevantRow As Integer
Dim FCPAApprovalStatusRow As Integer
Dim BlanketApprovalRow As Integer
Dim RequestorRow As Integer
Dim ProductRow As Integer
Dim YearlySpendingRow As Integer
Dim WrittenAgreementRow As Integer
Dim VendorTypeRow As Integer

Dim RequestorRange As Range
Dim DateTimeRange As Range

Private Sub Workbook_BeforeClose(Cancel As Boolean)
Dim ChAction As Variant

FirstQuestionRow = 69
LastQuestionRow = 73
FCPARelevantRow = 74
FCPAApprovalStatusRow = 75
BlanketApprovalRow = 76
RequestorRow = 81
ProductRow = 63
YearlySpendingRow = 66
WrittenAgreementRow = 67
VendorTypeRow = 68

If ThisWorkbook.Saved = False Then
    ChAction = MsgBox("Do you want to save the changes you made to '" & _
      ThisWorkbook.Name & "'?", vbYesNoCancel + vbExclamation)
    Select Case ChAction
    Case vbCancel
        Cancel = True
    Case vbYes
        If Not GetUserdetails Then Cancel = True

        'Perform the save (not save-as)
        If MySave(False) = "Saved" Then
            'Close the workbook without saving the changes to prevent Excel from
            'asking about saving before closing
            ThisWorkbook.Close False
        Else
            Cancel = True
        End If
    Case vbNo
        'To prevent Excel from asking about saving before closing
        ThisWorkbook.Saved = True
    End Select

End If
End Sub
'
Private Function GetUserdetails() As Boolean

GetUserdetails = False

Set WshNetwork = CreateObject("WScript.Network")
sUserName = WshNetwork.UserName
Set objIADsUser = GetObject("WinNT://" & WshNetwork.UserDomain & "/" & sUserName & ",user")
sUserFullName = objIADsUser.FullName

GetUserdetails = True

End Function

Private Sub Workbook_BeforeSave(ByVal SaveAsUI As Boolean, _
        Cancel As Boolean)
Dim wsActive As Worksheet
Set wsActive = ActiveSheet 'Record active worksheet
Dim ws As Worksheet
Dim i As Long

FirstQuestionRow = 69
LastQuestionRow = 73
FCPARelevantRow = 74
FCPAApprovalStatusRow = 75
BlanketApprovalRow = 76
RequestorRow = 81
ProductRow = 63
YearlySpendingRow = 66
WrittenAgreementRow = 67
VendorTypeRow = 68

If Not GetUserdetails Then Exit Sub

For Each ws In ThisWorkbook.Worksheets
    If UCase(ws.Name) = "SOURCE DATA" Then
        Set RequestorRange = ws.Range("B" & RequestorRow)
        Set DateTimeRange = ws.Range("D" & RequestorRow)

        If ws.Cells(FCPAApprovalStatusRow, 2) = "FCPA Approved" Then
            If ws.Cells(FCPAApprovalStatusRow, 5) = "" Then
                MsgBox "An Approval Date is required for all 'FCPA approved' vendors! Save Cancelled.", vbExclamation + vbOKOnly, "Input Required"
                ws.Range("E" & FCPAApprovalStatusRow).Select
                Exit Sub
            End If
            If ws.Cells(BlanketApprovalRow, 5) = "" Then
                MsgBox "An Expiry Date is required for all 'FCPA approved' vendors! Save Cancelled.", vbExclamation + vbOKOnly, "Input Required"
                ws.Range("E" & BlanketApprovalRow).Select
                Exit Sub
            End If
        End If
        ws.Unprotect ("\")
        If ws.Cells(4, 2) = "" Then
            RequestorRange = "" 'ws.Cells(RequestorRow, 2) = ""
            DateTimeRange = "" 'ws.Cells(RequestorRow, 4) = ""
        Else
            If ws.Cells(4, 2) <> "DELETE" And ws.Cells(4, 2) <> "CHANGE" Then
                If ws.Cells(ProductRow, 2) = "" Then
                    MsgBox "A product description is required! Save Cancelled.", vbExclamation + vbOKOnly, "FCPA Validation"
                    ws.Range("B" & ProductRow).Select
                    Exit Sub
                End If
                If ws.Cells(YearlySpendingRow, 2) = "" Then
                    MsgBox "An estimated yearly spending amount is required! Save Cancelled.", vbExclamation + vbOKOnly, "FCPA Validation"
                    ws.Range("B" & YearlySpendingRow).Select
                    Exit Sub
                End If
                If ws.Cells(WrittenAgreementRow, 2) = "" Then
                    MsgBox "'Written agreement of contract YES/NO' is a required field!", vbExclamation + vbOKOnly, "FCPA Validation"
                    ws.Range("B" & WrittenAgreementRow).Select
                    Exit Sub
                End If
                If ws.Cells(VendorTypeRow, 2) = "" Then
                    MsgBox "Vendor Type is a required field!", vbExclamation + vbOKOnly, "FCPA Validation"
                    ws.Range("B" & VendorTypeRow).Select
                    Exit Sub
                End If
                If ws.Cells(7, 4) <> "1" Then
                    For i = FirstQuestionRow To LastQuestionRow
                        If ws.Cells(i, 3) = "" Then
                            MsgBox "Please answer YES or NO to all FCPA screening questions! Save Cancelled.", vbExclamation + vbOKOnly, "FCPA Validation"
                            ws.Range("C" & i).Select
                            Exit Sub
                        End If
                    Next i
                End If
            End If
            If Len(ws.Cells(RequestorRow, 2)) = 0 Then
                GetUserdetails
                If MsgBox("I, " & sUserFullName & ", certify that the information provided, to the best of my knowledge, " & vbCrLf & _
                          "on this form is true and correct and by typing my signature above I agree and understand the typed " & vbCrLf & _
                          "electronic signature shall have the same legal effect as an original signature and is being accepted as such.", _
                          vbExclamation + vbYesNo, WshNetwork.UserName & " - Terms and Conditions") = vbNo Then Exit Sub
                ws.Range("B" & RequestorRow) = sUserFullName
                ws.Range("D" & RequestorRow) = Now
            End If
        End If
        ws.Protect ("\")
    End If
Next ws


Call MySave(SaveAsUI) 'perform the save or save-as using code

Call ShowAllSheets

wsActive.Activate 'Restore file to where user was
Cancel = True 'cancel the user-interface save or save-as
End Sub

Function MySave(Optional SaveAsUI As Boolean) As String
'Use code to perform the save or save-as
'Returns:  Saved, Not Saved
Dim strName As String
Dim intDoSave As Integer
Dim bSaved As Boolean
Dim bSaveAsHere As Boolean
MySave = "Not Saved"
Dim wsActive As Worksheet
Set wsActive = ActiveSheet 'Record active worksheet
Dim ws As Worksheet

'Turn off screen flashing and stop Excel events from occurring
With Application
    .EnableEvents = False
    .ScreenUpdating = False
End With

For Each ws In ThisWorkbook.Worksheets
    If UCase(ws.Name) = "SOURCE DATA" Then
        ws.Unprotect ("\")
        If ws.Cells(4, 2) = "" Then
            RequestorRange = ""
            DateTimeRange = ""
        Else
            If Len(ws.Cells(RequestorRow, 2)) = 0 Then
                GetUserdetails
                RequestorRange = sUserFullName
                DateTimeRange = Now
            End If
        End If
        ws.Protect ("\")
    End If
Next ws

'Perform the save-as or save
If SaveAsUI = True Then 'Perform save-as
    'Display the save-as dialog box without defaulting to original path
    strName = Application.GetSaveAsFilename
    If strName = "False" Then 'user cancelled--do nothing
        bSaved = False
    Else 'save the workbook using the supplied filename
        Call HideAllSheets
        'If the save-as path\name is the same as the current workbook, we can do a regular save
        If UCase(strName) = UCase(ThisWorkbook.FullName) Then
            ThisWorkbook.Save
            bSaved = True
        Else 'do a save-as
            If Dir(strName) <> "" Then 'if the file exists, display warning

                intDoSave = MsgBox("This file already exists.  Do you want to replace it?", vbYesNoCancel + vbExclamation)

                If intDoSave = vbYes Then
                    'So you don't get the "already exists" prompt which causes an error if user chooses No or Cancel
                    Kill (strName)
                Else 'no or cancel
                    Exit Function
                End If
            End If
            ThisWorkbook.SaveAs strName
            Application.RecentFiles.Add strName
            bSaved = True
        End If
    End If
Else 'Perform regular save
    Call HideAllSheets
    ThisWorkbook.Save
    bSaved = True
End If

'Restore screen updates and events
With Application
    .ScreenUpdating = True
    .EnableEvents = True
End With

'If the workbook got saved
If bSaved Then
    ThisWorkbook.Saved = True
    MySave = "Saved"
End If

End Function

Private Sub Workbook_Open()
    Dim ws As Worksheet
    
    Application.Calculation = xlCalculationAutomatic
    Application.ScreenUpdating = False
    Call ShowAllSheets
    Application.ScreenUpdating = True
    ThisWorkbook.Saved = True
    
End Sub

Private Sub HideAllSheets()

    Dim ws As Worksheet
    
    Worksheets(WelcomePage).Visible = xlSheetVisible
        
        For Each ws In ThisWorkbook.Worksheets
        If Not ws.Name = WelcomePage Then
            If Not ws.Visible = xlSheetVeryHidden Then ws.Visible = xlSheetVeryHidden
        Else
            ws.Visible = xlSheetVisible
        End If
    Next ws
    
    Worksheets(WelcomePage).Activate
    
End Sub

Private Sub ShowAllSheets()

    Dim ws As Worksheet
    
    Worksheets("Source data").Visible = xlSheetVisible
    
    For Each ws In ThisWorkbook.Worksheets
        If ws.Name = WelcomePage Or ws.Name = "Info" Or ws.Name = "CompanyInfo" Then
            If Not ws.Visible = xlSheetVeryHidden Then ws.Visible = xlSheetVeryHidden
        Else
            ws.Visible = xlSheetVisible
       End If
    Next ws
    
    'Worksheets(WelcomePage).Visible = xlSheetVeryHidden
    Worksheets("Source data").Activate
    
End Sub









INQUEST-PP=macro
