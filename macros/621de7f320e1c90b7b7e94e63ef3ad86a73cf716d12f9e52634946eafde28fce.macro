Attribute VB_Name = "Fragebogen"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Control = "cb_Export, 143, 0, MSForms, CommandButton"
Attribute VB_Control = "cb_Drucken, 142, 1, MSForms, CommandButton"
Attribute VB_Control = "cb_Speichern, 141, 2, MSForms, CommandButton"
Option Explicit

Private Sub cb_Speichern_Click()
    Call mdl_Main.Werte_auslesen
    Call mdl_Main.Speichern_unter
End Sub

Private Sub cb_Drucken_Click()
    Call Mdl_Druck.Druckaufbereitung
End Sub

Private Sub cb_Export_Click()
    If Not Daten_fuer_Export_vorhanden Then
        Exit Sub
    End If
    Call mdl_Main.Dialogwechsel(kein_Dialog, Export)
End Sub

Public Sub Worksheet_Change(ByVal Target As Excel.Range)
    Dim rng1 As String
    Dim rng2 As String
    Dim rng3 As String
    
    'Blattschutz und Eingabepr|fffd|fung deaktivieren
    Call Mdl_Hilfsfunktionen.Blattschutz_aufheben("Personalfragebogen")
    Application.EnableEvents = False
    
    On Error Resume Next
    If Not Target = "" Then
        Call Mdl_Pruefungen.Eingabepruefung(Target.Address(False, False))
    End If
    On Error GoTo 0
    
    With Worksheets("Assistent")
        rng1 = Left(.Cells(Name_des_Mitarbeiters_Personalnummer, 4).Value, InStr(.Cells(Name_des_Mitarbeiters_Personalnummer, 4).Value, ";") - 1)
        rng2 = .Cells(Vorname, 4).Value
        rng3 = .Cells(Familienname, 4).Value
    End With
    With Worksheets("Personalfragebogen")
        If rng2 = Target.Address(False, False) Or rng3 = Target.Address(False, False) Then
            .Range(rng1).Value = .Range(rng2).Value & " " & .Range(rng3).Value
        End If
    End With
    
    'Blattschutz und Eingabepr|fffd|fung wieder aktivieren
    Mdl_Hilfsfunktionen.Blattschutz_setzen ("Personalfragebogen")
    Application.EnableEvents = True
End Sub

Private Sub Worksheet_BeforeRightClick(ByVal Target As Range, Cancel As Boolean)
   Cancel = True
End Sub
Attribute VB_Name = "Mdl_Druck"
Option Explicit
Const Monat_Stand As String = "02/2012"

Sub Druckaufbereitung()
    Dim shp As Shape
    Dim adr As String
    Dim str As String
    Dim rng As String
    Dim dat As String
    Dim valdat As String
    Dim i As Integer
    Dim j As Integer
    Dim k As Integer
    Dim tmp_brk As Integer
    Dim tmp As Integer
    Dim rng_brk As String
    
    'Beginn Geschwindigkeitsoptimierung ****************
    Dim calcMode As XlCalculation, updateMode As Boolean
    calcMode = Application.Calculation
    updateMode = Application.ScreenUpdating
    Application.Calculation = xlManual
    Application.ScreenUpdating = False
    '***************************************************
    
    'Blattschutz und Eingabepr|fffd|fung deaktivieren
    Call Mdl_Hilfsfunktionen.Blattschutz_aufheben("Personalfragebogen")
    Application.EnableEvents = False
    
    'Tempor|fffd|res Durckblatt anlegen
    Call Druckblatt_loeschen 'evtl. bereits vorhandenes Druckblatt l|fffd|schen
    Worksheets("Personalfragebogen").Copy After:=Sheets("Personalfragebogen")
    ActiveSheet.Name = "Druckansicht"
    Call Mdl_Hilfsfunktionen.Blattschutz_aufheben("Duckansicht")
    
    'Werte auslesen
    Call mdl_Main.Werte_auslesen
    
    'Alle ComboBoxen und CommandButtons aus der Druckansicht entfernen
    On Error Resume Next
    With Worksheets("Druckansicht")
        For Each shp In .Shapes
            shp.Delete
        Next shp
    End With
    On Error GoTo 0
    
    Call Mdl_Formatierung.Logo_einfuegen("Druckansicht")

    'Rahmen f|fffd|r den Druck anpassen und Werte aus ComboBoxen |fffd|bernehmen
    With Worksheets("Assistent")
        adr = .Cells(Rows.count, 1).End(xlUp).Address(True, False)
        j = Mid(adr, InStr(adr, "$") + 1)
        
        For i = 1 To j
            If .Cells(i, 5).Value = "" Or i >= weitere_Beschaeftigungen And i <= weitere_Beschaeftigungen_5 Then
                str = .Cells(i, 4).Value
                
                Do Until str = ""
                    If InStr(str, ";") = 0 Then
                        rng = str
                        str = ""
                    Else
                        rng = Left(str, InStr(str, ";") - 1)
                        str = Mid(str, InStr(str, ";") + 1)
                    End If
                    
                    Worksheets("Druckansicht").Range(rng).Select
                    With Selection
                        .Borders(xlEdgeLeft).LineStyle = xlNone
                        .Borders(xlEdgeTop).LineStyle = xlNone
                        .Borders(xlEdgeBottom).LineStyle = xlNone
                        .Borders(xlEdgeRight).LineStyle = xlNone
                    End With
                Loop
            Else
                If Not i = CheckBoxen_Befristung Then
                    str = .Cells(i, 4).Value
                    dat = .Cells(i, 6).Value
                    Do Until str = ""
                        If InStr(str, ";") = 0 Then
                            rng = str
                            str = ""
                            valdat = dat
                        Else
                            rng = Left(str, InStr(str, ";") - 1)
                            str = Mid(str, InStr(str, ";") + 1)
                            If Not dat = "" Then
                                valdat = Left(dat, InStr(dat, ";") - 1)
                                dat = Mid(dat, InStr(dat, ";") + 1)
                            Else
                                valdat = ""
                            End If
                        End If
                        Worksheets("Druckansicht").Range(rng).Value = valdat
                    Loop
                End If
            End If
        Next i
        If Not .Cells(CheckBoxen_Befristung, 1) = "" Then
            Call Mdl_Steuerelemente.CheckBoxen_Befristung_erzeugen("Druckansicht")
        End If
    End With
    
    'Angaben zu den Arbeitspapieren hinzuf|fffd|gen
    If Not Worksheets("Verwaltung").Cells(Angaben_zu_den_Arbeitspapieren, 1).Value = "" Then
        If Worksheets("Verwaltung").Cells(Gewaehlter_Fragebogen, 2).Value = "GfB/Minijob" Then
            Call Angaben_zu_den_Arbeitspapieren_Minijob_einfuegen
            Call Mdl_Steuerelemente.CheckBoxen_Angaben_zu_den_Arbeitspapieren_Minijob_erzeugen
        Else
            Call Angaben_zu_den_Arbeitspapieren_einfuegen
            Call Mdl_Steuerelemente.CheckBoxen_Angaben_zu_den_Arbeitspapieren_erzeugen
        End If
    End If
    
    'Arbeitnehmererkl|fffd|rung und Unterschriftszeile hinzuf|fffd|gen
    Call Arbeitnehmererklaerung_einfuegen
    Call Unterschriftszeile_einfuegen
    
    'Seite einrichten und Fu|fffd|zeile hinzuf|fffd|gen
    With Worksheets("Druckansicht")
        Application.PrintCommunication = False
        With .PageSetup
            .LeftMargin = Application.InchesToPoints(0.7)
            .RightMargin = Application.InchesToPoints(0.7)
            .TopMargin = Application.InchesToPoints(0.5)
            .BottomMargin = Application.InchesToPoints(0.5)
            .HeaderMargin = Application.InchesToPoints(0.3)
            .FooterMargin = Application.InchesToPoints(0.3)
            .Zoom = 68
        End With
        Application.PrintCommunication = True
    
    'Ende Geschwindigkeitsoptimierung ******************
    Application.Calculation = calcMode
    Application.ScreenUpdating = updateMode
    Application.Calculate
    '***************************************************
    
        ActiveWindow.ScrollRow = Mdl_Hilfsfunktionen.Letzte_benutzte_Zeile("Druckansicht")
        ActiveWindow.ScrollRow = 1
        For i = 1 To .HPageBreaks.count
            tmp_brk = .HPageBreaks(i).Location.Row
            For k = Blk_Persoenliche_Angaben To Arbeitnehmererklaerung
                If Worksheets("Verwaltung").Cells(k, 2).Value > tmp_brk Then
                    Exit For
                Else
                    If Not Worksheets("Verwaltung").Cells(k, 2).Value = "" Then
                        tmp = Worksheets("Verwaltung").Cells(k, 2).Value
                    End If
                End If
            Next k
            rng_brk = "AZ" & tmp

            .HPageBreaks.Add Before:=Range(rng_brk)
            .VPageBreaks.Add Before:=Range(rng_brk)

            ActiveWindow.ScrollRow = Mdl_Hilfsfunktionen.Letzte_benutzte_Zeile("Druckansicht")
            ActiveWindow.ScrollRow = 1
        Next i

        Application.PrintCommunication = False
        .PageSetup.LeftFooter = Chr(169) & " DATEV eG 2012, alle Rechte vorbehalten                            Stand " & Monat_Stand & "&RSeite &S von &A"
        Application.PrintCommunication = True
    
        'Falls Office Version 2007 oder neuer verwendet wird
        If Not val(Application.Version) < 12 Then
            Application.ExecuteExcel4Macro "SHOW.TOOLBAR(""Ribbon"",True)"
            
            If Not (CommandBars("Ribbon").Controls(1).Height < 100) = 0 Then
                CommandBars.ExecuteMso "MinimizeRibbon"
            End If

            .PrintPreview
            Application.ExecuteExcel4Macro "SHOW.TOOLBAR(""Ribbon"",False)"
        Else
            .PrintPreview
        End If
    End With
    
    'Erstes Eingabefeld ausw|fffd|hlen
    Worksheets("Personalfragebogen").Select
    Worksheets("Personalfragebogen").Range(Split(Worksheets("Assistent").Cells(Firma, 4).Value, ";")(0)).Select
    
    'Tempor|fffd|res Durckblatt wieder l|fffd|schen
    Call Druckblatt_loeschen
    
    'Blattschutz und Eingebepr|fffd|fung aktivieren
    Call Mdl_Hilfsfunktionen.Blattschutz_setzen("Personalfragebogen")
    Application.EnableEvents = True
    
End Sub

Private Sub Druckblatt_loeschen()
    Dim ws As Worksheet
    
    For Each ws In Worksheets
        If ws.Name = "Druckansicht" Then
            Application.DisplayAlerts = False
            ws.Delete
            Application.DisplayAlerts = True
            Exit For
        End If
    Next ws
End Sub

Private Sub Angaben_zu_den_Arbeitspapieren_einfuegen()
    Dim pos As Integer
    Dim str As String
    Dim rng As String
    Dim i As Integer
    Dim j As Integer
    
    pos = Mdl_Hilfsfunktionen.Letzte_benutzte_Zeile("Druckansicht") + 7
    Worksheets("Verwaltung").Cells(Angaben_zu_den_Arbeitspapieren, 2).Value = pos
    
    With Worksheets("Druckansicht")
        '|fffd|berschrift f|fffd|r den Abschnitt einf|fffd|gen
        .Rows(pos).RowHeight = 5.5
        .Rows(pos + 1).RowHeight = 15
        .Rows(pos + 2).RowHeight = 5.5
        .Range("D" & pos + 1).Value = "Angaben zu den Arbeitspapieren"
        With .Range("D" & pos + 1).Font
            .Name = "Verdana"
            .Size = 12
            .Bold = True
            .ColorIndex = 1
        End With
        pos = pos + Abstand_Abschnittsueberschrift
    
        'Datenfeld anlegen
        .Rows(pos & ":" & pos).RowHeight = 5.5
        .Rows(pos + 2 & ":" & pos + 2).RowHeight = 3
        .Rows(pos + 3 & ":" & pos + 3).RowHeight = 5.5
        .Rows(pos + 5 & ":" & pos + 5).RowHeight = 3
        .Rows(pos + 6 & ":" & pos + 6).RowHeight = 5.5
        .Rows(pos + 8 & ":" & pos + 8).RowHeight = 3
        .Rows(pos + 9 & ":" & pos + 9).RowHeight = 5.5
        .Rows(pos + 11 & ":" & pos + 11).RowHeight = 3
        .Rows(pos + 12 & ":" & pos + 12).RowHeight = 5.5
        .Rows(pos + 14 & ":" & pos + 14).RowHeight = 3
        .Rows(pos + 15 & ":" & pos + 15).RowHeight = 5.5
        
        With .Range("C" & pos & ":AW" & pos + 15)
            With .Interior
                .ColorIndex = 2
                .Pattern = xlSolid
            End With
            With .Borders(xlEdgeLeft)
                .LineStyle = xlContinuous
                .Weight = xlThick
                .ColorIndex = 1
            End With
            With .Borders(xlEdgeTop)
                .LineStyle = xlContinuous
                .Weight = xlThin
                .ColorIndex = 1
            End With
        End With
        
        j = 1
        For i = pos + 1 To pos + 13 Step 3
            str = Worksheets("Listen").Cells(j, Lst_Angaben_zu_den_Arbeitspapieren).Value
            If Len(str) <= 55 Then
                rng = "D" & i & ":S" & i
            Else
                rng = "D" & i & ":S" & i + 2
                i = i + 3
            End If
            With .Range(rng)
                .HorizontalAlignment = xlLeft
                .VerticalAlignment = xlTop
                .WrapText = True
                .MergeCells = True
                .Value = str
                With .Font
                    .Name = "Verdana"
                    .Size = 8
                    .Bold = False
                    .ColorIndex = 1
                End With
            End With
            j = j + 1
        Next i
        
        For i = pos + 1 To pos + 13 Step 3
            str = Worksheets("Listen").Cells(j, Lst_Angaben_zu_den_Arbeitspapieren).Value
            If Len(str) <= 55 Then
                rng = "AB" & i & ":AQ" & i
            Else
                rng = "AB" & i & ":AQ" & i + 2
                i = i + 3
            End If
            With .Range(rng)
                .HorizontalAlignment = xlLeft
                .VerticalAlignment = xlTop
                .WrapText = True
                .MergeCells = True
                .Value = str
                With .Font
                    .Name = "Verdana"
                    .Size = 8
                    .Bold = False
                    .ColorIndex = 1
                End With
            End With
            j = j + 1
        Next i
    End With
End Sub

Private Sub Angaben_zu_den_Arbeitspapieren_Minijob_einfuegen()
    Dim pos As Integer
    Dim str As String
    Dim rng As String
    Dim i As Integer
    Dim j As Integer
    
    pos = Mdl_Hilfsfunktionen.Letzte_benutzte_Zeile("Druckansicht") + 7
    Worksheets("Verwaltung").Cells(Angaben_zu_den_Arbeitspapieren, 2).Value = pos
    
    With Worksheets("Druckansicht")
        '|fffd|berschrift f|fffd|r den Abschnitt einf|fffd|gen
        .Rows(pos).RowHeight = 5.5
        .Rows(pos + 1).RowHeight = 15
        .Rows(pos + 2).RowHeight = 5.5
        .Range("D" & pos + 1).Value = "Angaben zu den Arbeitspapieren"
        With .Range("D" & pos + 1).Font
            .Name = "Verdana"
            .Size = 12
            .Bold = True
            .ColorIndex = 1
        End With
        pos = pos + Abstand_Abschnittsueberschrift
    
        'Datenfeld anlegen
        .Rows(pos & ":" & pos).RowHeight = 5.5
        .Rows(pos + 2 & ":" & pos + 2).RowHeight = 3
        .Rows(pos + 3 & ":" & pos + 3).RowHeight = 5.5
        .Rows(pos + 5 & ":" & pos + 5).RowHeight = 3
        .Rows(pos + 6 & ":" & pos + 6).RowHeight = 5.5
        .Rows(pos + 8 & ":" & pos + 8).RowHeight = 3
        .Rows(pos + 9 & ":" & pos + 9).RowHeight = 5.5
        .Rows(pos + 11 & ":" & pos + 11).RowHeight = 3
        .Rows(pos + 12 & ":" & pos + 12).RowHeight = 5.5
        .Rows(pos + 14 & ":" & pos + 14).RowHeight = 3
        .Rows(pos + 15 & ":" & pos + 15).RowHeight = 5.5
        
        With .Range("C" & pos & ":AW" & pos + 15)
            With .Interior
                .ColorIndex = 2
                .Pattern = xlSolid
            End With
            With .Borders(xlEdgeLeft)
                .LineStyle = xlContinuous
                .Weight = xlThick
                .ColorIndex = 1
            End With
            With .Borders(xlEdgeTop)
                .LineStyle = xlContinuous
                .Weight = xlThin
                .ColorIndex = 1
            End With
        End With
        
        j = 1
        For i = pos + 1 To pos + 13 Step 3
            str = Worksheets("Listen").Cells(j, Lst_Angaben_zu_den_Arbeitspapieren_Minijob).Value
            If Len(str) <= 55 Then
                rng = "D" & i & ":S" & i
            Else
                rng = "D" & i & ":S" & i + 2
                i = i + 3
            End If
            With .Range(rng)
                .HorizontalAlignment = xlLeft
                .VerticalAlignment = xlTop
                .WrapText = True
                .MergeCells = True
                .Value = str
                With .Font
                    .Name = "Verdana"
                    .Size = 8
                    .Bold = False
                    .ColorIndex = 1
                End With
            End With
            j = j + 1
        Next i
        
        For i = pos + 1 To pos + 13 Step 3
            str = Worksheets("Listen").Cells(j, Lst_Angaben_zu_den_Arbeitspapieren_Minijob).Value
            If Len(str) <= 55 Then
                rng = "AB" & i & ":AQ" & i
            Else
                rng = "AB" & i & ":AQ" & i + 2
                i = i + 3
            End If
            With .Range(rng)
                .HorizontalAlignment = xlLeft
                .VerticalAlignment = xlTop
                .WrapText = True
                .MergeCells = True
                .Value = str
                With .Font
                    .Name = "Verdana"
                    .Size = 8
                    .Bold = False
                    .ColorIndex = 1
                End With
            End With
            j = j + 1
        Next i
    End With
End Sub

Private Sub Arbeitnehmererklaerung_einfuegen()
    Dim pos As Integer
    
    pos = Mdl_Hilfsfunktionen.Letzte_benutzte_Zeile("Druckansicht") + 5
    Worksheets("Verwaltung").Cells(Arbeitnehmererklaerung, 2).Value = pos
    
    With Worksheets("Druckansicht")
        .Rows(pos).RowHeight = 3
        .Rows(pos + 1 & ":" & pos + 3).RowHeight = 12.75
        .Rows(pos + 4).RowHeight = 3
        
        .Range("D" & pos + 1).Value = "Erkl|fffd|rung des Arbeitnehmers:"
        With .Range("D" & pos + 1).Font
            .Name = "Verdana"
            .Size = 8
            .Bold = True
            .ColorIndex = 1
        End With
        
        .Range("D" & pos + 2).Value = "Ich versichere, dass die vorstehenden Angaben der Wahrheit entsprechen." & _
                                    " Ich verpflichte mich, meinem Arbeitgeber alle |fffd|nderungen, insbesondere"
        .Range("D" & pos + 3).Value = "in Bezug auf weitere Besch|fffd|ftigungen (in Bezug auf Art, Dauer und Entgeld)" & _
                                    " unverz|fffd|glich mitzuteilen."
        With .Range("D" & pos + 2 & ":D" & pos + 3).Font
            .Name = "Verdana"
            .Size = 8
            .Bold = False
            .ColorIndex = 1
        End With
    End With
End Sub

Private Sub Unterschriftszeile_einfuegen()
    Dim pos As Integer
    
    pos = Mdl_Hilfsfunktionen.Letzte_benutzte_Zeile("Druckansicht") + 5
    
    With Worksheets("Druckansicht")
        .Rows(pos).RowHeight = 3
        .Rows(pos + 1).RowHeight = 12.75
        
        .Range("D" & pos + 1).Value = "Datum (TT.MM.JJJJ)"
        With .Range("D" & pos + 1).Font
            .Name = "Verdana"
            .Size = 8
            .Bold = False
            .ColorIndex = 1
        End With
        .Range("L" & pos + 1).Value = "Unterschrift Arbeitnehmer"
        With .Range("L" & pos + 1).Font
            .Name = "Verdana"
            .Size = 8
            .Bold = False
            .ColorIndex = 1
        End With
        
        .Range("AB" & pos + 1).Value = "Datum (TT.MM.JJJJ)"
        With .Range("AB" & pos + 1).Font
            .Name = "Verdana"
            .Size = 8
            .Bold = False
            .ColorIndex = 1
        End With
        .Range("AJ" & pos + 1).Value = "Unterschrift Arbeitgeber"
        With .Range("AJ" & pos + 1).Font
            .Name = "Verdana"
            .Size = 8
            .Bold = False
            .ColorIndex = 1
        End With
        
        With .Range("C" & pos + 1 & ":Y" & pos + 1).Borders(xlEdgeTop)
            .LineStyle = xlDash
            .Weight = xlThin
            .ColorIndex = 1
        End With
        With .Range("AA" & pos + 1 & ":AW" & pos + 1).Borders(xlEdgeTop)
            .LineStyle = xlDash
            .Weight = xlThin
            .ColorIndex = 1
        End With
    End With
End Sub
Attribute VB_Name = "Mdl_Enums"
Option Explicit

Public Enum OSArchitecture
    OSA_Unknown = 0
    OSA_x86 = 1     ' 32 bit
    OSA_x64 = 2     ' 64 bit
    OSA_Itanium = 3 ' 64 bit
End Enum

Public Enum Zustand_Dateiname
    OK
    zu_lang
    enthaelt_unerlaubte_Zeichen
End Enum

Public Enum Dialog
    kein_Dialog
    Auswahl_der_Ansicht
    Export
    Export_Speichern_unter
End Enum

Public Enum Datenfeld
    kein_Datenfeld = 0
    Firma = 1
    Name_des_Mitarbeiters_Personalnummer = 2
    Familienname = 3
    Vorname = 4
    Geburtsname = 5
    Geburtsdatum = 6
    Strasse_Hausnr = 7
    PLZ_Ort = 8
    Anschriftenzusatz = 9
    Versicherungsnummer = 10
    Geburtsort = 11
    Geburtsland = 12
    Geschlecht = 13
    Familienstand = 14
    Staatsangehoerigkeit = 15
    Schwerbehindert = 16
    Kontonummer = 17
    Bankleitzahl = 18
    Bankbezeichnung = 19
    Barzahlung = 20
    Arbeitnehmernummer = 21
    Eintrittsdatum_Ersteintrittsdatum = 22
    Betriebsstaette = 23
    Berufsbezeichnung = 24
    Ausgeuebte_Taetigkeit = 25
    Art_der_Beschaeftigung = 26
    Nebenbeschaeftigung = 27
    Hoechster_Schulabschluss = 28
    Hoechste_Berufsausbildung = 29
    Beginn_der_Ausbildung = 30
    Ende_der_Ausbildung = 31
    Woechentliche_Arbeitszeit_Urlaubsanspruch = 32
    Kostenstelle = 33
    Vertragsform = 34
    Abteilungsnummer = 35
    Im_Baugewerbe_beschaeftigt_seit = 36
    Personengruppe = 37
    Status_Beschaeftigung = 38
    Art_der_Befristung = 39
    CheckBoxen_Befristung = 40
    Befristung_Arbeitsvertrag_zum = 41
    Abschluss_Arbeitsvertrag_am = 42
    Steuerklasse_Faktor = 43
    Kinderfreibetrag = 44
    Finanzamtsnummer_Identifikationsnummer = 45
    Konfession = 46
    Pauschalierung = 47
    Abwaelzung_an_Arbeitnehmer = 48
    Gesetzl_Krankenkasse = 49
    Elterneigenschaft = 50
    KV_RV = 51
    AV_PV = 52
    UV_Gefahrtarif = 53
    Krankenversicherung = 54
    Name_Krankenkasse_Private_Versicherung = 55
    RV_Option = 56
    Entlohnung = 57
    Entlohnung_2 = 58
    Entlohnung_3 = 59
    Entlohnung_4 = 60
    Entlohnung_5 = 61
    Empfaenger_VWL = 62
    Betrag_AG_Anteil = 63
    seit_wann = 64
    Vertragsnummer = 65
    Kontonummer_VWL = 66
    Bankleitzahl_VWL = 67
    Bankbezeichnung_VWL = 68
    Vorbeschaeftigungszeiten = 69
    Vorbeschaeftigungszeiten_2 = 70
    Vorbeschaeftigungszeiten_3 = 71
    Vorbeschaeftigungszeiten_4 = 72
    Vorbeschaeftigungszeiten_5 = 73
    weitere_Beschaeftigungen = 74
    weitere_Beschaeftigungen_2 = 75
    weitere_Beschaeftigungen_3 = 76
    weitere_Beschaeftigungen_4 = 77
    weitere_Beschaeftigungen_5 = 78
End Enum

Public Enum Liste
    Lst_Angaben_zu_den_Arbeitspapieren = 1
    Lst_Angaben_zu_den_Arbeitspapieren_Minijob = 2
    Lst_Geschlecht = 3
    Lst_Familienstand = 4
    Lst_Schwerbehindert = 5
    Lst_Barzahlung = 6
    Lst_Art_der_Beschaeftigung = 7
    Lst_Nebenbeschaeftigung = 8
    Lst_Hoechster_Schulabschluss = 9
    Lst_Hoechste_Berufsausbildung = 10
    Lst_Vertragsform = 11
    Lst_Personengruppe = 12
    Lst_Status_Beschaeftigung = 13
    Lst_Art_der_Befristung = 14
    Lst_Konfession = 15
    Lst_Pauschalierung = 16
    Lst_Abwaelzung_an_Arbeitnehmer = 17
    Lst_Elterneigenschaft = 18
    Lst_KV = 19
    Lst_RV = 20
    Lst_AV = 21
    Lst_PV = 22
    Lst_RV_Option = 23
    Lst_Krankenversicherung = 24
    Lst_weitere_Beschaeftigungen = 25
End Enum

Public Enum Verwaltung
    Gewaehlter_Fragebogen = 1
    Initialisierung_durchgefuehrt = 3
    Fragebogen_erzeugt = 4
    Beraternummer = 6
    Mandantennummer = 7
    Blk_Allgemein = 9
    Blk_Persoenliche_Angaben = 10
    Blk_Beschaeftigung = 11
    Blk_Befristung = 12
    Blk_Steuer = 13
    Blk_Sozialversicherung = 14
    Blk_Entlohnung = 15
    Blk_VWL = 16
    Blk_Vorbeschaeftigungszeiten = 17
    BlK_weitere_Beschaeftigungen = 18
    Angaben_zu_den_Arbeitspapieren = 19
    Arbeitnehmererklaerung = 20
End Enum
Attribute VB_Name = "Mdl_Export"
Option Explicit

Public Sub Export_Datei_erstellen(Verzeichnis As String, Dateiname As String)
    Dim str_Folder As String
    Dim str_File_Name As String
    Dim str_File As String
    Dim answer As Integer
    Dim bln_schreibgeschuetzt As Boolean
    bln_schreibgeschuetzt = False

    'Pfad f|fffd|r Ausgabedatei |fffd|bernehmen
    str_Folder = Verzeichnis
        
    'Name f|fffd|r Ausgabedatei |fffd|bernehmen
    If Right(Dateiname, 4) = ".txt" Then
        str_File_Name = Dateiname
    Else
        str_File_Name = Dateiname & ".txt"
    End If
    str_File = str_Folder & "\" & str_File_Name
    
    
    'Pr|fffd|fung ob bereits eine Datei mit dem gew|fffd|hlten Namen existiert
    If Mdl_Hilfsfunktionen.Datei_exisitiert(str_File) Then
        answer = MsgBox("Es existiert bereits eine Datei mit dem Namen '" & _
                 CStr(Dir(str_File)) & "'." & vbCrLf & vbCrLf & VBA.Chr$(187) & _
                 " Soll diese |fffd|berschrieben werden?", _
                 vbYesNo)
        If answer = vbYes Then
            If Mdl_Hilfsfunktionen.Datei_schreibgeschuetzt(str_File) Then
                bln_schreibgeschuetzt = True
                GoTo Fehlerbehandlung
            End If
        Else
            Call Dialogwechsel(kein_Dialog, Export_Speichern_unter)
            Exit Sub
        End If
    End If
    
    
    mdl_Main.Dialog_Export_Speichern_unter.Hide
    Application.Wait Now + TimeValue("0:00:01")
    
    'Neue *.txt Datei anlegen
    On Error Resume Next
    Close #1
    On Error GoTo 0
    On Error GoTo Fehlerbehandlung
    Open str_File For Output As 1
    On Error GoTo 0
    
    'Pr|fffd|fen ob Datei angelegt wurde
    If Not Mdl_Hilfsfunktionen.Exportdatei_vorhanden(str_File) Then
        GoTo Fehlerbehandlung
    End If
    
    'Daten in Datei schreiben
    Call Exportdatei_befuellen
    
    'Exportdatei schlie|fffd|en
    Close #1
    Set mdl_Main.Dialog_Export_Speichern_unter = Nothing
            
    Exit Sub
    
Fehlerbehandlung:
    On Error Resume Next
    Close #1
    On Error GoTo 0
    MsgBox "Fehler:" & vbCrLf & vbCrLf & _
            "Es ist ein Fehler beim Anlegen der Exportdatei aufgetreten!" & vbCrLf & _
            "Die Export wurde daher abgebrochen." & vbCrLf & vbCrLf & VBA.Chr$(187) & _
            " F|fffd|hren Sie den Export erneut durch.", _
            vbCritical
    Exit Sub
End Sub

Public Function Pfad_waehlen() As String
    Dim str_Folder As String
    
    With Application.FileDialog(msoFileDialogFolderPicker)
        .Title = ""
        .ButtonName = ""
        .InitialFileName = ThisWorkbook.Path & "\"
        .InitialView = msoFileDialogViewDetails
        If .Show = True Then
            str_Folder = .SelectedItems(1)
        Else
            str_Folder = ""
        End If
    End With
    Pfad_waehlen = str_Folder
End Function

Public Sub Exportdatei_befuellen()
    Dim str_VersionImportDatei_LuG As String
    Dim str_Personalnummer As String
    Dim str_Familienname As String
    Dim str_Vorname As String
    Dim str_Geburtsname As String
    Dim str_Geburtsdatum As String
    Dim str_Strasse As String
    Dim str_Hausnummer As String
    Dim str_PLZ As String
    Dim str_Ort As String
    Dim str_Anschriftenzusatz As String
    Dim str_Versicherungsnummer As String
    Dim str_Geburtsort As String
    Dim str_Geburtsland_LuG As String
    Dim str_Geburtsland_LODAS As String
    Dim str_Geschlecht As String
    Dim str_Geschlecht_LODAS As String
    Dim str_Familienstand As String
    Dim str_Familienstand_LODAS As String
    Dim str_Staatsangehoerigkeit As String
    Dim str_Schwerbehindert As String
    Dim str_Kontonummer As String
    Dim str_Bankleitzahl As String
    Dim str_Bankbezeichnung As String
    Dim str_Eintrittsdatum As String
    Dim str_Erster_Monat As String
    Dim str_StammdatenGueltigAb As String
    Dim str_Ersteintrittsdatum As String
    Dim str_Betriebsstaette As String
    Dim str_Berufsbezeichnung As String
    Dim str_Ausgeuebte_Taetigkeit As String
    Dim str_Hoechster_Schulabschluss As String
    Dim str_Hoechste_Berufsausbildung As String
    Dim str_Beginn_der_Ausbildung As String
    Dim str_Ende_der_Ausbildung As String
    Dim str_Arbeitszeit As String
    Dim dbl_Arbeitszeit_Tag As Double
    Dim str_Urlaubsanspruch As String
    Dim str_Kostenstelle As String
    Dim str_Vertragsform As String
    Dim str_Abteilungsnummer As String
    Dim str_Personengruppe As String
    Dim str_Art_der_Befristung As String
    Dim str_Befristung_Arbeitsvertrag_zum As String
    Dim str_Steuerklasse As String
    Dim str_Faktor As String
    Dim str_Kinderfreibetrag As String
    Dim str_Finanzamtsnummer As String
    Dim str_Identifikationsnummer As String
    Dim str_Konfession As String
    Dim str_KV As String
    Dim str_RV As String
    Dim str_AV As String
    Dim str_PV As String
    Dim str_Empfaenger_VWL As String
    Dim str_Betrag As String
    Dim str_AG_Anteil As String
    Dim str_seit_wann As String
    Dim str_Vertragsnummer As String
    Dim str_Kontonummer_VWL As String
    Dim str_Bankleitzahl_VWL As String
    Dim str_Bankbezeichnung_VWL As String
    
    Call mdl_Main.Werte_auslesen
    
    On Error GoTo Fehlerbehandlung
    With Worksheets("Assistent")
        If Not .Cells(Name_des_Mitarbeiters_Personalnummer, 6).Value = "" Then
            str_Personalnummer = Mid(.Cells(Name_des_Mitarbeiters_Personalnummer, 6).Value, InStr(.Cells(Name_des_Mitarbeiters_Personalnummer, 6).Value, ";") + 1)
        End If
        
        If Not .Cells(Familienname, 6).Value = "" Then
            str_Familienname = .Cells(Familienname, 6).Value
        End If
        
        If Not .Cells(Vorname, 6).Value = "" Then
            str_Vorname = .Cells(Vorname, 6).Value
        End If
        
        If Not .Cells(Geburtsname, 6).Value = "" Then
            str_Geburtsname = .Cells(Geburtsname, 6).Value
        End If
        
        If Not .Cells(Geburtsdatum, 6).Value = "" Then
            str_Geburtsdatum = .Cells(Geburtsdatum, 6).Value
        End If
        
        If Not .Cells(Strasse_Hausnr, 6).Value = "" Then
            str_Strasse = Left(.Cells(Strasse_Hausnr, 6).Value, InStr(.Cells(Strasse_Hausnr, 6).Value, ";") - 1)
            str_Hausnummer = Mid(.Cells(Strasse_Hausnr, 6).Value, InStr(.Cells(Strasse_Hausnr, 6).Value, ";") + 1)
        End If
        
        If Not .Cells(PLZ_Ort, 6).Value = "" Then
            str_PLZ = Left(.Cells(PLZ_Ort, 6).Value, InStr(.Cells(PLZ_Ort, 6).Value, ";") - 1)
            str_Ort = Mid(.Cells(PLZ_Ort, 6).Value, InStr(.Cells(PLZ_Ort, 6).Value, ";") + 1)
        End If
        
        If Not .Cells(Anschriftenzusatz, 6).Value = "" Then
            str_Anschriftenzusatz = .Cells(Anschriftenzusatz, 6).Value
        End If
        
        If Not .Cells(Versicherungsnummer, 6).Value = "" Then
            str_Versicherungsnummer = .Cells(Versicherungsnummer, 6).Value
        End If
        
        If Not .Cells(Geburtsort, 6).Value = "" Then
            str_Geburtsort = .Cells(Geburtsort, 6).Value
        End If
        
        If .Cells(Geburtsland, 6).Value = "Deutschland" Or _
            .Cells(Geburtsland, 6).Value = "D" Or _
            .Cells(Geburtsland, 6).Value = "d" Then
            
            str_Geburtsland_LuG = "D"
            str_Geburtsland_LODAS = "0"
        Else
            str_Geburtsland_LuG = ""
            str_Geburtsland_LODAS = ""
        End If
        
        If Not .Cells(Geschlecht, 6).Value = "" Then
            str_Geschlecht = .Cells(Geschlecht, 6).Value
            If str_Geschlecht = "weiblich" Then
                str_Geschlecht_LODAS = "1"
            Else
                str_Geschlecht_LODAS = "0"
            End If
        End If
        
        If Not .Cells(Familienstand, 6).Value = "" Then
            str_Familienstand = .Cells(Familienstand, 6).Value
            If str_Familienstand = "verheiratet" Then
                str_Familienstand_LODAS = "1"
            Else
                str_Familienstand_LODAS = "0"
            End If
        End If
        
        If IsNumeric(.Cells(Staatsangehoerigkeit, 6).Value) Then
            str_Staatsangehoerigkeit = .Cells(Staatsangehoerigkeit, 6).Value
        Else
            If .Cells(Staatsangehoerigkeit, 6).Value = "Deutsch" Or _
                .Cells(Staatsangehoerigkeit, 6).Value = "deutsch" Or _
                .Cells(Staatsangehoerigkeit, 6).Value = "Deutschland" Or _
                .Cells(Staatsangehoerigkeit, 6).Value = "D" Or _
                .Cells(Staatsangehoerigkeit, 6).Value = "d" Then
                
                str_Staatsangehoerigkeit = "0"
            Else
                str_Staatsangehoerigkeit = ""
            End If
        End If
        
        If Not .Cells(Schwerbehindert, 6).Value = "" Then
            str_Schwerbehindert = .Cells(Schwerbehindert, 6).Value
            If str_Schwerbehindert = "ja" Then
                str_Schwerbehindert = "1"
            Else
                str_Schwerbehindert = "0"
            End If
        End If
        
        If Not .Cells(Kontonummer, 6).Value = "" Then
            str_Kontonummer = .Cells(Kontonummer, 6).Value
        End If
        
        If Not .Cells(Bankleitzahl, 6).Value = "" Then
            str_Bankleitzahl = .Cells(Bankleitzahl, 6).Value
        End If
        
        If Not .Cells(Bankbezeichnung, 6).Value = "" Then
            str_Bankbezeichnung = .Cells(Bankbezeichnung, 6).Value
        End If
        
        If Not .Cells(Eintrittsdatum_Ersteintrittsdatum, 6).Value = "" Then
            str_Eintrittsdatum = Left(.Cells(Eintrittsdatum_Ersteintrittsdatum, 6).Value, InStr(.Cells(Eintrittsdatum_Ersteintrittsdatum, 6).Value, ";") - 1)
            str_Erster_Monat = Mid(str_Eintrittsdatum, 4, 2) & "/" & Mid(str_Eintrittsdatum, 7)
            str_StammdatenGueltigAb = "01." & Mid(str_Eintrittsdatum, 4)
            
            If Not Mid(.Cells(Eintrittsdatum_Ersteintrittsdatum, 6).Value, InStr(.Cells(Eintrittsdatum_Ersteintrittsdatum, 6).Value, ";") + 1) = "" Then
                str_Ersteintrittsdatum = Mid(.Cells(Eintrittsdatum_Ersteintrittsdatum, 6).Value, InStr(.Cells(Eintrittsdatum_Ersteintrittsdatum, 6).Value, ";") + 1)
            Else
                str_Ersteintrittsdatum = str_Eintrittsdatum
            End If
        End If
        
        If Not .Cells(Betriebsstaette, 6).Value = "" Then
            str_Betriebsstaette = .Cells(Betriebsstaette, 6).Value
        End If
        
        If Not .Cells(Berufsbezeichnung, 6).Value = "" Then
            str_Berufsbezeichnung = .Cells(Berufsbezeichnung, 6).Value
        End If
        
        If Not .Cells(Ausgeuebte_Taetigkeit, 6).Value = "" Then
            str_Ausgeuebte_Taetigkeit = .Cells(Ausgeuebte_Taetigkeit, 6).Value
        End If
        
        If Not .Cells(Hoechster_Schulabschluss, 6).Value = "" Then
            str_Hoechster_Schulabschluss = Left(.Cells(Hoechster_Schulabschluss, 6).Value, 1)
        End If
        
        If Not .Cells(Hoechste_Berufsausbildung, 6).Value = "" Then
            str_Hoechste_Berufsausbildung = Left(.Cells(Hoechste_Berufsausbildung, 6).Value, 1)
        End If
        
        If Not .Cells(Beginn_der_Ausbildung, 6).Value = "" Then
            str_Beginn_der_Ausbildung = .Cells(Beginn_der_Ausbildung, 6).Value
        End If
        
        If Not .Cells(Ende_der_Ausbildung, 6).Value = "" Then
            str_Ende_der_Ausbildung = .Cells(Ende_der_Ausbildung, 6).Value
        End If
        
        If Not .Cells(Woechentliche_Arbeitszeit_Urlaubsanspruch, 6).Value = "" Then
            str_Arbeitszeit = Left(.Cells(Woechentliche_Arbeitszeit_Urlaubsanspruch, 6).Value, InStr(.Cells(Woechentliche_Arbeitszeit_Urlaubsanspruch, 6).Value, ";") - 1)
            If Not str_Arbeitszeit = "" Then
                dbl_Arbeitszeit_Tag = str_Arbeitszeit / 5
            End If
            str_Urlaubsanspruch = Mid(.Cells(Woechentliche_Arbeitszeit_Urlaubsanspruch, 6).Value, InStr(.Cells(Woechentliche_Arbeitszeit_Urlaubsanspruch, 6).Value, ";") + 1)
        End If
        
        If Not .Cells(Kostenstelle, 6).Value = "" Then
            str_Kostenstelle = .Cells(Kostenstelle, 6).Value
        End If
        
        If Not .Cells(Vertragsform, 6).Value = "" Then
            str_Vertragsform = Left(.Cells(Vertragsform, 6).Value, 1)
        End If
        
        If Not .Cells(Abteilungsnummer, 6).Value = "" Then
            str_Abteilungsnummer = .Cells(Abteilungsnummer, 6).Value
        End If
        
        If Not .Cells(Personengruppe, 6).Value = "" Then
            str_Personengruppe = Left(.Cells(Personengruppe, 6).Value, 3)
        End If
        
        If Not .Cells(Art_der_Befristung, 6).Value = "" Then
            str_Art_der_Befristung = .Cells(Art_der_Befristung, 6).Value
        End If
        
        If Not .Cells(Befristung_Arbeitsvertrag_zum, 6).Value = "" Then
            str_Befristung_Arbeitsvertrag_zum = .Cells(Befristung_Arbeitsvertrag_zum, 6).Value
        End If
        
        If Not .Cells(Steuerklasse_Faktor, 6).Value = "" Then
            str_Steuerklasse = Left(.Cells(Steuerklasse_Faktor, 6).Value, InStr(.Cells(Steuerklasse_Faktor, 6).Value, ";") - 1)
            str_Faktor = Mid(.Cells(Steuerklasse_Faktor, 6).Value, InStr(.Cells(Steuerklasse_Faktor, 6).Value, ";") + 1)
        End If
        
        If Not .Cells(Kinderfreibetrag, 6).Value = "" Then
            str_Kinderfreibetrag = .Cells(Kinderfreibetrag, 6).Value
        End If
        
        If Not .Cells(Finanzamtsnummer_Identifikationsnummer, 6).Value = "" Then
            str_Finanzamtsnummer = Left(.Cells(Finanzamtsnummer_Identifikationsnummer, 6).Value, InStr(.Cells(Finanzamtsnummer_Identifikationsnummer, 6).Value, ";") - 1)
            str_Identifikationsnummer = Mid(.Cells(Finanzamtsnummer_Identifikationsnummer, 6).Value, InStr(.Cells(Finanzamtsnummer_Identifikationsnummer, 6).Value, ";") + 1)
        End If
        
        If Not .Cells(Konfession, 6).Value = "" Then
            If .Cells(Konfession, 6).Value = "Konfessionslos" Then
                str_Konfession = " "
            Else
                str_Konfession = .Cells(Konfession, 6).Value
            End If
        End If
        
        If Not .Cells(KV_RV, 6).Value = "" Then
            str_KV = Left(.Cells(KV_RV, 6).Value, InStr(.Cells(KV_RV, 6).Value, ";") - 1)
            If Not str_KV = "" Then
                str_KV = Left(str_KV, 1)
            End If
            str_RV = Mid(.Cells(KV_RV, 6).Value, InStr(.Cells(KV_RV, 6).Value, ";") + 1)
            If Not str_RV = "" Then
                str_RV = Left(str_RV, 1)
            End If
        End If
        
        If Not .Cells(AV_PV, 6).Value = "" Then
            str_AV = Left(.Cells(AV_PV, 6).Value, InStr(.Cells(AV_PV, 6).Value, ";") - 1)
            If Not str_AV = "" Then
                str_AV = Left(str_AV, 1)
            End If
            str_PV = Mid(.Cells(AV_PV, 6).Value, InStr(.Cells(AV_PV, 6).Value, ";") + 1)
            If Not str_PV = "" Then
                str_PV = Left(str_PV, 1)
            End If
        End If
        
        If Not .Cells(Empfaenger_VWL, 6).Value = "" Then
            str_Empfaenger_VWL = .Cells(Empfaenger_VWL, 6).Value
        End If
        
        If Not .Cells(Betrag_AG_Anteil, 6).Value = "" Then
            str_Betrag = Left(.Cells(Betrag_AG_Anteil, 6).Value, InStr(.Cells(Betrag_AG_Anteil, 6).Value, ";") - 1)
            str_AG_Anteil = Mid(.Cells(Betrag_AG_Anteil, 6).Value, InStr(.Cells(Betrag_AG_Anteil, 6).Value, ";") + 1)
        End If
        
        If Not .Cells(seit_wann, 6).Value = "" Then
'            str_seit_wann = Mid(.Cells(seit_wann, 6).Value, 4, 2) & "/" & Mid(.Cells(seit_wann, 6).Value, 7)
            str_seit_wann = .Cells(seit_wann, 6).Value
        End If
        
        If Not .Cells(Vertragsnummer, 6).Value = "" Then
            str_Vertragsnummer = .Cells(Vertragsnummer, 6).Value
        End If
        
        If Not .Cells(Kontonummer_VWL, 6).Value = "" Then
            str_Kontonummer_VWL = .Cells(Kontonummer_VWL, 6).Value
        End If
        
        If Not .Cells(Bankleitzahl_VWL, 6).Value = "" Then
            str_Bankleitzahl_VWL = .Cells(Bankleitzahl_VWL, 6).Value
        End If
        
        If Not .Cells(Bankbezeichnung_VWL, 6).Value = "" Then
            str_Bankbezeichnung_VWL = .Cells(Bankbezeichnung_VWL, 6).Value
        End If
        
        If mdl_Main.Dialog_Export.ob_LuG Then
            If Mdl_Registry.VersionImportDatei_LuG_lesen = "" Then
                str_VersionImportDatei_LuG = "16.4"
            Else
                str_VersionImportDatei_LuG = Mdl_Registry.VersionImportDatei_LuG_lesen
            End If
        
            '**********************************
            ' EXPORTDATEI F|fffd|R LOHN UND GEHALT *
            '**********************************
            
            Print #1, "[Allgemein]"
            Print #1, "Ziel                = LuG"
            Print #1, "VersionImportDatei  = " & str_VersionImportDatei_LuG
            Print #1, "Kommentarzeichen    = #"
            Print #1, "Feldtrennzeichen    = ;"
            Print #1, "Zahlenkomma         = ,"
            Print #1, "Kombifeldbegrenzer  = ("
            Print #1, "Datumsformat        = TT/MM/JJJJ"
            Print #1, ""
            Print #1, "[Satzbeschreibung]"
            Print #1, "   1; MandantNeu;     Betriebsstaettenname;Mandantennummer;Beraternummer;ErsteAbrechnung;Basiswaehrung;ErsteAbrechnungEuro"
            Print #1, "   2; MandantSel;     Mandantennummer"
            Print #1, "   3; MitarbeiterNeu; Mitarbeiternummer;Name;Vorname;Eintrittsdatum;ErsterAbzurechnenderMonat"
            Print #1, "   4; MitarbeiterSel; Mitarbeiternummer"
            Print #1, ""
            Print #1, " 100; Mitarbeiter|Stammdaten|Personaldaten|Adresse / Name \"
            Print #1, "    ; Familienname\"
            Print #1, "    ; Geburtsname\"
            Print #1, "    ; Vorname\"
            Print #1, "    ; Stra|fffd|e\"
            Print #1, "    ; Hausnummer\"
            Print #1, "    ; Postleitzahl\"
            Print #1, "    ; Ort\"
            Print #1, "    ; Anschriftenzusatz"
            Print #1, ""
            Print #1, " 101; Mitarbeiter|Stammdaten|Personaldaten|Pers|fffd|nliche Angaben \"
            Print #1, "    ; Geburtsdatum\"
            Print #1, "    ; Geburtsort\"
            Print #1, "    ; Geburtsland(Nationalit|fffd|t Geburtsland;Staatsname)\"
            Print #1, "    ; Geschlecht\"
            Print #1, "    ; Versicherungsnummer(Gueltig_ab;Versicherungsnummer)\"
            Print #1, "    ; Familienstand\"
            Print #1, "    ; Staatsangeh|fffd|rigkeit(Nationenschl|fffd|ssel Staatsangeh.;Staatsname)"
            Print #1, ""
            Print #1, " 102; Mitarbeiter|Stammdaten|Personaldaten|Zahlungsweise \"
            Print #1, "    ; KtoNr\"
            Print #1, "    ; Bank(Bankleitzahl)"
            Print #1, ""
            Print #1, " 200; Mitarbeiter|Stammdaten|Besch|fffd|ftigung|Zeitraum \"
            Print #1, "    ; Datum erster Eintritt"
            Print #1, ""
            Print #1, " 201; Mitarbeiter|Stammdaten|Besch|fffd|ftigung|Zeitraum|Besch|fffd|ftigungszeitraum \"
            Print #1, "    ; Eintrittsdatum"
            Print #1, ""
            Print #1, " 202; Mitarbeiter|Stammdaten|Besch|fffd|ftigung|Zeitraum|Besch|fffd|ftigungszeitraum \"
            Print #1, "    ; Austrittsdatum"
            Print #1, ""
            Print #1, " 203; Mitarbeiter|Stammdaten|Besch|fffd|ftigung|Zeitraum|Besch|fffd|ftigungszeitraum \"
            Print #1, "    ; Befristetes Arbeitsverh|fffd|ltnis"
            Print #1, ""
            Print #1, " 300; Mitarbeiter|Stammdaten|Besch|fffd|ftigung|T|fffd|tigkeit|Status \"
            Print #1, "    ; PGS(Gueltig_ab;PGS)"
            Print #1, ""
            Print #1, " 301; Mitarbeiter|Stammdaten|Besch|fffd|ftigung|T|fffd|tigkeit|Status \"
            Print #1, "    ; Ausbildungsbeginn\"
            Print #1, "    ; Ausbildungsende"
            Print #1, ""
            Print #1, " 400; Mitarbeiter|Stammdaten|Besch|fffd|ftigung|T|fffd|tigkeit|T|fffd|tigkeitsschl|fffd|ssel \"
            Print #1, "    ; T|fffd|tigkeitsmerkmal 2010(Gueltig_ab;Ausge|fffd|bte T|fffd|tigkeit(Ausge|fffd|bte T|fffd|tigkeit;Berufsbezeichnung;LfdNr BA);H|fffd|chster Schulabschluss;" & _
                            "H|fffd|chster Ausbildungsabschluss;Leiharbeitsverh|fffd|ltnis;Vertragsform)"
            Print #1, ""
            Print #1, " 500; Mitarbeiter|Stammdaten|Besch|fffd|ftigung|T|fffd|tigkeit|Organisationseinheiten \"
            Print #1, "    ; Berufsbezeichnung"
            Print #1, ""
            Print #1, " 501; Mitarbeiter|Stammdaten|Besch|fffd|ftigung|T|fffd|tigkeit|Organisationseinheiten \"
            Print #1, "    ; Betriebsst|fffd|tte(Gueltig_ab;Betriebsst|fffd|tte(Betriebsst|fffd|ttennummer))"
            Print #1, ""
            Print #1, " 502; Mitarbeiter|Stammdaten|Besch|fffd|ftigung|T|fffd|tigkeit|Organisationseinheiten \"
            Print #1, "    ; Abteilung(Abteilungsnummer)"
            Print #1, ""
            Print #1, " 503; Mitarbeiter|Stammdaten|Besch|fffd|ftigung|T|fffd|tigkeit|Kostenstellenrechnung \"
            Print #1, "    ; G|fffd|ltig ab\"
            Print #1, "    ; Stammkostenstelle(Stammkostenstellennummer)"
            Print #1, ""
            Print #1, " 600; Mitarbeiter|Stammdaten|Sozialversicherung|Allgemeine SV-Daten|Berechnungsgrundlagen \"
            Print #1, "    ; Beitragsgruppenschl|fffd|ssel(Gueltig_ab;BGS KV;BGS RV;BGS AV;BGS PV)"
            Print #1, ""
            Print #1, " 700; Mitarbeiter|Stammdaten|Steuer|Steuerkarte \"
            Print #1, "    ; Finanzamt(Gueltig_ab;Finanzamt(Finanzamtsnummer))"
            Print #1, ""
            Print #1, " 701; Mitarbeiter|Stammdaten|Steuer|Steuerkarte \"
            Print #1, "    ; St.Klasse/Anzahl Kinderfreib.(Gueltig_ab;Steuerklasse;Faktor_Faktorverfahren;Kinderfreibetrag)"
            Print #1, ""
            Print #1, " 702; Mitarbeiter|Stammdaten|Steuer|Steuerkarte \"
            Print #1, "    ; Konfession AN(Gueltig_ab;Konfession AN)"
            Print #1, ""
            Print #1, " 703; Mitarbeiter|Stammdaten|Steuer|Steuerkarte \"
            Print #1, "    ; IdNr"
            Print #1, ""
            Print #1, " 800; Mitarbeiter|Stammdaten|Arbeitszeiten|Regelm|fffd||fffd|ige/Feste Arbeitszeiten \"
            Print #1, "    ; Regelm|fffd||fffd|ige Arbeitszeit(Gueltig_ab;W|fffd|chentliche Arbeitszeit;Arbeitsstunden Mo;Arbeitsstunden Di;Arbeitsstunden Mi;Arbeitsstunden Do;Arbeitsstunden Fr;Arbeitsstunden Sa;Arbeitsstunden So;W|fffd|. AZ Vollzeit)"
            Print #1, ""
            Print #1, " 801; Mitarbeiter|Stammdaten|Arbeitszeiten|Urlaubsanspruch \"
            Print #1, "    ; Urlaubsanspruch pro Jahr"
            Print #1, ""
            Print #1, "[Mandant]"
            Print #1, "   2; " & mdl_Main.Dialog_Export.tbx_Mandantennummer.Value
            Print #1, ""
            Print #1, "[Mitarbeiter]"
            Print #1, "   3; " & str_Personalnummer & ";" & str_Familienname & ";" & str_Vorname & ";" & str_Eintrittsdatum & _
                                ";" & str_Erster_Monat
            Print #1, " 100; " & str_Familienname & ";" & str_Geburtsname & ";" & str_Vorname & ";" & str_Strasse & ";" & str_Hausnummer & _
                                ";" & str_PLZ & ";" & str_Ort & ";" & str_Anschriftenzusatz
            Print #1, " 101; " & str_Geburtsdatum & ";" & str_Geburtsort & ";" & str_Geburtsland_LuG & ";" & ";" & str_Geschlecht & _
                                ";" & str_Erster_Monat & ";" & str_Versicherungsnummer & ";" & str_Familienstand & ";" & str_Staatsangehoerigkeit & ";"
            If Not str_Kontonummer = "" Or Not str_Bankleitzahl = "" Then
                Print #1, " 102; " & str_Kontonummer & ";" & str_Bankleitzahl
            End If
            If Not str_Ersteintrittsdatum = "" Then
                Print #1, " 200; " & str_Ersteintrittsdatum
            End If
            If Not str_Eintrittsdatum = "" Then
                Print #1, " 201; " & str_Eintrittsdatum
            End If
            If Not str_Befristung_Arbeitsvertrag_zum = "" Then
                Print #1, " 202; " & str_Befristung_Arbeitsvertrag_zum
            End If
            If Not str_Art_der_Befristung = "" Then
                Print #1, " 203; " & str_Art_der_Befristung
            End If
            If Not str_Personengruppe = "" Then
                Print #1, " 300; " & str_Erster_Monat & ";" & str_Personengruppe
            End If
            If Not str_Beginn_der_Ausbildung = "" Or Not str_Ende_der_Ausbildung = "" Then
                Print #1, " 301; " & str_Beginn_der_Ausbildung & ";" & str_Ende_der_Ausbildung
            End If
            Print #1, " 400; " & str_Erster_Monat & ";" & str_Ausgeuebte_Taetigkeit & ";" & ";" & ";" & str_Hoechster_Schulabschluss & ";" & str_Hoechste_Berufsausbildung & _
                                ";" & 0 & ";" & str_Vertragsform
            If Not str_Berufsbezeichnung = "" Then
                Print #1, " 500; " & str_Berufsbezeichnung
            End If
            If Not str_Betriebsstaette = "" Then
                Print #1, " 501; " & str_Erster_Monat & ";" & str_Betriebsstaette
            End If
            If Not str_Abteilungsnummer = "" Then
                Print #1, " 502; " & str_Abteilungsnummer
            End If
            If Not str_Kostenstelle = "" Then
                Print #1, " 503; " & str_Erster_Monat & ";" & str_Kostenstelle
            End If
            If Not str_KV = "" Or Not str_RV = "" Or Not str_AV = "" Or Not str_PV = "" Then
                Print #1, " 600; " & str_Erster_Monat & ";" & str_KV & ";" & str_RV & ";" & str_AV & ";" & str_PV
            End If
            If Not str_Finanzamtsnummer = "" Then
                Print #1, " 700; " & str_Erster_Monat & ";" & str_Finanzamtsnummer
            End If
            If Not str_Steuerklasse = "" Or Not str_Faktor = "" Or Not str_Kinderfreibetrag = "" Then
                Print #1, " 701; " & str_Erster_Monat & ";" & str_Steuerklasse & ";" & str_Faktor & ";" & str_Kinderfreibetrag
            End If
            If Not str_Konfession = "" Then
                Print #1, " 702; " & str_Erster_Monat & ";" & str_Konfession
            End If
            If Not str_Identifikationsnummer = "" Then
                Print #1, " 703; " & str_Identifikationsnummer
            End If
            If Not str_Arbeitszeit = "" Then
                Print #1, " 800; " & str_Erster_Monat & ";" & str_Arbeitszeit & ";" & dbl_Arbeitszeit_Tag & ";" & dbl_Arbeitszeit_Tag & ";" & dbl_Arbeitszeit_Tag & _
                                ";" & dbl_Arbeitszeit_Tag & ";" & dbl_Arbeitszeit_Tag & ";" & ";" & ";"
            End If
            If Not str_Urlaubsanspruch = "" Then
                Print #1, " 801; " & str_Urlaubsanspruch
            End If
        Else
        
            '************************
            ' EXPORTDATEI F|fffd|R LODAS *
            '************************
            
            Print #1, "[Allgemein]"
            Print #1, "Ziel                = LODAS"
            Print #1, "Version_SST         = 1.0"
            Print #1, "Version_DB          = 9.45"
            Print #1, "BeraterNr           = " & mdl_Main.Dialog_Export.tbx_Beraternummer.Value
            Print #1, "MandantenNr         = " & mdl_Main.Dialog_Export.tbx_Mandantennummer.Value
            Print #1, "Kommentarzeichen    = *"
            Print #1, "Feldtrennzeichen    = ;"
            Print #1, "Zahlenkomma         = ,"
            Print #1, "Datumsformat        = TT/MM/JJJJ"
            Print #1, "StammdatenGueltigAb = " & str_StammdatenGueltigAb
            Print #1, ""
            Print #1, "[Satzbeschreibung]"
            Print #1, " 100; u_lod_psd_mitarbeiter;pnr#psd;duevo_familienname#psd;duevo_vorname#psd;gebname#psd;adresse_strassenname#psd;adresse_strasse_nr#psd;adresse_plz#psd;adresse_ort#psd;adresse_anschriftenzusatz#psd;"
            Print #1, " 101; u_lod_psd_mitarbeiter;pnr#psd;geburtsdatum_ttmmjj#psd;gebort#psd;geburtsland#psd;geschlecht#psd;sozialversicherung_nr#psd;familienstand#psd;staatsangehoerigkeit#psd;"
            Print #1, " 102; u_lod_psd_ma_bank;pnr#psd;ma_bank_kto_nr#psd;ma_bank_blz#psd;ma_bank_bezeichnung#psd;"
            Print #1, " 103; u_lod_psd_mitarbeiter;pnr#psd;schwerbeschaedigt#psd"
            Print #1, " 200; u_lod_psd_mitarbeiter;pnr#psd;ersteintrittsdatum#psd;"
            Print #1, " 201; u_lod_psd_beschaeftigung;pnr#psd;eintrittdatum#psd;"
            Print #1, " 300; u_lod_psd_taetigkeit;pnr#psd;persgrs#psd;"
            Print #1, " 301; u_lod_psd_taetigkeit;pnr#psd;ausbildungsbeginn#psd;vorr_ausbildungsende#psd;"
            Print #1, " 400; u_lod_psd_taetigkeit;pnr#psd;berufsbezeichnung#psd;ausg_taetigkeit#psd;schulabschluss#psd;ausbildungsabschluss#psd;arbeitnehmerueberlassung#psd;vertragsform#psd;"
            Print #1, " 502; u_lod_psd_taetigkeit;pnr#psd;kst_abteilungs_nr#psd;"
            Print #1, " 503; u_lod_psd_taetigkeit;pnr#psd;stammkostenstelle#psd;"
            Print #1, " 600; u_lod_psd_sozialversicherung;pnr#psd;kv_schluessel#psd;rv_schluessel#psd;av_schluessel#psd;pv_schluessel#psd;"
            Print #1, " 700; u_lod_psd_steuer;pnr#psd;fa_nr#psd;"
            Print #1, " 701; u_lod_psd_steuer;pnr#psd;st_klasse#psd;faktor#psd;kfb_anzahl#psd;"
            Print #1, " 702; u_lod_psd_steuer;pnr#psd;identifikationsnummer#psd;"
            Print #1, " 800; u_lod_psd_arbeitszeit_regelm;pnr#psd;az_wtl_indiv#psd;regelm_az_mo#psd;regelm_az_di#psd;regelm_az_mi#psd;regelm_az_do#psd;regelm_az_fr#psd;"
            Print #1, " 801; u_lod_psd_arbeitszeit_regelm;pnr#psd;url_tage_jhrl#psd;"
            Print #1, " 900; u_lod_psd_vermoegensbildung;pnr#psd;vwl_institut_1#psd;"
            Print #1, " 901; u_lod_psd_vermoegensbildung;pnr#psd;vwl_1_netto_abz_1#psd;vwl_ag_anteil_betrag_1#psd;"
            Print #1, " 902; u_lod_psd_vermoegensbildung;pnr#psd;vwl_1_beginn_mmjj#psd;"
            Print #1, " 903; u_lod_psd_vermoegensbildung;pnr#psd;vwl_vertrag_nr_1#psd;"
            Print #1, " 904; u_lod_psd_vermoegensbildung;pnr#psd;vwl_bank_kto_nr_1#psd;vwl_bank_blz_1#psd;vwl_bank_bezeichnung_1#psd;"
            Print #1, ""
            Print #1, "[Stammdaten]"
            Print #1, " 100; " & str_Personalnummer & ";" & str_Familienname & ";" & str_Vorname & ";" & str_Geburtsname & ";" & str_Strasse & ";" & str_Hausnummer & _
                                ";" & str_PLZ & ";" & str_Ort & ";" & str_Anschriftenzusatz & ";"
            Print #1, " 101; " & str_Personalnummer & ";" & str_Geburtsdatum & ";" & str_Geburtsort & ";" & str_Geburtsland_LODAS & ";" & str_Geschlecht_LODAS & _
                                ";" & str_Versicherungsnummer & ";" & str_Familienstand_LODAS & ";" & str_Staatsangehoerigkeit & ";"
            If Not str_Kontonummer = "" Or Not str_Bankleitzahl = "" Then
                Print #1, " 102; " & str_Personalnummer & ";" & str_Kontonummer & ";" & str_Bankleitzahl & ";"; str_Bankbezeichnung & ";"
            End If
            If Not str_Schwerbehindert = "" Then
                Print #1, " 103; " & str_Personalnummer & ";" & str_Schwerbehindert & ";"
            End If
            If Not str_Ersteintrittsdatum = "" Then
                Print #1, " 200; " & str_Personalnummer & ";" & str_Ersteintrittsdatum & ";"
            End If
            If Not str_Eintrittsdatum = "" Then
                Print #1, " 201; " & str_Personalnummer & ";" & str_Eintrittsdatum & ";"
            End If
            If Not str_Personengruppe = "" Then
                Print #1, " 300; " & str_Personalnummer & ";" & str_Personengruppe & ";"
            End If
            If Not str_Beginn_der_Ausbildung = "" Or Not str_Ende_der_Ausbildung = "" Then
                Print #1, " 301; " & str_Personalnummer & ";" & str_Beginn_der_Ausbildung & ";" & str_Ende_der_Ausbildung & ";"
            End If
            Print #1, " 400; " & str_Personalnummer & ";" & str_Berufsbezeichnung & ";" & str_Ausgeuebte_Taetigkeit & ";" & str_Hoechster_Schulabschluss & ";" & str_Hoechste_Berufsausbildung & _
                                ";" & 0 & ";" & str_Vertragsform & ";"
            If Not str_Abteilungsnummer = "" Then
                Print #1, " 502; " & str_Personalnummer & ";" & str_Abteilungsnummer & ";"
            End If
            If Not str_Kostenstelle = "" Then
                Print #1, " 503; " & str_Personalnummer & ";" & str_Kostenstelle & ";"
            End If
            If Not str_Finanzamtsnummer = "" Then
                Print #1, " 700; " & str_Personalnummer & ";" & str_Finanzamtsnummer & ";"
            End If
            If Not str_Steuerklasse = "" Or Not str_Faktor = "" Or Not str_Kinderfreibetrag = "" Then
                Print #1, " 701; " & str_Personalnummer & ";" & str_Steuerklasse & ";" & str_Faktor & ";" & str_Kinderfreibetrag & ";"
            End If
            If Not str_Identifikationsnummer = "" Then
                Print #1, " 702; " & str_Personalnummer & ";" & str_Identifikationsnummer & ";"
            End If
            If Not str_Arbeitszeit = "" Then
                Print #1, " 800; " & str_Personalnummer & ";" & str_Arbeitszeit & ";" & dbl_Arbeitszeit_Tag & ";" & dbl_Arbeitszeit_Tag & ";" & dbl_Arbeitszeit_Tag & ";" & dbl_Arbeitszeit_Tag & _
                                ";" & dbl_Arbeitszeit_Tag & ";"
            End If
            If Not str_Urlaubsanspruch = "" Then
                Print #1, " 801; " & str_Personalnummer & ";" & str_Urlaubsanspruch & ";"
            End If
            If Not str_Empfaenger_VWL = "" Then
                Print #1, " 900; " & str_Personalnummer & ";" & str_Empfaenger_VWL & ";"
            End If
            If Not str_Betrag = "" Or Not str_AG_Anteil = "" Then
                Print #1, " 901; " & str_Personalnummer & ";" & str_Betrag & ";" & str_AG_Anteil & ";"
            End If
            If Not str_seit_wann = "" Then
                Print #1, " 902; " & str_Personalnummer & ";" & str_seit_wann & ";"
            End If
            If Not str_Vertragsnummer = "" Then
                Print #1, " 903; " & str_Personalnummer & ";" & str_Vertragsnummer & ";"
            End If
            If Not str_Kontonummer_VWL = "" Or Not str_Bankleitzahl_VWL = "" Or Not str_Bankbezeichnung_VWL = "" Then
                Print #1, " 904; " & str_Personalnummer & ";" & str_Kontonummer_VWL & ";" & str_Bankleitzahl_VWL & ";" & str_Bankbezeichnung_VWL & ";"
            End If
        End If
    End With
    
    MsgBox "Exportdatei wurde erfolgreich angelegt!", _
        vbInformation
    
    On Error GoTo 0
    Exit Sub
    
Fehlerbehandlung:
    On Error Resume Next
    Close #1
    On Error GoTo 0
    MsgBox "Fehler:" & vbCrLf & vbCrLf & _
            "Es ist ein Fehler beim Bef|fffd|llen der Exportdatei aufgetreten!" & vbCrLf & _
            "Die Export wurde daher abgebrochen." & vbCrLf & vbCrLf & VBA.Chr$(187) & _
            " F|fffd|hren Sie den Export erneut durch.", _
            vbCritical
    Exit Sub
End Sub
Attribute VB_Name = "Mdl_Formatierung"
Option Explicit

Public Sub Spaltenbreiten_anpassen(ws As String)
    With Worksheets(ws)
        .Columns.ColumnWidth = 6
        .Range("A:C,E:G,I:K,M:O,Q:S,U:W,Y:AA,AC:AE,AG:AI,AK:AM,AO:AQ,AS:AU,AW:AY").ColumnWidth = 0.54
    End With
End Sub

Public Sub Zeilenhoehen_anpassen(Position As Integer)
    With Worksheets("Personalfragebogen")
        .Rows(Position & ":" & Position).RowHeight = 3
        .Rows(Position + 2 & ":" & Position + 2).RowHeight = 3
        .Rows(Position + 4 & ":" & Position + 5).RowHeight = 3
        .Rows(Position + 6 & ":" & Position + 7).RowHeight = 5.5
    End With
End Sub

Public Sub Hintergrundfarbe_setzen(ws As String)
    With Worksheets(ws).Cells.Interior
        .ColorIndex = 2
        .Pattern = xlSolid
    End With
End Sub

Public Sub Header_formatieren()
    With Worksheets("Personalfragebogen")
        If Minijob Then
            .Rows("1:2").RowHeight = 5.5
            .Rows("3:3").RowHeight = 19.5
            .Rows("4:4").RowHeight = 5.5
            .Rows("5:5").RowHeight = 15
            .Rows("6:6").RowHeight = 5.5
            .Rows("7:8").RowHeight = 15
            .Rows("9:12").RowHeight = 5.5
            .Range("D3").Value = "Personalfragebogen"
            .Range("D5").Value = "f|fffd|r geringf|fffd|gig (Minijob) oder kurzfristig Besch|fffd|ftigte"
            With .Range("D3").Font
                .Name = "Verdana"
                .Size = 16
                .Bold = True
                .ColorIndex = 1
            End With
            With .Range("D5").Font
                .Name = "Verdana"
                .Size = 12
                .Bold = True
                .ColorIndex = 1
            End With
            .Range("D7").Value = "Die mit diesem Balken gekennzeichneten Felder sind"
            .Range("D8").Value = "vom Arbeitgeber auszuf|fffd|llen"
            With .Range("D7:D8").Font
                .Name = "Verdana"
                .Size = 12
                .Bold = False
                .ColorIndex = 1
            End With
            With .Range("C7:C8").Borders(xlEdgeLeft)
                .LineStyle = xlContinuous
                .Weight = xlThick
                .ColorIndex = 1
            End With
        Else
            .Rows("1:2").RowHeight = 5.5
            .Rows("3:3").RowHeight = 19.5
            .Rows("4:4").RowHeight = 5.5
            .Rows("5:6").RowHeight = 15
            .Rows("7:10").RowHeight = 5.5
            .Range("D3").Value = "Personalfragebogen"
            With .Range("D3").Font
                .Name = "Verdana"
                .Size = 16
                .Bold = True
                .ColorIndex = 1
            End With
            .Range("D5").Value = "Die mit diesem Balken gekennzeichneten Felder sind"
            .Range("D6").Value = "vom Arbeitgeber auszuf|fffd|llen"
            With .Range("D5:D6").Font
                .Name = "Verdana"
                .Size = 12
                .Bold = False
                .ColorIndex = 1
            End With
            With .Range("C5:C6").Borders(xlEdgeLeft)
                .LineStyle = xlContinuous
                .Weight = xlThick
                .ColorIndex = 1
            End With
        End If
    End With
End Sub

Public Sub Logo_einfuegen(ws As String)
    Sheets("Verwaltung").Select
    ActiveSheet.Shapes.Range(Array("Grafik 1")).Select
    Selection.Copy
    Sheets(ws).Select
    Range("AT3").Select
    ActiveSheet.Paste
End Sub

Public Function Abschnittsueberschrift_einfuegen(Abschnittsname As String, Optional Zusatztext As String) As String
    Dim pos As String
    
    pos = mdl_Datenfelder.Position
    
    With Worksheets("Personalfragebogen")
        If Zusatztext = "" Then
            .Rows(pos).RowHeight = 5.5
            .Rows(pos + 1).RowHeight = 15
            .Rows(pos + 2).RowHeight = 5.5
            .Range("D" & pos + 1).Value = Abschnittsname
            With .Range("D" & pos + 1).Font
                .Name = "Verdana"
                .Size = 12
                .Bold = True
                .ColorIndex = 1
            End With
            With .Range("C" & mdl_Datenfelder.Position & ":AW" & mdl_Datenfelder.Position + 2)
                With .Borders(xlEdgeBottom)
                    .LineStyle = xlContinuous
                    .Weight = xlThin
                    .ColorIndex = 1
                End With
                With .Interior
                    .ColorIndex = 2
                End With
            End With
        Else
            .Rows(pos).RowHeight = 5.5
            .Rows(pos + 1 & ":" & pos + 2).RowHeight = 15
            .Rows(pos + 3).RowHeight = 5.5
            .Range("D" & pos + 1).Value = Abschnittsname
             With .Range("D" & pos + 1).Font
                .Name = "Verdana"
                .Size = 12
                .Bold = True
                .ColorIndex = 1
            End With
            .Range("D" & pos + 2).Value = Zusatztext
            With .Range("D" & pos + 2).Font
                .Name = "Verdana"
                .Size = 12
                .Bold = False
                .ColorIndex = 1
            End With
            With .Range("C" & mdl_Datenfelder.Position & ":AW" & mdl_Datenfelder.Position + 3)
                With .Borders(xlEdgeBottom)
                    .LineStyle = xlContinuous
                    .Weight = xlThin
                    .ColorIndex = 1
                End With
                With .Interior
                    .ColorIndex = 2
                End With
            End With
        End If
    End With
    
    Abschnittsueberschrift_einfuegen = pos
End Function
Attribute VB_Name = "Mdl_Hilfsfunktionen"
Option Explicit
Private strRange As String
Private strRangeArray As Variant

Public Function Exportdatei_vorhanden(File_Path As String) As Boolean
    If (Dir(File_Path) <> "") Then
        Exportdatei_vorhanden = True
    Else
        Exportdatei_vorhanden = False
    End If
End Function

Public Function Worksheet_bereits_vorhanden(ws_Name As String)
    Dim ws As Worksheet
        
    For Each ws In Worksheets
        If ws.Name = ws_Name Then
            Worksheet_bereits_vorhanden = True
            Exit Function
        End If
    Next ws
    Worksheet_bereits_vorhanden = False
End Function

Public Function Letzte_benutzte_Zeile(ws As String) As Integer
    Dim Spalte1 As Integer
    Dim Spalte2 As Integer
    Dim Spalte3 As Integer
    Dim Spalte4 As Integer
    Dim Spalte5 As Integer
    Dim Spalte6 As Integer
    Dim Spalte7 As Integer
    Dim Spalte8 As Integer
    Dim Spalte9 As Integer
    Dim Spalte10 As Integer
    Dim Spalte11 As Integer
    Dim Spalte12 As Integer
    
    With Worksheets(ws)
        Spalte1 = Mid(.Cells(Rows.count, 4).End(xlUp).Address(True, False), InStr(.Cells(Rows.count, 4).End(xlUp).Address(True, False), "$") + 1)
        Spalte2 = Mid(.Cells(Rows.count, 8).End(xlUp).Address(True, False), InStr(.Cells(Rows.count, 8).End(xlUp).Address(True, False), "$") + 1)
        Spalte3 = Mid(.Cells(Rows.count, 12).End(xlUp).Address(True, False), InStr(.Cells(Rows.count, 12).End(xlUp).Address(True, False), "$") + 1)
        Spalte4 = Mid(.Cells(Rows.count, 16).End(xlUp).Address(True, False), InStr(.Cells(Rows.count, 16).End(xlUp).Address(True, False), "$") + 1)
        Spalte5 = Mid(.Cells(Rows.count, 20).End(xlUp).Address(True, False), InStr(.Cells(Rows.count, 20).End(xlUp).Address(True, False), "$") + 1)
        Spalte6 = Mid(.Cells(Rows.count, 24).End(xlUp).Address(True, False), InStr(.Cells(Rows.count, 24).End(xlUp).Address(True, False), "$") + 1)
        Spalte7 = Mid(.Cells(Rows.count, 28).End(xlUp).Address(True, False), InStr(.Cells(Rows.count, 28).End(xlUp).Address(True, False), "$") + 1)
        Spalte8 = Mid(.Cells(Rows.count, 32).End(xlUp).Address(True, False), InStr(.Cells(Rows.count, 32).End(xlUp).Address(True, False), "$") + 1)
        Spalte9 = Mid(.Cells(Rows.count, 36).End(xlUp).Address(True, False), InStr(.Cells(Rows.count, 36).End(xlUp).Address(True, False), "$") + 1)
        Spalte10 = Mid(.Cells(Rows.count, 40).End(xlUp).Address(True, False), InStr(.Cells(Rows.count, 40).End(xlUp).Address(True, False), "$") + 1)
        Spalte11 = Mid(.Cells(Rows.count, 44).End(xlUp).Address(True, False), InStr(.Cells(Rows.count, 44).End(xlUp).Address(True, False), "$") + 1)
        Spalte12 = Mid(.Cells(Rows.count, 48).End(xlUp).Address(True, False), InStr(.Cells(Rows.count, 48).End(xlUp).Address(True, False), "$") + 1)
    End With
    
    Letzte_benutzte_Zeile = WorksheetFunction.Max(Spalte1, Spalte2, Spalte3, Spalte4, Spalte5, Spalte6, _
                                                Spalte7, Spalte8, Spalte9, Spalte10, Spalte11, Spalte12)
End Function

Public Sub Blattschutz_setzen(ws As String)
    With Worksheets(ws)
        .Protect _
        Password:="DATEVeGE532", _
        DrawingObjects:=True, _
        Contents:=True, _
        Scenarios:=True, _
        AllowFormattingCells:=False, _
        AllowFormattingColumns:=False, _
        AllowFormattingRows:=False, _
        AllowInsertingColumns:=False, _
        AllowInsertingRows:=False, _
        AllowInsertingHyperlinks:=False, _
        AllowDeletingColumns:=False, _
        AllowDeletingRows:=False, _
        AllowSorting:=False, _
        AllowFiltering:=False, _
        AllowUsingPivotTables:=False
        .EnableSelection = xlUnlockedCells
    End With
End Sub

Public Sub Blattschutz_aufheben(ws As String)
    On Error Resume Next
    With Worksheets(ws)
        .Unprotect ("DATEVeGE532")
    End With
    On Error GoTo 0
End Sub

Public Sub Ansichtsoptionen()
    With ActiveWindow
        'Zeilen- und Spalten|fffd|berschriften ausblenden
        .DisplayHeadings = False
        'Blattregisterkarten ausblenden
        .DisplayWorkbookTabs = False
    End With
    With Application
        'Bearbeitungsleiste ausblenden
        .DisplayFormulaBar = False
        'Statusleiste ausblenden
        .DisplayStatusBar = False
        'Kontextmen|fffd| deaktivieren
        .CommandBars("cell").Enabled = False
        'Falls Office Version 2007 oder neuer verwendet wird
        If Not val(.Version) < 12 Then
            'Ribbons und Men|fffd|zeile ausblenden
            .ExecuteExcel4Macro "SHOW.TOOLBAR(""Ribbon"",False)"
        End If
    End With
End Sub

Public Sub Ansichtsoptionen_zuruecksetzen()
    With ActiveWindow
        'Zeilen- und Spalten|fffd|berschriften einblenden
        .DisplayHeadings = True
        'Blattregisterkarten einblenden
        .DisplayWorkbookTabs = True
    End With
    With Application
        'Bearbeitungsleiste einblenden
        .DisplayFormulaBar = True
        'Statusleiste einblenden
        .DisplayStatusBar = True
        'Kontextmen|fffd| wieder aktivieren
        .CommandBars("cell").Enabled = True
        'Falls Office Version 2007 oder neuer verwendet wird
         If Not val(.Version) < 12 Then
            'Ribbons und Men|fffd|zeile einblenden
            .ExecuteExcel4Macro "SHOW.TOOLBAR(""Ribbon"",True)"
        End If
    End With
End Sub

Public Function Verzeichnis_existiert(Verzeichnis As String) As Boolean
    Dim fso As FileSystemObject
    Set fso = New FileSystemObject
    
    Verzeichnis_existiert = fso.FolderExists(Verzeichnis)
    Set fso = Nothing
End Function

Public Function Datei_exisitiert(Datei As String) As Boolean
    Dim fso As FileSystemObject
    Set fso = New FileSystemObject
    
    Datei_exisitiert = fso.FileExists(Datei)
    Set fso = Nothing
End Function

Public Function Datei_schreibgeschuetzt(Datei As String) As Boolean
    If FileSystem.GetAttr(Datei) Mod 2 = 1 Then
        Datei_schreibgeschuetzt = True
    Else
        Datei_schreibgeschuetzt = False
    End If
End Function

Public Function Dateinamenspruefung(Dateiname As String) As Zustand_Dateiname
    Dim i As Long

    Dateinamenspruefung = OK
    If Len(Dateiname) > 100 Then
        Dateinamenspruefung = zu_lang
        Exit Function
    End If
  
    For i = 1 To Len(Dateiname)
        If Mid(Dateiname, i, 1) = "<" _
        Or Mid(Dateiname, i, 1) = ">" _
        Or Mid(Dateiname, i, 1) = "?" _
        Or Mid(Dateiname, i, 1) = """" _
        Or Mid(Dateiname, i, 1) = ":" _
        Or Mid(Dateiname, i, 1) = "|" _
        Or Mid(Dateiname, i, 1) = "\" _
        Or Mid(Dateiname, i, 1) = "/" _
        Or Mid(Dateiname, i, 1) = "*" Then
            Dateinamenspruefung = enthaelt_unerlaubte_Zeichen
            Exit Function
        End If
    Next i
End Function

Sub Einfg_Aktion()
    Dim objData As New DataObject
    Dim str As String
    
    On Error Resume Next
    objData.GetFromClipboard
    str = objData.GetText
    str = Replace(str, vbCrLf, "")
    str = Replace(str, vbTab, "")
    ActiveCell.Value = Trim(str)
    On Error GoTo 0
     
    Set objData = Nothing
End Sub

Sub Tab_Aktion(Richtung As Integer)
    Dim ac As String
    Dim i As Integer
    
    Call strRangeArray_befuellen
    ac = ActiveCell.Address(False, False)
    For i = 0 To UBound(strRangeArray) - 1
        If strRangeArray(i) = ac Then
            If i = 0 And Richtung < 0 Then
                i = UBound(strRangeArray) - 1
            ElseIf i = UBound(strRangeArray) - 1 And Richtung > 0 Then
                i = 0
            Else
                i = i + Richtung
            End If
            Do While Worksheets("Personalfragebogen").Range(strRangeArray(i)).Locked = True
                If Richtung > 0 Then
                    i = i + 1
                Else
                    i = i - 1
                End If
            Loop
            GoTo Aktion
        End If
    Next i
    Exit Sub
    
Aktion:
    On Error Resume Next
    Application.GoTo Sheets("Personalfragebogen").Range(strRangeArray(i))
    On Error GoTo 0
End Sub

Public Sub strRangeArray_befuellen()
    Dim i As Integer
    
    strRange = ""
    With Worksheets("Assistent")
        For i = Firma To weitere_Beschaeftigungen_5
            If Not .Cells(i, 4).Value = "" Then
                strRange = strRange + .Cells(i, 4).Value + ";"
            End If
        Next i
    End With
    
    strRangeArray = Split(strRange, ";")
End Sub
Attribute VB_Name = "Mdl_OS_Architektur"
Private Type SYSTEM_INFO
    wProcessorArchitecture As Integer
    wReserved As Integer
    dwPageSize As Long
    lpMinimumApplicationAddress As Long
    lpMaximumApplicationAddress As Long
    dwActiveProcessorMask As Long
    dwNumberOfProcessors As Long
    dwProcessorType As Long
    dwAllocationGranularity As Long
    wProcessorLevel As Integer
    wProcessorRevision As Long
End Type

Private Declare Sub GetNativeSystemInfo Lib "kernel32.dll" (ByRef lpSystemInfo As SYSTEM_INFO)

Private Const PROCESSOR_ARCHITECTURE_AMD64 As Integer = 9
Private Const PROCESSOR_ARCHITECTURE_IA64 As Integer = 6
Private Const PROCESSOR_ARCHITECTURE_INTEL As Integer = 0
Private Const PROCESSOR_ARCHITECTURE_UNKNOWN As Integer = &HFFFF

Private Declare Function GetVersionEx Lib "kernel32.dll" Alias "GetVersionExA" (ByRef lpVersionInformation As OSVERSIONINFO) As Long

Private Type OSVERSIONINFO
    dwOSVersionInfoSize As Long
    dwMajorVersion As Long
    dwMinorVersion As Long
    dwBuildNumber As Long
    dwPlatformId As Long
    szCSDVersion As String * 128 ' Maintenance string for PSS usage
End Type

Private Const VER_PLATFORM_WIN32_NT As Long = 2
Private Const VER_PLATFORM_WIN32_WINDOWS As Long = 1
Private Const VER_PLATFORM_WIN32s As Long = 0

Public Function GetOsArchitecture() As OSArchitecture
    Dim OSInfo As OSVERSIONINFO
    Dim SInfo As SYSTEM_INFO
    Dim Version As Long

    ' OS Plattform und Version auslesen
    OSInfo.dwOSVersionInfoSize = Len(OSInfo)

    Call GetVersionEx(OSInfo)

    ' Plattform unterscheiden
    Select Case OSInfo.dwPlatformId
    
        Case VER_PLATFORM_WIN32s
            ' win32 layer on win16, veraltet
            GetOsArchitecture = OSA_Unknown
    
        Case VER_PLATFORM_WIN32_WINDOWS
            ' Win9x -> 32bit
            GetOsArchitecture = OSA_x86
    
        Case VER_PLATFORM_WIN32_NT
            ' NT, XP, Server2k3, ...
            ' Versionskomponenten zu Long zusammensetzen; vereinfacht die Pr|fffd|fung
            Version = (OSInfo.dwBuildNumber * &H1000) Or OSInfo.dwMajorVersion
            If (Version = 327680) Then ' = 5.0 (w2k)?
                ' Win 2k -> 32bit
                GetOsArchitecture = OSA_x86
            ElseIf (Version >= 327681) Then ' >= 5.1 (XP, Server2k3, ...)?
                ' -> GetNativeSystemInfo vorhanden
                GetNativeSystemInfo SInfo
                ' Prozessorarchitektur des OS unterscheiden
                Select Case SInfo.wProcessorArchitecture
                
                    Case PROCESSOR_ARCHITECTURE_AMD64
                        ' x64 (AMD Or Intel)
                        GetOsArchitecture = OSA_x64
        
                    Case PROCESSOR_ARCHITECTURE_IA64
                        ' Intel Itanium Processor Family (IPF)
                        GetOsArchitecture = OSA_Itanium
                        
                    Case PROCESSOR_ARCHITECTURE_INTEL
                        ' x86
                        GetOsArchitecture = OSA_x86
        
                    Case PROCESSOR_ARCHITECTURE_UNKNOWN
                        ' unknown
                        GetOsArchitecture = OSA_Unknown
        
                    Case Else
                        GetOsArchitecture = OSA_Unknown
                        
                End Select
            End If
        Case Else
            GetOsArchitecture = OSA_Unknown
            
    End Select
End Function
Attribute VB_Name = "Mdl_Pruefungen"
Option Explicit

Public Function Daten_fuer_Export_vorhanden() As Boolean
    Dim rng_Personalnummer As String
    Dim rng_Strasse As String
    Dim rng_Hausnummer As String
    Dim rng_PLZ As String
    Dim rng_Ort As String
    Dim rng_Eintrittsdatum As String
    
    With Worksheets("Assistent")
        rng_Personalnummer = Mid(.Cells(Name_des_Mitarbeiters_Personalnummer, 4).Value, InStr(.Cells(Name_des_Mitarbeiters_Personalnummer, 4).Value, ";") + 1)
        rng_Strasse = Left(.Cells(Strasse_Hausnr, 4).Value, InStr(.Cells(Strasse_Hausnr, 4).Value, ";") - 1)
        rng_Hausnummer = Mid(.Cells(Strasse_Hausnr, 4).Value, InStr(.Cells(Strasse_Hausnr, 4).Value, ";") + 1)
        rng_PLZ = Left(.Cells(PLZ_Ort, 4).Value, InStr(.Cells(PLZ_Ort, 4).Value, ";") - 1)
        rng_Ort = Mid(.Cells(PLZ_Ort, 4).Value, InStr(.Cells(PLZ_Ort, 4).Value, ";") + 1)
        rng_Eintrittsdatum = Left(.Cells(Eintrittsdatum_Ersteintrittsdatum, 4).Value, InStr(.Cells(Eintrittsdatum_Ersteintrittsdatum, 4).Value, ";") - 1)
    End With
    
    With Worksheets("Personalfragebogen")
        If .Range(rng_Personalnummer).Value = "" Then
            Call Fehlermeldungen(10)
            Daten_fuer_Export_vorhanden = False
        ElseIf .Range(Worksheets("Assistent").Cells(Familienname, 4).Value).Value = "" Then
            Call Fehlermeldungen(11)
            Daten_fuer_Export_vorhanden = False
        ElseIf .Range(Worksheets("Assistent").Cells(Vorname, 4).Value).Value = "" Then
            Call Fehlermeldungen(11)
            Daten_fuer_Export_vorhanden = False
        ElseIf .Range(rng_Eintrittsdatum).Value = "" Then
            Call Fehlermeldungen(12)
            Daten_fuer_Export_vorhanden = False
        ElseIf .Range(rng_Strasse).Value = "" Then
            Call Fehlermeldungen(13)
            Daten_fuer_Export_vorhanden = False
        ElseIf .Range(rng_Hausnummer).Value = "" Then
            Call Fehlermeldungen(13)
            Daten_fuer_Export_vorhanden = False
        ElseIf .Range(rng_PLZ).Value = "" Then
            Call Fehlermeldungen(13)
            Daten_fuer_Export_vorhanden = False
        ElseIf .Range(rng_Ort).Value = "" Then
            Call Fehlermeldungen(13)
            Daten_fuer_Export_vorhanden = False
        ElseIf .Range(Worksheets("Assistent").Cells(Geburtsdatum, 4).Value).Value = "" Then
            Call Fehlermeldungen(14)
            Daten_fuer_Export_vorhanden = False
        Else
            Daten_fuer_Export_vorhanden = True
        End If
    End With
End Function

Public Sub Eingabepruefung(Ziel As String)
    With Worksheets("Assistent")
        If Ziel = Mid(.Cells(Name_des_Mitarbeiters_Personalnummer, 4).Value, InStr(.Cells(Name_des_Mitarbeiters_Personalnummer, 4).Value, ";") + 1) Then
            Call Numerisch(Ziel, 5)
            Exit Sub
        End If
        If Ziel = .Cells(Familienname, 4).Value Then
            Call AlphaNumerisch(Ziel, 30)
            Exit Sub
        End If
        If Ziel = .Cells(Vorname, 4).Value Then
            Call AlphaNumerisch(Ziel, 30)
            Exit Sub
        End If
        If Ziel = .Cells(Geburtsname, 4).Value Then
            Call AlphaNumerisch(Ziel, 30)
            Exit Sub
        End If
        If Ziel = .Cells(Geburtsdatum, 4).Value Then
            Call Datum(Ziel)
            Exit Sub
        End If
        If Ziel = Left(.Cells(Strasse_Hausnr, 4).Value, InStr(.Cells(Strasse_Hausnr, 4).Value, ";") - 1) Then
            Call AlphaNumerisch(Ziel, 33)
            Exit Sub
        End If
        If Ziel = Mid(.Cells(Strasse_Hausnr, 4).Value, InStr(.Cells(Strasse_Hausnr, 4).Value, ";") + 1) Then
            Call AlphaNumerisch(Ziel, 6)
            Exit Sub
        End If
        If Ziel = Left(.Cells(PLZ_Ort, 4).Value, InStr(.Cells(PLZ_Ort, 4).Value, ";") - 1) Then
            Call AlphaNumerisch(Ziel, 6)
            Exit Sub
        End If
        If Ziel = Mid(.Cells(PLZ_Ort, 4).Value, InStr(.Cells(PLZ_Ort, 4).Value, ";") + 1) Then
            Call AlphaNumerisch(Ziel, 34)
            Exit Sub
        End If
        If Ziel = .Cells(Anschriftenzusatz, 4).Value Then
            Call AlphaNumerisch(Ziel, 40)
            Exit Sub
        End If
        If Ziel = .Cells(Versicherungsnummer, 4).Value Then
            Call AlphaNumerisch(Ziel, 12)
            Exit Sub
        End If
        If Ziel = .Cells(Geburtsort, 4).Value Then
            Call AlphaNumerisch(Ziel, 34)
            Exit Sub
        End If
        If Ziel = .Cells(Geburtsland, 4).Value Then
            Call AlphaNumerisch(Ziel, 72)
            Exit Sub
        End If
        If Ziel = .Cells(Staatsangehoerigkeit, 4).Value Then
            'fehlt
            Exit Sub
        End If
        If Ziel = .Cells(Kontonummer, 4).Value Then
            Call AlphaNumerisch(Ziel, 25)
            Exit Sub
        End If
        If Ziel = .Cells(Bankleitzahl, 4).Value Then
            Call Numerisch(Ziel, 8)
            Exit Sub
        End If
        If Ziel = .Cells(Bankbezeichnung, 4).Value Then
            Call AlphaNumerisch(Ziel, 27)
            Exit Sub
        End If
        If Ziel = .Cells(Arbeitnehmernummer, 4).Value Then
            'fehlt
            Exit Sub
        End If
            
        If Ziel = Left(.Cells(Eintrittsdatum_Ersteintrittsdatum, 4).Value, InStr(.Cells(Eintrittsdatum_Ersteintrittsdatum, 4).Value, ";") - 1) Then
            Call Datum(Ziel)
            Exit Sub
        End If
        If Ziel = Mid(.Cells(Eintrittsdatum_Ersteintrittsdatum, 4).Value, InStr(.Cells(Eintrittsdatum_Ersteintrittsdatum, 4).Value, ";") + 1) Then
            Call Datum(Ziel)
            Exit Sub
        End If
        If Ziel = .Cells(Betriebsstaette, 4).Value Then
            Call AlphaNumerisch(Ziel, 60)
            Exit Sub
        End If
        If Ziel = .Cells(Berufsbezeichnung, 4).Value Then
            Call AlphaNumerisch(Ziel, 30)
            Exit Sub
        End If
        If Ziel = .Cells(Ausgeuebte_Taetigkeit, 4).Value Then
            Call AlphaNumerisch(Ziel, 5)
            Exit Sub
        End If
            
        If Ziel = .Cells(Beginn_der_Ausbildung, 4).Value Then
            Call Datum(Ziel)
            Exit Sub
        End If
        If Ziel = .Cells(Ende_der_Ausbildung, 4).Value Then
            Call Datum(Ziel)
            Exit Sub
        End If
        If Ziel = Left(.Cells(Woechentliche_Arbeitszeit_Urlaubsanspruch, 4).Value, InStr(.Cells(Woechentliche_Arbeitszeit_Urlaubsanspruch, 4).Value, ";") - 1) Then
            Call Numerisch_VK_NK(Ziel, 2, 3)
            Exit Sub
        End If
        If Ziel = Mid(.Cells(Woechentliche_Arbeitszeit_Urlaubsanspruch, 4).Value, InStr(.Cells(Woechentliche_Arbeitszeit_Urlaubsanspruch, 4).Value, ";") + 1) Then
            Call Numerisch_VK_NK(Ziel, 2, 3)
            Exit Sub
        End If
        If Ziel = .Cells(Kostenstelle, 4).Value Then
            Call AlphaNumerisch(Ziel, 8)
            Exit Sub
        End If
        If Ziel = .Cells(Abteilungsnummer, 4).Value Then
            Call AlphaNumerisch(Ziel, 8)
            Exit Sub
        End If
        If Ziel = .Cells(Im_Baugewerbe_beschaeftigt_seit, 4).Value Then
            Call Datum(Ziel)
            Exit Sub
        End If
        
        If Ziel = .Cells(Befristung_Arbeitsvertrag_zum, 4).Value Then
            Call Datum(Ziel)
            Exit Sub
        End If
        If Ziel = .Cells(Abschluss_Arbeitsvertrag_am, 4).Value Then
            Call Datum(Ziel)
            Exit Sub
        End If
            
        If Ziel = Left(.Cells(Steuerklasse_Faktor, 4).Value, InStr(.Cells(Steuerklasse_Faktor, 4).Value, ";") - 1) Then
            Call Numerisch(Ziel, 1)
            Exit Sub
        End If
        If Ziel = Mid(.Cells(Steuerklasse_Faktor, 4).Value, InStr(.Cells(Steuerklasse_Faktor, 4).Value, ";") + 1) Then
            Call Numerisch_VK_NK(Ziel, 3, 5)
            Exit Sub
        End If
        If Ziel = .Cells(Kinderfreibetrag, 4).Value Then
            Call Numerisch_VK_NK(Ziel, 1, 2)
            Exit Sub
        End If
        If Ziel = Left(.Cells(Finanzamtsnummer_Identifikationsnummer, 4).Value, InStr(.Cells(Finanzamtsnummer_Identifikationsnummer, 4).Value, ";") - 1) Then
            Call Numerisch(Ziel, 4)
            Exit Sub
        End If
        If Ziel = Mid(.Cells(Finanzamtsnummer_Identifikationsnummer, 4).Value, InStr(.Cells(Finanzamtsnummer_Identifikationsnummer, 4).Value, ";") + 1) Then
            Call Numerisch(Ziel, 11)
            Exit Sub
        End If
            
        If Ziel = .Cells(Gesetzl_Krankenkasse, 4).Value Then
            'fehlt
            Exit Sub
        End If
        If Ziel = .Cells(UV_Gefahrtarif, 4).Value Then
            'fehlt
            Exit Sub
        End If
        If Ziel = .Cells(Name_Krankenkasse_Private_Versicherung, 4).Value Then
            'fehlt
            Exit Sub
        End If
            
        If Ziel = Split(.Cells(Entlohnung, 4).Value, ";")(0) Then 'Bezeichnung
            'fehlt
            Exit Sub
        End If
        If Ziel = Split(.Cells(Entlohnung, 4).Value, ";")(1) Then 'Betrag
            Call Numerisch_VK_NK(Ziel, 2)
            Exit Sub
        End If
        If Ziel = Split(.Cells(Entlohnung, 4).Value, ";")(2) Then 'g|fffd|ltig ab
            Call Datum_kurz(Ziel)
            Exit Sub
        End If
        If Ziel = Split(.Cells(Entlohnung, 4).Value, ";")(3) Then 'Stundenlohn
            Call Numerisch_VK_NK(Ziel, 2)
            Exit Sub
        End If
        If Ziel = Split(.Cells(Entlohnung, 4).Value, ";")(4) Then 'g|fffd|ltig ab
            Call Datum_kurz(Ziel)
            Exit Sub
        End If
            
        If Ziel = Split(.Cells(Entlohnung_2, 4).Value, ";")(0) Then 'Bezeichnung
            'fehlt
            Exit Sub
        End If
        If Ziel = Split(.Cells(Entlohnung_2, 4).Value, ";")(1) Then 'Betrag
            Call Numerisch_VK_NK(Ziel, 2)
            Exit Sub
        End If
        If Ziel = Split(.Cells(Entlohnung_2, 4).Value, ";")(2) Then 'g|fffd|ltig ab
            Call Datum_kurz(Ziel)
            Exit Sub
        End If
        If Ziel = Split(.Cells(Entlohnung_2, 4).Value, ";")(3) Then 'Stundenlohn
            Call Numerisch_VK_NK(Ziel, 2)
            Exit Sub
        End If
        If Ziel = Split(.Cells(Entlohnung_2, 4).Value, ";")(4) Then 'g|fffd|ltig ab
            Call Datum_kurz(Ziel)
            Exit Sub
        End If
        
        If Ziel = .Cells(Empfaenger_VWL, 4).Value Then
            Call AlphaNumerisch(Ziel, 22)
            Exit Sub
        End If
        If Ziel = Left(.Cells(Betrag_AG_Anteil, 4).Value, InStr(.Cells(Betrag_AG_Anteil, 4).Value, ";") - 1) Then
            Call Numerisch_VK_NK(Ziel, 2, 5)
            Exit Sub
        End If
        If Ziel = Mid(.Cells(Betrag_AG_Anteil, 4).Value, InStr(.Cells(Betrag_AG_Anteil, 4).Value, ";") + 1) Then
            Call Numerisch_VK_NK(Ziel, 2, 5)
            Exit Sub
        End If
        If Ziel = .Cells(seit_wann, 4).Value Then
            Call Datum(Ziel)
            Exit Sub
        End If
        If Ziel = .Cells(Vertragsnummer, 4).Value Then
            Call AlphaNumerisch(Ziel, 20)
            Exit Sub
        End If
        If Ziel = .Cells(Kontonummer_VWL, 4).Value Then
            Call AlphaNumerisch(Ziel, 25)
            Exit Sub
        End If
        If Ziel = .Cells(Bankleitzahl_VWL, 4).Value Then
            Call Numerisch(Ziel, 8)
            Exit Sub
        End If
        If Ziel = .Cells(Bankbezeichnung_VWL, 4).Value Then
            Call AlphaNumerisch(Ziel, 27)
            Exit Sub
        End If
        
        If Not .Cells(Vorbeschaeftigungszeiten, 4).Value = "" Then
            If Ziel = Split(.Cells(Vorbeschaeftigungszeiten, 4).Value, ";")(0) Then 'von
                Call Datum(Ziel)
                Exit Sub
            End If
        End If
        If Not .Cells(Vorbeschaeftigungszeiten, 4).Value = "" Then
            If Ziel = Split(.Cells(Vorbeschaeftigungszeiten, 4).Value, ";")(1) Then 'bis
                Call Datum(Ziel)
                Exit Sub
            End If
        End If
        If Not .Cells(Vorbeschaeftigungszeiten, 4).Value = "" Then
            If Ziel = Split(.Cells(Vorbeschaeftigungszeiten, 4).Value, ";")(2) Then 'Art der Besch|fffd|ftigung
                'fehlt
                Exit Sub
            End If
        End If
        If Not .Cells(Vorbeschaeftigungszeiten, 4).Value = "" Then
            If Ziel = Split(.Cells(Vorbeschaeftigungszeiten, 4).Value, ";")(3) Then 'Anzahl der Besch|fffd|ftigungstage
                Call Numerisch(Ziel)
                Exit Sub
            End If
        End If
        
        If Not .Cells(Vorbeschaeftigungszeiten_2, 4).Value = "" Then
            If Ziel = Split(.Cells(Vorbeschaeftigungszeiten_2, 4).Value, ";")(0) Then 'von
                Call Datum(Ziel)
                Exit Sub
            End If
        End If
        If Not .Cells(Vorbeschaeftigungszeiten_2, 4).Value = "" Then
            If Ziel = Split(.Cells(Vorbeschaeftigungszeiten_2, 4).Value, ";")(1) Then 'bis
                Call Datum(Ziel)
                Exit Sub
            End If
        End If
        If Not .Cells(Vorbeschaeftigungszeiten_2, 4).Value = "" Then
            If Ziel = Split(.Cells(Vorbeschaeftigungszeiten_2, 4).Value, ";")(2) Then 'Art der Besch|fffd|ftigung
                'fehlt
                Exit Sub
            End If
        End If
        If Not .Cells(Vorbeschaeftigungszeiten_2, 4).Value = "" Then
            If Ziel = Split(.Cells(Vorbeschaeftigungszeiten_2, 4).Value, ";")(3) Then 'Anzahl der Besch|fffd|ftigungstage
                Call Numerisch(Ziel)
                Exit Sub
            End If
        End If
        
        If Not .Cells(weitere_Beschaeftigungen, 4).Value = "" Then
            If Ziel = Split(.Cells(weitere_Beschaeftigungen, 4).Value, ";")(0) Then 'von
                Call Datum(Ziel)
                Exit Sub
            End If
        End If
        If Not .Cells(weitere_Beschaeftigungen, 4).Value = "" Then
            If Ziel = Split(.Cells(weitere_Beschaeftigungen, 4).Value, ";")(1) Then 'bis
                Call Datum(Ziel)
                Exit Sub
            End If
        End If
        If Not .Cells(weitere_Beschaeftigungen, 4).Value = "" Then
            If Ziel = Split(.Cells(weitere_Beschaeftigungen, 4).Value, ";")(2) Then 'Arbeitgeber
                'fehlt
                Exit Sub
            End If
        End If
        If Not .Cells(weitere_Beschaeftigungen, 4).Value = "" Then
            If Ziel = Split(.Cells(weitere_Beschaeftigungen, 4).Value, ";")(4) Then 'W|fffd|chentl. Arbeitszeit
                Call Numerisch(Ziel)
                Exit Sub
            End If
        End If

        If Not .Cells(weitere_Beschaeftigungen_2, 4).Value = "" Then
            If Ziel = Split(.Cells(weitere_Beschaeftigungen_2, 4).Value, ";")(0) Then 'von
                Call Datum(Ziel)
                Exit Sub
            End If
        End If
        If Not .Cells(weitere_Beschaeftigungen_2, 4).Value = "" Then
            If Ziel = Split(.Cells(weitere_Beschaeftigungen_2, 4).Value, ";")(1) Then 'bis
                Call Datum(Ziel)
                Exit Sub
            End If
        End If
        If Not .Cells(weitere_Beschaeftigungen_2, 4).Value = "" Then
            If Ziel = Split(.Cells(weitere_Beschaeftigungen_2, 4).Value, ";")(2) Then 'Arbeitgeber
                'fehlt
                Exit Sub
            End If
        End If
        If Not .Cells(weitere_Beschaeftigungen_2, 4).Value = "" Then
            If Ziel = Split(.Cells(weitere_Beschaeftigungen_2, 4).Value, ";")(4) Then 'W|fffd|chentl. Arbeitszeit
                Call Numerisch(Ziel)
                Exit Sub
            End If
        End If
    End With
End Sub

Private Sub AlphaNumerisch(Ziel As String, int_len As Integer)
    Dim str As String
    
    With Worksheets("Personalfragebogen")
        str = .Range(Ziel).Value
        
        If Len(str) > int_len Then
            GoTo Fehlerbehandlung
        End If
    End With
    Exit Sub
    
Fehlerbehandlung:
    With Worksheets("Personalfragebogen")
        Call Fehlermeldungen(1, int_len)
        .Range(Ziel).Value = ""
        .Range(Ziel).Select
    End With
    Exit Sub
End Sub

Private Sub Numerisch(Ziel As String, Optional int_len As Integer)
    Dim str As String
    Dim err As Integer
    
    With Worksheets("Personalfragebogen")
        str = .Range(Ziel).Value
        
        If IsNumeric(str) Then
            If str < 0 Then
                err = 4
                GoTo Fehlerbehandlung
            Else
                If int_len <> 0 And Len(str) > int_len Then
                    err = 1
                    GoTo Fehlerbehandlung
                End If
            End If
        Else
            err = 3
            GoTo Fehlerbehandlung
        End If
    End With
    Exit Sub
    
Fehlerbehandlung:
    With Worksheets("Personalfragebogen")
        If int_len <> 0 Then
            Call Fehlermeldungen(err, int_len)
        Else
            Call Fehlermeldungen(err)
        End If
        .Range(Ziel).Value = ""
        .Range(Ziel).Select
    End With
    Exit Sub
End Sub

Private Sub Numerisch_VK_NK(Ziel As String, int_nk As Integer, Optional int_vk As Integer)
    Dim str As String
    Dim err As Integer
    Dim strFormat As String
    Dim nk As Integer
    
    strFormat = "0."
    nk = int_nk
    Do While nk > 0
        strFormat = strFormat & "0"
        nk = nk - 1
    Loop
    
    With Worksheets("Personalfragebogen")
        str = .Range(Ziel).Value
        
        If IsNumeric(str) Then
            If str < 0 Then
                err = 4
                GoTo Fehlerbehandlung
            Else
                If InStr(str, ",") = 0 Then str = Format(str, strFormat)
                
                If int_nk <> 0 And Len(Split(str, ",")(1)) > int_nk Then
                    err = 7
                    GoTo Fehlerbehandlung
                ElseIf int_vk <> 0 And Len(Split(str, ",")(0)) > int_vk Then
                    err = 8
                    GoTo Fehlerbehandlung
                Else
                    str = Format(str, strFormat)
                End If
            End If
        Else
            err = 3
            GoTo Fehlerbehandlung
        End If
        
        .Range(Ziel).Value = str
    End With
    Exit Sub
    
Fehlerbehandlung:
    With Worksheets("Personalfragebogen")
        Select Case err
            Case 7:     Call Fehlermeldungen(err, int_nk)
            Case 8:     Call Fehlermeldungen(err, int_vk)
            Case Else:  Call Fehlermeldungen(err)
        End Select
        .Range(Ziel).Value = ""
        .Range(Ziel).Select
    End With
    Exit Sub
End Sub

Private Sub Datum(Ziel As String)
    Dim str As String
    
    With Worksheets("Personalfragebogen")
        str = .Range(Ziel).Value
        If InStr(str, ".") = 3 And InStr(Mid(str, 4), ".") = 3 And Len(str) = 10 Then
            If Not IsNumeric(Split(str, ".")(0)) Or Split(str, ".")(0) > 31 Or Not IsNumeric(Split(str, ".")(1)) Or Split(str, ".")(1) > 12 Or Not IsNumeric(Split(str, ".")(2)) Then
                GoTo Fehlerbehandlung
            End If
        Else
            If InStr(str, ".") = 0 And Len(str) = 8 Then
                If IsNumeric(Left(str, 2)) And IsNumeric(Mid(str, 3, 2)) And IsNumeric(Mid(str, 5)) Then
                    str = Format(Left(str, 2), "00") & "." & Format(Mid(str, 3, 2), "00") & "." & Mid(str, 5)
                End If
            ElseIf UBound(Split(str, ".")) = 2 Then
                If IsNumeric(Split(str, ".")(0)) And IsNumeric(Split(str, ".")(1)) And IsNumeric(Split(str, ".")(2)) Then
                    If Len(Split(str, ".")(2)) = 4 Then
                        str = Format(Split(str, ".")(0), "00") & "." & Format(Split(str, ".")(1), "00") & "." & Split(str, ".")(2)
                    Else
                        GoTo Fehlerbehandlung
                    End If
                End If
            Else
                GoTo Fehlerbehandlung
            End If
        End If
        
        If IsDate(str) Then
            .Range(Ziel).Value = str
        Else
            GoTo Fehlerbehandlung
        End If
    End With
    Exit Sub
    
Fehlerbehandlung:
    With Worksheets("Personalfragebogen")
        Call Fehlermeldungen(5)
        .Range(Ziel).Value = ""
        .Range(Ziel).Select
    End With
    Exit Sub
End Sub

Private Sub Datum_kurz(Ziel As String)
    Dim str As String
    
    With Worksheets("Personalfragebogen")
        str = .Range(Ziel).Value
        If InStr(str, "/") = 3 And Len(str) = 7 Then
            If Not IsNumeric(Split(str, "/")(0)) Or Not IsNumeric(Split(str, "/")(1)) Then
                GoTo Fehlerbehandlung
            End If
        Else
            If InStr(str, ".") = 3 And Len(str) = 7 Then
                If IsNumeric(Split(str, ".")(0)) And IsNumeric(Split(str, ".")(1)) Then
                    str = Format(Split(str, ".")(0), "00") & "/" & Split(str, ".")(1)
                End If
            ElseIf InStr(str, ".") = 2 And Len(str) = 6 Then
                If IsNumeric(Split(str, ".")(0)) And IsNumeric(Split(str, ".")(1)) Then
                    str = Format(Split(str, ".")(0), "00") & "/" & Split(str, ".")(1)
                End If
            ElseIf InStr(str, "/") = 2 And Len(str) = 6 Then
                If IsNumeric(Split(str, "/")(0)) And IsNumeric(Split(str, "/")(1)) Then
                    str = Format(Split(str, "/")(0), "00") & "/" & Split(str, "/")(1)
                End If
            ElseIf InStr(str, "/") = 0 And Len(str) = 6 Then
                If IsNumeric(Left(str, 2)) And IsNumeric(Mid(str, 3)) Then
                    str = Format(Left(str, 2), "00") & "/" & Mid(str, 3)
                End If
            Else
                GoTo Fehlerbehandlung
            End If
        End If
        
        If IsDate(str) Then
            .Range(Ziel).Value = str
        Else
            GoTo Fehlerbehandlung
        End If
    End With
    Exit Sub
    
Fehlerbehandlung:
    With Worksheets("Personalfragebogen")
        Call Fehlermeldungen(6)
        .Range(Ziel).Value = ""
        .Range(Ziel).Select
    End With
    Exit Sub
End Sub

Private Sub Fehlermeldungen(Fehler_Nr As Integer, Optional int_len As Integer)
    Dim Message As String
    
    Select Case Fehler_Nr
        Case 1
                Message = "Der eingegebene Wert ist zu lang." & vbCrLf & _
                            "Zul|fffd|ssig sind maximal " & int_len & " Zeichen."
                            
        Case 2
                Message = "Der eingegebene Wert ist zu kurz." & vbCrLf & _
                            "Bitte geben sie mindestens " & int_len & " Zeichen ein."
        
        Case 3
                Message = "Der eingegebene Wert ist ung|fffd|ltig." & vbCrLf & _
                            "Zul|fffd|ssig sind nur numerische Werte."
                            
        Case 4
                Message = "Der eingegebene Wert ist ung|fffd|ltig." & vbCrLf & _
                            "Zul|fffd|ssig sind nur Werte gr|fffd||fffd|er oder gleich 0."
                            
        Case 5
                Message = "Das eingegebene Datum ist ung|fffd|ltig." & vbCrLf & _
                            "Bitte geben Sie ein Datum im Format 'TT.MM.JJJJ' ein."
                            
        Case 6
                Message = "Das eingegebene Datum ist ung|fffd|ltig." & vbCrLf & _
                            "Bitte geben Sie ein Datum im Format 'MM/JJJJ' ein."
                            
        Case 7
                Message = "Der eingegebene Wert ist ung|fffd|ltig." & vbCrLf & _
                            "Zul|fffd|ssig sind maximal " & int_len & " Nachkommastellen."
                
        Case 8
                Message = "Der eingegebene Wert ist ung|fffd|ltig." & vbCrLf & _
                            "Zul|fffd|ssig sind maximal " & int_len & " Vorkommastellen."
        
        Case 10
                Message = "F|fffd|r den erfassten Mitarbeiter wurde keine Personalnummer angegeben." & vbCrLf & _
                            "Bitte geben Sie eine g|fffd|ltige Personalnummer ein."
        
        Case 11
                Message = "F|fffd|r den erfassten Mitarbeiter wurde kein vollst|fffd|ndiger Name angegeben." & vbCrLf & _
                            "Bitte geben Sie einen vollst|fffd|ndigen Namen ein."
                            
        Case 12
                Message = "F|fffd|r den erfassten Mitarbeiter wurde kein Eintrittsdatum angegeben." & vbCrLf & _
                            "Bitte geben Sie ein g|fffd|ltiges Eintrittsdatum ein."
        
        Case 13
                Message = "F|fffd|r den erfassten Mitarbeiter wurde keine vollst|fffd|ndige Anschrift angegeben." & vbCrLf & _
                            "Bitte geben Sie eine vollst|fffd|ndige Anschrift ein."
                        
        Case 14
                Message = "F|fffd|r den erfassten Mitarbeiter wurde kein Geburtsdatum angegeben." & vbCrLf & _
                            "Bitte geben Sie ein g|fffd|ltiges Geburtsdatum ein."
    End Select
    
    'Hinweismeldung zusammensetzen
    If Fehler_Nr < 10 Then
        MsgBox Message & vbCrLf & vbCrLf & VBA.Chr$(187) & _
                " Korrigieren Sie Ihre Eingabe.", _
                vbInformation
    Else
         MsgBox Message, vbInformation
    End If
End Sub
Attribute VB_Name = "Mdl_Registry"
Option Explicit

Const REG_OPTION_NON_VOLATILE = &H0
Const HKEY_LOCAL_MACHINE = &H80000002

Const KEY_READ = &H20019

Declare Function RegOpenKeyEx Lib "advapi32.dll" Alias _
    "RegOpenKeyExA" (ByVal hKey As Long, ByVal lpSubKey As String, _
    ByVal ulOptions As Long, ByVal samDesired As Long, phkResult As _
    Long) As Long

Declare Function RegQueryValueEx Lib "advapi32.dll" Alias _
    "RegQueryValueExA" (ByVal hKey As Long, ByVal lpValueName As String, _
    ByVal lpReserved As Long, lpType As Long, lpData As Any, _
    lpcbData As Long) As Long

Declare Function RegCloseKey Lib "advapi32.dll" (ByVal hKey As Long) As Long

Function VersionImportDatei_LuG_lesen()
    Dim vers_nr As String

    Select Case GetOsArchitecture()
        Case OSA_Unknown
            vers_nr = ""
        Case OSA_x86
            vers_nr = RegRead(HKEY_LOCAL_MACHINE, "SOFTWARE\DATEVeG\Components\P0000000\Versions\1.0\AdditionalInfos\STIM-Schnittstelle", "Version")
        Case OSA_x64
            vers_nr = RegRead(HKEY_LOCAL_MACHINE, "SOFTWARE\Wow6432Node\DATEVeG\Components\P0000000\Versions\1.0\AdditionalInfos\STIM-Schnittstelle", "Version")
        Case OSA_Itanium
            vers_nr = RegRead(HKEY_LOCAL_MACHINE, "SOFTWARE\Wow6432Node\DATEVeG\Components\P0000000\Versions\1.0\AdditionalInfos\STIM-Schnittstelle", "Version")
    End Select

    VersionImportDatei_LuG_lesen = vers_nr
End Function

Function RegRead(ByVal lngHKey As Long, ByVal strSection As String, varValue As Variant) As String

    'Liest String-, Bin|fffd|r- und DWORD-Daten aus der Registry
    Dim lngReturn       As Long             'R|fffd|ckgabewert des ge|fffd|ffneten Schl|fffd|ssels
    Dim lngHandle       As Long             'Handle auf den ge|fffd|ffneten Schl|fffd|ssel
    Dim lngDataType     As Long             'Datentyp des Regestrywerts
    Dim lngBufferSize   As Long             'Speicherbedarf des gelesenen Werts

    On Error GoTo GoOut
    
    'Registryschl|fffd|ssel |fffd|ffnen
    lngReturn = RegOpenKeyEx(lngHKey, strSection, 0&, KEY_READ, lngHandle)
    
    If lngReturn <> 0 Then Exit Function
    
    'Datentyp und Gr|fffd||fffd|e bestimmen
    lngReturn = RegQueryValueEx(lngHandle, varValue, 0, lngDataType, ByVal 0, lngBufferSize)

    If lngReturn <> 0 Then GoTo GoOut
    
    'Je nach Typ werden jetzt die Daten gelesen
    Select Case lngDataType
    
        Case 1:     ' String
            Dim strTmpSNum      As String * 255
            lngReturn = RegQueryValueEx(lngHandle, varValue & Chr(0), 0&, 1, ByVal strTmpSNum, Len(strTmpSNum))
            If lngReturn = 0 Then RegRead = Left(strTmpSNum, InStr(1, strTmpSNum, vbNullChar) - 1)
            
        Case 3:     ' Bin|fffd|r
            Dim bytData()       As Byte
            lngReturn = RegQueryValueEx(lngHandle, varValue, 0&, 3, ByVal 0&, lngBufferSize)
            ReDim bytData(lngBufferSize - 1) As Byte
            lngReturn = RegQueryValueEx(lngHandle, varValue, 0&, 3, bytData(0), lngBufferSize)
            If lngReturn = 0 Then RegRead = bytData()
            
        Case 4:     ' DWORD
            Dim lngData         As Long
            lngReturn = RegQueryValueEx(lngHandle, varValue & Chr(0), 0&, 4, lngData, lngBufferSize)
            If lngReturn = 0 Then RegRead = lngData
            
        Case Else   ' andere Typen werden von dieser Funktion nicht unterst|fffd|tzt
            lngReturn = -1
    
    End Select
    
GoOut:
    'Schl|fffd|ssel wieder schliessen
    lngReturn = RegCloseKey(lngHandle)
  
End Function
Attribute VB_Name = "Mdl_Steuerelemente"
Option Explicit
Public Const ComboBox_Left_Spalte_1 = 15.75
Public Const ComboBox_Left_Spalte_2 = 348.75
Public Const ComboBox_Height = 19.5
Public Const ComboBox_Width = 318
Public Const Standard_Abstand_ComboBox = 42.75
Public Const Abstand_Absatz_ComboBox = 73.5
Public Const CheckBox_Left_Spalte_1 = 253.5
Public Const CheckBox_Left_Spalte_2 = 586.5
Public Position As Double
Dim CommandButton_Speichern As OLEObject
Dim CommandButton_Drucken As OLEObject
Dim CommandButton_Export As OLEObject
Dim ComboBox_Geschlecht As OLEObject
Dim ComboBox_Familienstand As OLEObject
Dim ComboBox_Schwerbehindert As OLEObject
Dim ComboBox_Barzahlung As OLEObject
Dim ComboBox_Art_der_Beschaeftigung As OLEObject
Dim ComboBox_Nebenbeschaeftigung As OLEObject
Dim ComboBox_Hoechster_Schulabschluss As OLEObject
Dim ComboBox_Hoechste_Berufsausbildung As OLEObject
Dim ComboBox_Vertragsform As OLEObject
Dim ComboBox_Personengruppe As OLEObject
Dim ComboBox_Status_Beschaeftigung As OLEObject
Dim ComboBox_Art_der_Befristung As OLEObject
Dim CheckBox_Schriftlicher_Abschluss As OLEObject
Dim CheckBox_Weiterbeschaeftigung As OLEObject
Dim ComboBox_Konfession As OLEObject
Dim ComboBox_Pauschalierung As OLEObject
Dim ComboBox_Abwaelzung_an_Arbeitnehmer As OLEObject
Dim ComboBox_Elterneigenschaft As OLEObject
Dim ComboBox_KV As OLEObject
Dim ComboBox_RV As OLEObject
Dim ComboBox_AV As OLEObject
Dim ComboBox_PV As OLEObject
Dim ComboBox_RV_Option As OLEObject
Dim ComboBox_Krankenversicherung As OLEObject
Dim ComboBox_weitere_Beschaeftigungen As OLEObject
Dim ComboBox_weitere_Beschaeftigungen_2 As OLEObject
Dim ComboBox_weitere_Beschaeftigungen_3 As OLEObject
Dim ComboBox_weitere_Beschaeftigungen_4 As OLEObject
Dim ComboBox_weitere_Beschaeftigungen_5 As OLEObject
Dim CheckBox_Arbeitsvertrag As OLEObject
Dim CheckBox_Lohnsteuerkarte As OLEObject
Dim CheckBox_SV_Ausweis As OLEObject
Dim CheckBox_Mitgliedsbescheinigung_KK As OLEObject
Dim CheckBox_Bescheinigung_pr_KV As OLEObject
Dim CheckBox_VWL_Vertrag As OLEObject
Dim CheckBox_Nachweis_Elterneigenschaft As OLEObject
Dim CheckBox_Vertrag_Altersversorgung As OLEObject
Dim CheckBox_Schwerbehindertenausweis As OLEObject
Dim CheckBox_Unterlagen_Sozialkasse_Bau As OLEObject
Dim CheckBox_Arbeitsvertrag_MJ As OLEObject
Dim CheckBox_Lohnsteuerkarte_MJ As OLEObject
Dim CheckBox_SV_Ausweis_MJ As OLEObject
Dim CheckBox_Krankenversicherung_MJ As OLEObject
Dim CheckBox_VWL_Vertrag_MJ As OLEObject
Dim CheckBox_Studienbescheinigung_MJ As OLEObject
Dim CheckBox_Schwerbehindertenausweis_MJ As OLEObject
Dim CheckBox_Unterlagen_Sozialkasse_MJ As OLEObject

Public Sub Steuerelemente_initialisieren()
    Dim shp As Shape

    'Blattschutz und Eingabepr|fffd|fung deaktivieren
    Call Mdl_Hilfsfunktionen.Blattschutz_aufheben("Personalfragebogen")
    Application.EnableEvents = False
    
    With Worksheets("Personalfragebogen")
        For Each shp In .Shapes
            shp.Delete
        Next shp
    End With
    
    Call Mdl_Formatierung.Logo_einfuegen("Personalfragebogen")
    
    With Worksheets("Assistent")
        Call CommandButton_Speichern_erzeugen
        Call CommandButton_Drucken_erzeugen
        Call CommandButton_Export_erzeugen
        If Not .Cells(Geschlecht, 1).Value = "" Then
            Call ComboBox_Geschlecht_erzeugen
        End If
        If Not .Cells(Familienstand, 1).Value = "" Then
            Call ComboBox_Familienstand_erzeugen
        End If
        If Not .Cells(Schwerbehindert, 1).Value = "" Then
            Call ComboBox_Schwerbehindert_erzeugen
        End If
        If Not .Cells(Barzahlung, 1).Value = "" Then
            Call ComboBox_Barzahlung_erzeugen
        End If
        If Not .Cells(Art_der_Beschaeftigung, 1).Value = "" Then
            Call ComboBox_Art_der_Beschaeftigung_erzeugen
        End If
        If Not .Cells(Nebenbeschaeftigung, 1).Value = "" Then
            Call ComboBox_Nebenbeschaeftigung_erzeugen
        End If
        If Not .Cells(Hoechster_Schulabschluss, 1).Value = "" Then
            Call ComboBox_Hoechster_Schulabschluss_erzeugen
        End If
        If Not .Cells(Hoechste_Berufsausbildung, 1).Value = "" Then
            Call ComboBox_Hoechste_Berufsausbildung_erzeugen
        End If
        If Not .Cells(Vertragsform, 1).Value = "" Then
            Call ComboBox_Vertragsform_erzeugen
        End If
        If Not .Cells(Personengruppe, 1).Value = "" Then
            Call ComboBox_Personengruppe_erzeugen
        End If
        If Not .Cells(Status_Beschaeftigung, 1).Value = "" Then
            Call ComboBox_Status_Beschaeftigung_erzeugen
        End If
        If Not .Cells(Art_der_Befristung, 1).Value = "" Then
            Call ComboBox_Art_der_Befristung_erzeugen
        End If
        If Not .Cells(CheckBoxen_Befristung, 1).Value = "" Then
            Call CheckBoxen_Befristung_erzeugen("Personalfragebogen")
        End If
        Call ComboBox_Konfession_erzeugen
        If Not .Cells(Pauschalierung, 1).Value = "" Then
            Call ComboBox_Pauschalierung_erzeugen
        End If
        If Not .Cells(Abwaelzung_an_Arbeitnehmer, 1).Value = "" Then
            Call ComboBox_Abwaelzung_an_Arbeitnehmer_erzeugen
        End If
        If Not .Cells(Elterneigenschaft, 1).Value = "" Then
            Call ComboBox_Elterneigenschaft_erzeugen
        End If
        If Not .Cells(KV_RV, 1).Value = "" And Not .Cells(AV_PV, 1).Value = "" Then
            Call ComboBoxen_KV_RV_erzeugen
            Call ComboBoxen_AV_PV_erzeugen
        End If
        If Not .Cells(Krankenversicherung, 1).Value = "" Then
            Call ComboBox_Krankenversicherung_erzeugen
        End If
        If Not .Cells(RV_Option, 1).Value = "" Then
            Call ComboBox_RV_Option_erzeugen
        End If
        If Not .Cells(weitere_Beschaeftigungen, 1).Value = "" Then
            Call ComboBoxen_weitere_Beschaeftigungen_erzeugen
        End If
    End With
    
    'Blattschutz und Eingebepr|fffd|fung aktivieren
    Call Mdl_Hilfsfunktionen.Blattschutz_setzen("Personalfragebogen")
    Application.EnableEvents = True
End Sub

Public Sub Steuerelemente_auslesen()
    Dim oo As OLEObject
    
    With Worksheets("Assistent")
        For Each oo In Worksheets("Personalfragebogen").OLEObjects
            Select Case (oo.Name)
                Case "cbx_Geschlecht"
                    .Cells(Geschlecht, 6).Value = oo.Object.Value
                Case "cbx_Familienstand"
                    .Cells(Familienstand, 6).Value = oo.Object.Value
                Case "cbx_Schwerbehindert"
                    .Cells(Schwerbehindert, 6).Value = oo.Object.Value
                Case "cbx_Barzahlung"
                    .Cells(Barzahlung, 6).Value = oo.Object.Value
                Case "cbx_Art_der_Beschaeftigung"
                    .Cells(Art_der_Beschaeftigung, 6).Value = oo.Object.Value
                Case "cbx_Nebenbeschaeftigung"
                    .Cells(Nebenbeschaeftigung, 6).Value = oo.Object.Value
                Case "cbx_Schulabschluss"
                    .Cells(Hoechster_Schulabschluss, 6).Value = oo.Object.Value
                Case "cbx_Berufsausbildung"
                    .Cells(Hoechste_Berufsausbildung, 6).Value = oo.Object.Value
                Case "cbx_Vertragsform"
                    .Cells(Vertragsform, 6).Value = oo.Object.Value
                Case "cbx_Personengruppe"
                    .Cells(Personengruppe, 6).Value = oo.Object.Value
                Case "cbx_Status_Beschaeftigung"
                    .Cells(Status_Beschaeftigung, 6).Value = oo.Object.Value
                Case "cbx_Art_der_Befristung"
                    .Cells(Art_der_Befristung, 6).Value = oo.Object.Value
                Case "cbx_Schriftlicher_Abschluss"
                    If oo.Object.Value = True Then
                        .Cells(CheckBoxen_Befristung, 6).Value = "X"
                    End If
                Case "cbx_Weiterbeschaeftigung"
                    If oo.Object.Value = True Then
                        .Cells(CheckBoxen_Befristung, 6).Value = .Cells(CheckBoxen_Befristung, 6).Value & ";X"
                    Else
                        .Cells(CheckBoxen_Befristung, 6).Value = .Cells(CheckBoxen_Befristung, 6).Value & ";"
                    End If
                Case "cbx_Konfession"
                    .Cells(Konfession, 6).Value = oo.Object.Value
                Case "cbx_Pauschalierung"
                    .Cells(Pauschalierung, 6).Value = oo.Object.Value
                Case "cbx_Abwaelzung_an_Arbeitnehmer"
                    .Cells(Abwaelzung_an_Arbeitnehmer, 6).Value = oo.Object.Value
                Case "cbx_Elterneigenschaft"
                    .Cells(Elterneigenschaft, 6).Value = oo.Object.Value
                Case "cbx_KV"
                    .Cells(KV_RV, 6).Value = oo.Object.Value
                Case "cbx_RV"
                    .Cells(KV_RV, 6).Value = .Cells(KV_RV, 6).Value & ";" & oo.Object.Value
                Case "cbx_AV"
                    .Cells(AV_PV, 6).Value = oo.Object.Value
                Case "cbx_PV"
                    .Cells(AV_PV, 6).Value = .Cells(AV_PV, 6).Value & ";" & oo.Object.Value
                Case "cbx_Krankenversicherung"
                    .Cells(Krankenversicherung, 6).Value = oo.Object.Value
                Case "cbx_RV_Option"
                    .Cells(RV_Option, 6).Value = oo.Object.Value
                Case "cbx_weitere_Beschaeftigungen"
                    .Cells(weitere_Beschaeftigungen, 7).Value = oo.Object.Value
                Case "cbx_weitere_Beschaeftigungen_2"
                    .Cells(weitere_Beschaeftigungen_2, 7).Value = oo.Object.Value
                Case "cbx_weitere_Beschaeftigungen_3"
                    .Cells(weitere_Beschaeftigungen_3, 7).Value = oo.Object.Value
                Case "cbx_weitere_Beschaeftigungen_4"
                    .Cells(weitere_Beschaeftigungen_4, 7).Value = oo.Object.Value
                Case "cbx_weitere_Beschaeftigungen_5"
                    .Cells(weitere_Beschaeftigungen_5, 7).Value = oo.Object.Value
            End Select
        Next oo
    End With
End Sub

Private Sub CommandButton_Speichern_erzeugen()
    With Worksheets("Personalfragebogen")
        Set CommandButton_Speichern = .OLEObjects.Add(ClassType:="Forms.CommandButton.1", _
            Left:=437.25, Top:=10.5, Height:=27, Width:=78)
        CommandButton_Speichern.Name = "cb_Speichern"
        With CommandButton_Speichern.Object
            .Caption = "Speichern"
            With .Font
                .Name = "Verdana"
                .Size = 9
                .Bold = False
            End With
        End With
    End With
End Sub

Private Sub CommandButton_Drucken_erzeugen()
    With Worksheets("Personalfragebogen")
        Set CommandButton_Drucken = .OLEObjects.Add(ClassType:="Forms.CommandButton.1", _
                Left:=437.25, Top:=37.5, Height:=27, Width:=78)
        CommandButton_Drucken.Name = "cb_Drucken"
        With CommandButton_Drucken.Object
            .Caption = "Drucken"
            With .Font
                .Name = "Verdana"
                .Size = 9
                .Bold = False
            End With
        End With
    End With
End Sub

Private Sub CommandButton_Export_erzeugen()
    With Worksheets("Personalfragebogen")
        Set CommandButton_Export = .OLEObjects.Add(ClassType:="Forms.CommandButton.1", _
                Left:=515.25, Top:=10.5, Height:=54, Width:=78)
        CommandButton_Export.Name = "cb_Export"
        With CommandButton_Export.Object
            .Caption = "Exportdatei f|fffd|r Lohnsoftware erzeugen"
            .WordWrap = True
            With .Font
                .Name = "Verdana"
                .Size = 9
                .Bold = False
            End With
        End With
    End With
End Sub

Private Sub ComboBox_Geschlecht_erzeugen()
    Dim i As Integer
    Dim str As String
    Dim pos_lft As Double
    Dim pos_top As Double
    
    str = Worksheets("Assistent").Cells(Geschlecht, 5).Value
    pos_lft = Left(str, InStr(str, ";") - 1)
    pos_top = Mid(str, InStr(str, ";") + 1)
    
    With Worksheets("Personalfragebogen")
        Set ComboBox_Geschlecht = .OLEObjects.Add(ClassType:="Forms.Combobox.1", _
                Left:=pos_lft, Top:=pos_top, Height:=ComboBox_Height, Width:=ComboBox_Width)
        ComboBox_Geschlecht.Name = "cbx_Geschlecht"
        With ComboBox_Geschlecht.Object
            .Style = 2
            .SpecialEffect = 0
            .BorderStyle = 1
            With .Font
                .Name = "Verdana"
                .Size = 12
                .Bold = False
            End With
            For i = 1 To Worksheets("Listen").Cells(Rows.count, Lst_Geschlecht).End(xlUp).Row
                .AddItem Worksheets("Listen").Cells(i, Lst_Geschlecht).Value
            Next i
            .Value = Worksheets("Assistent").Cells(Geschlecht, 6).Value
        End With
    End With
End Sub

Private Sub ComboBox_Familienstand_erzeugen()
    Dim i As Integer
    Dim str As String
    Dim pos_lft As Double
    Dim pos_top As Double
    
    str = Worksheets("Assistent").Cells(Familienstand, 5).Value
    pos_lft = Left(str, InStr(str, ";") - 1)
    pos_top = Mid(str, InStr(str, ";") + 1)
    
    With Worksheets("Personalfragebogen")
        Set ComboBox_Familienstand = .OLEObjects.Add(ClassType:="Forms.Combobox.1", _
                Left:=pos_lft, Top:=pos_top, Height:=ComboBox_Height, Width:=ComboBox_Width)
        ComboBox_Familienstand.Name = "cbx_Familienstand"
        With ComboBox_Familienstand.Object
            .Style = 2
            .SpecialEffect = 0
            .BorderStyle = 1
            With .Font
                .Name = "Verdana"
                .Size = 12
                .Bold = False
            End With
            For i = 1 To Worksheets("Listen").Cells(Rows.count, Lst_Familienstand).End(xlUp).Row
                .AddItem Worksheets("Listen").Cells(i, Lst_Familienstand).Value
            Next i
            .Value = Worksheets("Assistent").Cells(Familienstand, 6).Value
        End With
    End With
End Sub

Private Sub ComboBox_Schwerbehindert_erzeugen()
    Dim i As Integer
    Dim str As String
    Dim pos_lft As Double
    Dim pos_top As Double
    
    str = Worksheets("Assistent").Cells(Schwerbehindert, 5).Value
    pos_lft = Left(str, InStr(str, ";") - 1)
    pos_top = Mid(str, InStr(str, ";") + 1)
    
    With Worksheets("Personalfragebogen")
        Set ComboBox_Schwerbehindert = .OLEObjects.Add(ClassType:="Forms.Combobox.1", _
                Left:=pos_lft, Top:=pos_top, Height:=ComboBox_Height, Width:=ComboBox_Width)
        ComboBox_Schwerbehindert.Name = "cbx_Schwerbehindert"
        With ComboBox_Schwerbehindert.Object
            .Style = 2
            .SpecialEffect = 0
            .BorderStyle = 1
            With .Font
                .Name = "Verdana"
                .Size = 12
                .Bold = False
            End With
            For i = 1 To Worksheets("Listen").Cells(Rows.count, Lst_Schwerbehindert).End(xlUp).Row
                .AddItem Worksheets("Listen").Cells(i, Lst_Schwerbehindert).Value
            Next i
            .Value = Worksheets("Assistent").Cells(Schwerbehindert, 6).Value
        End With
    End With
End Sub

Private Sub ComboBox_Barzahlung_erzeugen()
    Dim i As Integer
    Dim str As String
    Dim pos_lft As Double
    Dim pos_top As Double
    
    str = Worksheets("Assistent").Cells(Barzahlung, 5).Value
    pos_lft = Left(str, InStr(str, ";") - 1)
    pos_top = Mid(str, InStr(str, ";") + 1)
    
    With Worksheets("Personalfragebogen")
        Set ComboBox_Barzahlung = .OLEObjects.Add(ClassType:="Forms.Combobox.1", _
                Left:=pos_lft, Top:=pos_top, Height:=ComboBox_Height, Width:=ComboBox_Width)
        ComboBox_Barzahlung.Name = "cbx_Barzahlung"
        With ComboBox_Barzahlung.Object
            .Style = 2
            .SpecialEffect = 0
            .BorderStyle = 1
            With .Font
                .Name = "Verdana"
                .Size = 12
                .Bold = False
            End With
            For i = 1 To Worksheets("Listen").Cells(Rows.count, Lst_Barzahlung).End(xlUp).Row
                .AddItem Worksheets("Listen").Cells(i, Lst_Barzahlung).Value
            Next i
            .Value = Worksheets("Assistent").Cells(Barzahlung, 6).Value
        End With
    End With
End Sub

Private Sub ComboBox_Art_der_Beschaeftigung_erzeugen()
    Dim i As Integer
    Dim str As String
    Dim pos_lft As Double
    Dim pos_top As Double
    
    str = Worksheets("Assistent").Cells(Art_der_Beschaeftigung, 5).Value
    pos_lft = Left(str, InStr(str, ";") - 1)
    pos_top = Mid(str, InStr(str, ";") + 1)
    
    With Worksheets("Personalfragebogen")
        Set ComboBox_Art_der_Beschaeftigung = .OLEObjects.Add(ClassType:="Forms.Combobox.1", _
                Left:=pos_lft, Top:=pos_top, Height:=ComboBox_Height, Width:=ComboBox_Width)
        ComboBox_Art_der_Beschaeftigung.Name = "cbx_Art_der_Beschaeftigung"
        With ComboBox_Art_der_Beschaeftigung.Object
            .Style = 2
            .SpecialEffect = 0
            .BorderStyle = 1
            With .Font
                .Name = "Verdana"
                .Size = 12
                .Bold = False
            End With
            For i = 1 To Worksheets("Listen").Cells(Rows.count, Lst_Art_der_Beschaeftigung).End(xlUp).Row
                .AddItem Worksheets("Listen").Cells(i, Lst_Art_der_Beschaeftigung).Value
            Next i
            .Value = Worksheets("Assistent").Cells(Art_der_Beschaeftigung, 6).Value
        End With
    End With
End Sub

Private Sub ComboBox_Nebenbeschaeftigung_erzeugen()
    Dim i As Integer
    Dim str As String
    Dim pos_lft As Double
    Dim pos_top As Double
    
    str = Worksheets("Assistent").Cells(Nebenbeschaeftigung, 5).Value
    pos_lft = Left(str, InStr(str, ";") - 1)
    pos_top = Mid(str, InStr(str, ";") + 1)
    
    With Worksheets("Personalfragebogen")
        Set ComboBox_Nebenbeschaeftigung = .OLEObjects.Add(ClassType:="Forms.Combobox.1", _
                Left:=pos_lft, Top:=pos_top, Height:=ComboBox_Height, Width:=ComboBox_Width)
        ComboBox_Nebenbeschaeftigung.Name = "cbx_Nebenbeschaeftigung"
        With ComboBox_Nebenbeschaeftigung.Object
            .Style = 2
            .SpecialEffect = 0
            .BorderStyle = 1
            With .Font
                .Name = "Verdana"
                .Size = 12
                .Bold = False
            End With
            For i = 1 To Worksheets("Listen").Cells(Rows.count, Lst_Nebenbeschaeftigung).End(xlUp).Row
                .AddItem Worksheets("Listen").Cells(i, Lst_Nebenbeschaeftigung).Value
            Next i
            .Value = Worksheets("Assistent").Cells(Nebenbeschaeftigung, 6).Value
        End With
    End With
End Sub

Private Sub ComboBox_Hoechster_Schulabschluss_erzeugen()
    Dim i As Integer
    Dim str As String
    Dim pos_lft As Double
    Dim pos_top As Double
    
    str = Worksheets("Assistent").Cells(Hoechster_Schulabschluss, 5).Value
    pos_lft = Left(str, InStr(str, ";") - 1)
    pos_top = Mid(str, InStr(str, ";") + 1)
    
    With Worksheets("Personalfragebogen")
        Set ComboBox_Hoechster_Schulabschluss = .OLEObjects.Add(ClassType:="Forms.Combobox.1", _
                Left:=pos_lft, Top:=pos_top, Height:=ComboBox_Height, Width:=ComboBox_Width)
        ComboBox_Hoechster_Schulabschluss.Name = "cbx_Schulabschluss"
        With ComboBox_Hoechster_Schulabschluss.Object
            .Style = 2
            .SpecialEffect = 0
            .BorderStyle = 1
            With .Font
                .Name = "Verdana"
                .Size = 12
                .Bold = False
            End With
            For i = 1 To Worksheets("Listen").Cells(Rows.count, Lst_Hoechster_Schulabschluss).End(xlUp).Row
                .AddItem Worksheets("Listen").Cells(i, Lst_Hoechster_Schulabschluss).Value
            Next i
            .Value = Worksheets("Assistent").Cells(Hoechster_Schulabschluss, 6).Value
        End With
    End With
End Sub

Private Sub ComboBox_Hoechste_Berufsausbildung_erzeugen()
    Dim i As Integer
    Dim str As String
    Dim pos_lft As Double
    Dim pos_top As Double
    
    str = Worksheets("Assistent").Cells(Hoechste_Berufsausbildung, 5).Value
    pos_lft = Left(str, InStr(str, ";") - 1)
    pos_top = Mid(str, InStr(str, ";") + 1)
    
    With Worksheets("Personalfragebogen")
        Set ComboBox_Hoechste_Berufsausbildung = .OLEObjects.Add(ClassType:="Forms.Combobox.1", _
                Left:=pos_lft, Top:=pos_top, Height:=ComboBox_Height, Width:=ComboBox_Width)
        ComboBox_Hoechste_Berufsausbildung.Name = "cbx_Berufsausbildung"
        With ComboBox_Hoechste_Berufsausbildung.Object
            .Style = 2
            .SpecialEffect = 0
            .BorderStyle = 1
            With .Font
                .Name = "Verdana"
                .Size = 12
                .Bold = False
            End With
            .ListWidth = 410.25
            For i = 1 To Worksheets("Listen").Cells(Rows.count, Lst_Hoechste_Berufsausbildung).End(xlUp).Row
                .AddItem Worksheets("Listen").Cells(i, Lst_Hoechste_Berufsausbildung).Value
            Next i
            .Value = Worksheets("Assistent").Cells(Hoechste_Berufsausbildung, 6).Value
        End With
    End With
End Sub

Private Sub ComboBox_Vertragsform_erzeugen()
    Dim i As Integer
    Dim str As String
    Dim pos_lft As Double
    Dim pos_top As Double
    
    str = Worksheets("Assistent").Cells(Vertragsform, 5).Value
    pos_lft = Left(str, InStr(str, ";") - 1)
    pos_top = Mid(str, InStr(str, ";") + 1)
    
    With Worksheets("Personalfragebogen")
        Set ComboBox_Vertragsform = .OLEObjects.Add(ClassType:="Forms.Combobox.1", _
                Left:=pos_lft, Top:=pos_top, Height:=ComboBox_Height, Width:=ComboBox_Width)
        ComboBox_Vertragsform.Name = "cbx_Vertragsform"
        With ComboBox_Vertragsform.Object
            .Style = 2
            .SpecialEffect = 0
            .BorderStyle = 1
            With .Font
                .Name = "Verdana"
                .Size = 12
                .Bold = False
            End With
            For i = 1 To Worksheets("Listen").Cells(Rows.count, Lst_Vertragsform).End(xlUp).Row
                .AddItem Worksheets("Listen").Cells(i, Lst_Vertragsform).Value
            Next i
            .Value = Worksheets("Assistent").Cells(Vertragsform, 6).Value
        End With
    End With
End Sub

Private Sub ComboBox_Personengruppe_erzeugen()
    Dim i As Integer
    Dim str As String
    Dim pos_lft As Double
    Dim pos_top As Double
    
    str = Worksheets("Assistent").Cells(Personengruppe, 5).Value
    pos_lft = Left(str, InStr(str, ";") - 1)
    pos_top = Mid(str, InStr(str, ";") + 1)
    
    With Worksheets("Personalfragebogen")
        Set ComboBox_Personengruppe = .OLEObjects.Add(ClassType:="Forms.Combobox.1", _
                Left:=pos_lft, Top:=pos_top, Height:=ComboBox_Height, Width:=ComboBox_Width)
        ComboBox_Personengruppe.Name = "cbx_Personengruppe"
        With ComboBox_Personengruppe.Object
            .Style = 2
            .SpecialEffect = 0
            .BorderStyle = 1
            With .Font
                .Name = "Verdana"
                .Size = 12
                .Bold = False
            End With
            .ListWidth = 535.5
            For i = 1 To Worksheets("Listen").Cells(Rows.count, Lst_Personengruppe).End(xlUp).Row
                .AddItem Worksheets("Listen").Cells(i, Lst_Personengruppe).Value
            Next i
            .Value = Worksheets("Assistent").Cells(Personengruppe, 6).Value
        End With
    End With
End Sub

Private Sub ComboBox_Status_Beschaeftigung_erzeugen()
    Dim i As Integer
    Dim str As String
    Dim pos_lft As Double
    Dim pos_top As Double
    
    str = Worksheets("Assistent").Cells(Status_Beschaeftigung, 5).Value
    pos_lft = Left(str, InStr(str, ";") - 1)
    pos_top = Mid(str, InStr(str, ";") + 1)
    
    With Worksheets("Personalfragebogen")
        Set ComboBox_Status_Beschaeftigung = .OLEObjects.Add(ClassType:="Forms.Combobox.1", _
                Left:=pos_lft, Top:=pos_top, Height:=ComboBox_Height, Width:=ComboBox_Width)
        ComboBox_Status_Beschaeftigung.Name = "cbx_Status_Beschaeftigung"
        With ComboBox_Status_Beschaeftigung.Object
            .Style = 2
            .SpecialEffect = 0
            .BorderStyle = 1
            With .Font
                .Name = "Verdana"
                .Size = 12
                .Bold = False
            End With
            For i = 1 To Worksheets("Listen").Cells(Rows.count, Lst_Status_Beschaeftigung).End(xlUp).Row
                .AddItem Worksheets("Listen").Cells(i, Lst_Status_Beschaeftigung).Value
            Next i
            .Value = Worksheets("Assistent").Cells(Status_Beschaeftigung, 6).Value
        End With
    End With
End Sub

Private Sub ComboBox_Art_der_Befristung_erzeugen()
    Dim i As Integer
    Dim str As String
    Dim pos_lft As Double
    Dim pos_top As Double
    
    str = Worksheets("Assistent").Cells(Art_der_Befristung, 5).Value
    pos_lft = Left(str, InStr(str, ";") - 1)
    pos_top = Mid(str, InStr(str, ";") + 1)
    
    With Worksheets("Personalfragebogen")
        Set ComboBox_Art_der_Befristung = .OLEObjects.Add(ClassType:="Forms.Combobox.1", _
                Left:=pos_lft, Top:=pos_top, Height:=ComboBox_Height, Width:=ComboBox_Width)
        ComboBox_Art_der_Befristung.Name = "cbx_Art_der_Befristung"
        With ComboBox_Art_der_Befristung.Object
            .Style = 2
            .SpecialEffect = 0
            .BorderStyle = 1
            With .Font
                .Name = "Verdana"
                .Size = 12
                .Bold = False
            End With
            For i = 1 To Worksheets("Listen").Cells(Rows.count, Lst_Art_der_Befristung).End(xlUp).Row
                .AddItem Worksheets("Listen").Cells(i, Lst_Art_der_Befristung).Value
            Next i
            .Value = Worksheets("Assistent").Cells(Art_der_Befristung, 6).Value
        End With
    End With
End Sub

Public Sub CheckBoxen_Befristung_erzeugen(ws As String)
    Dim i As Integer
    Dim str As String
    Dim pos_lft As Double
    Dim pos_top As Double

    str = Worksheets("Assistent").Cells(CheckBoxen_Befristung, 5).Value
    pos_lft = Left(str, InStr(str, ";") - 1)
    pos_top = Mid(str, InStr(str, ";") + 1) - 15

    With Worksheets(ws)
        Set CheckBox_Schriftlicher_Abschluss = .OLEObjects.Add(ClassType:="Forms.Checkbox.1", _
                Left:=pos_lft, Top:=pos_top, Height:=18, Width:=317.25)
        CheckBox_Schriftlicher_Abschluss.Name = "cbx_Schriftlicher_Abschluss"
        With CheckBox_Schriftlicher_Abschluss.Object
            .Caption = "Schriftlicher Abschluss des befristeten Arbeitsvertrags"
            .SpecialEffect = 0
            With .Font
                .Name = "Verdana"
                .Size = 8
                .Bold = False
            End With
            .TextAlign = 1
            If Not Worksheets("Assistent").Cells(CheckBoxen_Befristung, 6).Value = "" Then
                If Left(Worksheets("Assistent").Cells(CheckBoxen_Befristung, 6).Value, InStr(Worksheets("Assistent").Cells(CheckBoxen_Befristung, 6).Value, ";") - 1) = "X" Then
                    .Value = True
                Else
                    .Value = False
                End If
            Else
                .Value = False
            End If
        End With
        pos_top = pos_top + 14.25

        Set CheckBox_Weiterbeschaeftigung = .OLEObjects.Add(ClassType:="Forms.Checkbox.1", _
                Left:=pos_lft, Top:=pos_top, Height:=27, Width:=317.25)
        CheckBox_Weiterbeschaeftigung.Name = "cbx_Weiterbeschaeftigung"
        With CheckBox_Weiterbeschaeftigung.Object
            .Caption = "Befristete Besch|fffd|ftigung ist f|fffd|r mindestens 2 Monate vorgesehen, mit Aussicht auf Weiterbesch|fffd|ftigung"
            .SpecialEffect = 0
            With .Font
                .Name = "Verdana"
                .Size = 8
                .Bold = False
            End With
            .TextAlign = 1
            If Not Worksheets("Assistent").Cells(CheckBoxen_Befristung, 6).Value = "" Then
                If Mid(Worksheets("Assistent").Cells(CheckBoxen_Befristung, 6).Value, InStr(Worksheets("Assistent").Cells(CheckBoxen_Befristung, 6).Value, ";") + 1) = "X" Then
                    .Value = True
                Else
                    .Value = False
                End If
            Else
                .Value = False
            End If
        End With
    End With
End Sub

Private Sub ComboBox_Konfession_erzeugen()
    Dim i As Integer
    Dim str As String
    Dim pos_lft As Double
    Dim pos_top As Double
    
    str = Worksheets("Assistent").Cells(Konfession, 5).Value
    pos_lft = Left(str, InStr(str, ";") - 1)
    pos_top = Mid(str, InStr(str, ";") + 1)
    
    With Worksheets("Personalfragebogen")
        Set ComboBox_Konfession = .OLEObjects.Add(ClassType:="Forms.Combobox.1", _
                Left:=pos_lft, Top:=pos_top, Height:=ComboBox_Height, Width:=ComboBox_Width)
        ComboBox_Konfession.Name = "cbx_Konfession"
        With ComboBox_Konfession.Object
            .Style = 2
            .SpecialEffect = 0
            .BorderStyle = 1
            With .Font
                .Name = "Verdana"
                .Size = 12
                .Bold = False
            End With
            .ListWidth = 362.25
            For i = 1 To Worksheets("Listen").Cells(Rows.count, Lst_Konfession).End(xlUp).Row
                .AddItem Worksheets("Listen").Cells(i, Lst_Konfession).Value
            Next i
            .Value = Worksheets("Assistent").Cells(Konfession, 6).Value
        End With
    End With
End Sub

Private Sub ComboBox_Pauschalierung_erzeugen()
    Dim i As Integer
    Dim str As String
    Dim pos_lft As Double
    Dim pos_top As Double
    
    str = Worksheets("Assistent").Cells(Pauschalierung, 5).Value
    pos_lft = Left(str, InStr(str, ";") - 1)
    pos_top = Mid(str, InStr(str, ";") + 1)
    
    With Worksheets("Personalfragebogen")
        Set ComboBox_Pauschalierung = .OLEObjects.Add(ClassType:="Forms.Combobox.1", _
                Left:=pos_lft, Top:=pos_top, Height:=ComboBox_Height, Width:=ComboBox_Width)
        ComboBox_Pauschalierung.Name = "cbx_Pauschalierung"
        With ComboBox_Pauschalierung.Object
            .Style = 2
            .SpecialEffect = 0
            .BorderStyle = 1
            With .Font
                .Name = "Verdana"
                .Size = 12
                .Bold = False
            End With
            For i = 1 To Worksheets("Listen").Cells(Rows.count, Lst_Pauschalierung).End(xlUp).Row
                .AddItem Format(Worksheets("Listen").Cells(i, Lst_Pauschalierung).Value, "Percent")
            Next i
            .Value = Worksheets("Assistent").Cells(Pauschalierung, 6).Value
        End With
    End With
End Sub

Private Sub ComboBox_Abwaelzung_an_Arbeitnehmer_erzeugen()
    Dim i As Integer
    Dim str As String
    Dim pos_lft As Double
    Dim pos_top As Double
    
    str = Worksheets("Assistent").Cells(Abwaelzung_an_Arbeitnehmer, 5).Value
    pos_lft = Left(str, InStr(str, ";") - 1)
    pos_top = Mid(str, InStr(str, ";") + 1)
    
    With Worksheets("Personalfragebogen")
        Set ComboBox_Abwaelzung_an_Arbeitnehmer = .OLEObjects.Add(ClassType:="Forms.Combobox.1", _
                Left:=pos_lft, Top:=pos_top, Height:=ComboBox_Height, Width:=ComboBox_Width)
        ComboBox_Abwaelzung_an_Arbeitnehmer.Name = "cbx_Abwaelzung_an_Arbeitnehmer"
        With ComboBox_Abwaelzung_an_Arbeitnehmer.Object
            .Style = 2
            .SpecialEffect = 0
            .BorderStyle = 1
            With .Font
                .Name = "Verdana"
                .Size = 12
                .Bold = False
            End With
            For i = 1 To Worksheets("Listen").Cells(Rows.count, Lst_Abwaelzung_an_Arbeitnehmer).End(xlUp).Row
                .AddItem Worksheets("Listen").Cells(i, Lst_Abwaelzung_an_Arbeitnehmer).Value
            Next i
            .Value = Worksheets("Assistent").Cells(Abwaelzung_an_Arbeitnehmer, 6).Value
        End With
    End With
End Sub

Private Sub ComboBox_Elterneigenschaft_erzeugen()
    Dim i As Integer
    Dim str As String
    Dim pos_lft As Double
    Dim pos_top As Double
    
    str = Worksheets("Assistent").Cells(Elterneigenschaft, 5).Value
    pos_lft = Left(str, InStr(str, ";") - 1)
    pos_top = Mid(str, InStr(str, ";") + 1)
    
    With Worksheets("Personalfragebogen")
        Set ComboBox_Elterneigenschaft = .OLEObjects.Add(ClassType:="Forms.Combobox.1", _
                Left:=pos_lft, Top:=pos_top, Height:=ComboBox_Height, Width:=ComboBox_Width)
        ComboBox_Elterneigenschaft.Name = "cbx_Elterneigenschaft"
        With ComboBox_Elterneigenschaft.Object
            .Style = 2
            .SpecialEffect = 0
            .BorderStyle = 1
            With .Font
                .Name = "Verdana"
                .Size = 12
                .Bold = False
            End With
            For i = 1 To Worksheets("Listen").Cells(Rows.count, Lst_Elterneigenschaft).End(xlUp).Row
                .AddItem Worksheets("Listen").Cells(i, Lst_Elterneigenschaft).Value
            Next i
            .Value = Worksheets("Assistent").Cells(Elterneigenschaft, 6).Value
        End With
    End With
End Sub

Private Sub ComboBoxen_KV_RV_erzeugen()
    Dim i As Integer
    Dim str As String
    Dim pos_top As Double
    
    str = Worksheets("Assistent").Cells(KV_RV, 5).Value
    pos_top = Mid(str, InStr(str, ";") + 1)
    
    With Worksheets("Personalfragebogen")
        Set ComboBox_KV = .OLEObjects.Add(ClassType:="Forms.Combobox.1", _
                Left:=15.75, Top:=pos_top, Height:=ComboBox_Height, Width:=151.5)
        ComboBox_KV.Name = "cbx_KV"
        With ComboBox_KV.Object
            .Style = 2
            .SpecialEffect = 0
            .BorderStyle = 1
            With .Font
                .Name = "Verdana"
                .Size = 12
                .Bold = False
            End With
            .ListWidth = 261
            For i = 1 To Worksheets("Listen").Cells(Rows.count, Lst_KV).End(xlUp).Row
                .AddItem Worksheets("Listen").Cells(i, Lst_KV).Value
            Next i
            If Not Worksheets("Assistent").Cells(KV_RV, 6).Value = "" Then
                .Value = Left(Worksheets("Assistent").Cells(KV_RV, 6).Value, InStr(Worksheets("Assistent").Cells(KV_RV, 6).Value, ";") - 1)
            End If
        End With
        
        Set ComboBox_RV = .OLEObjects.Add(ClassType:="Forms.Combobox.1", _
                Left:=182.25, Top:=pos_top, Height:=ComboBox_Height, Width:=151.5)
        ComboBox_RV.Name = "cbx_RV"
        With ComboBox_RV.Object
            .Style = 2
            .SpecialEffect = 0
            .BorderStyle = 1
            With .Font
                .Name = "Verdana"
                .Size = 12
                .Bold = False
            End With
            .ListWidth = 262.5
            For i = 1 To Worksheets("Listen").Cells(Rows.count, Lst_RV).End(xlUp).Row
                .AddItem Worksheets("Listen").Cells(i, Lst_RV).Value
            Next i
            If Not Worksheets("Assistent").Cells(KV_RV, 6).Value = "" Then
                .Value = Mid(Worksheets("Assistent").Cells(KV_RV, 6).Value, InStr(Worksheets("Assistent").Cells(KV_RV, 6).Value, ";") + 1)
            End If
        End With
    End With
End Sub

Private Sub ComboBoxen_AV_PV_erzeugen()
    Dim i As Integer
    Dim str As String
    Dim pos_top As Double
    
    str = Worksheets("Assistent").Cells(AV_PV, 5).Value
    pos_top = Mid(str, InStr(str, ";") + 1)
    
    With Worksheets("Personalfragebogen")
        Set ComboBox_AV = .OLEObjects.Add(ClassType:="Forms.Combobox.1", _
                Left:=348.75, Top:=pos_top, Height:=ComboBox_Height, Width:=151.5)
        ComboBox_AV.Name = "cbx_AV"
        With ComboBox_AV.Object
            .Style = 2
            .SpecialEffect = 0
            .BorderStyle = 1
            With .Font
                .Name = "Verdana"
                .Size = 12
                .Bold = False
            End With
            .ListWidth = 177.75
            For i = 1 To Worksheets("Listen").Cells(Rows.count, Lst_AV).End(xlUp).Row
                .AddItem Worksheets("Listen").Cells(i, Lst_AV).Value
            Next i
            If Not Worksheets("Assistent").Cells(AV_PV, 6).Value = "" Then
                .Value = Left(Worksheets("Assistent").Cells(AV_PV, 6).Value, InStr(Worksheets("Assistent").Cells(AV_PV, 6).Value, ";") - 1)
            End If
        End With

        Set ComboBox_PV = .OLEObjects.Add(ClassType:="Forms.Combobox.1", _
                Left:=515.25, Top:=pos_top, Height:=ComboBox_Height, Width:=151.5)
        ComboBox_PV.Name = "cbx_PV"
        With ComboBox_PV.Object
            .Style = 2
            .SpecialEffect = 0
            .BorderStyle = 1
            With .Font
                .Name = "Verdana"
                .Size = 12
                .Bold = False
            End With
            .ListWidth = 258.75
            For i = 1 To Worksheets("Listen").Cells(Rows.count, Lst_PV).End(xlUp).Row
                .AddItem Worksheets("Listen").Cells(i, Lst_PV).Value
            Next i
            If Not Worksheets("Assistent").Cells(AV_PV, 6).Value = "" Then
                .Value = Mid(Worksheets("Assistent").Cells(AV_PV, 6).Value, InStr(Worksheets("Assistent").Cells(AV_PV, 6).Value, ";") + 1)
            End If
        End With
    End With
End Sub

Private Sub ComboBox_Krankenversicherung_erzeugen()
    Dim i As Integer
    Dim str As String
    Dim pos_lft As Double
    Dim pos_top As Double
    
    str = Worksheets("Assistent").Cells(Krankenversicherung, 5).Value
    pos_lft = Left(str, InStr(str, ";") - 1)
    pos_top = Mid(str, InStr(str, ";") + 1)
    
    With Worksheets("Personalfragebogen")
        Set ComboBox_Krankenversicherung = .OLEObjects.Add(ClassType:="Forms.Combobox.1", _
                Left:=pos_lft, Top:=pos_top, Height:=ComboBox_Height, Width:=ComboBox_Width)
        ComboBox_Krankenversicherung.Name = "cbx_Krankenversicherung"
        With ComboBox_Krankenversicherung.Object
            .Style = 2
            .SpecialEffect = 0
            .BorderStyle = 1
            With .Font
                .Name = "Verdana"
                .Size = 12
                .Bold = False
            End With
            For i = 1 To Worksheets("Listen").Cells(Rows.count, Lst_Krankenversicherung).End(xlUp).Row
                .AddItem Worksheets("Listen").Cells(i, Lst_Krankenversicherung).Value
            Next i
            .Value = Worksheets("Assistent").Cells(Krankenversicherung, 6).Value
        End With
    End With
End Sub

Private Sub ComboBox_RV_Option_erzeugen()
    Dim i As Integer
    Dim str As String
    Dim pos_lft As Double
    Dim pos_top As Double
    
    str = Worksheets("Assistent").Cells(RV_Option, 5).Value
    pos_lft = ComboBox_Left_Spalte_2
    pos_top = Mid(str, InStr(str, ";") + 1)
    
    With Worksheets("Personalfragebogen")
        Set ComboBox_RV_Option = .OLEObjects.Add(ClassType:="Forms.Combobox.1", _
                Left:=pos_lft, Top:=pos_top, Height:=ComboBox_Height, Width:=ComboBox_Width)
        ComboBox_RV_Option.Name = "cbx_RV_Option"
        With ComboBox_RV_Option.Object
            .Style = 2
            .SpecialEffect = 0
            .BorderStyle = 1
            With .Font
                .Name = "Verdana"
                .Size = 12
                .Bold = False
            End With
            For i = 1 To Worksheets("Listen").Cells(Rows.count, Lst_RV_Option).End(xlUp).Row
                .AddItem Worksheets("Listen").Cells(i, Lst_RV_Option).Value
            Next i
            .Value = Worksheets("Assistent").Cells(RV_Option, 6).Value
        End With
    End With
End Sub

Private Sub ComboBoxen_weitere_Beschaeftigungen_erzeugen()
    Dim i As Integer
    Dim pos_top As Double
    
    pos_top = Worksheets("Assistent").Cells(weitere_Beschaeftigungen, 5).Value
    With Worksheets("Personalfragebogen")
        Set ComboBox_weitere_Beschaeftigungen = .OLEObjects.Add(ClassType:="Forms.Combobox.1", _
                Left:=404.25, Top:=pos_top, Height:=ComboBox_Height, Width:=151.5)
        ComboBox_weitere_Beschaeftigungen.Name = "cbx_weitere_Beschaeftigungen"
        With ComboBox_weitere_Beschaeftigungen.Object
            .Style = 2
            .SpecialEffect = 0
            .BorderStyle = 1
            With .Font
                .Name = "Verdana"
                .Size = 12
                .Bold = False
            End With
            .ListWidth = 183
            For i = 1 To Worksheets("Listen").Cells(Rows.count, Lst_weitere_Beschaeftigungen).End(xlUp).Row
                .AddItem Worksheets("Listen").Cells(i, Lst_weitere_Beschaeftigungen).Value
            Next i
            .Value = Worksheets("Assistent").Cells(weitere_Beschaeftigungen, 7).Value
        End With
    End With

    If Not Worksheets("Assistent").Cells(weitere_Beschaeftigungen_2, 1).Value = "" Then
        pos_top = Worksheets("Assistent").Cells(weitere_Beschaeftigungen_2, 5).Value
        With Worksheets("Personalfragebogen")
            Set ComboBox_weitere_Beschaeftigungen_2 = .OLEObjects.Add(ClassType:="Forms.Combobox.1", _
                    Left:=404.25, Top:=pos_top, Height:=ComboBox_Height, Width:=151.5)
            ComboBox_weitere_Beschaeftigungen_2.Name = "cbx_weitere_Beschaeftigungen_2"
            With ComboBox_weitere_Beschaeftigungen_2.Object
                .Style = 2
                .SpecialEffect = 0
                .BorderStyle = 1
                With .Font
                    .Name = "Verdana"
                    .Size = 12
                    .Bold = False
                End With
                .ListWidth = 183
                For i = 1 To Worksheets("Listen").Cells(Rows.count, Lst_weitere_Beschaeftigungen).End(xlUp).Row
                    .AddItem Worksheets("Listen").Cells(i, Lst_weitere_Beschaeftigungen).Value
                Next i
                .Value = Worksheets("Assistent").Cells(weitere_Beschaeftigungen_2, 7).Value
            End With
        End With
    End If
    
    If Not Worksheets("Assistent").Cells(weitere_Beschaeftigungen_3, 1).Value = "" Then
        pos_top = Worksheets("Assistent").Cells(weitere_Beschaeftigungen_3, 5).Value
        With Worksheets("Personalfragebogen")
            Set ComboBox_weitere_Beschaeftigungen_3 = .OLEObjects.Add(ClassType:="Forms.Combobox.1", _
                    Left:=404.25, Top:=pos_top, Height:=ComboBox_Height, Width:=151.5)
            ComboBox_weitere_Beschaeftigungen_3.Name = "cbx_weitere_Beschaeftigungen_3"
            With ComboBox_weitere_Beschaeftigungen_3.Object
                .Style = 2
                .SpecialEffect = 0
                .BorderStyle = 1
                With .Font
                    .Name = "Verdana"
                    .Size = 12
                    .Bold = False
                End With
                .ListWidth = 183
                For i = 1 To Worksheets("Listen").Cells(Rows.count, Lst_weitere_Beschaeftigungen).End(xlUp).Row
                    .AddItem Worksheets("Listen").Cells(i, Lst_weitere_Beschaeftigungen).Value
                Next i
                .Value = Worksheets("Assistent").Cells(weitere_Beschaeftigungen_3, 7).Value
            End With
        End With
    End If
    
    If Not Worksheets("Assistent").Cells(weitere_Beschaeftigungen_4, 1).Value = "" Then
        pos_top = Worksheets("Assistent").Cells(weitere_Beschaeftigungen_4, 5).Value
        With Worksheets("Personalfragebogen")
            Set ComboBox_weitere_Beschaeftigungen_4 = .OLEObjects.Add(ClassType:="Forms.Combobox.1", _
                    Left:=404.25, Top:=pos_top, Height:=ComboBox_Height, Width:=151.5)
            ComboBox_weitere_Beschaeftigungen_4.Name = "cbx_weitere_Beschaeftigungen_4"
            With ComboBox_weitere_Beschaeftigungen_4.Object
                .Style = 2
                .SpecialEffect = 0
                .BorderStyle = 1
                With .Font
                    .Name = "Verdana"
                    .Size = 12
                    .Bold = False
                End With
                .ListWidth = 183
                For i = 1 To Worksheets("Listen").Cells(Rows.count, Lst_weitere_Beschaeftigungen).End(xlUp).Row
                    .AddItem Worksheets("Listen").Cells(i, Lst_weitere_Beschaeftigungen).Value
                Next i
                .Value = Worksheets("Assistent").Cells(weitere_Beschaeftigungen_4, 7).Value
            End With
        End With
    End If
    
    If Not Worksheets("Assistent").Cells(weitere_Beschaeftigungen_5, 1).Value = "" Then
        pos_top = Worksheets("Assistent").Cells(weitere_Beschaeftigungen_5, 5).Value
        With Worksheets("Personalfragebogen")
            Set ComboBox_weitere_Beschaeftigungen_5 = .OLEObjects.Add(ClassType:="Forms.Combobox.1", _
                    Left:=404.25, Top:=pos_top, Height:=ComboBox_Height, Width:=151.5)
            ComboBox_weitere_Beschaeftigungen_5.Name = "cbx_weitere_Beschaeftigungen_5"
            With ComboBox_weitere_Beschaeftigungen_5.Object
                .Style = 2
                .SpecialEffect = 0
                .BorderStyle = 1
                With .Font
                    .Name = "Verdana"
                    .Size = 12
                    .Bold = False
                End With
                .ListWidth = 183
                For i = 1 To Worksheets("Listen").Cells(Rows.count, Lst_weitere_Beschaeftigungen).End(xlUp).Row
                    .AddItem Worksheets("Listen").Cells(i, Lst_weitere_Beschaeftigungen).Value
                Next i
                .Value = Worksheets("Assistent").Cells(weitere_Beschaeftigungen_5, 7).Value
            End With
        End With
    End If
End Sub

Public Sub CheckBoxen_Angaben_zu_den_Arbeitspapieren_erzeugen()
    Dim i As Integer
    Dim str As String
    Dim pos_top As Double

    str = Worksheets("Verwaltung").Cells(Angaben_zu_den_Arbeitspapieren, 3).Value
    pos_top = str

    With Worksheets("Druckansicht")
        Set CheckBox_Arbeitsvertrag = .OLEObjects.Add(ClassType:="Forms.Checkbox.1", _
                Left:=CheckBox_Left_Spalte_1, Top:=pos_top, Height:=18.75, Width:=84.75)
        CheckBox_Arbeitsvertrag.Name = "cbx_Arbeitsvertrag"
        With CheckBox_Arbeitsvertrag.Object
            .Caption = "liegt vor"
            .SpecialEffect = 0
            With .Font
                .Name = "Verdana"
                .Size = 8
                .Bold = False
            End With
            .TextAlign = 1
        End With
        pos_top = pos_top + 21

        Set CheckBox_Lohnsteuerkarte = .OLEObjects.Add(ClassType:="Forms.Checkbox.1", _
                Left:=CheckBox_Left_Spalte_1, Top:=pos_top, Height:=18.75, Width:=84.75)
        CheckBox_Arbeitsvertrag.Name = "cbx_Lohnsteuerkarte"
        With CheckBox_Lohnsteuerkarte.Object
            .Caption = "liegt vor"
            .SpecialEffect = 0
            With .Font
                .Name = "Verdana"
                .Size = 8
                .Bold = False
            End With
            .TextAlign = 1
        End With
        pos_top = pos_top + 21

        Set CheckBox_SV_Ausweis = .OLEObjects.Add(ClassType:="Forms.Checkbox.1", _
                Left:=CheckBox_Left_Spalte_1, Top:=pos_top, Height:=18.75, Width:=84.75)
        CheckBox_SV_Ausweis.Name = "cbx_SV_Ausweis"
        With CheckBox_SV_Ausweis.Object
            .Caption = "liegt vor"
            .SpecialEffect = 0
            With .Font
                .Name = "Verdana"
                .Size = 8
                .Bold = False
            End With
            .TextAlign = 1
        End With
        pos_top = pos_top + 21

        Set CheckBox_Mitgliedsbescheinigung_KK = .OLEObjects.Add(ClassType:="Forms.Checkbox.1", _
                Left:=CheckBox_Left_Spalte_1, Top:=pos_top, Height:=18.75, Width:=84.75)
        CheckBox_Mitgliedsbescheinigung_KK.Name = "cbx_Mitgliedsbescheinigung_KK"
        With CheckBox_Mitgliedsbescheinigung_KK.Object
            .Caption = "liegt vor"
            .SpecialEffect = 0
            With .Font
                .Name = "Verdana"
                .Size = 8
                .Bold = False
            End With
            .TextAlign = 1
        End With
        pos_top = pos_top + 21
        
        Set CheckBox_Bescheinigung_pr_KV = .OLEObjects.Add(ClassType:="Forms.Checkbox.1", _
                Left:=CheckBox_Left_Spalte_1, Top:=pos_top, Height:=18.75, Width:=84.75)
        CheckBox_Bescheinigung_pr_KV.Name = "cbx_Bescheinigung_pr_KV"
        With CheckBox_Bescheinigung_pr_KV.Object
            .Caption = "liegt vor"
            .SpecialEffect = 0
            With .Font
                .Name = "Verdana"
                .Size = 8
                .Bold = False
            End With
            .TextAlign = 1
        End With
        pos_top = str

        Set CheckBox_VWL_Vertrag = .OLEObjects.Add(ClassType:="Forms.Checkbox.1", _
                Left:=CheckBox_Left_Spalte_2, Top:=pos_top, Height:=18.75, Width:=84.75)
        CheckBox_VWL_Vertrag.Name = "cbx_VWL_Vertrag"
        With CheckBox_VWL_Vertrag.Object
            .Caption = "liegt vor"
            .SpecialEffect = 0
            With .Font
                .Name = "Verdana"
                .Size = 8
                .Bold = False
            End With
            .TextAlign = 1
        End With
        pos_top = pos_top + 21

        Set CheckBox_Nachweis_Elterneigenschaft = .OLEObjects.Add(ClassType:="Forms.Checkbox.1", _
                Left:=CheckBox_Left_Spalte_2, Top:=pos_top, Height:=18.75, Width:=84.75)
        CheckBox_Nachweis_Elterneigenschaft.Name = "cbx_Nachweis_Elterneigenschaft"
        With CheckBox_Nachweis_Elterneigenschaft.Object
            .Caption = "liegt vor"
            .SpecialEffect = 0
            With .Font
                .Name = "Verdana"
                .Size = 8
                .Bold = False
            End With
            .TextAlign = 1
        End With
        pos_top = pos_top + 21

        Set CheckBox_Vertrag_Altersversorgung = .OLEObjects.Add(ClassType:="Forms.Checkbox.1", _
                Left:=CheckBox_Left_Spalte_2, Top:=pos_top, Height:=18.75, Width:=84.75)
        CheckBox_Vertrag_Altersversorgung.Name = "cbx_Vertrag_Altersversorgung"
        With CheckBox_Vertrag_Altersversorgung.Object
            .Caption = "liegt vor"
            .SpecialEffect = 0
            With .Font
                .Name = "Verdana"
                .Size = 8
                .Bold = False
            End With
            .TextAlign = 1
        End With
        pos_top = pos_top + 21

        Set CheckBox_Schwerbehindertenausweis = .OLEObjects.Add(ClassType:="Forms.Checkbox.1", _
                Left:=CheckBox_Left_Spalte_2, Top:=pos_top, Height:=18.75, Width:=84.75)
        CheckBox_Schwerbehindertenausweis.Name = "cbx_Schwerbehindertenausweis"
        With CheckBox_Schwerbehindertenausweis.Object
            .Caption = "liegt vor"
            .SpecialEffect = 0
            With .Font
                .Name = "Verdana"
                .Size = 8
                .Bold = False
            End With
            .TextAlign = 1
        End With
        pos_top = pos_top + 21

        Set CheckBox_Unterlagen_Sozialkasse_Bau = .OLEObjects.Add(ClassType:="Forms.Checkbox.1", _
                Left:=CheckBox_Left_Spalte_2, Top:=pos_top, Height:=18.75, Width:=84.75)
        CheckBox_Unterlagen_Sozialkasse_Bau.Name = "cbx_Unterlagen_Sozialkasse"
        With CheckBox_Unterlagen_Sozialkasse_Bau.Object
            .Caption = "liegt vor"
            .SpecialEffect = 0
            With .Font
                .Name = "Verdana"
                .Size = 8
                .Bold = False
            End With
            .TextAlign = 1
        End With
    End With
End Sub

Public Sub CheckBoxen_Angaben_zu_den_Arbeitspapieren_Minijob_erzeugen()
    Dim i As Integer
    Dim str As String
    Dim pos_top As Double

    str = Worksheets("Verwaltung").Cells(Angaben_zu_den_Arbeitspapieren, 3).Value
    pos_top = str
    
    With Worksheets("Druckansicht")
        Set CheckBox_Arbeitsvertrag_MJ = .OLEObjects.Add(ClassType:="Forms.Checkbox.1", _
                Left:=CheckBox_Left_Spalte_1, Top:=pos_top, Height:=18.75, Width:=84.75)
        CheckBox_Arbeitsvertrag_MJ.Name = "cbx_Arbeitsvertrag_MJ"
        With CheckBox_Arbeitsvertrag_MJ.Object
            .Caption = "liegt vor"
            .SpecialEffect = 0
            With .Font
                .Name = "Verdana"
                .Size = 8
                .Bold = False
            End With
            .TextAlign = 1
        End With
        pos_top = pos_top + 26.25
        
        Set CheckBox_Lohnsteuerkarte_MJ = .OLEObjects.Add(ClassType:="Forms.Checkbox.1", _
                Left:=CheckBox_Left_Spalte_1, Top:=pos_top, Height:=18.75, Width:=84.75)
        CheckBox_Lohnsteuerkarte_MJ.Name = "cbx_Lohnsteuerkarte_MJ"
        With CheckBox_Lohnsteuerkarte_MJ.Object
            .Caption = "liegt vor"
            .SpecialEffect = 0
            With .Font
                .Name = "Verdana"
                .Size = 8
                .Bold = False
            End With
            .TextAlign = 1
        End With
        pos_top = pos_top + 36.75
        
        Set CheckBox_SV_Ausweis_MJ = .OLEObjects.Add(ClassType:="Forms.Checkbox.1", _
                Left:=CheckBox_Left_Spalte_1, Top:=pos_top, Height:=18.75, Width:=84.75)
        CheckBox_SV_Ausweis_MJ.Name = "cbx_SV_Ausweis_MJ"
        With CheckBox_SV_Ausweis_MJ.Object
            .Caption = "liegt vor"
            .SpecialEffect = 0
            With .Font
                .Name = "Verdana"
                .Size = 8
                .Bold = False
            End With
            .TextAlign = 1
        End With
        pos_top = pos_top + 21
        
        Set CheckBox_Krankenversicherung_MJ = .OLEObjects.Add(ClassType:="Forms.Checkbox.1", _
                Left:=CheckBox_Left_Spalte_1, Top:=pos_top, Height:=18.75, Width:=84.75)
        CheckBox_Krankenversicherung_MJ.Name = "cbx_Krankenversicherung_MJ"
        With CheckBox_Krankenversicherung_MJ.Object
            .Caption = "liegt vor"
            .SpecialEffect = 0
            With .Font
                .Name = "Verdana"
                .Size = 8
                .Bold = False
            End With
            .TextAlign = 1
        End With
        pos_top = str
        
        Set CheckBox_VWL_Vertrag_MJ = .OLEObjects.Add(ClassType:="Forms.Checkbox.1", _
                Left:=CheckBox_Left_Spalte_2, Top:=pos_top, Height:=18.75, Width:=84.75)
        CheckBox_VWL_Vertrag_MJ.Name = "cbx_VWL_Vertrag_MJ"
        With CheckBox_VWL_Vertrag_MJ.Object
            .Caption = "liegt vor"
            .SpecialEffect = 0
            With .Font
                .Name = "Verdana"
                .Size = 8
                .Bold = False
            End With
            .TextAlign = 1
        End With
        pos_top = pos_top + 21
        
        Set CheckBox_Studienbescheinigung_MJ = .OLEObjects.Add(ClassType:="Forms.Checkbox.1", _
                Left:=CheckBox_Left_Spalte_2, Top:=pos_top, Height:=18.75, Width:=84.75)
        CheckBox_Studienbescheinigung_MJ.Name = "cbx_Studienbescheinigung_MJ"
        With CheckBox_Studienbescheinigung_MJ.Object
            .Caption = "liegt vor"
            .SpecialEffect = 0
            With .Font
                .Name = "Verdana"
                .Size = 8
                .Bold = False
            End With
            .TextAlign = 1
        End With
        pos_top = pos_top + 21
        
        Set CheckBox_Schwerbehindertenausweis_MJ = .OLEObjects.Add(ClassType:="Forms.Checkbox.1", _
                Left:=CheckBox_Left_Spalte_2, Top:=pos_top, Height:=18.75, Width:=84.75)
        CheckBox_Schwerbehindertenausweis_MJ.Name = "cbx_Schwerbehindertenausweis_MJ"
        With CheckBox_Schwerbehindertenausweis_MJ.Object
            .Caption = "hat vorgelegen"
            .SpecialEffect = 0
            With .Font
                .Name = "Verdana"
                .Size = 8
                .Bold = False
            End With
            .TextAlign = 1
        End With
        pos_top = pos_top + 21

        Set CheckBox_Unterlagen_Sozialkasse_MJ = .OLEObjects.Add(ClassType:="Forms.Checkbox.1", _
                Left:=CheckBox_Left_Spalte_2, Top:=pos_top, Height:=18.75, Width:=84.75)
        CheckBox_Unterlagen_Sozialkasse_MJ.Name = "cbx_Unterlagen_Sozialkasse_MJ"
        With CheckBox_Unterlagen_Sozialkasse_MJ.Object
            .Caption = "liegt vor"
            .SpecialEffect = 0
            With .Font
                .Name = "Verdana"
                .Size = 8
                .Bold = False
            End With
            .TextAlign = 1
        End With
    End With
End Sub
Attribute VB_Name = "PFB"
Attribute VB_Base = "0{00020819-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Option Explicit

Private Sub Workbook_Activate()
    With Worksheets("Verwaltung")
        If ThisWorkbook.Name = "Vorlage.xls" Or .Cells(Initialisierung_durchgefuehrt, 2).Value = "X" _
            And .Cells(Fragebogen_erzeugt, 2).Value = "X" Then
            Call Mdl_Hilfsfunktionen.Ansichtsoptionen
        End If
    End With
    
    Application.OnKey "^p", "Druckaufbereitung"
    Application.OnKey "^v", "Einfg_Aktion"
    Application.OnKey "+{Insert}", "Einfg_Aktion"
    Application.OnKey "{TAB}", "'Tab_Aktion 1'"
    Application.OnKey "+{TAB}", "'Tab_Aktion -1'"
End Sub

Private Sub Workbook_Deactivate()
    With Worksheets("Verwaltung")
        If ThisWorkbook.Name = "Vorlage.xls" Or .Cells(Initialisierung_durchgefuehrt, 2).Value = "X" _
            And .Cells(Fragebogen_erzeugt, 2).Value = "X" Then
            Call Mdl_Hilfsfunktionen.Ansichtsoptionen_zuruecksetzen
        End If
    End With
    
    Application.OnKey "^p"
    Application.OnKey "^v"
    Application.OnKey "+{Insert}"
    Application.OnKey "{TAB}"
    Application.OnKey "+{TAB}"
End Sub

Private Sub Workbook_Open()

    'Beginn Geschwindigkeitsoptimierung ****************
    Dim calcMode As XlCalculation, updateMode As Boolean
    calcMode = Application.Calculation
    updateMode = Application.ScreenUpdating
    Application.Calculation = xlManual
    Application.ScreenUpdating = False
    '***************************************************

    'Pr|fffd|fen ob die Vorlage oder ein erzeugter Fragebogen ge|fffd|ffnet wurde
    If Not ThisWorkbook.Name = "Vorlage.xls" Then
        If Worksheets("Verwaltung").Cells(Gewaehlter_Fragebogen, 2).Value = "GfB/Minijob" Then
            Minijob = True
        Else
            Minijob = False
        End If
        If Worksheets("Verwaltung").Cells(Initialisierung_durchgefuehrt, 2).Value = "X" Then
            If Worksheets("Verwaltung").Cells(Fragebogen_erzeugt, 2).Value = "" Then
                Call mdl_Main.Fragebogen_erzeugen
            Else
                Call Mdl_Steuerelemente.Steuerelemente_initialisieren
                Call Mdl_Steuerelemente.Steuerelemente_initialisieren
                Call mdl_Main.Gespeicherte_Werte_eintragen
            End If
        End If
    End If

    'Ende Geschwindigkeitsoptimierung ******************
    Application.Calculation = calcMode
    Application.ScreenUpdating = updateMode
    Application.Calculate
    '***************************************************

End Sub
Attribute VB_Name = "mdl_Datenfelder"
Option Explicit
Public Const Standard_Abstand = 7
Public Const Abstand_Abschnittsueberschrift = 3
Public Const Abstand_Abschnittsueberschrift_Zusatztext = 4
Public Const Abstand_Absatz = 8
Public Position As Integer
Dim Spalte As Integer
Dim Assistent_Anfang As Integer
Dim Assistent_Ende As Integer

Public Sub Block_Allgemein()
    Dim i As Integer
    
    If Not Worksheets("Verwaltung").Cells(Blk_Allgemein, 1).Value = "" Then
        With Worksheets("Assistent")
            'Datenfelder anlegen
            .Cells(Firma, 4).Value = Datenfeld_Firma
            Position = Position + 16
            .Cells(Name_des_Mitarbeiters_Personalnummer, 4).Value = Datenfeld_Name_des_Mitarbeiters_Personalnummer
            Position = Position + Abstand_Absatz
        End With
    End If
End Sub

Public Sub Block_Persoenliche_Angaben()
    Dim i As Integer
    
    If Not Worksheets("Verwaltung").Cells(Blk_Persoenliche_Angaben, 1).Value = "" Then
        With Worksheets("Assistent")
            Assistent_Anfang = Familienname
            Assistent_Ende = Arbeitnehmernummer
            Spalte = 1
            
            '|fffd|berschrift f|fffd|r den Abschnitt einf|fffd|gen
            Worksheets("Verwaltung").Cells(Blk_Persoenliche_Angaben, 2).Value = Mdl_Formatierung.Abschnittsueberschrift_einfuegen("Pers|fffd|nliche Angaben")
            Position = Position + Abstand_Abschnittsueberschrift
            
            'Datenfelder anlegen
            For i = Assistent_Anfang To Assistent_Ende
                If Not .Cells(i, 1).Value = "" Then
                    .Cells(i, 4).Value = Datenfeld(.Cells(i, 1).Value, Spalte, .Cells(i, 2).Value, .Cells(i, 3).Value)
                    If .Cells(i, 3).Value = "True" Then
                        If Spalte = 1 Then
                            .Cells(i, 5).Value = Mdl_Steuerelemente.ComboBox_Left_Spalte_1 & ";" & Mdl_Steuerelemente.Position
                        ElseIf Spalte = 2 Then
                            .Cells(i, 5).Value = Mdl_Steuerelemente.ComboBox_Left_Spalte_2 & ";" & Mdl_Steuerelemente.Position
                        End If
                    End If
                    If Spalte = 2 Then
                        Spalte = 1
                        Position = Position + Standard_Abstand
                        Mdl_Steuerelemente.Position = Mdl_Steuerelemente.Position + Mdl_Steuerelemente.Standard_Abstand_ComboBox
                    Else
                        Spalte = 2
                    End If
                End If
            Next i
            If Spalte = 2 Then
                Position = Position + Abstand_Absatz
                Mdl_Steuerelemente.Position = Mdl_Steuerelemente.Position + Mdl_Steuerelemente.Abstand_Absatz_ComboBox
            Else
                Position = Position + 1
                Mdl_Steuerelemente.Position = Mdl_Steuerelemente.Position + Mdl_Steuerelemente.Abstand_Absatz_ComboBox - Mdl_Steuerelemente.Standard_Abstand_ComboBox
            End If
        End With
    End If
End Sub

Public Sub Block_Beschaeftigung()
    Dim i As Integer
    
    If Not Worksheets("Verwaltung").Cells(Blk_Beschaeftigung, 1).Value = "" Then
        With Worksheets("Assistent")
            Assistent_Anfang = Eintrittsdatum_Ersteintrittsdatum
            If Minijob Then
                Assistent_Ende = Status_Beschaeftigung
            Else
                Assistent_Ende = Personengruppe
            End If
            Spalte = 1
        
            '|fffd|berschrift f|fffd|r den Abschnitt einf|fffd|gen
            Worksheets("Verwaltung").Cells(Blk_Beschaeftigung, 2).Value = Mdl_Formatierung.Abschnittsueberschrift_einfuegen("Besch|fffd|ftigung")
            Position = Position + Abstand_Abschnittsueberschrift
            
            'Datenfelder anlegen
            For i = Assistent_Anfang To Assistent_Ende
                If Not .Cells(i, 1).Value = "" Then
                    .Cells(i, 4).Value = Datenfeld(.Cells(i, 1).Value, Spalte, .Cells(i, 2).Value, .Cells(i, 3).Value)
                    If .Cells(i, 3).Value = "True" Then
                        If Spalte = 1 Then
                            .Cells(i, 5).Value = Mdl_Steuerelemente.ComboBox_Left_Spalte_1 & ";" & Mdl_Steuerelemente.Position
                        ElseIf Spalte = 2 Then
                            .Cells(i, 5).Value = Mdl_Steuerelemente.ComboBox_Left_Spalte_2 & ";" & Mdl_Steuerelemente.Position
                        End If
                    End If
                    If Spalte = 2 Then
                        Spalte = 1
                        Position = Position + Standard_Abstand
                        Mdl_Steuerelemente.Position = Mdl_Steuerelemente.Position + Mdl_Steuerelemente.Standard_Abstand_ComboBox
                    Else
                        Spalte = 2
                    End If
                End If
            Next i
            If Spalte = 2 Then
                Position = Position + Abstand_Absatz
                Mdl_Steuerelemente.Position = Mdl_Steuerelemente.Position + Mdl_Steuerelemente.Abstand_Absatz_ComboBox
            Else
                Position = Position + 1
                Mdl_Steuerelemente.Position = Mdl_Steuerelemente.Position + Mdl_Steuerelemente.Abstand_Absatz_ComboBox - Mdl_Steuerelemente.Standard_Abstand_ComboBox
            End If
        End With
    End If
End Sub

Public Sub Block_Befristung()
    Dim i As Integer
    
    If Not Worksheets("Verwaltung").Cells(Blk_Befristung, 1).Value = "" Then
        With Worksheets("Assistent")
            Assistent_Anfang = Art_der_Befristung
            Assistent_Ende = Abschluss_Arbeitsvertrag_am
            Spalte = 1
        
            '|fffd|berschrift f|fffd|r den Abschnitt einf|fffd|gen
            Worksheets("Verwaltung").Cells(Blk_Befristung, 2).Value = Mdl_Formatierung.Abschnittsueberschrift_einfuegen("Befristung")
            Position = Position + Abstand_Abschnittsueberschrift
            
            'Datenfelder anlegen
            For i = Assistent_Anfang To Assistent_Ende
                If Not .Cells(i, 1).Value = "" Then
                    .Cells(i, 4).Value = Datenfeld(.Cells(i, 1).Value, Spalte, .Cells(i, 2).Value, .Cells(i, 3).Value)
                    If .Cells(i, 3).Value = "True" Then
                        If Spalte = 1 Then
                            .Cells(i, 5).Value = Mdl_Steuerelemente.ComboBox_Left_Spalte_1 & ";" & Mdl_Steuerelemente.Position
                        ElseIf Spalte = 2 Then
                            .Cells(i, 5).Value = Mdl_Steuerelemente.ComboBox_Left_Spalte_2 & ";" & Mdl_Steuerelemente.Position
                        End If
                    End If
                    If Spalte = 2 Then
                        Spalte = 1
                        Position = Position + Standard_Abstand
                        Mdl_Steuerelemente.Position = Mdl_Steuerelemente.Position + Mdl_Steuerelemente.Standard_Abstand_ComboBox
                    Else
                        Spalte = 2
                    End If
                End If
            Next i
            If Spalte = 2 Then
                Position = Position + Abstand_Absatz
                Mdl_Steuerelemente.Position = Mdl_Steuerelemente.Position + Mdl_Steuerelemente.Abstand_Absatz_ComboBox
            Else
                Position = Position + 1
                Mdl_Steuerelemente.Position = Mdl_Steuerelemente.Position + Mdl_Steuerelemente.Abstand_Absatz_ComboBox - Mdl_Steuerelemente.Standard_Abstand_ComboBox
            End If
        End With
    End If
End Sub

Public Sub Block_Steuer()
    Dim i As Integer
    
    If Not Worksheets("Verwaltung").Cells(Blk_Steuer, 1).Value = "" Then
        With Worksheets("Assistent")
            Assistent_Anfang = Steuerklasse_Faktor
            If Minijob Then
                Assistent_Ende = Abwaelzung_an_Arbeitnehmer
            Else
                Assistent_Ende = Konfession
            End If
            Spalte = 1
        
            '|fffd|berschrift f|fffd|r den Abschnitt einf|fffd|gen
            Worksheets("Verwaltung").Cells(Blk_Steuer, 2).Value = Mdl_Formatierung.Abschnittsueberschrift_einfuegen("Steuer")
            Position = Position + Abstand_Abschnittsueberschrift
            
            'Datenfelder anlegen
            For i = Assistent_Anfang To Assistent_Ende
                If Not .Cells(i, 1).Value = "" Then
                    .Cells(i, 4).Value = Datenfeld(.Cells(i, 1).Value, Spalte, .Cells(i, 2).Value, .Cells(i, 3).Value)
                    If .Cells(i, 3).Value = "True" Then
                        If Spalte = 1 Then
                            .Cells(i, 5).Value = Mdl_Steuerelemente.ComboBox_Left_Spalte_1 & ";" & Mdl_Steuerelemente.Position
                        ElseIf Spalte = 2 Then
                            .Cells(i, 5).Value = Mdl_Steuerelemente.ComboBox_Left_Spalte_2 & ";" & Mdl_Steuerelemente.Position
                        End If
                    End If
                    If Spalte = 2 Then
                        Spalte = 1
                        Position = Position + Standard_Abstand
                        Mdl_Steuerelemente.Position = Mdl_Steuerelemente.Position + Mdl_Steuerelemente.Standard_Abstand_ComboBox
                    Else
                        Spalte = 2
                    End If
                End If
            Next i
            If Spalte = 2 Then
                Position = Position + Abstand_Absatz
                Mdl_Steuerelemente.Position = Mdl_Steuerelemente.Position + Mdl_Steuerelemente.Abstand_Absatz_ComboBox
            Else
                Position = Position + 1
                Mdl_Steuerelemente.Position = Mdl_Steuerelemente.Position + Mdl_Steuerelemente.Abstand_Absatz_ComboBox - Mdl_Steuerelemente.Standard_Abstand_ComboBox
            End If
        End With
    End If
End Sub

Public Sub Block_Sozialversicherung()
    Dim i As Integer
    
    If Not Worksheets("Verwaltung").Cells(Blk_Sozialversicherung, 1).Value = "" Then
        With Worksheets("Assistent")
            If Minijob Then
                Assistent_Anfang = Krankenversicherung
                Assistent_Ende = RV_Option
            Else
                Assistent_Anfang = Gesetzl_Krankenkasse
                Assistent_Ende = UV_Gefahrtarif
            End If
            Spalte = 1
            
            '|fffd|berschrift f|fffd|r den Abschnitt einf|fffd|gen
            Worksheets("Verwaltung").Cells(Blk_Sozialversicherung, 2).Value = Mdl_Formatierung.Abschnittsueberschrift_einfuegen("Sozialversicherung")
            Position = Position + Abstand_Abschnittsueberschrift
            
            'Datenfelder anlegen
            For i = Assistent_Anfang To Assistent_Ende
                If Not .Cells(i, 1).Value = "" Then
                    .Cells(i, 4).Value = Datenfeld(.Cells(i, 1).Value, Spalte, .Cells(i, 2).Value, .Cells(i, 3).Value)
                    If .Cells(i, 3).Value = "True" Then
                        If Spalte = 1 Then
                            .Cells(i, 5).Value = Mdl_Steuerelemente.ComboBox_Left_Spalte_1 & ";" & Mdl_Steuerelemente.Position
                        ElseIf Spalte = 2 Then
                            .Cells(i, 5).Value = Mdl_Steuerelemente.ComboBox_Left_Spalte_2 & ";" & Mdl_Steuerelemente.Position
                        End If
                    End If
                    If Spalte = 2 Then
                        Spalte = 1
                        Position = Position + Standard_Abstand
                        Mdl_Steuerelemente.Position = Mdl_Steuerelemente.Position + Mdl_Steuerelemente.Standard_Abstand_ComboBox
                    Else
                        Spalte = 2
                    End If
                End If
            Next i
            If Spalte = 2 Then
                Position = Position + Abstand_Absatz
                Mdl_Steuerelemente.Position = Mdl_Steuerelemente.Position + Mdl_Steuerelemente.Abstand_Absatz_ComboBox
            Else
                Position = Position + 1
                Mdl_Steuerelemente.Position = Mdl_Steuerelemente.Position + Mdl_Steuerelemente.Abstand_Absatz_ComboBox - Mdl_Steuerelemente.Standard_Abstand_ComboBox
            End If
        End With
    End If
End Sub

Public Sub Block_Entlohnung()
    Dim i As Integer

    If Not Worksheets("Verwaltung").Cells(Blk_Entlohnung, 1).Value = "" Then
        With Worksheets("Assistent")
            '|fffd|berschrift f|fffd|r den Abschnitt einf|fffd|gen
            Worksheets("Verwaltung").Cells(Blk_Entlohnung, 2).Value = Mdl_Formatierung.Abschnittsueberschrift_einfuegen("Entlohnung")
            Position = Position + Abstand_Abschnittsueberschrift
            
            'Datenfelder anlegen
            For i = Entlohnung To Entlohnung_5
                If Not .Cells(i, 1).Value = "" Then
                    .Cells(i, 4).Value = Datenfeld_Entlohnung
                    Position = Position + Standard_Abstand
                    Mdl_Steuerelemente.Position = Mdl_Steuerelemente.Position + Mdl_Steuerelemente.Standard_Abstand_ComboBox
                End If
            Next i
            Position = Position + 1
            Mdl_Steuerelemente.Position = Mdl_Steuerelemente.Position + Mdl_Steuerelemente.Abstand_Absatz_ComboBox - Mdl_Steuerelemente.Standard_Abstand_ComboBox
        End With
    End If
End Sub

Public Sub Block_VWL()
    Dim i As Integer
    
    If Not Worksheets("Verwaltung").Cells(Blk_VWL, 1).Value = "" Then
        With Worksheets("Assistent")
            Assistent_Anfang = Empfaenger_VWL
            Assistent_Ende = Bankbezeichnung_VWL
            Spalte = 1
        
            '|fffd|berschrift f|fffd|r den Abschnitt einf|fffd|gen
            If Minijob Then
                Worksheets("Verwaltung").Cells(Blk_VWL, 2).Value = Mdl_Formatierung.Abschnittsueberschrift_einfuegen("VWL", "(nur notwending, wenn Vertrag vorliegt)")
                Position = Position + Abstand_Abschnittsueberschrift_Zusatztext
                Mdl_Steuerelemente.Position = Mdl_Steuerelemente.Position + 15
            Else
                Worksheets("Verwaltung").Cells(Blk_VWL, 2).Value = Mdl_Formatierung.Abschnittsueberschrift_einfuegen("VWL")
                Position = Position + Abstand_Abschnittsueberschrift
            End If
        
            'Datenfelder anlegen
            For i = Assistent_Anfang To Assistent_Ende
                If Not .Cells(i, 1).Value = "" Then
                    .Cells(i, 4).Value = Datenfeld(.Cells(i, 1).Value, Spalte, .Cells(i, 2).Value, .Cells(i, 3).Value)
                    If .Cells(i, 3).Value = "True" Then
                        If Spalte = 1 Then
                            .Cells(i, 5).Value = Mdl_Steuerelemente.ComboBox_Left_Spalte_1 & ";" & Mdl_Steuerelemente.Position
                        ElseIf Spalte = 2 Then
                            .Cells(i, 5).Value = Mdl_Steuerelemente.ComboBox_Left_Spalte_2 & ";" & Mdl_Steuerelemente.Position
                        End If
                    End If
                    If Spalte = 2 Then
                        Spalte = 1
                        Position = Position + Standard_Abstand
                        Mdl_Steuerelemente.Position = Mdl_Steuerelemente.Position + Mdl_Steuerelemente.Standard_Abstand_ComboBox
                    Else
                        Spalte = 2
                    End If
                End If
            Next i
            If Spalte = 2 Then
                Position = Position + Abstand_Absatz
                Mdl_Steuerelemente.Position = Mdl_Steuerelemente.Position + Mdl_Steuerelemente.Abstand_Absatz_ComboBox
            Else
                Position = Position + 1
                Mdl_Steuerelemente.Position = Mdl_Steuerelemente.Position + Mdl_Steuerelemente.Abstand_Absatz_ComboBox - Mdl_Steuerelemente.Standard_Abstand_ComboBox
            End If
        End With
    End If
End Sub

Public Sub Block_Vorbeschaeftigungszeiten()
    Dim i As Integer
    
    If Not Worksheets("Verwaltung").Cells(Blk_Vorbeschaeftigungszeiten, 1).Value = "" Then
        With Worksheets("Assistent")
            '|fffd|berschrift f|fffd|r den Abschnitt einf|fffd|gen
            Worksheets("Verwaltung").Cells(Blk_Vorbeschaeftigungszeiten, 2).Value = Mdl_Formatierung.Abschnittsueberschrift_einfuegen("Angaben zu steuerpflichtigen Vorbesch|fffd|ftigungszeiten " & _
                                                                                     "im laufenden Kalenderjahr", _
                                                                                     "(das sind Zeitr|fffd|ume in denen unter Vorlage der Lohnsteuerkarte gearbeitet wurde)")
            Position = Position + Abstand_Abschnittsueberschrift_Zusatztext
            Mdl_Steuerelemente.Position = Mdl_Steuerelemente.Position + 15
            
            'Datenfelder anlegen
            For i = Vorbeschaeftigungszeiten To Vorbeschaeftigungszeiten_5
                If Not .Cells(i, 1).Value = "" Then
                    .Cells(i, 4).Value = Datenfeld_Vorbesch|fffd|ftigungszeiten
                    Position = Position + Standard_Abstand
                    Mdl_Steuerelemente.Position = Mdl_Steuerelemente.Position + Mdl_Steuerelemente.Standard_Abstand_ComboBox
                End If
            Next i
            Position = Position + 1
            Mdl_Steuerelemente.Position = Mdl_Steuerelemente.Position + Mdl_Steuerelemente.Abstand_Absatz_ComboBox - Mdl_Steuerelemente.Standard_Abstand_ComboBox
        End With
        With Worksheets("Verwaltung")
            If Not .Cells(Angaben_zu_den_Arbeitspapieren, 1).Value = "" Then
                .Cells(Angaben_zu_den_Arbeitspapieren, 3).Value = Mdl_Steuerelemente.Position - 13.5
            End If
        End With
    End If
End Sub

Public Sub Block_weitere_Beschaeftigungen()
    Dim i As Integer
    
    If Not Worksheets("Verwaltung").Cells(BlK_weitere_Beschaeftigungen, 1).Value = "" Then
        With Worksheets("Assistent")
            '|fffd|berschrift f|fffd|r den Abschnitt einf|fffd|gen
            Worksheets("Verwaltung").Cells(BlK_weitere_Beschaeftigungen, 2).Value = Mdl_Formatierung.Abschnittsueberschrift_einfuegen("Angaben zu weiteren Besch|fffd|ftigungen", _
                                                                                    "(bei kurzfristig Besch|fffd|ftigten auch Vorbesch|fffd|ftigungen aus dem Vorjahr)")
            Position = Position + Abstand_Abschnittsueberschrift_Zusatztext
            Mdl_Steuerelemente.Position = Mdl_Steuerelemente.Position + 15
            
            'Datenfelder anlegen
            For i = weitere_Beschaeftigungen To weitere_Beschaeftigungen_5
                If Not .Cells(i, 1).Value = "" Then
                    .Cells(i, 4).Value = Datenfeld_weitere_Beschaeftigungen
                    .Cells(i, 5).Value = Mdl_Steuerelemente.Position
                    Position = Position + Standard_Abstand
                    Mdl_Steuerelemente.Position = Mdl_Steuerelemente.Position + Mdl_Steuerelemente.Standard_Abstand_ComboBox
                End If
            Next i
            Position = Position + 1
            Mdl_Steuerelemente.Position = Mdl_Steuerelemente.Position + Mdl_Steuerelemente.Abstand_Absatz_ComboBox - Mdl_Steuerelemente.Standard_Abstand_ComboBox
        End With
        With Worksheets("Verwaltung")
            If Not .Cells(Angaben_zu_den_Arbeitspapieren, 1).Value = "" Then
                .Cells(Angaben_zu_den_Arbeitspapieren, 3).Value = Mdl_Steuerelemente.Position - 13.5
            End If
        End With
    End If
End Sub

Private Function Datenfeld(Bezeichnung As String, Spalte As Integer, Optional Arbeitgeberfeld As Boolean, _
                        Optional ohne_Eingabefeld As Boolean) As String
    Dim rng1 As String
    Dim rng2 As String
    Dim rng3 As String
    
    If Bezeichnung = "Stra|fffd|e, Hausnr." Then
        Datenfeld = Datenfeld_Strasse_Hausnr(Spalte)
        Exit Function
    ElseIf Bezeichnung = "PLZ, Ort" Then
        Datenfeld = Datenfeld_PLZ_Ort(Spalte)
        Exit Function
    ElseIf Bezeichnung = "Eintrittsdatum Ersteintrittsdatum" Then
        Datenfeld = Datenfeld_Eintrittsdatum_Ersteintrittsdatum(Spalte)
        Exit Function
    ElseIf Bezeichnung = "W|fffd|chentliche Arbeitszeit Urlaubsanspruch" Then
        Datenfeld = Datenfeld_Woechentliche_Arbeitszeit_Urlaubsanspruch(Spalte)
        Exit Function
    ElseIf Bezeichnung = "Steuerklasse, Faktor" Then
        Datenfeld = Datenfeld_Steuerklasse_Faktor(Spalte)
        Exit Function
    ElseIf Bezeichnung = "Finanzamtsnummer Identifikationsnummer" Then
        Datenfeld = Datenfeld_Finanzamtsnummer_Identifikationsnummer(Spalte)
        Exit Function
    ElseIf Bezeichnung = "KV RV" Then
        Datenfeld = Datenfeld_KV_RV(Spalte)
        Exit Function
    ElseIf Bezeichnung = "AV PV" Then
        Datenfeld = Datenfeld_AV_PV(Spalte)
        Exit Function
    ElseIf Bezeichnung = "RV-Option" Then
        Datenfeld = Datenfeld_RV_Option
        Exit Function
    ElseIf Bezeichnung = "Betrag, AG-Anteil" Then
        Datenfeld = Datenfeld_Betrag_AG_Anteil(Spalte)
        Exit Function
    End If
    
    If Spalte = 1 Then
        rng1 = "C" & Position & ":Y" & Position + 5
        rng2 = "D" & Position + 1 & ":X" & Position + 1
        rng3 = "D" & Position + 2 & ":X" & Position + 4
    ElseIf Spalte = 2 Then
        rng1 = "AA" & Position & ":AW" & Position + 5
        rng2 = "AB" & Position + 1 & ":AV" & Position + 1
        rng3 = "AB" & Position + 2 & ":AV" & Position + 4
    End If

    With Worksheets("Personalfragebogen")
        If Not Bezeichnung = "[leer]" Then
            Call Mdl_Formatierung.Zeilenhoehen_anpassen(Position)
    
            With .Range(rng1)
                With .Interior
                    .ColorIndex = 2
                    .Pattern = xlSolid
                End With
                If Spalte = 2 Or Arbeitgeberfeld Then
                    With .Borders(xlEdgeLeft)
                        .LineStyle = xlContinuous
                        If Arbeitgeberfeld Then
                            .Weight = xlThick
                        Else
                            .Weight = xlThin
                        End If
                        .ColorIndex = 1
                    End With
                End If
                With .Borders(xlEdgeTop)
                    .LineStyle = xlContinuous
                    .Weight = xlThin
                    .ColorIndex = 1
                End With
            End With
            
            With .Range(rng2)
                .HorizontalAlignment = xlLeft
                .VerticalAlignment = xlCenter
                .MergeCells = True
                .Value = Bezeichnung
                With .Font
                    .Name = "Verdana"
                    .Size = 8
                    .Bold = False
                    .ColorIndex = 1
                End With
            End With
    
            With .Range(rng3)
                .HorizontalAlignment = xlLeft
                .VerticalAlignment = xlCenter
                .MergeCells = True
                With .Font
                    .Name = "Verdana"
                    .Size = 12
                    .Bold = False
                    .ColorIndex = 1
                End With
                If Not ohne_Eingabefeld Then
                    .Locked = False
                    .NumberFormat = "@"
                    With .Borders(xlEdgeLeft)
                        .LineStyle = xlContinuous
                        .Weight = xlThin
                        .ColorIndex = 1
                    End With
                    With .Borders(xlEdgeTop)
                        .LineStyle = xlContinuous
                        .Weight = xlThin
                        .ColorIndex = 1
                    End With
                    With .Borders(xlEdgeBottom)
                        .LineStyle = xlContinuous
                        .Weight = xlThin
                        .ColorIndex = 1
                    End With
                    With .Borders(xlEdgeRight)
                        .LineStyle = xlContinuous
                        .Weight = xlThin
                        .ColorIndex = 1
                    End With
                Else
                    .Locked = True
                End If
            End With
            
            Datenfeld = Left(rng3, InStr(rng3, ":") - 1)
        Else
            Call Mdl_Formatierung.Zeilenhoehen_anpassen(Position)
            
            With .Range(rng1).Interior
                .ColorIndex = 2
                .Pattern = xlSolid
            End With

            Datenfeld = ""
        End If
    End With
End Function

Private Function Datenfeld_Firma() As String
    Dim rng_Firma As String
    Dim rng_Firma_2 As String
    Dim rng_Firma_3 As String
    
    With Worksheets("Personalfragebogen")
        .Rows(Position & ":" & Position).RowHeight = 3
        .Rows(Position + 2 & ":" & Position + 2).RowHeight = 3
        .Rows(Position + 4 & ":" & Position + 6).RowHeight = 3
        .Rows(Position + 8 & ":" & Position + 10).RowHeight = 3
        .Rows(Position + 12 & ":" & Position + 13).RowHeight = 3
        .Rows(Position + 14 & ":" & Position + 15).RowHeight = 5.5

        With .Range("C" & Position & ":Y" & Position + 5)
            With .Interior
                .ColorIndex = 2
                .Pattern = xlSolid
            End With
            With .Borders(xlEdgeTop)
                .LineStyle = xlContinuous
                .Weight = xlThin
                .ColorIndex = 1
            End With
        End With
        
        With .Range("D" & Position + 1 & ":X" & Position + 1)
            .HorizontalAlignment = xlLeft
            .VerticalAlignment = xlCenter
            .MergeCells = True
            .Value = "Firma"
            With .Font
                .Name = "Verdana"
                .Size = 8
                .Bold = False
                .ColorIndex = 1
            End With
        End With
        
        rng_Firma = ("D" & Position + 2 & ":X" & Position + 4)
        With .Range(rng_Firma)
            .HorizontalAlignment = xlLeft
            .VerticalAlignment = xlCenter
            .MergeCells = True
            With .Font
                .Name = "Verdana"
                .Size = 12
                .Bold = False
                .ColorIndex = 1
            End With
            .Locked = False
            .NumberFormat = "@"
            With .Borders(xlEdgeLeft)
                .LineStyle = xlContinuous
                .Weight = xlThin
                .ColorIndex = 1
            End With
            With .Borders(xlEdgeTop)
                .LineStyle = xlContinuous
                .Weight = xlThin
                .ColorIndex = 1
            End With
            With .Borders(xlEdgeBottom)
                .LineStyle = xlContinuous
                .Weight = xlThin
                .ColorIndex = 1
            End With
            With .Borders(xlEdgeRight)
                .LineStyle = xlContinuous
                .Weight = xlThin
                .ColorIndex = 1
            End With
        End With
            
        rng_Firma_2 = ("D" & Position + 6 & ":X" & Position + 8)
        With .Range(rng_Firma_2)
            .HorizontalAlignment = xlLeft
            .VerticalAlignment = xlCenter
            .MergeCells = True
            With .Font
                .Name = "Verdana"
                .Size = 12
                .Bold = False
                .ColorIndex = 1
            End With
            .Locked = False
            .NumberFormat = "@"
            With .Borders(xlEdgeLeft)
                .LineStyle = xlContinuous
                .Weight = xlThin
                .ColorIndex = 1
            End With
            With .Borders(xlEdgeTop)
                .LineStyle = xlContinuous
                .Weight = xlThin
                .ColorIndex = 1
            End With
            With .Borders(xlEdgeBottom)
                .LineStyle = xlContinuous
                .Weight = xlThin
                .ColorIndex = 1
            End With
            With .Borders(xlEdgeRight)
                .LineStyle = xlContinuous
                .Weight = xlThin
                .ColorIndex = 1
            End With
        End With
            
        rng_Firma_3 = ("D" & Position + 10 & ":X" & Position + 12)
        With .Range(rng_Firma_3)
            .HorizontalAlignment = xlLeft
            .VerticalAlignment = xlCenter
            .MergeCells = True
            With .Font
                .Name = "Verdana"
                .Size = 12
                .Bold = False
                .ColorIndex = 1
            End With
            .Locked = False
            .NumberFormat = "@"
            With .Borders(xlEdgeLeft)
                .LineStyle = xlContinuous
                .Weight = xlThin
                .ColorIndex = 1
            End With
            With .Borders(xlEdgeTop)
                .LineStyle = xlContinuous
                .Weight = xlThin
                .ColorIndex = 1
            End With
            With .Borders(xlEdgeBottom)
                .LineStyle = xlContinuous
                .Weight = xlThin
                .ColorIndex = 1
            End With
            With .Borders(xlEdgeRight)
                .LineStyle = xlContinuous
                .Weight = xlThin
                .ColorIndex = 1
            End With

            If Not Worksheets("Assistent").Cells(Firma, 6).Value = "" Then
                .Value = Worksheets("Assistent").Cells(Firma, 6).Value
                .Locked = True
            End If
        End With
    End With
    
    Datenfeld_Firma = Left(rng_Firma, InStr(rng_Firma, ":") - 1) & ";" & _
                        Left(rng_Firma_2, InStr(rng_Firma_2, ":") - 1) & ";" & _
                        Left(rng_Firma_3, InStr(rng_Firma_3, ":") - 1)
End Function

Private Function Datenfeld_Name_des_Mitarbeiters_Personalnummer() As String
    Dim rng_MA_Name As String
    Dim rng_Personalnummer As String
    
    With Worksheets("Personalfragebogen")
        Call Mdl_Formatierung.Zeilenhoehen_anpassen(Position)

        'Name des Mitarbeiters
        With .Range("C" & Position & ":AK" & Position + 5)
            With .Interior
                .ColorIndex = 2
                .Pattern = xlSolid
            End With
            With .Borders(xlEdgeTop)
                .LineStyle = xlContinuous
                .Weight = xlThin
                .ColorIndex = 1
            End With
        End With
        
        With .Range("D" & Position + 1 & ":AJ" & Position + 1)
            .HorizontalAlignment = xlLeft
            .VerticalAlignment = xlCenter
            .MergeCells = True
            .Value = "Name des Mitarbeiters"
            With .Font
                .Name = "Verdana"
                .Size = 8
                .Bold = False
                .ColorIndex = 1
            End With
        End With
        
        rng_MA_Name = "D" & Position + 2 & ":AJ" & Position + 4
        With .Range(rng_MA_Name)
            .HorizontalAlignment = xlLeft
            .VerticalAlignment = xlCenter
            .MergeCells = True
            With .Font
                .Name = "Verdana"
                .Size = 12
                .Bold = False
                .ColorIndex = 1
            End With
        End With
        
        'Personalnummer
        With .Range("AM" & Position & ":AW" & Position + 5)
            With .Interior
                .ColorIndex = 2
                .Pattern = xlSolid
            End With
            With .Borders(xlEdgeLeft)
                .LineStyle = xlContinuous
                .Weight = xlThin
                .ColorIndex = 1
            End With
            With .Borders(xlEdgeTop)
                .LineStyle = xlContinuous
                .Weight = xlThin
                .ColorIndex = 1
            End With
        End With
        
        With .Range("AN" & Position + 1 & ":AV" & Position + 1)
            .HorizontalAlignment = xlLeft
            .VerticalAlignment = xlCenter
            .MergeCells = True
            .Value = "Personalnummer"
            With .Font
                .Name = "Verdana"
                .Size = 8
                .Bold = False
                .ColorIndex = 1
            End With
        End With
        
        rng_Personalnummer = "AN" & Position + 2 & ":AV" & Position + 4
        With .Range(rng_Personalnummer)
            .HorizontalAlignment = xlLeft
            .VerticalAlignment = xlCenter
            .MergeCells = True
            .Locked = False
            .NumberFormat = "@"
            With .Font
                .Name = "Verdana"
                .Size = 12
                .Bold = False
                .ColorIndex = 1
            End With
            With .Borders(xlEdgeLeft)
                .LineStyle = xlContinuous
                .Weight = xlThin
                .ColorIndex = 1
            End With
            With .Borders(xlEdgeTop)
                .LineStyle = xlContinuous
                .Weight = xlThin
                .ColorIndex = 1
            End With
            With .Borders(xlEdgeBottom)
                .LineStyle = xlContinuous
                .Weight = xlThin
                .ColorIndex = 1
            End With
            With .Borders(xlEdgeRight)
                .LineStyle = xlContinuous
                .Weight = xlThin
                .ColorIndex = 1
            End With
        End With
    End With
    
    Datenfeld_Name_des_Mitarbeiters_Personalnummer = Left(rng_MA_Name, InStr(rng_MA_Name, ":") - 1) & ";" & _
                                                        Left(rng_Personalnummer, InStr(rng_Personalnummer, ":") - 1)
End Function

Private Function Datenfeld_Strasse_Hausnr(Spalte As Integer)
    Dim rng1 As String
    Dim rng2 As String
    Dim rng3 As String
    Dim rng_Str As String
    Dim rng_HNr As String
    
    If Spalte = 1 Then
        rng1 = "C" & Position & ":Y" & Position + 5
        rng2 = "D" & Position + 1 & ":T" & Position + 1
        rng3 = "V" & Position + 1 & ":X" & Position + 1
        rng_Str = "D" & Position + 2 & ":T" & Position + 4
        rng_HNr = "V" & Position + 2 & ":X" & Position + 4
    ElseIf Spalte = 2 Then
        rng1 = "AA" & Position & ":AW" & Position + 5
        rng2 = "AB" & Position + 1 & ":AR" & Position + 1
        rng3 = "AT" & Position + 1 & ":AV" & Position + 1
        rng_Str = "AB" & Position + 2 & ":AR" & Position + 4
        rng_HNr = "AT" & Position + 2 & ":AV" & Position + 4
    End If
    
    With Worksheets("Personalfragebogen")
        Call Mdl_Formatierung.Zeilenhoehen_anpassen(Position)
    
        With .Range(rng1)
            With .Interior
                .ColorIndex = 2
                .Pattern = xlSolid
            End With
            If Spalte = 2 Then
                With .Borders(xlEdgeLeft)
                    .LineStyle = xlContinuous
                    .Weight = xlThin
                    .ColorIndex = 1
                End With
            End If
            With .Borders(xlEdgeTop)
                .LineStyle = xlContinuous
                .Weight = xlThin
                .ColorIndex = 1
            End With
        End With
        
        With .Range(rng2)
            .HorizontalAlignment = xlLeft
            .VerticalAlignment = xlCenter
            .MergeCells = True
            .Value = "Stra|fffd|e"
            With .Font
                .Name = "Verdana"
                .Size = 8
                .Bold = False
                .ColorIndex = 1
            End With
        End With
        
        With .Range(rng3)
            .HorizontalAlignment = xlLeft
            .VerticalAlignment = xlCenter
            .MergeCells = True
            .Value = "Hausnr."
            With .Font
                .Name = "Verdana"
                .Size = 8
                .Bold = False
                .ColorIndex = 1
            End With
        End With
    
        'Stra|fffd|e
        With .Range(rng_Str)
            .HorizontalAlignment = xlLeft
            .VerticalAlignment = xlCenter
            .MergeCells = True
            .Locked = False
            .NumberFormat = "@"
            With .Font
                .Name = "Verdana"
                .Size = 12
                .Bold = False
                .ColorIndex = 1
            End With
            With .Borders(xlEdgeLeft)
                .LineStyle = xlContinuous
                .Weight = xlThin
                .ColorIndex = 1
            End With
            With .Borders(xlEdgeTop)
                .LineStyle = xlContinuous
                .Weight = xlThin
                .ColorIndex = 1
            End With
            With .Borders(xlEdgeBottom)
                .LineStyle = xlContinuous
                .Weight = xlThin
                .ColorIndex = 1
            End With
            With .Borders(xlEdgeRight)
                .LineStyle = xlContinuous
                .Weight = xlThin
                .ColorIndex = 1
            End With
        End With
        
        'Hausnummer
        With .Range(rng_HNr)
            .HorizontalAlignment = xlLeft
            .VerticalAlignment = xlCenter
            .MergeCells = True
            .Locked = False
            .NumberFormat = "@"
            With .Font
                .Name = "Verdana"
                .Size = 12
                .Bold = False
                .ColorIndex = 1
            End With
            With .Borders(xlEdgeLeft)
                .LineStyle = xlContinuous
                .Weight = xlThin
                .ColorIndex = 1
            End With
            With .Borders(xlEdgeTop)
                .LineStyle = xlContinuous
                .Weight = xlThin
                .ColorIndex = 1
            End With
            With .Borders(xlEdgeBottom)
                .LineStyle = xlContinuous
                .Weight = xlThin
                .ColorIndex = 1
            End With
            With .Borders(xlEdgeRight)
                .LineStyle = xlContinuous
                .Weight = xlThin
                .ColorIndex = 1
            End With
        End With
    End With
    
    Datenfeld_Strasse_Hausnr = Left(rng_Str, InStr(rng_Str, ":") - 1) & ";" & _
                                       Left(rng_HNr, InStr(rng_HNr, ":") - 1)
End Function

Private Function Datenfeld_PLZ_Ort(Spalte As Integer)
    Dim rng1 As String
    Dim rng2 As String
    Dim rng3 As String
    Dim rng_PLZ As String
    Dim rng_Ort As String
    
    If Spalte = 1 Then
        rng1 = "C" & Position & ":Y" & Position + 5
        rng2 = "D" & Position + 1 & ":F" & Position + 1
        rng3 = "H" & Position + 1 & ":X" & Position + 1
        rng_PLZ = "D" & Position + 2 & ":F" & Position + 4
        rng_Ort = "H" & Position + 2 & ":X" & Position + 4
    ElseIf Spalte = 2 Then
        rng1 = "AA" & Position & ":AW" & Position + 5
        rng2 = "AB" & Position + 1 & ":AD" & Position + 1
        rng3 = "AF" & Position + 1 & ":AV" & Position + 1
        rng_PLZ = "AB" & Position + 2 & ":AD" & Position + 4
        rng_Ort = "AF" & Position + 2 & ":AV" & Position + 4
    End If
    
    With Worksheets("Personalfragebogen")
        Call Mdl_Formatierung.Zeilenhoehen_anpassen(Position)
    
        With .Range(rng1)
            With .Interior
                .ColorIndex = 2
                .Pattern = xlSolid
            End With
            If Spalte = 2 Then
                With .Borders(xlEdgeLeft)
                    .LineStyle = xlContinuous
                    .Weight = xlThin
                    .ColorIndex = 1
                End With
            End If
            With .Borders(xlEdgeTop)
                .LineStyle = xlContinuous
                .Weight = xlThin
                .ColorIndex = 1
            End With
        End With
        
        With .Range(rng2)
            .HorizontalAlignment = xlLeft
            .VerticalAlignment = xlCenter
            .MergeCells = True
            .Value = "PLZ"
            With .Font
                .Name = "Verdana"
                .Size = 8
                .Bold = False
                .ColorIndex = 1
            End With
        End With
        
        With .Range(rng3)
            .HorizontalAlignment = xlLeft
            .VerticalAlignment = xlCenter
            .MergeCells = True
            .Value = "Ort"
            With .Font
                .Name = "Verdana"
                .Size = 8
                .Bold = False
                .ColorIndex = 1
            End With
        End With
            
        'PLZ
        With .Range(rng_PLZ)
            .HorizontalAlignment = xlLeft
            .VerticalAlignment = xlCenter
            .MergeCells = True
            .Locked = False
            .NumberFormat = "@"
            With .Font
                .Name = "Verdana"
                .Size = 12
                .Bold = False
                .ColorIndex = 1
            End With
            With .Borders(xlEdgeLeft)
                .LineStyle = xlContinuous
                .Weight = xlThin
                .ColorIndex = 1
            End With
            With .Borders(xlEdgeTop)
                .LineStyle = xlContinuous
                .Weight = xlThin
                .ColorIndex = 1
            End With
            With .Borders(xlEdgeBottom)
                .LineStyle = xlContinuous
                .Weight = xlThin
                .ColorIndex = 1
            End With
            With .Borders(xlEdgeRight)
                .LineStyle = xlContinuous
                .Weight = xlThin
                .ColorIndex = 1
            End With
        End With
        
        'Ort
        With .Range(rng_Ort)
            .HorizontalAlignment = xlLeft
            .VerticalAlignment = xlCenter
            .MergeCells = True
            .Locked = False
            .NumberFormat = "@"
            With .Font
                .Name = "Verdana"
                .Size = 12
                .Bold = False
                .ColorIndex = 1
            End With
            With .Borders(xlEdgeLeft)
                .LineStyle = xlContinuous
                .Weight = xlThin
                .ColorIndex = 1
            End With
            With .Borders(xlEdgeTop)
                .LineStyle = xlContinuous
                .Weight = xlThin
                .ColorIndex = 1
            End With
            With .Borders(xlEdgeBottom)
                .LineStyle = xlContinuous
                .Weight = xlThin
                .ColorIndex = 1
            End With
            With .Borders(xlEdgeRight)
                .LineStyle = xlContinuous
                .Weight = xlThin
                .ColorIndex = 1
            End With
        End With
    End With
    
    Datenfeld_PLZ_Ort = Left(rng_PLZ, InStr(rng_PLZ, ":") - 1) & ";" & _
                        Left(rng_Ort, InStr(rng_Ort, ":") - 1)
End Function

Private Function Datenfeld_Eintrittsdatum_Ersteintrittsdatum(Spalte As Integer)
    Dim rng1 As String
    Dim rng2 As String
    Dim rng3 As String
    Dim rng4 As String
    Dim rng_Eintrittsdatum As String
    Dim rng_Ersteintrittsdatum As String
    
    If Spalte = 1 Then
        rng1 = "C" & Position & ":M" & Position + 5
        rng2 = "D" & Position + 1 & ":L" & Position + 1
        rng3 = "O" & Position & ":Y" & Position + 5
        rng4 = "P" & Position + 1 & ":X" & Position + 1
        rng_Eintrittsdatum = "D" & Position + 2 & ":L" & Position + 4
        rng_Ersteintrittsdatum = "P" & Position + 2 & ":X" & Position + 4
    ElseIf Spalte = 2 Then
        rng1 = "AA" & Position & ":AK" & Position + 5
        rng2 = "AB" & Position + 1 & ":AJ" & Position + 1
        rng3 = "AM" & Position & ":AW" & Position + 5
        rng4 = "AN" & Position + 1 & ":AV" & Position + 1
        rng_Eintrittsdatum = "AB" & Position + 2 & ":AJ" & Position + 4
        rng_Ersteintrittsdatum = "AN" & Position + 2 & ":AV" & Position + 4
    End If
    
    With Worksheets("Personalfragebogen")
        Call Mdl_Formatierung.Zeilenhoehen_anpassen(Position)
        
        'Eintrittsdatum
        With .Range(rng1)
            With .Interior
                .ColorIndex = 2
                .Pattern = xlSolid
            End With
            If Spalte = 2 Then
                With .Borders(xlEdgeLeft)
                    .LineStyle = xlContinuous
                    .Weight = xlThin
                    .ColorIndex = 1
                End With
            End If
            With .Borders(xlEdgeTop)
                .LineStyle = xlContinuous
                .Weight = xlThin
                .ColorIndex = 1
            End With
        End With
        
        With .Range(rng2)
            .HorizontalAlignment = xlLeft
            .VerticalAlignment = xlCenter
            .MergeCells = True
            .Value = "Eintrittsdatum (TT.MM.JJJJ)"
            With .Font
                .Name = "Verdana"
                .Size = 8
                .Bold = False
                .ColorIndex = 1
            End With
        End With
        
        With .Range(rng_Eintrittsdatum)
            .HorizontalAlignment = xlLeft
            .VerticalAlignment = xlCenter
            .MergeCells = True
            .Locked = False
            .NumberFormat = "@"
            With .Font
                .Name = "Verdana"
                .Size = 12
                .Bold = False
                .ColorIndex = 1
            End With
            With .Borders(xlEdgeLeft)
                .LineStyle = xlContinuous
                .Weight = xlThin
                .ColorIndex = 1
            End With
            With .Borders(xlEdgeTop)
                .LineStyle = xlContinuous
                .Weight = xlThin
                .ColorIndex = 1
            End With
            With .Borders(xlEdgeBottom)
                .LineStyle = xlContinuous
                .Weight = xlThin
                .ColorIndex = 1
            End With
            With .Borders(xlEdgeRight)
                .LineStyle = xlContinuous
                .Weight = xlThin
                .ColorIndex = 1
            End With
        End With
        
        'Ersteintrittsdatum
        With .Range(rng3)
            With .Interior
                .ColorIndex = 2
                .Pattern = xlSolid
            End With
            With .Borders(xlEdgeLeft)
                .LineStyle = xlContinuous
                .Weight = xlThick
                .ColorIndex = 1
            End With
            With .Borders(xlEdgeTop)
                .LineStyle = xlContinuous
                .Weight = xlThin
                .ColorIndex = 1
            End With
        End With
        
        With .Range(rng4)
            .HorizontalAlignment = xlLeft
            .VerticalAlignment = xlCenter
            .MergeCells = True
            .Value = "Ersteintrittsdatum (TT.MM.JJJJ)"
            With .Font
                .Name = "Verdana"
                .Size = 8
                .Bold = False
                .ColorIndex = 1
            End With
        End With
        
        With .Range(rng_Ersteintrittsdatum)
            .HorizontalAlignment = xlLeft
            .VerticalAlignment = xlCenter
            .MergeCells = True
            .Locked = False
            .NumberFormat = "@"
            With .Font
                .Name = "Verdana"
                .Size = 12
                .Bold = False
                .ColorIndex = 1
            End With
            With .Borders(xlEdgeLeft)
                .LineStyle = xlContinuous
                .Weight = xlThin
                .ColorIndex = 1
            End With
            With .Borders(xlEdgeTop)
                .LineStyle = xlContinuous
                .Weight = xlThin
                .ColorIndex = 1
            End With
            With .Borders(xlEdgeBottom)
                .LineStyle = xlContinuous
                .Weight = xlThin
                .ColorIndex = 1
            End With
            With .Borders(xlEdgeRight)
                .LineStyle = xlContinuous
                .Weight = xlThin
                .ColorIndex = 1
            End With
        End With
    End With
    
    Datenfeld_Eintrittsdatum_Ersteintrittsdatum = Left(rng_Eintrittsdatum, InStr(rng_Eintrittsdatum, ":") - 1) & ";" & _
                                 Left(rng_Ersteintrittsdatum, InStr(rng_Ersteintrittsdatum, ":") - 1)
End Function

Private Function Datenfeld_Woechentliche_Arbeitszeit_Urlaubsanspruch(Spalte As Integer)
    Dim rng1 As String
    Dim rng2 As String
    Dim rng3 As String
    Dim rng4 As String
    Dim rng_Woechentliche_Arbeitszeit As String
    Dim rng_Urlaubsanspruch As String
    
    If Spalte = 1 Then
        rng1 = "C" & Position & ":M" & Position + 5
        rng2 = "D" & Position + 1 & ":L" & Position + 1
        rng3 = "O" & Position & ":Y" & Position + 5
        rng4 = "P" & Position + 1 & ":X" & Position + 1
        rng_Woechentliche_Arbeitszeit = "D" & Position + 2 & ":L" & Position + 4
        rng_Urlaubsanspruch = "P" & Position + 2 & ":X" & Position + 4
    ElseIf Spalte = 2 Then
        rng1 = "AA" & Position & ":AK" & Position + 5
        rng2 = "AB" & Position + 1 & ":AJ" & Position + 1
        rng3 = "AM" & Position & ":AW" & Position + 5
        rng4 = "AN" & Position + 1 & ":AV" & Position + 1
        rng_Woechentliche_Arbeitszeit = "AB" & Position + 2 & ":AJ" & Position + 4
        rng_Urlaubsanspruch = "AN" & Position + 2 & ":AV" & Position + 4
    End If
    
    With Worksheets("Personalfragebogen")
        Call Mdl_Formatierung.Zeilenhoehen_anpassen(Position)
        
        'W|fffd|chentliche Arbeitszeit
        With .Range(rng1)
            With .Interior
                .ColorIndex = 2
                .Pattern = xlSolid
            End With
            With .Borders(xlEdgeLeft)
                .LineStyle = xlContinuous
                .Weight = xlThick
                .ColorIndex = 1
            End With
            With .Borders(xlEdgeTop)
                .LineStyle = xlContinuous
                .Weight = xlThin
                .ColorIndex = 1
            End With
        End With
        
        With .Range(rng2)
            .HorizontalAlignment = xlLeft
            .VerticalAlignment = xlCenter
            .MergeCells = True
            .Value = "W|fffd|chentliche Arbeitszeit"
            With .Font
                .Name = "Verdana"
                .Size = 8
                .Bold = False
                .ColorIndex = 1
            End With
        End With
        
        With .Range(rng_Woechentliche_Arbeitszeit)
            .HorizontalAlignment = xlLeft
            .VerticalAlignment = xlCenter
            .MergeCells = True
            .Locked = False
            .NumberFormat = "@"
            With .Font
                .Name = "Verdana"
                .Size = 12
                .Bold = False
                .ColorIndex = 1
            End With
            With .Borders(xlEdgeLeft)
                .LineStyle = xlContinuous
                .Weight = xlThin
                .ColorIndex = 1
            End With
            With .Borders(xlEdgeTop)
                .LineStyle = xlContinuous
                .Weight = xlThin
                .ColorIndex = 1
            End With
            With .Borders(xlEdgeBottom)
                .LineStyle = xlContinuous
                .Weight = xlThin
                .ColorIndex = 1
            End With
            With .Borders(xlEdgeRight)
                .LineStyle = xlContinuous
                .Weight = xlThin
                .ColorIndex = 1
            End With
        End With
        
        'Urlaubsanspruch
        With .Range(rng3)
            With .Interior
                .ColorIndex = 2
                .Pattern = xlSolid
            End With
            With .Borders(xlEdgeLeft)
                .LineStyle = xlContinuous
                .Weight = xlThick
                .ColorIndex = 1
            End With
            With .Borders(xlEdgeTop)
                .LineStyle = xlContinuous
                .Weight = xlThin
                .ColorIndex = 1
            End With
        End With
        
        With .Range(rng4)
            .HorizontalAlignment = xlLeft
            .VerticalAlignment = xlCenter
            .MergeCells = True
            .Value = "Urlaubsanspruch (Kalenderjahr)"
            With .Font
                .Name = "Verdana"
                .Size = 8
                .Bold = False
                .ColorIndex = 1
            End With
        End With
        
        With .Range(rng_Urlaubsanspruch)
            .HorizontalAlignment = xlLeft
            .VerticalAlignment = xlCenter
            .MergeCells = True
            .Locked = False
            .NumberFormat = "@"
            With .Font
                .Name = "Verdana"
                .Size = 12
                .Bold = False
                .ColorIndex = 1
            End With
            With .Borders(xlEdgeLeft)
                .LineStyle = xlContinuous
                .Weight = xlThin
                .ColorIndex = 1
            End With
            With .Borders(xlEdgeTop)
                .LineStyle = xlContinuous
                .Weight = xlThin
                .ColorIndex = 1
            End With
            With .Borders(xlEdgeBottom)
                .LineStyle = xlContinuous
                .Weight = xlThin
                .ColorIndex = 1
            End With
            With .Borders(xlEdgeRight)
                .LineStyle = xlContinuous
                .Weight = xlThin
                .ColorIndex = 1
            End With
        End With
    End With
    
    Datenfeld_Woechentliche_Arbeitszeit_Urlaubsanspruch = Left(rng_Woechentliche_Arbeitszeit, InStr(rng_Woechentliche_Arbeitszeit, ":") - 1) & ";" & _
                                 Left(rng_Urlaubsanspruch, InStr(rng_Urlaubsanspruch, ":") - 1)
End Function

Private Function Datenfeld_Steuerklasse_Faktor(Spalte As Integer)
    Dim rng1 As String
    Dim rng2 As String
    Dim rng3 As String
    Dim rng4 As String
    Dim rng_Steuerklasse As String
    Dim rng_Faktor As String
    
    If Spalte = 1 Then
        rng1 = "C" & Position & ":M" & Position + 5
        rng2 = "D" & Position + 1 & ":L" & Position + 1
        rng3 = "O" & Position & ":Y" & Position + 5
        rng4 = "P" & Position + 1 & ":X" & Position + 1
        rng_Steuerklasse = "D" & Position + 2 & ":L" & Position + 4
        rng_Faktor = "P" & Position + 2 & ":X" & Position + 4
    ElseIf Spalte = 2 Then
        rng1 = "AA" & Position & ":AK" & Position + 5
        rng2 = "AB" & Position + 1 & ":AJ" & Position + 1
        rng3 = "AM" & Position & ":AW" & Position + 5
        rng4 = "AN" & Position + 1 & ":AV" & Position + 1
        rng_Steuerklasse = "AB" & Position + 2 & ":AJ" & Position + 4
        rng_Faktor = "AN" & Position + 2 & ":AV" & Position + 4
    End If
    
    With Worksheets("Personalfragebogen")
        Call Mdl_Formatierung.Zeilenhoehen_anpassen(Position)
        
        'Steuerklasse
        With .Range(rng1)
            With .Interior
                .ColorIndex = 2
                .Pattern = xlSolid
            End With
            If Spalte = 2 Then
                With .Borders(xlEdgeLeft)
                    .LineStyle = xlContinuous
                    .Weight = xlThin
                    .ColorIndex = 1
                End With
            End If
            With .Borders(xlEdgeTop)
                .LineStyle = xlContinuous
                .Weight = xlThin
                .ColorIndex = 1
            End With
        End With
        
        With .Range(rng2)
            .HorizontalAlignment = xlLeft
            .VerticalAlignment = xlCenter
            .MergeCells = True
            .Value = "Steuerklasse"
            With .Font
                .Name = "Verdana"
                .Size = 8
                .Bold = False
                .ColorIndex = 1
            End With
        End With
        
        With .Range(rng_Steuerklasse)
            .HorizontalAlignment = xlLeft
            .VerticalAlignment = xlCenter
            .MergeCells = True
            .Locked = False
            .NumberFormat = "@"
            With .Font
                .Name = "Verdana"
                .Size = 12
                .Bold = False
                .ColorIndex = 1
            End With
            With .Borders(xlEdgeLeft)
                .LineStyle = xlContinuous
                .Weight = xlThin
                .ColorIndex = 1
            End With
            With .Borders(xlEdgeTop)
                .LineStyle = xlContinuous
                .Weight = xlThin
                .ColorIndex = 1
            End With
            With .Borders(xlEdgeBottom)
                .LineStyle = xlContinuous
                .Weight = xlThin
                .ColorIndex = 1
            End With
            With .Borders(xlEdgeRight)
                .LineStyle = xlContinuous
                .Weight = xlThin
                .ColorIndex = 1
            End With
        End With
        
        'Faktor
        With .Range(rng3)
            With .Interior
                .ColorIndex = 2
                .Pattern = xlSolid
            End With
            With .Borders(xlEdgeLeft)
                .LineStyle = xlContinuous
                .Weight = xlThin
                .ColorIndex = 1
            End With
            With .Borders(xlEdgeTop)
                .LineStyle = xlContinuous
                .Weight = xlThin
                .ColorIndex = 1
            End With
        End With
        
        With .Range(rng4)
            .HorizontalAlignment = xlLeft
            .VerticalAlignment = xlCenter
            .MergeCells = True
            .Value = "Faktor"
            With .Font
                .Name = "Verdana"
                .Size = 8
                .Bold = False
                .ColorIndex = 1
            End With
        End With
        
        With .Range(rng_Faktor)
            .HorizontalAlignment = xlLeft
            .VerticalAlignment = xlCenter
            .MergeCells = True
            .Locked = False
            .NumberFormat = "@"
            With .Font
                .Name = "Verdana"
                .Size = 12
                .Bold = False
                .ColorIndex = 1
            End With
            With .Borders(xlEdgeLeft)
                .LineStyle = xlContinuous
                .Weight = xlThin
                .ColorIndex = 1
            End With
            With .Borders(xlEdgeTop)
                .LineStyle = xlContinuous
                .Weight = xlThin
                .ColorIndex = 1
            End With
            With .Borders(xlEdgeBottom)
                .LineStyle = xlContinuous
                .Weight = xlThin
                .ColorIndex = 1
            End With
            With .Borders(xlEdgeRight)
                .LineStyle = xlContinuous
                .Weight = xlThin
                .ColorIndex = 1
            End With
        End With
    End With
    
    Datenfeld_Steuerklasse_Faktor = Left(rng_Steuerklasse, InStr(rng_Steuerklasse, ":") - 1) & ";" & _
                                    Left(rng_Faktor, InStr(rng_Faktor, ":") - 1)
End Function

Private Function Datenfeld_Finanzamtsnummer_Identifikationsnummer(Spalte As Integer)
    Dim rng1 As String
    Dim rng2 As String
    Dim rng3 As String
    Dim rng4 As String
    Dim rng_Finanzamtsnummer As String
    Dim rng_Identifikationsnummer As String
    
    If Spalte = 1 Then
        rng1 = "C" & Position & ":M" & Position + 5
        rng2 = "D" & Position + 1 & ":L" & Position + 1
        rng3 = "O" & Position & ":Y" & Position + 5
        rng4 = "P" & Position + 1 & ":X" & Position + 1
        rng_Finanzamtsnummer = "D" & Position + 2 & ":L" & Position + 4
        rng_Identifikationsnummer = "P" & Position + 2 & ":X" & Position + 4
    ElseIf Spalte = 2 Then
        rng1 = "AA" & Position & ":AK" & Position + 5
        rng2 = "AB" & Position + 1 & ":AJ" & Position + 1
        rng3 = "AM" & Position & ":AW" & Position + 5
        rng4 = "AN" & Position + 1 & ":AV" & Position + 1
        rng_Finanzamtsnummer = "AB" & Position + 2 & ":AJ" & Position + 4
        rng_Identifikationsnummer = "AN" & Position + 2 & ":AV" & Position + 4
    End If
    
    With Worksheets("Personalfragebogen")
        Call Mdl_Formatierung.Zeilenhoehen_anpassen(Position)
        
        'Finanzamtsnummer
        With .Range(rng1)
            With .Interior
                .ColorIndex = 2
                .Pattern = xlSolid
            End With
            If Spalte = 2 Then
                With .Borders(xlEdgeLeft)
                    .LineStyle = xlContinuous
                    .Weight = xlThin
                    .ColorIndex = 1
                End With
            End If
            With .Borders(xlEdgeTop)
                .LineStyle = xlContinuous
                .Weight = xlThin
                .ColorIndex = 1
            End With
        End With
        
        With .Range(rng2)
            .HorizontalAlignment = xlLeft
            .VerticalAlignment = xlCenter
            .MergeCells = True
            .Value = "Finanzamtsnummer"
            With .Font
                .Name = "Verdana"
                .Size = 8
                .Bold = False
                .ColorIndex = 1
            End With
        End With
        
        With .Range(rng_Finanzamtsnummer)
            .HorizontalAlignment = xlLeft
            .VerticalAlignment = xlCenter
            .MergeCells = True
            .Locked = False
            .NumberFormat = "@"
            With .Font
                .Name = "Verdana"
                .Size = 12
                .Bold = False
                .ColorIndex = 1
            End With
            With .Borders(xlEdgeLeft)
                .LineStyle = xlContinuous
                .Weight = xlThin
                .ColorIndex = 1
            End With
            With .Borders(xlEdgeTop)
                .LineStyle = xlContinuous
                .Weight = xlThin
                .ColorIndex = 1
            End With
            With .Borders(xlEdgeBottom)
                .LineStyle = xlContinuous
                .Weight = xlThin
                .ColorIndex = 1
            End With
            With .Borders(xlEdgeRight)
                .LineStyle = xlContinuous
                .Weight = xlThin
                .ColorIndex = 1
            End With
        End With
        
        'Identifikationsnummer
        With .Range(rng3)
            With .Interior
                .ColorIndex = 2
                .Pattern = xlSolid
            End With
            With .Borders(xlEdgeLeft)
                .LineStyle = xlContinuous
                .Weight = xlThin
                .ColorIndex = 1
            End With
            With .Borders(xlEdgeTop)
                .LineStyle = xlContinuous
                .Weight = xlThin
                .ColorIndex = 1
            End With
        End With
        
        With .Range(rng4)
            .HorizontalAlignment = xlLeft
            .VerticalAlignment = xlCenter
            .MergeCells = True
            .Value = "Identifikationsnummer"
            With .Font
                .Name = "Verdana"
                .Size = 8
                .Bold = False
                .ColorIndex = 1
            End With
        End With
        
        With .Range(rng_Identifikationsnummer)
            .HorizontalAlignment = xlLeft
            .VerticalAlignment = xlCenter
            .MergeCells = True
            .Locked = False
            .NumberFormat = "@"
            With .Font
                .Name = "Verdana"
                .Size = 12
                .Bold = False
                .ColorIndex = 1
            End With
            With .Borders(xlEdgeLeft)
                .LineStyle = xlContinuous
                .Weight = xlThin
                .ColorIndex = 1
            End With
            With .Borders(xlEdgeTop)
                .LineStyle = xlContinuous
                .Weight = xlThin
                .ColorIndex = 1
            End With
            With .Borders(xlEdgeBottom)
                .LineStyle = xlContinuous
                .Weight = xlThin
                .ColorIndex = 1
            End With
            With .Borders(xlEdgeRight)
                .LineStyle = xlContinuous
                .Weight = xlThin
                .ColorIndex = 1
            End With
        End With
    End With
    
    Datenfeld_Finanzamtsnummer_Identifikationsnummer = Left(rng_Finanzamtsnummer, InStr(rng_Finanzamtsnummer, ":") - 1) & ";" & _
                                 Left(rng_Identifikationsnummer, InStr(rng_Identifikationsnummer, ":") - 1)
End Function

Private Function Datenfeld_KV_RV(Spalte As Integer)
    Dim rng1 As String
    Dim rng2 As String
    Dim rng3 As String
    Dim rng4 As String
    Dim rng_KV As String
    Dim rng_RV As String
    
    If Spalte = 1 Then
        rng1 = "C" & Position & ":M" & Position + 5
        rng2 = "D" & Position + 1 & ":L" & Position + 1
        rng3 = "O" & Position & ":Y" & Position + 5
        rng4 = "P" & Position + 1 & ":X" & Position + 1
        rng_KV = "D" & Position + 2 & ":L" & Position + 4
        rng_RV = "P" & Position + 2 & ":X" & Position + 4
    ElseIf Spalte = 2 Then
        rng1 = "AA" & Position & ":AK" & Position + 5
        rng2 = "AB" & Position + 1 & ":AJ" & Position + 1
        rng3 = "AM" & Position & ":AW" & Position + 5
        rng4 = "AN" & Position + 1 & ":AV" & Position + 1
        rng_KV = "AB" & Position + 2 & ":AJ" & Position + 4
        rng_RV = "AN" & Position + 2 & ":AV" & Position + 4
    End If
    
    With Worksheets("Personalfragebogen")
        Call Mdl_Formatierung.Zeilenhoehen_anpassen(Position)
        
        'KV
        With .Range(rng1)
            With .Interior
                .ColorIndex = 2
                .Pattern = xlSolid
            End With
            With .Borders(xlEdgeLeft)
                .LineStyle = xlContinuous
                .Weight = xlThick
                .ColorIndex = 1
            End With
            With .Borders(xlEdgeTop)
                .LineStyle = xlContinuous
                .Weight = xlThin
                .ColorIndex = 1
            End With
        End With
        
        With .Range(rng2)
            .HorizontalAlignment = xlLeft
            .VerticalAlignment = xlCenter
            .MergeCells = True
            .Value = "KV"
            With .Font
                .Name = "Verdana"
                .Size = 8
                .Bold = False
                .ColorIndex = 1
            End With
        End With
        
        With .Range(rng_KV)
            .HorizontalAlignment = xlLeft
            .VerticalAlignment = xlCenter
            .MergeCells = True
            With .Font
                .Name = "Verdana"
                .Size = 12
                .Bold = False
                .ColorIndex = 1
            End With
        End With
        
        'RV
        With .Range(rng3)
            With .Interior
                .ColorIndex = 2
                .Pattern = xlSolid
            End With
            With .Borders(xlEdgeLeft)
                .LineStyle = xlContinuous
                .Weight = xlThick
                .ColorIndex = 1
            End With
            With .Borders(xlEdgeTop)
                .LineStyle = xlContinuous
                .Weight = xlThin
                .ColorIndex = 1
            End With
        End With
        
        With .Range(rng4)
            .HorizontalAlignment = xlLeft
            .VerticalAlignment = xlCenter
            .MergeCells = True
            .Value = "RV"
            With .Font
                .Name = "Verdana"
                .Size = 8
                .Bold = False
                .ColorIndex = 1
            End With
        End With
        
        With .Range(rng_RV)
            .HorizontalAlignment = xlLeft
            .VerticalAlignment = xlCenter
            .MergeCells = True
            With .Font
                .Name = "Verdana"
                .Size = 12
                .Bold = False
                .ColorIndex = 1
            End With
        End With
    End With
    
    Datenfeld_KV_RV = Left(rng_KV, InStr(rng_KV, ":") - 1) & ";" & _
                                 Left(rng_RV, InStr(rng_RV, ":") - 1)
End Function

Private Function Datenfeld_AV_PV(Spalte As Integer)
    Dim rng1 As String
    Dim rng2 As String
    Dim rng3 As String
    Dim rng4 As String
    Dim rng_AV As String
    Dim rng_PV As String
    
    If Spalte = 1 Then
        rng1 = "C" & Position & ":M" & Position + 5
        rng2 = "D" & Position + 1 & ":L" & Position + 1
        rng3 = "O" & Position & ":Y" & Position + 5
        rng4 = "P" & Position + 1 & ":X" & Position + 1
        rng_AV = "D" & Position + 2 & ":L" & Position + 4
        rng_PV = "P" & Position + 2 & ":X" & Position + 4
    ElseIf Spalte = 2 Then
        rng1 = "AA" & Position & ":AK" & Position + 5
        rng2 = "AB" & Position + 1 & ":AJ" & Position + 1
        rng3 = "AM" & Position & ":AW" & Position + 5
        rng4 = "AN" & Position + 1 & ":AV" & Position + 1
        rng_AV = "AB" & Position + 2 & ":AJ" & Position + 4
        rng_PV = "AN" & Position + 2 & ":AV" & Position + 4
    End If
    
    With Worksheets("Personalfragebogen")
        Call Mdl_Formatierung.Zeilenhoehen_anpassen(Position)
        
        'AV
        With .Range(rng1)
            With .Interior
                .ColorIndex = 2
                .Pattern = xlSolid
            End With
            With .Borders(xlEdgeLeft)
                .LineStyle = xlContinuous
                .Weight = xlThick
                .ColorIndex = 1
            End With
            With .Borders(xlEdgeTop)
                .LineStyle = xlContinuous
                .Weight = xlThin
                .ColorIndex = 1
            End With
        End With
        
        With .Range(rng2)
            .HorizontalAlignment = xlLeft
            .VerticalAlignment = xlCenter
            .MergeCells = True
            .Value = "AV"
            With .Font
                .Name = "Verdana"
                .Size = 8
                .Bold = False
                .ColorIndex = 1
            End With
        End With
        
        With .Range(rng_AV)
            .HorizontalAlignment = xlLeft
            .VerticalAlignment = xlCenter
            .MergeCells = True
            With .Font
                .Name = "Verdana"
                .Size = 12
                .Bold = False
                .ColorIndex = 1
            End With
        End With
        
        'PV
        With .Range(rng3)
            With .Interior
                .ColorIndex = 2
                .Pattern = xlSolid
            End With
            With .Borders(xlEdgeLeft)
                .LineStyle = xlContinuous
                .Weight = xlThick
                .ColorIndex = 1
            End With
            With .Borders(xlEdgeTop)
                .LineStyle = xlContinuous
                .Weight = xlThin
                .ColorIndex = 1
            End With
        End With
        
        With .Range(rng4)
            .HorizontalAlignment = xlLeft
            .VerticalAlignment = xlCenter
            .MergeCells = True
            .Value = "PV"
            With .Font
                .Name = "Verdana"
                .Size = 8
                .Bold = False
                .ColorIndex = 1
            End With
        End With
        
        With .Range(rng_PV)
            .HorizontalAlignment = xlLeft
            .VerticalAlignment = xlCenter
            .MergeCells = True
            With .Font
                .Name = "Verdana"
                .Size = 12
                .Bold = False
                .ColorIndex = 1
            End With
        End With
    End With
    
    Datenfeld_AV_PV = Left(rng_AV, InStr(rng_AV, ":") - 1) & ";" & _
                                 Left(rng_PV, InStr(rng_PV, ":") - 1)
End Function

Private Function Datenfeld_SV_rechtliche_Beurteilung() As String
    Dim rng_KV As String
    Dim rng_RV As String
    Dim rng_AV As String
    Dim rng_PV As String
    
    With Worksheets("Personalfragebogen")
        Call Mdl_Formatierung.Zeilenhoehen_anpassen(Position)

        With .Range("C" & Position & ":AW" & Position + 5)
            With .Interior
                .ColorIndex = 2
                .Pattern = xlSolid
            End With
            With .Borders(xlEdgeLeft)
                .LineStyle = xlContinuous
                .Weight = xlThick
                .ColorIndex = 1
            End With
            With .Borders(xlEdgeTop)
                .LineStyle = xlContinuous
                .Weight = xlThin
                .ColorIndex = 1
            End With
        End With
        With .Range("D" & Position + 1 & ":AV" & Position + 1)
            .HorizontalAlignment = xlLeft
            .VerticalAlignment = xlCenter
            .MergeCells = True
            .Value = "SV-rechtliche Beurteilung"
            With .Font
                .Name = "Verdana"
                .Size = 8
                .Bold = False
                .ColorIndex = 1
            End With
        End With
        
        'KV
        With .Range("D" & Position + 2 & ":D" & Position + 4)
            .HorizontalAlignment = xlLeft
            .VerticalAlignment = xlTop
            .MergeCells = True
            .Value = "KV"
            With .Font
                .Name = "Verdana"
                .Size = 12
                .Bold = False
                .ColorIndex = 1
            End With
        End With
        rng_KV = "E" & Position + 2 & ":L" & Position + 4
        With .Range(rng_KV)
            .HorizontalAlignment = xlLeft
            .VerticalAlignment = xlCenter
            .MergeCells = True
            With .Font
                .Name = "Verdana"
                .Size = 16
                .Bold = False
                .ColorIndex = 1
            End With
        End With
        
        'RV
        With .Range("P" & Position + 2 & ":P" & Position + 4)
            .HorizontalAlignment = xlLeft
            .VerticalAlignment = xlTop
            .MergeCells = True
            .Value = "RV"
            With .Font
                .Name = "Verdana"
                .Size = 12
                .Bold = False
                .ColorIndex = 1
            End With
        End With
        rng_RV = "Q" & Position + 2 & ":X" & Position + 4
        With .Range(rng_RV)
            .HorizontalAlignment = xlLeft
            .VerticalAlignment = xlCenter
            .MergeCells = True
            With .Font
                .Name = "Verdana"
                .Size = 16
                .Bold = False
                .ColorIndex = 1
            End With
        End With
        
        'AV
        With .Range("AB" & Position + 2 & ":AB" & Position + 4)
            .HorizontalAlignment = xlLeft
            .VerticalAlignment = xlTop
            .MergeCells = True
            .Value = "AV"
            With .Font
                .Name = "Verdana"
                .Size = 12
                .Bold = False
                .ColorIndex = 1
            End With
        End With
        rng_AV = "AC" & Position + 2 & ":AJ" & Position + 4
        With .Range(rng_AV)
            .HorizontalAlignment = xlLeft
            .VerticalAlignment = xlCenter
            .MergeCells = True
            With .Font
                .Name = "Verdana"
                .Size = 16
                .Bold = False
                .ColorIndex = 1
            End With
        End With
        
        'PV
        With .Range("AN" & Position + 2 & ":AN" & Position + 4)
            .HorizontalAlignment = xlLeft
            .VerticalAlignment = xlTop
            .MergeCells = True
            .Value = "PV"
            With .Font
                .Name = "Verdana"
                .Size = 12
                .Bold = False
                .ColorIndex = 1
            End With
        End With
        rng_PV = "AO" & Position + 2 & ":AV" & Position + 4
        With .Range(rng_PV)
            .HorizontalAlignment = xlLeft
            .VerticalAlignment = xlCenter
            .MergeCells = True
            With .Font
                .Name = "Verdana"
                .Size = 16
                .Bold = False
                .ColorIndex = 1
            End With
        End With
    End With
    
    Datenfeld_SV_rechtliche_Beurteilung = Left(rng_KV, InStr(rng_KV, ":") - 1) & ";" & _
                                          Left(rng_RV, InStr(rng_RV, ":") - 1) & ";" & _
                                          Left(rng_AV, InStr(rng_AV, ":") - 1) & ";" & _
                                          Left(rng_PV, InStr(rng_PV, ":") - 1)
End Function

Private Function Datenfeld_RV_Option() As String
    Dim rng As String
    
    With Worksheets("Personalfragebogen")
        Call Mdl_Formatierung.Zeilenhoehen_anpassen(Position)
    
        With .Range("C" & Position & ":AW" & Position + 5)
            With .Interior
                .ColorIndex = 2
                .Pattern = xlSolid
            End With
            With .Borders(xlEdgeTop)
                .LineStyle = xlContinuous
                .Weight = xlThin
                .ColorIndex = 1
            End With
        End With

        'Beschreibungstext
        With .Range("D" & Position + 1 & ":X" & Position + 1)
            .HorizontalAlignment = xlLeft
            .VerticalAlignment = xlCenter
            .MergeCells = True
            .Value = "Nur bei geringf|fffd|gig Besch|fffd|ftigten:"
            With .Font
                .Name = "Verdana"
                .Size = 8
                .Bold = True
                .ColorIndex = 1
            End With
        End With
        With .Range("D" & Position + 2 & ":X" & Position + 4)
            .HorizontalAlignment = xlLeft
            .VerticalAlignment = xlCenter
            .MergeCells = True
            .Value = "Option f|fffd|r Aufstockung der RV-Beitr|fffd|ge (|fffd| 5 Abs. 2 Satz 2 SGB VI)"
            With .Font
                .Name = "Verdana"
                .Size = 8
                .Bold = False
                .ColorIndex = 1
            End With
        End With

        'ComboBox
        With .Range("AB" & Position + 1 & ":AV" & Position + 1)
            .HorizontalAlignment = xlLeft
            .VerticalAlignment = xlCenter
            .MergeCells = True
            With .Font
                .Name = "Verdana"
                .Size = 8
                .Bold = False
                .ColorIndex = 1
            End With
        End With
        rng = "AB" & Position + 2 & ":AV" & Position + 4
        With .Range(rng)
            .HorizontalAlignment = xlLeft
            .VerticalAlignment = xlCenter
            .MergeCells = True
            .Locked = True
            With .Font
                .Name = "Verdana"
                .Size = 12
                .Bold = False
                .ColorIndex = 1
            End With
        End With
    End With
        
    Datenfeld_RV_Option = rng
End Function

Private Function Datenfeld_Entlohnung() As String
    Dim rng_Bezeichnung As String
    Dim rng_Betrag As String
    Dim rng_gueltig_ab_1 As String
    Dim rng_Stundenlohn As String
    Dim rng_gueltig_ab_2 As String
    
    With Worksheets("Personalfragebogen")
        Call Mdl_Formatierung.Zeilenhoehen_anpassen(Position)

        With .Range("C" & Position & ":Y" & Position + 5)
            With .Interior
                .ColorIndex = 2
                .Pattern = xlSolid
            End With
            With .Borders(xlEdgeLeft)
                .LineStyle = xlContinuous
                .Weight = xlThick
                .ColorIndex = 1
            End With
        End With
        With .Range("AA" & Position & ":AW" & Position + 5)
            With .Interior
                .ColorIndex = 2
                .Pattern = xlSolid
            End With
            With .Borders(xlEdgeLeft)
                .LineStyle = xlContinuous
                .Weight = xlThick
                .ColorIndex = 1
            End With
        End With
        With .Range("C" & Position & ":AW" & Position + 5)
            With .Borders(xlEdgeTop)
                .LineStyle = xlContinuous
                .Weight = xlThin
                .ColorIndex = 1
            End With
        End With
        
       'Bezeichnung
        With .Range("D" & Position + 1 & ":H" & Position + 1)
            .HorizontalAlignment = xlLeft
            .VerticalAlignment = xlCenter
            .MergeCells = True
            .Value = "Bezeichnung"
            With .Font
                .Name = "Verdana"
                .Size = 8
                .Bold = False
                .ColorIndex = 1
            End With
        End With
        rng_Bezeichnung = "D" & Position + 2 & ":H" & Position + 4
        With .Range(rng_Bezeichnung)
            .HorizontalAlignment = xlLeft
            .VerticalAlignment = xlCenter
            .MergeCells = True
            .Locked = False
            .NumberFormat = "@"
            With .Font
                .Name = "Verdana"
                .Size = 12
                .Bold = False
                .ColorIndex = 1
            End With
            With .Borders(xlEdgeLeft)
                .LineStyle = xlContinuous
                .Weight = xlThin
                .ColorIndex = 1
            End With
            With .Borders(xlEdgeTop)
                .LineStyle = xlContinuous
                .Weight = xlThin
                .ColorIndex = 1
            End With
            With .Borders(xlEdgeBottom)
                .LineStyle = xlContinuous
                .Weight = xlThin
                .ColorIndex = 1
            End With
            With .Borders(xlEdgeRight)
                .LineStyle = xlContinuous
                .Weight = xlThin
                .ColorIndex = 1
            End With
        End With

        'Betrag
        With .Range("L" & Position + 1 & ":P" & Position + 1)
            .HorizontalAlignment = xlLeft
            .VerticalAlignment = xlCenter
            .MergeCells = True
            .Value = "Betrag"
            With .Font
                .Name = "Verdana"
                .Size = 8
                .Bold = False
                .ColorIndex = 1
            End With
        End With
        rng_Betrag = "L" & Position + 2 & ":P" & Position + 4
        With .Range(rng_Betrag)
            .HorizontalAlignment = xlLeft
            .VerticalAlignment = xlCenter
            .MergeCells = True
            .Locked = False
            .NumberFormat = "@"
            With .Font
                .Name = "Verdana"
                .Size = 12
                .Bold = False
                .ColorIndex = 1
            End With
            With .Borders(xlEdgeLeft)
                .LineStyle = xlContinuous
                .Weight = xlThin
                .ColorIndex = 1
            End With
            With .Borders(xlEdgeTop)
                .LineStyle = xlContinuous
                .Weight = xlThin
                .ColorIndex = 1
            End With
            With .Borders(xlEdgeBottom)
                .LineStyle = xlContinuous
                .Weight = xlThin
                .ColorIndex = 1
            End With
            With .Borders(xlEdgeRight)
                .LineStyle = xlContinuous
                .Weight = xlThin
                .ColorIndex = 1
            End With
        End With

        'g|fffd|ltig ab (MM/JJJJ)
        With .Range("T" & Position + 1 & ":X" & Position + 1)
            .HorizontalAlignment = xlLeft
            .VerticalAlignment = xlCenter
            .MergeCells = True
            .Value = "g|fffd|ltig ab (MM/JJJJ)"
            With .Font
                .Name = "Verdana"
                .Size = 8
                .Bold = False
                .ColorIndex = 1
            End With
        End With
        rng_gueltig_ab_1 = "T" & Position + 2 & ":X" & Position + 4
        With .Range(rng_gueltig_ab_1)
            .HorizontalAlignment = xlLeft
            .VerticalAlignment = xlCenter
            .MergeCells = True
            .Locked = False
            .NumberFormat = "@"
            With .Font
                .Name = "Verdana"
                .Size = 12
                .Bold = False
                .ColorIndex = 1
            End With
            With .Borders(xlEdgeLeft)
                .LineStyle = xlContinuous
                .Weight = xlThin
                .ColorIndex = 1
            End With
            With .Borders(xlEdgeTop)
                .LineStyle = xlContinuous
                .Weight = xlThin
                .ColorIndex = 1
            End With
            With .Borders(xlEdgeBottom)
                .LineStyle = xlContinuous
                .Weight = xlThin
                .ColorIndex = 1
            End With
            With .Borders(xlEdgeRight)
                .LineStyle = xlContinuous
                .Weight = xlThin
                .ColorIndex = 1
            End With
        End With
        
        'Stundenlohn
        With .Range("AB" & Position + 1 & ":AJ" & Position + 1)
            .HorizontalAlignment = xlLeft
            .VerticalAlignment = xlCenter
            .MergeCells = True
            .Value = "Stundenlohn"
            With .Font
                .Name = "Verdana"
                .Size = 8
                .Bold = False
                .ColorIndex = 1
            End With
        End With
        rng_Stundenlohn = "AB" & Position + 2 & ":AJ" & Position + 4
        With .Range(rng_Stundenlohn)
            .HorizontalAlignment = xlLeft
            .VerticalAlignment = xlCenter
            .MergeCells = True
            .Locked = False
            .NumberFormat = "@"
            With .Font
                .Name = "Verdana"
                .Size = 12
                .Bold = False
                .ColorIndex = 1
            End With
            With .Borders(xlEdgeLeft)
                .LineStyle = xlContinuous
                .Weight = xlThin
                .ColorIndex = 1
            End With
            With .Borders(xlEdgeTop)
                .LineStyle = xlContinuous
                .Weight = xlThin
                .ColorIndex = 1
            End With
            With .Borders(xlEdgeBottom)
                .LineStyle = xlContinuous
                .Weight = xlThin
                .ColorIndex = 1
            End With
            With .Borders(xlEdgeRight)
                .LineStyle = xlContinuous
                .Weight = xlThin
                .ColorIndex = 1
            End With
        End With

        'g|fffd|ltig ab (MM/JJJJ)
        With .Range("AN" & Position + 1 & ":AV" & Position + 1)
            .HorizontalAlignment = xlLeft
            .VerticalAlignment = xlCenter
            .MergeCells = True
            .Value = "g|fffd|ltig ab (MM/JJJJ)"
            With .Font
                .Name = "Verdana"
                .Size = 8
                .Bold = False
                .ColorIndex = 1
            End With
        End With
        rng_gueltig_ab_2 = "AN" & Position + 2 & ":AV" & Position + 4
        With .Range(rng_gueltig_ab_2)
            .HorizontalAlignment = xlLeft
            .VerticalAlignment = xlCenter
            .MergeCells = True
            .Locked = False
            .NumberFormat = "@"
            With .Font
                .Name = "Verdana"
                .Size = 12
                .Bold = False
                .ColorIndex = 1
            End With
            With .Borders(xlEdgeLeft)
                .LineStyle = xlContinuous
                .Weight = xlThin
                .ColorIndex = 1
            End With
            With .Borders(xlEdgeTop)
                .LineStyle = xlContinuous
                .Weight = xlThin
                .ColorIndex = 1
            End With
            With .Borders(xlEdgeBottom)
                .LineStyle = xlContinuous
                .Weight = xlThin
                .ColorIndex = 1
            End With
            With .Borders(xlEdgeRight)
                .LineStyle = xlContinuous
                .Weight = xlThin
                .ColorIndex = 1
            End With
        End With
    End With
    
    Datenfeld_Entlohnung = Left(rng_Bezeichnung, InStr(rng_Bezeichnung, ":") - 1) & ";" & _
                           Left(rng_Betrag, InStr(rng_Betrag, ":") - 1) & ";" & _
                           Left(rng_gueltig_ab_1, InStr(rng_gueltig_ab_1, ":") - 1) & ";" & _
                           Left(rng_Stundenlohn, InStr(rng_Stundenlohn, ":") - 1) & ";" & _
                           Left(rng_gueltig_ab_2, InStr(rng_gueltig_ab_2, ":") - 1)
End Function

Private Function Datenfeld_Betrag_AG_Anteil(Spalte As Integer)
    Dim rng1 As String
    Dim rng2 As String
    Dim rng3 As String
    Dim rng4 As String
    Dim rng_Betrag As String
    Dim rng_AG_Anteil As String
    
    If Spalte = 1 Then
        rng1 = "C" & Position & ":M" & Position + 5
        rng2 = "D" & Position + 1 & ":L" & Position + 1
        rng3 = "O" & Position & ":Y" & Position + 5
        rng4 = "P" & Position + 1 & ":X" & Position + 1
        rng_Betrag = "D" & Position + 2 & ":L" & Position + 4
        rng_AG_Anteil = "P" & Position + 2 & ":X" & Position + 4
    ElseIf Spalte = 2 Then
        rng1 = "AA" & Position & ":AK" & Position + 5
        rng2 = "AB" & Position + 1 & ":AJ" & Position + 1
        rng3 = "AM" & Position & ":AW" & Position + 5
        rng4 = "AN" & Position + 1 & ":AV" & Position + 1
        rng_Betrag = "AB" & Position + 2 & ":AJ" & Position + 4
        rng_AG_Anteil = "AN" & Position + 2 & ":AV" & Position + 4
    End If
    
    With Worksheets("Personalfragebogen")
        Call Mdl_Formatierung.Zeilenhoehen_anpassen(Position)
        
        'Betrag
        With .Range(rng1)
            With .Interior
                .ColorIndex = 2
                .Pattern = xlSolid
            End With
            If Spalte = 2 Then
                With .Borders(xlEdgeLeft)
                    .LineStyle = xlContinuous
                    .Weight = xlThin
                    .ColorIndex = 1
                End With
            End If
            With .Borders(xlEdgeTop)
                .LineStyle = xlContinuous
                .Weight = xlThin
                .ColorIndex = 1
            End With
        End With
        
        With .Range(rng2)
            .HorizontalAlignment = xlLeft
            .VerticalAlignment = xlCenter
            .MergeCells = True
            .Value = "Betrag"
            With .Font
                .Name = "Verdana"
                .Size = 8
                .Bold = False
                .ColorIndex = 1
            End With
        End With
        
        With .Range(rng_Betrag)
            .HorizontalAlignment = xlLeft
            .VerticalAlignment = xlCenter
            .MergeCells = True
            .Locked = False
            .NumberFormat = "@"
            With .Font
                .Name = "Verdana"
                .Size = 12
                .Bold = False
                .ColorIndex = 1
            End With
            With .Borders(xlEdgeLeft)
                .LineStyle = xlContinuous
                .Weight = xlThin
                .ColorIndex = 1
            End With
            With .Borders(xlEdgeTop)
                .LineStyle = xlContinuous
                .Weight = xlThin
                .ColorIndex = 1
            End With
            With .Borders(xlEdgeBottom)
                .LineStyle = xlContinuous
                .Weight = xlThin
                .ColorIndex = 1
            End With
            With .Borders(xlEdgeRight)
                .LineStyle = xlContinuous
                .Weight = xlThin
                .ColorIndex = 1
            End With
        End With
        
        'AG-Anteil
        With .Range(rng3)
            With .Interior
                .ColorIndex = 2
                .Pattern = xlSolid
            End With
            With .Borders(xlEdgeLeft)
                .LineStyle = xlContinuous
                .Weight = xlThick
                .ColorIndex = 1
            End With
            With .Borders(xlEdgeTop)
                .LineStyle = xlContinuous
                .Weight = xlThin
                .ColorIndex = 1
            End With
        End With
        
        With .Range(rng4)
            .HorizontalAlignment = xlLeft
            .VerticalAlignment = xlCenter
            .MergeCells = True
            .Value = "AG-Anteil (H|fffd|he monatlich)"
            With .Font
                .Name = "Verdana"
                .Size = 8
                .Bold = False
                .ColorIndex = 1
            End With
        End With
        
        With .Range(rng_AG_Anteil)
            .HorizontalAlignment = xlLeft
            .VerticalAlignment = xlCenter
            .MergeCells = True
            .Locked = False
            .NumberFormat = "@"
            With .Font
                .Name = "Verdana"
                .Size = 12
                .Bold = False
                .ColorIndex = 1
            End With
            With .Borders(xlEdgeLeft)
                .LineStyle = xlContinuous
                .Weight = xlThin
                .ColorIndex = 1
            End With
            With .Borders(xlEdgeTop)
                .LineStyle = xlContinuous
                .Weight = xlThin
                .ColorIndex = 1
            End With
            With .Borders(xlEdgeBottom)
                .LineStyle = xlContinuous
                .Weight = xlThin
                .ColorIndex = 1
            End With
            With .Borders(xlEdgeRight)
                .LineStyle = xlContinuous
                .Weight = xlThin
                .ColorIndex = 1
            End With
        End With
    End With
    
    Datenfeld_Betrag_AG_Anteil = Left(rng_Betrag, InStr(rng_Betrag, ":") - 1) & ";" & _
                                 Left(rng_AG_Anteil, InStr(rng_AG_Anteil, ":") - 1)
End Function

Private Function Datenfeld_Vorbesch|fffd|ftigungszeiten() As String
    Dim rng_von As String
    Dim rng_bis As String
    Dim rng_Art_der_Beschaeftigung As String
    Dim rng_Anzahl_der_Beschaeftigungstage As String
    
    With Worksheets("Personalfragebogen")
        Call Mdl_Formatierung.Zeilenhoehen_anpassen(Position)
    
        With .Range("C" & Position & ":AW" & Position + 5)
            With .Interior
                .ColorIndex = 2
                .Pattern = xlSolid
            End With
            With .Borders(xlEdgeTop)
                .LineStyle = xlContinuous
                .Weight = xlThin
                .ColorIndex = 1
            End With
        End With

        'von (TT.MM.JJJJ)
        With .Range("D" & Position + 1 & ":H" & Position + 1)
            .HorizontalAlignment = xlLeft
            .VerticalAlignment = xlCenter
            .MergeCells = True
            .Value = "von (TT.MM.JJJJ)"
            With .Font
                .Name = "Verdana"
                .Size = 8
                .Bold = False
                .ColorIndex = 1
            End With
        End With
        rng_von = "D" & Position + 2 & ":H" & Position + 4
        With .Range(rng_von)
            .HorizontalAlignment = xlLeft
            .VerticalAlignment = xlCenter
            .MergeCells = True
            .Locked = False
            .NumberFormat = "@"
            With .Font
                .Name = "Verdana"
                .Size = 12
                .Bold = False
                .ColorIndex = 1
            End With
            With .Borders(xlEdgeLeft)
                .LineStyle = xlContinuous
                .Weight = xlThin
                .ColorIndex = 1
            End With
            With .Borders(xlEdgeTop)
                .LineStyle = xlContinuous
                .Weight = xlThin
                .ColorIndex = 1
            End With
            With .Borders(xlEdgeBottom)
                .LineStyle = xlContinuous
                .Weight = xlThin
                .ColorIndex = 1
            End With
            With .Borders(xlEdgeRight)
                .LineStyle = xlContinuous
                .Weight = xlThin
                .ColorIndex = 1
            End With
        End With

        'bis (TT.MM.JJJJ)
        With .Range("L" & Position + 1 & ":P" & Position + 1)
            .HorizontalAlignment = xlLeft
            .VerticalAlignment = xlCenter
            .MergeCells = True
            .Value = "bis (TT.MM.JJJJ)"
            With .Font
                .Name = "Verdana"
                .Size = 8
                .Bold = False
                .ColorIndex = 1
            End With
        End With
        rng_bis = "L" & Position + 2 & ":P" & Position + 4
        With .Range(rng_bis)
            .HorizontalAlignment = xlLeft
            .VerticalAlignment = xlCenter
            .MergeCells = True
            .Locked = False
            .NumberFormat = "@"
            With .Font
                .Name = "Verdana"
                .Size = 12
                .Bold = False
                .ColorIndex = 1
            End With
            With .Borders(xlEdgeLeft)
                .LineStyle = xlContinuous
                .Weight = xlThin
                .ColorIndex = 1
            End With
            With .Borders(xlEdgeTop)
                .LineStyle = xlContinuous
                .Weight = xlThin
                .ColorIndex = 1
            End With
            With .Borders(xlEdgeBottom)
                .LineStyle = xlContinuous
                .Weight = xlThin
                .ColorIndex = 1
            End With
            With .Borders(xlEdgeRight)
                .LineStyle = xlContinuous
                .Weight = xlThin
                .ColorIndex = 1
            End With
        End With

        'Art der Besch|fffd|ftigung
        With .Range("T" & Position + 1 & ":AJ" & Position + 1)
            .HorizontalAlignment = xlLeft
            .VerticalAlignment = xlCenter
            .MergeCells = True
            .Value = "Art der Besch|fffd|ftigung"
            With .Font
                .Name = "Verdana"
                .Size = 8
                .Bold = False
                .ColorIndex = 1
            End With
        End With
        rng_Art_der_Beschaeftigung = "T" & Position + 2 & ":AJ" & Position + 4
        With .Range(rng_Art_der_Beschaeftigung)
            .HorizontalAlignment = xlLeft
            .VerticalAlignment = xlCenter
            .MergeCells = True
            .Locked = False
            .NumberFormat = "@"
            With .Font
                .Name = "Verdana"
                .Size = 12
                .Bold = False
                .ColorIndex = 1
            End With
            With .Borders(xlEdgeLeft)
                .LineStyle = xlContinuous
                .Weight = xlThin
                .ColorIndex = 1
            End With
            With .Borders(xlEdgeTop)
                .LineStyle = xlContinuous
                .Weight = xlThin
                .ColorIndex = 1
            End With
            With .Borders(xlEdgeBottom)
                .LineStyle = xlContinuous
                .Weight = xlThin
                .ColorIndex = 1
            End With
            With .Borders(xlEdgeRight)
                .LineStyle = xlContinuous
                .Weight = xlThin
                .ColorIndex = 1
            End With
        End With

        'Anzahl der Besch|fffd|ftigungstage
        With .Range("AN" & Position + 1 & ":AV" & Position + 1)
            .HorizontalAlignment = xlLeft
            .VerticalAlignment = xlCenter
            .MergeCells = True
            .Value = "Anzahl der Besch|fffd|ftigungstage"
            With .Font
                .Name = "Verdana"
                .Size = 8
                .Bold = False
                .ColorIndex = 1
            End With
        End With
        rng_Anzahl_der_Beschaeftigungstage = "AN" & Position + 2 & ":AV" & Position + 4
        With .Range(rng_Anzahl_der_Beschaeftigungstage)
            .HorizontalAlignment = xlLeft
            .VerticalAlignment = xlCenter
            .MergeCells = True
            .Locked = False
            .NumberFormat = "@"
            With .Font
                .Name = "Verdana"
                .Size = 12
                .Bold = False
                .ColorIndex = 1
            End With
            With .Borders(xlEdgeLeft)
                .LineStyle = xlContinuous
                .Weight = xlThin
                .ColorIndex = 1
            End With
            With .Borders(xlEdgeTop)
                .LineStyle = xlContinuous
                .Weight = xlThin
                .ColorIndex = 1
            End With
            With .Borders(xlEdgeBottom)
                .LineStyle = xlContinuous
                .Weight = xlThin
                .ColorIndex = 1
            End With
            With .Borders(xlEdgeRight)
                .LineStyle = xlContinuous
                .Weight = xlThin
                .ColorIndex = 1
            End With
        End With
    End With
    
    Datenfeld_Vorbesch|fffd|ftigungszeiten = Left(rng_von, InStr(rng_von, ":") - 1) & ";" & _
                                        Left(rng_bis, InStr(rng_bis, ":") - 1) & ";" & _
                                        Left(rng_Art_der_Beschaeftigung, InStr(rng_Art_der_Beschaeftigung, ":") - 1) & ";" & _
                                        Left(rng_Anzahl_der_Beschaeftigungstage, InStr(rng_Anzahl_der_Beschaeftigungstage, ":") - 1)
End Function

Private Function Datenfeld_weitere_Beschaeftigungen() As String
    Dim rng_von As String
    Dim rng_bis As String
    Dim rng_Arbeitgeber As String
    Dim rng_Art_der_Taetigkeit As String
    Dim rng_Woechentliche_Arbeitszeit As String
    
    With Worksheets("Personalfragebogen")
        Call Mdl_Formatierung.Zeilenhoehen_anpassen(Position)
    
        With .Range("C" & Position & ":AW" & Position + 5)
            With .Interior
                .ColorIndex = 2
                .Pattern = xlSolid
            End With
            With .Borders(xlEdgeTop)
                .LineStyle = xlContinuous
                .Weight = xlThin
                .ColorIndex = 1
            End With
        End With

        'von (TT.MM.JJJJ)
        With .Range("D" & Position + 1 & ":H" & Position + 1)
            .HorizontalAlignment = xlLeft
            .VerticalAlignment = xlCenter
            .MergeCells = True
            .Value = "von (TT.MM.JJJJ)"
            With .Font
                .Name = "Verdana"
                .Size = 8
                .Bold = False
                .ColorIndex = 1
            End With
        End With
        rng_von = "D" & Position + 2 & ":H" & Position + 4
        With .Range(rng_von)
            .HorizontalAlignment = xlLeft
            .VerticalAlignment = xlCenter
            .MergeCells = True
            .Locked = False
            .NumberFormat = "@"
            With .Font
                .Name = "Verdana"
                .Size = 12
                .Bold = False
                .ColorIndex = 1
            End With
            With .Borders(xlEdgeLeft)
                .LineStyle = xlContinuous
                .Weight = xlThin
                .ColorIndex = 1
            End With
            With .Borders(xlEdgeTop)
                .LineStyle = xlContinuous
                .Weight = xlThin
                .ColorIndex = 1
            End With
            With .Borders(xlEdgeBottom)
                .LineStyle = xlContinuous
                .Weight = xlThin
                .ColorIndex = 1
            End With
            With .Borders(xlEdgeRight)
                .LineStyle = xlContinuous
                .Weight = xlThin
                .ColorIndex = 1
            End With
        End With

        'bis (TT.MM.JJJJ)
        With .Range("L" & Position + 1 & ":P" & Position + 1)
            .HorizontalAlignment = xlLeft
            .VerticalAlignment = xlCenter
            .MergeCells = True
            .Value = "bis (TT.MM.JJJJ)"
            With .Font
                .Name = "Verdana"
                .Size = 8
                .Bold = False
                .ColorIndex = 1
            End With
        End With
        rng_bis = "L" & Position + 2 & ":P" & Position + 4
        With .Range(rng_bis)
            .HorizontalAlignment = xlLeft
            .VerticalAlignment = xlCenter
            .MergeCells = True
            .Locked = False
            .NumberFormat = "@"
            With .Font
                .Name = "Verdana"
                .Size = 12
                .Bold = False
                .ColorIndex = 1
            End With
            With .Borders(xlEdgeLeft)
                .LineStyle = xlContinuous
                .Weight = xlThin
                .ColorIndex = 1
            End With
            With .Borders(xlEdgeTop)
                .LineStyle = xlContinuous
                .Weight = xlThin
                .ColorIndex = 1
            End With
            With .Borders(xlEdgeBottom)
                .LineStyle = xlContinuous
                .Weight = xlThin
                .ColorIndex = 1
            End With
            With .Borders(xlEdgeRight)
                .LineStyle = xlContinuous
                .Weight = xlThin
                .ColorIndex = 1
            End With
        End With

        'Arbeitgeber
        With .Range("T" & Position + 1 & ":AB" & Position + 1)
            .HorizontalAlignment = xlLeft
            .VerticalAlignment = xlCenter
            .MergeCells = True
            .Value = "Arbeitgeber"
            With .Font
                .Name = "Verdana"
                .Size = 8
                .Bold = False
                .ColorIndex = 1
            End With
        End With
        rng_Arbeitgeber = "T" & Position + 2 & ":AB" & Position + 4
        With .Range(rng_Arbeitgeber)
            .HorizontalAlignment = xlLeft
            .VerticalAlignment = xlCenter
            .MergeCells = True
            .Locked = False
            .NumberFormat = "@"
            With .Font
                .Name = "Verdana"
                .Size = 12
                .Bold = False
                .ColorIndex = 1
            End With
            With .Borders(xlEdgeLeft)
                .LineStyle = xlContinuous
                .Weight = xlThin
                .ColorIndex = 1
            End With
            With .Borders(xlEdgeTop)
                .LineStyle = xlContinuous
                .Weight = xlThin
                .ColorIndex = 1
            End With
            With .Borders(xlEdgeBottom)
                .LineStyle = xlContinuous
                .Weight = xlThin
                .ColorIndex = 1
            End With
            With .Borders(xlEdgeRight)
                .LineStyle = xlContinuous
                .Weight = xlThin
                .ColorIndex = 1
            End With
        End With

        'Art der T|fffd|tigkeit
        With .Range("AF" & Position + 1 & ":AN" & Position + 1)
            .HorizontalAlignment = xlLeft
            .VerticalAlignment = xlCenter
            .MergeCells = True
            .Value = "Art der T|fffd|tigkeit"
            With .Font
                .Name = "Verdana"
                .Size = 8
                .Bold = False
                .ColorIndex = 1
            End With
        End With
        rng_Art_der_Taetigkeit = "AF" & Position + 2 & ":AN" & Position + 4
        With .Range(rng_Art_der_Taetigkeit)
            .HorizontalAlignment = xlLeft
            .VerticalAlignment = xlCenter
            .MergeCells = True
            .Locked = True
            With .Font
                .Name = "Verdana"
                .Size = 12
                .Bold = False
                .ColorIndex = 1
            End With
        End With
        
        'W|fffd|chentliche Arbeitszeit
        With .Range("AR" & Position + 1 & ":AV" & Position + 1)
            .HorizontalAlignment = xlLeft
            .VerticalAlignment = xlCenter
            .MergeCells = True
            .Value = "W|fffd|chentl. Arbeitszeit"
            With .Font
                .Name = "Verdana"
                .Size = 8
                .Bold = False
                .ColorIndex = 1
            End With
        End With
        rng_Woechentliche_Arbeitszeit = "AR" & Position + 2 & ":AV" & Position + 4
        With .Range(rng_Woechentliche_Arbeitszeit)
            .HorizontalAlignment = xlLeft
            .VerticalAlignment = xlCenter
            .MergeCells = True
            .Locked = False
            .NumberFormat = "@"
            With .Font
                .Name = "Verdana"
                .Size = 12
                .Bold = False
                .ColorIndex = 1
            End With
            With .Borders(xlEdgeLeft)
                .LineStyle = xlContinuous
                .Weight = xlThin
                .ColorIndex = 1
            End With
            With .Borders(xlEdgeTop)
                .LineStyle = xlContinuous
                .Weight = xlThin
                .ColorIndex = 1
            End With
            With .Borders(xlEdgeBottom)
                .LineStyle = xlContinuous
                .Weight = xlThin
                .ColorIndex = 1
            End With
            With .Borders(xlEdgeRight)
                .LineStyle = xlContinuous
                .Weight = xlThin
                .ColorIndex = 1
            End With
        End With
    End With
    
    Datenfeld_weitere_Beschaeftigungen = Left(rng_von, InStr(rng_von, ":") - 1) & ";" & _
                                        Left(rng_bis, InStr(rng_bis, ":") - 1) & ";" & _
                                        Left(rng_Arbeitgeber, InStr(rng_Arbeitgeber, ":") - 1) & ";" & _
                                        Left(rng_Art_der_Taetigkeit, InStr(rng_Art_der_Taetigkeit, ":") - 1) & ";" & _
                                        Left(rng_Woechentliche_Arbeitszeit, InStr(rng_Woechentliche_Arbeitszeit, ":") - 1)
End Function
Attribute VB_Name = "mdl_Main"
Option Explicit
Public Minijob As Boolean
Public Dialog_Export As uf_Export
Public Dialog_Export_Speichern_unter As uf_Export_Speichern_unter

Public Sub Fragebogen_erzeugen()

    'Blattschutz und Eingabepr|fffd|fung deaktivieren
    Call Mdl_Hilfsfunktionen.Blattschutz_aufheben("Personalfragebogen")
    Application.EnableEvents = False
    
    If Minijob Then
        Mdl_Steuerelemente.Position = 287.25
        mdl_Datenfelder.Position = 13
    Else
        Mdl_Steuerelemente.Position = 267
        mdl_Datenfelder.Position = 11
    End If
    
    'Tabelle formatieren
    Worksheets("Personalfragebogen").Cells.RowHeight = 12.75
    Call Mdl_Formatierung.Spaltenbreiten_anpassen("Personalfragebogen")
    Call Mdl_Formatierung.Header_formatieren
    
    'Gew|fffd|hlete Datenbl|fffd|cke einf|fffd|gen
    If Minijob Then
        Call mdl_Datenfelder.Block_Allgemein
        Call mdl_Datenfelder.Block_Persoenliche_Angaben
        Call mdl_Datenfelder.Block_Beschaeftigung
        Call mdl_Datenfelder.Block_Steuer
        Call mdl_Datenfelder.Block_Sozialversicherung
        Call mdl_Datenfelder.Block_Entlohnung
        Call mdl_Datenfelder.Block_VWL
        Call mdl_Datenfelder.Block_weitere_Beschaeftigungen
    Else
        Call mdl_Datenfelder.Block_Allgemein
        Call mdl_Datenfelder.Block_Persoenliche_Angaben
        Call mdl_Datenfelder.Block_Beschaeftigung
        Call mdl_Datenfelder.Block_Befristung
        Call mdl_Datenfelder.Block_Steuer
        Call mdl_Datenfelder.Block_Sozialversicherung
        Call mdl_Datenfelder.Block_Entlohnung
        Call mdl_Datenfelder.Block_VWL
        Call mdl_Datenfelder.Block_Vorbeschaeftigungszeiten
    End If
    
    'Steuerelemente hinzuf|fffd|gen
    Call Mdl_Steuerelemente.Steuerelemente_initialisieren
    
    Worksheets("Verwaltung").Cells(Fragebogen_erzeugt, 2).Value = "X"
    
    'Erstes Eingabefeld ausw|fffd|hlen
    Worksheets("Personalfragebogen").Select
    Worksheets("Personalfragebogen").Range(Split(Worksheets("Assistent").Cells(Firma, 4).Value, ";")(0)).Select
    Call Startseite_loeschen
    
    'Blattschutz und Eingebepr|fffd|fung aktivieren
    Call Mdl_Hilfsfunktionen.Blattschutz_setzen("Personalfragebogen")
    Application.EnableEvents = True
    
End Sub

Sub Speichern_unter()
    Dim strDateiname As String
    
    With Worksheets("Assistent")
        If Not ThisWorkbook.Name = "Personalfragebogen - Neue Mitarbeiter.xls" And Not ThisWorkbook.Name = "Personalfragebogen - Minijob.xls" Then
            Application.Dialogs(xlDialogSaveAs).Show
        Else
            If Not Mid(.Cells(Name_des_Mitarbeiters_Personalnummer, 6).Value, InStr(.Cells(Name_des_Mitarbeiters_Personalnummer, 6).Value, ";") + 1) = "" _
                                And Not Left(.Cells(Name_des_Mitarbeiters_Personalnummer, 6).Value, InStr(.Cells(Name_des_Mitarbeiters_Personalnummer, 6).Value, ";") - 1) = "" Then
                strDateiname = "PFB - " & Mid(.Cells(Name_des_Mitarbeiters_Personalnummer, 6).Value, InStr(.Cells(Name_des_Mitarbeiters_Personalnummer, 6).Value, ";") + 1) & _
                                " - " & Left(.Cells(Name_des_Mitarbeiters_Personalnummer, 6).Value, InStr(.Cells(Name_des_Mitarbeiters_Personalnummer, 6).Value, ";") - 1)
            Else
                strDateiname = "PFB"
            End If
            Application.Dialogs(xlDialogSaveAs).Show (strDateiname)
        End If
    End With
End Sub

Public Sub Werte_auslesen()
    Dim i As Integer
    Dim str As String
    Dim rng As String
    Dim dat As String
    
    With Worksheets("Assistent")
        'Zuvor gespeicherte Werte l|fffd|schen
        .Columns("F:G").ClearContents
        
        'ComboBoxen auslesen
        Call Mdl_Steuerelemente.Steuerelemente_auslesen
        
        'Datenfelder auslesen
        For i = Firma To weitere_Beschaeftigungen_5
            If Not .Cells(i, 4).Value = "" And .Cells(i, 5).Value = "" Or _
                Not .Cells(i, 4).Value = "" And (i = weitere_Beschaeftigungen Or i = weitere_Beschaeftigungen_2 Or i = weitere_Beschaeftigungen_3 _
                Or i = weitere_Beschaeftigungen_4 Or i = weitere_Beschaeftigungen_5) Then
                str = .Cells(i, 4).Value
                dat = ""
                Do Until str = ""
                    If InStr(str, ";") = 0 Then
                        rng = str
                        str = ""
                    Else
                        rng = Left(str, InStr(str, ";") - 1)
                        str = Mid(str, InStr(str, ";") + 1)
                    End If
                    dat = dat & Worksheets("Personalfragebogen").Range(rng).Value & ";"
                Loop
                .Cells(i, 6).Value = Left(dat, Len(dat) - 1)
            End If
        Next i
    End With
End Sub

Public Sub Gespeicherte_Werte_eintragen()
    Dim i As Integer
    Dim str As String
    Dim rng As String
    Dim dat As String
    Dim valdat As String
    
    'Blattschutz und Eingabepr|fffd|fung deaktivieren
    Call Mdl_Hilfsfunktionen.Blattschutz_aufheben("Personalfragebogen")
    Application.EnableEvents = False
    
    With Worksheets("Assistent")
        For i = Firma To weitere_Beschaeftigungen_5
            If Not .Cells(i, 4).Value = "" And .Cells(i, 5).Value = "" Or _
                Not .Cells(i, 4).Value = "" And (i = weitere_Beschaeftigungen Or i = weitere_Beschaeftigungen_2 Or i = weitere_Beschaeftigungen_3 _
                Or i = weitere_Beschaeftigungen_4 Or i = weitere_Beschaeftigungen_5) Then
                str = .Cells(i, 4).Value
                dat = .Cells(i, 6).Value
                Do Until str = ""
                    If InStr(str, ";") = 0 Then
                        rng = str
                        str = ""
                        valdat = dat
                    Else
                        rng = Left(str, InStr(str, ";") - 1)
                        str = Mid(str, InStr(str, ";") + 1)
                        If Not dat = "" Then
                            valdat = Left(dat, InStr(dat, ";") - 1)
                            dat = Mid(dat, InStr(dat, ";") + 1)
                        Else
                            valdat = ""
                        End If
                    End If
                    Worksheets("Personalfragebogen").Range(rng).Value = valdat
                Loop
            End If
        Next i
    End With
    
    'Erstes Eingabefeld ausw|fffd|hlen
    Worksheets("Personalfragebogen").Select
    Worksheets("Personalfragebogen").Range(Split(Worksheets("Assistent").Cells(Firma, 4).Value, ";")(0)).Select
    
    'Blattschutz und Eingebepr|fffd|fung aktivieren
    Call Mdl_Hilfsfunktionen.Blattschutz_setzen("Personalfragebogen")
    Application.EnableEvents = True
    
End Sub

Private Sub Startseite_loeschen()
    Dim ws As Worksheet
    
    For Each ws In Worksheets
        If ws.Name = "Start" Then
            Application.DisplayAlerts = False
            ws.Delete
            Application.DisplayAlerts = True
            Exit For
        End If
    Next ws
End Sub

Public Sub Dialogwechsel(von As Dialog, zu As Dialog)
    Select Case zu
        Case Export
            Call Dialog_Export_zeigen(von)
        Case Export_Speichern_unter
            Call Dialog_Export_Speichern_unter_zeigen(von)
        Case kein_Dialog
            Call Dialoge_entladen(von)
    End Select
End Sub

Public Sub Dialoge_entladen(von)
    Select Case von
        Case Export
            Dialog_Export.Hide
        Case Export_Speichern_unter
            Dialog_Export_Speichern_unter.Hide
    End Select
    Set Dialog_Export = Nothing
    Set Dialog_Export_Speichern_unter = Nothing
End Sub

Private Sub Dialog_Export_zeigen(von As Dialog)
    Select Case von
        Case kein_Dialog
            If Dialog_Export Is Nothing Then
                Set Dialog_Export = New uf_Export
            End If
        Case Export_Speichern_unter
            Dialog_Export_Speichern_unter.Hide
    End Select
    Dialog_Export.cb_Weiter.SetFocus
    Dialog_Export.Show False
End Sub

Private Sub Dialog_Export_Speichern_unter_zeigen(von As Dialog)
    Select Case von
        Case Export
            If Dialog_Export_Speichern_unter Is Nothing Then
                Set Dialog_Export_Speichern_unter = New uf_Export_Speichern_unter
            End If
            Dialog_Export.Hide
    End Select
    Dialog_Export_Speichern_unter.cb_Erzeugen.SetFocus
    Dialog_Export_Speichern_unter.Show False
End Sub
Attribute VB_Name = "uf_Export"
Attribute VB_Base = "0{C73E61A5-5380-48A1-A23B-E3462246FC2C}{B205979F-9AAD-4F25-ADA9-61ECD7675794}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Option Explicit

Private Sub cb_Weiter_Click()
    If Not Me.ob_LuG And Not Me.ob_LODAS Then
        MsgBox "Es wurde kein Programm f|fffd|r den Import ausgew|fffd|hlt." & vbCrLf & vbCrLf & VBA.Chr$(187) & _
                " Bitte w|fffd|hlen Sie ein Programm f|fffd|r den Import.", _
                vbInformation
        Exit Sub
    End If
    If Me.tbx_Beraternummer.Value = "" Then
        MsgBox "Es wurde keine Beraternummer eingegeben." & vbCrLf & vbCrLf & VBA.Chr$(187) & _
                " Bitte geben Sie eine Beraternummer ein.", _
                vbInformation
        Exit Sub
    End If
    If Me.tbx_Mandantennummer.Value = "" Then
        MsgBox "Es wurde keine Mandantennummer eingegeben." & vbCrLf & vbCrLf & VBA.Chr$(187) & _
                " Bitte geben Sie eine Mandantennummer ein.", _
                vbInformation
        Exit Sub
    End If
    Call mdl_Main.Dialogwechsel(Export, Export_Speichern_unter)
End Sub

Private Sub cb_Abbrechen_Click()
    Call mdl_Main.Dialogwechsel(Export, kein_Dialog)
End Sub

Private Sub UserForm_Activate()
    With Worksheets("Verwaltung")
        If Not .Cells(Beraternummer, 2).Value = "" Then
            Me.tbx_Beraternummer.Value = .Cells(Beraternummer, 2).Value
            Me.tbx_Beraternummer.Enabled = False
        End If
        If Not .Cells(Mandantennummer, 2).Value = "" Then
            Me.tbx_Mandantennummer.Value = .Cells(Mandantennummer, 2).Value
            Me.tbx_Mandantennummer.Enabled = False
        End If
    End With
End Sub

Private Sub UserForm_QueryClose(Cancel As Integer, CloseMode As Integer)
    Cancel = True
    cb_Abbrechen_Click
End Sub
Attribute VB_Name = "uf_Export_Speichern_unter"
Attribute VB_Base = "0{327D1EAD-8122-4BA8-B8A3-3A0E76D7D503}{8C8915EB-54F8-49D4-B486-3D4307837462}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Option Explicit

Private Sub cb_Erzeugen_Click()
    Dim zustand As Zustand_Dateiname
    Dim str_Folder As String
    Dim str_File_Name As String
    
    If Me.tbx_Verzeichnis_waehlen.Value = "" Then
        MsgBox "Es wurde kein Verzeichnis ausgew|fffd|hlt." & vbCrLf & vbCrLf & VBA.Chr$(187) & _
                " Bitte w|fffd|hlen Sie ein Verzeichnis zum Speichern der Exportdatei.", _
                vbInformation
        Exit Sub
    ElseIf Not Mdl_Hilfsfunktionen.Verzeichnis_existiert(Me.tbx_Verzeichnis_waehlen.Value) Then
        MsgBox "Das gew|fffd|hlte Verzeichnis existiert nicht." & vbCrLf & vbCrLf & VBA.Chr$(187) & _
                " Bitte w|fffd|hlen Sie ein anderes Verzeichnis zum Speichern der Exportdatei.", _
                vbInformation
        Exit Sub
    End If

    If Me.tbx_Name.Value = "" Then
        MsgBox "Es wurde kein Name angegeben." & vbCrLf & vbCrLf & VBA.Chr$(187) & _
                " Bitte geben Sie einen Namen f|fffd|r die Exportdatei an.", _
                vbInformation
        Exit Sub
    Else
        zustand = Mdl_Hilfsfunktionen.Dateinamenspruefung(Me.tbx_Name.Value)
        Select Case zustand
            Case OK
                str_File_Name = Me.tbx_Name.Value
                GoTo Erzeugen
            Case zu_lang
                MsgBox "Der angegebene Name ist zu lang." & vbCrLf & vbCrLf & VBA.Chr$(187) & _
                    " Bitte geben Sie maximal 100 Zeichen ein.", _
                    vbInformation
                Exit Sub
            Case enthaelt_unerlaubte_Zeichen
                MsgBox "Der angegebene Name enth|fffd|lt unzul|fffd|ssige Zeichen." & vbCrLf & _
                    "(Nicht erlaubt sind < > ? "" : | \ / *)" & vbCrLf & vbCrLf & VBA.Chr$(187) & _
                    " Bitte w|fffd|hlen Sie einen anderen Namen.", _
                    vbInformation
                Exit Sub
        End Select
    End If
    
Erzeugen:
    Call Mdl_Export.Export_Datei_erstellen(Me.tbx_Verzeichnis_waehlen.Value, Me.tbx_Name.Value)
End Sub

Private Sub cb_Waehlen_Click()
    Me.tbx_Verzeichnis_waehlen.Value = Mdl_Export.Pfad_waehlen
End Sub

Private Sub cb_Zurueck_Click()
    Call mdl_Main.Dialogwechsel(Export_Speichern_unter, Export)
End Sub

Private Sub UserForm_Activate()
    Dim rng_Personalnummer As String
    
    rng_Personalnummer = Mid(Worksheets("Assistent").Cells(Name_des_Mitarbeiters_Personalnummer, 4).Value, InStr(Worksheets("Assistent").Cells(Name_des_Mitarbeiters_Personalnummer, 4).Value, ";") + 1)
    Me.tbx_Verzeichnis_waehlen.Value = Environ("USERPROFILE") & "\Desktop"
    If mdl_Main.Dialog_Export.ob_LuG Then
        Me.tbx_Name.Value = "ANF_LuG_" & mdl_Main.Dialog_Export.tbx_Beraternummer.Value & "_" & mdl_Main.Dialog_Export.tbx_Mandantennummer.Value & "_" & Worksheets("Personalfragebogen").Range(rng_Personalnummer).Value
    Else
        Me.tbx_Name.Value = "ANF_LODAS_" & mdl_Main.Dialog_Export.tbx_Beraternummer.Value & "_" & mdl_Main.Dialog_Export.tbx_Mandantennummer.Value & "_" & Worksheets("Personalfragebogen").Range(rng_Personalnummer).Value
    End If
End Sub

Private Sub UserForm_QueryClose(Cancel As Integer, CloseMode As Integer)
    Cancel = True
    Call mdl_Main.Dialogwechsel(Export_Speichern_unter, kein_Dialog)
End Sub
Attribute VB_Name = "ws_Assistent"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "ws_Listen"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "ws_Verwaltung"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True

' InQuest injected base64 decoded content
' v($z+l

INQUEST-PP=macro
