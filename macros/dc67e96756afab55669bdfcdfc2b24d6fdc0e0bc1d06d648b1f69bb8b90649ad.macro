Attribute VB_Name = "ReduceSize"
Option Explicit
Public wsSheet As Worksheet
Public iReply As Integer
Public rLastRow As Range
Public rlastCol As Range
Public bCalc As Boolean
Public strCleanType As String
Public bSaveCopy As Boolean
Public OldSize As String, NewSize As String
Dim strName As String
Dim fs, f, s
Sub CleanUpFull()
On Error Resume Next
Application.EnableEvents = False

If bSaveCopy = True Then Run "SaveCopyAs"

bCalc = Application.Calculation = _
        xlCalculationAutomatic
If bCalc = True Then Application.Calculation = _
                       xlCalculationManual
For Each wsSheet In ActiveWorkbook.Worksheets
 wsSheet.ShowAllData
  With wsSheet.Cells
      .SpecialCells(xlCellTypeBlanks).Clear
      
   Set rLastRow = .Find(What:="*", After:=.Cells(1, 1), LookIn:=xlFormulas, _
   searchOrder:=xlByRows, SearchDirection:=xlPrevious).Offset(1, 1)
   
   Set rlastCol = .Find(What:="*", After:=.Cells(1, 1), LookIn:=xlFormulas, _
   searchOrder:=xlByColumns, SearchDirection:=xlPrevious).Offset(1, 1)
   
  End With
  
  wsSheet.Range(rLastRow.EntireRow, _
  rLastRow.EntireRow.End(xlDown)).Clear
  
  wsSheet.Range(rlastCol.EntireColumn, _
  rlastCol.EntireColumn.End(xlToRight)).Clear
  
    Application.CutCopyMode = False
    ActiveSheet.UsedRange
Next wsSheet

Application.EnableEvents = True
If bCalc = True Then Application.Calculation = xlCalculationAutomatic

If bSaveCopy = True Then
  ActiveWorkbook.Save
   Set fs = CreateObject("Scripting.FileSystemObject")
   Set f = fs.Getfile(ActiveWorkbook.FullName)
 
  NewSize = UCase(f.Name) & " uses " & f.Size & " bytes."
  MsgBox "Procedure has finished." & Chr(13) & Chr(13) & OldSize & Chr(13) & Chr(13) & NewSize & Chr(13) & Chr(13) & "If the file size has increased, your Workbook is most likely corrupt. Restart the 'File Clean' and click the 'In case of corruption click here' button.", vbInformation, "OzGrid.com"
  Run "KillVar"
  Exit Sub
End If

Run "KillVar"
MsgBox "Procedure has finished, you will need to " _
& "save and then note if the file size has reduced via File>Properties / General" _
& Chr(13) & Chr(13) & "If the file size has increased, your Workbook is most likely corrupt. Restart the 'File Clean' and click the 'In case of corruption click here' button.", vbInformation, "OzGrid.com"

End Sub


Sub CleanUpStand()
On Error Resume Next
Application.EnableEvents = False

If bSaveCopy = True Then Run "SaveCopyAs"

bCalc = Application.Calculation = _
        xlCalculationAutomatic
If bCalc = True Then Application.Calculation = _
                       xlCalculationManual
For Each wsSheet In ActiveWorkbook.Worksheets

  With wsSheet.Cells
      
   Set rLastRow = .Find(What:="*", After:=.Cells(1, 1), LookIn:=xlFormulas, _
   searchOrder:=xlByRows, SearchDirection:=xlPrevious).Offset(1, 1)
   
   Set rlastCol = .Find(What:="*", After:=.Cells(1, 1), LookIn:=xlFormulas, _
   searchOrder:=xlByColumns, SearchDirection:=xlPrevious).Offset(1, 1)
   
  End With
  
  wsSheet.Range(rLastRow.EntireRow, _
  rLastRow.EntireRow.End(xlDown)).Clear
  
  wsSheet.Range(rlastCol.EntireColumn, _
  rlastCol.EntireColumn.End(xlToRight)).Clear
  
  Application.CutCopyMode = False
  ActiveSheet.UsedRange

Next wsSheet
Application.EnableEvents = True

If bCalc = True Then Application.Calculation = xlCalculationAutomatic

If bSaveCopy = True Then
  ActiveWorkbook.Save
   Set fs = CreateObject("Scripting.FileSystemObject")
   Set f = fs.Getfile(ActiveWorkbook.FullName)
 
  NewSize = UCase(f.Name) & " uses " & f.Size & " bytes."
  MsgBox "Procedure has finished." & Chr(13) & Chr(13) & OldSize & Chr(13) & Chr(13) & NewSize & Chr(13) & Chr(13) & "If the file size has increased, your Workbook is most likely corrupt. Restart the 'File Clean' and click the 'In case of corruption click here' button.", vbInformation, "OzGrid.com"
  Run "KillVar"
  Exit Sub
End If

Run "KillVar"
MsgBox "Procedure has finished, you will need to " _
& "save and then note if the file size has reduced via File>Properties / General" & Chr(13) & Chr(13) & "If the file size has increased, your Workbook is most likely corrupt. Restart the 'File Clean' and click the 'In case of corruption click here' button.", vbInformation, "OzGrid.com"
End Sub

Sub SaveCopyAs()
On Error Resume Next
strName = "CopyOf" & ActiveWorkbook.Name
ActiveWorkbook.SaveAs strName
End Sub

Sub CleanFormShow()
UserForm1.Show
End Sub

Sub KillVar()
On Error Resume Next
Set wsSheet = Nothing
iReply = 0
Set rLastRow = Nothing
Set rlastCol = Nothing
bCalc = False
strCleanType = ""
bSaveCopy = False
OldSize = ""
NewSize = ""
strName = ""
Set fs = Nothing
Set f = Nothing
Set s = Nothing
End Sub


Attribute VB_Name = "Sheet1"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Option Explicit

Attribute VB_Name = "ThisWorkbook"
Attribute VB_Base = "0{00020819-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Option Explicit

Dim cControl As CommandBarButton
Private Sub Workbook_AddinInstall()

On Error Resume Next
    Application.CommandBars("Worksheet Menu bar").Controls("File Clean").Delete
    Set cControl = Application.CommandBars("Worksheet Menu bar").Controls.Add
        With cControl
           .Caption = "File Clean"
           .Style = msoButtonCaption
           .OnAction = "CleanFormShow"
        End With
    On Error GoTo 0
End Sub

Private Sub Workbook_AddinUninstall()
On Error Resume Next
    Application.CommandBars("Worksheet Menu bar").Controls("File Clean").Delete
On Error GoTo 0
End Sub

Attribute VB_Name = "UserForm1"
Attribute VB_Base = "0{13BC8825-23F0-4A30-814C-CE5C42871D90}{9932986A-AF49-4A43-9EB4-BC7142903708}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Option Explicit

Private Sub CheckBox1_Click()
bSaveCopy = CheckBox1
End Sub

Private Sub CommandButton1_Click()
If strCleanType = "" Then
  MsgBox "No 'Type of Clean' specified ", vbOKOnly, "OzGrid.com"
  Exit Sub
End If
On Error Resume Next
Run strCleanType
On Error GoTo 0
Unload Me
End Sub


Private Sub CommandButton2_Click()
ThisWorkbook.Sheets(1).Copy
End Sub

Private Sub OptionButton1_Click()
MsgBox "It is strongly advised that you save a " _
        & "copy of this workbook first and note the file size via File>Properties / General. Or Check the 'Save a Copy for me before clean' option." & Chr(13) & Chr(13) & "You must remove " _
        & "all types of internal protection, such as Workbook and " _
        & "Worksheet Protection etc." & Chr(13) & Chr(13) & "ALL formatting from cells housing NO DATA, but housing formatting, will be cleared! 'Data' is any cell containing Text, Numbers or Dates only." & Chr(13) & Chr(13) & _
        "You may need to run twice.", vbInformation, _
        "VERY IMPORTANT INFORMATION OzGrid.com"
   strCleanType = "CleanUpFull"
End Sub

Private Sub OptionButton2_Click()
MsgBox "It is strongly advised that you save a " _
        & "copy of this workbook first and note the file size via File>Properties / General. Or Check the 'Save a Copy for me after clean' option." & Chr(13) & Chr(13) & "You must remove " _
        & "all types of internal protection, such as Workbook and " _
        & "Worksheet Protection etc." & Chr(13) & Chr(13) & " The clean will start from the last cell containing data on each sheet and remove ALL formatting from cells below this. 'Data' is any cell containing Text, Numbers or Dates only." _
        & Chr(13) & Chr(13) & "You may need to run twice.", vbInformation, _
        "VERY IMPORTANT INFORMATION OzGrid.com"

   strCleanType = "CleanUpStand"

End Sub


Private Sub UserForm_Initialize()
 Dim fs, f, s
    Set fs = CreateObject("Scripting.FileSystemObject")
    Set f = fs.Getfile(ActiveWorkbook.FullName)
   OldSize = UCase(f.Name) & " uses " & f.Size & " bytes."
   Label1 = OldSize
End Sub




INQUEST-PP=macro
