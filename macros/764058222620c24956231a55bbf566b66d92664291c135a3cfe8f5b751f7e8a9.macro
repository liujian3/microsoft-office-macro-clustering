Attribute VB_Name = "DieseArbeitsmappe"
Attribute VB_Base = "0{00020819-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
'VERSION 2018.03
Private Sub Workbook_BeforeClose(cancel As Boolean)

Dim wks As Worksheet

Application.ScreenUpdating = False

For Each wks In ActiveWorkbook.Worksheets
  If wks.Visible And wks.Name <> "Verwaltung" And wks.Name <> "Konfiguration" Then
    wks.Activate
    Cells(17, 3).Select
    ActiveWindow.Zoom = 100
    ActiveWindow.ScrollRow = 1
    ActiveWindow.ScrollColumn = 1
  End If
Next wks

Worksheets("Fertigteile").Activate

Application.ScreenUpdating = True

End Sub

Attribute VB_Name = "Tabelle11"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Control = "ToggleButton1, 1, 0, MSForms, ToggleButton"
Private Sub ToggleButton1_Click()

Call ein_ausblenden(activeSheet)

End Sub
Attribute VB_Name = "Tabelle12"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Control = "ToggleButton1, 1, 0, MSForms, ToggleButton"
Private Sub ToggleButton1_Click()

Call ein_ausblenden(activeSheet)

End Sub
Attribute VB_Name = "Tabelle13"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Control = "ToggleButton1, 1, 0, MSForms, ToggleButton"
Private Sub ToggleButton1_Click()

Call ein_ausblenden(activeSheet)

End Sub
Attribute VB_Name = "Tabelle14"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Control = "ToggleButton1, 1, 0, MSForms, ToggleButton"
Private Sub ToggleButton1_Click()

Call ein_ausblenden(activeSheet)

End Sub
Attribute VB_Name = "Tabelle15"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Control = "ToggleButton2, 3, 1, MSForms, ToggleButton"
Attribute VB_Control = "ToggleButton1, 1, 2, MSForms, ToggleButton"
Private Sub ToggleButton1_Click()

Call ein_ausblenden(activeSheet)

End Sub

Private Sub ToggleButton2_Click()

Application.ScreenUpdating = False

Dim erste_zeile As Integer
Dim i As Integer

erste_zeile = Sheets("Konfiguration").Cells(59, 23)

If ThisWorkbook.Sheets("Fertigteile").ToggleButton2.Caption = "Auswertung ausblenden" Then
    
    ThisWorkbook.Sheets("Fertigteile").ToggleButton2.Caption = "Auswertung einblenden"
    ThisWorkbook.Sheets("Fertigteile").ToggleButton2.Value = False
       
    For i = 1 To erste_zeile - 3
    
        ThisWorkbook.Sheets("Fertigteile").Rows(i & ":" & i).EntireRow.Hidden = True
    
    Next

Else

    ThisWorkbook.Sheets("Fertigteile").ToggleButton2.Caption = "Auswertung ausblenden"
    ThisWorkbook.Sheets("Fertigteile").ToggleButton2.Value = True
    
    For i = 1 To erste_zeile - 3
    
        ThisWorkbook.Sheets("Fertigteile").Rows(i & ":" & i).EntireRow.Hidden = False
    
    Next

End If

Application.ScreenUpdating = True

End Sub
Attribute VB_Name = "Tabelle7"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Control = "ToggleButton2, 9, 2, MSForms, ToggleButton"
Attribute VB_Control = "CommandButton10, 8, 3, MSForms, CommandButton"
Attribute VB_Control = "CommandButton9, 7, 4, MSForms, CommandButton"
Attribute VB_Control = "CommandButton8, 6, 5, MSForms, CommandButton"
Attribute VB_Control = "CommandButton7, 5, 6, MSForms, CommandButton"
Attribute VB_Control = "ToggleButton1, 1, 7, MSForms, ToggleButton"
Private Sub CommandButton10_Click()
konfiguration_laden
End Sub
Private Sub CommandButton7_Click()
plankopf_speichern
End Sub

Private Sub CommandButton8_Click()
plankopf_laden
End Sub

Private Sub CommandButton9_Click()
konfiguration_speichern
End Sub

Private Sub ToggleButton1_Click()

If ToggleButton1 Then
ToggleButton1.BackColor = RGB(0, 255, 0)
ToggleButton1.Caption = "Plotten erlaubt."
Sheets("Verwaltung").CommandButton4.Enabled = True
Else
ToggleButton1.BackColor = RGB(255, 0, 0)
ToggleButton1.Caption = "Plotten verboten."
Sheets("Verwaltung").CommandButton4.Enabled = False
End If
End Sub

Private Sub ToggleButton2_Click()

If ToggleButton2 Then
ToggleButton2.BackColor = RGB(0, 255, 0)
ToggleButton2.Caption = "Auswertung mit Hyperlinks"
Else
ToggleButton2.BackColor = RGB(255, 0, 0)
ToggleButton2.Caption = "Auswertung ohne Hyperlinks"
End If
End Sub
Attribute VB_Name = "Tabelle8"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Control = "CommandButton8, 70, 24, MSForms, CommandButton"
Attribute VB_Control = "ToggleButton63, 56, 25, MSForms, ToggleButton"
Attribute VB_Control = "ToggleButton62, 55, 26, MSForms, ToggleButton"
Attribute VB_Control = "ToggleButton53, 54, 27, MSForms, ToggleButton"
Attribute VB_Control = "ToggleButton52, 53, 28, MSForms, ToggleButton"
Attribute VB_Control = "ToggleButton51, 52, 29, MSForms, ToggleButton"
Attribute VB_Control = "ToggleButton50, 51, 30, MSForms, ToggleButton"
Attribute VB_Control = "ToggleButton41, 50, 31, MSForms, ToggleButton"
Attribute VB_Control = "ToggleButton40, 49, 32, MSForms, ToggleButton"
Attribute VB_Control = "ToggleButton39, 48, 33, MSForms, ToggleButton"
Attribute VB_Control = "ToggleButton38, 47, 34, MSForms, ToggleButton"
Attribute VB_Control = "CommandButton4, 46, 35, MSForms, CommandButton"
Attribute VB_Control = "OptionButton6, 45, 36, MSForms, OptionButton"
Attribute VB_Control = "OptionButton7, 44, 37, MSForms, OptionButton"
Attribute VB_Control = "OptionButton8, 43, 38, MSForms, OptionButton"
Attribute VB_Control = "CommandButton5, 42, 39, MSForms, CommandButton"
Attribute VB_Control = "CommandButton9, 40, 40, MSForms, CommandButton"
Attribute VB_Control = "CommandButton7, 22, 41, MSForms, CommandButton"
Attribute VB_Control = "CommandButton3, 21, 42, MSForms, CommandButton"
Attribute VB_Control = "ToggleButton7, 20, 43, MSForms, ToggleButton"
Attribute VB_Control = "ToggleButton6, 19, 44, MSForms, ToggleButton"
Attribute VB_Control = "ToggleButton5, 18, 45, MSForms, ToggleButton"
Attribute VB_Control = "ToggleButton4, 17, 46, MSForms, ToggleButton"
Attribute VB_Control = "ToggleButton3, 16, 47, MSForms, ToggleButton"
Attribute VB_Control = "ToggleButton2, 15, 48, MSForms, ToggleButton"
Attribute VB_Control = "ToggleButton1, 14, 49, MSForms, ToggleButton"
Attribute VB_Control = "OptionButton14, 13, 50, MSForms, OptionButton"
Attribute VB_Control = "OptionButton13, 12, 51, MSForms, OptionButton"
Attribute VB_Control = "OptionButton15, 11, 52, MSForms, OptionButton"
Attribute VB_Control = "TextBox3, 10, 53, MSForms, TextBox"
Attribute VB_Control = "OptionButton12, 9, 54, MSForms, OptionButton"
Attribute VB_Control = "OptionButton4, 8, 55, MSForms, OptionButton"
Attribute VB_Control = "OptionButton3, 7, 56, MSForms, OptionButton"
Attribute VB_Control = "CommandButton2, 6, 57, MSForms, CommandButton"
Attribute VB_Control = "OptionButton5, 5, 58, MSForms, OptionButton"
Attribute VB_Control = "TextBox2, 4, 59, MSForms, TextBox"
Attribute VB_Control = "OptionButton2, 3, 60, MSForms, OptionButton"
Attribute VB_Control = "TextBox1, 2, 61, MSForms, TextBox"
Attribute VB_Control = "CommandButton1, 1, 62, MSForms, CommandButton"
Attribute VB_Control = "CommandButton6, 71, 63, MSForms, CommandButton"
Attribute VB_Control = "CommandButton10, 72, 64, MSForms, CommandButton"
Attribute VB_Control = "CommandButton11, 73, 65, MSForms, CommandButton"
Attribute VB_Control = "CommandButton12, 74, 66, MSForms, CommandButton"
Attribute VB_Control = "CommandButton13, 75, 67, MSForms, CommandButton"
Attribute VB_Control = "CommandButton14, 76, 68, MSForms, CommandButton"
Attribute VB_Control = "CommandButton15, 77, 69, MSForms, CommandButton"
Attribute VB_Control = "CommandButton16, 78, 70, MSForms, CommandButton"
Attribute VB_Control = "CommandButton17, 79, 71, MSForms, CommandButton"
Attribute VB_Control = "CommandButton18, 80, 72, MSForms, CommandButton"
Attribute VB_Control = "CommandButton19, 81, 73, MSForms, CommandButton"
Attribute VB_Control = "CommandButton20, 82, 74, MSForms, CommandButton"
Attribute VB_Control = "CommandButton21, 83, 75, MSForms, CommandButton"
Attribute VB_Control = "CommandButton22, 84, 76, MSForms, CommandButton"
Attribute VB_Control = "CommandButton23, 85, 77, MSForms, CommandButton"
Attribute VB_Control = "CommandButton24, 86, 78, MSForms, CommandButton"
Attribute VB_Control = "OptionButton1, 93, 79, MSForms, OptionButton"
Attribute VB_Control = "TextBox4, 94, 80, MSForms, TextBox"
Attribute VB_Control = "OptionButton9, 95, 81, MSForms, OptionButton"
Attribute VB_Control = "OptionButton10, 96, 82, MSForms, OptionButton"
Attribute VB_Control = "OptionButton11, 97, 83, MSForms, OptionButton"
Attribute VB_Control = "ToggleButton8, 98, 84, MSForms, ToggleButton"
Private Sub CommandButton10_Click()
kontakt_loeschen (36)
End Sub

Private Sub CommandButton11_Click()
kontakt_loeschen (43)
End Sub

Private Sub CommandButton12_Click()
kontakt_loeschen (50)
End Sub

Private Sub CommandButton13_Click()
kontakt_loeschen (57)
End Sub

Private Sub CommandButton14_Click()
kontakt_loeschen (64)
End Sub

Private Sub CommandButton15_Click()
kontakt_loeschen (71)
End Sub

Private Sub CommandButton16_Click()
kontakt_loeschen (78)
End Sub

Private Sub CommandButton17_Click()
kontakt_loeschen (85)
End Sub

Private Sub CommandButton18_Click()
kontakt_loeschen (92)
End Sub

Private Sub CommandButton19_Click()
kontakt_loeschen (99)
End Sub

Private Sub CommandButton20_Click()
kontakt_loeschen (106)
End Sub

Private Sub CommandButton21_Click()
kontakt_loeschen (113)
End Sub

Private Sub CommandButton22_Click()
kontakt_loeschen (120)
End Sub

Private Sub CommandButton23_Click()
kontakt_loeschen (127)
End Sub

Private Sub CommandButton24_Click()
ReadAllContacts
End Sub

Private Sub CommandButton6_Click()
kontakt_loeschen (29)
End Sub

Private Sub CommandButton9_Click()
    refresh
End Sub
Private Sub CommandButton1_Click()
eintragen
End Sub
Private Sub CommandButton2_Click()
freigabe_von_ext
End Sub
Private Sub CommandButton3_Click()
email
End Sub
Private Sub CommandButton4_Click()
drucken
End Sub
Private Sub CommandButton5_Click()
einlesen_form.Show
End Sub
Private Sub CommandButton7_Click()
anschreiben
End Sub
Private Sub OptionButton20_Click()
If OptionButton20 Then
OptionButton20.Value = False
Else
OptionButton20.Value = True
End If
End Sub
Private Sub CommandButton8_Click()
verschieben
End Sub


Private Sub ToggleButton1_Click()
If ToggleButton1 Then
ToggleButton1.BackColor = RGB(0, 255, 0)
Else
ToggleButton1.BackColor = &H8000000F
End If
End Sub

Private Sub ToggleButton2_Click()
If ToggleButton2 Then
ToggleButton2.BackColor = RGB(0, 255, 0)
Else
ToggleButton2.BackColor = &H8000000F
End If
End Sub

Private Sub ToggleButton8_Click()
If ToggleButton8 Then
ToggleButton8.BackColor = RGB(0, 255, 0)
Else
ToggleButton8.BackColor = &H8000000F
End If
End Sub
Private Sub ToggleButton3_Click()
If ToggleButton3 Then
ToggleButton3.BackColor = RGB(0, 255, 0)
ToggleButton4.Value = False
ToggleButton4.BackColor = &H8000000F
ToggleButton5.Value = False
ToggleButton5.BackColor = &H8000000F
ToggleButton6.Value = False
ToggleButton6.BackColor = &H8000000F
ToggleButton7.Value = False
ToggleButton7.BackColor = &H8000000F
ToggleButton38.Value = False
ToggleButton38.BackColor = &H8000000F
ToggleButton39.Value = False
ToggleButton39.BackColor = &H8000000F
ToggleButton40.Value = False
ToggleButton40.BackColor = &H8000000F
ToggleButton41.Value = False
ToggleButton41.BackColor = &H8000000F
ToggleButton50.Value = False
ToggleButton50.BackColor = &H8000000F
ToggleButton51.Value = False
ToggleButton51.BackColor = &H8000000F
ToggleButton52.Value = False
ToggleButton52.BackColor = &H8000000F
ToggleButton53.Value = False
ToggleButton53.BackColor = &H8000000F
ToggleButton62.Value = False
ToggleButton62.BackColor = &H8000000F
ToggleButton63.Value = False
ToggleButton63.BackColor = &H8000000F
Else
ToggleButton3.BackColor = &H8000000F
End If
End Sub

Private Sub ToggleButton30_Click()
If ToggleButton30 Then
ToggleButton30.BackColor = RGB(0, 255, 0)
Else
ToggleButton30.BackColor = &H8000000F
End If
End Sub


Private Sub ToggleButton31_Click()
If ToggleButton31 Then
ToggleButton31.BackColor = RGB(0, 255, 0)
Else
ToggleButton31.BackColor = &H8000000F
End If
End Sub


Private Sub ToggleButton32_Click()
If ToggleButton32 Then
ToggleButton32.BackColor = RGB(0, 255, 0)
Else
ToggleButton32.BackColor = &H8000000F
End If
End Sub


Private Sub ToggleButton33_Click()
If ToggleButton33 Then
ToggleButton33.BackColor = RGB(0, 255, 0)
Else
ToggleButton33.BackColor = &H8000000F
End If
End Sub


Private Sub ToggleButton34_Click()
If ToggleButton34 Then
ToggleButton34.BackColor = RGB(0, 255, 0)
Else
ToggleButton34.BackColor = &H8000000F
End If
End Sub


Private Sub ToggleButton35_Click()
If ToggleButton35 Then
ToggleButton35.BackColor = RGB(0, 255, 0)
Else
ToggleButton35.BackColor = &H8000000F
End If
End Sub


Private Sub ToggleButton36_Click()
If ToggleButton36 Then
ToggleButton36.BackColor = RGB(0, 255, 0)
Else
ToggleButton36.BackColor = &H8000000F
End If
End Sub


Private Sub ToggleButton37_Click()
If ToggleButton37 Then
ToggleButton37.BackColor = RGB(0, 255, 0)
Else
ToggleButton37.BackColor = &H8000000F
End If
End Sub

Private Sub ToggleButton38_Click()
If ToggleButton38 Then
ToggleButton38.BackColor = RGB(0, 255, 0)
ToggleButton3.Value = False
ToggleButton3.BackColor = &H8000000F
ToggleButton4.Value = False
ToggleButton4.BackColor = &H8000000F
ToggleButton5.Value = False
ToggleButton5.BackColor = &H8000000F
ToggleButton6.Value = False
ToggleButton6.BackColor = &H8000000F
ToggleButton7.Value = False
ToggleButton7.BackColor = &H8000000F
ToggleButton39.Value = False
ToggleButton39.BackColor = &H8000000F
ToggleButton40.Value = False
ToggleButton40.BackColor = &H8000000F
ToggleButton41.Value = False
ToggleButton41.BackColor = &H8000000F
ToggleButton50.Value = False
ToggleButton50.BackColor = &H8000000F
ToggleButton51.Value = False
ToggleButton51.BackColor = &H8000000F
ToggleButton52.Value = False
ToggleButton52.BackColor = &H8000000F
ToggleButton53.Value = False
ToggleButton53.BackColor = &H8000000F
ToggleButton62.Value = False
ToggleButton62.BackColor = &H8000000F
ToggleButton63.Value = False
ToggleButton63.BackColor = &H8000000F
Else
ToggleButton38.BackColor = &H8000000F
End If
End Sub


Private Sub ToggleButton39_Click()
If ToggleButton39 Then
ToggleButton39.BackColor = RGB(0, 255, 0)
ToggleButton3.Value = False
ToggleButton3.BackColor = &H8000000F
ToggleButton4.Value = False
ToggleButton4.BackColor = &H8000000F
ToggleButton5.Value = False
ToggleButton5.BackColor = &H8000000F
ToggleButton6.Value = False
ToggleButton6.BackColor = &H8000000F
ToggleButton7.Value = False
ToggleButton7.BackColor = &H8000000F
ToggleButton38.Value = False
ToggleButton38.BackColor = &H8000000F
ToggleButton40.Value = False
ToggleButton40.BackColor = &H8000000F
ToggleButton41.Value = False
ToggleButton41.BackColor = &H8000000F
ToggleButton50.Value = False
ToggleButton50.BackColor = &H8000000F
ToggleButton51.Value = False
ToggleButton51.BackColor = &H8000000F
ToggleButton52.Value = False
ToggleButton52.BackColor = &H8000000F
ToggleButton53.Value = False
ToggleButton53.BackColor = &H8000000F
ToggleButton62.Value = False
ToggleButton62.BackColor = &H8000000F
ToggleButton63.Value = False
ToggleButton63.BackColor = &H8000000F
Else
ToggleButton39.BackColor = &H8000000F
End If

End Sub

Private Sub ToggleButton4_Click()
If ToggleButton4 Then
ToggleButton4.BackColor = RGB(0, 255, 0)
ToggleButton3.Value = False
ToggleButton3.BackColor = &H8000000F
ToggleButton5.Value = False
ToggleButton5.BackColor = &H8000000F
ToggleButton6.Value = False
ToggleButton6.BackColor = &H8000000F
ToggleButton7.Value = False
ToggleButton7.BackColor = &H8000000F
ToggleButton38.Value = False
ToggleButton38.BackColor = &H8000000F
ToggleButton39.Value = False
ToggleButton39.BackColor = &H8000000F
ToggleButton40.Value = False
ToggleButton40.BackColor = &H8000000F
ToggleButton41.Value = False
ToggleButton41.BackColor = &H8000000F
ToggleButton50.Value = False
ToggleButton50.BackColor = &H8000000F
ToggleButton51.Value = False
ToggleButton51.BackColor = &H8000000F
ToggleButton52.Value = False
ToggleButton52.BackColor = &H8000000F
ToggleButton53.Value = False
ToggleButton53.BackColor = &H8000000F
ToggleButton62.Value = False
ToggleButton62.BackColor = &H8000000F
ToggleButton63.Value = False
ToggleButton63.BackColor = &H8000000F
Else
ToggleButton4.BackColor = &H8000000F
End If
End Sub

Private Sub ToggleButton40_Click()
If ToggleButton40 Then
ToggleButton40.BackColor = RGB(0, 255, 0)
ToggleButton3.Value = False
ToggleButton3.BackColor = &H8000000F
ToggleButton4.Value = False
ToggleButton4.BackColor = &H8000000F
ToggleButton5.Value = False
ToggleButton5.BackColor = &H8000000F
ToggleButton6.Value = False
ToggleButton6.BackColor = &H8000000F
ToggleButton7.Value = False
ToggleButton7.BackColor = &H8000000F
ToggleButton38.Value = False
ToggleButton38.BackColor = &H8000000F
ToggleButton39.Value = False
ToggleButton39.BackColor = &H8000000F
ToggleButton41.Value = False
ToggleButton41.BackColor = &H8000000F
ToggleButton50.Value = False
ToggleButton50.BackColor = &H8000000F
ToggleButton51.Value = False
ToggleButton51.BackColor = &H8000000F
ToggleButton52.Value = False
ToggleButton52.BackColor = &H8000000F
ToggleButton53.Value = False
ToggleButton53.BackColor = &H8000000F
ToggleButton62.Value = False
ToggleButton62.BackColor = &H8000000F
ToggleButton63.Value = False
ToggleButton63.BackColor = &H8000000F
Else
ToggleButton40.BackColor = &H8000000F
End If

End Sub

Private Sub ToggleButton41_Click()
If ToggleButton41 Then
ToggleButton41.BackColor = RGB(0, 255, 0)
ToggleButton3.Value = False
ToggleButton3.BackColor = &H8000000F
ToggleButton4.Value = False
ToggleButton4.BackColor = &H8000000F
ToggleButton5.Value = False
ToggleButton5.BackColor = &H8000000F
ToggleButton6.Value = False
ToggleButton6.BackColor = &H8000000F
ToggleButton7.Value = False
ToggleButton7.BackColor = &H8000000F
ToggleButton38.Value = False
ToggleButton38.BackColor = &H8000000F
ToggleButton39.Value = False
ToggleButton39.BackColor = &H8000000F
ToggleButton40.Value = False
ToggleButton40.BackColor = &H8000000F
ToggleButton50.Value = False
ToggleButton50.BackColor = &H8000000F
ToggleButton51.Value = False
ToggleButton51.BackColor = &H8000000F
ToggleButton52.Value = False
ToggleButton52.BackColor = &H8000000F
ToggleButton53.Value = False
ToggleButton53.BackColor = &H8000000F
ToggleButton62.Value = False
ToggleButton62.BackColor = &H8000000F
ToggleButton63.Value = False
ToggleButton63.BackColor = &H8000000F
Else
ToggleButton41.BackColor = &H8000000F
End If

End Sub

Private Sub ToggleButton5_Click()
If ToggleButton5 Then
ToggleButton5.BackColor = RGB(0, 255, 0)
ToggleButton3.Value = False
ToggleButton3.BackColor = &H8000000F
ToggleButton4.Value = False
ToggleButton4.BackColor = &H8000000F
ToggleButton6.Value = False
ToggleButton6.BackColor = &H8000000F
ToggleButton7.Value = False
ToggleButton7.BackColor = &H8000000F
ToggleButton38.Value = False
ToggleButton38.BackColor = &H8000000F
ToggleButton39.Value = False
ToggleButton39.BackColor = &H8000000F
ToggleButton40.Value = False
ToggleButton40.BackColor = &H8000000F
ToggleButton41.Value = False
ToggleButton41.BackColor = &H8000000F
ToggleButton50.Value = False
ToggleButton50.BackColor = &H8000000F
ToggleButton51.Value = False
ToggleButton51.BackColor = &H8000000F
ToggleButton52.Value = False
ToggleButton52.BackColor = &H8000000F
ToggleButton53.Value = False
ToggleButton53.BackColor = &H8000000F
ToggleButton62.Value = False
ToggleButton62.BackColor = &H8000000F
ToggleButton63.Value = False
ToggleButton63.BackColor = &H8000000F
Else
ToggleButton5.BackColor = &H8000000F
End If
End Sub

Private Sub ToggleButton50_Click()
If ToggleButton50 Then
ToggleButton50.BackColor = RGB(0, 255, 0)
ToggleButton3.Value = False
ToggleButton3.BackColor = &H8000000F
ToggleButton4.Value = False
ToggleButton4.BackColor = &H8000000F
ToggleButton5.Value = False
ToggleButton5.BackColor = &H8000000F
ToggleButton6.Value = False
ToggleButton6.BackColor = &H8000000F
ToggleButton7.Value = False
ToggleButton7.BackColor = &H8000000F
ToggleButton38.Value = False
ToggleButton38.BackColor = &H8000000F
ToggleButton39.Value = False
ToggleButton39.BackColor = &H8000000F
ToggleButton40.Value = False
ToggleButton40.BackColor = &H8000000F
ToggleButton41.Value = False
ToggleButton41.BackColor = &H8000000F
ToggleButton51.Value = False
ToggleButton51.BackColor = &H8000000F
ToggleButton52.Value = False
ToggleButton52.BackColor = &H8000000F
ToggleButton53.Value = False
ToggleButton53.BackColor = &H8000000F
ToggleButton62.Value = False
ToggleButton62.BackColor = &H8000000F
ToggleButton63.Value = False
ToggleButton63.BackColor = &H8000000F
Else
ToggleButton50.BackColor = &H8000000F
End If

End Sub

Private Sub ToggleButton51_Click()
If ToggleButton51 Then
ToggleButton51.BackColor = RGB(0, 255, 0)
ToggleButton3.Value = False
ToggleButton3.BackColor = &H8000000F
ToggleButton4.Value = False
ToggleButton4.BackColor = &H8000000F
ToggleButton5.Value = False
ToggleButton5.BackColor = &H8000000F
ToggleButton6.Value = False
ToggleButton6.BackColor = &H8000000F
ToggleButton7.Value = False
ToggleButton7.BackColor = &H8000000F
ToggleButton38.Value = False
ToggleButton38.BackColor = &H8000000F
ToggleButton39.Value = False
ToggleButton39.BackColor = &H8000000F
ToggleButton40.Value = False
ToggleButton40.BackColor = &H8000000F
ToggleButton41.Value = False
ToggleButton41.BackColor = &H8000000F
ToggleButton50.Value = False
ToggleButton50.BackColor = &H8000000F
ToggleButton52.Value = False
ToggleButton52.BackColor = &H8000000F
ToggleButton53.Value = False
ToggleButton53.BackColor = &H8000000F
ToggleButton62.Value = False
ToggleButton62.BackColor = &H8000000F
ToggleButton63.Value = False
ToggleButton63.BackColor = &H8000000F
Else
ToggleButton51.BackColor = &H8000000F
End If

End Sub

Private Sub ToggleButton52_Click()
If ToggleButton52 Then
ToggleButton52.BackColor = RGB(0, 255, 0)
ToggleButton3.Value = False
ToggleButton3.BackColor = &H8000000F
ToggleButton4.Value = False
ToggleButton4.BackColor = &H8000000F
ToggleButton5.Value = False
ToggleButton5.BackColor = &H8000000F
ToggleButton6.Value = False
ToggleButton6.BackColor = &H8000000F
ToggleButton7.Value = False
ToggleButton7.BackColor = &H8000000F
ToggleButton38.Value = False
ToggleButton38.BackColor = &H8000000F
ToggleButton39.Value = False
ToggleButton39.BackColor = &H8000000F
ToggleButton40.Value = False
ToggleButton40.BackColor = &H8000000F
ToggleButton41.Value = False
ToggleButton41.BackColor = &H8000000F
ToggleButton50.Value = False
ToggleButton50.BackColor = &H8000000F
ToggleButton51.Value = False
ToggleButton51.BackColor = &H8000000F
ToggleButton53.Value = False
ToggleButton53.BackColor = &H8000000F
ToggleButton62.Value = False
ToggleButton62.BackColor = &H8000000F
ToggleButton63.Value = False
ToggleButton63.BackColor = &H8000000F
Else
ToggleButton52.BackColor = &H8000000F
End If

End Sub




Private Sub ToggleButton53_Click()
If ToggleButton53 Then
ToggleButton53.BackColor = RGB(0, 255, 0)
ToggleButton3.Value = False
ToggleButton3.BackColor = &H8000000F
ToggleButton4.Value = False
ToggleButton4.BackColor = &H8000000F
ToggleButton5.Value = False
ToggleButton5.BackColor = &H8000000F
ToggleButton6.Value = False
ToggleButton6.BackColor = &H8000000F
ToggleButton7.Value = False
ToggleButton7.BackColor = &H8000000F
ToggleButton38.Value = False
ToggleButton38.BackColor = &H8000000F
ToggleButton39.Value = False
ToggleButton39.BackColor = &H8000000F
ToggleButton40.Value = False
ToggleButton40.BackColor = &H8000000F
ToggleButton41.Value = False
ToggleButton41.BackColor = &H8000000F
ToggleButton50.Value = False
ToggleButton50.BackColor = &H8000000F
ToggleButton51.Value = False
ToggleButton51.BackColor = &H8000000F
ToggleButton52.Value = False
ToggleButton52.BackColor = &H8000000F
ToggleButton62.Value = False
ToggleButton62.BackColor = &H8000000F
ToggleButton63.Value = False
ToggleButton63.BackColor = &H8000000F
Else
ToggleButton53.BackColor = &H8000000F
End If

End Sub

Private Sub ToggleButton6_Click()
If ToggleButton6 Then
ToggleButton6.BackColor = RGB(0, 255, 0)
ToggleButton3.Value = False
ToggleButton3.BackColor = &H8000000F
ToggleButton4.Value = False
ToggleButton4.BackColor = &H8000000F
ToggleButton5.Value = False
ToggleButton5.BackColor = &H8000000F
ToggleButton7.Value = False
ToggleButton7.BackColor = &H8000000F
ToggleButton38.Value = False
ToggleButton38.BackColor = &H8000000F
ToggleButton39.Value = False
ToggleButton39.BackColor = &H8000000F
ToggleButton40.Value = False
ToggleButton40.BackColor = &H8000000F
ToggleButton41.Value = False
ToggleButton41.BackColor = &H8000000F
ToggleButton50.Value = False
ToggleButton50.BackColor = &H8000000F
ToggleButton51.Value = False
ToggleButton51.BackColor = &H8000000F
ToggleButton52.Value = False
ToggleButton52.BackColor = &H8000000F
ToggleButton53.Value = False
ToggleButton53.BackColor = &H8000000F
ToggleButton62.Value = False
ToggleButton62.BackColor = &H8000000F
ToggleButton63.Value = False
ToggleButton63.BackColor = &H8000000F
Else
ToggleButton6.BackColor = &H8000000F
End If
End Sub

Private Sub ToggleButton62_Click()
If ToggleButton62 Then
ToggleButton62.BackColor = RGB(0, 255, 0)
ToggleButton3.Value = False
ToggleButton3.BackColor = &H8000000F
ToggleButton4.Value = False
ToggleButton4.BackColor = &H8000000F
ToggleButton5.Value = False
ToggleButton5.BackColor = &H8000000F
ToggleButton6.Value = False
ToggleButton6.BackColor = &H8000000F
ToggleButton7.Value = False
ToggleButton7.BackColor = &H8000000F
ToggleButton38.Value = False
ToggleButton38.BackColor = &H8000000F
ToggleButton39.Value = False
ToggleButton39.BackColor = &H8000000F
ToggleButton40.Value = False
ToggleButton40.BackColor = &H8000000F
ToggleButton41.Value = False
ToggleButton41.BackColor = &H8000000F
ToggleButton50.Value = False
ToggleButton50.BackColor = &H8000000F
ToggleButton51.Value = False
ToggleButton51.BackColor = &H8000000F
ToggleButton52.Value = False
ToggleButton52.BackColor = &H8000000F
ToggleButton53.Value = False
ToggleButton53.BackColor = &H8000000F
ToggleButton63.Value = False
ToggleButton63.BackColor = &H8000000F
Else
ToggleButton62.BackColor = &H8000000F
End If

End Sub

Private Sub ToggleButton63_Click()
If ToggleButton63 Then
ToggleButton63.BackColor = RGB(0, 255, 0)
ToggleButton3.Value = False
ToggleButton3.BackColor = &H8000000F
ToggleButton4.Value = False
ToggleButton4.BackColor = &H8000000F
ToggleButton5.Value = False
ToggleButton5.BackColor = &H8000000F
ToggleButton6.Value = False
ToggleButton6.BackColor = &H8000000F
ToggleButton7.Value = False
ToggleButton7.BackColor = &H8000000F
ToggleButton38.Value = False
ToggleButton38.BackColor = &H8000000F
ToggleButton39.Value = False
ToggleButton39.BackColor = &H8000000F
ToggleButton40.Value = False
ToggleButton40.BackColor = &H8000000F
ToggleButton41.Value = False
ToggleButton41.BackColor = &H8000000F
ToggleButton50.Value = False
ToggleButton50.BackColor = &H8000000F
ToggleButton51.Value = False
ToggleButton51.BackColor = &H8000000F
ToggleButton52.Value = False
ToggleButton52.BackColor = &H8000000F
ToggleButton53.Value = False
ToggleButton53.BackColor = &H8000000F
ToggleButton62.Value = False
ToggleButton62.BackColor = &H8000000F
Else
ToggleButton63.BackColor = &H8000000F
End If

End Sub

Private Sub ToggleButton7_Click()
If ToggleButton7 Then
ToggleButton7.BackColor = RGB(0, 255, 0)
ToggleButton3.Value = False
ToggleButton3.BackColor = &H8000000F
ToggleButton4.Value = False
ToggleButton4.BackColor = &H8000000F
ToggleButton5.Value = False
ToggleButton5.BackColor = &H8000000F
ToggleButton6.Value = False
ToggleButton6.BackColor = &H8000000F
ToggleButton38.Value = False
ToggleButton38.BackColor = &H8000000F
ToggleButton39.Value = False
ToggleButton39.BackColor = &H8000000F
ToggleButton40.Value = False
ToggleButton40.BackColor = &H8000000F
ToggleButton41.Value = False
ToggleButton41.BackColor = &H8000000F
ToggleButton50.Value = False
ToggleButton50.BackColor = &H8000000F
ToggleButton51.Value = False
ToggleButton51.BackColor = &H8000000F
ToggleButton52.Value = False
ToggleButton52.BackColor = &H8000000F
ToggleButton53.Value = False
ToggleButton53.BackColor = &H8000000F
ToggleButton62.Value = False
ToggleButton62.BackColor = &H8000000F
ToggleButton63.Value = False
ToggleButton63.BackColor = &H8000000F
Else
ToggleButton7.BackColor = &H8000000F
End If
End Sub

Private Sub ToggleButton10_Click()
If ToggleButton10 Then
ToggleButton10.BackColor = RGB(0, 255, 0)
Else
ToggleButton10.BackColor = &H8000000F
End If
End Sub

Private Sub ToggleButton11_Click()
If ToggleButton11 Then
ToggleButton11.BackColor = RGB(0, 255, 0)
Else
ToggleButton11.BackColor = &H8000000F
End If
End Sub

Private Sub ToggleButton12_Click()
If ToggleButton12 Then
ToggleButton12.BackColor = RGB(0, 255, 0)
Else
ToggleButton12.BackColor = &H8000000F
End If
End Sub

Private Sub ToggleButton13_Click()
If ToggleButton13 Then
ToggleButton13.BackColor = RGB(0, 255, 0)
Else
ToggleButton13.BackColor = &H8000000F
End If
End Sub

Private Sub ToggleButton14_Click()
If ToggleButton14 Then
ToggleButton14.BackColor = RGB(0, 255, 0)
Else
ToggleButton14.BackColor = &H8000000F
End If
End Sub

Private Sub ToggleButton15_Click()
If ToggleButton15 Then
ToggleButton15.BackColor = RGB(0, 255, 0)
Else
ToggleButton15.BackColor = &H8000000F
End If
End Sub

Private Sub ToggleButton16_Click()
If ToggleButton16 Then
ToggleButton16.BackColor = RGB(0, 255, 0)
Else
ToggleButton16.BackColor = &H8000000F
End If
End Sub

Private Sub ToggleButton17_Click()
If ToggleButton17 Then
ToggleButton17.BackColor = RGB(0, 255, 0)
Else
ToggleButton17.BackColor = &H8000000F
End If
End Sub

Private Sub ToggleButton18_Click()
If ToggleButton18 Then
ToggleButton18.BackColor = RGB(0, 255, 0)
Else
ToggleButton18.BackColor = &H8000000F
End If
End Sub

Private Sub ToggleButton19_Click()
If ToggleButton19 Then
ToggleButton19.BackColor = RGB(0, 255, 0)
Else
ToggleButton19.BackColor = &H8000000F
End If
End Sub

Private Sub ToggleButton20_Click()
If ToggleButton20 Then
ToggleButton20.BackColor = RGB(0, 255, 0)
Else
ToggleButton20.BackColor = &H8000000F
End If
End Sub

Private Sub ToggleButton21_Click()
If ToggleButton21 Then
ToggleButton21.BackColor = RGB(0, 255, 0)
Else
ToggleButton21.BackColor = &H8000000F
End If
End Sub

Private Sub ToggleButton22_Click()
If ToggleButton22 Then
ToggleButton22.BackColor = RGB(0, 255, 0)
Else
ToggleButton22.BackColor = &H8000000F
End If
End Sub

Private Sub ToggleButton23_Click()
If ToggleButton23 Then
ToggleButton23.BackColor = RGB(0, 255, 0)
Else
ToggleButton23.BackColor = &H8000000F
End If
End Sub

Private Sub ToggleButton24_Click()
If ToggleButton24 Then
ToggleButton24.BackColor = RGB(0, 255, 0)
Else
ToggleButton24.BackColor = &H8000000F
End If
End Sub

Private Sub ToggleButton25_Click()
If ToggleButton25 Then
ToggleButton25.BackColor = RGB(0, 255, 0)
Else
ToggleButton25.BackColor = &H8000000F
End If
End Sub

Private Sub ToggleButton26_Click()
If ToggleButton26 Then
ToggleButton26.BackColor = RGB(0, 255, 0)
Else
ToggleButton26.BackColor = &H8000000F
End If
End Sub

Private Sub ToggleButton27_Click()
If ToggleButton27 Then
ToggleButton27.BackColor = RGB(0, 255, 0)
Else
ToggleButton27.BackColor = &H8000000F
End If
End Sub

Private Sub ToggleButton28_Click()
If ToggleButton28 Then
ToggleButton28.BackColor = RGB(0, 255, 0)
Else
ToggleButton28.BackColor = &H8000000F
End If
End Sub

Private Sub ToggleButton29_Click()
If ToggleButton29 Then
ToggleButton29.BackColor = RGB(0, 255, 0)
Else
ToggleButton29.BackColor = &H8000000F
End If
End Sub

Private Sub ToggleButton99_Click()
If ToggleButton8 Then
ToggleButton8.BackColor = RGB(0, 255, 0)
Else
ToggleButton8.BackColor = &H8000000F
End If
End Sub


Private Sub ToggleButton9_Click()
If ToggleButton9 Then
ToggleButton9.BackColor = RGB(0, 255, 0)
Else
ToggleButton9.BackColor = &H8000000F
End If
End Sub

Attribute VB_Name = "adressimport_modul"
Option Explicit

Sub ReadAllContacts()
    Dim olApp As Object, objFolder As Object, lngZeile As Long, Worksheet As Worksheet, wsNeu As Worksheet
    
    Application.DisplayAlerts = False
    Application.ScreenUpdating = False
    Application.StatusBar = "Kontakte aus Outlook werden gelesen..."
    
    For Each Worksheet In ActiveWorkbook.Worksheets
        If Worksheet.Name = "Kontakte" Then Worksheet.Delete
    Next Worksheet
    
    Set wsNeu = Worksheets.Add
    With wsNeu
       .Name = "Kontakte"
       .Move after:=Sheets(Sheets.Count)
    End With
    
    Set olApp = CreateObject("outlook.application")
    Set objFolder = olApp.GetNamespace("MAPI").Folders("|fffd|ffentliche Ordner").Folders("B|fffd|ro aktuell")
     
    lngZeile = 0
    If Not objFolder Is Nothing Then
       ShowContactsInFolder objFolder, lngZeile
    End If
    
    wsNeu.UsedRange.Sort Key1:=Columns(1), Header:=xlGuess
    wsNeu.UsedRange.EntireColumn.AutoFit
    
    Set wsNeu = Nothing
    Set objFolder = Nothing
    Set olApp = Nothing
    
    Application.ScreenUpdating = True
    Application.StatusBar = False
    
    Sheets("Verwaltung").Activate
    kontaktimport_form.Show
    Application.DisplayAlerts = True

End Sub

Sub ShowContactsInFolder(objFolder As Object, ByRef lngZeile As Long)
   Dim objItem As Object, objSubFolder As Object, anzeige_kontakt As String
    
   For Each objItem In objFolder.Items
      If TypeName(objItem) = "ContactItem" Then
         anzeige_kontakt = ""
         lngZeile = lngZeile + 1
         
         If objItem.FirstName <> "" And objItem.LastName <> "" Then anzeige_kontakt = objItem.LastName & ", " & objItem.FirstName
         If objItem.FirstName = "" And objItem.LastName <> "" And objItem.CompanyName <> "" Then anzeige_kontakt = objItem.LastName & ", " & objItem.CompanyName
         If objItem.FirstName <> "" And objItem.LastName = "" And objItem.CompanyName <> "" Then anzeige_kontakt = objItem.FirstName & ", " & objItem.CompanyName
         If objItem.FirstName = "" And objItem.LastName = "" And objItem.CompanyName <> "" Then anzeige_kontakt = objItem.CompanyName
         If objItem.FirstName <> "" And objItem.LastName = "" And objItem.CompanyName = "" Then anzeige_kontakt = objItem.FirstName
         If objItem.FirstName = "" And objItem.LastName <> "" And objItem.CompanyName = "" Then anzeige_kontakt = objItem.LastName
         
         Application.StatusBar = "Kontakte aus Outlook werden gelesen: " & anzeige_kontakt
         
         Sheets("Kontakte").Cells(lngZeile, 1).Value = anzeige_kontakt
         Sheets("Kontakte").Cells(lngZeile, 2).Value = objItem.CompanyName
         Sheets("Kontakte").Cells(lngZeile, 3).Value = objItem.Title
         Sheets("Kontakte").Cells(lngZeile, 4).Value = objItem.FirstName
         Sheets("Kontakte").Cells(lngZeile, 5).Value = objItem.LastName
         Sheets("Kontakte").Cells(lngZeile, 6).Value = objItem.BusinessAddressStreet
         Sheets("Kontakte").Cells(lngZeile, 7).Value = objItem.BusinessAddressPostalCode
         Sheets("Kontakte").Cells(lngZeile, 8).Value = objItem.BusinessAddressCity
         Sheets("Kontakte").Cells(lngZeile, 9).Value = objItem.BusinessAddressCountry
         Sheets("Kontakte").Cells(lngZeile, 10).Value = objItem.Email1Address
         Sheets("Kontakte").Cells(lngZeile, 11).Value = objItem.BusinessTelephoneNumber
         Sheets("Kontakte").Cells(lngZeile, 12).Value = objItem.MobileTelephoneNumber
         Sheets("Kontakte").Cells(lngZeile, 13).Value = objItem.BusinessFaxNumber
         Sheets("Kontakte").Cells(lngZeile, 14).Value = objItem.BusinessHomePage
      End If
   Next
   For Each objSubFolder In objFolder.Folders
      ShowContactsInFolder objSubFolder, lngZeile
   Next
End Sub

Sub kontakt_loeschen(stz As Integer)
    
Dim i As Integer, j As Integer, choice, prozent As Integer

choice = MsgBox("Kontakteintrag wirklich l|fffd|schen?", vbYesNo, "Kontakt l|fffd|schen")
    If choice = vbNo Then
        Exit Sub
    End If

activeSheet.Unprotect

With Sheets("Verwaltung").Range(Cells(stz, 2), Cells(stz, 2))
    .Cells = ""
    .VerticalAlignment = xlCenter
    .HorizontalAlignment = xlCenter
    .Interior.Color = 10092543
    .Font.Color = RGB(0, 0, 0)
    .Font.Size = 10
    .Font.Bold = True
    .Font.Underline = xlUnderlineStyleNone
End With

With Sheets("Verwaltung").Range(Cells(stz + 3, 2), Cells(stz + 3, 2))
    .Cells = "Notiz"
    .VerticalAlignment = xlCenter
    .HorizontalAlignment = xlCenter
    .Interior.Color = 13434879
    .Font.Color = -8355712
    .Font.Size = 10
    .Font.Bold = True
    .Font.Underline = xlUnderlineStyleNone
End With

With Sheets("Verwaltung").Range(Cells(stz, 5), Cells(stz + 5, 7))
    .Cells = ""
    .VerticalAlignment = xlCenter
    .HorizontalAlignment = xlLeft
    .Interior.Color = 10092543
    .Font.Color = RGB(0, 0, 0)
    .Font.Size = 10
    .Font.Bold = False
    .Font.Underline = xlUnderlineStyleNone
End With

With Sheets("Verwaltung").Range(Cells(stz, 9), Cells(stz, 11))
    .Cells = ""
    .VerticalAlignment = xlCenter
    .HorizontalAlignment = xlLeft
    .Interior.Color = 10092543
    .Font.Color = RGB(0, 0, 0)
    .Font.Size = 10
    .Font.Bold = False
    .Font.Underline = xlUnderlineStyleNone
End With

With Sheets("Verwaltung").Range(Cells(stz + 2, 9), Cells(stz + 5, 11))
    .Cells = ""
    .VerticalAlignment = xlCenter
    .HorizontalAlignment = xlLeft
    .Interior.Color = 10092543
    .Font.Color = RGB(0, 0, 0)
    .Font.Size = 10
    .Font.Bold = False
    .Font.Underline = xlUnderlineStyleNone
End With

With Sheets("Verwaltung").Range(Cells(stz, 13), Cells(stz + 5, 14))
    .Cells = ""
    .VerticalAlignment = xlCenter
    .HorizontalAlignment = xlCenter
    .Interior.Color = 16772300
    .Font.Color = RGB(0, 0, 0)
    .Font.Size = 10
    .Font.Bold = False
    .Font.Underline = xlUnderlineStyleNone
End With

With Sheets("Verwaltung").Range(Cells(stz, 16), Cells(stz + 5, 17))
    .Cells = ""
    .VerticalAlignment = xlCenter
    .HorizontalAlignment = xlCenter
    .Interior.Color = 13434828
    .Font.Color = RGB(0, 0, 0)
    .Font.Size = 10
    .Font.Bold = False
    .Font.Underline = xlUnderlineStyleNone
End With

activeSheet.Protect

End Sub
Attribute VB_Name = "anschreiben_modul"
Sub anschreiben()

Application.ScreenUpdating = False

On Error GoTo ERROREXIT

Dim pfad_import As String
Dim pfad_plan As String
Dim fldr As FileDialog
Dim sItem As String
Dim datum As String
Dim frist As Date
Dim frist_eingabe As String
Dim breite_raw As Double, hoehe_raw As Double, breite As Double, hoehe As Double
Dim spl() As String, spl_lines() As String
Dim gewicht As Double
Dim gesamtgewicht As Double

Dim WSHShell As Object, objExec As Object
Dim strResult As String

Set WSHShell = CreateObject("WScript.Shell")

bauvorhaben = Sheets("Verwaltung").Cells(4, 5)
bauvorhaben_anschrift = Sheets("Verwaltung").Cells(5, 5)
bauherr = Sheets("Verwaltung").Cells(6, 5)
bauherr_anschrift = Sheets("Verwaltung").Cells(7, 5)
pfad_versand = Sheets("Konfiguration").Cells(68, 4)
pfad_anschreiben = Sheets("Konfiguration").Cells(69, 4)
pfad_plan = Sheets("Konfiguration").Cells(70, 4)

If Sheets("Verwaltung").ToggleButton3.Value = True Then
    brief_empf_1 = Sheets("Verwaltung").Cells(29, 5)
    brief_empf_2 = Sheets("Verwaltung").Cells(30, 5)
    brief_empf_3 = Sheets("Verwaltung").Cells(31, 5)
    brief_empf_4 = Sheets("Verwaltung").Cells(32, 5)
    brief_empf_5 = Sheets("Verwaltung").Cells(33, 5)
    brief_empf_6 = Sheets("Verwaltung").Cells(34, 5)
End If

If Sheets("Verwaltung").ToggleButton4.Value = True Then
    brief_empf_1 = Sheets("Verwaltung").Cells(36, 5)
    brief_empf_2 = Sheets("Verwaltung").Cells(37, 5)
    brief_empf_3 = Sheets("Verwaltung").Cells(38, 5)
    brief_empf_4 = Sheets("Verwaltung").Cells(39, 5)
    brief_empf_5 = Sheets("Verwaltung").Cells(40, 5)
    brief_empf_6 = Sheets("Verwaltung").Cells(41, 5)
End If

If Sheets("Verwaltung").ToggleButton5.Value = True Then
    brief_empf_1 = Sheets("Verwaltung").Cells(43, 5)
    brief_empf_2 = Sheets("Verwaltung").Cells(44, 5)
    brief_empf_3 = Sheets("Verwaltung").Cells(45, 5)
    brief_empf_4 = Sheets("Verwaltung").Cells(46, 5)
    brief_empf_5 = Sheets("Verwaltung").Cells(47, 5)
    brief_empf_6 = Sheets("Verwaltung").Cells(48, 5)
End If

If Sheets("Verwaltung").ToggleButton6.Value = True Then
    brief_empf_1 = Sheets("Verwaltung").Cells(50, 5)
    brief_empf_2 = Sheets("Verwaltung").Cells(51, 5)
    brief_empf_3 = Sheets("Verwaltung").Cells(52, 5)
    brief_empf_4 = Sheets("Verwaltung").Cells(53, 5)
    brief_empf_5 = Sheets("Verwaltung").Cells(54, 5)
    brief_empf_6 = Sheets("Verwaltung").Cells(55, 5)
End If

If Sheets("Verwaltung").ToggleButton7.Value = True Then
    brief_empf_1 = Sheets("Verwaltung").Cells(57, 5)
    brief_empf_2 = Sheets("Verwaltung").Cells(58, 5)
    brief_empf_3 = Sheets("Verwaltung").Cells(59, 5)
    brief_empf_4 = Sheets("Verwaltung").Cells(60, 5)
    brief_empf_5 = Sheets("Verwaltung").Cells(61, 5)
    brief_empf_6 = Sheets("Verwaltung").Cells(62, 5)
End If
If Sheets("Verwaltung").ToggleButton38.Value = True Then
    brief_empf_1 = Sheets("Verwaltung").Cells(64, 5)
    brief_empf_2 = Sheets("Verwaltung").Cells(65, 5)
    brief_empf_3 = Sheets("Verwaltung").Cells(66, 5)
    brief_empf_4 = Sheets("Verwaltung").Cells(67, 5)
    brief_empf_5 = Sheets("Verwaltung").Cells(68, 5)
    brief_empf_6 = Sheets("Verwaltung").Cells(69, 5)
End If

If Sheets("Verwaltung").ToggleButton39.Value = True Then
    brief_empf_1 = Sheets("Verwaltung").Cells(71, 5)
    brief_empf_2 = Sheets("Verwaltung").Cells(72, 5)
    brief_empf_3 = Sheets("Verwaltung").Cells(73, 5)
    brief_empf_4 = Sheets("Verwaltung").Cells(74, 5)
    brief_empf_5 = Sheets("Verwaltung").Cells(75, 5)
    brief_empf_6 = Sheets("Verwaltung").Cells(76, 5)
End If

If Sheets("Verwaltung").ToggleButton40.Value = True Then
    brief_empf_1 = Sheets("Verwaltung").Cells(78, 5)
    brief_empf_2 = Sheets("Verwaltung").Cells(79, 5)
    brief_empf_3 = Sheets("Verwaltung").Cells(80, 5)
    brief_empf_4 = Sheets("Verwaltung").Cells(81, 5)
    brief_empf_5 = Sheets("Verwaltung").Cells(82, 5)
    brief_empf_6 = Sheets("Verwaltung").Cells(83, 5)
End If

If Sheets("Verwaltung").ToggleButton41.Value = True Then
    brief_empf_1 = Sheets("Verwaltung").Cells(85, 5)
    brief_empf_2 = Sheets("Verwaltung").Cells(86, 5)
    brief_empf_3 = Sheets("Verwaltung").Cells(87, 5)
    brief_empf_4 = Sheets("Verwaltung").Cells(88, 5)
    brief_empf_5 = Sheets("Verwaltung").Cells(89, 5)
    brief_empf_6 = Sheets("Verwaltung").Cells(90, 5)
End If

If Sheets("Verwaltung").ToggleButton50.Value = True Then
    brief_empf_1 = Sheets("Verwaltung").Cells(92, 5)
    brief_empf_2 = Sheets("Verwaltung").Cells(93, 5)
    brief_empf_3 = Sheets("Verwaltung").Cells(94, 5)
    brief_empf_4 = Sheets("Verwaltung").Cells(95, 5)
    brief_empf_5 = Sheets("Verwaltung").Cells(96, 5)
    brief_empf_6 = Sheets("Verwaltung").Cells(97, 5)
End If

If Sheets("Verwaltung").ToggleButton51.Value = True Then
    brief_empf_1 = Sheets("Verwaltung").Cells(99, 5)
    brief_empf_2 = Sheets("Verwaltung").Cells(100, 5)
    brief_empf_3 = Sheets("Verwaltung").Cells(101, 5)
    brief_empf_4 = Sheets("Verwaltung").Cells(102, 5)
    brief_empf_5 = Sheets("Verwaltung").Cells(103, 5)
    brief_empf_6 = Sheets("Verwaltung").Cells(104, 5)
End If

If Sheets("Verwaltung").ToggleButton52.Value = True Then
    brief_empf_1 = Sheets("Verwaltung").Cells(106, 5)
    brief_empf_2 = Sheets("Verwaltung").Cells(107, 5)
    brief_empf_3 = Sheets("Verwaltung").Cells(108, 5)
    brief_empf_4 = Sheets("Verwaltung").Cells(109, 5)
    brief_empf_5 = Sheets("Verwaltung").Cells(110, 5)
    brief_empf_6 = Sheets("Verwaltung").Cells(111, 5)
End If

If Sheets("Verwaltung").ToggleButton53.Value = True Then
    brief_empf_1 = Sheets("Verwaltung").Cells(113, 5)
    brief_empf_2 = Sheets("Verwaltung").Cells(114, 5)
    brief_empf_3 = Sheets("Verwaltung").Cells(115, 5)
    brief_empf_4 = Sheets("Verwaltung").Cells(116, 5)
    brief_empf_5 = Sheets("Verwaltung").Cells(117, 5)
    brief_empf_6 = Sheets("Verwaltung").Cells(118, 5)
End If

If Sheets("Verwaltung").ToggleButton62.Value = True Then
    brief_empf_1 = Sheets("Verwaltung").Cells(120, 5)
    brief_empf_2 = Sheets("Verwaltung").Cells(121, 5)
    brief_empf_3 = Sheets("Verwaltung").Cells(122, 5)
    brief_empf_4 = Sheets("Verwaltung").Cells(123, 5)
    brief_empf_5 = Sheets("Verwaltung").Cells(124, 5)
    brief_empf_6 = Sheets("Verwaltung").Cells(125, 5)
End If

If Sheets("Verwaltung").ToggleButton63.Value = True Then
    brief_empf_1 = Sheets("Verwaltung").Cells(127, 5)
    brief_empf_2 = Sheets("Verwaltung").Cells(128, 5)
    brief_empf_3 = Sheets("Verwaltung").Cells(129, 5)
    brief_empf_4 = Sheets("Verwaltung").Cells(130, 5)
    brief_empf_5 = Sheets("Verwaltung").Cells(131, 5)
    brief_empf_6 = Sheets("Verwaltung").Cells(132, 5)
End If

Set fldr = Application.FileDialog(msoFileDialogFolderPicker)
With fldr
    .Title = "Ordner f|fffd|r Planversand ausw|fffd|hlen"
    .AllowMultiSelect = False
    .InitialFileName = pfad_versand
    If .Show <> -1 Then GoTo NextCode
    sItem = .SelectedItems(1)
End With
NextCode:
pfad_import = sItem
'Set pfad_versand = Nothing

choice = MsgBox("Ausgew|fffd|hlter Ordner:" & vbCrLf & vbCrLf & pfad_import & vbCrLf & vbCrLf & "Fortfahren?", vbYesNo, "Anschreiben")
    If choice = vbNo Then
    Exit Sub
    End If
    
eintragen_typ = ""
If Right(pfad_import, 11) = "Planversand" Then eintragen_typ = "planversand"
If Right(pfad_import, 8) = "Freigabe" Then eintragen_typ = "freigabe"
If eintragen_typ = "" Then
    MsgBox "Ung|fffd|ltiger Ordnername!", vbCritical, "Anschreiben"
    Exit Sub
End If

If eintragen_typ = "planversand" Then datum = Left(Right(pfad_import, 22), 8)
If eintragen_typ = "freigabe" Then datum = Left(Right(pfad_import, 19), 8)

xfach = InputBox("Ausf|fffd|hrung eingeben:" & vbCrLf _
                        & "1 = einfach" & vbCrLf _
                        & "2 = zweifach" & vbCrLf _
                        & "e.t.c", "Anschreiben", Default:="1")
If eintragen_typ = "planversand" Then
    frist_eingabe = InputBox("Bitte um Pr|fffd|fung bis zum:", "Anschreiben", Default:=Format(Date + 7, "dd.mm.yyyy"))
    If frist_eingabe <> "" Then
        frist = frist_eingabe
        typ = "mit der Bitte um Pr|fffd|fung bis zum " & frist
    Else
        typ = "mit der Bitte um Pr|fffd|fung"
    End If
End If

If eintragen_typ = "freigabe" Then
    typ = "zur Ausf|fffd|hrung"
End If

    pfad = ThisWorkbook.Path & "\Vorlage Begleitbrief.docm"
    Set wrdApp = CreateObject("Word.Application")
    Set wrdDoc = wrdApp.Documents.Open(pfad)
    wrdApp.Visible = True
    plan_list_1 = ""
    plan_list_2 = ""
    plan_list_3 = ""
    plan_list_4 = ""
    plan = Dir$(pfad_import & "\*.*")
        Do While plan <> ""
            If LCase(Right(plan, 3)) = "pdf" Then
                If plan_davor <> "" And Left(plan_davor, 2) <> Left(plan, 2) Or Left(plan, 3) = "FT_" And plan_davor <> "" And Left(plan_davor, 5) <> Left(plan, 5) Then
                    plan_davor = plan
                    plan = vbCrLf & plan
                    neue_zeile = "ja"
                Else
                    plan_davor = plan
                    neue_zeile = "nein"
                End If
                If Len(plan_list_1 & Replace(plan, Right(plan, 4), "")) < 254 Then
                    If neue_zeile = "nein" Then
                        plan_list_1 = plan_list_1 & ", " & Replace(plan, Right(plan, 4), "")
                    Else
                        plan_list_1 = plan_list_1 & Replace(plan, Right(plan, 4), "")
                    End If
                Else
                    If Len(plan_list_2 & Replace(plan, Right(plan, 4), "")) < 254 Then
                        If neue_zeile = "nein" Then
                            plan_list_2 = plan_list_2 & ", " & Replace(plan, Right(plan, 4), "")
                        Else
                            plan_list_2 = plan_list_2 & Replace(plan, Right(plan, 4), "")
                        End If
                    Else
                        If Len(plan_list_3 & Replace(plan, Right(plan, 4), "")) < 254 Then
                            If neue_zeile = "nein" Then
                                plan_list_3 = plan_list_3 & ", " & Replace(plan, Right(plan, 4), "")
                            Else
                                plan_list_3 = plan_list_3 & Replace(plan, Right(plan, 4), "")
                            End If
                        Else
                            If neue_zeile = "nein" Then
                                plan_list_4 = plan_list_4 & ", " & Replace(plan, Right(plan, 4), "")
                            Else
                                plan_list_4 = plan_list_4 & Replace(plan, Right(plan, 4), "")
                            End If
                        End If
                    End If
                End If
            
            'Gewicht bestimmen
            gewicht = 0
            
            Set objExec = WSHShell.Exec("""" & pfad_plan & "pdfinfo.exe"" " & """" & pfad_import & "\" & plan)
            strResult = objExec.StdOut.ReadAll
            
            hoehe_raw = 0
            breite_raw = 0
            hoehe = 0
            breite = 0
            
            For i = 1 To 100
                strResult = Replace(strResult, "  ", " ")
            Next
            
            spl_lines() = Split(strResult, Chr(10))
                For j = LBound(spl_lines) To UBound(spl_lines)
                        spl() = Split(spl_lines(j), " ")
                        For i = LBound(spl) To UBound(spl) - 1
                            If spl(i) = "Page" And spl(i + 1) = "size:" Then
                                breite_raw = Replace(spl(i + 2), ".", ",")
                                hoehe_raw = Replace(spl(i + 4), ".", ",")
                            End If
                        Next
                Next
            
            breite = Round(breite_raw / 2.834645, 0)
            hoehe = Round(hoehe_raw / 2.834645, 0)
        
            gewicht = breite / 1000 * hoehe / 1000 * 80
            gesamtgewicht = gesamtgewicht + gewicht
                        
            End If
        plan = Dir$()
        Loop
    
    wrdDoc.FormFields("empf_1").Result = brief_empf_1
    wrdDoc.FormFields("empf_2").Result = brief_empf_2
    wrdDoc.FormFields("empf_3").Result = brief_empf_3
    wrdDoc.FormFields("empf_4").Result = brief_empf_4
    wrdDoc.FormFields("empf_5").Result = brief_empf_5
    wrdDoc.FormFields("empf_6").Result = brief_empf_6
    wrdDoc.FormFields("bv").Result = bauvorhaben
    wrdDoc.FormFields("bv_anschrift").Result = bauvorhaben_anschrift
    wrdDoc.FormFields("bh").Result = bauherr
    wrdDoc.FormFields("bh_anschrift").Result = bauherr_anschrift
    wrdDoc.FormFields("ausfuehrung").Result = "(" & xfach & "-fach)"
    wrdDoc.FormFields("typ").Result = typ
    wrdDoc.FormFields("plaene_1").Result = Mid(plan_list_1, 3)
    wrdDoc.FormFields("plaene_2").Result = plan_list_2
    wrdDoc.FormFields("plaene_3").Result = plan_list_3
    wrdDoc.FormFields("plaene_4").Result = plan_list_4
    
    wrdDoc.FormFields("gesamtgewicht").Result = gesamtgewicht
    wrdDoc.FormFields("ausfuehrung_2").Result = xfach
    
    erfolg = "ja"
ERROREXIT:
    If erfolg <> "ja" Then MsgBox "Es gab einen Fehler!", vbCritical, "Anschreiben"

    wrdDoc.SaveAs2 filename:= _
        pfad_anschreiben & "Begleitbrief " & Replace(Replace(Replace(pfad_import, pfad_versand, ""), " Planversand", ""), " Freigabe", "") & ".docm", _
        FileFormat:=wdFormatXMLDocumentMacroEnabled, LockComments:=False, Password:="", _
        AddToRecentFiles:=True, WritePassword:="", ReadOnlyRecommended:=False, _
        EmbedTrueTypeFonts:=False, SaveNativePictureFormat:=False, SaveFormsData _
        :=False, SaveAsAOCELetter:=False, CompatibilityMode:=14

Set wrdDoc = Nothing
    Set wrdApp = Nothing

Application.ScreenUpdating = True

End Sub










Attribute VB_Name = "drucken_modul"
Sub drucken()

Application.ScreenUpdating = False

On Error GoTo ERROREXIT

Dim spl() As String, spl_lines() As String, spl2() As String
Dim pfad_import As String
Dim bauvorhaben As String
Dim pfad_versand As String
Dim pfad_logfile As String
Dim pfad_plan As String
Dim druck_1mal_pfad As String
Dim druck_2mal_pfad As String
Dim druck_1mal_A2fit_pfad As String
Dim fldr As FileDialog
Dim sItem As String
Dim dokument As String
Dim breite_raw As Double, hoehe_raw As Double, breite As Double, hoehe As Double, DINformat As String, abmessungen As String
Dim i As Integer, j As Integer
Dim sent_count As Integer
Dim exit_count As Integer
Dim sent_list As String
Dim exit_list As String
Dim exit_plan As String
Dim listener As String
Dim VonFolder As String
Dim NachFolder As String
Dim NachFolder2 As String

Dim WSHShell As Object, objExec As Object
Dim strResult As String

Set WSHShell = CreateObject("WScript.Shell")

bauvorhaben = Sheets("Verwaltung").Cells(4, 5)
pfad_versand = Sheets("Konfiguration").Cells(68, 4)
pfad_logfile = Sheets("Konfiguration").Cells(67, 4)
pfad_plan = Sheets("Konfiguration").Cells(70, 4)

druck_1mal_pfad = Sheets("Konfiguration").Cells(60, 4)
druck_2mal_pfad = Sheets("Konfiguration").Cells(61, 4)
druck_1mal_A1fit_pfad = Sheets("Konfiguration").Cells(62, 4)
druck_1mal_A2fit_pfad = Sheets("Konfiguration").Cells(63, 4)

sent_count = 0
exit_count = 0
sent_list = ""
exit_list = ""

If Sheets("Verwaltung").OptionButton6.Value = True Then
    listener = "einfach in Originalgr|fffd||fffd|e"
    NachFolder = druck_1mal_pfad
    NachFolder2 = druck_1mal_pfad
End If

If Sheets("Verwaltung").OptionButton7.Value = True Then
    listener = "zweifach in Originalgr|fffd||fffd|e"
    NachFolder = druck_2mal_pfad
    NachFolder2 = druck_2mal_pfad
End If

If Sheets("Verwaltung").OptionButton8.Value = True Then
    listener = "einfach in reduzierter Gr|fffd||fffd|e"
    NachFolder = druck_1mal_A2fit_pfad
    NachFolder2 = druck_1mal_A1fit_pfad
End If

Set fldr = Application.FileDialog(msoFileDialogFolderPicker)
With fldr
    .Title = "Ordner f|fffd|r Plotten ausw|fffd|hlen"
    .AllowMultiSelect = False
    .InitialFileName = pfad_versand
    If .Show <> -1 Then GoTo NextCode
    sItem = .SelectedItems(1)
End With
NextCode:
pfad_import = sItem
Set fldr = Nothing

choice = MsgBox("Ausgew|fffd|hlter Ordner:" & vbCrLf & vbCrLf & pfad_import & vbCrLf & vbCrLf & "Fortfahren?", vbYesNo, "Pl|fffd|ne plotten")
    If choice = vbNo Then
    Exit Sub
    End If
    
    VonFolder = pfad_import
    
    dokument = Dir$(pfad_import & "\*.*")

    Do While dokument <> ""
        exit_plan = "false"
        
        If LCase(Right(dokument, 3)) <> "pdf" Then GoTo SHORTCUT_CHECK_1
    
        'Einbauteilpl|fffd|ne aus "kleine Pl|fffd|ne" aussortieren
        If Sheets("Verwaltung").OptionButton8.Value = True Then
            spl() = Split(schluessel(dokument), "*")
            If spl(1) = "3" Or spl(1) = "4" Or spl(1) = "5" Then
                exit_count = exit_count + 1
                exit_list = exit_list & vbCrLf & dokument & " (Einbauteil)"
                GoTo SHORTCUT_CHECK_1:
            End If
        End If
        
        Set objExec = WSHShell.Exec("""" & pfad_plan & "pdfinfo.exe"" " & """" & pfad_import & "\" & dokument)
        strResult = objExec.StdOut.ReadAll
        
        hoehe_raw = 0
        breite_raw = 0
        hoehe = 0
        breite = 0
        abmessungen = ""
        DINformat = ""
        
        For i = 1 To 100
            strResult = Replace(strResult, "  ", " ")
        Next
        
        spl_lines() = Split(strResult, Chr(10))
            For j = LBound(spl_lines) To UBound(spl_lines)
                    spl() = Split(spl_lines(j), " ")
                    For i = LBound(spl) To UBound(spl) - 1
                        If spl(i) = "Page" And spl(i + 1) = "size:" Then
                            breite_raw = Replace(spl(i + 2), ".", ",")
                            hoehe_raw = Replace(spl(i + 4), ".", ",")
                        End If
                        If spl(i) = "Pages:" Then
                            If spl(i + 1) > 1 Then
                                exit_count = exit_count + 1
                                exit_list = exit_list & vbCrLf & dokument & " (mehrseitig)"
                                GoTo SHORTCUT_CHECK_1:
                            End If
                        End If
                    Next
            Next
        
        breite = Round(breite_raw / 2.834645, 0)
        hoehe = Round(hoehe_raw / 2.834645, 0)
    
        'MsgBox dokument & vbCrLf & _
                "Breite: " & breite & vbCrLf & _
                "H|fffd|he: " & hoehe
        
        abmessungen = Replace(Str(breite) & "/" & Str(hoehe), " ", "")
        
        If Right(abmessungen, 3) = "841" Then DINformat = "DIN A0 - " & Replace(abmessungen, "/841", "")
        If Left(abmessungen, 3) = "841" Then DINformat = "DIN A0 - " & Replace(abmessungen, "841/", "")
        
        If abmessungen = "297/210" Or abmessungen = "210/297" Then
            DINformat = "DIN A4"
            exit_plan = "true"
        End If
        
        If abmessungen = "297/420" Or abmessungen = "420/297" Then
            DINformat = "DIN A3"
            exit_plan = "true"
        End If
        
        If abmessungen = "594/420" Or abmessungen = "420/594" Then DINformat = "DIN A2"
        If abmessungen = "594/841" Or abmessungen = "841/594" Then DINformat = "DIN A1"
        If abmessungen = "1189/841" Or abmessungen = "841/1189" Then DINformat = "DIN A0"
        
        If exit_plan = "false" Then
            sent_count = sent_count + 1
        
            'MsgBox dokument & vbCrLf & _
                    "Breite: " & breite & vbCrLf & _
                    "H|fffd|he: " & hoehe
            
            If breite < 1800 And hoehe < 1800 Then
                sent_list = sent_list & vbCrLf & dokument & " (" & DINformat & ")"
            Else
                sent_list = sent_list & vbCrLf & dokument & " (" & DINformat & ")" & "*"
            End If
        Else
            exit_count = exit_count + 1
            exit_list = exit_list & vbCrLf & dokument & " (" & DINformat & ")"
        End If
        
SHORTCUT_CHECK_1:
    dokument = Dir$()
    Loop

    choice = MsgBox("Plot " & listener & vbCrLf & _
    vbCrLf & _
    "Anzahl Pl|fffd|ne an Plotter: " & sent_count & vbCrLf _
    & sent_list & vbCrLf _
    & vbCrLf _
    & "Anzahl Pl|fffd|ne nicht plotten: " & exit_count & vbCrLf _
    & exit_list & vbCrLf _
    & vbCrLf _
    & "Fortfahren?", vbYesNo, "Pl|fffd|ne plotten")
    
    If choice = vbNo Then
    Exit Sub
    End If
    
    If Right$(VonFolder, 1) <> "\" Then VonFolder = VonFolder & "\"
    If Right$(NachFolder, 1) <> "\" Then NachFolder = NachFolder & "\"
    If Right$(NachFolder2, 1) <> "\" Then NachFolder2 = NachFolder2 & "\"
    
    spl() = Split(sent_list, vbCrLf)
        For i = LBound(spl) To UBound(spl)
            spl2() = Split(spl(i), ".pdf")
            If spl(i) <> "" Then
                If Right(spl(i), 1) <> "*" Then
                    FileCopy VonFolder & spl2(0) & ".pdf", NachFolder & spl2(0) & ".pdf"
                Else
                    FileCopy VonFolder & spl2(0) & ".pdf", NachFolder2 & spl2(0) & ".pdf"
                End If
            End If
        Next
    
If Dir(pfad_logfile, vbDirectory) = "" Then MkDir (pfad_logfile)
Open pfad_logfile & Format(Now, "yyyy-mm-dd hh.mm.ss") & " plotten_logfile.txt" For Output As #1
    Print #1, vbCrLf _
                & bauvorhaben & vbCrLf _
                & vbCrLf _
                & "Plot " & listener & ": " & Format(Now, "dd.mm.yyyy hh:mm:ss") & " - Von: " & Environ("Username") & vbCrLf _
                & vbCrLf _
                & "===========================================================" & vbCrLf _
                & vbCrLf _
                & "Anzahl Pl|fffd|ne an Plotter geschickt: " & sent_count & vbCrLf _
                & Mid(sent_list, 3) & vbCrLf _
                & vbCrLf _
                & "Anzahl aussortierter Pl|fffd|ne: " & exit_count & vbCrLf _
                & Mid(exit_list, 3)
                
Close #1

MsgBox "Plot " & listener & vbCrLf & _
    vbCrLf & _
    "Anzahl Pl|fffd|ne an Plotter geschickt: " & sent_count & vbCrLf _
    & Mid(sent_list, 3) & vbCrLf _
    & vbCrLf _
    & "Anzahl aussortierter Pl|fffd|ne: " & exit_count & vbCrLf _
    & Mid(exit_list, 3), vbInformation, "Pl|fffd|ne plotten"

erfolg = "ja"
ERROREXIT:
If erfolg <> "ja" Then MsgBox "Es gab einen Fehler!", vbCritical, "Pl|fffd|ne plotten"

Application.ScreenUpdating = True

End Sub
Attribute VB_Name = "ein_ausblenden_modul"
Sub ein_ausblenden(blatt)

Application.ScreenUpdating = False

Dim erste_zeile As Integer
Dim letzte_zeile As Integer
Dim spalte_bauteil As Integer
Dim spalte_index As Integer
Dim i As Integer

erste_zeile = Sheets("Konfiguration").Cells(59, 23)
spalte_bauteil = Sheets("Konfiguration").Cells(60, 17)
spalte_index = Sheets("Konfiguration").Cells(61, 17)

If blatt.ToggleButton1.Caption = "Planhistorie ausblenden" Then
    
    blatt.ToggleButton1.Caption = "Planhistorie einblenden"
    blatt.ToggleButton1.Value = False
    
    letzte_zeile = blatt.Cells(Rows.Count, spalte_index).End(xlUp).Row
    If letzte_zeile <= erste_zeile Then letzte_zeile = erste_zeile + 1
    
    For i = erste_zeile To letzte_zeile
    
        If blatt.Cells(i, spalte_bauteil) = "" And blatt.Cells(i, spalte_index) <> "" Then blatt.Rows(i & ":" & i).EntireRow.Hidden = True
    
    Next

Else

    blatt.ToggleButton1.Caption = "Planhistorie ausblenden"
    blatt.ToggleButton1.Value = True
    
    letzte_zeile = blatt.Cells(Rows.Count, spalte_index).End(xlUp).Row + 100
    If letzte_zeile <= erste_zeile Then letzte_zeile = erste_zeile + 1
    
    For i = erste_zeile To letzte_zeile
    
        blatt.Rows(i & ":" & i).EntireRow.Hidden = False
    
    Next

End If

Application.ScreenUpdating = True

End Sub
Attribute VB_Name = "einlesen_form"
Attribute VB_Base = "0{F5F39259-33CB-44A9-BF15-67E89E185510}{8307FF0D-46EE-411D-A082-A1724FE27975}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False





Private Sub CommandButton1_Click()
update_report
Unload einlesen_form
End Sub

Private Sub CommandButton2_Click()
update_ueplan
Unload einlesen_form
End Sub

Private Sub CommandButton3_Click()
Unload einlesen_form
End Sub
Attribute VB_Name = "eintragen_modul"
Sub eintragen()

'Kein "Hin- und Herspringen"
Application.ScreenUpdating = False

'User kann nicht in den Debug-Modus gelangen
'On Error GoTo ERROREXIT

'Stand vor Ausf|fffd|hren der Aktion wird abgespeichert
ActiveWorkbook.SaveCopyAs filename:=ThisWorkbook.Path & "\" & Replace(ThisWorkbook.Name, ".xlsm", "_bak.xlsm")

'Variablen werden deklariert (ACHTUNG UNVOLLST|fffd|NDIG UND TEILW. WIRKUNGSLOS
Dim fso As Object, objSFold As Object, WSHShell As Object, regex As Object, f As Object, objExec As Object

Dim plan As String
Dim treffer_art As Integer
Dim prfx As String
Dim trz_typ As String
Dim typ As String
Dim trz_nr As String
Dim nr As String
Dim trz_indx As String
Dim indx As String
Dim trz_sffx As String
Dim sffx As String
Dim trz_in As String
Dim inhalt As String
Dim plan_davor As String
Dim treffer_plan As String
Dim pfad_import As String
Dim fldr As FileDialog
Dim sItem As String
Dim datum As Date
Dim gez_datum As Date
Dim comp_wert As Integer
Dim stueck As Integer
Dim stueck_uber As Integer
Dim xyz As String
Dim spl() As String
Dim spl_lines() As String
Dim strResult As String
Dim rep As Integer
Dim treffer_typ As String
Dim pfad_plan As String
Dim prfx_pdf As String
Dim baut_pdf As String
Dim indx_pdf As String
Dim sffx_pdf As String
Dim inhalt_pdf As String
Dim inhalt_an As Integer
Dim inhalt_en As Integer
Dim ordnername() As String
Dim dokument As String
Dim start_plankopfzeile As Integer
Dim breite_raw As Double, hoehe_raw As Double, breite As Double, hoehe As Double, DINformat As String, abmessungen As String
Dim x11#, x12#, x21#, x22#, x31#, x32#, x41#, x42#, x51#, x52#, x61#, x62#, x71#, x72#, x81#, x82#, y11#, y12#, y21#, y22#, y31#, y32#, y41#, y42#, y51#, y52#, y61#, y62#, y71#, y72#, y81#, y82#

Dim i#, j#, k#

Dim strHelp As String
Dim arrInput() As String

Dim size1, size2

'Variablen werden besetzt
spalte_prfx = Sheets("Konfiguration").Cells(59, 17)
spalte_bauteil = Sheets("Konfiguration").Cells(60, 17)
spalte_index = Sheets("Konfiguration").Cells(61, 17)
spalte_sffx = Sheets("Konfiguration").Cells(62, 17)
spalte_gez_datum = Sheets("Konfiguration").Cells(63, 17)
spalte_zeichner = Sheets("Konfiguration").Cells(64, 17)
spalte_stck_plan = Sheets("Konfiguration").Cells(65, 17)
spalte_stck_uber = Sheets("Konfiguration").Cells(66, 17)
spalte_inhalt = Sheets("Konfiguration").Cells(67, 17)
spalte_verschickt = Sheets("Konfiguration").Cells(68, 17)
spalte_fring = Sheets("Konfiguration").Cells(69, 17)
spalte_frarc = Sheets("Konfiguration").Cells(70, 17)
spalte_freigabe = Sheets("Konfiguration").Cells(71, 17)
spalte_entfallen = Sheets("Konfiguration").Cells(72, 17)
erste_zeile = Sheets("Konfiguration").Cells(59, 23)
bauvorhaben = Sheets("Verwaltung").Cells(4, 5)
pfad_versand = Sheets("Konfiguration").Cells(68, 4)
pfad_logfile = Sheets("Konfiguration").Cells(67, 4)
pfad_plan = Sheets("Konfiguration").Cells(70, 4)

'Planhistorie einblenden
For Each Worksheet In ActiveWorkbook.Worksheets
    If Worksheet.Visible = True And Worksheet.Name <> "Verwaltung" And Worksheet.Name <> "Konfiguration" Then
        letzte_zeile = Worksheet.Cells(Rows.Count, spalte_index).End(xlUp).Row + 100
        If letzte_zeile <= erste_zeile Then letzte_zeile = erste_zeile + 1
        
        For i = erste_zeile To letzte_zeile
        
            Worksheet.Rows(i).EntireRow.Hidden = False
        
        Next
    End If
Next Worksheet
 
extra_text = ""
 
k = 1

'Ordner zur Bearbeitung wird gew|fffd|hlt
If Dir(pfad_plan) <> "" Then
Set WSHShell = CreateObject("WScript.Shell")
Set fso = CreateObject("Scripting.FileSystemObject")
Set regex = CreateObject("vbscript.regexp")
regex.MultiLine = True
Set objSFold = fso.GetFolder(Left(pfad_plan, Len(pfad_plan) - 1))
End If

Set fldr = Application.FileDialog(msoFileDialogFolderPicker)
With fldr
    .Title = "Ordner f|fffd|r Planversand ausw|fffd|hlen"
    .AllowMultiSelect = False
    .InitialFileName = pfad_versand
    If .Show <> -1 Then GoTo NextCode
    sItem = .SelectedItems(1)
End With
NextCode:
pfad_import = sItem
Set pfad_versand = Nothing

choice = MsgBox("Ausgew|fffd|hlter Ordner:" & vbCrLf & vbCrLf & pfad_import & vbCrLf & vbCrLf & "Fortfahren?", vbYesNo, "Pl|fffd|ne eintragen")
    If choice = vbNo Then
    Exit Sub
    End If
    
'Orndername wird ausgelesen, Infos: Versand oder Freigabe, Datum
ordnername() = Split(pfad_import, "\")
ordnername(UBound(ordnername)) = Replace(ordnername(UBound(ordnername)), "  ", " ")
ordnername(UBound(ordnername)) = Replace(ordnername(UBound(ordnername)), "  ", " ")
ordnername(UBound(ordnername)) = Replace(ordnername(UBound(ordnername)), "  ", " ")

eintragen_typ = ""
If Right(ordnername(UBound(ordnername)), 11) = "Planversand" Then eintragen_typ = "planversand"
If Right(ordnername(UBound(ordnername)), 8) = "Freigabe" Then eintragen_typ = "freigabe"
If eintragen_typ = "" Or Len(ordnername(UBound(ordnername))) <> 19 And Len(ordnername(UBound(ordnername))) <> 22 Then
    MsgBox "Ung|fffd|ltiger Ordnername!", vbCritical, "Pl|fffd|ne eintragen"
    Exit Sub
End If

If eintragen_typ = "planversand" Then datum = Left(Right(pfad_import, 16), 2) & "." & Left(Right(pfad_import, 19), 2) & ".20" & Left(Right(pfad_import, 22), 2)
If eintragen_typ = "freigabe" Then datum = Left(Right(pfad_import, 13), 2) & "." & Left(Right(pfad_import, 16), 2) & ".20" & Left(Right(pfad_import, 19), 2)

'Die Z|fffd|hler f|fffd|r Erfolge und Misserfolge werden zur|fffd|ckgesetzt
pl_edit_count = 0
pl_edit_list = ""
ausgabe_pl_edit_list = ""

pl_edit_storno_count = 0
pl_edit_storno_list = ""
ausgabe_pl_edit_storno_list = ""

pl_edit_storno_baufrei_count = 0
pl_edit_storno_baufrei_list = ""
ausgabe_pl_edit_storno_baufrei_list = ""

pl_insert_count = 0
pl_insert_list = ""
ausgabe_pl_insert_list = ""

pl_error_count = 0
pl_error_list = ""
ausgabe_pl_error_list = ""

stck_warnung_count = 0
stck_warnung_list = ""

freig_storno_count = 0
        
'Die Dateien im Ordner werden der reihe nach ausgewertet
dokument = Dir$(pfad_import & "\*.*")

Do While dokument <> ""
    
    If LCase(Right(dokument, 3)) <> "pdf" Then GoTo SHORTCUT1
    
    Application.StatusBar = "In Bearbeitung: " & dokument
    
    'Planattribute werden zur|fffd|ckgesetzt
    prfx = ""
    typ = ""
    nr = ""
    indx = ""
    sffx = ""
    inhalt = ""
    plan = ""
    kuerzel = ""
    gez_datum = Empty
    stueck = 0
    pl_status = ""
    comp_wert = 2
    blatt = "leer"
    treffer_art = 0
    treffer_zeile = ""
    treffer_sheet = ""
    treffer_plan = ""
    plan_davor = ""
    z_start = 0
    sp_var = 0
    prfx_pdf = ""
    baut_pdf = ""
    indx_pdf = ""
    inhalt = ""
    sffx_pdf = ""
    inhalt_pdf = ""
    
    'Plantyp wird erkannt in function(schluessel)
    spl() = Split(schluessel(dokument), "*")
    For i = LBound(spl) To UBound(spl)
        If spl(i) <> "" Then
            If i = 0 Then plan = spl(i)
            If i = 1 Then treffer_art = spl(i)
            If i = 2 Then prfx = spl(i)
            If i = 3 Then trz_typ = spl(i)
            If i = 4 Then typ = spl(i)
            If i = 5 Then trz_nr = spl(i)
            If i = 6 Then nr = spl(i)
            If i = 7 Then trz_indx = spl(i)
            If i = 8 Then indx = spl(i)
            If i = 9 Then trz_sffx = spl(i)
            If i = 10 Then sffx = spl(i)
            If i = 11 Then trz_in = spl(i)
            If i = 12 Then inhalt = spl(i)
        End If
    Next
    
    If treffer_art = 1 Then
        treffer_sheet = "Fertigteile"
        start_plankopfzeile = 90
    End If
    
    If treffer_art = 2 Then
        treffer_sheet = "|fffd|bersichten"
        start_plankopfzeile = 100
    End If
    
    If treffer_art = 3 Or treffer_art = 4 Or treffer_art = 5 Then
        treffer_sheet = "Einbauteile"
        start_plankopfzeile = 110
    End If

    If treffer_art = 6 Then
        treffer_sheet = "Konstruktionspl|fffd|ne"
        start_plankopfzeile = 120
    End If
    
    If treffer_art = 7 Then
        treffer_sheet = "Werkpl|fffd|ne"
        start_plankopfzeile = 130
    End If
    
    If treffer_art = 8 Then
        plan = Replace(dokument, Right(dokument, 4), "")
        MsgBox "Dokument " & prfx & trz_typ & plan & " als Stahl- bzw. Mattenliste erkannt." & vbCrLf & vbCrLf & "Keine Eintragung in Planliste.", vbCritical, "Pl|fffd|ne eintragen"
        pl_status = "error"
        GoTo SHORTCUT2
    End If
    
    If treffer_art = 0 Then
        plan = Replace(dokument, Right(dokument, 4), "")
        MsgBox "F|fffd|r Plan " & prfx & trz_typ & plan & " keine Einsortierung gefunden." & vbCrLf & vbCrLf & "Bitte h|fffd|ndisch einf|fffd|gen.", vbCritical, "Pl|fffd|ne eintragen"
        pl_status = "error"
        GoTo SHORTCUT2
    End If
    
    'Planformat pr|fffd|fen
    
    Set objExec = WSHShell.Exec("""" & pfad_plan & "pdfinfo.exe"" " & """" & pfad_import & "\" & dokument)
    strResult = objExec.StdOut.ReadAll
    
    hoehe_raw = 0
    breite_raw = 0
    hoehe = 0
    breite = 0
    abmessungen = ""
    DINformat = ""
    
    For i = 1 To 100
        strResult = Replace(strResult, "  ", " ")
    Next
    
    spl_lines() = Split(strResult, Chr(10))
        For j = LBound(spl_lines) To UBound(spl_lines)
                spl() = Split(spl_lines(j), " ")
                For i = LBound(spl) To UBound(spl) - 1
                    If spl(i) = "Page" And spl(i + 1) = "size:" Then
                        hoehe_raw = Replace(spl(i + 2), ".", ",")
                        breite_raw = Replace(spl(i + 4), ".", ",")
                    End If
                    If spl(i) = "Pages:" Then
                        If spl(i + 1) > 1 Then
                            GoTo SHORTCUT1
                        End If
                    End If
                Next
        Next
    
    breite = Round(breite_raw / 2.834645, 0)
    hoehe = Round(hoehe_raw / 2.834645, 0)
    
    abmessungen = Replace(Str(breite) & "/" & Str(hoehe), " ", "")
    
    If abmessungen = "297/210" Or abmessungen = "210/297" Then DINformat = "DIN A4"
    If abmessungen = "297/420" Or abmessungen = "420/297" Then DINformat = "DIN A3"
    If abmessungen = "594/420" Or abmessungen = "420/594" Then DINformat = "DIN A2"
    If abmessungen = "594/841" Or abmessungen = "841/594" Then DINformat = "DIN A1"
    If abmessungen = "1189/841" Or abmessungen = "841/1189" Then DINformat = "DIN A0"
    
    If Right(abmessungen, 3) = "841" Then DINformat = "DIN A0 (" & Replace(abmessungen, "/841", "") & ")"
    If Left(abmessungen, 3) = "841" Then DINformat = "DIN A0 (" & Replace(abmessungen, "841/", "") & ")"
    
    If treffer_art <> 1 And treffer_art <> 6 Then
        If DINformat = "DIN A4" Or DINformat = "DIN A3" Or DINformat = "DIN A2" Then
            If treffer_art = 7 Then
                start_plankopfzeile = 140
            Else
                start_plankopfzeile = 110
            End If
        End If
    End If
    
    'MsgBox dokument & vbCrLf & DINformat
    'GoTo SHORTCUT1
    
    'PDF Texte via Koordinaten auslesen
    If pfad_plan <> "" Then

        Close #1
        
        If Sheets("Konfiguration").Cells(start_plankopfzeile, 4) <> "" And Sheets("Konfiguration").Cells(start_plankopfzeile, 5) <> "" And Sheets("Konfiguration").Cells(start_plankopfzeile, 6) <> "" And Sheets("Konfiguration").Cells(start_plankopfzeile, 7) <> "" Then
            x11 = Round(Sheets("Konfiguration").Cells(start_plankopfzeile, 4) * 2.8346472, 0)
            y11 = Round((Sheets("Konfiguration").Cells(start_plankopfzeile, 5) - Sheets("Konfiguration").Cells(start_plankopfzeile, 7)) * 2.8346472, 0)
            x12 = Round((Sheets("Konfiguration").Cells(start_plankopfzeile, 4) - Sheets("Konfiguration").Cells(start_plankopfzeile, 6)) * 2.8346472, 0)
            y12 = Round(Sheets("Konfiguration").Cells(start_plankopfzeile, 5) * 2.8346472, 0)
        Else
            x11 = 1
            y11 = 1
            x12 = 1
            y12 = 1
        End If
        
        If Sheets("Konfiguration").Cells(start_plankopfzeile + 1, 4) <> "" And Sheets("Konfiguration").Cells(start_plankopfzeile + 1, 5) <> "" And Sheets("Konfiguration").Cells(start_plankopfzeile + 1, 6) <> "" And Sheets("Konfiguration").Cells(start_plankopfzeile + 1, 7) <> "" Then
            x21 = Round(Sheets("Konfiguration").Cells(start_plankopfzeile + 1, 4) * 2.8346472, 0)
            y21 = Round((Sheets("Konfiguration").Cells(start_plankopfzeile + 1, 5) - Sheets("Konfiguration").Cells(start_plankopfzeile + 1, 7)) * 2.8346472, 0)
            x22 = Round((Sheets("Konfiguration").Cells(start_plankopfzeile + 1, 4) - Sheets("Konfiguration").Cells(start_plankopfzeile + 1, 6)) * 2.8346472, 0)
            y22 = Round(Sheets("Konfiguration").Cells(start_plankopfzeile + 1, 5) * 2.8346472, 0)
        Else
            x21 = 1
            y21 = 1
            x22 = 1
            y22 = 1
        End If
            
        If Sheets("Konfiguration").Cells(start_plankopfzeile + 2, 4) <> "" And Sheets("Konfiguration").Cells(start_plankopfzeile + 2, 5) <> "" And Sheets("Konfiguration").Cells(start_plankopfzeile + 2, 6) <> "" And Sheets("Konfiguration").Cells(start_plankopfzeile + 2, 7) <> "" Then
            x31 = Round(Sheets("Konfiguration").Cells(start_plankopfzeile + 2, 4) * 2.8346472, 0)
            y31 = Round((Sheets("Konfiguration").Cells(start_plankopfzeile + 2, 5) - Sheets("Konfiguration").Cells(start_plankopfzeile + 2, 7)) * 2.8346472, 0)
            x32 = Round((Sheets("Konfiguration").Cells(start_plankopfzeile + 2, 4) - Sheets("Konfiguration").Cells(start_plankopfzeile + 2, 6)) * 2.8346472, 0)
            y32 = Round(Sheets("Konfiguration").Cells(start_plankopfzeile + 2, 5) * 2.8346472, 0)
        Else
            x31 = 1
            y31 = 1
            x32 = 1
            y32 = 1
        End If
            
        If Sheets("Konfiguration").Cells(start_plankopfzeile + 3, 4) <> "" And Sheets("Konfiguration").Cells(start_plankopfzeile + 3, 5) <> "" And Sheets("Konfiguration").Cells(start_plankopfzeile + 3, 6) <> "" And Sheets("Konfiguration").Cells(start_plankopfzeile + 3, 7) <> "" Then
            x41 = Round(Sheets("Konfiguration").Cells(start_plankopfzeile + 3, 4) * 2.8346472, 0)
            y41 = Round((Sheets("Konfiguration").Cells(start_plankopfzeile + 3, 5) - Sheets("Konfiguration").Cells(start_plankopfzeile + 3, 7)) * 2.8346472, 0)
            x42 = Round((Sheets("Konfiguration").Cells(start_plankopfzeile + 3, 4) - Sheets("Konfiguration").Cells(start_plankopfzeile + 3, 6)) * 2.8346472, 0)
            y42 = Round(Sheets("Konfiguration").Cells(start_plankopfzeile + 3, 5) * 2.8346472, 0)
        Else
            x41 = 1
            y41 = 1
            x42 = 1
            y42 = 1
        End If
            
        If Sheets("Konfiguration").Cells(start_plankopfzeile + 4, 4) <> "" And Sheets("Konfiguration").Cells(start_plankopfzeile + 4, 5) <> "" And Sheets("Konfiguration").Cells(start_plankopfzeile + 4, 6) <> "" And Sheets("Konfiguration").Cells(start_plankopfzeile + 4, 7) <> "" Then
            x51 = Round(Sheets("Konfiguration").Cells(start_plankopfzeile + 4, 4) * 2.8346472, 0)
            y51 = Round((Sheets("Konfiguration").Cells(start_plankopfzeile + 4, 5) - Sheets("Konfiguration").Cells(start_plankopfzeile + 4, 7)) * 2.8346472, 0)
            x52 = Round((Sheets("Konfiguration").Cells(start_plankopfzeile + 4, 4) - Sheets("Konfiguration").Cells(start_plankopfzeile + 4, 6)) * 2.8346472, 0)
            y52 = Round(Sheets("Konfiguration").Cells(start_plankopfzeile + 4, 5) * 2.8346472, 0)
        Else
            x51 = 1
            y51 = 1
            x52 = 1
            y52 = 1
        End If
            
        If Sheets("Konfiguration").Cells(start_plankopfzeile + 5, 4) <> "" And Sheets("Konfiguration").Cells(start_plankopfzeile + 5, 5) <> "" And Sheets("Konfiguration").Cells(start_plankopfzeile + 5, 6) <> "" And Sheets("Konfiguration").Cells(start_plankopfzeile + 5, 7) <> "" Then
            x61 = Round(Sheets("Konfiguration").Cells(start_plankopfzeile + 5, 4) * 2.8346472, 0)
            y61 = Round((Sheets("Konfiguration").Cells(start_plankopfzeile + 5, 5) - Sheets("Konfiguration").Cells(start_plankopfzeile + 5, 7)) * 2.8346472, 0)
            x62 = Round((Sheets("Konfiguration").Cells(start_plankopfzeile + 5, 4) - Sheets("Konfiguration").Cells(start_plankopfzeile + 5, 6)) * 2.8346472, 0)
            y62 = Round(Sheets("Konfiguration").Cells(start_plankopfzeile + 5, 5) * 2.8346472, 0)
        Else
            x61 = 1
            y61 = 1
            x62 = 1
            y62 = 1
        End If
        
        If Sheets("Konfiguration").Cells(start_plankopfzeile + 6, 4) <> "" And Sheets("Konfiguration").Cells(start_plankopfzeile + 6, 5) <> "" And Sheets("Konfiguration").Cells(start_plankopfzeile + 6, 6) <> "" And Sheets("Konfiguration").Cells(start_plankopfzeile + 6, 7) <> "" Then
            x71 = Round(Sheets("Konfiguration").Cells(start_plankopfzeile + 6, 4) * 2.8346472, 0)
            y71 = Round((Sheets("Konfiguration").Cells(start_plankopfzeile + 6, 5) - Sheets("Konfiguration").Cells(start_plankopfzeile + 6, 7)) * 2.8346472, 0)
            x72 = Round((Sheets("Konfiguration").Cells(start_plankopfzeile + 6, 4) - Sheets("Konfiguration").Cells(start_plankopfzeile + 6, 6)) * 2.8346472, 0)
            y72 = Round(Sheets("Konfiguration").Cells(start_plankopfzeile + 6, 5) * 2.8346472, 0)
        Else
            x71 = 1
            y71 = 1
            x72 = 1
            y72 = 1
        End If
    
        If Sheets("Konfiguration").Cells(start_plankopfzeile + 7, 4) <> "" And Sheets("Konfiguration").Cells(start_plankopfzeile + 7, 5) <> "" And Sheets("Konfiguration").Cells(start_plankopfzeile + 7, 6) <> "" And Sheets("Konfiguration").Cells(start_plankopfzeile + 7, 7) <> "" Then
            x81 = Round(Sheets("Konfiguration").Cells(start_plankopfzeile + 7, 4) * 2.8346472, 0)
            y81 = Round((Sheets("Konfiguration").Cells(start_plankopfzeile + 7, 5) - Sheets("Konfiguration").Cells(start_plankopfzeile + 7, 7)) * 2.8346472, 0)
            x82 = Round((Sheets("Konfiguration").Cells(start_plankopfzeile + 7, 4) - Sheets("Konfiguration").Cells(start_plankopfzeile + 7, 6)) * 2.8346472, 0)
            y82 = Round(Sheets("Konfiguration").Cells(start_plankopfzeile + 7, 5) * 2.8346472, 0)
        Else
            x81 = 1
            y81 = 1
            x82 = 1
            y82 = 1
        End If
        FileCopy pfad_import & "\" & dokument, pfad_plan & k & ".pdf"
        
        'Application.Wait Now + TimeSerial(0, 0, 1)
        
        WSHShell.Run """" & pfad_plan & "pdftextextractor.exe""" & " " & """" & pfad_plan & k & ".pdf""" & " " & """" & pfad_plan & k & ".txt""" & " " & x11 & "," & y11 & "," & x12 & "," & y12 & " " & x21 & "," & y21 & "," & x22 & "," & y22 & " " & x31 & "," & y31 & "," & x32 & "," & y32 & " " & x41 & "," & y41 & "," & x42 & "," & y42 & " " & x51 & "," & y51 & "," & x52 & "," & y52 & " " & x61 & "," & y61 & "," & x62 & "," & y62 & " " & x71 & "," & y71 & "," & x72 & "," & y72 & " " & x81 & "," & y81 & "," & x82 & "," & y82
    
        j = 0
        Do
            j = j + 1
        Loop Until fso.FileExists(pfad_plan & k & ".txt") Or j = 10000
        'MsgBox "Anzahl Loops: " & j
        
        j = 0
        Set f = fso.GetFile(pfad_plan & k & ".txt")
        Do
         size1 = f.Size
         size2 = f.Size
         j = j + 1
        Loop Until size2 > 0 And size2 = size1 Or j = 10000
        'MsgBox "Anzahl Loops: " & j

        Open (pfad_plan & k & ".txt") For Input As #1
            j = 1
            
            'Application.Wait Now + TimeSerial(0, 0, 1)
            
            Do While Not EOF(1)
    
                Line Input #1, Content
                Debug.Print Content
                
                Content = Replace(Content, "  ", " ")
                Content = Replace(Content, "  ", " ")
                Content = Replace(Content, "*", "")
                'Content = Replace(Content, "_V", "")
                'Content = Replace(Content, "_F", "")
                Content = Replace(Content, "|ec|", "")
                Content = Replace(Content, "|e4|", "|fffd|")
                Content = Replace(Content, "|f6|", "|fffd|")
                Content = Replace(Content, "|fc|", "|fffd|")
                Content = Replace(Content, "|c4|", "|fffd|")
                Content = Replace(Content, "|d6|", "|fffd|")
                Content = Replace(Content, "|dc|", "|fffd|")
                Content = Replace(Content, "|f8|", "|fffd|")
                Content = Replace(Content, "|df|", "|fffd|")
                Content = Replace(Content, "|b2|", "|fffd|")
                Content = Replace(Content, "|b3|", "|fffd|")
                Content = Replace(Content, "|fffd|", "")
            
                
                If j = 1 And Content <> "" And Left(Content, 5) <> "ERROR" Then inhalt_pdf = Content
                If j = 2 And Content <> "" And IsNumeric(Content) = True And Left(Content, 5) <> "ERROR" Then stueck = Content
                If j = 3 And Content <> "" And IsDate(Replace(Content, " ", "")) = True And Left(Content, 5) <> "ERROR" Then gez_datum = Replace(Content, " ", "")
                If j = 4 And Content <> "" And IsNumeric(Content) = False And Len(Content) = 2 And Left(Content, 5) <> "ERROR" Then kuerzel = Content
                If j = 4 And Content <> "" And IsNumeric(Content) = False And Len(Content) = 5 And Mid(Content, 3, 1) = "/" And Left(Content, 5) <> "ERROR" Then kuerzel = Content
                If j = 5 And Content <> "" And Left(Content, 5) <> "ERROR" Then prfx_pdf = Replace(Content, " ", "")
                If j = 6 And Content <> "" And Left(Content, 5) <> "ERROR" Then baut_pdf = Replace(Content, " ", "")
                If j = 7 And Content <> "" And Left(Content, 5) <> "ERROR" Then indx_pdf = Replace(Content, " ", "")
                If j = 8 And Content <> "" And Left(Content, 5) <> "ERROR" Then sffx_pdf = Replace(Content, " ", "")
                
                spl() = Split(baut_pdf, "-")
                
                If baut_pdf <> "" Then
                    If Len(spl(UBound(spl))) > 2 Then
                        For i = LBound(spl) To UBound(spl) - 1
                            prfx_pdf = prfx_pdf & "-" & spl(i)
                        Next
                    Else
                        For i = LBound(spl) To UBound(spl) - 2
                            prfx_pdf = prfx_pdf & "-" & spl(i)
                        Next
                    End If
                End If
                
                If baut_pdf <> "" Then
                    If Len(spl(UBound(spl))) > 2 Then
                        baut_pdf = spl(UBound(spl))
                    Else
                        baut_pdf = spl(UBound(spl) - 1) & "-" & spl(UBound(spl))
                    End If
                End If
                                
                If Left(prfx_pdf, 1) = "_" Or Left(prfx_pdf, 1) = "-" Then prfx_pdf = Mid(prfx_pdf, 2)
                If Right(prfx_pdf, 1) = "_" Or Right(prfx_pdf, 1) = "-" Then prfx_pdf = Left(prfx_pdf, Len(prfx_pdf) - 1)

                If Left(baut_pdf, 1) = "_" Or Left(baut_pdf, 1) = "-" Then baut_pdf = Mid(baut_pdf, 2)
                If Right(baut_pdf, 1) = "_" Or Right(baut_pdf, 1) = "-" Then baut_pdf = Left(baut_pdf, Len(baut_pdf) - 1)
                
                If Left(indx_pdf, 1) = "_" Or Left(indx_pdf, 1) = "-" Then indx_pdf = Mid(indx_pdf, 2)
                If Right(indx_pdf, 1) = "_" Or Right(indx_pdf, 1) = "-" Then indx_pdf = Left(indx_pdf, Len(indx_pdf) - 1)
                
                If Left(sffx_pdf, 1) = "_" Or Left(sffx_pdf, 1) = "-" Then sffx_pdf = Mid(sffx_pdf, 2)
                If Right(sffx_pdf, 1) = "_" Or Right(sffx_pdf, 1) = "-" Then sffx_pdf = Left(sffx_pdf, Len(sffx_pdf) - 1)
                
                If inhalt_pdf <> "" Then
                    inhalt_pdf = Replace(inhalt_pdf, "Pos.", "Pos. ")
                    inhalt_pdf = Replace(inhalt_pdf, "  ", " ")
                    inhalt_pdf = Replace(inhalt_pdf, "  ", " ")
                    inhalt_pdf = Replace(inhalt_pdf, "  ", " ")
                End If
                
                j = j + 1
                
            Loop
    
        Close #1
    
    End If
    
    'MsgBox "aus Dateiname" & vbTab & "aus Plankopf" & vbCrLf & _
            prfx & vbTab & vbTab & prfx_pdf & vbCrLf & _
            typ & trz_nr & nr & vbTab & vbTab & baut_pdf & vbCrLf & _
            indx & vbTab & vbTab & indx_pdf & vbCrLf & _
            sffx & vbTab & vbTab & sffx_pdf & vbCrLf & _
            vbTab & vbTab & stueck & vbCrLf & _
            vbTab & vbTab & inhalt_pdf & vbCrLf & _
            vbTab & vbTab & kuerzel & vbCrLf & _
            vbTab & vbTab & gez_datum
            
'    If indx_pdf <> "" And indx_pdf Like "*" & indx & "*" Then
'        indx_pdf = indx
'    Else
'        MsgBox "Plan " & prfx & trz_typ & plan & trz_indx & indx & ": Index in Dateiname (" & trz_indx & indx & ") oder im Plankopf (" & trz_indx & indx_pdf & ") ist falsch!", vbCritical, "Pl|fffd|ne eintragen"
'        pl_status = "error"
'        GoTo SHORTCUT2
'    End If
    
    If LCase(prfx_pdf) <> "" And LCase(prfx_pdf) Like "*" & LCase(prfx) & "*" Or prfx = "" And prfx_pdf = "" Then
        'MsgBox prfx_pdf & " ist nicht " & prfx & ", aber egal!"
        prfx_pdf = prfx
    Else
        MsgBox "Plan " & prfx & trz_typ & plan & trz_indx & indx & ": Pr|fffd|fix in Dateiname (" & prfx & ") oder im Plankopf (" & prfx_pdf & ") ist falsch!", vbCritical, "Pl|fffd|ne eintragen"
        pl_status = "error"
        GoTo SHORTCUT2
    End If
    
'    If sffx_pdf <> "" And sffx_pdf Like "*" & sffx & "*" Or sffx = "" And sffx_pdf = "" Then
'        sffx_pdf = sffx
'    Else
'        MsgBox "Plan " & prfx & trz_typ & plan & trz_indx & indx & ": Status in Dateiname (" & trz_sffx & sffx & ") oder im Plankopf (" & trz_sffx & sffx_pdf & ") ist falsch!", vbCritical, "Pl|fffd|ne eintragen"
'        pl_status = "error"
'        GoTo SHORTCUT2
'    End If
    
    If IsNumeric(baut_pdf) = True And Len(baut_pdf) = 7 Then baut_pdf = Left(baut_pdf, 2) & "-" & Mid(baut_pdf, 3, 3) & "-" & Right(baut_pdf, 2)
    
    If baut_pdf <> "" And baut_pdf Like "*" & plan & "*" Then
        baut_pdf = plan
    Else
        MsgBox "Bauteil im Plankopf (" & baut_pdf & ") und Bauteil in Dateiname (" & plan & ") sind nicht identisch!", vbCritical, "Pl|fffd|ne eintragen"
        pl_status = "error"
        GoTo SHORTCUT2
    End If
    
    'MsgBox "Inhalt aus Dateiname: " & inhalt & vbCrLf & "Inhalt aus PDF: " & inhalt_pdf
    If inhalt = "" Then inhalt = inhalt_pdf
    'MsgBox "Inhalt aus Dateiname: " & inhalt & vbCrLf & "Inhalt aus PDF: " & inhalt_pdf
    'Eintragen beginnt
    
    inhalt = Replace(inhalt, "Schal- und Bewehrungsplan ", "")
    
    If indx_pdf <> "" Then
        indx = indx_pdf
    Else
        WSHShell.Run """" & pfad_import & "\" & dokument & """"
        indx = InputBox(plan & trz_indx & indx & " - Index: ", "Pl|fffd|ne eintragen", Default:="01")
    End If
    
    If sffx_pdf <> "" Then
        sffx = sffx_pdf
    Else
        WSHShell.Run """" & pfad_import & "\" & dokument & """"
        sffx = LCase(InputBox(plan & trz_indx & indx & " - Status: ", "Pl|fffd|ne eintragen", Default:="va"))
    End If
    
    'Letzten Eintrag finden
    letzte_zeile = Sheets(treffer_sheet).Cells(Rows.Count, spalte_bauteil).End(xlUp).Row
    If letzte_zeile <= erste_zeile Then letzte_zeile = erste_zeile + 1
    
    For i = erste_zeile To letzte_zeile
        
        'Wenn der Plan bereits angelegt wurde...
        
        'MsgBox "Plan: " & plan & vbCrLf & _
        "vergleiche" & vbTab & vbTab & "mit" & vbCrLf & _
        plan & vbTab & vbTab & Sheets(treffer_sheet).Cells(i, spalte_bauteil) & vbCrLf & _
        prfx & vbTab & vbTab & Sheets(treffer_sheet).Cells(i, spalte_prfx)
        
        If Sheets(treffer_sheet).Cells(i, spalte_bauteil) <> "" And _
            plan = Sheets(treffer_sheet).Cells(i, spalte_bauteil) Then
            If Sheets(treffer_sheet).Cells(i, spalte_entfallen) = "x" Then
            choice = MsgBox("Bauteil " & prfx & trz_typ & plan & " entfallen!" & vbCrLf & "Reaktivieren?", vbYesNo, "Pl|fffd|ne eintragen")
                If choice = vbNo Then
                    pl_status = "edit_error"
                    Exit For
                Else
                    For j = spalte_prfx To spalte_entfallen - 1
                        If Sheets(treffer_sheet).Cells(i, j) = "entf." Then Sheets(treffer_sheet).Cells(i, j) = ""
                    Next
                    Sheets(treffer_sheet).Cells(i, spalte_entfallen) = ""
                End If
            End If
            
            If StrComp(indx, Sheets(treffer_sheet).Cells(i, spalte_index), vbBinaryCompare) <> 1 Then
                MsgBox "Plan " & prfx & trz_typ & plan & trz_indx & indx & ": Index in Planliste (" & trz_indx & Sheets(treffer_sheet).Cells(i, spalte_index) & ") oder in Dateiname (" & trz_indx & indx & ") ist falsch!", vbCritical, "Pl|fffd|ne eintragen"
                pl_status = "edit_error"
                Exit For
            End If
            
            If eintragen_typ = "freigabe" And Sheets(treffer_sheet).Cells(i, spalte_fring) = "" And Sheets(treffer_sheet).Cells(i, spalte_verschickt) <> "" Then
                choice = MsgBox("F|fffd|r Plan " & prfx & trz_typ & plan & trz_indx & indx & " keine Freigabe von Pr|fffd|fingenieur eingetragen!" & vbCrLf & vbCrLf & "Trotzdem freigeben?", vbYesNo, "Pl|fffd|ne eintragen")
                If choice = vbNo Then
                    pl_status = "error"
                    GoTo SHORTCUT2
                End If
            End If
            
            If eintragen_typ = "planversand" And Sheets(treffer_sheet).Cells(i, spalte_frarc) <> "" Or eintragen_typ = "planversand" And Sheets(treffer_sheet).Cells(i, spalte_fring) <> "" Then
                pl_status = "edit_storno"
                pl_edit_storno_count = pl_edit_storno_count + 1
                If Len(pl_edit_storno_list) < 230 Then
                    pl_edit_storno_list = pl_edit_storno_list & ", " & plan & trz_indx & indx
                Else
                    extra_text = "Ausgabelisten teilw. gek|fffd|rzt!"
                End If
            End If
            If eintragen_typ = "planversand" And Sheets(treffer_sheet).Cells(i, spalte_freigabe) <> "" And Left(pl_status, 4) <> "edit" Then
                pl_status = "edit_storno_baufrei"
                pl_edit_storno_baufrei_count = pl_edit_storno_baufrei_count + 1
                If Len(pl_edit_storno_baufrei_list) < 230 Then
                    pl_edit_storno_baufrei_list = pl_edit_storno_baufrei_list & ", " & plan & trz_indx & indx
                Else
                    extra_text = "Ausgabelisten teilw. gek|fffd|rzt!"
                End If
            End If
            einfg_zeile = i
            If Sheets(treffer_sheet).Cells(einfg_zeile, spalte_index) <> "" Then
                Sheets(treffer_sheet).Select
                Rows(einfg_zeile + 1).Select
                Selection.Insert Shift:=xlDown
                Rows(einfg_zeile + 1).Select
                Selection.FormatConditions.Delete
                einfg_zeile = einfg_zeile + 1
            End If
            Sheets(treffer_sheet).Cells(einfg_zeile, spalte_index) = Sheets(treffer_sheet).Cells(i, spalte_index)
            Sheets(treffer_sheet).Cells(einfg_zeile, spalte_sffx) = Sheets(treffer_sheet).Cells(i, spalte_sffx)
            Sheets(treffer_sheet).Cells(einfg_zeile, spalte_stck_plan) = Sheets(treffer_sheet).Cells(i, spalte_stck_plan)
            For j = spalte_verschickt To spalte_freigabe
                Sheets(treffer_sheet).Cells(einfg_zeile, j) = Sheets(treffer_sheet).Cells(i, j)
                Sheets(treffer_sheet).Cells(i, j) = ""
            Next
            If eintragen_typ = "freigabe" Then Sheets(treffer_sheet).Cells(i, spalte_verschickt) = ""
            Sheets(treffer_sheet).Cells(i, spalte_prfx) = prfx
            Sheets(treffer_sheet).Cells(i, spalte_index) = indx
            Sheets(treffer_sheet).Cells(i, spalte_sffx) = sffx
            If eintragen_typ = "planversand" Then
                Sheets(treffer_sheet).Cells(i, spalte_verschickt) = datum
                If pl_status = "" Then pl_status = "edit"
            End If
            If eintragen_typ = "freigabe" Then
                Sheets(treffer_sheet).Cells(i, spalte_freigabe) = datum
                If pl_status = "" Then pl_status = "edit"
            End If
            
            If Sheets(treffer_sheet).Cells(i, spalte_gez_datum) = "" Then
                If gez_datum = Empty Then
                    WSHShell.Run """" & pfad_import & "\" & dokument & """"
                    gez_datum = InputBox(plan & trz_indx & indx & " - Gezeichnet Datum: ", "Pl|fffd|ne eintragen", Default:=Format(Date, "dd.mm.yyyy"))
                End If
                Sheets(treffer_sheet).Cells(i, spalte_gez_datum) = gez_datum
            End If
            
            If Sheets(treffer_sheet).Cells(i, spalte_zeichner) = "" Then
                If kuerzel = "" Then
                    WSHShell.Run """" & pfad_import & "\" & dokument & """"
                    kuerzel = UCase(InputBox(plan & trz_indx & indx & " - Gezeichnet Name: ", "Pl|fffd|ne eintragen", Default:="XX"))
                End If
                Sheets(treffer_sheet).Cells(i, spalte_zeichner) = kuerzel
            End If
            
            'MsgBox treffer_sheet & " | " & Sheets(treffer_sheet).Cells(i, spalte_stck_uber) & " | " & stueck
            If treffer_sheet = "Fertigteile" Or Sheets(treffer_sheet).Cells(i, spalte_stck_uber) <> "" Or stueck <> 0 Then
                If stueck = 0 Then
                    WSHShell.Run """" & pfad_import & "\" & dokument & """"
                    stueck = InputBox(plan & trz_indx & indx & " - St|fffd|ckzahl auf Bauteilplan: ", "Pl|fffd|ne eintragen", Default:="1")
                End If
                If Sheets(treffer_sheet).Cells(i, spalte_stck_uber) <> "" Then stueck_uber = Sheets(treffer_sheet).Cells(i, spalte_stck_uber) Else stueck_uber = 0
                    If stueck <> stueck_uber And stueck_uber <> 0 Then
                        MsgBox "ACHTUNG!" & vbCrLf & vbCrLf & "Plan " & prfx & trz_typ & plan & trz_indx & indx & " (" & stueck & ") " & "stimmt nicht mit St|fffd|ckzahl in |fffd|bersichten" & " (" & Sheets(treffer_sheet).Cells(i, spalte_stck_uber) & ") " & "|fffd|berein!", vbCritical, "Pl|fffd|ne eintragen"
                        stck_warnung_count = stck_warnung_count + 1
                        stck_warnung_list = stck_warnung_list & ", " & plan & trz_indx & indx
                    End If
                Sheets(treffer_sheet).Cells(i, spalte_stck_plan) = stueck

                If inhalt <> "" Then Sheets(treffer_sheet).Cells(i, spalte_inhalt) = inhalt
                
                If treffer_sheet <> "Fertigteile" Then
                    If Sheets(treffer_sheet).Cells(i, spalte_inhalt) = "" Then
                        WSHShell.Run """" & pfad_import & "\" & dokument & """"
                        inhalt = InputBox(plan & trz_indx & indx & " - Inhalt des Plans: ", "Pl|fffd|ne eintragen", Default:="z.B Schal- und Bewehrungsplan...")
                        Sheets(treffer_sheet).Cells(i, spalte_inhalt) = inhalt
                    End If
                End If
                
                If pl_status = "" Then pl_status = "edit"
            Else
                If inhalt <> "" Then Sheets(treffer_sheet).Cells(i, spalte_inhalt) = inhalt
                If Sheets(treffer_sheet).Cells(i, spalte_inhalt) = "" Then
                    WSHShell.Run """" & pfad_import & "\" & dokument & """"
                    inhalt = InputBox(plan & trz_indx & indx & " - Inhalt des Plans: ", "Pl|fffd|ne eintragen", Default:="z.B Schal- und Bewehrungsplan...")
                    Sheets(treffer_sheet).Cells(i, spalte_inhalt) = inhalt
                End If
            End If
        Exit For
        End If
    Next
    
    'wenn Plan noch nicht angelegt ist
    If Left(pl_status, 4) <> "edit" Then
           
        letzte_zeile = Sheets(treffer_sheet).Cells(Rows.Count, spalte_bauteil).End(xlUp).Row
        If letzte_zeile <= erste_zeile Then letzte_zeile = erste_zeile + 1
        
        comp_wert = 2
        i = erste_zeile
        
        Do
            'MsgBox "Plan: " & plan & vbCrLf & _
            "vergleiche" & vbTab & vbTab & "mit" & vbCrLf & _
            prfx & trz_typ & plan & vbTab & vbTab & Sheets(treffer_sheet).Cells(i, spalte_prfx) & trz_typ & Sheets(treffer_sheet).Cells(i, spalte_bauteil)
            
            If Sheets(treffer_sheet).Cells(i, spalte_bauteil) <> "" Then
                comp_wert = StrComp(plan, Sheets(treffer_sheet).Cells(i, spalte_bauteil), vbBinaryCompare)
                If comp_wert = 1 Then hit = i
                If comp_wert = -1 Then treffer_zeile = i
            End If
            i = i + 1
        Loop Until comp_wert = -1 Or i = letzte_zeile + 1
        If comp_wert <> -1 Then
            i = hit
            Do
                i = i + 1
                treffer_zeile = i
            Loop Until Sheets(treffer_sheet).Cells(i, spalte_bauteil) = "" And Sheets(treffer_sheet).Cells(i, spalte_index) = ""
        End If
        
        If treffer_zeile <= erste_zeile Then treffer_zeile = erste_zeile + 1
        If treffer_zeile <> "" Then
            treffer_plan = Sheets(treffer_sheet).Cells(treffer_zeile, spalte_prfx) & trz_typ & Sheets(treffer_sheet).Cells(treffer_zeile, spalte_bauteil)
            treffer_typ = Left(treffer_plan, Len(typ))
                If treffer_plan = "" Then
                    einfg_text = " am Ende einf|fffd|gen?"
                Else
                    i = treffer_zeile
                    Do
                    i = i - 1
                    plan_davor = Sheets(treffer_sheet).Cells(i, spalte_prfx) & trz_typ & Sheets(treffer_sheet).Cells(i, spalte_bauteil)
                    einfg_text = " zwischen " & plan_davor & " und " & treffer_plan & " einf|fffd|gen?"
                    Loop Until i = erste_zeile Or Sheets(treffer_sheet).Cells(i, spalte_bauteil) <> ""
                    If i = erste_zeile Then einfg_text = " am Anfang einf|fffd|gen?"
                End If
                If treffer_zeile > erste_zeile + 1 And treffer_typ <> "" And typ <> treffer_typ And Sheets(treffer_sheet).Cells(treffer_zeile - 1, spalte_bauteil) = "" And Sheets(treffer_sheet).Cells(treffer_zeile - 1, spalte_index) = "" Then treffer_zeile = treffer_zeile - 1
                choice = MsgBox("Plan " & prfx & trz_typ & plan & trz_indx & indx & " nicht gefunden." & vbCrLf & vbCrLf & "Auf Blatt " & treffer_sheet & einfg_text, vbYesNo, "Pl|fffd|ne eintragen")
                If choice = vbYes Then
                    Sheets(treffer_sheet).Select
                    Rows(treffer_zeile).Select
                    Selection.Insert Shift:=xlDown
                    Rows(treffer_zeile + 1).Select
                    Selection.Copy
                    Rows(treffer_zeile).Select
                    Selection.PasteSpecial Paste:=xlPasteFormats, Operation:=xlNone, _
                    SkipBlanks:=False, Transpose:=False
                    Application.CutCopyMode = False
                    Sheets(treffer_sheet).Cells(treffer_zeile, spalte_bauteil).Select
                    Sheets(treffer_sheet).Cells(treffer_zeile, spalte_prfx) = prfx
                    Sheets(treffer_sheet).Cells(treffer_zeile, spalte_bauteil) = plan
                    Sheets(treffer_sheet).Cells(treffer_zeile, spalte_index) = indx
                    Sheets(treffer_sheet).Cells(treffer_zeile, spalte_sffx) = sffx
                    If eintragen_typ = "planversand" Then
                        Sheets(treffer_sheet).Cells(treffer_zeile, spalte_verschickt) = datum
                        If pl_status = "" Then pl_status = "insert"
                    End If
                    If eintragen_typ = "freigabe" Then
                        Sheets(treffer_sheet).Cells(treffer_zeile, spalte_freigabe) = datum
                        If pl_status = "" Then pl_status = "insert"
                    End If
                    If gez_datum = Empty Then
                        WSHShell.Run """" & pfad_import & "\" & dokument & """"
                        gez_datum = InputBox(plan & trz_indx & indx & " - Gezeichnet Datum: ", "Pl|fffd|ne eintragen", Default:=Format(Date, "dd.mm.yyyy"))
                    End If
                    Sheets(treffer_sheet).Cells(treffer_zeile, spalte_gez_datum) = gez_datum
                    If kuerzel = "" Then
                        WSHShell.Run """" & pfad_import & "\" & dokument & """"
                        kuerzel = UCase(InputBox(plan & trz_indx & indx & " - Zeichner: ", "Pl|fffd|ne eintragen", Default:="XX"))
                    End If
                    Sheets(treffer_sheet).Cells(treffer_zeile, spalte_zeichner) = kuerzel
                    'MsgBox treffer_sheet & " | " & Sheets(treffer_sheet).Cells(treffer_zeile, spalte_stck_uber) & " | " & stueck
                    If treffer_sheet = "Fertigteile" Or Sheets(treffer_sheet).Cells(treffer_zeile, spalte_stck_uber) <> "" Or stueck <> 0 Then
                        If stueck = O Then
                            WSHShell.Run """" & pfad_import & "\" & dokument & """"
                            stueck = InputBox(plan & trz_indx & indx & " - St|fffd|ckzahl auf Bauteilplan: ", "Pl|fffd|ne eintragen", Default:="1")
                        End If
                    Sheets(treffer_sheet).Cells(treffer_zeile, spalte_stck_plan) = stueck
                        
                    If inhalt <> "" Then Sheets(treffer_sheet).Cells(treffer_zeile, spalte_inhalt) = inhalt
                    
                    If treffer_sheet <> "Fertigteile" Then
                        If Sheets(treffer_sheet).Cells(treffer_zeile, spalte_inhalt) = "" Then
                            WSHShell.Run """" & pfad_import & "\" & dokument & """"
                            inhalt = InputBox(plan & trz_indx & indx & " - Inhalt des Plans: ", "Pl|fffd|ne eintragen", Default:="z.B Schal- und Bewehrungsplan...")
                            Sheets(treffer_sheet).Cells(treffer_zeile, spalte_inhalt) = inhalt
                        End If
                    End If
                    
                    Else
                        Sheets(treffer_sheet).Cells(treffer_zeile, spalte_inhalt) = inhalt
                        If Sheets(treffer_sheet).Cells(treffer_zeile, spalte_inhalt) = "" Then
                            WSHShell.Run """" & pfad_import & "\" & dokument & """"
                            inhalt = InputBox(plan & trz_indx & indx & " - Inhalt des Plans: ", "Pl|fffd|ne eintragen", Default:="z.B Schal- und Bewehrungsplan...")
                            Sheets(treffer_sheet).Cells(treffer_zeile, spalte_inhalt) = inhalt
                        End If
                    End If
                    pl_status = "insert"
                    Sheets("Verwaltung").Select
                Else
                MsgBox "Plan " & prfx & trz_typ & plan & trz_indx & indx & " bitte h|fffd|ndisch einf|fffd|gen.", vbInformation, "Pl|fffd|ne eintragen"
                pl_status = "error"
                End If
        Else
        MsgBox "F|fffd|r Plan " & prfx & trz_typ & plan & trz_indx & indx & " keine Einsortierung gefunden." & vbCrLf & vbCrLf & "Bitte h|fffd|ndisch einf|fffd|gen.", vbCritical, "Pl|fffd|ne eintragen"
        pl_status = "error"
        End If
    End If
    
SHORTCUT2:
    
    If pl_status = "edit" Then
        pl_edit_count = pl_edit_count + 1
        If Len(pl_edit_list) < 230 Then
            pl_edit_list = pl_edit_list & ", " & prfx & trz_typ & plan & trz_indx & indx
        Else
            extra_text = "Ausgabelisten teilw. gek|fffd|rzt!"
        End If
    End If
    
    If pl_status = "insert" Then
        pl_insert_count = pl_insert_count + 1
        If Len(pl_insert_list) < 230 Then
            pl_insert_list = pl_insert_list & ", " & prfx & trz_typ & plan & trz_indx & indx
        Else
            extra_text = "Ausgabelisten teilw. gek|fffd|rzt!"
        End If
    End If
    
    If pl_status = "error" Or pl_status = "edit_error" Or pl_status = "" Then
        pl_error_count = pl_error_count + 1
        If Len(pl_error_list) < 230 Then
            pl_error_list = pl_error_list & ", " & prfx & trz_typ & plan & trz_indx & indx
        Else
            extra_text = "Ausgabelisten teilw. gek|fffd|rzt!"
        End If
    End If

SHORTCUT1:

dokument = Dir$()
k = k + 1

Loop

If pl_edit_list <> "" Then ausgabe_pl_edit_list = Mid(pl_edit_list, 3)
If pl_edit_storno_list <> "" Then ausgabe_pl_edit_storno_list = Mid(pl_edit_storno_list, 3)
If pl_edit_storno_baufrei_list <> "" Then ausgabe_pl_edit_storno_baufrei_list = Mid(pl_edit_storno_baufrei_list, 3)
If pl_insert_list <> "" Then ausgabe_pl_insert_list = Mid(pl_insert_list, 3)
If pl_error_list <> "" Then ausgabe_pl_error_list = Mid(pl_error_list, 3)
If stck_warnung_list <> "" Then ausgabe_stck_warnung_list = Mid(stck_warnung_list, 3)

If eintragen_typ = "planversand" Then
    If pl_edit_storno_count <> 0 Or pl_edit_storno_baufrei_count <> 0 Then
        MsgBox "Anzahl gel|fffd|schte Freigaben von Extern: " & pl_edit_storno_count & vbCrLf _
                & ausgabe_pl_edit_storno_list & vbCrLf _
                & vbCrLf _
                & "Anzahl bereits freigegebene Pl|fffd|ne: " & pl_edit_storno_baufrei_count & vbCrLf _
                & ausgabe_pl_edit_storno_baufrei_list, vbExclamation, "Planversand"
        
        storno_report = "Anzahl gel|fffd|schte Freigaben von Extern: " & pl_edit_storno_count & vbCrLf _
                        & ausgabe_pl_edit_storno_list & vbCrLf _
                        & vbCrLf _
                        & "Anzahl bereits freigegebene Pl|fffd|ne: " & pl_edit_storno_baufrei_count & vbCrLf _
                        & ausgabe_pl_edit_storno_baufrei_list
    End If
    If Dir(pfad_logfile, vbDirectory) = "" Then MkDir (pfad_logfile)
    Open pfad_logfile & Format(Now, "yyyy-mm-dd hh.mm.ss") & " planversand_logfile.txt" For Output As #1
        Print #1, vbCrLf _
                    & bauvorhaben & vbCrLf _
                    & vbCrLf _
                    & "Planversand ausgef|fffd|hrt: " & Format(Now, "dd.mm.yyyy hh:mm:ss") & " - Von: " & Environ("Username") & vbCrLf _
                    & vbCrLf _
                    & "=====================================================" & vbCrLf _
                    & vbCrLf _
                    & "Anzahl eingetragener Pl|fffd|ne: " & pl_edit_count & vbCrLf _
                    & ausgabe_pl_edit_list & vbCrLf _
                    & vbCrLf _
                    & "Anzahl eingef|fffd|gter Pl|fffd|ne: " & pl_insert_count & vbCrLf _
                    & ausgabe_pl_insert_list & vbCrLf _
                    & vbCrLf _
                    & "Anzahl Fehler: " & pl_error_count & vbCrLf _
                    & ausgabe_pl_error_list & vbCrLf _
                    & vbCrLf _
                    & "Anzahl Warnungen St|fffd|ckzahl: " & stck_warnung_count & vbCrLf _
                    & ausgabe_stck_warnung_list & vbCrLf _
                    & vbCrLf _
                    & storno_report & vbCrLf _
                    & vbCrLf _
                    & extra_text
                    
    Close #1
    
    MsgBox "Anzahl eingetragener Pl|fffd|ne: " & pl_edit_count & vbCrLf _
            & ausgabe_pl_edit_list & vbCrLf _
            & vbCrLf _
            & "Anzahl eingef|fffd|gter Pl|fffd|ne: " & pl_insert_count & vbCrLf _
            & ausgabe_pl_insert_list & vbCrLf _
            & vbCrLf _
            & "Anzahl Fehler: " & pl_error_count & vbCrLf _
            & ausgabe_pl_error_list & vbCrLf _
            & vbCrLf _
            & "Anzahl Warnungen St|fffd|ckzahl: " & stck_warnung_count & vbCrLf _
            & ausgabe_stck_warnung_list & vbCrLf _
            & vbCrLf _
            & extra_text, vbInformation, "Planversand"
End If


If eintragen_typ = "freigabe" Then
    If Dir(pfad_logfile, vbDirectory) = "" Then MkDir (pfad_logfile)
    Open pfad_logfile & Format(Now, "yyyy-mm-dd hh.mm.ss") & " freigabe_logfile.txt" For Output As #1
        Print #1, vbCrLf _
                    & bauvorhaben & vbCrLf _
                    & vbCrLf _
                    & "Freigabe ausgef|fffd|hrt: " & Format(Now, "dd.mm.yyyy hh:mm:ss") & " - Von: " & Environ("Username") & vbCrLf _
                    & vbCrLf _
                    & "==================================================" & vbCrLf _
                    & vbCrLf _
                    & "Anzahl eingetragener Pl|fffd|ne: " & pl_edit_count & vbCrLf _
                    & ausgabe_pl_edit_list & vbCrLf _
                    & vbCrLf _
                    & "Anzahl eingef|fffd|gter Pl|fffd|ne: " & pl_insert_count & vbCrLf _
                    & ausgabe_pl_insert_list & vbCrLf _
                    & vbCrLf _
                    & "Anzahl Fehler: " & pl_error_count & vbCrLf _
                    & ausgabe_pl_error_list & vbCrLf _
                    & vbCrLf _
                    & "Anzahl Warnungen St|fffd|ckzahl: " & stck_warnung_count & vbCrLf _
                    & ausgabe_stck_warnung_list & vbCrLf _
                    & vbCrLf _
                    & extra_text
    Close #1
    
    MsgBox "Anzahl eingetragener Pl|fffd|ne: " & pl_edit_count & vbCrLf _
            & ausgabe_pl_edit_list & vbCrLf _
            & vbCrLf _
            & "Anzahl eingef|fffd|gter Pl|fffd|ne: " & pl_insert_count & vbCrLf _
            & ausgabe_pl_insert_list & vbCrLf _
            & vbCrLf _
            & "Anzahl Fehler: " & pl_error_count & vbCrLf _
            & ausgabe_pl_error_list & vbCrLf _
            & vbCrLf _
            & "Anzahl Warnungen St|fffd|ckzahl: " & stck_warnung_count & vbCrLf _
            & ausgabe_stck_warnung_list & vbCrLf _
            & vbCrLf _
            & extra_text, vbInformation, "Freigabe"
End If

If Dir(pfad_plan & "*.txt") <> "" Then Kill (pfad_plan & "*.txt")
If Dir(pfad_plan & "*.pdf") <> "" Then Kill (pfad_plan & "*.pdf")

erfolg = "ja"
ERROREXIT:
If erfolg <> "ja" Then MsgBox "Es gab einen Fehler!", vbCritical, "Pl|fffd|ne eintragen"

If pfad_plan <> "" Then
Set fso = Nothing
Set regex = Nothing
Set WSHShell = Nothing
Set objSFold = Nothing
End If

'Planhistorie ausblenden
For Each Worksheet In ActiveWorkbook.Worksheets
    If Worksheet.Visible = True And Worksheet.Name <> "Verwaltung" And Worksheet.Name <> "Konfiguration" Then
        letzte_zeile = Worksheet.Cells(Rows.Count, spalte_index).End(xlUp).Row
        If letzte_zeile <= erste_zeile Then letzte_zeile = erste_zeile + 1
        
        For i = erste_zeile To letzte_zeile
        
            If Worksheet.Cells(i, spalte_bauteil) = "" And Worksheet.Cells(i, spalte_index) <> "" Then Worksheet.Rows(i).EntireRow.Hidden = True
        
        Next
    End If
Next Worksheet

With Application
.ScreenUpdating = True
.EnableEvents = True
.Calculation = xlCalculationAutomatic
.StatusBar = False
End With

'Call refresh

End Sub


Attribute VB_Name = "email_modul"
Sub email()

Application.ScreenUpdating = False

'On Error GoTo ERROREXIT

Dim pfad_import As String
Dim fldr As FileDialog
Dim sItem As String
Dim datum As String
Dim frist As Date
Dim frist_eingabe As String
Dim email_an As String
Dim email_cc As String
Dim bauvorhaben As String
Dim projekt As String
Dim pfad_versand As String
Dim eintragen_typ As String
Dim typ_text As String
Dim betr_text As String
Dim plan_davor As String
Dim plan As String
Dim neue_zeile As String
Dim plan_list_1 As String
Dim plan_list_2 As String
Dim plan_list_3 As String
Dim plan_list_4 As String
Dim erfolg As String
Dim pfad_anschreiben As String
Dim i#, j#

bauvorhaben = Sheets("Verwaltung").Cells(4, 5)
projekt = Sheets("Konfiguration").Cells(5, 6)
pfad_versand = Sheets("Konfiguration").Cells(68, 4)
pfad_anschreiben = Sheets("Konfiguration").Cells(69, 4)

email_an = ""
email_cc = ""

Set fldr = Application.FileDialog(msoFileDialogFolderPicker)
With fldr
    .Title = "Ordner f|fffd|r Planversand ausw|fffd|hlen"
    .AllowMultiSelect = False
    .InitialFileName = pfad_versand
    If .Show <> -1 Then GoTo NextCode
    sItem = .SelectedItems(1)
End With
NextCode:
pfad_import = sItem
'Set pfad_versand = Nothing

choice = MsgBox("Ausgew|fffd|hlter Ordner:" & vbCrLf & vbCrLf & pfad_import & vbCrLf & vbCrLf & "Fortfahren?", vbYesNo, "Email")
    If choice = vbNo Then
    Exit Sub
    End If
    
eintragen_typ = ""
If Right(pfad_import, 11) = "Planversand" Then
    eintragen_typ = "planversand"
    j = 13
    frist_eingabe = InputBox("Bitte um Pr|fffd|fung bis zum:", "Anschreiben", Default:=Format(Date + 7, "dd.mm.yyyy"))
    If frist_eingabe <> "" Then
        frist = frist_eingabe
        typ_text = "mit der Bitte um Pr|fffd|fung bis zum " & frist
    Else
        typ_text = "mit der Bitte um Pr|fffd|fung"
    End If
    betr_text = "Planpr|fffd|fung"
End If

If Right(pfad_import, 8) = "Freigabe" Then
    eintragen_typ = "freigabe"
    j = 16
    typ_text = "zur Ausf|fffd|hrung"
    betr_text = "Freigabe"
End If

If eintragen_typ = "" Then
    MsgBox "Ung|fffd|ltiger Ordnername!", vbCritical, "Email"
    Exit Sub
End If

For i = 29 To 127
    If LCase(Sheets("Verwaltung").Cells(i, j)) = "x" Then email_an = email_an & Sheets("Verwaltung").Cells(i, 9) & "; "
    If LCase(Sheets("Verwaltung").Cells(i, j)) = "cc" Then email_cc = email_cc & Sheets("Verwaltung").Cells(i, 9) & "; "

    i = i + 6
Next
    
If Right(email_an, 2) = "; " Then email_an = Left(email_an, Len(email_an) - 2)
If Right(email_cc, 2) = "; " Then email_cc = Left(email_cc, Len(email_cc) - 2)
    
If email_an = "" Then
    MsgBox "Keine Adressen im Verteiler!", vbCritical, "Email"
    Exit Sub
End If
    
    Set MyOutApp = CreateObject("Outlook.Application")
        
    Set MyMessage = MyOutApp.CreateItemFromTemplate(pfad_anschreiben & "\Vorlage Email.oft")
    
    With MyMessage
        .To = email_an
        .cc = email_cc
        If Left(projekt, 5) = "17 20" Then
            .Subject = "EHE-W1 Daimler, Germersheim" & " - " & betr_text
        Else
            .Subject = "BV " & projekt & " - " & betr_text
        End If
        
        plan_list_1 = ""
        plan_list_2 = ""
        plan_list_3 = ""
        plan_list_4 = ""
        plan = Dir$(pfad_import & "\*.*")
        Do While plan <> ""
            If LCase(Right(plan, 3)) = "pdf" Then
                If plan_davor <> "" And Left(plan_davor, 2) <> Left(plan, 2) Or Left(plan, 3) = "FT_" And plan_davor <> "" And Left(plan_davor, 5) <> Left(plan, 5) Then
                    plan_davor = plan
                    plan = vbCrLf & plan
                    neue_zeile = "ja"
                Else
                    plan_davor = plan
                    neue_zeile = "nein"
                End If
                If Len(plan_list_1) < 230 Then
                    If neue_zeile = "nein" Then
                        plan_list_1 = plan_list_1 & ", " & Replace(plan, Right(plan, 4), "")
                    Else
                        plan_list_1 = plan_list_1 & Replace(plan, Right(plan, 4), "")
                    End If
                Else
                    If Len(plan_list_2) < 230 Then
                        If neue_zeile = "nein" Then
                            plan_list_2 = plan_list_2 & ", " & Replace(plan, Right(plan, 4), "")
                        Else
                            plan_list_2 = plan_list_2 & Replace(plan, Right(plan, 4), "")
                        End If
                    Else
                        If Len(plan_list_3) < 230 Then
                            If neue_zeile = "nein" Then
                                plan_list_3 = plan_list_3 & ", " & Replace(plan, Right(plan, 4), "")
                            Else
                                plan_list_3 = plan_list_3 & Replace(plan, Right(plan, 4), "")
                            End If
                        Else
                            If neue_zeile = "nein" Then
                                plan_list_4 = plan_list_4 & ", " & Replace(plan, Right(plan, 4), "")
                            Else
                                plan_list_4 = plan_list_4 & Replace(plan, Right(plan, 4), "")
                            End If
                        End If
                    End If
                End If
            End If
        plan = Dir$()
        Loop
        
        .HTMLBody = "<p><span style='font-size:11.0pt;font-family:""""Arial""""'>Sehr geehrte Damen und Herren,<br><br>im Anhang erhalten Sie folgende Pl|fffd|ne " & typ_text & ":<br><br></span>" _
                & "<p><span style='font-size:11.0pt;font-family:""""Arial""""'>" & Mid(plan_list_1, 3) & plan_list_2 & plan_list_3 & plan_list_4 & "</span>"
        
        .ReadReceiptRequested = True
        Set fs = CreateObject("Scripting.FileSystemObject")
        Set Folder = fs.GetFolder(pfad_import)
        For Each File In Folder.Files
            If File.Name Like "*.pdf" Or _
            File.Name Like "*.dwg" Or _
            File.Name Like "*.dxf" Or _
            File.Name Like "*.abs" Then
                .Attachments.Add pfad_import & "\" & File.Name
            End If
        Next
        .display
        'VBA.SendKeys "^{END}", True
        'strSignatur = "WMWInfo"
        '.GetInspector.CommandBars.Item("Insert").Controls("Signatur").Controls(strSignatur).Execute
        'Set .SendUsingAccount = .Session.Accounts.Item("info@wmw-gmbh.de")
    End With
    Set MyOutApp = Nothing
    Set MyMessage = Nothing

erfolg = "ja"
ERROREXIT:
If erfolg <> "ja" Then MsgBox "Es gab einen Fehler!", vbCritical, "Email"

Application.ScreenUpdating = True

End Sub
Attribute VB_Name = "formatierung_modul"
Sub aufraeumen()
Attribute aufraeumen.VB_ProcData.VB_Invoke_Func = " \n14"

'Tabellenblatt ausw|fffd|hlen, das aufger|fffd|umt werden soll und oben auf PLAY dr|fffd|cken

Dim erste_zeile As Integer, letzte_zeile As Integer, i As Integer, j As Integer

Application.ScreenUpdating = False

    Columns("A:A").ColumnWidth = 10
    Columns("B:B").ColumnWidth = 5
    Columns("C:C").ColumnWidth = 7
    Columns("D:D").ColumnWidth = 5
    Columns("E:E").ColumnWidth = 5
    Columns("F:F").ColumnWidth = 10
    Columns("G:G").ColumnWidth = 7
    Columns("H:H").ColumnWidth = 5
    Columns("I:I").ColumnWidth = 5
    Columns("J:J").EntireColumn.AutoFit
    Columns("K:K").ColumnWidth = 10
    Columns("L:L").ColumnWidth = 10
    Columns("M:M").ColumnWidth = 5
    Columns("N:N").ColumnWidth = 10
    Columns("O:O").ColumnWidth = 5
    Columns("P:P").ColumnWidth = 10
    Columns("Q:Q").ColumnWidth = 5
    Columns("R:R").ColumnWidth = 10
    Columns("S:S").ColumnWidth = 7
    
    erste_zeile = Sheets("Konfiguration").Cells(59, 23)
    letzte_zeile = Cells(Rows.Count, 3).End(xlUp).Row

For i = erste_zeile To letzte_zeile
    If Cells(i, 3) = "" And Cells(i, 4) <> "" Then
        Rows(i).FormatConditions.Delete
    Else
        Rows(erste_zeile).Copy
        Rows(i).PasteSpecial Paste:=xlPasteFormats, Operation:=xlNone, SkipBlanks:=False, Transpose:=False
        Application.CutCopyMode = False
    End If
Next

Cells(22, 2).Select

MsgBox "Formatiert!"

Application.ScreenUpdating = True

End Sub
Attribute VB_Name = "freigabe_von_extern_modul"
Sub freigabe_von_ext()

Application.ScreenUpdating = False

On Error GoTo ERROREXIT

ActiveWorkbook.SaveCopyAs filename:=ThisWorkbook.Path & "\" & Replace(ThisWorkbook.Name, ".xlsm", "_bak.xlsm")

Dim datum_arc As Date
Dim datum_arc2 As Date
Dim datum_ing As Date
Dim spl() As String
Dim plan() As String
Dim plaene As String
Dim i As Integer
Dim j As Integer
Dim k As Integer
Dim prfx As String
Dim trz_typ As String
Dim typ As String
Dim trz_nr As String
Dim nr As String
Dim trz_indx As String
Dim indx As String
Dim trz_sffx As String
Dim sffx As String
Dim baut As String
Dim plan_backup As String

spalte_prfx = Sheets("Konfiguration").Cells(59, 17)
spalte_bauteil = Sheets("Konfiguration").Cells(60, 17)
spalte_index = Sheets("Konfiguration").Cells(61, 17)
spalte_sffx = Sheets("Konfiguration").Cells(62, 17)
spalte_fring = Sheets("Konfiguration").Cells(69, 17)
spalte_frarc = Sheets("Konfiguration").Cells(70, 17)
spalte_entfallen = Sheets("Konfiguration").Cells(72, 17)
erste_zeile = Sheets("Konfiguration").Cells(59, 23)
bauvorhaben = Sheets("Verwaltung").Cells(4, 5)
pfad_logfile = Sheets("Konfiguration").Cells(67, 4)

If Sheets("Verwaltung").TextBox1.Text = "" Then
    MsgBox "Kein Plan eingegeben!", vbCritical, "Freigabe von Extern"
    Exit Sub
    End If
    
If Sheets("Verwaltung").ToggleButton1.Value = False And Sheets("Verwaltung").ToggleButton2.Value = False And Sheets("Verwaltung").ToggleButton8.Value = False Then
    MsgBox "Freigabe erteilt von wem? Bitte ausw|fffd|hlen!", vbCritical, "Freigabe von Extern"
    Exit Sub
    End If
    
'Planhistorie einblenden
For Each Worksheet In ActiveWorkbook.Worksheets
    If Worksheet.Visible = True And Worksheet.Name <> "Verwaltung" And Worksheet.Name <> "Konfiguration" Then
        letzte_zeile = Worksheet.Cells(Rows.Count, spalte_index).End(xlUp).Row + 100
        If letzte_zeile <= erste_zeile Then letzte_zeile = erste_zeile + 1
        
        For i = erste_zeile To letzte_zeile
        
            Worksheet.Rows(i).EntireRow.Hidden = False
        
        Next
    End If
Next Worksheet

plaene = Sheets("Verwaltung").TextBox1.Text
plan() = Split(Replace(plaene, " ", ""), ",")

For j = LBound(plan) To UBound(plan)

    Err1 = 0
    treffer_art = 0
    prfx = ""
    typ = ""
    nr = ""
    indx = ""
    sffx = ""
    baut = ""
    treffer_art = 0
    treffer_sheet = ""
    
    'Plantyp wird erkannt in function(schluessel)
    plan_backup = plan(j)
    spl() = Split(schluessel2(plan(j)), "*")
    plan(j) = plan_backup
    For i = LBound(spl) To UBound(spl)
        If spl(i) <> "" Then
            If i = 0 Then baut = spl(i)
            If i = 1 Then treffer_art = spl(i)
            If i = 2 Then prfx = spl(i)
            If i = 4 Then typ = spl(i)
            If i = 6 Then nr = spl(i)
            If i = 7 Then bsp_trz_indx = spl(i)
            If i = 8 Then indx = spl(i)
            If i = 10 Then sffx = spl(i)
            If i = 12 Then inhalt = spl(i)
        End If
    Next

    If treffer_art = 0 Then
        MsgBox "Plan " & plan(j) & " nicht gefunden." & vbCrLf & vbCrLf & "Bitte Eingabe oder Planliste pr|fffd|fen.", vbCritical, "Freigabe von Extern"
        pl_status = "error"
        GoTo SHORTCUT2
    End If
    
    If treffer_art = 1 Then treffer_sheet = "Fertigteile"
    If treffer_art = 2 Then treffer_sheet = "|fffd|bersichten"
    If treffer_art = 3 Or treffer_art = 4 Or treffer_art = 5 Then treffer_sheet = "Einbauteile"
    If treffer_art = 6 Then treffer_sheet = "Konstruktionspl|fffd|ne"
    If treffer_art = 7 Then treffer_sheet = "Werkpl|fffd|ne"
    
    If Sheets("Verwaltung").OptionButton4.Value = True Then aend_ing = 0
    If Sheets("Verwaltung").OptionButton5.Value = True Then aend_ing = 1
    
    If Sheets("Verwaltung").OptionButton14.Value = True Then aend_arc = 0
    If Sheets("Verwaltung").OptionButton15.Value = True Then aend_arc = 1
    
    If Sheets("Verwaltung").OptionButton11.Value = True Then aend_arc2 = 0
    If Sheets("Verwaltung").OptionButton9.Value = True Then aend_arc2 = 1
           
    If Sheets("Verwaltung").ToggleButton1.Value = True Then
        
        If Sheets("Verwaltung").OptionButton2.Value = True Then datum_ing = Date
        If Sheets("Verwaltung").OptionButton3.Value = True And Sheets("Verwaltung").TextBox2.Text <> "" Then datum_ing = Sheets("Verwaltung").TextBox2.Text
        If Sheets("Verwaltung").OptionButton3.Value = True And Sheets("Verwaltung").TextBox2.Text = "" Then
            MsgBox "Kein Datum eingegeben!", vbCritical, "Freigabe von Extern"
            Exit Sub
        End If
        
        letzte_zeile = Sheets(treffer_sheet).Cells(Rows.Count, spalte_bauteil).End(xlUp).Row
        If letzte_zeile <= erste_zeile Then letzte_zeile = erste_zeile + 1
        
        For i = erste_zeile To letzte_zeile
            If baut = Sheets(treffer_sheet).Cells(i, spalte_bauteil) And indx = Sheets(treffer_sheet).Cells(i, spalte_index) Then
                If Sheets(treffer_sheet).Cells(i, spalte_entfallen) = "x" Then
                    MsgBox "Bauteil " & baut & " entfallen!", vbCritical, "Freigabe von Extern"
                    GoTo SHORTCUT2
                End If
                If Sheets(treffer_sheet).Cells(i, spalte_fring) = "" Then
                    Sheets(treffer_sheet).Cells(i, spalte_fring) = datum_ing
                Else
                    MsgBox "F|fffd|r Plan " & plan(j) & " sind bereits R|fffd|ckl|fffd|ufer eingetragen!", vbCritical, "Freigabe von Extern"
                    GoTo SHORTCUT2
                End If
                If aend_ing = 0 Then Sheets(treffer_sheet).Cells(i, spalte_fring + 1) = "" Else Sheets(treffer_sheet).Cells(i, spalte_fring + 1) = "ja"
                If aend_ing = 0 Then ausgabe_ing = datum_ing & " - ohne |fffd|nderung" Else ausgabe_ing = datum_ing & " - mit |fffd|nderung"
                Err1 = Err1 + 1
            Exit For
            End If
            
            If baut = Sheets(treffer_sheet).Cells(i, spalte_bauteil) And indx <> Sheets(treffer_sheet).Cells(i, spalte_index) Then
            MsgBox "Nicht der aktuelle Index!", vbCritical, "Freigabe von Extern"
            Err1 = Err1 + 1
            Exit Sub
            End If
        Next
    End If
    
    If Sheets("Verwaltung").ToggleButton2.Value = True Then
    
        If Sheets("Verwaltung").OptionButton12.Value = True Then datum_arc = Date
        If Sheets("Verwaltung").OptionButton13.Value = True And Sheets("Verwaltung").TextBox3.Text <> "" Then datum_arc = Sheets("Verwaltung").TextBox3.Text
        If Sheets("Verwaltung").OptionButton13.Value = True And Sheets("Verwaltung").TextBox3.Text = "" Then
            MsgBox "Kein Datum eingegeben!", vbCritical, "Freigabe von Extern"
            Exit Sub
            End If
        
        letzte_zeile = Sheets(treffer_sheet).Cells(Rows.Count, spalte_bauteil).End(xlUp).Row
        If letzte_zeile <= erste_zeile Then letzte_zeile = erste_zeile + 1
                
        For i = erste_zeile To letzte_zeile
            If baut = Sheets(treffer_sheet).Cells(i, spalte_bauteil) And indx = Sheets(treffer_sheet).Cells(i, spalte_index) Then
                If Sheets(treffer_sheet).Cells(i, spalte_entfallen) = "x" Then
                    MsgBox "Bauteil " & baut & " entfallen!", vbCritical, "Freigabe von Extern"
                    GoTo SHORTCUT2
                End If
                If Sheets(treffer_sheet).Cells(i, spalte_frarc) = "" Then
                    Sheets(treffer_sheet).Cells(i, spalte_frarc) = datum_arc
                Else
                    MsgBox "F|fffd|r Plan " & plan(j) & " sind bereits R|fffd|ckl|fffd|ufer eingetragen!", vbCritical, "Freigabe von Extern"
                    GoTo SHORTCUT2
                End If
                If aend_arc = 0 Then Sheets(treffer_sheet).Cells(i, spalte_frarc + 1) = "" Else Sheets(treffer_sheet).Cells(i, spalte_frarc + 1) = "ja"
                If aend_arc = 0 Then ausgabe_arc = datum_arc & " - ohne |fffd|nderung" Else ausgabe_arc = datum_arc & " - mit |fffd|nderung"
                Err1 = Err1 + 1
            Exit For
            End If
            
            If baut = Sheets(treffer_sheet).Cells(i, spalte_bauteil) And indx <> Sheets(treffer_sheet).Cells(i, spalte_index) Then
                        
            For k = 1 To 100
                
                If Sheets(treffer_sheet).Cells(i + k, spalte_bauteil) = "" And indx = Sheets(treffer_sheet).Cells(i + k, spalte_index) Then
                    MsgBox baut & bsp_trz_indx & indx & ": Nicht der aktuelle Index!", vbInformation, "Freigabe von Extern"
                    If Sheets(treffer_sheet).Cells(i + k, spalte_entfallen) = "x" Then
                        MsgBox "Bauteil " & baut & " entfallen!", vbCritical, "Freigabe von Extern"
                        GoTo SHORTCUT2
                    End If
                    If Sheets(treffer_sheet).Cells(i + k, spalte_frarc) = "" Then
                        Sheets(treffer_sheet).Cells(i + k, spalte_frarc) = datum_arc
                    Else
                        MsgBox "F|fffd|r Plan " & plan(j) & " sind bereits R|fffd|ckl|fffd|ufer eingetragen!", vbCritical, "Freigabe von Extern"
                        GoTo SHORTCUT2
                    End If
                    If aend_arc = 0 Then Sheets(treffer_sheet).Cells(i + k, spalte_frarc + 1) = "" Else Sheets(treffer_sheet).Cells(i + k, spalte_frarc + 1) = "ja"
                    If aend_arc = 0 Then ausgabe_arc = datum_arc & " - ohne |fffd|nderung" Else ausgabe_arc = datum_arc & " - mit |fffd|nderung"
                    Err1 = Err1 + 1
                End If
                
                If Sheets(treffer_sheet).Cells(i + k, spalte_bauteil) <> "" Then
                    MsgBox baut & ": Index (" & indx & ") nicht gefunden!", vbCritical, "Freigabe von Extern"
                    Err1 = Err1 + 1
                    GoTo SHORTCUT2
                End If
                
            Next
            
            End If
        Next
    End If
    
    
    If Sheets("Verwaltung").ToggleButton8.Value = True Then
        
        If Sheets("Verwaltung").OptionButton1.Value = True Then datum_arc2 = Date
        If Sheets("Verwaltung").OptionButton10.Value = True And Sheets("Verwaltung").TextBox4.Text <> "" Then datum_arc2 = Sheets("Verwaltung").TextBox4.Text
        If Sheets("Verwaltung").OptionButton10.Value = True And Sheets("Verwaltung").TextBox4.Text = "" Then
            MsgBox "Kein Datum eingegeben!", vbCritical, "Freigabe von Extern"
            Exit Sub
            End If
        
        letzte_zeile = Sheets(treffer_sheet).Cells(Rows.Count, spalte_bauteil).End(xlUp).Row
    If letzte_zeile <= erste_zeile Then letzte_zeile = erste_zeile + 1
        
        For i = erste_zeile To letzte_zeile
            If baut = Sheets(treffer_sheet).Cells(i, spalte_bauteil) And indx = Sheets(treffer_sheet).Cells(i, spalte_index) Then
                If Sheets(treffer_sheet).Cells(i, spalte_entfallen) = "x" Then
                    MsgBox "Bauteil " & baut & " entfallen!", vbCritical, "Freigabe von Extern"
                    GoTo SHORTCUT2
                End If
                If Sheets(treffer_sheet).Cells(i, spalte_frarc + 2) = "" Then
                    Sheets(treffer_sheet).Cells(i, spalte_frarc + 2) = datum_arc2
                Else
                    MsgBox "F|fffd|r Plan " & plan(j) & " sind bereits R|fffd|ckl|fffd|ufer eingetragen!", vbCritical, "Freigabe von Extern"
                    GoTo SHORTCUT2
                End If
                If aend_arc2 = 0 Then Sheets(treffer_sheet).Cells(i, spalte_frarc + 3) = "" Else Sheets(treffer_sheet).Cells(i, spalte_frarc + 3) = "ja"
                If aend_arc2 = 0 Then ausgabe_arc2 = datum_arc2 & " - ohne |fffd|nderung" Else ausgabe_arc2 = datum_arc2 & " - mit |fffd|nderung"
                Err1 = Err1 + 1
            Exit For
            End If
            
            If baut = Sheets(treffer_sheet).Cells(i, spalte_bauteil) And indx <> Sheets(treffer_sheet).Cells(i, spalte_index) Then
            MsgBox "Nicht der aktuelle Index!", vbCritical, "Freigabe von Extern"
            Err1 = Err1 + 1
            Exit Sub
            End If
        Next
    End If
    
    
    If Err1 = 0 Then
    MsgBox "Plan nicht gefunden!", vbCritical, "Freigabe von Extern"
    Else
    
    von_wem1 = Sheets("Verwaltung").Cells(14, 9)
    von_wem2 = Sheets("Verwaltung").Cells(14, 12)
    von_wem3 = Sheets("Verwaltung").Cells(14, 15)
    
    If Dir(pfad_logfile, vbDirectory) = "" Then MkDir (pfad_logfile)
    Open pfad_logfile & Format(Now, "yyyy-mm-dd hh.mm.ss") & " vonExtern_logfile.txt" For Output As #1
        Print #1, vbCrLf _
                    & bauvorhaben & vbCrLf _
                    & vbCrLf _
                    & "Eintragungen Freigabe von Extern ausgef|fffd|hrt: " & Format(Now, "dd.mm.yyyy hh:mm:ss") & " - Von: " & Environ("Username") & vbCrLf _
                    & vbCrLf _
                    & "==========================================================================" & vbCrLf _
                    & vbCrLf _
                    & "Plan " & plan(j) & " eingetragen." & vbCrLf _
                    & vbCrLf _
                    & von_wem1 & ": " & ausgabe_arc & vbCrLf _
                    & von_wem2 & ": " & ausgabe_ing & vbCrLf _
                    & von_wem3 & ": " & ausgabe_arc2
    Close #1
    
    MsgBox "Plan " & plan(j) & " eingetragen." & vbCrLf _
            & vbCrLf _
            & von_wem1 & ": " & ausgabe_ing & vbCrLf _
            & von_wem2 & ": " & ausgabe_arc & vbCrLf _
            & von_wem3 & ": " & ausgabe_arc2 & vbCrLf _
            , vbInformation, "Freigabe von Extern"
    
    End If
    
SHORTCUT2:

Next

erfolg = "ja"
ERROREXIT:
If erfolg <> "ja" Then MsgBox "Es gab einen Fehler!", vbCritical, "Freigabe von Extern"

'Planhistorie ausblenden
For Each Worksheet In ActiveWorkbook.Worksheets
    If Worksheet.Visible = True And Worksheet.Name <> "Verwaltung" And Worksheet.Name <> "Konfiguration" Then
        letzte_zeile = Worksheet.Cells(Rows.Count, spalte_index).End(xlUp).Row
        If letzte_zeile <= erste_zeile Then letzte_zeile = erste_zeile + 1
        
        For i = erste_zeile To letzte_zeile
        
            If Worksheet.Cells(i, spalte_bauteil) = "" And Worksheet.Cells(i, spalte_index) <> "" Then Worksheet.Rows(i).EntireRow.Hidden = True
        
        Next
    End If
Next Worksheet

Application.ScreenUpdating = True

Call refresh

End Sub








Attribute VB_Name = "kontaktimport_form"
Attribute VB_Base = "0{37A1854D-7DC1-4B24-AE35-3583475170E9}{DC0BF284-7596-4E0A-AC71-6E1137F88B49}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False


Private Sub CommandButton1_Click()

Dim i As Integer, stz As Integer, kontaktsheet As Worksheet, k_zeile As Integer

Application.DisplayAlerts = False
Sheets("Verwaltung").Unprotect

Set kontaktsheet = ThisWorkbook.Sheets("Kontakte")

i = 29

For i = 29 To 127
    If Sheets("Verwaltung").Cells(i, 2) = "" Then
        stz = i
        Exit For
    End If
    i = i + 6
Next

If stz = 0 Then
    MsgBox "Keine freien Kontaktfelder vorhanden!", vbCritical, "Kontakt importieren"
    Exit Sub
End If

If TextBox_funktion.Value = "" Or Left(TextBox_funktion.Value, 4) = "z.B." Then
    MsgBox "Keine Funktion am Projekt eingetagen!", vbCritical, "Kontakt importieren"
    Exit Sub
End If

If ComboBox_kontakt.Value = "" Then
    MsgBox "Kein Kontakt ausgew|fffd|hlt!", vbCritical, "Kontakt importieren"
    Exit Sub
End If

For i = 1 To kontaktsheet.Cells(Rows.Count, 1).End(xlUp).Row + 1
    If kontaktsheet.Cells(i, 1) = ComboBox_kontakt.Value Then
        k_zeile = i
        Exit For
    End If
Next

If k_zeile = 0 Then
    MsgBox "Es gab einen Fehler!", vbCritical, "Kontakt importieren"
    Exit Sub
End If

Sheets("Verwaltung").Cells(stz, 2) = TextBox_funktion.Value

Sheets("Verwaltung").Cells(stz, 5) = kontaktsheet.Cells(k_zeile, 3)
Sheets("Verwaltung").Cells(stz + 1, 5) = kontaktsheet.Cells(k_zeile, 4) & " " & kontaktsheet.Cells(k_zeile, 5)
Sheets("Verwaltung").Cells(stz + 2, 5) = kontaktsheet.Cells(k_zeile, 2)
Sheets("Verwaltung").Cells(stz + 3, 5) = kontaktsheet.Cells(k_zeile, 6)
Sheets("Verwaltung").Cells(stz + 4, 5) = kontaktsheet.Cells(k_zeile, 7) & " " & kontaktsheet.Cells(k_zeile, 8)
If kontaktsheet.Cells(k_zeile, 9) <> "Deutschland" Then Sheets("Verwaltung").Cells(stz + 5, 5) = kontaktsheet.Cells(k_zeile, 9)

Sheets("Verwaltung").Cells(stz, 9) = kontaktsheet.Cells(k_zeile, 10)
Sheets("Verwaltung").Cells(stz + 2, 9) = "Tel.:"
Sheets("Verwaltung").Cells(stz + 2, 10) = kontaktsheet.Cells(k_zeile, 11)
Sheets("Verwaltung").Cells(stz + 3, 9) = "Mobil:"
Sheets("Verwaltung").Cells(stz + 3, 10) = kontaktsheet.Cells(k_zeile, 12)
Sheets("Verwaltung").Cells(stz + 4, 9) = "Fax:"
Sheets("Verwaltung").Cells(stz + 4, 10) = kontaktsheet.Cells(k_zeile, 13)
Sheets("Verwaltung").Cells(stz + 5, 9) = "URL:"
Sheets("Verwaltung").Cells(stz + 5, 10) = kontaktsheet.Cells(k_zeile, 14)

If Sheets("Verwaltung").Cells(stz, 9) <> "" Then
    Sheets("Verwaltung").Hyperlinks.Add Anchor:=Sheets("Verwaltung").Cells(stz, 9), _
    Address:="mailto:" & Sheets("Verwaltung").Cells(stz, 9) & "?subject=" & Sheets("Verwaltung").Cells(2, 5)
End If

If Sheets("Verwaltung").Cells(stz + 5, 10) <> "" Then
    If Left(Sheets("Verwaltung").Cells(stz + 5, 10), 4) = "http" Then
        Sheets("Verwaltung").Hyperlinks.Add Anchor:=Sheets("Verwaltung").Cells(stz + 5, 10), _
        Address:=Sheets("Verwaltung").Cells(stz + 5, 10)
    Else
        If Left(Sheets("Verwaltung").Cells(stz + 5, 10), 3) = "www" Then
            Sheets("Verwaltung").Hyperlinks.Add Anchor:=Sheets("Verwaltung").Cells(stz + 5, 10), _
            Address:="http://" & Sheets("Verwaltung").Cells(stz + 5, 10)
        Else
            Sheets("Verwaltung").Hyperlinks.Add Anchor:=Sheets("Verwaltung").Cells(stz + 5, 10), _
            Address:="http://www." & Sheets("Verwaltung").Cells(stz + 5, 10)
        End If
    End If
End If

Set kontaktsheet = Nothing

Application.DisplayAlerts = True

End Sub

Private Sub CommandButton2_Click()

Unload kontaktimport_form

End Sub

Private Sub CommandButton3_Click()
    
    Dim strsuche(9999) As String, gesuchter_text As String
    Dim i As Integer, z As Integer
        
    gesuchter_text = ComboBox_kontakt.Value
    i = ComboBox_kontakt.ListCount - 1
    For z = 0 To i
        If InStr(ComboBox_kontakt.List(z), gesuchter_text) > 0 Then
            strsuche(z) = ComboBox_kontakt.List(z)
        End If
    Next
    ComboBox_kontakt.Clear
    ComboBox_kontakt.Value = ""
    For z = 0 To i
        If strsuche(z) > "" Then ComboBox_kontakt.AddItem strsuche(z)
    Next z

End Sub

Private Sub CommandButton4_Click()
    Dim arrDaten
    Dim lngLetzte As Long
    With Worksheets("Kontakte")
        lngLetzte = .Cells(Rows.Count, 1).End(xlUp).Row
        arrDaten = .Range(.Cells(1, 1), .Cells(lngLetzte, 1))
        ComboBox_kontakt.List = arrDaten
    End With
End Sub

Private Sub Userform_Activate()
   Dim arrDaten
   Dim lngLetzte As Long
   With Worksheets("Kontakte")
      lngLetzte = .Cells(Rows.Count, 1).End(xlUp).Row
      arrDaten = .Range(.Cells(1, 1), .Cells(lngLetzte, 1))
      ComboBox_kontakt.List = arrDaten
   End With
End Sub

Private Sub Userform_terminate()
Dim kontaktsheet As Worksheet

Application.DisplayAlerts = False

Set kontaktsheet = ThisWorkbook.Sheets("Kontakte")
kontaktsheet.Delete
Set kontaktsheet = Nothing

Sheets("Verwaltung").Protect
Application.DisplayAlerts = True

End Sub
Attribute VB_Name = "modulupdate_modul"
Private Sub modulimport()

ThisWorkbook.VBProject.VBComponents.Remove ThisWorkbook.VBProject.VBComponents("einlesen_form")
ThisWorkbook.VBProject.VBComponents.Remove ThisWorkbook.VBProject.VBComponents("kontaktimport_form")
ThisWorkbook.VBProject.VBComponents.Remove ThisWorkbook.VBProject.VBComponents("adressimport_modul")
ThisWorkbook.VBProject.VBComponents.Remove ThisWorkbook.VBProject.VBComponents("anschreiben_modul")
ThisWorkbook.VBProject.VBComponents.Remove ThisWorkbook.VBProject.VBComponents("drucken_modul")
ThisWorkbook.VBProject.VBComponents.Remove ThisWorkbook.VBProject.VBComponents("eintragen_modul")
ThisWorkbook.VBProject.VBComponents.Remove ThisWorkbook.VBProject.VBComponents("email_modul")
ThisWorkbook.VBProject.VBComponents.Remove ThisWorkbook.VBProject.VBComponents("freigabe_von_extern_modul")
ThisWorkbook.VBProject.VBComponents.Remove ThisWorkbook.VBProject.VBComponents("preset_modul")
ThisWorkbook.VBProject.VBComponents.Remove ThisWorkbook.VBProject.VBComponents("refresh_modul")
ThisWorkbook.VBProject.VBComponents.Remove ThisWorkbook.VBProject.VBComponents("schluessel_modul")
ThisWorkbook.VBProject.VBComponents.Remove ThisWorkbook.VBProject.VBComponents("update_modul")
ThisWorkbook.VBProject.VBComponents.Remove ThisWorkbook.VBProject.VBComponents("verschieben_modul")

Application.Wait Now + TimeSerial(0, 0, 2)

ThisWorkbook.VBProject.VBComponents.Import ("S:\Programme_Technik\Excel\Module Planliste\einlesen_form.frm")
ThisWorkbook.VBProject.VBComponents.Import ("S:\Programme_Technik\Excel\Module Planliste\kontaktimport_form.frm")
ThisWorkbook.VBProject.VBComponents.Import ("S:\Programme_Technik\Excel\Module Planliste\adressimport_modul.bas")
ThisWorkbook.VBProject.VBComponents.Import ("S:\Programme_Technik\Excel\Module Planliste\anschreiben_modul.bas")
ThisWorkbook.VBProject.VBComponents.Import ("S:\Programme_Technik\Excel\Module Planliste\drucken_modul.bas")
ThisWorkbook.VBProject.VBComponents.Import ("S:\Programme_Technik\Excel\Module Planliste\eintragen_modul.bas")
ThisWorkbook.VBProject.VBComponents.Import ("S:\Programme_Technik\Excel\Module Planliste\email_modul.bas")
ThisWorkbook.VBProject.VBComponents.Import ("S:\Programme_Technik\Excel\Module Planliste\freigabe_von_extern_modul.bas")
ThisWorkbook.VBProject.VBComponents.Import ("S:\Programme_Technik\Excel\Module Planliste\preset_modul.bas")
ThisWorkbook.VBProject.VBComponents.Import ("S:\Programme_Technik\Excel\Module Planliste\refresh_modul.bas")
ThisWorkbook.VBProject.VBComponents.Import ("S:\Programme_Technik\Excel\Module Planliste\schluessel_modul.bas")
ThisWorkbook.VBProject.VBComponents.Import ("S:\Programme_Technik\Excel\Module Planliste\update_modul.bas")
ThisWorkbook.VBProject.VBComponents.Import ("S:\Programme_Technik\Excel\Module Planliste\verschieben_modul.bas")

MsgBox "IMPORT OK"

End Sub
Private Sub modulexport()

ThisWorkbook.VBProject.VBComponents("einlesen_form").Export ("S:\Programme_Technik\Excel\Module Planliste\einlesen_form.frm")
ThisWorkbook.VBProject.VBComponents("kontaktimport_form").Export ("S:\Programme_Technik\Excel\Module Planliste\kontaktimport_form.frm")
ThisWorkbook.VBProject.VBComponents("adressimport_modul").Export ("S:\Programme_Technik\Excel\Module Planliste\adressimport_modul.bas")
ThisWorkbook.VBProject.VBComponents("anschreiben_modul").Export ("S:\Programme_Technik\Excel\Module Planliste\anschreiben_modul.bas")
ThisWorkbook.VBProject.VBComponents("drucken_modul").Export ("S:\Programme_Technik\Excel\Module Planliste\drucken_modul.bas")
ThisWorkbook.VBProject.VBComponents("eintragen_modul").Export ("S:\Programme_Technik\Excel\Module Planliste\eintragen_modul.bas")
ThisWorkbook.VBProject.VBComponents("email_modul").Export ("S:\Programme_Technik\Excel\Module Planliste\email_modul.bas")
ThisWorkbook.VBProject.VBComponents("freigabe_von_extern_modul").Export ("S:\Programme_Technik\Excel\Module Planliste\freigabe_von_extern_modul.bas")
ThisWorkbook.VBProject.VBComponents("modulupdate_modul").Export ("S:\Programme_Technik\Excel\Module Planliste\modulupdate_modul.bas")
ThisWorkbook.VBProject.VBComponents("preset_modul").Export ("S:\Programme_Technik\Excel\Module Planliste\preset_modul.bas")
ThisWorkbook.VBProject.VBComponents("refresh_modul").Export ("S:\Programme_Technik\Excel\Module Planliste\refresh_modul.bas")
ThisWorkbook.VBProject.VBComponents("schluessel_modul").Export ("S:\Programme_Technik\Excel\Module Planliste\schluessel_modul.bas")
ThisWorkbook.VBProject.VBComponents("update_modul").Export ("S:\Programme_Technik\Excel\Module Planliste\update_modul.bas")
ThisWorkbook.VBProject.VBComponents("verschieben_modul").Export ("S:\Programme_Technik\Excel\Module Planliste\verschieben_modul.bas")

MsgBox "EXPORT OK"

End Sub

Attribute VB_Name = "preset_modul"
Sub konfiguration_speichern()

Dim preset_pfad As String
Dim preset_name As String
Dim i As Integer
Dim j As Integer
Dim erfolg As String

erfolg = "nein"

On Error GoTo ERROREXIT

preset_pfad = Sheets("Konfiguration").Cells(71, 4) & "Planbezeichnungen\"

If Dir(Left(preset_pfad, Len(preset_pfad) - 1), vbDirectory) = "" Then MkDir (Left(preset_pfad, Len(preset_pfad) - 1))

preset_name = InputBox("Name f|fffd|r Konfiguration eingeben: ", "Konfiguration speichern")

If preset_name = "" Then
    MsgBox "Ung|fffd|ltiger Name!" & vbCrLf & "Abbruch!", vbCritical, "Konfiguration speichern"
    Exit Sub
End If

If Dir(preset_pfad & preset_name & ".txt") <> "" Then
choice = MsgBox("Die Datei " & preset_name & " existiert bereits!" & vbCrLf & vbCrLf & "M|fffd|chten Sie die Datei |fffd|berschreiben?", vbYesNo, "Konfiguration speichern")
    If choice = vbNo Then Exit Sub
End If

Open preset_pfad & preset_name & ".txt" For Output As #1

    For i = 1 To 83
        For j = 1 To 35
            If Sheets("Konfiguration").Cells(i, j).Interior.Color = 10092543 Or Sheets("Konfiguration").Cells(i, j).Interior.Color = 255 Then Print #1, i & vbTab & j & vbTab & Sheets("Konfiguration").Cells(i, j)
        Next
    Next
    
MsgBox "Konfiguration """ & preset_name & """ gespeichert.", vbInformation, "Konfiguration speichern"

erfolg = "ja"
ERROREXIT:
If erfolg <> "ja" Then MsgBox "Es gab einen Fehler!", vbCritical, "Konfiguration speichern"

Close #1
Calculate
Application.ScreenUpdating = True

End Sub

Sub konfiguration_laden()

Dim preset_pfad As String
Dim preset_name As String
Dim preset As Variant
Dim laufwerk As String
Dim zeile As String
Dim i As Integer
Dim j As Integer
Dim spl() As String
Dim erfolg As String

erfolg = "nein"

On Error GoTo ERROREXIT

If Sheets("Konfiguration").Cells(71, 4) <> "" Then preset_pfad = Sheets("Konfiguration").Cells(71, 4) & "Planbezeichnungen\"
laufwerk = Sheets("Konfiguration").Cells(59, 4)

If preset_pfad <> "" Then ChDir (preset_pfad)
If laufwerk <> "" Then ChDrive laufwerk
preset = Application.GetOpenFilename("Micrsoft Editor-Dateien (*.txt),*.txt")
    If preset = False Then Exit Sub
    spl = Split(preset, "\")
    For L = 0 To UBound(spl)
    If Right(spl(L), 3) = "txt" Then preset_name = spl(L)
    Next

choice = MsgBox("Ausgew|fffd|hlte Konfiguration: """ & Replace(preset_name, ".txt", "") & """" & vbCrLf & vbCrLf & "Fortfahren?", vbYesNo, "Konfiguration laden")
    If choice = vbNo Then Exit Sub

Open preset For Input As #1

Do Until EOF(1)
    Line Input #1, zeile
    spl = Split(zeile, vbTab)
    Sheets("Konfiguration").Cells(CInt(spl(0)), CInt(spl(1))) = spl(2)
Loop

MsgBox "Konfiguration """ & Replace(preset_name, ".txt", "") & """ geladen.", vbInformation, "Konfiguration laden"

erfolg = "ja"
ERROREXIT:
If erfolg <> "ja" Then MsgBox "Es gab einen Fehler!", vbCritical, "Konfiguration laden"

Close #1
Calculate
Application.ScreenUpdating = True

End Sub

Sub plankopf_speichern()

Dim preset_pfad As String
Dim preset_name As String
Dim i As Integer
Dim j As Integer
Dim erfolg As String

erfolg = "nein"

On Error GoTo ERROREXIT

preset_pfad = Sheets("Konfiguration").Cells(71, 4) & "Plankopf\"

If Dir(Left(preset_pfad, Len(preset_pfad) - 1), vbDirectory) = "" Then MkDir (Left(preset_pfad, Len(preset_pfad) - 1))

preset_name = InputBox("Name f|fffd|r Preset eingeben: ", "Preset f|fffd|r Plankopf speichern")

If preset_name = "" Then
    MsgBox "Ung|fffd|ltiger Name!" & vbCrLf & "Abbruch!", vbCritical, "Preset f|fffd|r Plankopf speichern"
    Exit Sub
End If

If Dir(preset_pfad & preset_name & ".txt") <> "" Then
choice = MsgBox("Die Datei " & preset_name & " existiert bereits!" & vbCrLf & vbCrLf & "M|fffd|chten Sie die Datei |fffd|berschreiben?", vbYesNo, "Preset f|fffd|r Plankopf speichern")
    If choice = vbNo Then Exit Sub
End If

Open preset_pfad & preset_name & ".txt" For Output As #1

    For i = 90 To 136
        For j = 4 To 7
            If Sheets("Konfiguration").Cells(i, j).Interior.Color = 10092543 Then Print #1, i & vbTab & j & vbTab & Sheets("Konfiguration").Cells(i, j)
        Next
    Next

MsgBox "Preset """ & preset_name & """ f|fffd|r Plankopf gespeichert.", vbInformation, "Preset f|fffd|r Plankopf speichern"

erfolg = "ja"
ERROREXIT:
If erfolg <> "ja" Then MsgBox "Es gab einen Fehler!", vbCritical, "Preset f|fffd|r Plankopf speichern"

Close #1
Calculate
Application.ScreenUpdating = True

End Sub

Sub plankopf_laden()

Dim preset_pfad As String
Dim preset_name As String
Dim preset As Variant
Dim zeile As String
Dim i As Integer
Dim j As Integer
Dim spl() As String
Dim erfolg As String

erfolg = "nein"

'On Error GoTo ERROREXIT

If Sheets("Konfiguration").Cells(71, 4) <> "" Then preset_pfad = Sheets("Konfiguration").Cells(71, 4) & "Plankopf\"
laufwerk = Sheets("Konfiguration").Cells(59, 4)

If preset_pfad <> "" Then ChDir (preset_pfad)
If laufwerk <> "" Then ChDrive laufwerk
preset = Application.GetOpenFilename("Micrsoft Editor-Dateien (*.txt),*.txt")
    If preset = False Then Exit Sub
    spl = Split(preset, "\")
    For L = 0 To UBound(spl)
    If Right(spl(L), 3) = "txt" Then preset_name = spl(L)
    Next

choice = MsgBox("Ausgew|fffd|hltes Preset: """ & Replace(preset_name, ".txt", "") & """" & vbCrLf & vbCrLf & "Fortfahren?", vbYesNo, "Preset f|fffd|r Plankopf laden")
    If choice = vbNo Then Exit Sub

Open preset For Input As #1

Do Until EOF(1)
    Line Input #1, zeile
    spl = Split(zeile, vbTab)
    Sheets("Konfiguration").Cells(CInt(spl(0)), CInt(spl(1))) = spl(2)
Loop

MsgBox "Preset """ & Replace(preset_name, ".txt", "") & """ f|fffd|r Plankopf geladen.", vbInformation, "Preset f|fffd|r Plankopf laden"

erfolg = "ja"
ERROREXIT:
If erfolg <> "ja" Then MsgBox "Es gab einen Fehler!", vbCritical, "Preset f|fffd|r Plankopf laden"

Close #1
Calculate
Application.ScreenUpdating = True

End Sub

Attribute VB_Name = "refresh_modul"
Sub refresh()

Application.ScreenUpdating = False

'On Error GoTo ERROREXIT

If Not Sheets("Fertigteile").Visible = True Then
    'MsgBox "Fertigteile sind ausgeblendet!", vbCritical, "Hyperlinks und Auswertung aktualisieren"
    Exit Sub
End If

Dim spalte_bauteil As Long
Dim spalte_gez_datum As Long
Dim spalte_zeichner As Long
Dim spalte_index As Long
Dim spalte_sffx As Long
Dim spalte_stck_plan As Long
Dim spalte_stck_uber As Long
Dim spalte_verschickt As Long
Dim spalte_inhalt As Long
Dim spalte_fring As Long
Dim spalte_frarc As Long
Dim spalte_aend_arc As Long
Dim spalte_freigabe As Long
Dim spalte_entfallen As Long
Dim anz_plaene As Integer
Dim anz_gez As Integer
Dim anz_fring As Integer
Dim anz_frarc As Integer
Dim anz_freizugeben As Integer
Dim anz_baufrei As Integer
Dim stck_gez As Integer
Dim stck_ges As Integer
Dim stck_baufrei As Integer
Dim check_zeile As String
Dim bsp_typ As String
Dim trz_nr As String
Dim bsp_nr As String
Dim vari As Integer
Dim baut As String
Dim typ_baut As String
Dim nr_baut As String
Dim warnung_count As Integer

erste_zeile = Sheets("Konfiguration").Cells(59, 23)
spalte_prfx = Sheets("Konfiguration").Cells(59, 17)
spalte_bauteil = Sheets("Konfiguration").Cells(60, 17)
spaltenname_bauteil = spBuchstabe(spalte_bauteil)
spalte_index = Sheets("Konfiguration").Cells(61, 17)
spalte_sffx = Sheets("Konfiguration").Cells(62, 17)
spalte_gez_datum = Sheets("Konfiguration").Cells(63, 17)
spalte_zeichner = Sheets("Konfiguration").Cells(64, 17)
spaltenname_zeichner = spBuchstabe(spalte_zeichner)
spalte_stck_plan = Sheets("Konfiguration").Cells(65, 17)
spalte_stck_uber = Sheets("Konfiguration").Cells(66, 17)
spaltenname_stck_uber = spBuchstabe(spalte_stck_uber)
spalte_inhalt = Sheets("Konfiguration").Cells(67, 17)
spalte_verschickt = Sheets("Konfiguration").Cells(68, 17)
spaltenname_verschickt = spBuchstabe(spalte_verschickt)
spalte_fring = Sheets("Konfiguration").Cells(69, 17)
spalte_frarc = Sheets("Konfiguration").Cells(70, 17)
spaltenname_frarc = spBuchstabe(spalte_frarc)
spalte_aend_arc = Sheets("Konfiguration").Cells(70, 17) + 1
spalte_freigabe = Sheets("Konfiguration").Cells(71, 17)
spaltenname_freigabe = spBuchstabe(spalte_freigabe)
spalte_entfallen = Sheets("Konfiguration").Cells(72, 17)
bsp_typ = Sheets("Konfiguration").Cells(33, 3)
trz_nr = Sheets("Konfiguration").Cells(33, 4)
bsp_nr = Sheets("Konfiguration").Cells(34, 3)

'Planhistorie einblenden
letzte_zeile = Sheets("Fertigteile").Cells(Rows.Count, spalte_index).End(xlUp).Row + 100
If letzte_zeile <= erste_zeile Then letzte_zeile = erste_zeile + 1

For i = erste_zeile To letzte_zeile

    Sheets("Fertigteile").Rows(i).EntireRow.Hidden = False

Next

letzte_zeile = Sheets("Fertigteile").UsedRange.Rows.Count
If letzte_zeile <= erste_zeile Then letzte_zeile = erste_zeile + 1

vari = 0
For i = 33 To 34
 If Sheets("Konfiguration").Cells(i, 5) = "x" Then vari = i - 32
Next

zeile_konf = 10
zeile_link = 2
treffer_erste_zeile = ""
treffer_letzte_zeile = ""
stck_baufrei = 0
stck_ges = 0
check_zeile = "leer"

For S = spalte_prfx To spalte_entfallen
    If Sheets("Fertigteile").Cells(erste_zeile, S) <> "" Then check_zeile = "voll"
Next

Sheets("Fertigteile").Select
If check_zeile = "voll" Then
    Rows(erste_zeile).Select
    Selection.Insert Shift:=xlDown, CopyOrigin:=xlFormatFromLeftOrAbove
    Rows(erste_zeile).Select
    Selection.RowHeight = 12.75
    Rows(erste_zeile + 1).Select
    Selection.Copy
    Rows(erste_zeile).Select
    Selection.PasteSpecial Paste:=xlPasteFormats, Operation:=xlNone, _
        SkipBlanks:=False, Transpose:=False
    Application.CutCopyMode = False
    check_zeile = "leer"
End If

For z = erste_zeile To letzte_zeile
    If Sheets("Fertigteile").Cells(z, spalte_bauteil) <> "" Then
        check_zeile = "leer"
        baut = Sheets("Fertigteile").Cells(z, spalte_bauteil)
        typ_baut = Left(baut, Len(bsp_typ))
        nr_baut = Right(baut, Len(bsp_nr))
        
        If vari = 1 Then
            typ_baut = Replace(baut, Right(baut, Len(trz_nr & bsp_nr)), "")
        End If
        If vari = 2 Then
            nr_baut = Replace(baut, Left(baut, Len(bsp_typ & trz_nr)), "")
        End If
        
        For S = spalte_prfx To spalte_entfallen
            If Sheets("Fertigteile").Cells(z - 1, S) <> "" Then check_zeile = "voll"
        Next
        
        If check_zeile = "leer" Then
            If typ_baut & trz_nr = Left(Sheets("Fertigteile").Cells(z - 2, spalte_bauteil), Len(typ_baut) + Len(trz_nr)) And IsNumeric(nr_baut) And Len(nr_baut) > 2 And Val(nr_baut) - Val(Right(Cells(z - 2, spalte_bauteil), Len(nr_baut))) = 1 Then
                Rows(z - 1 & ":" & z - 1).Select
                Selection.Delete Shift:=xlUp
                z = z - 1
            End If
        Else
            If Sheets("Fertigteile").Cells(z - 1, spalte_bauteil) <> "" Then
                If typ_baut & trz_nr <> Left(Sheets("Fertigteile").Cells(z - 1, spalte_bauteil), Len(typ_baut) + Len(trz_nr)) Or IsNumeric(nr_baut) And Len(nr_baut) > 2 And Val(nr_baut) - Val(Right(Cells(z - 1, spalte_bauteil), Len(nr_baut))) <> 1 Then
                    Rows(z).Select
                    Selection.Insert Shift:=xlDown, CopyOrigin:=xlFormatFromLeftOrAbove
                    Rows(z).Select
                    Selection.RowHeight = 12.75
                    Rows(z + 1).Select
                    Selection.Copy
                    Rows(z).Select
                    Selection.PasteSpecial Paste:=xlPasteFormats, Operation:=xlNone, _
                    SkipBlanks:=False, Transpose:=False
                    Application.CutCopyMode = False
                    z = z + 1
                    letzte_zeile = letzte_zeile + 1
                    check_zeile = "leer"
                End If
            End If
        End If
    End If
Next

Dim lange As Integer
Dim spl() As String

For z = zeile_link To zeile_link + 17
    For S = spalte_bauteil To spalte_entfallen
        Sheets("Fertigteile").Cells(z, S) = ""
    Next
Next

letzte_zeile = Sheets("Fertigteile").Cells(Rows.Count, spalte_bauteil).End(xlUp).Row
If letzte_zeile <= erste_zeile Then letzte_zeile = erste_zeile + 1

For z = erste_zeile To letzte_zeile
    If Sheets("Fertigteile").Cells(z, spalte_entfallen) = "x" Then
        If Sheets("Fertigteile").Cells(z, spalte_gez_datum) = "" Then Sheets("Fertigteile").Cells(z, spalte_gez_datum) = "entf."
        If Sheets("Fertigteile").Cells(z, spalte_verschickt) = "" Then Sheets("Fertigteile").Cells(z, spalte_verschickt) = "entf."
        Sheets("Fertigteile").Cells(z, spalte_stck_uber) = ""
        If Sheets("Fertigteile").Cells(z, spalte_fring) = "" Then Sheets("Fertigteile").Cells(z, spalte_fring) = "entf."
        If Sheets("Fertigteile").Cells(z, spalte_frarc) = "" Then Sheets("Fertigteile").Cells(z, spalte_frarc) = "entf."
        If Sheets("Fertigteile").Cells(z, spalte_freigabe) = "" Then Sheets("Fertigteile").Cells(z, spalte_freigabe) = "entf."
    End If
Next


Do
    bez_1 = ""
    bez_2 = ""
    bez_3 = ""
    bez_4 = ""
    bez_5 = ""
    bez_6 = ""
    bez_7 = ""
    bez_8 = ""
    bez_9 = ""
    bez_10 = ""
    bez_11 = ""
    bez_12 = ""
    bez_13 = ""
    bez_14 = ""
    bez_15 = ""
    typ = ""
    treffer_erste_zeile = ""
    
        If Sheets("Konfiguration").Cells(zeile_konf, 4) = "" Then GoTo SHORTCUT
        
        For st = 1 To Len(Sheets("Konfiguration").Cells(zeile_konf, 4))
            If Mid(Sheets("Konfiguration").Cells(zeile_konf, 4), st, 1) <> "," Then bez_1 = Sheets("Konfiguration").Cells(zeile_konf, 4)
        Next
    
        For st = 1 To Len(Sheets("Konfiguration").Cells(zeile_konf, 4))
            If Mid(Sheets("Konfiguration").Cells(zeile_konf, 4), st, 1) = "," Then
                spl() = Split(Replace(Sheets("Konfiguration").Cells(zeile_konf, 4), " ", ""), ",")
                    For i = LBound(spl) To UBound(spl)
                        If i = 0 Then bez_1 = spl(i)
                        If i = 1 Then bez_2 = spl(i)
                        If i = 2 Then bez_3 = spl(i)
                        If i = 3 Then bez_4 = spl(i)
                        If i = 4 Then bez_5 = spl(i)
                        If i = 5 Then bez_6 = spl(i)
                        If i = 6 Then bez_7 = spl(i)
                        If i = 7 Then bez_8 = spl(i)
                        If i = 8 Then bez_9 = spl(i)
                        If i = 9 Then bez_10 = spl(i)
                        If i = 10 Then bez_11 = spl(i)
                        If i = 11 Then bez_12 = spl(i)
                        If i = 12 Then bez_13 = spl(i)
                        If i = 13 Then bez_14 = spl(i)
                        If i = 14 Then bez_15 = spl(i)
                    Next
            End If
        Next
    
        typ = Sheets("Konfiguration").Cells(zeile_konf, 2)
        i = erste_zeile
        Do
            If Sheets("Fertigteile").Cells(i, spalte_bauteil) <> "" Then
                If bez_1 & trz_nr = Left(Sheets("Fertigteile").Cells(i, spalte_bauteil), Len(bez_1) + Len(trz_nr)) And bez_1 <> "" _
                Or bez_2 & trz_nr = Left(Sheets("Fertigteile").Cells(i, spalte_bauteil), Len(bez_2) + Len(trz_nr)) And bez_2 <> "" _
                Or bez_3 & trz_nr = Left(Sheets("Fertigteile").Cells(i, spalte_bauteil), Len(bez_3) + Len(trz_nr)) And bez_3 <> "" _
                Or bez_4 & trz_nr = Left(Sheets("Fertigteile").Cells(i, spalte_bauteil), Len(bez_4) + Len(trz_nr)) And bez_4 <> "" _
                Or bez_5 & trz_nr = Left(Sheets("Fertigteile").Cells(i, spalte_bauteil), Len(bez_5) + Len(trz_nr)) And bez_5 <> "" _
                Or bez_6 & trz_nr = Left(Sheets("Fertigteile").Cells(i, spalte_bauteil), Len(bez_6) + Len(trz_nr)) And bez_6 <> "" _
                Or bez_7 & trz_nr = Left(Sheets("Fertigteile").Cells(i, spalte_bauteil), Len(bez_7) + Len(trz_nr)) And bez_7 <> "" _
                Or bez_8 & trz_nr = Left(Sheets("Fertigteile").Cells(i, spalte_bauteil), Len(bez_8) + Len(trz_nr)) And bez_8 <> "" _
                Or bez_9 & trz_nr = Left(Sheets("Fertigteile").Cells(i, spalte_bauteil), Len(bez_9) + Len(trz_nr)) And bez_9 <> "" _
                Or bez_10 & trz_nr = Left(Sheets("Fertigteile").Cells(i, spalte_bauteil), Len(bez_10) + Len(trz_nr)) And bez_10 <> "" _
                Or bez_11 & trz_nr = Left(Sheets("Fertigteile").Cells(i, spalte_bauteil), Len(bez_11) + Len(trz_nr)) And bez_11 <> "" _
                Or bez_12 & trz_nr = Left(Sheets("Fertigteile").Cells(i, spalte_bauteil), Len(bez_12) + Len(trz_nr)) And bez_12 <> "" _
                Or bez_13 & trz_nr = Left(Sheets("Fertigteile").Cells(i, spalte_bauteil), Len(bez_13) + Len(trz_nr)) And bez_13 <> "" _
                Or bez_14 & trz_nr = Left(Sheets("Fertigteile").Cells(i, spalte_bauteil), Len(bez_14) + Len(trz_nr)) And bez_14 <> "" _
                Or bez_15 & trz_nr = Left(Sheets("Fertigteile").Cells(i, spalte_bauteil), Len(bez_15) + Len(trz_nr)) And bez_15 <> "" _
                Then treffer_erste_zeile = i
                If treffer_erste_zeile <> "" Then Exit Do
            End If
            i = i + 1
        Loop Until i > letzte_zeile
        
        If treffer_erste_zeile <> "" Then
            Sheets("Fertigteile").Cells(zeile_link, 3) = typ
            range_typ = spaltenname_bauteil & zeile_link
            Sheets("Fertigteile").Select
            Range(range_typ).Select
            
            If ThisWorkbook.Sheets("Konfiguration").ToggleButton2.Value = True Then
                activeSheet.Hyperlinks.Add Anchor:=Selection, Address:="", SubAddress:="Fertigteile!" & spaltenname_bauteil & treffer_erste_zeile, TextToDisplay:=typ
                Selection.Font.Bold = True
            Else
                With Selection.Font
                    .ThemeColor = xlThemeColorLight1
                    .TintAndShade = 0
                    .Underline = xlUnderlineStyleNone
                    .Bold = True
                End With
            End If
            anz_plaene = 0
            anz_gez = 0
            
            For z = treffer_erste_zeile To letzte_zeile + 1
                If Sheets("Fertigteile").Cells(z, spalte_bauteil) <> "" And Sheets("Fertigteile").Cells(z, spalte_entfallen) <> "x" Then
                    If bez_1 & trz_nr = Left(Sheets("Fertigteile").Cells(z, spalte_bauteil), Len(bez_1) + Len(trz_nr)) And bez_1 <> "" _
                    Or bez_2 & trz_nr = Left(Sheets("Fertigteile").Cells(z, spalte_bauteil), Len(bez_2) + Len(trz_nr)) And bez_2 <> "" _
                    Or bez_3 & trz_nr = Left(Sheets("Fertigteile").Cells(z, spalte_bauteil), Len(bez_3) + Len(trz_nr)) And bez_3 <> "" _
                    Or bez_4 & trz_nr = Left(Sheets("Fertigteile").Cells(z, spalte_bauteil), Len(bez_4) + Len(trz_nr)) And bez_4 <> "" _
                    Or bez_5 & trz_nr = Left(Sheets("Fertigteile").Cells(z, spalte_bauteil), Len(bez_5) + Len(trz_nr)) And bez_5 <> "" _
                    Or bez_6 & trz_nr = Left(Sheets("Fertigteile").Cells(z, spalte_bauteil), Len(bez_6) + Len(trz_nr)) And bez_6 <> "" _
                    Or bez_7 & trz_nr = Left(Sheets("Fertigteile").Cells(z, spalte_bauteil), Len(bez_7) + Len(trz_nr)) And bez_7 <> "" _
                    Or bez_8 & trz_nr = Left(Sheets("Fertigteile").Cells(z, spalte_bauteil), Len(bez_8) + Len(trz_nr)) And bez_8 <> "" _
                    Or bez_9 & trz_nr = Left(Sheets("Fertigteile").Cells(z, spalte_bauteil), Len(bez_9) + Len(trz_nr)) And bez_9 <> "" _
                    Or bez_10 & trz_nr = Left(Sheets("Fertigteile").Cells(z, spalte_bauteil), Len(bez_10) + Len(trz_nr)) And bez_10 <> "" _
                    Or bez_11 & trz_nr = Left(Sheets("Fertigteile").Cells(z, spalte_bauteil), Len(bez_11) + Len(trz_nr)) And bez_11 <> "" _
                    Or bez_12 & trz_nr = Left(Sheets("Fertigteile").Cells(z, spalte_bauteil), Len(bez_12) + Len(trz_nr)) And bez_12 <> "" _
                    Or bez_13 & trz_nr = Left(Sheets("Fertigteile").Cells(z, spalte_bauteil), Len(bez_13) + Len(trz_nr)) And bez_13 <> "" _
                    Or bez_14 & trz_nr = Left(Sheets("Fertigteile").Cells(z, spalte_bauteil), Len(bez_14) + Len(trz_nr)) And bez_14 <> "" _
                    Or bez_15 & trz_nr = Left(Sheets("Fertigteile").Cells(z, spalte_bauteil), Len(bez_15) + Len(trz_nr)) And bez_15 <> "" _
                    Then anz_plaene = anz_plaene + 1
                    'MsgBox "z: " & z & " | " & typ & " | " & anz_plaene
                    End If
                If Sheets("Fertigteile").Cells(z, spalte_bauteil) <> "" And Sheets("Fertigteile").Cells(z, spalte_entfallen) <> "x" And Sheets("Fertigteile").Cells(z, spalte_gez_datum) <> "" Then
                    If bez_1 & trz_nr = Left(Sheets("Fertigteile").Cells(z, spalte_bauteil), Len(bez_1) + Len(trz_nr)) And bez_1 <> "" _
                    Or bez_2 & trz_nr = Left(Sheets("Fertigteile").Cells(z, spalte_bauteil), Len(bez_2) + Len(trz_nr)) And bez_2 <> "" _
                    Or bez_3 & trz_nr = Left(Sheets("Fertigteile").Cells(z, spalte_bauteil), Len(bez_3) + Len(trz_nr)) And bez_3 <> "" _
                    Or bez_4 & trz_nr = Left(Sheets("Fertigteile").Cells(z, spalte_bauteil), Len(bez_4) + Len(trz_nr)) And bez_4 <> "" _
                    Or bez_5 & trz_nr = Left(Sheets("Fertigteile").Cells(z, spalte_bauteil), Len(bez_5) + Len(trz_nr)) And bez_5 <> "" _
                    Or bez_6 & trz_nr = Left(Sheets("Fertigteile").Cells(z, spalte_bauteil), Len(bez_6) + Len(trz_nr)) And bez_6 <> "" _
                    Or bez_7 & trz_nr = Left(Sheets("Fertigteile").Cells(z, spalte_bauteil), Len(bez_7) + Len(trz_nr)) And bez_7 <> "" _
                    Or bez_8 & trz_nr = Left(Sheets("Fertigteile").Cells(z, spalte_bauteil), Len(bez_8) + Len(trz_nr)) And bez_8 <> "" _
                    Or bez_9 & trz_nr = Left(Sheets("Fertigteile").Cells(z, spalte_bauteil), Len(bez_9) + Len(trz_nr)) And bez_9 <> "" _
                    Or bez_10 & trz_nr = Left(Sheets("Fertigteile").Cells(z, spalte_bauteil), Len(bez_10) + Len(trz_nr)) And bez_10 <> "" _
                    Or bez_11 & trz_nr = Left(Sheets("Fertigteile").Cells(z, spalte_bauteil), Len(bez_11) + Len(trz_nr)) And bez_11 <> "" _
                    Or bez_12 & trz_nr = Left(Sheets("Fertigteile").Cells(z, spalte_bauteil), Len(bez_12) + Len(trz_nr)) And bez_12 <> "" _
                    Or bez_13 & trz_nr = Left(Sheets("Fertigteile").Cells(z, spalte_bauteil), Len(bez_13) + Len(trz_nr)) And bez_13 <> "" _
                    Or bez_14 & trz_nr = Left(Sheets("Fertigteile").Cells(z, spalte_bauteil), Len(bez_14) + Len(trz_nr)) And bez_14 <> "" _
                    Or bez_15 & trz_nr = Left(Sheets("Fertigteile").Cells(z, spalte_bauteil), Len(bez_15) + Len(trz_nr)) And bez_15 <> "" _
                    Then anz_gez = anz_gez + 1
                End If
            Next
            
            Sheets("Fertigteile").Cells(zeile_link, spalte_gez_datum) = "=" & spaltenname_zeichner & zeile_link & "/" & spaltenname_stck_uber & zeile_link
            Sheets("Fertigteile").Cells(zeile_link, spalte_zeichner) = anz_gez
            Sheets("Fertigteile").Cells(zeile_link, spalte_stck_plan) = "von"
            Sheets("Fertigteile").Cells(zeile_link, spalte_stck_uber) = anz_plaene
            
            zeile_link = zeile_link + 1
        End If
SHORTCUT:

    zeile_konf = zeile_konf + 1

Loop Until zeile_konf = 26

Sheets("Fertigteile").Cells(18, spalte_bauteil) = "Gezeichnet:"
Sheets("Fertigteile").Cells(18, spalte_gez_datum) = "=" & spaltenname_zeichner & "18/" & spaltenname_stck_uber & "18"
Sheets("Fertigteile").Cells(18, spalte_zeichner) = "=SUM(" & spaltenname_zeichner & "2:" & spaltenname_zeichner & "17)"
Sheets("Fertigteile").Cells(18, spalte_stck_plan) = "von"
Sheets("Fertigteile").Cells(18, spalte_stck_uber) = "=SUM(" & spaltenname_stck_uber & "2:" & spaltenname_stck_uber & "17)"

Range(spaltenname_bauteil & "18:" & spaltenname_stck_uber & "18").Select
With Selection.Font
    .ThemeColor = xlThemeColorLight1
    .TintAndShade = 0
    .Underline = xlUnderlineStyleNone
    .Bold = True
End With


anz_plaene = 0
anz_gez = 0
anz_fring = 0
anz_frarc = 0
anz_frarc2 = 0
anz_freizugeben = 0
anz_baufrei = 0
stck_ges = 0
stck_baufrei = 0

For z = erste_zeile To letzte_zeile
    If Sheets("Fertigteile").Cells(z, spalte_bauteil) <> "" And Sheets("Fertigteile").Cells(z, spalte_entfallen) <> "x" Then anz_plaene = anz_plaene + 1
    If Sheets("Fertigteile").Cells(z, spalte_bauteil) <> "" And Sheets("Fertigteile").Cells(z, spalte_gez_datum) <> "" And Sheets("Fertigteile").Cells(z, spalte_entfallen) <> "x" Then anz_gez = anz_gez + 1
    If Sheets("Fertigteile").Cells(z, spalte_bauteil) <> "" And Sheets("Fertigteile").Cells(z, spalte_gez_datum) <> "" And Sheets("Fertigteile").Cells(z, spalte_entfallen) <> "x" Then stck_gez = stck_gez + Sheets("Fertigteile").Cells(z, spalte_stck_uber)
    If Sheets("Fertigteile").Cells(z, spalte_bauteil) <> "" And Sheets("Fertigteile").Cells(z, spalte_verschickt) <> "" And Sheets("Fertigteile").Cells(z, spalte_fring) = "" And Sheets("Fertigteile").Cells(z, spalte_freigabe) = "" And Sheets("Fertigteile").Cells(z, spalte_entfallen) <> "x" Then anz_fring = anz_fring + 1
    If Sheets("Fertigteile").Cells(z, spalte_bauteil) <> "" And Sheets("Fertigteile").Cells(z, spalte_verschickt) <> "" And Sheets("Fertigteile").Cells(z, spalte_frarc) = "" And Sheets("Fertigteile").Cells(z, spalte_freigabe) = "" And Sheets("Fertigteile").Cells(z, spalte_entfallen) <> "x" Then anz_frarc = anz_frarc + 1
    If Sheets("Fertigteile").Cells(z, spalte_bauteil) <> "" And Sheets("Fertigteile").Cells(z, spalte_verschickt) <> "" And Sheets("Fertigteile").Cells(z, spalte_frarc + 2) = "" And Sheets("Fertigteile").Cells(z, spalte_freigabe) = "" And Sheets("Fertigteile").Cells(z, spalte_entfallen) <> "x" Then anz_frarc2 = anz_frarc2 + 1
    If Sheets("Fertigteile").Cells(z, spalte_bauteil) <> "" And Sheets("Fertigteile").Cells(z, spalte_verschickt) <> "" And Sheets("Fertigteile").Cells(z, spalte_fring) <> "" And Sheets("Fertigteile").Cells(z, spalte_frarc) <> "" And Sheets("Fertigteile").Cells(z, spalte_freigabe) = "" And Sheets("Fertigteile").Cells(z, spalte_entfallen) <> "x" Then anz_freizugeben = anz_freizugeben + 1
    If Sheets("Fertigteile").Cells(z, spalte_bauteil) <> "" And Sheets("Fertigteile").Cells(z, spalte_freigabe) <> "" And Sheets("Fertigteile").Cells(z, spalte_entfallen) <> "x" Then anz_baufrei = anz_baufrei + 1
    If Sheets("Fertigteile").Cells(z, spalte_bauteil) <> "" And Sheets("Fertigteile").Cells(z, spalte_entfallen) <> "x" Then stck_ges = stck_ges + Sheets("Fertigteile").Cells(z, spalte_stck_uber)
    If Sheets("Fertigteile").Cells(z, spalte_bauteil) <> "" And Sheets("Fertigteile").Cells(z, spalte_freigabe) <> "" And Sheets("Fertigteile").Cells(z, spalte_entfallen) <> "x" Then stck_baufrei = stck_baufrei + Sheets("Fertigteile").Cells(z, spalte_stck_uber)
Next

zeile_link = 2

Sheets("Fertigteile").Cells(zeile_link, spalte_verschickt) = "Im Pr|fffd|flauf bei " & Replace(Cells(erste_zeile - 1, spalte_fring), "von ", "") & ":"
Sheets("Fertigteile").Cells(zeile_link, spalte_frarc) = anz_fring
zeile_link = zeile_link + 1
Sheets("Fertigteile").Cells(zeile_link, spalte_verschickt) = "Im Pr|fffd|flauf bei " & Replace(Cells(erste_zeile - 1, spalte_frarc), "von ", "") & ":"
Sheets("Fertigteile").Cells(zeile_link, spalte_frarc) = anz_frarc
zeile_link = zeile_link + 1
Sheets("Fertigteile").Cells(zeile_link, spalte_verschickt) = "Im Pr|fffd|flauf bei " & Replace(Cells(erste_zeile - 1, spalte_frarc + 2), "von ", "") & ":"
Sheets("Fertigteile").Cells(zeile_link, spalte_frarc) = anz_frarc2
zeile_link = zeile_link + 1
Sheets("Fertigteile").Cells(zeile_link, spalte_verschickt) = "Freigaben m|fffd|glich:"
Sheets("Fertigteile").Cells(zeile_link, spalte_frarc) = anz_freizugeben
zeile_link = zeile_link + 1
zeile_link = zeile_link + 1
Sheets("Fertigteile").Cells(zeile_link, spalte_verschickt) = "Pl. freigegeben / verschickt:"
Sheets("Fertigteile").Cells(zeile_link, spalte_frarc) = anz_baufrei
Sheets("Fertigteile").Cells(zeile_link, spalte_aend_arc) = "von"
Sheets("Fertigteile").Cells(zeile_link, spalte_freigabe) = anz_gez
Sheets("Fertigteile").Cells(zeile_link, spalte_entfallen) = "=" & spaltenname_frarc & zeile_link & "/R" & zeile_link
zeile_link = zeile_link + 1
Sheets("Fertigteile").Cells(zeile_link, spalte_verschickt) = "Pl. freigegeben / gesamt:"
Sheets("Fertigteile").Cells(zeile_link, spalte_frarc) = anz_baufrei
Sheets("Fertigteile").Cells(zeile_link, spalte_aend_arc) = "von"
Sheets("Fertigteile").Cells(zeile_link, spalte_freigabe) = anz_plaene
Sheets("Fertigteile").Cells(zeile_link, spalte_entfallen) = "=" & spaltenname_frarc & zeile_link & "/R" & zeile_link
zeile_link = zeile_link + 1
zeile_link = zeile_link + 1
Sheets("Fertigteile").Cells(zeile_link, spalte_verschickt) = "St|fffd|ck gezeichnet / gesamt:"
Sheets("Fertigteile").Cells(zeile_link, spalte_frarc) = stck_gez
Sheets("Fertigteile").Cells(zeile_link, spalte_aend_arc) = "von"
Sheets("Fertigteile").Cells(zeile_link, spalte_freigabe) = stck_ges
Sheets("Fertigteile").Cells(zeile_link, spalte_entfallen) = "=" & spaltenname_frarc & zeile_link & "/R" & zeile_link
zeile_link = zeile_link + 1
Sheets("Fertigteile").Cells(zeile_link, spalte_verschickt) = "St|fffd|ck freigegeben / gesamt:"
Sheets("Fertigteile").Cells(zeile_link, spalte_frarc) = stck_baufrei
Sheets("Fertigteile").Cells(zeile_link, spalte_aend_arc) = "von"
Sheets("Fertigteile").Cells(zeile_link, spalte_freigabe) = stck_ges
Sheets("Fertigteile").Cells(zeile_link, spalte_entfallen) = "=" & spaltenname_frarc & zeile_link & "/R" & zeile_link
zeile_link = zeile_link + 1
zeile_link = zeile_link + 1
warnung_count = 0
For z = erste_zeile To letzte_zeile
    If Sheets("Fertigteile").Cells(z, spalte_stck_plan) <> "" And Sheets("Fertigteile").Cells(z, spalte_stck_uber) <> "" And Sheets("Fertigteile").Cells(z, spalte_stck_plan) <> Sheets("Fertigteile").Cells(z, spalte_stck_uber) Then warnung_count = warnung_count + 1
Next
If warnung_count > 0 Then
Sheets("Fertigteile").Cells(zeile_link, spalte_verschickt) = "Es gibt " & warnung_count & " St|fffd|ckzahlwarnung(en)!"
    Range(spaltenname_verschickt & zeile_link).Select
    Selection.Font.ColorIndex = 3
    Selection.Font.Bold = True

End If

erfolg = "ja"
ERROREXIT:
If erfolg <> "ja" Then MsgBox "Es gab einen Fehler!", vbCritical, "Hyperlinks und Auswertung aktualisieren"

Calculate

If Sheets(1).PageSetup.CenterHeader <> Sheets("Konfiguration").Range("F5") Then
    For Each Worksheet In ActiveWorkbook.Worksheets
        With Worksheet.PageSetup
                .CenterHeader = Sheets("Konfiguration").Range("F5")
                .RightHeader = ""
        End With
    Next Worksheet
End If
    
'Planhistorie ausblenden
letzte_zeile = Sheets("Fertigteile").Cells(Rows.Count, spalte_index).End(xlUp).Row
If letzte_zeile <= erste_zeile Then letzte_zeile = erste_zeile + 1

For i = erste_zeile To letzte_zeile

    If Sheets("Fertigteile").Cells(i, spalte_bauteil) = "" And Sheets("Fertigteile").Cells(i, spalte_index) <> "" Then Sheets("Fertigteile").Rows(i).EntireRow.Hidden = True

Next

Application.ScreenUpdating = True

    Range("C1:I1").Select
    Selection.Font.ColorIndex = 3
    Selection.Font.Bold = True
    Selection.HorizontalAlignment = xlLeft
    
    Range("I1").Select
    Selection.HorizontalAlignment = xlRight
        
Sheets("Fertigteile").Cells(1, 3) = "Letzte Aktualisierung:"
Sheets("Fertigteile").Cells(1, 9) = Date & " / " & Format(Time, "hh:mm") & " Uhr"

Sheets("Fertigteile").Cells(1, 1).Select

End Sub
Sub refresh_prfx()

Application.ScreenUpdating = False

'On Error GoTo ERROREXIT

If Not Sheets("Fertigteile").Visible = True Then
    'MsgBox "Fertigteile sind ausgeblendet!", vbCritical, "Hyperlinks und Auswertung aktualisieren"
    Exit Sub
End If

Dim spalte_bauteil As Long
Dim spalte_gez_datum As Long
Dim spalte_zeichner As Long
Dim spalte_index As Long
Dim spalte_sffx As Long
Dim spalte_stck_plan As Long
Dim spalte_stck_uber As Long
Dim spalte_verschickt As Long
Dim spalte_inhalt As Long
Dim spalte_fring As Long
Dim spalte_frarc As Long
Dim spalte_aend_arc As Long
Dim spalte_freigabe As Long
Dim spalte_entfallen As Long
Dim anz_plaene As Integer
Dim anz_gez As Integer
Dim anz_fring As Integer
Dim anz_frarc As Integer
Dim anz_freizugeben As Integer
Dim anz_baufrei As Integer
Dim stck_ges As Integer
Dim stck_baufrei As Integer
Dim check_zeile As String
Dim bsp_typ As String
Dim trz_nr As String
Dim bsp_nr As String
Dim vari As Integer
Dim baut As String
Dim typ_baut As String
Dim nr_baut As String
Dim warnung_count As Integer
Dim anz_prfx As Integer
Dim vor_prfx As String

erste_zeile = Sheets("Konfiguration").Cells(59, 23)
spalte_prfx = Sheets("Konfiguration").Cells(59, 17)
spalte_bauteil = Sheets("Konfiguration").Cells(60, 17)
spaltenname_bauteil = spBuchstabe(spalte_bauteil)
spalte_index = Sheets("Konfiguration").Cells(61, 17)
spalte_sffx = Sheets("Konfiguration").Cells(62, 17)
spalte_gez_datum = Sheets("Konfiguration").Cells(63, 17)
spalte_zeichner = Sheets("Konfiguration").Cells(64, 17)
spaltenname_zeichner = spBuchstabe(spalte_zeichner)
spalte_stck_plan = Sheets("Konfiguration").Cells(65, 17)
spalte_stck_uber = Sheets("Konfiguration").Cells(66, 17)
spaltenname_stck_uber = spBuchstabe(spalte_stck_uber)
spalte_inhalt = Sheets("Konfiguration").Cells(67, 17)
spalte_verschickt = Sheets("Konfiguration").Cells(68, 17)
spaltenname_verschickt = spBuchstabe(spalte_verschickt)
spalte_fring = Sheets("Konfiguration").Cells(69, 17)
spalte_frarc = Sheets("Konfiguration").Cells(70, 17)
spaltenname_frarc = spBuchstabe(spalte_frarc)
spalte_aend_arc = Sheets("Konfiguration").Cells(70, 17) + 1
spalte_freigabe = Sheets("Konfiguration").Cells(71, 17)
spaltenname_freigabe = spBuchstabe(spalte_freigabe)
spalte_entfallen = Sheets("Konfiguration").Cells(72, 17)
bsp_typ = Sheets("Konfiguration").Cells(33, 3)
trz_nr = Sheets("Konfiguration").Cells(33, 4)
bsp_nr = Sheets("Konfiguration").Cells(34, 3)

'Planhistorie einblenden
letzte_zeile = Sheets("Fertigteile").Cells(Rows.Count, spalte_index).End(xlUp).Row + 100
If letzte_zeile <= erste_zeile Then letzte_zeile = erste_zeile + 1

For i = erste_zeile To letzte_zeile

    Sheets("Fertigteile").Rows(i).EntireRow.Hidden = False

Next

letzte_zeile = Sheets("Fertigteile").UsedRange.Rows.Count
If letzte_zeile <= erste_zeile Then letzte_zeile = erste_zeile + 1

vari = 0
For i = 33 To 34
 If Sheets("Konfiguration").Cells(i, 5) = "x" Then vari = i - 32
Next

zeile_konf = 10
zeile_link = 2
treffer_erste_zeile = ""
treffer_letzte_zeile = ""
stck_baufrei = 0
stck_ges = 0
check_zeile = "leer"
spalte_start = 3

vor_prfx = ""
anz_prfx = 0

For i = erste_zeile To letzte_zeile + 1
    If ThisWorkbook.Sheets("Fertigteile").Cells(i, spalte_prfx) <> "" Then
        If ThisWorkbook.Sheets("Fertigteile").Cells(i, spalte_prfx) <> vor_prfx Then
            vor_prfx = ThisWorkbook.Sheets("Fertigteile").Cells(i, spalte_prfx)
            anz_prfx = anz_prfx + 1
        End If
    End If
Next

'MsgBox anz_prfx

For S = spalte_prfx To spalte_entfallen
    If Sheets("Fertigteile").Cells(erste_zeile, S) <> "" Then check_zeile = "voll"
Next

Sheets("Fertigteile").Select
If check_zeile = "voll" Then
    Rows(erste_zeile).Select
    Selection.Insert Shift:=xlDown, CopyOrigin:=xlFormatFromLeftOrAbove
    Rows(erste_zeile).Select
    Selection.RowHeight = 12.75
    Rows(erste_zeile + 1).Select
    Selection.Copy
    Rows(erste_zeile).Select
    Selection.PasteSpecial Paste:=xlPasteFormats, Operation:=xlNone, _
        SkipBlanks:=False, Transpose:=False
    Application.CutCopyMode = False
    check_zeile = "leer"
End If

For z = erste_zeile To letzte_zeile
    If Sheets("Fertigteile").Cells(z, spalte_bauteil) <> "" Then
        check_zeile = "leer"
        baut = Sheets("Fertigteile").Cells(z, spalte_bauteil)
        typ_baut = Left(baut, Len(bsp_typ))
        nr_baut = Right(baut, Len(bsp_nr))
        
        If vari = 1 Then
            typ_baut = Replace(baut, Right(baut, Len(trz_nr & bsp_nr)), "")
        End If
        If vari = 2 Then
            nr_baut = Replace(baut, Left(baut, Len(bsp_typ & trz_nr)), "")
        End If
        
        For S = spalte_prfx To spalte_entfallen
            If Sheets("Fertigteile").Cells(z - 1, S) <> "" Then check_zeile = "voll"
        Next
        
        If check_zeile = "leer" Then
            If typ_baut & trz_nr = Left(Sheets("Fertigteile").Cells(z - 2, spalte_bauteil), Len(typ_baut) + Len(trz_nr)) And IsNumeric(nr_baut) And Len(nr_baut) > 2 And Val(nr_baut) - Val(Right(Cells(z - 2, spalte_bauteil), Len(nr_baut))) = 1 Then
                Rows(z - 1 & ":" & z - 1).Select
                Selection.Delete Shift:=xlUp
                z = z - 1
            End If
        Else
            If Sheets("Fertigteile").Cells(z - 1, spalte_bauteil) <> "" Then
                If typ_baut & trz_nr <> Left(Sheets("Fertigteile").Cells(z - 1, spalte_bauteil), Len(typ_baut) + Len(trz_nr)) Or IsNumeric(nr_baut) And Len(nr_baut) > 2 And Val(nr_baut) - Val(Right(Cells(z - 1, spalte_bauteil), Len(nr_baut))) <> 1 Then
                    Rows(z).Select
                    Selection.Insert Shift:=xlDown, CopyOrigin:=xlFormatFromLeftOrAbove
                    Rows(z).Select
                    Selection.RowHeight = 12.75
                    Rows(z + 1).Select
                    Selection.Copy
                    Rows(z).Select
                    Selection.PasteSpecial Paste:=xlPasteFormats, Operation:=xlNone, _
                    SkipBlanks:=False, Transpose:=False
                    Application.CutCopyMode = False
                    z = z + 1
                    letzte_zeile = letzte_zeile + 1
                    check_zeile = "leer"
                End If
            End If
        End If
    End If
Next

Dim lange As Integer
Dim spl() As String

For z = zeile_link To zeile_link + 10
    For S = spalte_bauteil To spalte_entfallen
        Sheets("Fertigteile").Cells(z, S) = ""
    Next
Next

letzte_zeile = Sheets("Fertigteile").Cells(Rows.Count, spalte_bauteil).End(xlUp).Row
If letzte_zeile <= erste_zeile Then letzte_zeile = erste_zeile + 1

'MsgBox "Letzte Zeile: " & letzte_zeile

For z = erste_zeile To letzte_zeile
    If Sheets("Fertigteile").Cells(z, spalte_entfallen) = "x" Then
        If Sheets("Fertigteile").Cells(z, spalte_gez_datum) = "" Then Sheets("Fertigteile").Cells(z, spalte_gez_datum) = "entf."
        If Sheets("Fertigteile").Cells(z, spalte_verschickt) = "" Then Sheets("Fertigteile").Cells(z, spalte_verschickt) = "entf."
        Sheets("Fertigteile").Cells(z, spalte_stck_uber) = ""
        If Sheets("Fertigteile").Cells(z, spalte_fring) = "" Then Sheets("Fertigteile").Cells(z, spalte_fring) = "entf."
        If Sheets("Fertigteile").Cells(z, spalte_frarc) = "" Then Sheets("Fertigteile").Cells(z, spalte_frarc) = "entf."
        If Sheets("Fertigteile").Cells(z, spalte_freigabe) = "" Then Sheets("Fertigteile").Cells(z, spalte_freigabe) = "entf."
    End If
Next


Do
    bez_1 = ""
    bez_2 = ""
    bez_3 = ""
    bez_4 = ""
    bez_5 = ""
    typ = ""
    
    anz_plaene = 0
    anz_gez = 0
    
    treffer_erste_zeile = ""
    treffer_letzte_zeile = ""
    
        If Sheets("Konfiguration").Cells(zeile_konf, 4) = "" Then GoTo SHORTCUT
        
        For st = 1 To Len(Sheets("Konfiguration").Cells(zeile_konf, 4))
            If Mid(Sheets("Konfiguration").Cells(zeile_konf, 4), st, 1) <> "," Then bez_1 = Sheets("Konfiguration").Cells(zeile_konf, 4)
        Next
    
        For st = 1 To Len(Sheets("Konfiguration").Cells(zeile_konf, 4))
            If Mid(Sheets("Konfiguration").Cells(zeile_konf, 4), st, 1) = "," Then
                spl() = Split(Replace(Sheets("Konfiguration").Cells(zeile_konf, 4), " ", ""), ",")
                    For j = LBound(spl) To UBound(spl)
                        If j = 0 Then bez_1 = spl(j)
                        If j = 1 Then bez_2 = spl(j)
                        If j = 2 Then bez_3 = spl(j)
                        If j = 3 Then bez_4 = spl(j)
                        If j = 4 Then bez_5 = spl(j)
                    Next
            End If
        Next
    
        typ = Sheets("Konfiguration").Cells(zeile_konf, 2)
        i = erste_zeile
        
        Do
        
            Do
                If Sheets("Fertigteile").Cells(i, spalte_bauteil) <> "" Then
                    If bez_1 & trz_nr = Left(Sheets("Fertigteile").Cells(i, spalte_bauteil), Len(bez_1) + Len(trz_nr)) And bez_1 <> "" _
                    Or bez_2 & trz_nr = Left(Sheets("Fertigteile").Cells(i, spalte_bauteil), Len(bez_2) + Len(trz_nr)) And bez_2 <> "" _
                    Or bez_3 & trz_nr = Left(Sheets("Fertigteile").Cells(i, spalte_bauteil), Len(bez_3) + Len(trz_nr)) And bez_3 <> "" _
                    Or bez_4 & trz_nr = Left(Sheets("Fertigteile").Cells(i, spalte_bauteil), Len(bez_4) + Len(trz_nr)) And bez_4 <> "" _
                    Or bez_5 & trz_nr = Left(Sheets("Fertigteile").Cells(i, spalte_bauteil), Len(bez_5) + Len(trz_nr)) And bez_5 <> "" _
                    Then treffer_erste_zeile = i
                    prfx = Sheets("Fertigteile").Cells(i, spalte_prfx)
                    If treffer_erste_zeile <> "" Then Exit Do
                End If
                i = i + 1
            Loop Until i > letzte_zeile
            
            'MsgBox "i=" & i & " | " & typ & " | " & treffer_erste_zeile & " = ANFANG"
            
            If treffer_erste_zeile <> "" Then
                'i = treffer_erste_zeile
                Do
                    If Sheets("Fertigteile").Cells(i, spalte_bauteil) <> "" Then
                        If bez_1 & trz_nr = Left(Sheets("Fertigteile").Cells(i, spalte_bauteil), Len(bez_1) + Len(trz_nr)) And bez_1 <> "" _
                        Or bez_2 & trz_nr = Left(Sheets("Fertigteile").Cells(i, spalte_bauteil), Len(bez_2) + Len(trz_nr)) And bez_2 <> "" _
                        Or bez_3 & trz_nr = Left(Sheets("Fertigteile").Cells(i, spalte_bauteil), Len(bez_3) + Len(trz_nr)) And bez_3 <> "" _
                        Or bez_4 & trz_nr = Left(Sheets("Fertigteile").Cells(i, spalte_bauteil), Len(bez_4) + Len(trz_nr)) And bez_4 <> "" _
                        Or bez_5 & trz_nr = Left(Sheets("Fertigteile").Cells(i, spalte_bauteil), Len(bez_5) + Len(trz_nr)) And bez_5 <> "" _
                        Then treffer_letzte_zeile = i
                End If
                    
                    i = i + 1
                
                Loop Until Sheets("Fertigteile").Cells(i, spalte_bauteil) <> "" And bez_1 & trz_nr <> Left(Sheets("Fertigteile").Cells(i, spalte_bauteil), Len(bez_1) + Len(trz_nr)) And bez_1 <> "" Or _
                            Sheets("Fertigteile").Cells(i, spalte_bauteil) <> "" And bez_2 & trz_nr <> Left(Sheets("Fertigteile").Cells(i, spalte_bauteil), Len(bez_2) + Len(trz_nr)) And bez_2 <> "" Or _
                            Sheets("Fertigteile").Cells(i, spalte_bauteil) <> "" And bez_3 & trz_nr <> Left(Sheets("Fertigteile").Cells(i, spalte_bauteil), Len(bez_3) + Len(trz_nr)) And bez_3 <> "" Or _
                            Sheets("Fertigteile").Cells(i, spalte_bauteil) <> "" And bez_4 & trz_nr <> Left(Sheets("Fertigteile").Cells(i, spalte_bauteil), Len(bez_4) + Len(trz_nr)) And bez_4 <> "" Or _
                            Sheets("Fertigteile").Cells(i, spalte_bauteil) <> "" And bez_5 & trz_nr <> Left(Sheets("Fertigteile").Cells(i, spalte_bauteil), Len(bez_5) + Len(trz_nr)) And bez_5 <> "" Or _
                            i > letzte_zeile
                'MsgBox "i=" & i & " | " & typ & " | " & "VON: " & treffer_erste_zeile & " BIS: " & treffer_letzte_zeile
                For z = treffer_erste_zeile To treffer_letzte_zeile
                    'MsgBox typ & " | " & z
                    If Sheets("Fertigteile").Cells(z, spalte_bauteil) <> "" And Sheets("Fertigteile").Cells(z, spalte_entfallen) <> "x" Then anz_plaene = anz_plaene + 1
                    If Sheets("Fertigteile").Cells(z, spalte_bauteil) <> "" And Sheets("Fertigteile").Cells(z, spalte_gez_datum) <> "" And Sheets("Fertigteile").Cells(z, spalte_entfallen) <> "x" Then anz_gez = anz_gez + 1
                Next
                treffer_erste_zeile = ""
                treffer_letze_zeile = ""
            End If
            
            'MsgBox "i=" & i & " | " & typ & " | " & treffer_letzte_zeile & " = ENDE"
            'MsgBox "i=" & i & " | " & typ & " | " & anz_plaene & " Pl|fffd|ne"
        
        Loop Until i > letzte_zeile
        
        If anz_plaene <> 0 Then
            Sheets("Fertigteile").Cells(zeile_link, spalte_start) = typ
            Sheets("Fertigteile").Cells(zeile_link, spalte_start).Select
            With Selection.Font
                .ThemeColor = xlThemeColorLight1
                .TintAndShade = 0
            End With
            Selection.Font.Underline = xlUnderlineStyleNone
            Selection.Font.Bold = True
    
            Sheets("Fertigteile").Cells(zeile_link, spalte_start + 3) = "=" & spaltenname_zeichner & zeile_link & "/" & spaltenname_stck_uber & zeile_link
            Sheets("Fertigteile").Cells(zeile_link, spalte_start + 4) = anz_gez
            Sheets("Fertigteile").Cells(zeile_link, spalte_start + 5) = "von"
            Sheets("Fertigteile").Cells(zeile_link, spalte_start + 6) = anz_plaene
            
            zeile_link = zeile_link + 1
        End If
SHORTCUT:

    zeile_konf = zeile_konf + 1

Loop Until zeile_konf = 26

Sheets("Fertigteile").Cells(15, spalte_bauteil) = "Gezeichnet:"
Sheets("Fertigteile").Cells(15, spalte_gez_datum) = "=" & spaltenname_zeichner & "15/" & spaltenname_stck_uber & "15"
Sheets("Fertigteile").Cells(15, spalte_zeichner) = "=SUM(" & spaltenname_zeichner & "2:" & spaltenname_zeichner & "14)"
Sheets("Fertigteile").Cells(15, spalte_stck_plan) = "von"
Sheets("Fertigteile").Cells(15, spalte_stck_uber) = "=SUM(" & spaltenname_stck_uber & "2:" & spaltenname_stck_uber & "14)"

anz_plaene = 0
anz_gez = 0
anz_fring = 0
anz_frarc = 0
anz_freizugeben = 0
anz_baufrei = 0
stck_ges = 0
stck_baufrei = 0

For z = erste_zeile To letzte_zeile
    If Sheets("Fertigteile").Cells(z, spalte_bauteil) <> "" And Sheets("Fertigteile").Cells(z, spalte_entfallen) <> "x" Then anz_plaene = anz_plaene + 1
    If Sheets("Fertigteile").Cells(z, spalte_bauteil) <> "" And Sheets("Fertigteile").Cells(z, spalte_gez_datum) <> "" And Sheets("Fertigteile").Cells(z, spalte_entfallen) <> "x" Then anz_gez = anz_gez + 1
    If Sheets("Fertigteile").Cells(z, spalte_bauteil) <> "" And Sheets("Fertigteile").Cells(z, spalte_verschickt) <> "" And Sheets("Fertigteile").Cells(z, spalte_fring) = "" And Sheets("Fertigteile").Cells(z, spalte_freigabe) = "" And Sheets("Fertigteile").Cells(z, spalte_entfallen) <> "x" Then anz_fring = anz_fring + 1
    If Sheets("Fertigteile").Cells(z, spalte_bauteil) <> "" And Sheets("Fertigteile").Cells(z, spalte_verschickt) <> "" And Sheets("Fertigteile").Cells(z, spalte_frarc) = "" And Sheets("Fertigteile").Cells(z, spalte_freigabe) = "" And Sheets("Fertigteile").Cells(z, spalte_entfallen) <> "x" Then anz_frarc = anz_frarc + 1
    If Sheets("Fertigteile").Cells(z, spalte_bauteil) <> "" And Sheets("Fertigteile").Cells(z, spalte_verschickt) <> "" And Sheets("Fertigteile").Cells(z, spalte_fring) <> "" And Sheets("Fertigteile").Cells(z, spalte_frarc) <> "" And Sheets("Fertigteile").Cells(z, spalte_freigabe) = "" And Sheets("Fertigteile").Cells(z, spalte_entfallen) <> "x" Then anz_freizugeben = anz_freizugeben + 1
    If Sheets("Fertigteile").Cells(z, spalte_bauteil) <> "" And Sheets("Fertigteile").Cells(z, spalte_freigabe) <> "" And Sheets("Fertigteile").Cells(z, spalte_entfallen) <> "x" Then anz_baufrei = anz_baufrei + 1
    If Sheets("Fertigteile").Cells(z, spalte_bauteil) <> "" And Sheets("Fertigteile").Cells(z, spalte_entfallen) <> "x" Then stck_ges = stck_ges + Sheets("Fertigteile").Cells(z, spalte_stck_uber)
    If Sheets("Fertigteile").Cells(z, spalte_bauteil) <> "" And Sheets("Fertigteile").Cells(z, spalte_freigabe) <> "" And Sheets("Fertigteile").Cells(z, spalte_entfallen) <> "x" Then stck_baufrei = stck_baufrei + Sheets("Fertigteile").Cells(z, spalte_stck_uber)
Next

zeile_link = 2

Sheets("Fertigteile").Cells(zeile_link, spalte_verschickt) = "Im Pr|fffd|flauf bei Pr|fffd|fingenieur:"
Sheets("Fertigteile").Cells(zeile_link, spalte_frarc) = anz_fring
zeile_link = zeile_link + 1
Sheets("Fertigteile").Cells(zeile_link, spalte_verschickt) = "Im Pr|fffd|flauf bei Architekt:"
Sheets("Fertigteile").Cells(zeile_link, spalte_frarc) = anz_frarc
zeile_link = zeile_link + 1
Sheets("Fertigteile").Cells(zeile_link, spalte_verschickt) = "Freigaben m|fffd|glich:"
Sheets("Fertigteile").Cells(zeile_link, spalte_frarc) = anz_freizugeben
zeile_link = zeile_link + 1
zeile_link = zeile_link + 1
Sheets("Fertigteile").Cells(zeile_link, spalte_verschickt) = "Freigegeben / verschickt:"
Sheets("Fertigteile").Cells(zeile_link, spalte_frarc) = anz_baufrei
Sheets("Fertigteile").Cells(zeile_link, spalte_aend_arc) = "von"
Sheets("Fertigteile").Cells(zeile_link, spalte_freigabe) = anz_gez
Sheets("Fertigteile").Cells(zeile_link, spalte_entfallen) = "=" & spaltenname_frarc & zeile_link & "/" & spaltenname_freigabe & zeile_link
zeile_link = zeile_link + 1
Sheets("Fertigteile").Cells(zeile_link, spalte_verschickt) = "Freigegeben / gesamt:"
Sheets("Fertigteile").Cells(zeile_link, spalte_frarc) = anz_baufrei
Sheets("Fertigteile").Cells(zeile_link, spalte_aend_arc) = "von"
Sheets("Fertigteile").Cells(zeile_link, spalte_freigabe) = anz_plaene
Sheets("Fertigteile").Cells(zeile_link, spalte_entfallen) = "=" & spaltenname_frarc & zeile_link & "/" & spaltenname_freigabe & zeile_link
zeile_link = zeile_link + 1
zeile_link = zeile_link + 1
Sheets("Fertigteile").Cells(zeile_link, spalte_verschickt) = "St|fffd|ck freigegeben / gesamt:"
Sheets("Fertigteile").Cells(zeile_link, spalte_frarc) = stck_baufrei
Sheets("Fertigteile").Cells(zeile_link, spalte_aend_arc) = "von"
Sheets("Fertigteile").Cells(zeile_link, spalte_freigabe) = stck_ges
Sheets("Fertigteile").Cells(zeile_link, spalte_entfallen) = "=" & spaltenname_frarc & zeile_link & "/" & spaltenname_freigabe & zeile_link
zeile_link = zeile_link + 1
zeile_link = zeile_link + 1
warnung_count = 0
For z = erste_zeile To letzte_zeile
    If Sheets("Fertigteile").Cells(z, spalte_stck_plan) <> "" And Sheets("Fertigteile").Cells(z, spalte_stck_uber) <> "" And Sheets("Fertigteile").Cells(z, spalte_stck_plan) <> Sheets("Fertigteile").Cells(z, spalte_stck_uber) Then warnung_count = warnung_count + 1
Next
If warnung_count > 0 Then
Sheets("Fertigteile").Cells(zeile_link, spalte_verschickt) = "Es gibt " & warnung_count & " St|fffd|ckzahlwarnung(en)!"
    Range(spaltenname_verschickt & zeile_link).Select
    Selection.Font.ColorIndex = 3
    Selection.Font.Bold = True

End If

erfolg = "ja"
ERROREXIT:
If erfolg <> "ja" Then MsgBox "Es gab einen Fehler!", vbCritical, "Hyperlinks und Auswertung aktualisieren"

Calculate

If Sheets(1).PageSetup.CenterHeader <> Sheets("Konfiguration").Range("F5") Then
    For Each Worksheet In ActiveWorkbook.Worksheets
        With Worksheet.PageSetup
                .CenterHeader = Sheets("Konfiguration").Range("F5")
                .RightHeader = ""
        End With
    Next Worksheet
End If
    
'Planhistorie ausblenden
letzte_zeile = Sheets("Fertigteile").Cells(Rows.Count, spalte_index).End(xlUp).Row
If letzte_zeile <= erste_zeile Then letzte_zeile = erste_zeile + 1

For i = erste_zeile To letzte_zeile

    If Sheets("Fertigteile").Cells(i, spalte_bauteil) = "" And Sheets("Fertigteile").Cells(i, spalte_index) <> "" Then Sheets("Fertigteile").Rows(i).EntireRow.Hidden = True

Next

Application.ScreenUpdating = True

    Range("C1:I1").Select
    Selection.Font.ColorIndex = 3
    Selection.Font.Bold = True
    Selection.HorizontalAlignment = xlLeft
    
    Range("I1").Select
    Selection.HorizontalAlignment = xlRight
        
Sheets("Fertigteile").Cells(1, 3) = "Letzte Aktualisierung:"
Sheets("Fertigteile").Cells(1, 9) = Date & " / " & Format(Time, "hh:mm") & " Uhr"

Sheets("Fertigteile").Cells(1, 1).Select

End Sub

Sub refresh_alt()

Application.ScreenUpdating = False

On Error GoTo ERROREXIT

If Not Sheets("Fertigteile").Visible = True Then
    'MsgBox "Fertigteile sind ausgeblendet!", vbCritical, "Hyperlinks und Auswertung aktualisieren"
    Exit Sub
End If

Dim spalte_bauteil As Long
Dim spalte_gez_datum As Long
Dim spalte_zeichner As Long
Dim spalte_index As Long
Dim spalte_sffx As Long
Dim spalte_stck_plan As Long
Dim spalte_stck_uber As Long
Dim spalte_verschickt As Long
Dim spalte_inhalt As Long
Dim spalte_fring As Long
Dim spalte_frarc As Long
Dim spalte_aend_arc As Long
Dim spalte_freigabe As Long
Dim spalte_entfallen As Long
Dim anz_plaene As Integer
Dim anz_gez As Integer
Dim anz_fring As Integer
Dim anz_frarc As Integer
Dim anz_freizugeben As Integer
Dim anz_baufrei As Integer
Dim stck_ges As Integer
Dim stck_baufrei As Integer
Dim check_zeile As String
Dim bsp_typ As String
Dim trz_nr As String
Dim bsp_nr As String
Dim vari As Integer
Dim baut As String
Dim typ_baut As String
Dim nr_baut As String
Dim warnung_count As Integer

erste_zeile = Sheets("Konfiguration").Cells(59, 23)
spalte_prfx = Sheets("Konfiguration").Cells(59, 17)
spalte_bauteil = Sheets("Konfiguration").Cells(60, 17)
spaltenname_bauteil = spBuchstabe(spalte_bauteil)
spalte_index = Sheets("Konfiguration").Cells(61, 17)
spalte_sffx = Sheets("Konfiguration").Cells(62, 17)
spalte_gez_datum = Sheets("Konfiguration").Cells(63, 17)
spalte_zeichner = Sheets("Konfiguration").Cells(64, 17)
spaltenname_zeichner = spBuchstabe(spalte_zeichner)
spalte_stck_plan = Sheets("Konfiguration").Cells(65, 17)
spalte_stck_uber = Sheets("Konfiguration").Cells(66, 17)
spaltenname_stck_uber = spBuchstabe(spalte_stck_uber)
spalte_inhalt = Sheets("Konfiguration").Cells(67, 17)
spalte_verschickt = Sheets("Konfiguration").Cells(68, 17)
spaltenname_verschickt = spBuchstabe(spalte_verschickt)
spalte_fring = Sheets("Konfiguration").Cells(69, 17)
spalte_frarc = Sheets("Konfiguration").Cells(70, 17)
spaltenname_frarc = spBuchstabe(spalte_frarc)
spalte_aend_arc = Sheets("Konfiguration").Cells(70, 17) + 1
spalte_freigabe = Sheets("Konfiguration").Cells(71, 17)
spaltenname_freigabe = spBuchstabe(spalte_freigabe)
spalte_entfallen = Sheets("Konfiguration").Cells(72, 17)
bsp_typ = Sheets("Konfiguration").Cells(33, 3)
trz_nr = Sheets("Konfiguration").Cells(33, 4)
bsp_nr = Sheets("Konfiguration").Cells(34, 3)

'Planhistorie einblenden
letzte_zeile = Sheets("Fertigteile").Cells(Rows.Count, spalte_index).End(xlUp).Row + 100
If letzte_zeile <= erste_zeile Then letzte_zeile = erste_zeile + 1

For i = erste_zeile To letzte_zeile

    Sheets("Fertigteile").Rows(i).EntireRow.Hidden = False

Next

letzte_zeile = Sheets("Fertigteile").UsedRange.Rows.Count
If letzte_zeile <= erste_zeile Then letzte_zeile = erste_zeile + 1

vari = 0
For i = 33 To 34
 If Sheets("Konfiguration").Cells(i, 5) = "x" Then vari = i - 32
Next

zeile_konf = 10
zeile_link = 2
treffer_erste_zeile = ""
treffer_letzte_zeile = ""
stck_baufrei = 0
stck_ges = 0
check_zeile = "leer"

For S = spalte_prfx To spalte_entfallen
    If Sheets("Fertigteile").Cells(erste_zeile, S) <> "" Then check_zeile = "voll"
Next

Sheets("Fertigteile").Select
If check_zeile = "voll" Then
    Rows(erste_zeile).Select
    Selection.Insert Shift:=xlDown, CopyOrigin:=xlFormatFromLeftOrAbove
    Rows(erste_zeile).Select
    Selection.RowHeight = 12.75
    Rows(erste_zeile + 1).Select
    Selection.Copy
    Rows(erste_zeile).Select
    Selection.PasteSpecial Paste:=xlPasteFormats, Operation:=xlNone, _
        SkipBlanks:=False, Transpose:=False
    Application.CutCopyMode = False
    check_zeile = "leer"
End If

For z = erste_zeile To letzte_zeile
    If Sheets("Fertigteile").Cells(z, spalte_bauteil) <> "" Then
        check_zeile = "leer"
        baut = Sheets("Fertigteile").Cells(z, spalte_bauteil)
        typ_baut = Left(baut, Len(bsp_typ))
        nr_baut = Right(baut, Len(bsp_nr))
        
        If vari = 1 Then
            typ_baut = Replace(baut, Right(baut, Len(trz_nr & bsp_nr)), "")
        End If
        If vari = 2 Then
            nr_baut = Replace(baut, Left(baut, Len(bsp_typ & trz_nr)), "")
        End If
        
        For S = spalte_prfx To spalte_entfallen
            If Sheets("Fertigteile").Cells(z - 1, S) <> "" Then check_zeile = "voll"
        Next
        
        If check_zeile = "leer" Then
            If typ_baut & trz_nr = Left(Sheets("Fertigteile").Cells(z - 2, spalte_bauteil), Len(typ_baut) + Len(trz_nr)) And IsNumeric(nr_baut) And Len(nr_baut) > 2 And Val(nr_baut) - Val(Right(Cells(z - 2, spalte_bauteil), Len(nr_baut))) = 1 Then
                Rows(z - 1 & ":" & z - 1).Select
                Selection.Delete Shift:=xlUp
                z = z - 1
            End If
        Else
            If Sheets("Fertigteile").Cells(z - 1, spalte_bauteil) <> "" Then
                If typ_baut & trz_nr <> Left(Sheets("Fertigteile").Cells(z - 1, spalte_bauteil), Len(typ_baut) + Len(trz_nr)) Or IsNumeric(nr_baut) And Len(nr_baut) > 2 And Val(nr_baut) - Val(Right(Cells(z - 1, spalte_bauteil), Len(nr_baut))) <> 1 Then
                    Rows(z).Select
                    Selection.Insert Shift:=xlDown, CopyOrigin:=xlFormatFromLeftOrAbove
                    Rows(z).Select
                    Selection.RowHeight = 12.75
                    Rows(z + 1).Select
                    Selection.Copy
                    Rows(z).Select
                    Selection.PasteSpecial Paste:=xlPasteFormats, Operation:=xlNone, _
                    SkipBlanks:=False, Transpose:=False
                    Application.CutCopyMode = False
                    z = z + 1
                    letzte_zeile = letzte_zeile + 1
                    check_zeile = "leer"
                End If
            End If
        End If
    End If
Next

Dim lange As Integer
Dim spl() As String

For z = zeile_link To zeile_link + 10
    For S = spalte_bauteil To spalte_entfallen
        Sheets("Fertigteile").Cells(z, S) = ""
    Next
Next

letzte_zeile = Sheets("Fertigteile").Cells(Rows.Count, spalte_bauteil).End(xlUp).Row
If letzte_zeile <= erste_zeile Then letzte_zeile = erste_zeile + 1

For z = erste_zeile To letzte_zeile
    If Sheets("Fertigteile").Cells(z, spalte_entfallen) = "x" Then
        If Sheets("Fertigteile").Cells(z, spalte_gez_datum) = "" Then Sheets("Fertigteile").Cells(z, spalte_gez_datum) = "entf."
        If Sheets("Fertigteile").Cells(z, spalte_verschickt) = "" Then Sheets("Fertigteile").Cells(z, spalte_verschickt) = "entf."
        Sheets("Fertigteile").Cells(z, spalte_stck_uber) = ""
        If Sheets("Fertigteile").Cells(z, spalte_fring) = "" Then Sheets("Fertigteile").Cells(z, spalte_fring) = "entf."
        If Sheets("Fertigteile").Cells(z, spalte_frarc) = "" Then Sheets("Fertigteile").Cells(z, spalte_frarc) = "entf."
        If Sheets("Fertigteile").Cells(z, spalte_freigabe) = "" Then Sheets("Fertigteile").Cells(z, spalte_freigabe) = "entf."
    End If
Next


Do
    bez_1 = ""
    bez_2 = ""
    bez_3 = ""
    bez_4 = ""
    bez_5 = ""
    typ = ""
    treffer_erste_zeile = ""
    
        If Sheets("Konfiguration").Cells(zeile_konf, 4) = "" Then GoTo SHORTCUT
        
        For st = 1 To Len(Sheets("Konfiguration").Cells(zeile_konf, 4))
            If Mid(Sheets("Konfiguration").Cells(zeile_konf, 4), st, 1) <> "," Then bez_1 = Sheets("Konfiguration").Cells(zeile_konf, 4)
        Next
    
        For st = 1 To Len(Sheets("Konfiguration").Cells(zeile_konf, 4))
            If Mid(Sheets("Konfiguration").Cells(zeile_konf, 4), st, 1) = "," Then
                spl() = Split(Replace(Sheets("Konfiguration").Cells(zeile_konf, 4), " ", ""), ",")
                    For i = LBound(spl) To UBound(spl)
                        If i = 0 Then bez_1 = spl(i)
                        If i = 1 Then bez_2 = spl(i)
                        If i = 2 Then bez_3 = spl(i)
                        If i = 3 Then bez_4 = spl(i)
                        If i = 4 Then bez_5 = spl(i)
                    Next
            End If
        Next
    
        typ = Sheets("Konfiguration").Cells(zeile_konf, 2)
        i = erste_zeile
        Do
            If Sheets("Fertigteile").Cells(i, spalte_bauteil) <> "" Then
                If bez_1 & trz_nr = Left(Sheets("Fertigteile").Cells(i, spalte_bauteil), Len(bez_1) + Len(trz_nr)) And bez_1 <> "" _
                Or bez_2 & trz_nr = Left(Sheets("Fertigteile").Cells(i, spalte_bauteil), Len(bez_2) + Len(trz_nr)) And bez_2 <> "" _
                Or bez_3 & trz_nr = Left(Sheets("Fertigteile").Cells(i, spalte_bauteil), Len(bez_3) + Len(trz_nr)) And bez_3 <> "" _
                Or bez_4 & trz_nr = Left(Sheets("Fertigteile").Cells(i, spalte_bauteil), Len(bez_4) + Len(trz_nr)) And bez_4 <> "" _
                Or bez_5 & trz_nr = Left(Sheets("Fertigteile").Cells(i, spalte_bauteil), Len(bez_5) + Len(trz_nr)) And bez_5 <> "" _
                Then treffer_erste_zeile = i
                If treffer_erste_zeile <> "" Then Exit Do
            End If
            i = i + 1
        Loop Until i > letzte_zeile
        
        If treffer_erste_zeile = "" Then
            Else
            Do
                If Sheets("Fertigteile").Cells(i, spalte_bauteil) <> "" Then
                    If bez_1 & trz_nr = Left(Sheets("Fertigteile").Cells(i, spalte_bauteil), Len(bez_1) + Len(trz_nr)) And bez_1 <> "" _
                    Or bez_2 & trz_nr = Left(Sheets("Fertigteile").Cells(i, spalte_bauteil), Len(bez_2) + Len(trz_nr)) And bez_2 <> "" _
                    Or bez_3 & trz_nr = Left(Sheets("Fertigteile").Cells(i, spalte_bauteil), Len(bez_3) + Len(trz_nr)) And bez_3 <> "" _
                    Or bez_4 & trz_nr = Left(Sheets("Fertigteile").Cells(i, spalte_bauteil), Len(bez_4) + Len(trz_nr)) And bez_4 <> "" _
                    Or bez_5 & trz_nr = Left(Sheets("Fertigteile").Cells(i, spalte_bauteil), Len(bez_5) + Len(trz_nr)) And bez_5 <> "" _
                    Then treffer_letzte_zeile = i
                End If
                i = i + 1
            Loop Until i > letzte_zeile
        End If
        
        If treffer_erste_zeile <> "" Then
            Sheets("Fertigteile").Cells(zeile_link, 3) = typ
            range_typ = spaltenname_bauteil & zeile_link
            Sheets("Fertigteile").Select
            Range(range_typ).Select
            activeSheet.Hyperlinks.Add Anchor:=Selection, Address:="", SubAddress:="Fertigteile!" & spaltenname_bauteil & treffer_erste_zeile, TextToDisplay:=typ
            Selection.Font.Bold = True
            
            anz_plaene = 0
            anz_gez = 0
            
            For z = treffer_erste_zeile To treffer_letzte_zeile
                If Sheets("Fertigteile").Cells(z, spalte_bauteil) <> "" And Sheets("Fertigteile").Cells(z, spalte_entfallen) <> "x" Then anz_plaene = anz_plaene + 1
                If Sheets("Fertigteile").Cells(z, spalte_bauteil) <> "" And Sheets("Fertigteile").Cells(z, spalte_gez_datum) <> "" And Sheets("Fertigteile").Cells(z, spalte_entfallen) <> "x" Then anz_gez = anz_gez + 1
            Next
            
            Sheets("Fertigteile").Cells(zeile_link, spalte_gez_datum) = "=" & spaltenname_zeichner & zeile_link & "/" & spaltenname_stck_uber & zeile_link
            Sheets("Fertigteile").Cells(zeile_link, spalte_zeichner) = anz_gez
            Sheets("Fertigteile").Cells(zeile_link, spalte_stck_plan) = "von"
            Sheets("Fertigteile").Cells(zeile_link, spalte_stck_uber) = anz_plaene
            
            zeile_link = zeile_link + 1
        End If
SHORTCUT:

    zeile_konf = zeile_konf + 1

Loop Until zeile_konf = 26

Sheets("Fertigteile").Cells(13, spalte_bauteil) = "Gezeichnet:"
Sheets("Fertigteile").Cells(13, spalte_gez_datum) = "=" & spaltenname_zeichner & "13/" & spaltenname_stck_uber & "13"
Sheets("Fertigteile").Cells(13, spalte_zeichner) = "=SUM(" & spaltenname_zeichner & "2:" & spaltenname_zeichner & "12)"
Sheets("Fertigteile").Cells(13, spalte_stck_plan) = "von"
Sheets("Fertigteile").Cells(13, spalte_stck_uber) = "=SUM(" & spaltenname_stck_uber & "2:" & spaltenname_stck_uber & "12)"

anz_plaene = 0
anz_gez = 0
anz_fring = 0
anz_frarc = 0
anz_freizugeben = 0
anz_baufrei = 0
stck_ges = 0
stck_baufrei = 0

For z = erste_zeile To letzte_zeile
    If Sheets("Fertigteile").Cells(z, spalte_bauteil) <> "" And Sheets("Fertigteile").Cells(z, spalte_entfallen) <> "x" Then anz_plaene = anz_plaene + 1
    If Sheets("Fertigteile").Cells(z, spalte_bauteil) <> "" And Sheets("Fertigteile").Cells(z, spalte_gez_datum) <> "" And Sheets("Fertigteile").Cells(z, spalte_entfallen) <> "x" Then anz_gez = anz_gez + 1
    If Sheets("Fertigteile").Cells(z, spalte_bauteil) <> "" And Sheets("Fertigteile").Cells(z, spalte_verschickt) <> "" And Sheets("Fertigteile").Cells(z, spalte_fring) = "" And Sheets("Fertigteile").Cells(z, spalte_freigabe) = "" And Sheets("Fertigteile").Cells(z, spalte_entfallen) <> "x" Then anz_fring = anz_fring + 1
    If Sheets("Fertigteile").Cells(z, spalte_bauteil) <> "" And Sheets("Fertigteile").Cells(z, spalte_verschickt) <> "" And Sheets("Fertigteile").Cells(z, spalte_frarc) = "" And Sheets("Fertigteile").Cells(z, spalte_freigabe) = "" And Sheets("Fertigteile").Cells(z, spalte_entfallen) <> "x" Then anz_frarc = anz_frarc + 1
    If Sheets("Fertigteile").Cells(z, spalte_bauteil) <> "" And Sheets("Fertigteile").Cells(z, spalte_verschickt) <> "" And Sheets("Fertigteile").Cells(z, spalte_fring) <> "" And Sheets("Fertigteile").Cells(z, spalte_frarc) <> "" And Sheets("Fertigteile").Cells(z, spalte_freigabe) = "" And Sheets("Fertigteile").Cells(z, spalte_entfallen) <> "x" Then anz_freizugeben = anz_freizugeben + 1
    If Sheets("Fertigteile").Cells(z, spalte_bauteil) <> "" And Sheets("Fertigteile").Cells(z, spalte_freigabe) <> "" And Sheets("Fertigteile").Cells(z, spalte_entfallen) <> "x" Then anz_baufrei = anz_baufrei + 1
    If Sheets("Fertigteile").Cells(z, spalte_bauteil) <> "" And Sheets("Fertigteile").Cells(z, spalte_entfallen) <> "x" Then stck_ges = stck_ges + Sheets("Fertigteile").Cells(z, spalte_stck_uber)
    If Sheets("Fertigteile").Cells(z, spalte_bauteil) <> "" And Sheets("Fertigteile").Cells(z, spalte_freigabe) <> "" And Sheets("Fertigteile").Cells(z, spalte_entfallen) <> "x" Then stck_baufrei = stck_baufrei + Sheets("Fertigteile").Cells(z, spalte_stck_uber)
Next

zeile_link = 2

Sheets("Fertigteile").Cells(zeile_link, spalte_verschickt) = "Im Pr|fffd|flauf bei Pr|fffd|fingenieur:"
Sheets("Fertigteile").Cells(zeile_link, spalte_frarc) = anz_fring
zeile_link = zeile_link + 1
Sheets("Fertigteile").Cells(zeile_link, spalte_verschickt) = "Im Pr|fffd|flauf bei Architekt:"
Sheets("Fertigteile").Cells(zeile_link, spalte_frarc) = anz_frarc
zeile_link = zeile_link + 1
Sheets("Fertigteile").Cells(zeile_link, spalte_verschickt) = "Freigaben m|fffd|glich:"
Sheets("Fertigteile").Cells(zeile_link, spalte_frarc) = anz_freizugeben
zeile_link = zeile_link + 1
zeile_link = zeile_link + 1
Sheets("Fertigteile").Cells(zeile_link, spalte_verschickt) = "Pl. freigegeben / verschickt:"
Sheets("Fertigteile").Cells(zeile_link, spalte_frarc) = anz_baufrei
Sheets("Fertigteile").Cells(zeile_link, spalte_aend_arc) = "von"
Sheets("Fertigteile").Cells(zeile_link, spalte_freigabe) = anz_gez
Sheets("Fertigteile").Cells(zeile_link, spalte_entfallen) = "=" & spaltenname_frarc & zeile_link & "/" & spaltenname_freigabe & zeile_link
zeile_link = zeile_link + 1
Sheets("Fertigteile").Cells(zeile_link, spalte_verschickt) = "Pl. freigegeben / gesamt:"
Sheets("Fertigteile").Cells(zeile_link, spalte_frarc) = anz_baufrei
Sheets("Fertigteile").Cells(zeile_link, spalte_aend_arc) = "von"
Sheets("Fertigteile").Cells(zeile_link, spalte_freigabe) = anz_plaene
Sheets("Fertigteile").Cells(zeile_link, spalte_entfallen) = "=" & spaltenname_frarc & zeile_link & "/" & spaltenname_freigabe & zeile_link
zeile_link = zeile_link + 1
zeile_link = zeile_link + 1
Sheets("Fertigteile").Cells(zeile_link, spalte_verschickt) = "St|fffd|ck gezeichnet / gesamt:"
Sheets("Fertigteile").Cells(zeile_link, spalte_frarc) = stck_baufrei
Sheets("Fertigteile").Cells(zeile_link, spalte_aend_arc) = "von"
Sheets("Fertigteile").Cells(zeile_link, spalte_freigabe) = stck_ges
Sheets("Fertigteile").Cells(zeile_link, spalte_entfallen) = "=" & spaltenname_frarc & zeile_link & "/" & spaltenname_freigabe & zeile_link
zeile_link = zeile_link + 1
Sheets("Fertigteile").Cells(zeile_link, spalte_verschickt) = "St|fffd|ck freigegeben / gesamt:"
Sheets("Fertigteile").Cells(zeile_link, spalte_frarc) = stck_baufrei
Sheets("Fertigteile").Cells(zeile_link, spalte_aend_arc) = "von"
Sheets("Fertigteile").Cells(zeile_link, spalte_freigabe) = stck_ges
Sheets("Fertigteile").Cells(zeile_link, spalte_entfallen) = "=" & spaltenname_frarc & zeile_link & "/" & spaltenname_freigabe & zeile_link
zeile_link = zeile_link + 1
zeile_link = zeile_link + 1
warnung_count = 0
For z = erste_zeile To letzte_zeile
    If Sheets("Fertigteile").Cells(z, spalte_stck_plan) <> "" And Sheets("Fertigteile").Cells(z, spalte_stck_uber) <> "" And Sheets("Fertigteile").Cells(z, spalte_stck_plan) <> Sheets("Fertigteile").Cells(z, spalte_stck_uber) Then warnung_count = warnung_count + 1
Next
If warnung_count > 0 Then
Sheets("Fertigteile").Cells(zeile_link, spalte_verschickt) = "Es gibt " & warnung_count & " St|fffd|ckzahlwarnung(en)!"
    Range(spaltenname_verschickt & zeile_link).Select
    Selection.Font.ColorIndex = 3
    Selection.Font.Bold = True

End If

erfolg = "ja"
ERROREXIT:
If erfolg <> "ja" Then MsgBox "Es gab einen Fehler!", vbCritical, "Hyperlinks und Auswertung aktualisieren"

Calculate

If Sheets(1).PageSetup.CenterHeader <> Sheets("Konfiguration").Range("F5") Then
    For Each Worksheet In ActiveWorkbook.Worksheets
        With Worksheet.PageSetup
                .CenterHeader = Sheets("Konfiguration").Range("F5")
                .RightHeader = ""
        End With
    Next Worksheet
End If
    
'Planhistorie ausblenden
letzte_zeile = Sheets("Fertigteile").Cells(Rows.Count, spalte_index).End(xlUp).Row
If letzte_zeile <= erste_zeile Then letzte_zeile = erste_zeile + 1

For i = erste_zeile To letzte_zeile

    If Sheets("Fertigteile").Cells(i, spalte_bauteil) = "" And Sheets("Fertigteile").Cells(i, spalte_index) <> "" Then Sheets("Fertigteile").Rows(i).EntireRow.Hidden = True

Next

Application.ScreenUpdating = True

    Range("C1:I1").Select
    Selection.Font.ColorIndex = 3
    Selection.Font.Bold = True
    Selection.HorizontalAlignment = xlLeft
    
    Range("I1").Select
    Selection.HorizontalAlignment = xlRight
        
Sheets("Fertigteile").Cells(1, 3) = "Letzte Aktualisierung:"
Sheets("Fertigteile").Cells(1, 9) = Date & " / " & Format(Time, "hh:mm") & " Uhr"

Sheets("Fertigteile").Cells(1, 1).Select

End Sub

Function spBuchstabe(spalte As Long) As String
    Dim rg As String
    
    rg = Cells(1, spalte).Address(True, False)
    spBuchstabe = Left(rg, InStr(1, rg, "$") - 1)
End Function





Attribute VB_Name = "schluessel_modul"
Public Function schluessel(dokument As String)

Dim ft_bsp_prfx As String, ft_trz_typ As String, ft_bsp_typ As String, ft_bsp_trz_nr As String, ft_bsp_nr As String, ft_trz_indx As String, ft_bsp_indx As String, ft_trz_sffx As String, ft_bsp_sffx As String, ft_trz_in As String, ft_bsp_in As String
Dim u_bsp_prfx As String, u_trz_typ As String, u_bsp_typ As String, u_bsp_trz_nr As String, u_bsp_nr As String, u_trz_indx As String, u_bsp_indx As String, u_trz_sffx As String, u_bsp_sffx As String, u_trz_in As String, u_bsp_in As String
Dim es_bsp_prfx As String, es_trz_typ As String, es_bsp_typ As String, es_bsp_trz_nr As String, es_bsp_nr As String, es_trz_indx As String, es_bsp_indx As String, es_trz_sffx As String, es_bsp_sffx As String, es_trz_in As String, es_bsp_in As String
Dim e_bsp_prfx As String, e_trz_typ As String, e_bsp_typ As String, e_bsp_trz_nr As String, e_bsp_nr As String, e_trz_indx As String, e_bsp_indx As String, e_trz_sffx As String, e_bsp_sffx As String, e_trz_in As String, e_bsp_in As String
Dim ml_bsp_prfx As String, ml_trz_typ As String, ml_bsp_typ As String, ml_bsp_trz_nr As String, ml_bsp_nr As String, ml_trz_indx As String, ml_bsp_indx As String, ml_trz_sffx As String, ml_bsp_sffx As String, ml_trz_in As String, ml_bsp_in As String
Dim ob_bsp_prfx As String, ob_trz_typ As String, ob_bsp_typ As String, ob_bsp_trz_nr As String, ob_bsp_nr As String, ob_trz_indx As String, ob_bsp_indx As String, ob_trz_sffx As String, ob_bsp_sffx As String, ob_trz_in As String, ob_bsp_in As String
Dim wp_bsp_prfx As String, wp_trz_typ As String, wp_bsp_typ As String, wp_bsp_trz_nr As String, wp_bsp_nr As String, wp_trz_indx As String, wp_bsp_indx As String, wp_trz_sffx As String, wp_bsp_sffx As String, wp_trz_in As String, wp_bsp_in As String
Dim bez_1 As String, bez_2 As String, bez_3 As String, bez_4 As String, bez_5 As String
Dim spl() As String

ft_bsp_prfx = Sheets("Konfiguration").Cells(32, 3)
ft_bsp_trz_typ = Sheets("Konfiguration").Cells(32, 4)
ft_bsp_typ = Sheets("Konfiguration").Cells(33, 3)
ft_bsp_trz_nr = Sheets("Konfiguration").Cells(33, 4)
ft_bsp_nr = Sheets("Konfiguration").Cells(34, 3)
ft_bsp_trz_indx = Sheets("Konfiguration").Cells(34, 4)
ft_bsp_indx = Sheets("Konfiguration").Cells(35, 3)
ft_bsp_trz_sffx = Sheets("Konfiguration").Cells(35, 4)
ft_bsp_sffx = Sheets("Konfiguration").Cells(36, 3)
ft_bsp_trz_in = Sheets("Konfiguration").Cells(36, 4)
ft_bsp_in = Sheets("Konfiguration").Cells(37, 3)

u_bsp_prfx = Sheets("Konfiguration").Cells(10, 13)
u_bsp_trz_typ = Sheets("Konfiguration").Cells(10, 14)
u_bsp_typ = Sheets("Konfiguration").Cells(11, 13)
u_bsp_trz_nr = Sheets("Konfiguration").Cells(11, 14)
u_bsp_nr = Sheets("Konfiguration").Cells(12, 13)
u_bsp_trz_indx = Sheets("Konfiguration").Cells(12, 14)
u_bsp_indx = Sheets("Konfiguration").Cells(13, 13)
u_bsp_trz_sffx = Sheets("Konfiguration").Cells(13, 14)
u_bsp_sffx = Sheets("Konfiguration").Cells(14, 13)
u_bsp_trz_in = Sheets("Konfiguration").Cells(14, 14)
u_bsp_in = Sheets("Konfiguration").Cells(15, 13)

e_bsp_prfx = Sheets("Konfiguration").Cells(20, 13)
e_bsp_trz_typ = Sheets("Konfiguration").Cells(20, 14)
e_bsp_typ = Sheets("Konfiguration").Cells(21, 13)
e_bsp_trz_nr = Sheets("Konfiguration").Cells(21, 14)
e_bsp_nr = Sheets("Konfiguration").Cells(22, 13)
e_bsp_trz_indx = Sheets("Konfiguration").Cells(22, 14)
e_bsp_indx = Sheets("Konfiguration").Cells(23, 13)
e_bsp_trz_sffx = Sheets("Konfiguration").Cells(23, 14)
e_bsp_sffx = Sheets("Konfiguration").Cells(24, 13)
e_bsp_trz_in = Sheets("Konfiguration").Cells(24, 14)
e_bsp_in = Sheets("Konfiguration").Cells(25, 13)

es_bsp_prfx = Sheets("Konfiguration").Cells(20, 23)
es_bsp_trz_typ = Sheets("Konfiguration").Cells(20, 24)
es_bsp_typ = Sheets("Konfiguration").Cells(21, 23)
es_bsp_trz_nr = Sheets("Konfiguration").Cells(21, 24)
es_bsp_nr = Sheets("Konfiguration").Cells(22, 23)
es_bsp_trz_indx = Sheets("Konfiguration").Cells(22, 24)
es_bsp_indx = Sheets("Konfiguration").Cells(23, 23)
es_bsp_trz_sffx = Sheets("Konfiguration").Cells(23, 24)
es_bsp_sffx = Sheets("Konfiguration").Cells(24, 23)
es_bsp_trz_in = Sheets("Konfiguration").Cells(24, 24)
es_bsp_in = Sheets("Konfiguration").Cells(25, 23)

ml_bsp_prfx = Sheets("Konfiguration").Cells(20, 33)
ml_bsp_trz_typ = Sheets("Konfiguration").Cells(20, 34)
ml_bsp_typ = Sheets("Konfiguration").Cells(21, 33)
ml_bsp_trz_nr = Sheets("Konfiguration").Cells(21, 34)
ml_bsp_nr = Sheets("Konfiguration").Cells(22, 33)
ml_bsp_trz_indx = Sheets("Konfiguration").Cells(22, 34)
ml_bsp_indx = Sheets("Konfiguration").Cells(23, 33)
ml_bsp_trz_sffx = Sheets("Konfiguration").Cells(23, 34)
ml_bsp_sffx = Sheets("Konfiguration").Cells(24, 33)
ml_bsp_trz_in = Sheets("Konfiguration").Cells(24, 34)
ml_bsp_in = Sheets("Konfiguration").Cells(25, 34)

ob_bsp_prfx = Sheets("Konfiguration").Cells(30, 13)
ob_bsp_trz_typ = Sheets("Konfiguration").Cells(30, 14)
ob_bsp_typ = Sheets("Konfiguration").Cells(31, 13)
ob_bsp_trz_nr = Sheets("Konfiguration").Cells(31, 14)
ob_bsp_nr = Sheets("Konfiguration").Cells(32, 13)
ob_bsp_trz_indx = Sheets("Konfiguration").Cells(32, 14)
ob_bsp_indx = Sheets("Konfiguration").Cells(33, 13)
ob_bsp_trz_sffx = Sheets("Konfiguration").Cells(33, 14)
ob_bsp_sffx = Sheets("Konfiguration").Cells(34, 13)
ob_bsp_trz_in = Sheets("Konfiguration").Cells(34, 14)
ob_bsp_in = Sheets("Konfiguration").Cells(35, 13)

wp_bsp_prfx = Sheets("Konfiguration").Cells(45, 13)
wp_bsp_trz_typ = Sheets("Konfiguration").Cells(45, 14)
wp_bsp_typ = Sheets("Konfiguration").Cells(46, 13)
wp_bsp_trz_nr = Sheets("Konfiguration").Cells(46, 14)
wp_bsp_nr = Sheets("Konfiguration").Cells(47, 13)
wp_bsp_trz_indx = Sheets("Konfiguration").Cells(47, 14)
wp_bsp_indx = Sheets("Konfiguration").Cells(48, 13)
wp_bsp_trz_sffx = Sheets("Konfiguration").Cells(48, 14)
wp_bsp_sffx = Sheets("Konfiguration").Cells(49, 13)
wp_bsp_trz_in = Sheets("Konfiguration").Cells(49, 14)
wp_bsp_in = Sheets("Konfiguration").Cells(50, 13)

sp_ft = 4
stz_ft = 10
enz_ft = 25
sp_u = 9
stz_u = 10
enz_u = 15
sp_e = 9
sp_es = 19
sp_ml = 29
stz_e = 20
enz_e = 25
sp_ob = 9
stz_ob = 30
enz_ob = 39
sp_wp = 9
stz_wp = 45
enz_wp = 54

rep = 1

    'Variablen f|fffd|r den Vergleich von Dateiname mit den Definitionen im Konfiguratiossheet werden besetzt
    'rep = 1 bedeutet Vergleich mit Fertigteile, Rep = 2 bedeutet Vergleich mit |fffd|bersichten e.t.c.
    Do
        If rep = 1 Then
            z_start = 32
            sp_var = 5
            bsp_prfx = ft_bsp_prfx
            bsp_trz_typ = ft_bsp_trz_typ
            bsp_typ = ft_bsp_typ
            bsp_trz_nr = ft_bsp_trz_nr
            bsp_nr = ft_bsp_nr
            bsp_trz_indx = ft_bsp_trz_indx
            bsp_indx = ft_bsp_indx
            bsp_trz_sffx = ft_bsp_trz_sffx
            bsp_sffx = ft_bsp_sffx
            bsp_trz_in = ft_bsp_trz_in
            bsp_in = ft_bsp_in
            sp = sp_ft
            stz = stz_ft
            enz = enz_ft
        End If
        
        If rep = 2 Then
            z_start = 10
            sp_var = 15
            bsp_prfx = u_bsp_prfx
            bsp_trz_typ = u_bsp_trz_typ
            bsp_typ = u_bsp_typ
            bsp_trz_nr = u_bsp_trz_nr
            bsp_nr = u_bsp_nr
            bsp_trz_indx = u_bsp_trz_indx
            bsp_indx = u_bsp_indx
            bsp_trz_sffx = u_bsp_trz_sffx
            bsp_sffx = u_bsp_sffx
            bsp_trz_in = u_bsp_trz_in
            bsp_in = u_bsp_in
            sp = sp_u
            stz = stz_u
            enz = enz_u
        End If
        
        If rep = 3 Then
            z_start = 20
            sp_var = 15
            bsp_prfx = e_bsp_prfx
            bsp_trz_typ = e_bsp_trz_typ
            bsp_typ = e_bsp_typ
            bsp_trz_nr = e_bsp_trz_nr
            bsp_nr = e_bsp_nr
            bsp_trz_indx = e_bsp_trz_indx
            bsp_indx = e_bsp_indx
            bsp_trz_sffx = e_bsp_trz_sffx
            bsp_sffx = e_bsp_sffx
            bsp_trz_in = e_bsp_trz_in
            bsp_in = e_bsp_in
            sp = sp_e
            stz = stz_e
            enz = enz_e
        End If
        
        If rep = 4 Then
            z_start = 20
            sp_var = 25
            bsp_prfx = es_bsp_prfx
            bsp_trz_typ = es_bsp_trz_typ
            bsp_typ = es_bsp_typ
            bsp_trz_nr = es_bsp_trz_nr
            bsp_nr = es_bsp_nr
            bsp_trz_indx = es_bsp_trz_indx
            bsp_indx = es_bsp_indx
            bsp_trz_sffx = es_bsp_trz_sffx
            bsp_sffx = es_bsp_sffx
            bsp_trz_in = es_bsp_trz_in
            bsp_in = es_bsp_in
            sp = sp_es
            stz = stz_e
            enz = enz_e
        End If
        
        If rep = 5 Then
            z_start = 20
            sp_var = 35
            bsp_prfx = ml_bsp_prfx
            bsp_trz_typ = ml_bsp_trz_typ
            bsp_typ = ml_bsp_typ
            bsp_trz_nr = ml_bsp_trz_nr
            bsp_nr = ml_bsp_nr
            bsp_trz_indx = ml_bsp_trz_indx
            bsp_indx = ml_bsp_indx
            bsp_trz_sffx = ml_bsp_trz_sffx
            bsp_sffx = ml_bsp_sffx
            bsp_trz_in = ml_bsp_trz_in
            bsp_in = ml_bsp_in
            sp = sp_ml
            stz = stz_e
            enz = enz_e
        End If
        
        If rep = 6 Then
            z_start = 30
            sp_var = 15
            bsp_prfx = ob_bsp_prfx
            bsp_trz_typ = ob_bsp_trz_typ
            bsp_typ = ob_bsp_typ
            bsp_trz_nr = ob_bsp_trz_nr
            bsp_nr = ob_bsp_nr
            bsp_trz_indx = ob_bsp_trz_indx
            bsp_indx = ob_bsp_indx
            bsp_trz_sffx = ob_bsp_trz_sffx
            bsp_sffx = ob_bsp_sffx
            bsp_trz_in = ob_bsp_trz_in
            bsp_in = ob_bsp_in
            sp = sp_ob
            stz = stz_ob
            enz = enz_ob
        End If
        
        If rep = 7 Then
            z_start = 45
            sp_var = 15
            bsp_prfx = wp_bsp_prfx
            bsp_trz_typ = wp_bsp_trz_typ
            bsp_typ = wp_bsp_typ
            bsp_trz_nr = wp_bsp_trz_nr
            bsp_nr = wp_bsp_nr
            bsp_trz_indx = wp_bsp_trz_indx
            bsp_indx = wp_bsp_indx
            bsp_trz_sffx = wp_bsp_trz_sffx
            bsp_sffx = wp_bsp_sffx
            bsp_trz_in = wp_bsp_trz_in
            bsp_in = wp_bsp_in
            sp = sp_wp
            stz = stz_wp
            enz = enz_wp
        End If
        'Zur Anwendung des Planschl|fffd|ssels stellt das Makro fest, an welcher Stelle evtl. eine Variabilit|fffd|t der Zeichenl|fffd|nge vorliegt
        vari = 0
        For i = z_start To z_start + 5
            If Sheets("Konfiguration").Cells(i, sp_var) = "x" Then vari = i - z_start + 1
        Next

        'MsgBox "vari: " & vari

        'MsgBox "Plan" & vbTab & "Bsp." & vbCrLf & Len(dokument) - 4 & vbTab & Len(bsp_prfx & bsp_trz_typ & bsp_typ & bsp_trz_nr & bsp_nr & bsp_trz_indx & bsp_indx & bsp_trz_sffx & bsp_sffx & bsp_trz_in & bsp_in)

        'MsgBox vari = 2 And Len(dokument) - 4 < Len(bsp_prfx & bsp_trz_typ & bsp_trz_nr & bsp_nr & bsp_trz_indx & bsp_indx & bsp_trz_sffx & bsp_sffx & bsp_trz_in & bsp_in)

        If vari = 1 And Len(dokument) - 4 < Len(bsp_trz_typ & bsp_typ & bsp_trz_nr & bsp_nr & bsp_trz_indx & bsp_indx & bsp_trz_sffx & bsp_sffx & bsp_trz_in & bsp_in) Then GoTo SHORTCUT2
        If vari = 2 And Len(dokument) - 4 < Len(bsp_prfx & bsp_trz_typ & bsp_trz_nr & bsp_nr & bsp_trz_indx & bsp_indx & bsp_trz_sffx & bsp_sffx & bsp_trz_in & bsp_in) Then GoTo SHORTCUT2
        If vari = 3 And Len(dokument) - 4 < Len(bsp_prfx & bsp_trz_typ & bsp_typ & bsp_nr & bsp_trz_indx & bsp_indx & bsp_trz_sffx & bsp_sffx & bsp_trz_in & bsp_in) Then GoTo SHORTCUT2
        If vari = 4 And Len(dokument) - 4 < Len(bsp_prfx & bsp_trz_typ & bsp_typ & bsp_trz_nr & bsp_nr & bsp_indx & bsp_trz_sffx & bsp_sffx & bsp_trz_in & bsp_in) Then GoTo SHORTCUT2
        If vari = 5 And Len(dokument) - 4 < Len(bsp_prfx & bsp_trz_typ & bsp_typ & bsp_trz_nr & bsp_nr & bsp_trz_indx & bsp_indx & bsp_trz_sffx & bsp_trz_in & bsp_in) Then GoTo SHORTCUT2
        If vari = 6 And Len(dokument) - 4 < Len(bsp_prfx & bsp_trz_typ & bsp_typ & bsp_trz_nr & bsp_nr & bsp_trz_indx & bsp_indx & bsp_trz_sffx & bsp_sffx & bsp_trz_in) Then GoTo SHORTCUT2
            
        'Der Dateiname wird f|fffd|r den Vergleich aufgeschl|fffd|sselt
        
        If vari = 0 Then
            prfx = Left(dokument, Len(bsp_prfx))
            trz_typ = Mid(dokument, Len(prfx) + 1, Len(bsp_trz_typ))
            typ = Mid(dokument, Len(prfx & trz_typ) + 1, Len(bsp_typ))
            trz_nr = Mid(dokument, Len(prfx & trz_typ & typ) + 1, Len(bsp_trz_nr))
            nr = Mid(dokument, Len(prfx & trz_typ & typ & trz_nr) + 1, Len(bsp_nr))
            trz_indx = Mid(dokument, Len(prfx & trz_typ & typ & trz_nr & nr) + 1, Len(bsp_trz_indx))
            indx = Mid(dokument, Len(prfx & trz_typ & typ & trz_nr & nr & trz_indx) + 1, Len(bsp_indx))
            trz_sffx = Mid(dokument, Len(prfx & trz_typ & typ & trz_nr & nr & trz_indx & indx) + 1, Len(bsp_trz_sffx))
            sffx = Mid(dokument, Len(prfx & trz_typ & typ & trz_nr & nr & trz_indx & indx & trz_sffx) + 1, Len(bsp_sffx))
            trz_in = Mid(dokument, Len(prfx & trz_typ & typ & trz_nr & nr & trz_indx & indx & trz_sffx & sffx) + 1, Len(bsp_trz_in))
            inhalt = Mid(dokument, Len(prfx & trz_typ & typ & trz_nr & nr & trz_indx & indx & trz_sffx & sffx & trz_in) + 1, Len(bsp_in))
        End If
            
        If vari = 1 Then
            inhalt = Mid(dokument, Len(dokument) - Len(bsp_in) - 3, Len(bsp_in))
            trz_in = Mid(dokument, Len(dokument) - Len(bsp_trz_in & inhalt) - 3, Len(bsp_trz_in))
            sffx = Mid(dokument, Len(dokument) - Len(bsp_sffx & trz_in & inhalt) - 3, Len(bsp_sffx))
            trz_sffx = Mid(dokument, Len(dokument) - Len(bsp_trz_sffx & sffx & trz_in & inhalt) - 3, Len(bsp_trz_sffx))
            indx = Mid(dokument, Len(dokument) - Len(bsp_indx & trz_sffx & sffx & trz_in & inhalt) - 3, Len(bsp_indx))
            trz_indx = Mid(dokument, Len(dokument) - Len(bsp_trz_indx & indx & trz_sffx & sffx & trz_in & inhalt) - 3, Len(bsp_trz_indx))
            nr = Mid(dokument, Len(dokument) - Len(bsp_nr & trz_indx & indx & trz_sffx & sffx & trz_in & inhalt) - 3, Len(bsp_nr))
            trz_nr = Mid(dokument, Len(dokument) - Len(bsp_trz_nr & nr & trz_indx & indx & trz_sffx & sffx & trz_in & inhalt) - 3, Len(bsp_trz_nr))
            typ = Mid(dokument, Len(dokument) - Len(bsp_typ & trz_nr & nr & trz_indx & indx & trz_sffx & sffx & trz_in & inhalt) - 3, Len(bsp_typ))
            trz_typ = Mid(dokument, Len(dokument) - Len(bsp_trz_typ & typ & trz_nr & nr & trz_indx & indx & trz_sffx & sffx & trz_in & inhalt) - 3, Len(bsp_trz_typ))
            prfx = Left(dokument, Len(dokument) - Len(trz_typ & typ & trz_nr & nr & trz_indx & indx & trz_sffx & sffx & trz_in & inhalt) - 4)
        End If
        
        If vari = 2 Then
            prfx = Left(dokument, Len(bsp_prfx))
            trz_typ = Mid(dokument, Len(prfx) + 1, Len(bsp_trz_typ))
            inhalt = Mid(dokument, Len(dokument) - Len(bsp_in) - 3, Len(bsp_in))
            trz_in = Mid(dokument, Len(dokument) - Len(bsp_trz_in & inhalt) - 3, Len(bsp_trz_in))
            sffx = Mid(dokument, Len(dokument) - Len(bsp_sffx & trz_in & inhalt) - 3, Len(bsp_sffx))
            trz_sffx = Mid(dokument, Len(dokument) - Len(bsp_trz_sffx & sffx & trz_in & inhalt) - 3, Len(bsp_trz_sffx))
            indx = Mid(dokument, Len(dokument) - Len(bsp_indx & trz_sffx & sffx & trz_in & inhalt) - 3, Len(bsp_indx))
            trz_indx = Mid(dokument, Len(dokument) - Len(bsp_trz_indx & indx & trz_sffx & sffx & trz_in & inhalt) - 3, Len(bsp_trz_indx))
            nr = Mid(dokument, Len(dokument) - Len(bsp_nr & trz_indx & indx & trz_sffx & sffx & trz_in & inhalt) - 3, Len(bsp_nr))
            trz_nr = Mid(dokument, Len(dokument) - Len(bsp_trz_nr & nr & trz_indx & indx & trz_sffx & sffx & trz_in & inhalt) - 3, Len(bsp_trz_nr))
            typ = Mid(dokument, Len(prfx & trz_typ) + 1, Len(dokument) - Len(prfx & trz_typ & trz_nr & nr & trz_indx & indx & trz_sffx & sffx & trz_in & inhalt) - 4)
            'MsgBox prfx & vbCrLf & _
                    trz_typ & vbCrLf & _
                    inhalt & vbCrLf & _
                    trz_in & vbCrLf & _
                    sffx & vbCrLf & _
                    trz_sffx & vbCrLf & _
                    indx & vbCrLf & _
                    trz_indx & vbCrLf & _
                    nr & vbCrLf & _
                    trz_nr & vbCrLf & _
                    typ
        End If
        
        If vari = 3 Then
            prfx = Left(dokument, Len(bsp_prfx))
            trz_typ = Mid(dokument, Len(prfx) + 1, Len(bsp_trz_typ))
            typ = Mid(dokument, Len(prfx & trz_typ) + 1, Len(bsp_typ))
            trz_nr = Mid(dokument, Len(prfx & trz_typ & typ) + 1, Len(bsp_trz_nr))
            inhalt = Mid(dokument, Len(dokument) - Len(bsp_in) - 3, Len(bsp_in))
            trz_in = Mid(dokument, Len(dokument) - Len(bsp_trz_in & inhalt) - 3, Len(bsp_trz_in))
            sffx = Mid(dokument, Len(dokument) - Len(bsp_sffx & trz_in & inhalt) - 3, Len(bsp_sffx))
            trz_sffx = Mid(dokument, Len(dokument) - Len(bsp_trz_sffx & sffx & trz_in & inhalt) - 3, Len(bsp_trz_sffx))
            indx = Mid(dokument, Len(dokument) - Len(bsp_indx & trz_sffx & sffx & trz_in & inhalt) - 3, Len(bsp_indx))
            trz_indx = Mid(dokument, Len(dokument) - Len(bsp_trz_indx & indx & trz_sffx & sffx & trz_in & inhalt) - 3, Len(bsp_trz_indx))
            nr = Mid(dokument, Len(prfx & trz_typ & typ & trz_nr) + 1, Len(dokument) - Len(prfx & trz_typ & typ & trz_nr & trz_indx & indx & trz_sffx & sffx & trz_in & inhalt) - 4)
        End If
    
        If vari = 4 Then
            prfx = Left(dokument, Len(bsp_prfx))
            trz_typ = Mid(dokument, Len(prfx) + 1, Len(bsp_trz_typ))
            typ = Mid(dokument, Len(prfx & trz_typ) + 1, Len(bsp_typ))
            trz_nr = Mid(dokument, Len(prfx & trz_typ & typ) + 1, Len(bsp_trz_nr))
            nr = Mid(dokument, Len(prfx & trz_typ & typ & trz_nr) + 1, Len(bsp_nr))
            trz_indx = Mid(dokument, Len(prfx & trz_typ & typ & trz_nr & nr) + 1, Len(bsp_trz_indx))
            inhalt = Mid(dokument, Len(dokument) - Len(bsp_in) - 3, Len(bsp_in))
            trz_in = Mid(dokument, Len(dokument) - Len(bsp_trz_in & inhalt) - 3, Len(bsp_trz_in))
            sffx = Mid(dokument, Len(dokument) - Len(bsp_sffx & trz_in & inhalt) - 3, Len(bsp_sffx))
            trz_sffx = Mid(dokument, Len(dokument) - Len(bsp_trz_sffx & sffx & trz_in & inhalt) - 3, Len(bsp_trz_sffx))
            indx = Mid(dokument, Len(prfx & trz_typ & typ & trz_nr & nr & trz_indx) + 1, Len(dokument) - Len(prfx & trz_typ & typ & trz_nr & nr & trz_indx & trz_sffx & sffx & trz_in & inhalt) - 4)
        End If
        
        If vari = 5 Then
            prfx = Left(dokument, Len(bsp_prfx))
            trz_typ = Mid(dokument, Len(prfx) + 1, Len(bsp_trz_typ))
            typ = Mid(dokument, Len(prfx & trz_typ) + 1, Len(bsp_typ))
            trz_nr = Mid(dokument, Len(prfx & trz_typ & typ) + 1, Len(bsp_trz_nr))
            nr = Mid(dokument, Len(prfx & trz_typ & typ & trz_nr) + 1, Len(bsp_nr))
            trz_indx = Mid(dokument, Len(prfx & trz_typ & typ & trz_nr & nr) + 1, Len(bsp_trz_indx))
            indx = Mid(dokument, Len(prfx & trz_typ & typ & trz_nr & nr & trz_indx) + 1, Len(bsp_indx))
            trz_sffx = Mid(dokument, Len(prfx & trz_typ & typ & trz_nr & nr & trz_indx & indx) + 1, Len(bsp_trz_sffx))
            inhalt = Mid(dokument, Len(dokument) - Len(bsp_in) - 3, Len(bsp_in))
            trz_in = Mid(dokument, Len(dokument) - Len(bsp_trz_in & inhalt) - 3, Len(bsp_trz_in))
            sffx = Mid(dokument, Len(prfx & trz_typ & typ & trz_nr & nr & trz_indx & indx & trz_sffx) + 1, Len(dokument) - Len(prfx & trz_typ & typ & trz_nr & nr & trz_indx & indx & trz_sffx & trz_in & inhalt) - 4)
        End If
        
        If vari = 6 Then
            prfx = Left(dokument, Len(bsp_prfx))
            trz_typ = Mid(dokument, Len(prfx) + 1, Len(bsp_trz_typ))
            typ = Mid(dokument, Len(prfx & trz_typ) + 1, Len(bsp_typ))
            trz_nr = Mid(dokument, Len(prfx & trz_typ & typ) + 1, Len(bsp_trz_nr))
            nr = Mid(dokument, Len(prfx & trz_typ & typ & trz_nr) + 1, Len(bsp_nr))
            trz_indx = Mid(dokument, Len(prfx & trz_typ & typ & trz_nr & nr) + 1, Len(bsp_trz_indx))
            indx = Mid(dokument, Len(prfx & trz_typ & typ & trz_nr & nr & trz_indx) + 1, Len(bsp_indx))
            trz_sffx = Mid(dokument, Len(prfx & trz_typ & typ & trz_nr & nr & trz_indx & indx) + 1, Len(bsp_trz_sffx))
            sffx = Mid(dokument, Len(prfx & trz_typ & typ & trz_nr & nr & trz_indx & indx & trz_sffx) + 1, Len(bsp_sffx))
            trz_in = Mid(dokument, Len(prfx & trz_typ & typ & trz_nr & nr & trz_indx & indx & trz_sffx & sffx) + 1, Len(bsp_trz_in))
            inhalt = Mid(dokument, Len(prfx & trz_typ & typ & trz_nr & nr & trz_indx & indx & trz_sffx & sffx & trz_in) + 1, Len(dokument) - Len(prfx & trz_typ & typ & trz_nr & nr & trz_indx & indx & trz_sffx & sffx & trz_in) - 4)
        End If
        
        'Die zu erkennenden Plan- bzw. Bauteiltypen werden eingelesen
        z = stz
        
        Do
            bez_1 = ""
            bez_2 = ""
            bez_3 = ""
            bez_4 = ""
            bez_5 = ""
            bez_6 = ""
            bez_7 = ""
            bez_8 = ""
            bez_9 = ""
            bez_10 = ""
            bez_11 = ""
            bez_12 = ""
            bez_13 = ""
            bez_14 = ""
            bez_15 = ""
            
            If Sheets("Konfiguration").Cells(z, sp) = "" Then GoTo SHORTCUT
        
            For st = 1 To Len(Sheets("Konfiguration").Cells(z, sp))
                If Mid(Sheets("Konfiguration").Cells(z, sp), st, 1) <> "," Then bez_1 = Sheets("Konfiguration").Cells(z, sp)
            Next
    
            'MsgBox bez_1
    
            For st = 1 To Len(Sheets("Konfiguration").Cells(z, sp))
                If Mid(Sheets("Konfiguration").Cells(z, sp), st, 1) = "," Then
                    spl() = Split(Replace(Sheets("Konfiguration").Cells(z, sp), " ", ""), ",")
                        For i = LBound(spl) To UBound(spl)
                            If i = 0 Then bez_1 = spl(i)
                            If i = 1 Then bez_2 = spl(i)
                            If i = 2 Then bez_3 = spl(i)
                            If i = 3 Then bez_4 = spl(i)
                            If i = 4 Then bez_5 = spl(i)
                            If i = 5 Then bez_6 = spl(i)
                            If i = 6 Then bez_7 = spl(i)
                            If i = 7 Then bez_8 = spl(i)
                            If i = 8 Then bez_9 = spl(i)
                            If i = 9 Then bez_10 = spl(i)
                            If i = 10 Then bez_11 = spl(i)
                            If i = 11 Then bez_12 = spl(i)
                            If i = 12 Then bez_13 = spl(i)
                            If i = 13 Then bez_14 = spl(i)
                            If i = 14 Then bez_15 = spl(i)
                        Next
                End If
            Next
            
            'Abgleich
            If Len(typ & trz_nr) > Len(bez_1 & trz_nr) And Len(typ & trz_nr) > Len(bez_2 & trz_nr) And Len(typ & trz_nr) > Len(bez_3 & trz_nr) And Len(typ & trz_nr) > Len(bez_4 & trz_nr) And Len(typ & trz_nr) > Len(bez_5 & trz_nr) Then
                If LCase(Left(typ & trz_nr, Len(bez_1 & trz_nr))) = LCase(bez_1 & trz_nr) And bez_1 <> "" And IsNumeric(Mid(typ & trz_nr, Len(bez_1 & trz_nr) + 1, 1)) = True Or _
                    LCase(Left(typ & trz_nr, Len(bez_2 & trz_nr))) = LCase(bez_2 & trz_nr) And bez_2 <> "" And IsNumeric(Mid(typ & trz_nr, Len(bez_2 & trz_nr) + 1, 1)) = True Or _
                    LCase(Left(typ & trz_nr, Len(bez_3 & trz_nr))) = LCase(bez_3 & trz_nr) And bez_3 <> "" And IsNumeric(Mid(typ & trz_nr, Len(bez_3 & trz_nr) + 1, 1)) = True Or _
                    LCase(Left(typ & trz_nr, Len(bez_4 & trz_nr))) = LCase(bez_4 & trz_nr) And bez_4 <> "" And IsNumeric(Mid(typ & trz_nr, Len(bez_4 & trz_nr) + 1, 1)) = True Or _
                    LCase(Left(typ & trz_nr, Len(bez_5 & trz_nr))) = LCase(bez_5 & trz_nr) And bez_5 <> "" And IsNumeric(Mid(typ & trz_nr, Len(bez_5 & trz_nr) + 1, 1)) = True Or _
                    LCase(Left(typ & trz_nr, Len(bez_6 & trz_nr))) = LCase(bez_6 & trz_nr) And bez_6 <> "" And IsNumeric(Mid(typ & trz_nr, Len(bez_6 & trz_nr) + 1, 1)) = True Or _
                    LCase(Left(typ & trz_nr, Len(bez_7 & trz_nr))) = LCase(bez_7 & trz_nr) And bez_7 <> "" And IsNumeric(Mid(typ & trz_nr, Len(bez_7 & trz_nr) + 1, 1)) = True Or _
                    LCase(Left(typ & trz_nr, Len(bez_8 & trz_nr))) = LCase(bez_8 & trz_nr) And bez_8 <> "" And IsNumeric(Mid(typ & trz_nr, Len(bez_8 & trz_nr) + 1, 1)) = True Or _
                    LCase(Left(typ & trz_nr, Len(bez_9 & trz_nr))) = LCase(bez_9 & trz_nr) And bez_9 <> "" And IsNumeric(Mid(typ & trz_nr, Len(bez_9 & trz_nr) + 1, 1)) = True Or _
                    LCase(Left(typ & trz_nr, Len(bez_10 & trz_nr))) = LCase(bez_10 & trz_nr) And bez_10 <> "" And IsNumeric(Mid(typ & trz_nr, Len(bez_10 & trz_nr) + 1, 1)) = True Or _
                    LCase(Left(typ & trz_nr, Len(bez_11 & trz_nr))) = LCase(bez_11 & trz_nr) And bez_11 <> "" And IsNumeric(Mid(typ & trz_nr, Len(bez_11 & trz_nr) + 1, 1)) = True Or _
                    LCase(Left(typ & trz_nr, Len(bez_12 & trz_nr))) = LCase(bez_12 & trz_nr) And bez_12 <> "" And IsNumeric(Mid(typ & trz_nr, Len(bez_12 & trz_nr) + 1, 1)) = True Or _
                    LCase(Left(typ & trz_nr, Len(bez_13 & trz_nr))) = LCase(bez_13 & trz_nr) And bez_13 <> "" And IsNumeric(Mid(typ & trz_nr, Len(bez_13 & trz_nr) + 1, 1)) = True Or _
                    LCase(Left(typ & trz_nr, Len(bez_14 & trz_nr))) = LCase(bez_14 & trz_nr) And bez_14 <> "" And IsNumeric(Mid(typ & trz_nr, Len(bez_14 & trz_nr) + 1, 1)) = True Or _
                    LCase(Left(typ & trz_nr, Len(bez_15 & trz_nr))) = LCase(bez_15 & trz_nr) And bez_15 <> "" And IsNumeric(Mid(typ & trz_nr, Len(bez_15 & trz_nr) + 1, 1)) = True Then treffer_art = rep
            Else
                If LCase(Left(typ & trz_nr, Len(bez_1 & trz_nr))) = LCase(bez_1 & trz_nr) And bez_1 <> "" Or _
                    LCase(Left(typ & trz_nr, Len(bez_2 & trz_nr))) = LCase(bez_2 & trz_nr) And bez_2 <> "" Or _
                    LCase(Left(typ & trz_nr, Len(bez_3 & trz_nr))) = LCase(bez_3 & trz_nr) And bez_3 <> "" Or _
                    LCase(Left(typ & trz_nr, Len(bez_4 & trz_nr))) = LCase(bez_4 & trz_nr) And bez_4 <> "" Or _
                    LCase(Left(typ & trz_nr, Len(bez_5 & trz_nr))) = LCase(bez_5 & trz_nr) And bez_5 <> "" Or _
                    LCase(Left(typ & trz_nr, Len(bez_6 & trz_nr))) = LCase(bez_6 & trz_nr) And bez_6 <> "" Or _
                    LCase(Left(typ & trz_nr, Len(bez_7 & trz_nr))) = LCase(bez_7 & trz_nr) And bez_7 <> "" Or _
                    LCase(Left(typ & trz_nr, Len(bez_8 & trz_nr))) = LCase(bez_8 & trz_nr) And bez_8 <> "" Or _
                    LCase(Left(typ & trz_nr, Len(bez_9 & trz_nr))) = LCase(bez_9 & trz_nr) And bez_9 <> "" Or _
                    LCase(Left(typ & trz_nr, Len(bez_10 & trz_nr))) = LCase(bez_10 & trz_nr) And bez_10 <> "" Or _
                    LCase(Left(typ & trz_nr, Len(bez_11 & trz_nr))) = LCase(bez_11 & trz_nr) And bez_11 <> "" Or _
                    LCase(Left(typ & trz_nr, Len(bez_12 & trz_nr))) = LCase(bez_12 & trz_nr) And bez_12 <> "" Or _
                    LCase(Left(typ & trz_nr, Len(bez_13 & trz_nr))) = LCase(bez_13 & trz_nr) And bez_13 <> "" Or _
                    LCase(Left(typ & trz_nr, Len(bez_14 & trz_nr))) = LCase(bez_14 & trz_nr) And bez_14 <> "" Or _
                    LCase(Left(typ & trz_nr, Len(bez_15 & trz_nr))) = LCase(bez_15 & trz_nr) And bez_15 <> "" Then treffer_art = rep
            End If
            
SHORTCUT:
            z = z + 1
        Loop Until z = enz + 1

SHORTCUT2:
        rep = rep + 1
    Loop Until rep = 8 Or treffer_art <> 0
            
    For i = 43 To 52
        If Sheets("Konfiguration").Cells(i, 2) <> "" Then
            If Replace(LCase(inhalt), " ", "") = Replace(LCase(Sheets("Konfiguration").Cells(i, 2)), " ", "") Then
                treffer_art = 8
                Exit For
            End If
        End If
    Next
    
    'MsgBox "treffer_art: " & treffer_art & vbCrLf & _
            "prfx: " & prfx & vbCrLf & _
            "trz_typ: " & trz_typ & vbCrLf & _
            "typ: " & typ & vbCrLf & _
            "trz_nr: " & trz_nr & vbCrLf & _
            "nr: " & nr & vbCrLf & _
            "trz_indx: " & trz_indx & vbCrLf & _
            "indx: " & indx & vbCrLf & _
            "trz_sffx: " & trz_sffx & vbCrLf & _
            "sffx: " & sffx & vbCrLf & _
            "trz_inhalt: " & trz_inhalt & vbCrLf & _
            "inhalt: " & inhalt
            
    If treffer_art <> 0 Then
        If trz_typ <> bsp_trz_typ Then MsgBox "Plan erkannt, aber Trennzeichen nach Pr|fffd|fix falsch!" & vbCrLf & """" & prfx & trz_typ & """" & " FALSCH in Dateiname" & vbCrLf & """" & prfx & bsp_trz_typ & """" & " RICHTIG", vbInformation, "Planverwaltung"
        If trz_nr <> bsp_trz_nr Then MsgBox "Plan erkannt, aber Trennzeichen vor Bauteilnummer falsch!" & vbCrLf & """" & typ & trz_nr & nr & """" & " FALSCH in Dateiname" & vbCrLf & """" & typ & bsp_trz_nr & nr & """" & " RICHTIG", vbInformation, "Planverwaltung"
        'If trz_indx <> bsp_trz_indx Then MsgBox "Plan erkannt, aber Trennzeichen vor Index falsch!" & vbCrLf & """" & trz_indx & indx & """" & " FALSCH in Dateiname" & vbCrLf & """" & bsp_trz_indx & indx & """" & " RICHTIG", vbInformation, "Planverwaltung"
        'If trz_sffx <> bsp_trz_sffx Then MsgBox "Plan erkannt, aber Trennzeichen vor Status falsch!" & vbCrLf & """" & trz_sffx & sffx & """" & " FALSCH in Dateiname" & vbCrLf & """" & bsp_trz_sffx & sffx & """" & " RICHTIG", vbInformation, "Planverwaltung"
        'If trz_in <> bsp_trz_in Then MsgBox "Plan erkannt, aber Trennzeichen nach Status falsch!" & vbCrLf & """" & sffx & trz_in & inhalt & """" & " FALSCH in Dateiname" & vbCrLf & """" & sffx & bsp_trz_in & inhalt & """" & " RICHTIG", vbInformation, "Planverwaltung"
    End If
    
    plan = typ & trz_nr & nr
    
    schluessel = plan & "*" & treffer_art & "*" & prfx & "*" & trz_typ & "*" & typ & "*" & trz_nr & "*" & nr & "*" & trz_indx & "*" & indx & "*" & trz_sffx & "*" & sffx & "*" & trz_in & "*" & inhalt
    
End Function

Public Function schluessel2(dokument As String)

Dim ft_bsp_prfx As String, ft_trz_typ As String, ft_bsp_typ As String, ft_bsp_trz_nr As String, ft_bsp_nr As String, ft_trz_indx As String, ft_bsp_indx As String, ft_trz_sffx As String, ft_bsp_sffx As String, ft_trz_in As String, ft_bsp_in As String
Dim u_bsp_prfx As String, u_trz_typ As String, u_bsp_typ As String, u_bsp_trz_nr As String, u_bsp_nr As String, u_trz_indx As String, u_bsp_indx As String, u_trz_sffx As String, u_bsp_sffx As String, u_trz_in As String, u_bsp_in As String
Dim es_bsp_prfx As String, es_trz_typ As String, es_bsp_typ As String, es_bsp_trz_nr As String, es_bsp_nr As String, es_trz_indx As String, es_bsp_indx As String, es_trz_sffx As String, es_bsp_sffx As String, es_trz_in As String, es_bsp_in As String
Dim e_bsp_prfx As String, e_trz_typ As String, e_bsp_typ As String, e_bsp_trz_nr As String, e_bsp_nr As String, e_trz_indx As String, e_bsp_indx As String, e_trz_sffx As String, e_bsp_sffx As String, e_trz_in As String, e_bsp_in As String
Dim ml_bsp_prfx As String, ml_trz_typ As String, ml_bsp_typ As String, ml_bsp_trz_nr As String, ml_bsp_nr As String, ml_trz_indx As String, ml_bsp_indx As String, ml_trz_sffx As String, ml_bsp_sffx As String, ml_trz_in As String, ml_bsp_in As String
Dim ob_bsp_prfx As String, ob_trz_typ As String, ob_bsp_typ As String, ob_bsp_trz_nr As String, ob_bsp_nr As String, ob_trz_indx As String, ob_bsp_indx As String, ob_trz_sffx As String, ob_bsp_sffx As String, ob_trz_in As String, ob_bsp_in As String
Dim wp_bsp_prfx As String, wp_trz_typ As String, wp_bsp_typ As String, wp_bsp_trz_nr As String, wp_bsp_nr As String, wp_trz_indx As String, wp_bsp_indx As String, wp_trz_sffx As String, wp_bsp_sffx As String, wp_trz_in As String, wp_bsp_in As String
Dim bez_1 As String, bez_2 As String, bez_3 As String, bez_4 As String, bez_5 As String
Dim spl() As String
Dim dokument_backup As String

ft_bsp_prfx = Sheets("Konfiguration").Cells(32, 3)
ft_bsp_trz_typ = Sheets("Konfiguration").Cells(32, 4)
ft_bsp_typ = Sheets("Konfiguration").Cells(33, 3)
ft_bsp_trz_nr = Sheets("Konfiguration").Cells(33, 4)
ft_bsp_nr = Sheets("Konfiguration").Cells(34, 3)
ft_bsp_trz_indx = Sheets("Konfiguration").Cells(34, 4)
ft_bsp_indx = Sheets("Konfiguration").Cells(35, 3)
ft_bsp_trz_sffx = Sheets("Konfiguration").Cells(35, 4)
ft_bsp_sffx = Sheets("Konfiguration").Cells(36, 3)
ft_bsp_trz_in = Sheets("Konfiguration").Cells(36, 4)
ft_bsp_in = Sheets("Konfiguration").Cells(37, 3)

u_bsp_prfx = Sheets("Konfiguration").Cells(10, 13)
u_bsp_trz_typ = Sheets("Konfiguration").Cells(10, 14)
u_bsp_typ = Sheets("Konfiguration").Cells(11, 13)
u_bsp_trz_nr = Sheets("Konfiguration").Cells(11, 14)
u_bsp_nr = Sheets("Konfiguration").Cells(12, 13)
u_bsp_trz_indx = Sheets("Konfiguration").Cells(12, 14)
u_bsp_indx = Sheets("Konfiguration").Cells(13, 13)
u_bsp_trz_sffx = Sheets("Konfiguration").Cells(13, 14)
u_bsp_sffx = Sheets("Konfiguration").Cells(14, 13)
u_bsp_trz_in = Sheets("Konfiguration").Cells(14, 14)
u_bsp_in = Sheets("Konfiguration").Cells(15, 13)

e_bsp_prfx = Sheets("Konfiguration").Cells(20, 13)
e_bsp_trz_typ = Sheets("Konfiguration").Cells(20, 14)
e_bsp_typ = Sheets("Konfiguration").Cells(21, 13)
e_bsp_trz_nr = Sheets("Konfiguration").Cells(21, 14)
e_bsp_nr = Sheets("Konfiguration").Cells(22, 13)
e_bsp_trz_indx = Sheets("Konfiguration").Cells(22, 14)
e_bsp_indx = Sheets("Konfiguration").Cells(23, 13)
e_bsp_trz_sffx = Sheets("Konfiguration").Cells(23, 14)
e_bsp_sffx = Sheets("Konfiguration").Cells(24, 13)
e_bsp_trz_in = Sheets("Konfiguration").Cells(24, 14)
e_bsp_in = Sheets("Konfiguration").Cells(25, 13)

es_bsp_prfx = Sheets("Konfiguration").Cells(20, 23)
es_bsp_trz_typ = Sheets("Konfiguration").Cells(20, 24)
es_bsp_typ = Sheets("Konfiguration").Cells(21, 23)
es_bsp_trz_nr = Sheets("Konfiguration").Cells(21, 24)
es_bsp_nr = Sheets("Konfiguration").Cells(22, 23)
es_bsp_trz_indx = Sheets("Konfiguration").Cells(22, 24)
es_bsp_indx = Sheets("Konfiguration").Cells(23, 23)
es_bsp_trz_sffx = Sheets("Konfiguration").Cells(23, 24)
es_bsp_sffx = Sheets("Konfiguration").Cells(24, 23)
es_bsp_trz_in = Sheets("Konfiguration").Cells(24, 24)
es_bsp_in = Sheets("Konfiguration").Cells(25, 23)

ml_bsp_prfx = Sheets("Konfiguration").Cells(20, 33)
ml_bsp_trz_typ = Sheets("Konfiguration").Cells(20, 34)
ml_bsp_typ = Sheets("Konfiguration").Cells(21, 33)
ml_bsp_trz_nr = Sheets("Konfiguration").Cells(21, 34)
ml_bsp_nr = Sheets("Konfiguration").Cells(22, 33)
ml_bsp_trz_indx = Sheets("Konfiguration").Cells(22, 34)
ml_bsp_indx = Sheets("Konfiguration").Cells(23, 33)
ml_bsp_trz_sffx = Sheets("Konfiguration").Cells(23, 34)
ml_bsp_sffx = Sheets("Konfiguration").Cells(24, 33)
ml_bsp_trz_in = Sheets("Konfiguration").Cells(24, 34)
ml_bsp_in = Sheets("Konfiguration").Cells(25, 34)

ob_bsp_prfx = Sheets("Konfiguration").Cells(30, 13)
ob_bsp_trz_typ = Sheets("Konfiguration").Cells(30, 14)
ob_bsp_typ = Sheets("Konfiguration").Cells(31, 13)
ob_bsp_trz_nr = Sheets("Konfiguration").Cells(31, 14)
ob_bsp_nr = Sheets("Konfiguration").Cells(32, 13)
ob_bsp_trz_indx = Sheets("Konfiguration").Cells(32, 14)
ob_bsp_indx = Sheets("Konfiguration").Cells(33, 13)
ob_bsp_trz_sffx = Sheets("Konfiguration").Cells(33, 14)
ob_bsp_sffx = Sheets("Konfiguration").Cells(34, 13)
ob_bsp_trz_in = Sheets("Konfiguration").Cells(34, 14)
ob_bsp_in = Sheets("Konfiguration").Cells(35, 13)

wp_bsp_prfx = Sheets("Konfiguration").Cells(45, 13)
wp_bsp_trz_typ = Sheets("Konfiguration").Cells(45, 14)
wp_bsp_typ = Sheets("Konfiguration").Cells(46, 13)
wp_bsp_trz_nr = Sheets("Konfiguration").Cells(46, 14)
wp_bsp_nr = Sheets("Konfiguration").Cells(47, 13)
wp_bsp_trz_indx = Sheets("Konfiguration").Cells(47, 14)
wp_bsp_indx = Sheets("Konfiguration").Cells(48, 13)
wp_bsp_trz_sffx = Sheets("Konfiguration").Cells(48, 14)
wp_bsp_sffx = Sheets("Konfiguration").Cells(49, 13)
wp_bsp_trz_in = Sheets("Konfiguration").Cells(49, 14)
wp_bsp_in = Sheets("Konfiguration").Cells(50, 13)

sp_ft = 4
stz_ft = 10
enz_ft = 25
sp_u = 9
stz_u = 10
enz_u = 15
sp_e = 9
sp_es = 19
sp_ml = 29
stz_e = 20
enz_e = 25
sp_ob = 9
stz_ob = 30
enz_ob = 39
sp_wp = 9
stz_wp = 45
enz_wp = 54

rep = 1

    'Variablen f|fffd|r den Vergleich von Dateiname mit den Definitionen im Konfiguratiossheet werden besetzt
    'rep = 1 bedeutet Vergleich mit Fertigteile, Rep = 2 bedeutet Vergleich mit |fffd|bersichten e.t.c.
    Do
        If rep = 1 Then
            z_start = 32
            sp_var = 5
            bsp_prfx = ft_bsp_prfx
            bsp_trz_typ = ft_bsp_trz_typ
            bsp_typ = ft_bsp_typ
            bsp_trz_nr = ft_bsp_trz_nr
            bsp_nr = ft_bsp_nr
            bsp_trz_indx = ft_bsp_trz_indx
            bsp_indx = ft_bsp_indx
            bsp_trz_sffx = ft_bsp_trz_sffx
            bsp_sffx = ft_bsp_sffx
            sp = sp_ft
            stz = stz_ft
            enz = enz_ft
        End If
        
        If rep = 2 Then
            z_start = 10
            sp_var = 15
            bsp_prfx = u_bsp_prfx
            bsp_trz_typ = u_bsp_trz_typ
            bsp_typ = u_bsp_typ
            bsp_trz_nr = u_bsp_trz_nr
            bsp_nr = u_bsp_nr
            bsp_trz_indx = u_bsp_trz_indx
            bsp_indx = u_bsp_indx
            bsp_trz_sffx = u_bsp_trz_sffx
            bsp_sffx = u_bsp_sffx
            sp = sp_u
            stz = stz_u
            enz = enz_u
        End If
        
        If rep = 3 Then
            z_start = 20
            sp_var = 15
            bsp_prfx = e_bsp_prfx
            bsp_trz_typ = e_bsp_trz_typ
            bsp_typ = e_bsp_typ
            bsp_trz_nr = e_bsp_trz_nr
            bsp_nr = e_bsp_nr
            bsp_trz_indx = e_bsp_trz_indx
            bsp_indx = e_bsp_indx
            bsp_trz_sffx = e_bsp_trz_sffx
            bsp_sffx = e_bsp_sffx
            sp = sp_e
            stz = stz_e
            enz = enz_e
        End If
        
        If rep = 4 Then
            z_start = 20
            sp_var = 25
            bsp_prfx = es_bsp_prfx
            bsp_trz_typ = es_bsp_trz_typ
            bsp_typ = es_bsp_typ
            bsp_trz_nr = es_bsp_trz_nr
            bsp_nr = es_bsp_nr
            bsp_trz_indx = es_bsp_trz_indx
            bsp_indx = es_bsp_indx
            bsp_trz_sffx = es_bsp_trz_sffx
            bsp_sffx = es_bsp_sffx
            sp = sp_es
            stz = stz_e
            enz = enz_e
        End If
        
        If rep = 5 Then
            z_start = 20
            sp_var = 35
            bsp_prfx = ml_bsp_prfx
            bsp_trz_typ = ml_bsp_trz_typ
            bsp_typ = ml_bsp_typ
            bsp_trz_nr = ml_bsp_trz_nr
            bsp_nr = ml_bsp_nr
            bsp_trz_indx = ml_bsp_trz_indx
            bsp_indx = ml_bsp_indx
            bsp_trz_sffx = ml_bsp_trz_sffx
            bsp_sffx = ml_bsp_sffx
            sp = sp_ml
            stz = stz_e
            enz = enz_e
        End If
        
        If rep = 6 Then
            z_start = 30
            sp_var = 15
            bsp_prfx = ob_bsp_prfx
            bsp_trz_typ = ob_bsp_trz_typ
            bsp_typ = ob_bsp_typ
            bsp_trz_nr = ob_bsp_trz_nr
            bsp_nr = ob_bsp_nr
            bsp_trz_indx = ob_bsp_trz_indx
            bsp_indx = ob_bsp_indx
            bsp_trz_sffx = ob_bsp_trz_sffx
            bsp_sffx = ob_bsp_sffx
            sp = sp_ob
            stz = stz_ob
            enz = enz_ob
        End If
        
        If rep = 7 Then
            z_start = 45
            sp_var = 15
            bsp_prfx = wp_bsp_prfx
            bsp_trz_typ = wp_bsp_trz_typ
            bsp_typ = wp_bsp_typ
            bsp_trz_nr = wp_bsp_trz_nr
            bsp_nr = wp_bsp_nr
            bsp_trz_indx = wp_bsp_trz_indx
            bsp_indx = wp_bsp_indx
            bsp_trz_sffx = wp_bsp_trz_sffx
            bsp_sffx = wp_bsp_sffx
            sp = sp_wp
            stz = stz_wp
            enz = enz_wp
        End If
        'Zur Anwendung des Planschl|fffd|ssels stellt das Makro fest, an welcher Stelle evtl. eine Variabilit|fffd|t der Zeichenl|fffd|nge vorliegt
        vari = 0
        For i = z_start To z_start + 5
            If Sheets("Konfiguration").Cells(i, sp_var) = "x" Then vari = i - z_start + 1
        Next

        dokument_backup = dokument
        dokument = dokument & bsp_trz_sffx & bsp_sffx & ".pdf"
        
        'MsgBox "dokument: " & dokument & vbCrLf & _
                "dokument_backup: " & dokument_backup
        
        If vari = 1 And Len(dokument) - 4 < Len(bsp_trz_typ & bsp_typ & bsp_trz_nr & bsp_nr & bsp_trz_indx & bsp_indx & bsp_trz_sffx & bsp_sffx & bsp_trz_in & bsp_in) Then GoTo SHORTCUT2
        If vari = 2 And Len(dokument) - 4 < Len(bsp_prfx & bsp_trz_typ & bsp_trz_nr & bsp_nr & bsp_trz_indx & bsp_indx & bsp_trz_sffx & bsp_sffx & bsp_trz_in & bsp_in) Then GoTo SHORTCUT2
        If vari = 3 And Len(dokument) - 4 < Len(bsp_prfx & bsp_trz_typ & bsp_typ & bsp_nr & bsp_trz_indx & bsp_indx & bsp_trz_sffx & bsp_sffx & bsp_trz_in & bsp_in) Then GoTo SHORTCUT2
        If vari = 4 And Len(dokument) - 4 < Len(bsp_prfx & bsp_trz_typ & bsp_typ & bsp_trz_nr & bsp_nr & bsp_indx & bsp_trz_sffx & bsp_sffx & bsp_trz_in & bsp_in) Then GoTo SHORTCUT2
        If vari = 5 And Len(dokument) - 4 < Len(bsp_prfx & bsp_trz_typ & bsp_typ & bsp_trz_nr & bsp_nr & bsp_trz_indx & bsp_indx & bsp_trz_sffx & bsp_trz_in & bsp_in) Then GoTo SHORTCUT2
        If vari = 6 And Len(dokument) - 4 < Len(bsp_prfx & bsp_trz_typ & bsp_typ & bsp_trz_nr & bsp_nr & bsp_trz_indx & bsp_indx & bsp_trz_sffx & bsp_sffx & bsp_trz_in) Then GoTo SHORTCUT2
        
        'Der Dateiname wird f|fffd|r den Vergleich aufgeschl|fffd|sselt
        If vari = 0 Then
            prfx = Left(dokument, Len(bsp_prfx))
            trz_typ = Mid(dokument, Len(prfx) + 1, Len(bsp_trz_typ))
            typ = Mid(dokument, Len(prfx & trz_typ) + 1, Len(bsp_typ))
            trz_nr = Mid(dokument, Len(prfx & trz_typ & typ) + 1, Len(bsp_trz_nr))
            nr = Mid(dokument, Len(prfx & trz_typ & typ & trz_nr) + 1, Len(bsp_nr))
            trz_indx = Mid(dokument, Len(prfx & trz_typ & typ & trz_nr & nr) + 1, Len(bsp_trz_indx))
            indx = Mid(dokument, Len(prfx & trz_typ & typ & trz_nr & nr & trz_indx) + 1, Len(bsp_indx))
            trz_sffx = Mid(dokument, Len(prfx & trz_typ & typ & trz_nr & nr & trz_indx & indx) + 1, Len(bsp_trz_sffx))
            sffx = Mid(dokument, Len(prfx & trz_typ & typ & trz_nr & nr & trz_indx & indx & trz_sffx) + 1, Len(bsp_sffx))
            trz_in = Mid(dokument, Len(prfx & trz_typ & typ & trz_nr & nr & trz_indx & indx & trz_sffx & sffx) + 1, Len(bsp_trz_in))
            inhalt = Mid(dokument, Len(prfx & trz_typ & typ & trz_nr & nr & trz_indx & indx & trz_sffx & sffx & trz_in) + 1, Len(bsp_in))
        End If
            
        If vari = 1 Then
            inhalt = Mid(dokument, Len(dokument) - Len(bsp_in) - 3, Len(bsp_in))
            trz_in = Mid(dokument, Len(dokument) - Len(bsp_trz_in & inhalt) - 3, Len(bsp_trz_in))
            sffx = Mid(dokument, Len(dokument) - Len(bsp_sffx & trz_in & inhalt) - 3, Len(bsp_sffx))
            trz_sffx = Mid(dokument, Len(dokument) - Len(bsp_trz_sffx & sffx & trz_in & inhalt) - 3, Len(bsp_trz_sffx))
            indx = Mid(dokument, Len(dokument) - Len(bsp_indx & trz_sffx & sffx & trz_in & inhalt) - 3, Len(bsp_indx))
            trz_indx = Mid(dokument, Len(dokument) - Len(bsp_trz_indx & indx & trz_sffx & sffx & trz_in & inhalt) - 3, Len(bsp_trz_indx))
            nr = Mid(dokument, Len(dokument) - Len(bsp_nr & trz_indx & indx & trz_sffx & sffx & trz_in & inhalt) - 3, Len(bsp_nr))
            trz_nr = Mid(dokument, Len(dokument) - Len(bsp_trz_nr & nr & trz_indx & indx & trz_sffx & sffx & trz_in & inhalt) - 3, Len(bsp_trz_nr))
            typ = Mid(dokument, Len(dokument) - Len(bsp_typ & trz_nr & nr & trz_indx & indx & trz_sffx & sffx & trz_in & inhalt) - 3, Len(bsp_typ))
            trz_typ = Mid(dokument, Len(dokument) - Len(bsp_trz_typ & typ & trz_nr & nr & trz_indx & indx & trz_sffx & sffx & trz_in & inhalt) - 3, Len(bsp_trz_typ))
            prfx = Left(dokument, Len(dokument) - Len(trz_typ & typ & trz_nr & nr & trz_indx & indx & trz_sffx & sffx & trz_in & inhalt) - 4)
        End If
        
        If vari = 2 Then
            prfx = Left(dokument, Len(bsp_prfx))
            trz_typ = Mid(dokument, Len(prfx) + 1, Len(bsp_trz_typ))
            inhalt = Mid(dokument, Len(dokument) - Len(bsp_in) - 3, Len(bsp_in))
            trz_in = Mid(dokument, Len(dokument) - Len(bsp_trz_in & inhalt) - 3, Len(bsp_trz_in))
            sffx = Mid(dokument, Len(dokument) - Len(bsp_sffx & trz_in & inhalt) - 3, Len(bsp_sffx))
            trz_sffx = Mid(dokument, Len(dokument) - Len(bsp_trz_sffx & sffx & trz_in & inhalt) - 3, Len(bsp_trz_sffx))
            indx = Mid(dokument, Len(dokument) - Len(bsp_indx & trz_sffx & sffx & trz_in & inhalt) - 3, Len(bsp_indx))
            trz_indx = Mid(dokument, Len(dokument) - Len(bsp_trz_indx & indx & trz_sffx & sffx & trz_in & inhalt) - 3, Len(bsp_trz_indx))
            nr = Mid(dokument, Len(dokument) - Len(bsp_nr & trz_indx & indx & trz_sffx & sffx & trz_in & inhalt) - 3, Len(bsp_nr))
            trz_nr = Mid(dokument, Len(dokument) - Len(bsp_trz_nr & nr & trz_indx & indx & trz_sffx & sffx & trz_in & inhalt) - 3, Len(bsp_trz_nr))
            typ = Mid(dokument, Len(prfx & trz_typ) + 1, Len(dokument) - Len(prfx & trz_typ & trz_nr & nr & trz_indx & indx & trz_sffx & sffx & trz_in & inhalt) - 4)
        End If
        
        If vari = 3 Then
            prfx = Left(dokument, Len(bsp_prfx))
            trz_typ = Mid(dokument, Len(prfx) + 1, Len(bsp_trz_typ))
            typ = Mid(dokument, Len(prfx & trz_typ) + 1, Len(bsp_typ))
            trz_nr = Mid(dokument, Len(prfx & trz_typ & typ) + 1, Len(bsp_trz_nr))
            inhalt = Mid(dokument, Len(dokument) - Len(bsp_in) - 3, Len(bsp_in))
            trz_in = Mid(dokument, Len(dokument) - Len(bsp_trz_in & inhalt) - 3, Len(bsp_trz_in))
            sffx = Mid(dokument, Len(dokument) - Len(bsp_sffx & trz_in & inhalt) - 3, Len(bsp_sffx))
            trz_sffx = Mid(dokument, Len(dokument) - Len(bsp_trz_sffx & sffx & trz_in & inhalt) - 3, Len(bsp_trz_sffx))
            indx = Mid(dokument, Len(dokument) - Len(bsp_indx & trz_sffx & sffx & trz_in & inhalt) - 3, Len(bsp_indx))
            trz_indx = Mid(dokument, Len(dokument) - Len(bsp_trz_indx & indx & trz_sffx & sffx & trz_in & inhalt) - 3, Len(bsp_trz_indx))
            nr = Mid(dokument, Len(prfx & trz_typ & typ & trz_nr) + 1, Len(dokument) - Len(prfx & trz_typ & typ & trz_nr & trz_indx & indx & trz_sffx & sffx & trz_in & inhalt) - 4)
        End If
    
        If vari = 4 Then
            prfx = Left(dokument, Len(bsp_prfx))
            trz_typ = Mid(dokument, Len(prfx) + 1, Len(bsp_trz_typ))
            typ = Mid(dokument, Len(prfx & trz_typ) + 1, Len(bsp_typ))
            trz_nr = Mid(dokument, Len(prfx & trz_typ & typ) + 1, Len(bsp_trz_nr))
            nr = Mid(dokument, Len(prfx & trz_typ & typ & trz_nr) + 1, Len(bsp_nr))
            trz_indx = Mid(dokument, Len(prfx & trz_typ & typ & trz_nr & nr) + 1, Len(bsp_trz_indx))
            inhalt = Mid(dokument, Len(dokument) - Len(bsp_in) - 3, Len(bsp_in))
            trz_in = Mid(dokument, Len(dokument) - Len(bsp_trz_in & inhalt) - 3, Len(bsp_trz_in))
            sffx = Mid(dokument, Len(dokument) - Len(bsp_sffx & trz_in & inhalt) - 3, Len(bsp_sffx))
            trz_sffx = Mid(dokument, Len(dokument) - Len(bsp_trz_sffx & sffx & trz_in & inhalt) - 3, Len(bsp_trz_sffx))
            indx = Mid(dokument, Len(prfx & trz_typ & typ & trz_nr & nr & trz_indx) + 1, Len(dokument) - Len(prfx & trz_typ & typ & trz_nr & nr & trz_indx & trz_sffx & sffx & trz_in & inhalt) - 4)
        End If
        
        If vari = 5 Then
            prfx = Left(dokument, Len(bsp_prfx))
            trz_typ = Mid(dokument, Len(prfx) + 1, Len(bsp_trz_typ))
            typ = Mid(dokument, Len(prfx & trz_typ) + 1, Len(bsp_typ))
            trz_nr = Mid(dokument, Len(prfx & trz_typ & typ) + 1, Len(bsp_trz_nr))
            nr = Mid(dokument, Len(prfx & trz_typ & typ & trz_nr) + 1, Len(bsp_nr))
            trz_indx = Mid(dokument, Len(prfx & trz_typ & typ & trz_nr & nr) + 1, Len(bsp_trz_indx))
            indx = Mid(dokument, Len(prfx & trz_typ & typ & trz_nr & nr & trz_indx) + 1, Len(bsp_indx))
            trz_sffx = Mid(dokument, Len(prfx & trz_typ & typ & trz_nr & nr & trz_indx & indx) + 1, Len(bsp_trz_sffx))
            inhalt = Mid(dokument, Len(dokument) - Len(bsp_in) - 3, Len(bsp_in))
            trz_in = Mid(dokument, Len(dokument) - Len(bsp_trz_in & inhalt) - 3, Len(bsp_trz_in))
            sffx = Mid(dokument, Len(prfx & trz_typ & typ & trz_nr & nr & trz_indx & indx & trz_sffx) + 1, Len(dokument) - Len(prfx & trz_typ & typ & trz_nr & nr & trz_indx & indx & trz_sffx & trz_in & inhalt) - 4)
        End If
        
        If vari = 6 Then
            prfx = Left(dokument, Len(bsp_prfx))
            trz_typ = Mid(dokument, Len(prfx) + 1, Len(bsp_trz_typ))
            typ = Mid(dokument, Len(prfx & trz_typ) + 1, Len(bsp_typ))
            trz_nr = Mid(dokument, Len(prfx & trz_typ & typ) + 1, Len(bsp_trz_nr))
            nr = Mid(dokument, Len(prfx & trz_typ & typ & trz_nr) + 1, Len(bsp_nr))
            trz_indx = Mid(dokument, Len(prfx & trz_typ & typ & trz_nr & nr) + 1, Len(bsp_trz_indx))
            indx = Mid(dokument, Len(prfx & trz_typ & typ & trz_nr & nr & trz_indx) + 1, Len(bsp_indx))
            trz_sffx = Mid(dokument, Len(prfx & trz_typ & typ & trz_nr & nr & trz_indx & indx) + 1, Len(bsp_trz_sffx))
            sffx = Mid(dokument, Len(prfx & trz_typ & typ & trz_nr & nr & trz_indx & indx & trz_sffx) + 1, Len(bsp_sffx))
            trz_in = Mid(dokument, Len(prfx & trz_typ & typ & trz_nr & nr & trz_indx & indx & trz_sffx & sffx) + 1, Len(bsp_trz_in))
            inhalt = Mid(dokument, Len(prfx & trz_typ & typ & trz_nr & nr & trz_indx & indx & trz_sffx & sffx & trz_in) + 1, Len(dokument) - Len(prfx & trz_typ & typ & trz_nr & nr & trz_indx & indx & trz_sffx & sffx & trz_in) - 4)
        End If
        
        'Die zu erkennenden Plan- bzw. Bauteiltypen werden eingelesen
        z = stz
        
        Do
            bez_1 = ""
            bez_2 = ""
            bez_3 = ""
            bez_4 = ""
            bez_5 = ""
            bez_6 = ""
            bez_7 = ""
            bez_8 = ""
            bez_9 = ""
            bez_10 = ""
            bez_11 = ""
            bez_12 = ""
            bez_13 = ""
            bez_14 = ""
            bez_15 = ""
            
            If Sheets("Konfiguration").Cells(z, sp) = "" Then GoTo SHORTCUT
        
            For st = 1 To Len(Sheets("Konfiguration").Cells(z, sp))
                If Mid(Sheets("Konfiguration").Cells(z, sp), st, 1) <> "," Then bez_1 = Sheets("Konfiguration").Cells(z, sp)
            Next
    
            For st = 1 To Len(Sheets("Konfiguration").Cells(z, sp))
                If Mid(Sheets("Konfiguration").Cells(z, sp), st, 1) = "," Then
                    spl() = Split(Replace(Sheets("Konfiguration").Cells(z, sp), " ", ""), ",")
                        For i = LBound(spl) To UBound(spl)
                            If i = 0 Then bez_1 = spl(i)
                            If i = 1 Then bez_2 = spl(i)
                            If i = 2 Then bez_3 = spl(i)
                            If i = 3 Then bez_4 = spl(i)
                            If i = 4 Then bez_5 = spl(i)
                            If i = 5 Then bez_6 = spl(i)
                            If i = 6 Then bez_7 = spl(i)
                            If i = 7 Then bez_8 = spl(i)
                            If i = 8 Then bez_9 = spl(i)
                            If i = 9 Then bez_10 = spl(i)
                            If i = 10 Then bez_11 = spl(i)
                            If i = 11 Then bez_12 = spl(i)
                            If i = 12 Then bez_13 = spl(i)
                            If i = 13 Then bez_14 = spl(i)
                            If i = 14 Then bez_15 = spl(i)
                        Next
                End If
            Next
            
            'Abgleich
            If Len(typ & trz_nr) > Len(bez_1 & trz_nr) And Len(typ & trz_nr) > Len(bez_2 & trz_nr) And Len(typ & trz_nr) > Len(bez_3 & trz_nr) And Len(typ & trz_nr) > Len(bez_4 & trz_nr) And Len(typ & trz_nr) > Len(bez_5 & trz_nr) Then
                If LCase(Left(typ & trz_nr, Len(bez_1 & trz_nr))) = LCase(bez_1 & trz_nr) And bez_1 <> "" And IsNumeric(Mid(typ & trz_nr, Len(bez_1 & trz_nr) + 1, 1)) = True Or _
                    LCase(Left(typ & trz_nr, Len(bez_2 & trz_nr))) = LCase(bez_2 & trz_nr) And bez_2 <> "" And IsNumeric(Mid(typ & trz_nr, Len(bez_2 & trz_nr) + 1, 1)) = True Or _
                    LCase(Left(typ & trz_nr, Len(bez_3 & trz_nr))) = LCase(bez_3 & trz_nr) And bez_3 <> "" And IsNumeric(Mid(typ & trz_nr, Len(bez_3 & trz_nr) + 1, 1)) = True Or _
                    LCase(Left(typ & trz_nr, Len(bez_4 & trz_nr))) = LCase(bez_4 & trz_nr) And bez_4 <> "" And IsNumeric(Mid(typ & trz_nr, Len(bez_4 & trz_nr) + 1, 1)) = True Or _
                    LCase(Left(typ & trz_nr, Len(bez_5 & trz_nr))) = LCase(bez_5 & trz_nr) And bez_5 <> "" And IsNumeric(Mid(typ & trz_nr, Len(bez_5 & trz_nr) + 1, 1)) = True Or _
                    LCase(Left(typ & trz_nr, Len(bez_6 & trz_nr))) = LCase(bez_6 & trz_nr) And bez_6 <> "" And IsNumeric(Mid(typ & trz_nr, Len(bez_6 & trz_nr) + 1, 1)) = True Or _
                    LCase(Left(typ & trz_nr, Len(bez_7 & trz_nr))) = LCase(bez_7 & trz_nr) And bez_7 <> "" And IsNumeric(Mid(typ & trz_nr, Len(bez_7 & trz_nr) + 1, 1)) = True Or _
                    LCase(Left(typ & trz_nr, Len(bez_8 & trz_nr))) = LCase(bez_8 & trz_nr) And bez_8 <> "" And IsNumeric(Mid(typ & trz_nr, Len(bez_8 & trz_nr) + 1, 1)) = True Or _
                    LCase(Left(typ & trz_nr, Len(bez_9 & trz_nr))) = LCase(bez_9 & trz_nr) And bez_9 <> "" And IsNumeric(Mid(typ & trz_nr, Len(bez_9 & trz_nr) + 1, 1)) = True Or _
                    LCase(Left(typ & trz_nr, Len(bez_10 & trz_nr))) = LCase(bez_10 & trz_nr) And bez_10 <> "" And IsNumeric(Mid(typ & trz_nr, Len(bez_10 & trz_nr) + 1, 1)) = True Or _
                    LCase(Left(typ & trz_nr, Len(bez_11 & trz_nr))) = LCase(bez_11 & trz_nr) And bez_11 <> "" And IsNumeric(Mid(typ & trz_nr, Len(bez_11 & trz_nr) + 1, 1)) = True Or _
                    LCase(Left(typ & trz_nr, Len(bez_12 & trz_nr))) = LCase(bez_12 & trz_nr) And bez_12 <> "" And IsNumeric(Mid(typ & trz_nr, Len(bez_12 & trz_nr) + 1, 1)) = True Or _
                    LCase(Left(typ & trz_nr, Len(bez_13 & trz_nr))) = LCase(bez_13 & trz_nr) And bez_13 <> "" And IsNumeric(Mid(typ & trz_nr, Len(bez_13 & trz_nr) + 1, 1)) = True Or _
                    LCase(Left(typ & trz_nr, Len(bez_14 & trz_nr))) = LCase(bez_14 & trz_nr) And bez_14 <> "" And IsNumeric(Mid(typ & trz_nr, Len(bez_14 & trz_nr) + 1, 1)) = True Or _
                    LCase(Left(typ & trz_nr, Len(bez_15 & trz_nr))) = LCase(bez_15 & trz_nr) And bez_15 <> "" And IsNumeric(Mid(typ & trz_nr, Len(bez_15 & trz_nr) + 1, 1)) = True Then treffer_art = rep
            Else
                If LCase(Left(typ & trz_nr, Len(bez_1 & trz_nr))) = LCase(bez_1 & trz_nr) And bez_1 <> "" Or _
                    LCase(Left(typ & trz_nr, Len(bez_2 & trz_nr))) = LCase(bez_2 & trz_nr) And bez_2 <> "" Or _
                    LCase(Left(typ & trz_nr, Len(bez_3 & trz_nr))) = LCase(bez_3 & trz_nr) And bez_3 <> "" Or _
                    LCase(Left(typ & trz_nr, Len(bez_4 & trz_nr))) = LCase(bez_4 & trz_nr) And bez_4 <> "" Or _
                    LCase(Left(typ & trz_nr, Len(bez_5 & trz_nr))) = LCase(bez_5 & trz_nr) And bez_5 <> "" Or _
                    LCase(Left(typ & trz_nr, Len(bez_6 & trz_nr))) = LCase(bez_6 & trz_nr) And bez_6 <> "" Or _
                    LCase(Left(typ & trz_nr, Len(bez_7 & trz_nr))) = LCase(bez_7 & trz_nr) And bez_7 <> "" Or _
                    LCase(Left(typ & trz_nr, Len(bez_8 & trz_nr))) = LCase(bez_8 & trz_nr) And bez_8 <> "" Or _
                    LCase(Left(typ & trz_nr, Len(bez_9 & trz_nr))) = LCase(bez_9 & trz_nr) And bez_9 <> "" Or _
                    LCase(Left(typ & trz_nr, Len(bez_10 & trz_nr))) = LCase(bez_10 & trz_nr) And bez_10 <> "" Or _
                    LCase(Left(typ & trz_nr, Len(bez_11 & trz_nr))) = LCase(bez_11 & trz_nr) And bez_11 <> "" Or _
                    LCase(Left(typ & trz_nr, Len(bez_12 & trz_nr))) = LCase(bez_12 & trz_nr) And bez_12 <> "" Or _
                    LCase(Left(typ & trz_nr, Len(bez_13 & trz_nr))) = LCase(bez_13 & trz_nr) And bez_13 <> "" Or _
                    LCase(Left(typ & trz_nr, Len(bez_14 & trz_nr))) = LCase(bez_14 & trz_nr) And bez_14 <> "" Or _
                    LCase(Left(typ & trz_nr, Len(bez_15 & trz_nr))) = LCase(bez_15 & trz_nr) And bez_15 <> "" Then treffer_art = rep
            End If

SHORTCUT:
            z = z + 1
        Loop Until z = enz + 1
SHORTCUT2:
        rep = rep + 1
        
    Loop Until rep = 8 Or treffer_art <> 0
    
    'MsgBox "treffer_art: " & treffer_art & vbCrLf & _
        "prfx: " & prfx & vbCrLf & _
        "typ: " & typ & vbCrLf & _
        "trz_nr: " & trz_nr & vbCrLf & _
        "nr: " & nr & vbCrLf & _
        "indx: " & indx & vbCrLf & _
        "sffx: " & sffx & vbCrLf & _
        "inhalt: " & inhalt
    
    plan = typ & trz_nr & nr
    
    schluessel2 = plan & "*" & treffer_art & "*" & prfx & "*" & bsp_trz_typ & "*" & typ & "*" & bsp_trz_nr & "*" & nr & "*" & bsp_trz_indx & "*" & indx & "*" & bsp_trz_sffx & "*" & sffx & "*" & bsp_trz_in & "*" & inhalt
    
End Function
Sub testschluessel3()

MsgBox schluessel3("88001")

End Sub
Public Function schluessel3(dokument As String)

Dim bsp_prfx As String, bsp_trz_typ As String, bsp_typ As String, bsp_trz_nr As String, bsp_nr As String, bsp_trz_indx As String, bsp_indx As String, bsp_trz_sffx As String, bsp_sffx As String, bsp_trz_in As String, bsp_in As String
Dim ft_bsp_prfx As String, ft_trz_typ As String, ft_bsp_typ As String, ft_bsp_trz_nr As String, ft_bsp_nr As String, ft_trz_indx As String, ft_bsp_indx As String, ft_trz_sffx As String, ft_bsp_sffx As String, ft_trz_in As String, ft_bsp_in As String
Dim u_bsp_prfx As String, u_trz_typ As String, u_bsp_typ As String, u_bsp_trz_nr As String, u_bsp_nr As String, u_trz_indx As String, u_bsp_indx As String, u_trz_sffx As String, u_bsp_sffx As String, u_trz_in As String, u_bsp_in As String
Dim es_bsp_prfx As String, es_trz_typ As String, es_bsp_typ As String, es_bsp_trz_nr As String, es_bsp_nr As String, es_trz_indx As String, es_bsp_indx As String, es_trz_sffx As String, es_bsp_sffx As String, es_trz_in As String, es_bsp_in As String
Dim e_bsp_prfx As String, e_trz_typ As String, e_bsp_typ As String, e_bsp_trz_nr As String, e_bsp_nr As String, e_trz_indx As String, e_bsp_indx As String, e_trz_sffx As String, e_bsp_sffx As String, e_trz_in As String, e_bsp_in As String
Dim ml_bsp_prfx As String, ml_trz_typ As String, ml_bsp_typ As String, ml_bsp_trz_nr As String, ml_bsp_nr As String, ml_trz_indx As String, ml_bsp_indx As String, ml_trz_sffx As String, ml_bsp_sffx As String, ml_trz_in As String, ml_bsp_in As String
Dim ob_bsp_prfx As String, ob_trz_typ As String, ob_bsp_typ As String, ob_bsp_trz_nr As String, ob_bsp_nr As String, ob_trz_indx As String, ob_bsp_indx As String, ob_trz_sffx As String, ob_bsp_sffx As String, ob_trz_in As String, ob_bsp_in As String
Dim wp_bsp_prfx As String, wp_trz_typ As String, wp_bsp_typ As String, wp_bsp_trz_nr As String, wp_bsp_nr As String, wp_trz_indx As String, wp_bsp_indx As String, wp_trz_sffx As String, wp_bsp_sffx As String, wp_trz_in As String, wp_bsp_in As String
Dim bez_1 As String, bez_2 As String, bez_3 As String, bez_4 As String, bez_5 As String
Dim spl() As String
Dim dokument_backup As String

ft_bsp_prfx = ThisWorkbook.Sheets("Konfiguration").Cells(32, 3)
ft_bsp_trz_typ = ThisWorkbook.Sheets("Konfiguration").Cells(32, 4)
ft_bsp_typ = ThisWorkbook.Sheets("Konfiguration").Cells(33, 3)
ft_bsp_trz_nr = ThisWorkbook.Sheets("Konfiguration").Cells(33, 4)
ft_bsp_nr = ThisWorkbook.Sheets("Konfiguration").Cells(34, 3)
ft_bsp_trz_indx = ThisWorkbook.Sheets("Konfiguration").Cells(34, 4)
ft_bsp_indx = ThisWorkbook.Sheets("Konfiguration").Cells(35, 3)
ft_bsp_trz_sffx = ThisWorkbook.Sheets("Konfiguration").Cells(35, 4)
ft_bsp_sffx = ThisWorkbook.Sheets("Konfiguration").Cells(36, 3)
ft_bsp_trz_in = ThisWorkbook.Sheets("Konfiguration").Cells(36, 4)
ft_bsp_in = ThisWorkbook.Sheets("Konfiguration").Cells(37, 3)

u_bsp_prfx = ThisWorkbook.Sheets("Konfiguration").Cells(10, 13)
u_bsp_trz_typ = ThisWorkbook.Sheets("Konfiguration").Cells(10, 14)
u_bsp_typ = ThisWorkbook.Sheets("Konfiguration").Cells(11, 13)
u_bsp_trz_nr = ThisWorkbook.Sheets("Konfiguration").Cells(11, 14)
u_bsp_nr = ThisWorkbook.Sheets("Konfiguration").Cells(12, 13)
u_bsp_trz_indx = ThisWorkbook.Sheets("Konfiguration").Cells(12, 14)
u_bsp_indx = ThisWorkbook.Sheets("Konfiguration").Cells(13, 13)
u_bsp_trz_sffx = ThisWorkbook.Sheets("Konfiguration").Cells(13, 14)
u_bsp_sffx = ThisWorkbook.Sheets("Konfiguration").Cells(14, 13)
u_bsp_trz_in = ThisWorkbook.Sheets("Konfiguration").Cells(14, 14)
u_bsp_in = ThisWorkbook.Sheets("Konfiguration").Cells(15, 13)

e_bsp_prfx = ThisWorkbook.Sheets("Konfiguration").Cells(20, 13)
e_bsp_trz_typ = ThisWorkbook.Sheets("Konfiguration").Cells(20, 14)
e_bsp_typ = ThisWorkbook.Sheets("Konfiguration").Cells(21, 13)
e_bsp_trz_nr = ThisWorkbook.Sheets("Konfiguration").Cells(21, 14)
e_bsp_nr = ThisWorkbook.Sheets("Konfiguration").Cells(22, 13)
e_bsp_trz_indx = ThisWorkbook.Sheets("Konfiguration").Cells(22, 14)
e_bsp_indx = ThisWorkbook.Sheets("Konfiguration").Cells(23, 13)
e_bsp_trz_sffx = ThisWorkbook.Sheets("Konfiguration").Cells(23, 14)
e_bsp_sffx = ThisWorkbook.Sheets("Konfiguration").Cells(24, 13)
e_bsp_trz_in = ThisWorkbook.Sheets("Konfiguration").Cells(24, 14)
e_bsp_in = ThisWorkbook.Sheets("Konfiguration").Cells(25, 13)

es_bsp_prfx = ThisWorkbook.Sheets("Konfiguration").Cells(20, 23)
es_bsp_trz_typ = ThisWorkbook.Sheets("Konfiguration").Cells(20, 24)
es_bsp_typ = ThisWorkbook.Sheets("Konfiguration").Cells(21, 23)
es_bsp_trz_nr = ThisWorkbook.Sheets("Konfiguration").Cells(21, 24)
es_bsp_nr = ThisWorkbook.Sheets("Konfiguration").Cells(22, 23)
es_bsp_trz_indx = ThisWorkbook.Sheets("Konfiguration").Cells(22, 24)
es_bsp_indx = ThisWorkbook.Sheets("Konfiguration").Cells(23, 23)
es_bsp_trz_sffx = ThisWorkbook.Sheets("Konfiguration").Cells(23, 24)
es_bsp_sffx = ThisWorkbook.Sheets("Konfiguration").Cells(24, 23)
es_bsp_trz_in = ThisWorkbook.Sheets("Konfiguration").Cells(24, 24)
es_bsp_in = ThisWorkbook.Sheets("Konfiguration").Cells(25, 23)

ml_bsp_prfx = ThisWorkbook.Sheets("Konfiguration").Cells(20, 33)
ml_bsp_trz_typ = ThisWorkbook.Sheets("Konfiguration").Cells(20, 34)
ml_bsp_typ = ThisWorkbook.Sheets("Konfiguration").Cells(21, 33)
ml_bsp_trz_nr = ThisWorkbook.Sheets("Konfiguration").Cells(21, 34)
ml_bsp_nr = ThisWorkbook.Sheets("Konfiguration").Cells(22, 33)
ml_bsp_trz_indx = ThisWorkbook.Sheets("Konfiguration").Cells(22, 34)
ml_bsp_indx = ThisWorkbook.Sheets("Konfiguration").Cells(23, 33)
ml_bsp_trz_sffx = ThisWorkbook.Sheets("Konfiguration").Cells(23, 34)
ml_bsp_sffx = ThisWorkbook.Sheets("Konfiguration").Cells(24, 33)
ml_bsp_trz_in = ThisWorkbook.Sheets("Konfiguration").Cells(24, 34)
ml_bsp_in = ThisWorkbook.Sheets("Konfiguration").Cells(25, 34)

ob_bsp_prfx = ThisWorkbook.Sheets("Konfiguration").Cells(30, 13)
ob_bsp_trz_typ = ThisWorkbook.Sheets("Konfiguration").Cells(30, 14)
ob_bsp_typ = ThisWorkbook.Sheets("Konfiguration").Cells(31, 13)
ob_bsp_trz_nr = ThisWorkbook.Sheets("Konfiguration").Cells(31, 14)
ob_bsp_nr = ThisWorkbook.Sheets("Konfiguration").Cells(32, 13)
ob_bsp_trz_indx = ThisWorkbook.Sheets("Konfiguration").Cells(32, 14)
ob_bsp_indx = ThisWorkbook.Sheets("Konfiguration").Cells(33, 13)
ob_bsp_trz_sffx = ThisWorkbook.Sheets("Konfiguration").Cells(33, 14)
ob_bsp_sffx = ThisWorkbook.Sheets("Konfiguration").Cells(34, 13)
ob_bsp_trz_in = ThisWorkbook.Sheets("Konfiguration").Cells(34, 14)
ob_bsp_in = ThisWorkbook.Sheets("Konfiguration").Cells(35, 13)

wp_bsp_prfx = ThisWorkbook.Sheets("Konfiguration").Cells(45, 13)
wp_bsp_trz_typ = ThisWorkbook.Sheets("Konfiguration").Cells(45, 14)
wp_bsp_typ = ThisWorkbook.Sheets("Konfiguration").Cells(46, 13)
wp_bsp_trz_nr = ThisWorkbook.Sheets("Konfiguration").Cells(46, 14)
wp_bsp_nr = ThisWorkbook.Sheets("Konfiguration").Cells(47, 13)
wp_bsp_trz_indx = ThisWorkbook.Sheets("Konfiguration").Cells(47, 14)
wp_bsp_indx = ThisWorkbook.Sheets("Konfiguration").Cells(48, 13)
wp_bsp_trz_sffx = ThisWorkbook.Sheets("Konfiguration").Cells(48, 14)
wp_bsp_sffx = ThisWorkbook.Sheets("Konfiguration").Cells(49, 13)
wp_bsp_trz_in = ThisWorkbook.Sheets("Konfiguration").Cells(49, 14)
wp_bsp_in = ThisWorkbook.Sheets("Konfiguration").Cells(50, 13)

sp_ft = 4
stz_ft = 10
enz_ft = 25
sp_u = 9
stz_u = 10
enz_u = 15
sp_e = 9
sp_es = 19
sp_ml = 29
stz_e = 20
enz_e = 25
sp_ob = 9
stz_ob = 30
enz_ob = 39
sp_wp = 9
stz_wp = 45
enz_wp = 54

rep = 1

dokument_backup = dokument
    
    'Variablen f|fffd|r den Vergleich von Dateiname mit den Definitionen im Konfiguratiossheet werden besetzt
    'rep = 1 bedeutet Vergleich mit Fertigteile, Rep = 2 bedeutet Vergleich mit |fffd|bersichten e.t.c.
    Do
        If rep = 1 Then
            z_start = 32
            sp_var = 5
            bsp_prfx = ft_bsp_prfx
            bsp_trz_typ = ft_bsp_trz_typ
            bsp_typ = ft_bsp_typ
            bsp_trz_nr = ft_bsp_trz_nr
            bsp_nr = ft_bsp_nr
            bsp_trz_indx = ft_bsp_trz_indx
            bsp_indx = ft_bsp_indx
            bsp_trz_sffx = ft_bsp_trz_sffx
            bsp_sffx = ft_bsp_sffx
            sp = sp_ft
            stz = stz_ft
            enz = enz_ft
        End If
        
        If rep = 2 Then
            z_start = 10
            sp_var = 15
            bsp_prfx = u_bsp_prfx
            bsp_trz_typ = u_bsp_trz_typ
            bsp_typ = u_bsp_typ
            bsp_trz_nr = u_bsp_trz_nr
            bsp_nr = u_bsp_nr
            bsp_trz_indx = u_bsp_trz_indx
            bsp_indx = u_bsp_indx
            bsp_trz_sffx = u_bsp_trz_sffx
            bsp_sffx = u_bsp_sffx
            sp = sp_u
            stz = stz_u
            enz = enz_u
        End If
        
        If rep = 3 Then
            z_start = 20
            sp_var = 15
            bsp_prfx = e_bsp_prfx
            bsp_trz_typ = e_bsp_trz_typ
            bsp_typ = e_bsp_typ
            bsp_trz_nr = e_bsp_trz_nr
            bsp_nr = e_bsp_nr
            bsp_trz_indx = e_bsp_trz_indx
            bsp_indx = e_bsp_indx
            bsp_trz_sffx = e_bsp_trz_sffx
            bsp_sffx = e_bsp_sffx
            sp = sp_e
            stz = stz_e
            enz = enz_e
        End If
        
        If rep = 4 Then
            z_start = 20
            sp_var = 25
            bsp_prfx = es_bsp_prfx
            bsp_trz_typ = es_bsp_trz_typ
            bsp_typ = es_bsp_typ
            bsp_trz_nr = es_bsp_trz_nr
            bsp_nr = es_bsp_nr
            bsp_trz_indx = es_bsp_trz_indx
            bsp_indx = es_bsp_indx
            bsp_trz_sffx = es_bsp_trz_sffx
            bsp_sffx = es_bsp_sffx
            sp = sp_es
            stz = stz_e
            enz = enz_e
        End If
        
        If rep = 5 Then
            z_start = 20
            sp_var = 35
            bsp_prfx = ml_bsp_prfx
            bsp_trz_typ = ml_bsp_trz_typ
            bsp_typ = ml_bsp_typ
            bsp_trz_nr = ml_bsp_trz_nr
            bsp_nr = ml_bsp_nr
            bsp_trz_indx = ml_bsp_trz_indx
            bsp_indx = ml_bsp_indx
            bsp_trz_sffx = ml_bsp_trz_sffx
            bsp_sffx = ml_bsp_sffx
            sp = sp_ml
            stz = stz_e
            enz = enz_e
        End If
        
        If rep = 6 Then
            z_start = 30
            sp_var = 15
            bsp_prfx = ob_bsp_prfx
            bsp_trz_typ = ob_bsp_trz_typ
            bsp_typ = ob_bsp_typ
            bsp_trz_nr = ob_bsp_trz_nr
            bsp_nr = ob_bsp_nr
            bsp_trz_indx = ob_bsp_trz_indx
            bsp_indx = ob_bsp_indx
            bsp_trz_sffx = ob_bsp_trz_sffx
            bsp_sffx = ob_bsp_sffx
            sp = sp_ob
            stz = stz_ob
            enz = enz_ob
        End If
        
        If rep = 7 Then
            z_start = 45
            sp_var = 15
            bsp_prfx = wp_bsp_prfx
            bsp_trz_typ = wp_bsp_trz_typ
            bsp_typ = wp_bsp_typ
            bsp_trz_nr = wp_bsp_trz_nr
            bsp_nr = wp_bsp_nr
            bsp_trz_indx = wp_bsp_trz_indx
            bsp_indx = wp_bsp_indx
            bsp_trz_sffx = wp_bsp_trz_sffx
            bsp_sffx = wp_bsp_sffx
            sp = sp_wp
            stz = stz_wp
            enz = enz_wp
        End If
        'Zur Anwendung des Planschl|fffd|ssels stellt das Makro fest, an welcher Stelle evtl. eine Variabilit|fffd|t der Zeichenl|fffd|nge vorliegt
        vari = 0
        For i = z_start To z_start + 5
            If ThisWorkbook.Sheets("Konfiguration").Cells(i, sp_var) = "x" Then vari = i - z_start + 1
        Next

        dokument = dokument_backup
        dokument = bsp_prfx & bsp_trz_typ & dokument & bsp_trz_indx & bsp_indx & bsp_trz_sffx & bsp_sffx & ".pdf"
        
        'MsgBox "dokument: " & dokument & vbCrLf & _
                "dokument_backup: " & dokument_backup
        
        If vari = 1 And Len(dokument) - 4 < Len(bsp_typ & bsp_trz_nr & bsp_nr & bsp_trz_indx & bsp_indx & bsp_trz_sffx & bsp_sffx & bsp_trz_in & bsp_in) Then GoTo SHORTCUT2
        If vari = 2 And Len(dokument) - 4 < Len(bsp_prfx & bsp_trz_typ & bsp_trz_nr & bsp_nr & bsp_trz_indx & bsp_indx & bsp_trz_sffx & bsp_sffx & bsp_trz_in & bsp_in) Then GoTo SHORTCUT2
        If vari = 3 And Len(dokument) - 4 < Len(bsp_prfx & bsp_trz_typ & bsp_typ & bsp_nr & bsp_trz_indx & bsp_indx & bsp_trz_sffx & bsp_sffx & bsp_trz_in & bsp_in) Then GoTo SHORTCUT2
        If vari = 4 And Len(dokument) - 4 < Len(bsp_prfx & bsp_trz_typ & bsp_typ & bsp_trz_nr & bsp_nr & bsp_indx & bsp_trz_sffx & bsp_sffx & bsp_trz_in & bsp_in) Then GoTo SHORTCUT2
        If vari = 5 And Len(dokument) - 4 < Len(bsp_prfx & bsp_trz_typ & bsp_typ & bsp_trz_nr & bsp_nr & bsp_trz_indx & bsp_indx & bsp_trz_sffx & bsp_trz_in & bsp_in) Then GoTo SHORTCUT2
        If vari = 6 And Len(dokument) - 4 < Len(bsp_prfx & bsp_trz_typ & bsp_typ & bsp_trz_nr & bsp_nr & bsp_trz_indx & bsp_indx & bsp_trz_sffx & bsp_sffx & bsp_trz_in) Then GoTo SHORTCUT2
        
        'Der Dateiname wird f|fffd|r den Vergleich aufgeschl|fffd|sselt
        If vari = 0 Then
            prfx = Left(dokument, Len(bsp_prfx))
            trz_typ = Mid(dokument, Len(prfx) + 1, Len(bsp_trz_typ))
            typ = Mid(dokument, Len(prfx & trz_typ) + 1, Len(bsp_typ))
            trz_nr = Mid(dokument, Len(prfx & trz_typ & typ) + 1, Len(bsp_trz_nr))
            nr = Mid(dokument, Len(prfx & trz_typ & typ & trz_nr) + 1, Len(bsp_nr))
            trz_indx = Mid(dokument, Len(prfx & trz_typ & typ & trz_nr & nr) + 1, Len(bsp_trz_indx))
            indx = Mid(dokument, Len(prfx & trz_typ & typ & trz_nr & nr & trz_indx) + 1, Len(bsp_indx))
            trz_sffx = Mid(dokument, Len(prfx & trz_typ & typ & trz_nr & nr & trz_indx & indx) + 1, Len(bsp_trz_sffx))
            sffx = Mid(dokument, Len(prfx & trz_typ & typ & trz_nr & nr & trz_indx & indx & trz_sffx) + 1, Len(bsp_sffx))
            trz_in = Mid(dokument, Len(prfx & trz_typ & typ & trz_nr & nr & trz_indx & indx & trz_sffx & sffx) + 1, Len(bsp_trz_in))
            inhalt = Mid(dokument, Len(prfx & trz_typ & typ & trz_nr & nr & trz_indx & indx & trz_sffx & sffx & trz_in) + 1, Len(bsp_in))
        End If
            
        If vari = 1 Then
            inhalt = Mid(dokument, Len(dokument) - Len(bsp_in) - 3, Len(bsp_in))
            trz_in = Mid(dokument, Len(dokument) - Len(bsp_trz_in & inhalt) - 3, Len(bsp_trz_in))
            sffx = Mid(dokument, Len(dokument) - Len(bsp_sffx & trz_in & inhalt) - 3, Len(bsp_sffx))
            trz_sffx = Mid(dokument, Len(dokument) - Len(bsp_trz_sffx & sffx & trz_in & inhalt) - 3, Len(bsp_trz_sffx))
            indx = Mid(dokument, Len(dokument) - Len(bsp_indx & trz_sffx & sffx & trz_in & inhalt) - 3, Len(bsp_indx))
            trz_indx = Mid(dokument, Len(dokument) - Len(bsp_trz_indx & indx & trz_sffx & sffx & trz_in & inhalt) - 3, Len(bsp_trz_indx))
            nr = Mid(dokument, Len(dokument) - Len(bsp_nr & trz_indx & indx & trz_sffx & sffx & trz_in & inhalt) - 3, Len(bsp_nr))
            trz_nr = Mid(dokument, Len(dokument) - Len(bsp_trz_nr & nr & trz_indx & indx & trz_sffx & sffx & trz_in & inhalt) - 3, Len(bsp_trz_nr))
            typ = Mid(dokument, Len(dokument) - Len(bsp_typ & trz_nr & nr & trz_indx & indx & trz_sffx & sffx & trz_in & inhalt) - 3, Len(bsp_typ))
            trz_typ = Mid(dokument, Len(dokument) - Len(bsp_trz_typ & typ & trz_nr & nr & trz_indx & indx & trz_sffx & sffx & trz_in & inhalt) - 3, Len(bsp_trz_typ))
            prfx = Left(dokument, Len(dokument) - Len(trz_typ & typ & trz_nr & nr & trz_indx & indx & trz_sffx & sffx & trz_in & inhalt) - 4)
        End If
        
        If vari = 2 Then
            prfx = Left(dokument, Len(bsp_prfx))
            trz_typ = Mid(dokument, Len(prfx) + 1, Len(bsp_trz_typ))
            inhalt = Mid(dokument, Len(dokument) - Len(bsp_in) - 3, Len(bsp_in))
            trz_in = Mid(dokument, Len(dokument) - Len(bsp_trz_in & inhalt) - 3, Len(bsp_trz_in))
            sffx = Mid(dokument, Len(dokument) - Len(bsp_sffx & trz_in & inhalt) - 3, Len(bsp_sffx))
            trz_sffx = Mid(dokument, Len(dokument) - Len(bsp_trz_sffx & sffx & trz_in & inhalt) - 3, Len(bsp_trz_sffx))
            indx = Mid(dokument, Len(dokument) - Len(bsp_indx & trz_sffx & sffx & trz_in & inhalt) - 3, Len(bsp_indx))
            trz_indx = Mid(dokument, Len(dokument) - Len(bsp_trz_indx & indx & trz_sffx & sffx & trz_in & inhalt) - 3, Len(bsp_trz_indx))
            nr = Mid(dokument, Len(dokument) - Len(bsp_nr & trz_indx & indx & trz_sffx & sffx & trz_in & inhalt) - 3, Len(bsp_nr))
            trz_nr = Mid(dokument, Len(dokument) - Len(bsp_trz_nr & nr & trz_indx & indx & trz_sffx & sffx & trz_in & inhalt) - 3, Len(bsp_trz_nr))
            typ = Mid(dokument, Len(prfx & trz_typ) + 1, Len(dokument) - Len(prfx & trz_typ & trz_nr & nr & trz_indx & indx & trz_sffx & sffx & trz_in & inhalt) - 4)
        End If
        
        If vari = 3 Then
            prfx = Left(dokument, Len(bsp_prfx))
            trz_typ = Mid(dokument, Len(prfx) + 1, Len(bsp_trz_typ))
            typ = Mid(dokument, Len(prfx & trz_typ) + 1, Len(bsp_typ))
            trz_nr = Mid(dokument, Len(prfx & trz_typ & typ) + 1, Len(bsp_trz_nr))
            inhalt = Mid(dokument, Len(dokument) - Len(bsp_in) - 3, Len(bsp_in))
            trz_in = Mid(dokument, Len(dokument) - Len(bsp_trz_in & inhalt) - 3, Len(bsp_trz_in))
            sffx = Mid(dokument, Len(dokument) - Len(bsp_sffx & trz_in & inhalt) - 3, Len(bsp_sffx))
            trz_sffx = Mid(dokument, Len(dokument) - Len(bsp_trz_sffx & sffx & trz_in & inhalt) - 3, Len(bsp_trz_sffx))
            indx = Mid(dokument, Len(dokument) - Len(bsp_indx & trz_sffx & sffx & trz_in & inhalt) - 3, Len(bsp_indx))
            trz_indx = Mid(dokument, Len(dokument) - Len(bsp_trz_indx & indx & trz_sffx & sffx & trz_in & inhalt) - 3, Len(bsp_trz_indx))
            nr = Mid(dokument, Len(prfx & trz_typ & typ & trz_nr) + 1, Len(dokument) - Len(prfx & trz_typ & typ & trz_nr & trz_indx & indx & trz_sffx & sffx & trz_in & inhalt) - 4)
        End If
    
        If vari = 4 Then
            prfx = Left(dokument, Len(bsp_prfx))
            trz_typ = Mid(dokument, Len(prfx) + 1, Len(bsp_trz_typ))
            typ = Mid(dokument, Len(prfx & trz_typ) + 1, Len(bsp_typ))
            trz_nr = Mid(dokument, Len(prfx & trz_typ & typ) + 1, Len(bsp_trz_nr))
            nr = Mid(dokument, Len(prfx & trz_typ & typ & trz_nr) + 1, Len(bsp_nr))
            trz_indx = Mid(dokument, Len(prfx & trz_typ & typ & trz_nr & nr) + 1, Len(bsp_trz_indx))
            inhalt = Mid(dokument, Len(dokument) - Len(bsp_in) - 3, Len(bsp_in))
            trz_in = Mid(dokument, Len(dokument) - Len(bsp_trz_in & inhalt) - 3, Len(bsp_trz_in))
            sffx = Mid(dokument, Len(dokument) - Len(bsp_sffx & trz_in & inhalt) - 3, Len(bsp_sffx))
            trz_sffx = Mid(dokument, Len(dokument) - Len(bsp_trz_sffx & sffx & trz_in & inhalt) - 3, Len(bsp_trz_sffx))
            indx = Mid(dokument, Len(prfx & trz_typ & typ & trz_nr & nr & trz_indx) + 1, Len(dokument) - Len(prfx & trz_typ & typ & trz_nr & nr & trz_indx & trz_sffx & sffx & trz_in & inhalt) - 4)
        End If
        
        If vari = 5 Then
            prfx = Left(dokument, Len(bsp_prfx))
            trz_typ = Mid(dokument, Len(prfx) + 1, Len(bsp_trz_typ))
            typ = Mid(dokument, Len(prfx & trz_typ) + 1, Len(bsp_typ))
            trz_nr = Mid(dokument, Len(prfx & trz_typ & typ) + 1, Len(bsp_trz_nr))
            nr = Mid(dokument, Len(prfx & trz_typ & typ & trz_nr) + 1, Len(bsp_nr))
            trz_indx = Mid(dokument, Len(prfx & trz_typ & typ & trz_nr & nr) + 1, Len(bsp_trz_indx))
            indx = Mid(dokument, Len(prfx & trz_typ & typ & trz_nr & nr & trz_indx) + 1, Len(bsp_indx))
            trz_sffx = Mid(dokument, Len(prfx & trz_typ & typ & trz_nr & nr & trz_indx & indx) + 1, Len(bsp_trz_sffx))
            inhalt = Mid(dokument, Len(dokument) - Len(bsp_in) - 3, Len(bsp_in))
            trz_in = Mid(dokument, Len(dokument) - Len(bsp_trz_in & inhalt) - 3, Len(bsp_trz_in))
            sffx = Mid(dokument, Len(prfx & trz_typ & typ & trz_nr & nr & trz_indx & indx & trz_sffx) + 1, Len(dokument) - Len(prfx & trz_typ & typ & trz_nr & nr & trz_indx & indx & trz_sffx & trz_in & inhalt) - 4)
        End If
        
        If vari = 6 Then
            prfx = Left(dokument, Len(bsp_prfx))
            trz_typ = Mid(dokument, Len(prfx) + 1, Len(bsp_trz_typ))
            typ = Mid(dokument, Len(prfx & trz_typ) + 1, Len(bsp_typ))
            trz_nr = Mid(dokument, Len(prfx & trz_typ & typ) + 1, Len(bsp_trz_nr))
            nr = Mid(dokument, Len(prfx & trz_typ & typ & trz_nr) + 1, Len(bsp_nr))
            trz_indx = Mid(dokument, Len(prfx & trz_typ & typ & trz_nr & nr) + 1, Len(bsp_trz_indx))
            indx = Mid(dokument, Len(prfx & trz_typ & typ & trz_nr & nr & trz_indx) + 1, Len(bsp_indx))
            trz_sffx = Mid(dokument, Len(prfx & trz_typ & typ & trz_nr & nr & trz_indx & indx) + 1, Len(bsp_trz_sffx))
            sffx = Mid(dokument, Len(prfx & trz_typ & typ & trz_nr & nr & trz_indx & indx & trz_sffx) + 1, Len(bsp_sffx))
            trz_in = Mid(dokument, Len(prfx & trz_typ & typ & trz_nr & nr & trz_indx & indx & trz_sffx & sffx) + 1, Len(bsp_trz_in))
            inhalt = Mid(dokument, Len(prfx & trz_typ & typ & trz_nr & nr & trz_indx & indx & trz_sffx & sffx & trz_in) + 1, Len(dokument) - Len(prfx & trz_typ & typ & trz_nr & nr & trz_indx & indx & trz_sffx & sffx & trz_in) - 4)
        End If
        
        'Die zu erkennenden Plan- bzw. Bauteiltypen werden eingelesen
        z = stz
        
        Do
            bez_1 = ""
            bez_2 = ""
            bez_3 = ""
            bez_4 = ""
            bez_5 = ""
            bez_6 = ""
            bez_7 = ""
            bez_8 = ""
            bez_9 = ""
            bez_10 = ""
            bez_11 = ""
            bez_12 = ""
            bez_13 = ""
            bez_14 = ""
            bez_15 = ""
            
            If ThisWorkbook.Sheets("Konfiguration").Cells(z, sp) = "" Then GoTo SHORTCUT
        
            For st = 1 To Len(ThisWorkbook.Sheets("Konfiguration").Cells(z, sp))
                If Mid(ThisWorkbook.Sheets("Konfiguration").Cells(z, sp), st, 1) <> "," Then bez_1 = ThisWorkbook.Sheets("Konfiguration").Cells(z, sp)
            Next
    
            For st = 1 To Len(ThisWorkbook.Sheets("Konfiguration").Cells(z, sp))
                If Mid(ThisWorkbook.Sheets("Konfiguration").Cells(z, sp), st, 1) = "," Then
                    spl() = Split(Replace(ThisWorkbook.Sheets("Konfiguration").Cells(z, sp), " ", ""), ",")
                        For i = LBound(spl) To UBound(spl)
                            If i = 0 Then bez_1 = spl(i)
                            If i = 1 Then bez_2 = spl(i)
                            If i = 2 Then bez_3 = spl(i)
                            If i = 3 Then bez_4 = spl(i)
                            If i = 4 Then bez_5 = spl(i)
                            If i = 5 Then bez_6 = spl(i)
                            If i = 6 Then bez_7 = spl(i)
                            If i = 7 Then bez_8 = spl(i)
                            If i = 8 Then bez_9 = spl(i)
                            If i = 9 Then bez_10 = spl(i)
                            If i = 10 Then bez_11 = spl(i)
                            If i = 11 Then bez_12 = spl(i)
                            If i = 12 Then bez_13 = spl(i)
                            If i = 13 Then bez_14 = spl(i)
                            If i = 14 Then bez_15 = spl(i)
                        Next
                End If
            Next
            
            'Abgleich
            If Len(typ & trz_nr) > Len(bez_1 & trz_nr) And Len(typ & trz_nr) > Len(bez_2 & trz_nr) And Len(typ & trz_nr) > Len(bez_3 & trz_nr) And Len(typ & trz_nr) > Len(bez_4 & trz_nr) And Len(typ & trz_nr) > Len(bez_5 & trz_nr) Then
                If LCase(Left(typ & trz_nr, Len(bez_1 & trz_nr))) = LCase(bez_1 & trz_nr) And bez_1 <> "" And IsNumeric(Mid(typ & trz_nr, Len(bez_1 & trz_nr) + 1, 1)) = True Or _
                    LCase(Left(typ & trz_nr, Len(bez_2 & trz_nr))) = LCase(bez_2 & trz_nr) And bez_2 <> "" And IsNumeric(Mid(typ & trz_nr, Len(bez_2 & trz_nr) + 1, 1)) = True Or _
                    LCase(Left(typ & trz_nr, Len(bez_3 & trz_nr))) = LCase(bez_3 & trz_nr) And bez_3 <> "" And IsNumeric(Mid(typ & trz_nr, Len(bez_3 & trz_nr) + 1, 1)) = True Or _
                    LCase(Left(typ & trz_nr, Len(bez_4 & trz_nr))) = LCase(bez_4 & trz_nr) And bez_4 <> "" And IsNumeric(Mid(typ & trz_nr, Len(bez_4 & trz_nr) + 1, 1)) = True Or _
                    LCase(Left(typ & trz_nr, Len(bez_5 & trz_nr))) = LCase(bez_5 & trz_nr) And bez_5 <> "" And IsNumeric(Mid(typ & trz_nr, Len(bez_5 & trz_nr) + 1, 1)) = True Or _
                    LCase(Left(typ & trz_nr, Len(bez_6 & trz_nr))) = LCase(bez_6 & trz_nr) And bez_6 <> "" And IsNumeric(Mid(typ & trz_nr, Len(bez_6 & trz_nr) + 1, 1)) = True Or _
                    LCase(Left(typ & trz_nr, Len(bez_7 & trz_nr))) = LCase(bez_7 & trz_nr) And bez_7 <> "" And IsNumeric(Mid(typ & trz_nr, Len(bez_7 & trz_nr) + 1, 1)) = True Or _
                    LCase(Left(typ & trz_nr, Len(bez_8 & trz_nr))) = LCase(bez_8 & trz_nr) And bez_8 <> "" And IsNumeric(Mid(typ & trz_nr, Len(bez_8 & trz_nr) + 1, 1)) = True Or _
                    LCase(Left(typ & trz_nr, Len(bez_9 & trz_nr))) = LCase(bez_9 & trz_nr) And bez_9 <> "" And IsNumeric(Mid(typ & trz_nr, Len(bez_9 & trz_nr) + 1, 1)) = True Or _
                    LCase(Left(typ & trz_nr, Len(bez_10 & trz_nr))) = LCase(bez_10 & trz_nr) And bez_10 <> "" And IsNumeric(Mid(typ & trz_nr, Len(bez_10 & trz_nr) + 1, 1)) = True Or _
                    LCase(Left(typ & trz_nr, Len(bez_11 & trz_nr))) = LCase(bez_11 & trz_nr) And bez_11 <> "" And IsNumeric(Mid(typ & trz_nr, Len(bez_11 & trz_nr) + 1, 1)) = True Or _
                    LCase(Left(typ & trz_nr, Len(bez_12 & trz_nr))) = LCase(bez_12 & trz_nr) And bez_12 <> "" And IsNumeric(Mid(typ & trz_nr, Len(bez_12 & trz_nr) + 1, 1)) = True Or _
                    LCase(Left(typ & trz_nr, Len(bez_13 & trz_nr))) = LCase(bez_13 & trz_nr) And bez_13 <> "" And IsNumeric(Mid(typ & trz_nr, Len(bez_13 & trz_nr) + 1, 1)) = True Or _
                    LCase(Left(typ & trz_nr, Len(bez_14 & trz_nr))) = LCase(bez_14 & trz_nr) And bez_14 <> "" And IsNumeric(Mid(typ & trz_nr, Len(bez_14 & trz_nr) + 1, 1)) = True Or _
                    LCase(Left(typ & trz_nr, Len(bez_15 & trz_nr))) = LCase(bez_15 & trz_nr) And bez_15 <> "" And IsNumeric(Mid(typ & trz_nr, Len(bez_15 & trz_nr) + 1, 1)) = True Then treffer_art = rep
            Else
                If LCase(Left(typ & trz_nr, Len(bez_1 & trz_nr))) = LCase(bez_1 & trz_nr) And bez_1 <> "" Or _
                    LCase(Left(typ & trz_nr, Len(bez_2 & trz_nr))) = LCase(bez_2 & trz_nr) And bez_2 <> "" Or _
                    LCase(Left(typ & trz_nr, Len(bez_3 & trz_nr))) = LCase(bez_3 & trz_nr) And bez_3 <> "" Or _
                    LCase(Left(typ & trz_nr, Len(bez_4 & trz_nr))) = LCase(bez_4 & trz_nr) And bez_4 <> "" Or _
                    LCase(Left(typ & trz_nr, Len(bez_5 & trz_nr))) = LCase(bez_5 & trz_nr) And bez_5 <> "" Or _
                    LCase(Left(typ & trz_nr, Len(bez_6 & trz_nr))) = LCase(bez_6 & trz_nr) And bez_6 <> "" Or _
                    LCase(Left(typ & trz_nr, Len(bez_7 & trz_nr))) = LCase(bez_7 & trz_nr) And bez_7 <> "" Or _
                    LCase(Left(typ & trz_nr, Len(bez_8 & trz_nr))) = LCase(bez_8 & trz_nr) And bez_8 <> "" Or _
                    LCase(Left(typ & trz_nr, Len(bez_9 & trz_nr))) = LCase(bez_9 & trz_nr) And bez_9 <> "" Or _
                    LCase(Left(typ & trz_nr, Len(bez_10 & trz_nr))) = LCase(bez_10 & trz_nr) And bez_10 <> "" Or _
                    LCase(Left(typ & trz_nr, Len(bez_11 & trz_nr))) = LCase(bez_11 & trz_nr) And bez_11 <> "" Or _
                    LCase(Left(typ & trz_nr, Len(bez_12 & trz_nr))) = LCase(bez_12 & trz_nr) And bez_12 <> "" Or _
                    LCase(Left(typ & trz_nr, Len(bez_13 & trz_nr))) = LCase(bez_13 & trz_nr) And bez_13 <> "" Or _
                    LCase(Left(typ & trz_nr, Len(bez_14 & trz_nr))) = LCase(bez_14 & trz_nr) And bez_14 <> "" Or _
                    LCase(Left(typ & trz_nr, Len(bez_15 & trz_nr))) = LCase(bez_15 & trz_nr) And bez_15 <> "" Then treffer_art = rep
            End If

SHORTCUT:
            z = z + 1
        Loop Until z = enz + 1
SHORTCUT2:
        rep = rep + 1
        
    Loop Until rep = 8 Or treffer_art <> 0
    
    'MsgBox "treffer_art: " & treffer_art & vbCrLf & _
        "prfx: " & prfx & vbCrLf & _
        "typ: " & typ & vbCrLf & _
        "trz_nr: " & trz_nr & vbCrLf & _
        "nr: " & nr & vbCrLf & _
        "indx: " & indx & vbCrLf & _
        "sffx: " & sffx & vbCrLf & _
        "inhalt: " & inhalt
    
    plan = typ & trz_nr & nr
    
    schluessel3 = plan & "*" & treffer_art & "*" & prfx & "*" & bsp_trz_typ & "*" & typ & "*" & bsp_trz_nr & "*" & nr & "*" & bsp_trz_indx & "*" & indx & "*" & bsp_trz_sffx & "*" & sffx & "*" & bsp_trz_in & "*" & inhalt
    
End Function



Attribute VB_Name = "update_modul"
Sub update_ueplan()

Close #1

Application.ScreenUpdating = False
Application.DisplayAlerts = False

On Error GoTo ERROREXIT

Dim pfad_import As String
Dim fldr As FileDialog
Dim pfad_UE As String
Dim pfad_export As String
Dim pfad_report As String
Dim pfad_plan As String
Dim datei_report As String
Dim report As Workbook
Dim spl() As String
Dim spl_baut() As String
Dim i As Integer
Dim j As Integer
Dim k As Integer

pfad_UE = Sheets("Konfiguration").Cells(74, 4)
pfad_report = Sheets("Konfiguration").Cells(66, 4)
pfad_export = pfad_report
pfad_plan = Sheets("Konfiguration").Cells(70, 4)

If Right(pfad_report, 1) <> "\" Then pfad_report = pfad_report & "\"

Set fldr = Application.FileDialog(msoFileDialogFolderPicker)
With fldr
    .Title = "Ordner f|fffd|r Auslesen ausw|fffd|hlen"
    .AllowMultiSelect = False
    .InitialFileName = pfad_UE
    If .Show <> -1 Then GoTo NextCode
    pfad_import = .SelectedItems(1)
End With
NextCode:

Set WSHShell = CreateObject("WScript.Shell")

If Dir(pfad_import & "\temp.pdf") <> "" Then Kill (pfad_import & "\temp.pdf")
If Dir(pfad_import & "\temp.txt") <> "" Then Kill (pfad_import & "\temp.txt")

erfolg = "nein"

Set report = Workbooks.Add

dokument = Dir$(pfad_import & "\*.pdf")

Do While dokument <> ""
    
    If dokument = "temp.pdf" Then GoTo SHORTCUT
    
    Application.StatusBar = "In Bearbeitung: " & dokument
    
    FileCopy pfad_import & "\" & dokument, pfad_import & "\temp.pdf"
    WSHShell.Run """" & pfad_plan & "\pdftotext.exe"" -raw " & """" & pfad_import & "\temp.pdf", 0, True
    Application.Wait Now + TimeSerial(0, 0, 1)

    Open pfad_import & "\temp.txt" For Input As #1
    Do While Not EOF(1)
        Line Input #1, Content
        Debug.Print Content
    
        spl() = Split(Content, " ")
            For i = LBound(spl) To UBound(spl)
                baut = ""
                stck = 0
                Status = ""
                
                If IsNumeric(spl(i)) = True And Len(spl(i)) = 5 Then
                    If Left(spl(i), 2) <> "80" And _
                        Left(spl(i), 2) <> "81" And _
                        Left(spl(i), 2) <> "82" And _
                        Left(spl(i), 2) <> "83" And _
                        Left(spl(i), 2) <> "86" And _
                        Left(spl(i), 2) <> "87" And _
                        Left(spl(i), 2) <> "88" And _
                        Left(spl(i), 2) <> "89" And _
                        Left(spl(i), 2) <> "70" Then GoTo SHORTCUT2
                    
                    If i < UBound(spl) Then
                        If spl(i + 1) = "entfallen" Then GoTo SHORTCUT2
                    End If
                
                    baut = spl(i)
                    letzte_zeile = report.Sheets(1).Cells(Rows.Count, 1).End(xlUp).Row + 1
                    
                    For j = 1 To letzte_zeile
                        'MsgBox baut & " | " & report.Sheets(1).Cells(j, 1) & " (" & j & ")"
                        If Str(report.Sheets(1).Cells(j, 1)) = Str(baut) Then
                            Status = "found"
                            stck = report.Sheets(1).Cells(j, 2)
                            report.Sheets(1).Cells(j, 2) = stck + 1
                            Exit For
                        End If
                    Next
                    If Status <> "found" Then
                        For j = 1 To letzte_zeile
                            If report.Sheets(1).Cells(j, 1) = "" Then
                                report.Sheets(1).Cells(j, 1) = baut
                                report.Sheets(1).Cells(j, 2) = 1
                                Exit For
                            End If
                        Next
                    End If
                    GoTo SHORTCUT2
                End If
                
SHORTCUT2:
            Next
    Loop
    Close #1

    Application.Wait Now + TimeSerial(0, 0, 1)
    
SHORTCUT:

    Kill (pfad_import & "\temp.pdf")
    Kill (pfad_import & "\temp.txt")
    
dokument = Dir$()
Loop

report.Sheets(1).Sort.SortFields.Clear
report.Sheets(1).Sort.SortFields.Add Key:=Range("A1"), _
    SortOn:=xlSortOnValues, Order:=xlAscending, DataOption:=xlSortNormal
With report.Sheets(1).Sort
    .SetRange Range("A1:B202")
    .Header = xlNo
    .MatchCase = False
    .Orientation = xlTopToBottom
    .SortMethod = xlPinYin
    .Apply
End With

letzte_zeile = report.Sheets(1).Cells(Rows.Count, 1).End(xlUp).Row + 1
   
Columns("A:A").Select
Selection.Insert Shift:=xlToRight, CopyOrigin:=xlFormatFromLeftOrAbove
Selection.Insert Shift:=xlToRight, CopyOrigin:=xlFormatFromLeftOrAbove
Selection.Insert Shift:=xlToRight, CopyOrigin:=xlFormatFromLeftOrAbove
Columns("E:E").Select
Selection.Insert Shift:=xlToRight, CopyOrigin:=xlFormatFromLeftOrAbove
Selection.Insert Shift:=xlToRight, CopyOrigin:=xlFormatFromLeftOrAbove
Selection.Insert Shift:=xlToRight, CopyOrigin:=xlFormatFromLeftOrAbove
Selection.Insert Shift:=xlToRight, CopyOrigin:=xlFormatFromLeftOrAbove
Selection.Insert Shift:=xlToRight, CopyOrigin:=xlFormatFromLeftOrAbove
Selection.Insert Shift:=xlToRight, CopyOrigin:=xlFormatFromLeftOrAbove
Selection.Insert Shift:=xlToRight, CopyOrigin:=xlFormatFromLeftOrAbove
Rows("1:15").Select
Selection.Insert Shift:=xlDown, CopyOrigin:=xlFormatFromLeftOrAbove
report.SaveAs (pfad_report & "Report " & Format(Now, "yyyy-mm-dd hh.mm") & ".xlsx")
datei_report = pfad_report & "Report " & Format(Now, "yyyy-mm-dd hh.mm") & ".xlsx"
report.Close

Close #1

Set WSHShell = Nothing

erfolg = "ja"

Call update_main(datei_report)

ERROREXIT:

If erfolg = "nein" Then
    MsgBox "Es gab einen Fehler!", vbCritical, "Bauteilupdate"
    Close #1
    If Dir(pfad_import & "\temp.pdf") <> "" Then Kill (pfad_import & "\temp.pdf")
    If Dir(pfad_import & "\temp.txt") <> "" Then Kill (pfad_import & "\temp.txt")
End If

Application.DisplayAlerts = True
Application.StatusBar = False
Application.ScreenUpdating = True

End Sub

Sub update_report()

Dim pfad_report As String
Dim laufwerk As String
Dim datei_report As String
Dim dateiname_report As String
Dim spl() As String

'On Error GoTo ERROREXIT

Application.DisplayAlerts = False
Application.ScreenUpdating = False

pfad_report = Sheets("Konfiguration").Cells(66, 4)
laufwerk = Sheets("Konfiguration").Cells(59, 4)

ChDir pfad_report
ChDrive laufwerk
datei_report = Application.GetOpenFilename("Micrsoft Excel-Dateien (*.xlsx),*.xlsx")
    If datei_report = "" Then Exit Sub

spl = Split(datei_report, "\")
dateiname_report = spl(UBound(spl))

choice = MsgBox("Ausgew|fffd|hlter Report:" & vbCrLf & vbCrLf & dateiname_report & vbCrLf & vbCrLf & "Fortfahren?", vbYesNo, "Update aus Report")
    If choice = vbNo Then
    Exit Sub
    End If

Call update_main(datei_report)

ERROREXIT:

Application.DisplayAlerts = True
Application.ScreenUpdating = True

End Sub


Sub update_main(datei_report As String)

Application.DisplayAlerts = False
Application.ScreenUpdating = False
Application.StatusBar = "Auswertung l|fffd|uft..."

'On Error GoTo ERROREXIT

ActiveWorkbook.SaveCopyAs filename:=ThisWorkbook.Path & "\" & Replace(ThisWorkbook.Name, ".xlsm", "_bak.xlsm")

Dim comp_wert As Integer
Dim treffer_zeile As Integer
Dim baut As String
Dim baut_report As String
Dim typ_report As String
Dim erste_zeile As Integer
Dim pl_status As String
Dim i As Integer, j As Integer, k As Integer
Dim spl() As String
Dim dateiname_report As String
Dim treffer_art As Integer
Dim treffer_sheet As String
Dim prfx As String

spl = Split(datei_report, "\")
dateiname_report = spl(UBound(spl))

report_sp_baut = Sheets("Konfiguration").Cells(59, 27)
report_sp_stck = Sheets("Konfiguration").Cells(60, 27)
erste_zeile_report = Sheets("Konfiguration").Cells(59, 31)

pfad_logfile = Sheets("Konfiguration").Cells(67, 4)
bauvorhaben = Sheets("Verwaltung").Cells(4, 5)
spalte_prfx = Sheets("Konfiguration").Cells(59, 17)
spalte_bauteil = Sheets("Konfiguration").Cells(60, 17)
spalte_index = Sheets("Konfiguration").Cells(61, 17)
spalte_gez_datum = Sheets("Konfiguration").Cells(63, 17)
spalte_stck_plan = Sheets("Konfiguration").Cells(65, 17)
spalte_stck_uber = Sheets("Konfiguration").Cells(66, 17)
spalte_verschickt = Sheets("Konfiguration").Cells(68, 17)
spalte_fring = Sheets("Konfiguration").Cells(69, 17)
spalte_frarc = Sheets("Konfiguration").Cells(70, 17)
spalte_freigabe = Sheets("Konfiguration").Cells(71, 17)
spalte_entfallen = Sheets("Konfiguration").Cells(72, 17)
erste_zeile = Sheets("Konfiguration").Cells(59, 23)

bsp_typ = Sheets("Konfiguration").Cells(33, 3)
trz_nr = Sheets("Konfiguration").Cells(33, 4)
bsp_nr = Sheets("Konfiguration").Cells(34, 3)

'Planhistorie einblenden
letzte_zeile = ThisWorkbook.Sheets("Fertigteile").Cells(Rows.Count, spalte_index).End(xlUp).Row + 100
If letzte_zeile <= erste_zeile Then letzte_zeile = erste_zeile + 1

For i = erste_zeile To letzte_zeile

    ThisWorkbook.Sheets("Fertigteile").Rows(i).EntireRow.Hidden = False

Next

letzte_zeile = ThisWorkbook.Sheets("Fertigteile").Cells(Rows.Count, spalte_bauteil).End(xlUp).Row
If letzte_zeile <= erste_zeile Then letzte_zeile = erste_zeile + 1

planliste = ActiveWorkbook.Name

With Application
.ScreenUpdating = False
.EnableEvents = False
.Calculation = xlCalculationManual
End With

If Dir(pfad_logfile, vbDirectory) = "" Then MkDir (pfad_logfile)
Close #1
Open pfad_logfile & Format(Now, "yyyy-mm-dd hh.mm.ss") & " update_logfile.txt" For Output As #1
    logfile = pfad_logfile & Format(Now, "yyyy-mm-dd hh.mm.ss") & " update_logfile.txt"
    Print #1, vbCrLf _
                & bauvorhaben & vbCrLf _
                & vbCrLf _
                & "Report """ & dateiname_report & """ eingelesen: " & Format(Now, "dd.mm.yyyy hh:mm:ss") & " - Von: " & Environ("Username") & vbCrLf _
                & vbCrLf _
                & "=============================================================================================================" _
                & vbCrLf

Workbooks.Open datei_report

report = ActiveWorkbook.Name

Set wkbDaten = Workbooks(ActiveWorkbook.Name)

letzte_zeile_report = wkbDaten.Sheets(1).Cells(Rows.Count, report_sp_baut).End(xlUp).Row

For i = erste_zeile_report To letzte_zeile_report
    
    pl_status = ""
    
    If Cells(i, report_sp_baut) <> "" Then
        
        If Left(Cells(i, report_sp_baut), 2) = "80" Then GoTo SHORTCUT
        
        baut_report = Cells(i, report_sp_baut)
        stck_report = Cells(i, report_sp_stck)
        'Bauteiltyp wird erkannt in function(schluessel)
        spl() = Split(schluessel3(baut_report), "*")
        For j = LBound(spl) To UBound(spl)
            If spl(j) <> "" Then
                If j = 1 Then treffer_art = spl(j)
                If j = 2 Then prfx = spl(j)
                If j = 3 Then trz_typ = spl(j)
                If j = 4 Then typ_report = spl(j)
                If j = 6 Then nr_report = spl(j)
            End If
        Next
        
        'MsgBox "Trefferart: " & treffer_art & vbCrLf & _
                "Pr|fffd|fix: " & prfx & vbCrLf & _
                "Typ: " & typ_report & vbCrLf & _
                "Nr: " & nr_report
        
        'STADION SPEZIFISCH
        If ThisWorkbook.Name = "Planliste 19 01 Stadion Freiburg.xlsm" Then
            If Left(nr_report, 1) = "1" Then prfx = "FT_S"
            If Left(nr_report, 1) = "2" Then prfx = "FT_O"
            If Left(nr_report, 1) = "3" Then prfx = "FT_N"
            If Left(nr_report, 1) = "4" Then prfx = "FT_W"
            If Left(nr_report, 1) <> "1" And _
                Left(nr_report, 1) <> "2" And _
                Left(nr_report, 1) <> "3" And _
                Left(nr_report, 1) <> "4" Then prfx = "FT_X"
        End If
                
        baut_report = Cells(i, report_sp_baut)
        
        If treffer_art = 1 Then
            treffer_sheet = "Fertigteile"
        End If
        
        If treffer_art = 2 Then
            treffer_sheet = "|fffd|bersichten"
        End If
        
        If treffer_art = 3 Or treffer_art = 4 Or treffer_art = 5 Then
            treffer_sheet = "Einbauteile"
        End If
    
        If treffer_art = 6 Then
            treffer_sheet = "Konstruktionspl|fffd|ne"
        End If
        
        If treffer_art = 7 Then
            treffer_sheet = "Werkpl|fffd|ne"
        End If
        
        If treffer_art = 0 Or treffer_art = 8 Then
            plan = Replace(dokument, Right(dokument, 4), "")
            MsgBox "F|fffd|r Plan " & prfx & trz_typ & plan & " keine Einsortierung gefunden." & vbCrLf & vbCrLf & "Bitte h|fffd|ndisch einf|fffd|gen.", vbCritical, "Pl|fffd|ne eintragen"
            pl_status = "error"
            GoTo SHORTCUT
        End If

        'MsgBox treffer_sheet & vbCrLf & typ_report & " | " & nr_report & vbCrLf & baut_report
        'GoTo SHORTCUT

    Else
        GoTo SHORTCUT
    End If
    
    letzte_zeile = ThisWorkbook.Sheets(treffer_sheet).Cells(Rows.Count, spalte_bauteil).End(xlUp).Row
    If letzte_zeile <= erste_zeile Then letzte_zeile = erste_zeile + 1
    
    
    For j = erste_zeile To letzte_zeile + 1
    If ThisWorkbook.Sheets(treffer_sheet).Cells(j, spalte_bauteil) = baut_report Then
    pl_status = "found"
        If ThisWorkbook.Sheets(treffer_sheet).Cells(j, spalte_stck_uber) <> stck_report Then
        If ThisWorkbook.Sheets(treffer_sheet).Cells(j, spalte_stck_uber) <> "" Then
            Print #1, typ_report & trz_nr & nr_report & vbTab & vbTab & "St|fffd|ckzahl von " & ThisWorkbook.Sheets(treffer_sheet).Cells(j, spalte_stck_uber) & " nach " & stck_report & vbTab & vbTab & "Auf Blatt " & """" & treffer_sheet & """"
        Else
            Print #1, typ_report & trz_nr & nr_report & vbTab & vbTab & "Reaktiviert! Neue St|fffd|ckzahl: " & stck_report & vbTab & vbTab & "Auf Blatt " & """" & treffer_sheet & """"
        End If
        ThisWorkbook.Sheets(treffer_sheet).Cells(j, spalte_stck_uber) = stck_report
            If ThisWorkbook.Sheets(treffer_sheet).Cells(j, spalte_entfallen) = "x" Then
                ThisWorkbook.Sheets(treffer_sheet).Cells(j, spalte_entfallen) = ""
                    For k = 1 To 30
                        If ThisWorkbook.Sheets(treffer_sheet).Cells(j, k) = "entf." Then ThisWorkbook.Sheets(treffer_sheet).Cells(j, k) = ""
                    Next
            End If
        End If
    Exit For
    End If
    Next
    
    If pl_status <> "found" Then
        comp_wert = 2
        hit = 0
        treffer_zeile = 0
        j = erste_zeile
        
            Do
                If ThisWorkbook.Sheets(treffer_sheet).Cells(j, spalte_bauteil) <> "" Then
                    
                    'MsgBox "Vergleiche:" & vbCrLf & _
                            prfx & trz_typ & baut_report & vbCrLf & _
                            ThisWorkbook.Sheets(treffer_sheet).Cells(j, spalte_prfx) & trz_typ & ThisWorkbook.Sheets(treffer_sheet).Cells(j, spalte_bauteil) & vbCrLf & _
                            StrComp(prfx & trz_typ & baut_report, ThisWorkbook.Sheets(treffer_sheet).Cells(j, spalte_prfx) & trz - typ & ThisWorkbook.Sheets(treffer_sheet).Cells(j, spalte_bauteil), vbBinaryCompare)
                    
                    comp_wert = StrComp(baut_report, ThisWorkbook.Sheets(treffer_sheet).Cells(j, spalte_bauteil), vbBinaryCompare)
                    If comp_wert = 1 Then hit = j
                    If comp_wert = -1 Then treffer_zeile = j
                End If
                j = j + 1
            Loop Until comp_wert = -1 Or j = letzte_zeile + 1
            
            If comp_wert <> -1 Then
                If hit > 0 Then
                    j = hit
                Else
                    j = erste_zeile + 1
                End If
                Do
                    j = j + 1
                    treffer_zeile = j
                Loop Until ThisWorkbook.Sheets(treffer_sheet).Cells(j, spalte_bauteil) = "" And ThisWorkbook.Sheets(treffer_sheet).Cells(j, spalte_index) = ""
            End If
        If treffer_zeile <= erste_zeile Then treffer_zeile = erste_zeile + 1
        
        If treffer_zeile <> 0 Then
            Windows(planliste).Activate
            Sheets(treffer_sheet).Select
            Rows(treffer_zeile).Select
            Selection.Insert Shift:=xlDown
            Rows(treffer_zeile + 1).Select
            Selection.Copy
            Rows(treffer_zeile).Select
            Selection.PasteSpecial Paste:=xlPasteFormats, Operation:=xlNone, _
            SkipBlanks:=False, Transpose:=False
            Application.CutCopyMode = False
            Sheets(treffer_sheet).Cells(treffer_zeile, spalte_bauteil).Select
            'Sheets(treffer_sheet).Cells(treffer_zeile, spalte_prfx) = prfx
            Sheets(treffer_sheet).Cells(treffer_zeile, spalte_bauteil) = baut_report
            Sheets(treffer_sheet).Cells(treffer_zeile, spalte_stck_uber) = stck_report
            Print #1, baut_report & vbTab & vbTab & "eingef|fffd|gt, St|fffd|ckzahl " & stck_report & vbTab & vbTab & "Auf Blatt " & """" & treffer_sheet & """"
            Sheets("Verwaltung").Activate
            Windows(report).Activate
        
        Else
        MsgBox "F|fffd|r Bauteil " & typ_report & trz_nr & nr_report & " keine Einsortierung gefunden." & vbCrLf & vbCrLf & "Bitte h|fffd|ndisch einf|fffd|gen.", vbCritical, "Bauteilupdate"
        Print #1, typ_report & trz_nr & nr_report & vbTab & vbTab & " keine Einsortierung gefunden!"
        End If
    End If
    
SHORTCUT:
    
Next

If einlesen_form.CheckBox_entf.Value = True Then
    For Each Worksheet In ThisWorkbook.Worksheets
        If Worksheet.Visible = True And Worksheet.Name = "Fertigteile" Or Worksheet.Visible = True And Worksheet.Name = "Konstruktionspl|fffd|ne" Then
                letzte_zeile = Worksheet.Cells(Rows.Count, spalte_bauteil).End(xlUp).Row
                For z_pl = erste_zeile To letzte_zeile
                    abgleich = ""
                    baut = Worksheet.Cells(z_pl, spalte_bauteil)
                    
                    If baut <> "" Then
                        For z_rep = erste_zeile_report To letzte_zeile_report
                            If Cells(z_rep, report_sp_baut) = baut Then
                            abgleich = "found"
                            Exit For
                            End If
                        Next
                    End If
                    
                    If abgleich <> "found" And baut <> "" And Worksheet.Cells(z_pl, spalte_entfallen) <> "x" Then
                        If Worksheet.Cells(z_pl, spalte_stck_plan) <> "" Or Worksheet.Cells(z_pl, spalte_stck_uber) <> "" Then
                            Print #1, baut & vbTab & vbTab & "entfallen! Ehem. St|fffd|ckzahl: " & Worksheet.Cells(z_pl, spalte_stck_uber) & vbTab & vbTab & "Auf Blatt " & """" & treffer_sheet & """"
                            Worksheet.Cells(z_pl, spalte_entfallen) = "x"
                            If ThisWorkbook.Sheets("Fertigteile").Cells(z_pl, spalte_gez_datum) = "" Then Worksheet.Cells(z_pl, spalte_gez_datum) = "entf."
                            If ThisWorkbook.Sheets("Fertigteile").Cells(z_pl, spalte_verschickt) = "" Then Worksheet.Cells(z_pl, spalte_verschickt) = "entf."
                            ThisWorkbook.Sheets("Fertigteile").Cells(z_pl, spalte_stck_uber) = "0"
                            If ThisWorkbook.Sheets("Fertigteile").Cells(z_pl, spalte_fring) = "" Then Worksheet.Cells(z_pl, spalte_fring) = "entf."
                            If ThisWorkbook.Sheets("Fertigteile").Cells(z_pl, spalte_frarc) = "" Then Worksheet.Cells(z_pl, spalte_frarc) = "entf."
                            If ThisWorkbook.Sheets("Fertigteile").Cells(z_pl, spalte_freigabe) = "" Then Worksheet.Cells(z_pl, spalte_freigabe) = "entf."
                        End If
                    End If
                
SHORTCUT2:
                
                Next
        End If
    Next Worksheet
End If

Close #1

erfolg = "ja"
ERROREXIT:
If erfolg <> "ja" Then MsgBox "Es gab einen Fehler!", vbCritical, "Update aus Report"

wkbDaten.Close

'Planhistorie ausblenden
For Each Worksheet In ThisWorkbook.Worksheets
    If Worksheet.Visible = True And Worksheet.Name <> "Verwaltung" And Worksheet.Name <> "Konfiguration" Then
        letzte_zeile = Worksheet.Cells(Rows.Count, spalte_index).End(xlUp).Row
        If letzte_zeile <= erste_zeile Then letzte_zeile = erste_zeile + 1
        
        For i = erste_zeile To letzte_zeile
        
            If Worksheet.Cells(i, spalte_bauteil) = "" And Worksheet.Cells(i, spalte_index) <> "" Then Worksheet.Rows(i).EntireRow.Hidden = True
        
        Next
    End If
Next Worksheet

With Application
.DisplayAlerts = True
.ScreenUpdating = True
.StatusBar = False
.EnableEvents = True
.Calculation = xlCalculationAutomatic
End With

MsgBox "Bauteilupdate beendet.", vbInformation, "Update aus Report"

If Dir(logfile) <> "" Then
    Shell "cmd /c " & Chr(34) & logfile & Chr(34)
Else
    Shell "Explorer.exe /e, " & pfad_logfile, vbNormalFocus
End If

End Sub


Attribute VB_Name = "verschieben_modul"
Sub verschieben()

Dim erfolg As String
Dim fldr As FileDialog
Dim pfad_import As String
Dim prfx As String
Dim trz_typ As String
Dim typ As String
Dim trz_nr As String
Dim nr As String
Dim trz_indx As String
Dim indx As String
Dim indx_alt As String
Dim trz_sffx As String
Dim sffx As String
Dim inhalt As String
Dim inhalt_alt As String
Dim plan As String
Dim pfad_versand As String
Dim pfad_ziel As String
Dim pfad_FT As String
Dim pfad_UE As String
Dim pfad_EM As String
Dim pfad_KO As String
Dim pfad_WP As String
Dim pfad_SL As String
Dim pfad_archiv As String
Dim pfad_logfile As String
Dim fso As scripting.FileSystemObject
Set fso = New scripting.FileSystemObject
Dim zielverzeichnis As scripting.Folder
Dim dokument_neu As scripting.File
Dim dokument_alt As scripting.File
Dim bauvorhaben As String
Dim logfile As String
Dim pfad1() As String
Dim pfad2() As String
Dim spl() As String
Dim erste_zeile As Integer, letzte_zeile As Integer
Dim i As Integer, j As Integer, st As Integer, z As Integer
Dim tabs1 As String, tabs2 As String
Dim spalte_prfx As Integer
Dim spalte_bauteil As Integer
Dim spalte_sffx As Integer

On Error GoTo ERROREXIT
erfolg = "nein"

'Informationen aus Konfiguration lesen
erste_zeile = Sheets("Konfiguration").Cells(59, 23)
bauvorhaben = Sheets("Verwaltung").Cells(4, 5)
pfad_logfile = Sheets("Konfiguration").Cells(67, 4)
pfad_versand = Sheets("Konfiguration").Cells(68, 4)
pfad_archiv = Sheets("Konfiguration").Cells(72, 4)
pfad_FT = Sheets("Konfiguration").Cells(73, 4)
pfad_UE = Sheets("Konfiguration").Cells(74, 4)
pfad_EM = Sheets("Konfiguration").Cells(75, 4)
pfad_KO = Sheets("Konfiguration").Cells(76, 4)
pfad_WP = Sheets("Konfiguration").Cells(77, 4)
pfad_SL = Sheets("Konfiguration").Cells(78, 4)
spalte_prfx = Sheets("Konfiguration").Cells(59, 17)
spalte_bauteil = Sheets("Konfiguration").Cells(60, 17)
spalte_sffx = Sheets("Konfiguration").Cells(62, 17)

If Right(pfad_logfile, 1) <> "\" Then pfad_logfile = pfad_logfile & "\"
If Right(pfad_versand, 1) <> "\" Then pfad_versand = pfad_versand & "\"
If Right(pfad_archiv, 1) <> "\" Then pfad_archiv = pfad_archiv & "\"
If Right(pfad_FT, 1) <> "\" Then pfad_FT = pfad_FT & "\"
If Right(pfad_UE, 1) <> "\" Then pfad_UE = pfad_UE & "\"
If Right(pfad_EM, 1) <> "\" Then pfad_EM = pfad_EM & "\"
If Right(pfad_KO, 1) <> "\" Then pfad_KO = pfad_KO & "\"
If Right(pfad_WP, 1) <> "\" Then pfad_WP = pfad_WP & "\"
If Right(pfad_SL, 1) <> "\" Then pfad_SL = pfad_SL & "\"

'Ordner zum verschieben w|fffd|hlen
Set fldr = Application.FileDialog(msoFileDialogFolderPicker)
With fldr
    .Title = "Ordner f|fffd|r einzusortierende Dokumente w|fffd|hlen"
    .AllowMultiSelect = False
    .InitialFileName = pfad_versand
    If .Show <> -1 Then GoTo ERROREXIT
    pfad_import = .SelectedItems(1)
End With

If Dir(pfad_import & "\*.pdf") = "" And Dir(pfad_import & "\*.dwg") = "" And Dir(pfad_import & "\*.abs") = "" Then
    MsgBox "Der ausgew|fffd|hlte Ordner enth|fffd|lt weder PDF noch DWG-Dateien!", vbCritical, "Pl|fffd|ne verschieben"
    Exit Sub
End If

pfad1() = Split(pfad_import, "\")

If Dir(pfad_logfile, vbDirectory) = "" Then MkDir (pfad_logfile)
Open pfad_logfile & Format(Now, "yyyy-mm-dd hh.mm.ss") & " verschieben_logfile.txt" For Output As #1
    logfile = pfad_logfile & Format(Now, "yyyy-mm-dd hh.mm.ss") & " verschieben_logfile.txt"
    Print #1, vbCrLf _
                & bauvorhaben & vbCrLf _
                & vbCrLf _
                & pfad1(UBound(pfad1)) & " aufger|fffd|umt: " & Format(Now, "dd.mm.yyyy hh:mm:ss") & " - Von: " & Environ("Username") & vbCrLf _
                & vbCrLf _
                & "=====================================================================================================" _
                & vbCrLf _
                & "Dokument" & vbTab & vbTab & vbTab & vbTab & vbTab & "Von" & vbTab & vbTab & vbTab & vbTab & "Nach" _
                & vbCrLf


Set startverzeichnis = fso.GetFolder(pfad_import)
For Each dokument_neu In startverzeichnis.Files

If LCase(Right(dokument_neu.Name, 3)) <> "pdf" And LCase(Right(dokument_neu.Name, 3)) <> "dwg" And LCase(Right(dokument_neu.Name, 3)) <> "abs" Then GoTo SHORTCUT

    If IsFileOpen(pfad_import & "\" & dokument_neu.Name) Then
        MsgBox "Plan " & dokument_neu.Name & " ist durch einen Benutzer ge|fffd|ffnet.", vbCritical, "Pl|fffd|ne verschieben"
        GoTo SHORTCUT
    End If
    
    'Planattribute werden zur|fffd|ckgesetzt
    prfx = ""
    trz_typ = ""
    typ = ""
    trz_nr = ""
    nr = ""
    trz_indx = ""
    indx = ""
    trz_sffx = ""
    sffx = ""
    plan = ""
    comp_wert = 2
    treffer_art = 0
    treffer_sheet = ""

    'Plantyp wird erkannt in function(schluessel)
    
    spl() = Split(schluessel(dokument_neu.Name), "*")
    For i = LBound(spl) To UBound(spl)
        If spl(i) <> "" Then
            If i = 0 Then plan = spl(i)
            If i = 1 Then treffer_art = spl(i)
            If i = 2 Then prfx = spl(i)
            If i = 3 Then trz_typ = spl(i)
            If i = 4 Then typ = spl(i)
            If i = 5 Then trz_nr = spl(i)
            If i = 6 Then nr = spl(i)
            If i = 7 Then trz_indx = spl(i)
            If i = 8 Then indx = spl(i)
            If i = 9 Then trz_sffx = spl(i)
            If i = 10 Then sffx = spl(i)
            If i = 11 Then trz_in = spl(i)
            If i = 12 Then inhalt = spl(i)
        End If
    Next
    
'    If LCase(inhalt) = "rundstahlliste" _
'    Or LCase(inhalt) = "mattenliste" _
'    Or LCase(inhalt) = "stahlliste" _
'    Or LCase(inhalt) = "mattenschneideskizze" _
'    Or LCase(inhalt) = "stahlliste biegeformen" _
'    Then GoTo SHORTCUT
        
    If treffer_art = 1 Then
        pfad_ziel = pfad_FT
    End If
    
    If treffer_art = 2 Then
        pfad_ziel = pfad_UE
    End If
    
    If treffer_art = 3 Or treffer_art = 4 Or treffer_art = 5 Then
        pfad_ziel = pfad_EM
    End If

    If treffer_art = 6 Then
        pfad_ziel = pfad_KO
    End If
    
    If treffer_art = 7 Then
        pfad_ziel = pfad_WP
    End If
    
    If treffer_art = 8 Then
        pfad_ziel = pfad_SL
        'MsgBox plan & " als Stahlliste erkannt"
    End If
    
    If treffer_art = 0 Then
        plan = Replace(dokument_neu.Name, Right(dokument_neu.Name, 4), "")
        MsgBox "F|fffd|r Plan " & plan & " keine Einsortierung gefunden." & vbCrLf & vbCrLf & "Bitte h|fffd|ndisch verschieben.", vbCritical, "Pl|fffd|ne verschieben"
        GoTo SHORTCUT
    End If
    
    'Alte Planst|fffd|nde ins Archiv verschieben
    
    pfad2() = Split(pfad_ziel, "\")
    Set zielverzeichnis = fso.GetFolder(pfad_ziel)
    
    If plan = "" Then GoTo SHORTCUT
   
    For Each dokument_alt In zielverzeichnis.Files
        indx_alt = Mid(dokument_alt.Name, Len(prfx & trz_typ & typ & trz_nr & nr & trz_indx) + 1, Len(indx))
        inhalt_alt = Mid(dokument_alt.Name, Len(prfx & trz_typ & typ & trz_nr & nr & trz_indx & indx & trz_sffx & sffx & trz_inhalt) + 1, Len(inhalt))
        If inhalt_alt = inhalt And Left(dokument_alt.Name, Len(plan)) = plan And LCase(Right(dokument_alt.Name, 3)) = LCase(Right(dokument_neu.Name, 3)) And StrComp(indx, indx_alt, vbBinaryCompare) <> 1 Then
            MsgBox "Plan " & plan & trz_indx & indx & ": Index in Ablage (" & trz_indx & indx_alt & ") schon vorhanden!", vbCritical, "Pl|fffd|ne verschieben"
            GoTo SHORTCUT
        End If
        'MsgBox Left(dokument_alt.Name, Len(prfx & trz_typ & plan)) & " = " & prfx & trz_typ & plan & vbCrLf & _
                LCase(Right(dokument_alt.Name, 3)) & " = " & LCase(Right(dokument_neu.Name, 3)) & vbCrLf & _
                indx & " / " & indx_alt
        If Left(dokument_alt.Name, Len(prfx & trz_typ & plan)) = prfx & trz_typ & plan And LCase(Right(dokument_alt.Name, 3)) = LCase(Right(dokument_neu.Name, 3)) And StrComp(indx, indx_alt, vbBinaryCompare) = 1 Then
            FileCopy dokument_alt.Path, pfad_archiv & "\" & dokument_alt.Name
            tabs1 = vbTab & vbTab & vbTab & vbTab & vbTab & vbTab
            If Len(dokument_alt.Name) > 7 Then tabs1 = vbTab & vbTab & vbTab & vbTab & vbTab
            If Len(dokument_alt.Name) > 15 Then tabs1 = vbTab & vbTab & vbTab & vbTab
            If Len(dokument_alt.Name) > 23 Then tabs1 = vbTab & vbTab & vbTab
            If Len(dokument_alt.Name) > 31 Then tabs1 = vbTab & vbTab
            If Len(dokument_alt.Name) > 39 Then tabs1 = vbTab
            tabs2 = vbTab & vbTab & vbTab & vbTab
            If Len(pfad2(UBound(pfad2) - 1)) > 7 Then tabs2 = vbTab & vbTab & vbTab
            If Len(pfad2(UBound(pfad2) - 1)) > 15 Then tabs2 = vbTab & vbTab
            If Len(pfad2(UBound(pfad2) - 1)) > 23 Then tabs2 = vbTab
            Print #1, dokument_alt.Name & tabs1 & pfad2(UBound(pfad2) - 1) & tabs2 & "Archiv"
            Kill (dokument_alt.Path)
        End If
    Next
         
    'plan verschieben
    FileCopy pfad_import & "\" & dokument_neu.Name, pfad_ziel & "\" & dokument_neu.Name
    tabs1 = vbTab & vbTab & vbTab & vbTab & vbTab & vbTab
    If Len(dokument_neu.Name) > 7 Then tabs1 = vbTab & vbTab & vbTab & vbTab & vbTab
    If Len(dokument_neu.Name) > 15 Then tabs1 = vbTab & vbTab & vbTab & vbTab
    If Len(dokument_neu.Name) > 23 Then tabs1 = vbTab & vbTab & vbTab
    If Len(dokument_neu.Name) > 31 Then tabs1 = vbTab & vbTab
    If Len(dokument_neu.Name) > 39 Then tabs1 = vbTab
    tabs2 = vbTab & vbTab & vbTab & vbTab
    If Len(pfad1(UBound(pfad1))) > 7 Then tabs2 = vbTab & vbTab & vbTab
    If Len(pfad1(UBound(pfad1))) > 15 Then tabs2 = vbTab & vbTab
    If Len(pfad1(UBound(pfad1))) > 23 Then tabs2 = vbTab
    Print #1, dokument_neu.Name & tabs1 & pfad1(UBound(pfad1)) & tabs2 & pfad2(UBound(pfad2) - 1)
    Kill (pfad_import & "\" & dokument_neu.Name)
    
    'N|fffd|chstes Dokument
SHORTCUT:
Next

erfolg = "ja"

MsgBox "Pl|fffd|ne einsortiert.", vbInformation, "Pl|fffd|ne verschieben"

ERROREXIT:
If erfolg = "nein" Then
    MsgBox "Es gab einen Fehler!", vbCritical, "Pl|fffd|ne verschieben"
End If

Close #1

If Dir(logfile) <> "" Then
    Shell "cmd /c " & Chr(34) & logfile & Chr(34)
Else
    Shell "Explorer.exe /e, " & pfad_logfile, vbNormalFocus
End If

End Sub
Function IsFileOpen(filename As String)
    Dim filenum As Integer, errnum As Integer

    On Error Resume Next   ' Turn error checking off.
    filenum = FreeFile()   ' Get a free file number.
    ' Attempt to open the file and lock it.
    Open filename For Input Lock Read As #filenum
    Close filenum          ' Close the file.
    errnum = Err           ' Save the error number that occurred.
    On Error GoTo 0        ' Turn error checking back on.

    ' Check to see which error occurred.
    Select Case errnum

        ' No error occurred.
        ' File is NOT already open by another user.
        Case 0
         IsFileOpen = False

        ' Error number for "Permission Denied."
        ' File is already opened by another user.
        Case 70
            IsFileOpen = True

        ' Another error occurred.
        Case Else
            Error errnum
    End Select

End Function

' InQuest injected base64 decoded content
' z{Li
' -zak

INQUEST-PP=macro
