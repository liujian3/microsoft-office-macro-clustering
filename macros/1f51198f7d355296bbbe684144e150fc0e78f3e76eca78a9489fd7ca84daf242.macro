Attribute VB_Name = "Module1"
Public Sub colorline(line As Integer)
    Dim i As Integer
    Dim berthloa, vslloa As Double
    Dim TML, cntRVl As String
    
    Sheets("Berthing plan").Range(ColLiveOPSDate & line).Formula = "=IF(HOUR(P" & line & ")=23,O" & line & "+DAY(1),O" & line & ")"
    Sheets("Berthing plan").Range(ColLiveETSDate & line).Formula = "=IF(HOUR(T" & line & ")=23,S" & line & "+DAY(1),S" & line & ")"
    Sheets("Berthing plan").Range(ColLiveOPSTime & line).Formula = "=P" & line & "+Settings!$P$29"
    Sheets("Berthing plan").Range(ColLiveETSTime & line).Formula = "=T" & line & "+Settings!$P$30"
    'Sheets("Berthing plan").Range(ColBerthTime & line).Formula = "=((U" & line & "-O" & line & ")*24)+HOUR(V" & line & ")-HOUR(P" & line & ")"
    'Sheets("Berthing plan").Range(ColBerthTime & line).Formula = "=((U" & line & "-O" & line & ")*24)+HOUR(V" & line & ")-HOUR(P" & line & ")"
    Sheets("Berthing plan").Range(ColBerthTime & line).Formula = "=IFERROR(((U" & line & "-O" & line & ")*24)+HOUR(V" & line & ")-HOUR(P" & line & "),""0"")"
    Sheets("Berthing plan").Range(ColMovesTotal & line).Formula = "=X" & line & "+Y" & line & "+Z" & line & "+AA" & line & "+AB" & line & ""
    Sheets("Berthing plan").Range(ColBerthProd & line).Formula = "=IFERROR(AC" & line & "/W" & line & ","""")"
    Sheets("Berthing plan").Range(ColLOA & line).Formula = "=IFERROR(VLOOKUP(D" & line & ",Settings!C$29:D$3500,2,FALSE),""0"")"
    Sheets("Berthing plan").Range(ColisMSC & line).Formula = "=IFERROR(VLOOKUP(D" & line & ",Settings!C$29:E$3500,3,FALSE),"""")"
    
    'Copy conditional format
    'Sheets("Berthing plan").Range("D2:F2").Select
    'Selection.Copy
    'Range("D" & line & ":" & "F" & line).Select
    'Selection.PasteSpecial Paste:=xlPasteFormats, Operation:=xlNone, _
    'SkipBlanks:=False, Transpose:=False
    'Application.CutCopyMode = False
    
   Sheets("Berthing plan").Range("D2:AK2").Select
    Selection.Copy
    Range("D" & line & ":" & "AK" & line).Select
    Selection.PasteSpecial Paste:=xlPasteFormats, Operation:=xlNone, _
    SkipBlanks:=False, Transpose:=False
    Application.CutCopyMode = False
    
    

    i = 10
    TML = Sheets("Berthing plan").Range(ColTML & line).Value
    cntRVl = Sheets("Settings").Cells(i, 3).Value
    vslloa = Sheets("Berthing plan").Range(ColLOA & line).Value
    berthloa = Sheets("Settings").Cells(i, 4).Value
    
    
    
    
    While TML <> Sheets("Settings").Cells(i, 3).Value And Sheets("Settings").Cells(i, 3).Value <> ""
       i = i + 1
    Wend

    
    
    If cntRVl <> "" And TML = Sheets("Settings").Cells(i, 3).Value Then
        berthloa = Sheets("Settings").Cells(i, 4).Value
        'color the entire line
        Sheets("Berthing plan").Range("C" & line & ":" & ColRemarks & line).Select
        With Selection.Interior
            .Pattern = xlSolid
            .PatternColorIndex = xlAutomatic
            .Color = Sheets("Settings").Cells(i, 5).Interior.Color
            .TintAndShade = 0
        End With
        
        'color the loa cell
        Sheets("Berthing plan").Range(ColLOA & line).Select
        If vslloa > berthloa Then
                With Selection.Font
                    .Color = RGB(255, 0, 0)
                End With
        Else
                With Selection.Font
                    .Color = RGB(0, 0, 0)
                End With
        End If
        
    End If

    
End Sub

Sub CheckBlankVessel()

    Dim sourceCol, currentRow As Integer
    Dim currentRowValue As String
    Dim startofselection, endofselection As String
   
        startofselection = Selection.Row
        endofselection = Selection.Row + Selection.Rows.Count - 1
        sourceCol = 4

        For currentRow = startofselection To endofselection
        
            currentRowValue = Cells(currentRow, sourceCol).Value
        
            If IsEmpty(currentRowValue) Or currentRowValue = "" Then
                Cells(currentRow, sourceCol).Select
                
                 MsgBox ("please insert vessel name in D" & currentRow)
                 
                 End 'stop the check until condition satisfied
    
            End If
                  
        Next

End Sub


Sub ChecknumVoy()
    
    Dim sourceCol, Rowcount, currentRow As Integer
    Dim currentRowValue As String

    Dim startofselection, endofselection As String
   
        startofselection = Selection.Row
        endofselection = Selection.Row + Selection.Rows.Count - 1
        sourceCol = 5
    

        For currentRow = startofselection To endofselection
            currentRowValue = Cells(currentRow, sourceCol).Value
  
            If IsEmpty(currentRowValue) Or currentRowValue = "" Then
                Cells(currentRow, sourceCol).Select

                MsgBox ("please insert vessel Voy in E" & currentRow)
                
                End  'stop the check until condition satisfied
                
            End If

        Next

End Sub


Sub Check_ETB_ETC()
    
    Dim rowCount1 As Integer
    Dim currentRow1 As Integer
    Dim ETB_Date, ETB_Time, ETC_Date, ETC_Time As Integer
    
    
    Dim startofselection, endofselection As String
   
   startofselection = Selection.Row
   endofselection = Selection.Row + Selection.Rows.Count - 1

    

    ETB_Date = 15
    ETB_Time = 16
    ETC_Date = 19
    ETC_Time = 20
    


        For currentRow1 = startofselection To endofselection
            currentRowValue1 = Cells(currentRow1, ETB_Date).Value
            currentRowValue2 = Cells(currentRow1, ETB_Time).Value
            currentRowValue3 = Cells(currentRow1, ETC_Date).Value
            currentRowValue4 = Cells(currentRow1, ETC_Time).Value
                            

            
                                If currentRowValue1 > currentRowValue3 Then
                                Cells(currentRow1, ETC_Date).Select
                                
                                MsgBox ("Please insert correct Date In S" & currentRow1)
                                
                                End
                                
                                    ElseIf currentRowValue1 >= currentRowValue3 And currentRowValue2 >= currentRowValue4 Then
                                    
                                    Cells(currentRow1, ETC_Time).Select
                                
                                    MsgBox ("Please insert correct Time In T" & currentRow1)
                                    

                                                                     
                                End   'stop the check until condition satisfied

                                End If
                                
        Next
         
         
         
  End Sub
  

Sub CheckBerthtime()

    Dim sourceCol, Rowcount, currentRow As Integer
    Dim currentRowValue As Long
    Dim startofselection, endofselection As Integer
    Dim Formula As String
     
   
   startofselection = Selection.Row
   endofselection = Selection.Row + Selection.Rows.Count - 1
    

    sourceCol = 23

    
        'for every row, find the first blank cell and select it
        For currentRow = startofselection To endofselection
            currentRowValue = Cells(currentRow, sourceCol).Value
            'Formula = "=IFERROR(((Cells(currentRow, ColLiveETSDate) - (Cells(currentRow, ColLiveETBDate))) * 24) + Hour(Cells(currentRow, ColLiveETSTime)) - Hour(Cells(currentRow, ColLiveETBTime)),""0"")"
            Formula = "=IFERROR(((U" & currentRow & "-O" & currentRow & ")*24)+HOUR(V" & currentRow & ")-HOUR(P" & currentRow & "),""0"")"
            If IsEmpty(currentRowValue) Or currentRowValue <= 0 Then

                MsgBox ("Berth time Missing! Calculating in W" & currentRow)
                Worksheets("Berthing plan").Range(ColBerthTime & currentRow).Formula = Formula
                
                End 'stop the check until condition satisfied
                
            End If

        Next
    
End Sub



Sub CheckLoa()
    
    Dim sourceCol, Rowcount, currentRow As Integer
    Dim currentRowValue As String
    Dim startofselection, endofselection As String
     
    Application.EnableEvents = False
    startofselection = Selection.Row
    endofselection = Selection.Row + Selection.Rows.Count - 1

    sourceCol = 35

    

        For currentRow = startofselection To endofselection
            currentRowValue = Cells(currentRow, sourceCol).Value
    
                If currentRowValue = "" Then
                    Cells(currentRow, sourceCol).Select

                    MsgBox ("Please Check Settings for LOA in AI" & currentRow)
                
                    ElseIf currentRowValue <= 0 Then
                            Cells(currentRow, sourceCol).Select
                    
                            MsgBox ("Please Check Settings for LOA in AI" & currentRow)
                    
                    Application.EnableEvents = True
                    End 'stop the check until condition satisfied
            
            
                End If

        Next
     Application.EnableEvents = True

End Sub


Sub CheckTerminal()

    Dim sourceCol, Rowcount, currentRow As Integer
    Dim currentRowValue As String
    Dim startofselection, endofselection As String
    Dim DefaultTML As String

    DefaultTML = Worksheets("Settings").Range("C10").Value
   
            startofselection = Selection.Row
            endofselection = Selection.Row + Selection.Rows.Count - 1
            sourceCol = 3
            sourceCol1 = 4
            sourceCol2 = 5
    

            
        For currentRow = startofselection To endofselection 'for every row, find the first blank cell and select it
            currentRowValue = Cells(currentRow, sourceCol).Value
        
            If IsEmpty(currentRowValue) Or currentRowValue = "" Then



                Worksheets("Berthing plan").Range(ColTML & currentRow) = DefaultTML
                
                MsgBox ("Missing TML has been inserted by default in position C" & currentRow & " for: " & vbNewLine & Cells(currentRow, sourceCol1).Value) & " " & Cells(currentRow, sourceCol2).Value
                
                End 'stop the check until condition satisfied
                
            End If

        Next
        
End Sub

Sub Check_ETB_DAYSTART()
    
    Dim rowCount1, countall, countalltot, hiddenrows As Integer
    Dim currentRow1 As Integer
    Dim VESSEL, startday, ETB_Date, ETB_Time, ETC_Date, ETC_Time As Integer
    Dim startofselection, endofselection As String
    
    
        With Worksheets("Visual berth")
        countall = .Range("A7", .Range("A1000").End(xlUp)).Rows.SpecialCells(xlCellTypeVisible).Count
        countalltot = .Range("A7", .Range("A1000").End(xlUp)).Rows.Count
        hiddenrows = (countalltot - countall)
        End With
   
   startofselection = Selection.Row
   endofselection = Selection.Row + Selection.Rows.Count - 1

    

    ETB_Date = 15
    ETB_Time = 16
    VESSEL = 4

    
    startday = Sheets("Visual berth").Range("A" & 8 + hiddenrows).Value
    

        For currentRow1 = startofselection To endofselection
            currentRowValue1 = Cells(currentRow1, ETB_Date).Value
            currentRowValue2 = Cells(currentRow1, ETB_Time).Value
            currentRowValue3 = Cells(currentRow1, VESSEL).Value


                    If currentRowValue1 < startday Then
                    Cells(currentRow1, ETB_Date).Select
                    
                    MsgBox ("Please note " & currentRowValue3 & " ETB is not whitin the Visual Berth Dates: cell O" & currentRow1)
                       
                    End   'stop the check until condition satisfied

                    End If
                                
        Next
         
         
         
  End Sub

Attribute VB_Name = "Module2"
Public Sub checks()

CheckTerminal
CheckBlankVessel
ChecknumVoy
Check_ETB_ETC
CheckBerthtime
CheckLoa
Check_ETB_DAYSTART

End Sub
Attribute VB_Name = "Module3"
Sub Create_berth_structure()
    Dim totalLOA, bollardsize, cellsize, berthloa As Double
    Dim shiftnumber, i, startberth, topberth, berthsequence, startleft, endberth, X, asauter, previousberth, endberthcol, bollardqty As Integer
    Dim berthname, berthcomments, endcolumn, shifttocreate, berthcolor As String
    Dim tabshift(6) As Variant
    
    Application.DisplayAlerts = False
    Application.ScreenUpdating = False
    Application.Calculation = xlCalculationManual
    
    'suppression et creation de la berth structure
    i = 4
    j = 12
    X = 0
    While Sheets("Settings").Cells(i, j).Value <> ""
        tabshift(X) = Sheets("Settings").Cells(i, j).Value & "H-" & Sheets("Settings").Cells(i + 1, j).Value & "H"
        j = j + 1
        X = X + 1
    Wend
    shiftnumber = X
    
    
     If shiftnumber = 3 Then
        shifttocreate = "template shift3"
      Else
        If shiftnumber = 4 Then
            shifttocreate = "template shift4"
        Else
           If shiftnumber = 2 Then
            shifttocreate = "template shift2"
              Else
                If shiftnumber = 5 Then
                shifttocreate = "template shift5"
                    Else
                        If shiftnumber = 6 Then
                        shifttocreate = "template shift6"
                            Else
                            MsgBox "Shift Quantity is not correct!"
                            End
                        End If
                End If
        End If
      End If
    End If
    
    
    
    
    'creation de la structure
    
    If Not (IsError(Evaluate("='" & "Visual Berth" & "'!A1")) = True) Then
        Sheets("Visual Berth").Select
        ActiveWindow.SelectedSheets.Delete
    End If
    Sheets(shifttocreate).Visible = True
    Sheets(shifttocreate).Select
    Sheets(shifttocreate).Copy Before:=Sheets(2)
    Sheets(shifttocreate & " (2)").Select
    Sheets(shifttocreate & " (2)").Name = "Visual berth"
    Sheets(shifttocreate).Visible = False
    
    'ecriture du shift
    i = 7
    X = 0
    While i < 1250
        Sheets("Visual Berth").Cells(i, 2).Value = tabshift(X)
        i = i + 1
        X = X + 1
        If X = shiftnumber Then X = 0
    Wend
    
    startberth = Sheets("Visual Berth").Range("C6").Left
    startleft = 3
    topberth = Sheets("Visual Berth").Range("C6").Top
       
    'bollard
    If Sheets("Settings").Range("D5").Value = "" Then
        MsgBox ("You must provide the distance between bollard (cells C5)")
        End
    End If
    bollardsize = Sheets("Settings").Range("D5").Value
    
    'LOA

    'size of the screen 3500
    
    totalLOA = Sheets("Settings").Range("D24").Value
    
    'cellsize = 1.43
    
    If totalLOA >= 3000 Then
        cellsize = Round(2400 / totalLOA, 1)
    Else
        If totalLOA >= 2500 Then
            cellsize = Round(2600 / totalLOA, 1)
        Else
            If totalLOA >= 2000 Then
                cellsize = Round(3100 / totalLOA, 1)
            Else
                If totalLOA >= 1500 Then
                    cellsize = Round(3200 / totalLOA, 1)
                Else
                    If totalLOA >= 1000 Then
                        cellsize = Round(3300 / totalLOA, 1)
                    Else
                        cellsize = Round(3400 / totalLOA, 1)
                    End If
                End If
            End If
        End If
    End If
    
    
    Sheets("Visual Berth").Select
    Columns("C:MZ").Select
    Selection.ColumnWidth = cellsize
    Range("C7").Select
    ActiveWindow.FreezePanes = True
    
    
    'berth
    Sheets("Settings").Select
    i = 10
    j = 0
    X = 1
    previousberth = startleft - 1

    While Sheets("Settings").Range("D" & i).Value <> ""
        berthname = Sheets("Settings").Range("C" & i).Value
        berthsequence = Sheets("Settings").Range("B" & i).Value
        berthloa = Sheets("Settings").Range("D" & i).Value
        berthcomments = Sheets("Settings").Range("F" & i).Value
       'berthcolor = .ThemeColor
        
    '    endberth = Int(berthloa / bollardsize) + previousberth
        bollardqty = Round(berthloa / bollardsize)
        
        Sheets("Visual Berth").Select

        Columns(Replace(Cells(1, previousberth + 1).Address(True, False), "$1", "") & ":" & Replace(Cells(1, bollardqty + previousberth).Address(True, False), "$1", "")).Select
       'Selection.Interior.ThemeColor = Sheets("Settings").Range("E" & i).Interior.ThemeColor
        Selection.Interior.Color = Sheets("Settings").Range("E" & i).Interior.Color
        Selection.Interior.TintAndShade = Sheets("Settings").Range("E" & i).Interior.TintAndShade
        Selection.Interior.PatternColorIndex = Sheets("Settings").Range("E" & i).Interior.PatternColorIndex
        Selection.Interior.PatternTintAndShade = Sheets("Settings").Range("E" & i).Interior.PatternTintAndShade
        
        'Range(Cells(4, previousberth), Cells(4, endberth + 1)).Select
        Range(Cells(4, previousberth + 1), Cells(4, bollardqty + previousberth)).Select
        With Selection
            .HorizontalAlignment = xlCenter
            .WrapText = False
            .Orientation = 0
            .AddIndent = False
            .IndentLevel = 0
            .ShrinkToFit = False
            .ReadingOrder = xlLTR
            .MergeCells = False
        End With
        Selection.Merge
        
      '  Range(Cells(2, previousberth), Cells(2, endberth + 1)).Select
        Range(Cells(2, previousberth + 1), Cells(2, bollardqty + previousberth)).Select
        With Selection
            .HorizontalAlignment = xlCenter
            .WrapText = False
            .Orientation = 0
            .AddIndent = False
            .IndentLevel = 0
            .ShrinkToFit = False
            .ReadingOrder = xlLTR
            .MergeCells = False
                With Selection.Font
                    .Name = "Cambria"
                    .Size = 12 'change font size to berthname
                    .Strikethrough = False
                    .Superscript = False
                    .Subscript = False
                    .OutlineFont = False
                    .Shadow = False
                    .Underline = xlUnderlineStyleNone
                    .Color = -4165632
                    .TintAndShade = 0
                    .ThemeFont = xlThemeFontMajor
                End With
        End With
        Selection.Merge
        Sheets("Visual Berth").Cells(2, previousberth + 1).Value = berthname
        Sheets("Visual Berth").Cells(4, previousberth + 1).Value = berthloa & " mts " & berthcomments
        
        
        X = 1
        asauter = 0
        b = 1
        j = previousberth + 1
        While b <= bollardqty
            Sheets("Visual Berth").Cells(5, j).Value = X
            Sheets("Visual Berth").Cells(3, j).Value = berthname
            endberthcol = j
           
          '  Sheets("Visual Berth").Range(Cells(6, j), Cells(6, endberthcol)).Select
          '  Selection.Merge
            Sheets("Visual Berth").Cells(6, j).Value = X

            j = j + 1
            b = b + 1
            X = X + 1
        Wend
                
        Columns(Cells(1, endberthcol).Column).Select
        With Selection.Borders(xlEdgeRight)
            .LineStyle = xlDouble
            .ColorIndex = xlAutomatic
            .TintAndShade = 0
            .Weight = xlThick
        End With
        
        previousberth = previousberth + bollardqty
        'previousberth = j + asauter
        
     '   j = j + 1
        i = i + 1
    Wend

    
    Rows("6:6").Select
    With Selection
        .HorizontalAlignment = xlCenter
        .VerticalAlignment = xlCenter
    End With
    Sheets("Visual berth").Range("A1").Select
    Sheets("Visual berth").Range("C7:JZ1000").Select
    Selection.NumberFormat = "@"
    Selection.Font.Size = 8
    
    Application.DisplayAlerts = True
    Application.ScreenUpdating = True
    Application.Calculate
    Application.Calculation = xlAutomatic
    
    MsgBox ("Visual berth structure has been created !")
    
End Sub

Sub cleancranes(startselection As Integer, endselection As Integer)
    Dim nameofshape As String
    Dim cntRow As Integer
    Dim s As Shape
    
    For cntRow = startselection To endselection
        nameofshape = Cells(cntRow, 4).Value & "-" & Cells(cntRow, 5)
        For Each s In Worksheets("Visual berth").Shapes
            If nameofshape = s.Name Then
                rowshape = s.TopLeftCell.Row
                
                While Worksheets("Visual berth").Cells(rowshape, s.TopLeftCell.Column - 1).Value <> ""
                    If s.TopLeftCell.Column - 1 > 2 Then
                        'Sheets("Visual berth").Select
                        Worksheets("Visual berth").Cells(rowshape, s.TopLeftCell.Column - 1).Value = "" ' delete rangecrane value
                    End If
                    rowshape = rowshape + 1
                Wend
                s.Delete
            End If
        Next
    Next
    
End Sub
                        

Sub CreateVisualberth()
    Dim vsl, voyage, service, move, ETA, ETAT, ETB, ETC, ETS, ETST, loatext, Gangs, iswec, ismscvsl, remarks, TML As String
    Dim ligne, LOA, i, topstart, leftstart, topposition, berth1, berth2, berth3, berth, j, bollardplace, berthlength, berthplace, shiftqty, X, z, shiftdelay, fontsize, k, sens As Integer
    
    Dim timeop, daydiff, bollardsize, bollardsizedisplay, oneday, hoursize As Double
    Dim daystart As Date
    Dim cntRow, Col, cmnshape, rowshape, hiddenrows, countalltot, countall, hiddenday, cleanc, startofselection, endofselection As Integer
    Dim cntRowValue, Rangecrane, ETBTtext, ETATtext As String
    Dim s As Shape, xs, ys, zmid, cranexshift As String
    Dim Rowcount, currentRow As Integer
    Dim currentRowValue As String
    Dim rwCnt, currntRw As Integer
    Dim cntRVl As String
                            
    Application.ScreenUpdating = False
                            
    'on check s'il a bien select les vessels
    If Selection.Column <> 4 Or Selection.Row < 8 Then
        MsgBox ("You must select a list of vessel")
        Exit Sub
    End If
    
    Call checks
    
    hiddenrows = 0
    With Worksheets("Visual berth")
        countall = .Range("A7", .Range("A1000").End(xlUp)).Rows.SpecialCells(xlCellTypeVisible).Count
        countalltot = .Range("A7", .Range("A1000").End(xlUp)).Rows.Count
        hiddenrows = (countalltot - countall)
    End With


    'cleaning
     Call cleancranes(Selection.Row, Selection.Row + Selection.Rows.Count - 1)
    'end cleaning
    

'parameter
    berthlength = Sheets("Settings").Range("D24").Value
    shiftdelay = Sheets("Settings").Range("O2").Value
    fontsize = Sheets("Settings").Range("O14").Value
    
    If Sheets("Settings").Range("M2").Value = "" Then
        MsgBox ("Error on shift quantity")
        End
        Else
            shiftqty = Sheets("Settings").Range("M2").Value
    End If
    
    hiddenday = hiddenrows / shiftqty
    
    
    
    If shiftqty = 2 Then
        oneday = Sheets("Visual berth").Range("C" & 7 + hiddenrows + 2).Top - Sheets("Visual berth").Range("C" & 7 + hiddenrows).Top
        shiftsize = (Sheets("Visual berth").Range("C" & 7 + hiddenrows + 2).Top - Sheets("Visual berth").Range("C" & 7 + hiddenrows).Top) / 2
        daystart = Sheets("Visual berth").Range("A" & 7 + hiddenrows).Value 'Daystart change in case of different shiftdelay
    
        Else
        If shiftqty = 3 Then
                oneday = Sheets("Visual berth").Range("C" & 7 + hiddenrows + 3).Top - Sheets("Visual berth").Range("C" & 7 + hiddenrows).Top
                shiftsize = (Sheets("Visual berth").Range("C" & 7 + hiddenrows + 3).Top - Sheets("Visual berth").Range("C" & 7 + hiddenrows).Top) / 3
                daystart = Sheets("Visual berth").Range("A" & 7 + hiddenrows + 1).Value 'Daystart change in case of different shiftdelay
        
                Else
                If shiftqty = 4 Then
                        oneday = Sheets("Visual berth").Range("C" & 7 + hiddenrows + 4).Top - Sheets("Visual berth").Range("C" & 7 + hiddenrows).Top
                        shiftsize = (Sheets("Visual berth").Range("C" & 7 + hiddenrows + 4).Top - Sheets("Visual berth").Range("C" & 7 + hiddenrows).Top) / 4
                        daystart = Sheets("Visual berth").Range("A" & 7 + hiddenrows).Value 'Daystart change in case of different shiftdelay
               
                        Else
                        If shiftqty = 5 Then
                                oneday = Sheets("Visual berth").Range("C" & 7 + hiddenrows + 5).Top - Sheets("Visual berth").Range("C" & 7 + hiddenrows).Top
                                shiftsize = (Sheets("Visual berth").Range("C" & 7 + hiddenrows + 5).Top - Sheets("Visual berth").Range("C" & 7 + hiddenrows).Top) / 5
                                daystart = Sheets("Visual berth").Range("A" & 7 + hiddenrows).Value 'Daystart change in case of different shiftdelay
                                Else
                                If shiftqty = 6 Then
                                        oneday = Sheets("Visual berth").Range("C" & 7 + hiddenrows + 6).Top - Sheets("Visual berth").Range("C" & 7 + hiddenrows).Top
                                        shiftsize = (Sheets("Visual berth").Range("C" & 7 + hiddenrows + 6).Top - Sheets("Visual berth").Range("C" & 7 + hiddenrows).Top) / 6
                                        daystart = Sheets("Visual berth").Range("A" & 7 + hiddenrows).Value 'Daystart change in case of different shiftdelay
                                End If
                        End If
                End If
         End If
    End If
    
    
    
    
    
    
    bollardsize = Sheets("Settings").Range("D5").Value
    hoursize = oneday / 24

    bollardsize = Sheets("Settings").Range("D5").Value
    bollardsizedisplay = Sheets("Visual berth").Range("D7").Left - Sheets("Visual berth").Range("C7").Left
    
    'daystart = Sheets("Visual berth").Range("A" & 7 + hiddenrows + 1).Value
    topstart = Sheets("Visual berth").Range("C" & 7 + hiddenrows).Top 'WAS .VALUE INSTEAD OF TOP
    leftstart = Sheets("Visual berth").Range("C" & 7 + hiddenrows).Left
    
    'parameter settings END
    

    j = Selection.Rows.Count
    
    
    'check in which sens he has to go
    ligne = ActiveCell.Row
    
    sens = 1
    If j > 1 And Range("D" & ligne + 1).Value = "" Then
        sens = -1
    End If
    
    
    X = 1
    While j > 0
        Sheets("Berthing plan").Select
        timeop = 0
        daydiff = 0
        
        If Sheets("Berthing plan").Range("D" & ligne).Value <> "" Then
  
            vsl = Sheets("Berthing plan").Range(ColVSL & ligne).Value
            voyage = Sheets("Berthing plan").Range(ColVOY & ligne).Value
            service = Sheets("Berthing plan").Range(ColSERVICE & ligne).Value
            move = Sheets("Berthing plan").Range(ColMovesTotal & ligne).Value
            timeop = Sheets("Berthing plan").Range(ColBerthTime & ligne).Value
            ETA = Sheets("Berthing plan").Range(ColLiveETADate & ligne).Value
            ETAT = Sheets("Berthing plan").Range(ColLiveETATime & ligne).Text
            ETATtext = Sheets("Berthing plan").Range(ColLiveETATime & ligne).Text
            ETB = Sheets("Berthing plan").Range(ColLiveETBDate & ligne).Value
            ETBT = Hour(Sheets("Berthing plan").Range(ColLiveETBTime & ligne).Value)
            ETBTtext = Sheets("Berthing plan").Range(ColLiveETBTime & ligne).Text
            ETC = Sheets("Berthing plan").Range(ColLiveETCDate & ligne).Value
            ETCT = Hour(Sheets("Berthing plan").Range(ColLiveETCTime & ligne).Value)
            ETS = Sheets("Berthing plan").Range(ColLiveETSDate & ligne).Value
            ETST = Hour(Sheets("Berthing plan").Range(ColLiveETSTime & ligne).Value)
            Gangs = Sheets("Berthing plan").Range(ColCranesGangs & ligne).Value
            LOA = Sheets("Berthing plan").Range(ColLOA & ligne).Value
            ismscvsl = Sheets("Berthing plan").Range(ColisMSC & ligne).Value
            remarks = Sheets("Berthing plan").Range(ColRemarks & ligne).Value
            

            If LOA = "" Then
                LOA = InputBox("Please provide LOA of : " & vsl)
                i = 29
                While Sheets("Settings").Range("C" & i).Value <> ""
                    i = i + 1
                Wend
                Sheets("Settings").Range("C" & i).Value = vsl
                Sheets("Settings").Range("D" & i).Value = LOA
                MsgBox ("thank you. LOA of this vessel has been saved")
            End If
            
            loatext = " " & LOA & "m"
            
            berth = Sheets("Settings").Range("C10").Value
            If Range("C" & ligne).Value <> "" Then
                berth = Range("C" & ligne).Value
            End If
             
            bollardplace = 1
            If Range("B" & ligne).Value <> "" Then
                bollardplace = Range("B" & ligne).Value
            End If
        

            'position of the vessel on the berth
            'on parcours les berth puis les bollards
            z = findberthplace(berth:=berth, bollardplace:=bollardplace)
            
            berthplace = Sheets("visual berth").Cells(5, z).Left
            
            daydiff = ETB - daystart
 
           
           'topposition = topstart + (oneday * (daydiff - shiftqty)) + (ETBT * hoursize) + (hoursize * shiftdelay)
           topposition = topstart + (oneday * daydiff) + (ETBT * hoursize) + (hoursize * shiftdelay) ' correct formula without (- shiftqty)
            
            If ETB = ETC Then
                If ETBT >= ETCT Then
                     MsgBox ("Warning : " & vsl & " has an ETC which is before the ETB")
                     Exit Sub
                End If
            Else
                If ETB > ETC Then
                    MsgBox ("Warning : " & vsl & " has an ETC which is before the ETB")
                    Exit Sub
                End If
            End If
            
            If ETB >= daystart Then
            
                        Sheets("Visual berth").Select
                        Set objShp = ActiveSheet.Shapes.AddShape(msoShapeRectangle, berthplace, topposition, LOA / bollardsize * bollardsizedisplay, timeop * hoursize)
                        objShp.Select
                        objShp.Name = vsl & "-" & voyage
                        Selection.ShapeRange.ShapeStyle = msoShapeStylePreset22
                        Selection.ShapeRange.TextFrame2.TextRange.Characters.Text = _
                            vsl & vbNewLine & voyage & vbNewLine & "ETA " & ETA & " " & ETATtext & vbNewLine & "LOA: " & loatext & vbNewLine & service & vbNewLine & "ETB " & " " & ETBTtext & vbNewLine & "Moves: " & move & vbNewLine & "Gangs : " & Gangs & vbNewLine & "ETC " & " " & ETCT & ":00" & vbNewLine & remarks
                        Selection.ShapeRange.TextFrame2.TextRange.Characters.Font.Size = fontsize
                         Selection.ShapeRange.TextFrame2.TextRange.Characters(1, Len(vsl) + Len(voyage)).Font.Bold = _
                            msoTrue
                        Selection.ShapeRange.TextFrame2.TextRange.Characters(Len(vsl) + Len(voyage) + Len(ETA) + Len(ETATtext) + Len(loatext) + 15, Len(service)).Font.Fill.ForeColor.RGB = RGB(255, 0, 0)
                        Selection.ShapeRange.TextFrame2.TextRange.ParagraphFormat.Alignment = _
                            msoAlignCenter
                            
                                                  
                            
                                If ismscvsl = "NO" Then
                                    Rowcount = Sheets("Settings").Cells(Rows.Count, 18).End(xlUp).Row
                                    For currentRow = 29 To Rowcount
                                currentRowValue = Sheets("Settings").Cells(currentRow, 18).Value
                                        If service = "" Then
                                                With Selection.Interior
                                                    .Pattern = xlSolid
                                                    .PatternColorIndex = xlAutomatic
                                                    .Color = 16777215
                                                    .TintAndShade = 0
                                                End With
                                         ElseIf LTrim(UCase(currentRowValue)) = LTrim(UCase(service)) Then
                                                With Selection.Interior
                                                    .Pattern = xlSolid
                                                    .PatternColorIndex = xlAutomatic
                                                    .Color = Sheets("Settings").Cells(currentRow, 20).Interior.Color
                                                    .TintAndShade = 0
                                                End With
                                        End If
                                    Next
                                ElseIf ismscvsl = "YES" Then
                                    Rowcount = Sheets("Settings").Cells(Rows.Count, 12).End(xlUp).Row
                                    For currentRow = 29 To Rowcount
                                        currentRowValue = Sheets("Settings").Cells(currentRow, 12).Value
                                        If service = "" Then
                                            With Selection.Interior
                                                .Pattern = xlSolid
                                                .PatternColorIndex = xlAutomatic
                                                .Color = 16777215
                                                .TintAndShade = 0
                                            End With
                                        ElseIf LTrim(UCase(currentRowValue)) = LTrim(UCase(service)) Then
                                            With Selection.Interior
                                                .Pattern = xlSolid
                                                .PatternColorIndex = xlAutomatic
                                                .Color = Sheets("Settings").Cells(currentRow, 14).Interior.Color
                                                .TintAndShade = 0
                                            End With
                                        End If
                                    Next
                                End If
                       
            
            
                         'crane display close to the shape
                        putcrane toprow:=objShp.TopLeftCell.Row, leftcolumn:=objShp.TopLeftCell.Column, Gangs:=Gangs
            
                        rwCnt = Sheets("Settings").Cells(Rows.Count, 3).End(xlUp).Offset(-2556, 0).Row
                        TML = Sheets("Berthing plan").Range(ColTML & ligne).Value
                        
                        For currntRw = 10 To rwCnt
                            cntRVl = Sheets("Settings").Cells(currntRw, 3).Value
                            If TML = cntRVl Then
                                Sheets("Berthing plan").Select
                                Sheets("Berthing plan").Range(ColTML & ligne & ":" & ColRemarks & ligne).Select
                                With Selection.Interior
                                    .Pattern = xlSolid
                                    .PatternColorIndex = xlAutomatic
                                    .Color = Sheets("Settings").Cells(currntRw, 5).Interior.Color
                                    .TintAndShade = 0
                                End With
                            End If
                        Next
             End If
            
                
        End If
            currntRw = currntRw + 1
            ligne = ligne + (1 * sens)
            j = j - 1
        
    Wend
    
   Application.ScreenUpdating = True
   
   MsgBox ("done")
    
End Sub

Function findberthplace(ByVal berth As String, ByVal bollardplace As Integer) As Integer
    Dim z As Integer
    
    z = 3
    While Sheets("visual berth").Cells(3, z).Value <> berth
        z = z + 1
    Wend
    ' le berth est trouv|fffd| on parcours les bollards
    While Sheets("visual berth").Cells(5, z).Value <> bollardplace
        z = z + 1
    Wend
    
    findberthplace = z
            
End Function

Sub putcrane(ByVal toprow As Integer, leftcolumn As Integer, ByVal Gangs As String)
    Dim zmid, columnoffset As Integer
    
    If leftcolumn = 3 Then
        columnoffset = 0
    Else
        columnoffset = 1
    End If
    
    If leftcolumn > 2 Then
        zmid = 1
        cranexshift = Mid(Gangs, 1, 1)
        While Len(cranexshift) <> 0
              Worksheets("Visual berth").Cells(toprow, leftcolumn - columnoffset) = cranexshift
              toprow = toprow + 1
              zmid = zmid + 1
              cranexshift = Mid(Gangs, zmid, 1)
        Wend
    Else
    End If
    
End Sub

Sub Savenewposition()
    
    Dim leftstart, newhour, previousberth, newberthposition, newberth, shiftdelay, hiddenday, hiddenrows, countalltot, countall, Hidden1, Hidden2, Hidden3, Hidden4 As Integer
    Dim StartDate, newpositiondate As Date
    Dim starttop, shiftsize, hoursize, bollardsize, newETBinhour, newETCinhour, ShapeHigh As Double
    Dim tabvessel(250, 9) As Variant
    Dim tabberth(20, 3) As Variant ' berthnumber, berthdepart, berthfin
    Dim tabrangerberth(20, 2) As Variant
    Dim ColVSL, colETBday, colETBdayT, ColETCDay, ColETCDayT, colBerth, colvoyage, ColPosition As String
    

    
    Application.DisplayAlerts = False
    Application.ScreenUpdating = False
    Application.Calculation = xlCalculationManual
    
    

    
    'parameter settings
    'we count the hidden day
    hiddenrows = 0
    With Worksheets("Visual berth")
        countall = .Range("A7", .Range("A1000").End(xlUp)).Rows.SpecialCells(xlCellTypeVisible).Count
        countalltot = .Range("A7", .Range("A1000").End(xlUp)).Rows.Count
        hiddenrows = (countalltot - countall)
    End With
    
    
    If Sheets("Settings").Range("M2").Value = "" Then
        MsgBox ("Error on shift quantity")
        End
        Else
            shiftqty = Sheets("Settings").Range("M2").Value
    End If

    'parameter
    
    shiftdelay = Sheets("Settings").Range("O2").Value
    starttop = Sheets("Visual berth").Range("C" & 7 + hiddenrows).Top
    leftstart = Sheets("Visual berth").Range("C7").Left
    hiddenday = hiddenrows / shiftqty
        
    
    If shiftqty = 2 Then
        oneday = Sheets("Visual berth").Range("C" & 7 + hiddenrows + 2).Top - Sheets("Visual berth").Range("C" & 7 + hiddenrows).Top
        shiftsize = (Sheets("Visual berth").Range("C" & 7 + hiddenrows + 2).Top - Sheets("Visual berth").Range("C" & 7 + hiddenrows).Top) / 2
        StartDate = Sheets("Visual berth").Range("A" & 7 + hiddenrows).Value 'Daystart change in case of different shiftdelay
    
       Else
       If shiftqty = 3 Then
        oneday = Sheets("Visual berth").Range("C" & 7 + hiddenrows + 3).Top - Sheets("Visual berth").Range("C" & 7 + hiddenrows).Top
        shiftsize = (Sheets("Visual berth").Range("C" & 7 + hiddenrows + 3).Top - Sheets("Visual berth").Range("C" & 7 + hiddenrows).Top) / 3
        StartDate = Sheets("Visual berth").Range("A" & 7 + hiddenrows + 1).Value
      
            Else
            If shiftqty = 4 Then
            oneday = Sheets("Visual berth").Range("C" & 7 + hiddenrows + 4).Top - Sheets("Visual berth").Range("C" & 7 + hiddenrows).Top
            shiftsize = (Sheets("Visual berth").Range("C" & 7 + hiddenrows + 4).Top - Sheets("Visual berth").Range("C" & 7 + hiddenrows).Top) / 4
            StartDate = Sheets("Visual berth").Range("A" & 7 + hiddenrows).Value
            
                Else
                If shiftqty = 5 Then
                oneday = Sheets("Visual berth").Range("C" & 7 + hiddenrows + 5).Top - Sheets("Visual berth").Range("C" & 7 + hiddenrows).Top
                shiftsize = (Sheets("Visual berth").Range("C" & 7 + hiddenrows + 5).Top - Sheets("Visual berth").Range("C" & 7 + hiddenrows).Top) / 5
                StartDate = Sheets("Visual berth").Range("A" & 7 + hiddenrows).Value
                
                    Else
                    If shiftqty = 6 Then
                    oneday = Sheets("Visual berth").Range("C" & 7 + hiddenrows + 6).Top - Sheets("Visual berth").Range("C" & 7 + hiddenrows).Top
                    shiftsize = (Sheets("Visual berth").Range("C" & 7 + hiddenrows + 6).Top - Sheets("Visual berth").Range("C" & 7 + hiddenrows).Top) / 6
                    StartDate = Sheets("Visual berth").Range("A" & 7 + hiddenrows).Value
                    End If
                End If
            End If
        End If
    End If
    
    
    
    
    
    
    bollardsize = Sheets("Settings").Range("D5").Value
    hoursize = oneday / 24
    
    'parameter settings END

    

    i = 1
                
                
            For Each Shape In Worksheets("Visual berth").Shapes
            

                       If Shape.Name <> "Savebutton" And Shape.Name <> "Comment 2" And Left(Shape.Name, 7) <> "Cranes_" Then
                       
                       'MsgBox Shape.Height
                       ShapeHigh = Shape.Height - 0.094
                                               

             
                           tabvessel(i, 1) = Shape.Name
                           
                           
                           
                               If Shape.Height > 0 Then
                                       'new ETB
                                            If Shape.Top > Range("A7").Top Then
                                               newETBinhour = (Shape.Top - starttop) / hoursize - shiftdelay
                                               newpositiondate = DateAdd("d", Int(newETBinhour / 24), StartDate)
                                               newhour = Int(newETBinhour - (Int(newETBinhour / 24) * 24))
                                               tabvessel(i, 2) = newpositiondate & " " & newhour & ":00"  'new ETB
                                            Else
                                               tabvessel(i, 9) = "do not update etb"
                                            End If
                                       'new ETC
                                                
                                               'newETCinhour = (Shape.Top + Shape.Height - starttop) / hoursize - shiftdelay
                                               newETCinhour = (Shape.Top + ShapeHigh - starttop) / hoursize - shiftdelay
                                               
                                               newpositiondate = DateAdd("d", Int(newETCinhour / 24), StartDate)
                                               newhour = Int(newETCinhour - (Int(newETCinhour / 24) * 24))
                                               'newhour = newETCinhour - newETCinhour / 24
                                               'newhour = newhour - 1
                                               tabvessel(i, 3) = newpositiondate & " " & newhour & ":00"  'new ETC

                                               'new position at berth
                                               tabvessel(i, 4) = Sheets("Visual berth").Cells(3, Shape.TopLeftCell.Column).Value
                                            '  tabvessel(i, 4) = Int(((Shape.Left - leftstart) / bollardsize))
                                               'new berth
                                               tabvessel(i, 5) = Sheets("Visual berth").Cells(5, Shape.TopLeftCell.Column).Value
                                               tabvessel(i, 6) = Shape.TopLeftCell.Row
                                               tabvessel(i, 7) = Shape.TopLeftCell.Column
                            
                                       i = i + 1
                               
                              End If
                            
                        End If
            Next Shape
                

    Sheets("Berthing plan").Select
    Startline = 8
    i = 1
    i = 1
    j = 1
    
    Sheets("Visual berth").Range("C7:EZ1000").ClearContents

    While tabvessel(j, 1) <> ""
        i = 8
        While Range("D" & i).Value <> ""
        
                
        
            If tabvessel(j, 1) = Range("D" & i).Value & "-" & Range(ColVOY & i).Value Then
                
                If tabvessel(j, 9) = "" Then
                Sheets("Berthing plan").Range(ColLiveETBDate & i).Value = DateValue(tabvessel(j, 2))
                Sheets("Berthing plan").Range(ColLiveETBTime & i).Value = TimeValue(tabvessel(j, 2))
                End If
                Sheets("Berthing plan").Range(ColLiveETCDate & i).Value = DateValue(tabvessel(j, 3)) ' & " " & TimeValue(tabvessel(j, 3))
                Sheets("Berthing plan").Range(ColLiveETCTime & i).Value = TimeValue(tabvessel(j, 3))
                
                Sheets("Berthing plan").Range(ColLiveETSDate & i).Value = DateValue(tabvessel(j, 3)) ' & " " & TimeValue(tabvessel(j, 3))
                Sheets("Berthing plan").Range(ColLiveETSTime & i).Value = TimeValue(tabvessel(j, 3))
                
                Sheets("Berthing plan").Range(ColTML & i).Value = tabvessel(j, 4)
                Sheets("Berthing plan").Range("B" & i).Value = tabvessel(j, 5)
                
                putcrane toprow:=Int(tabvessel(j, 6)), leftcolumn:=Int(tabvessel(j, 7)), Gangs:=Sheets("Berthing plan").Range(ColCranesGangs & i).Value
                colorline (i)
                i = 10000
                
            End If
            
            i = i + 1
        Wend
        j = j + 1
    Wend
    
    'update de tous les contenus avec les nouveaux timing..
    
    Sheets("Visual berth").Select
    MsgBox ("Saved !")
    
    Application.DisplayAlerts = True
    Application.ScreenUpdating = True
    'Application.Calculate
    Application.Calculation = xlAutomatic
   
End Sub

Sub SortETAraw()
    'Range("A8:AZ500").Select
    ActiveWorkbook.Worksheets("Berthing plan").Sort.SortFields.Clear
    ActiveWorkbook.Worksheets("Berthing plan").Sort.SortFields.Add Key:=Range( _
        "K8:K500"), SortOn:=xlSortOnValues, Order:=xlAscending, DataOption:= _
        xlSortNormal
    ActiveWorkbook.Worksheets("Berthing plan").Sort.SortFields.Add Key:=Range( _
        "L8:L500"), SortOn:=xlSortOnValues, Order:=xlAscending, DataOption:= _
        xlSortNormal
    With ActiveWorkbook.Worksheets("Berthing plan").Sort
        .SetRange Range("A8:AZ500")
        .Header = xlGuess
        .MatchCase = False
        .Orientation = xlTopToBottom
        .SortMethod = xlPinYin
        .Apply
    End With
    
End Sub


Sub SortETA()
    'Range("A8:AZ500").Select
    ActiveWorkbook.Worksheets("Berthing plan").Sort.SortFields.Clear
    ActiveWorkbook.Worksheets("Berthing plan").Sort.SortFields.Add Key:=Range( _
        "M8:M500"), SortOn:=xlSortOnValues, Order:=xlAscending, DataOption:= _
        xlSortNormal
    ActiveWorkbook.Worksheets("Berthing plan").Sort.SortFields.Add Key:=Range( _
        "N8:N500"), SortOn:=xlSortOnValues, Order:=xlAscending, DataOption:= _
        xlSortNormal
    With ActiveWorkbook.Worksheets("Berthing plan").Sort
        .SetRange Range("A8:AZ500")
        .Header = xlGuess
        .MatchCase = False
        .Orientation = xlTopToBottom
        .SortMethod = xlPinYin
        .Apply
    End With
End Sub

Sub SortETB()
    'Range("A8:AZ500").Select
    ActiveWorkbook.Worksheets("Berthing plan").Sort.SortFields.Clear
    ActiveWorkbook.Worksheets("Berthing plan").Sort.SortFields.Add Key:=Range( _
        "O8:O500"), SortOn:=xlSortOnValues, Order:=xlAscending, DataOption:= _
        xlSortNormal
    ActiveWorkbook.Worksheets("Berthing plan").Sort.SortFields.Add Key:=Range( _
        "P8:P500"), SortOn:=xlSortOnValues, Order:=xlAscending, DataOption:= _
        xlSortNormal
    With ActiveWorkbook.Worksheets("Berthing plan").Sort
        .SetRange Range("A8:AZ500")
        .Header = xlGuess
        .MatchCase = False
        .Orientation = xlTopToBottom
        .SortMethod = xlPinYin
        .Apply
    End With
End Sub

Sub SortETS()
    'Range("A8:AZ500").Select
    ActiveWorkbook.Worksheets("Berthing plan").Sort.SortFields.Clear
    ActiveWorkbook.Worksheets("Berthing plan").Sort.SortFields.Add Key:=Range( _
        "U8:U500"), SortOn:=xlSortOnValues, Order:=xlAscending, DataOption:= _
        xlSortNormal
    ActiveWorkbook.Worksheets("Berthing plan").Sort.SortFields.Add Key:=Range( _
        "V8:V500"), SortOn:=xlSortOnValues, Order:=xlAscending, DataOption:= _
        xlSortNormal
    With ActiveWorkbook.Worksheets("Berthing plan").Sort
        .SetRange Range("A8:AZ500")
        .Header = xlGuess
        .MatchCase = False
        .Orientation = xlTopToBottom
        .SortMethod = xlPinYin
        .Apply
    End With
    
End Sub



Sub SortTML()
    'Range("A8:AZ500").Select
    ActiveWorkbook.Worksheets("Berthing plan").Sort.SortFields.Clear
    ActiveWorkbook.Worksheets("Berthing plan").Sort.SortFields.Add Key:=Range( _
        "C8:C500"), SortOn:=xlSortOnValues, Order:=xlAscending, DataOption:= _
        xlSortNormal
    ActiveWorkbook.Worksheets("Berthing plan").Sort.SortFields.Add Key:=Range( _
        "O8:O500"), SortOn:=xlSortOnValues, Order:=xlAscending, DataOption:= _
        xlSortNormal
    ActiveWorkbook.Worksheets("Berthing plan").Sort.SortFields.Add Key:=Range( _
        "P8:P500"), SortOn:=xlSortOnValues, Order:=xlAscending, DataOption:= _
        xlSortNormal
    With ActiveWorkbook.Worksheets("Berthing plan").Sort
        .SetRange Range("A8:AZ500")
        .Header = xlGuess
        .MatchCase = False
        .Orientation = xlTopToBottom
        .SortMethod = xlPinYin
        .Apply
    End With
    
End Sub



Sub Reinit()
    Application.DisplayAlerts = True
    Application.ScreenUpdating = True
    Application.Calculation = xlCalculationAutomatic
End Sub


Attribute VB_Name = "Module4"
Public Sub ScheduleUpload()

Dim Rowcount, rowCount1, currentRow, cntRow As Integer
Dim currentRowValue_A, currentRowValue_B, currentRowValue_C, currentRowValue_D, currentRowValue_E, currentRowValue_F, currentRowValue_G, currentRowValue_H, currentRowValue_I, currentRowValue_J, currentRowValue_K, currentRowValue_L, currentRowValue_M, currentRowValue_N, currentRowValue_O, currentRowValue_P, currentRowValue_Q As String



Application.EnableEvents = False
Application.ScreenUpdating = False
'Call Docscheduleid ' Sort berthing plan order vessels to match Rawschedule order

Rowcount = Sheets("RawSchedule").Cells(Rows.Count, 1).End(xlUp).Row
rowCount1 = Sheets("Berthing plan").Cells(Rows.Count, 1).End(xlUp).Row


      
        
        ' Rawschedules values
            For currentRow = 2 To Rowcount
            currentRowValue_A = Sheets("RawSchedule").Cells(currentRow, 1).Value    'DocScheduleId
            currentRowValue_B = Sheets("RawSchedule").Cells(currentRow, 2).Text     'VesselName
            currentRowValue_C = Sheets("RawSchedule").Cells(currentRow, 3).Text     'Voyage
            currentRowValue_D = Sheets("RawSchedule").Cells(currentRow, 4).Text     'ServiceName
            

            If Sheets("RawSchedule").Cells(currentRow, 5).Text = "" Then
                currentRowValue_E = "NULL"
            Else:
                currentRowValue_E = Sheets("RawSchedule").Cells(currentRow, 5).Value  'Live Arrival Pilot Station Date
            End If
            
            If Sheets("RawSchedule").Cells(currentRow, 6).Text = "" Then
                currentRowValue_F = "NULL"
            Else:
                currentRowValue_F = Sheets("RawSchedule").Cells(currentRow, 6).Text 'Live Arrival Pilot Station Time
            End If
            

            If Sheets("RawSchedule").Cells(currentRow, 7).Text = "" Then
                currentRowValue_G = "NULL"
            Else:
            currentRowValue_G = Sheets("RawSchedule").Cells(currentRow, 7).Value  'RAW Live Departure Pilot Station Date
            End If
            
            If Sheets("RawSchedule").Cells(currentRow, 8).Text = "" Then
                currentRowValue_H = "NULL"
            Else:
            currentRowValue_H = Sheets("RawSchedule").Cells(currentRow, 8).Text  'RAW Live Departure Pilot Station Time
            End If
            

            If Sheets("RawSchedule").Cells(currentRow, 9).Text = "" Then
                currentRowValue_I = "NULL"
            Else:
            currentRowValue_I = Sheets("RawSchedule").Cells(currentRow, 9).Value  'ProformaArrivalPilotStationDate
            End If
            
            If Sheets("RawSchedule").Cells(currentRow, 10).Text = "" Then
                currentRowValue_J = "NULL"
            Else:
            currentRowValue_J = Sheets("RawSchedule").Cells(currentRow, 10).Text 'ProformaArrivalPilotStationTime
            End If
            

            If Sheets("RawSchedule").Cells(currentRow, 11).Text = "" Then
                currentRowValue_K = "NULL"
            Else:
            currentRowValue_K = Sheets("RawSchedule").Cells(currentRow, 11).Value  'ProformadeparturelPilotStationDate
            End If
            
            If Sheets("RawSchedule").Cells(currentRow, 12).Text = "" Then
                currentRowValue_L = "NULL"
            Else:
            currentRowValue_L = Sheets("RawSchedule").Cells(currentRow, 12).Text 'ProformadeparturelPilotStationTime
            End If
            

            currentRowValue_M = Sheets("RawSchedule").Cells(currentRow, 13).Text 'ProformaMove
            currentRowValue_N = Sheets("RawSchedule").Cells(currentRow, 14).Text 'Previous Port
            currentRowValue_O = Sheets("RawSchedule").Cells(currentRow, 15).Text 'Next Port


                i = 8

                While i <= rowCount1 And currentRowValue_A <> Sheets("Berthing plan").Range(ColScheduleID & i).Value
                i = i + 1
                Wend






            'Check and compare
            If currentRowValue_A = Sheets("Berthing plan").Range(ColScheduleID & i).Value Then 'And currentRowValue_B = Sheets("Berthing plan").Range(ColVSL & i).Value Then
            
            

            
                If currentRowValue_B <> Sheets("Berthing plan").Range(ColVSL & i).Text Then
            
                
                            Sheets("Berthing plan").Range(ColVSL & i).Select
                                            With Selection.Font
                                            .Color = RGB(0, 150, 0)
                                            Selection.Font.Bold = True
                                            End With
                                            
                End If
                
                If currentRowValue_C <> Sheets("Berthing plan").Range(ColVOY & i).Text Then
            
                
                            Sheets("Berthing plan").Range(ColVOY & i).Select
                                            With Selection.Font
                                            .Color = RGB(0, 150, 0)
                                            Selection.Font.Bold = True
                                            End With
                                            
                End If
                
                If currentRowValue_D <> Sheets("Berthing plan").Range(ColSERVICE & i).Text Then
            
                
                            Sheets("Berthing plan").Range(ColSERVICE & i).Select
                                            With Selection.Font
                                            .Color = RGB(0, 150, 0)
                                            Selection.Font.Bold = True
                                            End With
                                            
                End If
                
                
                If currentRowValue_E <> Sheets("Berthing plan").Range(ColRawETADate & i).Value Then  'RAWLiveArrivalPilotStationDate
               
            
                
                            Sheets("Berthing plan").Range(ColRawETADate & i).Select
                                            With Selection.Font
                                            .Color = RGB(0, 150, 0)
                                            Selection.Font.Bold = True
                                            End With
                                            
                End If
                
                If currentRowValue_F <> Sheets("Berthing plan").Range(ColRawETATime & i).Text Then  'RAWLiveArrivalPilotStationTime

            
                
                            Sheets("Berthing plan").Range(ColRawETATime & i).Select
                                            With Selection.Font
                                            .Color = RGB(0, 150, 0)
                                            Selection.Font.Bold = True
                                            End With
                                            
                End If
                
                        If Sheets("Berthing plan").Range(ColTML & i).Value = "" Then
                        
                                        If currentRowValue_G <> Sheets("Berthing plan").Range(ColLiveETSDate & i).Value Then 'LiveDeparturePilotStationDate
                                    
                                        
                                                    Sheets("Berthing plan").Range(ColLiveETSDate & i).Select
                                                                    With Selection.Font
                                                                    .Color = RGB(0, 150, 0)
                                                                    Selection.Font.Bold = True
                                                                    End With
                                                                    
                                        End If
                                        
                                        If currentRowValue_H <> Sheets("Berthing plan").Range(ColLiveETSTime & i).Text Then 'LiveDeparturePilotStationTime
                                    
                                        
                                                    Sheets("Berthing plan").Range(ColLiveETSTime & i).Select
                                                                    With Selection.Font
                                                                    .Color = RGB(0, 150, 0)
                                                                    Selection.Font.Bold = True
                                                                    End With
                                                                    
                                        End If
                        End If
                                
                                
                                

                If currentRowValue_I <> Sheets("Berthing plan").Range(ColPfETADate & i).Value Then   'ProformaArrivalPilotStationDate
                
            
                
                            Sheets("Berthing plan").Range(ColPfETADate & i).Select
                                            With Selection.Font
                                            .Color = RGB(0, 150, 0)
                                            Selection.Font.Bold = True
                                            End With
                                            
                End If

                If currentRowValue_J <> Sheets("Berthing plan").Range(ColPfETATime & i).Text Then   'ProformaArrivalPilotStationTime
                
                
                            Sheets("Berthing plan").Range(ColPfETATime & i).Select
                                            With Selection.Font
                                            .Color = RGB(0, 150, 0)
                                            Selection.Font.Bold = True
                                            End With
                                            
                End If
                
                If currentRowValue_K <> Sheets("Berthing plan").Range(ColPfETSDate & i).Value Then   'ProformadeparturelPilotStationDate
            
                
                            Sheets("Berthing plan").Range(ColPfETSDate & i).Select
                                            With Selection.Font
                                            .Color = RGB(0, 150, 0)
                                            Selection.Font.Bold = True
                                            End With
                                            
                End If
                
                If currentRowValue_L <> Sheets("Berthing plan").Range(ColPfETSTime & i).Text Then   'ProformadeparturelPilotStationTime
            
                
                            Sheets("Berthing plan").Range(ColPfETSTime & i).Select
                                            With Selection.Font
                                            .Color = RGB(0, 150, 0)
                                            Selection.Font.Bold = True
                                            End With
                                            
                End If
                
                If currentRowValue_M <> Sheets("Berthing plan").Range(ColMovesProforma & i).Text Then
            
                
                            Sheets("Berthing plan").Range(ColMovesProforma & i).Select
                                            With Selection.Font
                                            .Color = RGB(0, 150, 0)
                                            Selection.Font.Bold = True
                                            End With
                
                End If
                
                  If currentRowValue_N <> Sheets("Berthing plan").Range(ColPrev & i).Text Then
            
                
                            Sheets("Berthing plan").Range(ColPrev & i).Select
                                            With Selection.Font
                                            .Color = RGB(0, 150, 0)
                                            Selection.Font.Bold = True
                                            End With
                
                End If
                
                
                   If currentRowValue_O <> Sheets("Berthing plan").Range(ColNext & i).Text Then
            
                
                            Sheets("Berthing plan").Range(ColNext & i).Select
                                            With Selection.Font
                                            .Color = RGB(0, 150, 0)
                                            Selection.Font.Bold = True
                                            End With
                
                End If
                

                        ' updating of rawschedule to berth
                Sheets("Berthing plan").Range(ColVOY & i).Value = currentRowValue_C
                Sheets("Berthing plan").Range(ColSERVICE & i).Value = currentRowValue_D
                Sheets("Berthing plan").Range(ColPfETADate & i).Value = currentRowValue_I
                Sheets("Berthing plan").Range(ColPfETATime & i).Value = currentRowValue_J
                Sheets("Berthing plan").Range(ColPfETSDate & i).Value = currentRowValue_K
                Sheets("Berthing plan").Range(ColPfETSTime & i).Value = currentRowValue_L
                Sheets("Berthing plan").Range(ColRawETADate & i).Value = currentRowValue_E
                Sheets("Berthing plan").Range(ColRawETATime & i).Value = currentRowValue_F
                Sheets("Berthing plan").Range(ColLiveOPSTime & i).Formula = "=P" & i & "+Settings!$P$29"
                If Sheets("Berthing plan").Range(ColTML & i).Value = "" Then
                    Sheets("Berthing plan").Range(ColLiveETSDate & i).Value = currentRowValue_G
                    Sheets("Berthing plan").Range(ColLiveETSTime & i).Formula = currentRowValue_H
                End If
                Sheets("Berthing plan").Range(ColMovesProforma & i).Value = currentRowValue_M
                Sheets("Berthing plan").Range(ColPrev & i).Value = currentRowValue_N
                Sheets("Berthing plan").Range(ColNext & i).Value = currentRowValue_O
            
                        ' uploading of rawschedule to berth
            ElseIf currentRowValue_A <> Sheets("Berthing plan").Range(ColScheduleID & i).Value And currentRowValue_B <> Sheets("Berthing plan").Range(ColVSL & i).Value Then
                        Application.ScreenUpdating = False
                        Sheets("Berthing plan").Range(ColScheduleID & i).Value = currentRowValue_A
                        Sheets("Berthing plan").Range(ColVSL & i).Value = currentRowValue_B
                        Sheets("Berthing plan").Range(ColVOY & i).Value = currentRowValue_C
                        Sheets("Berthing plan").Range(ColSERVICE & i).Value = currentRowValue_D
                        Sheets("Berthing plan").Range(ColPfETADate & i).Value = currentRowValue_I
                        Sheets("Berthing plan").Range(ColPfETATime & i).Value = currentRowValue_J
                        Sheets("Berthing plan").Range(ColPfETSDate & i).Value = currentRowValue_K
                        Sheets("Berthing plan").Range(ColPfETSTime & i).Value = currentRowValue_L
                        Sheets("Berthing plan").Range(ColRawETADate & i).Value = currentRowValue_E
                        Sheets("Berthing plan").Range(ColRawETATime & i).Value = currentRowValue_F
                        Sheets("Berthing plan").Range(ColLiveETSDate & i).Value = currentRowValue_G
                        Sheets("Berthing plan").Range(ColLiveETSTime & i).Value = currentRowValue_H
                        'Sheets("Berthing plan").Range(ColBerthTime & i).Formula = "=((U" & i & "-O" & i & ")*24)+HOUR(V" & i & ")-HOUR(P" & i & ")"
                        Sheets("Berthing plan").Range(ColBerthTime & i).Formula = "=IFERROR(((U" & i & "-O" & i & ")*24)+HOUR(V" & i & ")-HOUR(P" & i & "),""0"")"
                        Sheets("Berthing plan").Range(ColMovesTotal & i).Formula = "=X" & i & "+Y" & i & "+Z" & i & "+AA" & i & "+AB" & i & ""
                        Sheets("Berthing plan").Range(ColMovesProforma & i).Value = currentRowValue_M
                        Sheets("Berthing plan").Range(ColBerthProd & i).Formula = "=IFERROR(AC" & i & "/W" & i & ","""")"
                        Sheets("Berthing plan").Range(ColLOA & i).Formula = "=IFERROR(VLOOKUP(D" & i & ",Settings!C$29:D$3500,2,FALSE),"""")"
                        Sheets("Berthing plan").Range(ColisMSC & i).Formula = "=IFERROR(VLOOKUP(D" & i & ",Settings!C$29:E$3500,3,FALSE),"""")"
                        Sheets("Berthing plan").Range(ColPrev & i).Value = currentRowValue_N
                        Sheets("Berthing plan").Range(ColNext & i).Value = currentRowValue_O
                        rowCount1 = rowCount1 + 1
            End If
                                

        Next

Application.EnableEvents = True
Application.ScreenUpdating = True

End Sub



Attribute VB_Name = "Module5"
Sub AddVessel()
' AddVessel Macro
    Range("C29:H29").Select
    Selection.Insert Shift:=xlDown, CopyOrigin:=xlFormatFromLeftOrAbove
    Range("C30:H30").Select
    Selection.Copy
    Range("C29:H29").Select
    Selection.PasteSpecial Paste:=xlPasteFormats, Operation:=xlNone, _
        SkipBlanks:=False, Transpose:=False
    Application.CutCopyMode = False
End Sub


Sub CleanChanges()

Application.ScreenUpdating = False

    Range("D8:AK8").Select
    Range(Selection, Selection.End(xlDown)).Select

For Each cell In Range(Selection, Selection.End(xlDown))
    
    If cell.Font.Color = RGB(0, 150, 0) Then

    'ActiveWindow.LargeScroll ToRight:=-1
    With cell.Font
        .ColorIndex = xlAutomatic
        .TintAndShade = 0
        cell.Font.Bold = False
    End With

    End If
   
    Next
    
    Application.ScreenUpdating = True
End Sub

Sub UpdateClock()

  Sheets("Berthing plan").Range("F5") = Now()

End Sub

Sub Validate_Terminal()

'Application.DisplayAlerts = False
Application.ScreenUpdating = False
'Application.Calculation = xlCalculationManual

Dim Rowcount, currentRow As Integer
Dim currentRowValue As String

Rowcount = Sheets("Berthing plan").Cells(Rows.Count, 3).End(xlUp).Row

For currentRow = 8 To Rowcount
currentRowValue = Sheets("Berthing plan").Cells(currentRow, 3).Value
If currentRowValue <> "" Then


    Sheets("Berthing plan").Cells(currentRow, 3).Select
    ActiveCell.FormulaR1C1 = Sheets("Berthing plan").Cells(currentRow, 3).Text

        
    End If
    Next
    
'Application.DisplayAlerts = True
Application.ScreenUpdating = True
'Application.Calculation = xlCalculationManual

End Sub


Attribute VB_Name = "Module6"
Sub Upload_Fleet_Manager()

Dim Answer As String
Dim MyNote, MyNote2 As String

Dim myPath As String
Dim folderPath As String
Dim strFileFullName, FileOnly As String

Call UpdateClock
Application.DisplayAlerts = False
ActiveWorkbook.Save

folderPath = Application.ActiveWorkbook.Path
myPath = Application.ActiveWorkbook.FullName
FileOnly = "Backup_" & ThisWorkbook.Name


'FileCopy folderPath & "\" & ThisWorkbook.Name, folderPath & "\" & FileOnly
Dim objFSO As Object
Set objFSO = CreateObject("Scripting.FileSystemObject")

On Error GoTo lblError:
'will overwrite
Call objFSO.CopyFile(folderPath & "\" & ThisWorkbook.Name, folderPath & "\" & FileOnly, True)
Set objFSO = Nothing
'Exit Sub

lblError:
Err.Clear
Set objFSO = Nothing


' Upload_Fleet_Manager Macro

MyNote = "Backup copy has been saved in same folder, do you want to continue?"
Answer = MsgBox(MyNote, vbQuestion + vbYesNo, "!!!")

If Answer = vbYes Then

'Application.DisplayAlerts = False

    Sheets("template shift2").Delete
    
    Sheets("template shift3").Delete
    
    Sheets("template shift4").Delete
    
    Sheets("template shift5").Delete
    
    Sheets("template shift6").Delete
    
    Sheets("RawSchedule").Delete
    
    MyNote2 = "Do you want to delete the Visual Berth?"
    Answer = MsgBox(MyNote2, vbQuestion + vbYesNo, "!!!")
    
    If Answer = vbYes Then
  
    Sheets("Visual berth").Delete
    
    End If
    
    Sheets("Settings").Select
    ActiveWindow.SelectedSheets.Visible = False
    Sheets("Berthing plan").Select
    Columns("A:A").Select
    Selection.EntireColumn.Hidden = True
    
Application.DisplayAlerts = True

Call CleanChanges

Call UpdateClock

MsgBox "The file is ready for the upload"

End If

End Sub

Attribute VB_Name = "Module7"
Public Const ColScheduleID = "A"
Public Const ColPosition = "B"
Public Const ColTML = "C"
Public Const ColVSL = "D"
Public Const ColVOY = "E"
Public Const ColSERVICE = "F"
Public Const ColPfETADate = "G"
Public Const ColPfETATime = "H"
Public Const ColPfETSDate = "I"
Public Const ColPfETSTime = "J"
Public Const ColRawETADate = "K"
Public Const ColRawETATime = "L"
Public Const ColLiveETADate = "M"
Public Const ColLiveETATime = "N"
Public Const ColLiveETBDate = "O"
Public Const ColLiveETBTime = "P"
Public Const ColLiveOPSDate = "Q"
Public Const ColLiveOPSTime = "R"
Public Const ColLiveETCDate = "S"
Public Const ColLiveETCTime = "T"
Public Const ColLiveETSDate = "U"
Public Const ColLiveETSTime = "V"
Public Const ColBerthTime = "W"
Public Const ColMovesLoadFull = "X"
Public Const ColMovesLoadEmpty = "Y"
Public Const ColMovesDischFull = "Z"
Public Const ColMovesDischEmpty = "AA"
Public Const ColMovesRestowShiftHatch = "AB"
Public Const ColMovesTotal = "AC"
Public Const ColMovesProforma = "AD"
Public Const ColCranesGangs = "AE"
Public Const ColBerthProd = "AF"
Public Const ColPrev = "AG"
Public Const ColNext = "AH"
Public Const ColLOA = "AI"
Public Const ColisMSC = "AJ"
Public Const ColRemarks = "AK"
Attribute VB_Name = "Sheet3"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Option Explicit

Private previousRange As Object
Private Sub Worksheet_Change(ByVal Target As Range)

    Dim cell As Variant
    
    If Target.Count = 1 Then
        If Target.Column = 3 And Target.Row > 7 Then
        Application.EnableEvents = False
            colorline (Target.Row)
        End If
        Application.EnableEvents = True
    End If
    
    If Target.Column > 3 And Target.Row > 7 Then
    Application.EnableEvents = False
    
        For Each cell In Target
            If previousRange.Exists(cell.Address) Then
                If previousRange.Item(cell.Address) <> cell.FormulaR1C1 Then 'this line permit to color only if a change in value
                'If previousRange.Item(cell.Address) <> cell.Text Then        ' this line permit to color every time there is a click in the cell
                        With cell.Font
                        .Color = RGB(0, 150, 0)
                        cell.Font.Bold = True
                        End With
                End If
            End If
       Next
    End If
    Application.EnableEvents = True
                                   
End Sub
Private Sub Worksheet_SelectionChange(ByVal Target As Range)
Dim cell As Variant



If Target.Column > 3 And Target.Row > 7 Then
Application.EnableEvents = False

    Set previousRange = Nothing 'not really needed but I like to kill off old references
    Set previousRange = CreateObject("Scripting.Dictionary")

    For Each cell In Target.Cells
        previousRange.Add cell.Address, cell.FormulaR1C1
    Next
End If
Application.EnableEvents = True
End Sub

Sub eventon()
Application.EnableEvents = True
End Sub




Attribute VB_Name = "Sheet6"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "ThisWorkbook"
Attribute VB_Base = "0{00020819-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True


INQUEST-PP=macro
