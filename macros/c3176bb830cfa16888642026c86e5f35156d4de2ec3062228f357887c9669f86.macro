Attribute VB_Name = "DieseArbeitsmappe"
Attribute VB_Base = "0{00020819-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Private Sub Workbook_Open()
    If Cells(5, 4) <> "x" Then     ' schaltet Updatefunktion aus
    Call Check_Update
    End If
End Sub

Attribute VB_Name = "Tabelle1"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Tabelle10"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Tabelle11"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Tabelle12"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Tabelle13"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
'Private Sub tglOutline_Click()

   ' With Me.tglOutline
    
       ' If .Value = True Then
            '.Caption = "Liste reduzieren ..."
          '  .Caption = Tabelle4.Cells(160, 1).Value
          '  Call Outline_enlarge
      '  Else
            '.Caption = "Liste erweitern ..."
         '   .Caption = Tabelle4.Cells(159, 1).Value
           ' Call Outline_reduce
      '  End If

   ' End With

'End Sub
Attribute VB_Name = "Tabelle14"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
'Private Sub tglOutline_Click()

   ' With Me.tglOutline
    
       ' If .Value = True Then
            '.Caption = "Liste reduzieren ..."
          '  .Caption = Tabelle4.Cells(160, 1).Value
           ' Call Outline_enlarge
       ' Else
            '.Caption = "Liste erweitern ..."
          '  .Caption = Tabelle4.Cells(159, 1).Value
           ' Call Outline_reduce
     '   End If

   ' End With

'End Sub
Attribute VB_Name = "Tabelle15"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
'private Sub tglOutline_Click()

   ' With Me.tglOutline
    
      '  If .Value = True Then
            '.Caption = "Liste reduzieren ..."
       '     .Caption = Tabelle4.Cells(160, 1).Value
        '    Call Outline_enlarge
      '  Else
            '.Caption = "Liste erweitern ..."
        '    .Caption = Tabelle4.Cells(159, 1).Value
        '    Call Outline_reduce
      '  End If

   ' End With

'End Sub
Attribute VB_Name = "Tabelle16"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Tabelle17"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Tabelle18"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Tabelle19"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Tabelle2"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Control = "CmdGrafikBsp, 42, 0, MSForms, CommandButton"
Attribute VB_Control = "cmdGrafikNPK, 41, 1, MSForms, CommandButton"
Attribute VB_Control = "cmdErlUT, 40, 2, MSForms, CommandButton"
Attribute VB_Control = "CmdModUT, 25, 3, MSForms, CommandButton"
Attribute VB_Control = "cmdModNPK, 24, 4, MSForms, CommandButton"
Attribute VB_Control = "cmdModBsp, 23, 5, MSForms, CommandButton"
Attribute VB_Control = "cmdIndexNPK, 21, 6, MSForms, CommandButton"
Attribute VB_Control = "cmdIndexBsp, 20, 7, MSForms, CommandButton"
Attribute VB_Control = "cmdErlBsp, 15, 8, MSForms, CommandButton"
Attribute VB_Control = "cmdErlPKINPK, 17, 9, MSForms, CommandButton"
Attribute VB_Control = "CmdGrafikUT, 44, 10, MSForms, CommandButton"
Option Explicit





Private Sub Worksheet_Change(ByVal Target As Range)
'Application.ScreenUpdating = False

'dynamische Schaltfl|fffd|chenbezeichnung je Sprache ...
    With Tabelle4
        'PKI nach Bausparten ...
        Me.cmdErlBsp.Caption = .Cells(61, 1).Value      'Schaltfl|fffd|che Erl|fffd|uterungen PKI Bsp
        Me.cmdErlPKINPK.Caption = .Cells(61, 1).Value   'Schaltfl|fffd|che Erl|fffd|uterungen PKI NPK
        Me.cmdIndexBsp.Caption = .Cells(62, 1).Value    'Schaltfl|fffd|che Erl|fffd|uterungen Index Bsp
        Me.cmdIndexNPK.Caption = .Cells(62, 1).Value    'Schaltfl|fffd|che Erl|fffd|uterungen Index NPK
        Me.cmdModBsp.Caption = .Cells(63, 1).Value      'Schaltfl|fffd|che Modellbeschrieb Bsp
        Me.cmdModNPK.Caption = .Cells(63, 1).Value      'Schaltfl|fffd|che Modellbeschrieb NPK
        Me.CmdModUT.Caption = .Cells(63, 1).Value       'Schaltfl|fffd|che Modellbeschrieb NPK UT
        Me.cmdErlUT.Caption = .Cells(61, 1).Value       'Schaltfl|fffd|che Erl|fffd|uterungen PKI Bsp
        Me.cmdGrafikNPK.Caption = .Cells(65, 1).Value   'Schaltfl|fffd|che Grafik PKI NPK
        Me.CmdGrafikBsp.Caption = .Cells(65, 1).Value   'Schaltfl|fffd|che Grafik PKI Bausparten
        
        '---
        'Tabelle15.tglOutline.Caption = Tabelle4.Cells(159, 1).Value     'Liste erweitern ...
        'Tabelle13.tglOutline.Caption = Tabelle4.Cells(159, 1).Value     'Liste erweitern ...
        'Tabelle14.tglOutline.Caption = Tabelle4.Cells(159, 1).Value     'Liste erweitern ...
    End With

' Sperre ein-aus
    If Cells(4, 8) = "Loris1" Then
        For Each ws In ActiveWorkbook.Worksheets
            ws.Visible = xlSheetVisible
            Call Blattschutz_deaktivieren
        Next
    End If

    If Cells(4, 8) = "Loris0" Then
        For Each ws In ActiveWorkbook.Worksheets
            Select Case ws.Name
                Case Is = "Startseite", "PKI-Bsp", "PKI-NPK", "PKI-UT"  ' Ausnahmen
                    ws.Visible = xlSheetVisible
                Case Else
                    ws.Visible = xlSheetVeryHidden
            End Select
            Call Blattschutz_aktivieren
        Next
    End If

' Je nach Systemwahl werden nicht genutzte Tabellen ausgeblendet
    If Cells(8, 4) = "1" Then
        Worksheets("PKI-Bsp").Visible = True
        'Tabelle15.tglOutline.Caption = Tabelle4.Cells(159, 1).Value     'Liste erweitern ...
        Worksheets("PKI-NPK").Visible = False
        Worksheets("PKI-UT").Visible = False
        Call Aufr|fffd|umen_Bausparten
    End If
        If Cells(8, 4) = "2" Then
        Worksheets("PKI-Bsp").Visible = False
        Worksheets("PKI-NPK").Visible = True
        'Tabelle13.tglOutline.Caption = Tabelle4.Cells(159, 1).Value     'Liste erweitern ...
        Worksheets("PKI-UT").Visible = False
        Call Aufr|fffd|umen_NPK
    End If
        If Cells(8, 4) = "3" Then
        Worksheets("PKI-Bsp").Visible = False
        Worksheets("PKI-NPK").Visible = False
        Worksheets("PKI-UT").Visible = True
       ' Tabelle14.tglOutline.Caption = Tabelle4.Cells(159, 1).Value     'Liste erweitern ...
        Call Aufr|fffd|umen_NPK_UT
    End If
    
' Ein-/Ausblenden der entspr. erng|fffd|nzenden Informationen ...
    If Target.Address = "$B$8" Then
        Select Case ActiveSheet.Range("Sprache").Value
            
           Case "Deutsch"
          
                If Cells(8, 4) = "1" Then
                             Me.Shapes("Shield1").Visible = False
                             Me.Shapes("Shield2").Visible = True
                             Me.Shapes("Shield3").Visible = True
                End If
                If Cells(8, 4) = "2" Then
                             Me.Shapes("Shield1").Visible = True
                             Me.Shapes("Shield2").Visible = False
                             Me.Shapes("Shield3").Visible = True
                End If
                If Cells(8, 4) = "3" Then
                             Me.Shapes("Shield1").Visible = True
                             Me.Shapes("Shield2").Visible = True
                             Me.Shapes("Shield3").Visible = False
                End If

           Case "Fran|fffd|ais"
           
                If Cells(8, 4) = "1" Then
                             Me.Shapes("Shield1").Visible = False
                             Me.Shapes("Shield2").Visible = True
                             Me.Shapes("Shield3").Visible = True
                End If
                If Cells(8, 4) = "2" Then
                             Me.Shapes("Shield1").Visible = True
                             Me.Shapes("Shield2").Visible = False
                             Me.Shapes("Shield3").Visible = True
                End If
                 If Cells(8, 4) = "3" Then
                             Me.Shapes("Shield1").Visible = True
                             Me.Shapes("Shield2").Visible = True
                             Me.Shapes("Shield3").Visible = False
                End If
        
           Case "Italiano"
                If Cells(8, 4) = "1" Then
                        Me.Shapes("Shield1").Visible = False
                        Me.Shapes("Shield2").Visible = True
                        Me.Shapes("Shield3").Visible = True
                End If
                If Cells(8, 4) = "2" Then
                        Me.Shapes("Shield1").Visible = True
                        Me.Shapes("Shield2").Visible = False
                        Me.Shapes("Shield3").Visible = True
                End If
                If Cells(8, 4) = "3" Then
                        Me.Shapes("Shield1").Visible = True
                        Me.Shapes("Shield2").Visible = True
                        Me.Shapes("Shield3").Visible = False
                End If
                
        End Select

    End If
    
    'Tabellenname der Sprache anpassen (vorsicht: alle Formeln dynamisch anpassen)
    ' Tabelle2.Name = Tabelle4.Cells(64, 1).Value         'Blattregistername = Startseite

Application.ScreenUpdating = True
End Sub


'Buttons mit Verweis auf andere Tabellen (Prozeduren in modTabMacros)
Private Sub cmdErlBsp_Click()
    Call Erl_Bsp
End Sub
Private Sub cmdErlPKINPK_Click()
    Call Erl_NPK
End Sub
Private Sub cmdIndexBsp_Click()
    Call Indextab_Bsp
End Sub
Private Sub cmdIndexNPK_Click()
    Call Indextab_HB_TB
End Sub
Private Sub cmdModBsp_Click()
    Call Modellbeschrieb_BSp
End Sub
Private Sub cmdModNPK_Click()
    Call Modellbeschrieb_HB_TB
End Sub
Private Sub cmdModUT_Click()
    Call Modellbeschrieb_UT
End Sub
Private Sub cmdErlUT_Click()
Call Erl_UT
End Sub
Private Sub cmdGrafikNPK_Click()
Call GrafikNPK
End Sub
Private Sub cmdGrafikBsp_Click()
Call GrafikBSP
End Sub
Private Sub cmdGrafikUT_Click()
Call GrafikUT
End Sub









Attribute VB_Name = "Tabelle20"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Tabelle21"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Tabelle22"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Tabelle23"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Tabelle24"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Tabelle25"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Tabelle26"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Tabelle27"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Control = "CheckBox1, 2, 1, MSForms, CheckBox"
Attribute VB_Control = "CheckBox2, 4, 2, MSForms, CheckBox"
Attribute VB_Control = "CheckBox3, 5, 3, MSForms, CheckBox"
Attribute VB_Control = "CheckBox4, 6, 4, MSForms, CheckBox"
Attribute VB_Control = "CheckBox5, 7, 5, MSForms, CheckBox"
Attribute VB_Control = "CheckBox6, 8, 6, MSForms, CheckBox"
Attribute VB_Control = "CheckBox7, 9, 7, MSForms, CheckBox"
Attribute VB_Control = "CheckBox8, 10, 8, MSForms, CheckBox"
Attribute VB_Control = "CheckBox9, 11, 9, MSForms, CheckBox"
Attribute VB_Control = "CheckBox10, 12, 10, MSForms, CheckBox"
Attribute VB_Control = "CheckBox11, 13, 11, MSForms, CheckBox"
Attribute VB_Control = "CheckBox12, 14, 12, MSForms, CheckBox"
Private Sub CheckBox1_Click()
If CheckBox1 Then
 Worksheets("GrafikBsp V1").Range("b42").Value = "ein"
Else
 Worksheets("GrafikBsp V1").Range("b42").Value = "aus"
End If

End Sub


Private Sub CheckBox2_Click()
If CheckBox2 Then
 Worksheets("GrafikBsp V1").Range("c42").Value = "ein"
Else
 Worksheets("GrafikBsp V1").Range("c42").Value = "aus"
End If
End Sub

Private Sub CheckBox3_Click()
If CheckBox3 Then
 Worksheets("GrafikBsp V1").Range("d42").Value = "ein"
Else
 Worksheets("GrafikBsp V1").Range("d42").Value = "aus"
End If
End Sub

Private Sub CheckBox4_Click()
If CheckBox4 Then
 Worksheets("GrafikBsp V1").Range("e42").Value = "ein"
Else
 Worksheets("GrafikBsp V1").Range("e42").Value = "aus"
 End If
End Sub

Private Sub CheckBox5_Click()
If CheckBox5 Then
 Worksheets("GrafikBsp V1").Range("f42").Value = "ein"
Else
 Worksheets("GrafikBsp V1").Range("f42").Value = "aus"
End If
End Sub

Private Sub CheckBox6_Click()
If CheckBox6 Then
 Worksheets("GrafikBsp V1").Range("g42").Value = "ein"
Else
 Worksheets("GrafikBsp V1").Range("g42").Value = "aus"
End If
End Sub

Private Sub CheckBox7_Click()
If CheckBox7 Then
 Worksheets("GrafikBsp V1").Range("h42").Value = "ein"
Else
 Worksheets("GrafikBsp V1").Range("h42").Value = "aus"
End If
End Sub

Private Sub CheckBox8_Click()
If CheckBox8 Then
 Worksheets("GrafikBsp V1").Range("i42").Value = "ein"
Else
 Worksheets("GrafikBsp V1").Range("i42").Value = "aus"
End If
End Sub

Private Sub CheckBox9_Click()
If CheckBox9 Then
 Worksheets("GrafikBsp V1").Range("j42").Value = "ein"
Else
 Worksheets("GrafikBsp V1").Range("j42").Value = "aus"
End If
End Sub

Private Sub CheckBox10_Click()
If CheckBox10 Then
 Worksheets("GrafikBsp V1").Range("k42").Value = "ein"
Else
 Worksheets("GrafikBsp V1").Range("k42").Value = "aus"
End If
End Sub
Private Sub CheckBox11_Click()
If CheckBox11 Then
 Worksheets("GrafikBsp V1").Range("l42").Value = "ein"
Else
 Worksheets("GrafikBsp V1").Range("l42").Value = "aus"
End If
End Sub
Private Sub CheckBox12_Click()
If CheckBox12 Then
 Worksheets("GrafikBsp V1").Range("m42").Value = "ein"
Else
 Worksheets("GrafikBsp V1").Range("m42").Value = "aus"
End If
End Sub
Attribute VB_Name = "Tabelle28"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Control = "CheckBoxDiv, 40, 12, MSForms, CheckBox"
Attribute VB_Control = "CheckBox348, 39, 13, MSForms, CheckBox"
Attribute VB_Control = "CheckBox342, 38, 14, MSForms, CheckBox"
Attribute VB_Control = "CheckBox315, 37, 15, MSForms, CheckBox"
Attribute VB_Control = "CheckBox314, 36, 16, MSForms, CheckBox"
Attribute VB_Control = "CheckBox241FE110, 35, 17, MSForms, CheckBox"
Attribute VB_Control = "CheckBox241FE70, 34, 18, MSForms, CheckBox"
Attribute VB_Control = "CheckBox241FE0, 33, 19, MSForms, CheckBox"
Attribute VB_Control = "CheckBox237, 32, 20, MSForms, CheckBox"
Attribute VB_Control = "CheckBox223P, 31, 21, MSForms, CheckBox"
Attribute VB_Control = "CheckBox223N, 30, 22, MSForms, CheckBox"
Attribute VB_Control = "CheckBox222, 29, 23, MSForms, CheckBox"
Attribute VB_Control = "CheckBox221, 28, 24, MSForms, CheckBox"
Attribute VB_Control = "CheckBox213, 27, 25, MSForms, CheckBox"
Attribute VB_Control = "CheckBox211, 26, 26, MSForms, CheckBox"
Attribute VB_Control = "CheckBox172, 25, 27, MSForms, CheckBox"
Attribute VB_Control = "CheckBox171, 24, 28, MSForms, CheckBox"
Attribute VB_Control = "CheckBox164, 23, 29, MSForms, CheckBox"
Attribute VB_Control = "CheckBox162B, 22, 30, MSForms, CheckBox"
Attribute VB_Control = "CheckBox162A, 21, 31, MSForms, CheckBox"
Attribute VB_Control = "CheckBox161, 20, 32, MSForms, CheckBox"
Attribute VB_Control = "CheckBox151, 19, 33, MSForms, CheckBox"
Attribute VB_Control = "CheckBox131, 18, 34, MSForms, CheckBox"
Attribute VB_Control = "CheckBox121, 17, 35, MSForms, CheckBox"
Attribute VB_Control = "CheckBox117, 16, 36, MSForms, CheckBox"
Attribute VB_Control = "CheckBox114, 15, 37, MSForms, CheckBox"
Attribute VB_Control = "CheckBox113TB, 14, 38, MSForms, CheckBox"
Attribute VB_Control = "CheckBox113HB, 13, 39, MSForms, CheckBox"
Private Sub CheckBox1_Click()
If CheckBox1 Then
 Worksheets("GrafikBsp V1").Range("b42").Value = "ein"
Else
 Worksheets("GrafikBsp V1").Range("b42").Value = "aus"
End If

End Sub


Private Sub CheckBox2_Click()
If CheckBox2 Then
 Worksheets("GrafikBsp V1").Range("c42").Value = "ein"
Else
 Worksheets("GrafikBsp V1").Range("c42").Value = "aus"
End If
End Sub

Private Sub CheckBox3_Click()
If CheckBox3 Then
 Worksheets("GrafikBsp V1").Range("d42").Value = "ein"
Else
 Worksheets("GrafikBsp V1").Range("d42").Value = "aus"
End If
End Sub

Private Sub CheckBox4_Click()
If CheckBox4 Then
 Worksheets("GrafikBsp V1").Range("e42").Value = "ein"
Else
 Worksheets("GrafikBsp V1").Range("e42").Value = "aus"
 End If
End Sub

Private Sub CheckBox5_Click()
If CheckBox5 Then
 Worksheets("GrafikBsp V1").Range("f42").Value = "ein"
Else
 Worksheets("GrafikBsp V1").Range("f42").Value = "aus"
End If
End Sub

Private Sub CheckBox6_Click()
If CheckBox6 Then
 Worksheets("GrafikBsp V1").Range("g42").Value = "ein"
Else
 Worksheets("GrafikBsp V1").Range("g42").Value = "aus"
End If
End Sub

Private Sub CheckBox7_Click()
If CheckBox7 Then
 Worksheets("GrafikBsp V1").Range("h42").Value = "ein"
Else
 Worksheets("GrafikBsp V1").Range("h42").Value = "aus"
End If
End Sub

Private Sub CheckBox8_Click()
If CheckBox8 Then
 Worksheets("GrafikBsp V1").Range("i42").Value = "ein"
Else
 Worksheets("GrafikBsp V1").Range("i42").Value = "aus"
End If
End Sub

Private Sub CheckBox9_Click()
If CheckBox9 Then
 Worksheets("GrafikBsp V1").Range("j42").Value = "ein"
Else
 Worksheets("GrafikBsp V1").Range("j42").Value = "aus"
End If
End Sub

Private Sub CheckBox10_Click()
If CheckBox10 Then
 Worksheets("GrafikBsp V1").Range("k42").Value = "ein"
Else
 Worksheets("GrafikBsp V1").Range("k42").Value = "aus"
End If
End Sub
Private Sub CheckBox11_Click()
If CheckBox11 Then
 Worksheets("GrafikBsp V1").Range("l42").Value = "ein"
Else
 Worksheets("GrafikBsp V1").Range("l42").Value = "aus"
End If
End Sub
Private Sub CheckBox12_Click()
If CheckBox12 Then
 Worksheets("GrafikBsp V1").Range("m42").Value = "ein"
Else
 Worksheets("GrafikBsp V1").Range("m42").Value = "aus"
End If
End Sub
Private Sub CheckBox113HB_Click()
If CheckBox113HB Then
 Worksheets("GrafikNPK").Range("b43").Value = "ein"
Else
 Worksheets("GrafikNPK").Range("b43").Value = "aus"
End If
End Sub

Private Sub CheckBox113TB_Click()
If CheckBox113TB Then
 Worksheets("GrafikNPK").Range("c43").Value = "ein"
Else
 Worksheets("GrafikNPK").Range("c43").Value = "aus"
End If
End Sub
Private Sub CheckBox114_Click()
If CheckBox114 Then
 Worksheets("GrafikNPK").Range("d43").Value = "ein"
Else
 Worksheets("GrafikNPK").Range("d43").Value = "aus"
End If
End Sub
Private Sub CheckBox117_Click()
If CheckBox117 Then
 Worksheets("GrafikNPK").Range("e43").Value = "ein"
Else
 Worksheets("GrafikNPK").Range("e43").Value = "aus"
End If
End Sub
Private Sub CheckBox121_Click()
If CheckBox121 Then
 Worksheets("GrafikNPK").Range("f43").Value = "ein"
Else
 Worksheets("GrafikNPK").Range("f43").Value = "aus"
End If
End Sub
Private Sub CheckBox131_Click()
If CheckBox131 Then
 Worksheets("GrafikNPK").Range("g43").Value = "ein"
Else
 Worksheets("GrafikNPK").Range("g43").Value = "aus"
End If
End Sub
Private Sub CheckBox151_Click()
If CheckBox151 Then
 Worksheets("GrafikNPK").Range("h43").Value = "ein"
Else
 Worksheets("GrafikNPK").Range("h43").Value = "aus"
End If
End Sub
Private Sub CheckBox161_Click()
If CheckBox161 Then
 Worksheets("GrafikNPK").Range("i43").Value = "ein"
Else
 Worksheets("GrafikNPK").Range("i43").Value = "aus"
End If
End Sub
Private Sub CheckBox162A_Click()
If CheckBox162A Then
 Worksheets("GrafikNPK").Range("j43").Value = "ein"
Else
 Worksheets("GrafikNPK").Range("j43").Value = "aus"
End If
End Sub
Private Sub CheckBox162B_Click()
If CheckBox162B Then
 Worksheets("GrafikNPK").Range("k43").Value = "ein"
Else
 Worksheets("GrafikNPK").Range("k43").Value = "aus"
End If
End Sub
Private Sub CheckBox164_Click()
If CheckBox164 Then
 Worksheets("GrafikNPK").Range("l43").Value = "ein"
Else
 Worksheets("GrafikNPK").Range("l43").Value = "aus"
End If
End Sub
Private Sub CheckBox171_Click()
If CheckBox171 Then
 Worksheets("GrafikNPK").Range("m43").Value = "ein"
Else
 Worksheets("GrafikNPK").Range("m43").Value = "aus"
End If
End Sub
Private Sub CheckBox172_Click()
If CheckBox172 Then
 Worksheets("GrafikNPK").Range("n43").Value = "ein"
Else
 Worksheets("GrafikNPK").Range("n43").Value = "aus"
End If
End Sub
Private Sub CheckBox211_Click()
If CheckBox211 Then
 Worksheets("GrafikNPK").Range("o43").Value = "ein"
Else
 Worksheets("GrafikNPK").Range("o43").Value = "aus"
End If
End Sub
Private Sub CheckBox213_Click()
If CheckBox213 Then
 Worksheets("GrafikNPK").Range("p43").Value = "ein"
Else
 Worksheets("GrafikNPK").Range("p43").Value = "aus"
End If
End Sub
Private Sub CheckBox221_Click()
If CheckBox221 Then
 Worksheets("GrafikNPK").Range("q43").Value = "ein"
Else
 Worksheets("GrafikNPK").Range("q43").Value = "aus"
End If
End Sub
Private Sub CheckBox222_Click()
If CheckBox222 Then
 Worksheets("GrafikNPK").Range("r43").Value = "ein"
Else
 Worksheets("GrafikNPK").Range("r43").Value = "aus"
End If
End Sub
Private Sub CheckBox223N_Click()
If CheckBox223N Then
 Worksheets("GrafikNPK").Range("s43").Value = "ein"
Else
 Worksheets("GrafikNPK").Range("s43").Value = "aus"
End If
End Sub
Private Sub CheckBox223P_Click()
If CheckBox223P Then
 Worksheets("GrafikNPK").Range("t43").Value = "ein"
Else
 Worksheets("GrafikNPK").Range("t43").Value = "aus"
End If
End Sub
Private Sub CheckBox237_Click()
If CheckBox237 Then
 Worksheets("GrafikNPK").Range("u43").Value = "ein"
Else
 Worksheets("GrafikNPK").Range("u43").Value = "aus"
End If
End Sub
Private Sub CheckBox241FE0_Click()
If CheckBox241FE0 Then
 Worksheets("GrafikNPK").Range("v43").Value = "ein"
Else
 Worksheets("GrafikNPK").Range("v43").Value = "aus"
End If
End Sub
Private Sub CheckBox241FE70_Click()
If CheckBox241FE70 Then
 Worksheets("GrafikNPK").Range("w43").Value = "ein"
Else
 Worksheets("GrafikNPK").Range("w43").Value = "aus"
End If
End Sub
Private Sub CheckBox241FE110_Click()
If CheckBox241FE110 Then
 Worksheets("GrafikNPK").Range("x43").Value = "ein"
Else
 Worksheets("GrafikNPK").Range("x43").Value = "aus"
End If
End Sub
Private Sub CheckBox314_Click()
If CheckBox314 Then
 Worksheets("GrafikNPK").Range("y43").Value = "ein"
Else
 Worksheets("GrafikNPK").Range("y43").Value = "aus"
End If
End Sub
Private Sub CheckBox315_Click()
If CheckBox315 Then
 Worksheets("GrafikNPK").Range("z43").Value = "ein"
Else
 Worksheets("GrafikNPK").Range("z43").Value = "aus"
End If
End Sub
Private Sub CheckBox342_Click()
If CheckBox342 Then
 Worksheets("GrafikNPK").Range("AA43").Value = "ein"
Else
 Worksheets("GrafikNPK").Range("AA43").Value = "aus"
End If
End Sub
Private Sub CheckBox348_Click()
If CheckBox348 Then
 Worksheets("GrafikNPK").Range("AB43").Value = "ein"
Else
 Worksheets("GrafikNPK").Range("AB43").Value = "aus"
End If
End Sub
Private Sub CheckBoxDIV_Click()
If CheckBoxDiv Then
 Worksheets("GrafikNPK").Range("Ac43").Value = "ein"
Else
 Worksheets("GrafikNPK").Range("Ac43").Value = "aus"
End If
End Sub










Attribute VB_Name = "Tabelle29"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Control = "CheckBox43, 115, 41, MSForms, CheckBox"
Attribute VB_Control = "CheckBox22, 114, 42, MSForms, CheckBox"
Attribute VB_Control = "CheckBox266B8, 113, 43, MSForms, CheckBox"
Attribute VB_Control = "CheckBoxDepo, 112, 44, MSForms, CheckBox"
Attribute VB_Control = "CheckBoxTrspC, 111, 45, MSForms, CheckBox"
Attribute VB_Control = "CheckBoxTrspB, 110, 46, MSForms, CheckBox"
Attribute VB_Control = "CheckBoxTrspA, 109, 47, MSForms, CheckBox"
Attribute VB_Control = "CheckBox276, 108, 48, MSForms, CheckBox"
Attribute VB_Control = "CheckBox275, 107, 49, MSForms, CheckBox"
Attribute VB_Control = "CheckBox274B, 106, 50, MSForms, CheckBox"
Attribute VB_Control = "CheckBox274A, 105, 51, MSForms, CheckBox"
Attribute VB_Control = "CheckBox273B, 104, 52, MSForms, CheckBox"
Attribute VB_Control = "CheckBox273A, 103, 53, MSForms, CheckBox"
Attribute VB_Control = "CheckBox272, 102, 54, MSForms, CheckBox"
Attribute VB_Control = "CheckBox271, 101, 55, MSForms, CheckBox"
Attribute VB_Control = "CheckBox268, 100, 56, MSForms, CheckBox"
Attribute VB_Control = "CheckBox267, 99, 57, MSForms, CheckBox"
Attribute VB_Control = "CheckBox266C12, 98, 58, MSForms, CheckBox"
Attribute VB_Control = "CheckBox266b12, 97, 59, MSForms, CheckBox"
Attribute VB_Control = "CheckBox266A12, 96, 60, MSForms, CheckBox"
Attribute VB_Control = "CheckBox266D200, 95, 61, MSForms, CheckBox"
Attribute VB_Control = "CheckBox266D150, 94, 62, MSForms, CheckBox"
Attribute VB_Control = "CheckBox266D100, 93, 63, MSForms, CheckBox"
Attribute VB_Control = "CheckBox266C8, 92, 64, MSForms, CheckBox"
Attribute VB_Control = "CheckBox266A8, 91, 65, MSForms, CheckBox"
Attribute VB_Control = "CheckBox266C5, 90, 66, MSForms, CheckBox"
Attribute VB_Control = "CheckBox266B5, 89, 67, MSForms, CheckBox"
Attribute VB_Control = "CheckBox266A5, 88, 68, MSForms, CheckBox"
Attribute VB_Control = "CheckBox265, 87, 69, MSForms, CheckBox"
Attribute VB_Control = "CheckBox264S, 86, 70, MSForms, CheckBox"
Attribute VB_Control = "CheckBox264, 85, 71, MSForms, CheckBox"
Attribute VB_Control = "CheckBox263S, 84, 72, MSForms, CheckBox"
Attribute VB_Control = "CheckBox263, 83, 73, MSForms, CheckBox"
Attribute VB_Control = "CheckBox262C, 82, 74, MSForms, CheckBox"
Attribute VB_Control = "CheckBox262B, 81, 75, MSForms, CheckBox"
Attribute VB_Control = "CheckBox262A, 80, 76, MSForms, CheckBox"
Attribute VB_Control = "CheckBox261S, 79, 77, MSForms, CheckBox"
Attribute VB_Control = "CheckBox261B, 78, 78, MSForms, CheckBox"
Attribute VB_Control = "CheckBox261A, 77, 79, MSForms, CheckBox"
Attribute VB_Control = "CheckBox223PUT, 76, 80, MSForms, CheckBox"
Attribute VB_Control = "CheckBox223NUT, 75, 81, MSForms, CheckBox"
Attribute VB_Control = "CheckBox222UT, 74, 82, MSForms, CheckBox"
Attribute VB_Control = "CheckBox221ut, 73, 83, MSForms, CheckBox"
Attribute VB_Control = "CheckBox117UT, 72, 84, MSForms, CheckBox"
Attribute VB_Control = "CheckBox113UT, 1, 85, MSForms, CheckBox"
'Checkboxen f|fffd|r UT-Grafik

' Checkboxen f|fffd|r Wahl Schichtmodell

Private Sub CheckBox22_Click()
If CheckBox22 Then
 Worksheets("GrafikUT").Range("A43").Value = "ein"
Else
 Worksheets("GrafikUT").Range("A43").Value = "aus"
End If
End Sub
Private Sub CheckBox43_Click()
If CheckBox43 Then
 Worksheets("GrafikUT").Range("A82").Value = "ein"
Else
 Worksheets("GrafikUT").Range("A82").Value = "aus"
End If
End Sub


' Checkboxen f|fffd|r Wahl UT-Modelle

Private Sub CheckBox113UT_Click()
If CheckBox113UT Then
 Worksheets("GrafikUT").Range("B43").Value = "ein"
Else
 Worksheets("GrafikUT").Range("B43").Value = "aus"
End If
End Sub

Private Sub CheckBox117UT_Click()
If CheckBox117UT Then
 Worksheets("GrafikUT").Range("c43").Value = "ein"
Else
 Worksheets("GrafikUT").Range("c43").Value = "aus"
End If
End Sub

Private Sub CheckBox221UT_Click()
If CheckBox221ut Then
 Worksheets("GrafikUT").Range("d43").Value = "ein"
Else
 Worksheets("GrafikUT").Range("d43").Value = "aus"
End If
End Sub

Private Sub CheckBox222UT_Click()
If CheckBox222UT Then
 Worksheets("GrafikUT").Range("e43").Value = "ein"
Else
 Worksheets("GrafikUT").Range("e43").Value = "aus"
End If
End Sub

Private Sub CheckBox223NUT_Click()
If CheckBox223NUT Then
 Worksheets("GrafikUT").Range("f43").Value = "ein"
Else
 Worksheets("GrafikUT").Range("f43").Value = "aus"
End If
End Sub

Private Sub CheckBox223PUT_Click()
If CheckBox223PUT Then
 Worksheets("GrafikUT").Range("g43").Value = "ein"
Else
 Worksheets("GrafikUT").Range("g43").Value = "aus"
End If
End Sub

Private Sub CheckBox261A_Click()
If CheckBox261A Then
 Worksheets("GrafikUT").Range("h43").Value = "ein"
Else
 Worksheets("GrafikUT").Range("h43").Value = "aus"
End If
End Sub

Private Sub CheckBox261B_Click()
If CheckBox261B Then
 Worksheets("GrafikUT").Range("I43").Value = "ein"
Else
 Worksheets("GrafikUT").Range("I43").Value = "aus"
End If
End Sub
Private Sub CheckBox261S_Click()
If CheckBox261S Then
 Worksheets("GrafikUT").Range("J43").Value = "ein"
Else
 Worksheets("GrafikUT").Range("J43").Value = "aus"
End If
End Sub

Private Sub CheckBox262A_Click()
If CheckBox262A Then
 Worksheets("GrafikUT").Range("K43").Value = "ein"
Else
 Worksheets("GrafikUT").Range("K43").Value = "aus"
End If
End Sub
Private Sub CheckBox262B_Click()
If CheckBox262B Then
 Worksheets("GrafikUT").Range("L43").Value = "ein"
Else
 Worksheets("GrafikUT").Range("L43").Value = "aus"
End If
End Sub
Private Sub CheckBox262C_Click()
If CheckBox262C Then
 Worksheets("GrafikUT").Range("M43").Value = "ein"
Else
 Worksheets("GrafikUT").Range("M43").Value = "aus"
End If
End Sub

Private Sub CheckBox263_Click()
If CheckBox263 Then
 Worksheets("GrafikUT").Range("N43").Value = "ein"
Else
 Worksheets("GrafikUT").Range("N43").Value = "aus"
End If
End Sub

Private Sub CheckBox263S_Click()
If CheckBox263S Then
 Worksheets("GrafikUT").Range("O43").Value = "ein"
Else
 Worksheets("GrafikUT").Range("O43").Value = "aus"
End If
End Sub

Private Sub CheckBox264_Click()
If CheckBox264 Then
 Worksheets("GrafikUT").Range("P43").Value = "ein"
Else
 Worksheets("GrafikUT").Range("P43").Value = "aus"
End If
End Sub

Private Sub CheckBox264S_Click()
If CheckBox264S Then
 Worksheets("GrafikUT").Range("Q43").Value = "ein"
Else
 Worksheets("GrafikUT").Range("Q43").Value = "aus"
End If
End Sub

Private Sub CheckBox265_Click()
If CheckBox265 Then
 Worksheets("GrafikUT").Range("R43").Value = "ein"
Else
 Worksheets("GrafikUT").Range("R43").Value = "aus"
End If
End Sub

Private Sub CheckBox266A5_Click()
If CheckBox266A5 Then
 Worksheets("GrafikUT").Range("S43").Value = "ein"
Else
 Worksheets("GrafikUT").Range("S43").Value = "aus"
End If
End Sub
Private Sub CheckBox266B5_Click()
If CheckBox266B5 Then
 Worksheets("GrafikUT").Range("T43").Value = "ein"
Else
 Worksheets("GrafikUT").Range("T43").Value = "aus"
End If
End Sub
Private Sub CheckBox266C5_Click()
If CheckBox266C5 Then
 Worksheets("GrafikUT").Range("U43").Value = "ein"
Else
 Worksheets("GrafikUT").Range("U43").Value = "aus"
End If
End Sub
Private Sub CheckBox266A8_Click()
If CheckBox266A8 Then
 Worksheets("GrafikUT").Range("V43").Value = "ein"
Else
 Worksheets("GrafikUT").Range("V43").Value = "aus"
End If
End Sub
Private Sub CheckBox266B8_Click()
If CheckBox266B8 Then
 Worksheets("GrafikUT").Range("W43").Value = "ein"
Else
 Worksheets("GrafikUT").Range("W43").Value = "aus"
End If
End Sub
Private Sub CheckBox266C8_Click()
If CheckBox266C8 Then
 Worksheets("GrafikUT").Range("X43").Value = "ein"
Else
 Worksheets("GrafikUT").Range("X43").Value = "aus"
End If
End Sub
Private Sub CheckBox266D100_Click()
If CheckBox266D100 Then
 Worksheets("GrafikUT").Range("Y43").Value = "ein"
Else
 Worksheets("GrafikUT").Range("Y43").Value = "aus"
End If
End Sub
Private Sub CheckBox266D150_Click()
If CheckBox266D150 Then
 Worksheets("GrafikUT").Range("Z43").Value = "ein"
Else
 Worksheets("GrafikUT").Range("Z43").Value = "aus"
End If
End Sub
Private Sub CheckBox266D200_Click()
If CheckBox266D200 Then
 Worksheets("GrafikUT").Range("AA43").Value = "ein"
Else
 Worksheets("GrafikUT").Range("AA43").Value = "aus"
End If
End Sub
Private Sub CheckBox266A12_Click()
If CheckBox266A12 Then
 Worksheets("GrafikUT").Range("AB43").Value = "ein"
Else
 Worksheets("GrafikUT").Range("AB43").Value = "aus"
End If
End Sub
Private Sub CheckBox266B12_Click()
If CheckBox266b12 Then
 Worksheets("GrafikUT").Range("AC43").Value = "ein"
Else
 Worksheets("GrafikUT").Range("AC43").Value = "aus"
End If
End Sub
Private Sub CheckBox266C12_Click()
If CheckBox266C12 Then
 Worksheets("GrafikUT").Range("AD43").Value = "ein"
Else
 Worksheets("GrafikUT").Range("AD43").Value = "aus"
End If
End Sub
Private Sub CheckBox267_Click()
If CheckBox267 Then
 Worksheets("GrafikUT").Range("AE43").Value = "ein"
Else
 Worksheets("GrafikUT").Range("AE43").Value = "aus"
End If
End Sub
Private Sub CheckBox268_Click()
If CheckBox268 Then
 Worksheets("GrafikUT").Range("AF43").Value = "ein"
Else
 Worksheets("GrafikUT").Range("AF43").Value = "aus"
End If
End Sub
Private Sub CheckBox271_Click()
If CheckBox271 Then
 Worksheets("GrafikUT").Range("AG43").Value = "ein"
Else
 Worksheets("GrafikUT").Range("AG43").Value = "aus"
End If
End Sub
Private Sub CheckBox272_Click()
If CheckBox272 Then
 Worksheets("GrafikUT").Range("AH43").Value = "ein"
Else
 Worksheets("GrafikUT").Range("AH43").Value = "aus"
End If
End Sub
Private Sub CheckBox273A_Click()
If CheckBox273A Then
 Worksheets("GrafikUT").Range("AI43").Value = "ein"
Else
 Worksheets("GrafikUT").Range("AI43").Value = "aus"
End If
End Sub
Private Sub CheckBox273B_Click()
If CheckBox273B Then
 Worksheets("GrafikUT").Range("AJ43").Value = "ein"
Else
 Worksheets("GrafikUT").Range("AJ43").Value = "aus"
End If
End Sub

Private Sub CheckBox274A_Click()
If CheckBox274A Then
 Worksheets("GrafikUT").Range("AK43").Value = "ein"
Else
 Worksheets("GrafikUT").Range("AK43").Value = "aus"
End If
End Sub

Private Sub CheckBox274B_Click()
If CheckBox274B Then
 Worksheets("GrafikUT").Range("AL43").Value = "ein"
Else
 Worksheets("GrafikUT").Range("AL43").Value = "aus"
End If
End Sub
Private Sub CheckBox275_Click()
If CheckBox275 Then
 Worksheets("GrafikUT").Range("AM43").Value = "ein"
Else
 Worksheets("GrafikUT").Range("AM43").Value = "aus"
End If
End Sub

Private Sub CheckBox276_Click()
If CheckBox276 Then
 Worksheets("GrafikUT").Range("AN43").Value = "ein"
Else
 Worksheets("GrafikUT").Range("AN43").Value = "aus"
End If
End Sub


Private Sub CheckBoxTrspA_Click()
If CheckBoxTrspA Then
 Worksheets("GrafikUT").Range("AO43").Value = "ein"
Else
 Worksheets("GrafikUT").Range("AO43").Value = "aus"
End If
End Sub

Private Sub CheckBoxTrspB_Click()
If CheckBoxTrspB Then
 Worksheets("GrafikUT").Range("AP43").Value = "ein"
Else
 Worksheets("GrafikUT").Range("AP43").Value = "aus"
End If
End Sub

Private Sub CheckBoxTrspC_Click()
If CheckBoxTrspC Then
 Worksheets("GrafikUT").Range("AQ43").Value = "ein"
Else
 Worksheets("GrafikUT").Range("AQ43").Value = "aus"
End If
End Sub
Private Sub CheckBoxDepo_Click()
If CheckBoxDepo Then
 Worksheets("GrafikUT").Range("AR43").Value = "ein"
Else
 Worksheets("GrafikUT").Range("AR43").Value = "aus"
End If
End Sub








































































Attribute VB_Name = "Tabelle3"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Tabelle4"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Tabelle5"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Tabelle6"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Control = "cmdDatenImportieren, 5, 0, MSForms, CommandButton"
Private Sub cmdDatenImportieren_Click()
    Call PKIBerechnung_importieren
End Sub
Attribute VB_Name = "Tabelle7"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Tabelle8"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Tabelle9"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "modCheckUpdate"
Option Explicit

'Datei-Download aus dem Internet per Windows-API
'API = Application Program Interface
Declare PtrSafe Function URLDownloadToFile Lib "urlmon.dll" _
   Alias "URLDownloadToFileA" ( _
   ByVal pCaller As LongPtr, _
   ByVal szURL As String, _
   ByVal szFileName As String, _
   ByVal dwReserved As Long, _
   ByVal lpfnCB As LongPtr) As Long

'Hinweise: 2018-08-22/daba
'- dieses Makro pr|fffd|ft gleich beim Start/|fffd|ffnen der Datei das letzte Update-Datum in Tabelle: Regie-Lohn
'- Es wird gem|fffd|ss Sprache (de, fr, it) die entsprechende Webseite aufgerufen
'- in der Tabelle: Version wurde je Sprache (de, fr, it) die entsprechende URL eingetragen
'---------------------------------------------------------------------------------------------------------------------------------------------

Dim strUpdateLink As String
Dim wshshell As Object
Dim strURL As String
Dim ie As Object, ieForm
Dim MyLogin As String
Dim MyPass As String
Dim strDatei As String
Dim datUpdateDatum As Date
Dim intDatumDiff As Integer
Dim ToolNameAktuell As String
Dim ToolVersionAktuell As String
Dim ToolVersionNeu As String
Dim intNameRow As Integer
Dim TAOkay As Boolean
Dim strSprache As String
Dim intSprache As Integer
Dim intSprachSpalte As Integer
Dim strMeldung As String
Dim varAntwort



Sub Check_Update()

    'Update-Datum, MsgBox-Texte, Update-Link ermitteln ...
    With Tabelle3   '= Version
        '.Visible = xlSheetVisible
        '.Select
        'Tool-Name und Version ermitteln ...
        ToolNameAktuell = .Range("B3")
        ToolVersionAktuell = .Range("B4")
        'Sprache, Sprachspalte ermitteln ...
        intSprache = .Range("B5")
        intSprachSpalte = intSprache + 3
        
        'Check Version in 'Tool-Aktualitaet.xlsx' ...
        TAOkay = True
        Call Get_ToolAktualitaet
        Call Check_Version
        
        If TAOkay = True Then
            'Check: gibt es eine neuere Tool-Version?
            If ToolVersionAktuell <> ToolVersionNeu Then
                strMeldung = .Cells(6, intSprachSpalte).Value & vbCrLf _
                            & .Cells(7, intSprachSpalte).Value
                varAntwort = MsgBox(strMeldung, vbYesNo, .Cells(7, intSprachSpalte))
                If varAntwort = vbYes Then
                    .Range("B4").Value = ToolVersionNeu
                    'Aufruf der Webseite f|fffd|r den Tool-Downoad ...
                    Set wshshell = CreateObject("WScript.Shell")
                    wshshell.Run strUpdateLink
                End If

            End If
            
            'Datei 'Tool-Aktualitaet.xlsx gleich wieder l|fffd|schen ...
            Application.DisplayAlerts = False
            Kill strDatei
            Application.DisplayAlerts = True
            
        End If
        '.Visible = xlSheetVeryHidden
    End With

    Set wshshell = Nothing

    Tabelle2.Select

End Sub


Sub Check_Version()
    
    Application.DisplayAlerts = False
    Workbooks.Open strDatei
    
    With ActiveWorkbook.Sheets(1)
        .Activate
        On Error GoTo Err1
        intNameRow = .Range("B:B").Find(ToolNameAktuell).Row
        ToolVersionNeu = .Range("C" & intNameRow).Value
        strUpdateLink = .Cells(intNameRow, intSprachSpalte + 1).Value
    End With

Err1:
    If Err.Number = 91 Then
        MsgBox "Die Tool-Aktualitaet kann nicht gelesen werden!", vbExclamation, "Fehler ..."
        TAOkay = False
    End If

    ActiveWorkbook.Close SaveChanges:=False
    Application.DisplayAlerts = True

End Sub


Sub Get_ToolAktualitaet()
    
    
    strURL = "http://www.baumeister.ch/?option=com_edocman&task=document.download&id=3055"
    strDatei = ActiveWorkbook.PATH & "\Tool-Aktualitaet.xlsx"
   
   If DateiHerunterladen(strURL, strDatei) = 0 Then
   End If

End Sub


Function DateiHerunterladen(sURL As String, sPATH As String) As Long
 
    Application.Cursor = xlWait
        DateiHerunterladen = URLDownloadToFile(0, sURL, sPATH, 0, 0)
    Application.Cursor = xlDefault

End Function


Attribute VB_Name = "modPKIBerechnung"

'Variablendekl. ...
Public strPKIBerechnung$, strPKITool, intSlashPos%

' Importiert Daten aus PKI Berechnung

Sub PKIBerechnung_importieren()
    Application.ScreenUpdating = False
 
    strPKITool = ActiveWorkbook.Name                'weist den Variablen Dateinamen zu
    strPKIBerechnung = Application.GetOpenFilename  'externe Datei |fffd|ffnen mit Dateiauswahl
    Workbooks.Open strPKIBerechnung
    strPKIBerechnung = ActiveWorkbook.Name          'Dateinamen der externen Datei zuweisen ...

    
' Tabelle "Index"
    ' Kopiere M-Werte von HB-TB
    
        With ActiveWorkbook.Sheets("M-Werte HBTB")
            .Select
             Range("F:F,G:G,P:P").Select
             Selection.Copy
        End With
      
        Windows(strPKITool).Activate
        Worksheets("Indizes").Visible = True  'Blatt einblenden, sonst kann nicht eingef|fffd|gt werden
     
        With ActiveWorkbook.Sheets("Indizes")
            .Select
            .Columns("D:F").Select
            Selection.PasteSpecial Paste:=xlPasteValues, Operation:=xlNone, SkipBlanks _
            :=False, Transpose:=False
        End With
          
        
        ' Kopiere M-Werte von UT 22
    
        Windows(strPKIBerechnung).Activate
        With ActiveWorkbook.Sheets("M-Werte-UT-2-2")
            .Select
             Range("F:F,G:G,P:P").Select
             Selection.Copy
        End With
      
        Windows(strPKITool).Activate
        With ActiveWorkbook.Sheets("Indizes")
            .Select
            .Columns("H:J").Select
            Selection.PasteSpecial Paste:=xlPasteValues, Operation:=xlNone, SkipBlanks _
            :=False, Transpose:=False
        End With
        
        
         ' Kopiere M-Werte von UT 43
        
        Windows(strPKIBerechnung).Activate
        With ActiveWorkbook.Sheets("M-Werte-UT-4-3")
            .Select
             Range("F:F,G:G,P:P").Select
             Selection.Copy
        End With
      
        Windows(strPKITool).Activate
        With ActiveWorkbook.Sheets("Indizes")
            .Select
            .Columns("L:N").Select
                      
            Selection.PasteSpecial Paste:=xlPasteValues, Operation:=xlNone, SkipBlanks _
            :=False, Transpose:=False
        End With
        
  ' Kopiere M-Werte von Bausparten
        
        Windows(strPKIBerechnung).Activate
        With ActiveWorkbook.Sheets("M-Werte Bsp")
            .Select
              Range("F:F,AG:AG").Select
             ' Range("4:23").Select
             
             Selection.Copy
        End With
      
        Windows(strPKITool).Activate
        With ActiveWorkbook.Sheets("Indizes")
            .Select
             .Columns("A:B").Select
            '.Rows("4:23").Select
            Selection.PasteSpecial Paste:=xlPasteValues, Operation:=xlNone, SkipBlanks _
            :=False, Transpose:=False
        End With

        Worksheets("Indizes").Visible = xlSheetVeryHidden


'-----------------------------------------------------------------
' Indextabellen mit Bausparten, NPK und NPK UT kopieren
    ' Kopiere Tabelle T-HB-TB
        
        '--------------------------
        'blattschutz entfernen (separate Prozedur, ansonsten Laufzeitfehler)
        Windows(strPKITool).Activate
        Worksheets("T-Bsp").Visible = True
        Sheets("T-Bsp").Select
        ActiveSheet.Unprotect ("tigi")
        '----------------------------
        
        Windows(strPKIBerechnung).Activate
        With ActiveWorkbook.Sheets("T-Bsp")
            .Select
             Range("A:M").Select
             Selection.Copy
        End With
      
        Windows(strPKITool).Activate
        Worksheets("T-Bsp").Visible = True  'Blatt einblenden, sonst kann nicht eingef|fffd|gt werden
        
     
        With ActiveWorkbook.Sheets("T-Bsp")
            .Select
            .Columns("A:M").Select
            ' Werte einf|fffd|gen
            Selection.PasteSpecial Paste:=xlPasteValues, Operation:=xlNone, SkipBlanks _
            :=False, Transpose:=False
            
        End With
        
        '------------------------------------------------
        'Formeln f|fffd|r Spaltenk|fffd|pfe kopieren
            Range("AA1").Select
            Selection.Copy
            ActiveWindow.ScrollColumn = 1
            Range("A1").Select
            Selection.PasteSpecial Paste:=xlPasteFormulas, Operation:=xlNone, _
                SkipBlanks:=False, Transpose:=False
        
            Range("AA2:AM2").Select
            Selection.Copy
            ActiveWindow.ScrollColumn = 1
            Range("A2").Select
            Selection.PasteSpecial Paste:=xlPasteFormulas, Operation:=xlNone, _
                SkipBlanks:=False, Transpose:=False
        
        '-----------------------------------------------
        
        Range("A1").Select
        ActiveSheet.Protect ("tigi")
        Worksheets("T-Bsp").Visible = xlSheetVeryHidden
       
    
        '--------------------------
        'blattschutz entfernen (separate Prozedur, ansonsten Laufzeitfehler)
        Windows(strPKITool).Activate
        Worksheets("T-HB-TB").Visible = True
        Sheets("T-HB-TB").Select
        ActiveSheet.Unprotect ("tigi")
        '----------------------------
    
    
        Windows(strPKIBerechnung).Activate
        With ActiveWorkbook.Sheets("T-HB-TB")
            .Select
             Range("A:AC").Select
             Selection.Copy
        End With
      
        Windows(strPKITool).Activate
        
        Worksheets("T-HB-TB").Visible = True  'Blatt einblenden, sonst kann nicht eingef|fffd|gt werden
               
        With ActiveWorkbook.Sheets("T-HB-TB")
            .Select
            .Columns("A:AC").Select
            ' Werte einf|fffd|gen
            Selection.PasteSpecial Paste:=xlPasteValues, Operation:=xlNone, SkipBlanks _
            :=False, Transpose:=False
            
        End With
                 
                   
                '------------------------------------------------
                  'Formeln f|fffd|r Spaltenk|fffd|pfe kopieren
                      Range("BA1").Select
                      Selection.Copy
                      ActiveWindow.ScrollColumn = 1
                      Range("A1").Select
                      Selection.PasteSpecial Paste:=xlPasteFormulas, Operation:=xlNone, _
                          SkipBlanks:=False, Transpose:=False
                  
                      Range("BA2:CC2").Select
                      Selection.Copy
                      ActiveWindow.ScrollColumn = 1
                      Range("A2").Select
                      Selection.PasteSpecial Paste:=xlPasteFormulas, Operation:=xlNone, _
                          SkipBlanks:=False, Transpose:=False
                  
                  '-----------------------------------------------
                   
         
         Range("A1").Select
         ActiveSheet.Protect ("tigi")
        Worksheets("T-HB-TB").Visible = xlSheetVeryHidden



        '--------------------------
        'blattschutz entfernen (separate Prozedur, ansonsten Laufzeitfehler)
        Windows(strPKITool).Activate
        Worksheets("T-ut-22").Visible = True
        Sheets("T-ut-22").Select
        ActiveSheet.Unprotect ("tigi")
        '----------------------------


        Windows(strPKIBerechnung).Activate
        With ActiveWorkbook.Sheets("T-UT-22")
            .Select
             Range("A:AR").Select
             Selection.Copy
        End With
      
        Windows(strPKITool).Activate
        Worksheets("T-UT-22").Visible = True  'Blatt einblenden, sonst kann nicht eingef|fffd|gt werden
        
        With ActiveWorkbook.Sheets("T-UT-22")
            .Select
            .Columns("A:AR").Select
            ' Werte einf|fffd|gen
            Selection.PasteSpecial Paste:=xlPasteValues, Operation:=xlNone, SkipBlanks _
            :=False, Transpose:=False
            
        End With
        
                 '------------------------------------------------
                  'Formeln f|fffd|r Spaltenk|fffd|pfe kopieren
                      Range("BA1").Select
                      Selection.Copy
                      ActiveWindow.ScrollColumn = 1
                      Range("A1").Select
                      Selection.PasteSpecial Paste:=xlPasteFormulas, Operation:=xlNone, _
                          SkipBlanks:=False, Transpose:=False
                  
                      Range("BA2:CR2").Select
                      Selection.Copy
                      ActiveWindow.ScrollColumn = 1
                      Range("A2").Select
                      Selection.PasteSpecial Paste:=xlPasteFormulas, Operation:=xlNone, _
                          SkipBlanks:=False, Transpose:=False
                  
                  '-----------------------------------------------
        
        
        Range("A1").Select
        ActiveSheet.Protect ("tigi")
        Worksheets("T-UT-22").Visible = xlSheetVeryHidden


        '--------------------------
        'blattschutz entfernen (separate Prozedur, ansonsten Laufzeitfehler)
        Windows(strPKITool).Activate
        Worksheets("T-ut-43").Visible = True
        Sheets("T-ut-43").Select
        ActiveSheet.Unprotect ("tigi")
        '----------------------------


        Windows(strPKIBerechnung).Activate
        With ActiveWorkbook.Sheets("T-UT-43")
            .Select
             Range("A:AR").Select
             Selection.Copy
        End With
      
        Windows(strPKITool).Activate
        Worksheets("T-UT-43").Visible = True  'Blatt einblenden, sonst kann nicht eingef|fffd|gt werden
        With ActiveWorkbook.Sheets("T-UT-43")
            .Select
            .Columns("A:AR").Select
            ' Werte einf|fffd|gen
            Selection.PasteSpecial Paste:=xlPasteValues, Operation:=xlNone, SkipBlanks _
            :=False, Transpose:=False
            
        End With
        
                  '------------------------------------------------
                  'Formeln f|fffd|r Spaltenk|fffd|pfe kopieren
                      Range("BA1").Select
                      Selection.Copy
                      ActiveWindow.ScrollColumn = 1
                      Range("A1").Select
                      Selection.PasteSpecial Paste:=xlPasteFormulas, Operation:=xlNone, _
                          SkipBlanks:=False, Transpose:=False
                  
                      Range("BA2:CR2").Select
                      Selection.Copy
                      ActiveWindow.ScrollColumn = 1
                      Range("A2").Select
                      Selection.PasteSpecial Paste:=xlPasteFormulas, Operation:=xlNone, _
                          SkipBlanks:=False, Transpose:=False
                  
                  '-----------------------------------------------
        
        Range("A1").Select
        ActiveSheet.Protect ("tigi")
        Worksheets("T-UT-43").Visible = xlSheetVeryHidden






' deaktiviert Kopiermodus im Berechnungstool und schliesst die Datei ohne zu speichern
        Windows(strPKIBerechnung).Activate
        With ActiveWorkbook.Sheets("M-Werte HBTB")
            Application.CutCopyMode = False
            ActiveWindow.Close SaveChanges:=False
        End With
        
' speichert Datei PKI-Tool
    Windows(strPKITool).Activate
    ActiveWorkbook.Save
    
Application.ScreenUpdating = True


' stellt die aktive Zelle auf Startseite
    Sheets("Startseite").Select
    ActiveWindow.ScrollRow = 1
    Range("B5:C5").Select

MsgBox "Der Daten Import wurde erfolgreich durchgef|fffd|hrt", vbInformation, "Datenimport"
    
End Sub
Attribute VB_Name = "modTabMacros"
Option Explicit
Option Private Module

'---------------------------------------------------------------------------------------------------------------------------------------------
'Hinweise: 2018-10-25/daba
'- diese Makros erf|fffd|llen folgende(n) Zweck(e):
'- Tabelle: Einstellungen Objekt_Click() sind den PDF-Link Symbolen hinterlegt und stellen deren jeweiligen Positionen wieder zur|fffd|ck
'- Tabellen: PKI ... Outline_enlarge(), Outline_reduce() erm|fffd|glichen auf Knopfdruck mittels ToggleButton die Erweiterung, bzw. Reduktion der
'  Eingabelisten (entsprechend der Gruppierung 1, bzw. 2)
'---------------------------------------------------------------------------------------------------------------------------------------------

'Variablendeklaration ...
Public ws As Worksheet


'Tabelle: PKI ... Gruppierung: Schalter 2: die Liste wird erweitert (ge|fffd|ffnet) ...
Sub Outline_enlarge()

'End Sub

     ActiveSheet.Unprotect Password:="tigi"
     ActiveSheet.Outline.ShowLevels RowLevels:=2
     ActiveSheet.Protect DrawingObjects:=False, Contents:=True, _
                Scenarios:=False, AllowFormattingCells:=True, Password:="tigi"

End Sub


'Tabelle: PKI: ... Gruppierung: Schalter 1: die  Liste wird geschlossen (reduziert) ...
'Sub Outline_reduce()

End Sub

   ' ActiveSheet.Unprotect Password:="tigi"
   ' ActiveSheet.Outline.ShowLevels RowLevels:=1
   'ActiveSheet.Protect DrawingObjects:=False, Contents:=True, _
             '   Scenarios:=False, AllowFormattingCells:=True, Password:="tigi"
        
'End Sub

' Schaltknopf zu Startseite allgemein
Sub Schalt_Startseite()
    Sheets("Startseite").Select
    ' schliesst alle m|fffd|glichen offenen Tabellen
        
        For Each ws In ActiveWorkbook.Worksheets
                Select Case ws.Name
                    Case Is = "Startseite", "PKI-Bsp", "PKI-NPK", "PKI-UT"      ' Ausnahmen
                    Case Else
                        ws.Visible = xlSheetVeryHidden
                End Select
            Next
End Sub


Sub Indextab_UT22()
    Worksheets("T-UT-22").Visible = True
    Sheets("T-UT-22").Select
End Sub
Sub Indextab_UT43()
    Worksheets("T-UT-43").Visible = True
    Sheets("T-UT-43").Select
End Sub
Sub Indextab_HB_TB()
    Worksheets("T-HB-TB").Visible = True
    Sheets("T-HB-TB").Select
End Sub
Sub Indextab_Bsp()
    Worksheets("T-Bsp").Visible = True
    Sheets("T-Bsp").Select
End Sub
Sub Modellbeschrieb_BSp()
    Worksheets("B-Bsp").Visible = True
    Sheets("B-Bsp").Select
End Sub
Sub Modellbeschrieb_HB_TB()
    Worksheets("B-NPK").Visible = True
    Sheets("B-NPK").Select
End Sub
Sub Modellbeschrieb_UT()
    
        If Cells(5, 2) = "Deutsch" Then
        Worksheets("B-NPK-UT").Visible = True
        Sheets("B-NPK-UT").Select
        End If
        If Cells(5, 2) = "Fran|fffd|ais" Then
        Worksheets("B-NPK-UT (F)").Visible = True
        Sheets("B-NPK-UT (F)").Select
        End If
        If Cells(5, 2) = "Italiano" Then
        Worksheets("B-NPK-UT (I)").Visible = True
        Sheets("B-NPK-UT (I)").Select
        End If
    
End Sub
Sub Erl_Bsp()
    
        If Cells(5, 2) = "Deutsch" Then
        Worksheets("Erl-Bsp").Visible = True
        Sheets("Erl-Bsp").Select
        End If
        If Cells(5, 2) = "Fran|fffd|ais" Then
        Worksheets("Erl-Bsp (F)").Visible = True
        Sheets("Erl-Bsp (F)").Select
        End If
        If Cells(5, 2) = "Italiano" Then
        Worksheets("Erl-Bsp (I)").Visible = True
        Sheets("Erl-Bsp (I)").Select
        End If
    
End Sub

Sub Erl_UT()
    
        If Cells(5, 2) = "Deutsch" Then
        Worksheets("Erl-UT").Visible = True
        Sheets("Erl-UT").Select
        End If
        If Cells(5, 2) = "Fran|fffd|ais" Then
        Worksheets("Erl-UT (F)").Visible = True
        Sheets("Erl-UT (F)").Select
        End If
        If Cells(5, 2) = "Italiano" Then
        Worksheets("Erl-UT (I)").Visible = True
        Sheets("Erl-UT (I)").Select
        End If
    
End Sub


Sub Erl_NPK()
    
        If Cells(5, 2) = "Deutsch" Then
        Worksheets("Erl-NPK").Visible = True
        Sheets("Erl-NPK").Select
        End If
        If Cells(5, 2) = "Fran|fffd|ais" Then
        Worksheets("Erl-NPK (F)").Visible = True
        Sheets("Erl-NPK (F)").Select
        End If
        If Cells(5, 2) = "Italiano" Then
        Worksheets("Erl-NPK (I)").Visible = True
        Sheets("Erl-NPK (I)").Select
        End If
        
End Sub

Sub GrafikBSP()
    
        Worksheets("GrafikBsp V1").Visible = True
        Sheets("GrafikBsp V1").Select
            
End Sub

Sub GrafikNPK()
    
        Worksheets("GrafikNPK").Visible = True
        Sheets("GrafikNPK").Select
        
End Sub
Sub GrafikUT()
    
        Worksheets("Grafikut").Visible = True
        Sheets("Grafikut").Select
        
End Sub

Sub Blattschutz_aktivieren()
    ActiveSheet.Protect Password:="tigi"
End Sub

Sub Blattschutz_deaktivieren()
    ActiveSheet.Unprotect Password:="tigi"
End Sub


Sub Aufr|fffd|umen_Bausparten()
       If Cells(4, 8) <> "Loris1" Then
            For Each ws In ActiveWorkbook.Worksheets
            Select Case ws.Name
            Case Is = "Startseite", "PKI-Bsp", "Erl-Bsp", "T-Bsp", "B-Bsp"      ' Ausnahmen
            Case Else
            ws.Visible = xlSheetVeryHidden
            End Select
            Next
        End If
End Sub


Sub Aufr|fffd|umen_NPK()
   If Cells(4, 8) <> "Loris1" Then
        For Each ws In ActiveWorkbook.Worksheets
        Select Case ws.Name
            Case Is = "Startseite", "PKI-NPK", "Erl-NPK", "Erl-NPK (F)", "Erl-NPK (I)", "T-HB-TB", "B-NPK   ' Ausnahmen"
            Case Else
            ws.Visible = xlSheetVeryHidden
            End Select
            Next
    End If

End Sub

Sub Aufr|fffd|umen_NPK_UT()
    If Cells(4, 8) <> "Loris1" Then
        For Each ws In ActiveWorkbook.Worksheets
        Select Case ws.Name
            Case Is = "Startseite", "PKI-UT", "Erl-UT", "Erl-UT (F)", "Erl-UT (I)", "T-UT-22", "T-UT-43"   ' Ausnahmen"
            Case Else
            ws.Visible = xlSheetVeryHidden
            End Select
            Next
    End If

End Sub


Attribute VB_Name = "modZeileEinfuegen"
Option Explicit
Option Private Module

Sub Zeile_einf|fffd|gen()
Attribute Zeile_einf|fffd|gen.VB_ProcData.VB_Invoke_Func = " \n14"

' Zeile_einf|fffd|gen Makro

    Call Blattschutz_deaktivieren
        Range("AH20").Select
            Selection.ListObject.ListRows.Add AlwaysInsert:=False
        Range("W21").Select
    Call Blattschutz_aktivieren

End Sub
Attribute VB_Name = "modZeileLoeschen"
Option Explicit
Option Private Module

Sub Zeile_loeschen()
Attribute Zeile_loeschen.VB_ProcData.VB_Invoke_Func = " \n14"
'
' Zeile_loeschen Makro und Laufzeitfehler abfangen, wenn zuviele Zeilen gel|fffd|scht werden sollten.

Dim intZeile As Integer
    
    Range("AH14").Select
    Selection.End(xlDown).Select
    intZeile = ActiveCell.Row
    If intZeile > 21 Then
        Call Blattschutz_deaktivieren
        Rows(intZeile & ":" & intZeile).Delete
        Call Blattschutz_aktivieren
    End If
        
End Sub





INQUEST-PP=macro
