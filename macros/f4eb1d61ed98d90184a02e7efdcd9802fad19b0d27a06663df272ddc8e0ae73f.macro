Attribute VB_Name = "Arkusz1"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Control = "CommandButton1, 1, 0, MSForms, CommandButton"
Private Sub CommandButton1_Click()
   OcenaFirmy
End Sub
Attribute VB_Name = "Module1"

Sub OcenaFirmy()
' Makro dokonuje oceny wybranej firmy za pomoc|fffd| SE
   Dim current_row As Integer
   current_row = ActiveCell.Row
   
   If current_row < 7 Then
     MsgBox ("Prosz|fffd| ustawi|fffd| aktywn|fffd| kom|fffd|rk|fffd| na wierszu zawieraj|fffd|cym dane firmy")
     End
   End If
   
   Dim v As Object
   Dim kbID As Integer
   Dim i As Integer
   Dim RetValue As Variant
   
     
   'Inicjalizacja obiektu
   Set v = CreateObject("Sphinx.PCShell")
   
   If IsObject(v) Then
     MsgBox ("Brak dost|fffd|pu do serwera OLE. Prosz|fffd| sprawdzi|fffd| czy jest ustawiona |fffd|cie|fffd|ka dost|fffd|pu do katalogu w kt|fffd|rym jest zainstalowany Pakiet Sphinx")
     End
   End If
   ' Inicjalizacja bibliotek
   v.kbInitialize (0)
        
   kbID = 0
   
   'Otwarcie bazy wiedzy
   kbID = v.kbOpen(0, "kredytCOM.bw", 0)
   
   If kbID = -1 Then
     MsgBox ("B|fffd||fffd|d lub brak dost|fffd|pu do bazy wiedzy")
     End
   End If
   Dim List As Variant
     
   'List(0)
   i = v.kbGetAttributeList(kbID, List)
   
   
   Dim Address As String
   Address = "E" + Format(current_row)
     
   ' Dodanie fakt|fffd|w
   'Range("E8").Select
   i = v.kbAddFFact(kbID, "", "zad|fffd|u|fffd|enie", Range(Address).Value)
   Address = "F" + Format(current_row)
   i = v.kbAddFFact(kbID, "", "sprzeda|fffd|", Range(Address).Value)
   Address = "G" + Format(current_row)
   i = v.kbAddFFact(kbID, "", "zysk", Range(Address).Value)
   Address = "H" + Format(current_row)
   i = v.kbAddFact(kbID, "", "rodzaj_zabezpieczenia", Range(Address).Text)
   Address = "C" + Format(current_row)
   If (Range(Address).Text = "T") Then
     i = v.kbAddFact(kbID, "", "status_prawny_klienta", "ma osobowo|fffd||fffd| prawn|fffd|")
   Else
     i = v.kbAddFact(kbID, "", "status_prawny_klienta", "nie ma osobowo|fffd|ci prawnej")
   End If
     
   i = v.kbSetVariable(kbID, "[solutionWin]", "0")
   
   ' uruchomienie poszczeg|fffd|lnych konsulatacji
   i = v.kbSolve(kbID, "profil", "profil_klienta=Profil_klienta")
   i = v.kbSolve(kbID, "gwarancje", "gwarancje_kredytowe=Gwarancje_kredytowe")
   i = v.kbSolve(kbID, "sytfin", "sytuacja_finansowa = Sytuacja_finansowa")
   i = v.kbSolve(kbID, "deckred", "decyzja_kredytowa = DECYZJA_KREDYTOWA")
   i = v.kbCatchFact(kbID, "", "decyzja_kredytowa", 0, RetValue)
   
   Dim O, A, Va As Variant
   i = v.kbSplitOAV(kbID, RetValue, O, A, Va)
   Address = "I" + Format(current_row)
   
   Range(Address).FormulaR1C1 = Va
   
   i = v.kbSetVariable(kbID, "[solutionWin]", "1")
   
   v.kbClose (kbID)

   v.kbDone

End Sub

Attribute VB_Name = "Module2"
Attribute VB_Name = "Module3"
Attribute VB_Name = "Module4"
Attribute VB_Name = "ThisWorkbook"
Attribute VB_Base = "0{00020819-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True


INQUEST-PP=macro
