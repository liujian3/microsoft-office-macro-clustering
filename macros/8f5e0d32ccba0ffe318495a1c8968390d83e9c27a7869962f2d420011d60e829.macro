Attribute VB_Name = "Feuil1"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Private Sub Worksheet_Activate()
Range("F15").Select
ActiveWindow.ScrollRow = 1
ActiveWindow.ScrollColumn = 1
End Sub

Private Sub Worksheet_SelectionChange(ByVal Target As Range)
If Target.Address(0, 0) = "E111" Then quitterappli
If Target.Address(0, 0) = "S111" Then saveappli
End Sub
Attribute VB_Name = "Feuil10"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Private Sub Worksheet_Activate()
Range("F7").Select
vdatepoids = Mid(Range("poidsdu"), 10, 10)

updcurpoids (vdatepoids)
Dim nbpoids As Long

If Not isActivated And isExpired Then
    MsgBox "Vous avez atteint la limite d'utilisation du logiciel (10 jours)."
    MsgBox "Pour continuer |fffd| utiliser le logiciel il est n|fffd|cessaire d'acqu|fffd|rir une cl|fffd| d'activation."
    Sheets("Accueil").Select
    frm_activate.Show
    Exit Sub
End If

If showfrmpoids Then
    frm_poids.Show
End If

End Sub

Attribute VB_Name = "Feuil11"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Private Sub Worksheet_Activate()
updategraphiquescal
End Sub

Private Sub Worksheet_SelectionChange(ByVal Target As Range)

End Sub
Attribute VB_Name = "Feuil12"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Feuil13"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Private Sub Worksheet_Activate()
Dim ldate As Date
Dim nbpoids As Double
Dim d As Date

On Error GoTo erreur
nbpoids = Sheets("bddpoids").Range("nbpoids")

If nbpoids = 0 Then
    MsgBox "Aucun poids n'a |fffd|t|fffd| saisi. Merci de saisir votre poids actuel."

    vdatepoids = Now

    d = Mid$(vdatepoids, 1, 10)

    Sheets("Poids").Range("poidsdu") = "Poids du " & d

    showfrmpoids = True

    Sheets("Poids").Select
    
    Exit Sub
    
End If

ldate = Sheets("bddpoids").Range("lastdatepoids")
clicimcdate (ldate)

erreur:
Range("E17").Select
End Sub
Attribute VB_Name = "Feuil14"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True

Attribute VB_Name = "Feuil15"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Feuil16"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Option Explicit

Private Sub Worksheet_Activate()
loadmenu
End Sub
Attribute VB_Name = "Feuil2"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Option Explicit

Private Sub Worksheet_Activate()
Dim d As String
Dim ldate As Date

If Not isActivated And isExpired Then
    MsgBox "Vous avez atteint la limite d'utilisation du logiciel (10 jours)."
    MsgBox "Pour continuer |fffd| utiliser le logiciel il est n|fffd|cessaire d'acqu|fffd|rir une cl|fffd| d'activation."
    Sheets("Accueil").Select
    frm_activate.Show
    Exit Sub
End If

If Sheets("bddrepas").Range("nbrepas") = 0 Then
    'on initialise la feuille |fffd| la date du jour
    ldate = Now
    d = Mid$(ldate, 1, 10)
    Range("repasdu") = "Repas du " & d
    
End If

vdate = Mid(Range("repasdu"), 10, 10)

disprepas (vdate)

Range("A7").Select

End Sub

Attribute VB_Name = "Feuil3"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Option Explicit

Private Sub Worksheet_Activate()
Range("D4").Select

End Sub

Private Sub Worksheet_SelectionChange(ByVal Target As Range)
If Target.Address(0, 0) = "E6" Then lienmedit 'programme minceur mediterran|fffd|en
If Target.Address(0, 0) = "E16" Then liensynergie 'programme synergie alimentaire
End Sub

Private Sub lienmedit()
'programme minceur mediterran|fffd|en
On Error GoTo erreur

Call trace("regime", "ouvrirmediterranee", True)

Sheets("param").Range("lienmedit").Hyperlinks(1).Follow

Exit Sub

erreur:
MsgBox ("le site n'est pas accessible.")


End Sub

Private Sub liensynergie()
'programme synergie alimentaire
On Error GoTo erreur

Call trace("regime", "ouvrirsynergie", True)

Sheets("param").Range("liensynergie").Hyperlinks(1).Follow

Exit Sub

erreur:
MsgBox ("le site n'est pas accessible.")


End Sub
Attribute VB_Name = "Feuil4"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Feuil5"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Feuil6"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Feuil7"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Feuil8"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Feuil9"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Module1"
'tag=1 associ|fffd| (lien)
'tag=2 ciqual
'tag=3 aliment cr|fffd||fffd|

Option Explicit
Global couleur(7) As Variant
Global ciqual(20000) As String
Global tabunite(20000) As String
Global masseunite(20000) As Double
Global tabenergie(20000) As Double
Global tablipide(20000) As Double
Global tabglucide(20000) As Double
Global tabproteine(20000) As Double
Global favorialiment(20000) As Boolean

Global retouraliment As String
Global retourunite As String
Global retourmasseunite As Double
Global retourfavori As Boolean

Global vdate As Date
Global vmenu As String

Global nblien As Integer
Global nbtot As Integer
Global nbtot1 As Integer
Global coef As Double
Global idciqual As String
Global operepas As String
Global numaliment As Integer
Global qtealiment As Double
Global callchange As Boolean 'appel fen|fffd|tre changement d'aliment
Global refreshaliment As Boolean
Global isciqual As Boolean
Global updajout As Boolean
Global valiment As String
Global fromaliment As Boolean
Global frominit As Boolean

Global vnumero As Integer

Global alimentnom(50) As String
Global alimentqte(50) As Double
Global alimentunite(50) As String
Global nbaliment As Integer

Global nutriment(60) As Double

'N|fffd| colonnes dans bddciqual
Global Const venergie As Integer = 21
Global Const vproteine As Integer = 16
Global Const vlipide As Integer = 28
Global Const vglucide As Integer = 18

Global wishsave As Boolean
Global mdp1 As String
Global nom As String
Global prenom As String
Global code As String

Dim totnutriment(60) As Double
Dim totnutriment2(60) As Double
Dim totmasse As Double


Public Function modrepas(repas As String, num As Integer, ope As String, Optional aliment As String, Optional unite As String, Optional qte As String) As String
Dim i As Integer
Dim nb As Integer
Dim first As Boolean
Dim first2 As Boolean
Dim repasmod As String
Dim repasmod2 As String
Dim vreplace As String

nb = 0
first = True
first2 = True

repasmod = ""

For i = 1 To Len(repas)
    If Mid$(repas, i, 1) = "|" Then
        nb = nb + 1
    End If
    If num = nb Then
        If ope = "upd" And first2 Then
            If num = 0 Then
                vreplace = "toreplace|"
            Else
                vreplace = "|toreplace"
            
            End If
            
            repasmod = repasmod + vreplace
            first2 = False
        End If
        GoTo suite
    End If
    
    If first And num = 0 Then
        first = False
    Else
        repasmod = repasmod + Mid$(repas, i, 1)
        
    End If
suite:
Next i

repasmod = Replace(repasmod, "||", "|")

If Len(repasmod) > 0 Then
    If Mid$(repasmod, Len(repasmod), 1) <> "|" Then
        repasmod = repasmod + "|"
    End If
End If
    
If ope = "upd" Then
    repasmod = Replace(repasmod, "toreplace", aliment & "|fffd|" & unite & "|fffd|" & qte)
End If
    
modrepas = repasmod

End Function

Public Sub clicmajrepas()
refreshaliment = False
vnumero = 1
If chkrepas Then frm_repas.Show

End Sub

Public Sub clicmajmenu()

frm_addmenu.Show

End Sub

Public Sub clicmajmenufrommenu()
frommenu = True

frm_addmenu.Show

End Sub


Public Sub clicsaisitrepas()
vdate = Now
Sheets("Repas").Select

End Sub

Public Sub showmenufromcal()
frompoids = False
fromcal = True
fromrepas = False
fromimc = False
frommenu = False
fromaccueil = False
frm_menu.Show

End Sub

Public Sub showmenufromimc()
frompoids = False
fromcal = False
fromrepas = False
fromimc = True
frommenu = False
fromaccueil = False
frm_menu.Show

End Sub

Public Sub showmenufrompoids()
frompoids = True
fromcal = False
fromrepas = False
fromimc = False
frommenu = False
fromaccueil = False
frm_menu.Show

End Sub

Public Sub showmenufromrepas()
frompoids = False
fromcal = False
fromrepas = True
fromimc = False
frommenu = False
fromaccueil = False
frm_menu.Show

End Sub

Public Sub showmenufrommenu()
frompoids = False
fromcal = False
fromrepas = False
fromimc = False
frommenu = True
fromaccueil = False
frm_menu.Show
End Sub

Public Sub clicdaynow()
Dim d As String

vdate = Now
d = Mid$(vdate, 1, 10)

Range("repasdu") = "Repas du " & d
disprepas (d)

End Sub

Public Sub clicdayup()
Dim ldate As Date
Dim d As Date

ldate = Mid(Range("repasdu"), 10, 10)
ldate = DateAdd("d", 1, ldate)

vdate = ldate

d = Mid$(vdate, 1, 10)

Range("repasdu") = "Repas du " & d
disprepas (d)

End Sub

Public Sub clicdaydown()
Dim ldate As Date
Dim d As Date

ldate = Mid(Range("repasdu"), 10, 10)
ldate = DateAdd("d", -1, ldate)

vdate = ldate

d = Mid$(vdate, 1, 10)

Range("repasdu") = "Repas du " & d
disprepas (d)

End Sub

Sub disppct(val As Boolean)
Exit Sub

ActiveSheet.ChartObjects("graphpct").Visible = True

ActiveSheet.Shapes.Range(Array("grppct")).Select
ActiveSheet.Shapes.Range(Array("TextBox 7")).Select

If val Then

    With Selection.ShapeRange.TextFrame2.TextRange.Font.Fill
        .Visible = msoTrue
        .ForeColor.RGB = RGB(0, 0, 0)
        .Transparency = 0
        .Solid
    
    End With
    
    ActiveSheet.Shapes.Range(Array("grppct")).Select
    ActiveSheet.Shapes.Range(Array("rectpct")).Select
    Selection.ShapeRange.Line.Visible = msoTrue
    
    With Selection.ShapeRange.Line
        .Visible = msoTrue
        .ForeColor.ObjectThemeColor = msoThemeColorAccent2
        .ForeColor.TintAndShade = 0
        .ForeColor.Brightness = 0.6000000238
        .Transparency = 0
    End With
    
Else
    Selection.ShapeRange.TextFrame2.TextRange.Font.Fill.Visible = msoFalse

    ActiveSheet.Shapes.Range(Array("grppct")).Select
    ActiveSheet.Shapes.Range(Array("rectpct")).Select
    Selection.ShapeRange.Line.Visible = msoFalse

End If
Range("A6").Select

End Sub

Sub clicchgdate()
frm_daterepas.Show

End Sub

Public Sub doformat()
Sheets("repas").Range("E6:E300").NumberFormat = "# ##0.00"
Sheets("repas").Range("F6:F300").NumberFormat = "# ##0"" g"""
Sheets("repas").Range("G6:G300").NumberFormat = "# ##0"" kcal"""
Sheets("repas").Range("H6:J300").NumberFormat = "# ##0.0"" g"""

'met tout |fffd| blanc
With Sheets("repas")
    .Range("B7:J300").Font.Bold = False
    .Range("B7:J300").Interior.ColorIndex = 2
    .Range("B7:J300").Borders(xlEdgeLeft).LineStyle = xlNone
    .Range("B7:J300").Borders(xlEdgeTop).LineStyle = xlNone
    .Range("B7:J300").Borders(xlEdgeBottom).LineStyle = xlNone
    .Range("B7:J300").Borders(xlEdgeRight).LineStyle = xlNone
    .Range("B7:J300").Borders(xlInsideVertical).LineStyle = xlNone
    .Range("B7:J300").Borders(xlInsideHorizontal).LineStyle = xlNone
End With

End Sub

Public Sub raznutriment()
Dim i As Integer

For i = 1 To 60
    nutriment(i) = 0
    totnutriment(i) = 0
    totnutriment2(i) = 0
Next i

End Sub

Public Sub raztabrepas()
Dim i As Integer

Sheets("repas").Range("B7:J100").ClearContents
Sheets("repas").Range("C6:J6").ClearContents

For i = 1 To 7
    Call refperiode("L", i, 0)
    Call refperiode("C", i, 0)

Next i

'trop long, clignote et r|fffd|cursif
'Dim i As Integer

'For i = 7 To 40
'    Worksheets("repas").Rows(i).EntireRow.Delete
'Next i
End Sub

Public Function disprepas(ldate As Date) As Boolean
Dim ligne As Integer
Dim i As Integer
Dim j As Integer
Dim k As Integer
Dim trouve As Boolean
Dim periode(7) As String
Dim repas(7) As String
Dim decal As Integer
Dim onerepas As Boolean

disppct (False)

periode(1) = "Petit-d|fffd|je|fffd|ner"
periode(2) = "Matin"
periode(3) = "D|fffd|jeuner"
periode(4) = "Apr|fffd|s-midi"
periode(5) = "D|fffd|ner"
periode(6) = "Soir|fffd|e"
periode(7) = "Nuit"

couleur(1) = RGB(224, 255, 32)
couleur(2) = RGB(224, 255, 128)
couleur(3) = RGB(160, 255, 32)
couleur(4) = RGB(128, 224, 32)
couleur(5) = RGB(96, 255, 96)
couleur(6) = RGB(96, 224, 255)
couleur(7) = RGB(96, 192, 255)

Application.ScreenUpdating = False

'efface le tableau
raztabrepas
raznutriment
doformat

'recherche la ligne du repas
trouve = False

For i = 2 To 10000
    If ldate = Sheets("bddrepas").Cells(i, 1) Then
        trouve = True
        GoTo trouve
    End If
Next i

If Not trouve Then
    'updlabrepas ("Saisir" & Chr(13) & "le repas")
    Range("libnoterepas") = ""
    Range("curnoterepas") = ""
    Exit Function
End If

trouve:
ligne = i

nbaliment = 0
totmasse = 0
onerepas = False

'parcours les p|fffd|riodes de la journ|fffd|e
For i = 1 To 7
    
    'remet |fffd| blanc les aliments
    For j = 1 To 50
        alimentnom(j) = ""
        alimentunite(j) = ""
        alimentqte(j) = 0
    Next j
    
    For j = 1 To 60
        totnutriment(j) = 0
    Next j
    
    'r|fffd|cup|fffd|re le repas de la p|fffd|riode
    repas(i) = Sheets("bddrepas").Cells(ligne, 1 + i)
    
    If repas(i) = "" Then
        GoTo suite
    Else
        onerepas = True
    End If
    
    'r|fffd|cup|fffd|re les aliments du repas
    majaliment (repas(i))
    
    Call dispperiode(7 + decal, 2, periode(i), couleur(i))
    
    Call refperiode("L", i, 7 + decal)
    Call refperiode("C", i, 2)
    
    totnutriment2(17) = totnutriment2(17) + totnutriment(17)
    totnutriment2(24) = totnutriment2(24) + totnutriment(24)
    totnutriment2(14) = totnutriment2(14) + totnutriment(14)
    totnutriment2(12) = totnutriment2(12) + totnutriment(12)
    
    decal = decal + nbaliment + 2
    
suite:
Next i

If onerepas Then 'au moins un repas
    With Sheets("repas")
         .Cells(6, 6) = totmasse
         .Cells(6, 7) = totnutriment2(17)
         .Cells(6, 8) = totnutriment2(24)
         .Cells(6, 9) = totnutriment2(14)
         .Cells(6, 10) = totnutriment2(12)
    End With
    'updlabrepas ("Mettre |fffd| jour" & Chr(13) & "le repas")
    disppct (True)
    
    If Sheets("bddrepas").Cells(ligne, 12) = "" Then
        Range("libnoterepas") = ""
    Else
        Range("libnoterepas") = "Pr|fffd|sence de notes pour cette journ|fffd|e"
    End If

Else
    'updlabrepas ("Saisir" & Chr(13) & "le repas")
    
End If




Sheets("bddrepas").Cells(ligne, 9) = Round(totnutriment2(17), 0)
Range("A7").Select

ActiveWindow.ScrollRow = 7
ActiveWindow.ScrollColumn = 1

disprepas = onerepas
calcrepas
Application.ScreenUpdating = True

End Function

Private Sub refperiode(ltype As String, num As Integer, lval As Integer)

If ltype = "L" Then
    Sheets("tmprepas").Cells(num, 1) = lval
End If

If ltype = "C" Then
    Sheets("tmprepas").Cells(num, 2) = lval
End If

End Sub

Public Function getrefperiode(ltype As String, num As Integer) As Integer
Dim ret As Integer

If ltype = "L" Then
    ret = Sheets("tmprepas").Cells(num, 1)
End If

If ltype = "C" Then
    ret = Sheets("tmprepas").Cells(num, 2)
End If

getrefperiode = ret
End Function


Private Sub dispperiode(ligne As Integer, colonne As Integer, periode As String, couleur As Variant)
Dim i As Integer
Dim j As Integer
Dim qte As Double
Dim totqte As Double

'libell|fffd| p|fffd|riode
With Sheets("repas")
    .Cells(ligne, colonne) = periode
End With

totqte = 0

For i = 1 To nbaliment
    
    If Not getlien(alimentnom(i), alimentunite(i)) Then
        GoTo suite
    End If
    
    getdonnee (idciqual)
    
    qte = coef * alimentqte(i)
    
    With Sheets("repas")
        .Cells(ligne + i - 1, colonne + 1) = alimentnom(i)
        .Cells(ligne + i - 1, colonne + 1).Borders(xlEdgeRight).LineStyle = xlDash
        .Cells(ligne + i - 1, colonne + 1).Borders(xlEdgeLeft).LineStyle = xlContinuous
       
        .Cells(ligne + i - 1, colonne + 2) = alimentunite(i)
        .Cells(ligne + i - 1, colonne + 2).Borders(xlEdgeRight).LineStyle = xlDash
       
        .Cells(ligne + i - 1, colonne + 3) = alimentqte(i)
        .Cells(ligne + i - 1, colonne + 3).Borders(xlEdgeRight).LineStyle = xlDash
       
        .Cells(ligne + i - 1, colonne + 4) = qte * 100
        .Cells(ligne + i - 1, colonne + 4).Borders(xlEdgeRight).LineStyle = xlDash
       
        .Cells(ligne + i - 1, colonne + 5) = qte * nutriment(17)
        .Cells(ligne + i - 1, colonne + 5).Borders(xlEdgeRight).LineStyle = xlDash
       
        .Cells(ligne + i - 1, colonne + 6) = qte * nutriment(24)
        .Cells(ligne + i - 1, colonne + 6).Borders(xlEdgeRight).LineStyle = xlDash
       
        .Cells(ligne + i - 1, colonne + 7) = qte * nutriment(14)
        .Cells(ligne + i - 1, colonne + 7).Borders(xlEdgeRight).LineStyle = xlDash
       
        .Cells(ligne + i - 1, colonne + 8) = qte * nutriment(12)
    End With
        
    totqte = totqte + qte * 100
    totmasse = totmasse + qte * 100
    
    totnutriment(17) = totnutriment(17) + qte * nutriment(17)
    totnutriment(24) = totnutriment(24) + qte * nutriment(24)
    totnutriment(14) = totnutriment(14) + qte * nutriment(14)
    totnutriment(12) = totnutriment(12) + qte * nutriment(12)

suite:
Next i

For j = 0 To 1

    With Sheets("repas")
        .Cells(ligne + nbaliment + j, colonne + 1).Borders(xlEdgeRight).LineStyle = xlDash
        .Cells(ligne + nbaliment + j, colonne + 1).Borders(xlEdgeLeft).LineStyle = xlContinuous
        .Cells(ligne + nbaliment + j, colonne + 2).Borders(xlEdgeRight).LineStyle = xlDash
        .Cells(ligne + nbaliment + j, colonne + 3).Borders(xlEdgeRight).LineStyle = xlDash
        .Cells(ligne + nbaliment + j, colonne + 4).Borders(xlEdgeRight).LineStyle = xlDash
        .Cells(ligne + nbaliment + j, colonne + 5).Borders(xlEdgeRight).LineStyle = xlDash
        .Cells(ligne + nbaliment + j, colonne + 6).Borders(xlEdgeRight).LineStyle = xlDash
        .Cells(ligne + nbaliment + j, colonne + 7).Borders(xlEdgeRight).LineStyle = xlDash
        
    End With

Next j

With Sheets("repas")
        .Cells(ligne + nbaliment + 1, colonne + 1) = "Total"
        .Cells(ligne + nbaliment + 1, colonne + 4) = totqte
        .Cells(ligne + nbaliment + 1, colonne + 5) = totnutriment(17)
        .Cells(ligne + nbaliment + 1, colonne + 6) = totnutriment(24)
        .Cells(ligne + nbaliment + 1, colonne + 7) = totnutriment(14)
        .Cells(ligne + nbaliment + 1, colonne + 8) = totnutriment(12)
        .Range(.Cells(ligne + nbaliment + 1, colonne + 1), .Cells(ligne + nbaliment + 1, colonne + 8)).Font.Bold = True
End With

'la couleur
With Sheets("repas")
    .Range(.Cells(ligne, colonne), .Cells(ligne + nbaliment + 1, colonne + 8)).Interior.Color = couleur
    .Range(.Cells(ligne, colonne), .Cells(ligne + nbaliment + 1, colonne + 8)).Borders(xlEdgeLeft).LineStyle = xlContinuous
    .Range(.Cells(ligne, colonne), .Cells(ligne + nbaliment + 1, colonne + 8)).Borders(xlEdgeTop).LineStyle = xlContinuous
    .Range(.Cells(ligne, colonne), .Cells(ligne + nbaliment + 1, colonne + 8)).Borders(xlEdgeBottom).LineStyle = xlContinuous
    .Range(.Cells(ligne, colonne), .Cells(ligne + nbaliment + 1, colonne + 8)).Borders(xlEdgeRight).LineStyle = xlContinuous

End With
   
End Sub

Public Sub getdonnee(idciq As String)
Dim lig As Integer
Dim i As Integer

If val(idciq) > val(Range("nbciqual")) Then
'c'est un aliment ajout|fffd|
    For i = val(Range("nbciqual")) + 2 To 10000
        If Sheets("bddciqual").Cells(i, 4) = "" Then Exit Sub
        If Sheets("bddciqual").Cells(i, 3) = idciq Then
            lig = i
            GoTo suite
        End If
        
    Next i
Else
    lig = val(idciq) + 1
End If

suite:
With Sheets("bddciqual")
    
       '|fffd|nergie kcal
        nutriment(17) = val(Replace(.Cells(lig, venergie), ",", "."))
    
        'lipides
        nutriment(24) = val(Replace(.Cells(lig, vlipide), ",", "."))
    
        'glucides
        nutriment(14) = val(Replace(.Cells(lig, vglucide), ",", "."))
    
        'prot|fffd|ines
        nutriment(12) = val(Replace(.Cells(lig, vproteine), ",", "."))
End With

End Sub

Public Function getlien(aliment As String, unite As String) As Boolean
Dim i As Integer
Dim trouve As Boolean

trouve = False

For i = 2 To 10000
    If Sheets("bddlien").Cells(i, 1) = "" Then GoTo nottrouve
    If aliment = Sheets("bddlien").Cells(i, 1) And unite = Sheets("bddlien").Cells(i, 2) Then
        trouve = True
        GoTo trouve
    End If
Next i

nottrouve:
If Not trouve Then
 getlien = False
 Exit Function
End If

trouve:

With Sheets("bddlien")
    coef = .Cells(i, 3)
    idciqual = .Cells(i, 4)
End With

getlien = True

End Function

Public Sub majaliment(repas As String)
Dim i As Integer
Dim j As Integer
Dim nb As Integer
Dim deb As Integer
Dim deb2 As Integer
Dim fin As Integer
Dim aliment As String
Dim n As Integer

fin = 0
nb = 0
n = 0

For i = 1 To Len(repas)
    If Mid$(repas, i, 1) = "|" Then
        nb = nb + 1
        deb = fin + 1
        fin = i
        aliment = Mid$(repas, deb, fin - deb)
        n = 0
        For j = 1 To Len(aliment)
            If Mid$(aliment, j, 1) = "|fffd|" Or j = Len(aliment) Then
                n = n + 1
                
                If n = 1 Then
                    alimentnom(nb) = Mid$(aliment, 1, j - 1)
                    deb2 = j + 1
                End If
                
                If n = 2 Then
                    alimentunite(nb) = Mid$(aliment, deb2, j - deb2)
                    deb2 = j + 1
                End If
                
                If n = 3 Then
                    alimentqte(nb) = val(Mid$(aliment, deb2, Len(aliment) - deb2 + 1))
                End If
            End If
        Next j
        
    End If
Next i

nbaliment = nb

End Sub

Sub quitterappli()

If WorkbookCount() = 1 Then
    Application.DisplayAlerts = False
    Application.EnableEvents = False
       
    Application.Quit
    

Else
    'ThisWorkbook.Close (False)
    Application.OnTime Now, "Close_Xls"
End If

End Sub

Sub Close_Xls()
   ThisWorkbook.Close savechanges:=False
End Sub

Sub saveappli()

Dim newfic As String
Dim ficold As String

On Error GoTo erreur

Application.EnableEvents = False
Application.DisplayAlerts = False

newfic = Range("dirsave") & "\" & ActiveWorkbook.Name

ActiveWorkbook.Save

Application.DisplayAlerts = False
Application.EnableEvents = True

If Range("tosaveother") = True Then
    ficold = Mid(newfic, 1, Len(newfic) - 5) & "_old.xlsm"
    If FileExists(newfic) Then ActiveWorkbook.SaveCopyAs ficold
    DeleteFile (newfic)
    ActiveWorkbook.SaveCopyAs newfic
    DeleteFile (ficold)
End If

quitterappli
Exit Sub
erreur:
MsgBox "Une erreur a eu lieu lors de l'enregistrement du fichier dans le r|fffd|pertoire: " & Range("dirsave")
quitterappli

End Sub

Public Function WorkbookCount(Optional VisibleOnly As Boolean) As Long
    '''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
    ' WorkbookCount
    ' This returns the count of all open workbooks. If VisibleOnly
    ' is True, only visible workbooks are counted. If VisibleOnly is
    ' False, all workbooks are counted.
    '''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
    Dim WB As Workbook
    Dim n As Long
    For Each WB In Application.Workbooks
        If VisibleOnly = False Or (VisibleOnly = True And WB.Windows(1).Visible = True) Then
            n = n + 1
        End If
    Next WB
    WorkbookCount = n
End Function

Sub init()
Dim d As String

showfrmpoids = False

Sheets("Accueil").Select
Range("A1").Select

If Range("first") = "" Then
    MsgBox "Bienvenue et merci de votre int|fffd|r|fffd|t pour ce logiciel." & Chr(13) & Chr(13) & "N'h|fffd|sitez-pas |fffd| me contacter pour toute question ou remarque.", vbInformation, "Bienvenue"
    
    'MsgBox "Ce fichier Excel est personnel. Vous n'avez droit de le diffuser qu'au sein de votre famille.", vbInformation, "Droits"
    
    'MsgBox "Si ce logiciel vous int|fffd|resse, vous pouvez l'acqu|fffd|rir pour seulement 5 euros pendant un temps limit|fffd|." & Chr(13) & Chr(13) & "Cette offre n'est valable que pour quelques jours." & Chr(13) & Chr(13) & "Profitez-en. Le support est gratuit |fffd| vie.", vbInformation, "Promotion"
    Range("first") = "X"
    Range("installationdate") = Format(Now, "MM/DD/YYYY")
    
    ThisWorkbook.Save
    
    MsgBox "Une fen|fffd|tre va s'afficher o|fffd| vous devez saisir quelques informations. C'est la fen|fffd|tre des param|fffd|tres."
    
    fromrepas = False
    frompoids = False
    fromcal = False
    fromimc = False
    fromaccueil = False
    frm_paramperso.Show

    MsgBox "Maintenant, merci de saisir votre poids actuel."
    
    vdatepoids = Now

    d = Mid$(vdatepoids, 1, 10)

    Range("poidsdu") = "Poids du " & d

    showfrmpoids = True
    frominit = True
    
    Sheets("Poids").Select
    
End If
End Sub

Sub showabout()
frm_about.Show

End Sub

Private Sub updlabrepas(txt As String)
Exit Sub
ActiveSheet.Shapes.Range(Array("btnmajrepas")).Select
Selection.ShapeRange(1).TextFrame2.TextRange.Characters.Text = txt
Range("A7").Select

End Sub

Public Function loadtable() As Boolean
Dim nb As Integer
Dim i As Integer
Dim ret As Boolean
Dim tabaliment() As Variant

nbtot = Sheets("param").Range("nbtotaliment")
tabaliment = Sheets("bddciqual").Range("A2:AB" & nbtot + 1).Value

ret = False

For i = 1 To nbtot
    nb = nb + 1
    ciqual(i) = tabaliment(i, 4)
    tabunite(i) = "100 g"
    masseunite(i) = 100
    
    tabenergie(i) = val(Replace(tabaliment(i, venergie), ",", "."))
    tablipide(i) = val(Replace(tabaliment(i, vlipide), ",", "."))
    tabglucide(i) = val(Replace(tabaliment(i, vglucide), ",", "."))
    tabproteine(i) = val(Replace(tabaliment(i, vproteine), ",", "."))

Next i

suite1:

'nombre d'enregistrements ciqual
nbtot1 = nb

nblien = Sheets("bddlien").Range("nbliens")

For i = 1 To nblien
    If Sheets("bddlien").Cells(i + 1, 1) = "" Then GoTo suite2
    nbtot = nbtot + 1
    ciqual(nb + i) = Sheets("bddlien").Cells(i + 1, 1)
    tabunite(nb + i) = Sheets("bddlien").Cells(i + 1, 2)
    masseunite(nb + i) = Sheets("bddlien").Cells(i + 1, 3) * 100
    favorialiment(nb + i) = Sheets("bddlien").Cells(i + 1, 5)
Next i

suite2:
ret = True


loadtable = ret

End Function

Public Sub renamerepas(aliment As String, unite As String, nouv As String)
Dim i As Integer
Dim j As Integer
Dim repas As String

'on r|fffd|cup|fffd|re le repas
For i = 2 To 32000
    If Sheets("bddrepas").Cells(i, 1) = "" Then
            GoTo suite
    End If
    
    For j = 1 To 7
        repas = Sheets("bddrepas").Cells(i, 1 + j)
        If InStr(repas, aliment & "|fffd|" & unite) Then
            repas = Replace(repas, aliment & "|fffd|" & unite, nouv & "|fffd|" & unite)
            Sheets("bddrepas").Cells(i, 1 + j) = repas
        
        End If
        
    Next j
Next i

suite:

End Sub

Public Sub deleterepas(aliment As String, unite As String)
Dim i As Integer
Dim j As Integer
Dim repas As String
Dim k As Integer
Dim m As Integer
Dim deb As Integer
Dim repasmod As String
Dim traite As Boolean

'on r|fffd|cup|fffd|re le repas
For i = 2 To 32000
    If Sheets("bddrepas").Cells(i, 1) = "" Then
            GoTo suite
    End If
    
    For j = 1 To 7
        repas = Sheets("bddrepas").Cells(i, 1 + j)
        repasmod = ""
        traite = False
        
        If InStr(repas, aliment & "|fffd|" & unite) Then
            
            repas = Replace(repas, aliment & "|fffd|" & unite, "todelete") 'au cas o|fffd| il y a plusieurs occurences dans un repas
            
            For k = 1 To Len(repas)
                
                If Mid$(repas, k, 8) = "todelete" Or traite Then
                    traite = True
                    If Mid$(repas, k, 1) <> "|" Then
                        GoTo suiteA
                    Else
                        traite = False
                    End If
                Else
                    repasmod = repasmod + Mid$(repas, k, 1)
                End If
suiteA:
            Next k
            
            Sheets("bddrepas").Cells(i, 1 + j) = repasmod
        End If
        
        
    Next j
Next i

suite:

End Sub

Public Sub deletemenu(aliment As String, unite As String)
Dim i As Integer
Dim j As Integer
Dim repas As String
Dim k As Integer
Dim m As Integer
Dim deb As Integer
Dim repasmod As String
Dim traite As Boolean

'on r|fffd|cup|fffd|re le menu
For i = 2 To 32000
    If Sheets("bddmenu").Cells(i, 1) = "" Then
            GoTo suite
    End If
    
    repas = Sheets("bddmenu").Cells(i, 2)
    repasmod = ""
    traite = False
        
        If InStr(repas, aliment & "|fffd|" & unite) Then
            
            repas = Replace(repas, aliment & "|fffd|" & unite, "todelete") 'au cas o|fffd| il y a plusieurs occurences dans un repas
            
            For k = 1 To Len(repas)
                
                If Mid$(repas, k, 8) = "todelete" Or traite Then
                    traite = True
                    If Mid$(repas, k, 1) <> "|" Then
                        GoTo suiteA
                    Else
                        traite = False
                    End If
                Else
                    repasmod = repasmod + Mid$(repas, k, 1)
                End If
suiteA:
            Next k
            
            Sheets("bddmenu").Cells(i, 2) = repasmod
        End If
        
        
Next i

suite:

End Sub

Public Function IsUserFormLoaded(ByVal UFName As String) As Boolean
    Dim UForm As Object
     
    IsUserFormLoaded = False
    For Each UForm In VBA.UserForms
        If UForm.Name = UFName Then
            IsUserFormLoaded = True
            Exit For
        End If
    Next
End Function 'IsUserFormLoaded

Public Sub clicrepasnext()
Dim ldate As Date
Dim d As Date
Dim i As Integer
Dim ajust As Integer
Dim ligne As Integer

ldate = Mid(Range("repasdu"), 10, 10)

For i = 2 To 10000
    
    If Sheets("bddrepas").Cells(i, 1) = ldate Then
        ajust = 1
        GoTo found
    End If
Next i

notfound:

For i = 2 To 10000
    
    If Sheets("bddrepas").Cells(i, 1) > ldate Then
        ajust = 0
        GoTo found
    End If

    If (Sheets("bddrepas").Cells(i, 1) < ldate Or Sheets("bddrepas").Cells(i - 1, 1) = "date") And (ldate < Sheets("bddrepas").Cells(i + 1, 1) Or Sheets("bddrepas").Cells(i + 1, 1) = "") Then
        ajust = 1
        GoTo found
    End If
Next i

found:

ligne = i + ajust

d = Sheets("bddrepas").Cells(ligne, 1)

If Sheets("bddrepas").Cells(ligne, 1) = "" Then
    MsgBox "Vous avez atteint la derni|fffd|re date saisie."
    Exit Sub
End If

vdate = d

Range("repasdu") = "Repas du " & d

disprepas (d)

End Sub

Public Sub clicrepasprev()
Dim ldate As Date
Dim d As Date
Dim i As Integer
Dim ajust As Integer
Dim ligne As Integer

ldate = Mid(Range("repasdu"), 10, 10)

If ldate < Sheets("bddrepas").Cells(2, 1) Or Sheets("bddrepas").Cells(2, 1) = "" Then
    MsgBox "Vous avez atteint la premi|fffd|re date saisie."
    Exit Sub
End If

For i = 2 To 10000
    
    If Sheets("bddrepas").Cells(i, 1) = ldate Then
        ajust = -1
        GoTo found
    End If
Next i

notfound:
For i = 2 To 10000
    
    If (Sheets("bddrepas").Cells(i, 1) < ldate Or Sheets("bddrepas").Cells(i - 1, 1) = "date") And (ldate < Sheets("bddrepas").Cells(i + 1, 1) Or Sheets("bddrepas").Cells(i + 1, 1) = "") Then
        ajust = 0
        GoTo found
    End If
Next i

found:

ligne = i + ajust

If Sheets("bddrepas").Cells(ligne, 1) = "date" Then
    MsgBox "Vous avez atteint la premi|fffd|re date saisie."
    Exit Sub
End If

d = Sheets("bddrepas").Cells(ligne, 1)

vdate = d

Range("repasdu") = "Repas du " & d

disprepas (d)

End Sub

Public Sub sortrepas()
Dim lastlig As Integer
Dim nbcell As Integer

Dim srange As String

nbcell = Range("nbrepas")
lastlig = nbcell + 1
srange = "A2:L" & lastlig
Sheets("bddrepas").Visible = False

Sheets("bddrepas").Activate
Sheets("bddrepas").Range(srange).Select

Selection.Sort Key1:=Range("A2"), Order1:=xlAscending, Header:=xlGuess, _
OrderCustom:=1, MatchCase:=False, Orientation:=xlTopToBottom
'Sheets("bddrepas").Visible = True

End Sub

Public Sub clicparam()
fromrepas = False
frompoids = False
fromcal = False
fromimc = False
fromaccueil = False
frm_param.Show
End Sub

Public Sub clicaliment()
fromaccueil = True
frm_aliment.Show
End Sub

Public Sub controlpoids()
frm_control.Show
End Sub

Public Sub controlcal()
frm_controlcalorie.Show

End Sub
Public Sub clicbesoincal()
fromrepas = False
frompoids = False
fromcal = False
fromimc = False
fromaccueil = False
frm_besoincal.Show

End Sub

Public Sub clicmenu()
Sheets("Menus").Select
End Sub

Public Sub clicimc()
Sheets("IMC").Select
End Sub

Public Sub clictableaucalorie()
Sheets("Calories").Select
End Sub

Public Sub Tri2(a, gauc, droi, colTri) ' Quick sort
Dim ref As Variant
Dim g As Variant
Dim d As Variant
Dim temp As Variant
Dim c As Variant

  ref = a((gauc + droi) \ 2, colTri)
  g = gauc: d = droi
  Do
    Do While a(g, colTri) < ref: g = g + 1: Loop
    Do While ref < a(d, colTri): d = d - 1: Loop
    If g <= d Then
       For c = LBound(a, 2) To UBound(a, 2)
          temp = a(g, c): a(g, c) = a(d, c): a(d, c) = temp
       Next
       g = g + 1: d = d - 1
     End If
   Loop While g <= d
   If g < droi Then Call Tri2(a, g, droi, colTri)
   If gauc < d Then Call Tri2(a, gauc, d, colTri)
End Sub

Public Sub Tri2val(a, gauc, droi, colTri) ' Quick sort
Dim ref As Variant
Dim g As Variant
Dim d As Variant
Dim temp As Variant
Dim c As Variant

  ref = CDbl(a((gauc + droi) \ 2, colTri))
  g = gauc: d = droi
  Do
    Do While CDbl(a(g, colTri)) < CDbl(ref): g = g + 1: Loop
    Do While CDbl(ref) < CDbl(a(d, colTri)): d = d - 1: Loop
    If CDbl(g) <= CDbl(d) Then
       For c = LBound(a, 2) To UBound(a, 2)
          temp = a(g, c): a(g, c) = a(d, c): a(d, c) = temp
       Next
       g = g + 1: d = d - 1
     End If
   Loop While CDbl(g) <= CDbl(d)
   If CDbl(g) < CDbl(droi) Then Call Tri2val(a, g, droi, colTri)
   If CDbl(gauc) < CDbl(d) Then Call Tri2val(a, gauc, d, colTri)
End Sub

Public Sub Tri2valinv(a, gauc, droi, colTri) ' Quick sort
Dim ref As Variant
Dim g As Variant
Dim d As Variant
Dim temp As Variant
Dim c As Variant

  ref = CDbl(a((gauc + droi) \ 2, colTri))
  g = gauc: d = droi
  Do
    Do While CDbl(a(g, colTri)) > CDbl(ref): g = g + 1: Loop
    Do While CDbl(ref) > CDbl(a(d, colTri)): d = d - 1: Loop
    If CDbl(g) >= CDbl(d) Then
       For c = LBound(a, 2) To UBound(a, 2)
          temp = a(g, c): a(g, c) = a(d, c): a(d, c) = temp
       Next
       g = g + 1: d = d - 1
     End If
   Loop While CDbl(g) <= CDbl(d)
   If CDbl(g) > CDbl(droi) Then Call Tri2valinv(a, g, droi, colTri)
   If CDbl(gauc) > CDbl(d) Then Call Tri2valinv(a, gauc, d, colTri)
End Sub


Public Sub Tri(a, gauc, droi) ' Quick sort
Dim ref As Variant
Dim g As Variant
Dim d As Variant
Dim temp As Variant

  ref = a((gauc + droi) \ 2)
  g = gauc: d = droi
  Do
     Do While a(g) < ref: g = g + 1: Loop
     Do While ref < a(d): d = d - 1: Loop
     If g <= d Then
        temp = a(g): a(g) = a(d): a(d) = temp
        g = g + 1: d = d - 1
     End If
   Loop While g <= d
   If g < droi Then Call Tri(a, g, droi)
   If gauc < d Then Call Tri(a, gauc, d)
End Sub

Public Function MD5(ByVal sIn As String, Optional bB64 As Boolean = 0) As String
    'Set a reference to mscorlib 4.0 64-bit
    
    'Test with empty string input:
    'Hex:   d41d8cd98f00...etc
    'Base-64: 1B2M2Y8Asg...etc
        
    Dim oT As Object, oMD5 As Object
    Dim TextToHash() As Byte
    Dim bytes() As Byte
        
    Set oT = CreateObject("System.Text.UTF8Encoding")
    Set oMD5 = CreateObject("System.Security.Cryptography.MD5CryptoServiceProvider")
 
    TextToHash = oT.GetBytes_4(sIn)
    bytes = oMD5.ComputeHash_2((TextToHash))
 
    If bB64 = True Then
       MD5 = ConvToBase64String(bytes)
    Else
       MD5 = ConvToHexString(bytes)
    End If
        
    Set oT = Nothing
    Set oMD5 = Nothing

End Function

Private Function ConvToBase64String(vIn As Variant) As Variant

    Dim oD As Object
      
    Set oD = CreateObject("MSXML2.DOMDocument")
      With oD
        .LoadXML "<root />"
        .DocumentElement.DataType = "bin.base64"
        .DocumentElement.nodeTypedValue = vIn
      End With
    ConvToBase64String = Replace(oD.DocumentElement.Text, vbLf, "")
    
    Set oD = Nothing

End Function

Private Function ConvToHexString(vIn As Variant) As Variant

    Dim oD As Object
      
    Set oD = CreateObject("MSXML2.DOMDocument")
      
      With oD
        .LoadXML "<root />"
        .DocumentElement.DataType = "bin.Hex"
        .DocumentElement.nodeTypedValue = vIn
      End With
    ConvToHexString = Replace(oD.DocumentElement.Text, vbLf, "")
    
    Set oD = Nothing

End Function

Function iscodeok(nom As String, prenom As String, code As String) As Boolean
Dim lnom As String
Dim lprenom As String
Dim cle As String
Dim liste As String
Dim v As String
Dim i As Integer


lnom = UCase(nom)
lprenom = LCase(prenom)
cle = "%kij-se&"

liste = MD5(lnom & cle & lprenom)

For i = 25 To 1 Step -1
    v = v & Mid(liste, i, 1)
    If ((i - 1) Mod 5 = 0 And i <> 1) Then
        v = v & "-"
    End If
Next i

If UCase(code) = UCase(v) Then
    iscodeok = True
Else
    iscodeok = False
End If
End Function

Function FileExists(ByVal FileToTest As String) As Boolean
   FileExists = (Dir(FileToTest) <> "")
End Function

Sub DeleteFile(ByVal FileToDelete As String)
   If FileExists(FileToDelete) Then 'See above
      ' First remove readonly attribute, if set
      SetAttr FileToDelete, vbNormal
      ' Then delete the file
      Kill FileToDelete
   End If
End Sub

Public Function DossierExiste(MonDossier As String)
'par Excel-Malin.com ( http://excel-malin.com )
On Error GoTo erreur
   If Len(Dir(MonDossier, vbDirectory)) > 0 Then
      DossierExiste = True
   Else
      DossierExiste = False
   End If
Exit Function
erreur:
DossierExiste = False
End Function

Public Sub chkdoublesave()
Dim dossier As String

dossier = Range("dirsave")

If Range("tosaveother") = True Then
    If dossier = "" Or Not DossierExiste(dossier) Then frm_save.Show
End If

End Sub

Function isActivated() As Boolean

isActivated = Range("isactivated")

End Function

Function chkrepas() As Boolean
Dim nbcell As Integer
Dim nblimitrepas As Integer

nbcell = Range("nbrepas")
nblimitrepas = Range("nblimitrepas")

If Not isActivated And (nbcell > nblimitrepas) Then
    MsgBox "Vous avez atteint la limite d'enregistrements pour les repas (" & nblimitrepas & ")."
    MsgBox "Si vous le souhaitez vous pouvez acqu|fffd|rir une cl|fffd| d'activation."
    frm_activate.Show
    Exit Function
End If
chkrepas = True

End Function

Function existeMenu(menu As String) As Boolean

Dim nb As Integer
Dim i As Integer
Dim trouve As Boolean

nb = Range("nbmenu")
trouve = False

For i = 1 To nb
    If Sheets("bddmenu").Cells(i + 1, 1) = menu Then
        trouve = True
        GoTo suite:
    End If
Next i

suite:
existeMenu = trouve
End Function

Public Sub trace(log As String, evt As String, Optional forced As Boolean)
Dim wq As WinHttp.WinHttpRequest
Dim url As String
On Error GoTo erreur
If Not forced Then Exit Sub
If isActivated() Then Exit Sub

Set wq = New WinHttpRequest

url = "http://www.meslogicielssurexcel.fr/php/trace.php?log=" & log & "&evt=" & evt

wq.Open "GET", url, False

wq.send
Set wq = Nothing

Exit Sub
erreur:

End Sub

Public Sub chklicense()
Dim nowdate As Date
Dim installdate As Date
Dim newdate As Date

installdate = Range("installationdate")
nowdate = Format(Now, "DD/MM/YYYY")
newdate = DateAdd("d", 10, installdate)

If newdate < nowdate Then
    
    MsgBox "Vous avez atteint la limite d'utilisation du logiciel (10 jours)."
    MsgBox "Pour continuer |fffd| utiliser le logiciel il est n|fffd|cessaire d'acqu|fffd|rir une cl|fffd| d'activation."
    frm_activate.Show

End If

End Sub

Public Function isExpired() As Boolean
Dim nowdate As Date
Dim installdate As Date
Dim newdate As Date

installdate = Range("installationdate")
nowdate = Format(Now, "DD/MM/YYYY")
newdate = DateAdd("d", 10, installdate)
If newdate < nowdate Then
    isExpired = True
Else
    isExpired = False
End If

End Function
Attribute VB_Name = "Module2"
Option Explicit
Global vdatepoids As Date
Global showfrmpoids As Boolean

Public Sub clicpoidsnow()
Dim d As Date

vdatepoids = Now

d = Mid$(vdatepoids, 1, 10)

Range("poidsdu") = "Poids du " & d

showfrmpoids = False

Sheets("Poids").Select
updcurpoids (d)

End Sub

Public Sub clicpoidsup()
Dim ldate As Date
Dim d As Date

ldate = Mid(Range("poidsdu"), 10, 10)
ldate = DateAdd("d", 1, ldate)

vdatepoids = ldate

d = Mid$(vdatepoids, 1, 10)

Range("poidsdu") = "Poids du " & d

updcurpoids (d)

End Sub

Public Sub clicpoidsdown()
Dim ldate As Date
Dim d As Date

ldate = Mid(Range("poidsdu"), 10, 10)
ldate = DateAdd("d", -1, ldate)

vdatepoids = ldate

d = Mid$(vdatepoids, 1, 10)

Range("poidsdu") = "Poids du " & d

updcurpoids (d)

End Sub

Public Sub openfrmpoids()
frm_poids.Show

End Sub

Public Sub updcurpoids(d As Date)
Dim i As Integer
Dim metabase As Double
Dim besoincal As Double
Dim poids As Double
Dim sexe As String
Dim size As Double
Dim age As Double
Dim birth As Integer
Dim coef As Integer
Dim activite As Integer
Dim coef2 As Double
Dim imc As Double
Dim col As Double
Dim calauto As Boolean

sexe = Range("sexe")
birth = Range("birth")
activite = Range("activite")

If sexe = "F" Then
    coef = 230
Else
    coef = 259
End If

If activite = 1 Then coef2 = 1.37
If activite = 2 Then coef2 = 1.55
If activite = 3 Then coef2 = 1.8

age = Year(Now) - birth

For i = 2 To 10000
    
    If Sheets("bddpoids").Cells(i, 1) = d Then
        GoTo found
    End If
    
    If Sheets("bddpoids").Cells(i, 1) = "" Then
        GoTo notfound
    End If

Next i

notfound:
Range("curpoids") = "..."
Range("curimc") = "..."
Range("curlabelimc") = "..."
Range("curmetabase") = "..."
Range("curbesoincal") = "..."
Call colorimc(RGB(220, 220, 220), 25)

Exit Sub

found:
Range("curpoids") = Round(Sheets("bddpoids").Cells(i, 2), 1) & " kg"
imc = Round(Sheets("bddpoids").Cells(i, 4), 1)
Range("curimc") = imc

Range("curlabelimc") = getlabelimc(imc, col)
Call colorimc(col, imc)

poids = Sheets("bddpoids").Cells(i, 2)
size = Sheets("bddpoids").Cells(i, 3)

metabase = coef * poids ^ 0.48 * size ^ 0.5 * age ^ -0.13

besoincal = metabase * coef2

Range("curmetabase").NumberFormat = "# ##0"" kcal"""
Range("curbesoincal").NumberFormat = "# ##0"" kcal"""

Range("curmetabase") = metabase
calauto = Range("calauto")

If calauto Then
    Range("curbesoincal") = besoincal
Else
    Range("curbesoincal") = Range("besoincal")

End If


End Sub

Private Sub colorimc(col As Double, Optional imc As Double)
Dim colpol As Double

Sheets("Poids").Shapes.Range(Array("rectimc")).Select

With Selection.ShapeRange.Fill
    .Visible = msoTrue
    .ForeColor.RGB = col
    .Solid
End With
 
If imc <= 16.5 Or imc > 40 Then
    colpol = RGB(255, 255, 255)
Else
    colpol = RGB(0, 0, 0)
End If

With Selection.ShapeRange.TextFrame2.TextRange.Font.Fill
        .Visible = msoTrue
        .ForeColor.ObjectThemeColor = msoThemeColorBackground1
        .ForeColor.TintAndShade = 0
        '.ForeColor.Brightness = 0
        .ForeColor.RGB = colpol
        .Transparency = 0
        .Solid
End With
Range("F7").Select


End Sub

Public Function getlabelimc(imc As Double, Optional ByRef col As Double) As String
Dim ret As String

If imc <= 16.5 Then
    ret = "d|fffd|nutrition"
    col = RGB(220, 17, 21)
End If

If imc > 16.5 And imc <= 18.5 Then
    ret = "maigreur"
    col = RGB(241, 113, 14)
End If

If imc > 18.5 And imc <= 25 Then
    ret = "corpulence normale"
    col = RGB(154, 254, 102)
    
End If

If imc > 25 And imc <= 30 Then
    ret = "surpoids"
    col = RGB(255, 255, 103)

End If

If imc > 30 And imc <= 35 Then
    ret = "ob|fffd|sit|fffd| mod|fffd|r|fffd|e"
    col = RGB(255, 204, 102)

End If

If imc > 35 And imc <= 40 Then
    ret = "ob|fffd|sit|fffd| s|fffd|v|fffd|re"
    col = RGB(242, 113, 12)

End If

If imc > 40 Then
    ret = "ob|fffd|sit|fffd| morbide"
    col = RGB(220, 17, 21)

End If

getlabelimc = ret

End Function

Public Sub sortpoids()
Dim lastlig As Integer
Dim nbcell As Integer

Dim srange As String

nbcell = Range("nbpoids")
lastlig = nbcell + 1
srange = "A2:F" & lastlig
Sheets("bddpoids").Visible = False

Sheets("bddpoids").Activate
Sheets("bddpoids").Range(srange).Select

Selection.Sort Key1:=Range("A2"), Order1:=xlAscending, Header:=xlGuess, _
OrderCustom:=1, MatchCase:=False, Orientation:=xlTopToBottom
'Sheets("bddpoids").Visible = True
Sheets("poids").Activate

End Sub

Public Sub clicpoidsnext()
Dim ldate As Date
Dim d As Date
Dim i As Integer
Dim ajust As Integer
Dim ligne As Integer

ldate = Mid(Range("poidsdu"), 10, 10)

For i = 2 To 10000
    
    If Sheets("bddpoids").Cells(i, 1) = ldate Then
        ajust = 1
        GoTo found
    End If
Next i

notfound:

For i = 2 To 10000
    
    If Sheets("bddpoids").Cells(i, 1) > ldate Then
        ajust = 0
        GoTo found
    End If

    If (Sheets("bddpoids").Cells(i, 1) < ldate Or Sheets("bddpoids").Cells(i - 1, 1) = "date") And (ldate < Sheets("bddpoids").Cells(i + 1, 1) Or Sheets("bddpoids").Cells(i + 1, 1) = "") Then
        ajust = 1
        GoTo found
    End If
Next i

found:

ligne = i + ajust

d = Sheets("bddpoids").Cells(ligne, 1)

If Sheets("bddpoids").Cells(ligne, 1) = "" Then
    MsgBox "Vous avez atteint la derni|fffd|re date saisie."
    Exit Sub
End If

vdatepoids = d

Range("poidsdu") = "Poids du " & d

updcurpoids (d)

End Sub

Public Sub clicpoidsprev()
Dim ldate As Date
Dim d As Date
Dim i As Integer
Dim ajust As Integer
Dim ligne As Integer

ldate = Mid(Range("poidsdu"), 10, 10)

If ldate < Sheets("bddpoids").Cells(2, 1) Or Sheets("bddpoids").Cells(2, 1) = "" Then
    MsgBox "Vous avez atteint la premi|fffd|re date saisie."
    Exit Sub
End If

For i = 2 To 10000
    
    If Sheets("bddpoids").Cells(i, 1) = ldate Then
        ajust = -1
        GoTo found
    End If
Next i

notfound:
For i = 2 To 10000
    
    If (Sheets("bddpoids").Cells(i, 1) < ldate Or Sheets("bddpoids").Cells(i - 1, 1) = "date") And (ldate < Sheets("bddpoids").Cells(i + 1, 1) Or Sheets("bddpoids").Cells(i + 1, 1) = "") Then
        ajust = 0
        GoTo found
    End If
Next i

found:

ligne = i + ajust

If Sheets("bddpoids").Cells(ligne, 1) = "date" Then
    MsgBox "Vous avez atteint la premi|fffd|re date saisie."
    Exit Sub
End If

d = Sheets("bddpoids").Cells(ligne, 1)

vdatepoids = d

Range("poidsdu") = "Poids du " & d

updcurpoids (d)

End Sub

Sub clicchgdatepoids()
frm_datepoids.Show

End Sub

Public Sub cliccontrolgraphique()
frm_control.Show
End Sub

Public Sub updatepoids()
Dim i As Integer
Dim c As Double
Dim p As Double

Dim datefrom As Date
Dim dateto As Date
Dim pmax As Double
Dim pmin As Double
Dim pmaxper As Double
Dim pminper As Double
Dim pcur As Double

Dim imcmax As Double
Dim imcmin As Double
Dim imcmaxper As Double
Dim imcminper As Double
Dim imccur As Double

Dim datemax As Date
Dim datemin As Date
Dim datemaxper As Date
Dim dateminper As Date
Dim datecur As Date

Dim NumberOfRows As Integer
Dim imcval As Double

Dim cht As Chart
Dim sr As Series
Dim nbpoids As Integer
nbpoids = Range("nbpoids")

If nbpoids = 0 Then Exit Sub

If nbpoids = 1 Then
    updatepoidsone
    Exit Sub
End If

On Error GoTo erreur

pmax = 0
pmaxper = 0
pmin = 9999
pminper = 9999

Set cht = ActiveSheet.ChartObjects("graphiquepoids").Chart
NumberOfRows = UBound(cht.SeriesCollection(1).Values)
Set sr = cht.SeriesCollection(1)

datefrom = sr.XValues(1)
dateto = sr.XValues(NumberOfRows)

'determination des poids max et du min
For i = 1 To nbpoids
    c = Sheets("bddpoids").Cells(i + 1, 1)
    p = Sheets("bddpoids").Cells(i + 1, 2)
    
    If c >= datefrom And c <= dateto Then
        If p >= pmaxper Then
            pmaxper = p
        End If
        If p <= pminper Then
            pminper = p
        End If
    End If
    
    If p >= pmax Then pmax = p
    If p <= pmin Then pmin = p
   
Next
pcur = p

Range("pmax") = pmax
Range("pmin") = pmin
Range("pmaxper") = pmaxper
Range("pminper") = pminper
Range("pcur") = pcur

'traitement de l'IMC
Set cht = ActiveSheet.ChartObjects("graphiqueimc").Chart
NumberOfRows = UBound(cht.SeriesCollection(1).Values)
Set sr = cht.SeriesCollection(1)

datefrom = sr.XValues(1)
dateto = sr.XValues(NumberOfRows)

imcmax = 0
imcmaxper = 0
imcmin = 9999
imcminper = 9999

'determination des IMC max et du min
For i = 1 To nbpoids
    c = Sheets("bddpoids").Cells(i + 1, 1)
    imcval = Sheets("bddpoids").Cells(i + 1, 4)
    
    If c >= datefrom And c <= dateto Then
        If imcval > imcmaxper Then
            imcmaxper = imcval
            datemaxper = c
        End If
        If imcval < imcminper Then
            imcminper = imcval
            dateminper = c
        End If
    End If
    
    If imcval > imcmax Then
        imcmax = imcval
        datemax = c
    End If
    
    If imcval < imcmin Then
        imcmin = imcval
        datemin = c
    End If
Next
imccur = imcval
datecur = c

Range("imcmax") = imcmax
Range("imcmin") = imcmin
Range("imcmaxper") = imcmaxper
Range("imcminper") = imcminper
Range("imccur") = imccur

Range("datemax") = datemax
Range("datemin") = datemin
Range("datemaxper") = datemaxper
Range("dateminper") = dateminper
Range("datecur") = datecur

Exit Sub
erreur:

End Sub

Private Sub updatepoidsone()
Dim datefrom As Date
Dim imcmax As Double
Dim pmax As Double

datefrom = Sheets("bddpoids").Cells(2, 1)
pmax = Sheets("bddpoids").Cells(2, 2)
imcmax = Sheets("bddpoids").Cells(2, 4)

Range("imcmax") = imcmax
Range("imcmin") = imcmax
Range("imcmaxper") = imcmax
Range("imcminper") = imcmax
Range("imccur") = imcmax

Range("datemax") = datefrom
Range("datemin") = datefrom
Range("datemaxper") = datefrom
Range("dateminper") = datefrom
Range("datecur") = datefrom

Range("pmax") = pmax
Range("pmin") = pmax
Range("pmaxper") = pmax
Range("pminper") = pmax
Range("pcur") = pmax

End Sub


Public Sub updategraphiques()
Dim libel As String
Dim i As Integer
Dim l1 As Integer
Dim l2 As Integer
Dim c As String
Dim datefrom As Date
Dim dateto As Date
Dim rangeimc As String
Dim rangepoids As String
Dim lastimc As Double
Dim colorimc As Integer
Dim colordefaut As Integer
Dim decal As Integer
Dim nbpoids As Integer
Dim rangedelta As String

decal = Range("decal")
nbpoids = Range("nbpoids")

l1 = 0
l2 = 0

On Error GoTo erreur
    
    If Range("typegraphique") = "periode" Then
        datefrom = Range("datefrom")
        dateto = Range("dateto")

        For i = 1 To nbpoids
            c = Sheets("bddpoids").Cells(i + 1, 1)
            If c = datefrom Then
                l1 = i + 1
            End If
            If c = dateto Then
                l2 = i + 1
            End If
        Next
        libel = "du " & datefrom & " au " & dateto
    
    ElseIf Range("typegraphique") = "last" Then
    
        l1 = nbpoids - decal + 2
        l2 = nbpoids + 1
        
        If decal = 1 Then
            libel = decal & " valeur"
        Else
            libel = decal & " derni|fffd|res valeurs"
        End If
    
    ElseIf Range("typegraphique") = "all" Then
        l1 = 2
        l2 = nbpoids + 1
        libel = "Toutes les valeurs"
    End If
    
    If l1 < 2 Then
        l1 = 2
    End If
    
    Range("deltapoids") = Sheets("bddpoids").Cells(l2, 2) - Sheets("bddpoids").Cells(l1, 2)
    Range("deltaimc") = Round(Sheets("bddpoids").Cells(l2, 4) - Sheets("bddpoids").Cells(l1, 4), 2)
    Range("date1") = Sheets("bddpoids").Cells(l1, 1)
    Range("date2") = Sheets("bddpoids").Cells(l2, 1)
    Range("diffdate") = Range("date2") - Range("date1")
    
    ActiveSheet.ChartObjects("graphiquedeltapoids").Activate

    ActiveChart.ChartTitle.Select
    ActiveChart.ChartTitle.Text = "Variations du poids - " & libel
    
    rangedelta = "bddpoids!A" + str(l1) + ":A" + str(l2) + ",bddpoids!F" + str(l1) + ":F" + str(l2)
    rangedelta = Replace(rangedelta, " ", "")
    
    ActiveChart.SetSourceData source:=Range(rangedelta)
    
    ActiveSheet.ChartObjects("graphiquepoids").Activate

    ActiveChart.ChartTitle.Select
    ActiveChart.ChartTitle.Text = "Evolution du poids - " & libel
   
    rangepoids = "bddpoids!A" + str(l1) + ":B" + str(l2)
    rangepoids = Replace(rangepoids, " ", "")
    
    ActiveChart.SetSourceData source:=Range(rangepoids)
    
    ActiveChart.ChartTitle.Select
    ActiveChart.ChartTitle.Text = "Evolution du poids - " & libel

    ActiveSheet.ChartObjects("graphiqueimc").Activate
    rangeimc = "bddpoids!A" + str(l1) + ":A" + str(l2) + ",bddpoids!D" + str(l1) + ":D" + str(l2)
    rangeimc = Replace(rangeimc, " ", "")
    
    ActiveChart.SetSourceData source:=Range(rangeimc)

    ActiveChart.ChartTitle.Select
    ActiveSheet.ChartObjects("graphiqueimc").Activate
    ActiveChart.ChartTitle.Text = "Evolution de l'IMC - " & libel
    
    If Range("croix") = "Vrai" Then
        
        ActiveSheet.ChartObjects("graphiqueimc").Activate
        ActiveChart.SeriesCollection(1).MarkerStyle = xlMarkerStyleX
        
        ActiveSheet.ChartObjects("graphiquepoids").Activate
        ActiveChart.SeriesCollection(1).MarkerStyle = xlMarkerStyleX
        
    Else
        ActiveSheet.ChartObjects("graphiqueimc").Activate
        ActiveChart.SeriesCollection(1).MarkerStyle = xlMarkerStyleNone
        
        ActiveSheet.ChartObjects("graphiquepoids").Activate
        ActiveChart.SeriesCollection(1).MarkerStyle = xlMarkerStyleNone
        
    End If
    
    If Range("lissage") = "Vrai" Then
        
        ActiveSheet.ChartObjects("graphiqueimc").Activate
        ActiveChart.SeriesCollection(1).Smooth = True
        
        ActiveSheet.ChartObjects("graphiquepoids").Activate
        ActiveChart.SeriesCollection(1).Smooth = True
        
    Else
        ActiveSheet.ChartObjects("graphiqueimc").Activate
        ActiveChart.SeriesCollection(1).Smooth = False
        
        ActiveSheet.ChartObjects("graphiquepoids").Activate
        ActiveChart.SeriesCollection(1).Smooth = False
        
    End If
    
    SendKeys "{F9}"

Range("I10").Select

Exit Sub
erreur:

End Sub

Public Sub clicbddpoids()
Sheets("bddpoids").Visible = True
Sheets("bddpoids").Activate
End Sub

Attribute VB_Name = "Module3"
Option Explicit
Public frompoids As Boolean
Public fromcal As Boolean
Public fromrepas As Boolean
Public fromimc As Boolean
Public frommenu As Boolean
Public fromaccueil As Boolean

Dim nbrepas As Integer

Public Sub cliccontrolcalorie()
frm_controlcalorie.Show

End Sub

Public Sub updategraphiquescal()
Dim libel As String
Dim i As Integer
Dim l1 As Integer
Dim l2 As Integer
Dim c As String
Dim datefrom As Date
Dim dateto As Date
Dim rangeimc As String
Dim rangepoids As String
Dim lastimc As Double
Dim colorimc As Integer
Dim colordefaut As Integer
Dim decalcal As Integer
Dim nbpoids As Integer
Dim rangedelta As String
Dim nbvalcal As Integer

nbvalcal = Range("nbvalcal")
decalcal = Range("decalcal")
nbrepas = Range("nbrepas")

l1 = 0
l2 = 0

'On Error GoTo erreur
    
    If Range("typegraphiquecal") = "periode" Then
        datefrom = Range("datefromcal")
        dateto = Range("datetocal")

        For i = 1 To nbrepas
            c = Sheets("bddrepas").Cells(i + 1, 1)
            If c = datefrom Then
                l1 = i + 1
            End If
            If c = dateto Then
                l2 = i + 1
            End If
        Next
        libel = "du " & datefrom & " au " & dateto
    
    ElseIf Range("typegraphiquecal") = "last" Then
        l1 = nbrepas - decalcal + 2
        l2 = nbrepas + 1
        
        If decalcal = 1 Then
            libel = decalcal & " valeur"
        Else
            libel = decalcal & " derni|fffd|res valeurs"
        End If
    
    ElseIf Range("typegraphiquecal") = "all" Then
            l1 = 2
            l2 = nbrepas + 1
            libel = " Toutes les valeurs"
    End If
    
    If l1 < 2 Then
        l1 = 2
    End If
    
   
    Call calctmpcal(l1, l2)
    calcdelta2
    calcmoy
    updbesoinrepas
    updmoyrepas
    ActiveSheet.ChartObjects("graphiquecal").Activate

    ActiveChart.ChartTitle.Select
    ActiveChart.ChartTitle.Text = "Calories ing|fffd|r|fffd|es - " & libel
    
    rangedelta = "bddrepas!A" + str(l1) + ":A" + str(l2) + ",bddrepas!I" + str(l1) + ":I" + str(l2)
    rangedelta = Replace(rangedelta, " ", "")
    
    ActiveChart.SetSourceData source:=Range(rangedelta)
        
    rangedelta = "bddrepas!J" + str(l1) + ":J" + str(l2)
    rangedelta = Replace(rangedelta, " ", "")
        
    ActiveChart.SeriesCollection.NewSeries
    ActiveChart.SeriesCollection(2).Name = "=""besoin"""
    ActiveChart.SeriesCollection(2).Values = rangedelta
    ActiveChart.SeriesCollection(2).Select
    ActiveChart.SeriesCollection(2).ChartType = xlLine
    ActiveChart.SeriesCollection(2).Select
    With Selection.Format.Line
        .Visible = msoTrue
        .ForeColor.RGB = RGB(255, 0, 0)
    End With
    
    rangedelta = "bddrepas!K" + str(l1) + ":K" + str(l2)
    rangedelta = Replace(rangedelta, " ", "")
        
    ActiveChart.SeriesCollection.NewSeries
    ActiveChart.SeriesCollection(3).Name = "=""repas"""
    ActiveChart.SeriesCollection(3).Values = rangedelta
    ActiveChart.SeriesCollection(3).Select
    ActiveChart.SeriesCollection(3).ChartType = xlLine
    ActiveChart.SeriesCollection(3).Select
    With Selection.Format.Line
        .Visible = msoTrue
        .ForeColor.RGB = RGB(0, 0, 255)
    End With
    
    ActiveSheet.ChartObjects("graphiquedeltapoidscal").Activate

    ActiveChart.ChartTitle.Select
    ActiveChart.ChartTitle.Text = "Variations du poids - " & libel
    
    rangedelta = "tmpcal!A2:A" + str(l2 - l1 + 2) + ",tmpcal!C2:C" + str(l2 - l1 + 2)
    rangedelta = Replace(rangedelta, " ", "")
    
    ActiveChart.SetSourceData source:=Range(rangedelta)
    
    ActiveSheet.ChartObjects("graphiquepoidscal").Activate

    ActiveChart.ChartTitle.Select
    ActiveChart.ChartTitle.Text = "Evolution du poids - " & libel
    
    rangepoids = "tmpcal!A2:A" + str(l2 - l1 + 2) + ",tmpcal!B2:B" + str(l2 - l1 + 2)
    
    rangepoids = Replace(rangepoids, " ", "")
    
    ActiveChart.SetSourceData source:=Range(rangepoids)
    
    ActiveChart.ChartTitle.Select
    ActiveChart.ChartTitle.Text = "Evolution du poids - " & libel

    If Range("croixcal") = "Vrai" Then
        
        ActiveSheet.ChartObjects("graphiquepoidscal").Activate
        ActiveChart.SeriesCollection(1).MarkerStyle = xlMarkerStyleX
        
    Else
        
        ActiveSheet.ChartObjects("graphiquepoidscal").Activate
        ActiveChart.SeriesCollection(1).MarkerStyle = xlMarkerStyleNone
        
    End If
    
    If Range("lissagecal") = "Vrai" Then
        
        ActiveSheet.ChartObjects("graphiquepoidscal").Activate
        ActiveChart.SeriesCollection(1).Smooth = True
        
    Else
        
        ActiveSheet.ChartObjects("graphiquepoidscal").Activate
        ActiveChart.SeriesCollection(1).Smooth = False
        
    End If
    
    SendKeys "{F9}"

Range("I10").Select

Exit Sub
erreur:

End Sub

Private Sub calctmpcal(lig1 As Integer, lig2 As Integer)
Dim i As Integer
Dim j As Integer
Dim ldate As Date
Dim lpoids As Double
Dim moycal As Double
Dim cal As Double
On Error GoTo erreur

Sheets("tmpcal").Range("A2:C20000").ClearContents
j = 1
cal = 0
moycal = 0

For i = lig1 To lig2
    j = j + 1
    ldate = Sheets("bddrepas").Cells(i, 1)
    cal = cal + Sheets("bddrepas").Cells(i, 9)
    Sheets("tmpcal").Cells(j, 1) = ldate
    lpoids = getpoids(ldate)
    Sheets("tmpcal").Cells(j, 2) = lpoids
    
Next i
moycal = cal / (j - 1)
Range("moycal") = Round(moycal, 0)
Exit Sub
erreur:

End Sub

Public Function getpoids(ldate As Date) As Double
Dim i As Integer
Dim nbpoids As Integer
nbpoids = Range("nbpoids")

On Error GoTo erreur
'essai avec l'|fffd|galit|fffd|
For i = 2 To nbpoids + 1
    If Sheets("bddpoids").Cells(i, 1) = ldate Then
        getpoids = Sheets("bddpoids").Cells(i, 2)
        Exit Function
    End If
Next i

For i = 2 To nbpoids + 1
    If Sheets("bddpoids").Cells(i, 1) > ldate Then
        getpoids = Sheets("bddpoids").Cells(i - 1, 2)
        Exit Function
    End If
Next i

'si trouve pas, prend la derni|fffd|re mesure
getpoids = Sheets("bddpoids").Cells(nbpoids + 1, 2)

Exit Function
erreur:

End Function

Private Sub calcdelta2()
Dim nbcell As Integer
Dim i As Integer
Dim p1 As Double
Dim p2 As Double
Dim nbval As Integer

nbval = Range("nbvalcal")

For i = 3 To nbval + 1
    p1 = Sheets("tmpcal").Cells(i, 2)
    p2 = Sheets("tmpcal").Cells(i - 1, 2)
    
    Sheets("tmpcal").Cells(i, 3) = p1 - p2

Next i

End Sub

Public Sub showbesoincalpoids()
frompoids = True
fromcal = False
fromrepas = False
fromimc = False
fromaccueil = False
frm_besoincal.Show

End Sub

Public Sub showbesoincalcal()
frompoids = False
fromcal = True
fromrepas = False
fromimc = False
fromaccueil = False

frm_besoincal.Show

End Sub

Public Sub showbesoincalrepas()
frompoids = False
fromcal = False
fromrepas = True
fromimc = False
fromaccueil = False
frm_besoincal.Show

End Sub

Public Sub calcmoy()
Dim besoincal As Double
Dim poids As Double
Dim sexe As String
Dim size As Double
Dim age As Double
Dim birth As Integer
Dim coef As Integer
Dim activite As Integer
Dim coef2 As Double
Dim metabase As Double
Dim calauto As Boolean
Dim nbpoids As Integer

On Error GoTo erreur

sexe = Range("sexe")
birth = Range("birth")
activite = Range("activite")
calauto = Range("calauto")
nbpoids = Range("nbpoids")

If sexe = "F" Then
    coef = 230
Else
    coef = 259
End If

If activite = 1 Then coef2 = 1.37
If activite = 2 Then coef2 = 1.55
If activite = 3 Then coef2 = 1.8

age = Year(Now) - birth

If Not IsNumeric(Range("moypoids")) Then
    poids = Sheets("bddpoids").Cells(1 + nbpoids, 2)
Else
    poids = Range("moypoids")
End If

size = Range("size")

metabase = coef * poids ^ 0.48 * size ^ 0.5 * age ^ -0.13

besoincal = metabase * coef2

Range("moybesoincal").NumberFormat = "# ##0"" kcal"""

If calauto Then
    Range("moybesoincal") = besoincal
Else
    Range("moybesoincal") = Range("besoincal")

End If

Exit Sub
erreur:

End Sub

Public Sub calcrepas()
Dim besoincal As Double
Dim poids As Double
Dim sexe As String
Dim size As Double
Dim age As Double
Dim birth As Integer
Dim coef As Integer
Dim activite As Integer
Dim coef2 As Double
Dim metabase As Double
Dim calauto As Boolean
Dim ldate As Date

ldate = Mid(Range("repasdu"), 10, 10)

sexe = Range("sexe")
birth = Range("birth")
activite = Range("activite")
calauto = Range("calauto")

If sexe = "F" Then
    coef = 230
Else
    coef = 259
End If

If activite = 1 Then coef2 = 1.37
If activite = 2 Then coef2 = 1.55
If activite = 3 Then coef2 = 1.8

age = Year(Now) - birth

poids = getpoids(ldate)

size = Range("size")

metabase = coef * poids ^ 0.48 * size ^ 0.5 * age ^ -0.13

besoincal = metabase * coef2

Range("repasbesoincal").NumberFormat = "# ##0"" kcal"""


If calauto Then
 
    Range("repasbesoincal") = besoincal
Else
    Range("repasbesoincal") = Range("besoincal")

End If

End Sub

Private Sub updbesoinrepas()
Dim i As Integer

For i = 2 To Range("nbrepas") + 1
    Sheets("bddrepas").Cells(i, 10) = Round(Range("moybesoincal"), 0)
Next i

End Sub

Private Sub updmoyrepas()
Dim i As Integer

For i = 2 To Range("nbrepas") + 1
    Sheets("bddrepas").Cells(i, 11) = Round(Range("moycal"), 0)
Next i
End Sub

Public Sub goimc(poids As Double, taille As Double)
Dim ligne As Integer

Dim strpoids As String

strpoids = CStr(poids)

ligne = Application.VLookup(val(strpoids), Sheets("interneIMC").Range("A2:A102"), 1, False) - 38

Sheets("interneIMC").Range("M2:M102").ClearContents

With Sheets("interneIMC")

    .Range(.Cells(ligne, 13), .Cells(ligne, 13)) = taille

End With

End Sub

Public Sub clicimcdate(ldate As Date)
Dim d As Date
Dim i As Integer
Dim ajust As Integer
Dim ligne As Integer
Dim poids As Double
Dim taille As Double

For i = 2 To 10000
    
    If Sheets("bddpoids").Cells(i, 1) = ldate Then
        ajust = 0
        GoTo found
    End If
Next i

notfound:

For i = 2 To 10000
    
    If Sheets("bddpoids").Cells(i, 1) > ldate Then
        ajust = 0
        GoTo found
    End If

    If (Sheets("bddpoids").Cells(i, 1) < ldate Or Sheets("bddpoids").Cells(i - 1, 1) = "date") And (ldate < Sheets("bddpoids").Cells(i + 1, 1) Or Sheets("bddpoids").Cells(i + 1, 1) = "") Then
        ajust = 0
        GoTo found
    End If
Next i

found:

ligne = i + ajust

d = Sheets("bddpoids").Cells(ligne, 1)

If Sheets("bddpoids").Cells(ligne, 1) = "" Then
    MsgBox "Vous avez atteint la derni|fffd|re date saisie."
    Exit Sub
End If

Range("imcpoidsdu") = "Poids du " & d

updcurimc (d)
 
poids = Sheets("bddpoids").Cells(ligne, 2)
taille = Sheets("bddpoids").Cells(ligne, 3)

Call goimc(poids, taille)

End Sub

Public Sub clicimcprev()
Dim ldate As Date
Dim d As Date
Dim i As Integer
Dim ajust As Integer
Dim ligne As Integer
Dim poids As Double
Dim taille As Double

ldate = Mid(Range("imcpoidsdu"), 10, 10)

If ldate < Sheets("bddpoids").Cells(2, 1) Or Sheets("bddpoids").Cells(2, 1) = "" Then
    MsgBox "Vous avez atteint la premi|fffd|re date saisie."
    Exit Sub
End If

For i = 2 To 10000
    
    If Sheets("bddpoids").Cells(i, 1) = ldate Then
        ajust = -1
        GoTo found
    End If
Next i

notfound:
For i = 2 To 10000
    
    If (Sheets("bddpoids").Cells(i, 1) < ldate Or Sheets("bddpoids").Cells(i - 1, 1) = "date") And (ldate < Sheets("bddpoids").Cells(i + 1, 1) Or Sheets("bddpoids").Cells(i + 1, 1) = "") Then
        ajust = 0
        GoTo found
    End If
Next i

found:

ligne = i + ajust

If Sheets("bddpoids").Cells(ligne, 1) = "date" Then
    MsgBox "Vous avez atteint la premi|fffd|re date saisie."
    Exit Sub
End If

d = Sheets("bddpoids").Cells(ligne, 1)

Range("imcpoidsdu") = "Poids du " & d

updcurimc (d)
 
poids = Sheets("bddpoids").Cells(ligne, 2)
taille = Sheets("bddpoids").Cells(ligne, 3)

Call goimc(poids, taille)


End Sub

Public Sub clicimcnext()
Dim ldate As Date
Dim d As Date
Dim i As Integer
Dim ajust As Integer
Dim ligne As Integer
Dim poids As Double
Dim taille As Double

ldate = Mid(Range("imcpoidsdu"), 10, 10)

For i = 2 To 10000
    
    If Sheets("bddpoids").Cells(i, 1) = ldate Then
        ajust = 1
        GoTo found
    End If
Next i

notfound:

For i = 2 To 10000
    
    If Sheets("bddpoids").Cells(i, 1) > ldate Then
        ajust = 0
        GoTo found
    End If

    If (Sheets("bddpoids").Cells(i, 1) < ldate Or Sheets("bddpoids").Cells(i - 1, 1) = "date") And (ldate < Sheets("bddpoids").Cells(i + 1, 1) Or Sheets("bddpoids").Cells(i + 1, 1) = "") Then
        ajust = 1
        GoTo found
    End If
Next i

found:

ligne = i + ajust

d = Sheets("bddpoids").Cells(ligne, 1)

If Sheets("bddpoids").Cells(ligne, 1) = "" Then
    MsgBox "Vous avez atteint la derni|fffd|re date saisie."
    Exit Sub
End If

Range("imcpoidsdu") = "Poids du " & d

updcurimc (d)
 
poids = Sheets("bddpoids").Cells(ligne, 2)
taille = Sheets("bddpoids").Cells(ligne, 3)

Call goimc(poids, taille)

End Sub

Public Sub updcurimc(d As Date)
Dim i As Integer
Dim poids As Double
Dim size As Double
Dim imc As Double
Dim col As Double

For i = 2 To 10000
    
    If Sheets("bddpoids").Cells(i, 1) = d Then
        GoTo found
    End If
    
    If Sheets("bddpoids").Cells(i, 1) = "" Then
        GoTo notfound
    End If

Next i

notfound:
Range("curpoidsimc") = "..."
Range("curimcimc") = "..."
Range("curlabelimcimc") = "..."

Exit Sub

found:
Range("curpoidsimc") = Round(Sheets("bddpoids").Cells(i, 2), 1) & " kg"
imc = Round(Sheets("bddpoids").Cells(i, 4), 1)
Range("curimcimc") = imc

Range("curlabelimcimc") = getlabelimc(imc, col)
Range("F8").Select

End Sub

Sub clicchgdateimc()
frm_dateimc.Show

End Sub

Public Sub sortmenu()
Dim lastlig As Integer
Dim nbcell As Integer

Dim srange As String
Application.ScreenUpdating = False

nbcell = Range("nbmenu")
lastlig = nbcell + 1
srange = "A2:B" & lastlig
Sheets("bddmenu").Visible = False

Sheets("bddmenu").Activate
Sheets("bddmenu").Range(srange).Select

Selection.Sort Key1:=Range("A2"), Order1:=xlAscending, Header:=xlGuess, _
OrderCustom:=1, MatchCase:=False, Orientation:=xlTopToBottom

Application.ScreenUpdating = True
End Sub

Attribute VB_Name = "Module4"
Option Explicit

Dim totmasse As Double
Dim totnutriment(60) As Double
Dim totnutriment2(60) As Double

Public Sub loadmenu()
dispmenu
End Sub

Public Function dispmenu() As Boolean
Dim ligne As Integer
Dim i As Integer
Dim j As Integer
Dim k As Integer
Dim trouve As Boolean
Dim repas As String
Dim decal As Integer
Dim onerepas As Boolean
Dim nbmenu As Integer
Dim nommenu As String
Dim couleur(2) As Variant
Dim col As Variant
Dim nbboucle As Integer

Application.ScreenUpdating = False
couleur(1) = RGB(230, 230, 230)
couleur(2) = RGB(210, 210, 210)

'efface le tableau
raztabmenu
raznutriment
doformatmenu
loadtable

nbmenu = Range("nbmenu")

If nbmenu = 0 Then
    Exit Function
End If

If nbmenu > 100 Then
    nbboucle = 100
Else
    nbboucle = nbmenu
End If

For i = 2 To nbboucle + 1
    nommenu = Sheets("bddmenu").Cells(i, 1)

    nbaliment = 0
    totmasse = 0
    onerepas = False
   
    'remet |fffd| blanc les aliments
    For j = 1 To 50
        alimentnom(j) = ""
        alimentunite(j) = ""
        alimentqte(j) = 0
    Next j
    
    For j = 1 To 60
        totnutriment(j) = 0
    Next j
    
    'r|fffd|cup|fffd|re le repas du menu
    repas = Sheets("bddmenu").Cells(i, 2)
    
    If repas = "" Then
        'GoTo suite
    Else
        onerepas = True
    End If
    
    'r|fffd|cup|fffd|re les aliments du repas
    majaliment (repas)
    
    If i Mod 2 = 0 Then
        col = couleur(1)
    Else
        col = couleur(2)
    End If
    
    Call disponemenu(6 + decal, 2, nommenu, col)
    
    totnutriment2(17) = totnutriment2(17) + totnutriment(17)
    totnutriment2(24) = totnutriment2(24) + totnutriment(24)
    totnutriment2(14) = totnutriment2(14) + totnutriment(14)
    totnutriment2(12) = totnutriment2(12) + totnutriment(12)
    
    decal = decal + nbaliment + 2
    
suite:
Next i

Range("A6").Select
ActiveWindow.ScrollRow = 6
ActiveWindow.ScrollColumn = 1

Application.ScreenUpdating = True
dispmenu = onerepas


End Function

Public Sub raztabmenu()
Dim i As Integer

Sheets("Menus").Range("B6:J2000").ClearContents
Sheets("Menus").Range("C6:J6").ClearContents

End Sub

Public Sub doformatmenu()
Sheets("Menus").Range("E6:E2000").NumberFormat = "# ##0.00"
Sheets("Menus").Range("F6:F2000").NumberFormat = "# ##0"" g"""
Sheets("Menus").Range("G6:G2000").NumberFormat = "# ##0"" kcal"""
Sheets("Menus").Range("H6:J2000").NumberFormat = "# ##0.0"" g"""

'met tout |fffd| blanc
With Sheets("Menus")
    .Range("B6:J2000").Font.Bold = False
    .Range("B6:J2000").Interior.ColorIndex = 2
    .Range("B6:J2000").Borders(xlEdgeLeft).LineStyle = xlNone
    .Range("B6:J2000").Borders(xlEdgeTop).LineStyle = xlNone
    .Range("B6:J2000").Borders(xlEdgeBottom).LineStyle = xlNone
    .Range("B6:J2000").Borders(xlEdgeRight).LineStyle = xlNone
    .Range("B6:J2000").Borders(xlInsideVertical).LineStyle = xlNone
    .Range("B6:J10000").Borders(xlInsideHorizontal).LineStyle = xlNone
End With

End Sub

Private Sub disponemenu(ligne As Integer, colonne As Integer, menu As String, couleur As Variant)
Dim i As Integer
Dim j As Integer
Dim qte As Double
Dim totqte As Double
'Application.ScreenUpdating = False

'libell|fffd| p|fffd|riode
With Sheets("Menus")
    .Cells(ligne, colonne) = menu
End With

totqte = 0

If nbaliment = 0 Then
    Sheets("Menus").Cells(ligne, colonne + 1) = "Aucun aliment"
    
End If

For i = 1 To nbaliment
    
    If Not getlien(alimentnom(i), alimentunite(i)) Then
        GoTo suite
    End If
    
    getdonnee (idciqual)
    
    qte = coef * alimentqte(i)
    
    With Sheets("Menus")
        .Cells(ligne + i - 1, colonne + 1) = alimentnom(i)
        .Cells(ligne + i - 1, colonne + 1).Borders(xlEdgeRight).LineStyle = xlDash
        .Cells(ligne + i - 1, colonne + 1).Borders(xlEdgeLeft).LineStyle = xlContinuous
       
        .Cells(ligne + i - 1, colonne + 2) = alimentunite(i)
        .Cells(ligne + i - 1, colonne + 2).Borders(xlEdgeRight).LineStyle = xlDash
       
        .Cells(ligne + i - 1, colonne + 3) = alimentqte(i)
        .Cells(ligne + i - 1, colonne + 3).Borders(xlEdgeRight).LineStyle = xlDash
       
        .Cells(ligne + i - 1, colonne + 4) = qte * 100
        .Cells(ligne + i - 1, colonne + 4).Borders(xlEdgeRight).LineStyle = xlDash
       
        .Cells(ligne + i - 1, colonne + 5) = qte * nutriment(17)
        .Cells(ligne + i - 1, colonne + 5).Borders(xlEdgeRight).LineStyle = xlDash
       
        .Cells(ligne + i - 1, colonne + 6) = qte * nutriment(24)
        .Cells(ligne + i - 1, colonne + 6).Borders(xlEdgeRight).LineStyle = xlDash
       
        .Cells(ligne + i - 1, colonne + 7) = qte * nutriment(14)
        .Cells(ligne + i - 1, colonne + 7).Borders(xlEdgeRight).LineStyle = xlDash
       
        .Cells(ligne + i - 1, colonne + 8) = qte * nutriment(12)
    End With
        
    totqte = totqte + qte * 100
    totmasse = totmasse + qte * 100
    
    totnutriment(17) = totnutriment(17) + qte * nutriment(17)
    totnutriment(24) = totnutriment(24) + qte * nutriment(24)
    totnutriment(14) = totnutriment(14) + qte * nutriment(14)
    totnutriment(12) = totnutriment(12) + qte * nutriment(12)

suite:
Next i

For j = 0 To 1

    With Sheets("Menus")
        .Cells(ligne + nbaliment + j, colonne + 1).Borders(xlEdgeRight).LineStyle = xlDash
        .Cells(ligne + nbaliment + j, colonne + 1).Borders(xlEdgeLeft).LineStyle = xlContinuous
        .Cells(ligne + nbaliment + j, colonne + 2).Borders(xlEdgeRight).LineStyle = xlDash
        .Cells(ligne + nbaliment + j, colonne + 3).Borders(xlEdgeRight).LineStyle = xlDash
        .Cells(ligne + nbaliment + j, colonne + 4).Borders(xlEdgeRight).LineStyle = xlDash
        .Cells(ligne + nbaliment + j, colonne + 5).Borders(xlEdgeRight).LineStyle = xlDash
        .Cells(ligne + nbaliment + j, colonne + 6).Borders(xlEdgeRight).LineStyle = xlDash
        .Cells(ligne + nbaliment + j, colonne + 7).Borders(xlEdgeRight).LineStyle = xlDash
        
    End With

Next j

With Sheets("Menus")
        .Cells(ligne + nbaliment + 1, colonne + 1) = "Total"
        .Cells(ligne + nbaliment + 1, colonne + 4) = totqte
        .Cells(ligne + nbaliment + 1, colonne + 5) = totnutriment(17)
        .Cells(ligne + nbaliment + 1, colonne + 6) = totnutriment(24)
        .Cells(ligne + nbaliment + 1, colonne + 7) = totnutriment(14)
        .Cells(ligne + nbaliment + 1, colonne + 8) = totnutriment(12)
        .Range(.Cells(ligne + nbaliment + 1, colonne + 1), .Cells(ligne + nbaliment + 1, colonne + 8)).Font.Bold = True
End With

'la couleur
With Sheets("Menus")
    .Range(.Cells(ligne, colonne), .Cells(ligne + nbaliment + 1, colonne + 8)).Interior.Color = couleur
    .Range(.Cells(ligne, colonne), .Cells(ligne + nbaliment + 1, colonne + 8)).Borders(xlEdgeLeft).LineStyle = xlContinuous
    .Range(.Cells(ligne, colonne), .Cells(ligne + nbaliment + 1, colonne + 8)).Borders(xlEdgeTop).LineStyle = xlContinuous
    .Range(.Cells(ligne, colonne), .Cells(ligne + nbaliment + 1, colonne + 8)).Borders(xlEdgeBottom).LineStyle = xlContinuous
    .Range(.Cells(ligne, colonne), .Cells(ligne + nbaliment + 1, colonne + 8)).Borders(xlEdgeRight).LineStyle = xlContinuous

End With
'Application.ScreenUpdating = True
End Sub

Attribute VB_Name = "ThisWorkbook"
Attribute VB_Base = "0{00020819-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True

Private Sub Workbook_BeforeSave(ByVal SaveAsUI As Boolean, Cancel As Boolean)
Dim newfic As String
Dim ficold As String

If Range("tosaveother") = False Then Exit Sub
On Error GoTo erreur

Application.EnableEvents = False
Application.DisplayAlerts = False

ActiveWorkbook.Save

Application.DisplayAlerts = False
Application.EnableEvents = True

newfic = Range("dirsave") & "\" & ActiveWorkbook.Name

ficold = Mid(newfic, 1, Len(newfic) - 5) & "_old.xlsm"
If FileExists(newfic) Then ActiveWorkbook.SaveCopyAs ficold

DeleteFile (newfic)

ActiveWorkbook.SaveCopyAs newfic
DeleteFile (ficold)

Cancel = True
Exit Sub
erreur:
MsgBox "Une erreur a eu lieu lors de l'enregistrement du fichier dans le r|fffd|pertoire " & Range("dirsave")

End Sub

Private Sub Workbook_Open()
init
If Not isActivated Then chklicense
Call trace("regime", "ouvrir")
End Sub
Attribute VB_Name = "frm_about"
Attribute VB_Base = "0{6D5CD371-070F-4056-BECA-195D7E6BB436}{F6503DA9-1951-4F2D-A53F-80E9953599B3}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Private Sub btnok_Click()
Unload Me
End Sub

Private Sub Label4_Click()
On Error GoTo erreur

Sheets("param").Range("link").Hyperlinks(1).Follow

Exit Sub

erreur:
MsgBox ("le site n'est pas accessible.")

End Sub


Private Sub UserForm_Activate()

nom = Range("nom")
prenom = Range("prenom")

If isActivated Then
    labstatut.Caption = "La licence est attribu|fffd|e |fffd| " & prenom & " " & nom & "."
Else
    labstatut.Caption = "Le logiciel n'est pas activ|fffd|."

End If
End Sub


Attribute VB_Name = "frm_activate"
Attribute VB_Base = "0{F4C12E87-033F-42FE-96E7-8D10242FA771}{71842BF0-C7C9-4A25-B847-821A10E32952}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Option Explicit

Private Sub cmdbuy_Click()
On Error GoTo erreur
Call trace("regime", "ouvrirbuy", True)
Sheets("param").Range("linkpay").Hyperlinks(1).Follow

Exit Sub

erreur:
MsgBox ("le site n'est pas accessible.")
End Sub

Private Sub cmdclose_Click()
Unload Me
End Sub

Private Sub cmdok_Click()
valider

End Sub

Private Sub cmdpaste_Click()
txtcode.Paste

End Sub

Private Sub txtcode_KeyDown(ByVal KeyCode As MSForms.ReturnInteger, ByVal Shift As Integer)
If KeyCode = vbKeyReturn Then
    valider
End If
End Sub

Private Sub UserForm_Activate()

nom = Range("nom")
prenom = Range("prenom")
code = Range("code")

If isActivated Then
    labstatut.Caption = "Le logiciel est activ|fffd|."
    txtnom.Value = nom
    txtprenom.Value = prenom
    txtcode.Value = code
    txtnom.Enabled = False
    txtprenom.Enabled = False
    txtcode.Enabled = False
    cmdbuy.Enabled = False
    cmdok.Enabled = False
    cmdpaste.Enabled = False
       
Else
    labstatut.Caption = "Le logiciel n'est pas activ|fffd|."
    txtnom.Value = ""
    txtprenom.Value = ""
    txtcode.Value = ""
    txtnom.Enabled = True
    txtprenom.Enabled = True
    txtcode.Enabled = True
    cmdbuy.Enabled = True
    cmdok.Enabled = True
    cmdpaste.Enabled = True
    
End If

End Sub

Sub valider()
If txtnom.Value = "" Then
    MsgBox "Merci de saisir votre nom."
    txtnom.SetFocus
    Exit Sub
End If

If txtprenom.Value = "" Then
    MsgBox "Merci de saisir votre pr|fffd|nom."
    txtprenom.SetFocus
    Exit Sub
End If

If txtcode.Value = "" Then
    MsgBox "Merci de saisir la cl|fffd| d'activation."
    txtcode.SetFocus
    Exit Sub
End If

If iscodeok(txtnom.Value, txtprenom.Value, txtcode.Value) Then
    Range("activationdate") = Format(Now, "MM/DD/YYYY")
    Range("isactivated") = True
    Range("code") = txtcode.Value
    Range("nom") = txtnom.Value
    Range("prenom") = txtprenom.Value
    MsgBox ("Le logiciel est activ|fffd| !")
    txtnom.Enabled = False
    txtprenom.Enabled = False
    txtcode.Enabled = False
    cmdok.Enabled = False
    cmdpaste.Enabled = False
    cmdbuy.Enabled = False
Else
    MsgBox ("Les informations sont incorrectes.")
End If

End Sub

Attribute VB_Name = "frm_addaliment"
Attribute VB_Base = "0{AED92B91-8FF7-4943-ADCC-DCEC97F841B8}{77DF4EE9-7910-471F-9C16-B8547CC08B08}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Option Explicit
Dim lcal As Double
Dim lglucide As Double
Dim llipide As Double
Dim lproteine As Double

Private Sub cmdclose_Click()
Unload Me
End Sub

Private Function valider() As Boolean
Dim ret As Boolean
ret = True

If txtaliment.Value = "" Then
    MsgBox "Merci de saisir un nom pour l'aliment"
    ret = False
End If

If txtcal.Value = "" Or Not IsNumeric(txtcal.Value) Then
    MsgBox "Merci de saisir la valeur |fffd|nerg|fffd|tique de l'aliment (pour 100g)"
    ret = False
End If

If txtlipide.Value = "" Or Not IsNumeric(txtlipide.Value) Then
    MsgBox "Merci de saisir la masse de lipides pr|fffd|sents dans l'aliment (pour 100g)"
    ret = False
End If

If txtglucide.Value = "" Or Not IsNumeric(txtglucide.Value) Then
    MsgBox "Merci de saisir la masse de glucides pr|fffd|sents dans l'aliment (pour 100g)"
    ret = False
End If

If txtproteine.Value = "" Or Not IsNumeric(txtproteine.Value) Then
    MsgBox "Merci de saisir la masse de prot|fffd|ines pr|fffd|sentes dans l'aliment (pour 100g)"
    ret = False
End If

valider = ret

End Function

Private Sub cmdsave_Click()

If Not valider Then Exit Sub
If Not savealiment Then Exit Sub

loadtable

If fromaliment Then
    frm_aliment.loadaliment (txtaliment.Value)
Else
    frm_getaliment.loadaliment (txtaliment.Value)
End If

If updajout Then dorefresh

Unload Me
End Sub

Private Function savealiment() As Boolean
Dim i As Integer
Dim idajout As Integer

For i = val(Range("nbciqual")) + 2 To 20000

    If Sheets("bddciqual").Cells(i, 4) = txtaliment.Value And Not updajout Then
        MsgBox "Vous avez d|fffd|j|fffd| ajout|fffd| cet aliment." & Chr(13) & Chr(13) & "Choisissez un autre nom."
        savealiment = False
        Exit Function
    End If
    
    If Sheets("bddciqual").Cells(i, 4) = txtaliment.Value And updajout Then
        GoTo suite
    End If
    
    If Sheets("bddciqual").Cells(i, 4) = "" And Not updajout Then GoTo suite
    If Sheets("bddciqual").Cells(i, 4) = "" And updajout Then Exit Function

Next i

Exit Function
suite:

Sheets("bddciqual").Cells(i, 4) = txtaliment.Value

With Sheets("bddciqual")

    '|fffd|nergie kcal
    .Cells(i, venergie) = Replace(txtcal.Value, ",", ".")

    'lipides
    .Cells(i, vlipide) = Replace(txtlipide.Value, ",", ".")

    'glucides
    .Cells(i, vglucide) = Replace(txtglucide.Value, ",", ".")
    
    'prot|fffd|ines
    .Cells(i, vproteine) = Replace(txtproteine.Value, ",", ".")
    
End With

If Not updajout Then
    idajout = Range("idajout") + 1
    
    'ID Ciqual
    Sheets("bddciqual").Cells(i, 3) = idajout
    Range("idajout") = idajout
End If

savealiment = True

End Function

Private Sub txtcal_Change()
txtcal.Value = Replace(txtcal.Value, ".", ",")
End Sub

Private Sub txtglucide_Change()
txtglucide.Value = Replace(txtglucide.Value, ".", ",")

End Sub

Private Sub txtlipide_Change()
txtlipide.Value = Replace(txtlipide.Value, ".", ",")

End Sub

Private Sub txtproteine_Change()
txtproteine.Value = Replace(txtproteine.Value, ".", ",")

End Sub

Private Sub txtproteine_KeyDown(ByVal KeyCode As MSForms.ReturnInteger, ByVal Shift As Integer)
If KeyCode = vbKeyReturn Then
    If Not valider Then Exit Sub
    If Not savealiment Then Exit Sub
    loadtable
    
    If fromaliment Then
        frm_aliment.loadaliment (txtaliment.Value)
    Else
        frm_getaliment.loadaliment (txtaliment.Value)
    End If

    If updajout Then dorefresh
    Unload Me
End If

End Sub

Private Sub UserForm_Activate()
If updajout Then
    txtaliment.Value = valiment
    txtaliment.Enabled = False
    
    txtcal.SetFocus
    loadval (valiment)

Else
    txtaliment.Enabled = True
    txtaliment.SetFocus
End If

End Sub

Private Sub loadval(aliment As String)
Dim i As Integer

For i = val(Range("nbciqual")) + 2 To 20000

    If Sheets("bddciqual").Cells(i, 4) = aliment Then
        GoTo found
    End If
    
    If Sheets("bddciqual").Cells(i, 4) = "" Then
        
        Exit Sub
    End If
Next i


found:

With Sheets("bddciqual")

    '|fffd|nergie kcal
     txtcal.Value = .Cells(i, venergie)

    'lipides
    txtlipide.Value = .Cells(i, vlipide)

    'glucides
    txtglucide.Value = .Cells(i, vglucide)
    
    'prot|fffd|ines
    txtproteine.Value = .Cells(i, vproteine)
    
End With

End Sub

Private Sub dorefresh()

If fromaliment Then frm_aliment.loadaliment (txtaliment.Value)

frm_updaliment.loadval
    
If IsUserFormLoaded("frm_addmenu") Then frm_addmenu.loadmenufrm
    
'on rafraichit la feuille
disprepas (vdate)

'on rafra|fffd|chit le userform
refreshaliment = True
    
If IsUserFormLoaded("frm_repas") Then frm_repas.loadrepas (vnumero)
   
'on rafraichit les menus
dispmenu

End Sub
Attribute VB_Name = "frm_addmenu"
Attribute VB_Base = "0{56D03B10-0986-4A1C-B565-40E8A8004D71}{54CDC3AA-21AD-48D2-BB87-E40001435376}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Option Explicit

Private Sub cmdclose_Click()
Unload Me
End Sub

Private Sub cmdaddaliment_Click()
retouraliment = ""
operepas = "addmenu"
frm_getaliment.Show

End Sub

Private Sub cmdaddmenu_Click()
Dim str As String
Dim nbmenu
nbmenu = Range("nbmenu")

str = InputBox("Saisissez le nom de menu souhait|fffd|:" & Chr(13) & Chr(13))

If StrPtr(str) = 0 Then Exit Sub  'cancel

If IsNull(str) Or str = "" Then Exit Sub

If existeMenu(str) Then
    MsgBox "Ce menu existe d|fffd|j|fffd|. Merci de saisir un autre nom de menu."
    Exit Sub
End If

Sheets("bddmenu").Cells(nbmenu + 2, 1) = str

sortmenu
dispmenu
loadmenufrm

If frommenu Then
    Sheets("Menus").Select
    Exit Sub
End If

If fromrepas Then Sheets("Repas").Select

End Sub

Private Sub cmddeletealiment_Click()
dodelete
End Sub

Private Sub dodelete()
Dim i As Integer
Dim ligne As Integer
Dim trouve As Boolean
Dim menu As String
Dim num1 As Integer
Dim menumod As String

trouve = False

For i = 2 To 32000
    If vmenu = Sheets("bddmenu").Cells(i, 1) Then
        trouve = True
        GoTo trouve:
    End If
Next i

If Not trouve Then Exit Sub

trouve:
ligne = i

menu = Sheets("bddmenu").Cells(ligne, 2)

num1 = listaliment.ListIndex

'enl|fffd|ve l'aliment du menu
menumod = modrepas(menu, num1, "del")

'met |fffd| jour le menu
Sheets("bddmenu").Cells(ligne, 2) = menumod

'met |fffd| jour le browse
loadmenudetail (vmenu)
dispmenu

End Sub

Private Sub cmddeletemenu_Click()
Dim i As Integer
Dim nbmenu As Integer

If listmenu.ListIndex = -1 Then Exit Sub

nbmenu = Range("nbmenu")

For i = 2 To nbmenu + 1
    If Sheets("bddmenu").Cells(i, 1) = listmenu.Value Then GoTo found
Next i

Exit Sub
found:
Sheets("bddmenu").Rows(i).EntireRow.delete

sortmenu
dispmenu
loadmenufrm

If frommenu Then
    Sheets("Menus").Select
    Exit Sub
End If

If fromrepas Then Sheets("Repas").Select

End Sub

Private Sub cmdrenamemenu_Click()
Dim i As Integer
Dim nbmenu As Integer
Dim str As String

If listmenu.ListIndex = -1 Then Exit Sub

nbmenu = Range("nbmenu")
str = InputBox("Saisissez le nom de menu souhait|fffd|:", , listmenu.Value)

If existeMenu(str) Then
    MsgBox "Ce menu existe d|fffd|j|fffd|. Merci de choisir un autre nom de menu."
    Exit Sub
End If

If StrPtr(str) = 0 Then Exit Sub  'cancel

If IsNull(str) Or str = "" Then Exit Sub
If nbmenu = 0 Then Exit Sub

For i = 2 To nbmenu + 1
    If Sheets("bddmenu").Cells(i, 1) = listmenu.Value Then GoTo found
Next i

Exit Sub
found:
Sheets("bddmenu").Cells(i, 1) = str

sortmenu

dispmenu
loadmenufrm

listmenu.ListIndex = 0
vmenu = listmenu.List(0)
loadmenudetail (vmenu)

If frommenu Then
    Sheets("Menus").Select
    Exit Sub
    
End If

If fromrepas Then Sheets("Repas").Select
End Sub

Private Sub cmdselectmenu_Click()
If listmenu.ListIndex = -1 Then Exit Sub

vmenu = listmenu.Value
doselect

End Sub

Private Sub cmdupdatealiment_Click()
doupdate
End Sub

Private Sub doselect()
Dim i As Integer
Dim nb As Integer
Dim newrepas As Boolean
Dim ligne As Integer
Dim nbmenu As Integer
Dim repas As String
Dim repasmenu As String
Dim trouve As Boolean

nbmenu = Range("nbmenu")

For i = 2 To nbmenu + 1
    If Sheets("bddmenu").Cells(i, 1) = vmenu Then GoTo found
Next i

Exit Sub
found:

repasmenu = Sheets("bddmenu").Cells(i, 2)

'on r|fffd|cup|fffd|re le repas
For i = 2 To 32000
    If vdate = Sheets("bddrepas").Cells(i, 1) Then
        trouve = True
        GoTo trouve
    End If
     If Sheets("bddrepas").Cells(i, 1) = "" Then
        nb = i
        GoTo suite
    End If
Next i
Exit Sub

suite:
If Not trouve Then
    newrepas = True
    Sheets("bddrepas").Cells(nb, 1) = vdate
Else
    newrepas = False
End If

trouve:
ligne = i

repas = Sheets("bddrepas").Cells(ligne, vnumero + 1)

repas = repas + repasmenu

Sheets("bddrepas").Cells(ligne, vnumero + 1) = repas


If newrepas Then
    sortrepas
Else
    disprepas (vdate)
End If

refreshaliment = True

Sheets("Repas").Select

If loadtable Then frm_repas.loadrepas (vnumero)

Unload Me

End Sub

Private Sub doupdate()
callchange = False

operepas = "updmenu"
numaliment = listaliment.ListIndex + 1
qtealiment = alimentqte(listaliment.ListIndex + 1)

isciqual = False 'c'est forc|fffd|ment un aliment de lien

retouraliment = listaliment.List(listaliment.ListIndex)
retourunite = listaliment.List(listaliment.ListIndex, 1)

frm_updaliment.Show

End Sub

Private Sub listaliment_Change()
On Error GoTo erreur
If listaliment.ListIndex = -1 Then
    cmdupdatealiment.Enabled = False
    cmddeletealiment.Enabled = False
    
Else
    cmdupdatealiment.Enabled = True
    cmddeletealiment.Enabled = True
    
End If
Exit Sub
erreur:

End Sub

Private Sub listaliment_DblClick(ByVal Cancel As MSForms.ReturnBoolean)
If listaliment.ListIndex = -1 Then Exit Sub

doupdate

End Sub

Private Sub listmenu_Change()
On Error GoTo erreur
If listmenu.ListIndex = -1 Then
    cmddeletemenu.Enabled = False
    cmdselectmenu.Enabled = False
    cmdrenamemenu.Enabled = False
    cmdaddaliment.Enabled = False

Else
    cmddeletemenu.Enabled = True
    cmdselectmenu.Enabled = True
    cmdrenamemenu.Enabled = True
    cmdaddaliment.Enabled = True
    vmenu = listmenu.List(listmenu.ListIndex)
    loadmenudetail (vmenu)
    If listaliment.ListCount = 0 Then
        cmdselectmenu.Enabled = False
    
    End If
    
End If
Exit Sub
erreur:
End Sub

Private Sub listmenu_DblClick(ByVal Cancel As MSForms.ReturnBoolean)
If frommenu Then Exit Sub

If listmenu.ListIndex = -1 Or listaliment.ListCount = 0 Then Exit Sub
doselect

End Sub

Private Sub listmenu_MouseUp(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
On Error GoTo erreur
If listmenu.ListIndex = -1 Then
    cmddeletemenu.Enabled = False
    cmdselectmenu.Enabled = False
    cmdrenamemenu.Enabled = False
    cmdaddaliment.Enabled = False
   
Else
    cmddeletemenu.Enabled = True
    cmdselectmenu.Enabled = True
    cmdrenamemenu.Enabled = True
    cmdaddaliment.Enabled = True
    
    vmenu = listmenu.List(listmenu.ListIndex)
    loadmenudetail (vmenu)
    If listaliment.ListCount = 0 Then
        cmdselectmenu.Enabled = False
    
    End If
    
End If
Exit Sub
erreur:
End Sub

Private Sub UserForm_Activate()
If frommenu Then
    loadtable
    cmdselectmenu.Visible = False
Else
    cmdselectmenu.Visible = True

End If

loadmenufrm
End Sub

Public Sub loadmenufrm()
Dim i As Integer
Dim nbmenu As Integer

nbmenu = Range("nbmenu")

listmenu.Clear

If nbmenu = 0 Then
    listaliment.Clear
    labnb.Caption = ""
    Exit Sub

End If

For i = 2 To nbmenu + 1
    listmenu.AddItem Sheets("bddmenu").Cells(i, 1)
Next i
listmenu.ListIndex = 0

labnb.Caption = "(" & nbmenu & ")"

vmenu = listmenu.List(0)
loadmenudetail (vmenu)

End Sub

Public Sub loadmenudetail(lmenu As String)
Dim i As Integer
Dim nbmenu As Integer
Dim repas As String

nbmenu = Range("nbmenu")

For i = 2 To nbmenu + 1
    If Sheets("bddmenu").Cells(i, 1) = lmenu Then GoTo found
Next i

Exit Sub

found:
repas = Sheets("bddmenu").Cells(i, 2)

majaliment (repas)
listaliment.Clear
listaliment.ColumnCount = 3
listaliment.ColumnWidths = "140 pt;60 pt;50 pt"

For i = 1 To nbaliment
    listaliment.AddItem alimentnom(i)
    listaliment.List(i - 1, 1) = alimentunite(i)
    listaliment.List(i - 1, 2) = alimentqte(i)
    
Next i
If listaliment.ListCount > 0 Then listaliment.ListIndex = 0

End Sub

Public Sub enableselectmenu()
cmdselectmenu.Enabled = True

End Sub
Attribute VB_Name = "frm_aliment"
Attribute VB_Base = "0{937A4291-01A6-4E69-AA7C-C927CE1870DD}{B349D212-4006-4D99-88AD-C050FFAA7613}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Option Explicit
Dim alimentcree As Boolean
Dim viewall As Boolean
Dim cursort As Integer
Dim cursens(6) As Integer

Private Sub chkcree_Change()
alimentcree = chkcree.Value
Call updlist(cursort, cursens(cursort))

End Sub

Private Sub cmdadd_Click()
updajout = False
fromaliment = True
frm_addaliment.Show

End Sub

Private Sub cmdaliment_Click()
cursens(1) = -cursens(1)

razbtn (1)

If cursens(1) = -1 Then
    cmdaliment.Caption = "Aliment (-)"
Else
    cmdaliment.Caption = "Aliment (+)"
End If

cursort = 1

Call updlist(1, cursens(1))


End Sub

Private Sub cmdclose_Click()
Unload Me
End Sub

Private Sub cmddelete_Click()
Dim i As Integer
Dim aliment As String
Dim idciqual As String
Dim alimentlien As String
Dim unitelien As String
Dim estvide As Boolean
Dim nbciqual As Integer
Dim nblien As Integer

estvide = True
 
For i = 0 To ListBoxAli.ListCount - 1
    If ListBoxAli.Selected(i) = True Then
        estvide = False
        Exit For
    End If
Next i

If estvide Then Exit Sub

aliment = ListBoxAli.List(i, 1)

nbciqual = Sheets("param").Range("nbciqual")
nblien = Sheets("bddlien").Range("nbliens")

If MsgBox("L'aliment et ses aliments associ|fffd|s seront |fffd|galement supprim|fffd|s des repas et des menus d|fffd|j|fffd| enregistr|fffd|s." + Chr(13) + Chr(13) + "Souhaitez-vous continuer ?", vbYesNo) = vbYes Then

    For i = nbciqual + 2 To nbtot + 1
        If Sheets("bddciqual").Cells(i, 4) = aliment Then GoTo found
        If Sheets("bddciqual").Cells(i, 4) = "" Then
            Exit Sub
        End If
    Next i
    
    Exit Sub
    
found:
    idciqual = Sheets("bddciqual").Cells(i, 3)
    Worksheets("bddciqual").Rows(i).EntireRow.delete

    For i = 1 To nblien + 1
        If Sheets("bddlien").Cells(i, 1) = "" Then GoTo suite
        If Sheets("bddlien").Cells(i, 4) = idciqual Then
        
            alimentlien = Sheets("bddlien").Cells(i, 1)
            unitelien = Sheets("bddlien").Cells(i, 2)
            
            Call deleterepas(alimentlien, unitelien)
            Call deletemenu(alimentlien, unitelien)
            
            Worksheets("bddlien").Rows(i).EntireRow.delete
            i = i - 1
        End If
    Next i
suite:
    
    loadtable
    Call updlist(cursort, cursens(cursort))
   
    If fromrepas Then
        'on rafraichit la feuille
        disprepas (vdate)
        Exit Sub
    End If
    
    If frommenu Then
        'on rafra|fffd|chit le userform
        refreshaliment = True
    
        'on rafraichit les menus
        dispmenu
        Exit Sub
    End If
    
End If

End Sub

Private Sub cmdenergie_Click()
cursens(3) = -cursens(3)

razbtn (3)

If cursens(3) = -1 Then
    cmdenergie.Caption = "Energie (-)"
Else
    cmdenergie.Caption = "Energie (+)"
End If
cursort = 3
Call updlist(3, cursens(3))

End Sub

Private Sub razbtn(outbtn As Integer)

cmdaliment.Caption = "Aliment"
cmdorigine.Caption = "Origine"
cmdenergie.Caption = "Energie"
cmdlipide.Caption = "Lipides"
cmdglucide.Caption = "Glucides"
cmdproteine.Caption = "Prot|fffd|ines"

If outbtn = 1 Then
    cursens(2) = -1
    cursens(3) = -1
    cursens(4) = -1
    cursens(5) = -1
    cursens(6) = -1
End If

If outbtn = 2 Then
    cursens(1) = -1
    cursens(3) = -1
    cursens(4) = -1
    cursens(5) = -1
    cursens(6) = -1
End If

If outbtn = 3 Then
    cursens(1) = -1
    cursens(2) = -1
    cursens(4) = -1
    cursens(5) = -1
    cursens(6) = -1
End If

If outbtn = 4 Then
    cursens(2) = -1
    cursens(3) = -1
    cursens(1) = -1
    cursens(5) = -1
    cursens(6) = -1
End If

If outbtn = 5 Then
    cursens(2) = -1
    cursens(3) = -1
    cursens(4) = -1
    cursens(1) = -1
    cursens(6) = -1
End If

If outbtn = 6 Then
    cursens(2) = -1
    cursens(3) = -1
    cursens(4) = -1
    cursens(5) = -1
    cursens(1) = -1
End If

End Sub

Private Sub cmdglucide_Click()
cursens(5) = -cursens(5)

razbtn (5)

If cursens(5) = -1 Then
    cmdglucide.Caption = "Glucides (-)"
Else
    cmdglucide.Caption = "Glucides (+)"
End If

cursort = 5
Call updlist(5, cursens(5))

End Sub

Private Sub cmdlipide_Click()
cursens(4) = -cursens(4)

razbtn (4)

If cursens(4) = -1 Then
    cmdlipide.Caption = "Lipides (-)"
Else
    cmdlipide.Caption = "Lipides (+)"
End If
cursort = 4
Call updlist(4, cursens(4))

End Sub

Private Sub cmdorigine_Click()
cursens(2) = -cursens(2)

razbtn (2)

If cursens(2) = -1 Then
    cmdorigine.Caption = "Origine (-)"
Else
    cmdorigine.Caption = "Origine (+)"
End If
cursort = 2
Call updlist(2, cursens(2))

End Sub

Private Sub cmdproteine_Click()
cursens(6) = -cursens(6)

razbtn (6)

If cursens(6) = -1 Then
    cmdproteine.Caption = "Prot|fffd|ines (-)"
Else
    cmdproteine.Caption = "Prot|fffd|ines (+)"
End If

cursort = 6

Call updlist(6, cursens(6))

End Sub

Private Sub cmdraz_Click()
txtaliment.Value = ""
Call updlist(cursort, cursens(cursort))

End Sub

Private Sub cmdupdate_Click()
Dim i As Integer
Dim estvide As Boolean

estvide = True
 
For i = 0 To ListBoxAli.ListCount - 1
    If ListBoxAli.Selected(i) = True Then
        estvide = False
        Exit For
    End If
Next i
If estvide Then Exit Sub

fromaliment = True
updajout = True
valiment = ListBoxAli.List(i, 1)
frm_addaliment.Show

End Sub

Private Sub ListView_BeforeLabelEdit(Cancel As Integer)
Cancel = True
End Sub

Private Sub ListView_Click()

If ListView.SelectedItem Is Nothing Then Exit Sub

If ListView.SelectedItem.Tag = 3 Then
    cmddelete.Enabled = True
    cmdupdate.Enabled = True
        
Else
    cmddelete.Enabled = False
    cmdupdate.Enabled = False
    
End If

End Sub

Private Sub ListView_DblClick()
If ListView.SelectedItem Is Nothing Then Exit Sub

If ListView.SelectedItem.Tag = 3 Then
    
    fromaliment = True
    updajout = True
    valiment = ListView.SelectedItem
    frm_addaliment.Show
End If
End Sub

Private Sub ListView_KeyUp(KeyCode As Integer, ByVal Shift As Integer)

If ListView.SelectedItem Is Nothing Then Exit Sub

If ListView.SelectedItem.Tag = 3 Then
    cmddelete.Enabled = True
    cmdupdate.Enabled = True
        
Else
    cmddelete.Enabled = False
    cmdupdate.Enabled = False
    
End If
End Sub




Private Sub ListBoxAli_Click()
Dim i As Integer
Dim estvide As Boolean

estvide = True
 
For i = 0 To ListBoxAli.ListCount - 1
    If ListBoxAli.Selected(i) = True Then
        estvide = False
        Exit For
    End If
Next i

If estvide Then Exit Sub

If ListBoxAli.List(i, 0) = 3 Then
    cmddelete.Enabled = True
    cmdupdate.Enabled = True
        
Else
    cmddelete.Enabled = False
    cmdupdate.Enabled = False
    
End If
End Sub

Private Sub ListBoxAli_DblClick(ByVal Cancel As MSForms.ReturnBoolean)
Dim i As Integer
Dim estvide As Boolean

estvide = True
 
For i = 0 To ListBoxAli.ListCount - 1
    If ListBoxAli.Selected(i) = True Then
        estvide = False
        Exit For
    End If
Next i

If estvide Then Exit Sub

If ListBoxAli.List(i, 0) = 3 Then
    
    fromaliment = True
    updajout = True
    valiment = ListBoxAli.List(i, 1)
    frm_addaliment.Show
End If
End Sub

Private Sub txtaliment_Change()
Call updlist(cursort, cursens(cursort))
End Sub

Private Sub UserForm_Activate()

cursens(1) = 1
cursens(2) = -1
cursens(3) = -1
cursens(4) = -1
cursens(5) = -1
cursens(6) = -1

loadtable
With ListBoxAli
        .ColumnCount = 7
        .ColumnWidths = "0;210;48;56;55;52"
End With

Call updlist(1, 1)
txtaliment.SetFocus

End Sub

Private Sub updlist(Optional lacol As Integer, Optional sens As Integer)
Dim i As Integer
Dim lval As String
Dim n As Integer
'Dim tabaliment1(10000, 6) As String
Dim tabaliment1() As String
Dim tabaliment2() As String
Dim nbciqual As Long
Dim pluriel As String

nbciqual = Sheets("param").Range("nbciqual")

lval = txtaliment.Value

ListBoxAli.Clear

If Len(lval) = 0 Then
    viewall = True
Else
    viewall = False
    
End If
n = 0

ReDim tabaliment1(0 To 10000, 0 To 6)

If Not alimentcree Then 'on prend tout
    For i = 1 To nbtot1
        If InStr(1, ciqual(i), lval, 1) > 0 Or viewall Then
                       
            tabaliment1(n, 0) = 2 'tag
            tabaliment1(n, 1) = ciqual(i)
            tabaliment1(n, 2) = "ciqual" 'aliment ajout|fffd| ou hors ciqual
            tabaliment1(n, 3) = tabenergie(i)
            tabaliment1(n, 4) = tablipide(i)
            tabaliment1(n, 5) = tabglucide(i)
            tabaliment1(n, 6) = tabproteine(i)
            
            If i > nbciqual And i <= nbtot1 Then 'aliments cr|fffd|es
                tabaliment1(n, 0) = 3 'tag
                tabaliment1(n, 2) = "ajout|fffd|"
            End If
            n = n + 1
        End If
    Next i
Else
    For i = nbciqual + 1 To nbtot1
        If InStr(1, ciqual(i), lval, 1) > 0 Or viewall Then
            tabaliment1(n, 0) = 3 'tag
            tabaliment1(n, 1) = ciqual(i)
            tabaliment1(n, 2) = "ajout|fffd|" 'aliment ajout|fffd| ou hors ciqual
            tabaliment1(n, 3) = tabenergie(i)
            tabaliment1(n, 4) = tablipide(i)
            tabaliment1(n, 5) = tabglucide(i)
            tabaliment1(n, 6) = tabproteine(i)
            n = n + 1
        End If
    Next i

End If

If n = 0 Then
    cmdupdate.Enabled = False
    cmddelete.Enabled = False
    labnb.Caption = "Aucun aliment"

    Exit Sub
End If

ReDim tabaliment2(0 To n - 1, 0 To 6)

For i = 0 To n - 1
    tabaliment2(i, 0) = tabaliment1(i, 0)
    tabaliment2(i, 1) = tabaliment1(i, 1)
    tabaliment2(i, 2) = tabaliment1(i, 2)
    tabaliment2(i, 3) = tabaliment1(i, 3)
    tabaliment2(i, 4) = tabaliment1(i, 4)
    tabaliment2(i, 5) = tabaliment1(i, 5)
    tabaliment2(i, 6) = tabaliment1(i, 6)
Next i

If lacol = 1 Or lacol = 2 Then
    'tri en format texte
    Call Tri2(tabaliment2, LBound(tabaliment2), UBound(tabaliment2), lacol)
Else
    'tri en format num|fffd|rique
    Call Tri2val(tabaliment2, LBound(tabaliment2), UBound(tabaliment2), lacol)
End If

'on met |fffd| jour les unit|fffd|s
For i = 0 To n - 1
    tabaliment2(i, 3) = tabaliment2(i, 3) & " kcal"
    tabaliment2(i, 4) = tabaliment2(i, 4) & " g"
    tabaliment2(i, 5) = tabaliment2(i, 5) & " g"
    tabaliment2(i, 6) = tabaliment2(i, 6) & " g"
Next i

If sens = -1 Then

    ReDim tabaliment1(0 To n - 1, 0 To 6)
    
    'on sauvegarde les valeurs
    
    For i = 0 To n - 1
        tabaliment1(i, 0) = tabaliment2(i, 0)
        tabaliment1(i, 1) = tabaliment2(i, 1)
        tabaliment1(i, 2) = tabaliment2(i, 2)
        tabaliment1(i, 3) = tabaliment2(i, 3)
        tabaliment1(i, 4) = tabaliment2(i, 4)
        tabaliment1(i, 5) = tabaliment2(i, 5)
        tabaliment1(i, 6) = tabaliment2(i, 6)
    Next i

    'on inverse
    For i = 0 To n - 1
        tabaliment2(i, 0) = tabaliment1(n - i - 1, 0)
        tabaliment2(i, 1) = tabaliment1(n - i - 1, 1)
        tabaliment2(i, 2) = tabaliment1(n - i - 1, 2)
        tabaliment2(i, 3) = tabaliment1(n - i - 1, 3)
        tabaliment2(i, 4) = tabaliment1(n - i - 1, 4)
        tabaliment2(i, 5) = tabaliment1(n - i - 1, 5)
        tabaliment2(i, 6) = tabaliment1(n - i - 1, 6)
    Next i

End If

ListBoxAli.List = tabaliment2

If ListBoxAli.ListCount > 1 Then
    pluriel = "s"
Else
    pluriel = ""
End If

labnb.Caption = ListBoxAli.ListCount & " aliment" & pluriel

cmdupdate.Enabled = False
cmddelete.Enabled = False

End Sub

Public Sub loadaliment(aliment As String)
txtaliment.Value = aliment

End Sub
Attribute VB_Name = "frm_besoincal"
Attribute VB_Base = "0{111604F0-EBCD-4ADF-8EB3-97FA4FD3E559}{EF230EE5-DA52-43F3-98D7-6B6C8B57AEC3}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Private Sub cmdclose_Click()
Unload Me
End Sub

Private Sub cmdok_Click()
valider

End Sub

Private Sub valider()
Range("calauto") = opt2.Value

If opt1.Value Then
    If txtcal.Value = "" Then
        MsgBox "Merci de saisir un nombre de calories."
        Exit Sub
    End If
    
    Range("besoincal") = txtcal.Value
End If

calcrepas

If frompoids Then
    updategraphiques
    updcurpoids (Mid(Range("poidsdu"), 10, 10))
    
End If

If fromcal Then
    updategraphiquescal
End If

Unload Me

End Sub
Private Sub opt1_Click()
txtcal.Enabled = Not opt2.Value
If txtcal.Enabled Then
    labcal.ForeColor = RGB(0, 0, 0)
Else
    labcal.ForeColor = RGB(200, 200, 200)
End If

End Sub

Private Sub opt2_Change()
txtcal.Enabled = Not opt2.Value
If txtcal.Enabled Then
    labcal.ForeColor = RGB(0, 0, 0)
Else
    labcal.ForeColor = RGB(200, 200, 200)
End If
End Sub

Private Sub txtcal_Change()

End Sub

Private Sub txtcal_KeyDown(ByVal KeyCode As MSForms.ReturnInteger, ByVal Shift As Integer)
If KeyCode = vbKeyReturn Then
    valider

End If

End Sub

Private Sub UserForm_Initialize()
Dim auto As Boolean
Dim besoincal As Double

auto = Range("calauto")
besoincal = Range("besoincal")

If auto Then
    opt2.Value = True
    opt1.Value = False
    
    txtcal.Value = ""
Else
    opt2.Value = False
    opt1.Value = True
    
    txtcal.Value = besoincal
End If

End Sub
Attribute VB_Name = "frm_confirmpassword"
Attribute VB_Base = "0{379B0463-3EF6-4A27-80D0-A2E65B80E7BF}{5EE92A2A-A49F-418A-98A1-54176C4A2370}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Option Explicit

Private Sub cmdcancel_Click()
Unload Me
End Sub

Private Sub cmdok_Click()
    valider
End Sub

Private Sub txtmdp_KeyDown(ByVal KeyCode As MSForms.ReturnInteger, ByVal Shift As Integer)
If KeyCode = vbKeyReturn Then
    valider
    KeyCode = 0
End If

If KeyCode = vbKeyEscape Then
    Unload Me
End If

End Sub

Sub valider()
Dim isprotected As Boolean
isprotected = Range("isprotected")

If wishsave Then
    If Not isprotected Then
        If txtmdp.Value = mdp1 Then
            Range("isprotected") = True
            Range("mdp") = mdp1
            ActiveWorkbook.Password = mdp1
            MsgBox "Le fichier est maintenant prot|fffd|g|fffd| par un mot de passe."
            Unload Me
            frm_password.Hide

        Else
            MsgBox "Le mot de passe n'est pas correct."
            txtmdp.SetFocus
        End If
    End If
Else
    If isprotected Then
        If txtmdp.Value = Range("mdp") Then
            Range("isprotected") = False
            Range("mdp") = ""
            ActiveWorkbook.Password = ""

            MsgBox "Le fichier n'est plus prot|fffd|g|fffd|."
            Unload Me
            frm_password.Hide
        Else
            MsgBox "Le mot de passe n'est pas correct."
            txtmdp.SetFocus
        End If
    End If
End If

End Sub

Private Sub UserForm_Click()

End Sub

Attribute VB_Name = "frm_control"
Attribute VB_Base = "0{472E35EA-1726-4683-B7FD-1C7D97A67DF4}{3C33C10C-CE58-4952-AE7C-716510F82EB3}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Option Explicit

Dim nbpoids As Integer
Dim decal As Integer
Dim stopeventcmb As Boolean

Private Sub chkall_Change()
If chkall.Value Then
    txtnbval.Value = nbpoids
End If
End Sub

Private Sub chkall_KeyDown(ByVal KeyCode As MSForms.ReturnInteger, ByVal Shift As Integer)
If KeyCode = vbKeyEscape Then
    Unload Me
End If
End Sub

Private Sub cmbannule_Click()
Unload Me
End Sub

Private Sub cmbannule_KeyDown(ByVal KeyCode As MSForms.ReturnInteger, ByVal Shift As Integer)
If KeyCode = vbKeyEscape Then
    Unload Me
End If
End Sub

Private Sub cmbfrom_Click()
Dim d1 As Date
Dim d2 As Date
If stopeventcmb Then Exit Sub

d1 = cmbfrom.Value
d2 = cmbto.Value

If d2 < d1 Then cmbto.Value = cmbfrom.Value
End Sub

Private Sub cmbfrom_KeyDown(ByVal KeyCode As MSForms.ReturnInteger, ByVal Shift As Integer)
If KeyCode = vbKeyEscape Then
    Unload Me
End If


End Sub

Private Sub cmbto_KeyDown(ByVal KeyCode As MSForms.ReturnInteger, ByVal Shift As Integer)
If KeyCode = vbKeyEscape Then
    Unload Me
End If
End Sub

Private Sub cmdok_Click()

valider

End Sub

Private Sub valider()
Dim date1 As Date
Dim date2 As Date

Range("decal") = txtnbval.Value

If optperiode.Value = True Then
    If cmbfrom.Value = "" Or cmbto.Value = "" Then
    
        MsgBox ("les dates sont obligatoires.")
        cmbfrom.ListIndex = 0
        cmbto.ListIndex = 0
            
    End If

End If

If cmbfrom.Value <> "" And cmbto.Value <> "" Then
    On Error GoTo erreurdate
    date1 = CDate(cmbfrom.Value)
    date2 = CDate(cmbto.Value)

    If date2 < date1 Then
        MsgBox ("La date d'arriv|fffd|e doit |fffd|tre sup|fffd|rieure ou |fffd|gale |fffd| celle du d|fffd|part")
        cmbto.Value = cmbfrom.Value
    End If
    
End If

Range("croix") = chkcroix.Value
Range("lissage") = chklisser.Value
Range("chkall") = optall.Value

'If txtnbval = nbpoids Then Range("chkall") = "Vrai"

Range("datefrom") = Format(cmbfrom.Value, "mm/dd/yyyy")
Range("dateto") = Format(cmbto.Value, "mm/dd/yyyy")

If optall.Value = True Then Range("typegraphique") = "all"
If optlast.Value = True Then Range("typegraphique") = "last"
If optperiode.Value = True Then Range("typegraphique") = "periode"

If nbpoids > 0 Then
    updategraphiques
    updatepoids
    
End If

Exit Sub
erreurdate:
MsgBox ("Il y a un probl|fffd|me avec les dates.")
End Sub

Private Sub cmdok_KeyDown(ByVal KeyCode As MSForms.ReturnInteger, ByVal Shift As Integer)
If KeyCode = vbKeyEscape Then
    Unload Me
End If
End Sub

Private Sub optall_Click()
txtnbval.Enabled = False
cmbfrom.Enabled = False
cmbto.Enabled = False

End Sub

Private Sub optlast_Click()

cmbfrom.Enabled = False
cmbto.Enabled = False
txtnbval.Enabled = True
optall.Enabled = True

End Sub

Private Sub optlast_KeyDown(ByVal KeyCode As MSForms.ReturnInteger, ByVal Shift As Integer)
If KeyCode = vbKeyEscape Then
    Unload Me
End If
End Sub

Private Sub optperiode_Click()
Dim i As Integer
On Error GoTo erreur
cmbfrom.Enabled = True
cmbto.Enabled = True
txtnbval.Enabled = False
optall.Value = False

Exit Sub
erreur:
End Sub


Private Sub optperiode_KeyDown(ByVal KeyCode As MSForms.ReturnInteger, ByVal Shift As Integer)
If KeyCode = vbKeyEscape Then
    Unload Me
End If
End Sub

Private Sub txtnbval_AfterUpdate()


End Sub

Private Sub txtnbval_BeforeUpdate(ByVal Cancel As MSForms.ReturnBoolean)
controlnbval

End Sub

Private Sub controlnbval()
    If txtnbval.Value < 1 Then
                
        MsgBox ("La valeur doit |fffd|tre sup|fffd|rieure ou |fffd|gale |fffd| 1.")
        
        txtnbval = 1
                
    ElseIf txtnbval.Value > nbpoids And nbpoids > 0 Then
        
        MsgBox ("La valeur doit |fffd|tre inf|fffd|rieure au nombre d'enregistrements: " & nbpoids)
        decal = nbpoids
    End If
End Sub

Private Sub txtnbval_Change()
'On Error GoTo erreur
'If txtnbval.Text <> nbpoids Then
'    chkall.Value = False
'Else
'   chkall.Value = True

'End If
'Exit Sub
'erreur:
End Sub

Private Sub txtnbval_DblClick(ByVal Cancel As MSForms.ReturnBoolean)

End Sub

Private Sub txtnbval_KeyDown(ByVal KeyCode As MSForms.ReturnInteger, ByVal Shift As Integer)

If KeyCode = vbKeyEscape Then
    Unload Me
End If

If KeyCode = vbKeyReturn Then
    controlnbval
    valider
End If


End Sub

Private Sub UserForm_Initialize()
Dim i As Integer

decal = Range("decal")
nbpoids = Range("nbpoids")

If nbpoids > 0 Then
    txtnbval.Value = decal
Else
    txtnbval.Value = 0
End If

If Range("chkall") = "Vrai" Then
    optall.Value = True
    txtnbval.Value = nbpoids
    txtnbval.Enabled = False
Else
    optall.Value = False
End If

If Range("typegraphique") = "periode" Then
    optperiode.Value = True
End If

If Range("typegraphique") = "last" Then
    optlast.Value = True
End If

If Range("croix") = "Vrai" Then
    chkcroix.Value = True
Else
    chkcroix.Value = False
End If

If Range("lissage") = "Vrai" Then
    chklisser.Value = True
Else
    chklisser.Value = False
End If

stopeventcmb = True
If nbpoids = 0 Then Exit Sub

For i = 1 To nbpoids
    cmbfrom.AddItem Sheets("bddpoids").Cells(i + 1, 1)
    cmbto.AddItem Sheets("bddpoids").Cells(i + 1, 1)
Next

cmbfrom.ListIndex = 0
cmbto.ListIndex = nbpoids - 1

stopeventcmb = False

End Sub

Private Sub UserForm_KeyDown(ByVal KeyCode As MSForms.ReturnInteger, ByVal Shift As Integer)
If KeyCode = vbKeyEscape Then
    Unload Me
End If
End Sub

Attribute VB_Name = "frm_controlcalorie"
Attribute VB_Base = "0{477686BC-469F-4F15-8C76-892AB0F5B388}{89F74AC5-6C74-4627-8925-341D347E98FE}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Option Explicit

Dim nbrepas As Integer
Dim decalcal As Integer
Dim stopeventcmb  As Boolean

Private Sub chkallcal_Change()
If chkallcal.Value Then
    txtnbval.Value = nbrepas
End If
End Sub

Private Sub chkallcal_KeyDown(ByVal KeyCode As MSForms.ReturnInteger, ByVal Shift As Integer)
If KeyCode = vbKeyEscape Then
    Unload Me
End If
End Sub

Private Sub cmbannule_Click()
Unload Me
End Sub

Private Sub cmbannule_KeyDown(ByVal KeyCode As MSForms.ReturnInteger, ByVal Shift As Integer)
If KeyCode = vbKeyEscape Then
    Unload Me
End If
End Sub


Private Sub cmbfrom_Click()
Dim d1 As Date
Dim d2 As Date
If stopeventcmb Then Exit Sub

d1 = cmbfrom.Value
d2 = cmbto.Value

If d2 < d1 Then cmbto.Value = cmbfrom.Value
End Sub

Private Sub cmbfrom_KeyDown(ByVal KeyCode As MSForms.ReturnInteger, ByVal Shift As Integer)
If KeyCode = vbKeyEscape Then
    Unload Me
End If
End Sub

Private Sub cmbto_KeyDown(ByVal KeyCode As MSForms.ReturnInteger, ByVal Shift As Integer)
If KeyCode = vbKeyEscape Then
    Unload Me
End If
End Sub

Private Sub cmdok_Click()

valider

End Sub

Private Sub valider()
Dim date1 As Date
Dim date2 As Date
On Error GoTo erreurdate
Range("decalcal") = txtnbval.Value

If optperiode.Value = True Then
    If cmbfrom.Value = "" Or cmbto.Value = "" Then
    
        MsgBox ("les dates sont obligatoires.")
        cmbfrom.ListIndex = 0
        cmbto.ListIndex = 0
            
    End If

End If

If cmbfrom.Value <> "" And cmbto.Value <> "" Then
    On Error GoTo erreurdate
    date1 = CDate(cmbfrom.Value)
    date2 = CDate(cmbto.Value)

    If date2 < date1 Then
        MsgBox ("La date d'arriv|fffd|e doit |fffd|tre sup|fffd|rieure ou |fffd|gale |fffd| celle du d|fffd|part")
        cmbto.Value = cmbfrom.Value
    End If
    
End If

Range("croixcal") = chkcroix.Value
Range("lissagecal") = chklisser.Value
Range("chkallcal") = optallcal.Value

'If txtnbval = nbrepas Then Range("chkallcal") = "Vrai"

Range("datefromcal") = Format(cmbfrom.Value, "mm/dd/yyyy")
Range("datetocal") = Format(cmbto.Value, "mm/dd/yyyy")

If optallcal.Value = True Then Range("typegraphiquecal") = "all"
If optlast.Value = True Then Range("typegraphiquecal") = "last"
If optperiode.Value = True Then Range("typegraphiquecal") = "periode"

If nbrepas > 0 Then
    updategraphiquescal
    
End If

Exit Sub
erreurdate:
MsgBox ("Il y a un probl|fffd|me avec les dates.")
End Sub

Private Sub cmdok_KeyDown(ByVal KeyCode As MSForms.ReturnInteger, ByVal Shift As Integer)
If KeyCode = vbKeyEscape Then
    Unload Me
End If
End Sub

Private Sub optallcal_Click()
txtnbval.Enabled = False
cmbfrom.Enabled = False
cmbto.Enabled = False
End Sub

Private Sub optlast_Click()

cmbfrom.Enabled = False
cmbto.Enabled = False
txtnbval.Enabled = True
optallcal.Enabled = True

End Sub

Private Sub optlast_KeyDown(ByVal KeyCode As MSForms.ReturnInteger, ByVal Shift As Integer)
If KeyCode = vbKeyEscape Then
    Unload Me
End If
End Sub

Private Sub optperiode_Click()
On Error GoTo erreur
cmbfrom.Enabled = True
cmbto.Enabled = True
txtnbval.Enabled = False
optallcal.Value = False

Exit Sub
erreur:

End Sub


Private Sub optperiode_KeyDown(ByVal KeyCode As MSForms.ReturnInteger, ByVal Shift As Integer)
If KeyCode = vbKeyEscape Then
    Unload Me
End If
End Sub

Private Sub txtnbval_AfterUpdate()


End Sub

Private Sub txtnbval_BeforeUpdate(ByVal Cancel As MSForms.ReturnBoolean)
controlnbval

End Sub

Private Sub controlnbval()
    If txtnbval.Value < 1 Then
                
        MsgBox ("La valeur doit |fffd|tre sup|fffd|rieure ou |fffd|gale |fffd| 1.")
        
        txtnbval = 1
                
    ElseIf txtnbval.Value > nbrepas And nbrepas > 0 Then
        
        MsgBox ("La valeur doit |fffd|tre inf|fffd|rieure au nombre d'enregistrements: " & nbrepas)
        decalcal = nbrepas
    End If
End Sub

Private Sub txtnbval_Change()
'On Error GoTo erreur
'If txtnbval.Text <> nbrepas Then
'    chkallcal.Value = False
'Else
'    chkallcal.Value = True'

'End If
'Exit Sub
'erreur:
End Sub

Private Sub txtnbval_DblClick(ByVal Cancel As MSForms.ReturnBoolean)

End Sub

Private Sub txtnbval_KeyDown(ByVal KeyCode As MSForms.ReturnInteger, ByVal Shift As Integer)

If KeyCode = vbKeyEscape Then
    Unload Me
End If

If KeyCode = vbKeyReturn Then
    controlnbval
    valider
End If


End Sub

Private Sub UserForm_Initialize()
Dim i As Integer

decalcal = Range("decalcal")
nbrepas = Range("nbrepas")
txtnbval.Value = decalcal

If Range("chkallcal") = "Vrai" Then
    optallcal.Value = True
    txtnbval.Value = nbrepas
    txtnbval.Enabled = False
Else
    optallcal.Value = False
End If

If Range("typegraphiquecal") = "periode" Then
    optperiode.Value = True
End If

If Range("typegraphiquecal") = "last" Then
    optlast.Value = True
End If

If Range("croixcal") = "Vrai" Then
    chkcroix.Value = True
Else
    chkcroix.Value = False
End If

If Range("lissagecal") = "Vrai" Then
    chklisser.Value = True
Else
    chklisser.Value = False
End If

stopeventcmb = True

If nbrepas = 0 Then Exit Sub

For i = 1 To nbrepas
    cmbfrom.AddItem Sheets("bddrepas").Cells(i + 1, 1)
    cmbto.AddItem Sheets("bddrepas").Cells(i + 1, 1)
Next

cmbfrom.ListIndex = 0
cmbto.ListIndex = nbrepas - 1

stopeventcmb = False

End Sub

Private Sub UserForm_KeyDown(ByVal KeyCode As MSForms.ReturnInteger, ByVal Shift As Integer)
If KeyCode = vbKeyEscape Then
    Unload Me
End If
End Sub


Attribute VB_Name = "frm_dateimc"
Attribute VB_Base = "0{ADC31104-83F7-404A-8392-13BC715270C9}{B7483956-9263-4E5D-ADDE-8AEEF694439E}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Private Sub cmbdate_Change()
On Error GoTo erreur
clicimcdate (cmbdate.Value)

Exit Sub
erreur:

End Sub

Private Sub cmdclose_Click()
Unload Me
End Sub

Private Sub UserForm_Activate()
loaddate
End Sub


Private Sub loaddate()
Dim i As Integer
Dim nbpoids As Integer

nbpoids = Range("nbpoids")

For i = 2 To nbpoids + 1
    cmbdate.AddItem Sheets("bddpoids").Cells(i, 1)
    
Next i

End Sub
Attribute VB_Name = "frm_datepoids"
Attribute VB_Base = "0{12246AEB-6833-44C4-A25C-69DB83D76929}{32D54CAB-DEB3-486E-902B-D9B07B8BE476}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Option Explicit

Private Sub cmbdate_Change()
On Error GoTo erreur

vdatepoids = cmbdate.Value

Range("poidsdu") = "Poids du " & vdatepoids

updcurpoids (vdatepoids)

Exit Sub
erreur:
End Sub

Private Sub cmdclose_Click()
Unload Me
End Sub

Private Sub cmdgodate_Click()
On Error GoTo erreur
valider (txtdate.Value)
Exit Sub

erreur:
End Sub

Private Sub valider(ldate As Date)
On Error GoTo erreur

If IsNull(ldate) Or str(ldate) = "" Then Exit Sub

vdatepoids = ldate

Range("poidsdu") = "Poids du " & vdatepoids

updcurpoids (vdatepoids)

Exit Sub

erreur:

End Sub


Private Sub UserForm_Activate()
loaddate
End Sub

Private Sub loaddate()
Dim i As Integer
Dim nbpoids As Integer

nbpoids = Range("nbpoids")

For i = 2 To nbpoids + 1
    cmbdate.AddItem Sheets("bddpoids").Cells(i, 1)
    
Next i

End Sub

Attribute VB_Name = "frm_daterepas"
Attribute VB_Base = "0{F6E7D77F-0C6C-4476-82D9-095E4385A284}{92E178CD-4E58-4964-964D-8199726E643D}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Private Sub cmbdate_Change()
valider (cmbdate.Value)

End Sub

Private Sub cmdclose_Click()
Unload Me
End Sub


Private Sub cmdgodate_Click()
On Error GoTo erreur
valider (txtdate.Value)
Exit Sub

erreur:

End Sub


Private Sub txtdate_KeyDown(ByVal KeyCode As MSForms.ReturnInteger, ByVal Shift As Integer)
On Error GoTo erreur

If KeyCode = vbKeyReturn Then
    valider (txtdate.Value)

End If
Exit Sub

erreur:

End Sub

Private Sub UserForm_Activate()
loaddate
End Sub

Private Sub loaddate()
Dim i As Integer
Dim nbrepas As Integer

nbrepas = Range("nbrepas")

For i = 2 To nbrepas + 1
    cmbdate.AddItem Sheets("bddrepas").Cells(i, 1)
    
Next i

End Sub

Private Sub valider(ldate As Date)
'On Error GoTo erreur

If IsNull(ldate) Or str(ldate) = "" Then Exit Sub

vdate = ldate

Range("repasdu") = "Repas du " & ldate

disprepas (ldate)

Exit Sub

erreur:

End Sub
Attribute VB_Name = "frm_getaliment"
Attribute VB_Base = "0{8C1DB6E1-E5AD-4A5D-AC4A-74235E0DA920}{E4F6E866-E6DD-423D-8849-FE0C5809D2D7}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Option Explicit
Dim outciqual As Boolean
Dim viewall As Boolean

Private Sub chkfavori_Click()
If chkfavori.Value Then
    chkoutciqual.Value = True
Else
    chkoutciqual.Value = False
End If

updlist
End Sub

Private Sub chkoutciqual_Click()
outciqual = chkoutciqual.Value

If Not chkoutciqual.Value And chkfavori.Value Then
    chkfavori.Value = False
End If


updlist

End Sub

Private Sub cmdquitter_Click()
End Sub

Private Sub cmdclose_Click()
Unload Me
End Sub

Private Sub cmdadd_Click()
updajout = False
fromaliment = False
frm_addaliment.Show

End Sub

Private Sub cmddelete_Click()
Dim i As Integer
Dim estvide As Boolean

estvide = True
 
For i = 0 To ListBoxAliment.ListCount - 1
    If ListBoxAliment.Selected(i) = True Then
        estvide = False
        Exit For
    End If
Next i

'On Error GoTo erreur
If estvide Then Exit Sub

If ListBoxAliment.List(i, 0) = 1 Then
    delete
Else
    If ListBoxAliment.List(i, 0) = 3 Then deleteajout
End If

Exit Sub
erreur:

End Sub

Private Sub deleteajout()
Dim i As Integer
Dim j As Integer
Dim aliment As String
Dim unite As String
Dim idciqual As String
Dim alimentlien As String
Dim unitelien As String
Dim estvide As Boolean
Dim nblien As Integer
Dim nbciqual As Integer

estvide = True
 
For i = 0 To ListBoxAliment.ListCount - 1
    If ListBoxAliment.Selected(i) = True Then
        estvide = False
        Exit For
    End If
Next i

If estvide Then Exit Sub

nblien = Sheets("bddlien").Range("nbliens")
nbciqual = Sheets("param").Range("nbciqual")

aliment = ListBoxAliment.List(i, 1)
unite = ListBoxAliment.List(i, 3)

If MsgBox("L'aliment et ses aliments associ|fffd|s seront |fffd|galement supprim|fffd|s des repas et des menus d|fffd|j|fffd| enregistr|fffd|s." + Chr(13) + Chr(13) + "Souhaitez-vous continuer ?", vbYesNo) = vbYes Then

    For i = nbciqual + 2 To nbtot + 1
        If Sheets("bddciqual").Cells(i, 4) = aliment Then GoTo found
        If Sheets("bddciqual").Cells(i, 4) = "" Then
            Exit Sub
        End If
    Next i
    
    Exit Sub
    
found:
    idciqual = Sheets("bddciqual").Cells(i, 3)
    Worksheets("bddciqual").Rows(i).EntireRow.delete

    For i = 1 To 20000
        If Sheets("bddlien").Cells(i, 1) = "" Then GoTo suite
        If Sheets("bddlien").Cells(i, 4) = idciqual Then
        
            alimentlien = Sheets("bddlien").Cells(i, 1)
            unitelien = Sheets("bddlien").Cells(i, 2)
            
            Call deleterepas(alimentlien, unitelien)
            Call deletemenu(alimentlien, unitelien)
            
            Worksheets("bddlien").Rows(i).EntireRow.delete
            i = i - 1
        End If
    Next i
suite:
    
    loadtable
    updlist
    
    'on met |fffd| jour le userform appelant
    frm_updaliment.loadval
    
    If IsUserFormLoaded("frm_addmenu") Then frm_addmenu.loadmenufrm
    
    'on rafraichit la feuille
    disprepas (vdate)

    'on rafra|fffd|chit le userform
    refreshaliment = True
    
    If IsUserFormLoaded("frm_repas") Then frm_repas.loadrepas (vnumero)
    
    'on rafraichit les menus
    If frommenu Then dispmenu
    
End If

End Sub

Private Sub delete()
Dim i As Integer
Dim aliment As String
Dim unite As String
Dim estvide As Boolean
Dim nblien As Integer

estvide = True
 
For i = 0 To ListBoxAliment.ListCount - 1
    If ListBoxAliment.Selected(i) = True Then
        estvide = False
        Exit For
    End If
Next i

If estvide Then Exit Sub

nblien = Sheets("bddlien").Range("nbliens")

aliment = ListBoxAliment.List(i, 1)
unite = ListBoxAliment.List(i, 4)

If MsgBox("L'aliment sera |fffd|galement supprim|fffd| des repas et des menus d|fffd|j|fffd| enregistr|fffd|s." + Chr(13) + Chr(13) + "Souhaitez-vous continuer ?", vbYesNo) = vbYes Then
    For i = 2 To nblien + 1
        If Sheets("bddlien").Cells(i, 1) = aliment And Sheets("bddlien").Cells(i, 2) = unite Then
            GoTo trouve:
        End If
    Next i
    Exit Sub
    
trouve:
    Worksheets("bddlien").Rows(i).EntireRow.delete
    
    Call deleterepas(aliment, unite)
    Call deletemenu(aliment, unite)

    loadtable
    updlist
    
    'on met |fffd| jour le userform appelant
    'retouraliment = nouv
    frm_updaliment.loadval
    
    'on rafraichit la feuille
    disprepas (vdate)

    'on rafra|fffd|chit le userform
    refreshaliment = True
    frm_repas.loadrepas (vnumero)
    
    'on rafraichit les menus
    If frommenu Then
        dispmenu
        Exit Sub
    End If
    
End If

End Sub

Private Sub cmdrename_Click()
Dim nouv As String
Dim aliment As String
Dim unite As String
Dim i As Integer

aliment = ListView.SelectedItem
unite = ListView.SelectedItem.ListSubItems(1).Text
    
nouv = InputBox("Saisissez le nouveau nom de l'aliment", "Nouveau nom", ListView.SelectedItem)

If StrPtr(nouv) = 0 Then Exit Sub  'cancel

If nouv = "" Then
    MsgBox ("Merci de saisir un nom ou d'annuler.")
    Exit Sub
End If

For i = 2 To 10000
    If Sheets("bddlien").Cells(i, 1) = aliment And Sheets("bddlien").Cells(i, 2) = unite Then
        GoTo trouve:
    End If
Next i
Exit Sub

trouve:

If MsgBox("Les repas comportant l'aliment d'origine seront mis |fffd| jour avec le nouveau nom." + Chr(13) + Chr(13) + "Souhaitez-vous continuer ?", vbYesNo) = vbYes Then

    Call renamerepas(aliment, unite, nouv)
    Sheets("bddlien").Cells(i, 1) = nouv
    txtaliment.Value = nouv
    loadtable
    updlist
    
    'on met |fffd| jour le userform appelant
    retouraliment = nouv
    frm_updaliment.loadval
    
    'on rafraichit la feuille
    disprepas (vdate)

    'on rafra|fffd|chit le userform
    refreshaliment = True
    frm_repas.loadrepas (vnumero)

End If

End Sub

Private Sub cmdraz_Click()
txtaliment.Value = ""
updlist
End Sub

Private Sub cmdselect_Click()
Dim estvide As Boolean
Dim i As Integer

estvide = True

For i = 0 To ListBoxAliment.ListCount - 1
    If ListBoxAliment.Selected(i) = True Then
        estvide = False
        Exit For
    End If
Next i

If estvide Then Exit Sub
 
If ListBoxAliment.List(i, 0) = 2 Or ListBoxAliment.List(i, 0) = 3 Then
    'c'est un aliment Ciqual
    retouraliment = ListBoxAliment.List(i, 1)
    retourunite = ListBoxAliment.List(i, 4)
    retourmasseunite = Replace(ListBoxAliment.List(i, 4), "g", "")

    frm_majaliment.Show

Else
    If ListBoxAliment.ListCount > 0 Then doret

End If

End Sub

Private Sub cmdupdate_Click()
Dim i As Integer
Dim estvide As Boolean

estvide = True
 
For i = 0 To ListBoxAliment.ListCount - 1
    If ListBoxAliment.Selected(i) = True Then
        estvide = False
        Exit For
    End If
Next i

'On Error GoTo erreur:
If estvide Then Exit Sub

If ListBoxAliment.List(i, 0) = 1 Then
    doupd
Else
    If ListBoxAliment.List(i, 0) = 3 Then updateajout
End If

Exit Sub
erreur:
End Sub

Private Sub updateajout()
Dim i As Integer
Dim estvide As Boolean

estvide = True
 
For i = 0 To ListBoxAliment.ListCount - 1
    If ListBoxAliment.Selected(i) = True Then
        estvide = False
        Exit For
    End If
Next i
If estvide Then Exit Sub

updajout = True
valiment = ListBoxAliment.List(i, 1)
frm_addaliment.Show

End Sub

Private Sub doupd()
Dim i As Integer
Dim estvide As Boolean

estvide = True
 
For i = 0 To ListBoxAliment.ListCount - 1
    If ListBoxAliment.Selected(i) = True Then
        estvide = False
        Exit For
    End If
Next i

If estvide Then Exit Sub

retouraliment = ListBoxAliment.List(i, 1)
If ListBoxAliment.List(i, 3) = "oui" Then
    retourfavori = True
Else
    retourfavori = False
End If

retourunite = ListBoxAliment.List(i, 4)
retourmasseunite = Replace(ListBoxAliment.List(i, 5), "g", "")

frm_majaliment.Show

End Sub

Private Sub ListView_BeforeLabelEdit(Cancel As Integer)
Cancel = True
End Sub

Private Sub ListView_Click()

If ListView.SelectedItem Is Nothing Then
    cmdselect.Enabled = False

Else
    cmdselect.Enabled = True
    
    If ListView.SelectedItem.Tag = 1 Or ListView.SelectedItem.Tag = 3 Then
        cmddelete.Enabled = True
        cmdupdate.Enabled = True
        
    Else
        cmddelete.Enabled = False
        cmdupdate.Enabled = False
    
    End If

End If


End Sub

Private Sub ListView_DblClick()
If ListView.SelectedItem Is Nothing Then
    Exit Sub
Else

    If ListView.SelectedItem.Tag = 2 Or ListView.SelectedItem.Tag = 3 Then
        'c'est un aliment Ciqual
        retouraliment = ListView.SelectedItem
        retourunite = ListView.SelectedItem.ListSubItems(1).Text
        retourmasseunite = Replace(ListView.SelectedItem.ListSubItems(2).Text, "g", "")
    
        frm_majaliment.Show
    
    Else
        If ListView.ListItems.Count > 0 Then doret
    
    End If
End If
End Sub

Private Sub ListView_KeyDown(KeyCode As Integer, ByVal Shift As Integer)
If ListView.SelectedItem Is Nothing Then Exit Sub

If KeyCode = vbKeyReturn Then

    
    If ListView.SelectedItem.Tag > 1 Then
        'c'est un aliment Ciqual
        retouraliment = ListView.SelectedItem
        retourunite = ListView.SelectedItem.ListSubItems(1).Text
        retourmasseunite = Replace(ListView.SelectedItem.ListSubItems(2).Text, "g", "")
    
        frm_majaliment.Show

    Else
        If ListView.ListItems.Count > 0 Then doret

    End If

End If

End Sub

Private Sub doret()
Dim i As Integer
Dim estvide As Boolean
estvide = True

For i = 0 To ListBoxAliment.ListCount - 1
    If ListBoxAliment.Selected(i) = True Then
        estvide = False
        Exit For
    End If
Next i

If estvide Then Exit Sub

If ListBoxAliment.List(i, 0) = 1 Then
    'c'est un aliment pr|fffd|sent dans lien
    isciqual = False
    retouraliment = ListBoxAliment.List(i, 1)
    retourunite = ListBoxAliment.List(i, 4)
    Unload Me
    
    If (operepas = "add" Or operepas = "addmenu") Then
    
        If Not IsUserFormLoaded("frm_updaliment") Then
            frm_updaliment.Show
        Else
            frm_updaliment.loadval
        End If
    Else
        frm_updaliment.loadval
    End If
    
Else
    'c'est un aliment absent de lien
    isciqual = True
    retouraliment = ListBoxAliment.List(i, 1)
    'on recherche l'identifiant ciqual
    For i = 2 To 20000
        If retouraliment = Sheets("bddciqual").Cells(i, 4) Then
            idciqual = Sheets("bddciqual").Cells(i, 3)
            
            GoTo trouve
        End If
    Next i
trouve:
    
    Unload Me
    
    If (operepas = "add" Or operepas = "addmenu") And Not IsUserFormLoaded("frm_updaliment") Then
        frm_updaliment.Show
    Else
        frm_updaliment.loadval
    End If
    
End If

End Sub

Private Sub ListView_KeyUp(KeyCode As Integer, ByVal Shift As Integer)

If ListView.SelectedItem Is Nothing Then
    cmdselect.Enabled = False
    
Else

    cmdselect.Enabled = True
    
    If ListView.SelectedItem.Tag = 1 Or ListView.SelectedItem.Tag = 3 Then
        cmddelete.Enabled = True
        cmdupdate.Enabled = True
        
    Else
        cmddelete.Enabled = False
        cmdupdate.Enabled = False
        
    End If
End If
End Sub

Private Sub ListBoxAliment_Click()
Dim i As Integer
Dim nonvide As Boolean

nonvide = False

For i = 0 To ListBoxAliment.ListCount - 1
    If ListBoxAliment.Selected(i) Then
        nonvide = True
        Exit For
    End If
Next i

If Not nonvide Then
    cmdselect.Enabled = False

Else
    cmdselect.Enabled = True
    
    If ListBoxAliment.List(i, 0) = 1 Or ListBoxAliment.List(i, 0) = 3 Then
        cmddelete.Enabled = True
        cmdupdate.Enabled = True
        
    Else
        cmddelete.Enabled = False
        cmdupdate.Enabled = False
    
    End If

End If
End Sub

Private Sub ListBoxAliment_DblClick(ByVal Cancel As MSForms.ReturnBoolean)
Dim estvide As Boolean
Dim i As Integer

estvide = True

For i = 0 To ListBoxAliment.ListCount - 1
    If ListBoxAliment.Selected(i) = True Then
        estvide = False
        Exit For
    End If
Next i

If estvide Then Exit Sub


If ListBoxAliment.List(i, 0) = 2 Or ListBoxAliment.List(i, 0) = 3 Then
    'c'est un aliment Ciqual
    retouraliment = ListBoxAliment.List(i, 1)
    retourunite = ListBoxAliment.List(i, 3)
    retourmasseunite = Replace(ListBoxAliment.List(i, 4), "g", "")

    frm_majaliment.Show

Else
    If ListBoxAliment.ListCount > 0 Then doret

End If

End Sub

Private Sub ListBoxAliment_KeyDown(ByVal KeyCode As MSForms.ReturnInteger, ByVal Shift As Integer)
Dim estvide As Boolean
Dim i As Integer

estvide = True

For i = 0 To ListBoxAliment.ListCount - 1
    If ListBoxAliment.Selected(i) = True Then
        estvide = False
        Exit For
    End If
Next i

If estvide Then Exit Sub

If KeyCode = vbKeyReturn Then

    If ListBoxAliment.List(i, 0) = 2 Or ListBoxAliment.List(i, 0) = 3 Then
        'c'est un aliment Ciqual
        retouraliment = ListBoxAliment.List(i, 1)
        retourunite = ListBoxAliment.List(i, 3)
        retourmasseunite = Replace(ListBoxAliment.List(i, 4), "g", "")

        frm_majaliment.Show

    Else
        If ListBoxAliment.ListCount > 0 Then doret

    End If
End If

End Sub

Private Sub txtaliment_Change()
updlist

End Sub

Public Sub loadaliment(aliment As String)
txtaliment.Value = aliment
retouraliment = aliment
updlist

End Sub

Public Sub updlist()
Dim i As Integer
Dim lval As String
Dim n As Integer
Dim tabaliment1(20000, 6) As String
Dim tabaliment2() As String
Dim nbciqual As Long
Dim takefavori As Boolean
Dim j As Integer

takefavori = chkfavori.Value

nbciqual = Sheets("param").Range("nbciqual")

lval = txtaliment.Value

ListBoxAliment.Clear

If Len(lval) = 0 Then
    viewall = True
Else
    viewall = False
    
End If
n = 0

If Not outciqual Then 'on prend tout

    For i = 1 To nbtot
        If InStr(1, ciqual(i), lval, 1) > 0 Or viewall Then
            
            tabaliment1(n, 0) = 2 'tag
            tabaliment1(n, 2) = "ciqual" 'aliment ajout|fffd| ou hors ciqual
            tabaliment1(n, 1) = ciqual(i)
            tabaliment1(n, 3) = tabunite(i)
            tabaliment1(n, 4) = masseunite(i) & " g"
            
            If i > nbciqual And i <= nbtot1 Then 'aliments ajout|fffd|s
                tabaliment1(n, 2) = "ajout|fffd|"
                tabaliment1(n, 0) = 3 'tag
            End If
            
            If i > nbtot1 Then 'hors ciqual
          
                    tabaliment1(n, 2) = "associ|fffd|"
                    tabaliment1(n, 0) = 1 'tag
                    If favorialiment(i) Then
                
                    tabaliment1(n, 5) = "oui"
                Else
                    tabaliment1(n, 5) = "non"
                End If
                    
            End If
            n = n + 1
        End If
finboucle1:
    Next i
Else

    For i = nbtot1 + 1 To nbtot
        If InStr(1, ciqual(i), lval, 1) > 0 Or viewall Then
                tabaliment1(n, 0) = 1 'tag
                tabaliment1(n, 2) = "associ|fffd|"
                tabaliment1(n, 1) = ciqual(i)
                tabaliment1(n, 3) = tabunite(i)
                tabaliment1(n, 4) = masseunite(i) & " g"
                If favorialiment(i) Then
                    tabaliment1(n, 5) = "oui"
                Else
                    tabaliment1(n, 5) = "non"
                End If
        n = n + 1
        End If
finboucle2:
    Next i

End If

If n = 0 Then Exit Sub

ReDim tabaliment2(0 To n - 1, 0 To 5)

For i = 0 To n - 1
    tabaliment2(i, 0) = tabaliment1(i, 0)
    tabaliment2(i, 1) = tabaliment1(i, 1)
    tabaliment2(i, 2) = tabaliment1(i, 2)
    tabaliment2(i, 3) = tabaliment1(i, 5)
    tabaliment2(i, 4) = tabaliment1(i, 3)
    tabaliment2(i, 5) = tabaliment1(i, 4)
Next i

If takefavori Then
    
    For i = 0 To n - 1
        If tabaliment1(i, 5) = "oui" Then
            j = j + 1
        End If
    Next i
    If j = 0 Then GoTo suite
    
    ReDim tabaliment2(0 To j - 1, 0 To 5)
    j = 0
    For i = 0 To n - 1
        If tabaliment1(i, 5) = "oui" Then
            tabaliment2(j, 0) = tabaliment1(i, 0)
            tabaliment2(j, 1) = tabaliment1(i, 1)
            tabaliment2(j, 2) = tabaliment1(i, 2)
            tabaliment2(j, 3) = tabaliment1(i, 5)
            tabaliment2(j, 4) = tabaliment1(i, 3)
            tabaliment2(j, 5) = tabaliment1(i, 4)
            j = j + 1
        End If
    Next i
End If

Call Tri2(tabaliment2, LBound(tabaliment2), UBound(tabaliment2), 1)

ListBoxAliment.List = tabaliment2
suite:
cmdselect.Enabled = False
cmdupdate.Enabled = False
cmddelete.Enabled = False

End Sub

Private Sub txtaliment_KeyDown(ByVal KeyCode As MSForms.ReturnInteger, ByVal Shift As Integer)
If KeyCode = vbKeyEscape Then
    Unload Me
End If

If KeyCode = vbKeyDown Then

    If ListBoxAliment.ListCount = 0 Then
        KeyCode = 0
        Exit Sub
    End If
    ListBoxAliment.Selected(0) = True

    ListBoxAliment.SetFocus
End If

End Sub

Private Sub UserForm_Activate()

txtaliment.Value = retouraliment
txtaliment.SelStart = 0
txtaliment.SelLength = Len(retouraliment)

With ListBoxAliment
        .ColumnCount = 6
        .ColumnWidths = "0;234;60;40;68;60"
End With
updlist

End Sub
Attribute VB_Name = "frm_majaliment"
Attribute VB_Base = "0{4AC488A9-E0AC-4CBE-A21A-22F99A526435}{8BDE113C-8A8A-4F3C-961D-855AB87ADF3B}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Option Explicit

Private Sub cmdclose_Click()
Unload Me
End Sub

Private Sub cmdok_Click()
doprocess

End Sub

Private Sub doprocess()
If chkval Then
    savelien
    loadtable
    frm_getaliment.loadaliment (txtaliment.Value)
    Unload Me
End If

End Sub

Private Function chkval()
Dim ret As Boolean

ret = True

If txtaliment.Value = "" Then
    MsgBox "Merci de saisir un nom pour l'aliment."
    ret = False
End If

If cmbunite.Value = "" Then
    MsgBox "Merci de saisir une unit|fffd|."
    ret = False
End If

If Not IsNumeric(txtmasseunite) Then
    MsgBox "Merci de saisir une masse pour l'unit|fffd| choisi."
    ret = False
End If

If getidciqual(txtciqual.Value) = "not found" Or txtciqual.Value = "" Then
    MsgBox "Vous devez faire correspondre l'aliment |fffd| un aliment Ciqual."
    ret = False
End If

chkval = ret
End Function

Private Sub cmdraz_Click()
txtciqual.Value = ""
txtciqual.SetFocus

End Sub

Private Sub ListView_BeforeLabelEdit(Cancel As Integer)
Cancel = True
End Sub

Private Sub ListView_DblClick()
txtciqual.Value = ListView.SelectedItem
End Sub

Private Sub ListView_KeyDown(KeyCode As Integer, ByVal Shift As Integer)
If KeyCode = vbKeyReturn Then
    txtciqual.Value = ListView.SelectedItem

End If
End Sub

Private Sub ListBoxAli_DblClick(ByVal Cancel As MSForms.ReturnBoolean)
Dim i As Integer
Dim estvide As Boolean

estvide = True
 
For i = 0 To ListBoxAli.ListCount - 1
    If ListBoxAli.Selected(i) = True Then
        estvide = False
        Exit For
    End If
Next i

If estvide Then Exit Sub

txtciqual.Value = ListBoxAli.List(i)

End Sub

Private Sub ListBoxAli_KeyDown(ByVal KeyCode As MSForms.ReturnInteger, ByVal Shift As Integer)
Dim i As Integer
Dim estvide As Boolean

estvide = True
 
For i = 0 To ListBoxAli.ListCount - 1
    If ListBoxAli.Selected(i) = True Then
        estvide = False
        Exit For
    End If
Next i
If estvide Then Exit Sub

If KeyCode = vbKeyReturn Then
    txtciqual.Value = ListBoxAli.List(i)
End If
End Sub

Private Sub txtciqual_Change()
updlist
End Sub

Public Sub updlist()
Dim i As Integer
Dim lval As String
Dim n As Integer
Dim viewall As Boolean
Dim tabaliment1(10000) As String
Dim tabaliment2() As String

lval = txtciqual.Value

ListBoxAli.Clear

If Len(lval) = 0 Then
    viewall = True
Else
    viewall = False
End If

n = 0

For i = 1 To nbtot1
        If InStr(1, ciqual(i), lval, 1) > 0 Or viewall Then
        tabaliment1(n) = ciqual(i)
            n = n + 1
        End If
Next i

If n = 0 Then Exit Sub

ReDim tabaliment2(0 To n - 1)

For i = 0 To n - 1
    tabaliment2(i) = tabaliment1(i)

Next i

Call Tri(tabaliment2, LBound(tabaliment2), UBound(tabaliment2))

ListBoxAli.List = tabaliment2

End Sub

Private Sub txtciqual_KeyDown(ByVal KeyCode As MSForms.ReturnInteger, ByVal Shift As Integer)
If KeyCode = vbKeyDown Then

    If ListBoxAli.ListCount = 0 Then
        KeyCode = 0
        Exit Sub
    End If
    ListBoxAli.Selected(0) = True

    ListBoxAli.SetFocus
End If
End Sub

Private Sub savelien()
Dim i As Integer

For i = 2 To 10000
    If Sheets("bddlien").Cells(i, 1) = "" Or (Sheets("bddlien").Cells(i, 1) = txtaliment.Value And Sheets("bddlien").Cells(i, 2) = cmbunite.Value) Then
        GoTo Update
    End If
    
Next i
    
Update:
    Sheets("bddlien").Cells(i, 1) = txtaliment.Value
    Sheets("bddlien").Cells(i, 2) = cmbunite.Value
    Sheets("bddlien").Cells(i, 3) = txtmasseunite.Value / 100
    Sheets("bddlien").Cells(i, 4) = getidciqual(txtciqual.Value)
    Sheets("bddlien").Cells(i, 5) = chkfavori.Value
    
End Sub

Private Function getidciqual(aliment As String) As String
Dim i As Integer

For i = 2 To 10000
    If Sheets("bddciqual").Cells(i, 4) = aliment Then
        getidciqual = Sheets("bddciqual").Cells(i, 3)
        Exit Function
    End If
Next i

getidciqual = "not found"
End Function

Private Sub txtmasseunite_Change()
txtmasseunite.Value = Replace(txtmasseunite.Value, ".", ",")
End Sub

Private Sub txtmasseunite_KeyDown(ByVal KeyCode As MSForms.ReturnInteger, ByVal Shift As Integer)
If KeyCode = vbKeyReturn Then

If chkval Then
    savelien
    loadtable
    frm_getaliment.loadaliment (txtaliment.Value)
    Unload Me
End If

End If
End Sub

Private Sub UserForm_Activate()
Dim nb As Integer

txtaliment.Value = retouraliment
cmbunite.Value = retourunite
txtmasseunite.Value = retourmasseunite

nb = Range("nbunite") + 1
 
If Not getlien(retouraliment, retourunite) Then
    'on est en cr|fffd|ation d'un aliment
    txtciqual.Value = retouraliment
    cmbunite.SetFocus
    chkfavori.Value = False
Else
    txtciqual.Value = getciqual(idciqual)
    txtmasseunite.SetFocus
    chkfavori.Value = retourfavori
End If


cmbunite.RowSource = "param!A2:A" & nb

With ListBoxAli
        .ColumnCount = 1
        .ColumnWidths = "230"
End With

End Sub

Private Function getciqual(idciq As String) As String
Dim i As Integer

For i = 1 To 3000
    If Sheets("bddciqual").Cells(i + 1, 4) = "" Then GoTo suite1
    
    If Sheets("bddciqual").Cells(i + 1, 3) = idciq Then
      
        getciqual = Sheets("bddciqual").Cells(i + 1, 4)
        Exit Function
    End If
Next i

suite1:
getciqual = "not found"
End Function

Attribute VB_Name = "frm_menu"
Attribute VB_Base = "0{C5E56EA8-36C5-40A6-9302-A7526F1B73FB}{1994AC56-E78D-4646-BD00-1F3CF6AA1392}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Private Sub cmdaliment_Click()
frm_aliment.Show
End Sub

Private Sub cmdbesoincal_Click()
frm_besoincal.Show

End Sub

Private Sub cmdcal_Click()
Sheets("Calories").Select
Unload Me
End Sub

Private Sub cmdclose_Click()
Unload Me
End Sub

Private Sub cmdgraph_Click()
If fromcal Then frm_controlcalorie.Show
If frompoids Then frm_control.Show

End Sub

Private Sub cmdhome_Click()
Sheets("Accueil").Select
Unload Me
End Sub

Private Sub cmdimc_Click()
Sheets("IMC").Select
Unload Me

End Sub

Private Sub cmdmenu_Click()
Sheets("Menus").Select
Unload Me

End Sub

Private Sub cmdparam_Click()
frm_param.Show

End Sub

Private Sub cmdpoids_Click()
Sheets("Poids").Select
Unload Me
End Sub

Private Sub cmdrepas_Click()
vdate = Now

Sheets("Repas").Select
Unload Me

End Sub

Private Sub UserForm_Activate()
cmdhome.SetFocus

'If fromrepas Or fromimc Or frommenu Then cmdgraph.Enabled = False

End Sub


Attribute VB_Name = "frm_noterepas"
Attribute VB_Base = "0{14BCFB61-9E14-4CBA-A1BF-BBD900FD9A4D}{88A249C6-1189-4B78-9EAF-AE8654E6608A}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Option Explicit

Private Sub cmdclose_Click()
Unload Me

End Sub

Private Sub cmdok_Click()
Dim lignerepas As Long

lignerepas = Range("lignerepas")

If lignerepas = 0 Then
    Range("curnoterepas") = txtnote.Value
Else
    Sheets("bddrepas").Cells(lignerepas, 12) = txtnote.Value
    Range("curnoterepas") = txtnote.Value
End If

If txtnote.Value = "" Then
    frm_repas.majbtnnote "Notes"
    Range("libnoterepas") = ""
Else
    frm_repas.majbtnnote "Notes (*)"
    Range("libnoterepas") = "Pr|fffd|sence de notes pour cette journ|fffd|e"
End If
Unload Me

End Sub

Private Sub cmdraz_Click()
txtnote.Value = ""

End Sub

Private Sub UserForm_Activate()
Me.Caption = "Notes de la journ|fffd|e du " & vdate
loadnote

End Sub

Private Sub loadnote()
Dim lignerepas As Long
lignerepas = Range("lignerepas")

If lignerepas = 0 Then
    txtnote.Value = Range("curnoterepas")
Else
    txtnote.Value = Sheets("bddrepas").Cells(lignerepas, 12)
End If


End Sub


Attribute VB_Name = "frm_param"
Attribute VB_Base = "0{F609B98D-2E71-4F80-A317-38F1BB2AC811}{14E8AD06-74DA-4562-A189-218B0402DE2C}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Option Explicit

Private Sub cmdclose_Click()
Unload Me

End Sub

Private Sub cmddoublesave_Click()
frm_save.Show

End Sub

Private Sub cmdparamperso_Click()
frm_paramperso.Show

End Sub

Private Sub cmdpassword_Click()
frm_password.Show

End Sub

Private Sub cmdvalidate_Click()
frm_activate.Show
End Sub

Private Sub CommandButton1_Click()

End Sub
Attribute VB_Name = "frm_paramperso"
Attribute VB_Base = "0{9A37C543-D7BC-4E57-AB68-F256708A72AF}{E30DEBE9-EFFB-4ABD-908D-C30374DD5580}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Private Sub cmdclose_Click()
Unload Me
End Sub


Private Sub cmdok_Click()
saveparam

calcrepas

If frompoids Then
    updategraphiques
    updcurpoids (Mid(Range("poidsdu"), 10, 10))
End If

If fromcal Then
    updategraphiquescal
End If

Unload Me

End Sub

Private Sub OptionButton3_Click()

End Sub

Private Sub UserForm_Initialize()
loadparam
End Sub

Private Sub loadparam()
Dim size As Double
Dim sexe As String
Dim birth As Integer
Dim activite As Integer

size = Range("size")
sexe = Range("sexe")
birth = Range("birth")
activite = Range("activite")

If sexe = "F" Then
    optfemme.Value = True
    opthomme.Value = False
Else
    optfemme.Value = False
    opthomme.Value = True
End If

optsedentaire.Value = False
optactif.Value = False
optsportif.Value = False

If activite = 1 Then
    optsedentaire.Value = True
End If

If activite = 2 Then
    optactif.Value = True
End If

If activite = 3 Then
    optsportif.Value = True
End If

txtsize.Value = size
txtbirth.Value = birth

End Sub

Private Sub saveparam()
Dim size As Double
Dim sexe As String
Dim birth As Integer
Dim activite As Integer

If optfemme.Value Then
    sexe = "F"
Else
    sexe = "H"
End If

If optsedentaire.Value Then activite = 1
If optactif.Value Then activite = 2
If optsportif.Value Then activite = 3

size = txtsize.Value
birth = txtbirth.Value

Range("size") = size
Range("sexe") = sexe
Range("birth") = birth
Range("activite") = activite
End Sub
Attribute VB_Name = "frm_password"
Attribute VB_Base = "0{6DB3D5F2-C3AF-4713-9A56-6783A52C82B0}{69F1A41C-2D31-470B-91AE-A46B7F7588B0}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Option Explicit

Private Sub cmdclose_Click()
Unload Me
End Sub

Private Sub cmdok_Click()
valider
End Sub

Private Sub optno_Click()
Dim isprotected As Boolean
isprotected = Range("isprotected")

If Not optno.Value Then
    labnew.Enabled = True
    txtnew.Enabled = True
Else
    labnew.Enabled = False
    txtnew.Enabled = False
End If
End Sub

Private Sub optyes_Click()
Dim isprotected As Boolean
isprotected = Range("isprotected")

If optyes.Value Then
    labnew.Enabled = True
    txtnew.Enabled = True
Else
    labnew.Enabled = False
    txtnew.Enabled = False
End If
End Sub

Private Sub txtnew_KeyDown(ByVal KeyCode As MSForms.ReturnInteger, ByVal Shift As Integer)
If KeyCode = vbKeyReturn Then
    valider
End If
End Sub

Private Sub UserForm_Activate()
Dim isprotected As Boolean

isprotected = Range("isprotected")

optyes.Value = isprotected
optno.Value = Not isprotected
txtnew.Value = ""

If isprotected Then
    labstatut.Caption = "Le fichier est prot|fffd|g|fffd| par un mot de passe."
    labnew.Enabled = False
    txtnew.Enabled = False
    labquestion.Caption = "Souhaitez-vous continuer de prot|fffd|ger le fichier par un mot de passe ?"
    
Else
    labstatut.Caption = "Le fichier n'est pas prot|fffd|g|fffd|."
    labnew.Enabled = False
    txtnew.Enabled = False
    labquestion.Caption = "Souhaitez-vous prot|fffd|ger le fichier par un mot de passe ?"

End If

End Sub

Sub valider()
Dim isprotected As Boolean
isprotected = Range("isprotected")
wishsave = optyes.Value

If wishsave Then
    If Not isprotected Then
        If txtnew.Value = "" Then
            MsgBox "Merci de saisir un mot de passe."
        Else
            mdp1 = txtnew.Value
            frm_confirmpassword.Show
        End If
    Else
        Unload Me
    End If
Else
    If isprotected Then
        mdp1 = txtnew.Value
        frm_confirmpassword.Show
    Else
        Unload Me
    End If
End If

End Sub

Attribute VB_Name = "frm_poids"
Attribute VB_Base = "0{8DD4C624-C417-40C2-AF56-F2B80A180AF8}{0132457E-3F09-41E6-9DF4-9CA8A5ED5F49}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Option Explicit

Private Sub cmdclose_Click()
Unload Me
End Sub

Private Sub cmdok_Click()
savepoids
End Sub

Private Sub savepoids()
Dim i As Integer
Dim d As String
Dim imc As Double
Dim size As Double
Dim poids As Double
Dim ldate As Date
Dim nbcell As Integer
Dim nblimitpoids As Integer
Dim nbpoids As Long

d = Mid$(vdatepoids, 1, 10)
ldate = Format(vdatepoids, "dd/mm/YYYY")

For i = 2 To 20000
    
    If Sheets("bddpoids").Cells(i, 1) = d Then
        GoTo found
    End If
    
    If Sheets("bddpoids").Cells(i, 1) = "" Then
        GoTo notfound
    End If

Next i

notfound:

found:

nbcell = Range("nbpoids")
nblimitpoids = Range("nblimitpoids")

If Not isActivated And (nbcell > nblimitpoids) Then
    MsgBox "Vous avez atteint la limite d'enregistrements pour le poids (" & nblimitpoids & ")."
    MsgBox "Si vous le souhaitez vous pouvez acqu|fffd|rir une cl|fffd| d'activation."
    frm_activate.Show
    Unload Me
    Exit Sub
End If

On Error GoTo erreur

txtsize.Value = Replace(txtsize.Value, ".", ",")
txtpoids.Value = Replace(txtpoids.Value, ".", ",")

If InStr(txtsize.Value, ",") = 0 Then
    MsgBox "Il semble que vous n'avez pas saisi la taille en m|fffd|tre. Il faut une virgule." + Chr(13) + Chr(13) + "(Il faut la saisir avec une virgule)"
    Exit Sub
End If

poids = txtpoids.Value
size = txtsize.Value

imc = poids / (size * size)

Sheets("bddpoids").Cells(i, 1) = ldate
Sheets("bddpoids").Cells(i, 2) = poids
Sheets("bddpoids").Cells(i, 3) = size
Sheets("bddpoids").Cells(i, 4) = Round(imc, 2)
Sheets("bddpoids").Cells(i, 5) = txtremarque.Value

showfrmpoids = False

sortpoids
calcdelta
'showfrmpoids = True

updcurpoids (vdatepoids)
updategraphiques
updatepoids
calcmoy
calcrepas

nbpoids = Range("nbpoids")

If nbpoids = 1 Then MsgBox "Il est normal de ne rien voir sur les graphiques avec une seule valeur de poids saisie." & Chr(13) & Chr(13) & "D|fffd|s qu'une deuxi|fffd|me saisie du poids sera effectu|fffd|e (pour un autre jour) les graphiques seront mis |fffd| jour."

If frominit Then
    MsgBox "C'est termin|fffd|. Vous pouvez maintenant utiliser le logiciel !"
    frominit = False
End If

Unload Me

Exit Sub
erreur:
MsgBox "Vous devez saisir des valeurs num|fffd|riques pour le poids et la taille."

End Sub

Private Sub calcdelta()
Dim nbcell As Integer
Dim i As Integer
Dim p1 As Double
Dim p2 As Double

nbcell = Range("nbpoids")

For i = 3 To nbcell + 1
    p1 = Sheets("bddpoids").Cells(i, 2)
    p2 = Sheets("bddpoids").Cells(i - 1, 2)
    
    Sheets("bddpoids").Cells(i, 6) = p1 - p2

Next i


End Sub
Private Sub txtpoids_Change()
txtpoids.Value = Replace(txtpoids.Value, ".", ",")

End Sub

Private Sub txtpoids_KeyDown(ByVal KeyCode As MSForms.ReturnInteger, ByVal Shift As Integer)
If KeyCode = vbKeyEscape Then
    Unload Me
    Exit Sub
    
End If

If KeyCode = vbKeyReturn Then
    savepoids
End If


End Sub

Private Sub txtremarque_Change()

End Sub

Private Sub txtremarque_KeyDown(ByVal KeyCode As MSForms.ReturnInteger, ByVal Shift As Integer)
If KeyCode = vbKeyEscape Then
    Unload Me
    Exit Sub
End If

End Sub

Private Sub txtsize_Change()
txtsize.Value = Replace(txtsize.Value, ".", ",")

End Sub

Private Sub txtsize_KeyDown(ByVal KeyCode As MSForms.ReturnInteger, ByVal Shift As Integer)
If KeyCode = vbKeyEscape Then
    Unload Me
    Exit Sub
End If
End Sub

Private Sub UserForm_Activate()
Dim d As String
Dim i As Integer
Dim nb As Integer
Dim size As Double

showfrmpoids = False
size = Range("size")

d = Mid$(vdatepoids, 1, 10)

txtdate.Value = d
nb = Range("nbpoids")

For i = 2 To 10000
    
    If Sheets("bddpoids").Cells(i, 1) = d Then
        GoTo found
    End If
    
    If Sheets("bddpoids").Cells(i, 1) = "" Then
        GoTo notfound
    End If

Next i

notfound:

If nb = 0 Then

    If size <> 0 Then
        txtsize.Value = size
        txtpoids.SetFocus
    Else
        txtpoids.SetFocus
    End If
    
Else
    txtsize.Value = Sheets("bddpoids").Cells(nb + 1, 3)
    txtpoids.Value = Sheets("bddpoids").Cells(nb + 1, 2)
    txtpoids.SetFocus
    
End If
Exit Sub

found:
txtpoids.Value = Sheets("bddpoids").Cells(i, 2)
txtsize.Value = Sheets("bddpoids").Cells(i, 3)
txtremarque.Value = Sheets("bddpoids").Cells(i, 5)

txtpoids.SetFocus

End Sub
Attribute VB_Name = "frm_repas"
Attribute VB_Base = "0{4086BFD5-9A78-4343-9C01-FFDDA720BFC9}{6E726B92-AEB3-4EEE-9630-123CD31AA2A5}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Option Explicit

Private Sub cmdadd_Click()
retouraliment = ""
operepas = "add"
frm_getaliment.Show

End Sub

Private Sub cmdaddmenu_Click()
frommenu = False
frm_addmenu.Show

End Sub

Private Sub cmdclose_Click()
Unload Me
End Sub

Private Sub cmddelete_Click()
dodelete

If listrepas.ListCount = 0 Then
    cmdupdate.Enabled = False
    cmddelete.Enabled = False
Else
    cmdupdate.Enabled = True
    cmddelete.Enabled = True
End If

If listrepas.ListCount = 1 Then
    If listrepas.List(0) = "" Then
        listrepas.RowSource = ""
        cmdupdate.Enabled = False
        cmddelete.Enabled = False
    End If
End If

End Sub

Private Sub dodelete()
Dim i As Integer
Dim ligne As Integer
Dim trouve As Boolean
Dim repas As String
Dim num1 As Integer
Dim repasmod As String

trouve = False

For i = 2 To 32000
    If vdate = Sheets("bddrepas").Cells(i, 1) Then
        trouve = True
        GoTo trouve:
    End If
Next i

If Not trouve Then Exit Sub

trouve:
ligne = i

repas = Sheets("bddrepas").Cells(ligne, 1 + vnumero)

num1 = listrepas.ListIndex

'enl|fffd|ve l'aliment du repas
repasmod = modrepas(repas, num1, "del")

'met |fffd| jour le repas
Sheets("bddrepas").Cells(ligne, 1 + vnumero) = repasmod

'met |fffd| jour la feuille Excel
If Not disprepas(vdate) Then
    'onerepas = false
    'on efface la date dans bddrepas
    Worksheets("bddrepas").Rows(ligne).EntireRow.delete
    
End If

'met |fffd| jour le browse
loadrepas (vnumero)

End Sub


Private Sub cmdquitter_Click()
Unload Me
End Sub

Private Sub cmdnote_Click()
frm_noterepas.Show

End Sub

Private Sub cmdupdate_Click()
doupdate

End Sub

Private Sub doupdate()
On Error GoTo erreur
callchange = False

operepas = "upd"
numaliment = listrepas.ListIndex + 1
qtealiment = alimentqte(listrepas.ListIndex + 1)

isciqual = False 'c'est forc|fffd|ment un aliment de lien

retouraliment = listrepas.List(listrepas.ListIndex)
retourunite = listrepas.List(listrepas.ListIndex, 1)

frm_updaliment.Show
Exit Sub
erreur:
End Sub

Private Sub listrepas_DblClick(ByVal Cancel As MSForms.ReturnBoolean)
On Error GoTo erreur

If listrepas.ListIndex = -1 Or listrepas.List(listrepas.ListIndex) = "" Then Exit Sub

doupdate

Exit Sub
erreur:

End Sub

Private Sub listrepas_MouseUp(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)

On Error GoTo erreur
If listrepas.ListIndex = -1 Or listrepas.List(listrepas.ListIndex) = "" Then
    cmddelete.Enabled = False
    cmdupdate.Enabled = False

Else
    'MsgBox listrepas.List(listrepas.ListIndex)
    cmddelete.Enabled = True
    cmdupdate.Enabled = True

End If
Exit Sub
erreur:

End Sub

Private Sub optapresmidi_Click()
vnumero = 4

loadrepas (vnumero)

End Sub

Private Sub optdejeuner_Click()
vnumero = 3

loadrepas (vnumero)

End Sub

Private Sub optdiner_Click()
vnumero = 5

loadrepas (vnumero)


End Sub

Private Sub optmatin_Click()
vnumero = 2

loadrepas (vnumero)
End Sub

Private Sub optnuit_Click()
vnumero = 7

loadrepas (vnumero)
End Sub

Private Sub optpetitdejeuner_Click()
vnumero = 1

loadrepas (vnumero)
End Sub

Private Sub optsoiree_Click()
vnumero = 6

loadrepas (vnumero)
End Sub

Private Sub UserForm_Activate()
Dim Y As String
Dim m As String
Dim d As String
Dim j As String
Dim dtitre As String


If refreshaliment Then Exit Sub

vdate = Mid(Range("repasdu"), 10, 10)

Y = Year(vdate)
m = Month(vdate)
d = Day(vdate)
j = Format(vdate, "dddd")

Select Case m
Case "1"
    m = "janvier"
Case "2"
    m = "f|fffd|vrier"
Case "3"
    m = "mars"
Case "4"
    m = "avril"
Case "5"
    m = "mai"
Case "6"
    m = "juin"
Case "7"
    m = "juillet"
Case "8"
    m = "ao|fffd|t"
Case "9"
    m = "septembre"
Case "10"
    m = "octobre"
Case "11"
    m = "novembre"
Case "12"
    m = "d|fffd|cembre"

End Select

If d = "1" Then d = "1er"

dtitre = " du " & j & " " & d & " " & m & " " & Y

Me.Caption = "Saisie du repas" & dtitre

loadtable
loadrepas (vnumero)

End Sub

Public Sub loadrepas(num As Integer)
Dim trouve As Boolean
Dim i As Integer
Dim ligne As Integer
Dim repas As String
Dim ref As String
Dim nbrepas As Integer
nbrepas = Sheets("bddrepas").Range("nbrepas")

'recherche la ligne du repas
trouve = False

'listrepas.BackColor = couleur(num)

For i = 2 To nbrepas + 1
    If vdate = Sheets("bddrepas").Cells(i, 1) Then
        trouve = True
        GoTo trouve
    End If
Next i

If Not trouve Then
    listrepas.RowSource = "L7:L7"
    Range("lignerepas") = 0
    
    If Range("curnoterepas") <> "" Then
        cmdnote.Caption = "Notes (*)"
    Else
        cmdnote.Caption = "Notes"
    End If

    Exit Sub
End If

trouve:

ligne = i

Range("lignerepas") = ligne

If Sheets("bddrepas").Cells(ligne, 12) <> "" Then
    cmdnote.Caption = "Notes (*)"
Else
    cmdnote.Caption = "Notes"
End If

repas = Sheets("bddrepas").Cells(ligne, 1 + num)

'remet |fffd| blanc les aliments
For i = 1 To 50
    alimentnom(i) = ""
    alimentqte(i) = 0
    alimentunite(i) = 0
Next i
    
majaliment (repas)

ref = "C" & getrefperiode("L", num) & ":F" & getrefperiode("L", num) + nbaliment - 1

If getrefperiode("L", num) = 0 Then
    listrepas.RowSource = "L7:L7"
    
    Exit Sub
End If

listrepas.RowSource = ref
listrepas.ColumnWidths = "120 pt;60 pt;52 pt;50 pt"

cmddelete.Enabled = False
cmdupdate.Enabled = False

End Sub

Public Sub majbtnnote(s As String)
cmdnote.Caption = s
End Sub


Attribute VB_Name = "frm_save"
Attribute VB_Base = "0{82E7CF60-4FDD-4C21-8CCE-F358F3DB6163}{6FCD11DF-6D15-402F-B379-F21B4FE86524}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Option Explicit

Private Sub cmdclose_Click()
If optsaveoui.Value Then
    If Range("dirsave") = "" Or Not DossierExiste(Range("dirsave")) Then
        Range("tosaveother") = False
    End If
End If

Unload Me
End Sub

Private Sub cmdselect_Click()
Dim dossier As String

With Application.FileDialog(msoFileDialogFolderPicker)
        .ButtonName = "S|fffd|lectionner"
        .Title = "S|fffd|lectionner un dossier"
        If .Show = -1 Then ' if OK is pressed
            dossier = .SelectedItems(1)
            labdir.Caption = dossier
            Range("dirsave") = dossier
        End If
End With
    
End Sub

Private Sub optsavenon_Click()
If optsavenon.Value Then
    cmdselect.Enabled = False
    labdir.Enabled = False
    Range("tosaveother") = False
End If

End Sub

Private Sub optsaveoui_Click()
If optsaveoui.Value Then
    cmdselect.Enabled = True
    labdir.Enabled = True
    Range("tosaveother") = True
End If

End Sub


Private Sub UserForm_Activate()
Dim dirsave As String
Dim tosave As Boolean
tosave = Range("tosaveother")

dirsave = Range("dirsave")
If dirsave = "" Then
    labdir.Caption = "Aucun chemin d|fffd|fini"
Else
    labdir.Caption = dirsave
End If

If tosave Then
    optsaveoui.Value = True
    optsavenon.Value = False
    labdir.Enabled = True
    If Not DossierExiste(dirsave) Then MsgBox "Le r|fffd|pertoire de sauvegarde n'existe pas ou n'est pas accessible."
Else
    optsaveoui.Value = False
    optsavenon.Value = True
    labdir.Enabled = False
End If

End Sub


Private Sub UserForm_Terminate()
If optsaveoui.Value Then
    If Range("dirsave") = "" Or Not DossierExiste(Range("dirsave")) Then
        Range("tosaveother") = False
    End If
End If
End Sub

Attribute VB_Name = "frm_updaliment"
Attribute VB_Base = "0{BA28D2F3-7CBC-4F41-A3F7-CEB888B46116}{3A4CB212-FD19-4A19-990F-05864F911B61}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Option Explicit

Private Sub cmdchange_Click()
callchange = True

frm_getaliment.Show

End Sub

Private Sub cmdclose_Click()

'on rafra|fffd|chit le userform (en fait , c'est une variable pour le formactivate)
refreshaliment = True

Unload Me

End Sub

Private Sub cmdsave_Click()
If operepas = "addmenu" Or operepas = "updmenu" Then
    If chkval Then savealimentmenu (operepas)

Else

    If chkval Then savealiment (operepas)
End If

End Sub

Private Function chkval() As String
Dim ret As Boolean
On Error GoTo erreur

ret = True

If txtqte.Value = 0 Then
    MsgBox "Merci de saisir une quantit|fffd| sup|fffd|rieure |fffd| z|fffd|ro."
    ret = False
End If

If txtqte.Value = "" Then
    MsgBox "Merci de saisir une quantit|fffd|."
    ret = False
End If

chkval = ret
Exit Function

erreur:
chkval = False
End Function

Private Sub savealiment(ope As String)
Dim i As Integer
Dim ligne As Integer
Dim repas As String
Dim trouve As Boolean
Dim val As String
Dim nb As Integer
Dim newrepas As Boolean

trouve = False

'on r|fffd|cup|fffd|re le repas
For i = 2 To 32000
    If vdate = Sheets("bddrepas").Cells(i, 1) Then
        trouve = True
        GoTo trouve
    End If
    If Sheets("bddrepas").Cells(i, 1) = "" Then
        nb = i
        GoTo suite
    End If
    
Next i

suite:
If Not trouve Then
    newrepas = True
    Sheets("bddrepas").Cells(nb, 1) = vdate
Else
    newrepas = False
End If

trouve:
ligne = i

repas = Sheets("bddrepas").Cells(ligne, vnumero + 1)

val = Replace(txtqte.Value, ",", ".")

'on ajoute ou met |fffd| jour l'aliment au repas
If ope = "add" Then repas = repas + txtaliment.Value + "|fffd|" + txtunite.Value + "|fffd|" + val + "|"
If ope = "upd" Then repas = modrepas(repas, numaliment - 1, "upd", txtaliment.Value, txtunite.Value, val)

'met |fffd| jour le repas
Sheets("bddrepas").Cells(ligne, vnumero + 1) = repas

If Range("curnoterepas") <> "" Then
    Sheets("bddrepas").Cells(ligne, 12) = Range("curnoterepas")
Else
    Sheets("bddrepas").Cells(ligne, 12) = ""
End If


'si on a cr|fffd||fffd| un aliment on l'ajoute dans le lien
'on le cr|fffd|e dans un autre userform maintenant

'on trie les repas
If newrepas Then
    sortrepas
    Sheets("Repas").Select
    
'met |fffd| jour la feuille Excel
Else
    disprepas (vdate)
End If

Unload Me

'on rafra|fffd|chit le userform
refreshaliment = True

If loadtable Then frm_repas.loadrepas (vnumero)

End Sub

Private Sub savealimentmenu(ope As String)
Dim i As Integer
Dim ligne As Integer
Dim menu As String
Dim trouve As Boolean
Dim val As String
Dim nb As Integer
Dim newmenu As Boolean

trouve = False

'on r|fffd|cup|fffd|re le menu
For i = 2 To 32000
    If vmenu = Sheets("bddmenu").Cells(i, 1) Then
        trouve = True
        GoTo trouve
    End If
    If Sheets("bddmenu").Cells(i, 1) = "" Then
        nb = i
        GoTo suite
    End If
    
Next i

suite:
If Not trouve Then
    newmenu = True
    Sheets("bddmenu").Cells(nb, 1) = vmenu
Else
    newmenu = False
End If

trouve:
ligne = i

menu = Sheets("bddmenu").Cells(ligne, 2)

val = Replace(txtqte.Value, ",", ".")

'on ajoute ou met |fffd| jour l'aliment au menu
If ope = "addmenu" Then menu = menu + txtaliment.Value + "|fffd|" + txtunite.Value + "|fffd|" + val + "|"
If ope = "updmenu" Then menu = modrepas(menu, numaliment - 1, "upd", txtaliment.Value, txtunite.Value, val)

'met |fffd| jour le menu
Sheets("bddmenu").Cells(ligne, 2) = menu

frm_addmenu.enableselectmenu

Unload Me

If frommenu Then dispmenu

If loadtable Then frm_addmenu.loadmenudetail (vmenu)

End Sub

Private Sub txtmasseunite_Change()
updcoef

End Sub

Private Sub updcoef()
Dim s As String

s = Replace(txtmasseunite.Value, "g", "")
s = Replace(s, ".", ",")

If s = "" Then s = 0

coef = s / 100

End Sub
Private Sub txtqte_Change()
updqte
End Sub

Private Sub updqte()
On Error GoTo erreur

txtqte.Value = Replace(txtqte.Value, ".", ",")
txtpoids.Value = coef * 100 * txtqte.Value & " g"

Exit Sub
erreur:
txtpoids.Value = ""

End Sub

Private Sub txtqte_KeyDown(ByVal KeyCode As MSForms.ReturnInteger, ByVal Shift As Integer)
If KeyCode = vbKeyReturn Then

    If operepas = "addmenu" Or operepas = "updmenu" Then
        If chkval Then savealimentmenu (operepas)
    
    Else
    
        If chkval Then savealiment (operepas)
    End If

End If

End Sub

Private Sub UserForm_Activate()
loadval

End Sub

Public Sub loadval()
Dim nb As Integer

txtaliment.Value = retouraliment
nb = Range("nbunite") + 1

Call getlien(retouraliment, retourunite)

txtunite.Value = retourunite
labelunite.Caption = "Masse de l'unit|fffd|"
    
txtmasseunite.Locked = True
txtmasseunite.BackStyle = fmBackStyleTransparent
txtmasseunite.Value = coef * 100 & " g"
txtqte.SetFocus

If (operepas = "upd" Or operepas = "updmenu") And Not callchange Then
    txtqte.Value = qtealiment
    updqte
Else
    txtqte.Value = ""
End If

End Sub

' InQuest injected base64 decoded content
' ~`ZrD

INQUEST-PP=macro
