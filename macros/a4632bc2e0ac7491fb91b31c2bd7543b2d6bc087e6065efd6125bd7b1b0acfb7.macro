Attribute VB_Name = "ALTERARCARGOS"
Sub enviar_alterar_cargos()
linha = FRMCARGOS.ListBox1.ListIndex
FRMALTERARCARGOS.LABELREGISTRO = FRMCARGOS.ListBox1.List(linha, 0)
FRMALTERARCARGOS.TEXTOCARGO = FRMCARGOS.ListBox1.List(linha, 1)
End Sub
Sub alterar_cargos()

Dim ultimoregistro As Integer

ultimoregistro = Sheets("cargos").Cells(Rows.Count, 2).End(xlUp).Row

For linha = 2 To ultimoregistro
    If Sheets("cargos").Cells(linha, 1) = FRMALTERARCARGOS.LABELREGISTRO / 1 Then
        Sheets("cargos").Cells(linha, 2) = FRMALTERARCARGOS.TEXTOCARGO
        
        Call atualizar_cargos
        ActiveWorkbook.Save
        MsgBox "Cargo alterado com sucesso"
        Exit Sub
    Else
    End If
Next

End Sub
Sub excluir_cargos()

resposta = MsgBox("Deseja realmente excluir este Cargo?", vbYesNoCancel)
If resposta = vbYes Then
Sheets("Cargos").Select
Dim ultimoregistro As Integer

ultimoregistro = Sheets("Cargos").Cells(Rows.Count, 2).End(xlUp).Row

For linha = 2 To ultimoregistro
    If Sheets("Cargos").Cells(linha, 1) = FRMALTERARCARGOS.LABELREGISTRO / 1 Then
        Cells(linha, 1).Select
        ActiveCell.EntireRow.Delete
        
        Call atualizar_cargos
        ActiveWorkbook.Save
        MsgBox "Cargo delatado com sucesso"
        Exit Sub
    Else
    End If
Next
Else
End If
End Sub
Attribute VB_Name = "ALTERARCENTROCUSTO"
Sub enviar_alterar_centro_custo()
linha = FRMCENTRODECUSTO.ListBox1.ListIndex
FRMALTERACAOCENTROCUSTO.LABELREGISTRO = FRMCENTRODECUSTO.ListBox1.List(linha, 0)
FRMALTERACAOCENTROCUSTO.TEXTOCENTRODECUSTO = FRMCENTRODECUSTO.ListBox1.List(linha, 1)
End Sub
Sub alterar_centro_custo()

Dim ultimoregistro As Integer

ultimoregistro = Sheets("centro de custos").Cells(Rows.Count, 2).End(xlUp).Row

For linha = 2 To ultimoregistro
    If Sheets("centro de custos").Cells(linha, 1) = FRMALTERACAOCENTROCUSTO.LABELREGISTRO / 1 Then
        Sheets("centro de custos").Cells(linha, 2) = FRMALTERACAOCENTROCUSTO.TEXTOCENTRODECUSTO
        
        Call atualizar_centro_custos
        ActiveWorkbook.Save
        MsgBox "Centro de Custo alterado com sucesso"
        Exit Sub
    Else
    End If
Next

End Sub
Sub excluir_centro_custo()

resposta = MsgBox("Deseja realmente excluir este centro de custo?", vbYesNoCancel)
If resposta = vbYes Then
Sheets("centro de custos").Select
Dim ultimoregistro As Integer

ultimoregistro = Sheets("centro de custos").Cells(Rows.Count, 2).End(xlUp).Row

For linha = 2 To ultimoregistro
    If Sheets("centro de custos").Cells(linha, 1) = FRMALTERACAOCENTROCUSTO.LABELREGISTRO / 1 Then
        Cells(linha, 1).Select
        ActiveCell.EntireRow.Delete
        
        Call atualizar_centro_custos
        ActiveWorkbook.Save
        MsgBox "Centro de Custo delatado com sucesso"
        Exit Sub
    Else
    End If
Next
Else
End If
End Sub
Attribute VB_Name = "ALTERARCONTROLEEXAMESMEDICOS"
Sub enviar_alteracao_examesmedicos()

Dim linha As Integer
Dim registroaprocurar As Double
Dim ultimoregistro As Double

ultimoregistro = Sheets("base dados").Cells(Rows.Count, 5).End(xlUp).Row

linha = FRMCONTROLEEXAMES.ListBox1.ListIndex
registroaprocurar = FRMCONTROLEEXAMES.ListBox1.List(linha, 1) & FRMCONTROLEEXAMES.ListBox1.List(linha, 0)

For linha = 2 To ultimoregistro
    If Sheets("base dados").Cells(linha, 3) = registroaprocurar Then
    On Error Resume Next
        FRMALTERACAOCONTROLEEXAMES.LABELREGISTRO = Sheets("base dados").Cells(linha, 3)
        FRMALTERACAOCONTROLEEXAMES.TEXTOMATRICULA = Sheets("base dados").Cells(linha, 4)
        FRMALTERACAOCONTROLEEXAMES.TEXTONOMEDOCOLABORADOR = Sheets("base dados").Cells(linha, 5)
        FRMALTERACAOCONTROLEEXAMES.LISTACENTRODECUSTO = Sheets("base dados").Cells(linha, 6)
        FRMALTERACAOCONTROLEEXAMES.LISTAFUNCAO = Sheets("base dados").Cells(linha, 7)
        FRMALTERACAOCONTROLEEXAMES.TEXTODATADEADMISSAO = Format(Sheets("base dados").Cells(linha, 8), "dd/mm/yyyy")
        FRMALTERACAOCONTROLEEXAMES.LISTATIPOEXAME = Sheets("base dados").Cells(linha, 9)
        FRMALTERACAOCONTROLEEXAMES.LISTAEXAME = Sheets("base dados").Cells(linha, 10)
        FRMALTERACAOCONTROLEEXAMES.TEXTODATADEENTREGA = Format(Sheets("base dados").Cells(linha, 11), "dd/mm/yyyy")
        FRMALTERACAOCONTROLEEXAMES.TEXTODATAPROXIMOEXAME = Format(Sheets("base dados").Cells(linha, 12), "dd/mm/yyyy")
        FRMALTERACAOCONTROLEEXAMES.TEXTODATAREALIZACAO = Format(Sheets("base dados").Cells(linha, 13), "dd/mm/yyyy")
    End If
Next
End Sub
Sub habilitar_botao_alterar_controleexames()
Dim crtl As Control
For Each crtl In FRMALTERACAOCONTROLEEXAMES.Controls
    If crtl.BackColor = &HC0FFFF Then
        FRMALTERACAOCONTROLEEXAMES.CMDALTERAR.Enabled = False
        Exit Sub
    Else
        FRMALTERACAOCONTROLEEXAMES.CMDALTERAR.Enabled = True
    End If
Next
End Sub
Sub alterar_examemedicos()

Dim ultimoregistro As Double

ultimoregistro = Sheets("base dados").Cells(Rows.Count, 5).End(xlUp).Row

For linha = 2 To ultimoregistro
On Error Resume Next
    If Sheets("base dados").Cells(linha, 3) = FRMALTERACAOCONTROLEEXAMES.LABELREGISTRO / 1 Then
        Sheets("base dados").Cells(linha, 9) = FRMALTERACAOCONTROLEEXAMES.LISTATIPOEXAME
        Sheets("base dados").Cells(linha, 10) = FRMALTERACAOCONTROLEEXAMES.LISTAEXAME
        Sheets("base dados").Cells(linha, 11) = Format(FRMALTERACAOCONTROLEEXAMES.TEXTODATADEENTREGA, "mm/dd/yyyy")
        Sheets("base dados").Cells(linha, 12) = Format(FRMALTERACAOCONTROLEEXAMES.TEXTODATAPROXIMOEXAME, "mm/dd/yyyy")
        Sheets("base dados").Cells(linha, 13) = Format(FRMALTERACAOCONTROLEEXAMES.TEXTODATAREALIZACAO, "mm/dd/yyyy")
        
        If FRMALTERACAOCONTROLEEXAMES.LISTATIPOEXAME = "DEMISSIONAL" Then
            Sheets("base dados").Cells(linha, 12) = Format(FRMALTERACAOCONTROLEEXAMES.TEXTODATADEENTREGA, "mm/dd/yyyy")
            Sheets("base dados").Cells(linha, 13) = Format(FRMALTERACAOCONTROLEEXAMES.TEXTODATADEENTREGA, "mm/dd/yyyy")
        End If
    End If
Next
    Call calcular_validade_exames
    Call filtro_controleexames
    Call atualizar_controleexames
    ActiveWorkbook.Save
    MsgBox "Exame alterado com sucesso!"
End Sub
Sub excluir_examemedicos()
resposta = MsgBox("Deseja realmente excluir este exame?", vbYesNoCancel)
If resposta = vbYes Then
Sheets("base dados").Select
Dim ultimoregistro As Double

ultimoregistro = Sheets("base dados").Cells(Rows.Count, 5).End(xlUp).Row

For linha = 2 To ultimoregistro
 If Sheets("base dados").Cells(linha, 3) = FRMALTERACAOCONTROLEEXAMES.LABELREGISTRO / 1 Then
    Cells(linha, 3).Select
    ActiveCell.EntireRow.Delete
    Call calcular_validade_exames
    Call filtro_controleexames
    Call atualizar_controleexames
    ActiveWorkbook.Save
    MsgBox "Exame excluido com sucesso!"
    Exit Sub
 Else
 End If
Next
Else
End If
End Sub

Attribute VB_Name = "ALTERARFUNCIONARIOS"
Sub enviar_alterar_funcionarios()
linha = FRMCADASTROFUNCIONARIOS.ListBox1.ListIndex

FRMALTERACAOFUNCIONARIO.LABELREGISTRO = FRMCADASTROFUNCIONARIOS.ListBox1.List(linha, 0)
FRMALTERACAOFUNCIONARIO.TEXTOMATRICULA = FRMCADASTROFUNCIONARIOS.ListBox1.List(linha, 1)
FRMALTERACAOFUNCIONARIO.TEXTONOMEDOFUNCIONARIO = FRMCADASTROFUNCIONARIOS.ListBox1.List(linha, 2)
FRMALTERACAOFUNCIONARIO.TEXTODATADEADMISSAO = FRMCADASTROFUNCIONARIOS.ListBox1.List(linha, 3)
FRMALTERACAOFUNCIONARIO.TEXTODATADESLIGAMENTO = FRMCADASTROFUNCIONARIOS.ListBox1.List(linha, 4)
FRMALTERACAOFUNCIONARIO.LISTACENTRODECUSTO = FRMCADASTROFUNCIONARIOS.ListBox1.List(linha, 5)
FRMALTERACAOFUNCIONARIO.LISTACARGO = FRMCADASTROFUNCIONARIOS.ListBox1.List(linha, 6)

End Sub
Sub habilitar_botao_alterar_funcionario()

Dim crtl As Control

For Each crtl In FRMALTERACAOFUNCIONARIO.Controls
    If crtl.BackColor = &HC0FFFF Then
        FRMALTERACAOFUNCIONARIO.CMDALTERAR.Enabled = False
        Exit Sub
    Else
        FRMALTERACAOFUNCIONARIO.CMDALTERAR.Enabled = True
    End If
Next
End Sub
Sub alterar_funcionario()
Dim ultimoregistro As Integer

ultimoregistro = Sheets("funcionarios").Cells(Rows.Count, 3).End(xlUp).Row

For linha = 2 To ultimoregistro
On Error Resume Next
    If Sheets("funcionarios").Cells(linha, 1) = FRMALTERACAOFUNCIONARIO.LABELREGISTRO / 1 Then
        Sheets("funcionarios").Cells(linha, 2) = FRMALTERACAOFUNCIONARIO.TEXTOMATRICULA / 1
        Sheets("funcionarios").Cells(linha, 3) = FRMALTERACAOFUNCIONARIO.TEXTONOMEDOFUNCIONARIO
        Sheets("funcionarios").Cells(linha, 4) = Format(FRMALTERACAOFUNCIONARIO.TEXTODATADEADMISSAO, "mm/dd/yyyy")
        Sheets("funcionarios").Cells(linha, 5) = Format(FRMALTERACAOFUNCIONARIO.TEXTODATADESLIGAMENTO, "mm/dd/yyyy")
        Sheets("funcionarios").Cells(linha, 6) = FRMALTERACAOFUNCIONARIO.LISTACENTRODECUSTO
        Sheets("funcionarios").Cells(linha, 7) = FRMALTERACAOFUNCIONARIO.LISTACARGO
            If FRMALTERACAOFUNCIONARIO.TEXTODATADESLIGAMENTO <> "" Then
            Sheets("funcionarios").Cells(linha, 8) = "INATIVO"
            Else
            Sheets("funcionarios").Cells(linha, 8) = "ATIVO"
            End If
        Call filtro_cadastro_funcionarios
        Call atualizar_cadastro_funcionarios
        
    ActiveWorkbook.Save
    MsgBox "Altera|fffd||fffd|o de funcion|fffd|rio realizado com sucesso!"
    Exit Sub
    Else
    End If
Next
End Sub
Sub excluir_funcionario()

resposta = MsgBox("Deseja realmente excluir este funcion|fffd|rio?", vbYesNoCancel)
If resposta = vbYes Then
Sheets("funcionarios").Select
Dim ultimoregistro As Integer

ultimoregistro = Sheets("Funcionarios").Cells(Rows.Count, 3).End(xlUp).Row

For linha = 2 To ultimoregistro
    If Sheets("Funcionarios").Cells(linha, 1) = FRMALTERACAOFUNCIONARIO.LABELREGISTRO / 1 Then
        Cells(linha, 1).Select
        ActiveCell.EntireRow.Delete
        
        Call filtro_cadastro_funcionarios
        Call atualizar_cadastro_funcionarios
        ActiveWorkbook.Save
        MsgBox "Funcion|fffd|rio delatado com sucesso"
        Exit Sub
    Else
    End If
Next
Else
End If
End Sub
Attribute VB_Name = "CADASTROFUNCIONARIOS"
Sub controles_formulario()

Dim crtl As Control
linha = 1
For Each crtl In FRMCONTROLEEXAMES.Controls
Sheets("controles").Cells(linha, 1) = crtl.Name
linha = linha + 1
Next

End Sub
Sub ultimo_registro_cadastro_funcionario()
Dim intervalo As Range
Dim registro
Set intervalo = Sheets("funcionarios").Range("a:a")
registro = Application.WorksheetFunction.Max(intervalo)
FRMCADASTROFUNCIONARIOS.LABELREGISTRO = registro
End Sub
Sub novo_registro_cadastro_funcionario()
Dim intervalo As Range
Dim registro
Set intervalo = Sheets("funcionarios").Range("a:a")
registro = Application.WorksheetFunction.Max(intervalo)
FRMCADASTROFUNCIONARIOS.LABELREGISTRO = registro + 1
End Sub
Sub habilitar_formulario_cadastrar_funcionario()

FRMCADASTROFUNCIONARIOS.LABELMATRICULA.Enabled = True
FRMCADASTROFUNCIONARIOS.TEXTOMATRICULA.Enabled = True
FRMCADASTROFUNCIONARIOS.LABELNOMEDOFUNCIONARIO.Enabled = True
FRMCADASTROFUNCIONARIOS.TEXTONOMEDOFUNCIONARIO.Enabled = True
FRMCADASTROFUNCIONARIOS.LABELDATADEADMISSAO.Enabled = True
FRMCADASTROFUNCIONARIOS.TEXTODATADEADMISSAO.Enabled = True
FRMCADASTROFUNCIONARIOS.LABELCENTRODECUSTO.Enabled = True
FRMCADASTROFUNCIONARIOS.LISTACENTRODECUSTO.Enabled = True
FRMCADASTROFUNCIONARIOS.LABELCARGO.Enabled = True
FRMCADASTROFUNCIONARIOS.LISTACARGO.Enabled = True
FRMCADASTROFUNCIONARIOS.CMDCADASTRAR.Enabled = False

End Sub
Sub desabilitar_formulario_cadastrar_funcionario()

FRMCADASTROFUNCIONARIOS.LABELMATRICULA.Enabled = False
FRMCADASTROFUNCIONARIOS.TEXTOMATRICULA.Enabled = False
FRMCADASTROFUNCIONARIOS.LABELNOMEDOFUNCIONARIO.Enabled = False
FRMCADASTROFUNCIONARIOS.TEXTONOMEDOFUNCIONARIO.Enabled = False
FRMCADASTROFUNCIONARIOS.LABELDATADEADMISSAO.Enabled = False
FRMCADASTROFUNCIONARIOS.TEXTODATADEADMISSAO.Enabled = False
FRMCADASTROFUNCIONARIOS.LABELCENTRODECUSTO.Enabled = False
FRMCADASTROFUNCIONARIOS.LISTACENTRODECUSTO.Enabled = False
FRMCADASTROFUNCIONARIOS.LABELCARGO.Enabled = False
FRMCADASTROFUNCIONARIOS.LISTACARGO.Enabled = False
FRMCADASTROFUNCIONARIOS.CMDCADASTRAR.Enabled = False

End Sub
Sub limpar_formulario_cadastro_funcionario()
FRMCADASTROFUNCIONARIOS.TEXTOMATRICULA = Empty
FRMCADASTROFUNCIONARIOS.TEXTONOMEDOFUNCIONARIO = Empty
FRMCADASTROFUNCIONARIOS.TEXTODATADEADMISSAO = Empty
FRMCADASTROFUNCIONARIOS.LISTACENTRODECUSTO = Empty
FRMCADASTROFUNCIONARIOS.LISTACARGO = Empty
End Sub
Sub habilitar_botao_cadastrar_funcionario()

Dim crtl As Control

For Each crtl In FRMCADASTROFUNCIONARIOS.Controls
    If crtl.BackColor = &HC0FFFF Then
        FRMCADASTROFUNCIONARIOS.CMDCADASTRAR.Enabled = False
        Exit Sub
    Else
        FRMCADASTROFUNCIONARIOS.CMDCADASTRAR.Enabled = True
    End If
Next
End Sub
Sub filtro_cadastro_funcionarios()

Sheets("filtro funcionarios").Range("a2:h2") = Empty

Sheets("filtro funcionarios").Range("c2") = FRMCADASTROFUNCIONARIOS.TEXTONOMEDOFUNCIONARIOFILTRO
Sheets("filtro funcionarios").Range("f2") = FRMCADASTROFUNCIONARIOS.LISTACENTRODECUSTOFILTRO
Sheets("filtro funcionarios").Range("g2") = FRMCADASTROFUNCIONARIOS.LISTACARGOFILTRO
Sheets("filtro funcionarios").Range("h2") = FRMCADASTROFUNCIONARIOS.LISTASTATUSFILTRO

Sheets("Funcionarios").Columns("A:H").AdvancedFilter Action:=xlFilterCopy, _
        CriteriaRange:=Sheets("filtro funcionarios").Range("A1:H2"), CopyToRange:=Sheets("filtro funcionarios").Range("A5:H5"), Unique:=False
End Sub
Sub atualizar_cadastro_funcionarios()

Dim ultimoregistro As Integer

ultimoregistro = Sheets("filtro funcionarios").Cells(Rows.Count, 3).End(xlUp).Row

FRMCADASTROFUNCIONARIOS.ListBox1.Clear
linhabox = 0
For linha = 6 To ultimoregistro
On Error Resume Next
    With FRMCADASTROFUNCIONARIOS.ListBox1
        .AddItem
        .ColumnCount = 8
    
        .List(linhabox, 0) = Sheets("filtro funcionarios").Cells(linha, 1)
        .List(linhabox, 1) = Sheets("filtro funcionarios").Cells(linha, 2)
        .List(linhabox, 2) = Sheets("filtro funcionarios").Cells(linha, 3)
        .List(linhabox, 3) = Format(Sheets("filtro funcionarios").Cells(linha, 4), "dd/mm/yyyy")
        .List(linhabox, 4) = Format(Sheets("filtro funcionarios").Cells(linha, 5), "dd/mm/yyyy")
        .List(linhabox, 5) = Sheets("filtro funcionarios").Cells(linha, 6)
        .List(linhabox, 6) = Sheets("filtro funcionarios").Cells(linha, 7)
        .List(linhabox, 7) = Sheets("filtro funcionarios").Cells(linha, 8)
    linhabox = linhabox + 1
    End With
Next
FRMCADASTROFUNCIONARIOS.LABELTOTALDEREGISTROS = FRMCADASTROFUNCIONARIOS.ListBox1.ListCount
End Sub
Sub cadastrar_funcionario()

linha = 2
Do Until Sheets("funcionarios").Cells(linha, 1) = ""
linha = linha + 1
Loop
    Sheets("funcionarios").Cells(linha, 1) = FRMCADASTROFUNCIONARIOS.LABELREGISTRO / 1
    Sheets("funcionarios").Cells(linha, 2) = FRMCADASTROFUNCIONARIOS.TEXTOMATRICULA / 1
    Sheets("funcionarios").Cells(linha, 3) = FRMCADASTROFUNCIONARIOS.TEXTONOMEDOFUNCIONARIO
    Sheets("funcionarios").Cells(linha, 4) = Format(FRMCADASTROFUNCIONARIOS.TEXTODATADEADMISSAO, "mm/dd/yyyy")
    Sheets("funcionarios").Cells(linha, 6) = FRMCADASTROFUNCIONARIOS.LISTACENTRODECUSTO
    Sheets("funcionarios").Cells(linha, 7) = FRMCADASTROFUNCIONARIOS.LISTACARGO
    Sheets("funcionarios").Cells(linha, 8) = "ATIVO"
    
Call filtro_cadastro_funcionarios
Call atualizar_cadastro_funcionarios

Call limpar_formulario_cadastro_funcionario
Call desabilitar_formulario_cadastrar_funcionario
FRMCADASTROFUNCIONARIOS.OPCAONOVOFUNCIONARIO.Value = False

ActiveWorkbook.Save
MsgBox "Funcion|fffd|rio cadastrado com sucesso!"
End Sub
Sub abrir_menu()
Application.Visible = False
FRMMENU.Show
End Sub

Attribute VB_Name = "CARGOS"
Sub habilitar_cargos()
FRMCARGOS.LABELCARGOS.Enabled = True
FRMCARGOS.TEXTOCARGOS.Enabled = True
End Sub
Sub desabilitar_cargos()
FRMCARGOS.LABELCARGOS.Enabled = False
FRMCARGOS.TEXTOCARGOS.Enabled = False
End Sub
Sub limpar_cargos()
FRMCARGOS.TEXTOCARGOS = Empty
End Sub
Sub ultimo_registro_cargos()
Dim intervalo As Range
Dim registro As Integer
Set intervalo = Sheets("cargos").Range("a:a")
registro = Application.WorksheetFunction.Max(intervalo)
FRMCARGOS.LABELREGISTRO = registro
End Sub
Sub novo_registro_cargos()
Dim intervalo As Range
Dim registro As Integer
Set intervalo = Sheets("cargos").Range("a:a")
registro = Application.WorksheetFunction.Max(intervalo)
FRMCARGOS.LABELREGISTRO = registro + 1
End Sub
Sub habilitar_botao_cadastrar_cargos()

Dim crtl As Control

For Each crtl In FRMCARGOS.Controls
    If crtl.BackColor = &HC0FFFF Then
        FRMCARGOS.CMDCADASTRAR.Enabled = False
        Exit Sub
    Else
        FRMCARGOS.CMDCADASTRAR.Enabled = True
    End If
Next
End Sub
Sub cadastrar_cargos()

linha = 2

Do Until Sheets("cargos").Cells(linha, 1) = ""
linha = linha + 1
Loop

    Sheets("cargos").Cells(linha, 1) = FRMCARGOS.LABELREGISTRO / 1
    Sheets("cargos").Cells(linha, 2) = FRMCARGOS.TEXTOCARGOS

Call atualizar_cargos
Call desabilitar_cargos
Call limpar_cargos
FRMCARGOS.OPCAONOVO.Value = False

ActiveWorkbook.Save
MsgBox "Cargo cadastrado com sucesso!"

End Sub
Sub atualizar_cargos()
Dim ultimoregistro As Integer

ultimoregistro = Sheets("cargos").Cells(Rows.Count, 2).End(xlUp).Row

FRMCARGOS.ListBox1.Clear
linhabox = 0
For linha = 3 To ultimoregistro
    With FRMCARGOS.ListBox1
        .AddItem
        .ColumnCount = 2
        
        .List(linhabox, 0) = Sheets("cargos").Cells(linha, 1)
        .List(linhabox, 1) = Sheets("cargos").Cells(linha, 2)
    linhabox = linhabox + 1
    End With
Next

FRMCARGOS.LABELTOTALDEREGISTROS = FRMCARGOS.ListBox1.ListCount
End Sub

Attribute VB_Name = "CENTRODECUSTO"
Sub habilitar_centro_custo()
FRMCENTRODECUSTO.LABELCENTRODECUSTO.Enabled = True
FRMCENTRODECUSTO.TEXTOCENTRODECUSTO.Enabled = True
End Sub
Sub desabilitar_centro_custo()
FRMCENTRODECUSTO.LABELCENTRODECUSTO.Enabled = False
FRMCENTRODECUSTO.TEXTOCENTRODECUSTO.Enabled = False
End Sub
Sub limpar_centro_custo()
FRMCENTRODECUSTO.TEXTOCENTRODECUSTO = Empty
End Sub
Sub ultimo_registro_centro_custo()
Dim intervalo As Range
Dim registro
Set intervalo = Sheets("centro de custos").Range("a:a")
registro = Application.WorksheetFunction.Max(intervalo)
FRMCENTRODECUSTO.LABELREGISTRO = registro
End Sub
Sub novo_registro_centro_custo()
Dim intervalo As Range
Dim registro
Set intervalo = Sheets("centro de custos").Range("a:a")
registro = Application.WorksheetFunction.Max(intervalo)
FRMCENTRODECUSTO.LABELREGISTRO = registro + 1
End Sub
Sub habilitar_botao_cadastrar_centro_custo()

Dim crtl As Control

For Each crtl In FRMCENTRODECUSTO.Controls
    If crtl.BackColor = &HC0FFFF Then
        FRMCENTRODECUSTO.CMDCADASTRAR.Enabled = False
        Exit Sub
    Else
        FRMCENTRODECUSTO.CMDCADASTRAR.Enabled = True
    End If
Next
End Sub
Sub cadastrar_centro_custo()

linha = 2

Do Until Sheets("centro de custos").Cells(linha, 1) = ""
linha = linha + 1
Loop

    Sheets("centro de custos").Cells(linha, 1) = FRMCENTRODECUSTO.LABELREGISTRO / 1
    Sheets("centro de custos").Cells(linha, 2) = FRMCENTRODECUSTO.TEXTOCENTRODECUSTO

Call atualizar_centro_custos
Call limpar_centro_custo
Call desabilitar_centro_custo
FRMCENTRODECUSTO.OPCAONOVO.Value = False

ActiveWorkbook.Save
MsgBox "Centro de custo cadastrado com sucesso!"

End Sub
Sub atualizar_centro_custos()
Dim ultimoregistro As Integer

ultimoregistro = Sheets("centro de custos").Cells(Rows.Count, 2).End(xlUp).Row

FRMCENTRODECUSTO.ListBox1.Clear
linhabox = 0
For linha = 3 To ultimoregistro
    With FRMCENTRODECUSTO.ListBox1
        .AddItem
        .ColumnCount = 2
        
        .List(linhabox, 0) = Sheets("centro de custos").Cells(linha, 1)
        .List(linhabox, 1) = Sheets("centro de custos").Cells(linha, 2)
    linhabox = linhabox + 1
    End With
Next

FRMCENTRODECUSTO.LABELTOTALDEREGISTROS = FRMCENTRODECUSTO.ListBox1.ListCount
End Sub
Attribute VB_Name = "CONTROLEEXAMES"
Sub desabilitar_formulario_controleexames()

FRMCONTROLEEXAMES.LABELMATRICULA.Enabled = False
FRMCONTROLEEXAMES.TEXTOMATRICULA.Enabled = False
FRMCONTROLEEXAMES.CMDPESQUISACOLABORADOR.Enabled = False
FRMCONTROLEEXAMES.TEXTONOMEDOCOLABORADOR.Enabled = False
FRMCONTROLEEXAMES.LABELNOMEDOCOLABORADOR.Enabled = False
FRMCONTROLEEXAMES.LABELDATADEADMISSAO.Enabled = False
FRMCONTROLEEXAMES.TEXTODATADEADMISSAO.Enabled = False
FRMCONTROLEEXAMES.LABELDATADEENTREGA.Enabled = False
FRMCONTROLEEXAMES.TEXTODATADEENTREGA.Enabled = False
FRMCONTROLEEXAMES.LABELCENTRODECUSTO.Enabled = False
FRMCONTROLEEXAMES.LISTACENTRODECUSTO.Enabled = False
FRMCONTROLEEXAMES.LABELFUNCAO.Enabled = False
FRMCONTROLEEXAMES.LISTAFUNCAO.Enabled = False
FRMCONTROLEEXAMES.LABELTIPOEXAME.Enabled = False
FRMCONTROLEEXAMES.LISTATIPOEXAME.Enabled = False
FRMCONTROLEEXAMES.LABELEXAME.Enabled = False
FRMCONTROLEEXAMES.LISTAEXAME.Enabled = False
FRMCONTROLEEXAMES.LABELDATAPROXIMOEXAME.Enabled = False
FRMCONTROLEEXAMES.TEXTODATAPROXIMOEXAME.Enabled = False

End Sub
Sub habilitar_formulario_controleexames()

FRMCONTROLEEXAMES.LABELMATRICULA.Enabled = True
FRMCONTROLEEXAMES.TEXTOMATRICULA.Enabled = True
FRMCONTROLEEXAMES.CMDPESQUISACOLABORADOR.Enabled = True
FRMCONTROLEEXAMES.TEXTONOMEDOCOLABORADOR.Enabled = True
FRMCONTROLEEXAMES.LABELNOMEDOCOLABORADOR.Enabled = True
FRMCONTROLEEXAMES.LABELDATADEADMISSAO.Enabled = True
FRMCONTROLEEXAMES.TEXTODATADEADMISSAO.Enabled = True
FRMCONTROLEEXAMES.LABELDATADEENTREGA.Enabled = True
FRMCONTROLEEXAMES.TEXTODATADEENTREGA.Enabled = True
FRMCONTROLEEXAMES.LABELCENTRODECUSTO.Enabled = True
FRMCONTROLEEXAMES.LISTACENTRODECUSTO.Enabled = True
FRMCONTROLEEXAMES.LABELFUNCAO.Enabled = True
FRMCONTROLEEXAMES.LISTAFUNCAO.Enabled = True
FRMCONTROLEEXAMES.LABELTIPOEXAME.Enabled = True
FRMCONTROLEEXAMES.LISTATIPOEXAME.Enabled = True
FRMCONTROLEEXAMES.LABELEXAME.Enabled = True
FRMCONTROLEEXAMES.LISTAEXAME.Enabled = True
FRMCONTROLEEXAMES.LABELDATAPROXIMOEXAME.Enabled = True
FRMCONTROLEEXAMES.TEXTODATAPROXIMOEXAME.Enabled = True

End Sub
Sub limpar_controleexames()

FRMCONTROLEEXAMES.TEXTOMATRICULA = Empty
FRMCONTROLEEXAMES.TEXTONOMEDOCOLABORADOR = Empty
FRMCONTROLEEXAMES.TEXTODATADEADMISSAO = Empty
FRMCONTROLEEXAMES.TEXTODATADEENTREGA = Empty
FRMCONTROLEEXAMES.LISTACENTRODECUSTO = Empty
FRMCONTROLEEXAMES.LISTAFUNCAO = Empty
FRMCONTROLEEXAMES.LISTATIPOEXAME = Empty
FRMCONTROLEEXAMES.LISTAEXAME = Empty
FRMCONTROLEEXAMES.TEXTODATAPROXIMOEXAME = Empty

End Sub
Sub limpar_parcialmente_controleexames()

FRMCONTROLEEXAMES.TEXTODATADEENTREGA = Empty
FRMCONTROLEEXAMES.LISTAEXAME = Empty
FRMCONTROLEEXAMES.TEXTODATAPROXIMOEXAME = Empty

End Sub


Sub ultimo_registro_controle_exames()
Dim intervalo As Range
Dim registro
Set intervalo = Sheets("base dados").Range("a:a")
registro = Application.WorksheetFunction.Max(intervalo)
FRMCONTROLEEXAMES.LABELREGISTRO = registro
End Sub
Sub novo_registro_controle_exames()
Dim intervalo As Range
Dim registro
Set intervalo = Sheets("base dados").Range("a:a")
registro = Application.WorksheetFunction.Max(intervalo)
FRMCONTROLEEXAMES.LABELREGISTRO = registro + 1
End Sub
Sub habilitar_botao_cadastrar_controleexames()

Dim crtl As Control

For Each crtl In FRMCONTROLEEXAMES.Controls
    If crtl.BackColor = &HC0FFFF Then
        FRMCONTROLEEXAMES.CMDCADASTRAR.Enabled = False
        Exit Sub
    Else
        FRMCONTROLEEXAMES.CMDCADASTRAR.Enabled = True
    End If
Next
End Sub
Sub calcular_dias_exames()

If FRMCONTROLEEXAMES.LISTATIPOEXAME <> "DEMISSIONAL" Then
If FRMCONTROLEEXAMES.LISTATIPOEXAME <> "" And FRMCONTROLEEXAMES.LISTAEXAME <> "" And FRMCONTROLEEXAMES.TEXTODATADEENTREGA <> "" Then
Dim diasparaproximoexame As Double
Dim intervalo As Range
Dim pesquisa
Dim proximoexame As Date
Dim datadoexame As Date

Set intervalo = Sheets("tabela exames").Range("d:e")
On Error Resume Next
pesquisa = FRMCONTROLEEXAMES.LISTATIPOEXAME & FRMCONTROLEEXAMES.LISTAEXAME

diasparaproximoexame = Application.WorksheetFunction.VLookup(pesquisa, intervalo, 2, False)
datadoexame = FRMCONTROLEEXAMES.TEXTODATADEENTREGA
proximoexame = datadoexame + diasparaproximoexame

FRMCONTROLEEXAMES.TEXTODATAPROXIMOEXAME = Format(proximoexame, "dd/mm/yyyy")
Else
FRMCONTROLEEXAMES.TEXTODATAPROXIMOEXAME = Empty
End If
Else
FRMCONTROLEEXAMES.TEXTODATAPROXIMOEXAME = Empty
End If
End Sub
Sub calcular_dias_exames_alteracao()

If FRMALTERACAOCONTROLEEXAMES.LISTATIPOEXAME <> "DEMISSIONAL" Then
If FRMALTERACAOCONTROLEEXAMES.LISTATIPOEXAME <> "" And FRMALTERACAOCONTROLEEXAMES.LISTAEXAME <> "" And FRMALTERACAOCONTROLEEXAMES.TEXTODATADEENTREGA <> "" Then
Dim diasparaproximoexame As Double
Dim intervalo As Range
Dim pesquisa
Dim proximoexame As Date
Dim datadoexame As Date

Set intervalo = Sheets("tabela exames").Range("d:e")
On Error Resume Next
pesquisa = FRMALTERACAOCONTROLEEXAMES.LISTATIPOEXAME & FRMALTERACAOCONTROLEEXAMES.LISTAEXAME

diasparaproximoexame = Application.WorksheetFunction.VLookup(pesquisa, intervalo, 2, False)
datadoexame = FRMALTERACAOCONTROLEEXAMES.TEXTODATADEENTREGA
proximoexame = datadoexame + diasparaproximoexame

FRMALTERACAOCONTROLEEXAMES.TEXTODATAPROXIMOEXAME = Format(proximoexame, "dd/mm/yyyy")
Else
FRMALTERACAOCONTROLEEXAMES.TEXTODATAPROXIMOEXAME = Empty
End If
Else
FRMALTERACAOCONTROLEEXAMES.TEXTODATAPROXIMOEXAME = Empty
End If
End Sub
Sub cadastrar_controle_exames()

Call filtro_cadastro_controleexames
Dim intervalo As Range
Set intervalo = Sheets("base dados filtro").Range("b:b")
linharegistro = Application.WorksheetFunction.Max(intervalo) + 1

linha = 2
Do Until Sheets("base dados").Cells(linha, 5) = ""
linha = linha + 1
Loop
On Error Resume Next
    Sheets("base dados").Cells(linha, 1) = FRMCONTROLEEXAMES.LABELREGISTRO / 1
    Sheets("base dados").Cells(linha, 2) = linharegistro / 1
    Sheets("base dados").Cells(linha, 3) = (FRMCONTROLEEXAMES.TEXTOMATRICULA & linharegistro) / 1
    Sheets("base dados").Cells(linha, 4) = FRMCONTROLEEXAMES.TEXTOMATRICULA / 1
    Sheets("base dados").Cells(linha, 5) = FRMCONTROLEEXAMES.TEXTONOMEDOCOLABORADOR
    Sheets("base dados").Cells(linha, 6) = FRMCONTROLEEXAMES.LISTACENTRODECUSTO
    Sheets("base dados").Cells(linha, 7) = FRMCONTROLEEXAMES.LISTAFUNCAO
    Sheets("base dados").Cells(linha, 8) = Format(FRMCONTROLEEXAMES.TEXTODATADEADMISSAO, "mm/dd/yyyy")
    Sheets("base dados").Cells(linha, 9) = FRMCONTROLEEXAMES.LISTATIPOEXAME
    Sheets("base dados").Cells(linha, 10) = FRMCONTROLEEXAMES.LISTAEXAME
    Sheets("base dados").Cells(linha, 11) = Format(FRMCONTROLEEXAMES.TEXTODATADEENTREGA, "mm/dd/yyyy")
    Sheets("base dados").Cells(linha, 12) = Format(FRMCONTROLEEXAMES.TEXTODATAPROXIMOEXAME, "mm/dd/yyyy")
        If FRMCONTROLEEXAMES.LISTATIPOEXAME = "DEMISSIONAL" Then
            Sheets("base dados").Cells(linha, 12) = Format(FRMCONTROLEEXAMES.TEXTODATADEENTREGA, "mm/dd/yyyy")
            Sheets("base dados").Cells(linha, 13) = Format(FRMCONTROLEEXAMES.TEXTODATADEENTREGA, "mm/dd/yyyy")
        End If
    
Call calcular_validade_exames
ActiveWorkbook.Save
MsgBox "Exame cadastrado com sucesso"

resposta = MsgBox("Deseja continuar a cadastrar exames para este funcionario?", vbYesNo)

If resposta = vbYes Then
    Call limpar_parcialmente_controleexames
    Call filtro_cadastro_controleexames
    Call atualizar_controleexames
End If
If resposta = vbNo Then
    Call filtro_cadastro_controleexames
    Call atualizar_controleexames
    Call limpar_controleexames
    Call desabilitar_formulario_controleexames
    FRMCONTROLEEXAMES.OPCAOLANCAMENTOEXAME.Value = False
End If

End Sub
Sub filtro_controleexames()
Sheets("base dados filtro").Range("a2:n2") = Empty


If FRMCONTROLEEXAMES.TEXTONOMEDOCOLABORADORFILTRO <> "" Then
Sheets("base dados filtro").Range("e2") = "*" & FRMCONTROLEEXAMES.TEXTONOMEDOCOLABORADORFILTRO
Else
Sheets("base dados filtro").Range("e2") = Empty
End If

If FRMCONTROLEEXAMES.LISTACENTRODECUSTOFILTRO <> "" Then
Sheets("base dados filtro").Range("f2") = FRMCONTROLEEXAMES.LISTACENTRODECUSTOFILTRO
Else
Sheets("base dados filtro").Range("f2") = Empty
End If

If FRMCONTROLEEXAMES.LISTASTATUSFILTRO <> "" Then
Sheets("base dados filtro").Range("n2") = FRMCONTROLEEXAMES.LISTASTATUSFILTRO
Else
Sheets("base dados filtro").Range("n2") = Empty
End If

Sheets("Base Dados").Columns("A:N").AdvancedFilter Action:=xlFilterCopy, _
        CriteriaRange:=Sheets("Base Dados Filtro").Range("A1:N2"), CopyToRange:=Sheets("Base Dados Filtro").Range("A5:N5"), Unique:=False

End Sub

Sub filtro_cadastro_controleexames()
Sheets("base dados filtro").Range("a2:n2") = Empty
Sheets("base dados filtro").Range("d2") = FRMCONTROLEEXAMES.TEXTOMATRICULA / 1
Sheets("base dados filtro").Range("e2") = FRMCONTROLEEXAMES.TEXTONOMEDOCOLABORADOR

Sheets("Base Dados").Columns("A:N").AdvancedFilter Action:=xlFilterCopy, _
        CriteriaRange:=Sheets("Base Dados Filtro").Range("A1:N2"), CopyToRange:=Sheets("Base Dados Filtro").Range("A5:N5"), Unique:=False

End Sub
Sub atualizar_controleexames()
Dim ultimoregistro As Double
ultimoregistro = Sheets("base dados filtro").Cells(Rows.Count, 5).End(xlUp).Row
FRMCONTROLEEXAMES.ListBox1.Clear
linhabox = 0
For linha = 6 To ultimoregistro
    With FRMCONTROLEEXAMES.ListBox1
    On Error Resume Next
        .AddItem
        .ColumnCount = 9
        .List(linhabox, 0) = Sheets("base dados filtro").Cells(linha, 2)
        .List(linhabox, 1) = Sheets("base dados filtro").Cells(linha, 4)
        .List(linhabox, 2) = Sheets("base dados filtro").Cells(linha, 5)
        .List(linhabox, 3) = Sheets("base dados filtro").Cells(linha, 9)
        .List(linhabox, 4) = Sheets("base dados filtro").Cells(linha, 10)
        .List(linhabox, 5) = Format(Sheets("base dados filtro").Cells(linha, 11), "dd/mm/yyyy")
        .List(linhabox, 6) = Format(Sheets("base dados filtro").Cells(linha, 12), "dd/mm/yyyy")
        .List(linhabox, 7) = Format(Sheets("base dados filtro").Cells(linha, 13), "dd/mm/yyyy")
        .List(linhabox, 8) = Sheets("base dados filtro").Cells(linha, 14)
    linhabox = linhabox + 1
    End With
Next
FRMCONTROLEEXAMES.LABELTOTALDEREGISTROS = FRMCONTROLEEXAMES.ListBox1.ListCount
End Sub
Sub calcular_validade_exames()

Dim ultimoregistro As Double
Dim datadehoje As Date
Dim datadoexame As Date
Dim valor As Double


datadehoje = Format(Date, "dd/mm/yyyy")


ultimoregistro = Sheets("base dados").Cells(Rows.Count, 5).End(xlUp).Row

For linha = 2 To ultimoregistro
    If Sheets("base dados").Cells(linha, 13) = "" Then
       
       datadoexame = Sheets("base dados").Cells(linha, 12)
       
       valor = datadoexame - datadehoje
       
       Select Case valor
            Case Is <= 0
                Sheets("base dados").Cells(linha, 14) = "FORA DO PRAZO"
            Case Is = 1
                Sheets("base dados").Cells(linha, 14) = "PROXIMO A VENCER"
            Case Is = 2
                Sheets("base dados").Cells(linha, 14) = "PROXIMO A VENCER"
            Case Is = 3
                Sheets("base dados").Cells(linha, 14) = "PROXIMO A VENCER"
            Case Is = 4
                Sheets("base dados").Cells(linha, 14) = "PROXIMO A VENCER"
            Case Is = 5
                Sheets("base dados").Cells(linha, 14) = "PROXIMO A VENCER"
            Case Is = 6
                Sheets("base dados").Cells(linha, 14) = "PROXIMO A VENCER"
            Case Is = 7
                Sheets("base dados").Cells(linha, 14) = "PROXIMO A VENCER"
            Case Is = 8
                Sheets("base dados").Cells(linha, 14) = "PROXIMO A VENCER"
            Case Is = 9
                Sheets("base dados").Cells(linha, 14) = "PROXIMO A VENCER"
            Case Is = 10
                Sheets("base dados").Cells(linha, 14) = "PROXIMO A VENCER"
            Case Is = 11
                Sheets("base dados").Cells(linha, 14) = "PROXIMO A VENCER"
            Case Is = 12
                Sheets("base dados").Cells(linha, 14) = "PROXIMO A VENCER"
            Case Is = 13
                Sheets("base dados").Cells(linha, 14) = "PROXIMO A VENCER"
            Case Is = 14
                Sheets("base dados").Cells(linha, 14) = "PROXIMO A VENCER"
            Case Is = 15
                Sheets("base dados").Cells(linha, 14) = "PROXIMO A VENCER"
            Case Is = 16
                Sheets("base dados").Cells(linha, 14) = "PROXIMO A VENCER"
            Case Is = 17
                Sheets("base dados").Cells(linha, 14) = "PROXIMO A VENCER"
            Case Is = 18
                Sheets("base dados").Cells(linha, 14) = "PROXIMO A VENCER"
            Case Is = 19
                Sheets("base dados").Cells(linha, 14) = "PROXIMO A VENCER"
            Case Is = 20
                Sheets("base dados").Cells(linha, 14) = "PROXIMO A VENCER"
            Case Is = 21
                Sheets("base dados").Cells(linha, 14) = "PROXIMO A VENCER"
            Case Is = 22
                Sheets("base dados").Cells(linha, 14) = "PROXIMO A VENCER"
            Case Is = 23
                Sheets("base dados").Cells(linha, 14) = "PROXIMO A VENCER"
            Case Is = 24
                Sheets("base dados").Cells(linha, 14) = "PROXIMO A VENCER"
            Case Is = 25
                Sheets("base dados").Cells(linha, 14) = "PROXIMO A VENCER"
            Case Is = 26
                Sheets("base dados").Cells(linha, 14) = "PROXIMO A VENCER"
            Case Is = 27
                Sheets("base dados").Cells(linha, 14) = "PROXIMO A VENCER"
            Case Is = 28
                Sheets("base dados").Cells(linha, 14) = "PROXIMO A VENCER"
            Case Is = 29
                Sheets("base dados").Cells(linha, 14) = "PROXIMO A VENCER"
            Case Is > 30
                Sheets("base dados").Cells(linha, 14) = "DENTRO DO PRAZO"
       End Select
       Else
                Sheets("base dados").Cells(linha, 14) = "OK"
       End If
Next
End Sub
Attribute VB_Name = "EstaPasta_de_trabalho"
Attribute VB_Base = "0{00020819-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Private Sub Workbook_Open()
Application.Visible = False

'Dim datadehoje As Date
'Dim datalimite As Date

'datadehoje = Date
'datalimite = Format("08/09/2016", "dd/mm/yyyy")

'If datadehoje <= datalimite Then

       Call calcular_validade_exames
        FRMMENU.Show vbModeless
   'Else
        'MsgBox "Controle de Exame Medicos ASO fora do periodo de experimenta|fffd||fffd|o"
        'ActiveWindow.Close savechanges = True
   'Exit Sub
'End If
End Sub

Attribute VB_Name = "FILTROFUNCIONARIOS"
Sub filtro_funcionarios_pesquisa()

Sheets("filtro funcionarios").Range("a2:h2") = Empty

Sheets("filtro funcionarios").Range("c2") = "*" & FRMPESQUISAFUNCIONARIO.TEXTONOMEDOCOLABORADOR
Sheets("filtro funcionarios").Range("h2") = FRMPESQUISAFUNCIONARIO.LISTASTATUS

Sheets("Funcionarios").Columns("A:H").AdvancedFilter Action:=xlFilterCopy, _
        CriteriaRange:=Sheets("filtro funcionarios").Range("A1:H2"), CopyToRange:=Sheets("filtro funcionarios").Range("A5:H5"), Unique:=False

End Sub
Sub atualizar_funcionarios_pesquisa()
Dim ultimoregistro As Integer

ultimoregistro = Sheets("filtro funcionarios").Cells(Rows.Count, 3).End(xlUp).Row

FRMPESQUISAFUNCIONARIO.ListBox1.Clear

linhabox = 0
For linha = 6 To ultimoregistro
    With FRMPESQUISAFUNCIONARIO.ListBox1
        .AddItem
        .ColumnCount = 6
        
        .List(linhabox, 0) = Sheets("filtro funcionarios").Cells(linha, 1)
        .List(linhabox, 1) = Sheets("filtro funcionarios").Cells(linha, 2)
        .List(linhabox, 2) = Sheets("filtro funcionarios").Cells(linha, 3)
        .List(linhabox, 3) = Format(Sheets("filtro funcionarios").Cells(linha, 4), "dd/mm/yyyy")
        .List(linhabox, 4) = Sheets("filtro funcionarios").Cells(linha, 6)
        .List(linhabox, 5) = Sheets("filtro funcionarios").Cells(linha, 7)
        
    linhabox = linhabox + 1
    End With
Next
FRMPESQUISAFUNCIONARIO.LABELTOTALDEREGISTROS = FRMPESQUISAFUNCIONARIO.ListBox1.ListCount
End Sub
Sub enviar_funcionarios_para_controledeexames()

linha = FRMPESQUISAFUNCIONARIO.ListBox1.ListIndex

FRMCONTROLEEXAMES.TEXTOMATRICULA = FRMPESQUISAFUNCIONARIO.ListBox1.List(linha, 1)
FRMCONTROLEEXAMES.TEXTONOMEDOCOLABORADOR = FRMPESQUISAFUNCIONARIO.ListBox1.List(linha, 2)
FRMCONTROLEEXAMES.LISTACENTRODECUSTO = FRMPESQUISAFUNCIONARIO.ListBox1.List(linha, 4)
FRMCONTROLEEXAMES.LISTAFUNCAO = FRMPESQUISAFUNCIONARIO.ListBox1.List(linha, 5)
FRMCONTROLEEXAMES.TEXTODATADEADMISSAO = FRMPESQUISAFUNCIONARIO.ListBox1.List(linha, 3)

Call filtro_cadastro_controleexames
Call atualizar_controleexames

End Sub
Attribute VB_Name = "FRMALTERACAOCENTROCUSTO"
Attribute VB_Base = "0{0D3F44DC-834C-40AC-9CDF-4A259B2F988D}{ED860C2B-F975-4ECD-95AF-EF40F058CCE7}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Private Sub CMDALTERAR_Click()
Call alterar_centro_custo
Unload Me
End Sub
Private Sub CMDCANCELAR_Click()
Unload Me
End Sub

Private Sub CMDEXCLUIR_Click()
Call excluir_centro_custo
Unload Me
End Sub

Private Sub TEXTOCENTRODECUSTO_Change()
If FRMALTERACAOCENTROCUSTO.TEXTOCENTRODECUSTO <> "" Then
FRMALTERACAOCENTROCUSTO.TEXTOCENTRODECUSTO.BackColor = &HFFFFFF
Else
FRMALTERACAOCENTROCUSTO.TEXTOCENTRODECUSTO.BackColor = &HC0FFFF
End If

If FRMALTERACAOCENTROCUSTO.TEXTOCENTRODECUSTO <> "" Then
FRMALTERACAOCENTROCUSTO.CMDALTERAR.Enabled = True
Else
FRMALTERACAOCENTROCUSTO.CMDALTERAR.Enabled = False
End If

End Sub

Private Sub TEXTOCENTRODECUSTO_KeyPress(ByVal KeyAscii As MSForms.ReturnInteger)
KeyAscii = Asc(UCase(Chr(KeyAscii)))
End Sub
Private Sub UserForm_Initialize()
On Error GoTo erro1
Call enviar_alterar_centro_custo
erro1:
End Sub


Attribute VB_Name = "FRMALTERACAOCONTROLEEXAMES"
Attribute VB_Base = "0{24DD72D1-18F8-4C4B-8070-ACF78072F032}{5B0247F9-22B8-4C94-A311-1AA8F37F16B0}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Private Sub CMDALTERAR_Click()
Call alterar_examemedicos
Unload Me
End Sub

Private Sub CMDEXCLUIR_Click()
Call excluir_examemedicos
Unload Me
End Sub

Private Sub CMDFECHAR_Click()
Unload Me
End Sub

Private Sub LISTACENTRODECUSTO_Change()
If FRMALTERACAOCONTROLEEXAMES.LISTACENTRODECUSTO <> "" Then
FRMALTERACAOCONTROLEEXAMES.LISTACENTRODECUSTO.BackColor = &HFFFFFF
Else
FRMALTERACAOCONTROLEEXAMES.LISTACENTRODECUSTO.BackColor = &HC0FFFF
End If
End Sub

Private Sub LISTAEXAME_Change()
If FRMALTERACAOCONTROLEEXAMES.LISTAEXAME <> "" Then
FRMALTERACAOCONTROLEEXAMES.LISTAEXAME.BackColor = &HFFFFFF
Else
FRMALTERACAOCONTROLEEXAMES.LISTAEXAME.BackColor = &HC0FFFF
End If
Call habilitar_botao_alterar_controleexames
Call calcular_dias_exames_alteracao
End Sub

Private Sub LISTAEXAME_KeyPress(ByVal KeyAscii As MSForms.ReturnInteger)
KeyAscii = 0
End Sub

Private Sub LISTAFUNCAO_Change()
If FRMALTERACAOCONTROLEEXAMES.LISTAFUNCAO <> "" Then
FRMALTERACAOCONTROLEEXAMES.LISTAFUNCAO.BackColor = &HFFFFFF
Else
FRMALTERACAOCONTROLEEXAMES.LISTAFUNCAO.BackColor = &HC0FFFF
End If
End Sub

Private Sub LISTATIPOEXAME_Change()
If FRMALTERACAOCONTROLEEXAMES.LISTATIPOEXAME <> "" Then
FRMALTERACAOCONTROLEEXAMES.LISTATIPOEXAME.BackColor = &HFFFFFF
Else
FRMALTERACAOCONTROLEEXAMES.LISTATIPOEXAME.BackColor = &HC0FFFF
End If

If FRMALTERACAOCONTROLEEXAMES.LISTATIPOEXAME = "DEMISSIONAL" Then
FRMALTERACAOCONTROLEEXAMES.TEXTODATAPROXIMOEXAME = Empty
FRMALTERACAOCONTROLEEXAMES.TEXTODATAPROXIMOEXAME.BackColor = &HFFFFFF
End If

Call habilitar_botao_alterar_controleexames
Call calcular_dias_exames_alteracao
End Sub

Private Sub LISTATIPOEXAME_KeyPress(ByVal KeyAscii As MSForms.ReturnInteger)
KeyAscii = 0
End Sub

Private Sub TEXTODATADEADMISSAO_Change()
If FRMALTERACAOCONTROLEEXAMES.TEXTODATADEADMISSAO <> "" Then
FRMALTERACAOCONTROLEEXAMES.TEXTODATADEADMISSAO.BackColor = &HFFFFFF
Else
FRMALTERACAOCONTROLEEXAMES.TEXTODATADEADMISSAO.BackColor = &HC0FFFF
End If
End Sub

Private Sub TEXTODATADEENTREGA_AfterUpdate()
If FRMALTERACAOCONTROLEEXAMES.TEXTODATADEENTREGA <> "" Then
Call calcular_dias_exames_alteracao
End If
End Sub

Private Sub TEXTODATADEENTREGA_Change()
If FRMALTERACAOCONTROLEEXAMES.TEXTODATADEENTREGA <> "" Then
FRMALTERACAOCONTROLEEXAMES.TEXTODATADEENTREGA.BackColor = &HFFFFFF
Else
FRMALTERACAOCONTROLEEXAMES.TEXTODATADEENTREGA.BackColor = &HC0FFFF
End If

If Len(FRMALTERACAOCONTROLEEXAMES.TEXTODATADEENTREGA) = 2 Then
FRMALTERACAOCONTROLEEXAMES.TEXTODATADEENTREGA = FRMALTERACAOCONTROLEEXAMES.TEXTODATADEENTREGA + "/"
End If
If Len(FRMALTERACAOCONTROLEEXAMES.TEXTODATADEENTREGA) = 5 Then
FRMALTERACAOCONTROLEEXAMES.TEXTODATADEENTREGA = FRMALTERACAOCONTROLEEXAMES.TEXTODATADEENTREGA + "/"
End If
Call habilitar_botao_alterar_controleexames

End Sub

Private Sub TEXTODATADEENTREGA_KeyPress(ByVal KeyAscii As MSForms.ReturnInteger)
If KeyAscii < 48 Or KeyAscii > 57 Then
KeyAscii = 0
End If
End Sub

Private Sub TEXTODATADEENTREGA_MouseDown(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
FRMALTERACAOCONTROLEEXAMES.TEXTODATADEENTREGA = Empty
FRMALTERACAOCONTROLEEXAMES.TEXTODATAPROXIMOEXAME = Empty
End Sub

Private Sub TEXTODATAPROXIMOEXAME_Change()
If FRMALTERACAOCONTROLEEXAMES.TEXTODATAPROXIMOEXAME <> "" Then
FRMALTERACAOCONTROLEEXAMES.TEXTODATAPROXIMOEXAME.BackColor = &HFFFFFF
Else
FRMALTERACAOCONTROLEEXAMES.TEXTODATAPROXIMOEXAME.BackColor = &HC0FFFF
End If
If Len(FRMALTERACAOCONTROLEEXAMES.TEXTODATAPROXIMOEXAME) = 2 Then
FRMALTERACAOCONTROLEEXAMES.TEXTODATAPROXIMOEXAME = FRMALTERACAOCONTROLEEXAMES.TEXTODATAPROXIMOEXAME + "/"
End If
If Len(FRMALTERACAOCONTROLEEXAMES.TEXTODATAPROXIMOEXAME) = 5 Then
FRMALTERACAOCONTROLEEXAMES.TEXTODATAPROXIMOEXAME = FRMALTERACAOCONTROLEEXAMES.TEXTODATAPROXIMOEXAME + "/"
End If

If FRMALTERACAOCONTROLEEXAMES.LISTATIPOEXAME = "DEMISSIONAL" Then
FRMALTERACAOCONTROLEEXAMES.TEXTODATAPROXIMOEXAME = Empty
FRMALTERACAOCONTROLEEXAMES.TEXTODATAPROXIMOEXAME.BackColor = &HFFFFFF
Exit Sub
End If

Call habilitar_botao_alterar_controleexames
End Sub

Private Sub TEXTODATAPROXIMOEXAME_KeyPress(ByVal KeyAscii As MSForms.ReturnInteger)
If KeyAscii < 48 Or KeyAscii > 57 Then
KeyAscii = 0
End If
End Sub

Private Sub TEXTODATAREALIZACAO_Change()
If Len(FRMALTERACAOCONTROLEEXAMES.TEXTODATAREALIZACAO) = 2 Then
FRMALTERACAOCONTROLEEXAMES.TEXTODATAREALIZACAO = FRMALTERACAOCONTROLEEXAMES.TEXTODATAREALIZACAO + "/"
End If
If Len(FRMALTERACAOCONTROLEEXAMES.TEXTODATAREALIZACAO) = 5 Then
FRMALTERACAOCONTROLEEXAMES.TEXTODATAREALIZACAO = FRMALTERACAOCONTROLEEXAMES.TEXTODATAREALIZACAO + "/"
End If
End Sub

Private Sub TEXTODATAREALIZACAO_MouseDown(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
FRMALTERACAOCONTROLEEXAMES.TEXTODATAREALIZACAO = Empty
End Sub

Private Sub TEXTOMATRICULA_Change()
If FRMALTERACAOCONTROLEEXAMES.TEXTOMATRICULA <> "" Then
FRMALTERACAOCONTROLEEXAMES.TEXTOMATRICULA.BackColor = &HFFFFFF
Else
FRMALTERACAOCONTROLEEXAMES.TEXTOMATRICULA.BackColor = &HC0FFFF
End If

End Sub

Private Sub TEXTONOMEDOCOLABORADOR_Change()
If FRMALTERACAOCONTROLEEXAMES.TEXTONOMEDOCOLABORADOR <> "" Then
FRMALTERACAOCONTROLEEXAMES.TEXTONOMEDOCOLABORADOR.BackColor = &HFFFFFF
Else
FRMALTERACAOCONTROLEEXAMES.TEXTONOMEDOCOLABORADOR.BackColor = &HC0FFFF
End If
End Sub

Private Sub UserForm_Initialize()
Call enviar_alteracao_examesmedicos

FRMALTERACAOCONTROLEEXAMES.LISTATIPOEXAME.RowSource = Sheets("informacoes").Range("c1")
FRMALTERACAOCONTROLEEXAMES.LISTAEXAME.RowSource = Sheets("informacoes").Range("e1")

End Sub
Attribute VB_Name = "FRMALTERACAOFUNCIONARIO"
Attribute VB_Base = "0{283A5367-464E-4410-8559-9667ECCB53BE}{11A35005-B045-4B84-B9E5-B12FE49AD9A6}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Private Sub CMDALTERAR_Click()
Call alterar_funcionario
Unload Me
End Sub

Private Sub CMDEXCLUIR_Click()
Call excluir_funcionario
Unload Me
End Sub

Private Sub CMDFECHAR_Click()
Unload Me
End Sub

Private Sub LISTACARGO_Change()
If FRMALTERACAOFUNCIONARIO.LISTACARGO <> "" Then
FRMALTERACAOFUNCIONARIO.LISTACARGO.BackColor = &HFFFFFF
Else
FRMALTERACAOFUNCIONARIO.LISTACARGO.BackColor = &HC0FFFF
End If
Call habilitar_botao_alterar_funcionario
End Sub

Private Sub LISTACARGO_KeyPress(ByVal KeyAscii As MSForms.ReturnInteger)
KeyAscii = 0
End Sub

Private Sub LISTACENTRODECUSTO_Change()
If FRMALTERACAOFUNCIONARIO.LISTACENTRODECUSTO <> "" Then
FRMALTERACAOFUNCIONARIO.LISTACENTRODECUSTO.BackColor = &HFFFFFF
Else
FRMALTERACAOFUNCIONARIO.LISTACENTRODECUSTO.BackColor = &HC0FFFF
End If
Call habilitar_botao_alterar_funcionario
End Sub

Private Sub TextBox1_Change()

End Sub

Private Sub LISTACENTRODECUSTO_KeyPress(ByVal KeyAscii As MSForms.ReturnInteger)
KeyAscii = 0
End Sub

Private Sub TEXTODATADEADMISSAO_Change()
If Len(FRMALTERACAOFUNCIONARIO.TEXTODATADEADMISSAO) = 2 Then
FRMALTERACAOFUNCIONARIO.TEXTODATADEADMISSAO = FRMALTERACAOFUNCIONARIO.TEXTODATADEADMISSAO + "/"
End If
If Len(FRMALTERACAOFUNCIONARIO.TEXTODATADEADMISSAO) = 5 Then
FRMALTERACAOFUNCIONARIO.TEXTODATADEADMISSAO = FRMALTERACAOFUNCIONARIO.TEXTODATADEADMISSAO + "/"
End If

If FRMALTERACAOFUNCIONARIO.TEXTODATADEADMISSAO <> "" Then
FRMALTERACAOFUNCIONARIO.TEXTODATADEADMISSAO.BackColor = &HFFFFFF
Else
FRMALTERACAOFUNCIONARIO.TEXTODATADEADMISSAO.BackColor = &HC0FFFF
End If
Call habilitar_botao_alterar_funcionario
End Sub

Private Sub TEXTODATADEADMISSAO_KeyPress(ByVal KeyAscii As MSForms.ReturnInteger)
If KeyAscii < 48 Or KeyAscii > 57 Then
KeyAscii = 0
End If
End Sub

Private Sub TEXTODATADEADMISSAO_MouseDown(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
FRMALTERACAOFUNCIONARIO.TEXTODATADEADMISSAO = Empty
End Sub

Private Sub TEXTODATADESLIGAMENTO_Change()

If Len(FRMALTERACAOFUNCIONARIO.TEXTODATADESLIGAMENTO) = 2 Then
FRMALTERACAOFUNCIONARIO.TEXTODATADESLIGAMENTO = FRMALTERACAOFUNCIONARIO.TEXTODATADESLIGAMENTO + "/"
End If
If Len(FRMALTERACAOFUNCIONARIO.TEXTODATADESLIGAMENTO) = 5 Then
FRMALTERACAOFUNCIONARIO.TEXTODATADESLIGAMENTO = FRMALTERACAOFUNCIONARIO.TEXTODATADESLIGAMENTO + "/"
End If

End Sub

Private Sub TEXTODATADESLIGAMENTO_KeyPress(ByVal KeyAscii As MSForms.ReturnInteger)
If KeyAscii < 48 Or KeyAscii > 57 Then
KeyAscii = 0
End If
End Sub

Private Sub TEXTODATADESLIGAMENTO_MouseDown(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
FRMALTERACAOFUNCIONARIO.TEXTODATADESLIGAMENTO = Empty
End Sub

Private Sub TEXTOMATRICULA_Change()
If FRMALTERACAOFUNCIONARIO.TEXTOMATRICULA <> "" Then
FRMALTERACAOFUNCIONARIO.TEXTOMATRICULA.BackColor = &HFFFFFF
Else
FRMALTERACAOFUNCIONARIO.TEXTOMATRICULA.BackColor = &HC0FFFF
End If
Call habilitar_botao_alterar_funcionario
End Sub

Private Sub TEXTOMATRICULA_KeyPress(ByVal KeyAscii As MSForms.ReturnInteger)
If KeyAscii < 48 Or KeyAscii > 57 Then
KeyAscii = 0
End If
End Sub

Private Sub TEXTONOMEDOFUNCIONARIO_Change()
If FRMALTERACAOFUNCIONARIO.TEXTONOMEDOFUNCIONARIO <> "" Then
FRMALTERACAOFUNCIONARIO.TEXTONOMEDOFUNCIONARIO.BackColor = &HFFFFFF
Else
FRMALTERACAOFUNCIONARIO.TEXTONOMEDOFUNCIONARIO.BackColor = &HC0FFFF
End If
Call habilitar_botao_alterar_funcionario
End Sub

Private Sub TEXTONOMEDOFUNCIONARIO_KeyPress(ByVal KeyAscii As MSForms.ReturnInteger)
KeyAscii = Asc(UCase(Chr(KeyAscii)))
End Sub

Private Sub UserForm_Click()

End Sub

Private Sub UserForm_Initialize()
On Error GoTo erro1
Call enviar_alterar_funcionarios
FRMALTERACAOFUNCIONARIO.LISTACENTRODECUSTO.RowSource = Sheets("centro de custos").Range("b1")
FRMALTERACAOFUNCIONARIO.LISTACARGO.RowSource = Sheets("cargos").Range("b1")
erro1:
End Sub
Attribute VB_Name = "FRMALTERARCARGOS"
Attribute VB_Base = "0{590577A5-A161-4E6F-A634-35F17629810A}{2E3E0771-4A4E-4F89-932F-729902F65750}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Private Sub CMDALTERAR_Click()
Call alterar_cargos
Unload Me
End Sub

Private Sub CMDCANCELAR_Click()
Unload Me
End Sub

Private Sub CMDEXCLUIR_Click()
Call excluir_cargos
Unload Me
End Sub

Private Sub TEXTOCARGO_Change()
If FRMALTERARCARGOS.TEXTOCARGO <> "" Then
FRMALTERARCARGOS.TEXTOCARGO.BackColor = &HFFFFFF
Else
FRMALTERARCARGOS.TEXTOCARGO.BackColor = &HC0FFFF
End If
If FRMALTERARCARGOS.TEXTOCARGO <> "" Then
FRMALTERARCARGOS.CMDALTERAR.Enabled = True
Else
FRMALTERARCARGOS.CMDALTERAR.Enabled = False
End If
End Sub

Private Sub TEXTOCARGO_KeyPress(ByVal KeyAscii As MSForms.ReturnInteger)
KeyAscii = Asc(UCase(Chr(KeyAscii)))
End Sub

Private Sub UserForm_Initialize()
On Error GoTo erro1
Call enviar_alterar_cargos
erro1:
End Sub
Attribute VB_Name = "FRMCADASTROFUNCIONARIOS"
Attribute VB_Base = "0{7F1A0004-2FDD-4724-AF58-C9B76E1044C3}{BD93D8C1-E70B-40EE-BEEE-24B58BB25170}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Private Sub CMDCADASTRAR_Click()
Call cadastrar_funcionario
End Sub
Private Sub CMDFECHAR_Click()
Unload Me
FRMMENU.Show
End Sub
Private Sub CMDFILTRAR_Click()
Call filtro_cadastro_funcionarios
Call atualizar_cadastro_funcionarios
End Sub
Private Sub CMDLIMPAR_Click()
Call limpar_formulario_cadastro_funcionario
Call desabilitar_formulario_cadastrar_funcionario
FRMCADASTROFUNCIONARIOS.OPCAONOVOFUNCIONARIO.Value = False
End Sub
Private Sub LISTACARGO_Change()
If FRMCADASTROFUNCIONARIOS.LISTACARGO <> "" Then
FRMCADASTROFUNCIONARIOS.LISTACARGO.BackColor = &HFFFFFF
Else
FRMCADASTROFUNCIONARIOS.LISTACARGO.BackColor = &HC0FFFF
End If
Call habilitar_botao_cadastrar_funcionario
End Sub
Private Sub LISTACARGO_KeyPress(ByVal KeyAscii As MSForms.ReturnInteger)
KeyAscii = 0
End Sub
Private Sub LISTACARGOFILTRO_KeyPress(ByVal KeyAscii As MSForms.ReturnInteger)
KeyAscii = 0
End Sub
Private Sub LISTACENTRODECUSTO_Change()
If FRMCADASTROFUNCIONARIOS.LISTACENTRODECUSTO <> "" Then
FRMCADASTROFUNCIONARIOS.LISTACENTRODECUSTO.BackColor = &HFFFFFF
Else
FRMCADASTROFUNCIONARIOS.LISTACENTRODECUSTO.BackColor = &HC0FFFF
End If
Call habilitar_botao_cadastrar_funcionario
End Sub
Private Sub LISTACENTRODECUSTO_KeyPress(ByVal KeyAscii As MSForms.ReturnInteger)
KeyAscii = 0
End Sub
Private Sub LISTACENTRODECUSTOFILTRO_KeyPress(ByVal KeyAscii As MSForms.ReturnInteger)
KeyAscii = 0
End Sub
Private Sub LISTASTATUSFILTRO_KeyPress(ByVal KeyAscii As MSForms.ReturnInteger)
KeyAscii = 0
End Sub



Private Sub ListBox1_DblClick(ByVal Cancel As MSForms.ReturnBoolean)
On Error GoTo erro1
FRMALTERACAOFUNCIONARIO.Show
erro1:
End Sub

Private Sub OPCAONOVOFUNCIONARIO_Click()
Call novo_registro_cadastro_funcionario
Call limpar_formulario_cadastro_funcionario
Call habilitar_formulario_cadastrar_funcionario
FRMCADASTROFUNCIONARIOS.TEXTOMATRICULA.SetFocus
End Sub
Private Sub TEXTODATADEADMISSAO_Change()
If Len(FRMCADASTROFUNCIONARIOS.TEXTODATADEADMISSAO) = 2 Then
FRMCADASTROFUNCIONARIOS.TEXTODATADEADMISSAO = FRMCADASTROFUNCIONARIOS.TEXTODATADEADMISSAO + "/"
End If
If Len(FRMCADASTROFUNCIONARIOS.TEXTODATADEADMISSAO) = 5 Then
FRMCADASTROFUNCIONARIOS.TEXTODATADEADMISSAO = FRMCADASTROFUNCIONARIOS.TEXTODATADEADMISSAO + "/"
End If

If FRMCADASTROFUNCIONARIOS.TEXTODATADEADMISSAO <> "" Then
FRMCADASTROFUNCIONARIOS.TEXTODATADEADMISSAO.BackColor = &HFFFFFF
Else
FRMCADASTROFUNCIONARIOS.TEXTODATADEADMISSAO.BackColor = &HC0FFFF
End If
Call habilitar_botao_cadastrar_funcionario
End Sub
Private Sub TEXTODATADEADMISSAO_KeyPress(ByVal KeyAscii As MSForms.ReturnInteger)
If KeyAscii < 48 Or KeyAscii > 57 Then
 KeyAscii = 0
End If
End Sub
Private Sub TEXTODATADEADMISSAO_MouseDown(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
FRMCADASTROFUNCIONARIOS.TEXTODATADEADMISSAO = Empty
End Sub
Private Sub TEXTOMATRICULA_Change()
If FRMCADASTROFUNCIONARIOS.TEXTOMATRICULA <> "" Then
FRMCADASTROFUNCIONARIOS.TEXTOMATRICULA.BackColor = &HFFFFFF
Else
FRMCADASTROFUNCIONARIOS.TEXTOMATRICULA.BackColor = &HC0FFFF
End If
Call habilitar_botao_cadastrar_funcionario
End Sub
Private Sub TEXTOMATRICULA_KeyPress(ByVal KeyAscii As MSForms.ReturnInteger)
If KeyAscii < 48 Or KeyAscii > 57 Then
 KeyAscii = 0
End If
End Sub
Private Sub TEXTONOMEDOFUNCIONARIO_Change()
If FRMCADASTROFUNCIONARIOS.TEXTONOMEDOFUNCIONARIO <> "" Then
FRMCADASTROFUNCIONARIOS.TEXTONOMEDOFUNCIONARIO.BackColor = &HFFFFFF
Else
FRMCADASTROFUNCIONARIOS.TEXTONOMEDOFUNCIONARIO.BackColor = &HC0FFFF
End If
Call habilitar_botao_cadastrar_funcionario
End Sub
Private Sub TEXTONOMEDOFUNCIONARIO_KeyPress(ByVal KeyAscii As MSForms.ReturnInteger)
KeyAscii = Asc(UCase(Chr(KeyAscii)))
End Sub
Private Sub TEXTONOMEDOFUNCIONARIOFILTRO_KeyPress(ByVal KeyAscii As MSForms.ReturnInteger)
KeyAscii = Asc(UCase(Chr(KeyAscii)))
End Sub
Private Sub UserForm_Initialize()
Call ultimo_registro_cadastro_funcionario
FRMCADASTROFUNCIONARIOS.LISTASTATUSFILTRO.RowSource = Sheets("informacoes").Range("a1")
FRMCADASTROFUNCIONARIOS.LISTACENTRODECUSTO.RowSource = Sheets("centro de custos").Range("b1")
FRMCADASTROFUNCIONARIOS.LISTACARGO.RowSource = Sheets("cargos").Range("b1")


FRMCADASTROFUNCIONARIOS.LISTACENTRODECUSTOFILTRO.RowSource = Sheets("centro de custos").Range("b1")
FRMCADASTROFUNCIONARIOS.LISTACARGOFILTRO.RowSource = Sheets("cargos").Range("b1")

FRMCADASTROFUNCIONARIOS.LISTASTATUSFILTRO = "ATIVO"

Call filtro_cadastro_funcionarios
Call atualizar_cadastro_funcionarios

End Sub
Private Sub UserForm_QueryClose(Cancel As Integer, CloseMode As Integer)
If CloseMode <> 1 Then Cancel = 1
End Sub
Attribute VB_Name = "FRMCARGOS"
Attribute VB_Base = "0{5266B5EF-BD1B-4068-943E-24F19F8752EA}{B8CA7761-706B-453D-A920-39E4FD67D6E0}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Private Sub CMDCADASTRAR_Click()
Call cadastrar_cargos
End Sub

Private Sub CMDFECHAR_Click()
Unload Me
FRMMENU.Show
End Sub

Private Sub CMDLIMPAR_Click()
Call limpar_cargos
Call desabilitar_cargos
FRMCARGOS.OPCAONOVO.Value = False
End Sub
Private Sub ListBox1_DblClick(ByVal Cancel As MSForms.ReturnBoolean)
On Error GoTo erro1
FRMALTERARCARGOS.Show
erro1:
End Sub

Private Sub OPCAONOVO_Click()
Call novo_registro_cargos
Call limpar_cargos
Call habilitar_cargos
FRMCARGOS.TEXTOCARGOS.SetFocus
End Sub

Private Sub TEXTOCARGOS_Change()

If FRMCARGOS.TEXTOCARGOS <> "" Then
FRMCARGOS.TEXTOCARGOS.BackColor = &HFFFFFF
Else
FRMCARGOS.TEXTOCARGOS.BackColor = &HC0FFFF
End If

Call habilitar_botao_cadastrar_cargos
End Sub

Private Sub TEXTOCARGOS_KeyPress(ByVal KeyAscii As MSForms.ReturnInteger)
KeyAscii = Asc(UCase(Chr(KeyAscii)))
End Sub

Private Sub UserForm_Initialize()
Call ultimo_registro_cargos
Call atualizar_cargos
End Sub

Private Sub UserForm_QueryClose(Cancel As Integer, CloseMode As Integer)
If CloseMode <> 1 Then Cancel = 1
End Sub
Attribute VB_Name = "FRMCENTRODECUSTO"
Attribute VB_Base = "0{4AE850BF-E4CC-477D-9E44-89C2C862EB34}{602D99CE-B9E1-4836-8B6A-545153188BBF}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Private Sub CMDCADASTRAR_Click()
Call cadastrar_centro_custo
End Sub

Private Sub CMDFECHAR_Click()
Unload Me
FRMMENU.Show
End Sub

Private Sub CMDLIMPAR_Click()
Call limpar_centro_custo
Call desabilitar_centro_custo
FRMCENTRODECUSTO.OPCAONOVO.Value = False
End Sub
Private Sub ListBox1_DblClick(ByVal Cancel As MSForms.ReturnBoolean)
On Error GoTo erro1
FRMALTERACAOCENTROCUSTO.Show
erro1:
End Sub

Private Sub OPCAONOVO_Click()
Call novo_registro_centro_custo
Call limpar_centro_custo
Call habilitar_centro_custo
FRMCENTRODECUSTO.TEXTOCENTRODECUSTO.SetFocus
End Sub

Private Sub TEXTOCENTRODECUSTO_Change()
If FRMCENTRODECUSTO.TEXTOCENTRODECUSTO <> "" Then
    FRMCENTRODECUSTO.TEXTOCENTRODECUSTO.BackColor = &HFFFFFF
Else
    FRMCENTRODECUSTO.TEXTOCENTRODECUSTO.BackColor = &HC0FFFF
End If
Call habilitar_botao_cadastrar_centro_custo
End Sub

Private Sub TEXTOCENTRODECUSTO_KeyPress(ByVal KeyAscii As MSForms.ReturnInteger)
KeyAscii = Asc(UCase(Chr(KeyAscii)))
End Sub

Private Sub UserForm_Initialize()
Call ultimo_registro_centro_custo
Call atualizar_centro_custos
End Sub

Private Sub UserForm_QueryClose(Cancel As Integer, CloseMode As Integer)
If CloseMode <> 1 Then Cancel = 1
End Sub
Attribute VB_Name = "FRMCONTROLEEXAMES"
Attribute VB_Base = "0{75B805CD-476B-4842-87B6-01409A8A3A01}{43AD3EF4-9806-4AEB-9778-2503A796E993}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Private Sub CMDCADASTRAR_Click()
Call cadastrar_controle_exames
End Sub

Private Sub CMDFECHAR_Click()
Unload Me
FRMMENU.Show
End Sub

Private Sub CMDFILTRAR_Click()
Call filtro_controleexames
Call atualizar_controleexames

End Sub

Private Sub CMDIMPRIMIR_Click()
Call impressao_relatorio_examesmedicos
End Sub

Private Sub CMDLIMPAR_Click()
Call ultimo_registro_controle_exames
Call limpar_controleexames
Call desabilitar_formulario_controleexames
FRMCONTROLEEXAMES.OPCAOLANCAMENTOEXAME.Value = False
End Sub

Private Sub CMDPESQUISACOLABORADOR_Click()
FRMPESQUISAFUNCIONARIO.Show
End Sub

Private Sub LISTACENTRODECUSTO_Change()
If FRMCONTROLEEXAMES.LISTACENTRODECUSTO <> "" Then
FRMCONTROLEEXAMES.LISTACENTRODECUSTO.BackColor = &HFFFFFF
Else
FRMCONTROLEEXAMES.LISTACENTRODECUSTO.BackColor = &HC0FFFF
End If
Call habilitar_botao_cadastrar_controleexames
End Sub

Private Sub LISTACENTRODECUSTO_KeyPress(ByVal KeyAscii As MSForms.ReturnInteger)
KeyAscii = 0
End Sub

Private Sub LISTACENTRODECUSTOFILTRO_Change()

End Sub

Private Sub LISTACENTRODECUSTOFILTRO_KeyPress(ByVal KeyAscii As MSForms.ReturnInteger)
KeyAscii = 0
End Sub

Private Sub LISTAEXAME_Change()
If FRMCONTROLEEXAMES.LISTAEXAME <> "" Then
FRMCONTROLEEXAMES.LISTAEXAME.BackColor = &HFFFFFF
Else
FRMCONTROLEEXAMES.LISTAEXAME.BackColor = &HC0FFFF
End If
Call habilitar_botao_cadastrar_controleexames
Call calcular_dias_exames
End Sub

Private Sub LISTAEXAME_KeyPress(ByVal KeyAscii As MSForms.ReturnInteger)
KeyAscii = 0
End Sub

Private Sub LISTAFUNCAO_Change()
If FRMCONTROLEEXAMES.LISTAFUNCAO <> "" Then
FRMCONTROLEEXAMES.LISTAFUNCAO.BackColor = &HFFFFFF
Else
FRMCONTROLEEXAMES.LISTAFUNCAO.BackColor = &HC0FFFF
End If
Call habilitar_botao_cadastrar_controleexames
End Sub
Private Sub LISTAFUNCAO_KeyPress(ByVal KeyAscii As MSForms.ReturnInteger)
KeyAscii = 0
End Sub
Private Sub LISTASTATUSFILTRO_KeyPress(ByVal KeyAscii As MSForms.ReturnInteger)
KeyAscii = 0
End Sub
Private Sub LISTATIPOEXAME_Change()
If FRMCONTROLEEXAMES.LISTATIPOEXAME <> "" Then
FRMCONTROLEEXAMES.LISTATIPOEXAME.BackColor = &HFFFFFF
Else
FRMCONTROLEEXAMES.LISTATIPOEXAME.BackColor = &HC0FFFF
End If

If FRMCONTROLEEXAMES.LISTATIPOEXAME = "DEMISSIONAL" Then
FRMCONTROLEEXAMES.TEXTODATAPROXIMOEXAME = Empty
FRMCONTROLEEXAMES.TEXTODATAPROXIMOEXAME.BackColor = &HFFFFFF
End If

Call habilitar_botao_cadastrar_controleexames
Call calcular_dias_exames
End Sub

Private Sub LISTATIPOEXAME_KeyPress(ByVal KeyAscii As MSForms.ReturnInteger)
KeyAscii = 0
End Sub
Private Sub ListBox1_DblClick(ByVal Cancel As MSForms.ReturnBoolean)
On Error GoTo erro1
FRMALTERACAOCONTROLEEXAMES.Show
erro1:
End Sub

Private Sub OPCAOLANCAMENTOEXAME_Click()
Call novo_registro_controle_exames
Call limpar_controleexames
Call habilitar_formulario_controleexames

End Sub

Private Sub TEXTODATADEADMISSAO_Change()
If FRMCONTROLEEXAMES.TEXTODATADEADMISSAO <> "" Then
FRMCONTROLEEXAMES.TEXTODATADEADMISSAO.BackColor = &HFFFFFF
Else
FRMCONTROLEEXAMES.TEXTODATADEADMISSAO.BackColor = &HC0FFFF
End If
Call habilitar_botao_cadastrar_controleexames
End Sub

Private Sub TEXTODATADEADMISSAO_KeyPress(ByVal KeyAscii As MSForms.ReturnInteger)
KeyAscii = 0
End Sub

Private Sub TEXTODATADEENTREGA_AfterUpdate()
If FRMCONTROLEEXAMES.TEXTODATADEENTREGA <> "" Then
Call calcular_dias_exames
End If
End Sub

Private Sub TEXTODATADEENTREGA_Change()
If FRMCONTROLEEXAMES.TEXTODATADEENTREGA <> "" Then
FRMCONTROLEEXAMES.TEXTODATADEENTREGA.BackColor = &HFFFFFF
Else
FRMCONTROLEEXAMES.TEXTODATADEENTREGA.BackColor = &HC0FFFF
End If

If Len(FRMCONTROLEEXAMES.TEXTODATADEENTREGA) = 2 Then
FRMCONTROLEEXAMES.TEXTODATADEENTREGA = FRMCONTROLEEXAMES.TEXTODATADEENTREGA + "/"
End If
If Len(FRMCONTROLEEXAMES.TEXTODATADEENTREGA) = 5 Then
FRMCONTROLEEXAMES.TEXTODATADEENTREGA = FRMCONTROLEEXAMES.TEXTODATADEENTREGA + "/"
End If
Call habilitar_botao_cadastrar_controleexames
End Sub

Private Sub TEXTODATADEENTREGA_KeyPress(ByVal KeyAscii As MSForms.ReturnInteger)
If KeyAscii < 48 Or KeyAscii > 57 Then
KeyAscii = 0
End If
End Sub

Private Sub TEXTODATADEENTREGA_MouseDown(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
FRMCONTROLEEXAMES.TEXTODATADEENTREGA = Empty
FRMCONTROLEEXAMES.TEXTODATAPROXIMOEXAME = Empty
End Sub

Private Sub TEXTODATAPROXIMOEXAME_Change()
If FRMCONTROLEEXAMES.TEXTODATAPROXIMOEXAME <> "" Then
FRMCONTROLEEXAMES.TEXTODATAPROXIMOEXAME.BackColor = &HFFFFFF
Else
FRMCONTROLEEXAMES.TEXTODATAPROXIMOEXAME.BackColor = &HC0FFFF
End If
If Len(FRMCONTROLEEXAMES.TEXTODATAPROXIMOEXAME) = 2 Then
FRMCONTROLEEXAMES.TEXTODATAPROXIMOEXAME = FRMCONTROLEEXAMES.TEXTODATAPROXIMOEXAME + "/"
End If
If Len(FRMCONTROLEEXAMES.TEXTODATAPROXIMOEXAME) = 5 Then
FRMCONTROLEEXAMES.TEXTODATAPROXIMOEXAME = FRMCONTROLEEXAMES.TEXTODATAPROXIMOEXAME + "/"
End If

If FRMCONTROLEEXAMES.LISTATIPOEXAME = "DEMISSIONAL" Then
FRMCONTROLEEXAMES.TEXTODATAPROXIMOEXAME = Empty
FRMCONTROLEEXAMES.TEXTODATAPROXIMOEXAME.BackColor = &HFFFFFF
Exit Sub
End If

Call habilitar_botao_cadastrar_controleexames
End Sub

Private Sub TEXTODATAPROXIMOEXAME_KeyPress(ByVal KeyAscii As MSForms.ReturnInteger)
If KeyAscii < 48 Or KeyAscii > 57 Then
KeyAscii = 0
End If

End Sub

Private Sub TEXTOMATRICULA_Change()
If FRMCONTROLEEXAMES.TEXTOMATRICULA <> "" Then
FRMCONTROLEEXAMES.TEXTOMATRICULA.BackColor = &HFFFFFF
Else
FRMCONTROLEEXAMES.TEXTOMATRICULA.BackColor = &HC0FFFF
End If

Call habilitar_botao_cadastrar_controleexames
End Sub

Private Sub TEXTOMATRICULA_KeyPress(ByVal KeyAscii As MSForms.ReturnInteger)
KeyAscii = 0
End Sub

Private Sub TEXTONOMEDOCOLABORADOR_Change()
If FRMCONTROLEEXAMES.TEXTONOMEDOCOLABORADOR <> "" Then
FRMCONTROLEEXAMES.TEXTONOMEDOCOLABORADOR.BackColor = &HFFFFFF
Else
FRMCONTROLEEXAMES.TEXTONOMEDOCOLABORADOR.BackColor = &HC0FFFF
End If
Call habilitar_botao_cadastrar_controleexames
End Sub

Private Sub TEXTONOMEDOCOLABORADOR_KeyPress(ByVal KeyAscii As MSForms.ReturnInteger)
KeyAscii = 0
End Sub

Private Sub TEXTONOMEDOCOLABORADORFILTRO_Change()

End Sub

Private Sub TEXTONOMEDOCOLABORADORFILTRO_KeyPress(ByVal KeyAscii As MSForms.ReturnInteger)
KeyAscii = Asc(UCase(Chr(KeyAscii)))
End Sub

Private Sub UserForm_Initialize()

Call ultimo_registro_controle_exames
FRMCONTROLEEXAMES.LISTACENTRODECUSTOFILTRO.RowSource = Sheets("centro de custos").Range("b1")
FRMCONTROLEEXAMES.LISTATIPOEXAME.RowSource = Sheets("informacoes").Range("c1")
FRMCONTROLEEXAMES.LISTAEXAME.RowSource = Sheets("informacoes").Range("e1")
FRMCONTROLEEXAMES.LISTASTATUSFILTRO.RowSource = Sheets("informacoes").Range("g1")

Call filtro_controleexames
Call atualizar_controleexames

End Sub

Private Sub UserForm_QueryClose(Cancel As Integer, CloseMode As Integer)
If CloseMode <> 1 Then Cancel = 1
End Sub
Attribute VB_Name = "FRMMENU"
Attribute VB_Base = "0{9C6B5FC0-BEB0-438B-A54C-21FF60E43493}{67DD2889-9180-4117-9570-A770CE871545}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Private Sub CMDCADASTROFUNCIONARIOS_Click()
Unload Me
FRMCADASTROFUNCIONARIOS.Show
End Sub

Private Sub CMDCARGOS_Click()
Unload Me
FRMCARGOS.Show
End Sub

Private Sub CMDCENTROCUSTOS_Click()
Unload Me
FRMCENTRODECUSTO.Show
End Sub

Private Sub CMDCONTROLEDEEXAMES_Click()
Unload Me
FRMCONTROLEEXAMES.Show
End Sub

Private Sub CMDEXAMES_Click()

Sheets("Tabela Exames").Select
Application.Visible = True
Unload Me
End Sub

Private Sub CMDFECHAR_Click()
Application.Visible = True
ActiveWindow.Close savechanges = True
End Sub

Private Sub CMDRELATORIOEXAMES_Click()
Sheets("relatorio").Select
Application.Visible = True
Unload Me
End Sub
Private Sub UserForm_QueryClose(Cancel As Integer, CloseMode As Integer)
If CloseMode <> 1 Then Cancel = 1
End Sub
Attribute VB_Name = "FRMPESQUISAFUNCIONARIO"
Attribute VB_Base = "0{5518973E-79CF-4207-B38B-BCC3BE91B904}{308DF6CD-845E-4681-9311-C5BC19729EFC}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Private Sub LISTASTATUS_Change()
Call filtro_funcionarios_pesquisa
Call atualizar_funcionarios_pesquisa
End Sub

Private Sub LISTASTATUS_KeyPress(ByVal KeyAscii As MSForms.ReturnInteger)
KeyAscii = 0
End Sub

Private Sub ListBox1_Click()

End Sub

Private Sub ListBox1_DblClick(ByVal Cancel As MSForms.ReturnBoolean)
On Error GoTo erro1
Call enviar_funcionarios_para_controledeexames
Unload Me
erro1:
End Sub

Private Sub TEXTONOMEDOCOLABORADOR_Change()
Call filtro_funcionarios_pesquisa
Call atualizar_funcionarios_pesquisa
End Sub

Private Sub TEXTONOMEDOCOLABORADOR_KeyPress(ByVal KeyAscii As MSForms.ReturnInteger)
KeyAscii = Asc(UCase(Chr(KeyAscii)))
End Sub

Private Sub UserForm_Initialize()
FRMPESQUISAFUNCIONARIO.LISTASTATUS.AddItem "ATIVO"
FRMPESQUISAFUNCIONARIO.LISTASTATUS.AddItem "INATIVO"

FRMPESQUISAFUNCIONARIO.LISTASTATUS = "ATIVO"


Call filtro_funcionarios_pesquisa
Call atualizar_funcionarios_pesquisa
End Sub
Attribute VB_Name = "Plan1"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Plan10"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Plan2"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Plan3"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Plan4"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Plan5"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Plan6"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Plan7"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Plan8"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Plan9"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "RELATORIOS"
Sub filtro_relatorio()
Attribute filtro_relatorio.VB_ProcData.VB_Invoke_Func = " \n14"

    Sheets("Base Dados").Columns("A:N").AdvancedFilter Action:=xlFilterCopy, _
        CriteriaRange:=Sheets("Relatorio").Range("A1:N2"), CopyToRange:=Sheets("Relatorio").Range("A5:N5"), Unique:=False
End Sub
Sub Imprimir_relatorio()
Attribute Imprimir_relatorio.VB_ProcData.VB_Invoke_Func = " \n14"

Dim ultimoregistro As Double

ultimoregistro = Sheets("relatorio").Cells(Rows.Count, 5).End(xlUp).Row

ActiveSheet.PageSetup.PrintArea = "$A$3:$O$" & ultimoregistro
    ActiveWindow.SelectedSheets.PrintOut Copies:=1, Collate:=True, _
        IgnorePrintAreas:=False
End Sub
Sub impressao_relatorio_examesmedicos()
Sheets("imprimir_listbox_exames").Range("a3:h50000") = Empty
linha = 3
For linhabox = 0 To FRMCONTROLEEXAMES.ListBox1.ListCount - 1
On Error Resume Next
    Sheets("imprimir_listbox_exames").Cells(linha, 1) = FRMCONTROLEEXAMES.ListBox1.List(linhabox, 1)
    Sheets("imprimir_listbox_exames").Cells(linha, 2) = FRMCONTROLEEXAMES.ListBox1.List(linhabox, 2)
    Sheets("imprimir_listbox_exames").Cells(linha, 3) = FRMCONTROLEEXAMES.ListBox1.List(linhabox, 3)
    Sheets("imprimir_listbox_exames").Cells(linha, 4) = FRMCONTROLEEXAMES.ListBox1.List(linhabox, 4)
    Sheets("imprimir_listbox_exames").Cells(linha, 5) = Format(FRMCONTROLEEXAMES.ListBox1.List(linhabox, 5), "mm/dd/yyyy")
    Sheets("imprimir_listbox_exames").Cells(linha, 6) = Format(FRMCONTROLEEXAMES.ListBox1.List(linhabox, 6), "mm/dd/yyyy")
    Sheets("imprimir_listbox_exames").Cells(linha, 7) = Format(FRMCONTROLEEXAMES.ListBox1.List(linhabox, 7), "mm/dd/yyyy")
    Sheets("imprimir_listbox_exames").Cells(linha, 8) = FRMCONTROLEEXAMES.ListBox1.List(linhabox, 8)
linha = linha + 1
Next
Call Imprimir_relatorio_exames
End Sub
Sub Imprimir_relatorio_exames()
Sheets("Imprimir_Listbox_exames").Select
Dim ultimoregistro As Double

ultimoregistro = Sheets("Imprimir_Listbox_exames").Cells(Rows.Count, 5).End(xlUp).Row

ActiveSheet.PageSetup.PrintArea = "$A$1:$I$" & ultimoregistro
    ActiveWindow.SelectedSheets.PrintOut Copies:=1, Collate:=True, _
        IgnorePrintAreas:=False
End Sub

Attribute VB_Name = "Sheet3"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True

' InQuest injected base64 decoded content
' H-4N
' H-4N
' H-4N

INQUEST-PP=macro
