Attribute VB_Name = "Foglio1"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Foglio2"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Foglio3"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Foglio4"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Foglio5"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Modulo1"
Public Function CifraToLetter(var1) As String           ' funziona fino a 999 miliardi
    Dim char As String * 1

    tmp$ = ""
    c$ = Mid$(Str$(var1), 2)

    ' parte intera
    Cifra$ = Mid$(Str$(Int(Val(c$))), 2)
    GoSub CifraToLetter0
    intera$ = tmp$

    ' parte decimale ( arrotondata come Euro )
'    i = Int((Val(C$) - Int(Val(C$)) + 0.005) * 100)
    decimale$ = Format$(Int((Val(c$) - Int(Val(c$)) + 0.005) * 100), "00")

'    GoSub CifraToLetter0
'    decimale$ = tmp

'    If Len(Cifra$) Then
    If decimale$ <> "00" Then
        'CifraToLetter$ = intera$ & "/" & decimale$
         CifraToLetter$ = intera$ & " e " & decimale$ & " cent"
    Else
        CifraToLetter$ = intera$
    End If

    Exit Function

CifraToLetter0:
    cifre = 0
    tmp$ = ""
    Do While Len(Cifra$)
        digits$ = Right$(Cifra$, 3)
        Cifra$ = Left$(Cifra$, Len(Cifra$) - Len(digits$))
        cifre = cifre + Len(digits$)
        digits$ = Right$("00" + digits$, 3)

        a$ = ""
        If (cifre Mod 3) = 0 And Left$(digits$, 1) <> "0" Then
            'centinaia
            a$ = "cento"

            Select Case Left$(digits$, 1)
                Case "2": a$ = "due" + a$
                Case "3": a$ = "tre" + a$
                Case "4": a$ = "quattro" + a$
                Case "5": a$ = "cinque" + a$
                Case "6": a$ = "sei" + a$
                Case "7": a$ = "sette" + a$
                Case "8": a$ = "otto" + a$
                Case "9": a$ = "nove" + a$
            End Select
        End If

        'decine+unit.
        Select Case Right$(digits$, 2)
            Case "10": a$ = a$ + "dieci"
            Case "11": a$ = a$ + "undici"
            Case "12": a$ = a$ + "dodici"
            Case "13": a$ = a$ + "tredici"
            Case "14": a$ = a$ + "quattordici"
            Case "15": a$ = a$ + "quindici"
            Case "16": a$ = a$ + "sedici"
            Case "17": a$ = a$ + "diciassette"
            Case "18": a$ = a$ + "diciotto"
            Case "19": a$ = a$ + "diciannove"
            Case "20": a$ = a$ + "venti"
            Case "21": a$ = a$ + "ventuno"
            Case "22": a$ = a$ + "ventidue"
            Case "23": a$ = a$ + "ventitre"
            Case "24": a$ = a$ + "ventiquatto"
            Case "25": a$ = a$ + "venticinque"
            Case "26": a$ = a$ + "ventisei"
            Case "27": a$ = a$ + "ventisette"
            Case "28": a$ = a$ + "ventotto"
            Case "29": a$ = a$ + "ventinove"
            Case "01" To "99"

                Select Case Mid$(digits$, 2, 1)
                    Case "3": a$ = a$ + "trenta"
                    Case "4": a$ = a$ + "quaranta"
                    Case "5": a$ = a$ + "cinquanta"
                    Case "6": a$ = a$ + "sessanta"
                    Case "7": a$ = a$ + "settanta"
                    Case "8": a$ = a$ + "ottanta"
                    Case "9": a$ = a$ + "novanta"
                End Select

                Select Case Mid$(digits$, 3, 1)
                    Case "1": a$ = a$ + "uno"
                    Case "2": a$ = a$ + "due"
                    Case "3": a$ = a$ + "tre"
                    Case "4": a$ = a$ + "quattro"
                    Case "5": a$ = a$ + "cinque"
                    Case "6": a$ = a$ + "sei"
                    Case "7": a$ = a$ + "sette"
                    Case "8": a$ = a$ + "otto"
                    Case "9": a$ = a$ + "nove"
                End Select

                Do While True
                    i = InStr(a$, "oo")
                    If i = 0 Then Exit Do
                    a$ = Left$(a$, i) + Mid$(a$, i + 2)
                Loop

                Do While True
                    i = InStr(a$, "ao")
                    If i = 0 Then Exit Do
                    a$ = Left$(a$, i - 1) + Mid$(a$, i + 1)
                Loop
        
                Do While True
                    i = InStr(a$, "au")
                    If i = 0 Then Exit Do
                    a$ = Left$(a$, i - 1) + Mid$(a$, i + 1)
                Loop
        
        End Select

        If a$ <> "" Then
            Select Case cifre
                Case 4 To 6, 13 To 15: If a$ = "uno" Then a$ = "mille" Else a$ = a$ + "mila"
                Case 7 To 9, 16 To 18: If a$ = "uno" Then a$ = "unmilione" Else a$ = a$ + "milioni"
                Case 10 To 12: If a$ = "uno" Then a$ = "unmiliardo" Else a$ = a$ + "miliardi"
            End Select
        End If

        tmp$ = a$ + tmp$
    Loop
    Return

End Function

Attribute VB_Name = "Questa_cartella_di_lavoro"
Attribute VB_Base = "0{00020819-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True


INQUEST-PP=macro
