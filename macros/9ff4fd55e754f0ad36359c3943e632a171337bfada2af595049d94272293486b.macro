Attribute VB_Name = "RibbonX"
'
'Ribbon Control Module
'14.1.25 LSQ
'
Option Explicit
Private rib As IRibbonUI

'Callback for customUI.onLoad
Sub ribbonLoaded(ribbon As IRibbonUI)
    Set rib = ribbon
    
    'Show the Tab
    rib.Invalidate
    
    If ExcelVer() >= 14 Then
        rib.ActivateTab ("TabMTHR")
    Else
        Call RunActivateTab("doKeySend")
    End If

End Sub
'
Private Sub doKeySend()
    Dim bNumLock As Boolean, bCapsLock As Boolean
    bNumLock = bNumLockOn()
    bCapsLock = bCapsLockOn()
    Application.SendKeys "%M3{F6}"
    DoEvents
    ToggleNumLock bNumLock
    ToggleCapsLock bCapsLock
End Sub

Private Sub RunActivateTab(ByVal macroName As String)
    Application.OnTime Now() + TimeValue("00:00:00"), macroName
End Sub

'15 : Excel2013
'14 : Excel2010
'12 : Excel2007
Function ExcelVer() As Long
    ExcelVer = Val(Application.Version())
End Function
'

'=== EOF ===


Attribute VB_Name = "Sheet1"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "ThisWorkbook"
Attribute VB_Base = "0{00020819-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "mdlNumLock"

Option Explicit

Private Const VER_PLATFORM_WIN32_NT = 2
Private Const VER_PLATFORM_WIN32_WINDOWS = 1
Private Const VK_NUMLOCK = &H90
Private Const VK_CAPITAL = &H14
Private Const KEYEVENTF_EXTENDEDKEY = &H1
Private Const KEYEVENTF_KEYUP = &H2

#If VBA7 Then
Type OSVERSIONINFO
        dwOSVersionInfoSize As Long
        dwMajorVersion As Long
        dwMinorVersion As Long
        dwBuildNumber As Long
        dwPlatformId As Long
        szCSDVersion(0 To 127) As Byte
End Type

' API declarations:

Declare PtrSafe Function GetVersionEx Lib "kernel32" Alias "GetVersionExA" (lpVersionInformation As OSVERSIONINFO) As Long
Declare PtrSafe Sub keybd_event Lib "user32" (ByVal bVk As Byte, ByVal bScan As Byte, ByVal dwFlags As Long, ByVal dwExtraInfo As LongPtr)
Declare PtrSafe Function GetKeyboardState Lib "user32" (pbKeyState As Byte) As Long
Declare PtrSafe Function SetKeyboardState Lib "user32" (lppbKeyState As Byte) As Long
#Else
Private Type OSVERSIONINFO
  dwOSVersionInfoSize As Long
  dwMajorVersion As Long
  dwMinorVersion As Long
  dwBuildNumber As Long
  dwPlatformId As Long
  szCSDVersion As String * 128
End Type

' API declarations:

Private Declare Function GetVersionEx Lib "kernel32" _
   Alias "GetVersionExA" _
   (lpVersionInformation As OSVERSIONINFO) As Long

Private Declare Sub keybd_event Lib "user32" _
   (ByVal bVk As Byte, _
    ByVal bScan As Byte, _
    ByVal dwFlags As Long, ByVal dwExtraInfo As Long)
    
Private Declare Function GetKeyboardState Lib "user32" _
   (pbKeyState As Byte) As Long

Private Declare Function SetKeyboardState Lib "user32" _
   (lppbKeyState As Byte) As Long
#End If

Sub ToggleNumLock(TurnOn As Boolean)

    'To turn numlock on, set turnon to true
    'To turn numlock off, set turnon to false
    
      Dim bytKeys(255) As Byte
      Dim bNumLockOn As Boolean
      
'Get status of the 256 virtual keys
      GetKeyboardState bytKeys(0)
      
      bNumLockOn = bytKeys(VK_NUMLOCK)
      Dim typOS As OSVERSIONINFO
      
      If bNumLockOn <> TurnOn Then 'if current state <>
                                     'requested stae
        
       If typOS.dwPlatformId = _
           VER_PLATFORM_WIN32_WINDOWS Then  '=== Win95/98

          bytKeys(VK_NUMLOCK) = 1
          SetKeyboardState bytKeys(0)

        Else    '=== WinNT/2000

        'Simulate Key Press
          keybd_event VK_NUMLOCK, &H45, _
             KEYEVENTF_EXTENDEDKEY Or 0, 0
        'Simulate Key Release
          keybd_event VK_NUMLOCK, &H45, KEYEVENTF_EXTENDEDKEY _
             Or KEYEVENTF_KEYUP, 0
        End If
      End If
     
End Sub

Sub ToggleCapsLock(TurnOn As Boolean)

    'To turn numlock on, set turnon to true
    'To turn numlock off, set turnon to false
    
      Dim bytKeys(255) As Byte
      Dim bNumLockOn As Boolean
      
'Get status of the 256 virtual keys
      GetKeyboardState bytKeys(0)
      
      bNumLockOn = bytKeys(VK_CAPITAL)
      Dim typOS As OSVERSIONINFO
      
      If bNumLockOn <> TurnOn Then 'if current state <>
                                     'requested stae
        
       If typOS.dwPlatformId = _
           VER_PLATFORM_WIN32_WINDOWS Then  '=== Win95/98

          bytKeys(VK_CAPITAL) = 1
          SetKeyboardState bytKeys(0)

        Else    '=== WinNT/2000

        'Simulate Key Press
          keybd_event VK_CAPITAL, &H45, _
             KEYEVENTF_EXTENDEDKEY Or 0, 0
        'Simulate Key Release
          keybd_event VK_CAPITAL, &H45, KEYEVENTF_EXTENDEDKEY _
             Or KEYEVENTF_KEYUP, 0
        End If
      End If
     
End Sub

Function bNumLockOn() As Boolean
      Dim bytKeys(255) As Byte
      GetKeyboardState bytKeys(0)
      bNumLockOn = bytKeys(VK_NUMLOCK)
End Function

Function bCapsLockOn() As Boolean
      Dim bytKeys(255) As Byte
      GetKeyboardState bytKeys(0)
      bCapsLockOn = bytKeys(VK_CAPITAL)
End Function

'======EOF======


INQUEST-PP=macro
