Attribute VB_Name = "DieseArbeitsmappe"
Attribute VB_Base = "0{00020819-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Private Sub Workbook_Open()
 

On Error GoTo Err_Workbook_Open
  Dim Tarifzone As Long

  If Worksheets("Quellen").Visible = True Then Worksheets("Quellen").Visible = False
   
  If Worksheets("Quellen").Cells(2, 2) = "" Then
  
    Worksheets("Quellen").Unprotect Password:="abo"
Sprung1:

    Tarifzone = InputBox("Bitte geben Sie eine Tarifzone zwischen 1 und 5 ein!", "Eingabe der Tarifzone", , 5000, 4500)
    
    If Tarifzone <= 5 And Tarifzone >= 1 Then
      Worksheets("Quellen").Cells(2, 2) = Tarifzone
    
    Else
    
      MsgBox "Falsche Tarifzoneneingabe! " & Chr(13) & "Sie m|fffd|ssen einen Wert zwischen 1 und 5 eingeben!", 16, "Hinweis"
      GoTo Sprung1
    
    End If
    
    
    Worksheets("Quellen").Protect Password:="abo"
    Exit Sub
    
  End If
 
  Load Eingabemaske
  Eingabemaske.Show
  Zeile = LetzteZeile
  
Exit_Err_Workbook_Open:
  Exit Sub
  
Err_Workbook_Open:
If Err.Number = 13 Then Resume Exit_Err_Workbook_Open

MsgBox "Der Anwendungsfehler " & Err.Number & " ist aufgetreten :  " & Err.Description & Chr(13) & "Die Eingabe der Tarifzone wurde abgebrochen !", 16, "Abbruch"
Resume Exit_Err_Workbook_Open
End Sub
Attribute VB_Name = "Eingabemaske"
Attribute VB_Base = "0{F015A046-3FC9-4153-BBFA-D44ED534B7AF}{DC30C90D-2505-449C-ABF8-1E3F5EA137E2}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Option Explicit

'|fffd|bergibt die Daten aus der Eingabemaske in das Tabellenblatt("Firmen_Schulimport")
'
Private Sub ButtEintragen_Click()
On Error GoTo Err_ButtEintragen_Click

  Zeile = LetzteZeile
  
'Daten aus der Eingabemaske werden ins Tabellenblatt eingetragen

  Worksheets("H1").Cells(Zeile, 7).Value = txfProduktbezeichnung1.Value
  Worksheets("H1").Cells(Zeile, 5).Value = txfAbonnementgueltigab.Value
  Worksheets("H1").Cells(Zeile, 9).Value = txfWabennummerStart.Value
  Worksheets("H1").Cells(Zeile, 10).Value = txfWabennummerZiel.Value
  Worksheets("H1").Cells(Zeile, 25).Value = txfAbteilung.Value
  Worksheets("H1").Cells(Zeile, 28).Value = txfNachname.Value
  Worksheets("H1").Cells(Zeile, 29).Value = txfVorname.Value
  Worksheets("H1").Cells(Zeile, 30).Value = txfGeschlecht.Value
  Worksheets("H1").Cells(Zeile, 31).Value = txfGeburtsdatum.Value
  Worksheets("H1").Cells(Zeile, 36).Value = txfHausnummer.Value
  Worksheets("H1").Cells(Zeile, 39).Value = txfOrt.Value
  Worksheets("H1").Cells(Zeile, 40).Value = txfPostleitzahl.Value
  Worksheets("H1").Cells(Zeile, 35).Value = txfStra|fffd|e.Value
  Worksheets("H1").Cells(Zeile, 46).Value = txfZusatzInfo.Value
' In Spalte A wird f|fffd|r jeden neuen Datensatz fortlaufend DAT eingegeben
  Worksheets("H1").Cells(Zeile, 1).Value = "DAT"
  
' Die Textfelder in der Eingabemaske werden gel|fffd|scht und der Cursor springt ins Feld Nachname
  txfProduktbezeichnung1 = ""
  txfAbonnementgueltigab = ""
  txfWabennummerStart = ""
  txfWabennummerZiel = ""
  txfAbteilung = ""
  txfNachname = ""
  txfVorname = ""
  txfGeschlecht = ""
  txfGeburtsdatum = ""
  txfHausnummer = ""
  txfOrt.Value = ""
  txfPostleitzahl = ""
  txfStra|fffd|e = ""
  txfZusatzInfo = ""
  Me.txfNachname.SetFocus
  
Exit_Err_ButtEintragen_Click:
  Exit Sub
' Wenn ein Fehler auftritt wird eine MsgBox mit der Fehlernummer und der Fehlerbeschreibung ausgegeben
Err_ButtEintragen_Click:
  MsgBox Err.Description & " Fehler Nr.: " & Err.Number
  Resume Exit_Err_ButtEintragen_Click

End Sub

Private Sub ButtEnde_Click()
On Err GoTo Err_ButtEnde_Click
' Die Eingabemaske wird geschlossen
  Unload Me
  
Exit_Err_ButtEnde_Click:
  Exit Sub

Err_ButtEnde_Click:
  MsgBox Err.Description & " Fehler Nr.: " & Err.Number
  Resume Exit_Err_ButtEnde_Click

End Sub



Private Sub txfAbonnementgueltigab_BeforeUpdate(ByVal Cancel As MSForms.ReturnBoolean)
On Err GoTo Err_txfAbonnementgueltigab_BeforeUpdate

' Der Wert des Textfeldes Abonnementgueltigab wird an die Funktion DatumSetzen |fffd|bergeben
  Me.txfAbonnementgueltigab = DatumSetzen(Me.txfAbonnementgueltigab)
' Liefert die Variable Schalter = True, dann stimmt mit der Eingabe des Users etwas nicht und es wird kein Wert ins Terxtfeld |fffd|bernommen
  If Schalter = True Then
    Me.txfAbonnementgueltigab = ""
    Cancel = True
  End If
  
Exit_Err_txfAbonnementgueltigab_BeforeUpdate:
  Exit Sub

Err_txfAbonnementgueltigab_BeforeUpdate:
  MsgBox Err.Description & " Fehler Nr.: " & Err.Number
  Resume Exit_Err_txfAbonnementgueltigab_BeforeUpdate
End Sub

Private Sub txfGeburtsdatum_BeforeUpdate(ByVal Cancel As MSForms.ReturnBoolean)
On Error GoTo Err_txfGeburtsdatum_BeforeUpdate
Dim Datum As Date

' Der Wert des Textfeldes Geburtsdatum wird an die Funktion DatumSetzen |fffd|bergeben
  Me.txfGeburtsdatum = DatumSetzen(Me.txfGeburtsdatum)
  Datum = Me.txfGeburtsdatum

' Hier wird gepr|fffd|ft ob das eingegebene Datum vor oder hinter dem aktuellen Tagesdatum liegt
  If Datum > Date Then
' Wenn die Bedingung zutrifft wird eine MsgBox ausgegeben und die Sub verlassen
    MsgBox "Das Geburtsdatum liegt in der Zukunft!", 16, "Hinweis"
    Me.txfGeburtsdatum = ""
    Cancel = True
    
' Liefert die Variable Schalter = True, dann stimmt mit der Eingabe des Users etwas nicht und es wird kein Wert ins Terxtfeld |fffd|bernommen
  If Schalter = True Then
    Me.txfGeburtsdatum = ""
    Cancel = True
  End If
  
  End If
  
Exit_Err_txfGeburtsdatum_BeforeUpdate:
  Exit Sub
  
' Wenn ein Fehler auftritt wird eine MsgBox mit der Fehlernummer und der Fehlerbeschreibung ausgegeben
Err_txfGeburtsdatum_BeforeUpdate:
  MsgBox Err.Description & " Fehler Nr.: " & Err.Number
  Resume Exit_Err_txfGeburtsdatum_BeforeUpdate
End Sub

Private Sub txfProduktbezeichnung1_Change()

End Sub

Private Sub txfWabennummerStart_AfterUpdate()
   On Err GoTo Err_txfWabennummerStart_AfterUpdate
'Pr|fffd|fung ob in die Textfelder WabennummerStart und WabennummerZiel etwas eingegeben wurde
  If Me.txfWabennummerStart <> "" And Me.txfWabennummerZiel <> "" Then
' Sollte das der Fall sein, |fffd|bergabe der Werte an die Funktion Rechnung1
    Call Rechnung1(Me.txfWabennummerStart.Column(0), Me.txfWabennummerZiel.Column(0))
  End If
  
Exit_Err_txfWabennummerStart_AfterUpdate:
  Exit Sub

Err_txfWabennummerStart_AfterUpdate:
  MsgBox Err.Description & " Fehler Nr.: " & Err.Number
  Resume Exit_Err_txfWabennummerStart_AfterUpdate
      
End Sub

Private Sub txfWabennummerZiel_AfterUpdate()
On Err GoTo Err_txfWabennummerZiel_AfterUpdate
 If Me.txfWabennummerZiel <> "" And Me.txfWabennummerStart <> "" Then
    Call Rechnung1(Me.txfWabennummerStart.Column(0), Me.txfWabennummerZiel.Column(0))
  End If
  
Exit_Err_txfWabennummerZiel_AfterUpdate:
  Exit Sub

Err_txfWabennummerZiel_AfterUpdate:
  MsgBox Err.Description & " Fehler Nr.: " & Err.Number
  Resume Exit_Err_txfWabennummerZiel_AfterUpdate
End Sub



Private Sub UserForm_Activate()
On Err GoTo Err_UserForm_Activate

' Beim Aufrufen der Eingabemaske wird der Cursor im Textfeld Nachname platziert
  Me.txfNachname.SetFocus
  
Exit_Err_UserForm_Activate:
  Exit Sub

Err_UserForm_Activate:
  MsgBox Err.Description & " Fehler Nr.: " & Err.Number
  Resume Exit_Err_UserForm_Activate

End Sub

' Die |fffd|bergebenen Werte werden in die Variablen Start und Ziel geschrieben
Function Rechnung1(Start As String, Ziel As String)
On Err GoTo Err_Rechnung1
Dim Startpos, Zeilenend, Spalte, Zone, x, y As Integer
Dim ZoneString As String
Dim SingleZone As Boolean
Dim Bereich As String

'Der Schutz des Arbeitsblattes Quellen wird aufgehoben
  Worksheets("Quellen").Unprotect Password:="abo"
  Worksheets("Quellen").Visible = True
'Das Blatt Quellen wird ausgew|fffd|hlt
  Worksheets("Quellen").Select

'Die Zellen J2 bis J100 werden ausgew|fffd|hlt und dann gel|fffd|scht
  Worksheets("Quellen").Range("J2:J100").Select
  Selection.Clear
  
'In Spalte steht der Wert der ben|fffd|tigten Spalte, er wird aus der abgefragten Tarifzone + 4 errechnet
'4 muss addiert werden da die ersten 4 Spalten des Blattes nicht ben|fffd|tigt werden
  Spalte = Worksheets("Quellen").Cells(2, 2) + 4
  
' Hier wird die Anzahl der Zonen berechnet die zwischen Start und Ziel liegen
    'If Start > Ziel Then
    'Zone = Start - Ziel + 1
  'Else
    'Zone = Ziel - Start + 1
  'End If
  SingleZone = False
  If Start = Ziel Then
    ZoneString = " " + Start
    SingleZone = True
  Else
    If Asc(Start) > Asc(Ziel) Then
        ZoneString = Ziel + "-" + Start
    Else
        ZoneString = Start + "-" + Ziel
    End If
 End If
  
' y z|fffd|hlt die Anzahl der Eintr|fffd|ge der entsprechenden Tarifzone, die der gleichen Zone zugeordnet sind
  y = 0
  
x = 1

Do

  Do While x <= 100
  
  'Es wird gepr|fffd|ft ob in der zu pr|fffd|fenden Zelle ein Wert steht, wenn nich wird die For-Schleife abgebrochen
   If Worksheets("Quellen").Cells(1 + x, Spalte) = "" Then Exit Do
   
   'If Val(Mid(Worksheets("Quellen").Cells(1 + x, Spalte), 4, 1)) = Zone Then
   'Wenn der Wert der in der Zelle ist, der gleiche ist wie der in Zone, dann wird y um eins erh|fffd|ht
   If SingleZone Then
     If (InStr(1, Worksheets("Quellen").Cells(1 + x, Spalte), ZoneString) > 0) And (InStr(1, Worksheets("Quellen").Cells(1 + x, Spalte), "-") = 0) Then
      y = y + 1
    ' Der gefundene Wert wird in die entsprechende Zeile der 10ten Spalte eingef|fffd|gt
      Worksheets("Quellen").Cells(1 + y, 10) = Worksheets("Quellen").Cells(1 + x, Spalte)
     End If
   Else
    If InStr(1, Worksheets("Quellen").Cells(1 + x, Spalte), ZoneString) > 0 Then
      y = y + 1
    ' Der gefundene Wert wird in die entsprechende Zeile der 10ten Spalte eingef|fffd|gt
      Worksheets("Quellen").Cells(1 + y, 10) = Worksheets("Quellen").Cells(1 + x, Spalte)
    End If
   End If
  
  x = x + 1
  
Loop
Loop Until Worksheets("Quellen").Cells(1 + x, Spalte) = ""
  
  ' in die Variable Bereich werden die rausgefilterten Werte geschrieben
  Bereich = "Quellen!J2:J" & Trim$(Str(y) + 1)
  'der ComboBox Produktbezeichnung1 werden die Werte aus Bereich |fffd|bertragen
  Me.txfProduktbezeichnung1.RowSource = Bereich
  
  Worksheets("Quellen").Select
  Worksheets("Quellen").Protect Password:="abo"
  Worksheets("Quellen").Visible = False

Exit_Err_Rechnung1:
  Exit Function

Err_Rechnung1:
  MsgBox Err.Description & " Fehler Nr.: " & Err.Number
  Resume Exit_Err_Rechnung1


  
End Function

Attribute VB_Name = "Modul1"
Option Explicit

Public Zeile, Zone As Long, Schalter As Boolean

'
'Funktion zur Ermittlung der n|fffd|chsten freien Zeile
'
Function LetzteZeile() As Long
On Error GoTo Err_LetzteZeile
  Dim Zeile As Long
  
  Cells(1, 28).Select
  Zeile = Cells(1, 28).CurrentRegion.Rows.Count + 1
  Cells(Zeile, 1).Select
  LetzteZeile = Zeile
  
Exit_Err_LetzteZeile:
  Exit Function
  
Err_LetzteZeile:
  MsgBox Err.Description & " Fehler Nr.: " & Err.Description
  Resume Exit_Err_LetzteZeile
End Function


'
'Funktion wandelt die Datumseingabe ttmmjjjj in das Format tt.mm.jjjj um und
'pr|fffd|ft die Tages und Monatseingabe auf seine Richtigkeit ab
'
Public Function DatumSetzen(Dat As String) As Variant

On Err GoTo Err_DatumSetzen

  Schalter = False
  
  If Len(Dat) = 0 Then
    DatumSetzen = ""
    Exit Function
  End If
  
  If Len(Dat) = 10 And InStr(1, Dat, ".") = 3 And InStr(4, Dat, ".") = 6 Then
    DatumSetzen = Dat
    Exit Function
  ElseIf Len(Dat) < 8 Or IsNumeric(Dat) = False Then
    MsgBox "Bitte geben Sie das Datum im folgenden Format ein!" & Chr(13) & "ttmmjjjj", 16, "Hinweis"
    Schalter = True
    Exit Function
  End If
 
  If Val(Mid(Dat, 3, 2)) > 12 Or Val(Mid(Dat, 3, 2)) < 1 Then
    MsgBox "Sie haben einen falschen Monatswert eingegeben!", 16, "Hinweis"
    Schalter = True
    Exit Function
  End If
 
  If Val(Left(Dat, 2)) = 31 And InStr(1, "02,04,06,09,11", Mid(Dat, 3, 2)) > 0 Or Val(Left(Dat, 2)) > 31 Or Val(Left(Dat, 2)) < 1 Or Val(Left(Dat, 2)) = 29 And Mid(Dat, 3, 2) = "02" And (Val(Right(Dat, 4)) / 4 - Fix(Val(Right(Dat, 4)) / 4)) > 0 Then
    MsgBox "Sie haben einen falschen Tagesswert eingegeben!", 16, "Hinweis"
    Schalter = True
    Exit Function
  End If
  
  
  DatumSetzen = Left(Dat, 2) & "." & Mid(Dat, 3, 2) & "." & Right(Dat, 4)
  
Exit_Err_DatumSetzen:
  Exit Function
  
Err_DatumSetzen:
  MsgBox Err.Description & " Fehler Nr.: " & Err.Description
  Resume Exit_Err_DatumSetzen
End Function
Attribute VB_Name = "Modul2"
Sub Makro1()
Attribute Makro1.VB_Description = "Makro am 28.11.2002 von algermis aufgezeichnet"
Attribute Makro1.VB_ProcData.VB_Invoke_Func = " \n14"
'
' Makro1 Makro
' Makro am 28.11.2002 von algermis aufgezeichnet
'

'
    ActiveWindow.SmallScroll ToRight:=5
    Range("J2:J19").Select
    Selection.Clear
End Sub
Attribute VB_Name = "Tabelle1"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Tabelle4"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Option Explicit

Sub EingabeMaskeAnzeigen()
Attribute EingabeMaskeAnzeigen.VB_ProcData.VB_Invoke_Func = "e\n14"
 On Err GoTo Err_EingabeMaskeAnzeigen
 
 Load Eingabemaske
 Eingabemaske.Show
 Zeile = LetzteZeile
 
Exit_Err_EingabeMaskeAnzeigen:
  Exit Sub
  
Err_EingabeMaskeAnzeigen:
  MsgBox Err.Description & " Fehler Nr.: " & Err.Description
  Resume Exit_Err_EingabeMaskeAnzeigen

End Sub


INQUEST-PP=macro
