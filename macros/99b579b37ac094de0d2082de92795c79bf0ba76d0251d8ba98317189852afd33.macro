Attribute VB_Name = "Add"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True


Attribute VB_Name = "DirectCamProfile"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True


Attribute VB_Name = "DisplacementProfile"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True


Attribute VB_Name = "MachineProfile"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True


Attribute VB_Name = "MachineProfileCaculus"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True


Attribute VB_Name = "ModCalculus"
Public ReturnTableTime() As Double
Public ReturnTablePosition() As Double

Public Type ReturnCalculateSpeedAcc
    Acceleration As Variant
    Speed As Variant
    Time As Variant
End Type

Function Colonne_L_To_S(Num|fffd|ro_Colonne As Long) As String
    'Transforme le num|fffd|ro d'une colonne en nom de colonne
    Dim i As Long
    Dim lChiffre As Long
    Dim sChaine As String
    sChaine = ""
    i = Num|fffd|ro_Colonne
    Do
        lChiffre = i - 26 * Int((i - 1) / 26)
        sChaine = Chr(lChiffre + 64) & sChaine
        i = Int((i - 1) / 26)
    Loop While (i <> 0)
    Colonne_L_To_S = sChaine
End Function

Function Colonne_S_To_L(Chaine_Colonne As String) As Long
    'Transforme le nom d'une colonne en num|fffd|ro de colonne
    Dim i As Long
    Dim lChiffre As Long
    Dim sChaine As String
    sChaine = Chaine_Colonne
    lChiffre = 0
    Do
        lChiffre = Asc(Mid(sChaine, 1, 1)) - 64 + lChiffre
        sChaine = Mid(sChaine, 2)
    Loop While (sChaine <> "")
    Colonne_S_To_L = lChiffre
End Function

Function CalculateTablePosition3(Firstposition As Variant, LastPosition As Variant, FirstSpeed As Variant, LastSpeed As Variant, FirstTime As Variant, LastTime As Variant, NumberOfPoints As Long)
    ' Bon on est parti pour le pire du pire
    ' En fonction des param|fffd|tres rentr|fffd|s cette fonction
    ' doit renvoyer dans les param|fffd|tres
    ' ReturnTableTime() et ReturnTablePosition()
    ' un tableau des points de la fonction les plus liss|fffd|s possible
    '
    ' Pas facile hein?
    '
    ' Premier essai : on utilise une fonction de degr|fffd| 3
    
    Dim CoefA As Variant, CoefB As Variant, CoefC As Variant, CoefD As Variant
    Dim V0 As Variant, V1 As Variant
    Dim M0 As Variant, M1 As Variant
    Dim T0 As Variant, T1 As Variant
    Dim t As Variant
    Dim TimeDivision As Variant
    Dim i As Long
    ' Fonction d'ordre 3 : y = a.x^3 + b.x^2 + c.x +d
    ' D|fffd|riv|fffd|e : y'=3.a.x^2 + 2.b.x + c
    ' Y est la position souhait|fffd|e
    ' X est le temps
    
    ' Voir document du calcul de l'|fffd|quation : Equation 3|fffd|me degr|fffd|.doc
    ' Ca fera de la lecture |fffd| ceux qui s'y int|fffd|ressent :-)
    
    T0 = FirstTime
    T1 = LastTime
    V0 = FirstSpeed
    V1 = LastSpeed
    M0 = Firstposition
    M1 = LastPosition
    
    'Calcul des coefficients
    
    CoefA = (V1 + V0 - 2 * ((M1 - M0) / (T1 - T0))) / (3 * (T1 ^ 2 + T0 ^ 2) - 2 * (T1 ^ 3 - T0 ^ 3) / (T1 - T0))
    CoefB = (V1 - V0 - 3 * CoefA * (T1 ^ 2 - T0 ^ 2)) / (2 * (T1 - T0))
    CoefC = V0 - 3 * CoefA * T0 ^ 2 - 2 * CoefB * T0
    CoefD = M0 - CoefA * T0 ^ 3 - CoefB * T0 ^ 2 - CoefC * T0
    
    'D|fffd|coupe du temps :
    TimeDivision = (T1 - T0) / NumberOfPoints
    
    'Tracage des tableaux
    ReDim Preserve ReturnTableTime(0 To NumberOfPoints - 1)
    ReDim Preserve ReturnTablePosition(0 To NumberOfPoints - 1)
    For i = 0 To NumberOfPoints - 1
        t = T0 + TimeDivision * i
        ReturnTableTime(i) = t
        ReturnTablePosition(i) = CoefA * t ^ 3 + CoefB * t ^ 2 + CoefC * t + CoefD
    Next
    
    'Eh merde... D|fffd|j|fffd| termin|fffd|...
    'Tout |fffd|a pour une quinzaine de lignes de code :-(
End Function

Function CalculateTablePosition5v2(Firstposition As Variant, LastPosition As Variant, FirstSpeed As Variant, LastSpeed As Variant, FirstTime As Variant, LastTime As Variant, FirstAcceleration As Variant, LastAcceleration As Variant, NumberOfPoints As Long)
    ' Bon on est parti pour le pire du pire
    ' En fonction des param|fffd|tres rentr|fffd|s cette fonction
    ' doit renvoyer dans les param|fffd|tres
    ' ReturnTableTime() et ReturnTablePosition()
    ' un tableau des points de la fonction les plus liss|fffd|s possible
    '
    ' Pas facile hein?
    '
    ' Deuxi|fffd|me essai : on utilise une fonction de degr|fffd| 5
    ' Cons|fffd|quences de cet essai :
    ' Position : Continu et d|fffd|rivable
    ' Vitesse : Continue et d|fffd|rivable
    ' Acc|fffd|l|fffd|ration : Continue
    
    Dim CoefA As Variant, CoefB As Variant, CoefC As Variant, CoefD As Variant, CoefE As Variant, CoefF As Variant
    Dim V0 As Variant, V1 As Variant
    Dim M0 As Variant, M1 As Variant
    Dim T0 As Variant, T1 As Variant
    Dim A0 As Variant, A1 As Variant
    Dim t As Variant
    Dim TimeDivision As Variant
    Dim i As Long
    ' Y est la position souhait|fffd|e
    ' X est le temps
    
    ' Voir document du calcul de l'|fffd|quation : Equation 3|fffd|me degr|fffd|.doc
    ' Ca fera de la lecture |fffd| ceux qui s'y int|fffd|ressent :-)
    
    T0 = FirstTime
    T1 = LastTime
    V0 = FirstSpeed
    V1 = LastSpeed
    M0 = Firstposition
    M1 = LastPosition
    A0 = FirstAcceleration
    A1 = LastAcceleration
    'Calcul des coefficients
    CoefB = -1 / 2 * (-3 * T1 ^ 3 * A0 + 2 * T1 ^ 3 * A1 - 14 * T1 ^ 2 * V1 + 4 * T1 ^ 2 * T0 * A0 - 16 * T1 ^ 2 * V0 - T1 ^ 2 * T0 * A1 + T1 * T0 ^ 2 * A0 - 2 * T1 * T0 * V1 - 30 * T1 * M0 + 30 * T1 * M1 + 2 * T1 * T0 * V0 - 4 * T1 * T0 ^ 2 * A1 + 3 * T0 ^ 3 * A1 + 14 * T0 ^ 2 * V0 + 30 * T0 * M1 - 2 * T0 ^ 3 * A0 + 16 * T0 ^ 2 * V1 - 30 * T0 * M0) / (5 * T0 ^ 4 * T1 - 5 * T0 * T1 ^ 4 + 10 * T0 ^ 2 * T1 ^ 3 - 10 * T1 ^ 2 * T0 ^ 3 + T1 ^ 5 - T0 ^ 5)
    CoefC = 1 / 2 * (-3 * T1 ^ 4 * A0 + T1 ^ 4 * A1 + 4 * T1 ^ 3 * T0 * A1 - 12 * T1 ^ 3 * V0 - 8 * T1 ^ 3 * V1 - 8 * T1 ^ 2 * T0 ^ 2 * A1 + 20 * T1 ^ 2 * M1 - 20 * T1 ^ 2 * M0 - 32 * T1 ^ 2 * T0 * V1 - 28 * T1 ^ 2 * T0 * V0 + 8 * T1 ^ 2 * T0 ^ 2 * A0 + 80 * T1 * T0 * M1 + 28 * T1 * T0 ^ 2 * V1 - 4 * T1 * T0 ^ 3 * A0 - 80 * T1 * T0 * M0 + 32 * T1 * T0 ^ 2 * V0 - T0 ^ 4 * A0 - 20 * T0 ^ 2 * M0 + 20 * T0 ^ 2 * M1 + 3 * T0 ^ 4 * A1 + 12 * T0 ^ 3 * V1 + 8 * T0 ^ 3 * V0) / (5 * T0 ^ 4 * T1 - 5 * T0 * T1 ^ 4 + 10 * T0 ^ 2 * T1 ^ 3 - 10 * T1 ^ 2 * T0 ^ 3 + T1 ^ 5 - T0 ^ 5)
    CoefF = -1 / 2 * (T1 ^ 2 * A1 * T0 ^ 5 - 2 * T1 * V1 * T0 ^ 5 - 20 * T1 ^ 3 * T0 ^ 2 * M0 - 2 * T1 ^ 3 * T0 ^ 4 * A1 - 8 * T1 ^ 3 * T0 ^ 3 * V1 + 8 * T1 ^ 3 * T0 ^ 3 * V0 + 10 * T1 ^ 2 * V1 * T0 ^ 4 - T1 ^ 3 * T0 ^ 4 * A0 + 2 * T1 ^ 4 * T0 ^ 3 * A0 + 10 * T1 ^ 4 * T0 * M0 + T1 ^ 4 * T0 ^ 3 * A1 - 10 * T1 ^ 4 * T0 ^ 2 * V0 + 2 * T1 ^ 5 * T0 * V0 - T1 ^ 5 * T0 ^ 2 * A0 - 2 * T1 ^ 5 * M0 + 2 * M1 * T0 ^ 5 - 10 * M1 * T0 ^ 4 * T1 + 20 * M1 * T1 ^ 2 * T0 ^ 3) / (5 * T0 ^ 4 * T1 - 5 * T0 * T1 ^ 4 + 10 * T0 ^ 2 * T1 ^ 3 - 10 * T1 ^ 2 * T0 ^ 3 + T1 ^ 5 - T0 ^ 5)
    CoefE = 1 / 2 * (10 * T0 ^ 4 * T1 * V1 - T0 ^ 4 * T1 ^ 2 * A1 - 3 * T0 ^ 4 * T1 ^ 2 * A0 + 2 * T0 ^ 5 * T1 * A1 - 16 * T0 ^ 2 * T1 ^ 3 * V0 - 24 * T0 ^ 2 * T1 ^ 3 * V1 + T1 ^ 4 * T0 ^ 2 * A0 - 10 * T1 ^ 4 * T0 * V0 - 2 * T1 ^ 5 * T0 * A0 + 24 * T1 ^ 2 * T0 ^ 3 * V0 + 4 * T0 ^ 3 * T1 ^ 3 * A0 - 4 * T0 ^ 3 * T1 ^ 3 * A1 + 16 * T1 ^ 2 * T0 ^ 3 * V1 - 60 * T1 ^ 2 * T0 ^ 2 * M0 + 60 * T1 ^ 2 * T0 ^ 2 * M1 - 2 * T0 ^ 5 * V1 + 2 * T1 ^ 5 * V0 + 3 * T1 ^ 4 * T0 ^ 2 * A1) / (5 * T0 ^ 4 * T1 - 5 * T0 * T1 ^ 4 + 10 * T0 ^ 2 * T1 ^ 3 - 10 * T1 ^ 2 * T0 ^ 3 + T1 ^ 5 - T0 ^ 5)
    CoefD = -1 / 2 * (T0 ^ 5 * A1 - 3 * T0 ^ 4 * T1 * A0 - 12 * T0 ^ 2 * T1 ^ 2 * V1 + 12 * T0 ^ 2 * T1 ^ 2 * V0 + 60 * T1 ^ 2 * T0 * M1 - 60 * T1 ^ 2 * T0 * M0 - 60 * T0 ^ 2 * T1 * M0 + 60 * T0 ^ 2 * T1 * M1 + 3 * T1 ^ 4 * T0 * A1 - 36 * T1 ^ 3 * T0 * V0 + 8 * T1 ^ 3 * T0 ^ 2 * A0 - 24 * T1 ^ 3 * T0 * V1 - T1 ^ 5 * A0 + 24 * T0 ^ 3 * T1 * V0 - 8 * T0 ^ 3 * T1 ^ 2 * A1 + 4 * T0 ^ 4 * T1 * A1 - 4 * T1 ^ 4 * T0 * A0 + 36 * T0 ^ 3 * T1 * V1) / (5 * T0 ^ 4 * T1 - 5 * T0 * T1 ^ 4 + 10 * T0 ^ 2 * T1 ^ 3 - 10 * T1 ^ 2 * T0 ^ 3 + T1 ^ 5 - T0 ^ 5)
    CoefA = 1 / 2 * (2 * T0 * T1 * A0 - 2 * T0 * T1 * A1 - 12 * M0 - T1 ^ 2 * A0 + 6 * T0 * V1 + 6 * T0 * V0 + T1 ^ 2 * A1 + T0 ^ 2 * A1 - T0 ^ 2 * A0 - 6 * T1 * V0 - 6 * T1 * V1 + 12 * M1) / (5 * T0 ^ 4 * T1 - 5 * T0 * T1 ^ 4 + 10 * T0 ^ 2 * T1 ^ 3 - 10 * T1 ^ 2 * T0 ^ 3 + T1 ^ 5 - T0 ^ 5)
    'D|fffd|coupe du temps :
    TimeDivision = (T1 - T0) / NumberOfPoints
    
    'Tracage des tableaux
    ReDim Preserve ReturnTableTime(0 To NumberOfPoints - 1)
    ReDim Preserve ReturnTablePosition(0 To NumberOfPoints - 1)
    For i = 0 To NumberOfPoints - 1
        t = T0 + TimeDivision * i
        ReturnTableTime(i) = t
        ReturnTablePosition(i) = CoefA * t ^ 5 + CoefB * t ^ 4 + CoefC * t ^ 3 + CoefD * t ^ 2 + CoefE * t + CoefF
    Next
    
    'Eh merde... D|fffd|j|fffd| termin|fffd|...
    'Tout |fffd|a pour une quinzaine de lignes de code :-(
End Function

Function CalculateTablePosition5(Firstposition As Variant, LastPosition As Variant, FirstSpeed As Variant, LastSpeed As Variant, FirstTime As Variant, LastTime As Variant, FirstAcceleration As Variant, LastAcceleration As Variant, NumberOfPoints As Long)
    ' Bon on est parti pour le pire du pire
    ' En fonction des param|fffd|tres rentr|fffd|s cette fonction
    ' doit renvoyer dans les param|fffd|tres
    ' ReturnTableTime() et ReturnTablePosition()
    ' un tableau des points de la fonction les plus liss|fffd|s possible
    '
    ' Pas facile hein?
    '
    ' Deuxi|fffd|me essai : on utilise une fonction de degr|fffd| 5
    ' Cons|fffd|quences de cet essai :
    ' Position : Continu et d|fffd|rivable
    ' Vitesse : Continue et d|fffd|rivable
    ' Acc|fffd|l|fffd|ration : Continue
    
    Dim CoefA As Variant, CoefB As Variant, CoefC As Variant, CoefD As Variant, CoefE As Variant, CoefF As Variant
    Dim V0 As Variant, V1 As Variant
    Dim M0 As Variant, M1 As Variant
    Dim T0 As Variant, T1 As Variant
    Dim A0 As Variant, A1 As Variant
    Dim t As Variant
    Dim TimeDivision As Variant
    Dim i As Long
    ' Y est la position souhait|fffd|e
    ' X est le temps
    
    ' Voir document du calcul de l'|fffd|quation : Equation 3|fffd|me degr|fffd|.doc
    ' Ca fera de la lecture |fffd| ceux qui s'y int|fffd|ressent :-)
    
    T0 = FirstTime
    T1 = LastTime
    V0 = FirstSpeed
    V1 = LastSpeed
    M0 = Firstposition
    M1 = LastPosition
    A0 = FirstAcceleration
    A1 = LastAcceleration
    'Calcul des coefficients
        
    CoefB = -1 / 2 * (-3 * T1 ^ 3 * A0 + 2 * T1 ^ 3 * A1 - 14 * T1 ^ 2 * V1 + 4 * T1 ^ 2 * T0 * A0 - 16 * T1 ^ 2 * V0 - T1 ^ 2 * T0 * A1 + T1 * T0 ^ 2 * A0 - 2 * T1 * T0 * V1 - 30 * T1 * M0 + 30 * T1 * M1 + 2 * T1 * T0 * V0 - 4 * T1 * T0 ^ 2 * A1 + 3 * T0 ^ 3 * A1 + 14 * T0 ^ 2 * V0 + 30 * T0 * M1 - 2 * T0 ^ 3 * A0 + 16 * T0 ^ 2 * V1 - 30 * T0 * M0) / (5 * T0 ^ 4 * T1 - 5 * T0 * T1 ^ 4 + 10 * T0 ^ 2 * T1 ^ 3 - 10 * T1 ^ 2 * T0 ^ 3 + T1 ^ 5 - T0 ^ 5)
    CoefC = 1 / 2 * (-3 * T1 ^ 4 * A0 + T1 ^ 4 * A1 + 4 * T1 ^ 3 * T0 * A1 - 12 * T1 ^ 3 * V0 - 8 * T1 ^ 3 * V1 - 8 * T1 ^ 2 * T0 ^ 2 * A1 + 20 * T1 ^ 2 * M1 - 20 * T1 ^ 2 * M0 - 32 * T1 ^ 2 * T0 * V1 - 28 * T1 ^ 2 * T0 * V0 + 8 * T1 ^ 2 * T0 ^ 2 * A0 + 80 * T1 * T0 * M1 + 28 * T1 * T0 ^ 2 * V1 - 4 * T1 * T0 ^ 3 * A0 - 80 * T1 * T0 * M0 + 32 * T1 * T0 ^ 2 * V0 - T0 ^ 4 * A0 - 20 * T0 ^ 2 * M0 + 20 * T0 ^ 2 * M1 + 3 * T0 ^ 4 * A1 + 12 * T0 ^ 3 * V1 + 8 * T0 ^ 3 * V0) / (5 * T0 ^ 4 * T1 - 5 * T0 * T1 ^ 4 + 10 * T0 ^ 2 * T1 ^ 3 - 10 * T1 ^ 2 * T0 ^ 3 + T1 ^ 5 - T0 ^ 5)
    CoefF = -1 / 2 * (T1 ^ 2 * A1 * T0 ^ 5 - 2 * T1 * V1 * T0 ^ 5 - 20 * T1 ^ 3 * T0 ^ 2 * M0 - 2 * T1 ^ 3 * T0 ^ 4 * A1 - 8 * T1 ^ 3 * T0 ^ 3 * V1 + 8 * T1 ^ 3 * T0 ^ 3 * V0 + 10 * T1 ^ 2 * V1 * T0 ^ 4 - T1 ^ 3 * T0 ^ 4 * A0 + 2 * T1 ^ 4 * T0 ^ 3 * A0 + 10 * T1 ^ 4 * T0 * M0 + T1 ^ 4 * T0 ^ 3 * A1 - 10 * T1 ^ 4 * T0 ^ 2 * V0 + 2 * T1 ^ 5 * T0 * V0 - T1 ^ 5 * T0 ^ 2 * A0 - 2 * T1 ^ 5 * M0 + 2 * M1 * T0 ^ 5 - 10 * M1 * T0 ^ 4 * T1 + 20 * M1 * T1 ^ 2 * T0 ^ 3) / (5 * T0 ^ 4 * T1 - 5 * T0 * T1 ^ 4 + 10 * T0 ^ 2 * T1 ^ 3 - 10 * T1 ^ 2 * T0 ^ 3 + T1 ^ 5 - T0 ^ 5)
    CoefE = 1 / 2 * (10 * T0 ^ 4 * T1 * V1 - T0 ^ 4 * T1 ^ 2 * A1 - 3 * T0 ^ 4 * T1 ^ 2 * A0 + 2 * T0 ^ 5 * T1 * A1 - 16 * T0 ^ 2 * T1 ^ 3 * V0 - 24 * T0 ^ 2 * T1 ^ 3 * V1 + T1 ^ 4 * T0 ^ 2 * A0 - 10 * T1 ^ 4 * T0 * V0 - 2 * T1 ^ 5 * T0 * A0 + 24 * T1 ^ 2 * T0 ^ 3 * V0 + 4 * T0 ^ 3 * T1 ^ 3 * A0 - 4 * T0 ^ 3 * T1 ^ 3 * A1 + 16 * T1 ^ 2 * T0 ^ 3 * V1 - 60 * T1 ^ 2 * T0 ^ 2 * M0 + 60 * T1 ^ 2 * T0 ^ 2 * M1 - 2 * T0 ^ 5 * V1 + 2 * T1 ^ 5 * V0 + 3 * T1 ^ 4 * T0 ^ 2 * A1) / (5 * T0 ^ 4 * T1 - 5 * T0 * T1 ^ 4 + 10 * T0 ^ 2 * T1 ^ 3 - 10 * T1 ^ 2 * T0 ^ 3 + T1 ^ 5 - T0 ^ 5)
    CoefD = -1 / 2 * (T0 ^ 5 * A1 - 3 * T0 ^ 4 * T1 * A0 - 12 * T0 ^ 2 * T1 ^ 2 * V1 + 12 * T0 ^ 2 * T1 ^ 2 * V0 + 60 * T1 ^ 2 * T0 * M1 - 60 * T1 ^ 2 * T0 * M0 - 60 * T0 ^ 2 * T1 * M0 + 60 * T0 ^ 2 * T1 * M1 + 3 * T1 ^ 4 * T0 * A1 - 36 * T1 ^ 3 * T0 * V0 + 8 * T1 ^ 3 * T0 ^ 2 * A0 - 24 * T1 ^ 3 * T0 * V1 - T1 ^ 5 * A0 + 24 * T0 ^ 3 * T1 * V0 - 8 * T0 ^ 3 * T1 ^ 2 * A1 + 4 * T0 ^ 4 * T1 * A1 - 4 * T1 ^ 4 * T0 * A0 + 36 * T0 ^ 3 * T1 * V1) / (5 * T0 ^ 4 * T1 - 5 * T0 * T1 ^ 4 + 10 * T0 ^ 2 * T1 ^ 3 - 10 * T1 ^ 2 * T0 ^ 3 + T1 ^ 5 - T0 ^ 5)
    CoefA = 1 / 2 * (2 * T0 * T1 * A0 - 2 * T0 * T1 * A1 - 12 * M0 - T1 ^ 2 * A0 + 6 * T0 * V1 + 6 * T0 * V0 + T1 ^ 2 * A1 + T0 ^ 2 * A1 - T0 ^ 2 * A0 - 6 * T1 * V0 - 6 * T1 * V1 + 12 * M1) / (5 * T0 ^ 4 * T1 - 5 * T0 * T1 ^ 4 + 10 * T0 ^ 2 * T1 ^ 3 - 10 * T1 ^ 2 * T0 ^ 3 + T1 ^ 5 - T0 ^ 5)
    'D|fffd|coupe du temps :
    TimeDivision = (T1 - T0) / NumberOfPoints
    
    'Tracage des tableaux
    ReDim Preserve ReturnTableTime(0 To NumberOfPoints)
    ReDim Preserve ReturnTablePosition(0 To NumberOfPoints)
    For i = 0 To NumberOfPoints
        t = T0 + TimeDivision * i
        ReturnTableTime(i) = t
        ReturnTablePosition(i) = CoefA * t ^ 5 + CoefB * t ^ 4 + CoefC * t ^ 3 + CoefD * t ^ 2 + CoefE * t + CoefF
    Next
    
    'Eh merde... D|fffd|j|fffd| termin|fffd|...
    'Tout |fffd|a pour une quinzaine de lignes de code :-(
End Function

Function CalculateTablePositionForZero5(Firstposition As Variant, LastPosition As Variant, FirstSpeed As Variant, LastSpeed As Variant, FirstTime As Variant, LastTime As Variant, FirstAcceleration As Variant, LastAcceleration As Variant, FirstFillingTime As Variant, LastFillingTime, NumberOfPoints As Long)
    ' Bon on est parti pour le pire du pire
    ' En fonction des param|fffd|tres rentr|fffd|s cette fonction
    ' doit renvoyer dans les param|fffd|tres
    ' ReturnTableTime() et ReturnTablePosition()
    ' un tableau des points de la fonction les plus liss|fffd|s possible
    '
    ' Pas facile hein?
    '
    ' Deuxi|fffd|me essai : on utilise une fonction de degr|fffd| 5
    ' Cons|fffd|quences de cet essai :
    ' Position : Continu et d|fffd|rivable
    ' Vitesse : Continue et d|fffd|rivable
    ' Acc|fffd|l|fffd|ration : Continue
    
    Dim CoefA As Variant, CoefB As Variant, CoefC As Variant, CoefD As Variant, CoefE As Variant, CoefF As Variant
    Dim V0 As Variant, V1 As Variant
    Dim M0 As Variant, M1 As Variant
    Dim T0 As Variant, T1 As Variant
    Dim A0 As Variant, A1 As Variant
    Dim t As Variant
    Dim TimeDivision As Variant
    Dim i As Long
    ' Fonction d'ordre 3 : y = a.x^3 + b.x^2 + c.x +d
    ' D|fffd|riv|fffd|e : y'=3.a.x^2 + 2.b.x + c
    ' Y est la position souhait|fffd|e
    ' X est le temps
    
    ' Voir document du calcul de l'|fffd|quation : Equation 3|fffd|me degr|fffd|.doc
    ' Ca fera de la lecture |fffd| ceux qui s'y int|fffd|ressent :-)
    
    T0 = FirstTime
    T1 = LastTime
    V0 = FirstSpeed
    V1 = LastSpeed
    M0 = Firstposition
    M1 = LastPosition
    A0 = FirstAcceleration
    A1 = LastAcceleration
    'Calcul des coefficients
    
'    CoefA = 1 / 2 * (2 * T0 * T1 * A0 - 2 * T0 * T1 * A1 - 12 * M0 - T1 ^ 2 * A0 + 6 * T0 * V1 + 6 * T0 * V0 + T1 ^ 2 * A1 + T0 ^ 2 * A1 - T0 ^ 2 * A0 - 6 * T1 * V0 - 6 * T1 * V1 + 12 * M1) / (5 * T0 ^ 4 * T1 - 5 * T0 * T1 ^ 4 + 10 * T0 ^ 2 * T1 ^ 3 - 10 * T1 ^ 2 * T0 ^ 3 + T1 ^ 5 - T0 ^ 5)
'    CoefB = -1 / 2 * (-3 * T1 ^ 3 * A0 + 2 * T1 ^ 3 * A1 - 14 * T1 ^ 2 * V1 + 4 * T1 ^ 2 * T0 * A0 - 16 * T1 ^ 2 * V0 - T1 ^ 2 * T0 * A1 + T1 * T0 ^ 2 * A0 - 2 * T1 * T0 * V1 - 30 * T1 * M0 + 30 * T1 * M1 + 2 * T1 * T0 * V0 - 4 * T1 * T0 ^ 2 * A1 + 3 * T0 ^ 3 * A1 + 14 * T0 ^ 2 * V0 + 30 * T0 * M1 - 2 * T0 ^ 3 * A0 + 16 * T0 ^ 2 * V1 - 30 * T0 * M0) / (5 * T0 ^ 4 * T1 - 5 * T0 * T1 ^ 4 + 10 * T0 ^ 2 * T1 ^ 3 - 10 * T1 ^ 2 * T0 ^ 3 + T1 ^ 5 - T0 ^ 5)
'    CoefC = (A1 - A0 - 20 * CoefA * (T1 ^ 3 - T0 ^ 3) - 12 * CoefB * (T1 ^ 2 - T0 ^ 2)) / (6 * (T1 - T0))
'    CoefD = (A0 - 20 * CoefA * T0 ^ 3 - 12 * CoefB * T0 ^ 2 - 6 * CoefC * T0) / 2
'    CoefE = V0 - 5 * CoefA * T0 ^ 4 - 4 * CoefB * T0 ^ 3 - 3 * CoefC * T0 ^ 2 - 2 * CoefD * T0
'    CoefF = M0 - CoefA * T0 ^ 5 - CoefB * T0 ^ 4 - CoefC * T0 ^ 3 - CoefD * T0 ^ 2 - CoefE * T0
    
    CoefB = -1 / 2 * (-3 * T1 ^ 3 * A0 + 2 * T1 ^ 3 * A1 - 14 * T1 ^ 2 * V1 + 4 * T1 ^ 2 * T0 * A0 - 16 * T1 ^ 2 * V0 - T1 ^ 2 * T0 * A1 + T1 * T0 ^ 2 * A0 - 2 * T1 * T0 * V1 - 30 * T1 * M0 + 30 * T1 * M1 + 2 * T1 * T0 * V0 - 4 * T1 * T0 ^ 2 * A1 + 3 * T0 ^ 3 * A1 + 14 * T0 ^ 2 * V0 + 30 * T0 * M1 - 2 * T0 ^ 3 * A0 + 16 * T0 ^ 2 * V1 - 30 * T0 * M0) / (5 * T0 ^ 4 * T1 - 5 * T0 * T1 ^ 4 + 10 * T0 ^ 2 * T1 ^ 3 - 10 * T1 ^ 2 * T0 ^ 3 + T1 ^ 5 - T0 ^ 5)
    CoefC = 1 / 2 * (-3 * T1 ^ 4 * A0 + T1 ^ 4 * A1 + 4 * T1 ^ 3 * T0 * A1 - 12 * T1 ^ 3 * V0 - 8 * T1 ^ 3 * V1 - 8 * T1 ^ 2 * T0 ^ 2 * A1 + 20 * T1 ^ 2 * M1 - 20 * T1 ^ 2 * M0 - 32 * T1 ^ 2 * T0 * V1 - 28 * T1 ^ 2 * T0 * V0 + 8 * T1 ^ 2 * T0 ^ 2 * A0 + 80 * T1 * T0 * M1 + 28 * T1 * T0 ^ 2 * V1 - 4 * T1 * T0 ^ 3 * A0 - 80 * T1 * T0 * M0 + 32 * T1 * T0 ^ 2 * V0 - T0 ^ 4 * A0 - 20 * T0 ^ 2 * M0 + 20 * T0 ^ 2 * M1 + 3 * T0 ^ 4 * A1 + 12 * T0 ^ 3 * V1 + 8 * T0 ^ 3 * V0) / (5 * T0 ^ 4 * T1 - 5 * T0 * T1 ^ 4 + 10 * T0 ^ 2 * T1 ^ 3 - 10 * T1 ^ 2 * T0 ^ 3 + T1 ^ 5 - T0 ^ 5)
    CoefF = -1 / 2 * (T1 ^ 2 * A1 * T0 ^ 5 - 2 * T1 * V1 * T0 ^ 5 - 20 * T1 ^ 3 * T0 ^ 2 * M0 - 2 * T1 ^ 3 * T0 ^ 4 * A1 - 8 * T1 ^ 3 * T0 ^ 3 * V1 + 8 * T1 ^ 3 * T0 ^ 3 * V0 + 10 * T1 ^ 2 * V1 * T0 ^ 4 - T1 ^ 3 * T0 ^ 4 * A0 + 2 * T1 ^ 4 * T0 ^ 3 * A0 + 10 * T1 ^ 4 * T0 * M0 + T1 ^ 4 * T0 ^ 3 * A1 - 10 * T1 ^ 4 * T0 ^ 2 * V0 + 2 * T1 ^ 5 * T0 * V0 - T1 ^ 5 * T0 ^ 2 * A0 - 2 * T1 ^ 5 * M0 + 2 * M1 * T0 ^ 5 - 10 * M1 * T0 ^ 4 * T1 + 20 * M1 * T1 ^ 2 * T0 ^ 3) / (5 * T0 ^ 4 * T1 - 5 * T0 * T1 ^ 4 + 10 * T0 ^ 2 * T1 ^ 3 - 10 * T1 ^ 2 * T0 ^ 3 + T1 ^ 5 - T0 ^ 5)
    CoefE = 1 / 2 * (10 * T0 ^ 4 * T1 * V1 - T0 ^ 4 * T1 ^ 2 * A1 - 3 * T0 ^ 4 * T1 ^ 2 * A0 + 2 * T0 ^ 5 * T1 * A1 - 16 * T0 ^ 2 * T1 ^ 3 * V0 - 24 * T0 ^ 2 * T1 ^ 3 * V1 + T1 ^ 4 * T0 ^ 2 * A0 - 10 * T1 ^ 4 * T0 * V0 - 2 * T1 ^ 5 * T0 * A0 + 24 * T1 ^ 2 * T0 ^ 3 * V0 + 4 * T0 ^ 3 * T1 ^ 3 * A0 - 4 * T0 ^ 3 * T1 ^ 3 * A1 + 16 * T1 ^ 2 * T0 ^ 3 * V1 - 60 * T1 ^ 2 * T0 ^ 2 * M0 + 60 * T1 ^ 2 * T0 ^ 2 * M1 - 2 * T0 ^ 5 * V1 + 2 * T1 ^ 5 * V0 + 3 * T1 ^ 4 * T0 ^ 2 * A1) / (5 * T0 ^ 4 * T1 - 5 * T0 * T1 ^ 4 + 10 * T0 ^ 2 * T1 ^ 3 - 10 * T1 ^ 2 * T0 ^ 3 + T1 ^ 5 - T0 ^ 5)
    CoefD = -1 / 2 * (T0 ^ 5 * A1 - 3 * T0 ^ 4 * T1 * A0 - 12 * T0 ^ 2 * T1 ^ 2 * V1 + 12 * T0 ^ 2 * T1 ^ 2 * V0 + 60 * T1 ^ 2 * T0 * M1 - 60 * T1 ^ 2 * T0 * M0 - 60 * T0 ^ 2 * T1 * M0 + 60 * T0 ^ 2 * T1 * M1 + 3 * T1 ^ 4 * T0 * A1 - 36 * T1 ^ 3 * T0 * V0 + 8 * T1 ^ 3 * T0 ^ 2 * A0 - 24 * T1 ^ 3 * T0 * V1 - T1 ^ 5 * A0 + 24 * T0 ^ 3 * T1 * V0 - 8 * T0 ^ 3 * T1 ^ 2 * A1 + 4 * T0 ^ 4 * T1 * A1 - 4 * T1 ^ 4 * T0 * A0 + 36 * T0 ^ 3 * T1 * V1) / (5 * T0 ^ 4 * T1 - 5 * T0 * T1 ^ 4 + 10 * T0 ^ 2 * T1 ^ 3 - 10 * T1 ^ 2 * T0 ^ 3 + T1 ^ 5 - T0 ^ 5)
    CoefA = 1 / 2 * (2 * T0 * T1 * A0 - 2 * T0 * T1 * A1 - 12 * M0 - T1 ^ 2 * A0 + 6 * T0 * V1 + 6 * T0 * V0 + T1 ^ 2 * A1 + T0 ^ 2 * A1 - T0 ^ 2 * A0 - 6 * T1 * V0 - 6 * T1 * V1 + 12 * M1) / (5 * T0 ^ 4 * T1 - 5 * T0 * T1 ^ 4 + 10 * T0 ^ 2 * T1 ^ 3 - 10 * T1 ^ 2 * T0 ^ 3 + T1 ^ 5 - T0 ^ 5)
    'D|fffd|coupe du temps :
    TimeDivision = (LastFillingTime - FirstFillingTime) / NumberOfPoints
    
    'Tracage des tableaux
    ReDim Preserve ReturnTableTime(0 To NumberOfPoints - 1)
    ReDim Preserve ReturnTablePosition(0 To NumberOfPoints - 1)
    For i = 0 To NumberOfPoints - 1
        t = FirstFillingTime + TimeDivision * i
        ReturnTableTime(i) = t
        ReturnTablePosition(i) = CoefA * t ^ 5 + CoefB * t ^ 4 + CoefC * t ^ 3 + CoefD * t ^ 2 + CoefE * t + CoefF
    Next
    
    'Eh merde... D|fffd|j|fffd| termin|fffd|...
    'Tout |fffd|a pour une quinzaine de lignes de code :-(
End Function

Function CalculateSpeedAcc5(Firstposition As Variant, LastPosition As Variant, FirstSpeed As Variant, LastSpeed As Variant, FirstTime As Variant, LastTime As Variant, FirstAcceleration As Variant, LastAcceleration As Variant, PositionToMatch As Variant) As ReturnCalculateSpeedAcc
    ' Bon on est parti pour le pire du pire
    ' En fonction des param|fffd|tres rentr|fffd|s cette fonction
    ' doit renvoyer dans les acc|fffd|l|fffd|rations et vitesses en un point souhait|fffd|
    '
    ' Pas facile hein?
    '
    ' Deuxi|fffd|me essai : on utilise une fonction de degr|fffd| 5
    ' Cons|fffd|quences de cet essai :
    ' Position : Continu et d|fffd|rivable
    ' Vitesse : Continue et d|fffd|rivable
    ' Acc|fffd|l|fffd|ration : Continue
    
    Dim CoefA As Variant, CoefB As Variant, CoefC As Variant, CoefD As Variant, CoefE As Variant, CoefF As Variant
    Dim V0 As Variant, V1 As Variant
    Dim M0 As Variant, M1 As Variant
    Dim T0 As Variant, T1 As Variant
    Dim A0 As Variant, A1 As Variant
    Dim t As Variant
    Dim TimeDivision As Variant
    Dim i As Long
    Dim TMin As Variant
    Dim TMax As Variant
    Dim MinPosition As Variant
    Dim MaxPosition As Variant
    Dim FoundPosition As Variant
    Dim FoundTime As Variant
    Dim bContinue As Boolean
    ' Y est la position souhait|fffd|e
    ' X est le temps
    
    ' Voir document du calcul de l'|fffd|quation : Equation 3|fffd|me degr|fffd|.doc
    ' Ca fera de la lecture |fffd| ceux qui s'y int|fffd|ressent :-)
    
    T0 = FirstTime
    T1 = LastTime
    V0 = FirstSpeed
    V1 = LastSpeed
    M0 = Firstposition
    M1 = LastPosition
    A0 = FirstAcceleration
    A1 = LastAcceleration
    'Calcul des coefficients
    
'    CoefA = 1 / 2 * (2 * T0 * T1 * A0 - 2 * T0 * T1 * A1 - 12 * M0 - T1 ^ 2 * A0 + 6 * T0 * V1 + 6 * T0 * V0 + T1 ^ 2 * A1 + T0 ^ 2 * A1 - T0 ^ 2 * A0 - 6 * T1 * V0 - 6 * T1 * V1 + 12 * M1) / (5 * T0 ^ 4 * T1 - 5 * T0 * T1 ^ 4 + 10 * T0 ^ 2 * T1 ^ 3 - 10 * T1 ^ 2 * T0 ^ 3 + T1 ^ 5 - T0 ^ 5)
'    CoefB = -1 / 2 * (-3 * T1 ^ 3 * A0 + 2 * T1 ^ 3 * A1 - 14 * T1 ^ 2 * V1 + 4 * T1 ^ 2 * T0 * A0 - 16 * T1 ^ 2 * V0 - T1 ^ 2 * T0 * A1 + T1 * T0 ^ 2 * A0 - 2 * T1 * T0 * V1 - 30 * T1 * M0 + 30 * T1 * M1 + 2 * T1 * T0 * V0 - 4 * T1 * T0 ^ 2 * A1 + 3 * T0 ^ 3 * A1 + 14 * T0 ^ 2 * V0 + 30 * T0 * M1 - 2 * T0 ^ 3 * A0 + 16 * T0 ^ 2 * V1 - 30 * T0 * M0) / (5 * T0 ^ 4 * T1 - 5 * T0 * T1 ^ 4 + 10 * T0 ^ 2 * T1 ^ 3 - 10 * T1 ^ 2 * T0 ^ 3 + T1 ^ 5 - T0 ^ 5)
'    CoefC = (A1 - A0 - 20 * CoefA * (T1 ^ 3 - T0 ^ 3) - 12 * CoefB * (T1 ^ 2 - T0 ^ 2)) / (6 * (T1 - T0))
'    CoefD = (A0 - 20 * CoefA * T0 ^ 3 - 12 * CoefB * T0 ^ 2 - 6 * CoefC * T0) / 2
'    CoefE = V0 - 5 * CoefA * T0 ^ 4 - 4 * CoefB * T0 ^ 3 - 3 * CoefC * T0 ^ 2 - 2 * CoefD * T0
'    CoefF = M0 - CoefA * T0 ^ 5 - CoefB * T0 ^ 4 - CoefC * T0 ^ 3 - CoefD * T0 ^ 2 - CoefE * T0
    
    CoefB = -1 / 2 * (-3 * T1 ^ 3 * A0 + 2 * T1 ^ 3 * A1 - 14 * T1 ^ 2 * V1 + 4 * T1 ^ 2 * T0 * A0 - 16 * T1 ^ 2 * V0 - T1 ^ 2 * T0 * A1 + T1 * T0 ^ 2 * A0 - 2 * T1 * T0 * V1 - 30 * T1 * M0 + 30 * T1 * M1 + 2 * T1 * T0 * V0 - 4 * T1 * T0 ^ 2 * A1 + 3 * T0 ^ 3 * A1 + 14 * T0 ^ 2 * V0 + 30 * T0 * M1 - 2 * T0 ^ 3 * A0 + 16 * T0 ^ 2 * V1 - 30 * T0 * M0) / (5 * T0 ^ 4 * T1 - 5 * T0 * T1 ^ 4 + 10 * T0 ^ 2 * T1 ^ 3 - 10 * T1 ^ 2 * T0 ^ 3 + T1 ^ 5 - T0 ^ 5)
    CoefC = 1 / 2 * (-3 * T1 ^ 4 * A0 + T1 ^ 4 * A1 + 4 * T1 ^ 3 * T0 * A1 - 12 * T1 ^ 3 * V0 - 8 * T1 ^ 3 * V1 - 8 * T1 ^ 2 * T0 ^ 2 * A1 + 20 * T1 ^ 2 * M1 - 20 * T1 ^ 2 * M0 - 32 * T1 ^ 2 * T0 * V1 - 28 * T1 ^ 2 * T0 * V0 + 8 * T1 ^ 2 * T0 ^ 2 * A0 + 80 * T1 * T0 * M1 + 28 * T1 * T0 ^ 2 * V1 - 4 * T1 * T0 ^ 3 * A0 - 80 * T1 * T0 * M0 + 32 * T1 * T0 ^ 2 * V0 - T0 ^ 4 * A0 - 20 * T0 ^ 2 * M0 + 20 * T0 ^ 2 * M1 + 3 * T0 ^ 4 * A1 + 12 * T0 ^ 3 * V1 + 8 * T0 ^ 3 * V0) / (5 * T0 ^ 4 * T1 - 5 * T0 * T1 ^ 4 + 10 * T0 ^ 2 * T1 ^ 3 - 10 * T1 ^ 2 * T0 ^ 3 + T1 ^ 5 - T0 ^ 5)
    CoefF = -1 / 2 * (T1 ^ 2 * A1 * T0 ^ 5 - 2 * T1 * V1 * T0 ^ 5 - 20 * T1 ^ 3 * T0 ^ 2 * M0 - 2 * T1 ^ 3 * T0 ^ 4 * A1 - 8 * T1 ^ 3 * T0 ^ 3 * V1 + 8 * T1 ^ 3 * T0 ^ 3 * V0 + 10 * T1 ^ 2 * V1 * T0 ^ 4 - T1 ^ 3 * T0 ^ 4 * A0 + 2 * T1 ^ 4 * T0 ^ 3 * A0 + 10 * T1 ^ 4 * T0 * M0 + T1 ^ 4 * T0 ^ 3 * A1 - 10 * T1 ^ 4 * T0 ^ 2 * V0 + 2 * T1 ^ 5 * T0 * V0 - T1 ^ 5 * T0 ^ 2 * A0 - 2 * T1 ^ 5 * M0 + 2 * M1 * T0 ^ 5 - 10 * M1 * T0 ^ 4 * T1 + 20 * M1 * T1 ^ 2 * T0 ^ 3) / (5 * T0 ^ 4 * T1 - 5 * T0 * T1 ^ 4 + 10 * T0 ^ 2 * T1 ^ 3 - 10 * T1 ^ 2 * T0 ^ 3 + T1 ^ 5 - T0 ^ 5)
    CoefE = 1 / 2 * (10 * T0 ^ 4 * T1 * V1 - T0 ^ 4 * T1 ^ 2 * A1 - 3 * T0 ^ 4 * T1 ^ 2 * A0 + 2 * T0 ^ 5 * T1 * A1 - 16 * T0 ^ 2 * T1 ^ 3 * V0 - 24 * T0 ^ 2 * T1 ^ 3 * V1 + T1 ^ 4 * T0 ^ 2 * A0 - 10 * T1 ^ 4 * T0 * V0 - 2 * T1 ^ 5 * T0 * A0 + 24 * T1 ^ 2 * T0 ^ 3 * V0 + 4 * T0 ^ 3 * T1 ^ 3 * A0 - 4 * T0 ^ 3 * T1 ^ 3 * A1 + 16 * T1 ^ 2 * T0 ^ 3 * V1 - 60 * T1 ^ 2 * T0 ^ 2 * M0 + 60 * T1 ^ 2 * T0 ^ 2 * M1 - 2 * T0 ^ 5 * V1 + 2 * T1 ^ 5 * V0 + 3 * T1 ^ 4 * T0 ^ 2 * A1) / (5 * T0 ^ 4 * T1 - 5 * T0 * T1 ^ 4 + 10 * T0 ^ 2 * T1 ^ 3 - 10 * T1 ^ 2 * T0 ^ 3 + T1 ^ 5 - T0 ^ 5)
    CoefD = -1 / 2 * (T0 ^ 5 * A1 - 3 * T0 ^ 4 * T1 * A0 - 12 * T0 ^ 2 * T1 ^ 2 * V1 + 12 * T0 ^ 2 * T1 ^ 2 * V0 + 60 * T1 ^ 2 * T0 * M1 - 60 * T1 ^ 2 * T0 * M0 - 60 * T0 ^ 2 * T1 * M0 + 60 * T0 ^ 2 * T1 * M1 + 3 * T1 ^ 4 * T0 * A1 - 36 * T1 ^ 3 * T0 * V0 + 8 * T1 ^ 3 * T0 ^ 2 * A0 - 24 * T1 ^ 3 * T0 * V1 - T1 ^ 5 * A0 + 24 * T0 ^ 3 * T1 * V0 - 8 * T0 ^ 3 * T1 ^ 2 * A1 + 4 * T0 ^ 4 * T1 * A1 - 4 * T1 ^ 4 * T0 * A0 + 36 * T0 ^ 3 * T1 * V1) / (5 * T0 ^ 4 * T1 - 5 * T0 * T1 ^ 4 + 10 * T0 ^ 2 * T1 ^ 3 - 10 * T1 ^ 2 * T0 ^ 3 + T1 ^ 5 - T0 ^ 5)
    CoefA = 1 / 2 * (2 * T0 * T1 * A0 - 2 * T0 * T1 * A1 - 12 * M0 - T1 ^ 2 * A0 + 6 * T0 * V1 + 6 * T0 * V0 + T1 ^ 2 * A1 + T0 ^ 2 * A1 - T0 ^ 2 * A0 - 6 * T1 * V0 - 6 * T1 * V1 + 12 * M1) / (5 * T0 ^ 4 * T1 - 5 * T0 * T1 ^ 4 + 10 * T0 ^ 2 * T1 ^ 3 - 10 * T1 ^ 2 * T0 ^ 3 + T1 ^ 5 - T0 ^ 5)
    
    'Recherche de la position la plus pr|fffd|cise possible de la position initiale
    'Hop, on complique encore notre probl|fffd|me !
    'Recherche par Dichotomie
    TMin = T0
    TMax = T1
    bContinue = True
    t = TMin
    MinPosition = CoefA * t ^ 5 + CoefB * t ^ 4 + CoefC * t ^ 3 + CoefD * t ^ 2 + CoefE * t + CoefF
    t = TMax
    MaxPosition = CoefA * t ^ 5 + CoefB * t ^ 4 + CoefC * t ^ 3 + CoefD * t ^ 2 + CoefE * t + CoefF
    While bContinue
        FoundTime = (TMin + TMax) / 2
        t = FoundTime
        FoundPosition = CoefA * t ^ 5 + CoefB * t ^ 4 + CoefC * t ^ 3 + CoefD * t ^ 2 + CoefE * t + CoefF
        If MinPosition < MaxPosition Then
            If FoundPosition > PositionToMatch Then
                TMax = FoundTime
                MaxPosition = FoundPosition
            Else
                TMin = FoundTime
                MinPosition = FoundPosition
            End If
        Else
            If FoundPosition < PositionToMatch Then
                TMax = FoundTime
                MaxPosition = FoundPosition
            Else
                TMin = FoundTime
                MinPosition = FoundPosition
            End If
        End If
        If CStr(MinPosition) = CStr(PositionToMatch) Then
            FoundPosition = MinPosition
            FoundTime = TMin
            bContinue = False
        ElseIf CStr(MaxPosition) = CStr(PositionToMatch) Then
            FoundPosition = MaxPosition
            FoundTime = TMax
            bContinue = False
        ElseIf CStr(TMin) = CStr(TMax) Then
            FoundPosition = MinPosition
            FoundTime = TMin
            bContinue = False
        End If
        DoEvents
    Wend
    CalculateSpeedAcc5.Time = FoundTime
    t = FoundTime
    CalculateSpeedAcc5.Speed = 5 * CoefA * t ^ 4 + 4 * CoefB * t ^ 3 + 3 * CoefC * t ^ 2 + 2 * CoefD * t + CoefE
    CalculateSpeedAcc5.Acceleration = 20 * CoefA * t ^ 3 + 12 * CoefB * t ^ 2 + 6 * CoefC * t + 2 * CoefD
End Function


    ' Troisi|fffd|me (et dernier) essai : on utilise une fonction de degr|fffd| 11 !!!
    '
    ' Bon, |fffd|a marche pas du tout... on va quand m|fffd|me essayer de rendre l'acc|fffd|l|fffd|ration d|fffd|rivable
    ' Ordre 7 cette fois !!!
    
    ' Y'a rien |fffd| faire cette fois... l'ordre 7 c'est trop instable...
    ' On va rester |fffd| l'ordre 5 et puis c'est tout !!! Dommage

    ' =>>>> Echec total !!!

Public Function FindMiddleSpeed() As Variant
    'Recherche de la vitesse "milieu"
    
    Dim Speed As Variant
    Dim LastSpeed As Variant
    Dim Acceleration As Variant
    Dim LastAcceleration As Variant
    Dim Continue As Boolean
    Dim i As Long
    On Error GoTo ErrorInSpeed
    i = 0
    Continue = True
    Speed = (ReturnTablePosition(i + 2) - ReturnTablePosition(i + 1)) / (ReturnTableTime(i + 2) - ReturnTableTime(i + 1))
    LastSpeed = (ReturnTablePosition(i + 1) - ReturnTablePosition(i)) / (ReturnTableTime(i + 1) - ReturnTableTime(i))
    LastAcceleration = (Speed - LastSpeed) / (ReturnTableTime(i + 1) - ReturnTableTime(i))
    While Continue
        Speed = (ReturnTablePosition(i + 2) - ReturnTablePosition(i + 1)) / (ReturnTableTime(i + 2) - ReturnTableTime(i + 1))
        Acceleration = (Speed - LastSpeed) / (ReturnTableTime(i + 1) - ReturnTableTime(i))
        If Acceleration * LastAcceleration < 0 Then
            Continue = False
        Else
            i = i + 1
            LastSpeed = Speed
        End If
    Wend
    FindMiddleSpeed = (LastSpeed * Abs(Acceleration) + Speed * Abs(LastAcceleration)) / (Abs(LastAcceleration) + Abs(Acceleration))
    Exit Function
ErrorInSpeed:
    i = (UBound(ReturnTablePosition) + LBound(ReturnTablePosition) + 1) / 2
    FindMiddleSpeed = (ReturnTablePosition(i + 1) - ReturnTablePosition(i)) / (ReturnTableTime(i + 1) - ReturnTableTime(i))
End Function

Public Function CalculateZeroPositionUsingV2(Firstposition, LastPosition, SpeedExpected, FirstTime) As ReturnCalculateSpeedAcc
    CalculateZeroPositionUsingV2.Acceleration = 0
    CalculateZeroPositionUsingV2.Speed = SpeedExpected
    CalculateZeroPositionUsingV2.Time = FirstTime + (LastPosition - Firstposition) / SpeedExpected
End Function

Public Function FindMaxSpeed(Firstposition, LastPosition) As Variant
    Dim CalcSpeed As Variant
    FindMaxSpeed = 0
    For i = Firstposition To LastPosition - 1
        CalcSpeed = Abs((Results.Range(Range_Results_Position_Col & CStr(i + 1)).Value - Results.Range(Range_Results_Position_Col & CStr(i)).Value) / (Results.Range(Range_Results_Time_Col & CStr(i + 1)).Value - Results.Range(Range_Results_Time_Col & CStr(i)).Value))
        If CalcSpeed > FindMaxSpeed Then
            FindMaxSpeed = CalcSpeed
        End If
    Next
    FindMaxSpeed = Abs(SysVar.Range(Range_Max_Speed_Stylcam).Value * SysVar.Range(Range_Accurate_Speed_Stylcam).Value / (FindMaxSpeed * 1000 * 60 / 360 * SysVar.Range(Range_Reduction_Ratio).Value))
End Function
Attribute VB_Name = "ModConstants"
Public Const Pi = 3.14159265358979

Public Const Range_Last_Row = 65535

Public Const Directory_Separator = "\"

Public Const Profile_Extension = ".txt"
Public Const Size_of_Number_In_Profile_File = 12
Public Const Max_Digits_After_Dot = 5
Public Const Dot_Char = "."

Public Const Rattrapage_Temps = 1000 / 6

'Ratios...

Public Const Ratio_Time_FirstLast_Maxi = 1 / 4
Public Const Ratio_Time_Middle_Maxi = 1 / 2
Public Const Ratio_Time_Middle_Mini = 1 / 10
Public Const Ratio_Time_Middle_Calc = 400
Public Const Ratio_Speed_Maintain = 25 / 100

Public Const Ratio_Time_Init_FirstLast_Maxi = 1 / 3
Public Const Ratio_Time_Init_Middle_Maxi = 96 / 100
Public Const Ratio_Time_Init_Middle_Mini = 80 / 100
Public Const Ratio_Time_Init_Middle_Calc = 350
Public Const Ratio_Speed_Init_Maintain = 25 / 100

Public Const Ratio_Points_First_Comp_Eject = 3 / 8
Public Const Ratio_Points_Middle_Comp_Eject = 2 / 8
Public Const Ratio_Points_Last_Comp_Eject = 3 / 8

Public Const Ratio_Points_First_PreComp_Comp = 3 / 8
Public Const Ratio_Points_Middle_PreComp_Comp = 2 / 8
Public Const Ratio_Points_Last_PreComp_Comp = 3 / 8

Public Const Ratio_Points_First_Eject_Precomp = 1 / 8
Public Const Ratio_Points_Middle_Eject_Precomp = 6 / 8
Public Const Ratio_Points_Last_Eject_Precomp = 1 / 8

Public Const Ratio_Points_Before_DwellTime = 2 / 8
Public Const Ratio_Points_DwellTime = 4 / 8
Public Const Ratio_Points_After_DwellTime = 2 / 8
Attribute VB_Name = "ModDirectCam"
Public Function CreateTableDirectCam()
    Dim RowDifference As Long
    Dim NbPointsToFill As Long
    Dim TimeDifference As Double
    Dim TimeToFill As Double
    Dim PositionDifference As Double
    Dim DisplacementToFill As Double
    Dim i As Long
    TimeDifference = 0
    PositionDifference = 0
    RowDifference = Range_DirectCam_First_Row_To_Fill
    'Suppression des colonnes
    i = Range_DirectCam_First_Row_To_Fill
    While DirectCamProfile.Range(Range_DirectCam_Time_Col & CStr(i)).Text <> ""
        DirectCamProfile.Range(Range_DirectCam_Time_Col & CStr(i) & ":" & Range_DirectCam_Position_Col & CStr(i)).Delete
    Wend

    'DirectCamProfile.Range(Range_DirectCam_Time_Col & CStr(Range_DirectCam_First_Row_To_Fill) & ":" & Range_DirectCam_Position_Col & CStr(Range_Last_Row)).Delete
    ' Avant pr|fffd|compression
    NbPointsToFill = SysVar.Range(Range_Points_Profil_AvantPrecomp).Value
    TimeToFill = (DisplacementProfile.Range(Range_DisplacementProfile_Position_Start_Precomp).Value - 0) / SysVar.Range(Range_Degrees_For_1_Cycle).Value * 60 / SysVar.Range(Range_Accurate_Speed_Stylcam).Value * 1000
    DisplacementToFill = DisplacementProfile.Range(Range_DisplacementProfile_Position_Start_Precomp).Value - 0
    For i = 0 To NbPointsToFill - 1
        'Temps
        DirectCamProfile.Range(Range_DirectCam_Time_Col & CStr(i + RowDifference)).Value = TimeDifference + (i) / NbPointsToFill * TimeToFill
        'Position
        DirectCamProfile.Range(Range_DirectCam_Position_Col & CStr(i + RowDifference)).Value = PositionDifference + (i) / NbPointsToFill * DisplacementToFill
    Next
    RowDifference = RowDifference + NbPointsToFill
    PositionDifference = PositionDifference + DisplacementToFill
    TimeDifference = TimeDifference + TimeToFill
    'Pr|fffd|compression
    NbPointsToFill = SysVar.Range(Range_Points_Profil_Precomp).Value
    TimeToFill = (DisplacementProfile.Range(Range_DisplacementProfile_Position_Stop_Precomp).Value - DisplacementProfile.Range(Range_DisplacementProfile_Position_Start_Precomp).Value) / SysVar.Range(Range_Degrees_For_1_Cycle).Value * 60 / SysVar.Range(Range_Accurate_Speed_Stylcam).Value * 1000
    DisplacementToFill = DisplacementProfile.Range(Range_DisplacementProfile_Position_Stop_Precomp).Value - DisplacementProfile.Range(Range_DisplacementProfile_Position_Start_Precomp).Value
    For i = 0 To NbPointsToFill - 1
        'Temps
        DirectCamProfile.Range(Range_DirectCam_Time_Col & CStr(i + RowDifference)).Value = TimeDifference + (i) / NbPointsToFill * TimeToFill
        'Position
        DirectCamProfile.Range(Range_DirectCam_Position_Col & CStr(i + RowDifference)).Value = PositionDifference + (i) / NbPointsToFill * DisplacementToFill
    Next
    RowDifference = RowDifference + NbPointsToFill
    PositionDifference = PositionDifference + DisplacementToFill
    TimeDifference = TimeDifference + TimeToFill
    'Pr|fffd|compression - Compression
    NbPointsToFill = SysVar.Range(Range_Points_Profil_EntrePrecompComp).Value
    TimeToFill = (DisplacementProfile.Range(Range_DisplacementProfile_Position_Start_Comp).Value - DisplacementProfile.Range(Range_DisplacementProfile_Position_Stop_Precomp).Value) / SysVar.Range(Range_Degrees_For_1_Cycle).Value * 60 / SysVar.Range(Range_Accurate_Speed_Stylcam).Value * 1000
    DisplacementToFill = DisplacementProfile.Range(Range_DisplacementProfile_Position_Start_Comp).Value - DisplacementProfile.Range(Range_DisplacementProfile_Position_Stop_Precomp).Value
    For i = 0 To NbPointsToFill - 1
        'Temps
        DirectCamProfile.Range(Range_DirectCam_Time_Col & CStr(i + RowDifference)).Value = TimeDifference + (i) / NbPointsToFill * TimeToFill
        'Position
        DirectCamProfile.Range(Range_DirectCam_Position_Col & CStr(i + RowDifference)).Value = PositionDifference + (i) / NbPointsToFill * DisplacementToFill
    Next
    RowDifference = RowDifference + NbPointsToFill
    PositionDifference = PositionDifference + DisplacementToFill
    TimeDifference = TimeDifference + TimeToFill
    'Compression
    NbPointsToFill = SysVar.Range(Range_Points_Profil_Comp).Value
    TimeToFill = (DisplacementProfile.Range(Range_DisplacementProfile_Position_Stop_Comp).Value - DisplacementProfile.Range(Range_DisplacementProfile_Position_Start_Comp).Value) / SysVar.Range(Range_Degrees_For_1_Cycle).Value * 60 / SysVar.Range(Range_Accurate_Speed_Stylcam).Value * 1000
    DisplacementToFill = DisplacementProfile.Range(Range_DisplacementProfile_Position_Stop_Comp).Value - DisplacementProfile.Range(Range_DisplacementProfile_Position_Start_Comp).Value
    For i = 0 To NbPointsToFill - 1
        'Temps
        DirectCamProfile.Range(Range_DirectCam_Time_Col & CStr(i + RowDifference)).Value = TimeDifference + (i) / NbPointsToFill * TimeToFill
        'Position
        DirectCamProfile.Range(Range_DirectCam_Position_Col & CStr(i + RowDifference)).Value = PositionDifference + (i) / NbPointsToFill * DisplacementToFill
    Next
    RowDifference = RowDifference + NbPointsToFill
    PositionDifference = PositionDifference + DisplacementToFill
    TimeDifference = TimeDifference + TimeToFill
    'Compression-Ejection
    NbPointsToFill = SysVar.Range(Range_Points_Profil_EntreCompEjection).Value
    TimeToFill = (DisplacementProfile.Range(Range_DisplacementProfile_Position_Start_Ejection).Value - DisplacementProfile.Range(Range_DisplacementProfile_Position_Stop_Comp).Value) / SysVar.Range(Range_Degrees_For_1_Cycle).Value * 60 / SysVar.Range(Range_Accurate_Speed_Stylcam).Value * 1000
    DisplacementToFill = DisplacementProfile.Range(Range_DisplacementProfile_Position_Start_Ejection).Value - DisplacementProfile.Range(Range_DisplacementProfile_Position_Stop_Comp).Value
    For i = 0 To NbPointsToFill - 1
        'Temps
        DirectCamProfile.Range(Range_DirectCam_Time_Col & CStr(i + RowDifference)).Value = TimeDifference + (i) / NbPointsToFill * TimeToFill
        'Position
        DirectCamProfile.Range(Range_DirectCam_Position_Col & CStr(i + RowDifference)).Value = PositionDifference + (i) / NbPointsToFill * DisplacementToFill
    Next
    RowDifference = RowDifference + NbPointsToFill
    PositionDifference = PositionDifference + DisplacementToFill
    TimeDifference = TimeDifference + TimeToFill
    'Ejection
    NbPointsToFill = SysVar.Range(Range_Points_Profil_Ejection).Value
    TimeToFill = (DisplacementProfile.Range(Range_DisplacementProfile_Position_Stop_Ejection).Value - DisplacementProfile.Range(Range_DisplacementProfile_Position_Start_Ejection).Value) / SysVar.Range(Range_Degrees_For_1_Cycle).Value * 60 / SysVar.Range(Range_Accurate_Speed_Stylcam).Value * 1000
    DisplacementToFill = DisplacementProfile.Range(Range_DisplacementProfile_Position_Stop_Ejection).Value - DisplacementProfile.Range(Range_DisplacementProfile_Position_Start_Ejection).Value
    For i = 0 To NbPointsToFill - 1
        'Temps
        DirectCamProfile.Range(Range_DirectCam_Time_Col & CStr(i + RowDifference)).Value = TimeDifference + (i) / NbPointsToFill * TimeToFill
        'Position
        DirectCamProfile.Range(Range_DirectCam_Position_Col & CStr(i + RowDifference)).Value = PositionDifference + (i) / NbPointsToFill * DisplacementToFill
    Next
    RowDifference = RowDifference + NbPointsToFill
    PositionDifference = PositionDifference + DisplacementToFill
    TimeDifference = TimeDifference + TimeToFill
    'Apr|fffd|s Ejection
    NbPointsToFill = SysVar.Range(Range_Points_Profil_ApresEjection).Value
    TimeToFill = (SysVar.Range(Range_Degrees_For_1_Cycle).Value - DisplacementProfile.Range(Range_DisplacementProfile_Position_Stop_Ejection).Value) / SysVar.Range(Range_Degrees_For_1_Cycle).Value * 60 / SysVar.Range(Range_Accurate_Speed_Stylcam).Value * 1000
    DisplacementToFill = SysVar.Range(Range_Degrees_For_1_Cycle).Value - DisplacementProfile.Range(Range_DisplacementProfile_Position_Stop_Ejection).Value
    For i = 0 To NbPointsToFill - 1
        'Temps
        DirectCamProfile.Range(Range_DirectCam_Time_Col & CStr(i + RowDifference)).Value = TimeDifference + (i) / (NbPointsToFill - 1) * TimeToFill
        'Position
        DirectCamProfile.Range(Range_DirectCam_Position_Col & CStr(i + RowDifference)).Value = PositionDifference + (i) / (NbPointsToFill - 1) * DisplacementToFill
    Next
    RowDifference = RowDifference + NbPointsToFill
    PositionDifference = PositionDifference + DisplacementToFill
    TimeDifference = TimeDifference + TimeToFill
    Resize Range_Results_First_Row_To_Fill, RowDifference - 1
    DirectCamProfile.Range(Range_DirectCam_Time_Col & CStr(Range_DirectCam_First_Row_To_Fill) & ":" & Range_DirectCam_Position_Col & CStr(RowDifference)).NumberFormat = "0.0"
End Function

Private Function Resize(MinTable As Long, MaxTable As Long)
    'Redimensionnement des tableaux de r|fffd|sultat
    Dim i As Long, j As Long
    Dim MinValue As Long, MaxValue As Long
    Dim RealNumberOfValues As Long
    Dim NewValue As Variant
    For i = MinTable To MaxTable
        'Initialisations Moyennage
        DirectCamProfile.Range(Range_Results_Time_Col & CStr(i)).Value = DirectCamProfile.Range(Range_Results_Time_Col & CStr(i)).Value * SysVar.Range(Range_Accurate_Speed_Stylcam).Value / Rattrapage_Temps
    Next
End Function

Attribute VB_Name = "ModGlobalVar"
Public Filename As String
Public DirectCamFileName As String
Attribute VB_Name = "ModMachine"
Dim ActualPos As Long
Dim BeginGraph As Long
Dim EndGraph As Long

Public Function CreateTableMachineProfile()
    'Cr|fffd|ation de la table du profile de la machine
    ActualPos = Range_MachineProfile_BeginRow
    BeginGraph = ActualPos
    'Calcul des positions de la pr|fffd|compression
    CreateTablePrecomp
    'Calcul des positions de la pr|fffd|compression -> compression
    CreateTablePrecompToComp
    'Calcul des positions de la compression
    CreateTableComp
    'Calcul des positions de la compresssion -> |fffd|jection
    CreateTableCompToEjection
    'Calcul des positions de l'|fffd|jection
    CreatetableEjection
    EndGraph = ActualPos
    'Mise |fffd| jour de l'affichage des graphiques
    CreateGraphMachineProfile
End Function

Private Function CreateTablePrecomp()
    'Affichage des valeurs du tableau de pr|fffd|compression
    Dim i As Long
    Dim dTime As Double
    Dim dUpperPunch As Double
    Dim dLowerPunch As Double
    Dim dNewPos As Double
    Dim dXPos As Double
    For i = 0 To SysVar.Range(Range_NbPoints_Precomp).Value
        '***************
        'Vitesse normale
        '***************
        
        'Calcul du temps
        If i = 0 Then
            dTime = MachineProfileCaculus.Range(Range_NormalSpeed_Col & Range_Begin_Precomp).Value
        ElseIf i = SysVar.Range(Range_NbPoints_Precomp) Then
            dTime = MachineProfileCaculus.Range(Range_NormalSpeed_Col & Range_End_Precomp).Value
        Else
            dTime = (MachineProfileCaculus.Range(Range_NormalSpeed_Col & Range_PreComp_Time).Value) / SysVar.Range(Range_NbPoints_Precomp).Value * i + MachineProfileCaculus.Range(Range_NormalSpeed_Col & Range_Begin_Precomp).Value
        End If
        'Affichage du temps sur la feuille
        MachineProfile.Range(Range_MachineProfile_NormalTime_Col & (i + ActualPos)).Value = dTime
        On Error Resume Next
        MachineProfile.Range(Range_MachineProfile_NormalTime_Col & (i + ActualPos)).NumberFormat = "0.0"
        Err.Clear
        On Error GoTo 0
        'Centrage du temps
        dTime = dTime - ((MachineProfileCaculus.Range(Range_NormalSpeed_Col & Range_PreComp_Time)) / 2 + MachineProfileCaculus.Range(Range_NormalSpeed_Col & Range_Begin_Precomp).Value)
        'Position Poin|fffd|on
        dXPos = XPosition(dTime, PressVar.Range(Range_Normal_Speed).Value, PressVar.Range(Range_Diameter_PunchAxis).Value)
        If Abs(dXPos) <= PressVar.Range(Range_Diameter_Dwell).Value / 2 Then
            dUpperPunch = PressVar.Range(Range_EntreFer).Value / 2 - PressVar.Range(Range_Height_FillIn).Value / 2 + PressVar.Range(Range_Height_Comp).Value - PressVar.Range(Range_Height_Precomp).Value
            dLowerPunch = -PressVar.Range(Range_EntreFer).Value / 2 - PressVar.Range(Range_Height_FillIn).Value / 2 - PressVar.Range(Range_Height_Comp).Value + PressVar.Range(Range_Height_Precomp).Value
        Else
            dNewPos = (Sqr(1 - ((Abs(dXPos) - PressVar.Range(Range_Diameter_Dwell).Value / 2) / (PressVar.Range(Range_Diameter_Head_Shape).Value / 2 + PressVar.Range(Range_Diam_Precomp).Value / 2)) ^ 2) - 1) * (PressVar.Range(Range_Diameter_Head_Shape).Value / 2 + PressVar.Range(Range_Diam_Precomp).Value / 2) + PressVar.Range(Range_Height_Precomp).Value
            dUpperPunch = PressVar.Range(Range_EntreFer).Value / 2 - PressVar.Range(Range_Height_FillIn).Value / 2 + PressVar.Range(Range_Height_Comp).Value - dNewPos
            dLowerPunch = -PressVar.Range(Range_EntreFer).Value / 2 - PressVar.Range(Range_Height_FillIn).Value / 2 - PressVar.Range(Range_Height_Comp).Value + dNewPos
        End If
        
        'Affichage Position Poin|fffd|on Haut
        MachineProfile.Range(Range_MachineProfile_UpperPunchNormal_Col & (i + ActualPos)).Value = dUpperPunch
        On Error Resume Next
        MachineProfile.Range(Range_MachineProfile_UpperPunchNormal_Col & (i + ActualPos)).NumberFormat = "0.000"
        Err.Clear
        On Error GoTo 0
        'Affichage Position Poin|fffd|on Bas
        On Error Resume Next
        MachineProfile.Range(Range_MachineProfile_LowerPunchNormal_Col & (i + ActualPos)).Value = dLowerPunch
        MachineProfile.Range(Range_MachineProfile_LowerPunchNormal_Col & (i + ActualPos)).NumberFormat = "0.000"
        Err.Clear
        On Error GoTo 0
        
        '************
        'Vitesse Maxi
        '************
        
        'Calcul du temps
        If i = 0 Then
            dTime = MachineProfileCaculus.Range(Range_MaxSpeed_Col & Range_Begin_Precomp).Value
        ElseIf i = SysVar.Range(Range_NbPoints_Precomp) Then
            dTime = MachineProfileCaculus.Range(Range_MaxSpeed_Col & Range_End_Precomp).Value
        Else
            dTime = (MachineProfileCaculus.Range(Range_MaxSpeed_Col & Range_PreComp_Time).Value) / SysVar.Range(Range_NbPoints_Precomp).Value * i + MachineProfileCaculus.Range(Range_MaxSpeed_Col & Range_Begin_Precomp).Value
        End If
        'Affichage du temps sur la feuille
        MachineProfile.Range(Range_MachineProfile_MaxTime_Col & (i + ActualPos)).Value = dTime
        On Error Resume Next
        MachineProfile.Range(Range_MachineProfile_MaxTime_Col & (i + ActualPos)).NumberFormat = "0.0"
        Err.Clear
        On Error GoTo 0
        
        'Centrage du temps
        dTime = dTime - ((MachineProfileCaculus.Range(Range_MaxSpeed_Col & Range_PreComp_Time)) / 2 + MachineProfileCaculus.Range(Range_MaxSpeed_Col & Range_Begin_Precomp).Value)
        'Position Poin|fffd|on
        dXPos = XPosition(dTime, PressVar.Range(Range_Max_Speed).Value, PressVar.Range(Range_Diameter_PunchAxis).Value)
        If Abs(dXPos) <= PressVar.Range(Range_Diameter_Dwell).Value / 2 Then
            dUpperPunch = PressVar.Range(Range_EntreFer).Value / 2 - PressVar.Range(Range_Height_FillIn).Value / 2 + PressVar.Range(Range_Height_Comp).Value - PressVar.Range(Range_Height_Precomp).Value
            dLowerPunch = -PressVar.Range(Range_EntreFer).Value / 2 - PressVar.Range(Range_Height_FillIn).Value / 2 - PressVar.Range(Range_Height_Comp).Value + PressVar.Range(Range_Height_Precomp).Value
        Else
            dNewPos = (Sqr(1 - ((Abs(dXPos) - PressVar.Range(Range_Diameter_Dwell).Value / 2) / (PressVar.Range(Range_Diameter_Head_Shape).Value / 2 + PressVar.Range(Range_Diam_Precomp).Value / 2)) ^ 2) - 1) * (PressVar.Range(Range_Diameter_Head_Shape).Value / 2 + PressVar.Range(Range_Diam_Precomp).Value / 2) + PressVar.Range(Range_Height_Precomp).Value
            dUpperPunch = PressVar.Range(Range_EntreFer).Value / 2 - PressVar.Range(Range_Height_FillIn).Value / 2 + PressVar.Range(Range_Height_Comp).Value - dNewPos
            dLowerPunch = -PressVar.Range(Range_EntreFer).Value / 2 - PressVar.Range(Range_Height_FillIn).Value / 2 - PressVar.Range(Range_Height_Comp).Value + dNewPos
        End If
        
        'Affichage Position Poin|fffd|on Haut
        MachineProfile.Range(Range_MachineProfile_UpperPunchMax_Col & (i + ActualPos)).Value = dUpperPunch
        On Error Resume Next
        MachineProfile.Range(Range_MachineProfile_UpperPunchMax_Col & (i + ActualPos)).NumberFormat = "0.000"
        Err.Clear
        On Error GoTo 0
        'Affichage Position Poin|fffd|on Bas
        MachineProfile.Range(Range_MachineProfile_LowerPunchMax_Col & (i + ActualPos)).Value = dLowerPunch
        On Error Resume Next
        MachineProfile.Range(Range_MachineProfile_LowerPunchMax_Col & (i + ActualPos)).NumberFormat = "0.000"
        Err.Clear
        On Error GoTo 0
    Next
    ActualPos = ActualPos + SysVar.Range(Range_NbPoints_Precomp) + 1
    
End Function

Private Function CreateTablePrecompToComp()
    'Affichage des valeurs du tableau entre la pr|fffd|compression et la compression
    Dim i As Long
    Dim dTime As Double
    Dim dUpperPunch As Double
    Dim dLowerPunch As Double
    Dim dNewPos As Double
    Dim dXPos As Double
    For i = 0 To SysVar.Range(Range_NbPoints_Precomp_Comp).Value
        '***************
        'Vitesse normale
        '***************
        
        'Calcul du temps
        If i = 0 Then
            dTime = MachineProfileCaculus.Range(Range_NormalSpeed_Col & Range_End_Precomp).Value
        ElseIf i = SysVar.Range(Range_NbPoints_Precomp_Comp) Then
            dTime = MachineProfileCaculus.Range(Range_NormalSpeed_Col & Range_Begin_Comp).Value
        Else
            dTime = (MachineProfileCaculus.Range(Range_NormalSpeed_Col & Range_Begin_Comp).Value - MachineProfileCaculus.Range(Range_NormalSpeed_Col & Range_End_Precomp).Value) / SysVar.Range(Range_NbPoints_Precomp_Comp).Value * i + MachineProfileCaculus.Range(Range_NormalSpeed_Col & Range_End_Precomp).Value
        End If
        'Affichage du temps sur la feuille
        MachineProfile.Range(Range_MachineProfile_NormalTime_Col & (i + ActualPos)).Value = dTime
        On Error Resume Next
        MachineProfile.Range(Range_MachineProfile_NormalTime_Col & (i + ActualPos)).NumberFormat = "0.0"
        Err.Clear
        On Error GoTo 0
        'Position Poin|fffd|on
        dUpperPunch = PressVar.Range(Range_EntreFer).Value / 2 - PressVar.Range(Range_Height_FillIn).Value / 2 + PressVar.Range(Range_Height_Comp).Value
        dLowerPunch = -PressVar.Range(Range_EntreFer).Value / 2 - PressVar.Range(Range_Height_FillIn).Value / 2 - PressVar.Range(Range_Height_Comp).Value
        'Affichage Position Poin|fffd|on Haut
        MachineProfile.Range(Range_MachineProfile_UpperPunchNormal_Col & (i + ActualPos)).Value = dUpperPunch
        On Error Resume Next
        MachineProfile.Range(Range_MachineProfile_UpperPunchNormal_Col & (i + ActualPos)).NumberFormat = "0.000"
        Err.Clear
        On Error GoTo 0
        'Affichage Position Poin|fffd|on Bas
        MachineProfile.Range(Range_MachineProfile_LowerPunchNormal_Col & (i + ActualPos)).Value = dLowerPunch
        On Error Resume Next
        MachineProfile.Range(Range_MachineProfile_LowerPunchNormal_Col & (i + ActualPos)).NumberFormat = "0.000"
        Err.Clear
        On Error GoTo 0

        
        '************
        'Vitesse Maxi
        '************
        
        'Calcul du temps
        If i = 0 Then
            dTime = MachineProfileCaculus.Range(Range_MaxSpeed_Col & Range_End_Precomp).Value
        ElseIf i = SysVar.Range(Range_NbPoints_Precomp_Comp) Then
            dTime = MachineProfileCaculus.Range(Range_MaxSpeed_Col & Range_Begin_Comp).Value
        Else
            dTime = (MachineProfileCaculus.Range(Range_MaxSpeed_Col & Range_Begin_Comp).Value - MachineProfileCaculus.Range(Range_MaxSpeed_Col & Range_End_Precomp).Value) / SysVar.Range(Range_NbPoints_Precomp_Comp).Value * i + MachineProfileCaculus.Range(Range_MaxSpeed_Col & Range_End_Precomp).Value
        End If
        'Affichage du temps sur la feuille
        MachineProfile.Range(Range_MachineProfile_MaxTime_Col & (i + ActualPos)).Value = dTime
        On Error Resume Next
        MachineProfile.Range(Range_MachineProfile_MaxTime_Col & (i + ActualPos)).NumberFormat = "0.0"
        Err.Clear
        On Error GoTo 0
        'Position Poin|fffd|on
        dUpperPunch = PressVar.Range(Range_EntreFer).Value / 2 - PressVar.Range(Range_Height_FillIn).Value / 2 + PressVar.Range(Range_Height_Comp).Value
        dLowerPunch = -PressVar.Range(Range_EntreFer).Value / 2 - PressVar.Range(Range_Height_FillIn).Value / 2 - PressVar.Range(Range_Height_Comp).Value
        'Affichage Position Poin|fffd|on Haut
        MachineProfile.Range(Range_MachineProfile_UpperPunchMax_Col & (i + ActualPos)).Value = dUpperPunch
        On Error Resume Next
        MachineProfile.Range(Range_MachineProfile_UpperPunchMax_Col & (i + ActualPos)).NumberFormat = "0.000"
        Err.Clear
        On Error GoTo 0
        'Affichage Position Poin|fffd|on Bas
        MachineProfile.Range(Range_MachineProfile_LowerPunchMax_Col & (i + ActualPos)).Value = dLowerPunch
        On Error Resume Next
        MachineProfile.Range(Range_MachineProfile_LowerPunchMax_Col & (i + ActualPos)).NumberFormat = "0.000"
        Err.Clear
        On Error GoTo 0
    Next
    ActualPos = ActualPos + SysVar.Range(Range_NbPoints_Precomp_Comp) + 1

End Function

Private Function CreateTableComp()
    'Affichage des valeurs du tableau de compression
    Dim i As Long
    Dim dTime As Double
    Dim dUpperPunch As Double
    Dim dLowerPunch As Double
    Dim dNewPos As Double
    Dim dXPos As Double
    For i = 0 To SysVar.Range(Range_NbPoints_Comp).Value
        '***************
        'Vitesse normale
        '***************
        
        'Calcul du temps
        If i = 0 Then
            dTime = MachineProfileCaculus.Range(Range_NormalSpeed_Col & Range_Begin_Comp).Value
        ElseIf i = SysVar.Range(Range_NbPoints_Comp) Then
            dTime = MachineProfileCaculus.Range(Range_NormalSpeed_Col & Range_End_Comp).Value
        Else
            dTime = (MachineProfileCaculus.Range(Range_NormalSpeed_Col & Range_Comp_Time)) / SysVar.Range(Range_NbPoints_Comp).Value * i + MachineProfileCaculus.Range(Range_NormalSpeed_Col & Range_Begin_Comp).Value
        End If
        'Affichage du temps sur la feuille
        MachineProfile.Range(Range_MachineProfile_NormalTime_Col & (i + ActualPos)).Value = dTime
        On Error Resume Next
        MachineProfile.Range(Range_MachineProfile_NormalTime_Col & (i + ActualPos)).NumberFormat = "0.0"
        Err.Clear
        On Error GoTo 0
        'Centrage du temps
        dTime = dTime - ((MachineProfileCaculus.Range(Range_NormalSpeed_Col & Range_Comp_Time)) / 2 + MachineProfileCaculus.Range(Range_NormalSpeed_Col & Range_Begin_Comp).Value)
        'Position Poin|fffd|on
        dXPos = XPosition(dTime, PressVar.Range(Range_Normal_Speed).Value, PressVar.Range(Range_Diameter_PunchAxis).Value)
        If Abs(dXPos) <= PressVar.Range(Range_Diameter_Dwell).Value / 2 Then
            dUpperPunch = PressVar.Range(Range_EntreFer).Value / 2 - PressVar.Range(Range_Height_FillIn).Value / 2
            dLowerPunch = -PressVar.Range(Range_EntreFer).Value / 2 - PressVar.Range(Range_Height_FillIn).Value / 2
        Else
            dNewPos = (Sqr(1 - ((Abs(dXPos) - PressVar.Range(Range_Diameter_Dwell).Value / 2) / (PressVar.Range(Range_Diameter_Head_Shape).Value / 2 + PressVar.Range(Range_Diam_Comp).Value / 2)) ^ 2) - 1) * (PressVar.Range(Range_Diameter_Head_Shape).Value / 2 + PressVar.Range(Range_Diam_Comp).Value / 2) + PressVar.Range(Range_Height_Comp).Value
            dUpperPunch = PressVar.Range(Range_EntreFer).Value / 2 - PressVar.Range(Range_Height_FillIn).Value / 2 + PressVar.Range(Range_Height_Comp).Value - dNewPos
            dLowerPunch = -PressVar.Range(Range_EntreFer).Value / 2 - PressVar.Range(Range_Height_FillIn).Value / 2 - PressVar.Range(Range_Height_Comp).Value + dNewPos
        End If
        
        'Affichage Position Poin|fffd|on Haut
        MachineProfile.Range(Range_MachineProfile_UpperPunchNormal_Col & (i + ActualPos)).Value = dUpperPunch
        On Error Resume Next
        MachineProfile.Range(Range_MachineProfile_UpperPunchNormal_Col & (i + ActualPos)).NumberFormat = "0.000"
        Err.Clear
        On Error GoTo 0
        'Affichage Position Poin|fffd|on Bas
        MachineProfile.Range(Range_MachineProfile_LowerPunchNormal_Col & (i + ActualPos)).Value = dLowerPunch
        On Error Resume Next
        MachineProfile.Range(Range_MachineProfile_LowerPunchNormal_Col & (i + ActualPos)).NumberFormat = "0.000"
        Err.Clear
        On Error GoTo 0
        
        '************
        'Vitesse Maxi
        '************
        
        'Calcul du temps
        If i = 0 Then
            dTime = MachineProfileCaculus.Range(Range_MaxSpeed_Col & Range_Begin_Comp).Value
        ElseIf i = SysVar.Range(Range_NbPoints_Comp) Then
            dTime = MachineProfileCaculus.Range(Range_MaxSpeed_Col & Range_End_Comp).Value
        Else
            dTime = (MachineProfileCaculus.Range(Range_MaxSpeed_Col & Range_Comp_Time)) / SysVar.Range(Range_NbPoints_Comp).Value * i + MachineProfileCaculus.Range(Range_MaxSpeed_Col & Range_Begin_Comp).Value
        End If
        'Affichage du temps sur la feuille
        MachineProfile.Range(Range_MachineProfile_MaxTime_Col & (i + ActualPos)).Value = dTime
        On Error Resume Next
        MachineProfile.Range(Range_MachineProfile_MaxTime_Col & (i + ActualPos)).NumberFormat = "0.0"
        Err.Clear
        On Error GoTo 0
        'Centrage du temps
        dTime = dTime - ((MachineProfileCaculus.Range(Range_MaxSpeed_Col & Range_Comp_Time)) / 2 + MachineProfileCaculus.Range(Range_MaxSpeed_Col & Range_Begin_Comp).Value)
        'Position Poin|fffd|on
        dXPos = XPosition(dTime, PressVar.Range(Range_Max_Speed).Value, PressVar.Range(Range_Diameter_PunchAxis).Value)
        If Abs(dXPos) <= PressVar.Range(Range_Diameter_Dwell).Value / 2 Then
            dUpperPunch = PressVar.Range(Range_EntreFer).Value / 2 - PressVar.Range(Range_Height_FillIn).Value / 2
            dLowerPunch = -PressVar.Range(Range_EntreFer).Value / 2 - PressVar.Range(Range_Height_FillIn).Value / 2
        Else
            dNewPos = (Sqr(1 - ((Abs(dXPos) - PressVar.Range(Range_Diameter_Dwell).Value / 2) / (PressVar.Range(Range_Diameter_Head_Shape).Value / 2 + PressVar.Range(Range_Diam_Comp).Value / 2)) ^ 2) - 1) * (PressVar.Range(Range_Diameter_Head_Shape).Value / 2 + PressVar.Range(Range_Diam_Comp).Value / 2) + PressVar.Range(Range_Height_Comp).Value
            dUpperPunch = PressVar.Range(Range_EntreFer).Value / 2 - PressVar.Range(Range_Height_FillIn).Value / 2 + PressVar.Range(Range_Height_Comp).Value - dNewPos
            dLowerPunch = -PressVar.Range(Range_EntreFer).Value / 2 - PressVar.Range(Range_Height_FillIn).Value / 2 - PressVar.Range(Range_Height_Comp).Value + dNewPos
        End If
        
        'Affichage Position Poin|fffd|on Haut
        MachineProfile.Range(Range_MachineProfile_UpperPunchMax_Col & (i + ActualPos)).Value = dUpperPunch
        On Error Resume Next
        MachineProfile.Range(Range_MachineProfile_UpperPunchMax_Col & (i + ActualPos)).NumberFormat = "0.000"
        Err.Clear
        On Error GoTo 0
        'Affichage Position Poin|fffd|on Bas
        MachineProfile.Range(Range_MachineProfile_LowerPunchMax_Col & (i + ActualPos)).Value = dLowerPunch
        On Error Resume Next
        MachineProfile.Range(Range_MachineProfile_LowerPunchMax_Col & (i + ActualPos)).NumberFormat = "0.000"
        Err.Clear
        On Error GoTo 0
    Next
    ActualPos = ActualPos + SysVar.Range(Range_NbPoints_Comp) + 1

End Function

Private Function CreateTableCompToEjection()
    'Affichage des valeurs du tableau entre la pr|fffd|compression et la compression
    Dim i As Long
    Dim dTime As Double
    Dim dUpperPunch As Double
    Dim dLowerPunch As Double
    Dim dNewPos As Double
    Dim dXPos As Double
    For i = 0 To SysVar.Range(Range_NbPoints_Comp_BeginEjection).Value
        '***************
        'Vitesse normale
        '***************
        
        'Calcul du temps
        If i = 0 Then
            dTime = MachineProfileCaculus.Range(Range_NormalSpeed_Col & Range_End_Comp).Value
        ElseIf i = SysVar.Range(Range_NbPoints_Comp_BeginEjection) Then
            dTime = MachineProfileCaculus.Range(Range_NormalSpeed_Col & Range_Begin_Ejection).Value
        Else
            dTime = (MachineProfileCaculus.Range(Range_NormalSpeed_Col & Range_Begin_Ejection).Value - MachineProfileCaculus.Range(Range_NormalSpeed_Col & Range_End_Comp).Value) / SysVar.Range(Range_NbPoints_Comp_BeginEjection).Value * i + MachineProfileCaculus.Range(Range_NormalSpeed_Col & Range_End_Comp).Value
        End If
        'Affichage du temps sur la feuille
        MachineProfile.Range(Range_MachineProfile_NormalTime_Col & (i + ActualPos)).Value = dTime
        On Error Resume Next
        MachineProfile.Range(Range_MachineProfile_NormalTime_Col & (i + ActualPos)).NumberFormat = "0.0"
        Err.Clear
        On Error GoTo 0
        'Position Poin|fffd|ons
        dLowerPunch = -PressVar.Range(Range_EntreFer).Value / 2 - PressVar.Range(Range_Height_FillIn).Value / 2 - PressVar.Range(Range_Height_Comp).Value
        'Affichage Position Poin|fffd|on Bas
        MachineProfile.Range(Range_MachineProfile_LowerPunchNormal_Col & (i + ActualPos)).Value = dLowerPunch
        On Error Resume Next
        MachineProfile.Range(Range_MachineProfile_LowerPunchNormal_Col & (i + ActualPos)).NumberFormat = "0.000"
        Err.Clear
        On Error GoTo 0
        
        '************
        'Vitesse Maxi
        '************
        
        'Calcul du temps
        If i = 0 Then
            dTime = MachineProfileCaculus.Range(Range_MaxSpeed_Col & Range_End_Comp).Value
        ElseIf i = SysVar.Range(Range_NbPoints_Comp_BeginEjection) Then
            dTime = MachineProfileCaculus.Range(Range_MaxSpeed_Col & Range_Begin_Ejection).Value
        Else
            dTime = (MachineProfileCaculus.Range(Range_MaxSpeed_Col & Range_Begin_Ejection).Value - MachineProfileCaculus.Range(Range_MaxSpeed_Col & Range_End_Comp).Value) / SysVar.Range(Range_NbPoints_Comp_BeginEjection).Value * i + MachineProfileCaculus.Range(Range_MaxSpeed_Col & Range_End_Comp).Value
        End If
        'Affichage du temps sur la feuille
        MachineProfile.Range(Range_MachineProfile_MaxTime_Col & (i + ActualPos)).Value = dTime
        On Error Resume Next
        MachineProfile.Range(Range_MachineProfile_MaxTime_Col & (i + ActualPos)).NumberFormat = "0.0"
        Err.Clear
        On Error GoTo 0
        'Position Poin|fffd|on
        dLowerPunch = -PressVar.Range(Range_EntreFer).Value / 2 - PressVar.Range(Range_Height_FillIn).Value / 2 - PressVar.Range(Range_Height_Comp).Value
        'Affichage Position Poin|fffd|on Bas
        MachineProfile.Range(Range_MachineProfile_LowerPunchMax_Col & (i + ActualPos)).Value = dLowerPunch
        On Error Resume Next
        MachineProfile.Range(Range_MachineProfile_LowerPunchMax_Col & (i + ActualPos)).NumberFormat = "0.000"
        Err.Clear
        On Error GoTo 0
    Next
    ActualPos = ActualPos + SysVar.Range(Range_NbPoints_Comp_BeginEjection) + 1
End Function

Private Function CreatetableEjection()
    'Affichage des valeurs du tableau entre la pr|fffd|compression et la compression
    Dim i As Long
    Dim dTime As Double
    Dim dUpperPunch As Double
    Dim dLowerPunch As Double
    Dim dNewPos As Double
    Dim dXPos As Double
    For i = 0 To SysVar.Range(Range_NbPoints_Ejection).Value
        '***************
        'Vitesse normale
        '***************
        
        'Calcul du temps
        If i = 0 Then
            dTime = MachineProfileCaculus.Range(Range_NormalSpeed_Col & Range_Begin_Ejection).Value
        ElseIf i = SysVar.Range(Range_NbPoints_Ejection) Then
            dTime = MachineProfileCaculus.Range(Range_NormalSpeed_Col & Range_End_Ejection).Value
        Else
            dTime = (MachineProfileCaculus.Range(Range_NormalSpeed_Col & Range_Ejection_Time).Value) / SysVar.Range(Range_NbPoints_Ejection).Value * i + MachineProfileCaculus.Range(Range_NormalSpeed_Col & Range_Begin_Ejection).Value
        End If
        'Affichage du temps sur la feuille
        MachineProfile.Range(Range_MachineProfile_NormalTime_Col & (i + ActualPos)).Value = dTime
        On Error Resume Next
        MachineProfile.Range(Range_MachineProfile_NormalTime_Col & (i + ActualPos)).NumberFormat = "0.0"
        Err.Clear
        On Error GoTo 0
        'Position Poin|fffd|on
        dLowerPunch = (-PressVar.Range(Range_EntreFer).Value / 2 - PressVar.Range(Range_Height_FillIn).Value / 2 - PressVar.Range(Range_Height_Comp).Value) * (SysVar.Range(Range_NbPoints_Ejection).Value - i) / SysVar.Range(Range_NbPoints_Ejection).Value
        'Affichage Position Poin|fffd|on Bas
        MachineProfile.Range(Range_MachineProfile_LowerPunchNormal_Col & (i + ActualPos)).Value = dLowerPunch
        On Error Resume Next
        MachineProfile.Range(Range_MachineProfile_LowerPunchNormal_Col & (i + ActualPos)).NumberFormat = "0.000"
        Err.Clear
        On Error GoTo 0
        
        '************
        'Vitesse Maxi
        '************
        
        'Calcul du temps
        If i = 0 Then
            dTime = MachineProfileCaculus.Range(Range_MaxSpeed_Col & Range_Begin_Ejection).Value
        ElseIf i = SysVar.Range(Range_NbPoints_Ejection) Then
            dTime = MachineProfileCaculus.Range(Range_MaxSpeed_Col & Range_End_Ejection).Value
        Else
            dTime = (MachineProfileCaculus.Range(Range_MaxSpeed_Col & Range_Ejection_Time).Value) / SysVar.Range(Range_NbPoints_Ejection).Value * i + MachineProfileCaculus.Range(Range_MaxSpeed_Col & Range_Begin_Ejection).Value
        End If
        'Affichage du temps sur la feuille
        MachineProfile.Range(Range_MachineProfile_MaxTime_Col & (i + ActualPos)).Value = dTime
        On Error Resume Next
        MachineProfile.Range(Range_MachineProfile_MaxTime_Col & (i + ActualPos)).NumberFormat = "0.0"
        Err.Clear
        On Error GoTo 0
        'Position Poin|fffd|on
        dLowerPunch = (-PressVar.Range(Range_EntreFer).Value / 2 - PressVar.Range(Range_Height_FillIn).Value / 2 - PressVar.Range(Range_Height_Comp).Value) * (SysVar.Range(Range_NbPoints_Ejection).Value - i) / SysVar.Range(Range_NbPoints_Ejection).Value
        'Affichage Position Poin|fffd|on Bas
        MachineProfile.Range(Range_MachineProfile_LowerPunchMax_Col & (i + ActualPos)).Value = dLowerPunch
        On Error Resume Next
        MachineProfile.Range(Range_MachineProfile_LowerPunchMax_Col & (i + ActualPos)).NumberFormat = "0.000"
        Err.Clear
        On Error GoTo 0
    Next
    ActualPos = ActualPos + SysVar.Range(Range_NbPoints_Ejection) + 1
End Function

Private Function XPosition(dTime As Double, dSpeed As Double, dDiameter As Double) As Double
    'Renvoie la position "X(t)"
    'dTime : en ms
    'dSpeed : en tr/min
    'dDiameter : en mm
    XPosition = dTime * dSpeed / 60 * dDiameter * Pi / 1000
End Function


Public Function CreateGraphMachineProfile()
    'Graphique des positions |fffd| vitesse normale
    MachineProfile.ChartObjects.Item(1).Activate
    ActiveChart.SeriesCollection(1).Values = "='" & MachineProfile.Name & "'!R" & BeginGraph & "C" & Colonne_S_To_L(Range_MachineProfile_UpperPunchNormal_Col) & ":R" & (EndGraph - 1) & "C" & Colonne_S_To_L(Range_MachineProfile_UpperPunchNormal_Col)
    ActiveChart.SeriesCollection(1).XValues = "='" & MachineProfile.Name & "'!R" & BeginGraph & "C" & Colonne_S_To_L(Range_MachineProfile_NormalTime_Col) & ":R" & (EndGraph - 1) & "C" & Colonne_S_To_L(Range_MachineProfile_NormalTime_Col)
    ActiveChart.SeriesCollection(1).Name = "=""Poin|fffd|on haut"""
    ActiveChart.SeriesCollection(2).Values = "='" & MachineProfile.Name & "'!R" & BeginGraph & "C" & Colonne_S_To_L(Range_MachineProfile_LowerPunchNormal_Col) & ":R" & (EndGraph - 1) & "C" & Colonne_S_To_L(Range_MachineProfile_LowerPunchNormal_Col)
    ActiveChart.SeriesCollection(2).XValues = "='" & MachineProfile.Name & "'!R" & BeginGraph & "C" & Colonne_S_To_L(Range_MachineProfile_NormalTime_Col) & ":R" & (EndGraph - 1) & "C" & Colonne_S_To_L(Range_MachineProfile_NormalTime_Col)
    ActiveChart.SeriesCollection(2).Name = "=""Poin|fffd|on bas"""
    'Graphique des positions |fffd| vitesse maxi
    MachineProfile.ChartObjects.Item(2).Activate
    ActiveChart.SeriesCollection(1).Values = "='" & MachineProfile.Name & "'!R" & BeginGraph & "C" & Colonne_S_To_L(Range_MachineProfile_UpperPunchMax_Col) & ":R" & (EndGraph - 1) & "C" & Colonne_S_To_L(Range_MachineProfile_UpperPunchMax_Col)
    ActiveChart.SeriesCollection(1).XValues = "='" & MachineProfile.Name & "'!R" & BeginGraph & "C" & Colonne_S_To_L(Range_MachineProfile_MaxTime_Col) & ":R" & (EndGraph - 1) & "C" & Colonne_S_To_L(Range_MachineProfile_MaxTime_Col)
    ActiveChart.SeriesCollection(1).Name = "=""Poin|fffd|on haut"""
    ActiveChart.SeriesCollection(2).Values = "='" & MachineProfile.Name & "'!R" & BeginGraph & "C" & Colonne_S_To_L(Range_MachineProfile_LowerPunchMax_Col) & ":R" & (EndGraph - 1) & "C" & Colonne_S_To_L(Range_MachineProfile_LowerPunchMax_Col)
    ActiveChart.SeriesCollection(2).XValues = "='" & MachineProfile.Name & "'!R" & BeginGraph & "C" & Colonne_S_To_L(Range_MachineProfile_MaxTime_Col) & ":R" & (EndGraph - 1) & "C" & Colonne_S_To_L(Range_MachineProfile_MaxTime_Col)
    ActiveChart.SeriesCollection(2).Name = "=""Poin|fffd|on bas"""
End Function

Attribute VB_Name = "ModPolynomial"
Public Type ReturnCoeffs
    a As Variant
    b As Variant
    c As Variant
    d As Variant
    e As Variant
    f As Variant
    g As Variant
    h As Variant
    i As Variant
    j As Variant
    k As Variant
    l As Variant
End Type

Public Function Ordre5(M0 As Variant, M1 As Variant, V0 As Variant, V1 As Variant, A0 As Variant, A1 As Variant, T0 As Variant, T1 As Variant) As ReturnCoeffs

    Ordre5.a = 1 / 2 * (2 * T0 * T1 * A0 - 2 * T0 * T1 * A1 - 12 * M0 - T1 ^ 2 * A0 + 6 * T0 * V1 + 6 * T0 * V0 + T1 ^ 2 * A1 + T0 ^ 2 * A1 - T0 ^ 2 * A0 - 6 * T1 * V0 - 6 * T1 * V1 + 12 * M1) / (5 * T0 ^ 4 * T1 - 5 * T0 * T1 ^ 4 + 10 * T0 ^ 2 * T1 ^ 3 - 10 * T1 ^ 2 * T0 ^ 3 + T1 ^ 5 - T0 ^ 5)
    Ordre5.b = -1 / 2 * (-3 * T1 ^ 3 * A0 + 2 * T1 ^ 3 * A1 - 14 * T1 ^ 2 * V1 + 4 * T1 ^ 2 * T0 * A0 - 16 * T1 ^ 2 * V0 - T1 ^ 2 * T0 * A1 + T1 * T0 ^ 2 * A0 - 2 * T1 * T0 * V1 - 30 * T1 * M0 + 30 * T1 * M1 + 2 * T1 * T0 * V0 - 4 * T1 * T0 ^ 2 * A1 + 3 * T0 ^ 3 * A1 + 14 * T0 ^ 2 * V0 + 30 * T0 * M1 - 2 * T0 ^ 3 * A0 + 16 * T0 ^ 2 * V1 - 30 * T0 * M0) / (5 * T0 ^ 4 * T1 - 5 * T0 * T1 ^ 4 + 10 * T0 ^ 2 * T1 ^ 3 - 10 * T1 ^ 2 * T0 ^ 3 + T1 ^ 5 - T0 ^ 5)
    Ordre5.c = 1 / 2 * (-3 * T1 ^ 4 * A0 + T1 ^ 4 * A1 + 4 * T1 ^ 3 * T0 * A1 - 12 * T1 ^ 3 * V0 - 8 * T1 ^ 3 * V1 - 8 * T1 ^ 2 * T0 ^ 2 * A1 + 20 * T1 ^ 2 * M1 - 20 * T1 ^ 2 * M0 - 32 * T1 ^ 2 * T0 * V1 - 28 * T1 ^ 2 * T0 * V0 + 8 * T1 ^ 2 * T0 ^ 2 * A0 + 80 * T1 * T0 * M1 + 28 * T1 * T0 ^ 2 * V1 - 4 * T1 * T0 ^ 3 * A0 - 80 * T1 * T0 * M0 + 32 * T1 * T0 ^ 2 * V0 - T0 ^ 4 * A0 - 20 * T0 ^ 2 * M0 + 20 * T0 ^ 2 * M1 + 3 * T0 ^ 4 * A1 + 12 * T0 ^ 3 * V1 + 8 * T0 ^ 3 * V0) / (5 * T0 ^ 4 * T1 - 5 * T0 * T1 ^ 4 + 10 * T0 ^ 2 * T1 ^ 3 - 10 * T1 ^ 2 * T0 ^ 3 + T1 ^ 5 - T0 ^ 5)
    Ordre5.d = -1 / 2 * (T0 ^ 5 * A1 - 3 * T0 ^ 4 * T1 * A0 - 12 * T0 ^ 2 * T1 ^ 2 * V1 + 12 * T0 ^ 2 * T1 ^ 2 * V0 + 60 * T1 ^ 2 * T0 * M1 - 60 * T1 ^ 2 * T0 * M0 - 60 * T0 ^ 2 * T1 * M0 + 60 * T0 ^ 2 * T1 * M1 + 3 * T1 ^ 4 * T0 * A1 - 36 * T1 ^ 3 * T0 * V0 + 8 * T1 ^ 3 * T0 ^ 2 * A0 - 24 * T1 ^ 3 * T0 * V1 - T1 ^ 5 * A0 + 24 * T0 ^ 3 * T1 * V0 - 8 * T0 ^ 3 * T1 ^ 2 * A1 + 4 * T0 ^ 4 * T1 * A1 - 4 * T1 ^ 4 * T0 * A0 + 36 * T0 ^ 3 * T1 * V1) / (5 * T0 ^ 4 * T1 - 5 * T0 * T1 ^ 4 + 10 * T0 ^ 2 * T1 ^ 3 - 10 * T1 ^ 2 * T0 ^ 3 + T1 ^ 5 - T0 ^ 5)
    Ordre5.e = 1 / 2 * (10 * T0 ^ 4 * T1 * V1 - T0 ^ 4 * T1 ^ 2 * A1 - 3 * T0 ^ 4 * T1 ^ 2 * A0 + 2 * T0 ^ 5 * T1 * A1 - 16 * T0 ^ 2 * T1 ^ 3 * V0 - 24 * T0 ^ 2 * T1 ^ 3 * V1 + T1 ^ 4 * T0 ^ 2 * A0 - 10 * T1 ^ 4 * T0 * V0 - 2 * T1 ^ 5 * T0 * A0 + 24 * T1 ^ 2 * T0 ^ 3 * V0 + 4 * T0 ^ 3 * T1 ^ 3 * A0 - 4 * T0 ^ 3 * T1 ^ 3 * A1 + 16 * T1 ^ 2 * T0 ^ 3 * V1 - 60 * T1 ^ 2 * T0 ^ 2 * M0 + 60 * T1 ^ 2 * T0 ^ 2 * M1 - 2 * T0 ^ 5 * V1 + 2 * T1 ^ 5 * V0 + 3 * T1 ^ 4 * T0 ^ 2 * A1) / (5 * T0 ^ 4 * T1 - 5 * T0 * T1 ^ 4 + 10 * T0 ^ 2 * T1 ^ 3 - 10 * T1 ^ 2 * T0 ^ 3 + T1 ^ 5 - T0 ^ 5)
    Ordre5.f = -1 / 2 * (T1 ^ 2 * A1 * T0 ^ 5 - 2 * T1 * V1 * T0 ^ 5 - 20 * T1 ^ 3 * T0 ^ 2 * M0 - 2 * T1 ^ 3 * T0 ^ 4 * A1 - 8 * T1 ^ 3 * T0 ^ 3 * V1 + 8 * T1 ^ 3 * T0 ^ 3 * V0 + 10 * T1 ^ 2 * V1 * T0 ^ 4 - T1 ^ 3 * T0 ^ 4 * A0 + 2 * T1 ^ 4 * T0 ^ 3 * A0 + 10 * T1 ^ 4 * T0 * M0 + T1 ^ 4 * T0 ^ 3 * A1 - 10 * T1 ^ 4 * T0 ^ 2 * V0 + 2 * T1 ^ 5 * T0 * V0 - T1 ^ 5 * T0 ^ 2 * A0 - 2 * T1 ^ 5 * M0 + 2 * M1 * T0 ^ 5 - 10 * M1 * T0 ^ 4 * T1 + 20 * M1 * T1 ^ 2 * T0 ^ 3) / (5 * T0 ^ 4 * T1 - 5 * T0 * T1 ^ 4 + 10 * T0 ^ 2 * T1 ^ 3 - 10 * T1 ^ 2 * T0 ^ 3 + T1 ^ 5 - T0 ^ 5)

End Function

Public Function Ordre11(M0 As Variant, M1 As Variant, V0 As Variant, V1 As Variant, A0 As Variant, A1 As Variant, T0 As Variant, T1 As Variant) As ReturnCoeffs
    
    Ordre11.a = -14 * (-4 * T0 * T1 * A0 + 2 * T0 ^ 2 * A0 + 2 * T1 ^ 2 * A0 - 9 * T0 * V0 + 9 * T1 * V0 + 18 * M0 - 18 * M1 - 9 * T0 * V1 + 4 * T0 * T1 * A1 + 9 * T1 * V1 - 2 * T1 ^ 2 * A1 - 2 * T0 ^ 2 * A1) / (-55 * T0 ^ 2 * T1 ^ 9 - 462 * T1 ^ 5 * T0 ^ 6 + 165 * T0 ^ 3 * T1 ^ 8 + 330 * T1 ^ 4 * T0 ^ 7 - 165 * T1 ^ 3 * T0 ^ 8 + 462 * T0 ^ 5 * T1 ^ 6 + 55 * T1 ^ 2 * T0 ^ 9 - 11 * T1 * T0 ^ 10 + 11 * T0 * T1 ^ 10 + T0 ^ 11 - 330 * T0 ^ 4 * T1 ^ 7 - T1 ^ 11)
    Ordre11.b = 7 / 2 * (-45 * T0 ^ 3 * A1 + 43 * T0 ^ 3 * A0 - 41 * T0 ^ 2 * T1 * A0 - 196 * T0 ^ 2 * V0 + 47 * T0 ^ 2 * T1 * A1 - 200 * T0 ^ 2 * V1 + 41 * T0 * T1 ^ 2 * A1 - 47 * T0 * T1 ^ 2 * A0 + 396 * T0 * M0 - 4 * T0 * T1 * V0 + 4 * T0 * T1 * V1 - 396 * T0 * M1 + 45 * T1 ^ 3 * A0 + 200 * T1 ^ 2 * V0 - 43 * T1 ^ 3 * A1 + 196 * T1 ^ 2 * V1 - 396 * T1 * M1 + 396 * T1 * M0) / (-55 * T0 ^ 2 * T1 ^ 9 - 462 * T1 ^ 5 * T0 ^ 6 + 165 * T0 ^ 3 * T1 ^ 8 + 330 * T1 ^ 4 * T0 ^ 7 - 165 * T1 ^ 3 * T0 ^ 8 + 462 * T0 ^ 5 * T1 ^ 6 + 55 * T1 ^ 2 * T0 ^ 9 - 11 * T1 * T0 ^ 10 + 11 * T0 * T1 ^ 10 + T0 ^ 11 - 330 * T0 ^ 4 * T1 ^ 7 - T1 ^ 11)
    Ordre11.c = -5 * (65 * T0 ^ 4 * A0 - 72 * T0 ^ 4 * A1 - 301 * T0 ^ 3 * V0 - 27 * T0 ^ 3 * T1 * A1 + 41 * T0 ^ 3 * T1 * A0 - 315 * T0 ^ 3 * V1 + 616 * T0 ^ 2 * M0 - 469 * T0 ^ 2 * T1 * V0 - 205 * T0 ^ 2 * T1 ^ 2 * A0 - 455 * T0 ^ 2 * T1 * V1 - 616 * T0 ^ 2 * M1 + 205 * T0 ^ 2 * T1 ^ 2 * A1 + 455 * T0 * T1 ^ 2 * V0 - 1540 * T0 * T1 * M1 + 1540 * T0 * T1 * M0 - 41 * T0 * T1 ^ 3 * A1 + 469 * T0 * T1 ^ 2 * V1 + 27 * T0 * T1 ^ 3 * A0 + 72 * T1 ^ 4 * A0 - 65 * T1 ^ 4 * A1 + 616 * T1 ^ 2 * M0 - 616 * T1 ^ 2 * M1 + 315 * T1 ^ 3 * V0 + 301 * T1 ^ 3 * V1) / (-55 * T0 ^ 2 * T1 ^ 9 - 462 * T1 ^ 5 * T0 ^ 6 + 165 * T0 ^ 3 * T1 ^ 8 + 330 * T1 ^ 4 * T0 ^ 7 - 165 * T1 ^ 3 * T0 ^ 8 + 462 * T0 ^ 5 * T1 ^ 6 + 55 * T1 ^ 2 * T0 ^ 9 - 11 * T1 * T0 ^ 10 + 11 * T0 * T1 ^ 10 + T0 ^ 11 - 330 * T0 ^ 4 * T1 ^ 7 - T1 ^ 11)
    Ordre11.d = 15 / 2 * (2310 * T1 * T0 ^ 2 * M0 + 155 * T0 ^ 4 * T1 * A0 - 187 * T0 ^ 3 * T1 ^ 2 * A0 - 918 * T0 ^ 3 * T1 * V0 - 152 * T0 ^ 4 * T1 * A1 - 930 * T0 ^ 3 * T1 * V1 + 223 * T0 ^ 3 * T1 ^ 2 * A1 - 223 * T1 ^ 3 * T0 ^ 2 * A0 - 30 * T1 ^ 2 * T0 ^ 2 * V0 + 30 * T1 ^ 2 * T0 ^ 2 * V1 + 187 * T1 ^ 3 * T0 ^ 2 * A1 + 152 * T0 * T1 ^ 4 * A0 + 930 * T0 * T1 ^ 3 * V0 + 47 * T0 ^ 5 * A0 - 222 * T0 ^ 4 * V0 + 462 * T0 ^ 3 * M0 - 462 * T0 ^ 3 * M1 - 240 * T0 ^ 4 * V1 - 56 * T0 ^ 5 * A1 + 918 * T0 * T1 ^ 3 * V1 - 155 * T0 * T1 ^ 4 * A1 - 2310 * T1 * T0 ^ 2 * M1 + 2310 * T0 * T1 ^ 2 * M0 - 2310 * T0 * T1 ^ 2 * M1 + 56 * T1 ^ 5 * A0 + 462 * T1 ^ 3 * M0 - 462 * T1 ^ 3 * M1 + 240 * T1 ^ 4 * V0 + 222 * T1 ^ 4 * V1 - 47 * T1 ^ 5 * A1) / (-55 * T0 ^ 2 * T1 ^ 9 - 462 * T1 ^ 5 * T0 ^ 6 + 165 * T0 ^ 3 * T1 ^ 8 + 330 * T1 ^ 4 * T0 ^ 7 - 165 * T1 ^ 3 * T0 ^ 8 + 462 * T0 ^ 5 * T1 ^ 6 + 55 * T1 ^ 2 * T0 ^ 9 - 11 * T1 * T0 ^ 10 + 11 * T0 * T1 ^ 10 + T0 ^ 11 - 330 * T0 ^ 4 * T1 ^ 7 - T1 ^ 11)
    Ordre11.e = -6 * (278 * T0 ^ 5 * T1 * A0 + 80 * T0 ^ 4 * T1 ^ 2 * A0 - 1445 * T0 ^ 4 * T1 * V0 - 308 * T0 ^ 5 * T1 * A1 - 1525 * T0 ^ 4 * T1 * V1 + 10 * T0 ^ 4 * T1 ^ 2 * A1 - 730 * T1 ^ 3 * T0 ^ 3 * A0 - 1700 * T1 ^ 2 * T0 ^ 3 * V0 - 1600 * T1 ^ 2 * T0 ^ 3 * V1 + 730 * T1 ^ 3 * T0 ^ 3 * A1 - 10 * T1 ^ 4 * T0 ^ 2 * A0 + 1600 * T1 ^ 3 * T0 ^ 2 * V0 + 1700 * T1 ^ 3 * T0 ^ 2 * V1 - 80 * T1 ^ 4 * T0 ^ 2 * A1 + 308 * T0 * T1 ^ 5 * A0 + 1525 * T0 * T1 ^ 4 * V0 + 1445 * T0 * T1 ^ 4 * V1 - 278 * T0 * T1 ^ 5 * A1 + 32 * T0 ^ 6 * A0 - 155 * T0 ^ 5 * V0 + 330 * T0 ^ 4 * M0 - 330 * T0 ^ 4 * M1 - 175 * T0 ^ 5 * V1 - 42 * T0 ^ 6 * A1 + 3300 * T1 * T0 ^ 3 * M0 - 3300 * T1 * T0 ^ 3 * M1 + 6600 * T1 ^ 2 * T0 ^ 2 * M0 - 6600 * T1 ^ 2 * T0 ^ 2 * M1 + 3300 * T0 * T1 ^ 3 * M0 - 3300 * T0 * T1 ^ 3 * M1 + 330 * T1 ^ 4 * M0 - 330 * T1 ^ 4 * M1 + 42 * T1 ^ 6 * A0 - 32 * T1 ^ 6 * A1 + 175 * T1 ^ 5 * V0 + 155 * T1 ^ 5 * V1) / _
    (-55 * T0 ^ 2 * T1 ^ 9 - 462 * T1 ^ 5 * T0 ^ 6 + 165 * T0 ^ 3 * T1 ^ 8 + 330 * T1 ^ 4 * T0 ^ 7 - 165 * T1 ^ 3 * T0 ^ 8 + 462 * T0 ^ 5 * T1 ^ 6 + 55 * T1 ^ 2 * T0 ^ 9 - 11 * T1 * T0 ^ 10 + 11 * T0 * T1 ^ 10 + T0 ^ 11 - 330 * T0 ^ 4 * T1 ^ 7 - T1 ^ 11)
    Ordre11.f = 21 * (278 * T0 * T1 ^ 5 * V0 - 250 * T0 ^ 5 * T1 * V0 - 278 * T0 ^ 5 * T1 * V1 - 160 * T0 ^ 4 * T1 ^ 3 * A0 + 205 * T0 ^ 4 * T1 ^ 3 * A1 + 550 * T0 ^ 4 * T1 * M0 - 830 * T0 ^ 4 * T1 ^ 2 * V1 + 2 * T0 ^ 7 * A0 - 3 * T0 ^ 7 * A1 - 12 * T0 ^ 6 * V1 - 10 * T0 ^ 6 * V0 + 22 * T0 ^ 5 * M0 - 22 * T0 ^ 5 * M1 - 550 * T0 ^ 4 * T1 * M1 - 820 * T0 ^ 4 * T1 ^ 2 * V0 + 160 * T0 ^ 3 * T1 ^ 4 * A1 - 40 * T0 ^ 3 * T1 ^ 3 * V0 + 40 * T0 ^ 3 * T1 ^ 3 * V1 + 2200 * T0 ^ 3 * T1 ^ 2 * M0 - 205 * T0 ^ 3 * T1 ^ 4 * A0 - 2200 * T0 ^ 3 * T1 ^ 2 * M1 + 830 * T0 ^ 2 * T1 ^ 4 * V0 + 119 * T0 ^ 2 * T1 ^ 5 * A0 + 820 * T0 ^ 2 * T1 ^ 4 * V1 - 128 * T0 ^ 2 * T1 ^ 5 * A1 + 2200 * T0 ^ 2 * T1 ^ 3 * M0 - 2200 * T0 ^ 2 * T1 ^ 3 * M1 + 250 * T0 * T1 ^ 5 * V1 - 550 * T0 * T1 ^ 4 * M1 + 550 * T0 * T1 ^ 4 * M0 + _
    63 * T0 * T1 ^ 6 * A0 - 50 * T0 * T1 ^ 6 * A1 - 63 * T0 ^ 6 * T1 * A1 + 50 * T0 ^ 6 * T1 * A0 + 128 * T0 ^ 5 * T1 ^ 2 * A0 - 119 * T0 ^ 5 * T1 ^ 2 * A1 + 10 * T1 ^ 6 * V1 - 2 * T1 ^ 7 * A1 + 3 * T1 ^ 7 * A0 + 12 * T1 ^ 6 * V0 + 22 * T1 ^ 5 * M0 - 22 * T1 ^ 5 * M1) / _
    (-55 * T0 ^ 2 * T1 ^ 9 - 462 * T1 ^ 5 * T0 ^ 6 + 165 * T0 ^ 3 * T1 ^ 8 + 330 * T1 ^ 4 * T0 ^ 7 - 165 * T1 ^ 3 * T0 ^ 8 + 462 * T0 ^ 5 * T1 ^ 6 + 55 * T1 ^ 2 * T0 ^ 9 - 11 * T1 * T0 ^ 10 + 11 * T0 * T1 ^ 10 + T0 ^ 11 - 330 * T0 ^ 4 * T1 ^ 7 - T1 ^ 11)
    Ordre11.g = -42 * T1 * T0 * (54 * T0 ^ 5 * T1 * A0 + 20 * T0 ^ 4 * T1 ^ 2 * A0 - 285 * T0 ^ 4 * T1 * V0 - 63 * T0 ^ 5 * T1 * A1 - 309 * T0 ^ 4 * T1 * V1 + 7 * T0 ^ 4 * T1 ^ 2 * A1 - 145 * T1 ^ 3 * T0 ^ 3 * A0 - 345 * T1 ^ 2 * T0 ^ 3 * V0 - 315 * T1 ^ 2 * T0 ^ 3 * V1 + 145 * T1 ^ 3 * T0 ^ 3 * A1 - 7 * T1 ^ 4 * T0 ^ 2 * A0 + 315 * T1 ^ 3 * T0 ^ 2 * V0 + 345 * T1 ^ 3 * T0 ^ 2 * V1 - 20 * T1 ^ 4 * T0 ^ 2 * A1 + 63 * T0 * T1 ^ 5 * A0 + 309 * T0 * T1 ^ 4 * V0 + 285 * T0 * T1 ^ 4 * V1 - 54 * T0 * T1 ^ 5 * A1 + 6 * T0 ^ 6 * A0 - 30 * T0 ^ 5 * V0 + 66 * T0 ^ 4 * M0 - 66 * T0 ^ 4 * M1 - 36 * T0 ^ 5 * V1 - 9 * T0 ^ 6 * A1 + 660 * T1 * T0 ^ 3 * M0 - 660 * T1 * T0 ^ 3 * M1 + 1320 * T1 ^ 2 * T0 ^ 2 * M0 - 1320 * T1 ^ 2 * T0 ^ 2 * M1 + 660 * T0 * T1 ^ 3 * M0 - 660 * T0 * T1 ^ 3 * M1 + 66 * T1 ^ 4 * M0 - 66 * T1 ^ 4 * M1 + 9 * T1 ^ 6 * A0 - 6 * T1 ^ 6 * A1 + 36 * T1 ^ 5 * V0 + 30 * T1 ^ 5 * V1) / _
    (-55 * T0 ^ 2 * T1 ^ 9 - 462 * T1 ^ 5 * T0 ^ 6 + 165 * T0 ^ 3 * T1 ^ 8 + 330 * T1 ^ 4 * T0 ^ 7 - 165 * T1 ^ 3 * T0 ^ 8 + 462 * T0 ^ 5 * T1 ^ 6 + 55 * T1 ^ 2 * T0 ^ 9 - 11 * T1 * T0 ^ 10 + 11 * T0 * T1 ^ 10 + T0 ^ 11 - 330 * T0 ^ 4 * T1 ^ 7 - T1 ^ 11)
    Ordre11.h = 105 * T1 ^ 2 * T0 ^ 2 * (330 * T1 * T0 ^ 2 * M0 + 22 * T0 ^ 4 * T1 * A0 - 23 * T0 ^ 3 * T1 ^ 2 * A0 - 130 * T0 ^ 3 * T1 * V0 - 21 * T0 ^ 4 * T1 * A1 - 134 * T0 ^ 3 * T1 * V1 + 35 * T0 ^ 3 * T1 ^ 2 * A1 - 35 * T1 ^ 3 * T0 ^ 2 * A0 - 10 * T1 ^ 2 * T0 ^ 2 * V0 + 10 * T1 ^ 2 * T0 ^ 2 * V1 + 23 * T1 ^ 3 * T0 ^ 2 * A1 + 21 * T0 * T1 ^ 4 * A0 + 134 * T0 * T1 ^ 3 * V0 + 6 * T0 ^ 5 * A0 - 30 * T0 ^ 4 * V0 + 66 * T0 ^ 3 * M0 - 66 * T0 ^ 3 * M1 - 36 * T0 ^ 4 * V1 - 9 * T0 ^ 5 * A1 + 130 * T0 * T1 ^ 3 * V1 - 22 * T0 * T1 ^ 4 * A1 - 330 * T1 * T0 ^ 2 * M1 + 330 * T0 * T1 ^ 2 * M0 - 330 * T0 * T1 ^ 2 * M1 + 9 * T1 ^ 5 * A0 + 66 * T1 ^ 3 * M0 - 66 * T1 ^ 3 * M1 + 36 * T1 ^ 4 * V0 + 30 * T1 ^ 4 * V1 - 6 * T1 ^ 5 * A1) / (-55 * T0 ^ 2 * T1 ^ 9 - 462 * T1 ^ 5 * T0 ^ 6 + 165 * T0 ^ 3 * T1 ^ 8 + 330 * T1 ^ 4 * T0 ^ 7 - 165 * T1 ^ 3 * T0 ^ 8 + 462 * T0 ^ 5 * T1 ^ 6 + 55 * T1 ^ 2 * T0 ^ 9 - 11 * T1 * T0 ^ 10 + 11 * T0 * T1 ^ 10 + T0 ^ 11 - 330 * T0 ^ 4 * T1 ^ 7 - T1 ^ 11)
    Ordre11.i = -210 * T1 ^ 3 * T0 ^ 3 * (-35 * T0 ^ 2 * T1 * V0 - 31 * T0 ^ 2 * T1 * V1 - 4 * T0 * T1 ^ 3 * A1 + 110 * T0 * T1 * M0 + 35 * T0 * T1 ^ 2 * V1 + 4 * T0 ^ 4 * A0 - 6 * T0 ^ 4 * A1 - 24 * T0 ^ 3 * V1 - 20 * T0 ^ 3 * V0 + 44 * T0 ^ 2 * M0 - 44 * T0 ^ 2 * M1 - 110 * T0 * T1 * M1 + 31 * T0 * T1 ^ 2 * V0 - 4 * T1 ^ 4 * A1 + 24 * T1 ^ 3 * V0 + 20 * T1 ^ 3 * V1 + 44 * T1 ^ 2 * M0 + 6 * T1 ^ 4 * A0 - 44 * T1 ^ 2 * M1 + 4 * T0 ^ 3 * T1 * A0 - 14 * T0 ^ 2 * T1 ^ 2 * A0 + 14 * T0 ^ 2 * T1 ^ 2 * A1) / (-55 * T0 ^ 2 * T1 ^ 9 - 462 * T1 ^ 5 * T0 ^ 6 + 165 * T0 ^ 3 * T1 ^ 8 + 330 * T1 ^ 4 * T0 ^ 7 - 165 * T1 ^ 3 * T0 ^ 8 + 462 * T0 ^ 5 * T1 ^ 6 + 55 * T1 ^ 2 * T0 ^ 9 - 11 * T1 * T0 ^ 10 + 11 * T0 * T1 ^ 10 + T0 ^ 11 - 330 * T0 ^ 4 * T1 ^ 7 - T1 ^ 11)
    Ordre11.j = 1 / 2 * (-T1 ^ 11 * A0 - 1260 * T1 ^ 7 * T0 ^ 4 * A1 + 1560 * T1 ^ 7 * T0 ^ 4 * A0 + 165 * T1 ^ 8 * T0 ^ 3 * A0 - 55 * T1 ^ 9 * T0 ^ 2 * A0 + 11 * T1 ^ 10 * T0 * A0 - 11 * A1 * T1 * T0 ^ 10 + 55 * A1 * T1 ^ 2 * T0 ^ 9 - 165 * A1 * T1 ^ 3 * T0 ^ 8 - 13860 * T1 ^ 4 * T0 ^ 5 * M1 + 13860 * T1 ^ 4 * T0 ^ 5 * M0 - 6300 * T1 ^ 4 * T0 ^ 6 * V0 - 7560 * T1 ^ 4 * T0 ^ 6 * V1 - 1560 * T1 ^ 4 * T0 ^ 7 * A1 + 1260 * T1 ^ 4 * T0 ^ 7 * A0 + 2184 * T1 ^ 5 * T0 ^ 6 * A1 + 1260 * T1 ^ 5 * T0 ^ 5 * V1 - 13860 * T1 ^ 5 * T0 ^ 4 * M1 + 13860 * T1 ^ 5 * T0 ^ 4 * M0 - 1260 * T1 ^ 5 * T0 ^ 5 * V0 - 756 * T1 ^ 5 * T0 ^ 6 * A0 + 756 * T1 ^ 6 * T0 ^ 5 * A1 + 6300 * T1 ^ 6 * T0 ^ 4 * V1 + 7560 * T1 ^ 6 * T0 ^ 4 * V0 - 2184 * T1 ^ 6 * T0 ^ 5 * A0 + A1 * T0 ^ 11) / (-55 * T0 ^ 2 * T1 ^ 9 - 462 * T1 ^ 5 * T0 ^ 6 + 165 * T0 ^ 3 * T1 ^ 8 + 330 * T1 ^ 4 * T0 ^ 7 - 165 * T1 ^ 3 * T0 ^ 8 + 462 * T0 ^ 5 * T1 ^ 6 + 55 * T1 ^ 2 * T0 ^ 9 - 11 * T1 * T0 ^ 10 + 11 * T0 * T1 ^ 10 + T0 ^ 11 - 330 * T0 ^ 4 * T1 ^ 7 - T1 ^ 11)
    Ordre11.k = -(2772 * T1 ^ 5 * T0 ^ 5 * M0 - 2772 * T1 ^ 5 * T0 ^ 5 * M1 - 1260 * T1 ^ 5 * T0 ^ 6 * V0 - 1050 * T1 ^ 5 * T0 ^ 6 * V1 - 165 * T1 ^ 4 * T0 ^ 8 * A1 - 330 * T1 ^ 4 * T0 ^ 7 * V1 - 48 * T1 ^ 5 * T0 ^ 7 * A1 + 165 * T1 ^ 3 * T0 ^ 8 * V1 + 11 * T1 * T0 ^ 10 * V1 - 11 * T1 ^ 2 * T0 ^ 10 * A1 - 55 * T1 ^ 2 * T0 ^ 9 * V1 + 55 * T1 ^ 3 * T0 ^ 9 * A1 + T1 * T0 ^ 11 * A1 + 252 * T1 ^ 5 * T0 ^ 7 * A0 - 165 * T0 ^ 3 * T1 ^ 8 * V0 + 420 * T0 ^ 6 * T1 ^ 6 * A1 + 1050 * T0 ^ 5 * T1 ^ 6 * V0 + 330 * T0 ^ 4 * T1 ^ 7 * V0 + 1260 * T0 ^ 5 * T1 ^ 6 * V1 - 252 * T0 ^ 5 * T1 ^ 7 * A1 + 48 * T0 ^ 5 * T1 ^ 7 * A0 - 420 * T0 ^ 6 * T1 ^ 6 * A0 + 165 * T0 ^ 4 * T1 ^ 8 * A0 + 55 * T0 ^ 2 * T1 ^ 9 * V0 - 11 * T0 * T1 ^ 10 * V0 + 11 * T0 ^ 2 * T1 ^ 10 * A0 - 55 * T0 ^ 3 * T1 ^ 9 * A0 - T0 * T1 ^ 11 * A0 + T1 ^ 11 * V0 - T0 ^ 11 * V1) / _
    (-55 * T0 ^ 2 * T1 ^ 9 - 462 * T1 ^ 5 * T0 ^ 6 + 165 * T0 ^ 3 * T1 ^ 8 + 330 * T1 ^ 4 * T0 ^ 7 - 165 * T1 ^ 3 * T0 ^ 8 + 462 * T0 ^ 5 * T1 ^ 6 + 55 * T1 ^ 2 * T0 ^ 9 - 11 * T1 * T0 ^ 10 + 11 * T0 * T1 ^ 10 + T0 ^ 11 - 330 * T0 ^ 4 * T1 ^ 7 - T1 ^ 11)
    Ordre11.l = 1 / 2 * (2 * M1 * T0 ^ 11 + 84 * T1 ^ 6 * T0 ^ 7 * A0 + 204 * T1 ^ 6 * T0 ^ 7 * A1 + 420 * T1 ^ 6 * T0 ^ 6 * V1 - 420 * T1 ^ 6 * T0 ^ 6 * V0 + 924 * T1 ^ 6 * T0 ^ 5 * M0 - 660 * T1 ^ 5 * V1 * T0 ^ 7 + 330 * T1 ^ 4 * V1 * T0 ^ 8 - 110 * T1 ^ 3 * V1 * T0 ^ 9 + 22 * T1 ^ 2 * V1 * T0 ^ 10 - 2 * T1 * V1 * T0 ^ 11 - 165 * T1 ^ 5 * A1 * T0 ^ 8 + 55 * T1 ^ 4 * A1 * T0 ^ 9 - 11 * T1 ^ 3 * A1 * T0 ^ 10 + T1 ^ 2 * A1 * T0 ^ 11 - 924 * M1 * T1 ^ 5 * T0 ^ 6 + 660 * M1 * T1 ^ 4 * T0 ^ 7 - 330 * M1 * T1 ^ 3 * T0 ^ 8 + 110 * M1 * T1 ^ 2 * T0 ^ 9 - 22 * M1 * T1 * T0 ^ 10 - 204 * T1 ^ 7 * T0 ^ 6 * A0 + 660 * T1 ^ 7 * T0 ^ 5 * V0 - 660 * T1 ^ 7 * T0 ^ 4 * M0 - 84 * T1 ^ 7 * T0 ^ 6 * A1 + 165 * T1 ^ 8 * T0 ^ 5 * A0 - 330 * T1 ^ 8 * T0 ^ 4 * V0 + 330 * T1 ^ 8 * T0 ^ 3 * M0 - 110 * T1 ^ 9 * T0 ^ 2 * M0 - 2 * T1 ^ 11 * M0 - T1 ^ 11 * T0 ^ 2 * A0 + 2 * T1 ^ 11 * T0 * V0 + 11 * T1 ^ 10 * T0 ^ 3 * A0 - 22 * T1 ^ 10 * T0 ^ 2 * V0 + 22 * T1 ^ 10 * T0 * M0 + 110 * T1 ^ 9 * T0 ^ 3 * V0 - 55 * T1 ^ 9 * T0 ^ 4 * A0) / _
    (-55 * T0 ^ 2 * T1 ^ 9 - 462 * T1 ^ 5 * T0 ^ 6 + 165 * T0 ^ 3 * T1 ^ 8 + 330 * T1 ^ 4 * T0 ^ 7 - 165 * T1 ^ 3 * T0 ^ 8 + 462 * T0 ^ 5 * T1 ^ 6 + 55 * T1 ^ 2 * T0 ^ 9 - 11 * T1 * T0 ^ 10 + 11 * T0 * T1 ^ 10 + T0 ^ 11 - 330 * T0 ^ 4 * T1 ^ 7 - T1 ^ 11)

End Function

Public Function Ordre7(M0 As Variant, M1 As Variant, V0 As Variant, V1 As Variant, A0 As Variant, A1 As Variant, T0 As Variant, T1 As Variant) As ReturnCoeffs

    Ordre7.a = -2 * (-10 * M1 - T0 ^ 2 * A1 + T1 ^ 2 * A0 + 10 * M0 - T1 ^ 2 * A1 - 5 * T0 * V0 + 5 * T1 * V1 + T0 ^ 2 * A0 - 2 * T0 * T1 * A0 + 5 * T1 * V0 + 2 * T0 * T1 * A1 - 5 * T0 * V1) / (-7 * T1 * T0 ^ 6 + T0 ^ 7 + 7 * T0 * T1 ^ 6 + 21 * T0 ^ 5 * T1 ^ 2 - 35 * T1 ^ 3 * T0 ^ 4 + 35 * T0 ^ 3 * T1 ^ 4 - T1 ^ 7 - 21 * T0 ^ 2 * T1 ^ 5)
    Ordre7.b = 1 / 2 * (13 * T0 ^ 3 * A0 - 15 * T0 ^ 3 * A1 - 11 * T0 ^ 2 * T1 * A0 - 68 * T0 ^ 2 * V0 - 72 * T0 ^ 2 * V1 + 17 * T0 ^ 2 * T1 * A1 - 4 * T0 * T1 * V0 + 11 * T0 * T1 ^ 2 * A1 + 4 * T0 * T1 * V1 - 17 * T0 * T1 ^ 2 * A0 - 140 * T0 * M1 + 140 * T0 * M0 + 15 * T1 ^ 3 * A0 - 13 * T1 ^ 3 * A1 + 68 * T1 ^ 2 * V1 - 140 * T1 * M1 + 140 * T1 * M0 + 72 * T1 ^ 2 * V0) / (-7 * T1 * T0 ^ 6 + T0 ^ 7 + 7 * T0 * T1 ^ 6 + 21 * T0 ^ 5 * T1 ^ 2 - 35 * T1 ^ 3 * T0 ^ 4 + 35 * T0 ^ 3 * T1 ^ 4 - T1 ^ 7 - 21 * T0 ^ 2 * T1 ^ 5)
    Ordre7.c = -(7 * T0 ^ 4 * A0 - 10 * T0 ^ 4 * A1 + 11 * T0 ^ 3 * T1 * A0 - 5 * T0 ^ 3 * T1 * A1 - 45 * T0 ^ 3 * V1 - 39 * T0 ^ 3 * V0 - 33 * T0 ^ 2 * T1 ^ 2 * A0 + 33 * T0 ^ 2 * T1 ^ 2 * A1 - 81 * T0 ^ 2 * T1 * V1 - 87 * T0 ^ 2 * T1 * V0 - 84 * T0 ^ 2 * M1 + 84 * T0 ^ 2 * M0 + 5 * T0 * T1 ^ 3 * A0 - 11 * T0 * T1 ^ 3 * A1 + 87 * T0 * T1 ^ 2 * V1 + 81 * T0 * T1 ^ 2 * V0 + 252 * T0 * T1 * M0 - 252 * T0 * T1 * M1 + 10 * T1 ^ 4 * A0 - 7 * T1 ^ 4 * A1 + 39 * T1 ^ 3 * V1 + 45 * T1 ^ 3 * V0 - 84 * T1 ^ 2 * M1 + 84 * T1 ^ 2 * M0) / (-7 * T1 * T0 ^ 6 + T0 ^ 7 + 7 * T0 * T1 ^ 6 + 21 * T0 ^ 5 * T1 ^ 2 - 35 * T1 ^ 3 * T0 ^ 4 + 35 * T0 ^ 3 * T1 ^ 4 - T1 ^ 7 - 21 * T0 ^ 2 * T1 ^ 5)
    Ordre7.d = 5 / 2 * (-126 * T0 * T1 ^ 2 * M1 + 6 * T0 ^ 2 * T1 ^ 2 * V1 - 6 * T0 ^ 2 * T1 ^ 2 * V0 + 126 * T0 ^ 2 * T1 * M0 + 7 * T0 ^ 2 * T1 ^ 3 * A1 - 15 * T0 ^ 2 * T1 ^ 3 * A0 + 15 * T0 ^ 3 * T1 ^ 2 * A1 - 54 * T0 ^ 3 * T1 * V0 - 7 * T0 ^ 3 * T1 ^ 2 * A0 - 10 * T0 ^ 4 * T1 * A1 + 126 * T0 * T1 ^ 2 * M0 + 58 * T0 * T1 ^ 3 * V0 - 9 * T0 * T1 ^ 4 * A1 + 54 * T0 * T1 ^ 3 * V1 + 10 * T0 * T1 ^ 4 * A0 - 126 * T0 ^ 2 * T1 * M1 + 9 * T0 ^ 4 * T1 * A0 - 58 * T0 ^ 3 * T1 * V1 - 2 * T0 ^ 5 * A1 + T0 ^ 5 * A0 - 14 * T0 ^ 3 * M1 + 14 * T0 ^ 3 * M0 - 8 * T0 ^ 4 * V1 - 6 * T0 ^ 4 * V0 + 8 * T1 ^ 4 * V0 + 6 * T1 ^ 4 * V1 - T1 ^ 5 * A1 + 2 * T1 ^ 5 * A0 + 14 * T1 ^ 3 * M0 - 14 * T1 ^ 3 * M1) / (-7 * T1 * T0 ^ 6 + T0 ^ 7 + 7 * T0 * T1 ^ 6 + 21 * T0 ^ 5 * T1 ^ 2 - 35 * T1 ^ 3 * T0 ^ 4 + 35 * T0 ^ 3 * T1 ^ 4 - T1 ^ 7 - 21 * T0 ^ 2 * T1 ^ 5)
    Ordre7.e = -10 * T1 * T0 * (-14 * T1 ^ 2 * M1 + 15 * T0 * T1 ^ 2 * V1 + 13 * T0 * T1 ^ 2 * V0 + 42 * T0 * T1 * M0 - 2 * T0 * T1 ^ 3 * A1 + 5 * T0 ^ 2 * T1 ^ 2 * A1 - 15 * T0 ^ 2 * T1 * V0 - 5 * T0 ^ 2 * T1 ^ 2 * A0 + 14 * T1 ^ 2 * M0 + 8 * T1 ^ 3 * V0 - T1 ^ 4 * A1 + 6 * T1 ^ 3 * V1 + 2 * T1 ^ 4 * A0 - 42 * T0 * T1 * M1 + 2 * T0 ^ 3 * T1 * A0 - 13 * T0 ^ 2 * T1 * V1 - 2 * T0 ^ 4 * A1 + T0 ^ 4 * A0 - 14 * T0 ^ 2 * M1 + 14 * T0 ^ 2 * M0 - 8 * T0 ^ 3 * V1 - 6 * T0 ^ 3 * V0) / (-7 * T1 * T0 ^ 6 + T0 ^ 7 + 7 * T0 * T1 ^ 6 + 21 * T0 ^ 5 * T1 ^ 2 - 35 * T1 ^ 3 * T0 ^ 4 + 35 * T0 ^ 3 * T1 ^ 4 - T1 ^ 7 - 21 * T0 ^ 2 * T1 ^ 5)
    Ordre7.f = 1 / 2 * (T0 ^ 7 * A1 + 30 * T0 ^ 5 * T1 ^ 2 * A0 - T1 ^ 7 * A0 - 7 * T0 ^ 6 * T1 * A1 + 10 * T0 ^ 3 * T1 ^ 4 * A1 + 7 * T0 * T1 ^ 6 * A0 + 240 * T0 ^ 2 * T1 ^ 4 * V0 - 65 * T0 ^ 3 * T1 ^ 4 * A0 + 39 * T0 ^ 2 * T1 ^ 5 * A0 - 30 * T0 ^ 2 * T1 ^ 5 * A1 + 180 * T0 ^ 2 * T1 ^ 4 * V1 - 10 * T1 ^ 3 * T0 ^ 4 * A0 + 65 * T1 ^ 3 * T0 ^ 4 * A1 - 240 * T1 ^ 2 * T0 ^ 4 * V1 - 180 * T1 ^ 2 * T0 ^ 4 * V0 + 60 * T0 ^ 3 * T1 ^ 3 * V1 - 60 * T0 ^ 3 * T1 ^ 3 * V0 - 420 * T0 ^ 3 * T1 ^ 2 * M1 + 420 * T0 ^ 3 * T1 ^ 2 * M0 - 420 * T1 ^ 3 * T0 ^ 2 * M1 + 420 * T1 ^ 3 * T0 ^ 2 * M0 - 39 * T0 ^ 5 * T1 ^ 2 * A1) / (-7 * T1 * T0 ^ 6 + T0 ^ 7 + 7 * T0 * T1 ^ 6 + 21 * T0 ^ 5 * T1 ^ 2 - 35 * T1 ^ 3 * T0 ^ 4 + 35 * T0 ^ 3 * T1 ^ 4 - T1 ^ 7 - 21 * T0 ^ 2 * T1 ^ 5)
    Ordre7.g = -(T1 ^ 7 * V0 + 7 * V1 * T1 * T0 ^ 6 + 45 * T1 ^ 4 * T0 ^ 3 * V0 + 60 * T1 ^ 4 * T0 ^ 3 * V1 + 15 * T1 ^ 4 * T0 ^ 4 * A1 - 15 * T1 ^ 4 * T0 ^ 4 * A0 + 21 * T1 ^ 5 * T0 ^ 2 * V0 - 10 * T1 ^ 5 * T0 ^ 3 * A1 - T1 ^ 5 * T0 ^ 3 * A0 + 7 * T1 ^ 6 * T0 ^ 2 * A0 - T1 ^ 7 * T0 * A0 - 7 * T1 ^ 6 * T0 * V0 - 7 * T1 ^ 2 * A1 * T0 ^ 6 + T1 * A1 * T0 ^ 7 - V1 * T0 ^ 7 - 45 * T1 ^ 3 * T0 ^ 4 * V1 - 60 * T1 ^ 3 * T0 ^ 4 * V0 + 10 * T1 ^ 3 * T0 ^ 5 * A0 - 140 * T1 ^ 3 * T0 ^ 3 * M1 + 140 * T1 ^ 3 * T0 ^ 3 * M0 + T1 ^ 3 * T0 ^ 5 * A1 - 21 * V1 * T0 ^ 5 * T1 ^ 2) / (-7 * T1 * T0 ^ 6 + T0 ^ 7 + 7 * T0 * T1 ^ 6 + 21 * T0 ^ 5 * T1 ^ 2 - 35 * T1 ^ 3 * T0 ^ 4 + 35 * T0 ^ 3 * T1 ^ 4 - T1 ^ 7 - 21 * T0 ^ 2 * T1 ^ 5)
    Ordre7.h = 1 / 2 * (7 * T0 ^ 3 * T1 ^ 6 * A0 - 2 * T1 * T0 ^ 7 * V1 - 30 * T1 ^ 4 * T0 ^ 4 * V0 + 30 * T1 ^ 4 * T0 ^ 4 * V1 - 5 * T1 ^ 5 * T0 ^ 4 * A1 - 11 * T1 ^ 5 * T0 ^ 4 * A0 + 14 * T0 ^ 6 * T1 ^ 2 * V1 - 7 * T0 ^ 6 * T1 ^ 3 * A1 - 42 * T0 ^ 5 * T1 ^ 3 * V1 + 11 * T0 ^ 5 * T1 ^ 4 * A1 + 5 * T0 ^ 5 * T1 ^ 4 * A0 - 14 * T0 ^ 2 * T1 ^ 6 * V0 - T1 ^ 7 * T0 ^ 2 * A0 + 2 * T1 ^ 7 * T0 * V0 + 42 * T0 ^ 3 * T1 ^ 5 * V0 - 70 * T1 ^ 3 * T0 ^ 4 * M1 + 42 * T0 ^ 5 * T1 ^ 2 * M1 + T0 ^ 7 * T1 ^ 2 * A1 - 42 * T0 ^ 2 * T1 ^ 5 * M0 + 14 * T0 * T1 ^ 6 * M0 + 70 * T0 ^ 3 * T1 ^ 4 * M0 - 14 * T1 * T0 ^ 6 * M1 - 2 * T1 ^ 7 * M0 + 2 * T0 ^ 7 * M1) / (-7 * T1 * T0 ^ 6 + T0 ^ 7 + 7 * T0 * T1 ^ 6 + 21 * T0 ^ 5 * T1 ^ 2 - 35 * T1 ^ 3 * T0 ^ 4 + 35 * T0 ^ 3 * T1 ^ 4 - T1 ^ 7 - 21 * T0 ^ 2 * T1 ^ 5)

End Function
Attribute VB_Name = "ModResults"
Public Function CreateTableResults()
    'Cr|fffd|ation du tableau du profil de came
    'Ca, |fffd|a va pas |fffd|tre facile :-(
    
    Dim RowDifference As Long
    Dim NbPointsToFill As Long
    Dim TimeDifference As Variant
    Dim TimeToFill As Variant
    Dim PositionDifference As Variant
    Dim DisplacementToFill As Variant
    Dim MaxSpeed As Variant
    Dim ReturnedValueForZero As ReturnCalculateSpeedAcc
    'Variables pour le lissage
    Dim StartSpeed As Double
    Dim i As Long
    
    TimeDifference = 0
    PositionDifference = 0
    RowDifference = Range_Results_First_Row_To_Fill
    'Suppression des colonnes
    i = Range_Results_First_Row_To_Fill
    While Results.Range(Range_Results_Time_Col & CStr(i)).Text <> ""
        Results.Range(Range_Results_Time_Col & CStr(i) & ":" & Range_Results_Acceleration_Col & CStr(i)).Delete
    Wend
    ' Avant pr|fffd|compression
    ' Putain de chiant ce truc !!! Avec des rapports pour rattrapages de z|fffd|ros et tout et tout...
    ' J'me suis bien marr|fffd| pour faire |fffd|a, j'peux vous le garantir...
    
    ' Enfin, marr|fffd|, fa|fffd|on de parler ;-)
    
    'Calcul de la position, du temps, de la vitesse et de l'acc|fffd|l|fffd|ration au point "0"
    ReturnedValueForZero = CalculateSpeedAcc5(DisplacementProfile.Range(Range_DisplacementProfile_Position_Stop_Ejection).Value, SysVar.Range(Range_Degrees_For_1_Cycle).Value + DisplacementProfile.Range(Range_DisplacementProfile_Position_Start_Precomp).Value, DisplacementProfile.Range(Range_DisplacementProfile_Speed_Ejection).Value, DisplacementProfile.Range(Range_DisplacementProfile_Speed_Precomp).Value, _
    DisplacementProfile.Range(Range_DisplacementProfile_Time_Stop_Ejection).Value, 60 / SysVar.Range(Range_Accurate_Speed_Stylcam).Value * 1000 + DisplacementProfile.Range(Range_DisplacementProfile_Time_Start_Precomp).Value, 0, 0, _
    SysVar.Range(Range_Degrees_For_1_Cycle).Value)
    
    NbPointsToFill = SysVar.Range(Range_Points_Profil_AvantPrecomp).Value
    'TimeToFill = DisplacementProfile.Range(Range_DisplacementProfile_Time_Start_Precomp).Value - 0
    TimeToFill = 60 / SysVar.Range(Range_Accurate_Speed_Stylcam).Value * 1000 - ReturnedValueForZero.Time + DisplacementProfile.Range(Range_DisplacementProfile_Time_Start_Precomp).Value
    DisplacementToFill = DisplacementProfile.Range(Range_DisplacementProfile_Position_Start_Precomp).Value - 0
    
    CalculateTablePositionForZero5 DisplacementProfile.Range(Range_DisplacementProfile_Position_Stop_Ejection).Value, SysVar.Range(Range_Degrees_For_1_Cycle).Value + DisplacementProfile.Range(Range_DisplacementProfile_Position_Start_Precomp).Value, DisplacementProfile.Range(Range_DisplacementProfile_Speed_Ejection).Value, DisplacementProfile.Range(Range_DisplacementProfile_Speed_Precomp).Value, _
    DisplacementProfile.Range(Range_DisplacementProfile_Time_Stop_Ejection).Value, 60 / SysVar.Range(Range_Accurate_Speed_Stylcam).Value * 1000 + DisplacementProfile.Range(Range_DisplacementProfile_Time_Start_Precomp).Value, 0, 0, _
    ReturnedValueForZero.Time, ReturnedValueForZero.Time + TimeToFill, NbPointsToFill
    
    For i = 0 To NbPointsToFill - 1
        'Temps
        Results.Range(Range_Results_Time_Col & CStr(i + RowDifference)).Value = ReturnTableTime(i) - ReturnedValueForZero.Time
        'Position
        Results.Range(Range_Results_Position_Col & CStr(i + RowDifference)).Value = ReturnTablePosition(i) - SysVar.Range(Range_Degrees_For_1_Cycle).Value
        'Temps
        'Results.Range(Range_Results_Time_Col & CStr(i + RowDifference)).Value = TimeDifference + (i) / NbPointsToFill * TimeToFill
        'Position
        'Results.Range(Range_Results_Position_Col & CStr(i + RowDifference)).Value = PositionDifference + (i) / NbPointsToFill * DisplacementToFill
    Next
    RowDifference = RowDifference + NbPointsToFill
    PositionDifference = PositionDifference + DisplacementToFill
    TimeDifference = TimeDifference + TimeToFill
    'Pr|fffd|compression
    NbPointsToFill = SysVar.Range(Range_Points_Profil_Precomp).Value
    TimeToFill = DisplacementProfile.Range(Range_DisplacementProfile_Time_Stop_Precomp).Value - DisplacementProfile.Range(Range_DisplacementProfile_Time_Start_Precomp).Value
    DisplacementToFill = DisplacementProfile.Range(Range_DisplacementProfile_Position_Stop_Precomp).Value - DisplacementProfile.Range(Range_DisplacementProfile_Position_Start_Precomp).Value
    For i = 0 To NbPointsToFill - 1
        'Temps
        Results.Range(Range_Results_Time_Col & CStr(i + RowDifference)).Value = TimeDifference + (i) / NbPointsToFill * TimeToFill
        'Position
        Results.Range(Range_Results_Position_Col & CStr(i + RowDifference)).Value = PositionDifference + (i) / NbPointsToFill * DisplacementToFill
    Next
    RowDifference = RowDifference + NbPointsToFill
    PositionDifference = PositionDifference + DisplacementToFill
    TimeDifference = TimeDifference + TimeToFill
    'Pr|fffd|compression - Compression
    NbPointsToFill = SysVar.Range(Range_Points_Profil_EntrePrecompComp).Value
    TimeToFill = DisplacementProfile.Range(Range_DisplacementProfile_Time_Start_Comp).Value - DisplacementProfile.Range(Range_DisplacementProfile_Time_Stop_Precomp).Value
    DisplacementToFill = DisplacementProfile.Range(Range_DisplacementProfile_Position_Start_Comp).Value - DisplacementProfile.Range(Range_DisplacementProfile_Position_Stop_Precomp).Value
    
    CalculateTablePosition5 PositionDifference, PositionDifference + DisplacementToFill, DisplacementProfile.Range(Range_DisplacementProfile_Speed_Precomp).Value, DisplacementProfile.Range(Range_DisplacementProfile_Speed_Comp).Value, TimeDifference, TimeDifference + TimeToFill, 0, 0, NbPointsToFill
    
    For i = 0 To NbPointsToFill - 1
        'Temps
        Results.Range(Range_Results_Time_Col & CStr(i + RowDifference)).Value = ReturnTableTime(i)
        'Position
        Results.Range(Range_Results_Position_Col & CStr(i + RowDifference)).Value = ReturnTablePosition(i)
        'Temps
        'Results.Range(Range_Results_Time_Col & CStr(i + RowDifference)).Value = TimeDifference + (i) / NbPointsToFill * TimeToFill
        'Position
        'Results.Range(Range_Results_Position_Col & CStr(i + RowDifference)).Value = PositionDifference + (i) / NbPointsToFill * DisplacementToFill
    Next
    RowDifference = RowDifference + NbPointsToFill
    PositionDifference = PositionDifference + DisplacementToFill
    TimeDifference = TimeDifference + TimeToFill
    'Compression
    NbPointsToFill = SysVar.Range(Range_Points_Profil_Comp).Value
    TimeToFill = DisplacementProfile.Range(Range_DisplacementProfile_Time_Stop_Comp).Value - DisplacementProfile.Range(Range_DisplacementProfile_Time_Start_Comp).Value
    DisplacementToFill = DisplacementProfile.Range(Range_DisplacementProfile_Position_Stop_Comp).Value - DisplacementProfile.Range(Range_DisplacementProfile_Position_Start_Comp).Value
    For i = 0 To NbPointsToFill - 1
        'Temps
        Results.Range(Range_Results_Time_Col & CStr(i + RowDifference)).Value = TimeDifference + (i) / NbPointsToFill * TimeToFill
        'Position
        Results.Range(Range_Results_Position_Col & CStr(i + RowDifference)).Value = PositionDifference + (i) / NbPointsToFill * DisplacementToFill
    Next
    RowDifference = RowDifference + NbPointsToFill
    PositionDifference = PositionDifference + DisplacementToFill
    TimeDifference = TimeDifference + TimeToFill
    'Compression-Ejection
    NbPointsToFill = SysVar.Range(Range_Points_Profil_EntreCompEjection).Value
    TimeToFill = DisplacementProfile.Range(Range_DisplacementProfile_Time_Start_Ejection).Value - DisplacementProfile.Range(Range_DisplacementProfile_Time_Stop_Comp).Value
    DisplacementToFill = DisplacementProfile.Range(Range_DisplacementProfile_Position_Start_Ejection).Value - DisplacementProfile.Range(Range_DisplacementProfile_Position_Stop_Comp).Value
    
    CalculateTablePosition5 PositionDifference, PositionDifference + DisplacementToFill, DisplacementProfile.Range(Range_DisplacementProfile_Speed_Comp).Value, DisplacementProfile.Range(Range_DisplacementProfile_Speed_Ejection).Value, TimeDifference, TimeDifference + TimeToFill, 0, 0, NbPointsToFill
    
    For i = 0 To NbPointsToFill - 1
        'Temps
        Results.Range(Range_Results_Time_Col & CStr(i + RowDifference)).Value = ReturnTableTime(i)
        'Position
        Results.Range(Range_Results_Position_Col & CStr(i + RowDifference)).Value = ReturnTablePosition(i)
        'Temps
        'Results.Range(Range_Results_Time_Col & CStr(i + RowDifference)).Value = TimeDifference + (i) / NbPointsToFill * TimeToFill
        'Position
        'Results.Range(Range_Results_Position_Col & CStr(i + RowDifference)).Value = PositionDifference + (i) / NbPointsToFill * DisplacementToFill
    Next
    RowDifference = RowDifference + NbPointsToFill
    PositionDifference = PositionDifference + DisplacementToFill
    TimeDifference = TimeDifference + TimeToFill
    'Ejection
    NbPointsToFill = SysVar.Range(Range_Points_Profil_Ejection).Value
    TimeToFill = DisplacementProfile.Range(Range_DisplacementProfile_Time_Stop_Ejection).Value - DisplacementProfile.Range(Range_DisplacementProfile_Time_Start_Ejection).Value
    DisplacementToFill = DisplacementProfile.Range(Range_DisplacementProfile_Position_Stop_Ejection).Value - DisplacementProfile.Range(Range_DisplacementProfile_Position_Start_Ejection).Value
    For i = 0 To NbPointsToFill - 1
        'Temps
        Results.Range(Range_Results_Time_Col & CStr(i + RowDifference)).Value = TimeDifference + (i) / NbPointsToFill * TimeToFill
        'Position
        Results.Range(Range_Results_Position_Col & CStr(i + RowDifference)).Value = PositionDifference + (i) / NbPointsToFill * DisplacementToFill
    Next
    RowDifference = RowDifference + NbPointsToFill
    PositionDifference = PositionDifference + DisplacementToFill
    TimeDifference = TimeDifference + TimeToFill
    'Apr|fffd|s Ejection
    
    'Le plus chiant d'entre tous... avec l'avant pr|fffd|compression !!!
    'Cherchez pas |fffd| comprendre, moi m|fffd|me je commence |fffd| ne plus rien y comprendre ;-)
    NbPointsToFill = SysVar.Range(Range_Points_Profil_ApresEjection).Value
    TimeToFill = 60 / SysVar.Range(Range_Accurate_Speed_Stylcam).Value * 1000 - TimeDifference
    DisplacementToFill = SysVar.Range(Range_Degrees_For_1_Cycle).Value - DisplacementProfile.Range(Range_DisplacementProfile_Position_Stop_Ejection).Value
    
    CalculateTablePositionForZero5 DisplacementProfile.Range(Range_DisplacementProfile_Position_Stop_Ejection).Value, SysVar.Range(Range_Degrees_For_1_Cycle).Value + DisplacementProfile.Range(Range_DisplacementProfile_Position_Start_Precomp).Value, DisplacementProfile.Range(Range_DisplacementProfile_Speed_Ejection).Value, DisplacementProfile.Range(Range_DisplacementProfile_Speed_Precomp).Value, _
    DisplacementProfile.Range(Range_DisplacementProfile_Time_Stop_Ejection).Value, 60 / SysVar.Range(Range_Accurate_Speed_Stylcam).Value * 1000 + DisplacementProfile.Range(Range_DisplacementProfile_Time_Start_Precomp).Value, 0, 0, _
    DisplacementProfile.Range(Range_DisplacementProfile_Time_Stop_Ejection).Value, ReturnedValueForZero.Time, NbPointsToFill - 1
    
    For i = 0 To NbPointsToFill - 2
        'Temps
        Results.Range(Range_Results_Time_Col & CStr(i + RowDifference)).Value = ReturnTableTime(i) + 60 / SysVar.Range(Range_Accurate_Speed_Stylcam).Value * 1000 - ReturnedValueForZero.Time
        'Position
        Results.Range(Range_Results_Position_Col & CStr(i + RowDifference)).Value = ReturnTablePosition(i)
        'Temps
        'Results.Range(Range_Results_Time_Col & CStr(i + RowDifference)).Value = TimeDifference + (i) / NbPointsToFill * TimeToFill
        'Position
        'Results.Range(Range_Results_Position_Col & CStr(i + RowDifference)).Value = PositionDifference + (i) / NbPointsToFill * DisplacementToFill
    Next
    RowDifference = RowDifference + NbPointsToFill - 1
    PositionDifference = PositionDifference + DisplacementToFill
    TimeDifference = TimeDifference + TimeToFill
    Results.Range(Range_Results_Time_Col & CStr(RowDifference)).Value = 60 / SysVar.Range(Range_Accurate_Speed_Stylcam).Value * 1000
    Results.Range(Range_Results_Position_Col & CStr(RowDifference)).Value = SysVar.Range(Range_Degrees_For_1_Cycle).Value
    RowDifference = RowDifference + 1
    MaxSpeed = FindMaxSpeed(Range_Results_First_Row_To_Fill, RowDifference - 1)
    Resize Range_Results_First_Row_To_Fill, RowDifference - 1
    'Affichage des vitesses
    For i = Range_Results_First_Row_To_Fill + 1 To RowDifference - 1
        Results.Range(Range_Results_Speed_Col & CStr(i)).Value = (Results.Range(Range_Results_Position_Col & CStr(i)).Value - Results.Range(Range_Results_Position_Col & CStr(i - 1)).Value) / (Results.Range(Range_Results_Time_Col & CStr(i)).Value - Results.Range(Range_Results_Time_Col & CStr(i - 1)).Value)
    Next
    Results.Range(Range_Results_Speed_Col & CStr(Range_Results_First_Row_To_Fill)).Value = Results.Range(Range_Results_Speed_Col & CStr(RowDifference - 1)).Value
    'Affichage des acc|fffd|l|fffd|rations
    For i = Range_Results_First_Row_To_Fill + 1 To RowDifference - 1
        Results.Range(Range_Results_Acceleration_Col & CStr(i)).Value = (Results.Range(Range_Results_Speed_Col & CStr(i)).Value - Results.Range(Range_Results_Speed_Col & CStr(i - 1)).Value) / (Results.Range(Range_Results_Time_Col & CStr(i)).Value - Results.Range(Range_Results_Time_Col & CStr(i - 1)).Value)
    Next
    Results.Range(Range_Results_Acceleration_Col & CStr(Range_Results_First_Row_To_Fill)).Value = Results.Range(Range_Results_Acceleration_Col & CStr(RowDifference - 1)).Value
    Results.Range(Range_Results_Time_Col & CStr(Range_Results_First_Row_To_Fill) & ":" & Range_Results_Acceleration_Col & CStr(RowDifference)).NumberFormat = "0.00000"
    'Actualisation des graphes :
    'Position
    Results.ChartObjects.Item(Range_Results_Position_Graph).Activate
    ActiveChart.SeriesCollection(1).XValues = "=" & Results.Name & "!R" & CStr(Range_Results_First_Row_To_Fill) & "C" & CStr(Colonne_S_To_L(Range_Results_Time_Col)) & ":R" & CStr(RowDifference - 1) & "C" & CStr(Colonne_S_To_L(Range_Results_Time_Col))
    ActiveChart.SeriesCollection(1).Values = "=" & Results.Name & "!R" & CStr(Range_Results_First_Row_To_Fill) & "C" & CStr(Colonne_S_To_L(Range_Results_Position_Col)) & ":R" & CStr(RowDifference - 1) & "C" & CStr(Colonne_S_To_L(Range_Results_Position_Col))
    'Vitesse
    Results.ChartObjects.Item(Range_Results_Speed_Graph).Activate
    ActiveChart.SeriesCollection(1).XValues = "=" & Results.Name & "!R" & CStr(Range_Results_First_Row_To_Fill) & "C" & CStr(Colonne_S_To_L(Range_Results_Time_Col)) & ":R" & CStr(RowDifference - 1) & "C" & CStr(Colonne_S_To_L(Range_Results_Time_Col))
    ActiveChart.SeriesCollection(1).Values = "=" & Results.Name & "!R" & CStr(Range_Results_First_Row_To_Fill) & "C" & CStr(Colonne_S_To_L(Range_Results_Speed_Col)) & ":R" & CStr(RowDifference - 1) & "C" & CStr(Colonne_S_To_L(Range_Results_Speed_Col))
    'Acc|fffd|l|fffd|ration
    Results.ChartObjects.Item(Range_Results_Acceleration_Graph).Activate
    ActiveChart.SeriesCollection(1).XValues = "=" & Results.Name & "!R" & CStr(Range_Results_First_Row_To_Fill) & "C" & CStr(Colonne_S_To_L(Range_Results_Time_Col)) & ":R" & CStr(RowDifference - 1) & "C" & CStr(Colonne_S_To_L(Range_Results_Time_Col))
    ActiveChart.SeriesCollection(1).Values = "=" & Results.Name & "!R" & CStr(Range_Results_First_Row_To_Fill) & "C" & CStr(Colonne_S_To_L(Range_Results_Acceleration_Col)) & ":R" & CStr(RowDifference - 1) & "C" & CStr(Colonne_S_To_L(Range_Results_Acceleration_Col))
    Results.Range("A1").Select
    Results.Range(Range_Results_Time_Col & CStr(Range_Results_First_Row_To_Fill)).Select
    frmSaveAs.Show vbModal
    If Filename <> "" Then
        SaveProfile Filename, RowDifference - Range_Results_First_Row_To_Fill
    End If
    If DirectCamFileName <> "" Then
        SaveDirectCam DirectCamFileName, RowDifference - Range_Results_First_Row_To_Fill
    End If
    MsgBox "Vitesse maxi : " & CStr(MaxSpeed), vbOKOnly
End Function

Private Function Resize(MinTable As Long, MaxTable As Long)
    'Redimensionnement des tableaux de r|fffd|sultat
    Dim i As Long, j As Long
    Dim MinValue As Long, MaxValue As Long
    Dim RealNumberOfValues As Long
    Dim NewValue As Variant
    For i = MinTable To MaxTable
        'Initialisations Moyennage
        Results.Range(Range_Results_Time_Col & CStr(i)).Value = Results.Range(Range_Results_Time_Col & CStr(i)).Value * SysVar.Range(Range_Accurate_Speed_Stylcam).Value / Rattrapage_Temps
    Next
End Function

Attribute VB_Name = "ModResultsV2"
Public Function CreateTableResultsV2(Optional SaveFilename As String = "", Optional SilentMode As Boolean = False)
    'Cr|fffd|ation du tableau du profil de came
    'Ca, |fffd|a va pas |fffd|tre facile :-(
    
    Dim RowDifference As Long
    Dim NbPointsToFill As Long
    Dim TimeDifference As Variant
    Dim TimeToFill As Variant
    Dim PositionDifference As Variant
    Dim DisplacementToFill As Variant
    Dim MiddleSpeed As Variant
    Dim AverageSpeed As Variant
    Dim Ratio_Time_First As Variant
    Dim Ratio_Time_Last As Variant
    Dim Ratio_Time_Middle As Variant
    Dim DisplacementFillFirst As Variant
    Dim DisplacementFillLast As Variant
    Dim DisplacementGlobalFirst As Variant
    Dim DisplacementGlobalLast As Variant
    Dim DisplacementLeft As Variant
    Dim CoefA As Variant
    Dim CoefB As Variant
    Dim FirstSpeed As Variant
    Dim LastSpeed As Variant
    Dim FirstSpeedChange As Variant
    Dim LastSpeedChange As Variant
    Dim MaintainSpeed As Variant
    Dim ReturnedValueForZero As ReturnCalculateSpeedAcc
    'Variables pour le lissage
    Dim StartSpeed As Double
    Dim i As Long
    
    TimeDifference = 0
    PositionDifference = 0
    RowDifference = Range_Results_First_Row_To_Fill
    'Suppression des colonnes
    i = Range_Results_First_Row_To_Fill
    While Results.Range(Range_Results_Time_Col & CStr(i)).Text <> ""
        Results.Range(Range_Results_Time_Col & CStr(i) & ":" & Range_Results_Acceleration_Col & CStr(i)).Delete
    Wend
    ' Avant pr|fffd|compression
    ' Putain de chiant ce truc !!! Avec des rapports pour rattrapages de z|fffd|ros et tout et tout...
    ' J'me suis bien marr|fffd| pour faire |fffd|a, j'peux vous le garantir...
    
    ' Enfin, marr|fffd|, fa|fffd|on de parler ;-)
    
    'Calcul de la position, du temps, de la vitesse et de l'acc|fffd|l|fffd|ration au point "0"
    ReturnedValueForZero = CalculateZeroPositionUsingV2(DisplacementProfile.Range(Range_DisplacementProfile_Position_Stop_Ejection).Value, SysVar.Range(Range_Degrees_For_1_Cycle).Value, DisplacementProfile.Range(Range_DisplacementProfile_Speed_Ejection).Value, DisplacementProfile.Range(Range_DisplacementProfile_Time_Stop_Ejection).Value)
    
    NbPointsToFill = SysVar.Range(Range_Points_Profil_AvantPrecomp).Value
    TimeToFill = 60 / SysVar.Range(Range_Accurate_Speed_Stylcam).Value * 1000 - ReturnedValueForZero.Time + DisplacementProfile.Range(Range_DisplacementProfile_Time_Start_Precomp).Value
    DisplacementToFill = DisplacementProfile.Range(Range_DisplacementProfile_Position_Start_Precomp).Value - 0
    
    CalculateTablePositionForZero5 DisplacementProfile.Range(Range_DisplacementProfile_Position_Stop_Ejection).Value, SysVar.Range(Range_Degrees_For_1_Cycle).Value + DisplacementProfile.Range(Range_DisplacementProfile_Position_Start_Precomp).Value, DisplacementProfile.Range(Range_DisplacementProfile_Speed_Ejection).Value, DisplacementProfile.Range(Range_DisplacementProfile_Speed_Precomp).Value, _
    DisplacementProfile.Range(Range_DisplacementProfile_Time_Stop_Ejection).Value, 60 / SysVar.Range(Range_Accurate_Speed_Stylcam).Value * 1000 + DisplacementProfile.Range(Range_DisplacementProfile_Time_Start_Precomp).Value, 0, 0, _
    ReturnedValueForZero.Time, ReturnedValueForZero.Time + TimeToFill, NbPointsToFill
    
    'Pr|fffd|-calcul
    FirstSpeed = DisplacementProfile.Range(Range_DisplacementProfile_Speed_Ejection).Value
    If PressVar.DwellTime.Value = 0 Then
        LastSpeed = DisplacementProfile.Range(Range_DisplacementProfile_Speed_Precomp).Value
    Else
        LastSpeed = DisplacementProfile.Range(Range_DisplacementProfile_Speed_Rise_Precomp).Value
    End If
    CalculateTablePosition5 PositionDifference, PositionDifference + DisplacementToFill, FirstSpeed, LastSpeed, TimeDifference, TimeDifference + TimeToFill, 0, 0, NbPointsToFill
    AverageSpeed = DisplacementToFill / TimeToFill
    MiddleSpeed = FindMiddleSpeed()
    Ratio_Time_Middle = 1 - (Abs(MiddleSpeed - FirstSpeed) + Abs(MiddleSpeed - LastSpeed)) / TimeToFill * Ratio_Time_Init_Middle_Calc
    If Ratio_Time_Middle < Ratio_Time_Init_Middle_Mini Then
        Ratio_Time_Middle = Ratio_Time_Init_Middle_Mini
    End If
    If Ratio_Time_Middle > Ratio_Time_Init_Middle_Maxi Then
        Ratio_Time_Middle = Ratio_Time_Init_Middle_Maxi
    End If
    MaintainSpeed = (AverageSpeed * Ratio_Time_Middle + MiddleSpeed * (1 - Ratio_Time_Middle)) * (1 - Ratio_Speed_Init_Maintain) + AverageSpeed * Ratio_Speed_Init_Maintain
    FirstSpeedChange = Abs(MaintainSpeed - FirstSpeed)
    LastSpeedChange = Abs(MaintainSpeed - LastSpeed)
    
    DisplacementLeft = DisplacementToFill - MaintainSpeed * TimeToFill * Ratio_Time_Middle
    Ratio_Time_First = (1 - Ratio_Time_Middle) * FirstSpeedChange / (FirstSpeedChange + LastSpeedChange)
    Ratio_Time_Last = (1 - Ratio_Time_Middle) * LastSpeedChange / (FirstSpeedChange + LastSpeedChange)
    If (Ratio_Time_Last / Ratio_Time_First) < Ratio_Time_Init_FirstLast_Maxi Then
        Ratio_Time_Last = (1 - Ratio_Time_Middle) * Ratio_Time_Init_FirstLast_Maxi / (1 + Ratio_Time_Init_FirstLast_Maxi)
        Ratio_Time_First = (1 - Ratio_Time_Middle) / (1 + Ratio_Time_Init_FirstLast_Maxi)
    ElseIf (Ratio_Time_First / Ratio_Time_Last) < Ratio_Time_Init_FirstLast_Maxi Then
        Ratio_Time_First = (1 - Ratio_Time_Middle) * Ratio_Time_Init_FirstLast_Maxi / (1 + Ratio_Time_Init_FirstLast_Maxi)
        Ratio_Time_Last = (1 - Ratio_Time_Middle) / (1 + Ratio_Time_Init_FirstLast_Maxi)
    End If
    CoefA = (MaintainSpeed - FirstSpeed) / (Ratio_Time_First * TimeToFill)
    CoefB = FirstSpeed
    DisplacementGlobalFirst = CoefA / 2 * (Ratio_Time_First * TimeToFill) ^ 2 + CoefB * (Ratio_Time_First * TimeToFill)
    CoefA = (LastSpeed - MaintainSpeed) / (Ratio_Time_Last * TimeToFill)
    CoefB = MaintainSpeed
    DisplacementGlobalLast = CoefA / 2 * (Ratio_Time_Last * TimeToFill) ^ 2 + CoefB * (Ratio_Time_Last * TimeToFill)
    DisplacementFillFirst = DisplacementLeft * DisplacementGlobalFirst / (DisplacementGlobalLast + DisplacementGlobalFirst)
    DisplacementFillLast = DisplacementLeft * DisplacementGlobalLast / (DisplacementGlobalLast + DisplacementGlobalFirst)
    
    'Premi|fffd|re partie :
    
    NbPointsToFill = (SysVar.Range(Range_Points_Profil_AvantPrecomp).Value) * Ratio_Points_First_Eject_Precomp
    TimeToFill = (60 / SysVar.Range(Range_Accurate_Speed_Stylcam).Value * 1000 - ReturnedValueForZero.Time + DisplacementProfile.Range(Range_DisplacementProfile_Time_Start_Precomp).Value) * Ratio_Time_First
    DisplacementToFill = DisplacementFillFirst
    CalculateTablePosition5 0, DisplacementToFill, FirstSpeed, MaintainSpeed, 0, TimeToFill, 0, 0, NbPointsToFill
    For i = 0 To NbPointsToFill - 1
        'Temps
        Results.Range(Range_Results_Time_Col & CStr(i + RowDifference)).Value = ReturnTableTime(i) + TimeDifference
        'Position
        Results.Range(Range_Results_Position_Col & CStr(i + RowDifference)).Value = ReturnTablePosition(i) + PositionDifference
        'Temps
        'Results.Range(Range_Results_Time_Col & CStr(i + RowDifference)).Value = TimeDifference + (i) / NbPointsToFill * TimeToFill
        'Position
        'Results.Range(Range_Results_Position_Col & CStr(i + RowDifference)).Value = PositionDifference + (i) / NbPointsToFill * DisplacementToFill
    Next
    RowDifference = RowDifference + NbPointsToFill
    PositionDifference = PositionDifference + DisplacementToFill
    TimeDifference = TimeDifference + TimeToFill
    
    'Deuxi|fffd|me partie
    NbPointsToFill = (SysVar.Range(Range_Points_Profil_AvantPrecomp).Value) * Ratio_Points_Middle_Eject_Precomp
    TimeToFill = (60 / SysVar.Range(Range_Accurate_Speed_Stylcam).Value * 1000 - ReturnedValueForZero.Time + DisplacementProfile.Range(Range_DisplacementProfile_Time_Start_Precomp).Value) * Ratio_Time_Middle
    DisplacementToFill = MaintainSpeed * TimeToFill
    For i = 0 To NbPointsToFill - 1
        'Temps
        Results.Range(Range_Results_Time_Col & CStr(i + RowDifference)).Value = TimeDifference + (i) / NbPointsToFill * TimeToFill
        'Position
        Results.Range(Range_Results_Position_Col & CStr(i + RowDifference)).Value = PositionDifference + (i) / NbPointsToFill * DisplacementToFill
    Next
    RowDifference = RowDifference + NbPointsToFill
    PositionDifference = PositionDifference + DisplacementToFill
    TimeDifference = TimeDifference + TimeToFill
    
    'Troisi|fffd|me partie :
    
    NbPointsToFill = (SysVar.Range(Range_Points_Profil_AvantPrecomp).Value) * Ratio_Points_Last_Eject_Precomp
    TimeToFill = (60 / SysVar.Range(Range_Accurate_Speed_Stylcam).Value * 1000 - ReturnedValueForZero.Time + DisplacementProfile.Range(Range_DisplacementProfile_Time_Start_Precomp).Value) * Ratio_Time_Last
    DisplacementToFill = DisplacementFillLast
    CalculateTablePosition5 0, DisplacementToFill, MaintainSpeed, LastSpeed, 0, TimeToFill, 0, 0, NbPointsToFill
    For i = 0 To NbPointsToFill - 1
        'Temps
        Results.Range(Range_Results_Time_Col & CStr(i + RowDifference)).Value = ReturnTableTime(i) + TimeDifference
        'Position
        Results.Range(Range_Results_Position_Col & CStr(i + RowDifference)).Value = ReturnTablePosition(i) + PositionDifference
        'Temps
        'Results.Range(Range_Results_Time_Col & CStr(i + RowDifference)).Value = TimeDifference + (i) / NbPointsToFill * TimeToFill
        'Position
        'Results.Range(Range_Results_Position_Col & CStr(i + RowDifference)).Value = PositionDifference + (i) / NbPointsToFill * DisplacementToFill
    Next
    RowDifference = RowDifference + NbPointsToFill
    PositionDifference = PositionDifference + DisplacementToFill
    TimeDifference = TimeDifference + TimeToFill
    'Pr|fffd|compression
    If PressVar.DwellTime.Value = 0 Then
        'Ne pas tenir compte du Dwell Time
        NbPointsToFill = SysVar.Range(Range_Points_Profil_Precomp).Value
        TimeToFill = DisplacementProfile.Range(Range_DisplacementProfile_Time_Stop_Precomp).Value - DisplacementProfile.Range(Range_DisplacementProfile_Time_Start_Precomp).Value
        DisplacementToFill = DisplacementProfile.Range(Range_DisplacementProfile_Position_Stop_Precomp).Value - DisplacementProfile.Range(Range_DisplacementProfile_Position_Start_Precomp).Value
        For i = 0 To NbPointsToFill - 1
            'Temps
            Results.Range(Range_Results_Time_Col & CStr(i + RowDifference)).Value = TimeDifference + (i) / NbPointsToFill * TimeToFill
            'Position
            Results.Range(Range_Results_Position_Col & CStr(i + RowDifference)).Value = PositionDifference + (i) / NbPointsToFill * DisplacementToFill
        Next
        RowDifference = RowDifference + NbPointsToFill
        PositionDifference = PositionDifference + DisplacementToFill
        TimeDifference = TimeDifference + TimeToFill
    Else
        'Tenir compte du Dwell Time
        'Avant Dwell Time
        NbPointsToFill = SysVar.Range(Range_Points_Profil_Precomp).Value * Ratio_Points_Before_DwellTime
        TimeToFill = DisplacementProfile.Range(Range_DisplacementProfile_Time_Start_DT_Precomp).Value - DisplacementProfile.Range(Range_DisplacementProfile_Time_Start_Precomp).Value
        DisplacementToFill = DisplacementProfile.Range(Range_DisplacementProfile_Position_Start_DT_Precomp).Value - DisplacementProfile.Range(Range_DisplacementProfile_Position_Start_Precomp).Value
        For i = 0 To NbPointsToFill - 1
            'Temps
            Results.Range(Range_Results_Time_Col & CStr(i + RowDifference)).Value = TimeDifference + (i) / NbPointsToFill * TimeToFill
            'Position
            Results.Range(Range_Results_Position_Col & CStr(i + RowDifference)).Value = PositionDifference + (i) / NbPointsToFill * DisplacementToFill
        Next
        RowDifference = RowDifference + NbPointsToFill
        PositionDifference = PositionDifference + DisplacementToFill
        TimeDifference = TimeDifference + TimeToFill
        'Pendant Dwell Time
        NbPointsToFill = SysVar.Range(Range_Points_Profil_Precomp).Value * Ratio_Points_DwellTime
        TimeToFill = DisplacementProfile.Range(Range_DisplacementProfile_Time_Stop_DT_Precomp).Value - DisplacementProfile.Range(Range_DisplacementProfile_Time_Start_DT_Precomp).Value
        DisplacementToFill = DisplacementProfile.Range(Range_DisplacementProfile_Position_Stop_DT_Precomp).Value - DisplacementProfile.Range(Range_DisplacementProfile_Position_Start_DT_Precomp).Value
        
        CalculateTablePosition5 0, DisplacementToFill, DisplacementProfile.Range(Range_DisplacementProfile_Speed_Rise_Precomp).Value, DisplacementProfile.Range(Range_DisplacementProfile_Speed_Down_Precomp).Value, 0, TimeToFill, 0, 0, NbPointsToFill
        
        For i = 0 To NbPointsToFill - 1
            'Temps
            Results.Range(Range_Results_Time_Col & CStr(i + RowDifference)).Value = ReturnTableTime(i) + TimeDifference
            'Position
            Results.Range(Range_Results_Position_Col & CStr(i + RowDifference)).Value = ReturnTablePosition(i) + PositionDifference
            'Temps
            'Results.Range(Range_Results_Time_Col & CStr(i + RowDifference)).Value = TimeDifference + (i) / NbPointsToFill * TimeToFill
            'Position
            'Results.Range(Range_Results_Position_Col & CStr(i + RowDifference)).Value = PositionDifference + (i) / NbPointsToFill * DisplacementToFill
        Next
        RowDifference = RowDifference + NbPointsToFill
        PositionDifference = PositionDifference + DisplacementToFill
        TimeDifference = TimeDifference + TimeToFill
        'Apr|fffd|s Dwell Time
        NbPointsToFill = SysVar.Range(Range_Points_Profil_Precomp).Value * Ratio_Points_After_DwellTime
        TimeToFill = DisplacementProfile.Range(Range_DisplacementProfile_Time_Stop_Precomp).Value - DisplacementProfile.Range(Range_DisplacementProfile_Time_Stop_DT_Precomp).Value
        DisplacementToFill = DisplacementProfile.Range(Range_DisplacementProfile_Position_Stop_Precomp).Value - DisplacementProfile.Range(Range_DisplacementProfile_Position_Stop_DT_Precomp).Value
        For i = 0 To NbPointsToFill - 1
            'Temps
            Results.Range(Range_Results_Time_Col & CStr(i + RowDifference)).Value = TimeDifference + (i) / NbPointsToFill * TimeToFill
            'Position
            Results.Range(Range_Results_Position_Col & CStr(i + RowDifference)).Value = PositionDifference + (i) / NbPointsToFill * DisplacementToFill
        Next
        RowDifference = RowDifference + NbPointsToFill
        PositionDifference = PositionDifference + DisplacementToFill
        TimeDifference = TimeDifference + TimeToFill
    
    End If
    'Pr|fffd|compression - Compression
    
    'Pr|fffd|-calcul
    NbPointsToFill = SysVar.Range(Range_Points_Profil_EntrePrecompComp).Value
    TimeToFill = DisplacementProfile.Range(Range_DisplacementProfile_Time_Start_Comp).Value - DisplacementProfile.Range(Range_DisplacementProfile_Time_Stop_Precomp).Value
    DisplacementToFill = DisplacementProfile.Range(Range_DisplacementProfile_Position_Start_Comp).Value - DisplacementProfile.Range(Range_DisplacementProfile_Position_Stop_Precomp).Value
    If PressVar.DwellTime.Value = 0 Then
        FirstSpeed = DisplacementProfile.Range(Range_DisplacementProfile_Speed_Precomp).Value
        LastSpeed = DisplacementProfile.Range(Range_DisplacementProfile_Speed_Comp).Value
    Else
        FirstSpeed = DisplacementProfile.Range(Range_DisplacementProfile_Speed_Down_Precomp).Value
        LastSpeed = DisplacementProfile.Range(Range_DisplacementProfile_Speed_Rise_Comp).Value
    End If
    CalculateTablePosition5 PositionDifference, PositionDifference + DisplacementToFill, FirstSpeed, LastSpeed, TimeDifference, TimeDifference + TimeToFill, 0, 0, NbPointsToFill
    AverageSpeed = DisplacementToFill / TimeToFill
    MiddleSpeed = FindMiddleSpeed()
    Ratio_Time_Middle = 1 - (Abs(MiddleSpeed - FirstSpeed) + Abs(MiddleSpeed - LastSpeed)) / TimeToFill * Ratio_Time_Middle_Calc
    If Ratio_Time_Middle < Ratio_Time_Middle_Mini Then
        Ratio_Time_Middle = Ratio_Time_Middle_Mini
    End If
    If Ratio_Time_Middle > Ratio_Time_Middle_Maxi Then
        Ratio_Time_Middle = Ratio_Time_Middle_Maxi
    End If
    MaintainSpeed = AverageSpeed * Ratio_Time_Middle + MiddleSpeed * (1 - Ratio_Time_Middle)
    If MaintainSpeed * FirstSpeed < 0 Then
        MaintainSpeed = 0
        Ratio_Time_Middle = 1 - (Abs(MaintainSpeed - FirstSpeed) + Abs(MaintainSpeed - LastSpeed)) / TimeToFill * Ratio_Time_Middle_Calc
        If Ratio_Time_Middle < Ratio_Time_Middle_Mini Then
            Ratio_Time_Middle = Ratio_Time_Middle_Mini
        End If
        If Ratio_Time_Middle > Ratio_Time_Middle_Maxi Then
            Ratio_Time_Middle = Ratio_Time_Middle_Maxi
        End If
    End If
    FirstSpeedChange = Abs(MaintainSpeed - FirstSpeed)
    LastSpeedChange = Abs(MaintainSpeed - LastSpeed)
    
    DisplacementLeft = DisplacementToFill - MaintainSpeed * TimeToFill * Ratio_Time_Middle
    Ratio_Time_First = (1 - Ratio_Time_Middle) * FirstSpeedChange / (FirstSpeedChange + LastSpeedChange)
    Ratio_Time_Last = (1 - Ratio_Time_Middle) * LastSpeedChange / (FirstSpeedChange + LastSpeedChange)
    If (Ratio_Time_Last / Ratio_Time_First) < Ratio_Time_FirstLast_Maxi Then
        Ratio_Time_Last = (1 - Ratio_Time_Middle) * Ratio_Time_FirstLast_Maxi / (1 + Ratio_Time_FirstLast_Maxi)
        Ratio_Time_First = (1 - Ratio_Time_Middle) / (1 + Ratio_Time_FirstLast_Maxi)
    ElseIf (Ratio_Time_First / Ratio_Time_Last) < Ratio_Time_FirstLast_Maxi Then
        Ratio_Time_First = (1 - Ratio_Time_Middle) * Ratio_Time_FirstLast_Maxi / (1 + Ratio_Time_FirstLast_Maxi)
        Ratio_Time_Last = (1 - Ratio_Time_Middle) / (1 + Ratio_Time_FirstLast_Maxi)
    End If
    CoefA = (MaintainSpeed - FirstSpeed) / (Ratio_Time_First * TimeToFill)
    CoefB = FirstSpeed
    DisplacementGlobalFirst = CoefA / 2 * (Ratio_Time_First * TimeToFill) ^ 2 + CoefB * (Ratio_Time_First * TimeToFill)
    CoefA = (LastSpeed - MaintainSpeed) / (Ratio_Time_Last * TimeToFill)
    CoefB = MaintainSpeed
    DisplacementGlobalLast = CoefA / 2 * (Ratio_Time_Last * TimeToFill) ^ 2 + CoefB * (Ratio_Time_Last * TimeToFill)
    DisplacementFillFirst = DisplacementLeft * DisplacementGlobalFirst / (DisplacementGlobalLast + DisplacementGlobalFirst)
    DisplacementFillLast = DisplacementLeft * DisplacementGlobalLast / (DisplacementGlobalLast + DisplacementGlobalFirst)
    
    'Premi|fffd|re partie :
    
    NbPointsToFill = (SysVar.Range(Range_Points_Profil_EntrePrecompComp).Value) * Ratio_Points_First_PreComp_Comp
    TimeToFill = (DisplacementProfile.Range(Range_DisplacementProfile_Time_Start_Comp).Value - DisplacementProfile.Range(Range_DisplacementProfile_Time_Stop_Precomp).Value) * Ratio_Time_First
    DisplacementToFill = DisplacementFillFirst
    CalculateTablePosition5 0, DisplacementToFill, FirstSpeed, MaintainSpeed, 0, TimeToFill, 0, 0, NbPointsToFill
    For i = 0 To NbPointsToFill - 1
        'Temps
        Results.Range(Range_Results_Time_Col & CStr(i + RowDifference)).Value = ReturnTableTime(i) + TimeDifference
        'Position
        Results.Range(Range_Results_Position_Col & CStr(i + RowDifference)).Value = ReturnTablePosition(i) + PositionDifference
        'Temps
        'Results.Range(Range_Results_Time_Col & CStr(i + RowDifference)).Value = TimeDifference + (i) / NbPointsToFill * TimeToFill
        'Position
        'Results.Range(Range_Results_Position_Col & CStr(i + RowDifference)).Value = PositionDifference + (i) / NbPointsToFill * DisplacementToFill
    Next
    RowDifference = RowDifference + NbPointsToFill
    PositionDifference = PositionDifference + DisplacementToFill
    TimeDifference = TimeDifference + TimeToFill
    
    'Deuxi|fffd|me partie
    NbPointsToFill = (SysVar.Range(Range_Points_Profil_EntrePrecompComp).Value) * Ratio_Points_Middle_PreComp_Comp
    TimeToFill = (DisplacementProfile.Range(Range_DisplacementProfile_Time_Start_Comp).Value - DisplacementProfile.Range(Range_DisplacementProfile_Time_Stop_Precomp).Value) * Ratio_Time_Middle
    DisplacementToFill = MaintainSpeed * TimeToFill
    For i = 0 To NbPointsToFill - 1
        'Temps
        Results.Range(Range_Results_Time_Col & CStr(i + RowDifference)).Value = TimeDifference + (i) / NbPointsToFill * TimeToFill
        'Position
        Results.Range(Range_Results_Position_Col & CStr(i + RowDifference)).Value = PositionDifference + (i) / NbPointsToFill * DisplacementToFill
    Next
    RowDifference = RowDifference + NbPointsToFill
    PositionDifference = PositionDifference + DisplacementToFill
    TimeDifference = TimeDifference + TimeToFill
    
    'Troisi|fffd|me partie :
    
    NbPointsToFill = (SysVar.Range(Range_Points_Profil_EntrePrecompComp).Value) * Ratio_Points_Last_PreComp_Comp
    TimeToFill = (DisplacementProfile.Range(Range_DisplacementProfile_Time_Start_Comp).Value - DisplacementProfile.Range(Range_DisplacementProfile_Time_Stop_Precomp).Value) * Ratio_Time_Last
    DisplacementToFill = DisplacementFillLast
    CalculateTablePosition5 0, DisplacementToFill, MaintainSpeed, LastSpeed, 0, TimeToFill, 0, 0, NbPointsToFill
    For i = 0 To NbPointsToFill - 1
        'Temps
        Results.Range(Range_Results_Time_Col & CStr(i + RowDifference)).Value = ReturnTableTime(i) + TimeDifference
        'Position
        Results.Range(Range_Results_Position_Col & CStr(i + RowDifference)).Value = ReturnTablePosition(i) + PositionDifference
        'Temps
        'Results.Range(Range_Results_Time_Col & CStr(i + RowDifference)).Value = TimeDifference + (i) / NbPointsToFill * TimeToFill
        'Position
        'Results.Range(Range_Results_Position_Col & CStr(i + RowDifference)).Value = PositionDifference + (i) / NbPointsToFill * DisplacementToFill
    Next
    RowDifference = RowDifference + NbPointsToFill
    PositionDifference = PositionDifference + DisplacementToFill
    TimeDifference = TimeDifference + TimeToFill
    'Compression
    If PressVar.DwellTime.Value = 0 Then
        'Ne pas tenir compte du Dwell Time
        NbPointsToFill = SysVar.Range(Range_Points_Profil_Comp).Value
        TimeToFill = DisplacementProfile.Range(Range_DisplacementProfile_Time_Stop_Comp).Value - DisplacementProfile.Range(Range_DisplacementProfile_Time_Start_Comp).Value
        DisplacementToFill = DisplacementProfile.Range(Range_DisplacementProfile_Position_Stop_Comp).Value - DisplacementProfile.Range(Range_DisplacementProfile_Position_Start_Comp).Value
        For i = 0 To NbPointsToFill - 1
            'Temps
            Results.Range(Range_Results_Time_Col & CStr(i + RowDifference)).Value = TimeDifference + (i) / NbPointsToFill * TimeToFill
            'Position
            Results.Range(Range_Results_Position_Col & CStr(i + RowDifference)).Value = PositionDifference + (i) / NbPointsToFill * DisplacementToFill
        Next
        RowDifference = RowDifference + NbPointsToFill
        PositionDifference = PositionDifference + DisplacementToFill
        TimeDifference = TimeDifference + TimeToFill
    Else
        'Avant Dwell Time
        NbPointsToFill = SysVar.Range(Range_Points_Profil_Comp).Value * Ratio_Points_Before_DwellTime
        TimeToFill = DisplacementProfile.Range(Range_DisplacementProfile_Time_Start_DT_Comp).Value - DisplacementProfile.Range(Range_DisplacementProfile_Time_Start_Comp).Value
        DisplacementToFill = DisplacementProfile.Range(Range_DisplacementProfile_Position_Start_DT_Comp).Value - DisplacementProfile.Range(Range_DisplacementProfile_Position_Start_Comp).Value
        For i = 0 To NbPointsToFill - 1
            'Temps
            Results.Range(Range_Results_Time_Col & CStr(i + RowDifference)).Value = TimeDifference + (i) / NbPointsToFill * TimeToFill
            'Position
            Results.Range(Range_Results_Position_Col & CStr(i + RowDifference)).Value = PositionDifference + (i) / NbPointsToFill * DisplacementToFill
        Next
        RowDifference = RowDifference + NbPointsToFill
        PositionDifference = PositionDifference + DisplacementToFill
        TimeDifference = TimeDifference + TimeToFill
        'Pendant Dwell Time
        NbPointsToFill = SysVar.Range(Range_Points_Profil_Comp).Value * Ratio_Points_DwellTime
        TimeToFill = DisplacementProfile.Range(Range_DisplacementProfile_Time_Stop_DT_Comp).Value - DisplacementProfile.Range(Range_DisplacementProfile_Time_Start_DT_Comp).Value
        DisplacementToFill = DisplacementProfile.Range(Range_DisplacementProfile_Position_Stop_DT_Comp).Value - DisplacementProfile.Range(Range_DisplacementProfile_Position_Start_DT_Comp).Value
        
        CalculateTablePosition5 0, DisplacementToFill, DisplacementProfile.Range(Range_DisplacementProfile_Speed_Rise_Comp).Value, DisplacementProfile.Range(Range_DisplacementProfile_Speed_Down_Comp).Value, 0, TimeToFill, 0, 0, NbPointsToFill
        
        For i = 0 To NbPointsToFill - 1
            'Temps
            Results.Range(Range_Results_Time_Col & CStr(i + RowDifference)).Value = ReturnTableTime(i) + TimeDifference
            'Position
            Results.Range(Range_Results_Position_Col & CStr(i + RowDifference)).Value = ReturnTablePosition(i) + PositionDifference
            'Temps
            'Results.Range(Range_Results_Time_Col & CStr(i + RowDifference)).Value = TimeDifference + (i) / NbPointsToFill * TimeToFill
            'Position
            'Results.Range(Range_Results_Position_Col & CStr(i + RowDifference)).Value = PositionDifference + (i) / NbPointsToFill * DisplacementToFill
        Next
        RowDifference = RowDifference + NbPointsToFill
        PositionDifference = PositionDifference + DisplacementToFill
        TimeDifference = TimeDifference + TimeToFill
        'Apr|fffd|s Dwell Time
        NbPointsToFill = SysVar.Range(Range_Points_Profil_Comp).Value * Ratio_Points_After_DwellTime
        TimeToFill = DisplacementProfile.Range(Range_DisplacementProfile_Time_Stop_Comp).Value - DisplacementProfile.Range(Range_DisplacementProfile_Time_Stop_DT_Comp).Value
        DisplacementToFill = DisplacementProfile.Range(Range_DisplacementProfile_Position_Stop_Comp).Value - DisplacementProfile.Range(Range_DisplacementProfile_Position_Stop_DT_Comp).Value
        For i = 0 To NbPointsToFill - 1
            'Temps
            Results.Range(Range_Results_Time_Col & CStr(i + RowDifference)).Value = TimeDifference + (i) / NbPointsToFill * TimeToFill
            'Position
            Results.Range(Range_Results_Position_Col & CStr(i + RowDifference)).Value = PositionDifference + (i) / NbPointsToFill * DisplacementToFill
        Next
        RowDifference = RowDifference + NbPointsToFill
        PositionDifference = PositionDifference + DisplacementToFill
        TimeDifference = TimeDifference + TimeToFill
    End If
    'Compression-Ejection
    
    'Calcul du changement de vitesse impos|fffd|
    NbPointsToFill = SysVar.Range(Range_Points_Profil_EntreCompEjection).Value
    TimeToFill = DisplacementProfile.Range(Range_DisplacementProfile_Time_Start_Ejection).Value - DisplacementProfile.Range(Range_DisplacementProfile_Time_Stop_Comp).Value
    DisplacementToFill = DisplacementProfile.Range(Range_DisplacementProfile_Position_Start_Ejection).Value - DisplacementProfile.Range(Range_DisplacementProfile_Position_Stop_Comp).Value
    If PressVar.DwellTime.Value = 0 Then
        FirstSpeed = DisplacementProfile.Range(Range_DisplacementProfile_Speed_Comp).Value
    Else
        FirstSpeed = DisplacementProfile.Range(Range_DisplacementProfile_Speed_Down_Comp).Value
    End If
    LastSpeed = DisplacementProfile.Range(Range_DisplacementProfile_Speed_Ejection).Value
    CalculateTablePosition5 0, DisplacementToFill, FirstSpeed, LastSpeed, 0, TimeToFill, 0, 0, NbPointsToFill
    For i = 0 To NbPointsToFill - 1
        'Temps
        Results.Range(Range_Results_Time_Col & CStr(i + RowDifference)).Value = ReturnTableTime(i) + TimeDifference
        'Position
        Results.Range(Range_Results_Position_Col & CStr(i + RowDifference)).Value = ReturnTablePosition(i) + PositionDifference
        'Temps
        'Results.Range(Range_Results_Time_Col & CStr(i + RowDifference)).Value = TimeDifference + (i) / NbPointsToFill * TimeToFill
        'Position
        'Results.Range(Range_Results_Position_Col & CStr(i + RowDifference)).Value = PositionDifference + (i) / NbPointsToFill * DisplacementToFill
    Next
    RowDifference = RowDifference + NbPointsToFill
    PositionDifference = PositionDifference + DisplacementToFill
    TimeDifference = TimeDifference + TimeToFill
    'Ejection
    NbPointsToFill = SysVar.Range(Range_Points_Profil_Ejection).Value
    TimeToFill = DisplacementProfile.Range(Range_DisplacementProfile_Time_Stop_Ejection).Value - DisplacementProfile.Range(Range_DisplacementProfile_Time_Start_Ejection).Value
    DisplacementToFill = DisplacementProfile.Range(Range_DisplacementProfile_Position_Stop_Ejection).Value - DisplacementProfile.Range(Range_DisplacementProfile_Position_Start_Ejection).Value
    For i = 0 To NbPointsToFill - 1
        'Temps
        Results.Range(Range_Results_Time_Col & CStr(i + RowDifference)).Value = TimeDifference + (i) / NbPointsToFill * TimeToFill
        'Position
        Results.Range(Range_Results_Position_Col & CStr(i + RowDifference)).Value = PositionDifference + (i) / NbPointsToFill * DisplacementToFill
    Next
    RowDifference = RowDifference + NbPointsToFill
    PositionDifference = PositionDifference + DisplacementToFill
    TimeDifference = TimeDifference + TimeToFill
    'Apr|fffd|s Ejection
    
    'Le plus chiant d'entre tous... avec l'avant pr|fffd|compression !!!
    'Cherchez pas |fffd| comprendre, moi m|fffd|me je commence |fffd| ne plus rien y comprendre ;-)
    NbPointsToFill = SysVar.Range(Range_Points_Profil_ApresEjection).Value - 1
    TimeToFill = 60 / SysVar.Range(Range_Accurate_Speed_Stylcam).Value * 1000 - TimeDifference
    DisplacementToFill = SysVar.Range(Range_Degrees_For_1_Cycle).Value - DisplacementProfile.Range(Range_DisplacementProfile_Position_Stop_Ejection).Value
    
    For i = 0 To NbPointsToFill - 1
        'Temps
        Results.Range(Range_Results_Time_Col & CStr(i + RowDifference)).Value = TimeDifference + (i) / NbPointsToFill * TimeToFill
        'Position
        Results.Range(Range_Results_Position_Col & CStr(i + RowDifference)).Value = PositionDifference + (i) / NbPointsToFill * DisplacementToFill
    Next
    RowDifference = RowDifference + NbPointsToFill
    PositionDifference = PositionDifference + DisplacementToFill
    TimeDifference = TimeDifference + TimeToFill
    'Dernier point
    Results.Range(Range_Results_Time_Col & CStr(RowDifference)).Value = 60 / SysVar.Range(Range_Accurate_Speed_Stylcam).Value * 1000
    Results.Range(Range_Results_Position_Col & CStr(RowDifference)).Value = SysVar.Range(Range_Degrees_For_1_Cycle).Value
    RowDifference = RowDifference + 1
    MaxSpeed = FindMaxSpeed(Range_Results_First_Row_To_Fill, RowDifference - 1)
    Resize Range_Results_First_Row_To_Fill, RowDifference - 1
    'Affichage des vitesses
    For i = Range_Results_First_Row_To_Fill + 1 To RowDifference - 1
        Results.Range(Range_Results_Speed_Col & CStr(i)).Value = (Results.Range(Range_Results_Position_Col & CStr(i)).Value - Results.Range(Range_Results_Position_Col & CStr(i - 1)).Value) / (Results.Range(Range_Results_Time_Col & CStr(i)).Value - Results.Range(Range_Results_Time_Col & CStr(i - 1)).Value)
    Next
    Results.Range(Range_Results_Speed_Col & CStr(Range_Results_First_Row_To_Fill)).Value = Results.Range(Range_Results_Speed_Col & CStr(RowDifference - 1)).Value
    'Affichage des acc|fffd|l|fffd|rations
    For i = Range_Results_First_Row_To_Fill + 1 To RowDifference - 1
        Results.Range(Range_Results_Acceleration_Col & CStr(i)).Value = (Results.Range(Range_Results_Speed_Col & CStr(i)).Value - Results.Range(Range_Results_Speed_Col & CStr(i - 1)).Value) / (Results.Range(Range_Results_Time_Col & CStr(i)).Value - Results.Range(Range_Results_Time_Col & CStr(i - 1)).Value)
    Next
    Results.Range(Range_Results_Acceleration_Col & CStr(Range_Results_First_Row_To_Fill)).Value = Results.Range(Range_Results_Acceleration_Col & CStr(RowDifference - 1)).Value
    Results.Range(Range_Results_Time_Col & CStr(Range_Results_First_Row_To_Fill) & ":" & Range_Results_Acceleration_Col & CStr(RowDifference)).NumberFormat = "0.00000"
    'Actualisation des graphes :
    'Position
    Results.ChartObjects.Item(Range_Results_Position_Graph).Activate
    ActiveChart.SeriesCollection(1).XValues = "=" & Results.Name & "!R" & CStr(Range_Results_First_Row_To_Fill) & "C" & CStr(Colonne_S_To_L(Range_Results_Time_Col)) & ":R" & CStr(RowDifference - 1) & "C" & CStr(Colonne_S_To_L(Range_Results_Time_Col))
    ActiveChart.SeriesCollection(1).Values = "=" & Results.Name & "!R" & CStr(Range_Results_First_Row_To_Fill) & "C" & CStr(Colonne_S_To_L(Range_Results_Position_Col)) & ":R" & CStr(RowDifference - 1) & "C" & CStr(Colonne_S_To_L(Range_Results_Position_Col))
    'Vitesse
    Results.ChartObjects.Item(Range_Results_Speed_Graph).Activate
    ActiveChart.SeriesCollection(1).XValues = "=" & Results.Name & "!R" & CStr(Range_Results_First_Row_To_Fill) & "C" & CStr(Colonne_S_To_L(Range_Results_Time_Col)) & ":R" & CStr(RowDifference - 1) & "C" & CStr(Colonne_S_To_L(Range_Results_Time_Col))
    ActiveChart.SeriesCollection(1).Values = "=" & Results.Name & "!R" & CStr(Range_Results_First_Row_To_Fill) & "C" & CStr(Colonne_S_To_L(Range_Results_Speed_Col)) & ":R" & CStr(RowDifference - 1) & "C" & CStr(Colonne_S_To_L(Range_Results_Speed_Col))
    'Acc|fffd|l|fffd|ration
    Results.ChartObjects.Item(Range_Results_Acceleration_Graph).Activate
    ActiveChart.SeriesCollection(1).XValues = "=" & Results.Name & "!R" & CStr(Range_Results_First_Row_To_Fill) & "C" & CStr(Colonne_S_To_L(Range_Results_Time_Col)) & ":R" & CStr(RowDifference - 1) & "C" & CStr(Colonne_S_To_L(Range_Results_Time_Col))
    ActiveChart.SeriesCollection(1).Values = "=" & Results.Name & "!R" & CStr(Range_Results_First_Row_To_Fill) & "C" & CStr(Colonne_S_To_L(Range_Results_Acceleration_Col)) & ":R" & CStr(RowDifference - 1) & "C" & CStr(Colonne_S_To_L(Range_Results_Acceleration_Col))
    Results.Range("A1").Select
    Results.Range(Range_Results_Time_Col & CStr(Range_Results_First_Row_To_Fill)).Select
    If Not SilentMode And SaveFilename = "" Then
        frmSaveAs.Show 'vbModal
        If Filename <> "" Then
            SaveProfile Filename, RowDifference - Range_Results_First_Row_To_Fill
        End If
        If DirectCamFileName <> "" Then
            SaveDirectCam DirectCamFileName, RowDifference - Range_Results_First_Row_To_Fill
        End If
        MsgBox "Vitesse maxi : " & CStr(Int(MaxSpeed * 10) / 10), vbOKOnly
    ElseIf SaveFilename <> "" Then
        SaveProfile SaveFilename, RowDifference - Range_Results_First_Row_To_Fill
    End If
    If SilentMode Then
        PressVar.Range(Range_Max_Speed).Value = Int(MaxSpeed * 10) / 10
    End If
End Function

Private Function Resize(MinTable As Long, MaxTable As Long)
    'Redimensionnement des tableaux de r|fffd|sultat
    Dim i As Long, j As Long
    Dim MinValue As Long, MaxValue As Long
    Dim RealNumberOfValues As Long
    Dim NewValue As Variant
    For i = MinTable To MaxTable
        'Initialisations Moyennage
        Results.Range(Range_Results_Time_Col & CStr(i)).Value = Results.Range(Range_Results_Time_Col & CStr(i)).Value * SysVar.Range(Range_Accurate_Speed_Stylcam).Value / Rattrapage_Temps
    Next
End Function


Attribute VB_Name = "ModSave"
Sub LaunchCalculus()
    Dim SaveFilename As String
    'Lancement du calcul du profil de came
    'On Error GoTo ErrorHandler
    Application.ScreenUpdating = False
    'Cr|fffd|ation Table machine
    'CreateTableMachineProfile
    'Cr|fffd|ation Tableau profil came directe
    CreateTableDirectCam
    'Cr|fffd|ation du tableau de Profil de came
    SaveFilename = PressVar.Range(Range_Save_Filename).Text
    CreateTableResultsV2 SaveFilename, True
    GoTo EndOfCalculus
ErrorHandler:
    'Si une erreur est survenue
EndOfCalculus:
    Application.ScreenUpdating = True
End Sub

Public Function SaveProfile(ProfileFilename As String, NumberOfPoints As Long)
    'Ecrit le fichier de profils
    Dim WriteFile As Integer
    Dim Time As String
    Dim Position As String
    WriteFile = FreeFile
    If InStr(ProfileFilename, Directory_Separator) = 0 Then
        Open ThisWorkbook.Path & Directory_Separator & ProfileFilename For Output As #WriteFile
    Else
        Open ProfileFilename For Output As #WriteFile
    End If
    For i = 0 To NumberOfPoints - 1
        Time = TranslateNumberForSaving(CDbl(Results.Range(Range_Results_Time_Col & CStr(Range_Results_First_Row_To_Fill + i)).Text))
        Position = TranslateNumberForSaving(CDbl(Results.Range(Range_Results_Position_Col & CStr(Range_Results_First_Row_To_Fill + i)).Text))
        Print #WriteFile, Time & vbTab & Position
    Next
    Close #WriteFile
End Function

Public Function SaveDirectCam(ProfileFilename As String, NumberOfPoints As Long)
    'Ecrit le fichier de profils
    Dim WriteFile As Integer
    Dim Time As String
    Dim Position As String
    WriteFile = FreeFile
    Open ThisWorkbook.Path & Directory_Separator & ProfileFilename For Output As #WriteFile
    For i = 0 To NumberOfPoints - 1
        Time = TranslateNumberForSaving(CDbl(DirectCamProfile.Range(Range_DirectCam_Time_Col & CStr(Range_DirectCam_First_Row_To_Fill + i)).Text))
        Position = TranslateNumberForSaving(CDbl(DirectCamProfile.Range(Range_DirectCam_Position_Col & CStr(Range_DirectCam_First_Row_To_Fill + i)).Text))
        Print #WriteFile, Time & vbTab & Position
    Next
    Close #WriteFile
End Function

Private Function TranslateNumberForSaving(Number As Double) As String
    'Traduit un nombre pour qu'il soit affich|fffd| dans le profil des courbes
    Dim NumberToTranslate As String
    Dim TranslatedNumber As String
    Dim DigitToCheck As String
    Dim IsDotFound As Boolean
    Dim DigitsAfterDot As Integer
    DigitsAfterDot = 0
    NumberToTranslate = CStr(Number)
    IsDotFound = False
    If Mid$(NumberToTranslate, 1, 1) = "-" Then
        TranslatedNumber = "-"
    Else
        TranslatedNumber = ""
    End If
    While (NumberToTranslate <> "")
        DigitToCheck = Mid(NumberToTranslate, 1, 1)
        If Asc(DigitToCheck) >= Asc("0") And Asc(DigitToCheck) <= Asc("9") Then
            'S'il s'agit d'un chiffre
            If IsDotFound And Len(TranslatedNumber) < Size_of_Number_In_Profile_File Then
                'On |fffd|crit le chiffre si la taille maxi n'est pas atteinte
                '(en sachant qu'une virgule a |fffd|t|fffd| trouv|fffd|e)
                DigitsAfterDot = DigitsAfterDot + 1
                TranslatedNumber = TranslatedNumber & DigitToCheck
            ElseIf IsDotFound And Len(TranslatedNumber) >= Size_of_Number_In_Profile_File Then
                'On ne fait rien dans ce cas
            ElseIf DigitsAfterDot < Max_Digits_After_Dot Then
                'Si le nombre de chiffre apr|fffd|s la virgule n'a pas d|fffd|pass|fffd| le maxi
                If DigitsAfterDot = Max_Digits_After_Dot - 1 Then
                    'Approximation
                    If Mid(NumberToTranslate, 2, 1) >= "5" Then
                        TranslatedNumber = TranslatedNumber & Chr(Asc(DigitToCheck) + 1)
                    Else
                        TranslatedNumber = TranslatedNumber & DigitToCheck
                    End If
                Else
                    TranslatedNumber = TranslatedNumber & DigitToCheck
                End If
                If IsDotFound Then
                    DigitsAfterDot = DigitsAfterDot + 1
                End If
            End If
        ElseIf DigitToCheck = "." Or DigitToCheck = "," Then
            'S'il s'agit d'une virgule
            If Len(TranslatedNumber) < Size_of_Number_In_Profile_File Then
                TranslatedNumber = TranslatedNumber & Dot_Char
            End If
            IsDotFound = True
        End If
        NumberToTranslate = Mid(NumberToTranslate, 2)
    Wend
    If Len(TranslatedNumber) < Size_of_Number_In_Profile_File Then
        'On rajoute des caract|fffd|res
        'On regarde d'abord si on peut compl|fffd|ter par des chiffres :
        If Not IsDotFound Then
            TranslatedNumber = TranslatedNumber & Dot_Char
        End If
        While Len(TranslatedNumber) < Size_of_Number_In_Profile_File And DigitsAfterDot < Max_Digits_After_Dot
            TranslatedNumber = TranslatedNumber & "0"
            DigitsAfterDot = DigitsAfterDot + 1
        Wend
        'Enfin, on compl|fffd|te avec des espaces :-p
        While Len(TranslatedNumber) < Size_of_Number_In_Profile_File
            TranslatedNumber = " " & TranslatedNumber
        Wend
    End If
    TranslateNumberForSaving = TranslatedNumber
End Function

Attribute VB_Name = "ModSheets"
'Feuille "Variables Presse"

Public Const Range_Normal_Speed = "B5"
Public Const Range_Max_Speed = "B6"
Public Const Range_Diameter_PunchAxis = "B7"
Public Const Range_Number_Punches = "B8"
Public Const Range_Number_Stations = "B9"
Public Const Range_Ratio_Speed = "B10"

Public Const Range_Save_Filename = "F3"

Public Const Range_Angle_DCY_Pre = "B13"
Public Const Range_Angle_Pre_Comp = "B14"
Public Const Range_Angle_Comp_BeginEjection = "B15"
Public Const Range_Angle_Comp_EndEjection = "B16"

Public Const Range_Diam_Precomp = "B19"
Public Const Range_Diam_Comp = "B20"
Public Const Range_Height_Precomp = "B21"
Public Const Range_Height_Comp = "B22"

Public Const Range_Height_FillIn = "B25"
Public Const Range_EntreFer = "B26"

Public Const Range_Diameter_Head_Shape = "B29"
Public Const Range_Diameter_Dwell = "B30"

'Feuille "Variables syst|fffd|mes"

Public Const Range_NbPoints_Precomp = "B7"
Public Const Range_NbPoints_Precomp_Comp = "B8"
Public Const Range_NbPoints_Comp = "B9"
Public Const Range_NbPoints_Comp_BeginEjection = "B10"
Public Const Range_NbPoints_Ejection = "B11"

Public Const Range_Reduction_Ratio = "B14"
Public Const Range_Degrees_For_1_Cycle = "B16"

Public Const Range_Accurate_Speed_Stylcam = "B20"
Public Const Range_Max_Speed_Stylcam = "B21"

Public Const Range_Points_Profil_AvantPrecomp = "B28"
Public Const Range_Points_Profil_Precomp = "B29"
Public Const Range_Points_Profil_EntrePrecompComp = "B30"
Public Const Range_Points_Profil_Comp = "B31"
Public Const Range_Points_Profil_EntreCompEjection = "B32"
Public Const Range_Points_Profil_Ejection = "B33"
Public Const Range_Points_Profil_ApresEjection = "B34"
Public Const Range_Points_Profil_NbPoints = "B36"


'Feuille "Calculs profil machine"

Public Const Range_NormalSpeed_Col = "B"
Public Const Range_MaxSpeed_Col = "E"

Public Const Range_PreComp_Time = "5"
Public Const Range_Begin_Precomp = "6"
Public Const Range_End_Precomp = "7"

Public Const Range_Comp_Time = "14"
Public Const Range_Begin_Comp = "15"
Public Const Range_End_Comp = "16"

Public Const Range_Ejection_Time = "23"
Public Const Range_Begin_Ejection = "24"
Public Const Range_End_Ejection = "25"

'Feuille Profile Machine
Public Const Range_MachineProfile_NormalTime_Col = "A"
Public Const Range_MachineProfile_UpperPunchNormal_Col = "C"
Public Const Range_MachineProfile_LowerPunchNormal_Col = "D"
Public Const Range_MachineProfile_MaxTime_Col = "F"
Public Const Range_MachineProfile_UpperPunchMax_Col = "H"
Public Const Range_MachineProfile_LowerPunchMax_Col = "I"
Public Const Range_MachineProfile_BeginRow = 3

'Feuille Profile D|fffd|placement Came
Public Const Range_DisplacementProfile_Position_Start_Precomp = "C7"
Public Const Range_DisplacementProfile_Position_Start_DT_Precomp = "C8"
Public Const Range_DisplacementProfile_Position_Stop_DT_Precomp = "C9"
Public Const Range_DisplacementProfile_Position_Stop_Precomp = "C10"

Public Const Range_DisplacementProfile_Position_Start_Comp = "C13"
Public Const Range_DisplacementProfile_Position_Start_DT_Comp = "C14"
Public Const Range_DisplacementProfile_Position_Stop_DT_Comp = "C15"
Public Const Range_DisplacementProfile_Position_Stop_Comp = "C16"

Public Const Range_DisplacementProfile_Position_Start_Ejection = "C19"
Public Const Range_DisplacementProfile_Position_Stop_Ejection = "C20"

Public Const Range_DisplacementProfile_Speed_Before_Precomp = "F7"
Public Const Range_DisplacementProfile_Speed_Rise_Precomp = "F8"
Public Const Range_DisplacementProfile_Speed_DT_Precomp = "F9"
Public Const Range_DisplacementProfile_Speed_Down_Precomp = "F10"
Public Const Range_DisplacementProfile_Speed_Precomp = "I10"

Public Const Range_DisplacementProfile_Speed_Before_Comp = "F13"
Public Const Range_DisplacementProfile_Speed_Rise_Comp = "F14"
Public Const Range_DisplacementProfile_Speed_DT_Comp = "F15"
Public Const Range_DisplacementProfile_Speed_Down_Comp = "F16"
Public Const Range_DisplacementProfile_Speed_Comp = "I16"

Public Const Range_DisplacementProfile_Speed_Before_Ejection = "F19"
Public Const Range_DisplacementProfile_Speed_Ejection = "F20"

Public Const Range_DisplacementProfile_Time_Start_Precomp = "B7"
Public Const Range_DisplacementProfile_Time_Start_DT_Precomp = "B8"
Public Const Range_DisplacementProfile_Time_Stop_DT_Precomp = "B9"
Public Const Range_DisplacementProfile_Time_Stop_Precomp = "B10"

Public Const Range_DisplacementProfile_Time_Start_Comp = "B13"
Public Const Range_DisplacementProfile_Time_Start_DT_Comp = "B14"
Public Const Range_DisplacementProfile_Time_Stop_DT_Comp = "B15"
Public Const Range_DisplacementProfile_Time_Stop_Comp = "B16"

Public Const Range_DisplacementProfile_Time_Start_Ejection = "B19"
Public Const Range_DisplacementProfile_Time_Stop_Ejection = "B20"

'Feuille Profil de came directe
Public Const Range_DirectCam_Time_Col = "B"
Public Const Range_DirectCam_Position_Col = "C"
Public Const Range_DirectCam_First_Row_To_Fill = 4

'Feuille Profil de came
Public Const Range_Results_Time_Col = "B"
Public Const Range_Results_Position_Col = "C"
Public Const Range_Results_Speed_Col = "D"
Public Const Range_Results_Acceleration_Col = "E"
Public Const Range_Results_Position_Graph = 5
Public Const Range_Results_Speed_Graph = 3
Public Const Range_Results_Acceleration_Graph = 4

Public Const Range_Results_First_Row_To_Fill = 4

Attribute VB_Name = "PressVar"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Control = "cmdLaunchCalculus, 12, 0, MSForms, CommandButton"
Attribute VB_Control = "DwellTime, 13, 1, MSForms, CheckBox"


Private Sub cmdLaunchCalculus_Click()
    'Lancement du calcul du profil de came
    'On Error GoTo ErrorHandler
    Application.ScreenUpdating = False
    'Cr|fffd|ation Table machine
    'CreateTableMachineProfile
    'Cr|fffd|ation Tableau profil came directe
    CreateTableDirectCam
    'Cr|fffd|ation du tableau de Profil de came
    CreateTableResultsV2
    GoTo EndOfCalculus
ErrorHandler:
    'Si une erreur est survenue
    MsgBox "Une Erreur est survenue" & vbCr & "Code d'erreur : " & Err.Number & vbCr & "Description de l'erreur : " & Err.Description, vbOKOnly + vbExclamation
EndOfCalculus:
    Application.ScreenUpdating = True
End Sub
Attribute VB_Name = "ProfileCam"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True


Attribute VB_Name = "Results"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True


Attribute VB_Name = "SysVar"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True


Attribute VB_Name = "ThisWorkbook"
Attribute VB_Base = "0{00020819-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True


Attribute VB_Name = "frmSaveAs"
Attribute VB_Base = "0{557D7928-296D-4436-AFF1-152047DEC8FA}{38279851-426A-4099-81F7-B6703D6F452B}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False


Private Sub cmdCancel_Click()
    Filename = ""
    DirectCamFileName = ""
    Unload Me
End Sub

Private Sub cmdOK_Click()
    Filename = txtName.Text
    If Right$(Filename, Len(Profile_Extension)) <> Profile_Extension And Filename <> "" Then
        Filename = Filename & Profile_Extension
    End If
    DirectCamFileName = txtDirectCamName.Text
    If Right$(DirectCamFileName, Len(Profile_Extension)) <> Profile_Extension And DirectCamFileName <> "" Then
        DirectCamFileName = DirectCamFileName & Profile_Extension
    End If
    Unload Me
End Sub


INQUEST-PP=macro
