Attribute VB_Name = "Module1"
Sub Test()
'   The UserForm1_Activate sub calls Main
    UserForm1.LabelProgress.Width = 0
    UserForm1.Show
End Sub

Sub Main()
    Dim PctDone As Single
    
    User = 4
    x = 4
    y = 5
    errorahc = 0
     
    Do While Sheets("Same AHCs").Range("C" & x).Value <> ""
    Application.ScreenUpdating = False
        If Len(Sheets("Same AHCs").Range("C" & x).Value) <> 28 Then
            errorahc = 1
        End If
        
        If UCase(Sheets("Same AHCs").Range("D" & x).Value) <> "Y" Then
            Sheets("Same AHCs").Range("D" & x).Value = "N"
        End If
               
        y = 4
        Do While Sheets("Same AHCs").Range("C" & y).Value <> ""
            If Sheets("Same AHCs").Range("C" & y).Value = Sheets("Same AHCs").Range("C" & x).Value And y <> x Then
                Sheets("Same AHCs").Range("C" & y & ":D" & y).Delete Shift:=xlUp
                
            Else
                y = y + 1
            End If
        Loop
        x = x + 1
    Loop
        
        y = 3
        
        newrange = Sheets("Off-Line Form").Users.Text
        
        If errorahc = 1 Then
            Instruction = MsgBox("Enter a full 28 character AHC for Column C", vbCritical, "Incorrect AHC")
        Else
            x = 4
        
            Do While Sheets("Same AHCs").Range("C" & x).Value <> ""
                x = x + 1
            Loop
        
            newcount = x - 4
            Sheets("Same AHCs").Cells(1, y).Value = Sheets("User Profile").Range("G" & User).Value
            Sheets("Same AHCs").Range("B" & User).Interior.ColorIndex = 35
            Sheets("Summary").Range("D" & User - 1).Value = newcount
            Sheets("Same AHCs").Range("B" & User).Value = "AHC(s) Added!"
'            Sheets("Same AHCs").Range("B" & user).Font.ColorIndex = 5
            User = User + 1
            
            Do While Sheets("Same AHCs").Range("A" & User).Value <> ""
            
                Sheets("Same AHCs").Columns("C:C").Insert Shift:=xlToRight
                Sheets("Same AHCs").Columns("C:C").Insert Shift:=xlToRight
                
                Sheets("Same AHCs").Columns("C:C").NumberFormat = "@"
                
                Sheets("Same AHCs").Cells(1, y).Value = Sheets("User Profile").Range("G" & User).Value
                
        '        Sheets("Same AHCs").Visible = True
                
                Sheets("Same AHCs").Select
                ActiveSheet.Range("E2:F3").Copy
                ActiveSheet.Range("C2").Select
                ActiveSheet.Paste
        
        '        Sheets("Additional AHC's").Visible = False
                
                Sheets("Same AHCs").Columns("C:C").ColumnWidth = 35
                Sheets("Same AHCs").Columns("D:D").ColumnWidth = 8.5
                
                
                Sheets("Same AHCs").Range("C1:D1").MergeCells = True
                
        
                
                x = 4
                
                Do While Sheets("Same AHCs").Range("E" & x).Value <> ""
                    Sheets("Same AHCs").Range("C" & x).Value = Sheets("Same AHCs").Range("E" & x).Value
                    Sheets("Same AHCs").Range("D" & x).Value = Sheets("Same AHCs").Range("F" & x).Value
        
                    x = x + 1
                Loop
        '        Sheets("Same AHCs").Visible = True
        '        Sheets("Same AHCs").Select
                
               Sheets("Same AHCs").Range("C1").Interior.ColorIndex = 15
                 Sheets("Same AHCs").Range("C2:D2").Interior.ColorIndex = 37
                  Sheets("Same AHCs").Range("C3:D3").Interior.ColorIndex = 15
                Sheets("Same AHCs").Range("C4:D" & x).Interior.ColorIndex = 0
                ActiveSheet.Range("C4:D" & x - 1).Select
                Selection.Borders(xlDiagonalDown).LineStyle = xlNone
                Selection.Borders(xlDiagonalUp).LineStyle = xlNone
                With Selection.Borders(xlEdgeLeft)
                    .LineStyle = xlContinuous
                    .Weight = xlThin
                    .ColorIndex = xlAutomatic
                End With
                With Selection.Borders(xlEdgeTop)
                    .LineStyle = xlContinuous
                    .Weight = xlThin
                    .ColorIndex = xlAutomatic
                End With
                With Selection.Borders(xlEdgeBottom)
                    .LineStyle = xlContinuous
                    .Weight = xlThin
                    .ColorIndex = xlAutomatic
                End With
                With Selection.Borders(xlEdgeRight)
                    .LineStyle = xlContinuous
                    .Weight = xlThin
                    .ColorIndex = xlAutomatic
                End With
                
                On Error Resume Next
                With Selection.Borders(xlInsideVertical)
                    .LineStyle = xlContinuous
                    .Weight = xlThin
                    .ColorIndex = xlAutomatic
                End With
                With Selection.Borders(xlInsideHorizontal)
                    .LineStyle = xlContinuous
                    .Weight = xlThin
                    .ColorIndex = xlAutomatic
                End With
                
        '        Sheets("Additional AHC's").Visible = False
                
                newcount = x - 4
                    
                
                
        '        Do While Sheets("Same AHCs").Range("C" & x).Value <> "In Progress"
        '            x = x + 1
        '        Loop
                    
                Sheets("Same AHCs").Range("B" & User).Interior.ColorIndex = 35
                Sheets("Summary").Range("D" & User - 1).Value = newcount
                Sheets("Same AHCs").Range("B" & User).Value = "AHC(s) Added!"
'                Sheets("Same AHCs").Range("B" & user).Font.ColorIndex = 5
                Sheets("Same AHCs").Range("C4:D65535").Interior.ColorIndex = xlNone
                User = User + 1
                
                PctDone = (User - 3) / Sheets("Off-Line Form").Users.Value
                With UserForm1
                    .FrameProgress.Caption = Format(PctDone, "0%")
                    .LabelProgress.Width = PctDone * (.FrameProgress.Width - 10)
                End With
            '       The DoEvents statement is responsible for the form updating
                DoEvents
            Loop
            
            x = 4
            
    '        Do While Sheets("Same AHCs").Range("D" & x).Value <> ""
    ''            Sheets("Additional AHC's").Cells(x, y).Value = Sheets("Same AHCs").Range("D" & x).Value
    ''            Sheets("Additional AHC's").Cells(x, y + 1).Value = Sheets("Same AHCs").Range("E" & x).Value
    '
    '            Sheets("Same AHCs").Range("D" & x).Value = ""
    '            Sheets("Same AHCs").Range("E" & x).Value = ""
    '
    '            x = x + 1
    '        Loop
            
            
    '        If Sheets("Same AHCs").Range("C" & x).Value <> "" Then
    '            Sheets("Same AHCs").Range("A" & x & ":C" & x).Interior.ColorIndex = 35
    '            Sheets("Same AHCs").Range("C" & x).Value = "In Progress"
    '            Sheets("Same AHCs").Range("C" & x).Font.ColorIndex = 5
                
    '            Sheets("Same AHCs").Range("D4").Value = "TYPE or PASTE AHCs HERE"
    '            Sheets("Same AHCs").Range("D4").Font.ColorIndex = 5
    '        Else
                Sheets("Same AHCs").nextb.Enabled = False
                Sheets("Same AHCs").Submit.Enabled = True
                Unload UserForm1
                Instructions = MsgBox("AHCs have been added for the user(s)", vbInformation, "Notification")
                
    '        End If
    '    End If
        
    '    If Sheets("Same AHCs").Range("D4").Value <> 28 Then
    '        'Instructions Box
    '        Instructions = MsgBox("Enter a valid 28 character AHC at the highlighted location", vbInformation, "Notification")
    '
    '        Sheets("Same AHCs").Range("D4").Interior.ColorIndex = 3
    '
    '    End If
    End If


On Error Resume Next
Unload UserForm1

    
    
End Sub

Attribute VB_Name = "Module2"
Attribute VB_Name = "Sheet1"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Control = "Label1, 4, 0, MSForms, Label"
Attribute VB_Control = "Users, 5, 1, MSForms, TextBox"
Attribute VB_Control = "Step1Instructions, 76, 2, MSForms, Label"
Attribute VB_Control = "Addusers, 7, 3, MSForms, CommandButton"
Attribute VB_Control = "Label3, 73, 4, MSForms, Label"
Attribute VB_Control = "Label2, 69, 5, MSForms, Label"
Attribute VB_Control = "LabelAgencyname, 10, 6, MSForms, Label"
Attribute VB_Control = "ComboBox1, 68, 7, MSForms, ComboBox"
Attribute VB_Control = "AgencyName, 12, 8, MSForms, TextBox"
Attribute VB_Control = "labelabcode, 13, 9, MSForms, Label"
Attribute VB_Control = "ABCODE, 14, 10, MSForms, TextBox"
Attribute VB_Control = "OS, 15, 11, MSForms, CheckBox"
Attribute VB_Control = "MR, 16, 12, MSForms, CheckBox"
Attribute VB_Control = "IAS, 17, 13, MSForms, CheckBox"
Attribute VB_Control = "TT, 18, 14, MSForms, CheckBox"
Attribute VB_Control = "sameahc, 19, 15, MSForms, OptionButton"
Attribute VB_Control = "differentahc, 20, 16, MSForms, OptionButton"
Attribute VB_Control = "addAHC, 21, 17, MSForms, CommandButton"
Attribute VB_Control = "OSINFO, 22, 18, MSForms, Label"
Attribute VB_Control = "mrinfo, 23, 19, MSForms, Label"
Attribute VB_Control = "IASInfo, 24, 20, MSForms, Label"
Attribute VB_Control = "TTInfo, 25, 21, MSForms, Label"
Attribute VB_Control = "sameahcinfo, 26, 22, MSForms, Label"
Attribute VB_Control = "differentahcinfo, 27, 23, MSForms, Label"
Attribute VB_Control = "ONM, 28, 24, MSForms, CheckBox"
Attribute VB_Control = "SMT, 29, 25, MSForms, CheckBox"
Attribute VB_Control = "TFMT, 30, 26, MSForms, CheckBox"
Attribute VB_Control = "RSMT, 31, 27, MSForms, CheckBox"
Attribute VB_Control = "GMT, 32, 28, MSForms, CheckBox"
Attribute VB_Control = "CCMT, 33, 29, MSForms, CheckBox"
Attribute VB_Control = "WHA, 35, 31, MSForms, CheckBox"
Attribute VB_Control = "CSTT, 36, 32, MSForms, CheckBox"
Attribute VB_Control = "VOIPMT, 37, 33, MSForms, CheckBox"
Attribute VB_Control = "TFMTinfo, 38, 34, MSForms, Label"
Attribute VB_Control = "ONMinfo, 39, 35, MSForms, Label"
Attribute VB_Control = "GMTinfo, 40, 36, MSForms, Label"
Attribute VB_Control = "RSMTinfo, 41, 37, MSForms, Label"
Attribute VB_Control = "SMTinfo, 42, 38, MSForms, Label"
Attribute VB_Control = "WHAinfo, 43, 39, MSForms, Label"
Attribute VB_Control = "CCMTinfo, 44, 40, MSForms, Label"
Attribute VB_Control = "VOIPMTinfo, 45, 41, MSForms, Label"
Attribute VB_Control = "CSTTinfo, 46, 42, MSForms, Label"
Attribute VB_Control = "Label19, 47, 43, MSForms, Label"
Attribute VB_Control = "AAAName, 48, 44, MSForms, TextBox"
Attribute VB_Control = "Label20, 49, 45, MSForms, Label"
Attribute VB_Control = "AAAEmail, 50, 46, MSForms, TextBox"
Attribute VB_Control = "Label21, 51, 47, MSForms, Label"
Attribute VB_Control = "AAAPhone, 52, 48, MSForms, TextBox"
Attribute VB_Control = "Label10, 87, 50, MSForms, Label"
Attribute VB_Control = "Label23, 55, 51, MSForms, Label"
Attribute VB_Control = "AAASubmit, 56, 52, MSForms, CommandButton"
Attribute VB_Control = "AAAPrint, 57, 53, MSForms, CommandButton"
Attribute VB_Control = "Confirm1, 58, 54, MSForms, CommandButton"
Attribute VB_Control = "AccessConfirm, 59, 55, MSForms, CommandButton"
Attribute VB_Control = "Additionalconfirm, 60, 56, MSForms, CommandButton"
Attribute VB_Control = "UNDO, 61, 57, MSForms, CommandButton"
Attribute VB_Control = "aaadate, 75, 58, MSForms, TextBox"
Attribute VB_Control = "Label4, 77, 59, MSForms, Label"
Attribute VB_Control = "Label5, 78, 60, MSForms, Label"
Attribute VB_Control = "Label6, 79, 61, MSForms, Label"
Attribute VB_Control = "Label7, 80, 62, MSForms, Label"
Attribute VB_Control = "noneapp, 100, 64, MSForms, CheckBox"
Attribute VB_Control = "Label8, 83, 65, MSForms, Label"
Attribute VB_Control = "Label9, 84, 66, MSForms, Label"
Attribute VB_Control = "TextBox1, 88, 67, MSForms, TextBox"
Dim sh As Worksheet, x As Long
Private Sub AAAPrint_Click()
    'Confirmation Message for Reviewing the Off-Line form
    Instruction = MsgBox("Would you like to review your form?", vbYesNo, "Confirmation")
    
    'If the confirmation is Yes it will proceed
    If Instruction = 6 Then
        On Error Resume Next
        'Pause Screen Updates
        Application.ScreenUpdating = False
        Sheets("User Profile").Returnkey.Visible = True
        
        
        Sheets("Reporting Types").Returnkey.Visible = True
'        Sheets("Additional AHC's").Returnkey.Visible = True
        
        'Make Sheets visible and re-organize the look of them
        Sheets("Off-Line Form").Summarypage.Enabled = False
        Sheets("User Profile").Visible = True
        
                       Sheets("User Profile").Range("G1:O1").Select
        With Selection
            .HorizontalAlignment = xlCenter
            .VerticalAlignment = xlCenter
            .WrapText = True
            .Orientation = 0
            .AddIndent = False
            .IndentLevel = 0
            .ShrinkToFit = False
            .ReadingOrder = xlContext
            .MergeCells = True
        End With
        Selection.UnMerge
        
        Sheets("User Profile").AccessRightssubmit.Visible = False
        Sheets("User Profile").Userprofilesubmit.Visible = False
        Sheets("User Profile").Rows("1:1").EntireRow.Hidden = True
        Sheets("User Profile").Rows("3:3").EntireRow.Hidden = True
        'Hides columns on the User Profile tab
        Sheets("User Profile").Select
        ActiveSheet.Columns("A:H").Select
        Selection.EntireColumn.Hidden = False
        ActiveSheet.Columns("I:R").Select
        Selection.EntireColumn.Hidden = True
        
        'Ensures when viewing the user profile tab that the user starts at A4
        Sheets("User Profile").Range("A4").Select
        ActiveWindow.SmallScroll Up:=65536
        
        If Sheets("Off-Line Form").MR.Value = True Then
        'Enables the reporting types tab
        Sheets("Reporting Types").Select
        Sheets("Reporting Types").Visible = True
        Sheets("Reporting Types").Rows("2:2").EntireRow.Hidden = True
        Sheets("Reporting Types").CommandButton1.Visible = False
        Else
        End If
        
        'Enables the additional AHCs tab
        Sheets("Additional AHC's").Select
        Sheets("Additional AHC's").Visible = True
        Sheets("Additional AHC's").Range("A1").Select
        
        
        'Enables the Summary Tab
        Sheets("Summary").Select
        Sheets("Summary").Visible = True
        Sheets("Summary").CommandButton1.Visible = True
        Sheets("Summary").CommandButton1.Enabled = True
        Sheets("Summary").Range("A1").Select
        Sheets("Summary").CommandButton2.Visible = False
        
        Sheets("Summary").Range("A7:A50").HorizontalAlignment = xlLeft
       
    
        
        'Beings on the User Profile tab and allows the screen to update
        Sheets("Summary").Select
        Sheets("Off-Line Form").Visible = False
        Sheets("Reporting Types").CommandButton1.Visible = False
        Application.ScreenUpdating = True
        
Sheets("Summary").Range("A1").Select
        

    
    

    Else
    End If
End Sub

Private Sub AAASubmit_Click()
    'Confirmation prior to the form being submitted
    Instruction = MsgBox("Confirm you are ready to submit this request.  Once you confirm, you will be prompted to save the form and an email will be generated to route the form to the Verizon Networx Registration Group mailbox for processing", vbYesNo, "Confirmation")
        
    'Continues if they select Yes
    If Instruction = 6 Then
        'Conditional statement to highlight any areas not filled in
        If AAAName.Text = "" Or AAAEmail.Text = "" Or AAAPhone.Text = "" Or TextBox1.Text = "" Then
            If AAAName.Text = "" Then
                AAAName.BackColor = &HFF
            Else
                AAAName.BackColor = &H80000005
            End If
            
            If AAAEmail.Text = "" Then
                AAAEmail.BackColor = &HFF
            Else
                AAAEmail.BackColor = &H80000005
            End If
            
            If AAAPhone.Text = "" Or Len(AAAPhone.Text) < 12 Or Len(AAAPhone.Text) > 12 Then
                AAAPhone.BackColor = &HFF
            Else
                AAAPhone.BackColor = &H80000005
            End If
            
            If TextBox1.Text = "" Then
                TextBox1.BackColor = &HFF
            Else
                TextBox1.BackColor = &H80000005
            End If
            
            Instruction = MsgBox("You must complete the areas highlighed in red to submit this form", vbCritical, "Required Data")
        Else
            
                For Each sh In ActiveWorkbook.Worksheets
                x = sh.UsedRange.Rows.Count 'see J-Walkenbach tip 73
                Next sh
                
            'Open the Outlook application
            Set MyApp = CreateObject("Outlook.Application")
            Set MyItem = MyApp.CreateItem(0) 'MailItem
            Set objDialog = CreateObject("SAFRCFileDlg.FileSave")

            'Sets the date format
            CurrentDate = Format(Now(), "DD-MMM-YYYY")
            aaadate.Text = Format(Now(), "DD-MMM-YYYY HH:MM")
            
            'Sets the default location of the save file
            sDesk = "C:\"
            
            userupdatelimit = Sheets("Off-Line Form").Users.Value + 3
            
            For x = 4 To userupdatelimit Step 1
                Sheets("User Profile").Range("J" & x).Value = Sheets("Off-Line Form").AAAEmail.Value
                Sheets("User Profile").Range("L" & x).Value = "See Additional AHC's Tab"
                Sheets("User Profile").Range("M" & x).Value = "N"
                Sheets("User Profile").Range("R" & x).Value = CurrentDate
            Next
            'Saves the document
            objDialog.Filename = sDesk & CurrentDate & " - " & AgencyName.Text & " - " & Right(ABCODE.Text, 4) & " - " & " Off-Line Form.xls"
            objDialog.FileType = "Excel Document"
            
            Instruction = MsgBox("Save the form to a desired location on your computer and Click Save", vbInformation, "Instruction")
                        
            intReturn = objDialog.OpenFileSaveDlg
            
            On Error Resume Next
            
            If objDialog.Filename <> "" Then
           
                        
            ActiveWorkbook.SaveAs objDialog.Filename
            
               Instruction = MsgBox("Click Send to route the email to the Networx Registration Group.  A representative will get in contact with you shortly if there are any problems with the off-line form.  It will take 5-7 business days to process the Off-Line Form.", vbInformation, "Email Sent!")
         
            'Conditional Statement to setup the email to send to the Networx Universal email address
            If ComboBox1.Text = "Networx Universal" And objDialog.Filename <> "" Then
                With MyItem
                    .To = "nxu-registration@verizonbusiness.com"
    '                .CC = AAAEmail
                    .Subject = ComboBox1.Text & " Off-Line Form Request For " & AgencyName.Text & "(" & ABCODE.Text & ")"
                    .ReadReceiptRequested = False
                    .HTMLBody = "Networx,<p> <p>Please Process this Off-Line Form. <p> <p> Thank You,"
                    .Attachments.Add objDialog.Filename
                    .Display
                End With
                
                
                'Conditional Statement to setup the email to send to the Networx Enterprise email address
            ElseIf ComboBox1.Text = "Networx Enterprise" And objDialog.Filename <> "" Then
                With MyItem
                    .To = "nxe-registration@verizonbusiness.com"
    '                .CC = AAAEmail
                    .Subject = ComboBox1.Text & " Off-Line Form Request For " & AgencyName.Text & "(" & ABCODE.Text & ")"
                    .ReadReceiptRequested = False
                    .HTMLBody = "Networx,<p> <p>Please Process this Off-Line Form. <p> <p> Thank You,"
                    .Attachments.Add objDialog.Filename
                    .Display
                End With
            Else
            End If
             Else
            End If
        End If
    Else
    End If
End Sub

Private Sub AccessConfirm_Click()
    'Disables the screen update
    Application.ScreenUpdating = False
    Sheets("User Profile").Returnkey.Visible = False
    'Conditional statements
    If OS.Value = True And MR.Value = True And IAS.Value = True And TT.Value = True Then
        'Instructions Box
        Instruction = MsgBox("Confirm the information is correct before proceeding.  You have selected the following entitlements:" & Chr(13) & Chr(10) & "     - Order Services" _
            & Chr(13) & Chr(10) & "     - Metrix Reporting" & Chr(13) & Chr(10) & "     - Invoice Application Suite" & Chr(13) & Chr(10) & "     - Trouble Ticketing", vbYesNo, "Confirmation")
                
        'Once confirmed directs the user to the user profile tab
        If Instruction = 6 Then
            Sheets("User Profile").Visible = True
            Sheets("Off-Line Form").Visible = False
            
            'Selects the Active Sheet
            Sheets("User Profile").Select
            
            ActiveSheet.Cells.Select
            Selection.EntireColumn.Hidden = False
            
            'Hides the unwanted columns
            ActiveSheet.Columns("A:F").Select
            Selection.EntireColumn.Hidden = True
            ActiveSheet.Columns("H:H").Select
            Selection.EntireColumn.Hidden = True
            ActiveSheet.Columns("J:J").Select
            Selection.EntireColumn.Hidden = True
            ActiveSheet.Columns("K:M").Select
            Selection.EntireColumn.Hidden = True
            ActiveSheet.Columns("R:R").Select
            Selection.EntireColumn.Hidden = True
                   
            'Hides the button that is not needed
            Sheets("User Profile").Userprofilesubmit.Visible = False
            Sheets("User Profile").Userprofilesubmit.Enabled = False
            
            'Enables the needed button
            Sheets("User Profile").AccessRightssubmit.Visible = True
            Sheets("User Profile").AccessRightssubmit.Enabled = True
            
            ActiveSheet.Range("I4").Select
             
            'Disables the radio buttons and links
            OS.Enabled = False
            OSINFO.Enabled = False
            MR.Enabled = False
            mrinfo.Enabled = False
            IAS.Enabled = False
            IASInfo.Enabled = False
            TT.Enabled = False
            TTInfo.Enabled = False
            
            'Enable the next step
            sameahc.Enabled = True
            sameahcinfo.Enabled = True
            
            differentahc.Enabled = True
            differentahcinfo.Enabled = True
            
            addAHC.Enabled = True
            AccessConfirm.Enabled = False
        Else
        End If
    
    'conditional statement
    ElseIf OS.Value = True And MR.Value = True And IAS.Value = False And TT.Value = False Then
        'instructions box
         Instruction = MsgBox("Confirm the information is correct before proceeding.  You have selected the following entitlements:" & Chr(13) & Chr(10) & "     - Order Services" _
            & Chr(13) & Chr(10) & "     - Metrix Reporting", vbYesNo, "Confirmation")
    
        'Continues if Yes
        If Instruction = 6 Then
            'Instructions box
            Instruction = MsgBox("Are you sure you don't need the following applications?" & Chr(13) & Chr(10) & "     - Invoice Application Suite" _
                & Chr(13) & Chr(10) & "     - Trouble Ticketing", vbYesNo, "Confirmation")
    
            'continues if yes
            If Instruction = 6 Then
                 'Makes User profile visible
                 Sheets("User Profile").Visible = True
                 Sheets("Off-Line Form").Visible = False
                 
                 'Selects the Active Sheet
                 Sheets("User Profile").Select
                 
                 ActiveSheet.Cells.Select
                 Selection.EntireColumn.Hidden = False
                 
                 'Hides the unwanted columns
                 ActiveSheet.Columns("A:F").Select
                 Selection.EntireColumn.Hidden = True
                 ActiveSheet.Columns("H:H").Select
                 Selection.EntireColumn.Hidden = True
                 ActiveSheet.Columns("J:J").Select
                 Selection.EntireColumn.Hidden = True
                 ActiveSheet.Columns("K:M").Select
                 Selection.EntireColumn.Hidden = True
                 ActiveSheet.Columns("R:R").Select
                 Selection.EntireColumn.Hidden = True
                 
                 ActiveSheet.Columns("P:Q").Select
                 Selection.EntireColumn.Hidden = True
                        
                 'Hides the button that is not needed
                 Sheets("User Profile").Userprofilesubmit.Visible = False
                 Sheets("User Profile").Userprofilesubmit.Enabled = False
                 
                 'Enables the needed button
                 Sheets("User Profile").AccessRightssubmit.Visible = True
                 Sheets("User Profile").AccessRightssubmit.Enabled = True
                 
                 ActiveSheet.Range("I4").Select
                
                 OS.Enabled = False
                 OSINFO.Enabled = False
                 MR.Enabled = False
                 mrinfo.Enabled = False
                 IAS.Enabled = False
                 IASInfo.Enabled = False
                 TT.Enabled = False
                 TTInfo.Enabled = False
                 
                 sameahc.Enabled = True
                 sameahcinfo.Enabled = True
                 
                 differentahc.Enabled = True
                 differentahcinfo.Enabled = True
                 
                 addAHC.Enabled = True
                 AccessConfirm.Enabled = False
            Else
            End If
        Else
        End If
        
    ElseIf OS.Value = True And MR.Value = True And IAS.Value = True And TT.Value = False Then
        Instruction = MsgBox("Confirm the information is correct before proceeding.  You have selected the following entitlements:" & Chr(13) & Chr(10) & "     - Order Services" _
            & Chr(13) & Chr(10) & "     - Metrix Reporting" & Chr(13) & Chr(10) & "     - Invoice Application Suite", vbYesNo, "Confirmation")
                
        If Instruction = 6 Then
            Instruction = MsgBox("Are you sure you don't need the following applications?" & Chr(13) & Chr(10) & "     - Trouble Ticketing", vbYesNo, "Confirmation")
                
            If Instruction = 6 Then
                Sheets("User Profile").Visible = True
                Sheets("Off-Line Form").Visible = False
            
                'Selects the Active Sheet
                Sheets("User Profile").Select
                
                ActiveSheet.Cells.Select
                Selection.EntireColumn.Hidden = False
                
                'Hides the unwanted columns
                ActiveSheet.Columns("A:F").Select
                Selection.EntireColumn.Hidden = True
                ActiveSheet.Columns("H:H").Select
                Selection.EntireColumn.Hidden = True
                ActiveSheet.Columns("J:J").Select
                Selection.EntireColumn.Hidden = True
                ActiveSheet.Columns("K:M").Select
                Selection.EntireColumn.Hidden = True
                ActiveSheet.Columns("R:R").Select
                Selection.EntireColumn.Hidden = True
                
                ActiveSheet.Columns("Q:Q").Select
                Selection.EntireColumn.Hidden = True
                       
                'Hides the button that is not needed
                Sheets("User Profile").Userprofilesubmit.Visible = False
                Sheets("User Profile").Userprofilesubmit.Enabled = False
                
                'Enables the needed button
                Sheets("User Profile").AccessRightssubmit.Visible = True
                Sheets("User Profile").AccessRightssubmit.Enabled = True
        
                ActiveSheet.Range("I4").Select
                
                OS.Enabled = False
                OSINFO.Enabled = False
                MR.Enabled = False
                mrinfo.Enabled = False
                IAS.Enabled = False
                IASInfo.Enabled = False
                TT.Enabled = False
                TTInfo.Enabled = False
                
                sameahc.Enabled = True
                sameahcinfo.Enabled = True
                
                differentahc.Enabled = True
                differentahcinfo.Enabled = True
                
                addAHC.Enabled = True
                AccessConfirm.Enabled = False
        '       Sheets("Off-Line Form").Summarypage.Enabled = True
            Else
            End If
        Else
        End If
    
    ElseIf OS.Value = True And MR.Value = True And TT.Value = True And IAS.Value = False Then
         Instruction = MsgBox("Confirm the information is correct before proceeding.  You have selected the following entitlements:" & Chr(13) & Chr(10) & "     - Order Services" _
            & Chr(13) & Chr(10) & "     - Metrix Reporting" & Chr(13) & Chr(10) & "     - Trouble Ticketing", vbYesNo, "Confirmation")
                
        If Instruction = 6 Then
            Instruction = MsgBox("Are you sure you don't need the following applications?" & Chr(13) & Chr(10) & "     - Invoice Application Suite", vbYesNo, "Confirmation")
                
            If Instruction = 6 Then
                Sheets("User Profile").Visible = True
                Sheets("Off-Line Form").Visible = False
                
                
                'Selects the Active Sheet
                Sheets("User Profile").Select
                
                ActiveSheet.Cells.Select
                Selection.EntireColumn.Hidden = False
                
                'Hides the unwanted columns
                ActiveSheet.Columns("A:F").Select
                Selection.EntireColumn.Hidden = True
                ActiveSheet.Columns("H:H").Select
                Selection.EntireColumn.Hidden = True
                ActiveSheet.Columns("J:J").Select
                Selection.EntireColumn.Hidden = True
                ActiveSheet.Columns("K:M").Select
                Selection.EntireColumn.Hidden = True
                ActiveSheet.Columns("R:R").Select
                Selection.EntireColumn.Hidden = True
                
                ActiveSheet.Columns("P:P").Select
                Selection.EntireColumn.Hidden = True
                       
                'Hides the button that is not needed
                Sheets("User Profile").Userprofilesubmit.Visible = False
                Sheets("User Profile").Userprofilesubmit.Enabled = False
                
                'Enables the needed button
                Sheets("User Profile").AccessRightssubmit.Visible = True
                Sheets("User Profile").AccessRightssubmit.Enabled = True
        
                ActiveSheet.Range("I4").Select
                
                OS.Enabled = False
                OSINFO.Enabled = False
                MR.Enabled = False
                mrinfo.Enabled = False
                IAS.Enabled = False
                IASInfo.Enabled = False
                TT.Enabled = False
                TTInfo.Enabled = False
                
                sameahc.Enabled = True
                sameahcinfo.Enabled = True
                
                differentahc.Enabled = True
                differentahcinfo.Enabled = True
                
                addAHC.Enabled = True
                AccessConfirm.Enabled = False
        '       Sheets("Off-Line Form").Summarypage.Enabled = True
            Else
            End If
        Else
        End If
        
    ElseIf MR.Value = True And TT.Value = True And OS.Value = False And IAS.Value = True Then
        Instruction = MsgBox("Confirm the information is correct before proceeding.  You have selected the following entitlements:" _
            & Chr(13) & Chr(10) & "     - Metrix Reporting" & Chr(13) & Chr(10) & "     - Invoice Application Suite" & Chr(13) & Chr(10) & "     - Trouble Ticketing", vbYesNo, "Confirmation")
                
        If Instruction = 6 Then
            Instruction = MsgBox("Are you sure you don't need the following applications?" & Chr(13) & Chr(10) & "     - Order Services", vbYesNo, "Confirmation")
                
            If Instruction = 6 Then
                Sheets("User Profile").Visible = True
                Sheets("Off-Line Form").Visible = False
        
        
                'Selects the Active Sheet
                Sheets("User Profile").Select
                
                ActiveSheet.Cells.Select
                Selection.EntireColumn.Hidden = False
                
                'Hides the unwanted columns
                ActiveSheet.Columns("A:F").Select
                Selection.EntireColumn.Hidden = True
                ActiveSheet.Columns("H:H").Select
                Selection.EntireColumn.Hidden = True
                ActiveSheet.Columns("J:J").Select
                Selection.EntireColumn.Hidden = True
                ActiveSheet.Columns("K:M").Select
                Selection.EntireColumn.Hidden = True
                ActiveSheet.Columns("R:R").Select
                Selection.EntireColumn.Hidden = True
                
                ActiveSheet.Columns("N:N").Select
                Selection.EntireColumn.Hidden = True
                
               'Hides the button that is not needed
                Sheets("User Profile").Userprofilesubmit.Visible = False
                Sheets("User Profile").Userprofilesubmit.Enabled = False
                
                'Enables the needed button
                Sheets("User Profile").AccessRightssubmit.Visible = True
                Sheets("User Profile").AccessRightssubmit.Enabled = True
        
                ActiveSheet.Range("I4").Select
                
                OS.Enabled = False
                OSINFO.Enabled = False
                MR.Enabled = False
                mrinfo.Enabled = False
                IAS.Enabled = False
                IASInfo.Enabled = False
                TT.Enabled = False
                TTInfo.Enabled = False
                
                sameahc.Enabled = True
                sameahcinfo.Enabled = True
                
                differentahc.Enabled = True
                differentahcinfo.Enabled = True
                
                addAHC.Enabled = True
                AccessConfirm.Enabled = False
        '        Sheets("Off-Line Form").Summarypage.Enabled = True
            Else
            End If
        Else
        End If
    
    ElseIf MR.Value = True And TT.Value = True And OS.Value = False And IAS.Value = False Then
        Instruction = MsgBox("Confirm the information is correct before proceeding.  You have selected the following entitlements:" _
        & Chr(13) & Chr(10) & "     - Metrix Reporting" & Chr(13) & Chr(10) & "     - Trouble Ticketing", vbYesNo, "Confirmation")
                
        If Instruction = 6 Then
            Instruction = MsgBox("Are you sure you don't need the following applications?" & Chr(13) & Chr(10) & "     - Invoice Application Suite" _
                & Chr(13) & Chr(10) & "     - Order Services", vbYesNo, "Confirmation")
                
            If Instruction = 6 Then
                Sheets("User Profile").Visible = True
                Sheets("Off-Line Form").Visible = False
                
                
                'Selects the Active Sheet
                Sheets("User Profile").Select
                
                ActiveSheet.Cells.Select
                Selection.EntireColumn.Hidden = False
                
                'Hides the unwanted columns
                ActiveSheet.Columns("A:F").Select
                Selection.EntireColumn.Hidden = True
                ActiveSheet.Columns("H:H").Select
                Selection.EntireColumn.Hidden = True
                ActiveSheet.Columns("J:J").Select
                Selection.EntireColumn.Hidden = True
                ActiveSheet.Columns("K:M").Select
                Selection.EntireColumn.Hidden = True
                ActiveSheet.Columns("R:R").Select
                Selection.EntireColumn.Hidden = True
                
                ActiveSheet.Columns("N:N").Select
                Selection.EntireColumn.Hidden = True
                
                ActiveSheet.Columns("P:P").Select
                Selection.EntireColumn.Hidden = True
        
                'Hides the button that is not needed
                Sheets("User Profile").Userprofilesubmit.Visible = False
                Sheets("User Profile").Userprofilesubmit.Enabled = False
                
                'Enables the needed button
                Sheets("User Profile").AccessRightssubmit.Visible = True
                Sheets("User Profile").AccessRightssubmit.Enabled = True
        
                ActiveSheet.Range("I4").Select
                
                OS.Enabled = False
                OSINFO.Enabled = False
                MR.Enabled = False
                mrinfo.Enabled = False
                IAS.Enabled = False
                IASInfo.Enabled = False
                TT.Enabled = False
                TTInfo.Enabled = False
                
                sameahc.Enabled = True
                sameahcinfo.Enabled = True
                
                differentahc.Enabled = True
                differentahcinfo.Enabled = True
                
                addAHC.Enabled = True
                AccessConfirm.Enabled = False
        '        Sheets("Off-Line Form").Summarypage.Enabled = True
            Else
            End If
        Else
        End If
        
    ElseIf MR.Value = True And IAS.Value = True And TT.Value = False And OS.Value = False Then
        Instruction = MsgBox("Confirm the information is correct before proceeding.  You have selected the following entitlements:" _
            & Chr(13) & Chr(10) & "     - Metrix Reporting" & Chr(13) & Chr(10) & "     - Invoice Application Suite", vbYesNo, "Confirmation")
                
        If Instruction = 6 Then
            Instruction = MsgBox("Are you sure you don't need the following applications?" & Chr(13) & Chr(10) & "     - Order Services" _
                & Chr(13) & Chr(10) & "     - Trouble Ticketing", vbYesNo, "Confirmation")
                
            If Instruction = 6 Then
                Sheets("User Profile").Visible = True
                Sheets("Off-Line Form").Visible = False
                
                
                'Selects the Active Sheet
                Sheets("User Profile").Select
                
                ActiveSheet.Cells.Select
                Selection.EntireColumn.Hidden = False
                
                'Hides the unwanted columns
                ActiveSheet.Columns("A:F").Select
                Selection.EntireColumn.Hidden = True
                ActiveSheet.Columns("H:H").Select
                Selection.EntireColumn.Hidden = True
                ActiveSheet.Columns("J:J").Select
                Selection.EntireColumn.Hidden = True
                ActiveSheet.Columns("K:M").Select
                Selection.EntireColumn.Hidden = True
                ActiveSheet.Columns("R:R").Select
                Selection.EntireColumn.Hidden = True
                
                ActiveSheet.Columns("Q:Q").Select
                Selection.EntireColumn.Hidden = True
                
                ActiveSheet.Columns("N:N").Select
                Selection.EntireColumn.Hidden = True
             
                'Hides the button that is not needed
                Sheets("User Profile").Userprofilesubmit.Visible = False
                Sheets("User Profile").Userprofilesubmit.Enabled = False
                
                'Enables the needed button
                Sheets("User Profile").AccessRightssubmit.Visible = True
                Sheets("User Profile").AccessRightssubmit.Enabled = True
        
                ActiveSheet.Range("I4").Select
                
                OS.Enabled = False
                OSINFO.Enabled = False
                MR.Enabled = False
                mrinfo.Enabled = False
                IAS.Enabled = False
                IASInfo.Enabled = False
                TT.Enabled = False
                TTInfo.Enabled = False
                
                sameahc.Enabled = True
                sameahcinfo.Enabled = True
                
                differentahc.Enabled = True
                differentahcinfo.Enabled = True
                
                addAHC.Enabled = True
                AccessConfirm.Enabled = False
        '        Sheets("Off-Line Form").Summarypage.Enabled = True
            Else
            End If
        Else
        End If
        
    ElseIf IAS.Value = True And TT.Value = True And MR.Value = False And OS.Value = False Then
         Instruction = MsgBox("Confirm the information is correct before proceeding.  You have selected the following entitlements:" _
            & Chr(13) & Chr(10) & "     - Invoice Application Suite" & Chr(13) & Chr(10) & "     - Trouble Ticketing", vbYesNo, "Confirmation")
                
        If Instruction = 6 Then
            Instruction = MsgBox("Are you sure you don't need the following applications?" & Chr(13) & Chr(10) & "     - Order Services" _
                & Chr(13) & Chr(10) & "     - Metrix Reporting", vbYesNo, "Confirmation")
                    
            If Instruction = 6 Then
                Sheets("User Profile").Visible = True
                Sheets("Off-Line Form").Visible = False
                        
                'Selects the Active Sheet
                Sheets("User Profile").Select
                
                ActiveSheet.Cells.Select
                Selection.EntireColumn.Hidden = False
                
                'Hides the unwanted columns
                ActiveSheet.Columns("A:F").Select
                Selection.EntireColumn.Hidden = True
                ActiveSheet.Columns("H:H").Select
                Selection.EntireColumn.Hidden = True
                ActiveSheet.Columns("J:J").Select
                Selection.EntireColumn.Hidden = True
                ActiveSheet.Columns("K:M").Select
                Selection.EntireColumn.Hidden = True
                ActiveSheet.Columns("R:R").Select
                Selection.EntireColumn.Hidden = True
                
                ActiveSheet.Columns("N:O").Select
                Selection.EntireColumn.Hidden = True
                
                'Hides the button that is not needed
                Sheets("User Profile").Userprofilesubmit.Visible = False
                Sheets("User Profile").Userprofilesubmit.Enabled = False
                
                'Enables the needed button
                Sheets("User Profile").AccessRightssubmit.Visible = True
                Sheets("User Profile").AccessRightssubmit.Enabled = True
        
                ActiveSheet.Range("P4").Select
                
                OS.Enabled = False
                OSINFO.Enabled = False
                MR.Enabled = False
                mrinfo.Enabled = False
                IAS.Enabled = False
                IASInfo.Enabled = False
                TT.Enabled = False
                TTInfo.Enabled = False
                
                sameahc.Enabled = True
                sameahcinfo.Enabled = True
                
                differentahc.Enabled = True
                differentahcinfo.Enabled = True
                
                addAHC.Enabled = True
                AccessConfirm.Enabled = False
        '        Sheets("Off-Line Form").Summarypage.Enabled = True
            Else
            End If
        Else
        End If
        
    ElseIf MR.Value = True And IAS.Value = False And TT.Value = False And OS.Value = False Then
        Instruction = MsgBox("Confirm the information is correct before proceeding.  You have selected the following entitlements:" _
            & Chr(13) & Chr(10) & "     - Metrix Reporting", vbYesNo, "Confirmation")
                
        If Instruction = 6 Then
            Instruction = MsgBox("Are you sure you don't need the following applications?" & Chr(13) & Chr(10) & "     - Order Services" _
                & Chr(13) & Chr(10) & "     - Trouble Ticketing" & Chr(13) & Chr(10) & "     - Invoice Application Suite", vbYesNo, "Confirmation")
                
            If Instruction = 6 Then
                Sheets("User Profile").Visible = True
                Sheets("Off-Line Form").Visible = False
        
                'Selects the Active Sheet
                Sheets("User Profile").Select
                
                ActiveSheet.Cells.Select
                Selection.EntireColumn.Hidden = False
                
                'Hides the unwanted columns
                ActiveSheet.Columns("A:F").Select
                Selection.EntireColumn.Hidden = True
                ActiveSheet.Columns("H:H").Select
                Selection.EntireColumn.Hidden = True
                ActiveSheet.Columns("J:J").Select
                Selection.EntireColumn.Hidden = True
                ActiveSheet.Columns("K:M").Select
                Selection.EntireColumn.Hidden = True
                ActiveSheet.Columns("R:R").Select
                Selection.EntireColumn.Hidden = True
                
                ActiveSheet.Columns("O:O").Select
                Selection.EntireColumn.Hidden = False
                
                ActiveSheet.Columns("P:Q").Select
                Selection.EntireColumn.Hidden = True
                
                ActiveSheet.Columns("N:N").Select
                Selection.EntireColumn.Hidden = True
        
                'Hides the button that is not needed
                Sheets("User Profile").Userprofilesubmit.Visible = False
                Sheets("User Profile").Userprofilesubmit.Enabled = False
                
                'Enables the needed button
                Sheets("User Profile").AccessRightssubmit.Visible = True
                Sheets("User Profile").AccessRightssubmit.Enabled = True
        
                ActiveSheet.Range("I4").Select
                
                OS.Enabled = False
                OSINFO.Enabled = False
                MR.Enabled = False
                mrinfo.Enabled = False
                IAS.Enabled = False
                IASInfo.Enabled = False
                TT.Enabled = False
                TTInfo.Enabled = False
                
                sameahc.Enabled = True
                sameahcinfo.Enabled = True
                
                differentahc.Enabled = True
                differentahcinfo.Enabled = True
                
                addAHC.Enabled = True
                AccessConfirm.Enabled = False
        ''        Sheets("Off-Line Form").Summarypage.Enabled = True
            Else
            End If
        Else
        End If
        
    ElseIf IAS.Value = True And MR.Value = False And TT.Value = False And OS.Value = False Then
         Instruction = MsgBox("Confirm the information is correct before proceeding.  You have selected the following entitlements:" _
            & Chr(13) & Chr(10) & "     - Invoice Application Suite", vbYesNo, "Confirmation")
                
        If Instruction = 6 Then
            Instruction = MsgBox("Are you sure you don't need the following applications?" & Chr(13) & Chr(10) & "     - Order Services" _
                & Chr(13) & Chr(10) & "     - Trouble Ticketing" & Chr(13) & Chr(10) & "     - Metrix Reporting", vbYesNo, "Confirmation")
                
            If Instruction = 6 Then
                Sheets("User Profile").Visible = True
                Sheets("Off-Line Form").Visible = False
                        
                'Selects the Active Sheet
                Sheets("User Profile").Select
                
                ActiveSheet.Cells.Select
                Selection.EntireColumn.Hidden = False
                
                'Hides the unwanted columns
                ActiveSheet.Columns("A:F").Select
                Selection.EntireColumn.Hidden = True
                ActiveSheet.Columns("H:H").Select
                Selection.EntireColumn.Hidden = True
                ActiveSheet.Columns("J:J").Select
                Selection.EntireColumn.Hidden = True
                ActiveSheet.Columns("K:M").Select
                Selection.EntireColumn.Hidden = True
                ActiveSheet.Columns("R:R").Select
                Selection.EntireColumn.Hidden = True
                
                ActiveSheet.Columns("Q:Q").Select
                Selection.EntireColumn.Hidden = True
        
                ActiveSheet.Columns("N:O").Select
                Selection.EntireColumn.Hidden = True
                
                'Hides the button that is not needed
                Sheets("User Profile").Userprofilesubmit.Visible = False
                Sheets("User Profile").Userprofilesubmit.Enabled = False
                
                'Enables the needed button
                Sheets("User Profile").AccessRightssubmit.Visible = True
                Sheets("User Profile").AccessRightssubmit.Enabled = True
        
                ActiveSheet.Range("P4").Select
                
                OS.Enabled = False
                OSINFO.Enabled = False
                MR.Enabled = False
                mrinfo.Enabled = False
                IAS.Enabled = False
                IASInfo.Enabled = False
                TT.Enabled = False
                TTInfo.Enabled = False
                
                sameahc.Enabled = True
                sameahcinfo.Enabled = True
                
                differentahc.Enabled = True
                differentahcinfo.Enabled = True
                
                addAHC.Enabled = True
                AccessConfirm.Enabled = False
        '        Sheets("Off-Line Form").Summarypage.Enabled = True
            Else
            End If
        Else
        End If
        
    ElseIf TT.Value = True And IAS.Value = False And MR.Value = False And OS.Value = False Then
        Instruction = MsgBox("Confirm the information is correct before proceeding.  You have selected the following entitlements:" _
            & Chr(13) & Chr(10) & "     - Trouble Ticketing", vbYesNo, "Confirmation")
                
        If Instruction = 6 Then
            Instruction = MsgBox("Are you sure you don't need the following applications?" & Chr(13) & Chr(10) & "     - Order Services" _
                & Chr(13) & Chr(10) & "     - Invoice Application Suite" & Chr(13) & Chr(10) & "     - Metrix Reporting", vbYesNo, "Confirmation")
                
            If Instruction = 6 Then
                Sheets("User Profile").Visible = True
                Sheets("Off-Line Form").Visible = False
                        
                'Selects the Active Sheet
                Sheets("User Profile").Select
                
                ActiveSheet.Cells.Select
                Selection.EntireColumn.Hidden = False
                
                'Hides the unwanted columns
                ActiveSheet.Columns("A:F").Select
                Selection.EntireColumn.Hidden = True
                ActiveSheet.Columns("H:H").Select
                Selection.EntireColumn.Hidden = True
                ActiveSheet.Columns("J:J").Select
                Selection.EntireColumn.Hidden = True
                ActiveSheet.Columns("K:M").Select
                Selection.EntireColumn.Hidden = True
                ActiveSheet.Columns("R:R").Select
                Selection.EntireColumn.Hidden = True
        
                ActiveSheet.Columns("N:P").Select
                Selection.EntireColumn.Hidden = True
                       
                'Hides the button that is not needed
                Sheets("User Profile").Userprofilesubmit.Visible = False
                Sheets("User Profile").Userprofilesubmit.Enabled = False
                
                'Enables the needed button
                Sheets("User Profile").AccessRightssubmit.Visible = True
                Sheets("User Profile").AccessRightssubmit.Enabled = True
        
                ActiveSheet.Range("Q4").Select
                
                OS.Enabled = False
                OSINFO.Enabled = False
                MR.Enabled = False
                mrinfo.Enabled = False
                IAS.Enabled = False
                IASInfo.Enabled = False
                TT.Enabled = False
                TTInfo.Enabled = False
                
                sameahc.Enabled = True
                sameahcinfo.Enabled = True
                
                differentahc.Enabled = True
                differentahcinfo.Enabled = True
                
                addAHC.Enabled = True
                AccessConfirm.Enabled = False
        '        Sheets("Off-Line Form").Summarypage.Enabled = True
            Else
            End If
        Else
        End If
    
    Else
        Instruction = MsgBox("Confirm the information is correct before proceeding.  You have selected the following entitlements:" _
            & Chr(13) & Chr(10) & "     - No applications were selected", vbYesNo, "Confirmation")
                
        If Instruction = 6 Then
                Sheets("User Profile").Visible = True
                Sheets("Off-Line Form").Visible = False
                        
                'Selects the Active Sheet
                Sheets("User Profile").Select
                
                ActiveSheet.Cells.Select
                Selection.EntireColumn.Hidden = False
                
                'Hides the unwanted columns
                ActiveSheet.Columns("A:F").Select
                Selection.EntireColumn.Hidden = True
                ActiveSheet.Columns("H:H").Select
                Selection.EntireColumn.Hidden = True
                ActiveSheet.Columns("J:J").Select
                Selection.EntireColumn.Hidden = True
                ActiveSheet.Columns("K:M").Select
                Selection.EntireColumn.Hidden = True
                ActiveSheet.Columns("R:R").Select
                Selection.EntireColumn.Hidden = True
        
                ActiveSheet.Columns("N:Q").Select
                Selection.EntireColumn.Hidden = True
                       
                'Hides the button that is not needed
                Sheets("User Profile").Userprofilesubmit.Visible = False
                Sheets("User Profile").Userprofilesubmit.Enabled = False
                
                'Enables the needed button
                Sheets("User Profile").AccessRightssubmit.Visible = True
                Sheets("User Profile").AccessRightssubmit.Enabled = True
        
                ActiveSheet.Range("Q4").Select
                
                OS.Enabled = False
                OSINFO.Enabled = False
                MR.Enabled = False
                mrinfo.Enabled = False
                IAS.Enabled = False
                IASInfo.Enabled = False
                TT.Enabled = False
                TTInfo.Enabled = False
                
                sameahc.Enabled = True
                sameahcinfo.Enabled = True
                
                differentahc.Enabled = True
                differentahcinfo.Enabled = True
                
                addAHC.Enabled = True
                AccessConfirm.Enabled = False
        '        Sheets("Off-Line Form").Summarypage.Enabled = True
            Else
            End If
                
                
'        If Instruction = 6 Then
'            OS.Enabled = False
'            OSINFO.Enabled = False
'            MR.Enabled = False
'            MRInfo.Enabled = False
'            IAS.Enabled = False
'            IASInfo.Enabled = False
'            TT.Enabled = False
'            TTInfo.Enabled = False
'
'            sameahc.Enabled = True
'            sameahcinfo.Enabled = True
'
'            differentahc.Enabled = True
'            differentahcinfo.Enabled = True
'
'            addAHC.Enabled = True
'            AccessConfirm.Enabled = False
'    '        Sheets("Off-Line Form").Summarypage.Enabled = True
'        Else
'        End If
    End If

   Application.ScreenUpdating = True
   
    If Instruction = 6 Then
    
    If Sheets("Off-Line Form").IAS.Value = True Or Sheets("Off-Line Form").TT.Value = True Or Sheets("Off-Line Form").MR.Value = True Or Sheets("Off-Line Form").OS.Value = True Then
        'Instruction = MsgBox("Add permissions to the form for the User(s)", vbInformation, "Instruction")
    Else
        Instruction = MsgBox("Set the title for each User(s)", vbInformation, "Instruction")
    End If
    
        Sheets("User Profile").Range("G1").Value = "Instructions: " & "Follow the sample and complete entitlements information for each user."
        If Sheets("Off-Line Form").TT.Value = True Then
        
            Sheets("User Profile").Range("G1:Q1").Select
        ElseIf Sheets("Off-Line Form").IAS.Value = True Then
        Sheets("User Profile").Range("G1:P1").Select
        
        ElseIf Sheets("Off-Line Form").MR.Value = True Then
        Sheets("User Profile").Range("G1:O1").Select
        ElseIf Sheets("Off-Line Form").OS.Value = True Then
            Sheets("User Profile").Range("G1:N1").Select
        Else
        
        Sheets("User Profile").Range("G1:I1").Select
        End If
        
        With Selection
            .HorizontalAlignment = xlCenter
            .VerticalAlignment = xlCenter
            .WrapText = True
            .Orientation = 0
            .AddIndent = False
            .IndentLevel = 0
            .ShrinkToFit = False
            .ReadingOrder = xlContext
            .MergeCells = True
        End With
        Selection.Merge
    ActiveSheet.Rows("1:1").RowHeight = 32.25
    
      Else
      End If
End Sub

Private Sub addAHC_Click()
    Application.ScreenUpdating = False
    
    If sameahc.Value = True Then
        Instruction = MsgBox("Is the AHC information correct?" _
            & Chr(13) & Chr(10) & "     - Same AHC for All Users", vbYesNo, "Confirmation")
    
    ElseIf differentahc.Value = True Then
        Instruction = MsgBox("Is the AHC information correct?" _
            & Chr(13) & Chr(10) & "     - Different AHC per User", vbYesNo, "Confirmation")
    Else
    End If
    
    If Instruction = 6 Then
        Sheets("Off-Line Form").AAAEmail.Enabled = False
        Sheets("Off-Line Form").AAAName.Enabled = False
        
        Sheets("Off-Line Form").AAAPhone.Enabled = False
        Sheets("Off-Line Form").AAASubmit.Enabled = False
        Sheets("Off-Line Form").AAAPrint.Enabled = False
    
        Sheets("Off-Line Form").sameahc.Enabled = False
        Sheets("Off-Line Form").sameahcinfo.Enabled = False
        
        Sheets("Off-Line Form").differentahc.Enabled = False
        Sheets("Off-Line Form").differentahcinfo.Enabled = False
    
        Sheets("Off-Line Form").addAHC.Enabled = False
    
        If sameahc.Value <> 0 Then
            newrange = Users.Text + 3
            On Error Resume Next
            
            For x = 4 To newrange Step 1
                Sheets("Same AHCs").Range("A" & x).Value = Sheets("User Profile").Range("B" & x).Value & ", " & Sheets("User Profile").Range("A" & x).Value
                Sheets("Same AHCs").Range("B" & x).Value = "AHC(s) Pending"
    '           Sheets("Same AHCs").Range("B" & x).Font.ColorIndex = 5
            Next
    
            Sheets("Same AHCs").Range("C1").Value = "ALL USERS"
            Sheets("Same AHCs").Visible = True
            Sheets("Off-Line Form").Visible = False
            Sheets("Same AHCs").Select
            
            'Highlight and Create Boarders
            ActiveSheet.Range("B4:B" & newrange).Select
            Selection.Interior.ColorIndex = 3
            ActiveSheet.Range("A3:B" & newrange).Select
            Selection.Borders(xlDiagonalDown).LineStyle = xlNone
            Selection.Borders(xlDiagonalUp).LineStyle = xlNone
            With Selection.Borders(xlEdgeLeft)
                .LineStyle = xlContinuous
                .Weight = xlThin
                .ColorIndex = xlAutomatic
            End With
            With Selection.Borders(xlEdgeTop)
                .LineStyle = xlContinuous
                .Weight = xlThin
                .ColorIndex = xlAutomatic
            End With
            With Selection.Borders(xlEdgeBottom)
                .LineStyle = xlContinuous
                .Weight = xlThin
                .ColorIndex = xlAutomatic
            End With
            With Selection.Borders(xlEdgeRight)
                .LineStyle = xlContinuous
                .Weight = xlThin
                .ColorIndex = xlAutomatic
            End With
            With Selection.Borders(xlInsideVertical)
                .LineStyle = xlContinuous
                .Weight = xlThin
                .ColorIndex = xlAutomatic
            End With
            
            On Error Resume Next
            With Selection.Borders(xlInsideHorizontal)
                .LineStyle = xlContinuous
                .Weight = xlThin
                .ColorIndex = xlAutomatic
            End With
            
            Sheets("Additional AHC's").Visible = True
            Sheets("Additional AHC's").Select
        
            ActiveSheet.Columns("A:B").Select
            Selection.Copy
            Sheets("Same AHCs").Select
            ActiveSheet.Range("C1").Select
            ActiveSheet.Paste
            
            Sheets("Additional AHC's").Visible = False
            ActiveSheet.Range("C4").Select
            ActiveSheet.Range("C4").Value = "INPUT AHC(s) starting here"
            ActiveSheet.Range("D4").Value = "Y or N"
            ActiveSheet.Range("C4").Font.ColorIndex = 5
            ActiveSheet.Range("D4").Font.ColorIndex = 5
            
            Sheets("Same AHCs").Columns("C:C").ColumnWidth = 35
            Sheets("Same AHCs").Columns("D:D").ColumnWidth = 8.5
            Sheets("Same AHCs").Range("C1").Value = "ALL USERS"
            Sheets("Same AHCs").Columns("C:C").NumberFormat = "@"
            Sheets("Same AHCs").Returnahc.Visible = False
        End If
        
        If differentahc.Value <> 0 Then
            newrange = Users.Text + 3
        
            For x = 4 To newrange Step 1
                Sheets("Different AHCs").Range("A" & x).Value = Sheets("User Profile").Range("B" & x).Value & ", " & Sheets("User Profile").Range("A" & x).Value
                Sheets("Different AHCs").Range("B" & x).Value = "AHC(s) Pending"
                Sheets("Different AHCs").Range("A" & x & ":B" & x).Interior.ColorIndex = 15
                Sheets("Different AHCs").Range("A" & x & ":B" & x).Font.ColorIndex = 15
    '           Sheets("Different AHCs").Range("B" & x).Font.ColorIndex = 3
            Next
    
            Sheets("Different AHCs").Range("C1").Value = Sheets("User Profile").Range("G4").Value
            Sheets("Different AHCs").Visible = True
            Sheets("Off-Line Form").Visible = False
            Sheets("Different AHCs").Select
            
            'Highlight and Create Boarders
            ActiveSheet.Range("B4:B" & newrange).Select
            Selection.Interior.ColorIndex = 15
            ActiveSheet.Range("A3:B" & newrange).Select
            Selection.Borders(xlDiagonalDown).LineStyle = xlNone
            Selection.Borders(xlDiagonalUp).LineStyle = xlNone
            With Selection.Borders(xlEdgeLeft)
                .LineStyle = xlContinuous
                .Weight = xlThin
                .ColorIndex = xlAutomatic
            End With
            With Selection.Borders(xlEdgeTop)
                .LineStyle = xlContinuous
                .Weight = xlThin
                .ColorIndex = xlAutomatic
            End With
            With Selection.Borders(xlEdgeBottom)
                .LineStyle = xlContinuous
                .Weight = xlThin
                .ColorIndex = xlAutomatic
            End With
            With Selection.Borders(xlEdgeRight)
                .LineStyle = xlContinuous
                .Weight = xlThin
                .ColorIndex = xlAutomatic
            End With
            With Selection.Borders(xlInsideVertical)
                .LineStyle = xlContinuous
                .Weight = xlThin
                .ColorIndex = xlAutomatic
            End With
            
            On Error Resume Next
            With Selection.Borders(xlInsideHorizontal)
                .LineStyle = xlContinuous
                .Weight = xlThin
                .ColorIndex = xlAutomatic
            End With
            
            Sheets("Additional AHC's").Visible = True
            Sheets("Additional AHC's").Select
        
            ActiveSheet.Columns("A:B").Select
            Selection.Copy
            Sheets("Different AHCs").Select
            ActiveSheet.Range("C1").Select
            ActiveSheet.Paste
            Sheets("Additional AHC's").Visible = False
              
            Sheets("Different AHCs").Range("A4").Interior.ColorIndex = 36
            Sheets("Different AHCs").Range("C1").Interior.ColorIndex = 36
            Sheets("Different AHCs").Range("A4:B4").Font.ColorIndex = 0
            ActiveSheet.Range("B4").Select
            Selection.Interior.ColorIndex = 3
            Sheets("Different AHCs").Range("B4").Value = "AHC(s) Pending"
    '       ActiveSheet.Range("B4").Font.ColorIndex = 5
               
            ActiveSheet.Range("C4").Select
            ActiveSheet.Range("C4").Value = "INPUT AHC(s) starting here"
            ActiveSheet.Range("D4").Value = "Y or N"
            ActiveSheet.Range("C4").Font.ColorIndex = 5
            ActiveSheet.Range("D4").Font.ColorIndex = 5
            
            Sheets("Different AHCs").Columns("C:C").ColumnWidth = 35
            Sheets("Different AHCs").Columns("D:D").ColumnWidth = 8.5
            Sheets("Different AHCs").Range("C1").Value = UCase(Sheets("User Profile").Range("G4").Value)
            Sheets("Different AHCs").Columns("C:C").NumberFormat = "@"
            Sheets("Different AHCs").Returnahc.Visible = False
        End If
    Else
    End If
       
    Application.ScreenUpdating = True
    
    If Instruction = 6 Then
    If sameahc.Value <> 0 Then
    Instruction = MsgBox("Enter the AHCs that all users will receive access to.  If you wish to add child AHCs, enter 'Y'.  When you're done entering AHCs, click 'Next' to review your choices.  Click 'Submit' to confirm it.", vbInformation, "Instructions")
    End If
    
    If differentahc.Value <> 0 Then
    Instruction = MsgBox("Enter the AHC for each user.  If you wish to add child AHCs, enter 'Y'.  When you're done entering AHCs, click 'Next' to proceed to the next user.  Once all the users have been completed, click 'Submit'.", vbInformation, "Instructions")
    End If
    
    
    End If

End Sub

Private Sub Additionalconfirm_Click()
    Application.ScreenUpdating = False

    If Sheets("Off-Line Form").TFMT.Value <> 0 Or Sheets("Off-Line Form").RSMT.Value <> 0 _
        Or Sheets("Off-Line Form").ONM.Value <> 0 Or Sheets("Off-Line Form").GMT.Value <> 0 _
        Or Sheets("Off-Line Form").SMT.Value <> 0 Or Sheets("Off-Line Form").WHA.Value <> 0 _
        Or Sheets("Off-Line Form").CCMT.Value <> 0 Or Sheets("Off-Line Form").VOIPMT.Value <> 0 _
        Or Sheets("Off-Line Form").CSTT.Value <> 0 Then
        
        Instruction = MsgBox("Are you sure you want to add these applications?", vbYesNo, "Confirmation")
    Else
        Instruction = MsgBox("No additional Networx Tools were requested for the users", vbYesNo, "Confirmation")
    End If
        
    If Instruction = 6 Then
        If Sheets("Off-Line Form").TFMT.Value = 0 And Sheets("Off-Line Form").RSMT.Value = 0 _
            And Sheets("Off-Line Form").ONM.Value = 0 And Sheets("Off-Line Form").GMT.Value = 0 _
            And Sheets("Off-Line Form").SMT.Value = 0 And Sheets("Off-Line Form").WHA.Value = 0 _
            And Sheets("Off-Line Form").CCMT.Value = 0 And Sheets("Off-Line Form").VOIPMT.Value = 0 _
            And Sheets("Off-Line Form").CSTT.Value = 0 Then
        
            AAAEmail.Enabled = True
            AAAName.Enabled = True
            AAAPhone.Enabled = True
            AAASubmit.Enabled = True
            AAAPrint.Enabled = True
            TextBox1.Enabled = True
            
            Additionalconfirm.Enabled = False
            noneapp.Enabled = False
            TFMT.Enabled = False
            TFMTinfo.Enabled = False
            ONM.Enabled = False
            ONMinfo.Enabled = False
            GMT.Enabled = False
            GMTinfo.Enabled = False
            RSMT.Enabled = False
            RSMTinfo.Enabled = False
            SMT.Enabled = False
            SMTinfo.Enabled = False
            WHA.Enabled = False
            WHAinfo.Enabled = False
            CCMT.Enabled = False
            CCMTinfo.Enabled = False
            VOIPMT.Enabled = False
            VOIPMTinfo.Enabled = False
            CSTT.Enabled = False
            CSTTinfo.Enabled = False
        Else
            Sheets("Additional Applications").Visible = True
            noneapp.Enabled = False
            If Sheets("Off-Line Form").TFMT.Value <> 0 Then
                Sheets("Additional Applications").Columns("B:B").EntireColumn.Hidden = False
    '            Sheets("Additional Applications").TFMTinfo.Visible = True
            Else
                Sheets("Additional Applications").Columns("B:B").EntireColumn.Hidden = True
    '            Sheets("Additional Applications").TFMTinfo.Visible = False
            End If
            
            If Sheets("Off-Line Form").RSMT.Value <> 0 Then
                Sheets("Additional Applications").Columns("J:J").EntireColumn.Hidden = False
    '            Sheets("Additional Applications").RSMTinfo.Visible = True
            Else
                Sheets("Additional Applications").Columns("J:J").EntireColumn.Hidden = True
    '            Sheets("Additional Applications").RSMTinfo.Visible = False
            End If
            
            If Sheets("Off-Line Form").ONM.Value <> 0 Then
                Sheets("Additional Applications").Columns("C:C").EntireColumn.Hidden = False
    '            Sheets("Additional Applications").ONMinfo.Visible = True
            Else
                Sheets("Additional Applications").Columns("C:C").EntireColumn.Hidden = True
    '            Sheets("Additional Applications").ONMinfo.Visible = False
            End If
            
            If Sheets("Off-Line Form").GMT.Value <> 0 Then
                Sheets("Additional Applications").Columns("D:D").EntireColumn.Hidden = False
    '            Sheets("Additional Applications").GMTinfo.Visible = True
            Else
                Sheets("Additional Applications").Columns("D:D").EntireColumn.Hidden = True
    '            Sheets("Additional Applications").GMTinfo.Visible = False
            End If
            
            If Sheets("Off-Line Form").SMT.Value <> 0 Then
                Sheets("Additional Applications").Columns("E:E").EntireColumn.Hidden = False
    '            Sheets("Additional Applications").SMTinfo.Visible = True
            Else
                Sheets("Additional Applications").Columns("E:E").EntireColumn.Hidden = True
    '            Sheets("Additional Applications").SMTinfo.Visible = False
            End If
            
            If Sheets("Off-Line Form").WHA.Value <> 0 Then
                Sheets("Additional Applications").Columns("F:F").EntireColumn.Hidden = False
    '            Sheets("Additional Applications").WHAinfo.Visible = True
            Else
                Sheets("Additional Applications").Columns("F:F").EntireColumn.Hidden = True
    '            Sheets("Additional Applications").WHAinfo.Visible = False
            End If
            
            If Sheets("Off-Line Form").CCMT.Value <> 0 Then
                Sheets("Additional Applications").Columns("G:G").EntireColumn.Hidden = False
    '            Sheets("Additional Applications").CCMTinfo.Visible = True
            Else
                Sheets("Additional Applications").Columns("G:G").EntireColumn.Hidden = True
    '            Sheets("Additional Applications").CCMTinfo.Visible = False
            End If
            
            If Sheets("Off-Line Form").VOIPMT.Value <> 0 Then
                Sheets("Additional Applications").Columns("H:H").EntireColumn.Hidden = False
    '            Sheets("Additional Applications").VOIPMTinfo.Visible = True
            Else
                Sheets("Additional Applications").Columns("H:H").EntireColumn.Hidden = True
    '            Sheets("Additional Applications").VOIPMTinfo.Visible = False
            End If
            
            If Sheets("Off-Line Form").CSTT.Value <> 0 Then
                Sheets("Additional Applications").Columns("I:I").EntireColumn.Hidden = False
    '            Sheets("Additional Applications").CSTTinfo.Visible = True
            Else
                Sheets("Additional Applications").Columns("I:I").EntireColumn.Hidden = True
    '            Sheets("Additional Applications").CSTTinfo.Visible = False
            End If
        
            newrange = Sheets("Off-Line Form").Users.Text + 3
            newrows = 0
                
            For x = 4 To newrange Step 1
                Sheets("Additional Applications").Visible = True
                Sheets("Additional Applications").Select
                ActiveSheet.Rows("3:3").Select
                Selection.Insert Shift:=xlDown
                
                newrows = newrows + 1
            Next
        
            For x = 4 To newrange Step 1
                Sheets("Additional Applications").Range("A" & x - 1).Value = Sheets("User Profile").Range("G" & x).Value
            Next
            
            newrows = newrows + 2
            
            Sheets("Additional Applications").Select
        
            'Highlight and Create Boarders
            ActiveSheet.Range("A3:J" & newrows).Select
            Selection.Interior.ColorIndex = 36
            ActiveSheet.Range("A3:J" & newrows).Select
            Selection.Borders(xlDiagonalDown).LineStyle = xlNone
            Selection.Borders(xlDiagonalUp).LineStyle = xlNone
            With Selection.Borders(xlEdgeLeft)
                .LineStyle = xlContinuous
                .Weight = xlThin
                .ColorIndex = xlAutomatic
            End With
            With Selection.Borders(xlEdgeTop)
                .LineStyle = xlContinuous
                .Weight = xlThin
                .ColorIndex = xlAutomatic
            End With
            With Selection.Borders(xlEdgeBottom)
                .LineStyle = xlContinuous
                .Weight = xlThin
                .ColorIndex = xlAutomatic
            End With
            With Selection.Borders(xlEdgeRight)
                .LineStyle = xlContinuous
                .Weight = xlThin
                .ColorIndex = xlAutomatic
            End With
            With Selection.Borders(xlInsideVertical)
                .LineStyle = xlContinuous
                .Weight = xlThin
                .ColorIndex = xlAutomatic
            End With
        
            On Error Resume Next
            With Selection.Borders(xlInsideHorizontal)
                .LineStyle = xlContinuous
                .Weight = xlThin
                .ColorIndex = xlAutomatic
            End With
      
            ActiveSheet.Range("B3").Select
            
            Sheets("Off-Line Form").Visible = False
            ActiveWindow.ScrollColumn = 1
            Application.ScreenUpdating = True
        Instruction = MsgBox("Follow the sample and select permissions for the applications for each user.", vbInformation, "Instructions")
        
        
        End If

        Sheets("Off-Line Form").AAAPrint.Enabled = True
    Else
    End If

    Application.ScreenUpdating = True
    
    Label19.Enabled = True
    Label10.Enabled = True
    Label20.Enabled = True
    Label21.Enabled = True
    Label23.Enabled = True
    AAAName.Enabled = True
    AAAEmail.Enabled = True
    AAAPhone.Enabled = True
    TextBox1.Enabled = True
    

End Sub

Private Sub Addusers_Click()
    Application.ScreenUpdating = False
    Sheets("User Profile").Returnkey.Visible = False
    Instruction = MsgBox("Confirm the information is correct before proceeding" & Chr(13) & Chr(10) & "     - How Many Users? " & Users.Text _
    & Chr(13) & Chr(10) & "     - Which Portal? " & ComboBox1.Text, vbYesNo, "Confirmation")
    
    If Instruction = 6 Then
    
    If Users.Text = "" And ComboBox1.Text = "" Then
        'Changes the color of the Field Names
        Label1.ForeColor = &HFF&
        Label2.ForeColor = &HFF&
        
        'Small Instruction Message is displayed
        Instruction = MsgBox("Complete all the information before proceeding to the next step." _
        & Chr(13) & Chr(10) & " - How Many Users?" _
        & Chr(13) & Chr(10) & " - Which Portal?")
    
    ElseIf Users.Text = "" And ComboBox1.Text <> "" Then
        'Changes the color of the Field Names
        Label1.ForeColor = &HFF&
        Label2.ForeColor = &H1&
        
        'Small Instruction Message is displayed
        Instruction = MsgBox("Complete all the information before proceeding to the next step." _
        & Chr(13) & Chr(10) & " - How Many Users?")
       
    ElseIf Users.Text <> "" And ComboBox1.Text = "" Then
        'Changes the color of the Field Names
        Label2.ForeColor = &HFF&
        Label1.ForeColor = &H1&
        
        'Small Instruction Message is displayed
        Instruction = MsgBox("Complete all the information before proceeding to the next step." _
        & Chr(13) & Chr(10) & " - Which Portal?")
    
    ElseIf Users.Text <= 0 Then
        'Changes the color of the Field Names
        Label1.ForeColor = &HFF&
        Label2.ForeColor = &H1&
        
        'Small Instruction Message is displayed
        Instruction = MsgBox("Add at least one user before proceeding to the next step." _
        & Chr(13) & Chr(10) & " - How many users?")
      
    Else
    
        'Changes the color of the Field Names
        Label1.ForeColor = &H1&
        Label2.ForeColor = &H1&
    
    If ComboBox1.Text = "Networx Universal" Then
        Sheets("Products Listing").ConvergedCheck.Value = 0
        Sheets("Products Listing").ConvergedCheck.Visible = True
        Sheets("Products Listing").ConvergedInfo.Visible = True
        
        Sheets("Products Listing").VulnerabilityCheck.Value = 0
        Sheets("Products Listing").VulnerabilityCheck.Visible = True
        Sheets("Products Listing").vulnerabilityinfo.Visible = True
        
        Sheets("Products Listing").CustomerContactCheck.Value = 0
        Sheets("Products Listing").CustomerContactCheck.Visible = True
        Sheets("Products Listing").customercontactinfo.Visible = True
        
        Sheets("Products Listing").DedicatedCheck.Value = 0
        Sheets("Products Listing").DedicatedCheck.Visible = True
        Sheets("Products Listing").dedicatedinfo.Visible = True
        
        Sheets("Products Listing").Storagecheck.Value = 0
        Sheets("Products Listing").Storagecheck.Visible = True
        Sheets("Products Listing").storageinfo.Visible = True
        
        Sheets("Products Listing").ATMSCheck.Value = 0
        Sheets("Products Listing").ATMSCheck.Visible = True
        Sheets("Products Listing").ATMSinfo.Visible = True
        
        Sheets("Products Listing").broadbandcheck.Value = 0
        Sheets("Products Listing").broadbandcheck.Visible = True
        Sheets("Products Listing").broadbandcheck.Visible = True
        
        
        Sheets("Products Listing").FrameCheck.Value = 0
        Sheets("Products Listing").FrameCheck.Visible = True
        Sheets("Products Listing").frameinfo.Visible = True
        
        Sheets("Products Listing").OpticalCheck.Value = 0
        Sheets("Products Listing").OpticalCheck.Visible = True
        Sheets("Products Listing").opticalinfo.Visible = True
        
        Sheets("Products Listing").SynchronousCheck.Value = 0
        Sheets("Products Listing").SynchronousCheck.Visible = True
        Sheets("Products Listing").synchronousinfo.Visible = True
               
        Sheets("Products Listing").opticaltitle.Visible = True
        
        Sheets("Products Listing").CellularCheck.Value = 0
        Sheets("Products Listing").CellularCheck.Visible = True
        Sheets("Products Listing").cellularinfo.Visible = True
        
        Sheets("Products Listing").FixedCheck.Value = 0
        Sheets("Products Listing").FixedCheck.Visible = True
        Sheets("Products Listing").fixedinfo.Visible = True
        
    ElseIf ComboBox1.Text = "Networx Enterprise" Then
        Sheets("Products Listing").ConvergedCheck.Value = 0
        Sheets("Products Listing").ConvergedCheck.Visible = False
        Sheets("Products Listing").ConvergedInfo.Visible = False
        
        Sheets("Products Listing").broadbandcheck.Value = 0
        Sheets("Products Listing").broadbandcheck.Visible = False
        Sheets("Products Listing").broadbandcheck.Visible = False
        
        Sheets("Products Listing").VulnerabilityCheck.Value = 0
        Sheets("Products Listing").VulnerabilityCheck.Visible = False
        Sheets("Products Listing").vulnerabilityinfo.Visible = False
        
        Sheets("Products Listing").CustomerContactCheck.Value = 0
        Sheets("Products Listing").CustomerContactCheck.Visible = False
        Sheets("Products Listing").customercontactinfo.Visible = False
        
        Sheets("Products Listing").DedicatedCheck.Value = 0
        Sheets("Products Listing").DedicatedCheck.Visible = False
        Sheets("Products Listing").dedicatedinfo.Visible = False
        
        Sheets("Products Listing").Storagecheck.Value = 0
        Sheets("Products Listing").Storagecheck.Visible = False
        Sheets("Products Listing").storageinfo.Visible = False
        
        Sheets("Products Listing").ATMSCheck.Value = 0
        Sheets("Products Listing").ATMSCheck.Visible = False
        Sheets("Products Listing").ATMSinfo.Visible = False
        
        Sheets("Products Listing").FrameCheck.Value = 0
        Sheets("Products Listing").FrameCheck.Visible = False
        Sheets("Products Listing").frameinfo.Visible = False
        
        Sheets("Products Listing").OpticalCheck.Value = 0
        Sheets("Products Listing").OpticalCheck.Visible = False
        Sheets("Products Listing").opticalinfo.Visible = False
        
        Sheets("Products Listing").SynchronousCheck.Value = 0
        Sheets("Products Listing").SynchronousCheck.Visible = False
        Sheets("Products Listing").synchronousinfo.Visible = False
               
        Sheets("Products Listing").opticaltitle.Visible = False
        
        Sheets("Products Listing").CellularCheck.Value = 0
        Sheets("Products Listing").CellularCheck.Visible = False
        Sheets("Products Listing").cellularinfo.Visible = False
        
        Sheets("Products Listing").FixedCheck.Value = 0
        Sheets("Products Listing").FixedCheck.Visible = False
        Sheets("Products Listing").fixedinfo.Visible = False
                
    Else
    
    End If
  
    'Move Sheet
    ComboBox1.Enabled = False
    
    Sheets("User Profile").Visible = True
    Sheets("Off-Line Form").Visible = False
    Sheets("User Profile").Select
    
    ActiveSheet.Columns("A:H").Select
    Selection.EntireColumn.Hidden = False
    ActiveSheet.Rows("1:1").RowHeight = 25.5
    
    ActiveSheet.Columns("I:R").Select
    Selection.EntireColumn.Hidden = True
    
    ActiveSheet.Columns("K:K").Select
    Selection.EntireColumn.Hidden = False

    Sheets("User Profile").Userprofilesubmit.Visible = True
    Sheets("User Profile").Userprofilesubmit.Enabled = True
        
    Sheets("User Profile").AccessRightssubmit.Visible = False
    Sheets("User Profile").AccessRightssubmit.Enabled = False
           
    Dim x
       
    newrange = Users.Text
       
    'Create a rows for the new list of users to be added
    For x = 1 To newrange Step 1
        ActiveSheet.Rows("4:4").Select
        Selection.Insert Shift:=xlDown
    Next
       ActiveWindow.SmallScroll Down:=-65536
    ActiveWindow.SmallScroll Up:=65536
    newrange = Users.Text + 3
    'Highlight and Create Boarders
    ActiveSheet.Range("A4:R" & newrange).Select
    Selection.Interior.ColorIndex = 36
    ActiveSheet.Range("A4:R" & newrange).Select
    Selection.Borders(xlDiagonalDown).LineStyle = xlNone
    Selection.Borders(xlDiagonalUp).LineStyle = xlNone
    With Selection.Borders(xlEdgeLeft)
        .LineStyle = xlContinuous
        .Weight = xlThin
        .ColorIndex = xlAutomatic
    End With
    With Selection.Borders(xlEdgeTop)
        .LineStyle = xlContinuous
        .Weight = xlThin
        .ColorIndex = xlAutomatic
    End With
    With Selection.Borders(xlEdgeBottom)
        .LineStyle = xlContinuous
        .Weight = xlThin
        .ColorIndex = xlAutomatic
    End With
    With Selection.Borders(xlEdgeRight)
        .LineStyle = xlContinuous
        .Weight = xlThin
        .ColorIndex = xlAutomatic
    End With
    
    On Error Resume Next
    With Selection.Borders(xlInsideVertical)
        .LineStyle = xlContinuous
        .Weight = xlThin
        .ColorIndex = xlAutomatic
    End With
    With Selection.Borders(xlInsideHorizontal)
        .LineStyle = xlContinuous
        .Weight = xlThin
        .ColorIndex = xlAutomatic
    End With
    
    Sheets("User Profile").Range("A4").Select
    End If
    Else
    End If
    ActiveWindow.SmallScroll Down:=-65536
    ActiveWindow.SmallScroll Up:=65536
    ActiveWindow.ScrollColumn = 1
Application.ScreenUpdating = True
End Sub

Private Sub CCMT_Click()
If CCMT.Value = 0 Then
    Additionalconfirm.Enabled = False
Else
    Additionalconfirm.Enabled = True
    noneapp.Value = 0
End If
End Sub

Private Sub CCMTinfo_Click()
    Instructions = MsgBox("The Contact Center Management Tool manages customer contacts across a variety of communication media (Telephone, Chat, E-mail, Fax).  MCS-G reporting provides routing functions and a historical record of interactions.", vbInformation, "Contact Center Management Tool Description")
End Sub

Private Sub Confirm1_Click()
    Instruction = MsgBox("Confirm the information is correct before proceeding" & Chr(13) & Chr(10) & "     - Agency Name: " & AgencyName.Text _
    & Chr(13) & Chr(10) & "     - AB Code: " & ABCODE.Text, vbYesNo, "Confirmation")
    
    If Instruction = 6 Then
    If Confirm1.Caption = "Confirm" Then
    'Conditional statement if AgencyName and ABCODE box is blank
    If AgencyName.Text = "" And ABCODE.Text = "" Then
        'Changes the color of the Field Names
        LabelAgencyname.ForeColor = &HFF&
        labelabcode.ForeColor = &HFF&
        
        'Disable the button for the next step
        Users.Enabled = False
        Addusers.Enabled = False
        ComboBox1.Enabled = False
        
        'Small Instruction Message is displayed
        Instruction = MsgBox("Complete all the information before proceeding to the next step." _
        & Chr(13) & Chr(10) & " - Agency/Bureau Name" _
        & Chr(13) & Chr(10) & " - ABCode")
    
    ElseIf AgencyName.Text = "" And ABCODE.Text <> "" Then
        'Changes the color of the Field Names
        LabelAgencyname.ForeColor = &HFF&
        labelabcode.ForeColor = &H1&
        
        'Disable the button for the next step
        Users.Enabled = False
        Addusers.Enabled = False
        ComboBox1.Enabled = False
        
        'Small Instruction Message is displayed
        Instruction = MsgBox("Complete all the information before proceeding to the next step." _
        & Chr(13) & Chr(10) & " - Agency/Bureau Name")
       
    ElseIf AgencyName.Text <> "" And ABCODE.Text = "" Then
        'Changes the color of the Field Names
        labelabcode.ForeColor = &HFF&
        LabelAgencyname.ForeColor = &H1&
        
        'Disable the button for the next step
        Users.Enabled = False
        Addusers.Enabled = False
        ComboBox1.Enabled = False
        
        'Small Instruction Message is displayed
        Instruction = MsgBox("Complete all the information before proceeding to the next step." _
        & Chr(13) & Chr(10) & " - ABCode")
    
    ElseIf Len(ABCODE.Text) <> 4 Then
        'Changes the color of the Field Names
        labelabcode.ForeColor = &HFF&
        LabelAgencyname.ForeColor = &H1&
        
        'Disable the button for the next step
        Users.Enabled = False
        Addusers.Enabled = False
        ComboBox1.Enabled = False
        
        'Small Instruction Message is displayed
        Instruction = MsgBox("The AB code must be 4 digits." _
        & Chr(13) & Chr(10) & " - ABCode")
      
    ElseIf Not IsNumeric(ABCODE.Text) Then

        Instruction = MsgBox("Enter numbers only for the AB Code.", vbCritical, "Error")

        'you may also consider erasing it

        ABCODE.Text = ""
     
    Else
    
        'Changes the color of the Field Names
        LabelAgencyname.ForeColor = &H1&
        labelabcode.ForeColor = &H1&
        
        'Enabled the buttons for the next step
        Users.Enabled = True
        Addusers.Enabled = True
        ComboBox1.Enabled = True
        
        'Disable the previous step button
        Confirm1.Enabled = False
        AgencyName.Enabled = False
        ABCODE.Enabled = False
        ABCODE.Text = "'" & ABCODE.Text
                
        Sheets("Summary").Range("A1").Value = "ACCESS REQUEST SUMMARY for AB code:  " & ABCODE.Text
                
        'Confirm1.Caption = "Edit"
                
    End If
   Else
         
         AgencyName.Enabled = True
         ABCODE.Enabled = True
        ComboBox1.Enabled = True
        ABCODE.Text = Right(ABCODE.Text, 4)
        Confirm1.Caption = "Confirm"
           
    End If
    Else
    End If

End Sub

Private Sub CSTT_Click()
If CSTT.Value = 0 Then
    Additionalconfirm.Enabled = False
Else
    Additionalconfirm.Enabled = True
    noneapp.Value = 0
End If
End Sub

Private Sub CSTTinfo_Click()
    Instructions = MsgBox("The Circuit Self Test Tool provides an integrated software solution to discover newly-installed circuits and resolve maintenance problems.", vbInformation, "Circuit Self Test Tool Description")
End Sub

Private Sub differentahcinfo_Click()
Instructions = MsgBox("Select Different AHC(s) per User if all users are not authorized for the same AHCs.  List each user's AHCs individually.  Click 'Add AHCs' to proceed.", vbInformation, "Different AHCs Description")
End Sub

Private Sub GMT_Click()
If GMT.Value = 0 Then
    Additionalconfirm.Enabled = False
Else
    Additionalconfirm.Enabled = True
    noneapp.Value = 0
End If
End Sub

Private Sub GMTinfo_Click()
    Instructions = MsgBox("IGUS is the reporting system for IP VPN and VGUS is IP VPN Traffic analysis and reporting", vbInformation, "Global Monitoring Tools Description")
End Sub

Private Sub IASInfo_Click()
   Instructions = MsgBox("The Invoicing Application Suite consists of the following applications:" & Chr(13) & Chr(10) & _
                            "   - E-Payment: Use this application to pay invoices online.  E-Payment supports Electronic Funds Transfer (EFT)." & Chr(13) & Chr(10) & _
                            "   - E-Billing: Use this application to view invoices and billing information online." & Chr(13) & Chr(10) & _
                            "   - Billing Manager: Use this application to obtain reporting details about customer invoicing." & Chr(13) & Chr(10) & _
                            "   - Invoice Archive: Use this application to obtain historical data including invoices and reports.", vbInformation, "Invoice Application Suite Description")
End Sub



Private Sub Label4_Click()
Instruction = MsgBox("Enter up to 100 users and select the portal (Networx Universal or Networx Enterprise) for which you want to register.  Click 'Add Users'" & Chr(13) & Chr(10) & Chr(13) & Chr(10) & _
"NOTE: If you're unsure of the actual number of users, enter a larger number than you think you will need.  Use the 'Add More User' Button if you need more users.", vbInformation, "Instructions")
End Sub

Private Sub Label5_Click()
Instruction = MsgBox("Select the appropriate Networx applications.  It's important to review your selections because once you confirm your selections, the only way to make changes is to clear the form and start over.  Click 'Confirm'", vbInformation, "Instructions")
End Sub

Private Sub Label6_Click()
Instruction = MsgBox("If all users are authorized for the same AHCs, select 'Same AHC(s) For All'.  Click 'Add AHC(s) to proceed'", vbInformation, "Instructions")
End Sub

Private Sub Label7_Click()
Instruction = MsgBox("Some Additional Networx Applications require you to work with your Service Manager to obtain information such as Corp IDs, and Toll Free Numbers.  Select the desired applications and click 'Confirm'.", vbInformation, "Instructions")
End Sub

Private Sub Label8_Click()
Instruction = MsgBox("You must have authorization from your Agency/Bureau to request access to the agency's CPNI (Customer Proprietary Network Information)", vbInformation, "Instructions")

End Sub

Private Sub MR_Click()
    If OS.Value = 0 Then
        
    Else
        MR.Value = 1
    End If
    
End Sub

Private Sub mrinfo_Click()
    Instructions = MsgBox("Metrix Reporting provides access to product-specific reports, Service Level Agreement (SLA) reports, and inventory reports.  You can access reports and vew order status across multiple orders, and schedule reports for weekly or monthly delivery.", vbInformation, "Metrix Reporting Description")
End Sub

Private Sub noneapp_Click()
If noneapp.Value = 0 Then
    Additionalconfirm.Enabled = False
Else
    Additionalconfirm.Enabled = True
    TFMT.Value = 0
    ONM.Value = 0
    GMT.Value = 0
    RSMT.Value = 0
    SMT.Value = 0
    WHA.Value = 0
    CCMT.Value = 0
    VOIPMT.Value = 0
    CSTT.Value = 0
End If
End Sub

Private Sub ONM_Click()
If ONM.Value = 0 Then
    Additionalconfirm.Enabled = False
Else
    Additionalconfirm.Enabled = True
    noneapp.Value = 0
End If
End Sub

Private Sub ONMinfo_Click()
    Instructions = MsgBox("Calling Card Monitoring Tool (Outbound Network Manager (ONM)) enables the customer to manage and control their calling card traffic routing and features.", vbInformation, "Calling Card Monitoring Tool Description")

End Sub

Private Sub OS_Click()
    
    If OS.Value = 0 Then
   Else
        Dim Instructions
        
        Instructions = MsgBox("When selecting Order Services, you will receive Metrix Reporting to view reports.")
        
        MR.Value = 1
        
    End If
End Sub

Private Sub OSINFO_Click()
    Instructions = MsgBox("Order Services enables you to obtain price quotes, create and submit orders, track order status and review order history, depending on your permission levels. ", vbInformation, "Order Services Description")
End Sub

Private Sub ReviewAHCs_Click()

    If Sheets("Off-Line Form").sameahc.Value = True Then
    
        Sheets("Same AHCs").Visible = True
        Sheets("Same AHCs").Select
        Sheets("Same AHCs").nextb.Visible = False
        Sheets("Same AHCs").nextb.Enabled = False
        Sheets("Same AHCs").Submit.Visible = False
        Sheets("Same AHCs").Submit.Enabled = False
        Sheets("Same AHCs").Returnahc.Visible = True
        Sheets("Same AHCs").Returnahc.Enabled = True
        Sheets("Off-Line Form").Visible = False
         Sheets("Same AHCs").Range("C1").Select
    
    ElseIf Sheets("Off-Line Form").differentahc.Value = True Then
    
        Sheets("Different AHCs").Visible = True
        Sheets("Different AHCs").Select
        Sheets("Different AHCs").nextb.Visible = False
        Sheets("Different AHCs").nextb.Enabled = False
        Sheets("Different AHCs").Submit.Visible = False
        Sheets("Different AHCs").Submit.Enabled = False
        Sheets("Different AHCs").Returnahc.Visible = True
        Sheets("Different AHCs").Returnahc.Enabled = True
        Sheets("Off-Line Form").Visible = False
        Sheets("Different AHCs").Range("C1").Select
    Else
    End If

End Sub

Private Sub RSMT_Click()
If RSMT.Value = 0 Then
    Additionalconfirm.Enabled = False
Else
    Additionalconfirm.Enabled = True
    noneapp.Value = 0
End If
End Sub

Private Sub RSMTinfo_Click()
    Instructions = MsgBox("ESM is a multi-tenant, company-wise shared resource providing a foundation for" & Chr(13) & Chr(10) & _
                            "advanced, presence-based and collaborative services.", vbInformation, "Remote Services Management Tool Description")
End Sub

Private Sub sameahc_Click()

End Sub

Private Sub sameahcinfo_Click()
    Instructions = MsgBox("Select 'Same AHC(s) For All', otherwise select 'Different AHC(s) per User' and list each user's AHCs separately.", vbInformation, "Same AHCs Description")
End Sub

Private Sub SMT_Click()
If SMT.Value = 0 Then
    Additionalconfirm.Enabled = False
Else
    Additionalconfirm.Enabled = True
    noneapp.Value = 0
End If
End Sub

Private Sub SMTinfo_Click()
    Instructions = MsgBox("The Security Management Tool is the application platform for delivering managed security services.", vbInformation, "Security Management Tool Description")
End Sub

Private Sub Step1Instructions_Click()
Instruction = MsgBox("Enter the Agency or Bureau name and the four-digit AB Code.  Click 'Confirm'", vbInformation, "Instructions")
End Sub

Private Sub Summarypage_Click()
    
    Application.ScreenUpdating = False
    Sheets("Summary").Visible = True
    Sheets("Off-Line Form").Visible = False
    
    x = 3
    Do While Sheets("Summary").Range("A" & x).Value <> "TOTAL"
        x = x + 1
    Loop
    
    Sheets("Summary").Range("B" & x).Value = x - 3
    
    Application.ScreenUpdating = True

End Sub

Private Sub TFMT_Click()
If TFMT.Value = 0 Then
    Additionalconfirm.Enabled = False
Else
    Additionalconfirm.Enabled = True
    noneapp.Value = 0
End If
End Sub

Private Sub TFMTinfo_Click()
    Instructions = MsgBox("Toll Free Monitoring Tool provides applications to manage toll free and routing features, and Enhanced Call routing (ECR) components.", vbInformation, "Toll Free Monitoring Tool Description")
End Sub

Private Sub TTInfo_Click()
Instructions = MsgBox("Trouble Ticketing enables you to generate, view, and modify trouble tickets, and obtain real-time status information.  With access to Trouble Ticketing, you automatically have access to the dashboard.", vbInformation, "Trouble Ticketing Description")
End Sub

Private Sub UNDO_Click()
Instruction = MsgBox("Are you sure you want to clear the form?", vbYesNo, "Confirmation")
    
    If Instruction = 6 Then
        On Error Resume Next
        Sheets("User Profile").addrows.Visible = True
        Label19.Enabled = False
    Label10.Enabled = False
    Label20.Enabled = False
    Label21.Enabled = False
    Label23.Enabled = False
    AAAName.Enabled = False
    AAAEmail.Enabled = False
    AAAPhone.Enabled = False
    TextBox1.Enabled = False
        

        noneapp.Enabled = False
        noneapp.Value = False
        aaadate.Text = ""
            Sheets("User Profile").Range("G1").UnMerge
    Sheets("User Profile").Range("G1").Value = ""
    AAAName.BackColor = &H80000005
    AAAEmail.BackColor = &H80000005
    AAAPhone.BackColor = &H80000005
       TextBox1.BackColor = &H80000005
        Sheets("User Profile").Returnkey.Visible = False
        Sheets("Reporting Types").Returnkey.Visible = False
        Sheets("Additional AHC's").Returnkey.Visible = False
        
    Sheets("User Profile").Visible = False
    Sheets("User Profile").AccessRightssubmit.Visible = False
    Sheets("User Profile").Userprofilesubmit.Visible = True
    Sheets("User Profile").Rows("2:3").EntireRow.Hidden = False
    
    Sheets("Reporting Types").Visible = False
    Sheets("Reporting Types").Rows("2:2").EntireRow.Hidden = False
    Sheets("Reporting Types").CommandButton1.Visible = True
    
    Sheets("Additional AHC's").Visible = False
    
    Sheets("Summary").Visible = False
    Sheets("Summary").CommandButton1.Visible = True
        
               Sheets("Different AHCs").Submit.Enabled = True
       Sheets("Same AHCs").Submit.Enabled = True
       Sheets("Different AHCs").Submit.Visible = True
       Sheets("Same AHCs").Submit.Visible = True
              Sheets("Different AHCs").nextb.Enabled = True
       Sheets("Same AHCs").nextb.Enabled = True
       Sheets("Different AHCs").nextb.Visible = True
       Sheets("Same AHCs").nextb.Visible = True
       Sheets("Different AHCs").Returnahc.Enabled = False
       Sheets("Same AHCs").Returnahc.Enabled = False
       Sheets("Different AHCs").Returnahc.Visible = False
       Sheets("Same AHCs").Returnahc.Visible = False
        Sheets("Off-Line Form").AccessConfirm.Caption = "Confirm"
        Sheets("Off-Line Form").Additionalconfirm.Caption = "Confirm"
        Sheets("Off-Line Form").ReviewAHCs.Enabled = False
        ComboBox1.Text = ""
        ComboBox1.Enabled = False
        Sheets("Off-Line Form").Summarypage.Enabled = False
        Sheets("Summary").Visible = False
        newrange = Users.Text + 3
        Confirm1.Caption = "Confirm"
        Sheets("Summary").Range("A1").Value = "ACCESS REQUEST SUMMARY for AB code:  "
        
        Do While Sheets("Summary").Range("A3").Value <> "TOTAL"
            Sheets("Summary").Rows("3:3").Delete Shift:=xlUp
        Loop
        
        Do While Sheets("Summary").Range("A6").Value <> ""
            Sheets("Summary").Rows("6:6").Delete Shift:=xlUp
        Loop
    
        Sheets("Off-Line Form").AAAEmail.Enabled = False
    Sheets("Off-Line Form").AAAName.Enabled = False
    
    Sheets("Off-Line Form").AAAPhone.Enabled = False
    Sheets("Off-Line Form").AAASubmit.Enabled = False
    Sheets("Off-Line Form").AAAPrint.Enabled = False
    Sheets("Off-Line Form").TextBox1.Enabled = False
     Sheets("Off-Line Form").TextBox1.Text = ""
        Sheets("User Profile").Visible = False
        Sheets("Reporting Types").Visible = False
        Sheets("Different AHCs").Visible = False
        Sheets("Additional AHC's").Visible = False
        Sheets("Same AHCs").Visible = False
        Sheets("Products Listing").Visible = False
        Sheets("Additional Applications").Visible = False
        
        For x = 4 To newrange Step 1
            If Sheets("User Profile").Range("A4").Value <> "" Then
                Sheets("User Profile").Rows("4:4").Delete Shift:=xlUp
            End If
            
            If Sheets("Reporting Types").Range("A3").Value <> "" Then
                Sheets("Reporting Types").Rows("3:3").Delete Shift:=xlUp
            End If
            
            If Sheets("Different AHCs").Range("A4").Value <> "" Then
                Sheets("Different AHCs").Rows("4:4").Delete Shift:=xlUp
            End If
            
            If Sheets("Same AHCs").Range("A4").Value <> "" Then
                Sheets("Same AHCs").Rows("4:4").Delete Shift:=xlUp
            End If
            If Sheets("Additional Applications").Range("A3").Value <> "" Then
                Sheets("Additional Applications").Rows("3:3").Delete Shift:=xlUp
            End If
            
        Next
        
        'Enable Step One Buttons
        Confirm1.Enabled = True
        AgencyName.Enabled = True
        ABCODE.Enabled = True
        
        Sheets("Different AHCs").nextb.Enabled = True
        Sheets("Different AHCs").Submit.Enabled = False
        Sheets("Same AHCs").nextb.Enabled = True
        Sheets("Same AHCs").Submit.Enabled = False
        
        x = 4
        
        Do While Sheets("Different AHCs").Range("D" & x).Value <> ""
            Sheets("Different AHCs").Range("D" & x).Value = ""
            Sheets("Different AHCs").Range("E" & x).Value = ""
            
            x = x + 1
        Loop
        
        x = 4
        
        Do While Sheets("Same AHCs").Range("D" & x).Value <> ""
            Sheets("Same AHCs").Range("D" & x).Value = ""
            Sheets("Same AHCs").Range("E" & x).Value = ""
            
            x = x + 1
        Loop
        
        newrange = Sheets("Off-Line Form").Users.Text + 3
                        
        For x = 4 To newrange Step 1

            
                             
        Next
        
        'Changes the color of the Field Names
        LabelAgencyname.ForeColor = &H1&
        labelabcode.ForeColor = &H1&
        
        'Reset information
        AgencyName.Text = ""
        ABCODE.Text = ""
        
        Users.Text = ""
        
        AAAName.Text = ""
        AAAEmail.Text = ""
        AAAPhone.Text = ""
        
        OS.Value = 0
        MR.Value = 0
        IAS.Value = 0
        TT.Value = 0
               
        'Disable all other buttons
        Users.Enabled = False
        Addusers.Enabled = False
        AccessConfirm.Enabled = False
        
        OS.Enabled = False
        OSINFO.Enabled = False
        MR.Enabled = False
        mrinfo.Enabled = False
        IAS.Enabled = False
        IASInfo.Enabled = False
        TT.Enabled = False
        TTInfo.Enabled = False
        
        AAAName.Enabled = False
        AAAEmail.Enabled = False
        AAAPhone.Enabled = False
        AAASubmit.Enabled = False
        AAAPrint.Enabled = False
                        
        sameahc.Enabled = False
        sameahcinfo.Enabled = False
        differentahc.Enabled = False
        differentahcinfo.Enabled = False
        
        addAHC.Enabled = False
                
        'Reset Products and Services
        'All Products
        Sheets("Products Listing").allcheck.Value = 0
        Sheets("Products Listing").ds3check.Value = 0
       Sheets("Products Listing").broadbandcheck.Value = 0
        'Manage Services
        Sheets("Products Listing").AudioCheck.Value = 0
        Sheets("Products Listing").CollaborationCheck.Value = 0
        Sheets("Products Listing").CustomerSpecificCheck.Value = 0
        Sheets("Products Listing").IPVTSCheck.Value = 0
        Sheets("Products Listing").Storagecheck.Value = 0
        Sheets("Products Listing").VideoCheck.Value = 0
        Sheets("Products Listing").CoLocatedCheck.Value = 0
        Sheets("Products Listing").CustomerContactCheck.Value = 0
        Sheets("Products Listing").DedicatedCheck.Value = 0
        Sheets("Products Listing").ManagedCheck.Value = 0
        Sheets("Products Listing").TeleWorkingCheck.Value = 0
        Sheets("Products Listing").WebCheck.Value = 0
        'Networx Miscellaneous
        Sheets("Products Listing").DHSMNCheck.Value = 0
        Sheets("Products Listing").ECScheck.Value = 0
        Sheets("Products Listing").MANcheck.Value = 0
         Sheets("Products Listing").iwcheck.Value = 0
        Sheets("Products Listing").mrcheck.Value = 0
        Sheets("Products Listing").SiteCheck.Value = 0
        'Security Services
        Sheets("Products Listing").AntiVirusCheck.Value = 0
        Sheets("Products Listing").IntrusionHostCheck.Value = 0
        Sheets("Products Listing").MEASCheck.Value = 0
        Sheets("Products Listing").FirewallNetworkCheck.Value = 0
        Sheets("Products Listing").MTSSCheck.Value = 0
        Sheets("Products Listing").VulnerabilityCheck.Value = 0
        Sheets("Products Listing").IncidentCheck.Value = 0
        Sheets("Products Listing").IntrusionNetworkCheck.Value = 0
        Sheets("Products Listing").PKICheck.Value = 0
        Sheets("Products Listing").FirewallPremiseCheck.Value = 0
        Sheets("Products Listing").SecureCheck.Value = 0
        'Special Services
        
        Sheets("Products Listing").LandCheck.Value = 0
        Sheets("Products Listing").FixedCheck.Value = 0
        'Telecom Services
        Sheets("Products Listing").ATMSCheck.Value = 0
        Sheets("Products Listing").CallingCheck.Value = 0
        Sheets("Products Listing").CircuitCheck.Value = 0
        Sheets("Products Listing").circuitscheck.Value = 0
        Sheets("Products Listing").CombinedDigitalCheck.Value = 0
        Sheets("Products Listing").CombinedISDNCheck.Value = 0
        Sheets("Products Listing").CombinedLocalCheck.Value = 0
        Sheets("Products Listing").FrameCheck.Value = 0
        Sheets("Products Listing").InternationalCheck.Value = 0
        Sheets("Products Listing").PrivateCheck.Value = 0
        Sheets("Products Listing").TollfreededicatedCheck.Value = 0
        Sheets("Products Listing").TollfreeECRCheck.Value = 0
        Sheets("Products Listing").TollFreeSwitchedCheck.Value = 0
        Sheets("Products Listing").VoiceDedicatedCheck.Value = 0
        Sheets("Products Listing").VoiceSwitchedCheck.Value = 0
        Sheets("Products Listing").CDNSCheck.Value = 0
        Sheets("Products Listing").ConvergedCheck.Value = 0
        Sheets("Products Listing").DedicatedInternetCheck.Value = 0
        Sheets("Products Listing").EmbeddedDSLCheck.Value = 0
        Sheets("Products Listing").EmbeddedSatelliteCheck.Value = 0
        Sheets("Products Listing").IPCheck.Value = 0
        Sheets("Products Listing").IndependentCheck.Value = 0
        Sheets("Products Listing").NetworkVPNCheck.Value = 0
        Sheets("Products Listing").PremiseSSLCheck.Value = 0
        Sheets("Products Listing").PremiseBroadbandCheck.Value = 0
        Sheets("Products Listing").PremiseCPECheck.Value = 0
        Sheets("Products Listing").PremiseDedicatedCheck.Value = 0
        Sheets("Products Listing").VOIPTransportCheck.Value = 0
        Sheets("Products Listing").OpticalCheck.Value = 0
        Sheets("Products Listing").SynchronousCheck.Value = 0
        'Wireless Services
        Sheets("Products Listing").CellularCheck.Value = 0
        Sheets("Products Listing").MultimodePublicCheck.Value = 0
        Sheets("Products Listing").MultimodePrivateCheck.Value = 0
        Sheets("Products Listing").Pagingcheck.Value = 0
        
        Sheets("Products Listing").Browse.Caption = "Browse"

        Sheets("Products Listing").AllBrowse.Caption = "(0 Selected)"
        Sheets("Products Listing").managebrowse.Caption = "(0 Selected)"
        Sheets("Products Listing").Networxbrowse.Caption = "(0 Selected)"
        Sheets("Products Listing").securitybrowse.Caption = "(0 Selected)"
        Sheets("Products Listing").specialbrowse.Caption = "(0 Selected)"
        Sheets("Products Listing").telecombrowse.Caption = "(0 Selected)"
        Sheets("Products Listing").wirelessbrowse.Caption = "(0 Selected)"
        
        Sheets("Products Listing").allselect.Caption = "(Select All)"
        Sheets("Products Listing").manageselect.Caption = "(Select All)"
        Sheets("Products Listing").networxselect.Caption = "(Select All)"
        Sheets("Products Listing").securityselect.Caption = "(Select All)"
        Sheets("Products Listing").specialselect.Caption = "(Select All)"
        Sheets("Products Listing").telecomselect.Caption = "(Select All)"
        Sheets("Products Listing").wirelessselect.Caption = "(Select All)"
       For Each myshape In Sheets("Products Listing").Shapes
    
           ' ActiveX control (control toolbox) or a linked or embedded OLE object.
           If myshape.Type = 12 And myshape.Name <> "submit1" And myshape.Name <> "allcheck" And myshape.Name <> "Label1" And myshape.Name <> "Browse" Then
               myshape.Visible = True
           End If
    
       Next myshape
               
        Sheets("Products Listing").submit1.Enabled = False
        Sheets("Products Listing").submit2.Enabled = False
        
        'Clear out additional products data
        For prodnum = 3 To 80 Step 1
            Sheets("Products-Services").Range("A" & prodnum).Value = ""
        Next
        
        Sheets("Different AHCs").Submit.Enabled = False
        Sheets("Different AHCs").nextb.Enabled = True
        Sheets("Same AHCs").Columns("C:IV").Delete Shift:=xlToLeft
Sheets("Different AHCs").Columns("C:IV").Delete Shift:=xlToLeft
        Sheets("Additional AHC's").Columns("C:IV").Delete Shift:=xlToLeft

            Sheets("Off-Line Form").TFMT.Value = 0
    
    Sheets("Off-Line Form").ONM.Value = 0
    Sheets("Off-Line Form").GMT.Value = 0

    
    Sheets("Off-Line Form").RSMT.Value = 0
 
    
    Sheets("Off-Line Form").SMT.Value = 0

    
    Sheets("Off-Line Form").WHA.Value = 0
   
    
    Sheets("Off-Line Form").CCMT.Value = 0
    
    
    Sheets("Off-Line Form").VOIPMT.Value = 0
  
    
    Sheets("Off-Line Form").CSTT.Value = 0
    

            Sheets("Off-Line Form").TFMT.Enabled = False
    Sheets("Off-Line Form").TFMTinfo.Enabled = False
    
    Sheets("Off-Line Form").ONM.Enabled = False
    Sheets("Off-Line Form").ONMinfo.Enabled = False
    
    Sheets("Off-Line Form").GMT.Enabled = False
    Sheets("Off-Line Form").GMTinfo.Enabled = False
    
    Sheets("Off-Line Form").RSMT.Enabled = False
    Sheets("Off-Line Form").RSMTinfo.Enabled = False
    
    Sheets("Off-Line Form").SMT.Enabled = False
    Sheets("Off-Line Form").SMTinfo.Enabled = False
    
    Sheets("Off-Line Form").WHA.Enabled = False
    Sheets("Off-Line Form").WHAinfo.Enabled = False
    
    Sheets("Off-Line Form").CCMT.Enabled = False
    Sheets("Off-Line Form").CCMTinfo.Enabled = False
    
    Sheets("Off-Line Form").VOIPMT.Enabled = False
    Sheets("Off-Line Form").VOIPMTinfo.Enabled = False
    
    Sheets("Off-Line Form").CSTT.Enabled = False
    Sheets("Off-Line Form").CSTTinfo.Enabled = False
    
    Sheets("Off-Line Form").Additionalconfirm.Enabled = False
    Sheets("Off-Line Form").Range("J1").Select
    Sheets("User Profile").AccessRightssubmit.Visible = False
    Else
    End If
    
    
    For Each sh In ActiveWorkbook.Worksheets
    x = sh.UsedRange.Rows.Count 'see J-Walkenbach tip 73
    Next sh
  
End Sub



Private Sub VOIPMT_Click()
If VOIPMT.Value = 0 Then
    Additionalconfirm.Enabled = False
Else
    Additionalconfirm.Enabled = True
    noneapp.Value = 0
End If
End Sub

Private Sub VOIPMTinfo_Click()
    Instructions = MsgBox("The VoIP Management Tool enables customers to manage their network more efficiently, while reducing costs and taking advantage of leading-edge multimedia business capabilities.", vbInformation, "Voice Over IP Management Tool Description")
End Sub

Private Sub WHA_Click()
If WHA.Value = 0 Then
    Additionalconfirm.Enabled = False
Else
    Additionalconfirm.Enabled = True
    noneapp.Value = 0
End If
End Sub

Private Sub WHAinfo_Click()
    Instructions = MsgBox("The Web Hosting Application is the customer-facing portal for enterprise hosting, hosted services and premium data center services.", vbInformation, "Web Hosting Application Description")
End Sub





Private Sub Workbook_Open()


Instruction = MsgBox("This self-guided form provides users the option to register and request entitlements offline.  It is used for requests from agencies with a large # of users and/or Agency Hierarchy Codes.  After completing each section and confirming your input, click the appropriate button to go to next section.  When buttons are 'grayed out', input has been accepted.  Once all selections are completed, review the form and print a summary of your request before submitting", vbInformation, "Welcome to Off-Line Networx Registration!")




End Sub
Attribute VB_Name = "Sheet10"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Control = "Returnkey, 82, 0, MSForms, CommandButton"
Attribute VB_Control = "AccessRightssubmit, 12, 1, MSForms, CommandButton"
Attribute VB_Control = "Userprofilesubmit, 3, 2, MSForms, CommandButton"
Attribute VB_Control = "addrows, 98, 3, MSForms, CommandButton"
Dim Instruction, x, newrange, newrows, returnvalue
Private Sub AccessRightssubmit_Click()
Application.ScreenUpdating = False
Sheets("Reporting Types").Returnkey.Visible = False
    Instruction = MsgBox("Is the entitlements information correct?", vbYesNo, "Confirmation")
    
    If Instruction = 6 Then
    
    
    ordernum = Sheets("Off-Line Form").Users.Text
    reportingnum = Sheets("Off-Line Form").Users.Text
    billingnum = Sheets("Off-Line Form").Users.Text
    troublenum = Sheets("Off-Line Form").Users.Text
    
    titleerror = 0
    newrange = Sheets("Off-Line Form").Users.Text + 3
    
    For x = 4 To newrange Step 1
        If Sheets("User Profile").Range("I" & x).Value = "" Then
            Sheets("User Profile").Range("I" & x).Interior.ColorIndex = 3
            titleerror = 1
        Else
            Sheets("User Profile").Range("I" & x).Interior.ColorIndex = 36
        End If
        
        If Sheets("Off-Line Form").OS.Value = True Then
            If Sheets("User Profile").Range("N" & x).Value = "" Then
                ordernum = ordernum - 1
                If ordernum = 0 Then
                    Sheets("User Profile").Range("N" & x).Interior.ColorIndex = 3
                End If
            Else
                Sheets("User Profile").Range("N" & x).Interior.ColorIndex = 36
                
            End If
        Else
            Sheets("User Profile").Range("N" & x).Value = ""
        End If
        
        If Sheets("Off-Line Form").MR.Value = True Then
            If Sheets("User Profile").Range("O" & x).Value = "" Or Sheets("User Profile").Range("O" & x).Value = "No" Or Sheets("User Profile").Range("O" & x).Value = "no" Then
                Sheets("User Profile").Range("O" & x).Value = "No"
                reportingnum = reportingnum - 1
                
                If reportingnum = 0 Then
                    Sheets("User Profile").Range("O" & x).Interior.ColorIndex = 3
                End If
            Else
                Sheets("User Profile").Range("O" & x).Interior.ColorIndex = 36
                
            End If
        Else
            Sheets("User Profile").Range("O" & x).Value = "No"
        End If
        
        If Sheets("Off-Line Form").IAS.Value = True Then
            If Sheets("User Profile").Range("P" & x).Value = "" Or Sheets("User Profile").Range("P" & x).Value = "No" Or Sheets("User Profile").Range("P" & x).Value = "no" Then
                Sheets("User Profile").Range("P" & x).Value = "No"
                billingnum = billingnum - 1
                If billingnum = 0 Then
                    Sheets("User Profile").Range("P" & x).Interior.ColorIndex = 3
                End If
            Else
                Sheets("User Profile").Range("P" & x).Interior.ColorIndex = 36
                
            End If
        Else
            Sheets("User Profile").Range("P" & x).Value = "No"
        End If
        
        If Sheets("Off-Line Form").TT.Value = True Then
            If Sheets("User Profile").Range("Q" & x).Value = "" Then
                troublenum = troublenum - 1
                
                If troublenum = 0 Then
                    Sheets("User Profile").Range("Q" & x).Interior.ColorIndex = 3
                End If
            Else
                Sheets("User Profile").Range("Q" & x).Interior.ColorIndex = 36
                
            End If
        Else
            Sheets("User Profile").Range("Q" & x).Value = ""
        End If
        
        If Sheets("User Profile").Range("K" & x).Value = "" Then
                Sheets("User Profile").Range("K" & x).Value = "No"
        End If
                      
    Next
    
    If ordernum = 0 And reportingnum = 0 And billingnum = 0 And troublenum = 0 And titleerror = 1 Then
        newinstr = MsgBox("You must make the following corrections before proceeding" _
        & Chr(13) & Chr(10) & "     - Select permissions for Order Services" _
        & Chr(13) & Chr(10) & "     - Select permissions for Metrix Reporting" _
        & Chr(13) & Chr(10) & "     - Select permissions for Invoicing Application" _
        & Chr(13) & Chr(10) & "     - ASelect permissions for Trouble Ticketing" _
        & Chr(13) & Chr(10) & "     - Select a User Title for each user.", vbCritical, "Warning - Incomplete Form")
        
    ElseIf ordernum = 0 And reportingnum = 0 And billingnum = 0 And troublenum = 0 And titleerror <> 1 Then
        newinstr = MsgBox("You must make the following corrections before proceeding" _
        & Chr(13) & Chr(10) & "     - Select permissions for Order Services" _
        & Chr(13) & Chr(10) & "     - Select permissions for Metrix Reporting" _
        & Chr(13) & Chr(10) & "     - Select permissions for Invoicing Application" _
        & Chr(13) & Chr(10) & "     - Select permissions for Trouble Ticketing", vbCritical, "Warning - Incomplete Form")
    
    ElseIf ordernum = 0 And reportingnum = 0 And billingnum = 0 And troublenum <> 0 And titleerror = 1 Then
        newinstr = MsgBox("You must make the following corrections before proceeding" _
        & Chr(13) & Chr(10) & "     - Select permissions for Order Services" _
        & Chr(13) & Chr(10) & "     - Select permissions for Metrix Reporting" _
        & Chr(13) & Chr(10) & "     - Select permissions for Invoicing Application" _
        & Chr(13) & Chr(10) & "     - Select a User Title for each user.", vbCritical, "Warning - Incomplete Form")
    
    ElseIf ordernum = 0 And reportingnum = 0 And billingnum <> 0 And troublenum = 0 And titleerror = 1 Then
        newinstr = MsgBox("You must make the following corrections before proceeding" _
        & Chr(13) & Chr(10) & "     - Select permissions for Order Services" _
        & Chr(13) & Chr(10) & "     - Select permissions for Metrix Reporting" _
        & Chr(13) & Chr(10) & "     - Select permissions for Trouble Ticketing" _
        & Chr(13) & Chr(10) & "     - Select a User Title for each user.", vbCritical, "Warning - Incomplete Form")
    
    ElseIf ordernum = 0 And reportingnum <> 0 And billingnum = 0 And troublenum = 0 And titleerror = 1 Then
        newinstr = MsgBox("You must make the following corrections before proceeding" _
        & Chr(13) & Chr(10) & "     - Select permissions for Order Services" _
        & Chr(13) & Chr(10) & "     - Select permissions for Invoicing Application" _
        & Chr(13) & Chr(10) & "     - Select permissions for Trouble Ticketing" _
        & Chr(13) & Chr(10) & "     - Select a User Title for each user.", vbCritical, "Warning - Incomplete Form")
    
    ElseIf ordernum <> 0 And reportingnum = 0 And billingnum = 0 And troublenum = 0 And titleerror = 1 Then
        newinstr = MsgBox("You must make the following corrections before proceeding" _
        & Chr(13) & Chr(10) & "     - Select permissions for Metrix Reporting" _
        & Chr(13) & Chr(10) & "     - Select permissions for Invoicing Application" _
        & Chr(13) & Chr(10) & "     - ASelect permissions for Trouble Ticketing" _
        & Chr(13) & Chr(10) & "     - Select a User Title for each user.", vbCritical, "Warning - Incomplete Form")
       
    
    ElseIf ordernum = 0 And reportingnum = 0 And billingnum = 0 And troublenum <> 0 And titleerror <> 1 Then
        newinstr = MsgBox("You must make the following corrections before proceeding" _
        & Chr(13) & Chr(10) & "     - Select permissions for Order Services" _
        & Chr(13) & Chr(10) & "     - Select permissions for Metrix Reporting" _
        & Chr(13) & Chr(10) & "     - Select permissions for Invoicing Application", vbCritical, "Warning - Incomplete Form")
    
    ElseIf ordernum = 0 And reportingnum = 0 And billingnum <> 0 And troublenum = 0 And titleerror <> 1 Then
        newinstr = MsgBox("You must make the following corrections before proceeding" _
        & Chr(13) & Chr(10) & "     - Select permissions for Order Services" _
        & Chr(13) & Chr(10) & "     - Select permissions for Metrix Reporting" _
        & Chr(13) & Chr(10) & "     - Select permissions for Trouble Ticketing", vbCritical, "Warning - Incomplete Form")
    
    ElseIf ordernum = 0 And reportingnum <> 0 And billingnum = 0 And troublenum = 0 And titleerror <> 1 Then
        newinstr = MsgBox("You must make the following corrections before proceeding" _
        & Chr(13) & Chr(10) & "     - Select permissions for Order Services" _
        & Chr(13) & Chr(10) & "     - Select permissions for Invoicing Application" _
        & Chr(13) & Chr(10) & "     - Select permissions for Trouble Ticketing", vbCritical, "Warning - Incomplete Form")
    
    ElseIf ordernum <> 0 And reportingnum = 0 And billingnum = 0 And troublenum = 0 And titleerror <> 1 Then
        newinstr = MsgBox("You must make the following corrections before proceeding" _
        & Chr(13) & Chr(10) & "     - Select permissions for Metrix Reporting" _
        & Chr(13) & Chr(10) & "     - Select permissions for Invoicing Application" _
        & Chr(13) & Chr(10) & "     - Select permissions for Trouble Ticketing", vbCritical, "Warning - Incomplete Form")
       
    ElseIf ordernum = 0 And reportingnum = 0 And billingnum = 0 And troublenum <> 0 And titleerror <> 1 Then
        newinstr = MsgBox("You must make the following corrections before proceeding" _
        & Chr(13) & Chr(10) & "     - Select permissions for Order Services" _
        & Chr(13) & Chr(10) & "     - Select permissions for Metrix Reporting" _
        & Chr(13) & Chr(10) & "     - Select permissions for Invoicing Application", vbCritical, "Warning - Incomplete Form")
    
    ElseIf ordernum = 0 And reportingnum = 0 And billingnum <> 0 And troublenum <> 0 And titleerror = 1 Then
        newinstr = MsgBox("You must make the following corrections before proceeding" _
        & Chr(13) & Chr(10) & "     - Select permissions for Order Services" _
        & Chr(13) & Chr(10) & "     - Select permissions for Metrix Reporting" _
        & Chr(13) & Chr(10) & "     - Select a User Title for each user.", vbCritical, "Warning - Incomplete Form")
    
    ElseIf ordernum = 0 And reportingnum <> 0 And billingnum = 0 And troublenum <> 0 And titleerror = 1 Then
        newinstr = MsgBox("You must make the following corrections before proceeding" _
        & Chr(13) & Chr(10) & "     - Select permissions for Order Services" _
        & Chr(13) & Chr(10) & "     - Select permissions for Invoicing Application" _
        & Chr(13) & Chr(10) & "     - Select a User Title for each user.", vbCritical, "Warning - Incomplete Form")
    
    ElseIf ordernum <> 0 And reportingnum = 0 And billingnum = 0 And troublenum <> 0 And titleerror = 1 Then
        newinstr = MsgBox("You must make the following corrections before proceeding" _
        & Chr(13) & Chr(10) & "     - Select permissions for Metrix Reporting" _
        & Chr(13) & Chr(10) & "     - Select permissions for Invoicing Application" _
        & Chr(13) & Chr(10) & "     - Select a User Title for each user.", vbCritical, "Warning - Incomplete Form")
    
    ElseIf ordernum = 0 And reportingnum = 0 And billingnum <> 0 And troublenum = 0 And titleerror <> 1 Then
        newinstr = MsgBox("You must make the following corrections before proceeding" _
        & Chr(13) & Chr(10) & "     - Select permissions for Order Services" _
        & Chr(13) & Chr(10) & "     - Select permissions for Metrix Reporting" _
        & Chr(13) & Chr(10) & "     - Select permissions for Trouble Ticketing", vbCritical, "Warning - Incomplete Form")
    
    ElseIf ordernum = 0 And reportingnum = 0 And billingnum <> 0 And troublenum <> 0 And titleerror = 1 Then
        newinstr = MsgBox("You must make the following corrections before proceeding" _
        & Chr(13) & Chr(10) & "     - Select permissions for Order Services" _
        & Chr(13) & Chr(10) & "     - Select permissions for Metrix Reporting" _
        & Chr(13) & Chr(10) & "     - Select a User Title for each user.", vbCritical, "Warning - Incomplete Form")
    
    ElseIf ordernum = 0 And reportingnum <> 0 And billingnum <> 0 And troublenum = 0 And titleerror = 1 Then
        newinstr = MsgBox("You must make the following corrections before proceeding" _
        & Chr(13) & Chr(10) & "     - Select permissions for Order Services" _
        & Chr(13) & Chr(10) & "     - Select permissions for Trouble Ticketing" _
        & Chr(13) & Chr(10) & "     - Select a User Title for each user.", vbCritical, "Warning - Incomplete Form")
    
    ElseIf ordernum <> 0 And reportingnum = 0 And billingnum <> 0 And troublenum = 0 And titleerror = 1 Then
        newinstr = MsgBox("You must make the following corrections before proceeding" _
        & Chr(13) & Chr(10) & "     - Select permissions for Metrix Reporting" _
        & Chr(13) & Chr(10) & "     - Select permissions for Trouble Ticketing" _
        & Chr(13) & Chr(10) & "     - Select a User Title for each user.", vbCritical, "Warning - Incomplete Form")
    
    ElseIf ordernum = 0 And reportingnum <> 0 And billingnum = 0 And troublenum = 0 And titleerror <> 1 Then
        newinstr = MsgBox("You must make the following corrections before proceeding" _
        & Chr(13) & Chr(10) & "     - Select permissions for Order Services" _
        & Chr(13) & Chr(10) & "     - Select permissions for Invoicing Application" _
        & Chr(13) & Chr(10) & "     - Select permissions for Trouble Ticketing", vbCritical, "Warning - Incomplete Form")
    
    ElseIf ordernum = 0 And reportingnum <> 0 And billingnum = 0 And troublenum <> 0 And titleerror = 1 Then
        newinstr = MsgBox("You must make the following corrections before proceeding" _
        & Chr(13) & Chr(10) & "     - Select permissions for Order Services" _
        & Chr(13) & Chr(10) & "     - Select permissions for Invoicing Application" _
        & Chr(13) & Chr(10) & "     - Select a User Title for each user.", vbCritical, "Warning - Incomplete Form")
    
    ElseIf ordernum = 0 And reportingnum <> 0 And billingnum <> 0 And troublenum = 0 And titleerror = 1 Then
        newinstr = MsgBox("You must make the following corrections before proceeding" _
        & Chr(13) & Chr(10) & "     - Select permissions for Order Services" _
        & Chr(13) & Chr(10) & "     - Select permissions for Trouble Ticketing" _
        & Chr(13) & Chr(10) & "     - Select a User Title for each user.", vbCritical, "Warning - Incomplete Form")
    
    ElseIf ordernum <> 0 And reportingnum <> 0 And billingnum = 0 And troublenum = 0 And titleerror = 1 Then
        newinstr = MsgBox("You must make the following corrections before proceeding" _
        & Chr(13) & Chr(10) & "     - Select permissions for Invoicing Application" _
        & Chr(13) & Chr(10) & "     - Select permissions for Trouble Ticketing" _
        & Chr(13) & Chr(10) & "     - Select a User Title for each user.", vbCritical, "Warning - Incomplete Form")
  
    ElseIf ordernum <> 0 And reportingnum = 0 And billingnum = 0 And troublenum = 0 And titleerror <> 1 Then
        newinstr = MsgBox("You must make the following corrections before proceeding" _
        & Chr(13) & Chr(10) & "     - Select permissions for Metrix Reporting" _
        & Chr(13) & Chr(10) & "     - Select permissions for Invoicing Application" _
        & Chr(13) & Chr(10) & "     - Select permissions for Trouble Ticketing", vbCritical, "Warning - Incomplete Form")
    
    ElseIf ordernum <> 0 And reportingnum = 0 And billingnum = 0 And troublenum <> 0 And titleerror = 1 Then
        newinstr = MsgBox("You must make the following corrections before proceeding" _
        & Chr(13) & Chr(10) & "     - Select permissions for Metrix Reporting" _
        & Chr(13) & Chr(10) & "     - Select permissions for Invoicing Application" _
        & Chr(13) & Chr(10) & "     - Select a User Title for each user.", vbCritical, "Warning - Incomplete Form")
    
    ElseIf ordernum <> 0 And reportingnum = 0 And billingnum <> 0 And troublenum = 0 And titleerror = 1 Then
        newinstr = MsgBox("You must make the following corrections before proceeding" _
        & Chr(13) & Chr(10) & "     - Select permissions for Metrix Reporting" _
        & Chr(13) & Chr(10) & "     - Select permissions for Trouble Ticketing" _
        & Chr(13) & Chr(10) & "     - Select a User Title for each user.", vbCritical, "Warning - Incomplete Form")
    
    ElseIf ordernum <> 0 And reportingnum <> 0 And billingnum = 0 And troublenum = 0 And titleerror = 1 Then
        newinstr = MsgBox("You must make the following corrections before proceeding" _
        & Chr(13) & Chr(10) & "     - Select permissions for Invoicing Application" _
        & Chr(13) & Chr(10) & "     - Select permissions for Trouble Ticketing" _
        & Chr(13) & Chr(10) & "     - Select a User Title for each user.", vbCritical, "Warning - Incomplete Form")
    
    ElseIf ordernum <> 0 And reportingnum <> 0 And billingnum <> 0 And troublenum = 0 And titleerror = 1 Then
        newinstr = MsgBox("You must make the following corrections before proceeding" _
        & Chr(13) & Chr(10) & "     - Select permissions for Trouble Ticketing" _
        & Chr(13) & Chr(10) & "     - Select a User Title for each user.", vbCritical, "Warning - Incomplete Form")
    
    ElseIf ordernum <> 0 And reportingnum <> 0 And billingnum = 0 And troublenum <> 0 And titleerror = 1 Then
        newinstr = MsgBox("You must make the following corrections before proceeding" _
        & Chr(13) & Chr(10) & "     - Select permissions for Invoicing Application" _
        & Chr(13) & Chr(10) & "     - Select a User Title for each user.", vbCritical, "Warning - Incomplete Form")
    
    ElseIf ordernum <> 0 And reportingnum = 0 And billingnum <> 0 And troublenum <> 0 And titleerror = 1 Then
        newinstr = MsgBox("You must make the following corrections before proceeding" _
        & Chr(13) & Chr(10) & "     - Select permissions for Metrix Reporting" _
        & Chr(13) & Chr(10) & "     - Select a User Title for each user.", vbCritical, "Warning - Incomplete Form")
    
    ElseIf ordernum = 0 And reportingnum <> 0 And billingnum <> 0 And troublenum <> 0 And titleerror = 1 Then
        newinstr = MsgBox("You must make the following corrections before proceeding" _
        & Chr(13) & Chr(10) & "     - Select permissions for Order Services" _
        & Chr(13) & Chr(10) & "     - Select a User Title for each user.", vbCritical, "Warning - Incomplete Form")
    
    ElseIf ordernum <> 0 And reportingnum <> 0 And billingnum = 0 And troublenum = 0 And titleerror <> 1 Then
        newinstr = MsgBox("You must make the following corrections before proceeding" _
        & Chr(13) & Chr(10) & "     - Select permissions for Invoicing Application" _
        & Chr(13) & Chr(10) & "     - Select permissions for Trouble Ticketing", vbCritical, "Warning - Incomplete Form")
    
    ElseIf ordernum <> 0 And reportingnum = 0 And billingnum <> 0 And troublenum = 0 And titleerror <> 1 Then
        newinstr = MsgBox("You must make the following corrections before proceeding" _
        & Chr(13) & Chr(10) & "     - Select permissions for Metrix Reporting" _
        & Chr(13) & Chr(10) & "     - Select permissions for Trouble Ticketing", vbCritical, "Warning - Incomplete Form")
    
    ElseIf ordernum = 0 And reportingnum <> 0 And billingnum <> 0 And troublenum = 0 And titleerror <> 1 Then
        newinstr = MsgBox("You must make the following corrections before proceeding" _
        & Chr(13) & Chr(10) & "     - Select permissions for Order Services" _
        & Chr(13) & Chr(10) & "     - Select permissions for Trouble Ticketing", vbCritical, "Warning - Incomplete Form")
    
    ElseIf ordernum <> 0 And reportingnum = 0 And billingnum = 0 And troublenum <> 0 And titleerror <> 1 Then
        newinstr = MsgBox("You must make the following corrections before proceeding" _
        & Chr(13) & Chr(10) & "     - Select permissions for Metrix Reporting" _
        & Chr(13) & Chr(10) & "     - Select permissions for Invoicing Application", vbCritical, "Warning - Incomplete Form")
    
    ElseIf ordernum = 0 And reportingnum <> 0 And billingnum = 0 And troublenum <> 0 And titleerror <> 1 Then
        newinstr = MsgBox("You must make the following corrections before proceeding" _
        & Chr(13) & Chr(10) & "     - Select permissions for Order Services" _
        & Chr(13) & Chr(10) & "     - Select permissions for Invoicing Application", vbCritical, "Warning - Incomplete Form")
    
    ElseIf ordernum = 0 And reportingnum = 0 And billingnum <> 0 And troublenum <> 0 And titleerror <> 1 Then
        newinstr = MsgBox("You must make the following corrections before proceeding" _
        & Chr(13) & Chr(10) & "     - Select permissions for Order Services" _
        & Chr(13) & Chr(10) & "     - Select permissions for Metrix Reporting", vbCritical, "Warning - Incomplete Form")
    ElseIf ordernum <> 0 And reportingnum <> 0 And billingnum <> 0 And troublenum <> 0 And titleerror = 1 Then
        newinstr = MsgBox("You must make the following corrections before proceeding" _
        & Chr(13) & Chr(10) & "     - Select a User Title for each user.", vbCritical, "Warning - Incomplete Form")
    
    ElseIf ordernum <> 0 And reportingnum <> 0 And billingnum <> 0 And troublenum = 0 And titleerror <> 1 Then
        newinstr = MsgBox("You must make the following corrections before proceeding" _
        & Chr(13) & Chr(10) & "     - Select permissions for Trouble Ticketing", vbCritical, "Warning - Incomplete Form")
    
    ElseIf ordernum <> 0 And reportingnum <> 0 And billingnum = 0 And troublenum <> 0 And titleerror <> 1 Then
        newinstr = MsgBox("You must make the following corrections before proceeding" _
        & Chr(13) & Chr(10) & "     - Select permissions for Invoicing Application", vbCritical, "Warning - Incomplete Form")
    
    ElseIf ordernum <> 0 And reportingnum = 0 And billingnum <> 0 And troublenum <> 0 And titleerror <> 1 Then
        newinstr = MsgBox("You must make the following corrections before proceeding" _
        & Chr(13) & Chr(10) & "     - Select permissions for Metrix Reporting", vbCritical, "Warning - Incomplete Form")
    
    ElseIf ordernum = 0 And reportingnum <> 0 And billingnum <> 0 And troublenum <> 0 And titleerror <> 1 Then
        newinstr = MsgBox("You must make the following corrections before proceeding" _
        & Chr(13) & Chr(10) & "     - Select permissions for Order Services", vbCritical, "Warning - Incomplete Form")
       
    Else
    
    ent = 0
    returnvalue = 0
    
    newperm = ""
    newname = ""
    ReDim SumAccess(4)
    ReDim SumPerm(4)
    
    For x = 4 To newrange Step 1
        If Sheets("User Profile").Range("N" & x).Value <> "" And Sheets("User Profile").Range("O" & x).Value <> "Yes" Then
            Sheets("User Profile").Range("O" & x).Value = "Yes"
            returnvalue = 1
        End If
        If Sheets("User Profile").Range("N" & x).Value <> "" Then
'            SumAccess(ent) = "Order Services"
            
            If Sheets("User Profile").Range("N" & x).Value = "Submit, Create, View" Then
                SumPerm(ent) = "Ordering (Submit)"
                ent = ent + 1
            End If
            
            If Sheets("User Profile").Range("N" & x).Value = "Create, View" Then
                SumPerm(ent) = "Ordering (Create)"
                ent = ent + 1
            End If
            
            If Sheets("User Profile").Range("N" & x).Value = "View" Then
                SumPerm(ent) = "Ordering (View)"
                ent = ent + 1
            End If
            
            
        End If
        
        If Sheets("User Profile").Range("O" & x).Value <> "" Then
'            SumAccess(ent) = "Metrix Reporting"
            
            If Sheets("User Profile").Range("O" & x).Value = "Yes" Then
                SumPerm(ent) = "Reporting (View)"
                ent = ent + 1
            End If
            
            
        End If
        
        If Sheets("User Profile").Range("P" & x).Value <> "" Then
'            SumAccess(ent) = "Invoice Application Suite"
            If Sheets("User Profile").Range("P" & x).Value = "Yes" Then
                SumPerm(ent) = "Billing (View)"
                ent = ent + 1
            End If
            
        End If
        
        If Sheets("User Profile").Range("Q" & x).Value <> "" Then
'            SumAccess(ent) = "Trouble Ticketing"
            If Sheets("User Profile").Range("Q" & x).Value = "Create, Modify, View" Then
                SumPerm(ent) = "Ticketing (Create-Modify)"
                ent = ent + 1
            End If
            
            If Sheets("User Profile").Range("Q" & x).Value = "Create, View" Then
                SumPerm(ent) = "Ticketing (Create)"
                ent = ent + 1
            End If
            If Sheets("User Profile").Range("Q" & x).Value = "Modify, View" Then
                SumPerm(ent) = "Ticketing (Modify)"
                ent = ent + 1
            End If
            If Sheets("User Profile").Range("Q" & x).Value = "View" Then
                SumPerm(ent) = "Ticketing (View)"
                ent = ent + 1
            End If
            
        End If
        
        For addingx = 0 To ent Step 1
            
            If addingx = 0 Then
'                newname = SumAccess(addingx)
                newperm = SumPerm(addingx)
            Else
                If addingx <> ent Then
'                    newname = newname & "; " & SumAccess(addingx)
                    newperm = newperm & "; " & SumPerm(addingx)
                End If
            End If
        Next
        
        Sheets("Summary").Range("A" & x - 1).Value = Sheets("User Profile").Range("I" & x).Value
        Sheets("Summary").Range("B" & x - 1).Value = Sheets("User Profile").Range("B" & x).Value & ", " & Sheets("User Profile").Range("A" & x).Value
'        Sheets("Summary").Range("C" & x - 1).Value = newname
        Sheets("Summary").Range("C" & x - 1).Value = newperm
        newperm = ""
        newname = ""
        ent = 0
        ReDim SumAccess(4)
        ReDim SumPerm(4)
'        Sheets("Summary").Range("C" & x - 1).Value = Sheets("User Profile").Range("N" & x).Value    'OS
'        Sheets("Summary").Range("D" & x - 1).Value = Sheets("User Profile").Range("O" & x).Value    'Reporting
'        Sheets("Summary").Range("E" & x).Value = Sheets("User Profile").Range("P" & x).Value    'Billing
'        Sheets("Summary").Range("F" & x).Value = Sheets("User Profile").Range("Q" & x).Value    'Trouble Ticketing
               
    Next
            
    
'    For x = 4 To newrange Step 1
'        Sheets("Summary").Range("A" & x).Value = Sheets("User Profile").Range("B" & x).Value & ", " & Sheets("User Profile").Range("A" & x).Value
'    Next
    
    If returnvalue = 0 Then
    newrange = Sheets("Off-Line Form").Users.Text + 3
    MRexists = 0
    For x = 4 To newrange Step 1
        If Sheets("User Profile").Range("O" & x).Value = "Yes" Then
            MRexists = 1
        End If
    Next
    
    If MRexists = 1 Then
               
'        Instruction = MsgBox("When selecting Metrix Reporting, an additional step is required to select report types.")
        newrange = Sheets("Off-Line Form").Users.Text + 3
        newrows = 0
                
        For x = 4 To newrange Step 1
            searchx = 3
            returnvalue = 0
            Do While Sheets("Reporting Types").Range("A" & searchx).Value <> ""
                If Sheets("User Profile").Range("G" & x).Value = Sheets("Reporting Types").Range("A" & searchx).Value Then
                    returnvalue = 1
                    newrows = newrows + 1
                End If
                searchx = searchx + 1
            Loop
            
            If Sheets("User Profile").Range("O" & x).Value = "Yes" And returnvalue <> 1 Then

                Sheets("Reporting Types").Visible = True
                Sheets("Reporting Types").Select
                ActiveSheet.Rows("3:3").Select
                Selection.Insert Shift:=xlDown
                
                newrows = newrows + 1
                
                Sheets("Reporting Types").Range("A3").Value = Sheets("User Profile").Range("G" & x).Value
         
                Sheets("Reporting Types").Range("B3").Value = Sheets("Off-Line Form").ABCODE.Text
                
                Sheets("Reporting Types").Range("C3").Value = "Employee"
                Sheets("Reporting Types").Range("D3").Value = "End User"
                Sheets("Reporting Types").Range("E3").Value = "DEFAULT"
                
                If Sheets("User Profile").Range("N" & x).Value = "Yes" Then
                    Sheets("Reporting Types").Range("H3").Value = "Yes"
                End If
     
            Else
            
                
            End If
                
        Next
       
        'Sheets("User Profile").Visible = False
        Sheets("Reporting Types").Visible = True
        
        newrows = newrows + 2
        
        Sheets("Reporting Types").Select
        
        'Highlight and Create Boarders
        ActiveSheet.Range("A3:J" & newrows).Select
        Selection.Interior.ColorIndex = 36
        ActiveSheet.Range("A3:J" & newrows).Select
        Selection.Borders(xlDiagonalDown).LineStyle = xlNone
        Selection.Borders(xlDiagonalUp).LineStyle = xlNone
        With Selection.Borders(xlEdgeLeft)
            .LineStyle = xlContinuous
            .Weight = xlThin
            .ColorIndex = xlAutomatic
        End With
        With Selection.Borders(xlEdgeTop)
            .LineStyle = xlContinuous
            .Weight = xlThin
            .ColorIndex = xlAutomatic
        End With
        With Selection.Borders(xlEdgeBottom)
            .LineStyle = xlContinuous
            .Weight = xlThin
            .ColorIndex = xlAutomatic
        End With
        With Selection.Borders(xlEdgeRight)
            .LineStyle = xlContinuous
            .Weight = xlThin
            .ColorIndex = xlAutomatic
        End With
        With Selection.Borders(xlInsideVertical)
            .LineStyle = xlContinuous
            .Weight = xlThin
            .ColorIndex = xlAutomatic
        End With
        
       On Error Resume Next
            With Selection.Borders(xlInsideHorizontal)
                .LineStyle = xlContinuous
                .Weight = xlThin
                .ColorIndex = xlAutomatic
            End With
      
        
        ActiveSheet.Range("F3").Select
        
        Sheets("Off-Line Form").Visible = False
        Sheets("User Profile").Visible = False
        Sheets("Reporting Types").Visible = True
        Application.ScreenUpdating = True
        Instruction = MsgBox("Follow the example (john.doe@verizonbusiness.com) and select the appropriate Metrix Reporting permissions for each user.  For additional information on report types, click 'Help'", vbInformation, "Metrix Reporting Permissions Instructions")

        
    Else
    
        Sheets("Off-Line Form").Visible = True
        Sheets("User Profile").Visible = False
        Sheets("Off-Line Form").Select
        Application.ScreenUpdating = True
    End If
    
    Else
    
    Instruction = MsgBox("Reporting is needed when Order Services is selected to" _
        & Chr(13) & Chr(10) & "view the order status reports ", vbExclamation, "Access Rights Requirement")
    
    
    
    End If
'    Sheets("Products Listing").Range("A1").Select
End If
Else
End If
ActiveWindow.LargeScroll ToRight:=-1
    Application.ScreenUpdating = True
    
    
End Sub

Private Sub addrows_Click()
'Create a rows for the new list of users to be added
    x = 4
    Do While Sheets("User Profile").Range("A" & x).Value <> "" Or Sheets("User Profile").Range("A" & x).Interior.ColorIndex = 36
        x = x + 1
    Loop
    
    Sheets("Off-Line Form").Users.Text = x - 3
    On Error Resume Next
    
        ActiveSheet.Rows(x & ":" & x).Select
        Selection.Insert Shift:=xlDown
    
       ActiveWindow.SmallScroll Down:=-65536
    ActiveWindow.SmallScroll Up:=65536
    newrange = Users.Text + 3
    'Highlight and Create Boarders
    ActiveSheet.Range("A4:R" & x).Select
    Selection.Interior.ColorIndex = 36
    ActiveSheet.Range("A4:R" & x).Select
    Selection.Borders(xlDiagonalDown).LineStyle = xlNone
    Selection.Borders(xlDiagonalUp).LineStyle = xlNone
    With Selection.Borders(xlEdgeLeft)
        .LineStyle = xlContinuous
        .Weight = xlThin
        .ColorIndex = xlAutomatic
    End With
    With Selection.Borders(xlEdgeTop)
        .LineStyle = xlContinuous
        .Weight = xlThin
        .ColorIndex = xlAutomatic
    End With
    With Selection.Borders(xlEdgeBottom)
        .LineStyle = xlContinuous
        .Weight = xlThin
        .ColorIndex = xlAutomatic
    End With
    With Selection.Borders(xlEdgeRight)
        .LineStyle = xlContinuous
        .Weight = xlThin
        .ColorIndex = xlAutomatic
    End With
    
    On Error Resume Next
    With Selection.Borders(xlInsideVertical)
        .LineStyle = xlContinuous
        .Weight = xlThin
        .ColorIndex = xlAutomatic
    End With
    With Selection.Borders(xlInsideHorizontal)
        .LineStyle = xlContinuous
        .Weight = xlThin
        .ColorIndex = xlAutomatic
    End With
  
    
    Sheets("User Profile").Range("A" & x).Select
    
End Sub

Private Sub Returnkey_Click()
    Application.ScreenUpdating = False
    Sheets("Off-Line Form").Visible = True
    Sheets("Summary").Visible = False
    Sheets("User Profile").Visible = False
    Sheets("Reporting Types").Visible = False
    Sheets("Additional AHC's").Visible = False
    Application.ScreenUpdating = True
End Sub

Private Sub Userprofilesubmit_Click()
Application.ScreenUpdating = False
x = 4

Do While Sheets("User Profile").Range("A" & x).Value <> ""
    x = x + 1
Loop


    'Instruction = MsgBox("On the Off-Line Form you have stated (" & Sheets("Off-Line Form").Users.Text & ") users will be entered, but you have only completed information for (" & x - 4 & ") users.  Would you like to proceed with only (" & x - 4 & ") users?)", vbYesNo, "Confirmation")


'If Instruction = 6 Then
If x - 4 < Sheets("Off-Line Form").Users.Text Then
    For t = Sheets("Off-Line Form").Users.Text To x - 4 Step -1
        Sheets("User Profile").Rows(x & ":" & x).Delete Shift:=xlUp
    Next
'End If
    Sheets("Off-Line Form").Users.Text = x - 4


    Instruction = MsgBox("Confirm the information is correct before proceeding", vbYesNo, "Confirmation")
    
    If Instruction = 6 Then
    
    
    x = 4
    returnvalue = 0
    phoneerror = 0
    newrange = Sheets("Off-Line Form").Users.Text + 3
    For x = 4 To newrange Step 1
    
        If Sheets("User Profile").Range("A" & x).Value = "" Then
            returnvalue = 1
            Sheets("User Profile").Range("A" & x).Interior.ColorIndex = 3
        Else
            Sheets("User Profile").Range("A" & x).Interior.ColorIndex = 36
        End If
        
        If Sheets("User Profile").Range("B" & x).Value = "" Then
            returnvalue = 1
            Sheets("User Profile").Range("B" & x).Interior.ColorIndex = 3
        Else
            Sheets("User Profile").Range("B" & x).Interior.ColorIndex = 36
        End If
        
        If Sheets("User Profile").Range("C" & x).Value = "" Then
            returnvalue = 1
            Sheets("User Profile").Range("C" & x).Interior.ColorIndex = 3
        Else
            Sheets("User Profile").Range("C" & x).Interior.ColorIndex = 36
        End If
        
        If Sheets("User Profile").Range("D" & x).Value = "" Then
            returnvalue = 1
            Sheets("User Profile").Range("D" & x).Interior.ColorIndex = 3
        Else
            Sheets("User Profile").Range("D" & x).Interior.ColorIndex = 36
        End If
        
        If Sheets("User Profile").Range("E" & x).Value = "" Then
            returnvalue = 1
            Sheets("User Profile").Range("E" & x).Interior.ColorIndex = 3
        Else
            Sheets("User Profile").Range("E" & x).Interior.ColorIndex = 36
        End If
        
        If Sheets("User Profile").Range("F" & x).Value = "" Then
            returnvalue = 1
            Sheets("User Profile").Range("F" & x).Interior.ColorIndex = 3
        Else
            Sheets("User Profile").Range("F" & x).Interior.ColorIndex = 36
        End If
        
        If Sheets("User Profile").Range("G" & x).Value = "" Then
            returnvalue = 1
            Sheets("User Profile").Range("G" & x).Interior.ColorIndex = 3
        Else
            Sheets("User Profile").Range("G" & x).Interior.ColorIndex = 36
        End If
        
        If Sheets("User Profile").Range("H" & x).Value = "" Then
            returnvalue = 1
            Sheets("User Profile").Range("H" & x).Interior.ColorIndex = 3
        Else
            Sheets("User Profile").Range("H" & x).Interior.ColorIndex = 36
        End If
        
        If Len(Sheets("User Profile").Range("H" & x).Value) < 12 Or Len(Sheets("User Profile").Range("H" & x).Value) > 12 Then
            returnvalue = 1
            phoneerror = 1
            Sheets("User Profile").Range("H" & x).Interior.ColorIndex = 3
            
        Else
            Sheets("User Profile").Range("H" & x).Interior.ColorIndex = 36
        End If
        
        
            Matchx = 0
            For compx = 4 To newrange Step 1
            If Sheets("User Profile").Range("G" & x).Value = Sheets("User Profile").Range("G" & compx).Value Then
                Matchx = Matchx + 1
                
                
            End If
            If Matchx >= 2 Then
            
            returnvalue = 1
            Sheets("User Profile").Range("G" & x).Interior.ColorIndex = 3
            Else
            Sheets("User Profile").Range("G" & x).Interior.ColorIndex = 36
            End If
            Next
            
         
    Next
    
    If Matchx >= 2 Then
            Instructions = MsgBox("More than one user has the same email address.  Ensure that all users have a unique email address.", vbCritical, "Duplicate Email Address")
    End If
    If phoneerror = 1 Then
    Instructions = MsgBox("Use the correct phone number format (###-###-####)", vbCritical, "Incorrect Format")
    End If
    If returnvalue = 1 Then
    Instruction = MsgBox("Complete all the necessary fields before proceeding to the next Step")
    
    Else
    
    newrange = Sheets("Off-Line Form").Users.Text + 3
    
    For x = 4 To newrange Step 1
        Sheets("Summary").Rows("3:3").Insert Shift:=xlDown
        Sheets("Summary").Range("A3:E3").Interior.ColorIndex = xlNone
                
    Next
    x = 3
    Do While Sheets("Summary").Range("A" & x).Value <> "TOTAL"
        x = x + 1
    Loop
    
    Sheets("Summary").Range("B" & x).Value = x - 3
    Sheets("Off-Line Form").Visible = True

    
    'Disable Previous Step buttons
    Sheets(1).Users.Enabled = False
    Sheets(1).Addusers.Enabled = False
    
    'Enable next Step buttons
    Sheets(1).OS.Enabled = True
    Sheets(1).OSINFO.Enabled = True
    Sheets(1).MR.Enabled = True
    Sheets(1).mrinfo.Enabled = True
    Sheets(1).IAS.Enabled = True
    Sheets(1).IASInfo.Enabled = True
    Sheets(1).TT.Enabled = True
    Sheets(1).TTInfo.Enabled = True
    Sheets(1).AccessConfirm.Enabled = True
    
    Sheets("User Profile").Select
    ActiveWindow.SelectedSheets.Visible = False
    
    Sheets("Off-Line Form").Select
    Sheets("User Profile").addrows.Visible = False
    End If
    
    Else
    End If
    End If
    Application.ScreenUpdating = True
End Sub
Attribute VB_Name = "Sheet11"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Control = "CommandButton1, 11, 0, MSForms, CommandButton"
Attribute VB_Control = "CommandButton2, 15, 4, MSForms, CommandButton"
Private Sub CommandButton1_Click()
    Application.ScreenUpdating = False
    Sheets("Off-Line Form").Visible = True
    Sheets("Summary").Visible = False
    Sheets("User Profile").Visible = False
    Sheets("Reporting Types").Visible = False
    Sheets("Additional AHC's").Visible = False
    Application.ScreenUpdating = True
End Sub


Private Sub CommandButton2_Click()
 'Disables the screen update
    Application.ScreenUpdating = False
    
    Sheets("Reporting Types").Visible = False
    Sheets("Additional AHC's").Visible = False
    Sheets("Summary").Visible = False
    
    'Conditional statements
    If Sheets("Off-Line Form").OS.Value = True And Sheets("Off-Line Form").MR.Value = True And Sheets("Off-Line Form").IAS.Value = True And Sheets("Off-Line Form").TT.Value = True Then
        'Instructions Box
'        Instruction = MsgBox("Confirm the information is correct before proceeding!  You have selected the following entitlements:" & Chr(13) & Chr(10) & "     - Order Services" _
'            & Chr(13) & Chr(10) & "     - Metrix Reporting" & Chr(13) & Chr(10) & "     - Invoice Application Suite" & Chr(13) & Chr(10) & "     - Trouble Ticketing", vbYesNo, "Confirmation")
'
        'Once confirmed directs the user to the user profile tab
'        If Instruction = 6 Then
'            Sheets("User Profile").Visible = True
'            Sheets("Off-Line Form").Visible = False
            
            'Selects the Active Sheet
            Sheets("User Profile").Select
            
            ActiveSheet.Cells.Select
            Selection.EntireColumn.Hidden = False
            
            'Hides the unwanted columns
            ActiveSheet.Columns("A:F").Select
            Selection.EntireColumn.Hidden = True
            ActiveSheet.Columns("H:H").Select
            Selection.EntireColumn.Hidden = True
            ActiveSheet.Columns("J:J").Select
            Selection.EntireColumn.Hidden = True
            ActiveSheet.Columns("K:M").Select
            Selection.EntireColumn.Hidden = True
            ActiveSheet.Columns("R:R").Select
            Selection.EntireColumn.Hidden = True
                   
            'Hides the button that is not needed
            Sheets("User Profile").Userprofilesubmit.Visible = False
            Sheets("User Profile").Userprofilesubmit.Enabled = False
            
            'Enables the needed button
            Sheets("User Profile").AccessRightssubmit.Visible = True
            Sheets("User Profile").AccessRightssubmit.Enabled = True
            
            ActiveSheet.Range("I4").Select
             
            'Disables the radio buttons and links
            Sheets("Off-Line Form").OS.Enabled = False
            OSINFO.Enabled = False
            Sheets("Off-Line Form").MR.Enabled = False
            mrinfo.Enabled = False
            Sheets("Off-Line Form").IAS.Enabled = False
            IASInfo.Enabled = False
            Sheets("Off-Line Form").TT.Enabled = False
            TTInfo.Enabled = False
            
            'Enable the next step
            sameahc.Enabled = True
            sameahcinfo.Enabled = True
            
            differentahc.Enabled = True
            differentahcinfo.Enabled = True
            
            addAHC.Enabled = True
            AccessConfirm.Enabled = False
'        Else
'        End If
    
    'conditional statement
    ElseIf Sheets("Off-Line Form").OS.Value = True And Sheets("Off-Line Form").MR.Value = True And Sheets("Off-Line Form").IAS.Value = False And Sheets("Off-Line Form").TT.Value = False Then
        'instructions box
'         Instruction = MsgBox("Confirm the information is correct before proceeding!  You have selected the following entitlements:" & Chr(13) & Chr(10) & "     - Order Services" _
'            & Chr(13) & Chr(10) & "     - Metrix Reporting", vbYesNo, "Confirmation")
    
        'Continues if Yes
'        If Instruction = 6 Then
'            'Instructions box
'            Instruction = MsgBox("Are you sure you don't want the following entitlements?" & Chr(13) & Chr(10) & "     - Invoice Application Suite" _
'                & Chr(13) & Chr(10) & "     - Trouble Ticketing", vbYesNo, "Confirmation")
    
            'continues if yes
'            If Instruction = 6 Then
'                 'Makes User profile visible
'                 Sheets("User Profile").Visible = True
'                 Sheets("Off-Line Form").Visible = False
                 
                 'Selects the Active Sheet
                 Sheets("User Profile").Select
                 
                 ActiveSheet.Cells.Select
                 Selection.EntireColumn.Hidden = False
                 
                 'Hides the unwanted columns
                 ActiveSheet.Columns("A:F").Select
                 Selection.EntireColumn.Hidden = True
                 ActiveSheet.Columns("H:H").Select
                 Selection.EntireColumn.Hidden = True
                 ActiveSheet.Columns("J:J").Select
                 Selection.EntireColumn.Hidden = True
                 ActiveSheet.Columns("K:M").Select
                 Selection.EntireColumn.Hidden = True
                 ActiveSheet.Columns("R:R").Select
                 Selection.EntireColumn.Hidden = True
                 
                 ActiveSheet.Columns("P:Q").Select
                 Selection.EntireColumn.Hidden = True
                        
                 'Hides the button that is not needed
                 Sheets("User Profile").Userprofilesubmit.Visible = False
                 Sheets("User Profile").Userprofilesubmit.Enabled = False
                 
                 'Enables the needed button
                 Sheets("User Profile").AccessRightssubmit.Visible = True
                 Sheets("User Profile").AccessRightssubmit.Enabled = True
                 
                 ActiveSheet.Range("I4").Select
                
                 Sheets("Off-Line Form").OS.Enabled = False
                 OSINFO.Enabled = False
                 Sheets("Off-Line Form").MR.Enabled = False
                 mrinfo.Enabled = False
                 Sheets("Off-Line Form").IAS.Enabled = False
                 IASInfo.Enabled = False
                 Sheets("Off-Line Form").TT.Enabled = False
                 TTInfo.Enabled = False
                 
                 sameahc.Enabled = True
                 sameahcinfo.Enabled = True
                 
                 differentahc.Enabled = True
                 differentahcinfo.Enabled = True
                 
                 addAHC.Enabled = True
                 AccessConfirm.Enabled = False
'            Else
'            End If
'        Else
'        End If
        
    ElseIf Sheets("Off-Line Form").OS.Value = True And Sheets("Off-Line Form").MR.Value = True And Sheets("Off-Line Form").IAS.Value = True And Sheets("Off-Line Form").TT.Value = False Then
'        Instruction = MsgBox("Confirm the information is correct before proceeding!  You have selected the following entitlements:" & Chr(13) & Chr(10) & "     - Order Services" _
'            & Chr(13) & Chr(10) & "     - Metrix Reporting" & Chr(13) & Chr(10) & "     - Invoice Application Suite", vbYesNo, "Confirmation")
'
'        If Instruction = 6 Then
'            Instruction = MsgBox("Are you sure you don't want the following entitlements?" & Chr(13) & Chr(10) & "     - Trouble Ticketing", vbYesNo, "Confirmation")
'
'            If Instruction = 6 Then
'                Sheets("User Profile").Visible = True
'                Sheets("Off-Line Form").Visible = False
            
                'Selects the Active Sheet
                Sheets("User Profile").Select
                
                ActiveSheet.Cells.Select
                Selection.EntireColumn.Hidden = False
                
                'Hides the unwanted columns
                ActiveSheet.Columns("A:F").Select
                Selection.EntireColumn.Hidden = True
                ActiveSheet.Columns("H:H").Select
                Selection.EntireColumn.Hidden = True
                ActiveSheet.Columns("J:J").Select
                Selection.EntireColumn.Hidden = True
                ActiveSheet.Columns("K:M").Select
                Selection.EntireColumn.Hidden = True
                ActiveSheet.Columns("R:R").Select
                Selection.EntireColumn.Hidden = True
                
                ActiveSheet.Columns("Q:Q").Select
                Selection.EntireColumn.Hidden = True
                       
                'Hides the button that is not needed
                Sheets("User Profile").Userprofilesubmit.Visible = False
                Sheets("User Profile").Userprofilesubmit.Enabled = False
                
                'Enables the needed button
                Sheets("User Profile").AccessRightssubmit.Visible = True
                Sheets("User Profile").AccessRightssubmit.Enabled = True
        
                ActiveSheet.Range("I4").Select
                
                Sheets("Off-Line Form").OS.Enabled = False
                OSINFO.Enabled = False
                Sheets("Off-Line Form").MR.Enabled = False
                mrinfo.Enabled = False
                Sheets("Off-Line Form").IAS.Enabled = False
                IASInfo.Enabled = False
                Sheets("Off-Line Form").TT.Enabled = False
                TTInfo.Enabled = False
                
                sameahc.Enabled = True
                sameahcinfo.Enabled = True
                
                differentahc.Enabled = True
                differentahcinfo.Enabled = True
                
                addAHC.Enabled = True
                AccessConfirm.Enabled = False
        '       Sheets("Off-Line Form").Summarypage.Enabled = True
'            Else
'            End If
'        Else
'        End If
    
    ElseIf Sheets("Off-Line Form").OS.Value = True And Sheets("Off-Line Form").MR.Value = True And Sheets("Off-Line Form").TT.Value = True And Sheets("Off-Line Form").IAS.Value = False Then
'         Instruction = MsgBox("Confirm the information is correct before proceeding!  You have selected the following entitlements:" & Chr(13) & Chr(10) & "     - Order Services" _
'            & Chr(13) & Chr(10) & "     - Metrix Reporting" & Chr(13) & Chr(10) & "     - Trouble Ticketing", vbYesNo, "Confirmation")
'
'        If Instruction = 6 Then
'            Instruction = MsgBox("Are you sure you don't want the following entitlements?" & Chr(13) & Chr(10) & "     - Invoice Application Suite", vbYesNo, "Confirmation")
'
'            If Instruction = 6 Then
'                Sheets("User Profile").Visible = True
'                Sheets("Off-Line Form").Visible = False
'
                
                'Selects the Active Sheet
                Sheets("User Profile").Select
                
                ActiveSheet.Cells.Select
                Selection.EntireColumn.Hidden = False
                
                'Hides the unwanted columns
                ActiveSheet.Columns("A:F").Select
                Selection.EntireColumn.Hidden = True
                ActiveSheet.Columns("H:H").Select
                Selection.EntireColumn.Hidden = True
                ActiveSheet.Columns("J:J").Select
                Selection.EntireColumn.Hidden = True
                ActiveSheet.Columns("K:M").Select
                Selection.EntireColumn.Hidden = True
                ActiveSheet.Columns("R:R").Select
                Selection.EntireColumn.Hidden = True
                
                ActiveSheet.Columns("P:P").Select
                Selection.EntireColumn.Hidden = True
                       
                'Hides the button that is not needed
                Sheets("User Profile").Userprofilesubmit.Visible = False
                Sheets("User Profile").Userprofilesubmit.Enabled = False
                
                'Enables the needed button
                Sheets("User Profile").AccessRightssubmit.Visible = True
                Sheets("User Profile").AccessRightssubmit.Enabled = True
        
                ActiveSheet.Range("I4").Select
                
                Sheets("Off-Line Form").OS.Enabled = False
                OSINFO.Enabled = False
                Sheets("Off-Line Form").MR.Enabled = False
                mrinfo.Enabled = False
                Sheets("Off-Line Form").IAS.Enabled = False
                IASInfo.Enabled = False
                Sheets("Off-Line Form").TT.Enabled = False
                TTInfo.Enabled = False
                
                sameahc.Enabled = True
                sameahcinfo.Enabled = True
                
                differentahc.Enabled = True
                differentahcinfo.Enabled = True
                
                addAHC.Enabled = True
                AccessConfirm.Enabled = False
        '       Sheets("Off-Line Form").Summarypage.Enabled = True
'            Else
'            End If
'        Else
'        End If
        
    ElseIf Sheets("Off-Line Form").MR.Value = True And Sheets("Off-Line Form").TT.Value = True And Sheets("Off-Line Form").OS.Value = False And Sheets("Off-Line Form").IAS.Value = True Then
'        Instruction = MsgBox("Confirm the information is correct before proceeding!  You have selected the following entitlements:" _
'            & Chr(13) & Chr(10) & "     - Metrix Reporting" & Chr(13) & Chr(10) & "     - Invoice Application Suite" & Chr(13) & Chr(10) & "     - Trouble Ticketing", vbYesNo, "Confirmation")
'
'        If Instruction = 6 Then
'            Instruction = MsgBox("Are you sure you don't want the following entitlements?" & Chr(13) & Chr(10) & "     - Order Services", vbYesNo, "Confirmation")
'
'            If Instruction = 6 Then
'                Sheets("User Profile").Visible = True
'                Sheets("Off-Line Form").Visible = False
        
        
                'Selects the Active Sheet
                Sheets("User Profile").Select
                
                ActiveSheet.Cells.Select
                Selection.EntireColumn.Hidden = False
                
                'Hides the unwanted columns
                ActiveSheet.Columns("A:F").Select
                Selection.EntireColumn.Hidden = True
                ActiveSheet.Columns("H:H").Select
                Selection.EntireColumn.Hidden = True
                ActiveSheet.Columns("J:J").Select
                Selection.EntireColumn.Hidden = True
                ActiveSheet.Columns("K:M").Select
                Selection.EntireColumn.Hidden = True
                ActiveSheet.Columns("R:R").Select
                Selection.EntireColumn.Hidden = True
                
                ActiveSheet.Columns("N:N").Select
                Selection.EntireColumn.Hidden = True
                
               'Hides the button that is not needed
                Sheets("User Profile").Userprofilesubmit.Visible = False
                Sheets("User Profile").Userprofilesubmit.Enabled = False
                
                'Enables the needed button
                Sheets("User Profile").AccessRightssubmit.Visible = True
                Sheets("User Profile").AccessRightssubmit.Enabled = True
        
                ActiveSheet.Range("I4").Select
                
                Sheets("Off-Line Form").OS.Enabled = False
                OSINFO.Enabled = False
                Sheets("Off-Line Form").MR.Enabled = False
                mrinfo.Enabled = False
                Sheets("Off-Line Form").IAS.Enabled = False
                IASInfo.Enabled = False
                Sheets("Off-Line Form").TT.Enabled = False
                TTInfo.Enabled = False
                
                sameahc.Enabled = True
                sameahcinfo.Enabled = True
                
                differentahc.Enabled = True
                differentahcinfo.Enabled = True
                
                addAHC.Enabled = True
                AccessConfirm.Enabled = False
        '        Sheets("Off-Line Form").Summarypage.Enabled = True
'            Else
'            End If
'        Else
'        End If
    
    ElseIf Sheets("Off-Line Form").MR.Value = True And Sheets("Off-Line Form").TT.Value = True And Sheets("Off-Line Form").OS.Value = False And Sheets("Off-Line Form").IAS.Value = False Then
'        Instruction = MsgBox("Confirm the information is correct before proceeding!  You have selected the following entitlements:" _
'        & Chr(13) & Chr(10) & "     - Metrix Reporting" & Chr(13) & Chr(10) & "     - Trouble Ticketing", vbYesNo, "Confirmation")
'
'        If Instruction = 6 Then
'            Instruction = MsgBox("Are you sure you don't want the following entitlements?" & Chr(13) & Chr(10) & "     - Invoice Application Suite" _
'                & Chr(13) & Chr(10) & "     - Order Services", vbYesNo, "Confirmation")
'
'            If Instruction = 6 Then
'                Sheets("User Profile").Visible = True
'                Sheets("Off-Line Form").Visible = False
                
                
                'Selects the Active Sheet
                Sheets("User Profile").Select
                
                ActiveSheet.Cells.Select
                Selection.EntireColumn.Hidden = False
                
                'Hides the unwanted columns
                ActiveSheet.Columns("A:F").Select
                Selection.EntireColumn.Hidden = True
                ActiveSheet.Columns("H:H").Select
                Selection.EntireColumn.Hidden = True
                ActiveSheet.Columns("J:J").Select
                Selection.EntireColumn.Hidden = True
                ActiveSheet.Columns("K:M").Select
                Selection.EntireColumn.Hidden = True
                ActiveSheet.Columns("R:R").Select
                Selection.EntireColumn.Hidden = True
                
                ActiveSheet.Columns("N:N").Select
                Selection.EntireColumn.Hidden = True
                
                ActiveSheet.Columns("P:P").Select
                Selection.EntireColumn.Hidden = True
        
                'Hides the button that is not needed
                Sheets("User Profile").Userprofilesubmit.Visible = False
                Sheets("User Profile").Userprofilesubmit.Enabled = False
                
                'Enables the needed button
                Sheets("User Profile").AccessRightssubmit.Visible = True
                Sheets("User Profile").AccessRightssubmit.Enabled = True
        
                ActiveSheet.Range("I4").Select
                
                Sheets("Off-Line Form").OS.Enabled = False
                OSINFO.Enabled = False
                Sheets("Off-Line Form").MR.Enabled = False
                mrinfo.Enabled = False
                Sheets("Off-Line Form").IAS.Enabled = False
                IASInfo.Enabled = False
                Sheets("Off-Line Form").TT.Enabled = False
                TTInfo.Enabled = False
                
                sameahc.Enabled = True
                sameahcinfo.Enabled = True
                
                differentahc.Enabled = True
                differentahcinfo.Enabled = True
                
                addAHC.Enabled = True
                AccessConfirm.Enabled = False
        '        Sheets("Off-Line Form").Summarypage.Enabled = True
'            Else
'            End If
'        Else
'        End If
        
    ElseIf Sheets("Off-Line Form").MR.Value = True And Sheets("Off-Line Form").IAS.Value = True And Sheets("Off-Line Form").TT.Value = False And Sheets("Off-Line Form").OS.Value = False Then
'        Instruction = MsgBox("Confirm the information is correct before proceeding!  You have selected the following entitlements:" _
'            & Chr(13) & Chr(10) & "     - Metrix Reporting" & Chr(13) & Chr(10) & "     - Invoice Application Suite", vbYesNo, "Confirmation")
'
'        If Instruction = 6 Then
'            Instruction = MsgBox("Are you sure you don't want the following entitlements?" & Chr(13) & Chr(10) & "     - Order Services" _
'                & Chr(13) & Chr(10) & "     - Trouble Ticketing", vbYesNo, "Confirmation")
'
'            If Instruction = 6 Then
'                Sheets("User Profile").Visible = True
'                Sheets("Off-Line Form").Visible = False
                
                
                'Selects the Active Sheet
                Sheets("User Profile").Select
                
                ActiveSheet.Cells.Select
                Selection.EntireColumn.Hidden = False
                
                'Hides the unwanted columns
                ActiveSheet.Columns("A:F").Select
                Selection.EntireColumn.Hidden = True
                ActiveSheet.Columns("H:H").Select
                Selection.EntireColumn.Hidden = True
                ActiveSheet.Columns("J:J").Select
                Selection.EntireColumn.Hidden = True
                ActiveSheet.Columns("K:M").Select
                Selection.EntireColumn.Hidden = True
                ActiveSheet.Columns("R:R").Select
                Selection.EntireColumn.Hidden = True
                
                ActiveSheet.Columns("Q:Q").Select
                Selection.EntireColumn.Hidden = True
                
                ActiveSheet.Columns("N:N").Select
                Selection.EntireColumn.Hidden = True
             
                'Hides the button that is not needed
                Sheets("User Profile").Userprofilesubmit.Visible = False
                Sheets("User Profile").Userprofilesubmit.Enabled = False
                
                'Enables the needed button
                Sheets("User Profile").AccessRightssubmit.Visible = True
                Sheets("User Profile").AccessRightssubmit.Enabled = True
        
                ActiveSheet.Range("I4").Select
                
                Sheets("Off-Line Form").OS.Enabled = False
                OSINFO.Enabled = False
                Sheets("Off-Line Form").MR.Enabled = False
                mrinfo.Enabled = False
                Sheets("Off-Line Form").IAS.Enabled = False
                IASInfo.Enabled = False
                Sheets("Off-Line Form").TT.Enabled = False
                TTInfo.Enabled = False
                
                sameahc.Enabled = True
                sameahcinfo.Enabled = True
                
                differentahc.Enabled = True
                differentahcinfo.Enabled = True
                
                addAHC.Enabled = True
                AccessConfirm.Enabled = False
        '        Sheets("Off-Line Form").Summarypage.Enabled = True
'            Else
'            End If
'        Else
'        End If
        
    ElseIf Sheets("Off-Line Form").IAS.Value = True And Sheets("Off-Line Form").TT.Value = True And Sheets("Off-Line Form").MR.Value = False And Sheets("Off-Line Form").OS.Value = False Then
'         Instruction = MsgBox("Confirm the information is correct before proceeding!  You have selected the following entitlements:" _
'            & Chr(13) & Chr(10) & "     - Invoice Application Suite" & Chr(13) & Chr(10) & "     - Trouble Ticketing", vbYesNo, "Confirmation")
'
'        If Instruction = 6 Then
'            Instruction = MsgBox("Are you sure you don't want the following entitlements?" & Chr(13) & Chr(10) & "     - Order Services" _
'                & Chr(13) & Chr(10) & "     - Metrix Reporting", vbYesNo, "Confirmation")
'
'            If Instruction = 6 Then
                Sheets("User Profile").Visible = True
                Sheets("Off-Line Form").Visible = False
                        
                'Selects the Active Sheet
                Sheets("User Profile").Select
                
                ActiveSheet.Cells.Select
                Selection.EntireColumn.Hidden = False
                
                'Hides the unwanted columns
                ActiveSheet.Columns("A:F").Select
                Selection.EntireColumn.Hidden = True
                ActiveSheet.Columns("H:H").Select
                Selection.EntireColumn.Hidden = True
                ActiveSheet.Columns("J:J").Select
                Selection.EntireColumn.Hidden = True
                ActiveSheet.Columns("K:M").Select
                Selection.EntireColumn.Hidden = True
                ActiveSheet.Columns("R:R").Select
                Selection.EntireColumn.Hidden = True
                
                ActiveSheet.Columns("N:O").Select
                Selection.EntireColumn.Hidden = True
                
                'Hides the button that is not needed
                Sheets("User Profile").Userprofilesubmit.Visible = False
                Sheets("User Profile").Userprofilesubmit.Enabled = False
                
                'Enables the needed button
                Sheets("User Profile").AccessRightssubmit.Visible = True
                Sheets("User Profile").AccessRightssubmit.Enabled = True
        
                ActiveSheet.Range("P4").Select
                
                Sheets("Off-Line Form").OS.Enabled = False
                OSINFO.Enabled = False
                Sheets("Off-Line Form").MR.Enabled = False
                mrinfo.Enabled = False
                Sheets("Off-Line Form").IAS.Enabled = False
                IASInfo.Enabled = False
                Sheets("Off-Line Form").TT.Enabled = False
                TTInfo.Enabled = False
                
                sameahc.Enabled = True
                sameahcinfo.Enabled = True
                
                differentahc.Enabled = True
                differentahcinfo.Enabled = True
                
                addAHC.Enabled = True
                AccessConfirm.Enabled = False
        '        Sheets("Off-Line Form").Summarypage.Enabled = True
'            Else
'            End If
'        Else
'        End If
'
    ElseIf Sheets("Off-Line Form").MR.Value = True And Sheets("Off-Line Form").IAS.Value = False And Sheets("Off-Line Form").TT.Value = False And Sheets("Off-Line Form").OS.Value = False Then
'        Instruction = MsgBox("Confirm the information is correct before proceeding!  You have selected the following entitlements:" _
'            & Chr(13) & Chr(10) & "     - Metrix Reporting", vbYesNo, "Confirmation")
'
'        If Instruction = 6 Then
'            Instruction = MsgBox("Are you sure you don't want the following entitlements?" & Chr(13) & Chr(10) & "     - Order Services" _
'                & Chr(13) & Chr(10) & "     - Trouble Ticketing" & Chr(13) & Chr(10) & "     - Invoice Application Suite", vbYesNo, "Confirmation")
'
'            If Instruction = 6 Then
'                Sheets("User Profile").Visible = True
'                Sheets("Off-Line Form").Visible = False
        
                'Selects the Active Sheet
                Sheets("User Profile").Select
                
                ActiveSheet.Cells.Select
                Selection.EntireColumn.Hidden = False
                
                'Hides the unwanted columns
                ActiveSheet.Columns("A:F").Select
                Selection.EntireColumn.Hidden = True
                ActiveSheet.Columns("H:H").Select
                Selection.EntireColumn.Hidden = True
                ActiveSheet.Columns("J:J").Select
                Selection.EntireColumn.Hidden = True
                ActiveSheet.Columns("K:M").Select
                Selection.EntireColumn.Hidden = True
                ActiveSheet.Columns("R:R").Select
                Selection.EntireColumn.Hidden = True
                
                ActiveSheet.Columns("P:Q").Select
                Selection.EntireColumn.Hidden = True
                
                ActiveSheet.Columns("N:N").Select
                Selection.EntireColumn.Hidden = True
        
                'Hides the button that is not needed
                Sheets("User Profile").Userprofilesubmit.Visible = False
                Sheets("User Profile").Userprofilesubmit.Enabled = False
                
                'Enables the needed button
                Sheets("User Profile").AccessRightssubmit.Visible = True
                Sheets("User Profile").AccessRightssubmit.Enabled = True
        
                ActiveSheet.Range("I4").Select
                
                Sheets("Off-Line Form").OS.Enabled = False
                OSINFO.Enabled = False
                Sheets("Off-Line Form").MR.Enabled = False
                mrinfo.Enabled = False
                Sheets("Off-Line Form").IAS.Enabled = False
                IASInfo.Enabled = False
                Sheets("Off-Line Form").TT.Enabled = False
                TTInfo.Enabled = False
                
                sameahc.Enabled = True
                sameahcinfo.Enabled = True
                
                differentahc.Enabled = True
                differentahcinfo.Enabled = True
                
                addAHC.Enabled = True
                AccessConfirm.Enabled = False
        ''        Sheets("Off-Line Form").Summarypage.Enabled = True
'            Else
'            End If
'        Else
'        End If
        
    ElseIf Sheets("Off-Line Form").IAS.Value = True And Sheets("Off-Line Form").MR.Value = False And Sheets("Off-Line Form").TT.Value = False And Sheets("Off-Line Form").OS.Value = False Then
'         Instruction = MsgBox("Confirm the information is correct before proceeding!  You have selected the following entitlements:" _
'            & Chr(13) & Chr(10) & "     - Invoice Application Suite", vbYesNo, "Confirmation")
'
'        If Instruction = 6 Then
'            Instruction = MsgBox("Are you sure you don't want the following entitlements?" & Chr(13) & Chr(10) & "     - Order Services" _
'                & Chr(13) & Chr(10) & "     - Trouble Ticketing" & Chr(13) & Chr(10) & "     - Metrix Reporting", vbYesNo, "Confirmation")
'
'            If Instruction = 6 Then
'                Sheets("User Profile").Visible = True
'                Sheets("Off-Line Form").Visible = False
                        
                'Selects the Active Sheet
                Sheets("User Profile").Select
                
                ActiveSheet.Cells.Select
                Selection.EntireColumn.Hidden = False
                
                'Hides the unwanted columns
                ActiveSheet.Columns("A:F").Select
                Selection.EntireColumn.Hidden = True
                ActiveSheet.Columns("H:H").Select
                Selection.EntireColumn.Hidden = True
                ActiveSheet.Columns("J:J").Select
                Selection.EntireColumn.Hidden = True
                ActiveSheet.Columns("K:M").Select
                Selection.EntireColumn.Hidden = True
                ActiveSheet.Columns("R:R").Select
                Selection.EntireColumn.Hidden = True
                
                ActiveSheet.Columns("Q:Q").Select
                Selection.EntireColumn.Hidden = True
        
                ActiveSheet.Columns("N:O").Select
                Selection.EntireColumn.Hidden = True
                
                'Hides the button that is not needed
                Sheets("User Profile").Userprofilesubmit.Visible = False
                Sheets("User Profile").Userprofilesubmit.Enabled = False
                
                'Enables the needed button
                Sheets("User Profile").AccessRightssubmit.Visible = True
                Sheets("User Profile").AccessRightssubmit.Enabled = True
        
                ActiveSheet.Range("P4").Select
                
                Sheets("Off-Line Form").OS.Enabled = False
                OSINFO.Enabled = False
                Sheets("Off-Line Form").MR.Enabled = False
                mrinfo.Enabled = False
                Sheets("Off-Line Form").IAS.Enabled = False
                IASInfo.Enabled = False
                Sheets("Off-Line Form").TT.Enabled = False
                TTInfo.Enabled = False
                
                sameahc.Enabled = True
                sameahcinfo.Enabled = True
                
                differentahc.Enabled = True
                differentahcinfo.Enabled = True
                
                addAHC.Enabled = True
                AccessConfirm.Enabled = False
        '        Sheets("Off-Line Form").Summarypage.Enabled = True
'            Else
'            End If
'        Else
'        End If
        
    ElseIf Sheets("Off-Line Form").TT.Value = True And Sheets("Off-Line Form").IAS.Value = False And Sheets("Off-Line Form").MR.Value = False And Sheets("Off-Line Form").OS.Value = False Then
'        Instruction = MsgBox("Confirm the information is correct before proceeding!  You have selected the following entitlements:" _
'            & Chr(13) & Chr(10) & "     - Trouble Ticketing", vbYesNo, "Confirmation")
'
'        If Instruction = 6 Then
'            Instruction = MsgBox("Are you sure you don't want the following entitlements?" & Chr(13) & Chr(10) & "     - Order Services" _
'                & Chr(13) & Chr(10) & "     - Invoice Application Suite" & Chr(13) & Chr(10) & "     - Metrix Reporting", vbYesNo, "Confirmation")
'
'            If Instruction = 6 Then
'                Sheets("User Profile").Visible = True
'                Sheets("Off-Line Form").Visible = False
'
                'Selects the Active Sheet
                Sheets("User Profile").Select
                
                ActiveSheet.Cells.Select
                Selection.EntireColumn.Hidden = False
                
                'Hides the unwanted columns
                ActiveSheet.Columns("A:F").Select
                Selection.EntireColumn.Hidden = True
                ActiveSheet.Columns("H:H").Select
                Selection.EntireColumn.Hidden = True
                ActiveSheet.Columns("J:J").Select
                Selection.EntireColumn.Hidden = True
                ActiveSheet.Columns("K:M").Select
                Selection.EntireColumn.Hidden = True
                ActiveSheet.Columns("R:R").Select
                Selection.EntireColumn.Hidden = True
        
                ActiveSheet.Columns("N:P").Select
                Selection.EntireColumn.Hidden = True
                       
                'Hides the button that is not needed
                Sheets("User Profile").Userprofilesubmit.Visible = False
                Sheets("User Profile").Userprofilesubmit.Enabled = False
                
                'Enables the needed button
                Sheets("User Profile").AccessRightssubmit.Visible = True
                Sheets("User Profile").AccessRightssubmit.Enabled = True
        
                ActiveSheet.Range("Q4").Select
                
                Sheets("Off-Line Form").OS.Enabled = False
                OSINFO.Enabled = False
                Sheets("Off-Line Form").MR.Enabled = False
                mrinfo.Enabled = False
                Sheets("Off-Line Form").IAS.Enabled = False
                IASInfo.Enabled = False
                Sheets("Off-Line Form").TT.Enabled = False
                TTInfo.Enabled = False
                
                sameahc.Enabled = True
                sameahcinfo.Enabled = True
                
                differentahc.Enabled = True
                differentahcinfo.Enabled = True
                
                addAHC.Enabled = True
                AccessConfirm.Enabled = False
        '        Sheets("Off-Line Form").Summarypage.Enabled = True
'            Else
'            End If
'        Else
'        End If
    
    Else
'        Instruction = MsgBox("Confirm the information is correct before proceeding!  You have selected the following entitlements:" _
'            & Chr(13) & Chr(10) & "     - No Entitlements Were Selected!", vbYesNo, "Confirmation")
'
'        If Instruction = 6 Then
            Sheets("Off-Line Form").OS.Enabled = False
            OSINFO.Enabled = False
            Sheets("Off-Line Form").MR.Enabled = False
            mrinfo.Enabled = False
            Sheets("Off-Line Form").IAS.Enabled = False
            IASInfo.Enabled = False
            Sheets("Off-Line Form").TT.Enabled = False
            TTInfo.Enabled = False
            
            sameahc.Enabled = True
            sameahcinfo.Enabled = True
            
            differentahc.Enabled = True
            differentahcinfo.Enabled = True
            
            addAHC.Enabled = True
            AccessConfirm.Enabled = False
    '        Sheets("Off-Line Form").Summarypage.Enabled = True
'        Else
'        End If
    End If

   Application.ScreenUpdating = True
   
'    If Instructions = 6 Then
    Instruction = MsgBox("Modify permissions to the form for the User(s)", vbInformation, "Instruction")
'      Else
'      End If
End Sub
Attribute VB_Name = "Sheet12"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Control = "nextb, 1, 0, MSForms, CommandButton"
Attribute VB_Control = "Submit, 2, 1, MSForms, CommandButton"
Attribute VB_Control = "Returnahc, 6, 2, MSForms, CommandButton"
Attribute VB_Control = "Label1, 7, 3, MSForms, Label"
Private Sub Label1_Click()
    Instruction = MsgBox("If the users all have the same AHCs, type AHCs in column 'C' (1 AHC on each line) and click Next.  AHCs will be added to all users account." _
    & Chr(13) & Chr(10) & Chr(13) & Chr(10) & "- Add 28 character AHC(s) for each user and click next" _
    & Chr(13) & Chr(10) & "- A column will be created for each user as you add AHC(s)." _
    & Chr(13) & Chr(10) & "- If AHC is a parent and you wish to add the children also, input 'Y'" _
    & Chr(13) & Chr(10) & "- The Status column shows the progress of each user's AHCs" _
    & Chr(13) & Chr(10) & "- Data should only be entered in columns C and D.  DO NOT change the text in any other columns!", vbInformation, "Instructions")
End Sub

Private Sub nextb_Click()
'Instruction = MsgBox("Please be patient, the form is processing your request.  Depending on the amount of Users vs AHCs this can take a few minutes.", vbInformation, "Status")
UserForm1.Show

End Sub


Private Sub Returnahc_Click()
    Sheets("Off-Line Form").Visible = True
    Sheets("Same AHCs").Visible = False
End Sub

Private Sub Submit_Click()
    Application.ScreenUpdating = False
    Instruction = MsgBox("Are the AHCs correct?", vbYesNo, "Confirmation")
        
    If Instruction = 6 Then
    
    newrange = Sheets("Off-Line Form").Users.Text + 3
    
    On Error Resume Next
  
    Sheets("Additional AHC's").Visible = True
    Sheets("Same AHCs").Select
    ActiveSheet.Columns("C:IV").Select
    Selection.Copy
    Sheets("Additional AHC's").Select
    ActiveSheet.Range("C1").Select
    ActiveSheet.Paste
    ActiveSheet.Columns("A:B").EntireColumn.Hidden = True
'    ActiveSheet.Shapes("CommandButton2").Select
'    Selection.Delete
'    ActiveSheet.Shapes("CommandButton1").Select
'    Selection.Delete
    

        
    Sheets("Additional AHC's").Visible = False
        
    Sheets("Off-Line Form").Visible = True
    Sheets("Same AHCs").Visible = False
    
    Sheets("Off-Line Form").TFMT.Enabled = True
    Sheets("Off-Line Form").TFMTinfo.Enabled = True
    
    Sheets("Off-Line Form").ONM.Enabled = True
    Sheets("Off-Line Form").ONMinfo.Enabled = True
    
    Sheets("Off-Line Form").GMT.Enabled = True
    Sheets("Off-Line Form").GMTinfo.Enabled = True
    
    Sheets("Off-Line Form").RSMT.Enabled = True
    Sheets("Off-Line Form").RSMTinfo.Enabled = True
    
    Sheets("Off-Line Form").SMT.Enabled = True
    Sheets("Off-Line Form").SMTinfo.Enabled = True
    
    Sheets("Off-Line Form").WHA.Enabled = True
    Sheets("Off-Line Form").WHAinfo.Enabled = True
    
    Sheets("Off-Line Form").CCMT.Enabled = True
    Sheets("Off-Line Form").CCMTinfo.Enabled = True
    
    Sheets("Off-Line Form").VOIPMT.Enabled = True
    Sheets("Off-Line Form").VOIPMTinfo.Enabled = True
    
    Sheets("Off-Line Form").CSTT.Enabled = True
    Sheets("Off-Line Form").CSTTinfo.Enabled = True
    
    Sheets("Off-Line Form").noneapp.Enabled = True
    
    Sheets("Off-Line Form").Additionalconfirm.Enabled = False
    Sheets("Off-Line Form").Select
    Sheets("Summary").Visible = False
    
    Else
    
    End If
    Application.ScreenUpdating = True
End Sub
Attribute VB_Name = "Sheet13"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Sheet2"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Sheet3"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Control = "Label1, 1, 0, MSForms, Label"
Attribute VB_Control = "ManageTitle, 2, 1, MSForms, Label"
Attribute VB_Control = "Browse, 3, 2, MSForms, Label"
Attribute VB_Control = "AllTitle, 4, 3, MSForms, Label"
Attribute VB_Control = "NetworxTitle, 5, 4, MSForms, Label"
Attribute VB_Control = "SecurityTitle, 6, 5, MSForms, Label"
Attribute VB_Control = "SpecialTitle, 7, 6, MSForms, Label"
Attribute VB_Control = "TelecomTitle, 8, 7, MSForms, Label"
Attribute VB_Control = "wirelesstitle, 9, 8, MSForms, Label"
Attribute VB_Control = "AllBrowse, 10, 9, MSForms, Label"
Attribute VB_Control = "managebrowse, 11, 10, MSForms, Label"
Attribute VB_Control = "Networxbrowse, 12, 11, MSForms, Label"
Attribute VB_Control = "securitybrowse, 13, 12, MSForms, Label"
Attribute VB_Control = "specialbrowse, 14, 13, MSForms, Label"
Attribute VB_Control = "telecombrowse, 15, 14, MSForms, Label"
Attribute VB_Control = "wirelessbrowse, 16, 15, MSForms, Label"
Attribute VB_Control = "allcheck, 17, 16, MSForms, CheckBox"
Attribute VB_Control = "alltitle2, 19, 18, MSForms, Label"
Attribute VB_Control = "managetitle2, 20, 19, MSForms, Label"
Attribute VB_Control = "networxtitle2, 21, 20, MSForms, Label"
Attribute VB_Control = "AudioCheck, 22, 21, MSForms, CheckBox"
Attribute VB_Control = "CollaborationCheck, 23, 22, MSForms, CheckBox"
Attribute VB_Control = "CustomerSpecificCheck, 24, 23, MSForms, CheckBox"
Attribute VB_Control = "IPVTSCheck, 25, 24, MSForms, CheckBox"
Attribute VB_Control = "Storagecheck, 26, 25, MSForms, CheckBox"
Attribute VB_Control = "VideoCheck, 27, 26, MSForms, CheckBox"
Attribute VB_Control = "SiteCheck, 28, 27, MSForms, CheckBox"
Attribute VB_Control = "securitytitle2, 29, 28, MSForms, Label"
Attribute VB_Control = "AntiVirusCheck, 30, 29, MSForms, CheckBox"
Attribute VB_Control = "IntrusionHostCheck, 32, 31, MSForms, CheckBox"
Attribute VB_Control = "MEASCheck, 33, 32, MSForms, CheckBox"
Attribute VB_Control = "FirewallNetworkCheck, 36, 35, MSForms, CheckBox"
Attribute VB_Control = "MTSSCheck, 37, 36, MSForms, CheckBox"
Attribute VB_Control = "VulnerabilityCheck, 38, 37, MSForms, CheckBox"
Attribute VB_Control = "networxselect, 40, 39, MSForms, Label"
Attribute VB_Control = "allselect, 41, 40, MSForms, Label"
Attribute VB_Control = "manageselect, 42, 41, MSForms, Label"
Attribute VB_Control = "securityselect, 43, 42, MSForms, Label"
Attribute VB_Control = "specialtitle2, 44, 43, MSForms, Label"
Attribute VB_Control = "specialselect, 45, 44, MSForms, Label"
Attribute VB_Control = "LandCheck, 48, 47, MSForms, CheckBox"
Attribute VB_Control = "telecomtitle2, 49, 48, MSForms, Label"
Attribute VB_Control = "telecomselect, 50, 49, MSForms, Label"
Attribute VB_Control = "Audioinfo, 51, 50, MSForms, Label"
Attribute VB_Control = "Collaborationinfo, 52, 51, MSForms, Label"
Attribute VB_Control = "customerspecificinfo, 53, 52, MSForms, Label"
Attribute VB_Control = "IPVTSinfo, 54, 53, MSForms, Label"
Attribute VB_Control = "storageinfo, 55, 54, MSForms, Label"
Attribute VB_Control = "videoinfo, 56, 55, MSForms, Label"
Attribute VB_Control = "siteinfo, 57, 56, MSForms, Label"
Attribute VB_Control = "antivirusinfo, 58, 57, MSForms, Label"
Attribute VB_Control = "intrusionhostinfo, 59, 58, MSForms, Label"
Attribute VB_Control = "MEASinfo, 60, 59, MSForms, Label"
Attribute VB_Control = "firewallNetworkinfo, 61, 60, MSForms, Label"
Attribute VB_Control = "MTSSinfo, 62, 61, MSForms, Label"
Attribute VB_Control = "vulnerabilityinfo, 63, 62, MSForms, Label"
Attribute VB_Control = "landinfo, 65, 64, MSForms, Label"
Attribute VB_Control = "comtitle, 66, 65, MSForms, Label"
Attribute VB_Control = "telecomtitle3, 67, 66, MSForms, Label"
Attribute VB_Control = "ATMSCheck, 68, 67, MSForms, CheckBox"
Attribute VB_Control = "CallingCheck, 69, 68, MSForms, CheckBox"
Attribute VB_Control = "CircuitCheck, 70, 69, MSForms, CheckBox"
Attribute VB_Control = "CombinedDigitalCheck, 71, 70, MSForms, CheckBox"
Attribute VB_Control = "CombinedISDNCheck, 72, 71, MSForms, CheckBox"
Attribute VB_Control = "CombinedLocalCheck, 73, 72, MSForms, CheckBox"
Attribute VB_Control = "FrameCheck, 74, 73, MSForms, CheckBox"
Attribute VB_Control = "InternationalCheck, 75, 74, MSForms, CheckBox"
Attribute VB_Control = "PrivateCheck, 76, 75, MSForms, CheckBox"
Attribute VB_Control = "TollfreededicatedCheck, 77, 76, MSForms, CheckBox"
Attribute VB_Control = "TollfreeECRCheck, 78, 77, MSForms, CheckBox"
Attribute VB_Control = "TollFreeSwitchedCheck, 79, 78, MSForms, CheckBox"
Attribute VB_Control = "VoiceDedicatedCheck, 80, 79, MSForms, CheckBox"
Attribute VB_Control = "VoiceSwitchedCheck, 81, 80, MSForms, CheckBox"
Attribute VB_Control = "opticaltitle, 82, 81, MSForms, Label"
Attribute VB_Control = "OpticalCheck, 83, 82, MSForms, CheckBox"
Attribute VB_Control = "SynchronousCheck, 84, 83, MSForms, CheckBox"
Attribute VB_Control = "wirelesstitle2, 85, 84, MSForms, Label"
Attribute VB_Control = "CellularCheck, 86, 85, MSForms, CheckBox"
Attribute VB_Control = "MultimodePublicCheck, 87, 86, MSForms, CheckBox"
Attribute VB_Control = "ATMSinfo, 88, 87, MSForms, Label"
Attribute VB_Control = "Callinginfo, 89, 88, MSForms, Label"
Attribute VB_Control = "circuitinfo, 90, 89, MSForms, Label"
Attribute VB_Control = "combineddigitalinfo, 91, 90, MSForms, Label"
Attribute VB_Control = "combinedisdninfo, 92, 91, MSForms, Label"
Attribute VB_Control = "combinedlocalinfo, 93, 92, MSForms, Label"
Attribute VB_Control = "frameinfo, 94, 93, MSForms, Label"
Attribute VB_Control = "internationalinfo, 95, 94, MSForms, Label"
Attribute VB_Control = "privateinfo, 96, 95, MSForms, Label"
Attribute VB_Control = "tollfreededicatedinfo, 97, 96, MSForms, Label"
Attribute VB_Control = "tollfreeecrinfo, 98, 97, MSForms, Label"
Attribute VB_Control = "TollFreeSwitchedinfo, 99, 98, MSForms, Label"
Attribute VB_Control = "VoiceDedicatedInfo, 100, 99, MSForms, Label"
Attribute VB_Control = "VoiceSwitchedinfo, 101, 100, MSForms, Label"
Attribute VB_Control = "opticalinfo, 102, 101, MSForms, Label"
Attribute VB_Control = "synchronousinfo, 103, 102, MSForms, Label"
Attribute VB_Control = "cellularinfo, 104, 103, MSForms, Label"
Attribute VB_Control = "multimodepublicinfo, 105, 104, MSForms, Label"
Attribute VB_Control = "wirelessselect, 106, 105, MSForms, Label"
Attribute VB_Control = "submit2, 107, 106, MSForms, CommandButton"
Attribute VB_Control = "MultimodePrivateCheck, 108, 107, MSForms, CheckBox"
Attribute VB_Control = "Pagingcheck, 109, 108, MSForms, CheckBox"
Attribute VB_Control = "multimodeprivateinfo, 110, 109, MSForms, Label"
Attribute VB_Control = "paginginfo, 111, 110, MSForms, Label"
Attribute VB_Control = "CDNSCheck, 112, 111, MSForms, CheckBox"
Attribute VB_Control = "broadbandinfo, 209, 116, MSForms, Label"
Attribute VB_Control = "broadbandcheck, 208, 117, MSForms, CheckBox"
Attribute VB_Control = "circuitsinfo, 207, 118, MSForms, Label"
Attribute VB_Control = "circuitscheck, 206, 119, MSForms, CheckBox"
Attribute VB_Control = "mrinfo, 205, 120, MSForms, Label"
Attribute VB_Control = "mrcheck, 204, 121, MSForms, CheckBox"
Attribute VB_Control = "iwinfo, 203, 122, MSForms, Label"
Attribute VB_Control = "iwcheck, 202, 123, MSForms, CheckBox"
Attribute VB_Control = "ds3info, 201, 124, MSForms, Label"
Attribute VB_Control = "CDNSinfo, 126, 125, MSForms, Label"
Attribute VB_Control = "ds3check, 200, 126, MSForms, CheckBox"
Attribute VB_Control = "einfo, 211, 127, MSForms, Label"
Attribute VB_Control = "echeck, 210, 128, MSForms, CheckBox"
Attribute VB_Control = "accessselect, 197, 129, MSForms, Label"
Attribute VB_Control = "Label2, 196, 130, MSForms, Label"
Attribute VB_Control = "accessbrowse, 195, 131, MSForms, Label"
Attribute VB_Control = "accesstitle, 194, 132, MSForms, Label"
Attribute VB_Control = "MANinfo, 193, 133, MSForms, Label"
Attribute VB_Control = "ECSinfo, 192, 134, MSForms, Label"
Attribute VB_Control = "DHSMNinfo, 191, 135, MSForms, Label"
Attribute VB_Control = "MANcheck, 190, 136, MSForms, CheckBox"
Attribute VB_Control = "ECScheck, 189, 137, MSForms, CheckBox"
Attribute VB_Control = "DHSMNCheck, 188, 138, MSForms, CheckBox"
Attribute VB_Control = "ConvergedCheck, 140, 139, MSForms, CheckBox"
Attribute VB_Control = "DedicatedInternetCheck, 141, 140, MSForms, CheckBox"
Attribute VB_Control = "EmbeddedDSLCheck, 142, 141, MSForms, CheckBox"
Attribute VB_Control = "EmbeddedSatelliteCheck, 143, 142, MSForms, CheckBox"
Attribute VB_Control = "IPCheck, 144, 143, MSForms, CheckBox"
Attribute VB_Control = "IndependentCheck, 145, 144, MSForms, CheckBox"
Attribute VB_Control = "NetworkVPNCheck, 146, 145, MSForms, CheckBox"
Attribute VB_Control = "PremiseSSLCheck, 147, 146, MSForms, CheckBox"
Attribute VB_Control = "PremiseBroadbandCheck, 148, 147, MSForms, CheckBox"
Attribute VB_Control = "PremiseCPECheck, 149, 148, MSForms, CheckBox"
Attribute VB_Control = "PremiseDedicatedCheck, 150, 149, MSForms, CheckBox"
Attribute VB_Control = "VOIPTransportCheck, 151, 150, MSForms, CheckBox"
Attribute VB_Control = "ConvergedInfo, 152, 151, MSForms, Label"
Attribute VB_Control = "DedicatedInternetinfo, 153, 152, MSForms, Label"
Attribute VB_Control = "EmbeddedDSLinfo, 154, 153, MSForms, Label"
Attribute VB_Control = "embeddedsatelliteinfo, 155, 154, MSForms, Label"
Attribute VB_Control = "ipinfo, 156, 155, MSForms, Label"
Attribute VB_Control = "independentinfo, 157, 156, MSForms, Label"
Attribute VB_Control = "networkvpninfo, 158, 157, MSForms, Label"
Attribute VB_Control = "premisesslinfo, 159, 158, MSForms, Label"
Attribute VB_Control = "premisebroadbandinfo, 160, 159, MSForms, Label"
Attribute VB_Control = "PremiseCPEinfo, 161, 160, MSForms, Label"
Attribute VB_Control = "Premisededicatedinfo, 162, 161, MSForms, Label"
Attribute VB_Control = "VOIPtransportinfo, 163, 162, MSForms, Label"
Attribute VB_Control = "FixedCheck, 164, 163, MSForms, CheckBox"
Attribute VB_Control = "fixedinfo, 165, 164, MSForms, Label"
Attribute VB_Control = "IncidentCheck, 166, 165, MSForms, CheckBox"
Attribute VB_Control = "IntrusionNetworkCheck, 167, 166, MSForms, CheckBox"
Attribute VB_Control = "PKICheck, 168, 167, MSForms, CheckBox"
Attribute VB_Control = "FirewallPremiseCheck, 169, 168, MSForms, CheckBox"
Attribute VB_Control = "SecureCheck, 170, 169, MSForms, CheckBox"
Attribute VB_Control = "secureinfo, 171, 170, MSForms, Label"
Attribute VB_Control = "firewallpremiseinfo, 172, 171, MSForms, Label"
Attribute VB_Control = "PKIinfo, 173, 172, MSForms, Label"
Attribute VB_Control = "intrusionnetworkinfo, 174, 173, MSForms, Label"
Attribute VB_Control = "incidentinfo, 175, 174, MSForms, Label"
Attribute VB_Control = "CoLocatedCheck, 176, 175, MSForms, CheckBox"
Attribute VB_Control = "CustomerContactCheck, 177, 176, MSForms, CheckBox"
Attribute VB_Control = "DedicatedCheck, 178, 177, MSForms, CheckBox"
Attribute VB_Control = "ManagedCheck, 179, 178, MSForms, CheckBox"
Attribute VB_Control = "TeleWorkingCheck, 180, 179, MSForms, CheckBox"
Attribute VB_Control = "WebCheck, 181, 180, MSForms, CheckBox"
Attribute VB_Control = "webinfo, 182, 181, MSForms, Label"
Attribute VB_Control = "teleworkinginfo, 183, 182, MSForms, Label"
Attribute VB_Control = "managedinfo, 184, 183, MSForms, Label"
Attribute VB_Control = "dedicatedinfo, 185, 184, MSForms, Label"
Attribute VB_Control = "customercontactinfo, 186, 185, MSForms, Label"
Attribute VB_Control = "colocatedinfo, 187, 186, MSForms, Label"
Dim ManageX, Networxx, Securityx, specialx, telecomx, wirelessx, accessx As Integer

Private Sub accessselect_Click()

    If accessselect.Caption = "(Select All)" Then
        broadbandcheck.Value = 1
        ds3check.Value = 1

        accessselect.Caption = "(Unselect All)"
    Else
        broadbandcheck.Value = 0
        ds3check.Value = 0

        accessselect.Caption = "(Select All)"
    End If

End Sub

Private Sub allcheck_Click()
Application.ScreenUpdating = False
    Dim myshape As Shape
    If allcheck.Value = 0 Then
        
'        Sheets("Products Listing").Range("A5:N75").Select
'        Selection.EntireRow.Hidden = False
                       
        Browse.Caption = "Browse"

       For Each myshape In ActiveSheet.Shapes
    
           ' ActiveX control (control toolbox) or a linked or embedded OLE object.
           If myshape.Type = 12 And myshape.Name <> "submit1" And myshape.Name <> "allcheck" And myshape.Name <> "Label1" And myshape.Name <> "Browse" Then
               myshape.Visible = True
           End If
    
       Next myshape
        submit1.Visible = True
        submit2.Visible = True
        'submit1.Enabled = False
        submit2.Enabled = False
    Else
                      
        Sheets("Products Listing").Range("O1").Select
        Sheets("Products Listing").Range("O2").Select
       For Each myshape In ActiveSheet.Shapes
    
           ' ActiveX control (control toolbox) or a linked or embedded OLE object.
           If myshape.Type = 12 And myshape.Name <> "submit1" And myshape.Name <> "allcheck" And myshape.Name <> "Label1" And myshape.Name <> "Browse" Then
               myshape.Visible = False
           End If
    
       Next myshape
        
        'Reset all Values to false
        'Management and Application Services
        AudioCheck.Value = 0
        CollaborationCheck.Value = 0
        CustomerSpecificCheck.Value = 0
        IPVTSCheck.Value = 0
        Storagecheck.Value = 0
        VideoCheck.Value = 0
        CoLocatedCheck.Value = 0
        CustomerContactCheck.Value = 0
        DedicatedCheck.Value = 0
        ManagedCheck.Value = 0
        TeleWorkingCheck.Value = 0
        WebCheck.Value = 0

        'Networx Miscellaneous Services
        SiteCheck.Value = 0
           
    On Error Resume Next
        
'        Sheets("Products Listing").Range("A5:N75").Select
'        Selection.EntireRow.Hidden = True
        
        Browse.Caption = "(Uncheck to select individual products)"
        submit1.Visible = False
        submit2.Visible = False
        'submit1.Enabled = False
        
        submit2.Enabled = False
    End If
    
    If Sheets("Off-Line Form").ComboBox1.Text = "Networx Universal" And allcheck.Value = 0 Then
        Sheets("Products Listing").ConvergedCheck.Value = 0
        Sheets("Products Listing").ConvergedCheck.Visible = True
        Sheets("Products Listing").ConvergedInfo.Visible = True
        
        Sheets("Products Listing").VulnerabilityCheck.Value = 0
        Sheets("Products Listing").VulnerabilityCheck.Visible = True
        Sheets("Products Listing").vulnerabilityinfo.Visible = True
        
        Sheets("Products Listing").CustomerContactCheck.Value = 0
        Sheets("Products Listing").CustomerContactCheck.Visible = True
        Sheets("Products Listing").customercontactinfo.Visible = True
        
        Sheets("Products Listing").DedicatedCheck.Value = 0
        Sheets("Products Listing").DedicatedCheck.Visible = True
        Sheets("Products Listing").dedicatedinfo.Visible = True
        
        Sheets("Products Listing").Storagecheck.Value = 0
        Sheets("Products Listing").Storagecheck.Visible = True
        Sheets("Products Listing").storageinfo.Visible = True
        
        Sheets("Products Listing").ATMSCheck.Value = 0
        Sheets("Products Listing").ATMSCheck.Visible = True
        Sheets("Products Listing").ATMSinfo.Visible = True
        
        Sheets("Products Listing").FrameCheck.Value = 0
        Sheets("Products Listing").FrameCheck.Visible = True
        Sheets("Products Listing").frameinfo.Visible = True
        
        Sheets("Products Listing").OpticalCheck.Value = 0
        Sheets("Products Listing").OpticalCheck.Visible = True
        Sheets("Products Listing").opticalinfo.Visible = True
        
        Sheets("Products Listing").SynchronousCheck.Value = 0
        Sheets("Products Listing").SynchronousCheck.Visible = True
        Sheets("Products Listing").synchronousinfo.Visible = True
               
        Sheets("Products Listing").opticaltitle.Visible = True
        
        Sheets("Products Listing").CellularCheck.Value = 0
        Sheets("Products Listing").CellularCheck.Visible = True
        Sheets("Products Listing").cellularinfo.Visible = True
        
        Sheets("Products Listing").FixedCheck.Value = 0
        Sheets("Products Listing").FixedCheck.Visible = True
        Sheets("Products Listing").fixedinfo.Visible = True
        
    ElseIf Sheets("Off-Line Form").ComboBox1.Text = "Networx Enterprise" Then
        Sheets("Products Listing").ConvergedCheck.Value = 0
        Sheets("Products Listing").ConvergedCheck.Visible = False
        Sheets("Products Listing").ConvergedInfo.Visible = False
        
        Sheets("Products Listing").VulnerabilityCheck.Value = 0
        Sheets("Products Listing").VulnerabilityCheck.Visible = False
        Sheets("Products Listing").vulnerabilityinfo.Visible = False
        
        Sheets("Products Listing").CustomerContactCheck.Value = 0
        Sheets("Products Listing").CustomerContactCheck.Visible = False
        Sheets("Products Listing").customercontactinfo.Visible = False
        
        Sheets("Products Listing").DedicatedCheck.Value = 0
        Sheets("Products Listing").DedicatedCheck.Visible = False
        Sheets("Products Listing").dedicatedinfo.Visible = False
        
        Sheets("Products Listing").Storagecheck.Value = 0
        Sheets("Products Listing").Storagecheck.Visible = False
        Sheets("Products Listing").storageinfo.Visible = False
        
        Sheets("Products Listing").ATMSCheck.Value = 0
        Sheets("Products Listing").ATMSCheck.Visible = False
        Sheets("Products Listing").ATMSinfo.Visible = False
        
        Sheets("Products Listing").FrameCheck.Value = 0
        Sheets("Products Listing").FrameCheck.Visible = False
        Sheets("Products Listing").frameinfo.Visible = False
        
        Sheets("Products Listing").OpticalCheck.Value = 0
        Sheets("Products Listing").OpticalCheck.Visible = False
        Sheets("Products Listing").opticalinfo.Visible = False
        
        Sheets("Products Listing").SynchronousCheck.Value = 0
        Sheets("Products Listing").SynchronousCheck.Visible = False
        Sheets("Products Listing").synchronousinfo.Visible = False
               
        Sheets("Products Listing").opticaltitle.Visible = False
        
        Sheets("Products Listing").CellularCheck.Value = 0
        Sheets("Products Listing").CellularCheck.Visible = False
        Sheets("Products Listing").cellularinfo.Visible = False
        
        Sheets("Products Listing").FixedCheck.Value = 0
        Sheets("Products Listing").FixedCheck.Visible = False
        Sheets("Products Listing").fixedinfo.Visible = False
                
    Else
    
    End If
    
    Application.ScreenUpdating = True
End Sub


Private Sub allselect_Click()

    If allselect.Caption = "(Select All)" And Sheets("Off-Line Form").ComboBox1.Text = "Networx Universal" Then
        'Access Services
        broadbandcheck.Value = 1
        ds3check.Value = 1
        'Manage Services
        AudioCheck.Value = 1
        CollaborationCheck.Value = 1
        CustomerSpecificCheck.Value = 1
        IPVTSCheck.Value = 1
        Storagecheck.Value = 1
        VideoCheck.Value = 1
        CoLocatedCheck.Value = 1
        CustomerContactCheck.Value = 1
        DedicatedCheck.Value = 1
        ManagedCheck.Value = 1
        TeleWorkingCheck.Value = 1
        WebCheck.Value = 1
        'Networx Miscellaneous
        SiteCheck.Value = 1
        DHSMNCheck.Value = 1
        ECScheck.Value = 1
        MANcheck.Value = 1
        iwcheck.Value = 1
        mrcheck.Value = 1
        echeck.Value = 1
        
        'Security Services
        AntiVirusCheck.Value = 1
        IntrusionHostCheck.Value = 1
        MEASCheck.Value = 1
        FirewallNetworkCheck.Value = 1
        MTSSCheck.Value = 1
        VulnerabilityCheck.Value = 1
        IncidentCheck.Value = 1
        IntrusionNetworkCheck.Value = 1
        PKICheck.Value = 1
        FirewallPremiseCheck.Value = 1
        SecureCheck.Value = 1
        'Special Services
        
        LandCheck.Value = 1
        FixedCheck.Value = 1
        'Telecom Services
        ATMSCheck.Value = 1
        CallingCheck.Value = 1
        CircuitCheck.Value = 1
        circuitscheck = 1
        CombinedDigitalCheck.Value = 1
        CombinedISDNCheck.Value = 1
        CombinedLocalCheck.Value = 1
        FrameCheck.Value = 1
        InternationalCheck.Value = 1
        PrivateCheck.Value = 1
        TollfreededicatedCheck.Value = 1
        TollfreeECRCheck.Value = 1
        TollFreeSwitchedCheck.Value = 1
        VoiceDedicatedCheck.Value = 1
        VoiceSwitchedCheck.Value = 1
        CDNSCheck.Value = 1
        ConvergedCheck.Value = 1
        DedicatedInternetCheck.Value = 1
        EmbeddedDSLCheck.Value = 1
        EmbeddedSatelliteCheck.Value = 1
        IPCheck.Value = 1
        IndependentCheck.Value = 1
        NetworkVPNCheck.Value = 1
        PremiseSSLCheck.Value = 1
        PremiseBroadbandCheck.Value = 1
        PremiseCPECheck.Value = 1
        PremiseDedicatedCheck.Value = 1
        VOIPTransportCheck.Value = 1
        OpticalCheck.Value = 1
        SynchronousCheck.Value = 1
        'Wireless Services
        CellularCheck.Value = 1
        MultimodePublicCheck.Value = 1
        MultimodePrivateCheck.Value = 1
        Pagingcheck.Value = 1
        
        allselect.Caption = "(Unselect All)"
        
    ElseIf allselect.Caption = "(Unselect All)" And Sheets("Off-Line Form").ComboBox1.Text = "Networx Universal" Then
        'Access Services
        broadbandcheck.Value = 0
        ds3check.Value = 0
        'Manage Services
        AudioCheck.Value = 0
        CollaborationCheck.Value = 0
        CustomerSpecificCheck.Value = 0
        IPVTSCheck.Value = 0
        Storagecheck.Value = 0
        VideoCheck.Value = 0
        CoLocatedCheck.Value = 0
        CustomerContactCheck.Value = 0
        DedicatedCheck.Value = 0
        ManagedCheck.Value = 0
        TeleWorkingCheck.Value = 0
        WebCheck.Value = 0
        'Networx Miscellaneous
        SiteCheck.Value = 0
        DHSMNCheck.Value = 0
        ECScheck.Value = 0
        MANcheck.Value = 0
        iwcheck.Value = 0
        mrcheck.Value = 0
        echeck.Value = 0
        'Security Services
        AntiVirusCheck.Value = 0
        IntrusionHostCheck.Value = 0
        MEASCheck.Value = 0
        FirewallNetworkCheck.Value = 0
        MTSSCheck.Value = 0
        VulnerabilityCheck.Value = 0
        IncidentCheck.Value = 0
        IntrusionNetworkCheck.Value = 0
        PKICheck.Value = 0
        FirewallPremiseCheck.Value = 0
        SecureCheck.Value = 0
        'Special Services
        
        LandCheck.Value = 0
        FixedCheck.Value = 0
        'Telecom Services
        ATMSCheck.Value = 0
        CallingCheck.Value = 0
        CircuitCheck.Value = 0
        circuitscheck = 0
        CombinedDigitalCheck.Value = 0
        CombinedISDNCheck.Value = 0
        CombinedLocalCheck.Value = 0
        FrameCheck.Value = 0
        InternationalCheck.Value = 0
        PrivateCheck.Value = 0
        TollfreededicatedCheck.Value = 0
        TollfreeECRCheck.Value = 0
        TollFreeSwitchedCheck.Value = 0
        VoiceDedicatedCheck.Value = 0
        VoiceSwitchedCheck.Value = 0
        CDNSCheck.Value = 0
        ConvergedCheck.Value = 0
        DedicatedInternetCheck.Value = 0
        EmbeddedDSLCheck.Value = 0
        EmbeddedSatelliteCheck.Value = 0
        IPCheck.Value = 0
        IndependentCheck.Value = 0
        NetworkVPNCheck.Value = 0
        PremiseSSLCheck.Value = 0
        PremiseBroadbandCheck.Value = 0
        PremiseCPECheck.Value = 0
        PremiseDedicatedCheck.Value = 0
        VOIPTransportCheck.Value = 0
        OpticalCheck.Value = 0
        SynchronousCheck.Value = 0
        'Wireless Services
        CellularCheck.Value = 0
        MultimodePublicCheck.Value = 0
        MultimodePrivateCheck.Value = 0
        Pagingcheck.Value = 0
        
        allselect.Caption = "(Select All)"
   
    
    ElseIf allselect.Caption = "(Select All)" And Sheets("Off-Line Form").ComboBox1.Text = "Networx Enterprise" Then
        'Access Services
        broadbandcheck.Value = 0
        Sheets("Products Listing").accessselect.Caption = "(Unselect All)"
        ds3check.Value = 1
        'Manage Services
        AudioCheck.Value = 1
        CollaborationCheck.Value = 1
        CustomerSpecificCheck.Value = 1
        IPVTSCheck.Value = 1
        Storagecheck.Value = 0
        Sheets("Products Listing").manageselect.Caption = "(Unselect All)"
        VideoCheck.Value = 1
        CoLocatedCheck.Value = 1
        CustomerContactCheck.Value = 0
        Sheets("Products Listing").manageselect.Caption = "(Unselect All)"
        DedicatedCheck.Value = 0
        Sheets("Products Listing").manageselect.Caption = "(Unselect All)"
        ManagedCheck.Value = 1
        TeleWorkingCheck.Value = 1
        WebCheck.Value = 1
        Sheets("Products Listing").manageselect.Caption = "(Unselect All)"
        'Networx Miscellaneous
        SiteCheck.Value = 1
        iwcheck.Value = 1
        mrcheck.Value = 1
        echeck.Value = 1
        'Security Services
        AntiVirusCheck.Value = 1
        IntrusionHostCheck.Value = 1
        MEASCheck.Value = 1
        FirewallNetworkCheck.Value = 1
        MTSSCheck.Value = 1
        VulnerabilityCheck.Value = 0
        Sheets("Products Listing").securityselect.Caption = "(Unselect All)"
        
        IncidentCheck.Value = 1
        IntrusionNetworkCheck.Value = 1
        PKICheck.Value = 1
        FirewallPremiseCheck.Value = 1
        SecureCheck.Value = 1
        Sheets("Products Listing").securityselect.Caption = "(Unselect All)"
        'Special Services
        
        LandCheck.Value = 1
        FixedCheck.Value = 0
        Sheets("Products Listing").specialselect.Caption = "(Unselect All)"
        'Telecom Services
        ATMSCheck.Value = 0
        Sheets("Products Listing").telecomselect.Caption = "(Unselect All)"
        CallingCheck.Value = 1
        CircuitCheck.Value = 1
        circuitscheck.Value = 1
        CombinedDigitalCheck.Value = 1
        CombinedISDNCheck.Value = 1
        CombinedLocalCheck.Value = 1
        FrameCheck.Value = 0
        Sheets("Products Listing").telecomselect.Caption = "(Unselect All)"
        InternationalCheck.Value = 1
        PrivateCheck.Value = 1
        TollfreededicatedCheck.Value = 1
        TollfreeECRCheck.Value = 1
        TollFreeSwitchedCheck.Value = 1
        VoiceDedicatedCheck.Value = 1
        VoiceSwitchedCheck.Value = 1
        CDNSCheck.Value = 1
        ConvergedCheck.Value = 0
        Sheets("Products Listing").telecomselect.Caption = "(Unselect All)"
        DedicatedInternetCheck.Value = 1
        EmbeddedDSLCheck.Value = 1
        EmbeddedSatelliteCheck.Value = 1
        IPCheck.Value = 1
        IndependentCheck.Value = 1
        NetworkVPNCheck.Value = 1
        PremiseSSLCheck.Value = 1
        PremiseBroadbandCheck.Value = 1
        PremiseCPECheck.Value = 1
        PremiseDedicatedCheck.Value = 1
        VOIPTransportCheck.Value = 1
        OpticalCheck.Value = 0
        Sheets("Products Listing").telecomselect.Caption = "(Unselect All)"
        SynchronousCheck.Value = 0
        Sheets("Products Listing").telecomselect.Caption = "(Unselect All)"
        'Wireless Services
        CellularCheck.Value = 0
        Sheets("Products Listing").wirelessselect.Caption = "(Unselect All)"
        MultimodePublicCheck.Value = 1
        MultimodePrivateCheck.Value = 1
        Pagingcheck.Value = 1
        Sheets("Products Listing").wirelessselect.Caption = "(Unselect All)"
        
        allselect.Caption = "(Unselect All)"
        
    ElseIf allselect.Caption = "(Unselect All)" And Sheets("Off-Line Form").ComboBox1.Text = "Networx Enterprise" Then
        'Access Services
        broadbandcheck.Value = 0
        Sheets("Products Listing").accessselect.Caption = "(Select All)"
        ds3check.Value = 0
        
        'Manage Services
        AudioCheck.Value = 0
        CollaborationCheck.Value = 0
        CustomerSpecificCheck.Value = 0
        IPVTSCheck.Value = 0
        Storagecheck.Value = 0
        Sheets("Products Listing").manageselect.Caption = "(Select All)"
        VideoCheck.Value = 0
        CoLocatedCheck.Value = 0
        CustomerContactCheck.Value = 0
        Sheets("Products Listing").manageselect.Caption = "(Select All)"
        DedicatedCheck.Value = 0
        Sheets("Products Listing").manageselect.Caption = "(Select All)"
        ManagedCheck.Value = 0
        TeleWorkingCheck.Value = 0
        WebCheck.Value = 0
        Sheets("Products Listing").manageselect.Caption = "(Select All)"
        'Networx Miscellaneous
        SiteCheck.Value = 0
        iwcheck.Value = 0
        mrcheck.Value = 0
        echeck.Value = 0
        
        'Security Services
        AntiVirusCheck.Value = 0
        IntrusionHostCheck.Value = 0
        MEASCheck.Value = 0
        FirewallNetworkCheck.Value = 0
        MTSSCheck.Value = 0
        VulnerabilityCheck.Value = 0
        Sheets("Products Listing").securityselect.Caption = "(Select All)"
        IncidentCheck.Value = 0
        IntrusionNetworkCheck.Value = 0
        PKICheck.Value = 0
        FirewallPremiseCheck.Value = 0
        SecureCheck.Value = 0
        Sheets("Products Listing").securityselect.Caption = "(Select All)"
        'Special Services
       
        LandCheck.Value = 0
        FixedCheck.Value = 0
        Sheets("Products Listing").specialselect.Caption = "(Select All)"
        'Telecom Services
        ATMSCheck.Value = 0
        Sheets("Products Listing").telecomselect.Caption = "(Select All)"
        CallingCheck.Value = 0
        CircuitCheck.Value = 0
        circuitscheck.Value = 0
        CombinedDigitalCheck.Value = 0
        CombinedISDNCheck.Value = 0
        CombinedLocalCheck.Value = 0
        FrameCheck.Value = 0
        Sheets("Products Listing").telecomselect.Caption = "(Select All)"
        InternationalCheck.Value = 0
        PrivateCheck.Value = 0
        TollfreededicatedCheck.Value = 0
        TollfreeECRCheck.Value = 0
        TollFreeSwitchedCheck.Value = 0
        VoiceDedicatedCheck.Value = 0
        VoiceSwitchedCheck.Value = 0
        CDNSCheck.Value = 0
        ConvergedCheck.Value = 0
        DedicatedInternetCheck.Value = 0
        EmbeddedDSLCheck.Value = 0
        EmbeddedSatelliteCheck.Value = 0
        IPCheck.Value = 0
        IndependentCheck.Value = 0
        NetworkVPNCheck.Value = 0
        PremiseSSLCheck.Value = 0
        PremiseBroadbandCheck.Value = 0
        PremiseCPECheck.Value = 0
        PremiseDedicatedCheck.Value = 0
        VOIPTransportCheck.Value = 0
        OpticalCheck.Value = 0
        Sheets("Products Listing").telecomselect.Caption = "(Select All)"
        SynchronousCheck.Value = 0
        Sheets("Products Listing").telecomselect.Caption = "(Select All)"
        'Wireless Services
        CellularCheck.Value = 0
        Sheets("Products Listing").wirelessselect.Caption = "(Select All)"
        MultimodePublicCheck.Value = 0
        MultimodePrivateCheck.Value = 0
        Pagingcheck.Value = 0
        Sheets("Products Listing").wirelessselect.Caption = "(Select All)"
        
        allselect.Caption = "(Select All)"
    Else
    End If
  
End Sub

Private Sub AntiVirusCheck_Click()
   
    If AntiVirusCheck.Value = 0 Then
        If Securityx = 0 Then
            securitybrowse.Caption = "(" & Securityx & " selected)"
        Else
            Securityx = Securityx - 1
            securitybrowse.Caption = "(" & Securityx & " selected)"
        End If
    Else
        Securityx = Securityx + 1
        securitybrowse.Caption = "(" & Securityx & " selected)"
        submit2.Enabled = True
        'submit1.Enabled = True
   End If

    If Securityx = 11 Then
        securityselect.Caption = "(Unselect All)"
    Else
        securityselect.Caption = "(Select All)"
    End If
    
    AllBrowse.Caption = "(" & accessx + ManageX + Securityx + Networxx + specialx + telecomx + wirelessx & " selected)"
    
    If accessx + ManageX + Securityx + Networxx + specialx + telecomx + wirelessx = 0 Then
        submit2.Enabled = False
        'submit1.Enabled = False
    End If
End Sub

Private Sub antivirusinfo_Click()
Instructions = MsgBox("Anti-Virus Management Service (AVMS) provides the most current anti-virus software and tools. AVMS includes traffic scanning, anti-virus software/hardware, monitoring of anti-virus advisories, management and maintenance. The service monitors traffic for malicious content, and complements the anti-virus software already implemented on Agency desktops.", vbInformation, "Anti-Virus Management Services Description")

End Sub

Private Sub ATMSCheck_Click()
   
    If ATMSCheck.Value = 0 Then
        If telecomx = 0 Then
            telecombrowse.Caption = "(" & telecomx & " selected)"
        Else
            telecomx = telecomx - 1
            telecombrowse.Caption = "(" & telecomx & " selected)"
        End If
    Else
        telecomx = telecomx + 1
        telecombrowse.Caption = "(" & telecomx & " selected)"
        submit2.Enabled = True
        'submit1.Enabled = True
   End If

    If telecomx = 29 Then
        telecomselect.Caption = "(Unselect All)"
    Else
        telecomselect.Caption = "(Select All)"
    End If
    
    AllBrowse.Caption = "(" & accessx + ManageX + Securityx + Networxx + specialx + telecomx + wirelessx & " selected)"
    
    If accessx + ManageX + Securityx + Networxx + specialx + telecomx + wirelessx = 0 Then
        submit2.Enabled = False
        'submit1.Enabled = False
    End If
End Sub

Private Sub ATMSinfo_Click()
Instructions = MsgBox("Asynchronous Transfer Mode Service (ATMS) provides high-speed, reliable, and secure transport for data, video, and voice applications. ATMS provides a connection-oriented transmission service with scalable port speeds of DS-1, DS-3, OC-3, and OC-12. In addition, ATMS provides E-1 and E-3 port speeds for terminations outside the United States.", vbInformation, "Asynchronous Transfer Mode Services Description")

End Sub

Private Sub AudioCheck_Click()
   
    If AudioCheck.Value = 0 Then
        If ManageX = 0 Then
            managebrowse.Caption = "(" & ManageX & " selected)"
        Else
            ManageX = ManageX - 1
            managebrowse.Caption = "(" & ManageX & " selected)"
        End If
    Else
        ManageX = ManageX + 1
        managebrowse.Caption = "(" & ManageX & " selected)"
        submit2.Enabled = True
        'submit1.Enabled = True
   End If

    If ManageX = 12 Then
        manageselect.Caption = "(Unselect All)"
    Else
        manageselect.Caption = "(Select All)"
    End If
    
    AllBrowse.Caption = "(" & accessx + ManageX + Securityx + Networxx + specialx + telecomx + wirelessx & " selected)"
    
    If accessx + ManageX + Securityx + Networxx + specialx + telecomx + wirelessx = 0 Then
        submit2.Enabled = False
        'submit1.Enabled = False
    End If
End Sub

Private Sub Audioinfo_Click()
    Instructions = MsgBox("Audio Conferencing Service (ACS) enable users to participate in a multipoint audio conference call.  Verizon Business provides the audio connection from the conference participants to the ACS conference bridge via Voice, Cellular/PCS, Frame Relay, Asynchronous Transfer Mode (ATM), and Voice over IP (VoIP).", vbInformation, "Audio Conferencing Services (ACS)")

End Sub

Private Sub broadbandcheck_Click()
    If broadbandcheck.Value = 0 Then
        If accessx = 0 Then
            accessbrowse.Caption = "(" & accessx & " selected)"
        Else
            accessx = accessx - 1
            accessbrowse.Caption = "(" & accessx & " selected)"
        End If
    Else
        accessx = accessx + 1
        accessbrowse.Caption = "(" & accessx & " selected)"
        submit2.Enabled = True
        'submit1.Enabled = True
   End If
   
    If accessx = 1 Then
        accessselect.Caption = "(Unselect All)"
    Else
        accessselect.Caption = "(Select All)"
    End If
    
    AllBrowse.Caption = "(" & accessx + ManageX + Securityx + Networxx + specialx + telecomx + wirelessx & " selected)"
    
    If accessx + ManageX + Securityx + Networxx + specialx + telecomx + wirelessx = 0 Then
        submit2.Enabled = False
        'submit1.Enabled = False
    End If
End Sub





Private Sub broadbandinfo_Click()
Instructions = MsgBox("Provides customers with reliable, high-bandwidth communications using circuits.", vbInformation, "Broadband Access - Cable Description")

End Sub

Private Sub CallingCheck_Click()
   
    If CallingCheck.Value = 0 Then
        If telecomx = 0 Then
            telecombrowse.Caption = "(" & telecomx & " selected)"
        Else
            telecomx = telecomx - 1
            telecombrowse.Caption = "(" & telecomx & " selected)"
        End If
    Else
        telecomx = telecomx + 1
        telecombrowse.Caption = "(" & telecomx & " selected)"
        submit2.Enabled = True
        'submit1.Enabled = True
   End If

    If telecomx = 29 Then
        telecomselect.Caption = "(Unselect All)"
    Else
        telecomselect.Caption = "(Select All)"
    End If
    
    AllBrowse.Caption = "(" & accessx + ManageX + Securityx + Networxx + specialx + telecomx + wirelessx & " selected)"
    
    If accessx + ManageX + Securityx + Networxx + specialx + telecomx + wirelessx = 0 Then
        submit2.Enabled = False
        'submit1.Enabled = False
    End If
End Sub

Private Sub Callinginfo_Click()
Instructions = MsgBox("The Verizon provided Networx calling card will use a single domestic toll free number to access Networx Voice Services capabilities and features after authorization code validation.", vbInformation, "Calling Card Description")

End Sub

Private Sub CDNSCheck_Click()
   
    If CDNSCheck.Value = 0 Then
        If telecomx = 0 Then
            telecombrowse.Caption = "(" & telecomx & " selected)"
        Else
            telecomx = telecomx - 1
            telecombrowse.Caption = "(" & telecomx & " selected)"
        End If
    Else
        telecomx = telecomx + 1
        telecombrowse.Caption = "(" & telecomx & " selected)"
        submit2.Enabled = True
        'submit1.Enabled = True
   End If

    If telecomx = 29 Then
        telecomselect.Caption = "(Unselect All)"
    Else
        telecomselect.Caption = "(Select All)"
    End If
    
    AllBrowse.Caption = "(" & accessx + ManageX + Securityx + Networxx + specialx + telecomx + wirelessx & " selected)"
    
    If accessx + ManageX + Securityx + Networxx + specialx + telecomx + wirelessx = 0 Then
        submit2.Enabled = False
        'submit1.Enabled = False
    End If
End Sub

Private Sub CDNSinfo_Click()
Instructions = MsgBox("Content Delivery Network Services (CDNS) efficiently and rapidly delivers customer content to Web browsers worldwide. CDNS caches content on geographically dispersed servers on the Internet. When a request is made from one location for specific content, the server that can most rapidly and efficiently provide the content is dynamically identified. CDNS reduces the Internet infrastructure required to provide a domestic or global Web presence, and alleviates the need for substantial investments in Web servers, firewalls, LAN switches, application software, and colocations services.", vbInformation, "Content Delivery Network Services Description")

End Sub

Private Sub CellularCheck_Click()
   
    If CellularCheck.Value = 0 Then
        If wirelessx = 0 Then
            wirelessbrowse.Caption = "(" & wirelessx & " selected)"
        Else
            wirelessx = wirelessx - 1
            wirelessbrowse.Caption = "(" & wirelessx & " selected)"
        End If
    Else
        wirelessx = wirelessx + 1
        wirelessbrowse.Caption = "(" & wirelessx & " selected)"
        submit2.Enabled = True
        'submit1.Enabled = True
   End If

    If wirelessx = 4 Then
        wirelessselect.Caption = "(Unselect All)"
    Else
        wirelessselect.Caption = "(Select All)"
    End If
    
    AllBrowse.Caption = "(" & accessx + ManageX + Securityx + Networxx + specialx + telecomx + wirelessx & " selected)"
    
    If accessx + ManageX + Securityx + Networxx + specialx + telecomx + wirelessx = 0 Then
        submit2.Enabled = False
        'submit1.Enabled = False
    End If
End Sub

Private Sub cellularinfo_Click()
Instructions = MsgBox("Cellular/Personal Communications Service (CPCS) can be used for voice, data, short messaging services (SMS), multimedia messaging services (MMS) and Internet services. CPCS provides wireless services for mobile devices such as cellular phones, notebook computers and personal digital assistants (PDAs).", vbInformation, "Cellur/Personal Communications Service Description")
  
End Sub





Private Sub CircuitCheck_Click()
   
    If CircuitCheck.Value = 0 Then
        If telecomx = 0 Then
            telecombrowse.Caption = "(" & telecomx & " selected)"
        Else
            telecomx = telecomx - 1
            telecombrowse.Caption = "(" & telecomx & " selected)"
        End If
    Else
        telecomx = telecomx + 1
        telecombrowse.Caption = "(" & telecomx & " selected)"
        submit2.Enabled = True
        'submit1.Enabled = True
   End If

    If telecomx = 29 Then
        telecomselect.Caption = "(Unselect All)"
    Else
        telecomselect.Caption = "(Select All)"
    End If
    
    AllBrowse.Caption = "(" & accessx + ManageX + Securityx + Networxx + specialx + telecomx + wirelessx & " selected)"
    
    If accessx + ManageX + Securityx + Networxx + specialx + telecomx + wirelessx = 0 Then
        submit2.Enabled = False
        'submit1.Enabled = False
    End If
End Sub

Private Sub circuitinfo_Click()
Instructions = MsgBox("Federal agencies are adopting high-tech data and multimedia applications at a dramatically increasing pace, challenging the bandwidth restrictions of traditional dial-up connectivity. Verizon Business Circuit Switched Data Service (CSDS) provides the digital connectivity to support high-bandwidth applications, such as on-demand video conferencing, through synchronous and completely digital transmission rates (up to DS1) to on-net and off-net locations.", vbInformation, "Circuit Switched Data - Dedicated Service Description")

End Sub

Private Sub circuitscheck_Click()
 
    If circuitscheck.Value = 0 Then
        If telecomx = 0 Then
            telecombrowse.Caption = "(" & telecomx & " selected)"
        Else
            telecomx = telecomx - 1
            telecombrowse.Caption = "(" & telecomx & " selected)"
        End If
    Else
        telecomx = telecomx + 1
        telecombrowse.Caption = "(" & telecomx & " selected)"
        submit2.Enabled = True
        'submit1.Enabled = True
   End If

    If telecomx = 29 Then
        telecomselect.Caption = "(Unselect All)"
    Else
        telecomselect.Caption = "(Select All)"
    End If
    
    AllBrowse.Caption = "(" & accessx + ManageX + Securityx + Networxx + specialx + telecomx + wirelessx & " selected)"
    
    If accessx + ManageX + Securityx + Networxx + specialx + telecomx + wirelessx = 0 Then
        submit2.Enabled = False
        'submit1.Enabled = False
    End If
End Sub

Private Sub CollaborationCheck_Click()
    
    If CollaborationCheck.Value = 0 Then
        If ManageX = 0 Then
            managebrowse.Caption = "(" & ManageX & " selected)"
        Else
            ManageX = ManageX - 1
            managebrowse.Caption = "(" & ManageX & " selected)"
        End If
    Else
        ManageX = ManageX + 1
        managebrowse.Caption = "(" & ManageX & " selected)"
        submit2.Enabled = True
        'submit1.Enabled = True
   End If
   
    If ManageX = 12 Then
        manageselect.Caption = "(Unselect All)"
    Else
        manageselect.Caption = "(Select All)"
    End If
    
    AllBrowse.Caption = "(" & accessx + ManageX + Securityx + Networxx + specialx + telecomx + wirelessx & " selected)"
    
    If accessx + ManageX + Securityx + Networxx + specialx + telecomx + wirelessx = 0 Then
        submit2.Enabled = False
        'submit1.Enabled = False
    End If
End Sub

Private Sub Collaborationinfo_Click()
Instructions = MsgBox("Collaboration Support Services (CoSS) is an instant messaging (IM) solution for customers who need to share information and communicate online in real-time, from dispersed locations.  CoSS supports one-to-one, one-to-many, and many-to-many bi-directional messaging among internal and external entities.", vbInformation, "Collaboration Support Services (CoSS)")

End Sub

Private Sub CoLocatedCheck_Click()

    If CoLocatedCheck.Value = 0 Then
        If ManageX = 0 Then
            managebrowse.Caption = "(" & ManageX & " selected)"
        Else
            ManageX = ManageX - 1
            managebrowse.Caption = "(" & ManageX & " selected)"
        End If
    Else
        ManageX = ManageX + 1
        managebrowse.Caption = "(" & ManageX & " selected)"
        submit2.Enabled = True
        'submit1.Enabled = True
   End If
   
    If ManageX = 12 Then
        manageselect.Caption = "(Unselect All)"
    Else
        manageselect.Caption = "(Select All)"
    End If
    
    AllBrowse.Caption = "(" & accessx + ManageX + Securityx + Networxx + specialx + telecomx + wirelessx & " selected)"
    
    If accessx + ManageX + Securityx + Networxx + specialx + telecomx + wirelessx = 0 Then
        submit2.Enabled = False
        'submit1.Enabled = False
    End If
End Sub

Private Sub colocatedinfo_Click()
Instructions = MsgBox("Collocated Hosting Services (CHS) enable Verizon Business customers to collocate Government Furnished Property (GFP) within a Verizon Business-maintained data center, providing customer 24x7 access to the GFP.  CHS gives customers the flexability to control their 'last mile' problems (potential bandwidth limitations between agency buildings and Internet Service Providers (ISPs))", vbInformation, "Collocated Hosting Services (CHS)")

End Sub

Private Sub CombinedDigitalCheck_Click()
   
    If CombinedDigitalCheck.Value = 0 Then
        If telecomx = 0 Then
            telecombrowse.Caption = "(" & telecomx & " selected)"
        Else
            telecomx = telecomx - 1
            telecombrowse.Caption = "(" & telecomx & " selected)"
        End If
    Else
        telecomx = telecomx + 1
        telecombrowse.Caption = "(" & telecomx & " selected)"
        submit2.Enabled = True
        'submit1.Enabled = True
   End If

    If telecomx = 29 Then
        telecomselect.Caption = "(Unselect All)"
    Else
        telecomselect.Caption = "(Select All)"
    End If
    
    AllBrowse.Caption = "(" & accessx + ManageX + Securityx + Networxx + specialx + telecomx + wirelessx & " selected)"
    
    If accessx + ManageX + Securityx + Networxx + specialx + telecomx + wirelessx = 0 Then
        submit2.Enabled = False
        'submit1.Enabled = False
    End If
End Sub

Private Sub combineddigitalinfo_Click()
Instructions = MsgBox("Combined Services (CS) are a collection of separate telecommunications services packaged into a single service offering to provide a core telecommunications service that suits fundamental business needs, such as local, regional toll, and domestic (CONUS and OCONUS) long distance voice service from a single source.", vbInformation, "Combined Services Description")
End Sub

Private Sub CombinedISDNCheck_Click()
   
    If CombinedISDNCheck.Value = 0 Then
        If telecomx = 0 Then
            telecombrowse.Caption = "(" & telecomx & " selected)"
        Else
            telecomx = telecomx - 1
            telecombrowse.Caption = "(" & telecomx & " selected)"
        End If
    Else
        telecomx = telecomx + 1
        telecombrowse.Caption = "(" & telecomx & " selected)"
        submit2.Enabled = True
        'submit1.Enabled = True
   End If

    If telecomx = 29 Then
        telecomselect.Caption = "(Unselect All)"
    Else
        telecomselect.Caption = "(Select All)"
    End If
    
    AllBrowse.Caption = "(" & accessx + ManageX + Securityx + Networxx + specialx + telecomx + wirelessx & " selected)"
    
    If accessx + ManageX + Securityx + Networxx + specialx + telecomx + wirelessx = 0 Then
        submit2.Enabled = False
        'submit1.Enabled = False
    End If
End Sub

Private Sub combinedisdninfo_Click()
Instructions = MsgBox("Combined Services (CS) are a collection of separate telecommunications services packaged into a single service offering to provide a core telecommunications service that suits fundamental business needs, such as local, regional toll, and domestic (CONUS and OCONUS) long distance voice service from a single source.", vbInformation, "Combined Services Description")
End Sub

Private Sub CombinedLocalCheck_Click()
   
    If CombinedLocalCheck.Value = 0 Then
        If telecomx = 0 Then
            telecombrowse.Caption = "(" & telecomx & " selected)"
        Else
            telecomx = telecomx - 1
            telecombrowse.Caption = "(" & telecomx & " selected)"
        End If
    Else
        telecomx = telecomx + 1
        telecombrowse.Caption = "(" & telecomx & " selected)"
        submit2.Enabled = True
        'submit1.Enabled = True
   End If

    If telecomx = 29 Then
        telecomselect.Caption = "(Unselect All)"
    Else
        telecomselect.Caption = "(Select All)"
    End If
    
    AllBrowse.Caption = "(" & accessx + ManageX + Securityx + Networxx + specialx + telecomx + wirelessx & " selected)"
    
    If accessx + ManageX + Securityx + Networxx + specialx + telecomx + wirelessx = 0 Then
        submit2.Enabled = False
        'submit1.Enabled = False
    End If
End Sub

Private Sub combinedlocalinfo_Click()
Instructions = MsgBox("Combined Services (CS) are a collection of separate telecommunications services packaged into a single service offering to provide a core telecommunications service that suits fundamental business needs, such as local, regional toll, and domestic (CONUS and OCONUS) long distance voice service from a single source.", vbInformation, "Combined Services Description")
End Sub

Private Sub ConvergedCheck_Click()
   
    If ConvergedCheck.Value = 0 Then
        If telecomx = 0 Then
            telecombrowse.Caption = "(" & telecomx & " selected)"
        Else
            telecomx = telecomx - 1
            telecombrowse.Caption = "(" & telecomx & " selected)"
        End If
    Else
        telecomx = telecomx + 1
        telecombrowse.Caption = "(" & telecomx & " selected)"
        submit2.Enabled = True
        'submit1.Enabled = True
   End If

    If telecomx = 29 Then
        telecomselect.Caption = "(Unselect All)"
    Else
        telecomselect.Caption = "(Select All)"
    End If
    
    AllBrowse.Caption = "(" & accessx + ManageX + Securityx + Networxx + specialx + telecomx + wirelessx & " selected)"
    
    If accessx + ManageX + Securityx + Networxx + specialx + telecomx + wirelessx = 0 Then
        submit2.Enabled = False
        'submit1.Enabled = False
    End If
End Sub

Private Sub ConvergedInfo_Click()
Instructions = MsgBox("Converged IP Services (CIPS) delivers Networx IP-based data, voice and video communication services to subscribing agency locations over a single access circuit. CIPS Basic combines the Network-Based IP VPN Service (NBIP-VPNS) for connectivity between customer LANs, the Internet Protocol Service (IPS) for access to the Internet, and the Voice over IP Transport Service (VOIPTS) for access to the PSTN.", vbInformation, "Converged Internet Protocol Services Description")

End Sub

Private Sub CustomerContactCheck_Click()

    If CustomerContactCheck.Value = 0 Then
        If ManageX = 0 Then
            managebrowse.Caption = "(" & ManageX & " selected)"
        Else
            ManageX = ManageX - 1
            managebrowse.Caption = "(" & ManageX & " selected)"
        End If
    Else
        ManageX = ManageX + 1
        managebrowse.Caption = "(" & ManageX & " selected)"
        submit2.Enabled = True
        'submit1.Enabled = True
   End If
   
    If ManageX = 12 Then
        manageselect.Caption = "(Unselect All)"
    Else
        manageselect.Caption = "(Select All)"
    End If
    
    AllBrowse.Caption = "(" & accessx + ManageX + Securityx + Networxx + specialx + telecomx + wirelessx & " selected)"
    
    If accessx + ManageX + Securityx + Networxx + specialx + telecomx + wirelessx = 0 Then
        submit2.Enabled = False
        'submit1.Enabled = False
    End If
End Sub

Private Sub customercontactinfo_Click()
Instructions = MsgBox("Call Center/Customer Contact Center Services (CCS) provide Verizon Business customers with services and personnel to facilitate a standardized, streamlined service across multiple contact channels (Voice, Fax, E-mail, and Internet).  Verizon Business can provide a single network call queue or multiple call queues.", vbInformation, "Call Center/Customer Contact Center Service (CCS)")

End Sub

Private Sub CustomerSpecificCheck_Click()

    If CustomerSpecificCheck.Value = 0 Then
        If ManageX = 0 Then
            managebrowse.Caption = "(" & ManageX & " selected)"
        Else
            ManageX = ManageX - 1
            managebrowse.Caption = "(" & ManageX & " selected)"
        End If
    Else
        ManageX = ManageX + 1
        managebrowse.Caption = "(" & ManageX & " selected)"
        submit2.Enabled = True
        'submit1.Enabled = True
   End If
   
    If ManageX = 12 Then
        manageselect.Caption = "(Unselect All)"
    Else
        manageselect.Caption = "(Select All)"
    End If
    
    AllBrowse.Caption = "(" & accessx + ManageX + Securityx + Networxx + specialx + telecomx + wirelessx & " selected)"
    
    If accessx + ManageX + Securityx + Networxx + specialx + telecomx + wirelessx = 0 Then
        submit2.Enabled = False
        'submit1.Enabled = False
    End If
End Sub

Private Sub customerspecificinfo_Click()
Instructions = MsgBox("Customer Specific Design and Engineering Services (CSDES) enable Verizon Business customers to use Verizon Business expertise and resources to meet their specific business requirements and objectives.  For Verizon Business customers who need our technical support, we provide network and application anaylsis, design, implementation, and testing.", vbInformation, "Customer Specific Design and Engineering Services (CSDES)")

End Sub

Private Sub DedicatedCheck_Click()

    If DedicatedCheck.Value = 0 Then
        If ManageX = 0 Then
            managebrowse.Caption = "(" & ManageX & " selected)"
        Else
            ManageX = ManageX - 1
            managebrowse.Caption = "(" & ManageX & " selected)"
        End If
    Else
        ManageX = ManageX + 1
        managebrowse.Caption = "(" & ManageX & " selected)"
        submit2.Enabled = True
        'submit1.Enabled = True
   End If
   
    If ManageX = 12 Then
        manageselect.Caption = "(Unselect All)"
    Else
        manageselect.Caption = "(Select All)"
    End If
    
    AllBrowse.Caption = "(" & accessx + ManageX + Securityx + Networxx + specialx + telecomx + wirelessx & " selected)"
    
    If accessx + ManageX + Securityx + Networxx + specialx + telecomx + wirelessx = 0 Then
        submit2.Enabled = False
        'submit1.Enabled = False
    End If
End Sub

Private Sub dedicatedinfo_Click()
Instructions = MsgBox("Dedicated Hosting Services (DHS) provide Verizon Business customers with a web site capability that includes a dedicated server, strictly leased to a single customer, and other infrastructure capabilities such as Internet connectivity.", vbInformation, "Dedicated Hosting Service (DHS)")

End Sub

Private Sub DedicatedInternetCheck_Click()
   
    If DedicatedInternetCheck.Value = 0 Then
        If telecomx = 0 Then
            telecombrowse.Caption = "(" & telecomx & " selected)"
        Else
            telecomx = telecomx - 1
            telecombrowse.Caption = "(" & telecomx & " selected)"
        End If
    Else
        telecomx = telecomx + 1
        telecombrowse.Caption = "(" & telecomx & " selected)"
        submit2.Enabled = True
        'submit1.Enabled = True
   End If

    If telecomx = 29 Then
        telecomselect.Caption = "(Unselect All)"
    Else
        telecomselect.Caption = "(Select All)"
    End If
    
    AllBrowse.Caption = "(" & accessx + ManageX + Securityx + Networxx + specialx + telecomx + wirelessx & " selected)"
    
    If accessx + ManageX + Securityx + Networxx + specialx + telecomx + wirelessx = 0 Then
        submit2.Enabled = False
        'submit1.Enabled = False
    End If
End Sub

Private Sub DedicatedInternetinfo_Click()
Instructions = MsgBox("Provides high-performance, always-on, high-bandwidth dedicated Internet access via Private Line or Ethernet Access.", vbInformation, "Dedicated Internet Description")

End Sub

Private Sub DHSMNCheck_Click()
    If DHSMNCheck.Value = 0 Then
        If Networxx = 0 Then
            Networxbrowse.Caption = "(" & Networxx & " selected)"
        Else
            Networxx = Networxx - 1
            Networxbrowse.Caption = "(" & Networxx & " selected)"
        End If
    Else
        Networxx = Networxx + 1
        Networxbrowse.Caption = "(" & Networxx & " selected)"
        submit2.Enabled = True
'        'submit1.Enabled = True
   End If
   
    If Networxx = 1 Then
        networxselect.Caption = "(Unselect All)"
    Else
        networxselect.Caption = "(Select All)"
    End If
    
    AllBrowse.Caption = "(" & accessx + ManageX + Securityx + Networxx + specialx + telecomx + wirelessx & " selected)"
    
    If accessx + ManageX + Securityx + Networxx + specialx + telecomx + wirelessx = 0 Then
        submit2.Enabled = False
        'submit1.Enabled = False
    End If
End Sub

Private Sub DHSMNinfo_Click()
Instructions = MsgBox("DHS specific Managed Network Service CLINS that allot for DHS to recognize a volume discount of sorts off of the DHS customized end to end solution.", vbInformation, "DHS Managed Network Description")

End Sub

Private Sub ds3check_Click()
    If ds3check.Value = 0 Then
        If accessx = 0 Then
            accessbrowse.Caption = "(" & accessx & " selected)"
        Else
            accessx = accessx - 1
            accessbrowse.Caption = "(" & accessx & " selected)"
        End If
    Else
        accessx = accessx + 1
        accessbrowse.Caption = "(" & accessx & " selected)"
        submit2.Enabled = True
        'submit1.Enabled = True
   End If
   
    If accessx = 1 Then
        accessselect.Caption = "(Unselect All)"
    Else
        accessselect.Caption = "(Select All)"
    End If
    
    AllBrowse.Caption = "(" & accessx + ManageX + Securityx + Networxx + specialx + telecomx + wirelessx & " selected)"
    
    If accessx + ManageX + Securityx + Networxx + specialx + telecomx + wirelessx = 0 Then
        submit2.Enabled = False
        'submit1.Enabled = False
    End If
End Sub

Private Sub ds3info_Click()
Instructions = MsgBox("Channelized DS3 Access (BACS) is a standalone DS3 Access product, which is channelized into 28 slots.  Each of these 28 slots can be used for T-1 access for separate services at the location of the channelized DS3.", vbInformation, "Channelized DS3 Access (BACS)")
End Sub

Private Sub echeck_Click()
    If echeck.Value = 0 Then
        If Networxx = 0 Then
            Networxbrowse.Caption = "(" & Networxx & " selected)"
        Else
            Networxx = Networxx - 1
            Networxbrowse.Caption = "(" & Networxx & " selected)"
        End If
    Else
        Networxx = Networxx + 1
        Networxbrowse.Caption = "(" & Networxx & " selected)"
        submit2.Enabled = True
'        'submit1.Enabled = True
   End If
   
    If Networxx = 1 Then
        networxselect.Caption = "(Unselect All)"
    Else
        networxselect.Caption = "(Select All)"
    End If
    
    AllBrowse.Caption = "(" & accessx + ManageX + Securityx + Networxx + specialx + telecomx + wirelessx & " selected)"
    
    If accessx + ManageX + Securityx + Networxx + specialx + telecomx + wirelessx = 0 Then
        submit2.Enabled = False
'        'submit1.Enabled = False
    End If
End Sub

Private Sub ECScheck_Click()
    If ECScheck.Value = 0 Then
        If Networxx = 0 Then
            Networxbrowse.Caption = "(" & Networxx & " selected)"
        Else
            Networxx = Networxx - 1
            Networxbrowse.Caption = "(" & Networxx & " selected)"
        End If
    Else
        Networxx = Networxx + 1
        Networxbrowse.Caption = "(" & Networxx & " selected)"
        submit2.Enabled = True
'        'submit1.Enabled = True
   End If
   
    If Networxx = 1 Then
        networxselect.Caption = "(Unselect All)"
    Else
        networxselect.Caption = "(Select All)"
    End If
    
    AllBrowse.Caption = "(" & accessx + ManageX + Securityx + Networxx + specialx + telecomx + wirelessx & " selected)"
    
    If accessx + ManageX + Securityx + Networxx + specialx + telecomx + wirelessx = 0 Then
        submit2.Enabled = False
   '     'submit1.Enabled = False
    End If
End Sub

Private Sub ECSinfo_Click()
Instructions = MsgBox("DHS specific solution for Emergency Communication Services provided through a partner arrangement with IGEM Mesh City and Fibertower for the fast deployment of a fully meshed Satellite disaster recover solution.  At this time this will remain a DHS only solution as it is a high cost, very customized solution that is not easily repeatable for most agencies within an affordable range.", vbInformation, "Emergency Communication Service Description")

End Sub

Private Sub einfo_Click()
Instructions = MsgBox("Ethernet Services allow Agencies to interconnect their LANs seamlessly over the Metro Area Networks (MAN) or the Wide Area Networks (WAN) regardless of the geographical location of their sites.  Ethernet Services enable Intra and Extranet services, as well as Intra and Inter-Agency communications.", vbInformation, "Ethernet")
End Sub

Private Sub EmbeddedDSLCheck_Click()
   
    If EmbeddedDSLCheck.Value = 0 Then
        If telecomx = 0 Then
            telecombrowse.Caption = "(" & telecomx & " selected)"
        Else
            telecomx = telecomx - 1
            telecombrowse.Caption = "(" & telecomx & " selected)"
        End If
    Else
        telecomx = telecomx + 1
        telecombrowse.Caption = "(" & telecomx & " selected)"
        submit2.Enabled = True
        'submit1.Enabled = True
   End If

    If telecomx = 29 Then
        telecomselect.Caption = "(Unselect All)"
    Else
        telecomselect.Caption = "(Select All)"
    End If
    
    AllBrowse.Caption = "(" & accessx + ManageX + Securityx + Networxx + specialx + telecomx + wirelessx & " selected)"
    
    If accessx + ManageX + Securityx + Networxx + specialx + telecomx + wirelessx = 0 Then
        submit2.Enabled = False
        'submit1.Enabled = False
    End If
End Sub

Private Sub EmbeddedDSLinfo_Click()
Instructions = MsgBox("Provide customers with reliable, high-bandwidth communications using standard copper telephone lines. DSL enables rich, multi-media communication, including voice, video, and high-speed access to information and corporate LAN resources.", vbInformation, "Embedded Internet - Broadband DSL Description")

End Sub

Private Sub EmbeddedSatelliteCheck_Click()
   
    If EmbeddedSatelliteCheck.Value = 0 Then
        If telecomx = 0 Then
            telecombrowse.Caption = "(" & telecomx & " selected)"
        Else
            telecomx = telecomx - 1
            telecombrowse.Caption = "(" & telecomx & " selected)"
        End If
    Else
        telecomx = telecomx + 1
        telecombrowse.Caption = "(" & telecomx & " selected)"
        submit2.Enabled = True
        'submit1.Enabled = True
   End If

    If telecomx = 29 Then
        telecomselect.Caption = "(Unselect All)"
    Else
        telecomselect.Caption = "(Select All)"
    End If
    
    AllBrowse.Caption = "(" & accessx + ManageX + Securityx + Networxx + specialx + telecomx + wirelessx & " selected)"
    
    If accessx + ManageX + Securityx + Networxx + specialx + telecomx + wirelessx = 0 Then
        submit2.Enabled = False
        'submit1.Enabled = False
    End If
End Sub

Private Sub embeddedsatelliteinfo_Click()
Instructions = MsgBox("Provides customers with portable, mobile and global internet access solution that enables customers to effectively communicate from virtually anywhere.", vbInformation, "Embedded Internet - Broadband Satellite Description")

End Sub

Private Sub FirewallNetworkCheck_Click()
   
    If FirewallNetworkCheck.Value = 0 Then
        If Securityx = 0 Then
            securitybrowse.Caption = "(" & Securityx & " selected)"
        Else
            Securityx = Securityx - 1
            securitybrowse.Caption = "(" & Securityx & " selected)"
        End If
    Else
        Securityx = Securityx + 1
        securitybrowse.Caption = "(" & Securityx & " selected)"
        submit2.Enabled = True
        'submit1.Enabled = True
   End If

    If Securityx = 11 Then
        securityselect.Caption = "(Unselect All)"
    Else
        securityselect.Caption = "(Select All)"
    End If
    
    AllBrowse.Caption = "(" & accessx + ManageX + Securityx + Networxx + specialx + telecomx + wirelessx & " selected)"
    
    If accessx + ManageX + Securityx + Networxx + specialx + telecomx + wirelessx = 0 Then
        submit2.Enabled = False
        'submit1.Enabled = False
    End If
End Sub

Private Sub firewallNetworkinfo_Click()
Instructions = MsgBox("Managed Firewall Service (MFS) safeguards internal networks and systems from hostile activity and malicious tampering. The Verizon Business MFS solution is based on proven technology that safeguards internal networks and systems from hostile activity. This protects critical data from compromise and tampering. Verizon Business implements MFS solutions at customer sites or in the network to secure internal networks from the growing threat of security risks, prevent unauthorized access to or from private networks, and reduce service disruptions caused by malicious attacks.", vbInformation, "Managed Firewall Service Description")

End Sub

Private Sub FirewallPremiseCheck_Click()
   
    If FirewallPremiseCheck.Value = 0 Then
        If Securityx = 0 Then
            securitybrowse.Caption = "(" & Securityx & " selected)"
        Else
            Securityx = Securityx - 1
            securitybrowse.Caption = "(" & Securityx & " selected)"
        End If
    Else
        Securityx = Securityx + 1
        securitybrowse.Caption = "(" & Securityx & " selected)"
        submit2.Enabled = True
        'submit1.Enabled = True
   End If

    If Securityx = 11 Then
        securityselect.Caption = "(Unselect All)"
    Else
        securityselect.Caption = "(Select All)"
    End If
    
    AllBrowse.Caption = "(" & accessx + ManageX + Securityx + Networxx + specialx + telecomx + wirelessx & " selected)"
    
    If accessx + ManageX + Securityx + Networxx + specialx + telecomx + wirelessx = 0 Then
        submit2.Enabled = False
        'submit1.Enabled = False
    End If
End Sub

Private Sub firewallpremiseinfo_Click()
Instructions = MsgBox("Managed Firewall Service (MFS) safeguards internal networks and systems from hostile activity and malicious tampering. The Verizon Business MFS solution is based on proven technology that safeguards internal networks and systems from hostile activity. This protects critical data from compromise and tampering. Verizon Business implements MFS solutions at customer sites or in the network to secure internal networks from the growing threat of security risks, prevent unauthorized access to or from private networks, and reduce service disruptions caused by malicious attacks.", vbInformation, "Managed Firewall Service Description")

End Sub

Private Sub FixedCheck_Click()
    
    If FixedCheck.Value = 0 Then
        If specialx = 0 Then
            specialbrowse.Caption = "(" & specialx & " selected)"
        Else
            specialx = specialx - 1
            specialbrowse.Caption = "(" & specialx & " selected)"
        End If
    Else
        specialx = specialx + 1
        specialbrowse.Caption = "(" & specialx & " selected)"
        submit2.Enabled = True
        'submit1.Enabled = True
   End If
   
    If specialx = 3 Then
        specialselect.Caption = "(Unselect All)"
    Else
        specialselect.Caption = "(Select All)"
    End If
    
    AllBrowse.Caption = "(" & accessx + ManageX + Securityx + Networxx + specialx + telecomx + wirelessx & " selected)"
    
    If accessx + ManageX + Securityx + Networxx + specialx + telecomx + wirelessx = 0 Then
        submit2.Enabled = False
        'submit1.Enabled = False
    End If
End Sub

Private Sub fixedinfo_Click()
Instructions = MsgBox("Fixed Satellite Service (FSS) provides dedicated and reliable satellite-based transmission for agency-specific data and video networks, and mission critical applications where landline access may not be available. FSS can be used as a dedicated transmission service for voice, data, and video traffic transmission and wideband broadcast applications, such as broadband distance learning and broadcast of data/multimedia files.", vbInformation, "Fixed Satellite Services (FSS)")

End Sub

Private Sub FrameCheck_Click()
   
    If FrameCheck.Value = 0 Then
        If telecomx = 0 Then
            telecombrowse.Caption = "(" & telecomx & " selected)"
        Else
            telecomx = telecomx - 1
            telecombrowse.Caption = "(" & telecomx & " selected)"
        End If
    Else
        telecomx = telecomx + 1
        telecombrowse.Caption = "(" & telecomx & " selected)"
        submit2.Enabled = True
        'submit1.Enabled = True
   End If

    If telecomx = 29 Then
        telecomselect.Caption = "(Unselect All)"
    Else
        telecomselect.Caption = "(Select All)"
    End If
    
    AllBrowse.Caption = "(" & accessx + ManageX + Securityx + Networxx + specialx + telecomx + wirelessx & " selected)"
    
    If accessx + ManageX + Securityx + Networxx + specialx + telecomx + wirelessx = 0 Then
        submit2.Enabled = False
        'submit1.Enabled = False
    End If
End Sub

Private Sub frameinfo_Click()
Instructions = MsgBox("Frame Relay Service (FRS) provides connection-oriented, data transmission at data rates up to DS3. Customers purchase bandwidth by specifying a Committed Information Rate (CIR), which is the user|fffd|s guaranteed minimum transmission rate for a Permanent Virtual Circuit (PVC). FRS enables bursting above the CIR up to the capacity of the access circuits. The service|fffd|s flexibility and reliability make it an attractive alternative to private line networks.", vbInformation, "Frame Relay Service Description")
End Sub

Private Sub IncidentCheck_Click()
   
    If IncidentCheck.Value = 0 Then
        If Securityx = 0 Then
            securitybrowse.Caption = "(" & Securityx & " selected)"
        Else
            Securityx = Securityx - 1
            securitybrowse.Caption = "(" & Securityx & " selected)"
        End If
    Else
        Securityx = Securityx + 1
        securitybrowse.Caption = "(" & Securityx & " selected)"
        submit2.Enabled = True
        'submit1.Enabled = True
   End If

    If Securityx = 11 Then
        securityselect.Caption = "(Unselect All)"
    Else
        securityselect.Caption = "(Select All)"
    End If
    
    AllBrowse.Caption = "(" & accessx + ManageX + Securityx + Networxx + specialx + telecomx + wirelessx & " selected)"
    
    If accessx + ManageX + Securityx + Networxx + specialx + telecomx + wirelessx = 0 Then
        submit2.Enabled = False
        'submit1.Enabled = False
    End If
End Sub

Private Sub incidentinfo_Click()
Instructions = MsgBox("Incident Response Service (INRS) helps customers combat cyber attacks and crime. This security tool helps respond quickly to potential malicious attacks that can lead to service disruptions. Verizon Business INRS is a combination of proactive services designed to prevent incidents before they occur and fast response reactive services after an incident occurs.", vbInformation, "Incident Response Services Description")

End Sub

Private Sub IndependentCheck_Click()
   
    If IndependentCheck.Value = 0 Then
        If telecomx = 0 Then
            telecombrowse.Caption = "(" & telecomx & " selected)"
        Else
            telecomx = telecomx - 1
            telecombrowse.Caption = "(" & telecomx & " selected)"
        End If
    Else
        telecomx = telecomx + 1
        telecombrowse.Caption = "(" & telecomx & " selected)"
        submit2.Enabled = True
        'submit1.Enabled = True
   End If

    If telecomx = 29 Then
        telecomselect.Caption = "(Unselect All)"
    Else
        telecomselect.Caption = "(Select All)"
    End If
    
    AllBrowse.Caption = "(" & accessx + ManageX + Securityx + Networxx + specialx + telecomx + wirelessx & " selected)"
    
    If accessx + ManageX + Securityx + Networxx + specialx + telecomx + wirelessx = 0 Then
        submit2.Enabled = False
        'submit1.Enabled = False
    End If
End Sub

Private Sub independentinfo_Click()
Instructions = MsgBox("Provides high-performance, always-on, high-bandwidth dedicated Internet access via Private Line or Ethernet Access.", vbInformation, "Independent Internet Description")

End Sub

Private Sub InternationalCheck_Click()
   
    If InternationalCheck.Value = 0 Then
        If telecomx = 0 Then
            telecombrowse.Caption = "(" & telecomx & " selected)"
        Else
            telecomx = telecomx - 1
            telecombrowse.Caption = "(" & telecomx & " selected)"
        End If
    Else
        telecomx = telecomx + 1
        telecombrowse.Caption = "(" & telecomx & " selected)"
        submit2.Enabled = True
        'submit1.Enabled = True
   End If

    If telecomx = 29 Then
        telecomselect.Caption = "(Unselect All)"
    Else
        telecomselect.Caption = "(Select All)"
    End If
    
    AllBrowse.Caption = "(" & accessx + ManageX + Securityx + Networxx + specialx + telecomx + wirelessx & " selected)"
    
    If accessx + ManageX + Securityx + Networxx + specialx + telecomx + wirelessx = 0 Then
        submit2.Enabled = False
        'submit1.Enabled = False
    End If
End Sub

Private Sub internationalinfo_Click()
Instructions = MsgBox("Provides international dedicated connections between customer sites in numerous countries around the globe.", vbInformation, "International Private Line Description")

End Sub

Private Sub IntrusionHostCheck_Click()
   
    If IntrusionHostCheck.Value = 0 Then
        If Securityx = 0 Then
            securitybrowse.Caption = "(" & Securityx & " selected)"
        Else
            Securityx = Securityx - 1
            securitybrowse.Caption = "(" & Securityx & " selected)"
        End If
    Else
        Securityx = Securityx + 1
        securitybrowse.Caption = "(" & Securityx & " selected)"
        submit2.Enabled = True
        'submit1.Enabled = True
   End If

    If Securityx = 11 Then
        securityselect.Caption = "(Unselect All)"
    Else
        securityselect.Caption = "(Select All)"
    End If
    
    AllBrowse.Caption = "(" & accessx + ManageX + Securityx + Networxx + specialx + telecomx + wirelessx & " selected)"
    
    If accessx + ManageX + Securityx + Networxx + specialx + telecomx + wirelessx = 0 Then
        submit2.Enabled = False
        'submit1.Enabled = False
    End If
End Sub

Private Sub intrusionhostinfo_Click()
Instructions = MsgBox("Intrusion Detection and Prevention Service (IDPS) provides an extra layer of protection for internal customer networks by reducing network service disruptions caused by malicious attacks. IDPS provides both network-based and host-based IDPS service, and generates alerts and records suspicious events as well as provides immediate corrective responses that stop or alleviate malicious attacks. ", vbInformation, "Intrustion Detection and Prevention Service Description")

End Sub

Private Sub IntrusionNetworkCheck_Click()
   
    If IntrusionNetworkCheck.Value = 0 Then
        If Securityx = 0 Then
            securitybrowse.Caption = "(" & Securityx & " selected)"
        Else
            Securityx = Securityx - 1
            securitybrowse.Caption = "(" & Securityx & " selected)"
        End If
    Else
        Securityx = Securityx + 1
        securitybrowse.Caption = "(" & Securityx & " selected)"
        submit2.Enabled = True
        'submit1.Enabled = True
   End If

    If Securityx = 11 Then
        securityselect.Caption = "(Unselect All)"
    Else
        securityselect.Caption = "(Select All)"
    End If
    
    AllBrowse.Caption = "(" & accessx + ManageX + Securityx + Networxx + specialx + telecomx + wirelessx & " selected)"
    
    If accessx + ManageX + Securityx + Networxx + specialx + telecomx + wirelessx = 0 Then
        submit2.Enabled = False
        'submit1.Enabled = False
    End If
End Sub

Private Sub intrusionnetworkinfo_Click()
Instructions = MsgBox("Intrusion Detection and Prevention Service (IDPS) provides an extra layer of protection for internal customer networks by reducing network service disruptions caused by malicious attacks. IDPS provides both network-based and host-based IDPS service, and generates alerts and records suspicious events as well as provides immediate corrective responses that stop or alleviate malicious attacks. ", vbInformation, "Intrustion Detection and Prevention Service Description")
End Sub

Private Sub IPCheck_Click()
   
    If IPCheck.Value = 0 Then
        If telecomx = 0 Then
            telecombrowse.Caption = "(" & telecomx & " selected)"
        Else
            telecomx = telecomx - 1
            telecombrowse.Caption = "(" & telecomx & " selected)"
        End If
    Else
        telecomx = telecomx + 1
        telecombrowse.Caption = "(" & telecomx & " selected)"
        submit2.Enabled = True
        'submit1.Enabled = True
   End If

    If telecomx = 29 Then
        telecomselect.Caption = "(Unselect All)"
    Else
        telecomselect.Caption = "(Select All)"
    End If
    
    AllBrowse.Caption = "(" & accessx + ManageX + Securityx + Networxx + specialx + telecomx + wirelessx & " selected)"
    
    If accessx + ManageX + Securityx + Networxx + specialx + telecomx + wirelessx = 0 Then
        submit2.Enabled = False
        'submit1.Enabled = False
    End If
End Sub

Private Sub ipinfo_Click()
Instructions = MsgBox("Internet Protocol Telephony Service (IPTelS) is an enterprise solution that consolidates a subscriber|fffd|s voice and data traffic over a single data network. It enables customers to manage their network more efficiently, while reducing costs and taking advantage of new, leading-edge, multimedia, business applications.", vbInformation, "Internet Protocol Telephony Service Description")
End Sub

Private Sub IPVTSCheck_Click()

    If IPVTSCheck.Value = 0 Then
        If ManageX = 0 Then
            managebrowse.Caption = "(" & ManageX & " selected)"
        Else
            ManageX = ManageX - 1
            managebrowse.Caption = "(" & ManageX & " selected)"
        End If
    Else
        ManageX = ManageX + 1
        managebrowse.Caption = "(" & ManageX & " selected)"
        submit2.Enabled = True
        'submit1.Enabled = True
   End If
   
    If ManageX = 12 Then
        manageselect.Caption = "(Unselect All)"
    Else
        manageselect.Caption = "(Select All)"
    End If
    
    AllBrowse.Caption = "(" & accessx + ManageX + Securityx + Networxx + specialx + telecomx + wirelessx & " selected)"
    
    If accessx + ManageX + Securityx + Networxx + specialx + telecomx + wirelessx = 0 Then
        submit2.Enabled = False
        'submit1.Enabled = False
    End If
End Sub

Private Sub IPVTSinfo_Click()
Instructions = MsgBox("IP Video Transport Services (IPVTS) deliver video traffic over a managed IP network. For customers who control and manage their own video conference systems, IPVTS offers reliable, high quality underlying IP transport network services.", vbInformation, "IP Video Transport Services (IPVTS)")

End Sub



Private Sub iwcheck_Click()
    If iwcheck.Value = 0 Then
        If Networxx = 0 Then
            Networxbrowse.Caption = "(" & Networxx & " selected)"
        Else
            Networxx = Networxx - 1
            Networxbrowse.Caption = "(" & Networxx & " selected)"
        End If
    Else
        Networxx = Networxx + 1
        Networxbrowse.Caption = "(" & Networxx & " selected)"
        submit2.Enabled = True
'        'submit1.Enabled = True
   End If
   
    If Networxx = 1 Then
        networxselect.Caption = "(Unselect All)"
    Else
        networxselect.Caption = "(Select All)"
    End If
    
    AllBrowse.Caption = "(" & accessx + ManageX + Securityx + Networxx + specialx + telecomx + wirelessx & " selected)"
    
    If accessx + ManageX + Securityx + Networxx + specialx + telecomx + wirelessx = 0 Then
        submit2.Enabled = False
        'submit1.Enabled = False
    End If
End Sub

Private Sub Label3_Click()
Instructions = MsgBox("Federal agencies are adopting high-tech data and multimedia applications at a dramatically increasing pace, challenging the bandwidth restrictions of traditional dial-up connectivity. Verizon Business Circuit Switched Data Service (CSDS) provides the digital connectivity to support high-bandwidth applications, such as on-demand video conferencing, through synchronous and completely digital transmission rates (up to DS1) to on-net and off-net locations.", vbInformation, "Circuit Switched Data - Switched Service Description")

End Sub

Private Sub iwinfo_Click()
Instructions = MsgBox("Inside wiring is cabling required to extend a circuit from the telco demarc (demarcation) or MPOE (minimum point of entry) (also MPOP |fffd| minimum point of presence) to the extended demarc where the agency|fffd|s equipment is located.  This term can be used to refer to something as simple as a few feet of cable to take the circuit from one room to another, or as complicated as a fiber pulled up several floors.", vbInformation, "Inside Wiring")
End Sub

Private Sub LandCheck_Click()
    
    If LandCheck.Value = 0 Then
        If specialx = 0 Then
            specialbrowse.Caption = "(" & specialx & " selected)"
        Else
            specialx = specialx - 1
            specialbrowse.Caption = "(" & specialx & " selected)"
        End If
    Else
        specialx = specialx + 1
        specialbrowse.Caption = "(" & specialx & " selected)"
        submit2.Enabled = True
        'submit1.Enabled = True
   End If
   
    If specialx = 3 Then
        specialselect.Caption = "(Unselect All)"
    Else
        specialselect.Caption = "(Select All)"
    End If
    
    AllBrowse.Caption = "(" & accessx + ManageX + Securityx + Networxx + specialx + telecomx + wirelessx & " selected)"
    
    If accessx + ManageX + Securityx + Networxx + specialx + telecomx + wirelessx = 0 Then
        submit2.Enabled = False
        'submit1.Enabled = False
    End If
End Sub

Private Sub landinfo_Click()
Instructions = MsgBox("Land Mobile Radio Service (LMRS) enable agencies to connect their locations and mobile equipment (with wireless radio frequency access) to public and private networks, or to other LMRS users.", vbInformation, "Land Mobile Radio Services (LMRS)")

End Sub

Private Sub ManagedCheck_Click()

    If ManagedCheck.Value = 0 Then
        If ManageX = 0 Then
            managebrowse.Caption = "(" & ManageX & " selected)"
        Else
            ManageX = ManageX - 1
            managebrowse.Caption = "(" & ManageX & " selected)"
        End If
    Else
        ManageX = ManageX + 1
        managebrowse.Caption = "(" & ManageX & " selected)"
        submit2.Enabled = True
        'submit1.Enabled = True
   End If
   
    If ManageX = 12 Then
        manageselect.Caption = "(Unselect All)"
    Else
        manageselect.Caption = "(Select All)"
    End If
    
    AllBrowse.Caption = "(" & accessx + ManageX + Securityx + Networxx + specialx + telecomx + wirelessx & " selected)"
    
    If accessx + ManageX + Securityx + Networxx + specialx + telecomx + wirelessx = 0 Then
        submit2.Enabled = False
        'submit1.Enabled = False
    End If
End Sub

Private Sub managedinfo_Click()
    Instructions = MsgBox("Managed Network Services (MNS) are a comprehensive Wide Area Network (WAN) management solution designed to provide router-based network management and monitoring services in conjuction with contract-supported hardware and software.", vbInformation, "Managed Network Services (MNS)")

End Sub

Private Sub manageselect_Click()
    If manageselect.Caption = "(Select All)" And Sheets("Off-Line Form").ComboBox1.Text = "Networx Universal" Then
        
        AudioCheck.Value = 1
        CollaborationCheck.Value = 1
        CustomerSpecificCheck.Value = 1
        IPVTSCheck.Value = 1
        Storagecheck.Value = 1
        VideoCheck.Value = 1
        CoLocatedCheck.Value = 1
        CustomerContactCheck.Value = 1
        DedicatedCheck.Value = 1
        ManagedCheck.Value = 1
        TeleWorkingCheck.Value = 1
        WebCheck.Value = 1
        
        manageselect.Caption = "(Unselect All)"
        
    ElseIf manageselect.Caption = "(Unselect All)" And Sheets("Off-Line Form").ComboBox1.Text = "Networx Universal" Then
              
        AudioCheck.Value = 0
        CollaborationCheck.Value = 0
        CustomerSpecificCheck.Value = 0
        IPVTSCheck.Value = 0
        Storagecheck.Value = 0
        VideoCheck.Value = 0
        CoLocatedCheck.Value = 0
        CustomerContactCheck.Value = 0
        DedicatedCheck.Value = 0
        ManagedCheck.Value = 0
        TeleWorkingCheck.Value = 0
        WebCheck.Value = 0
        
        manageselect.Caption = "(Select All)"
    ElseIf manageselect.Caption = "(Select All)" And Sheets("Off-Line Form").ComboBox1.Text = "Networx Enterprise" Then
        
        AudioCheck.Value = 1
        CollaborationCheck.Value = 1
        CustomerSpecificCheck.Value = 1
        IPVTSCheck.Value = 1
        Storagecheck.Value = 0
        VideoCheck.Value = 1
        CoLocatedCheck.Value = 1
        CustomerContactCheck.Value = 0
        DedicatedCheck.Value = 0
        ManagedCheck.Value = 1
        TeleWorkingCheck.Value = 1
        WebCheck.Value = 1
        
        manageselect.Caption = "(Unselect All)"
    ElseIf manageselect.Caption = "(Unselect All)" And Sheets("Off-Line Form").ComboBox1.Text = "Networx Enterprise" Then
              
        AudioCheck.Value = 0
        CollaborationCheck.Value = 0
        CustomerSpecificCheck.Value = 0
        IPVTSCheck.Value = 0
        Storagecheck.Value = 0
        VideoCheck.Value = 0
        CoLocatedCheck.Value = 0
        CustomerContactCheck.Value = 0
        DedicatedCheck.Value = 0
        ManagedCheck.Value = 0
        TeleWorkingCheck.Value = 0
        WebCheck.Value = 0
        
        manageselect.Caption = "(Select All)"
    Else
    End If
        
End Sub

Private Sub MANcheck_Click()
  If MANcheck.Value = 0 Then
        If Networxx = 0 Then
            Networxbrowse.Caption = "(" & Networxx & " selected)"
        Else
            Networxx = Networxx - 1
            Networxbrowse.Caption = "(" & Networxx & " selected)"
        End If
    Else
        Networxx = Networxx + 1
        Networxbrowse.Caption = "(" & Networxx & " selected)"
        submit2.Enabled = True
'        'submit1.Enabled = True
   End If
   
    If Networxx = 1 Then
        networxselect.Caption = "(Unselect All)"
    Else
        networxselect.Caption = "(Select All)"
    End If
    
    AllBrowse.Caption = "(" & accessx + ManageX + Securityx + Networxx + specialx + telecomx + wirelessx & " selected)"
    
    If accessx + ManageX + Securityx + Networxx + specialx + telecomx + wirelessx = 0 Then
        submit2.Enabled = False
        'submit1.Enabled = False
    End If
End Sub

Private Sub MANinfo_Click()
Instructions = MsgBox("ACS Alaska Regional MAN Service (ARMS) is a specific Federal Networx service that combines the flexibility, features and benefits provided by an Ethernet Access and Ethernet Broadband transport to allow Agencies to interconnect their LANs seamlessly over the Metro Area Networks (MAN) or the Wide Area Networks (WAN) regardless of the geographical location of their sites. Our Alaska Regional MAN Service provides an Ethernet interface(s) to the end user and will enable Intra- and Extranet services.", vbInformation, "Metropolitan Area Network Description")

End Sub

Private Sub MEASCheck_Click()
   
    If MEASCheck.Value = 0 Then
        If Securityx = 0 Then
            securitybrowse.Caption = "(" & Securityx & " selected)"
        Else
            Securityx = Securityx - 1
            securitybrowse.Caption = "(" & Securityx & " selected)"
        End If
    Else
        Securityx = Securityx + 1
        securitybrowse.Caption = "(" & Securityx & " selected)"
        submit2.Enabled = True
        'submit1.Enabled = True
   End If

    If Securityx = 11 Then
        securityselect.Caption = "(Unselect All)"
    Else
        securityselect.Caption = "(Select All)"
    End If
    
    AllBrowse.Caption = "(" & accessx + ManageX + Securityx + Networxx + specialx + telecomx + wirelessx & " selected)"
    
    If accessx + ManageX + Securityx + Networxx + specialx + telecomx + wirelessx = 0 Then
        submit2.Enabled = False
        'submit1.Enabled = False
    End If
End Sub

Private Sub MEASinfo_Click()
Instructions = MsgBox("Managed E-Authentication Service (MEAS) is an electronic service that validates and verifies a user|fffd|s identity. MEAS allows the use of electronic signatures over the Internet, the Verizon Business network and other public networks.", vbInformation, "Managed E-Authentication Service Description")
End Sub

Private Sub mrcheck_Click()
    If mrcheck.Value = 0 Then
        If Networxx = 0 Then
            Networxbrowse.Caption = "(" & Networxx & " selected)"
        Else
            Networxx = Networxx - 1
            Networxbrowse.Caption = "(" & Networxx & " selected)"
        End If
    Else
        Networxx = Networxx + 1
        Networxbrowse.Caption = "(" & Networxx & " selected)"
        submit2.Enabled = True
'        'submit1.Enabled = True
   End If
   
    If Networxx = 1 Then
        networxselect.Caption = "(Unselect All)"
    Else
        networxselect.Caption = "(Select All)"
    End If
    
    AllBrowse.Caption = "(" & accessx + ManageX + Securityx + Networxx + specialx + telecomx + wirelessx & " selected)"
    
    If accessx + ManageX + Securityx + Networxx + specialx + telecomx + wirelessx = 0 Then
        submit2.Enabled = False
        'submit1.Enabled = False
    End If
End Sub

Private Sub mrinfo_Click()
Instructions = MsgBox("Managed Reporting allows an Agency to obtain Networx SLA, KPI, & AQL Performance Reports for specific 'Packet Based' Transport Services as defined in Section "C" of the Networx Contract", vbInformation, "Managed Reporting")
End Sub

Private Sub MTSSCheck_Click()
   
    If MTSSCheck.Value = 0 Then
        If Securityx = 0 Then
            securitybrowse.Caption = "(" & Securityx & " selected)"
        Else
            Securityx = Securityx - 1
            securitybrowse.Caption = "(" & Securityx & " selected)"
        End If
    Else
        Securityx = Securityx + 1
        securitybrowse.Caption = "(" & Securityx & " selected)"
        submit2.Enabled = True
        'submit1.Enabled = True
   End If

    If Securityx = 11 Then
        securityselect.Caption = "(Unselect All)"
    Else
        securityselect.Caption = "(Select All)"
    End If
    
    AllBrowse.Caption = "(" & accessx + ManageX + Securityx + Networxx + specialx + telecomx + wirelessx & " selected)"
    
    If accessx + ManageX + Securityx + Networxx + specialx + telecomx + wirelessx = 0 Then
        submit2.Enabled = False
        'submit1.Enabled = False
    End If
End Sub

Private Sub MTSSinfo_Click()
Instructions = MsgBox("Managed Tiered Security Services (MTSS) are comprised of managed solutions that provide increasing levels of security for each of our Multi-Tier Security Profiles (MTSP). The Verizon Business MTSP solution provides four tiered levels of enhanced security, which can be tailored to individual agency needs to support higher levels of mission criticality and information sensitivity.", vbInformation, "Managed Tiered Security Services Description")

End Sub

Private Sub MultimodePrivateCheck_Click()
   
    If MultimodePrivateCheck.Value = 0 Then
        If wirelessx = 0 Then
            wirelessbrowse.Caption = "(" & wirelessx & " selected)"
        Else
            wirelessx = wirelessx - 1
            wirelessbrowse.Caption = "(" & wirelessx & " selected)"
        End If
    Else
        wirelessx = wirelessx + 1
        wirelessbrowse.Caption = "(" & wirelessx & " selected)"
        submit2.Enabled = True
        'submit1.Enabled = True
   End If

    If wirelessx = 4 Then
        wirelessselect.Caption = "(Unselect All)"
    Else
        wirelessselect.Caption = "(Select All)"
    End If
    
    AllBrowse.Caption = "(" & accessx + ManageX + Securityx + Networxx + specialx + telecomx + wirelessx & " selected)"
    
    If accessx + ManageX + Securityx + Networxx + specialx + telecomx + wirelessx = 0 Then
        submit2.Enabled = False
        'submit1.Enabled = False
    End If
End Sub

Private Sub multimodeprivateinfo_Click()
Instructions = MsgBox("Multimode/Wireless LAN Service (MWLANS) enables agency users to securely access agency networks from outside the agency firewall. ", vbInformation, "Multimode Wireless LAN Service Description")
 
End Sub

Private Sub MultimodePublicCheck_Click()
   
    If MultimodePublicCheck.Value = 0 Then
        If wirelessx = 0 Then
            wirelessbrowse.Caption = "(" & wirelessx & " selected)"
        Else
            wirelessx = wirelessx - 1
            wirelessbrowse.Caption = "(" & wirelessx & " selected)"
        End If
    Else
        wirelessx = wirelessx + 1
        wirelessbrowse.Caption = "(" & wirelessx & " selected)"
        submit2.Enabled = True
        'submit1.Enabled = True
   End If

    If wirelessx = 4 Then
        wirelessselect.Caption = "(Unselect All)"
    Else
        wirelessselect.Caption = "(Select All)"
    End If
    
    AllBrowse.Caption = "(" & accessx + ManageX + Securityx + Networxx + specialx + telecomx + wirelessx & " selected)"
    
    If accessx + ManageX + Securityx + Networxx + specialx + telecomx + wirelessx = 0 Then
        submit2.Enabled = False
        'submit1.Enabled = False
    End If
End Sub

Private Sub multimodepublicinfo_Click()
Instructions = MsgBox("Multimode/Wireless LAN Service (MWLANS) enables agency users to securely access agency networks from outside the agency firewall. ", vbInformation, "Multimode Wireless LAN Service Description")

End Sub

Private Sub NetworkVPNCheck_Click()
   
    If NetworkVPNCheck.Value = 0 Then
        If telecomx = 0 Then
            telecombrowse.Caption = "(" & telecomx & " selected)"
        Else
            telecomx = telecomx - 1
            telecombrowse.Caption = "(" & telecomx & " selected)"
        End If
    Else
        telecomx = telecomx + 1
        telecombrowse.Caption = "(" & telecomx & " selected)"
        submit2.Enabled = True
        'submit1.Enabled = True
   End If

    If telecomx = 29 Then
        telecomselect.Caption = "(Unselect All)"
    Else
        telecomselect.Caption = "(Select All)"
    End If
    
    AllBrowse.Caption = "(" & accessx + ManageX + Securityx + Networxx + specialx + telecomx + wirelessx & " selected)"
    
    If accessx + ManageX + Securityx + Networxx + specialx + telecomx + wirelessx = 0 Then
        submit2.Enabled = False
        'submit1.Enabled = False
    End If
End Sub


Private Sub networkvpninfo_Click()
Instructions = MsgBox("Network-Based Internet Protocol Virtual Private Network Services (NBIP-VPNS) provide secure, reliable transport of multiple applications, including voice, data and video, across a high-speed unified multi-service IP-enabled backbone infrastructure.", vbInformation, "Network-Based IP VPN Services Description")

End Sub

Private Sub Networxbrowse_Click()

End Sub

Private Sub networxselect_Click()
    If networxselect.Caption = "(Select All)" Then
        SiteCheck.Value = 1
        DHSMNCheck.Value = 1
        ECScheck.Value = 1
        MANcheck.Value = 1
        iwcheck.Value = 1
        mrcheck.Value = 1
        echeck.Value = 1
        networxselect.Caption = "(Unselect All)"
    Else
        SiteCheck.Value = 0
        DHSMNCheck.Value = 0
        ECScheck.Value = 0
        MANcheck.Value = 0
        iwcheck.Value = 0
        mrcheck.Value = 0
        echeck.Value = 0
        networxselect.Caption = "(Select All)"
    End If
    
End Sub

Private Sub OpticalCheck_Click()
   
    If OpticalCheck.Value = 0 Then
        If telecomx = 0 Then
            telecombrowse.Caption = "(" & telecomx & " selected)"
        Else
            telecomx = telecomx - 1
            telecombrowse.Caption = "(" & telecomx & " selected)"
        End If
    Else
        telecomx = telecomx + 1
        telecombrowse.Caption = "(" & telecomx & " selected)"
        submit2.Enabled = True
        'submit1.Enabled = True
   End If

    If telecomx = 29 Then
        telecomselect.Caption = "(Unselect All)"
    Else
        telecomselect.Caption = "(Select All)"
    End If
    
    AllBrowse.Caption = "(" & accessx + ManageX + Securityx + Networxx + specialx + telecomx + wirelessx & " selected)"
    
    If accessx + ManageX + Securityx + Networxx + specialx + telecomx + wirelessx = 0 Then
        submit2.Enabled = False
        'submit1.Enabled = False
    End If
End Sub

Private Sub opticalinfo_Click()
Instructions = MsgBox("Optical Wavelength Services (OWS) are fiber networking solutions that provide customers with dedicated broadband, framing-independent transport networks. For customers who need to interconnect their offices in different regions of the U.S. and internationally, we provide the optronics equipment and fiber connectivity that comprise the OWS transport network. Either Verizon Business or the customer can manage the network.", vbInformation, "Optical Wavelength Services Description")

End Sub

Private Sub Pagingcheck_Click()
   
    If Pagingcheck.Value = 0 Then
        If wirelessx = 0 Then
            wirelessbrowse.Caption = "(" & wirelessx & " selected)"
        Else
            wirelessx = wirelessx - 1
            wirelessbrowse.Caption = "(" & wirelessx & " selected)"
        End If
    Else
        wirelessx = wirelessx + 1
        wirelessbrowse.Caption = "(" & wirelessx & " selected)"
        submit2.Enabled = True
        'submit1.Enabled = True
   End If

    If wirelessx = 4 Then
        wirelessselect.Caption = "(Unselect All)"
    Else
        wirelessselect.Caption = "(Select All)"
    End If
    
    AllBrowse.Caption = "(" & accessx + ManageX + Securityx + Networxx + specialx + telecomx + wirelessx & " selected)"
    
    If accessx + ManageX + Securityx + Networxx + specialx + telecomx + wirelessx = 0 Then
        submit2.Enabled = False
        'submit1.Enabled = False
    End If
End Sub

Private Sub paginginfo_Click()
Instructions = MsgBox("Paging Service offers expedient messaging and is a convenient way to alert a user that immediate attention is needed. Paging Service can include the traditional |fffd|one-way|fffd| page or more sophisticated 'two-way' advanced messaging. ", vbInformation, "Paging Service Description")

End Sub

Private Sub PKICheck_Click()
   
    If PKICheck.Value = 0 Then
        If Securityx = 0 Then
            securitybrowse.Caption = "(" & Securityx & " selected)"
        Else
            Securityx = Securityx - 1
            securitybrowse.Caption = "(" & Securityx & " selected)"
        End If
    Else
        Securityx = Securityx + 1
        securitybrowse.Caption = "(" & Securityx & " selected)"
        submit2.Enabled = True
        'submit1.Enabled = True
   End If

    If Securityx = 11 Then
        securityselect.Caption = "(Unselect All)"
    Else
        securityselect.Caption = "(Select All)"
    End If
    
    AllBrowse.Caption = "(" & accessx + ManageX + Securityx + Networxx + specialx + telecomx + wirelessx & " selected)"
    
    If accessx + ManageX + Securityx + Networxx + specialx + telecomx + wirelessx = 0 Then
        submit2.Enabled = False
        'submit1.Enabled = False
    End If
End Sub

Private Sub PKIinfo_Click()
Instructions = MsgBox("Managed E-Authentication Service (MEAS) is an electronic service that validates and verifies a user|fffd|s identity. MEAS allows the use of electronic signatures over the Internet, the Verizon Business network and other public networks.", vbInformation, "Managed E-Authentication Service Description")

End Sub

Private Sub PremiseBroadbandCheck_Click()
   
    If PremiseBroadbandCheck.Value = 0 Then
        If telecomx = 0 Then
            telecombrowse.Caption = "(" & telecomx & " selected)"
        Else
            telecomx = telecomx - 1
            telecombrowse.Caption = "(" & telecomx & " selected)"
        End If
    Else
        telecomx = telecomx + 1
        telecombrowse.Caption = "(" & telecomx & " selected)"
        submit2.Enabled = True
        'submit1.Enabled = True
   End If

    If telecomx = 29 Then
        telecomselect.Caption = "(Unselect All)"
    Else
        telecomselect.Caption = "(Select All)"
    End If
    
    AllBrowse.Caption = "(" & accessx + ManageX + Securityx + Networxx + specialx + telecomx + wirelessx & " selected)"
    
    If accessx + ManageX + Securityx + Networxx + specialx + telecomx + wirelessx = 0 Then
        submit2.Enabled = False
        'submit1.Enabled = False
    End If
End Sub

Private Sub premisebroadbandinfo_Click()
Instructions = MsgBox("Premises-Based IP Virtual Private Network Services (PBIP-VPNS) are typically Internet Protocol Security (IPSEC) tunnel-based services based at the customer location. These services utilize customer edge (CE) devices to encrypt and decrypt traffic before it enters and leaves the customer|fffd|s network. The CE devices connect to fully or partially meshed Layer 3 IP VPN networks across the Verizon cloud, providing security on an end-to-end basis |fffd| Verizon Business has no visibility into the IP tunnel.", vbInformation, "Premises-Based IP VPN Services Description")
End Sub

Private Sub PremiseCPECheck_Click()
   
    If PremiseCPECheck.Value = 0 Then
        If telecomx = 0 Then
            telecombrowse.Caption = "(" & telecomx & " selected)"
        Else
            telecomx = telecomx - 1
            telecombrowse.Caption = "(" & telecomx & " selected)"
        End If
    Else
        telecomx = telecomx + 1
        telecombrowse.Caption = "(" & telecomx & " selected)"
        submit2.Enabled = True
        'submit1.Enabled = True
   End If

    If telecomx = 29 Then
        telecomselect.Caption = "(Unselect All)"
    Else
        telecomselect.Caption = "(Select All)"
    End If
    
    AllBrowse.Caption = "(" & accessx + ManageX + Securityx + Networxx + specialx + telecomx + wirelessx & " selected)"
    
    If accessx + ManageX + Securityx + Networxx + specialx + telecomx + wirelessx = 0 Then
        submit2.Enabled = False
        'submit1.Enabled = False
    End If
End Sub

Private Sub PremiseCPEinfo_Click()
Instructions = MsgBox("Premises-Based IP Virtual Private Network Services (PBIP-VPNS) are typically Internet Protocol Security (IPSEC) tunnel-based services based at the customer location. These services utilize customer edge (CE) devices to encrypt and decrypt traffic before it enters and leaves the customer|fffd|s network. The CE devices connect to fully or partially meshed Layer 3 IP VPN networks across the Verizon cloud, providing security on an end-to-end basis |fffd| Verizon Business has no visibility into the IP tunnel.", vbInformation, "Premises-Based IP VPN Services Description")
End Sub

Private Sub PremiseDedicatedCheck_Click()
   
    If PremiseDedicatedCheck.Value = 0 Then
        If telecomx = 0 Then
            telecombrowse.Caption = "(" & telecomx & " selected)"
        Else
            telecomx = telecomx - 1
            telecombrowse.Caption = "(" & telecomx & " selected)"
        End If
    Else
        telecomx = telecomx + 1
        telecombrowse.Caption = "(" & telecomx & " selected)"
        submit2.Enabled = True
        'submit1.Enabled = True
   End If

    If telecomx = 29 Then
        telecomselect.Caption = "(Unselect All)"
    Else
        telecomselect.Caption = "(Select All)"
    End If
    
    AllBrowse.Caption = "(" & accessx + ManageX + Securityx + Networxx + specialx + telecomx + wirelessx & " selected)"
    
    If accessx + ManageX + Securityx + Networxx + specialx + telecomx + wirelessx = 0 Then
        submit2.Enabled = False
        'submit1.Enabled = False
    End If
End Sub

Private Sub Premisededicatedinfo_Click()
Instructions = MsgBox("Premises-Based IP Virtual Private Network Services (PBIP-VPNS) are typically Internet Protocol Security (IPSEC) tunnel-based services based at the customer location. These services utilize customer edge (CE) devices to encrypt and decrypt traffic before it enters and leaves the customer|fffd|s network. The CE devices connect to fully or partially meshed Layer 3 IP VPN networks across the Verizon cloud, providing security on an end-to-end basis |fffd| Verizon Business has no visibility into the IP tunnel.", vbInformation, "Premises-Based IP VPN Services Description")
End Sub

Private Sub PremiseSSLCheck_Click()
   
    If PremiseSSLCheck.Value = 0 Then
        If telecomx = 0 Then
            telecombrowse.Caption = "(" & telecomx & " selected)"
        Else
            telecomx = telecomx - 1
            telecombrowse.Caption = "(" & telecomx & " selected)"
        End If
    Else
        telecomx = telecomx + 1
        telecombrowse.Caption = "(" & telecomx & " selected)"
        submit2.Enabled = True
        'submit1.Enabled = True
        
   End If

    If telecomx = 29 Then
        telecomselect.Caption = "(Unselect All)"
    Else
        telecomselect.Caption = "(Select All)"
    End If
    
    AllBrowse.Caption = "(" & accessx + ManageX + Securityx + Networxx + specialx + telecomx + wirelessx & " selected)"
    
    If accessx + ManageX + Securityx + Networxx + specialx + telecomx + wirelessx = 0 Then
        submit2.Enabled = False
        'submit1.Enabled = False
    End If
End Sub

Private Sub premisesslinfo_Click()
Instructions = MsgBox("Premises-Based IP Virtual Private Network Services (PBIP-VPNS) are typically Internet Protocol Security (IPSEC) tunnel-based services based at the customer location. These services utilize customer edge (CE) devices to encrypt and decrypt traffic before it enters and leaves the customer|fffd|s network. The CE devices connect to fully or partially meshed Layer 3 IP VPN networks across the Verizon cloud, providing security on an end-to-end basis |fffd| Verizon Business has no visibility into the IP tunnel.", vbInformation, "Premises-Based IP VPN Services Description")

End Sub

Private Sub PrivateCheck_Click()
   
    If PrivateCheck.Value = 0 Then
        If telecomx = 0 Then
            telecombrowse.Caption = "(" & telecomx & " selected)"
        Else
            telecomx = telecomx - 1
            telecombrowse.Caption = "(" & telecomx & " selected)"
        End If
    Else
        telecomx = telecomx + 1
        telecombrowse.Caption = "(" & telecomx & " selected)"
        submit2.Enabled = True
        'submit1.Enabled = True
   End If

    If telecomx = 29 Then
        telecomselect.Caption = "(Unselect All)"
    Else
        telecomselect.Caption = "(Select All)"
    End If
    
    AllBrowse.Caption = "(" & accessx + ManageX + Securityx + Networxx + specialx + telecomx + wirelessx & " selected)"
    
    If accessx + ManageX + Securityx + Networxx + specialx + telecomx + wirelessx = 0 Then
        submit2.Enabled = False
        'submit1.Enabled = False
    End If
End Sub

Private Sub privateinfo_Click()
Instructions = MsgBox("Private Line Service (PLS) provides dedicated, reliable full-duplex bandwidth for customer-specific data networks and mission critical applications. This service|fffd|s wide range of line speeds and reliability options allow customers to meet an array of diverse requirements, including voice, data, video, multimedia, and encrypted communications.", vbInformation, "Private Line Service Description")

End Sub

Private Sub SecureCheck_Click()
   
    If SecureCheck.Value = 0 Then
        If Securityx = 0 Then
            securitybrowse.Caption = "(" & Securityx & " selected)"
        Else
            Securityx = Securityx - 1
            securitybrowse.Caption = "(" & Securityx & " selected)"
        End If
    Else
        Securityx = Securityx + 1
        securitybrowse.Caption = "(" & Securityx & " selected)"
        submit2.Enabled = True
        'submit1.Enabled = True
   End If

    If Securityx = 11 Then
        securityselect.Caption = "(Unselect All)"
    Else
        securityselect.Caption = "(Select All)"
    End If
    
    AllBrowse.Caption = "(" & accessx + ManageX + Securityx + Networxx + specialx + telecomx + wirelessx & " selected)"
    
    If accessx + ManageX + Securityx + Networxx + specialx + telecomx + wirelessx = 0 Then
        submit2.Enabled = False
        'submit1.Enabled = False
    End If
End Sub

Private Sub secureinfo_Click()
Instructions = MsgBox("Secure Managed Email Service (SMEMS) provides customers with a complete, secure and fully managed email security solution to help protect against a variety of security risks and unsolicited content, such as viruses, spam and inappropriate material.", vbInformation, "Secure Managed Email Services Description")
End Sub

Private Sub securityselect_Click()
    If securityselect.Caption = "(Select All)" And Sheets("Off-Line Form").ComboBox1.Text = "Networx Universal" Then
        
        AntiVirusCheck.Value = 1
        IntrusionHostCheck.Value = 1
        MEASCheck.Value = 1
        FirewallNetworkCheck.Value = 1
        MTSSCheck.Value = 1
        VulnerabilityCheck.Value = 1
        IncidentCheck.Value = 1
        IntrusionNetworkCheck.Value = 1
        PKICheck.Value = 1
        FirewallPremiseCheck.Value = 1
        SecureCheck.Value = 1
                
        securityselect.Caption = "(Unselect All)"
        
    ElseIf securityselect.Caption = "(Unselect All)" And Sheets("Off-Line Form").ComboBox1.Text = "Networx Universal" Then
              
        AntiVirusCheck.Value = 0
        IntrusionHostCheck.Value = 0
        MEASCheck.Value = 0
        FirewallNetworkCheck.Value = 0
        MTSSCheck.Value = 0
        VulnerabilityCheck.Value = 0
        IncidentCheck.Value = 0
        IntrusionNetworkCheck.Value = 0
        PKICheck.Value = 0
        FirewallPremiseCheck.Value = 0
        SecureCheck.Value = 0
        
        securityselect.Caption = "(Select All)"
    
    ElseIf securityselect.Caption = "(Select All)" And Sheets("Off-Line Form").ComboBox1.Text = "Networx Enterprise" Then
        
        AntiVirusCheck.Value = 1
        IntrusionHostCheck.Value = 1
        MEASCheck.Value = 1
        FirewallNetworkCheck.Value = 1
        MTSSCheck.Value = 1
        VulnerabilityCheck.Value = 0
        IncidentCheck.Value = 1
        IntrusionNetworkCheck.Value = 1
        PKICheck.Value = 1
        FirewallPremiseCheck.Value = 1
        SecureCheck.Value = 1
                
        securityselect.Caption = "(Unselect All)"
        
    ElseIf securityselect.Caption = "(Unselect All)" And Sheets("Off-Line Form").ComboBox1.Text = "Networx Enterprise" Then
              
        AntiVirusCheck.Value = 0
        IntrusionHostCheck.Value = 0
        MEASCheck.Value = 0
        FirewallNetworkCheck.Value = 0
        MTSSCheck.Value = 0
        VulnerabilityCheck.Value = 0
        IncidentCheck.Value = 0
        IntrusionNetworkCheck.Value = 0
        PKICheck.Value = 0
        FirewallPremiseCheck.Value = 0
        SecureCheck.Value = 0
        
        securityselect.Caption = "(Select All)"
    Else
    End If
End Sub

Private Sub SiteCheck_Click()
    If SiteCheck.Value = 0 Then
        If Networxx = 0 Then
            Networxbrowse.Caption = "(" & Networxx & " selected)"
        Else
            Networxx = Networxx - 1
            Networxbrowse.Caption = "(" & Networxx & " selected)"
        End If
    Else
        Networxx = Networxx + 1
        Networxbrowse.Caption = "(" & Networxx & " selected)"
        submit2.Enabled = True
'        'submit1.Enabled = True
   End If
   
    If Networxx = 1 Then
        networxselect.Caption = "(Unselect All)"
    Else
        networxselect.Caption = "(Select All)"
    End If
    
    AllBrowse.Caption = "(" & accessx + ManageX + Securityx + Networxx + specialx + telecomx + wirelessx & " selected)"
    
    If accessx + ManageX + Securityx + Networxx + specialx + telecomx + wirelessx = 0 Then
        submit2.Enabled = False
        ''submit1.Enabled = False
    End If
End Sub

Private Sub siteinfo_Click()
Instructions = MsgBox("Ensures your site is ready to accept new CPE equipment installation and/or network services.", vbInformation, "Site Survey NRC Description")

End Sub

Private Sub specialselect_Click()

    If specialselect.Caption = "(Select All)" And Sheets("Off-Line Form").ComboBox1.Text = "Networx Universal" Then
        
        
        LandCheck.Value = 1
        FixedCheck.Value = 1
                
        specialselect.Caption = "(Unselect All)"
        
    ElseIf specialselect.Caption = "(Unselect All)" And Sheets("Off-Line Form").ComboBox1.Text = "Networx Universal" Then
              
        
        LandCheck.Value = 0
        FixedCheck.Value = 0
        
        specialselect.Caption = "(Select All)"
    
    ElseIf specialselect.Caption = "(Select All)" And Sheets("Off-Line Form").ComboBox1.Text = "Networx Enterprise" Then
        
        LandCheck.Value = 1
        FixedCheck.Value = 0
                
        specialselect.Caption = "(Unselect All)"
    ElseIf specialselect.Caption = "(Unselect All)" And Sheets("Off-Line Form").ComboBox1.Text = "Networx Enterprise" Then
              
        
        LandCheck.Value = 0
        FixedCheck.Value = 0
        
        specialselect.Caption = "(Select All)"
    Else
        
    End If
    
    AllBrowse.Caption = "(" & accessx + ManageX + Securityx + Networxx + specialx + telecomx + wirelessx & " selected)"
    
    If accessx + ManageX + Securityx + Networxx + specialx + telecomx + wirelessx = 0 Then
        submit2.Enabled = False
        'submit1.Enabled = False
    End If
End Sub

Private Sub Storagecheck_Click()

    If Storagecheck.Value = 0 Then
        If ManageX = 0 Then
            managebrowse.Caption = "(" & ManageX & " selected)"
        Else
            ManageX = ManageX - 1
            managebrowse.Caption = "(" & ManageX & " selected)"
        End If
    Else
        ManageX = ManageX + 1
        managebrowse.Caption = "(" & ManageX & " selected)"
        submit2.Enabled = True
        'submit1.Enabled = True
   End If
   
    If ManageX = 12 Then
        manageselect.Caption = "(Unselect All)"
    Else
        manageselect.Caption = "(Select All)"
    End If
    
    AllBrowse.Caption = "(" & accessx + ManageX + Securityx + Networxx + specialx + telecomx + wirelessx & " selected)"
    
    If accessx + ManageX + Securityx + Networxx + specialx + telecomx + wirelessx = 0 Then
        submit2.Enabled = False
        'submit1.Enabled = False
    End If
End Sub

Private Sub storageinfo_Click()
Instructions = MsgBox("Storage Services (SS) enable Verizon Business customers to access data without interuption using reliable, disaster-tolerant systems.  Verizon Business offers three types of storage services: Backup and Restore Service, Network Attached Storage Solutions, and Storage Area Network Solutions.", vbInformation, "Storage Services (SS)")
End Sub

Private Sub submit1_Click()
    Application.ScreenUpdating = False
    Instruction = MsgBox("You have selected " & Left(AllBrowse.Caption, 3) & ") products/svcs.  Confirm these services have been awarded and that you are authorized to request selected products and services.", vbYesNo, "Confirmation")
    
    If Instruction = 6 Then
    On Error Resume Next
    If Sheets("Off-Line Form").ComboBox1.Text = "Networx Universal" Then
        Sheets("Products Listing").ConvergedCheck.Value = 0
        Sheets("Products Listing").ConvergedCheck.Visible = True
        Sheets("Products Listing").ConvergedInfo.Visible = True
        
        Sheets("Products Listing").VulnerabilityCheck.Value = 0
        Sheets("Products Listing").VulnerabilityCheck.Visible = True
        Sheets("Products Listing").vulnerabilityinfo.Visible = True
        
        Sheets("Products Listing").CustomerContactCheck.Value = 0
        Sheets("Products Listing").CustomerContactCheck.Visible = True
        Sheets("Products Listing").customercontactinfo.Visible = True
        
        Sheets("Products Listing").DedicatedCheck.Value = 0
        Sheets("Products Listing").DedicatedCheck.Visible = True
        Sheets("Products Listing").dedicatedinfo.Visible = True
        
        Sheets("Products Listing").Storagecheck.Value = 0
        Sheets("Products Listing").Storagecheck.Visible = True
        Sheets("Products Listing").storageinfo.Visible = True
        
        Sheets("Products Listing").ATMSCheck.Value = 0
        Sheets("Products Listing").ATMSCheck.Visible = True
        Sheets("Products Listing").ATMSinfo.Visible = True
        
        Sheets("Products Listing").FrameCheck.Value = 0
        Sheets("Products Listing").FrameCheck.Visible = True
        Sheets("Products Listing").frameinfo.Visible = True
        
        Sheets("Products Listing").OpticalCheck.Value = 0
        Sheets("Products Listing").OpticalCheck.Visible = True
        Sheets("Products Listing").opticalinfo.Visible = True
        
        Sheets("Products Listing").SynchronousCheck.Value = 0
        Sheets("Products Listing").SynchronousCheck.Visible = True
        Sheets("Products Listing").synchronousinfo.Visible = True
               
        Sheets("Products Listing").opticaltitle.Visible = True
        
        Sheets("Products Listing").CellularCheck.Value = 0
        Sheets("Products Listing").CellularCheck.Visible = True
        Sheets("Products Listing").cellularinfo.Visible = True
        
        Sheets("Products Listing").FixedCheck.Value = 0
        Sheets("Products Listing").FixedCheck.Visible = True
        Sheets("Products Listing").fixedinfo.Visible = True
        
        Sheets("Products Listing").DHSMNCheck.Value = 0
        Sheets("Products Listing").DHSMNCheck.Visible = True
        Sheets("Products Listing").DHSMNCheck.Visible = True
        
        Sheets("Products Listing").ECScheck.Value = 0
        Sheets("Products Listing").ECScheck.Visible = True
        Sheets("Products Listing").ECScheck.Visible = True
        
        Sheets("Products Listing").MANcheck.Value = 0
        Sheets("Products Listing").MANcheck.Visible = True
        Sheets("Products Listing").MANcheck.Visible = True
        
    ElseIf Sheets("Off-Line Form").ComboBox1.Text = "Networx Enterprise" Then
        Sheets("Products Listing").ConvergedCheck.Value = 0
        Sheets("Products Listing").ConvergedCheck.Visible = False
        Sheets("Products Listing").ConvergedInfo.Visible = False
        
        Sheets("Products Listing").VulnerabilityCheck.Value = 0
        Sheets("Products Listing").VulnerabilityCheck.Visible = False
        Sheets("Products Listing").vulnerabilityinfo.Visible = False
        
        Sheets("Products Listing").CustomerContactCheck.Value = 0
        Sheets("Products Listing").CustomerContactCheck.Visible = False
        Sheets("Products Listing").customercontactinfo.Visible = False
        
        Sheets("Products Listing").DedicatedCheck.Value = 0
        Sheets("Products Listing").DedicatedCheck.Visible = False
        Sheets("Products Listing").dedicatedinfo.Visible = False
        
        Sheets("Products Listing").Storagecheck.Value = 0
        Sheets("Products Listing").Storagecheck.Visible = False
        Sheets("Products Listing").storageinfo.Visible = False
        
        Sheets("Products Listing").ATMSCheck.Value = 0
        Sheets("Products Listing").ATMSCheck.Visible = False
        Sheets("Products Listing").ATMSinfo.Visible = False
        
        Sheets("Products Listing").FrameCheck.Value = 0
        Sheets("Products Listing").FrameCheck.Visible = False
        Sheets("Products Listing").frameinfo.Visible = False
        
        Sheets("Products Listing").OpticalCheck.Value = 0
        Sheets("Products Listing").OpticalCheck.Visible = False
        Sheets("Products Listing").opticalinfo.Visible = False
        
        Sheets("Products Listing").SynchronousCheck.Value = 0
        Sheets("Products Listing").SynchronousCheck.Visible = False
        Sheets("Products Listing").synchronousinfo.Visible = False
               
        Sheets("Products Listing").opticaltitle.Visible = False
        
        Sheets("Products Listing").CellularCheck.Value = 0
        Sheets("Products Listing").CellularCheck.Visible = False
        Sheets("Products Listing").cellularinfo.Visible = False
        
        Sheets("Products Listing").FixedCheck.Value = 0
        Sheets("Products Listing").FixedCheck.Visible = False
        Sheets("Products Listing").fixedinfo.Visible = False
        
        Sheets("Products Listing").DHSMNCheck.Value = 0
        Sheets("Products Listing").DHSMNCheck.Visible = False
        Sheets("Products Listing").DHSMNCheck.Visible = False
        
        Sheets("Products Listing").ECScheck.Value = 0
        Sheets("Products Listing").ECScheck.Visible = False
        Sheets("Products Listing").ECScheck.Visible = False
        
        Sheets("Products Listing").MANcheck.Value = 0
        Sheets("Products Listing").MANcheck.Visible = False
        Sheets("Products Listing").MANcheck.Visible = False
    Else
    End If
    For prodnum = 3 To 80 Step 1
        Sheets("Products-Services").Range("A" & prodnum).Value = ""
    Next
    
    prodnum = 3
   
    'Manage Services
    If AudioCheck.Value <> 0 Or WebCheck.Value <> 0 Then
        Sheets("Products-Services").Range("A" & prodnum).Value = "Audio Converencing (ACS)/Web Conferencing Services (WCS)"
        prodnum = prodnum + 1
    End If
        
    If CustomerContactCheck.Value <> 0 Then
        Sheets("Products-Services").Range("A" & prodnum).Value = "Call Center Services (CCS)"
        prodnum = prodnum + 1
    End If

    If CollaborationCheck.Value <> 0 Then
        Sheets("Products-Services").Range("A" & prodnum).Value = "Collaboration Support Services (CSS)"
        prodnum = prodnum + 1
    End If

    If CoLocatedCheck.Value <> 0 Then
        Sheets("Products-Services").Range("A" & prodnum).Value = "Collocated Hosting Services (CHS)"
        prodnum = prodnum + 1
    End If

    If CustomerSpecificCheck.Value <> 0 Then
        Sheets("Products-Services").Range("A" & prodnum).Value = "Customer Specific Design and Engineering Services (CSDES)"
        prodnum = prodnum + 1
    End If

    If DedicatedCheck.Value <> 0 Then
        Sheets("Products-Services").Range("A" & prodnum).Value = "Dedicated Hosting Services (DHS)"
        prodnum = prodnum + 1
    End If
    
    If ManagedCheck.Value <> 0 Then
        Sheets("Products-Services").Range("A" & prodnum).Value = "Managed Network Services (MNS)"
        prodnum = prodnum + 1
    End If
        
    If Storagecheck.Value <> 0 Then
        Sheets("Products-Services").Range("A" & prodnum).Value = "Storage Services (SS)"
        prodnum = prodnum + 1
    End If
            
    If TeleWorkingCheck.Value <> 0 Then
        Sheets("Products-Services").Range("A" & prodnum).Value = "Teleworking Services (TWS)"
        prodnum = prodnum + 1
    End If
            
    If IPVTSCheck.Value <> 0 Or VideoCheck.Value <> 0 Then
        Sheets("Products-Services").Range("A" & prodnum).Value = "Video Conferencing Services (VCS)/IP Video Transport Service (IPVTS)"
        prodnum = prodnum + 1
    End If
    '***End of Manage Services***
    
    'Networx Miscellaneous
    If DHSMNCheck.Value <> 0 Then
        Sheets("Products-Services").Range("A" & prodnum).Value = "DHS Managed Network"
        prodnum = prodnum + 1
    End If
    
    If ECScheck.Value <> 0 Then
        Sheets("Products-Services").Range("A" & prodnum).Value = "Emergency Communication Service"
        prodnum = prodnum + 1
    End If
    
    If MANcheck.Value <> 0 Then
        Sheets("Products-Services").Range("A" & prodnum).Value = "Metropolitan Area Network"
        prodnum = prodnum + 1
    End If
    
    If SiteCheck.Value <> 0 Then
        Sheets("Products-Services").Range("A" & prodnum).Value = "Site Survey"
        prodnum = prodnum + 1
    End If
    '***End of Networx Services***
        
    'Security Services
    If AntiVirusCheck.Value <> 0 Then
        Sheets("Products-Services").Range("A" & prodnum).Value = "Anti-Virus Management Services (AVMS)"
        prodnum = prodnum + 1
    End If
       
    If IncidentCheck.Value <> 0 Then
        Sheets("Products-Services").Range("A" & prodnum).Value = "Incident Response Services (INRS)"
        prodnum = prodnum + 1
    End If
        
    If IntrusionHostCheck.Value <> 0 Or IntrusionNetworkCheck.Value <> 0 Then
        Sheets("Products-Services").Range("A" & prodnum).Value = "Intrusion Detection and Prevention Host/Network Based (IDPS)"
        prodnum = prodnum + 1
    End If
    
    If MEASCheck.Value <> 0 Or PKICheck.Value <> 0 Then
        Sheets("Products-Services").Range("A" & prodnum).Value = "Managed E-Authentication (MEAS)"
        prodnum = prodnum + 1
    End If
                
    If FirewallNetworkCheck.Value <> 0 Or FirewallPremiseCheck.Value <> 0 Then
        Sheets("Products-Services").Range("A" & prodnum).Value = "Managed Firewall Services Network/Premise Based"
        prodnum = prodnum + 1
    End If
    
    If MTSSCheck.Value <> 0 Then
        Sheets("Products-Services").Range("A" & prodnum).Value = "Managed Tiered Security Services (MTSS)"
        prodnum = prodnum + 1
    End If
    
    If SecureCheck.Value <> 0 Then
        Sheets("Products-Services").Range("A" & prodnum).Value = "Secure Managed Email Services"
        prodnum = prodnum + 1
    End If
    
    If VulnerabilityCheck.Value <> 0 Then
        Sheets("Products-Services").Range("A" & prodnum).Value = "Vulnerability Scanning Services (VSS)"
        prodnum = prodnum + 1
    End If
    '***End of Security Services***
        
    'Special Services
    If broadbandcheck.Value <> 0 Then
        Sheets("Products-Services").Range("A" & prodnum).Value = "Broadband Services (BRDS)"
        prodnum = prodnum + 1
    End If
        
    If LandCheck.Value <> 0 Then
        Sheets("Products-Services").Range("A" & prodnum).Value = "Land Mobile Radio Services"
        prodnum = prodnum + 1
    End If
        
    'NEW
    If FixedCheck.Value <> 0 Then 'NEW
        Sheets("Products-Services").Range("A" & prodnum).Value = "Fixed Satellite Services (FSS)"
        prodnum = prodnum + 1
    End If
    '***End of Special Services***
    
    'Telecom Services
    If ATMSCheck.Value <> 0 Then
        Sheets("Products-Services").Range("A" & prodnum).Value = "Asynchronous Transfer Mode Service (ATMS)"
        prodnum = prodnum + 1
    End If
            
    If CircuitCheck.Value <> 0 Then
        Sheets("Products-Services").Range("A" & prodnum).Value = "Circuit Switch Data Service"
        prodnum = prodnum + 1
    End If
            
    If CombinedDigitalCheck.Value <> 0 Or CombinedISDNCheck.Value <> 0 Or CombinedLocalCheck.Value <> 0 Then
        Sheets("Products-Services").Range("A" & prodnum).Value = "Combined Service (CS) Digital Trunk/ISDN BRI/PRI/Local Line/Analog Trunk"
        prodnum = prodnum + 1
    End If
            
    If FrameCheck.Value <> 0 Then
        Sheets("Products-Services").Range("A" & prodnum).Value = "Frame Relay Service (FRS)"
        prodnum = prodnum + 1
    End If
            
    If PrivateCheck.Value <> 0 Then
        Sheets("Products-Services").Range("A" & prodnum).Value = "Private Line Service (PLS) Domestic CONUS"
        prodnum = prodnum + 1
    End If
            
    If TollfreededicatedCheck.Value <> 0 Or TollfreeECRCheck.Value <> 0 Or TollFreeSwitchedCheck.Value <> 0 Then
        Sheets("Products-Services").Range("A" & prodnum).Value = "Toll Free Service (TFS) Dedicated/ECR/Switched"
        prodnum = prodnum + 1
    End If
                
    If CallingCheck.Value <> 0 Then
        Sheets("Products-Services").Range("A" & prodnum).Value = "Voice Service (VS) Calling Card"
        prodnum = prodnum + 1
    End If
                
    If VoiceDedicatedCheck.Value <> 0 Or VoiceSwitchedCheck.Value <> 0 Then
        Sheets("Products-Services").Range("A" & prodnum).Value = "Voice Service (VS) Outbound Dedicated/Switched"
        prodnum = prodnum + 1
    End If
                
    If CDNSCheck.Value <> 0 Then
        Sheets("Products-Services").Range("A" & prodnum).Value = "Content Delivery Network Services (CDNS)"
        prodnum = prodnum + 1
    End If
                  
    If ConvergedCheck.Value <> 0 Then
        Sheets("Products-Services").Range("A" & prodnum).Value = "Converged IP Services (CIPS)"
        prodnum = prodnum + 1
    End If
                
    If EmbeddedDSLCheck.Value <> 0 Or EmbeddedSatelliteCheck.Value <> 0 Then
        Sheets("Products-Services").Range("A" & prodnum).Value = "Internet Protocol Services (IPS) Broadband DSL/Satellite"
        prodnum = prodnum + 1
    End If
            
    If DedicatedInternetCheck.Value <> 0 Then
        Sheets("Products-Services").Range("A" & prodnum).Value = "Internet Protocol Services (IPS) Dedicated"
        prodnum = prodnum + 1
    End If
            
    If IndependentCheck.Value <> 0 Then
        Sheets("Products-Services").Range("A" & prodnum).Value = "Internet Protocol Services (IPS) Dial"
        prodnum = prodnum + 1
    End If
            
    If IPCheck.Value <> 0 Then
        Sheets("Products-Services").Range("A" & prodnum).Value = "Internet Protocol Telephony Service (IPTelS)"
        prodnum = prodnum + 1
    End If
            
    If NetworkVPNCheck.Value <> 0 Then
        Sheets("Products-Services").Range("A" & prodnum).Value = "Network-Based IP VPN Services (NBIP-VPNS)"
        prodnum = prodnum + 1
    End If
            
    If PremiseSSLCheck.Value <> 0 Or PremiseBroadbandCheck.Value <> 0 Or PremiseCPECheck.Value <> 0 Or PremiseDedicatedCheck.Value <> 0 Then
        Sheets("Products-Services").Range("A" & prodnum).Value = "Premises-Based IP VPN Services (PBIP-VPNS) Broadband (BB)/CPE-Based/Dedicated"
        prodnum = prodnum + 1
    End If
            
    If VOIPTransportCheck.Value <> 0 Then
        Sheets("Products-Services").Range("A" & prodnum).Value = "Voice Over Internet Protocol Transport Services"
        prodnum = prodnum + 1
    End If
            
    If OpticalCheck.Value <> 0 Then
        Sheets("Products-Services").Range("A" & prodnum).Value = "Optical Wavelength Service (OWS)"
        prodnum = prodnum + 1
    End If
            
    If SynchronousCheck.Value <> 0 Then
        Sheets("Products-Services").Range("A" & prodnum).Value = "Synchronous Optical Network - SONET"
        prodnum = prodnum + 1
    End If
            
    'New
    If InternationalCheck.Value <> 0 Then 'NEW
        Sheets("Products-Services").Range("A" & prodnum).Value = "International Private Line"
        prodnum = prodnum + 1
    End If
    '***End of Telecom Services***
    
    'Wireless Services
    If CellularCheck.Value <> 0 Then
        Sheets("Products-Services").Range("A" & prodnum).Value = "Cellular PCS Services"
        prodnum = prodnum + 1
    End If
            
    If MultimodePublicCheck.Value <> 0 Or MultimodePrivateCheck.Value <> 0 Then
        Sheets("Products-Services").Range("A" & prodnum).Value = "Multimode/Wireless LAN Service (MWLANS) Public/Private"
        prodnum = prodnum + 1
    End If
              
    If Pagingcheck.Value <> 0 Then
        Sheets("Products-Services").Range("A" & prodnum).Value = "Paging Services (PagS)"
        prodnum = prodnum + 1
    End If
    '***End of Wireless Services***
'    x = 3
'    Do While Sheets("Products-Services").Range("A" & x).Value <> ""
'        Sheets("Summary").Range("I" & x + 1).Value = Sheets("Products-Services").Range("A" & x).Value
'        x = x + 1
'    Loop
    
'    Sheets("Summary").ListBox1.Clear
'    Sheets("Summary").ListBox1.AddItem ("Products and Services")
    
'    prodnum = prodnum - 1
'
'    For x = 3 To prodnum Step 1
'    Sheets("Summary").ListBox1.AddItem ("   - " & Sheets("Products-Services").Range("A" & x).Value)
'    Next
    
    x = 1
    Do While Sheets("Summary").Range("A" & x).Value <> ""
        x = x + 1
    Loop
    x = x + 1
     
    Sheets("Summary").Range("A" & x).Value = "PRODUCTS/SERVICES"
    x = x + 1
    prodnum = 3
    Do While Sheets("Products-Services").Range("A" & prodnum).Value <> ""
        Sheets("Summary").Range("A" & x).Value = Sheets("Products-Services").Range("A" & prodnum).Value
        Sheets("Summary").Range("A" & x & ":D" & x).Interior.ColorIndex = 15
        x = x + 1
        prodnum = prodnum + 1
    Loop
    
   



    Sheets("Off-Line Form").Visible = True
    Sheets("Products Listing").Visible = False
    Sheets("Off-Line Form").Select
    
    Else
    End If
    Application.ScreenUpdating = True
    
End Sub

Private Sub submit2_Click()
    Application.ScreenUpdating = False
    Instruction = MsgBox("You have selected " & Left(AllBrowse.Caption, 3) & ") products or services.  Confirm that these products or services have been awarded and that you are authorized to request them.", vbYesNo, "Confirmation")
    
    If Instruction = 6 Then
    On Error Resume Next
    If Sheets("Off-Line Form").ComboBox1.Text = "Networx Universal" Then
        Sheets("Products Listing").ConvergedCheck.Value = 0
        Sheets("Products Listing").ConvergedCheck.Visible = True
        Sheets("Products Listing").ConvergedInfo.Visible = True
        
        Sheets("Products Listing").VulnerabilityCheck.Value = 0
        Sheets("Products Listing").VulnerabilityCheck.Visible = True
        Sheets("Products Listing").vulnerabilityinfo.Visible = True
        
        Sheets("Products Listing").CustomerContactCheck.Value = 0
        Sheets("Products Listing").CustomerContactCheck.Visible = True
        Sheets("Products Listing").customercontactinfo.Visible = True
        
        Sheets("Products Listing").DedicatedCheck.Value = 0
        Sheets("Products Listing").DedicatedCheck.Visible = True
        Sheets("Products Listing").dedicatedinfo.Visible = True
        
        Sheets("Products Listing").Storagecheck.Value = 0
        Sheets("Products Listing").Storagecheck.Visible = True
        Sheets("Products Listing").storageinfo.Visible = True
        
        Sheets("Products Listing").ATMSCheck.Value = 0
        Sheets("Products Listing").ATMSCheck.Visible = True
        Sheets("Products Listing").ATMSinfo.Visible = True
        
        Sheets("Products Listing").FrameCheck.Value = 0
        Sheets("Products Listing").FrameCheck.Visible = True
        Sheets("Products Listing").frameinfo.Visible = True
        
        Sheets("Products Listing").OpticalCheck.Value = 0
        Sheets("Products Listing").OpticalCheck.Visible = True
        Sheets("Products Listing").opticalinfo.Visible = True
        
        Sheets("Products Listing").SynchronousCheck.Value = 0
        Sheets("Products Listing").SynchronousCheck.Visible = True
        Sheets("Products Listing").synchronousinfo.Visible = True
               
        Sheets("Products Listing").opticaltitle.Visible = True
        
        Sheets("Products Listing").CellularCheck.Value = 0
        Sheets("Products Listing").CellularCheck.Visible = True
        Sheets("Products Listing").cellularinfo.Visible = True
        
        Sheets("Products Listing").FixedCheck.Value = 0
        Sheets("Products Listing").FixedCheck.Visible = True
        Sheets("Products Listing").fixedinfo.Visible = True
        
        Sheets("Products Listing").DHSMNCheck.Value = 0
        Sheets("Products Listing").DHSMNCheck.Visible = True
        Sheets("Products Listing").DHSMNCheck.Visible = True
        
        Sheets("Products Listing").broadbandcheck.Value = 0
        Sheets("Products Listing").broadbandcheck.Visible = True
        Sheets("Products Listing").broadbandcheck.Visible = True
        
        Sheets("Products Listing").ECScheck.Value = 0
        Sheets("Products Listing").ECScheck.Visible = True
        Sheets("Products Listing").ECScheck.Visible = True
        
        Sheets("Products Listing").MANcheck.Value = 0
        Sheets("Products Listing").MANcheck.Visible = True
        Sheets("Products Listing").MANcheck.Visible = True
        
    ElseIf Sheets("Off-Line Form").ComboBox1.Text = "Networx Enterprise" Then
        Sheets("Products Listing").ConvergedCheck.Value = 0
        Sheets("Products Listing").ConvergedCheck.Visible = False
        Sheets("Products Listing").ConvergedInfo.Visible = False
        
        Sheets("Products Listing").broadbandcheck.Value = 0
        Sheets("Products Listing").broadbandcheck.Visible = False
        Sheets("Products Listing").broadbandcheck.Visible = False
        
        Sheets("Products Listing").VulnerabilityCheck.Value = 0
        Sheets("Products Listing").VulnerabilityCheck.Visible = False
        Sheets("Products Listing").vulnerabilityinfo.Visible = False
        
        Sheets("Products Listing").CustomerContactCheck.Value = 0
        Sheets("Products Listing").CustomerContactCheck.Visible = False
        Sheets("Products Listing").customercontactinfo.Visible = False
        
        Sheets("Products Listing").DedicatedCheck.Value = 0
        Sheets("Products Listing").DedicatedCheck.Visible = False
        Sheets("Products Listing").dedicatedinfo.Visible = False
        
        Sheets("Products Listing").Storagecheck.Value = 0
        Sheets("Products Listing").Storagecheck.Visible = False
        Sheets("Products Listing").storageinfo.Visible = False
        
        Sheets("Products Listing").ATMSCheck.Value = 0
        Sheets("Products Listing").ATMSCheck.Visible = False
        Sheets("Products Listing").ATMSinfo.Visible = False
        
        Sheets("Products Listing").FrameCheck.Value = 0
        Sheets("Products Listing").FrameCheck.Visible = False
        Sheets("Products Listing").frameinfo.Visible = False
        
        Sheets("Products Listing").OpticalCheck.Value = 0
        Sheets("Products Listing").OpticalCheck.Visible = False
        Sheets("Products Listing").opticalinfo.Visible = False
        
        Sheets("Products Listing").SynchronousCheck.Value = 0
        Sheets("Products Listing").SynchronousCheck.Visible = False
        Sheets("Products Listing").synchronousinfo.Visible = False
               
        Sheets("Products Listing").opticaltitle.Visible = False
        
        Sheets("Products Listing").CellularCheck.Value = 0
        Sheets("Products Listing").CellularCheck.Visible = False
        Sheets("Products Listing").cellularinfo.Visible = False
        
        Sheets("Products Listing").FixedCheck.Value = 0
        Sheets("Products Listing").FixedCheck.Visible = False
        Sheets("Products Listing").fixedinfo.Visible = False
        
        Sheets("Products Listing").DHSMNCheck.Value = 0
        Sheets("Products Listing").DHSMNCheck.Visible = False
        Sheets("Products Listing").DHSMNCheck.Visible = False
        
        Sheets("Products Listing").ECScheck.Value = 0
        Sheets("Products Listing").ECScheck.Visible = False
        Sheets("Products Listing").ECScheck.Visible = False
        
        Sheets("Products Listing").MANcheck.Value = 0
        Sheets("Products Listing").MANcheck.Visible = False
        Sheets("Products Listing").MANcheck.Visible = False
    Else
    End If
    For prodnum = 3 To 80 Step 1
        Sheets("Products-Services").Range("A" & prodnum).Value = ""
    Next
    
    prodnum = 3
     
   'Access Services
    If broadbandcheck.Value <> 0 Then
        Sheets("Products-Services").Range("A" & prodnum).Value = "Broadband Access - Cable"
        prodnum = prodnum + 1
        iwcheck.Value = 1
        ds3check.Value = 1
    End If
       
    'Manage Services
    If AudioCheck.Value <> 0 Or WebCheck.Value <> 0 Then
        Sheets("Products-Services").Range("A" & prodnum).Value = "Audio Converencing (ACS)/Web Conferencing Services (WCS)"
        prodnum = prodnum + 1
        iwcheck.Value = 1
    End If
        
    If CustomerContactCheck.Value <> 0 Then
        Sheets("Products-Services").Range("A" & prodnum).Value = "Call Center Services (CCS)"
        prodnum = prodnum + 1
    End If

    If CollaborationCheck.Value <> 0 Then
        Sheets("Products-Services").Range("A" & prodnum).Value = "Collaboration Support Services (CSS)"
        prodnum = prodnum + 1
    End If

    If CoLocatedCheck.Value <> 0 Then
        Sheets("Products-Services").Range("A" & prodnum).Value = "Collocated Hosting Services (CHS)"
        prodnum = prodnum + 1
    End If

    If CustomerSpecificCheck.Value <> 0 Then
        Sheets("Products-Services").Range("A" & prodnum).Value = "Customer Specific Design and Engineering Services (CSDES)"
        prodnum = prodnum + 1
    End If

    If DedicatedCheck.Value <> 0 Then
        Sheets("Products-Services").Range("A" & prodnum).Value = "Dedicated Hosting Services (DHS)"
        prodnum = prodnum + 1
    End If
    
    If ManagedCheck.Value <> 0 Then
        Sheets("Products-Services").Range("A" & prodnum).Value = "Managed Network Services (MNS)"
        prodnum = prodnum + 1
    End If
        
    If Storagecheck.Value <> 0 Then
        Sheets("Products-Services").Range("A" & prodnum).Value = "Storage Services (SS)"
        prodnum = prodnum + 1
    End If
            
    If TeleWorkingCheck.Value <> 0 Then
        Sheets("Products-Services").Range("A" & prodnum).Value = "Teleworking Services (TWS)"
        prodnum = prodnum + 1
    End If
            
    If IPVTSCheck.Value <> 0 Or VideoCheck.Value <> 0 Then
        Sheets("Products-Services").Range("A" & prodnum).Value = "Video Conferencing Services (VCS)/IP Video Transport Service (IPVTS)"
        prodnum = prodnum + 1
        iwcheck.Value = 1
    End If
    '***End of Manage Services***
    
    'Networx Miscellaneous
    If DHSMNCheck.Value <> 0 Then
        Sheets("Products-Services").Range("A" & prodnum).Value = "DHS Managed Network"
        prodnum = prodnum + 1
        iwcheck.Value = 1
    End If
    
    If ECScheck.Value <> 0 Then
        Sheets("Products-Services").Range("A" & prodnum).Value = "Emergency Communication Service"
        prodnum = prodnum + 1
        iwcheck.Value = 1
    End If
    
    If MANcheck.Value <> 0 Then
        Sheets("Products-Services").Range("A" & prodnum).Value = "Metropolitan Area Network"
        prodnum = prodnum + 1
        iwcheck.Value = 1
    End If
    
    If SiteCheck.Value <> 0 Then
        Sheets("Products-Services").Range("A" & prodnum).Value = "Site Survey"
        prodnum = prodnum + 1
    End If
    
    If echeck.Value <> 0 Then
        Sheets("Products-Services").Range("A" & prodnum).Value = "Ethernet"
        prodnum = prodnum + 1
    End If
         
    
    
    '***End of Networx Services***
        
    'Security Services
    If AntiVirusCheck.Value <> 0 Then
        Sheets("Products-Services").Range("A" & prodnum).Value = "Anti-Virus Management Services (AVMS)"
        prodnum = prodnum + 1
    End If
       
    If IncidentCheck.Value <> 0 Then
        Sheets("Products-Services").Range("A" & prodnum).Value = "Incident Response Services (INRS)"
        prodnum = prodnum + 1
    End If
        
    If IntrusionHostCheck.Value <> 0 Or IntrusionNetworkCheck.Value <> 0 Then
        Sheets("Products-Services").Range("A" & prodnum).Value = "Intrusion Detection and Prevention Host/Network Based (IDPS)"
        prodnum = prodnum + 1
    End If
    
    If MEASCheck.Value <> 0 Or PKICheck.Value <> 0 Then
        Sheets("Products-Services").Range("A" & prodnum).Value = "Managed E-Authentication (MEAS)"
        prodnum = prodnum + 1
    End If
                
    If FirewallNetworkCheck.Value <> 0 Or FirewallPremiseCheck.Value <> 0 Then
        Sheets("Products-Services").Range("A" & prodnum).Value = "Managed Firewall Services Network/Premise Based"
        prodnum = prodnum + 1
    End If
    
    If MTSSCheck.Value <> 0 Then
        Sheets("Products-Services").Range("A" & prodnum).Value = "Managed Tiered Security Services (MTSS)"
        prodnum = prodnum + 1
    End If
    
    If SecureCheck.Value <> 0 Then
        Sheets("Products-Services").Range("A" & prodnum).Value = "Secure Managed Email Services"
        prodnum = prodnum + 1
    End If
    
    If VulnerabilityCheck.Value <> 0 Then
        Sheets("Products-Services").Range("A" & prodnum).Value = "Vulnerability Scanning Services (VSS)"
        prodnum = prodnum + 1
    End If
    '***End of Security Services***
        
    'Special Services

        
    If LandCheck.Value <> 0 Then
        Sheets("Products-Services").Range("A" & prodnum).Value = "Land Mobile Radio Services"
        prodnum = prodnum + 1
    End If
        
    'NEW
    If FixedCheck.Value <> 0 Then 'NEW
        Sheets("Products-Services").Range("A" & prodnum).Value = "Fixed Satellite Services (FSS)"
        prodnum = prodnum + 1
        iwcheck.Value = 1
    End If
    '***End of Special Services***
    
    'Telecom Services
    If ATMSCheck.Value <> 0 Then
        Sheets("Products-Services").Range("A" & prodnum).Value = "Asynchronous Transfer Mode Service (ATMS)"
        prodnum = prodnum + 1
        iwcheck.Value = 1
        ds3check.Value = 1
        mrcheck.Value = 1
    End If
            
    If CircuitCheck.Value <> 0 Or circuitscheck.Value <> 0 Then
        Sheets("Products-Services").Range("A" & prodnum).Value = "Circuit Switch Data Service"
        prodnum = prodnum + 1
        iwcheck.Value = 1
    End If
            
    If CombinedDigitalCheck.Value <> 0 Or CombinedISDNCheck.Value <> 0 Or CombinedLocalCheck.Value <> 0 Then
        Sheets("Products-Services").Range("A" & prodnum).Value = "Combined Service (CS) Digital Trunk/ISDN BRI/PRI/Local Line/Analog Trunk"
        prodnum = prodnum + 1
        iwcheck.Value = 1
    End If
            
    If FrameCheck.Value <> 0 Then
        Sheets("Products-Services").Range("A" & prodnum).Value = "Frame Relay Service (FRS)"
        prodnum = prodnum + 1
        iwcheck.Value = 1
        ds3check.Value = 1
        mrcheck.Value = 1
    End If
            
    If PrivateCheck.Value <> 0 Then
        Sheets("Products-Services").Range("A" & prodnum).Value = "Private Line Service (PLS) Domestic CONUS"
        prodnum = prodnum + 1
        iwcheck.Value = 1
        ds3check.Value = 1
    End If
            
    If TollfreededicatedCheck.Value <> 0 Or TollfreeECRCheck.Value <> 0 Or TollFreeSwitchedCheck.Value <> 0 Then
        Sheets("Products-Services").Range("A" & prodnum).Value = "Toll Free Service (TFS) Dedicated/ECR/Switched"
        prodnum = prodnum + 1
        iwcheck.Value = 1
        
        If TollFreeSwitchedCheck.Value <> 0 And TollfreededicatedCheck.Value = 0 And TollfreeECRCheck.Value = 0 Then
            
        Else
            ds3check.Value = 1
        End If
    End If
                
    If CallingCheck.Value <> 0 Then
        Sheets("Products-Services").Range("A" & prodnum).Value = "Voice Service (VS) Calling Card"
        prodnum = prodnum + 1
    End If
                
    If VoiceDedicatedCheck.Value <> 0 Or VoiceSwitchedCheck.Value <> 0 Then
        Sheets("Products-Services").Range("A" & prodnum).Value = "Voice Service (VS) Outbound Dedicated/Switched"
        prodnum = prodnum + 1
        iwcheck.Value = 1
        
        If VoiceDedicatedCheck.Value <> 0 And VoiceSwitchedCheck.Value = 0 Then
        Else
            ds3check.Value = 1
        End If
    End If
                
    If CDNSCheck.Value <> 0 Then
        Sheets("Products-Services").Range("A" & prodnum).Value = "Content Delivery Network Services (CDNS)"
        prodnum = prodnum + 1
    End If
                  
    If ConvergedCheck.Value <> 0 Then
        Sheets("Products-Services").Range("A" & prodnum).Value = "Converged IP Services (CIPS)"
        prodnum = prodnum + 1
        iwcheck.Value = 1
        ds3check.Value = 1
        mrcheck.Value = 1
    End If
                
    If EmbeddedDSLCheck.Value <> 0 Or EmbeddedSatelliteCheck.Value <> 0 Then
        Sheets("Products-Services").Range("A" & prodnum).Value = "Internet Protocol Services (IPS) Broadband DSL/Satellite"
        prodnum = prodnum + 1
        iwcheck.Value = 1
        ds3check.Value = 1
    End If
            
    If DedicatedInternetCheck.Value <> 0 Then
        Sheets("Products-Services").Range("A" & prodnum).Value = "Internet Protocol Services (IPS) Dedicated"
        prodnum = prodnum + 1
        iwcheck.Value = 1
        ds3check.Value = 1
    End If
            
    If IndependentCheck.Value <> 0 Then
        Sheets("Products-Services").Range("A" & prodnum).Value = "Internet Protocol Services (IPS) Dial"
        prodnum = prodnum + 1
        iwcheck.Value = 1
        ds3check.Value = 1
    End If
            
    If IPCheck.Value <> 0 Then
        Sheets("Products-Services").Range("A" & prodnum).Value = "Internet Protocol Telephony Service (IPTelS)"
        prodnum = prodnum + 1
        iwcheck.Value = 1
    End If
            
    If NetworkVPNCheck.Value <> 0 Then
        Sheets("Products-Services").Range("A" & prodnum).Value = "Network-Based IP VPN Services (NBIP-VPNS)"
        prodnum = prodnum + 1
        iwcheck.Value = 1
        ds3check.Value = 1
        mrcheck.Value = 1
    End If
            
    If PremiseSSLCheck.Value <> 0 Or PremiseBroadbandCheck.Value <> 0 Or PremiseCPECheck.Value <> 0 Or PremiseDedicatedCheck.Value <> 0 Then
        Sheets("Products-Services").Range("A" & prodnum).Value = "Premises-Based IP VPN Services (PBIP-VPNS) Broadband (BB)/CPE-Based/Dedicated"
        prodnum = prodnum + 1
        iwcheck.Value = 1
        ds3check.Value = 1
        mrcheck.Value = 1
    End If
            
    If VOIPTransportCheck.Value <> 0 Then
        Sheets("Products-Services").Range("A" & prodnum).Value = "Voice Over Internet Protocol Transport Services"
        prodnum = prodnum + 1
        iwcheck.Value = 1
        ds3check.Value = 1
    End If
            
    If OpticalCheck.Value <> 0 Then
        Sheets("Products-Services").Range("A" & prodnum).Value = "Optical Wavelength Service (OWS)"
        prodnum = prodnum + 1
        iwcheck.Value = 1
        ds3check.Value = 1
    End If
            
    If SynchronousCheck.Value <> 0 Then
        Sheets("Products-Services").Range("A" & prodnum).Value = "Synchronous Optical Network - SONET"
        prodnum = prodnum + 1
        iwcheck.Value = 1
        ds3check.Value = 1
    End If
            
    'New
    If InternationalCheck.Value <> 0 Then 'NEW
        Sheets("Products-Services").Range("A" & prodnum).Value = "International Private Line"
        prodnum = prodnum + 1
        iwcheck.Value = 1
        ds3check.Value = 1
    End If
    '***End of Telecom Services***
    
    'Wireless Services
    If CellularCheck.Value <> 0 Then
        Sheets("Products-Services").Range("A" & prodnum).Value = "Cellular PCS Services"
        prodnum = prodnum + 1
    End If
            
    If MultimodePublicCheck.Value <> 0 Or MultimodePrivateCheck.Value <> 0 Then
        Sheets("Products-Services").Range("A" & prodnum).Value = "Multimode/Wireless LAN Service (MWLANS) Public/Private"
        prodnum = prodnum + 1
    End If
              
    If Pagingcheck.Value <> 0 Then
        Sheets("Products-Services").Range("A" & prodnum).Value = "Paging Services (PagS)"
        prodnum = prodnum + 1
    End If
    '***End of Wireless Services***
'    x = 3
'    Do While Sheets("Products-Services").Range("A" & x).Value <> ""
'        Sheets("Summary").Range("I" & x + 1).Value = Sheets("Products-Services").Range("A" & x).Value
'        x = x + 1
'    Loop
    
'    Sheets("Summary").ListBox1.Clear
'    Sheets("Summary").ListBox1.AddItem ("Products and Services")
    
'    prodnum = prodnum - 1
'
'    For x = 3 To prodnum Step 1
'    Sheets("Summary").ListBox1.AddItem ("   - " & Sheets("Products-Services").Range("A" & x).Value)
'    Next

    'Special triggered Services
    If iwcheck.Value <> 0 Then
        Sheets("Products-Services").Range("A" & prodnum).Value = "Inside Wiring"
        prodnum = prodnum + 1
    End If
    
    If ds3check.Value <> 0 Then
        Sheets("Products-Services").Range("A" & prodnum).Value = "Channelized DS3 Access (BACS)"
        prodnum = prodnum + 1
    End If
    
    If mrcheck.Value <> 0 Then
        Sheets("Products-Services").Range("A" & prodnum).Value = "Managed Reporting"
        prodnum = prodnum + 1
    End If
    
    x = 1
    Do While Sheets("Summary").Range("A" & x).Value <> ""
        x = x + 1
    Loop
    x = x + 1
     
    Sheets("Summary").Range("A" & x).Value = "PRODUCTS/SERVICES"
    x = x + 1
    prodnum = 3
    Do While Sheets("Products-Services").Range("A" & prodnum).Value <> ""
        Sheets("Summary").Range("A" & x).Value = Sheets("Products-Services").Range("A" & prodnum).Value
        Sheets("Summary").Range("A" & x & ":D" & x).Interior.ColorIndex = 15
        x = x + 1
        prodnum = prodnum + 1
    Loop
    
   



    Sheets("Off-Line Form").Visible = True
    Sheets("Products Listing").Visible = False
    Sheets("Off-Line Form").Select
    
    Else
    End If
    Application.ScreenUpdating = True
End Sub

Private Sub SynchronousCheck_Click()
   
    If SynchronousCheck.Value = 0 Then
        If telecomx = 0 Then
            telecombrowse.Caption = "(" & telecomx & " selected)"
        Else
            telecomx = telecomx - 1
            telecombrowse.Caption = "(" & telecomx & " selected)"
        End If
    Else
        telecomx = telecomx + 1
        telecombrowse.Caption = "(" & telecomx & " selected)"
        submit2.Enabled = True
        'submit1.Enabled = True
   End If

    If telecomx = 29 Then
        telecomselect.Caption = "(Unselect All)"
    Else
        telecomselect.Caption = "(Select All)"
    End If
    
    AllBrowse.Caption = "(" & accessx + ManageX + Securityx + Networxx + specialx + telecomx + wirelessx & " selected)"
    
    If accessx + ManageX + Securityx + Networxx + specialx + telecomx + wirelessx = 0 Then
        submit2.Enabled = False
        'submit1.Enabled = False
    End If
End Sub

Private Sub synchronousinfo_Click()
Instructions = MsgBox("Synchronous Optical Networking (SONET) Services is a highly reliable solution that offers wide-ranging fiber optic synchronous transmission rates (from 51.84 Mbps to beyond 13.27 Gbps). For customers who need a survivable communications infra-structure for their mission-critical applications, SONET provides proactive performance monitoring that prevents single and multiple failures, and further enables self-healing functions and robust network management.", vbInformation, "Synchronous Optical Network Services Description")
            
            


End Sub

Private Sub telecomselect_Click()
    If telecomselect.Caption = "(Select All)" And Sheets("Off-Line Form").ComboBox1.Text = "Networx Universal" Then
        
        ATMSCheck.Value = 1
        CallingCheck.Value = 1
        CircuitCheck.Value = 1
        circuitscheck.Value = 1
        CombinedDigitalCheck.Value = 1
        CombinedISDNCheck.Value = 1
        CombinedLocalCheck.Value = 1
        FrameCheck.Value = 1
        InternationalCheck.Value = 1
        PrivateCheck.Value = 1
        TollfreededicatedCheck.Value = 1
        TollfreeECRCheck.Value = 1
        TollFreeSwitchedCheck.Value = 1
        VoiceDedicatedCheck.Value = 1
        VoiceSwitchedCheck.Value = 1
        CDNSCheck.Value = 1
        ConvergedCheck.Value = 1
        DedicatedInternetCheck.Value = 1
        EmbeddedDSLCheck.Value = 1
        EmbeddedSatelliteCheck.Value = 1
        IPCheck.Value = 1
        IndependentCheck.Value = 1
        NetworkVPNCheck.Value = 1
        PremiseSSLCheck.Value = 1
        PremiseBroadbandCheck.Value = 1
        PremiseCPECheck.Value = 1
        PremiseDedicatedCheck.Value = 1
        VOIPTransportCheck.Value = 1
        OpticalCheck.Value = 1
        SynchronousCheck.Value = 1
        circuitscheck.Value = 1
        
        telecomselect.Caption = "(Unselect All)"
        
    ElseIf telecomselect.Caption = "(Unselect All)" And Sheets("Off-Line Form").ComboBox1.Text = "Networx Universal" Then
              
        ATMSCheck.Value = 0
        circuitscheck = 0
        CallingCheck.Value = 0
        CircuitCheck.Value = 0
        circuitscheck.Value = 1
        CombinedDigitalCheck.Value = 0
        CombinedISDNCheck.Value = 0
        CombinedLocalCheck.Value = 0
        FrameCheck.Value = 0
        InternationalCheck.Value = 0
        PrivateCheck.Value = 0
        TollfreededicatedCheck.Value = 0
        TollfreeECRCheck.Value = 0
        TollFreeSwitchedCheck.Value = 0
        VoiceDedicatedCheck.Value = 0
        VoiceSwitchedCheck.Value = 0
        CDNSCheck.Value = 0
        ConvergedCheck.Value = 0
        DedicatedInternetCheck.Value = 0
        EmbeddedDSLCheck.Value = 0
        EmbeddedSatelliteCheck.Value = 0
        IPCheck.Value = 0
        IndependentCheck.Value = 0
        NetworkVPNCheck.Value = 0
        PremiseSSLCheck.Value = 0
        PremiseBroadbandCheck.Value = 0
        PremiseCPECheck.Value = 0
        PremiseDedicatedCheck.Value = 0
        VOIPTransportCheck.Value = 0
        OpticalCheck.Value = 0
        SynchronousCheck.Value = 0
        
        telecomselect.Caption = "(Select All)"
    
    ElseIf telecomselect.Caption = "(Select All)" And Sheets("Off-Line Form").ComboBox1.Text = "Networx Enterprise" Then
        ATMSCheck.Value = 0
        circuitscheck = 1
        CallingCheck.Value = 1
        CircuitCheck.Value = 1
        CombinedDigitalCheck.Value = 1
        CombinedISDNCheck.Value = 1
        CombinedLocalCheck.Value = 1
        FrameCheck.Value = 0
        InternationalCheck.Value = 1
        PrivateCheck.Value = 1
        TollfreededicatedCheck.Value = 1
        TollfreeECRCheck.Value = 1
        TollFreeSwitchedCheck.Value = 1
        VoiceDedicatedCheck.Value = 1
        VoiceSwitchedCheck.Value = 1
        CDNSCheck.Value = 1
        ConvergedCheck.Value = 0
        DedicatedInternetCheck.Value = 1
        EmbeddedDSLCheck.Value = 1
        EmbeddedSatelliteCheck.Value = 1
        IPCheck.Value = 1
        IndependentCheck.Value = 1
        NetworkVPNCheck.Value = 1
        PremiseSSLCheck.Value = 1
        PremiseBroadbandCheck.Value = 1
        PremiseCPECheck.Value = 1
        PremiseDedicatedCheck.Value = 1
        VOIPTransportCheck.Value = 1
        OpticalCheck.Value = 0
        SynchronousCheck.Value = 0
        
        telecomselect.Caption = "(Unselect All)"
    
    ElseIf telecomselect.Caption = "(Unselect All)" And Sheets("Off-Line Form").ComboBox1.Text = "Networx Enterprise" Then
              
        ATMSCheck.Value = 0
        CallingCheck.Value = 0
        circuitscheck = 0
        CircuitCheck.Value = 0
        CombinedDigitalCheck.Value = 0
        CombinedISDNCheck.Value = 0
        CombinedLocalCheck.Value = 0
        FrameCheck.Value = 0
        InternationalCheck.Value = 0
        PrivateCheck.Value = 0
        TollfreededicatedCheck.Value = 0
        TollfreeECRCheck.Value = 0
        TollFreeSwitchedCheck.Value = 0
        VoiceDedicatedCheck.Value = 0
        VoiceSwitchedCheck.Value = 0
        CDNSCheck.Value = 0
        ConvergedCheck.Value = 0
        DedicatedInternetCheck.Value = 0
        EmbeddedDSLCheck.Value = 0
        EmbeddedSatelliteCheck.Value = 0
        IPCheck.Value = 0
        IndependentCheck.Value = 0
        NetworkVPNCheck.Value = 0
        PremiseSSLCheck.Value = 0
        PremiseBroadbandCheck.Value = 0
        PremiseCPECheck.Value = 0
        PremiseDedicatedCheck.Value = 0
        VOIPTransportCheck.Value = 0
        OpticalCheck.Value = 0
        SynchronousCheck.Value = 0
        
        telecomselect.Caption = "(Select All)"
    End If
End Sub

Private Sub TeleWorkingCheck_Click()

    If TeleWorkingCheck.Value = 0 Then
        If ManageX = 0 Then
            managebrowse.Caption = "(" & ManageX & " selected)"
        Else
            ManageX = ManageX - 1
            managebrowse.Caption = "(" & ManageX & " selected)"
        End If
    Else
        ManageX = ManageX + 1
        managebrowse.Caption = "(" & ManageX & " selected)"
        submit2.Enabled = True
        'submit1.Enabled = True
   End If
   
    If ManageX = 12 Then
        manageselect.Caption = "(Unselect All)"
    Else
        manageselect.Caption = "(Select All)"
    End If
    
    AllBrowse.Caption = "(" & accessx + ManageX + Securityx + Networxx + specialx + telecomx + wirelessx & " selected)"
    
    If accessx + ManageX + Securityx + Networxx + specialx + telecomx + wirelessx = 0 Then
        submit2.Enabled = False
        'submit1.Enabled = False
    End If
End Sub

Private Sub teleworkinginfo_Click()
Instructions = MsgBox("TeleWorking Services (TWS) enable agency and bureau staff located anywhere in the world to work onsite via electronically supported communications and collaborations capabilities.  Using TWS, teleworkers can connect remotely and securely to agency systems and applications.", vbInformation, "Teleworking Services (TWS)")

End Sub

Private Sub TollfreededicatedCheck_Click()
   
    If TollfreededicatedCheck.Value = 0 Then
        If telecomx = 0 Then
            telecombrowse.Caption = "(" & telecomx & " selected)"
        Else
            telecomx = telecomx - 1
            telecombrowse.Caption = "(" & telecomx & " selected)"
        End If
    Else
        telecomx = telecomx + 1
        telecombrowse.Caption = "(" & telecomx & " selected)"
        submit2.Enabled = True
        'submit1.Enabled = True
   End If

    If telecomx = 29 Then
        telecomselect.Caption = "(Unselect All)"
    Else
        telecomselect.Caption = "(Select All)"
    End If
    
    AllBrowse.Caption = "(" & accessx + ManageX + Securityx + Networxx + specialx + telecomx + wirelessx & " selected)"
    
    If accessx + ManageX + Securityx + Networxx + specialx + telecomx + wirelessx = 0 Then
        submit2.Enabled = False
        'submit1.Enabled = False
    End If
End Sub

Private Sub tollfreededicatedinfo_Click()
Instructions = MsgBox("Toll Free Service (TFS) combines basic and advanced features designed to help customers manage their inbound calls more effectively. TFS includes basic inbound toll free calling, which is supplemented by advanced feature and call routing capabilities, including intelligent call routing and network-based Interactive Voice Response (IVR).", vbInformation, "Toll Free Service Description")
End Sub

Private Sub TollfreeECRCheck_Click()
   
    If TollfreeECRCheck.Value = 0 Then
        If telecomx = 0 Then
            telecombrowse.Caption = "(" & telecomx & " selected)"
        Else
            telecomx = telecomx - 1
            telecombrowse.Caption = "(" & telecomx & " selected)"
        End If
    Else
        telecomx = telecomx + 1
        telecombrowse.Caption = "(" & telecomx & " selected)"
        submit2.Enabled = True
        'submit1.Enabled = True
   End If

    If telecomx = 29 Then
        telecomselect.Caption = "(Unselect All)"
    Else
        telecomselect.Caption = "(Select All)"
    End If
    
    AllBrowse.Caption = "(" & accessx + ManageX + Securityx + Networxx + specialx + telecomx + wirelessx & " selected)"
    
    If accessx + ManageX + Securityx + Networxx + specialx + telecomx + wirelessx = 0 Then
        submit2.Enabled = False
        'submit1.Enabled = False
    End If
End Sub

Private Sub tollfreeecrinfo_Click()
Instructions = MsgBox("Toll Free Service (TFS) combines basic and advanced features designed to help customers manage their inbound calls more effectively. TFS includes basic inbound toll free calling, which is supplemented by advanced feature and call routing capabilities, including intelligent call routing and network-based Interactive Voice Response (IVR).", vbInformation, "Toll Free Service Description")

End Sub

Private Sub TollFreeSwitchedCheck_Click()
   
    If TollFreeSwitchedCheck.Value = 0 Then
        If telecomx = 0 Then
            telecombrowse.Caption = "(" & telecomx & " selected)"
        Else
            telecomx = telecomx - 1
            telecombrowse.Caption = "(" & telecomx & " selected)"
        End If
    Else
        telecomx = telecomx + 1
        telecombrowse.Caption = "(" & telecomx & " selected)"
        submit2.Enabled = True
        'submit1.Enabled = True
   End If

    If telecomx = 29 Then
        telecomselect.Caption = "(Unselect All)"
    Else
        telecomselect.Caption = "(Select All)"
    End If
    
    AllBrowse.Caption = "(" & accessx + ManageX + Securityx + Networxx + specialx + telecomx + wirelessx & " selected)"
    
    If accessx + ManageX + Securityx + Networxx + specialx + telecomx + wirelessx = 0 Then
        submit2.Enabled = False
        'submit1.Enabled = False
    End If
End Sub

Private Sub TollFreeSwitchedinfo_Click()
Instructions = MsgBox("Toll Free Service (TFS) combines basic and advanced features designed to help customers manage their inbound calls more effectively. TFS includes basic inbound toll free calling, which is supplemented by advanced feature and call routing capabilities, including intelligent call routing and network-based Interactive Voice Response (IVR).", vbInformation, "Toll Free Service Description")

End Sub

Private Sub VideoCheck_Click()

    If VideoCheck.Value = 0 Then
        If ManageX = 0 Then
            managebrowse.Caption = "(" & ManageX & " selected)"
        Else
            ManageX = ManageX - 1
            managebrowse.Caption = "(" & ManageX & " selected)"
        End If
    Else
        ManageX = ManageX + 1
        managebrowse.Caption = "(" & ManageX & " selected)"
        submit2.Enabled = True
        'submit1.Enabled = True
   End If
    
    If ManageX = 12 Then
        manageselect.Caption = "(Unselect All)"
    Else
        manageselect.Caption = "(Select All)"
    End If
    
    AllBrowse.Caption = "(" & accessx + ManageX + Securityx + Networxx + specialx + telecomx + wirelessx & " selected)"
    
    If accessx + ManageX + Securityx + Networxx + specialx + telecomx + wirelessx = 0 Then
        submit2.Enabled = False
        'submit1.Enabled = False
    End If
End Sub

Private Sub videoinfo_Click()
Instructions = MsgBox("Video Teleconferencing Services (VTS) enable participants in multiple geographically dispersed locations to participate in a video meeting.  VTS enables participation in virtual meetings, distance learning, remote testimony, and other collaborative applications. Additionally, VTS has evolved into a critical and growing real-time communications environment for federal customers.", vbInformation, "Video Teleconferencing Services (VTS)")
End Sub

Private Sub VoiceDedicatedCheck_Click()
   
    If VoiceDedicatedCheck.Value = 0 Then
        If telecomx = 0 Then
            telecombrowse.Caption = "(" & telecomx & " selected)"
        Else
            telecomx = telecomx - 1
            telecombrowse.Caption = "(" & telecomx & " selected)"
        End If
    Else
        telecomx = telecomx + 1
        telecombrowse.Caption = "(" & telecomx & " selected)"
        submit2.Enabled = True
        'submit1.Enabled = True
   End If

    If telecomx = 29 Then
        telecomselect.Caption = "(Unselect All)"
    Else
        telecomselect.Caption = "(Select All)"
    End If
    
    AllBrowse.Caption = "(" & accessx + ManageX + Securityx + Networxx + specialx + telecomx + wirelessx & " selected)"
    
    If accessx + ManageX + Securityx + Networxx + specialx + telecomx + wirelessx = 0 Then
        submit2.Enabled = False
        'submit1.Enabled = False
    End If
End Sub

Private Sub VoiceDedicatedInfo_Click()
Instructions = MsgBox("Verizon Business Voice Service (VS) provides an essential service that supports customer communications, ranging from basic day-to-day exchanges to critical emergency situations.", vbInformation, "Voice Service Description")

End Sub

Private Sub VoiceSwitchedCheck_Click()
   
    If VoiceSwitchedCheck.Value = 0 Then
        If telecomx = 0 Then
            telecombrowse.Caption = "(" & telecomx & " selected)"
        Else
            telecomx = telecomx - 1
            telecombrowse.Caption = "(" & telecomx & " selected)"
        End If
    Else
        telecomx = telecomx + 1
        telecombrowse.Caption = "(" & telecomx & " selected)"
        submit2.Enabled = True
        'submit1.Enabled = True
   End If

    If telecomx = 29 Then
        telecomselect.Caption = "(Unselect All)"
    Else
        telecomselect.Caption = "(Select All)"
    End If
    
    AllBrowse.Caption = "(" & accessx + ManageX + Securityx + Networxx + specialx + telecomx + wirelessx & " selected)"
    
    If accessx + ManageX + Securityx + Networxx + specialx + telecomx + wirelessx = 0 Then
        submit2.Enabled = False
        'submit1.Enabled = False
    End If
End Sub

Private Sub VoiceSwitchedinfo_Click()
Instructions = MsgBox("Verizon Business Voice Service (VS) provides an essential service that supports customer communications, ranging from basic day-to-day exchanges to critical emergency situations.", vbInformation, "Voice Service Description")

End Sub

Private Sub VOIPTransportCheck_Click()
   
    If VOIPTransportCheck.Value = 0 Then
        If telecomx = 0 Then
            telecombrowse.Caption = "(" & telecomx & " selected)"
        Else
            telecomx = telecomx - 1
            telecombrowse.Caption = "(" & telecomx & " selected)"
        End If
    Else
        telecomx = telecomx + 1
        telecombrowse.Caption = "(" & telecomx & " selected)"
        submit2.Enabled = True
        'submit1.Enabled = True
   End If

    If telecomx = 29 Then
        telecomselect.Caption = "(Unselect All)"
    Else
        telecomselect.Caption = "(Select All)"
    End If
    
    AllBrowse.Caption = "(" & accessx + ManageX + Securityx + Networxx + specialx + telecomx + wirelessx & " selected)"
    
    If accessx + ManageX + Securityx + Networxx + specialx + telecomx + wirelessx = 0 Then
        submit2.Enabled = False
        'submit1.Enabled = False
    End If
End Sub

Private Sub VOIPtransportinfo_Click()
Instructions = MsgBox("Voice Over IP Transport Services (VOIPTS) is an enterprise solution that consolidates a subscriber|fffd|s voice and data traffic over a single data network. It enables customers to manage their network more efficiently, while reducing costs and taking advantage of new, leading-edge, multimedia business capabilities.", vbInformation, "Voice Over Ip Transport Service Description")

End Sub

Private Sub VulnerabilityCheck_Click()
   
    If VulnerabilityCheck.Value = 0 Then
        If Securityx = 0 Then
            securitybrowse.Caption = "(" & Securityx & " selected)"
        Else
            Securityx = Securityx - 1
            securitybrowse.Caption = "(" & Securityx & " selected)"
        End If
    Else
        Securityx = Securityx + 1
        securitybrowse.Caption = "(" & Securityx & " selected)"
        submit2.Enabled = True
        'submit1.Enabled = True
   End If

    If Securityx = 11 Then
        securityselect.Caption = "(Unselect All)"
    Else
        securityselect.Caption = "(Select All)"
    End If
    
    AllBrowse.Caption = "(" & accessx + ManageX + Securityx + Networxx + specialx + telecomx + wirelessx & " selected)"
    
    If accessx + ManageX + Securityx + Networxx + specialx + telecomx + wirelessx = 0 Then
        submit2.Enabled = False
        'submit1.Enabled = False
    End If
End Sub

Private Sub vulnerabilityinfo_Click()
Instructions = MsgBox("Vulnerability Scanning Service (VSS) helps to guard customer systems and network infrastructure against emerging threats. While VSS searches for security holes, flaws, and exploits on agency systems, networks and applications, it tests for vulnerabilities by comparing scanned information to data contained in a database, which is updated as new threats are discovered. VSS can simulate a real intrusion in a controlled environment to gauge a network|fffd|s susceptibility to attacks. The service performs external scans by remotely probing a network for vulnerabilities that generally come from the outside, and internal scans that detect flaws originating from inside the network.", vbInformation, "Vulnerability Scanning Service Description")

End Sub

Private Sub WebCheck_Click()

    If WebCheck.Value = 0 Then
        If ManageX = 0 Then
            managebrowse.Caption = "(" & ManageX & " selected)"
        Else
            ManageX = ManageX - 1
            managebrowse.Caption = "(" & ManageX & " selected)"
        End If
    Else
        ManageX = ManageX + 1
        managebrowse.Caption = "(" & ManageX & " selected)"
        submit2.Enabled = True
        'submit1.Enabled = True
   End If
   
   If ManageX = 12 Then
        manageselect.Caption = "(Unselect All)"
    Else
        manageselect.Caption = "(Select All)"
    End If
    
    AllBrowse.Caption = "(" & accessx + ManageX + Securityx + Networxx + specialx + telecomx + wirelessx & " selected)"
    
    If accessx + ManageX + Securityx + Networxx + specialx + telecomx + wirelessx = 0 Then
        submit2.Enabled = False
        'submit1.Enabled = False
    End If
    
End Sub

Private Sub webinfo_Click()
Instructions = MsgBox("Web Conferencing Service (WCS) enable participants to share information, documents, or applications interactively over the Internet regardless of location.  WCS improves productivity and communication and saves travel costs by providing scheduled or ad hoc Web conferencing.", vbInformation, "Web Conferencing Services (WCS)")
End Sub

Private Sub wirelessselect_Click()

    If wirelessselect.Caption = "(Select All)" And Sheets("Off-Line Form").ComboBox1.Text = "Networx Universal" Then
        
        CellularCheck.Value = 1
        MultimodePublicCheck.Value = 1
        MultimodePrivateCheck.Value = 1
        Pagingcheck.Value = 1
                
        wirelessselect.Caption = "(Unselect All)"
        
    ElseIf wirelessselect.Caption = "(Unselect All)" And Sheets("Off-Line Form").ComboBox1.Text = "Networx Universal" Then
              
        CellularCheck.Value = 0
        MultimodePublicCheck.Value = 0
        MultimodePrivateCheck.Value = 0
        Pagingcheck.Value = 0
        
        wirelessselect.Caption = "(Select All)"
    
    ElseIf wirelessselect.Caption = "(Select All)" And Sheets("Off-Line Form").ComboBox1.Text = "Networx Enterprise" Then
        
        CellularCheck.Value = 0
        MultimodePublicCheck.Value = 1
        MultimodePrivateCheck.Value = 1
        Pagingcheck.Value = 1
                
        wirelessselect.Caption = "(Unselect All)"
    ElseIf wirelessselect.Caption = "(Unselect All)" And Sheets("Off-Line Form").ComboBox1.Text = "Networx Enterprise" Then
              
        CellularCheck.Value = 0
        MultimodePublicCheck.Value = 0
        MultimodePrivateCheck.Value = 0
        Pagingcheck.Value = 0
        
        wirelessselect.Caption = "(Select All)"
    Else
    End If
End Sub
Attribute VB_Name = "Sheet4"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Control = "nextb, 1, 0, MSForms, CommandButton"
Attribute VB_Control = "Submit, 2, 1, MSForms, CommandButton"
Attribute VB_Control = "Returnahc, 3, 2, MSForms, CommandButton"
Attribute VB_Control = "Label1, 4, 3, MSForms, Label"
Private Sub Label1_Click()
    Instruction = MsgBox("If each user have different AHCs, start listing the first user's AHCs in column 'C'(1 AHC on each line). Then click next to list the AHCs of the subsequent users." _
    & Chr(13) & Chr(10) & Chr(13) & Chr(10) & "- Add 28 character AHC(s) for each user and click next" _
    & Chr(13) & Chr(10) & "- A column will be created for each user as you add AHC(s)." _
    & Chr(13) & Chr(10) & "- If AHC is a parent and you wish to add the children also, input 'Y'" _
    & Chr(13) & Chr(10) & "- The Status column shows the progress of each user's AHCs" _
    & Chr(13) & Chr(10) & "- Data should only be entered in columns C and D.  DO NOT change the text in any other columns!", vbInformation, "Instructions")
End Sub

Private Sub nextb_Click()
    Instruction = MsgBox("Please be patient, the form is processing your request.  Depending on the amount of Users vs AHCs this can take a few minutes.", vbInformation, "Status")
Application.ScreenUpdating = False
    User = 4
    x = 4
    y = 5
    errorahc = 0
      
        newrange = Sheets("Off-Line Form").Users.Text
        
        Do While Sheets("Different AHCs").Range("C" & x).Value <> ""
            If Len(Sheets("Different AHCs").Range("C" & x).Value) <> 28 Or Sheets("Different AHCs").Range("C" & x).Value = "" Then
                errorahc = 1
            End If
        
            If UCase(Sheets("Different AHCs").Range("D" & x).Value) <> "Y" Then
                Sheets("Different AHCs").Range("D" & x).Value = "N"
            End If
            
            y = 4
        
            Do While Sheets("Same AHCs").Range("C" & y).Value <> ""
                If Sheets("Same AHCs").Range("C" & x).Value = Sheets("Same AHCs").Range("C" & y).Value And y <> x Then
                    Sheets("Same AHCs").Range("C" & y & ":D" & y).Delete Shift:=xlUp
                Else
                    y = y + 1
                End If
            Loop
            
            x = x + 1
        Loop
        
        y = 3
        If errorahc = 1 Then
            Instruction = MsgBox("Enter a full 28 Character AHC for column C", vbCritical, "Incorrect AHC")
        Else
        
'        Sheets("Additional AHC's").Columns("C:C").Insert Shift:=xlToRight
'        Sheets("Additional AHC's").Columns("C:C").Insert Shift:=xlToRight
'
'        Sheets("Additional AHC's").Cells(1, y).Value = Sheets("User Profile").Range("G" & x).Value
'
'        Sheets("Additional AHC's").Visible = True
'
'        Sheets("Additional AHC's").Select
'        ActiveSheet.Range("A2:B3").Copy
'        ActiveSheet.Range("C2").Select
'        ActiveSheet.Paste
'
'        Sheets("Additional AHC's").Visible = False
'
'        Sheets("Additional AHC's").Columns("C:C").ColumnWidth = 35
'        Sheets("Additional AHC's").Columns("D:D").ColumnWidth = 8.5
'
'
'        Sheets("Additional AHC's").Range("C1:D1").MergeCells = True
        

        
'        x = 4
        
'        Do While Sheets("Different AHCs").Range("D" & x).Value <> ""
'
'            x = x + 1
'        Loop
'
'        Sheets("Additional AHC's").Visible = True
        Sheets("Different AHCs").Select
        
'        Sheets("Additional AHC's").Range("C4:D" & x).Interior.ColorIndex = 36
        
        ActiveSheet.Range("C4:D" & x - 1).Select
        Selection.Borders(xlDiagonalDown).LineStyle = xlNone
        Selection.Borders(xlDiagonalUp).LineStyle = xlNone
        With Selection.Borders(xlEdgeLeft)
            .LineStyle = xlContinuous
            .Weight = xlThin
            .ColorIndex = xlAutomatic
        End With
        With Selection.Borders(xlEdgeTop)
            .LineStyle = xlContinuous
            .Weight = xlThin
            .ColorIndex = xlAutomatic
        End With
        With Selection.Borders(xlEdgeBottom)
            .LineStyle = xlContinuous
            .Weight = xlThin
            .ColorIndex = xlAutomatic
        End With
        With Selection.Borders(xlEdgeRight)
            .LineStyle = xlContinuous
            .Weight = xlThin
            .ColorIndex = xlAutomatic
        End With
        
        On Error Resume Next
        With Selection.Borders(xlInsideVertical)
            .LineStyle = xlContinuous
            .Weight = xlThin
            .ColorIndex = xlAutomatic
        End With
        With Selection.Borders(xlInsideHorizontal)
            .LineStyle = xlContinuous
            .Weight = xlThin
            .ColorIndex = xlAutomatic
        End With
'
'        Sheets("Additional AHC's").Visible = False
        
        newcount = x - 4
            
        x = 4
        
        Do While Sheets("Different AHCs").Range("B" & x).Value <> "AHC(s) Pending"
            x = x + 1
        Loop
        Sheets("Different AHCs").Range("A" & x).Interior.ColorIndex = xlNone
        Sheets("Different AHCs").Range("B" & x).Interior.ColorIndex = 35
        Sheets("Different AHCs").Range("C1").Interior.ColorIndex = xlNone
        Sheets("Summary").Range("D" & x - 1).Value = newcount
        Sheets("Different AHCs").Range("B" & x).Value = "AHC(s) Added!"
'        Sheets("Different AHCs").Range("B" & x).Font.ColorIndex = 5
        
        x = x + 1
'        user = user + 1
        If Sheets("Different AHCs").Range("B" & x).Value <> "" Then
            Sheets("Different AHCs").Range("A" & x).Interior.ColorIndex = 36
            Sheets("Different AHCs").Range("B" & x).Interior.ColorIndex = 3
            Sheets("Different AHCs").Range("B" & x).Value = "AHC(s) Pending"
            Sheets("Different AHCs").Range("A" & x & ":B" & x).Font.ColorIndex = 0
            
            Sheets("Different AHCs").Columns("C:C").Insert Shift:=xlToRight
                Sheets("Different AHCs").Columns("C:C").Insert Shift:=xlToRight
                Sheets("Different AHCs").Columns("C:C").NumberFormat = "@"
                Sheets("Different AHCs").Cells(1, y).Value = UCase(Sheets("User Profile").Range("G" & x).Value)
                
        '        Sheets("Same AHCs").Visible = True
                
                Sheets("Different AHCs").Select
                ActiveSheet.Range("E2:F3").Copy
                ActiveSheet.Range("C2").Select
                ActiveSheet.Paste
        
        '        Sheets("Additional AHC's").Visible = False
                
                Sheets("Different AHCs").Columns("C:C").ColumnWidth = 35
                Sheets("Different AHCs").Columns("D:D").ColumnWidth = 8.5
                
                
                Sheets("Different AHCs").Range("C1:D1").MergeCells = True
                Sheets("Different AHCs").Range("C1").Interior.ColorIndex = 36
                 Sheets("Different AHCs").Range("C2:D2").Interior.ColorIndex = 37
                  Sheets("Different AHCs").Range("C3:D3").Interior.ColorIndex = 15
            Sheets("Different AHCs").Range("C4:D" & x).Interior.ColorIndex = 0
            Sheets("Different AHCs").Range("C4").Value = "INPUT AHC(s) starting here"
            Sheets("Different AHCs").Range("C4").Font.ColorIndex = 5
                    Sheets("Different AHCs").Range("D4").Value = "Y or N"

        Sheets("Different AHCs").Range("D4").Font.ColorIndex = 5
            Sheets("Different AHCs").Range("C4:D65535").Interior.ColorIndex = xlNone
            
            Sheets("Different AHCs").Range("C4").Select
            
        Else
            nextb.Enabled = False
            Submit.Enabled = True
            
            Instructions = MsgBox("AHC(s) for all user(s) have been added.", vbInformation, "Notification")
        End If
'    End If
    
'    If Sheets("Different AHCs").Range("D4").Value <> 28 Then
'        'Instructions Box
'        Instructions = MsgBox("Please Enter a valid 28 character AHC at the highlighted location", vbInformation, "Notification")
'
'        Sheets("Different AHCs").Range("D4").Interior.ColorIndex = 3
'
'    End If
        Application.ScreenUpdating = True
        
        End If
End Sub


Private Sub Returnahc_Click()
    Sheets("Off-Line Form").Visible = True
    Sheets("Different AHCs").Visible = False
End Sub

Private Sub Submit_Click()
Application.ScreenUpdating = False
    Instruction = MsgBox("Are the AHC's correct?", vbYesNo, "Confirmation")
        
    If Instruction = 6 Then
    
    newrange = Sheets("Off-Line Form").Users.Text + 3
    On Error Resume Next
  Sheets("Additional AHC's").Visible = True
    Sheets("Different AHCs").Select
    ActiveSheet.Columns("C:IV").Select
    Selection.Copy
    Sheets("Additional AHC's").Select
    ActiveSheet.Range("C1").Select
    ActiveSheet.Paste
    ActiveSheet.Columns("A:B").EntireColumn.Hidden = True
'    ActiveSheet.Shapes("CommandButton2").Select
'    Selection.Delete
'    ActiveSheet.Shapes("CommandButton1").Select
'    Selection.Delete
    

        
    Sheets("Additional AHC's").Visible = False
    
    Sheets("Off-Line Form").Visible = True
    Sheets("Different AHCs").Visible = False
    
    Sheets("Off-Line Form").TFMT.Enabled = True
    Sheets("Off-Line Form").TFMTinfo.Enabled = True
    
    Sheets("Off-Line Form").ONM.Enabled = True
    Sheets("Off-Line Form").ONMinfo.Enabled = True
    
    Sheets("Off-Line Form").GMT.Enabled = True
    Sheets("Off-Line Form").GMTinfo.Enabled = True
    
    Sheets("Off-Line Form").RSMT.Enabled = True
    Sheets("Off-Line Form").RSMTinfo.Enabled = True
    
    Sheets("Off-Line Form").SMT.Enabled = True
    Sheets("Off-Line Form").SMTinfo.Enabled = True
    
    Sheets("Off-Line Form").WHA.Enabled = True
    Sheets("Off-Line Form").WHAinfo.Enabled = True
    
    Sheets("Off-Line Form").CCMT.Enabled = True
    Sheets("Off-Line Form").CCMTinfo.Enabled = True
    
    Sheets("Off-Line Form").VOIPMT.Enabled = True
    Sheets("Off-Line Form").VOIPMTinfo.Enabled = True
    
    Sheets("Off-Line Form").CSTT.Enabled = True
    Sheets("Off-Line Form").CSTTinfo.Enabled = True
    
    Sheets("Off-Line Form").noneapp.Enabled = True
    
    Sheets("Off-Line Form").Additionalconfirm.Enabled = False
    Sheets("Off-Line Form").Select
    Sheets("Summary").Visible = False
    Else
    End If
    Application.ScreenUpdating = True
End Sub
Attribute VB_Name = "Sheet5"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Control = "CommandButton1, 2, 0, MSForms, CommandButton"
Attribute VB_Control = "usertypeinfo, 15, 2, MSForms, Label"
Attribute VB_Control = "Returnkey, 62, 4, MSForms, CommandButton"
Attribute VB_Control = "functionalityinfo, 18, 5, MSForms, Label"
Attribute VB_Control = "Reportlevelinfo, 19, 6, MSForms, Label"
Attribute VB_Control = "SLAinfo, 20, 7, MSForms, Label"
Attribute VB_Control = "Orderinfo, 21, 8, MSForms, Label"
Attribute VB_Control = "Performanceinfo, 22, 9, MSForms, Label"
Attribute VB_Control = "Inventoryinfo, 23, 10, MSForms, Label"
Private Sub CommandButton1_Click()
Application.ScreenUpdating = False
    
    Instruction = MsgBox("Is the entitlements information correct?", vbYesNo, "Confirmation")
    
    If Instruction = 6 Then
    x = 3
    Do While Sheets("Reporting Types").Range("A" & x).Value <> ""
        x = x + 1
    Loop
    newrange = x - 1
    returnvalue = 0
    
    For x = 3 To newrange Step 1
        If Sheets("Reporting Types").Range("C" & x).Value = "" Or _
        Sheets("Reporting Types").Range("D" & x).Value = "" Or _
        Sheets("Reporting Types").Range("E" & x).Value = "" Or _
        Sheets("Reporting Types").Range("F" & x).Value = "" Then
            If x = newrange Then
            Instructions = MsgBox("Complete all highlighted fields on the form before proceeding" & Chr(13) & Chr(10) _
                                & "to the next step of the form.", vbCritical, "Warning - Incomplete Form")
            End If
        
            returnvalue = 1
        ElseIf Sheets("Reporting Types").Range("G" & x).Value <> "Yes" And _
        Sheets("Reporting Types").Range("H" & x).Value <> "Yes" And _
        Sheets("Reporting Types").Range("I" & x).Value <> "Yes" And _
        Sheets("Reporting Types").Range("J" & x).Value <> "Yes" Then
            Instructions = MsgBox("At Least one report needs to be selected for each user" & Chr(13) & Chr(10) _
                                & "to procceed to the Next step of the Off-Line Form.", vbCritical, "Warning - Incomplete Form")
            returnvalue = 1
        Else
        End If
        Matchx = 4
        Do While Sheets("User Profile").Range("G" & Matchx).Value <> ""
            If Sheets("User Profile").Range("G" & Matchx).Value = Sheets("Reporting Types").Range("A" & x).Value Then
                If Sheets("User Profile").Range("N" & Matchx).Value <> "" Then
                    Sheets("Reporting Types").Range("H" & x).Value = "Yes"
                End If
            End If
            Matchx = Matchx + 1
        Loop
        
        If Sheets("Reporting Types").Range("C" & x).Value = "" Then
            Sheets("Reporting Types").Range("C" & x).Interior.ColorIndex = 3
        Else
            Sheets("Reporting Types").Range("C" & x).Interior.ColorIndex = 36
        End If
        
        If Sheets("Reporting Types").Range("D" & x).Value = "" Then
            Sheets("Reporting Types").Range("D" & x).Interior.ColorIndex = 3
        Else
            Sheets("Reporting Types").Range("D" & x).Interior.ColorIndex = 36
        End If
        
        If Sheets("Reporting Types").Range("E" & x).Value = "" Then
            Sheets("Reporting Types").Range("E" & x).Interior.ColorIndex = 3
        Else
            Sheets("Reporting Types").Range("E" & x).Interior.ColorIndex = 36
        End If
        
        If Sheets("Reporting Types").Range("F" & x).Value = "" Then
            Sheets("Reporting Types").Range("F" & x).Interior.ColorIndex = 3
        Else
            Sheets("Reporting Types").Range("F" & x).Interior.ColorIndex = 36
        End If
        
        If Sheets("Reporting Types").Range("G" & x).Value = "" Then
            Sheets("Reporting Types").Range("G" & x).Value = "No"
        Else
            Sheets("Reporting Types").Range("G" & x).Interior.ColorIndex = 36
        End If
        
        If Sheets("Reporting Types").Range("H" & x).Value = "" Then
            Sheets("Reporting Types").Range("H" & x).Value = "No"
        Else
            Sheets("Reporting Types").Range("H" & x).Interior.ColorIndex = 36
        End If
        
        If Sheets("Reporting Types").Range("I" & x).Value = "" Then
            Sheets("Reporting Types").Range("I" & x).Value = "No"
        Else
            Sheets("Reporting Types").Range("I" & x).Interior.ColorIndex = 36
        End If
        
        If Sheets("Reporting Types").Range("J" & x).Value = "" Then
            Sheets("Reporting Types").Range("J" & x).Value = "No"
        Else
            Sheets("Reporting Types").Range("J" & x).Interior.ColorIndex = 36
        End If
    Next
        
    If returnvalue = 0 Then
        On Error Resume Next
        If Sheets("Off-Line Form").ComboBox1.Text = "Networx Universal" Then
        Sheets("Products Listing").ConvergedCheck.Value = 0
        Sheets("Products Listing").ConvergedCheck.Visible = True
        Sheets("Products Listing").ConvergedInfo.Visible = True
        
        Sheets("Products Listing").VulnerabilityCheck.Value = 0
        Sheets("Products Listing").VulnerabilityCheck.Visible = True
        Sheets("Products Listing").vulnerabilityinfo.Visible = True
        
        Sheets("Products Listing").CustomerContactCheck.Value = 0
        Sheets("Products Listing").CustomerContactCheck.Visible = True
        Sheets("Products Listing").customercontactinfo.Visible = True
        
        Sheets("Products Listing").DedicatedCheck.Value = 0
        Sheets("Products Listing").DedicatedCheck.Visible = True
        Sheets("Products Listing").dedicatedinfo.Visible = True
        
        Sheets("Products Listing").Storagecheck.Value = 0
        Sheets("Products Listing").Storagecheck.Visible = True
        Sheets("Products Listing").storageinfo.Visible = True
        
        Sheets("Products Listing").ATMSCheck.Value = 0
        Sheets("Products Listing").ATMSCheck.Visible = True
        Sheets("Products Listing").ATMSinfo.Visible = True
        
        Sheets("Products Listing").FrameCheck.Value = 0
        Sheets("Products Listing").FrameCheck.Visible = True
        Sheets("Products Listing").frameinfo.Visible = True
        
        Sheets("Products Listing").OpticalCheck.Value = 0
        Sheets("Products Listing").OpticalCheck.Visible = True
        Sheets("Products Listing").opticalinfo.Visible = True
        
        Sheets("Products Listing").SynchronousCheck.Value = 0
        Sheets("Products Listing").SynchronousCheck.Visible = True
        Sheets("Products Listing").synchronousinfo.Visible = True
               
        Sheets("Products Listing").opticaltitle.Visible = True
        
        Sheets("Products Listing").CellularCheck.Value = 0
        Sheets("Products Listing").CellularCheck.Visible = True
        Sheets("Products Listing").cellularinfo.Visible = True
        
        Sheets("Products Listing").FixedCheck.Value = 0
        Sheets("Products Listing").FixedCheck.Visible = True
        Sheets("Products Listing").fixedinfo.Visible = True
        
        Sheets("Products Listing").DHSMNCheck.Value = 0
        Sheets("Products Listing").DHSMNCheck.Visible = True
        Sheets("Products Listing").DHSMNCheck.Visible = True
        
        Sheets("Products Listing").ECScheck.Value = 0
        Sheets("Products Listing").ECScheck.Visible = True
        Sheets("Products Listing").ECScheck.Visible = True
        
        Sheets("Products Listing").MANcheck.Value = 0
        Sheets("Products Listing").MANcheck.Visible = True
        Sheets("Products Listing").MANcheck.Visible = True
        
    ElseIf Sheets("Off-Line Form").ComboBox1.Text = "Networx Enterprise" Then
        Sheets("Products Listing").ConvergedCheck.Value = 0
        Sheets("Products Listing").ConvergedCheck.Visible = False
        Sheets("Products Listing").ConvergedInfo.Visible = False
        
        Sheets("Products Listing").VulnerabilityCheck.Value = 0
        Sheets("Products Listing").VulnerabilityCheck.Visible = False
        Sheets("Products Listing").vulnerabilityinfo.Visible = False
        
        Sheets("Products Listing").CustomerContactCheck.Value = 0
        Sheets("Products Listing").CustomerContactCheck.Visible = False
        Sheets("Products Listing").customercontactinfo.Visible = False
        
        Sheets("Products Listing").DedicatedCheck.Value = 0
        Sheets("Products Listing").DedicatedCheck.Visible = False
        Sheets("Products Listing").dedicatedinfo.Visible = False
        
        Sheets("Products Listing").Storagecheck.Value = 0
        Sheets("Products Listing").Storagecheck.Visible = False
        Sheets("Products Listing").storageinfo.Visible = False
        
        Sheets("Products Listing").ATMSCheck.Value = 0
        Sheets("Products Listing").ATMSCheck.Visible = False
        Sheets("Products Listing").ATMSinfo.Visible = False
        
        Sheets("Products Listing").FrameCheck.Value = 0
        Sheets("Products Listing").FrameCheck.Visible = False
        Sheets("Products Listing").frameinfo.Visible = False
        
        Sheets("Products Listing").OpticalCheck.Value = 0
        Sheets("Products Listing").OpticalCheck.Visible = False
        Sheets("Products Listing").opticalinfo.Visible = False
        
        Sheets("Products Listing").SynchronousCheck.Value = 0
        Sheets("Products Listing").SynchronousCheck.Visible = False
        Sheets("Products Listing").synchronousinfo.Visible = False
               
        Sheets("Products Listing").opticaltitle.Visible = False
        
        Sheets("Products Listing").CellularCheck.Value = 0
        Sheets("Products Listing").CellularCheck.Visible = False
        Sheets("Products Listing").cellularinfo.Visible = False
        
        Sheets("Products Listing").FixedCheck.Value = 0
        Sheets("Products Listing").FixedCheck.Visible = False
        Sheets("Products Listing").fixedinfo.Visible = False
        
        Sheets("Products Listing").DHSMNCheck.Value = 0
        Sheets("Products Listing").DHSMNCheck.Visible = False
        Sheets("Products Listing").DHSMNCheck.Visible = False
        
        Sheets("Products Listing").ECScheck.Value = 0
        Sheets("Products Listing").ECScheck.Visible = False
        Sheets("Products Listing").ECScheck.Visible = False
        
        Sheets("Products Listing").MANcheck.Value = 0
        Sheets("Products Listing").MANcheck.Visible = False
        Sheets("Products Listing").MANcheck.Visible = False
    Else
    End If
        Sheets("Reporting Types").Range("A1").Select
        ActiveWindow.SmallScroll Down:=-65536
        ActiveWindow.SmallScroll Up:=65536
        Sheets("Products Listing").Visible = True
        
        
        Sheets("Reporting Types").Visible = False
        Sheets("Products Listing").Range("A1").Select
        ActiveWindow.SmallScroll Down:=-65536
        Sheets("Products Listing").allcheck.Visible = False
        Sheets("Products Listing").submit1.Visible = True
        
        
    End If
'    Sheets("Products Listing").Range("A1").Select
    
    Else
    End If
'    Sheets("Reporting Types").CommandButton1.Visible = False
    Application.ScreenUpdating = True
    If Instruction = 6 And returnvalue = 0 Then
    Instructions = MsgBox("Select only those products or services for which the user is authorized.  If you select a product or service for which the user is not authorized, the request will remain in a Pending state until authorization is obtained.  After you have selected your products and services, scroll to the bottom of the form and click Submit.", vbInformation, "Select Products Instructions")
    End If
    
End Sub

Private Sub functionalityinfo_Click()
        Instructions = MsgBox("Select Default for access to the Metrix Reporting tab, from which basic, pre-defined reports and links to Additional Reporting Services can be selected." & Chr(13) & Chr(10) _
                            & Chr(13) & Chr(10) _
                            & "Select Ad Hoc for access to the Metrix Reporting tab, from which basic, pre-defined reports and links to Additional Reporting Services can be selected, in addition to Ad hoc reporting from which you can run customized queries and reports.", vbInformation, "Functionality Definition")
End Sub

Private Sub Inventoryinfo_Click()
        Instructions = MsgBox("Select Yes for access to the Operational Report directory on the Metrix Reporting home page.", vbInformation, "Inventory Reports Definition")
End Sub

Private Sub Orderinfo_Click()
        Instructions = MsgBox("Select Yes for access to the Order and Status Reprt directory and the Product Report directory on the Metrix Reporting home page", vbInformation, "Order Reports Definition")
End Sub

Private Sub Performanceinfo_Click()
        Instructions = MsgBox("Select Yes for access to the Performance Report directory on the Metrix Reporting home page.", vbInformation, "Performance Reports Definition")
End Sub

Private Sub Reportlevelinfo_Click()
        Instructions = MsgBox("Select AGENCY for access to agency-level reports." & Chr(13) & Chr(10) _
                            & Chr(13) & Chr(10) _
                            & "Select BUREAU for bureau-level reports" & Chr(13) & Chr(10) _
                            & Chr(13) & Chr(10) _
                            & "Select AGENCYBUREAU for access to agency and bureau-level reports.", vbInformation, "Report Level Definition")
End Sub

Private Sub Returnkey_Click()
    Application.ScreenUpdating = False
    Sheets("Off-Line Form").Visible = True
    Sheets("Summary").Visible = False
    Sheets("User Profile").Visible = False
    Sheets("Reporting Types").Visible = False
    Sheets("Additional AHC's").Visible = False
    Application.ScreenUpdating = True
End Sub

Private Sub SLAinfo_Click()
        Instructions = MsgBox("Select Yes for access to the Tools and Tickets Reproting directory on the Metrix Reporting home page", vbInformation, "SLA Reports Definition")
End Sub

Private Sub usertypeinfo_Click()
        Instructions = MsgBox("Select End User for access to the Metrix Reporting tab, from which basic, pre-defined reports and links to Additional Reporting Services can be selected." & Chr(13) & Chr(10) & Chr(13) & Chr(10) _
                            & "Select GSA User for Access to all directores and Reporting Services" & Chr(13) & Chr(10) _
                            & "** - Authorization is required from GSA to receive access as a GSA User", vbInformation, "User Type Definition")
End Sub
Attribute VB_Name = "Sheet6"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Sheet7"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Control = "CommandButton1, 9, 8, MSForms, CommandButton"
Private Sub CCMTinfo_Click()
Instructions = MsgBox("Manages customer contacts across a variety of communication media (telephony, chat, e-mail, &" & Chr(13) & Chr(10) & _
                            "fax).  MSCG-G reporting provides the routing functions and also the historical record of interactions.", vbInformation, "Contact Center Management Tool Description")

End Sub

Private Sub CommandButton1_Click()
Application.ScreenUpdating = False
errorapp = 0
    newrange = Sheets("Off-Line Form").Users.Text + 3
    For x = 4 To newrange Step 1
        
        If Sheets("Off-Line Form").TFMT.Value = True Then
            If Sheets("Additional Applications").Range("B" & x - 1).Value = "" Then
                errorapp = errorapp + 1
            End If
        End If
        
        If Sheets("Off-Line Form").ONM.Value = True Then
            If Sheets("Additional Applications").Range("C" & x - 1).Value = "" Then
                errorapp = errorapp + 1
            End If
        End If
        
        If Sheets("Off-Line Form").GMT.Value = True Then
            If Sheets("Additional Applications").Range("D" & x - 1).Value = "" Then
                errorapp = errorapp + 1
            End If
        End If
        
        If Sheets("Off-Line Form").SMT.Value = True Then
            If Sheets("Additional Applications").Range("E" & x - 1).Value = "" Then
                errorapp = errorapp + 1
            End If
        End If
        
        If Sheets("Off-Line Form").WHA.Value = True Then
            If Sheets("Additional Applications").Range("F" & x - 1).Value = "" Then
                errorapp = errorapp + 1
            End If
        End If
        
        If Sheets("Off-Line Form").CCMT.Value = True Then
            If Sheets("Additional Applications").Range("G" & x - 1).Value = "" Then
                errorapp = errorapp + 1
            End If
        End If
        
        If Sheets("Off-Line Form").VOIPMT.Value = True Then
            If Sheets("Additional Applications").Range("H" & x - 1).Value = "" Then
                errorapp = errorapp + 1
            End If
        End If
        
        If Sheets("Off-Line Form").CSTT.Value = True Then
            If Sheets("Additional Applications").Range("I" & x - 1).Value = "" Then
                errorapp = errorapp + 1
            End If
        End If
        
        
        If Sheets("Off-Line Form").RSMT.Value = True Then
            If Sheets("Additional Applications").Range("J" & x - 1).Value = "" Then
                errorapp = errorapp + 1
            End If
        End If
    Next
    limitx = 0
        If Sheets("Off-Line Form").TFMT.Value = True Then
            limitx = limitx + 1
        End If
        
        If Sheets("Off-Line Form").ONM.Value = True Then
            limitx = limitx + 1
        End If
        
        If Sheets("Off-Line Form").GMT.Value = True Then
            limitx = limitx + 1
        End If
        
        If Sheets("Off-Line Form").SMT.Value = True Then
            limitx = limitx + 1
        End If
        
        If Sheets("Off-Line Form").WHA.Value = True Then
            limitx = limitx + 1
        End If
        
        If Sheets("Off-Line Form").CCMT.Value = True Then
            limitx = limitx + 1
        End If
        
        If Sheets("Off-Line Form").VOIPMT.Value = True Then
            limitx = limitx + 1
        End If
        
        If Sheets("Off-Line Form").CSTT.Value = True Then
            limitx = limitx + 1
        End If
                
        If Sheets("Off-Line Form").RSMT.Value = True Then
            limitx = limitx + 1
        End If
    
    limitx = limitx * Sheets("Off-Line Form").Users.Text
    
    If errorapp = 0 Then
        Instruction = MsgBox("Confirm the information is correct before proceeding!", vbYesNo, "Confirmation")
    ElseIf errorapp > 0 And errorapp <> limitx Then
        Instruction = MsgBox("Confirm that only selected users will be entitled to the additional applications.", vbYesNo, "Confirmation")
    Else
        Instruction = MsgBox("No users were selected to receive entitlements to the additional applications.  Confirm that the information is correct!", vbYesNo, "Confirmation")
    End If
    If Instruction = 6 Then
    
    
    newname = ""
    ReDim Addapp(8)
    
    For x = 4 To newrange Step 1
        num = 0
        
        If Sheets("Additional Applications").Range("B" & x - 1).Value <> "" Then
            Addapp(num) = "Toll Free Monitoring Tool(" & Sheets("Additional Applications").Range("B" & x - 1).Value & ")"
            num = num + 1
        End If
        
        If Sheets("Additional Applications").Range("C" & x - 1).Value <> "" Then
            Addapp(num) = "Calling Card Monitoring Tool(" & Sheets("Additional Applications").Range("C" & x - 1).Value & ")"
            num = num + 1
        End If
        
        If Sheets("Additional Applications").Range("D" & x - 1).Value <> "" Then
            Addapp(num) = "Global Monitoring Tools(" & Sheets("Additional Applications").Range("D" & x - 1).Value & ")"
            num = num + 1
        End If
        
        If Sheets("Additional Applications").Range("E" & x - 1).Value <> "" Then
            Addapp(num) = "Security Management Tool(" & Sheets("Additional Applications").Range("E" & x - 1).Value & ")"
            num = num + 1
        End If
        
        If Sheets("Additional Applications").Range("F" & x - 1).Value <> "" Then
            Addapp(num) = "Web Hosting Application(" & Sheets("Additional Applications").Range("F" & x - 1).Value & ")"
            num = num + 1
        End If
        
        If Sheets("Additional Applications").Range("G" & x - 1).Value <> "" Then
            Addapp(num) = "Contact Center Management Tool(" & Sheets("Additional Applications").Range("G" & x - 1).Value & ")"
            num = num + 1
        End If
        
        If Sheets("Additional Applications").Range("H" & x - 1).Value <> "" Then
            Addapp(num) = "Voice Over IP Management Tool(" & Sheets("Additional Applications").Range("H" & x - 1).Value & ")"
            num = num + 1
        End If
        
        If Sheets("Additional Applications").Range("I" & x - 1).Value <> "" Then
            Addapp(num) = "Circuit Self Test Tool(" & Sheets("Additional Applications").Range("I" & x - 1).Value & ")"
            num = num + 1
        End If
        
        If Sheets("Additional Applications").Range("J" & x - 1).Value <> "" Then
            Addapp(num) = "Remote Services Management Tool(" & Sheets("Additional Applications").Range("J" & x - 1).Value & ")"
            num = num + 1
        End If
        
        For addingx = 0 To num Step 1
            
            If addingx = 0 Then
                newname = Addapp(addingx)
            Else
                If addingx <> num Then
                    newname = newname & "; " & Addapp(addingx)
                End If
            End If
        Next
        
        If Sheets("Summary").Range("C" & x - 1).Value = "" Then
            Sheets("Summary").Range("C" & x - 1).Value = newname
        ElseIf newname = "; " Then
            Sheets("Summary").Range("C" & x - 1).Value = Sheets("Summary").Range("C" & x - 1).Value
        Else
            Sheets("Summary").Range("C" & x - 1).Value = Sheets("Summary").Range("C" & x - 1).Value & "; " & newname
        End If
            
        newname = ""
        ReDim Addapp(8)
        
    Next
    
    Sheets("Off-Line Form").Visible = True
    Sheets("Additional Applications").Visible = False
    
    Sheets("Off-Line Form").TFMT.Enabled = False
    Sheets("Off-Line Form").TFMTinfo.Enabled = False
    
    Sheets("Off-Line Form").ONM.Enabled = False
    Sheets("Off-Line Form").ONMinfo.Enabled = False
    
    Sheets("Off-Line Form").GMT.Enabled = False
    Sheets("Off-Line Form").GMTinfo.Enabled = False
    
    Sheets("Off-Line Form").RSMT.Enabled = False
    Sheets("Off-Line Form").RSMTinfo.Enabled = False
    
    Sheets("Off-Line Form").SMT.Enabled = False
    Sheets("Off-Line Form").SMTinfo.Enabled = False
    
    Sheets("Off-Line Form").WHA.Enabled = False
    Sheets("Off-Line Form").WHAinfo.Enabled = False
    
    Sheets("Off-Line Form").CCMT.Enabled = False
    Sheets("Off-Line Form").CCMTinfo.Enabled = False
    
    Sheets("Off-Line Form").VOIPMT.Enabled = False
    Sheets("Off-Line Form").VOIPMTinfo.Enabled = False
    
    Sheets("Off-Line Form").CSTT.Enabled = False
    Sheets("Off-Line Form").CSTTinfo.Enabled = False
    
    Sheets("Off-Line Form").Additionalconfirm.Enabled = False
    
    Sheets("Off-Line Form").TextBox1.Enabled = True
    Sheets("Off-Line Form").AAAName.Enabled = True
    Sheets("Off-Line Form").AAAEmail.Enabled = True
    Sheets("Off-Line Form").AAAPhone.Enabled = True
    Sheets("Off-Line Form").AAASubmit.Enabled = True
    Sheets("Off-Line Form").AAAPrint.Enabled = True
    
    Sheets("Off-Line Form").Select
    Else
    End If
    Application.ScreenUpdating = True
End Sub


Private Sub CSTTinfo_Click()
    Instructions = MsgBox("Provides the business with an integrated software solution used to turn up newly" & Chr(13) & Chr(10) & _
                            "installed circuits and resolve customer reported (maintenance) problems.", vbInformation, "Circuit Self Test Tool Description")
End Sub

Private Sub GMTinfo_Click()
 Instructions = MsgBox("IGUS is the reporting system for IP VPN and VGUS is IP VPN Traffic analysis and reporting", vbInformation, "Global Monitoring Tools Description")

End Sub

Private Sub ONMinfo_Click()
    Instructions = MsgBox("Allows customers to directly manage and control their calling card traffic routing" & Chr(13) & Chr(10) & _
                            "and features.", vbInformation, "Calling Card Monitoring Tool Description")
End Sub

Private Sub RSMTinfo_Click()
Instructions = MsgBox("ESM is a multi-tenant, company-wise shared resource providing a foundation for" & Chr(13) & Chr(10) & _
                            "advanced, presence-based and collaborative services.", vbInformation, "Remote Services Management Tool Description")

End Sub

Private Sub SMTinfo_Click()
Instructions = MsgBox("Application platform for the delivery of the managed security services", vbInformation, "Security Management Tool Description")

End Sub

Private Sub TFMTinfo_Click()
 Instructions = MsgBox("Provides Traffic Reporting and Network Mgr applications for managing toll free, " & Chr(13) & Chr(10) & _
                            "routing features and ECR components.", vbInformation, "Toll Free Monitoring Tool Description")

End Sub

Private Sub VOIPMTinfo_Click()
Instructions = MsgBox("IASA enableds customers to manage their network more efficiently, while reducing costs and taking" & Chr(13) & Chr(10) & _
                            "advantage of new, leading-edge, multimedia, business capabilities.", vbInformation, "Voice Over IP Management Tool Description")

End Sub

Private Sub WHAinfo_Click()
    Instructions = MsgBox("Customer facing on-line portal for both enterprise hosting, hosted services, and" & Chr(13) & Chr(10) & _
                            "premium data center services.", vbInformation, "Web Hosting Application Description")
End Sub
Attribute VB_Name = "Sheet8"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Control = "Returnkey, 3, 0, MSForms, CommandButton"
Private Sub Returnkey_Click()
    Application.ScreenUpdating = False
    Sheets("Off-Line Form").Visible = True
    Sheets("Summary").Visible = False
    Sheets("User Profile").Visible = False
    Sheets("Reporting Types").Visible = False
    Sheets("Additional AHC's").Visible = False
    Application.ScreenUpdating = True
End Sub
Attribute VB_Name = "ThisWorkbook"
Attribute VB_Base = "0{00020819-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "UserForm1"
Attribute VB_Base = "0{1983D557-07CD-426B-A1B9-D8486657CF3F}{3BA0E316-5AF4-42E6-8D3B-15655A0BEEE6}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False

Private Sub FrameProgress_Click()

End Sub

Private Sub Label1_Click()

End Sub

Private Sub UserForm_activate()
    Call Main
End Sub


' InQuest injected base64 decoded content
' ^t(^r
' x(^r

INQUEST-PP=macro
