Attribute VB_Name = "ClickModule"
'Private Declare Function IsCharAlpha Lib "user32" _
'Alias "IsCharAlphaA" (ByVal cChar As Byte) As Long
'Private Declare Function IsCharAlphaNumeric Lib "user32" _
'Alias "IsCharAlphaNumericA" (ByVal cChar As Byte) As Long

'Private Declare Function IsCharAlpha Lib "user32" _
'Alias "IsCharAlphaA" (ByVal cChar As Byte) As Long
'Private Declare Function IsCharAlphaNumeric Lib "user32" _
'Alias "IsCharAlphaNumericA" (ByVal cChar As Byte) As Long
Dim NoSRORow

Sub |fffd||fffd||fffd||fffd||fffd||fffd|4_|fffd||fffd||fffd||fffd||fffd||fffd|()

Dim FromSheet As Worksheet, TabSheet As Worksheet, DataSheet As Worksheet, SvodSheet As Worksheet
Dim row As Range, WorkKinds As Variant, WorkCell As Range, UsedRowCount
Dim rowi, Code, Pref, num, WorkKind, KindI, Cnt, postype, StartCellRow
Dim DestCell As Range, EndCell As Range
    
    If (Application.Worksheets("|fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd|") Is Nothing) Then
        MsgBox "|fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd| |fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| '|fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd|'"
        Exit Sub
    End If
    Set FromSheet = Worksheets("|fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd|")
    '
    If (Application.Worksheets("|fffd||fffd||fffd||fffd||fffd||fffd||fffd|") Is Nothing) Then
        MsgBox "|fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd| |fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| '|fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd|'"
        Exit Sub
    End If
    Set TabSheet = Worksheets("|fffd||fffd||fffd||fffd||fffd||fffd||fffd|")
    '
    If (Application.Worksheets("|fffd||fffd||fffd||fffd||fffd||fffd|") Is Nothing) Then
        MsgBox "|fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd| |fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| '|fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd|'"
        Exit Sub
    End If
    Set DataSheet = Worksheets("|fffd||fffd||fffd||fffd||fffd||fffd|")
    
    If (Application.Worksheets("|fffd||fffd||fffd||fffd|624") Is Nothing) Then
        MsgBox "|fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd| |fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| '|fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd|'"
        Exit Sub
    End If
    Set SvodSheet = Worksheets("|fffd||fffd||fffd||fffd|624")
    
    UsedRowCount = FromSheet.UsedRange.Rows.Count
    CollsCount = FromSheet.UsedRange.Columns.Count
    DataSheet.Activate
    Application.ScreenUpdating = False
    'DataSheet.Range("C2:C" & DataSheet.Rows.Count).ClearContents
    StartCellRow = Names("startcell").RefersToRange.row + 1
    If DataSheet.UsedRange.Rows.Count >= StartCellRow Then
        DataSheet.Rows((StartCellRow + 1) & ":" & DataSheet.UsedRange.Rows.Count).Select
        DataSheet.Rows((StartCellRow + 1) & ":" & DataSheet.UsedRange.Rows.Count).Delete
    End If
    
    Set DestCell = DataSheet.Cells(StartCellRow, 1)
    Set EndCell = SvodSheet.Cells(SvodSheet.UsedRange.Rows.Count, 5)
    SvodSheet.Activate
    SvodSheet.Cells.Range(Names("RootCell").RefersToRange, EndCell).Select
    Selection.Copy Destination:=DestCell
    DataSheet.Activate
    'NoSRORow = DataSheet.UsedRange.Rows.Count
    
    
    Set WorkCell = DataSheet.Cells.Find(What:="|fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd|, |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd|", After:=DataSheet.Cells(1, 1), LookIn:=xlFormulas, LookAt:=xlPart, SearchOrder:= _
                xlByRows, SearchDirection:=xlNext, MatchCase:=False, SearchFormat:=False)
    If Not (WorkCell Is Nothing) Then NoSRORow = WorkCell.row
    
    'DataSheet.Cells(NoSRORow, 1).Value = "|fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd|, |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd|"
    'DataSheet.Cells(NoSRORow, 1).Font.Bold = True
    MakeBorders (DataSheet.Cells(NoSRORow, 2))
    MakeBorders (DataSheet.Cells(NoSRORow, 1))
    
    Cnt = 0
    For rowi = 1 To UsedRowCount
        Set row = FromSheet.Rows(rowi)
        ' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| - |fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd|, |fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd|
        If row.Cells(1).MergeCells Then GoTo nextrow
        num = row.Cells(1).Text
        Code = row.Cells(2).Text
        postype = UCase(row.Cells(4).Text)
        If num = "" Then GoTo nextrow
        If (Code = "") Or (postype <> "|fffd|") Then GoTo nextrow
        WorkKinds = Array()
        If (InStr(row.Cells(2).Text, "3.") = 1) Then
        Code = Replace(row.Cells(2).Text, "3.", "")
        If IsEnabledCode(Code, Pref) Then Call GetWorkCodes(Code, Pref, TabSheet, WorkKinds)
        End If
        If UBound(WorkKinds) < 0 Then
            'Set WorkCell = DataSheet.Cells.Find(What:="|fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd|, |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd|", After:=DataSheet.Cells(1, 1), LookIn:=xlFormulas, LookAt:=xlPart, SearchOrder:= _
             '   xlByRows, SearchDirection:=xlNext, MatchCase:=False, SearchFormat:=False)
            Set WorkCell = DataSheet.Cells(NoSRORow, 2)
            If WorkCell Is Nothing Then GoTo nextrow
            WorkCell.Activate
            'Set WorkCell = WorkCell.Offset(0, 1)
            WorkCell.Activate
            WorkCell.Value = AddPosNum(WorkCell.Value, num)
            GoTo nextrow
        Else
            Cnt = Cnt + 1
            For KindI = 0 To UBound(WorkKinds)
                Set WorkCell = DataSheet.Cells(StartCellRow - 1 + WorkKinds(KindI), 2)
                'If WorkCell Is Nothing Then GoTo nextrow
                
                'WorkCell.Activate
                'Set WorkCell = WorkCell.Offset(0, 1)
                WorkCell.Activate
                WorkCell.Value = AddPosNum(WorkCell.Value, num)
            Next KindI
        End If
nextrow:
    Next rowi
    Call HideNotFilledRows(DataSheet)
    Cells(1, 1).Select
    If Cnt = 0 Then Call MsgBox("|fffd||fffd| |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|, |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd| |fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd|, |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|")
    Application.ScreenUpdating = True
    'DataSheet.PrintPreview
End Sub

Function GetAlphaPref(AStr) As String
Dim i, char As Byte
    GetAlphaPref = ""
    i = 1
    While (i <= Len(AStr))
        If Mid(AStr, i, 1) = "" Then Exit Function
        char = Asc(Mid(AStr, i, 1))
        If IsCharAlpha(char) <> 1 Then Exit Function
        GetAlphaPref = GetAlphaPref & Mid(AStr, i, 1)
        i = i + 1
    Wend
End Function

Function IsEnabledCode(ByRef ACode, ByRef Pref) As Boolean
Dim Pref3, Pref4, arr, i
    IsEnabledCode = False
    Pref = UCase(GetAlphaPref(ACode))
    If Len(Pref) > 0 Then ACode = Mid(ACode, Len(Pref) + 1, Len(ACode))
    ACode = ClearPostfix(ACode)
    If ACode = "" Then Exit Function
    arr = Split(ACode, "-")
    For i = LBound(arr) To UBound(arr)
        If Not IsNumeric(arr(i)) Then Exit Function
    Next i
    Pref3 = Mid(Pref, 1, 3)
    Pref4 = Mid(Pref, 1, 4)
    IsEnabledCode = (Pref3 = "|fffd||fffd||fffd|") Or (Pref3 = "|fffd||fffd||fffd|") Or (Pref4 = "|fffd||fffd||fffd||fffd|") Or (Pref = "")
    ' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| "|fffd|", "|fffd|" |fffd||fffd||fffd| "|fffd|" |fffd||fffd||fffd| "|fffd||fffd|" |fffd| |fffd|.|fffd|.
    If (Pref3 = "|fffd||fffd||fffd|") Or (Pref3 = "|fffd||fffd||fffd|") Then Pref = Mid(Pref, 4, Len(Pref))
    If (Pref4 = "|fffd||fffd||fffd||fffd|") Then Pref = Mid(Pref, 5, Len(Pref))
End Function

Function ClearPostfix(AStr) As String
Dim i, char As Byte, ACode
    ACode = AStr
    i = Len(ACode)
    While (i >= 1)
        If Mid(ACode, i, 1) = "" Then Exit Function
        char = Asc(Mid(ACode, i, 1))
        If IsCharAlpha(char) = 1 Then
            ACode = Mid(ACode, 1, i - 1)
        Else
            ClearPostfix = ACode
            Exit Function
        End If
        i = i - 1
    Wend
End Function

'Function GetWorkCode(ACode, APref, ADataSheet As Worksheet) As String
'Dim row As Range
'Dim rowi, Pref, leftS, rightS
'
'GetWorkCode = ""
'
'    UsedRowCount = ADataSheet.UsedRange.Rows.Count
'    CollsCount = ADataSheet.UsedRange.Columns.Count
'    For rowi = 1 To UsedRowCount
'        Set row = ADataSheet.Rows(rowi)
'        Pref = row.Cells(1).Text
'        leftS = row.Cells(2).Text
'        rightS = row.Cells(3).Text
'        If UCase(Pref) <> UCase(APref) Then GoTo nextrow
'        If (RangeCompare(ACode, leftS) >= 0) And (RangeCompare(ACode, rightS) <= 0) Then
'            GetWorkCode = row.Cells(4).Text
'            Exit Function
'        End If
'nextrow:
'    Next rowi
'End Function

Sub GetWorkCodes(ACode, APref, ADataSheet As Worksheet, AWorkKinds As Variant)
Dim row As Range
Dim rowi, Pref, Cnt, leftS, rightS, i, Exist, tm
    'tm = Time
    
    UsedRowCount = ADataSheet.UsedRange.Rows.Count
    CollsCount = ADataSheet.UsedRange.Columns.Count
    Cnt = -1
    AWorkKinds = Array()
    For rowi = 1 To UsedRowCount
        Set row = ADataSheet.Rows(rowi)
        Pref = row.Cells(1).Text
        leftS = row.Cells(2).Text
        rightS = row.Cells(3).Text
        If (leftS = "") Or (rightS = "") Then GoTo nextrow
        If UCase(Pref) <> UCase(APref) Then GoTo nextrow
        If (RangeCompare(ACode, leftS) >= 0) And (RangeCompare(ACode, rightS) <= 0) Then
            Exist = False
            For i = 0 To UBound(AWorkKinds)
                If AWorkKinds(i) = row.Cells(4).Text Then
                    Exist = True
                    Exit For
                End If
            Next i
            If Not Exist Then
                Cnt = Cnt + 1
                ReDim Preserve AWorkKinds(Cnt)
                AWorkKinds(Cnt) = row.Cells(4).Text
            End If
        End If
nextrow:
    Next rowi
    'Debug.Print "GetWorkCodes :" & (Time - tm)
End Sub

Function AddPosNum(AStr, num) As String
If AStr = "" Then
    AddPosNum = "|fffd|." & num
Else
    AddPosNum = AStr & ", " & "|fffd|." & num
End If
End Function

Function RangeCompare(Code1, Code2) As Integer
Dim arr1 As Variant, arr2 As Variant, ind, highind
Dim a As Integer, b As Integer
    RangeCompare = 0
    arr1 = Split(Code1, "-")
    arr2 = Split(Code2, "-")
    highind = UBound(arr1)
    ind = UBound(arr2)
    If ind < highind Then highind = ind
    
    For ind = 0 To highind
        a = arr1(ind)
        b = arr2(ind)
        If a > b Then RangeCompare = 1
        If a < b Then RangeCompare = -1
        If RangeCompare <> 0 Then Exit Function
    Next ind
    RangeCompare = 0
    'If UBound(arr1) > UBound(arr2) Then RangeCompare = 1
    'If UBound(arr1) < UBound(arr2) Then RangeCompare = 1
End Function

Sub HideNotFilledRows(DataSheet As Worksheet)
Dim rowi, Group, UsedRowCount, row As Range, MyRange As Range
Dim StartRow, num, found, StartCellRow

    StartCellRow = Names("startcell").RefersToRange.row
    UsedRowCount = DataSheet.UsedRange.Rows.Count
    
    With DataSheet.Range("A" & (StartCellRow + 1) & ":B" & (UsedRowCount + 1))
        .HorizontalAlignment = xlLeft
        .VerticalAlignment = xlTop
        .WrapText = True
    End With
    
    found = True
    For rowi = StartCellRow + 1 To NoSRORow - 1
        Set row = DataSheet.Rows(rowi)
        If row.Cells(1).Font.Bold Then
            If Not found Then
                DataSheet.Range(StartRow & ":" & rowi - 1).EntireRow.Hidden = True
            End If
            StartRow = rowi
            found = False
        End If
        Group = row.Cells(1).Font.Bold
        If rowi = 860 Then
            Debug.Print "859"
        
        End If
        'If Group Then GoTo nextrow  ' |fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd|, |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd|
        'If ((num = "*") Or (num = "")) And (row.Cells(3).Text <> "") Then found = True
        If (row.Cells(2).Text <> "") Then found = True
        If (Not Group) And (row.Cells(2).Text = "") Then
            row.EntireRow.Hidden = True
        End If
nextrow:
    Next rowi
    If Not found Then ' |fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd|
        DataSheet.Range(StartRow & ":" & (NoSRORow - 1)).EntireRow.Hidden = True
    End If
    
      With DataSheet.PageSetup
        .LeftHeader = ""
        .CenterHeader = ""
        .RightHeader = ""
        .LeftFooter = ""
        .CenterFooter = ""
        .RightFooter = ""
        .LeftMargin = Application.InchesToPoints(0.78740157480315)
        .RightMargin = Application.InchesToPoints(0.393700787401575)
        .TopMargin = Application.InchesToPoints(0.393700787401575)
        .BottomMargin = Application.InchesToPoints(0.393700787401575)
        .HeaderMargin = Application.InchesToPoints(0.236220472440945)
        .FooterMargin = Application.InchesToPoints(0.236220472440945)
        .PrintHeadings = False
        .PrintGridlines = False
        .PrintComments = xlPrintNoComments
        .CenterHorizontally = True
        .CenterVertically = False
        .Orientation = xlPortrait
        .PaperSize = xlPaperA4
        .FirstPageNumber = xlAutomatic
        .Zoom = False
        .FitToPagesWide = 1
        .FitToPagesTall = 300
    End With
   
    Set MyRange = DataSheet.Range("B" & Names("startcell").RefersToRange.row & ":B" & NoSRORow)
    
    MyRange.Borders(xlDiagonalDown).LineStyle = xlNone
    MyRange.Borders(xlDiagonalUp).LineStyle = xlNone
    With MyRange.Borders(xlEdgeLeft)
        .LineStyle = xlContinuous
        .ColorIndex = xlAutomatic
        .Weight = xlMedium
    End With
    With MyRange.Borders(xlEdgeTop)
        .LineStyle = xlContinuous
        .ColorIndex = xlAutomatic
        .Weight = xlMedium
    End With
    With MyRange.Borders(xlEdgeBottom)
        .LineStyle = xlContinuous
        .ColorIndex = xlAutomatic
        .Weight = xlMedium
    End With
    With MyRange.Borders(xlEdgeRight)
        .LineStyle = xlContinuous
        .ColorIndex = xlAutomatic
        .Weight = xlMedium
    End With
    MyRange.Borders(xlInsideVertical).LineStyle = xlNone
    With MyRange.Borders(xlInsideHorizontal)
        .LineStyle = xlContinuous
        .ColorIndex = xlAutomatic
        .Weight = xlMedium
    End With
End Sub

Function IsCharAlpha(ByVal cChar As Byte) As Long
If ((cChar >= Asc("A")) And (cChar <= Asc("Z"))) _
    Or ((cChar >= Asc("a")) And (cChar <= Asc("z"))) _
    Or ((cChar >= Asc("|fffd|")) And (cChar <= Asc("|fffd|"))) _
    Or ((cChar >= Asc("|fffd|")) And (cChar <= Asc("|fffd|"))) _
    Or ((cChar = Asc("|fffd|")) Or (cChar = Asc("|fffd|"))) Then
    IsCharAlpha = 1
Else
    IsCharAlpha = 0
End If
End Function

Sub MakeBorders(MyRange As Range)
    MyRange.Borders(xlDiagonalDown).LineStyle = xlNone
    MyRange.Borders(xlDiagonalUp).LineStyle = xlNone
    With MyRange.Borders(xlEdgeLeft)
        .LineStyle = xlContinuous
        .ColorIndex = xlAutomatic
        .Weight = xlMedium
    End With
    With MyRange.Borders(xlEdgeTop)
        .LineStyle = xlContinuous
        .ColorIndex = xlAutomatic
        .Weight = xlMedium
    End With
    With MyRange.Borders(xlEdgeBottom)
        .LineStyle = xlContinuous
        .ColorIndex = xlAutomatic
        .Weight = xlMedium
    End With
    With MyRange.Borders(xlEdgeRight)
        .LineStyle = xlContinuous
        .ColorIndex = xlAutomatic
        .Weight = xlMedium
    End With
    With MyRange.Borders(xlInsideVertical)
        '.LineStyle = xlContinuous
        '.ColorIndex = xlAutomatic
        .Weight = xlMedium
    End With
    With MyRange.Borders(xlInsideHorizontal)
        '.LineStyle = xlContinuous
        '.ColorIndex = xlAutomatic
        .Weight = xlMedium
    End With
End Sub



Attribute VB_Name = "|fffd||fffd||fffd||fffd|1"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "|fffd||fffd||fffd||fffd|14"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "|fffd||fffd||fffd||fffd|3"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "|fffd||fffd||fffd||fffd|5"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|"
Attribute VB_Base = "0{00020819-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True


INQUEST-PP=macro
