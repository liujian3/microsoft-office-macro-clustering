Attribute VB_Name = "EventKlasse"
Attribute VB_Base = "0{FCFB3D2A-A0FA-1068-A738-08002B3371B5}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = False
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Public WithEvents appWord As Word.Application
Attribute appWord.VB_VarHelpID = -1

Private Sub appWord_DocumentBeforePrint _
        (ByVal Doc As Document, _
        Cancel As Boolean)
        ThisDocument.fillSharePointVersionAndDate
End Sub





Attribute VB_Name = "ThisDocument"
Attribute VB_Base = "1Normal.ThisDocument"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = True
Attribute VB_Customizable = True
Private X As New EventKlasse

Public Sub fillSharePointVersionAndDate()

    '----------------------------------------------------------- INFO -----------------------------------------------

    'Deze code moet worden geplakt in de Visual Basic Editor als code van het document zelf.
    'Er moet een reference worden gelegd naar :Microsoft ActiveX Data Objects 2.0 Library.
    'Vereisten omdat deze functie zou werken
    'URL SharePoint site wordt door de macro zelf achterhaald.
    'Op de server moet er een loginnaam en wachtwoord zijn aangemaakt voor een sql-gebruiker met read-access op de SharePoint db.
    
    '------------------------------------------------------- END INFO -----------------------------------------------
    
    '----------------------Declaratie van variabelen----------------------
    Dim strFileName, strFileLoc, strFilePath, strSharePointSite, strConn As String
    Dim myCN As ADODB.Connection
    Dim sVersion As String
    Dim dVersionDate As Date
    Dim i As Integer
    Dim strSQL As String
    Dim myRS As ADODB.Recordset
            
    '----------------------Instellen van parameters-----------------------
    strFileName = ThisDocument.Name
    strFileLoc = ThisDocument.Path
    strSharePointSite = Replace(strFileLoc, "http://", "")
    strSharePointSite = Replace(Left$(strSharePointSite, InStr(strSharePointSite, "/")), "http://", "")
    strSharePointSite = "http://" + strSharePointSite
    strFilePath = Replace(strFileLoc, strSharePointSite, "")
    strFilePath = Replace(strFilePath, "%20", " ")
    strSharePointSite = LCase(strSharePointSite)
    
    '----------------------Code-------------------------------------------
    strDBName = getIniParam(strSharePointSite)
    strConn = "Driver={SQL Server};Server=SharePointDB;Database=" & strDBName & ";Uid=getversion;Pwd=getversion;"
                    
    If Replace(strFileLoc, strSharePointSite, "") <> strFileLoc Then
    'in dit geval staat het document op SharePoint.
        strSQL = "exec dbo.proc_DocVersion" & """" & strFileName & """" & ", " & """" & strFilePath & """"
        Set myCN = New ADODB.Connection
        myCN.Open strConn
        Set myRS = myCN.Execute(strSQL)

        Do While Not myRS.EOF
            If IsNull(myRS.Fields("UIVersionString")) Then
               'in dit geval is het ophalen van de versie mislukt
                MsgBox ("Het ophalen van de versie is mislukt.")
                Exit Sub
            Else
                sVersion = myRS.Fields("UIVersionString")
            End If
            
            dVersionDate = myRS.Fields("TimeLastModified")
            myRS.MoveNext
        Loop
        myCN.Close
            
        'invullen van de versie
        ThisDocument.CustomDocumentProperties("SharePointVersionNumber") = sVersion
                        
        'invullen van de datum
        Dim sVersionDate As String
        sVersionDate = Day(dVersionDate) & "/" & Month(dVersionDate) & "/" & Year(dVersionDate)

        ThisDocument.CustomDocumentProperties("SharePointVersionDate") = sVersionDate
        refreshAllDocPropertyFields
    Else
    'in dit geval staat het document niet op SharePoint.
        MsgBox ("Dit document staat niet op SharePoint, het ophalen van de versie is bijgevolg onmogelijk.")
    End If
End Sub

Private Function getIniParam(ByVal strKey As String) As String
    Dim iFileNum As Integer
    Dim strNextLine As String
    Dim iLineCount As Integer
    Dim strIniKey As String
            
    'get a free file number
    iFileNum = FreeFile

    'open SharePointDocVersion.ini voor input
    Open "\\ecs2000.be\SYSVOL\ECS2000.BE\scripts\SharePointVersionMacro.ini" For Input As iFileNum
    iLineCount = 1
    'lees inhoud
    Do While Not EOF(iFileNum)
        Line Input #iFileNum, strNextLine
        'actie
        strIniKey = Replace(Replace(Left$(strNextLine, InStr(strNextLine, "=")), "=", ""), """", "")
        If strIniKey = strKey Then
            getIniParam = Trim(Replace(Replace(Right$(strNextLine, Len(strNextLine) - InStr(strNextLine, "=")), "=", ""), """", ""))
        Exit Do
        End If
    Loop
    ' Close the file
    Close iFileNum
End Function

Private Sub refreshAllDocPropertyFields()
    Dim myStoryRange As Range
    Dim oField As Field
    For Each myStoryRange In ActiveDocument.StoryRanges
        For Each oField In myStoryRange.Fields
            If oField.Type = wdFieldDocProperty Then
                oField.Update
            End If
        Next oField
    Next myStoryRange
End Sub

Private Sub Document_Open()
    Set X.appWord = Word.Application
    fillSharePointVersionAndDate
End Sub


' InQuest injected base64 decoded content
' ~)eJ

INQUEST-PP=macro
