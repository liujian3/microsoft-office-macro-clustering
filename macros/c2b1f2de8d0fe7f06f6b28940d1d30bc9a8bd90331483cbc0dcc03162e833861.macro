Attribute VB_Name = "ThisDocument"
Attribute VB_Base = "1Normal.ThisDocument"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = True
Attribute VB_Customizable = True
Option Explicit

Private Const TBL_QUANTITY = 0
Private Const TBL_CATNO = 1
Private Const TBL_DESCRIPTION = 2
Private Const TBL_UNITLIST = 3
Private Const TBL_DISCOUNT = 4
Private Const TBL_TOTALNET = 5

Private Const WORDCOL_CATNO = 0
Private Const WORDCOL_DESCRIPTION As Long = 1
Private Const WORDCOL_QUANTITY As Long = 2
Private Const WORDCOL_UNITLIST As Long = 3
Private Const WORDCOL_DISCOUNT As Long = 4
Private Const WORDCOL_TOTALNET As Long = 5
Private Const WORDCOL_UNITLISTEURO As Long = 6
Private Const WORDCOL_TOTALNETEURO As Long = 7
Private Const WORDCOL_COMMENTS As Long = 8  'b166
Private Const WORDCOL_UNITNET As Long = 9 'b166


' Note, these are NOT in the same order as vb app (legacy, from Excel)

Private Const LVFLD_DISCOUNT As Long = 0
Private Const LVFLD_UNITLIST As Long = 1
Private Const LVFLD_TOTALNET As Long = 2

Private Const TBL_TITLES As Long = 0
Private Const TBL_COL_WIDTH As Long = 1
Private Const TBL_DISPLAY As Long = 2
Private m_iColumnsCount As Integer

Private m_vTableHeaders() As Variant


' Put the subquote values into the created subquote table
Public Sub CreateSubQuote(astrValues() As String, abFieldFlags() As Boolean, iSubQuoteNumber As Integer, sLanguage As String)
    Dim iIndex As Integer, i As Integer, j As Integer, iCount As Integer
    Dim myTable As Table, aCell As Cell, col As Column
    Dim avCol As Variant
    
    ' First three columns are as normal
    avCol = Array(0, 1, 2)
    m_iColumnsCount = 3
    
    ' check the field flags
    If abFieldFlags(LVFLD_UNITLIST) Then
        ReDim Preserve avCol(m_iColumnsCount)
        avCol(m_iColumnsCount) = TBL_UNITLIST '4
        m_iColumnsCount = m_iColumnsCount + 1
    End If
    If abFieldFlags(LVFLD_DISCOUNT) Then
        ReDim Preserve avCol(m_iColumnsCount)
        avCol(m_iColumnsCount) = TBL_DISCOUNT  ' b148 - 3
        m_iColumnsCount = m_iColumnsCount + 1
    End If
    If abFieldFlags(LVFLD_TOTALNET) Then
        ReDim Preserve avCol(m_iColumnsCount)
        avCol(m_iColumnsCount) = TBL_TOTALNET '5
        m_iColumnsCount = m_iColumnsCount + 1
    End If
    
    ' Retrieve amended values information
    PopulateTableHeaders astrValues, abFieldFlags(LVFLD_UNITLIST), abFieldFlags(LVFLD_DISCOUNT), _
                            abFieldFlags(LVFLD_TOTALNET), sLanguage
    
    ' Create the table
    Set myTable = ThisDocument.Tables.Add(Range:=Selection.Range, NumRows:=2, NumColumns:=m_iColumnsCount)
                
    ' Border the table
    ' myTable.Select
    ' BorderTable Selection
    
    ' Set the column widths
    For Each col In myTable.Columns
        col.SetWidth InchesToPoints(CSng(m_vTableHeaders(TBL_COL_WIDTH, avCol(iIndex)))), wdAdjustSameWidth
        iIndex = iIndex + 1
    Next col
    
    iIndex = 0
    ' Set the cell titles
    For Each aCell In myTable.Rows(1).Cells
        aCell.Range.Text = m_vTableHeaders(TBL_TITLES, avCol(iIndex))
    
        iIndex = iIndex + 1
    Next aCell
    
    ' Bold the first row
    myTable.Rows(1).Select
    Selection.Font.Bold = True
    myTable.Rows(2).Select
    Selection.Font.Bold = False
    
    ' Turn off the borders
    With myTable
        .Borders(wdBorderLeft).LineStyle = wdLineStyleNone
        .Borders(wdBorderRight).LineStyle = wdLineStyleNone
        .Borders(wdBorderTop).LineStyle = wdLineStyleNone
        .Borders(wdBorderBottom).LineStyle = wdLineStyleNone
        .Borders(wdBorderHorizontal).LineStyle = wdLineStyleNone
        .Borders(wdBorderVertical).LineStyle = wdLineStyleNone
        .Borders.Shadow = False
    End With

    
    ' Fill the table with data
    myTable.Rows(2).Cells(1).Select
    
    Dim thisRow As Row, commentRow As Row, iRow As Integer 'b166
    iRow = 1
     
    iCount = UBound(astrValues, 1)
    For i = 0 To iCount
    
        iRow = iRow + 1
        For j = 1 To myTable.Columns.Count
            myTable.Rows(iRow).Cells(j).Range.Text = astrValues(i, avCol(j - 1))
        Next j
        
        ' b166 - Add comment to document
        If astrValues(i, WORDCOL_COMMENTS) <> "" Then
            iRow = iRow + 1
            Set commentRow = myTable.Rows.Add
        End If
        
        If i < iCount Then
            Set thisRow = myTable.Rows.Add
        End If
            
        If astrValues(i, WORDCOL_COMMENTS) <> "" Then
            With commentRow
                .Cells(2).Merge MergeTo:=.Cells(myTable.Columns.Count)
            End With
            commentRow.Cells(2).Range.Text = astrValues(i, WORDCOL_COMMENTS)
            commentRow.Cells(2).Range.Paragraphs.Alignment = wdAlignParagraphLeft
            commentRow.Cells(2).Range.Paragraphs.SpaceBefore = 4
            commentRow.Cells(2).Borders(wdBorderLeft) = wdLineStyleNone
        ElseIf i < iCount Then
            'thisRow.Borders(wdBorderTop).LineStyle = wdLineStyleSingle
        End If
    Next i
    
End Sub

Public Sub Heading1()
    Selection.Style = ActiveDocument.Styles("PaQSQTitle")
End Sub
Public Sub Heading2()
    Selection.Style = ActiveDocument.Styles("PaQSQTotal")
End Sub
Public Sub Heading3()
    Selection.Style = ActiveDocument.Styles("PaQSectionTotal")
End Sub
Public Sub Heading4()
    Selection.Style = ActiveDocument.Styles("PaQGrandTotal")
End Sub

' Fill the array with table header information
Private Sub PopulateTableHeaders(astrValues() As String, bUnitList As Boolean, bDiscount As Boolean, bTotalNet As Boolean, sLanguage As String)
    Dim iSize As Integer
    Dim sQuantity As String, sCatNo As String, sDesc As String, sUnitList As String, sDiscount  As String, sTotalNet As String
    
    ' select the language headers
    Select Case UCase$(sLanguage)
        Case "ENGLISH"
            sQuantity = "Qty"
            sCatNo = "Catalogue No."
            sDesc = "Description"
            sUnitList = "Unit List"
            sTotalNet = "Total Net"
        Case "FRENCH"
            sQuantity = "Qty"
            sCatNo = "Reference"
            sDesc = "Description"
            sUnitList = "Tarif Unitaire"
            sTotalNet = "Total Net"
        Case "ITALIAN"
            sQuantity = "Q.t|fffd|"
            sCatNo = "Codice"
            sDesc = "Descrizione"
            sUnitList = "List. Unit."
            sTotalNet = "Totale Netto"
        Case "GERMAN"
            sQuantity = "Stk."
            sCatNo = "Artikel-Nr."
            sDesc = "Artikelbezeichnung"
            sUnitList = "Listpreis"
            sTotalNet = "Nettopreis"
        Case "DUTCH"
            sQuantity = "Aantal"
            sCatNo = "Cat. No."
            sDesc = "Omschrijving"
            sUnitList = "Eenheidsprijs"
            sTotalNet = "Totaal"
        Case "SPANISH"
            sQuantity = "Cantidad"
            sCatNo = "N|fffd| Cat|fffd|logo"
            sDesc = "Descripci|fffd|n"
            sUnitList = "Unidad Lista"
            sTotalNet = "Total Neto"
        
        Case "PORTUGUESE"
            sQuantity = "Quantidade"
            sCatNo = "N|fffd|mero Cat|fffd|logo"
            sDesc = "Descri|fffd||fffd|o"
            sUnitList = "Unidade Lista"
            sTotalNet = "Total L|fffd|quido"
        
        Case "DANISH"
            sQuantity = "Antal"
            sCatNo = "Varenr."
            sDesc = "Beskrivelse"
            sUnitList = "Stykpris"
            sTotalNet = "Samlet Nettopris"
        
        Case "SWEDISH"
            sQuantity = "Antal"
            sCatNo = "Artikel Nr."
            sDesc = "Beskrivning"
            sUnitList = "Listpris/st"
            sTotalNet = "Total Netto"
        Case "POLISH"
            sQuantity = "Ilosc"
            sCatNo = "No. Katalogowy"
            sDesc = "Opis"
            sUnitList = "Lista Elementow"
            sTotalNet = "Wartosc Netto"
        Case Else
            sQuantity = "Qty"
            sCatNo = "Catalogue No."
            sDesc = "Description"
            sUnitList = "Unit List"
            sTotalNet = "Total Net"

    End Select
    
    ' SAME for all languages
    sDiscount = "%"
    
    iSize = 2
    ReDim m_vTableHeaders(2, 2)
        
    ' Populate table headings
    m_vTableHeaders(TBL_TITLES, TBL_QUANTITY) = sQuantity
    m_vTableHeaders(TBL_TITLES, TBL_CATNO) = sCatNo
    m_vTableHeaders(TBL_TITLES, TBL_DESCRIPTION) = sDesc
    
    ' populate column widths
    m_vTableHeaders(TBL_COL_WIDTH, TBL_QUANTITY) = 0.45
    m_vTableHeaders(TBL_COL_WIDTH, TBL_CATNO) = 1.25
    m_vTableHeaders(TBL_COL_WIDTH, TBL_DESCRIPTION) = 3#
    
    
    ' populate whether to display this column
    m_vTableHeaders(TBL_DISPLAY, TBL_QUANTITY) = True
    m_vTableHeaders(TBL_DISPLAY, TBL_CATNO) = True
    m_vTableHeaders(TBL_DISPLAY, TBL_DESCRIPTION) = True
    
    ' look up the flags
    If bUnitList Then
        ReDim Preserve m_vTableHeaders(2, 3)
        iSize = iSize + 1
        m_vTableHeaders(TBL_TITLES, TBL_UNITLIST) = sUnitList
        m_vTableHeaders(TBL_COL_WIDTH, TBL_UNITLIST) = 0.9
        m_vTableHeaders(TBL_DISPLAY, TBL_UNITLIST) = True
    End If
    
    If bDiscount Then
        ReDim Preserve m_vTableHeaders(2, 4)
        iSize = iSize + 1
        m_vTableHeaders(TBL_TITLES, TBL_DISCOUNT) = sDiscount
        m_vTableHeaders(TBL_COL_WIDTH, TBL_DISCOUNT) = 0.35
        m_vTableHeaders(TBL_DISPLAY, TBL_DISCOUNT) = True
    End If
    If bTotalNet Then
        ReDim Preserve m_vTableHeaders(2, 5)
        iSize = iSize + 1
        m_vTableHeaders(TBL_TITLES, TBL_TOTALNET) = sTotalNet
        m_vTableHeaders(TBL_COL_WIDTH, TBL_TOTALNET) = 0.9
        m_vTableHeaders(TBL_DISPLAY, TBL_TOTALNET) = True
    End If
        
End Sub
' Retrieve the number of columns to display in the table
Private Function GetNumsColsToDisplay() As Integer
    Dim iIndex As Integer
    
    For iIndex = 0 To UBound(m_vTableHeaders, 2) - 1
        If (m_vTableHeaders(TBL_DISPLAY, iIndex)) Then
            m_iColumnsCount = m_iColumnsCount + 1
        End If
    Next iIndex
End Function

' [WEB_SUPPORT_CODE_START]  <-- LEAVE THIS LINE ALONE
' Last Modified: 09/06/2003, Moynul Islam
'
' DO NOT EDIT THE WEB SUPPORT CODE IN ANY FILE OTHER THAN PAQDEFAULT.DOC
' OTHERWISE ALL CHANGES WILL BE LOST
' 27/11/02 Moynul Islam
'

' Go to specified Bookmark
Public Sub GoToBookMark(sBookmarkName As Variant)
        
        ActiveDocument.Bookmarks(sBookmarkName).Select

End Sub
' Put the subquote values into the created subquote table
Public Sub CreateSubQuoteWEB(astrValues As Variant, iSubQuoteNumber As Variant, bOptions As Variant, sLanguage As Variant)

    Dim a1() As String
    Dim abFieldFlags() As Boolean
    ReDim a1(UBound(astrValues, 1), 10)
    ReDim abFieldFlags(3)

    Dim i As Integer, j As Integer
    i = 0
    While i <= UBound(astrValues, 1)
        For j = 0 To UBound(astrValues, 2)
            a1(i, j) = astrValues(i, j)
        Next
        i = i + 1
    Wend
    
    'ReDim Preserve a1(i, 10)

    abFieldFlags(0) = True
    abFieldFlags(1) = True
    abFieldFlags(2) = True

    abFieldFlags(0) = CBool(bOptions(0))
    abFieldFlags(1) = CBool(bOptions(1))
    abFieldFlags(2) = CBool(bOptions(2))

    If CInt(iSubQuoteNumber) = 0 Then
    'ActiveDocument.Bookmarks("SubQuoteTable").Select
    Else
        Selection.Collapse Direction:=wdCollapseEnd
        Selection.InsertParagraphAfter
        Selection.Collapse Direction:=wdCollapseEnd
    End If

    Call CreateSubQuote(a1, abFieldFlags, CInt(iSubQuoteNumber), CStr(sLanguage))

    With Selection
        .EndKey Unit:=wdColumn
        .MoveDown Unit:=wdLine
        While .Information(wdWithInTable) = True
            .MoveDown Unit:=wdLine, Count:=1
        Wend
    End With

End Sub

Public Function WEBVersionNo() As Integer
    WEBVersionNo = 16  ' used to ensure that the users have the right version of templates
End Function


' [WEB_SUPPORT_CODE_END]

Attribute VB_Name = "modulePaQ"
Option Explicit


Sub PasteQuote()
Attribute PasteQuote.VB_Description = "Macro recorded 22-10-98 by Marc Meuws"
Attribute PasteQuote.VB_ProcData.VB_Invoke_Func = "Project.NewMacros.PasteTable"
    Selection.TypeParagraph
    Selection.Paste
    SQTableFont
    'SQTableAutoFormat  'Uncomment this line to apply AutoFormats as
                        'specified in the SQTableAutoFormat macro
End Sub
Sub SQTableFont()
    Selection.MoveUp Unit:=wdLine, Count:=1
    Selection.Tables(1).Select
    Selection.Font.Name = "Tahoma" 'Change Font Type here
    Selection.Font.Size = 10 'Change Font Size here
    Selection.MoveDown Unit:=wdLine, Count:=1
End Sub
Sub SQTableAutoFormat()
    Selection.Tables(1).AutoFormat Format:=wdTableFormatList3, ApplyBorders:= _
    True, ApplyShading:=True, ApplyFont:=False, ApplyColor:=False, _
    ApplyHeadingRows:=True, ApplyLastRow:=False, ApplyFirstColumn:=False, _
    ApplyLastColumn:=False, AutoFit:=False
End Sub

Sub Heading1()
Attribute Heading1.VB_Description = "Macro recorded 25-04-99 by Marc Meuws"
Attribute Heading1.VB_ProcData.VB_Invoke_Func = "Project.NewMacros.Heading1"
    Selection.Style = ActiveDocument.Styles("PaQSQTitle")
End Sub
Sub Heading2()
    Selection.Style = ActiveDocument.Styles("PaQSQTotal")
End Sub
Sub Heading3()
    Selection.Style = ActiveDocument.Styles("PaQSectionTotal")
End Sub
Sub Heading4()
    Selection.Style = ActiveDocument.Styles("PaQGrandTotal")
End Sub




INQUEST-PP=macro
