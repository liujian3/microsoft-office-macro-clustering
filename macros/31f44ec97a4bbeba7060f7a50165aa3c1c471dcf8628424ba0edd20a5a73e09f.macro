Attribute VB_Name = "ACERCA"
Attribute VB_Base = "0{721AB6E2-5813-424B-97B6-A6F65AAF9E03}{959A36B9-E007-4B94-A8A0-28612626206F}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Private Sub BtnMostrarSiempre_Click()
HC.Range("BG5").Value = BtnMostrarSiempre.Value
End Sub
Private Sub BtnTips_Click()
TIPS.Show
End Sub
Private Sub TextBox1_KeyDown(ByVal KeyCode As MSForms.ReturnInteger, ByVal Shift As Integer)
If KeyCode = vbKeyEscape Then Unload Me
End Sub
Private Sub UserForm_Activate()
Application.Wait (Now() + 2 / 86400)
If HC.Range("BG5") = True Then
    Me.top = Me.top - 100
    Me.Height = 514
    Me.Caption = "ACERCA DE CUADRANTE"
    Me.Repaint
    BtnMostrarSiempre.Value = HC.Range("BG5").Value
Else
    Unload Me
End If
End Sub
Private Sub UserForm_Initialize()
Me.Height = 285
Version.Caption = HC.Range("k1")
Distro.Caption = Format(HC.Range("ba10"), "dd/mm/yyyy")
Me.Repaint
End Sub
Private Sub UserForm_KeyPress(ByVal KeyAscii As MSForms.ReturnInteger)
If KeyCode = vbKeyEscape Then Unload Me
End Sub
Attribute VB_Name = "AGENDA"
Attribute VB_Base = "0{382E62BF-6A53-4881-A6E2-9724862AC86A}{B587504B-26C3-4549-AEA4-2CC2C323C911}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Private Sub BtnEnviar_Click()
Unload Me
Application.ScreenUpdating = Fals
Application.EnableEvents = False
HIAGE.Calculate
HIAGE.Activate
If HIAGE.ChartObjects.Count > 0 Then
    For Each ch In HIAGE.ChartObjects
        ch.Delete
    Next
End If
HIAGE.PageSetup.PrintArea = HIC.Range("a3:i17").Address
Set rgExp = HIAGE.Range(HIAGE.PageSetup.PrintArea)
Application.ScreenUpdating = True
rgExp.CopyPicture Appearance:=xlScreen, Format:=xlBitmap
With HIAGE.ChartObjects.Add(left:=rgExp.left, top:=rgExp.top, Width:=rgExp.Width, Height:=rgExp.Height)
.Name = "EXPORT"
.Activate
End With
ActiveChart.Paste
HIAGE.ChartObjects("EXPORT").Chart.Export ThisWorkbook.Path & "\CuadrAPP\Agenda.jpg"
HIAGE.ChartObjects("EXPORT").Delete
HC.Activate
Application.ScreenUpdating = True
MENUAPPINFORMES.TIPO = "AGENDA"
MENUAPPINFORMES.Show
Application.EnableEvents = True
End Sub

Private Sub BtnImprimir_Click()
Unload Me
Application.ScreenUpdating = False
HIAGE.Calculate
#If VBA6 Then
    Application.ExecuteExcel4Macro ("show.toolbar(""ribbon"",1)")
#End If
With HIAGE.PageSetup
    .Zoom = False
    .FitToPagesWide = 1
    .FitToPagesTall = 1
End With
    HIAGE.PrintPreview
#If VBA6 Then
    Application.ExecuteExcel4Macro ("show.toolbar(""ribbon"",0)")
#End If
Application.ScreenUpdating = True
Application.CommandBars.ActiveMenuBar.Enabled = True
Application.CommandBars.ActiveMenuBar.Enabled = False
End Sub

Private Sub UserForm_Initialize()
Dim novedad As Object
If HC.Range("bd6") = 35 Then
    AGENDA.Height = 634
    FrameAgenda.Height = 576
Else
    AGENDA.Height = 512
    FrameAgenda.Height = 460
End If
For dia = 1 To HC.Range("bd6")
    AGENDA.Controls("LD" & dia).Caption = HC.Cells(13, 12 + dia)
    'Set novedad = HC.Cells(12, 12 + dia).Comment
    If HC.Cells(317, 12 + dia) <> "" Then
        AGENDA.Controls("D" & dia).Text = HC.Cells(317, 12 + dia).Text
    End If
    If HC.Cells(13, 12 + dia) = Date Then
        AGENDA.Controls("LD" & dia).BackColor = 52479
        AGENDA.Controls("LD" & dia).ForeColor = 0
    End If
    If HC.Cells(322, 12 + dia) = "F" Then
        AGENDA.Controls("LD" & dia).BackColor = RGB(180, 50, 50)
        AGENDA.Controls("LD" & dia).ForeColor = RGB(255, 255, 255)
    End If
Next
End Sub
Private Sub UserForm_QueryClose(Cancel As Integer, CloseMode As Integer)
Application.ScreenUpdating = False
Application.EnableEvents = False
For dia = 1 To HC.Range("bd6")
    'HC.Cells(12, 12 + dia).ClearComments
    If AGENDA.Controls("D" & dia).Text <> "" Then
        HC.Cells(317, 12 + dia).Value = (AGENDA.Controls("D" & dia).Text)
        HC.CargaComentariosMes
    End If
Next
Application.EnableEvents = True
Application.ScreenUpdating = True
End Sub


Attribute VB_Name = "APPMovil"
Function enviarcorreo(aQuien, Asunto, sms, archivo, VariosDestinos)
If HC.Range("bu1") = 6 Then
    If VariosDestinos = False Then
        Application.ScreenUpdating = False
        On Error Resume Next
        Dim ARCHIVOENVIO As Workbook
        Set ARCHIVOENVIO = Workbooks.Open(filename:=archivo, ReadOnly:=True, Format:=5)
        Application.Dialogs(xlDialogSendMail).Show aQuien, "CuadrantAPP", False
        ARCHIVOENVIO.Close savechanges:=False
        Application.ScreenUpdating = True
    Else
        enviarcorreo = "Fallo Metodo"
    End If
Else
    On Error GoTo fallo
    Dim MiCorreo As CDO.Message
    Set MiCorreo = New CDO.Message
    indice = HC.Range("bu1")
    If HC.Range("cd" & indice) = True Then
        remitente = HC.Range("bt3")
    Else
        remitente = HC.Range("bt7")
    End If
    With MiCorreo.Configuration.Fields
        .Item("http://schemas.microsoft.com/cdo/configuration/smtpusessl") = HC.Range("ca" & indice)
        .Item("http://schemas.microsoft.com/cdo/configuration/smtpauthenticate") = 1
        .Item("http://schemas.microsoft.com/cdo/configuration/smtpserver") = HC.Range("cc" & indice)
        .Item("http://schemas.microsoft.com/cdo/configuration/smtpserverport") = HC.Range("by" & indice)
        .Item("http://schemas.microsoft.com/cdo/configuration/sendusing") = 2
        .Item("http://schemas.microsoft.com/cdo/configuration/sendusername") = remitente
        .Item("http://schemas.microsoft.com/cdo/configuration/sendpassword") = HC.Range("bt4")
        .Update
    End With
    With MiCorreo
        .Subject = Asunto
        .From = HC.Range("bt3")
        If VariosDestinos = True Then
            .BCC = aQuien
        Else
            .To = aQuien
        End If
        If HC.Range("ce" & indice) = True Then
            .CC = HC.Range("bt3")
        End If
        .TextBody = sms
        If archivo <> "" Then
            .AddAttachment archivo
        End If
    End With
On Error Resume Next
'TRABAJANDO.Textillo.Caption = "Enviando"
'Application.ScreenUpdating = True
'TRABAJANDO.Show
'Application.ScreenUpdating = False
'Unload TRABAJANDO
MiCorreo.Send
'Application.ScreenUpdating = True
If Err.Number <> 0 Then
    If Err.Number = -2147220975 Then enviarcorreo = "Fallo Usuario"
    If Err.Number = -2147220973 Then enviarcorreo = "Fallo Red"
Else
    enviarcorreo = "OK"
End If
Set MiCorreo = Nothing
GoTo fin
fallo:
enviarcorreo = "Fallo envio"
MENUAPP.CorreoFallo = True
fin:
Set MiCorreo = Nothing
End If
End Function
Sub MsgEnvio(respuesta, correos, asuntillo)
Select Case respuesta
        Case "OK"
            msg = MsgBox("Se ha enviado correctamente a ( " & correos & " )", vbInformation, asuntillo)
        Case "Fallo Metodo"
            msg = MsgBox("Por asunto de privacidad el metodo de envio seleccionado no es valido para hacer envios a varios destinatarios", vbCritical, "Metodo de envio incorrecto")
        Case "Fallo Usuario"
            msg = MsgBox("No se ha podido realizar el envio, parece que los datos de ususario y contrase|fffd|a no sean correctos", vbCritical, asuntillo)
        Case "Fallo Red"
            msg = MsgBox("No se ha podido realizar el envio, parece que hay algun problema con la conexion al servidor de correo.", vbCritical, asuntillo)
        Case "Fallo envio"
            msg = MsgBox("No se ha podido realizar el envio, parece que hay algun problema de compatibilidad con el metodo de envio seleccionado.", vbCritical, asuntillo)
    End Select
End Sub

Sub ConstruirRespuestaSolicitud(solicitud, resultado, correo, Tip, fila)
cara = HC.Range("cu" & fila)
If InStr(cara, "#I") > 0 Then
    respuesta = enviarcorreo(correo, "Contestacion Solicitud " & solicitud, _
        "CUADRANTE APP.     Cuadrante OG.11/14" & vbNewLine & vbNewLine & "Contestacion Solicitud " & solicitud & vbNewLine & vbNewLine & "Se encuentra en estado de " & resultado, "", False)
    MsgEnvio respuesta, correo, "Contestacion Solicitud"
Else
    CrearCarpetaApp
    Open ThisWorkbook.Path & "\CuadrAPP\Sol" & solicitud & ".cap" For Output As #1
    Print #1, Encriptar("VALIDO", Tip)
    Print #1, Encriptar(solicitud, Tip)
    Print #1, Encriptar(resultado, Tip)
    Close #1
    respuesta = enviarcorreo(correo, "Contestacion Solicitud " & solicitud, _
    "CUADRANTE APP.     Cuadrante OG.11/14" & vbNewLine & vbNewLine & "Contestacion Solicitud " & solicitud & vbNewLine & vbNewLine & "Descarga el archivo en la carpeta definida en la APP", _
    ThisWorkbook.Path & "\CuadrAPP\Sol" & solicitud & ".cap" _
    , False)
    MsgEnvio respuesta, correo, "Contestacion Solicitud"
End If
End Sub
Sub ConstruirEnvioCuadrante(fila As Integer, correo As String, Ios As Boolean, solo As Boolean)
If correo <> "" And HC.Range("bt3") <> "" Then
    If Ios = True Then
        If HIMI.ChartObjects.Count > 0 Then
            For Each ch In HIMI.ChartObjects
                ch.Delete
            Next
        End If
        Application.EnableEvents = False
        HIMI.Range("n3") = fila
        HIMI.Activate
        HIMI.Calculate
        If HIMI.ChartObjects.Count > 0 Then
        For Each ch In HIMI.ChartObjects
            ch.Delete
        Next
    End If
        Dim rgExp As Range: Set rgExp = HIMI.Range("a1:i17")
        rgExp.CopyPicture Appearance:=xlScreen, Format:=xlBitmap
        With ActiveSheet.ChartObjects.Add(left:=rgExp.left, top:=rgExp.top, _
        Width:=rgExp.Width, Height:=rgExp.Height)
        .Name = "ChartVolumeMetricsDevEXPORT"
        .Activate
        End With
        CrearCarpetaApp
        ActiveChart.Paste
        ActiveSheet.ChartObjects("ChartVolumeMetricsDevEXPORT").Chart.Export ThisWorkbook.Path & "\CuadrAPP\Planificacion" & HC.Range("e3") & ".jpg"
        ActiveSheet.ChartObjects("ChartVolumeMetricsDevEXPORT").Delete
        HC.Activate
        respuesta = enviarcorreo(correo, "Planificaci|fffd|n de " & HC.Range("e3"), _
        "CUADRANTE APP.     Cuadrante OG.11/14" & vbNewLine & vbNewLine & "Planificaci|fffd|n de " & HC.Range("e3") & vbNewLine & "Si quieres realizar solicitudes y tu administrador te las admite dirigete a:" _
        & vbNewLine & "   https://sites.google.com/view/cuadranteog11-14/generador-de-codigos" & vbNewLine & " y dirige tu codigo a " & HC.Range("bt3"), _
        ThisWorkbook.Path & "\CuadrAPP\Planificacion" & HC.Range("e3") & ".jpg" _
        , False)
        If solo = True Then MsgEnvio respuesta, correo, "Envio de Planificacion"
    Else
        clave = UCase(HC.Range("cp" & fila)) 'TIP para encriptar
        HAPP.Range("a1:a15").NumberFormat = "@"
        HAPP.Range("a2") = Encriptar("DECODIFICADO1601", clave) 'Validacion
        'Mes ABS, Fecha de creacion, Origen y Version Cuadrante excel
        HAPP.Range("a3") = Encriptar(HC.Range("ba5") & "," & Format(Now(), "dd/mm/yyyy hh:mm:ss") & "," & HC.Range("bt3") & "," & HC.Range("k1"), clave)
        'Listar
        For s = 13 To HC.Range("bd8")
            codes = codes & Replace(HC.Cells(fila, s), Chr(10), "   ") & ","
            If HC.Cells(331, s) <> "" And HC.Cells(331, s) <> "E" Then tipos = tipos & HC.Cells(331, s) & "," Else tipos = tipos & 0 & ","
            If HC.Cells(322, s) = "F" Then Fest = Fest & "1" & "," Else Fest = Fest & "0" & ","
            HI1 = HI1 & Format(HC.Cells(337, s), "dd/mm/yyyy hh:mm") & ","
            HF1 = HF1 & Format(HC.Cells(338, s), "dd/mm/yyyy hh:mm") & ","
            HI2 = HI2 & Format(HC.Cells(339, s), "dd/mm/yyyy hh:mm") & ","
            HF2 = HF2 & Format(HC.Cells(340, s), "dd/mm/yyyy hh:mm") & ","
        Next
        HAPP.Range("a4") = Encriptar(codes, clave) ' Servicios
        HAPP.Range("a5") = Encriptar(tipos, clave) ' Tipos
        HAPP.Range("a6") = Encriptar(Fest, clave) ' Festivos
        HAPP.Range("a7") = Encriptar(HI1, clave) ' Hora inicio 1
        HAPP.Range("a8") = Encriptar(HF1, clave) ' Hora fin 1
        HAPP.Range("a9") = Encriptar(HI2, clave) ' Hora Inicio 2
        HAPP.Range("a10") = Encriptar(HF2, clave) ' Hora Fin 2
        'Datos de referencias
        If HC.Range("ct" & fila) = "" Then dat = "1 mes" & "," Else dat = HC.Range("ct" & fila) & "," ' Periodo de referencia
        dat = dat & HC.Range("cl" & fila) & "," 'Area
        dat = dat & Replace(HC.Range("aw364"), ",", ".") & "," 'Desviacion
        dat = dat & Replace(HC.Range("aw362"), ",", ".") & "," 'H.Ref
        dat = dat & Replace(HC.Range("aw363"), ",", ".") & "," 'H.Efectivas
        dat = dat & HC.Range("aw370") & "," ' M / T / N
        dat = dat & HC.Range("ay365") & "," ' Consideracion festiva
        dat = dat & HC.Range("ay366") & "," ' Consideracion nocturna
        dat = dat & HC.Range("ay369") & "," ' DSA pend
        dat = dat & HC.Range("aw367") & "," ' DF Pend
        dat = dat & HC.Range("aw368") & "," ' DSJ Pend
        dat = dat & HC.Range("ay375") & "," ' Servicios nocturnos anuales
        dat = dat & HC.Range("aw374") & "," ' Vacaciones
        dat = dat & HC.Range("aw393") & "," ' Asuntos Particulares
        HAPP.Range("a11") = Encriptar(dat, clave) ' Envios de datos de referencias
        'Permisos
        carac = HC.Range("cu" & fila)
        If InStr(carac, "#P") > 0 Then
            Permisos = Mid(carac, InStr(carac, "#P") + 2, 5)
            HAPP.Range("a12") = Encriptar(Permisos, clave) ' Permisos
            CrearArchivoCuadranteIndividualAPP
            respuesta = enviarcorreo(correo, "Planificaci|fffd|n de " & HC.Range("e3"), _
            "CUADRANTE APP.     Cuadrante OG.11/14" & vbNewLine & vbNewLine & "Planificaci|fffd|n de " & HC.Range("e3") & vbNewLine & vbNewLine & "Descarga el archivo en la carpeta definida en la APP", _
            ThisWorkbook.Path & "\CuadrAPP\Cuadrapp" & HC.Range("ba5") & ".cap" _
            , False)
            If solo = True Then MsgEnvio respuesta, correo, "Envio de Planificacion"
        Else
            msg = MsgBox("Esta persona no se ha definido para el uso del APP Movil.", vbCritical, "No se envia")
        End If
    End If
Else
    msg = MsgBox("Para enviar la planificacion se tienen que definir el correo electronico del destinatario y del remitente.", vbCritical, "No se envia")
End If
HAPP.Range("a1:a10000").ClearContents
Application.EnableEvents = True
End Sub
Sub CrearArchivoCuadranteIndividualAPP()
CrearCarpetaApp
Open ThisWorkbook.Path & "\CuadrAPP\Cuadrapp" & HC.Range("ba5") & ".cap" For Output As #1
Print #1, HAPP.Range("a1")
Print #1, HAPP.Range("a2")
Print #1, HAPP.Range("a3")
Print #1, HAPP.Range("a4")
Print #1, HAPP.Range("a5")
Print #1, HAPP.Range("a6")
Print #1, HAPP.Range("a7")
Print #1, HAPP.Range("a8")
Print #1, HAPP.Range("a9")
Print #1, HAPP.Range("a10")
Print #1, HAPP.Range("a11")
Print #1, HAPP.Range("a12")
Close #1
End Sub
Function Encriptar(Texto, Pass) As Variant
    'Encriptar = Texto
    For X = 1 To Len(Texto)
        Encriptar = Encriptar & Format(Asc(Mid(Texto, X, 1)) + Asc(Mid(Pass, (X - 1) Mod Len(Pass) + 1, 1)), "000")
        'Encriptar = Encriptar & Chr(Asc(Mid(Texto, X, 1)) + Asc(Mid(Pass, (X - 1) Mod Len(Pass) + 1, 1)))
    Next
End Function
Private Function EncriptarBasico(Texto)
For c = 1 To Len(Texto)
    EncriptarBasico = EncriptarBasico & Format(Asc(Chr(157 - Asc(Mid(Texto, c, 1)))), "000")
Next
End Function
Sub EnviarBolsa()
'Determinar personal al que se envia
For p = 14 To 313
    If HC.Range("cu" & p) <> "" Then
        cara = HC.Range("cu" & p)
        If InStr(cara, "#P") > 0 Then
            If Mid(cara, InStr(cara, "#P") + 6, 1) = 2 Then
                If InStr(cara, "#E") > 0 Then correos = correos & Mid(cara, InStr(cara, "#E") + 2, InStr(cara, "E#") - InStr(cara, "#E") - 2) & ";"
            End If
        End If
    End If
Next
MsgBox correos
CrearCarpetaApp
Open ThisWorkbook.Path & "\CuadrAPP\Bolsapp.cap" For Output As #1
 Print #1, EncriptarBasico("REG BOLSA")
For f = 1 To HAPP.Range("f10000").End(xlUp).Row
    If f = 1 Then GoTo siguiente
    If HAPP.Range("l" & f) = "No Enviada" Then HAPP.Range("l" & f) = "DISPONIBLE"
   Print #1, EncriptarBasico(HAPP.Range("h" & f) & "," & HAPP.Range("i" & f).Text & "," & HAPP.Range("j" & f).Text & "," & HAPP.Range("e" & f) & "," & HAPP.Range("l" & f))
siguiente:
Next
Close #1
respuesta = enviarcorreo(correos, "Actualizacion Bolsa de Servicios", "Bolsa de Servicios", ThisWorkbook.Path & "\CuadrAPP\Bolsapp.cap", True)
MsgEnvio respuesta, correos, "Envio de Bolsa"
End Sub

Sub CrearCarpetaApp()
If Dir(ThisWorkbook.Path & "\CuadrAPP", vbDirectory) <> "" Then
    'Carpeta ya creada
Else
    MkDir ThisWorkbook.Path & "\CuadrAPP"
End If
End Sub
Function checkenvios()
If HC.Range("bu5") = 6 Then
    checkenvios = True
ElseIf HC.Range("bt3") <> "" And HC.Range("bt4") <> "" Then
    checkenvios = True
Else
    checkenvios = False
End If
End Function
Attribute VB_Name = "AUTOGRABADOR"
Attribute VB_Base = "0{118D57ED-69DF-4941-84CC-A7D3AD4AD40B}{0A571830-070D-412C-BC6C-A902E9C08A99}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Dim FAG(90)
Dim corriendo
Public modo
Sub ACTUALIZA()
CheckPruebas.Visible = True
FrameFechas.Visible = False
f = HN.Range("al1")
serv = 0
For s = 1 To 90
    If HBDN.Range("b" & f + s) = "SERVICIO" And HBDN.Range("c" & f + s).Interior.ColorIndex = 35 Then
        FAG(serv) = f + s
        serv = serv + 1
    End If
Next
If serv > 0 Then
    If serv > 1 Then Plural = " Servicios..." Else Plural = " Servicio..."
    LabelEstado.Caption = "Listo para grabar " & serv & Plural & vbCrLf & "Pulsa Iniciar para comenzar el Proceso."
    BtnIniciar.Enabled = True
Else
    LabelEstado.Caption = "No hay Servicios preparados para ser grabados."
    LabelEstado.ForeColor = RGB(255, 0, 0)
    BtnIniciar.Enabled = False
End If
End Sub
Sub GrabaUno(fila)
CheckPruebas.Visible = True
FrameFechas.Visible = False
LabelEstado.Caption = "Listo para grabar el Servicio Seleccionado..." & vbCrLf & "Pulsa Iniciar para comenzar el Proceso."
FAG(0) = fila
BtnIniciar.Enabled = True
End Sub
Private Sub BtnCodigosSigo_Click()
CATCODIGOSIGO.Show
End Sub
Private Sub BtnIniciar_Click()
On Error Resume Next
Dim wsh As Object
Dim waitonreturn As Boolean: waitonreturn = True
Dim windowsstyle As Integer: windowsstyle = 1
If modo = "PAPELETAS" Then
    On Error Resume Next
    LabelEstado.Caption = LabelEstado.Caption & vbCrLf & "Iniciando..."
    For servs = 0 To 90
        HAG.Range("a" & servs + 75) = FAG(servs)
    Next
    HAG.Range("b1") = "B5:B15"
    HAG.Range("b2") = "V3:AC81"
    HAG.Range("b22:b25").Value = 0
    CARPETA = Environ("LOCALAPPDATA") & "\Temp"
    Open CARPETA & "\Config.cfg" For Output As #1
    Print #1, ThisWorkbook.Name
    Print #1, "AG"
    Close #1
    Application.Calculation = xlCalculationAutomatic
    Set wsh = VBA.CreateObject("Wscript.shell")
    corriendo = 1
    wsh.Run CARPETA & "\Autoprenox.exe", windowsstyle, waitonreturn
    RestaurarTamaObj
    corriendo = 0
    Unload Me
ElseIf modo = "PLANI INDIVIDUAL" Then
    'Comprobar errores
    If HAG.Range("a450") = "" Then
        msg = MsgBox("Tienes que capturar los codigos de SIGO antes de continuar. Entra en el catalogo CODIGOS SIGO de esta ventana.", vbCritical, "No esta todo listo")
        GoTo fin
    End If
    If IsDate(PDP) = False Or IsDate(UDP) = False Or IsDate(PDS) = False Or IsDate(UDS) = False Then
        msg = MsgBox("Las fechas estan mal establecidas o no tienen el formato requerido.", vbCritical, "Revisar las fechas")
        GoTo fin
    Else
        HAG.Range("b316") = CDbl(CDate(PDP))
        HAG.Range("b317") = CDbl(CDate(UDP))
        HAG.Range("b318") = CDbl(CDate(PDS))
        HAG.Range("b319") = CDbl(CDate(UDS))
    End If
    
    If HAG.Range("b316") < HC.Range("bd4") Or HAG.Range("b317") > HC.Range("bd5") Then
        msg = MsgBox("Solo se pueden planificar dias que se encuentren en el Cuadrante Actual.", vbCritical, "Revisar las fechas")
    ElseIf HAG.Range("b316") < HAG.Range("b318") Or HAG.Range("b317") > HAG.Range("b319") Or HAG.Range("b316") > HAG.Range("b317") Then
        msg = MsgBox("Los dias a planificar tienen que estar dentro del cuadrante de planificacion de SIGO.", vbCritical, "Revisar las fechas")
    Else
        'Arrancando el autograbador de planificacion
        HAG.Range("b1") = "B301:B311"
        HAG.Range("b2") = "V303:AC324"
        LabelEstado.Caption = LabelEstado.Caption & vbCrLf & "Iniciando..."
        HAG.Range("a327") = ActiveCell.Row
        HAG.Range("d455:d754").ClearContents
        HAG.ASIGO
        Application.Calculation = xlCalculationAutomatic
        CARPETA = Environ("LOCALAPPDATA") & "\Temp"
        Open CARPETA & "\Config.cfg" For Output As #1
        Print #1, ThisWorkbook.Name
        Print #1, "AG"
        Close #1
        HAG.Range("c321") = 0
        HAG.Range("b322") = 0
        HAG.Range("c331") = 1
        HAG.Range("b325") = 0
        Set wsh = VBA.CreateObject("Wscript.shell")
        corriendo = 1
        wsh.Run CARPETA & "\Autoprenox.exe", windowsstyle, waitonreturn
        RestaurarTamaObj
        HC.CVisual HC.Range("m13").ColumnWidth
        corriendo = 0
        Unload Me
    End If
fin:
ElseIf modo = "PLANI" Then
    'Comprobar errores
    If HAG.Range("a450") = "" Then
        msg = MsgBox("Tienes que capturar los codigos de SIGO antes de continuar. Entra en el catalogo CODIGOS SIGO de esta ventana.", vbCritical, "No esta todo listo")
        GoTo fin2
    End If

    If IsDate(PDP) = False Or IsDate(UDP) = False Or IsDate(PDS) = False Or IsDate(UDS) = False Then
        msg = MsgBox("Las fechas estan mal establecidas o no tienen el formato requerido.", vbCritical, "Revisar las fechas")
        GoTo fin2
    Else
        HAG.Range("b316") = CDbl(CDate(PDP))
        HAG.Range("b317") = CDbl(CDate(UDP))
        HAG.Range("b318") = CDbl(CDate(PDS))
        HAG.Range("b319") = CDbl(CDate(UDS))
    End If

    If HAG.Range("b316") < HC.Range("bd4") Or HAG.Range("b317") > HC.Range("bd5") Then
        msg = MsgBox("Solo se pueden planificar dias que se encuentren en el Cuadrante Actual.", vbCritical, "Revisar las fechas")
    ElseIf HAG.Range("b316") < HAG.Range("b318") Or HAG.Range("b317") > HAG.Range("b319") Or HAG.Range("b316") > HAG.Range("b317") Then
        msg = MsgBox("Los dias a planificar tienen que estar dentro del cuadrante de planificacion de SIGO.", vbCritical, "Revisar las fechas")
    Else
        'Arrancando el autograbador de planificacion
        HAG.Range("b1") = "B301:B311"
        HAG.Range("b2") = "V303:AC324"
        LabelEstado.Caption = LabelEstado.Caption & vbCrLf & "Iniciando..."
        HAG.Range("d455:d754").ClearContents
        For p = 0 To ListPersonal.ListCount - 1
            If ListPersonal.Selected(p) = True Then
                HAG.Range("d" & 455 + pers) = ListPersonal.List(p, 2)
                pers = pers + 1
            End If
        Next
        If HAG.Range("d455") <> "" Then
            CARPETA = Environ("LOCALAPPDATA") & "\Temp"
            Open CARPETA & "\Config.cfg" For Output As #1
            Print #1, ThisWorkbook.Name
            Print #1, "AG"
            Close #1
            HAG.Range("c321") = 0
            HAG.Range("b322") = 0
            HAG.Range("c331") = 1
            HAG.Range("b325") = 0
            Application.Calculation = xlCalculationAutomatic
            Application.EnableEvents = True
            HAG.Range("a327") = HAG.Range("d455")
            Set wsh = VBA.CreateObject("Wscript.shell")
            corriendo = 1
            wsh.Run CARPETA & "\Autoprenox.exe", windowsstyle, waitonreturn
            RestaurarTamaObj
            HC.CVisual HC.Range("m13").ColumnWidth
            corriendo = 0
            Unload Me
        Else
            msg = MsgBox("No hay personal seleccionado", vbCritical, "Selecciona personas")
        End If
    End If
fin2:
End If
End Sub

Private Sub BtnMulti_Click()
modo = "PLANI"
ActualizaPlanificacion
End Sub

Private Sub CheckTodos_Click()
If ListPersonal.ListCount > 0 Then
    For t = 0 To ListPersonal.ListCount - 1
        ListPersonal.Selected(t) = CheckTodos
    Next
End If
End Sub

Private Sub ListArea_Change()
If ListArea = "TODAS" Then
    For t = 0 To ListPersonal.ListCount - 1
        ListPersonal.Selected(t) = True
    Next
Else
    For t = 0 To ListPersonal.ListCount - 1
        If ListPersonal.List(t, 0) = ListArea Then ListPersonal.Selected(t) = True Else ListPersonal.Selected(t) = False
    Next
End If
End Sub
Private Sub UserForm_QueryClose(Cancel As Integer, CloseMode As Integer)
If corriendo = 0 Then
    If modo = "PAPELETAS" Then
        'HN.Refresca
        Application.EnableEvents = True
        Application.Calculation = xlCalculationAutomatic
    End If
Else
    Cancel = True
    msg = MsgBox("Tienes que cerrar la ventana del autograbador", vbCritical, "Autograbador en curso")
End If
End Sub
Sub ActualizaPlanificacion()
LabelEstado.Caption = "Programando la AutoPlanificacin a SIGO." & vbCrLf & "Pulsa en Iniciar cuando este todo listo"
If HC.Range("ba6") = 11 Or HC.Range("ba6") = 12 Or HC.Range("ba6") = 1 Then
    LabelEstado.Caption = LabelEstado.Caption & vbCrLf & "PRESTAR ATENCION A LAS FECHAS DE LOS MESES DE NOVIEMBRE A DICIEMBRE. Los dias de planificacion pueden no coincidir con los dias del cuadrante."
End If
CheckPruebas.Visible = False
CheckOmitirDAS.Visible = True
ListPersonal.Clear
If modo = "PLANI INDIVIDUAL" Then
    AUTOGRABADOR.Width = 381.75
ElseIf modo = "PLANI" Then
    LabelMulti.Visible = False
    BtnMulti.Visible = False
    AUTOGRABADOR.Width = 713.25
    If HCON.Range("bk2") > 2 Then
        ListArea.List = HCON.Range("bk5:bk" & 4 + HCON.Range("bk2") - 1).Value
    Else
        ListArea.Enabled = False
    End If
    For p = 14 To 313
        If HC.Range("do" & p) <> "" Then
            ListPersonal.AddItem
            ListPersonal.List(f, 0) = HC.Range("cl" & p)
            ListPersonal.List(f, 1) = HC.Range("do" & p)
            ListPersonal.List(f, 2) = p
            f = f + 1
        End If
    Next
End If
FrameFechas.Visible = True

If HAG.Range("b316") >= HC.Range("bd4") And HAG.Range("b317") <= HC.Range("bd5") Then
    PDP = Format(HAG.Range("b316"), "d/mm/yyyy")
    UDP = Format(HAG.Range("b317"), "d/mm/yyyy")
Else
    PDP = Format(HC.Range("bd4"), "d/mm/yyyy")
    UDP = Format(HC.Range("bd5"), "d/mm/yyyy")
End If
HAG.Range("b316") = CDbl(CDate(PDP))
HAG.Range("b317") = CDbl(CDate(UDP))
If HAG.Range("b318") <= HAG.Range("b316") And HAG.Range("b319") >= HAG.Range("b317") Then
    PDS = Format(HAG.Range("b318"), "d/mm/yyyy")
    UDS = Format(HAG.Range("b319"), "d/mm/yyyy")
Else
    PDS = PDP
    UDS = UDP
End If
End Sub
Attribute VB_Name = "AUTOPLADOS"
Attribute VB_Base = "0{18A644B5-1AB5-4056-BBD7-C11A85A3EEC4}{CE590A44-3AFB-4DA4-B672-3B0AD3B94085}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Private Sub UserForm_Initialize()
ACTUALIZA
End Sub
Sub ACTUALIZA()
ListReglas.Clear
ListAreas.Clear
For n = 1 To 7
    ListReglas.AddItem (HC.Cells(362, n + 64).Value)
Next
For n = 0 To 8
    ListAreas.AddItem (HCON.Cells(n + 8, 5).Value)
Next
End Sub
Private Sub ListReglas_DblClick(ByVal Cancel As MSForms.ReturnBoolean)
HC.Range("bk361") = ListReglas.ListIndex + 1
AUTOPLAREGLA.Show
End Sub
Private Sub BtnEditar_Click()
If ListReglas.ListIndex >= 0 Then
    HC.Range("bk361") = ListReglas.ListIndex + 1
    AUTOPLAREGLA.Show
End If
End Sub
Private Sub BtnNuevo_Click()
For r = 1 To 8
    If r = 8 Then
        msg = MsgBox("No se pueden a|fffd|adir mas perfiles, edita o elimina alguno de los que hay", vbCritical, "...")
        GoTo fin
    End If
    If HC.Cells(362, 64 + r) = "" Then
        HC.Range(HC.Cells(362, 64 + r), HC.Cells(403, 64 + r)).ClearContents
        HC.Range("bk361") = r
        AUTOPLAREGLA.Show
        Exit For
        GoTo fin
    End If
Next
fin:
End Sub
Private Sub BtnEliminar_Click()
If ListReglas.ListIndex >= 0 Then
    msg = MsgBox("Eliminar el perfil de AutoPlanificacion seleccionado?", 36, "Eliminar perfil")
    If msg = 6 Then
        Perfil = ListReglas.ListIndex + 65
        HC.Range(HC.Cells(362, Perfil), HC.Cells(403, Perfil)).ClearContents
        ACTUALIZA
    End If
End If
End Sub
Private Sub AutoPlanificar_Click()
Application.EnableEvents = False
If ListReglas <> "" And ListAreas <> "" Then
    HC.Range("bk361") = ListReglas.ListIndex + 1
    HC.Range("bk362") = ListAreas.Value
    HC.Range("BI362:BI408").Value = HC.Range(HC.Cells(362, 64 + ListReglas.ListIndex + 1), HC.Cells(408, 64 + ListReglas.ListIndex + 1)).Value
    HC.Range("bw361:bw423").ClearContents
    If HC.Range("BI366") <> "" Then
        'Crear turno base sobre el turno seleccionado (NO AUTOMATICO)
            If HC.Range("bi408") <> 0 Then
            TurnoSel = HC.Range("bi408")
            For n = 0 To 55
                seqturno = HCON.Cells(TurnoSel + 306, 37 + n)
                If InStr(1, seqturno, Chr(10)) = 0 Then
                    Cod1 = seqturno
                    Cod2 = ""
                Else
                    Cod1 = Mid(seqturno, 1, InStr(1, seqturno, Chr(10)) - 1)
                    Cod2 = Mid(seqturno, InStr(1, seqturno, Chr(10)) + 1, 10)
                End If
                If Cod1 = HC.Range("bi405") Then
                    Cod1 = "%DS"
                ElseIf Cod1 = HC.Range("bi404") Then
                    Cod1 = "%S"
                ElseIf Cod1 = HC.Range("bi363") Then
                    Cod1 = "%M"
                ElseIf Cod1 = HC.Range("bi364") Then
                    Cod1 = "%T"
                ElseIf Cod1 = HC.Range("bi365") Then
                    Cod1 = "%N"
                Else
                    Cod1 = ""
                End If
                If Cod2 = HC.Range("bi365") Then
                    Cod2 = "N"
                Else
                    Cod2 = ""
                End If
                HC.Range("CF" & 361 + n) = Cod1 & Cod2
                If Cod1 <> "" Then ultimo = n + 1
            Next
        End If
        HC.Range("BW361:BW423").Value = HC.Range(HC.Cells(361, 75 + HC.Range("BI366")), HC.Cells(423, 75 + HC.Range("BI366"))).Value
        Unload Me
        If HC.Range("bi366") = 1 Or HC.Range("bi366") = 3 Or HC.Range("bi366") = 5 Then
            HC.Range("bw359") = 6
        ElseIf HC.Range("bi366") = 7 Or HC.Range("bi366") = 8 Then
            HC.Range("bw359") = 7
        ElseIf HC.Range("bi366") = 2 Or HC.Range("bi366") = 4 Or HC.Range("bi366") = 6 Then
            HC.Range("bw359") = 8
        ElseIf HC.Range("bi366") = 9 Then
            HC.Range("bw359") = CInt(ultimo / 7)
        End If
        AUTOPLARUN.Show
    Else
        Unload Me
    End If
End If
Application.EnableEvents = True
End Sub

Attribute VB_Name = "AUTOPLAREGLA"
Attribute VB_Base = "0{A5E4F2FD-5F99-4AA8-990C-8EA153A39B1B}{D912ACD1-6D44-4A4B-AA93-42F5C81CC454}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Private Sub BasicNoche_Change()
If BasicNoche <> "" Then
    FrameN1.Enabled = True
    FrameN2.Enabled = True
Else
    FrameN1.Enabled = False
    FrameN2.Enabled = False
End If
End Sub

Private Sub ListTipoTurno_Change()
If ListTipoTurno.ListIndex = 0 Then
    BasicFinde.Enabled = True
    BasicDoblete.Enabled = True
Else
    BasicFinde.Enabled = False
    BasicDoblete.Enabled = False
End If
End Sub

Private Sub UserForm_Initialize()
'Cofiguracion Basica
ListTipoTurno.List = HCON.Range("aj306:aj312").Value
BasicMa|fffd|ana.RowSource = "CON!k515:K" & HCON.Range("l513") + 515
BasicTarde.RowSource = "CON!k722:K" & HCON.Range("l720") + 722
BasicNoche.RowSource = "CON!k929:K" & HCON.Range("l927") + 929
BasicDS.RowSource = "CON!k1136:K" & HCON.Range("l1134") + 1136
BasicSaliente.RowSource = "CON!k1136:K" & HCON.Range("l1134") + 1136
BasicDF.RowSource = "CON!k1136:K" & HCON.Range("l1134") + 1136
BasicDSA.RowSource = "CON!k1136:K" & HCON.Range("l1134") + 1136
BasicFinde.RowSource = "c!bj369:bj371"
BasicVacaciones.RowSource = "CON!k1136:K" & HCON.Range("l1134") + 1136
BasicResolucion.RowSource = "c!bj372:bj375"
Codi1.RowSource = "CON!k515:K" & HCON.Range("l513") + 515
Codi2.RowSource = "CON!k515:K" & HCON.Range("l513") + 515
Codi3.RowSource = "CON!k722:K" & HCON.Range("l720") + 722
Codi4.RowSource = "CON!k722:K" & HCON.Range("l720") + 722
Codi5.RowSource = "CON!k929:K" & HCON.Range("l927") + 929
Codi6.RowSource = "CON!k929:K" & HCON.Range("l927") + 929
Min1.RowSource = "CON!bj4:bj10"
Min2.RowSource = "CON!bj4:bj10"
Min3.RowSource = "CON!bj4:bj10"
Min4.RowSource = "CON!bj4:bj10"
Min5.RowSource = "CON!bj4:bj10"
Min6.RowSource = "CON!bj4:bj10"
Max1.RowSource = "CON!bj4:bj10"
Max2.RowSource = "CON!bj4:bj10"
Max3.RowSource = "CON!bj4:bj10"
Max4.RowSource = "CON!bj4:bj10"
Max5.RowSource = "CON!bj4:bj10"
Max6.RowSource = "CON!bj4:bj10"

'ListPrioridad.RowSource = "C!bj404:bj407"
'Lectura Basica
Perfil = HC.Range("bk361") + 64
If InStr(1, HC.Cells(362, Perfil), " Grupos )") > 0 Then
    NombrePerfil.Value = Mid(HC.Cells(362, Perfil), 1, InStr(1, HC.Cells(362, Perfil), " Grupos )") - 5)
Else
    NombrePerfil.Value = HC.Cells(362, Perfil)
End If
ListTipoTurno.ListIndex = HC.Cells(408, Perfil)
BasicMa|fffd|ana.Value = HC.Cells(363, Perfil)
BasicTarde.Value = HC.Cells(364, Perfil)
BasicNoche.Value = HC.Cells(365, Perfil)
BasicDoblete = HC.Cells(368, Perfil)
BasicFinde = HC.Cells(369, Perfil)
BasicVacaciones = HC.Cells(371, Perfil)
BasicSituaciones = HC.Cells(370, Perfil)
BasicResolucion = HC.Cells(372, Perfil)
CheckAvanzada = HC.Cells(373, Perfil)
PostProceso = HC.Cells(367, Perfil)
CheckAvanzada_Change
BasicSituaciones_Click
BasicDS = HC.Cells(405, Perfil)
BasicSaliente = HC.Cells(404, Perfil)
BasicDF = HC.Cells(406, Perfil)
BasicDSA = HC.Cells(407, Perfil)

For r = 1 To 6
    AUTOPLAREGLA.Controls("codi" & r).Value = HC.Cells(373 + r, Perfil)
    AUTOPLAREGLA.Controls("min" & r).Value = HC.Cells(379 + r, Perfil)
    AUTOPLAREGLA.Controls("max" & r).Value = HC.Cells(385 + r, Perfil)
    For s = 1 To 7
        If Mid(HC.Cells(391 + r, Perfil), s, 1) = "S" Then
            AUTOPLAREGLA.Controls("checkbox" & (r - 1) * 7 + s) = True
        Else
            AUTOPLAREGLA.Controls("checkbox" & (r - 1) * 7 + s) = False
        End If
    Next
    AUTOPLAREGLA.Controls("textbox" & r).Value = HC.Cells(397 + r, Perfil)
Next
End Sub
Private Sub CheckAvanzada_Change()
If CheckAvanzada = True Then
    FrameAvanzada.Visible = True
    FrameBasic.ScrollBars = fmScrollBarsVertical
Else
    FrameAvanzada.Visible = False
    FrameBasic.ScrollTop = 1
    FrameBasic.ScrollBars = fmScrollBarsNone
End If
End Sub
Private Sub BasicSituaciones_Click()
If BasicSituaciones = True Then
    LDF.Enabled = True
    ldsa.Enabled = True
    BasicDF.Enabled = True
    BasicDSA.Enabled = True
Else
    LDF.Enabled = False
    ldsa.Enabled = False
    BasicDF.Enabled = False
    BasicDSA.Enabled = False
End If
End Sub
Private Sub BtnAceptar_Click()
Application.EnableEvents = False
Application.ScreenUpdating = False
Perfil = HC.Range("bk361") + 64
'Check fallos
If NombrePerfil = "" Then
    msg = MsgBox("Es necesario definir un nombre de perfil", vbCritical, "Revise los campos")
    GoTo fallo
End If
If BasicMa|fffd|ana = "" Or (BasicTarde = "" And BasicNoche = "") Then
    msg = MsgBox("Es necesario definir turno de ma|fffd|ana y de tarde o noche con servicios genericos", vbCritical, "Revise los campos")
    GoTo fallo
End If
If BasicDS = "" Or BasicVacaciones = "" Then
    msg = MsgBox("Es necesario definir los codigos del descanso semanal y de las vacaciones" & vbCrLf & vbCrLf & "Las vacaciones, logicamente, no se auto-planifican pero son necesarias para poder hacer los calculos mas correctamente.", vbCritical, "Revise los campos")
    GoTo fallo
End If
If BasicSituaciones = True And (BasicDF = "" Or BasicDSA = "") Then
    msg = MsgBox("Es necesario definir los codigos del descanso festivo y singularizado adicional", vbCritical, "Revise los campos")
    GoTo fallo
End If
If BasicFinde = "" And ListTipoTurno.ListIndex = 0 Then
    msg = MsgBox("Falta definir el descanso en fin de semana.", vbCritical, "Revise los campos")
    GoTo fallo
End If
If BasicNoche <> "" And BasicSaliente = "" Then
    msg = MsgBox("Falta definir el codigo del saliente nocturno.", vbCritical, "Revise los campos")
    GoTo fallo
End If
'Grabar perfil
HC.Cells(362, Perfil) = NombrePerfil.Value
HC.Cells(363, Perfil) = BasicMa|fffd|ana.Value
HC.Cells(364, Perfil) = BasicTarde.Value
HC.Cells(365, Perfil) = BasicNoche.Value
If ListTipoTurno.ListIndex = 0 Then
    HC.Cells(368, Perfil) = BasicDoblete
    HC.Cells(369, Perfil) = BasicFinde
Else
    HC.Cells(368, Perfil) = ""
    HC.Cells(369, Perfil) = ""
End If
HC.Cells(370, Perfil) = BasicSituaciones
HC.Cells(371, Perfil) = BasicVacaciones
HC.Cells(372, Perfil) = BasicResolucion
HC.Cells(373, Perfil) = CheckAvanzada
HC.Cells(404, Perfil) = BasicSaliente
HC.Cells(405, Perfil) = BasicDS
HC.Cells(406, Perfil) = BasicDF
HC.Cells(407, Perfil) = BasicDSA
HC.Cells(408, Perfil) = ListTipoTurno.ListIndex
If CheckAvanzada = True Then
    HC.Cells("367", Perfil) = PostProceso
    For r = 1 To 6
        HC.Cells(373 + r, Perfil) = AUTOPLAREGLA.Controls("codi" & r).Value
        HC.Cells(379 + r, Perfil) = AUTOPLAREGLA.Controls("min" & r).Value
        HC.Cells(385 + r, Perfil) = AUTOPLAREGLA.Controls("max" & r).Value
        SEMANA = ""
        For s = 1 To 7
            If AUTOPLAREGLA.Controls("checkbox" & (r - 1) * 7 + s) = True Then
                SEMANA = SEMANA & "S"
            Else
                SEMANA = SEMANA & "N"
            End If
        Next
        If SEMANA = "NNNNNNN" Then SEMANA = "SSSSSSS"
        HC.Cells(391 + r, Perfil) = SEMANA
        HC.Cells(397 + r, Perfil) = AUTOPLAREGLA.Controls("textbox" & r).Value
    Next
Else
    HC.Cells(367, Perfil) = False
    HC.Range(HC.Cells(374, Perfil), HC.Cells(403, Perfil)).ClearContents
End If
'AUTOSELECION DEL TURNO
If ListTipoTurno.ListIndex <> 0 Then
    HC.Cells(366, Perfil) = 9
'CASO MA|fffd|ANA TARDE NOCHE, DOBLETES 3SEM
ElseIf BasicMa|fffd|ana <> "" And BasicTarde <> "" And BasicNoche <> "" And BasicDoblete = True And BasicFinde = "3 semanas" Then
    HC.Cells(366, Perfil) = 3
'CASO MA|fffd|ANA TARDE NOCHE, DOBLETES 4SEM
ElseIf BasicMa|fffd|ana <> "" And BasicTarde <> "" And BasicNoche <> "" And BasicDoblete = True And BasicFinde = "4 semanas" Then
    HC.Cells(366, Perfil) = 4
'CASO MA|fffd|ANA TARDE, 3SEM
ElseIf BasicMa|fffd|ana <> "" And BasicTarde <> "" And BasicNoche = "" And BasicFinde = "3 semanas" Then
    HC.Cells(366, Perfil) = 1
'CASO MA|fffd|ANA TARDE, 4SEM
ElseIf BasicMa|fffd|ana <> "" And BasicTarde <> "" And BasicNoche = "" And BasicFinde = "4 semanas" Then
    HC.Cells(366, Perfil) = 2
'CASO MA|fffd|ANA TARDE NOCHE, SIN DOBLETES 3SEM
ElseIf BasicMa|fffd|ana <> "" And BasicTarde <> "" And BasicNoche <> "" And BasicDoblete = False And BasicFinde = "3 semanas" Then
    HC.Cells(366, Perfil) = 5
'CASO MA|fffd|ANA TARDE NOCHE, SIN DOBLETES 4SEM
ElseIf BasicMa|fffd|ana <> "" And BasicTarde <> "" And BasicNoche <> "" And BasicDoblete = False And BasicFinde = "4 semanas" Then
    HC.Cells(366, Perfil) = 6
'CASO MA|fffd|ANA TARDE NOCHE, SIN DEFINIR , DOBLETES
ElseIf BasicMa|fffd|ana <> "" And BasicTarde <> "" And BasicNoche <> "" And BasicDoblete = True And BasicFinde = "Sin definir" Then
    HC.Cells(366, Perfil) = 7
'CASO MA|fffd|ANA TARDE NOCHE, SIN DEFINIR , SIN DOBLETES
ElseIf BasicMa|fffd|ana <> "" And BasicTarde <> "" And BasicNoche <> "" And BasicDoblete = True And BasicFinde = "Sin definir" Then
    HC.Cells(366, Perfil) = 8
'CASO no es resoluble
Else
    HC.Cells(366, Perfil) = ""
    msg = MsgBox("Con estas opciones no se puede resolver una patron para autoplanificacion. Cambia algunas opciones.", vbExclamation, "No soportado")
    GoTo fallo:
End If
If HC.Cells(366, Perfil) = 1 Or HC.Cells(366, Perfil) = 3 Or HC.Cells(366, Perfil) = 5 Then
    HC.Cells(362, Perfil) = HC.Cells(362, Perfil) & " ( 6 Grupos )"
ElseIf HC.Cells(366, Perfil) = 2 Or HC.Cells(366, Perfil) = 4 Or HC.Cells(366, Perfil) = 6 Then
    HC.Cells(362, Perfil) = HC.Cells(362, Perfil) & " ( 8 Grupos )"
ElseIf HC.Cells(366, Perfil) = 7 Or HC.Cells(366, Perfil) = 8 Then
    HC.Cells(362, Perfil) = HC.Cells(362, Perfil) & " ( 7 Grupos )"
Else
    HC.Cells(362, Perfil) = HC.Cells(362, Perfil)
End If
If ListTipoTurno.ListIndex <> 0 Then msg = MsgBox("INFORMACION: Solo se contaran los codigos del turno seleccionado que coincidan con los servicios genericos definidos.", vbInformation, "Recordatorio")

AUTOPLADOS.ACTUALIZA
Unload Me
fallo:
Application.ScreenUpdating = True
Application.EnableEvents = True
End Sub
Attribute VB_Name = "AUTOPLARUN"
Attribute VB_Base = "0{23334E26-5931-4BAE-9F3E-19BDD171369A}{47E484D4-249A-4013-8AE2-A0E155F76F93}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Dim Ma|fffd|anas
Dim Tardes
Dim Noches
Dim p
Dim dia
Private Sub UserForm_Initialize()
Application.EnableEvents = False
Application.ScreenUpdating = False
Application.Calculation = xlCalculationManual
HC.GUARDARCUADRANTEMES
HC.Range("g11") = "TODAS" ' Restablecer se quitan filtros mediante el guardado
HC.Range("i11") = "TODOS"
Application.CutCopyMode = False
LProceso.Text = "Auto-Planificacion iniciada y cuadrante guardado en base de datos." & vbCrLf & "Pulsa en analizar para continuar..."
End Sub
Private Sub BtnAnalizar_Click()
Analizar
End Sub
Private Sub Analizar()
LProceso.Text = ""
Application.EnableEvents = False
Application.ScreenUpdating = False
HC.Range("DR14:DR313").ClearContents ' Borrar orden de autopla

If ComprobarTurno = 0 Then
    BtnAceptar.Visible = False
Else
    BtnAceptar.Caption = "Continuar"
    BtnAceptar.Enabled = True
    BtnAceptar.Visible = True
End If
Application.EnableEvents = True
Application.ScreenUpdating = True
End Sub
Private Sub Turnear()
Application.EnableEvents = False
Application.Calculation = xlCalculationManual
If HC.FilterMode = True Then HC.ShowAllData
TRABAJANDO.Textillo = "AUTOPLANIFICANDO"
TRABAJANDO.Show 0
TRABAJANDO.Repaint
Application.ScreenUpdating = False
CopiarTurno
equitatividad
If HC.Range("bi373") = True Then Avanzado
If HC.Range("BI370") = True Then
    ResolverSituaciones
    'equitatividad
End If
If HC.Range("bi367") = True Then equitatividad
Remplazar
HC.Range("E14:DT313").Sort key1:=HC.Range("CI14"), order1:=xlAscending, header:=xlNo, OrderCustom:=1, MatchCase:=False, Orientation:=xlTopToBottom, DataOption1:=xlSortNormal
calcular
LProceso.Text = "Todos los procesos se han finalizado correctamente" & vbCrLf & vbCrLf & "Antes de pulsar en Terminar puedes comprobar si la autoplanificacion es adecuada." & _
 vbCrLf & vbCrLf & "Hacer modificaciones sobre el perfil o reasignar los tama|fffd|os de grupos puede ser conveniente para obtener mejores resultados en la autoplanificacion."
BtnAceptar.Caption = "Terminar"
HC.AplicaFiltrosVer
TRABAJANDO.Hide

BtnDeshacer.Visible = True
BtnAnalizar.Visible = False
End Sub
Private Sub BtnDeshacer_Click()
Application.ScreenUpdating = False
HC.recupar_mes
BtnAceptar.Visible = False
BtnAceptar.Caption = ""
BtnAnalizar.Visible = True
BtnDeshacer.Visible = False
LProceso.Text = "Restablecido."
End Sub
Private Sub UserForm_QueryClose(Cancel As Integer, CloseMode As Integer)
If CloseMode = 0 Then
    If BtnAceptar.Caption = "Terminar" Then
        msg = MsgBox("Quieres conservar esta planificacion?", vbYesNo, "Salir de Autoplanificacion")
        If msg = 7 Then
            Application.ScreenUpdating = False
            HC.recupar_mes
        End If
    End If
End If
Application.EnableEvents = True
Application.ScreenUpdating = True
End Sub
Private Sub BtnAceptar_Click()
If BtnAceptar.Caption = "Reintentar" Then
    Analizar
ElseIf BtnAceptar.Caption = "Continuar" Then
    Turnear
ElseIf BtnAceptar.Caption = "Terminar" Then
    Unload Me
End If
End Sub
Function ComprobarTurno()
are = HC.Range("bk362").Value
Cuantos = 0
bien = 0
For p = 14 To 313
    If HC.Range("cl" & p) = are And HC.Range("h" & p) <> "" Then
        If Val(Val(HC.Range("dc" & p))) >= 1 And Val(Val(HC.Range("dc" & p))) <= HC.Range("bw359") And Val(Val(HC.Range("dc" & p))) > 0 Then
            bien = bien + 1
        End If
        Cuantos = Cuantos + 1
    End If
Next
LProceso.Text = LProceso.Text & "Comprobando asignaciones a grupos..." & vbCrLf
For grupos = 1 To HC.Range("bw359")
    Grupo = 0
    For p = 14 To 313
        If Val(Val(HC.Range("dc" & p))) = grupos Then Grupo = Grupo + 1
    Next p
    LProceso.Text = LProceso.Text & vbCrLf & "Grupo " & grupos & " = " & Grupo
Next grupos
If bien = 0 Then
    LProceso.Text = LProceso.Text & vbCrLf & vbCrLf & "NO SE PUEDE CONTINUAR.     No hay personas de este Area con un grupo asignado." & vbCrLf & vbCrLf & _
    "En la columa de datos marca la opcion GRUPO para despues asignar un numero del 1 al " & HC.Range("bw359") & ", que ser|fffd| el orden de acople del turno base calculado." & vbCrLf & vbCrLf & _
    "Puedes asignar ahora los grupos y continuar pulsando Analizar..."
    ComprobarTurno = 0
Else
    LProceso.Text = LProceso.Text & vbCrLf & vbCrLf & "Asignados para planificar " & bien & " de " & Cuantos & " personas."
    ComprobarTurno = 1
    If bien < Cuantos Then
        LProceso.Text = LProceso.Text & vbCrLf & vbCrLf & "Hay personal que no tiene un grupo asignado. Para esta configuracion de autoplanificacion se necesitan " & HC.Range("bw359") & " grupos, repartidos lo mas equitativamente posible"
        ComprobarTurno = 2
    Else
        LProceso.Text = LProceso.Text & vbCrLf & vbCrLf & "Todo correcto"
    End If
    LProceso.Text = LProceso.Text & vbCrLf & vbCrLf & "Ahora puedes reasignar los grupos y pulsar analizar nuevamente  o  continuar para planificar con los datos actuales"
End If
End Function

Private Sub CopiarTurno()
are = HC.Range("bk362").Value
nuevogrupo = 1
For p = 14 To 313
    If HC.Range("cl" & p) = are And HC.Range("h" & p) <> "" And Val(Val(HC.Range("dc" & p))) >= 1 And Val(Val(HC.Range("dc" & p))) <= HC.Range("bw359") Then
        InicioTurno = ((HC.Range("m13").Value - 42065) / 7 + Val(Val(HC.Range("dc" & p))) - 1) Mod HC.Range("bw359")
        Correlativo = 361 + InicioTurno * 7
        For dia = 13 To HC.Range("bd6") + 12
            If Correlativo = 361 + HC.Range("bw359") * 7 Then Correlativo = 361
            If HC.Cells(p, dia) = "" Then
                If HC.Cells(p, dia + 1) = HC.Range("bi371") And (HC.Range("bw" & Correlativo) = "%T" Or HC.Range("bw" & Correlativo) = "%N" Or HC.Range("bw" & Correlativo) = "%MN") Then
                    HC.Cells(p, dia) = "%M"
                ElseIf HC.Cells(p, dia + 2) = HC.Range("bi371") And HC.Range("bw" & Correlativo) = "%DS" Then
                    HC.Cells(p, dia) = ""
                Else
                    HC.Cells(p, dia) = HC.Range("bw" & Correlativo)
                End If
                HC.Cells(p, dia + 38) = "@A"
            End If
            Correlativo = Correlativo + 1
        Next dia
        HC.Range("DR" & p) = 0
    End If
Next p
End Sub
Private Sub equitatividad()
are = HC.Range("bk362").Value
For dia = 13 To HC.Range("bd6") + 12
    Ma|fffd|anas = 0
    Tardes = 0
    If HC.Range("bi365") <> "" Then Noches = 0 Else Noches = 300
    'Recuento
    HC.Range("e14:dT313").Sort key1:=HC.Range("DR14"), order1:=xlAscending, header:=xlNo, OrderCustom:=1, MatchCase:=False, Orientation:=xlTopToBottom, DataOption1:=xlSortNormal
    For p = 14 To 313
       If HC.Range("cl" & p) = are And HC.Range("h" & p) <> "" And Val(Val(HC.Range("dc" & p))) >= 1 And Val(Val(HC.Range("dc" & p))) <= HC.Range("bw359") Then
            If HC.Cells(p, dia) = "%M" Or HC.Cells(p, dia) = "%MN" Then Ma|fffd|anas = Ma|fffd|anas + 1
            If HC.Cells(p, dia) = "%T" Then Tardes = Tardes + 1
            If HC.Cells(p, dia) = "%N" Or HC.Cells(p, dia) = "%MN" Then Noches = Noches + 1
        End If
    Next p
    'Reforzar ma|fffd|anas
    If HC.Range("bi372") = "Ma|fffd|ana" Then
        'Ma|fffd|anas por tardes
            For p = 14 To 313
            If HC.Range("cl" & p) = are And HC.Range("h" & p) <> "" And Val(Val(HC.Range("dc" & p))) >= 1 And Val(Val(HC.Range("dc" & p))) <= HC.Range("bw359") Then
                If Tardes = 0 Then Tardes = 1
                If Noches = 0 Then Noches = 1
                If Ma|fffd|anas / Tardes < 1.2 And HC.Cells(p, dia) = "%T" And HC.Cells(p, dia - 1) <> "%DS" Then
                    HC.Cells(p, dia) = "%M"
                    Ma|fffd|anas = Ma|fffd|anas + 1
                    Tardes = Tardes - 1
                    HC.Range("DR" & p) = HC.Range("DR" & p) + 1
        'Ma|fffd|anas por noches
                ElseIf Ma|fffd|anas / Noches < 1.2 And HC.Cells(p, dia) = "%N" And HC.Cells(p, dia - 1) <> "%N" And HC.Cells(p, dia - 1) <> "%MN" Then
                    HC.Cells(p, dia) = "%M"
                    Ma|fffd|anas = Ma|fffd|anas + 1
                    Noches = Noches - 1
                    HC.Range("DR" & p) = HC.Range("DR" & p) + 1
                End If
            End If
            Next p
        'Ma|fffd|anas por tardes segunda vuelta
            If Tardes = 0 Then Tardes = 1
            If Ma|fffd|anas / Tardes < 1.2 Then ' quitar tardes con descanso anterior
                For p = 14 To 313
                If HC.Range("cl" & p) = are And HC.Range("h" & p) <> "" And Val(Val(HC.Range("dc" & p))) >= 1 And Val(Val(HC.Range("dc" & p))) <= HC.Range("bw359") Then
                    If Ma|fffd|anas / Tardes < 1.2 And HC.Cells(p, dia) = "%T" Then
                        HC.Cells(p, dia) = "%M"
                        Ma|fffd|anas = Ma|fffd|anas + 1
                        Tardes = Tardes - 1
                        HC.Range("DR" & p) = HC.Range("DR" & p) + 1
                    End If
                End If
                Next p
            End If
    'Reforzar tardes
    ElseIf HC.Range("bi372") = "Tarde" Then
        ' Tardes por ma|fffd|anas
            For p = 14 To 313
            If HC.Range("cl" & p) = are And HC.Range("h" & p) <> "" And Val(Val(HC.Range("dc" & p))) >= 1 And Val(Val(HC.Range("dc" & p))) <= HC.Range("bw359") Then
                If Ma|fffd|anas = 0 Then Ma|fffd|anas = 1
                If Noches = 0 Then Noches = 1
                If Tardes / Ma|fffd|anas < 1.2 And HC.Cells(p, dia) = "%M" And HC.Cells(p, dia + 1) <> "%DS" And HC.Cells(p, dia + 1) <> HC.Range("bi371") Then
                    HC.Cells(p, dia) = "%T"
                    Tardes = Tardes + 1
                    Ma|fffd|anas = Ma|fffd|anas - 1
                    HC.Range("DR" & p) = HC.Range("DR" & p) + 1
         'Tardes por noches
                ElseIf Tardes / Noches < 1.2 And HC.Cells(p, dia) = "%N" And HC.Cells(p, dia - 1) <> "%N" And HC.Cells(p, dia - 1) <> "%MN" Then
                    HC.Cells(p, dia) = "%T"
                    Tardes = Tardes + 1
                    Noches = Noches - 1
                    HC.Range("DR" & p) = HC.Range("DR" & p) + 1
                End If
            End If
            Next p
    'Reforzar noches
    ElseIf HC.Range("bi372") = "Noche" Then
        ' Noches por ma|fffd|anas
            For p = 14 To 313
            If HC.Range("cl" & p) = are And HC.Range("h" & p) <> "" And Val(Val(HC.Range("dc" & p))) >= 1 And Val(Val(HC.Range("dc" & p))) <= HC.Range("bw359") And HC.Cells(p, dia + 1) <> HC.Range("bi371") Then
                If Ma|fffd|anas = 0 Then Ma|fffd|anas = 1
                If Tardes = 0 Then Tardes = 1
                If Noches / Ma|fffd|anas < 1.2 And HC.Cells(p, dia) = "%M" And HC.Cells(p, dia + 1) = "%N" Then
                    HC.Cells(p, dia) = "%N"
                    Noches = Noches + 1
                    Ma|fffd|anas = Ma|fffd|anas - 1
                    HC.Range("DR" & p) = HC.Range("DR" & p) + 1
         'Noches por tardes
                ElseIf Noches / Tardes < 1.2 And HC.Cells(p, dia) = "%T" And HC.Cells(p, dia + 1) = "%N" Then
                    HC.Cells(p, dia) = "%N"
                    Tardes = Tardes + 1
                    Noches = Noches - 1
                    HC.Range("DR" & p) = HC.Range("DR" & p) + 1
                End If
            End If
            Next p
    'Lo mas equitativo posible
    ElseIf HC.Range("bi372") = "Mas equitativo" Then
            For p = 14 To 313
                If HC.Range("cl" & p) = are And HC.Range("h" & p) <> "" And Val(HC.Range("dc" & p)) >= 1 And Val(HC.Range("dc" & p)) <= HC.Range("bw359") Then
                    If Noches < Ma|fffd|anas And Noches < Tardes Then
                        NochesMa|fffd|anas
                        NochesTardes
                        If Ma|fffd|anas < Tardes Then
                            Ma|fffd|anasTardes
                        ElseIf Tardes < Ma|fffd|anas Then
                            TardesMa|fffd|anas
                        End If
                    ElseIf Tardes < Ma|fffd|anas And Tardes < Noches Then
                        TardesMa|fffd|anas
                        TardesNoches
                        If Ma|fffd|anas < Noches Then
                            Ma|fffd|anasNoches
                        ElseIf Noches < Ma|fffd|anas Then
                            NochesMa|fffd|anas
                        End If
                    ElseIf Ma|fffd|anas < Tardes And Ma|fffd|anas < Noches Then
                        Ma|fffd|anasTardes
                        Ma|fffd|anasNoches
                        If Noches < Tardes Then
                            NochesTardes
                        ElseIf Tardes < Noches Then
                            TardesNoches
                        End If
                    ElseIf Noches < Ma|fffd|anas Then
                        NochesMa|fffd|anas
                    ElseIf Noches < Tardes Then
                        NochesTardes
                    ElseIf Tardes < Ma|fffd|anas Then
                        TardesMa|fffd|anas
                    ElseIf Tardes < Noches Then
                        TardesNoches
                    ElseIf Ma|fffd|anas < Tardes Then
                        Ma|fffd|anasTardes
                    ElseIf Ma|fffd|anas < Noches Then
                        Ma|fffd|anasNoches
                    End If
                End If
            Next p
    End If
Next dia
End Sub
Private Sub Ma|fffd|anasTardes()
If HC.Cells(p, dia) = "%T" And HC.Cells(p, dia - 1) <> "%DS" Then
    HC.Cells(p, dia) = "%M"
    Ma|fffd|anas = Ma|fffd|anas + 1
    Tardes = Tardes - 1
    HC.Range("DR" & p) = HC.Range("DR" & p) + 1
End If
End Sub
Private Sub Ma|fffd|anasNoches()
If HC.Cells(p, dia) = "%N" And HC.Cells(p, dia - 1) <> "%N" And HC.Cells(p, dia - 1) <> "%MN" And HC.Cells(p, dia + 1) = "%N" Then
    HC.Cells(p, dia) = "%M"
    Ma|fffd|anas = Ma|fffd|anas + 1
    Noches = Noches - 1
    HC.Range("DR" & p) = HC.Range("DR" & p) + 1
End If
End Sub
Private Sub TardesMa|fffd|anas()
If HC.Cells(p, dia) = "%M" And HC.Cells(p, dia + 1) <> "%DS" And HC.Cells(p, dia + 1) <> "%MN" And HC.Cells(p, dia + 1) <> HC.Range("bi371") Then
    HC.Cells(p, dia) = "%T"
    Tardes = Tardes + 1
    Ma|fffd|anas = Ma|fffd|anas - 1
    HC.Range("DR" & p) = HC.Range("DR" & p) + 1
End If
End Sub
Private Sub TardesNoches()
If HC.Cells(p, dia) = "%N" And HC.Cells(p, dia - 1) <> "%N" And HC.Cells(p, dia - 1) <> "%MN" And HC.Cells(p, dia + 1) = "%N" Then
    HC.Cells(p, dia) = "%T"
    Tardes = Tardes + 1
    Noches = Noches - 1
    HC.Range("DR" & p) = HC.Range("DR" & p) + 1
End If
End Sub
Private Sub NochesMa|fffd|anas()
If HC.Cells(p, dia) = "%M" And HC.Cells(p, dia + 1) = "%N" And HC.Cells(p, dia + 1) <> HC.Range("bi371") Then
    HC.Cells(p, dia) = "%N"
    Noches = Noches + 1
    Ma|fffd|anas = Ma|fffd|anas - 1
    HC.Range("DR" & p) = HC.Range("DR" & p) + 1
End If
End Sub
Private Sub NochesTardes()
If HC.Cells(p, dia) = "%T" And HC.Cells(p, dia + 1) = "%N" Then
    HC.Cells(p, dia) = "%N"
    Noches = Noches + 1
    Tardes = Tardes - 1
    HC.Range("DR" & p) = HC.Range("DR" & p) + 1
End If
End Sub
Private Sub Avanzado()
are = HC.Range("bk362").Value
For Codi = 1 To 6
    If HC.Range("bi" & 373 + Codi) <> "" Then
        If Codi = 1 Or Codi = 2 Then TIPO = "M"
        If Codi = 3 Or Codi = 4 Then TIPO = "T"
        If Codi = 5 Or Codi = 6 Then TIPO = "N"
        If HC.Range("BI" & 379 + Codi) = "" Then MINIMUS = 0 Else MINIMUS = HC.Range("BI" & 379 + Codi)
        If HC.Range("BI" & 385 + Codi) = "" Or HC.Range("BI" & 385 + Codi) <= MINIMUS Then MAXIMUS = MINIMUS Else MAXIMUS = HC.Range("BI" & 385 + Codi)
        For dia = 13 To HC.Range("BD6") + 12
        If Mid(HC.Range("bi" & 391 + Codi), ((dia - 13) Mod 7) + 1, 1) = "N" Then GoTo siguiente
        If HC.Range("bi" & 397 + Codi) <> "" And InStr(1, HC.Range("bi" & 397 + Codi), "-" & Day(HC.Cells(13, dia)) & "-") = 0 Then GoTo siguiente
            HC.Range("e14:dT313").Sort key1:=HC.Range("DR14"), order1:=xlAscending, header:=xlNo, OrderCustom:=1, MatchCase:=False, Orientation:=xlTopToBottom, DataOption1:=xlSortNormal
            VECES = 0
            For p = 14 To 313
            If HC.Range("cl" & p) = are And HC.Range("h" & p) <> "" And Val(HC.Range("dc" & p)) >= 1 And Val(HC.Range("dc" & p)) <= HC.Range("bw359") Then
                If HC.Range("cl" & p) = are And VECES < MINUMUS Or VECES < MAXIMUS Then
                    If TIPO = "M" And (HC.Cells(p, dia) = "%M" Or HC.Cells(p, dia) = "%MN") Then
                        If HC.Cells(p, dia) = "%M" Then
                            HC.Cells(p, dia) = HC.Range("bi" & 373 + Codi)
                        Else
                            HC.Cells(p, dia) = HC.Range("bi" & 373 + Codi) & Chr(10) & "%$N"
                        End If
                        HC.Range("DR" & p) = HC.Range("DR" & p) + 1
                        VECES = VECES + 1
                    ElseIf TIPO = "T" And HC.Cells(p, dia) = "%T" Then
                        HC.Cells(p, dia) = HC.Range("bi" & 373 + Codi)
                        HC.Range("DR" & p) = HC.Range("DR" & p) + 1
                        VECES = VECES + 1
                    ElseIf TIPO = "N" And (HC.Cells(p, dia) = "%N" Or HC.Cells(p, dia) = "%MN") Then
                        If HC.Cells(p, dia) = "%N" Then
                            HC.Cells(p, dia) = HC.Range("bi" & 373 + Codi)
                        Else
                            HC.Cells(p, dia) = "%M" & Chr(10) & HC.Range("bi" & 373 + Codi)
                        End If
                        HC.Range("DR" & p) = HC.Range("DR" & p) + 1
                        VECES = VECES + 1
                    End If
                 End If
            End If
            Next p
siguiente:
        Next dia
    End If
Next Codi
End Sub
Private Sub ResolverSituaciones()
are = HC.Range("bk362").Value
HC.Range("dt14:du313").ClearContents
Cuantos = 0
For p = 14 To 313
If HC.Range("cl" & p) = are And HC.Range("h" & p) <> "" And Val(HC.Range("dc" & p)) >= 1 And Val(HC.Range("dc" & p)) <= HC.Range("bw359") Then
        'Reslover DF
        If HC.Range("DB" & p) < 0 Then HC.Range("DS" & p) = 0 Else HC.Range("DS" & p) = HC.Range("DB" & p)
        'Resolver DSA
        If HC.Range("cz" & p) > 2 Then
            HC.Range("DT" & p) = 2
        ElseIf HC.Range("cz" & p) < 0 Then
            HC.Range("DT" & p) = 0
        Else
            HC.Range("DT" & p) = HC.Range("cz" & p)
        End If
        Cuantos = Cuantos + 1
End If
Next p
HC.Range("E14:DT313").Sort key1:=HC.Range("DS14"), order1:=xlDescending, header:=xlNo, OrderCustom:=1, MatchCase:=False, Orientation:=xlTopToBottom, DataOption1:=xlSortNormal
For dia = 13 To HC.Range("bd6") + 12
    Festivos = Application.WorksheetFunction.CountIf(HC.Range(HC.Cells(322, dia), HC.Cells(322, 47)), "F")
    If Festivos > 0 Then PrimerFestivo = Application.WorksheetFunction.Match("F", HC.Range(HC.Cells(322, dia), HC.Cells(322, 47)), 0) + dia - 1 Else PrimerFestivo = 48
    HC.Range("E14:DT313").Sort key1:=HC.Range("DR14"), order1:=xlAscending, header:=xlNo, OrderCustom:=1, MatchCase:=False, Orientation:=xlTopToBottom, DataOption1:=xlSortNormal
    Vacaciones = 0
    For p = 14 To 313
        If HC.Range("cl" & p) = are And HC.Cells(p, dia) = HC.Range("bi371") Then Vacaciones = Vacaciones + 1
    Next p
    For p = 14 To 313
        If HC.Range("cl" & p) = are And HC.Range("h" & p) <> "" And Val(HC.Range("dc" & p)) >= 1 And Val(HC.Range("dc" & p)) <= HC.Range("bw359") Then
            SonDF = HC.Range("DS" & p)
            SonDSA = HC.Range("DT" & p)
            If (SonDF > Festivos Or dia >= PrimerFestivo) And SonDF > 0 And (HC.Cells(p, dia) = "%M" Or HC.Cells(p, dia) = "%T" Or (HC.Cells(p, dia) = "%N" And HC.Cells(p, dia - 1) <> "%N" And HC.Cells(p, dia - 1) = "%MN") Or HC.Cells(p, dia) = "") And (Application.WorksheetFunction.CountIf(HC.Range(HC.Cells(14, dia), HC.Cells(313, dia)), "%DSA") + Application.WorksheetFunction.CountIf(HC.Range(HC.Cells(14, dia), HC.Cells(313, dia)), "%DF") + (Vacaciones / 2)) < Int(Cuantos / 10) + 1 Then
                HC.Cells(p, dia) = "%DF"
                HC.Range("DS" & p) = HC.Range("DS" & p) - 1
                HC.Range("DR" & p) = HC.Range("DR" & p) + 1
            End If
            If SonDSA > 0 And (HC.Cells(p, dia) = "%M" Or HC.Cells(p, dia) = "%T" Or (HC.Cells(p, dia) = "%N" And HC.Cells(p, dia - 1) <> "%N" And HC.Cells(p, dia - 1) = "%MN") Or HC.Cells(p, dia) = "") And (Application.WorksheetFunction.CountIf(HC.Range(HC.Cells(14, dia), HC.Cells(313, dia)), "%DSA") + Application.WorksheetFunction.CountIf(HC.Range(HC.Cells(14, dia), HC.Cells(313, dia)), "%DF") + (Vacaciones / 2)) < Int(Cuantos / 10) + 1 Then
                HC.Cells(p, dia) = "%DSA"
                HC.Range("DT" & p) = HC.Range("DT" & p) - 1
                HC.Range("DR" & p) = HC.Range("DR" & p) + 1
             End If
        End If
    Next p
Next dia
fin:

End Sub
Private Sub Remplazar()
Dim CE As Range
For Each CE In HC.Range("m14:au313").Cells
    If CE = "%DS" Then CE = HC.Range("bi405")
    If CE = "%S" Then CE = HC.Range("bi404")
    If CE = "%DF" Then CE = HC.Range("bi406")
    If CE = "%DSA" Then CE = HC.Range("bi407")
    If CE = "%MN" Then CE = HC.Range("bi363") & Chr(10) & HC.Range("bi365")
    If CE = "%M" Then CE = HC.Range("bi363")
    If CE = "%T" Then CE = HC.Range("bi364")
    If CE = "%N" Then CE = HC.Range("bi365")
    If InStr(1, CE, "%M" & Chr(10)) > 0 Then CE = HC.Range("bi363") & Mid(CE, InStr(1, CE, "%M" & Chr(10)) + 2, 10)
    If InStr(1, CE, "%$N") > 1 Then CE = Mid(CE, 1, InStr(1, CE, "%$N") - 1) & HC.Range("bi365")
Next
End Sub
Private Sub calcular()
    HC.Refrescar 1
    HC.VerEstrategias
End Sub



Attribute VB_Name = "AYUDAPEQ"
Attribute VB_Base = "0{C7245705-BEC0-46F5-ADD8-224871133555}{D6954738-F63B-4C63-82D8-E4D97282F887}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Attribute VB_Name = "AyudaAPP"
Attribute VB_Base = "0{ED4C036D-4C5C-4BC0-B508-BCAF9990D02A}{742C93AB-0240-4940-BF58-E524EE3ECE8F}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Attribute VB_Name = "BOLSA"
Attribute VB_Base = "0{87E95D77-CF6C-4CEE-99B8-A9C8286A12C2}{13F318A9-672D-4DB5-B81D-3141CC24578A}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Private Sub ACTUALIZA()
Application.EnableEvents = False
ListaBolsa.Clear
EliminarCaducadas
HAPP.Range("f1").Calculate
For n = 1 To HAPP.Range("f10000").End(xlUp).Row
    If n = 1 Then GoTo siguiente
    ListaBolsa.AddItem
    ListaBolsa.List(n - 2, 0) = HAPP.Range("h" & n)
    ListaBolsa.List(n - 2, 1) = HAPP.Range("e" & n)
    ListaBolsa.List(n - 2, 2) = HAPP.Range("i" & n)
    ListaBolsa.List(n - 2, 3) = HAPP.Range("j" & n)
    ListaBolsa.List(n - 2, 4) = HAPP.Range("g" & n)
    ListaBolsa.List(n - 2, 5) = HAPP.Range("f" & n)
    ListaBolsa.List(n - 2, 6) = HAPP.Range("l" & n)
siguiente:
Next
Application.ScreenUpdating = True
Application.EnableEvents = True
End Sub
Private Sub BtnEliminar_Click()
If ListaBolsa.ListIndex >= 0 Then
    msg = MsgBox("Eliminar esta peticion de BOLSA?", vbYesNo, "ELIMINAR")
    If msg = 6 Then HAPP.Range("e" & ListaBolsa.ListIndex + 2 & ":l" & ListaBolsa.ListIndex + 2).Delete Shift:=xlUp
    ACTUALIZA
End If
End Sub
Private Sub BtnEnviar_Click()
msg = MsgBox("Recuerda que para no saturar los buzones de correos, tanto del administrador como de los usuarios suscritos, los envios se deben de hacer de una manera responsable." & vbCrLf & vbCrLf & "Quieres enviar la actualizacion de la BOLSA de Servicios al personal suscrito?", 68, "Uso del eMail")
If msg = 6 Then
    EnviarBolsa
    ACTUALIZA
End If
End Sub

Private Sub BtnResolver_Click()
If ListaBolsa.ListIndex >= 0 Then
    If SeleccionResolucion.ListIndex >= 0 Then
        HAPP.Range("l" & ListaBolsa.ListIndex + 2) = SeleccionResolucion
        ACTUALIZA
        SeleccionResolucion.ListIndex = -1
    Else
        msg = MsgBox("Selecciona un motivo de resolucion.", vbCritical, "")
    End If
Else
    msg = MsgBox("Selecciona una petici|fffd|n.", vbCritical, "")
End If
End Sub
Private Sub UserForm_Initialize()
SeleccionResolucion.AddItem "CAMBIO REALIZADO"
SeleccionResolucion.AddItem "CAMBIO NO DISPONIBLE"
SeleccionResolucion.AddItem "INCOMPATIBLE"
ACTUALIZA
End Sub
Private Sub EliminarCaducadas()
HAPP.Range("f1").Calculate
Application.ScreenUpdating = False
For n = 1 To HAPP.Range("f10000").End(xlUp).Row
    If n = 1 Then GoTo siguiente
    If HAPP.Range("i" & n) < Now() Then HAPP.Range("e" & n & ":l" & n).Delete Shift:=xlUp
siguiente:
Next
End Sub
Attribute VB_Name = "CAJONSERVICIOS"
Attribute VB_Base = "0{D815002B-79F6-4402-AFED-9B070DB2F4AA}{8C709F7D-634F-42A3-935D-541D00F94288}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Dim HayCambio
Dim auxiliar
Dim ColorComentario
Dim ListaMa
Dim ListaTa
Dim ListAno
Dim ListaSi
Dim mover
Private Sub BorraComentario_Click()
TextComentario = ""
    For Each aux In Selection.Offset(0, 38)
        If InStr(aux.Value, "@O#") > 0 Then
            aux.Value = Mid(aux.Value, 1, InStr(1, aux.Value, "@O#") - 1)
        End If
    Next
End Sub

Private Sub BtnCatalogoServ_Click()
Unload Me
CATSERVICIOS.Show
End Sub
Private Sub BtnColor_Click()
If BtnColor.SpecialEffect = fmSpecialEffectFlat Then
    ThisWorkbook.COLORSEL = ""
    FORMCOLORPICKER.Show
    If ThisWorkbook.COLORSEL <> "" Then
        ColorComentario = ThisWorkbook.COLORSEL
        BtnColorMuestra.BackColor = ColorComentario
        BtnColor.SpecialEffect = fmSpecialEffectSunken
    End If
Else
    BtnColor.SpecialEffect = fmSpecialEffectFlat
    BtnColorMuestra.BackColor = ThisWorkbook.Colors(2)
End If
End Sub

Private Sub BtnGenerarPapeletaPermiso_Click()
Me.Hide
MENUPAPELETA.ListModalidad.Clear
MENUPAPELETA.CheckVerano.Enabled = False
MENUPAPELETA.ListModalidad.AddItem ("VACACIONES")
MENUPAPELETA.ListModalidad.AddItem ("P. ASUNTOS PARTICULARES")
MENUPAPELETA.ListModalidad.AddItem ("P. FECHAS SE|fffd|ALADAS")
MENUPAPELETA.Nombre = HC.Range("cn" & ActiveCell.Row) & " " & HC.Range("co" & ActiveCell.Row) & ", " & HC.Range("cm" & ActiveCell.Row)
If HC.Range("ck" & ActiveCell.Row) = "GC" Then MENUPAPELETA.Empleo = "Guardia Civil" Else MENUPAPELETA.Empleo = HC.Range("ck" & ActiveCell.Row)
MENUPAPELETA.Tip = HC.Range("cp" & ActiveCell.Row)
MENUPAPELETA.Unidad = HCON.Range("d5")
MENUPAPELETA.Localizacion = HC.Range("cq" & ActiveCell.Row)
MENUPAPELETA.FechaEntrada = Format(Now(), "dd/mm/yyyy")
MENUPAPELETA.FechaSolicitud = Format(Now(), "dd/mm/yyyy")
If HC.Cells(331, ActiveCell.Column) = "10" Then MENUPAPELETA.ListModalidad.ListIndex = 0
If HC.Cells(331, ActiveCell.Column) = "11" Then MENUPAPELETA.ListModalidad.ListIndex = 2
If HC.Cells(331, ActiveCell.Column) = "12" Then MENUPAPELETA.ListModalidad.ListIndex = 1
For Cini = ActiveCell.Column To 12 Step -1
    If HC.Cells(329, Cini) <> HC.Cells(329, ActiveCell.Column) Then
        Cini = Cini + 1
        Exit For
    End If
Next
For CFin = ActiveCell.Column To 48
    If HC.Cells(329, CFin) <> HC.Cells(329, ActiveCell.Column) Then
        CFin = CFin - 1
        Exit For
    End If
Next
MENUPAPELETA.FechaInicio = Format(HC.Cells(13, Cini), "dd/mm/yyyy")
MENUPAPELETA.FechaFin = Format(HC.Cells(13, CFin), "dd/mm/yyyy")
If HC.Cells(13, Cini) >= DateSerial(HC.Range("ba4"), 6, 15) And HC.Cells(13, Cini) < DateSerial(HC.Range("ba4"), 9, 16) Then
    MENUPAPELETA.CheckVerano.Enabled = True
    MENUPAPELETA.CheckVerano = True
End If
MENUPAPELETA.Show
End Sub
Private Sub BtnNoValidar_Click()
If BtnOK.Enabled = False Then GoTo fin
'INVALIDAR CELDAS
Application.ScreenUpdating = False
Application.EnableEvents = False
Dim CVal As Range
For Each CVal In Selection.Cells
    fval = Application.WorksheetFunction.Match(HC.Range("cp" & CVal.Row), HVAL.Range("cd" & HC.Range("ay5") & ":cd" & HC.Range("ay6")), 0) + HC.Range("ay5") - 1
    HVAL.Cells(fval, CVal.Column - 12) = ""
    HVAL.Cells(fval, CVal.Column - 12 + 38) = ""
Next
For Each fila In Selection.Rows
    If fila.EntireRow.Hidden = False Then
        HC.Cambiar_Servicio fila.Row
    End If
Next
If CheckMantener = False Then
    Me.Hide
    HC.Range("bb371") = Me.top
    HC.Range("bb370") = Me.left
Else
    mover = 1
    ACTUALIZA
End If
Application.EnableEvents = True
Application.ScreenUpdating = True
fin:
End Sub
Private Sub BtnReduccion_Click()
If BtnOK.Enabled = False Then GoTo fin
If BtnReduccion.Value = True Then
    Reduccion.Visible = True
    LabelReduccion.Visible = True
Else
    Reduccion.Visible = False
    LabelReduccion.Visible = False
End If
fin:
End Sub
Private Sub BtnResValidacion_Click()
If BtnOK.Enabled = False Then GoTo fin
Application.EnableEvents = False
Application.ScreenUpdating = False
Dim CVal As Range
fval = Application.WorksheetFunction.Match(HC.Range("cp" & ActiveCell.Row), HVAL.Range("cd" & HC.Range("ay5") & ":cd" & HC.Range("ay6")), 0) + HC.Range("ay5") - 1
For Each CVal In Selection.Cells
    CVal.Value = HVAL.Cells(fval, CVal.Column - 12)
    HC.Cells(CVal.Row, CVal.Column + 38) = HVAL.Cells(fval, CVal.Column + 38 - 12)
Next
HC.Cambiar_Servicio ActiveCell.Row
mover = 1
ACTUALIZA
Application.EnableEvents = True
Application.ScreenUpdating = True
fin:
End Sub
Private Sub BtnValidar_Click()
If HC.Range("ay12") <> "" Then
    inp = InputBox("Contrase|fffd|a de SuperUsuario para validacion:", "Validacion protegida")
    If inp <> HC.Range("ay12").Text Then
        msg = MsgBox("La contrase|fffd|a de superusuario no es validad.", vbCritical, "Seguridad")
        GoTo no
    End If
End If
Application.EnableEvents = False
Application.ScreenUpdating = False
Dim CVal As Range
fval = Application.WorksheetFunction.Match(HC.Range("cp" & ActiveCell.Row), HVAL.Range("cd" & HC.Range("ay5") & ":cd" & HC.Range("ay6")), 0) + HC.Range("ay5") - 1
For Each CVal In Selection.Cells
    HVAL.Cells(fval, CVal.Column - 12) = CVal.Value
    HVAL.Cells(fval, CVal.Column + 38 - 12) = HC.Cells(CVal.Row, CVal.Column + 38)
Next
HVAL.Range("c" & HC.Range("ay5") - 1) = HC.Range("ay12")
HC.Cambiar_Servicio ActiveCell.Row
mover = 1
ACTUALIZA
Application.EnableEvents = True
Application.ScreenUpdating = True
no:
End Sub
Private Sub CheckCompensacion_click()
    If CheckCompensacion = True Then CheckCompensacion2 = False
End Sub
Private Sub CheckCompensacion2_click()
    If CheckCompensacion2 = True Then CheckCompensacion = False
End Sub
Private Sub CheckPNM_MouseDown(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
CheckPNT = False
CheckPNN = False
CheckPNS = False
End Sub
Private Sub CheckPNT_MouseDown(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
CheckPNM = False
CheckPNN = False
CheckPNS = False
End Sub
Private Sub CheckPNN_MouseDown(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
CheckPNM = False
CheckPNT = False
CheckPNS = False
End Sub
Private Sub CheckPNS_MouseDown(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
CheckPNM = False
CheckPNT = False
CheckPNN = False
End Sub
Private Sub CheckSM_Click()
If CheckSM = True Then CheckSusti = False
End Sub

Private Sub CheckSusti_Click()
If CheckSusti = True Then CheckSM = False
End Sub



Private Sub ListMA_KeyDown(ByVal KeyCode As MSForms.ReturnInteger, ByVal Shift As Integer)
If KeyCode = vbKeyDelete Then
    ListMA.ListIndex = -1
    Fserv1.Visible = False
    HI1 = ""
    HF1 = ""
    FServ2.Visible = False
    HI2 = ""
    HF2 = ""
End If
End Sub
Private Sub ListTA_KeyDown(ByVal KeyCode As MSForms.ReturnInteger, ByVal Shift As Integer)
If KeyCode = vbKeyDelete Then
    ListTA.ListIndex = -1
    Fserv1.Visible = False
    HI1 = ""
    HF1 = ""
    FServ2.Visible = False
    HI2 = ""
    HF2 = ""
End If
End Sub
Private Sub ListNO_KeyDown(ByVal KeyCode As MSForms.ReturnInteger, ByVal Shift As Integer)
If KeyCode = vbKeyDelete Then
    ListNO.ListIndex = -1
    Fserv1.Visible = False
    HI1 = ""
    HF1 = ""
    FServ2.Visible = False
    HI2 = ""
    HF2 = ""
End If
End Sub
Private Sub ListSi_KeyDown(ByVal KeyCode As MSForms.ReturnInteger, ByVal Shift As Integer)
If KeyCode = vbKeyDelete Then
    ListSI.ListIndex = -1
    FservSI.Visible = False
    HI1 = ""
    HF1 = ""
    FServ2.Visible = False
    HI2 = ""
    HF2 = ""
End If
End Sub
Private Sub Reduccion_KeyPress(ByVal KeyAscii As MSForms.ReturnInteger)
If KeyAscii = Asc(".") Then KeyAscii = Asc(",")
End Sub
Private Sub UserForm_Initialize()
On Error Resume Next
'Advertencia cuadrante sin uso
If HCON.Range("L513") >= 1 Then ListMA.RowSource = "con!K515:K" & HCON.Range("L513").Value + 514
If HCON.Range("L720") >= 1 Then ListTA.RowSource = "con!K722:K" & HCON.Range("L720").Value + 721
If HCON.Range("L927") >= 1 Then ListNO.RowSource = "con!K929:K" & HCON.Range("L927").Value + 928
If HCON.Range("L1134") >= 1 Then ListSI.RowSource = "con!K1136:K" & HCON.Range("L1134").Value + 1135
mover = 0
Ratonea
End Sub
Private Sub Ratonea()
'RATON---------------------------------
xpos = convertMouseToForm.left
ypos = convertMouseToForm.top
If ypos + Me.Height + 40 > ActiveWindow.Height Then ypos = ypos - Me.Height - 50
If xpos + Me.Width - Me.Width / 2 > ActiveWindow.Width Then xpos = ActiveWindow.Width - Me.Width + Me.Width / 2 - 30
If xpos < 0 Then xpos = 0
Me.top = ypos + 25
Me.left = xpos - Me.Width / 2
'---------------------------------------
End Sub
Sub ACTUALIZA()
On Error Resume Next
CheckNoValido = False
'prevencion formulario no visible
If HC.Range("bb371") < 0 Then HC.Range("bb371") = 10
If HC.Range("bb371") + 60 > Application.Height Then HC.Range("bb371") = Application.Height - Me.Height - 30
If HC.Range("bb370") < 0 Then HC.Range("bb370") = 10
If HC.Range("bb370") > Application.Width - Me.Width Then HC.Range("bb370") = Application.Width - Me.Width - 30
If Me.Visible = False Then
    Me.top = HC.Range("bb371")
    Me.left = HC.Range("bb370")
End If
CAJONSERVICIOS.Height = 310
auxiliar = ""
'----Borrar datos-------------------
ListMA.ListIndex = -1
ListTA.ListIndex = -1
ListNO.ListIndex = -1
ListSI.ListIndex = -1
ListaMa = ""
ListaTa = ""
ListAno = ""
ListaSi = ""
HI1 = Null
HF1 = Null
HI2 = Null
HF2 = Null
FservSI.Visible = False
Fserv1.Visible = False
FServ2.Visible = False
FservSI.Visible = False
CheckSM = Null
CheckSusti = Null
CheckCompensacion = Null
TextComentario = Null
If ActiveCell.Row <> HC.Range("I328").Value Then ' Actualiza Fila
    HC.Range("I328") = ActiveCell.Row
    HC.Range("I329") = HC.Range("CJ" & ActiveCell.Row)
    HC.Range("I330") = HC.Range("CP" & ActiveCell.Row)
End If
HC.Calculate
If Selection.Cells.Count = 1 Then
    '-----Lectura de datos----------------
    s1 = HC.Cells(329, ActiveCell.Column).Value
    S2 = HC.Cells(330, ActiveCell.Column).Value
    If s1 <> "" Then ListMA.Value = s1
    If S2 <> "" Then ListMA.Value = S2
    If s1 <> "" Then ListTA.Value = s1
    If S2 <> "" Then ListTA.Value = S2
    If s1 <> "" Then ListNO.Value = s1
    If S2 <> "" Then ListNO.Value = S2
    If s1 <> "" Then ListSI.Value = s1
    ListaMa = ListMA
    ListaTa = ListTA
    ListAno = ListNO
    ListaSi = ListSI
    'Visualizacion por segunda vez
    If ListSI <> "" Then
        LFservSi.Caption = Application.VLookup(s1, HCON.Range("k310:509"), 2, 0)
        FservSI.Visible = True
    Else
        If ListMA <> "" Or ListTA <> "" Or ListNO <> "" Then
            Fserv1.Visible = True
        End If
        If s1 <> "" And S2 <> "" Then
            FServ2.Visible = True
        End If
    End If
    If HC.Cells(334, ActiveCell.Column) <> "" Then
        LServ1.Caption = HC.Cells(329, ActiveCell.Column).Value
        HI1 = Format(HC.Cells(333, ActiveCell.Column).Value, "hh:mm")
        HF1 = Format(HC.Cells(334, ActiveCell.Column).Value, "hh:mm")
    End If
    If HC.Cells(336, ActiveCell.Column) <> "" Then
        LServ2.Caption = HC.Cells(330, ActiveCell.Column).Value
        HI2 = Format(HC.Cells(335, ActiveCell.Column).Value, "hh:mm")
        HF2 = Format(HC.Cells(336, ActiveCell.Column).Value, "hh:mm")
    End If
End If
'Ver boton de papeleta de permisoso o vacaciones
If HC.Cells(331, ActiveCell.Column) = "10" Or HC.Cells(331, ActiveCell.Column) = "11" Or HC.Cells(331, ActiveCell.Column) = "12" Then
    BtnGenerarPapeletaPermiso.Visible = True
Else
    BtnGenerarPapeletaPermiso.Visible = False
End If
If Selection.Rows.Count = 1 Then
    'Cuadrante de validacion
    If HC.Range("ay1") = "VALIDADO" And HCON.Range("ag9") = True Then
        BtnNoValidar.Visible = True
        Validacion = HVAL.Cells(Application.WorksheetFunction.Match(HC.Range("cp" & ActiveCell.Row), HVAL.Range("cd" & HC.Range("ay5") & ":cd" & HC.Range("ay6")), 0) + HC.Range("ay5") - 1, ActiveCell.Column - 12)
        If ActiveCell <> Validacion Then
            Me.Width = 712
            If Selection.Cells.Count > 1 Then
                DatoValidado.Caption = ". . . ?"
            Else
                DatoValidado.Caption = Validacion
            End If
        Else
            Me.Width = 602.25
        End If
    Else
    BtnNoValidar.Visible = False
    Me.Width = 602.25
    End If
Else
Me.Width = 602.25
End If
'Lectura avanzada
'Prticiones
CheckPNM = False
CheckPNT = False
CheckPNN = False
CheckPNS = False
If HC.Cells(370, ActiveCell.Column) = 1 Then
    CheckPNM = True
ElseIf HC.Cells(370, ActiveCell.Column) = 2 Then
    CheckPNT = True
ElseIf HC.Cells(370, ActiveCell.Column) = 3 Then
    CheckPNN = True
ElseIf HC.Cells(370, ActiveCell.Column) = 4 Then
    CheckPNS = True
End If
If HC.Cells(344, ActiveCell.Column) = 1 Then CheckSM.Value = True Else CheckSM.Value = False
If HC.Cells(344, ActiveCell.Column) = 2 Then CheckSusti.Value = True Else CheckSusti.Value = False
If HC.Cells(343, ActiveCell.Column) = 1 Then CheckCompensacion.Value = True Else CheckCompensacion.Value = False
If HC.Cells(342, ActiveCell.Column) <> 100 Then
    BtnReduccion.Value = True
    LabelReduccion.Visible = True
    Reduccion.Visible = True
    Reduccion.Value = 100 - HC.Cells(342, ActiveCell.Column).Value
Else
    BtnReduccion.Value = False
    LabelReduccion.Visible = False
    Reduccion.Visible = False
    Reduccion.Value = Null
End If
If HC.Cells(365, ActiveCell.Column) = 1 Then CheckCumplimentado = True Else CheckCumplimentado = False
If HC.Cells(343, ActiveCell.Column) = 1 Then CheckCompensacion.Value = True Else CheckCompensacion.Value = False
If HC.Cells(343, ActiveCell.Column) = 2 Then CheckCompensacion2.Value = True Else CheckCompensacion2.Value = False
TextComentario = HC.Cells(361, ActiveCell.Column)
If HC.Cells(374, ActiveCell.Column) = 1 Then BtnColor.SpecialEffect = fmSpecialEffectSunken Else BtnColor.SpecialEffect = fmSpecialEffectFlat
BtnColorMuestra.BackColor = ActiveCell.Interior.Color
If HC.Cells(374, ActiveCell.Column) <> 0 Then
    BtnColor.SpecialEffect = fmSpecialEffectSunken
Else
    BtnColor.SpecialEffect = fmSpecialEffectFlat
End If
If CAJONSERVICIOS.Visible = False Then CAJONSERVICIOS.Show 0
If mover = 0 And CheckMantener = False Then Ratonea
mover = 0
HayCambio = 0
If Format(HC.Cells(362, (Int((ActiveCell.Column - 13) / 7) + 1) * 7 + 11), "0.0") <> Format(HC.Cells(362, (Int((ActiveCell.Column - 13) / 7) + 1) * 7 + 12), "0.0") Then
    LabelHoras.Caption = "Semana h/h.ref (min) [Desv.]"
    HSem.Caption = Format(HC.Cells(363, (Int((ActiveCell.Column - 13) / 7) + 1) * 7 + 12), "0.0") & "/" & Format(HC.Cells(362, (Int((ActiveCell.Column - 13) / 7) + 1) * 7 + 12), "0.0") & " (" & Format(HC.Cells(362, (Int((ActiveCell.Column - 13) / 7) + 1) * 7 + 11), "0.0") & ")  [" & Format(HC.Cells(363, (Int((ActiveCell.Column - 13) / 7) + 1) * 7 + 11), "+0.0;-0.0;0") & "]"
Else
    LabelHoras.Caption = "Semana h/h.ref [Desv.]"
    HSem.Caption = Format(HC.Cells(363, (Int((ActiveCell.Column - 13) / 7) + 1) * 7 + 12), "0.0") & "/" & Format(HC.Cells(362, (Int((ActiveCell.Column - 13) / 7) + 1) * 7 + 12), "0.0") & "  [" & Format(HC.Cells(363, (Int((ActiveCell.Column - 13) / 7) + 1) * 7 + 11), "+0.0;-0.0;0") & "]"
End If
End Sub
Private Sub BorraSI_Click()
ListMA.ListIndex = -1
ListTA.ListIndex = -1
ListNO.ListIndex = -1
ListSI.ListIndex = -1
FservSI.Visible = False
TextComentario = ""
CheckSM = False
CheckCompensacion = False
CheckCompensacion2 = False
Fserv1.Visible = False
FServ2.Visible = False
HI1 = ""
HF1 = ""
HI2 = ""
HF2 = ""
HayCambio = 1
End Sub
Private Sub BorraSI_DblClick(ByVal Cancel As MSForms.ReturnBoolean)
Cancel = True
nombra
End Sub
Private Sub ListMa_DblClick(ByVal Cancel As MSForms.ReturnBoolean)
nombra
End Sub
Private Sub ListTa_DblClick(ByVal Cancel As MSForms.ReturnBoolean)
nombra
End Sub
Private Sub ListNo_DblClick(ByVal Cancel As MSForms.ReturnBoolean)
nombra
End Sub
Private Sub informacion()
FservSI.Visible = True
If ListMA.ListIndex <> -1 Then
    LFservSi.Caption = Application.VLookup(ListMA, HCON.Range("K5:L204"), 2, 0) & " - " & Application.VLookup(ListMA, HCON.Range("K5:M204"), 3, 0) & " / " & Application.VLookup(ListMA, HCON.Range("K5:N204"), 4, 0)
End If
If ListTA.ListIndex <> -1 Then
    If ListMA.ListIndex = -1 Then
        LFservSi.Caption = Application.VLookup(ListTA, HCON.Range("K5:L204"), 2, 0) & " - " & Application.VLookup(ListTA, HCON.Range("K5:M204"), 3, 0) & " / " & Application.VLookup(ListTA, HCON.Range("K5:N204"), 4, 0)
    Else
        LFservSi.Caption = LFservSi.Caption & Chr(10) & Application.VLookup(ListTA, HCON.Range("K5:L204"), 2, 0) & " - " & Application.VLookup(ListTA, HCON.Range("K5:M204"), 3, 0) & " / " & Application.VLookup(ListTA, HCON.Range("K5:N204"), 4, 0)
    End If
End If
If ListNO.ListIndex <> -1 Then
    If ListMA.ListIndex = -1 And ListTA.ListIndex = -1 Then
        LFservSi.Caption = Application.VLookup(ListNO, HCON.Range("K5:L204"), 2, 0) & " - " & Application.VLookup(ListNO, HCON.Range("K5:M204"), 3, 0) & " / " & Application.VLookup(ListNO, HCON.Range("K5:N204"), 4, 0)
    Else
        LFservSi.Caption = LFservSi.Caption & Chr(10) & Application.VLookup(ListNO, HCON.Range("K5:L204"), 2, 0) & " - " & Application.VLookup(ListNO, HCON.Range("K5:M204"), 3, 0) & " / " & Application.VLookup(ListNO, HCON.Range("K5:N204"), 4, 0)
    End If
End If
If ListMA.ListIndex = -1 And ListTA.ListIndex = -1 And ListNO.ListIndex = -1 And ListSI.ListIndex = -1 Then
    LFservSi.Caption = ""
End If
End Sub
'------------------------SERVICIOS DE MA|fffd|ANA
Private Sub ListMA_MouseUp(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
If ListaMa = ListMA Then
    ListMA.ListIndex = -1
Else
    If Fserv1.Visible = True Then
        ListTA.ListIndex = -1
        ListNO.ListIndex = -1
        ListaTa = ""
        ListAno = ""
    End If
End If
ListSI.ListIndex = -1
ListaSi = ""
If ListTA <> "" And ListNO <> "" Then
    ListTA.ListIndex = -1
    ListaTa = ""
End If
informacion
Fserv1.Visible = False
HI1 = ""
HF1 = ""
FServ2.Visible = False
HI2 = ""
HF2 = ""
CheckSM = False
CheckCompensacion = False
HayCambio = 1
ListaMa = ListMA
End Sub
'------------------------SERVICIOS DE TARDE
Private Sub ListTA_MouseUp(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
If ListaTa = ListTA Then
    ListTA.ListIndex = -1
Else
    If Fserv1.Visible = True Then
        ListMA.ListIndex = -1
        ListNO.ListIndex = -1
        ListaMa = ""
        ListAno = ""
    End If
End If
ListSI.ListIndex = -1
ListaSi = ""
If ListMA <> "" And ListNO <> "" Then
    ListNO.ListIndex = -1
    ListAno = ""
End If
informacion
Fserv1.Visible = False
HI1 = ""
HF1 = ""
FServ2.Visible = False
HI2 = ""
HF2 = ""
CheckSM = False
CheckCompensacion = False
HayCambio = 1
ListaTa = ListTA
End Sub
'------------------------SERVICIOS DE NOCHE
Private Sub ListNO_MouseUp(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
If ListAno = ListNO Then
    ListNO.ListIndex = -1
Else
    If Fserv1.Visible = True Then
        'ListMA.ListIndex = -1
        ListTA.ListIndex = -1
    End If
End If
ListSI.ListIndex = -1
ListaSi = ""
If ListMA <> "" And ListTA <> "" Then
    'ListTA.ListIndex = -1
    ListMA.ListIndex = -1
    ListaMa = ""
End If
informacion
Fserv1.Visible = False
HI1 = ""
HF1 = ""
FServ2.Visible = False
HI2 = ""
HF2 = ""
CheckSM = False
CheckCompensacion = False
HayCambio = 1
ListAno = ListNO
End Sub
'------------------------SITUACIONES
Private Sub ListSI_MouseUp(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
If ListaSi = ListSI Then ListSI.ListIndex = -1
ListMA.ListIndex = -1
ListTA.ListIndex = -1
ListNO.ListIndex = -1
ListaMa = ""
ListaTa = ""
ListAno = ""
Fserv1.Visible = False
HI1 = ""
HF1 = ""
FServ2.Visible = False
HI2 = ""
HF2 = ""
CheckSM = False
CheckCompensacion = False
FservSI.Visible = True
If ListSI.ListIndex <> -1 Then
    LFservSi.Caption = Application.VLookup(ListSI, HCON.Range("K5:L204"), 2, 0)
Else
    LFservSi.Caption = ""
End If
HayCambio = 1
ListaSi = ListSI
End Sub
Private Sub ListSI_DblClick(ByVal Cancel As MSForms.ReturnBoolean)
nombra
End Sub
Private Sub BtnOK_Click()
nombra
End Sub
'-------------------------------------------------------------------------------------
Private Sub nombra()
If BtnOK.Enabled = False Then GoTo fin
If Application.Calculation = xlCalculationAutomatic Then Application.Calculation = xlCalculationManual
Application.ScreenUpdating = False
Application.EnableEvents = False
Dim fila As Range
For Each fila In Selection.Rows
    If fila.EntireRow.Hidden = False Then
        HC.CapturaAlMover fila
        HC.GrabaDeshacer
    End If
Next
If IsNumeric(Reduccion.Value) = False And BtnReduccion = True Then
    msg = MsgBox("Dato de reduccion de jornada incorrecto.", vbCritical, "Error")
    GoTo final
End If
If ListMA <> "" Then
    compo1 = ListMA
    If ListTA <> "" Then compo2 = Chr(10) & ListTA
    If ListNO <> "" Then compo2 = Chr(10) & ListNO
ElseIf ListTA <> "" Then
    compo1 = ListTA
    If ListNO <> "" Then compo2 = Chr(10) & ListNO
ElseIf ListNO <> "" Then compo1 = ListNO
End If
If ListSI <> "" Then compo1 = ListSI
If CheckCumplimentado = True Then auxiliar = auxiliar & "@C#"
If CheckSM = True Then auxiliar = auxiliar & "@S#"
If CheckSusti = True Then auxiliar = auxiliar & "@F#"
If CheckCompensacion = True Then auxiliar = auxiliar & "@P#"
If CheckCompensacion2 = True Then auxiliar = auxiliar & "@N#"
If CheckPNM = True Then auxiliar = auxiliar & "@PNM#"
If CheckPNT = True Then auxiliar = auxiliar & "@PNT#"
If CheckPNN = True Then auxiliar = auxiliar & "@PNN#"
If CheckPNS = True Then auxiliar = auxiliar & "@PNS#"
If BtnReduccion = True Then auxiliar = auxiliar & "@R#" & Format(10000 - Reduccion.Value * 100, "0000")
If BtnColor.SpecialEffect = fmSpecialEffectSunken Then auxiliar = auxiliar & "@B#" & Format(BtnColorMuestra.BackColor, "00000000")
On Error Resume Next
If HI1 <> "" And HI1 <> Format(Application.VLookup(compo1, HCON.Range("k310:n509"), 3, 0), "hh:mm") Then
    auxiliar = auxiliar & "@HI1" & HI1.Value & "#"
End If
If HF1 <> "" And HF1 <> Format(Application.VLookup(compo1, HCON.Range("k310:n509"), 4, 0), "hh:mm") Then
    auxiliar = auxiliar & "@HF1" & HF1.Value & "#"
End If
If HI2 <> "" Then
    If HI2 <> Format(Application.VLookup(Mid(compo2, 2, 100), HCON.Range("k310:n509"), 3, 0), "hh:mm") Then
        auxiliar = auxiliar & "@HI2" & HI2.Value & "#"
    End If
End If
If HF2 <> "" Then
    If HF2 <> Format(Application.VLookup(Mid(compo2, 2, 100), HCON.Range("k310:n509"), 4, 0), "hh:mm") Then
        auxiliar = auxiliar & "@HF2" & HF2.Value & "#"
    End If
End If
If Selection.Cells.Count = 1 Then
    If TextComentario <> "" Then
        Selection.Offset(0, 38) = auxiliar & "@O#" & TextComentario
    Else
        Selection.Offset(0, 38) = auxiliar
    End If
Else
    For Each aux In Selection.Offset(0, 38)
        If InStr(aux.Value, "@O#") > 0 Then
            comentarioAnterior = Mid(aux, InStr(aux.Value, "@O#"), 200)
            HC.Cells(aux.Row, aux.Column) = auxiliar & comentarioAnterior
        Else
            If TextComentario <> "" Then
                HC.Cells(aux.Row, aux.Column) = auxiliar & "@O#" & TextComentario
            Else
                HC.Cells(aux.Row, aux.Column) = auxiliar
            End If
        End If
    Next
End If
If HayCambio = 1 Then Selection = compo1 & compo2
If CheckMantener = False Then
    Me.Hide
    HC.Range("bb371") = Me.top
    HC.Range("bb370") = Me.left
Else
    mover = 1
    ACTUALIZA
End If
For Each fila In Selection.Rows
    If fila.EntireRow.Hidden = False Then
        HC.Cambiar_Servicio fila.Row
    End If
Next
HC.VerEstrategias
final:
Application.EnableEvents = True
Application.ScreenUpdating = True
fin:
End Sub
Private Sub UserForm_QueryClose(Cancel As Integer, CloseMode As Integer)
HC.Range("bb371") = Me.top
HC.Range("bb370") = Me.left
If CloseMode = 0 Then
    Me.Hide
    Cancel = True
End If
End Sub
Private Sub VentanaTurnos_Click()
Me.Hide
SELTURNO.top = HC.Range("bb371")
SELTURNO.left = HC.Range("bb370")
SELTURNO.Show 0
End Sub

Attribute VB_Name = "CATCARAC"
Attribute VB_Base = "0{B44071F4-5DBF-4B64-B8F4-32BCDC9799D5}{C6391C3E-3739-40BF-9A45-C961D8DEB5B5}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Private Sub UserForm_QueryClose(Cancel As Integer, CloseMode As Integer)
Bol1.SetFocus
TextBox1.SetFocus
For n = 1 To 8
    If HCON.Range("aq" & n + 3) <> "" And Application.WorksheetFunction.CountIf(HCON.Range("aq4:as11"), HCON.Range("aq" & n + 3)) > 1 Then
        msg = MsgBox("Revisa los titulos. No pueden existir repetidos", vbCritical, "Error")
        Cancel = True
        GoTo ya
    End If
Next
For n = 1 To 3
    If HCON.Range("ar" & n + 3) <> "" And Application.WorksheetFunction.CountIf(HCON.Range("aq4:as11"), HCON.Range("ar" & n + 3)) > 1 Then
        msg = MsgBox("Revisa los titulos. No pueden existir repetidos", vbCritical, "Error")
        Cancel = True
        GoTo ya
    End If
    If HCON.Range("as" & n + 3) <> "" And Application.WorksheetFunction.CountIf(HCON.Range("aq4:as11"), HCON.Range("as" & n + 3)) > 1 Then
        msg = MsgBox("Revisa los titulos. No pueden existir repetidos", vbCritical, "Error")
        Cancel = True
        GoTo ya
    End If
Next
ya:
End Sub
Attribute VB_Name = "CATCODIGOSIGO"
Attribute VB_Base = "0{6A5A695D-E9BA-4B91-9163-EBEBE4B8F43F}{6AA8E825-8B0B-459E-B69E-C270BE28F84C}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Private Sub BtnCapturar_Click()
Dim miPortapapeles As New DataObject, Contenido As String
miPortapapeles.GetFromClipboard: On Error Resume Next
Contenido = miPortapapeles.GetText
If Err Then
    MsgBox "No has copiado nada !!!"
ElseIf Len(Contenido) < 1000 Then
    msg = MsgBox("Parece que no has capturado el texto de SIGO. Cuando capturas todo el texto de SIGO este se ve seleccionado en color azul.", vbCritical, "No se ha capturado nada")
Else
    msg = MsgBox("Quieres sobreescribir la lista anterior?", vbYesNo, "Se esta capturando")
    If msg = 6 Then
        HAG.Range("a450") = Contenido
        HAG.Range("a450").WrapText = False
        Application.Calculation = xlCalculationManual
        Application.ScreenUpdating = False
        HAG.CapturaCodigosSigo
        ACTUALIZA
        Application.Calculation = xlCalculationAutomatic
        Application.ScreenUpdating = True
        msg = MsgBox("Se han capturado las listas de codigo de SIGO")
    End If
End If
End Sub

Private Sub BtnEliminar_Click()
msg = MsgBox("Eliminar toda la lista de Codigos de SIGO", vbYesNo, "Vaciar Lista")
If msg = 6 Then
    HAG.Range("a450").ClearContents
    HAG.Range("b333:b430").ClearContents
    HAG.Range("a440:a442").ClearContents
    HAG.Range("a455:b494").ClearContents
    HAG.Range("a499:b538").ClearContents
    HAG.Range("a543:b582").ClearContents
    ACTUALIZA
End If
End Sub

Private Sub UserForm_Initialize()
ACTUALIZA
End Sub
Private Sub ACTUALIZA()
ActualizaMM
ActualizaMI
ActualizaTM
ActualizaTI
ActualizaNM
ActualizaNI
End Sub
Private Sub ActualizaMM()
ListMM.Clear
For l = 0 To 39
    If HAG.Cells(455 + l, 1) <> "" Then
        ListMM.AddItem
        ListMM.List(l, 0) = l + 1
        ListMM.List(l, 1) = HAG.Cells(455 + l, 1)
    End If
Next
End Sub
Private Sub ListMM_DblClick(ByVal Cancel As MSForms.ReturnBoolean)
If ListMM.ListIndex > -1 Then
    inp = InputBox("Modificar codigo", "CODIGO SIGO", ListMM.List(ListMM.ListIndex, 1))
    If inp = "" Then
        msg = MsgBox("Eliminar este codigo?", vbYesNo, "CODIGO SIGO")
        If msg = 6 Then
            HAG.Range("a" & 455 + ListMM.ListIndex & ":A494").Value = HAG.Range("a" & 455 + ListMM.ListIndex + 1 & ":A495").Value
            ActualizaMM
        End If
    Else
        HAG.Cells(455 + ListMM.ListIndex, 1) = inp
        ActualizaMM
    End If
End If
End Sub
Private Sub SpinMM_SpinDown()
If ListMM.ListIndex < ListMM.ListCount - 1 Then
    cur = ListMM.ListIndex
    temp = HAG.Cells(455 + ListMM.ListIndex, 1)
    HAG.Cells(455 + ListMM.ListIndex, 1) = HAG.Cells(455 + ListMM.ListIndex + 1, 1)
    HAG.Cells(455 + ListMM.ListIndex + 1, 1) = temp
    ActualizaMM
    ListMM.ListIndex = cur + 1
End If
End Sub
Private Sub SpinMM_SpinUp()
If ListMM.ListIndex > 0 Then
    cur = ListMM.ListIndex
    temp = HAG.Cells(455 + ListMM.ListIndex, 1)
    HAG.Cells(455 + ListMM.ListIndex, 1) = HAG.Cells(455 + ListMM.ListIndex - 1, 1)
    HAG.Cells(455 + ListMM.ListIndex - 1, 1) = temp
    ActualizaMM
    ListMM.ListIndex = cur - 1
End If
End Sub
Private Sub ActualizaMI()
ListMI.Clear
For l = 0 To 39
    If HAG.Cells(455 + l, 2) <> "" Then
        ListMI.AddItem
        ListMI.List(l, 0) = l + 1
        ListMI.List(l, 1) = HAG.Cells(455 + l, 2)
    End If
Next
End Sub
Private Sub ListMI_DblClick(ByVal Cancel As MSForms.ReturnBoolean)
If ListMI.ListIndex > -1 Then
    inp = InputBox("Modificar codigo", "CODIGO SIGO", ListMI.List(ListMI.ListIndex, 1))
    If inp = "" Then
        msg = MsgBox("Eliminar este codigo?", vbYesNo, "CODIGO SIGO")
        If msg = 6 Then
            HAG.Range("B" & 455 + ListMI.ListIndex & ":B494").Value = HAG.Range("B" & 455 + ListMI.ListIndex + 1 & ":B495").Value
            ActualizaMI
        End If
    Else
        HAG.Cells(455 + ListMI.ListIndex, 2) = inp
        ActualizaMI
    End If
End If
End Sub
Private Sub SpinMI_SpinDown()
If ListMI.ListIndex < ListMI.ListCount - 1 Then
    cur = ListMI.ListIndex
    temp = HAG.Cells(455 + ListMI.ListIndex, 2)
    HAG.Cells(455 + ListMI.ListIndex, 2) = HAG.Cells(455 + ListMI.ListIndex + 1, 2)
    HAG.Cells(455 + ListMI.ListIndex + 1, 2) = temp
    ActualizaMI
    ListMI.ListIndex = cur + 1
End If
End Sub
Private Sub SpinMI_SpinUp()
If ListMI.ListIndex > 0 Then
    cur = ListMI.ListIndex
    temp = HAG.Cells(455 + ListMI.ListIndex, 2)
    HAG.Cells(455 + ListMI.ListIndex, 2) = HAG.Cells(455 + ListMI.ListIndex - 1, 2)
    HAG.Cells(455 + ListMI.ListIndex - 1, 2) = temp
    ActualizaMI
    ListMI.ListIndex = cur - 1
End If
End Sub
Private Sub ActualizaTM()
ListTM.Clear
For l = 0 To 39
    If HAG.Cells(499 + l, 1) <> "" Then
        ListTM.AddItem
        ListTM.List(l, 0) = l + 1
        ListTM.List(l, 1) = HAG.Cells(499 + l, 1)
    End If
Next
End Sub
Private Sub ListTM_DblClick(ByVal Cancel As MSForms.ReturnBoolean)
If ListTM.ListIndex > -1 Then
    inp = InputBox("Modificar codigo", "CODIGO SIGO", ListTM.List(ListTM.ListIndex, 1))
    If inp = "" Then
        msg = MsgBox("Eliminar este codigo?", vbYesNo, "CODIGO SIGO")
        If msg = 6 Then
            HAG.Range("a" & 499 + ListTM.ListIndex & ":A538").Value = HAG.Range("a" & 499 + ListTM.ListIndex + 1 & ":A539").Value
            ActualizaTM
        End If
    Else
        HAG.Cells(499 + ListTM.ListIndex, 1) = inp
        ActualizaTM
    End If
End If
End Sub
Private Sub SpinTM_SpinDown()
If ListTM.ListIndex < ListTM.ListCount - 1 Then
    cur = ListTM.ListIndex
    temp = HAG.Cells(499 + ListTM.ListIndex, 1)
    HAG.Cells(499 + ListTM.ListIndex, 1) = HAG.Cells(499 + ListTM.ListIndex + 1, 1)
    HAG.Cells(499 + ListTM.ListIndex + 1, 1) = temp
    ActualizaTM
    ListTM.ListIndex = cur + 1
End If
End Sub
Private Sub SpinTM_SpinUp()
If ListTM.ListIndex > 0 Then
    cur = ListTM.ListIndex
    temp = HAG.Cells(499 + ListTM.ListIndex, 1)
    HAG.Cells(499 + ListTM.ListIndex, 1) = HAG.Cells(499 + ListTM.ListIndex - 1, 1)
    HAG.Cells(499 + ListTM.ListIndex - 1, 1) = temp
    ActualizaTM
    ListTM.ListIndex = cur - 1
End If
End Sub
Private Sub ActualizaTI()
ListTI.Clear
For l = 0 To 39
    If HAG.Cells(499 + l, 2) <> "" Then
        ListTI.AddItem
        ListTI.List(l, 0) = l + 1
        ListTI.List(l, 1) = HAG.Cells(499 + l, 2)
    End If
Next
End Sub
Private Sub ListTI_DblClick(ByVal Cancel As MSForms.ReturnBoolean)
If ListTI.ListIndex > -1 Then
    inp = InputBox("Modificar codigo", "CODIGO SIGO", ListTI.List(ListTI.ListIndex, 1))
    If inp = "" Then
        msg = MsgBox("Eliminar este codigo?", vbYesNo, "CODIGO SIGO")
        If msg = 6 Then
            HAG.Range("b" & 499 + ListTI.ListIndex & ":b538").Value = HAG.Range("b" & 499 + ListTI.ListIndex + 1 & ":b539").Value
            ActualizaTI
        End If
    Else
        HAG.Cells(499 + ListTI.ListIndex, 2) = inp
        ActualizaTI
    End If
End If
End Sub
Private Sub SpinTI_SpinDown()
If ListTI.ListIndex < ListTI.ListCount - 1 Then
    cur = ListTI.ListIndex
    temp = HAG.Cells(499 + ListTI.ListIndex, 2)
    HAG.Cells(499 + ListTI.ListIndex, 2) = HAG.Cells(499 + ListTI.ListIndex + 1, 2)
    HAG.Cells(499 + ListTI.ListIndex + 1, 2) = temp
    ActualizaTI
    ListTI.ListIndex = cur + 1
End If
End Sub
Private Sub SpinTI_SpinUp()
If ListTI.ListIndex > 0 Then
    cur = ListTI.ListIndex
    temp = HAG.Cells(499 + ListTI.ListIndex, 2)
    HAG.Cells(499 + ListTI.ListIndex, 2) = HAG.Cells(499 + ListTI.ListIndex - 1, 2)
    HAG.Cells(499 + ListTI.ListIndex - 1, 2) = temp
    ActualizaTI
    ListTI.ListIndex = cur - 1
End If
End Sub
Private Sub ActualizaNM()
ListNM.Clear
For l = 0 To 39
    If HAG.Cells(543 + l, 1) <> "" Then
        ListNM.AddItem
        ListNM.List(l, 0) = l + 1
        ListNM.List(l, 1) = HAG.Cells(543 + l, 1)
    End If
Next
End Sub
Private Sub ListNM_DblClick(ByVal Cancel As MSForms.ReturnBoolean)
If ListNM.ListIndex > -1 Then
    inp = InputBox("Modificar codigo", "CODIGO SIGO", ListNM.List(ListNM.ListIndex, 1))
    If inp = "" Then
        msg = MsgBox("Eliminar este codigo?", vbYesNo, "CODIGO SIGO")
        If msg = 6 Then
            HAG.Range("a" & 543 + ListNM.ListIndex & ":A582").Value = HAG.Range("a" & 543 + ListNM.ListIndex + 1 & ":A583").Value
            ActualizaNM
        End If
    Else
        HAG.Cells(543 + ListNM.ListIndex, 1) = inp
        ActualizaNM
    End If
End If
End Sub
Private Sub SpinNM_SpinDown()
If ListNM.ListIndex < ListNM.ListCount - 1 Then
    cur = ListNM.ListIndex
    temp = HAG.Cells(543 + ListNM.ListIndex, 1)
    HAG.Cells(543 + ListNM.ListIndex, 1) = HAG.Cells(543 + ListNM.ListIndex + 1, 1)
    HAG.Cells(543 + ListNM.ListIndex + 1, 1) = temp
    ActualizaNM
    ListNM.ListIndex = cur + 1
End If
End Sub
Private Sub SpinNM_SpinUp()
If ListNM.ListIndex > 0 Then
    cur = ListNM.ListIndex
    temp = HAG.Cells(543 + ListNM.ListIndex, 1)
    HAG.Cells(543 + ListNM.ListIndex, 1) = HAG.Cells(543 + ListNM.ListIndex - 1, 1)
    HAG.Cells(543 + ListNM.ListIndex - 1, 1) = temp
    ActualizaNM
    ListNM.ListIndex = cur - 1
End If
End Sub
Private Sub ActualizaNI()
ListNI.Clear
For l = 0 To 39
    If HAG.Cells(543 + l, 2) <> "" Then
        ListNI.AddItem
        ListNI.List(l, 0) = l + 1
        ListNI.List(l, 1) = HAG.Cells(543 + l, 2)
    End If
Next
End Sub
Private Sub ListNI_DblClick(ByVal Cancel As MSForms.ReturnBoolean)
If ListNI.ListIndex > -1 Then
    inp = InputBox("Modificar codigo", "CODIGO SIGO", ListNI.List(ListNI.ListIndex, 1))
    If inp = "" Then
        msg = MsgBox("Eliminar este codigo?", vbYesNo, "CODIGO SIGO")
        If msg = 6 Then
            HAG.Range("b" & 543 + ListNI.ListIndex & ":b582").Value = HAG.Range("b" & 543 + ListNI.ListIndex + 1 & ":b583").Value
            ActualizaNI
        End If
    Else
        HAG.Cells(543 + ListNI.ListIndex, 2) = inp
        ActualizaNI
    End If
End If
End Sub
Private Sub SpinNI_SpinDown()
If ListNI.ListIndex < ListNI.ListCount - 1 Then
    cur = ListNI.ListIndex
    temp = HAG.Cells(543 + ListNI.ListIndex, 2)
    HAG.Cells(543 + ListNI.ListIndex, 2) = HAG.Cells(543 + ListNI.ListIndex + 1, 2)
    HAG.Cells(543 + ListNI.ListIndex + 1, 2) = temp
    ActualizaNI
    ListNI.ListIndex = cur + 1
End If
End Sub
Private Sub SpinNI_SpinUp()
If ListNI.ListIndex > 0 Then
    cur = ListNI.ListIndex
    temp = HAG.Cells(543 + ListNI.ListIndex, 2)
    HAG.Cells(543 + ListNI.ListIndex, 2) = HAG.Cells(543 + ListNI.ListIndex - 1, 2)
    HAG.Cells(543 + ListNI.ListIndex - 1, 2) = temp
    ActualizaNI
    ListNI.ListIndex = cur - 1
End If
End Sub


Attribute VB_Name = "CATCOMETIDOBUS"
Attribute VB_Base = "0{717CBAE6-2817-4518-8AC2-C22EB13FF658}{610BCFFE-1F9A-4ABE-9B03-82763E611D20}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Private Sub ACTUALIZA()
HCON.Range("q1346:r2468").AdvancedFilter Action:=xlFilterCopy, criteriarange:=HCON.Range("q1344:r1345"), copytorange:=HCON.Range("s1346:t1346")
HCON.Range("r1343").Calculate
ListCometidosEncontrados.List = HCON.Range("s1347:t" & 1347 + HCON.Range("r1343")).Value
End Sub
Private Sub FiltroContiene_Change()
HCON.Range("r1345") = "*" & FiltroContiene & "*"
ACTUALIZA
End Sub
Private Sub ListCometidosEncontrados_DblClick(ByVal Cancel As MSForms.ReturnBoolean)
BtnAceptar_Click
End Sub
Private Sub FiltroAmbito_Change()
HCON.Range("q1345") = FiltroAmbito.Value
ACTUALIZA
End Sub
Private Sub BtnAceptar_Click()
If ListCometidosEncontrados.ListIndex > -1 Then
    CATCOMETIDOS.cometido = ListCometidosEncontrados.List((ListCometidosEncontrados.ListIndex), 1)
    Unload Me
End If
End Sub
Sub inicio()
Application.ScreenUpdating = False
Application.Calculation = xlCalculationManual
HCON.Range("q1345") = ""
HCON.Range("r1345") = ""
ACTUALIZA
End Sub
Private Sub UserForm_QueryClose(Cancel As Integer, CloseMode As Integer)
Application.ScreenUpdating = True
End Sub
Attribute VB_Name = "CATCOMETIDOS"
Attribute VB_Base = "0{70AEF75B-9DA1-4ACC-B48B-39EFACFEE72C}{C4FDF6B2-64B2-4B94-BB3C-049C2E2B04DB}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Public cometido
Private Sub BuscarCometidoG1_Click()
cometido = ""
CATCOMETIDOBUS.inicio
CATCOMETIDOBUS.Show
UbicacionG1 = cometido
End Sub
Private Sub BuscarCometidoG2_Click()
cometido = ""
CATCOMETIDOBUS.inicio
CATCOMETIDOBUS.Show
UbicacionG2 = cometido
End Sub
Private Sub BuscarCometidoP_Click()
cometido = ""
CATCOMETIDOBUS.inicio
CATCOMETIDOBUS.Show
UbicacionP = cometido
End Sub
Private Sub BuscarCometidoS_Click()
cometido = ""
CATCOMETIDOBUS.inicio
CATCOMETIDOBUS.Show
UbicacionS = cometido
End Sub

Private Sub SpinCometidoP_SpinUp()
If ListPrincipales.ListIndex > 0 Then
    ListPrincipales.ListIndex = ListPrincipales.ListIndex - 1
Else
    ListPrincipales.ListIndex = 0
End If
End Sub
Private Sub SpinCometidoP_SpinDown()
If ListPrincipales.ListIndex < ListPrincipales.ListCount - 1 Then
    ListPrincipales.ListIndex = ListPrincipales.ListIndex + 1
Else
    ListPrincipales.ListIndex = ListPrincipales.ListCount - 1
End If
End Sub

Private Sub UserForm_Initialize()
If HBDCAT.Range("a60").End(xlUp).Row > 9 Then ListPrincipales.RowSource = "bdcat!a10:e" & HBDCAT.Range("a60").End(xlUp).Row Else ListPrincipales.RowSource = ""
If HBDCAT.Range("i160").End(xlUp).Row > 9 Then ListSecundarios.RowSource = "bdcat!i10:j" & HBDCAT.Range("i160").End(xlUp).Row Else ListSecundarios.RowSource = ""
If HBDCAT.Range("n60").End(xlUp).Row > 9 Then ListEventos.RowSource = "bdcat!n10:p" & HBDCAT.Range("n60").End(xlUp).Row Else ListEventos.RowSource = ""
Application.ScreenUpdating = True
End Sub


'------------------COMETIDOS PRINCIPALES ------------------------------------------------------
Private Sub ListPrincipales_DblClick(ByVal Cancel As MSForms.ReturnBoolean)
If ListPrincipales.ListIndex > -1 Then
    CodigoP = ListPrincipales.List(ListPrincipales.ListIndex, 0)
    UbicacionP = ListPrincipales.List(ListPrincipales.ListIndex, 1)
    UbicacionG1 = ListPrincipales.List(ListPrincipales.ListIndex, 2)
    UbicacionG2 = ListPrincipales.List(ListPrincipales.ListIndex, 3)
    Descripcion = ListPrincipales.List(ListPrincipales.ListIndex, 4)
    CodigoP.BackColor = &H80FF&
    UbicacionP.BackColor = &H80FF&
    UbicacionG1.BackColor = &H80FF&
    UbicacionG2.BackColor = &H80FF&
    Descripcion.BackColor = &H80FF&
    AnadirP.Caption = "M"
End If
End Sub
Private Sub AnadirP_Click()
If UbicacionG2 <> "" And UbicacionG1 = "" Then
    msg = MsgBox("Por favor usa un orden para rellenar los cometidos, si tienes un tercero no puede estar el segundo vacio.", vbCritical, "Limite")
    GoTo fin
End If
If AnadirP.Caption = "M" And CodigoP <> "" Then
    pos = ListPrincipales.ListIndex
    HBDCAT.Range("a" & pos + 10).Value = CodigoP
    HBDCAT.Range("b" & pos + 10).Value = UbicacionP
    HBDCAT.Range("c" & pos + 10).Value = UbicacionG1
    HBDCAT.Range("d" & pos + 10).Value = UbicacionG2
    HBDCAT.Range("e" & pos + 10).Value = Descripcion
    CodigoP = ""
    UbicacionP = ""
    UbicacionG1 = ""
    UbicacionG2 = ""
    Descripcion = ""
    CodigoP.BackColor = &HC0FFC0
    UbicacionP.BackColor = &HC0FFC0
    UbicacionG1.BackColor = &HC0FFC0
    UbicacionG2.BackColor = &HC0FFC0
    Descripcion.BackColor = &HC0FFC0
    AnadirP.Caption = "+"
ElseIf AnadirP.Caption = "+" And HBDCAT.Range("a60").End(xlUp).Row < 60 Then
    If CodigoP <> "" Then
        ultimo = HBDCAT.Range("a60").End(xlUp).Row + 1
        HBDCAT.Range("a" & ultimo).Value = CodigoP
        HBDCAT.Range("b" & ultimo).Value = UbicacionP
        HBDCAT.Range("c" & ultimo).Value = UbicacionG1
        HBDCAT.Range("d" & ultimo).Value = UbicacionG2
        HBDCAT.Range("e" & ultimo).Value = Descripcion
        CodigoP.Text = ""
        UbicacionP = ""
        UbicacionG1 = ""
        UbicacionG2 = ""
    End If
ElseIf HBDCAT.Range("a60").End(xlUp).Row = 59 Then
    msg = MsgBox("Se han alcazado el limite de cometidos principales", vbCritical, "Limite")
End If
If HBDCAT.Range("a60").End(xlUp).Row > 9 Then ListPrincipales.RowSource = "bdcat!a10:e" & HBDCAT.Range("a60").End(xlUp).Row Else ListPrincipales.RowSource = ""
fin:
End Sub
Private Sub ListPrincipales_MouseDown(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
AnadirP.Caption = "+"
CodigoP.BackColor = &HC0FFC0
UbicacionP.BackColor = &HC0FFC0
UbicacionG1.BackColor = &HC0FFC0
UbicacionG2.BackColor = &HC0FFC0
Descripcion.BackColor = &HC0FFC0
CodigoP = ""
UbicacionP = ""
UbicacionG1 = ""
UbicacionG2 = ""
Descripcion = ""
End Sub
Private Sub EliminarP_Click()
If ListPrincipales.ListIndex <> -1 Then
    HBDCAT.Range("a" & ListPrincipales.ListIndex + 10 & ":e59").Value = HBDCAT.Range("a" & ListPrincipales.ListIndex + 11 & ":e60").Value
    If HBDCAT.Range("a60").End(xlUp).Row > 9 Then ListPrincipales.RowSource = "bdcat!a10:e" & HBDCAT.Range("a60").End(xlUp).Row Else ListPrincipales.RowSource = ""
End If
HCON.Calculate
End Sub
Private Sub SipnOrdenarP_SpinDown()
If ListPrincipales.ListIndex > -1 And ListPrincipales.ListIndex < ListPrincipales.ListCount - 1 Then
    HBDCAT.Range("a7:e7").Value = HBDCAT.Range("a" & ListPrincipales.ListIndex + 11 & ":e" & ListPrincipales.ListIndex + 11).Value
    HBDCAT.Range("a" & ListPrincipales.ListIndex + 11 & ":e" & ListPrincipales.ListIndex + 11).Value = HBDCAT.Range("a" & ListPrincipales.ListIndex + 10 & ":e" & ListPrincipales.ListIndex + 10).Value
    HBDCAT.Range("a" & ListPrincipales.ListIndex + 10 & ":e" & ListPrincipales.ListIndex + 10).Value = HBDCAT.Range("a7:e7").Value
    If HBDCAT.Range("a60").End(xlUp).Row > 9 Then ListPrincipales.RowSource = "bdcat!a10:e" & HBDCAT.Range("a60").End(xlUp).Row Else ListPrincipales.RowSource = ""
    ListPrincipales.ListIndex = ListPrincipales.ListIndex + 1
End If
End Sub
Private Sub SipnOrdenarP_SpinUp()
If ListPrincipales.ListIndex > 0 Then
    HBDCAT.Range("a7:e7").Value = HBDCAT.Range("a" & ListPrincipales.ListIndex + 9 & ":e" & ListPrincipales.ListIndex + 9).Value
    HBDCAT.Range("a" & ListPrincipales.ListIndex + 9 & ":e" & ListPrincipales.ListIndex + 9).Value = HBDCAT.Range("a" & ListPrincipales.ListIndex + 10 & ":e" & ListPrincipales.ListIndex + 10).Value
    HBDCAT.Range("a" & ListPrincipales.ListIndex + 10 & ":e" & ListPrincipales.ListIndex + 10).Value = HBDCAT.Range("a7:e7").Value
    If HBDCAT.Range("a60").End(xlUp).Row > 9 Then ListPrincipales.RowSource = "bdcat!a10:e" & HBDCAT.Range("a60").End(xlUp).Row Else ListPrincipales.RowSource = ""
    ListPrincipales.ListIndex = ListPrincipales.ListIndex - 1
End If
End Sub

'------------------COMETIDOS secundarios ------------------------------------------------------
Private Sub ListSecundarios_MouseDown(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
    AnadirS.Caption = "+"
    CodigoS.BackColor = &HC0FFC0
    UbicacionS.BackColor = &HC0FFC0
    CodigoS = ""
    UbicacionS = ""
End Sub
Private Sub ListSecundarios_DblClick(ByVal Cancel As MSForms.ReturnBoolean)
CodigoS = ListSecundarios.List(ListSecundarios.ListIndex, 0)
UbicacionS = ListSecundarios.List(ListSecundarios.ListIndex, 1)
UbicacionS.BackColor = &H80FF&
CodigoS.BackColor = &H80FF&
AnadirS.Caption = "M"
End Sub
Private Sub AnadirS_Click()
If AnadirS.Caption = "M" And CodigoS <> "" Then
    pos = ListSecundarios.ListIndex + 10
    HBDCAT.Range("i" & pos).Value = CodigoS
    HBDCAT.Range("j" & pos).Value = UbicacionS
    CodigoS = ""
    UbicacionS = ""
    CodigoS.BackColor = &HC0FFC0
    UbicacionS.BackColor = &HC0FFC0
    AnadirS.Caption = "+"
ElseIf AnadirS.Caption = "+" Then
    ultimo = HBDCAT.Range("i60").End(xlUp).Row + 1
    If CodigoS <> "" And HBDCAT.Range("i160").End(xlUp).Row < 160 Then
        HBDCAT.Range("i" & ultimo).Value = CodigoS
        HBDCAT.Range("j" & ultimo).Value = UbicacionS
        UbicacionS.Text = ""
        CodigoS.Text = ""
    End If
End If
If HBDCAT.Range("i160").End(xlUp).Row > 9 Then ListSecundarios.RowSource = "bdcat!i10:j" & HBDCAT.Range("i160").End(xlUp).Row Else ListSecundarios.RowSource = ""
End Sub
Private Sub EliminarS_Click()
If ListSecundarios.ListIndex <> -1 Then
    HBDCAT.Range("i" & ListSecundarios.ListIndex + 10 & ":j159").Value = HBDCAT.Range("i" & ListSecundarios.ListIndex + 11 & ":j160").Value
    If HBDCAT.Range("i160").End(xlUp).Row > 9 Then ListSecundarios.RowSource = "bdcat!i10:j" & HBDCAT.Range("i160").End(xlUp).Row Else ListSecundarios.RowSource = ""
End If
End Sub
Private Sub SpinOrdenarS_SpinDown()
If ListSecundarios.ListIndex > -1 And ListSecundarios.ListIndex < ListSecundarios.ListCount - 1 Then
    HBDCAT.Range("i7:j7").Value = HBDCAT.Range("i" & ListSecundarios.ListIndex + 11 & ":j" & ListSecundarios.ListIndex + 11).Value
    HBDCAT.Range("i" & ListSecundarios.ListIndex + 11 & ":j" & ListSecundarios.ListIndex + 11).Value = HBDCAT.Range("i" & ListSecundarios.ListIndex + 10 & ":j" & ListSecundarios.ListIndex + 10).Value
    HBDCAT.Range("i" & ListSecundarios.ListIndex + 10 & ":j" & ListSecundarios.ListIndex + 10).Value = HBDCAT.Range("i7:j7").Value
    If HBDCAT.Range("i160").End(xlUp).Row > 9 Then ListSecundarios.RowSource = "bdcat!i10:j" & HBDCAT.Range("i160").End(xlUp).Row Else ListSecundarios.RowSource = ""
    ListSecundarios.ListIndex = ListSecundarios.ListIndex + 1
End If
End Sub
Private Sub SpinOrdenarS_SpinUp()
If ListSecundarios.ListIndex > 0 Then
    HBDCAT.Range("i7:j7").Value = HBDCAT.Range("i" & ListSecundarios.ListIndex + 9 & ":j" & ListSecundarios.ListIndex + 9).Value
    HBDCAT.Range("i" & ListSecundarios.ListIndex + 9 & ":j" & ListSecundarios.ListIndex + 9).Value = HBDCAT.Range("i" & ListSecundarios.ListIndex + 10 & ":j" & ListSecundarios.ListIndex + 10).Value
    HBDCAT.Range("i" & ListSecundarios.ListIndex + 10 & ":j" & ListSecundarios.ListIndex + 10).Value = HBDCAT.Range("i7:j7").Value
    If HBDCAT.Range("i160").End(xlUp).Row > 9 Then ListSecundarios.RowSource = "bdcat!i10:j" & HBDCAT.Range("i160").End(xlUp).Row Else ListSecundarios.RowSource = ""
    ListSecundarios.ListIndex = ListSecundarios.ListIndex - 1
End If
End Sub

'------------------EVENTOS ------------------------------------------------------
Private Sub ListEventos_MouseDown(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
    AnadirEvento.Caption = "+"
    AsuntoEvento.BackColor = &HC0FFC0
    NumeroEvento.BackColor = &HC0FFC0
    VinculoEvento.BackColor = &HC0FFC0
    AsuntoEvento = ""
    NumeroEvento = ""
    VinculoEvento = ""
End Sub
Private Sub ListEventos_DblClick(ByVal Cancel As MSForms.ReturnBoolean)
AsuntoEvento = ListEventos.List(ListEventos.ListIndex, 0)
NumeroEvento = ListEventos.List(ListEventos.ListIndex, 1)
VinculoEvento = ListEventos.List(ListEventos.ListIndex, 2)
AnadirEvento.Caption = "M"
AsuntoEvento.BackColor = &H80FF&
NumeroEvento.BackColor = &H80FF&
VinculoEvento.BackColor = &H80FF&
End Sub
Private Sub AnadirEvento_Click()
If AnadirEvento.Caption = "M" And AsuntoEvento <> "" Then
    pos = ListEventos.ListIndex + 10
    HBDCAT.Range("n" & pos).Value = AsuntoEvento
    HBDCAT.Range("o" & pos).Value = NumeroEvento
    HBDCAT.Range("p" & pos).Value = VinculoEvento
    AsuntoEvento = ""
    NumeroEvento = ""
    VinculoEvento = ""
    AsuntoEvento.BackColor = &HC0FFC0
    NumeroEvento.BackColor = &HC0FFC0
    VinculoEvento.BackColor = &HC0FFC0
    AnadirEvento.Caption = "+"
ElseIf AnadirEvento.Caption = "+" Then
    If AsuntoEvento <> "" And HBDCAT.Range("n60").End(xlUp).Row < 60 Then
        ultimo = HBDCAT.Range("n60").End(xlUp).Row + 1
        HBDCAT.Range("n" & ultimo).Value = AsuntoEvento
        HBDCAT.Range("o" & ultimo).Value = NumeroEvento
        HBDCAT.Range("p" & ultimo).Value = VinculoEvento
        AsuntoEvento = ""
        NumeroEvento = ""
        VinculoEvento = ""
    End If
End If
If HBDCAT.Range("n60").End(xlUp).Row > 9 Then ListEventos.RowSource = "bdcat!n10:p" & HBDCAT.Range("n60").End(xlUp).Row Else ListEventos.RowSource = ""
End Sub
Private Sub EliminarEvento_Click()
If ListEventos.ListIndex <> -1 Then
    HBDCAT.Range("n" & ListEventos.ListIndex + 10 & ":p59").Value = HBDCAT.Range("n" & ListEventos.ListIndex + 11 & ":p60").Value
    If HBDCAT.Range("n60").End(xlUp).Row > 9 Then ListEventos.RowSource = "bdcat!n10:p" & HBDCAT.Range("n60").End(xlUp).Row Else ListEventos.RowSource = ""
End If
HCON.Calculate
End Sub
Private Sub SpinOrdenarEventos_SpinDown()
If ListEventos.ListIndex > -1 And ListEventos.ListIndex < ListEventos.ListCount - 1 Then
    HBDCAT.Range("n7:p7").Value = HBDCAT.Range("n" & ListEventos.ListIndex + 11 & ":p" & ListEventos.ListIndex + 11).Value
    HBDCAT.Range("n" & ListEventos.ListIndex + 11 & ":p" & ListEventos.ListIndex + 11).Value = HBDCAT.Range("n" & ListEventos.ListIndex + 10 & ":p" & ListEventos.ListIndex + 10).Value
    HBDCAT.Range("n" & ListEventos.ListIndex + 10 & ":p" & ListEventos.ListIndex + 10).Value = HBDCAT.Range("n7:p7").Value
    If HBDCAT.Range("n60").End(xlUp).Row > 9 Then ListEventos.RowSource = "bdcat!n10:p" & HBDCAT.Range("n60").End(xlUp).Row Else ListEventos.RowSource = ""
    ListEventos.ListIndex = ListEventos.ListIndex + 1
End If
End Sub
Private Sub SpinOrdenarEventos_SpinUp()
If ListEventos.ListIndex > 0 Then
    HBDCAT.Range("n7:p7").Value = HBDCAT.Range("n" & ListEventos.ListIndex + 9 & ":p" & ListEventos.ListIndex + 9).Value
    HBDCAT.Range("n" & ListEventos.ListIndex + 9 & ":p" & ListEventos.ListIndex + 9).Value = HBDCAT.Range("n" & ListEventos.ListIndex + 10 & ":p" & ListEventos.ListIndex + 10).Value
    HBDCAT.Range("n" & ListEventos.ListIndex + 10 & ":p" & ListEventos.ListIndex + 10).Value = HBDCAT.Range("n7:p7").Value
    If HBDCAT.Range("n60").End(xlUp).Row > 9 Then ListEventos.RowSource = "bdcat!n10:p" & HBDCAT.Range("n60").End(xlUp).Row Else ListEventos.RowSource = ""
    ListEventos.ListIndex = ListEventos.ListIndex - 1
End If
End Sub
Attribute VB_Name = "CATFESTIVOS"
Attribute VB_Base = "0{1A4844CA-7400-463B-8F17-C592D88574CB}{04CAD942-7FE6-4B7F-B166-9CFEF0DC40D1}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Dim InicioMov
Private Sub SpinA|fffd|o_Change()
A|fffd|o.Caption = SpinA|fffd|o.Value
SS1.ControlSource = "con!h" & (SpinA|fffd|o.Value - 2015) * 8 + 147
SS2.ControlSource = "con!h" & (SpinA|fffd|o.Value - 2015) * 8 + 148
SS3.ControlSource = "con!h" & (SpinA|fffd|o.Value - 2015) * 8 + 149
SS4.ControlSource = "con!h" & (SpinA|fffd|o.Value - 2015) * 8 + 150
N1.ControlSource = "con!h" & (SpinA|fffd|o.Value - 2015) * 8 + 151
N2.ControlSource = "con!h" & (SpinA|fffd|o.Value - 2015) * 8 + 152
N3.ControlSource = "con!h" & (SpinA|fffd|o.Value - 2015) * 8 + 153
N4.ControlSource = "con!h" & (SpinA|fffd|o.Value - 2015) * 8 + 154
End Sub
Private Sub UserForm_Initialize()
Application.Calculation = xlCalculationAutomatic ' Ok Calculation
SpinA|fffd|o = Year(Now)
InicioMov = 4
ACTUALIZA
End Sub
Private Sub BtnMas_Click()
If IsDate(NuevoFestivo.Value) = False Then
    msg = MsgBox("La fecha no es valida", vbCritical, "Nuevo Festivo")
    GoTo fin:
End If
HCON.Range("h" & HCON.Range("h310") + 5).Formula = CDate(NuevoFestivo.Value)
ACTUALIZA
fin:
End Sub
Private Sub BtnMenos_Click()
If ListFestivos.ListIndex > -1 Then
    HCON.Range("h" & ListFestivos.ListIndex + 5 & ":h143").Value = HCON.Range("h" & ListFestivos.ListIndex + 6 & ":h144").Value
    ACTUALIZA
Else
    msg = MsgBox("Ningun dia seleccionado de la lista para ser eliminado", vbCritical, "Eliminar Festivo")
End If
End Sub
Private Sub BtnMover_click()
If ListFestivos.ListIndex + 4 >= 5 Then
    InicioMov = ListFestivos.ListIndex + 5
    msg = MsgBox("Se movera el registro seleccionado. Selecciona la nueva posicion", vbInformation, "Ordenar")
End If
End Sub
Private Sub ListFestivos_MouseUp(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
Application.EnableEvents = False
If InicioMov >= 5 Then
    FinFestivos = HCON.Range("h310") + 5
    FinMov = ListFestivos.ListIndex + 5
    HCON.Range("h315").Value = HCON.Range("h" & InicioMov).Value
    If InicioMov > FinMov Then
        HCON.Range("h" & FinMov + 1 & ":h" & InicioMov).Value = HCON.Range("h" & FinMov & ":h" & InicioMov - 1).Value
        HCON.Range("h" & FinMov).Value = HCON.Range("h315").Value
    ElseIf InicioMov < FinMov Then
        HCON.Range("h" & InicioMov & ":h" & FinMov - 1).Value = HCON.Range("h" & InicioMov + 1 & ":h" & FinMov).Value
        HCON.Range("h" & FinMov).Value = HCON.Range("h315").Value
    End If
    ACTUALIZA
InicioMov = 4
End If
Application.EnableEvents = True
End Sub
Private Sub ACTUALIZA()
HCON.Calculate
ListFestivos.RowSource = "con!h5:h" & HCON.Range("h310") + 4
ListFestivos.ListIndex = HCON.Range("h310") - 1
ListFestivos.ListIndex = -1
NuevoFestivo = ""
End Sub
Private Sub UserForm_QueryClose(Cancel As Integer, CloseMode As Integer)
NuevoFestivo.SetFocus
If HCON.Range("h308").Value > 0 Then
    msg = MsgBox("Existen errores en los dias festivos, |fffd|no estar|fffd|n correctamente escritos?. Corrigelos antes de continuar", vbCritical, "DEFINICIONES")
    Cancel = True
End If
    HC.Range("bh6") = HCON.Range("h" & (HC.Range("ba4") - 2015) * 8 + 147) '=INDIRECTO("con!h" & ($BA$4-2015)*8+147)
    HC.Range("bh7") = HCON.Range("h" & (HC.Range("ba4") - 2015) * 8 + 148)
    HC.Range("bh8") = HCON.Range("h" & (HC.Range("ba4") - 2015) * 8 + 149)
    HC.Range("bh9") = HCON.Range("h" & (HC.Range("ba4") - 2015) * 8 + 150) + 1
    If HC.Range("ba6") = 0 Then '=INDIRECTO("con!h" & (SI(BA6=0;$BA$4-2016;$BA$4-2015))*8+151)
        HC.Range("bi6") = HCON.Range("h" & (HC.Range("ba4") - 2016) * 8 + 151)
        HC.Range("bi7") = HCON.Range("h" & (HC.Range("ba4") - 2016) * 8 + 152)
        HC.Range("bi8") = HCON.Range("h" & (HC.Range("ba4") - 2016) * 8 + 153)
        HC.Range("bi9") = HCON.Range("h" & (HC.Range("ba4") - 2016) * 8 + 154) + 1
    Else
        HC.Range("bi6") = HCON.Range("h" & (HC.Range("ba4") - 2015) * 8 + 151)
        HC.Range("bi7") = HCON.Range("h" & (HC.Range("ba4") - 2015) * 8 + 152)
        HC.Range("bi8") = HCON.Range("h" & (HC.Range("ba4") - 2015) * 8 + 153)
        HC.Range("bi9") = HCON.Range("h" & (HC.Range("ba4") - 2015) * 8 + 154) + 1
    End If

Application.ScreenUpdating = False
Application.EnableEvents = False
Me.Hide
HC.Refrescar 1
HC.BarraDias
Application.EnableEvents = True
Application.ScreenUpdating = True
End Sub



Private Sub BtnAyuda_Click()
With AYUDAPEQ
    .Tema.Caption = HCON.Range("da7")
    .TextoAyuda = HCON.Range("Db7")
    .StartUpPosition = 0
    .left = 10
    .top = 10
    .TextoAyuda.SelStart = 0
    .Show 1
End With
End Sub

Attribute VB_Name = "CATINDICATIVOS"
Attribute VB_Base = "0{B3B00E6F-DBE0-4207-97D6-55FE1C096DA2}{5618A59F-E7D2-48A8-9920-5F5FA1DB1521}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Private Sub ListIndicativo_Click()
If BtnMas.Caption = "M" Then
    Seneka = False
    Indicativo = ""
    ListVehiVinculado = ""
    BtnMas.Caption = "+"
    Indicativo.BackColor = &HC0FFC0
    ListVehiVinculado.BackColor = &HC0FFC0
End If
End Sub
Private Sub ListIndicativo_DblClick(ByVal Cancel As MSForms.ReturnBoolean)
If ListIndicativo.ListIndex > -1 Then
    Indicativo = HCON.Range("x" & 5 + ListIndicativo.ListIndex)
    If HCON.Range("y" & 5 + ListIndicativo.ListIndex) = "SI" Then Seneka = True Else Seneka = False
    BtnMas.Caption = "M"
    Indicativo.BackColor = &H80FF&
    ListVehiVinculado.BackColor = &H80FF&
End If
End Sub
Private Sub UserForm_Initialize()
ACTUALIZA
Application.Calculation = xlCalculationAutomatic
End Sub
Private Sub BtnMas_Click()
If Indicativo <> "" Then
    If BtnMas.Caption = "+" Then
        If Seneka = True Then
            HCON.Range("y" & HCON.Range("x310") + 5).Value = "SI"
        Else
            HCON.Range("y" & HCON.Range("x310") + 5).Value = "NO"
        End If
        HCON.Range("z" & HCON.Range("x310") + 5).Value = ListVehiVinculado
        HCON.Range("x" & HCON.Range("x310") + 5).Value = Indicativo
    ElseIf BtnMas.Caption = "M" Then
        BtnMas.Caption = "+"
        If Seneka = True Then
            HCON.Range("y" & 5 + ListIndicativo.ListIndex).Value = "SI"
        Else
            HCON.Range("y" & 5 + ListIndicativo.ListIndex).Value = "NO"
        End If
        HCON.Range("z" & 5 + ListIndicativo.ListIndex).Value = ListVehiVinculado
        HCON.Range("x" & 5 + ListIndicativo.ListIndex).Value = Indicativo
        Indicativo.BackColor = &HC0FFC0
        ListVehiVinculado.BackColor = &HC0FFC0
    End If
    Seneka = False
    Indicativo = ""
    ListVehiVinculado = ""
    ACTUALIZA
End If
End Sub
Private Sub BtnMenos_Click()
If ListIndicativo.ListIndex <> -1 Then
    HCON.Range("x" & ListIndicativo.ListIndex + 5 & ":z31").Value = HCON.Range("x" & ListIndicativo.ListIndex + 6 & ":z32").Value
    ACTUALIZA
End If
End Sub
Private Sub SpinOrdenar_SpinDown()
If ListIndicativo.ListIndex > -1 And ListIndicativo.ListIndex < ListIndicativo.ListCount - 1 Then
'    HCON.Range("a7:e7").Value = HCON.Range("a" & ListPrincipales.ListIndex + 11 & ":e" & ListPrincipales.ListIndex + 11).Value
'    HCON.Range("a" & ListPrincipales.ListIndex + 11 & ":e" & ListPrincipales.ListIndex + 11).Value = HCON.Range("a" & ListPrincipales.ListIndex + 10 & ":e" & ListPrincipales.ListIndex + 10).Value
'    HCON.Range("a" & ListPrincipales.ListIndex + 10 & ":e" & ListPrincipales.ListIndex + 10).Value = HCON.Range("a7:e7").Value
'    ListPrincipales.ListIndex = ListPrincipales.ListIndex + 1
End If
End Sub

Private Sub SpinOrdenar_SpinUp()

End Sub
Private Sub ACTUALIZA()
HCON.Calculate
If HCON.Range("x310") > 0 Then
    ListIndicativo.RowSource = "con!x5:z" & HCON.Range("x310") + 4
Else
    ListIndicativo.RowSource = ""
End If
End Sub
Attribute VB_Name = "CATLUGARES"
Attribute VB_Base = "0{F92CD1C3-8A03-4738-B8CA-53B8B25A0A7E}{CDF4898A-7C53-485B-86F8-80E82B6732D3}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Private Sub ListLugar_Click()
If BtnMas.Caption = "M" Then
    BtnMas.Caption = "+"
    NuevoLugar = ""
    NuevoLugar.BackColor = &HC0FFC0
End If
End Sub
Private Sub ListLugar2_Click()
If BtnMas2.Caption = "M" Then
    BtnMas2.Caption = "+"
    NuevoLugar2 = ""
    NuevoLugar2.BackColor = &HC0FFC0
End If
End Sub
Private Sub ListLugar_DblClick(ByVal Cancel As MSForms.ReturnBoolean)
If ListLugar.ListIndex > -1 Then
    NuevoLugar = HBDCAT.Range("x" & ListLugar.ListIndex + 10)
    BtnMas.Caption = "M"
    NuevoLugar.BackColor = &H80FF&
End If
End Sub
Private Sub ListLugar2_DblClick(ByVal Cancel As MSForms.ReturnBoolean)
If ListLugar2.ListIndex > -1 Then
    NuevoLugar2 = HBDCAT.Range("ab" & ListLugar2.ListIndex + 10)
    BtnMas2.Caption = "M"
    NuevoLugar2.BackColor = &H80FF&
End If
End Sub
Private Sub UserForm_Initialize()
If Application.Calculation = xlCalculationAutomatic Then Application.Calculation = xlCalculationManual
ACTUALIZA
actualiza2
End Sub
Private Sub BtnMas_Click()
If NuevoLugar <> "" Then
    If BtnMas.Caption = "+" Then
        HBDCAT.Range("x" & HBDCAT.Range("x60").End(xlUp).Row + 1) = NuevoLugar.Value
    ElseIf BtnMas.Caption = "M" Then
        HBDCAT.Range("x" & ListLugar.ListIndex + 10) = NuevoLugar.Value
        NuevoLugar.BackColor = &HC0FFC0
    End If
    BtnMas.Caption = "+"
    NuevoLugar = ""
    ACTUALIZA
End If
End Sub
Private Sub BtnMas2_Click()
If NuevoLugar2 <> "" Then
    If BtnMas2.Caption = "+" Then
        HBDCAT.Range("ab" & HBDCAT.Range("ab210").End(xlUp).Row + 1) = NuevoLugar2.Value
    ElseIf BtnMas2.Caption = "M" Then
        HBDCAT.Range("ab" & ListLugar2.ListIndex + 10) = NuevoLugar2.Value
        NuevoLugar2.BackColor = &HC0FFC0
    End If
    BtnMas2.Caption = "+"
    NuevoLugar2 = ""
    actualiza2
End If
End Sub
Private Sub BtnMenos_Click()
If ListLugar.ListIndex > -1 Then
    HBDCAT.Range("x" & ListLugar.ListIndex + 10 & ":x59").Value = HBDCAT.Range("x" & ListLugar.ListIndex + 11 & ":x60").Value
    ACTUALIZA
End If
End Sub
Private Sub BtnMenos2_Click()
If ListLugar2.ListIndex > -1 Then
    HBDCAT.Range("ab" & ListLugar2.ListIndex + 10 & ":ab209").Value = HBDCAT.Range("ab" & ListLugar2.ListIndex + 11 & ":ab210").Value
    actualiza2
End If
End Sub
Private Sub SipnLugares1_SpinUp()
If ListLugar.ListIndex > 0 Then
    HBDCAT.Range("x7").Value = HBDCAT.Range("x" & ListLugar.ListIndex + 9).Value
    HBDCAT.Range("x" & ListLugar.ListIndex + 9).Value = HBDCAT.Range("x" & ListLugar.ListIndex + 10).Value
    HBDCAT.Range("x" & ListLugar.ListIndex + 10).Value = HBDCAT.Range("x7").Value
    ACTUALIZA
    ListLugar.ListIndex = ListLugar.ListIndex - 1
End If
End Sub
Private Sub SpinLugares2_SpinUp()
If ListLugar2.ListIndex > 0 Then
    HBDCAT.Range("ab7").Value = HBDCAT.Range("ab" & ListLugar2.ListIndex + 9).Value
    HBDCAT.Range("ab" & ListLugar2.ListIndex + 9).Value = HBDCAT.Range("ab" & ListLugar2.ListIndex + 10).Value
    HBDCAT.Range("ab" & ListLugar2.ListIndex + 10).Value = HBDCAT.Range("ab7").Value
    actualiza2
    ListLugar2.ListIndex = ListLugar2.ListIndex - 1
End If
End Sub
Private Sub SipnLugares1_Spindown()
If ListLugar.ListIndex > -1 And ListLugar.ListIndex < ListLugar.ListCount - 1 Then
    HBDCAT.Range("x7").Value = HBDCAT.Range("x" & ListLugar.ListIndex + 11).Value
    HBDCAT.Range("x" & ListLugar.ListIndex + 11).Value = HBDCAT.Range("x" & ListLugar.ListIndex + 10).Value
    HBDCAT.Range("x" & ListLugar.ListIndex + 10).Value = HBDCAT.Range("x7").Value
    ACTUALIZA
    ListLugar.ListIndex = ListLugar.ListIndex + 1
End If
End Sub
Private Sub SpinLugares2_Spindown()
If ListLugar2.ListIndex > -1 And ListLugar2.ListIndex < ListLugar2.ListCount - 1 Then
    HBDCAT.Range("ab7").Value = HBDCAT.Range("ab" & ListLugar2.ListIndex + 11).Value
    HBDCAT.Range("ab" & ListLugar2.ListIndex + 11).Value = HBDCAT.Range("ab" & ListLugar2.ListIndex + 10).Value
    HBDCAT.Range("ab" & ListLugar2.ListIndex + 10).Value = HBDCAT.Range("ab7").Value
    actualiza2
    ListLugar2.ListIndex = ListLugar2.ListIndex + 1
End If
End Sub
Private Sub ACTUALIZA()
If HBDCAT.Range("x60").End(xlUp).Row > 9 Then
    ListLugar.RowSource = "bdcat!x10:x" & HBDCAT.Range("x60").End(xlUp).Row
    NuevoLugar = ""
Else
    ListLugar.RowSource = ""
End If
End Sub
Private Sub actualiza2()
If HBDCAT.Range("ab210").End(xlUp).Row > 9 Then
    ListLugar2.RowSource = "bdcat!ab10:ab" & HBDCAT.Range("ab210").End(xlUp).Row
    NuevoLugar2 = ""
Else
    ListLugar2.RowSource = ""
End If
End Sub
Private Sub BtnAyuda_Click()
With AYUDAPEQ
    .Tema.Caption = HCON.Range("da9")
    .TextoAyuda = HCON.Range("Db9")
    .StartUpPosition = 0
    .left = 10
    .top = 10
    .TextoAyuda.SelStart = 0
    .Show 1
End With
End Sub

Attribute VB_Name = "CATMATERIAL"
Attribute VB_Base = "0{28942872-9081-49E0-880A-801E1AA3383B}{861DDBFA-5F36-475B-9C51-DFA732E971AB}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Private Sub ListMaterial_Click()
If BtnMas.Caption = "M" Then
    SERIE = ""
    CODIGO = ""
    BtnMas.Caption = "+"
    SERIE.BackColor = &HC0FFC0
    CODIGO.BackColor = &HC0FFC0
End If
End Sub
Private Sub ListVEHI_Click()
If BtnMasVehi.Caption = "M" Then
    NombreVehi = ""
    Matricula = ""
    BtnMasVehi.Caption = "+"
    NombreVehi.BackColor = &HC0FFC0
    Matricula.BackColor = &HC0FFC0
End If
End Sub
Private Sub ListMaterial_DblClick(ByVal Cancel As MSForms.ReturnBoolean)
If ListMaterial.ListIndex > -1 Then
    CODIGO = HCON.Range("ab" & 5 + ListMaterial.ListIndex)
    SERIE = HCON.Range("ac" & 5 + ListMaterial.ListIndex)
    BtnMas.Caption = "M"
    CODIGO.BackColor = &H80FF&
    SERIE.BackColor = &H80FF&
End If
End Sub
Private Sub Listvehi_DblClick(ByVal Cancel As MSForms.ReturnBoolean)
If ListVehi.ListIndex > -1 Then
    NombreVehi = HCON.Range("ab" & 36 + ListVehi.ListIndex)
    Matricula = HCON.Range("ac" & 36 + ListVehi.ListIndex)
    BtnMasVehi.Caption = "M"
    NombreVehi.BackColor = &H80FF&
    Matricula.BackColor = &H80FF&
End If
End Sub
Private Sub UserForm_Initialize()
Application.Calculation = xlCalculationAutomatic
ACTUALIZA
End Sub
Private Sub BtnMas_Click()
If CODIGO <> "" Then
    If BtnMas.Caption = "+" Then
        HCON.Range("ac" & HCON.Range("ab310") + 5).Value = SERIE
        HCON.Range("ab" & HCON.Range("ab310") + 5).Value = CODIGO
    ElseIf BtnMas.Caption = "M" Then
        BtnMas.Caption = "+"
        HCON.Range("ac" & 5 + ListMaterial.ListIndex).Value = SERIE
        HCON.Range("ab" & 5 + ListMaterial.ListIndex).Value = CODIGO
    End If
    SERIE = ""
    CODIGO = ""
    SERIE.BackColor = &HC0FFC0
    CODIGO.BackColor = &HC0FFC0
    ACTUALIZA
End If
End Sub
Private Sub BtnMasvehi_Click()
If NombreVehi <> "" Then
    If BtnMasVehi.Caption = "+" Then
        HCON.Range("ac" & HCON.Range("ab311") + 36).Value = Matricula
        HCON.Range("ab" & HCON.Range("ab311") + 36).Value = NombreVehi
    ElseIf BtnMasVehi.Caption = "M" Then
        BtnMasVehi.Caption = "+"
        HCON.Range("ac" & 36 + ListVehi.ListIndex).Value = Matricula
        HCON.Range("ab" & 36 + ListVehi.ListIndex).Value = NombreVehi
    End If
    Matricula = ""
    NombreVehi = ""
    Matricula.BackColor = &HC0FFC0
    NombreVehi.BackColor = &HC0FFC0
    ACTUALIZA
End If
End Sub
Private Sub BtnMenos_Click()
If ListMaterial.ListIndex <> -1 Then
    HCON.Range("ab" & ListMaterial.ListIndex + 5 & ":ac31").Value = HCON.Range("ab" & ListMaterial.ListIndex + 6 & ":ac32").Value
    ACTUALIZA
End If
HCON.Calculate
End Sub
Private Sub BtnMenosvehi_Click()
If ListVehi.ListIndex <> -1 Then
    HCON.Range("ab" & ListVehi.ListIndex + 36 & ":ac63").Value = HCON.Range("ab" & ListVehi.ListIndex + 37 & ":ac64").Value
    ACTUALIZA
End If
HCON.Calculate
End Sub
Private Sub ACTUALIZA()
HCON.Calculate
If HCON.Range("ab310") > 0 Then ListMaterial.RowSource = "con!ab5:ac" & HCON.Range("ab310") + 4
If HCON.Range("ab311") > 0 Then ListVehi.RowSource = "con!ab36:ac" & HCON.Range("ab311") + 36
End Sub
Attribute VB_Name = "CATSERVICIOS"
Attribute VB_Base = "0{002764A7-6F6C-4D7B-9F90-EEFA96461B18}{5649EFBB-0FCE-4808-B001-A22A0D14346A}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Private Sub BtnColAuto_Change()
If BtnColAuto = True Then
    CoC.BackColor = &HE0E0E0
    CoF.BackColor = &HE0E0E0
Else
    If HCON.Range("CR" & ListServicios.ListIndex + 5).Value <> "" And BtnAceptar.Caption = "M" Then
        CoC.BackColor = HCON.Range("CR" & ListServicios.ListIndex + 5).Value
        CoF.BackColor = HCON.Range("CS" & ListServicios.ListIndex + 5).Value
    Else
        CoC.BackColor = 16777215
        CoF.BackColor = 0
    End If
End If
End Sub
Private Sub BtnReemplazar_Click()
msg = MsgBox("Herramienta de reemplazar CODIGOS. Se solicitar|fffd| un CODIGO que se encuentre ACTIVO y un nuevo nombre para reemplazar en todos los Cuadrantes. " & vbCrLf & "Quieres empezar?", vbYesNo, "REEMPLAZAR CODIGOS")
If msg = 6 Then
    inp = InputBox("CODIGO ACTIVO QUE QUIERES MODIFICAR EL NOMBRE", "CODIGO ACTIVO")
    If inp <> "" Then
        inp2 = InputBox("Nuevo nombre para reemplazar al CODIGO " & inp, "NUEVO NOMBRE")
        If inp2 <> "" Then
            msg = MsgBox("OK, todo correcto, se reemplazara el codigo: " & inp & ", por el nuevo: " & inp2 & "." & vbCrLf & "Estos cambios afectaran a todos los cuadrantes que se hayan creado, y solo en el cuadrante activo sera recalculado." & vbCrLf & vbCrLf & "Quieres Continuar? Esta operacion puede tardar mas de un minuto en procesarse.", vbYesNo, "REEMPLZAR CODIGOS")
            If msg = 6 Then
                Application.EnableEvents = False
                Application.ScreenUpdating = False
                'Reemplazar de la base de datos
                Dim celda As Range
                For mes = 0 To (Year(Now) - 2015) * 12 + Month(Now) - 1
                    fila = (mes + 1) * 500
                    If HBDC.Range("a" & fila) <> "" Then
                    For Each celda In HBDC.Range("a" & fila + 1 & ":ai" & fila + 300).Cells
                        If celda = inp Then celda = inp2
                        If InStr(celda, inp & Chr(10)) = 1 Then celda.Replace inp & Chr(10), replacement:=inp2 & Chr(10), lookat:=xlPart, MatchCase:=False
                        If InStr(celda, inp) = Len(celda) - Len(inp) + 1 Then celda.Replace what:=Chr(10) & inp, replacement:=Chr(10) & inp2, lookat:=xlPart, MatchCase:=False
                    Next
                    End If
                Next mes
                'Reemplazar de este cuadrante
                For Each celda In HC.Range("m14:au313").Cells
                    If celda = inp Then celda = inp2
                    If InStr(celda, inp & Chr(10)) = 1 Then celda.Replace inp & Chr(10), replacement:=inp2 & Chr(10), lookat:=xlPart, MatchCase:=False
                    If InStr(celda, inp) = Len(celda) - Len(inp) + 1 Then celda.Replace what:=Chr(10) & inp, replacement:=Chr(10) & inp2, lookat:=xlPart, MatchCase:=False
                Next
                Application.EnableEvents = True
                Application.ScreenUpdating = True
            End If
            msg = MsgBox("Se ha reemplazado el codigo en todos los cuadrantes", vbInformation, "Finalizado")
        Else
            msg = MsgBox("No se ha definido un nuevo nombre", vbCritical, "Nada que reemplazar")
        End If
    End If
End If
End Sub

Private Sub CoC_Click()
BtnColAuto = False
ThisWorkbook.COLORSEL = ""
FORMCOLORPICKER.Show
If ThisWorkbook.COLORSEL <> "" Then
    CoC.BackColor = ThisWorkbook.COLORSEL
End If
End Sub
Private Sub CoF_Click()
BtnColAuto = False
ThisWorkbook.COLORSEL = ""
FORMCOLORPICKER.Show
If ThisWorkbook.COLORSEL <> "" Then
    CoF.BackColor = ThisWorkbook.COLORSEL
End If
End Sub
Private Sub cometido_DropButtonClick()
If HBDCAT.Range("a60").End(xlUp).Row > 9 Then
    cometido.RowSource = "bdcat!a10:a" & HBDCAT.Range("a60").End(xlUp).Row
Else
    cometido.RowSource = ""
End If
End Sub
Private Sub inicio_KeyPress(ByVal KeyAscii As MSForms.ReturnInteger)
If KeyAscii >= 48 And KeyAscii <= 57 And Len(inicio) < 5 And Val(left(inicio, 2)) < 24 Then ' VOY POR AQUI
    If Len(inicio) = 2 And InStr(inicio, ":") = 0 Then inicio = inicio & ":"
ElseIf KeyAscii = 58 Then

Else
    KeyAscii = 0
End If
End Sub
Private Sub fin_KeyPress(ByVal KeyAscii As MSForms.ReturnInteger)
If KeyAscii >= 48 And KeyAscii <= 57 And Len(fin) < 5 And Val(left(fin, 2)) < 24 Then ' VOY POR AQUI
    If Len(fin) = 2 And InStr(fin, ":") = 0 Then fin = fin & ":"
ElseIf KeyAscii = 58 Then
Else
    KeyAscii = 0
End If
End Sub
Private Sub ListServicios_Click()
BtnAceptar.Caption = "+"
CODIGO = ""
Modalidad = ""
inicio = ""
fin = ""
cometido = ""
CodigoSigo = ""
CoC.BackColor = &HE0E0E0
CoF.BackColor = &HE0E0E0
BtnColAuto = True
ACTUALIZA
End Sub

Private Sub UserForm_Initialize()
Application.Calculation = xlCalculationManual
ActualizaServicios
Modalidad.RowSource = "con!bl4:bl20"
If HBDCAT.Range("a60").End(xlUp).Row > 9 Then
    cometido.RowSource = "bdcat!a10:a" & HBDCAT.Range("a60").End(xlUp).Row
Else
    cometido.RowSource = ""
End If
End Sub
Private Sub ActualizaServicios()
ListServicios.Clear
s = 0
For f = 5 To 204
    If HCON.Range("k" & f) <> "" Then
        ListServicios.AddItem
        ListServicios.List(s, 0) = HCON.Range("k" & f)
        ListServicios.List(s, 1) = HCON.Range("l" & f)
        ListServicios.List(s, 2) = HCON.Range("m" & f)
        ListServicios.List(s, 3) = HCON.Range("n" & f)
        ListServicios.List(s, 4) = HCON.Range("o" & f)
        ListServicios.List(s, 5) = HCON.Range("j" & f)
        s = s + 1
    End If
Next
End Sub
Private Sub BtnAceptar_Click()
Application.ScreenUpdating = False
Application.EnableEvents = False
If Modalidad.ListIndex = -1 Or CODIGO = "" Then
    msg = MsgBox("Al menos se tiene que definir un codigo y una modalidad", vbCritical, "Definir servicios")
    GoTo fin
End If
For repe = 0 To ListServicios.ListCount - 1
    If UCase(CODIGO) = UCase(ListServicios.List(repe, 0)) Then
        If BtnAceptar.Caption = "+" Then
            msg = MsgBox("Definicion repetida", vbCritical, "")
            GoTo fin
        ElseIf BtnAceptar.Caption = "M" And UCase(CODIGO) <> UCase(ListServicios.List(ListServicios.ListIndex, 0)) Then
            msg = MsgBox("Definicion repetida", vbCritical, "")
            GoTo fin
        End If
    End If
Next
If cometido.ListIndex = -1 Then cometido.Value = ""
If BtnAceptar.Caption = "+" Then
    If Modalidad.ListIndex = 0 Or Modalidad.ListIndex = 1 Or Modalidad.ListIndex = 2 Then
        If IsDate(inicio) = False Then GoTo fallo
        If IsDate(fin) = False Then GoTo fallo
        If CDate(inicio) > 1 Or CDate(fin) > 1 Then GoTo fallo
        If UCase(CodigoSigo) = "P" Or UCase(CodigoSigo) = "DS" Or UCase(CodigoSigo) = "DAS" Or UCase(CodigoSigo) = "DF" Or UCase(CodigoSigo) = "DND" Or UCase(CodigoSigo) = "P" Or UCase(CodigoSigo) = "V" Or UCase(CodigoSigo) = "B" Or UCase(CodigoSigo) = "OS" Then GoTo nosigo
        If CodigoSigo <> "" And Len(CodigoSigo) <> 2 Then msg = MsgBox("Los codigos SIGO normalmente estan compuestos por 2 caracteres. Revisalo para no obtener resultados no deseados.", vbExclamation, "Definir Servicios")
        HCON.Range("p" & HCON.Range("h313") + 5).Value = "SERV"
    Else
        HCON.Range("p" & HCON.Range("h313") + 5).Value = "SITU"
        CodigoSigo = HCON.Range("bn" & Modalidad.ListIndex + 4)
    End If
    HCON.Range("l" & HCON.Range("h313") + 5).Value = Modalidad
    HCON.Range("m" & HCON.Range("h313") + 5).Value = inicio.Text
    HCON.Range("n" & HCON.Range("h313") + 5).Value = fin.Text
    HCON.Range("o" & HCON.Range("h313") + 5).Value = cometido
    HCON.Range("J" & HCON.Range("h313") + 5).Value = CodigoSigo
    
    If BtnColAuto = True Then
        HCON.Range("CR" & HCON.Range("h313") + 5).Value = ""
        HCON.Range("CS" & HCON.Range("h313") + 5).Value = ""
    Else
        HCON.Range("CR" & HCON.Range("h313") + 5).Value = CoC.BackColor
        HCON.Range("CS" & HCON.Range("h313") + 5).Value = CoF.BackColor
    End If
    HCON.Range("k" & HCON.Range("h313") + 5).Value = CODIGO ' ultimo lugar
    HCON.Calculate
    ActualizaServicios
    ListServicios.ListIndex = HCON.Range("h313") - 1
    ListServicios_Click
ElseIf BtnAceptar.Caption = "M" Then
    SeleccionAnterior = ListServicios.ListIndex
    If Modalidad.ListIndex = 0 Or Modalidad.ListIndex = 1 Or Modalidad.ListIndex = 2 Then
        If IsDate(inicio) = False Then GoTo fallo
        If IsDate(fin) = False Then GoTo fallo
        If CDate(inicio) > 1 Or CDate(fin) > 1 Then GoTo fallo
        If UCase(CodigoSigo) = "P" Or UCase(CodigoSigo) = "DS" Or UCase(CodigoSigo) = "DAS" Or UCase(CodigoSigo) = "DF" Or UCase(CodigoSigo) = "DND" Or UCase(CodigoSigo) = "P" Or UCase(CodigoSigo) = "V" Or UCase(CodigoSigo) = "B" Or UCase(CodigoSigo) = "OS" Then GoTo nosigo
        If CodigoSigo <> "" And Len(CodigoSigo) <> 2 Then msg = MsgBox("Los codigos SIGO normalmente estan compuestos por 2 caracteres. Revisalo para no obtener resultados no deseados.", vbExclamation, "Definir Servicios")
        HCON.Range("p" & ListServicios.ListIndex + 5).Value = "SERV"
    Else
        HCON.Range("p" & ListServicios.ListIndex + 5).Value = "SITU"
        CodigoSigo = HCON.Range("bn" & Modalidad.ListIndex + 4)
    End If
    HCON.Range("l" & ListServicios.ListIndex + 5).Value = Modalidad
    HCON.Range("m" & ListServicios.ListIndex + 5).Value = Format(inicio.Text, "hh:mm")
    HCON.Range("n" & ListServicios.ListIndex + 5).Value = Format(fin.Text, "hh:mm")
    HCON.Range("o" & ListServicios.ListIndex + 5).Value = cometido
    HCON.Range("j" & ListServicios.ListIndex + 5).Value = CodigoSigo
    If BtnColAuto = True Then
        HCON.Range("CR" & ListServicios.ListIndex + 5).Value = ""
        HCON.Range("CS" & ListServicios.ListIndex + 5).Value = ""
    Else
        HCON.Range("CR" & ListServicios.ListIndex + 5).Value = CoC.BackColor
        HCON.Range("CS" & ListServicios.ListIndex + 5).Value = CoF.BackColor
    End If
    HCON.Range("k" & ListServicios.ListIndex + 5).Value = CODIGO ' ultimo lugar
    HCON.Calculate
    ActualizaServicios
    ListServicios_Click
    ListServicios.ListIndex = SeleccionAnterior
End If
GoTo fin
fallo:
msg = MsgBox("Algun dato del horario no es correcto." & vbCrLf & "   El formato correcto es hh:mm", vbCritical, "Definir servicios")
GoTo fin
nosigo:
msg = MsgBox("El codigo SIGO no puede contener una definicion prioritaria.", vbCritical, "Definir servicios")
GoTo fin
fin:
Application.EnableEvents = True
Application.ScreenUpdating = True
End Sub
Private Sub BtnCometidos_Click()
CATCOMETIDOS.Show
End Sub
Private Sub BtnEliminar_Click()
If ListServicios <> -1 Then
    msg = MsgBox("|fffd|Eliminar esta definicion de servicio?", vbYesNo, "Eliminar")
    If msg = 6 Then
        HCON.Range("j" & ListServicios.ListIndex + 5 & ":p203").Value = HCON.Range("j" & ListServicios.ListIndex + 6 & ":p204").Value
        HCON.Calculate
        ActualizaServicios
        ListServicios_Click
    End If
End If
End Sub
Private Sub ListServicios_DblClick(ByVal Cancel As MSForms.ReturnBoolean)
If ListServicios.ListIndex >= 0 Then
    CODIGO.Value = HCON.Range("k" & ListServicios.ListIndex + 5)
    Modalidad.Value = HCON.Range("l" & ListServicios.ListIndex + 5)
    inicio.Value = HCON.Range("m" & ListServicios.ListIndex + 5)
    fin.Value = HCON.Range("n" & ListServicios.ListIndex + 5)
    cometido.Value = HCON.Range("o" & ListServicios.ListIndex + 5)
    CodigoSigo.Value = HCON.Range("j" & ListServicios.ListIndex + 5)
    BtnAceptar.Caption = "M"
    ACTUALIZA
    If HCON.Range("CR" & ListServicios.ListIndex + 5).Value = "" Then
        CoC.BackColor = &HE0E0E0
        CoF.BackColor = &HE0E0E0
        BtnColAuto = True
    Else
        CoC.BackColor = HCON.Range("CR" & ListServicios.ListIndex + 5).Value
        CoF.BackColor = HCON.Range("CS" & ListServicios.ListIndex + 5).Value
        BtnColAuto = False
    End If
End If
End Sub
Private Sub SpinButton1_SpinDown()
If Application.Calculation = xlCalculationAutomatic Then Application.Calculation = xlCalculationManual
If ListServicios.ListIndex > -1 And ListServicios.ListIndex <= ListServicios.ListCount - 2 Then
    SeleccionAnterior = ListServicios.ListIndex
'Copia a temporal
    HCON.Range("j207:p207").Value = HCON.Range("j" & ListServicios.ListIndex + 5 & ":p" & ListServicios.ListIndex + 5).Value
    HCON.Range("cr207:cs207").Value = HCON.Range("cr" & ListServicios.ListIndex + 5 & ":cs" & ListServicios.ListIndex + 5).Value
'Copia de arriba
    HCON.Range("j" & ListServicios.ListIndex + 5 & ":p" & ListServicios.ListIndex + 5).Value = HCON.Range("j" & ListServicios.ListIndex + 6 & ":p" & ListServicios.ListIndex + 6).Value
    HCON.Range("cr" & ListServicios.ListIndex + 5 & ":cs" & ListServicios.ListIndex + 5).Value = HCON.Range("cr" & ListServicios.ListIndex + 6 & ":cs" & ListServicios.ListIndex + 6).Value
'Restablece temporal
    HCON.Range("j" & ListServicios.ListIndex + 6 & ":p" & ListServicios.ListIndex + 6).Value = HCON.Range("j207:p207").Value
    HCON.Range("cr" & ListServicios.ListIndex + 6 & ":cs" & ListServicios.ListIndex + 6).Value = HCON.Range("cr207:cs207").Value
    ActualizaServicios
    ListServicios.ListIndex = SeleccionAnterior + 1
End If
End Sub
Private Sub SpinButton1_SpinUp()
If Application.Calculation = xlCalculationAutomatic Then Application.Calculation = xlCalculationManual
If ListServicios.ListIndex > 0 Then
    SeleccionAnterior = ListServicios.ListIndex
'Copia a temporal
    HCON.Range("j207:p207").Value = HCON.Range("j" & ListServicios.ListIndex + 5 & ":p" & ListServicios.ListIndex + 5).Value
    HCON.Range("cr207:cs207").Value = HCON.Range("cr" & ListServicios.ListIndex + 5 & ":cs" & ListServicios.ListIndex + 5).Value
'Copia de arriba
    HCON.Range("j" & ListServicios.ListIndex + 5 & ":p" & ListServicios.ListIndex + 5).Value = HCON.Range("j" & ListServicios.ListIndex + 4 & ":p" & ListServicios.ListIndex + 4).Value
    HCON.Range("cr" & ListServicios.ListIndex + 5 & ":cs" & ListServicios.ListIndex + 5).Value = HCON.Range("cr" & ListServicios.ListIndex + 4 & ":cs" & ListServicios.ListIndex + 4).Value
'Restablece temporal
    HCON.Range("j" & ListServicios.ListIndex + 4 & ":p" & ListServicios.ListIndex + 4).Value = HCON.Range("j207:p207").Value
    HCON.Range("cr" & ListServicios.ListIndex + 4 & ":cs" & ListServicios.ListIndex + 4).Value = HCON.Range("cr207:cs207").Value
    ActualizaServicios
    ListServicios.ListIndex = SeleccionAnterior - 1
End If
End Sub
Private Sub Modalidad_Change()
ACTUALIZA
End Sub
Private Sub ACTUALIZA()
If BtnAceptar.Caption = "M" Then
    CODIGO.BackColor = &H80FF&
    Modalidad.BackColor = &H80FF&
    If Modalidad.ListIndex = 0 Or Modalidad.ListIndex = 1 Or Modalidad.ListIndex = 2 Then
        inicio.Enabled = True
        fin.Enabled = True
        cometido.Enabled = True
        CodigoSigo.Enabled = True
        inicio.BackColor = &H80FF&
        fin.BackColor = &H80FF&
        cometido.BackColor = &H80FF&
        CodigoSigo.BackColor = &H80FF&
    Else
        inicio.Enabled = False
        fin.Enabled = False
        cometido.Enabled = False
        CodigoSigo.Enabled = False
        inicio.BackColor = &HC0C0C0
        fin.BackColor = &HC0C0C0
        cometido.BackColor = &HC0C0C0
        CodigoSigo.BackColor = &HC0C0C0
    End If
ElseIf BtnAceptar.Caption = "+" Then
    CODIGO.BackColor = &HC0FFC0
    Modalidad.BackColor = &HC0FFC0
    If Modalidad.ListIndex = 0 Or Modalidad.ListIndex = 1 Or Modalidad.ListIndex = 2 Then
        inicio.Enabled = True
        fin.Enabled = True
        cometido.Enabled = True
        CodigoSigo.Enabled = True
        inicio.BackColor = &HC0FFC0
        fin.BackColor = &HC0FFC0
        cometido.BackColor = &HC0FFC0
        CodigoSigo.BackColor = &HC0FFC0
    Else
        inicio.Enabled = False
        fin.Enabled = False
        cometido.Enabled = False
        CodigoSigo.Enabled = False
        inicio.BackColor = &HC0C0C0
        fin.BackColor = &HC0C0C0
        cometido.BackColor = &HC0C0C0
        CodigoSigo.BackColor = &HC0C0C0
    End If
End If
End Sub
Private Sub UserForm_QueryClose(Cancel As Integer, CloseMode As Integer)
Application.ScreenUpdating = False
Application.EnableEvents = False
Application.Calculation = xlCalculationManual
    HCON.Range("K309:O509").AdvancedFilter Action:=xlFilterCopy, criteriarange:=HCON.Range("K511:m512"), copytorange:=HCON.Range("K514:O714")
    HCON.Range("K309:O509").AdvancedFilter Action:=xlFilterCopy, criteriarange:=HCON.Range("K717:m718"), copytorange:=HCON.Range("K721:O921")
    HCON.Range("K309:O509").AdvancedFilter Action:=xlFilterCopy, criteriarange:=HCON.Range("K924:m926"), copytorange:=HCON.Range("K928:O1128")
    HCON.Range("K309:O509").AdvancedFilter Action:=xlFilterCopy, criteriarange:=HCON.Range("K1131:K1132"), copytorange:=HCON.Range("K1135:O1335")
Me.Hide
HCON.Calculate
HC.Refrescar 1
Application.EnableEvents = True
Application.ScreenUpdating = True
End Sub

Attribute VB_Name = "CATUNIDAD"
Attribute VB_Base = "0{A6ED8245-C104-4CD8-B796-5723613A00C4}{7B4CB3AB-7A4A-401A-ADE8-BC5EB0000D7E}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Private Sub UserForm_Initialize()
actualizar
End Sub
Private Sub UserForm_QueryClose(Cancel As Integer, CloseMode As Integer)
NombreUnidad.SetFocus
CompDest.SetFocus
HCON.Calculate
For a = 8 To 16
    If (HCON.Range("d" & a) <> "" And HCON.Range("e" & a) = "") Or (HCON.Range("d" & a) = "" And HCON.Range("e" & a) <> "") Then GoTo fallo
    HCON.Range("f" & a).Interior.Color = Controls("Col" & a - 7).BackColor
    HCON.Range("f" & a).Value = HCON.Range("f" & a).Interior.ColorIndex
Next
HC.Calculate
GoTo fin
fallo:
    msg = MsgBox("A cada nombre de Area se tiene que definir un nombre corto.", vbCritical, "Definir Areas")
    Cancel = True
fin:
Application.ScreenUpdating = False
Application.EnableEvents = False
HC.CambiarFiltroDato HC.Range("g13"), 7
HC.Refrescar 0
Application.ScreenUpdating = True
Application.EnableEvents = True
End Sub
Private Sub BtnAyuda_Click()
With AYUDAPEQ
    .Tema.Caption = HCON.Range("da12")
    .TextoAyuda = HCON.Range("Db12")
    .StartUpPosition = 0
    .left = 10
    .top = 10
    .TextoAyuda.SelStart = 0
    .Show 1
End With
End Sub
Private Sub actualizar()
For c = 1 To 9
    Controls("Col" & c).BackColor = ActiveWorkbook.Colors(HCON.Range("f" & c + 7).Value)
Next
End Sub
Private Sub Col1_Click()
FORMCOLORPICKER.Show
Col1.BackColor = ThisWorkbook.COLORSEL
End Sub
Private Sub Col2_Click()
FORMCOLORPICKER.Show
Col2.BackColor = ThisWorkbook.COLORSEL
End Sub
Private Sub Col3_Click()
FORMCOLORPICKER.Show
Col3.BackColor = ThisWorkbook.COLORSEL
End Sub
Private Sub Col4_Click()
FORMCOLORPICKER.Show
Col4.BackColor = ThisWorkbook.COLORSEL
End Sub
Private Sub Col5_Click()
FORMCOLORPICKER.Show
Col5.BackColor = ThisWorkbook.COLORSEL
End Sub
Private Sub Col6_Click()
FORMCOLORPICKER.Show
Col6.BackColor = ThisWorkbook.COLORSEL
End Sub
Private Sub Col7_Click()
FORMCOLORPICKER.Show
Col7.BackColor = ThisWorkbook.COLORSEL
End Sub
Private Sub Col8_Click()
FORMCOLORPICKER.Show
Col8.BackColor = ThisWorkbook.COLORSEL
End Sub
Private Sub Col9_Click()
FORMCOLORPICKER.Show
Col9.BackColor = ThisWorkbook.COLORSEL
End Sub

Attribute VB_Name = "COMENT"
Attribute VB_Base = "0{4BD10B41-BC45-4D6F-BB5E-EBD914A5C21B}{5F1D39D0-67D2-475F-B1D5-F7B937821FE6}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Private Sub BtnAceptar_Click()
HC.Cells(317, ActiveCell.Column).Value = BoxComentario.Value
HC.Cells(12, ActiveCell.Column).ClearComments
If BoxComentario <> "" Then
    HC.Cells(12, ActiveCell.Column).AddComment (BoxComentario.Value)
    With HC.Cells(12, ActiveCell.Column).Comment.Shape
        .Placement = xlMove
        .TextFrame.AutoSize = True
        .Fill.ForeColor.RGB = RGB(255, 153, 204)
        .TextFrame.Characters().Font.Size = 10
        .TextFrame.Characters().Font.Bold = True
    End With
End If
Unload Me
End Sub
Private Sub UserForm_Initialize()
BoxComentario.Value = HC.Cells(317, ActiveCell.Column).Value
End Sub
Attribute VB_Name = "COPIASEGURIDAD"
Attribute VB_Base = "0{C7148129-E080-41C2-B13E-57F6F576485A}{28EA5F5F-4E69-4601-85E6-AA12A28BF1F1}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Private Sub UserForm_Initialize()
SpinGuardados = HCON.Range("cw4")
SpinDias = HCON.Range("cw5")
SpinCopias = HCON.Range("cw6")
ACTUALIZA
End Sub
Private Sub ACTUALIZA()
LGuardados.Caption = "Crear copia cada " & SpinGuardados & " guardados"
LDias.Caption = "Crear copia cada " & SpinDias & " dias"
LCopias.Caption = "Sobreescribe cada " & SpinCopias & " copias"
End Sub
Private Sub SpinGuardados_Change()
ACTUALIZA
End Sub
Private Sub Spindias_Change()
ACTUALIZA
End Sub
Private Sub Spincopias_Change()
ACTUALIZA
End Sub
Private Sub BtnAceptar_Click()
HCON.Range("cw4") = SpinGuardados
HCON.Range("cw5") = SpinDias
HCON.Range("cw6") = SpinCopias
If Dir(ThisWorkbook.Path & "\Seguridad Cuadrante\", vbDirectory) = "" Then MkDir ThisWorkbook.Path & "\Seguridad Cuadrante\"
Set FS = CreateObject("Scripting.FileSystemObject")
FS.copyfile ThisWorkbook.Path & "\" & ThisWorkbook.Name, ThisWorkbook.Path & "\Seguridad Cuadrante\" & ThisWorkbook.Name & "Viejo " & HCON.Range("cx6")
HCON.Range("cx6") = HCON.Range("cx6") + 1
If HCON.Range("cx6") > HCON.Range("cw6") Then HCON.Range("cx6") = 1
Unload Me
End Sub
Private Sub UserForm_QueryClose(Cancel As Integer, CloseMode As Integer)
If CloseMode = 0 Then Cancel = True
End Sub
Attribute VB_Name = "CatPREVENCIONES"
Attribute VB_Base = "0{71A685B6-61E7-4243-830D-DE4DA8C1E26E}{ACF49101-A65D-48A7-928A-9BDCDBE9337E}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Private Sub BtnAplicar_Click()
If Len(CodePrevenciones) > 1020 Then msg = MsgBox("Este texto es demasiado largo. Solo se grabar|fffd|n los primero 1020 caracteres", vbExclamation, "Texto muy largo")
ActiveCell = CodePrevenciones.Text
Unload Me
End Sub

Private Sub BtnLimpiar_Click()
CodePrevenciones = ""
ListPrevenciones.ListIndex = -1
End Sub

Private Sub BtnMas_Click()
If BtnMas.Caption = "M" And CodePrevenciones <> "" And Len(CodePrevenciones) <= 1020 Then
    pos = ListPrevenciones.ListIndex
    HBDCAT.Range("t" & pos + 10).Value = CodePrevenciones
    CodePrevenciones = ""
    CodePrevenciones.BackColor = &HC0FFC0
    BtnMas.Caption = "+"
ElseIf BtnMas.Caption = "+" And HBDCAT.Range("T60").End(xlUp).Row < 60 And Len(CodePrevenciones) <= 1020 Then
    If CodePrevenciones <> "" Then
        HBDCAT.Range("t" & HBDCAT.Range("T60").End(xlUp).Row + 1) = CodePrevenciones.Text
        CodePrevenciones = ""
    End If
ElseIf HBDCAT.Range("T60").End(xlUp).Row >= 59 Then
    msg = MsgBox("Se han alcazado el limite de favoritos", vbCritical, "Limite")
ElseIf Len(CodePrevenciones) > 1020 Then
    msg = MsgBox("No se permite un texto tan largo. Maximo 1020 caracteres para la funcion de AutoGrabador", vbCritical, "Limite")
End If
If HBDCAT.Range("T60").End(xlUp).Row > 9 Then ListPrevenciones.RowSource = "bdcat!t10:t" & HBDCAT.Range("T60").End(xlUp).Row Else ListPrevenciones.RowSource = ""
End Sub
Private Sub BtnMeno_Click()
If ListPrevenciones.ListIndex <> -1 Then
    HBDCAT.Range("t" & ListPrevenciones.ListIndex + 10 & ":t59").Value = HBDCAT.Range("t" & ListPrevenciones.ListIndex + 11 & ":t60").Value
    If HBDCAT.Range("T60").End(xlUp).Row > 9 Then ListPrevenciones.RowSource = "bdcat!t10:t" & HBDCAT.Range("T60").End(xlUp).Row Else ListPrevenciones.RowSource = ""
End If
End Sub
Private Sub CodePrevenciones_Change()
LLon.Caption = "(" & Len(CodePrevenciones) & "/1020)"
End Sub
Private Sub ListPrevenciones_Change()
CodePrevenciones = CodePrevenciones & ListPrevenciones
CodePrevenciones.BackColor = &HC0FFC0
BtnMas.Caption = "+"
End Sub
Private Sub ListPrevenciones_DblClick(ByVal Cancel As MSForms.ReturnBoolean)
CodePrevenciones = HBDCAT.Range("t" & ListPrevenciones.ListIndex + 10).Value
CodePrevenciones.BackColor = &H80FF&
BtnMas.Caption = "M"
End Sub
Private Sub SpinOrden_Spinup()
If ListPrevenciones.ListIndex > 0 Then
    HBDCAT.Range("t7").Value = HBDCAT.Range("t" & ListPrevenciones.ListIndex + 9).Value
    HBDCAT.Range("t" & ListPrevenciones.ListIndex + 9).Value = HBDCAT.Range("t" & ListPrevenciones.ListIndex + 10).Value
    HBDCAT.Range("t" & ListPrevenciones.ListIndex + 10).Value = HBDCAT.Range("t7").Value
    If HBDCAT.Range("T60").End(xlUp).Row > 9 Then ListPrevenciones.RowSource = "bdcat!t10:t" & HBDCAT.Range("T60").End(xlUp).Row Else ListPrevenciones.RowSource = ""
    ListPrevenciones.ListIndex = ListPrevenciones.ListIndex - 1
End If
End Sub
Private Sub SpinOrden_SpinDown()
If ListPrevenciones.ListIndex > -1 And ListPrevenciones.ListIndex < ListPrevenciones.ListCount - 1 Then
    HBDCAT.Range("t7").Value = HBDCAT.Range("t" & ListPrevenciones.ListIndex + 11).Value
    HBDCAT.Range("t" & ListPrevenciones.ListIndex + 11).Value = HBDCAT.Range("t" & ListPrevenciones.ListIndex + 10).Value
    HBDCAT.Range("t" & ListPrevenciones.ListIndex + 10).Value = HBDCAT.Range("t7").Value
    If HBDCAT.Range("T60").End(xlUp).Row > 9 Then ListPrevenciones.RowSource = "bdcat!t10:t" & HBDCAT.Range("T60").End(xlUp).Row Else ListPrevenciones.RowSource = ""
    ListPrevenciones.ListIndex = ListPrevenciones.ListIndex + 1
End If
End Sub
Private Sub UserForm_Initialize()
If HBDCAT.Range("T60").End(xlUp).Row > 9 Then ListPrevenciones.RowSource = "bdcat!t10:t" & HBDCAT.Range("T60").End(xlUp).Row Else ListPrevenciones.RowSource = ""
CodePrevenciones = ActiveCell
End Sub
Attribute VB_Name = "EDITARPERMISOSAPP"
Attribute VB_Base = "0{181C44B1-F68B-496D-A8DF-4DE079A29505}{73658C68-69F4-4DB9-B8BB-C9677BD2BBA2}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Attribute VB_Name = "ENVIARMJS"
Attribute VB_Base = "0{289D4D84-0F38-4CB7-9214-DC18599E7FE2}{ADEE25C8-0B0D-4F97-9216-0C5B7ED3028F}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Private Sub BtnEnviarMsj_Click()
Dim MiCorreo As CDO.Message
Set MiCorreo = New CDO.Message
indice = HC.Range("bu1")
If HC.Range("cd" & indice) = True Then
    remitente = HC.Range("bt3")
Else
    remitente = HC.Range("bt7")
End If
With MiCorreo.Configuration.Fields
    .Item("http://schemas.microsoft.com/cdo/configuration/smtpusessl") = True
    .Item("http://schemas.microsoft.com/cdo/configuration/smtpauthenticate") = 1
    .Item("http://schemas.microsoft.com/cdo/configuration/smtpserver") = HC.Range("cc" & indice)
    .Item("http://schemas.microsoft.com/cdo/configuration/smtpserverport") = HC.Range("by" & indice)
    .Item("http://schemas.microsoft.com/cdo/configuration/sendusing") = 2
    .Item("http://schemas.microsoft.com/cdo/configuration/sendusername") = remitente
    .Item("http://schemas.microsoft.com/cdo/configuration/sendpassword") = HC.Range("bt4")
    .Update
End With
With MiCorreo
    .Subject = Asunto
    .From = HC.Range("bt3")
    .To = email.Caption
    If HC.Range("ce" & indice) = True Then
        .CC = HC.Range("bt3")
    End If
    .TextBody = Cuerpo & vbNewLine & vbNewLine & "Enviado desde CUADRANTE OG.11-14"
End With
On Error Resume Next
MiCorreo.Send
If Err.Number <> 0 Then ' If it failed, report the error
    If Err.Number = -2147220975 Then tipofallo = "Usuario/contrase|fffd|a erronea o no hay respuesta del servidor de correo electronico"
    If Err.Number = -2147220973 Then tipofallo = "Parece que no hay red"
    msg = MsgBox("Envio a " & email.Caption & " No se ha podido realizar." & vbCrLf & vbCrLf & "Tipo de error: " & tipofallo, vbCritical, "No se realiza el envio")
Else
    msg = MsgBox("Enviado ( " & email.Caption & ")", vbInformation, "OK")
End If
Set MiCorreo = Nothing
Unload Me
End Sub

Attribute VB_Name = "ENVIOCOLECTIVO"
Attribute VB_Base = "0{661E130F-33EE-4DB1-9375-DD440407DFFB}{FE9AF131-BD47-456B-93EA-27E93B23ED9B}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Private Sub UserForm_Initialize()
ListAreas.Clear
ListAreas.AddItem ("TODAS")
For Area = 8 To 16
    If HCON.Range("d" & Area) <> "" Then ListAreas.AddItem (HCON.Range("d" & Area).Value)
Next
End Sub
Private Sub BtnEnviar_Click()
If HC.Range("bu1") = 6 Then
    msg = MsgBox("Con este metodo de envio no se puede enviar de forma masiva.", vbCritical, "No envios masivos")
    GoTo fin
End If
personas = 0
PersAPP = 0
persalt = 0
Dim enviofila(0 To 300) As Integer
Dim envioCorreo(0 To 300) As String
HAPP.Range("a1:a10000").ClearContents
HAPP.Range("a1:a10000").NumberFormat = "@"
HAPP.Range("a1") = "Mod 2 Cuadrante OG.11/14" 'Titulo
For p = 14 To 313
    If ListAreas.ListIndex = 0 Or HC.Range("cl" & p) = HCON.Range("e" & ListAreas.ListIndex + 7) Then
        carac = HC.Range("cu" & p)
        If InStr(carac, "#P") > 0 And InStr(carac, "#E") > 0 And Len(HC.Range("cp" & p) = 7) Then
            Permisos = Mid(carac, InStr(carac, "#P") + 2, 5)
            correo = correo & Mid(carac, InStr(carac, "#E") + 2, InStr(carac, "E#") - InStr(carac, "#E") - 2) & ","
            Construirpersona p, Permisos
            personas = personas + 1
            PersAPP = PersAPP + 1
        ElseIf InStr(carac, "#I") > 0 And InStr(carac, "#E") > 0 Then
            enviofila(persalt) = p
            envioCorreo(persalt) = Mid(carac, InStr(carac, "#E") + 2, InStr(carac, "E#") - InStr(carac, "#E") - 2)
            personas = personas + 1
            persalt = persalt + 1
        End If
    End If
Next
If Dir(ThisWorkbook.Path & "\CuadrAPP", vbDirectory) <> "" Then
Else
    MkDir ThisWorkbook.Path & "\CuadrAPP"
End If
Open ThisWorkbook.Path & "\CuadrAPP\Cuadrapp" & HC.Range("ba5") & ".cap" For Output As #1
    For linea = 1 To HAPP.Range("a10000").End(xlUp).Row
        Print #1, HAPP.Range("a" & linea)
    Next
Close #1

msg = MsgBox("La planificacion se envia a " & personas & " efectivos. " & PersAPP & " suscritos a CUADRANTAPP y " & persalt & " con envio alternativo.", vbYesNo, "Envio Colectivo")
If msg = 6 Then
    If PersAPP > 0 Then
        respuesta = enviarcorreo(correo, "Planificaci|fffd|n de " & HC.Range("e3"), _
            "CUADRANTE APP.     Cuadrante OG.11/14" & vbNewLine & vbNewLine & "Planificaci|fffd|n de " & HC.Range("e3") & vbNewLine & vbNewLine & "Descarga el archivo en la carpeta definida en la APP", _
            ThisWorkbook.Path & "\CuadrAPP\Cuadrapp" & HC.Range("ba5") & ".cap" _
            , True)
        MsgEnvio respuesta, correo, "Envio a CUADRANTAPP"
    End If
    If persalt > 7 Then msg = MsgBox("ADVERTENCIA.   El metodo alternativo envia un correo individual a cada persona y este proceso conlleva mas tiempo, entre 5-10 segundos por cada persona; revisa tu bandeja de salida frecuentemente para liberar espacio en el buzon. |fffd|Quieres continuar?", vbYesNo, "Advertencia")
    If persalt > 0 And msg = 6 Then
        For en = 0 To persalt - 1
            ConstruirEnvioCuadrante enviofila(en), envioCorreo(en), True, False
            alternativosenviados = alternativosenviados & " , " & envioCorreo(en)
        Next
        msg = MsgBox("La planificacion ha sido enviada a (" & alternativosenviados & ") en modo alternativo.", vbInformation, "Envio colectivo")
    End If
fin:
    Unload Me
End If
End Sub
Private Sub Construirpersona(fila, Permisos)
linea = HAPP.Range("a10000").End(xlUp).Row + 1
clave = UCase(HC.Range("cp" & fila)) 'TIP para encriptar
HAPP.Range("a" & linea) = Encriptar("DECODIFICADO1601", clave)
'Mes ABS, Fecha de creacion, Origen y Version Cuadrante excel
HAPP.Range("a" & linea + 1) = Encriptar(HC.Range("ba5") & "," & Format(Now(), "dd/mm/yyyy hh:mm:ss") & "," & HC.Range("bt3") & "," & HC.Range("k1"), clave)
    For s = 13 To HC.Range("bd8")
        codes = codes & Replace(HC.Cells(fila, s), Chr(10), "   ") & ","
        If HC.Cells(331, s) <> "" And HC.Cells(331, s) <> "E" Then tipos = tipos & HC.Cells(331, s) & "," Else tipos = tipos & 0 & ","
        If HC.Cells(322, s) = "F" Then Fest = Fest & "1" & "," Else Fest = Fest & "0" & ","
        HI1 = HI1 & Format(HC.Cells(337, s), "dd/mm/yyyy hh:mm") & ","
        HF1 = HF1 & Format(HC.Cells(338, s), "dd/mm/yyyy hh:mm") & ","
        HI2 = HI2 & Format(HC.Cells(339, s), "dd/mm/yyyy hh:mm") & ","
        HF2 = HF2 & Format(HC.Cells(340, s), "dd/mm/yyyy hh:mm") & ","
    Next
HAPP.Range("a" & linea + 2) = Encriptar(codes, clave) ' Servicios
HAPP.Range("a" & linea + 3) = Encriptar(tipos, clave) ' Tipos
HAPP.Range("a" & linea + 4) = Encriptar(Fest, clave) ' Festivos
HAPP.Range("a" & linea + 5) = Encriptar(HI1, clave) ' Hora inicio 1
HAPP.Range("a" & linea + 6) = Encriptar(HF1, clave) ' Hora fin 1
HAPP.Range("a" & linea + 7) = Encriptar(HI2, clave) ' Hora Inicio 2
HAPP.Range("a" & linea + 8) = Encriptar(HF2, clave) ' Hora Fin 2
    'Datos de referencias
    If HC.Range("ct" & fila) = "" Then dat = "1 mes" & "," Else dat = HC.Range("ct" & fila) & "," ' Periodo de referencia
    dat = dat & HC.Range("cl" & fila) & "," 'Area
    dat = dat & Replace(HC.Range("aw364"), ",", ".") & "," 'Desviacion
    dat = dat & Replace(HC.Range("aw362"), ",", ".") & "," 'H.Ref
    dat = dat & Replace(HC.Range("aw363"), ",", ".") & "," 'H.Efectivas
    dat = dat & HC.Range("aw370") & "," ' M / T / N
    dat = dat & HC.Range("ay365") & "," ' Consideracion festiva
    dat = dat & HC.Range("ay366") & "," ' Consideracion nocturna
    dat = dat & HC.Range("ay369") & "," ' DSA pend
    dat = dat & HC.Range("aw367") & "," ' DF Pend
    dat = dat & HC.Range("aw368") & "," ' DSJ Pend
    dat = dat & HC.Range("ay375") & "," ' Servicios nocturnos anuales
    dat = dat & HC.Range("aw374") & "," ' Vacaciones
    dat = dat & HC.Range("aw393") & "," ' Asuntos Particulares
HAPP.Range("a" & linea + 9) = Encriptar(dat, clave) ' Envios de datos de referencias
HAPP.Range("a" & linea + 10) = Encriptar(Permisos, clave) ' Permisos
End Sub




Attribute VB_Name = "FORMCOLORPICKER"
Attribute VB_Base = "0{69EE7093-66E5-46B5-B2F5-EDB2C96F75B1}{2DBE5BAB-D1E5-49FE-B57D-04054A9AB528}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Private Sub UserForm_Initialize()
ACTUALIZA
End Sub
Private Sub ACTUALIZA()
For col = 1 To 56
    Controls("LABEL" & col).BackColor = ActiveWorkbook.Colors(col)
Next
End Sub
Private Sub seleccionado()
Unload Me
End Sub
Private Sub Label1_Click()
ThisWorkbook.COLORSEL = Label1.BackColor
seleccionado
End Sub
Private Sub Label2_Click()
ThisWorkbook.COLORSEL = Label2.BackColor
seleccionado
End Sub
Private Sub Label3_Click()
ThisWorkbook.COLORSEL = Label3.BackColor
seleccionado
End Sub
Private Sub Label4_Click()
ThisWorkbook.COLORSEL = Label4.BackColor
seleccionado
End Sub
Private Sub Label5_Click()
ThisWorkbook.COLORSEL = Label5.BackColor
seleccionado
End Sub
Private Sub Label6_Click()
ThisWorkbook.COLORSEL = Label6.BackColor
seleccionado
End Sub
Private Sub Label7_Click()
ThisWorkbook.COLORSEL = Label7.BackColor
seleccionado
End Sub
Private Sub Label8_Click()
ThisWorkbook.COLORSEL = Label8.BackColor
seleccionado
End Sub
Private Sub LABEL9_Click()
ThisWorkbook.COLORSEL = Label9.BackColor
seleccionado
End Sub
Private Sub LABEL10_Click()
ThisWorkbook.COLORSEL = Label10.BackColor
seleccionado
End Sub
Private Sub Label11_Click()
ThisWorkbook.COLORSEL = Label11.BackColor
seleccionado
End Sub
Private Sub LABEL12_Click()
ThisWorkbook.COLORSEL = Label12.BackColor
seleccionado
End Sub
Private Sub LABEL13_Click()
ThisWorkbook.COLORSEL = Label13.BackColor
seleccionado
End Sub
Private Sub LABEL14_Click()
ThisWorkbook.COLORSEL = Label14.BackColor
seleccionado
End Sub
Private Sub LABEL15_Click()
ThisWorkbook.COLORSEL = Label15.BackColor
seleccionado
End Sub
Private Sub Label16_Click()
ThisWorkbook.COLORSEL = Label16.BackColor
seleccionado
End Sub
Private Sub LABEL17_Click()
ThisWorkbook.COLORSEL = Label17.BackColor
seleccionado
End Sub
Private Sub Label18_Click()
ThisWorkbook.COLORSEL = Label18.BackColor
seleccionado
End Sub
Private Sub LABEL19_Click()
ThisWorkbook.COLORSEL = Label19.BackColor
seleccionado
End Sub
Private Sub LABEL20_Click()
ThisWorkbook.COLORSEL = Label20.BackColor
seleccionado
End Sub
Private Sub LABEL21_Click()
ThisWorkbook.COLORSEL = Label21.BackColor
seleccionado
End Sub
Private Sub LABEL22_Click()
ThisWorkbook.COLORSEL = Label22.BackColor
seleccionado
End Sub
Private Sub LABEL23_Click()
ThisWorkbook.COLORSEL = Label23.BackColor
seleccionado
End Sub
Private Sub LABEL24_Click()
ThisWorkbook.COLORSEL = Label24.BackColor
seleccionado
End Sub
Private Sub LABEL25_Click()
ThisWorkbook.COLORSEL = Label25.BackColor
seleccionado
End Sub
Private Sub LABEL26_Click()
ThisWorkbook.COLORSEL = Label26.BackColor
seleccionado
End Sub
Private Sub LABEL27_Click()
ThisWorkbook.COLORSEL = Label27.BackColor
seleccionado
End Sub
Private Sub LABEL28_Click()
ThisWorkbook.COLORSEL = Label28.BackColor
seleccionado
End Sub
Private Sub LABEL29_Click()
ThisWorkbook.COLORSEL = Label29.BackColor
seleccionado
End Sub
Private Sub LABEL30_Click()
ThisWorkbook.COLORSEL = Label30.BackColor
seleccionado
End Sub
Private Sub Label31_Click()
ThisWorkbook.COLORSEL = Label31.BackColor
seleccionado
End Sub
Private Sub LABEL32_Click()
ThisWorkbook.COLORSEL = Label32.BackColor
seleccionado
End Sub
Private Sub LABEL33_Click()
ThisWorkbook.COLORSEL = Label33.BackColor
seleccionado
End Sub
Private Sub LABEL34_Click()
ThisWorkbook.COLORSEL = Label34.BackColor
seleccionado
End Sub
Private Sub LABEL35_Click()
ThisWorkbook.COLORSEL = Label35.BackColor
seleccionado
End Sub
Private Sub LABEL36_Click()
ThisWorkbook.COLORSEL = Label36.BackColor
seleccionado
End Sub
Private Sub LABEL37_Click()
ThisWorkbook.COLORSEL = Label37.BackColor
seleccionado
End Sub
Private Sub LABEL38_Click()
ThisWorkbook.COLORSEL = Label38.BackColor
seleccionado
End Sub
Private Sub LABEL39_Click()
ThisWorkbook.COLORSEL = Label39.BackColor
seleccionado
End Sub
Private Sub LABEL40_Click()
ThisWorkbook.COLORSEL = Label40.BackColor
seleccionado
End Sub
Private Sub LABEL41_Click()
ThisWorkbook.COLORSEL = Label41.BackColor
seleccionado
End Sub
Private Sub Label42_Click()
ThisWorkbook.COLORSEL = Label42.BackColor
seleccionado
End Sub
Private Sub LABEL43_Click()
ThisWorkbook.COLORSEL = Label43.BackColor
seleccionado
End Sub
Private Sub LABEL44_Click()
ThisWorkbook.COLORSEL = Label44.BackColor
seleccionado
End Sub
Private Sub LABEL45_Click()
ThisWorkbook.COLORSEL = Label45.BackColor
seleccionado
End Sub
Private Sub LABEL46_Click()
ThisWorkbook.COLORSEL = Label46.BackColor
seleccionado
End Sub
Private Sub LABEL47_Click()
ThisWorkbook.COLORSEL = Label47.BackColor
seleccionado
End Sub
Private Sub LABEL48_Click()
ThisWorkbook.COLORSEL = Label48.BackColor
seleccionado
End Sub
Private Sub LABEL49_Click()
ThisWorkbook.COLORSEL = Label49.BackColor
seleccionado
End Sub
Private Sub LABEL50_Click()
ThisWorkbook.COLORSEL = Label50.BackColor
seleccionado
End Sub
Private Sub LABEL51_Click()
ThisWorkbook.COLORSEL = Label51.BackColor
seleccionado
End Sub
Private Sub LABEL52_Click()
ThisWorkbook.COLORSEL = Label52.BackColor
seleccionado
End Sub
Private Sub LABEL53_Click()
ThisWorkbook.COLORSEL = Label53.BackColor
seleccionado
End Sub
Private Sub LABEL54_Click()
ThisWorkbook.COLORSEL = Label54.BackColor
seleccionado
End Sub
Private Sub LABEL55_Click()
ThisWorkbook.COLORSEL = Label55.BackColor
seleccionado
End Sub
Private Sub LABEL56_Click()
ThisWorkbook.COLORSEL = Label56.BackColor
seleccionado
End Sub
Private Sub LABEL57_Click()
ThisWorkbook.COLORSEL = Label57.BackColor
seleccionado
End Sub
Private Sub LABEL58_Click()
ThisWorkbook.COLORSEL = Label58.BackColor
seleccionado
End Sub
Attribute VB_Name = "FORMTURNOS"
Attribute VB_Base = "0{EB810552-65AB-4AF9-A5E8-69A3FA6DF2F9}{DF432F23-8933-46B3-B605-1CD989BDA163}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Private Sub BtnAceptar_Click()
ACTUALIZA
Unload Me
End Sub
Private Sub UserForm_Initialize()
HCON.Range("ak305") = 1
LECTURA
End Sub
Private Sub BtnEliminar_Click()
HCON.Range("aj" & 306 + HCON.Range("ak305").Value & ":cn" & 306 + HCON.Range("ak305").Value).ClearContents
HCON.Range("ag" & 306 + HCON.Range("ak305").Value & ":ah" & 306 + HCON.Range("ak305").Value).ClearContents
LECTURA
End Sub
Private Sub ACTUALIZA()
ultimo = 0
Application.EnableEvents = False
Application.Calculation = xlCalculationManual
desviacion = HCON.Range("ak305").Value
HCON.Cells(306 + desviacion, 36) = TurNombre.Value
For i = 1 To 56
    HCON.Cells(306 + desviacion, 36 + i) = FORMTURNOS("TU" & i).Text
    HCON.Cells(306 + desviacion, 36 + i) = Replace(HCON.Cells(306 + desviacion, 36 + i), Chr(13), "")
    If FORMTURNOS("TU" & i) <> "" Then ultimo = i
Next i
HCON.Range("ah" & desviacion + 306) = ultimo
If ultimo Mod 7 = 0 Then
    HCON.Range("AG" & desviacion + 306) = ultimo
Else
    HCON.Range("AG" & desviacion + 306) = Int(ultimo / 7 + 0.9) * 7
End If
If ultimo > 28 And desviacion < 6 Then 'duplicar con offset
    msg = MsgBox("Este turno es mayor a 4 semanas!! Puede darse algun caso en la asignacion manual del turno donde no se pueda establecer el inicio del turno en la posicion deseada." & vbCrLf & "Se aconseja duplicar este turno con desplazamiento." & vbCrLf & "|fffd|DUPLICAR ESTE TURNO DESPLAZADO AUTOMATICAMENTE EN LA SIGUIENTE POSICION? (Recomendado)", vbYesNo, "DUPLICAR TURNO")
    If msg = 6 Then
        For i = 1 To ultimo
            If i + 28 <= ultimo Then HCON.Cells(306 + desviacion + 1, 36 + i) = HCON.Cells(306 + desviacion, 36 + i + 28)
            If i + 28 > ultimo Then HCON.Cells(306 + desviacion + 1, 36 + i) = HCON.Cells(306 + desviacion, 36 + i - ultimo + 28)
        Next i
        HCON.Range("ah" & desviacion + 306 + 1) = ultimo
        HCON.Cells(306 + desviacion + 1, 36) = TurNombre.Value & "(2)"
        msg = MsgBox("Se ha creado " & TurNombre.Value & "(2)" & " en la siguiente posision.", vbInformation, "TURNO DUPLICADO")
    End If
End If
Application.Calculate
Application.EnableEvents = True
End Sub
Private Sub LECTURA()
If HCON.Range("aj307") = "" Then HCON.Range("aj307") = "1- No definido"
If HCON.Range("aj308") = "" Then HCON.Range("aj308") = "2- No definido"
If HCON.Range("aj309") = "" Then HCON.Range("aj309") = "3- No definido"
If HCON.Range("aj310") = "" Then HCON.Range("aj310") = "4- No definido"
If HCON.Range("aj311") = "" Then HCON.Range("aj311") = "5- No definido"
If HCON.Range("aj312") = "" Then HCON.Range("aj312") = "6- No definido"
desviacion = HCON.Range("ak305").Value
TurNombre.Text = HCON.Cells(306 + desviacion, 36)
For i = 1 To 56
    FORMTURNOS("TU" & i).Value = HCON.Cells(306 + desviacion, 36 + i)
Next i
End Sub
Private Sub NumTurno_SpinDown()
If HCON.Range("ak305") > 1 Then HCON.Range("ak305") = HCON.Range("ak305") - 1
LECTURA
End Sub
Private Sub NumTurno_SpinUp()
If HCON.Range("ak305") < 6 Then HCON.Range("ak305") = HCON.Range("ak305") + 1
LECTURA
End Sub
Private Sub UserForm_QueryClose(Cancel As Integer, CloseMode As Integer)
Unload CAJONSERVICIOS
End Sub


Private Sub BtnAyuda_Click()
With AYUDAPEQ
    .Tema.Caption = HCON.Range("da13")
    .TextoAyuda = HCON.Range("Db13")
    .StartUpPosition = 0
    .left = 10
    .top = 10
    .TextoAyuda.SelStart = 0
    .Show 1
End With
End Sub

Attribute VB_Name = "FormManual"
Attribute VB_Base = "0{C5B698F3-3246-46FC-BA06-8376C824FA36}{392039E9-B9A0-4CB1-897D-77C3C71D7726}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Private Sub BtnAjusteSigo_Click()
On Error GoTo fallo
Application.EnableEvents = False
Application.ScreenUpdating = False
fililLa = ActiveCell.Row
Dim fileimportar As Variant
Dim origen As Workbook
Dim Listado As Worksheet
With Application.FileDialog(msoFileDialogOpen)
    .AllowMultiSelect = False
    .Filters.Clear
    .Filters.Add "Informe de Personal de SIGO", "*.XLS", 1
    .Title = "Seleccion de archivo SIGO"
    If .Show = -1 Then
        For Each fileimportar In .SelectedItems
            On Error GoTo fallo
            Set origen = Workbooks.Open(fileimportar)
            Set Listado = origen.Sheets(1)
            For n = 1 To 400
                If Listado.Range("b" & n) = HC.Range("cm" & fililLa) And Listado.Range("c" & n) = HC.Range("cn" & fililLa) And Listado.Range("d" & n) = HC.Range("co" & fililLa) Then
                    ok = True
                    If Listado.Name <> HC.Range("ba3") & HC.Range("ba4") Then
                        msg = MsgBox("El listado seleccionado parece que contiene datos de " & Listado.Name & " y tu mes seleccionado es de " & HC.Range("ba3") & " de " & HC.Range("ba4") & "." & vbCrLf & "Quieres continuar con este mes?", 36, "Conflicto posible")
                        If msg = 7 Then GoTo adios
                    End If
                    Hdesv = Listado.Range("F" & n).Value
                    DF.Value = Listado.Range("N" & n).Value
                    DCO.Value = Listado.Range("P" & n).Value
                    DSA.Value = Listado.Range("O" & n).Value
                    msg = MsgBox("Se han encontrado los datos relativos a:" & vbCrLf & vbCrLf & "Horas de desviacion del periodo de referencia" & vbCrLf & "Descansos festivos (DF)" & vbCrLf & "Descansos Singularizados (DAS)" & vbCrLf & "Descansos por superacion de jornada (DSJ)", vbInformation, "Importado")
                    Exit For
                End If
            Next
            origen.Close savechanges:=False
            If ok = False Then msg = MsgBox("No se encuentran datos sobre esta persona. La busqueda se ha realizado sobre el nombre, asegurate de que el nombre de la persona este bien escrito y que sea exacto al de SIGO.", vbCritical, "No se importan datos")
        Next
    End If
End With
GoTo fin
fallo:
msg = MsgBox("Este archivo no contiene la informacion requerida", vbCritical, "No se importan datos")
adios:
origen.Close savechanges:=False
fin:
Application.EnableEvents = True
Application.ScreenUpdating = True
End Sub

Private Sub BtnAyuda_Click()
FormManual.Width = 662.25
End Sub

Private Sub UserForm_Initialize()
On Error Resume Next
LbNombre.Caption = HC.Range("do" & ActiveCell.Row)
Hdesv = 0 'HC.Range("cW" & ActiveCell.Row)
If HC.Range("cX" & ActiveCell.Row) <> 0 Then SF = left(HC.Range("cX" & ActiveCell.Row), InStr(1, HC.Range("cX" & ActiveCell.Row), "R") - 1) Else SF = 0
If HC.Range("cy" & ActiveCell.Row) <> 0 Then SN = left(HC.Range("cy" & ActiveCell.Row), InStr(1, HC.Range("cy" & ActiveCell.Row), "R") - 1) Else SN = 0
If HC.Range("cX" & ActiveCell.Row) <> 0 Then SFP = Mid(HC.Range("cX" & ActiveCell.Row), InStr(1, HC.Range("cX" & ActiveCell.Row), "R") + 1, 2) Else SFP = 0
If HC.Range("cy" & ActiveCell.Row) <> 0 Then SNP = Mid(HC.Range("cy" & ActiveCell.Row), InStr(1, HC.Range("cy" & ActiveCell.Row), "R") + 1, 2) Else SNP = 0
Hdesv.Value = HC.Range("DD" & ActiveCell.Row)
DSA = HC.Range("CZ" & ActiveCell.Row)
DF = HC.Range("db" & ActiveCell.Row)
DCO = HC.Range("dA" & ActiveCell.Row)
AP = HC.Range("DE" & ActiveCell.Row)
V = HC.Range("CH" & ActiveCell.Row)
DIN = HC.Range("ax375").Value
TraNoct.Value = HC.Range("ay375").Value
End Sub
Private Sub BtnAceptar_Click()
If IsNumeric(Hdesv.Value) = False Or Hdesv.Value <> "" Then Hdesv.Value = 0
If IsNumeric(SF.Value) = False And SF.Value <> "" Then GoTo fallo
If IsNumeric(SN.Value) = False And SN.Value <> "" Then GoTo fallo
If IsNumeric(SFP.Value) = False And SFP.Value <> "" Then GoTo fallo
If IsNumeric(SNP.Value) = False And SNP.Value <> "" Then GoTo fallo
If IsNumeric(DSA.Value) = False And DSA.Value <> "" Then GoTo fallo
If IsNumeric(DF.Value) = False And DF.Value <> "" Then GoTo fallo
If IsNumeric(DCO.Value) = False And DCO.Value <> "" Then GoTo fallo
If IsNumeric(DIN.Value) = False And DIN.Value <> "" Then GoTo fallo
If SF.Value > SFP.Value Or SN.Value > SNP.Value Then GoTo Fallo2
'Resolver que hay escrito en AP
If InStr(AP, " / ") <> 0 Then
    If IsNumeric(Mid(AP, 1, InStr(AP, " / "))) = True Then
        If IsNumeric(Mid(AP, InStr(AP, " / ") + 3, 20)) = True Then
        
        Else
            If Mid(AP, InStr(AP, " / ") + 3, 20) = "" Then
                AP = AP & 0
            Else: GoTo FAPV
            End If
        End If
    Else: GoTo FAPV
    End If
Else: GoTo FAPV
End If
'Resolver que hay escrito en vacaciones
If InStr(V, " / ") <> 0 Then
    If IsNumeric(Mid(V, 1, InStr(V, " / "))) = True Then
        If IsNumeric(Mid(V, InStr(V, " / ") + 3, 20)) = True Then
        
        Else
            If Mid(V, InStr(V, " / ") + 3, 20) = "" Then
                V = V & 0
            Else: GoTo FAPV
            End If
        End If
    Else: GoTo FAPV
    End If
Else: GoTo FAPV
End If

'msg = MsgBox("Para volver a calcular automaticamente pulsa ACTIVAR en el menu del efectivo", vbInformation, "Recordatorio")
Application.Calculation = xlCalculationManual
HC.Range("cj" & ActiveCell.Row) = "MANUAL"
HC.Range("DD" & ActiveCell.Row).Value = CDbl(Hdesv.Value)
HC.Range("cX" & ActiveCell.Row).Value = SF.Value & "R" & SFP
HC.Range("cY" & ActiveCell.Row).Value = SN.Value & "R" & SNP
HC.Range("CZ" & ActiveCell.Row).Value = DSA.Value
HC.Range("DB" & ActiveCell.Row).Value = DF.Value
HC.Range("DA" & ActiveCell.Row).Value = DCO.Value
HC.Range("DE" & ActiveCell.Row).Value = "'" & AP.Text
HC.Range("DF" & ActiveCell.Row).Value = "I" & DIN.Value & "N" & TraNoct.Value
HC.Range("ch" & ActiveCell.Row).Value = "'" & V.Text
HC.Range("CU" & ActiveCell.Row).ClearContents
HC.Range("CV" & ActiveCell.Row).ClearContents
HC.Cambiar_Servicio (ActiveCell.Row)
If HC.Range("g13") = "ACTIVOS" Then HC.Range("g" & ActiveCell.Row) = "MANUAL"
Unload Me
GoTo fin
fallo:
msg = MsgBox("Algun dato no parece correcto.", vbCritical, "No son numeros")
GoTo fin
Fallo2:
msg = MsgBox("No pueden existir mas festivos / nocturnos cumplimentados que planificados.", vbCritical, "Error logico")
GoTo fin
FAPV:
msg = MsgBox("Los dias de credito de VACACIONES o ASUNTOS PARTICULARES se tienen que escribir en formato __ / __ (con un espacio entre la division  /  )", vbCritical, "Formato incorrecto")
GoTo fin
fin:
End Sub

Attribute VB_Name = "GRAFICOS"
Attribute VB_Base = "0{58D64C09-EBA1-4877-B56D-B36791D7D895}{437DC782-6265-4B40-87B1-7DBFEE9A5BFD}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Private Sub UserForm_Initialize()
Periodo.AddItem ("MENSUAL")
Periodo.AddItem ("ANUAL")
Periodo.AddItem ("TRIENAL")
Cod1 = HG.Range("b13")
Cod2 = HG.Range("b14")
Cod3 = HG.Range("b15")
Cod4 = HG.Range("b16")
Cod5 = HG.Range("b17")
Cod6 = HG.Range("b18")
Periodo.Value = "ANUAL"
End Sub
Private Sub Periodo_Change()
On Error Resume Next
If Periodo.Value = "ANUAL" Then
    With HG.ChartObjects("GRAF").Chart.Axes(xlCategory)
        .BaseUnit = xlDays
        .MajorUnitScale = xlMonths
        .MajorUnit = 1
    End With
    Desde.Clear
    For i = 2015 To 2025
        Desde.AddItem (i)
    Next i
    Desde.ListIndex = Year(Now()) - 2015
ElseIf Periodo.Value = "TRIENAL" Then
    With HG.ChartObjects("GRAF").Chart.Axes(xlCategory)
        .BaseUnit = xlDays
        .MajorUnitScale = xlMonths
        .MajorUnit = 3
    End With
    For i = 2015 To 2022
        Desde.AddItem (i)
    Next i
    Desde.ListIndex = Year(Now()) - 2015
ElseIf Periodo.Value = "MENSUAL" Then
    With HG.ChartObjects("GRAF").Chart.Axes(xlCategory)
        .BaseUnit = xlDays
        .MajorUnitScale = xlDays
        .MajorUnit = 1
    End With
    Desde.Clear
    For i = 2015 To 2025
        Desde.AddItem ("ENERO " & i)
        Desde.AddItem ("FEBRERO " & i)
        Desde.AddItem ("MARZO " & i)
        Desde.AddItem ("ABRIL " & i)
        Desde.AddItem ("MAYO " & i)
        Desde.AddItem ("JUNIO " & i)
        Desde.AddItem ("JULIO " & i)
        Desde.AddItem ("AGOSTO " & i)
        Desde.AddItem ("SEPTIEMBRE " & i)
        Desde.AddItem ("OCTUBRE " & i)
        Desde.AddItem ("NOVIEMBRE " & i)
        Desde.AddItem ("DICIEMBRE " & i)
    Next i
    Desde.ListIndex = Month(Now()) - 1 + (Year(Now()) - 2015) * 12
End If
End Sub
Private Sub Desde_Change()
If Periodo.Value = "ANUAL" And Desde <> "" Then
    Application.ScreenUpdating = False
    HG.Range("B1").Value = Desde.ListIndex * 6000 + 501
    HG.Range("B2").Value = Desde.ListIndex * 6000 + 6500
    HG.Range("D:J").ClearContents
    HG.Range("b3") = HG.Range("b1")
    Application.Calculation = xlCalculationManual
    fila = HG.Range("b1").Value
    g = 0
    Do
        For i = 1 To HG.Range("b8")
            g = g + 1
            HG.Range("D" & g) = HG.Range("b10") + g - 1
        Next
    HG.Range("b3") = HG.Range("B3") + 500
    fila = fila + 500
    HG.Calculate
    Loop Until fila > HG.Range("b2").Value
    GRAFICAR
    Application.Calculation = xlCalculationAutomatic
    Application.ScreenUpdating = True
ElseIf Periodo.Value = "TRIENAL" And Desde <> "" Then
    Application.ScreenUpdating = False
    HG.Range("B1").Value = Desde.ListIndex * 6000 + 501
    HG.Range("B2").Value = Desde.ListIndex * 6000 + 18500
    HG.Range("D:J").ClearContents
    HG.Range("b3") = HG.Range("b1")
    Application.Calculation = xlCalculationManual
    fila = HG.Range("b1").Value
    g = 0
    Do
        For i = 1 To HG.Range("b8")
            g = g + 1
            HG.Range("D" & g) = HG.Range("b10") + g - 1
        Next
        HG.Range("b3") = HG.Range("B3") + 500
    fila = fila + 500
    HG.Calculate
    Loop Until fila > HG.Range("b2").Value
    GRAFICAR
    Application.Calculation = xlCalculationAutomatic
    Application.ScreenUpdating = True
ElseIf Periodo.Value = "MENSUAL" And Desde <> "" Then
    Application.ScreenUpdating = False
    HG.Range("B1").Value = (Desde.ListIndex + 1) * 500 + 1
    HG.Range("B2").Value = (Desde.ListIndex + 1) * 500 + 300
    HG.Range("D:J").ClearContents
    HG.Range("b3") = HG.Range("b1")
    Application.Calculation = xlCalculationManual
    fila = HG.Range("b1").Value
    g = 0
    Do
        For i = 1 To HG.Range("b8")
            g = g + 1
            HG.Range("D" & g) = HG.Range("b10") + g - 1
        Next
        HG.Range("b3") = HG.Range("B3") + 500
    fila = fila + 500
    HG.Calculate
    Loop Until fila > HG.Range("b2").Value
    GRAFICAR
    Application.Calculation = xlCalculationAutomatic
    Application.ScreenUpdating = True
End If
End Sub
Private Sub Dibujar1_Click()
HG.Range("e:E").ClearContents
If Cod1 <> "" And Desde.Value <> "" And Periodo.Value <> "" Then
    Application.ScreenUpdating = False
    HG.Range("b13") = Cod1.Text
    HG.Range("b3") = HG.Range("b1")
    Application.Calculation = xlCalculationManual
    fila = HG.Range("b1").Value
    g = 0
    Do
        For i = 1 To HG.Range("b8")
            g = g + 1
            HG.Range("E" & g) = Application.WorksheetFunction.CountIf(HBDC.Range(HBDC.Cells(fila, i), HBDC.Cells(fila + 300, i)), Cod1.Value) _
            + Application.WorksheetFunction.CountIf(HBDC.Range(HBDC.Cells(fila, i), HBDC.Cells(fila + 300, i)), Cod1.Value & Chr(10) & "*") _
            + Application.WorksheetFunction.CountIf(HBDC.Range(HBDC.Cells(fila, i), HBDC.Cells(fila + 300, i)), "*" & Chr(10) & Cod1.Value)
        Next
        HG.Range("b3") = HG.Range("B3") + 500
    fila = fila + 500
    HG.Calculate
    Loop Until fila > HG.Range("b2").Value
End If
GRAFICAR
Application.Calculation = xlCalculationAutomatic
Application.ScreenUpdating = True
End Sub
Private Sub Dibujar2_Click()
HG.Range("f:f").ClearContents
If Cod2 <> "" And Desde.Value <> "" And Periodo.Value <> "" Then
    Application.ScreenUpdating = False
    HG.Range("b14") = Cod2.Text
    HG.Range("b3") = HG.Range("b1")
    Application.Calculation = xlCalculationManual
    fila = HG.Range("b1").Value
    g = 0
    Do
        For i = 1 To HG.Range("b8")
            g = g + 1
            HG.Range("F" & g) = Application.WorksheetFunction.CountIf(HBDC.Range(HBDC.Cells(fila, i), HBDC.Cells(fila + 300, i)), Cod2.Value) _
            + Application.WorksheetFunction.CountIf(HBDC.Range(HBDC.Cells(fila, i), HBDC.Cells(fila + 300, i)), Cod2.Value & Chr(10) & "*") _
            + Application.WorksheetFunction.CountIf(HBDC.Range(HBDC.Cells(fila, i), HBDC.Cells(fila + 300, i)), "*" & Chr(10) & Cod2.Value)
            Next
        HG.Range("b3") = HG.Range("B3") + 500
    fila = fila + 500
    HG.Calculate
    Loop Until fila > HG.Range("b2").Value
End If
GRAFICAR
Application.Calculation = xlCalculationAutomatic
Application.ScreenUpdating = True
End Sub
Private Sub Dibujar3_Click()
HG.Range("g:g").ClearContents
If Cod3 <> "" And Desde.Value <> "" And Periodo.Value <> "" Then
    Application.ScreenUpdating = False
    HG.Range("b15") = Cod3.Text
    HG.Range("b3") = HG.Range("b1")
    Application.Calculation = xlCalculationManual
    fila = HG.Range("b1").Value
    g = 0
    Do
        For i = 1 To HG.Range("b8")
            g = g + 1
            HG.Range("G" & g) = Application.WorksheetFunction.CountIf(HBDC.Range(HBDC.Cells(fila, i), HBDC.Cells(fila + 300, i)), Cod3.Value) _
            + Application.WorksheetFunction.CountIf(HBDC.Range(HBDC.Cells(fila, i), HBDC.Cells(fila + 300, i)), Cod3.Value & Chr(10) & "*") _
            + Application.WorksheetFunction.CountIf(HBDC.Range(HBDC.Cells(fila, i), HBDC.Cells(fila + 300, i)), "*" & Chr(10) & Cod3.Value)
            Next
        HG.Range("b3") = HG.Range("B3") + 500
    fila = fila + 500
    HG.Calculate
    Loop Until fila > HG.Range("b2").Value
End If
GRAFICAR
Application.Calculation = xlCalculationAutomatic
Application.ScreenUpdating = True
End Sub
Private Sub Dibujar4_Click()
HG.Range("H:H").ClearContents
If Cod4 <> "" And Desde.Value <> "" And Periodo.Value <> "" Then
    Application.ScreenUpdating = False
    HG.Range("b16") = Cod4.Text
    HG.Range("b3") = HG.Range("b1")
    Application.Calculation = xlCalculationManual
    fila = HG.Range("b1").Value
    g = 0
    Do
        For i = 1 To HG.Range("b8")
            g = g + 1
            HG.Range("H" & g) = Application.WorksheetFunction.CountIf(HBDC.Range(HBDC.Cells(fila, i), HBDC.Cells(fila + 300, i)), Cod4.Value) _
            + Application.WorksheetFunction.CountIf(HBDC.Range(HBDC.Cells(fila, i), HBDC.Cells(fila + 300, i)), Cod4.Value & Chr(10) & "*") _
            + Application.WorksheetFunction.CountIf(HBDC.Range(HBDC.Cells(fila, i), HBDC.Cells(fila + 300, i)), "*" & Chr(10) & Cod4.Value)
            Next
        HG.Range("b3") = HG.Range("B3") + 500
    fila = fila + 500
    HG.Calculate
    Loop Until fila > HG.Range("b2").Value
End If
GRAFICAR
Application.Calculation = xlCalculationAutomatic
Application.ScreenUpdating = True
End Sub
Private Sub Dibujar5_Click()
HG.Range("I:I").ClearContents
If Cod3 <> "" And Desde.Value <> "" And Periodo.Value <> "" Then
    Application.ScreenUpdating = False
    HG.Range("b17") = Cod5.Text
    HG.Range("b3") = HG.Range("b1")
    Application.Calculation = xlCalculationManual
    fila = HG.Range("b1").Value
    g = 0
    Do
        For i = 1 To HG.Range("b8")
            g = g + 1
            HG.Range("I" & g) = Application.WorksheetFunction.CountIf(HBDC.Range(HBDC.Cells(fila, i), HBDC.Cells(fila + 300, i)), Cod5.Value) _
            + Application.WorksheetFunction.CountIf(HBDC.Range(HBDC.Cells(fila, i), HBDC.Cells(fila + 300, i)), Cod5.Value & Chr(10) & "*") _
            + Application.WorksheetFunction.CountIf(HBDC.Range(HBDC.Cells(fila, i), HBDC.Cells(fila + 300, i)), "*" & Chr(10) & Cod5.Value)
            Next
        HG.Range("b3") = HG.Range("B3") + 500
    fila = fila + 500
    HG.Calculate
    Loop Until fila > HG.Range("b2").Value
End If
GRAFICAR
Application.Calculation = xlCalculationAutomatic
Application.ScreenUpdating = True
End Sub
Private Sub Dibujar6_Click()
HG.Range("J:J").ClearContents
If Cod3 <> "" And Desde.Value <> "" And Periodo.Value <> "" Then
    Application.ScreenUpdating = False
    HG.Range("b18") = Cod6.Text
    HG.Range("b3") = HG.Range("b1")
    Application.Calculation = xlCalculationManual
    fila = HG.Range("b1").Value
    g = 0
    Do
        For i = 1 To HG.Range("b8")
            g = g + 1
            HG.Range("J" & g) = Application.WorksheetFunction.CountIf(HBDC.Range(HBDC.Cells(fila, i), HBDC.Cells(fila + 300, i)), Cod6.Value) _
            + Application.WorksheetFunction.CountIf(HBDC.Range(HBDC.Cells(fila, i), HBDC.Cells(fila + 300, i)), Cod6.Value & Chr(10) & "*") _
            + Application.WorksheetFunction.CountIf(HBDC.Range(HBDC.Cells(fila, i), HBDC.Cells(fila + 300, i)), "*" & Chr(10) & Cod6.Value)
            Next
        HG.Range("b3") = HG.Range("B3") + 500
    fila = fila + 500
    HG.Calculate
    Loop Until fila > HG.Range("b2").Value
End If
GRAFICAR
Application.Calculation = xlCalculationAutomatic
Application.ScreenUpdating = True
End Sub
Private Sub GRAFICAR()
Set graficoactivo = HG.ChartObjects(1).Chart
CARPETA = Environ("LOCALAPPDATA") & "\Temp"
NombreGIF = CARPETA & "\temporal.gif"
HG.Shapes(1).Height = GRAFICOS.GRAFICO.Height
HG.Shapes(1).Width = GRAFICOS.GRAFICO.Width
graficoactivo.Export filename:=NombreGIF, FilterName:="GIF"
GRAFICOS.GRAFICO.Picture = LoadPicture(NombreGIF)
End Sub
Attribute VB_Name = "GRAFICOS2"
Attribute VB_Base = "0{35259D8D-991C-42CF-845D-EECA7029938E}{E740DECD-E78B-408E-A991-3D2BB73A11B6}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Private Sub UserForm_Initialize()
GRAFICOS2.Caption = "SERVICIOS DE " & HC.Range("e3")
HG.Range("r66:s116").ClearContents
HG.Range("m66:n266").AdvancedFilter Action:=xlFilterCopy, criteriarange:=HG.Range("p66:q67"), copytorange:=HG.Range("r66")
HG.ChartObjects("chardos").Chart.SetSourceData Source:=Sheets("G").Range("R67:S" & HG.Range("r65") + 66)
GRAFICAR
End Sub
Private Sub GRAFICAR()
Set graficoactivo = HG.ChartObjects("chardos").Chart
CARPETA = Environ("LOCALAPPDATA") & "\Temp"
NombreGIF = CARPETA & "\temporal.gif"
HG.Shapes("chardos").Height = GRAFICOS2.GRAFICO.Height
HG.Shapes("chardos").Width = GRAFICOS2.GRAFICO.Width
graficoactivo.Export filename:=NombreGIF, FilterName:="GIF"
GRAFICOS2.GRAFICO.Picture = LoadPicture(NombreGIF)
End Sub

Attribute VB_Name = "Generales"
'----------------
'---------------- Codigo dise|fffd|ado por Ivan de la Paz
'---------------- Por favor no lo modifiques sin contactar conmigo
'---------------CODIGOS HERRAMIENTAS DE DESARROLLADOR---------------------------------
Private Sub primer_uso() ' MACRO RESTABLECER A FABRICA
HC.Range("bh3") = False
DISTRIBUIR
HC.Range("bh3") = False
HC.Range("ba1") = "SI" ' Establece primer uso
HCON.Range("dh1") = 1 'establecemos tutorial a primer paso
HC.Range("BG5") = True ' Establece mostrar acerca al inicio
HC.Range("ba10") = CDbl(CDate(Now()))
LimpiarBaseDeDatosNombrar
HC.Range("bh3") = True
HPASS.Cortina.top = HPASS.Range("e27").top
HPASS.Cortina.left = HPASS.Range("e27").left
SALVAR
End Sub
Sub DISTRIBUIR()
HC.Range("bh3") = False
Application.EnableEvents = False
Application.ScreenUpdating = False
'-------BORRAR DATOS
despro HVAC
HVAC.Range("b7:am306").ClearContents ' Modulo de vacaciones
pro HVAC
HBDC.Range("A499:a65536").EntireRow.Delete  ' BASE DE DATOS CUADRANTE EXCEPTO PLANTILLA (1-500)
HVAL.Cells.Delete ' Hoja de VALIDACIONES
HBDN.Cells.Delete ' BASE DE DATOS DIAS NOMBRADOS
HASI.Range("b4:p303").ClearContents ' Borrar pagina de importar datos personales
HBDP.Range("a20:a65536").EntireRow.Delete ' Borra las plantillas de las presentaciones
'HC.Range("BJ3:BO9").ClearContents 'BORRAR LOS CONTAR
If HC.FilterMode = True Then
    HC.ShowAllData
    HC.Range("g11") = "TODAS"
    HC.Range("i11") = "TODOS"
End If
HC.Range("a14:a313").EntireRow.Hidden = False
HAPP.Range("a1:l50000").ClearContents ' borrar solicitudes
HBDC.Range("A" & 1 & ":CT" & 1 + 304).Copy '-----------|
HC.Range("M14:DF318").PasteSpecial Paste:=xlPasteAll '-|     RESTABLECE SERVICIOS A LA PLANTILLA
HC.Range("H14:J313").Value = HC.Range("CM14:CO313").Value  'BORRA LOS NOMBRE Y APELLIDOS
HC.Range("cs6:cs10").ClearContents ' LOS CONTAR
HC.Range("cs5") = 0 ' LOS CONTAR
HC.Range("G13").Value = "ANTIG|fffd|EDAD"
HC.Range("G14:G313").Value = HC.Range("CI14:CI313").Value
HC.Range("F13").Value = "H / H.REF"
HC.Range("CS12") = 112
HC.Range("a3:d5").ClearContents
HC.Range("g317") = False ' Ocultar las 300 filas
HC.Range("G318") = True ' Selecciona colorear las areas
HC.Range("bo1:bo2").Value = 5 ' define la desviciacion
HC.Range("bo3:bo4").Value = 10 ' define la desviciacion
HC.Range("m14:au313").Font.Size = 10
HC.Range("F14:F313").NumberFormat = "General"
HC.Range("G14:G313").Validation.Delete
HC.Range("G14:G313").Value = HC.Range("CI14:CI313").Value
HC.Range("h14:h313").ClearComments ' elimina comentarios de las personas
HC.Range("dg14:dt313").ClearContents ' borra rastros de calculos
HC.Range("M317:AU317").ClearContents ' Borrar los comentarios de dias
HC.Range("M12:AU12").ClearComments ' borra los comentarios de dias 2|fffd| fila
HC.Range("ci363:ec386").ClearContents ' Borra las estrategias
HC.Range("ci363:ci386").Interior.Color = HC.Range("ci387").Interior.Color
HC.Range("ci363:ci386").Font.Color = HC.Range("ci387").Font.Color
HC.Range("a13:d313").ClearContents
HC.Range("bt3:bt4").ClearContents 'Borra usuario y contrase|fffd|a email
HC.Range("a13:d13").Value = "Dato"
HC.Range("cn12:cq12").ClearContents
HC.Cambio_mes "", 0, False, False
HC.VerEstrategias
HC.Range("BG12") = 1 ' establece sistema de calculo DSA
HC.Range("BH12") = 7 ' Establece offset de dias DSA
HC.Range("bh2") = False 'Establce sin alarma descansos <11 h
HC.Range("bh1") = True 'Establce alarma descansos <8 h y vacaciones
HC.RestableceDeshacer ' borra los deshacer
HC.Range("bm362:bs408").ClearContents ' Borra perfiles de AutoPla
HC.Range("bi362:bi408").ClearContents ' Borra perfiles de AutoPla
HC.Range("bm362:bm408").Value = HC.Range("bt362:bt408").Value ' *INICIO RAPIDO PERFIL AUTOPLA PATRULLAS
HC.Range("bd360:bd371").Copy Destination:=HC.Range("bc360:bc371") ' *INICIO RAPIDO FAVORITOS
HC.Range("bb360:bb361").Value = HC.Range("ba360:ba361").Value 'Posicion favoritos
HC.Range("bb370:bb371").Value = HC.Range("ba370:ba371").Value 'Posicion cajon servicios
HII.Range("aq1").ClearContents ' Borra TIP del listado individual
HVICI.Range("b4:e2500").ClearContents ' Borra el informe de vicisitudes
HCON.Range("D5:E5").ClearContents   ' UNIDAD
HCON.Range("D8:E16").ClearContents  ' AREAS
HCON.Range("f8:f16").Value = HCON.Range("f23:f31").Value 'Restablecer Colores Areas
HCON.Range("d8:e8").Value = HCON.Range("g326:h326").Value ' *INICIO RAPIDO CATALOGO UNIDAD
HCON.Range("aq4:as11").Value = HCON.Range("Aq15:as22").Value '*INICIO RAPIDO CATALOGO CARACTERISTICAS
HCON.Range("H5:H144").ClearContents  ' FESTIVOS
HCON.Range("H147:H226").ClearContents  ' Turnos de semana santa y navidad
HCON.Range("j5:P204").ClearContents  ' DEFINICIONES
HCON.Range("j5:p26").Value = HPAR.Range("n10:t31").Value ' *INICIO RAPIDO CATALOGO SERVICIOS
HCON.Range("aj307:aj312").Value = HCON.Range("af307:af312").Value ' *INICIO RAPIDO CATALOGO TURNOS
HCON.Range("cr5:cs204").ClearContents  ' COLORES Definiciones
HCON.Range("e20").Value = 396.15 ' Complemento de destino
HBDCAT.Range("a10:e59").ClearContents  ' TIPOS DE SERVICIO (COMETIDOS PRINCIPALES)
HBDCAT.Range("a10:e16").Value = HPAR.Range("b10:f16").Value ' *INICIO RAPIDO CATALOGO COMETIDOS
HBDCAT.Range("i10:j159").ClearContents  ' COMETIDOS secundarios
HBDCAT.Range("i10:j16").Value = HPAR.Range("i10:j16").Value ' *INICIO RAPIDO CATALOGO COMETIDOS SECUNDARIOS
HBDCAT.Range("t10:t59").ClearContents 'Favoritos prevenciones
HBDCAT.Range("n10:p59").ClearContents ' EVENTOS
HBDCAT.Range("x10:x59").ClearContents  ' LUGARES PRINCIPALES
HBDCAT.Range("ab10:ab209").ClearContents  ' LUGARES Secundarios
HCON.Range("AB36:AC63").ClearContents 'Vehiculos
HCON.Range("AB5:AC32").ClearContents  ' MATERIAL
HCON.Range("X5:Z32").ClearContents  ' INDICATIVOS - VEHICULOS
HCON.Range("aj307:cn312").ClearContents ' Eliminar TURNOS
HCON.Range("ag307:ah312").ClearContents ' Eliminar TURNOS
HCON.Range("ag4:al14").ClearContents
HCON.Range("cn4:co100").ClearContents 'Eliminar destinatarios
HCON.Range("ag4:ag14").Value = HCON.Range("am4:am14").Value ' Usuario Por defecto
HCON.Range("ah4:ah14").Value = HCON.Range("am4:am14").Value
HCON.Range("ag4:al15").NumberFormat = "@"
HCON.Range("E6").ClearContents   ' UNIDAD SIGO
HCON.Range("cw4") = 10 ' Copia de seguridad, Guardados
HCON.Range("cw5") = 2 ' Copia de Seguridad, dias
HCON.Range("cw6") = 5 ' Copia de seguridad, Archivos
HCON.Range("bv4:bv17").Value = 0 ' Restablece TuInforme
HCON.Range("bw4:bw16").Value = False ' Restablece TuInforme
'Borrar contenido informe imprimir cuadrante
HIC.Range("b6:ao305").ClearContents
HG.Range("D:J").ClearContents
HG.Range("B13:B18").ClearContents
'-----FILTRAR DEFINICIONES-------
HCON.Range("K514:O714").ClearContents
HCON.Range("K721:O921").ClearContents
HCON.Range("K928:O1128").ClearContents
HCON.Range("K1135:O1335").ClearContents

HCON.Calculate
HCON.Range("K309:O509").AdvancedFilter Action:=xlFilterCopy, criteriarange:=HCON.Range("K511:m512"), copytorange:=HCON.Range("K514:O714")
HCON.Range("K309:O509").AdvancedFilter Action:=xlFilterCopy, criteriarange:=HCON.Range("K717:m718"), copytorange:=HCON.Range("K721:O921")
HCON.Range("K309:O509").AdvancedFilter Action:=xlFilterCopy, criteriarange:=HCON.Range("K924:m926"), copytorange:=HCON.Range("K928:O1128")
HCON.Range("K309:O509").AdvancedFilter Action:=xlFilterCopy, criteriarange:=HCON.Range("K1131:K1132"), copytorange:=HCON.Range("K1135:O1335")
HCON.Calculate
'Borrar datos ICAL
HICAL.Range("a6:ak305").ClearContents
'Borrar datos AutoGrabador
HAG.Range("a450").ClearContents
HAG.Range("b333:b430").ClearContents
HAG.Range("a440:a442").ClearContents
HAG.Range("a455:b494").ClearContents
HAG.Range("a499:b538").ClearContents
HAG.Range("a543:b582").ClearContents
HAG.Range("a75:a164").ClearContents

HAG.Range("b13") = False ' Iniciar directamente

Arregla_Objetos
'SIGO BORRANDO
HC.DiasNombrados
HC.Range("l14:l133").ClearComments
'RESTABLECER CONFIGURACION
despro HC
pro HC
'despro HCON
'pro HCON
HASI.Protect Password:=HC.Range("ba9"), userinterfaceonly:=False, AllowSorting:=True, AllowFormattingRows:=True, AllowFormattingColumns:=True, Scenarios:=False, DrawingObjects:=False
HC.Range("BA6").Value = "" ' Seleccion de NADA
HC.Range("BA7").Value = 0 ' Seleccion de a|fffd|o 2015
HC.Range("ba1") = "SI" ' Establece primer uso
HC.Range("bm1") = "" 'Establece que no se ha importado
HCON.Range("AW4") = "C"
HC.Range("Be12") = ""
ThisWorkbook.Password = ""
despro HLIS
HLIS.Range("a3:iv302").ClearContents
'HLIS.Range("c2:iv2").EntireColumn.Hidden = False
pro HLIS
HID.Range("A:M").Clear
HID.Range("A10:A65536").Delete Shift:=xlShiftUp
HPVAC.Range("a1:j18").ClearContents
HPSS.Range("a1:j18").ClearContents
HPPER.Range("a1:j18").ClearContents
despro HN
HN.Range("b13:ay612").ClearContents
HN.Range("ah4:bj4").ClearContents
HN.BorraPapeleta
HN.CARGARDIA 40000, False
pro HN
ocultar
HC.Range("bh3") = True
End Sub
Sub edicion()
Application.CommandBars.ActiveMenuBar.Enabled = True
ActiveWindow.DisplayHeadings = True
Application.DisplayFormulaBar = True
Application.CommandBars("Formatting").Visible = True
Application.CommandBars("Standard").Visible = True
Application.CommandBars("Control Toolbox").Visible = True
ActiveWindow.DisplayWorkbookTabs = True
'Arreglar visualizacion configuracion
HCON.Range("b:iU").EntireColumn.Hidden = False
HCON.Range("A305:A65536").EntireRow.Hidden = False
'Arreglar visualizacion cuadrante
#If VBA6 Then
    Application.ExecuteExcel4Macro ("show.toolbar(""ribbon"",1)")
#End If
If HC.Range("bd8") < 47 Then ' esconder una semana en su caso
    HC.Range("ao:au").EntireColumn.Hidden = False
Else
    HC.Range("ao:au").EntireColumn.Hidden = False
End If
HC.Range("AW1:ey1").EntireColumn.Hidden = False
HC.Range("A315:A493").EntireRow.Hidden = False
HC.Range("a1:a65536").EntireRow.Hidden = False
Application.CellDragAndDrop = True
'HC.ScrollArea = ""
despro HC
'despro HCON
despro HN
Application.ScreenUpdating = True
Application.EnableEvents = True
End Sub
Private Sub resetrange()
ActiveSheet.UsedRange
End Sub
Private Sub ocultar()
ThisWorkbook.ExcelModoCuadrante
HCON.Activate
ActiveWindow.DisplayHeadings = False
ActiveWindow.DisplayWorkbookTabs = False
HC.Activate
ActiveWindow.DisplayHeadings = False
ActiveWindow.DisplayWorkbookTabs = False
'ARREGLAR VISUALIZACION CUADRATE
HC.CVisual HC.Range("m14").ColumnWidth
HC.Range("aw1:fz1").EntireColumn.Hidden = True
HC.Range("A315:A493").EntireRow.Hidden = True
If RAPIDAS.Visible = True Then RAPIDAS.Bloquea 0
HC.SemAmarillo.Visible = False
HC.Semverde.Visible = False
HC.SemRojo.Visible = False
HC.Range("m14").Select
ActiveWindow.ScrollRow = 1
ActiveWindow.ScrollColumn = 1
HVAC.Activate
ActiveWindow.DisplayHeadings = False
ActiveWindow.DisplayWorkbookTabs = False
HVAC.Range("aa1:iv1").EntireColumn.Hidden = True
HN.Activate
ActiveWindow.DisplayHeadings = False
ActiveWindow.DisplayWorkbookTabs = False
HN.Range("z1:iv1").EntireColumn.Hidden = True
HID.Activate
ActiveWindow.DisplayHeadings = False
ActiveWindow.DisplayWorkbookTabs = False
HLIS.Activate
ActiveWindow.DisplayHeadings = False
ActiveWindow.DisplayWorkbookTabs = False
HASI.Activate
ActiveWindow.DisplayHeadings = False
ActiveWindow.DisplayWorkbookTabs = False
HCON.Activate
Application.CommandBars.ActiveMenuBar.Enabled = True
Application.CommandBars.ActiveMenuBar.Enabled = False
HIN.Activate
ActiveWindow.DisplayHeadings = False
ActiveWindow.DisplayWorkbookTabs = False
HTUC.Activate
ActiveWindow.DisplayHeadings = False
ActiveWindow.DisplayWorkbookTabs = False
Application.CutCopyMode = False
HPASS.Activate
HPASS.Range("e13").Select

'RECALCULAR----
Application.EnableEvents = False
Application.ScreenUpdating = False
HC.Refrescar 1
Application.EnableEvents = True
Application.ScreenUpdating = True
Arregla_Objetos
despro HC
pro HC
despro HN
pro HN
'despro HCON
'pro HCON
despro HVAC
pro HVAC
despro HN
pro HN
End Sub
Sub saludo()
HC.Range("BG5") = True
ACERCA.Show
End Sub
Private Sub VerCuadrante()
HC.Activate
ActiveSheet.UsedRange
Application.ScreenUpdating = True
Application.EnableEvents = True
End Sub
'-------------------------------------------------------------
'OCULTAR TODAS LAS FLECHAS DEL AUTOFILTRO EN MANUAL
Private Sub ofa()
Application.ScreenUpdating = False
For n = 1 To 39
   HC.Range("L13:DO313").AutoFilter field:=n, visibledropdown:=False
Next
Application.ScreenUpdating = True
End Sub
Sub Arregla_Objetos()
Dim CosaRara As Shape
For Each CosaRara In HC.Shapes
    If (CosaRara.Name > "Comment" And CosaRara.Name < "Commenu") Or (CosaRara.Name > "Text Box" And CosaRara.Name < "Text Boxa") Then CosaRara.Delete
Next
End Sub
Sub pro(Hoja As Worksheet)
Hoja.Protect Password:=HC.Range("ba9"), userinterfaceonly:=True, AllowSorting:=True, AllowFormattingRows:=True, AllowFormattingColumns:=True, Scenarios:=False, DrawingObjects:=False
End Sub
Sub proGraficos(Hoja As Worksheet)
Hoja.Protect Password:=HC.Range("ba9"), userinterfaceonly:=True, AllowSorting:=True, AllowFormattingRows:=True, AllowFormattingColumns:=True, Scenarios:=False, DrawingObjects:=True
End Sub
Sub despro(Hoja As Worksheet)
Hoja.Unprotect Password:=HC.Range("ba9")
End Sub
Sub deshacer()
If ActiveSheet = HC Then HC.BtnDeshacer_Click
End Sub
Private Sub LimpiarBaseDeDatosNombrar()
HBDN.Cells.Delete
HBDP.Cells.Delete ' Borra las plantillas de las presentaciones
HBDC.Range("A499:a65536").EntireRow.Delete  ' BASE DE DATOS CUADRANTE EXCEPTO PLANTILLA (1-500)
End Sub
Private Sub SALVAR()
ThisWorkbook.Save
ThisWorkbook.Saved = False
End Sub
Sub OcultarRecordatorios()
HC.Shapes("RecuerdaActualizar").Visible = False
HCON.Range("cw7") = Now()
HC.Shapes("RecuerdaGuardar").Visible = False
HCON.Range("cw9") = Now()
End Sub

'reads the value for the registry key i_RegKey
'if the key cannot be found, the return value is ""
Function RegKeyRead(i_RegKey As String) As String
Dim myWS As Object

  On Error Resume Next
  'access Windows scripting
  Set myWS = CreateObject("WScript.Shell")
  'read key from registry
  RegKeyRead = myWS.RegRead(i_RegKey)
End Function
Function IsFileOpen(filename As String)
    Dim filenum As Integer, errnum As Integer

    On Error Resume Next   ' Turn error checking off.
    filenum = FreeFile()   ' Get a free file number.
    ' Attempt to open the file and lock it.
    Open filename For Input Lock Read As #filenum
    Close filenum          ' Close the file.
    errnum = Err           ' Save the error number that occurred.
    On Error GoTo 0        ' Turn error checking back on.

    ' Check to see which error occurred.
    Select Case errnum

        ' No error occurred.
        ' File is NOT already open by another user.
        Case 0
         IsFileOpen = False

        ' Error number for "Permission Denied."
        ' File is already opened by another user.
        Case 70
            IsFileOpen = True

        ' Another error occurred.
        Case Else
            Error errnum
    End Select

End Function
Sub CheckLetraWindows()
'WINDOWS 10
w10 = RegKeyRead("HKEY_CURRENT_USER\Control Panel\Desktop\WindowMetrics\AppliedDPI")
w7 = RegKeyRead("HKEY_CURRENT_USER\Control Panel\Desktop\LogPixels")
If w10 <> "" Then
    If w10 <> 96 Then AlertaLetras
End If
If w7 <> "" Then
    If w7 <> 96 Then AlertaLetras
End If
End Sub
Sub NoUser()
msg = MsgBox("Este usuario no puede realizar esta accion.", vbCritical, "CONTROL DE USUARIOS")
Application.EnableEvents = True
Application.ScreenUpdating = True
End
End Sub

Private Sub AlertaLetras()
msg = MsgBox("El escalado de pantalla o el tama|fffd|o de letra de windows no es muy compatible con esta aplicacion y algunos objetos pueden no verse correctamente." & _
vbCrLf & vbCrLf & "Se recomienda desactivar el escalado de fuentes de windows. En configuracion de pantalla / tama|fffd|o de texto = 100%" & _
vbCrLf & vbCrLf & "Si vas a realizar algun cambio en la configuracion de la pantalla, antes debes de cerrar CUADRANTE y despues cerrar sesion o reiniciar el equipo, para prevenir que algunos graficos se corrompan.", vbExclamation, "Recomendacion")
End Sub
Private Sub pruebas()
HPVAC.Visible = xlSheetVisible
End Sub
Sub CapturarTamaOleObjetsATexto()
'Cambiar hoja de objetos
Open ThisWorkbook.Path & "\ObjetosN.txt" For Output As #1
For Each obj In HLIS.OLEObjects
    Print #1, obj.Name
    Print #1, obj.left
    Print #1, obj.top
    Print #1, obj.Width
    Print #1, obj.Height
Next
Close #1
End Sub
Sub RestaurarTamaObj()
Application.ScreenUpdating = False
restaura = 3
If HC.Range("a8").EntireRow.Hidden = True Then restaura = 2
If HC.Range("a6").EntireRow.Hidden = True Then restaura = 1
HC.Range("a6:a10").EntireRow.Hidden = False
For Each obj In HC.OLEObjects
    fila = Application.Match(obj.Name, HPAR.Range("v10:v429"), 0)
    If IsError(fila) = False Then
        obj.left = CDbl(HPAR.Range("v" & fila + 10))
        obj.top = CDbl(HPAR.Range("v" & fila + 11))
        obj.Width = CDbl(HPAR.Range("v" & fila + 12))
        obj.Height = CDbl(HPAR.Range("v" & fila + 13))
    End If
Next
For Each obj In HN.OLEObjects
    fila = Application.Match(obj.Name, HPAR.Range("w10:w104"), 0)
    If IsError(fila) = False Then
        obj.left = CDbl(HPAR.Range("w" & fila + 10))
        obj.top = CDbl(HPAR.Range("w" & fila + 11))
        obj.Width = CDbl(HPAR.Range("w" & fila + 12))
        obj.Height = CDbl(HPAR.Range("w" & fila + 13))
    End If
Next
For Each obj In HLIS.OLEObjects
    fila = Application.Match(obj.Name, HPAR.Range("x10:x29"), 0)
    If IsError(fila) = False Then
        obj.left = CDbl(HPAR.Range("x" & fila + 10))
        obj.top = CDbl(HPAR.Range("x" & fila + 11))
        obj.Width = CDbl(HPAR.Range("x" & fila + 12))
        obj.Height = CDbl(HPAR.Range("x" & fila + 13))
    End If
Next
If restaura = 1 Then
    HC.Range("a6:a10").EntireRow.Hidden = True
    HC.BarraEstrategia.Height = 43
ElseIf restaura = 2 Then
    HC.Range("a8:a10").EntireRow.Hidden = True
    HC.BarraEstrategia.Height = 72
End If
Application.ScreenUpdating = True
End Sub
Sub ReparacionRapida()
msg = MsgBox("Este es el asistente de reparacion rapida de alguna celda. Necesitaras la informacion de la hoja de referencia, celda y nuevo valor o formula", vbInformation, "REPARACION RAPIDA DE CELDAS DEL CUADRANTE")
hoj = InputBox("Referencia de la Hoja:", "HOJA")
If hoj <> "" Then
    cel = InputBox("Celda en formato A1:", "Celda")
    If cel <> "" Then
        On Error GoTo fallo
        formulilla = InputBox("Nuevo valor o formula de la celda: " & hoj & " " & cel, "Nuevo Valor o Formula", Sheets(hoj).Range(cel).Formula)
        If formulilla = "" Then
            msg = MsgBox("La formula o valor para esta celda es vacia?", vbYesNo, "Celda vacia o cancelas")
            If msg = 7 Then GoTo fallo
        End If
        Sheets(hoj).Range(cel).Formula = formulilla
fallo:
    End If
End If
End Sub
Sub TeclaOcultar()
If HC.Range("aw1").EntireColumn.Hidden = True Then
    edicion
Else
    ocultar
    VerCuadrante
End If
End Sub
Attribute VB_Name = "HAG"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Sub ASIGO()
ComoSigo HAG.Range("a327")
End Sub
Sub ComoSigo(fila)
Application.ScreenUpdating = False
Application.Calculation = xlCalculationManual
HAG.Range("b333:b430").ClearContents
If IsNumeric(fila) = True And fila >= 14 And fila <= 313 Then
    For dia = HAG.Range("b316") - CDbl(HC.Range("m13")) + 1 To HAG.Range("b317") - CDbl(HC.Range("m13")) + 1
        Casi = HC.Cells(fila, dia + 12)
        If Casi <> "" Then
            If InStr(Casi, Chr(10)) > 0 Then
                Serv1 = Mid(Casi, 1, InStr(Casi, Chr(10)) - 1)
                Serv2 = Mid(Casi, InStr(Casi, Chr(10)) + 1, 100)
            Else
                Serv1 = Casi
                Serv2 = ""
            End If
            Serv1 = HCON.Range("j" & Application.WorksheetFunction.Match(Serv1, HCON.Range("k5:k204"), 0) + 4)
            If Serv2 <> "" Then Serv2 = HCON.Range("j" & Application.WorksheetFunction.Match(Serv2, HCON.Range("k5:k204"), 0) + 4)
            If Serv2 <> "" Then
                HAG.Range("b" & dia + 332) = Serv1
                HAG.Range("b" & dia + 381) = Serv2
            Else
                If HAG.Range("b313") = True And (Serv1 = "DAS" Or Serv1 = "DF" Or Serv1 = "DSJ") Then
                    HAG.Range("b" & dia + 332) = ""
                Else
                    HAG.Range("b" & dia + 332) = Serv1
                End If
            End If
        End If
        If HAG.Range("b" & dia + 332) = "V" Or HAG.Range("b" & dia + 332) = "P" Or HAG.Range("b" & dia + 332) = "B" Or HAG.Range("b" & dia + 332) = "CS" Or HAG.Range("b" & dia + 332) = "OS" Then HAG.Range("b" & dia + 332).ClearContents
    Next
    filtrarUnicos
    Application.ScreenUpdating = True
    Application.Calculation = xlCalculationAutomatic
End If
End Sub
Private Sub filtrarUnicos()
HAG.Range("b332:b430").AdvancedFilter xlFilterCopy, HAG.Range("b329:b330"), HAG.Range("c332"), True
End Sub
Private Sub Worksheet_Activate()
Application.Calculation = xlCalculationAutomatic
End Sub
Sub CapturaCodigosSigo()
On Error Resume Next
If HAG.Range("a450") <> "" Then
    Dim te As String
    te = HAG.Range("a450")
    NumM = InStr(te, "TurnosTramosMa|fffd|ana") + 18
    NumT = InStr(NumM, te, "Tarde") + 5
    NumN = InStr(NumM, te, "Noche") + 5
    NumO = InStr(NumM, te, "Otro") + 4
    NumF = InStr(NumM, te, "Descansos")
    TeM = Mid(te, NumM, NumT - NumM)
    TeT = Mid(te, NumT, NumN - NumT - 5)
    TeN = Mid(te, NumN, NumO - NumN - 4)
    TeO = Mid(te, NumO, NumF - NumO)
    HAG.Range("A440") = TeM
    HAG.Range("A441") = TeT
    HAG.Range("A442") = TeN
    'GoTo fin
    HAG.Range("A455:b494").NumberFormat = "@"
    HAG.Range("A499:b538").NumberFormat = "@"
    HAG.Range("A543:b582").NumberFormat = "@"
    
    HAG.Range("A455:b494").ClearContents
    HAG.Range("A499:b538").ClearContents
    HAG.Range("A543:b582").ClearContents
    
    sep = 1
    For m = 1 To 40
        If InStr(sep, TeM, ")") = 0 Then Exit For
        HAG.Cells(m + 454, 1) = Mid(TeM, sep, InStr(sep + 1, TeM, "(") - sep - 1)
        sep = InStr(sep + 1, TeM, ")") + 1
    Next
    sep = 1
    For m = 1 To 40
        If InStr(sep, TeT, ")") = 0 Then Exit For
        HAG.Cells(m + 498, 1) = Mid(TeT, sep, InStr(sep + 1, TeT, "(") - sep - 1)
        sep = InStr(sep + 1, TeT, ")") + 1
    Next
    sep = 1
    For m = 1 To 40
        If InStr(sep, TeN, ")") = 0 Then Exit For
        HAG.Cells(m + 542, 1) = Mid(TeN, sep, InStr(sep + 1, TeN, "(") - sep - 1)
        sep = InStr(sep + 1, TeN, ")") + 1
    Next
    HAG.Range("b455:b494").Value = HAG.Range("a455:a494").Value
    HAG.Range("b499:b538").Value = HAG.Range("a499:a538").Value
    HAG.Range("b543:b582").Value = HAG.Range("a543:a582").Value
    
    
    
    HAG.Range("b455:b494").Sort key1:=HAG.Range("b455"), order1:=xlAscending
    HAG.Range("b499:b538").Sort key1:=HAG.Range("b499"), order1:=xlAscending
    HAG.Range("b543:b582").Sort key1:=HAG.Range("b4543"), order1:=xlAscending
'fin:
End If
End Sub

Private Sub Worksheet_Change(ByVal Target As Range)
    If Target.Address = "$A$327" Then
        ASIGO
        HAG.Range("c321") = 0
        HAG.Range("b322") = 0
        HAG.Range("c331") = 1
    End If
End Sub
Attribute VB_Name = "HAPP"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "HASI"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Control = "BtnVolver, 1, 1, MSForms, CommandButton"
Attribute VB_Control = "BtnImpSigo, 4, 2, MSForms, CommandButton"
Attribute VB_Control = "BtnImportarDeOtroMes, 12, 3, MSForms, CommandButton"
Attribute VB_Control = "IrUnidad, 38, 4, MSForms, Label"
Attribute VB_Control = "BtnImprimir, 56, 5, MSForms, CommandButton"
Attribute VB_Control = "BtnBorrar, 65, 6, MSForms, CommandButton"
Private Sub pegar()
On Error GoTo fallo
If Application.CutCopyMode = xlCopy Then
    Selection.PasteSpecial xlPasteValues
    Application.CutCopyMode = False
    GoTo final
Else
    Selection.Worksheet.PasteSpecial Format:="HTML", link:=False, DisplayAsIcon:=False, nohtmlformatting:=True
    GoTo final
End If
fallo:
msg = MsgBox("Es posible que el tama|fffd|o o la selecci|fffd|n no sea la correcta. Copia, selecciona la celda donde quieres que se peguen los valores y pulsa nuevamente sobre este boton de pegar", vbCritical, "Imposible pegar valores")
final:
End Sub
Private Sub BtnBorrar_Click()
msg = MsgBox("Eliminar toda la lista de personal?" & vbCrLf & vbCrLf & "Recuera que esto solo afecta al mes seleccionado.", vbYesNo, "Eliminar personal")
If msg = 6 Then HASI.Range("b4:p303").ClearContents
End Sub

Private Sub BtnImportarDeOtroMes_Click()
cuando = InputBox("Escribe la fecha ''mm/aaaa'' del cuadrante del que quieres importar los datos del personal:", "IMPORTAR DESDE OTRO MES", Format(Now() - 30, "mm/yyyy"))
If cuando = "" Then End
If IsDate("15/" & cuando) = False Then
    msg = MsgBox("No has introducido un formato de fecha correcto. El formato es mes/a|fffd|o.", vbCritical, "Error en la fecha")
    End
End If
mes = Month("15/" & cuando)
A|fffd|o = Year("15/" & cuando)
fila = ((A|fffd|o - 2015) * 12 + mes) * 500
If HBDC.Range("a" & fila) <> "" Then
    'importar datos de bdc
    Application.EnableEvents = False
    Application.ScreenUpdating = False
    Application.Calculation = xlCalculationManual
    HASI.Range("b4:p303").ClearContents
    HASI.Range("c4:c303").Value = HBDC.Range("by" & fila + 1 & " :by" & fila + 300).Value ' Empleo
    HASI.Range("b4:b303").Value = HBDC.Range("bw" & fila + 1 & " :bw" & fila + 300).Value ' Antiguedad
    HASI.Range("d4:h303").Value = HBDC.Range("ca" & fila + 1 & " :ce" & fila + 300).Value ' Nombre, apellidos, TIP y telefono
    HASI.Range("I4:I303").Value = HBDC.Range("bz" & fila + 1 & " :bz" & fila + 300).Value ' AREA
    HASI.Range("J4:J303").Value = HBDC.Range("cq" & fila + 1 & " :cq" & fila + 300).Value ' GRUPO
    HASI.Range("K4:K303").Value = HBDC.Range("bx" & fila + 1 & " :bx" & fila + 300).Value ' ACTIVO
    HASI.Range("L4:L303").Value = HBDC.Range("cf" & fila + 1 & " :cf" & fila + 300).Value ' REGIMEN
    HASI.Range("M4:M303").Value = HBDC.Range("ch" & fila + 1 & " :ch" & fila + 300).Value ' PERIODO
    HASI.Range("N4:N303").Value = HBDC.Range("cg" & fila + 1 & " :cg" & fila + 300).Value ' IMPRIMIR

HASI.Range("aa2").Calculate

HASI.Range("b4:n303").NumberFormat = "@"
HASI.Range("o4:p303").NumberFormat = "0"
For todos = 1 To 300
    If HBDC.Range("bv" & fila + todos) <> "" Then HASI.Range("O" & todos + 3).Value = Mid(HBDC.Range("bv" & fila + todos), InStr(1, HBDC.Range("bv" & fila + todos), " / ") + 3, 2) ' credito vacaciones
    If HBDC.Range("cs" & fila + todos) <> "" Then HASI.Range("P" & todos + 3).Value = Mid(HBDC.Range("cs" & fila + todos), InStr(1, HBDC.Range("cs" & fila + todos), " / ") + 3, 2) ' credito ap
Next todos
Application.EnableEvents = True
Application.Calculate
Else
    msg = MsgBox("Ese cuadrante no existe, tienes que seleccionar una fecha donde exista un cuandrante.", vbCritical, "Nada que importar")
End If
End Sub

Private Sub BtnImprimir_Click()
'HASI.Range("j1:p1").EntireColumn.Hidden = True
'HASI.Range("b1").EntireColumn.Hidden = True
HASI.PageSetup.PrintArea = HASI.Range("c3:i" & HASI.Range("d305").End(xlUp).Row).Address
#If VBA6 Then
    Application.ExecuteExcel4Macro ("show.toolbar(""ribbon"",1)")
#End If
HASI.PrintPreview
#If VBA6 Then
    Application.ExecuteExcel4Macro ("show.toolbar(""ribbon"",0)")
#End If
Application.CommandBars.ActiveMenuBar.Enabled = True
Application.CommandBars.ActiveMenuBar.Enabled = False
End Sub

Private Sub BtnImpSigo_Click()
MENUIMPORTARSIGO.Show
End Sub
Sub BtnVolver_Click()
On Error Resume Next
Application.ScreenUpdating = False
Application.EnableEvents = False
Application.Calculation = xlCalculationManual
If HC.FilterMode = True Then
    HC.ShowAllData
End If
HC.Range("CI14:CI313").Value = HASI.Range("B4:B303").Value ' ANTIGUEDAD
HC.Range("G13").Value = "ANTIG|fffd|EDAD"
HC.Range("G14:G313").Validation.Delete
HC.Range("G14:G313").Value = HC.Range("CI14:CI313").Value
HC.Range("Ck14:Ck313").Value = HASI.Range("C4:c303").Value 'EMPLEO
HC.Range("CM14:CQ313").Value = HASI.Range("d4:h303").Value ' NOMBRE, APELLIDOS, TIP Y TELEFONO
HC.Range("CL14:CL313").Value = HASI.Range("I4:I303").Value ' AREA
HC.Range("DC14:DC313").Value = HASI.Range("J4:J303").Value ' GRUPO
HC.Range("CJ14:CJ313").Value = HASI.Range("K4:K303").Value ' ACTIVO
HC.Range("CR14:CR313").Value = HASI.Range("L4:L303").Value ' REGIMEN
HC.Range("CT14:CT313").Value = HASI.Range("M4:M303").Value ' PERIODO
HC.Range("CS14:CS313").Value = HASI.Range("N4:N303").Value ' IMPRIMIR

For todos = 14 To 313
    If HC.Range("CH" & todos) <> "" Then
        HC.Range("CH" & todos).Formula = "'" & left(HC.Range("CH" & todos), InStr(1, HC.Range("CH" & todos), " / ") - 1) & " / " & HASI.Range("O" & todos - 10)
    ElseIf HC.Range("CM" & todos) <> "" Then
        HC.Range("CH" & todos).Formula = "'0 / " & HASI.Range("O" & todos - 10)
    End If
    If HC.Range("DE" & todos) <> "" Then
        HC.Range("DE" & todos).Formula = "'" & left(HC.Range("DE" & todos), InStr(1, HC.Range("DE" & todos), " / ") - 1) & " / " & HASI.Range("P" & todos - 10)
    ElseIf HC.Range("CM" & todos) <> "" Then
        HC.Range("DE" & todos).Formula = "'0 / " & HASI.Range("P" & todos - 10)
    End If
Next todos

For Tot = 14 To 313
    If Application.WorksheetFunction.CountIf(HC.Range("cp14:cp313"), HC.Range("cp" & Tot)) > 1 Then
        msg = MsgBox("Atenci|fffd|n!!!. No deben existir dos personas con el mismo TIP puede ocasionar resultados no deseados.", vbCritical, "TIP Duplicado")
        Exit For
    End If
Next
HC.Range("H14:J313").Value = HC.Range("CM14:CO313").Value
HC.Worksheet_Activate
HC.Activate
Application.ScreenUpdating = True
Application.ScreenUpdating = False
HC.Refrescar 1
HC.AplicaFiltrosVer
Application.EnableEvents = True
Application.ScreenUpdating = True
Application.EnableAutoComplete = True
End Sub
Private Sub IrUnidad_Click()
CATUNIDAD.Show
despro HASI
If HASI.Range("AA2") > 1 Then
    With HASI.Range("I4:I303").Validation
        .Delete
        .Add Type:=xlValidateList, AlertStyle:=xlValidAlertStop, Operator:=xlBetween, Formula1:="=$AA$4:$AA$" & 2 + HASI.Range("AA2")
        .InCellDropdown = True
        .ErrorTitle = "|fffd|reas o grupos"
        .ErrorMessage = "Seleccione un |fffd|rea o grupo de la lista desplegable. Se pueden editar desde CATALOGOS-UNIDAD"
        .ShowError = True
    End With
Else
    With HASI.Range("I4:I303").Validation
        .Delete
        .Add Type:=xlValidateList, AlertStyle:=xlValidAlertStop, Operator:=xlBetween, Formula1:="=$AA$4:$AA$12"
        .InCellDropdown = True
        .ErrorTitle = "|fffd|reas o grupos"
        .ErrorMessage = "Se requiere tener definida al menos un area. Se pueden editar desde CATALOGOS-UNIDAD"
        .ShowError = True
    End With
End If
HASI.Activate
End Sub
Private Sub Worksheet_Activate()
Application.CommandBars.ActiveMenuBar.Enabled = True
Application.CommandBars.ActiveMenuBar.Enabled = False
Application.OnKey "^{v}", "hasi.Pegar" 'Paste
Application.OnKey "^{c}", "HASI.copiar" 'Paste
HASI.Protect Password:=HC.Range("ba9"), userinterfaceonly:=True, AllowSorting:=True, AllowFormattingRows:=True, AllowFormattingColumns:=True, Scenarios:=False, DrawingObjects:=False
Application.EnableAutoComplete = True
End Sub
Private Sub Copiar()
Selection.Copy
End Sub
Private Sub Worksheet_BeforeRightClick(ByVal Target As Range, Cancel As Boolean)
Cancel = True
End Sub
Private Sub misub()
HASI.Protect Password:=HC.Range("ba9"), userinterfaceonly:=False, AllowSorting:=True, AllowFormattingRows:=True, AllowFormattingColumns:=True, Scenarios:=False, DrawingObjects:=False
End Sub


Attribute VB_Name = "HBDC"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "HBDCAT"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "HBDN"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "HBDP"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "HC"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Control = "DeshacerDesple, 14917, 0, MSForms, CommandButton"
Attribute VB_Control = "BtnFacebook, 29235, 1, MSForms, Image"
Attribute VB_Control = "BtnTelegram, 29236, 2, MSForms, Image"
Attribute VB_Control = "Label1, 20830, 3, MSForms, Label"
Attribute VB_Control = "Label2, 20831, 4, MSForms, Label"
Attribute VB_Control = "Label4, 20833, 5, MSForms, Label"
Attribute VB_Control = "Label5, 20834, 6, MSForms, Label"
Attribute VB_Control = "Label6, 20835, 7, MSForms, Label"
Attribute VB_Control = "Odato, 13355, 8, MSForms, SpinButton"
Attribute VB_Control = "OCalculo, 13356, 9, MSForms, SpinButton"
Attribute VB_Control = "ONombre, 13357, 10, MSForms, SpinButton"
Attribute VB_Control = "OApellido, 13359, 11, MSForms, SpinButton"
Attribute VB_Control = "BtnSelMes, 19, 12, MSForms, Image"
Attribute VB_Control = "BtnInforme, 5, 13, MSForms, Image"
Attribute VB_Control = "BtnGuardar, 7, 14, MSForms, Image"
Attribute VB_Control = "FNombre, 754, 15, MSForms, TextBox"
Attribute VB_Control = "FMenos1, 755, 16, MSForms, TextBox"
Attribute VB_Control = "F1, 756, 17, MSForms, TextBox"
Attribute VB_Control = "F2, 757, 18, MSForms, TextBox"
Attribute VB_Control = "F3, 869, 19, MSForms, TextBox"
Attribute VB_Control = "F4, 870, 20, MSForms, TextBox"
Attribute VB_Control = "F5, 871, 21, MSForms, TextBox"
Attribute VB_Control = "F6, 872, 22, MSForms, TextBox"
Attribute VB_Control = "F7, 873, 23, MSForms, TextBox"
Attribute VB_Control = "F8, 874, 24, MSForms, TextBox"
Attribute VB_Control = "F9, 875, 25, MSForms, TextBox"
Attribute VB_Control = "F10, 876, 26, MSForms, TextBox"
Attribute VB_Control = "F11, 877, 27, MSForms, TextBox"
Attribute VB_Control = "F12, 878, 28, MSForms, TextBox"
Attribute VB_Control = "F13, 879, 29, MSForms, TextBox"
Attribute VB_Control = "F14, 880, 30, MSForms, TextBox"
Attribute VB_Control = "F15, 881, 31, MSForms, TextBox"
Attribute VB_Control = "F16, 882, 32, MSForms, TextBox"
Attribute VB_Control = "F17, 883, 33, MSForms, TextBox"
Attribute VB_Control = "F18, 884, 34, MSForms, TextBox"
Attribute VB_Control = "F19, 885, 35, MSForms, TextBox"
Attribute VB_Control = "F20, 886, 36, MSForms, TextBox"
Attribute VB_Control = "F21, 887, 37, MSForms, TextBox"
Attribute VB_Control = "F22, 888, 38, MSForms, TextBox"
Attribute VB_Control = "F23, 889, 39, MSForms, TextBox"
Attribute VB_Control = "F24, 901, 40, MSForms, TextBox"
Attribute VB_Control = "F25, 902, 41, MSForms, TextBox"
Attribute VB_Control = "F26, 903, 42, MSForms, TextBox"
Attribute VB_Control = "F27, 904, 43, MSForms, TextBox"
Attribute VB_Control = "F28, 905, 44, MSForms, TextBox"
Attribute VB_Control = "F29, 906, 45, MSForms, TextBox"
Attribute VB_Control = "F30, 907, 46, MSForms, TextBox"
Attribute VB_Control = "F31, 908, 47, MSForms, TextBox"
Attribute VB_Control = "F32, 909, 48, MSForms, TextBox"
Attribute VB_Control = "F33, 910, 49, MSForms, TextBox"
Attribute VB_Control = "F34, 911, 50, MSForms, TextBox"
Attribute VB_Control = "F35, 912, 51, MSForms, TextBox"
Attribute VB_Control = "Asistente, 33562, 52, MSForms, Image"
Attribute VB_Control = "BtnMenu, 36036, 53, MSForms, Image"
Attribute VB_Control = "BtnCatalogo, 39448, 54, MSForms, Image"
Attribute VB_Control = "SpinMes, 794, 55, MSForms, SpinButton"
Attribute VB_Control = "BtnOcultar, 14849, 56, MSForms, Image"
Attribute VB_Control = "BtnAgenda, 15450, 57, MSForms, Image"
Attribute VB_Control = "BarraEstrategia, 15452, 58, MSForms, ScrollBar"
Attribute VB_Control = "BtnDesplegar, 15641, 59, MSForms, Image"
Attribute VB_Control = "BtnCargarEstrategias, 27207, 60, MSForms, Image"
Attribute VB_Control = "BtnEliminarEstrategias, 39279, 61, MSForms, Image"
Attribute VB_Control = "SpinAnchoCortina, 65026, 62, MSForms, SpinButton"
Attribute VB_Control = "L1OptEst, 466, 63, MSForms, Label"
Attribute VB_Control = "L2OptEst, 467, 64, MSForms, Label"
Attribute VB_Control = "SpinOrdenarEst, 468, 65, MSForms, SpinButton"
Attribute VB_Control = "L3OptEst, 469, 66, MSForms, Label"
Attribute VB_Control = "SpinDespCortina, 24748, 67, MSForms, ScrollBar"
Attribute VB_Control = "ImgValidacion, 11570, 68, MSForms, Image"
Attribute VB_Control = "Semverde, 11571, 69, MSForms, Image"
Attribute VB_Control = "SemAmarillo, 11572, 70, MSForms, Image"
Attribute VB_Control = "SemRojo, 11573, 71, MSForms, Image"
Attribute VB_Control = "BtnHerramientas, 16298, 72, MSForms, Image"
Attribute VB_Control = "ValLock, 21234, 73, MSForms, Image"
Attribute VB_Control = "BtnFavoritos, 52776, 74, MSForms, Image"
Attribute VB_Control = "OExtra1, 47704, 75, MSForms, SpinButton"
Attribute VB_Control = "OExtra2, 47705, 76, MSForms, SpinButton"
Attribute VB_Control = "OExtra3, 47706, 77, MSForms, SpinButton"
Attribute VB_Control = "OExtra4, 47707, 78, MSForms, SpinButton"
Attribute VB_Control = "BtnDatosExtra, 47724, 79, MSForms, CommandButton"
Attribute VB_Control = "BtnAPP, 12372, 80, MSForms, Image"
Attribute VB_Control = "BtnDeshacer, 13252, 81, MSForms, CommandButton"
Attribute VB_Control = "BtnRehacer, 14267, 82, MSForms, CommandButton"
Public CodigoDevuelto
Dim Deshacer1(73)
Dim Deshacer2
Dim Deshacer3
Dim RangoSeleccionado As Range
Dim ServCopiados()
Dim NumCode1
Dim NumCode2
Dim NumCode3
Sub TeclaBorra()
If ActiveCell.Locked = False Then
    Application.EnableEvents = False
    Application.ScreenUpdating = False
    For Each celda In Selection.Cells
        If celda.Offset(0, 38) = "@A" Then celda.Offset(0, 38).ClearContents
    Next
    Application.EnableEvents = True
    ActiveCell.ClearContents
    'Application.ScreenUpdating = True
End If
End Sub
Private Sub Bot_Click()
TUTOINICIAL.Show
End Sub
Private Sub BtnLimpiar_Click()
HC.Range("m14:au313").ClearContents
HC.Refrescar 1
HC.Calculate
End Sub
Private Sub BtnAPP_Click()
MENUAPP.Show 0
End Sub
Private Sub BtnDatosExtra_Click()
Application.ScreenUpdating = False
Application.EnableEvents = False
If HC.Range("a1").EntireColumn.Hidden = True Then
    BtnDatosExtra.Caption = "<"
    HC.Range("a1:d1").EntireColumn.Hidden = False
    HC.Range("cn10") = 1
    OExtra1.Visible = True
    OExtra2.Visible = True
    OExtra3.Visible = True
    OExtra4.Visible = True
    OExtra1.left = 11.25
    OExtra2.left = 72.75
    OExtra3.left = 135
    OExtra4.left = 195
    For extra = 1 To 4
        If HC.Cells(13, extra) = HC.Range("f13") Or HC.Cells(13, extra) = HC.Range("g13") Then HC.Range(HC.Cells(13, extra), HC.Cells(313, extra)).ClearContents
        HC.ColumnaCalculos extra
        HC.CambiarFiltroDato HC.Cells(13, extra), extra
    Next
Else
    BtnDatosExtra.Caption = ">"
    OExtra1.Visible = False
    OExtra2.Visible = False
    OExtra3.Visible = False
    OExtra4.Visible = False
    HC.Range("a1:d1").EntireColumn.Hidden = True
    HC.Range("cn10") = 0
End If
Application.EnableEvents = True
Application.ScreenUpdating = True
End Sub

Private Sub BtnFacebook_Click()
msg = MsgBox("Puedes conocer el estado de actualizaciones y del proyecto Cuadrante OG.11-14 en el grupo cerrado de Facebook." & vbCrLf & vbCrLf & "Busca en facebook: Cuadrante OG.11-14", vbInformation, "Social")
End Sub
Private Sub BtnFavoritos_Click()
If RAPIDAS.Visible = False Then
    RAPIDAS.Show 0
Else
    Unload RAPIDAS
End If
End Sub
Private Sub BtnTelegram_Click()
msg = MsgBox("Puedes conocer el estado de actualizaciones y del proyecto Cuadrante OG.11-14 en TELEGRAM." & vbCrLf & vbCrLf & "Busca en Telegram: CuadranteOG1114", vbInformation, "Social")
End Sub
Private Sub BtnHerramientas_Click()
SELHERRAMIENTAS.Show 0
End Sub
Sub BtnOcultar_Click()
If RAPIDAS.Visible = True Then Unload RAPIDAS
If CAJONSERVICIOS.Visible = True Then Unload CAJONSERVICIOS
HPASS.Cortina.top = HPASS.Range("e13").top
HPASS.Cortina.left = HPASS.Range("e13").left
HPASS.Cortina.Visible = True
HPASS.Activate
Pass.modo = 1
Pass.Show
HPASS.Cortina.top = HPASS.Range("e27").top
HPASS.Cortina.left = HPASS.Range("e27").left
HPASS.Cortina.Visible = False
End Sub
Private Sub ImgValidacion_Click()
If HCON.Range("ag9") = False Then NoUser
If HC.Range("ay12") <> "" Then
    inp = InputBox("Contrase|fffd|a de SuperUsuario para validacion:", "Validacion protegida")
    If inp <> HC.Range("ay12").Text Then
        msg = MsgBox("La contrase|fffd|a de superusuario no es valida.", vbCritical, "Seguridad")
        GoTo no
    End If
End If
If HVAL.Range("a" & HC.Range("ay5") - 1) = "" Or HVAL.Range("a" & HC.Range("ay5") - 1) = HC.Range("ba3") & HC.Range("ba4") Then
    msg = MsgBox("Validar el cuadrante como que esta todo grabado en SIGO?", 35, "Validar")
Else
    msg = MsgBox("Si validas este cuadrante dejaras de ver las validaciones del cuadrante de " & HVAL.Range("a" & HC.Range("ay5") - 1), 33, "Validar")
    If HVAL.Range("c" & HC.Range("ay5") - 1) <> "" Then
        inp = InputBox("El cuadrante de " & HVAL.Range("a" & HC.Range("ay5") - 1) & " esta bloqueado con contrase|fffd|a de Superusuario. Deberas introducirla para poder sobreescribir:", "Seguridad")
        If inp <> HVAL.Range("c" & HC.Range("ay5") - 1) Then
            msg = MsgBox("La contrase|fffd|a de superusuario no es valida.", vbCritical, "Seguridad")
            GoTo no
        End If
    End If
End If
If msg = 6 Or msg = 1 Then
    HC.Calculate
    HVAL.Range("a" & HC.Range("ay5") & ":ct" & HC.Range("ay6")).ClearContents
    HVAL.Range("a" & HC.Range("ay5") & ":ct" & HC.Range("ay6")).NumberFormat = "@"
    HVAL.Range("a" & HC.Range("ay5") - 1) = HC.Range("ba3") & HC.Range("ba4")
    HVAL.Range("c" & HC.Range("ay5") - 1) = HC.Range("ay12")
    HVAL.Range("a" & HC.Range("ay5") & ":ct" & HC.Range("ay6")).Value = HC.Range("m14:df313").Value
    HC.Range("ay1") = "VALIDADO"
    HC.ImgValidacion.Picture = HC.Semverde.Picture
    HC.Refrescar 1
ElseIf msg = 7 Then
    HC.Range("ay1") = "NO"
    HVAL.Range("a" & HC.Range("ay5") - 1 & ":ct" & HC.Range("ay6")).ClearContents
    HC.ImgValidacion.Picture = HC.SemRojo.Picture
    HC.Refrescar 1
End If
no:
End Sub
Private Sub ValLock_Click()
If HCON.Range("ag9") = False Then NoUser
If HC.Range("ay12") <> "" Then
    inp = InputBox("Para quitar la protecion de cambios introduce la contrase|fffd|a de validacion" & vbCrLf & vbCrLf & "En el caso de contrase|fffd|a olvidada, escribe RECORDAR.", "Desbloquear validacion")
    If inp = "" Then GoTo fin
    If inp = "RECORDAR" And HC.Range("ay12").Text <> "RECORDAR" Then
        RECORADARPASS
        GoTo fin
    End If
    If inp = HC.Range("ay12").Text Or Val(inp) = DateValue(Now()) * 29 Then
        HC.Range("ay12") = ""
        HVAL.Range("c" & HC.Range("ay5") - 1) = HC.Range("ay12")
        HC.ValLock.BorderStyle = fmBorderStyleNone
    Else
        msg = MsgBox("La contrase|fffd|a no es correcta!.", vbCritical, "AUTORIZACION")
    End If
Else
    inp = InputBox("Especifica una contrase|fffd|a de superusuario para validar este cuadrante. Otros tipos de usuarios podran realizar cambios pero no podran ser validados.", "Validacion solo por SUPERUSUARIO")
    If inp <> "" Then
        inp2 = InputBox("Escribe de nuevo la contrase|fffd|a para verificar", "Seguridad")
    Else
        GoTo fin
    End If
    If inp = inp2 Then
        HC.Range("ay12") = inp
        If HC.Range("ay1") = "VALIDADO" Then HVAL.Range("c" & HC.Range("ay5") - 1) = HC.Range("ay12")
        HC.ValLock.BorderStyle = fmBorderStyleSingle
        HC.ValLock.BorderColor = RGB(255, 0, 0)
    Else
        msg = MsgBox("La contrase|fffd|as escritas no corresponden. Intentalo otra vez.", vbCritical, "Seguridad")
    End If
End If
fin:
End Sub
Private Sub RECORADARPASS()
msg = MsgBox("Ma|fffd|ana podras escribir el codigo " & DateValue(Now() + 1) * 29 & " para desbloquear el superusuario de este mes", vbInformation, "Anulando Seguridad")
End Sub
Sub Worksheet_Activate()
Application.CommandBars.ActiveMenuBar.Enabled = True
Application.CommandBars.ActiveMenuBar.Enabled = False
Application.OnKey "{DEL}", "HC.TeclaBorra"
Application.OnKey "{ENTER}", "HC.TeclaIntro"
Application.OnKey "^{v}", "hc.Pegar" 'Paste
Application.OnKey "^{c}", "HC.Copiar" 'Copy
Application.OnKey "^{z}", "HC.BtnDeshacer_Click" 'BTN DESHACER
Application.OnKey "{F1}", "saludo"
'DefineScroll
End Sub
Private Sub Copiar()
If ActiveCell.Row >= 13 And ActiveCell.Row <= 313 And ActiveCell.Column >= 13 And ActiveCell.Column <= HC.Range("bd8") Then
    'If Selection.Cells.Count <= 35 Then
        ReDim ServCopiados(Selection.Cells.Count - 1)
        c = 0
        For Each celda In Selection.Cells
            ServCopiados(c) = celda.Value
            c = c + 1
        Next
        Selection.Copy
End If
End Sub
Private Sub pegar()
If ActiveCell.Row >= 13 And ActiveCell.Row <= 313 And ActiveCell.Column >= 13 And ActiveCell.Column <= HC.Range("bd8") Then
    If Selection.Rows.Count = 1 And Selection.Areas.Count = 1 Then
        Application.EnableEvents = False
        GrabaDeshacer
        c = 0
        For Each celda In Selection.Cells
            celda.Value = ServCopiados(c)
            c = c + 1
            If c > UBound(ServCopiados) Then c = 0
        Next
        Cambiar_Servicio ActiveCell.Row
        Application.EnableEvents = True
    Else
        msg = MsgBox("Solo se puede pegar sobre una fila", vbInformation, "Pegar")
    End If
End If
End Sub
Private Sub DefineScroll()
'HC.ScrollArea = HC.Range(HC.Cells(1, 5), HC.Cells(HC.Range("h314").End(xlUp).Row + 10, HC.Range("iv1").Column)).Address
End Sub
Private Sub Worksheet_Deactivate()
Application.OnKey "{DEL}"
Application.OnKey "{ENTER}"
End Sub
Private Sub TeclaIntro()
'En celdas de servicio sin salto previo
If ActiveCell.Row > 13 And ActiveCell.Row < 314 And ActiveCell.Column > 12 And ActiveCell.Column < 48 Then
    If Not InStr(ActiveCell, Chr(10)) > 0 Then
        ActiveCell = ActiveCell & Chr(10)
        SendKeys ("{F2}"), True
    End If
End If
End Sub
' Comportamiento de MENUS ----------------------------------
Sub BtnGuardar_Click()
If HCON.Range("ag7") = False Then NoUser
TRABAJANDO.Textillo = "GUARDANDO"
TRABAJANDO.Show 0
TRABAJANDO.Repaint
HCON.Range("cw7") = Now()
HC.Shapes("RecuerdaGuardar").Visible = False
Application.ScreenUpdating = False
HCON.Range("cx4") = HCON.Range("cx4") + 1
If HCON.Range("CX4") >= HCON.Range("CW4") And HCON.Range("cw4") <> 0 Then
    CrearCopiaSeguridad
    HCON.Range("cx4") = 0
End If
If Now() > HCON.Range("cx5") + HCON.Range("cw5") And HCON.Range("cw5") <> 0 Then
    CrearCopiaSeguridad
    HCON.Range("cx5") = Now()
End If
HCON.Range("al4:al14").Value = HCON.Range("ag4:ag14").Value
HCON.Range("ag4:ag14").ClearContents
HC.Activate
HC.Range("a1").Select
HBDC.Activate
HBDC.Range("a1").Select
HPASS.Activate
ThisWorkbook.Save
HC.Activate
HCON.Range("ag4:ag14").Value = HCON.Range("al4:al14").Value
TRABAJANDO.Hide
ThisWorkbook.Saved = True
End Sub
Private Sub CrearCopiaSeguridad()
COPIASEGURIDAD.Show
End Sub
Public Sub BtnCatalogo_Click()
If HCON.Range("ag8") = False Then NoUser
Application.EnableEvents = True
MENUCATALOGOS.Show
End Sub
Private Sub BtnCatalogo_MouseUp(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
If Button = 2 Then
    CrearContextualCatalogos
    Application.CommandBars("MC").ShowPopup
End If
End Sub
Private Sub CrearContextualCatalogos()
Dim Mi_POPUP As CommandBar
Dim MI_ITEM As CommandBarControl
borrar_POPUP
Set Mi_POPUP = CommandBars.Add(Name:="MC", Position:=msoBarPopup, Temporary:=True)
Set MI_ITEM = Mi_POPUP.Controls.Add(Type:=msoControlButton)
With MI_ITEM
    .Caption = "SERVICIOS"
    .OnAction = "hc.ServShow"
    .FaceId = 126
    .DescriptionText = "Crear o editar las definiciones de los Servicios"
End With
Set MI_ITEM = Mi_POPUP.Controls.Add(Type:=msoControlButton)
With MI_ITEM
    .Caption = "COMETIDOS"
    .OnAction = "hc.ComeShow"
    .FaceId = 28
    .DescriptionText = "Establece los cometidos principales"
End With
Set MI_ITEM = Mi_POPUP.Controls.Add(Type:=msoControlButton)
With MI_ITEM
    .Caption = "UNIDAD"
    .OnAction = "hc.UnidadShow"
    .FaceId = 523
    .DescriptionText = "Define la estructura de la Unidad"
End With
Set MI_ITEM = Mi_POPUP.Controls.Add(Type:=msoControlButton)
With MI_ITEM
    .Caption = "FESTIVOS"
    .OnAction = "hc.FestShow"
    .FaceId = 2950
    .DescriptionText = "Define los dias festivos"
End With
Set MI_ITEM = Mi_POPUP.Controls.Add(Type:=msoControlButton)
With MI_ITEM
    .Caption = "CARACTERISTICAS"
    .OnAction = "hc.CaracShow"
    .FaceId = 2103
    .DescriptionText = "Define algunas cuestiones relativas al personal"
End With
Set MI_ITEM = Mi_POPUP.Controls.Add(Type:=msoControlButton)
With MI_ITEM
    .Caption = "TURNOS"
    .OnAction = "hc.TurnosShow"
    .FaceId = 3180
    .DescriptionText = "Define las cadencias de turnos"
End With
End Sub
Private Sub ServShow()
If RAPIDAS.Visible = True Then Unload RAPIDAS
If CAJONSERVICIOS.Visible = True Then Unload CAJONSERVICIOS
CATSERVICIOS.Show
End Sub
Private Sub ComeShow()
If RAPIDAS.Visible = True Then Unload RAPIDAS
If CAJONSERVICIOS.Visible = True Then Unload CAJONSERVICIOS
CATCOMETIDOS.Show
End Sub
Private Sub UnidadShow()
If RAPIDAS.Visible = True Then Unload RAPIDAS
If CAJONSERVICIOS.Visible = True Then Unload CAJONSERVICIOS
CATUNIDAD.Show
End Sub
Private Sub FestShow()
If RAPIDAS.Visible = True Then Unload RAPIDAS
If CAJONSERVICIOS.Visible = True Then Unload CAJONSERVICIOS
CATFESTIVOS.Show
End Sub
Private Sub CaracShow()
If RAPIDAS.Visible = True Then Unload RAPIDAS
If CAJONSERVICIOS.Visible = True Then Unload CAJONSERVICIOS
CATCARAC.Show
End Sub
Private Sub TurnosShow()
If RAPIDAS.Visible = True Then Unload RAPIDAS
If CAJONSERVICIOS.Visible = True Then Unload CAJONSERVICIOS
FORMTURNOS.Show
End Sub

Private Sub borrar_POPUP()
On Error Resume Next
CommandBars("MC").Delete
End Sub
Private Sub BtnAgenda_Click()
AGENDA.Show
End Sub
Private Sub BtnDesplegar_Click()
If HC.Range("a414").EntireRow.Hidden = False Then
    VistaEstrategia 3
ElseIf HC.Range("a6").EntireRow.Hidden = True Then
    VistaEstrategia 2
ElseIf HC.Range("a8").EntireRow.Hidden = True Then
    VistaEstrategia 1
ElseIf HC.Range("a10").EntireRow.Hidden = False Then
    VistaEstrategia 4
End If
End Sub
Sub Asistente_Click()
If HCON.Range("ag11") = False Then NoUser
If RAPIDAS.Visible = True Then Unload RAPIDAS
If CAJONSERVICIOS.Visible = True Then Unload CAJONSERVICIOS
Application.EnableEvents = False
Application.ScreenUpdating = False
Application.Calculation = xlCalculationManual
despro HASI
If HC.FilterMode = True Then
    HC.ShowAllData
End If
'HC.Range("g11") = "TODAS"
'HC.Range("i11") = "TODOS"
HASI.Range("b4:p303").ClearContents
HASI.Range("c4:c303").Value = HC.Range("CK14:Ck313").Value ' Empleo
HASI.Range("b4:b303").Value = HC.Range("Ci14:Ci313").Value ' Antiguedad
HASI.Range("d4:h303").Value = HC.Range("Cm14:Cq313").Value ' Nombre, apellidos, TIP y telefono
HASI.Range("I4:I303").Value = HC.Range("CL14:CL313").Value ' AREA
HASI.Range("J4:J303").Value = HC.Range("DC14:DC313").Value ' GRUPO
HASI.Range("K4:K303").Value = HC.Range("CJ14:CJ313").Value ' ACTIVO
HASI.Range("L4:L303").Value = HC.Range("CR14:CR313").Value ' REGIMEN
HASI.Range("M4:M303").Value = HC.Range("CT14:CT313").Value ' PERIODO
HASI.Range("N4:N303").Value = HC.Range("CS14:CS313").Value ' IMPRIMIR

If HASI.Range("AA2") > 1 Then
    With HASI.Range("I4:I303").Validation
        .Delete
        .Add Type:=xlValidateList, AlertStyle:=xlValidAlertStop, Operator:=xlBetween, Formula1:="=$AA$4:$AA$" & 2 + HASI.Range("AA2")
        .InCellDropdown = True
        .ErrorTitle = "|fffd|reas o grupos"
        .ErrorMessage = "Seleccione un |fffd|rea o grupo de la lista desplegable. Se pueden editar desde CATALOGOS-UNIDAD"
        .ShowError = True
    End With
Else
    With HASI.Range("I4:I303").Validation
        .Delete
        .Add Type:=xlValidateList, AlertStyle:=xlValidAlertStop, Operator:=xlBetween, Formula1:="=$AA$4:$AA$12"
        .InCellDropdown = True
        .ErrorTitle = "|fffd|reas o grupos"
        .ErrorMessage = "Se requiere tener definida al menos un area. Se pueden editar desde CATALOGOS-UNIDAD"
        .ShowError = True
    End With
End If
With HASI.Range("K4:K303").Validation
    .Delete
    .Add Type:=xlValidateList, AlertStyle:=xlValidAlertStop, Operator:=xlBetween, Formula1:="=$AB$4:$AB$5"
    .InCellDropdown = True
    .ErrorTitle = "Si / NO"
    .ErrorMessage = "Seleccione SI / NO"
    .ShowError = True
End With
With HASI.Range("N4:N303").Validation
    .Delete
    .Add Type:=xlValidateList, AlertStyle:=xlValidAlertStop, Operator:=xlBetween, Formula1:="=$AB$4:$AB$5"
    .InCellDropdown = True
    .ErrorTitle = "Si / NO"
    .ErrorMessage = "Seleccione SI / NO"
    .ShowError = True
End With
With HASI.Range("L4:L303").Validation
    .Delete
    .Add Type:=xlValidateList, AlertStyle:=xlValidAlertStop, Operator:=xlBetween, Formula1:="=$AC$4:$AC$9"
    .InCellDropdown = True
    .ErrorTitle = "R|fffd|gimen"
    .ErrorMessage = "Seleccione un r|fffd|gimen de la lista desplegable."
    .ShowError = True
End With
With HASI.Range("M4:M303").Validation
        .Delete
        .Add Type:=xlValidateList, AlertStyle:=xlValidAlertStop, Operator:=xlBetween, Formula1:="=$AD$4:$AD$6"
        .InCellDropdown = True
        .ErrorTitle = "Periodo"
        .ErrorMessage = "Seleccione un tipo de periodo de la lista desplegable, Por defecto es de un mes."
        .ShowError = True
End With
HASI.Range("I4:N303").NumberFormat = ("@")
HASI.Range("o4:p303").NumberFormat = ("0")
For todos = 14 To 313
    If HC.Range("CH" & todos) <> "" Then HASI.Range("O" & todos - 10).Value = Mid(HC.Range("CH" & todos), InStr(1, HC.Range("CH" & todos), " / ") + 3, 2) ' credito vacaciones
    If HC.Range("DE" & todos) <> "" Then HASI.Range("P" & todos - 10).Value = Mid(HC.Range("DE" & todos), InStr(1, HC.Range("DE" & todos), " / ") + 3, 2) ' credito ap
Next todos
Application.EnableEvents = True
Application.Calculation = xlCalculationAutomatic ' OK Automatic
HASI.Activate
HASI.Range("b4").Select
Application.ScreenUpdating = True
ActiveWindow.ScrollRow = 1
Application.CommandBars.ActiveMenuBar.Enabled = True
Application.CommandBars.ActiveMenuBar.Enabled = False
End Sub
Private Sub BtnInforme_Click() ' INFORME DE IMPRIMIR CUADRANTE
MENUVISUALIMPRIMIR.Show
End Sub
Private Sub BtnMenu_Click()
If HCON.Range("ag10") = False Then ' control de ususarios
    MENUUSERS.Show
Else
    Application.EnableEvents = True
    If HC.Shapes("RecuerdaActualizar").Visible = True Then
        HCON.Range("CW9") = Now()
        HC.Shapes("RecuerdaActualizar").Visible = False
    End If
    Application.Calculation = xlCalculationAutomatic 'OK Automatic
    MENUOPCIONES.top = 80
    MENUOPCIONES.left = 100
    MENUOPCIONES.Show
End If
End Sub
Private Sub BtnMenu_MouseUp(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
If Button = 2 Then
    CrearContextualMenu
    Application.CommandBars("MC").ShowPopup
End If
End Sub
Private Sub CrearContextualMenu()
Dim Mi_POPUP As CommandBar
Dim MI_ITEM As CommandBarControl
borrar_POPUP
Set Mi_POPUP = CommandBars.Add(Name:="MC", Position:=msoBarPopup, Temporary:=True)
Set MI_ITEM = Mi_POPUP.Controls.Add(Type:=msoControlButton)
With MI_ITEM
    .Caption = "VISUALIZACION"
    .OnAction = "hc.MenuVis"
    .FaceId = 417
End With
Set MI_ITEM = Mi_POPUP.Controls.Add(Type:=msoControlButton)
With MI_ITEM
    .Caption = "DESHACER TODO"
    .OnAction = "hc.MenuDeshacerTodo"
    .FaceId = 154
End With
Set MI_ITEM = Mi_POPUP.Controls.Add(Type:=msoControlButton)
With MI_ITEM
    .Caption = "ELIMINAR MES"
    .OnAction = "hc.MenuEliminarMes"
    .FaceId = 214
End With
Set MI_ITEM = Mi_POPUP.Controls.Add(Type:=msoControlButton)
With MI_ITEM
    .Caption = "RECALCULAR"
    .OnAction = "hc.MenuRecalcular"
    .FaceId = 385
End With
Set MI_ITEM = Mi_POPUP.Controls.Add(Type:=msoControlButton)
With MI_ITEM
    .Caption = "USUARIOS"
    .OnAction = "hc.MenuUsuarios"
    .FaceId = 327
    .DescriptionText = "Define algunas cuestiones relativas al personal"
End With
Set MI_ITEM = Mi_POPUP.Controls.Add(Type:=msoControlButton)
With MI_ITEM
    .Caption = "CERRAR CUADRANTE"
    .OnAction = "hc.MenuCerrarCuadrante"
    .FaceId = 103
End With
End Sub
Private Sub MenuVis()
MENUVISUAL.Show
End Sub
Private Sub MenuDeshacerTodo()
msg = MsgBox("Volvera a una version anterior de este mes." & vbCrLf & vbCrLf & "Info: Mientras se trabaja con el cuadrante de un mes, este no queda guardado completamente hasta que se selecciona otro mes o se realiza alguna opcion como la autoplanificacion. Al seleccionar SI, volvera al ultimo punto guardado.", vbYesNo, "Dehacer todos los cambios de la sesion.")
Unload Me
If msg = 6 Then
    Application.ScreenUpdating = False
    HC.recupar_mes
End If
End Sub
Private Sub MenuEliminarMes()
msg = MsgBox("ATENCION!! Quieres borrar todo cuadrante de " & HC.Range("e3") & "?", 17, "ELIMINAR CUADRANTE DE " & HC.Range("e3"))
If msg = 1 Then
    Application.EnableEvents = False
    Application.ScreenUpdating = False
    '-------BORRAR DATOS BASE DE DATOS------------------------------
    HBDC.Range("A" & HC.Range("ba8") - 1 & ":a" & HC.Range("ba8") + 400).EntireRow.Clear  'no elimina, solo borra
    'Borrar Validacion de cuadrante
    If HC.Range("ay1") <> "NO" Then
        HVAL.Range("a" & HC.Range("ay5") - 1 & ":ct" & HC.Range("ay6")).ClearContents
    End If
    'Si hay uno anterior ir si no, nuevo
    If HBDC.Range("A" & HC.Range("BA8") - 501) <> "" Then
        If HC.Range("BA6").Value = 0 And HC.Range("BA7").Value = 0 Then GoTo nuevo
        If HC.Range("BA6").Value = 0 Then
            MesActual = 11
            AnoActual = HC.Range("BA7").Value - 1
        Else
            MesActual = HC.Range("BA6").Value - 1
            AnoActual = HC.Range("BA7").Value
        End If
        HC.Cambio_mes MesActual, AnoActual, False, True
    Else
nuevo:
        If HC.FilterMode = True Then HC.ShowAllData
        HC.Range("ax14:du313").ClearContents
        HC.Range("G13").Value = "ANTIG|fffd|EDAD"
        HC.Range("F13").Value = "H / H.REF"
        HC.Range("CS12") = 112
        HC.Range("F14:F313").NumberFormat = "General"
        HC.Range("G14:G313").Validation.Delete
        HC.Range("CS12").Value = 112 ' definir columna de H/Href
        HC.Range("ci363:ec386").ClearContents ' Borra los contar
        HC.Range("g11") = "TODAS"
        HC.Range("i11") = "TODOS"
        HC.Cambio_mes "", 0, False, False
    End If
End If
End Sub
Private Sub MenuRecalcular()
Application.EnableEvents = False
Application.ScreenUpdating = False
HC.Refrescar 1
Application.EnableEvents = True
Application.ScreenUpdating = True
End Sub
Private Sub MenuUsuarios()
MENUUSERS.Show
End Sub
Private Sub MenuCerrarCuadrante()
If ThisWorkbook.Saved = False Then
    msg = MsgBox("No se han guardado los cambios." & vbCrLf & vbCrLf & " |fffd| CERRAR DE TODAS FORMAS ?", 20, "NO SE HAN GUARDADO CAMBIOS")
    If msg <> 6 Then GoTo cancelar
End If
ThisWorkbook.CIERRO = 3
ThisWorkbook.Close savechanges:=False
cancelar:
End Sub



'--- Otros BOTONES ------------------------------------
Private Sub BtnSelMes_Click() ' SELECTOR DE MES
SELMES.Show
End Sub
Private Sub SpinMes_SpinUp()
If HC.Range("ba6") <> "" Then
    SpinMes.Enabled = False
    If HC.Range("BA6").Value = 11 And HC.Range("BA7").Value = 9 Then End
    If HC.Range("BA6").Value = 11 Then
        MesActual = 0
        AnoActual = HC.Range("BA7").Value + 1
    Else
        MesActual = HC.Range("BA6").Value + 1
        AnoActual = HC.Range("BA7").Value
    End If
    If HBDC.Range("a" & (AnoActual * 12 + MesActual + 1) * 500) = "" Then
        msg = MsgBox("No existen datos para el periodo. Se crear|fffd| un cuadrante nuevo para el mes seleccionado" & vbCrLf & vbCrLf & "Recuerda que se crear|fffd| con los datos del ultimo periodo seleccionado.", 65, "CUADRANTE NUEVO")
        If msg = 2 Then GoTo fin
    End If
    Cambio_mes MesActual, AnoActual, True, True
fin:
    SpinMes.Enabled = True
End If
End Sub
Private Sub SpinMes_SpinDown()
If HC.Range("ba6") <> "" Then
    SpinMes.Enabled = False
    If HC.Range("BA6").Value = 0 And HC.Range("BA7").Value = 0 Then End
    If HC.Range("BA6").Value = 0 Then
        MesActual = 11
        AnoActual = HC.Range("BA7").Value - 1
    Else
        MesActual = HC.Range("BA6").Value - 1
        AnoActual = HC.Range("BA7").Value
    End If
    If HBDC.Range("a" & (AnoActual * 12 + MesActual + 1) * 500) = "" Then
        msg = MsgBox("No existen datos para el periodo. Se crear|fffd| un cuadrante nuevo para el mes seleccionado" & vbCrLf & vbCrLf & "Recuerda que se crear|fffd| con los datos del ultimo periodo seleccionado.", 65, "CUADRANTE NUEVO")
        If msg = 2 Then GoTo fin
    End If
    Cambio_mes MesActual, AnoActual, True, True
fin:
    SpinMes.Enabled = True
End If
End Sub
'DESHACER----------------------------------------
Sub BtnDeshacer_Click()
If Application.Count(HVAL.Range("b1000:b1049")) > 0 And BtnDeshacer.Enabled = True Then
    If RAPIDAS.Visible = True Then RAPIDAS.Bloquea 0
    Application.ScreenUpdating = False
    If Application.Calculation = xlCalculationAutomatic Then Application.Calculation = xlCalculationManual
    Application.EnableEvents = False
    If HVAL.Range("b1000") <> "" Then
        HVAL.Range("b985:bx998").Value = HVAL.Range("b986:bx999").Value
        HVAL.Range("d999:bx999").Value = HC.Range("M" & Val(HVAL.Range("B1000")) & ":CG" & Val(HVAL.Range("B1000"))).Value
        HVAL.Range("b999").Value = HVAL.Range("b1000").Value
        HVAL.Range("c999").Value = HVAL.Range("c1000").Value
    End If
    HC.Range("M" & Val(HVAL.Range("B1000")) & ":au" & Val(HVAL.Range("B1000"))).Value = HVAL.Range("d1000:al1000").Value
    HC.Range("ay" & Val(HVAL.Range("B1000")) & ":cg" & Val(HVAL.Range("B1000"))).Value = HVAL.Range("ap1000:bx1000").Value
    celda = HVAL.Range("c1000")
    Cambiar_Servicio Val(HVAL.Range("B1000"))
    HVAL.Range("B1000:bx1049").Value = HVAL.Range("B1001:bx1050").Value
    HC.VerEstrategias
    Quedan = Application.Count(HVAL.Range("b1000:b1049"))
    BtnDeshacer.Caption = Quedan
    If Quedan = 0 Then
        BtnDeshacer.Enabled = False
        DeshacerDesple.Enabled = False
    End If
    BtnRehacer.Enabled = True
    Application.EnableEvents = True
    HC.Range(celda).Select
    Application.ScreenUpdating = True
End If
End Sub
'ListaDesplegable
Private Sub DeshacerDesple_Click()
SELDESHACER.Show 0
End Sub
'REHACER
Private Sub BtnRehacer_Click()
If Application.Count(HVAL.Range("b985:b999")) > 0 Then
    If RAPIDAS.Visible = True Then RAPIDAS.Bloquea 0
    Application.ScreenUpdating = False
    If Application.Calculation = xlCalculationAutomatic Then Application.Calculation = xlCalculationManual
    Application.EnableEvents = False
    HVAL.Range("B1001:bx1050").Value = HVAL.Range("B1000:bx1049").Value
    HVAL.Range("d1000:bx1000").Value = HC.Range("M" & Val(HVAL.Range("B999")) & ":CG" & Val(HVAL.Range("B999"))).Value
    HVAL.Range("b1000").Value = HVAL.Range("b999").Value
    HVAL.Range("c1000").Value = HVAL.Range("c999").Value
    HC.Range("M" & Val(HVAL.Range("B999")) & ":au" & Val(HVAL.Range("B999"))).Value = HVAL.Range("d999:al999").Value
    HC.Range("ay" & Val(HVAL.Range("B999")) & ":CG" & Val(HVAL.Range("B999"))).Value = HVAL.Range("ap999:bx999").Value
    celda = HVAL.Range("c999")
    Cambiar_Servicio Val(HVAL.Range("B999"))
    HVAL.Range("B986:bx999").Value = HVAL.Range("B985:bx998").Value
    HC.VerEstrategias
    Quedan = Application.Count(HVAL.Range("b1000:b1049"))
    BtnDeshacer.Caption = Quedan
    If Application.Count(HVAL.Range("b985:b999")) = 0 Then BtnRehacer.Enabled = False
    BtnDeshacer.Enabled = True
    DeshacerDesple.Enabled = True
    Application.EnableEvents = True
    HC.Range(celda).Select
    Application.ScreenUpdating = True
End If
End Sub
'----ORDENAR LISTAS------------------------------------------------------------------------------
Private Sub OCalculo_SpinDown()
Application.EnableEvents = False
If HC.Range("f13") = "H / H.REF" Then HC.Range("a14:EB313").Sort key1:=HC.Range("cv14"), order1:=xlAscending, header:=xlNo, OrderCustom:=1, MatchCase:=False, Orientation:=xlTopToBottom, DataOption1:=xlSortNormal
If HC.Range("f13") = "DESVIO" Then HC.Range("a14:EB313").Sort key1:=HC.Range("CW14"), order1:=xlAscending, header:=xlNo, OrderCustom:=1, MatchCase:=False, Orientation:=xlTopToBottom, DataOption1:=xlSortNormal
If HC.Range("f13") = "NOCTUR." Then HC.Range("a14:EB313").Sort key1:=HC.Range("CY14"), order1:=xlAscending, header:=xlNo, OrderCustom:=1, MatchCase:=False, Orientation:=xlTopToBottom, DataOption1:=xlSortNormal
If HC.Range("f13") = "FESTIVOS" Then HC.Range("a14:EB313").Sort key1:=HC.Range("CX14"), order1:=xlAscending, header:=xlNo, OrderCustom:=1, MatchCase:=False, Orientation:=xlTopToBottom, DataOption1:=xlSortNormal
If HC.Range("f13") = "DSA PEND." Then HC.Range("a14:EB313").Sort key1:=HC.Range("CZ14"), order1:=xlAscending, header:=xlNo, OrderCustom:=1, MatchCase:=False, Orientation:=xlTopToBottom, DataOption1:=xlSortNormal
If HC.Range("f13") = "DF PEND." Then HC.Range("a14:EB313").Sort key1:=HC.Range("DB14"), order1:=xlAscending, header:=xlNo, OrderCustom:=1, MatchCase:=False, Orientation:=xlTopToBottom, DataOption1:=xlSortNormal
If HC.Range("f13") = "DCO PEND." Then HC.Range("a14:EB313").Sort key1:=HC.Range("DA14"), order1:=xlAscending, header:=xlNo, OrderCustom:=1, MatchCase:=False, Orientation:=xlTopToBottom, DataOption1:=xlSortNormal
If HC.Range("f13") = "CONTAR.." Then HC.Range("a14:EB313").Sort key1:=HC.Range("F14"), order1:=xlAscending, header:=xlNo, OrderCustom:=1, MatchCase:=False, Orientation:=xlTopToBottom, DataOption1:=xlSortNormal
If HC.Range("f13") = "DIAS SIN.." Then HC.Range("a14:EB313").Sort key1:=HC.Range("F14"), order1:=xlAscending, header:=xlNo, OrderCustom:=1, MatchCase:=False, Orientation:=xlTopToBottom, DataOption1:=xlSortNormal
If HC.Range("f13") = "PRODUC." Then HC.Range("a14:EB313").Sort key1:=HC.Range("DM14"), order1:=xlAscending, header:=xlNo, OrderCustom:=1, MatchCase:=False, Orientation:=xlTopToBottom, DataOption1:=xlSortNormal
RestableceDeshacer
Application.EnableEvents = True
End Sub
Private Sub OCalculo_SpinUp()
Application.EnableEvents = False
If HC.Range("f13") = "H / H.REF" Then HC.Range("a14:EB313").Sort key1:=HC.Range("cv14"), order1:=xlDescending, header:=xlNo, OrderCustom:=1, MatchCase:=False, Orientation:=xlTopToBottom, DataOption1:=xlSortNormal
If HC.Range("f13") = "DESVIO" Then HC.Range("a14:EB313").Sort key1:=HC.Range("CW14"), order1:=xlDescending, header:=xlNo, OrderCustom:=1, MatchCase:=False, Orientation:=xlTopToBottom, DataOption1:=xlSortNormal
If HC.Range("f13") = "NOCTUR." Then HC.Range("a14:EB313").Sort key1:=HC.Range("CY14"), order1:=xlDescending, header:=xlNo, OrderCustom:=1, MatchCase:=False, Orientation:=xlTopToBottom, DataOption1:=xlSortNormal
If HC.Range("f13") = "FESTIVOS" Then HC.Range("a14:EB313").Sort key1:=HC.Range("CX14"), order1:=xlDescending, header:=xlNo, OrderCustom:=1, MatchCase:=False, Orientation:=xlTopToBottom, DataOption1:=xlSortNormal
If HC.Range("f13") = "DSA PEND." Then HC.Range("a14:EB313").Sort key1:=HC.Range("CZ14"), order1:=xlDescending, header:=xlNo, OrderCustom:=1, MatchCase:=False, Orientation:=xlTopToBottom, DataOption1:=xlSortNormal
If HC.Range("f13") = "DF PEND." Then HC.Range("a14:EB313").Sort key1:=HC.Range("DB14"), order1:=xlDescending, header:=xlNo, OrderCustom:=1, MatchCase:=False, Orientation:=xlTopToBottom, DataOption1:=xlSortNormal
If HC.Range("f13") = "DCO PENDIENTE" Then HC.Range("a14:EB313").Sort key1:=HC.Range("DA14"), order1:=xlDescending, header:=xlNo, OrderCustom:=1, MatchCase:=False, Orientation:=xlTopToBottom, DataOption1:=xlSortNormal
If HC.Range("f13") > "CONTAR.." Then HC.Range("a14:EB313").Sort key1:=HC.Range("F14"), order1:=xlDescending, header:=xlNo, OrderCustom:=1, MatchCase:=False, Orientation:=xlTopToBottom, DataOption1:=xlSortNormal
If HC.Range("f13") > "DIAS SIN.." Then HC.Range("a14:EB313").Sort key1:=HC.Range("F14"), order1:=xlDescending, header:=xlNo, OrderCustom:=1, MatchCase:=False, Orientation:=xlTopToBottom, DataOption1:=xlSortNormal
If HC.Range("f13") = "PRODUC." Then HC.Range("a14:EB313").Sort key1:=HC.Range("DM14"), order1:=xlDescending, header:=xlNo, OrderCustom:=1, MatchCase:=False, Orientation:=xlTopToBottom, DataOption1:=xlSortNormal
RestableceDeshacer
Application.EnableEvents = True
End Sub
Private Sub ODato_SpinDown()
Application.EnableEvents = False
HC.Range("a14:EB313").Sort key1:=HC.Range("G14"), order1:=xlAscending, header:=xlNo, OrderCustom:=1, MatchCase:=False, Orientation:=xlTopToBottom, DataOption1:=xlSortNormal
RestableceDeshacer
Application.EnableEvents = True
End Sub
Private Sub ODato_SpinUp()
Application.EnableEvents = False
HC.Range("a14:EB313").Sort key1:=HC.Range("G14"), order1:=xlDescending, header:=xlNo, OrderCustom:=1, MatchCase:=False, Orientation:=xlTopToBottom, DataOption1:=xlSortNormal
RestableceDeshacer
Application.EnableEvents = True
End Sub
Private Sub OExtra1_SpinDown()
Application.EnableEvents = False
HC.Range("a14:EB313").Sort key1:=HC.Range("a14"), order1:=xlAscending, header:=xlNo, OrderCustom:=1, MatchCase:=False, Orientation:=xlTopToBottom, DataOption1:=xlSortNormal
RestableceDeshacer
Application.EnableEvents = True
End Sub
Private Sub OExtra1_SpinUp()
Application.EnableEvents = False
HC.Range("a14:EB313").Sort key1:=HC.Range("a14"), order1:=xlDescending, header:=xlNo, OrderCustom:=1, MatchCase:=False, Orientation:=xlTopToBottom, DataOption1:=xlSortNormal
RestableceDeshacer
Application.EnableEvents = True
End Sub
Private Sub OExtra2_SpinDown()
Application.EnableEvents = False
HC.Range("a14:EB313").Sort key1:=HC.Range("b14"), order1:=xlAscending, header:=xlNo, OrderCustom:=1, MatchCase:=False, Orientation:=xlTopToBottom, DataOption1:=xlSortNormal
RestableceDeshacer
Application.EnableEvents = True
End Sub
Private Sub OExtra2_SpinUp()
Application.EnableEvents = False
HC.Range("a14:EB313").Sort key1:=HC.Range("b14"), order1:=xlDescending, header:=xlNo, OrderCustom:=1, MatchCase:=False, Orientation:=xlTopToBottom, DataOption1:=xlSortNormal
RestableceDeshacer
Application.EnableEvents = True
End Sub
Private Sub OExtra3_SpinDown()
Application.EnableEvents = False
HC.Range("a14:EB313").Sort key1:=HC.Range("c14"), order1:=xlAscending, header:=xlNo, OrderCustom:=1, MatchCase:=False, Orientation:=xlTopToBottom, DataOption1:=xlSortNormal
RestableceDeshacer
Application.EnableEvents = True
End Sub
Private Sub OExtra3_SpinUp()
Application.EnableEvents = False
HC.Range("a14:EB313").Sort key1:=HC.Range("c14"), order1:=xlDescending, header:=xlNo, OrderCustom:=1, MatchCase:=False, Orientation:=xlTopToBottom, DataOption1:=xlSortNormal
RestableceDeshacer
Application.EnableEvents = True
End Sub
Private Sub OExtra4_SpinDown()
Application.EnableEvents = False
HC.Range("a14:EB313").Sort key1:=HC.Range("d14"), order1:=xlAscending, header:=xlNo, OrderCustom:=1, MatchCase:=False, Orientation:=xlTopToBottom, DataOption1:=xlSortNormal
RestableceDeshacer
Application.EnableEvents = True
End Sub
Private Sub OExtra4_SpinUp()
Application.EnableEvents = False
HC.Range("a14:EB313").Sort key1:=HC.Range("d14"), order1:=xlDescending, header:=xlNo, OrderCustom:=1, MatchCase:=False, Orientation:=xlTopToBottom, DataOption1:=xlSortNormal
RestableceDeshacer
Application.EnableEvents = True
End Sub
Private Sub ONombre_SpinDown()
Application.EnableEvents = False
HC.Range("a14:EB313").Sort key1:=HC.Range("H14"), order1:=xlAscending, header:=xlNo, OrderCustom:=1, MatchCase:=False, Orientation:=xlTopToBottom, DataOption1:=xlSortNormal
RestableceDeshacer
Application.EnableEvents = True
End Sub
Private Sub ONombre_SpinUp()
Application.EnableEvents = False
HC.Range("a14:EB313").Sort key1:=HC.Range("H14"), order1:=xlDescending, header:=xlNo, OrderCustom:=1, MatchCase:=False, Orientation:=xlTopToBottom, DataOption1:=xlSortNormal
RestableceDeshacer
Application.EnableEvents = True
End Sub
Private Sub OApellido_SpinDown()
Application.EnableEvents = False
HC.Range("a14:EB313").Sort key1:=HC.Range("I14"), order1:=xlAscending, header:=xlNo, OrderCustom:=1, MatchCase:=False, Orientation:=xlTopToBottom, DataOption1:=xlSortNormal
RestableceDeshacer
Application.EnableEvents = True
End Sub
Private Sub OApellido_SpinUp()
Application.EnableEvents = False
HC.Range("a14:EB313").Sort key1:=HC.Range("I14"), order1:=xlDescending, header:=xlNo, OrderCustom:=1, MatchCase:=False, Orientation:=xlTopToBottom, DataOption1:=xlSortNormal
RestableceDeshacer
Application.EnableEvents = True
End Sub
'----------------------------DOBLE CLIK--------------------------------------------------
Private Sub Worksheet_BeforeDoubleClick(ByVal Target As Range, Cancel As Boolean)
Application.EnableEvents = False
If ActiveCell.Locked = True Then Cancel = True
ra = ActiveCell.Row
ca = ActiveCell.Column
'En SERVICIOS
If ra > 13 And ra < 314 And ca > 12 And ca <= HC.Range("BD8") Then
    If HC.Range("f326") = True Then
        Cancel = True
        RAPIDAS.Show 0
    End If
'FORMULARIO SELECCION DE AREA
ElseIf ca = 7 And HC.Range("G13") = "AREA" And ActiveCell.Row > 13 And ActiveCell.Row < 314 Then
    Cancel = True
    SELAREA.Show
    Cambiar_Datos Target.Row, Target.Column
'FORMULARIO SELECCION DE REGIMEN
ElseIf ca = 7 And HC.Range("G13") = "REGIMEN" And ActiveCell.Row > 13 And ActiveCell.Row < 314 Then
    Cancel = True
    SELREGIMEN.Show
    Cambiar_Datos Target.Row, Target.Column
'FORMULARIO SELECCION DE PERIODO
ElseIf ca = 7 And HC.Range("G13") = "PERIODO" And ActiveCell.Row > 13 And ActiveCell.Row < 314 Then
    Cancel = True
    SELPERIODO.Show
    Cambiar_Datos Target.Row, Target.Column
'FORMULARIO SELECCION ACTIVO
ElseIf ca = 7 And HC.Range("G13") = "ACTIVOS" And ActiveCell.Row > 13 And ActiveCell.Row < 314 Then
    Cancel = True
    SELSINO.Show
    Cambiar_Datos Target.Row, Target.Column
'FORMULARIO SELECCION IMPRIMIR
ElseIf ca = 7 And HC.Range("G13") = "IMPRIMIR" And ActiveCell.Row > 13 And ActiveCell.Row < 314 Then
    Cancel = True
    SELSINO.Show
    Cambiar_Datos Target.Row, Target.Column
'FORMULARIO SELECCION DE MES
ElseIf ActiveCell.Address = "$E$3" Then
    SELMES.Show
'FORMULARIO MENU DIA
ElseIf ra > 11 And ra < 14 And ca > 12 And ca <= HC.Range("BD8") And HC.Cells(13, Target.Column).Value <> "" Then
    MENUDIA.Show
'FORMULARIO SELECCION DE ESTRATEGIA
ElseIf (ca >= 9 And ca < 48) And ((ra > 2 And ra <= 10) Or (ra >= 414 And ra <= 437)) Then
    If HCON.Range("ag12") = True Then
        If ra >= 414 Then
            Desfase = -51
        Else
            Desfase = 360 + HC.BarraEstrategia
        End If
        If ca >= 9 And ca <= 12 Then
            MENUESTRATEGIA.Show
        ElseIf HC.Range("cj" & Target.Row + Desfase) = "P" Or HC.Range("cj" & Target.Row + Desfase) = "PI" Then
            MENUPLANES.Show
        Else
            MENUESTRATEGIA.Show
        End If
    End If
    Cancel = True
'CELDAS DE CONTAR
ElseIf ca > 12 And ca < 48 And ra >= 3 And ra <= 10 Then
    Cancel = True
'FORMULARIO SELECCION DE CALCULO
ElseIf ca = 6 And ra = 13 Then
    SELCALCULO.Show
'MOSTRAR RESUMEN PERSONA
ElseIf ca = 6 And ra >= 14 And ra <= 313 Then
    RESUMENPERS.ACTUALIZA
ElseIf ActiveCell.Column > 7 And ActiveCell.Column < 13 And ActiveCell.Row > 13 And ActiveCell.Row < 314 Then
    Cancel = True
    MENUPERSONA.ACTUALIZA
    MENUPERSONA.Show
'FORMULARIO SELECCION DE DATO
ElseIf ActiveCell.Address = "$G$13" Then
    Cancel = True
    SELDATO.Show
'FORMULARIO VER
ElseIf ActiveCell.Address = "$I$11" Then
    SELVER.Show
'FORMULARIO VER AREA
ElseIf ActiveCell.Address = "$G$11" Then
    SELVERAREA.Show
End If
Application.EnableEvents = True
End Sub
'----------------------------CLICK DERECHOOOOOOOO-----------------------------------
Private Sub Worksheet_BeforeRightClick(ByVal Target As Range, Cancel As Boolean)
Application.EnableEvents = False
Cancel = True
ra = ActiveCell.Row
ca = ActiveCell.Column
'FORMULARIO CAJA SERVICIO
If ra > 13 And ra < 314 And ca > 12 And ca <= HC.Range("BD8") Then
    CAJONSERVICIOS.ACTUALIZA
    CAJONSERVICIOS.BtnOK.Enabled = True
    'RAPIDAS.Show 0
'FORMULARIO SELECCION DE AREA
ElseIf HC.Cells(13, ca) = "AREA" And ActiveCell.Row > 13 And ActiveCell.Row < 314 Then
    SELAREA.Show
    Cambiar_Datos Target.Row, Target.Column
'FORMULARIO SELECCION DE REGIMEN
ElseIf HC.Cells(13, ca) = "REGIMEN" And ActiveCell.Row > 13 And ActiveCell.Row < 314 Then
    SELREGIMEN.Show
    Cambiar_Datos Target.Row, Target.Column
'FORMULARIO SELECCION DE PERIODO
ElseIf HC.Cells(13, ca) = "PERIODO" And ActiveCell.Row > 13 And ActiveCell.Row < 314 Then
    SELPERIODO.Show
    Cambiar_Datos Target.Row, Target.Column
'FORMULARIO SELECCION ACTIVO
ElseIf HC.Cells(13, ca) = "ACTIVOS" And ActiveCell.Row > 13 And ActiveCell.Row < 314 Then
    SELSINO.Show
    Cambiar_Datos Target.Row, Target.Column
'FORMULARIO SELECCION IMPRIMIR
ElseIf HC.Cells(13, ca) = "IMPRIMIR" And ActiveCell.Row > 13 And ActiveCell.Row < 314 Then
    SELSINO.Show
    Cambiar_Datos Target.Row, Target.Column
'FORMULARIO SI NO CARACTERISTICA BOLEANA
ElseIf HC.Cells(12, 125 + ca) <> "" And ActiveCell.Row > 13 And ActiveCell.Row < 314 Then
        TIPO = left(HC.Cells(12, 125 + ca), 1)
        If TIPO = "B" Then
            SELSINO.Show 'Si Boleano
            Cambiar_Datos Target.Row, Target.Column
        End If
'FORMULARIO SELECCION DE MES
ElseIf ActiveCell.Address = "$E$3" Then
    SELMES.Show
'FORMULARIO MENU DIA
ElseIf ra > 11 And ra < 14 And ca > 12 And ca <= HC.Range("BD8") And HC.Cells(13, Target.Column).Value <> "" Then
    MENUDIA.Show
'FORMULARIO SELECCION DE DATO
ElseIf ActiveCell.Address = "$G$13" Then
    SELDATO.Show
'FORMULARIO SELECCION DE CALCULO
ElseIf ca = 6 And ra = 13 Then
    SELCALCULO.Show
ElseIf ca >= 1 And ca <= 4 And ra = 13 Then
    SELDATOEXTRA.Show
ElseIf ca = 1 And ra = 13 Then
    SELCALCULO.Show
'MOSTRAR RESUMEN PERSONA
ElseIf ca = 6 And ra >= 14 And ra <= 313 Then
    RESUMENPERS.ACTUALIZA
'FORMULARIO ESTRATEGIAS
ElseIf (ca >= 9 And ca < 48) And ((ra > 2 And ra <= 10) Or (ra >= 414 And ra <= 437)) Then
    If HCON.Range("ag12") = True Then
        If ra >= 414 Then
            Desfase = -51
        Else
            Desfase = 360 + HC.BarraEstrategia
        End If
        If ca >= 9 And ca <= 12 Then
            MENUESTRATEGIA.Show
        ElseIf HC.Range("cj" & Target.Row + Desfase) = "P" Or HC.Range("cj" & Target.Row + Desfase) = "PI" Then
            MENUPLANES.Show
        Else
            MENUESTRATEGIA.Show
        End If
    End If
'FORMULARIO VER
ElseIf ActiveCell.Address = "$I$11" Then
    SELVER.Show
'FORMULARIO VER AREA
ElseIf ActiveCell.Address = "$G$11" Then
    SELVERAREA.Show
'FORMULARIO MENU PERSONA
ElseIf ActiveCell.Column > 7 And ActiveCell.Column < 13 And ActiveCell.Row > 13 And ActiveCell.Row < 314 Then
    If HCON.Range("ag11") = True Then
        MENUPERSONA.ACTUALIZA
        MENUPERSONA.Show
    Else
        msg = MsgBox("Habilita un Usuario con permisos", vbExclamation, "Seguridad")
    End If
End If
Application.EnableEvents = True
End Sub
'----------------------------SELECCION----------------------------------------------------------
Sub Worksheet_SelectionChange(ByVal Target As Range)
If HC.Range("cn10") = 1 And Target.Row > 13 Then
    Application.EnableEvents = False
    Actualizaencabezado ActiveCell.Row
    Application.EnableEvents = True
End If
'RESTRIGIR SELECCIONAR C
Dim c As Range
For Each c In Selection
    If c.Column > 12 And c.Column < 48 And c.Row > 13 And c.Row < 314 Then
    
    Else
        ActiveCell.Select
        Exit For
    End If
Next
If Target.Column = 7 Then
    Application.EnableAutoComplete = True
Else
    Application.EnableAutoComplete = False
End If
If ActiveCell.Column > 12 And ActiveCell.Column < 48 And ActiveCell.Row > 13 And ActiveCell.Row < 314 Then
    Set RangoSeleccionado = Target
    CapturaAlMover ActiveCell
    'Aplicar FAvoritos
    If RAPIDAS.Visible = True Then
        For n = 1 To 12
            If RAPIDAS.Controls("Lock" & n).BackColor = RGB(255, 0, 0) Then
                ActiveCell = HC.Range("bc" & 359 + n)
                HC.Range("a1").Select
            End If
        Next
    End If
    If CAJONSERVICIOS.Visible = True Then
        CAJONSERVICIOS.ACTUALIZA
        CAJONSERVICIOS.BtnOK.Enabled = True
    End If
Else
    If CAJONSERVICIOS.Visible = True Then CAJONSERVICIOS.BtnOK.Enabled = False
End If
End Sub
Sub CapturaAlMover(fila) 'FUNCION DESHACER (capturar antes del cambio)
For i = 1 To 73
    Deshacer1(i) = HC.Cells(fila.Row, i + 12).Value
Next i
Deshacer2 = fila.Row
Deshacer3 = fila.Address
End Sub
Private Sub Actualizaencabezado(fila)
HC.Range("a1") = HC.Range("do" & fila)
HC.Range("a2") = HC.Range("cl" & fila)
HC.Range("b2") = HC.Range("cr" & fila)
HC.Range("c2") = HC.Range("cp" & fila)
HC.Range("d2") = HC.Range("cq" & fila)
HC.Range("c7") = HC.Range("cz" & fila)
HC.Range("c6") = HC.Range("db" & fila)
HC.Range("d6") = HC.Range("cw" & fila)
HC.Range("a6:a7").Font.ColorIndex = 15
On Error GoTo fallo
HC.Range("a3") = HC.Range("e" & fila).Comment.Text
HC.Range("a3").Interior.ColorIndex = HC.Range("e" & fila).Interior.ColorIndex
If HC.Range("a3").Interior.ColorIndex = 53 Then
    HC.Range("a3").Font.ColorIndex = 2
ElseIf HC.Range("a3").Interior.ColorIndex = 6 Then
    HC.Range("a3").Font.ColorIndex = 1
ElseIf HC.Range("a3").Interior.ColorIndex = 4 Then
    HC.Range("a3").Font.ColorIndex = 1
End If
GoTo fin
fallo:
HC.Range("a3") = ""
HC.Range("a3").Interior.ColorIndex = 2
HC.Range("a6:a7").Font.ColorIndex = 2
fin:
End Sub

'------------------------------AL CAMBIAR CELDAS------------------------------------------------
Private Sub Worksheet_Change(ByVal Target As Range)
On Error Resume Next
'DefineScroll
Application.EnableEvents = False
'CAMBIAR ZONA NOMBRE APELLIDO
    If Target.Row > 13 And Target.Row < 314 And Target.Column > 7 And Target.Column < 11 Then
        Application.ScreenUpdating = False
        HC.aplicafilas
        If HCON.Range("ag11") = False Then 'Control de usuarios
            HC.Range("H" & Target.Row & ":J" & Target.Row).Value = HC.Range("CM" & Target.Row & ":CO" & Target.Row).Value
        Else
            HC.Range("CM" & Target.Row & ":CO" & Target.Row).Value = HC.Range("H" & Target.Row & ":J" & Target.Row).Value
            If Target.Column = 8 Then
                Cambiar_Servicio Target.Row
                VerEstrategias
                Application.ScreenUpdating = True
            End If
        End If
'CAMBIAR DATOS
    ElseIf Target.Row > 13 And Target.Row < 314 And (Target.Column = 7 Or Target.Column >= 1 And Target.Column <= 4) And Target.Locked = False Then
        If HCON.Range("ag12") = True Then Cambiar_Datos Target.Row, Target.Column ' Con Usuarios
'CAMBIAR SERVICIO!!!!!!
    ElseIf Target.Row > 13 And Target.Row < 314 And Target.Column > 12 And Target.Column <= HC.Range("BD8") Then
        Application.ScreenUpdating = False
        Dim fila As Range
        GrabaDeshacer
        For Each fila In RangoSeleccionado.Rows
            If fila.EntireRow.Hidden = False Then
                If fila.Row <> Target.Row Then
                    CapturaAlMover fila
                    GrabaDeshacer
                End If
            End If
        Next
        'RangoSeleccionado = Target
        Dim celda As Range
            For Each celda In RangoSeleccionado.Cells
                If celda.EntireRow.Hidden = False Then
                    celda.Value = Target.Value
                    If celda.Offset(0, 38) = "@A" Then celda.Offset(0, 38).ClearContents
                End If
            Next
        For Each fila In RangoSeleccionado.Rows
            If fila.EntireRow.Hidden = False Then
                HC.Comprobaciones
                HC.Cambiar_Servicio fila.Row
                If fila.Row = Target.Row Then CapturaAlMover ActiveCell
            End If
        Next
        VerEstrategias
        Application.ScreenUpdating = True
'Cambiar en estrategias
    ElseIf ((Target.Row >= 3 And Target.Row <= 10 And HC.Range("a414").EntireRow.Hidden = True) Or (Target.Row >= 414 And Target.Row <= 437)) And Target.Column >= 13 And Target.Column <= HC.Range("BD8") Then
        Application.ScreenUpdating = False
        If Target.Row >= 414 Then
            EstrategiaFilaBarra = -51
        Else
            EstrategiaFilaBarra = 360 + HC.BarraEstrategia
        End If
        If (HC.Range("cj" & Target.Row + EstrategiaFilaBarra) = "N" Or HC.Range("cj" & Target.Row + EstrategiaFilaBarra) = "NI") And HCON.Range("ag12") = True Then HC.Cells(Target.Row + EstrategiaFilaBarra, Target.Column + 88) = Target.Value
        If (HC.Range("cj" & Target.Row + EstrategiaFilaBarra) = "O" Or HC.Range("cj" & Target.Row + EstrategiaFilaBarra) = "OI") And HCON.Range("ag12") = True And (UCase(Target.Value) = "X" Or Target.Value = "") Then HC.Cells(Target.Row + EstrategiaFilaBarra, Target.Column + 88) = UCase(Target.Value)
        If (HC.Range("cj" & Target.Row + EstrategiaFilaBarra) = "P" Or HC.Range("cj" & Target.Row + EstrategiaFilaBarra) = "PI") And HCON.Range("ag12") = True Then
            'Separar con separador y a|fffd|adir minimo/maximo por defecto
            Separador = HC.Cells(Target.Row + EstrategiaFilaBarra, 89)
            If Target.Value <> "" Then
                CodeF = Target.Value & "#@" & Format(HC.Range("cn" & Target.Row + EstrategiaFilaBarra), "00") & Format(HC.Range("cq" & Target.Row + EstrategiaFilaBarra), "00") & Format(HC.Range("cn" & Target.Row + EstrategiaFilaBarra), "00") & Format(HC.Range("cq" & Target.Row + EstrategiaFilaBarra), "00") & Format(HC.Range("cn" & Target.Row + EstrategiaFilaBarra), "00") & Format(HC.Range("cq" & Target.Row + EstrategiaFilaBarra), "00")
            Else
                CodeF = ""
            End If
            HC.Cells(Target.Row + EstrategiaFilaBarra, Target.Column + 88) = CodeF
        End If
        VerEstrategias
        Application.ScreenUpdating = True
    End If
Application.EnableEvents = True
End Sub
Sub Comprobaciones()
'Mensaje de recordatorio de guardar y actualizar
If Now() > HCON.Range("cw7") + 1 / 24 And HCON.Range("cx7") = True Then
    HC.Shapes("RecuerdaGuardar").Visible = msoCTrue
End If
If Now() > HCON.Range("cw9") + 60 = True Then
    HC.Shapes("RecuerdaActualizar").Visible = msoCTrue
End If
'Advertencia cuadrante sin uso
If HCON.Range("h313") = 0 And HC.Range("bh3") = True And ActiveCell.Column > 12 Then
    msg = MsgBox("No hay ninguna definicion de servicio. Puedes crearla en CATALOGOS/SERVICIOS (Icono superior izquiera).", vbCritical, "ALIMENTAR CUADRANTE")
    ActiveCell.ClearContents
End If
'Advertencia sin mes seleccionado
If HC.Range("ba4") = "" And HC.Range("bh3") = True Then
    msg = MsgBox("Primero tienes que seleccionar un mes", vbExclamation, "No procede")
    ActiveCell.ClearContents
End If
End Sub
Sub Cambiar_Servicio(fila)
If Application.Calculation = xlCalculationAutomatic Then Application.Calculation = xlCalculationManual
On Error Resume Next
'Application.ScreenUpdating = False
If HC.Range("cj" & fila).Value <> "NO" And HC.Range("h" & fila).Value <> "" Then
    'PERSONA ACTIVA
    'If fila <> HC.Range("I328").Value Then ' Actualiza Fila
    HC.Range("I328") = fila
    HC.Range("I329") = HC.Range("CJ" & fila)
    HC.Range("I330") = HC.Range("CP" & fila)
    'End If
    FilaAnterior = Application.WorksheetFunction.Match(HC.Range("cp" & fila), HBDC.Range("cd" & HC.Range("ba8") - 500 & ":cd" & HC.Range("ba8") - 200), 0) + HC.Range("ba8") - 501 ' FILA TIP MES ANTERIOR
    If HC.Range("ay1") = "VALIDADO" Then fval = Application.WorksheetFunction.Match(HC.Range("cp" & fila), HVAL.Range("cd" & HC.Range("ay5") & ":cd" & HC.Range("ay6")), 0) + HC.Range("ay5") - 1 Else fval = "" ' FILA TIP validacion
    HC.Range("DK" & fila) = FilaAnterior ' FILA TIP MES ANTERIOR
    HC.Range("DL" & fila) = HBDC.Cells(FilaAnterior, HC.Range("bd9") + 38) ' DATO ANTERIOR
    HC.Calculate
    'PERMANENTES CALCULADOS
    If HC.Range("cs12") = 111 Then ' Contar servicios
        HC.Range("dg" & fila) = 0
        For s = 1 To 5
            If HC.Range("cs" & s + 5) <> "" Then
                HC.Range("DG" & fila) = HC.Range("DG" & fila) + Application.WorksheetFunction.CountIf(HC.Range("m" & fila & ":au" & fila), HC.Range("cs" & s + 5))
                HC.Range("DG" & fila) = HC.Range("DG" & fila) + Application.WorksheetFunction.CountIf(HC.Range("m" & fila & ":au" & fila), HC.Range("cs" & s + 5) & Chr(10) & "*")
                HC.Range("DG" & fila) = HC.Range("DG" & fila) + Application.WorksheetFunction.CountIf(HC.Range("m" & fila & ":au" & fila), "*" & Chr(10) & HC.Range("cs" & s + 5))
            End If
        Next
        HC.Range("DG" & fila) = HC.Range("DG" & fila) + HC.Range("ds" & fila)
    End If
    If HC.Range("cs12") = 124 Then ' Dias sin servicios
        HC.Range("dt" & fila).ClearContents
        For s = 1 To 5
            If HC.Range("cs" & s + 5) <> "" Then
                For dsin = HC.Range("bd6") + 12 To 13 Step -1
                    If HC.Cells(fila, dsin) = HC.Range("cs" & s + 5) Or InStr(HC.Cells(fila, dsin), Chr(10) & HC.Range("cs" & s + 5)) > 0 Or InStr(HC.Cells(fila, dsin), HC.Range("cs" & s + 5) & Chr(10)) > 0 Then
                        If HC.Range("bd6") - dsin + 12 < HC.Range("dt" & fila) Or HC.Range("dt" & fila) = "" Then HC.Range("dt" & fila) = HC.Range("bd6") - dsin + 12
                        Exit For
                    End If
                Next
            End If
        Next
        If HC.Range("dt" & fila) = "" And HC.Range("ds" & fila) = "" Then
            HC.Range("dt" & fila) = "NO"
        ElseIf HC.Range("dt" & fila) = "" Then
            HC.Range("dt" & fila) = HC.Range("ds" & fila)
        End If
    End If
    
    
    HC.Range("DH" & fila) = HC.Range("AW411") 'H/HREF
    HC.Range("DO" & fila) = HC.Range("AW414") 'NOMBRE UNICO
    'Arreglar celdas
    With HC.Range("M" & fila & ":au" & fila)
        .Interior.Pattern = xlPatternNone
        .Interior.PatternColorIndex = 0
    End With
    If HC.Range("cj" & fila).Value <> "MANUAL" Then
        HC.Range("f" & fila & ":j" & fila).Interior.ColorIndex = 2
        HC.Range("g" & fila & ":j" & fila).Font.ColorIndex = 10
        HC.Range("f" & fila & ":f" & fila).Font.ColorIndex = 32
    ' CASO NO MANUAL
        'HC.Range("CU" & fila) =
        HC.Range("CV" & fila) = HC.Range("AW363") & "@" & HC.Range("AW362") 'H@H.HREF
        HC.Range("CW" & fila) = HC.Range("Aw364") 'DESVIACION
        HC.Range("DA" & fila) = HC.Range("AW368") 'DCO
        HC.Range("DB" & fila) = HC.Range("AW369") 'DF
        HC.Range("DN" & fila) = HC.Range("AW370") 'M / T / N
        HC.Range("DD" & fila) = HC.Range("AW371") 'DESV. COMPENSATORIO
        HC.Range("DE" & fila) = HC.Range("AW374") 'ASUNTOS PARTICULARES
        HC.Range("DF" & fila) = HC.Range("AW375") 'INDISPOSICIONES
        HC.Range("DM" & fila) = HC.Range("AW386") 'PRODUCTIVIDAD
        HC.Range("ch" & fila) = HC.Range("aw393") 'Vacaciones
        HC.Range("CX" & fila) = HC.Range("AW365") 'SERVICIOS FESTIVOS
        HC.Range("CY" & fila) = HC.Range("AW366") 'SERVICIOS NOCTURNOS
        HC.Range("CZ" & fila) = HC.Range("AW367") 'DSA
        HC.Range("DI" & fila) = HC.Range("ay369") 'Festivos quitando PSS y PNAV
        'HC.Range("DU" & fila) = HC.Range("aw390") 'Desviacion horas presenciales
        If HC.Range("BG12") = 2 Then ' DSA RELATIVO O NO
            HC.Range("DJ" & fila) = HC.Range("AZ367") 'DAS Relativo
            HC.Range("DP" & fila) = HC.Range("AZ365") 'Festivos
            HC.Range("DQ" & fila) = HC.Range("AZ366") 'Nocturnos
        Else
            HC.Range("DJ" & fila) = HC.Range("AW367") 'DAS Relativo
            HC.Range("DP" & fila) = HC.Range("Ay365") 'Festivos
            HC.Range("DQ" & fila) = HC.Range("Ay366") 'Nocturnos
        End If
        '------COMENTARIOS
        'ALERTAS
        If HC.Range("aw364") < -HC.Range("bo4") Or HC.Range("aw364") > HC.Range("bo3") Then Alerta = Alerta & " - LA DESVIACION ES MUY ALTA." & vbCrLf ' Sobre las horas presenciales
        If HC.Range("aw338") > 0 Then Alerta = Alerta & " - HORAS SUPERPUESTAS." & vbCrLf
        If HC.Range("ay338") > 0 Then Alerta = Alerta & " - CODIGO NO RECONOCIDO." & vbCrLf
        If HC.Range("az338") > 0 Then Alerta = Alerta & " - INICIO O FIN DE VACACIONES INCORRECTO." & vbCrLf
        If HC.Range("aw396") > 0 Then Alerta = Alerta & " - TIENE MAS DE 3 DIAS POR INDISPOSICION MEDICA CONSECUTIVOS." & vbCrLf
        If HC.Range("AW335") > 2 Then Alerta = Alerta & " - NO SE PUEDEN PONER MAS DE 2 DESCANSOS SINGULARIZADOS EN UN PERIODO DE REFERENCIA." & vbCrLf
        If HC.Range("AW326") > 0 And HC.Range("AW367") > 0 And HC.Range("AW335") < 2 Then Alerta = Alerta & " - FALTA ALGUN DESCANSO SINGULARIZADO POR NOMBRAR. " & vbCrLf
        If HC.Range("AW367") < 0 Then Alerta = Alerta & " - TIENE ALGUN DESCANSO SINGULARIZADO QUE NO LE CORRESPONDE." & vbCrLf
        If HC.Range("Ay369") < 0 Then Alerta = Alerta & " - TIENE ALGUN DESCANSO POR DIA FESTIVO NO ADQUIRIDO." & vbCrLf
        If HC.Range("AW368") < 0 Then Alerta = Alerta & " - TIENE ALGUN DESCANSO COMPENSATORIO NO ADQUIRIDO." & vbCrLf
        If HC.Range("aw394") + HC.Range("aw391") > Int(HC.Range("aw405") / 2) Then Alerta = Alerta & " - MAS DE LA MITAD DE LOS DESCANSOS DIARIOS SON INFERIORES A 11 HORAS"
        If HC.Range("ax375") > 4 Then Alerta = Alerta & " - SUPERA EL MAXIMO DE 4 DIAS POR INDISPOSICION MEDICA EN A|fffd|O NATURAL." & vbCrLf
        If HC.Range("CP" & fila).Value = "" Then Alerta = " - NO SE HA DEFINIDO EL TIP PARA ESTA PERSONA." & vbCrLf
        If HC.Range("aw346") = "NO" Then
            Alerta = " - NO EXISTEN DATOS ANTERIORES PARA ESTA PERSONA / TIP."
            HC.Range("g" & fila & ":j" & fila).Font.ColorIndex = 3
        End If
        'ADVERTENCIAS
        If HC.Range("aw364") < -HC.Range("bo2") Or HC.Range("aw364") > HC.Range("bo1") Then ADVERTENCIA = ADVERTENCIA & " - LA DESVIACION ES ALTA." & vbCrLf ' Sobre las horas presenciales
        If HC.Range("aw391") > 0 Then ADVERTENCIA = ADVERTENCIA & " - ALGUN DESCANSO DIARIO NO ES CORRECTO." & vbCrLf
        If HC.Range("ay369") > 0 Then ADVERTENCIA = ADVERTENCIA & " - FALTA NOMBRAR ALGUN DESCANSO POR DIA FESTIVO." & vbCrLf
        If HC.Range("aW397") = "E" Then ADVERTENCIA = ADVERTENCIA & " - ALGUN DESCANSO POR DIA FESTIVO SE HA PLANIFICADO ANTES DE PRODUCIRSE EL FESTIVO." & vbCrLf
        If HC.Range("aw368") > 0 Then ADVERTENCIA = ADVERTENCIA & " - FALTA NOMBRAR ALGUN DESCANSO COMPENSATORIO." & vbCrLf
        If HC.Range("aw401") > 0 And HC.Range("bh4") = True Then ADVERTENCIA = ADVERTENCIA & " - SE DEBE FACILITAR LA PROLONGACION DEL PERIODO QUE NO SE PRESTE SERVICIO." & vbCrLf
        If HC.Range("aw341") > 0 Then ADVERTENCIA = ADVERTENCIA & " - LA PLANIFICACION NO ESTA COMPLETA."
        '------SEMAFORO
        HC.Range("e" & fila).ClearComments
        HC.Range("e" & fila).AddComment (".")
        With HC.Range("E" & fila).Comment.Shape
            .Placement = xlMove
            .Height = 80
            .Width = 270
            If Alerta <> "" Then ' Con Alertas graves
                HC.Range("e" & fila).Interior.ColorIndex = 53
                HC.Range("e" & fila).Font.ColorIndex = 53
                HC.Range("e" & fila) = "."
                HC.Range("E" & fila).Comment.Text Text:=Alerta
                .Fill.ForeColor.RGB = RGB(255, 135, 0)
                .Placement = xlMove
                .Height = 80
                .Width = 270
            ElseIf ADVERTENCIA <> "" Then ' Con advertencias
                Alerta = ADVERTENCIA
                HC.Range("e" & fila).Interior.ColorIndex = 6
                HC.Range("e" & fila).Font.ColorIndex = 6
                HC.Range("e" & fila) = ","
                HC.Range("E" & fila).Comment.Text Text:=Alerta
                .Fill.ForeColor.RGB = RGB(255, 255, 0)
                .Placement = xlMove
                .Height = 60
                .Width = 270
            Else ' Correcto
                Alerta = "CORRECTO"
                HC.Range("e" & fila).Interior.ColorIndex = 4
                HC.Range("e" & fila).Font.ColorIndex = 4
                HC.Range("e" & fila) = ""
                HC.Range("E" & fila).Comment.Text Text:=Alerta
                .Fill.ForeColor.RGB = RGB(0, 255, 0)
                .Placement = xlMove
                .Height = 25
                .Width = 135
            End If
        End With
        HC.Range("e" & fila).Comment.Shape.TextFrame.Characters().Font.Bold = True
        HC.Range("f" & fila).ClearComments
        If HC.Range("CP" & fila).Value = "" Then 'SI FALTA TIP, COMENTARIO QUE LO DIGA
            comentairo = _
            vbCrLf & HC.Range("DO" & fila) & vbCrLf & vbCrLf _
            & "- FALTA TIP ----------------" & vbCrLf _
            & "        *PARA MOSTRAR DATOS SOBRE DESCANSOS,HORAS Y PRODUCTIVIDAD ES NECESARIO DEFINIR EL TIP DEL EFECTIVO EN LA COLUMNA CORRESPONDIENTE"
            HC.Range("f" & fila).AddComment (comentairo)
            With HC.Range("f" & fila).Comment.Shape
                .Placement = xlMove
                .Fill.ForeColor.RGB = RGB(204, 100, 100)
                .Height = 100
                .Width = 220
                .TextFrame.Characters().Font.Bold = True
            End With
        Else 'TIP CORRECTO
            'Labels
            TDescansos = "---------DESCANSOS-(Planificados / Adquiridos)---"
            THORAS = "-HORAS:--Periodo-(Este mes)-[presenciales]-"
            TSERVICIOS = "----------------------------------SERVICIOS"
            TOTROS = "-------------------------------------OTROS"
            TPRODUCTIVIDAD = "-------------------------------PRODUCTIVIDAD"
            LREGIMEN = "        REGIMEN :   "
            LFESTIVOS = "- POR DIA FESTIVO (DF) :   "
            ldsa = "- SING. ADICIONAL (DSA) :   "
            LDSJ = "- SUPERACION DE JORNADA (DSJ) :   "
            LMENOS11 = "- DESCANSOS DIARIOS < 11 h :    "
            LDESV = "- H. DESVIACION :  "
            LDESVPRE = " [" & Format(HC.Range("AW390"), "+0.# h.;-0.# h.;0 h.") & "]"
            LHREF = "   - H. REFERENCIA : "
            LHREFPRE = " [" & Format(HC.Range("AW389"), "0.# h.") & "]"
            LHEFE = "   - H. EFECTIVAS :   "
            LHREAL = "-Reales: "
            LHACTI = "-Actividad: "
            LHLOC = "-Localizaci|fffd|n: "
            'LANOTACION = "" '   (*)  horas presenciales (no es determinante)"
            LMTN = "- M / T / N :     "
            LSERVFESTIVOS = "- FESTIVOS :      "
            LSERVNOCTURNOS = "- NOCTURNOS :  "
            LSERVFESTIVOS2 = "     ( " & HC.Range("AY365") & " ) Fes. Totales"
            LSERVNOCTURNOS2 = "     ( " & HC.Range("AY366") & " ) Noc. Totales"
            LTRANOCT = "- NOCTURNOS ANUALES :  "
            LANOTACION2 = "  (*) Actuales + Anteriores (SINGULARIZADOS)"
            LAREA = "- |fffd|REA:  "
            LAP = "- A. PARTICULARES :   "
            LVAC = "- CREDITO VACACIONES :  "
            LGRUPO = "            - GRUPO :    "
            LIND = "- INDISPOSICIONES :   "
            LTEL = "- TEL|fffd|FONO :    "
            LEGRICRES = "- ERG  ;  ICRES :   "
            LICREMCREX = "- ICREM  ;  CREX :   "
            LTOTAL = "- TOTAL :   "
            'Define Comentario
            comentairo = _
            HC.Range("DO" & fila) & vbCrLf _
            & LREGIMEN & UCase(HC.Range("cr" & fila)) & " (" & HC.Range("i342") & ")" & vbCrLf & vbCrLf _
            & TDescansos & vbCrLf _
            & LFESTIVOS & HC.Range("AW336") & " / " & HC.Range("Ay369") + HC.Range("AW336") & vbCrLf _
            & ldsa & HC.Range("AW335") & " / " & HC.Range("AW335") + HC.Range("AW367") & vbCrLf _
            & LDSJ & HC.Range("AW337") & " / " & HC.Range("AW368") + HC.Range("AW337") & vbCrLf _
            & LMENOS11 & HC.Range("aw394") + HC.Range("aw391") & "    Max: ( " & Int(HC.Range("aw405") / 2) & " )" & vbCrLf _
            & THORAS & vbCrLf & LDESV & Format(HC.Range("aw364"), "+0.# h.;-0.# h.;0 h.") & HC.Range("ay364") & LDESVPRE & vbCrLf _
            & LHREF & Format(HC.Range("aw362"), "0.# h.") & HC.Range("ay362") & LHREFPRE & vbCrLf _
            & LHEFE & HC.Range("ay330") & vbCrLf _
            & LHREAL & HC.Range("aw331") & LHACTI & HC.Range("aw332") & LHLOC & HC.Range("aw333") & vbCrLf _
            & TSERVICIOS & vbCrLf _
            & LMTN & HC.Range("AW370") & vbCrLf _
            & LSERVFESTIVOS & HC.Range("AW328") & LSERVFESTIVOS2 & vbCrLf _
            & LSERVNOCTURNOS & HC.Range("AW329") & LSERVNOCTURNOS2 & vbCrLf _
            & LTRANOCT & HC.Range("ay375") & vbCrLf & LANOTACION2 & vbCrLf _
            & TOTROS & vbCrLf _
            & LAREA & HC.Range("cl" & fila) & LGRUPO & HC.Range("dc" & fila) & vbCrLf _
            & LTEL & HC.Range("cq" & fila) & vbCrLf _
            & LAP & HC.Range("AW374") & vbCrLf & LVAC & HC.Range("aw393") & vbCrLf & LIND & HC.Range("AX375") & vbCrLf _
            & TPRODUCTIVIDAD & vbCrLf _
            & LEGRICRES & Format(HC.Range("Ay380"), "0.00 |fffd|") & "   ;   " & Format(HC.Range("AW382"), "0.00 |fffd|") & vbCrLf & LICREMCREX & Format(HC.Range("AW384"), "0.00 |fffd|") & "   ;   " & Format(HC.Range("AW385"), "0.00 |fffd|") & vbCrLf & LTOTAL & Format(HC.Range("AW386"), "0.00 |fffd|")
            'Configura comentario
            HC.Range("f" & fila).AddComment (comentairo)
            'Formatea Comentario
            With HC.Range("f" & fila).Comment.Shape
                .Placement = xlMove
                .Fill.ForeColor.RGB = RGB(50, 144, 85)
                If ActiveWindow.Zoom < 70 Then
                    .Height = 420
                ElseIf ActiveWindow.Zoom < 80 Then
                    .Height = 400
                ElseIf ActiveWindow.Zoom < 90 Then
                    .Height = 380
                Else
                    .Height = 360
                End If
                .Width = 245
            End With
            With HC.Range("f" & fila).Comment.Shape.TextFrame
                .Characters().Font.Bold = True 'Todo en negrita
                .Characters().Font.ColorIndex = 20
                .Characters(1, InStr(1, comentairo, Chr(10))).Font.ColorIndex = 4
                .Characters(InStr(1, comentairo, TDescansos), Len(TDescansos)).Font.ColorIndex = 43 ' Titulo descansos
                .Characters(InStr(1, comentairo, THORAS), Len(THORAS)).Font.ColorIndex = 43 ' Titulos Horas
                .Characters(InStr(1, comentairo, TSERVICIOS), Len(TSERVICIOS)).Font.ColorIndex = 43 ' Titulos servicios
                .Characters(InStr(1, comentairo, TOTROS), Len(TOTROS)).Font.ColorIndex = 43  ' Titulos otros
                .Characters(InStr(1, comentairo, TPRODUCTIVIDAD), Len(TPRODUCTIVIDAD)).Font.ColorIndex = 43  ' Titulos productividad
                .Characters(InStr(1, comentairo, LREGIMEN), Len(LREGIMEN)).Font.ColorIndex = 28
                .Characters(InStr(1, comentairo, LFESTIVOS), Len(LFESTIVOS)).Font.ColorIndex = 49
                .Characters(InStr(1, comentairo, ldsa), Len(ldsa)).Font.ColorIndex = 49
                .Characters(InStr(1, comentairo, LDSJ), Len(LDSJ)).Font.ColorIndex = 49
                .Characters(InStr(1, comentairo, LMENOS11), Len(LMENOS11)).Font.ColorIndex = 49
                .Characters(InStr(1, comentairo, LDESV), Len(LDESV)).Font.ColorIndex = 49
                .Characters(InStr(1, comentairo, LDESVPRE), Len(LDESVPRE)).Font.ColorIndex = 6
                .Characters(InStr(1, comentairo, LHREF), Len(LHREF)).Font.ColorIndex = 49
                .Characters(InStr(1, comentairo, LHREFPRE), Len(LHREFPRE)).Font.ColorIndex = 6
                .Characters(InStr(1, comentairo, LHEFE), Len(LHEFE)).Font.ColorIndex = 49
                .Characters(InStr(1, comentairo, LHREAL), Len(LHREAL)).Font.ColorIndex = 55
                .Characters(InStr(1, comentairo, LHACTI), Len(LHACTI)).Font.ColorIndex = 55
                .Characters(InStr(1, comentairo, LHLOC), Len(LHLOC)).Font.ColorIndex = 55
                '.Characters(InStr(1, comentairo, LANOTACION), Len(LANOTACION)).Font.ColorIndex = 6
                .Characters(InStr(1, comentairo, LMTN), Len(LMTN)).Font.ColorIndex = 49
                .Characters(InStr(1, comentairo, LSERVFESTIVOS), Len(LSERVFESTIVOS)).Font.ColorIndex = 49
                .Characters(InStr(1, comentairo, LSERVNOCTURNOS), Len(LSERVNOCTURNOS)).Font.ColorIndex = 49
                .Characters(InStr(1, comentairo, LSERVFESTIVOS2), Len(LSERVFESTIVOS2)).Font.ColorIndex = 45
                .Characters(InStr(1, comentairo, LSERVNOCTURNOS2), Len(LSERVNOCTURNOS2)).Font.ColorIndex = 45
                .Characters(InStr(1, comentairo, LTRANOCT), Len(LTRANOCT)).Font.ColorIndex = 49
                .Characters(InStr(1, comentairo, LANOTACION2), Len(LANOTACION2)).Font.ColorIndex = 45
                .Characters(InStr(1, comentairo, LAREA), Len(LAREA)).Font.ColorIndex = 49
                .Characters(InStr(1, comentairo, LAP), Len(LAP)).Font.ColorIndex = 49
                .Characters(InStr(1, comentairo, LVAC), Len(LVAC)).Font.ColorIndex = 49
                .Characters(InStr(1, comentairo, LGRUPO), Len(LGRUPO)).Font.ColorIndex = 49
                .Characters(InStr(1, comentairo, LIND), Len(LIND)).Font.ColorIndex = 49
                .Characters(InStr(1, comentairo, LTEL), Len(LTEL)).Font.ColorIndex = 49
                .Characters(InStr(1, comentairo, LEGRICRES), Len(LEGRICRES)).Font.ColorIndex = 49
                .Characters(InStr(1, comentairo, LICREMCREX), Len(LICREMCREX)).Font.ColorIndex = 49
                .Characters(InStr(1, comentairo, LTOTAL), Len(LTOTAL)).Font.ColorIndex = 4
                .Characters(1, InStr(1, comentairo, Chr(10))).Font.Size = 12 ' Nombre mas grande
            End With
        End If
        With HC.Range("k" & fila & ":au" & fila)
            .Interior.ColorIndex = 2
            .Font.ColorIndex = 1
        End With
        
        'Empezamos por cada celda
        For Colorear = 11 To 47
        aux = HC.Cells(fila, Colorear).Offset(0, 38)
            'LIMPIAR
            If Not HC.Cells(fila, Colorear).Comment Is Nothing And Colorear > 12 Then
                HC.Cells(fila, Colorear).Comment.Delete
            End If
            If aux = "" And Colorear > 12 Then
                GoTo SinParametros
            'Servicios Autoplanificados
            ElseIf HC.Cells(fila, Colorear + 38) = "@A" And Colorear > 12 Then
                With HC.Cells(fila, Colorear)
                    .Interior.Pattern = xlPatternChecker
                    .Interior.PatternColorIndex = 4
                End With
                GoTo ColorNormal
            End If
            'PARAMETROS
            If Colorear > 12 Then
            'COMENTARIOS Automaticos y manuales
            cmnt = ""
            If HC.Cells(361, Colorear) <> "" Or HC.Cells(370, Colorear) <> 0 Or InStr(aux, "@HF") Or InStr(aux, "@HI") Then
                If HC.Cells(370, Colorear) = 1 Then cmnt = "NO MA|fffd|ANA" & vbCrLf
                If HC.Cells(370, Colorear) = 2 Then cmnt = "NO TARDE" & vbCrLf
                If HC.Cells(370, Colorear) = 3 Then cmnt = "NO NOCHE" & vbCrLf
                If HC.Cells(370, Colorear) = 4 Then cmnt = "NO SERVICIO" & vbCrLf
                If InStr(aux, "@HI1") > 0 Then
                    cmnt = cmnt & "Inicio a las " & Mid(aux, InStr(aux, "@HI1") + 4, 5) & vbCrLf
                End If
                If InStr(aux, "@HF1") > 0 Then
                    cmnt = cmnt & "Finalizado a las " & Mid(aux, InStr(aux, "@HF1") + 4, 5) & vbCrLf
                End If
                If InStr(aux, "@HI2") > 0 Then
                    cmnt = cmnt & "Inicio a las " & Mid(aux, InStr(aux, "@HI2") + 4, 5) & vbCrLf
                End If
                If InStr(aux, "@HF2") > 0 Then
                    cmnt = cmnt & "Finalizado a las " & Mid(aux, InStr(aux, "@HF2") + 4, 5) & vbCrLf
                End If
                cmnt = cmnt & HC.Cells(361, Colorear).Text 'Comentario Manual
                HC.Cells(fila, Colorear).AddComment (cmnt)
                With HC.Cells(fila, Colorear).Comment.Shape
                    .Placement = xlMove
                    .TextFrame.AutoSize = True
                End With
            End If
            If HC.Cells(365, Colorear) = 1 Then 'CUMPLIMENTADO
                With HC.Cells(fila, Colorear)
                    .Interior.Pattern = xlPatternCrissCross
                    .Interior.PatternColorIndex = 4
                End With
            ElseIf HC.Cells(344, Colorear) = 1 Then 'Sustitucion
                With HC.Cells(fila, Colorear)
                    .Interior.Pattern = xlPatternLightDown
                    .Interior.PatternColorIndex = 46
                End With
            ElseIf HC.Cells(344, Colorear) = 2 Then  'Sucesion
                With HC.Cells(fila, Colorear)
                    .Interior.Pattern = xlPatternHorizontal
                    .Interior.PatternColorIndex = 46
                End With
            ElseIf HC.Cells(343, Colorear) = 1 Then  'Modificacion descanso semanal
                With HC.Cells(fila, Colorear)
                    .Interior.Pattern = xlPatternGray16
                End With
            ElseIf HC.Cells(343, Colorear) = 2 Then 'Modificacion Servicio
                With HC.Cells(fila, Colorear)
                    .Interior.Pattern = xlPatternChecker
                End With
            ElseIf HC.Cells(342, Colorear) <> 100 Then 'Reduccion
                With HC.Cells(fila, Colorear)
                    .Interior.Pattern = xlPatternGray8
                End With
            Else
                With HC.Cells(fila, Colorear)
                    .Interior.Pattern = xlPatternSolid
                    .Interior.PatternColorIndex = 0
                End With
            End If
            End If
            
SinParametros:
            'VALIDACION
            If fval <> "" And Colorear > 12 Then
                If HC.Cells(fila, Colorear) <> HVAL.Cells(fval, Colorear - 12) Then
                    With HC.Cells(fila, Colorear)
                        .Interior.Pattern = xlPatternChecker
                        .Interior.PatternColorIndex = 3
                    End With
                    HC.Cells(376, Colorear) = 1
                Else
                    HC.Cells(376, Colorear) = 0
                End If
            Else
                HC.Cells(376, Colorear) = 0
            End If
            If HC.Cells(331, Colorear) = "" Then
                With HC.Cells(fila, Colorear)
                    .Interior.ColorIndex = 2
                    .Font.ColorIndex = 1
                End With
                If aux = "" Then GoTo ya
            End If
            'CASO COLOREADO POR EL USUARIO
            If HC.Cells(374, Colorear) <> 0 Then
                HC.Cells(fila, Colorear).Interior.Color = Val(HC.Cells(374, Colorear))
                GoTo ya
            End If
            'CASO PETICIONES DE NO SERVICIO
            If HC.Cells(370, Colorear) <> 0 Then HC.Cells(fila, Colorear).Interior.ColorIndex = 19
            '-----colores especiales
            especial = 0
            If InStr(1, HC.Cells(fila, Colorear), Chr(10)) < 1 Then
                If HCON.Range("CR" & 4 + Application.WorksheetFunction.Match(HC.Cells(329, Colorear), HCON.Range("k5:k204"), 0)) <> "" Then
                    With HC.Cells(fila, Colorear)
                        .Interior.Color = HCON.Range("CR" & 4 + Application.WorksheetFunction.Match(HC.Cells(329, Colorear), HCON.Range("k5:k204"), 0)).Value
                        .Font.Color = HCON.Range("CS" & 4 + Application.WorksheetFunction.Match(HC.Cells(329, Colorear), HCON.Range("k5:k204"), 0))
                    End With
                    especial = 1
                End If
            Else
                If HCON.Range("CR" & 4 + Application.WorksheetFunction.Match(HC.Cells(329, Colorear), HCON.Range("k5:k204"), 0)) <> "" Then
                    HC.Cells(fila, Colorear).Characters(InStr(1, HC.Cells(fila, Colorear), HC.Cells(329, Colorear)), Len(HC.Cells(329, Colorear))).Font.Color = HCON.Range("CR" & 4 + Application.WorksheetFunction.Match(HC.Cells(329, Colorear), HCON.Range("k5:k204"), 0)).Value
                    especial = 1
                End If
                If HCON.Range("CR" & 4 + Application.WorksheetFunction.Match(HC.Cells(330, Colorear), HCON.Range("k5:k204"), 0)) <> "" Then
                    HC.Cells(fila, Colorear).Characters(InStr(1, HC.Cells(fila, Colorear), HC.Cells(330, Colorear)), Len(HC.Cells(330, Colorear))).Font.Color = HCON.Range("CR" & 4 + Application.WorksheetFunction.Match(HC.Cells(330, Colorear), HCON.Range("k5:k204"), 0)).Value
                    especial = 1
                End If
            End If
ColorNormal:
            If especial = 1 Then GoTo ya
            'CASO ACTIVIDAD
            If HC.Cells(331, Colorear) = "01" Then
                With HC.Cells(fila, Colorear)
                    .Interior.ColorIndex = 2
                    .Font.ColorIndex = 1
                End With
            'CASO COMISION B y C
            ElseIf HC.Cells(331, Colorear) = "03" Then
                With HC.Cells(fila, Colorear)
                    .Interior.ColorIndex = 22
                    .Font.ColorIndex = 1
                End With
            'CASO DESCANSO O DESCANSO DIARIO SALIENTE
            ElseIf HC.Cells(331, Colorear) = "04" Or HC.Cells(331, Colorear) = "09" Then
                With HC.Cells(fila, Colorear)
                    .Interior.ColorIndex = 39
                    .Font.ColorIndex = 1
                End With
            'CASO DESCANSO SINGULARIZADO ADICIONAL
            ElseIf HC.Cells(331, Colorear) = "05" Then
                With HC.Cells(fila, Colorear)
                    .Interior.ColorIndex = 39
                    .Font.ColorIndex = 2
                End With
            'CASO VACACIONES
            ElseIf HC.Cells(331, Colorear) = "10" Then
                If HC.Cells(373, Colorear) = 1 Then
                    With HC.Cells(fila, Colorear) 'Color si credito
                        .Interior.ColorIndex = 23
                        .Font.ColorIndex = 2
                    End With
                ElseIf HC.Cells(356, Colorear) <> 0 Then
                    With HC.Cells(fila, Colorear) 'Color si credito
                        .Interior.ColorIndex = 23
                        .Font.ColorIndex = 4
                    End With
                Else
                    With HC.Cells(fila, Colorear) 'Color si credito
                        .Interior.ColorIndex = 23
                        .Font.ColorIndex = 48
                    End With
                End If
            'CASO ASUNTOS PARTICULARES
            ElseIf HC.Cells(331, Colorear) = "12" Then
                With HC.Cells(fila, Colorear)
                    .Interior.ColorIndex = 23
                    .Font.ColorIndex = 8
                End With
            'CASO PERMISO URGENTE
            ElseIf HC.Cells(331, Colorear) = "13" Then
                With HC.Cells(fila, Colorear)
                    .Interior.ColorIndex = 23
                    .Font.ColorIndex = 6
                End With
                If HC.Cells(322, Colorear) = "F" Or HC.Cells(12, Colorear) = "S" Or HC.Cells(12, Colorear) = "D" Then
                    With HC.Cells(fila, Colorear)
                        .Interior.ColorIndex = 23
                        .Font.ColorIndex = 4
                    End With
                End If
            'CASO DESCANSO POR FESTIVO
            ElseIf HC.Cells(331, Colorear) = "07" Then
                With HC.Cells(fila, Colorear)
                    .Interior.ColorIndex = 39
                    .Font.ColorIndex = 3
                End With
            'CASO DESCANSO POR DCO
            ElseIf HC.Cells(331, Colorear) = "06" Then
                With HC.Cells(fila, Colorear)
                    .Interior.ColorIndex = 39
                    .Font.ColorIndex = 2
                End With
            'CASO LOCALIZACION
            ElseIf HC.Cells(331, Colorear) = "02" Then
                With HC.Cells(fila, Colorear)
                    .Interior.ColorIndex = 2
                    .Font.ColorIndex = 1
                End With
             'CASO DESCANSO NO DEDUCIBLE
            ElseIf HC.Cells(331, Colorear) = "08" Then
                With HC.Cells(fila, Colorear)
                    .Interior.ColorIndex = 39
                    .Font.ColorIndex = 1
                End With
             'CASO NO PRESENTE
            ElseIf HC.Cells(331, Colorear) = "17" Then
                With HC.Cells(fila, Colorear)
                    .Interior.ColorIndex = 15
                    .Font.ColorIndex = 16
                End With
             'CASO INDISPOSICION
            ElseIf HC.Cells(331, Colorear) = "15" Then
                With HC.Cells(fila, Colorear)
                    .Interior.ColorIndex = 33
                    .Font.ColorIndex = 45
                End With
             'CASO BAJA
            ElseIf HC.Cells(331, Colorear) = "14" Then
                With HC.Cells(fila, Colorear)
                    .Interior.ColorIndex = 33
                    .Font.ColorIndex = 5
                End With
            'CASO COMISION DE SERVICIO d Y e
            ElseIf HC.Cells(331, Colorear) = "16" Then
                With HC.Cells(fila, Colorear)
                    .Interior.ColorIndex = 5
                    .Font.ColorIndex = 2
                End With
            'CASO P. NAVIDAD O SEMANA SANTA
            ElseIf HC.Cells(331, Colorear) = "11" Then
                With HC.Cells(fila, Colorear)
                    .Interior.ColorIndex = 23
                    .Font.ColorIndex = 22
                End With
            End If
            'ALINEACION ESPECIAL
            If HC.Range("bg1") = True Then
                If Application.WorksheetFunction.CountIf(HCON.Range("k515:K714"), HC.Cells(fila, Colorear)) > 0 Then
                    HC.Cells(fila, Colorear).HorizontalAlignment = xlLeft
                ElseIf Application.WorksheetFunction.CountIf(HCON.Range("k722:K921"), HC.Cells(fila, Colorear)) > 0 Then
                    HC.Cells(fila, Colorear).HorizontalAlignment = xlCenter
                ElseIf Application.WorksheetFunction.CountIf(HCON.Range("k929:K1128"), HC.Cells(fila, Colorear)) > 0 Then
                    HC.Cells(fila, Colorear).HorizontalAlignment = xlRight
                Else
                    HC.Cells(fila, Colorear).HorizontalAlignment = xlCenter
                End If
            End If
ya:
                     
            'CASO DESCANSO DIARIO ORGANIZATIVO
            If HC.Range("bh2") = True And (HC.Cells(371, Colorear) = "O" Or HC.Cells(372, Colorear) = "O") Then
                With HC.Cells(fila, Colorear)
                    .Interior.ColorIndex = 19
                    .Font.ColorIndex = 1
                End With
            End If
            'CASO SIN DESCANSO DIARIO
            If (HC.Cells(371, Colorear) = "A" Or HC.Cells(372, Colorear) = "A") And HC.Range("bh1") = True Then
                With HC.Cells(fila, Colorear)
                    .Interior.ColorIndex = 27
                    .Font.ColorIndex = 3
                End With
            End If
            'CASO DESCANSO ANTES DEL DESCANSO SEMANAL
            If HC.Cells(367, Colorear) = True And HC.Range("bh4") = True Then
                With HC.Cells(fila, Colorear)
                    .Interior.ColorIndex = 27
                    .Font.ColorIndex = 3
                End With
            End If
            'CASO ERROR
            If HC.Cells(345, Colorear) = "E" Or HC.Cells(345, Colorear) = "N" Or HC.Cells(345, Colorear) = "V" Then
                With HC.Cells(fila, Colorear)
                    .Interior.ColorIndex = 3
                    .Font.ColorIndex = 2
                End With
            End If
            If Colorear > 12 And HC.Range("bg4") = True Then
                'Mas errores de nombramiento sin tener
                'Mas DSA
                If HC.Cells(331, Colorear) = "05" Then
                    Tot = Application.CountIf(HC.Range(HC.Cells(331, 13), HC.Cells(331, Colorear)), "05")
                    If Tot > HC.Range("AW335") + HC.Range("AW367") Or Tot > 2 Then
                        With HC.Cells(fila, Colorear)
                            .Interior.ColorIndex = 9
                            .Font.ColorIndex = 27
                        End With
                    End If
                End If
                'Mas DCO
                If HC.Cells(331, Colorear) = "06" Then
                    Tot = Application.CountIf(HC.Range(HC.Cells(331, 13), HC.Cells(331, Colorear)), "06")
                    If Tot > HC.Range("AW368") + HC.Range("AW337") Then
                        With HC.Cells(fila, Colorear)
                            .Interior.ColorIndex = 9
                            .Font.ColorIndex = 27
                        End With
                    End If
                End If
                'Mas DF
                If HC.Cells(331, Colorear) = "07" Then
                    Tot = Application.CountIf(HC.Range(HC.Cells(331, 13), HC.Cells(331, Colorear)), "07")
                    If Tot > HC.Range("Ay369") + HC.Range("AW336") Then
                        With HC.Cells(fila, Colorear)
                            .Interior.ColorIndex = 9
                            .Font.ColorIndex = 27
                        End With
                    End If
                End If
            End If
            'CASO SE PISA UNA PETICION
            If HC.Cells(370, Colorear) <> 0 Then
                If (HC.Cells(370, Colorear) = 1 And HC.Cells(333, Colorear) > 5 / 24 And HC.Cells(333, Colorear) < 12 / 24) Or _
                (HC.Cells(370, Colorear) = 2 And HC.Cells(333, Colorear) > 12 / 24 And HC.Cells(333, Colorear) < 18 / 24) Or _
                (HC.Cells(370, Colorear) = 3 And HC.Cells(333, Colorear) > 19 / 24 And HC.Cells(333, Colorear) < 24 / 1) Or _
                (HC.Cells(370, Colorear) = 3 And HC.Cells(335, Colorear) > 19 / 24 And HC.Cells(335, Colorear) < 24 / 1) Or _
                (HC.Cells(370, Colorear) = 4 And HC.Cells(333, Colorear) <> "") Then
                    With HC.Cells(fila, Colorear)
                    .Interior.ColorIndex = 45
                    .Font.ColorIndex = 2
                    End With
                End If
            End If
            'CASO VACACIONES FIN DE SEMANA CON DS EN SEMANA
            If HC.Cells(375, Colorear) = True Then
                With HC.Cells(fila, Colorear)
                    .Interior.ColorIndex = 45
                    .Font.ColorIndex = 2
                End With
            End If
            'PREVENIR CELDA Y FUENTE CON MISMO COLOR
            If HC.Cells(fila, Colorear).Font.ColorIndex = HC.Cells(fila, Colorear).Interior.ColorIndex Then HC.Cells(fila, Colorear).Font.ColorIndex = HC.Cells(fila, Colorear).Font.ColorIndex + 1
        Next Colorear
        HC.Range("aw416") = Application.WorksheetFunction.Sum(HC.Range("m376:au376").Value)
        HC.Range("DU" & fila) = HC.Range("aw416") 'Validaciones
    ElseIf HC.Range("cj" & fila).Value = "MANUAL" Then
        HC.Range("DM" & fila).ClearContents  'PRODUCTIVIDAD
        With HC.Range("k" & fila & ":au" & fila)
            .Interior.ColorIndex = 40
            .Font.ColorIndex = 16
        End With
        With HC.Range("f" & fila & ":j" & fila)
            .Interior.ColorIndex = 40
            .Font.ColorIndex = 46
        End With
        'HC.Range("DD" & fila) = HC.Range("AW373")
        'Comentario----
        HC.Range("f" & fila).ClearComments
        comentairo = _
        vbCrLf & HC.Range("DO" & fila) & vbCrLf & vbCrLf _
        & "-CALCULO MANUAL-"
        HC.Range("f" & fila).AddComment (comentairo)
        With HC.Range("f" & fila).Comment.Shape
                .Placement = xlMove
                .TextFrame.AutoSize = True
                .Fill.ForeColor.RGB = RGB(255, 204, 150)
                .Height = 60
                .Width = 220
                .TextFrame.Characters().Font.Bold = True
        End With
        HC.Range("e" & fila).Interior.ColorIndex = 40
        HC.Range("E" & fila).ClearComments
        HC.Range("E" & fila).AddComment ("-CALCULO MANUAL-")
        With HC.Range("E" & fila).Comment.Shape
            .Placement = xlMove
            .Fill.ForeColor.RGB = RGB(255, 204, 150)
            .Height = 20
            .Width = 110
            .TextFrame.Characters().Font.Bold = True
        End With
     End If
Else
    If HC.Range("cj" & fila).Value = "NO" Or HC.Range("cj" & fila).Value = "no" Then
        With HC.Range("f" & fila & ":au" & fila)
            .Interior.ColorIndex = 15
            .Font.ColorIndex = 16
        End With
       HC.Range("f" & fila).Font.ColorIndex = 15
       HC.Range("do" & fila) = HC.Range("ck" & fila) & "-" & HC.Range("CM" & fila) & " " & HC.Range("CN" & fila) & " " & HC.Range("CO" & fila)
    Else
        HC.Range("m" & fila & ":au" & fila).Interior.Pattern = xlNone
        With HC.Range("f" & fila & ":j" & fila)
            .Interior.ColorIndex = 2
            .Font.ColorIndex = 10
        End With
        With HC.Range("k" & fila & ":au" & fila)
            .Interior.ColorIndex = 15
            .Font.ColorIndex = 10
        End With
       HC.Range("f" & fila).Font.ColorIndex = 2
    End If
    HC.Range("do" & fila) = ""
    HC.Range("e" & fila).Interior.ColorIndex = 15
    HC.Range("e" & fila).ClearContents
    HC.Range("e" & fila & ":f" & fila).ClearComments
End If
HC.Range("f" & fila) = HC.Cells(fila, HC.Range("cs12"))
'Panel de calculos Extras
If HC.Range("cn10") = 1 Then
    If HC.Range("cn12") <> "" Then HC.Range("a" & fila) = HC.Cells(fila, HC.Range("cn12"))
    If HC.Range("co12") <> "" Then HC.Range("b" & fila) = HC.Cells(fila, HC.Range("co12"))
    If HC.Range("cp12") <> "" Then HC.Range("c" & fila) = HC.Cells(fila, HC.Range("cp12"))
    If HC.Range("cq12") <> "" Then HC.Range("d" & fila) = HC.Cells(fila, HC.Range("cq12"))
End If
'COLOREAR LAS AREAS
If HC.Range("g318") = True Then HC.Range("h" & fila & ":j" & fila).Interior.ColorIndex = Int(Application.WorksheetFunction.VLookup(HC.Range("cl" & fila), HCON.Range("e8:f16"), 2, 0))
'Comprobacion de validacion del cuadrante
If HC.Range("ay1") = "VALIDADO" Then
    HC.Range("du5") = Application.WorksheetFunction.Sum(HC.Range("du14:du313").Value)
    If HC.Range("du5") > 0 Then
        HC.ImgValidacion.Picture = HC.SemAmarillo.Picture
        'HC.LValidacion = "Modificado"
        'HC.LValidacion.ForeColor = RGB(200, 150, 0)
    Else
        HC.ImgValidacion.Picture = HC.Semverde.Picture
        'HC.LValidacion = "VALIDADO"
        'HC.LValidacion.ForeColor = RGB(0, 255, 0)
    End If
End If
If HC.Range("cn10") = 1 Then Actualizaencabezado fila
End Sub
Public Sub Cambiar_Datos(FC, col)
On Error Resume Next
    'Antiguedad
    If HC.Cells(13, col) = "ANTIG|fffd|EDAD" Then
        If IsNumeric(HC.Cells(FC, col).Value) Then
            HC.Range("CI" & FC).Value = HC.Cells(FC, col).Value
        Else
            msg = MsgBox("Solo se aceptan datos numericos para establecer la antiguedad.", vbInformation, "Validaci|fffd|n")
            HC.Cells(FC, col).Value = HC.Range("CI" & FC).Value
        End If
        
    'Activos
    ElseIf HC.Cells(13, col) = "ACTIVOS" Then
        If UCase(HC.Cells(FC, col).Value) = "SI" Or UCase(HC.Cells(FC, col).Value = "NO") Or HC.Cells(FC, col) = "" Then
            Application.ScreenUpdating = False
            HC.Range("CJ" & FC).Value = HC.Cells(FC, col).Value
            Cambiar_Servicio FC
        Else
            msg = MsgBox("Solo se acepta SI o NO para ACTIVAR O DESACTIVAR.", vbInformation, "Validaci|fffd|n")
            HC.Cells(FC, col).Value = HC.Range("Cj" & FC).Value
        End If
        
    'Empleo
    ElseIf HC.Cells(13, col) = "EMPLEO" Then
        HC.Range("CK" & FC).Value = HC.Cells(FC, col).Value
    
    'Area
    ElseIf HC.Cells(13, col) = "AREA" Then
        dato = Application.Match(HC.Cells(FC, col).Value, HC.Range("g319:g" & 319 + HC.Range("f320") - 2), 0)
        If IsError(dato) = False Or HC.Cells(FC, col).Value = "" Then
            Application.ScreenUpdating = False
            HC.Range("CL" & FC).Value = HC.Cells(FC, col).Value
            Cambiar_Servicio FC
            VerEstrategias
        Else
            msg = MsgBox("Indica un Area de las definidas en los catalogos", vbInformation, "Validaci|fffd|n")
            HC.Cells(FC, col).Value = HC.Range("CL" & FC).Value
        End If
    
    'Grupo
    ElseIf HC.Cells(13, col) = "GRUPO" Then
        HC.Range("DC" & FC).Value = HC.Cells(FC, col).Value
    
    'TIP
    ElseIf HC.Cells(13, col) = "TIP" Then
        Application.ScreenUpdating = False
        HC.Range("CP" & FC).Value = HC.Cells(FC, col).Value
        If Application.WorksheetFunction.CountIf(HC.Range("cp14:cp313"), HC.Range("CP" & FC)) > 1 Then
            msg = MsgBox("Atenci|fffd|n!!!. No deben existir dos personas con el mismo TIP puede ocasionar resultados no deseados.", vbCritical, "TIP Duplicado")
        End If
        Cambiar_Servicio FC
    
    'Telefono
    ElseIf HC.Cells(13, col) = "TELEF." Then
        HC.Range("CQ" & FC).Value = HC.Cells(FC, col).Value
    
    'Regimen
    ElseIf HC.Cells(13, col) = "REGIMEN" Then
        dato = Application.Match(HC.Cells(FC, col).Value, HC.Range("g332:g337"), 0)
        If IsError(dato) = False Or HC.Cells(FC, col) = "" Then
            Application.ScreenUpdating = False
            HC.Range("CR" & FC).Value = HC.Cells(FC, col).Value
            Cambiar_Servicio FC
        Else
            msg = MsgBox("Regimen no valido", vbInformation, "Validaci|fffd|n")
            HC.Cells(FC, col).Value = HC.Range("CR" & FC).Value
        End If
    'Imprimir
    ElseIf HC.Cells(13, col) = "IMPRIMIR" Then
        If UCase(HC.Cells(FC, col).Value) = "SI" Or UCase(HC.Cells(FC, col).Value = "NO") Or HC.Cells(FC, col) = "" Then
            HC.Range("CS" & FC).Value = HC.Cells(FC, col).Value
        Else
            msg = MsgBox("Solo se acepta SI o NO para IMPRIMIR O NO IMPRIMIR.", vbInformation, "Validaci|fffd|n")
            HC.Cells(FC, col).Value = HC.Range("CS" & FC).Value
        End If
    
    'Periodo
    ElseIf HC.Cells(13, col) = "PERIODO" Then
        dato = Application.Match(HC.Cells(FC, col).Value, HC.Range("g338:g340"), 0)
        If IsError(dato) = False Or HC.Cells(FC, col) = "" Then
            Application.ScreenUpdating = False
            HC.Range("CT" & FC).Value = HC.Cells(FC, col).Value
            Cambiar_Servicio FC
        Else
            msg = MsgBox("Periodo no valido", vbInformation, "Validaci|fffd|n")
            HC.Cells(FC, col).Value = HC.Range("CT" & FC).Value
        End If
    
    'Email
    ElseIf HC.Cells(13, col) = "eMail" Then
        'msg = MsgBox("Solo se puede editar el eMail desde las opciones de la persona o desde el menu de la APP Movil.", vbInformation, "No Editable")
        If InStr(HC.Range("cu" & FC), "#E") > 0 Then
                If HC.Cells(FC, col).Value <> "" Then
                    HC.Range("CU" & FC).Replace what:="#E*E#", replacement:="#E" & HC.Cells(FC, col) & "E#"
                Else
                    HC.Range("CU" & FC).Replace what:="#E*E#", replacement:=""
                End If
            Else
                If HC.Cells(FC, col).Value <> "" Then
                    HC.Range("cu" & FC) = HC.Range("cu" & FC) & "#E" & HC.Cells(FC, col) & "E#"
                End If
            End If
    'Caracteristica
    ElseIf HC.Cells(12, 125 + col) <> "" Then
        TIPO = left(HC.Cells(12, 125 + col), 1)
        pos = Right(HC.Cells(12, 125 + col), 1)
        If TIPO = "B" Then 'Si Boleano
            If UCase(HC.Cells(FC, col).Value) = "SI" Or UCase(HC.Cells(FC, col).Value = "NO") Or HC.Cells(FC, col) = "" Then
            Else
                msg = MsgBox("Solo se acepta SI o NO para este tipo de caracteristica.", vbInformation, "Validaci|fffd|n")
            End If
            If InStr(HC.Range("cu" & FC), "#B" & pos & "1") > 0 Then
                If HC.Cells(FC, col).Value = "" Or UCase(HC.Cells(FC, col).Value) = "NO" Then
                    HC.Range("CU" & FC).Replace what:="#B" & pos & "1", replacement:=""
                    HC.Cells(FC, col).Value = "NO"
                Else
                    HC.Cells(FC, col).Value = "SI"
                End If
            Else
                If UCase(HC.Cells(FC, col).Value) = "SI" Then
                    HC.Range("cu" & FC) = HC.Range("cu" & FC) & "#B" & pos & "1"
                Else
                    HC.Cells(FC, col).Value = "NO"
                End If
            End If
            
        ElseIf TIPO = "F" Then 'Si Fecha
            If IsError(CDbl(HC.Cells(FC, col))) Then msg = MsgBox("Solo se admiten formatos de fechas. Este dato no se registrar|fffd|   .", vbInformation, "Validaci|fffd|n")
            If InStr(HC.Range("cu" & FC), "#F" & pos) > 0 Then
                If HC.Cells(FC, col).Value <> "" Then
                    HC.Range("CU" & FC).Replace what:="#F" & pos & "*" & "F" & pos & "#", replacement:="#F" & pos & CDbl(HC.Cells(FC, col)) & "F" & pos & "#"
                Else
                    HC.Range("CU" & FC).Replace what:="#F" & pos & "*" & "F" & pos & "#", replacement:=""
                End If
            Else
                If HC.Cells(FC, col).Value <> "" Then
                    HC.Range("cu" & FC) = HC.Range("cu" & FC) & "#F" & pos & CDbl(HC.Cells(FC, col)) & "F" & pos & "#"
                End If
            End If
       ElseIf TIPO = "C" Then 'Si comentario
            If InStr(HC.Range("cu" & FC), "#C" & pos) > 0 Then
                If HC.Cells(FC, col).Value <> "" Then
                    HC.Range("CU" & FC).Replace what:="#C" & pos & "*" & "C" & pos & "#", replacement:="#C" & pos & HC.Cells(FC, col) & "C" & pos & "#"
                Else
                    HC.Range("CU" & FC).Replace what:="#C" & pos & "*" & "C" & pos & "#", replacement:=""
                End If
            Else
                If HC.Cells(FC, col).Value <> "" Then
                    HC.Range("cu" & FC) = HC.Range("cu" & FC) & "#C" & pos & HC.Cells(FC, col) & "C" & pos & "#"
                End If
            End If
        End If
    End If
End Sub
Sub ArregloVisualizacion() 'Arreglar visualizacion cuadrante
    If HC.Range("bd8") < 47 Then ' esconder una semana en su caso
        HC.Range("ao:au").EntireColumn.Hidden = True
    Else
        HC.Range("ao:au").EntireColumn.Hidden = False
    End If
End Sub
Private Sub pruebafiltros()
CVisual 6
End Sub
'------------VISUAL----------------------------------
Sub CVisual(ancho)
HC.Range("k14:au14").ColumnWidth = ancho
HC.FNombre.Height = 14.25
HC.FNombre.top = HC.Cells(13, 1).top + HC.Cells(13, 1).Height - HC.FNombre.Height
HC.FMenos1.Width = (HC.Range("m14").Width / HC.Range("m14").ColumnWidth) * ancho
HC.FMenos1.Height = 14.25
HC.FMenos1.left = HC.Cells(13, 12).left + 1
HC.FMenos1.top = HC.Cells(13, 1).top + HC.Cells(13, 1).Height - HC.FMenos1.Height
HC.FMenos1.Font.Size = 8
For f = 1 To 35
    HC.OLEObjects("F" & f).Width = (HC.Range("m14").Width / HC.Range("m14").ColumnWidth) * ancho
    HC.OLEObjects("f" & f).Height = 14.25
    HC.OLEObjects("f" & f).left = HC.Cells(13, f + 12).left + 1
    HC.OLEObjects("f" & f).top = HC.Cells(13, 1).top + HC.Cells(13, 1).Height - HC.F1.Height
    HC.OLEObjects("f" & f).Object.Font.Size = 8
Next
HC.FMenos1.Visible = True
'VISUALIZACION DE CAJAS DE FILTROS
If HC.Range("bd8") < 47 Then
    HC.Range("ao1:au1").EntireColumn.Hidden = True
    HC.F29.Visible = False
    HC.F30.Visible = False
    HC.F31.Visible = False
    HC.F32.Visible = False
    HC.F33.Visible = False
    HC.F34.Visible = False
    HC.F35.Visible = False
Else
    HC.Range("ao1:au1").EntireColumn.Hidden = False
    HC.F29.Visible = True
    HC.F30.Visible = True
    HC.F31.Visible = True
    HC.F32.Visible = True
    HC.F33.Visible = True
    HC.F34.Visible = True
    HC.F35.Visible = True
End If
End Sub
'------------FILTROS----------------------------------
Private Sub FNombre_Change()
If FNombre.Value = "" Then
    FNombre.BackColor = &HC0FFFF
    HC.Range("L13:DO313").AutoFilter field:=108
Else
    FNombre.BackColor = &H80FF&
    HC.Range("L13:DO313").AutoFilter field:=108, Criteria1:="*" & FNombre.Value & "*"
End If
End Sub
Private Sub FNombre_GotFocus()
    FNombre.Value = ""
End Sub
Private Sub FMenos1_Change()
Application.ScreenUpdating = False
If FMenos1.Value = "" Then
    FMenos1.BackColor = &HC0FFFF
    'HC.Range("L13:DO313").AutoFilter field:=1
    HC.AplicaFiltrosVer
Else
    FMenos1.BackColor = &H80FF&
    HC.Range("L13:DO313").AutoFilter field:=1, Criteria1:="*" & FMenos1.Value & "*"
End If
Application.ScreenUpdating = True
End Sub
Private Sub FMenos1_GotFocus()
    FMenos1.Value = ""
End Sub
Private Sub FS(Objeto)
Application.ScreenUpdating = False
If HC.OLEObjects("F" & Objeto).Object.Value = "" Then
    HC.OLEObjects("F" & Objeto).Object.BackColor = &HC0FFFF
    HC.AplicaFiltrosVer
    'HC.Range("L13:DO313").AutoFilter field:=Objeto + 1
Else
    HC.OLEObjects("F" & Objeto).Object.BackColor = &H80FF&
    HC.Range("L13:DO313").AutoFilter field:=Objeto + 1, Criteria1:="*" & HC.OLEObjects("F" & Objeto).Object.Value & "*"
End If
Application.ScreenUpdating = True
End Sub
Private Sub FSB(Objeto)
HC.OLEObjects("F" & Objeto).Object.Value = ""
End Sub
Private Sub F1_Change()
FS 1
End Sub
Private Sub F2_Change()
FS 2
End Sub
Private Sub F3_Change()
FS 3
End Sub
Private Sub F4_Change()
FS 4
End Sub
Private Sub F5_Change()
FS 5
End Sub
Private Sub F6_Change()
FS 6
End Sub
Private Sub F7_Change()
FS 7
End Sub
Private Sub F8_Change()
FS 8
End Sub
Private Sub F9_Change()
FS 9
End Sub
Private Sub F10_Change()
FS 10
End Sub
Private Sub F11_Change()
FS 11
End Sub
Private Sub F12_Change()
FS 12
End Sub
Private Sub F13_Change()
FS 13
End Sub
Private Sub F14_Change()
FS 14
End Sub
Private Sub F15_Change()
FS 15
End Sub
Private Sub F16_Change()
FS 16
End Sub
Private Sub F17_Change()
FS 17
End Sub
Private Sub F18_Change()
FS 18
End Sub
Private Sub F19_Change()
FS 19
End Sub
Private Sub F20_Change()
FS 20
End Sub
Private Sub F21_Change()
FS 21
End Sub
Private Sub F22_Change()
FS 22
End Sub
Private Sub F23_Change()
FS 23
End Sub
Private Sub F24_Change()
FS 24
End Sub
Private Sub F25_Change()
FS 25
End Sub
Private Sub F26_Change()
FS 26
End Sub
Private Sub F27_Change()
FS 27
End Sub
Private Sub F28_Change()
FS 28
End Sub
Private Sub F29_Change()
FS 29
End Sub
Private Sub F30_Change()
FS 30
End Sub
Private Sub F31_Change()
FS 31
End Sub
Private Sub F32_Change()
FS 32
End Sub
Private Sub F33_Change()
FS 33
End Sub
Private Sub F34_Change()
FS 34
End Sub
Private Sub F35_Change()
FS 35
End Sub
Private Sub F1_GotFocus()
FSB 1
End Sub
Private Sub F2_GotFocus()
FSB 2
End Sub
Private Sub F3_GotFocus()
FSB 3
End Sub
Private Sub F4_GotFocus()
FSB 4
End Sub
Private Sub F5_GotFocus()
FSB 5
End Sub
Private Sub F6_GotFocus()
FSB 6
End Sub
Private Sub F7_GotFocus()
FSB 7
End Sub
Private Sub F8_GotFocus()
FSB 8
End Sub
Private Sub F9_GotFocus()
FSB 9
End Sub
Private Sub F10_GotFocus()
FSB 10
End Sub
Private Sub F11_GotFocus()
FSB 11
End Sub
Private Sub F12_GotFocus()
FSB 12
End Sub
Private Sub F13_GotFocus()
FSB 13
End Sub
Private Sub F14_GotFocus()
FSB 14
End Sub
Private Sub F15_GotFocus()
FSB 15
End Sub
Private Sub F16_GotFocus()
FSB 16
End Sub
Private Sub F17_GotFocus()
FSB 17
End Sub
Private Sub F18_GotFocus()
FSB 18
End Sub
Private Sub F19_GotFocus()
FSB 19
End Sub
Private Sub F20_GotFocus()
FSB 20
End Sub
Private Sub F21_GotFocus()
FSB 21
End Sub
Private Sub F22_GotFocus()
FSB 22
End Sub
Private Sub F23_GotFocus()
FSB 23
End Sub
Private Sub F24_GotFocus()
FSB 24
End Sub
Private Sub F25_GotFocus()
FSB 25
End Sub
Private Sub F26_GotFocus()
FSB 26
End Sub
Private Sub F27_GotFocus()
FSB 27
End Sub
Private Sub F28_GotFocus()
FSB 28
End Sub
Private Sub F29_GotFocus()
FSB 29
End Sub
Private Sub F30_GotFocus()
FSB 30
End Sub
Private Sub F31_GotFocus()
FSB 31
End Sub
Private Sub F32_GotFocus()
FSB 32
End Sub
Private Sub F33_GotFocus()
FSB 33
End Sub
Private Sub F34_GotFocus()
FSB 34
End Sub
Private Sub F35_GotFocus()
FSB 35
End Sub
'-------PROCESOS INTERNOS---------------------------------------------
Sub AplicaFiltrosVer()
Dim filasocultas As Range
'Nuevos Filtros
If Application.Calculation = xlCalculationAutomatic Then Application.Calculation = xlCalculationManual
For fi = 14 To 313 'HC.Range("h314").End(xlUp).Row + 2
    ocultar1 = 0
    ocultar2 = 0
    If HC.Range("i11") = "TODOS" Then
        ocultar1 = 1
    ElseIf HC.Range("i11") = "ACTIVOS" And HC.Range("cj" & fi) <> "NO" Or HC.Range("cj" & fi) = "MANUAL" Then
        ocultar1 = 1
    ElseIf HC.Range("i11") = "NO ACTIVOS" And HC.Range("cj" & fi) = "NO" Then
        ocultar1 = 1
    ElseIf HC.Range("i11") = "IMPRESI|fffd|N" And HC.Range("cs" & fi) <> "NO" Then
        ocultar1 = 1
    End If
    If HC.Range("g11") = "TODAS" Then
        ocultar2 = 1
    Else
        For are = 352 To 361
            If HC.Range("cl" & fi) = HC.Range("g" & are) And HC.Range("g" & are) <> "" Then ocultar2 = 1
        Next
    End If
    
    If ocultar1 = 1 And ocultar2 = 1 Then
        If filasocultas Is Nothing Then
            Set filasocultas = HC.Range("a" & fi)
        Else
            Set filasocultas = Union(filasocultas, HC.Range("a" & fi))
        End If
    Else
    End If
Next
If HC.FilterMode = True Then HC.ShowAllData
'MsgBox filasocultas.Address
HC.Range("a14:a313").EntireRow.Hidden = True
If Not filasocultas Is Nothing Then filasocultas.EntireRow.Hidden = False
aplicafilas
End Sub
Sub aplicafilas()
If HC.Range("g317") = False Then
    If HC.Range("g11") = "TODAS" And HC.Range("h315").End(xlUp).Row > 13 Then
        ultima = Application.Max(HC.Range("h315").End(xlUp).Row, HC.Range("i315").End(xlUp).Row, HC.Range("j315").End(xlUp).Row)
        HC.Range("a" & ultima & ":a313").EntireRow.Hidden = False
        HC.Range("a" & ultima + 2 & ":a313").EntireRow.Hidden = True
    End If
End If
ActualizaCortinas
End Sub
Sub ColumnaCalculos(col)
calculo = HC.Cells(13, col)
If calculo = HCON.Range("bg4") Then 'H/HREF
    dato = 112
    HC.Range(HC.Cells(14, col), HC.Cells(313, col)).NumberFormat = "General"
ElseIf calculo = HCON.Range("bg5") Then 'DESVIO
    dato = 101
    HC.Range(HC.Cells(14, col), HC.Cells(313, col)).NumberFormat = "+0.#"" h."";-0.#"" h."";0"" h."""
ElseIf calculo = HCON.Range("bg6") Then 'M/T/N
    dato = 118
    HC.Range(HC.Cells(14, col), HC.Cells(313, col)).NumberFormat = "General"
ElseIf calculo = HCON.Range("bg7") Then 'NOCTUR
    dato = 121
    HC.Range(HC.Cells(14, col), HC.Cells(313, col)).NumberFormat = "0  ""Noc."""
ElseIf calculo = HCON.Range("bg8") Then 'FESTIVOS
    dato = 120
    HC.Range(HC.Cells(14, col), HC.Cells(313, col)).NumberFormat = "0  ""Fest."""
ElseIf calculo = HCON.Range("bg9") Then 'DSA PENDIENTE
    dato = 114
    HC.Range(HC.Cells(14, col), HC.Cells(313, col)).NumberFormat = "0  ""DAS"""
ElseIf calculo = HCON.Range("bg10") Then 'DF PENDIENTE
    dato = 113
    HC.Range(HC.Cells(14, col), HC.Cells(313, col)).NumberFormat = "0  ""DF"""
ElseIf calculo = HCON.Range("bg11") Then 'DCO PENDIENTE
    dato = 105
    HC.Range(HC.Cells(14, col), HC.Cells(313, col)).NumberFormat = "0  ""DSJ"""
ElseIf calculo = HCON.Range("bg12") Then 'CONTAR
    If Application.ScreenUpdating = True Then SELCONTAR.Show
    dato = 111
    ContarServ
    HC.Range(HC.Cells(14, col), HC.Cells(313, col)).NumberFormat = "General"
ElseIf calculo = HCON.Range("bg13") Then
    If Application.ScreenUpdating = True Then SELCONTAR.Show
    dato = 124
    DiasSin
    HC.Range(HC.Cells(14, col), HC.Cells(313, col)).NumberFormat = "0  ""d"""
ElseIf calculo = HCON.Range("bg14") Then ' PRODUCTIVIDAD
    dato = 117
    HC.Range(HC.Cells(14, col), HC.Cells(313, col)).NumberFormat = "#,##0.00 $"
End If
If dato <> "" Then
    HC.Cells(12, 91 + col) = dato
    HC.Cells(12, 125 + col) = ""
    For n = 14 To 313
        HC.Cells(n, col) = HC.Cells(n, dato)
    Next
    HC.Range(HC.Cells(14, col), HC.Cells(313, col)).Locked = True
End If
End Sub
Private Sub ContarServ()
Application.EnableEvents = False
HC.Range("ds14:ds313").ClearContents
If HC.Range("cs5") > 0 Then
    For m = 1 To 24
        If HC.Range("cs5") = 1 And m = 3 Then Exit For ' Caso 3 meses
        If HC.Range("cs5") = 2 And (m = HC.Range("ba6") Or m = HC.Range("ba6") + 12) Then Exit For
        If HC.Range("cs5") = 3 And m - 1 = HC.Range("ba6") Then Exit For
        base = HC.Range("ba8") - m * 500
        For p = 0 To 299
            fi = Application.Match(HC.Range("cp" & p + 14), HBDC.Range("cd" & base & ":cd" & base + 299), 0)
            If HC.Range("cm" & p + 14) <> "" And HC.Range("cj" & p + 14) <> "NO" And IsError(fi) = False Then
                For s = 1 To 5
                    If HC.Range("cs" & s + 5) <> "" Then
                        HC.Range("ds" & p + 14) = HC.Range("Ds" & p + 14) + Application.WorksheetFunction.CountIf(HBDC.Range("a" & base + fi - 1 & ":ai" & base + fi - 1), HC.Range("cs" & s + 5))
                        HC.Range("ds" & p + 14) = HC.Range("Ds" & p + 14) + Application.WorksheetFunction.CountIf(HBDC.Range("a" & base + fi - 1 & ":ai" & base + fi - 1), HC.Range("cs" & s + 5) & Chr(10) & "*")
                        HC.Range("ds" & p + 14) = HC.Range("Ds" & p + 14) + Application.WorksheetFunction.CountIf(HBDC.Range("a" & base + fi - 1 & ":ai" & base + fi - 1), "*" & Chr(10) & HC.Range("cs" & s + 5))
                    End If
                Next
            End If
        Next
    Next
End If
HC.Range("dg14:dg313").ClearContents
For p = 14 To 313
    If HC.Range("cm" & p) <> "" And HC.Range("cj" & p) <> "NO" Then
        For s = 1 To 5
            If HC.Range("cs" & s + 5) <> "" Then
                HC.Range("DG" & p) = HC.Range("DG" & p) + Application.WorksheetFunction.CountIf(HC.Range("m" & p & ":au" & p), HC.Range("cs" & s + 5))
                HC.Range("DG" & p) = HC.Range("DG" & p) + Application.WorksheetFunction.CountIf(HC.Range("m" & p & ":au" & p), HC.Range("cs" & s + 5) & Chr(10) & "*")
                HC.Range("DG" & p) = HC.Range("DG" & p) + Application.WorksheetFunction.CountIf(HC.Range("m" & p & ":au" & p), "*" & Chr(10) & HC.Range("cs" & s + 5))
            End If
        Next
        HC.Range("DG" & p) = HC.Range("DG" & p) + HC.Range("ds" & p)
    End If
Next
Application.EnableEvents = True
End Sub
Private Sub DiasSin()
Application.EnableEvents = False
HC.Range("ds14:dt313").ClearContents
For p = 14 To 313
    TOTAL = 0
    If HC.Range("do" & p) <> "" And HC.Range("cj" & p) <> "NO" Then
        'Primer intento
        For s = 1 To 5
            If HC.Range("cs" & s + 5) <> "" Then
                For d = HC.Range("bd6") + 12 To 13 Step -1
                    If HC.Cells(p, d) = HC.Range("cs" & s + 5) Or InStr(HC.Cells(p, d), Chr(10) & HC.Range("cs" & s + 5)) > 0 Or InStr(HC.Cells(p, d), HC.Range("cs" & s + 5) & Chr(10)) > 0 Then
                        If HC.Range("bd6") - d + 12 < HC.Range("dt" & p) Or HC.Range("dt" & p) = "" Then HC.Range("dt" & p) = HC.Range("bd6") - d + 12
                        Exit For
                    End If
                Next
            End If
        Next
        If HC.Range("dt" & p) <> "" Then
            GoTo encontrado
        End If
        TOTAL = HC.Range("bd6")
        'Segundo intento
        If HC.Range("cs5") = 0 Then GoTo NoEncontrado
        For m = 1 To 24
            If HC.Range("cs5") = 1 And m = 3 Then Exit For
            If HC.Range("cs5") = 2 And (m = HC.Range("ba6") Or m = HC.Range("ba6") + 12) Then Exit For
            If HC.Range("cs5") = 3 And m - 1 = HC.Range("ba6") Then Exit For
            Cdias = DiasMes(m)
            TOTAL = TOTAL + Cdias
            base = HC.Range("ba8") - m * 500
            fi = Application.Match(HC.Range("cp" & p), HBDC.Range("cd" & base & ":cd" & base + 299), 0)
            If IsError(fi) = False Then
                For S2 = 1 To 5
                    If HC.Range("cs" & S2 + 5) <> "" Then
                        For D2 = Cdias To 1 Step -1
                            If HBDC.Cells(fi + base - 1, D2) = HC.Range("cs" & S2 + 5) Or InStr(1, HBDC.Cells(fi + base - 1, D2), Chr(10) & HC.Range("cs" & S2 + 5)) > 0 Or InStr(1, HBDC.Cells(fi + base - 1, D2), HC.Range("cs" & S2 + 5) & Chr(10)) > 0 Then
                                If TOTAL - D2 < HC.Range("ds" & p) Or HC.Range("ds" & p) = "" Then HC.Range("ds" & p) = TOTAL - D2
                                Exit For
                            End If
                        Next
                    End If
                Next
            End If
            If HC.Range("dt" & p) <> "" Then GoTo encontrado
        Next
NoEncontrado:
        If HC.Range("dt" & p) = "" And HC.Range("ds" & p) = "" Then
            HC.Range("dt" & p) = "NO"
        ElseIf HC.Range("dt" & p) = "" Then
            HC.Range("dt" & p) = HC.Range("ds" & p)
        End If
encontrado:
    End If
Next
Application.EnableEvents = True
End Sub
Private Function DiasMes(m)
PrimerDiaMes = DateAdd("m", -m, HC.Range("bd3"))
Messiguiente = DateAdd("m", -m + 1, HC.Range("bd3"))
If Weekday(PrimerDiaMes, vbMonday) > 4 Then
    diaini = PrimerDiaMes + 8 - Weekday(PrimerDiaMes, vbMonday)
Else
    diaini = PrimerDiaMes - Weekday(PrimerDiaMes, vbMonday) + 1
End If

If Weekday(Messiguiente, vbMonday) > 4 Then
    diafin = Messiguiente + 8 - Weekday(Messiguiente, vbMonday) - 1
Else
    diafin = Messiguiente - Weekday(Messiguiente, vbMonday)
End If
DiasMes = diafin - diaini + 1
End Function
Sub Refrescar(letrero)
'''' Crono
'Dim t As Single 'Inicia el cron|fffd|metro
't = Timer
'--------------------------------
If letrero = 1 Then
    TRABAJANDO.Textillo = "CALCULANDO"
    TRABAJANDO.Show 0
    TRABAJANDO.Repaint
End If
Application.ScreenUpdating = False
HC.Range("bh3") = False
For n = 14 To 313
   HC.Cambiar_Servicio n
Next
If HC.Range("bg1") = False Then HC.Range("K14:AU313").HorizontalAlignment = xlCenter 'ALINEACION ESPECIAL
HC.Range("bh3") = True
If letrero = 1 Then TRABAJANDO.Hide
'DefineScroll
'Crono------------------
'MsgBox Timer - t, vbInformation, "Segundos"
End Sub
Sub CambiarFiltroDato(dato, col)
On Error Resume Next
despro HC
HC.Range("dt12") = ""
HC.Cells(12, 125 + col) = ""
If HC.FilterMode = True Then
    HC.ShowAllData
End If
If dato = "EMPLEO" Then
    HC.Range(HC.Cells(14, col), HC.Cells(313, col)).NumberFormat = ("@")
    HC.Range(HC.Cells(14, col), HC.Cells(313, col)).Value = HC.Range("CK14:CK313").Value
    'HC.AplicaFiltrosVer
    HC.Range(HC.Cells(14, col), HC.Cells(313, col)).Locked = False
ElseIf dato = "TIP" Then
    HC.Range(HC.Cells(14, col), HC.Cells(313, col)).NumberFormat = ("@")
    HC.Range(HC.Cells(14, col), HC.Cells(313, col)).Value = HC.Range("Cp14:Cp313").Value
    'HC.AplicaFiltrosVer
    HC.Range(HC.Cells(14, col), HC.Cells(313, col)).Locked = False
ElseIf dato = "TELEF." Then
    HC.Range(HC.Cells(14, col), HC.Cells(313, col)).NumberFormat = ("0")
    HC.Range(HC.Cells(14, col), HC.Cells(313, col)).Value = HC.Range("Cq14:Cq313").Value
    'HC.AplicaFiltrosVer
    HC.Range(HC.Cells(14, col), HC.Cells(313, col)).Locked = False
ElseIf dato = "ANTIG|fffd|EDAD" Then
    HC.Range(HC.Cells(14, col), HC.Cells(313, col)).NumberFormat = ("0")
    HC.Range(HC.Cells(14, col), HC.Cells(313, col)).Value = HC.Range("Ci14:Ci313").Value
    'HC.AplicaFiltrosVer
    HC.Range(HC.Cells(14, col), HC.Cells(313, col)).Locked = False
ElseIf dato = "GRUPO" Then
    HC.Range(HC.Cells(14, col), HC.Cells(313, col)).NumberFormat = ("@")
    HC.Range(HC.Cells(14, col), HC.Cells(313, col)).Value = HC.Range("DC14:DC313").Value
    'HC.AplicaFiltrosVer
    HC.Range(HC.Cells(14, col), HC.Cells(313, col)).Locked = False
ElseIf dato = "AREA" Then
    HC.Range(HC.Cells(14, col), HC.Cells(313, col)).NumberFormat = ("@")
    HC.Range(HC.Cells(14, col), HC.Cells(313, col)).Value = HC.Range("Cl14:Cl313").Value
    'HC.AplicaFiltrosVer
    HC.Range(HC.Cells(14, col), HC.Cells(313, col)).Locked = False
ElseIf dato = "ACTIVOS" Then
    HC.Range(HC.Cells(14, col), HC.Cells(313, col)).Locked = False
    HC.Range(HC.Cells(14, col), HC.Cells(313, col)).NumberFormat = ("@")
    HC.Range(HC.Cells(14, col), HC.Cells(313, col)).Value = HC.Range("Cj14:Cj313").Value
    'HC.AplicaFiltrosVer
    HC.Range(HC.Cells(14, col), HC.Cells(313, col)).Locked = False
ElseIf dato = "REGIMEN" Then
    HC.Range(HC.Cells(14, col), HC.Cells(313, col)).NumberFormat = ("@")
    HC.Range(HC.Cells(14, col), HC.Cells(313, col)).Value = HC.Range("Cr14:Cr313").Value
    'HC.AplicaFiltrosVer
    HC.Range(HC.Cells(14, col), HC.Cells(313, col)).Locked = False
ElseIf dato = "PERIODO" Then
    HC.Range(HC.Cells(14, col), HC.Cells(313, col)).NumberFormat = ("@")
    HC.Range(HC.Cells(14, col), HC.Cells(313, col)).Value = HC.Range("Ct14:Ct313").Value
    'HC.AplicaFiltrosVer
    HC.Range(HC.Cells(14, col), HC.Cells(313, col)).Locked = False
ElseIf dato = "IMPRIMIR" Then
    HC.Range(HC.Cells(14, col), HC.Cells(313, col)).NumberFormat = ("@")
    HC.Range(HC.Cells(14, col), HC.Cells(313, col)).Value = HC.Range("Cs14:Cs313").Value
    'HC.AplicaFiltrosVer
    HC.Range(HC.Cells(14, col), HC.Cells(313, col)).Locked = False
ElseIf dato = "eMail" Then
    HC.Range(HC.Cells(14, 124 + col), HC.Cells(313, 125 + col)).NumberFormat = "@"
    HC.Range(HC.Cells(14, col), HC.Cells(313, col)).Validation.Delete
    HC.Range(HC.Cells(14, col), HC.Cells(313, col)).NumberFormat = "@"
    For f = 14 To 313
        If HC.Range("h" & f) <> "" Then
            If InStr(HC.Range("cu" & f), "#E" & n) > 0 Then
                HC.Range("dt" & f) = Mid(HC.Range("cu" & f), InStr(HC.Range("cu" & f), "#E") + 2, InStr(HC.Range("cu" & f), "E#") - InStr(HC.Range("cu" & f), "#E") - 2)
            Else
                HC.Range("dt" & f) = ""
                End If
            Else
            HC.Range("dt" & f) = ""
        End If
    Next
    HC.Range(HC.Cells(14, col), HC.Cells(313, col)).Value = HC.Range("DT14:DT313").Value
    'HC.Range("dt12") = "C" & n
    'HC.AplicaFiltrosVer
    HC.Range(HC.Cells(14, col), HC.Cells(313, col)).Locked = False
    GoTo ya
ElseIf dato <> "" Then ' CARACTERISTICA BOLEANA
    HC.Range(HC.Cells(14, 124 + col), HC.Cells(313, 125 + col)).NumberFormat = "@"
    For n = 1 To 8
        If dato = HCON.Range("aq" & n + 3) Then
            HC.Range(HC.Cells(14, col), HC.Cells(313, col)).Locked = False
            HC.Range(HC.Cells(14, col), HC.Cells(313, col)).NumberFormat = "@"
            For f = 14 To 313
                If HC.Range("h" & f) <> "" Then
                    If InStr(HC.Range("cu" & f), "#B" & n & "1") > 0 Then
                        HC.Cells(f, 125 + col) = "SI"
                    Else
                        HC.Cells(f, 125 + col) = "NO"
                    End If
                Else
                    HC.Cells(f, 125 + col) = ""
                End If
            Next
            HC.Range(HC.Cells(14, col), HC.Cells(313, col)).Value = HC.Range(HC.Cells(14, 125 + col), HC.Cells(313, 125 + col)).Value
            HC.Cells(12, 125 + col) = "B" & n
            'HC.AplicaFiltrosVer
            GoTo ya
        End If
    Next
    For n = 1 To 3
        If dato = HCON.Range("ar" & n + 3) Then
            HC.Range(HC.Cells(14, col), HC.Cells(313, col)).NumberFormat = "dd/mm/yyyy"
            For f = 14 To 313
                If HC.Range("h" & f) <> "" Then
                    If InStr(HC.Range("cu" & f), "#F" & n) > 0 Then
                        HC.Cells(f, 125 + col) = Mid(HC.Range("cu" & f), InStr(HC.Range("cu" & f), "#F" & n) + 3, InStr(HC.Range("cu" & f), "F" & n & "#") - InStr(HC.Range("cu" & f), "#F" & n) - 3)
                    Else
                        HC.Cells(f, 125 + col) = ""
                    End If
                Else
                    HC.Cells(f, 125 + col) = ""
                End If
            Next
            HC.Range(HC.Cells(14, col), HC.Cells(313, col)).Value = HC.Range(HC.Cells(14, 125 + col), HC.Cells(313, 125 + col)).Value
            HC.Cells(12, 125 + col) = "F" & n
            'HC.AplicaFiltrosVer
            HC.Range(HC.Cells(14, col), HC.Cells(313, col)).Locked = False
            GoTo ya
        End If
    Next
    For n = 1 To 3
        If dato = HCON.Range("as" & n + 3) Then
            HC.Range(HC.Cells(14, col), HC.Cells(313, col)).NumberFormat = "@"
            For f = 14 To 313
                If HC.Range("h" & f) <> "" Then
                    If InStr(HC.Range("cu" & f), "#C" & n) > 0 Then
                        HC.Cells(f, 125 + col) = Mid(HC.Range("cu" & f), InStr(HC.Range("cu" & f), "#C" & n) + 3, InStr(HC.Range("cu" & f), "C" & n & "#") - InStr(HC.Range("cu" & f), "#C" & n) - 3)
                    Else
                        HC.Cells(f, 125 + col) = ""
                    End If
                Else
                    HC.Cells(f, 125 + col) = ""
                End If
            Next
            HC.Range(HC.Cells(14, col), HC.Cells(313, col)).Value = HC.Range(HC.Cells(14, 125 + col), HC.Cells(313, 125 + col)).Value
            HC.Cells(12, 125 + col) = "C" & n
            'HC.AplicaFiltrosVer
            HC.Range(HC.Cells(14, col), HC.Cells(313, col)).Locked = False
            GoTo ya
        End If
    Next
    'HC.AplicaFiltrosVer
Else: 'HC.AplicaFiltrosVer
ya:
End If
pro HC
End Sub
Sub GUARDARCUADRANTEMES()
If HC.FilterMode = True Then HC.ShowAllData
If HC.Range("BA6") <> "" Then
    fila = HC.Range("BA8").Value
    HBDC.Range("A" & fila & ":CT" & fila + 304).NumberFormat = ("@")
    HBDC.Range("A" & fila & ":CT" & fila + 304).Value = HC.Range("M14:DF318").Value
    HBDC.Range("A" & fila - 1).Value = HC.Range("E3") 'marca el mes copiado
    HC.Range("ci363:ee386").Copy Destination:=HBDC.Range("a" & fila + 305) ' Guardar Estrategias
    For f = 14 To 313
        Set Celdacom = HC.Range("H" & f).Comment
        If Not Celdacom Is Nothing Then HBDC.Range("cu" & f - 14 + fila).Value = HC.Range("H" & f).Comment.Text
    Next
End If
End Sub
Sub RestableceDeshacer()
HVAL.Range("b985:bx1049").ClearContents
BtnDeshacer.Enabled = False
DeshacerDesple.Enabled = False
BtnRehacer.Enabled = False
HC.BtnDeshacer.Caption = 0
End Sub
Sub GrabaDeshacer()
If Application.Calculation = xlCalculationAutomatic Then Application.Calculation = xlCalculationManual
Dim Rango(1 To 73)
If Deshacer2 <> Empty Then
    HVAL.Range("c985:bx1050").NumberFormat = "@"
    HVAL.Range("b1001:bx1049").Value = HVAL.Range("b1000:bx1050").Value
    For i = 1 To 73
        Rango(i) = Deshacer1(i)
    Next i
    HVAL.Range("d1000:bx1000").Value = Rango
    HVAL.Range("b1000").Value = Deshacer2
    HVAL.Range("c1000").Value = Deshacer3
    BtnDeshacer.Enabled = True
    DeshacerDesple.Enabled = True
    BtnDeshacer.Caption = Application.Count(HVAL.Range("b1000:b1049"))
    HVAL.Range("b985:bx999").ClearContents
    BtnRehacer.Enabled = False
End If
End Sub
Sub Cambio_mes(MesActual, AnoActual, Guardar, Actuali)
despro HC
Application.EnableEvents = False
Application.ScreenUpdating = False
HC.Calculate
HC.Range("av1:aw314").ClearContents
If Guardar = True And HC.Range("ba6") <> "" Then
    HC.GUARDARCUADRANTEMES '-----------SALVAR CUADRANTE EN BSD SI NO ESTA VACIO
Else
    If HC.FilterMode = True Then HC.ShowAllData
End If
'---Lectura del mes antes del cambio
mesantes = HC.Range("BA6").Value
anoantes = HC.Range("BA7").Value
MesAbsolutoAntes = HC.Range("ba5")
'-----------CAMBIA EL MES
HC.Range("BA6").Value = MesActual
HC.Range("BA7").Value = AnoActual
'-----------------------------------------
'-CALCULOS IMPORTANTES
If HC.Range("ba6") = "" Then
    HC.Range("ba3") = "ELEGIR MES"
    HC.Range("ba4") = ""
    HC.Range("ba8") = 2
    HC.Range("ba1") = "SI"
Else
    HC.Range("ba3") = HCON.Range("ba" & HC.Range("ba6") + 4) '=SI(BA6="";"ELEGIR MES";ELEGIR(BA6+1;CON!BA4;CON!BA5;CON!BA6;CON!BA7;CON!BA8;CON!BA9;CON!BA10;CON!BA11;CON!BA12;CON!BA13;CON!BA14;CON!BA15))
    HC.Range("ba4") = HCON.Range("bb" & HC.Range("ba7") + 4) '=SI(BA6="";"ELEGIR MES";ELEGIR(BA6+1;CON!BA4;CON!BA5;CON!BA6;CON!BA7;CON!BA8;CON!BA9;CON!BA10;CON!BA11;CON!BA12;CON!BA13;CON!BA14;CON!BA15))
    HC.Range("bd7") = DateSerial(HC.Range("ba7") + 2015, HC.Range("ba6") + 2, 1) '=FECHA(BA7+2015;BA6+2;1)
    HC.Range("ba5") = HC.Range("ba7") * 12 + MesActual + 1  '=(BA7)*12+BA6+1)
    HC.Range("ba8") = 500 * HC.Range("ba5") + 1 '=500*BA5+1
    HC.Range("bd3") = DateSerial(HC.Range("ba7") + 2015, HC.Range("ba6") + 1, 1) '=FECHA(BA7+2015;BA6+1;1)
    If Weekday(HC.Range("bd3"), vbMonday) > 4 Then '=SI(DIASEM(BD3;2)>4;BD3+8-DIASEM(BD3;2);BD3-DIASEM(BD3;2)+1)
        HC.Range("bd4") = HC.Range("bd3") + 8 - Weekday(HC.Range("bd3"), vbMonday)
    Else
        HC.Range("bd4") = HC.Range("bd3") - Weekday(HC.Range("bd3"), vbMonday) + 1
    End If
    If Weekday(HC.Range("bd7"), vbMonday) > 4 Then '=SI(DIASEM(BD7;2)>4;BD7+8-DIASEM(BD7;2);BD7-DIASEM(BD7;2)+1)-1
        HC.Range("bd5") = HC.Range("bd7") + 8 - Weekday(HC.Range("bd7"), vbMonday) - 1
    Else
        HC.Range("bd5") = HC.Range("bd7") - Weekday(HC.Range("bd7"), vbMonday)
    End If
    HC.Range("bd6") = HC.Range("BD5") - HC.Range("BD4") + 1 '=BD5-BD4+1
    HC.Range("bd8") = HC.Range("bd6") + 12 '=BD6+12
    HC.Range("BV12") = (HC.Range("bd4") - 42065) / 7 '=(M13-42065)/7
    If Weekday(DateSerial(HC.Range("ba7") + 2015, HC.Range("ba6"), 1), vbMonday) > 4 Then  '=BD4-SI(DIASEM(FECHA(BA7+2015;BA6;1);2)>4;FECHA(BA7+2015;BA6;1)+8-DIASEM(FECHA(BA7+2015;BA6;1);2);FECHA(BA7+2015;BA6;1)-DIASEM(FECHA(BA7+2015;BA6;1);2)+1)
        HC.Range("bd9") = HC.Range("bd4") - (DateSerial(HC.Range("ba7") + 2015, HC.Range("ba6"), 1) + 8 - Weekday(DateSerial(HC.Range("ba7") + 2015, HC.Range("ba6"), 1), vbMonday))
    Else
        HC.Range("bd9") = HC.Range("bd4") - (DateSerial(HC.Range("ba7") + 2015, HC.Range("ba6"), 1) - Weekday(DateSerial(HC.Range("ba7") + 2015, HC.Range("ba6"), 1), vbMonday) + 1)
    End If
    'Celdas de vacaciones
    HC.Range("bg6") = DateSerial(HC.Range("ba4"), 6, 15) '=FECHA(BA4;6;15)
    HC.Range("bg7") = DateSerial(HC.Range("ba4"), 7, 16) '=FECHA(BA4;7;16)
    HC.Range("bg8") = DateSerial(HC.Range("ba4"), 8, 16) '=FECHA(BA4;8;16)
    HC.Range("bg9") = DateSerial(HC.Range("ba4"), 9, 16) '=FECHA(BA4;9;15)
    HC.Range("bh6") = HCON.Range("h" & (HC.Range("ba4") - 2015) * 8 + 147) '=INDIRECTO("con!h" & ($BA$4-2015)*8+147)
    HC.Range("bh7") = HCON.Range("h" & (HC.Range("ba4") - 2015) * 8 + 148)
    HC.Range("bh8") = HCON.Range("h" & (HC.Range("ba4") - 2015) * 8 + 149)
    HC.Range("bh9") = HCON.Range("h" & (HC.Range("ba4") - 2015) * 8 + 150) + 1
    If HC.Range("ba6") = 0 Then '=INDIRECTO("con!h" & (SI(BA6=0;$BA$4-2016;$BA$4-2015))*8+151)
        HC.Range("bi6") = HCON.Range("h" & (HC.Range("ba4") - 2016) * 8 + 151)
        HC.Range("bi7") = HCON.Range("h" & (HC.Range("ba4") - 2016) * 8 + 152)
        HC.Range("bi8") = HCON.Range("h" & (HC.Range("ba4") - 2016) * 8 + 153)
        HC.Range("bi9") = HCON.Range("h" & (HC.Range("ba4") - 2016) * 8 + 154) + 1
    Else
        HC.Range("bi6") = HCON.Range("h" & (HC.Range("ba4") - 2015) * 8 + 151)
        HC.Range("bi7") = HCON.Range("h" & (HC.Range("ba4") - 2015) * 8 + 152)
        HC.Range("bi8") = HCON.Range("h" & (HC.Range("ba4") - 2015) * 8 + 153)
        HC.Range("bi9") = HCON.Range("h" & (HC.Range("ba4") - 2015) * 8 + 154) + 1
    End If
    HC.Range("h321") = DateSerial(Year(HC.Range("bd4")), 12, 25)
    If HC.Range("ba3") = "ENERO" Then HC.Range("h323") = DateSerial(HC.Range("ba4") - 1, 12, 31) + 1 Else HC.Range("h323") = DateSerial(HC.Range("ba4"), 12, 31) + 1
    HC.Range("h326") = DateSerial(HC.Range("ba4"), 6, 15)
    HC.Range("h327") = DateSerial(HC.Range("ba4"), 9, 15)
    If HC.Range("ba5") Mod 2 = 0 Then HC.Range("ay3") = 2 Else HC.Range("ay3") = 1 '=SI(RESTO(BA5;2)=0;1;2)
    If HC.Range("ay3") = 1 Then HC.Range("ay5") = 2 Else HC.Range("ay5") = 502 '=SI(AY3=1;2;502)
    If HC.Range("ay3") = 1 Then HC.Range("ay6") = 301 Else HC.Range("ay6") = 801 '=SI(AY3=1;301;801)
End If
HC.Range("e3") = " " & HC.Range("ba3") & " - " & HC.Range("ba4")
'----------------------------------------------------------------

'HC.Calculate
MesAbsoluto = HC.Range("ba5")
fila = HC.Range("BA8").Value
Dim ComBorrar As Comment
'For Each ComBorrar In HC.Comments
'    ComBorrar.Delete
'Next
'Formatear por si acaso
HC.Range("ch14:ch313").NumberFormat = "@"
HC.Range("cj14:df313").NumberFormat = "@"
HC.Range("ci14:ci313").NumberFormat = 0
'CASO CUADRANTE NUEVO
If HBDC.Range("A" & fila - 1).Value = "" Then
    If HC.Range("ba1") = "SI" Then ' si cuadrante por primera vez, no mostrar pregunta
        msg = 1
    End If
    HC.Range("dg14:DU313").ClearContents
    HBDC.Range("A1:BU305").Copy
    HC.Range("M14:CG318").PasteSpecial Paste:=xlPasteAll
    HC.Range("CV14:DB313").ClearContents
    HC.Range("DO14:DO313").ClearContents
    HC.Range("DF14:DF313").ClearContents
    HC.Range("cv363:ec386").ClearContents 'Los Contar especificos
    'restablecer filtros por defecto
    HC.Range("g11") = "TODAS"
    HC.Range("i11") = "TODOS"
    'Quitar los manuales
    For p = 14 To 313
        If HC.Range("cj" & p) = "MANUAL" Then HC.Range("cj" & p) = ""
    Next
    'CASO ESPECIAL -  AVISO EN ABRIL PARA TENER LAS VACACIONES GRABADAS
    If HC.Range("BA3") = "ABRIL" Then
        If HC.Range("bd6") = 28 Then
            HC.Range("al317").AddComment ("Fecha limite para grabar vacaciones de verano")
            HC.Range("al317").Value = "Fecha limite para grabar vacaciones de verano"
        ElseIf HC.Range("bd6") = 35 Then
            HC.Range("as317").AddComment ("Fecha limite para grabar vacaciones de verano")
            HC.Range("as317").Value = "Fecha limite para grabar vacaciones de verano"
        End If
    End If
'CASO CARGAR CUADRANTE
Else
    HC.Range("dg14:DU313").ClearContents
    HC.Range("M14:DF318").Value = HBDC.Range("A" & fila & ":CT" & fila + 304).Value
    'Cargar Comentario de las Personas
    HC.Range("h14:h313").ClearComments
    For a = 14 To 313
        If HBDC.Range("CU" & fila - 14 + a) <> "" Then
            HC.Range("h" & a).AddComment (HBDC.Range("CU" & fila - 14 + a).Value)
            With HC.Range("h" & a).Comment.Shape
                .Fill.ForeColor.RGB = RGB(200, 255, 200)
                .Placement = xlMove
                .TextFrame.Characters(0, 250).Font.Size = 10
                .Height = 120
                .Width = 120
            End With
        End If
    Next
    'CARGAR LAS ESTRATEGIAS Si existen, si no dejarlas intactas
    If Application.WorksheetFunction.CountA(HBDC.Range("a" & fila + 305 & ":a" & fila + 305 + 23)) > 0 Then
        HBDC.Range("a" & fila + 305 & ":aw" & fila + 305 + 23).Copy Destination:=HC.Range("ci363:ee386")
    End If
    'Comprobar si esta vacio
    'If Application.WorksheetFunction.CountA(HC.Range("cm14:cm313")) = 0 And Actuali = True Then Msg = MsgBox("Este cuadrante ya estaba creado pero esta completamente vacio. Es posible que lo hayas creado desde un punto no deseado. Recomiendo que: 1|fffd| elimines este mas desde el menu, 2|fffd| selecciona un mes con los datos mas recientes, 3|fffd| Selecciones nuevamente este mes para crear un cuadrante con los ultimos datos.", vbCritical, "ANOMALIA")
End If
'COMPONER EL MES
HC.Range("H14:J313").Value = HC.Range("CM14:CO313").Value

With HC.Range("m13:au13").Borders(xlEdgeBottom)
    .Weight = xlThick
    .ColorIndex = 10
End With
'CARGAR COMENTARIOS DEL MES
HC.CargaComentariosMes
HC.Range("bd1") = False
On Error Resume Next
For Each come In HC.Range("m12:ay313")
    come.Comment.Visible = mostrar
    come.Comment.Shape.TextFrame.AutoSize = True
Next
On Error GoTo 0
'VALIDACION
Application.CalculateFull
HC.Range("ay8") = HC.Range("e3")
HC.Range("ay9") = HVAL.Range("a" & HC.Range("ay5") - 1)
If HVAL.Range("a" & HC.Range("ay5") - 1) = HC.Range("ba3") & HC.Range("ba4") Then
    HC.Range("ay1") = "VALIDADO"
    If HVAL.Range("c" & HC.Range("ay5") - 1) <> "" Then
        HC.Range("ay12") = HVAL.Range("c" & HC.Range("ay5") - 1)
        HC.ValLock.BorderStyle = fmBorderStyleSingle
        HC.ValLock.BorderColor = RGB(255, 0, 0)
    Else
        HC.Range("ay12") = ""
        HC.ValLock.BorderStyle = fmBorderStyleNone
    End If
Else
    HC.Range("ay1") = "NO"
    HC.Range("ay12") = ""
    HC.ValLock.BorderStyle = fmBorderStyleNone
    HC.ImgValidacion.Picture = HC.SemRojo.Picture
End If
'RECALCULAR ---------------------------------------------
HC.Refrescar -1 * CInt(Guardar)
'MOSTRAR MES ANTERIOR
HC.Range("L14:L313").ClearComments
For a = 14 To 313
    If HC.Range("cj" & a).Value <> "NO" And HC.Range("h" & a).Value <> "" And HC.Range("dk" & a) <> "" Then
    If a = 83 Then
        pAPA = 1
    End If
        MesAnterior = ""
        MesA = HC.Range("bd9")
        On Error Resume Next
        For d = 1 To MesA
            MesAnterior = MesAnterior & Replace(HBDC.Cells(HC.Range("DK" & a), d).Value, Chr(10), "  ") & String(22 - Len(HBDC.Cells(HC.Range("DK" & a), d)) * 2, " ")
            If d Mod 7 = 0 Then MesAnterior = MesAnterior & vbCrLf
        Next d
        On Error GoTo 0
        HC.Range("L" & a).AddComment (UCase(Format(HC.Range("bd3") - 1, "MMMM-yyyy")) & ":" & vbCrLf & _
        "( L )               ( M )               ( X )               ( J )               ( V )               ( S )               ( D )" & vbCrLf & MesAnterior)
        With HC.Range("L" & a).Comment.Shape
                .Placement = xlMove
                .Fill.ForeColor.RGB = RGB(255, 204, 150)
                .Height = 85
                .Width = 500
                .TextFrame.Characters().Font.Bold = True
        End With
    End If
Next a
'Funcion de marcar los dias nombrados
HC.DiasNombrados
HC.BarraDias
'Funcion de deshacer---------------------------
HC.RestableceDeshacer
'-----------------------------------------------
HC.Range("ba1") = "NO" ' Establece que ya esta usado
HC.VerEstrategias
HC.SpinDespCortina.Max = HC.Range("bd6")
'ActualizaCortinas
HC.ColumnaCalculos 6
HC.CambiarFiltroDato HC.Range("g13"), 7
If HC.Range("CN10") = 1 Then
    For extras = 1 To 4
        HC.ColumnaCalculos extras
        HC.CambiarFiltroDato HC.Cells(13, extras), extras
    Next
End If
HC.CVisual HC.Range("m14").ColumnWidth
Application.CutCopyMode = False
If RAPIDAS.Visible = True Then RAPIDAS.Bloquea 0
HC.Range("M14").Select
Set RangoSeleccionado = HC.Range("M14")
CapturaAlMover ActiveCell
fallo:
HC.SemAmarillo.Visible = False
HC.Semverde.Visible = False
HC.SemRojo.Visible = False
'HC.aplicafilas
AplicaFiltrosVer
Application.ScreenUpdating = True
Application.EnableEvents = True
End Sub
Sub recupar_mes()
If HC.FilterMode = True Then HC.ShowAllData
HC.Cambio_mes HC.Range("BA6").Value, HC.Range("BA7").Value, False, True
End Sub
Sub CargaComentariosMes()
HC.Range("m12:au12").ClearComments ' comentarios de los dias
For cdia = 1 To 35
    If HC.Cells(317, cdia + 12) <> "" Then
        HC.Cells(12, cdia + 12).AddComment (HC.Cells(317, cdia + 12).Text)
        With HC.Cells(12, 12 + cdia).Comment.Shape
            .Placement = xlMove
            .TextFrame.AutoSize = True
            .Fill.ForeColor.RGB = RGB(255, 153, 204)
            .TextFrame.Characters().Font.Size = 10
            .TextFrame.Characters().Font.Bold = True
        End With
    End If
Next
End Sub
Sub DiasNombrados()
For n = 1 To HC.Range("bd6")
    If HC.Cells(13, 13) <> "" Then
        fila = (HC.Cells(13, n + 12) - DateSerial(Year(HC.Cells(13, n + 12)), 1, 0)) * 100 + 1
        If HBDN.Range("a" & fila).Value = HC.Cells(13, n + 12) Then
            HC.Cells(11, n + 12).Interior.ColorIndex = 4
        Else
            HC.Cells(11, n + 12).Interior.ColorIndex = HCON.Cells(18, 99 + HCON.Range("CV16")).Value
        End If
    End If
Next n
End Sub
Sub BarraDias()
On Error Resume Next
For d = 13 To HC.Range("bd6") + 12
    'Domingos y sabados
    If HC.Cells(12, d) = "S" Then ' Sabados
        HC.Range(HC.Cells(12, d), HC.Cells(13, d)).Interior.Pattern = xlPatternChecker
        HC.Range(HC.Cells(12, d), HC.Cells(13, d)).Interior.PatternColorIndex = 10
        HC.Range(HC.Cells(12, d), HC.Cells(13, d)).Interior.ColorIndex = 50
        HC.Range(HC.Cells(12, d), HC.Cells(13, d)).Font.ColorIndex = 2
    ElseIf HC.Cells(12, d) = "D" Then ' Domingos
        HC.Range(HC.Cells(12, d), HC.Cells(13, d)).Interior.Pattern = xlPatternChecker
        HC.Range(HC.Cells(12, d), HC.Cells(13, d)).Interior.PatternColorIndex = 10
        HC.Range(HC.Cells(12, d), HC.Cells(12, d)).Font.ColorIndex = 3
        HC.Range(HC.Cells(13, d), HC.Cells(13, d)).Font.ColorIndex = 2
        HC.Range(HC.Cells(12, d), HC.Cells(13, d)).Interior.ColorIndex = 50
    Else
        HC.Range(HC.Cells(12, d), HC.Cells(13, d)).Interior.Pattern = xlPatternNone
        HC.Range(HC.Cells(12, d), HC.Cells(13, d)).Interior.ColorIndex = 50
        HC.Range(HC.Cells(12, d), HC.Cells(13, d)).Font.ColorIndex = 2
    End If
    'Festivos, especial consideracion y concidente con hoy
    
    If HC.Cells(322, d) = "F" Then ' Dia Festivo
        HC.Range(HC.Cells(12, d), HC.Cells(13, d)).Interior.Pattern = xlPatternChecker
        HC.Range(HC.Cells(12, d), HC.Cells(13, d)).Interior.PatternColorIndex = 54
        HC.Range(HC.Cells(12, d), HC.Cells(13, d)).Interior.ColorIndex = 9
        HC.Range(HC.Cells(13, d), HC.Cells(13, d)).Font.ColorIndex = 3
    ElseIf HC.Cells(322, d) = "S" Then 'Especial consideracion
        HC.Range(HC.Cells(12, d), HC.Cells(12, d)).Interior.ColorIndex = 2
        HC.Range(HC.Cells(12, d), HC.Cells(12, d)).Font.ColorIndex = 30
        HC.Range(HC.Cells(12, d), HC.Cells(12, d)).Interior.Pattern = xlPatternDown
        HC.Range(HC.Cells(12, d), HC.Cells(12, d)).Interior.PatternColorIndex = 4
    End If
    'Primer y tercer turno
    If (HC.Cells(13, d) >= HC.Range("bg6") And HC.Cells(13, d) < HC.Range("bg7")) Or (HC.Cells(13, d) >= HC.Range("bg8") And HC.Cells(13, d) < HC.Range("bg9")) Or (HC.Cells(13, d) >= HC.Range("bh6") And HC.Cells(13, d) < HC.Range("bh7")) Or (HC.Cells(13, d) >= HC.Range("bh8") And HC.Cells(13, d) < HC.Range("bh9")) Or (HC.Cells(13, d) >= HC.Range("bi6") And HC.Cells(13, d) < HC.Range("bi7")) Or (HC.Cells(13, d) >= HC.Range("bi8") And HC.Cells(13, d) < HC.Range("bi9")) Then
        HC.Cells(13, d).Interior.ColorIndex = 43
    'Segundo turno
    ElseIf (HC.Cells(13, d) >= HC.Range("bg7") And HC.Cells(13, d) < HC.Range("bg8")) Or (HC.Cells(13, d) >= HC.Range("bh7") And HC.Cells(13, d) < HC.Range("bh8")) Or (HC.Cells(13, d) >= HC.Range("bi7") And HC.Cells(13, d) < HC.Range("bi8")) Then
        HC.Cells(13, d).Interior.ColorIndex = 14
    End If
    'hoy
    If HC.Cells(13, d) = Date Then
        HC.Range(HC.Cells(12, d), HC.Cells(13, d)).Interior.ColorIndex = 44
        HC.Range(HC.Cells(12, d), HC.Cells(13, d)).Font.ColorIndex = 1
    End If
Next
End Sub
Private Sub VistaTodasEstrategias()
'Application.EnableEvents = False
'Application.ScreenUpdating = False
If Application.Calculation = xlCalculationAutomatic Then Application.Calculation = xlCalculationManual
HC.Range("m414:au437").Font.Size = 12
For n = 363 To 386
    If HC.Range("ci" & n) <> "" Then
        If HC.Range("cj" & n) = "C" Then
            TIPO = "(R) "
        ElseIf HC.Range("cj" & n) = "N" Then
            TIPO = "(N) "
        ElseIf HC.Range("cj" & n) = "O" Then
            TIPO = "(O) "
        ElseIf HC.Range("cj" & n) = "P" Then
            TIPO = "(P) "
        ElseIf HC.Range("cj" & n) = "D" Then
            TIPO = "(D) "
        ElseIf HC.Range("cj" & n) = "CI" Then
            TIPO = "(#R) "
        ElseIf HC.Range("cj" & n) = "NI" Then
            TIPO = "(#N) "
        ElseIf HC.Range("cj" & n) = "OI" Then
            TIPO = "(#O) "
        ElseIf HC.Range("cj" & n) = "PI" Then
            TIPO = "(#P) "
        ElseIf HC.Range("cj" & n) = "DI" Then
            TIPO = "(#D) "
        End If
        If HC.Range("cu" & n) = "" Then tipo2 = "" Else tipo2 = " (" & HC.Range("cu" & n) & ")"
        HC.Range("i" & n + 51) = TIPO & HC.Range("ci" & n) & tipo2
        HC.Range("i" & n + 51).Interior.Color = HC.Range("ci" & n).Interior.Color
        HC.Range("i" & n + 51).Font.Color = HC.Range("ci" & n).Font.Color
        HC.Range("m" & n + 51 & ":au" & n + 51).ClearContents
        For d = 13 To HC.Range("bd8")
            Estrategia n + 51, n - 360, d
        Next d
    Else
        'HC.Range("m" & n & ":au" & n).ClearContents
        HC.Range("i" & n + 51) = ""
        HC.Range("i" & n + 51).Interior.ColorIndex = 35
        HC.Range("i" & n + 51).Font.ColorIndex = 10
        HC.Range("m" & n + 51 & ":au" & n + 51).ClearContents
        HC.Range("m" & n + 51 & ":au" & n + 51).Interior.ColorIndex = 35
        HC.Range("m" & n + 51 & ":au" & n + 51).Font.ColorIndex = 10
    End If
Next n
'Application.EnableEvents = True
'Application.ScreenUpdating = True
End Sub

Sub VerEstrategias()
If Application.Calculation = xlCalculationAutomatic Then Application.Calculation = xlCalculationManual
If HC.Range("a414").EntireRow.Hidden = False Then
    VistaTodasEstrategias
Else
    If HC.Range("a6").EntireRow.Hidden = True Then fin = 6 Else fin = 10
    HC.Range("m3:au10").Font.Size = 12
    For n = 3 To fin
        If HC.Range("ci" & 360 + n + HC.BarraEstrategia) <> "" Then
            If HC.Range("cj" & 360 + n + HC.BarraEstrategia) = "C" Then
                TIPO = "(R) "
            ElseIf HC.Range("cj" & 360 + n + HC.BarraEstrategia) = "N" Then
                TIPO = "(N) "
            ElseIf HC.Range("cj" & 360 + n + HC.BarraEstrategia) = "O" Then
                TIPO = "(O) "
            ElseIf HC.Range("cj" & 360 + n + HC.BarraEstrategia) = "P" Then
                TIPO = "(P) "
            ElseIf HC.Range("cj" & 360 + n + HC.BarraEstrategia) = "D" Then
                TIPO = "(D) "
            ElseIf HC.Range("cj" & 360 + n + HC.BarraEstrategia) = "CI" Then
                TIPO = "(#R) "
            ElseIf HC.Range("cj" & 360 + n + HC.BarraEstrategia) = "NI" Then
                TIPO = "(#N) "
            ElseIf HC.Range("cj" & 360 + n + HC.BarraEstrategia) = "OI" Then
                TIPO = "(#O) "
            ElseIf HC.Range("cj" & 360 + n + HC.BarraEstrategia) = "PI" Then
                TIPO = "(#P) "
            ElseIf HC.Range("cj" & 360 + n + HC.BarraEstrategia) = "DI" Then
                TIPO = "(#D) "
            End If
            If HC.Range("cu" & 360 + n + HC.BarraEstrategia) = "" Then tipo2 = "" Else tipo2 = " (" & HC.Range("cu" & 360 + n + HC.BarraEstrategia) & ")"
            HC.Range("i" & n) = TIPO & HC.Range("ci" & 360 + n + HC.BarraEstrategia) & tipo2
            HC.Range("i" & n).Interior.Color = HC.Range("ci" & 360 + n + HC.BarraEstrategia).Interior.Color
            HC.Range("i" & n).Font.Color = HC.Range("ci" & 360 + n + HC.BarraEstrategia).Font.Color
            HC.Range("m" & n & ":au" & n).ClearContents
            NumCode1 = ""
            NumCode2 = ""
            NumCode3 = ""
            For d = 13 To HC.Range("bd8")
                Estrategia n, n + HC.BarraEstrategia, d
            Next d
            'Mostrar recuentos totales
            If HC.Range("cj" & 360 + n + HC.BarraEstrategia) = "C" Or HC.Range("cj" & 360 + n + HC.BarraEstrategia) = "CI" Then
                If NumCode1 <> 0 Then
                    If NumCode2 <> "" Then NumCode2 = " / " & NumCode2
                    If NumCode3 <> "" Then NumCode3 = " / " & NumCode3
                    HC.Range("av" & n) = NumCode1 & NumCode2 & NumCode3
                Else
                    HC.Range("av" & n) = ""
                End If
            Else
                HC.Range("av" & n) = ""
            End If
        Else
            'HC.Range("m" & n & ":au" & n).ClearContents
            HC.Range("i" & n) = ""
            HC.Range("i" & n).Interior.ColorIndex = 35
            HC.Range("i" & n).Font.ColorIndex = 10
            HC.Range("m" & n & ":au" & n).ClearContents
            HC.Range("m" & n & ":au" & n).Interior.ColorIndex = 35
            HC.Range("m" & n & ":au" & n).Font.ColorIndex = 10
        End If
    Next n
End If
End Sub
Sub Estrategia(o, f, c)
Dim CodigoS(1 To 20) As String
Dim CodigoN As String
Dim Area As String
CSiMenos = 3
CSiMas = 51
If HC.Range("CJ" & 360 + f) = "C" Or HC.Range("CJ" & 360 + f) = "CI" Then ' ESTRATEGIA DE RECUENTOS
    nombrados1 = 0
    nombrados2 = 0
    nombrados3 = 0
    Code1 = HC.Range("ck" & 360 + f)
    Code2 = HC.Range("cl" & 360 + f)
    Code3 = HC.Range("cm" & 360 + f)
    Min1 = HC.Range("cn" & 360 + f)
    Min2 = HC.Range("co" & 360 + f)
    Min3 = HC.Range("cp" & 360 + f)
    Max1 = HC.Range("cq" & 360 + f)
    Max2 = HC.Range("cr" & 360 + f)
    Max3 = HC.Range("cs" & 360 + f)
    Erase CodigoS
    Paso = 0
    divisor = Val(HC.Range("cv" & 360 + f)) + 1
    Area = HC.Range("cu" & 360 + f)
    If Code1 <> "" Then
        If NumCode1 = "" Then NumCode1 = 0
        For num = 1 To Len(Code1)
            If Mid(Code1, num, 1) = "#" Then
                Paso = Paso + 1
                CodigoS(Paso) = (Mid(Code1, num + 1, InStr(num + 1, Code1, "|") - num - 1))
            End If
        Next
        For num = 1 To UBound(CodigoS)
            If CodigoS(num) <> "" Then nombrados1 = nombrados1 + ContarServicios(CodigoS(num), c, Area)
        Next
        nombrados1 = Round(nombrados1 / divisor, 1)
        NumCode1 = NumCode1 + nombrados1
    End If
    
    Erase CodigoS
    Paso = 0
    If Code2 <> "" Then
        If NumCode2 = "" Then NumCode2 = 0
        For num = 1 To Len(Code2)
            If Mid(Code2, num, 1) = "#" Then
                Paso = Paso + 1
                CodigoS(Paso) = (Mid(Code2, num + 1, InStr(num + 1, Code2, "|") - num - 1))
            End If
        Next
        For num = 1 To 10
            If CodigoS(num) <> "" Then nombrados2 = nombrados2 + ContarServicios(CodigoS(num), c, Area)
        Next
        nombrados2 = Round(nombrados2 / divisor, 1)
        NumCode2 = NumCode2 + nombrados2
    End If
    Erase CodigoS
    Paso = 0
    If Code3 <> "" Then
        If NumCode3 = "" Then NumCode3 = 0
        For num = 1 To Len(Code3)
            If Mid(Code3, num, 1) = "#" Then
                Paso = Paso + 1
                CodigoS(Paso) = (Mid(Code3, num + 1, InStr(num + 1, Code3, "|") - num - 1))
            End If
        Next
        For num = 1 To 10
            If CodigoS(num) <> "" Then nombrados3 = nombrados3 + ContarServicios(CodigoS(num), c, Area)
        Next
        nombrados3 = Round(nombrados3 / divisor, 1)
        NumCode3 = NumCode3 + nombrados3
    End If
    'Caso que solo se cuenta 1 servicio y si esta vavcio no muestra 0
    If Code1 <> "" Then
        If nombrados1 = 0 And Min1 = "" And Code2 = "" And Code3 = "" Then
            parte1 = ""
        Else
            parte1 = nombrados1
        End If
    End If
    'Caso que se cuenta 2 servicios y si estan a 0 se muestra 0/0
    If Code2 <> "" Then
        parte2 = "/" & nombrados2
    End If
    'Caso que se cuenta 3 servicios y si estan a 0 se muestra 0/0/0
    If Code3 <> "" Then
        parte3 = "/" & nombrados3
    End If
    HC.Cells(o, c) = parte1 & parte2 & parte3
    'Colorear
    HC.Cells(o, c).Font.Size = 12
    HC.Cells(o, c).Font.ColorIndex = HC.Cells(o, 9).Font.ColorIndex
    HC.Cells(o, c).Interior.ColorIndex = HC.Cells(o, 9).Interior.ColorIndex
    'Colorear los minimos
    If Min1 <> "" And Code1 <> "" Then
        If nombrados1 < Val(Min1) Then
            HC.Cells(o, c).Characters(1, Len(parte1)).Font.ColorIndex = CSiMenos
        End If
    End If
    If Min2 <> "" And Code2 <> "" Then
        If nombrados2 < Val(Min2) Then
            HC.Cells(o, c).Characters(Len(parte1) + 2, Len(parte2) - 1).Font.ColorIndex = CSiMenos
        End If
    End If
    If Min3 <> "" And Code3 <> "" Then
        If nombrados3 < Val(Min3) Then
            HC.Cells(o, c).Characters(Len(parte1) + Len(parte2) + 2, Len(parte3) - 1).Font.ColorIndex = CSiMenos
        End If
    End If
    'Colorear Maximos
    If Max1 <> "" And Code1 <> "" Then
        If nombrados1 > Val(Max1) Then
            HC.Cells(o, c).Characters(1, Len(parte1)).Font.ColorIndex = CSiMas
        End If
    End If
    If Max2 <> "" And Code2 <> "" Then
        If nombrados2 > Val(Max2) Then
            HC.Cells(o, c).Characters(Len(parte1) + 2, Len(parte2) - 1).Font.ColorIndex = CSiMas
        End If
    End If
    If Max3 <> "" And Code3 <> "" Then
        If nombrados3 > Val(Max3) Then
            HC.Cells(o, c).Characters(Len(parte1) + Len(parte2) + 2, Len(parte3) - 1).Font.ColorIndex = CSiMas
        End If
    End If
ElseIf HC.Range("CJ" & 360 + f) = "N" Or HC.Range("CJ" & 360 + f) = "NI" Then '  ESTRATEGIA DE NECESIDADES
    nombrados1 = 0
    Code1 = HC.Range("ck" & 360 + f)
    If Mid(Code1, 1, 1) = "@" Then
        Min1 = HC.Range("cn" & 360 + f)
        Max1 = HC.Range("cq" & 360 + f)
        If Min1 <> "" Then parte2 = " (" & Min1 & ")"
        If HC.Cells(360 + f, c + 88) <> "" Then
            parte2 = " (" & HC.Cells(360 + f, c + 88) & ")"
        End If
        CodigoN = Mid(Code1, 2, 10)
        Area = HC.Range("cu" & 360 + f)
        nombrados1 = ContarServicios(CodigoN, c, Area)
        divisor = Val(HC.Range("cv" & 360 + f)) + 1
        nombrados1 = Round(nombrados1 / divisor, 1)
        If nombrados1 = 0 And parte2 = "" Then parte1 = "" Else parte1 = nombrados1
        HC.Cells(o, c) = parte1 & parte2
        'Restablecer
        HC.Cells(o, c).Font.Size = 12
        HC.Cells(o, c).Font.ColorIndex = HC.Cells(o, 9).Font.ColorIndex
        HC.Cells(o, c).Interior.ColorIndex = HC.Cells(o, 9).Interior.ColorIndex
        'Formatear
        HC.Cells(o, c).Characters(Len(parte1) + 1, 5).Font.Size = 9
        'Colorear Manual , Alertas
        If HC.Cells(360 + f, c + 88) <> "" Then
            HC.Cells(o, c).Characters(Len(parte1) + 2, 5).Font.ColorIndex = 41
            If nombrados1 < HC.Cells(360 + f, c + 88) Then HC.Cells(o, c).Characters(1, Len(parte1)).Font.ColorIndex = CSiMenos
            If nombrados1 > HC.Cells(360 + f, c + 88) Then HC.Cells(o, c).Characters(1, Len(parte1)).Font.ColorIndex = CSiMas
        Else
            If nombrados1 < Val(Min1) And Min1 <> "" And HC.Range("ct" & 360 + f) = True Then HC.Cells(o, c).Characters(1, Len(parte1)).Font.ColorIndex = 3
        End If
        If nombrados1 > Val(Max1) And Max1 <> "" And HC.Range("ct" & 360 + f) = True Then HC.Cells(o, c).Characters(1, Len(parte1)).Font.ColorIndex = 3
    End If
ElseIf HC.Range("CJ" & 360 + f) = "O" Or HC.Range("CJ" & 360 + f) = "OI" Then ' ESTRATEGIA DE OPERACIONES
    If HC.Cells(360 + f, c + 88) <> "" Then
        HC.Cells(o, c).Interior.Color = HC.Range("cm" & 360 + f)
        HC.Cells(o, c) = "X"
    Else
        HC.Cells(o, c).Interior.ColorIndex = HC.Cells(o, 9).Interior.ColorIndex
    End If
    HC.Cells(o, c).Font.ColorIndex = HC.Cells(o, 9).Font.ColorIndex
ElseIf HC.Range("CJ" & 360 + f) = "P" Or HC.Range("CJ" & 360 + f) = "PI" Then ' ESTRATEGIA DE PLAN
    codeG = HC.Cells(360 + f, c + 88)
    HC.Cells(o, c).Font.ColorIndex = HC.Cells(o, 9).Font.ColorIndex
    HC.Cells(o, c).Interior.ColorIndex = HC.Cells(o, 9).Interior.ColorIndex
    Area = HC.Range("cu" & 360 + f)
    If codeG <> "" Then
        divisor = Val(HC.Range("cv" & 360 + f)) + 1
        Separador = HC.Cells(360 + f, 89)
        Codec = left(codeG, InStr(codeG, "#@") - 1)
        coden = Mid(codeG, InStr(codeG, "#@") + 2)
        HC.Cells(o, c) = Codec
        If InStr(Codec, Separador) > 0 Then
            Code1 = left(Codec, InStr(Codec, Separador) - 1)
            Codec = Mid(Codec, InStr(Codec, Separador) + 1, 50)
            If InStr(Codec, Separador) > 0 Then
                Code2 = left(Codec, InStr(Codec, Separador) - 1)
                Code3 = Mid(Codec, InStr(Codec, Separador) + 1, 50)
                num1 = ContarServicios(Code1, c, Area) / divisor
                num2 = ContarServicios(Code2, c, Area) / divisor
                num3 = ContarServicios(Code3, c, Area) / divisor
            Else
                Code2 = Codec
                num1 = ContarServicios(Code1, c, Area) / divisor
                num2 = ContarServicios(Code2, c, Area) / divisor
            End If
        Else
           Code1 = Codec
           num1 = ContarServicios(Code1, c, Area) / divisor
        End If
        Min1 = Mid(coden, 1, 2)
        Min2 = Mid(coden, 5, 2)
        Min3 = Mid(coden, 9, 2)
        Max1 = Mid(coden, 3, 2)
        Max2 = Mid(coden, 7, 2)
        Max3 = Mid(coden, 11, 2)
        If Min1 = "" Then Min1 = 0
        If Max1 = "" Then Max1 = 0
        If Min2 = "" Then Min2 = 0
        If Max2 = "" Then Max2 = 0
        If Min3 = "" Then Min3 = 0
        If Max3 = "" Then Max3 = 0
        If (Min1 > 0 And num1 < Int(Min1)) Then
            HC.Cells(o, c).Characters(1, Len(Code1)).Font.ColorIndex = CSiMenos
        ElseIf (Max1 > 0 And num1 > Int(Max1)) Then
            HC.Cells(o, c).Characters(1, Len(Code1)).Font.ColorIndex = CSiMas
        Else
            HC.Cells(o, c).Characters(1, Len(Code1)).Font.ColorIndex = HC.Cells(o, 9).Font.ColorIndex
        End If
        If (Min2 <> "00" And num2 < CInt(Min2)) Then
            HC.Cells(o, c).Characters(Len(Code1) + 2, Len(Code2)).Font.ColorIndex = CSiMenos
        ElseIf (Max2 <> "00" And num2 > CInt(Max2)) Then
            HC.Cells(o, c).Characters(Len(Code1) + 2, Len(Code2)).Font.ColorIndex = CSiMas
        Else
            HC.Cells(o, c).Characters(Len(Code1) + 2, Len(Code2)).Font.ColorIndex = HC.Cells(o, 9).Font.ColorIndex
        End If
        If (Min3 <> "00" And num3 < CInt(Min3)) Then
            HC.Cells(o, c).Characters(Len(Code1) + Len(Code2) + 3, Len(Code3)).Font.ColorIndex = CSiMenos
        ElseIf (Max3 <> "00" And num3 > CInt(Max3)) Then
            HC.Cells(o, c).Characters(Len(Code1) + Len(Code2) + 3, Len(Code3)).Font.ColorIndex = CSiMas
        Else
            HC.Cells(o, c).Characters(Len(Code1) + Len(Code2) + 3, Len(Code3)).Font.ColorIndex = HC.Cells(o, 9).Font.ColorIndex
        End If
    End If
ElseIf HC.Range("CJ" & 360 + f) = "D" Or HC.Range("CJ" & 360 + f) = "DI" Then ' ESTRATEGIA DE DISTRIBUCION
    NomObj = 0
    NombMuestra = 0
    CodeObj = HC.Range("ck" & 360 + f)
    CodeMuestra = HC.Range("cl" & 360 + f)
    Area = HC.Range("cu" & 360 + f)
    Erase CodigoS
    Paso = 0
    If CodeObj <> "" Then
        For num = 1 To Len(CodeObj)
            If Mid(CodeObj, num, 1) = "#" Then
                Paso = Paso + 1
                CodigoS(Paso) = (Mid(CodeObj, num + 1, InStr(num + 1, CodeObj, "|") - num - 1))
            End If
        Next
        For num = 1 To UBound(CodigoS)
            If CodigoS(num) <> "" Then NomObj = NomObj + ContarServicios(CodigoS(num), c, Area)
        Next
    End If
    Erase CodigoS
    Paso = 0
    If CodeMuestra <> "" Then
        For num = 1 To Len(CodeMuestra)
            If Mid(CodeMuestra, num, 1) = "#" Then
                Paso = Paso + 1
                CodigoS(Paso) = (Mid(CodeMuestra, num + 1, InStr(num + 1, CodeMuestra, "|") - num - 1))
            End If
        Next
        For num = 1 To 10
            If CodigoS(num) <> "" Then NombMuestra = NombMuestra + ContarServicios(CodigoS(num), c, Area)
        Next
    Else
        If Area = "" Then
            NombMuestra = Application.CountA(HC.Range(HC.Cells(14, c), HC.Cells(313, c))) - NomObj
        Else
            NombMuestra = Application.CountIf(HC.Range("cl14:cl313"), Area) - NomObj
        End If
    End If
    If NomObj = 0 Then 'Or NombMuestra = 0 Then
        HC.Cells(o, c) = Format(0, "0%")
    Else
        HC.Cells(o, c) = Format(NomObj / (NomObj + NombMuestra), "0%")
    End If
    HC.Cells(o, c).Font.ColorIndex = HC.Cells(o, 9).Font.ColorIndex
    HC.Cells(o, c).Interior.ColorIndex = HC.Cells(o, 9).Interior.ColorIndex
End If
End Sub
Function ContarServicios(CODIGO, col, Area As String) As Integer
tope = 313
If Area <> "" Then
    On Error Resume Next
    ContarServicios = Evaluate("sum((cl14:cl" & tope & "=""" & Area & """)*(" & HC.Range(HC.Cells(14, col), HC.Cells(tope, col)).Address & "=""" & CODIGO & """))")
    ContarServicios = ContarServicios + Evaluate("sum((cl14:cl" & tope & "=""" & Area & """)*(left(" & HC.Range(HC.Cells(14, col), HC.Cells(tope, col)).Address & "," & Len(CODIGO) + 1 & ")=""" & CODIGO & Chr(10) & """))")
    ContarServicios = ContarServicios + Evaluate("sum((cl14:cl" & tope & "=""" & Area & """)*(right(" & HC.Range(HC.Cells(14, col), HC.Cells(tope, col)).Address & "," & Len(CODIGO) + 1 & ")=""" & Chr(10) & CODIGO & """))")
Else
    ContarServicios = Application.WorksheetFunction.CountIf(HC.Range(HC.Cells(14, col), HC.Cells(tope, col)), CODIGO) _
    + Application.WorksheetFunction.CountIf(HC.Range(HC.Cells(14, col), HC.Cells(tope, col)), CODIGO & Chr(10) & "*") _
    + Application.WorksheetFunction.CountIf(HC.Range(HC.Cells(14, col), HC.Cells(tope, col)), "*" & Chr(10) & CODIGO)
End If
End Function
Sub VistaEstrategia(modo)
If modo = 1 Then
    Application.EnableEvents = False
    Application.ScreenUpdating = False
    HC.Range("a8:a10").EntireRow.Hidden = False
    HC.BtnCargarEstrategias.Visible = True
    HC.BtnEliminarEstrategias.Visible = True
    HC.SpinOrdenarEst.Visible = True
    HC.BtnCargarEstrategias.top = 107.25
    BtnEliminarEstrategias.top = 128.25
    HC.SpinOrdenarEst.top = 114.75
    HC.L1OptEst.Visible = True
    HC.L2OptEst.Visible = True
    HC.L3OptEst.Visible = True
    HC.L1OptEst.top = 111.75
    HC.L2OptEst.top = 131.25
    HC.L3OptEst.top = 119.25
    ActualizaCortinas
    With HC.Range("i414:au437")
        .ClearContents
        .Interior.ColorIndex = 15
    End With
    HC.Range("m3:au6").Locked = False
    BarraEstrategia.Height = 72 ' 114
    VerEstrategias
    Application.EnableEvents = True
    Application.ScreenUpdating = True
ElseIf modo = 2 Then
    Application.EnableEvents = False
    Application.ScreenUpdating = False
    HC.BtnCargarEstrategias.Visible = False
    HC.BtnEliminarEstrategias.Visible = False
    HC.SpinOrdenarEst.Visible = False
    HC.L1OptEst.Visible = False
    HC.L2OptEst.Visible = False
    HC.L3OptEst.Visible = False
    ActualizaCortinas
    With HC.Range("i414:au437")
        .ClearContents
        .Interior.ColorIndex = 15
    End With
    HC.Range("m3:au6").Locked = False
    HC.Range("a6:a7").EntireRow.Hidden = False
    BarraEstrategia.Height = 72
    VerEstrategias
    Application.EnableEvents = True
    Application.ScreenUpdating = True
ElseIf modo = 3 Then
    Application.EnableEvents = False
    Application.ScreenUpdating = False
    HC.BtnCargarEstrategias.Visible = False
    HC.BtnEliminarEstrategias.Visible = False
    HC.SpinOrdenarEst.Visible = False
    HC.L1OptEst.Visible = False
    HC.L2OptEst.Visible = False
    HC.L3OptEst.Visible = False
    ActualizaCortinas
    With HC.Range("i414:au437")
        .ClearContents
        .Interior.ColorIndex = 15
    End With
    HC.Range("m3:au6").Locked = False
    HC.Range("a6:a10").EntireRow.Hidden = True
    HC.Range("a414:a437").EntireRow.Hidden = True
    BarraEstrategia.Height = 43
    VerEstrategias
    AplicaFiltrosVer
    Application.EnableEvents = True
    Application.ScreenUpdating = True
ElseIf modo = 4 Then
    Application.EnableEvents = False
    Application.ScreenUpdating = False
    HC.BtnCargarEstrategias.Visible = False
    HC.BtnEliminarEstrategias.Visible = False
    HC.SpinOrdenarEst.Visible = False
    HC.L1OptEst.Visible = False
    HC.L2OptEst.Visible = False
    HC.L3OptEst.Visible = False
    ActualizaCortinas
    With HC.Range("i3:au6")
        .ClearContents
        .Interior.ColorIndex = 15
        .Font.ColorIndex = 2
        .Locked = True
    End With
    HC.Range("a6:a10").EntireRow.Hidden = True
    HC.Range("a414:a437").EntireRow.Hidden = False
    HC.Range("i3") = "--LAS ESTRATEGIAS"
    HC.Range("i4") = "SE MUESTRAN"
    HC.Range("i5") = "DEBAJO--"
    HC.Range("i414").Select
    BarraEstrategia.Height = 43
    VerEstrategias
    Application.EnableEvents = True
    Application.ScreenUpdating = True
End If
End Sub
Private Sub BarraEstrategia_Change()
Calculate
Application.EnableEvents = False
Application.ScreenUpdating = False
VerEstrategias
Application.EnableEvents = True
Application.ScreenUpdating = True
End Sub
Private Sub BtnCargarEstrategias_Click()
cuando = InputBox("Escribe la fecha ''mm/aaaa'' del cuadrante del que quieras cargar las estrategias:", "IMPORTAR ESTRATEGIAS DE OTRO MES", Format(HC.Range("m13") - 15, "mm/yyyy"))
If cuando = "" Then End
If IsDate(cuando) = False Then
    msg = MsgBox("No has introducido un formato de fecha correcto. El formato es mes/a|fffd|o.", vbCritical, "Error en la fecha")
    End
End If
If Year(cuando) < 2015 Then
    msg = MsgBox("No has introducido un formato de fecha correcto. El formato es mes/a|fffd|o.", vbCritical, "Error en la fecha")
    End
End If
mes = Month(cuando)
A|fffd|o = Year(cuando)
fila = ((A|fffd|o - 2015) * 12 + mes) * 500
If HBDC.Range("a" & fila) <> "" Then
    'importar datos de bdc
    Application.EnableEvents = False
    Application.ScreenUpdating = False
    despro HC
    'CARGAR LAS ESTRATEGIAS
    HBDC.Range("a" & fila + 306 & ":aw" & fila + 306 + 23).Copy Destination:=HC.Range("ci363:ee386")
    pro HC
    VerEstrategias
    Application.EnableEvents = True
    Application.ScreenUpdating = True
Else
    msg = MsgBox("El cuadrante seleccionado no existe", vbCritical, "Error en la fecha")
End If
End Sub
Private Sub BtnEliminarEstrategias_Click()
msg = MsgBox("|fffd|Eliminar todas los datos de las estrategias que se han introducido manualmente?" & vbCrLf & "Esto eliminar|fffd| los datos relativos a estrategias del tipo planes y necesidades. ", vbYesNo, "Borrar los minimos")
If msg = 6 Then
    Application.EnableEvents = False
    Application.ScreenUpdating = False
    HC.Range("cw363:ee386").ClearContents
    VerEstrategias
    Application.EnableEvents = True
    Application.ScreenUpdating = True
End If
End Sub
Private Sub SpinOrdenarEst_SpinUp()
If ActiveCell.Column = 9 And ActiveCell.Row >= 4 And ActiveCell.Row <= 10 Then
    Application.ScreenUpdating = False
    Application.EnableEvents = False
    HC.Range("ci" & ActiveCell.Row + 360 + HC.BarraEstrategia - 1 & ":ee" & ActiveCell.Row + 360 + HC.BarraEstrategia - 1).Copy Destination:=HC.Range("ci387:ee387")
    HC.Range("ci" & ActiveCell.Row + 360 + HC.BarraEstrategia & ":ee" & ActiveCell.Row + 360 + HC.BarraEstrategia).Copy HC.Range("ci" & ActiveCell.Row + 360 + HC.BarraEstrategia - 1 & ":ee" & ActiveCell.Row + 360 + HC.BarraEstrategia - 1)
    HC.Range("ci387:ee387").Copy Destination:=HC.Range("ci" & ActiveCell.Row + 360 + HC.BarraEstrategia & ":ee" & ActiveCell.Row + 360 + HC.BarraEstrategia)
    HC.Range("ci387:ee387").Clear
    VerEstrategias
    Application.EnableEvents = True
    Application.ScreenUpdating = True
End If
End Sub
Private Sub SpinOrdenarEst_SpinDown()
If ActiveCell.Column = 9 And ActiveCell.Row >= 4 And ActiveCell.Row <= 10 Then
    Application.ScreenUpdating = False
    Application.EnableEvents = False
    HC.Range("ci" & ActiveCell.Row + 360 + HC.BarraEstrategia + 1 & ":ee" & ActiveCell.Row + 360 + HC.BarraEstrategia + 1).Copy Destination:=HC.Range("ci387:ee387")
    HC.Range("ci" & ActiveCell.Row + 360 + HC.BarraEstrategia & ":ee" & ActiveCell.Row + 360 + HC.BarraEstrategia).Copy HC.Range("ci" & ActiveCell.Row + 360 + HC.BarraEstrategia + 1 & ":ee" & ActiveCell.Row + 360 + HC.BarraEstrategia + 1)
    HC.Range("ci387:ee387").Copy Destination:=HC.Range("ci" & ActiveCell.Row + 360 + HC.BarraEstrategia & ":ee" & ActiveCell.Row + 360 + HC.BarraEstrategia)
    HC.Range("ci387:ee387").Clear
    VerEstrategias
    Application.EnableEvents = True
    Application.ScreenUpdating = True
End If
End Sub
Private Sub SpinDespCortina_Change()
Application.ScreenUpdating = False
ActualizaCortinas
Application.ScreenUpdating = True
End Sub
Private Sub SpinDespCortina_Scroll()
Application.ScreenUpdating = False
ActualizaCortinas
Application.ScreenUpdating = True
End Sub
Private Sub SpinAnchoCortina_Change()
Application.ScreenUpdating = False
ActualizaCortinas
Application.ScreenUpdating = True
End Sub

Sub ActualizaCortinas()
If HC.Shapes("Cortinai").Visible = True Then
    SpinDespCortina.Visible = True
    SpinAnchoCortina.Visible = True
    SpinDespCortina.left = HC.Range("l13").left + 10
    SpinDespCortina.Width = HC.Range("m13").Width * (SpinDespCortina.Max + 1)
    SpinDespCortina.top = HC.Range("l1").top + 14
    With HC.Shapes("Cortinai")
        .Visible = True
        .top = HC.Range("m3").top
        .left = HC.Range("k13").left
        .Width = HC.Range("k13").Width * (SpinDespCortina + 1)
        .Height = HC.Range("m314").top - HC.Range("m3").top
    End With
    SpinAnchoCortina.top = HC.Range("k3").top
    SpinAnchoCortina.left = HC.Range("m13").left + HC.Range("m13").Width * (SpinDespCortina - 3)
    If SpinAnchoCortina + SpinDespCortina - 2 < SpinDespCortina.Max Then
    With HC.Shapes("Cortinad")
        .Visible = True
        .top = HC.Range("m3").top
        .left = HC.Cells(13, SpinAnchoCortina + 2 + SpinDespCortina + 11).left
        .Width = HC.Cells(13, HC.Range("bd8") + 1).left - (HC.Cells(13, SpinAnchoCortina + SpinDespCortina + 12).left)
        .Height = HC.Range("m314").top - HC.Range("m3").top
    End With
    
    
    Else
    SpinAnchoCortina = SpinAnchoCortina - 1
    End If
Else
    HC.Shapes("Cortinai").Visible = False
    HC.Shapes("Cortinad").Visible = False
    SpinDespCortina.Visible = False
    SpinAnchoCortina.Visible = False
End If
End Sub
'Iconos sin comando y que no sean editables
Private Sub nadaparashapes()
'vacio
End Sub
Sub RecomponerBDC()
Application.ScreenUpdating = False
Application.Calculation = xlCalculationManual
HBDC.Range("a500:ct65536").ClearFormats
HBDC.Range("a1:ct300").Copy
For c = 1 To 130
    FC = c * 500
    If HBDC.Range("a" & FC) <> "" Then
        HBDC.Range("a" & FC + 1 & ":ct" & FC + 300).PasteSpecial xlPasteFormats
    End If
Next
Arregla_Objetos
Application.ScreenUpdating = True
End Sub
Sub RECALCULARTODO(Optional obligado)
If obligado = True Then
    msg = MsgBox("ESTO PUEDE LLEVAR BASTANTE TIEMPO (Mas de 1 minuto), dependera de la catidad de cuadrantes existentes, del numero de personas y de la potencia del ordenador.", 48, "RECALCULAR TODO")
Else
    msg = MsgBox("ESTO PUEDE LLEVAR BASTANTE TIEMPO (Mas de 1 minuto), dependera de la catidad de cuadrantes existentes, del numero de personas y de la potencia del ordenador." & vbCrLf & "Quieres recalcular todo?", 52, "RECALCULAR TODO")
End If
If msg = 6 Or obligado = True Then
    'contabilizamos todos los meses hasta el mes actual
    Application.ScreenUpdating = False
    For Cuantos = 0 To (Year(Now) - 2015) * 12 + Month(Now) - 1
        fila = (Cuantos + 1) * 500
        If HBDC.Range("a" & fila) <> "" Then TOTAL = TOTAL + 1
    Next Cuantos
    RECALCULAR.Show (0)
    For mes = 0 To (Year(Now) - 2015) * 12 + Month(Now) - 1
        fila = (mes + 1) * 500
        If HBDC.Range("a" & fila) <> "" Then
            MesCuadrante = mes Mod 12
            AnoCuadrante = mes \ 12
            ahora = ahora + 1
            RECALCULAR.MesReCal.Caption = ahora & "/" & TOTAL & " - " & HBDC.Range("a" & fila)
            RECALCULAR.Repaint
            HC.Cambio_mes MesCuadrante, AnoCuadrante, True, False
        End If
    Next mes
    Unload RECALCULAR
    Application.ScreenUpdating = True
End If
End Sub

Sub mio()

End Sub

Attribute VB_Name = "HCON"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "HG"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True

Attribute VB_Name = "HIAGE"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "HIC"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Private Sub prueba()
HIC.Range("a1:aw" & HIC.Range("a319").End(xlUp).Row).Copy
End Sub
Attribute VB_Name = "HICAL"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "HID"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Sub Informar()
Application.ScreenUpdating = False
Rastrear HN.Range("al1")
Application.ScreenUpdating = True
End Sub
Private Sub Rastrear(fila)
If Application.Calculation = xlCalculationAutomatic Then Application.Calculation = xlCalculationManual
HID.Range("A:M").Clear
HID.Range("A:M").Interior.ColorIndex = 2
pos = 2
With HID.Range("l2:l3")
    .Merge
    .Value = HN.Range("g4") & "  " & Format(HN.Range("g6"), "dd/mm/yyyy")
    .Font.Size = 18
    .Font.Bold = True
    .HorizontalAlignment = xlCenter
    .VerticalAlignment = xlVAlignCenter
End With
pos = pos + 2
If HID.Range("aa6") = True Then
    If MENUAPPBRIEFING.Visible = True Then
        If MENUAPPBRIEFING.NotaBriefing <> "" Then
            Comentario = MENUAPPBRIEFING.NotaBriefing & Chr(10) & HN.Range("o4")
        Else
            Comentario = HN.Range("o4")
        End If
    Else
        Comentario = HN.Range("o4")
    End If
    With HID.Range("d" & pos & ":l" & pos)
        .Merge
        .Font.Size = 12
        .HorizontalAlignment = xlLeft
        .VerticalAlignment = xlVAlignCenter
        .Value = Comentario
        .WrapText = True
    End With
    With HID.Range("b" & pos & ":l" & pos)
        .BorderAround LineStyle:=xlContinuous, Weight:=xlThick, ColorIndex:=48
    End With
    HID.Range("a" & pos).RowHeight = 80
    pos = pos + 2
Else
    HID.Range("b" & pos).Rows.AutoFit
End If
For f = fila + 1 To fila + 99
    Select Case HBDN.Range("b" & f)
        Case "" 'Fin Hoja
            'Empezar a listar los descansos
            Exit For
'------UNIDAD ----------------------
        Case "UNIDAD" 'Encabezado de Unidad
            With HID.Range("B" & pos & ":L" & pos + 1)
            .Interior.ColorIndex = 15
            .Font.ColorIndex = 1
            .BorderAround LineStyle:=xlContinuous, Weight:=xlThick, ColorIndex:=48
            .NumberFormat = "@"
            .Font.Size = 12
            .Font.Bold = True
            End With
            With HID.Range("c" & pos & ":l" & pos + 1)
                .Merge
                .HorizontalAlignment = xlLeft
                .VerticalAlignment = xlVAlignCenter
                .Value = HBDN.Range("c" & f).Value
            End With
            With HID.Range("b" & pos + 2)
                .Borders(xlEdgeRight).Weight = xlThick
                .Borders(xlEdgeRight).ColorIndex = 48
            End With
            Unidad = True
            pos = pos + 3
        Case "FINUNIDAD" ' Pie Unidad
            Unidad = False
            With HID.Range("c" & pos & ":c" & pos)
                .Borders(xlEdgeTop).Weight = xlThick
                .Borders(xlEdgeTop).ColorIndex = 48
            End With
            pos = pos + 1
'------AREA ----------------------
        Case "AREA" 'Encabezado de Area
            With HID.Range("d" & pos & ":k" & pos + 1)
                .Interior.ColorIndex = 15
                .Font.ColorIndex = 1
                .BorderAround LineStyle:=xlContinuous, Weight:=xlThick, ColorIndex:=48
                .NumberFormat = "@"
                .Font.Size = 12
                .Font.Bold = True
            End With
            With HID.Range("e" & pos & ":k" & pos + 1)
                .Merge
                .HorizontalAlignment = xlLeft
                .VerticalAlignment = xlVAlignCenter
                .Value = HBDN.Range("c" & f).Value
            End With
            With HID.Range("d" & pos + 2)
                .Borders(xlEdgeRight).Weight = xlThick
                .Borders(xlEdgeRight).ColorIndex = 48
            End With
            If Unidad = True Then
                With HID.Range("b" & pos & ":b" & pos + 2)
                    .Borders(xlEdgeRight).Weight = xlThick
                    .Borders(xlEdgeRight).ColorIndex = 48
                End With
            End If
            Area = True
            pos = pos + 3
        Case "FINAREA"
            Area = False
            With HID.Range("e" & pos & ":e" & pos)
                .Borders(xlEdgeTop).Weight = xlThick
                .Borders(xlEdgeTop).ColorIndex = 48
            End With
            If Unidad = True Then
                With HID.Range("b" & pos)
                    .Borders(xlEdgeRight).Weight = xlThick
                    .Borders(xlEdgeRight).ColorIndex = 48
                End With
            End If
            pos = pos + 1
'------GRUPO ----------------------
        Case "GRUPO"
            With HID.Range("f" & pos & ":j" & pos + 1)
                .Interior.ColorIndex = 15
                .Font.ColorIndex = 1
                .BorderAround LineStyle:=xlContinuous, Weight:=xlThick, ColorIndex:=48
                .NumberFormat = "@"
                .Font.Size = 12
                .Font.Bold = True
            End With
            With HID.Range("g" & pos & ":j" & pos + 1)
                .Merge
                .HorizontalAlignment = xlLeft
                .VerticalAlignment = xlVAlignCenter
                .Value = HBDN.Range("c" & f).Value
            End With
            With HID.Range("f" & pos + 2)
                .Borders(xlEdgeRight).Weight = xlThick
                .Borders(xlEdgeRight).ColorIndex = 48
            End With
            If Unidad = True Then
                With HID.Range("b" & pos & ":b" & pos + 2)
                    .Borders(xlEdgeRight).Weight = xlThick
                    .Borders(xlEdgeRight).ColorIndex = 48
                End With
            End If
            If Area = True Then
                With HID.Range("d" & pos & ":d" & pos + 2)
                    .Borders(xlEdgeRight).Weight = xlThick
                    .Borders(xlEdgeRight).ColorIndex = 48
                End With
            End If
            Grupo = True
            pos = pos + 3
        Case "FINGRUPO"
            Grupo = False
            With HID.Range("g" & pos & ":g" & pos)
                .Borders(xlEdgeTop).Weight = xlThick
                .Borders(xlEdgeTop).ColorIndex = 48
            End With
            If Unidad = True Then
                With HID.Range("b" & pos)
                    .Borders(xlEdgeRight).Weight = xlThick
                    .Borders(xlEdgeRight).ColorIndex = 48
                End With
            End If
            If Area = True Then
                With HID.Range("d" & pos)
                    .Borders(xlEdgeRight).Weight = xlThick
                    .Borders(xlEdgeRight).ColorIndex = 48
                End With
            End If
            pos = pos + 1
'------SERVICIO ----------------------
        Case "SERVICIO"
        If HBDN.Range("i" & f).Value > 0 Then
            If Unidad = True Then
                With HID.Range("b" & pos & ":b" & pos + 1)
                    .Borders(xlEdgeRight).Weight = xlThick
                    .Borders(xlEdgeRight).ColorIndex = 48
                End With
            End If
            If Area = True Then
                With HID.Range("d" & pos & ":d" & pos + 1)
                    .Borders(xlEdgeRight).Weight = xlThick
                    .Borders(xlEdgeRight).ColorIndex = 48
                End With
            End If
            If Grupo = True Then
                With HID.Range("f" & pos & ":f" & pos + 1)
                    .Borders(xlEdgeRight).Weight = xlThick
                    .Borders(xlEdgeRight).ColorIndex = 48
                End With
            End If
            With HID.Range("H" & pos & ":H" & pos + 1) 'Codigo
                .Merge
                .BorderAround LineStyle:=xlContinuous, Weight:=xlMedium, ColorIndex:=48
                .Interior.ColorIndex = 2
                .Font.Size = 14
                .Font.Bold = True
                .HorizontalAlignment = xlCenter
                .VerticalAlignment = xlVAlignCenter
                .NumberFormat = "@"
                .Value = HBDN.Range("C" & f).Value
            End With
            If HBDN.Range("bi" & f).Value <> "" Then ' Numero de papeleta
                With HID.Range("H" & pos - 1 & ":j" & pos - 1) 'Codigo
                    .Merge
                    '.BorderAround LineStyle:=xlContinuous, Weight:=xlMedium, ColorIndex:=48
                    '.Interior.ColorIndex = 15
                    .Font.Size = 10
                    .Font.Bold = True
                    .HorizontalAlignment = xlLeft
                    .VerticalAlignment = xlVAlignBottom
                    .NumberFormat = "@"
                    .Value = HBDN.Range("bi" & f).Value
                End With
            End If
            With HID.Range("i" & pos) 'indicativo
                 .Interior.ColorIndex = 2
                .Borders(xlEdgeLeft).Weight = xlMedium
                .Borders(xlEdgeLeft).ColorIndex = 48
                .Borders(xlEdgeTop).Weight = xlMedium
                .Borders(xlEdgeTop).ColorIndex = 48
                '.Borders(xlEdgeBottom).Weight = xlThin
                '.Borders(xlEdgeBottom).ColorIndex = 48
                .Font.Size = 12
                .Font.Bold = True
                .HorizontalAlignment = xlCenter
                .VerticalAlignment = xlVAlignCenter
                .NumberFormat = "@"
                .Value = HBDN.Range("D" & f).Value
            End With
            With HID.Range("i" & pos + 1) 'horario
                 .Interior.ColorIndex = 2
                .Borders(xlEdgeLeft).Weight = xlMedium
                .Borders(xlEdgeLeft).ColorIndex = 48
                .Borders(xlEdgeBottom).Weight = xlMedium
                .Borders(xlEdgeBottom).ColorIndex = 48
                .Font.Size = 10
                .Font.Bold = False
                .HorizontalAlignment = xlCenter
                .VerticalAlignment = xlVAlignCenter
                .NumberFormat = "@"
                .Value = Format(HBDN.Range("G" & f).Value, "h:mm") & " - " & Format(HBDN.Range("H" & f).Value, "h:mm")
            End With
            With HID.Range("j" & pos) 'indicativo
                 .Interior.ColorIndex = 2
                .Borders(xlEdgeRight).Weight = xlMedium
                .Borders(xlEdgeRight).ColorIndex = 48
                .Borders(xlEdgeTop).Weight = xlMedium
                .Borders(xlEdgeTop).ColorIndex = 48
                '.Borders(xlEdgeBottom).Weight = xlThin
                '.Borders(xlEdgeBottom).ColorIndex = 48
                .Font.Size = 12
                .Font.Bold = True
                .HorizontalAlignment = xlCenter
                .VerticalAlignment = xlVAlignCenter
                .NumberFormat = "@"
                .Value = HBDN.Range("e" & f).Value
            End With
            With HID.Range("j" & pos + 1) 'cometido
                .Interior.ColorIndex = 2
                .Borders(xlEdgeRight).Weight = xlMedium
                .Borders(xlEdgeRight).ColorIndex = 48
                .Borders(xlEdgeBottom).Weight = xlMedium
                .Borders(xlEdgeBottom).ColorIndex = 48
                .Font.Size = 10
                .Font.Bold = False
                .HorizontalAlignment = xlCenter
                .VerticalAlignment = xlVAlignCenter
                .NumberFormat = "@"
                .Value = HBDN.Range("f" & f).Value
            End With
            'Personas
            'Sin Telefono
            If HID.Range("aa1") = False Then
                With HID.Range("k" & pos & ":k" & pos + 1) 'Persona 1
                    .Interior.ColorIndex = 2
                    .Merge
                    .BorderAround LineStyle:=xlContinuous, Weight:=xlMedium, ColorIndex:=48
                    .Font.Size = 10
                    .Font.Bold = True
                    .HorizontalAlignment = xlLeft
                    .VerticalAlignment = xlVAlignCenter
                    .NumberFormat = "@"
                    .Value = "  " & personar(HBDN.Range("j" & f).Value)
                End With
                If HBDN.Range("i" & f).Value > 1 Then
                    With HID.Range("l" & pos & ":l" & pos + 1) 'Persona 2
                        .Interior.ColorIndex = 2
                        .Merge
                        .BorderAround LineStyle:=xlContinuous, Weight:=xlMedium, ColorIndex:=48
                        .Font.Size = 10
                        .Font.Bold = True
                        .HorizontalAlignment = xlLeft
                        .VerticalAlignment = xlVAlignCenter
                        .NumberFormat = "@"
                        .Value = "  " & personar(HBDN.Range("k" & f).Value)
                    End With
                End If
                'Extra Personas
                If HBDN.Range("i" & f).Value > 2 Then
                    For pers = 3 To HBDN.Range("i" & f).Value
                        If (pers Mod 2) = 1 Then
                            pos = pos + 2
                            If Unidad = True Then
                                With HID.Range("b" & pos & ":b" & pos + 1)
                                    .Borders(xlEdgeRight).Weight = xlThick
                                    .Borders(xlEdgeRight).ColorIndex = 48
                                End With
                            End If
                            If Area = True Then
                                With HID.Range("d" & pos & ":d" & pos + 1)
                                    .Borders(xlEdgeRight).Weight = xlThick
                                    .Borders(xlEdgeRight).ColorIndex = 48
                                End With
                            End If
                            If Grupo = True Then
                                With HID.Range("f" & pos & ":f" & pos + 1)
                                    .Borders(xlEdgeRight).Weight = xlThick
                                    .Borders(xlEdgeRight).ColorIndex = 48
                                End With
                            End If
                            With HID.Range("h" & pos - (pers - 1) & ":h" & pos + 1)
                                .Merge
                                .BorderAround LineStyle:=xlContinuous, Weight:=xlMedium, ColorIndex:=48
                            End With
                            With HID.Range("k" & pos & ":k" & pos + 1)
                                .Interior.ColorIndex = 2
                                .Merge
                                .BorderAround LineStyle:=xlContinuous, Weight:=xlMedium, ColorIndex:=48
                                .Font.Size = 10
                                .Font.Bold = True
                                .HorizontalAlignment = xlLeft
                                .VerticalAlignment = xlVAlignCenter
                                .NumberFormat = "@"
                                .Value = "  " & personar(HBDN.Cells(f, 9 + pers).Value)
                            End With
                        Else
                            With HID.Range("l" & pos & ":l" & pos + 1)
                                .Interior.ColorIndex = 2
                                .Merge
                                .BorderAround LineStyle:=xlContinuous, Weight:=xlMedium, ColorIndex:=48
                                .Font.Size = 10
                                .Font.Bold = True
                                .HorizontalAlignment = xlLeft
                                .VerticalAlignment = xlVAlignCenter
                                .NumberFormat = "@"
                                .Value = "  " & personar(HBDN.Cells(f, 9 + pers).Value)
                            End With
                        End If
                    Next
                End If
            Else
            'Con Telefono
                With HID.Range("k" & pos & ":k" & pos + 1) 'Persona 1
                    .Interior.ColorIndex = 2
                    .BorderAround LineStyle:=xlContinuous, Weight:=xlMedium, ColorIndex:=48
                End With
                With HID.Range("k" & pos)
                    .Font.Size = 10
                    .Font.Bold = True
                    .HorizontalAlignment = xlLeft
                    .VerticalAlignment = xlVAlignCenter
                    .NumberFormat = "@"
                    .Value = "  " & personar(HBDN.Range("j" & f).Value)
                End With
                NumTel = Application.Match(personar(HBDN.Range("j" & f).Value), HC.Range("do14:do313"), 0)
                If IsError(NumTel) = False Then NumTel = HC.Range("cq" & NumTel + 13).Value Else NumTel = ""
                With HID.Range("k" & pos + 1)
                    .Font.Size = 10
                    .Font.Bold = False
                    .HorizontalAlignment = xlRight
                    .VerticalAlignment = xlVAlignCenter
                    .NumberFormat = "@"
                    .Value = NumTel
                End With
                If HBDN.Range("i" & f).Value > 1 Then
                    With HID.Range("l" & pos & ":l" & pos + 1) 'Persona 2
                        .Interior.ColorIndex = 2
                        .BorderAround LineStyle:=xlContinuous, Weight:=xlMedium, ColorIndex:=48
                    End With
                    With HID.Range("l" & pos)
                        .Font.Size = 10
                        .Font.Bold = True
                        .HorizontalAlignment = xlLeft
                        .VerticalAlignment = xlVAlignCenter
                        .NumberFormat = "@"
                        .Value = "  " & personar(HBDN.Range("k" & f).Value)
                    End With
                    NumTel = Application.Match(personar(HBDN.Range("k" & f).Value), HC.Range("do14:do313"), 0)
                    If IsError(NumTel) = False Then NumTel = HC.Range("cq" & NumTel + 13).Value Else NumTel = ""
                    With HID.Range("l" & pos + 1)
                        .Font.Size = 10
                        .Font.Bold = False
                        .HorizontalAlignment = xlRight
                        .VerticalAlignment = xlVAlignCenter
                        .NumberFormat = "@"
                        .Value = NumTel
                    End With
                End If
                'Extra Personas
                If HBDN.Range("i" & f).Value > 2 Then
                    For pers = 3 To HBDN.Range("i" & f).Value
                        If (pers Mod 2) = 1 Then
                            pos = pos + 2
                            If Unidad = True Then
                                With HID.Range("b" & pos & ":b" & pos + 1)
                                    .Borders(xlEdgeRight).Weight = xlThick
                                    .Borders(xlEdgeRight).ColorIndex = 48
                                End With
                            End If
                            If Area = True Then
                                With HID.Range("d" & pos & ":d" & pos + 1)
                                    .Borders(xlEdgeRight).Weight = xlThick
                                    .Borders(xlEdgeRight).ColorIndex = 48
                                End With
                            End If
                            If Grupo = True Then
                                With HID.Range("f" & pos & ":f" & pos + 1)
                                    .Borders(xlEdgeRight).Weight = xlThick
                                    .Borders(xlEdgeRight).ColorIndex = 48
                                End With
                            End If
                            With HID.Range("h" & pos - (pers - 1) & ":h" & pos + 1)
                                .Merge
                                .BorderAround LineStyle:=xlContinuous, Weight:=xlMedium, ColorIndex:=48
                            End With
                            With HID.Range("k" & pos & ":k" & pos + 1) 'Mas Personas
                                .Interior.ColorIndex = 2
                                .BorderAround LineStyle:=xlContinuous, Weight:=xlMedium, ColorIndex:=48
                            End With
                            With HID.Range("k" & pos)
                                .Font.Size = 10
                                .Font.Bold = True
                                .HorizontalAlignment = xlLeft
                                .VerticalAlignment = xlVAlignCenter
                                .NumberFormat = "@"
                                .Value = "  " & personar(HBDN.Cells(f, 9 + pers).Value)
                            End With
                            NumTel = Application.Match(personar(HBDN.Cells(f, 9 + pers).Value), HC.Range("do14:do313"), 0)
                            If IsError(NumTel) = False Then NumTel = HC.Range("cq" & NumTel + 13).Value Else NumTel = ""
                            With HID.Range("k" & pos + 1)
                                .Font.Size = 10
                                .Font.Bold = False
                                .HorizontalAlignment = xlRight
                                .VerticalAlignment = xlVAlignCenter
                                .NumberFormat = "@"
                                .Value = NumTel
                            End With
                        Else
                            With HID.Range("l" & pos & ":l" & pos + 1) 'Mas Personas
                                .Interior.ColorIndex = 2
                                .BorderAround LineStyle:=xlContinuous, Weight:=xlMedium, ColorIndex:=48
                            End With
                            With HID.Range("l" & pos)
                                .Font.Size = 10
                                .Font.Bold = True
                                .HorizontalAlignment = xlLeft
                                .VerticalAlignment = xlVAlignCenter
                                .NumberFormat = "@"
                                .Value = "  " & personar(HBDN.Cells(f, 9 + pers).Value)
                            End With
                            NumTel = Application.Match(personar(HBDN.Cells(f, 9 + pers).Value), HC.Range("do14:do313"), 0)
                            If IsError(NumTel) = False Then NumTel = HC.Range("cq" & NumTel + 13).Value Else NumTel = ""
                            With HID.Range("l" & pos + 1)
                                .Font.Size = 10
                                .Font.Bold = False
                                .HorizontalAlignment = xlRight
                                .VerticalAlignment = xlVAlignCenter
                                .NumberFormat = "@"
                                .Value = NumTel
                            End With
                        End If
                    Next
                End If
            End If
            pos = pos + 2
'DETALLES
            If HID.Range("AA" & 2) = True Then
                If Application.WorksheetFunction.CountA(HBDN.Range("ae" & f & ":bg" & f)) > 0 Then
                    'Pos = Pos + 2
                    For det = 1 To 12
                        If det = 1 Then
                            With HID.Range("j" & pos)
                                .Value = "Cometidos"
                                .Font.Size = 8
                                .Font.ColorIndex = 15
                                .HorizontalAlignment = xlLeft
                                .VerticalAlignment = xlVAlignBottom
                            End With
                        ElseIf det >= 2 And det <= 7 Then
                            If HBDN.Cells(f, (det - 2) * 4 + 31).Value <> "" Then
                                With HID.Range("j" & pos & ":l" & pos)
                                    .Interior.ColorIndex = 15
                                    .Font.ColorIndex = 1
                                    .Font.Size = 10
                                    .Borders(xlEdgeTop).LineStyle = xlContinuous
                                    .Borders(xlEdgeBottom).LineStyle = xlContinuous
                                    .Borders(xlEdgeTop).ColorIndex = 48
                                    .Borders(xlEdgeBottom).ColorIndex = 48
                                    .HorizontalAlignment = xlLeft
                                End With
                                HID.Range("j" & pos & ":k" & pos).Merge
                                HID.Range("j" & pos) = Format(HBDN.Cells(f, (det - 2) * 4 + 31).Value, "h:mm") & " - " & Format(HBDN.Cells(f, (det - 2) * 4 + 32).Value, "h:mm") & "     " & HBDN.Cells(f, (det - 2) * 4 + 33).Value
                                HID.Range("l" & pos) = HBDN.Cells(f, (det - 2) * 4 + 34).Value
                            Else
                                GoTo Saltalinea
                            End If
                        ElseIf det = 8 Then
                            If HBDN.Range("bj" & f) <> "" Or HBDN.Range("be" & f) <> "" Then
                                'Eventos y material
                                With HID.Range("j" & pos)
                                    .Value = "Eventos"
                                    .Font.Size = 8
                                    .Font.ColorIndex = 15
                                    .HorizontalAlignment = xlLeft
                                    .VerticalAlignment = xlVAlignBottom
                                End With
                                With HID.Range("l" & pos)
                                    .Value = "Vehiculo y Material"
                                    .Font.Size = 8
                                    .Font.ColorIndex = 15
                                    .HorizontalAlignment = xlLeft
                                    .VerticalAlignment = xlVAlignBottom
                                End With
                                HID.Range("j" & pos + 1 & ":k" & pos + 1).Merge
                                With HID.Range("j" & pos + 1 & ":l" & pos + 1)
                                    .Interior.ColorIndex = 15
                                    .Font.Size = 10
                                    .Font.ColorIndex = 1
                                    .Borders(xlEdgeTop).LineStyle = xlContinuous
                                    .Borders(xlEdgeBottom).LineStyle = xlContinuous
                                    .Borders(xlInsideVertical).LineStyle = xlContinuous
                                    .Borders(xlEdgeTop).ColorIndex = 48
                                    .Borders(xlEdgeBottom).ColorIndex = 48
                                    .Borders(xlInsideVertical).ColorIndex = 48
                                    .HorizontalAlignment = xlCenter
                                    .VerticalAlignment = xlVAlignBottom
                                End With
                                HID.Range("j" & pos + 1).Value = HBDN.Range("be" & f).Value
                                HID.Range("l" & pos + 1).Value = HBDN.Range("bj" & f).Value
                            Else
                                GoTo Saltalinea
                            End If
                        ElseIf det = 9 Then
                            If HBDN.Range("bj" & f) <> "" Or HBDN.Range("be" & f) <> "" Then
                            Else
                                GoTo Saltalinea
                            End If
                        ElseIf det = 10 Then
                            If HBDN.Range("bg" & f) <> "" Or HBDN.Range("bc" & f) <> "" Or HBDN.Range("bd" & f) <> "" Then
                                With HID.Range("i" & pos)
                                    .Value = "Prevenciones:"
                                    .Font.Size = 8
                                    .Font.ColorIndex = 15
                                    .HorizontalAlignment = xlRight
                                    .VerticalAlignment = xlVAlignBottom
                                End With
                                With HID.Range("j" & pos & ":k" & pos + 1)
                                    .Merge
                                    .Interior.ColorIndex = 15
                                    .Font.Size = 10
                                    .Font.ColorIndex = 1
                                    .Borders(xlEdgeTop).LineStyle = xlContinuous
                                    .Borders(xlEdgeBottom).LineStyle = xlContinuous
                                    .Borders(xlRight).LineStyle = xlContinuous
                                    .Borders(xlEdgeTop).ColorIndex = 48
                                    .Borders(xlEdgeBottom).ColorIndex = 48
                                    .Borders(xlEdgeRight).ColorIndex = 48
                                    .HorizontalAlignment = xlLeft
                                    .VerticalAlignment = xlVAlignTop
                                    .Value = HBDN.Range("bg" & f).Value
                                End With
                                With HID.Range("l" & pos & ":l" & pos + 1)
                                    .Interior.ColorIndex = 15
                                    .Font.Size = 10
                                    .Font.ColorIndex = 1
                                    .Borders(xlEdgeTop).LineStyle = xlContinuous
                                    .Borders(xlEdgeBottom).LineStyle = xlContinuous
                                    .Borders(xlInsideHorizontal).LineStyle = xlContinuous
                                    .Borders(xlEdgeTop).ColorIndex = 48
                                    .Borders(xlEdgeBottom).ColorIndex = 48
                                    .Borders(xlInsideHorizontal).ColorIndex = 48
                                    .HorizontalAlignment = xlCenter
                                    .VerticalAlignment = xlVAlignCenter
                                End With
                                HID.Range("l" & pos).Value = HBDN.Range("bc" & f).Value
                                HID.Range("l" & pos + 1).Value = HBDN.Range("bd" & f).Value
                            Else
                                GoTo Saltalinea
                            End If
                        ElseIf det = 11 Then
                            If HBDN.Range("bg" & f) <> "" Then
                            Else
                                GoTo Saltalinea
                            End If
                        End If
                    If Unidad = True Then
                        With HID.Range("b" & pos)
                        .Borders(xlEdgeRight).Weight = xlThick
                        .Borders(xlEdgeRight).ColorIndex = 48
                        End With
                    End If
                    If Area = True Then
                        With HID.Range("d" & pos)
                        .Borders(xlEdgeRight).Weight = xlThick
                        .Borders(xlEdgeRight).ColorIndex = 48
                        End With
                    End If
                    If Grupo = True Then
                        With HID.Range("f" & pos)
                        .Borders(xlEdgeRight).Weight = xlThick
                        .Borders(xlEdgeRight).ColorIndex = 48
                        End With
                    End If
                    pos = pos + 1
Saltalinea:
                    Next
                 End If
            End If
            
            'ESPACIO UNA FILA
            If Unidad = True Then
                With HID.Range("b" & pos)
                    .Borders(xlEdgeRight).Weight = xlThick
                    .Borders(xlEdgeRight).ColorIndex = 48
                End With
            End If
            If Area = True Then
                With HID.Range("d" & pos)
                    .Borders(xlEdgeRight).Weight = xlThick
                    .Borders(xlEdgeRight).ColorIndex = 48
                End With
            End If
            If Grupo = True Then
                With HID.Range("f" & pos)
                    .Borders(xlEdgeRight).Weight = xlThick
                    .Borders(xlEdgeRight).ColorIndex = 48
                End With
            End If
            pos = pos + 1
        End If
        End Select
Next
'Mostrar descansos
Dim TContador As Range
Contador = 0
If HID.Range("aa3") = True Then
    pos = pos + 1
    With HID.Range("i" & pos & ":L" & pos)
        .Interior.ColorIndex = 15
        .Font.ColorIndex = 1
        .BorderAround LineStyle:=xlContinuous, Weight:=xlThick, ColorIndex:=48
        .NumberFormat = "@"
        .Font.Size = 12
        .Font.Bold = True
    End With
    With HID.Range("i" & pos & ":l" & pos)
        .Merge
        .HorizontalAlignment = xlLeft
        .VerticalAlignment = xlVAlignCenter
    End With
    Set TContador = HID.Range("i" & pos)
    pos = pos + 1
    listc = 9
    For f = 13 To 312
        serv = Application.Match(HN.Range("as" & f).Value, HCON.Range("k310:k509"), 0)
        If IsError(serv) = False Then
            serv = HCON.Range("l" & serv + 309).Value
            If Val(serv) >= 4 And Val(serv) <= 9 Then
                If listc = 13 Then
                    listc = 9
                    pos = pos + 2
                End If
                Contador = Contador + 1
                If listc = 9 Then
                    With HID.Range(HID.Cells(pos, listc), HID.Cells(pos + 1, listc + 1))
                        .Merge
                        .Font.Size = 9
                        .Font.Bold = True
                        .Value = HN.Range("aR" & f) & " (" & HN.Range("as" & f) & ")"
                        .BorderAround LineStyle:=xlContinuous, Weight:=xlThick, ColorIndex:=48
                        .HorizontalAlignment = xlLeft
                        .VerticalAlignment = xlVAlignCenter
                    End With
                    listc = listc + 2
                Else
                    With HID.Range(HID.Cells(pos, listc), HID.Cells(pos + 1, listc))
                        .Merge
                        .Font.Size = 9
                        .Font.Bold = True
                        .Value = HN.Range("aR" & f) & " (" & HN.Range("as" & f) & ")"
                        .BorderAround LineStyle:=xlContinuous, Weight:=xlThick, ColorIndex:=48
                        .HorizontalAlignment = xlLeft
                        .VerticalAlignment = xlVAlignCenter
                    End With
                    listc = listc + 1
                End If
            End If
        End If
    Next
    TContador = "    DESCANSOS  ( " & Contador & " )"
    pos = pos + 2
End If
'Mostrar vacaciones
Contador = 0
If HID.Range("aa4") = True Then
    pos = pos + 1
    With HID.Range("i" & pos & ":L" & pos)
        .Interior.ColorIndex = 15
        .Font.ColorIndex = 1
        .BorderAround LineStyle:=xlContinuous, Weight:=xlThick, ColorIndex:=48
        .NumberFormat = "@"
        .Font.Size = 12
        .Font.Bold = True
    End With
    With HID.Range("i" & pos & ":l" & pos)
        .Merge
        .HorizontalAlignment = xlLeft
        .VerticalAlignment = xlVAlignCenter
    End With
    Set TContador = HID.Range("i" & pos)
    pos = pos + 1
    listc = 9
    For f = 13 To 312
        serv = Application.Match(HN.Range("as" & f).Value, HCON.Range("k310:k509"), 0)
        If IsError(serv) = False Then
            serv = HCON.Range("l" & serv + 309).Value
            If Val(serv) >= 10 And Val(serv) <= 12 Then
                If listc = 13 Then
                    listc = 9
                    pos = pos + 2
                End If
                Contador = Contador + 1
                If listc = 9 Then
                    With HID.Range(HID.Cells(pos, listc), HID.Cells(pos + 1, listc + 1))
                        .Merge
                        .Font.Size = 9
                        .Font.Bold = True
                        .Value = HN.Range("aR" & f) & " (" & HN.Range("as" & f) & ")"
                        .BorderAround LineStyle:=xlContinuous, Weight:=xlThick, ColorIndex:=48
                        .HorizontalAlignment = xlLeft
                        .VerticalAlignment = xlVAlignCenter
                    End With
                    listc = listc + 2
                Else
                    With HID.Range(HID.Cells(pos, listc), HID.Cells(pos + 1, listc))
                        .Merge
                        .Font.Size = 9
                        .Font.Bold = True
                        .Value = HN.Range("aR" & f) & " (" & HN.Range("as" & f) & ")"
                        .BorderAround LineStyle:=xlContinuous, Weight:=xlThick, ColorIndex:=48
                        .HorizontalAlignment = xlLeft
                        .VerticalAlignment = xlVAlignCenter
                    End With
                    listc = listc + 1
                End If
            End If
        End If
    Next
    TContador = "    VACACIONES Y PERMISOS  ( " & Contador & " )"
    pos = pos + 2
End If
'Otras Situaciones
Contador = 0
If HID.Range("aa5") = True Then
    pos = pos + 1
    With HID.Range("i" & pos & ":L" & pos)
        .Interior.ColorIndex = 15
        .Font.ColorIndex = 1
        .BorderAround LineStyle:=xlContinuous, Weight:=xlThick, ColorIndex:=48
        .NumberFormat = "@"
        .Font.Size = 12
        .Font.Bold = True
    End With
    With HID.Range("i" & pos & ":l" & pos)
        .Merge
        .HorizontalAlignment = xlLeft
        .VerticalAlignment = xlVAlignCenter
    End With
    Set TContador = HID.Range("i" & pos)
    pos = pos + 1
    listc = 9
    For f = 13 To 312
        serv = Application.Match(HN.Range("as" & f).Value, HCON.Range("k310:k509"), 0)
        If IsError(serv) = False Then
            serv = HCON.Range("l" & serv + 309).Value
            If Val(serv) >= 13 And Val(serv) <= 17 Then
                If listc = 13 Then
                    listc = 9
                    pos = pos + 2
                End If
                Contador = Contador + 1
                If listc = 9 Then
                    With HID.Range(HID.Cells(pos, listc), HID.Cells(pos + 1, listc + 1))
                        .Merge
                        .Font.Size = 9
                        .Font.Bold = True
                        .Value = HN.Range("aR" & f) & " (" & HN.Range("as" & f) & ")"
                        .BorderAround LineStyle:=xlContinuous, Weight:=xlThick, ColorIndex:=48
                        .HorizontalAlignment = xlLeft
                        .VerticalAlignment = xlVAlignCenter
                    End With
                    listc = listc + 2
                Else
                    With HID.Range(HID.Cells(pos, listc), HID.Cells(pos + 1, listc))
                        .Merge
                        .Font.Size = 9
                        .Font.Bold = True
                        .Value = HN.Range("aR" & f) & " (" & HN.Range("as" & f) & ")"
                        .BorderAround LineStyle:=xlContinuous, Weight:=xlThick, ColorIndex:=48
                        .HorizontalAlignment = xlLeft
                        .VerticalAlignment = xlVAlignCenter
                    End With
                    listc = listc + 1
                End If
            End If
        End If
    Next
    TContador = "    OTRAS SITUACIONES  ( " & Contador & " )"
    pos = pos + 2
End If


With HID.PageSetup
    .PrintArea = HID.Range("a1:m" & pos + 2).Address
    .Zoom = False
    .FitToPagesTall = 1
    .FitToPagesWide = 1
End With
End Sub
Private Function personar(Nombre)
'If left(Nombre, 1) = "" Then
'    personar = Mid(Nombre, 2, 100)
'Else
    personar = Replace(Nombre, "|fffd|", "")
'End If
End Function
Sub Makepicture()
HID.Activate
    If HID.ChartObjects.Count > 0 Then
        For Each ch In HID.ChartObjects
            ch.Delete
        Next
    End If
    Dim rgExp As Range: Set rgExp = HID.Range(HID.PageSetup.PrintArea)
    rgExp.CopyPicture Appearance:=xlScreen, Format:=xlBitmap
    With HID.ChartObjects.Add(left:=rgExp.left, top:=rgExp.top, _
    Width:=rgExp.Width, Height:=rgExp.Height)
    .Name = "ChartVolumeMetricsDevEXPORT"
    .Activate
    End With
    ActiveChart.Paste
    HID.ChartObjects("ChartVolumeMetricsDevEXPORT").Chart.Export ThisWorkbook.Path & "\CuadrAPP\minuta.jpg"
    HID.ChartObjects("ChartVolumeMetricsDevEXPORT").Delete
HN.Activate
End Sub

Attribute VB_Name = "HII"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True

Attribute VB_Name = "HIMI"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "HIN"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Control = "BtnImprimir, 1, 0, MSForms, CommandButton"
Attribute VB_Control = "BtnVolver, 2, 1, MSForms, CommandButton"
Private Sub BtnImprimir_Click()
With HIN.PageSetup
    .PrintArea = "a2:d" & HIN.Range("d5000").End(xlUp).Row + 3
    .Zoom = False
    .FitToPagesWide = 1
End With
#If VBA6 Then
    Application.ExecuteExcel4Macro ("show.toolbar(""ribbon"",1)")
#End If
HIN.PrintPreview
#If VBA6 Then
    Application.ExecuteExcel4Macro ("show.toolbar(""ribbon"",0)")
#End If
Application.CommandBars.ActiveMenuBar.Enabled = True
Application.CommandBars.ActiveMenuBar.Enabled = False
End Sub

Private Sub BtnVolver_Click()
With HIN.Range("a1:e1000")
    .Clear
    .Interior.ColorIndex = 2
End With
HN.Activate
End Sub
Private Sub Worksheet_BeforeDoubleClick(ByVal Target As Range, Cancel As Boolean)
Cancel = True
ActiveCell.Copy
End Sub
Private Sub Worksheet_BeforeRightClick(ByVal Target As Range, Cancel As Boolean)
Cancel = True
End Sub
Attribute VB_Name = "HLIS"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Control = "BtnMasColumna, 1, 2, MSForms, CommandButton"
Attribute VB_Control = "BtnHerramientas, 2, 3, MSForms, CommandButton"
Attribute VB_Control = "BtnCuadrante, 6, 4, MSForms, Image"
Attribute VB_Control = "Label1, 7, 5, MSForms, Label"
Dim Filtrado
Private Sub BtnCuadrante_Click()
HC.Activate
End Sub
Private Sub BtnHerramientas_Click()
LISTAS.Show 0
Application.EnableEvents = True
End Sub
Private Sub BtnMasColumna_Click()
inp = InputBox("Titulo de la Columna", "NUEVA COLUMNA")
If inp <> "" Then
    colus = HLIS.Range("b14") + 4
    HLIS.Columns(colus - 1).Insert Shift:=xlToLeft
    HLIS.Cells(2, colus - 1).Value = inp
    HLIS.Cells(2, colus - 1).Columns.AutoFit
    HLIS.Columns(colus - 1).Cut
    HLIS.Columns(colus + 1).Insert Shift:=xlToRight
    HLIS.ofa
    HLIS.Range("b14") = HLIS.Range("b14") + 1
End If
End Sub
Private Sub Worksheet_Activate()
If RAPIDAS.Visible = True Then Unload RAPIDAS
If CAJONSERVICIOS.Visible = True Then Unload CAJONSERVICIOS
If SELHERRAMIENTAS.Visible = True Then Unload SELHERRAMIENTAS
despro HLIS
pro HLIS
Application.OnKey "{DEL}", ""
Application.OnKey "{ENTER}", ""
Application.OnKey "^{v}", "" 'Paste
Application.OnKey "^{c}", "" 'Copy
End Sub
Private Sub Worksheet_BeforeRightClick(ByVal Target As Range, Cancel As Boolean)
Cancel = True
If ActiveCell.Column < HLIS.Range("b14") + 4 And ActiveCell.Column > 3 And ActiveCell.Row > 1 And ActiveCell.Row < 304 Then
    CrearMenuContextual
    CommandBars("MC").Controls(5).Text = ActiveCell.ColumnWidth
    CommandBars("MC").Controls(12).Text = Filtrado
    Application.CommandBars("MC").ShowPopup
End If
End Sub
Private Sub borrar_POPUP()
On Error Resume Next
CommandBars("MC").Delete
End Sub
Private Sub CrearMenuContextual()
Dim Mi_POPUP As CommandBar
Dim MI_ITEM As CommandBarControl
borrar_POPUP
Set Mi_POPUP = CommandBars.Add(Name:="MC", Position:=msoBarPopup, Temporary:=True)
Set MI_ITEM = Mi_POPUP.Controls.Add(Type:=msoControlButton)
With MI_ITEM
    .Caption = "Color de celdas"
    .OnAction = "hlis.ColorearCeldas"
    .FaceId = 1763
    .DescriptionText = "Colorear las Celdas seleccionadas"
End With
Set MI_ITEM = Mi_POPUP.Controls.Add(Type:=msoControlButton)
With MI_ITEM
    .Caption = "Color de texto"
    .OnAction = "hlis.ColorearTexto"
    .FaceId = 2611
    .DescriptionText = "Texto de las Celdas seleccionadas"
End With
Set MI_FILAS = Mi_POPUP.Controls.Add(Type:=msoControlPopup)
With MI_FILAS
    .Caption = "Filas"
    Set MISUBITEM = .Controls.Add(Type:=msoControlButton)
    With MISUBITEM
        .Caption = "Insertar Fila"
        .OnAction = "hlis.FilAdd"
        .FaceId = 296
        .DescriptionText = "A|fffd|adir una fila encima de la celda seleccionada"
    End With
    Set MISUBITEM = .Controls.Add(Type:=msoControlButton)
    With MISUBITEM
        .Caption = "Eliminar Fila"
        .OnAction = "hlis.FilDel"
        .FaceId = 1088
        .DescriptionText = "Eliminar la fila seleccionada"
    End With
    Set MISUBITEM = .Controls.Add(Type:=msoControlButton)
    With MISUBITEM
        .Caption = "Mover fila arriba"
        .OnAction = "hlis.movfilaarriba"
        .FaceId = 38
        .DescriptionText = "Mover la fila seleccionada hacia arriba"
    End With
    Set MISUBITEM = .Controls.Add(Type:=msoControlButton)
    With MISUBITEM
        .Caption = "Mover fila abajo"
        .OnAction = "hlis.movfilaabajo"
        .FaceId = 40
        .DescriptionText = "Mover la fila seleccionada hacia abajo"
    End With
    Set MISUBITEM = .Controls.Add(Type:=msoControlButton)
    With MISUBITEM
        .Caption = "Color fila"
        .OnAction = "hlis.Filcolor"
        .FaceId = 1763
    End With
End With
Set MI_COLUMNAS = Mi_POPUP.Controls.Add(Type:=msoControlPopup)
With MI_COLUMNAS
    .Caption = "Columnas"
    Set MISUBITEM = .Controls.Add(Type:=msoControlButton)
    With MISUBITEM
        .Caption = "Insertar Columna"
        .OnAction = "hlis.ColAdd"
        .FaceId = 297
    End With
    Set MISUBITEM = .Controls.Add(Type:=msoControlButton)
    With MISUBITEM
        .Caption = "Eliminar Columna"
        .OnAction = "hlis.ColDel"
        .FaceId = 1088
    End With
    Set MISUBITEM = .Controls.Add(Type:=msoControlButton)
    With MISUBITEM
        .Caption = "Mover a la derecha"
        .OnAction = "hlis.MovColDerecha"
        .FaceId = 39
    End With
    Set MISUBITEM = .Controls.Add(Type:=msoControlButton)
    With MISUBITEM
        .Caption = "Mover a la izquierda"
        .OnAction = "hlis.MovColIzquierda"
        .FaceId = 41
    End With
    Set MISUBITEM = .Controls.Add(Type:=msoControlButton)
    With MISUBITEM
        .Caption = "Auto ajustar"
        .OnAction = "hlis.btnautofit"
        .FaceId = 6101
    End With
    Set MISUBITEM = .Controls.Add(Type:=msoControlButton)
    With MISUBITEM
        .Caption = "Color Columna"
        .OnAction = "hlis.colcolor"
        .FaceId = 1763
    End With
End With
Set ancho = Mi_POPUP.Controls.Add(Type:=msoControlEdit)
With ancho
    .Caption = "Ancho Columna.."
    .OnAction = "hlis.ancol"
    'MsgBox .Index
End With
Set MISUBITEM = Mi_POPUP.Controls.Add(Type:=msoControlButton)
With MISUBITEM
    .Caption = "Ocultar Columna"
    .OnAction = "hlis.Colhide"
    .FaceId = 330
End With
Set MISUBITEM = Mi_POPUP.Controls.Add(Type:=msoControlButton)
With MISUBITEM
    .Caption = "Mostrar Columnas ocultas"
    .OnAction = "hlis.ColShow"
    .FaceId = 351
End With
Set MI_ITEM = Mi_POPUP.Controls.Add(Type:=msoControlPopup)
With MI_ITEM
    .Caption = "Formato"
    Set MISUBITEM = .Controls.Add(Type:=msoControlButton)
    With MISUBITEM
        .Caption = "Texto"
        .OnAction = "hlis.TodoTexto"
        .FaceId = 80
    End With
    Set MISUBITEM = .Controls.Add(Type:=msoControlButton)
    With MISUBITEM
        .Caption = "Numero"
        .OnAction = "hlis.TodoNumero"
        .FaceId = 71
    End With
    Set MISUBITEM = .Controls.Add(Type:=msoControlButton)
    With MISUBITEM
        .Caption = "Fecha"
        .OnAction = "hlis.TodoFecha"
        .FaceId = 1095
    End With
End With
Set MI_ITEM = Mi_POPUP.Controls.Add(Type:=msoControlPopup)
With MI_ITEM
    .Caption = "Bordes"
    Set MISUBITEM = .Controls.Add(Type:=msoControlButton)
    With MISUBITEM
        .Caption = "Derecho"
        .OnAction = "hlis.BordeDer"
        .FaceId = 148
    End With
    Set MISUBITEM = .Controls.Add(Type:=msoControlButton)
    With MISUBITEM
        .Caption = "Izquierdo"
        .OnAction = "hlis.BordeIzq"
        .FaceId = 147
    End With
    Set MISUBITEM = .Controls.Add(Type:=msoControlButton)
    With MISUBITEM
        .Caption = "Superior"
        .OnAction = "hlis.BordeSup"
        .FaceId = 145
    End With
    Set MISUBITEM = .Controls.Add(Type:=msoControlButton)
    With MISUBITEM
        .Caption = "Inferior"
        .OnAction = "hlis.BordeInf"
        .FaceId = 146
    End With
End With
Set MISUBITEM = Mi_POPUP.Controls.Add(Type:=msoControlButton)
With MISUBITEM
    .Caption = "Orden ASCENDENTE"
    .OnAction = "hlis.OrdenMenos"
    .FaceId = 3157
End With
Set MISUBITEM = Mi_POPUP.Controls.Add(Type:=msoControlButton)
With MISUBITEM
    .Caption = "Orden DESCENDENTE"
    .OnAction = "hlis.ordenmas"
    .FaceId = 3158
End With
Set MISUBITEM = Mi_POPUP.Controls.Add(Type:=msoControlEdit)
With MISUBITEM
    .Caption = "FILTRO"
    .OnAction = "hlis.filtro"
    'MsgBox .Index
End With
End Sub
Private Sub ColorearCeldas()
ThisWorkbook.COLORSEL = ""
FORMCOLORPICKER.Show
If ThisWorkbook.COLORSEL <> "" Then Selection.Interior.Color = ThisWorkbook.COLORSEL
End Sub
Private Sub ColorearTexto()
ThisWorkbook.COLORSEL = ""
FORMCOLORPICKER.Show
If ThisWorkbook.COLORSEL <> "" Then Selection.Font.Color = ThisWorkbook.COLORSEL
End Sub
Private Sub FilAdd()
If ActiveCell.Row >= 4 Then
    HLIS.Range("a" & ActiveCell.Row & ":iv301").Copy Destination:=HLIS.Range("a" & ActiveCell.Row + 1 & ":iv303")
    HLIS.Range("a" & ActiveCell.Row & ":iv" & ActiveCell.Row).ClearContents
End If
End Sub
Private Sub FilDel()
If ActiveCell.Row >= 4 Then
    HLIS.Range("a" & ActiveCell.Row + 1 & ":iv302").Copy Destination:=HLIS.Range("a" & ActiveCell.Row & ":iv302")
End If
End Sub
Private Sub MovFilaAbajo()
If ActiveCell.Row >= 4 And ActiveCell.Row <= 302 Then
    HLIS.Rows(ActiveCell.Row + 1).Cut
    HLIS.Rows(ActiveCell.Row).Insert Shift:=xlShiftDown
    ActiveCell.Offset(1, 0).Select
End If
End Sub
Private Sub MovFilaArriba()
If ActiveCell.Row >= 5 And ActiveCell.Row <= 303 Then
    HLIS.Rows(ActiveCell.Row).Cut
    HLIS.Rows(ActiveCell.Row - 1).Insert Shift:=xlShiftDown
    ActiveCell.Offset(-1, 0).Select
End If
End Sub
Private Sub ColDel()
If ActiveCell.Column >= 4 Then
    HLIS.Columns(ActiveCell.Column).Delete Shift:=xlShiftToLeft
    HLIS.Range("b14") = HLIS.Range("b14") - 1
End If
End Sub
Private Sub ColAdd()
If ActiveCell.Column >= 5 Then
    inp = InputBox("Titulo de la Columna", "A|fffd|ADIR COLUMNA")
    If inp <> "" Then
        HLIS.Columns(ActiveCell.Column).Insert Shift:=xlShiftToLeft
        HLIS.Cells(2, ActiveCell.Column).Value = inp
        HLIS.Cells(2, ActiveCell.Column).Columns.AutoFit
        HLIS.Range("b14") = HLIS.Range("b14") + 1
        HLIS.ofa
    End If
End If
End Sub
Private Sub ColHide()
For Each co In Selection.Columns
    If co.Column >= 4 Then
        HLIS.Columns(co.Column).Hidden = True
    End If
Next
End Sub
Private Sub ColShow()
For Each co In Selection.Columns
    If co.Column >= 4 Then
        HLIS.Columns(co.Column).Hidden = False
    End If
Next
End Sub
Private Sub MovColIzquierda()
If ActiveCell.Column >= 5 Then
    HLIS.Columns(ActiveCell.Column).Cut
    HLIS.Columns(ActiveCell.Column - 1).Insert Shift:=xlToRight
    ActiveCell.Offset(0, -1).Select
End If
End Sub
Private Sub MovColDerecha()
If ActiveCell.Column >= 4 Then
    HLIS.Columns(ActiveCell.Column + 1).Cut
    HLIS.Columns(ActiveCell.Column).Insert Shift:=xlToRight
    ActiveCell.Offset(0, 1).Select
End If
End Sub
Private Sub AnCol()
On Error Resume Next
If IsNumeric(CommandBars("MC").Controls(5).Text) = True Then
    ActiveCell.ColumnWidth = CommandBars("MC").Controls(5).Text
End If
End Sub
Private Sub BtnAutoFit()
ActiveCell.EntireColumn.AutoFit
End Sub
Private Sub TodoTexto()
HLIS.Range(HLIS.Cells(3, ActiveCell.Column), HLIS.Cells(302, ActiveCell.Column)).NumberFormat = "@"
End Sub
Private Sub TodoNuemro()
HLIS.Range(HLIS.Cells(3, ActiveCell.Column), HLIS.Cells(302, ActiveCell.Column)).NumberFormat = "0"
End Sub
Private Sub TodoFecha()
HLIS.Range(HLIS.Cells(3, ActiveCell.Column), HLIS.Cells(302, ActiveCell.Column)).NumberFormat = "dd/mm/yyy"
End Sub
Private Sub BordeDer()
If ActiveCell.Borders(xlEdgeRight).Weight = xlThick Then
    With HLIS.Range(HLIS.Cells(4, ActiveCell.Column), HLIS.Cells(303, ActiveCell.Column)).Borders(xlEdgeRight)
        .LineStyle = xlContinuous
        .Weight = xlThin
    End With
Else
    With HLIS.Range(HLIS.Cells(4, ActiveCell.Column), HLIS.Cells(303, ActiveCell.Column)).Borders(xlEdgeRight)
        .LineStyle = xlContinuous
        .Weight = xlThick
    End With
End If
End Sub
Private Sub BordeIzq()
If ActiveCell.Borders(xlEdgeLeft).Weight = xlThick Then
    With HLIS.Range(HLIS.Cells(4, ActiveCell.Column), HLIS.Cells(303, ActiveCell.Column)).Borders(xlEdgeLeft)
        .LineStyle = xlContinuous
        .Weight = xlThin
    End With
Else
    With HLIS.Range(HLIS.Cells(4, ActiveCell.Column), HLIS.Cells(303, ActiveCell.Column)).Borders(xlEdgeLeft)
        .LineStyle = xlContinuous
        .Weight = xlThick
    End With
End If
End Sub
Private Sub BordeSup()
If ActiveCell.Borders(xlEdgeTop).Weight = xlThick Then
    With HLIS.Range(HLIS.Cells(ActiveCell.Row, 4), HLIS.Cells(ActiveCell.Row, HLIS.Range("b14") + 3)).Borders(xlEdgeTop)
        .LineStyle = xlContinuous
        .Weight = xlThin
    End With
Else
    With HLIS.Range(HLIS.Cells(ActiveCell.Row, 4), HLIS.Cells(ActiveCell.Row, HLIS.Range("b14") + 3)).Borders(xlEdgeTop)
        .LineStyle = xlContinuous
        .Weight = xlThick
    End With
End If
End Sub
Private Sub BordeInf()
If ActiveCell.Borders(xlEdgeBottom).Weight = xlThick Then
    With HLIS.Range(HLIS.Cells(ActiveCell.Row, 4), HLIS.Cells(ActiveCell.Row, HLIS.Range("b14") + 3)).Borders(xlEdgeBottom)
        .LineStyle = xlContinuous
        .Weight = xlThin
    End With
Else
    With HLIS.Range(HLIS.Cells(ActiveCell.Row, 4), HLIS.Cells(ActiveCell.Row, HLIS.Range("b14") + 3)).Borders(xlEdgeBottom)
        .LineStyle = xlContinuous
        .Weight = xlThick
    End With
End If
End Sub
Private Sub OrdenMas()
HLIS.Range("a3:iv302").Sort key1:=HLIS.Cells(2, ActiveCell.Column), order1:=xlDescending, header:=xlYes
End Sub
Private Sub OrdenMenos()
HLIS.Range("a3:iv302").Sort key1:=HLIS.Cells(2, ActiveCell.Column), order1:=xlAscending, header:=xlYes
End Sub
Private Sub Filtro()
Application.ScreenUpdating = False
If CommandBars("MC").Controls(12).Text = "" Then
    HLIS.Range("a3:iv303").EntireRow.Hidden = False
    Filtrado = ""
Else
    fil = CommandBars("MC").Controls(12).Text
    Filtrado = fil
    For f = 4 To 303
        If InStr(UCase(HLIS.Cells(f, ActiveCell.Column)), UCase(fil)) > 0 Then
            HLIS.Range("a" & f).EntireRow.Hidden = False
        Else
            HLIS.Range("a" & f).EntireRow.Hidden = True
        End If
    Next
End If
Application.ScreenUpdating = True
End Sub
Private Sub FilColor()
ThisWorkbook.COLORSEL = ""
FORMCOLORPICKER.Show
If ThisWorkbook.COLORSEL <> "" Then HLIS.Range("d" & ActiveCell.Row & ":iv" & ActiveCell.Row).Interior.Color = ThisWorkbook.COLORSEL
End Sub
Private Sub ColColor()
ThisWorkbook.COLORSEL = ""
FORMCOLORPICKER.Show
If ThisWorkbook.COLORSEL <> "" Then HLIS.Range(HLIS.Cells(4, ActiveCell.Column), HLIS.Cells(303, ActiveCell.Column)).Interior.Color = ThisWorkbook.COLORSEL
End Sub
Sub ResetColumna()
HLIS.Range("b14") = HLIS.Range("cy2").End(xlToLeft).Column - 3
HLIS.Cells.Locked = True
HLIS.Range(HLIS.Cells(2, 4), HLIS.Cells(303, HLIS.Range("cy2").End(xlToLeft).Column)).Locked = False
HLIS.Range("a3:b11").NumberFormat = "@"
End Sub

Sub ofa()
On Error Resume Next
Application.ScreenUpdating = False
    For n = 1 To HLIS.Range("b14") + 3
        HLIS.Range("a3:iv3").AutoFilter field:=n, visibledropdown:=False
    Next
    HLIS.Range("a3:iv303").AutoFilter
Application.ScreenUpdating = True
End Sub
Private Sub Worksheet_Change(ByVal Target As Range)
If Target.Row = 2 And ActiveCell.Value = "" Then Target.Value = "(Vacio)"
End Sub
Attribute VB_Name = "HLITE"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "HN"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Control = "BtnASIGO, 25, 0, MSForms, CommandButton"
Attribute VB_Control = "CheckAutoNombrar, 1, 1, MSForms, CheckBox"
Attribute VB_Control = "BtnPlantilla, 2, 2, MSForms, Image"
Attribute VB_Control = "BtnCatalogos, 3, 3, MSForms, Image"
Attribute VB_Control = "BtnCuadrante, 4, 4, MSForms, Image"
Attribute VB_Control = "BtnInforme, 5, 5, MSForms, Image"
Attribute VB_Control = "BtnFecha, 6, 6, MSForms, Image"
Attribute VB_Control = "CheckDetalles, 10, 7, MSForms, CheckBox"
Attribute VB_Control = "CheckReparto, 11, 8, MSForms, CheckBox"
Attribute VB_Control = "Label1, 12, 9, MSForms, Label"
Attribute VB_Control = "Label2, 13, 10, MSForms, Label"
Attribute VB_Control = "Label3, 14, 11, MSForms, Label"
Attribute VB_Control = "Label4, 15, 12, MSForms, Label"
Attribute VB_Control = "Label5, 16, 13, MSForms, Label"
Attribute VB_Control = "BtnPersonalNN, 17, 14, MSForms, Image"
Attribute VB_Control = "BtnRefundir, 18, 15, MSForms, Image"
Attribute VB_Control = "Label6, 19, 16, MSForms, Label"
'Declaraciones
Public ServSel
Public CometidoSel
Public LevelSel
Public AreaSel
Public Caja
Public IndiSel
Public IndiVinculo
Public LugarSel
Public Dianterior
Public Grabando
Public Eventos
Public EventosNom
Dim DesActivaRastreo
Dim pos
Private Sub BtnASIGO_Click()
AUTOGRABADOR.modo = "PAPELETAS"
AUTOGRABADOR.ACTUALIZA
AUTOGRABADOR.Show
End Sub
'comportamientos
Private Sub Worksheet_Activate()
Application.OnKey "{DEL}", "HN.BorrarCosas"
Application.OnKey "^{v}", "" 'Paste
Application.OnKey "^{c}", "" 'Copy
End Sub
Private Sub Worksheet_Deactivate()
Application.OnKey "{DEL}"
End Sub
Private Sub Worksheet_SelectionChange(ByVal Target As Range)
If ActiveCell.Value = "+" Then
    Application.EnableEvents = False
    Accion Target
    Application.EnableEvents = True
    Application.ScreenUpdating = True
End If
If SELHORA.Visible = False Then
Else
    Unload SELHORA
End If
End Sub
Private Sub Worksheet_BeforeDoubleClick(ByVal Target As Range, Cancel As Boolean)
Cancel = True
If ActiveCell.Column = 19 Then
    SELCOMETIDOS.Inicializa 1
    SELCOMETIDOS.Show
Else
    Application.EnableEvents = False
    Accion Target
    Application.EnableEvents = True
    Application.ScreenUpdating = True
End If
End Sub
Private Sub mio()
Application.ScreenUpdating = True
Application.EnableEvents = True
End Sub
Private Sub Worksheet_BeforeRightClick(ByVal Target As Range, Cancel As Boolean)
Cancel = True
Application.ScreenUpdating = False
Application.EnableEvents = False
Accion Target
Application.EnableEvents = True
Application.ScreenUpdating = True
If ActiveCell.Address = "$G$4" Or ActiveCell.Address = "$G$6" Then BtnFecha_Click
End Sub
Private Sub Worksheet_Change(ByVal Target As Range)
Application.EnableEvents = False
Application.ScreenUpdating = False
base = HN.Range("ai" & Target(1, 1).Row)
TIPO = HN.Range("ah" & Target(1, 1).Row)
If TIPO = "P1" And Target(1, 1).Column = 13 Then 'Cambiar en indicativo
    HBDN.Range("D" & base) = Target(1, 1)
ElseIf TIPO = "P1" And Target(1, 1).Column = 15 Then 'Cambiar en Lugar
    HBDN.Range("E" & base) = Target(1, 1)
ElseIf ActiveCell.Row = 5 And ActiveCell.Column = 15 Then
    HC.Cells(317, HN.Range("al3") + 13).Value = Target(1, 1).Value
ElseIf left(TIPO, 1) = "D" And Mid(TIPO, 2, 2) < 7 Then
    If Target(1, 1).Column = 13 Then
        If IsNumeric(Target(1, 1)) = True Then
            If Target(1, 1) = "" Then
                HBDN.Cells(base, Right(TIPO, 1) * 4 + 27) = Target(1, 1)
            ElseIf Target(1, 1) < HBDN.Range("g" & base) Then
                HBDN.Cells(base, Right(TIPO, 1) * 4 + 27) = Target(1, 1) + 1
            Else
                HBDN.Cells(base, Right(TIPO, 1) * 4 + 27) = Target(1, 1)
            End If
        End If
    End If
    If Target(1, 1).Column = 14 Then
        If IsNumeric(Target(1, 1)) = True Then
            If Target(1, 1) = "" Then
                HBDN.Cells(base, Right(TIPO, 1) * 4 + 28) = Target(1, 1)
            ElseIf Target(1, 1) < HBDN.Range("g" & base) Then
                HBDN.Cells(base, Right(TIPO, 1) * 4 + 28) = Target(1, 1) + 1
            Else
                HBDN.Cells(base, Right(TIPO, 1) * 4 + 28) = Target(1, 1)
            End If
        End If
    End If
    If Target(1, 1).Column = 15 Then
        HBDN.Cells(base, Right(TIPO, 1) * 4 + 29) = Target(1, 1)
    End If
    If Target(1, 1).Column = 19 Then
        HBDN.Cells(base, Right(TIPO, 1) * 4 + 30) = Target(1, 1)
    End If
ElseIf left(TIPO, 1) = "D" And Mid(TIPO, 2, 2) = 8 And Target(1, 1).Column = 13 Then ' Material 1
    HBDN.Range("bC" & base) = Target(1, 1)
ElseIf left(TIPO, 1) = "D" And Mid(TIPO, 2, 2) = 9 And Target(1, 1).Column = 13 Then ' MAterial 2
    HBDN.Range("bD" & base) = Target(1, 1)
ElseIf left(TIPO, 1) = "D" And Mid(TIPO, 2, 2) = 8 And Target(1, 1).Column = 11 Then ' Vehiculo1
    HBDN.Range("bj" & base) = Target(1, 1)
ElseIf left(TIPO, 1) = "D" And Mid(TIPO, 2, 2) = 9 And Target(1, 1).Column = 11 Then ' Vehiculo1
    HBDN.Range("bk" & base) = Target(1, 1)
ElseIf left(TIPO, 1) = "D" And Mid(TIPO, 2, 2) = 8 And Target(1, 1).Column = 18 Then ' Prevenciones
    HBDN.Range("bG" & base) = Target(1, 1)
ElseIf HN.Range("ah" & Target(1, 1).Row - 3) = "P1" And Target(1, 1).Column = 13 Then  ' NumPapeleta
    HBDN.Range("bi" & base) = Target(1, 1)
End If
fin:
If DesActivaRastreo = False Then
    Refresca
    Application.ScreenUpdating = True
End If
Application.EnableEvents = True
End Sub
Sub Viabilidad(f)
If f <> "" Then
If HBDN.Range("bh" & f) = "AUTO" Then
    HBDN.Range("c" & f & ":bh" & f).Interior.ColorIndex = xlColorIndexNone
    'Check efectivos
    For efect = 10 To 29
        If HBDN.Cells(f, efect) <> "" Then
            If left(HBDN.Cells(f, efect), 1) = "|fffd|" Then
                existeefect = Application.Match(Mid(HBDN.Cells(f, efect), 2, 100), HC.Range("do14:do313"), 0)
            Else
                existeefect = Application.Match(HBDN.Cells(f, efect), HC.Range("do14:do313"), 0)
            End If
            If IsError(existeefect) = False Then
                If HC.Range("cp" & existeefect + 13) = "" Then
                    HBDN.Cells(f, efect).Interior.ColorIndex = 45
                Else
                    HBDN.Cells(f, efect).Interior.ColorIndex = 35
                End If
            Else
                HBDN.Cells(f, efect).Interior.ColorIndex = 45
            End If
        End If
    Next
    'check indicativo
    If HBDN.Range("D" & f) <> "" Then
        existeind = Application.Match(HBDN.Range("D" & f), HCON.Range("x5:x32"), 0)
        If IsError(existeind) = False Then
            horai = HBDN.Range("g" & f)
            HORAF = HBDN.Range("h" & f)
            For chkindi = HN.Range("al1") To f - 1
                If HBDN.Range("d" & chkindi).Value = HBDN.Range("D" & f).Value And HBDN.Range("c" & chkindi).Interior.ColorIndex <> 2 Then
                    If horai < HBDN.Range("H" & chkindi).Value And HORAF > HBDN.Range("G" & chkindi).Value Then
                        HBDN.Range("d" & f).Interior.ColorIndex = 45
                        Exit For
                    End If
                End If
            Next
        Else
            HBDN.Range("d" & f).Interior.ColorIndex = 45
        End If
    Else
        HBDN.Range("d" & f).Interior.ColorIndex = 2
    End If
    'Check Material Movil 1
    If HBDN.Range("bj" & f) <> "" Then
        ExisteVehi = Application.Match(HBDN.Range("bj" & f), HCON.Range("ab36:ab63"), 0)
        If IsError(ExisteVehi) = False Then
            If HCON.Range("ac" & ExisteVehi + 35) <> "" Then
                horai = HBDN.Range("g" & f)
                HORAF = HBDN.Range("h" & f)
                correcto = 0
                correcto2 = 0
                For chkvehi = HN.Range("al1") To f - 1
                    If HBDN.Range("bj" & chkvehi).Value = HBDN.Range("bj" & f).Value And HBDN.Range("c" & chkvehi).Interior.ColorIndex <> 2 Then
                        If horai < HBDN.Range("H" & chkvehi).Value And HORAF > HBDN.Range("G" & chkvehi).Value Then
                            HBDN.Range("bj" & f).Interior.ColorIndex = 45
                            correcto = 1
                            Exit For
                        End If
                    End If
                    If HBDN.Range("bk" & chkvehi).Value = HBDN.Range("bj" & f).Value And HBDN.Range("c" & chkvehi).Interior.ColorIndex <> 2 Then
                        If horai < HBDN.Range("H" & chkvehi).Value And HORAF > HBDN.Range("G" & chkvehi).Value Then
                            HBDN.Range("bj" & f).Interior.ColorIndex = 45
                            correcto = 1
                            Exit For
                        End If
                    End If
                Next
                If HBDN.Range("bj" & f).Value = HBDN.Range("bk" & f).Value Then
                    correcto = 1
                    HBDN.Range("bj" & f).Interior.ColorIndex = 45
                End If
                If correcto = 0 Then HBDN.Range("bj" & f).Interior.ColorIndex = 35
            Else
                HBDN.Range("bj" & f).Interior.ColorIndex = 45
            End If
        Else
            HBDN.Range("bj" & f).Interior.ColorIndex = 45
        End If
    
        'Check Material Movil 2
        If HBDN.Range("bk" & f) <> "" Then
            ExisteVehi = Application.Match(HBDN.Range("bk" & f), HCON.Range("ab36:ab63"), 0)
            If IsError(ExisteVehi) = False Then
                If HCON.Range("ac" & ExisteVehi + 35) <> "" Then
                    horai = HBDN.Range("g" & f)
                    HORAF = HBDN.Range("h" & f)
                    correcto = 0
                    correcto2 = 0
                    For chkvehi = HN.Range("al1") To f - 1
                        If HBDN.Range("bk" & chkvehi).Value = HBDN.Range("bk" & f).Value And HBDN.Range("c" & chkvehi).Interior.ColorIndex <> 2 Then
                            If horai < HBDN.Range("H" & chkvehi).Value And HORAF > HBDN.Range("G" & chkvehi).Value Then
                                HBDN.Range("bk" & f).Interior.ColorIndex = 45
                                correcto = 1
                                Exit For
                            End If
                        End If
                        If HBDN.Range("bj" & chkvehi).Value = HBDN.Range("bk" & f).Value And HBDN.Range("c" & chkvehi).Interior.ColorIndex <> 2 Then
                            If horai < HBDN.Range("H" & chkvehi).Value And HORAF > HBDN.Range("G" & chkvehi).Value Then
                                HBDN.Range("bk" & f).Interior.ColorIndex = 45
                                correcto = 1
                                Exit For
                            End If
                        End If
                    Next
                    If HBDN.Range("bj" & f).Value = HBDN.Range("bk" & f).Value Then
                        correcto = 1
                        HBDN.Range("bk" & f).Interior.ColorIndex = 45
                    End If
                    If correcto = 0 Then HBDN.Range("bk" & f).Interior.ColorIndex = 35
                Else
                    HBDN.Range("bk" & f).Interior.ColorIndex = 45
                End If
            Else
                HBDN.Range("bk" & f).Interior.ColorIndex = 45
            End If
        Else
            HBDN.Range("Bk" & f).Interior.ColorIndex = 0
        End If
    Else
        HBDN.Range("Bj" & f).Interior.ColorIndex = 0
    End If
    
    'Check cometidos
    'Principal
    If HBDN.Range("f" & f) <> "" Then
        chkcometido = Application.Match(HBDN.Range("f" & f), HBDCAT.Range("a10:a59"), 0)
        If IsError(chkcometido) = False Then
            If HBDCAT.Range("b" & chkcometido + 9) <> "" Then
                HBDN.Range("f" & f).Interior.ColorIndex = 35
            Else
                HBDN.Range("f" & f).Interior.ColorIndex = 45
            End If
        Else
            HBDN.Range("f" & f).Interior.ColorIndex = 45
        End If
    Else
    HBDN.Range("f" & f).Interior.ColorIndex = 45
    End If
    
    
    For c = 0 To 5
        'si los horarios no estan vacios se comprueba el cometido y despues los horarios
        If HBDN.Cells(f, c * 4 + 31) <> "" Or HBDN.Cells(f, c * 4 + 32) <> "" Then
            If HBDN.Cells(f, c * 4 + 34) <> "" Then
                chkcometido = Application.Match(HBDN.Cells(f, c * 4 + 34), HBDCAT.Range("i10:i159"), 0)
                If IsError(chkcometido) = False Then
                    If HBDCAT.Range("j" & chkcometido + 9) <> "" And HBDN.Cells(f, c * 4 + 33) <> "" Then
                        HBDN.Cells(f, c * 4 + 34).Interior.ColorIndex = 35
                    Else
                        HBDN.Cells(f, c * 4 + 34).Interior.ColorIndex = 45
                    End If
                Else
                    HBDN.Cells(f, c * 4 + 34).Interior.ColorIndex = 45
                End If
            Else
                HBDN.Cells(f, c * 4 + 34).Interior.ColorIndex = 45
            End If
            If HBDN.Cells(f, c * 4 + 31) >= HBDN.Range("g" & f) And HBDN.Cells(f, c * 4 + 32) <= HBDN.Range("h" & f) And HBDN.Cells(f, c * 4 + 31) < HBDN.Cells(f, c * 4 + 32) Then
                HBDN.Range(HBDN.Cells(f, c * 4 + 31), HBDN.Cells(f, c * 4 + 32)).Interior.ColorIndex = 35
            Else
                HBDN.Range(HBDN.Cells(f, c * 4 + 31), HBDN.Cells(f, c * 4 + 32)).Interior.ColorIndex = 45
            End If
        Else
            Exit For
        End If
    Next
    'Check Material
    If HBDN.Cells(f, 55) <> "" Then
        For mat = 55 To 56
            If HBDN.Cells(f, mat) <> "" Then
                Existekmat = Application.Match(HBDN.Cells(f, mat), HCON.Range("ab5:ab32"), 0)
                If IsError(Existekmat) = False Then
                    If HCON.Range("ac" & Existekmat + 4) <> "" Then
                        horai = HBDN.Range("g" & f)
                        HORAF = HBDN.Range("h" & f)
                        correcto = 0
                        For chkmat = HN.Range("al1") To f - 1
                            If HBDN.Cells(chkmat, mat).Value = HBDN.Cells(f, mat).Value Then
                                If horai < HBDN.Range("H" & chkmat).Value And HORAF > HBDN.Range("G" & chkmat).Value Then
                                    HBDN.Cells(f, mat).Interior.ColorIndex = 45
                                    correcto = 1
                                    Exit For
                                End If
                            End If
                        Next
                        If correcto = 0 And HBDN.Cells(f, mat) <> HBDN.Cells(f, mat - 1) Then
                            HBDN.Cells(f, mat).Interior.ColorIndex = 35
                        Else
                            HBDN.Cells(f, mat).Interior.ColorIndex = 45
                        End If
                    Else
                        HBDN.Cells(f, mat).Interior.ColorIndex = 45
                    End If
                Else
                    HBDN.Cells(f, mat).Interior.ColorIndex = 45
                End If
            End If
        Next
    End If
    'Check Eventos
    HBDN.Cells(f, 58).Interior.ColorIndex = 35
    If HBDN.Cells(f, 58) <> "" Then
        For Even = 0 To Len(HBDN.Cells(f, 58)) / 2 - 1
            fieve = Mid(HBDN.Cells(f, 58), Even * 2 + 1, 2) + 10
            If HBDCAT.Range("o" & fieve) = "" Or HBDCAT.Range("p" & fieve) = "" Then
                HBDN.Cells(f, 58).Interior.ColorIndex = 45
                Exit For
            End If
        Next
    Else
        HBDN.Cells(f, 58).Interior.ColorIndex = 0
    End If
    'Check si se puede nombrar
    If HBDN.Range("j" & f) <> "" Then
        If HBDN.Range("e" & f) = "" Then HBDN.Range("e" & f).Interior.ColorIndex = 45
        For checktodo = 4 To 62
            If HBDN.Cells(f, checktodo).Interior.ColorIndex = 45 Then
                HBDN.Range("c" & f).Interior.ColorIndex = 45
                Exit For
            Else
                HBDN.Range("c" & f).Interior.ColorIndex = 35 ' Para nombrar
                If HBDN.Range("bg" & f) <> "" Then HBDN.Range("bg" & f).Interior.ColorIndex = 35
                'HBDN.Range("j" & f & ":ac" & f).Interior.ColorIndex = 35
            End If
        Next
    Else
        HBDN.Range("c" & f).Interior.ColorIndex = 2
    End If
ElseIf HBDN.Range("bh" & f) = "OK" Then
    For grab = 3 To 59
        If HBDN.Cells(f, grab).Interior.ColorIndex = 35 Then HBDN.Cells(f, grab).Interior.ColorIndex = 43
    Next
ElseIf HBDN.Range("bh" & f) = "OMITIR" Then
    HBDN.Range("c" & f & ":bh" & f).Interior.ColorIndex = xlColorIndexNone
    HBDN.Range("c" & f).Interior.ColorIndex = 2
End If
End If
End Sub
'Botones ActiveX
Private Sub BtnCuadrante_Click()
On Error Resume Next
Application.ScreenUpdating = False
Application.EnableEvents = False
'Borrar nombramiento en CASO SI ESTA TODO VACIO
If HBDN.Range("b" & HN.Range("al1") + 1) = "" Then HBDN.Range("a" & HN.Range("al1")).ClearContents
HC.AplicaFiltrosVer
HC.CargaComentariosMes
HC.DiasNombrados
Application.EnableEvents = True
HC.Activate
Application.ScreenUpdating = True
End Sub
Private Sub BtnCatalogos_Click()
If HCON.Range("ag8") = False Then NoUser
Application.EnableEvents = True
MENUCATALOGOS.BtnFestivos.Enabled = False
MENUCATALOGOS.BtnServicios.Enabled = False
MENUCATALOGOS.BtnTurnos.Enabled = False
MENUCATALOGOS.BtnCarac.Enabled = False
MENUCATALOGOS.Show
End Sub
Private Sub BtnInforme_Click()
MENUINFORMES.left = 50
MENUINFORMES.top = 120
MENUINFORMES.Show
End Sub
Private Sub BtnFecha_Click()
Application.ScreenUpdating = False
Application.EnableEvents = False
Dianterior = HN.Range("al1")
'Borrar nombramiento en CASO SI ESTA TODO VACIO
If HBDN.Range("b" & HN.Range("al1") + 1) = "" Then HBDN.Range("a" & HN.Range("al1")).ClearContents
SELDIANOMBRADO.ACTUALIZA
SELDIANOMBRADO.Show
CARGARDIA Dianterior, False
Application.EnableEvents = True
Application.ScreenUpdating = True
End Sub
Private Sub Label4_Click()
BtnFecha_Click
End Sub
Private Sub BtnPlantilla_Click()
Application.ScreenUpdating = False
Application.EnableEvents = False
SELDIANOMBRADO.EsPlantilla = True
SELDIANOMBRADO.ACTUALIZA
SELDIANOMBRADO.Show
If HN.Dianterior = "" Then GoTo fin
HN.Range("AT13:AT612").ClearContents
CARGARDIA HN.Dianterior, True
fin:
Application.EnableEvents = True
Application.ScreenUpdating = True
End Sub
Private Sub Label5_Click()
BtnPlantilla_Click
End Sub
Private Sub BtnRefundir_Click()
Refundir
End Sub
Private Sub Label6_Click()
Refundir
End Sub
Private Sub BtnPersonalNN_Click()
SELPERSONAL2.NN = True
SELPERSONAL2.ACTUALIZA
If SELPERSONAL2.ListPersonas.ListCount = 0 Then
    msg = MsgBox("Todos los efectivos estan nombrados", vbInformation, "Efectivos")
Else
    SELPERSONAL2.Show
End If
End Sub
Private Sub CheckDetalles_MouseDown(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
Application.EnableEvents = False
'despro HBDN
If CheckDetalles = False Then
    HBDN.Range("ad" & HN.Range("al1") & ":ad" & HN.Range("al1") + 99).Replace what:=True, replacement:=False
Else
    HBDN.Range("ad" & HN.Range("al1") & ":ad" & HN.Range("al1") + 99).Replace what:=False, replacement:=True
End If
Refresca
Application.EnableEvents = True
Application.ScreenUpdating = True
End Sub
Private Sub CheckAutoNombrar_Click()
If CheckAutoNombrar = True Then CheckReparto.Enabled = True Else CheckReparto.Enabled = False
End Sub
'Funciones
Private Sub Refundir()
Dim fileimportar As Variant
Dim origen As Workbook
Dim Listado As Worksheet
Application.ScreenUpdating = False
Application.EnableEvents = False
With Application.FileDialog(msoFileDialogOpen)
    .AllowMultiSelect = False
    .Filters.Clear
    .Filters.Add "Archivo REFUNDIR", "*.CSV", 1
    .Title = "Archivo CSV para REFUNDIR datos de otra Unidad"
    If .Show = -1 Then
        For Each fileimportar In .SelectedItems
            If IsFileOpen(.SelectedItems(1)) Then
                msg = MsgBox("El archivo seleccionado se encuentra abierto y no se puede leer. Cierra el archivo y vuelve a intentarlo", vbCritical, "Cierra el origen")
                GoTo fin
            Else
                Set origen = Workbooks.Open(fileimportar)
            End If
            Set Listado = origen.Sheets(1)
            If Listado.Range("b1") = "REFUNDIR SERVICIO" Then
                If Listado.Range("A1") = HN.Range("g6") Then
                    siguiente = HBDN.Range("b" & HN.Range("al1") + 99).End(xlUp).Row + 1
                    If siguiente < HN.Range("al1") Then siguiente = HN.Range("al1") + 1
                    HBDN.Range("a" & siguiente & ":bg" & HN.Range("al1") + 99).Value = Listado.Range("a2:bg100").Value
                    origen.Close savechanges:=False
                    Refresca
                Else
                    origen.Close savechanges:=False
                    msg = MsgBox("La el archivo de refundido no corresponde al dia seleccionado.", vbCritical, "No se puede Refundir ")
                End If
            Else
                origen.Close savechanges:=False
                msg = MsgBox("No se trata de un archivo de refundidos valido.", vbCritical, "No se puede Refundir ")
            End If
        Next
    End If
End With
fin:
Application.EnableEvents = True
Application.ScreenUpdating = True
End Sub
Sub CARGARDIA(Dianterior, Plantilla)
FiltrarServ
If HBDN.Range("a" & HN.Range("al1")).Value <> HN.Range("g6").Value Or Plantilla = True Then
    HBDN.Range("bf" & HN.Range("al1") & ":bf" & HN.Range("al1") + 99).NumberFormat = "@"
    HBDN.Range("a" & HN.Range("al1") & ":bk" & HN.Range("al1") + 99).Value = HBDN.Range("a" & Dianterior & ":bk" & Dianterior + 99).Value
    
    'HBDN.Range("bf" & HN.Range("al1") & ":bf" & HN.Range("al1") + 99) = HBDN.Range("bf" & Dianterior & ":bf" & Dianterior + 99).Value
    HBDN.Range("i" & HN.Range("al1") & ":ac" & HN.Range("al1") + 99).ClearContents
    HBDN.Range("a" & HN.Range("al1")) = HN.Range("g6")
    HBDN.Range("bh" & HN.Range("al1") & ":bh" & HN.Range("al1") + 99).Replace "OK", "AUTO", xlWhole
    HBDN.Range("bi" & HN.Range("al1") & ":bi" & HN.Range("al1") + 99).ClearContents
    If CheckAutoNombrar = True Then
        For serv = 1 To 99
            If HBDN.Range("B" & HN.Range("al1") + serv) = "SERVICIO" Then Autonombrar HN.Range("al1") + serv, True
        Next
    End If
End If
Refresca
Comprobar
Refresca
End Sub
Sub CargarServicios(dia As Integer)
HN.Range("aq13:au612").ClearContents
HN.Range("b13:e612").ClearContents
HN.Range("b13:e612").Interior.ColorIndex = 50
HN.Range("al3") = dia
HN.Range("o4") = HC.Cells(317, dia + 13)
For op = 1 To 24
    If HC.Range("cj" & op + 362) = "O" Or HC.Range("cj" & op + 362) = "OI" Then
        If HC.Cells(op + 362, 101 + dia) = "X" Then
            HN.Range("o4") = HN.Range("o4") & vbCrLf & HC.Range("ci" & 362 + op) & " ( " & HC.Range("ck" & 362 + op) & " )"
        End If
    End If
Next
For pers = 0 To 299
If HC.Range("DO" & pers + 14) <> "" Then
    HN.Range("ar" & pers + 13) = HC.Range("DO" & pers + 14)
    HN.Range("ar" & pers + 313) = "|fffd|" & HC.Range("DO" & pers + 14)
    HN.Range("b" & pers * 2 + 13) = HC.Range("DO" & pers + 14)
    Servicio = HC.Cells(pers + 14, dia + 13)
    HN.Range("aq" & pers + 13) = Servicio
    HN.Range("e" & pers * 2 + 13) = Servicio
    If InStr(1, Servicio, Chr(10)) > 0 Then
        Serv1 = Mid(Servicio, 1, InStr(1, Servicio, Chr(10)) - 1)
        Serv2 = Mid(Servicio, InStr(1, Servicio, Chr(10)) + 1, 50)
        HN.Range("as" & pers + 13).Value = Serv1
        If IsError(Application.VLookup(Serv1, HCON.Range("k5:p204"), 6, 0)) = False Then HN.Range("au" & pers + 13).Value = Application.VLookup(Serv1, HCON.Range("k5:p204"), 6, 0)
        HN.Range("as" & pers + 313).Value = Serv2
        HN.Range("au" & pers + 313).Value = "SERV"
    Else
        HN.Range("as" & pers + 13) = Servicio
        If IsError(Application.VLookup(Servicio, HCON.Range("k5:p204"), 6, 0)) = False Then HN.Range("au" & pers + 13).Value = Application.VLookup(Servicio, HCON.Range("k5:p204"), 6, 0)
    End If
    If HN.Range("au" & pers + 13) = "SITU" Then
        HN.Range("b" & pers * 2 + 13 & ":e" & pers * 2 + 14).Interior.ColorIndex = 15
    Else
        HN.Range("b" & pers * 2 + 13 & ":e" & pers * 2 + 14).Interior.ColorIndex = 2
    End If
End If
Next
End Sub
Private Sub Comprobar()
For compers = 13 To HN.Range("ah2000").End(xlUp).Row
    If left(HN.Range("ah" & compers), 1) = "P" And HN.Range("R" & compers) <> "" Then
        persona = HN.Range("r" & compers)
        Servicio = HBDN.Range("C" & HN.Range("ai" & compers))
        lugar = Application.Match(persona, HN.Range("ar13:ar612"), 0)
        If IsError(lugar) = False Then
            If HN.Range("as" & lugar + 12) <> Servicio Then BorrarPersona HN.Range("ai" & compers), HN.Range("ah" & compers)
        Else
            BorrarPersona HN.Range("ai" & compers), HN.Range("ah" & compers)
        End If
    End If
Next
End Sub
Sub BorrarPersona(base, Posicion)
If HBDN.Range("a" & base) = "R" Then GoTo fin
If left(Posicion, 1) = "P" Then
    persona = Mid(Posicion, 2, 2)
    HBDN.Range(HBDN.Cells(base, persona + 9), HBDN.Cells(base, 28)).Value = HBDN.Range(HBDN.Cells(base, persona + 10), HBDN.Cells(base, 29)).Value
    HBDN.Range("ac" & base).ClearContents
    HBDN.Range("i" & base) = Application.CountA(HBDN.Range("j" & base & ":ac" & base))
End If
fin:
End Sub
Sub BorrarCosas() ' Borrar la gente pulsado DEL
base = HN.Range("ai" & ActiveCell.Row)
TIPO = HN.Range("ah" & ActiveCell.Row)
If InStr(TIPO, "P") >= 1 And ActiveCell.Column = 18 Then
    persona = Mid(TIPO, 2, 2)
    HBDN.Range(HBDN.Cells(base, persona + 9), HBDN.Cells(base, 28)).Value = HBDN.Range(HBDN.Cells(base, persona + 10), HBDN.Cells(base, 29)).Value
    HBDN.Range("ac" & base).ClearContents
    HBDN.Range("i" & base) = Application.CountA(HBDN.Range("j" & base & ":ac" & base))
    HN.Range("d7").Select
Else
    DesActivaRastreo = True
    For Each borra In Selection.Cells
        borra.Value = ""
    Next
    DesActivaRastreo = False
End If
    Refresca
    Application.EnableEvents = True
    Application.ScreenUpdating = True
End Sub
Private Sub Autonombrar(base, cambio)
If HBDN.Range("i" & base).Value = 0 Or cambio = True Then
    HBDN.Range("i" & base & ":ac" & base).ClearContents
    CODIGO = HBDN.Range("C" & base)
    CuantosServ = Application.WorksheetFunction.CountIf(HBDN.Range("c" & base & ":c" & HN.Range("al1") + 99), HBDN.Range("c" & base))
    CuantasPers = 0
    For p = 13 To 612
        If HN.Range("as" & p) = CODIGO And HN.Range("AT" & p) <> "SI" Then CuantasPers = CuantasPers + 1
    Next
    If CheckReparto = True Then
        resultado = Round(CuantasPers / CuantosServ, 0)
    Else
        resultado = CuantasPers
    End If
    For asig = 0 To resultado
        If asig <> 0 Then
            For bp = 13 To 612
                If HN.Range("as" & bp) = CODIGO And HN.Range("AT" & bp) <> "SI" Then
                    HBDN.Cells(base, 9 + asig) = HN.Range("ar" & bp)
                    HN.Range("AT" & bp) = "SI"
                    Exit For
                End If
            Next
        End If
    Next
    HBDN.Range("i" & base) = Application.WorksheetFunction.CountA(HBDN.Range("j" & base & ":ac" & base))
End If
End Sub
Private Sub FiltrarServ() 'Mostrar todos los Servicio
HN.Range("aw13:ay612").ClearContents
HN.Range("as12:au612").AdvancedFilter Action:=xlFilterCopy, criteriarange:=HN.Range("aw6:ax7"), copytorange:=HN.Range("aw12:ax12"), unique:=True
HN.Range("b4:e8").ClearContents
End Sub
Private Sub ServNN() ' Mostrar los Servicios que no se han nombrado
f = 4
c = 2
Pinta = 1
For serv = 13 To 112
    If Application.WorksheetFunction.CountIf(HN.Range("k13:k2000"), HN.Range("aw" & serv)) > 0 Then
        HN.Range("ay" & serv) = "SI"
    Else
        HN.Range("ay" & serv) = ""
        If Pinta = 1 Then HN.Cells(f, c) = HN.Range("aw" & serv)
        f = f + 1
        If f > 8 Then
            f = 4
            c = c + 1
        End If
        If c > 5 Then Pinta = 0
    End If
Next
End Sub
Sub Refresca()
Rastrear HN.Range("al1")
ActualizaPersonas
ServNN
HN.Range("e10") = Application.WorksheetFunction.CountIf(HN.Range("au13:au612"), "SERV") - Application.WorksheetFunction.CountIf(HN.Range("at13:at612"), "SI")
End Sub
Private Sub ActualizaPersonas()
espacio = HN.Range("al1")
HN.Range("at13:at612").ClearContents
For pers = 13 To 612
    If HN.Range("as" & pers) <> "" Then
        If Application.WorksheetFunction.CountIf(HBDN.Range("j" & espacio + 1 & ":ac" & espacio + 99), HN.Range("ar" & pers)) > 0 Then
            HN.Range("AT" & pers) = "SI"
        End If
    End If
Next
End Sub
Private Sub Accion(celda As Range)
HN.Caja = 0
base = HN.Range("ai" & ActiveCell.Row)
TIPO = HN.Range("ah" & ActiveCell.Row)
BaseFin = HN.Range("al1") + 99
'A|fffd|adir + Unidad
If TIPO = "AP" And ActiveCell.Column = 11 Then
    If base = HN.Range("al1") + 1 Then
        HBDN.Range("b" & base) = "UNIDAD"
        HBDN.Range("c" & base) = HCON.Range("d5").Value
        HBDN.Range("b" & base + 1) = "FINUNIDAD"
    Else
        inp = InputBox("Nombre para a Unidad", "A|fffd|adir Unidad")
        If inp <> "" Then
            HBDN.Range("b" & base) = "UNIDAD"
            HBDN.Range("c" & base) = inp
            HBDN.Range("b" & base + 1) = "FINUNIDAD"
        End If
    End If
    HN.Range("d7").Select
'A|fffd|adir + AREA o + Grupo
ElseIf (TIPO = "AU" Or TIPO = "AA") And ActiveCell.Column = 11 Then
    If TIPO = "AA" Then MENULEVEL.BtnArea.Enabled = False
    MENULEVEL.Show
    If HN.LevelSel = 1 Then ' A|fffd|adir Area
        SELAREA.Show
        If AreaSel <> "" Then
            HBDN.Range("a" & base + 2 & ":Bk" & BaseFin).Value = HBDN.Range("a" & base & ":Bk" & BaseFin - 2).Value
            HBDN.Range("a" & base & ":Bk" & base + 1).ClearContents
            HBDN.Range("b" & base) = "AREA"
            HBDN.Range("c" & base) = HN.AreaSel
            HBDN.Range("b" & base + 1) = "FINAREA"
        End If
    ElseIf HN.LevelSel = 2 Then 'A|fffd|adir Grupo
        inp = InputBox("Nombre para este Grupo:" & vbCrLf & vbCrLf & "Ma|fffd|ana, Tarde, Noche, Puertas, Patrullas, Oficina, Patio, etc...", "A|fffd|adir Grupo")
        If inp <> "" Then
            HBDN.Range("a" & base + 2 & ":Bk" & BaseFin).Value = HBDN.Range("a" & base & ":Bk" & BaseFin - 2).Value
            HBDN.Range("a" & base & ":Bk" & base + 1).ClearContents
            HBDN.Range("b" & base) = "GRUPO"
            HBDN.Range("c" & base) = inp
            HBDN.Range("b" & base + 1) = "FINGRUPO"
        End If
    ElseIf HN.LevelSel = 3 Then 'A|fffd|adir Servicio
        SELSERVNOM.Show
        If HN.ServSel <> "" Then
            HBDN.Range("a" & base + 1 & ":Bk" & BaseFin).Value = HBDN.Range("a" & base & ":Bk" & BaseFin - 1).Value
            HBDN.Range("a" & base & ":BG" & base).ClearContents
            HBDN.Range("b" & base) = "SERVICIO"
            CambioServ base, HN.ServSel
        End If
    End If
    HN.Range("d7").Select
 'A|fffd|adir + SERVICIO
ElseIf TIPO = "AG" And ActiveCell.Column = 11 Then
    SELSERVNOM.Show
    If HN.ServSel <> "" Then
        HBDN.Range("a" & base + 1 & ":Bk" & BaseFin).Value = HBDN.Range("a" & base & ":Bk" & BaseFin - 1).Value
        HBDN.Range("a" & base & ":Bk" & base).ClearContents
        HBDN.Range("b" & base) = "SERVICIO"
        HBDN.Range("ae" & base & ":BG" & base).Value = HN.Range("ah4:bj4").Value
        CambioServ base, HN.ServSel
    End If
'Opciones en Unidad
ElseIf TIPO = "UNIDAD" And ActiveCell.Column > 7 And ActiveCell.Column < 24 Then
    MENUCAJA.BtnAnadir.Enabled = True
    MENUCAJA.BtnDuplicar.Enabled = False
    MENUCAJA.BtnModificar.Enabled = True
    MENUCAJA.BtnEliminar.Enabled = True
    MENUCAJA.Caption = "OPCIONES DE UNIDAD"
    MENUCAJA.Height = 116.25
    MENUCAJA.Show
    If HN.Caja = 2 Then 'Modificar nombre Unidad
        inp = InputBox("Nombre de la Unidad", "Modificar", HBDN.Range("c" & base))
        If inp <> "" Then HBDN.Range("C" & HN.Range("ai" & ActiveCell.Row)) = inp
    ElseIf HN.Caja = 3 Then ' Eliminar Unidad
        FinTipo = base + Application.WorksheetFunction.Match("FIN" & TIPO, HBDN.Range("b" & base & ":b" & BaseFin), 0)
        HBDN.Range("a" & base & ":Bk" & BaseFin - (FinTipo - base)).Value = HBDN.Range("a" & FinTipo & ":Bk" & BaseFin).Value
    ElseIf HN.Caja = 1 Then ' A|fffd|adir Unidad
        inp = InputBox("Nombre para a Unidad", "A|fffd|adir Unidad")
        If inp <> "" Then
            HBDN.Range("a" & base + 2 & ":Bk" & BaseFin).Value = HBDN.Range("a" & base & ":Bk" & BaseFin - 2).Value
            HBDN.Range("a" & base & ":Bk" & base + 1).ClearContents
            HBDN.Range("b" & base) = "UNIDAD"
            HBDN.Range("c" & base) = inp
            HBDN.Range("b" & base + 1) = "FINUNIDAD"
        End If
    End If
    HN.Range("d7").Select
'Opciones en Area
ElseIf TIPO = "AREA" And ActiveCell.Column > 8 And ActiveCell.Column < 23 Then
    MENUCAJA.BtnAnadir.Enabled = True
    MENUCAJA.BtnDuplicar.Enabled = False
    MENUCAJA.BtnModificar.Enabled = True
    MENUCAJA.BtnEliminar.Enabled = True
    MENUCAJA.Caption = "OPCIONES DE AREA"
    MENUCAJA.Height = 116.25
    MENUCAJA.Show
    If HN.Caja = 3 Then ' Eliminar Area
        FinTipo = base + Application.WorksheetFunction.Match("FIN" & TIPO, HBDN.Range("b" & base & ":b" & BaseFin), 0)
        HBDN.Range("a" & base & ":Bk" & BaseFin - (FinTipo - base)).Value = HBDN.Range("a" & FinTipo & ":Bk" & BaseFin).Value
    ElseIf HN.Caja = 2 Then ' Modificar Area
        SELAREA.Show
        If HN.AreaSel <> "" Then HBDN.Range("c" & base) = HN.AreaSel
    ElseIf HN.Caja = 1 Then ' A|fffd|adir Area
        SELAREA.Show
        If HN.AreaSel <> "" Then
            HBDN.Range("a" & base + 2 & ":Bk" & BaseFin).Value = HBDN.Range("a" & base & ":Bk" & BaseFin - 2).Value
            HBDN.Range("a" & base & ":Bk" & base + 1).ClearContents
            HBDN.Range("b" & base) = "AREA"
            HBDN.Range("c" & base) = HN.AreaSel
            HBDN.Range("b" & base + 1) = "FINAREA"
        End If
    End If
    HN.Range("d7").Select
'Opciones en GRUPO
ElseIf TIPO = "GRUPO" And ActiveCell.Column > 9 And ActiveCell.Column < 22 Then
    MENUCAJA.BtnAnadir.Enabled = True
    MENUCAJA.BtnDuplicar.Enabled = False
    MENUCAJA.BtnModificar.Enabled = True
    MENUCAJA.BtnEliminar.Enabled = True
    MENUCAJA.Caption = "OPCIONES DE GRUPO"
    MENUCAJA.Height = 116.25
    MENUCAJA.Show
    If HN.Caja = 3 Then ' Eliminar Grupo
        FinTipo = base + Application.WorksheetFunction.Match("FIN" & TIPO, HBDN.Range("b" & base & ":b" & BaseFin), 0)
        HBDN.Range("a" & base & ":Bk" & BaseFin - (FinTipo - base)).Value = HBDN.Range("a" & FinTipo & ":Bk" & BaseFin).Value
    ElseIf HN.Caja = 2 Then ' Modificar Area
        inp = InputBox("Nombre del grupo", "Modificar", HBDN.Range("c" & base))
        If inp <> "" Then HBDN.Range("C" & HN.Range("ai" & ActiveCell.Row)) = inp
    ElseIf HN.Caja = 1 Then ' A|fffd|adir Area
        inp = InputBox("Nombre del grupo", "A|fffd|adir Grupo")
        If inp <> "" Then
            HBDN.Range("a" & base + 2 & ":Bk" & BaseFin).Value = HBDN.Range("a" & base & ":Bk" & BaseFin - 2).Value
            HBDN.Range("a" & base & ":Bk" & base + 1).ClearContents
            HBDN.Range("b" & base) = "GRUPO"
            HBDN.Range("c" & base) = inp
            HBDN.Range("b" & base + 1) = "FINGRUPO"
        End If
    End If
    HN.Range("d7").Select
'Opciones en SERVICIO
ElseIf TIPO = "P1" And ActiveCell.Column = 11 Then
    MENUCAJA.BtnAnadir.Enabled = True
    MENUCAJA.BtnDuplicar.Enabled = True
    MENUCAJA.BtnModificar.Enabled = True
    MENUCAJA.BtnEliminar.Enabled = True
    MENUCAJA.Caption = "OPCIONES DE SERVICIO"
    MENUCAJA.Height = 191.25
    MENUCAJA.Show
    If HN.Caja = 3 Then ' Eliminar Servicio
        HBDN.Range("a" & base & ":Bk" & BaseFin - 1).Value = HBDN.Range("a" & base + 1 & ":Bk" & BaseFin).Value
    ElseIf HN.Caja = 2 Then ' Modificar Servicio
        SELSERVNOM.Show
        CambioServ base, HN.ServSel
    ElseIf HN.Caja = 1 Then ' A|fffd|adir Servicio
        SELSERVNOM.Show
        If HN.ServSel <> "" Then
            HBDN.Range("a" & base + 1 & ":Bk" & BaseFin).Value = HBDN.Range("a" & base & ":Bk" & BaseFin - 1).Value
            HBDN.Range("a" & base & ":Bk" & base).ClearContents
            HBDN.Range("ae" & base & ":BG" & base).Value = HN.Range("ah4:bj4").Value
            HBDN.Range("b" & base) = "SERVICIO"
            CambioServ base, HN.ServSel
        End If
    ElseIf HN.Caja = 4 Then ' Duplicar Servicio
        HBDN.Range("a" & base + 1 & ":Bk" & BaseFin).Value = HBDN.Range("a" & base & ":Bk" & BaseFin - 1).Value
        HBDN.Range("a" & base & ":Bk" & base).ClearContents
        HBDN.Range("b" & base) = "SERVICIO"
        HBDN.Range("ae" & base & ":BG" & base).Value = HN.Range("ah4:bj4").Value
        CambioServ base, HBDN.Range("c" & base + 1)
    ElseIf HN.Caja = 6 Then ' Generar Papeleta no oficial e imprimir
        GenerarPapeleta base
        ImprimirPapeleta
        GoTo fin
    ElseIf HN.Caja = 7 Then ' Generar Papeleta no oficial y guardar a Excel
        GenerarPapeleta base
        GuardarPapeleta
        GoTo fin
    End If
    HN.Range("d7").Select
    'Cometido
ElseIf left(TIPO, 1) = "D" And Mid(TIPO, 2, 2) >= 1 And Mid(TIPO, 2, 2) <= 6 And ActiveCell.Column = 19 Then
    SELCOMETIDOS.Inicializa 1
    SELCOMETIDOS.Show
    GoTo fin
    'Vehiculo1
ElseIf left(TIPO, 1) = "D" And Mid(TIPO, 2, 2) = 8 And ActiveCell.Column = 11 Then
    SELMATERIAL.TIPO = "V"
    SELMATERIAL.ACTUALIZA
    SELMATERIAL.Show
    GoTo fin
ElseIf left(TIPO, 1) = "D" And Mid(TIPO, 2, 2) = 9 And ActiveCell.Column = 11 Then
    SELMATERIAL.TIPO = "V"
    SELMATERIAL.ACTUALIZA
    SELMATERIAL.Show
    GoTo fin
    'Material
ElseIf left(TIPO, 1) = "D" And Mid(TIPO, 2, 2) >= 8 And Mid(TIPO, 2, 2) <= 9 And ActiveCell.Column = 13 Then
    SELMATERIAL.TIPO = "M"
    SELMATERIAL.ACTUALIZA
    SELMATERIAL.Show
    GoTo fin
    'Horas
ElseIf left(TIPO, 1) = "D" And Mid(TIPO, 2, 2) >= 1 And Mid(TIPO, 2, 2) <= 6 And (ActiveCell.Column = 13 Or ActiveCell.Column = 14) Then
    SELHORA.ActualizaHoras
    SELHORA.Show 0
    GoTo fin
    'Lugares
ElseIf left(TIPO, 1) = "D" And Mid(TIPO, 2, 2) >= 1 And Mid(TIPO, 2, 2) <= 6 And ActiveCell.Column = 15 Then
    HN.LugarSel = ""
    SELLUGAR.ACTUALIZA 2
    SELLUGAR.Show
    If HN.LugarSel <> "" Then
        Application.EnableEvents = True
        ActiveCell = HN.LugarSel
        Application.EnableEvents = False
    End If
'Mostrar/Ocultar Detalles de los servicios
ElseIf TIPO = "AFALSE" And ActiveCell.Column = 11 Then HBDN.Range("AD" & base) = True
ElseIf TIPO = "ATRUE" And ActiveCell.Column = 11 Then HBDN.Range("AD" & base) = False
'Seleccion de indicativo
ElseIf TIPO = "P1" And ActiveCell.Column = 13 Then
    HN.IndiSel = ""
    HN.IndiVinculo = ""
    SELINDI.Show
    If HN.IndiSel <> "" Then
        HBDN.Range("D" & base) = HN.IndiSel
        If HN.IndiVinculo <> "" Then
            HBDN.Range("bj" & base) = HN.IndiVinculo
            HBDN.Range("bk" & base) = ""
        End If
    End If
'Selecion de cometido
ElseIf HN.Range("ah" & ActiveCell.Row - 2) = "P1" And ActiveCell.Column = 14 Then
    SELCOMETIDOS.Inicializa 2
    SELCOMETIDOS.Show
    If HN.CometidoSel <> "" Then HBDN.Range("f" & base) = HN.CometidoSel
'Seleccion de lugar principal
ElseIf TIPO = "P1" And ActiveCell.Column = 15 Then
    HN.LugarSel = ""
    SELLUGAR.ACTUALIZA 1
    SELLUGAR.Show
    If HN.LugarSel <> "" Then HBDN.Range("E" & base) = HN.LugarSel
'Seleccion de prevenciones
ElseIf left(TIPO, 1) = "D" And Mid(TIPO, 2, 2) = 8 And ActiveCell.Column = 18 Then
    CatPREVENCIONES.Show
    HBDN.Range("BG" & base) = ActiveCell.Text
    'eventos
ElseIf TIPO = "D11" And ActiveCell.Column = 11 Then
    HN.Eventos = HBDN.Range("BF" & base)
    HN.EventosNom = HBDN.Range("BE" & base)
    SELEVENTOS.Show
    HBDN.Range("BF" & base).NumberFormat = "@"
    HBDN.Range("BF" & base) = HN.Eventos
    HBDN.Range("BE" & base) = HN.EventosNom
'Seleccion de Personas
ElseIf left(TIPO, 1) = "P" And ActiveCell.Column = 18 Then
    SELPERSONAL2.BDN = base
    SELPERSONAL2.Servicio = HBDN.Range("c" & base).Value
    SELPERSONAL2.NN = False
    SELPERSONAL2.ACTUALIZA
    If SELPERSONAL2.ListPersonas.ListCount = 0 Then
        msg = MsgBox("No hay efectivos que a|fffd|adir", vbCritical, "Efectivos")
    Else
        SELPERSONAL2.Show
    End If
'BORRAR DETALLES
ElseIf ActiveCell.Value = "Limpiar" And ActiveCell.Column = 12 Then
    HBDN.Range("ae" & base & ":bG" & base).ClearContents
'CARGAR PRESENTACIONES
ElseIf ActiveCell.Value = "Cargar" And ActiveCell.Column = 12 Then
    MENUPLANTILLAS.base = base
    MENUPLANTILLAS.ACTUALIZA
    MENUPLANTILLAS.Show
'GUARDAR PRESENTACIONES
ElseIf ActiveCell.Value = "Guardar" And ActiveCell.Column = 12 Then
    nuevo = HBDP.Range("a300").End(xlUp).Row + 1
    If nuevo < 300 Then
        inp = InputBox("Define un nombre a estos detalles de servicio:", "Guardar detalles")
        If inp <> "" Then
            For i = 1 To 300
                If HBDP.Range("a" & i) = inp Then
                    msg = MsgBox("Este favorito ya esta creado, por favor selecciona otro nombre", vbCritical, "Nombre repetido")
                    GoTo fin
                End If
            Next
            If inp <> "" Then
                HBDP.Range("a" & nuevo) = "(" & inp & ") " & HN.Range("G4") & " " & Format(HN.Range("g6"), "dd/mm") & " - " & HBDN.Range("c" & base)
                HBDP.Range("ac" & nuevo).NumberFormat = "@"
                HBDP.Range("b" & nuevo & ":ah" & nuevo).Value = HBDN.Range("ae" & base & ":bk" & base).Value
                HBDP.Range("ac" & nuevo) = HBDN.Range("bf" & base)
            End If
        End If
    End If
'OPCIONES AUTO-GRABAR
ElseIf HN.Range("ah" & ActiveCell.Row - 2) = "P1" And ActiveCell.Column = 13 And HN.Cells(ActiveCell.Row + 1, ActiveCell.Column) = "" Then
    If HBDN.Range("BH" & base) <> "OK" Then
        HN.Grabando = 0
        SELNOMBRAR.Show
        If HN.Grabando = 1 Then HBDN.Range("BH" & base) = "AUTO"
        If HN.Grabando = 2 Then HBDN.Range("BH" & base) = "OMITIR"
    End If
End If
Refresca
fin:
End Sub
Private Sub CambioServ(base1, Servsel1)
If Servsel1 <> "" Then
    HBDN.Range("c" & base1) = Format(Servsel1, "@")
    HBDN.Range("f" & base1).Value = Application.WorksheetFunction.VLookup(Servsel1, HCON.Range("k5:o204"), 5, 0)
    HBDN.Range("G" & base1).Value = Application.WorksheetFunction.VLookup(Servsel1, HCON.Range("k5:o204"), 3, 0)
    HBDN.Range("H" & base1).Value = Application.WorksheetFunction.VLookup(Servsel1, HCON.Range("k5:o204"), 4, 0)
    If HBDN.Range("G" & base1).Value > HBDN.Range("H" & base1).Value Then HBDN.Range("H" & base1).Value = HBDN.Range("H" & base1).Value + 1
    If CheckDetalles = True Then HBDN.Range("ad" & base1) = False Else HBDN.Range("ad" & base1) = True
    If CheckAutoNombrar = True Then
        Autonombrar base1, True
    Else
        HBDN.Range("i" & base1 & ":ac" & base1).ClearContents
    End If
End If
End Sub
'Pintar
Private Sub PintaServicio(pos, f, Area, Grupo)
Viabilidad f
With HN.Range("h" & pos & ":w" & pos + 3)
.Interior.ColorIndex = 16
.Borders(xlEdgeLeft).Weight = xlThick
.Borders(xlEdgeLeft).ColorIndex = 10
.Borders(xlEdgeRight).Weight = xlThick
.Borders(xlEdgeRight).ColorIndex = 10
End With
If Area = True Then
    With HN.Range("i" & pos & ":v" & pos + 3)
    .Interior.ColorIndex = 48
    .Borders(xlEdgeLeft).Weight = xlThick
    .Borders(xlEdgeLeft).ColorIndex = 11
    .Borders(xlEdgeRight).Weight = xlThick
    .Borders(xlEdgeRight).ColorIndex = 11
    End With
End If
If Grupo = True Then
    With HN.Range("j" & pos & ":u" & pos + 3)
    .Interior.ColorIndex = 15
    .Borders(xlEdgeLeft).Weight = xlThick
    .Borders(xlEdgeLeft).ColorIndex = 13
    .Borders(xlEdgeRight).Weight = xlThick
    .Borders(xlEdgeRight).ColorIndex = 13
    End With
End If
'Codigo
With HN.Range("k" & pos)
.NumberFormat = "@"
.Value = HBDN.Range("C" & f).Value
.Font.Size = 16
.Font.Bold = True
.HorizontalAlignment = xlCenter
.VerticalAlignment = xlVAlignCenter
End With
HN.Range("k" & pos & ":l" & pos + 1).Merge
'Indicativo
With HN.Range("m" & pos)
.NumberFormat = "@"
.Value = HBDN.Range("D" & f).Value
.Font.Size = 10
.Font.Bold = True
.HorizontalAlignment = xlCenter
.VerticalAlignment = xlVAlignCenter
End With
If HN.Range("aj" & pos) <> "" Then HN.Range("aj" & pos) = ""
HN.Range("m" & pos & ":n" & pos + 1).Merge
If HBDN.Range("D" & f).Value = "" Then
    HN.Range("m" & pos).Value = ".ind"
    HN.Range("m" & pos).Font.ColorIndex = 15
ElseIf HBDN.Range("D" & f).Interior.ColorIndex = 45 Then
    HN.Range("m" & pos).Font.ColorIndex = 3
Else
    HN.Range("m" & pos).Font.ColorIndex = 1
End If
'Lugar
With HN.Range("o" & pos)
.NumberFormat = "@"
.Value = HBDN.Range("e" & f).Value
.Font.Size = 10
.Font.Bold = True
.HorizontalAlignment = xlCenter
.VerticalAlignment = xlVAlignCenter
If HBDN.Range("e" & f).Value = "" Then
    .Value = "Lugar"
    .Font.ColorIndex = 15
Else
    .Font.ColorIndex = 1
End If
End With
HN.Range("o" & pos & ":o" & pos + 1).Merge
'Horario
With HN.Range("k" & pos + 2)
.NumberFormat = "@"
.Value = Format(HBDN.Range("G" & f).Value, "h:mm") & " - " & Format(HBDN.Range("H" & f).Value, "h:mm")
.Font.Size = 8
.Font.Bold = False
.HorizontalAlignment = xlCenter
.VerticalAlignment = xlVAlignCenter
End With
HN.Range("k" & pos + 2 & ":l" & pos + 2).Merge
With HN.Range("m" & pos + 2)
.Interior.ColorIndex = 15
End With
'Cometido
With HN.Range("n" & pos + 2)
.NumberFormat = "@"
.Value = HBDN.Range("f" & f).Value
.Font.Size = 8
.Font.Bold = False
.HorizontalAlignment = xlCenter
.VerticalAlignment = xlVAlignCenter
If HBDN.Range("f" & f).Interior.ColorIndex = 45 Then
    .Font.ColorIndex = 3
Else
    .Font.ColorIndex = 1
End If
End With
HN.Range("n" & pos + 2 & ":o" & pos + 3).Merge
HN.Range("k" & pos & ":o" & pos + 3).Interior.ColorIndex = HBDN.Range("c" & f).Interior.ColorIndex
'Boton AutoGrabar
HN.Range("ai" & pos + 2).Value = f
With HN.Range("m" & pos + 2)
    .Font.Size = 8
    .Font.Bold = True
    .HorizontalAlignment = xlCenter
    .VerticalAlignment = xlVAlignCenter
    .Value = HBDN.Range("BH" & f)
    If HBDN.Range("BH" & f) = "AUTO" Then
        .Interior.ColorIndex = 43
    ElseIf HBDN.Range("BH" & f) = "OK" Then
        .Interior.ColorIndex = 8
    Else
        .Interior.ColorIndex = 48
    End If
End With
With HN.Range("m" & pos + 3)
    numpa = HBDN.Range("Bi" & f)
    If numpa <> "" Then
        .Value = Mid(numpa, InStr(InStr(InStr(numpa, "-") + 1, numpa, "-") + 1, numpa, "-") + 1, 4)
    Else
        .Value = ""
    End If
    .Font.Size = 8
    .Font.Bold = True
    .HorizontalAlignment = xlCenter
    .VerticalAlignment = xlVAlignCenter
End With
'Boton desplegable
With HN.Range("k" & pos + 3)
.NumberFormat = "@"
.Font.Size = 12
.Font.Bold = True
.HorizontalAlignment = xlCenter
.VerticalAlignment = xlVAlignCenter
End With
With HN.Range("k" & pos + 3 & ":l" & pos + 3)
.Merge
.Borders(xlEdgeTop).Weight = xlThick
.Borders(xlEdgeTop).ColorIndex = 15
End With
If HBDN.Range("AD" & f) = True Then
    HN.Range("ah" & pos + 3).Value = "ATRUE"
    HN.Range("K" & pos + 3).Value = HN.Range("ah1")
Else
    HN.Range("ah" & pos + 3).Value = "AFALSE"
    HN.Range("K" & pos + 3).Value = HN.Range("ai1")
End If
HN.Range("ai" & pos + 3).Value = f
'Pintar Recuadros
With HN.Range("k" & pos & ":o" & pos + 3)
.Borders(xlInsideHorizontal).Weight = xlThin
.Borders(xlInsideHorizontal).ColorIndex = 15
.Borders(xlInsideVertical).Weight = xlThin
.Borders(xlInsideVertical).ColorIndex = 15
.BorderAround Weight:=xlMedium
End With

With HN.Range("m" & pos + 2) ' Boton AutoGRabar
    .Borders(xlEdgeRight).ColorIndex = 41
    .Borders(xlEdgeRight).Weight = xlThick
    .Borders(xlEdgeBottom).ColorIndex = 41
    .Borders(xlEdgeBottom).Weight = xlThick
    .Borders(xlEdgeLeft).ColorIndex = 24
    .Borders(xlEdgeLeft).Weight = xlThick
    .Borders(xlEdgeTop).ColorIndex = 24
    .Borders(xlEdgeTop).Weight = xlThick
End With
'Persona 1
With HN.Range("r" & pos)
.NumberFormat = "@"
.Value = HBDN.Range("J" & f).Value
.Interior.ColorIndex = HBDN.Range("J" & f).Interior.ColorIndex
If HBDN.Range("J" & f).Interior.ColorIndex = 45 Then .Font.ColorIndex = 3
.Font.Size = 10
.Font.Bold = True
.HorizontalAlignment = xlLeft
.VerticalAlignment = xlVAlignCenter
End With
With HN.Range("r" & pos & ":t" & pos + 1)
.Merge
.BorderAround Weight:=xlMedium
End With
'Arbol
HN.Range("p" & pos & ":q" & pos).Borders(xlEdgeBottom).Weight = xlMedium
HN.Range("ah" & pos).Value = "P1"
HN.Range("ai" & pos).Value = f
'Persona 2 ???
If HBDN.Range("i" & f).Value > 1 Then
    With HN.Range("r" & pos + 2)
    .NumberFormat = "@"
    .Value = HBDN.Range("K" & f).Value
    .Interior.ColorIndex = HBDN.Range("K" & f).Interior.ColorIndex
    If HBDN.Range("k" & f).Interior.ColorIndex = 45 Then .Font.ColorIndex = 3
    .Font.Size = 10
    .Font.Bold = True
    .HorizontalAlignment = xlLeft
    .VerticalAlignment = xlVAlignCenter
    End With
    With HN.Range("r" & pos + 2 & ":t" & pos + 3)
    .Merge
    .BorderAround Weight:=xlMedium
    End With
    HN.Range("q" & pos + 1 & ":q" & pos + 2).BorderAround Weight:=xlMedium
    If HBDN.Range("i" & f).Value > 2 Then HN.Range("q" & pos + 3).Borders(xlEdgeLeft).Weight = xlMedium
    HN.Range("ah" & pos + 2).Value = "P2"
    HN.Range("ai" & pos + 2).Value = f
End If
pos = pos + 4
'-----------PERSONAS EXTRA--------
If HBDN.Range("i" & f).Value > 2 Then
    For Cpers = 3 To HBDN.Range("i" & f).Value
        With HN.Range("h" & pos & ":w" & pos + 1)
        .Interior.ColorIndex = 16
        .Borders(xlEdgeLeft).Weight = xlThick
        .Borders(xlEdgeLeft).ColorIndex = 10
        .Borders(xlEdgeRight).Weight = xlThick
        .Borders(xlEdgeRight).ColorIndex = 10
        End With
        If Area = True Then
            With HN.Range("i" & pos & ":v" & pos + 1)
            .Interior.ColorIndex = 48
            .Borders(xlEdgeLeft).Weight = xlThick
            .Borders(xlEdgeLeft).ColorIndex = 11
            .Borders(xlEdgeRight).Weight = xlThick
            .Borders(xlEdgeRight).ColorIndex = 11
            End With
        End If
        If Grupo = True Then
            With HN.Range("j" & pos & ":u" & pos + 1)
            .Interior.ColorIndex = 15
            .Borders(xlEdgeLeft).Weight = xlThick
            .Borders(xlEdgeLeft).ColorIndex = 13
            .Borders(xlEdgeRight).Weight = xlThick
            .Borders(xlEdgeRight).ColorIndex = 13
            End With
        End If
        If HBDN.Range("AC" & f) = True Then HN.Range("L" & pos & ":O" & pos + 1).Interior.ColorIndex = 37
        'Persona extra
        With HN.Range("r" & pos)
        .NumberFormat = "@"
        .Value = HBDN.Cells(f, 9 + Cpers).Value
        .Interior.ColorIndex = HBDN.Cells(f, 9 + Cpers).Interior.ColorIndex
        If HBDN.Cells(f, 9 + Cpers).Interior.ColorIndex = 45 Then .Font.ColorIndex = 3
        .Font.Size = 10
        .Font.Bold = True
        .HorizontalAlignment = xlLeft
        .VerticalAlignment = xlVAlignCenter
        End With
        With HN.Range("r" & pos & ":t" & pos + 1)
        .Merge
        .BorderAround Weight:=xlMedium
        End With
        HN.Range("ah" & pos).Value = "P" & Cpers
        HN.Range("ai" & pos).Value = f
        If Cpers = HBDN.Range("i" & f).Value Then
            With HN.Range("q" & pos & ":q" & pos)
            .Borders(xlEdgeLeft).Weight = xlMedium
            .Borders(xlEdgeBottom).Weight = xlMedium
            End With
        Else
            With HN.Range("q" & pos & ":q" & pos + 1)
            .Borders(xlEdgeLeft).Weight = xlMedium
            .Borders(xlInsideHorizontal).Weight = xlMedium
            End With
        End If
        pos = pos + 2
    Next
End If
'Mostrar detalles
If HBDN.Range("AD" & f) = True Then
     With HN.Range("h" & pos & ":w" & pos + 12)
    .Interior.ColorIndex = 16
    .Borders(xlEdgeLeft).Weight = xlThick
    .Borders(xlEdgeLeft).ColorIndex = 10
    .Borders(xlEdgeRight).Weight = xlThick
    .Borders(xlEdgeRight).ColorIndex = 10
    End With
    If Area = True Then
        With HN.Range("i" & pos & ":v" & pos + 12)
        .Interior.ColorIndex = 48
        .Borders(xlEdgeLeft).Weight = xlThick
        .Borders(xlEdgeLeft).ColorIndex = 11
        .Borders(xlEdgeRight).Weight = xlThick
        .Borders(xlEdgeRight).ColorIndex = 11
        End With
    End If
    If Grupo = True Then
        With HN.Range("j" & pos & ":u" & pos + 12)
        .Interior.ColorIndex = 15
        .Borders(xlEdgeLeft).Weight = xlThick
        .Borders(xlEdgeLeft).ColorIndex = 13
        .Borders(xlEdgeRight).Weight = xlThick
        .Borders(xlEdgeRight).ColorIndex = 13
        End With
    End If
    'Colorear Interior
    HN.Range("m" & pos & ":s" & pos + 10).Interior.ColorIndex = 37
    'Label cometidos
    With HN.Range("M" & pos & ":o" & pos)
    .Merge
    .Value = "Cometidos (Horario, lugar, cometido)"
    .Font.ColorIndex = 16
    .Font.Size = 10
    .HorizontalAlignment = xlLeft
    .VerticalAlignment = xlVAlignCenter
    End With
    'Cometidos
    For come = 1 To 6
        HN.Range("o" & pos + come & ":r" & pos + come).Merge
        HN.Range("M" & pos + come & ":N" & pos + come).HorizontalAlignment = xlCenter
        HN.Range("M" & pos + come).Value = HBDN.Cells(f, 27 + come * 4).Value
        HN.Range("M" & pos + come).NumberFormat = "h:mm"
        HN.Range("M" & pos + come).Interior.ColorIndex = HBDN.Cells(f, 27 + come * 4).Interior.ColorIndex
        HN.Range("N" & pos + come).Value = HBDN.Cells(f, 28 + come * 4).Value
        HN.Range("N" & pos + come).NumberFormat = "h:mm"
        HN.Range("N" & pos + come).Interior.ColorIndex = HBDN.Cells(f, 28 + come * 4).Interior.ColorIndex
        HN.Range("O" & pos + come).Value = HBDN.Cells(f, 29 + come * 4).Value
        HN.Range("O" & pos + come).Interior.ColorIndex = HBDN.Cells(f, 30 + come * 4).Interior.ColorIndex
        HN.Range("S" & pos + come).Value = HBDN.Cells(f, 30 + come * 4).Value
        HN.Range("S" & pos + come).Interior.ColorIndex = HBDN.Cells(f, 30 + come * 4).Interior.ColorIndex
        With HN.Range("M" & pos + come & ":s" & pos + come)
        .Font.ColorIndex = 1
        .Font.Size = 9
        .Font.Bold = False
        .VerticalAlignment = xlVAlignCenter
        .HorizontalAlignment = xlLeft
        End With
        If HBDN.Cells(f, 30 + come * 4).Interior.ColorIndex = 45 Then HN.Range("S" & pos + come).Font.ColorIndex = 3 'Caso error catalogo
        If HN.Range("O" & pos + come).Value <> "" And HBDN.Cells(f, 30 + come * 4).Interior.ColorIndex = 45 Then HN.Range("O" & pos + come).Interior.ColorIndex = 35
        
        HN.Range("M" & pos + come & ":N" & pos + come).HorizontalAlignment = xlCenter
    Next
    'Label Vehiculo
    With HN.Range("k" & pos + 7 & ":l" & pos + 7)
    .Merge
    .Value = "Veh|fffd|culo"
    .Font.ColorIndex = 16
    .Interior.ColorIndex = 37
    .Font.Size = 10
    .HorizontalAlignment = xlLeft
    .VerticalAlignment = xlVAlignCenter
    End With
    'Vehiculo1
    With HN.Range("k" & pos + 8 & ":l" & pos + 8)
    .Merge
    If HBDN.Range("bj" & f).Interior.ColorIndex = 45 Then
        .Font.ColorIndex = 3
    Else
        .Font.ColorIndex = 1
    End If
    .Interior.ColorIndex = 37
    .Font.Size = 10
    .Font.Bold = True
    .HorizontalAlignment = xlCenter
    .VerticalAlignment = xlVAlignCenter
    .Interior.ColorIndex = HBDN.Range("bj" & f).Interior.ColorIndex
    .Value = HBDN.Range("bj" & f).Value
    End With
    'Vehiculo2
    With HN.Range("k" & pos + 9 & ":l" & pos + 9)
    .Merge
    If HBDN.Range("bk" & f).Interior.ColorIndex = 45 Then
        .Font.ColorIndex = 3
    Else
        .Font.ColorIndex = 1
    End If
    .Interior.ColorIndex = 37
    .Font.Size = 10
    .Font.Bold = True
    .HorizontalAlignment = xlCenter
    .VerticalAlignment = xlVAlignCenter
    .Interior.ColorIndex = HBDN.Range("bk" & f).Interior.ColorIndex
    .Value = HBDN.Range("bk" & f).Value
    End With
    'Label Material
    With HN.Range("M" & pos + 7 & ":n" & pos + 7)
    .Merge
    .Value = "Material"
    .Font.ColorIndex = 16
    .Font.Size = 10
    .HorizontalAlignment = xlLeft
    .VerticalAlignment = xlVAlignCenter
    End With
    'Material
    For come = 8 To 9
        With HN.Range("m" & pos + come & ":o" & pos + come)
        .Merge
        .Font.Size = 9
        .Font.Bold = False
        .Value = HBDN.Cells(f, 55 + (come - 8)).Value
        .VerticalAlignment = xlVAlignCenter
        .HorizontalAlignment = xlLeft
        .Interior.ColorIndex = HBDN.Cells(f, 55 + (come - 8)).Interior.ColorIndex
        End With
    Next
    'Label Eventos
    With HN.Range("k" & pos + 10 & ":n" & pos + 10)
    .Merge
    .Value = "Eventos"
    .Font.ColorIndex = 16
    .Interior.ColorIndex = 37
    .Font.Size = 10
    .HorizontalAlignment = xlLeft
    .VerticalAlignment = xlVAlignCenter
    End With
    'Enventos
    With HN.Range("k" & pos + 11 & ":o" & pos + 11)
        .Merge
        .WrapText = True
        .Value = HBDN.Cells(f, 57).Value
        .Font.Size = 9
        .Font.Bold = False
        .VerticalAlignment = xlVAlignCenter
        .HorizontalAlignment = xlLeft
        .Interior.ColorIndex = HBDN.Cells(f, 58).Interior.ColorIndex
    End With
    'Label Prevenciones
    With HN.Range("R" & pos + 7)
    .Value = "Prevenciones"
    .Font.ColorIndex = 16
    .Font.Size = 10
    .HorizontalAlignment = xlLeft
    .VerticalAlignment = xlVAlignCenter
    End With
    'Prevenciones
    With HN.Range("R" & pos + 8 & ":s" & pos + 11)
    .Merge
    .Value = HBDN.Cells(f, 59).Value
    .Interior.ColorIndex = HBDN.Range("bg" & f).Interior.ColorIndex
    .Font.Size = 10
    .HorizontalAlignment = xlLeft
    .VerticalAlignment = xlVAlignTop
    .WrapText = True
    End With
    With HN.Range("m" & pos & ":s" & pos + 10)
    .Borders.Weight = xlThin
    .Borders(xlInsideHorizontal).ColorIndex = HN.Range("M" & pos).Interior.ColorIndex
    .Borders(xlInsideVertical).ColorIndex = HN.Range("M" & pos).Interior.ColorIndex
    .BorderAround ColorIndex:=HN.Range("l" & pos).Interior.ColorIndex
    End With
    With HN.Range("k" & pos + 8 & ":o" & pos + 11)
    .Borders.Weight = xlThin
    .Borders(xlInsideHorizontal).ColorIndex = HN.Range("M" & pos).Interior.ColorIndex
    .Borders(xlInsideVertical).ColorIndex = HN.Range("M" & pos).Interior.ColorIndex
    .BorderAround ColorIndex:=HN.Range("l" & pos).Interior.ColorIndex
    End With
    For d = 1 To 12
        HN.Range("ah" & pos + d).Value = "D" & d
        HN.Range("ai" & pos + d).Value = f
    Next
    'Botones Falsos de detalles
    With HN.Range("L" & pos + 1)
    .Value = "Limpiar"
    .NumberFormat = "@"
    .Font.ColorIndex = 51
    .Interior.ColorIndex = 37
    .Font.Size = 8
    .Font.Bold = True
    .HorizontalAlignment = xlCenter
    .VerticalAlignment = xlVAlignCenter
    .BorderAround Weight:=xlThick
    If Grupo = True Then
        .Borders(xlEdgeLeft).ColorIndex = 48
        .Borders(xlEdgeTop).ColorIndex = 48
    Else
        .Borders(xlEdgeLeft).ColorIndex = 15
        .Borders(xlEdgeTop).ColorIndex = 15
    End If
    .Borders(xlEdgeRight).ColorIndex = 1
    .Borders(xlEdgeBottom).ColorIndex = 1
    End With
    With HN.Range("L" & pos + 3)
    .Value = "Cargar"
    .NumberFormat = "@"
    .Font.ColorIndex = 51
    .Interior.ColorIndex = 37
    .Font.Size = 8
    .Font.Bold = True
    .HorizontalAlignment = xlCenter
    .VerticalAlignment = xlVAlignCenter
    .BorderAround Weight:=xlThick
    If Grupo = True Then
        .Borders(xlEdgeLeft).ColorIndex = 48
        .Borders(xlEdgeTop).ColorIndex = 48
    Else
        .Borders(xlEdgeLeft).ColorIndex = 15
        .Borders(xlEdgeTop).ColorIndex = 15
    End If
    .Borders(xlEdgeRight).ColorIndex = 1
    .Borders(xlEdgeBottom).ColorIndex = 1
    End With
    With HN.Range("L" & pos + 5)
    .Value = "Guardar"
    .NumberFormat = "@"
    .Font.ColorIndex = 51
    .Interior.ColorIndex = 37
    .Font.Size = 8
    .Font.Bold = True
    .HorizontalAlignment = xlCenter
    .VerticalAlignment = xlVAlignCenter
    .BorderAround Weight:=xlThick
    If Grupo = True Then
        .Borders(xlEdgeLeft).ColorIndex = 48
        .Borders(xlEdgeTop).ColorIndex = 48
    Else
        .Borders(xlEdgeLeft).ColorIndex = 15
        .Borders(xlEdgeTop).ColorIndex = 15
    End If
    .Borders(xlEdgeRight).ColorIndex = 1
    .Borders(xlEdgeBottom).ColorIndex = 1
    End With
    pos = pos + 13
End If
With HN.Range("h" & pos & ":w" & pos)
.Interior.ColorIndex = 16
.Borders(xlEdgeLeft).Weight = xlThick
.Borders(xlEdgeLeft).ColorIndex = 10
.Borders(xlEdgeRight).Weight = xlThick
.Borders(xlEdgeRight).ColorIndex = 10
End With
If Area = True Then
    With HN.Range("i" & pos & ":v" & pos)
    .Interior.ColorIndex = 48
    .Borders(xlEdgeLeft).Weight = xlThick
    .Borders(xlEdgeLeft).ColorIndex = 11
    .Borders(xlEdgeRight).Weight = xlThick
    .Borders(xlEdgeRight).ColorIndex = 11
    End With
End If
If Grupo = True Then
    With HN.Range("j" & pos & ":u" & pos)
    .Interior.ColorIndex = 15
    .Borders(xlEdgeLeft).Weight = xlThick
    .Borders(xlEdgeLeft).ColorIndex = 13
    .Borders(xlEdgeRight).Weight = xlThick
    .Borders(xlEdgeRight).ColorIndex = 13
    End With
End If
pos = pos + 1
End Sub
Private Sub Rastrear(fila)
despro HN
If Application.Calculation = xlCalculationAutomatic Then Application.Calculation = xlCalculationManual
If Application.ScreenUpdating = True Then Application.ScreenUpdating = False
If Application.EnableEvents = True Then Application.EnableEvents = False
HN.Range("h14:ai612").Clear
HN.Range("h14:x612").Locked = False
HN.Range("h14:ag2000").Interior.ColorIndex = 2
HBDN.Range("a" & fila & ":Bk" & fila + 99).Interior.ColorIndex = 0
pos = 14
For f = fila + 1 To fila + 99
    If todo = 0 Or todo = f Then
        Select Case HBDN.Range("b" & f)
            Case "" 'Fin Hoja
                HN.Range("h" & pos & ":w" & pos).Interior.ColorIndex = 2
                With HN.Range("K" & pos)
                .Value = "+"
                .NumberFormat = "@"
                .Interior.ColorIndex = 16
                .Font.ColorIndex = 2
                .Font.Size = 12
                .Font.Bold = True
                .HorizontalAlignment = xlCenter
                .VerticalAlignment = xlVAlignCenter
                .BorderAround Weight:=xlThick
                .Borders(xlEdgeLeft).ColorIndex = 15
                .Borders(xlEdgeTop).ColorIndex = 15
                .Borders(xlEdgeRight).ColorIndex = 1
                .Borders(xlEdgeBottom).ColorIndex = 1
                End With
                HN.Range("ah" & pos).Value = "AP"
                HN.Range("ai" & pos).Value = f
                Exit For
            '------UNIDAD ----------------------
            Case "UNIDAD" 'Encabezado de Unidad
                With HN.Range("h" & pos & ":w" & pos)
                .Interior.ColorIndex = 50
                .Font.ColorIndex = 2
                .Borders(xlEdgeTop).Weight = xlThick
                .Borders(xlEdgeTop).ColorIndex = 10
                .Borders(xlEdgeLeft).Weight = xlThick
                .Borders(xlEdgeLeft).ColorIndex = 10
                .Borders(xlEdgeRight).Weight = xlThick
                .Borders(xlEdgeRight).ColorIndex = 10
                .NumberFormat = "@"
                .Font.Size = 10
                .Font.Bold = True
                End With
                HN.Range("i" & pos & ":r" & pos).Merge
                HN.Range("i" & pos).HorizontalAlignment = xlLeft
                HN.Range("i" & pos).VerticalAlignment = xlVAlignCenter
                HN.Range("i" & pos).Value = HBDN.Range("c" & f).Value
                With HN.Range("h" & pos + 1 & ":w" & pos + 1)
                .Interior.ColorIndex = 16
                .Borders(xlEdgeLeft).Weight = xlThick
                .Borders(xlEdgeLeft).ColorIndex = 10
                .Borders(xlEdgeRight).Weight = xlThick
                .Borders(xlEdgeRight).ColorIndex = 10
                End With
                HN.Range("ah" & pos).Value = "UNIDAD"
                HN.Range("ai" & pos).Value = f
                Unidad = True
                pos = pos + 2
            Case "FINUNIDAD" 'Pie Pagina Unidad
                With HN.Range("h" & pos & ":w" & pos)
                .Interior.ColorIndex = 16
                .Borders(xlEdgeLeft).Weight = xlThick
                .Borders(xlEdgeLeft).ColorIndex = 10
                .Borders(xlEdgeRight).Weight = xlThick
                .Borders(xlEdgeRight).ColorIndex = 10
                End With
                With HN.Range("K" & pos)
                .Value = "+"
                .NumberFormat = "@"
                .Font.ColorIndex = 2
                .Font.Size = 12
                .Font.Bold = True
                .HorizontalAlignment = xlCenter
                .VerticalAlignment = xlVAlignCenter
                .BorderAround Weight:=xlThick
                .Borders(xlEdgeLeft).ColorIndex = 15
                .Borders(xlEdgeTop).ColorIndex = 15
                .Borders(xlEdgeRight).ColorIndex = 1
                .Borders(xlEdgeBottom).ColorIndex = 1
                End With
                With HN.Range("h" & pos + 1 & ":w" & pos + 1)
                .Interior.ColorIndex = 16
                .Borders(xlEdgeBottom).Weight = xlThick
                .Borders(xlEdgeBottom).ColorIndex = 10
                .Borders(xlEdgeLeft).Weight = xlThick
                .Borders(xlEdgeLeft).ColorIndex = 10
                .Borders(xlEdgeRight).Weight = xlThick
                .Borders(xlEdgeRight).ColorIndex = 10
                End With
                HN.Range("ah" & pos).Value = "AU"
                HN.Range("ai" & pos).Value = f
                HN.Range("h" & pos + 2 & ":w" & pos + 2).Interior.ColorIndex = 2
                Unidad = False
                pos = pos + 3
            '------AREA ----------------------
            Case "AREA" 'Encabezado de Area
                With HN.Range("h" & pos & ":w" & pos)
                .Interior.ColorIndex = 16
                .Font.ColorIndex = 2
                .Borders(xlEdgeLeft).Weight = xlThick
                .Borders(xlEdgeLeft).ColorIndex = 10
                .Borders(xlEdgeRight).Weight = xlThick
                .Borders(xlEdgeRight).ColorIndex = 10
                .NumberFormat = "@"
                .Font.Size = 10
                .Font.Bold = True
                End With
                With HN.Range("i" & pos & ":v" & pos)
                .Borders(xlEdgeTop).Weight = xlThick
                .Borders(xlEdgeTop).ColorIndex = 11
                .Borders(xlEdgeLeft).Weight = xlThick
                .Borders(xlEdgeLeft).ColorIndex = 11
                .Borders(xlEdgeRight).Weight = xlThick
                .Borders(xlEdgeRight).ColorIndex = 11
                .Interior.ColorIndex = 5
                End With
                HN.Range("j" & pos & ":r" & pos).Merge
                HN.Range("j" & pos).HorizontalAlignment = xlLeft
                HN.Range("j" & pos).VerticalAlignment = xlVAlignCenter
                HN.Range("j" & pos).Value = HBDN.Range("c" & f).Value
                With HN.Range("h" & pos + 1 & ":w" & pos + 1)
                .Interior.ColorIndex = 16
                .Borders(xlEdgeLeft).Weight = xlThick
                .Borders(xlEdgeLeft).ColorIndex = 10
                .Borders(xlEdgeRight).Weight = xlThick
                .Borders(xlEdgeRight).ColorIndex = 10
                End With
                With HN.Range("i" & pos + 1 & ":v" & pos + 1)
                .Interior.ColorIndex = 48
                .Borders(xlEdgeLeft).Weight = xlThick
                .Borders(xlEdgeLeft).ColorIndex = 11
                .Borders(xlEdgeRight).Weight = xlThick
                .Borders(xlEdgeRight).ColorIndex = 11
                End With
                HN.Range("ah" & pos).Value = "AREA"
                HN.Range("ai" & pos).Value = f
                Area = True
                pos = pos + 2
            Case "FINAREA" 'Pies del Area
                With HN.Range("h" & pos & ":w" & pos)
                .Interior.ColorIndex = 16
                .Borders(xlEdgeLeft).Weight = xlThick
                .Borders(xlEdgeLeft).ColorIndex = 10
                .Borders(xlEdgeRight).Weight = xlThick
                .Borders(xlEdgeRight).ColorIndex = 10
                End With
                With HN.Range("i" & pos & ":v" & pos)
                .Interior.ColorIndex = 48
                .Borders(xlEdgeLeft).Weight = xlThick
                .Borders(xlEdgeLeft).ColorIndex = 11
                .Borders(xlEdgeRight).Weight = xlThick
                .Borders(xlEdgeRight).ColorIndex = 11
                End With
                With HN.Range("K" & pos)
                .Value = "+"
                .NumberFormat = "@"
                .Font.ColorIndex = 2
                .Font.Size = 12
                .Font.Bold = True
                .HorizontalAlignment = xlCenter
                .VerticalAlignment = xlVAlignCenter
                .BorderAround Weight:=xlThick
                .Borders(xlEdgeLeft).ColorIndex = 15
                .Borders(xlEdgeTop).ColorIndex = 15
                .Borders(xlEdgeRight).ColorIndex = 1
                .Borders(xlEdgeBottom).ColorIndex = 1
                End With
                With HN.Range("h" & pos + 1 & ":w" & pos + 1)
                .Interior.ColorIndex = 16
                .Borders(xlEdgeLeft).Weight = xlThick
                .Borders(xlEdgeLeft).ColorIndex = 10
                .Borders(xlEdgeRight).Weight = xlThick
                .Borders(xlEdgeRight).ColorIndex = 10
                End With
                With HN.Range("i" & pos + 1 & ":v" & pos + 1)
                .Interior.ColorIndex = 48
                .Borders(xlEdgeBottom).Weight = xlThick
                .Borders(xlEdgeBottom).ColorIndex = 11
                .Borders(xlEdgeLeft).Weight = xlThick
                .Borders(xlEdgeLeft).ColorIndex = 11
                .Borders(xlEdgeRight).Weight = xlThick
                .Borders(xlEdgeRight).ColorIndex = 11
                End With
                HN.Range("ah" & pos).Value = "AA"
                HN.Range("ai" & pos).Value = f
                With HN.Range("h" & pos + 2 & ":w" & pos + 2)
                .Interior.ColorIndex = 16
                .Borders(xlEdgeLeft).Weight = xlThick
                .Borders(xlEdgeLeft).ColorIndex = 10
                .Borders(xlEdgeRight).Weight = xlThick
                .Borders(xlEdgeRight).ColorIndex = 10
                End With
                Area = False
                pos = pos + 3
            '------GRUPO ----------------------
            Case "GRUPO" 'Encabezado de Area
                With HN.Range("h" & pos & ":w" & pos)
                .Interior.ColorIndex = 16
                .Font.ColorIndex = 2
                .Borders(xlEdgeLeft).Weight = xlThick
                .Borders(xlEdgeLeft).ColorIndex = 10
                .Borders(xlEdgeRight).Weight = xlThick
                .Borders(xlEdgeRight).ColorIndex = 10
                .NumberFormat = "@"
                .Font.Size = 10
                .Font.Bold = True
                End With
                If Area = True Then
                    With HN.Range("i" & pos & ":v" & pos)
                    .Interior.ColorIndex = 48
                    .Borders(xlEdgeLeft).Weight = xlThick
                    .Borders(xlEdgeLeft).ColorIndex = 11
                    .Borders(xlEdgeRight).Weight = xlThick
                    .Borders(xlEdgeRight).ColorIndex = 11
                    End With
                End If
                With HN.Range("j" & pos & ":u" & pos)
                .Borders(xlEdgeTop).Weight = xlThick
                .Borders(xlEdgeTop).ColorIndex = 13
                .Borders(xlEdgeLeft).Weight = xlThick
                .Borders(xlEdgeLeft).ColorIndex = 13
                .Borders(xlEdgeRight).Weight = xlThick
                .Borders(xlEdgeRight).ColorIndex = 13
                .Interior.ColorIndex = 54
                End With
                HN.Range("k" & pos & ":r" & pos).Merge
                HN.Range("k" & pos).HorizontalAlignment = xlLeft
                HN.Range("k" & pos).VerticalAlignment = xlVAlignCenter
                HN.Range("k" & pos).Value = HBDN.Range("c" & f).Value
                With HN.Range("h" & pos + 1 & ":w" & pos + 1)
                .Interior.ColorIndex = 16
                .Borders(xlEdgeLeft).Weight = xlThick
                .Borders(xlEdgeLeft).ColorIndex = 10
                .Borders(xlEdgeRight).Weight = xlThick
                .Borders(xlEdgeRight).ColorIndex = 10
                End With
                If Area = True Then
                    With HN.Range("i" & pos + 1 & ":v" & pos + 1)
                    .Interior.ColorIndex = 48
                    .Borders(xlEdgeLeft).Weight = xlThick
                    .Borders(xlEdgeLeft).ColorIndex = 11
                    .Borders(xlEdgeRight).Weight = xlThick
                    .Borders(xlEdgeRight).ColorIndex = 11
                    End With
                End If
                With HN.Range("j" & pos + 1 & ":u" & pos + 1)
                .Interior.ColorIndex = 15
                .Borders(xlEdgeLeft).Weight = xlThick
                .Borders(xlEdgeLeft).ColorIndex = 13
                .Borders(xlEdgeRight).Weight = xlThick
                .Borders(xlEdgeRight).ColorIndex = 13
                End With
                HN.Range("ah" & pos).Value = "GRUPO"
                HN.Range("ai" & pos).Value = f
                Grupo = True
                pos = pos + 2
            Case "FINGRUPO" 'Pies del Grupo
                With HN.Range("h" & pos & ":w" & pos)
                .Interior.ColorIndex = 16
                .Borders(xlEdgeLeft).Weight = xlThick
                .Borders(xlEdgeLeft).ColorIndex = 10
                .Borders(xlEdgeRight).Weight = xlThick
                .Borders(xlEdgeRight).ColorIndex = 10
                End With
                If Area = True Then
                    With HN.Range("i" & pos & ":v" & pos)
                    .Interior.ColorIndex = 48
                    .Borders(xlEdgeLeft).Weight = xlThick
                    .Borders(xlEdgeLeft).ColorIndex = 11
                    .Borders(xlEdgeRight).Weight = xlThick
                    .Borders(xlEdgeRight).ColorIndex = 11
                    End With
                End If
                With HN.Range("j" & pos & ":u" & pos)
                .Interior.ColorIndex = 15
                .Borders(xlEdgeLeft).Weight = xlThick
                .Borders(xlEdgeLeft).ColorIndex = 13
                .Borders(xlEdgeRight).Weight = xlThick
                .Borders(xlEdgeRight).ColorIndex = 13
                End With
                With HN.Range("K" & pos)
                .Value = "+"
                .NumberFormat = "@"
                .Font.ColorIndex = 2
                .Font.Size = 12
                .Font.Bold = True
                .HorizontalAlignment = xlCenter
                .VerticalAlignment = xlVAlignCenter
                .BorderAround Weight:=xlThick
                .Borders(xlEdgeLeft).ColorIndex = 48
                .Borders(xlEdgeTop).ColorIndex = 48
                .Borders(xlEdgeRight).ColorIndex = 1
                .Borders(xlEdgeBottom).ColorIndex = 1
                End With
                With HN.Range("h" & pos + 1 & ":w" & pos + 1)
                .Interior.ColorIndex = 16
                .Borders(xlEdgeLeft).Weight = xlThick
                .Borders(xlEdgeLeft).ColorIndex = 10
                .Borders(xlEdgeRight).Weight = xlThick
                .Borders(xlEdgeRight).ColorIndex = 10
                End With
                If Area = True Then
                    With HN.Range("i" & pos + 1 & ":v" & pos + 1)
                    .Interior.ColorIndex = 48
                    .Borders(xlEdgeLeft).Weight = xlThick
                    .Borders(xlEdgeLeft).ColorIndex = 11
                    .Borders(xlEdgeRight).Weight = xlThick
                    .Borders(xlEdgeRight).ColorIndex = 11
                    End With
                End If
                With HN.Range("j" & pos + 1 & ":u" & pos + 1)
                .Interior.ColorIndex = 15
                .Borders(xlEdgeBottom).Weight = xlThick
                .Borders(xlEdgeBottom).ColorIndex = 13
                .Borders(xlEdgeLeft).Weight = xlThick
                .Borders(xlEdgeLeft).ColorIndex = 13
                .Borders(xlEdgeRight).Weight = xlThick
                .Borders(xlEdgeRight).ColorIndex = 13
                End With
                HN.Range("ah" & pos).Value = "AG"
                HN.Range("ai" & pos).Value = f
                With HN.Range("h" & pos + 2 & ":w" & pos + 2)
                .Interior.ColorIndex = 16
                .Borders(xlEdgeLeft).Weight = xlThick
                .Borders(xlEdgeLeft).ColorIndex = 10
                .Borders(xlEdgeRight).Weight = xlThick
                .Borders(xlEdgeRight).ColorIndex = 10
                End With
                If Area = True Then
                    With HN.Range("i" & pos + 2 & ":v" & pos + 2)
                    .Interior.ColorIndex = 48
                    .Borders(xlEdgeLeft).Weight = xlThick
                    .Borders(xlEdgeLeft).ColorIndex = 11
                    .Borders(xlEdgeRight).Weight = xlThick
                    .Borders(xlEdgeRight).ColorIndex = 11
                    End With
                End If
                Grupo = False
                pos = pos + 3
        '------SERVICIO ----------------------
        Case "SERVICIO" 'SERVICIO
            PintaServicio pos, f, Area, Grupo
        End Select
    End If
Next
pro HN
End Sub
Private Sub GenerarPapeleta(pos)
    HPP.Range("B3").Value = HCON.Range("d5").Value ' Nombre Unidad
    HPP.Range("D6").Value = HBDN.Range("d" & pos).Value ' Indicativo
    HPP.Range("L6").Value = HN.Range("g6") + HBDN.Range("g" & pos).Value 'Fecha Inicio
    If HBDN.Range("h" & pos).Value < HBDN.Range("g" & pos).Value Then MasDia = 1 Else MasDia = 0
    HPP.Range("R6").Value = HN.Range("g6") + MasDia + HBDN.Range("h" & pos).Value 'Fecha fin
    HPP.Range("D7").Value = HBDN.Range("f" & pos).Value & " - " & HBDN.Range("e" & pos).Value  'Cometido Principal
    HPP.Range("a11:a20").EntireRow.Hidden = False
    ocultar = 0
    For p = 1 To 10
        If HBDN.Cells(pos, 9 + p) <> "" Then
            'Buscar en cuadrante
            FilaC = Application.Match(Replace(HBDN.Cells(pos, 9 + p), "|fffd|", ""), HC.Range("do14:do313"), 0)
            If IsError(FilaC) = False Then
                HPP.Range("f" & 10 + p) = HC.Range("ck" & FilaC + 13) ' Empleo
                HPP.Range("h" & 10 + p) = HC.Range("cm" & FilaC + 13) ' Nombre
                HPP.Range("k" & 10 + p) = HC.Range("cn" & FilaC + 13) ' Apellido 1
                HPP.Range("n" & 10 + p) = HC.Range("co" & FilaC + 13) ' Apellido 2
                HPP.Range("q" & 10 + p) = HC.Range("cp" & FilaC + 13) ' TIP
            End If
            HPP.Range("s" & 10 + p) = Format((HPP.Range("R6").Value - HPP.Range("L6").Value) * 24, "0.0")
            ocultar = ocultar + 1
        Else
            HPP.Range("a" & 10 + p).EntireRow.Hidden = True
        End If
    Next
    HPP.Range("a24:a29").EntireRow.Hidden = False
    For c = 0 To 5
        If HBDN.Cells(pos, 33 + c * 4) <> "" Then
            HPP.Range("b" & 24 + c) = HBDN.Cells(pos, 34 + c * 4) ' cometido
            HPP.Range("h" & 24 + c) = HBDN.Cells(pos, 33 + c * 4) ' Lugar
            HPP.Range("q" & 24 + c) = HBDN.Cells(pos, 31 + c * 4) ' Hora Incio
            HPP.Range("s" & 24 + c) = HBDN.Cells(pos, 32 + c * 4) ' Hora Fin
            ocultar = ocultar + 1
        Else
            HPP.Range("a" & 24 + c).EntireRow.Hidden = True
        End If
    Next
    HPP.Range("c32").Value = HBDN.Range("bg" & pos).Value
    HPP.Range("a36:a37").EntireRow.Hidden = False
    If HBDN.Range("be" & pos) <> "" Then
        HPP.Range("h36").Value = HBDN.Range("be" & pos).Value ' Eventos
        ocultar = ocultar + 1
    Else
        HPP.Range("a36:a37").EntireRow.Hidden = True
    End If
    FilaM = Application.Match(HBDN.Range("bj" & pos), HCON.Range("ab36:ab63"), 0)
    If IsError(FilaM) = False Then
        HPP.Range("b64").Value = HCON.Range("ac" & FilaM + 35)
    End If
    HPP.Range("a67:a68").EntireRow.Hidden = False
    If HBDN.Range("bc" & pos) <> "" Then HPP.Range("c67").Value = HBDN.Range("bc" & pos).Value Else HPP.Range("a67").EntireRow.Hidden = False
    If HBDN.Range("bd" & pos) <> "" Then HPP.Range("c68").Value = HBDN.Range("bd" & pos).Value Else HPP.Range("a68").EntireRow.Hidden = False
    HPP.Range("a41:a58").EntireRow.Hidden = False
    If ocultar > 0 Then HPP.Range("a41:a" & 41 + ocultar).EntireRow.Hidden = True
    HPP.ResetAllPageBreaks
    With HPP.PageSetup
        .PrintArea = "$a$2:$u$62"
        .Zoom = 100
    End With
    On Error Resume Next
    With HPP
        .HPageBreaks(1).DragOff (xlDown), 1
        .VPageBreaks(1).DragOff (xlToRight), 1
        .PageSetup.PrintArea = "$a$2:$u$136"
        .HPageBreaks.Add before:=HPP.Range("a62")
        .HPageBreaks.Add before:=HPP.Range("a92")
        .VPageBreaks.Add before:=HPP.Range("v1")
    End With
End Sub
Sub BorraPapeleta()
HPP.Range("G3") = ""
HPP.Range("D6") = ""
HPP.Range("L6") = ""
HPP.Range("R6") = ""
HPP.Range("D7") = ""
HPP.Range("b11:t20").ClearContents
HPP.Range("b24:t29").ClearContents
HPP.Range("c32") = ""
HPP.Range("b36:t37").ClearContents
HPP.Range("b64:t64").ClearContents
HPP.Range("b67:t68").ClearContents
End Sub
Private Sub ImprimirPapeleta()
#If VBA6 Then
    Application.ExecuteExcel4Macro ("show.toolbar(""ribbon"",1)")
#End If
HPP.PrintPreview
#If VBA6 Then
    Application.ExecuteExcel4Macro ("show.toolbar(""ribbon"",0)")
#End If
End Sub
Private Sub GuardarPapeleta()
ag = Application.GetSaveAsFilename(InitialFileName:="Papeleta no Oficial.xls", FileFilter:="Archivo Excel (*.xls),*.xls", Title:="Crear CUADRANTE LIGHT")
On Local Error Resume Next
    If ag <> "" And ag <> False Then
        If InStr(ag, ".xls") > 0 Then ext = "" Else ext = "xls"
        Set destino = Workbooks.Add
        HPP.Copy before:=destino.Sheets(1)
        destino.SaveAs filename:=ag & ext, FileFormat:=xlNormal
        destino.Close savechanges:=False
    End If
End Sub
Sub GuiaNom()
With HIN.Range("a1:e1000")
    .Clear
    .Interior.ColorIndex = 2
End With
inicio = HN.Range("al1")
With HIN.Range("c2:d2")
    .Merge
    .Font.Size = 12
    .Value = "GUIA DE NOMBRAMIENTO"
End With
With HIN.Range("d3")
    .Font.Size = 14
    .HorizontalAlignment = xlRight
    .Value = HN.Range("g6")
    .NumberFormat = "dd-mm-yyyy"
End With
orden = 4
For base = inicio + 1 To inicio + 99
    Code = HBDN.Range("b" & base)
    If Code = "UNIDAD" Then
        HIN.Range("d" & orden) = ("(Unidad seleccionada: " & HBDN.Range("c" & base) & ")")
        orden = orden + 1
    ElseIf Code = "AREA" Then
        HIN.Range("d" & orden) = ("    (Area seleccionada: " & HBDN.Range("c" & base) & ")")
        orden = orden + 1
    ElseIf Code = "GRUPO" Then
        HIN.Range("d" & orden) = ("        (Grupo seleccionado: " & HBDN.Range("c" & base) & ")")
        orden = orden + 1
    ElseIf Code = "SERVICIO" Then
        With HIN.Range("b" & orden & ":d" & orden)
            .Borders(xlEdgeTop).Weight = xlThick
        End With
        orden = orden + 1
        HIN.Range("b" & orden).BorderAround ColorIndex:=1, Weight:=xlThick
        busca = Application.Match(HBDN.Range("j" & base), HC.Range("do14:do313"), 0) 'Busca TIP
        If IsError(busca) = True Then Tip = "" Else Tip = HC.Range("cp" & busca + 13)
        busca = Application.VLookup(HBDN.Range("c" & base), HCON.Range("k310:l509"), 2, 0) 'Busca TIPO SERV
        If IsError(busca) = True Then
            TIPO = ""
        Else
            If busca = "01" Then TIPO = "Servicio de Actividad Continuada"
            If busca = "02" Then TIPO = "Servicio de localizaci|fffd|n"
            If busca = "03" Then TIPO = "Comision de servicio"
        End If
        busca = Application.VLookup(HBDN.Range("d" & base), HCON.Range("x5:z32"), 2, 0) 'Busca Seneka
        If IsError(busca) = True Then Seneka = "NO" Else Seneka = busca
        With HIN.Range("d" & orden)
            .HorizontalAlignment = xlLeft
            .Font.Bold = True
            .VerticalAlignment = xlVAlignCenter
            .WrapText = True
            .Value = "Definir Servicio al " & HBDN.Range("j" & base) & " (" & Tip & ") de ( " & HBDN.Range("c" & base) & " ) para el " & Format(HIN.Range("d3"), "dddd, dd/mm/yyyy")
        End With
        orden = orden + 2
        HIN.Range("b" & orden).BorderAround ColorIndex:=1, Weight:=xlThick
        With HIN.Range("d" & orden)
            .HorizontalAlignment = xlLeft
            .Font.Bold = True
            .VerticalAlignment = xlVAlignCenter
            .WrapText = True
            .Value = "Datos Generales : " & TIPO & " con indicativo " & HBDN.Range("d" & base) & " " & Seneka & " asignable SENEKA con horario de " & Format(HBDN.Range("g" & base), "h:mm") & " a " & Format(HBDN.Range("h" & base), "h:mm")
        End With
        orden = orden + 1
        HIN.Range("b" & orden) = "- Descripcion del Servicio - (Doble click para copiar)"
        orden = orden + 1
        
        HIN.Range("b" & orden).BorderAround ColorIndex:=1, Weight:=xlThick
        With HIN.Range("d" & orden)
            .HorizontalAlignment = xlLeft
            .Font.Bold = True
            .VerticalAlignment = xlVAlignCenter
            .WrapText = True
            .Value = HBDN.Range("F" & base) & " - " & HBDN.Range("e" & base)
        End With
        orden = orden + 2
        HIN.Range("b" & orden).BorderAround ColorIndex:=1, Weight:=xlThick
        busca = Application.VLookup(HBDN.Range("f" & base), HCON.Range("q5:r34"), 2, 0) 'Busca Cometido Principal
        If IsError(busca) = True Then
            cometido = "equivalente a " & HBDN.Range("f" & base)
        Else
            If busca = "" Then cometido = "equivalente a " & HBDN.Range("f" & base) Else cometido = busca
        End If
        With HIN.Range("d" & orden)
            .HorizontalAlignment = xlLeft
            .Font.Bold = True
            .VerticalAlignment = xlVAlignCenter
            .WrapText = True
            .Value = "A|fffd|adir cometido principal:  " & cometido & "    con horario de    " & Format(HBDN.Range("g" & base), "h:mm") & "   a   " & Format(HBDN.Range("h" & base), "h:mm") & "    en    " & HBDN.Range("e" & base)
        End With
        orden = orden + 2
        For c = 0 To 5
            If HBDN.Cells(base, 33 + (c * 4)) <> "" Then
                HIN.Range("b" & orden).BorderAround ColorIndex:=1, Weight:=xlThick
                busca = Application.VLookup(HBDN.Cells(base, 34 + (c * 4)), HCON.Range("q5:r34"), 2, 0) 'Busca Cometido Principal
                If IsError(busca) = True Then
                    cometido = "equivalente a " & HBDN.Cells(base, 34 + (c * 4))
                Else
                    If busca = "" Then cometido = "equivalente a " & HBDN.Cells(base, 34 + (c * 4)) Else cometido = busca
                End If
                With HIN.Range("d" & orden)
                    .HorizontalAlignment = xlLeft
                    .Font.Bold = True
                    .VerticalAlignment = xlVAlignCenter
                    .WrapText = True
                    .Value = "A|fffd|adir cometido:  " & cometido & "    con horario de    " & Format(HBDN.Cells(base, 31 + (c * 4)), "h:mm") & "   a   " & Format(HBDN.Cells(base, 32 + (c * 4)), "h:mm") & "    en    " & HBDN.Cells(base, 33 + (c * 4))
                End With
                orden = orden + 2
            End If
        Next
        If HBDN.Range("i" & base) > 1 Then
            For c = 11 To 20
                If HBDN.Cells(base, c) <> "" Then personas = personas & "     " & HBDN.Cells(base, c)
            Next
            HIN.Range("b" & orden).BorderAround ColorIndex:=1, Weight:=xlThick
            With HIN.Range("d" & orden)
                .HorizontalAlignment = xlLeft
                .Font.Bold = True
                .VerticalAlignment = xlVAlignCenter
                .WrapText = True
                .Value = "A|fffd|adir a las persona/s:" & personas
            End With
            orden = orden + 2
        End If
        busca = Application.VLookup(HBDN.Range("bj" & base), HCON.Range("ab36:ac63"), 2, 0) 'Busca Matricula
        If IsError(busca) = True Then Matricula = "" Else Matricula = busca
        If Matricula <> "" Then
            HIN.Range("b" & orden).BorderAround ColorIndex:=1, Weight:=xlThick
            With HIN.Range("d" & orden)
                .HorizontalAlignment = xlLeft
                .Font.Bold = True
                .VerticalAlignment = xlVAlignCenter
                .WrapText = True
                .Value = "A|fffd|adir material movil: Vehiculo con maricula " & Matricula
            End With
            orden = orden + 2
        End If
        If HBDN.Range("bc" & base) <> "" Or HBDN.Range("bD" & base) <> "" Then
            HIN.Range("b" & orden).BorderAround ColorIndex:=1, Weight:=xlThick
            With HIN.Range("d" & orden)
                .HorizontalAlignment = xlLeft
                .Font.Bold = True
                .VerticalAlignment = xlVAlignCenter
                .WrapText = True
                .Value = "A|fffd|adir material:   " & HBDN.Range("bc" & base) & "  -   " & HBDN.Range("bd" & base)
            End With
            orden = orden + 2
        End If
        If HBDN.Range("be" & base) <> "" Then ' eventos
            HIN.Range("b" & orden).BorderAround ColorIndex:=1, Weight:=xlThick
            With HIN.Range("d" & orden)
                .HorizontalAlignment = xlLeft
                .Font.Bold = True
                .VerticalAlignment = xlVAlignCenter
                .WrapText = True
                .Value = "A|fffd|adir los eventos al servicio:   " & HBDN.Range("be" & base)
            End With
            orden = orden + 2
        End If
        If HBDN.Range("bg" & base) <> "" Then ' prevenciones
            HIN.Range("b" & orden).BorderAround ColorIndex:=1, Weight:=xlThick
            HIN.Range("b" & orden - 1).Value = "Prevenciones (Doble click para copiar)"
            With HIN.Range("d" & orden)
                .HorizontalAlignment = xlLeft
                .Font.Bold = True
                .VerticalAlignment = xlVAlignCenter
                .WrapText = True
                .Value = HBDN.Range("bg" & base)
            End With
            orden = orden + 2
        End If
        HIN.Range("b" & orden).BorderAround ColorIndex:=1, Weight:=xlThick
        With HIN.Range("d" & orden)
            .HorizontalAlignment = xlLeft
            .Font.Bold = True
            .VerticalAlignment = xlVAlignCenter
            .WrapText = True
            .Value = "Servicio Nombrado con numero:_____________________"
        End With
        With HIN.Range("b" & orden + 1 & ":d" & orden + 1)
            .Borders(xlEdgeBottom).Weight = xlThick
        End With
        orden = orden + 3
    End If
Next
End Sub

Attribute VB_Name = "HPAR"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "HPASS"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Control = "Cortina, 49, 1, MSForms, Label"
Attribute VB_Name = "HPP"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "HPPER"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "HPSS"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "HPVAC"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "HTUC"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Control = "BtnIncorporar, 1, 0, MSForms, CommandButton"
Attribute VB_Control = "BtnVolver, 2, 1, MSForms, CommandButton"
Private Sub BtnIncorporar_Click()
Application.ScreenUpdating = False
'ThisWorkbook.ExcelModoCuadrante
HC.Activate
Application.EnableEvents = False
HTUC.Range("f9:an58").Replace what:=HTUC.Range("f3"), replacement:=Chr(10), lookat:=xlPart
reemplazar
For tu = 9 To 58
    If HTUC.Range("b" & tu) <> "" Then
        fila = Application.Match(HTUC.Range("b" & tu), HC.Range("cp14:cp313"), 0)
        If IsError(fila) = False Then
            fila = fila + 13
        Else
            HC.Range("m13:m313").EntireRow.Hidden = False
            fila = HC.Range("h314").End(xlUp).Row + 1
            HC.Range("cp" & fila).Value = UCase(HTUC.Range("b" & tu).Value)
            HC.Range("h" & fila & ":j" & fila).Value = HTUC.Range("c" & tu & ":e" & tu).Value
            HC.Range("cm" & fila & ":co" & fila).Value = HTUC.Range("c" & tu & ":e" & tu).Value
            HC.CambiarFiltroDato HC.Range("g13"), 7
        End If
        For d = 1 To HC.Range("bd6")
            HC.Cells(fila, 12 + d).Value = HTUC.Cells(tu, 5 + d).Value
            HC.Cambiar_Servicio fila
        Next
    End If
Next
restablecerhoja
HC.AplicaFiltrosVer
Application.EnableEvents = True
Application.ScreenUpdating = True
End Sub
Private Sub reemplazar()
HTUC.Unprotect
HTUC.Range("f9:an58").Locked = False
HTUC.Range("f9:an58").Replace what:=HTUC.Range("f3"), replacement:=Chr(10), lookat:=xlPart
End Sub
Sub BtnVolver_Click()
Application.ScreenUpdating = False
'ThisWorkbook.ExcelModoCuadrante
HC.Activate
restablecerhoja
Application.ScreenUpdating = True
End Sub
Private Sub Worksheet_Activate()
Application.ScreenUpdating = False
'ThisWorkbook.ExcelModoNormal
Application.Calculation = xlCalculationAutomatic
Application.ScreenUpdating = True
Application.OnKey "{DEL}"
Application.OnKey "{ENTER}"
Application.OnKey "^{v}", "htuc.pegar"
Application.OnKey "^{c}"
Application.OnKey "^{z}"
End Sub
Private Sub restablecerhoja()
HTUC.Unprotect
HTUC.Range("a9:an58").Clear
With HTUC.Range("b9:b58")
    .Locked = False
    .Font.Size = 12
    .Font.Bold = False
    .HorizontalAlignment = xlCenter
    .VerticalAlignment = xlCenter
    .Interior.ColorIndex = 2
    .Font.ColorIndex = 1
    .Borders(xlEdgeLeft).LineStyle = xlContinuous
    .Borders(xlEdgeLeft).Weight = xlMedium
    .Borders(xlEdgeTop).LineStyle = xlContinuous
    .Borders(xlEdgeTop).Weight = xlMedium
    .Borders(xlEdgeBottom).LineStyle = xlContinuous
    .Borders(xlEdgeBottom).Weight = xlMedium
    .Borders(xlInsideHorizontal).LineStyle = xlContinuous
    .Borders(xlInsideHorizontal).Weight = xlThin
    .ClearContents
End With
With HTUC.Range("c9:e58")
    .Font.Size = 12
    .Font.Bold = False
    .HorizontalAlignment = xlLeft
    .VerticalAlignment = xlCenter
    .WrapText = True
    .Interior.ColorIndex = 2
    .Font.ColorIndex = 1
    .Borders(xlEdgeLeft).LineStyle = xlContinuous
    .Borders(xlEdgeLeft).Weight = xlThin
    .Borders(xlInsideHorizontal).LineStyle = xlContinuous
    .Borders(xlInsideHorizontal).Weight = xlThin
    .Borders(xlInsideVertical).LineStyle = xlContinuous
    .Borders(xlInsideVertical).Weight = xlThin
    .Borders(xlEdgeBottom).LineStyle = xlContinuous
    .Borders(xlEdgeBottom).Weight = xlMedium
    .Borders(xlEdgeTop).LineStyle = xlContinuous
    .Borders(xlEdgeTop).Weight = xlMedium
    .ClearContents
    .Locked = False
End With
With HTUC.Range("f9:an58")
    .Font.Size = 12
    .Font.Bold = False
    .HorizontalAlignment = xlCenter
    .VerticalAlignment = xlCenter
    .WrapText = True
    .Interior.ColorIndex = 2
    .Font.ColorIndex = 1
    .Borders(xlEdgeLeft).LineStyle = xlContinuous
    .Borders(xlEdgeLeft).Weight = xlMedium
    .Borders(xlEdgeRight).LineStyle = xlContinuous
    .Borders(xlEdgeRight).Weight = xlMedium
    .Borders(xlEdgeTop).LineStyle = xlContinuous
    .Borders(xlEdgeTop).Weight = xlMedium
    .Borders(xlEdgeBottom).LineStyle = xlContinuous
    .Borders(xlEdgeBottom).Weight = xlMedium
    .Borders(xlInsideHorizontal).LineStyle = xlContinuous
    .Borders(xlInsideHorizontal).Weight = xlThin
    .Borders(xlInsideVertical).LineStyle = xlContinuous
    .Borders(xlInsideVertical).Weight = xlThin
    .ClearContents
    .Locked = False
End With
With HTUC.Range("l9:l58")
    .Borders(xlEdgeRight).LineStyle = xlDash
    .Borders(xlEdgeRight).Weight = xlMedium
End With
With HTUC.Range("s9:s58")
    .Borders(xlEdgeRight).LineStyle = xlDash
    .Borders(xlEdgeRight).Weight = xlMedium
End With
With HTUC.Range("z9:z58")
    .Borders(xlEdgeRight).LineStyle = xlDash
    .Borders(xlEdgeRight).Weight = xlMedium
End With
With HTUC.Range("ag9:ag58")
    .Borders(xlEdgeRight).LineStyle = xlDash
    .Borders(xlEdgeRight).Weight = xlMedium
End With
HTUC.Protect AllowFormattingCells:=True
End Sub
Private Sub pegar()
ActiveCell.PasteSpecial xlPasteAllExceptBorders
End Sub
Private Sub Worksheet_BeforeRightClick(ByVal Target As Range, Cancel As Boolean)
Cancel = True
End Sub
Attribute VB_Name = "HVAC"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Control = "BtnVolver, 1, 0, MSForms, CommandButton"
Attribute VB_Control = "ConfigVacas, 2, 1, MSForms, Image"
Attribute VB_Control = "ConfigPSS, 3, 2, MSForms, Image"
Attribute VB_Control = "ConfigAP, 4, 3, MSForms, Image"
Attribute VB_Control = "CheckFuturo, 5, 4, MSForms, CheckBox"
Attribute VB_Control = "BtnCalcular, 6, 5, MSForms, CommandButton"
Attribute VB_Control = "BtnOrden, 7, 6, MSForms, CommandButton"
Attribute VB_Control = "BtnImprimir, 8, 7, MSForms, CommandButton"
Attribute VB_Control = "BtnPreferencias, 50, 8, MSForms, CommandButton"
Private Sub BtnImprimir_Click()
HVAC.PageSetup.PrintArea = HVAC.Range("b5:y" & HVAC.Range("d306").End(xlUp).Row).Address
#If VBA6 Then
    Application.ExecuteExcel4Macro ("show.toolbar(""ribbon"",1)")
#End If
HVAC.PrintPreview
#If VBA6 Then
    Application.ExecuteExcel4Macro ("show.toolbar(""ribbon"",0)")
#End If
Application.CommandBars.ActiveMenuBar.Enabled = True
Application.CommandBars.ActiveMenuBar.Enabled = False
End Sub
Private Sub BtnOrden_Click()
despro HVAC
SELORDENARVAC.Show
pro HVAC
End Sub

Private Sub BtnPreferencias_Click()
INFOPREFERENCIAS.Show 0
End Sub

Private Sub BtnVolver_Click()
If HVAC.FilterMode = True Then HVAC.ShowAllData
HVAC.Range("C4") = "TODAS"
HC.Activate
End Sub
Sub BtnCalcular_Click()
Application.ScreenUpdating = False
If HVAC.FilterMode = True Then HVAC.ShowAllData
HVAC.Range("C4") = "TODAS"
'Establecer semana santa y navidad
AnoInicial = HVAC.Range("ar14")
For ano = 0 To 3
    For pos = 0 To 7
        HVAC.Cells(15 + pos, ano + 44).Value = HCON.Range("h" & (AnoInicial - ano - 2015) * 8 + 147 + pos).Value
    Next
Next
'Borrar y ejecutar
HVAC.Range("f7:n306").ClearContents
HVAC.Range("p7:x306").ClearContents
HVAC.Range("aa7:am306").ClearContents
For fila = 7 To 306
    If HVAC.Range("e" & fila) <> "" Then Rellenar HVAC.Range("e" & fila), fila
Next
Application.ScreenUpdating = True
End Sub
Private Sub Rellenar(Tip, fila)
Dim MesInicial
Code1v = HVAC.Range("ar8")
Code2v = HVAC.Range("ar9")
Code3v = HVAC.Range("ar10")
Code1a = HVAC.Range("at8")
Code2a = HVAC.Range("at9")
Code3a = HVAC.Range("at10")
Code1p = HVAC.Range("as8")
Code2p = HVAC.Range("as9")
Code3p = HVAC.Range("as10")
If Code1v = "" Then Code1v = Null
If Code2v = "" Then Code2v = Null
If Code3v = "" Then Code3v = Null
If Code1a = "" Then Code1a = Null
If Code2a = "" Then Code2a = Null
If Code3a = "" Then Code3a = Null
If Code1p = "" Then Code1p = Null
If Code2p = "" Then Code2p = Null
If Code3p = "" Then Code3p = Null
AnoInicial = HVAC.Range("ar14")
If CheckFuturo = True Then MesInicial = 130 Else MesInicial = HC.Range("ba5") - 1
If (AnoInicial - 2015) * 12 - 36 + 1 < 1 Then Principio = 1 Else Principio = (AnoInicial - 2015) * 12 - 36 + 1
'Bucle meses
For mes = Principio To MesInicial
    FP = Application.Match(Tip, HBDC.Range("cd" & mes * 500 + 1 & ":cd" & mes * 500 + 301), 0)
    PrimerDiaMes = DateSerial(2015 + Int(mes / 12), mes Mod 12, 1)
    If Weekday(PrimerDiaMes, vbMonday) > 4 Then
        DiaInicial = PrimerDiaMes + 8 - Weekday(PrimerDiaMes, vbMonday)
    Else
        DiaInicial = PrimerDiaMes - Weekday(PrimerDiaMes, vbMonday) + 1
    End If
    If IsError(FP) = False Then
        For dia = 1 To 35
            If HBDC.Cells(FP + mes * 500, dia) = Code1v Or HBDC.Cells(FP + mes * 500, dia) = Code2v Or HBDC.Cells(FP + mes * 500, dia) = Code3v Then
                'Vacaciones Verano
                If DiaInicial + dia - 1 >= DateSerial(2015 + Int(mes / 12), 6, 15) And DiaInicial + dia - 1 <= DateSerial(2015 + Int(mes / 12), 7, 15) Then
                    primerturno = DiaInicial + dia - 1
                ElseIf DiaInicial + dia - 1 >= DateSerial(2015 + Int(mes / 12), 7, 16) And DiaInicial + dia - 1 <= DateSerial(2015 + Int(mes / 12), 8, 15) Then
                    SegundoTurno = DiaInicial + dia - 1
                ElseIf DiaInicial + dia - 1 >= DateSerial(2015 + Int(mes / 12), 8, 16) And DiaInicial + dia - 1 <= DateSerial(2015 + Int(mes / 12), 9, 15) Then
                    TercerTurno = DiaInicial + dia - 1
                Else
                'Vacaciones no verano
                    UDVacacionesNV = DiaInicial + dia - 1
                End If
            ElseIf HBDC.Cells(FP + mes * 500, dia) = Code1a Or HBDC.Cells(FP + mes * 500, dia) = Code2a Or HBDC.Cells(FP + mes * 500, dia) = Code3a Then
                'asuntos particulares
                UDAP = DiaInicial + dia - 1
            ElseIf HBDC.Cells(FP + mes * 500, dia) = Code1p Or HBDC.Cells(FP + mes * 500, dia) = Code2p Or HBDC.Cells(FP + mes * 500, dia) = Code3p Then
                For pos = 4 To 1 Step -1
                    'Esta definido el turno
                    'SEMANA SANTA
                    If HVAC.Cells(15, pos + 43) > 1 And HVAC.Cells(16, pos + 43) > 1 Then
                        If DiaInicial + dia - 1 >= HVAC.Cells(15, pos + 43).Value And DiaInicial + dia - 1 <= HVAC.Cells(16, pos + 43).Value Then
                            HVAC.Cells(fila, 20 - pos) = 1
                        End If
                    End If
                    If HVAC.Cells(16, pos + 43) > 1 And HVAC.Cells(17, pos + 43) > 1 Then
                        If DiaInicial + dia - 1 >= HVAC.Cells(16, pos + 43).Value And DiaInicial + dia - 1 <= HVAC.Cells(17, pos + 43).Value Then
                            HVAC.Cells(fila, 20 - pos) = 2
                        End If
                    End If
                    If HVAC.Cells(17, pos + 43) > 1 And HVAC.Cells(18, pos + 43) > 1 Then
                        If DiaInicial + dia - 1 >= HVAC.Cells(17, pos + 43).Value And DiaInicial + dia - 1 <= HVAC.Cells(18, pos + 43).Value Then
                            HVAC.Cells(fila, 20 - pos) = 3
                        End If
                    End If
                    'NAVIDAD
                    If HVAC.Cells(19, pos + 43) > 1 And HVAC.Cells(20, pos + 43) > 1 Then
                        If DiaInicial + dia - 1 >= HVAC.Cells(19, pos + 43).Value And DiaInicial + dia - 1 <= HVAC.Cells(20, pos + 43).Value Then
                            HVAC.Cells(fila, 24 - pos) = 1
                        End If
                    End If
                    If HVAC.Cells(20, pos + 43) > 1 And HVAC.Cells(21, pos + 43) > 1 Then
                        If DiaInicial + dia - 1 >= HVAC.Cells(20, pos + 43).Value And DiaInicial + dia - 1 <= HVAC.Cells(21, pos + 43).Value Then
                            HVAC.Cells(fila, 24 - pos) = 2
                        End If
                    End If
                    If HVAC.Cells(21, pos + 43) > 1 And HVAC.Cells(22, pos + 43) > 1 Then
                        If DiaInicial + dia - 1 >= HVAC.Cells(21, pos + 43).Value And DiaInicial + dia - 1 <= HVAC.Cells(22, pos + 43).Value Then
                            HVAC.Cells(fila, 24 - pos) = 3
                        End If
                    End If
                Next
            End If
        Next
    End If
    Paso = Paso + 1
    If Paso = 8 And primerturno <> "" Then
        HVAC.Range("F" & fila) = "1,"
        HVAC.Range("ab" & fila) = primerturno
        primerturno = ""
    End If
    If Paso = 9 And SegundoTurno <> "" Then
        HVAC.Range("F" & fila) = HVAC.Range("F" & fila) & "2,"
        HVAC.Range("ac" & fila) = SegundoTurno
        SegundoTurno = ""
    End If
    If Paso = 10 And TercerTurno <> "" Then
        HVAC.Range("F" & fila) = HVAC.Range("F" & fila) & "3,"
        HVAC.Range("ad" & fila) = TercerTurno
        TercerTurno = ""
    End If
    If Paso = 20 And primerturno <> "" Then
        HVAC.Range("h" & fila) = "1,"
        HVAC.Range("ae" & fila) = primerturno
        primerturno = ""
    End If
    If Paso = 21 And SegundoTurno <> "" Then
        HVAC.Range("h" & fila) = HVAC.Range("h" & fila) & "2,"
        HVAC.Range("af" & fila) = SegundoTurno
        SegundoTurno = ""
    End If
    If Paso = 22 And TercerTurno <> "" Then
        HVAC.Range("h" & fila) = HVAC.Range("h" & fila) & "3,"
        HVAC.Range("ag" & fila) = TercerTurno
        TercerTurno = ""
    End If
    If Paso = 32 And primerturno <> "" Then
        HVAC.Range("j" & fila) = "1,"
        HVAC.Range("ah" & fila) = primerturno
        primerturno = ""
    End If
    If Paso = 33 And SegundoTurno <> "" Then
        HVAC.Range("j" & fila) = HVAC.Range("j" & fila) & "2,"
        HVAC.Range("ai" & fila) = SegundoTurno
        SegundoTurno = ""
    End If
    If Paso = 34 And TercerTurno <> "" Then
        HVAC.Range("j" & fila) = HVAC.Range("j" & fila) & "3,"
        HVAC.Range("aj" & fila) = TercerTurno
        TercerTurno = ""
    End If
    If Paso = 43 And primerturno <> "" Then
        HVAC.Range("l" & fila) = "1,"
        HVAC.Range("ak" & fila) = primerturno
        primerturno = ""
    End If
    If Paso = 44 And SegundoTurno <> "" Then
        HVAC.Range("l" & fila) = HVAC.Range("l" & fila) & "2,"
        HVAC.Range("al" & fila) = SegundoTurno
        SegundoTurno = ""
    End If
    If Paso = 45 And TercerTurno <> "" Then
        HVAC.Range("l" & fila) = HVAC.Range("l" & fila) & "3,"
        HVAC.Range("am" & fila) = TercerTurno
        TercerTurno = ""
    End If
Next
HVAC.Range("n" & fila) = UDVacacionesNV
HVAC.Range("x" & fila) = UDAP
BtnOrden.Enabled = True
End Sub
Private Sub ConfigAP_Click()
SelVacas.Code1.ControlSource = HVAC.Cells(8, 43 + 3).Address
SelVacas.Code2.ControlSource = HVAC.Cells(9, 43 + 3).Address
SelVacas.Code3.ControlSource = HVAC.Cells(10, 43 + 3).Address
HVAC.Cells(8, 43 + 3) = UCase(HVAC.Cells(8, 43 + 3))
HVAC.Cells(9, 43 + 3) = UCase(HVAC.Cells(9, 43 + 3))
HVAC.Cells(10, 43 + 3) = UCase(HVAC.Cells(10, 43 + 3))
SelVacas.Show
HVAC.Range("y4") = HVAC.Cells(8, 43 + 3) & "  " & HVAC.Cells(9, 43 + 3) & "  " & HVAC.Cells(10, 43 + 3)
End Sub
Private Sub ConfigPSS_Click()
SelVacas.Code1.ControlSource = HVAC.Cells(8, 43 + 2).Address
SelVacas.Code2.ControlSource = HVAC.Cells(9, 43 + 2).Address
SelVacas.Code3.ControlSource = HVAC.Cells(10, 43 + 2).Address
HVAC.Cells(8, 43 + 2) = UCase(HVAC.Cells(8, 43 + 2))
HVAC.Cells(9, 43 + 2) = UCase(HVAC.Cells(9, 43 + 2))
HVAC.Cells(10, 43 + 2) = UCase(HVAC.Cells(10, 43 + 2))
SelVacas.Show
HVAC.Range("Q4") = HVAC.Cells(8, 43 + 2) & "  " & HVAC.Cells(9, 43 + 2) & "  " & HVAC.Cells(10, 43 + 2)
End Sub
Private Sub ConfigVacas_Click()
SelVacas.Code1.ControlSource = HVAC.Cells(8, 43 + 1).Address
SelVacas.Code2.ControlSource = HVAC.Cells(9, 43 + 1).Address
SelVacas.Code3.ControlSource = HVAC.Cells(10, 43 + 1).Address
HVAC.Cells(8, 43 + 1) = UCase(HVAC.Cells(8, 43 + 1))
HVAC.Cells(9, 43 + 1) = UCase(HVAC.Cells(9, 43 + 1))
HVAC.Cells(10, 43 + 1) = UCase(HVAC.Cells(10, 43 + 1))
SelVacas.Show
HVAC.Range("H4") = HVAC.Cells(8, 43 + 1) & "  " & HVAC.Cells(9, 43 + 1) & "  " & HVAC.Cells(10, 43 + 1)
End Sub
Private Sub Worksheet_Activate()
If Application.Calculation = xlCalculationAutomatic Then Application.Calculation = xlCalculationManual
BtnOrden.Enabled = False
End Sub

Private Sub Worksheet_BeforeDoubleClick(ByVal Target As Range, Cancel As Boolean)
Cancel = True
If Target.Address = "$C$4" Then
    If HVAC.FilterMode = True Then HVAC.ShowAllData
    SELVERAREA.Show
    If HVAC.Range("c4") = "TODAS" Then
    Else
        HVAC.Range("a6:am306").AutoFilter field:=3, Criteria1:=HVAC.Range("c4")
    End If
End If
End Sub

Private Sub Worksheet_BeforeRightClick(ByVal Target As Range, Cancel As Boolean)
Cancel = True
If Target.Address = "$C$4" Then
    If HVAC.FilterMode = True Then HVAC.ShowAllData
    SELVERAREA.Show
    If HVAC.Range("c4") = "TODAS" Then
    Else
        HVAC.Range("a6:am306").AutoFilter field:=3, Criteria1:=HVAC.Range("c4")
    End If
End If
End Sub
Private Sub ofa()
        For n = 1 To 39
            HVAC.Range("a5:am6").AutoFilter field:=n, visibledropdown:=False
        Next
End Sub
Attribute VB_Name = "HVAL"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "HVICI"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Hoja1"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "INFOPREFERENCIAS"
Attribute VB_Base = "0{C373E28D-E3DD-4CD2-93A3-3D539962CBFE}{75833B0C-939A-4C4F-B6B7-C44EDF2198D4}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False

Attribute VB_Name = "Importar"
Sub ImportarSIGO()
msg = MsgBox("Necesitaras tener descargado previamente el archivo de Excel generado por SIGO" & vbCrLf & vbCrLf & "La descarga esta disponible desde GESTION / PERSONAL / X.", vbInformation, "ADVERTENCIA IMPORTANTE")
If HASI.Range("aa1") <> 0 Then msg = MsgBox("Hay personal ya definido." & vbCrLf & "|fffd|Quieres mantener la lista de personal que existe?" & vbCrLf & "Pulsa SI para mantenerla o NO para borrar TODO y solo importar datos desde SIGO", 3, "RESOLUCION DE LISTA")
If msg = 2 Then End
If msg = 7 Then HASI.Range("b4:p303").ClearContents
Application.EnableEvents = False
Application.ScreenUpdating = False
Application.Calculation = xlCalculationManual
Dim fileimportar As Variant
Dim origen As Workbook
Dim Listado As Worksheet
With Application.FileDialog(msoFileDialogOpen)
    .AllowMultiSelect = False
    .Filters.Clear
    .Filters.Add "Informe de Personal de SIGO", "*.XLS", 1
    .Title = "Seleccion de archivo SIGO"
    If .Show = -1 Then
        For Each fileimportar In .SelectedItems
            On Error GoTo fallo
            If IsFileOpen(.SelectedItems(1)) Then
                msg = MsgBox("El archivo seleccionado se encuentra abierto y no se puede leer. Cierra el archivo y vuelve a intentarlo", vbCritical, "Cierra el origen")
                GoTo fin
            Else
                Set origen = Workbooks.Open(fileimportar)
            End If
            Set Listado = origen.Sheets("Listado de efectivos")
        Antes = HASI.Range("aa1") + 4
        Otro = Antes
        For n = 1 To 400
        If Otro = 300 Then Exit For
            If Listado.Range("d" & n) <> "Nombre" And Listado.Range("d" & n) <> "" Then
                If Listado.Range("b" & n) <> "" Then
                    HASI.Range("e" & Otro & ":f" & Otro).Value = Listado.Range("b" & n & ":c" & n).Value
                    HASI.Range("g" & Otro & ":g" & Otro).Value = Listado.Range("e" & n).Value
                    HASI.Range("c" & Otro & ":c" & Otro).Value = Replace(Replace(Replace(Listado.Range("a" & n).Value, "GUARDIA CIVIL", "GC"), "GUARDIA ALUMNO (PRACTICAS)", "GC-A"), "SARGENTO", "Sgto.")
                    HASI.Range("d" & Otro & ":d" & Otro).Value = Listado.Range("d" & n).Value
                    Otro = Otro + 1
                End If
            End If
        Next
        despues = Otro - 1
        For n = Antes To despues
            HASI.Range("b" & n) = HASI.Range("b" & n).Row - 3
        Next
    origen.Close savechanges:=False
        Next
        'Caso Cuadrante anterior vacio
        If HBDC.Range("a" & HC.Range("ba8") - 500 - 1) = "" Then
            filaantes = HC.Range("ba8") - 500
            HBDC.Range("a" & filaantes - 1) = "AUTO"
            HBDC.Range("bw" & filaantes & ":bw" & filaantes + 299).Value = HASI.Range("b4:b303").Value 'Antiguedad
            HBDC.Range("by" & filaantes & ":by" & filaantes + 299).Value = HASI.Range("c4:c303").Value ' Empleo
            HBDC.Range("ca" & filaantes & ":ce" & filaantes + 299).Value = HASI.Range("d4:h303").Value ' Nombre, tip y telefono
        End If
    End If
End With
GoTo fin
fallo:
origen.Close savechanges:=False
fin:
Application.Calculate
Application.EnableEvents = True
Application.ScreenUpdating = True
End Sub
Sub ImportarAntiguedadSIGO()
msg = MsgBox("Esto aplicar|fffd| un numero de antiguedad a cada persona que coincida con el archivo de SIGO de los descansos." & vbCrLf & vbCrLf & "Este archivo se puede obtener desde el cuadrante de planificacion y tiene la peculiaridad de que si estan todas las Areas de la Unidad seleccionadas el personal estar|fffd| ordeando por orden de antiguedad." & vbCrLf & vbCrLf & "|fffd|Quieres continuar y eliminar el orden anterior? Esto no afectara a los servicios.", vbYesNo, "Importar datos sobre descansos")
If msg = 6 Then
    On Error Resume Next
    Application.EnableEvents = False
    Application.ScreenUpdating = False
    Application.Calculation = xlCalculationManual
    Dim fileimportar As Variant
    Dim origen As Workbook
    Dim Listado As Worksheet
    With Application.FileDialog(msoFileDialogOpen)
        .AllowMultiSelect = False
        .Filters.Clear
        .Filters.Add "Informe de Personal de SIGO", "*.XLS", 1
        .Title = "Seleccion de archivo SIGO"
        If .Show = -1 Then
            For Each fileimportar In .SelectedItems
                If IsFileOpen(.SelectedItems(1)) Then
                    msg = MsgBox("El archivo seleccionado se encuentra abierto y no se puede leer. Cierra el archivo y vuelve a intentarlo", vbCritical, "Cierra el origen")
                    GoTo fin
                Else
                    Set origen = Workbooks.Open(fileimportar)
                End If
                Set Listado = origen.Sheets(1) ' Cambiar el nombre de la hoja
                'Comprobacion
                Encontrados = 0
                For q = 4 To 303
                    If HASI.Range("d" & q) <> "" Then
                        For n = 1 To 330
                            If Listado.Range("b" & n) <> "" Then
                                If Replace(Listado.Range("b" & n) & Listado.Range("c" & n) & Listado.Range("d" & n), " ", "") = Replace(HASI.Range("D" & q) & HASI.Range("E" & q) & HASI.Range("f" & q), " ", "") Then
                                    Encontrados = Encontrados + 1
                                    Exit For
                                End If
                            End If
                        Next
                    End If
                Next
                If Encontrados = 0 Then
                    msg = MsgBox("No se encuentran datos sobre ninguna persona. La busqueda se ha realizado sobre el nombre, asegurate de que el nombre de la persona este bien escrito y que sea exacto al de SIGO.", vbCritical, "No se importan datos")
                Else
                    msg = MsgBox("Se han encontrado " & Encontrados & " personas coincidentes." & vbCrLf & _
                    "   Esto representa un " & Format(Encontrados * 100 / Application.WorksheetFunction.CountA(HASI.Range("d4:d303")), "0") & "% entre el Cuadrante y el archivo de SIGO" & vbcrl & vbCrLf & _
                    "|fffd|Quieres continuar con la asignacion de la antiguedad?", 68, "Continuar...?")
                    If msg = 7 Then GoTo adios
                    HASI.Range("b4:b303").ClearContents
                    Anti = 1
                    For n = 1 To 330
                        If Listado.Range("b" & n) <> "" Then
                            For q = 4 To 303
                                If HASI.Range("d" & q) <> "" Then
                                    If Replace(Listado.Range("b" & n) & Listado.Range("c" & n) & Listado.Range("d" & n), " ", "") = Replace(HASI.Range("D" & q) & HASI.Range("E" & q) & HASI.Range("f" & q), " ", "") Then
                                        HASI.Range("B" & q) = Anti
                                        Anti = Anti + 1
                                        Exit For
                                    End If
                                End If
                            Next
                        End If
                    Next
                    msg = MsgBox("Ahora en la vista de planificacion puedes ordenar la lista por antiguedad.", vbInformation, "Antiguedad asignada")
                End If
                origen.Close savechanges:=False
            Next
        End If
    End With
    GoTo fin
adios:
    origen.Close savechanges:=False
fin:
    Application.Calculate
    Application.EnableEvents = True
    Application.ScreenUpdating = True
End If
End Sub
Sub ImportarDescansosSigo()
msg = MsgBox("Esto aplicar|fffd| datos manuales al personal que coincida con el archivo de descansos que previamente hayas obtenido de SIGO." & vbCrLf & vbCrLf & "Puedes descargarlo en Cuadrante de Planificacion (icono descansos)" & vbCrLf & vbCrLf & "|fffd|Quieres continuar?", vbYesNo, "Importar datos sobre descansos")
If msg = 6 Then
    On Error GoTo fallo
    Application.EnableEvents = False
    Application.ScreenUpdating = False
    Application.Calculation = xlCalculationManual
    Dim fileimportar As Variant
    Dim origen As Workbook
    Dim Listado As Worksheet
    With Application.FileDialog(msoFileDialogOpen)
        .AllowMultiSelect = False
        .Filters.Clear
        .Filters.Add "Informe de Personal de SIGO", "*.XLS", 1
        .Title = "Seleccion de archivo SIGO"
        If .Show = -1 Then
            For Each fileimportar In .SelectedItems
                If IsFileOpen(.SelectedItems(1)) Then
                    msg = MsgBox("El archivo seleccionado se encuentra abierto y no se puede leer. Cierra el archivo y vuelve a intentarlo", vbCritical, "Cierra el origen")
                    GoTo fin
                Else
                    Set origen = Workbooks.Open(fileimportar)
                End If
                Set Listado = origen.Sheets(1) ' Cambiar el nombre de la hoja
                'If Listado.name <> HC.Range("ba3") & HC.Range("ba4") Then
                msg = MsgBox("PRESTA ATENCION A ESTA OPERACION:" & vbCrLf & vbCrLf & _
                "- El listado extraido de SIGO contiene datos relativos a " & Listado.Name & vbCrLf & _
                "- Y Tu mes ACTIVO es " & HC.Range("ba3") & " de " & HC.Range("ba4") & "." & vbCrLf & vbCrLf & _
                "Estos dos meses deberan de ser coincidentes y la extracion se recomienda hacer de un mes que haya sido planificado completamente en SIGO." & vbCrLf & vbCrLf & _
                "EN TODO CASO ambos deberian ser ANTERIORES AL QUE QUEREMOS PLANIFICAR ya que quedaran los calculos desactivados!!" & _
                vbCrLf & vbCrLf & "Quieres continuar con la operacion?", 36, "Conflicto posible")
                If msg = 7 Then GoTo adios
                'End If
                For q = 14 To 313
                    If HC.Range("CM" & q) <> "" Then
                        For n = 1 To 400
                            If Replace(Listado.Range("b" & n) & Listado.Range("c" & n) & Listado.Range("d" & n), " ", "") = Replace(HC.Range("cm" & q) & HC.Range("cn" & q) & HC.Range("co" & q), " ", "") Then
                                ok = True
                                HC.Range("CJ" & q) = "MANUAL"
                                HC.Range("CU" & q & ":CV" & q).ClearContents
                                HC.Range("CW" & q) = Listado.Range("F" & n).Value
                                HC.Range("DB" & q) = Listado.Range("N" & n).Value
                                HC.Range("DA" & q) = Listado.Range("P" & n).Value
                                HC.Range("CZ" & q) = Listado.Range("O" & n).Value
                                Exit For
                            End If
                        Next
                    End If
                Next
                origen.Close savechanges:=False
                If ok = False Then
                    msg = MsgBox("No se encuentran datos sobre ninguna persona. La busqueda se ha realizado sobre el nombre, asegurate de que el nombre de la persona este bien escrito y que sea exacto al de SIGO.", vbCritical, "No se importan datos")
                Else
                    'Unload Me
                    HC.Refrescar 1
                    msg = MsgBox("Se han encontrado los datos relativos a:" & vbCrLf & vbCrLf & "Horas de desviacion del periodo de referencia" & vbCrLf & "Descansos festivos (DF)" & vbCrLf & "Descansos Singularizados (DAS)" & vbCrLf & "Descansos por superacion de jornada (DSJ)", vbInformation, "Importado")
                End If
            Next
        End If
    End With
    GoTo fin
fallo:
    msg = MsgBox("Este archivo no contiene la informacion requerida", vbCritical, "No se importan datos")
adios:
    origen.Close savechanges:=False
fin:
    Application.Calculate
    Application.EnableEvents = True
    Application.ScreenUpdating = True
End If
End Sub
Sub Importarvacaciones()
msg = MsgBox("Quieres importar el credito de vacaciones y asuntos particulares?." & vbCrLf & vbCrLf & _
"Esto resolvera los dias de credito y consumidos de vacaciones y permiso por asuntos particulares." & vbCrLf & vbCrLf & _
"El archivo se puede conseguir copiado todos los datos del listado mostrado en la aplicacion de Recursos Humanos y guardandolos en un archivo de excel normal." & vbCrLf & vbCrLf & _
"|fffd|Quieres continuar, se eliminaran los datos relativos actuales?", vbYesNo, "Importar datos sobre creditos")
If msg = 6 Then
    On Error Resume Next
    Application.EnableEvents = False
    Application.ScreenUpdating = False
    Application.Calculation = xlCalculationManual
    Dim fileimportar As Variant
    Dim origen As Workbook
    Dim Listado As Worksheet
    With Application.FileDialog(msoFileDialogOpen)
        .AllowMultiSelect = False
        .Filters.Clear
        .Filters.Add "Vacaciones de RRHH", "*.XLS", 1
        .Title = "Seleccion de archivo de RRHH"
        If .Show = -1 Then
            For Each fileimportar In .SelectedItems
                If IsFileOpen(.SelectedItems(1)) Then
                    msg = MsgBox("El archivo seleccionado se encuentra abierto y no se puede leer. Cierra el archivo y vuelve a intentarlo", vbCritical, "Cierra el origen")
                    GoTo fin
                Else
                    Set origen = Workbooks.Open(fileimportar)
                End If
                Set Listado = origen.Sheets(1) ' Cambiar el nombre de la hoja
                'Comprobacion
                Encontrados = 0
                For q = 4 To 303
                    If HASI.Range("g" & q) <> "" Then
                        For n = 1 To 330
                            If Listado.Range("a" & n).Value = HASI.Range("g" & q).Value Then
                                Encontrados = Encontrados + 1
                                HASI.Range("o" & q).Value = Listado.Range("d" & n).Value
                                HASI.Range("p" & q).Value = Listado.Range("h" & n).Value
                                Exit For
                            End If
                        Next
                    End If
                Next
                If Encontrados = 0 Then
                    msg = MsgBox("No se encuentran datos sobre ninguna persona. La busqueda se ha realizado sobre el nombre, asegurate de que el nombre de la persona este bien escrito y que sea exacto al de SIGO.", vbCritical, "No se importan datos")
                Else
                    msg = MsgBox("Se han recuperado datos de " & Encontrados & " personas" & vbCrLf & vbCrLf & "Quieres tambien poner el credito consumido?. El listado de RRHH debera corresponder con el mes activo." & vbCrLf & vbCrLf & "ESTO APLICARA CALCULOS MANUALES PARA EL MES ANTERIOR", 36, "Vacaciones y AP's encontrados")
                    If msg = 7 Then GoTo fin
                    Encontrados = 0
                    For q = HC.Range("ba8") - 500 To HC.Range("ba8") - 500 + 299
                        If HBDC.Range("cd" & q) <> "" Then
                            For n = 1 To 330
                                If Listado.Range("a" & n).Value = HBDC.Range("cd" & q).Value Then
                                    HBDC.Range("bv" & q).NumberFormat = "@"
                                    HBDC.Range("cs" & q).NumberFormat = "@"
                                    HBDC.Range("bv" & q).Value = Listado.Range("e" & n).Value & " / " & Listado.Range("d" & n).Value
                                    HBDC.Range("cs" & q).Value = Listado.Range("i" & n).Value & " / " & Listado.Range("h" & n).Value
                                    HBDC.Range("bx" & q).Value = "MANUAL"
                                    Encontrados = Encontrados + 1
                                    Exit For
                                End If
                            Next
                        End If
                    Next
                    If Encontrados = 0 Then
                        msg = MsgBox("No se encuentran datos sobre ninguna persona en datos anteriores. Si no tenias el mes anterior creado, deberas crearlo y volver a repetir este proceso.", vbCritical, "No se importan datos del credito consumido")
                    End If
                End If
                origen.Close savechanges:=False
            Next
            End If
    End With
    GoTo fin
adios:
    origen.Close savechanges:=False
fin:
    Application.Calculate
    Application.EnableEvents = True
    Application.ScreenUpdating = True
End If
End Sub
Sub ImportarDiasVacaciones()
msg = MsgBox("Quieres importar las autorizaciones de vacaciones, asuntos particulares y permisos en fechas se|fffd|aladas?." & vbCrLf & vbCrLf & _
"Esto planificara sobre los cuadrantes las solicitudes autorizadas." & vbCrLf & vbCrLf & _
"El archivo excel se puede conseguir desde la aplicacion de Recursos Humanos/Autorizacion de solicitudes/Consulta de historicos." & vbCrLf & vbCrLf & _
"|fffd|Quieres continuar?", vbYesNo, "Importar autorizaciones de permisos")
If msg = 6 Then
    On Error Resume Next
    Application.EnableEvents = False
    Application.ScreenUpdating = False
    Application.Calculation = xlCalculationManual
    Dim fileimportar As Variant
    Dim origen As Workbook
    Dim Listado As Worksheet
    With Application.FileDialog(msoFileDialogOpen)
        .AllowMultiSelect = False
        .Filters.Clear
        .Filters.Add "Vacaciones de RRHH", "*.XLS", 1
        .Title = "Seleccion de archivo de RRHH"
        If .Show = -1 Then
            For Each fileimportar In .SelectedItems
                If IsFileOpen(.SelectedItems(1)) Then
                    msg = MsgBox("El archivo seleccionado se encuentra abierto y no se puede leer. Cierra el archivo y vuelve a intentarlo", vbCritical, "Cierra el origen")
                    GoTo fin
                Else
                    Set origen = Workbooks.Open(fileimportar)
                End If
                Set Listado = origen.Sheets(1) ' Cambiar el nombre de la hoja
                'Comprobacion
                tamalista = Listado.Range("c25000").End(xlUp).Row
                Encontrados = 0
                For q = 14 To 313
                    If HC.Range("cp" & q) <> "" Then
                        For n = 1 To tamalista
                            If Listado.Range("c" & n).Value = HC.Range("cn" & q).Value & " " & HC.Range("co" & q).Value & ", " & HC.Range("cm" & q).Value Then
                                Encontrados = Encontrados + 1
                                Exit For
                            End If
                        Next
                    End If
                Next
                If Encontrados > 0 Then
                    HC.GUARDARCUADRANTEMES
                    vac = InputBox("Indica el codigo de servicio de los catalogos que corresponde con las vacaciones.     Ejemplo: V", "VACACIONES")
                    AP = InputBox("Ahoira indica el codigo de servicio de los catalogos que corresponde con los dias de permiso por asuntos particulares.     Ejemplo: AP", "ASUNTOS PARTICULARES")
                    PSS = InputBox("Indica el codigo de servicio de los catalogos que corresponde con los dias de permiso en fechas se|fffd|alas de Semana Santa.    Ejemplo: PSS", "SEMANA SANTA")
                    PNAV = InputBox("Y por ultimo indica el codigo de servicio de los catalogos que corresponde con los dias de permiso en fechas se|fffd|aladad de Navidad.   Ejemplo PNAV", "NAVIDAD")
                    Grabado = 0
                    For q = 14 To 313
                        If HC.Range("cp" & q) <> "" Then
                            For n = 1 To tamalista
                                If Listado.Range("c" & n).Value = HC.Range("cn" & q).Value & " " & HC.Range("co" & q).Value & ", " & HC.Range("cm" & q).Value Then
                                    If Listado.Range("h" & n) = "A" Then
                                        'Resolver el tipo
                                        TIPO = Listado.Range("g" & n)
                                        If TIPO = "Asuntos " Then
                                            TIPO = AP
                                        ElseIf TIPO = "Vacacione" Then
                                            TIPO = vac
                                        ElseIf TIPO = "Permiso " And (Month(Listado.Range("e" & n)) = 12 Or Month(Listado.Range("e" & n)) = 1) Then
                                            TIPO = PNAV
                                        ElseIf TIPO = "Permiso " Then
                                            TIPO = PSS
                                        Else
                                            TIPO = ""
                                        End If
                                        If TIPO <> "" Then GrabarPermiso HC.Range("cp" & q), Listado.Range("e" & n), Listado.Range("f" & n), TIPO, q
                                        If TIPO <> "" Then Grabado = Grabado + 1
                                        If TIPO = vac Then vacas = vacas + 1
                                        If TIPO = AP Then Aps = Aps + 1
                                        If TIPO = PSS Or TIPO = PNAV Then enFechas = enFechas + 1
                                    End If
                                End If
                            Next
                        End If
                    Next
                    msg = MsgBox("Se han grabado " & Grabado & " autorizaciones: " & vbCrLf & _
                    "    - " & vacas & " Solicitudes de vacaciones." & vbCrLf & _
                    "    - " & Aps & " Solicitudes de asuntos particulares." & vbCrLf & _
                    "    - " & enFechas & " Solicitudes de permiso en fechas se|fffd|aladas", vbInformation, "Archivo importado")
                    HC.Cambio_mes HC.Range("ba6"), HC.Range("ba7"), False, True
                Else
                    msg = MsgBox("No se han encontrado coincidencias con este archivo. O el archivo es el incorrecto o no coinciden con los nombres", vbCritical, "No se importa nada")
                End If
                origen.Close savechanges:=False
            Next
        End If
    End With
    GoTo fin
adios:
    origen.Close savechanges:=False
fin:
    Application.Calculate
    Application.EnableEvents = True
    Application.ScreenUpdating = True
End If
End Sub
Private Sub GrabarPermiso(Tip, inicio, fin, TIPO, FilaIni)
'Resolver de que mes se trata el inicio
PrimerDiaMes = DateSerial(Year(inicio), Month(inicio), 1)
If Weekday(PrimerDiaMes, vbMonday) > 4 Then
    DiaInicial = PrimerDiaMes + 8 - Weekday(PrimerDiaMes, vbMonday)
Else
    DiaInicial = PrimerDiaMes - Weekday(PrimerDiaMes, vbMonday) + 1
End If
ultimodiames = DateSerial(Year(inicio), Month(inicio) + 1, 1)
If Weekday(ultimodiames, vbMonday) > 4 Then
    diafinal = ultimodiames + 8 - Weekday(ultimodiames, vbMonday)
Else
    diafinal = ultimodiames - Weekday(ultimodiames, vbMonday) + 1
End If
If inicio >= DiaInicial Then
    mesabs = (Year(DiaInicial + 15) - 2015) * 12 + Month(DiaInicial + 15)
Else
    mesabs = (Year(DiaInicial + 15) - 2015) * 12 + Month(DiaInicial + 15) - 1
End If
fila = Application.Match(Tip, HBDC.Range("cd" & mesabs * 500 + 1 & ":cd" & mesabs * 500 + 301), 0)
If IsError(fila) = False Then
    fila = fila + mesabs * 500
Else
    If HBDC.Range("a" & mesabs * 500) = "" Then HBDC.Range("a" & mesabs * 500) = "AUTO"
    For Vacio = 1 To 300
        If HBDC.Range("ca" & mesabs * 500 + Vacio) = "" Then
            fila = mesabs * 500 + Vacio
            HBDC.Range("bv" & fila & ":ct" & fila).Value = HC.Range("ch" & FilaIni & ":df" & FilaIni).Value
            Exit For
        Else
            If Vacio = 300 Then GoTo fin
        End If
    Next
End If
'Grabar en mes de inicio
Primerdia = inicio - DiaInicial + 1
If fin < diafinal Then
    UltimoDia = fin - DiaInicial + 1
Else
    UltimoDia = diafinal - DiaInicial
End If
For nombra = Primerdia To UltimoDia
    HBDC.Cells(fila, nombra) = TIPO
Next
'Grabar los siguientes Meses
If fin >= diafinal Then
    'Resolver MesAbs del dia Final
    PrimerDiaMesFin = DateSerial(Year(fin), Month(fin), 1)
    If Weekday(PrimerDiaMesFin, vbMonday) > 4 Then
        diainicialFin = PrimerDiaMesFin + 8 - Weekday(PrimerDiaMesFin, vbMonday)
    Else
        diainicialFin = PrimerDiaMesFin - Weekday(PrimerDiaMesFin, vbMonday) + 1
    End If
    If fin >= diainicialFin Then
        MesAbsfin = (Year(diainicialFin + 15) - 2015) * 12 + Month(diainicialFin + 15)
    Else
        MesAbsfin = (Year(diainicialFin + 15) - 2015) * 12 + Month(diainicialFin + 15) - 1
    End If
    Avance = 1
    For MesSig = mesabs + 1 To MesAbsfin
        Avance = Avance + 1
        PrimerDiaMes = DateSerial(Year(inicio), Month(inicio) + Avance - 1, 1)
        If Weekday(PrimerDiaMes, vbMonday) > 4 Then
            DiaInicial = PrimerDiaMes + 8 - Weekday(PrimerDiaMes, vbMonday)
        Else
            DiaInicial = PrimerDiaMes - Weekday(PrimerDiaMes, vbMonday) + 1
        End If
        ultimodiames = DateSerial(Year(inicio), Month(inicio) + Avance, 1)
        If Weekday(ultimodiames, vbMonday) > 4 Then
            diafinal = ultimodiames + 8 - Weekday(ultimodiames, vbMonday)
        Else
            diafinal = ultimodiames - Weekday(ultimodiames, vbMonday) + 1
        End If
        'Crear Fila Siguientes Meses
        FilaSig = Application.Match(Tip, HBDC.Range("cd" & MesSig * 500 + 1 & ":cd" & MesSig * 500 + 301), 0)
        If IsError(FilaSig) = False Then
            FilaSig = FilaSig + MesSig * 500
        Else
            If HBDC.Range("a" & MesSig) * 500 = "" Then HBDC.Range("a" & MesSig * 500) = "AUTO"
            For Vacio = 1 To 300
                If HBDC.Range("ca" & MesSig * 500 + Vacio) = "" Then
                    FilaSig = MesSig * 500 + Vacio
                    HBDC.Range("bv" & FilaSig & ":ct" & FilaSig).Value = HC.Range("ch" & FilaIni & ":df" & FilaIni).Value
                    Exit For
                Else
                    GoTo fin
                End If
            Next
        End If
        'Nombrar en Mes Siguiente
        PrimerDiaSig = 1
        If fin < diafinal Then
            UltimoDiaSig = fin - DiaInicial + 1
        Else
            UltimoDiaSig = diafinal - DiaInicial
        End If
        For nombra = PrimerDiaSig To UltimoDiaSig
            HBDC.Cells(FilaSig, nombra) = TIPO
        Next
    Next
End If
fin:
End Sub
Attribute VB_Name = "LISTACORREOS"
Attribute VB_Base = "0{937BF7E1-1126-4D3B-AC8D-F2E917D3C480}{B36FA3CF-772D-466A-8087-B8E8F15BB90D}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Private Sub UserForm_Initialize()
pos = 0
For p = 14 To 313
    If HC.Range("do" & p) <> "" Then
        carac = HC.Range("cu" & p)
        If InStr(carac, "#E") > 0 Then
            With Lista
                .AddItem
                .List(pos, 0) = HC.Range("do" & p)
                .List(pos, 1) = Mid(carac, InStr(carac, "#E") + 2, InStr(carac, "E#") - InStr(carac, "#E") - 2)
            End With
            pos = pos + 1
        End If
    End If
Next
End Sub
Private Sub BtnMas_Click()
For p = 0 To Lista.ListCount - 1
    If Lista.Selected(p) = True Then
        fila = HCON.Range("cn100").End(xlUp).Row + 1
        HCON.Range("cn" & fila) = Lista.List(p, 0)
        HCON.Range("co" & fila) = Lista.List(p, 1)
    End If
Next
Unload Me
End Sub
Attribute VB_Name = "LISTAS"
Attribute VB_Base = "0{D37772FC-2539-4740-87CA-6ED558B36581}{ADF6ABC3-CF1C-4DB8-9413-FD0BEF008021}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Private Sub BtnImportar_Click()
LISTASIMPORTAR.Show
End Sub
Private Sub BtnImprimir_Click()
With HLIS.PageSetup
    .PrintArea = HLIS.Range("c2").CurrentRegion.Address
    .Zoom = False
    .FitToPagesWide = 1
End With
#If VBA6 Then
    Application.ExecuteExcel4Macro ("show.toolbar(""ribbon"",1)")
#End If
Me.Hide
    HLIS.PrintPreview
#If VBA6 Then
    Application.ExecuteExcel4Macro ("show.toolbar(""ribbon"",0)")
#End If
Application.CommandBars.ActiveMenuBar.Enabled = True
Application.CommandBars.ActiveMenuBar.Enabled = False|fffd|
Me.Show 0
End Sub
Private Sub BtnMostrarTodo_Click()
HLIS.Range("c:iv").EntireColumn.Hidden = False
End Sub
Private Sub BtnVolver_Click()
Unload Me
HC.Activate
End Sub
Private Sub CommandButton15_Click()
LISTVISTAS.Show 0
End Sub

Private Sub EXportar_Click()
ag = Application.GetSaveAsFilename(InitialFileName:="Lista " & Format(HN.Range("g6"), "dd-mm"), FileFilter:="Lista (*.xls), *.xls")
On Local Error Resume Next
If ag <> "" And ag <> False Then
    If InStr(ag, ".xls") > 0 Then ext = "" Else ext = "xls"
        Application.ScreenUpdating = False
        Dim fileimportar As Variant
        Dim destino As Workbook
        Dim Listado As Worksheet
        Set destino = Workbooks.Add
        Set Listado = destino.Sheets(1)
        HLIS.Range("c2").CurrentRegion.SpecialCells(xlCellTypeVisible).Copy
        Listado.Range("a1").PasteSpecial xlPasteColumnWidths
        Listado.Range("a1").PasteSpecial xlPasteAll
        destino.SaveAs filename:=ag & ext, FileFormat:=xlWorkbookNormal
        destino.Save
        destino.Close savechanges:=False
        Application.ScreenUpdating = True
        Unload Me
End If
End Sub

Private Sub GuardarVista_Click()
fila = HLIS.Range("a12").End(xlUp).Row + 1
If fila < 12 Then
    inp = InputBox("Nombre de esta vista:", "Nueva vista Personalizada")
    If inp <> "" Then
        HLIS.Range("a" & fila) = inp
        For f = 1 To 255
            If HLIS.Columns(f).Hidden = True Then
                situacion = situacion & "1"
            Else
                situacion = situacion & "0"
            End If
        Next
        HLIS.Range("b" & fila) = situacion
    End If
    ActualizaVistas
Else
    msg = MsgBox("Para guardar mas vistas tienes que borrar alguna primero", vbCritical, "No se pueden establecer mas vistas")
End If
End Sub
Private Sub Vista(fila)
Application.ScreenUpdating = False
situacion = HLIS.Range("b" & fila + 2)
HLIS.Range(HLIS.Cells(1, 3), HLIS.Cells(1, HLIS.Range("b14") + 5)).EntireColumn.Hidden = False
For c = 1 To HLIS.Range("b14") + 5
    If Mid(situacion, c, 1) = 0 Then
        'HLIS.Columns(c).Hidden = False
    Else
        HLIS.Columns(c).Hidden = True
    End If
Next
Application.ScreenUpdating = True
End Sub
Private Sub UserForm_Initialize()
Me.top = 20
Me.left = 3
ActualizaVistas
End Sub
Sub ActualizaVistas()
For V = 1 To 9
    If HLIS.Range("a" & V + 2) <> "" Then
        If LISTAS.LabelVistas.Visible = True Then LISTAS.LabelVistas.Visible = False
        LISTAS.Controls("vis" & V).Caption = HLIS.Range("a" & V + 2)
        LISTAS.Controls("vis" & V).Visible = True
    Else
        LISTAS.Controls("vis" & V).Visible = False
    End If
Next
End Sub
Private Sub UserForm_QueryClose(Cancel As Integer, CloseMode As Integer)
If CloseMode = 0 Then HC.Activate
End Sub
Private Sub Vis1_Click()
Vista 1
End Sub
Private Sub Vis2_Click()
Vista 2
End Sub
Private Sub Vis3_Click()
Vista 3
End Sub
Private Sub Vis4_Click()
Vista 4
End Sub
Private Sub Vis5_Click()
Vista 5
End Sub
Private Sub Vis6_Click()
Vista 6
End Sub
Private Sub Vis7_Click()
Vista 7
End Sub
Private Sub Vis8_Click()
Vista 8
End Sub
Private Sub Vis9_Click()
Vista 9
End Sub
Attribute VB_Name = "LISTASCONTEXTO"
Attribute VB_Base = "0{7400CC43-58BA-4B8C-ABD9-9D03739A0C19}{EA331B2D-56F5-46D2-8A74-3611642B82B0}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Private Sub AnCol_Change()
On Error Resume Next
If IsNumeric(AnCol) = True Then
    ActiveCell.ColumnWidth = AnCol
End If
End Sub
Private Sub BtnAutoFit_Click()
ActiveCell.EntireColumn.AutoFit
ACTUALIZA
End Sub
Private Sub CelColor_Click()
ThisWorkbook.COLORSEL = ""
FORMCOLORPICKER.Show
If ThisWorkbook.COLORSEL <> "" Then Selection.Interior.Color = ThisWorkbook.COLORSEL
End Sub
Private Sub ColColor_Click()
ThisWorkbook.COLORSEL = ""
FORMCOLORPICKER.Show
If ThisWorkbook.COLORSEL <> "" Then HLIS.Range(HLIS.Cells(4, ActiveCell.Column), HLIS.Cells(303, ActiveCell.Column)).Interior.Color = ThisWorkbook.COLORSEL
End Sub
Private Sub FilColor_Click()
ThisWorkbook.COLORSEL = ""
FORMCOLORPICKER.Show
If ThisWorkbook.COLORSEL <> "" Then HLIS.Range("d" & ActiveCell.Row & ":iv" & ActiveCell.Row).Interior.Color = ThisWorkbook.COLORSEL
End Sub
Private Sub CheckFiltro_Click()
If CheckFiltro = True Then
    HLIS.Cells(307, ActiveCell.Column) = True
    With HLIS.Cells(3, ActiveCell.Column)
        .Value = ""
        .Interior.ColorIndex = 6
        .Borders(xlEdgeTop).LineStyle = xlContinuous
    End With
Else
    HLIS.Cells(307, ActiveCell.Column) = ""
    With HLIS.Cells(3, ActiveCell.Column)
        .Value = ""
        .Interior.ColorIndex = 42
        .Borders(xlEdgeTop).LineStyle = xlNone
    End With
End If
End Sub
Private Sub ListFormato_Change()
If ListFormato.ListIndex = 0 Then
    HLIS.Range(HLIS.Cells(3, ActiveCell.Column), HLIS.Cells(302, ActiveCell.Column)).NumberFormat = "@"
ElseIf ListFormato.ListIndex = 1 Then
    HLIS.Range(HLIS.Cells(3, ActiveCell.Column), HLIS.Cells(302, ActiveCell.Column)).NumberFormat = "0"
ElseIf ListFormato.ListIndex = 2 Then
    HLIS.Range(HLIS.Cells(3, ActiveCell.Column), HLIS.Cells(302, ActiveCell.Column)).NumberFormat = "dd/mm/yyy"
End If
End Sub
Private Sub FilDel_Click()
If ActiveCell.Row >= 4 Then
    HLIS.Range("a" & ActiveCell.Row + 1 & ":iv302").Copy Destination:=HLIS.Range("a" & ActiveCell.Row & ":iv302")
End If
End Sub
Private Sub FilAdd_Click()
If ActiveCell.Row >= 4 Then
    HLIS.Range("a" & ActiveCell.Row & ":iv301").Copy Destination:=HLIS.Range("a" & ActiveCell.Row + 1 & ":iv303")
    HLIS.Range("a" & ActiveCell.Row & ":iv" & ActiveCell.Row).ClearContents
End If
End Sub
Private Sub MovCol_SpinDown()
If ActiveCell.Column >= 5 Then
    HLIS.Columns(ActiveCell.Column).Cut
    HLIS.Columns(ActiveCell.Column - 1).Insert Shift:=xlToRight
    ActiveCell.Offset(0, -1).Select
End If
End Sub
Private Sub MovCol_SpinUp()
If ActiveCell.Column >= 4 Then
    HLIS.Columns(ActiveCell.Column + 1).Cut
    HLIS.Columns(ActiveCell.Column).Insert Shift:=xlToRight
    ActiveCell.Offset(0, 1).Select
End If
End Sub
Private Sub MovFila_SpinDown()
If ActiveCell.Row >= 4 And ActiveCell.Row <= 302 Then
    HLIS.Rows(ActiveCell.Row + 1).Cut
    HLIS.Rows(ActiveCell.Row).Insert Shift:=xlShiftDown
    ActiveCell.Offset(1, 0).Select
End If
End Sub
Private Sub MovFila_SpinUp()
If ActiveCell.Row >= 5 And ActiveCell.Row <= 303 Then
    HLIS.Rows(ActiveCell.Row).Cut
    HLIS.Rows(ActiveCell.Row - 1).Insert Shift:=xlShiftDown
    ActiveCell.Offset(-1, 0).Select
End If
End Sub
Private Sub ColDel_Click()
If ActiveCell.Column >= 4 Then
    HLIS.Columns(ActiveCell.Column).Delete Shift:=xlShiftToLeft
End If
End Sub
Private Sub ColAdd_Click()
If ActiveCell.Column >= 5 Then
    inp = InputBox("Titulo de la Columna", "A|fffd|ADIR COLUMNA")
    If inp <> "" Then
        HLIS.Columns(ActiveCell.Column).Insert Shift:=xlShiftToLeft
        HLIS.Cells(2, ActiveCell.Column).Value = inp
        HLIS.Cells(2, ActiveCell.Column).Columns.AutoFit
        HLIS.ofa
    End If
End If
End Sub
Private Sub ColHide_Click()
For Each co In Selection.Columns
    If co.Column >= 4 Then
        HLIS.Columns(co.Column).Hidden = True
    End If
Next
End Sub
Private Sub ColShow_Click()
For Each co In Selection.Columns
    If co.Column >= 4 Then
        HLIS.Columns(co.Column).Hidden = False
    End If
Next
End Sub
Private Sub ColBorDer_Click()
If ActiveCell.Borders(xlEdgeRight).Weight = xlThick Then
    With HLIS.Range(HLIS.Cells(3, ActiveCell.Column), HLIS.Cells(303, ActiveCell.Column)).Borders(xlEdgeRight)
        .LineStyle = xlContinuous
        .Weight = xlThin
    End With
Else
    With HLIS.Range(HLIS.Cells(3, ActiveCell.Column), HLIS.Cells(303, ActiveCell.Column)).Borders(xlEdgeRight)
        .LineStyle = xlContinuous
        .Weight = xlThick
    End With
End If
End Sub
Private Sub ACTUALIZA()
'RATON---------------------------------
xpos = convertMouseToForm.left
ypos = convertMouseToForm.top
If ypos + Me.Height + 40 > ActiveWindow.Height Then ypos = ypos - Me.Height - 50
If xpos + Me.Width - Me.Width / 2 > ActiveWindow.Width Then xpos = ActiveWindow.Width - Me.Width + Me.Width / 2 - 30
If xpos - Me.Width / 2 < 0 Then xpos = Me.Width / 2
Me.top = ypos + 25
Me.left = xpos - Me.Width / 2
'---------------------------------------
ListFormato.Clear
ListFormato.AddItem "Texto"
ListFormato.AddItem "Numero"
ListFormato.AddItem "Fecha"
If HLIS.Cells(4, ActiveCell.Column).NumberFormat = "@" Then
    ListFormato.ListIndex = 0
ElseIf HLIS.Cells(4, ActiveCell.Column).NumberFormat = "0" Then
    ListFormato.ListIndex = 1
ElseIf HLIS.Cells(4, ActiveCell.Column).NumberFormat = "dd/mm/yyy" Then
    ListFormato.ListIndex = 2
End If
AnCol = Replace(ActiveCell.ColumnWidth, ",", ".")
If HLIS.Cells(306, ActiveCell.Column) = True Then CheckCalendario = True
If HLIS.Cells(307, ActiveCell.Column) = True Then CheckFiltro = True
End Sub
Private Sub OrdenMasMenos_Click()
HLIS.Range("a3:iv302").Sort key1:=HLIS.Cells(2, ActiveCell.Column), order1:=xlDescending, header:=xlYes
End Sub
Private Sub OrdenMenosMas_Click()
HLIS.Range("a3:iv302").Sort key1:=HLIS.Cells(2, ActiveCell.Column), order1:=xlAscending, header:=xlYes
End Sub
Private Sub UserForm_Initialize()
ACTUALIZA
End Sub

Attribute VB_Name = "LISTASIMPORTAR"
Attribute VB_Base = "0{831D0A3F-C9F2-4131-B5D6-C163F4F9D80D}{EEC1A3E7-D3BF-4345-9319-4FEACD2248E0}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Private Sub BtnImportarHC_Click()
msg = MsgBox("Importar la lista del personal del Cuadrante activo?", vbOKCancel, "Importar del Cuadrante")
If msg = 1 Then
    Application.ScreenUpdating = False
    HLIS.Columns(5).Insert Shift:=xlShiftToLeft
    HLIS.Range("e4:e303").Value = HC.Range("dc14:dc313").Value ' Grupo
    HLIS.Range("e2").Value = "GRUPO"
    HLIS.Columns(5).Insert Shift:=xlShiftToLeft
    HLIS.Range("e4:e303").Value = HC.Range("cl14:cl313").Value ' Area
    HLIS.Range("e2").Value = "AREA"
    HLIS.Columns(5).Insert Shift:=xlShiftToLeft
    HLIS.Range("e4:e303").Value = HC.Range("cq14:cq313").Value 'Telefono
    HLIS.Range("e2").Value = "TELEFONO"
    HLIS.Columns(5).Insert Shift:=xlShiftToLeft
    HLIS.Range("e4:e303").Value = HC.Range("cp14:cp313").Value 'Tip
    HLIS.Range("e2").Value = "TIP"
    HLIS.Columns(5).Insert Shift:=xlShiftToLeft
    HLIS.Range("e4:e303").Value = HC.Range("co14:co313").Value 'Apellido2
    HLIS.Range("e2").Value = "APELLIDO 2"
    HLIS.Columns(5).Insert Shift:=xlShiftToLeft
    HLIS.Range("e4:e303").Value = HC.Range("cn14:cn313").Value 'Apellido1
    HLIS.Range("e2").Value = "APELLIDO 1"
    HLIS.Columns(5).Insert Shift:=xlShiftToLeft
    HLIS.Range("e4:e303").Value = HC.Range("cm14:cm313").Value 'Nombre
    HLIS.Range("e2").Value = "NOMBRE"
    HLIS.Columns(5).Insert Shift:=xlShiftToLeft
    HLIS.Range("e4:e303").Value = HC.Range("ck14:ck313").Value 'Empleo
    HLIS.Range("e2").Value = "EMPLEO"
    HLIS.Columns(5).Insert Shift:=xlShiftToLeft
    HLIS.Range("e4:e303").Value = HC.Range("ci14:ci313").Value 'Antiguedad
    HLIS.Range("e2").Value = "#"
    HLIS.Range("e:m").Columns.AutoFit
    HLIS.ofa
    HLIS.ResetColumna
    Application.ScreenUpdating = True
End If
End Sub
Private Sub BtnImportarExcel_Click()
'comporbanciones
Dim origen As Workbook
Dim Rango As Range
If IsNumeric(Hoja) = True And IsNumeric(ColIni) = False And IsNumeric(ColFin) = False And IsNumeric(FilaIni) = True And IsNumeric(FilaFin) = True Then
    If Val(FilaFin) - Val(FilaIni) < 300 Then
        If ArchivoSel <> "" Then
            On Error GoTo Fallo2
            Set origen = Workbooks.Open(filename:=ArchivoSel, ReadOnly:=True)
            If IsError(origen.Worksheets(Hoja).Range(ColIni & FilaIni & ":" & ColFin & FilaFin)) = False Then
                Set Rango = origen.Worksheets(Val(Hoja)).Range(ColIni & FilaIni & ":" & ColFin & FilaFin)
                primera = HLIS.Range("iv2").End(xlToLeft).Column - 1
                For Each coln In Rango.Columns
                    ultima = HLIS.Range("iv2").End(xlToLeft).Column - 1
                    HLIS.Columns(ultima).Insert Shift:=xlShiftToLeft
                Next
                If CheckEncabezado = True Then
                    HLIS.Range(HLIS.Cells(3, primera), HLIS.Cells(Val(FilaFin) - Val(FilaIni) + 1, ultima)).Value = Rango.Value
                Else
                    HLIS.Range(HLIS.Cells(4, primera), HLIS.Cells(Val(FilaFin) - Val(FilaIni) + 1, ultima)).Value = Rango.Value
                End If
            Else
                GoTo fallo
            End If
            origen.Close savechanges:=False
        End If
    Else
        MsgBox ("Rango maximo 300 filas")
        GoTo fin
    End If
Else
    GoTo fallo
End If
GoTo fin
fallo:
    msg = MsgBox("El rango de la hoja de origen no se ha definido correctamente", vbCritical, "Fallo al definir el rango")
    GoTo fin
Fallo2:
    msg = MsgBox("No se puede abrir el archivo. Cierralo e intentalo otra vez")
fin:
HLIS.ofa
HLIS.ResetColumna
End Sub
Private Sub BtnSelArchivo_Click()
With Application.FileDialog(msoFileDialogOpen)
    .AllowMultiSelect = False
    .Filters.Clear
    .Filters.Add "Archivo de Excel", "*.XLS", 1
    .Title = "Seleccion de archivo de excel"
    If .Show = -1 Then
        If IsFileOpen(.SelectedItems(1)) Then
            msg = MsgBox("El archivo a importar debe estar cerrado", vbCritical, "Cierra el archivo")
            GoTo adios
        End If
        On Error GoTo adios
        ArchivoSel.Value = .SelectedItems(1)
    End If
End With
adios:
End Sub
Attribute VB_Name = "LISTVISTAS"
Attribute VB_Base = "0{3D9CA3EC-4BCE-4812-8A1D-FBE6A0A45E79}{72AFA612-AA9F-4F69-B2CA-0D5BF388FEFF}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Private Sub UserForm_Initialize()
ACTUALIZA
End Sub
Private Sub ACTUALIZA()
If HLIS.Range("a12").End(xlUp).Row + 1 > 3 Then
    LISTVISTAS.List = HLIS.Range("a3:a" & HLIS.Range("a12").End(xlUp).Row + 1).Value
Else
    LISTVISTAS.Clear
End If
End Sub
Private Sub BtnMenos_Click()
HLIS.Range("a" & LISTVISTAS.ListIndex + 3 & ":b11").Value = HLIS.Range("a" & LISTVISTAS.ListIndex + 4 & ":b12").Value
ACTUALIZA
End Sub
Private Sub UserForm_QueryClose(Cancel As Integer, CloseMode As Integer)
LISTAS.ActualizaVistas
End Sub
Attribute VB_Name = "MENUAPP"
Attribute VB_Base = "0{6BE24400-89D2-45F3-AF44-111BB13CE536}{D82FF1B3-2601-4032-A5AC-6549B67FA4D4}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Dim CODIGOBUENO
Dim REGFIL As Workbook
Dim RegSOL As Worksheet
Dim BuquedaEfectivo
Public CorreoFallo
Private Sub BtnABolsa_Click()
existe = Application.Match(CODIGOBUENO, HAPP.Range("k2:k" & HAPP.Range("f1") + 3), 0)
If FechaIni >= Now() Then
    If IsError(existe) = True Then
        fsig = HAPP.Range("f10000").End(xlUp).Row + 1
        HAPP.Range("f1").Calculate
        HAPP.Range("f" & fsig) = CDbl(CDate(Mid(CODIGOBUENO, 10, 2) & "/" & Mid(CODIGOBUENO, 12, 2) & "/20" & Mid(CODIGOBUENO, 14, 2) & " " & Mid(CODIGOBUENO, 16, 2) & ":" & Mid(CODIGOBUENO, 18, 2)))
        HAPP.Range("g" & fsig) = ResEfectivo
        HAPP.Range("i" & fsig) = CDbl(CDate(FechaIni))
        HAPP.Range("h" & fsig) = HC.Range("cl" & BuquedaEfectivo + 13)
        HAPP.Range("j" & fsig) = Serv1
        HAPP.Range("k" & fsig) = CODIGOBUENO
        HAPP.Range("l" & fsig) = "No Enviada"
        HAPP.Range("e" & fsig) = TIPO
        msg = MsgBox("Petici|fffd|n a|fffd|adida en bolsa", vbInformation, "BOLSA de Servicios")
    Else
        msg = MsgBox("Esta peticion de bolsa ya se habia incluido", vbCritical, "BOLSA de Servicios")
    End If
    limpiar
Else
    msg = MsgBox("No se pueden atender solicitudes anteriores a la fecha de hoy", vbCritical, "Bolsa de Servicios")
End If
End Sub
Private Sub BtnAtender_Click()
CorreoFallo = False
cara = HC.Range("cu" & BuquedaEfectivo + 13)
If InStr(cara, "#E") > 0 Or InStr(cara, "#I") > 0 Then
    correo = Mid(cara, InStr(cara, "#E") + 2, InStr(cara, "E#") - InStr(cara, "#E") - 2)
    RegistrarSolicitud "ATENDIDA", "", correo, HC.Range("cp" & BuquedaEfectivo + 13), BuquedaEfectivo + 13
    If CorreoFallo = False Then msg = MsgBox("La solicitud se ha registrado como atendida y al usuario se le ha notificado", vbInformation, "SOLICITUD ATENDIDA")
    limpiar
Else
    msg = MsgBox("El usuario no esta suscrito a la APP", vbCritical, "Solicitud sin atender")
End If
End Sub
Private Sub BtnAtrasSus_Click()
Me.Height = 340
FSuscripcion.Visible = False
FRecibir.Visible = True
FBotones.Visible = True
FConfig.Visible = True
End Sub
Private Sub BtnBolsin_Click()
BOLSA.Show 0
End Sub
Private Sub BtnConfigurarCorreo_Click()
AyudaAPP.Show
End Sub
Private Sub BtnDengarDirecto_Click()
CorreoFallo = False
cara = HC.Range("cu" & BuquedaEfectivo + 13)
If InStr(cara, "#E") > 0 Or InStr(cara, "#I") > 0 Then
    correo = Mid(cara, InStr(cara, "#E") + 2, InStr(cara, "E#") - InStr(cara, "#E") - 2)
    inp = InputBox("Quieres indicar un motivo de la denegacion al usuario?", "MOTIVO POR DENEGADO")
    If inp = "" Then
        msg = MsgBox("CANCELAR la denegacion de la solicitud?", vbYesNo, "Resultado")
        If msg = 7 Then RegistrarSolicitud "DENEGADA", "", correo, HC.Range("cp" & BuquedaEfectivo + 13), BuquedaEfectivo + 13
    Else
        If CorreoFallo = False Then RegistrarSolicitud "DENEGADA", inp, correo, HC.Range("cp" & BuquedaEfectivo + 13), BuquedaEfectivo + 13
        If CorreoFallo = False Then msg = MsgBox("La solicitud se ha registrado como DENEGADA y al usuario se le ha notificado", vbInformation, "SOLICITUD ATENDIDA")
    End If
    limpiar
Else
    msg = MsgBox("El usuario no esta suscrito a la APP", vbCritical, "Solicitud sin atender")
End If
End Sub

Private Sub BtnEnviar_Click()
If checkenvios = True Then
Unload Me
ENVIOCOLECTIVO.Show
Else
    msg = MsgBox("No se ha configurado el metodo de envio correctamente para poder realizar envios.", vbCritical, "Configuracion de Salida")
End If
End Sub

Private Sub BtnGuardar_Click()
If ListaClientes.ListIndex > -1 Then Guardar
End Sub
Private Sub BtnMenuApp2_Click()
Application.EnableEvents = False
MENUAPP2.Show
Application.EnableEvents = True
End Sub
Private Sub BtnPaste_Click()
Dim miPortapapeles As New DataObject, Contenido As String
miPortapapeles.GetFromClipboard: On Error Resume Next
Contenido = miPortapapeles.GetText
If Err Then MsgBox "Portapapeles vacio !!!" Else CajaDeTexto = Contenido
End Sub
Private Sub BtnRecibir_Click()
CorreoFallo = False
txt = CajaDeTexto.Text
'Desencriptar
txtdes = ""
For c = 1 To Len(txt)
    If Asc(Mid(txt, c, 1)) >= 48 And Asc(Mid(txt, c, 1)) <= 122 Then
        txtdes = txtdes & Chr(48 - Asc(Mid(txt, c, 1)) + 122)
    Else
        txtdes = txtdes & Mid(txt, c, 1)
    End If
Next
                     'CajaDeTexto.Value = txtdes
'Verificar Codigo
 'Check formato TIP
 'MsgBox txtdes
 'MsgBox Asc(Mid(txtdes, 30, 1))
If IsNumeric(Mid(txtdes, 3, 1)) = False And IsNumeric(Mid(txtdes, 9, 1)) = False And IsNumeric(Mid(txtdes, 4, 5)) = True Then
    Tip = Mid(txtdes, 3, 7)
    BuquedaEfectivo = Application.Match(Tip, HC.Range("cp14:cp313"), 0)
    If IsError(BuquedaEfectivo) = False Then
        ResEfectivo = HC.Range("do" & BuquedaEfectivo + 13)
    Else
        BuquedaEfectivo = ""
        GoTo NoCodigo
    End If
    Lisdias.Clear
    BtnAtender.Visible = True
    BtnABolsa.Visible = False
    Select Case Mid(txtdes, 1, 2)
        'Vacaciones y permisos
        Case 11
            TIPO = "Solicitud de VACACIONES"
            FechaIni = Mid(txtdes, 24, 2) & "/" & Mid(txtdes, 22, 2) & "/20" & Mid(txtdes, 26, 2)
            FechaFin = Mid(txtdes, 30, 2) & "/" & Mid(txtdes, 28, 2) & "/20" & Mid(txtdes, 32, 2)
            mostrarsol True
        Case 12
            TIPO = "Sol. ASUNTOS PARTICULARES"
            FechaIni = Mid(txtdes, 24, 2) & "/" & Mid(txtdes, 22, 2) & "/20" & Mid(txtdes, 26, 2)
            FechaFin = Mid(txtdes, 30, 2) & "/" & Mid(txtdes, 28, 2) & "/20" & Mid(txtdes, 32, 2)
            mostrarsol True
        Case 13
            TIPO = "Sol. PERMISO NAVIDAD"
            FechaIni = Mid(txtdes, 24, 2) & "/" & Mid(txtdes, 22, 2) & "/20" & Mid(txtdes, 26, 2)
            FechaFin = Mid(txtdes, 30, 2) & "/" & Mid(txtdes, 28, 2) & "/20" & Mid(txtdes, 32, 2)
            mostrarsol True
        Case 14
            TIPO = "Sol. PERMISO SEMANA SANTA"
            FechaIni = Mid(txtdes, 24, 2) & "/" & Mid(txtdes, 22, 2) & "/20" & Mid(txtdes, 26, 2)
            FechaFin = Mid(txtdes, 30, 2) & "/" & Mid(txtdes, 28, 2) & "/20" & Mid(txtdes, 32, 2)
            mostrarsol True
        'Descansos
        Case 21
            TIPO = "Pet. D.SINGULARIZADO (DAS)"
            FechaIni = Mid(txtdes, 24, 2) & "/" & Mid(txtdes, 22, 2) & "/20" & Mid(txtdes, 26, 2)
            FechaFin = FechaIni
            mostrarsol True
        Case 22
            TIPO = "Pet. D.FESTIVO (DF)"
            FechaIni = Mid(txtdes, 24, 2) & "/" & Mid(txtdes, 22, 2) & "/20" & Mid(txtdes, 26, 2)
            FechaFin = FechaIni
            mostrarsol True
        Case 23
            TIPO = "Pet. D.SUPERACION JORNADA (DSJ)"
            FechaIni = Mid(txtdes, 24, 2) & "/" & Mid(txtdes, 22, 2) & "/20" & Mid(txtdes, 26, 2)
            FechaFin = FechaIni
            mostrarsol True
        Case 24
            TIPO = "Pet.DESCANSO SEMANAL"
            FechaIni = Mid(txtdes, 24, 2) & "/" & Mid(txtdes, 22, 2) & "/20" & Mid(txtdes, 26, 2)
            FechaFin = Format(CDbl(CDate(FechaIni)) + 1, "dd/mm/yyyy")
            mostrarsol True
        Case 25
            TIPO = "Pet. DESCANSO ACUMULADO"
            FechaIni = Mid(txtdes, 24, 2) & "/" & Mid(txtdes, 22, 2) & "/20" & Mid(txtdes, 26, 2)
            FechaFin = Format(CDbl(CDate(FechaIni)) + 3, "dd/mm/yyyy")
            mostrarsol True
        'Peticiones
        Case 31
            TIPO = "No tener MA|fffd|ANA"
            For d = 0 To 4
                If Len(txtdes) > 22 + 6 * d Then Lisdias.AddItem (Mid(txtdes, 24 + 6 * d, 2) & "/" & Mid(txtdes, 22 + 6 * d, 2) & "/20" & Mid(txtdes, 26 + 6 * d, 2))
            Next
            mostrarsol False
        Case 32
            TIPO = "No tener TARDE"
            For d = 0 To 4
                If Len(txtdes) > 22 + 6 * d Then Lisdias.AddItem (Mid(txtdes, 24 + 6 * d, 2) & "/" & Mid(txtdes, 22 + 6 * d, 2) & "/20" & Mid(txtdes, 26 + 6 * d, 2))
            Next
            mostrarsol False
        Case 33
            TIPO = "No tener NOCHE"
            For d = 0 To 4
                If Len(txtdes) > 22 + 6 * d Then Lisdias.AddItem (Mid(txtdes, 24 + 6 * d, 2) & "/" & Mid(txtdes, 22 + 6 * d, 2) & "/20" & Mid(txtdes, 26 + 6 * d, 2))
            Next
            mostrarsol False
        'Cambio de servicio
        Case 41
            Tip2 = Mid(txtdes, 22, 7)
            BuquedaEfectivo2 = Application.Match(Tip2, HC.Range("cp14:cp313"), 0)
            If IsError(BuquedaEfectivo2) = False Then
                Efectivo2 = HC.Range("do" & BuquedaEfectivo2 + 13)
            Else
                GoTo NoCodigo
            End If
            FechaIni = Mid(txtdes, 31, 2) & "/" & Mid(txtdes, 29, 2) & "/20" & Mid(txtdes, 33, 2)
            Serv1 = Mid(txtdes, InStr(txtdes, "@1@") + 3, InStr(txtdes, "@2@") - InStr(txtdes, "@1@") - 3)
            Serv2 = Mid(txtdes, InStr(txtdes, "@2@") + 3, 10)
            TIPO = "CAMBIO CON COMPA|fffd|ERO"
            Lisdias.Visible = False
            LServ2.Visible = True
            LServ1.Visible = True
            Serv1.Visible = True
            Serv2.Visible = True
            Lefectivo2.Visible = True
            Efectivo2.Visible = True
            FechaIni.Visible = True
            Lffin.Visible = False
            Lfini.Visible = False
            Lfini.Caption = "FECHA CAMBIO:"
            FechaFin.Visible = False
            LDias.Visible = True
        Case 51
            BtnABolsa.Visible = True
            BtnAtender.Visible = False
            TIPO = "BOLSA: Servicio por Servicio"
            FechaIni.Visible = True
            Lfini.Visible = True
            Serv1.Visible = True
            LServ1.Visible = True
            Serv1 = Mid(txtdes, 30, 10)
            FechaIni = Mid(txtdes, 22, 2) & "/" & Mid(txtdes, 24, 2) & "/" & Mid(txtdes, 26, 4)
        Case 52
            BtnABolsa.Visible = True
            BtnAtender.Visible = False
            TIPO = "BOLSA: Servicio por Descanso"
            FechaIni = Mid(txtdes, 22, 2) & "/" & Mid(txtdes, 24, 2) & "/" & Mid(txtdes, 26, 4)
            FechaIni.Visible = True
            Lfini.Visible = True
            Serv1.Visible = True
            LServ1.Visible = True
            Serv1 = Mid(txtdes, 30, 10)
        Case 53
            BtnABolsa.Visible = False
            BtnAtender.Visible = True
            If Mid(txtdes, 30, 1) = 1 Then
                subtipo = "Por Servicio"
            Else
                subtipo = "Por Descanso"
            End If
            TIPO = "Aceptacion BOLSA " & subtipo
            FechaIni = Mid(txtdes, 22, 2) & "/" & Mid(txtdes, 24, 2) & "/" & Mid(txtdes, 26, 4)
            FechaIni.Visible = True
            Lfini.Visible = True
            Serv1.Visible = True
            LServ1.Visible = True
            Serv1 = Mid(txtdes, 31, 10)
        Case 60
            mesabs = Mid(txtdes, 22, 2)
            TIPO.Caption = "PLANIFICACION A LA CARTA"
            msg = MsgBox("PLANIFICACION MANUAL DE " & Choose(mesabs Mod 12, "ENERO", "FEBRERO", "MARZO", "ABRIL", "MAYO", "JUNIO", "JULIO", "AGOSTO", "SEPTIEMBRE", "OCTUBRE", "NOVIEMBRE", "DICIEMBRE") & " / " & Int(mesabs / 12) + 2015 & vbCrLf & vbCrLf & "    Se esta recibiendo una planificacion manual del efectivo " & ResEfectivo & ". Quieres reemplazar por los datos que envia este persona?" & vbCrLf & vbCrLf & "Solo deberias aceptarla en caso que lo tengas claro o que estuvieras esperando esta planificacion", vbYesNo, "Reemplazar planificaci|fffd|n")
            If msg = 6 Then
                cara = HC.Range("cu" & BuquedaEfectivo + 13)
                If InStr(cara, "#E") > 0 Then
                    If Val(mesabs) = HC.Range("ba5") Then
                        Application.EnableEvents = False
                        'Mes actual
                        txtdes = Replace(txtdes, Chr(34), "")
                        'MsgBox txtdes
                        ahora = InStr(txtdes, "@Pla@") + 5
                        For d = 13 To 47
                            If InStr(ahora, txtdes, ",") > 0 Then
                                siguiente = InStr(ahora, txtdes, ",") - ahora
                                If siguiente > 0 Then
                                    Servi = Mid(txtdes, ahora, siguiente)
                                    If InStr(Servi, "   ") > 0 Then Servi = (Replace(Servi, "   ", Chr(10)))
                                    HC.Cells(BuquedaEfectivo + 13, d) = Servi
                                    ahora = ahora + siguiente + 1
                                Else
                                    ahora = ahora + siguiente + 1
                                End If
                            Else
                            'Deja Como esta
                            End If
                        Next
                        HC.Cambiar_Servicio BuquedaEfectivo + 13
                        Application.EnableEvents = True
                    Else
                        'Mes no abierto
                        msg = MsgBox("Debes situarte en el cuadrante del mes recibido", vbCritical, "Mes actual no coincide con el abierto")
                        GoTo SinAtender
                    End If
                    CODIGOBUENO = txtdes
                    correo = Mid(cara, InStr(cara, "#E") + 2, InStr(cara, "E#") - InStr(cara, "#E") - 2)
                    RegistrarSolicitud "APROBADA", "", correo, HC.Range("cp" & BuquedaEfectivo + 13), BuquedaEfectivo + 13
                    If CorreoFallo = False Then msg = MsgBox("La solicitud se ha registrado como atendida y al usuario se le ha notificado", vbInformation, "SOLICITUD ATENDIDA")
                    Unload Me
                Else
                    msg = MsgBox("El usuario no esta suscrito a la APP", vbCritical, "Solicitud sin atender")
                    Unload Me
                End If
            Else
SinAtender:
                Unload Me
            End If
        Case 70
            TIPO.Caption = "AJUSTE DE HORAS DE SERVICIO"
            FechaIni.Visible = True
            Lfini.Visible = True
            FechaIni = Mid(txtdes, 10, 10)
            BtnAtender.Visible = False
            BtnDengarDirecto.Visible = False
            Observaciones.Visible = True
            Observaciones.Caption = Mid(txtdes, 21, 100)
        Case Else
            GoTo NoCodigo
    End Select
Else
    GoTo NoCodigo
End If
'Mostrar datos
CODIGOBUENO = txtdes
FdatosRecibidos.Visible = True
GoTo fin
NoCodigo:
msg = MsgBox("Este codigo no es correcto, asegurate de que la persona este suscrita correctamente a CUADRANTAPP", vbCritical, "Error de lectura")
fin:
End Sub
Private Sub mostrarsol(modo As Boolean)
LServ2.Visible = False
LServ1.Visible = False
Serv1.Visible = False
Lefectivo2.Visible = False
Efectivo2.Visible = False
Lfini.Caption = "FECHA INICIO:"
If modo = True Then
    Lfini.Visible = True
    Lffin.Visible = True
    FechaIni.Visible = True
    FechaFin.Visible = True
    Lisdias.Visible = False
    LDias.Visible = False
Else
    Lfini.Visible = False
    Lffin.Visible = False
    FechaIni.Visible = False
    FechaFin.Visible = False
    Lisdias.Visible = True
    LDias.Visible = True
End If
End Sub
Private Sub BtnSuscripciones_Click()
FRecibir.Visible = False
FBotones.Visible = False
FConfig.Visible = False
FSuscripcion.Visible = True
FSuscripcion.top = 10
FSuscripcion.left = 10
Me.Height = 430
End Sub
Private Sub CAlt_change()
If CAlt = True Then
    Csus = False
End If
End Sub
Private Sub CheckConCopia_Click()
HC.Range("ce" & HC.Range("bu1")) = CheckConCopia
End Sub
Private Sub SelRed_Change()
HC.Range("bu1") = SelRed.ListIndex + 2
If SelRed.ListIndex = 4 Then
    emailAdmin.Enabled = False
    PassAdmin.Enabled = False
    CheckRecordar.Enabled = False
Else
    emailAdmin.Enabled = True
    PassAdmin.Enabled = True
    CheckRecordar.Enabled = True
End If
If SelRed.ListIndex = 0 Or SelRed.ListIndex = 1 Or SelRed.ListIndex = 5 Then
    CheckConCopia.Enabled = True
    CheckConCopia = HC.Range("ce" & HC.Range("bu1"))
Else
    CheckConCopia.Enabled = False
End If
If SelRed.ListIndex = 5 Then
    BtnMenuApp2.Enabled = True
Else
    BtnMenuApp2.Enabled = False
End If
HC.Range("bt2") = SelRed
End Sub
Private Sub UserForm_Initialize()
SelRed.List = HC.Range("bx2:bx7").Value
SelRed = HC.Range("bt2")
SelRed_Change
ActualizarListaClientes
Me.Height = 340
CrearCarpetaApp
End Sub
Private Sub ActualizarListaClientes()
Application.EnableEvents = False
ListaClientes.Clear
On Error Resume Next
fil = -1
For n = 14 To 313
    If HC.Range("do" & n) <> "" Then
        per = ""
        cara = HC.Range("cu" & n)
        ListaClientes.AddItem
        fil = fil + 1
        ListaClientes.List(fil, 0) = HC.Range("cl" & n)
        ListaClientes.List(fil, 1) = HC.Range("do" & n)
        
        If InStr(cara, "#P") > 0 Then
            per = Mid(cara, InStr(cara, "#P") + 2, 5)
            ListaClientes.List(fil, 2) = "X"
        End If
        If Mid(per, 1, 1) = 2 Then ListaClientes.List(fil, 3) = "X"
        If Mid(per, 2, 1) = 2 Then ListaClientes.List(fil, 4) = "X"
        If Mid(per, 3, 1) = 2 Then ListaClientes.List(fil, 5) = "X"
        If Mid(per, 4, 1) = 2 Then ListaClientes.List(fil, 6) = "X"
        If Mid(per, 5, 1) = 2 Then ListaClientes.List(fil, 7) = "X"
        If InStr(cara, "#E") > 0 Then
            ListaClientes.List(fil, 8) = Mid(cara, InStr(cara, "#E") + 2, InStr(cara, "E#") - InStr(cara, "#E") - 2)
        End If
        If InStr(cara, "#I") > 0 Then ListaClientes.List(fil, 9) = "X"
    End If
Next
Application.EnableEvents = True
End Sub
Private Sub ListaClientes_click()
If ListaClientes.ListIndex > -1 Then
    Csus.Enabled = True
    CAlt.Enabled = True
    correo.Enabled = True
    FrameEditar.Visible = True
Else
    Csus.Enabled = False
    CAlt.Enabled = False
    correo.Enabled = False
    FrameEditar.Visible = False
End If
Area = ListaClientes.List(ListaClientes.ListIndex, 0)
Nombre = ListaClientes.List(ListaClientes.ListIndex, 1)
correo = ListaClientes.List(ListaClientes.ListIndex, 8)
If ListaClientes.List(ListaClientes.ListIndex, 2) <> "" Then Csus = True Else Csus = False
If ListaClientes.List(ListaClientes.ListIndex, 3) <> "" Then Ccarta = True Else Ccarta = False
If ListaClientes.List(ListaClientes.ListIndex, 4) <> "" Then Cbolsin = True Else Cbolsin = False
If ListaClientes.List(ListaClientes.ListIndex, 5) <> "" Then Cpet = True Else Cpet = False
If ListaClientes.List(ListaClientes.ListIndex, 6) <> "" Then Cdes = True Else Cdes = False
If ListaClientes.List(ListaClientes.ListIndex, 7) <> "" Then Cvac = True Else Cvac = False
If ListaClientes.List(ListaClientes.ListIndex, 9) <> "" Then CAlt = True Else CAlt = False
End Sub
Private Sub Guardar()
If correo = "" And Csus = True Then
    msg = MsgBox("Para suscribir a esta persona primero se tiene que indicar una cuenta de correo", vbCritical, "Suscripion")
    'Csus = False
    GoTo fin
ElseIf correo = "" And CAlt = True Then
    msg = MsgBox("Para suscribir a esta persona primero se tiene que indicar una cuenta de correo", vbCritical, "Suscripion")
    'CAlt = False
    GoTo fin
End If
cara = HC.Range("cu" & ListaClientes.ListIndex + 14)
If Csus = True Then opc1 = "#P"
If Ccarta = True Then opc2 = 2 Else opc2 = 1
If Cbolsin = True Then opc3 = 2 Else opc3 = 1
If Cpet = True Then opc4 = 2 Else opc4 = 1
If Cdes = True Then opc5 = 2 Else opc5 = 1
If Cvac = True Then opc6 = 2 Else opc6 = 1
opctotal = opc1 & opc2 & opc3 & opc4 & opc5 & opc6
If Csus = False Then opctotal = ""
If CAlt = True Then opctotal = "#I"
If InStr(cara, "#P") > 0 Then
    cara = Replace(cara, Mid(cara, InStr(cara, "#P"), 7), opctotal)
ElseIf InStr(cara, "#I") > 0 Then
    cara = Replace(cara, Mid(cara, InStr(cara, "#I"), 2), opctotal)
Else
    cara = cara & opctotal
End If
If correo <> "" Then
    If InStr(cara, "#E") > 0 Then
        cara = Replace(cara, "#E" & Mid(cara, InStr(cara, "#E") + 2, InStr(cara, "E#") - InStr(cara, "#E") - 2) & "E#", "#E" & correo & "E#")
    Else
        cara = cara & "#E" & correo & "E#"
    End If
Else
    If InStr(cara, "#E") > 0 Then
        cara = Replace(cara, "#E" & Mid(cara, InStr(cara, "#E") + 2, InStr(cara, "E#") - InStr(cara, "#E") - 2) & "E#", "")
    End If
End If
filapers = Application.Match(ListaClientes.List(ListaClientes.ListIndex, 1), HC.Range("do14:do313"), 0)
If IsError(filapers) = False Then HC.Range("cu" & filapers + 13) = cara
Antes = ListaClientes.ListIndex
ActualizarListaClientes
ListaClientes.ListIndex = Antes
fin:
End Sub
Private Sub Csus_change()
If Csus = True Then
    CAlt = False
    Ccarta.Enabled = True
    Cbolsin.Enabled = True
    Cpet.Enabled = True
    Cdes.Enabled = True
    Cvac.Enabled = True
Else
    Ccarta.Enabled = False
    Cbolsin.Enabled = False
    Cpet.Enabled = False
    Cdes.Enabled = False
    Cvac.Enabled = False
End If
End Sub
Private Sub UserForm_QueryClose(Cancel As Integer, CloseMode As Integer)
If CheckRecordar <> True Then HC.Range("bt4").ClearContents
Application.EnableEvents = True
End Sub

Private Sub VerRegistro_Click()
REGISTROSOL.SolPersona = ""
REGISTROSOL.actualizarlista
REGISTROSOL.Show 0
End Sub
Sub RegistrarSolicitud(resultado, motivo, correo, Tip, fila)
Dim REGFIL As Workbook
Dim RegSOL As Worksheet
Dim LibroDeRegistro As String
Application.ScreenUpdating = False
Application.EnableEvents = False
LibroDeRegistro = ThisWorkbook.Path & "\CuadrAPP\RegSolicitudes.xls"
If Dir(ThisWorkbook.Path & "\CuadrAPP", vbDirectory) <> "" Then
Else
    MkDir ThisWorkbook.Path & "\CuadrAPP"
End If
On Error Resume Next
existe = Dir(LibroDeRegistro)
On Error GoTo 0
If existe = "" Then
    Set REGFIL = Workbooks.Add
    REGFIL.SaveAs filename:=LibroDeRegistro, Password:="1601"
Else
    If IsFileOpen(LibroDeRegistro) = True Then
        'msg = MsgBox("El archivo seleccionado se encuentra abierto y no se puede leer. Cierra el archivo y vuelve a intentarlo", vbCritical, "Cierra el origen")
        Set REGFIL = Workbooks("RegSolicitudes.xls")
    Else
        Set REGFIL = Workbooks.Open(filename:=LibroDeRegistro, Password:="1601")
    End If
End If
Set RegSOL = REGFIL.Worksheets(1)
numregistros = RegSOL.Range("a65536").End(xlUp).Row + 1
repe = Application.Match(CODIGOBUENO, RegSOL.Range("a1:A" & numregistros), 0)
If IsError(repe) = False Then
    msg = MsgBox("Esta Solicitud ya se encuentra registrada en estado: " & RegSOL.Range("b" & repe) & " - " & RegSOL.Range("c" & repe), vbCritical, "Registro")
    REGFIL.Close savechanges:=False
Else
    RegSOL.Range("a" & numregistros) = CODIGOBUENO ' Codigo Entero
    RegSOL.Range("b" & numregistros) = resultado
    RegSOL.Range("c" & numregistros) = motivo
    RegSOL.Range("d" & numregistros) = Format(Now(), "dd/mm/yyyy hh:mm") ' fecha atendida
    If resultado = "DENEGADA" Then RegSOL.Range("e" & numregistros) = Format(Now(), "dd/mm/yyyy hh:mm") ' cerrada
    RegSOL.Range("f" & numregistros) = ResEfectivo.Caption
    RegSOL.Range("g" & numregistros) = TIPO.Caption
    If FechaFin.Caption <> "" Then RegSOL.Range("h" & numregistros) = "Del:    " & FechaIni.Caption & "      al:     " & FechaFin.Caption
    If Lisdias.ListCount >= 1 Then
        For d = 0 To 4
            If Len(CODIGOBUENO) > 22 + 6 * d Then Texto = Texto & "   " & (Mid(CODIGOBUENO, 22 + 6 * d, 2) & "/" & Mid(CODIGOBUENO, 24 + 6 * d, 2) & "/20" & Mid(CODIGOBUENO, 26 + 6 * d, 2))
        Next
        RegSOL.Range("h" & numregistros) = "Dias :" & Texto
    End If
    If Efectivo2 <> "" Then RegSOL.Range("h" & numregistros) = "Servicio " & Serv1 & " del " & FechaIni.Caption & " por el " & Serv2 & " de " & Efectivo2.Caption
    If FechaIni.Caption <> "" And Serv1.Caption <> "" Then RegSOL.Range("h" & numregistros) = "Servicio " & Serv1 & " del " & FechaIni.Caption & "  "
    REGFIL.Close savechanges:=True
    ConstruirRespuestaSolicitud Mid(CODIGOBUENO, 10, 12), resultado & " " & motivo, correo, Tip, fila
End If
Application.ScreenUpdating = True
Application.EnableEvents = True
End Sub
Private Sub limpiar()
FdatosRecibidos.Visible = False
CajaDeTexto.Value = ""
End Sub
Attribute VB_Name = "MENUAPP2"
Attribute VB_Base = "0{1DACC5B7-3E9A-4A49-BBE6-9E1C5E8D921B}{7DED4D64-46FD-4E44-8CED-76B967E2FCE8}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Private Sub UserForm_QueryClose(Cancel As Integer, CloseMode As Integer)
Me.Hide
End Sub
Attribute VB_Name = "MENUAPPBRIEFING"
Attribute VB_Base = "0{BEDB7652-F44C-4F1C-8366-F9261AF8EECA}{810B3F0F-83C3-47E8-9CB2-580E6F860B72}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Private Sub BtnDeLista_Click()
LISTACORREOS.Show
actualizalista
End Sub
Private Sub BtnMasDestinatario_Click()
inp = InputBox("Nombre del nuevo destinatario", "A|fffd|adir destinatario")
If inp = "" Then GoTo fin
inp2 = InputBox("EMAIL del destinatario", "A|fffd|adir destinatario")
If inp = "" Then GoTo fin
fila = HCON.Range("cn100").End(xlUp).Row + 1
HCON.Range("cn" & fila) = inp
HCON.Range("co" & fila) = inp2
actualizalista
fin:
End Sub
Private Sub actualizalista()
ListDestinatarios.Clear
For Lista = 4 To HCON.Range("cn101").End(xlUp).Row
    If HCON.Range("cn" & Lista) <> "" Then
        ListDestinatarios.AddItem
        ListDestinatarios.List(Lista - 4, 0) = HCON.Range("cn" & Lista)
        ListDestinatarios.List(Lista - 4, 1) = HCON.Range("co" & Lista)
    End If
Next
End Sub
Private Sub CheckenvioOtros_Click()
If CheckenvioOtros = True Then
    ListDestinatarios.Enabled = True
Else
    ListDestinatarios.Enabled = False
End If
End Sub
Private Sub optArea_Change()
If optArea.Value = True Then
    ListArea.Enabled = True
Else
    ListArea.Enabled = False
End If
End Sub
Private Sub UserForm_Initialize()
actualizalista
ListArea.Clear
For Area = 8 To 16
    If HCON.Range("d" & Area) <> "" Then ListArea.AddItem (HCON.Range("d" & Area).Value)
Next
End Sub
Private Sub BtnEliminarDestinatario_Click()
msg = MsgBox("Eliminar a este o estos destinatarios", vbYesNo, "Eliminar")
If msg = 6 Then
    For sel = ListDestinatarios.ListCount - 1 To 0 Step -1
        If ListDestinatarios.Selected(sel) = True Then
            HCON.Range("cn" & sel + 4 & ":co" & 100).Value = HCON.Range("cn" & sel + 5 & ":co" & 101).Value
        End If
    Next
    actualizalista
End If
End Sub
Private Sub BtnEnviarMsj_Click()
personas = 0
On Error Resume Next
If OptTodos = True Then
    For n = 14 To 313
        If HC.Range("do" & n) <> "" Then
           carac = HC.Range("cu" & n)
            If InStr(carac, "#E") > 0 And InStr(carac, "#P") > 0 Then
                correo = correo & Mid(carac, InStr(carac, "#E") + 2, InStr(carac, "E#") - InStr(carac, "#E") - 2) & ","
                personas = personas + 1
            End If
        End If
    Next
ElseIf optArea = True Then
    For n = 14 To 313
        If HC.Range("do" & n) <> "" And HC.Range("cl" & n) = HCON.Range("e" & ListArea.ListIndex + 8) Then
           carac = HC.Range("cu" & n)
            If InStr(carac, "#E") > 0 And InStr(carac, "#P") > 0 Then
                correo = correo & Mid(carac, InStr(carac, "#E") + 2, InStr(carac, "E#") - InStr(carac, "#E") - 2) & ","
                personas = personas + 1
            End If
        End If
    Next
ElseIf OptPersonalServicio = True Then
    For n = 14 To 313
        If HC.Range("do" & n) <> "" Then
            busca = Application.Match(HC.Range("do" & n), HN.Range("r13:r600"), 0)
            If IsError(busca) = False Then
                carac = HC.Range("cu" & n)
                If InStr(carac, "#E") > 0 And InStr(carac, "#P") > 0 Then
                    correo = correo & Mid(carac, InStr(carac, "#E") + 2, InStr(carac, "E#") - InStr(carac, "#E") - 2) & ","
                    personas = personas + 1
                End If
            End If
        End If
    Next
Else
End If
For sel = 0 To ListDestinatarios.ListCount - 1
    If ListDestinatarios.Selected(sel) = True Then
        correo = correo & ListDestinatarios.List(sel, 1)
        personas = personas + 1
    End If
Next
If personas > 0 Then
    CrearCarpetaApp
    HID.Informar
    HID.Makepicture
    archivo = ThisWorkbook.Path & "\Cuadrapp\InfoDiario-" & Format(HN.Range("g6"), "MMDDYY") & ".jpg"
    Name ThisWorkbook.Path & "/Cuadrapp/Minuta.jpg" As archivo
    msg = MsgBox("El informe esta listo para enviar a " & personas & " personas. Quieres enviar el Informe diario?", vbYesNo, "Envio listo")
    If msg = 6 Then
        respuesta = enviarcorreo(correo, "Informe diario " & Format(HN.Range("g6"), "DD/MM/yyyy"), "Informe diario " & Format(HN.Range("g6"), "DD/MM/yyyy"), archivo, True)
        MsgEnvio respuesta, correo, "Envio de Informes Diarios"
    End If
    Unload Me
End If
End Sub
Attribute VB_Name = "MENUAPPINFORMES"
Attribute VB_Base = "0{4911D66A-1ACF-4F8E-AC44-A4786A74E339}{5A7C70FF-8E30-4B78-8629-ABFC3F4063A0}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Public TIPO
Private Sub BtnDeLista_Click()
LISTACORREOS.Show
actualizalista
End Sub
Private Sub BtnMasDestinatario_Click()
inp = InputBox("Nombre del nuevo destinatario", "A|fffd|adir destinatario")
If inp = "" Then GoTo fin
inp2 = InputBox("EMAIL del destinatario", "A|fffd|adir destinatario")
If inp = "" Then GoTo fin
fila = HCON.Range("cn100").End(xlUp).Row + 1
HCON.Range("cn" & fila) = inp
HCON.Range("co" & fila) = inp2
actualizalista
fin:
End Sub
Private Sub actualizalista()
ListDestinatarios.Clear
For Lista = 4 To HCON.Range("cn101").End(xlUp).Row
    If HCON.Range("cn" & Lista) <> "" Then
        ListDestinatarios.AddItem
        ListDestinatarios.List(Lista - 4, 0) = HCON.Range("cn" & Lista)
        ListDestinatarios.List(Lista - 4, 1) = HCON.Range("co" & Lista)
    End If
Next
End Sub
Private Sub CheckenvioOtros_Click()
If CheckenvioOtros = True Then
    ListDestinatarios.Enabled = True
Else
    ListDestinatarios.Enabled = False
End If
End Sub
Private Sub optArea_Change()
If optArea.Value = True Then
    ListArea.Enabled = True
Else
    ListArea.Enabled = False
End If
End Sub
Private Sub UserForm_Initialize()
actualizalista
ListArea.Clear
For Area = 8 To 16
    If HCON.Range("d" & Area) <> "" Then ListArea.AddItem (HCON.Range("d" & Area).Value)
Next
End Sub
Private Sub BtnEliminarDestinatario_Click()
msg = MsgBox("Eliminar a este o estos destinatarios", vbYesNo, "Eliminar")
If msg = 6 Then
    For sel = ListDestinatarios.ListCount - 1 To 0 Step -1
        If ListDestinatarios.Selected(sel) = True Then
            HCON.Range("cn" & sel + 4 & ":co" & 100).Value = HCON.Range("cn" & sel + 5 & ":co" & 101).Value
        End If
    Next
    actualizalista
End If
End Sub
Private Sub BtnEnviarMsj_Click()
On Error Resume Next
personas = 0
If OptTodos = True Then
    For n = 14 To 313
        If HC.Range("do" & n) <> "" Then
           carac = HC.Range("cu" & n)
            If InStr(carac, "#E") > 0 And InStr(carac, "#P") > 0 Then
                correo = correo & Mid(carac, InStr(carac, "#E") + 2, InStr(carac, "E#") - InStr(carac, "#E") - 2) & ","
                personas = personas + 1
            End If
        End If
    Next
ElseIf optArea = True Then
    For n = 14 To 313
        If HC.Range("do" & n) <> "" And HC.Range("cl" & n) = HCON.Range("e" & ListArea.ListIndex + 8) Then
           carac = HC.Range("cu" & n)
            If InStr(carac, "#E") > 0 And InStr(carac, "#P") > 0 Then
                correo = correo & Mid(carac, InStr(carac, "#E") + 2, InStr(carac, "E#") - InStr(carac, "#E") - 2) & ","
                personas = personas + 1
            End If
        End If
    Next
Else
End If
For sel = 0 To ListDestinatarios.ListCount - 1
    If ListDestinatarios.Selected(sel) = True Then
        correo = correo & ListDestinatarios.List(sel, 1)
        personas = personas + 1
    End If
Next
CrearCarpetaApp
If TIPO = "PLANIFICACION" And personas > 0 Then
    estampado = Format(Now(), " DD-MM-YYYY HH'MM")
    archivo = ThisWorkbook.Path & "\Cuadrapp\Cuadrante-" & HC.Range("ba6") + 1 & "-" & HC.Range("ba7") + 2015 & ".jpg"
    Name ThisWorkbook.Path & "\Cuadrapp\Informe.jpg" As archivo
    msg = MsgBox("El informe esta listo para enviar a " & personas & " personas. Enviar?", vbYesNo, "Envio listo")
    If msg = 6 Then
        respuesta = enviarcorreo(correo, "Cuadrante " & HC.Range("e3"), "Informe generado el " & vbCrLf & estampado, archivo, True)
        MsgEnvio respuesta, correo, "Envio de Informes"
    End If
    Unload Me
ElseIf TIPO = "AGENDA" Then
    estampado = Format(Now(), " DD-MM-YYYY HH'MM")
    archivo = ThisWorkbook.Path & "\Cuadrapp\Agenda-" & HC.Range("ba6") + 1 & "-" & HC.Range("ba7") + 2015 & ".jpg"
    Name ThisWorkbook.Path & "\Cuadrapp\Agenda.jpg" As archivo
    msg = MsgBox("La agenda esta lista para enviar a " & personas & " personas. Enviar?", vbYesNo, "Envio listo")
    If msg = 6 Then
        respuesta = enviarcorreo(correo, "Agenda de  " & HC.Range("e3"), "Informe generado el " & vbCrLf & estampado, archivo, True)
        MsgEnvio respuesta, correo, "Envio de Informes"
    End If
    Unload Me
End If

End Sub
Attribute VB_Name = "MENUCAJA"
Attribute VB_Base = "0{6A7B658E-E0B9-444C-B587-A60A160DD483}{5F2953D0-1DA5-4A7F-B005-1126B8EF757C}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Sub BtnAnadir_Click()
HN.Caja = 1
Me.Hide
End Sub
Private Sub BtnModificar_Click()
HN.Caja = 2
Me.Hide
End Sub
Private Sub BtnEliminar_Click()
HN.Caja = 3
Me.Hide
End Sub
Private Sub BtnDuplicar_Click()
HN.Caja = 4
Me.Hide
End Sub
Private Sub BtnPapeleta_Click()
HN.Caja = 6
Me.Hide
End Sub
Private Sub BtnPapeletaExcel_Click()
HN.Caja = 7
Me.Hide
End Sub
Private Sub UserForm_QueryClose(Cancel As Integer, CloseMode As Integer)
HN.Caja = 5
Me.Hide
End Sub
Private Sub UserForm_Initialize()
'RATON---------------------------------
xpos = convertMouseToForm.left
ypos = convertMouseToForm.top
If ypos + MENUCAJA.Height > ActiveWindow.Height Then ypos = ypos - MENUCAJA.Height
If xpos + MENUCAJA.Width > ActiveWindow.Width Then xpos = xpos - MENUCAJA.Width
Me.top = ypos
Me.left = xpos
'---------------------------------------
HN.Caja = 0
End Sub

Attribute VB_Name = "MENUCATALOGOS"
Attribute VB_Base = "0{70F7D632-4E01-4372-9988-E231E2459473}{659F381E-8A3B-4545-A128-EFF4F2A32975}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Private Sub BtnCarac_Click()
CATCARAC.Show
End Sub
Sub BtnServicios_Click()
Me.Hide
Unload CAJONSERVICIOS
CATSERVICIOS.Show
End Sub
Sub BtnTurnos_Click()
Me.Hide
FORMTURNOS.Show
End Sub
Private Sub BtnCometidos_Click()
'Me.Hide
CATCOMETIDOS.Show
End Sub
Private Sub BtnUnidad_Click()
'Me.Hide
CATUNIDAD.Show
End Sub
Private Sub BtnFestivos_Click()
Me.Hide
CATFESTIVOS.Show
End Sub
Private Sub BtnLugares_Click()
'Me.Hide
CATLUGARES.Show
End Sub
Private Sub BtnIndicativos_Click()
'Me.Hide
CATINDICATIVOS.Show
End Sub
Private Sub BtnMaterial_Click()
'Me.Hide
CATMATERIAL.Show
End Sub
Private Sub UserForm_Initialize()
If RAPIDAS.Visible = True Then Unload RAPIDAS
If CAJONSERVICIOS.Visible = True Then Unload CAJONSERVICIOS

Me.BackColor = HCON.Cells(29, 99 + HCON.Range("cv16"))
Me.ForeColor = HCON.Cells(30, 99 + HCON.Range("cv16"))
End Sub
Attribute VB_Name = "MENUDIA"
Attribute VB_Base = "0{AD04E4CB-B32D-42B5-A228-57E37455A427}{2560CA65-8A2E-43D5-BA99-1B16AD4253A4}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Private Sub BtnComents_Click()
COMENT.Show
Unload Me
End Sub
Private Sub BtnNombrar_Click()
If HCON.Range("ag14") = False Then NoUser
If RAPIDAS.Visible = True Then Unload RAPIDAS
If CAJONSERVICIOS.Visible = True Then Unload CAJONSERVICIOS
If SELHERRAMIENTAS.Visible = True Then Unload SELHERRAMIENTAS
Application.ScreenUpdating = False
Application.EnableEvents = False
If Application.Calculation = xlCalculationAutomatic Then Application.Calculation = xlCalculationManual
HC.GUARDARCUADRANTEMES
despro HN
Dianterior = HN.Range("al1")
HN.Range("g6").Value = HC.Cells(13, ActiveCell.Column).Value
HN.Range("al1") = (HN.Range("g6") - DateSerial(Year(HN.Range("g6")), 1, 0)) * 100 + 1
HN.CargarServicios ActiveCell.Column - 13
HN.CARGARDIA Dianterior, False
Application.CommandBars.ActiveMenuBar.Enabled = True
Application.CommandBars.ActiveMenuBar.Enabled = False
HN.Calculate
Application.EnableEvents = True
HN.Activate
pro HN
Application.ScreenUpdating = True
Unload Me
End Sub
Private Sub BtnResumen_Click()
Unload Me
RESUMENDIA.Show
End Sub
Private Sub IrCatFestivos_Click()
If HCON.Range("ag8") = False Then NoUser
If IrCatFestivos.Caption = "MARCAR COMO FESTIVO" Then
    HCON.Calculate
    HCON.Range("h" & HCON.Range("h310") + 5).Formula = CDate(HC.Cells(13, ActiveCell.Column))
    Unload Me
    Application.ScreenUpdating = False
    Application.EnableEvents = False
    HC.Refrescar 1
    HC.BarraDias
    Application.EnableEvents = True
    Application.ScreenUpdating = True
Else
    HCON.Calculate
    FESTIVO = Application.WorksheetFunction.Match(HC.Cells(13, ActiveCell.Column), HCON.Range("h5:H144"), 0)
    If FESTIVO + 4 > 4 Then HCON.Range("H" & FESTIVO + 4 & ":H143").Value = HCON.Range("H" & FESTIVO + 5 & ":H144").Value
    Unload Me
    Application.ScreenUpdating = False
    Application.EnableEvents = False
    HC.Refrescar 1
    HC.BarraDias
    Application.EnableEvents = True
    Application.ScreenUpdating = True
End If
End Sub
Private Sub UserForm_Initialize()
Me.BackColor = HCON.Cells(29, 99 + HCON.Range("cv16"))
Me.ForeColor = HCON.Cells(30, 99 + HCON.Range("cv16"))
If HC.Cells(322, ActiveCell.Column) <> "F" Then
    IrCatFestivos.Caption = "MARCAR COMO FESTIVO"
Else
    IrCatFestivos.Caption = "QUITAR FESTIVO"
End If
End Sub

Attribute VB_Name = "MENUESTADISTICA"
Attribute VB_Base = "0{A46EF61C-9569-4E2B-BCF0-821A91489A07}{64D6E081-0D64-458C-90BB-B5F90BA60280}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Private Sub BtnGraficos_Click()
Unload Me
HC.GUARDARCUADRANTEMES
GRAFICOS.Show
End Sub
Private Sub BtnGraficos2_Click()
Unload Me
GRAFICOS2.Show
End Sub
Attribute VB_Name = "MENUESTRATEGIA"
Attribute VB_Base = "0{38082192-7A06-4B4A-B27D-417FEEFF6D54}{016475E1-6669-44B5-A7B8-FCC92176FFF7}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Dim fila As Integer
Dim AR As Integer
Dim modo As Boolean
Public eventosseleccionados
Private Sub AbrirEventos_Click()
SELEVENTOS.Show
EventoOP.Value = eventosseleccionados
End Sub
Private Sub BtnColor_Click()
ThisWorkbook.COLORSEL = ""
FORMCOLORPICKER.Show
If ThisWorkbook.COLORSEL <> "" Then Nombre.BackColor = ThisWorkbook.COLORSEL
End Sub
Private Sub BtnColorTexto_Click()
ThisWorkbook.COLORSEL = ""
FORMCOLORPICKER.Show
If ThisWorkbook.COLORSEL <> "" Then Nombre.ForeColor = ThisWorkbook.COLORSEL
End Sub
Private Sub BtnMas1_Click()
If ListCode1.ListCount < 20 Then
    HC.CodigoDevuelto = ""
    SELECCIONADOR.TIPO = "Serv"
    SELECCIONADOR.inicia
    SELECCIONADOR.Show
    If HC.CodigoDevuelto <> "" Then ListCode1.AddItem (HC.CodigoDevuelto)
Else
    msg = MsgBox("Solo se pueden contar 20 codigos o servicios por campo y fila.", vbCritical, "Limite")
End If
End Sub
Private Sub BtnMenos1_Click()
If ListCode1.ListIndex <> -1 Then ListCode1.RemoveItem (ListCode1.ListIndex)
End Sub
Private Sub BtnMas2_Click()
If ListCode2.ListCount < 20 Then
    HC.CodigoDevuelto = ""
    SELECCIONADOR.TIPO = "Serv"
    SELECCIONADOR.inicia
    SELECCIONADOR.Show
    If HC.CodigoDevuelto <> "" Then ListCode2.AddItem (HC.CodigoDevuelto)
Else
    msg = MsgBox("Solo se pueden contar 20 codigos o servicios por campo y fila.", vbCritical, "Limite")
End If
End Sub
Private Sub BtnMenos2_Click()
If ListCode2.ListIndex <> -1 Then ListCode2.RemoveItem (ListCode2.ListIndex)
End Sub
Private Sub BtnMas3_Click()
If ListCode3.ListCount < 20 Then
    HC.CodigoDevuelto = ""
    SELECCIONADOR.TIPO = "Serv"
    SELECCIONADOR.inicia
    SELECCIONADOR.Show
    If HC.CodigoDevuelto <> "" Then ListCode3.AddItem (HC.CodigoDevuelto)
Else
    msg = MsgBox("Solo se pueden contar 20 codigos o servicios por campo y fila.", vbCritical, "Limite")
End If
End Sub
Private Sub BtnMenos3_Click()
If ListCode3.ListIndex <> -1 Then ListCode3.RemoveItem (ListCode3.ListIndex)
End Sub
Private Sub BtnSelCodeNec_Click()
HC.CodigoDevuelto = ""
SELECCIONADOR.TIPO = "Serv"
SELECCIONADOR.inicia
SELECCIONADOR.Show
If HC.CodigoDevuelto <> "" Then CodeNec = HC.CodigoDevuelto
End Sub

Private Sub ColorOP_Click()
ThisWorkbook.COLORSEL = ""
FORMCOLORPICKER.Show
If ThisWorkbook.COLORSEL <> "" Then EventoOP.BackColor = ThisWorkbook.COLORSEL
End Sub

Private Sub OptDistri_Change()
If OptDistri = True Then
    Necesidad.Enabled = False
    Recuento.Enabled = False
    Operacion.Enabled = False
    Plan.Enabled = False
    Distribucion.Enabled = True
End If
End Sub

Private Sub OptNecesidad_Change()
If OptNecesidad = True Then
    Necesidad.Enabled = True
    Recuento.Enabled = False
    Operacion.Enabled = False
    Plan.Enabled = False
    Distribucion.Enabled = False
End If
End Sub
Private Sub OptRecuento_Change()
If OptRecuento = True Then
    Necesidad.Enabled = False
    Recuento.Enabled = True
    Operacion.Enabled = False
    Plan.Enabled = False
    Distribucion.Enabled = False
End If
End Sub
Private Sub OptOP_Click()
If OptOP = True Then
    Necesidad.Enabled = False
    Recuento.Enabled = False
    Operacion.Enabled = True
    Plan.Enabled = False
    Distribucion.Enabled = False
End If
End Sub
Private Sub Optplan_Click()
If OptPlan = True Then
    Necesidad.Enabled = False
    Recuento.Enabled = False
    Operacion.Enabled = False
    Plan.Enabled = True
    Distribucion.Enabled = False
End If
End Sub

Private Sub UserForm_Initialize()
If ActiveCell.Row >= 414 Then
    Desfase = -51
Else
    Desfase = 360 + HC.BarraEstrategia.Value
End If
fila = ActiveCell.Row + Desfase
ListDiv.AddItem "1:1"
ListDiv.AddItem " /2"
ListDiv.AddItem " /3"
ListDiv.AddItem " /4"
If HCON.Range("bk2") > 1 Then ListArea.List = HCON.Range("bk4:bk" & 4 + HCON.Range("bk2") - 1).Value
If HC.Range("CJ" & fila) = "CI" Or HC.Range("CJ" & fila) = "NI" Then CheckImprimir = True
ACTUALIZA
End Sub
Private Sub ACTUALIZA()
Nombre.Value = HC.Range("ci" & fila)
If Nombre <> "" Then
    Nombre.BackColor = HC.Range("ci" & fila).Interior.Color
    Nombre.ForeColor = HC.Range("ci" & fila).Font.Color
End If
ListDiv.ListIndex = Val(HC.Range("cv" & fila))
If HCON.Range("bk2") > 1 Then
    If HC.Range("cu" & fila) = "" Then
        ListArea.ListIndex = 0
    Else
        ListArea = HC.Range("cu" & fila)
    End If
End If
Code1 = HC.Range("ck" & fila)
If HC.Range("CJ" & fila) = "C" Or HC.Range("CJ" & fila) = "CI" Then
    Code2 = HC.Range("cl" & fila)
    Code3 = HC.Range("cm" & fila)
    Recuento.Enabled = True
    OptRecuento = True
    For c = 1 To Len(Code1)
        If Mid(Code1, c, 1) = "#" Then
            ListCode1.AddItem (Mid(Code1, c + 1, InStr(c + 1, Code1, "|") - c - 1))
        End If
    Next
    For c = 1 To Len(Code2)
        If Mid(Code2, c, 1) = "#" Then
            ListCode2.AddItem (Mid(Code2, c + 1, InStr(c + 1, Code2, "|") - c - 1))
        End If
    Next
    For c = 1 To Len(Code3)
        If Mid(Code3, c, 1) = "#" Then
            ListCode3.AddItem (Mid(Code3, c + 1, InStr(c + 1, Code3, "|") - c - 1))
        End If
    Next
    MinCode1 = HC.Range("cn" & fila)
    MinCode2 = HC.Range("co" & fila)
    MinCode3 = HC.Range("cp" & fila)
    MaxCode1 = HC.Range("cq" & fila)
    MaxCode2 = HC.Range("cr" & fila)
    MaxCode3 = HC.Range("cs" & fila)
ElseIf HC.Range("CJ" & fila) = "N" Or HC.Range("CJ" & fila) = "NI" Then
    Necesidad.Enabled = True
    OptNecesidad = True
    If Code1 <> "" Then CodeNec.Value = Mid(Code1, 2, 10)
    MinimoDefecto = HC.Range("cn" & fila)
    LimiteMaximo = HC.Range("cq" & fila)
    AlertaMinimo = HC.Range("ct" & fila)
ElseIf HC.Range("cj" & fila) = "O" Or HC.Range("cj" & fila) = "OI" Then
    Operacion.Enabled = True
    OptOP = True
    EventoOP = HC.Range("ck" & fila)
    ComentarioOP = HC.Range("cl" & fila)
    EventoOP.BackColor = HC.Range("cm" & fila)
ElseIf HC.Range("cj" & fila) = "P" Or HC.Range("cj" & fila) = "PI" Then
    Plan.Enabled = True
    OptPlan = True
    MinimoDefectoP = HC.Range("cn" & fila)
    MaximoDefectoP = HC.Range("cq" & fila)
    Separador = HC.Range("ck" & fila)
ElseIf HC.Range("cj" & fila) = "D" Or HC.Range("cj" & fila) = "DI" Then
    Distribucion.Enabled = True
    OptDistri = True
    CodeObj = HC.Range("ck" & fila)
    CodeMuestra = HC.Range("cl" & fila)
    For c = 1 To Len(CodeObj)
        If Mid(CodeObj, c, 1) = "#" Then
            ListObjetivo.AddItem (Mid(CodeObj, c + 1, InStr(c + 1, CodeObj, "|") - c - 1))
        End If
    Next
    For c = 1 To Len(CodeMuestra)
        If Mid(CodeMuestra, c, 1) = "#" Then
            ListMuestra.AddItem (Mid(CodeMuestra, c + 1, InStr(c + 1, CodeMuestra, "|") - c - 1))
        End If
    Next
End If
End Sub
Private Sub BtnAceptar_Click()
Application.EnableEvents = False
If Nombre = "" Then
    msg = MsgBox("No se ha definido un nombre para esta estrategia", vbCritical, "Faltan datos")
    GoTo NoCorrecto
End If
If (IsNumeric(MinCode1) = False And MinCode1 <> "") Or (IsNumeric(MinCode2) = False And MinCode2 <> "") Or (IsNumeric(MinCode3) = False And MinCode3 <> "") Or (IsNumeric(MaxCode1) = False And MaxCode1 <> "") Or (IsNumeric(MaxCode2) = False And MaxCode2 <> "") Or (IsNumeric(MaxCode3) = False And MaxCode3 <> "") Then
    msg = MsgBox("Algun dato numerico no es correcto", vbCritical, "Error del usuario")
    GoTo NoCorrecto
End If
If (IsNumeric(LimiteMaximo) = False And LimiteMaximo <> "") Or (IsNumeric(MinimoDefecto) = False And MinimoDefecto <> "") Then
    msg = MsgBox("Algun dato numerico no es correcto", vbCritical, "Error del usuario")
    GoTo NoCorrecto
End If
If OptPlan = True And Len(Separador) = 0 Or Len(Separador) > 1 Then
    msg = MsgBox("El separador puede ser un caracter (espacio), /, - etc..", vbCritical, "Error del usuario")
    GoTo NoCorrecto
End If
HC.Range("CI" & fila & ":cv" & fila).ClearContents
HC.Range("ci" & fila) = Nombre
HC.Range("ci" & fila).Interior.Color = Nombre.BackColor
HC.Range("ci" & fila).Font.Color = Nombre.ForeColor
HC.Range("cv" & fila) = ListDiv.ListIndex
If ListArea = "TODAS" Or ListArea = "" Then
    HC.Range("cu" & fila) = ""
Else
    HC.Range("cu" & fila) = ListArea
End If
If OptRecuento = True Then
    If CheckImprimir = True Then
        HC.Range("CJ" & fila) = "CI"
    Else
        HC.Range("CJ" & fila) = "C"
    End If
    For c = 0 To ListCode1.ListCount - 1
        Code1 = Code1 & "#" & ListCode1.List(c) & "|"
    Next
    For c = 0 To ListCode2.ListCount - 1
        Code2 = Code2 & "#" & ListCode2.List(c) & "|"
    Next
    For c = 0 To ListCode3.ListCount - 1
        Code3 = Code3 & "#" & ListCode3.List(c) & "|"
    Next
    HC.Range("ck" & fila) = Code1
    HC.Range("cl" & fila) = Code2
    HC.Range("cm" & fila) = Code3
    HC.Range("cn" & fila) = MinCode1
    HC.Range("co" & fila) = MinCode2
    HC.Range("cp" & fila) = MinCode3
    HC.Range("cq" & fila) = MaxCode1
    HC.Range("cr" & fila) = MaxCode2
    HC.Range("cs" & fila) = MaxCode3
    
ElseIf OptNecesidad = True Then
    If CodeNec = "" Then GoTo NoCorrecto
    HC.Range("ck" & fila) = "@" & CodeNec
    If CheckImprimir = True Then
        HC.Range("CJ" & fila) = "NI"
    Else
        HC.Range("CJ" & fila) = "N"
    End If
    If MinimoDefecto <= 0 Then HC.Range("cn" & fila) = "" Else HC.Range("cn" & fila) = MinimoDefecto
    If LimiteMaximo <= 0 Then HC.Range("cq" & fila) = "" Else HC.Range("cq" & fila) = LimiteMaximo
    HC.Range("ct" & fila) = AlertaMinimo
ElseIf OptOP = True Then
    If CheckImprimir = True Then
        HC.Range("CJ" & fila) = "OI"
    Else
        HC.Range("CJ" & fila) = "O"
    End If
    HC.Range("ck" & fila) = EventoOP
    HC.Range("cl" & fila) = ComentarioOP
    HC.Range("cm" & fila) = EventoOP.BackColor
ElseIf OptPlan = True Then
    If CheckImprimir = True Then
        HC.Range("CJ" & fila) = "PI"
    Else
        HC.Range("CJ" & fila) = "P"
    End If
    If IsNumeric(MinimoDefectoP) = True Then HC.Range("cn" & fila) = MinimoDefectoP Else HC.Range("cn" & fila) = 0
    If IsNumeric(MaximoDefectoP) = True Then HC.Range("cq" & fila) = MaximoDefectoP Else HC.Range("cq" & fila) = 0
    HC.Range("ck" & fila) = Separador
ElseIf OptDistri = True Then
    If CheckImprimir = True Then
        HC.Range("CJ" & fila) = "DI"
    Else
        HC.Range("CJ" & fila) = "D"
    End If
    For c = 0 To ListObjetivo.ListCount - 1
        CodeObj = CodeObj & "#" & ListObjetivo.List(c) & "|"
    Next
    For c = 0 To ListMuestra.ListCount - 1
        CodeMuestra = CodeMuestra & "#" & ListMuestra.List(c) & "|"
    Next
    HC.Range("ck" & fila) = CodeObj
    HC.Range("cl" & fila) = CodeMuestra
End If
If ListArea <> "TODAS" Then msg = MsgBox("Los calculos que se realizan para calcular un area ralentizaran considerablemente la aplicacion" & vbCrLf & "Una solucion en caso grave de rendimiento puede ser crear diferentes codigos de servicio para cada area.", vbInformation, "Rendimiento")
Unload Me
Application.ScreenUpdating = False
HC.VerEstrategias
Application.ScreenUpdating = True
NoCorrecto:
Application.EnableEvents = True
End Sub
Private Sub BtnObjMas_Click()
If ListObjetivo.ListCount < 20 Then
    HC.CodigoDevuelto = ""
    SELECCIONADOR.TIPO = "Serv"
    SELECCIONADOR.inicia
    SELECCIONADOR.Show
    If HC.CodigoDevuelto <> "" Then ListObjetivo.AddItem (HC.CodigoDevuelto)
Else
    msg = MsgBox("Solo se pueden contar 20 codigos o servicios por campo y estrategia.", vbCritical, "Limite")
End If
End Sub
Private Sub BtnMuestraMas_Click()
If ListMuestra.ListCount < 20 Then
    HC.CodigoDevuelto = ""
    SELECCIONADOR.TIPO = "Serv"
    SELECCIONADOR.inicia
    SELECCIONADOR.Show
    If HC.CodigoDevuelto <> "" Then ListMuestra.AddItem (HC.CodigoDevuelto)
Else
    msg = MsgBox("Solo se pueden contar 20 codigos o servicios por campo y estrategia.", vbCritical, "Limite")
End If
End Sub
Private Sub BtnMuestraMenos_Click()
If ListMuestra.ListIndex <> -1 Then ListMuestra.RemoveItem (ListMuestra.ListIndex)
End Sub
Private Sub BtnObjMenos_Click()
If ListObjetivo.ListIndex <> -1 Then ListObjetivo.RemoveItem (ListObjetivo.ListIndex)
End Sub
Private Sub BtnLimpiar_Click()
msg = MsgBox("Eliminar esta estrategia?", vbOKCancel, "Limpiar")
If msg = 1 Then
    HC.Range("ci" & fila & ":ee" & fila).ClearContents
    HC.Range("ci" & fila).Interior.Color = HC.Range("ci387").Interior.Color
    HC.Range("ci" & fila).Font.Color = HC.Range("ci387").Font.Color
    Unload Me
    HC.VerEstrategias
End If
End Sub




Attribute VB_Name = "MENUIMPORTAR"
Attribute VB_Base = "0{2EA82920-6DE2-4730-A20C-20DE2435E6BE}{31CBFE4A-21E1-4DC8-A6F9-E48FF4534551}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Dim origen As Workbook

Private Sub CheckRecover_Click()
If CheckRecover = True Then
    msg = MsgBox("Usa el modo emergencia si tienes errores al abrir el archivo anterior por estar corrupto. Si te sale una ventana de informe de errores puesdes cerrarla y seguir el proceso con normalidad.", vbInformation, "Modo emergencia")
End If
End Sub

Private Sub ComboAnual_Change()
actualizafechas
End Sub
Private Sub ComboMensual_Change()
actualizafechas
End Sub
Private Sub NumMeses_Change()
actualizafechas
End Sub
Private Sub UserForm_Initialize()
Set origen = Nothing
ComboAnual.List = HCON.Range("bb4:bb13").Value
ComboMensual.List = HCON.Range("ba4:ba15").Value
End Sub
Private Sub BtnSelArchivo_Click()
If Not origen Is Nothing Then
    On Error Resume Next
    Application.ScreenUpdating = False
    Application.EnableEvents = False
    origen.Saved = True
    origen.Close savechanges:=False
    ArchivoSel = ""
    BtnAceptar.Enabled = False
    Application.EnableEvents = True
    Application.ScreenUpdating = True
End If
 Application.DisplayAlerts = False
With Application.FileDialog(msoFileDialogOpen)
    .AllowMultiSelect = False
    .Filters.Clear
    .Filters.Add "CUADRANTES", "*.XLS,*XLSB, *XLSviejo*", 1
    .Filters.Add "CUADRANTE OG.11-14", "*.XLS", 2
    .Filters.Add "Copia de Seguridad Cuadrante", "*.XLSviejo*", 3
    .Filters.Add "CUADRANTE > 2003", "*.xlsb", 4
    .Title = "Seleccion de CUADRANTE anterior"
    If .Show = -1 Then
        If IsFileOpen(.SelectedItems(1)) Then
            msg = MsgBox("El Cuadrante a importar debe estar cerrado", vbCritical, "Cierra elcuadrante anterior")
            GoTo adios
        End If
        nombrenuevo = .SelectedItems(1)
        
        If Dir(nombrenuevo) = ThisWorkbook.Name Then
            msg = MsgBox("El Cuadrante a importar no puede tener el mismo nombre que el actual. Renombra el cuadrante anterior y vuelve a intentarlo.", vbCritical, "CONFLICTO DE NOMBRE")
            GoTo adios
        End If
        On Error GoTo fallo
        Application.EnableEvents = False
        Application.ScreenUpdating = False
        If CheckRecover = True Then
            Set origen = Workbooks.Open(filename:=.SelectedItems(1), ReadOnly:=True, corruptload:=xlExtractData)
        Else
            Set origen = Workbooks.Open(filename:=.SelectedItems(1), ReadOnly:=True)
        End If
        'IMPORTAR DESDE v.507 o inferior
        If origen.Worksheets("c").Range("U1") = "idelapaz@guardiacivil.es" Then
            origen.Saved = True
            origen.Close savechanges:=False
            ArchivoSel.Value = ""
            msg = MsgBox("Se ha detectado un CUADRANTE OG.11/14. v.507 o inferior. YA NO SE PUEDE ACTUALIZAR DESDE ESTA VERSION TAN ANTIGUA. DESCARGATE UNA VERSION ANTERIOR A LA 17.8.1", vbCritical, "ACTUALIZAR")
        'IMPORTAR DESDE v.16.11
        ElseIf origen.Worksheets("c").Range("AA1") = "idelapaz@guardiacivil.es" Or origen.Worksheets("c").Range("AH1") = "idelapaz@guardiacivil.es" Then
            Windows(origen.Name).Visible = False
            ArchivoSel = origen.Path & "\" & origen.Name
            LabelVersion.Caption = "Version encontrada: " & origen.Sheets("c").Range("k1")
            'BtnSelArchivo.Enabled = False
            Version = origen.Sheets("c").Range("k1")
            'Ajustar Version
            If Version = "v.18.9.1" Then Version = "v.18.09.1"
            If Version = "v.18.8.1" Then Version = "v.18.08.1"
            If Version = "v.18.1.1" Then Version = "v.18.01.1"
            
            
            If Version < "v.18.11.1" Then
                CheckValidacion.Enabled = False
                CheckValidacion.BackColor = RGB(255, 0, 0)
            End If
            If Version < "v.18.10.1" Then
                CheckFavoritos.Enabled = False
                CheckFavoritos.BackColor = RGB(255, 0, 0)
            End If
            If Version < "v.18.09.1" Then
                ChkEstrategias.Enabled = False
                ChkEstrategias.BackColor = RGB(255, 0, 0)
            End If
            If Version < "v.19.00.1" Then
                ChkDiasNombrar.Enabled = False
                ChkDiasNombrar.BackColor = RGB(255, 0, 0)
                ChkPlantillas.Enabled = False
                ChkPlantillas.BackColor = RGB(255, 0, 0)
                ChkPerfilesAutoPla.Enabled = False
                ChkPerfilesAutoPla.BackColor = RGB(255, 0, 0)
                CheckListas.Enabled = False
                CheckListas.BackColor = RGB(255, 0, 0)
            End If
            If Version < "v.18.01.1" Then
                ChkColores.Enabled = False
                ChkColores.BackColor = RGB(255, 0, 0)
                ChkTurnos.Enabled = False
                ChkTurnos.BackColor = RGB(255, 0, 0)
            End If
            If Version < "v.19.09.2" Then
                ChkPlantillas.Enabled = False
                ChkPlantillas.BackColor = RGB(255, 0, 0)
            End If
            BtnAceptar.Enabled = True
        Else
fallo:
            On Error GoTo 0
            On Error GoTo adios
            origen.Saved = True
            origen.Close savechanges:=False
            ArchivoSel.Value = ""
            msg = MsgBox("El archivo seleccionado no se trata de un Cuadrante OG.11-14 valido.", vbCritical, "Archivo no valido")
            BtnAceptar.Enabled = False
adios:
        End If
    End If
End With
Application.ScreenUpdating = True
Application.EnableEvents = True
End Sub
Private Sub UserForm_QueryClose(Cancel As Integer, CloseMode As Integer)
On Error Resume Next
Application.ScreenUpdating = False
Application.EnableEvents = False
origen.Saved = True
origen.Close savechanges:=False
Application.EnableEvents = True
Application.ScreenUpdating = True
End Sub
Private Sub BtnAceptar_Click()
Application.Cursor = xlWait
If ChkServicios = False And ChkCometidos = False And ChkUnidad = False And ChkFestivos = False And ChkTurnos = False _
And ChkLugares = False And ChkIndicativos = False And ChkDiasNombrar = False And ChkPlantillas = False And _
ChkPerfilesAutoPla = False And ChkConfiguraciones = False And ChkColores = False And ChkEstrategias = False And _
ChkMaterial = False And CheckFavoritos = False And ComboAnual.ListIndex = -1 And ComboMensual.ListIndex = -1 And ChkTodos = False Then
    msg = MsgBox("Selecciona los datos que quieras importar.", vbCritical, "Nada para importar")
Else
    HC.Range("bm1") = "IMPORTADO"
    RunImportar
End If
Application.Cursor = xlDefault
End Sub
Private Sub RunImportar()
If Application.Calculation = xlCalculationAutomatic Then Application.Calculation = xlCalculationManual
Application.EnableEvents = False
If ArchivoSel <> "" Then
    If IsNumeric(NumMeses) = True And ComboAnual.ListIndex <> -1 And ComboMensual.ListIndex <> -1 Then
        If HCON.Range("bb" & 4 + ComboAnual.ListIndex + Int((NumMeses - 1 + ComboMensual.ListIndex) / 12)) = "" Then
            msg = MsgBox("Se ha superado el numero de meses que se pueden importar", vbCritical, "...")
            GoTo fin
        End If
    End If
    If ChkTodos = True Then
        msg = MsgBox("TODOS LOS DATOS DE ESTE ARCHIVO SERAN SUSTITUIDOS POR LOS DATOS DEL ARCHIVO SELECCIONADO", 49, "ADVERTENCIA IMPORTANTE")
        If msg = 1 Then
            ChkServicios = True
            ChkCometidos = True
            ChkUnidad = True
            ChkFestivos = True
            ChkTurnos = True
            ChkLugares = True
            ChkIndicativos = True
            ChkMaterial = True
            ChkDiasNombrar = True
            ChkPlantillas = True
            ChkPerfilesAutoPla = True
            ChkConfiguraciones = True
            ChkColores = True
            CheckValidacion = True
            ChkEstrategias = True
            CheckFavoritos = True
            CheckListas = True
            ComboAnual.ListIndex = 0
            ComboMensual.ListIndex = 0
            NumMeses = 120
        Else
            GoTo fin
        End If
    End If
    Version = origen.Sheets("c").Range("k1")
    'Ajustar Version
    If Version = "v.18.9.1" Then Version = "v.18.09.1"
    If Version = "v.18.8.1" Then Version = "v.18.08.1"
    If Version = "v.18.1.1" Then Version = "v.18.01.1"
    LabelVersion.Caption = "TRABAJANDO, espera..."
    '--------IMPORTANDO------------------------
    On Error GoTo fallo
    Application.ScreenUpdating = False
    HC.GUARDARCUADRANTEMES
    '----DESPROTEGER PROTEGER HOJA - A|fffd|ADIR PASSWORDS
    origen.Sheets("CON").Unprotect Password:=HC.Range("ba12")
    origen.Sheets("BDC").Unprotect Password:=HC.Range("ba12")
    origen.Sheets("BDN").Unprotect Password:=HC.Range("ba12")
    origen.Sheets("C").Unprotect Password:=HC.Range("ba12")
    '----PREPARANDO HOJAS------------------------
    HCON.Range("A5:A204").EntireRow.Hidden = False
    origen.Sheets("CON").Range("A5:A204").EntireRow.Hidden = False
    '----OBLIGADO-----(SEGURIDAD)
    HC.Range("Be12") = origen.Sheets("C").Range("be12") ' Copia Paswword del otro libro
    HCON.Range("ag4:al14").Value = origen.Sheets("CON").Range("ag4:al14").Value ' Usuarios
    If HCON.Range("ah4") = "" Then
        HCON.Range("ag4:ag14").Value = HCON.Range("am4:am14").Value
        HCON.Range("ah4:ah14").Value = HCON.Range("am4:am14").Value
    End If
    If HCON.Range("ah5") <> "" Or Application.WorksheetFunction.CountBlank(HCON.Range("ai4:ak4")) < 3 Then
        
    Else
        HCON.Range("ag4:ag14").Value = HCON.Range("ah4:ah14").Value
    End If
    '---APARTADOS------
    despro HC
    If ChkUnidad = True Then
        HCON.Range("D5:E5").Value = origen.Sheets("CON").Range("D5:E5").Value ' UNIDAD
        HCON.Range("D8:E16").Value = origen.Sheets("CON").Range("D8:E16").Value ' AREAS
        HCON.Range("e20").Value = origen.Sheets("CON").Range("e20").Value ' Complemento de destino
    End If
    If ChkFestivos = True Then
        HCON.Range("H5:H144").Value = origen.Sheets("CON").Range("H5:H144").Value  ' FESTIVOS
        HCON.Range("H147:H226").Value = origen.Sheets("CON").Range("H147:H226").Value ' FESTIVOS turnos de semana santa y navidad
    End If
    If ChkServicios = True Then
        HCON.Range("j5:p204").Value = origen.Sheets("CON").Range("j5:p204").Value ' DEFINICIONES Servicios
        'actualiza codigo SIGO
        For s = 5 To 204
            If HCON.Range("l" & s) <> "" Then
                Modalidad = Application.Match(HCON.Range("l" & s), HCON.Range("bl4:bl20"), 0)
                If IsError(Modalidad) = False Then
                    If Modalidad = 1 Or Modalidad = 2 Or Modalidad = 3 Then
                    
                    Else
                        HCON.Range("j" & s).Value = HCON.Range("bn" & Modalidad + 3)
                    End If
                End If
            End If
        Next
        'Actualiza las definiciones
        HCON.Calculate
        HCON.Range("K309:O509").AdvancedFilter Action:=xlFilterCopy, criteriarange:=HCON.Range("K511:m512"), copytorange:=HCON.Range("K514:O714")
        HCON.Range("K309:O509").AdvancedFilter Action:=xlFilterCopy, criteriarange:=HCON.Range("K717:m718"), copytorange:=HCON.Range("K721:O921")
        HCON.Range("K309:O509").AdvancedFilter Action:=xlFilterCopy, criteriarange:=HCON.Range("K924:m926"), copytorange:=HCON.Range("K928:O1128")
        HCON.Range("K309:O509").AdvancedFilter Action:=xlFilterCopy, criteriarange:=HCON.Range("K1131:K1132"), copytorange:=HCON.Range("K1135:O1335")
        HCON.Calculate
    End If
    If ChkCometidos = True Then
        If Version < "v.19.10.1" Then 'Para version anterior
            HBDCAT.Range("a10:d39").Value = origen.Sheets("CON").Range("q5:t34").Value ' COMETIDOS PRINCIPALES
            HBDCAT.Range("i10:j159").Value = origen.Sheets("CON").Range("q36:r185").Value ' COMETIDOS SECUNDARIOS
            HBDCAT.Range("n10:p39").Value = origen.Sheets("CON").Range("q187:s236").Value ' EVENTOS >19.7.1
        Else ' Actual
            HBDCAT.Range("a10:d59").Value = origen.Sheets("BDCAT").Range("a10:d59").Value ' COMETIDOS PRINCIPALES
            HBDCAT.Range("i10:j159").Value = origen.Sheets("BDCAT").Range("i10:j159").Value ' COMETIDOS SECUNDARIOS
            HBDCAT.Range("n10:p59").Value = origen.Sheets("BDCAT").Range("n10:p59").Value ' EVENTOS
        End If
    End If
    If ChkLugares = True Then
        If Version < "v.19.10.1" Then 'Para version anterior
            HBDCAT.Range("x10:x37").Value = origen.Sheets("CON").Range("U5:U32").Value  ' LUGARES principales
            HBDCAT.Range("ab10:ab159").Value = origen.Sheets("CON").Range("U36:U185").Value  ' LUGARES secundarios
        Else ' Actual
            HBDCAT.Range("x10:x59").Value = origen.Sheets("BDCAT").Range("x10:x59").Value  ' LUGARES principales
            HBDCAT.Range("ab10:ab209").Value = origen.Sheets("BDCAT").Range("ab10:ab209").Value  ' LUGARES secundarios
        End If
    End If
    If ChkIndicativos = True Then
        If Version < "v.19.09.2" Then
            HCON.Range("X5:x32").Value = origen.Sheets("CON").Range("X5:x32").Value ' indicativo
            HCON.Range("y5:y32").Value = origen.Sheets("CON").Range("z5:z32").Value ' Seneka
        Else
            HCON.Range("X5:z32").Value = origen.Sheets("CON").Range("X5:z32").Value ' INDICATIVOS, SENEKA y VINCULO
        End If
    End If
    If ChkMaterial = True Then
        If Version < "v.19.09.2" Then
            HCON.Range("AB36:Ab63").Value = origen.Sheets("CON").Range("y5:y32").Value
            HCON.Range("Ac36:Ac63").Value = origen.Sheets("CON").Range("y5:y32").Value
        Else
            HCON.Range("AB36:AC63").Value = origen.Sheets("CON").Range("AB36:AC63").Value ' VEHICULOS (nombre y matricula)
        End If
        HCON.Range("AB5:AC32").Value = origen.Sheets("CON").Range("AB5:AB32").Value ' MATERIAL
    End If
    If CheckValidacion = True And CheckValidacion.Enabled = True Then '>=18.11
        HVAL.Range("a1:ct801").Value = origen.Sheets("VAL").Range("a1:ct801").Value
    End If
    If ChkDiasNombrar = True And ChkDiasNombrar.Enabled = True Then ' >18.10
        HBDN.Range("a1:bk65536").Value = origen.Sheets("bdn").Range("a1:bk65536").Value   ' DIAS NOMBRADOS
        If Version < "v.19.10.1" Then
            HBDCAT.Range("t10:t39").Value = origen.Sheets("CON").Range("q248:q277").Value 'Prevenciones favoritas
        Else
            HBDCAT.Range("t10:t59").Value = origen.Sheets("BDCAT").Range("t10:t59").Value 'Prevenciones favoritas
        End If
        If Version < "v.19.09.1" Then HBDN.Range("be:bf").Clear ' eventos anteriores
    End If
    If ChkPlantillas = True And ChkPlantillas.Enabled = True Then ' >19.09.1
        HBDP.Range("a1:ad5000").Value = origen.Sheets("BDP").Range("a1:ad5000").Value ' PLANTILLAS Presentaciones
    End If
    If ChkColores = True And ChkColores.Enabled = True Then ' > 18.1
        HCON.Range("cr5:cs204").Value = origen.Sheets("CON").Range("cr5:cs204").Value ' COLORES DE DEFINICIONES
    End If
    If ChkTurnos = True And ChkTurnos.Enabled = True Then ' > 18.1
        HCON.Range("AG307:CN312").Value = origen.Sheets("CON").Range("AG307:CN312").Value ' TURNOS
    End If
    If ChkPerfilesAutoPla = True And ChkPerfilesAutoPla.Enabled = True Then '>18.1
        HC.Range("BM362:BS408").Value = origen.Sheets("C").Range("BM362:BS408").Value ' PERFILES AUTOPLA
    End If
    If CheckFavoritos = True And CheckFavoritos = True Then
        origen.Sheets("C").Range("bc360:bc371").Copy Destination:=HC.Range("bc360:bc371") ' FAVORITOS
    End If
    If CheckValidacion = True And CheckValidacion.Enabled = True Then
        origen.Sheets("val").Cells.Copy Destination:=HVAL.Range("A1") ' VALIDACIONES
    End If
    If CheckListas = True And CheckListas.Enabled = True Then
        despro HLIS
        origen.Sheets("LIS").Cells.Copy Destination:=HLIS.Range("A1") ' LISTAS
        HLIS.ResetColumna
        If Version < "v.19.00.2" Then 'Borrar vistas
            HLIS.Range("a3:b11").ClearContents
        End If
    End If
    If ChkConfiguraciones = True Then
        HCON.Range("CW4:CW6").Value = origen.Sheets("CON").Range("CW4:CW6").Value ' copia seguridad
        HC.Range("BH1:BH2").Value = origen.Sheets("C").Range("BH1:BH2").Value '  Alertas descansos
        HC.Range("BG4:BH4").Value = origen.Sheets("C").Range("BG4:BH4").Value '  Alertas descansos
        HC.Range("BG1").Value = origen.Sheets("C").Range("BG1").Value '  Alineacion
        HC.Range("G317:G318").Value = origen.Sheets("C").Range("G317:G318").Value '  Colorear areas y mostrar filas
        HCON.Range("CX7").Value = origen.Sheets("CON").Range("CX7").Value ' Recordatorio cambios
        HC.Range("bu1").Value = origen.Sheets("C").Range("Bu1").Value 'Modo de enlace app
        HC.Range("bt2:bt6").Value = origen.Sheets("C").Range("Bt2:bt6").Value 'Configuracion de Correo electronico
        HC.Range("by7:ce7").Value = origen.Sheets("C").Range("By7:ce7").Value 'Configuracion correo personalizada
        HCON.Range("cn4:co100").Value = origen.Sheets("CON").Range("cn4:co100").Value 'destinatarios
        If origen.Sheets("c").Range("bo1") <> "" Then
            HC.Range("bo1:bo4").Value = origen.Sheets("C").Range("Bo1:bo4").Value ' Desviaciones minimas
        End If
        'Para versiones con robot planificacion
        If Version >= "v.19.10.1" Then
            HAG.Range("a454:b582").Value = origen.Sheets("AG").Range("a454:b582").Value ' Catalogo de servicios SIGO
            If origen.Sheets("AG").Range("a450") <> "" Then HAG.Range("a450").Value = origen.Sheets("AG").Range("a450").Value 'Catalogo servicios en uso
        End If
        HIC.Range("ay2").Value = origen.Sheets("IC").Range("AY2").Value
    End If
    pro HC
    '----Importar Cuadrantes ----
    If LabelCuantos <> "Sin cuadrantes" Then
        'Salvar Cuadrante en uso de Origen en  BDC de origen
        If origen.Sheets("C").FilterMode = True Then origen.Sheets("C").ShowAllData
        If origen.Sheets("C").Range("BA6") <> "" Then
            fila = origen.Sheets("C").Range("BA8").Value
            origen.Sheets("C").Range("M14:DF318").Copy ' cuadrante original
            origen.Sheets("BDC").Range("A" & fila & ":CT" & fila + 304).PasteSpecial Paste:=xlPasteAll ' copia cuadrante en bsd
            origen.Sheets("BDC").Range("A" & fila - 1).Value = origen.Sheets("C").Range("E3") 'marca el mes copiado
            origen.Sheets("C").Range("ci363:ee386").Copy Destination:=origen.Sheets("BDC").Range("a" & fila + 305) ' Guardar Estrategias
            'Guardar comentarios permanentes
            For f = 14 To 313
                Set Celdacom = origen.Sheets("C").Range("H" & f).Comment
                If Not Celdacom Is Nothing Then origen.Sheets("BDC").Range("cu" & f - 14 + fila).Value = origen.Sheets("C").Range("H" & f).Comment.Text
            Next
        End If
        Desde = (ComboAnual.ListIndex * 12 + ComboMensual.ListIndex) * 500 + 500
intento:
        If Val(NumMeses) = 0 Then Cuadrantes = 1 Else Cuadrantes = Val(NumMeses)
        For cuad = 1 To Cuadrantes
            On Error GoTo fallo4 ' En caso de estar en mal estado la base de datos
            CuadIni = Desde + (cuad * 500) - 500
            If origen.Sheets("BDC").Range("A" & CuadIni) <> "" Then
                HBDC.Range("A" & CuadIni & ":CU" & CuadIni + 305).ClearContents
                HBDC.Range("A" & CuadIni & ":CU" & CuadIni + 305).NumberFormat = ("@")
                HBDC.Range("A" & CuadIni & ":CU" & CuadIni + 305).Value = origen.Sheets("BDC").Range("A" & CuadIni & ":CU" & CuadIni + 305).Value
                'Para version < 18.10.1
                If Version < "v.18.11.1" Then
                    Dim come As Range
                    On Error Resume Next
                    For Each come In origen.Sheets("BDC").Range("A" & CuadIni & ":CT" & CuadIni + 305).Cells
                        If Not come.Comment Is Nothing Then
                            HBDC.Cells(come.Row, come.Column + 38) = HBDC.Cells(come.Row, come.Column + 38) & "@O#" & come.Comment.Text
                        End If
                    Next
                End If
                If ChkEstrategias = True And ChkEstrategias.Enabled = True Then
                    origen.Sheets("BDC").Range("A" & CuadIni + 306 & ":CT" & CuadIni + 329).Copy
                    HBDC.Range("A" & CuadIni + 306 & ":CT" & CuadIni + 329).PasteSpecial xlPasteAll
                End If
            End If
        Next
        If Version < "v.17.1.3.1" Then
            HBDC.Range("CQ:CQ").Cells.ClearContents ' BORRAR DATOS M/T/N ANTERIORES
            HBDC.Range("Cf:Cf").Cells.Replace what:="SC,40", replacement:="SC.40" ' Reemplazar regimenes
            With HBDC.Range("aj:ak").Cells
                .ClearContents
                .Locked = True
            End With
        End If
        HBDC.Range("cq:cq").NumberFormat = 0
        HC.Cambio_mes origen.Sheets("C").Range("ba6"), origen.Sheets("C").Range("ba7"), False, False
        GoTo Baseok
fallo4:
        On Error GoTo fallo
        msg = MsgBox("La base de datos del anterior cuadrante esta en mal estado. Se va intentar recuperar", 49, "Recuperacion")
        If msg = 1 Then
            origen.Sheets("BDC").Range("A500:CT65536").ClearFormats
            GoTo intento
        End If
Baseok:
        If Version >= "v.19.02.2" Then
            HCON.Range("aq4:as11").Value = origen.Sheets("CON").Range("aq4:as11").Value ' Importar caracteristicas
        Else
            HBDC.Range("Cf:Cf").Cells.Replace what:="Gral.", replacement:="General" ' Reemplazar regimenes
        End If
    Else
        HC.Refrescar 0
    End If
                    
    '---FINALIZAR IMPORTADO
    Application.EnableEvents = False
    origen.Saved = True
    origen.Close savechanges = False
    HC.Range("ba1") = "NO" ' Establece que ya esta usado
    If Version < "v.19.02.2" Then ' Version para recalcular todo
        RecalcularSI = 2
    End If
    HC.Activate
    msg = MsgBox("Se han traspasado los datos correctamente.", vbExclamation, "EXITO AL IMPORTAR DATOS")
    'If ChkConfiguraciones = True Then msg = MsgBox("En prevencion a una extraccion de datos no autorizada deberas seleccionar un administrador autorizado. Seleccionalo desde el boton de opciones", vbInformation, "ACTIVA EL USUARIO")
    If RAPIDAS.Visible = True Then RAPIDAS.Bloquea 0
    HC.Range("m14").Select
    ActiveWindow.ScrollRow = 1
    ActiveWindow.ScrollColumn = 1
    Application.CommandBars.ActiveMenuBar.Enabled = True
    Application.CommandBars.ActiveMenuBar.Enabled = False
    Application.Calculate
    GoTo fin
fallo:
    On Error Resume Next
    msg = MsgBox("NO SE PUEDE IMPORTAR DATOS DE ESTE ARCHIVO." & vbCrLf _
    & "COMPRUEBA QUE LA CONTRASE|fffd|A ES CORRECTA, QUE NO SE ENCUENTRE ABIERTO O QUE NO TENGA EL MISMO NOMBRE QUE EL ACTUAL.", vbCritical, "CUADRANTE OG.11/14")
    origen.Saved = True
    origen.Close savechanges:=False
fin:
    Unload Me
    If RecalcularSI = 1 Then
        msg = MsgBox("Debido a todos los cambios que se han hecho en esta aplicacion, es recomendable recalcular todos los datos existentes.", 65, "IMPORTAR")
        If msg = 1 Then HC.RECALCULARTODO
    End If
    If RecalcularSI = 2 Then
        msg = MsgBox("Debido a cambios que se han hecho en esta aplicacion, es OBLIGATORIO recalcular todos los datos existentes.", 64, "IMPORTAR")
        HC.RECALCULARTODO True
    End If
    Application.CutCopyMode = False
    Application.EnableEvents = True
    Application.Calculate
    Unload TRABAJANDO
    Application.ScreenUpdating = True
Else
    msg = MsgBox("Selecciona un archivo para continuar", vbCritical, "...")
End If
End Sub
Private Sub actualizafechas()
If ComboAnual.ListIndex <> -1 And ComboMensual.ListIndex <> -1 Then
    If IsNumeric(NumMeses) = True And NumMeses <> 0 And NumMeses <> 1 Then
        mes = HCON.Range("ba" & 4 + (ComboMensual.ListIndex + NumMeses - 1) Mod 12)
        ano = HCON.Range("bb" & 4 + ComboAnual.ListIndex + Int((NumMeses - 1 + ComboMensual.ListIndex) / 12))
        
        LabelCuantos.Caption = "De " & ComboMensual & " de " & ComboAnual & _
        vbCrLf & "a " & mes & " de " & ano
    Else
        LabelCuantos.Caption = ComboMensual & " de " & ComboAnual
    End If
Else
    LabelCuantos.Caption = "Sin cuadrantes"
End If
End Sub
Attribute VB_Name = "MENUIMPORTARSIGO"
Attribute VB_Base = "0{C02B9D39-BC2A-44C6-AC66-56C13C85D18E}{78AC1DCF-BD4D-4EA2-B872-28193BD976EB}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Private Sub Ayuda_Change()

End Sub

Private Sub UserForm_Initialize()
ListOpciones.AddItem ("DATOS DEL PERSONAL (SIGO)")
ListOpciones.AddItem ("ANTIGUEDAD DEL PERSONAL (SIGO)")
ListOpciones.AddItem ("DESCANSOS PENDIENTES (SIGO)")
ListOpciones.AddItem ("CREDITO DE VACACIONES (RRHH)")
ListOpciones.AddItem ("AUTORIZACIONES DE PERMISOS (RRHH)")
End Sub
Private Sub ListOpciones_Change()
If ListOpciones.ListIndex = 0 Then
    Ayuda.Text = "Recupera los datos de todo el personal de Unidad." & vbCrLf & vbCrLf & _
    "Datos obtenidos: Nombre, apellidos, empleo y TIP." & vbCrLf & vbCrLf & _
    "Descarga: SERVICIOS / Gestion / Personal / Descargar Excel"
ElseIf ListOpciones.ListIndex = 1 Then
    Ayuda.Text = "Recupera el orden de antiguedad." & vbCrLf & vbCrLf & _
    "Datos obtenidos: Numero de antiguedad en la Unidad. Para esto el archivo descargado debera mostrar todo el personal de la Unidad." & vbCrLf & vbCrLf & _
    "Descarga: SERVICIOS / Cuadrante de Planificacion / Descansos / Descargar"
ElseIf ListOpciones.ListIndex = 2 Then
    Ayuda.Text = "Recupera los datos relativos a los descansos por planificar." & vbCrLf & vbCrLf & _
    "Datos obtenidos: Descansos por dia festivo, singularizados y compensatorios." & vbCrLf & vbCrLf & _
    "Descarga: SERVICIOS / Cuadrante de Planificacion / Descansos / Descargar"
ElseIf ListOpciones.ListIndex = 3 Then
    Ayuda.Text = "Recupera el credito de vacaciones y asuntos particulares." & vbCrLf & vbCrLf & _
    "Datos obtenidos: Credito total y consumido de vacaciones y AP." & vbCrLf & vbCrLf & _
    "Crear: En el aplicativo de Recursos Humanos, visualiza el credito de todas las personas y selecciona con el raton toda la tabla. Pulsa Control + c para copiar y pegalo en un archivo de excel nuevo. Despues guarda el archivo."
ElseIf ListOpciones.ListIndex = 4 Then
    Ayuda.Text = "Recupera los dias de vacaciones y permisos." & vbCrLf & vbCrLf & _
    "Datos obtenidos: Se nombraran en el cuadrante todas las solicitudes autorizadas de vacaciones y permisos." & vbCrLf & vbCrLf & _
    "Descarga: En el aplicativo de Recursos Humanos / VACACIONES Y PERMISOS / AUTORIZACION DE SOLICITUDES / CONSULTA DE HISTORICOS / EXCEL." & vbCrLf & vbCrLf & _
    "(Puedes seleccionar todo un a|fffd|o completo)"
End If
End Sub
Private Sub BtnAceptar_Click()
Unload Me
If ListOpciones.ListIndex = 0 Then
    Unload Me
    If ActiveSheet.Name <> "ASI" Then HC.Asistente_Click
    ImportarSIGO
    Application.CommandBars.ActiveMenuBar.Enabled = True
    Application.CommandBars.ActiveMenuBar.Enabled = False
ElseIf ListOpciones.ListIndex = 1 Then
    Unload Me
    If ActiveSheet.Name <> "ASI" Then HC.Asistente_Click
    ImportarAntiguedadSIGO
    Application.CommandBars.ActiveMenuBar.Enabled = True
    Application.CommandBars.ActiveMenuBar.Enabled = False
ElseIf ListOpciones.ListIndex = 2 Then
    If ActiveSheet.Name <> "C" Then HASI.BtnVolver_Click
    ImportarDescansosSigo
    Application.CommandBars.ActiveMenuBar.Enabled = True
    Application.CommandBars.ActiveMenuBar.Enabled = False
ElseIf ListOpciones.ListIndex = 3 Then
    If ActiveSheet.Name <> "ASI" Then HC.Asistente_Click
    Importarvacaciones
    Application.CommandBars.ActiveMenuBar.Enabled = True
    Application.CommandBars.ActiveMenuBar.Enabled = False
ElseIf ListOpciones.ListIndex = 4 Then
    If ActiveSheet.Name <> "C" Then HASI.BtnVolver_Click
    ImportarDiasVacaciones
    Application.CommandBars.ActiveMenuBar.Enabled = True
    Application.CommandBars.ActiveMenuBar.Enabled = False
End If
End Sub
Attribute VB_Name = "MENUINFORMES"
Attribute VB_Base = "0{E0C5C28C-B3AB-4F4E-8912-F32A1921D113}{B208F854-8BA4-4377-8433-0FF3BED72770}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Private Sub BtnExtraccion_Click()
'On Error Resume Next
'Dim d()
tt = "#-----HERRAMIENTA TU_INFORME DE CUADRANTE OG.11/14------" & vbCrLf & "#--FECHA: " & HN.Range("G6").Text & vbCrLf & vbCrLf
For fila = HN.Range("al1") To HN.Range("al1") + 99
    filatexto = ""
    If HBDN.Range("j" & fila) <> "" Then
        ReDim d(13)
        For dato = 0 To 13
            Select Case HCON.Range("bv" & dato + 4)
                Case 1
                    d(dato) = HBDN.Range("c" & fila)
                Case 2
                    d(dato) = HN.Range("G6").Text
                Case 3
                    d(dato) = HBDN.Range("g" & fila).Text
                Case 4
                    d(dato) = HBDN.Range("h" & fila).Text
                Case 5
                    d(dato) = HBDN.Range("g" & fila).Text & "/" & HBDN.Range("h" & fila).Text
                Case 6
                    d(dato) = HBDN.Range("d" & fila).Text
                Case 7
                    d(dato) = HBDN.Range("e" & fila).Text
                Case 8
                    d(dato) = HBDN.Range("f" & fila).Text
                Case 9
                    d(dato) = personar(HBDN.Range("j" & fila).Text)
                Case 10
                    d(dato) = personar(HBDN.Range("k" & fila).Text)
                Case 11
                    d(dato) = personar(HBDN.Range("l" & fila).Text)
                Case 12
                    d(dato) = personar(HBDN.Range("m" & fila).Text)
                Case 13
                    d(dato) = DatosDeHc(HBDN.Range("j" & fila), HC.Range("cp1").Column)
                Case 14
                    d(dato) = DatosDeHc(HBDN.Range("k" & fila), HC.Range("cp1").Column)
                Case 15
                    d(dato) = DatosDeHc(HBDN.Range("l" & fila), HC.Range("cp1").Column)
                Case 16
                    d(dato) = DatosDeHc(HBDN.Range("m" & fila), HC.Range("cp1").Column)
                Case 17
                    d(dato) = DatosDeHc(HBDN.Range("j" & fila), HC.Range("cq1").Column)
                Case 18
                    d(dato) = DatosDeHc(HBDN.Range("k" & fila), HC.Range("cq1").Column)
                Case 19
                    d(dato) = HBDN.Range("bj" & fila).Text
                Case 20
                    d(dato) = HBDN.Range("bi" & fila)
            End Select
        Next
        For dato = 0 To 13
            If HCON.Range("bw" & dato + 4) = True And d(dato) <> "" Then
                If d(dato + 1) <> "" Then carac = HCON.Range("bx7") Else carac = ""
                filatexto = filatexto & d(dato) & carac & d(dato + 1)
                d(dato + 1) = ""
            ElseIf HCON.Range("bw" & dato + 4) = False Then
                filatexto = filatexto & d(dato) & vbTab
            End If
        Next
        tt = tt & filatexto
        If HCON.Range("bx9") = True Then
            For p = 0 To 5
                If HBDN.Cells(fila, 31 + 4 * p).Value <> "" Then
                    tt = tt & vbCrLf & Format(HBDN.Cells(fila, 31 + 4 * p), "hh:mm") & " / " & Format(HBDN.Cells(fila, 32 + 4 * p), "hh:mm") & vbTab & HBDN.Cells(fila, 33 + 4 * p)
                End If
            Next
        End If
        For sep = 1 To HCON.Range("bx5")
            tt = tt & vbCrLf
        Next
    End If
Next
CARPETA = ThisWorkbook.Path
Open CARPETA & "\TU INFORME.txt" For Output As #1
Print #1, tt
Close #1
If HCON.Range("bx11") = True Then
    Workbooks.OpenText filename:=CARPETA & "\TU INFORME.txt", DataType:=xlDelimited, Tab:=True, Space:=False, ConsecutiveDelimiter:=False
Else
    Abierto = Shell("C:\WINDOWS\NOTEPAD.EXE " & CARPETA & "\TU INFORME.txt", vbNormalFocus)
End If
Unload Me
End Sub
Private Function DatosDeHc(persona, col)
pers = Application.Match(personar(persona), HC.Range("do14:do313"), 0)
If IsError(pers) = False Then
    DatosDeHc = HC.Cells(pers + 13, col)
Else
    DatosDeHc = ""
End If
End Function
Private Function personar(Nombre)
If left(Nombre, 1) = "|fffd|" Then
    personar = Mid(Nombre, 2, 100)
Else
    personar = (Nombre)
End If
End Function
Private Sub BtnGenerar_Click()
    ag = Application.GetSaveAsFilename(InitialFileName:="Refundir " & Format(HN.Range("g6"), "dd-mm"), FileFilter:="Refundir (*.csv), *.csv")
    On Local Error Resume Next
    If ag <> "" And ag <> False Then
        If InStr(ag, ".csv") > 0 Then ext = "" Else ext = "csv"
        Application.ScreenUpdating = False
        Dim fileimportar As Variant
        Dim destino As Workbook
        Dim Listado As Worksheet
        Set destino = Workbooks.Add
        Set Listado = destino.Sheets(1)
        Listado.Range("a1:bg").NumberFormat = "@"
        Listado.Range("a1:bg100").Value = HBDN.Range("a" & HN.Range("al1") & ":bg" & HN.Range("al1") + 99).Value
        Listado.Range("a2:a100").Value = "R"
        Listado.Range("b1") = "REFUNDIR SERVICIO"
        destino.SaveAs filename:=ag & ext, FileFormat:=xlCSV
        Unload Me
        Application.ScreenUpdating = True
        destino.Close savechanges:=False
    End If
End Sub
Private Sub BtnGuiaNom_Click()
Unload Me
Application.ScreenUpdating = False
Application.EnableEvents = False
HN.GuiaNom
HIN.Activate
Application.ScreenUpdating = True
Application.EnableEvents = True
End Sub
Private Sub BtnTuInforme_Click()
MENUTUINFORME.Show
End Sub
Private Sub CommandButton1_Click()
If checkenvios = True Then
    Unload Me
    MENUAPPBRIEFING.Show
Else
    msg = MsgBox("No se ha configurado el metodo de envio correctamente para poder realizar envios.", vbCritical, "Configuracion de Salida")
End If
End Sub

Private Sub ICompleto_Click()
Unload Me
HID.Informar
#If VBA6 Then
        Application.ExecuteExcel4Macro ("show.toolbar(""ribbon"",1)")
#End If
HID.PrintPreview
#If VBA6 Then
        Application.ExecuteExcel4Macro ("show.toolbar(""ribbon"",0)")
#End If
End Sub
Private Sub IArchivo_Click()
ag = Application.GetSaveAsFilename(InitialFileName:="Informe diario " & Format(HN.Range("g6"), "dd-mm"), FileFilter:="Informe Diario (*.xls), *.xls")
On Local Error Resume Next
If ag <> "" And ag <> False Then
    If InStr(ag, ".xls") > 0 Then ext = "" Else ext = "xls"
        Unload Me
        HID.Informar
        Application.ScreenUpdating = False
        Dim fileimportar As Variant
        Dim destino As Workbook
        Dim Listado As Worksheet
        Set destino = Workbooks.Add
        Set Listado = destino.Sheets(1)
        HID.Range("a1:m2000").Copy
        Listado.Range("a1").PasteSpecial xlPasteAll
        Listado.Range("a1").PasteSpecial xlPasteColumnWidths
        destino.SaveAs filename:=ag & ext, FileFormat:=xlWorkbookNormal
        destino.Save
        destino.Close savechanges:=False
        Application.ScreenUpdating = True
        Unload Me
End If
End Sub
Attribute VB_Name = "MENULEVEL"
Attribute VB_Base = "0{F1A024A3-8868-4889-B8A2-4296D9ACD532}{645A7F79-E1DA-4F30-BFA4-B55C56F76C6F}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Private Sub UserForm_Initialize()
HN.LevelSel = ""
End Sub
Private Sub BtnArea_Click()
HN.LevelSel = 1
Unload Me
End Sub
Private Sub BtnGrupo_Click()
HN.LevelSel = 2
Unload Me
End Sub
Private Sub BtnServicio_Click()
HN.LevelSel = 3
Unload Me
End Sub
Attribute VB_Name = "MENUOPCIONES"
Attribute VB_Base = "0{D33756A8-1FCC-45CC-AA18-5D7C93C598A1}{A95A8814-F9D8-403A-B6AC-F4C456DF14AC}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Private Sub BtnActualizarSiguientes_Click()
msg = MsgBox("A veces creamos cuadrantes de meses que aun no estamos usando y que tiene datos del personal no actualizados." & vbCrLf & "Con esta herramienta los datos del personal de cuadrantes posteriores seran actualizados con los datos del mes actualmente seleccionado." & vbcrl & vbCrLf & "ATENCION!! Los datos actuales se COPIAR|fffd|N en los cuadrantes posteriores. No afectando a la planificaci|fffd|n", vbYesNo, "Copiar a los siguientes Meses")
If msg = 6 Then
    Application.Cursor = xlWait
    registros = 0
    meses = 0
    MesActual = HC.Range("ba5")
    For mes = (MesActual + 1) * 500 To 65500 Step 500
        If HBDC.Range("a" & mes) <> "" Then
            meses = meses + 1
            For p = 14 To 313
                If HC.Range("cp" & p) <> "" Then
                    esta = Application.Match(HC.Range("cp" & p), HBDC.Range("cd" & mes + 1 & ":cd" & mes + 301), 0)
                    If IsError(esta) = True Then
                        For esta = 1 To 301
                            If HBDC.Range("ca" & esta + mes) = "" Then Exit For
                        Next
                    End If
                    registros = registros + 1
                    HBDC.Range("bv" & esta + mes & ":ci" & esta + mes).Value = HC.Range("ch" & p & ":cu" & p).Value
                    HBDC.Range("cq" & esta + mes).Value = HC.Range("dc" & p).Value
                    HBDC.Range("cs" & esta + mes).Value = HC.Range("de" & p).Value
                End If
            Next
        End If
    Next
    Application.Cursor = xlDefault
    msg = MsgBox("Se han actualizado " & registros & " registros de persponas en " & meses & " cuadrantes de meses siguientes.", vbInformation, "Datos Actualizados")
End If

End Sub

Private Sub BtnbORRARMes_Click()
msg = MsgBox("ATENCION!! Quieres borrar todo cuadrante de " & HC.Range("e3") & "?", 17, "ELIMINAR CUADRANTE DE " & HC.Range("e3"))
If msg = 1 Then
    Unload Me
    Application.EnableEvents = False
    Application.ScreenUpdating = False
    '-------BORRAR DATOS BASE DE DATOS------------------------------
    HBDC.Range("A" & HC.Range("ba8") - 1 & ":a" & HC.Range("ba8") + 400).EntireRow.Clear  'no elimina, solo borra
    'Borrar Validacion de cuadrante
    If HC.Range("ay1") <> "NO" Then
        HVAL.Range("a" & HC.Range("ay5") - 1 & ":ct" & HC.Range("ay6")).ClearContents
    End If
    'Si hay uno anterior ir si no, nuevo
    If HBDC.Range("A" & HC.Range("BA8") - 501) <> "" Then
        If HC.Range("BA6").Value = 0 And HC.Range("BA7").Value = 0 Then GoTo nuevo
        If HC.Range("BA6").Value = 0 Then
            MesActual = 11
            AnoActual = HC.Range("BA7").Value - 1
        Else
            MesActual = HC.Range("BA6").Value - 1
            AnoActual = HC.Range("BA7").Value
        End If
        HC.Cambio_mes MesActual, AnoActual, False, True
    Else
nuevo:
        If HC.FilterMode = True Then HC.ShowAllData
        HC.Range("ax14:du313").ClearContents
        HC.Range("G13").Value = "ANTIG|fffd|EDAD"
        HC.Range("F13").Value = "H / H.REF"
        HC.Range("CS12") = 112
        HC.Range("F14:F313").NumberFormat = "General"
        HC.Range("G14:G313").Validation.Delete
        HC.Range("CS12").Value = 112 ' definir columna de H/Href
        HC.Range("ci363:ec386").ClearContents ' Borra los contar
        HC.Range("g11") = "TODAS"
        HC.Range("i11") = "TODOS"
        HC.Cambio_mes "", 0, False, False
    End If
End If
End Sub
Private Sub BtnCerraCuadrante_Click()
If ThisWorkbook.Saved = False Then
    msg = MsgBox("No se han guardado los cambios." & vbCrLf & vbCrLf & " |fffd| CERRAR DE TODAS FORMAS ?", 20, "NO SE HAN GUARDADO CAMBIOS")
    If msg <> 6 Then GoTo cancelar
End If
ThisWorkbook.CIERRO = 3
ThisWorkbook.Close savechanges:=False
cancelar:
End Sub

Private Sub BtnContra_Click()
Application.EnableEvents = False
If HC.Range("Be12") <> "" Then
    VERIFICACION = InputBox("VERIFICACI|fffd|N DE LA CONTRASE|fffd|A ACTUAL:", "ESTABLECER CONTRASE|fffd|A")

    If VERIFICACION = "" Then
        GoTo fallo
    ElseIf VERIFICACION <> Format(HC.Range("Be12"), "") Then
        msg = MsgBox("No es correcto. Escribe la contrase|fffd|a ACTUAL", vbCritical, "ESTABLECER CONTRASE|fffd|A")
        GoTo fallo
    End If
End If

CONTRA = InputBox("Escribe una contrase|fffd|a para proteger CUADRANTE OG.11/14:", "ESTABLECER CONTRASE|fffd|A")
If CONTRA <> "" Then
contracontra = InputBox("Confirma la contrase|fffd|a:", "ESTABLECER CONTRASE|fffd|A")
    If CONTRA = contracontra Then
        HC.Range("Be12") = CONTRA
        msg = MsgBox("Se ha establecido la contrase|fffd|a correctamente.", vbInformation, "ESTABLECER CONTRASE|fffd|A")
    Else
        msg = MsgBox("La contrase|fffd|a no se ha confirmado correctamente, vuelve a establecerla", vbCritical, "ESTABLECER CONTRASE|fffd|A")
    End If
Else
    HC.Range("Be12") = ""
    msg = MsgBox("Se ha eliminado la contrase|fffd|a de CUADRANTE OG.11/14", vbInformation, "ESTABLECER CONTRASE|fffd|A")
End If
fallo:
Application.EnableEvents = True
End Sub
Private Sub BtnActualizar_Click()
Application.EnableEvents = False
CheckUpdate
Application.EnableEvents = True
End Sub
Private Sub BtnCrearLite_Click()
ag = Application.GetSaveAsFilename(InitialFileName:="Cuadrante Light.xls", FileFilter:="Archivo Excel (*.xls),*.xls", Title:="Crear CUADRANTE LIGHT")
Dim Hd As Worksheet
On Local Error Resume Next
    If ag <> "" And ag <> False Then
        If InStr(ag, ".xls") > 0 Then ext = "" Else ext = "xls"
        Application.EnableEvents = False
        Application.ScreenUpdating = False
        HLITE.Range("r12:r151").Value = HCON.Range("h5:h144").Value
        HLITE.Range("s12:x211").Value = HCON.Range("k5:p204").Value
        HLITE.Range("b1").Value = HC.Range("k1").Value
        HLITE.Range("e2").Value = HC.Range("ba3").Value
        HLITE.Range("d6") = ""
        HLITE.Range("d8") = "GENERAL"
        HLITE.Range("j5").ClearComments
        Leyenda = ""
        For te = 5 To 55
            If HCON.Range("k" & te) <> "" Then
                Leyenda = Leyenda & vbCrLf & HCON.Range("k" & te) & " - " & Mid(HCON.Range("l" & te), 5, 100)
            End If
        Next
        HLITE.Range("j5").AddComment (Leyenda)
        With HLITE.Range("j5").Comment.Shape
            .Placement = xlMove
            .Width = 300
            .Height = 600
            .TextFrame.AutoSize = True
        End With
        'Crear lista de validacion
        For V = 1 To HLITE.Range("s11")
            Vallist = Vallist & HLITE.Range("s" & V + 11) & ","
        Next
        Set destino = Workbooks.Add
        HLITE.Copy before:=destino.Sheets(1)
        Set Hd = destino.Worksheets(1)
        'Tipo texto
        Hd.Range("d13:j14").NumberFormat = "@"
        Hd.Range("d17:j18").NumberFormat = "@"
        Hd.Range("d21:j22").NumberFormat = "@"
        Hd.Range("d25:j26").NumberFormat = "@"
        Hd.Range("d29:j30").NumberFormat = "@"
        With Hd.Range("d13:j14").Validation
            .Add Type:=xlValidateList, AlertStyle:=xlValidAlertInformation, Formula1:=Vallist
            .InCellDropdown = True
            .ErrorTitle = "No valido"
            .ErrorMessage = "Por favor introduce un Servicio o codigo de la lista"
        End With
        With Hd.Range("d17:j18").Validation
            .Add Type:=xlValidateList, AlertStyle:=xlValidAlertInformation, Formula1:=Vallist
            .InCellDropdown = True
            .ErrorTitle = "No valido"
            .ErrorMessage = "Por favor introduce un Servicio o codigo de la lista"
        End With
        With Hd.Range("d21:j22").Validation
            .Add Type:=xlValidateList, AlertStyle:=xlValidAlertInformation, Formula1:=Vallist
            .InCellDropdown = True
            .ErrorTitle = "No valido"
            .ErrorMessage = "Por favor introduce un Servicio o codigo de la lista"
        End With
        With Hd.Range("d25:j26").Validation
            .Add Type:=xlValidateList, AlertStyle:=xlValidAlertInformation, Formula1:=Vallist
            .InCellDropdown = True
            .ErrorTitle = "No valido"
            .ErrorMessage = "Por favor introduce un Servicio o codigo de la lista"
        End With
        With Hd.Range("d29:j30").Validation
            .Add Type:=xlValidateList, AlertStyle:=xlValidAlertInformation, Formula1:=Vallist
            .InCellDropdown = True
            .ErrorTitle = "No valido"
            .ErrorMessage = "Por favor introduce un Servicio o codigo de la lista"
        End With
        Application.DisplayAlerts = False
        destino.SaveAs filename:=ag & ext, FileFormat:=ThisWorkbook.FileFormat
        Hd.Protect Password:=HC.Range("ba9"), DrawingObjects:=True, Contents:=True, Scenarios:=True
        destino.Close savechanges:=True
        msg = MsgBox("Cuadrante VERSION LIGHT CREADO." & vbCrLf & vbCrLf & "   Ahora puedes distribuir este archivo para que la cumplimente el personal y despues podras importar los datos que te hayan facilitado.", vbInformation, "CUADRANTE LIGHT")
        Unload Me
        Application.EnableEvents = True
        Application.ScreenUpdating = True
    End If
End Sub
Private Sub BtnDeshacerTodo_Click()
msg = MsgBox("Volvera a una version anterior de este mes." & vbCrLf & vbCrLf & "Info: Mientras se trabaja con el cuadrante de un mes, este no queda guardado completamente hasta que se selecciona otro mes o se realiza alguna opcion como la autoplanificacion. Al seleccionar SI, volvera al ultimo punto guardado.", vbYesNo, "Dehacer todos los cambios de la sesion.")
Unload Me
If msg = 6 Then
    Application.ScreenUpdating = False
    HC.recupar_mes
    Unload Me
End If
End Sub
Private Sub BtnCopiaSeguridad_Click()
Unload Me
COPIASEGURIDAD.Show
End Sub
Private Sub Btneliminarhbdn_Click()
msg = MsgBox("Eliminar la base de datos de los informes diarios." & vbCrLf & vbCrLf & _
"Esta base de datos almacena hasta una a|fffd|o de informes y puede volverse muy pesada. Si tienes problemas con los nombramientos, puedes probar a eliminarlos." & vbCrLf & vbCrLf & "Eliminar?", 36, "Eliminar BASE DE DATOS DE DIAS NOMBRADOS")
If msg = 6 Then
    HBDN.Cells.Clear
    HBDN.Cells.NumberFormat = "@"
    HBDN.Range("g:h").NumberFormat = "h:mm"
End If
Unload Me
HC.DiasNombrados
End Sub
Private Sub BtnImportarLite_Click()
Dim origen As Workbook
Dim lite As Worksheet
Dim archi As String
With Application.FileDialog(msoFileDialogOpen)
    .AllowMultiSelect = True
    .Filters.Clear
    .Filters.Add "CUADRANTE LIGHT", "*.XLS", 1
    .Title = "Selecciona los CUADRANTE LIGHT's (Puedes seleccionar varios al mismo tiempo)"
    If .Show = -1 Then
        On Error GoTo siguiente
        Application.EnableEvents = False
        Application.ScreenUpdating = False
        Application.Calculation = xlCalculationManual
        For Each fil In .SelectedItems
            archi = fil
            If IsFileOpen(archi) Then
                msg = MsgBox("El Cuadrante a importar debe estar cerrado", vbCritical, "Este archivo no se importa")
                GoTo siguiente
            End If
            Set origen = Workbooks.Open(filename:=archi, ReadOnly:=True)
            Set lite = origen.Worksheets("LITE")
            'Comprobar Archivo
            If lite.Range("i1") = "Powered by   CUADRANTE OG.11/14" Then
                If lite.Range("e2") = HC.Range("ba3") Or lite.Range("g2") = HC.Range("ba4") Then
                    coincide = Application.Match(lite.Range("d6"), HC.Range("cp14:cp313"), 0)
                    If IsError(coincide) = False Then
                        coincide = coincide + 13
                        hay = 0
                        For dia = 13 To 47
                            If HC.Cells(coincide, dia) <> "" Then hay = 1
                        Next
                        If hay = 1 Then msg = MsgBox(HC.Range("do" & coincide) & "-  ya tiene definidos servicios. quieres sobreescribir los conflictos?", 52, "Atencion")
                        If msg = 6 Or hay = 0 Then
                            For dia = 1 To 35
                                If dia < 8 Then
                                    fil = 13
                                ElseIf dia < 15 Then
                                    fil = 17
                                ElseIf dia < 22 Then
                                    fil = 21
                                ElseIf dia < 29 Then
                                    fil = 25
                                Else
                                    fil = 29
                                End If
                                'MsgBox ((dia - 1) Mod 7) + 4
                                serv = lite.Cells(fil, ((dia - 1) Mod 7) + 4).Value
                                If lite.Cells(fil + 1, ((dia - 1) Mod 7) + 4).Value <> "" Then
                                    serv = serv & Chr(10) & lite.Cells(fil + 1, ((dia - 1) Mod 7) + 4).Value
                                End If
                                If serv <> "" Then HC.Cells(coincide, 12 + dia).Value = serv
                            Next
                            HC.Cambiar_Servicio coincide
                        End If
                    Else
                        msg = MsgBox("El archivo " & archi & "  no contiene el TIP de una persona coincidente del mes seleccionado.", vbCritical, "Este archivo no se importa")
                    End If
                Else
                    msg = MsgBox("El archivo " & archi & "  no corresponde con el mes seleccionado.", vbCritical, "Este archivo no se importa")
                End If
            Else
                msg = MsgBox("El archivo " & archi & "  no corresponde con una version de CUADRANTE LIGHT.", vbCritical, "Este archivo no se importa")
            End If
        origen.Close savechanges:=False
siguiente:
        Next
        Application.EnableEvents = True
        Application.ScreenUpdating = True
        Unload Me
    End If
End With
End Sub
Private Sub BtnIncorporar_Click()
Unload Me
HTUC.Activate
End Sub
Private Sub BtnRecalcularTodo_Click()
Unload Me
HC.RECALCULARTODO
End Sub
Private Sub BtnUsuarios_Click()
Unload Me
MENUUSERS.Show
End Sub
Private Sub Recomponer_Click()
msg = MsgBox("Esta herramienta se puede usar si tienes fallos recurrentes debido a algunas limitaciones en Microsoft Excel. Al recomponer la base de datos se borraran formatos viejos y es posible perder algun color personalizado. Pulsa en Aceptar para recomponer", vbOKCancel, "Recomponer BASE DE DATOS")
If msg = 1 Then
    Unload Me
    HC.RecomponerBDC
End If
End Sub
Private Sub BtnEstadisticas_Click()
Unload Me
MENUESTADISTICA.Show
End Sub
Private Sub BtnGuardarComo_Click()
Unload Me
ThisWorkbook.Saved = False
TRABAJANDO.Textillo = "GUARDANDO"
TRABAJANDO.Show 0
TRABAJANDO.Repaint
HCON.Range("cw7") = Now()
HC.Shapes("RecuerdaGuardar").Visible = False
Application.ScreenUpdating = False
HCON.Range("cx4") = HCON.Range("cx4") + 1
HCON.Range("cx4") = 0
HCON.Range("cx5") = Now()
HC.Activate
HC.Range("a1").Select
HBDC.Activate
HBDC.Range("a1").Select
HPASS.Activate
Application.ScreenUpdating = True
HC.Activate
ag = Application.GetSaveAsFilename("")
On Local Error Resume Next
If ag <> "" And ag <> False Then
    If ThisWorkbook.FileFormat <> xlExcel12 Then
        msg = MsgBox("Quieres guardar esta copia con un formato mas optimizado para version de Excel 2010 o superior." & vbCrLf & vbCrLf & "ATENCION!! Podra dejar de ser funcional en versiones de EXCEL inferiores a 2010.", 36, "OPTIMIZAR")
        If msg = 6 Then
            If Val(Application.Version) > 12 Then
                If InStr(ag, ".XLSB") > 0 Then ext = "" Else ext = ".XLSB"
                HPASS.Activate
                ThisWorkbook.SaveAs filename:=ag & ext, FileFormat:=xlExcel12
            Else
                msg = MsgBox("No se puede realizar esta accion desde este Excel", vbCritical, "No se guarda")
            End If
        Else
            If InStr(ag, ".xls") > 0 Then ext = "" Else ext = ".xls"
            HPASS.Activate
            ThisWorkbook.SaveAs filename:=ag & ext, FileFormat:=xlWorkbookNormal
        End If
    Else
        msg = MsgBox("Quieres guardar esta copia con un formato compatible para version de Excel 2003 o inferior.", 36, "DES-OPTIMIZAR")
        If msg = 6 Then
                If InStr(ag, ".XLS") > 0 Then ext = "" Else ext = ".XLS"
                HPASS.Activate
                ThisWorkbook.SaveAs filename:=ag & ext, FileFormat:=xlExcel8
        Else
            If InStr(ag, ".XLSB") > 0 Then ext = "" Else ext = ".XLSB"
            HPASS.Activate
            ThisWorkbook.SaveAs filename:=ag & ext, FileFormat:=xlWorkbookNormal
        End If
    End If
End If
TRABAJANDO.Hide
ThisWorkbook.Saved = True
HC.Activate
End Sub
Private Sub BtnImportar_Click()
Unload Me
MENUIMPORTAR.Show
End Sub
Private Sub BtnImportarDatosSigo_Click()
Unload Me
MENUIMPORTARSIGO.Show
End Sub
Private Sub BtnMasOpciones_Click()
Unload Me
ACCIONES.Show
End Sub
Private Sub BtnRecalcular_Click()
Unload Me
Application.EnableEvents = False
Application.ScreenUpdating = False
HC.Refrescar 1
Application.EnableEvents = True
Application.ScreenUpdating = True
Unload Me
End Sub
Private Sub BtnRefundir_Click()
Unload Me
MENUREFUNDIR.Show
End Sub
Private Sub BtnVisual_Click()
Me.Hide
MENUVISUAL.Show
End Sub
Private Sub UserForm_Initialize()
If RAPIDAS.Visible = True Then Unload RAPIDAS
If CAJONSERVICIOS.Visible = True Then Unload CAJONSERVICIOS
End Sub
Private Sub BtnConfigSingularizados_Click()
Me.Hide
MENUSINGULARIZADOS.Show
End Sub
Attribute VB_Name = "MENUPAPELETA"
Attribute VB_Base = "0{E40DCCA6-1734-4ABD-AB17-6DCDAC4B3F1A}{199C8EDC-482B-4A07-9275-AB1CD749E2EB}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Private Sub BtnGenerar_Click()
If ListModalidad = "" Then
    msg = MsgBox("Debe seleccionar una modalidad de permiso o vacaciones", vbCritical, "Error")
    GoTo fin
ElseIf ListModalidad = "VACACIONES" Then
    Application.ScreenUpdating = False
    Application.EnableEvents = False
    HPVAC.Range("a1:k17").ClearContents
    HPVAC.Range("d2") = Nombre
    HPVAC.Range("c4") = Empleo
    HPVAC.Range("j4") = Tip
    HPVAC.Range("c6") = Unidad
    HPVAC.Range("b8") = Localizacion
    If CheckVerano = True Then
        HPVAC.Range("e12") = FechaInicio
        HPVAC.Range("i12") = FechaFin
    Else
        HPVAC.Range("b10") = FechaInicio
        HPVAC.Range("h10") = FechaFin
    End If
    HPVAC.Range("f14") = FechaSolicitud
    HPVAC.Range("f16") = FechaEntrada
    Unload Me
    #If VBA6 Then
        Application.ExecuteExcel4Macro ("show.toolbar(""ribbon"",1)")
    #End If
    With HPVAC.PageSetup
        .PrintArea = "A1:k17"
        .Zoom = False
        .FitToPagesWide = 1
        .FitToPagesTall = 1
    End With
    HPVAC.PrintPreview
    #If VBA6 Then
        Application.ExecuteExcel4Macro ("show.toolbar(""ribbon"",0)")
    #End If
    HC.Activate
    Application.CommandBars.ActiveMenuBar.Enabled = True
    Application.CommandBars.ActiveMenuBar.Enabled = False
ElseIf ListModalidad = "P. ASUNTOS PARTICULARES" Then
    Application.ScreenUpdating = False
    Application.EnableEvents = False
    HPPER.Range("a1:k17").ClearContents
    HPPER.Range("d2") = Nombre
    HPPER.Range("c4") = Empleo
    HPPER.Range("j4") = Tip
    HPPER.Range("c6") = Unidad
    HPPER.Range("b8") = Localizacion
    HPPER.Range("b10") = FechaInicio
    HPPER.Range("h10") = FechaFin
    HPPER.Range("f14") = FechaSolicitud
    HPPER.Range("f16") = FechaEntrada
    Unload Me
    #If VBA6 Then
        Application.ExecuteExcel4Macro ("show.toolbar(""ribbon"",1)")
    #End If
    With HPPER.PageSetup
        .PrintArea = "A1:k22"
        .Zoom = False
        .FitToPagesWide = 1
        .FitToPagesTall = 1
    End With
    HPPER.PrintPreview
    #If VBA6 Then
        Application.ExecuteExcel4Macro ("show.toolbar(""ribbon"",0)")
    #End If
    HC.Activate
    Application.CommandBars.ActiveMenuBar.Enabled = True
    Application.CommandBars.ActiveMenuBar.Enabled = False
ElseIf ListModalidad = "P. FECHAS SE|fffd|ALADAS" Then
    Application.ScreenUpdating = False
    Application.EnableEvents = False
    HPSS.Range("a1:k17").ClearContents
    HPSS.Range("d2") = Nombre
    HPSS.Range("c4") = Empleo
    HPSS.Range("j4") = Tip
    HPSS.Range("c6") = Unidad
    HPSS.Range("b8") = Localizacion
    HPSS.Range("e10") = FechaInicio
    HPSS.Range("h10") = FechaFin
    HPSS.Range("f14") = FechaSolicitud
    HPSS.Range("f16") = FechaEntrada
    Unload Me
    #If VBA6 Then
        Application.ExecuteExcel4Macro ("show.toolbar(""ribbon"",1)")
    #End If
    With HPSS.PageSetup
        .PrintArea = "A1:k21"
        .Zoom = False
        .FitToPagesWide = 1
        .FitToPagesTall = 1
    End With
    HPSS.PrintPreview
    #If VBA6 Then
        Application.ExecuteExcel4Macro ("show.toolbar(""ribbon"",0)")
    #End If
    HC.Activate
    Application.CommandBars.ActiveMenuBar.Enabled = True
    Application.CommandBars.ActiveMenuBar.Enabled = False

End If
Application.ScreenUpdating = True
Application.EnableEvents = True
fin:
End Sub

Private Sub FechaInicio_Change()
On Error GoTo fallo
If CDate(FechaInicio) >= DateSerial(HC.Range("ba4"), 6, 15) And CDate(FechaInicio) < DateSerial(HC.Range("ba4"), 9, 16) And ListModalidad.ListIndex = 0 Then
    MENUPAPELETA.CheckVerano.Enabled = True
    MENUPAPELETA.CheckVerano = True
Else
fallo:
    MENUPAPELETA.CheckVerano.Enabled = False
    MENUPAPELETA.CheckVerano = False
End If
End Sub
Attribute VB_Name = "MENUPERSONA"
Attribute VB_Base = "0{EF183A4B-7326-478F-AF8D-B4AFEB69665D}{4FFBBA6D-27FF-44D6-A0B4-7B27D6584725}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Private Sub BtnAceptar_Click()
UserForm_QueryClose 1, 0
Unload Me
End Sub
Private Sub BtnActivar_Click()
If HC.Range("cj" & ActiveCell.Row) = "NO" Or HC.Range("cj" & ActiveCell.Row) = "MANUAL" Then
    HC.Range("cj" & ActiveCell.Row) = "SI"
    If HC.Range("g13") = "ACTIVOS" Then HC.Range("g" & ActiveCell.Row) = "SI"
Else
    HC.Range("cj" & ActiveCell.Row) = "NO"
    If HC.Range("g13") = "ACTIVOS" Then HC.Range("g" & ActiveCell.Row) = "NO"
End If
Application.ScreenUpdating = False
Application.EnableEvents = False
HC.Cambiar_Servicio (ActiveCell.Row)
Application.EnableEvents = True
Application.ScreenUpdating = True
Unload Me
End Sub
Private Sub BtnASIGO_Click()
If HC.Range("cp" & ActiveCell.Row) <> "" Then
    Unload Me
    HAG.Range("A327") = ActiveCell.Row
    'HAG.ASIGO
    AUTOGRABADOR.modo = "PLANI INDIVIDUAL"
    AUTOGRABADOR.ActualizaPlanificacion
    AUTOGRABADOR.Show
Else
    msg = MsgBox("Sin definir el TIP no se pueden pasar datos a SIGO de esta persona", vbCritical, "No se puede")
End If
End Sub
Private Sub BtnCopiarDe_Click()
SELMES.Show
ACTUALIZA
End Sub
Private Sub BtnCopiarNombre_Click()
nominicial = Nombre.Value
Nombre = Nombre & " " & Apellido1 & " " & Apellido2
With Nombre
    .SetFocus
    .SelStart = 0
    .SelLength = Len(.Text)
    .Copy
    .SelStart = 0
End With
Nombre = nominicial
End Sub

Private Sub BtnCopiarTip_Click()
With Tip
    .SetFocus
    .SelStart = 0
    .SelLength = Len(.Text)
    .Copy
    .SelStart = 0
End With
End Sub

Private Sub BtnCuadMesual_Click()
Unload Me
Application.ScreenUpdating = False
HIMI.Range("n3") = ActiveCell.Row
HIMI.Calculate
#If VBA6 Then
    Application.ExecuteExcel4Macro ("show.toolbar(""ribbon"",1)")
#End If
With HIMI.PageSetup
    .Zoom = False
    .FitToPagesWide = 1
    .FitToPagesTall = 1
End With
    HIMI.PrintPreview
#If VBA6 Then
    Application.ExecuteExcel4Macro ("show.toolbar(""ribbon"",0)")
#End If
Application.ScreenUpdating = True
Application.CommandBars.ActiveMenuBar.Enabled = True
Application.CommandBars.ActiveMenuBar.Enabled = False
End Sub
Private Sub BtnEnviarMail_Click()
If checkenvios = True Then
    If correo <> "" And HC.Range("bu1") <> 6 Then
        ENVIARMJS.email = correo.Value
        Unload Me
        ENVIARMJS.Show 0
    ElseIf HC.Range("bu1") = 6 Then
        msg = MsgBox("Con metodo de envio alternativo esta funcion esta deshabilitada", vbCritical, "Opcion deshabilitada")
    End If
Else
    msg = MsgBox("No se ha configurado el metodo de envio correctamente para poder realizar envios.", vbCritical, "Configuracion de Salida")
End If
End Sub
Private Sub BtnGuardarAdelante_Click()
msg = MsgBox("Los datos se traspasar|fffd|n a los meses posteriores que se hayan creado", vbYesNo, "Copiar a los siguientes")
If msg = 6 Then
    GrabaResultados
    MesActual = HC.Range("ba5")
    For mes = (MesActual + 1) * 500 To 65500 Step 500
        If HBDC.Range("a" & mes) <> "" Then
            esta = Application.Match(HC.Range("cp" & ActiveCell.Row), HBDC.Range("cd" & mes + 1 & ":cd" & mes + 301), 0)
            If IsError(esta) = True Then
                For esta = 1 To 301
                    If HBDC.Range("ca" & esta + mes) = "" Then Exit For
                Next
            End If
            HBDC.Range("bv" & esta + mes & ":ci" & esta + mes).Value = HC.Range("ch" & ActiveCell.Row & ":cu" & ActiveCell.Row).Value
            HBDC.Range("cq" & esta + mes).Value = HC.Range("dc" & ActiveCell.Row).Value
            HBDC.Range("cs" & esta + mes).Value = HC.Range("de" & ActiveCell.Row).Value
        End If
    Next
    Unload Me
End If
End Sub
Private Sub BtnImpPersona_Click()
Unload Me
OPCIONESINDIVIDUAL.Show
End Sub
Private Sub BtnImprimir_Click()
If left(HC.Range("cs" & ActiveCell.Row), 2) = "SI" Or HC.Range("cs" & ActiveCell.Row) = "" Then
    HC.Range("cs" & ActiveCell.Row).Characters(1, 2).Text = "NO"
    If HC.Range("g13") = "IMPRIMIR" Then HC.Range("g" & ActiveCell.Row) = "NO"
ElseIf left(HC.Range("cs" & ActiveCell.Row), 2) = "NO" Then
    HC.Range("cs" & ActiveCell.Row).Characters(1, 2).Text = "SI"
    If HC.Range("g13") = "IMPRIMIR" Then HC.Range("g" & ActiveCell.Row) = "SI"
End If
Application.ScreenUpdating = False
Application.EnableEvents = False
HC.Cambiar_Servicio (ActiveCell.Row)
Application.EnableEvents = True
Application.ScreenUpdating = True
Unload Me
End Sub
Private Sub BtnEliminar_Click()
Unload Me
If ActiveCell.Row = 313 Then
    msg = MsgBox("NO SE PUEDE ELIMINAR FILA EN ESTA POSICION", vbCritical, "Eliminar efectivo.")
    GoTo fin
End If
msg = MsgBox("Seguro que quieres eliminar a este efectivo? La operacion no se puede deshacer y los filtros seran restablecidos.", 49, "Eliminar efectivo.")
If msg = 1 Then
    Application.ScreenUpdating = False
    If HC.FilterMode = True Then
        HC.ShowAllData
        HC.Range("g11") = "TODAS"
        HC.Range("i11") = "TODOS"
    End If
    HC.Range("h" & ActiveCell.Row + 1 & ":dT313").Copy
    HC.Range("h" & ActiveCell.Row).PasteSpecial xlPasteAll
    HC.Range("G13").Value = "ANTIG|fffd|EDAD"
    HC.Range("G14:G313").Validation.Delete
    HC.Range("G14:G313").Value = HC.Range("CI14:CI313").Value
    ActiveCell.Select
    'RECALCULAR ---------------------------------------------
HC.Refrescar 1
HC.Calculate
'Funcion de deshacer---------------------------
HC.RestableceDeshacer
'-----------------------------------------------
fin:
    Unload Me
End If
End Sub
Private Sub BtnInsertar_Click()
Unload Me
If ActiveCell.Row = 313 Or ActiveCell.Row = 14 Then
    msg = MsgBox("NO SE PUEDE INSERTAR FILAS EN ESTA POSICION", vbCritical, "A|fffd|adir fila.")
    GoTo fin
End If
If HC.Range("H313") <> "" Then
    msg = MsgBox("No se puede insertar fila sin eliminar el ultimo efectivo de la lista", vbCritical, "A|fffd|adir fila.")
    GoTo fin
End If
msg = MsgBox("Se a|fffd|adir|fffd| una fila por encima de este efectivo. La operacion no se puede deshacer y los filtros seran restablecidos.", 49, "A|fffd|adir fila.")
If msg = 1 Then
    Application.ScreenUpdating = False
    If HC.FilterMode = True Then
        HC.ShowAllData
        HC.Range("g11") = "TODAS"
        HC.Range("i11") = "TODOS"
    End If
    HC.Range("h" & ActiveCell.Row & ":dT312").Copy
    HC.Range("h" & ActiveCell.Row + 1).PasteSpecial xlPasteAll
    HC.Range("g" & ActiveCell.Row - 1 & ":j" & ActiveCell.Row - 1).ClearContents
    HC.Range("m" & ActiveCell.Row - 1 & ":dT" & ActiveCell.Row - 1).ClearContents
    HC.Range("G13").Value = "ANTIG|fffd|EDAD"
    HC.Range("G14:G313").Validation.Delete
    HC.Range("G14:G313").Value = HC.Range("CI14:CI313").Value
    ActiveCell.Select
'RECALCULAR ---------------------------------------------
HC.Refrescar 1
HC.Calculate
'Funcion de deshacer---------------------------
HC.RestableceDeshacer
'-----------------------------------------------
fin:
    Unload Me
End If
End Sub
Private Sub BtnManual_Click()
Unload Me
FormManual.Show
End Sub
Private Sub BtnResumen_Click()
Unload Me
RESUMENPERS.ACTUALIZA
'RESUMENPERS.Show
End Sub
Private Sub BtnVerSolicitudes_Click()
Unload Me
REGISTROSOL.SolPersona = HC.Range("do" & ActiveCell.Row)
REGISTROSOL.actualizarlista
REGISTROSOL.Show 0
End Sub

Private Sub CheckIos_Click()
If CheckIos = True Then
    CheckSus.Enabled = False
    CheckCarta.Enabled = False
    CheckPet.Enabled = False
    CheckPers.Enabled = False
    CheckDes.Enabled = False
    CheckBolsa.Enabled = False
Else
    CheckSus.Enabled = True
    CheckCarta.Enabled = True
    CheckPet.Enabled = True
    CheckPers.Enabled = True
    CheckDes.Enabled = True
    CheckBolsa.Enabled = True
End If
End Sub
Private Sub Comentario_Change()
LimiteComentario = Len(Comentario) & " / 250"
If Len(Comentario) >= 250 Then Comentario = Right(Comentario, 250)
End Sub
Sub ACTUALIZA()
Me.BackColor = HCON.Cells(29, 99 + HCON.Range("cv16"))
Me.ForeColor = HCON.Cells(30, 99 + HCON.Range("cv16"))
Set Celdacom = HC.Range("h" & ActiveCell.Row).Comment
If Not Celdacom Is Nothing Then Comentario = HC.Range("h" & ActiveCell.Row).Comment.Text
'Control de Usuarios
If HCON.Range("ag13") = False Then
    BtnManual.Visible = False
    FrameCorrec.Visible = False
End If
'DATOS DE LA PERSONA
Nombre.ControlSource = HC.Range("h" & ActiveCell.Row).Address
Apellido1.ControlSource = HC.Range("i" & ActiveCell.Row).Address
Apellido2.ControlSource = HC.Range("j" & ActiveCell.Row).Address
Empleo.ControlSource = HC.Range("ck" & ActiveCell.Row).Address
Tip.ControlSource = HC.Range("cp" & ActiveCell.Row).Address
Telefono.ControlSource = HC.Range("cq" & ActiveCell.Row).Address
Grupo.ControlSource = HC.Range("dc" & ActiveCell.Row).Address
Periodo.ControlSource = HC.Range("ct" & ActiveCell.Row).Address
Periodo.List = HC.Range("g338:g340").Value
Area.List = HCON.Range("d7:d16").Value
Alist = Application.Match(HC.Range("cl" & ActiveCell.Row), HCON.Range("e8:e16"), 0)
If IsError(Alist) <> True Then
    Area.ListIndex = Alist
Else
    Area.ListIndex = 0
End If
Regimen.List = HCON.Range("bf3:bf9").Value
Rlist = Application.Match(HC.Range("cr" & ActiveCell.Row), HCON.Range("bf24:bf30"), 0)
If IsError(Rlist) <> True Then
    Regimen.ListIndex = Rlist - 1
Else
    Regimen.ListIndex = 0
End If
If HC.Range("h" & ActiveCell.Row) = "" Then
    BtnManual.Visible = False
    BtnActivar.Visible = False
    BtnImprimir.Visible = False
    BtnResumen.Visible = False
    BtnCuadMesual.Visible = False
    BtnImpPersona.Visible = False
    FrameCorrec.Visible = False
    BtnCopiarDe.Visible = False
    Comentario.Visible = False
    Lcoment.Visible = False
    LimiteComentario.Visible = False
    FCaracteristicas.Visible = False
    FrameApp.Visible = False
    Me.Height = 430
    Me.Width = 430
Else
    If HC.Range("cj" & ActiveCell.Row) = "NO" Or HC.Range("cj" & ActiveCell.Row) = "MANUAL" Then
        BtnActivar.Caption = "ACTIVAR CALCULOS"
        FrameCorrec.Visible = False
        ActualizaCaracteristicas
    Else
        BtnActivar.Caption = "DESACTIVAR"
        'FrameCorrec.Visible = True
        superactualiza
    End If
    If left(HC.Range("cs" & ActiveCell.Row), 2) = "SI" Or HC.Range("cs" & ActiveCell.Row) = "" Then
        BtnImprimir.Caption = "NO IMPRIMIR"
    Else
        BtnImprimir.Caption = "IMPRIMIBLE"
    End If
End If
End Sub
Private Sub superactualiza()
If Application.Calculation = xlCalculationAutomatic Then Application.Calculation = xlCalculationManual
If ActiveCell.Row <> HC.Range("I328").Value Then  ' Actualiza Fila
    HC.Range("I328") = ActiveCell.Row
    HC.Range("I329") = HC.Range("CJ" & ActiveCell.Row)
    HC.Range("I330") = HC.Range("CP" & ActiveCell.Row)
End If
HC.Calculate
'Spins
AP = HC.Range("de" & ActiveCell.Row)
vac = HC.Range("ch" & ActiveCell.Row)
SpinDAS = HC.Range("cz" & ActiveCell.Row).Value
SpinFEST = HC.Range("az365")
SpinFEST.Min = HC.Range("az328")
SpinFEST.Max = HC.Range("az328") + 2
SpinNOC = HC.Range("az366")
SpinNOC.Min = HC.Range("az329")
SpinNOC.Max = HC.Range("az329") + 5
SpinDF = HC.Range("db" & ActiveCell.Row).Value
SpinDSJ = HC.Range("da" & ActiveCell.Row).Value
SpinApCons = HC.Range("ay374") ' Asuntos particulares consumidos
SpinAPCre = Val(HC.Range("AW404")) 'Credito Asuntos particulares
SpinVacCons = HC.Range("Ay393")  ' Vacaciones consumidas
SpinVacCre = Val(HC.Range("AW403")) ' Credito vacaciones
SpinApCons.Min = HC.Range("AW342")
SpinVacCons.Min = HC.Range("AW392")
ServAnterior1 = HC.Range("l329")
ServAnterior2 = HC.Range("l330")
ActualizaCorreciones
ActualizaCaracteristicas
End Sub
Private Sub ActualizaCaracteristicas()
On Error Resume Next
cara = HC.Range("CU" & ActiveCell.Row)
'Boleanos
For n = 1 To 8
    If HCON.Range("aq" & 3 + n) <> "" Then
        MENUPERSONA.Controls("Bol" & n).Visible = True
        MENUPERSONA.Controls("Bol" & n).Caption = HCON.Range("aq" & 3 + n)
        If InStr(cara, "#B" & n & "1") > 0 Then MENUPERSONA.Controls("Bol" & n).Value = True
    Else
        MENUPERSONA.Controls("Bol" & n).Visible = False
    End If
Next
'Comentarios y fechas
For n = 1 To 3
    If HCON.Range("ar" & 3 + n) <> "" Then
        MENUPERSONA.Controls("lfecha" & n).Visible = True
        MENUPERSONA.Controls("lfecha" & n).Caption = HCON.Range("ar" & 3 + n)
        MENUPERSONA.Controls("fecha" & n).Visible = True
        If InStr(cara, "#F" & n) > 0 Then MENUPERSONA.Controls("fecha" & n).Value = CDate(Mid(cara, InStr(cara, "#F" & n) + 3, InStr(cara, "F" & n & "#") - InStr(cara, "#F" & n) - 3))
        
    Else
        MENUPERSONA.Controls("lfecha" & n).Visible = False
        MENUPERSONA.Controls("fecha" & n).Visible = False
    End If
    If HCON.Range("as" & 3 + n) <> "" Then
        MENUPERSONA.Controls("lcom" & n).Visible = True
        MENUPERSONA.Controls("lcom" & n).Caption = HCON.Range("as" & 3 + n)
        MENUPERSONA.Controls("com" & n).Visible = True
        If InStr(cara, "#C" & n) > 0 Then MENUPERSONA.Controls("Com" & n).Value = Mid(cara, InStr(cara, "#C" & n) + 3, InStr(cara, "C" & n & "#") - InStr(cara, "#C" & n) - 3)
    Else
        MENUPERSONA.Controls("lcom" & n).Visible = False
        MENUPERSONA.Controls("com" & n).Visible = False
    End If
Next
'Correo electronico
If InStr(cara, "#E") > 0 Then
    correo.Value = Mid(cara, InStr(cara, "#E") + 2, InStr(cara, "E#") - InStr(cara, "#E") - 2)
    BtnEnviarMail.Enabled = True
End If
'Permisos
If InStr(cara, "#P") > 0 Then
    per = Mid(cara, InStr(cara, "#P") + 2, 5)
    CheckSus = True
    BtnEnviarPlanificacion.Enabled = True
End If
If Mid(per, 1, 1) = 2 Then CheckCarta = True
If Mid(per, 2, 1) = 2 Then CheckPet = True
If Mid(per, 3, 1) = 2 Then CheckDes = True
If Mid(per, 4, 1) = 2 Then CheckPers = True
If Mid(per, 5, 1) = 2 Then CheckBolsa = True
'IOS Alternativo
If InStr(cara, "#I") > 0 Then
    CheckIos = True
    BtnEnviarPlanificacion.Enabled = True
End If
End Sub
Private Sub ActualizaCorreciones()
'Labels
LDAS.Caption = SpinDAS
LFest.Caption = SpinFEST
LNoct.Caption = SpinNOC
LDF.Caption = SpinDF
LDSJ.Caption = SpinDSJ
LAPCons = SpinApCons
LAPCRE = SpinAPCre
LVacCons = SpinVacCons
LVacCre = SpinVacCre
End Sub

Private Sub SpinDAS_Change()
ActualizaCorreciones
End Sub
Private Sub Spinfest_Change()
ActualizaCorreciones
End Sub
Private Sub Spinnoc_Change()
ActualizaCorreciones
End Sub
Private Sub Spindf_Change()
ActualizaCorreciones
End Sub
Private Sub SpinDsj_Change()
ActualizaCorreciones
End Sub
Private Sub SpinAPcons_Change()
ActualizaCorreciones
End Sub
Private Sub SpinAPCre_Change()
ActualizaCorreciones
End Sub
Private Sub SpinvacCre_Change()
ActualizaCorreciones
End Sub
Private Sub Spinvaccons_Change()
ActualizaCorreciones
End Sub
Private Sub BtnAceptarCorreciones_Click()
If HC.Range("cp" & ActiveCell.Row) <> "" Then
    pastfila = HC.Range("dk" & ActiveCell.Row)
    If pastfila = "" Then
        pastfila = (HC.Range("ba5") - 1) * 500
        If HBDC.Range("A" & pastfila) = "" Then HBDC.Range("A" & pastfila) = "Correcciones"
        For Vacio = pastfila + 1 To pastfila + 300
            If HBDC.Range("ca" & Vacio) = "" Then
                HBDC.Range("BW" & Vacio & ":CH" & Vacio).Value = HC.Range("CI" & ActiveCell.Row & ":CT" & ActiveCell.Row).Value
                HBDC.Range("DC" & Vacio).Value = HC.Range("CQ" & ActiveCell.Row).Value
                Exit For
            End If
        Next
        If Vacio = pastfila + 300 Then
            msg = MsgBox("No se puede realizar esta operacion", vbCritical, "Singularidad ocurrida")
            GoTo fin
        End If
        pastfila = Vacio
    End If
    'Establecer Calculo Manual
    HBDC.Range("bx" & pastfila) = "MANUAL"
    'Realizar Correcciones
    HBDC.Range("cn" & pastfila) = HBDC.Range("cn" & pastfila) + (SpinDAS - HC.Range("cz" & ActiveCell.Row).Value)
    Fest = HC.Range("az350") + (SpinFEST - HC.Range("az365"))
    Noct = HC.Range("az351") + (SpinNOC - HC.Range("az366"))
    HBDC.Range("cl" & pastfila) = Fest & "R" & Fest
    HBDC.Range("cm" & pastfila) = Noct & "R" & Noct
    HBDC.Range("co" & pastfila) = HBDC.Range("co" & pastfila) + (SpinDSJ - HC.Range("da" & ActiveCell.Row).Value) 'DSJ
    HBDC.Range("cp" & pastfila) = HBDC.Range("cp" & pastfila) + (SpinDF - HC.Range("db" & ActiveCell.Row).Value) 'DF
    HBDC.Range("bv" & pastfila).NumberFormat = "@"
    HBDC.Range("cs" & pastfila).NumberFormat = "@"
    HBDC.Range("bv" & pastfila).Value = SpinVacCons - Val(HC.Range("AW392")) & " / " & HC.Range("az359") 'VACACIONES
    HBDC.Range("cs" & pastfila).Value = SpinApCons - Val(HC.Range("AW342")) & " / " & HC.Range("az356") 'ASUN. PARTICULARES
    'HC.Calculate
    If ServAnterior1 <> HC.Range("l329") Or ServAnterior2 <> HC.Range("l330") Then
        If ServAnterior2 <> "" Then
            HBDC.Cells(pastfila, HC.Range("bd9")) = ServAnterior1 & Chr(10) & ServAnterior2
        Else
            HBDC.Cells(pastfila, HC.Range("bd9")) = ServAnterior1
        End If
    End If
        
    Application.ScreenUpdating = False
    HC.Cambiar_Servicio (ActiveCell.Row)
    superactualiza
    Application.ScreenUpdating = True
fin:
Else
    msg = MsgBox("No se pueden establecer correciones hasta que no se defina el TIP", vbCritical, "Correciones")
End If
Unload Me
End Sub
Private Sub UserForm_QueryClose(Cancel As Integer, CloseMode As Integer)
If CloseMode = 0 Then
    GrabaResultados
End If
End Sub
Private Sub GrabaResultados()
'If HC.Range("h" & ActiveCell.Row) <> "" Me.Height <= 190 Then GoTo saltar
Application.ScreenUpdating = False
Enfoque.SetFocus
If Comentario <> "" Then
    HC.Range("h" & ActiveCell.Row).ClearComments
    HC.Range("h" & ActiveCell.Row).AddComment (Comentario)
    With Range("h" & ActiveCell.Row).Comment.Shape
        .Fill.ForeColor.RGB = RGB(200, 255, 200)
        .Placement = xlMove
        .TextFrame.Characters(0, 250).Font.Size = 10
        .Height = 120
        .Width = 120
    End With
Else
    HC.Range("h" & ActiveCell.Row).ClearComments
End If
HC.Range("ch" & ActiveCell.Row).Value2 = HC.Range("ay393") & " / " & SpinVacCre
HC.Range("de" & ActiveCell.Row).Value2 = HC.Range("ay374") & " / " & SpinAPCre
'On Error Resume Next
HC.Range("CM" & ActiveCell.Row & ":CO" & ActiveCell.Row).Value = HC.Range("H" & ActiveCell.Row & ":J" & ActiveCell.Row).Value ' Nombre y apellidos
HC.Range("cr" & ActiveCell.Row) = HCON.Range("bf" & 24 + Regimen.ListIndex) ' Regimen
HC.Range("cl" & ActiveCell.Row) = HCON.Range("e" & 7 + Area.ListIndex) ' Area
'Caracteristicas
On Error Resume Next
cara = ""
For n = 1 To 8
    If MENUPERSONA.Controls("Bol" & n) = True Then cara = cara & "#B" & n & "1"
Next
For n = 1 To 3
    If MENUPERSONA.Controls("Fecha" & n) <> "" Then cara = cara & "#F" & n & CDbl(CDate(MENUPERSONA.Controls("Fecha" & n))) & "F" & n & "#"
Next
For n = 1 To 3
    If MENUPERSONA.Controls("Com" & n) <> "" Then cara = cara & "#C" & n & MENUPERSONA.Controls("Com" & n) & "C" & n & "#"
Next
If correo <> "" Then cara = cara & "#E" & correo & "E#"
If CheckCarta = True Then refundidopermisos = refundidopermisos & 2 Else refundidopermisos = refundidopermisos & 1
If CheckPet = True Then refundidopermisos = refundidopermisos & 2 Else refundidopermisos = refundidopermisos & 1
If CheckDes = True Then refundidopermisos = refundidopermisos & 2 Else refundidopermisos = refundidopermisos & 1
If CheckPers = True Then refundidopermisos = refundidopermisos & 2 Else refundidopermisos = refundidopermisos & 1
If CheckBolsa = True Then refundidopermisos = refundidopermisos & 2 Else refundidopermisos = refundidopermisos & 1
If CheckSus = True And CheckIos = False Then cara = cara & "#P" & refundidopermisos
If CheckIos = True Then cara = cara & "#I"
HC.Range("cu" & ActiveCell.Row) = cara
HC.Cambiar_Servicio ActiveCell.Row
HC.CambiarFiltroDato HC.Range("g13"), 7
If HC.Range("cn10") = 1 Then
    HC.CambiarFiltroDato HC.Range("a13"), 1
    HC.CambiarFiltroDato HC.Range("b13"), 2
    HC.CambiarFiltroDato HC.Range("c13"), 3
    HC.CambiarFiltroDato HC.Range("d13"), 4
End If
Application.ScreenUpdating = True
saltar:
End Sub
Private Sub BtnEnviarPlanificacion_Click()
If checkenvios = True Then
    If correo <> "" And (CheckSus = True Or CheckIos = True) Then
        GrabaResultados
        HAPP.Range("a1") = "Mod 1 Cuadrante OG.11/14" 'Titulo
        If CheckIos = True Then msg = MsgBox("Envio alternativo. El usuario recibira una imagen de la planificaci|fffd|n", vbInformation, "Envio Alternativo")
        ConstruirEnvioCuadrante ActiveCell.Row, correo, CheckIos, True
    Else
        msg = MsgBox("Esta persona no se ha configurado para hacer envio de planificacion", vbCritical, "No se envia")
    End If
Else
    msg = MsgBox("No se ha configurado el metodo de envio correctamente para poder realizar envios.", vbCritical, "Configuracion de Salida")
End If
End Sub
Attribute VB_Name = "MENUPLANES"
Attribute VB_Base = "0{4D5BBF41-216C-4435-805B-36D2F97BAF3D}{521F8563-8A28-4E31-AD82-24649E17934B}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Dim fila
Sub ACTUALIZA()
If ActiveCell.Row >= 414 Then
    fila = -51
Else
    fila = 360 + HC.BarraEstrategia
End If
codeG = HC.Cells(ActiveCell.Row + fila, ActiveCell.Column + 88)
If codeG <> "" Then
    Separador = HC.Cells(ActiveCell.Row + fila, 89)
    Codec = left(codeG, InStr(codeG, "#@") - 1)
    coden = Mid(codeG, InStr(codeG, "#@") + 2)
    If InStr(Codec, Separador) > 0 Then
        Code1 = left(Codec, InStr(Codec, Separador) - 1)
        Codec = Mid(Codec, InStr(Codec, Separador) + 1, 50)
        If InStr(Codec, Separador) > 0 Then
            Code2 = left(Codec, InStr(Codec, Separador) - 1)
            Code3 = Mid(Codec, InStr(Codec, Separador) + 1, 50)
        Else
            Code2 = Codec
        End If
    Else
       Code1 = Codec
    End If
    MinCode1 = Int(Mid(coden, 1, 2))
    MinCode2 = Int(Mid(coden, 5, 2))
    MinCode3 = Int(Mid(coden, 9, 2))
    MaxCode1 = Int(Mid(coden, 3, 2))
    MaxCode2 = Int(Mid(coden, 7, 2))
    MaxCode3 = Int(Mid(coden, 11, 2))
    ActualizaLabels
End If
End Sub
Private Sub ActualizaLabels()
divisor = Val(HC.Range("cv" & ActiveCell.Row + fila)) + 1
If Code1 <> "" Then
    ActualCode1 = HC.ContarServicios(Code1, ActiveCell.Column, HC.Cells(ActiveCell.Row + fila, 99)) / divisor
    If (ActualCode1 < MinCode1 And MinCode1 > 0) Or (ActualCode1 > MaxCode1 And MaxCode1 > 0) Then
        ActualCode1.BackColor = RGB(200, 0, 0)
    Else
        ActualCode1.BackColor = RGB(0, 200, 0)
    End If
End If
If Code2 <> "" Then
    ActualCode2 = HC.ContarServicios(Code2, ActiveCell.Column, HC.Cells(ActiveCell.Row + fila, 99)) / divisor
    If (ActualCode2 < MinCode2 And MinCode2 > 0) Or (ActualCode2 > MaxCode2 And MaxCode2 > 0) Then
        ActualCode2.BackColor = RGB(200, 0, 0)
    Else
        ActualCode2.BackColor = RGB(0, 200, 0)
    End If
End If
If Code3 <> "" Then
    ActualCode3 = HC.ContarServicios(Code3, ActiveCell.Column, HC.Cells(ActiveCell.Row + fila, 99)) / divisor
    If (ActualCode3 < MinCode3 And MinCode3 > 0) Or (ActualCode3 > MaxCode3 And MaxCode3 > 0) Then
        ActualCode3.BackColor = RGB(200, 0, 0)
    Else
        ActualCode3.BackColor = RGB(0, 200, 0)
    End If
End If
End Sub

Private Sub BtnSelCode1_Click()
HC.CodigoDevuelto = ""
SELECCIONADOR.TIPO = "Serv"
SELECCIONADOR.inicia
SELECCIONADOR.Show
If HC.CodigoDevuelto <> "" Then Code1 = HC.CodigoDevuelto
End Sub

Private Sub BtnSelCode2_Click()
HC.CodigoDevuelto = ""
SELECCIONADOR.TIPO = "Serv"
SELECCIONADOR.inicia
SELECCIONADOR.Show
If HC.CodigoDevuelto <> "" Then Code2 = HC.CodigoDevuelto
End Sub

Private Sub BtnSelCode3_Click()
HC.CodigoDevuelto = ""
SELECCIONADOR.TIPO = "Serv"
SELECCIONADOR.inicia
SELECCIONADOR.Show
If HC.CodigoDevuelto <> "" Then Code3 = HC.CodigoDevuelto
End Sub
Private Sub Code1_Change()
If Code1 <> "" Then
    Frame2.Visible = True
Else
    Frame2.Visible = False
End If
End Sub
Private Sub Code2_Change()
If Code2 <> "" Then
    Frame3.Visible = True
Else
    Frame3.Visible = False
End If
End Sub
Private Sub SpinMin1_SpinDown()
If IsNumeric(MinCode1) Then MinCode1 = MinCode1 - 1
If MinCode1 < 0 Then MinCode1 = 0
ActualizaLabels
End Sub
Private Sub SpinMin1_SpinUp()
If IsNumeric(MinCode1) Then
    MinCode1 = MinCode1 + 1
    If MinCode1 > 99 Then MinCode1 = 99
    ActualizaLabels
End If
End Sub
Private Sub SpinMin2_SpinDown()
If IsNumeric(MinCode2) Then
    MinCode2 = MinCode2 - 1
    If MinCode2 < 0 Then MinCode2 = 0
    ActualizaLabels
End If
End Sub
Private Sub SpinMin2_SpinUp()
If IsNumeric(MinCode2) Then
    MinCode2 = MinCode2 + 1
    If MinCode2 > 99 Then MinCode2 = 99
    ActualizaLabels
End If
End Sub
Private Sub SpinMin3_SpinDown()
If IsNumeric(MinCode3) Then
    MinCode3 = MinCode3 - 1
    If MinCode3 < 0 Then MinCode3 = 0
    ActualizaLabels
End If
End Sub
Private Sub SpinMin3_SpinUp()
If IsNumeric(MinCode3) Then
    MinCode3 = MinCode3 + 1
    If MinCode3 > 99 Then MinCode3 = 99
    ActualizaLabels
End If
End Sub

Private Sub Spinmax1_SpinDown()
If IsNumeric(MaxCode1) Then
    MaxCode1 = MaxCode1 - 1
    If MaxCode1 < 0 Then MaxCode1 = 0
    ActualizaLabels
End If
End Sub
Private Sub SpinMax1_SpinUp()
If IsNumeric(MaxCode1) Then
    MaxCode1 = MaxCode1 + 1
    If MaxCode1 > 99 Then MaxCode1 = 99
    ActualizaLabels
End If
End Sub
Private Sub SpinMax2_SpinDown()
If IsNumeric(MaxCode2) Then
    MaxCode2 = MaxCode2 - 1
    If MaxCode2 < 0 Then MaxCode2 = 0
    ActualizaLabels
End If
End Sub
Private Sub SpinMax2_SpinUp()
If IsNumeric(MaxCode2) Then
    MaxCode2 = MaxCode2 + 1
    If MaxCode2 > 99 Then MaxCode2 = 99
    ActualizaLabels
End If
End Sub
Private Sub SpinMax3_SpinDown()
If IsNumeric(MaxCode3) Then MaxCode3 = MaxCode3 - 1
    If MaxCode3 < 0 Then
    MaxCode3 = 0
    ActualizaLabels
End If
End Sub
Private Sub SpinMax3_SpinUp()
If IsNumeric(MaxCode3) Then
    MaxCode3 = MaxCode3 + 1
    If MaxCode3 > 99 Then MaxCode3 = 99
    ActualizaLabels
End If
End Sub
Private Sub UserForm_Initialize()
Code1_Change
Code2_Change
ACTUALIZA
End Sub
Private Sub UserForm_QueryClose(Cancel As Integer, CloseMode As Integer)
Application.ScreenUpdating = False
Application.EnableEvents = False
If Code1 <> "" Or Code2 <> "" Or Code3 <> "" Then
    If IsNumeric(MinCode1) = False Then MinCode1 = 0
    If IsNumeric(MinCode2) = False Then MinCode2 = 0
    If IsNumeric(MinCode3) = False Then MinCode3 = 0
    If IsNumeric(MaxCode1) = False Then MaxCode1 = 0
    If IsNumeric(MaxCode2) = False Then MaxCode2 = 0
    If IsNumeric(MaxCode3) = False Then MaxCode3 = 0
    If Code1 <> "" Then
        codeG = Code1
        If Code2 <> "" Then
            codeG = codeG & HC.Cells(ActiveCell.Row + fila, 89) & Code2
            If Code3 <> "" Then
                codeG = codeG & HC.Cells(ActiveCell.Row + fila, 89) & Code3
            End If
        End If
    End If
    HC.Cells(ActiveCell.Row + fila, ActiveCell.Column + 88) = codeG & "#@" & Format(MinCode1, "00") & Format(MaxCode1, "00") & Format(MinCode2, "00") & Format(MaxCode2, "00") & Format(MinCode3, "00") & Format(MaxCode3, "00")
Else
    HC.Cells(ActiveCell.Row + fila, ActiveCell.Column + 88) = ""
End If
Unload Me
HC.VerEstrategias
Application.EnableEvents = True
Application.ScreenUpdating = False
End Sub

Attribute VB_Name = "MENUPLANTILLAS"
Attribute VB_Base = "0{12307FE2-4E2C-45CD-BF42-5FB5DAD45459}{251182DC-CC27-4771-8F18-6E4B36E33B7F}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False

Public base
Private Sub BtnEliminar_Click()
If ListPlantillas.ListIndex > -1 Then
    For i = 1 To 300
        If HBDP.Range("a" & i) = ListPlantillas.Value Then
            HBDP.Range("a" & i & ":ag299").Value = HBDP.Range("a" & i + 1 & ":ag300").Value
            Exit For
        End If
    Next
End If
ACTUALIZA
ListPlantillas.ListIndex = -1
End Sub

Private Sub Filtro_Change()
If Filtro <> "" Then SpinOdenar.Enabled = False Else SpinOdenar.Enabled = True
ACTUALIZA
End Sub

Private Sub SpinOdenar_SpinDown()
If ListPlantillas.ListIndex < ListPlantillas.ListCount - 1 And ListPlantillas.ListIndex > -1 Then
    sel = ListPlantillas.ListIndex + 1
    HBDP.Range("a401:bg401").Value = HBDP.Range("a" & sel & ":bg" & sel).Value
    HBDP.Range("a" & sel & ":bg" & sel).Value = HBDP.Range("a" & sel + 1 & ":bg" & sel + 1).Value
    HBDP.Range("a" & sel + 1 & ":bg" & sel + 1).Value = HBDP.Range("a401:bg401").Value
    ACTUALIZA
    ListPlantillas.ListIndex = sel
End If
End Sub
Private Sub SpinOdenar_SpinUp()
If ListPlantillas.ListIndex > 0 Then
    sel = ListPlantillas.ListIndex + 1
    HBDP.Range("a401:bg401").Value = HBDP.Range("a" & sel & ":bg" & sel).Value
    HBDP.Range("a" & sel & ":bg" & sel).Value = HBDP.Range("a" & sel - 1 & ":bg" & sel - 1).Value
    HBDP.Range("a" & sel - 1 & ":bg" & sel - 1).Value = HBDP.Range("a401:bg401").Value
    ACTUALIZA
    ListPlantillas.ListIndex = sel - 2
End If
End Sub
Sub ACTUALIZA()
ListPlantillas.Clear
For i = 1 To 300
    If HBDP.Range("A" & i) <> "" Then
        If Filtro <> "" Then
            If InStr(1, HBDP.Range("A" & i), Filtro.Value, vbTextCompare) > 1 Then ListPlantillas.AddItem HBDP.Range("A" & i)
        Else
            ListPlantillas.AddItem HBDP.Range("A" & i)
        End If
    End If
Next
End Sub
Private Sub BtnInsertar_Click()
 nuevo = HBDP.Range("a300").End(xlUp).Row + 1
    If nuevo < 300 Then
        inp = InputBox("Define un nombre a estos detalles de servicio:", "Guardar detalles")
        For i = 1 To 300
            If HBDP.Range("a" & i) = inp Then
                msg = MsgBox("Este favorito ya esta creado, por favor selecciona otro nombre", vbCritical, "Nombre repetido")
                GoTo fin
            End If
        Next
        If inp <> "" Then
            HBDP.Range("a" & nuevo) = "(" & inp & ") " & HN.Range("G4") & " " & Format(HN.Range("g6"), "dd/mm") & " - " & HBDN.Range("c" & MENUPLANTILLAS.base)
            HBDP.Range("b" & nuevo & ":ad" & nuevo).Value = HBDN.Range("ae" & MENUPLANTILLAS.base & ":bg" & MENUPLANTILLAS.base).Value
        End If
    End If
fin:
End Sub
Private Sub ListPlantillas_DblClick(ByVal Cancel As MSForms.ReturnBoolean)
aceptar
End Sub
Private Sub BtnAceptar_Click()
aceptar
End Sub
Private Sub aceptar()
If ListPlantillas.ListIndex <> -1 Then
    For i = 1 To 300
        If HBDP.Range("a" & i) = ListPlantillas.Value Then
            HBDN.Range("BF" & MENUPLANTILLAS.base).NumberFormat = "@"
            HBDN.Range("ae" & MENUPLANTILLAS.base & ":bg" & MENUPLANTILLAS.base).Value = HBDP.Range("b" & i & ":ad" & i).Value
            HBDN.Range("bj" & MENUPLANTILLAS.base).Value = HBDP.Range("ag" & i).Value
            HBDN.Range("bk" & MENUPLANTILLAS.base).Value = HBDP.Range("ah" & i).Value
            Unload Me
            Exit For
        End If
    Next
    If CheckDefecto = True Then HN.Range("ah4:bj4").Value = HBDP.Range("b" & i & ":ad" & i).Value
End If
End Sub

Attribute VB_Name = "MENUREFUNDIR"
Attribute VB_Base = "0{0154C584-F006-4BB2-A0F3-2C8F1CFB4E53}{F75011BD-A258-4D34-983A-191707AB9065}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Dim LIBROIMPORTAR

Private Sub CheckServicios_Click()
If CheckServicios = True Then
    CheckComentarios.Enabled = True
    CheckDatosAnteriores.Enabled = True
Else
    CheckComentarios.Enabled = False
    CheckDatosAnteriores.Enabled = False
    CheckComentarios = False
    CheckDatosAnteriores = False
End If
End Sub

Private Sub SelTodos_Click()
indice = 0
For Each fila In ListPersonal.List
    If SelTodos = True Then
        ListPersonal.Selected(indice) = True
    Else
        ListPersonal.Selected(indice) = False
    End If
    indice = indice + 1
Next
End Sub
Private Sub UserForm_Initialize()
MENUREFUNDIR.Height = 335
MENUREFUNDIR.Width = 235
End Sub
Private Sub BtnImportar_Click()
Dim fileimportar As Variant
Dim origen As Workbook
Dim Listado As Worksheet
Application.ScreenUpdating = False
With Application.FileDialog(msoFileDialogOpen)
    .AllowMultiSelect = False
    .Filters.Clear
    .Filters.Add "Archivo REFUNDIR", "*.CSV", 1
    .Title = "Archivo CSV para REFUNDIR datos de otro Cuadrante"
    If .Show = -1 Then
        For Each fileimportar In .SelectedItems
            If IsFileOpen(.SelectedItems(1)) Then
                msg = MsgBox("El archivo seleccionado se encuentra abierto y no se puede leer. Cierra el archivo y vuelve a intentarlo", vbCritical, "Cierra el origen")
                GoTo fin
            Else
                Set origen = Workbooks.Open(fileimportar)
            End If
            Set Listado = origen.Sheets(1)
            If Listado.Range("b1") = "REFUNDIR" Then
                MENUREFUNDIR.Caption = "Seleccione el personal que quieres REFUNDIR"
                MENUREFUNDIR.Height = 367
                MENUREFUNDIR.Width = 469
                BtnRefundir.Visible = True
                BtnImportar.Visible = False
                BtnExportar.Visible = False
                SelTodos.Visible = True
                FrameOpciones.Visible = True
                ListPersonal.Visible = True
                If Listado.Range("dc304").End(xlUp).Row = 3 Then
                    ListPersonal.AddItem Listado.Range("dc3").Value
                Else
                    ListPersonal.List = Listado.Range("dc3:dc" & Listado.Range("dc304").End(xlUp).Row).Value
                End If
                If Listado.Range("a2") = HC.Range("ba3") & HC.Range("ba4") Then
                    CheckServicios = True
                    CheckComentarios = True
                    CheckDatosAnteriores = True
                    origen.Close savechanges:=False
                Else
                    CheckServicios = False
                    CheckComentarios = False
                    CheckDatosAnteriores = False
                    CheckServicios.Enabled = False
                    CheckComentarios.Enabled = False
                    CheckDatosAnteriores.Enabled = False
                    origen.Close savechanges:=False
                    msg = MsgBox("Debido a que el mes seleccionado no corresponde el archivo de refundido algunas opciones se han deshabilitado.", vbExclamation, "Advertencia")
                End If
                LIBROIMPORTAR = fileimportar
            Else
                origen.Close savechanges:=False
                msg = MsgBox("No se trata de un archivo de refundidos valido.", vbCritical, "No se puede Refundir ")
            End If
        Next
    End If
End With
'fallo:
fin:
Application.ScreenUpdating = True
End Sub
Private Sub BtnExportar_Click()
MENUREFUNDIR.Caption = "Seleccione el personal que quieres Exportar"
MENUREFUNDIR.Height = 367
MENUREFUNDIR.Width = 331
BtnImportar.Visible = False
BtnExportar.Visible = False
ListPersonal.Visible = True
SelTodos.Visible = True
If HC.Range("do313").End(xlUp).Row = 14 Then
    ListPersonal.AddItem (HC.Range("do14").Value)
Else
    ListPersonal.List = HC.Range("do14:do" & HC.Range("do313").End(xlUp).Row).Value
End If
BtnGenerar.Visible = True
End Sub
Private Sub BtnGenerar_Click()
Application.EnableEvents = False
Cuantos = 0
indice = 0
If ListPersonal.ListCount > 1 Then
    For Each fila In ListPersonal.List
        If ListPersonal.Selected(indice) = True Then Cuantos = Cuantos + 1
        indice = indice + 1
    Next
Else
    If ListPersonal.Selected(indice) = True Then Cuantos = Cuantos + 1
End If
If Cuantos > 0 Then
    Application.ScreenUpdating = False
    Dim fileimportar As Variant
    Dim destino As Workbook
    Dim Listado As Worksheet
    Set destino = Workbooks.Add
    Set Listado = destino.Sheets(1)
    Listado.Range("a1") = HC.Range("k1")
    Listado.Range("b1") = "REFUNDIR"
    Listado.Range("a2") = HC.Range("ba3") & HC.Range("ba4")
    filadestino = 3
    indice = 0
    If ListPersonal.ListCount > 1 Then
        For Each fila In ListPersonal.List
            If ListPersonal.Selected(indice) = True Then
                Listado.Range("a" & filadestino & ":gw" & filadestino).NumberFormat = "@"
                Listado.Range("a" & filadestino & ":dc" & filadestino).Value = HC.Range("m" & indice + 14 & ":do" & indice + 14).Value
                Listado.Range("DD" & filadestino & ":gw" & filadestino).Value = HBDC.Range("a" & HC.Range("dk" & indice + 14) & ":ct" & HC.Range("dk" & indice + 14)).Value
                filadestino = filadestino + 1
            End If
            indice = indice + 1
        Next
    Else
        If ListPersonal.Selected(indice) = True Then
                Listado.Range("a" & filadestino & ":gw" & filadestino).NumberFormat = "@"
                Listado.Range("a" & filadestino & ":dc" & filadestino).Value = HC.Range("m" & indice + 14 & ":do" & indice + 14).Value
                Listado.Range("DD" & filadestino & ":gw" & filadestino).Value = HBDC.Range("a" & HC.Range("dk" & indice + 14) & ":ct" & HC.Range("dk" & indice + 14)).Value
                filadestino = filadestino + 1
        End If
        indice = indice + 1
    End If
    Application.ScreenUpdating = True
    ag = Application.GetSaveAsFilename
    On Local Error Resume Next
    If ag <> "" And ag <> False Then
        If InStr(ag, ".csv") > 0 Then ext = "" Else ext = "csv"
        destino.SaveAs filename:=ag & ext, FileFormat:=xlCSV
        'msg = MsgBox("Genarado el archivo con " & Cuantos & " Efectivos", vbInformation, "IMPORTAR")
        Unload Me
    End If
    destino.Close savechanges:=False
End If
Application.EnableEvents = True
End Sub
Private Sub BtnRefundir_Click()
Application.ScreenUpdating = False
Application.EnableEvents = False
Dim origen As Workbook
Dim Listado As Worksheet
Set origen = Workbooks.Open(LIBROIMPORTAR)
Set Listado = origen.Sheets(1)
Faltatip = Falso
indice = 0
For fila = 0 To ListPersonal.ListCount - 1
    If ListPersonal.Selected(indice) = True Then
        fililLa = Application.Match(Listado.Range("dc" & indice + 3), HC.Range("do14:do313"), 0)
        If IsError(fililLa) = True Then
            fililLa = HC.Range("do314").End(xlUp).Row + 1
        Else
            fililLa = fililLa + 13
        End If
        HC.Range("ci" & fililLa & ":ct" & fililLa).Value = Listado.Range("bw" & indice + 3 & ":ch" & indice + 3).Value
        HC.Range("h" & fililLa & ":j" & fililLa).Value = HC.Range("cm" & fililLa & ":co" & fililLa).Value
        HC.Range("dc" & fililLa).Value = Listado.Range("cq" & indice + 3).Value
        HC.Range("do" & fililLa).Value = Listado.Range("dc" & indice + 3).Value
        If CheckServicios = True Then
            HC.Range("m" & fililLa & ":au" & fililLa).Value = Listado.Range("a" & indice + 3 & ":ai" & indice + 3).Value
        End If
        If CheckComentarios = True Then
            HC.Range("ax" & fililLa & ":cg" & fililLa).Value = Listado.Range("al" & indice + 3 & ":bu" & indice + 3).Value
        End If
        If CheckDatosAnteriores = True Then
            If HC.Range("cp" & fililLa) <> "" Then
                HC.Cambiar_Servicio fililLa
                pastfila = HC.Range("dk" & fililLa)
                If pastfila = "" Then
                    pastfila = (HC.Range("ba5") - 1) * 500
                    If HBDC.Range("A" & pastfila) = "" Then HBDC.Range("A" & pastfila) = "Correcciones"
                    For Vacio = pastfila + 1 To pastfila + 300
                        If HBDC.Range("ca" & Vacio) = "" Then
                            pastfila = Vacio
                            Exit For
                        End If
                    Next
                    If Vacio = pastfila + 300 Then
                        msg = MsgBox("No se puede realizar esta operacion", vbCritical, "Singularidad ocurrida")
                        GoTo fin
                    End If
                End If
                'Copiar mes anterior
                HBDC.Range("a" & pastfila & ":ct" & pastfila).NumberFormat = "@"
                HBDC.Range("a" & pastfila & ":ct" & pastfila).Value = Listado.Range("dd" & indice + 3 & ":gw" & indice + 3).Value
                'Establecer Calculo Manual
                HBDC.Range("bx" & pastfila) = "MANUAL"
            Else
                Faltatip = True
            End If
fin:
        End If
    End If
    indice = indice + 1
Next
If Faltatip = True Then msg = MsgBox("No se han podido establecer algunos datos por falta de definir el TIP", vbCritical, "Correciones")
origen.Close savechanges:=False
Unload Me
Application.EnableEvents = True
Application.ScreenUpdating = True
End Sub
Attribute VB_Name = "MENUSINGULARIZADOS"
Attribute VB_Base = "0{6751011A-706C-4A66-BF2D-99CAF1039F18}{199C4F8C-0B73-4FB4-9643-A0DA8F440209}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Private Sub BtnAbsoluto_MouseDown(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
If BtnAbsoluto = True Then BtnAbsoluto = False
    BtnRelativo = False
    BtnContinuo = False
    HC.Range("bg12") = 1
    LOffSet.Enabled = False
    DiasOffset.Enabled = False
End Sub
Private Sub BtnRelativo_MouseDown(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
    BtnAbsoluto = False
If BtnRelativo = True Then BtnRelativo = False
    BtnContinuo = False
    HC.Range("bg12") = 2
    LOffSet.Enabled = True
    DiasOffset.Enabled = True
End Sub
Private Sub BtnContinuo_MouseDown(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
    BtnAbsoluto = False
    BtnRelativo = False
If BtnContinuo = True Then BtnContinuo = False
    HC.Range("bg12") = 3
    LOffSet.Enabled = False
    DiasOffset.Enabled = False
End Sub
Private Sub UserForm_Initialize()
If HC.Range("bg12") = 1 Then BtnAbsoluto = True
If HC.Range("bg12") = 2 Then
    BtnRelativo = True
    LOffSet.Enabled = True
    DiasOffset.Enabled = True
End If
If HC.Range("bg12") = 3 Then BtnContinuo = True
DiasOffset.Value = HC.Range("bh12").Value
End Sub
Private Sub UserForm_QueryClose(Cancel As Integer, CloseMode As Integer)
If BtnRelativo = True Then
    If DiasOffset.Value >= 5 And DiasOffset.Value < 26 Then
        HC.Range("bh12").Value = DiasOffset.Value
    Else
        msg = MsgBox("Indique un numero de dias valido entre 5 y 25 dias", vbCritical, "Modo Relativo")
        Cancel = True
    End If
Else
End If
Me.Hide
Application.EnableEvents = False
Application.ScreenUpdating = False
HC.Refrescar 1
Application.EnableEvents = True
Application.ScreenUpdating = True
End Sub
Attribute VB_Name = "MENUTUINFORME"
Attribute VB_Base = "0{4F963DE1-F068-4C43-8B95-70B9F540C6EE}{34577411-0346-490A-9601-5B607E01469A}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Private Sub SpinFilas_Change()
Filas.Caption = SpinFilas.Value
End Sub
Private Sub UserForm_Initialize()
For c = 1 To 14
    Controls("sel" & c).List = HCON.Range("bu3:bu23").Value
    Controls("sel" & c).ListIndex = HCON.Range("bv" & c + 3)
Next
For c = 1 To 13
    Controls("uni" & c) = HCON.Range("bw" & c + 3)
Next
SpinFilas_Change
End Sub
Private Sub BtnAceptar_Click()
Application.ScreenUpdating = False
For c = 1 To 14
    HCON.Range("bv" & c + 3) = Controls("sel" & c).ListIndex
Next
For c = 1 To 13
    HCON.Range("bw" & c + 3) = Controls("uni" & c)
Next
Application.ScreenUpdating = True
Unload Me
End Sub
Attribute VB_Name = "MENUUSERS"
Attribute VB_Base = "0{42BE4D5C-C9E6-4397-BEC5-F78FB861A104}{0798A3C1-E79B-4E43-AB6D-FA9A67D5BF54}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Dim modo As Boolean
Public pos As Integer
Private Sub BtnAdmin_Click()
If HCON.Range("ag6") = True Then
    Me.Width = 600
    Me.Height = 375
    modo = True
    BtnAdmin.Visible = False
Else
    msg = MsgBox("Solo los SUPERUSUARIOS pueden administrar otros usuarios", vbCritical, "Seguridad")
End If
End Sub
Private Sub ChkSuper_Click()
If ChkSuper = True Then
    ChkSuper = True
    ChkPlanificar = True
    ChkCatalogos = True
    ChkValidaciones = True
    ChkOpciones = True
    ChkDatosPersonal = True
    ChkEstrategias = True
    ChkCorreciones = True
    ChkInformes = True
    FHabilitados.Enabled = False
Else
    FHabilitados.Enabled = True
End If
End Sub

Private Sub Frame1_Click()

End Sub

Private Sub UserForm_Initialize()
ACTUALIZA
End Sub
Private Sub ACTUALIZA()
BtnUser1.Caption = HCON.Range("ah4")
BtnUser2.Caption = HCON.Range("ai4")
BtnUser3.Caption = HCON.Range("aj4")
BtnUser4.Caption = HCON.Range("ak4")
BtnAdmin.Visible = True
modo = False
Me.Height = 152.25
If HCON.Range("ak4") <> "" Then
    Me.Width = 600
ElseIf HCON.Range("aj4") <> "" Then
    Me.Width = 446.25
ElseIf HCON.Range("ai4") <> "" Then
    Me.Width = 306.75
Else
    Me.Width = 161.25
End If
End Sub
Private Sub BtnUser1_Click()
Usuario 1
End Sub
Private Sub BtnUser2_Click()
Usuario 2
End Sub
Private Sub BtnUser3_Click()
Usuario 3
End Sub
Private Sub BtnUser4_Click()
Usuario 4
End Sub
Private Sub Usuario(col As Integer)
MENUUSERS.pos = col
BtnAceptar.Enabled = False
If HCON.Cells(5, 33 + col) <> "" Then
    LPass.Visible = True
    Pasword.Visible = True
    Pasword.SetFocus
Else
    If modo = True Then
        EditCorrecta col
        BtnAceptar.Enabled = True
    Else
        If HCON.Cells(4, 33 + col) <> "" Then Correcta col
    End If
End If
End Sub
Private Sub Pasword_Change()
If Pasword = HCON.Cells(5, 33 + pos).Text Or Pasword = HCON.Cells(5, 34).Text Then
    If modo = True Then
        EditCorrecta MENUUSERS.pos
        BtnAceptar.Enabled = True
        Pasword.Visible = False
        LPass.Visible = False
        Pasword = ""
    Else
        Correcta pos
        Unload Me
    End If
End If
End Sub
Private Sub EditCorrecta(col As Integer)
Nombre = HCON.Cells(4, 33 + col)
Pass1 = HCON.Cells(5, 33 + col)
Pass2 = HCON.Cells(5, 33 + col)
FHabilitados.Enabled = True
ChkSuper.Enabled = True
ChkSuper = HCON.Cells(6, 33 + col)
ChkPlanificar = HCON.Cells(7, 33 + col)
ChkCatalogos = HCON.Cells(8, 33 + col)
ChkValidaciones = HCON.Cells(9, 33 + col)
ChkOpciones = HCON.Cells(10, 33 + col)
ChkDatosPersonal = HCON.Cells(11, 33 + col)
ChkEstrategias = HCON.Cells(12, 33 + col)
ChkCorreciones = HCON.Cells(13, 33 + col)
ChkInformes = HCON.Cells(14, 33 + col)
If col = 1 Then
    ChkSuper.Enabled = False
    ChkSuper = True
    ChkPlanificar = True
    ChkCatalogos = True
    ChkValidaciones = True
    ChkOpciones = True
    ChkDatosPersonal = True
    ChkEstrategias = True
    ChkCorreciones = True
    ChkInformes = True
    FHabilitados.Enabled = False
End If
End Sub
Private Sub Correcta(col As Integer)
    HCON.Range("ag4:ag14").Value = HCON.Range(HCON.Cells(4, 33 + col), HCON.Cells(14, 33 + col)).Value
    Unload Me
End Sub
Private Sub BtnAceptar_Click()
If Nombre = "" And pos = 1 Then ' Para borrar usuarios
    msg = MsgBox("El nombre de este Administrador no puede estar vacio!!", vbCritical, "Requerido")
ElseIf Nombre = "" Then
    HCON.Cells(4, 33 + MENUUSERS.pos) = ""
    HCON.Cells(5, 33 + MENUUSERS.pos) = ""
    HCON.Cells(6, 33 + MENUUSERS.pos) = False
    HCON.Cells(7, 33 + MENUUSERS.pos) = False
    HCON.Cells(8, 33 + MENUUSERS.pos) = False
    HCON.Cells(9, 33 + MENUUSERS.pos) = False
    HCON.Cells(10, 33 + MENUUSERS.pos) = False
    HCON.Cells(11, 33 + MENUUSERS.pos) = False
    HCON.Cells(12, 33 + MENUUSERS.pos) = False
    HCON.Cells(13, 33 + MENUUSERS.pos) = False
    HCON.Cells(14, 33 + MENUUSERS.pos) = False
    ACTUALIZA
Else
    If Pass1 = Pass2 Then
        HCON.Cells(4, 33 + MENUUSERS.pos) = Nombre
        HCON.Cells(5, 33 + MENUUSERS.pos) = Pass1
        HCON.Cells(6, 33 + MENUUSERS.pos) = ChkSuper
        HCON.Cells(7, 33 + MENUUSERS.pos) = ChkPlanificar
        HCON.Cells(8, 33 + MENUUSERS.pos) = ChkCatalogos
        HCON.Cells(9, 33 + MENUUSERS.pos) = ChkValidaciones
        HCON.Cells(10, 33 + MENUUSERS.pos) = ChkOpciones
        HCON.Cells(11, 33 + MENUUSERS.pos) = ChkDatosPersonal
        HCON.Cells(12, 33 + MENUUSERS.pos) = ChkEstrategias
        HCON.Cells(13, 33 + MENUUSERS.pos) = ChkCorreciones
        HCON.Cells(14, 33 + MENUUSERS.pos) = ChkInformes
        ACTUALIZA
    Else
        msg = MsgBox("La contrase|fffd|a no es igual a la contrase|fffd|a de verificacion!", vbCritical, "No son iguales")
    End If
End If
End Sub
Private Sub UserForm_QueryClose(Cancel As Integer, CloseMode As Integer)
If CloseMode = 0 And HCON.Range("ag4") = "" Then
    msg = MsgBox("Sin un usuario seleccionado no se podr|fffd| editar ni guardar esta sesion.", vbInformation, "No registrado")
End If
End Sub
Attribute VB_Name = "MENUVISUAL"
Attribute VB_Base = "0{CECC5F78-CB3C-4422-918F-672467D2CA32}{3D22059C-1184-4CB0-82CE-F2B8BB221D83}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Dim REFRESCO As Boolean
Private Sub AlertaTardeDescanso_MouseUp(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
Application.EnableEvents = False
REFRESCO = True
If AlertaTardeDescanso = True Then
    HC.Range("BH4") = False
    AlertaNoDSPrimero.Enabled = False
Else
    AlertaNoDSPrimero.Enabled = True
End If
Application.EnableEvents = True
End Sub

Private Sub BtnApliSkin_Click()
If Skin1.Value = True Then
col = 100
HCON.Range("CV16") = 1
ElseIf Skin2.Value = True Then
col = 101
HCON.Range("CV16") = 2
ElseIf Skin3.Value = True Then
col = 102
HCON.Range("CV16") = 3
ElseIf Skin4.Value = True Then
col = 103
HCON.Range("CV16") = 4
End If

Application.ScreenUpdating = False
Application.EnableEvents = False
'------------Hoja del Cuadrante
' Encabezado
HC.Range("e1:av1").Interior.ColorIndex = HCON.Cells(18, col)
HC.Range("k1", "m1").Font.ColorIndex = HCON.Cells(19, col)
HC.Range("aa1").Font.ColorIndex = HCON.Cells(21, col) ' Correo electronico
'Zona Contar
HC.Range("e2:l10").Interior.ColorIndex = HCON.Cells(26, col) ' zona sin unso
HC.Range("AV2:AV313").Interior.ColorIndex = HCON.Cells(26, col) ' ZON SIN USO
HC.Range("i3:au9").Interior.ColorIndex = HCON.Cells(18, col) ' Zona contar
HC.Range("i3:j9").Font.ColorIndex = HCON.Cells(20, col)
HC.Range("l3:au9").Font.ColorIndex = HCON.Cells(19, col)
HC.Range("K3:L9").Interior.Pattern = xlPatternLightUp
' ---
HC.Range("e3").Font.ColorIndex = HCON.Cells(23, col) ' Texto Mes
HC.Range("g11", "i11").Font.ColorIndex = HCON.Cells(23, col) ' filtros
HC.Range("e11:au13").Interior.ColorIndex = HCON.Cells(18, col) ' Fila dias
HC.Range("f13", "g13").Font.ColorIndex = HCON.Cells(20, col) ' encabezados activos
HC.Range("h13:j13").Font.ColorIndex = HCON.Cells(19, col) ' encabezado nombres
HC.Range("k12:l13").Font.ColorIndex = HCON.Cells(22, col) 'dias anteriores
HC.Range("m12:AU13").Font.ColorIndex = HCON.Cells(19, col) ' dias
HC.Range("s12:s13").Font.ColorIndex = HCON.Cells(24, col) 'DOMINGO
HC.Range("z12:z13").Font.ColorIndex = HCON.Cells(24, col)
HC.Range("ag12:ag13").Font.ColorIndex = HCON.Cells(24, col)
HC.Range("an12:an13").Font.ColorIndex = HCON.Cells(24, col)
HC.Range("au12:au13").Font.ColorIndex = HCON.Cells(24, col)
'
'HC.Range("R12:R13").Font.ColorIndex = HCON.Cells(25, COL) 'SABADOS
'HC.Range("Y12:Y13").Font.ColorIndex = HCON.Cells(25, COL)
'HC.Range("aF12:aF13").Font.ColorIndex = HCON.Cells(25, COL)
'HC.Range("aM12:aM13").Font.ColorIndex = HCON.Cells(25, COL)
'HC.Range("aT12:aT13").Font.ColorIndex = HCON.Cells(25, COL)
HC.Range("R11:s13").Interior.PatternColorIndex = HCON.Cells(23, col)
HC.Range("R11:s13").Interior.Pattern = xlPatternLightDown
HC.Range("y11:z13").Interior.PatternColorIndex = HCON.Cells(23, col)
HC.Range("y11:z13").Interior.Pattern = xlPatternLightDown
HC.Range("af11:ag13").Interior.PatternColorIndex = HCON.Cells(23, col)
HC.Range("af11:ag13").Interior.Pattern = xlPatternLightDown
HC.Range("am11:an13").Interior.PatternColorIndex = HCON.Cells(23, col)
HC.Range("am11:an13").Interior.Pattern = xlPatternLightDown
HC.Range("at11:au13").Interior.PatternColorIndex = HCON.Cells(23, col)
HC.Range("at11:au13").Interior.Pattern = xlPatternLightDown
HC.DiasNombrados

'Boton Meses
HC.SpinMes.BackColor = HCON.Cells(27, col)
HC.SpinMes.ForeColor = HCON.Cells(28, col)

Application.EnableEvents = True
Application.ScreenUpdating = True
End Sub

Private Sub CheckColorAreas_MouseDown(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
REFRESCO = True
End Sub

Private Sub CheckMenos11h_Click()
REFRESCO = True
End Sub

'-----CELDAH
Private Sub SpinCeldaH_SpinDown()
If CeldaH > 3.5 Then
    CeldaH = CeldaH - 0.2
    HC.Range("k14:au14").ColumnWidth = CDbl(CeldaH)
End If
End Sub
Private Sub SpinCeldaH_SpinUp()
If CeldaH < 15 Then
    CeldaH = CeldaH + 0.2
    HC.Range("k14:au14").ColumnWidth = CDbl(CeldaH)
End If
End Sub
'-----CELDA V
Private Sub SpinCeldaV_SpinDown()
If CeldaV > 18 Then
    CeldaV = CeldaV - 1
    HC.Range("k14:m313").RowHeight = CDbl(CeldaV)
End If
End Sub
Private Sub SpinCeldaV_SpinUp()
If CeldaV < 55 Then
    CeldaV = CeldaV + 1
    HC.Range("k14:m313").RowHeight = CDbl(CeldaV)
End If
End Sub
Private Sub SpinDesvOKMas_Change()
HC.Range("bo1") = SpinDesvOKMas
DesvOkMas = SpinDesvOKMas
End Sub
Private Sub SpinDesvOKmenos_Change()
HC.Range("bo2") = SpinDesvOKMenos
DesvOkMenos = SpinDesvOKMenos
End Sub
Private Sub SpinDesvaltaMas_Change()
HC.Range("bo3") = SpinDesvAltaMas
DesvAltaMas = SpinDesvAltaMas
End Sub
Private Sub SpinDesvaltaMenos_Change()
HC.Range("bo4") = SpinDesvAltaMenos
DesvAltaMenos = SpinDesvAltaMenos
End Sub
Private Sub Spintfuente_Change()
TFuente.Caption = Spintfuente
HC.Range("k14:au313").Font.Size = Spintfuente
End Sub

'------ZOOM
Private Sub SpinZoom_SpinDown()
If Zoom > 50 Then
    Zoom = Zoom - 5
    ActiveWindow.Zoom = Zoom
End If
End Sub
Private Sub SpinZoom_SpinUp()
If Zoom < 150 Then
    Zoom = Zoom + 5
    ActiveWindow.Zoom = Zoom
End If
End Sub
'----INICIO
Private Sub UserForm_Initialize()
Application.EnableEvents = False
If HC.FilterMode = True Then
    HC.ShowAllData
End If
'HC.Range("g11") = "TODAS"
'HC.Range("i11") = "TODOS"
Zoom = ActiveWindow.Zoom
CeldaH.Caption = HC.Range("m14").ColumnWidth
CeldaV.Caption = 40
For f = 14 To 313
    If HC.Range("m" & f).EntireRow.Hidden = False And HC.Range("m" & f).RowHeight <> 0 Then CeldaV.Caption = HC.Range("m" & f).RowHeight
Next
Spintfuente = HC.Range("m14").Font.Size
TFuente = Spintfuente
DesvOkMas = HC.Range("bo1")
DesvOkMenos = HC.Range("bo2")
DesvAltaMas = HC.Range("bo3")
DesvAltaMenos = HC.Range("bo4")
SpinDesvOKMas = HC.Range("bo1")
SpinDesvOKMenos = HC.Range("bo2")
SpinDesvAltaMas = HC.Range("bo3")
SpinDesvAltaMenos = HC.Range("bo4")
'Skin actual
Controls("skin" & HCON.Range("cv16")) = True
Application.EnableEvents = True
If AlertaTardeDescanso = False Then AlertaNoDSPrimero.Enabled = False
End Sub
Private Sub UserForm_QueryClose(Cancel As Integer, CloseMode As Integer)
Application.ScreenUpdating = False
RestaurarTamaObj
ActiveWindow.Zoom = Zoom
HC.CVisual HC.Range("m13").ColumnWidth
HC.Range("k14:m313").RowHeight = CDbl(CeldaV)
If CheckAlineacion = False Then
    HC.Range("k14:au313").HorizontalAlignment = xlCenter
End If
REFRESCO = True
HC.Range("m14:au313").VerticalAlignment = xlVAlignDistributed
HC.Range("k14:au313").Font.Size = Spintfuente
If REFRESCO = True Then
    Me.Hide
    Application.EnableEvents = False
    HC.Refrescar 1
    Application.EnableEvents = True
End If
HC.AplicaFiltrosVer
Application.ScreenUpdating = True
End Sub
Attribute VB_Name = "MENUVISUALIMPRIMIR"
Attribute VB_Base = "0{7BEEDBD8-670A-4F95-9258-FF5A1F57CD27}{EAC30AE7-B8C9-428F-9ED8-A8DCEB241742}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Private Sub BtnMasAislar_Click()
If ListAislar.ListCount < 10 Then
    HC.CodigoDevuelto = ""
    SELECCIONADOR.TIPO = "Serv"
    SELECCIONADOR.inicia
    SELECCIONADOR.Show
    If HC.CodigoDevuelto <> "" Then ListAislar.AddItem (HC.CodigoDevuelto)
Else
    msg = MsgBox("Solo se pueden usar 10 codigos.", vbCritical, "Limite")
End If
End Sub

Private Sub BtnVistaPrevia_Click()
If RAPIDAS.Visible = True Then Unload RAPIDAS
If CAJONSERVICIOS.Visible = True Then Unload CAJONSERVICIOS
If SoloCalculos.Value = True Then
    ConstruirSoloCalculos
    #If VBA6 Then
        Application.ExecuteExcel4Macro ("show.toolbar(""ribbon"",1)")
    #End If
    With HICAL.PageSetup
        .Zoom = False
        .FitToPagesWide = 1
    End With
        HICAL.PrintPreview
    #If VBA6 Then
        Application.ExecuteExcel4Macro ("show.toolbar(""ribbon"",0)")
    #End If
    Application.CommandBars.ActiveMenuBar.Enabled = True
    Application.CommandBars.ActiveMenuBar.Enabled = False
ElseIf Planificacion = True Then
    Construir
    #If VBA6 Then
        Application.ExecuteExcel4Macro ("show.toolbar(""ribbon"",1)")
    #End If
    With HIC.PageSetup
        .Zoom = False
        .FitToPagesWide = 1
        .FitToPagesTall = 1
    End With
        HIC.PageSetup.PrintArea = HIC.Range("a2:aw318").Address
        HIC.PrintPreview
    #If VBA6 Then
        Application.ExecuteExcel4Macro ("show.toolbar(""ribbon"",0)")
    #End If
    If CheckSoloHorarios = True Then
        HIC.Range("F6:an305").RowHeight = CDbl(CeldaIV)
        HIC.Range("F6:an305").ColumnWidth = CDbl(CeldaIH) / 5
    End If
    Application.CommandBars.ActiveMenuBar.Enabled = True
    Application.CommandBars.ActiveMenuBar.Enabled = False
    Application.EnableEvents = True
    Application.ScreenUpdating = True
ElseIf Vicisitudes = True Then
    ConstruirVicisitudes
    Unload Me
    #If VBA6 Then
        Application.ExecuteExcel4Macro ("show.toolbar(""ribbon"",1)")
    #End If
    With HVICI.PageSetup
        .Zoom = False
        .FitToPagesWide = 1
        .PrintArea = HVICI.Range("a1:g" & HVICI.Range("e1500").End(xlUp).Row).Address
    End With
    HVICI.PrintPreview
    #If VBA6 Then
        Application.ExecuteExcel4Macro ("show.toolbar(""ribbon"",0)")
    #End If
    Application.CommandBars.ActiveMenuBar.Enabled = True
    Application.CommandBars.ActiveMenuBar.Enabled = False
    Application.EnableEvents = True
    Application.ScreenUpdating = True
End If
End Sub
Private Sub BtnEnviar_Click()
If RAPIDAS.Visible = True Then Unload RAPIDAS
If CAJONSERVICIOS.Visible = True Then Unload CAJONSERVICIOS
Dim rgExp As Range
CrearCarpetaApp
If SoloCalculos.Value = True Then
    ConstruirSoloCalculos
    HICAL.Activate
    If HICAL.ChartObjects.Count > 0 Then
        For Each ch In HICAL.ChartObjects
            ch.Delete
        Next
    End If
    Set rgExp = HICAL.Range(HICAL.PageSetup.PrintArea)
    rgExp.CopyPicture Appearance:=xlScreen, Format:=xlBitmap
    With HICAL.ChartObjects.Add(left:=rgExp.left, top:=rgExp.top, _
    Width:=rgExp.Width, Height:=rgExp.Height)
    .Name = "ChartVolumeMetricsDevEXPORT"
    .Activate
    End With
    ActiveChart.Paste
    HICAL.ChartObjects("ChartVolumeMetricsDevEXPORT").Chart.Export ThisWorkbook.Path & "\CuadrAPP\Informe.jpg"
    HICAL.ChartObjects("ChartVolumeMetricsDevEXPORT").Delete
    HC.Activate
    Application.ScreenUpdating = True
    Application.EnableEvents = True
ElseIf Planificacion = True Then
    Construir
    HIC.PageSetup.PrintArea = HIC.Range("a2:aw318").Address
    HIC.Activate
    If HIC.ChartObjects.Count > 0 Then
        For Each ch In HIC.ChartObjects
            ch.Delete
        Next
    End If
    HIC.Calculate
    Set rgExp = HIC.Range(HIC.PageSetup.PrintArea)
    rgExp.CopyPicture Appearance:=xlScreen, Format:=xlBitmap
    With HIC.ChartObjects.Add(left:=rgExp.left, top:=rgExp.top, Width:=rgExp.Width, Height:=rgExp.Height)
    .Name = "EXPORT"
    .Activate
    End With
    ActiveChart.Paste
    HIC.ChartObjects("EXPORT").Chart.Export ThisWorkbook.Path & "\CuadrAPP\Informe.jpg"
    HIC.ChartObjects("EXPORT").Delete
    HC.Activate
    If CheckSoloHorarios = True Then
        HIC.Range("F6:an305").RowHeight = CDbl(CeldaIV)
        HIC.Range("F6:an305").ColumnWidth = CDbl(CeldaIH) / 5
    End If
    Application.EnableEvents = True
    Application.ScreenUpdating = True
ElseIf Vicisitudes = True Then
    ConstruirVicisitudes
    HVICI.Activate
    If HVICI.ChartObjects.Count > 0 Then
        For Each ch In HVICI.ChartObjects
            ch.Delete
        Next
    End If
    HVICI.PageSetup.PrintArea = HVICI.Range("a1:g" & HVICI.Range("e1500").End(xlUp).Row).Address
    Set rgExp = HVICI.Range(HVICI.PageSetup.PrintArea)
    rgExp.CopyPicture Appearance:=xlScreen, Format:=xlBitmap
    With HVICI.ChartObjects.Add(left:=rgExp.left, top:=rgExp.top, _
    Width:=rgExp.Width, Height:=rgExp.Height)
    .Name = "ChartVolumeMetricsDevEXPORT"
    .Activate
    End With
    ActiveChart.Paste
    HVICI.ChartObjects("ChartVolumeMetricsDevEXPORT").Chart.Export ThisWorkbook.Path & "\CuadrAPP\Informe.jpg"
    HVICI.ChartObjects("ChartVolumeMetricsDevEXPORT").Delete
    HC.Activate
    Application.ScreenUpdating = True
    Application.EnableEvents = True
End If
MENUAPPINFORMES.TIPO = "PLANIFICACION"
MENUAPPINFORMES.Show
End Sub
Private Sub BtnCrearExcel_Click()
Dim newBook As Workbook
Dim newSheet As Worksheet
Dim fname As String
If SoloCalculos.Value = True Then
    Unload Me
    fname = InputBox("Nombre del Archivo: ", "Exportar Datos y calculos", "Datos Exportados " & HC.Range("e3"))
    If fname = "" Then GoTo fin
    On Error GoTo fin
    Set newBook = Workbooks.Add
    With newBook
        .Title = fname & ".xls"
        .SaveAs filename:=ThisWorkbook.Path & "\" & fname, ConflictResolution:=xlLocalSessionChanges
    End With
    Application.DisplayAlerts = False
    #If VBA7 Then
    
    #Else
        newBook.Sheets(3).Delete
        newBook.Sheets(2).Delete
    #End If
    Set newSheet = newBook.Sheets(1)
    newBook.Application.ScreenUpdating = False
    newSheet.Name = "DATOS " & HC.Range("e3")
    ConstruirSoloCalculos
    HICAL.Range("a1:ak" & HICAL.Range("aq4").Value).Copy
    newSheet.Range("a1").PasteSpecial xlPasteColumnWidths
    newSheet.Range("a1").PasteSpecial xlPasteValuesAndNumberFormats
    newSheet.Range("a1").PasteSpecial xlPasteFormats
    newSheet.PageSetup.PrintArea = newSheet.Range("A1:ak" & HICAL.Range("aq4")).Address
    With newSheet.PageSetup
        .LeftMargin = Application.InchesToPoints(0.2)
        .RightMargin = Application.InchesToPoints(0.2)
        .TopMargin = Application.InchesToPoints(0.2)
        .BottomMargin = Application.InchesToPoints(0.2)
        .Orientation = xlLandscape
        .Draft = False
        .Zoom = False
        .FitToPagesWide = 1
    End With
    newSheet.Range("a1").Select
    newBook.Close (True)
    msg = MsgBox("Se ha exportado el archivo correctamente ubicado en la misma carpeta de CUADRANTE", vbInformation, "CORRECTO")
    GoTo fin2
ElseIf Planificacion = True Then
    Construir
    fname = InputBox("Nombre del Archivo: ", "Exportar Cuadrante", "Cuadrante Exportado " & HC.Range("e3"))
    If fname = "" Then GoTo fin
    On Error GoTo fin
    Set newBook = Workbooks.Add
    With newBook
        .Title = fname & ".xls"
        .SaveAs filename:=ThisWorkbook.Path & "\" & fname, ConflictResolution:=xlLocalSessionChanges
    End With
    Application.DisplayAlerts = False
    #If VBA7 Then
    
    #Else
        newBook.Sheets(3).Delete
        newBook.Sheets(2).Delete
    #End If
    
    Set newSheet = newBook.Sheets(1)
    newBook.Application.ScreenUpdating = False
    newSheet.Name = "CUADRANTE " & HC.Range("e3")
    HIC.Range("a1:aw" & HIC.Range("c319").End(xlUp).Row).Copy
    newSheet.Range("a1").PasteSpecial xlPasteColumnWidths
    newSheet.Range("a1").PasteSpecial xlPasteValuesAndNumberFormats
    newSheet.Range("a1").PasteSpecial xlPasteFormats
    With newSheet.PageSetup
        .LeftMargin = Application.InchesToPoints(0.2)
        .RightMargin = Application.InchesToPoints(0.2)
        .TopMargin = Application.InchesToPoints(0.2)
        .BottomMargin = Application.InchesToPoints(0.2)
        .Draft = False
        .Zoom = False
        .Orientation = xlLandscape
        .FitToPagesWide = 1
        .FitToPagesTall = 1
    End With
    newSheet.Range("a1").Select
    newBook.Application.ScreenUpdating = True
    newBook.Worksheets(1).Range("a6:a306").RowHeight = CDbl(CeldaIV)
    newBook.Close (True)
    msg = MsgBox("Se ha exportado el archivo correctamente ubicado en la misma carpeta de CUADRANTE", vbInformation, "CORRECTO")
    GoTo fin2
fin:
    msg = MsgBox("No se exporta ningun archivo", vbExclamation, "Cancelado")
On Error Resume Next
    newBook.Close (False)
fin2:
    Application.ScreenUpdating = True
    If CheckSoloHorarios = True Then
        HIC.Range("F6:an305").RowHeight = CDbl(CeldaIV)
        HIC.Range("F6:an305").ColumnWidth = CDbl(CeldaIH) / 5
    End If
ElseIf Vicisitudes = True Then
    ConstruirVicisitudes
    fname = InputBox("Nombre del Archivo: ", "Exportar Informe de Vicisitudes", "Vicisitudes " & HC.Range("e3"))
    If fname = "" Then GoTo fin
    On Error GoTo fin3
    Set newBook = Workbooks.Add
    With newBook
        .Title = fname & ".xls"
        .SaveAs filename:=ThisWorkbook.Path & "\" & fname, ConflictResolution:=xlLocalSessionChanges
    End With

    Application.DisplayAlerts = False
    #If VBA7 Then
    
    #Else
        newBook.Sheets(3).Delete
        newBook.Sheets(2).Delete
    #End If
    Set newSheet = newBook.Sheets(1)
    newBook.Application.ScreenUpdating = False
    newSheet.Name = "CUADRANTE " & HC.Range("e3")
    HVICI.Range("a1:av1500").Copy
    newSheet.Range("a1").PasteSpecial xlPasteColumnWidths
    newSheet.Range("a1").PasteSpecial xlPasteValuesAndNumberFormats
    newSheet.Range("a1").PasteSpecial xlPasteFormats
    newSheet.Range("a1").Select
    newBook.Application.ScreenUpdating = True
    newBook.Close (True)
    msg = MsgBox("Se ha exportado el archivo correctamente ubicado en la misma carpeta de CUADRANTE", vbInformation, "CORRECTO")
    GoTo fin4
fin3:
    msg = MsgBox("No se exporta ningun archivo", vbExclamation, "Cancelado")
On Error Resume Next
    newBook.Close (False)
fin4:
    Application.ScreenUpdating = True
End If
Application.EnableEvents = True
End Sub
    Private Sub Construir()
    Application.ScreenUpdating = False
    Application.EnableEvents = False
    Calculate
    HIC.Range("aw319").EntireRow.Hidden = False
    If HIC.FilterMode = True Then
        HIC.ShowAllData 'Quitar filtor en su caso
    Else
 
    End If
    HIC.Range("a5:ba305").AutoFilter
    For n = 1 To 51
        HIC.Range("A5:ba305").AutoFilter field:=n, visibledropdown:=False
    Next

    HIC.Range("a1:av1").EntireColumn.Hidden = False
    HIC.Range("F5:an305").EntireRow.Hidden = False
    HIC.Range("a6:ap305").ClearContents 'borrar contenido
    HIC.Range("at6:au305").ClearContents 'borrar contenido
    HIC.Range("f6:an305").NumberFormat = "@"
    HIC.Range("b320:f519").Value = HCON.Range("k310:o509").Value
    HIC.Range("a6:a305").Value = HC.Range("cl14:cl313").Value ' AREA
    HIC.Range("b6:b305").Value = HC.Range("ck14:ck313").Value ' Empleo
    HIC.Range("c6:e305").Value = HC.Range("cm14:co313").Value 'Nombre y Apellidos izquierda
    ' Telefono o TIP
    If CheckTelefono = True Then
        HIC.Range("ap6:ap305").Value = HC.Range("cq14:cq313").Value
    Else
        HIC.Range("ap6:ap305").Value = HC.Range("cp14:cp313").Value
    End If
    HIC.Range("f4:an5").Value = HC.Range("m12:au13").Value ' Dias
    HIC.Range("BA6:BA305").Value = HC.Range("CS14:CS313").Value ' Imprimir
    HIC.Range("ao6:ao305").Value = HC.Range("cm14:cm313").Value ' Nombre Derecha
    
    '-CUADRANTE NORMAL
    HIC.Range("f6:an305").NumberFormat = "@"
    HIC.Range("f6:an305").Value = HC.Range("m14:au313").Value ' Cuadrante
    
    'Aislar a servicios
    If CheckAislar = True Then
        If ListAislar.ListCount > 0 Then
            Dim ais As Range
            For Each ais In HIC.Range("f6:an305").Cells
                For Lista = 0 To ListAislar.ListCount - 1
                    If ais = ListAislar.List(Lista) Then
                        GoTo noborra
                    ElseIf InStr(ais, ListAislar.List(Lista) & Chr(10)) > 0 Or InStr(ais, Chr(10) & ListAislar.List(Lista)) > 0 Then
                        ais = ListAislar.List(Lista)
                        GoTo noborra
                    End If
                Next
                ais = ""
noborra:
            Next
        End If
    End If
    
    'Pintar
    If CheckColor = True Then
        For p = 1 To HIC.Range("c306").End(xlUp).Row
            For d = 1 To 35
                HIC.Cells(p + 5, d + 5).Interior.ColorIndex = HC.Cells(p + 13, d + 12).Interior.ColorIndex
            Next
        Next
    Else
        For Each cel In HIC.Range("f4:an" & HIC.Range("c306").End(xlUp).Row).Cells
            'Si es situacion
            busqueda = Application.VLookup(cel, HIC.Range("B320:F519"), 5, 0)
            If IsError(busqueda) = True Then busqueda = ""
            If busqueda = "SITU" And cel.Row > 5 Then
                cel.Interior.ColorIndex = 16
                cel.Font.ColorIndex = 2
            ElseIf HC.Cells(322, cel.Column + 7) = "F" Then
                cel.Interior.ColorIndex = 45
                cel.Font.ColorIndex = 1
            ElseIf HIC.Cells(4, cel.Column) = "S" Or HIC.Cells(4, cel.Column) = "D" Then
                cel.Interior.ColorIndex = 40
                cel.Font.ColorIndex = 1
            Else
                cel.Interior.ColorIndex = 2
                cel.Font.ColorIndex = 1
            End If
        Next
    End If
    '=INDIRECTO("C!F322C"&COLUMNA(M$4);0)="F"
    '=CONSULTAV(F6;$B$320:$F$519;5;0)="SITU"
    HIC.Range("Ax6:Ax305").Value = HC.Range("CZ14:CZ313").Value 'Futuros DSA
    HIC.Range("Ay6:Ay305").Value = HC.Range("DP14:DP313").Value 'Futuros DSA
    HIC.Range("Az6:Az305").Value = HC.Range("DQ14:DQ313").Value 'Futuros DSA
    HIC.Range("AT6:AT305").Value = HC.Range("DB14:DB313").Value 'Futuros DF
    HIC.Range("Au6:Au305").Value = HC.Range("Da14:Da313").Value 'Futuros DCO
    HIC.Range("a7:au305").Cells.Borders(xlEdgeTop).Weight = xlThin
    
    HIC.Range("a1:au1").EntireColumn.Hidden = False
    '-Tama|fffd|o de celdas
    If CheckSoloHorarios = False Then
        HIC.Range("F6:an305").RowHeight = CDbl(CeldaIV)
        HIC.Range("F6:an305").ColumnWidth = CDbl(CeldaIH) / 5
        HIC.Range("a6:an305").Font.Size = TFuente.Caption
        HIC.Range("a4:an5").Font.Size = TFuente.Caption + 2
    Else
        HIC.Range("F6:an305").RowHeight = 35
        HIC.Range("F6:an305").ColumnWidth = 50 / 5
    End If
    '-Alineacion Celdas
    If Alineacion.ListIndex = 8 Or Alineacion.ListIndex = 5 Or Alineacion.ListIndex = 2 Then
        HIC.Range("F6:an305").HorizontalAlignment = xlRight
    End If
    If Alineacion.ListIndex = 7 Or Alineacion.ListIndex = 4 Or Alineacion.ListIndex = 1 Then
        HIC.Range("F6:an305").HorizontalAlignment = xlCenter
    End If
    If Alineacion.ListIndex = 0 Or Alineacion.ListIndex = 3 Or Alineacion.ListIndex = 6 Then
        HIC.Range("F6:an305").HorizontalAlignment = xlLeft
    End If

    If Alineacion.ListIndex = 6 Or Alineacion.ListIndex = 7 Or Alineacion.ListIndex = 8 Then
        HIC.Range("F6:an305").VerticalAlignment = xlBottom
    End If
    If Alineacion.ListIndex = 3 Or Alineacion.ListIndex = 4 Or Alineacion.ListIndex = 5 Then
        HIC.Range("F6:an305").VerticalAlignment = xlVAlignCenter
    End If
    If Alineacion.ListIndex = 0 Or Alineacion.ListIndex = 1 Or Alineacion.ListIndex = 2 Then
        HIC.Range("F6:an305").VerticalAlignment = xlTop
    End If
    '-FILTRAR
    HIC.Range("A5:BA305").AutoFilter field:=3, Criteria1:="<>", visibledropdown:=False
    HIC.Range("A5:BA305").AutoFilter field:=53, Criteria1:="<>NO", visibledropdown:=False
    If CheckSoloUnArea = True Then
        HIC.Range("A5:BA305").AutoFilter field:=1, Criteria1:=SelAreaUnico, visibledropdown:=False
    End If
    '-Filtrar areas
    If CheckFiltroArea.Value = True Then
        HIC.Range("A5:BA305").Sort key1:=HIC.Range("A5"), order1:=xlAscending, header:=xlYes, OrderCustom:=1, MatchCase:=False, Orientation:=xlTopToBottom, DataOption1:=xlSortNormal
        HIC.Range("ax2").Value = True
        For n = 7 To 305
            If HIC.Range("a" & n) <> HIC.Range("a" & n - 1) Then HIC.Range("a" & n & ":au" & n).Cells.Borders(xlEdgeTop).Weight = xlThick
        Next n
    Else
        HIC.Range("ax2").Value = False
        For n = 7 To 305
            HIC.Range("a" & n & ":au" & n).Cells.Borders(xlEdgeTop).Weight = xlThin
        Next n
    End If
    'Mostrar estrategias
    HIC.Range("a309:a318").EntireRow.Hidden = True
    If ChecKEstrategias = True Then
        muestra = 0
        For festrategia = 363 To 386
            If HC.Range("CJ" & festrategia) = "CI" Or HC.Range("CJ" & festrategia) = "NI" Or HC.Range("CJ" & festrategia) = "OI" Or HC.Range("CJ" & festrategia) = "PI" Then
                muestra = muestra + 1
                If muestra = 11 Then Exit For
                n = 3
                If HC.Range("cu" & festrategia) = "" Then tipo2 = "" Else tipo2 = " (" & HC.Range("cu" & festrategia) & ")"
                HC.Range("i" & n) = HC.Range("ci" & festrategia) & tipo2
                HC.Range("i" & n).Interior.Color = HC.Range("ci" & festrategia).Interior.Color
                HC.Range("i" & n).Font.Color = HC.Range("ci" & festrategia).Font.Color
                HC.Range("m" & n & ":au" & n).ClearContents
                For d = 13 To HC.Range("bd8")
                    HC.Estrategia n, festrategia - 360, d
                Next d
                HIC.Range("c" & muestra + 308).Value = HC.Range("i3").Value
                HIC.Range("f" & muestra + 308 & ":an" & muestra + 308).Value = HC.Range("m3:au3").Value
                'For Delta = 6 To 41
                '    HIC.Range(HIC.Cells(muestra + 308, 6)).Text
                'Next
                HIC.Range("a" & muestra + 308).EntireRow.Hidden = False
            End If
        Next
        HC.VerEstrategias
    End If
    'Mostrar agenda
    HIC.Range("f2:an2").ClearContents
    If CheckAgenda = True Then
        HIC.Range("a2").RowHeight = 190
        For dia = 1 To 35
            HIC.Cells(2, 5 + dia).Value = HC.Cells(317, 12 + dia).Value
        Next
        HIC.Range("f2:an2").WrapText = False
        With HIC.Range("f3:an3")
            .Borders(xlEdgeLeft).Weight = xlThin
            .Borders(xlInsideVertical).Weight = xlThin
            .Borders(xlEdgeRight).Weight = xlThin
        End With
    Else
        HIC.Range("a2").RowHeight = 30
        With HIC.Range("f3:an3")
            .Borders(xlEdgeLeft).LineStyle = xlLineStyleNone
            .Borders(xlInsideVertical).LineStyle = xlLineStyleNone
            .Borders(xlEdgeRight).LineStyle = xlLineStyleNone
        End With
    End If
    '-Mostrar Area
    If CheckArea.Value = True Then
        HIC.Range("a1").EntireColumn.Hidden = False
    Else
        HIC.Range("a1").EntireColumn.Hidden = True
    End If
    '-Mostrar Telefono o tip
    If CheckTelefono.Value = True Or CheckTip = True Then
        HIC.Range("ap1").EntireColumn.Hidden = False
    Else
        HIC.Range("ap1").EntireColumn.Hidden = True
    End If
     '-Mostrar futuros DSA
    If CheckFuturos.Value = True Then
        HIC.Range("aq1:au1").EntireColumn.Hidden = False
    Else
        HIC.Range("aq1:au1").EntireColumn.Hidden = True
    End If
    '-Mostrar Nombres derecha
    If CheckDerecha.Value = True Then
        HIC.Range("ao1").EntireColumn.Hidden = False
    Else
        HIC.Range("ao1").EntireColumn.Hidden = True
    End If
    '-Mostrar fecha debajo del cuadrante
    If CheckFechaAbajo.Value = True Then
        HIC.Range("f306:an306").Value = HIC.Range("f5:an5").Value
        HIC.Range("f307:an307").Value = HIC.Range("f4:an4").Value
        HIC.Range("a306:a307").EntireRow.Hidden = False
    Else
        HIC.Range("a306:a307").EntireRow.Hidden = True
    End If
    '-Mostrar Empleo
    If CheckEmpleo.Value = True Then
        HIC.Range("b1").EntireColumn.Hidden = False
    Else
        HIC.Range("b1").EntireColumn.Hidden = True
    End If
    '-Mostrar 2|fffd|Apellido
    If Check2Apellido.Value = True Then
        HIC.Range("e1").EntireColumn.Hidden = False
    Else
        HIC.Range("e1").EntireColumn.Hidden = True
    End If
    '-Componer semanas
    If HC.Range("bd8") < 47 Then
        HIC.Range("ah1:an1").EntireColumn.Hidden = True
    Else
        HIC.Range("ah1:an1").EntireColumn.Hidden = False
    End If
    '-Ocultar dias no seleccionados
    If CheckParcial = False Then
        If SpinDesde > 6 Then HIC.Range(HIC.Cells(1, 6), HIC.Cells(1, SpinDesde - 1)).EntireColumn.Hidden = True
        If SpinHasta < SpinHasta.Max Then HIC.Range(HIC.Cells(1, SpinHasta + 1), HIC.Cells(1, 40)).EntireColumn.Hidden = True
    End If
    HIC.Range("F6:AN305").Font.Size = TFuente.Caption
    ' -MODO MOSTRAR HORARIOS
    If CheckSoloHorarios.Value = True Then
        HIC.Range("F6:AN305").Font.Size = 8
        HIC.Range("f6:an305").NumberFormat = "@"
        For n = 0 To 299
            If HC.Range("CS" & n + 14) <> "NO" Then
                HC.Cambiar_Servicio n + 14
                For d = 1 To 35
                    If HC.Cells(333, 12 + d) <> "" Then
                        HIC.Cells(n + 6, d + 5) = Format(HC.Cells(333, d + 12), "h:mm") & " - " & Format(HC.Cells(334, d + 12), "h:mm")
                        If HC.Cells(335, 12 + d) <> "" Then
                            HIC.Cells(n + 6, d + 5) = HIC.Cells(n + 6, d + 5) & Chr(10) & Format(HC.Cells(335, d + 12), "h:mm") & " - " & Format(HC.Cells(336, d + 12), "h:mm")
                        End If
                    End If
                Next
            End If
        Next
    '-SOLO HORAS DE SERVICIO
    ElseIf CheckHoras = True Then
        HIC.Range("f6:an305").NumberFormat = "h:mm"
        For n = 0 To 299
            If HC.Range("CS" & n + 14) <> "NO" Then
                HC.Cambiar_Servicio n + 14
                HIC.Range("f" & n + 6 & ":an" & n + 6).Value = HC.Range("m359:au359").Value
            End If
        Next
    ' - MODO COMO SIGO
    ElseIf CheckComoSigo = True Then
        Application.Calculation = xlCalculationManual
        HIC.Range("b320:b519").Value = HCON.Range("j5:j204").Value
        For Each Casi In HIC.Range("f6:an305").Cells
            If Casi <> "" Then
                If InStr(Casi, Chr(10)) > 0 Then
                    Serv1 = Mid(Casi, 1, InStr(Casi, Chr(10)) - 1)
                    Serv2 = Mid(Casi, InStr(Casi, Chr(10)) + 1, 100)
                Else
                    Serv1 = Casi
                    Serv2 = ""
                End If
                Serv1 = HCON.Range("j" & Application.WorksheetFunction.Match(Serv1, HCON.Range("k5:k204"), 0) + 4)
                If Serv2 <> "" Then Serv2 = HCON.Range("j" & Application.WorksheetFunction.Match(Serv2, HCON.Range("k5:k204"), 0) + 4)
                If Serv2 <> "" Then
                    Casi.Value = Serv1 & Chr(10) & Serv2
                Else
                    Casi.Value = Serv1
                End If
            End If
        Next
    End If
    'Quitar dropdown
    If CheckExtra = True And ListaExtra.ListIndex > -1 Then
        HIC.Range("av1").EntireColumn.Hidden = False
        sel = ListaExtra.ListIndex
        If sel = 0 Then
                HIC.Range("av3") = "H / H.REF"
                HIC.Range("av3").ColumnWidth = 14
                HIC.Range("av6:av305").Value = HC.Range("dh14:dh314").Value
        ElseIf sel = 1 Then
                HIC.Range("av3") = "DESVIO"
                HIC.Range("av3").ColumnWidth = 10
                HIC.Range("av6:av305").Value = HC.Range("cw14:cw314").Value
        ElseIf sel = 2 Then
                HIC.Range("av3") = "PRODUCTIVIDAD"
                HIC.Range("av3").ColumnWidth = 16
                HIC.Range("av6:av305").Value = HC.Range("dm14:dm314").Value
        ElseIf sel = 3 Then
                HIC.Range("av3") = "email"
                HIC.Range("av3").ColumnWidth = 30
                HIC.Range("av6:av305").ClearContents
                For pers = 14 To 313
                    If HC.Range("h" & pers) <> "" Then
                        cara = HC.Range("cu" & pers)
                        If InStr(cara, "#E") > 0 Then
                            HIC.Range("av" & pers - 8) = Mid(cara, InStr(cara, "#E") + 2, InStr(cara, "E#") - InStr(cara, "#E") - 2)
                        End If
                    End If
                Next
         ElseIf sel > 3 Then
            If sel < 13 Then
                HIC.Range("av3").ColumnWidth = 8
                CodeI = "#B" & sel - 3
                CodeF = "B" & sel - 3 & "#"
            End If
            If sel < 16 Then
                HIC.Range("av3").ColumnWidth = 15
                CodeI = "#F" & sel - 11
                CodeF = "F" & sel - 11 & "#"
            End If
            If sel < 19 Then
                HIC.Range("av3").ColumnWidth = 30
                CodeI = "#C" & sel - 14
                CodeF = "C" & sel - 14 & "#"
            End If
            HIC.Range("av3") = ListaExtra.Value
            HIC.Range("av6:av305").ClearContents
            For pers = 14 To 313
                If HC.Range("h" & pers) <> "" Then
                    cara = HC.Range("cu" & pers)
                    If InStr(cara, CodeI) > 0 Then
                        HIC.Range("av" & pers - 8) = Mid(cara, InStr(cara, CodeI) + 3, InStr(cara, CodeF) - InStr(cara, CodeI) - 3)
                    End If
                End If
            Next
        End If
    Else
        HIC.Range("av1:av1").EntireColumn.Hidden = True
    End If
    Unload Me
    Application.ScreenUpdating = True
End Sub
Private Sub ConstruirVicisitudes()
Application.ScreenUpdating = False
Application.EnableEvents = False
Application.Calculation = xlCalculationManual
If SELAREA = "TODAS" Then Forzar = True
HVICI.Range("a4:e2500").ClearContents
HVICI.Range("c4:d2500").NumberFormat = "@"
reg = 4
For n = 14 To 313
    If HC.Range("h" & n) <> "" And (Forzar = True Or HC.Range("cl" & n) = SELAREA) Then
        HC.Cambiar_Servicio n
        FIni = ""
        FFin = ""
        For d = 12 To HC.Range("bd8")
            If HC.Cells(331, d) >= "10" And HC.Cells(331, d) <= "17" Then
                If d = 12 Then
                    FIni = "**" & Format(HC.Cells(13, d), "dd/mm/yyyy")
                ElseIf HC.Cells(331, d) <> HC.Cells(331, d - 1) Then
                    FIni = Format(HC.Cells(13, d), "dd/mm/yyyy")
                End If
                If d = HC.Range("bd8") Then
                    FFin = Format(HC.Cells(13, d), "dd/mm/yyyy") & "**"
                ElseIf HC.Cells(331, d) <> HC.Cells(331, d + 1) Then
                    FFin = Format(HC.Cells(13, d), "dd/mm/yyyy")
                End If
            End If
            If FIni <> "" And FFin <> "" Then
                'Grabar vicisitud
                If Nombrado = False Then HVICI.Range("b" & reg) = HC.Range("do" & n)
                HVICI.Range("c" & reg) = FIni
                HVICI.Range("d" & reg) = FFin
                HVICI.Range("e" & reg) = HC.Cells(329, d)
                reg = reg + 1
                FIni = ""
                FFin = ""
                Nombrado = True
            End If
        Next
        Nombrado = False
    End If
Next
Application.ScreenUpdating = True
Application.EnableEvents = True
End Sub
Private Sub ConstruirSoloCalculos()
    Unload Me
    Application.EnableEvents = False
    Application.ScreenUpdating = False
    Calculate
    Application.Calculation = xlCalculationManual
    HC.CambiarFiltroDato "ANTIGUEDAD", 7
    HICAL.Range("A6:AK305").ClearContents
    reg = 6
    For pers = 14 To 313 Step 1
        If (HC.Range("cs" & pers) = "SI" And HC.Range("cm" & pers) <> "") Or (HC.Range("cs" & pers) = "" And HC.Range("cm" & pers) <> "") Then
            HC.Cambiar_Servicio pers
            HICAL.Range("a" & reg).Value = HC.Range("ci" & pers).Value 'Antiguedad
            HICAL.Range("b" & reg).Value = HC.Range("cl" & pers).Value 'Area
            HICAL.Range("c" & reg).Value = HC.Range("dc" & pers).Value 'Grupo
            HICAL.Range("d" & reg).Value = HC.Range("ck" & pers).Value 'Empleo
            HICAL.Range("e" & reg & ":j" & reg).Value = HC.Range("cm" & pers & ":cr" & pers).Value 'Nombre, apellidos, tip, telefono y regimen
            HICAL.Range("k" & reg).Value = HC.Range("ct" & pers).Value 'Empleo
            HICAL.Range("l" & reg).Value = HC.Range("aw362").Value ' H. Ref
            HICAL.Range("m" & reg).Value = HC.Range("aw389").Value ' H. Ref presenciales
            HICAL.Range("n" & reg).Value = HC.Range("aw363").Value ' H. planificadas
            HICAL.Range("o" & reg).Value = HC.Range("aw364").Value ' desvio
            HICAL.Range("p" & reg).Value = HC.Range("aw398").Value ' H festivas
            HICAL.Range("q" & reg).Value = HC.Range("aw399").Value ' H nocturnas
            HICAL.Range("r" & reg).Value = HC.Range("aw400").Value ' H especial significacion
            HICAL.Range("S" & reg).Value = HC.Range("aw323").Value ' MA|fffd|ANAS
            HICAL.Range("T" & reg).Value = HC.Range("aw324").Value ' TARDES
            HICAL.Range("U" & reg).Value = HC.Range("aw325").Value ' NOCHES
            HICAL.Range("V" & reg).Value = HC.Range("AZ365").Value ' SERVICIOS FESTIVOS
            HICAL.Range("W" & reg).Value = HC.Range("AZ366").Value ' SERVICIOS NOCTURNOS
            HICAL.Range("X" & reg).Value = HC.Range("AZ367").Value ' DSA PENDIENTE
            HICAL.Range("Y" & reg).Value = HC.Range("AW368").Value ' DCO
            HICAL.Range("Z" & reg).Value = HC.Range("AW369").Value ' DF
            HICAL.Range("AA" & reg).Value = HC.Range("AY374").Value ' AP
            HICAL.Range("AB" & reg).Value = HC.Range("AW404").Value ' CREDITO AP
            HICAL.Range("AC" & reg).Value = HC.Range("AY393").Value ' VACACIONES
            HICAL.Range("AD" & reg).Value = HC.Range("AW403").Value ' CREDITO VACACIONES
            HICAL.Range("AE" & reg).Value = HC.Range("AX357").Value ' INDISPUESTOS
            HICAL.Range("AF" & reg).Value = HC.Range("AY357").Value ' TRABAJADOR NOCTURNO
            HICAL.Range("AG" & reg).Value = HC.Range("AY380").Value ' EGR
            HICAL.Range("AH" & reg).Value = HC.Range("AW382").Value ' CRES
            HICAL.Range("AI" & reg).Value = HC.Range("AW384").Value ' CREM
            HICAL.Range("AJ" & reg).Value = HC.Range("AW385").Value ' CREX
            HICAL.Range("AK" & reg).Value = HC.Range("AW386").Value ' TOTAL
            If HC.Range("cj" & pers) = "NO" Then HICAL.Range("l" & reg & ":ak" & reg).Value = "" ' Borrar calculos si no esta activo
            reg = reg + 1
        End If
    Next pers
    Calculate
    Application.EnableEvents = True
    Application.ScreenUpdating = True
    HICAL.PageSetup.PrintArea = HICAL.Range("A1:AK" & HICAL.Range("AQ4")).Address
End Sub

Private Sub CheckAislar_Click()
If CheckAislar = True Then
    ListAislar.Enabled = True
    BtnMasAislar.Enabled = True
    BtnMenosAislar.Enabled = True
Else
    ListAislar.Enabled = False
    BtnMasAislar.Enabled = False
    BtnMenosAislar.Enabled = False
End If
End Sub

Private Sub CheckExtra_Click()
If CheckExtra = True Then
    ListaExtra.Enabled = True
    ListaExtra.Clear
    ListaExtra.AddItem ("H / H.REF") '0
    ListaExtra.AddItem ("DESVIO") '1
    ListaExtra.AddItem ("Productividad") '2
    ListaExtra.AddItem ("Email") '3
    For cara = 4 To 11
        'If HCON.Range("aq" & cara) <> "" Then
        ListaExtra.AddItem (HCON.Range("aq" & cara))
    Next
    For cara = 4 To 6
        'If HCON.Range("ar" & cara) <> "" Then
        ListaExtra.AddItem (HCON.Range("ar" & cara))
    Next
    For cara = 4 To 6
        'If HCON.Range("as" & cara) <> "" Then
        ListaExtra.AddItem (HCON.Range("as" & cara))
    Next
Else
    ListaExtra.Enabled = False
End If
End Sub

Private Sub CheckFiltroArea_Click()
If CheckFiltroArea = True Then
    CheckSoloUnArea = False
End If
End Sub

Private Sub CheckParcial_Click()
If CheckParcial = False Then
    Ldesde.Enabled = True
    Lhasta.Enabled = True
    SpinDesde.Enabled = True
    SpinHasta.Enabled = True
    CDesde.Enabled = True
    Chasta.Enabled = True
Else
    CDesde.Caption = Format(HC.Range("m13"), "dd/mm") 'Primer dia
    If HC.Range("bd8") < 47 Then ' ultimo dia
        Chasta.Caption = Format(HC.Range("an13"), "dd/mm")
    Else
        Chasta.Caption = Format(HC.Range("au13"), "dd/mm")
    End If
    Ldesde.Enabled = False
    Lhasta.Enabled = False
    SpinDesde.Enabled = False
    SpinHasta.Enabled = False
    CDesde.Enabled = False
    Chasta.Enabled = False
End If
End Sub

Private Sub CheckSoloHorarios_MouseDown(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
CheckComoSigo = False
CheckHoras = False
End Sub
Private Sub CheckComoSigo_MouseDown(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
CheckSoloHorarios = False
CheckHoras = False
End Sub
Private Sub Checkhoras_MouseDown(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
CheckSoloHorarios = False
CheckComoSigo = False
End Sub
Private Sub CheckSoloUnArea_Click()
If CheckSoloUnArea = True Then
    SelAreaUnico.Enabled = True
    CheckFiltroArea = False
    SelAreaUnico.RowSource = "con!BK5:BK13"
    SelAreaUnico.ListIndex = 0
Else
    SelAreaUnico.Enabled = False
    SelAreaUnico = ""
End If
End Sub

Private Sub CheckTelefono_MouseDown(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
CheckTip = False
End Sub
Private Sub CheckTip_MouseDown(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
CheckTelefono = False
End Sub

Private Sub Planificacion_Click()
If Planificacion = True Then
    CheckParcial.Enabled = True
    Label12.Enabled = True
    Label18.Enabled = True
    CheckDerecha.Enabled = True
    CheckEmpleo.Enabled = True
    Check2Apellido.Enabled = True
    CheckArea.Enabled = True
    CheckTelefono.Enabled = True
    CheckFechaAbajo.Enabled = True
    CheckFuturos.Enabled = True
    CheckFiltroArea.Enabled = True
    CheckSoloHorarios.Enabled = True
    CheckHoras.Enabled = True
    CheckTip.Enabled = True
    ChecKEstrategias.Enabled = True
    CheckAgenda.Enabled = True
    CheckComoSigo.Enabled = True
    SELAREA.Enabled = False
    CheckAislar.Enabled = True
End If
End Sub

Private Sub SoloCalculos_Click()
If SoloCalculos = True Then
    CheckParcial.Enabled = False
    Label12.Enabled = False
    Label18.Enabled = False
    CheckDerecha.Enabled = False
    CheckEmpleo.Enabled = False
    Check2Apellido.Enabled = False
    CheckArea.Enabled = False
    CheckTelefono.Enabled = False
    CheckFechaAbajo.Enabled = False
    CheckFuturos.Enabled = False
    CheckFiltroArea.Enabled = False
    CheckSoloHorarios.Enabled = False
    CheckHoras.Enabled = False
    CheckTip.Enabled = False
    ChecKEstrategias.Enabled = False
    CheckAgenda.Enabled = False
    CheckComoSigo.Enabled = False
    SELAREA.Enabled = False
    CheckAislar.Enabled = False
    CheckAislar = False
End If
End Sub
Private Sub Vicisitudes_Click()
If Vicisitudes = True Then
    CheckParcial.Enabled = False
    Label12.Enabled = False
    Label18.Enabled = False
    CheckDerecha.Enabled = False
    CheckEmpleo.Enabled = False
    Check2Apellido.Enabled = False
    CheckArea.Enabled = False
    CheckTelefono.Enabled = False
    CheckFechaAbajo.Enabled = False
    CheckFuturos.Enabled = False
    CheckFiltroArea.Enabled = False
    CheckSoloHorarios.Enabled = False
    CheckHoras.Enabled = False
    CheckTip.Enabled = False
    ChecKEstrategias.Enabled = False
    CheckAgenda.Enabled = False
    CheckComoSigo.Enabled = False
    SELAREA.Enabled = True
    SELAREA.RowSource = "con!BK4:BK13"
    SELAREA.ListIndex = 0
    CheckAislar.Enabled = False
    ListAislar.Enabled = False
    CheckAislar = False
End If
End Sub

Private Sub SpinDesde_SpinDown()
SpinHasta.Min = SpinDesde
CDesde.Caption = Format(HIC.Cells(5, SpinDesde), "dd/mm") 'Primer dia
End Sub
Private Sub SpinDesde_SpinUp()
SpinHasta.Min = SpinDesde
CDesde.Caption = Format(HIC.Cells(5, SpinDesde), "dd/mm") 'Primer dia
End Sub
Private Sub SpinHasta_SpinDown()
SpinDesde.Max = SpinHasta
Chasta.Caption = Format(HIC.Cells(5, SpinHasta), "dd/mm") 'Primer dia
End Sub
Private Sub SpinHasta_SpinUp()
SpinDesde.Max = SpinHasta
Chasta.Caption = Format(HIC.Cells(5, SpinHasta), "dd/mm") 'Primer dia
End Sub

'------CELDA I H
Private Sub SpinCeldaIH_SpinDown()
If CeldaIH > 20 Then
    CeldaIH = CeldaIH - 1
End If
End Sub
Private Sub SpinCeldaIH_SpinUp()
If CeldaIH < 80 Then
    CeldaIH = CeldaIH + 1
End If
End Sub
'----CELDA I V
Private Sub SpinCeldaIv_SpinDown()
If CeldaIV > 20 Then
    CeldaIV = CeldaIV - 1
End If
End Sub
Private Sub SpinCeldaIv_SpinUp()
If CeldaIV < 80 Then
    CeldaIV = CeldaIV + 1
End If
End Sub
'---Tama|fffd|o Fuente
Private Sub SpinFuente_Change()
TFuente.Caption = SpinFuente
End Sub
Private Sub UserForm_Initialize()
Application.ScreenUpdating = False
CheckFechaAbajo.Value = Not HIC.Range("a306").EntireRow.Hidden
If HIC.FilterMode = True Then HIC.ShowAllData
'Calculate
CDesde.Caption = Format(HC.Range("m13"), "dd/mm") 'Primer dia
SpinDesde.Value = 6
SpinDesde.Min = 6
SpinHasta.Min = 6
If HC.Range("bd8") < 47 Then ' ultimo dia
    Chasta.Caption = Format(HC.Range("an13"), "dd/mm")
    SpinHasta.Value = 33
    SpinHasta.Max = 33
    SpinDesde.Max = 33
Else
    Chasta.Caption = Format(HC.Range("au13"), "dd/mm")
    SpinHasta.Value = 40
    SpinHasta.Max = 40
    SpinDesde.Max = 40
End If
Planificacion = True
If HIC.Range("f6").ColumnWidth = 0 Then CeldaIH.Caption = 37.5 Else CeldaIH.Caption = Int(HIC.Range("f6").ColumnWidth * 5)
If HIC.Range("f6").RowHeight = 0 Then CeldaIV.Caption = 37.5 Else CeldaIV.Caption = Int(HIC.Range("f6").RowHeight)
TFuente.Caption = HIC.Range("f6").Font.Size
SpinFuente = TFuente.Caption
If HIC.Range("a2").RowHeight > 100 Then CheckAgenda = True Else CheckAgenda = False
CheckDerecha.Value = Not HIC.Range("ao1").EntireColumn.Hidden
CheckEmpleo.Value = Not HIC.Range("b1").EntireColumn.Hidden
Check2Apellido.Value = Not HIC.Range("e1").EntireColumn.Hidden
CheckFuturos.Value = Not HIC.Range("aq1").EntireColumn.Hidden
CheckArea.Value = Not HIC.Range("a1").EntireColumn.Hidden
ChecKEstrategias.Value = Not HIC.Range("a309").EntireRow.Hidden
CheckFiltroArea.Value = HIC.Range("ax2").Value
CheckTip.Value = Not HIC.Range("ap1").EntireColumn.Hidden
Alineacion.AddItem ("ARRIBA-IZQUIERDA")
Alineacion.AddItem ("ARRIBA-CENTRO")
Alineacion.AddItem ("ARRIBA-DERECHA")
Alineacion.AddItem ("CENTRO-IZQUIERDA")
Alineacion.AddItem ("CENTRO-CENTRO")
Alineacion.AddItem ("CENTRO-DERECHA")
Alineacion.AddItem ("ABAJO-IZQUIERDA")
Alineacion.AddItem ("ABAJO-CENTRO")
Alineacion.AddItem ("ABAJO-DERECHA")
If HIC.Range("F6").HorizontalAlignment = xlLeft Then ali = 1
If HIC.Range("F6").HorizontalAlignment = xlCenter Then ali = 2
If HIC.Range("F6").HorizontalAlignment = xlRight Then ali = 3
If HIC.Range("F6").VerticalAlignment = xlTop Then ali = ali + 0
If HIC.Range("F6").VerticalAlignment = xlVAlignCenter Then ali = ali + 3
If HIC.Range("F6").VerticalAlignment = xlBottom Then ali = ali + 6
Alineacion.ListIndex = ali - 1
Application.ScreenUpdating = True
End Sub

Private Sub UserForm_QueryClose(Cancel As Integer, CloseMode As Integer)

End Sub

Attribute VB_Name = "OPCIONESINDIVIDUAL"
Attribute VB_Base = "0{051C3495-20AE-4ECC-A2CB-CA0F5D64DEC1}{F76794B8-6715-42DB-A58D-E4ACC220C1D9}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Private Sub UserForm_Initialize()
ListaMostrar.AddItem ("Todo")
ListaMostrar.AddItem ("Solo situaciones")
ListaMostrar.AddItem ("Solo servicios")
ListaMostrar.AddItem ("Personalizado")
Cod1.Value = HII.Range("bc4").Value
Cod2.Value = HII.Range("bc5").Value
Cod3.Value = HII.Range("bc6").Value
End Sub
Private Sub ListaMostrar_Change()
If ListaMostrar.Value = "Personalizado" Then
    Cod1.Enabled = True
    Cod2.Enabled = True
    Cod3.Enabled = True
    CodLabel.Enabled = True
    Cod1.BackColor = &HC0FFC0
    Cod2.BackColor = &HC0FFC0
    Cod3.BackColor = &HC0FFC0
Else
    Cod1.Enabled = False
    Cod2.Enabled = False
    Cod3.Enabled = False
    CodLabel.Enabled = False
    Cod1.BackColor = &HC0C0C0
    Cod2.BackColor = &HC0C0C0
    Cod3.BackColor = &HC0C0C0
End If
End Sub
Private Sub BtnAceptar_Click()
Unload Me
Application.ScreenUpdating = False
If ListaMostrar.ListIndex = -1 Or ListaMostrar.ListIndex = 0 Then
    HII.Range("bc2").Value = "TODO"
    HII.Range("bc3").Value = ""
    HII.Range("bc4").Value = ""
    HII.Range("bc5").Value = ""
    HII.Range("bc6").Value = ""
    HII.PageSetup.PrintArea = "$A$1:$aj$39"
ElseIf ListaMostrar.ListIndex = 1 Then
    HII.Range("bc2").Value = "SITU"
    HII.Range("bc3").Value = ""
    HII.Range("bc4").Value = ""
    HII.Range("bc5").Value = ""
    HII.Range("bc6").Value = ""
    HII.PageSetup.PrintArea = "$A$1:$aj$39"
ElseIf ListaMostrar.ListIndex = 2 Then
    HII.Range("bc2").Value = "SERV"
    HII.Range("bc3").Value = ""
    HII.Range("bc4").Value = ""
    HII.Range("bc5").Value = ""
    HII.Range("bc6").Value = ""
    HII.PageSetup.PrintArea = "$A$1:$aj$39"
ElseIf ListaMostrar.ListIndex = 3 Then
    HII.Range("bc2").Value = "PERSONALIZADO"
    HII.Range("bc3").Value = ""
    HII.Range("bc4").Value = UCase(Cod1.Value)
    HII.Range("bc5").Value = UCase(Cod2.Value)
    HII.Range("bc6").Value = UCase(Cod3.Value)
    HII.PageSetup.PrintArea = "$A$1:$aj$41"
End If
HII.Range("ap3").Value = (HC.Range("ba4") - 2015) * 12
HII.Range("aq1").Value = HC.Range("cp" & ActiveCell.Row).Value
HII.Calculate
HC.GUARDARCUADRANTEMES
HC.CambiarFiltroDato HC.Range("g13"), 7
On Error Resume Next
For m = 0 To 11
    For d = 1 To 35
        CODIGO = ""
        CODIGO = HBDC.Cells(HII.Range("av" & m * 3 + 6), d)
        servicio1 = ""
        servicio2 = ""
        If InStr(CODIGO, Chr(10)) Then
            servicio1 = UCase(Mid(CODIGO, 1, InStr(CODIGO, Chr(10)) - 1))
            servicio2 = UCase(Mid(CODIGO, InStr(CODIGO, Chr(10)) + 1, 10))
        Else
            servicio1 = UCase(CODIGO)
            servicio2 = ""
        End If
        If HII.Range("bc2") = "TODO" Then
            HII.Cells(m * 3 + 6, d + 1) = servicio1 & servicio2
        ElseIf HII.Range("bc2") = "SERV" Or HII.Range("bc2") = "SITU" Then
            If Application.WorksheetFunction.VLookup(servicio1, HCON.Range("k5:p204"), 6, 0) = HII.Range("bc2") Then servicio1 = servicio1 Else servicio1 = ""
            If Application.WorksheetFunction.VLookup(servicio2, HCON.Range("k5:p204"), 6, 0) = HII.Range("bc2") Then servicio2 = servicio2 Else servicio2 = ""
        ElseIf HII.Range("bc2") = "PERSONALIZADO" Then
            If servicio1 = HII.Range("bc4") Or servicio1 = HII.Range("bc5") Or servicio1 = HII.Range("bc6") Then servicio1 = servicio1 Else servicio1 = ""
            If servicio2 = HII.Range("bc4") Or servicio2 = HII.Range("bc5") Or servicio2 = HII.Range("bc6") Then servicio2 = servicio2 Else servicio2 = ""
        End If
        If servicio1 <> "" And servicio2 <> "" Then servicio2 = Chr(10) & servicio2
        HII.Cells(m * 3 + 6, d + 1) = servicio1 & servicio2
    Next
Next
HII.Calculate
HII.Activate
Application.ScreenUpdating = True
    #If VBA6 Then
        Application.ExecuteExcel4Macro ("show.toolbar(""ribbon"",1)")
    #End If
    With HII.PageSetup
        .Zoom = False
        .FitToPagesWide = 1
        .FitToPagesTall = 1
    End With
        HII.PrintPreview
        HC.Activate
    #If VBA6 Then
        Application.ExecuteExcel4Macro ("show.toolbar(""ribbon"",0)")
    #End If
End Sub
Attribute VB_Name = "PASS"
Attribute VB_Base = "0{33F208B0-B7EC-4A72-85C8-452DCCB22E3A}{CC51C4FA-B410-4BD1-9DCB-762B93DB0DE7}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Public modo
Private Sub BtnAceptar_Click()
check_pass
End Sub
Private Sub PASSTEXT_KeyDown(ByVal KeyCode As MSForms.ReturnInteger, ByVal Shift As Integer)
If KeyCode = vbKeyReturn Then check_pass
End Sub
Private Sub UserForm_Initialize()
If HC.Range("be12") = "" Then
    Label1.Visible = False
    PASSTEXT.Visible = False
    'msg = MsgBox("Si se aplica contrase|fffd|a, sera requerida para volver al cuadrante.", vbInformation, "Ocultar")
Else
    Label1.Visible = True
    PASSTEXT.Visible = True
    PASSTEXT.SetFocus
End If
End Sub
Private Sub UserForm_QueryClose(Cancel As Integer, CloseMode As Integer)
If CloseMode = 0 Then
    ThisWorkbook.CIERRO = 1
    If modo = 1 Then
        If PASSTEXT.Text = HC.Range("be12") Then
            Unload Pass
            HC.Activate
        Else
            msg = MsgBox("Contrase|fffd|a incorrecta", vbCritical, "SEGURIDAD")
            PASSTEXT = ""
            PASSTEXT.SetFocus
            Cancel = True
        End If
    End If
End If
End Sub
Private Sub check_pass()
If PASSTEXT.Text = HC.Range("be12") Then
    Unload Pass
    HC.Activate
Else
    msg = MsgBox("Contrase|fffd|a incorrecta", vbCritical, "SEGURIDAD")
    PASSTEXT = ""
    PASSTEXT.SetFocus
End If
End Sub
Attribute VB_Name = "RAPIDAS"
Attribute VB_Base = "0{BBD79EBF-7D0C-418F-8C0A-436917D78C60}{984DA471-7ACE-4B01-8752-C8808DD12161}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Private Sub Chincheta_Click()
If HC.Range("bb363") = "P" Then
    HC.Range("bb363") = ""
    HC.Range("a1").RowHeight = 23.25
    Me.top = HC.Range("bb361")
    Me.left = HC.Range("bb360")
    Chincheta.BorderStyle = fmBorderStyleNone
    Me.Repaint
Else
    Pinchar
End If
End Sub
Private Sub Pinchar()
HC.Range("bb363") = "P"
RAPIDAS.top = HC.Range("f1").Height + 23
RAPIDAS.left = 2
If RAPIDAS.Height < 200 Then
    HC.Range("a1").RowHeight = (Me.Height + 28) * 100 / ActiveWindow.Zoom  ' 23.25
End If
Chincheta.BorderStyle = fmBorderStyleSingle
Chincheta.BorderColor = RGB(255, 0, 0)
Me.Repaint
End Sub
Private Sub UserForm_Layout()
If HC.Range("bb363") = "P" Then Move 2, Me.top
End Sub
Private Sub orientacion_MouseUp(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
If HC.Range("bb362") = "V" Then
    HC.Range("bb362") = "H"
    orientate "H"
Else
    HC.Range("bb362") = "V"
    orientate "V"
End If
End Sub
Private Sub orientate(modo As String)
If modo = "H" And HC.Range("bb363") <> "P" Then
    RAPIDAS.Height = 565
    RAPIDAS.Width = 148
    For p = 1 To 12
        Controls("favo" & p).top = 25 + (p - 1) * 42
        Controls("favo" & p).left = 2
        Controls("favo" & p).Width = 54
        Controls("favo" & p).Height = 36
        
        Controls("edit" & p).top = 25 + (p - 1) * 42
        Controls("edit" & p).left = 56
        
        Controls("lock" & p).top = 43 + (p - 1) * 42
        Controls("lock" & p).left = 56
    Next
    BtnBorra.top = 3
    BtnBorra.left = 45
    BtnBorra.Width = 30
    BtnBorra.Height = 20
    Chincheta.top = 0
    Chincheta.left = 20
    Check2Click.left = 5
    Check2Click.top = 525
    Check2Click.Width = 90.75
    'Peticiones
    With FPeticiones
        .top = 2
        .left = 77
        .Height = 150
        .Width = 63
    End With
    For o = 0 To 3
        With Controls("peti" & o + 1)
            .top = 5 + 35 * o
            .left = 2
        End With
    Next
    'Otras
    With Fotros
        .top = 153
        .left = 77
        .Height = 185
        .Width = 63
    End With
    For o = 0 To 4
        With Controls("Otros" & o + 1)
            .top = 5 + 35 * o
            .left = 2
        End With
    Next
    'ajuste horas
    With Fajuste
        .top = 340
        .left = 77
        .Height = 180
        .Width = 63
    End With
    With LServ1
        .top = 5
        .left = 30
    End With
    With LServ2
        .top = 90
        .left = 30
    End With
    With Ajh1
        .top = 18
        .left = 2
    End With
    With Ajh2
        .top = 53
        .left = 2
    End With
    With Ajh3
        .top = 100
        .left = 2
    End With
    With Ajh4
        .top = 135
        .left = 2
    End With
    
    
Else
    RAPIDAS.Height = 110
    RAPIDAS.Width = 950
    Check2Click.left = 4
    Check2Click.top = 40
    Check2Click.Width = 10
    For p = 1 To 12
        Controls("favo" & p).top = 6
        Controls("favo" & p).left = 20 + (p - 1) * 75
        Controls("favo" & p).Width = 45
        Controls("favo" & p).Height = 36
        
        
        Controls("edit" & p).top = 6
        Controls("edit" & p).left = 65 + (p - 1) * 75
        
        Controls("lock" & p).top = 24
        Controls("lock" & p).left = 65 + (p - 1) * 75
    Next
    BtnBorra.top = 6
    BtnBorra.left = 920
    BtnBorra.Width = 22
    BtnBorra.Height = 36
    Chincheta.top = 20
    Chincheta.left = 0
    'Peticiones
    With FPeticiones
        .top = 42
        .left = 25
        .Height = 42
        .Width = 250
    End With
    For o = 0 To 3
        With Controls("peti" & o + 1)
            .top = 4
            .left = 5 + 60 * o
        End With
    Next
    'Otras
    With Fotros
        .top = 42
        .left = 290
        .Height = 42
        .Width = 305
    End With
    For o = 0 To 4
        With Controls("Otros" & o + 1)
            .top = 4
            .left = 5 + 60 * o
        End With
    Next
    'ajuste horas
    With Fajuste
        .top = 42
        .left = 620
        .Height = 42
        .Width = 310
    End With
    With LServ1
        .top = 20
        .left = 2
    End With
    With LServ2
        .top = 20
        .left = 160
    End With
    With Ajh1
        .top = 4
        .left = 35
    End With
    With Ajh2
        .top = 4
        .left = 95
    End With
    With Ajh3
        .top = 4
        .left = 190
    End With
    With Ajh4
        .top = 4
        .left = 250
    End With
End If
End Sub
Private Sub UserForm_Initialize()
orientate HC.Range("bb362")
If HC.Range("bb363") = "P" Then
    Pinchar
    Me.Show
End If
'prevencion formulario no visible
If HC.Range("bb361") < 0 Then HC.Range("bb361") = 10
If HC.Range("bb361") + 100 > Application.Height Then HC.Range("bb361") = Application.Height - Me.Height
If HC.Range("bb360") < 0 Then HC.Range("bb360") = 10
If HC.Range("bb360") > Application.Width - Me.Width Then HC.Range("bb360") = Application.Width - Me.Width
Me.top = HC.Range("bb361")
Me.left = HC.Range("bb360")
ACTUALIZA
End Sub
Sub ACTUALIZA()
For n = 1 To 12
    Controls("Favo" & n).Caption = HC.Range("bc" & 359 + n)
    Controls("Favo" & n).BackColor = HC.Range("bc" & 359 + n).Interior.Color
Next
End Sub
Private Sub UserForm_QueryClose(Cancel As Integer, CloseMode As Integer)
    Application.EnableEvents = False
    HC.Range("a1").RowHeight = 23.25
    HC.Range("bb360") = Me.left
    HC.Range("bb361") = Me.top
    HC.Range("bb363") = ""
    Application.EnableEvents = True
End Sub
Sub Bloquea(btn As Integer)
For n = 1 To 12
    If btn = n Then
        If Controls("Lock" & btn).BackColor = &H8000000F Then
            Controls("Lock" & btn).BackColor = RGB(255, 0, 0)
            HC.Range("a1").Select
        Else
            Controls("Lock" & btn).BackColor = &H8000000F
        End If
    Else
        Controls("Lock" & n).BackColor = &H8000000F
    End If
Next
End Sub
Private Sub Edita(btn As Integer)
RAPIDASDOS.favo = btn
RAPIDASDOS.ACTUALIZA
RAPIDASDOS.Show
End Sub
Private Sub Favoritear(btn As Integer)
Bloquea 0
If ActiveCell.Column > 12 And ActiveCell.Column < 48 And ActiveCell.Row > 13 And ActiveCell.Row < 314 Then
    ActiveCell = HC.Range("bc" & 359 + btn)
End If
End Sub
Private Sub BtnBorra_Click()
If ActiveCell.Column > 12 And ActiveCell.Column < 48 And ActiveCell.Row > 13 And ActiveCell.Row < 314 Then
    ActiveCell.Offset(0, 38).ClearContents
    ActiveCell.ClearContents
End If
End Sub
Private Sub FAVO1_Click()
Favoritear 1
End Sub
Private Sub FAVO2_Click()
Favoritear 2
End Sub
Private Sub FAVO3_Click()
Favoritear 3
End Sub
Private Sub FAVO4_Click()
Favoritear 4
End Sub
Private Sub FAVO5_Click()
Favoritear 5
End Sub
Private Sub FAVO6_Click()
Favoritear 6
End Sub
Private Sub FAVO7_Click()
Favoritear 7
End Sub
Private Sub FAVO8_Click()
Favoritear 8
End Sub
Private Sub FAVO9_Click()
Favoritear 9
End Sub
Private Sub FAVO10_Click()
Favoritear 10
End Sub
Private Sub FAVO11_Click()
Favoritear 11
End Sub
Private Sub FAVO12_Click()
Favoritear 12
End Sub

Private Sub Edit1_Click()
Edita 1
End Sub
Private Sub Edit2_Click()
Edita 2
End Sub
Private Sub Edit3_Click()
Edita 3
End Sub
Private Sub Edit4_Click()
Edita 4
End Sub
Private Sub Edit5_Click()
Edita 5
End Sub
Private Sub Edit6_Click()
Edita 6
End Sub
Private Sub Edit7_Click()
Edita 7
End Sub
Private Sub Edit8_Click()
Edita 8
End Sub
Private Sub Edit9_Click()
Edita 9
End Sub
Private Sub Edit10_Click()
Edita 10
End Sub
Private Sub Edit11_Click()
Edita 11
End Sub
Private Sub Edit12_Click()
Edita 12
End Sub

Private Sub Lock1_Click()
Bloquea 1
End Sub
Private Sub Lock2_Click()
Bloquea 2
End Sub
Private Sub Lock3_Click()
Bloquea 3
End Sub
Private Sub Lock4_Click()
Bloquea 4
End Sub
Private Sub Lock5_Click()
Bloquea 5
End Sub
Private Sub Lock6_Click()
Bloquea 6
End Sub
Private Sub Lock7_Click()
Bloquea 7
End Sub
Private Sub Lock8_Click()
Bloquea 8
End Sub
Private Sub Lock9_Click()
Bloquea 9
End Sub
Private Sub Lock10_Click()
Bloquea 10
End Sub
Private Sub Lock11_Click()
Bloquea 11
End Sub
Private Sub Lock12_Click()
Bloquea 12
End Sub
'Acciones
Private Sub Otros1_Click() ' SUCESION DE MANDO
If ActiveCell.Column > 12 And ActiveCell.Column < 48 And ActiveCell.Row > 13 And ActiveCell.Row < 314 And Selection.Rows.Count = 1 Then
    Application.ScreenUpdating = False
    Application.EnableEvents = False
    For Each aux In Selection.Offset(0, 38)
        If InStr(aux.Value, "@F#") > 0 Then
            aux.Value = Replace(aux.Value, "@F#", "")
        Else
            aux.Value = "@F#" & aux.Value
        End If
    Next
    HC.Cambiar_Servicio ActiveCell.Row
    Application.EnableEvents = True
    Application.ScreenUpdating = True
End If
End Sub
Private Sub Otros2_Click() ' SUSTITUCION DE MANDO
If ActiveCell.Column > 12 And ActiveCell.Column < 48 And ActiveCell.Row > 13 And ActiveCell.Row < 314 And Selection.Rows.Count = 1 Then
    Application.ScreenUpdating = False
    Application.EnableEvents = False
    For Each aux In Selection.Offset(0, 38)
        If InStr(aux.Value, "@S#") > 0 Then
            aux.Value = Replace(aux.Value, "@S#", "")
        Else
            aux.Value = "@S#" & aux.Value
        End If
    Next
    HC.Cambiar_Servicio ActiveCell.Row
    Application.EnableEvents = True
    Application.ScreenUpdating = True
End If
End Sub
Private Sub Otros3_Click() ' cumplimentado
If ActiveCell.Column > 12 And ActiveCell.Column < 48 And ActiveCell.Row > 13 And ActiveCell.Row < 314 Then
    Application.ScreenUpdating = False
    Application.EnableEvents = False
    For Each aux In Selection.Offset(0, 38)
        If InStr(aux.Value, "@C#") > 0 Then
            aux.Value = Replace(aux.Value, "@C#", "")
        Else
            aux.Value = "@C#" & aux.Value
        End If
    Next
    For Each c In Selection.Rows
        HC.Cambiar_Servicio c.Row
    Next
    Application.EnableEvents = True
    Application.ScreenUpdating = True
End If
End Sub
Private Sub Otros4_Click() ' Validar
If HCON.Range("ag9") = True Then 'control de usuario
    If HC.Range("ay12") <> "" Then
        inp = InputBox("Contrase|fffd|a de SuperUsuario para validacion:", "Validacion protegida")
        If inp <> HC.Range("ay12").Text Then
            msg = MsgBox("La contrase|fffd|a de superusuario no es validad.", vbCritical, "Seguridad")
            GoTo no
        End If
    End If
    If ActiveCell.Column > 12 And ActiveCell.Column < 48 And ActiveCell.Row > 13 And ActiveCell.Row < 314 Then
        If HC.Range("ay1") = "VALIDADO" Then
            Application.ScreenUpdating = False
            Application.EnableEvents = False
            Dim CVal As Range
            fval = Application.WorksheetFunction.Match(HC.Range("cp" & ActiveCell.Row), HVAL.Range("cd" & HC.Range("ay5") & ":cd" & HC.Range("ay6")), 0) + HC.Range("ay5") - 1
            For Each CVal In Selection.Cells
                HVAL.Cells(fval, CVal.Column - 12) = CVal.Value
                HVAL.Cells(fval, CVal.Column + 38 - 12) = HC.Cells(CVal.Row, CVal.Column + 38)
            Next
            HVAL.Range("c" & HC.Range("ay5") - 1) = HC.Range("ay12")
            HC.Cambiar_Servicio ActiveCell.Row
            Application.EnableEvents = True
            Application.ScreenUpdating = True
        Else
            msg = MsgBox("Para validar celdas o servicios, primero tiene que estar el cuadrante activo validado.", vbCritical, "No se valida")
        End If
    End If
no:
End If
End Sub
Private Sub Otros5_Click() ' Invalidar
If HCON.Range("ag9") = True Then 'control de usuario
If ActiveCell.Column > 12 And ActiveCell.Column < 48 And ActiveCell.Row > 13 And ActiveCell.Row < 314 Then
If HC.Range("ay1") = "VALIDADO" Then
    Application.ScreenUpdating = False
    Application.EnableEvents = False
    Dim CVal As Range
    fval = Application.WorksheetFunction.Match(HC.Range("cp" & ActiveCell.Row), HVAL.Range("cd" & HC.Range("ay5") & ":cd" & HC.Range("ay6")), 0) + HC.Range("ay5") - 1
    For Each CVal In Selection.Cells
        HVAL.Cells(fval, CVal.Column - 12) = ""
    Next
    HC.Cambiar_Servicio ActiveCell.Row
    Application.EnableEvents = True
    Application.ScreenUpdating = True
Else
    msg = MsgBox("Para invalidar celdas o servicios, primero tiene que estar el cuadrante activo validado.", vbCritical, "No se valida")
End If
End If
End If
End Sub
Private Sub Ajh1_Click() ' Ajuste 30 minutos serv 1
If ActiveCell.Column > 12 And ActiveCell.Column < 48 And ActiveCell.Row > 13 And ActiveCell.Row < 314 And Selection.Cells.Count = 1 Then
    Application.ScreenUpdating = False
    Application.EnableEvents = False
    HC.Range("I328") = ActiveCell.Row
    HC.Range("I329") = HC.Range("CJ" & ActiveCell.Row)
    HC.Range("I330") = HC.Range("CP" & ActiveCell.Row)
    HC.Calculate
    Dim aux As Range
    Set aux = Selection.Offset(0, 38)
    If HC.Cells(331, ActiveCell.Column) = "01" Then
        If InStr(aux, "@HF1") > 0 Then
            aux.Value = Replace(aux, Mid(aux, InStr(aux, "@HF1"), 10), "")
        End If
        aux.Value = "@HF1" & Format(HC.Cells(334, ActiveCell.Column) + 1 / 48, "hh:mm") & "#" & aux
    End If
    HC.Cambiar_Servicio ActiveCell.Row
    Application.EnableEvents = True
    Application.ScreenUpdating = True
End If
End Sub
Private Sub Ajh2_Click() ' Ajuste 30 minutos serv 1
If ActiveCell.Column > 12 And ActiveCell.Column < 48 And ActiveCell.Row > 13 And ActiveCell.Row < 314 And Selection.Cells.Count = 1 Then
    Application.ScreenUpdating = False
    Application.EnableEvents = False
    HC.Range("I328") = ActiveCell.Row
    HC.Range("I329") = HC.Range("CJ" & ActiveCell.Row)
    HC.Range("I330") = HC.Range("CP" & ActiveCell.Row)
    HC.Calculate
    Dim aux As Range
    Set aux = Selection.Offset(0, 38)
    If HC.Cells(331, ActiveCell.Column) = "01" Then
        If InStr(aux, "@HF1") > 0 Then
            aux.Value = Replace(aux, Mid(aux, InStr(aux, "@HF1"), 10), "")
        End If
        aux.Value = "@HF1" & Format(HC.Cells(334, ActiveCell.Column) + 1 / 24, "hh:mm") & "#" & aux
    End If
    HC.Cambiar_Servicio ActiveCell.Row
    Application.EnableEvents = True
    Application.ScreenUpdating = True
End If
End Sub
Private Sub Ajh3_Click() ' Ajuste 30 minutos serv 1
If ActiveCell.Column > 12 And ActiveCell.Column < 48 And ActiveCell.Row > 13 And ActiveCell.Row < 314 And Selection.Cells.Count = 1 Then
    Application.ScreenUpdating = False
    Application.EnableEvents = False
    HC.Range("I328") = ActiveCell.Row
    HC.Range("I329") = HC.Range("CJ" & ActiveCell.Row)
    HC.Range("I330") = HC.Range("CP" & ActiveCell.Row)
    HC.Calculate
    Dim aux As Range
    Set aux = Selection.Offset(0, 38)
    If HC.Cells(332, ActiveCell.Column) = "01" Then
        If InStr(aux, "@HF2") > 0 Then
            aux.Value = Replace(aux, Mid(aux, InStr(aux, "@HF2"), 10), "")
        End If
        aux.Value = "@HF2" & Format(HC.Cells(336, ActiveCell.Column) + 1 / 48, "hh:mm") & "#" & aux
    End If
    HC.Cambiar_Servicio ActiveCell.Row
    Application.EnableEvents = True
    Application.ScreenUpdating = True
End If
End Sub
Private Sub Ajh4_Click() ' Ajuste 30 minutos serv 1
If ActiveCell.Column > 12 And ActiveCell.Column < 48 And ActiveCell.Row > 13 And ActiveCell.Row < 314 And Selection.Cells.Count = 1 Then
    Application.ScreenUpdating = False
    Application.EnableEvents = False
    HC.Range("I328") = ActiveCell.Row
    HC.Range("I329") = HC.Range("CJ" & ActiveCell.Row)
    HC.Range("I330") = HC.Range("CP" & ActiveCell.Row)
    HC.Calculate
    Dim aux As Range
    Set aux = Selection.Offset(0, 38)
    If HC.Cells(332, ActiveCell.Column) = "01" Then
        If InStr(aux, "@HF2") > 0 Then
            aux.Value = Replace(aux, Mid(aux, InStr(aux, "@HF2"), 10), "")
        End If
        aux.Value = "@HF2" & Format(HC.Cells(336, ActiveCell.Column) + 1 / 24, "hh:mm") & "#" & aux
    End If
    HC.Cambiar_Servicio ActiveCell.Row
    Application.EnableEvents = True
    Application.ScreenUpdating = True
End If
End Sub
Private Sub Peti1_Click() ' Peticion no Ma|fffd|ana
If ActiveCell.Column > 12 And ActiveCell.Column < 48 And ActiveCell.Row > 13 And ActiveCell.Row < 314 And Selection.Rows.Count = 1 Then
    Application.ScreenUpdating = False
    Application.EnableEvents = False
    For Each aux In Selection.Offset(0, 38)
        If InStr(aux.Value, "@PNT#") > 0 Then aux.Value = Replace(aux.Value, "@PNT#", "")
        If InStr(aux.Value, "@PNN#") > 0 Then aux.Value = Replace(aux.Value, "@PNN#", "")
        If InStr(aux.Value, "@PNS#") > 0 Then aux.Value = Replace(aux.Value, "@PNS#", "")
        If InStr(aux.Value, "@PNM#") > 0 Then
            aux.Value = Replace(aux.Value, "@PNM#", "")
        Else
            aux.Value = "@PNM#" & aux.Value
        End If
    Next
    HC.Cambiar_Servicio ActiveCell.Row
    Application.EnableEvents = True
    Application.ScreenUpdating = True
End If
End Sub
Private Sub Peti2_Click() ' Peticion no Ma|fffd|ana
If ActiveCell.Column > 12 And ActiveCell.Column < 48 And ActiveCell.Row > 13 And ActiveCell.Row < 314 And Selection.Rows.Count = 1 Then
    Application.ScreenUpdating = False
    Application.EnableEvents = False
    For Each aux In Selection.Offset(0, 38)
        If InStr(aux.Value, "@PNM#") > 0 Then aux.Value = Replace(aux.Value, "@PNM#", "")
        If InStr(aux.Value, "@PNN#") > 0 Then aux.Value = Replace(aux.Value, "@PNN#", "")
        If InStr(aux.Value, "@PNS#") > 0 Then aux.Value = Replace(aux.Value, "@PNS#", "")
        If InStr(aux.Value, "@PNT#") > 0 Then
            aux.Value = Replace(aux.Value, "@PNT#", "")
        Else
            aux.Value = "@PNT#" & aux.Value
        End If
    Next
    HC.Cambiar_Servicio ActiveCell.Row
    Application.EnableEvents = True
    Application.ScreenUpdating = True
End If
End Sub
Private Sub Peti3_Click() ' Peticion no Ma|fffd|ana
If ActiveCell.Column > 12 And ActiveCell.Column < 48 And ActiveCell.Row > 13 And ActiveCell.Row < 314 And Selection.Rows.Count = 1 Then
    Application.ScreenUpdating = False
    Application.EnableEvents = False
    For Each aux In Selection.Offset(0, 38)
        If InStr(aux.Value, "@PNT#") > 0 Then aux.Value = Replace(aux.Value, "@PNT#", "")
        If InStr(aux.Value, "@PNM#") > 0 Then aux.Value = Replace(aux.Value, "@PNM#", "")
        If InStr(aux.Value, "@PNS#") > 0 Then aux.Value = Replace(aux.Value, "@PNS#", "")
        If InStr(aux.Value, "@PNN#") > 0 Then
            aux.Value = Replace(aux.Value, "@PNN#", "")
        Else
            aux.Value = "@PNN#" & aux.Value
        End If
    Next
    HC.Cambiar_Servicio ActiveCell.Row
    Application.EnableEvents = True
    Application.ScreenUpdating = True
End If
End Sub
Private Sub Peti4_Click() ' Peticion no Ma|fffd|ana
If ActiveCell.Column > 12 And ActiveCell.Column < 48 And ActiveCell.Row > 13 And ActiveCell.Row < 314 And Selection.Rows.Count = 1 Then
    Application.ScreenUpdating = False
    Application.EnableEvents = False
    For Each aux In Selection.Offset(0, 38)
        If InStr(aux.Value, "@PNT#") > 0 Then aux.Value = Replace(aux.Value, "@PNT#", "")
        If InStr(aux.Value, "@PNN#") > 0 Then aux.Value = Replace(aux.Value, "@PNN#", "")
        If InStr(aux.Value, "@PNM#") > 0 Then aux.Value = Replace(aux.Value, "@PNM#", "")
        If InStr(aux.Value, "@PNS#") > 0 Then
            aux.Value = Replace(aux.Value, "@PNS#", "")
        Else
            aux.Value = "@PNS#" & aux.Value
        End If
    Next
    HC.Cambiar_Servicio ActiveCell.Row
    Application.EnableEvents = True
    Application.ScreenUpdating = True
End If
End Sub
Attribute VB_Name = "RAPIDASDOS"
Attribute VB_Base = "0{55352126-8B26-4E92-9705-91C051BA125D}{D65AB632-1ADD-41E5-9414-5F855A946F01}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Sub ACTUALIZA()
celda = HC.Range("bc" & 359 + Val(favo.Caption))
Serv1.BackColor = HC.Range("bc" & 359 + Val(favo.Caption)).Interior.Color
If InStr(1, celda, Chr(10)) > 0 Then
    Serv1 = Mid(celda, 1, InStr(1, celda, Chr(10)) - 1)
    CheckDoblete = True
    Serv2 = Mid(celda, InStr(1, celda, Chr(10)) + 1, 10)
Else
    Serv1 = celda
    Serv2 = ""
    CheckDoblete = False
End If
End Sub
Private Sub BtnColor_Click()
FORMCOLORPICKER.Show
If ThisWorkbook.COLORSEL <> "" Then
    Serv1.BackColor = ThisWorkbook.COLORSEL
End If
End Sub
Private Sub CheckDoblete_Click()
If CheckDoblete = True Then
    Serv2.Enabled = True
    Serv2.BackColor = &H80000005
Else
    Serv2.Enabled = False
    Serv2.BackColor = &H8000000A
End If
End Sub
Private Sub BtnAceptar_Click()
If CheckDoblete = True And Serv2 <> "" Then
    HC.Range("bc" & 359 + Val(favo.Caption)) = Serv1 & Chr(10) & Serv2
Else
    HC.Range("bc" & 359 + Val(favo.Caption)) = Serv1
End If
HC.Range("bc" & 359 + Val(favo.Caption)).Interior.Color = Serv1.BackColor
ThisWorkbook.COLORSEL = ""
RAPIDASDOS.Hide
RAPIDAS.ACTUALIZA
End Sub
Private Sub UserForm_QueryClose(Cancel As Integer, CloseMode As Integer)
Cancel = True
Me.Hide
End Sub
Attribute VB_Name = "RECALCULAR"
Attribute VB_Base = "0{F58BF2D6-0E64-44AF-A126-15C382FA0B48}{4691088A-6E9B-4777-B862-F851A984E47E}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False

Attribute VB_Name = "REGISTROSOL"
Attribute VB_Base = "0{AB8B390D-2D4A-403B-8948-9258E39EDAE0}{C26408FD-1D0A-4DD8-BF7E-94FC4A22A3B6}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Public SolPersona
Private Sub BtnAprobar_Click()
If ListSolicitudes <> -1 Then
    If Mid(ListSolicitudes.List(ListSolicitudes.ListIndex, 1), 1, 8) = "ATENDIDA" Then
        msg = MsgBox("Seguro que quieres aprobar esta solicitud?. El usuario recibira una notificacion.", 36, "APROBAR")
        If msg = 6 Then RegistrarSolicitud "APROBADA", "", ListSolicitudes.List(ListSolicitudes.ListIndex, 0)
    Else
        msg = MsgBox("Solo se pueden aprobar o denegar aquellas solicitudes ATENDIDAS", vbCritical, "Estado")
    End If
End If
End Sub
Private Sub BtnDenegar_Click()
If ListSolicitudes <> -1 Then
    If Mid(ListSolicitudes.List(ListSolicitudes.ListIndex, 1), 1, 8) = "ATENDIDA" Then
        inp = InputBox("Quieres indicar un motivo de la denegacion al usuario?", "MOTIVO POR DENEGADO")
        If inp = "" Then
            msg = MsgBox("CANCELAR la denegacion de la solicitud?", vbYesNo, "Resultado")
            If msg = 7 Then RegistrarSolicitud "DENEGADA", "", ListSolicitudes.List(ListSolicitudes.ListIndex, 0)
        Else
            RegistrarSolicitud "DENEGADA", inp, ListSolicitudes.List(ListSolicitudes.ListIndex, 0)
        End If
    Else
        msg = MsgBox("Solo se pueden aprobar o denegar aquellas solicitudes ATENDIDAS", vbCritical, "Estado")
    End If
End If
End Sub
Sub RegistrarSolicitud(resultado, motivo, solicitud)
Dim REGFIL As Workbook
Dim RegSOL As Worksheet
Dim LibroDeRegistro As String
Application.ScreenUpdating = False
Application.EnableEvents = False
LibroDeRegistro = ThisWorkbook.Path & "\CuadrAPP\RegSolicitudes.xls"
On Error Resume Next
existe = Dir(LibroDeRegistro)
On Error GoTo 0
If existe = "" Then
    Set REGFIL = Workbooks.Add
    REGFIL.SaveAs filename:=LibroDeRegistro, Password:="1601"
Else
    If IsFileOpen(LibroDeRegistro) = True Then
        Set REGFIL = Workbooks("RegSolicitudes.xls")
    Else
        Set REGFIL = Workbooks.Open(filename:=LibroDeRegistro, Password:="1601")
    End If
End If
Set RegSOL = REGFIL.Worksheets(1)
numregistros = Application.Match(solicitud, RegSOL.Range("a1:a" & RegSOL.Range("a65536").End(xlUp).Row), 0)
solicitudapp = Mid(solicitud, 10, 12)
Tip = Mid(solicitud, 3, 7)
fila = Application.Match(Tip, HC.Range("cp14:cp313"), 0)
cara = HC.Range("cu" & fila + 13)
If RegSOL.Range("b" & numregistros) = "ATENDIDA" Then
    RegSOL.Range("b" & numregistros) = resultado
    RegSOL.Range("c" & numregistros) = motivo
    RegSOL.Range("e" & numregistros) = Format(Now(), "dd/mm/yyyy hh:mm") ' cerrada
    If resultado <> "ELIMINADA" And InStr(cara, "#E") > 0 Then
        correo = Mid(cara, InStr(cara, "#E") + 2, InStr(cara, "E#") - InStr(cara, "#E") - 2)
        ConstruirRespuestaSolicitud solicitudapp, resultado & "  " & motivo, correo, Tip, fila + 13
    End If
    REGFIL.Close savechanges:=True
    Application.ScreenUpdating = True
    Application.EnableEvents = True
    actualizarlista
Else
    msg = MsgBox("Esta solicitud ya se encuentra cerrada y no se puede modificar.", vbCritical, "Solicitud")
    REGFIL.Close savechanges:=False
End If
End Sub
Private Sub BtnEliminar_Click()
If ListSolicitudes <> -1 Then
    If Mid(ListSolicitudes.List(ListSolicitudes.ListIndex, 1), 1, 8) = "ATENDIDA" Then
        msg = MsgBox("Seguro de deseas eliminar esta solicitud? Pasara a estado de eliminada y el usuario no recibira ninguna notificacion mas.", vbYesNo, "Eliminar solicitud")
        If msg = 6 Then
            If msg = 6 Then RegistrarSolicitud "ELIMINADA", "", ListSolicitudes.List(ListSolicitudes.ListIndex, 0)
        End If
    Else
        msg = MsgBox("Solo se pueden eliminar aquellas solicitudes ATENDIDAS", vbCritical, "Estado")
    End If
End If
End Sub
Private Sub CheckPendientes_Click()
actualizarlista
End Sub
Private Sub UserForm_Initialize()

End Sub
Sub actualizarlista()
ListSolicitudes.Clear
Dim REGFIL As Workbook
Dim RegSOL As Worksheet
Dim LibroDeRegistro As String
Application.ScreenUpdating = False
Application.EnableEvents = False
LibroDeRegistro = ThisWorkbook.Path & "\CuadrAPP\RegSolicitudes.xls"
If Dir(ThisWorkbook.Path & "\CuadrAPP", vbDirectory) <> "" Then
Else
    msg = MsgBox("No se encuentran solicitudes", vbCritical, "ARCHIVO DE SOLICITUDES?")
   GoTo fallo
End If
On Error Resume Next
existe = Dir(LibroDeRegistro)
On Error GoTo 0
If existe = "" Then
    msg = MsgBox("No se encuentran solicitudes", vbCritical, "ARCHIVO DE SOLICITUDES?")
    GoTo fallo
Else
    If IsFileOpen(LibroDeRegistro) = True Then
        Set REGFIL = Workbooks("RegSolicitudes.xls")
    Else
        Set REGFIL = Workbooks.Open(filename:=LibroDeRegistro, Password:="1601", ReadOnly:=True)
    End If
End If
Set RegSOL = REGFIL.Worksheets(1)
numregistros = RegSOL.Range("a65536").End(xlUp).Row + 1
ite = 0
For Lista = numregistros - 1 To 2 Step -1
    If SolPersona = "" Then
    Else
        If SolPersona <> RegSOL.Range("f" & Lista) Then GoTo saltar
    End If
    If CheckPendientes = True Then
        If RegSOL.Range("b" & Lista) = "ATENDIDA" Then
            If RegSOL.Range("e" & Lista) <> "" Then cerrada = "   (Cerrada el: " & RegSOL.Range("e" & Lista) & " Observaciones: " & RegSOL.Range("c" & Lista) & ")" Else cerrada = ""
            With ListSolicitudes
                .AddItem
                .List(ite, 0) = RegSOL.Range("a" & Lista)
                .List(ite, 1) = RegSOL.Range("b" & Lista) & "  -  " & RegSOL.Range("d" & Lista) & "     " & RegSOL.Range("f" & Lista) & "  -  " & RegSOL.Range("g" & Lista) & "   " & RegSOL.Range("h" & Lista) & cerrada
            End With
            ite = ite + 1
        End If
    Else
        If RegSOL.Range("e" & Lista) <> "" Then cerrada = "   (Cerrada el: " & RegSOL.Range("e" & Lista) & " Observaciones: " & RegSOL.Range("c" & Lista) & ")" Else cerrada = ""
        With ListSolicitudes
            .AddItem
            .List(ite, 0) = RegSOL.Range("a" & Lista)
            .List(ite, 1) = RegSOL.Range("b" & Lista) & "  -  " & RegSOL.Range("d" & Lista) & "     " & RegSOL.Range("f" & Lista) & "  -  " & RegSOL.Range("g" & Lista) & "   " & RegSOL.Range("h" & Lista) & cerrada
        End With
            ite = ite + 1
    End If
saltar:
Next
REGFIL.Close savechanges:=False
fallo:
Application.ScreenUpdating = True
Application.EnableEvents = True
End Sub

Attribute VB_Name = "RESUMENDIA"
Attribute VB_Base = "0{62542A10-B73E-4089-9CFA-DA659F85F6EA}{64A0F938-352B-4DEA-A6EF-51A0E573587C}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Private Sub UserForm_Initialize()
a1 = 0
a2 = 0
a3 = 0
a4 = 0
a5 = 0
a6 = 0
a7 = 0
a8 = 0
a9 = 0
ad1 = 0
ad2 = 0
ad3 = 0
ad4 = 0
ad5 = 0
ad6 = 0
ad7 = 0
ad8 = 0
ad9 = 0
av1 = 0
av2 = 0
av3 = 0
av4 = 0
av5 = 0
av6 = 0
av7 = 0
av8 = 0
av9 = 0
dia = ActiveCell.Column
RESUMENDIA.Caption = "Resumen del " & HC.Cells(13, dia)
Area1.Caption = HCON.Range("d8")
Area2.Caption = HCON.Range("d9")
Area3.Caption = HCON.Range("d10")
Area4.Caption = HCON.Range("d11")
Area5.Caption = HCON.Range("d12")
Area6.Caption = HCON.Range("d13")
Area7.Caption = HCON.Range("d14")
Area8.Caption = HCON.Range("d15")
Area9.Caption = HCON.Range("d16")
Application.ScreenUpdating = False
Application.EnableEvents = False
Application.Calculation = xlCalculationAutomatic
For n = 14 To 313
    If HC.Range("h" & n) = "" Then GoTo Otro
    HC.Range("i328") = n
    If HC.Range("cl" & n) = HCON.Range("e8") Then
        a1 = a1 + 1
        If HC.Cells(331, dia) < "13" Then ad1 = ad1 + 1
        If HC.Cells(331, dia) < "10" Then av1 = av1 + 1
    End If
    If HC.Range("cl" & n) = HCON.Range("e9") Then
        a2 = a2 + 1
        If HC.Cells(331, dia) < "13" Then ad2 = ad2 + 1
        If HC.Cells(331, dia) < "10" Then av2 = av2 + 1
    End If
    If HC.Range("cl" & n) = HCON.Range("e10") Then
        a3 = a3 + 1
        If HC.Cells(331, dia) < "13" Then ad3 = ad3 + 1
        If HC.Cells(331, dia) < "10" Then av3 = av3 + 1
    End If
    If HC.Range("cl" & n) = HCON.Range("e11") Then
        a4 = a4 + 1
        If HC.Cells(331, dia) < "13" Then ad4 = ad4 + 1
        If HC.Cells(331, dia) < "10" Then av4 = av4 + 1
    End If
    If HC.Range("cl" & n) = HCON.Range("e12") Then
        a5 = a5 + 1
        If HC.Cells(331, dia) < "13" Then ad5 = ad5 + 1
        If HC.Cells(331, dia) < "10" Then av5 = av5 + 1
    End If
    If HC.Range("cl" & n) = HCON.Range("e13") Then
        a6 = a6 + 1
        If HC.Cells(331, dia) < "13" Then ad6 = ad6 + 1
        If HC.Cells(331, dia) < "10" Then av6 = av6 + 1
    End If
    If HC.Range("cl" & n) = HCON.Range("e14") Then
        a7 = a7 + 1
        If HC.Cells(331, dia) < "13" Then ad7 = ad7 + 1
        If HC.Cells(331, dia) < "10" Then av7 = av7 + 1
    End If
    If HC.Range("cl" & n) = HCON.Range("e15") Then
        a8 = a8 + 1
        If HC.Cells(331, dia) < "13" Then ad8 = ad8 + 1
        If HC.Cells(331, dia) < "10" Then av8 = av8 + 1
    End If
    If HC.Range("cl" & n) = HCON.Range("e16") Then
        a9 = a9 + 1
        If HC.Cells(331, dia) < "13" Then ad9 = ad9 + 1
        If HC.Cells(331, dia) < "10" Then av9 = av9 + 1
    End If
Otro:
Next n
If HCON.Range("d8") <> "" Then
    If ad1 < 5 Then
        AreaData1.Caption = "  " & a1 & " (" & ad1 & ")  " & vbTab & ad1 - av1 & " / " & 1
    ElseIf ad1 < 6 Then
        AreaData1.Caption = "  " & a1 & " (" & ad1 & ")  " & vbTab & ad1 - av1 & " / " & 2
    Else
        AreaData1.Caption = "  " & a1 & " (" & ad1 & ")  " & vbTab & ad1 - av1 & " / " & Round(ad1 / 3, 0)
    End If
End If
If HCON.Range("d9") <> "" Then
    If ad2 < 5 Then
        AreaData2.Caption = "  " & a2 & " (" & ad2 & ")  " & vbTab & ad2 - av2 & " / " & 1
    ElseIf ad2 < 6 Then
        AreaData2.Caption = "  " & a2 & " (" & ad2 & ")  " & vbTab & ad2 - av2 & " / " & 2
    Else
        AreaData2.Caption = "  " & a2 & " (" & ad2 & ")  " & vbTab & ad2 - av2 & " / " & Round(ad2 / 3, 0)
    End If
End If
If HCON.Range("d10") <> "" Then
If ad3 < 5 Then
    AreaData3.Caption = "  " & a3 & " (" & ad3 & ")  " & vbTab & ad3 - av3 & " / " & 1
ElseIf ad1 < 6 Then
    AreaData3.Caption = "  " & a3 & " (" & ad3 & ")  " & vbTab & ad3 - av3 & " / " & 2
Else
    AreaData3.Caption = "  " & a3 & " (" & ad3 & ")  " & vbTab & ad3 - av3 & " / " & Round(ad3 / 3, 0)
End If
End If
If HCON.Range("d11") <> "" Then
If ad4 < 5 Then
    AreaData4.Caption = "  " & a4 & " (" & ad4 & ")  " & vbTab & ad4 - av4 & " / " & 1
ElseIf ad4 < 6 Then
    AreaData4.Caption = "  " & a4 & " (" & ad4 & ")  " & vbTab & ad4 - av4 & " / " & 2
Else
    AreaData4.Caption = "  " & a4 & " (" & ad4 & ")  " & vbTab & ad4 - av4 & " / " & Round(ad4 / 3, 0)
End If
End If
If HCON.Range("d12") <> "" Then
If ad5 < 5 Then
    AreaData5.Caption = "  " & a5 & " (" & ad5 & ")  " & vbTab & ad5 - av5 & " / " & 1
ElseIf ad5 < 6 Then
    AreaData5.Caption = "  " & a5 & " (" & ad5 & ")  " & vbTab & ad5 - av5 & " / " & 2
Else
    AreaData5.Caption = "  " & a5 & " (" & ad5 & ")  " & vbTab & ad5 - av5 & " / " & Round(ad5 / 3, 0)
End If
End If
If HCON.Range("d13") <> "" Then
If ad6 < 5 Then
    AreaData6.Caption = "  " & a6 & " (" & ad6 & ")  " & vbTab & ad6 - av6 & " / " & 1
ElseIf ad6 < 6 Then
    AreaData6.Caption = "  " & a6 & " (" & ad6 & ")  " & vbTab & ad6 - av6 & " / " & 2
Else
    AreaData6.Caption = "  " & a6 & " (" & ad6 & ")  " & vbTab & ad6 - av6 & " / " & Round(ad6 / 3, 0)
End If
End If
If HCON.Range("d14") <> "" Then
If ad7 < 5 Then
    AreaData7.Caption = "  " & a7 & " (" & ad7 & ")  " & vbTab & ad7 - av7 & " / " & 1
ElseIf ad7 < 6 Then
    AreaData7.Caption = "  " & a7 & " (" & ad7 & ")  " & vbTab & ad7 - av7 & " / " & 2
Else
    AreaData7.Caption = "  " & a7 & " (" & ad7 & ")  " & vbTab & ad7 - av7 & " / " & Round(ad7 / 3, 0)
End If
End If
If HCON.Range("d15") <> "" Then
If ad8 < 5 Then
    AreaData8.Caption = "  " & a8 & " (" & ad8 & ")  " & vbTab & ad8 - av8 & " / " & 1
ElseIf ad8 < 6 Then
    AreaData8.Caption = "  " & a8 & " (" & ad8 & ")  " & vbTab & ad8 - av8 & " / " & 2
Else
    AreaData8.Caption = "  " & a8 & " (" & ad8 & ")  " & vbTab & ad8 - av8 & " / " & Round(ad8 / 3, 0)
End If
End If
If HCON.Range("d16") <> "" Then
If ad9 < 5 Then
    AreaData9.Caption = "  " & a9 & " (" & ad9 & ")  " & vbTab & ad9 - av9 & " / " & 1
ElseIf ad9 < 6 Then
    AreaData9.Caption = "  " & a9 & " (" & ad9 & ")  " & vbTab & ad9 - av9 & " / " & 2
Else
    AreaData9.Caption = "  " & a9 & " (" & ad9 & ")  " & vbTab & ad9 - av9 & " / " & Round(ad9 / 3, 0)
End If
End If
Application.EnableEvents = True
Application.ScreenUpdating = True
End Sub
Private Sub BtnAyuda_Click()
With AYUDAPEQ
    .Tema.Caption = HCON.Range("da15")
    .TextoAyuda = HCON.Range("Db15")
    .StartUpPosition = 0
    .left = 10
    .top = 10
    .TextoAyuda.SelStart = 0
    .Show 1
End With
End Sub

Attribute VB_Name = "RESUMENPERS"
Attribute VB_Base = "0{E11AD341-A183-4377-9BD6-3E6A1B48AF96}{087CEF89-0DAE-4CFA-9721-DF06F8585C24}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Sub ACTUALIZA()
On Error Resume Next
fila = ActiveCell.Row
HC.Range("i328") = fila
HC.Calculate
Nombre.Caption = HC.Range("DO" & fila)
If HC.Range("h" & fila) = "" Then
    LabelAlertas.Caption = "-SIN NOMBRE-"
    LabelAlertas.BackColor = &HC0&
    LabelAlertas.ForeColor = &HFFFFFF
ElseIf HC.Range("cj" & fila) = "MANUAL" Then
    LabelAlertas.Caption = "-CALCULO MANUAL-"
    LabelAlertas.BackColor = &H80C0FF
    LabelAlertas.ForeColor = &H0&
Else
If HC.Range("ct" & fila) = "1 MES" Or HC.Range("i341") = 1 Then
    Lperiodo.Visible = False
    HRefAcu.Visible = False
    HDesvAcu.Visible = False
    HEfectivasAcu.Visible = False
Else
    Lperiodo.Visible = True
    HRefAcu.Visible = True
    HDesvAcu.Visible = True
    HEfectivasAcu.Visible = True
End If
If HC.Range("cr" & fila) = "" Or HC.Range("cr" & fila) = HCON.Range("bf25") Then
    FrameDAS.Visible = True
    LDAS.Visible = False
Else
    FrameDAS.Visible = False
    LDAS.Visible = True
End If
'HORAS
Hdesv.Caption = Format(HC.Range("az364"), "+0.# h.;-0.# h.;0 h.")
DesvPresenciales.Caption = Format(HC.Range("aw390"), "+0.# h.;-0.# h.;0 h.")
HDesvAcu.Caption = Format(HC.Range("aw364"), "+0.# h.;-0.# h.;0 h.")
Href.Caption = Format(HC.Range("az362"), "0.# h.")
HPresenciales = Format(HC.Range("AW389"), "0.# h.")
HRefAcu.Caption = Format(HC.Range("aw362"), "0.# h.")
HEfectivas.Caption = Format(HC.Range("aw330"), "0.# h.")
HEfectivas2.Caption = Format(HC.Range("aw332"), "0.# h.")
HEfectivasAcu.Caption = Format(HC.Range("az330"), "0.# h.")
Hreales.Caption = Format(HC.Range("aw331"), "0.# h.")
HActividad.Caption = Format(HC.Range("aw332"), "0.# h.")
HLocalizacion.Caption = Format(HC.Range("aw333"), "0.# h.")
Hfes.Caption = Format(HC.Range("aw398"), "0.# h.")
Hnoc.Caption = Format(HC.Range("aw399"), "0.# h.")
Hsigni.Caption = Format(HC.Range("aw400"), "0.# h.")
HSJ.Caption = Format(HC.Range("az331"), "0.# h.")
'DESCANSOS
DFA.Caption = HC.Range("Aw354")
DFNUEVOS.Caption = HC.Range("aw322") + HC.Range("AY369") - HC.Range("Aw369")
DFcoincide.Caption = -HC.Range("AY369") + HC.Range("Aw369")
If HC.Range("BG12") = 2 Then
    DSAA.Caption = HC.Range("AZ367") + HC.Range("AW335")
Else
    DSAA.Caption = HC.Range("AW367") + HC.Range("AW335")
End If
DSJNuevos.Caption = HC.Range("ay371")
DCA.Caption = HC.Range("AW368") + HC.Range("AW337")
DFU.Caption = HC.Range("AW336")
DSAU.Caption = HC.Range("AW335")
DSAF.Caption = Int(HC.Range("AY365") / 3)
DSAN.Caption = Int(HC.Range("AY366") / 6)
DSANUEVOS.Caption = Int(HC.Range("AY365") / 3) + Int(HC.Range("AY366") / 6)
DCU.Caption = HC.Range("AW337")
DFACU.Caption = HC.Range("AW369")
DSAACU.Caption = HC.Range("AW367") + (HC.Range("AY366") \ 6) + (HC.Range("AY365") \ 3)
DCACU.Caption = HC.Range("AW368") + HC.Range("ay371")
DOperativos.Caption = HC.Range("aw394") + HC.Range("aw391")
'DATOS PERSONALES
Area.Caption = HC.Range("cl" & fila)
Tip.Caption = HC.Range("cp" & fila)
Telefono.Caption = HC.Range("cq" & fila)
Otro.Caption = HC.Range("dc" & fila)
Regimen.Caption = HC.Range("cr" & fila)
Periodo.Caption = HC.Range("ct" & fila)
SM.Caption = HC.Range("aw323")
ST.Caption = HC.Range("aw324")
SN.Caption = HC.Range("aw325")
NOC.Caption = HC.Range("aw329")
FES.Caption = HC.Range("aw328")
NOCANT.Caption = HC.Range("AY366") - HC.Range("AW329") 'HC.Range("aw351")
FESANT.Caption = HC.Range("AY365") - HC.Range("AW328") 'HC.Range("aw350")
NOCTOTAL.Caption = HC.Range("AY366") Mod 6
FESTOTAL.Caption = HC.Range("AY365") Mod 3
'PRODUCTIVIDAD
EGR.Caption = Format(HC.Range("Ay380"), "0.00 |fffd|")
ICRES.Caption = Format(HC.Range("AW382"), "0.00 |fffd|")
ICREM.Caption = Format(HC.Range("AW384"), "0.00 |fffd|")
CREX.Caption = Format(HC.Range("AW385"), "0.00 |fffd|")
TOTAL.Caption = Format(HC.Range("AW386"), "0.00 |fffd|")
IndiceIcrem.Caption = Format(HC.Range("Ay384"), "0.0")
IndiceCrex.Caption = Format(HC.Range("AW385") / 12, "0.0")
IndiceIcres.Caption = Format(HC.Range("aw379"), "0.0")
'SITUACIONES
AP.Caption = HC.Range("AW374")
ApActual.Caption = HC.Range("AW342")
VacActual.Caption = HC.Range("AW392")
IndActual.Caption = HC.Range("AW343")
Ind.Caption = HC.Range("AX375") & " / 4"
TraNoctur.Caption = HC.Range("ay375") & " / 58"
Vacaciones.Caption = HC.Range("aw393")
MaxDdiarios.Caption = Int(HC.Range("aw405") / 2)

'------------------COMENTARIOS----------------------------
'ALERTAS-------------------
        If HC.Range("aw338") > 0 Then Alerta = Alerta & " - HAY ERRORES GRAVES, ." & vbCrLf
        If HC.Range("aw396") > 0 Then Alerta = Alerta & " - TIENE MAS DE 3 DIAS POR INDISPOSICION MEDICA CONSECUTIVOS." & vbCrLf
        If HC.Range("AW335") > 2 Then Alerta = Alerta & " - NO SE PUEDEN PONER MAS DE 2 DESCANSOS SINGULARIZADOS EN UN PERIODO DE REFERENCIA." & vbCrLf
        If HC.Range("AW326") > 0 And HC.Range("AW367") > 0 And HC.Range("AW335") < 2 Then Alerta = Alerta & " - FALTA ALGUN DESCANSO SINGULARIZADO POR NOMBRAR. " & vbCrLf
        If HC.Range("AW367") < 0 Then Alerta = Alerta & " - TIENE ALGUN DESCANSO SINGULARIZADO QUE NO LE CORRESPONDE." & vbCrLf
        If HC.Range("Ay369") < 0 Then Alerta = Alerta & " - TIENE ALGUN DESCANSO POR DIA FESTIVO NO ADQUIRIDO." & vbCrLf
        If HC.Range("AW368") < 0 Then Alerta = Alerta & " - TIENE ALGUN DESCANSO COMPENSATORIO NO ADQUIRIDO." & vbCrLf
        If HC.Range("aw394") + HC.Range("aw391") > Int(HC.Range("aw405") / 2) Then Alerta = Alerta & " - MAS DE LA MITAD DE LOS DESCANSOS DIARIOS SON INFERIORES A 11 HORAS"
        If HC.Range("ax375") > 4 Then Alerta = Alerta & " - SUPERA EL MAXIMO DE 4 DIAS POR INDISPOSICION MEDICA EN A|fffd|O NATURAL." & vbCrLf
        If HC.Range("CP" & fila).Value = "" Then Alerta = " - NO SE HA DEFINIDO EL TIP PARA ESTA PERSONA." & vbCrLf
        If HC.Range("aw346") = "NO" Then Alerta = " - NO EXISTEN DATOS ANTERIORES PARA ESTA PERSONA / TIP."
         
'ADVERTENCIAS
        If HC.Range("aw330") - HC.Range("aw389") < -7.5 Or HC.Range("aw330") - HC.Range("aw389") > 7.5 Then ADVERTENCIA = ADVERTENCIA & " - LA DESVIACION ES ALTA." & vbCrLf
        If HC.Range("aw391") > 0 Then ADVERTENCIA = ADVERTENCIA & " - ALGUN DESCANSO DIARIO NO ES CORRECTO." & vbCrLf
        If HC.Range("ay369") > 0 Then ADVERTENCIA = ADVERTENCIA & " - FALTA NOMBRAR ALGUN DESCANSO POR DIA FESTIVO." & vbCrLf
        If HC.Range("aW397") = "E" Then ADVERTENCIA = ADVERTENCIA & " - ALGUN DESCANSO POR DIA FESTIVO SE HA PLANIFICADO ANTES DE PRODUCIRSE EL FESTIVO." & vbCrLf
        If HC.Range("aw368") > 0 Then ADVERTENCIA = ADVERTENCIA & " - FALTA NOMBRAR ALGUN DESCANSO COMPENSATORIO." & vbCrLf
        If HC.Range("aw341") > 0 Then ADVERTENCIA = ADVERTENCIA & " - LA PLANIFICACION NO ESTA COMPLETA."

LabelAlertas.Caption = Alerta & Chr(10) & ADVERTENCIA
If ADVERTENCIA <> "" Then
    LabelAlertas.BackColor = &HFFFF&
    LabelAlertas.ForeColor = &H0&
End If
If Alerta <> "" Then
    LabelAlertas.BackColor = &HC0&
    LabelAlertas.ForeColor = &HFFFFFF
End If
If ADVERTENCIA = "" And Alerta = "" Then
    LabelAlertas.Caption = Chr(10) & "CORRECTO"
    LabelAlertas.BackColor = &H80FF80
    LabelAlertas.ForeColor = &H0&
End If
End If
If RESUMENPERS.Visible = True Then
Else
    RESUMENPERS.Show
End If

End Sub

Private Sub Frame1_Click()

End Sub
Attribute VB_Name = "Raton"
Option Explicit
' these are special function to get device specific things
#If VBA7 Then
    Declare PtrSafe Function GetDC Lib "user32" (ByVal hwnd As Long) As Long
    Declare PtrSafe Function GetDeviceCaps Lib "Gdi32" (ByVal hDC As Long, ByVal nIndex As Long) As Long
    Declare PtrSafe Function ReleaseDC Lib "user32" (ByVal hwnd As Long, ByVal hDC As Long) As Long
    Private Declare PtrSafe Function GetCursorPos Lib "user32" (p As tCursor) As Long
#Else
    Declare Function GetDC Lib "user32" (ByVal hwnd As Long) As Long
    Declare Function GetDeviceCaps Lib "Gdi32" (ByVal hDC As Long, ByVal nIndex As Long) As Long
    Declare Function ReleaseDC Lib "user32" (ByVal hwnd As Long, ByVal hDC As Long) As Long
    Private Declare Function GetCursorPos Lib "user32" (p As tCursor) As Long
#End If

Const LOGPIXELSX = 88
Const LOGPIXELSY = 90

' we need to be able to find cursor position where mouse was clicked
Public Type tCursor
    left As Long
    top As Long
End Type

Public Function pointsPerPixelX() As Double
    Dim hDC As Long
    hDC = GetDC(0)
    pointsPerPixelX = 72 / GetDeviceCaps(hDC, LOGPIXELSX)
    ReleaseDC 0, hDC
End Function

Public Function pointsPerPixelY() As Double
    Dim hDC As Long
    hDC = GetDC(0)
    pointsPerPixelY = 72 / GetDeviceCaps(hDC, LOGPIXELSY)
    ReleaseDC 0, hDC
End Function

Public Function WhereIsTheMouseAt() As tCursor
    Dim mPos As tCursor
    GetCursorPos mPos
    WhereIsTheMouseAt = mPos
End Function
Public Function convertMouseToForm() As tCursor
    Dim mPos As tCursor
    mPos = WhereIsTheMouseAt
    mPos.left = pointsPerPixelY * mPos.left
    mPos.top = pointsPerPixelX * mPos.top
    convertMouseToForm = mPos
End Function



Attribute VB_Name = "SELAREA"
Attribute VB_Base = "0{AD259712-E90A-43A0-BA4F-C96F967D73F2}{60093E5E-A571-4D3E-A7E3-D833910CD60D}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Private Sub ListArea_DblClick(ByVal Cancel As MSForms.ReturnBoolean)
If ActiveSheet.Name = "NOM2" And ListArea.ListIndex >= 0 Then
    HN.AreaSel = ListArea
ElseIf ListArea.ListIndex >= 0 Then
    ActiveCell.Value = HCON.Range("bk" & ListArea.ListIndex + 5)
End If
Unload Me
End Sub

Private Sub UserForm_Initialize()
'RATON---------------------------------
xpos = convertMouseToForm.left
ypos = convertMouseToForm.top
If ypos + Me.Height > ActiveWindow.Height Then ypos = ypos - Me.Height
If xpos + Me.Width > ActiveWindow.Width Then xpos = xpos - Me.Width
Me.top = ypos
Me.left = xpos
'---------------------------------------
HN.AreaSel = ""
If HCON.Range("e310") > 1 Then
    ListArea.List = HCON.Range("bo5:bo" & HCON.Range("bk2") + 3).Value
ElseIf HCON.Range("e310") = 1 Then
    ListArea.AddItem (HCON.Range("bo5").Value)
End If
End Sub
Private Sub ListArea_KeyDown(ByVal KeyCode As MSForms.ReturnInteger, ByVal Shift As Integer)
If KeyCode = vbKeyDelete Then
ActiveCell.Value = ""
Unload Me
End If
End Sub
Private Sub UserForm_QueryClose(Cancel As Integer, CloseMode As Integer)
HCON.Calculate
End Sub
Attribute VB_Name = "SELCALCULO"
Attribute VB_Base = "0{4FD80BF7-0D95-4377-9243-0251B05769C7}{9C6BA688-CD29-46FA-9781-2D7BA9ABBD15}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Private Sub ListCalculo_Click()
Application.EnableEvents = False
If HC.Range("cn10") = 1 Then
    For c = 1 To 7
        If HC.Cells(13, c).Value = ListCalculo.Value Then
            msg = MsgBox("Este dato ya se esta mostrando", vbExclamation, "Repetido")
            Unload Me
            GoTo fin
        End If
    Next
End If
If Application.Calculation = xlCalculationAutomatic Then Application.Calculation = xlCalculationManual
ActiveCell.Value = ListCalculo.Value
Unload Me
HC.ColumnaCalculos ActiveCell.Column
fin:
Application.EnableEvents = True
End Sub
Private Sub UserForm_Initialize()
'RATON---------------------------------
xpos = convertMouseToForm.left
ypos = convertMouseToForm.top
If ypos + SELCALCULO.Height > ActiveWindow.Height Then ypos = ypos - SELCALCULO.Height
If xpos + SELCALCULO.Width > ActiveWindow.Width Then xpos = xpos - SELCALCULO.Width
Me.top = ypos
Me.left = xpos
'---------------------------------------
ListCalculo.List = HCON.Range("bg4:bg14").Value
End Sub

Attribute VB_Name = "SELCARAC"
Attribute VB_Base = "0{47D11ABA-2E03-497C-BB3E-CC2014115DD8}{9B8E3615-17C4-4DBE-8AB9-293DE9D9B91F}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Private Sub UserForm_Initialize()
For n = 1 To 8
    ListBol.AddItem (HCON.Range("aq" & n + 3))
Next
For n = 1 To 3
    ListFecha.AddItem (HCON.Range("ar" & n + 3))
Next
For n = 1 To 3
    ListComent.AddItem (HCON.Range("as" & n + 3))
Next
End Sub
Private Sub Listbol_Click()
If ListBol.Value <> "" Then
    If HC.Range("cn10") = 1 Then
        For c = 1 To 7
            If HC.Cells(13, c).Value = ListBol.Value Then
                msg = MsgBox("Este dato ya se esta mostrando", vbExclamation, "Repetido")
                Unload Me
                GoTo fin
            End If
        Next
    End If
    Application.ScreenUpdating = False
    Application.EnableEvents = False
    ActiveCell.Value = ListBol.Value
    HC.CambiarFiltroDato ListBol.Value, ActiveCell.Column
fin:
    Unload Me
End If
End Sub
Private Sub Listfecha_Click()
If ListFecha.Value <> "" Then
    If HC.Range("cn10") = 1 Then
        For c = 1 To 7
            If HC.Cells(13, c).Value = ListFecha.Value Then
                msg = MsgBox("Este dato ya se esta mostrando", vbExclamation, "Repetido")
                Unload Me
                GoTo fin
            End If
        Next
    End If
    Application.ScreenUpdating = False
    Application.EnableEvents = False
    ActiveCell.Value = ListFecha.Value
    HC.CambiarFiltroDato ListFecha.Value, ActiveCell.Column
fin:
    Unload Me
End If
End Sub
Private Sub Listcoment_Click()
If ListComent.Value <> "" Then
    If HC.Range("cn10") = 1 Then
        For c = 1 To 7
            If HC.Cells(13, c).Value = ListComent.Value Then
                msg = MsgBox("Este dato ya se esta mostrando", vbExclamation, "Repetido")
                Unload Me
                GoTo fin
            End If
        Next
    End If
    Application.ScreenUpdating = False
    Application.EnableEvents = False
    ActiveCell.Value = ListComent.Value
    HC.CambiarFiltroDato ListComent.Value, ActiveCell.Column
fin:
    Unload Me
End If
End Sub
Attribute VB_Name = "SELCOMETIDOS"
Attribute VB_Base = "0{DBD4E0AB-29B4-4779-9D33-082ACF9365FB}{AA61E700-7ED6-44AD-98E2-051F7BB23D7D}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Dim Eventos
Private Sub BtnCatalogoLugar_Click()
Unload Me
Application.ScreenUpdating = True
CATCOMETIDOS.Show
End Sub

Private Sub ListCometidos_Click()
If Eventos = True Then
    Application.EnableEvents = True
    ActiveCell.Value = ListCometidos.Value
Else
    HN.CometidoSel = ListCometidos.Value
End If
Unload Me
End Sub
Private Sub Listcometidos_KeyDown(ByVal KeyCode As MSForms.ReturnInteger, ByVal Shift As Integer)
If KeyCode = vbKeyDelete Then
ActiveCell.Value = ""
Unload Me
End If
End Sub
Sub Inicializa(TIPO)
'RATON---------------------------------
xpos = convertMouseToForm.left
ypos = convertMouseToForm.top
If ypos + Me.Height > ActiveWindow.Height Then ypos = ypos - Me.Height
If xpos + Me.Width > ActiveWindow.Width Then xpos = xpos - Me.Width
Me.top = ypos
Me.left = xpos
'---------------------------------------
If TIPO = 1 Then
    If HBDCAT.Range("i160").End(xlUp).Row < 10 Then
        ListCometidos.Clear
    ElseIf HBDCAT.Range("i160").End(xlUp).Row = 10 Then
        ListCometidos.AddItem HBDCAT.Range("i10").Value
    Else
        ListCometidos.List = HBDCAT.Range("i10:i" & HBDCAT.Range("i160").End(xlUp).Row).Value
    End If
    
    Eventos = True
ElseIf TIPO = 2 Then
    Me.Caption = "COMETIDOS PRICIPALES"
    If HBDCAT.Range("a60").End(xlUp).Row < 10 Then
        ListCometidos.Clear
    ElseIf HBDCAT.Range("a60").End(xlUp).Row = 10 Then
        ListCometidos.AddItem HBDCAT.Range("a10").Value
    Else
        ListCometidos.List = HBDCAT.Range("a10:a" & HBDCAT.Range("a60").End(xlUp).Row).Value
    End If
    Eventos = False
End If
End Sub

Attribute VB_Name = "SELCONTAR"
Attribute VB_Base = "0{64362D45-4BFC-4894-9C90-79DE0466691F}{D9A37E6F-2892-4E08-BD39-3B6DAA196532}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Private Sub UserForm_Initialize()
ListPeriodo.AddItem "Este mes"
ListPeriodo.AddItem "3 meses"
ListPeriodo.AddItem "Desde 1 de febrero"
ListPeriodo.AddItem "Desde 1 de enero"
ListPeriodo.AddItem "24 meses"
ListPeriodo.ListIndex = HC.Range("cs5")
For i = 1 To 5
    If HC.Range("cs" & i + 5) <> "" Then ListCode1.AddItem HC.Range("cs" & i + 5).Value
Next
End Sub
Private Sub BtnMas1_Click()
If ListCode1.ListCount < 5 Then
    SELECCIONADOR.TIPO = "Serv"
    SELECCIONADOR.inicia
    SELECCIONADOR.Show
    If HC.CodigoDevuelto <> "" Then ListCode1.AddItem (HC.CodigoDevuelto)
Else
    msg = MsgBox("No se pueden seleccionar mas de 5 elementos", vbCritical, "Limite")
End If
End Sub
Private Sub BtnMenos1_Click()
If ListCode1.ListIndex <> -1 Then ListCode1.RemoveItem (ListCode1.ListIndex)
End Sub
Private Sub BtnAceptar_Click()
HC.Range("cs5") = ListPeriodo.ListIndex
HC.Range("cs6:cs10").NumberFormat = "@"
For i = 1 To 5
    If ListCode1.ListCount >= i Then
        HC.Range("cs" & i + 5) = ListCode1.List(i - 1)
    Else: HC.Range("cs" & i + 5) = ""
    End If
Next
Unload Me
End Sub
Attribute VB_Name = "SELDATO"
Attribute VB_Base = "0{3F8509D9-988D-4D46-A175-04042AEC3830}{4667169B-23C7-4E14-8C0B-CEA930260C3C}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Private Sub ListDato_Click()
Application.ScreenUpdating = False
Application.EnableEvents = False
If HC.Range("cn10") = 1 Then
    For c = 1 To 7
        If HC.Cells(13, c).Value = ListDato.Value Then
            msg = MsgBox("Este dato ya se esta mostrando", vbExclamation, "Repetido")
            Unload Me
            GoTo fin
        End If
    Next
End If
HC.Cells(12, 91 + ActiveCell.Column).ClearContents
If ListDato = HCON.Range("be14") Then
    Unload Me
    SELCARAC.Show
Else
    ActiveCell.Value = ListDato.Value
    HC.CambiarFiltroDato ListDato.Value, ActiveCell.Column
    Unload Me
End If
fin:
Application.EnableEvents = True
Application.ScreenUpdating = True
End Sub
Private Sub UserForm_Initialize()
'RATON---------------------------------
xpos = convertMouseToForm.left
ypos = convertMouseToForm.top
If ypos + SELDATO.Height > ActiveWindow.Height Then ypos = ypos - SELDATO.Height
If xpos + SELDATO.Width > ActiveWindow.Width Then xpos = xpos - SELDATO.Width
Me.top = ypos
Me.left = xpos
'---------------------------------------
ListDato.RowSource = "con!BE4:BE15"
End Sub
Attribute VB_Name = "SELDATOEXTRA"
Attribute VB_Base = "0{D1665BD5-67A2-455F-A675-361204281391}{B866D484-790F-4B7E-93EF-A5D289A25E75}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Private Sub BtnCalculo_Click()
Unload Me
SELCALCULO.Show
End Sub
Private Sub BtnDato_Click()
Unload Me
SELDATO.Show
End Sub
Private Sub BtnLimpiar_Click()
Unload Me
HC.Range(HC.Cells(13, ActiveCell.Column), HC.Cells(313, ActiveCell.Column)).ClearContents
HC.Cells(12, 91 + ActiveCell.Column).ClearContents
End Sub

Private Sub UserForm_Initialize()
'RATON---------------------------------
xpos = convertMouseToForm.left
ypos = convertMouseToForm.top
If ypos + Me.Height > ActiveWindow.Height Then ypos = ypos - Me.Height
If xpos + Me.Width > ActiveWindow.Width Then xpos = xpos - Me.Width
Me.top = ypos
Me.left = xpos
'---------------------------------------
End Sub
Attribute VB_Name = "SELDESHACER"
Attribute VB_Base = "0{9430AB3D-8E00-456B-B6A1-137A146899E0}{448A0CDC-1C4F-477A-801A-979461EBF93A}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Private Sub ListDes_DblClick(ByVal Cancel As MSForms.ReturnBoolean)
sel = ListDes.ListIndex
If sel > -1 Then
    If RAPIDAS.Visible = True Then RAPIDAS.Bloquea 0
    Application.ScreenUpdating = False
    If Application.Calculation = xlCalculationAutomatic Then Application.Calculation = xlCalculationManual
    Application.EnableEvents = False
    If HVAL.Range("b" & sel + 1000) <> "" Then
        HVAL.Range("b985:bx998").Value = HVAL.Range("b986:bx999").Value
        HVAL.Range("d999:bx999").Value = HC.Range("M" & Val(HVAL.Range("b" & sel + 1000)) & ":CG" & Val(HVAL.Range("b" & sel + 1000))).Value
        HVAL.Range("b999").Value = HVAL.Range("b" & sel + 1000).Value
        HVAL.Range("c999").Value = HVAL.Range("c" & sel + 1000).Value
    End If
    HC.Range("M" & Val(HVAL.Range("b" & sel + 1000)) & ":au" & Val(HVAL.Range("b" & sel + 1000))).Value = HVAL.Range("d" & sel + 1000 & ":al" & sel + 1000).Value
    HC.Range("ay" & Val(HVAL.Range("b" & sel + 1000)) & ":CG" & Val(HVAL.Range("b" & sel + 1000))).Value = HVAL.Range("ap" & sel + 1000 & ":bx" & sel + 1000).Value
    celda = HVAL.Range("c" & sel + 1000)
    HC.Cambiar_Servicio Val(HVAL.Range("b" & sel + 1000))
    HVAL.Range("b" & sel + 1000 & ":bx1049").Value = HVAL.Range("b" & sel + 1001 & ":bx1050").Value
    HC.VerEstrategias
    Quedan = Application.Count(HVAL.Range("b1000:b1049"))
    HC.BtnDeshacer.Caption = Quedan
    If Quedan = 0 Then
        HC.BtnDeshacer.Enabled = False
        HC.DeshacerDesple.Enabled = False
    End If
    HC.BtnRehacer.Enabled = True
    Application.EnableEvents = True
    HC.Range(celda).Select
    Application.ScreenUpdating = True
End If
Unload Me
End Sub
Private Sub UserForm_Initialize()
Cuantos = Application.Count(HVAL.Range("b1000:b1049"))
If Cuantos > 0 Then
    For fila = 0 To Cuantos - 1
        ListDes.AddItem ""
        ListDes.List(fila, 0) = HC.Range("do" & HVAL.Range("b" & fila + 1000)).Value
        ListDes.List(fila, 1) = Format(HC.Cells(13, HC.Range(HVAL.Range("c" & fila + 1000)).Column), "dd/mm")
        Anterior = HVAL.Cells(fila + 1000, HC.Range(HVAL.Range("c" & fila + 1000)).Column - 9)
        If Anterior = "" Then Anterior = "VACIO"
        ListDes.List(fila, 2) = Anterior
    Next
End If
End Sub
Attribute VB_Name = "SELDIANOMBRADO"
Attribute VB_Base = "0{621B57E5-B6E4-4A06-BC00-0BFE8068FC0D}{6223A2FF-6B44-4E53-BE40-CD4A0281F046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Public EsPlantilla
Private Sub UserForm_Initialize()

End Sub
Sub ACTUALIZA()
If Me.EsPlantilla = True Then
    Me.Caption = "SELECCION DE PLANTILLA"
    For n = 90 To 1 Step -1
        fila = (HN.Range("al1") - 100 * n)
        If fila > 0 Then
            If HBDN.Range("a" & fila).Value <> "" Then
                ListDia.AddItem Format(HBDN.Range("a" & fila), "dd/mm/yyyy") & " - Nombrado"
            Else
                ListDia.AddItem Format(HN.Range("g6") - n, "dd/mm/yyyy")
            End If
        End If
    Next
    On Error Resume Next
    ListDia.Value = HN.Range("g6") - 1
    ListDia.Value = HN.Range("g6") - 1 & " - Nombrado"
Else
    Me.Caption = "FECHA DEL CUADRANTE DE " & HC.Range("e3")
    For n = 1 To HC.Range("bd6")
        fila = (HC.Cells(13, n + 12) - DateSerial(Year(HC.Cells(13, n + 12)), 1, 0)) * 100 + 1
        If HBDN.Range("a" & fila).Value = HC.Cells(13, n + 12) Then
            ListDia.AddItem HC.Cells(13, n + 12) & " - Nombrado"
        Else
            ListDia.AddItem HC.Cells(13, n + 12)
        End If
    Next n
    On Error Resume Next
    ListDia.Value = HN.Range("g6")
    ListDia.Value = HN.Range("g6") & " - Nombrado"
End If
End Sub
Private Sub BtnAceptar_Click()
ejecuta
End Sub
Private Sub ListDia_DblClick(ByVal Cancel As MSForms.ReturnBoolean)
ejecuta
End Sub
Private Sub ejecuta()
If Me.EsPlantilla = True Then
    If Right(ListDia.Value, 8) = "Nombrado" Then
        HN.Dianterior = (CDate(left(ListDia.Value, 10)) - DateSerial(Year(CDate(left(ListDia.Value, 10))), 1, 0)) * 100 + 1
        Unload Me
    Else
        msg = MsgBox("Tienes que seleccionar la plantilla de un dia ya nombrado", vbCritical, "Seleccion de plantilla")
    End If
Else
    HN.Range("g6").Value = HC.Cells(13, ListDia.ListIndex + 13).Value
    HN.Range("al1") = (HN.Range("g6") - DateSerial(Year(HN.Range("g6")), 1, 0)) * 100 + 1
    HN.CargarServicios ListDia.ListIndex
    HN.Calculate
    Unload Me
End If
End Sub
Attribute VB_Name = "SELECCIONADOR"
Attribute VB_Base = "0{24A599C8-6E67-43C1-9502-A070CE0B6829}{1E1F0A79-D483-44B8-BC1C-8F2795D78ACA}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Public TIPO
Sub inicia()
If TIPO = "Serv" Then
    SELECCIONADOR.Caption = "Codigos de Servicio"
    SELECCIONADOR.Width = 140
    SELECCIONADOR.Height = 475
    ListaObj.Width = 120
    ListaObj.Height = 400
    ListaObj.RowSource = "con!k5:k" & HCON.Range("h313") + 5
End If
End Sub
Private Sub BtnAceptar_Click()
seleccionar
End Sub
Private Sub ListaObj_DblClick(ByVal Cancel As MSForms.ReturnBoolean)
seleccionar
End Sub
Private Sub seleccionar()
If TIPO = "Serv" Then
    HC.CodigoDevuelto = ListaObj.Value
    Unload Me
End If
End Sub

Attribute VB_Name = "SELEVENTOS"
Attribute VB_Base = "0{77684AFE-9BEA-4A3E-A98E-B8B9963A10A0}{8FC32F9C-BB94-4610-A328-D7A8232CAC86}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Sub ACTUALIZA()
ListEventos.Clear
If HBDCAT.Range("n60").End(xlUp).Row > 10 Then
    ListEventos.List = HBDCAT.Range("n10:n" & HBDCAT.Range("n60").End(xlUp).Row).Value
ElseIf HBDCAT.Range("n60").End(xlUp).Row = 10 Then
    ListEventos.AddItem (HBDCAT.Range("n10").Value)
End If
If HN.Eventos <> "" Then
    For sel = 0 To (Len(HN.Eventos) / 2) - 1
        ListEventos.Selected(Mid(HN.Eventos, sel * 2 + 1, 2)) = True
    Next
End If
End Sub
Private Sub BtnAceptar_Click()
For sel = 0 To ListEventos.ListCount - 1
    If ListEventos.Selected(sel) = True Then
        NumerosSeleccionados = NumerosSeleccionados & Format(sel, "00")
        NombresSeleccionados = NombresSeleccionados & ListEventos.List(sel) & ". "
    End If
Next
If MENUESTRATEGIA.Visible = True Then
    MENUESTRATEGIA.eventosseleccionados = NombresSeleccionados
Else
    HN.Eventos = ""
    HN.EventosNom = ""
    HN.Eventos = NumerosSeleccionados
    HN.EventosNom = NombresSeleccionados
End If
Unload Me
End Sub
Private Sub BtnCatalogoCometidos_Click()
Unload Me
CATCOMETIDOS.Show
End Sub
Private Sub UserForm_Initialize()
ACTUALIZA
End Sub
Attribute VB_Name = "SELHERRAMIENTAS"
Attribute VB_Base = "0{5348ADCE-4093-4CAC-A389-E228F0119CF0}{9F581615-8197-473B-BC85-A7DF51A1D434}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Private Sub BtnASIGO_Click()
Me.Hide
AUTOGRABADOR.modo = "PLANI"
AUTOGRABADOR.ActualizaPlanificacion
AUTOGRABADOR.Show
End Sub

Private Sub BtnAuto_Click()
AUTOPLADOS.Show
End Sub

Sub BtnComentarios_Click()
On Error Resume Next
For Each come In HC.Range("m12:ay313")
    If come.Comment.Visible = True Then
        come.Comment.Visible = False
    Else
        come.Comment.Visible = True
    End If
Next
End Sub
Private Sub BtnFavoritos_Click()
If RAPIDAS.Visible = False Then
    RAPIDAS.Show 0
Else
    Unload RAPIDAS
End If
End Sub

Private Sub BtnListas_Click()
HLIS.Activate
HLIS.ResetColumna
LISTAS.Show 0
End Sub
Private Sub BtnOpcionesVisual_Click()
MENUVISUAL.Show
End Sub

Private Sub BtnPapeletaPermiso_Click()
MENUPAPELETA.ListModalidad.Clear
'MENUPAPELETA.CheckVerano.Enabled = False
MENUPAPELETA.ListModalidad.AddItem ("VACACIONES")
MENUPAPELETA.ListModalidad.AddItem ("P. ASUNTOS PARTICULARES")
MENUPAPELETA.ListModalidad.AddItem ("P. FECHAS SE|fffd|ALADAS")
MENUPAPELETA.Show
End Sub
Private Sub BtnTurnos_Click()
'If HC.Range("bb371") < 0 Or HC.Range("bb371") > Application.Height Then HC.Range("bb371") = 30
'If HC.Range("bb371") < 0 Or HC.Range("bb370") > Application.Width Then HC.Range("bb371") = 30
SELTURNO.top = 80
SELTURNO.left = 40
SELTURNO.Show 0
End Sub
Private Sub BtnVacaciones_Click()
Application.ScreenUpdating = False
Application.EnableEvents = False
HC.GUARDARCUADRANTEMES
despro HVAC
If HC.Range("ba4") >= 2018 Then
    HVAC.Range("ar14") = HC.Range("ba4")
Else
    HVAC.Range("ar14") = 2018
End If
HVAC.Range("b7:am306").ClearContents
HVAC.Calculate
For fila = 7 To 306
    If HC.Range("cm" & fila + 7) <> "" Then
        HVAC.Range("b" & fila).Value = HC.Range("ci" & fila + 7).Value
        HVAC.Range("c" & fila).Value = HC.Range("cl" & fila + 7).Value
        HVAC.Range("d" & fila).Value = HC.Range("ck" & fila + 7) & "-" & HC.Range("cm" & fila + 7) & " " & HC.Range("cn" & fila + 7) & " " & HC.Range("co" & fila + 7)
        HVAC.Range("e" & fila).Value = HC.Range("cp" & fila + 7).Value
        'Credito
        cvacaciones = HC.Range("ch" & fila + 7)
        cap = HC.Range("de" & fila + 7)
        If InStr(cvacaciones, " / ") > 0 Then
           CRV = left(cvacaciones, InStr(cvacaciones, " / ") - 1)
           Cv = Mid(cvacaciones, InStr(cvacaciones, " / ") + 3, 3)
           If IsNumeric(CRV) And IsNumeric(Cv) Then HVAC.Range("o" & fila) = Cv - CRV
        End If
        If InStr(cap, " / ") > 0 Then
           CRV = left(cap, InStr(cap, " / ") - 1)
           Cv = Mid(cap, InStr(cap, " / ") + 3, 3)
           If IsNumeric(CRV) And IsNumeric(Cv) Then HVAC.Range("y" & fila) = Cv - CRV
        End If
        CRV = ""
        Cv = ""
    End If
Next
pro HVAC
If RAPIDAS.Visible = True Then Unload RAPIDAS
Unload Me
HVAC.Activate
HVAC.BtnCalcular_Click
Application.CommandBars.ActiveMenuBar.Enabled = True
Application.CommandBars.ActiveMenuBar.Enabled = False
Application.EnableEvents = True
Application.ScreenUpdating = True
End Sub

Private Sub BtnVistaComoda_Click()
Application.ScreenUpdating = False
If HC.Shapes("Cortinai").Visible = True Then
    HC.Shapes("Cortinai").Visible = False
    BtnVistaComoda.BorderColor = RGB(0, 0, 0)
Else
    HC.Shapes("Cortinai").Visible = True
    BtnVistaComoda.BorderColor = RGB(255, 0, 0)
End If
Me.Repaint
HC.ActualizaCortinas
Application.ScreenUpdating = True
End Sub
Private Sub BtnZoomMas_Click()
If ActiveWindow.Zoom < 150 Then ActiveWindow.Zoom = ActiveWindow.Zoom + 5
End Sub
Private Sub BtnZoomMenos_Click()
If ActiveWindow.Zoom > 50 Then ActiveWindow.Zoom = ActiveWindow.Zoom - 5
End Sub
Private Sub UserForm_Initialize()
If HC.Range("bb366") < 0 Then HC.Range("bb365") = 10
If HC.Range("bb366") + 100 > Application.Height Then HC.Range("bb366") = Application.Height - Me.Height - 50
If HC.Range("bb365") < 0 Then HC.Range("bb365") = 10
If HC.Range("bb365") > Application.Width - Me.Width Then HC.Range("bb365") = Application.Width - Me.Width - 100
ACTUALIZA
End Sub
Private Sub ACTUALIZA()
Me.left = HC.Range("bb365")
Me.top = HC.Range("bb366")
If HC.Shapes("Cortinai").Visible = True Then
    BtnVistaComoda.BorderColor = RGB(255, 0, 0)
Else
    BtnVistaComoda.BorderColor = RGB(0, 0, 0)
End If
End Sub
Private Sub UserForm_QueryClose(Cancel As Integer, CloseMode As Integer)
HC.Range("bb365") = Me.left
HC.Range("bb366") = Me.top
End Sub
Attribute VB_Name = "SELHORA"
Attribute VB_Base = "0{36A28E83-8932-4D1D-A71E-4F7D8648DE64}{6DD0645B-766F-45BF-99F5-B2E420427149}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Private Sub ListHoras_Click()
If Me.Visible = True Then Application.EnableEvents = True
ActiveCell = CDate(ListHoras)
Me.Hide
End Sub
Sub ActualizaHoras()
'RATON---------------------------------
xpos = convertMouseToForm.left
ypos = convertMouseToForm.top - Me.Height / 2
If ypos < 20 Then ypos = 20
If ypos + Me.Height > ActiveWindow.Height Then ypos = ActiveWindow.Height - Me.Height
If xpos < 20 Then xpos = 20
If xpos + Me.Width > ActiveWindow.Width Then xpos = ActiveWindow.Width - Me.Width
Me.top = ypos
Me.left = xpos
'---------------------------------------
horai = HBDN.Range("g" & HN.Range("ai" & ActiveCell.Row))
HORAF = HBDN.Range("h" & HN.Range("ai" & ActiveCell.Row))
'If horai > HORAF Then HORAF = HORAF + 1
CeldaI = Round(horai * 24 * 4 + 4, 0)
CeldaF = Round(HORAF * 24 * 4 + 4, 0)
ListHoras.Clear
For ho = CeldaI To CeldaF
    ListHoras.AddItem Format(HCON.Range("az" & ho).Value, "h:mm")
Next
On Error Resume Next
ListHoras.Value = Format(ActiveCell.Value, "h:mm")
End Sub

Attribute VB_Name = "SELINDI"
Attribute VB_Base = "0{7CBEA782-82A9-4C87-B696-C53EBE1C33BD}{3CE8DEBF-80B0-4CEF-97B3-E61904D00E75}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Private Sub BtnCatalogoIndicativos_Click()
Unload Me
CATINDICATIVOS.Show
Application.Calculation = xlCalculationAutomatic
End Sub
Private Sub ListIndi_Click()
HN.IndiSel = ListIndi.List(ListIndi.ListIndex, 0)
HN.IndiVinculo = ListIndi.List(ListIndi.ListIndex, 2)
Unload Me
End Sub
Private Sub UserForm_Initialize()
'RATON---------------------------------
xpos = convertMouseToForm.left
ypos = convertMouseToForm.top
If ypos + SELINDI.Height > ActiveWindow.Height Then ypos = ypos - SELINDI.Height
If xpos + SELINDI.Width > ActiveWindow.Width Then xpos = xpos - SELINDI.Width
If ypos < 0 Then ypos = 0
Me.top = ypos
Me.left = xpos
'---------------------------------------
horai = HBDN.Range("g" & HN.Range("ai" & ActiveCell.Row))
HORAF = HBDN.Range("h" & HN.Range("ai" & ActiveCell.Row))
'If HORAF < horai Then HORAF = HORAF + 1
uno = 0
For c = 5 To HCON.Range("x33").End(xlUp).Row
    no = False
    For f = HN.Range("al1") To HN.Range("al1") + 99 'Application.WorksheetFunction.CountIf(HBDN.Range("d" & HN.Range("al1") & ":d" & HN.Range("al1") + 99), HN.Range("an" & c))
        If HBDN.Range("d" & f).Value = HCON.Range("x" & c).Value Then
            If horai < HBDN.Range("H" & f).Value And HORAF > HBDN.Range("G" & f).Value Then  'Or horaf > HBDN.Range("g" & f).ValueAnd horaF <= HBDN.Range("g" & f).Value Then
                no = True
                Exit For
            End If
        End If
    Next
    If no = False Then
        ListIndi.AddItem
        ListIndi.List(uno, 0) = HCON.Range("x" & c)
        ListIndi.List(uno, 1) = HCON.Range("y" & c)
        ListIndi.List(uno, 2) = HCON.Range("z" & c)
        uno = uno + 1
    End If
Next
End Sub
Attribute VB_Name = "SELLUGAR"
Attribute VB_Base = "0{6EC8E8AC-68CB-47B4-9D52-5C9ADF444119}{261FF959-8F41-48D4-93AC-A0889817FF04}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Private Sub BtnCatalogoLugar_Click()
Unload Me
CATLUGARES.Show
Application.Calculation = xlCalculationAutomatic
End Sub
Private Sub ListLugar_Click()
HN.LugarSel = ListLugar.Value
Unload Me
End Sub
Sub ACTUALIZA(TIPO)
If TIPO = 1 Then
    Me.Caption = "Lugares PRINCIPALES"
    Me.Width = 234.75
    Me.Height = 186.75
    ListLugar.Width = 218.25
    ListLugar.Height = 131.35
    BtnCatalogoLugar.top = 150
    If HBDCAT.Range("x60").End(xlUp).Row > 10 Then
        ListLugar.List = HBDCAT.Range("x10:x" & HBDCAT.Range("x60").End(xlUp).Row).Value
        ListLugar.AddItem ("")
    ElseIf HBDCAT.Range("x60").End(xlUp).Row = 10 Then
        ListLugar.AddItem (HBDCAT.Range("x10").Value)
        ListLugar.AddItem ("")
    End If
    'RATON---------------------------------
    xpos = convertMouseToForm.left
    ypos = convertMouseToForm.top
    If ypos + Me.Height > ActiveWindow.Height Then ypos = ypos - Me.Height
    If xpos + Me.Width > ActiveWindow.Width Then xpos = xpos - Me.Width
    Me.top = ypos
    Me.left = xpos
'---------------------------------------
ElseIf TIPO = 2 Then
    Me.Caption = "Lugares SECUNDARIOS"
    Me.Width = 381
    Me.Height = 453
    ListLugar.Width = 362.25
    ListLugar.Height = 396.1
    BtnCatalogoLugar.top = 408
    Me.top = 150
    Me.left = 30
    If HBDCAT.Range("ab210").End(xlUp).Row > 10 Then
        ListLugar.List = HBDCAT.Range("ab10:ab" & HBDCAT.Range("ab210").End(xlUp).Row).Value
        ListLugar.AddItem ("")
    ElseIf HBDCAT.Range("ab210").End(xlUp).Row = 10 Then
        ListLugar.AddItem (HBDCAT.Range("ab10").Value)
        ListLugar.AddItem ("")
    End If
End If
End Sub

Attribute VB_Name = "SELMATERIAL"
Attribute VB_Base = "0{AE4ABABC-8851-48F7-8CD5-281CBA14CF01}{0A895C96-9498-4029-BF4A-D38F71ECF65D}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Public TIPO
Private Sub BtnCatalogoMaterial_Click()
Unload Me
CATMATERIAL.Show
End Sub
Private Sub ListMaterial_Click()
Application.EnableEvents = True
ActiveCell.Value = ListMaterial.Value
Unload Me
End Sub
Sub ACTUALIZA()
'RATON---------------------------------
xpos = convertMouseToForm.left
ypos = convertMouseToForm.top
If ypos + Me.Height > ActiveWindow.Height Then ypos = ypos - Me.Height
If xpos + Me.Width > ActiveWindow.Width Then xpos = xpos - Me.Width
Me.top = ypos
Me.left = xpos
'---------------------------------------
If TIPO = "M" Then
    SELMATERIAL.Caption = "Seleccion de Material"
    If HCON.Range("ab33").End(xlUp).Row < 6 Then
        finlista = 6
    Else
        finlista = HCON.Range("ab33").End(xlUp).Row
    End If
    ListMaterial.List = HCON.Range("ab5:ab" & finlista).Value
ElseIf TIPO = "V" Then
    SELMATERIAL.Caption = "Seleccion de vehiculo disponible"
    horai = HBDN.Range("g" & HN.Range("ai" & ActiveCell.Row))
    HORAF = HBDN.Range("h" & HN.Range("ai" & ActiveCell.Row))
    uno = 0
    For c = 36 To HCON.Range("ab64").End(xlUp).Row
    no = False
    For f = HN.Range("al1") To HN.Range("al1") + 99
        If HBDN.Range("bj" & f).Value = HCON.Range("ab" & c).Value Or HBDN.Range("bk" & f).Value = HCON.Range("ab" & c).Value Then
            If horai < HBDN.Range("H" & f).Value And HORAF > HBDN.Range("G" & f).Value Then
                no = True
                Exit For
            End If
        End If
    Next
    If no = False Then
        ListMaterial.AddItem
        ListMaterial.List(uno, 0) = HCON.Range("ab" & c)
        uno = uno + 1
    End If
Next
End If
End Sub

Attribute VB_Name = "SELMES"
Attribute VB_Base = "0{E6DC41A6-1CA6-4901-A14D-EBF288AD324F}{B86C94FE-F411-488D-8725-5332BF44B902}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Private Sub ActualizaCuadrantes()
lugar = ListAno.ListIndex * 500 * 12
'indicar si existe los cuadrantes de los meses
For meses = 0 To 11
    If HBDC.Range("A" & lugar + 500 + (500 * meses)).Value = "" Then
        SELMES.Controls("M" & meses + 1).Visible = False
    Else
        SELMES.Controls("M" & meses + 1).Visible = True
    End If
Next meses
End Sub
Private Sub ActualizaPersona()
lugar = ListAno.ListIndex * 500 * 12
'indicar si existe los cuadrantes de los meses
For meses = 0 To 11
    pers = Application.Match(HC.Range("cp" & ActiveCell.Row), HBDC.Range("cd" & lugar + 501 + (500 * meses) & ":cd" & lugar + 801 + (500 * meses)), 0)
    If IsError(pers) = True Then
        SELMES.Controls("M" & meses + 1).Visible = False
    Else
        SELMES.Controls("M" & meses + 1).Visible = True
    End If
Next meses
'Me.Caption "Datos de la persona encontrada en..."
End Sub
Private Sub ListAno_Change()
If MENUPERSONA.Visible = True Then
    ActualizaPersona
Else
    ActualizaCuadrantes
End If
End Sub
Private Sub UserForm_Initialize()
'RATON---------------------------------
xpos = convertMouseToForm.left
ypos = convertMouseToForm.top
If ypos + Me.Height > ActiveWindow.Height Then ypos = ypos - Me.Height
If xpos + Me.Width > ActiveWindow.Width Then xpos = xpos - Me.Width
If ypos < 0 Then ypos = 10
Me.top = ypos
Me.left = xpos
'---------------------------------------
ListMes.RowSource = "CON!BA4:BA15"
ListAno.RowSource = "CON!BB4:BB13"
If HC.Range("ba3") <> "ELEGIR MES" Then
    ListMes.Value = HC.Range("BA3").Value
    ListAno.Value = HC.Range("BA4").Value
Else
    ListMes.ListIndex = Month(Date) - 1
    If Year(Date) >= 2014 And Year(Date) <= 2026 Then ListAno.ListIndex = Year(Date) - 2015
End If
If MENUPERSONA.Visible = True Then Me.Caption = "Copiar datos encontrados en..."
montar
End Sub
Private Sub BtnAceptar_Click()
If MENUPERSONA.Visible = True Then
    pers = Application.Match(HC.Range("cp" & ActiveCell.Row), HBDC.Range("cd" & (ListAno.ListIndex * 12 + ListMes.ListIndex + 1) * 500 + 1 & ":cd" & (ListAno.ListIndex * 12 + ListMes.ListIndex + 1) * 500 + 301), 0)
    If IsError(pers) = False Then
        pers = pers + (ListAno.ListIndex * 12 + ListMes.ListIndex + 1) * 500
        HC.Range("cm" & ActiveCell.Row) = HBDC.Range("ca" & pers).Value 'nombre
        HC.Range("cn" & ActiveCell.Row) = HBDC.Range("cb" & pers).Value 'apellido1
        HC.Range("co" & ActiveCell.Row) = HBDC.Range("cc" & pers).Value 'apellido 2
        HC.Range("ck" & ActiveCell.Row) = HBDC.Range("by" & pers).Value
        HC.Range("cp" & ActiveCell.Row) = HBDC.Range("cd" & pers).Value
        HC.Range("cl" & ActiveCell.Row) = HBDC.Range("ce" & pers).Value
        HC.Range("cq" & ActiveCell.Row) = HBDC.Range("cf" & pers).Value
        HC.Range("ct" & ActiveCell.Row) = HBDC.Range("ch" & pers).Value
        HC.Range("cl" & ActiveCell.Row) = HBDC.Range("bz" & pers).Value
        HC.Range("dc" & ActiveCell.Row) = HBDC.Range("cq" & pers).Value
        HC.Range("cr" & ActiveCell.Row) = HBDC.Range("cf" & pers).Value
        HC.Range("cu" & ActiveCell.Row) = HBDC.Range("ci" & pers).Value 'caracteristicas
        HC.Range("ch" & ActiveCell.Row).Value2 = HC.Range("ay393") & " / " & Mid(HBDC.Range("bv" & pers).Value, InStr(HBDC.Range("bv" & pers).Value, " / ") + 3, 3)
        HC.Range("de" & ActiveCell.Row).Value2 = HC.Range("ay374") & " / " & Mid(HBDC.Range("cs" & pers).Value, InStr(HBDC.Range("cs" & pers).Value, " / ") + 3, 3)
        HC.Cambiar_Servicio ActiveCell.Row
        Unload Me
    End If
Else
    If HBDC.Range("a" & (ListAno.ListIndex * 12 + ListMes.ListIndex + 1) * 500) = "" Then
        msg = MsgBox("No existen datos para el periodo. Se crear|fffd| un cuadrante nuevo para el mes seleccionado" & vbCrLf & vbCrLf & "Recuerda que se crear|fffd| con los datos del ultimo periodo seleccionado.", 65, "CUADRANTE NUEVO")
        If msg = 2 Then GoTo fin
    End If
    Unload Me
    HC.Cambio_mes ListMes.ListIndex, ListAno.ListIndex, True, True
fin:
End If
HC.SpinMes.Enabled = True
End Sub
Private Sub ListMes_DblClick(ByVal Cancel As MSForms.ReturnBoolean)
If MENUPERSONA.Visible = True Then
    pers = Application.Match(HC.Range("cp" & ActiveCell.Row), HBDC.Range("cd" & (ListAno.ListIndex * 12 + ListMes.ListIndex + 1) * 500 + 1 & ":cd" & (ListAno.ListIndex * 12 + ListMes.ListIndex + 1) * 500 + 301), 0)
    If IsError(pers) = False Then
        pers = pers + (ListAno.ListIndex * 12 + ListMes.ListIndex + 1) * 500
        MENUPERSONA.Nombre = HBDC.Range("ca" & pers).Value
        MENUPERSONA.Apellido1 = HBDC.Range("cb" & pers).Value
        MENUPERSONA.Apellido2 = HBDC.Range("cc" & pers).Value
        MENUPERSONA.Empleo = HBDC.Range("by" & pers).Value
        MENUPERSONA.Tip = HBDC.Range("cd" & pers).Value
        MENUPERSONA.Telefono = HBDC.Range("ce" & pers).Value
        MENUPERSONA.Regimen = HBDC.Range("cf" & pers).Value
        MENUPERSONA.Periodo = HBDC.Range("ch" & pers).Value
        MENUPERSONA.Area = HBDC.Range("bz" & pers).Value
        MENUPERSONA.Grupo = HBDC.Range("cq" & pers).Value
        MENUPERSONA.SpinAPCre = Mid(HBDC.Range("cs" & pers).Value, InStr(HBDC.Range("cs" & pers).Value, " / ") + 3, 3)
        MENUPERSONA.SpinVacCre = Mid(HBDC.Range("bv" & pers).Value, InStr(HBDC.Range("bv" & pers).Value, " / ") + 3, 3)
        HC.Cambiar_Servicio ActiveCell.Row
        Unload Me
    End If
Else
    If HBDC.Range("a" & (ListAno.ListIndex * 12 + ListMes.ListIndex + 1) * 500) = "" Then
        msg = MsgBox("No existen datos para el periodo. Se crear|fffd| un cuadrante nuevo para el mes seleccionado" & vbCrLf & vbCrLf & "Recuerda que se crear|fffd| con los datos del ultimo periodo seleccionado.", 65, "CUADRANTE NUEVO")
        If msg = 2 Then GoTo fin
    End If
    Unload Me
    HC.Cambio_mes ListMes.ListIndex, ListAno.ListIndex, True, True
fin:
End If
HC.SpinMes.Enabled = True
End Sub
Private Sub montar()
'Situar los check de los meses en su sitio
For n = 0 To 11
    SELMES.Controls("M" & n + 1).top = 20 + (n * 14.6)
Next
End Sub
Attribute VB_Name = "SELNOMBRAR"
Attribute VB_Base = "0{8339CD11-4EFC-42F3-B573-3ABDCC952BC8}{B7A1E3CE-6182-4C6B-B396-BB99BADFB872}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Private Sub BtnGrabarYa_Click()
Unload Me
If HBDN.Range("b" & HN.Range("ai" & ActiveCell.Row)) = "SERVICIO" And HBDN.Range("c" & HN.Range("ai" & ActiveCell.Row)).Interior.ColorIndex = 35 Then
    AUTOGRABADOR.modo = "PAPELETAS"
    AUTOGRABADOR.GrabaUno HN.Range("ai" & ActiveCell.Row)
    AUTOGRABADOR.Show
Else
    msg = MsgBox("Este Servicio no esta listo para ser grabado en SIGO", vbCritical, "Auto-Grabador")
End If
End Sub
Private Sub CommandButton2_Click()
HN.Grabando = 1
Unload Me
End Sub
Private Sub CommandButton3_Click()
HN.Grabando = 2
Unload Me
End Sub

Attribute VB_Name = "SELORDENARVAC"
Attribute VB_Base = "0{F76B0917-A6C9-4D32-AFE8-1B05469CDD63}{623911E3-1CA7-4B3C-B4D7-BF5FE317045C}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Private Sub BtnV_Click()
HVAC.Range("aa7:aa306").ClearContents
For orden = 7 To 306
    If HVAC.Range("e" & orden) <> "" Then
        If HVAC.Range("l" & orden) = "" And HVAC.Range("n" & orden) < DateSerial(HVAC.Range("l6"), 9, 15) Then
            pos = 1
        Else
            pos = 2
        End If
        HVAC.Range("aa" & orden) = pos
    End If
Next
HVAC.Range("b7:am307").Sort key1:=HVAC.Range("aa7"), order1:=xlAscending, key2:=HVAC.Range("n7"), order2:=xlAscending, key3:=HVAC.Range("o7"), order3:=xlDescending, header:=xlNo
HVAC.Range("l6").Select
Unload Me
HVAC.Range("n5").Select
Unload Me
End Sub
Private Sub BtnOAP_Click()
HVAC.Range("b7:am307").Sort key1:=HVAC.Range("x7"), order1:=xlAscending, key2:=HVAC.Range("y7"), order2:=xlDescending, header:=xlNo
HVAC.Range("x5").Select
Unload Me
End Sub
Private Sub BtnNav1_Click()
OrdenacionNav 1
End Sub
Private Sub BtnNav2_Click()
OrdenacionNav 2
End Sub
Private Sub BtnNav3_Click()
OrdenacionNav 3
End Sub
Private Sub BtnPSS1_Click()
OrdenacionPSS 1
End Sub
Private Sub BtnPSS2_Click()
OrdenacionPSS 2
End Sub
Private Sub BtnPSS3_Click()
OrdenacionPSS 3
End Sub
Private Sub BtnV1_Click()
Ordenacion 1
End Sub
Private Sub BtnV2_Click()
Ordenacion 2
End Sub
Private Sub BtnV3_Click()
Ordenacion 3
End Sub
Private Sub Ordenacion(turno)
HVAC.Range("aa7:aa306").ClearContents
HVAC.Range("g7:g306").Value = HVAC.Range(HVAC.Cells(7, 27 + turno), HVAC.Cells(306, 27 + turno)).Value
HVAC.Range("i7:i306").Value = HVAC.Range(HVAC.Cells(7, 30 + turno), HVAC.Cells(306, 30 + turno)).Value
HVAC.Range("k7:k306").Value = HVAC.Range(HVAC.Cells(7, 33 + turno), HVAC.Cells(306, 33 + turno)).Value
HVAC.Range("m7:m306").Value = HVAC.Range(HVAC.Cells(7, 36 + turno), HVAC.Cells(306, 36 + turno)).Value
For orden = 7 To 306
    If HVAC.Range("e" & orden) <> "" Then
        If HVAC.Range("j" & orden) = "" Then
            If InStr(1, HVAC.Range("h" & orden), turno) Then
                pos = 3
            ElseIf InStr(1, HVAC.Range("f" & orden), turno) Then
                pos = 2
            Else
                pos = 1
            End If
        ElseIf InStr(1, HVAC.Range("j" & orden), turno) Then
            pos = 7
        ElseIf InStr(1, HVAC.Range("h" & orden), turno) Then
            pos = 6
        ElseIf InStr(1, HVAC.Range("f" & orden), turno) Then
            pos = 5
        Else
            pos = 4
        End If
        HVAC.Range("aa" & orden) = pos
    End If
Next
HVAC.Range("b7:am307").Sort key1:=HVAC.Range("aa7"), order1:=xlAscending, key2:=HVAC.Range("n7"), order2:=xlAscending, header:=xlNo
HVAC.Range("l6").Select
Unload Me
End Sub
Private Sub OrdenacionPSS(turno)
HVAC.Range("aa7:aa306").ClearContents
For orden = 7 To 306
    If HVAC.Range("e" & orden) <> "" Then
        If HVAC.Range("r" & orden) = turno Then
            pos = 4
        ElseIf HVAC.Range("q" & orden) = turno Then
            pos = 3
        ElseIf HVAC.Range("p" & orden) = turno Then
            pos = 2
        Else
            pos = 1
        End If
        HVAC.Range("aa" & orden) = pos
    End If
Next
HVAC.Range("b7:am307").Sort key1:=HVAC.Range("aa7"), order1:=xlAscending, key2:=HVAC.Range("b7"), order2:=xlAscending, header:=xlNo
HVAC.Range("s6").Select
Unload Me
End Sub
Private Sub OrdenacionNav(turno)
HVAC.Range("aa7:aa306").ClearContents
For orden = 7 To 306
    If HVAC.Range("e" & orden) <> "" Then
        If HVAC.Range("v" & orden) = turno Then
            pos = 4
        ElseIf HVAC.Range("u" & orden) = turno Then
            pos = 3
        ElseIf HVAC.Range("t" & orden) = turno Then
            pos = 2
        Else
            pos = 1
        End If
        HVAC.Range("aa" & orden) = pos
    End If
Next
HVAC.Range("b7:am307").Sort key1:=HVAC.Range("aa7"), order1:=xlAscending, key2:=HVAC.Range("b7"), order2:=xlAscending, header:=xlNo
HVAC.Range("w6").Select
Unload Me
End Sub
Attribute VB_Name = "SELPERIODO"
Attribute VB_Base = "0{04E01526-4909-465C-B0E1-76A89A4326F9}{1CACBC37-69E8-4526-8B72-064644CC31B2}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Private Sub Listperiodo_Click()
ActiveCell.Value = ListPeriodo.Value
Unload Me
End Sub
Private Sub UserForm_Initialize()
'RATON---------------------------------
xpos = convertMouseToForm.left
ypos = convertMouseToForm.top
If ypos + SELPERIODO.Height > ActiveWindow.Height Then ypos = ypos - SELPERIODO.Height
If xpos + SELPERIODO.Width > ActiveWindow.Width Then xpos = xpos - SELPERIODO.Width
Me.top = ypos
Me.left = xpos
'---------------------------------------

ListPeriodo.RowSource = "con!BN4:BN6"
End Sub
Private Sub Listperiodo_KeyDown(ByVal KeyCode As MSForms.ReturnInteger, ByVal Shift As Integer)
If KeyCode = vbKeyDelete Then
ActiveCell.Value = ""
Unload Me
End If
End Sub

Attribute VB_Name = "SELPERSONAL2"
Attribute VB_Base = "0{C340F685-8D95-46FC-8592-9D0B4D1AAB7E}{EDFC3D31-E976-4053-81C5-5FA5EE572D57}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Public Servicio
Public NN
Public BDN
Private Sub ListPersonas_DblClick(ByVal Cancel As MSForms.ReturnBoolean)
BtnAceptar_Click
End Sub
Sub ACTUALIZA()
'RATON---------------------------------
xpos = convertMouseToForm.left
ypos = convertMouseToForm.top
If ypos + Me.Height > ActiveWindow.Height Then ypos = ypos - Me.Height
If xpos + Me.Width > ActiveWindow.Width Then xpos = xpos - Me.Width
If ypos < 0 Then ypos = 0
Me.top = ypos
Me.left = xpos
'---------------------------------------

Listado = 0
If NN = True Then
For bp = 13 To 612
    If HN.Range("at" & bp) = "" And HN.Range("au" & bp) = "SERV" Then
        ListPersonas.AddItem (HN.Range("AR" & bp).Value & " (" & HN.Range("AS" & bp).Value & ")")
        Listado = Listado + 1
    End If
Next
BtnAceptar.Enabled = False
Else
BtnAceptar.Enabled = True
For bp = 13 To 612
    If HN.Range("as" & bp) = Me.Servicio Then
        If IsError(Application.Match(HN.Range("ar" & bp), HBDN.Range("j" & BDN & ":ac" & BDN), 0)) = False Then
            ListPersonas.AddItem (HN.Range("AR" & bp).Value)
            ListPersonas.Selected(Listado) = True
            Listado = Listado + 1
        ElseIf HN.Range("AT" & bp) <> "SI" Then
            ListPersonas.AddItem (HN.Range("AR" & bp).Value)
            Listado = Listado + 1
        End If
    End If
Next
End If
altura = ListPersonas.ListCount * 20
If altura > 300 Then
    altura = 300
End If
Me.Height = altura + 50
ListPersonas.Height = altura
BtnAceptar.top = altura + 2
End Sub
Private Sub BtnAceptar_Click()
If NN = False Then
seleccionado = 0
HBDN.Range("J" & BDN & ":ac" & BDN).ClearContents
For seleccion = 0 To ListPersonas.ListCount - 1
    If ListPersonas.Selected(seleccion) = True Then
        HBDN.Cells(BDN, 10 + seleccionado) = ListPersonas.List(seleccion)
        seleccionado = seleccionado + 1
    End If
Next
HBDN.Range("i" & BDN) = seleccionado
Unload Me
End If
End Sub
Attribute VB_Name = "SELREGIMEN"
Attribute VB_Base = "0{326BDE1B-35D3-4D76-B037-FE94EAF8DE37}{E984BC25-3E7F-4511-82D2-9FD6D446E98A}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Private Sub ListRegimen_Click()
ActiveCell.Value = HCON.Range("BF" & 25 + ListRegimen.ListIndex)
Unload Me
End Sub
Private Sub UserForm_Initialize()
'RATON---------------------------------
xpos = convertMouseToForm.left
ypos = convertMouseToForm.top
If ypos + SELREGIMEN.Height > ActiveWindow.Height Then ypos = ypos - SELREGIMEN.Height
If xpos + SELREGIMEN.Width > ActiveWindow.Width Then xpos = xpos - SELREGIMEN.Width
Me.top = ypos
Me.left = xpos
'---------------------------------------
ListRegimen.RowSource = "con!BF4:BF9"
End Sub
Private Sub Listregimen_KeyDown(ByVal KeyCode As MSForms.ReturnInteger, ByVal Shift As Integer)
If KeyCode = vbKeyDelete Then
ActiveCell.Value = ""
Unload Me
End If
End Sub
Attribute VB_Name = "SELSERVNOM"
Attribute VB_Base = "0{0ECAD8EF-7AF2-4714-8F86-812ADB6353B4}{730967FB-E957-4D14-B5F8-EE5496C91231}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Private Sub ListIndi_Click()
If ListIndi.ListIndex <> -1 Then HN.ServSel = ListIndi.Text
Unload Me
End Sub
Private Sub UserForm_Initialize()
'RATON---------------------------------
xpos = convertMouseToForm.left
ypos = convertMouseToForm.top
If ypos + SELSERVNOM.Height > ActiveWindow.Height Then ypos = ypos - SELSERVNOM.Height
If xpos + SELSERVNOM.Width > ActiveWindow.Width Then xpos = xpos - SELSERVNOM.Width
Me.top = ypos
Me.left = xpos
'---------------------------------------

HN.ServSel = ""
Cuantos = Application.WorksheetFunction.CountA(HN.Range("aw13:aw100"))
If Cuantos > 1 Then
    ListIndi.List = HN.Range("aw13:aw" & Cuantos + 12).Value
Else
   ListIndi.AddItem (HN.Range("aw13").Value)
End If
End Sub
Attribute VB_Name = "SELSINO"
Attribute VB_Base = "0{FEF41162-5435-4CAD-9958-E0DCD87EA647}{AFB522DA-602E-407E-8D47-8E3741F47A02}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Private Sub ListIndi_Click()
ActiveCell.Value = ListIndi.Value
Unload Me
End Sub
Private Sub UserForm_Initialize()
'RATON---------------------------------
xpos = convertMouseToForm.left
ypos = convertMouseToForm.top
If ypos + SELSINO.Height > ActiveWindow.Height Then ypos = ypos - SELSINO.Height
If xpos + SELSINO.Width > ActiveWindow.Width Then xpos = xpos - SELSINO.Width
Me.top = ypos
Me.left = xpos
'---------------------------------------

ListIndi.RowSource = "con!BD4:BD5"
End Sub
Attribute VB_Name = "SELTURNO"
Attribute VB_Base = "0{6ECFE15A-64CC-42E6-94FA-C359D4E66FB8}{29CA25A9-A245-4828-919F-5056A89925DD}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Private Sub UserForm_Initialize()
Tur1.Caption = HCON.Range("aj307").Value
Tur2.Caption = HCON.Range("aj308").Value
Tur3.Caption = HCON.Range("aj309").Value
Tur4.Caption = HCON.Range("aj310").Value
Tur5.Caption = HCON.Range("aj311").Value
Tur6.Caption = HCON.Range("aj312").Value
End Sub
Private Sub BtnCatalogosTurnos_Click()
Unload Me
FORMTURNOS.Show
End Sub
'--------------------------------------------RELLENAR TURNOS --------------------------------------------------------------------------
Private Sub RELLENA_TURNO(ESTE)
Application.ScreenUpdating = False
Application.EnableEvents = False
If ActiveCell.Row > 13 And ActiveCell.Row < 314 And ActiveCell.Column > 12 And ActiveCell.Column <= HC.Range("BD8") And HCON.Range("ah" & 306 + ESTE) > 0 Then
    ActiveCell.Select
    ofs = ActiveCell.Column - 13
    filat = ActiveCell.Row
    cuantot = HCON.Range("ah" & 306 + ESTE).Value
    msg = 0
    Do
        i = i + 1
        If HC.Cells(filat, i + 12).Value <> "" Then
            msg = MsgBox("Hay servicios o situaciones planificadas. Quieres combinar?" & vbCrLf & "(Al Combinar se mantendran los servicios ya planificados)", 35, "COMBINAR TURNO?")
            Exit Do
        End If
        msg = 7
    Loop Until i = 35
    j = 0
    For relleno = ActiveCell.Column - 12 To HC.Range("bd6")
        If HC.Cells(filat, relleno + 12) = "" And msg = 6 Then
            HC.Cells(filat, 12 + relleno).Value = HCON.Cells(306 + ESTE, 37 + j).Text
        ElseIf msg = 7 Then
            HC.Cells(filat, 12 + relleno).Value = HCON.Cells(306 + ESTE, 37 + j).Text
        End If
        j = j + 1
        If j = cuantot Then j = 0
    Next relleno
    j = cuantot - 1
    For relleno = ActiveCell.Column - 13 To 1 Step -1
        If HC.Cells(filat, relleno + 12) = "" And msg = 6 Then
            HC.Cells(filat, 12 + relleno).Value = HCON.Cells(306 + ESTE, 37 + j).Text
        ElseIf msg = 7 Then
            HC.Cells(filat, 12 + relleno).Value = HCON.Cells(306 + ESTE, 37 + j).Text
        End If
        If j = 0 Then j = cuantot
        j = j - 1
    Next relleno
End If
'Me.Hide
HC.Cambiar_Servicio ActiveCell.Row
HC.GrabaDeshacer
HC.Calculate
Application.EnableEvents = True
Application.ScreenUpdating = True
End Sub
Private Sub Tur1_click()
RELLENA_TURNO 1
End Sub
Private Sub Tur2_click()
RELLENA_TURNO 2
End Sub
Private Sub Tur3_click()
RELLENA_TURNO 3
End Sub
Private Sub Tur4_click()
RELLENA_TURNO 4
End Sub
Private Sub Tur5_click()
RELLENA_TURNO 5
End Sub
Private Sub Tur6_click()
RELLENA_TURNO 6
End Sub

Attribute VB_Name = "SELVER"
Attribute VB_Base = "0{868A7E9B-945B-48C8-9DE0-4D14B9EAA7E8}{EEDC27C5-709F-44F0-A9C4-34EB32B1F7B1}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Private Sub ListDato_Click()
Application.ScreenUpdating = False
Application.EnableEvents = False
If Application.Calculation = xlCalculationAutomatic Then Application.Calculation = xlCalculationManual
ActiveCell.Value = ListDato.Value
Unload Me
HC.AplicaFiltrosVer
Application.EnableEvents = True
Application.ScreenUpdating = True
End Sub
Private Sub UserForm_Initialize()
'RATON---------------------------------
xpos = convertMouseToForm.left
ypos = convertMouseToForm.top
If ypos + SELVER.Height > ActiveWindow.Height Then ypos = ypos - SELVER.Height
If xpos + SELVER.Width > ActiveWindow.Width Then xpos = xpos - SELVER.Width
Me.top = ypos
Me.left = xpos
'---------------------------------------
ListDato.RowSource = "con!BC4:BC7"
End Sub
Attribute VB_Name = "SELVERAREA"
Attribute VB_Base = "0{F23135E9-7C0B-4F44-ADD3-A6BFCD71F5D5}{8EEB481A-2B50-45CE-8BA2-E1FAA032D764}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Private Sub BtnAceptar_Click()
aceptar
End Sub
Private Sub ListArea_DblClick(ByVal Cancel As MSForms.ReturnBoolean)
aceptar
End Sub
Private Sub UserForm_Initialize()
'RATON---------------------------------
xpos = convertMouseToForm.left
ypos = convertMouseToForm.top
If ypos + SELVERAREA.Height > ActiveWindow.Height Then ypos = ypos - SELVERAREA.Height
If xpos + SELVERAREA.Width > ActiveWindow.Width Then xpos = xpos - SELVERAREA.Width
Me.top = ypos
Me.left = xpos
'---------------------------------------
ListArea.RowSource = "con!BK4:BK13"
If ActiveSheet.Name = "C" Then ListArea.MultiSelect = fmMultiSelectMulti
End Sub
Private Sub aceptar()
If ActiveSheet.Name = "C" Then
    Application.ScreenUpdating = False
    Application.EnableEvents = False
    If Application.Calculation = xlCalculationAutomatic Then Application.Calculation = xlCalculationManual
    For far = 0 To ListArea.ListCount - 1
        If Areas <> "" Then separa = "#" Else separa = ""
        If ListArea.Selected(far) = True Then
            Areas = Areas & separa & ListArea.List(far)
            HC.Range("g" & 351 + far) = ListArea.List(far)
        Else
            HC.Range("g" & 351 + far) = ""
        End If
    Next
    If ListArea.Selected(0) = True Then Areas = "TODAS"
    If Areas <> "" Then ActiveCell.Value = Areas
    HC.AplicaFiltrosVer
    Application.ScreenUpdating = True
    Application.EnableEvents = True
    Unload Me
ElseIf ActiveSheet.Name = "VAC" Then
    ActiveCell.Value = ListArea.Value
    Unload Me
End If
End Sub
Attribute VB_Name = "SelVacas"
Attribute VB_Base = "0{A3C28E7F-50CC-49A4-8DB0-31FD1366FE52}{157E0BD9-69DE-44A3-B827-7D49865D26F8}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Attribute VB_Name = "TIPS"
Attribute VB_Base = "0{C3CA98B6-014E-47A9-93C1-1D1AFD30F215}{66D26EC5-E387-4597-ABC3-AF09D6167E40}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Private Sub UserForm_Initialize()
CajaTips.SetFocus
CajaTips.CurLine = 1
End Sub



Attribute VB_Name = "TRABAJANDO"
Attribute VB_Base = "0{D363E0EE-A4AB-4CAC-86B7-BBE6040D5458}{E1651C16-476E-4773-8350-4AB1EB29B2CA}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Attribute VB_Name = "TUTOINICIAL"
Attribute VB_Base = "0{B8D35444-ED7A-4FBF-8EBB-CE66676AEADA}{6D3FC0F6-9A02-42F8-B9A4-1740288531B7}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Private Sub UserForm_Initialize()
ActualizaTuto
End Sub
Private Sub ActualizaTuto()
On Error Resume Next
Tema.Caption = HCON.Range("dh" & HCON.Range("dh1") + 3)
TextoTuto.Value = HCON.Range("di" & HCON.Range("dh1") + 3)
TextoTuto.SelStart = 0
TUTOINICIAL.Repaint
End Sub
Private Sub SpinTuto_SpinUp()
If HCON.Range("dh1") < 16 Then HCON.Range("dh1") = HCON.Range("dh1") + 1
ActualizaTuto
End Sub
Private Sub SpinTuto_Spindown()
If HCON.Range("dh1") > 1 Then HCON.Range("dh1") = HCON.Range("dh1") - 1
ActualizaTuto
End Sub
Attribute VB_Name = "ThisWorkbook"
Attribute VB_Base = "0{00020819-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Public CIERRO
Public COLORSEL
Private Sub Workbook_Open()
On Error GoTo FalloInicio 'Resume Next
ACERCA.Show
If Workbooks.Count > 1 Then
    Dim LibroA As Workbook
    For Each LibroA In Application.Workbooks
        If LibroA.Name <> ThisWorkbook.Name And LibroA.Sheets(1).Range("m1") = "CUADRANTE OG.11/14" Then
            ThisWorkbook.CIERRO = 1
            msg = MsgBox("No se puede abrir Cuadrante con otro Cuadrante abierto!!", vbCritical, "Prevencion de errores")
            Workbooks.Add
            ThisWorkbook.Close savechanges = False
        End If
    Next
End If
Application.ScreenUpdating = False
ExcelModoCuadrante
Application.DisplayAlerts = True
If HC.Range("be12") <> "" Then
    Application.ScreenUpdating = True
    Pass.Show
    Application.ScreenUpdating = False
    If ThisWorkbook.CIERRO = 1 Then GoTo NOPASSCHECK
End If
despro HC
pro HC
'despro HCON
HCON.Range("cw7") = Now()
HC.Activate
HC.AplicaFiltrosVer
HC.CVisual HC.Range("m14").ColumnWidth
If HCON.Range("ah5") <> "" Or Application.WorksheetFunction.CountBlank(HCON.Range("ai4:ak4")) < 3 Then
    MENUUSERS.Show
Else
    HCON.Range("ag4:ag14").Value = HCON.Range("ah4:ah14").Value
End If
Application.ScreenUpdating = True
'CASO DE IMPORTAR SI CUADRANTE NUEVO
If HC.Range("ba1") = "SI" Then
    msg = MsgBox("Si ya usabas CUADRANTE OG.11/14 pulsa ACEPTAR para recuperar los datos de la version anterior." & vbCrLf & " Si es la primera vez que usas CUADRANTE OG.11/14 pulsa CANCELAR para iniciar.", 65, "PRIMER INICIO DE CUADRANTE OG.11/14 " & HC.Range("k1"))
    If msg = 1 Then
        MENUIMPORTAR.Show
        If HC.Range("bm1") <> "IMPORTADO" Then GoTo noimportado
    Else
noimportado:
        HC.Cambio_mes Month(Now) - 1, Year(Now) - 2015, True, True
        msg = MsgBox("AVISO IMPORTANTE" & vbCrLf & vbCrLf & "Es muy recomendable que consigas los diferentes listados de SIGO para tener una experiencia mucho mejor con esta aplicacion." & vbCrLf & vbCrLf & _
        "Consigue los siguientes listados antes de empezar a trabajar en serio." & vbCrLf & _
        "-Catalogo de personal (SIGO/SERVICIOS/Personal - Icono de descargar)" & vbCrLf & "Descarga el archivo de descansos (SIGO/SERVICIOS/ Cuadrante de Planificacion/ Descansos - Descargar archivo)" & vbCrLf & _
        "Credito de vacaciones y permisos (Recursos Humanos / listados - Selecciona toda la lista y guardala sobre un nuevo archivo de excel", vbInformation, "Consejo")
        msg = MsgBox("|fffd|Quires importar los datos del personal de SIGO ahora?", 65, "Iniciando")
        If msg = 1 Then
            HASI.Activate
            ImportarSIGO
            HASI.BtnVolver_Click
            msg = MsgBox("Puedes importar los datos de SIGO relativos a los descansos pendientes. Busca la opcion en el MENU", vbInformation, "Importar")
        Else
            CrearFulano
        End If
        Application.ScreenUpdating = False
        CrearEstrategiadePega
        'TUTOINICIAL.Show
    End If
End If
GoTo fin
NOPASSCHECK:
    Application.ScreenUpdating = False
    ExcelModoNormal
    ThisWorkbook.Close savechanges:=False
    GoTo fin
FalloInicio:
msg = MsgBox("Parece que hay algun problema con la ejecucion entre este ordenador y la compilacion de este archivo. Seguramente tu trabajo no se guarde en esta sesion. Prueba guardar este archivo despues de abrir con macros DESHABILITADAS y despues vuelve a ejecutar con macros activadas.", vbExclamation, "Error en este ordenador")
fin:

HC.BarraDias
On Error Resume Next
Kill (Environ("LOCALAPPDATA") & "\Temp\Autoprenox.exe")
On Error GoTo FalloInicio
Application.ScreenUpdating = True
HC.OLEObjects("AUTOPRENOX").Copy
Application.EnableEvents = True
CheckLetraWindows
Application.OnKey "^%c", "ReparacionRapida"
Application.OnKey "^%e", "TeclaOcultar"
End Sub
Private Sub CrearFulano()
Application.EnableEvents = False
Application.ScreenUpdating = False
Application.Calculation = xlCalculationManual
HC.Range("g14") = 1
HC.Range("h14") = "FULANO": HC.Range("cm14") = "FULANO"
HC.Range("i14") = "MENGANO": HC.Range("cn14") = "MENGANO"
HC.Range("j14") = "ZUTANO": HC.Range("co14") = "ZUTANO"
HC.Range("cp14") = "A12345B"
HC.Range("cq14") = "612345678"
HC.Range("cr14") = "General"
HC.Range("cs14") = "SI"
HC.Range("ct14") = "1 MES"
HC.Range("ci14") = 1
HC.Range("dc14") = 1
HC.Range("cj14") = "SI"
HC.Range("ck14") = "GC"
HC.Range("cl14") = "MA 1"
'Crear servicio de pega
HC.Calculate
For dia = 1 To HC.Range("bd6")
    If HC.Cells(12, dia + 12) = "S" Or HC.Cells(12, dia + 12) = "D" Then
        HC.Cells(14, dia + 12) = "DS"
    Else
        HC.Cells(14, dia + 12) = "OFI"
    End If
Next
HC.Cambiar_Servicio 14
End Sub
Private Sub CrearEstrategiadePega()
'Crear estrategia de pega
Application.EnableEvents = False
Application.Calculation = xlCalculationManual
HC.Range("ci363") = "Oficina": HC.Range("ci363").Interior.ColorIndex = HC.Range("i3").Interior.ColorIndex: HC.Range("ci363").Font.ColorIndex = HC.Range("i3").Font.ColorIndex
HC.Range("ci364") = "Descanso semanal": HC.Range("ci364").Interior.ColorIndex = HC.Range("i3").Interior.ColorIndex: HC.Range("ci364").Font.ColorIndex = HC.Range("i3").Font.ColorIndex
HC.Range("cj363") = "C": HC.Range("cj364") = "C"
HC.Range("ck363") = "#OFI|": HC.Range("ck364") = "#DS|"
HC.Range("cv363") = 0: HC.Range("cv364") = 0
HC.VerEstrategias
End Sub
Private Sub Workbook_Activate()
Application.ScreenUpdating = False
ExcelModoCuadrante
Application.ScreenUpdating = True
End Sub
Private Sub Workbook_Deactivate()
Application.ScreenUpdating = False
ExcelModoNormal
Application.ScreenUpdating = True
End Sub
Sub Workbook_BeforeClose(Cancel As Boolean)
If ActiveSheet.Name = "TUC" Then
    Cancel = True
    HTUC.BtnVolver_Click
    GoTo adios
End If
If ThisWorkbook.CIERRO = 3 Then
    ExcelModoNormal
    ThisWorkbook.Saved = True
    GoTo adios
ElseIf ThisWorkbook.Saved = True And ThisWorkbook.CIERRO <> 1 And Workbooks.Count < 2 Then
    ExcelModoNormal
    ThisWorkbook.Saved = True
    GoTo adios
ElseIf ThisWorkbook.CIERRO = 1 Then
    ThisWorkbook.Saved = True
    GoTo adios
Else
    If CloseMode <> 1 Then
        If Workbooks.Count > 1 Then
            If ThisWorkbook.Saved = False Then
                msg = MsgBox("No se han guardado los cambios." & vbCrLf & vbCrLf & " |fffd| CERRAR DE TODAS FORMAS ?", 20, "NO SE HAN GUARDADO CAMBIOS")
                If msg <> 6 Then
                    Cancel = True
                    End
                End If
            End If
            ThisWorkbook.CIERRO = 3
            ExcelModoNormal
            ThisWorkbook.Close savechanges:=False
            'msg = MsgBox("Antes de cerrar este CUADRANTE tienes que cerrar los demas documentos de Excel en uso. Tambien puedes cerrar solo el Cuadrante desde el menu de opciones.", vbCritical, "Excel en uso")
            Cancel = True
        Else
            If HCON.Range("ag7") = True Then
                msg = MsgBox("Guardar cambios en CUADRANTE NOMBRE: " & ThisWorkbook.Name & " ?", 35, "SALIR DE CUADRANTE OG.11/14")
            Else
                msg = MsgBox("Sin usuario activado. Se cerrara sin guardar cambios", vbExclamation, "Seguridad")
                msg = 7
            End If
            If msg = 6 Then ' Guardar
                TRABAJANDO.Textillo = "GUARDANDO Y CERRANDO"
                TRABAJANDO.Show 0
                TRABAJANDO.Repaint
                HCON.Range("cw7") = Now()
                HC.Shapes("RecuerdaGuardar").Visible = False
                Application.ScreenUpdating = False
                HC.AplicaFiltrosVer
                HPASS.Activate
                HCON.Range("ag4:ag14").ClearContents
                Me.Save
                ExcelModoNormal
                TRABAJANDO.Hide
                Application.ScreenUpdating = True
                ThisWorkbook.Saved = True
            ElseIf msg = 2 Then ' cancelar
                Cancel = True
                End
            ElseIf msg = 7 Then ' no Guardar y salir
                ExcelModoNormal
                ThisWorkbook.Saved = True
            End If
        End If
    End If
End If
adios:
'ThisWorkbook.Saved = True
End Sub
Sub ExcelModoNormal()
With Application
        .IgnoreRemoteRequests = False
        .CellDragAndDrop = True
        .AskToUpdateLinks = True
        .CopyObjectsWithCells = True
        .EnableAnimations = True
        .AutoPercentEntry = True
        .DisplayPasteOptions = True
        .DisplayFormulaBar = True
        .DisplayStatusBar = True
        .DisplayInsertOptions = True
        .MoveAfterReturn = True
        .UseSystemSeparators = True
        .EnableAutoComplete = True
        .CommandBars("Formatting").Visible = True
        .CommandBars("Standard").Visible = True
        .CommandBars.ActiveMenuBar.Enabled = True
        .ExecuteExcel4Macro ("show.toolbar(""ribbon"",1)")
        .EnableEvents = True
        .ScreenUpdating = True
        .Calculation = xlCalculationAutomatic ' Ok Automatic
        .Caption = ""
End With
Application.OnKey "^{x}"
Application.OnKey "^{z}"
Application.OnKey "^{p}"
Application.OnKey "{F1}"
Application.OnKey "^{V}"
Application.OnKey "{DEL}"
Application.OnKey "^0"
End Sub
Sub ExcelModoCuadrante()
On Error Resume Next
'Application.ScreenUpdating = False
With Application
    .Caption = "CUADRANTE OG. 11/14. " & HC.Range("k1")
    .CellDragAndDrop = False
    .FixedDecimal = False
    .AskToUpdateLinks = False
    .CopyObjectsWithCells = False
    .EnableAnimations = False
    .AutoPercentEntry = False
    .DisplayPasteOptions = False
    .DisplayInsertOptions = False
    .MoveAfterReturn = False
    .DisplayFormulaBar = False
    .DisplayStatusBar = False
    .DisplayCommentIndicator = xlCommentIndicatorOnly
    .CommandBars.ActiveMenuBar.Enabled = False
    .CommandBars("Watch Window").Visible = False
    .CommandBars("Text To Speech").Visible = False
    .CommandBars("List").Visible = False
    .CommandBars("Forms").Visible = False
    .CommandBars("Chart").Visible = False
    .CommandBars("PivotTable").Visible = False
    .CommandBars("Visual Basic").Visible = False
    .CommandBars("Borders").Visible = False
    .CommandBars("Protection").Visible = False
    .CommandBars("Picture").Visible = False
    .CommandBars("WordArt").Visible = False
    .CommandBars("Formula Auditing").Visible = False
    .CommandBars("External Data").Visible = False
    .CommandBars("EuroValue").Visible = False
    .CommandBars("Control Toolbox").Visible = False
    .CommandBars("Formatting").Visible = False
    .CommandBars("Standard").Visible = False
    .CommandBars("Stop Recording").Visible = False
    .CommandBars("Drawing").Visible = False
    .CommandBars("Reviewing").Visible = False
    .CommandBars("Web").Visible = False
    .DecimalSeparator = ","
    .ThousandsSeparator = "."
    .UseSystemSeparators = False
    .EnableEvents = True
    .AutoRecover.Enabled = False
    .WindowState = xlMaximized
End With
#If VBA6 Then
    Application.ExecuteExcel4Macro ("show.toolbar(""ribbon"",0)")
#End If
Application.OnKey "^{z}", "" 'deshacer
Application.OnKey "^{x}", "" 'Cut
Application.OnKey "^{p}", "" 'print
Application.OnKey "^0", "" 'Ocultar columna
Application.OnKey "{F1}", "saludo"
If ActiveSheet = HC Then Application.OnKey "{DEL}", "HC.TeclaBorra"

'Application.ScreenUpdating = True
End Sub
Sub misub()
Application.DisplayFullScreen = True
End Sub

Attribute VB_Name = "Update"
Sub CheckUpdate()
Application.EnableEvents = False
msg = MsgBox("LAS DESCARGAS DIRECTAS DE ACTUALIZACIONES SOLO ESTAN DISPONIBLES EN INTERNET." & vbCrLf & "Desea comprobar si hay alguna actualizaci|fffd|n disponible? Tambien puedes suscribirte al grupo de telegram: CuadranteOG1114" & vbCrLf & vbCrLf & "Si quieres recibir actualizaciones por intranet, enviame un correo @guardiacivil.es a la direccion idelapaz@guardiacivil.es para recibir actualizaciones o informacion acerca de este proyecto.", vbInformation, "BUSCAR ACTUALIZACI|fffd|N")
If msg = 1 Then
    For a = 1 To HC.QueryTables.Count
        HC.QueryTables(a).Delete
    Next a
    enlace = "https:barrabarradrive.google.combarrauc?export=download&id=1jEDFFudXYBPSHBEb7D21oE-91JRiO1DD"
    enlace = Replace(enlace, "barra", "/")
      With HC.QueryTables.Add(Connection:= _
        "TEXT;" & enlace, Destination:=HC.Cells(3, 59))
        .Name = "VERSION"
        .FieldNames = True
        .RowNumbers = False
        .FillAdjacentFormulas = False
        .PreserveFormatting = True
        .RefreshStyle = xlOverwriteCells
        .RefreshOnFileOpen = False
        .SaveData = False
        .AdjustColumnWidth = False
        .RefreshPeriod = 0
    End With
    despro HC
    HC.QueryTables(1).Refresh
    HC.Calculate
    pro HC
    msg = MsgBox("La ultima version disponible es la " & HC.Range("bG3").Value & vbCrLf & " QUIERES VISITAR LA PAGINA DE ESTE PROYECTO EN INTERNET?", vbYesNo, "DESCARGAR |fffd|LTIMA VERSI|fffd|N")
    If msg = 6 Then DescargaInternet
GoTo FINAL2
Fallo2:
msg = MsgBox("NO SE HA PODIDO CONTACTAR CON EL SERVIDOR DE INTERNET. PRUEBA MAS TARDE O ES POSIBLE QUE NO ESTES CONECTADO A INTERNET.", vbCritical, "FALLO EN LA CONEXION")
FINAL2:
HC.Range("bg3").ClearContents
HC.QueryTables(1).Delete
Application.EnableEvents = True
End If
End Sub
Sub DescargaInternet()
On Error Resume Next
enlace = "https:barrabarrasites.google.combarraviewbarracuadranteog11-14"
enlace = Replace(enlace, "barra", "/")
ActiveWorkbook.FollowHyperlink Address:=enlace, NewWindow:=True
End Sub



' InQuest injected base64 decoded content
' r*'z
' OHpDo

INQUEST-PP=macro
