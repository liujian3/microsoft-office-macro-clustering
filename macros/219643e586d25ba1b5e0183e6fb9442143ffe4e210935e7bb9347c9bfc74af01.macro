Attribute VB_Name = "BW"
Option Explicit

Sub KlassifizierungZuordnen()

Const cStartzeileAuftraege As Integer = 12 'Erste Zeile der Auftragsdaten
Const cStartzeileKunden As Integer = 13 'Erste Zeile der Kundendaten
Const cStartzeileMaterial As Integer = 12 'Erste Zeile der Materialdaten

'Const cSpalteMaterial As Integer = 7 'Spalte mit dem Material in der Tabelle Auftr|fffd|ge
'Const cSpalteMerkmal As Integer = 9 'Spalte mit dem Merkmalswert in den Tabellen Kunden und Material
'Const cSpalteErgebnis As Integer = 15 'Spalte in der in der Tabelle Auftr|fffd|ge das Ergebnis geschrieben werden soll

Dim oRAuftraege As Range
Dim oRKunden As Range
Dim oRMaterial As Range
Dim oRRow As Range

Dim lAnzAuftraege As Long
Dim lAnzKunden As Long
Dim lanzMaterial As Long

Dim intSpalteErgebnis As Integer
Dim intSpalteMaterial As Integer
Dim intSpalteMerkmalKunden As Integer
Dim intSpalteMerkmalMaterial As Integer

Dim l As Long
Dim boolZuordnungGefunden As Boolean

Dim bufKonzern As String
Dim bufMaterial As String
Dim bufMerkmalwert As String

Dim j As Long
Dim i As Long

Sheets("Auftr|fffd|ge").Activate
Range("A65536").End(xlUp).Select

Set oRAuftraege = ActiveCell.CurrentRegion
intSpalteErgebnis = oRAuftraege.Columns.Count + 1
With oRAuftraege.Rows("1:1").EntireRow
    Set oRRow = .Find("Material", LookIn:=xlValues)
    If Not oRRow Is Nothing Then
        intSpalteMaterial = oRRow.Column
    End If
    Set oRRow = Nothing
End With


Sheets("Kundenklassifizierung").Activate
Range("A65536").End(xlUp).Select

Set oRKunden = ActiveCell.CurrentRegion

With oRKunden.Rows("1:1").EntireRow
    Set oRRow = .Find("Merkmalwert", LookIn:=xlValues)
    If Not oRRow Is Nothing Then
        intSpalteMerkmalKunden = oRRow.Column
    End If
    Set oRRow = Nothing
End With

Sheets("Materialklassifizierung").Activate
Range("A65536").End(xlUp).Select

Set oRMaterial = ActiveCell.CurrentRegion

With oRMaterial.Rows("1:1").EntireRow
    Set oRRow = .Find("Merkmalwert", LookIn:=xlValues)
    If Not oRRow Is Nothing Then
        intSpalteMerkmalMaterial = oRRow.Column
    End If
    Set oRRow = Nothing
End With

Sheets("Auftr|fffd|ge").Activate

If oRAuftraege.Cells(1, intSpalteErgebnis - 1) = "Lizenz e-cash" Then
    oRAuftraege.Columns(intSpalteErgebnis - 1).Delete Shift:=xlShiftToLeft

    intSpalteErgebnis = intSpalteErgebnis - 1

End If

Application.ScreenUpdating = False
    oRAuftraege.Cells(1, intSpalteErgebnis) = "Lizenz e-cash"
    
    oRAuftraege.Cells(1, intSpalteErgebnis).Offset(0, -1).Copy
    oRAuftraege.Cells(1, intSpalteErgebnis).PasteSpecial Paste:=xlPasteFormats, Operation:=xlNone, _
            SkipBlanks:=False, Transpose:=False
        Application.CutCopyMode = False
     
    lAnzAuftraege = oRAuftraege.Rows.Count - 2
    lAnzKunden = oRKunden.Rows.Count - 1
    lanzMaterial = oRMaterial.Rows.Count - 1
    
    
    
    For l = 1 To lAnzAuftraege
    
        boolZuordnungGefunden = False
        bufKonzern = oRAuftraege.Cells(l + 1, 1)
        bufMaterial = oRAuftraege.Cells(l + 1, intSpalteMaterial)
     
        For j = 1 To lAnzKunden
            If oRKunden.Cells(j + 1, 1) = bufKonzern Then
                bufMerkmalwert = oRKunden.Cells(j + 1, intSpalteMerkmalKunden)
                
                For i = 1 To lanzMaterial
                    If oRMaterial.Cells(i + 1, 1) = bufMaterial And oRMaterial.Cells(i + 1, intSpalteMerkmalMaterial) = bufMerkmalwert Then
                        oRAuftraege.Cells(l + 1, intSpalteErgebnis) = oRMaterial.Cells(i + 1, intSpalteMerkmalMaterial + 1)
                        boolZuordnungGefunden = True
                        Exit For
                    End If
                Next
                If boolZuordnungGefunden Then
                    Exit For
                End If
            End If
        Next
     
    Next
    
    
    'oRAuftraege.Range(Cells(1, intSpalteErgebnis), Cells(lAnzAuftraege, intSpalteErgebnis)).EntireColumn.AutoFit
    oRAuftraege.Cells(1, intSpalteErgebnis).EntireColumn.AutoFit
    oRAuftraege.Range(Cells(2, intSpalteErgebnis - 1), Cells(lAnzAuftraege + 2, intSpalteErgebnis - 1)).Copy
    oRAuftraege.Range(Cells(2, intSpalteErgebnis), Cells(lAnzAuftraege + 2, intSpalteErgebnis)).PasteSpecial Paste:=xlPasteFormats, Operation:=xlNone, _
            SkipBlanks:=False, Transpose:=False
        Application.CutCopyMode = False
     
     oRAuftraege.Cells(1, 1).Select

Application.ScreenUpdating = True

Ende:

Set oRAuftraege = Nothing
Set oRKunden = Nothing
Set oRMaterial = Nothing

Exit Sub

End Sub
Attribute VB_Name = "DieseArbeitsmappe"
Attribute VB_Base = "0{00020819-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "SAPBEX"
Sub SAPBEXonRefresh(queryID As String, resultArea As Range)

End Sub
Attribute VB_Name = "Tabelle1"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Tabelle3"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Tabelle4"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Private Sub Worksheet_SelectionChange(ByVal Target As Range)

If Target.AddressLocal = "$B$15" Then
    BW.KlassifizierungZuordnen
End If

End Sub



INQUEST-PP=macro
