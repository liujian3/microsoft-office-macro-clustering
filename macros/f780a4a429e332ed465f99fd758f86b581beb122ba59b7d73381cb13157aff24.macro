Attribute VB_Name = "Sheet1"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Option Explicit

Attribute VB_Name = "Sheet4"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Sheet8"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Option Explicit

Attribute VB_Name = "ThisWorkbook"
Attribute VB_Base = "0{00020819-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Option Explicit

Private clsWorkBook As clsWorkBook

Sub Auto_Remove()
    ' EXCEL|fffd||303|o|fffd|O|fffd||38d||fffd|
End Sub

'
' |fffd|@|fffd|\      : WorkBookClose|fffd|O|fffd||fffd||fffd||fffd|
'
' |fffd||502||fffd|l    : |fffd||202||fffd|
'
' |fffd||fffd||fffd||fffd||fffd||fffd|    : |fffd||202||fffd|
'
' |fffd|@|fffd|\|fffd||fffd||fffd||fffd|  : |fffd|A|fffd|h|fffd|C|fffd||fffd||fffd|I|fffd||fffd||fffd||fffd||fffd||24a|e|fffd||fffd||fffd|`|fffd||fffd||42a95||3cd|X|fffd||fffd||fffd||fffd||102||fffd||fffd||fffd||fffd||a347|
'             |fffd|A|fffd|h|fffd|C|fffd||fffd||fffd||fffd||6d1||fffd||fffd||fffd||fffd||fffd|
'
Private Sub Workbook_BeforeClose(Cancel As Boolean)
    On Error Resume Next
    Dim MyCommandBar          As CommandBar
    
    If isSheetUpdate Then ThisWorkbook.Save
    err.Clear
    
    ' |fffd|E|fffd|N|fffd||fffd||fffd|b|fffd|N|fffd||fffd||fffd|j|fffd||fffd||fffd|[|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
    For Each MyCommandBar In Application.CommandBars
        If LCase(MyCommandBar.Name) = "cell" Or LCase(MyCommandBar.Name) = "row" Then
            MyCommandBar.Reset
        End If
    Next
    Set clsWorkBook = Nothing
    
End Sub

'
' |fffd|@|fffd|\      : WorkBookOpen|fffd||fffd||fffd||fffd||fffd||fffd|
'
' |fffd||7c2||fffd|l    : |fffd||202||fffd|
'
' |fffd||fffd||fffd||fffd||fffd||fffd|    : |fffd||202||fffd|
'
' |fffd|@|fffd|\|fffd||fffd||fffd||fffd|  : |fffd|X|fffd|e|fffd|[|fffd|^|fffd|X|fffd|o|fffd|[|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
'
Private Sub Workbook_Open()
    On Error Resume Next
    Set clsWorkBook = New clsWorkBook

    ' |fffd|X|fffd|e|fffd|[|fffd|^|fffd|X|fffd|o|fffd|[|fffd||fffd||fffd||fffd||fffd||fffd|
    Application.StatusBar = ""

'    Application.MacroOptions _
'    macro:=ThisWorkbook.Name & "!IsHoliday", _
'    Description:="|fffd||fffd||fffd|t|fffd||fffd||fffd|x|fffd||fffd||fffd||fffd||fffd||1c2||fffd||fffd||fffd||fffd||12c82||5c1|A|fffd||fffd||fffd||282||fffd||fffd|u|fffd|[|fffd||fffd||fffd|^ (Boolean) |fffd||155||502||fffd||fffd||702||fffd||fffd|B"
        
'    Application.MacroOptions _
'    macro:=ThisWorkbook.Name & "!GetHolidayName", _
'    Description:="|fffd||fffd||fffd|t|fffd||251||389||fffd||fffd||fffd||fffd||fffd|j|fffd||fffd||fffd||fffd||fffd||fffd||502||fffd||fffd||702||fffd||fffd|B"

End Sub



Attribute VB_Name = "clsBeginStyle"
Attribute VB_Base = "0{FCFB3D2A-A0FA-1068-A738-08002B3371B5}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = False
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Option Explicit

' |fffd|n|fffd|_|fffd||303|X|fffd|^|fffd|C|fffd||fffd||fffd|p|fffd||315||3d0||fffd||fffd||fffd||933e|
Private WithEvents BeginStyle As MSForms.image
Attribute BeginStyle.VB_VarHelpID = -1

Public Sub SetControl(ByVal target As MSForms.image)

    ' |fffd||fffd||fffd||fffd||fffd||303|C|fffd||fffd||fffd|[|fffd|W|fffd||fffd||3d0||fffd||fffd||24a|i|fffd|[
    Set BeginStyle = target
    
End Sub

Private Sub BeginStyle_Click()

    ' |fffd||fffd||fffd||fffd||fffd|I|fffd||fffd||fffd||fffd||fffd||fffd|
    Call SelectBeginStyle(BeginStyle)
    
End Sub

Private Sub BeginStyle_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal x As Single, ByVal y As Single)

    ' |fffd|}|fffd|E|fffd|X|fffd||693||fffd||fffd||fffd||fffd||fffd|
    Call MouseMoveBeginStyle(BeginStyle)

End Sub

Attribute VB_Name = "clsColorPalette"
Attribute VB_Base = "0{FCFB3D2A-A0FA-1068-A738-08002B3371B5}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = False
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Option Explicit

' |fffd|J|fffd||fffd||fffd|[|fffd|p|fffd|l|fffd||fffd||fffd|p|fffd||fffd||fffd|x|fffd||fffd||fffd|^|fffd||315||3d0||fffd||fffd||fffd||933e|
Private WithEvents PLColorPalette As MSForms.Label
Attribute PLColorPalette.VB_VarHelpID = -1

Public Sub SetControl(ByVal target As MSForms.Label)

    ' |fffd||fffd||fffd||fffd||fffd||303||fffd||fffd|x|fffd||fffd||fffd||fffd||3d0||fffd||fffd||24a|i|fffd|[
    Set PLColorPalette = target
    
End Sub

Private Sub PLColorPalette_Click()

    ' |fffd|J|fffd||fffd||fffd|[|fffd|p|fffd||fffd||fffd|b|fffd|g|fffd|I|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||102||44f|o|fffd||fffd|
    With PLColorPalette
        Call SelectColor(.BackColor, .ControlTipText)
    End With
    
End Sub

Private Sub PLColorPalette_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal x As Single, ByVal y As Single)

    ' |fffd|}|fffd|E|fffd|X|fffd||693||fffd||fffd||fffd||fffd||fffd|
    Call MouseMove(PLColorPalette)

End Sub
Attribute VB_Name = "clsDrawWeekday"
Attribute VB_Base = "0{FCFB3D2A-A0FA-1068-A738-08002B3371B5}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = False
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Option Explicit

' |fffd||fffd||fffd||fffd|`|fffd||fffd|T|fffd|p|fffd||fffd||fffd|x|fffd||fffd||fffd|^|fffd||315||3d0||fffd||fffd||fffd||933e|
Private WithEvents chkDrawWeekday As MSForms.CheckBox
Attribute chkDrawWeekday.VB_VarHelpID = -1

Public Sub DrawWeekday(ByVal target As MSForms.CheckBox, _
ByVal TargetValue As String)

    '|fffd||fffd||fffd||fffd||fffd||303|`|fffd|F|fffd|b|fffd|N|fffd|{|fffd|b|fffd|N|fffd|X|fffd||fffd||3d0||fffd||fffd||24a|i|fffd|[
    Set chkDrawWeekday = target
    '|fffd|`|fffd|F|fffd|b|fffd|N|fffd|{|fffd|b|fffd|N|fffd|X|fffd||312|l|fffd||fffd||752||fffd|
    chkDrawWeekday.Value = TargetValue

End Sub

Private Sub chkDrawWeekday_Click()
    
    ' |fffd|`|fffd|F|fffd|b|fffd|N|fffd|{|fffd|b|fffd|N|fffd|X|fffd|S|fffd|I|fffd||fffd||fffd|E|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
    Call CountDrawWeekdayNumber
    
End Sub

Sub CountDrawWeekdayNumber()

    ' |fffd||fffd||fffd|[|fffd|J|fffd||fffd||fffd||3d0||fffd|
    Dim i           As Long
    Dim iTrueCount  As Long
    
    ' |fffd|R|fffd||fffd||fffd|e|fffd|i|fffd||fffd||303|`|fffd|F|fffd|b|fffd|N|fffd|{|fffd|b|fffd|N|fffd|X|fffd|R|fffd||fffd||fffd|g|fffd||fffd||fffd|[|fffd||fffd||fffd||30f||fffd||502||fffd||fffd|J|fffd|E|fffd||fffd||fffd|g|fffd||fffd||fffd||fffd|
    iTrueCount = 0
    For i = 1 To 7
        If frmPLHistory.fraWeek.Controls("chkDrawWeekday" & i).Value Then iTrueCount = iTrueCount + 1
    Next
    
    ' |fffd|R|fffd||fffd||fffd|e|fffd|i|fffd||fffd||303|`|fffd|F|fffd|b|fffd|N|fffd|{|fffd|b|fffd|N|fffd|X|fffd|R|fffd||fffd||fffd|g|fffd||fffd||fffd|[|fffd||fffd||fffd||30f||fffd||502||fffd|chkAllDrawWeekday|fffd||30f||fffd||502||fffd||fffd||fffd||fffd||80b7||fffd||fffd|
    With frmPLHistory
        Select Case iTrueCount
            Case 7
                .chkAllDrawWeekday.Value = True
            Case 0
                .chkAllDrawWeekday.Value = False
            Case Else
                .chkAllDrawWeekday.Value = Null
        End Select
    End With
    
End Sub

Attribute VB_Name = "clsEndStyle"
Attribute VB_Base = "0{FCFB3D2A-A0FA-1068-A738-08002B3371B5}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = False
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Option Explicit

' |fffd|J|fffd||fffd||fffd|[|fffd|p|fffd|l|fffd||fffd||fffd|p|fffd||fffd||fffd|x|fffd||fffd||fffd|^|fffd||315||3d0||fffd||fffd||fffd||933e|
Private WithEvents EndStyle As MSForms.image
Attribute EndStyle.VB_VarHelpID = -1

Public Sub SetControl(ByVal target As MSForms.image)

    ' |fffd||fffd||fffd||fffd||fffd||303||fffd||fffd|x|fffd||fffd||fffd||fffd||3d0||fffd||fffd||24a|i|fffd|[
    Set EndStyle = target
    
End Sub

Private Sub EndStyle_Click()

    ' |fffd|J|fffd||fffd||fffd|[|fffd|p|fffd||fffd||fffd|b|fffd|g|fffd|I|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||102||44f|o|fffd||fffd|
    With EndStyle
        ' |fffd||fffd||fffd||fffd||fffd|I|fffd||fffd||fffd||fffd||fffd||fffd|
        Call SelectEndStyle(EndStyle)
    End With
    
End Sub

Private Sub EndStyle_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal x As Single, ByVal y As Single)

    ' |fffd|}|fffd|E|fffd|X|fffd||693||fffd||fffd||fffd||fffd||fffd|
    Call MouseMoveEndStyle(EndStyle)

End Sub


Attribute VB_Name = "clsHolidayWeek"
Attribute VB_Base = "0{FCFB3D2A-A0FA-1068-A738-08002B3371B5}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = False
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Option Explicit

' |fffd|x|fffd||fffd||fffd|T|fffd|p|fffd|`|fffd|F|fffd|b|fffd|N|fffd|{|fffd|b|fffd|N|fffd|X|fffd|^|fffd||315||3d0||fffd||fffd||fffd||933e|
Private WithEvents chkHolidayWeek As MSForms.CheckBox
Attribute chkHolidayWeek.VB_VarHelpID = -1

Public Sub HolidayWeek(ByVal target As MSForms.CheckBox, _
ByVal TargetValue As String)

    '|fffd||fffd||fffd||fffd||fffd||303|`|fffd|F|fffd|b|fffd|N|fffd|{|fffd|b|fffd|N|fffd|X|fffd||fffd||3d0||fffd||fffd||24a|i|fffd|[
    Set chkHolidayWeek = target
    '|fffd|`|fffd|F|fffd|b|fffd|N|fffd|{|fffd|b|fffd|N|fffd|X|fffd||312|l|fffd||fffd||752||fffd|
    chkHolidayWeek.Value = TargetValue

End Sub

Private Sub chkHolidayWeek_Click()

    ' |fffd||fffd||493||fffd||fffd||fffd||fffd|J|fffd||fffd||fffd||fffd||fffd|_|fffd|[|fffd||fffd||fffd|X|fffd|V|fffd||fffd||fffd||fffd|
    Call RefreshCalendar

End Sub

Sub CountHolidayWeekNumber()

    ' |fffd||fffd||fffd|[|fffd|J|fffd||fffd||fffd||3d0||fffd|
    Dim i           As Long
    Dim iTrueCount  As Long
    
    ' |fffd|R|fffd||fffd||fffd|e|fffd|i|fffd||fffd||303|`|fffd|F|fffd|b|fffd|N|fffd|{|fffd|b|fffd|N|fffd|X|fffd|R|fffd||fffd||fffd|g|fffd||fffd||fffd|[|fffd||fffd||fffd||30f||fffd||502||fffd||fffd|J|fffd|E|fffd||fffd||fffd|g|fffd||fffd||fffd||fffd|
    iTrueCount = 0
    For i = 1 To 7
        If frmPLHistory.fraWeek.Controls("chkDrawWeekday" & i).Value Then iTrueCount = iTrueCount + 1
    Next
    
    ' |fffd|R|fffd||fffd||fffd|e|fffd|i|fffd||fffd||303|`|fffd|F|fffd|b|fffd|N|fffd|{|fffd|b|fffd|N|fffd|X|fffd|R|fffd||fffd||fffd|g|fffd||fffd||fffd|[|fffd||fffd||fffd||30f||fffd||502||fffd|chkAllDrawWeekday|fffd||30f||fffd||502||fffd||fffd||fffd||fffd||80b7||fffd||fffd|
    With frmPLHistory
        Select Case iTrueCount
            Case 7
                .chkAllDrawWeekday.Value = True
            Case 0
                .chkAllDrawWeekday.Value = False
            Case Else
                .chkAllDrawWeekday.Value = Null
        End Select
    End With
    
End Sub



Attribute VB_Name = "clsLineKind"
Attribute VB_Base = "0{FCFB3D2A-A0FA-1068-A738-08002B3371B5}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = False
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Option Explicit

' |fffd||fffd||fffd||30e||fffd||797|p|fffd|C|fffd||fffd||fffd|[|fffd|W|fffd|^|fffd||315||3d0||fffd||fffd||fffd||933e|
Private WithEvents imgLineKind As MSForms.image
Attribute imgLineKind.VB_VarHelpID = -1

Public Sub LineKind(ByVal target As MSForms.image)

    ' |fffd||fffd||fffd||fffd||fffd||303||fffd||fffd|x|fffd||fffd||fffd||fffd||3d0||fffd||fffd||24a|i|fffd|[
    Set imgLineKind = target
    
End Sub

Private Sub imgLineKind_Click()
    
    ' |fffd||fffd||fffd||fffd||fffd|I|fffd||fffd||fffd||fffd||fffd||fffd|
    Call SelectLine(imgLineKind)

End Sub

Private Sub imgLineKind_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal x As Single, ByVal y As Single)

    ' |fffd|}|fffd|E|fffd|X|fffd||693||fffd||fffd||fffd||fffd||fffd|
    Call MouseMoveLine(imgLineKind)

End Sub
Attribute VB_Name = "clsLinkColorPalette"
Attribute VB_Base = "0{FCFB3D2A-A0FA-1068-A738-08002B3371B5}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = False
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Option Explicit

' |fffd|J|fffd||fffd||fffd|[|fffd|p|fffd|l|fffd||fffd||fffd|p|fffd||fffd||fffd|x|fffd||fffd||fffd|^|fffd||315||3d0||fffd||fffd||fffd||933e|
Private WithEvents LinkColorPalette As MSForms.Label
Attribute LinkColorPalette.VB_VarHelpID = -1

Public Sub SetControl(ByVal target As MSForms.Label)

    ' |fffd||fffd||fffd||fffd||fffd||303||fffd||fffd|x|fffd||fffd||fffd||fffd||3d0||fffd||fffd||24a|i|fffd|[
    Set LinkColorPalette = target
    
End Sub

Private Sub LinkColorPalette_Click()

    ' |fffd|J|fffd||fffd||fffd|[|fffd|p|fffd||fffd||fffd|b|fffd|g|fffd|I|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||102||44f|o|fffd||fffd|
    With LinkColorPalette
        Call SelectLinkColor(.BackColor, .ControlTipText)
    End With
    
End Sub

Private Sub LinkColorPalette_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal x As Single, ByVal y As Single)

    ' |fffd|}|fffd|E|fffd|X|fffd||693||fffd||fffd||fffd||fffd||fffd|
    Call MouseMoveLinkColor(LinkColorPalette)

End Sub


Attribute VB_Name = "clsLinkStyle"
Attribute VB_Base = "0{FCFB3D2A-A0FA-1068-A738-08002B3371B5}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = False
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Option Explicit

' |fffd||fffd||fffd||30e||fffd||797|p|fffd|C|fffd||fffd||fffd|[|fffd|W|fffd|^|fffd||315||3d0||fffd||fffd||fffd||933e|
Private WithEvents LinkStyle As MSForms.image
Attribute LinkStyle.VB_VarHelpID = -1

Public Sub SetControl(ByVal target As MSForms.image)

    ' |fffd||fffd||fffd||fffd||fffd||303||fffd||fffd|x|fffd||fffd||fffd||fffd||3d0||fffd||fffd||24a|i|fffd|[
    Set LinkStyle = target
    
End Sub

Private Sub LinkStyle_Click()
    
    ' |fffd||fffd||fffd||fffd||fffd|I|fffd||fffd||fffd||fffd||fffd||fffd|
    Call SelectLinkStyle(LinkStyle)

End Sub

Private Sub LinkStyle_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal x As Single, ByVal y As Single)

    ' |fffd|}|fffd|E|fffd|X|fffd||693||fffd||fffd||fffd||fffd||fffd|
    Call MouseMoveLinkStyle(LinkStyle)

End Sub

Attribute VB_Name = "clsMonthPanel"
Attribute VB_Base = "0{FCFB3D2A-A0FA-1068-A738-08002B3371B5}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = False
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Option Explicit

' |fffd||fffd||fffd|p|fffd|l|fffd||fffd||fffd|p|fffd||fffd||fffd|x|fffd||fffd||fffd|^|fffd||315||3d0||fffd||fffd||fffd||933e|
Private WithEvents lblMonthPanel As MSForms.Label
Attribute lblMonthPanel.VB_VarHelpID = -1

Public Sub MonthPanel(ByVal target As MSForms.Label, _
ByVal TargetValue As Long)

    ' |fffd||fffd||fffd||fffd||fffd||303||fffd||fffd|x|fffd||fffd||fffd||fffd||3d0||fffd||fffd||24a|i|fffd|[
    Set lblMonthPanel = target
    ' |fffd||fffd||fffd|x|fffd||fffd||fffd||312|l|fffd||fffd||752||fffd|
    lblMonthPanel.Caption = TargetValue
    
End Sub

Private Sub lblMonthPanel_Click()

    ' |fffd||fffd||fffd|I|fffd||fffd|
    Call SetMonth(lblMonthPanel.Caption)
    
End Sub

Private Sub lblMonthPanel_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal x As Single, ByVal y As Single)

    ' lblMonth|fffd|I|fffd|u|fffd|W|fffd|F|fffd|N|fffd|g|fffd||314|w|fffd|i|fffd|F|fffd||fffd||3cd|X|fffd||fffd||fffd||fffd|
    Call ChangeBackColor_Month(lblMonthPanel)
    
End Sub
Attribute VB_Name = "clsMyCalendar"
Attribute VB_Base = "0{FCFB3D2A-A0FA-1068-A738-08002B3371B5}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = False
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Option Explicit

' |fffd||90|l|fffd|J|fffd||fffd||fffd||fffd||fffd|_|fffd|[|fffd|p|fffd||fffd||fffd|x|fffd||fffd||fffd|^|fffd||315||3d0||fffd||fffd||fffd||933e|
Private WithEvents lblMyCalendar As MSForms.Label
Attribute lblMyCalendar.VB_VarHelpID = -1

Public Sub MyCalendar(ByVal target As MSForms.Label, _
ByVal TargetValue As Long)

    ' |fffd||fffd||fffd||fffd||fffd||303||fffd||fffd|x|fffd||fffd||fffd||fffd||3d0||fffd||fffd||24a|i|fffd|[
    Set lblMyCalendar = target
    ' |fffd||fffd||fffd|x|fffd||fffd||fffd||312|l|fffd||fffd||752||fffd|
    lblMyCalendar.Caption = TargetValue
    
End Sub

Private Sub lblMyCalendar_Click()

    ' |fffd||fffd||fffd|p|fffd||482||314||fffd||493||fffd||fffd||fffd||fffd||fffd|o|fffd|^|fffd||fffd||fffd||fffd|
    Call AddUserHoliday(lblMyCalendar)
    
End Sub
Attribute VB_Name = "clsTipSize"
Attribute VB_Base = "0{FCFB3D2A-A0FA-1068-A738-08002B3371B5}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = False
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Option Explicit

' |fffd|J|fffd||fffd||fffd|[|fffd|p|fffd|l|fffd||fffd||fffd|p|fffd||fffd||fffd|x|fffd||fffd||fffd|^|fffd||315||3d0||fffd||fffd||fffd||933e|
Private WithEvents TipSize As MSForms.image
Attribute TipSize.VB_VarHelpID = -1

Public Sub SetControl(ByVal target As MSForms.image)

    ' |fffd||fffd||fffd||fffd||fffd||303||fffd||fffd|x|fffd||fffd||fffd||fffd||3d0||fffd||fffd||24a|i|fffd|[
    Set TipSize = target
    
End Sub

Private Sub TipSize_Click()

    ' |fffd|J|fffd||fffd||fffd|[|fffd|p|fffd||fffd||fffd|b|fffd|g|fffd|I|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||102||44f|o|fffd||fffd|
    With TipSize
        ' |fffd||fffd||fffd||fffd||fffd|I|fffd||fffd||fffd||fffd||fffd||fffd|
        Call SelectTipSize(TipSize)
    End With
    
End Sub

Private Sub TipSize_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal x As Single, ByVal y As Single)

    ' |fffd|}|fffd|E|fffd|X|fffd||693||fffd||fffd||fffd||fffd||fffd|
    Call MouseMoveTipSize(TipSize)

End Sub


Attribute VB_Name = "clsWorkBook"
Attribute VB_Base = "0{FCFB3D2A-A0FA-1068-A738-08002B3371B5}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = False
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Option Explicit

Private WithEvents eventExcelApp As Excel.Application
Attribute eventExcelApp.VB_VarHelpID = -1

Private Sub Class_Initialize()
    Set eventExcelApp = Excel.Application
End Sub

Private Sub eventExcelApp_SheetActivate(ByVal Sh As Object)

    ' |fffd|e|fffd|L|fffd|X|fffd|g|fffd|{|fffd|b|fffd|N|fffd|X|fffd||303|`|fffd|F|fffd||fffd||fffd|W|fffd|C|fffd|x|fffd||fffd||fffd|g|fffd||17617|p|fffd||fffd||fffd||103|R|fffd||fffd||fffd||fffd||fffd|g|fffd||a5d7||fffd||fffd||fffd||fffd||fffd||fffd||fffd|[|fffd|h|fffd||fffd||fffd||fffd|
    ' |fffd|R|fffd||fffd||fffd||fffd||fffd|g|fffd||a5d7||fffd||fffd||fffd|\|fffd||fffd||fffd||fffd||fffd||fffd||102||fffd||fffd||fffd||fffd||fffd|R|fffd||fffd||fffd||fffd||fffd|g|fffd||a5d7||fffd||fffd||fffd|X|fffd|V|fffd||fffd||fffd||fffd|
    With frmCommentList
        If .Visible Then .txtWarehouse.text = Sh.Name
    End With
    
End Sub

Private Sub eventExcelApp_SheetBeforeDoubleClick(ByVal Sh As Object, ByVal target As Range, Cancel As Boolean)
   
    Call DivideLeftClickAction(Sh)

End Sub

Private Sub eventExcelApp_SheetBeforeRightClick(ByVal Sh As Object, ByVal target As Range, Cancel As Boolean)
    ' |fffd|E|fffd|N|fffd||fffd||fffd|b|fffd|N|fffd||fffd||fffd|j|fffd||fffd||fffd|[|fffd||fffd||1c9||fffd||fffd||fffd||fffd||fffd|
    Call addRightClickMenu(Sh)
End Sub

Private Sub eventExcelApp_SheetDeactivate(ByVal Sh As Object)

    ' |fffd|E|fffd|N|fffd||fffd||fffd|b|fffd|N|fffd||fffd||fffd|j|fffd||fffd||fffd|[|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
    Call RightClickMenuDelete(Sh)

End Sub

Private Sub eventExcelApp_WorkbookOpen(ByVal Wb As Workbook)
    ' |fffd|A|fffd|h|fffd|C|fffd||fffd||fffd||20a|O|fffd||303|u|fffd|b|fffd|N|fffd||fffd||fffd|J|fffd||fffd||fffd||702||151||482||fffd|
    If IsBookOpen(Wb) Then
        Call addRightClickMenu(ActiveSheet)
    End If
End Sub

Private Function IsBookOpen(ByVal iWb As Excel.Workbook) As Boolean
    
    ' |fffd|g|fffd||fffd||fffd|q|fffd||fffd|EXCEL|fffd|u|fffd|b|fffd|N|fffd||30f||a347||fffd||fffd|True|fffd|A|fffd||fffd||fffd||fffd||20a|O|fffd||fffd|False|fffd||fffd||502||fffd|
    If Mid(iWb.Name, InStrRev(iWb.Name, ".") + 1, 3) = "xls" Then
        IsBookOpen = True
        Exit Function
    End If
    IsBookOpen = False
End Function

Private Sub addRightClickMenu(ByVal Sh As Worksheet)
    Dim MyCommandBar          As CommandBar
    Dim MyCommandBarControl   As CommandBarControl
    Dim MyCommandBarControl2  As CommandBarControl
    
    ' |fffd|`|fffd||fffd|V|fffd|[|fffd|g|fffd||20a|O|fffd||34f||fffd||fffd||fffd||fffd||fffd||fffd|I|fffd||fffd||fffd||fffd||fffd||fffd|
    If Not IsCanvas(Sh) Then Call RightClickMenuDelete(Sh): Exit Sub
    
    ' |fffd|E|fffd|N|fffd||fffd||fffd|b|fffd|N|fffd||fffd||fffd|j|fffd||fffd||fffd|[|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
    For Each MyCommandBar In Application.CommandBars
        Select Case LCase(MyCommandBar.Name)
            Case "cell"
                MyCommandBar.Reset
                Set MyCommandBarControl2 = MyCommandBar.Controls.Add
                With MyCommandBarControl2
                    .Caption = "|fffd|X|fffd|P|fffd|W|fffd||fffd||fffd|[|fffd||fffd||fffd||fffd||fffd|O"
                    .OnAction = "onSetSchedule"
'                    .BeginGroup = True
                End With
                Set MyCommandBarControl = MyCommandBar.Controls.Add(Type:=msoControlPopup)
                With MyCommandBarControl
                    .BeginGroup = True
                    .Caption = "|fffd|^|fffd|X|fffd|N|fffd||fffd||fffd||fffd||fffd|N"
                    With .Controls.Add
                        .Caption = "|fffd||fffd||fffd||fffd||fffd|N"
                        .OnAction = "OnDrawTaskLink"
                    End With
                End With
            Case "row"
                MyCommandBar.Reset
                Set MyCommandBarControl = MyCommandBar.Controls.Add(Before:=1)
                With MyCommandBarControl
                    .Caption = "|fffd|I|fffd||fffd||fffd||fffd||fffd||fffd||fffd|^|fffd|X|fffd|N|fffd||fffd||fffd||a287||fffd||fffd||fffd||fffd||fffd|N"
                    .OnAction = "OnDrawTaskLinks"
                End With
        End Select
    Next

End Sub

Private Sub RightClickMenuDelete(ByVal Sh As Worksheet)
    Dim cellCommandBar          As CommandBar
    Dim rowCommandBar           As CommandBar
    
    ' |fffd|E|fffd|N|fffd||fffd||fffd|b|fffd|N|fffd||fffd||fffd|j|fffd||fffd||fffd|[|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
    Set cellCommandBar = Application.CommandBars("Cell")    ' worksheet|fffd||fffd||303|Z|fffd||fffd|
    cellCommandBar.Reset
    Set rowCommandBar = Application.CommandBars("Row")      ' |fffd|s|fffd||50d||fffd||fffd||fffd||303||fffd||fffd|j|fffd||fffd||fffd|[
    rowCommandBar.Reset
    
    Set cellCommandBar = Nothing
    Set rowCommandBar = Nothing

End Sub
Attribute VB_Name = "frmBackLinks"
Attribute VB_Base = "0{F435D74C-7B08-4478-9C7D-D7FCC3F3392D}{D6580C88-6BF0-448C-B050-744EA7BF3704}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Option Explicit

Private Sub lstBackLinks_DblClick(ByVal Cancel As MSForms.ReturnBoolean)

    Dim select_range_adr    As String

    ' |fffd|I|fffd||fffd||fffd||fffd||fffd||a0bd||fffd||fffd||fffd|X|fffd|g|fffd||30c||3471||fffd|^|fffd|X|fffd|N|fffd|Z|fffd||fffd||fffd||fffd||fffd|A|fffd|N|fffd|e|fffd|B|fffd|u|fffd||242||fffd||fffd||fffd|
    With frmBackLinks.lstBackLinks
        select_range_adr = .List(.ListIndex, 1)
        ActiveSheet.Range(select_range_adr).Activate
        .Clear
    End With

    Unload frmBackLinks
End Sub
Attribute VB_Name = "frmCommentLine"
Attribute VB_Base = "0{5899B071-718A-4B63-B1FD-D620AC5F1E40}{DAD07166-8A70-48F0-8E3D-DC4437E6F166}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Option Explicit

Dim sheetDataList   As Worksheet    ' |fffd|`|fffd||fffd|V|fffd|[|fffd|g
Dim isSelectAll     As Boolean
Dim deleteCount     As Long

Private Sub chkAll_Click()
    
    ' |fffd||fffd||fffd||fffd||fffd|}|fffd|~
    Call SuppressUpdates(True)
    
    ' |fffd|R|fffd||fffd||fffd||fffd||fffd|g|fffd|s|fffd||fffd||fffd|X|fffd|g|fffd||fffd|S|fffd|I|fffd||fffd||fffd|^|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
    If isSelectAll Then GoTo chkAll_Click_Exit  'Exit Sub
    
    ' |fffd||fffd||fffd||5c2||102||303|`|fffd|F|fffd|b|fffd|N|fffd|{|fffd|b|fffd|N|fffd|X|fffd||fffd||fffd|I|fffd||fffd||fffd||702||fffd||fffd||343|I|fffd|t|fffd||fffd||fffd||fffd|
    Dim isSelect    As Boolean
    Dim i           As Long
    With frmCommentLine
        isSelectAll = True
        isSelect = chkAll.Value
        For i = 0 To .lstCommentLine.listCount - 1
            .lstCommentLine.Selected(i) = isSelect
'            DoEvents
        Next
        isSelectAll = False
    End With
    
    ' |fffd|R|fffd||fffd||fffd||fffd||fffd|g|fffd|s|fffd|f|fffd|[|fffd|^|fffd|I|fffd||10502||fffd|\|fffd||fffd||fffd||fffd||fffd||fffd|
    With frmCommentLine
        If isSelect Then
            .lblItemCount = .lstCommentLine.listCount & " / " & .lstCommentLine.listCount
            .cmdDelete.Enabled = True
        Else
            .lblItemCount = "0 / " & .lstCommentLine.listCount
            .cmdDelete.Enabled = False
        End If
    End With
    
chkAll_Click_Exit:
    ' |fffd|}|fffd|~|fffd||fffd||fffd||fffd|
    Call SuppressUpdates(False)
    
End Sub

Private Sub cmdDelete_Click()
    On Error Resume Next

    Const REPLACE_KEY = " |fffd|s|fffd||fffd|"
    
    Dim listCount   As Long
    Dim selectCount As Long
    Dim listItem    As String
    
    selectCount = 0
    
    ' |fffd||fffd||fffd|X|fffd|g|fffd|{|fffd|b|fffd|N|fffd|X|fffd||151|I|fffd||fffd||fffd||fffd||fffd||fffd||102||fffd||fffd||fffd|f|fffd|[|fffd|^|fffd||fffd||fffd||d3dc||fffd||fffd||fffd||fffd|
    listCount = Me.lstCommentLine.listCount - 1
    With frmCommentLine
        .lstCommentLine.Visible = False
        Do Until listCount < 0
            If .lstCommentLine.Selected(listCount) Then
                listItem = .lstCommentLine.List(listCount)
                listItem = "$" & Replace(listItem, REPLACE_KEY, ":$" & Mid(listItem, 1, InStr(1, listItem, REPLACE_KEY) - 1))
                .lstCommentLine.RemoveItem (listCount)
                collectionRows.Remove listItem
                deleteCount = deleteCount + 1
                selectCount = selectCount + 1
            End If
            listCount = listCount - 1
        Loop
        .lstCommentLine.Visible = True
    End With
    
    ' |fffd|R|fffd||fffd||fffd||fffd||fffd|g|fffd|s|fffd|f|fffd|[|fffd|^|fffd|I|fffd||10502||fffd|\|fffd||fffd||fffd||fffd||fffd||fffd|
    With frmCommentLine
        .cmdDelete.Enabled = False
        .lblItemCount = "0 / " & .lstCommentLine.listCount
    End With
    
    Application.StatusBar = "|fffd|R|fffd||fffd||fffd||fffd||fffd|g|fffd|s|fffd||fffd| " & selectCount & " |fffd||fffd||fffd||fffd||fffd||d3dc||fffd||fffd||fffd||702||fffd||fffd||fffd||fffd|B[|fffd|m|fffd||fffd|]|fffd||156|{|fffd||d3dc||fffd||fffd||fffd||702||fffd||fffd|B"
    frmCommentLine.cmdOK.Enabled = True
        
End Sub

Private Sub cmdCancel_Click()

    ' |fffd||33c8||fffd||fffd|
    Application.StatusBar = ""
    Unload frmCommentLine
    
End Sub

Private Sub cmdOK_Click()
    
    Const REPLACE_KEY = " |fffd|s|fffd||fffd|"

    Dim commentName     As Object
    Dim listCount       As Long
    Dim listItem        As Long
    Dim nameCommentLine As String
    
    ' |fffd||fffd||fffd||fffd||fffd|}|fffd|~
    Call SuppressUpdates(True)
    
    ' |fffd|`|fffd||fffd|V|fffd|[|fffd|g|fffd||fffd||311|S|fffd|R|fffd||fffd||fffd||fffd||fffd|g|fffd|s|fffd||fffd||fffd||d3dc||fffd||fffd||fffd||fffd|
    For Each commentName In ActiveSheet.Names
        If InStr(1, commentName.Name, NM_SL) > 0 Then commentName.Delete
    Next
    
    ' |fffd||fffd||fffd|X|fffd|g|fffd||251||fffd||fffd||742||fffd||fffd||fffd|f|fffd|[|fffd|^|fffd||fffd||fffd||113|o|fffd|^|fffd||fffd||fffd||fffd|
    listCount = Me.lstCommentLine.listCount - 1
    Me.lstCommentLine.Visible = False
    With ActiveSheet
        Do Until listCount < 0
            ' |fffd||fffd||fffd|X|fffd|g|fffd||341||fffd||fffd|s|fffd||682||182||fffd||fffd||fffd||fffd|\|fffd||fffd||fffd||242||202||fffd||fffd||102||fffd||fffd||fffd||302||155||fffd||fffd||fffd||fffd||fffd|u|fffd|s|fffd||681|v|fffd||fffd||fffd||d3dc||fffd||fffd||fffd||10d|s|fffd||50d||fffd||fffd||302||752||fffd||fffd|o|fffd||fffd||fffd||fffd|
            listItem = Trim(Replace(Me.lstCommentLine.List(listCount), REPLACE_KEY, ""))
            nameCommentLine = NM_SL & listCount
            .Names.Add Name:=nameCommentLine, RefersToR1C1:="='" & .Name & "'!" & _
            .Rows(listItem).Address(ReferenceStyle:=xlR1C1)
            listCount = listCount - 1
        Loop
    End With
    Me.lstCommentLine.Visible = True
        
    ' |fffd|}|fffd|~|fffd||fffd||fffd||fffd|
    Call SuppressUpdates(False)
    
    ' |fffd||fffd||fffd||fffd||fffd||fffd||fffd|I|fffd||fffd||fffd||fffd||fffd||fffd|
    Application.StatusBar = "|fffd|R|fffd||fffd||fffd||fffd||fffd|g|fffd|s|fffd||fffd| " & deleteCount & " |fffd|s|fffd||d3dc||fffd||fffd||fffd||702||fffd||fffd||fffd||fffd|B"
    Unload frmCommentLine
    
End Sub

Private Sub lstCommentLine_Change()
    
    Dim listSelectNumber    As Long
    Dim listItem            As String
    
    If isSelectAll Then Exit Sub
        
    ' |fffd|I|fffd||fffd||fffd||fffd||fffd||fffd||102||fffd||fffd||fffd||90||fffd||fffd||fffd||fffd|J|fffd|E|fffd||fffd||fffd|g|fffd||fffd||fffd||fffd|
    listSelectNumber = CountSelectionCommentList
    
    ' |fffd||fffd||82||142||fffd||fffd|I|fffd||fffd||fffd||fffd||fffd||fffd||102||fffd||fffd||fffd||38d||d3dc||fffd|{|fffd|^|fffd||fffd||fffd||fffd|L|fffd||fffd||fffd||242||fffd||fffd||fffd|
    With frmCommentLine
        If listSelectNumber = 0 Then
            .cmdDelete.Enabled = False
            .chkAll.Value = False
        ElseIf listSelectNumber = .lstCommentLine.listCount Then
            .cmdDelete.Enabled = True
            .chkAll.Value = True
        Else
            .cmdDelete.Enabled = True
            .chkAll.Value = Null
        End If
    End With
    
    ' |fffd||fffd||fffd||fffd||fffd|f|fffd|[|fffd|^|fffd|I|fffd||10502||fffd|\|fffd||fffd||fffd||fffd||fffd||fffd|
    With frmCommentLine
        .lblItemCount = listSelectNumber & " / " & .lstCommentLine.listCount
    End With

End Sub

Sub scrollRow(Optional ByVal selectionRow As Long)
    
    Dim scrollValue     As Long
    Dim topRow          As Long
    Dim bottomRow       As Long
    Dim scrollRow       As Long
    
    With ActiveWindow
    
        scrollValue = .VisibleRange.Rows.Count / 2
        
        topRow = .VisibleRange.Row
        bottomRow = (.VisibleRange.Row + .VisibleRange.Rows.Count) - 1

        ' |fffd|R|fffd||fffd||fffd||fffd||fffd|g|fffd|s|fffd||fffd||fffd|\|fffd||fffd||fffd||348||34a|O|fffd||30e||fffd||fffd||255|\|fffd||fffd||fffd||348||353||fffd||fffd||243|X|fffd|N|fffd||fffd||fffd|[|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
        If selectionRow < topRow Then
            .scrollRow = selectionRow
        ElseIf selectionRow > bottomRow Then
            .scrollRow = selectionRow - scrollValue
        End If
        
    End With
    
End Sub

Private Sub lstCommentLine_DblClick(ByVal Cancel As MSForms.ReturnBoolean)
        
    Const REPLACE_KEY = " |fffd|s|fffd||fffd|"
    Dim listItem    As String
        
        ' |fffd|I|fffd||fffd||fffd||fffd||fffd||fffd||fffd|A|fffd|C|fffd|e|fffd||fffd||fffd||30d|s|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||60a4||fffd||249||fffd||282||fffd||fffd|X|fffd|N|fffd||fffd||fffd|[|fffd||fffd||fffd||fffd||fffd||fffd|
    With frmCommentLine.lstCommentLine
        listItem = .List(.ListIndex)
        listItem = Mid(listItem, 1, Len(listItem) - 4)  ' |fffd|E|fffd||252||1c9||fffd||fffd||fffd||fffd||102||fffd||fffd||fffd||d4495||fffd||fffd||fffd||fffd||d3dc|
        listItem = Replace(listItem, REPLACE_KEY, ":" & Mid(listItem, 1, InStr(1, listItem, REPLACE_KEY) - 1))
        
        ' |fffd|I|fffd||fffd||fffd||fffd||fffd||fffd||fffd|A|fffd|C|fffd|e|fffd||fffd||fffd||30d|s|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||60a4||fffd||249||fffd||282||fffd||fffd|X|fffd|N|fffd||fffd||fffd|[|fffd||fffd||fffd||fffd||fffd||fffd|
        Call scrollRow(Rows(listItem).Row)
    End With

End Sub

Private Sub UserForm_Initialize()
    On Error Resume Next

    Dim i               As Long
    Dim j               As Long
    Dim nameCommentLine As Object
    Dim refersto        As String
    Dim workRefersTo    As String
    Dim listItem        As String
    
    deleteCount = 0
    
    ' |fffd||fffd||fffd||fffd||fffd|}|fffd|~
    Call SuppressUpdates(True)
    
    ' Worksheet|fffd||30e|Q|fffd||190||752||fffd||fffd||fffd|s|fffd||fffd|
    Set sheetDataList = ThisWorkbook.Worksheets(SHT_DATALIST)
    
    i = 1
    sheetDataList.Range("G:G").Clear
    For Each nameCommentLine In ActiveSheet.Names
        If InStr(1, nameCommentLine.Name, NM_SL) > 0 Then

            refersto = Replace(Mid(nameCommentLine.refersto, InStr(1, nameCommentLine.refersto, "!") + 1), "$", "")
            workRefersTo = Format(Mid(refersto, 1, InStr(1, refersto, ":") - 1), "000000")  ' |fffd||fffd||fffd||fffd||fffd||243|\|fffd|[|fffd|g|fffd||fffd||fffd||90bd||fffd||7c2||303|t|fffd|H|fffd|[|fffd|}|fffd|b|fffd|g|fffd||3ca||fffd|
            refersto = workRefersTo & ":" & workRefersTo
            i = i + 1
            sheetDataList.Cells(i, "G").Value = "'" & refersto
            
        End If
    Next
    
    Call SortComment(i)
    
    For j = 2 To i
        listItem = sheetDataList.Cells(j, "G").Value
        ' long|fffd|^|fffd||255||3ca||fffd||fffd||fffd||fffd||110||64ea||fffd||fffd|0|fffd||fffd||fffd||d3dc||fffd||fffd||fffd||fffd|
        ' |fffd||fffd||fffd|X|fffd|g|fffd|\|fffd||fffd||fffd||fffd||fffd||fffd||fffd||6c2||249|E|fffd||fffd||fffd|X|fffd|N|fffd||fffd||fffd|[|fffd||fffd||fffd|o|fffd|[|fffd||14c||fffd||fffd||fffd||fffd||202||fffd||fffd||202||90bd||fffd||7cb||d4482||fffd||1c9||fffd|
        listItem = CLng(Mid(listItem, 1, InStr(1, listItem, ":") - 1)) & " |fffd|s|fffd||fffd|" & Space(4)
        frmCommentLine.lstCommentLine.AddItem listItem
    Next

    ' |fffd||fffd||fffd||fffd||fffd|f|fffd|[|fffd|^|fffd|I|fffd||10502||fffd|\|fffd||fffd||fffd||fffd||fffd||fffd|
    With frmCommentLine
        .lblItemCount = "0 / " & .lstCommentLine.listCount
    End With
    
    ' |fffd||fffd||fffd||fffd||fffd|}|fffd|~|fffd||fffd||fffd||fffd|
    Call SuppressUpdates(False)

End Sub

Sub SortComment(ByVal rowNumber As Long)

    ' |fffd|R|fffd||fffd||fffd||fffd||fffd|g|fffd|s|fffd||fffd||fffd||fffd||fffd||fffd||fffd||255||fffd||fffd||5d1||582||fffd||fffd||fffd|
    With sheetDataList.Sort
        .SortFields.Clear
        .SortFields.Add key:=Range("G2:G" & rowNumber), SortOn:=xlSortOnValues, Order:=xlAscending, DataOption:=xlSortTextAsNumbers
        .SetRange Range("G2:G" & rowNumber)
        .Header = xlGuess
        .MatchCase = False
        .Orientation = xlTopToBottom
        .SortMethod = xlStroke
        .Apply
    End With

End Sub

Private Sub UserForm_Terminate()
    Set collectionRows = Nothing
    Set sheetDataList = Nothing
    
End Sub

Function CountSelectionCommentList() As Long

    ' |fffd||fffd||fffd|[|fffd|J|fffd||fffd||fffd||3d0||fffd||fffd||fffd|`
    Dim i               As Long
    Dim lSelectedCount  As Long
    
    ' |fffd|I|fffd||fffd||fffd||fffd||fffd||a0bd||fffd|A|fffd|C|fffd|e|fffd||fffd||fffd||310||fffd||fffd||fffd||fffd|J|fffd|E|fffd||fffd||fffd|g|fffd||fffd||fffd||115||50b|p|fffd||fffd||fffd||fffd|
    lSelectedCount = 0
    With frmCommentLine
        For i = 0 To .lstCommentLine.listCount - 1
            If .lstCommentLine.Selected(i) Then lSelectedCount = lSelectedCount + 1
        Next
    End With
    CountSelectionCommentList = lSelectedCount
    
End Function

Attribute VB_Name = "frmCommentList"
Attribute VB_Base = "0{FAFD5306-234B-4679-BBDD-8ACE384521C9}{33C2ED26-1BC1-4E6A-88E2-30E0EFADBE3F}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False

Option Explicit

Sub AddCommentToList()
    
    CommentList.Clear
    txtCommentValue.text = ""
    
    ' |fffd||fffd||fffd|[|fffd|N|fffd|V|fffd|[|fffd|g|fffd||251||fffd||fffd||742||fffd||fffd||fffd|R|fffd||fffd||fffd||fffd||fffd|g|fffd||fffd||fffd||fffd||fffd|o|fffd||fffd||fffd||103|R|fffd||fffd||fffd||fffd||fffd|g|fffd||a5d7||fffd||252||1c9||fffd||fffd||fffd||fffd||fffd|
    Dim comment As Object
    
    
    With CommentList
        For Each comment In ActiveSheet.Comments
            .AddItem ""
            .List(.listCount - 1, 0) = comment.Parent.Address(False, False) ' |fffd|Z|fffd||fffd||fffd||303|A|fffd|h|fffd||fffd||fffd|X
            .List(.listCount - 1, 1) = Replace(comment.text, vbLf, " ")     ' |fffd||fffd||fffd|s|fffd|R|fffd|[|fffd|h|fffd||fffd||fffd||d4482||252|u|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
        Next
    End With
    
    ' |fffd||fffd||fffd|X|fffd|g|fffd||fffd||fffd|X|fffd|V|fffd||fffd||fffd||fffd||202||fffd||fffd||182||fffd||fffd||311||38f||fffd|
    frmCommentList.Repaint

End Sub

Private Sub cmdShowAll_Click()
    ' |fffd||fffd||fffd||5c2||102||303|R|fffd||fffd||fffd||fffd||fffd|g|fffd||fffd|\|fffd||fffd||fffd||fffd||fffd||fffd|
    ' SetCommentVisible |fffd||fffd| |fffd|\|fffd||fffd||fffd|FTrue|fffd|@|fffd||fffd|\|fffd||fffd||fffd|FFalse
    Call SetCommentVisible(True)

End Sub

Private Sub cmdHideAll_Click()
    ' |fffd||fffd||fffd||5c2||102||303|R|fffd||fffd||fffd||fffd||fffd|g|fffd||fffd||fffd|\|fffd||fffd||fffd||242||fffd||fffd||fffd|
    ' SetCommentVisible |fffd||fffd| |fffd|\|fffd||fffd||fffd|FTrue|fffd|@|fffd||fffd|\|fffd||fffd||fffd|FFalse
    Call SetCommentVisible(False)

End Sub

Private Sub cmdCommentPosReset_Click()
    ' |fffd|V|fffd|[|fffd|g|fffd||251||fffd||fffd||742||fffd||fffd||fffd|R|fffd||fffd||fffd||fffd||fffd|g|fffd|\|fffd||fffd||fffd||292|u|fffd||fffd||fffd||fffd||fffd|Z|fffd|b|fffd|g|fffd||fffd||fffd||fffd|
    Dim comment             As Object
    Dim range_top           As Single
    Dim range_left          As Single
    Dim range_width         As Single
    Dim comment_shape_top   As Single
    Dim comment_shape_left  As Single
    
    For Each comment In ActiveSheet.Comments
        
        ' |fffd|R|fffd||fffd||fffd||fffd||fffd|g|fffd||fffd||fffd||fffd||fffd||742||fffd||fffd||fffd|Z|fffd||fffd||fffd|i|fffd|Z|fffd||fffd||fffd||350|e|fffd|I|fffd|u|fffd|W|fffd|F|fffd|N|fffd|g|fffd||242||202||fffd|j|fffd||30d||fffd||fffd||fffd||30d||fffd||fffd|W|fffd||195||fffd||fffd||fffd||fffd||64fe||fffd||fffd||fffd||fffd|
        With comment.Parent
          range_top = .Top
          range_left = .Left
          range_width = .width
        End With

        ' |fffd|R|fffd||fffd||fffd||fffd||fffd|g|fffd|\|fffd||fffd||fffd||292|u|fffd||fffd||fffd||fffd||fffd|Z|fffd|b|fffd|g|fffd||fffd||fffd||fffd|
        comment_shape_top = range_top - 7.5
        comment_shape_left = range_left + range_width + 11
        With comment.Shape
          .Top = comment_shape_top
          .Left = comment_shape_left
        End With
      
    Next
    
End Sub

Private Sub cmdOK_Click()
    Unload frmCommentList
    Set frmCommentList = Nothing
End Sub

Sub SetCommentVisible(ByVal display_state As Boolean)
    Dim comment As Object
    
    For Each comment In ActiveSheet.Comments
        comment.Visible = display_state
    Next

End Sub


Private Sub CommentList_Change()
    
    ' |fffd|I|fffd||fffd||fffd||fffd||fffd||fffd||fffd|R|fffd||fffd||fffd||fffd||fffd|g|fffd||303|Z|fffd||fffd||fffd||fffd||fffd|A|fffd|N|fffd|e|fffd|B|fffd|u|fffd||242||fffd||fffd||103|R|fffd||fffd||fffd||fffd||fffd|g|fffd||313||fffd||fffd|e|fffd||fffd||fffd|_|fffd|C|fffd|A|fffd||fffd||fffd|O|fffd||255|\|fffd||fffd||fffd||fffd||fffd||fffd|
    Call SelectAndDispComment
End Sub

Private Sub CommentList_KeyDown(ByVal KeyCode As MSForms.ReturnInteger, ByVal Shift As Integer)
    
    ' |fffd|A|fffd|N|fffd|e|fffd|B|fffd|u|fffd|V|fffd|[|fffd|g|fffd||243|R|fffd||fffd||fffd||fffd||fffd|g|fffd||fffd||fffd|P|fffd||fffd||fffd||fffd||fffd||fffd||fffd||742||fffd||fffd||202||fffd||fffd||a347||fffd||34f||fffd||fffd||fffd||fffd||fffd||fffd|I|fffd||fffd||fffd||fffd||fffd||fffd|
    If NumberOfSelectedComment = 0 Then Exit Sub
    
    ' DELETE|fffd|L|fffd|[|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||a0bd||fffd||a347||fffd||343|R|fffd||fffd||fffd||fffd||fffd|g|fffd||fffd||fffd||d3dc||fffd||fffd||fffd||fffd|
    If KeyCode = vbKeyDelete Then DeleteComments
    
End Sub

Private Sub txtWarehouse_Change()
    ' |fffd|V|fffd|[|fffd|g|fffd||251||fffd||fffd||742||fffd||fffd||102||fffd||fffd||fffd|R|fffd||fffd||fffd||fffd||fffd|g|fffd||fffd||fffd|R|fffd||fffd||fffd||fffd||fffd|g|fffd||a5d7||fffd||252||1c9||fffd||fffd||fffd||fffd||fffd|
    Call AddCommentToList
End Sub

Private Sub UserForm_Initialize()
    
    With CommentList
        .ColumnWidths = "60;200"    ' |fffd|Z|fffd||fffd||fffd|F60|fffd|||fffd|C|fffd||fffd||fffd|g|fffd|@|fffd|R|fffd||fffd||fffd||fffd||fffd|g|fffd|F200|fffd|||fffd|C|fffd||fffd||fffd|g
        .ColumnHeads = False        ' |fffd||fffd||fffd|X|fffd|g|fffd|{|fffd|b|fffd|N|fffd|X|fffd||30c||fffd||fffd|o|fffd||fffd||fffd|s|fffd||fffd||fffd|\|fffd||fffd||fffd||242||fffd||fffd||fffd|
    End With
    ' |fffd|V|fffd|[|fffd|g|fffd||251||fffd||fffd||742||fffd||fffd||102||fffd||fffd||fffd|R|fffd||fffd||fffd||fffd||fffd|g|fffd||fffd||fffd|R|fffd||fffd||fffd||fffd||fffd|g|fffd||a5d7||fffd||252||1c9||fffd||fffd||fffd||fffd||fffd|
    Call AddCommentToList
End Sub

Private Sub UserForm_Terminate()
    Set frmCommentList = Nothing
End Sub

Sub SelectAndDispComment()
    Dim list_i          As Long
    Dim comment_range   As String

    list_i = CommentList.ListIndex
    ' |fffd|R|fffd||fffd||fffd||fffd||fffd|g|fffd||a5d7||fffd||302|P|fffd||fffd||681|i|fffd||fffd||fffd|X|fffd|g|fffd|{|fffd|b|fffd|N|fffd|X|fffd||303|C|fffd||fffd||fffd|f|fffd|b|fffd|N|fffd|X|fffd||342|O|fffd||242||202||fffd|j|fffd||250||752||80b5||fffd||102||fffd||fffd||fffd|Z|fffd||fffd||fffd||303|A|fffd|h|fffd||fffd||fffd|X|fffd||fffd||fffd||64fe||fffd||fffd||fffd||fffd|
    comment_range = CommentList.List(list_i, 0)
    txtCommentValue.text = CommentList.List(list_i, 1)
    ActiveSheet.Range(comment_range).Select

End Sub

Sub DeleteComments()
    On Error Resume Next
    
    Const CONFIRM_MESSAGE = "|fffd|R|fffd||fffd||fffd||fffd||fffd|g|fffd||fffd||fffd||d3dc||fffd||fffd||fffd||702||fffd||fffd|B" & vbCrLf & "|fffd||fffd||b0b5||fffd||fffd||fffd||142||fffd||fffd||fffd||fffd|H"
    
    ' |fffd|R|fffd||fffd||fffd||fffd||fffd|g|fffd||d3dc||fffd||30a|m|fffd|F
    If MsgBox(CONFIRM_MESSAGE, vbYesNo + vbExclamation, "|fffd|R|fffd||fffd||fffd||fffd||fffd|g|fffd||d3dc|") = vbNo Then Exit Sub
    
    Dim list_i          As Long
    Dim max_list_count  As Long
    Dim comment_range   As String
    
    max_list_count = CommentList.listCount - 1
        
    ' |fffd|R|fffd||fffd||fffd||fffd||fffd|g|fffd||a5d7||fffd||151|I|fffd||fffd||fffd||fffd||fffd||fffd||102||fffd||fffd||fffd|R|fffd||fffd||fffd||fffd||fffd|g|fffd||fffd||fffd|Z|fffd||fffd||fffd||188||a5d7||fffd|\|fffd||fffd||fffd||70bb||fffd||a0bc||fffd||fffd||d3dc||fffd||fffd||fffd||fffd|
    ' |fffd||fffd||fffd|X|fffd|g|fffd|\|fffd||fffd||fffd||fffd||502||143|Z|fffd||fffd||fffd||fffd||fffd||fffd|R|fffd||fffd||fffd||fffd||fffd|g|fffd||fffd||fffd||d3dc||fffd||fffd||fffd||fffd||102||fffd||fffd||fffd||fffd||a347||fffd||343|G|fffd||fffd||fffd|[|fffd||182||202||90aa||fffd||fffd||fffd||fffd||356||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
    With CommentList
        For list_i = max_list_count To 0 Step -1
            If .Selected(list_i) Then
                comment_range = .List(list_i, 0)
                ActiveSheet.Range(comment_range).comment.Delete
                .RemoveItem (list_i)
            End If
        Next
    End With
    txtCommentValue.text = ""
    
End Sub

Function NumberOfSelectedComment() As Long
    
    Dim list_i          As Long
    Dim max_list_count  As Long
    
    NumberOfSelectedComment = 0
    max_list_count = CommentList.listCount - 1
    ' |fffd|R|fffd||fffd||fffd||fffd||fffd|g|fffd||a5d7||fffd||151|I|fffd||fffd||fffd||fffd||fffd||fffd||102||fffd||fffd||fffd|R|fffd||fffd||fffd||fffd||fffd|g|fffd||310||fffd||fffd||fffd||fffd|J|fffd|E|fffd||fffd||fffd|g|fffd||fffd||fffd||fffd|
    With CommentList
        For list_i = 0 To max_list_count
           If .Selected(list_i) Then NumberOfSelectedComment = NumberOfSelectedComment + 1
        Next
    End With

End Function
Attribute VB_Name = "frmHistoryList"
Attribute VB_Base = "0{6624E1C6-432E-49C8-B30B-BC21F34CD94C}{E1535621-7747-4388-BA82-ED8C4D944B66}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Option Explicit

' |fffd||fffd||fffd|W|fffd||fffd||fffd|[|fffd||fffd||fffd||3d0||fffd||fffd||fffd|`
Dim shtCanvas   As Worksheet
Dim coHistory   As Collection
Dim isSelectAll As Boolean
'Dim myMenu     ' |fffd|E|fffd|N|fffd||fffd||fffd|b|fffd|N|fffd||fffd||fffd|j|fffd||fffd||fffd|[|fffd||fffd||fffd||fffd||fffd||1ce||591||fffd||fffd||302||60a4||fffd||202||fffd||fffd||302||202||302||155||fffd||fffd||c2dc2||fffd|

Private Sub chkAll_Click()
    ' |fffd||fffd||fffd|[|fffd|J|fffd||fffd||fffd||3d0||fffd|
    Dim i           As Long
    Dim isSelect    As Boolean
    
    ' |fffd||fffd||fffd||fffd||fffd||fffd||fffd|X|fffd|g|fffd||fffd|S|fffd|I|fffd||fffd||fffd|^|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
    If isSelectAll Then Exit Sub
    
    ' |fffd||fffd||fffd||5c2||102||303|`|fffd|F|fffd|b|fffd|N|fffd|{|fffd|b|fffd|N|fffd|X|fffd||fffd||fffd|I|fffd||fffd||fffd||702||fffd||fffd||343|I|fffd|t|fffd||fffd||fffd||fffd|
    With frmHistoryList
        isSelectAll = True
        isSelect = chkAll.Value
        .lstHistory.Visible = False
        For i = 0 To .lstHistory.listCount - 1
            .lstHistory.Selected(i) = isSelect
            DoEvents
        Next
        .lstHistory.Visible = True
        isSelectAll = False
    End With
    
    ' |fffd||fffd||fffd||fffd||fffd|f|fffd|[|fffd|^|fffd|I|fffd||10502||fffd|\|fffd||fffd||fffd||fffd||fffd||fffd|
    With frmHistoryList
        If isSelect Then
            .lblItemCount = .lstHistory.listCount & " / " & .lstHistory.listCount
        Else
            .lblItemCount = "0 / " & .lstHistory.listCount
        End If
    End With
End Sub

Private Sub cmdOK_Click()
    Unload Me
    Set frmHistoryList = Nothing
    Set coHistory = Nothing
End Sub

Private Sub cmdDel_Click()
    ' |fffd||fffd||fffd|[|fffd|J|fffd||fffd||fffd||8414|
    Const QUESTION = "|fffd|I|fffd||fffd||fffd||fffd||fffd||a0bd||fffd||fffd||210||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||d3dc||fffd||fffd||fffd||702||fffd||fffd|B" & vbCrLf & _
                     "|fffd||d3dc||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|f|fffd|[|fffd|^|fffd||34c||fffd||fffd||256||7c2||fffd||fffd||702||fffd||fffd||fffd|B" & vbCrLf & _
                     "|fffd|{|fffd||fffd||fffd||24d||d3dc||fffd||fffd||fffd||102||fffd||fffd||fffd||b0b5||fffd||fffd||fffd||142||fffd||fffd||fffd||fffd|H"
    
    ' |fffd||fffd||fffd|[|fffd|J|fffd||fffd||fffd||3d0||fffd|
    Dim i   As Long
    
    ' |fffd|m|fffd|F
    Me.Hide
    
    If OutMessage(QUESTION, vbOKCancel + vbExclamation, "|fffd||fffd||210||fffd||fffd||fffd||fffd||fffd||fffd||1d7||fffd|") = vbOK Then
    
        ' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||5c2||10d||d3dc||fffd||fffd||fffd||fffd||a347||fffd||341|A|fffd|^|fffd|X|fffd|N|fffd||fffd||fffd||fffd||fffd||702||7c2||10d||d3dc||fffd||fffd||fffd||fffd|
        If Me.chkAll.Value = True Then
            ' |fffd||fffd||fffd|X|fffd|g|fffd||fffd||fffd||d3dc||fffd||fffd||fffd||fffd|
            Me.lstHistory.Clear
            ' |fffd|^|fffd|X|fffd|N|fffd||fffd||fffd||fffd||fffd||fffd||fffd||5c2||10d||d3dc||fffd||fffd||fffd||fffd|
            Call TaskClear
        Else
            ' |fffd|I|fffd||fffd||fffd||fffd||fffd||a0bd||fffd||fffd||210||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|X|fffd|g|fffd||fffd||fffd||fffd||d3dc||fffd||fffd||fffd||101|A|fffd||d3dc||fffd|p|fffd|R|fffd||fffd||fffd|N|fffd|V|fffd||fffd||fffd||fffd||fffd||252||1c9||fffd||fffd||fffd||fffd||fffd|
            i = 0
            With frmHistoryList
                Do Until i > .lstHistory.listCount - 1
                    If .lstHistory.Selected(i) Then
                        coHistory.Add .lstHistory.List(i)
                        .lstHistory.RemoveItem (i)
                    Else
                        i = i + 1
                    End If
                Loop
            End With
            
            ' |fffd||fffd||210||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|X|fffd|V|fffd||fffd||fffd||fffd|
            Call DeleteHistory
            
            ' |fffd||fffd||fffd|b|fffd|Z|fffd|[|fffd|W|fffd|o|fffd||fffd|
            Application.StatusBar = "|fffd||fffd||fffd||fffd||fffd|f|fffd|[|fffd|^|fffd||fffd| " & coHistory.Count & "|fffd||fffd| |fffd||d3dc||fffd||fffd||fffd||702||fffd||fffd||fffd||fffd|B"
            
            ' |fffd|A|fffd||fffd||fffd||fffd||fffd|[|fffd|h
            Call cmdOK_Click
            GoTo cmdDel_Click_Exit
        End If
    End If
    
    Me.Show

cmdDel_Click_Exit:
    
End Sub

Private Sub cmdDraw_Click()
    Dim saveRange   As Range
    
    Set saveRange = Application.ActiveCell
    
    Call DrawSelectHistory
    saveRange.Activate
    
End Sub

Private Sub lstHistory_Change()
    ' |fffd||fffd||fffd|[|fffd|J|fffd||fffd||fffd||3d0||fffd|
    Dim listSelectNumber    As Long
        
    ' |fffd|I|fffd||fffd||fffd||fffd||fffd||fffd||102||fffd||fffd||fffd||90||fffd||fffd||fffd||fffd|J|fffd|E|fffd||fffd||fffd|g|fffd||fffd||fffd||fffd|
    listSelectNumber = CountSelectionHistoryList
    
    ' |fffd||fffd||82||142||fffd||fffd|I|fffd||fffd||fffd||fffd||fffd||fffd||102||fffd||fffd||fffd||38d||d3dc||fffd|{|fffd|^|fffd||fffd||fffd||195|`|fffd||fffd|{|fffd|^|fffd||fffd||fffd||fffd|L|fffd||fffd||fffd||242||fffd||fffd||fffd|
    With frmHistoryList
        If listSelectNumber = 0 Then
            .cmdDel.Enabled = False
            .cmdDraw.Enabled = False
            .chkAll.Value = False
        ElseIf listSelectNumber = .lstHistory.listCount Then
            .cmdDel.Enabled = True
            .cmdDraw.Enabled = True
            .chkAll.Value = True
        Else
            .cmdDel.Enabled = True
            .cmdDraw.Enabled = True
            .chkAll.Value = Null
        End If
    End With
    
    ' |fffd||fffd||fffd||fffd||fffd|f|fffd|[|fffd|^|fffd|I|fffd||10502||fffd|\|fffd||fffd||fffd||fffd||fffd||fffd|
    With frmHistoryList
        .lblItemCount = listSelectNumber & " / " & .lstHistory.listCount
    End With

End Sub

Private Sub UserForm_Initialize()
    ' |fffd||fffd||fffd|[|fffd|J|fffd||fffd||fffd||3d0||fffd||fffd||fffd|`
    Dim oHistory    As Object
    Dim vHistory    As Variant
    Dim i           As Long
    
    ' |fffd|X|fffd|e|fffd|[|fffd|^|fffd|X|fffd|o|fffd|[|fffd||fffd||fffd||fffd||fffd||fffd|
    Application.StatusBar = ""
    
    ' |fffd|A|fffd|N|fffd|e|fffd|B|fffd|u|fffd|V|fffd|[|fffd|g|fffd||fffd||fffd|i|fffd||fffd||210||fffd||fffd||fffd|`|fffd||60b7||fffd||fffd|V|fffd|[|fffd|g|fffd||fffd||fffd|j|fffd||fffd||fffd||64fe||fffd||fffd||fffd||fffd|
    Set shtCanvas = Worksheets(ActiveSheet.Name)

    ' |fffd||fffd||210||fffd||fffd||fffd||fffd||fffd||fffd||d3dc||fffd|p|fffd|R|fffd||fffd||fffd|N|fffd|V|fffd||fffd||fffd||fffd|
    Set coHistory = New Collection
    
    ' |fffd||fffd||210||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||a5d7||fffd||fffd||fffd||fffd||fffd||fffd|
    For Each oHistory In shtCanvas.Names
        If InStrRev(oHistory.Name, NM_HT) > 0 Then
        
            vHistory = Split(oHistory.comment, ",")
            For i = 0 To UBound(vHistory)
                frmHistoryList.lstHistory.AddItem Format(vHistory(i), DATE_FORM)
            Next
'           Exit For    : 2017/7/1 delete
        End If
    Next
    
    ' |fffd||fffd||fffd||fffd||fffd|f|fffd|[|fffd|^|fffd|I|fffd||10502||fffd|\|fffd||fffd||fffd||fffd||fffd||fffd|
    With frmHistoryList
        .lblItemCount = "0 / " & .lstHistory.listCount
    End With
End Sub

Sub DeleteHistory()

    Dim sSaveName       As String
    Dim sComment        As String
    Dim saveComment     As String
    Dim sArrayName      As String
    Dim oName           As Object
    Dim searchName      As String
    
    ' |fffd||fffd||fffd||fffd||fffd|}|fffd|~
    Call SuppressUpdates(True)
    
    ' |fffd||fffd||fffd||5c2||102||316||fffd||fffd|O|fffd|I|fffd|u|fffd|W|fffd|F|fffd|N|fffd|g|fffd||fffd||fffd||fffd|I|fffd||fffd||fffd||fffd||fffd||a0bd||fffd||fffd||fffd||fffd||fffd|f|fffd|[|fffd|^|fffd||fffd||fffd||d3dc||fffd||fffd||fffd||fffd|
    With shtCanvas
        sSaveName = "_DummyName_"
        For Each oName In .Names
            
            ' |fffd||fffd||fffd|O|fffd|I|fffd|u|fffd|W|fffd|F|fffd|N|fffd|g|fffd||fffd||fffd||3c2||fffd||fffd||702||14c|J|fffd||fffd||502||fffd|
            searchName = oName.Name
            If InStr(1, searchName, sSaveName) > 0 Then
                ' |fffd||fffd||fffd|O|fffd|I|fffd|u|fffd|W|fffd|F|fffd|N|fffd|g|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||a347||fffd||357||fffd||fffd||fffd||fffd||fffd||fffd||196||fffd||fffd|O|fffd||fffd||fffd||fffd|CSV|fffd||fffd||fffd||fffd||fffd||fffd|
                sComment = sComment & "," & oName.comment
                sArrayName = sArrayName & "," & searchName
            Else
                ' |fffd||fffd||fffd|O|fffd||fffd||fffd||3c2||fffd||fffd||fffd||fffd||fffd||6c1|A|fffd|Y|fffd||fffd||fffd||316||fffd||fffd|O|fffd||142||fffd||fffd||fffd||397||fffd||fffd||fffd||fffd||fffd||fffd||d3dc||fffd||fffd||fffd||fffd|
                ' |fffd||fffd||fffd||fffd||fffd||fffd||fffd|@|fffd||64ea||fffd|^|fffd|X|fffd|N|fffd||257||fffd||fffd||fffd||fffd||fffd||fffd|i|fffd|[|fffd||fffd||fffd||202||fffd||fffd||fffd||389||fffd||fffd|L|fffd||fffd||fffd||fffd||d3dc||fffd||94|\
                If InStr(1, sSaveName, NM_TT) > 0 Or _
                   InStr(1, sSaveName, NM_HT) > 0 Or _
                   InStr(1, sSaveName, "!_ts") > 0 Then
                
                    ' |fffd|J|fffd||fffd||fffd||fffd||fffd|g|fffd|f|fffd|[|fffd|^|fffd||fffd||3d0||fffd||fffd||251||794||fffd||fffd||fffd||fffd||fffd|
                    sSaveName = searchName
                    saveComment = sComment
                    sComment = "," & oName.comment
                    
                    ' |fffd||fffd||fffd||fffd||fffd|f|fffd|[|fffd|^|fffd||fffd||fffd||d3dc||fffd||fffd||fffd||fffd|
                    Call UpdateHistoryData(saveComment, sArrayName)
                    
                    sArrayName = "," & searchName
                
                Else
                    ' |fffd|J|fffd||fffd||fffd||fffd||fffd|g|fffd|f|fffd|[|fffd|^|fffd||fffd||3d0||fffd||fffd||251||794||fffd||fffd||fffd||fffd||fffd|
                    sSaveName = searchName
                    sComment = "," & oName.comment
                    sArrayName = "," & searchName
                End If
                
            End If
        Next
        
        ' |fffd||33c8||fffd||fffd||fffd|i|fffd||38f||6c3|f|fffd|[|fffd|^|fffd||fffd||fffd||fffd||fffd||742||fffd||fffd||102||fffd||fffd||fffd||a347||fffd||34e||fffd||fffd|s|fffd|j
                ' |fffd||fffd||fffd||fffd||fffd||fffd||fffd|@|fffd||64ea||fffd|^|fffd|X|fffd|N|fffd||257||fffd||fffd||fffd||fffd||fffd||fffd|i|fffd|[|fffd||fffd||fffd||202||fffd||fffd||fffd||389||fffd||fffd|L|fffd||fffd||fffd||fffd||d3dc||fffd||94|\
        If InStr(1, sSaveName, NM_TT) > 0 Or _
            InStr(1, sSaveName, NM_HT) > 0 Or _
            InStr(1, sSaveName, "!_ts") > 0 Then
        
            ' |fffd||fffd||fffd||fffd||fffd|f|fffd|[|fffd|^|fffd||fffd||fffd||d3dc||fffd||fffd||fffd||fffd|
            Call UpdateHistoryData(sComment, sArrayName)
            
        End If
    
    End With
    
    ' |fffd||fffd||fffd||fffd||fffd|}|fffd|~|fffd||fffd||fffd||fffd|
    Call SuppressUpdates(False)

End Sub

Sub UpdateHistoryData(ByVal sComment As String, ByVal sArrayName As String)

    ' |fffd||fffd||fffd|[|fffd|J|fffd||fffd||fffd||3d0||fffd||fffd||fffd|`
    Dim vDeleteDate     As Variant
    Dim i               As Long
    Dim j               As Long
    Dim k               As Long
    Dim vArrayName      As Variant
    Dim lNameCountMAX   As Long
    Dim lNameCount      As Long
    Dim sWork           As String
    Dim iLocate         As Long
    Dim sCurrentName    As String
    Dim sReplaceData    As String
    Dim isUpdate        As Boolean

    With shtCanvas
        
        ' |fffd||fffd||fffd||fffd||fffd|f|fffd|[|fffd|^|fffd||fffd||fffd||fffd||d3dc||fffd||38f||6c2||313||fffd||fffd|t|fffd||18d||fffd||fffd|v|fffd||fffd||fffd||fffd|f|fffd|[|fffd|^|fffd||fffd||fffd||d3dc||fffd||fffd||fffd||fffd|
        For Each vDeleteDate In coHistory
            j = InStr(1, sComment, CLng(DateValue(vDeleteDate)))
            If j > 0 Then
                k = InStr(j, sComment, ",")
                If k = 0 Then
                    k = Len(Mid(sComment, j))
                Else
                    k = k - j
                End If
                sReplaceData = Mid(sComment, j - 1, k + 1)
                sComment = Replace(sComment, sReplaceData, "")
            End If
        Next
        
        ' |fffd||fffd||fffd|O|fffd|I|fffd|u|fffd|W|fffd|F|fffd|N|fffd|g|fffd||fffd||fffd||fffd|z|fffd||fffd||24a|i|fffd|[|fffd||fffd||fffd||fffd|
        sArrayName = Mid(sArrayName, 2)
        sComment = Mid(sComment, 2)
        vArrayName = Split(sArrayName, ",")
        lNameCountMAX = UBound(vArrayName)
        
        ' |fffd||fffd||fffd||fffd||fffd|f|fffd|[|fffd|^|fffd||16f11|O|fffd|I|fffd|u|fffd|W|fffd|F|fffd|N|fffd|g|fffd||24a|i|fffd|[|fffd||fffd||fffd||fffd|
        lNameCount = 0
        isUpdate = True
        Do Until sComment = ""
            isUpdate = False
            sCurrentName = vArrayName(lNameCount)
    
            ' |fffd||fffd||fffd||fffd||fffd|f|fffd|[|fffd|^|fffd||fffd||fffd|Q|fffd|T|fffd|T|fffd||fffd||fffd||fffd||fffd||14b||fffd||602||fffd|
            If Len(sComment) > 255 Then
                sWork = Mid(sComment, 1, 255)
                iLocate = InStrRev(sWork, ",")
                sWork = Mid(sComment, 1, iLocate - 1)
                sComment = Mid(sComment, iLocate + 1)
                .Names(sCurrentName).comment = sWork
           Else
                .Names(sCurrentName).comment = sComment
                sComment = ""
            End If
            
            lNameCount = lNameCount + 1
        
        Loop
        
        ' |fffd||fffd||fffd||5c2||102||317||fffd||fffd||fffd||fffd|f|fffd|[|fffd|^|fffd||fffd||fffd||d3dc||fffd||fffd||fffd||a0bd||fffd||182||fffd||fffd||357||fffd||fffd||fffd||fffd|f|fffd|[|fffd|A|fffd||fffd||fffd|N|fffd||fffd||fffd|A|fffd||fffd||fffd||fffd|
        If isUpdate Then .Names(vArrayName(0)).comment = ""
            
        ' |fffd|s|fffd|v|fffd||242||202||fffd||fffd||fffd||fffd||fffd||fffd|O|fffd|I|fffd|u|fffd|W|fffd|F|fffd|N|fffd|g|fffd||fffd||fffd||d3dc||fffd||fffd||fffd||fffd|
        If lNameCount > 0 Then
            For i = lNameCountMAX To lNameCount Step -1
                .Names(vArrayName(i)).Delete
            Next
        End If
        
    End With

End Sub

Function CountSelectionHistoryList() As Long

    ' |fffd||fffd||fffd|[|fffd|J|fffd||fffd||fffd||3d0||fffd||fffd||fffd|`
    Dim i               As Long
    Dim lSelectedCount  As Long
    
    ' |fffd|I|fffd||fffd||fffd||fffd||fffd||a0bd||fffd|A|fffd|C|fffd|e|fffd||fffd||fffd||310||fffd||fffd||fffd||fffd|J|fffd|E|fffd||fffd||fffd|g|fffd||fffd||fffd||115||50b|p|fffd||fffd||fffd||fffd|
    lSelectedCount = 0
    With frmHistoryList
        For i = 0 To .lstHistory.listCount - 1
            If .lstHistory.Selected(i) Then lSelectedCount = lSelectedCount + 1
        Next
    End With
    CountSelectionHistoryList = lSelectedCount
    
End Function

Sub TaskClear()
    
    ' |fffd||fffd||fffd||fffd||fffd|}|fffd|~
    Call SuppressUpdates(True)
    
    Dim sSaveName       As String
    Dim sComment        As String
    Dim sArrayName      As String
    Dim oName           As Object
    Dim searchName      As String
    For Each oName In shtCanvas.Names
        searchName = oName.Name
        If InStr(1, searchName, NM_TT) > 0 Then
            If UBound(Split(searchName, "_")) < 2 Then
                ' |fffd||14f||fffd||fffd||310||64ea||fffd|^|fffd|X|fffd|N|fffd|I|fffd|u|fffd|W|fffd|F|fffd|N|fffd|g|fffd||302||757||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|N|fffd||fffd||fffd|A|fffd||fffd|
                oName.comment = ""
            Else
                ' |fffd||14f||fffd||fffd||310||64ea||fffd|^|fffd|X|fffd|N|fffd|I|fffd|u|fffd|W|fffd|F|fffd|N|fffd|g|fffd||20a|O|fffd||343|I|fffd|u|fffd|W|fffd|F|fffd|N|fffd|g|fffd||fffd||fffd||302||fffd||fffd||302||fffd||fffd||d3dc||fffd||fffd||fffd||fffd|
                oName.Delete
            End If
        ElseIf InStr(1, searchName, NM_HT) > 0 Or InStr(1, searchName, "!_ts") > 0 Then
            ' |fffd||fffd||fffd||fffd||fffd||1d7||fffd||fffd|I|fffd|u|fffd|W|fffd|F|fffd|N|fffd|g|fffd||fffd||fffd||fffd||443|^|fffd|X|fffd|N|fffd|I|fffd|u|fffd|W|fffd|F|fffd|N|fffd|g|fffd||fffd||fffd||d3dc||fffd||fffd||fffd||fffd|
            oName.Delete
        End If
    
    Next
    
    Me.lblItemCount.Caption = "0 / 0"
    
    ' |fffd||fffd||fffd||fffd||fffd|}|fffd|~|fffd||fffd||fffd||fffd|
    Call SuppressUpdates(False)
    Application.StatusBar = "|fffd||fffd||fffd||fffd||fffd|f|fffd|[|fffd|^|fffd||fffd||fffd||fffd||fffd||5c2||10d||d3dc||fffd||fffd||fffd||702||fffd||fffd||fffd||fffd|B"

End Sub
Attribute VB_Name = "frmImageBase"
Attribute VB_Base = "0{50CEFE49-B04D-4F96-9DB2-0C61A85624B0}{B17ADE51-E237-4E4A-835C-7EC06783A82F}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False

Option Explicit

Attribute VB_Name = "frmLinkStyle"
Attribute VB_Base = "0{5E6CE5D1-43FB-4F08-B838-81FD11EDC29B}{166E0E6A-0A3A-4FBA-BC2F-331349083C4C}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Option Explicit

Private array_line_style(1 To 8) As New clsLinkStyle
Private array_color_palette(1 To 9) As New clsLinkColorPalette
Private array_begin_style(1 To 3) As New clsBeginStyle
Private array_end_style(1 To 5) As New clsEndStyle
Private array_tip_size(1 To 9) As New clsTipSize

Private Sub cmdCancel_Click()
    Unload frmLinkStyle
    Set frmLinkStyle = Nothing
End Sub

Private Sub cmdLinkStyle1_Click()
    
    Call HideFrame(fraLineStyle)
    
    '  |fffd||fffd||fffd||30e||fffd||783|p|fffd|l|fffd||fffd||fffd||308||292|u|fffd||fffd||752||80b7||fffd||fffd|
    Dim on_state  As Boolean
    With fraLineStyle
        ' |fffd||fffd||fffd||30e||fffd||783|p|fffd|l|fffd||fffd||fffd||315|\|fffd||fffd||fffd||fffd||502||fffd||fffd||64fe|
        on_state = .Visible
        
        ' |fffd|\|fffd||fffd||fffd||fffd||502||fffd|Xor|fffd||fffd||fffd||fffd|i|fffd|\|fffd||fffd||fffd||303|I|fffd||fffd||fffd|I|fffd|t|fffd||fffd||602||fffd||582||fffd||fffd||fffd|j
        .Visible = on_state Xor True
    End With

End Sub

Private Sub cmdLinkStyle2_Click()
    
    Call HideFrame(fraColorPalette)
    
    '  |fffd||fffd||fffd||30e||fffd||783|p|fffd|l|fffd||fffd||fffd||308||292|u|fffd||fffd||752||80b7||fffd||fffd|
    Dim on_state  As Boolean
    With fraColorPalette
        ' |fffd||fffd||fffd||310|F|fffd|p|fffd|l|fffd||fffd||fffd||315|\|fffd||fffd||fffd||fffd||502||fffd||fffd||64fe|
        on_state = .Visible
        
        ' |fffd|\|fffd||fffd||fffd||fffd||502||fffd|Xor|fffd||fffd||fffd||fffd|i|fffd|\|fffd||fffd||fffd||303|I|fffd||fffd||fffd|I|fffd|t|fffd||fffd||602||fffd||582||fffd||fffd||fffd|j
        .Visible = on_state Xor True
    End With

End Sub

Private Sub cmdLinkStyle3_Click()
    
    Call HideFrame(fraBeginStyle)
    
    '  |fffd||fffd||fffd||30e||fffd||783|p|fffd|l|fffd||fffd||fffd||308||292|u|fffd||fffd||752||80b7||fffd||fffd|
    Dim on_state  As Boolean
    With fraBeginStyle
        ' |fffd||fffd||fffd||310|F|fffd|p|fffd|l|fffd||fffd||fffd||315|\|fffd||fffd||fffd||fffd||502||fffd||fffd||64fe|
        on_state = .Visible

        ' |fffd|\|fffd||fffd||fffd||fffd||502||fffd|Xor|fffd||fffd||fffd||fffd|i|fffd|\|fffd||fffd||fffd||303|I|fffd||fffd||fffd|I|fffd|t|fffd||fffd||602||fffd||582||fffd||fffd||fffd|j
        .Visible = on_state Xor True
    End With

End Sub

Private Sub cmdLinkStyle4_Click()

    Call HideFrame(fraEndStyle)
    
    '  |fffd||fffd||fffd||30e||fffd||783|p|fffd|l|fffd||fffd||fffd||308||292|u|fffd||fffd||752||80b7||fffd||fffd|
    Dim on_state  As Boolean
    With fraEndStyle
        ' |fffd||fffd||fffd||310|F|fffd|p|fffd|l|fffd||fffd||fffd||315|\|fffd||fffd||fffd||fffd||502||fffd||fffd||64fe|
        on_state = .Visible
        
        ' |fffd|\|fffd||fffd||fffd||fffd||502||fffd|Xor|fffd||fffd||fffd||fffd|i|fffd|\|fffd||fffd||fffd||303|I|fffd||fffd||fffd|I|fffd|t|fffd||fffd||602||fffd||582||fffd||fffd||fffd|j
        .Visible = on_state Xor True
    End With

End Sub

Private Sub cmdLinkStyle5_Click()

    Call HideFrame(fraTipSize)
    
    '  |fffd||fffd||fffd||30e||fffd||783|p|fffd|l|fffd||fffd||fffd||308||292|u|fffd||fffd||752||80b7||fffd||fffd|
    Dim on_state  As Boolean
    With fraTipSize
        ' |fffd||fffd||fffd||310|F|fffd|p|fffd|l|fffd||fffd||fffd||315|\|fffd||fffd||fffd||fffd||502||fffd||fffd||64fe|
        on_state = .Visible
        
        ' |fffd|\|fffd||fffd||fffd||fffd||502||fffd|Xor|fffd||fffd||fffd||fffd|i|fffd|\|fffd||fffd||fffd||303|I|fffd||fffd||fffd|I|fffd|t|fffd||fffd||602||fffd||582||fffd||fffd||fffd|j
        .Visible = on_state Xor True
    End With

End Sub

Private Sub cmdOK_Click()
    ' |fffd|^|fffd|X|fffd|N|fffd||fffd||fffd||fffd||fffd|N|fffd||303|X|fffd|^|fffd|C|fffd||fffd||fffd||fffd||fffd|f|fffd|[|fffd|^|fffd|V|fffd|[|fffd|g|fffd||24a|i|fffd|[|fffd||fffd||fffd||fffd|
    Call PutLinkStyleFormat
    Application.StatusBar = "|fffd|^|fffd|X|fffd|N|fffd||fffd||fffd||fffd||fffd|N|fffd||303|X|fffd|^|fffd|C|fffd||fffd||fffd||fffd||3cd|X|fffd||fffd||fffd||702||fffd||fffd||fffd||fffd|B"
    Unload Me
    Set frmLinkStyle = Nothing
    
    ' |fffd|e|fffd||fffd||fffd|`|fffd||fffd||fffd||3cd|X|fffd|L|fffd||fffd||fffd|t|fffd||fffd||fffd|O|fffd||fffd|ON|fffd|itrue|fffd|j|fffd||242||fffd||fffd||fffd|
    isSheetUpdate = True

End Sub

Private Sub UserForm_Click()

    Call HideFrame
End Sub

Private Sub UserForm_Initialize()

    Application.StatusBar = ""
    
    ' |fffd|t|fffd|H|fffd|[|fffd||fffd||fffd||303|T|fffd|C|fffd|Y|fffd||fffd||752||80b7||fffd||fffd|
    With frmLinkStyle
        .Height = 280
        .width = 216
    End With
    
    Dim i               As Long
    Dim shtDataList     As Worksheet
    Dim array_linkstyle_number  As Variant
    Dim dashstyle       As Long
    
    ' Worksheet|fffd||30e|Q|fffd||190||752||fffd||fffd||fffd|s|fffd||fffd|
    Set shtDataList = ThisWorkbook.Worksheets(SHT_DATALIST)
    
    ' [|fffd||fffd||fffd||30e||fffd||fffd|]|fffd||303|C|fffd||fffd||fffd|X|fffd|^|fffd||fffd||fffd|X|fffd||10d90||fffd||fffd||fffd||fffd||fffd|
    For i = 1 To UBound(array_line_style)
        array_line_style(i).SetControl Controls("imgLineKind" & i)
    Next
    ' [|fffd||fffd||fffd||30e||fffd||fffd|]|fffd||30f||fffd||fffd||fffd||fffd||292|u|fffd||fffd||752||80b7||fffd||fffd|
    With frmLinkStyle
        .fraLineStyle.Top = .imgLinkStyle1.Top + imgLinkStyle1.Height - 1
        .fraLineStyle.Left = imgLinkStyle1.Left
    End With
    
    ' [|fffd||fffd||fffd||310|F]|fffd||303|C|fffd||fffd||fffd|X|fffd|^|fffd||fffd||fffd|X|fffd||10d90||fffd||fffd||fffd||fffd||fffd|
    For i = 1 To UBound(array_color_palette)
        array_color_palette(i).SetControl Controls("lblColorPalette" & i)
    Next
    ' [|fffd||fffd||fffd||310|F]|fffd||30f||fffd||fffd||fffd||fffd||292|u|fffd||fffd||752||80b7||fffd||fffd|
    With frmLinkStyle
        .fraColorPalette.Top = .lblTaskLinkColor.Top + lblTaskLinkColor.Height - 1
        .fraColorPalette.Left = lblTaskLinkColor.Left
    End With
    
    ' [|fffd|n|fffd|_|fffd||30e||fffd||fffd|]|fffd||303|C|fffd||fffd||fffd|X|fffd|^|fffd||fffd||fffd|X|fffd||10d90||fffd||fffd||fffd||fffd||fffd|
    For i = 1 To UBound(array_begin_style)
        array_begin_style(i).SetControl Controls("imgBeginStyle" & i)
    Next
    ' [|fffd|n|fffd|_|fffd||30e||fffd||fffd|]|fffd||30f||fffd||fffd||fffd||fffd||292|u|fffd||fffd||752||80b7||fffd||fffd|
    With frmLinkStyle
        .fraBeginStyle.Top = .imgLinkStyle3.Top + imgLinkStyle3.Height - 1
        .fraBeginStyle.Left = imgLinkStyle3.Left
    End With
    
    ' [|fffd|I|fffd|_|fffd||30e||fffd||fffd|]|fffd||303|C|fffd||fffd||fffd|X|fffd|^|fffd||fffd||fffd|X|fffd||10d90||fffd||fffd||fffd||fffd||fffd|
    For i = 1 To UBound(array_end_style)
        array_end_style(i).SetControl Controls("imgEndStyle" & i)
    Next
    ' [|fffd|I|fffd|_|fffd||30e||fffd||fffd|]|fffd||30f||fffd||fffd||fffd||fffd||292|u|fffd||fffd||752||80b7||fffd||fffd|
    With frmLinkStyle
        .fraEndStyle.Top = .imgLinkStyle4.Top + imgLinkStyle4.Height - 1
        .fraEndStyle.Left = imgLinkStyle4.Left
    End With

    ' [|fffd||fffd|[|fffd||303|T|fffd|C|fffd|Y]|fffd||303|C|fffd||fffd||fffd|X|fffd|^|fffd||fffd||fffd|X|fffd||10d90||fffd||fffd||fffd||fffd||fffd|
    For i = 1 To UBound(array_tip_size)
        array_tip_size(i).SetControl Controls("imgTipSize" & i)
    Next
    ' [|fffd|I|fffd|_|fffd||30e||fffd||fffd|]|fffd||30f||fffd||fffd||fffd||fffd||292|u|fffd||fffd||752||80b7||fffd||fffd|
    With frmLinkStyle
        .fraTipSize.Top = .imgLinkStyle5.Top + imgLinkStyle5.Height - 1
        .fraTipSize.Left = imgLinkStyle5.Left
    End With
    
    ' |fffd||fffd||fffd||fffd||fffd|l|fffd||fffd||752||80b7||fffd||fffd|
    Call GetLinkStyleFormat
    
    ' |fffd|e|fffd||fffd|I|fffd|u|fffd|W|fffd|F|fffd|N|fffd|g|fffd||30a|J|fffd||fffd|
    Set shtDataList = Nothing

End Sub

Sub GetLinkStyleFormat()
    
    ' |fffd|^|fffd|X|fffd|N|fffd||fffd||fffd||fffd||fffd|N|fffd||30f||fffd||fffd||fffd||fffd||fffd||fffd||64fe||fffd||fffd||fffd||103|X|fffd|^|fffd|C|fffd||fffd||fffd||752||fffd|_|fffd|C|fffd|A|fffd||fffd||fffd|O|fffd||30f||fffd||fffd||fffd||fffd|l|fffd||250||752||80b7||fffd||fffd|
    With ThisWorkbook.Worksheets(SHT_DATALIST)
        Dim style_number    As Long
                
        ' [|fffd||fffd||fffd||30e||fffd||fffd|]
        style_number = DashStyleConstantToNumber(.Shapes("TaskLink").Line.dashstyle)
        Set imgLinkStyle1.Picture = fraLineStyle.Controls.Item("imgLineKind" & style_number).Picture
        imgLinkStyle1.ControlTipText = fraLineStyle.Controls.Item("imgLineKind" & style_number).ControlTipText

        ' [|fffd||fffd||fffd||310|F]
        Dim color   As Long
        color = .Shapes("TaskLink").Line.ForeColor
        imgLinkStyle2.BackColor = color
        lblLinkColor.Caption = GetColorCaption(color)

        ' [|fffd|n|fffd|_|fffd||30e||fffd||fffd|]
        style_number = BeginArrowheadConstantToNumber(.Shapes("TaskLink").Line.BeginArrowheadStyle)
        Set imgLinkStyle3.Picture = fraBeginStyle.Controls.Item("imgBeginStyle" & style_number).Picture
        imgLinkStyle3.ControlTipText = fraBeginStyle.Controls.Item("imgBeginStyle" & style_number).ControlTipText

        ' [|fffd|I|fffd|_|fffd||30e||fffd||fffd|]
        ' -1 |fffd||fffd||fffd||102||fffd||fffd||95dd||fffd|R|fffd||341|A|fffd|I|fffd|_|fffd||241|u|fffd||fffd||fffd||202||fffd||fffd|i|fffd|l|fffd||fffd||fffd|P|fffd|j|fffd|v|fffd||fffd||fffd||fffd||fffd||82||fffd||fffd||102||fffd||fffd||202||fffd||fffd||fffd||fffd||fffd|
        style_number = .Shapes("TaskLink").Line.EndArrowheadStyle - 1
        Set imgLinkStyle4.Picture = fraEndStyle.Controls.Item("imgEndStyle" & style_number).Picture
        imgLinkStyle4.ControlTipText = fraEndStyle.Controls.Item("imgEndStyle" & style_number).ControlTipText

        ' [|fffd||fffd|[|fffd||303|T|fffd|C|fffd|Y]
        Dim length  As Long
        Dim width   As Long
        Dim size    As Long
        Dim array_size  As Variant
        array_size = Array(Array(1, 2, 3), _
                            Array(4, 5, 6), _
                            Array(7, 8, 9))
        
        
        length = .Shapes("TaskLink").Line.EndArrowheadLength - 1
        width = .Shapes("TaskLink").Line.EndArrowheadWidth - 1
        
        size = array_size(width)(length)

        Set imgLinkStyle5.Picture = fraTipSize.Controls.Item("imgTipSize" & size).Picture
        imgLinkStyle5.ControlTipText = fraTipSize.Controls.Item("imgTipSize" & size).ControlTipText
    
    End With
    

End Sub

Function GetColorCaption(ByVal color As Long) As String

    ' |fffd||fffd||fffd||fffd||fffd||312|l|fffd||24f|]|fffd||fffd||fffd||110|F|fffd||fffd||50b|p|fffd||fffd||fffd||fffd|
    Select Case color
        Case vbBlack
            GetColorCaption = "|fffd||fffd|"
        Case vbBlue
            GetColorCaption = "|fffd||fffd|"
        Case vbGreen
            GetColorCaption = "|fffd||fffd||fffd||fffd|"
        Case vbCyan
            GetColorCaption = "|fffd||fffd||fffd|F"
        Case vbYellow
            GetColorCaption = "|fffd||fffd|"
        Case &H808080
            GetColorCaption = "|fffd|D|fffd|F"
        Case &H8000&
            GetColorCaption = "|fffd||fffd|"
        Case &HA5FF&
            GetColorCaption = "|fffd|I|fffd||fffd||fffd||fffd||fffd|W"
        Case &H800080
            GetColorCaption = "|fffd||fffd|"
        Case Else
            GetColorCaption = "|fffd||fffd|"
    End Select

End Function

Sub PutLinkStyleFormat()
    
    ' |fffd|X|fffd|^|fffd|C|fffd||fffd||fffd||752||fffd|_|fffd|C|fffd|A|fffd||fffd||fffd|O|fffd||312|l|fffd||fffd||fffd|^|fffd|X|fffd|N|fffd||fffd||fffd||fffd||fffd|N|fffd||30f||fffd||fffd||fffd||fffd||250||752||80b7||fffd||fffd|
    With ThisWorkbook.Worksheets(SHT_DATALIST)
        Dim style_number    As Long
                
        ' [|fffd||fffd||fffd||30e||fffd||fffd|]
        Dim style   As String
        style = imgLinkStyle1.ControlTipText
        .Shapes("TaskLink").Line.dashstyle = DashStyleTextToConstant(style)
        
        ' [|fffd||fffd||fffd||310|F]
        Dim color   As Long
        color = imgLinkStyle2.BackColor
        .Shapes("TaskLink").Line.ForeColor.RGB = color

        ' [|fffd|n|fffd|_|fffd||30e||fffd||fffd|]
        style = imgLinkStyle3.ControlTipText
        .Shapes("TaskLink").Line.BeginArrowheadStyle = BeginArrowheadTextToConstant(style)


        ' [|fffd|I|fffd|_|fffd||30e||fffd||fffd|]
        ' -1 |fffd||fffd||fffd||102||fffd||fffd||95dd||fffd|R|fffd||341|A|fffd|I|fffd|_|fffd||241|u|fffd||fffd||fffd||202||fffd||fffd|i|fffd|l|fffd||fffd||fffd|P|fffd|j|fffd|v|fffd||fffd||fffd||fffd||fffd||82||fffd||fffd||102||fffd||fffd||202||fffd||fffd||fffd||fffd||fffd|
        style = imgLinkStyle4.ControlTipText
        .Shapes("TaskLink").Line.EndArrowheadStyle = EndArrowheadTextToNumber(style)
        

        ' [|fffd||fffd|[|fffd||303|T|fffd|C|fffd|Y]
        style = Replace(imgLinkStyle5.ControlTipText, "|fffd||fffd||fffd|T|fffd|C|fffd|Y", "")
        .Shapes("TaskLink").Line.EndArrowheadLength = ArrowNumberToSize(style)(1)
        .Shapes("TaskLink").Line.EndArrowheadWidth = ArrowNumberToSize(style)(0)

    End With
    
End Sub


Attribute VB_Name = "frmNewYear"
Attribute VB_Base = "0{A8AE79F0-A1FA-4F56-8940-3EF3D3061695}{B1BB8BD4-79C4-4232-8616-96160D7C0BF5}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Option Explicit

Private Sub UserForm_Initialize()

    Const DATE_FORMAT = "mm|fffd||fffd|dd|fffd||fffd|"
    
    Dim shtDataList     As Worksheet
    Dim i               As Long
    Dim iListIndex      As Long
    Dim lastRow         As Long
    
    ' |fffd|X|fffd|e|fffd|[|fffd|^|fffd|X|fffd|o|fffd|[|fffd||fffd||fffd||fffd||fffd||fffd|
    Application.StatusBar = ""
    
    ' Worksheet|fffd||30e|Q|fffd||190||752||fffd||fffd||fffd|s|fffd||fffd|
    Set shtDataList = ThisWorkbook.Worksheets(SHT_DATALIST)
    
    ' |fffd|N|fffd||fffd||fffd|J|fffd|n|fffd||fffd||fffd||30f||fffd||fffd||fffd||fffd||752||fffd|
    With ThisWorkbook.Worksheets(SHT_DATALIST)
        lastRow = .Range("T" & .Rows.Count).End(xlUp).Row - 3
    End With
    With Me.lstEndYear
        iListIndex = -1
        For i = 0 To lastRow
            .AddItem Format(shtDataList.Range("T3").OFFSET(i).Value, DATE_FORMAT)
            If Format(shtDataList.Range("T3").OFFSET(i).Value, DATE_FORMAT) = _
                Format(shtDataList.Range("T2").Value, DATE_FORMAT) Then iListIndex = i
        Next
        .ListIndex = iListIndex
        
    End With
    
    ' |fffd|N|fffd|n|fffd|I|fffd||fffd||fffd||fffd||fffd||30f||fffd||fffd||fffd||fffd||752||fffd|
    With ThisWorkbook.Worksheets(SHT_DATALIST)
        lastRow = .Range("U" & .Rows.Count).End(xlUp).Row - 3
    End With
    With Me.lstBeginYear
        iListIndex = -1
        For i = 0 To lastRow
            .AddItem Format(shtDataList.Range("U3").OFFSET(i).Value, DATE_FORMAT)
            If Format(shtDataList.Range("U3").OFFSET(i).Value, DATE_FORMAT) = _
                Format(shtDataList.Range("U2").Value, DATE_FORMAT) Then iListIndex = i
        Next
        .ListIndex = iListIndex
        
    End With
    
    ' |fffd|t|fffd||fffd||fffd|[|fffd||fffd||fffd|L|fffd||fffd||fffd||fffd|
    fraNewYear.Enabled = True
    
    ' |fffd|e|fffd||fffd|I|fffd|u|fffd|W|fffd|F|fffd|N|fffd|g|fffd||30a|J|fffd||fffd|
    Set shtDataList = Nothing

End Sub

Private Sub cmdOK_Click()
    
    ' |fffd||fffd||fffd|[|fffd|J|fffd||fffd||fffd||3d0||fffd|
    Dim shtDataList As Worksheet
    Dim i           As Long
    Dim iListIndex  As Long
    Dim lastRow     As Long
    
    ' |fffd|t|fffd|H|fffd|[|fffd||fffd||fffd||fffd|\|fffd||fffd|
    Me.Hide
    
    ' |fffd|X|fffd|e|fffd|[|fffd|^|fffd|X|fffd|o|fffd|[|fffd||fffd||fffd||fffd||fffd||fffd|
    Application.StatusBar = ""
    
    ' Worksheet|fffd||30e|Q|fffd||190||752||fffd||fffd||fffd|s|fffd||fffd|
    Set shtDataList = ThisWorkbook.Worksheets(SHT_DATALIST)
    
    ' |fffd|N|fffd||fffd||fffd|J|fffd|n|fffd||fffd||fffd||310||752||fffd|
    With ThisWorkbook.Worksheets(SHT_DATALIST)
        lastRow = .Range("T" & .Rows.Count).End(xlUp).Row - 3
    End With
    With Me.lstEndYear
        If .ListIndex > -1 Then
            For i = 0 To lastRow
                If i >= .ListIndex Then
                    shtDataList.Range("T2") = .List(i)
                    Exit For
                End If
            Next
        End If
        
    End With
    
    ' |fffd|N|fffd|n|fffd|I|fffd||fffd||fffd||fffd||fffd||310||752||fffd|
    With ThisWorkbook.Worksheets(SHT_DATALIST)
        lastRow = .Range("U" & .Rows.Count).End(xlUp).Row - 3
    End With
    With Me.lstBeginYear
        For i = 0 To lastRow
            If i >= .ListIndex Then
                shtDataList.Range("U2") = .List(i)
                Exit For
            End If
        Next
        
    End With
    
    ' |fffd|e|fffd||fffd||fffd|`|fffd||fffd||fffd||3cd|X|fffd|L|fffd||fffd||fffd|t|fffd||fffd||fffd|O|fffd||fffd|ON|fffd|itrue|fffd|j|fffd||242||fffd||fffd||fffd|
    isSheetUpdate = True
    
    ' |fffd||fffd||fffd|b|fffd|Z|fffd|[|fffd|W|fffd|o|fffd||fffd|
    Application.StatusBar = "|fffd|N|fffd||fffd||fffd|N|fffd|n|fffd||fffd||752||80b5||fffd||702||fffd||fffd||fffd||fffd|B"
    
    ' |fffd|e|fffd||fffd|I|fffd|u|fffd|W|fffd|F|fffd|N|fffd|g|fffd||30a|J|fffd||fffd|
    Set shtDataList = Nothing
    
    ' |fffd|N|fffd||fffd||fffd|N|fffd|n|fffd||752||fffd|I|fffd||fffd|
    Call cmdCancel_Click

End Sub

Private Sub cmdCancel_Click()
    Unload Me
    Set frmNewYear = Nothing
End Sub

Attribute VB_Name = "frmNonoperationDay"
Attribute VB_Base = "0{5BA5766F-F25E-48F9-97B7-63138432A5A1}{5DC37C87-1B5F-4980-ADE4-2A699FA41CCF}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Option Explicit

Private arrayHolidayWeek(1 To 7) As New clsHolidayWeek
Private arrayMyCalendar(1 To 37) As New clsMyCalendar
Private arrayMonthPanel(1 To 12) As New clsMonthPanel

Private Sub txtYear_AfterUpdate()
    ' |fffd||fffd||493||fffd||fffd||fffd||fffd|J|fffd||fffd||fffd||fffd||fffd|_|fffd|[|fffd||fffd||fffd|X|fffd|V|fffd||fffd||fffd||fffd|
    Call RefreshCalendar
End Sub

Private Sub txtYear_Change()
If Len(txtYear.text) = 0 Then
        Exit Sub
    End If
    
    If IsNumeric(Right(txtYear.text, 1)) = True Then
        Exit Sub
    End If
    
    txtYear.text = Left(txtYear.text, Len(txtYear.text) - 1)
End Sub

Private Sub UserForm_Initialize()
    ' |fffd||fffd||fffd|[|fffd|J|fffd||fffd||fffd||3d0||fffd|
    Dim shtDataList     As Worksheet
    Dim myRange         As Range
    Dim i               As Long
    Dim systemDate      As Variant
        
    ' |fffd|X|fffd|e|fffd|[|fffd|^|fffd|X|fffd|o|fffd|[|fffd||fffd||fffd||fffd||fffd||fffd|
    Application.StatusBar = ""
    
    ' |fffd|V|fffd|X|fffd|e|fffd||fffd||fffd||fffd||fffd|t|fffd||fffd||fffd||64fe||fffd||fffd||fffd||fffd|
    systemDate = Now
    
    ' |fffd||fffd||fffd|[|fffd|U|fffd||752||fffd|R|fffd||fffd||fffd|N|fffd|V|fffd||fffd||fffd||fffd||fffd||30f||fffd||fffd||fffd||fffd||fffd|
    Set coUserHoliday = New Collection
    
    ' Worksheet|fffd||30e|Q|fffd||190||752||fffd||fffd||fffd|s|fffd||fffd|
    Set shtDataList = ThisWorkbook.Worksheets(SHT_DATALIST)
    
    ' |fffd|f|fffd|[|fffd|^|fffd|V|fffd|[|fffd|g|fffd||310||752||fffd|l|fffd||17697||fffd||38f||6d7|j|fffd||fffd||fffd||250||752||80b7||fffd||fffd|
    For i = 1 To 7
        arrayHolidayWeek(i).HolidayWeek Controls("chkHolidayWeek" & i), shtDataList.Range("K2").OFFSET(i - 1).Value
    Next
    
    ' |fffd|}|fffd|C|fffd|J|fffd||fffd||fffd||fffd||fffd|_|fffd|[|fffd||303|C|fffd||fffd||fffd|X|fffd|^|fffd||fffd||fffd|X|fffd||10d90||fffd||fffd||fffd||fffd||fffd|
    For i = 1 To 37
        arrayMyCalendar(i).MyCalendar Controls("lblDay_" & i), i
    Next
    
    ' |fffd||fffd||fffd|p|fffd|l|fffd||fffd||fffd||303|C|fffd||fffd||fffd|X|fffd|^|fffd||fffd||fffd|X|fffd||10d90||fffd||fffd||fffd||fffd||fffd|
    For i = 1 To 12
        arrayMonthPanel(i).MonthPanel Controls("lblMonth_" & i), i
    Next
        
    ' |fffd||fffd||fffd|[|fffd|U|fffd||752||fffd||30f||fffd||fffd||fffd||fffd||fffd|
    Call InituserHoliday(shtDataList)
    
    ' |fffd|N|fffd||fffd||fffd||fffd||fffd|J|fffd||fffd||fffd||fffd||fffd|_|fffd|[|fffd||250||752||80b7||fffd||fffd|
    With frmNonoperationDay
        .txtYear.text = Year(systemDate)
        .lblMonth.Caption = Month(systemDate)
    End With
        
    ' |fffd||fffd||fffd||fffd||fffd|P|fffd||fffd||fffd||317|j|fffd||fffd||fffd||50d||fffd||fffd||fffd||fffd||fffd||fffd||7c2||fffd|
    Call SetDay(Format(systemDate, "yyyy/mm/01"))
    
    ' |fffd|e|fffd||fffd|I|fffd|u|fffd|W|fffd|F|fffd|N|fffd|g|fffd||30a|J|fffd||fffd|
    Set shtDataList = Nothing

End Sub

Sub InituserHoliday(ByRef shtDataList As Worksheet)

    ' |fffd||fffd||fffd|[|fffd|J|fffd||fffd||fffd||3d0||fffd||fffd||fffd|`
    Dim myRange     As Range
    Dim userHoliday As String
    
    ' |fffd||fffd||fffd|[|fffd|U|fffd|x|fffd||fffd||fffd||fffd||fffd|R|fffd||fffd||fffd|N|fffd|V|fffd||fffd||fffd||fffd||fffd||252||1c9||fffd||fffd||fffd||fffd||fffd|
    For Each myRange In shtDataList.Range("N2", shtDataList.Range("N2").End(xlDown))
        If myRange = "" Then Exit For
        userHoliday = Format(myRange.Value, DATE_FORM)
        coUserHoliday.Add Item:=userHoliday, key:=userHoliday
    Next
    
    ' |fffd||752||80ca||fffd|X|fffd|g|fffd|{|fffd|^|fffd||fffd|
    With frmNonoperationDay
        If coUserHoliday.Count > 0 Then
            .cmdRefLst.Enabled = True
        Else
            .cmdRefLst.Enabled = False
        End If
    End With
    
End Sub

Private Sub cmdNow_Click()
    ' |fffd||fffd||493||fffd||fffd||fffd||fffd|J|fffd||fffd||fffd||fffd||fffd|_|fffd|[|fffd||314|N|fffd||fffd||fffd|V|fffd|X|fffd|e|fffd||fffd||fffd||fffd||fffd|t|fffd||314|N|fffd||250||752||80b7||fffd||fffd|
    txtYear.text = Year(Now)
    
    ' |fffd||fffd||fffd|p|fffd||fffd||fffd|b|fffd|g|fffd||fffd||fffd|\|fffd||fffd||fffd||242||fffd||fffd||fffd|
    Me.fraMonth.Visible = False
    ' |fffd||fffd||493||fffd||fffd||fffd||fffd|J|fffd||fffd||fffd||fffd||fffd|_|fffd|[|fffd||30c||fffd||fffd||fffd||fffd|V|fffd|X|fffd|e|fffd||fffd||fffd||fffd||fffd|t|fffd||30c||fffd||fffd||250||752||80b7||fffd||fffd|
    Me.lblMonth.Caption = Month(Now)

    ' |fffd||fffd||493||fffd||fffd||fffd||fffd|J|fffd||fffd||fffd||fffd||fffd|_|fffd|[|fffd||fffd||fffd|X|fffd|V|fffd||fffd||fffd||fffd|
    Call RefreshCalendar

End Sub

Private Sub cmdRefLst_Click()
    frmSetLst.Show
End Sub

Private Sub lblMonth_Click()
    ' |fffd||fffd||fffd|[|fffd|J|fffd||fffd||fffd||3d0||fffd|
    Dim i           As Long
    Dim isVisible   As Boolean
    Dim sMonth      As String
    
    ' |fffd||fffd||fffd|p|fffd||fffd||fffd|b|fffd|g|fffd||292|u|fffd|Z|fffd|o
    With frmNonoperationDay
        .fraMonth.Top = lblMonth.Top + lblMonth.Height
        .fraMonth.Left = lblMonth.Left
        sMonth = "lblMonth_" & .lblMonth.Caption
        isVisible = .fraMonth.Visible Xor True
    End With
    
    If isVisible Then
        
        With frmNonoperationDay
            ' |fffd||fffd||fffd|p|fffd||fffd||fffd|b|fffd|g|fffd||fffd||fffd||fffd||fffd||fffd|
            For i = 1 To 12
                .fraMonth.Controls("lblMonth_" & i).BackColor = &HE0E0E0
            Next
            
            .ActiveControl(sMonth).BackColor = &HFF0000
            
            ' |fffd||794||fffd||fffd||fffd||fffd|I|fffd|u|fffd|W|fffd|F|fffd|N|fffd|g|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
            Set oSaveMonth = .ActiveControl(sMonth)
    
        End With
    End If
    
    ' |fffd||fffd||fffd|p|fffd||fffd||fffd|b|fffd|g|fffd|\|fffd||fffd|
    frmNonoperationDay.fraMonth.Visible = isVisible
   
End Sub

Private Sub cmdOK_Click()
    
    ' |fffd||fffd||fffd|[|fffd|J|fffd||fffd||fffd||3d0||fffd||fffd||fffd|`
    Dim i           As Long
    Dim lMAX        As Long
    Dim shtDataList As Worksheet
    
    ' |fffd||fffd||fffd||fffd||fffd|}|fffd|~
    Call SuppressUpdates(True)
    
    ' |fffd|t|fffd|H|fffd|[|fffd||fffd||fffd||fffd||fffd|\|fffd||fffd||fffd||242||fffd||fffd||fffd|
    Me.Hide
    
    ' |fffd|Q|fffd||190||752||fffd|
    Set shtDataList = ThisWorkbook.Worksheets(SHT_DATALIST)
    
    ' |fffd||fffd||fffd|[|fffd|U|fffd||30b|x|fffd||fffd||fffd||fffd||18b|x|fffd||fffd||fffd|i|fffd|j|fffd||fffd||fffd|j|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
    shtDataList.Range("N:N").Clear
    
    ' |fffd||fffd||fffd|[|fffd|U|fffd||752||8414|
    lMAX = coUserHoliday.Count
    
    ' |fffd||fffd||fffd|[|fffd|U|fffd||752||fffd||fffd||fffd||fffd||fffd|[|fffd|N|fffd|V|fffd|[|fffd|g|fffd||24f|o|fffd||342||fffd||fffd||fffd|
    For i = 1 To lMAX
        shtDataList.Range("N1").OFFSET(i).Value = coUserHoliday.Item(i)
    Next
    
    ' |fffd|x|fffd||fffd||fffd||fffd||fffd||fffd||fffd|[|fffd|N|fffd|V|fffd|[|fffd|g|fffd||24f|o|fffd||342||fffd||fffd||fffd|
    For i = 1 To 7
        shtDataList.Range("K2").OFFSET(i - 1) = frmNonoperationDay.fraHoliday.Controls("chkHolidayWeek" & i).Value
    Next
    
    ' |fffd|I|fffd|u|fffd|W|fffd|F|fffd|N|fffd|g|fffd|J|fffd||fffd|
    Unload frmNonoperationDay
    Set frmNonoperationDay = Nothing
    Set shtDataList = Nothing
    Set coUserHoliday = Nothing
    
    ' |fffd||fffd||fffd||fffd||fffd|}|fffd|~|fffd||fffd||fffd||fffd|
    Call SuppressUpdates(False)
    Application.StatusBar = "|fffd||fffd||fffd|[|fffd|U|fffd||752||fffd||fffd||fffd||fffd||fffd||fffd| " & lMAX & "|fffd||fffd| |fffd||142||fffd||fffd|B"
    
    ' |fffd|e|fffd||fffd||fffd|`|fffd||fffd||fffd||3cd|X|fffd|L|fffd||fffd||fffd|t|fffd||fffd||fffd|O|fffd||fffd|ON|fffd|itrue|fffd|j|fffd||242||fffd||fffd||fffd|
    isSheetUpdate = True

End Sub

Private Sub cmdCancel_Click()
    Unload Me
End Sub

Private Sub lblYL_Click()
    ' |fffd||fffd||493||fffd||fffd||fffd||fffd|J|fffd||fffd||fffd||fffd||fffd|_|fffd|[|fffd||fffd|1|fffd|N|fffd|O|fffd||250||752||80b5||fffd||702||fffd|
    With frmNonoperationDay
        If .txtYear.text = 0 Then
            .txtYear.text = 9999
        Else
            .txtYear.text = CLng(.txtYear.text) - 1
        End If
    End With
    
    ' |fffd||fffd||493||fffd||fffd||fffd||fffd|J|fffd||fffd||fffd||fffd||fffd|_|fffd|[|fffd||fffd||fffd|X|fffd|V|fffd||fffd||fffd||fffd|
    Call RefreshCalendar

End Sub

Private Sub lblYR_Click()
    ' |fffd||fffd||493||fffd||fffd||fffd||fffd|J|fffd||fffd||fffd||fffd||fffd|_|fffd|[|fffd||fffd|1|fffd|N|fffd||fffd||250||752||80b5||fffd||702||fffd|
    With frmNonoperationDay
        If .txtYear.text = 9999 Then
            .txtYear.text = 0
        Else
            .txtYear.text = CLng(.txtYear.text) + 1
        End If
    End With
    
    ' |fffd||fffd||493||fffd||fffd||fffd||fffd|J|fffd||fffd||fffd||fffd||fffd|_|fffd|[|fffd||fffd||fffd|X|fffd|V|fffd||fffd||fffd||fffd|
    Call RefreshCalendar
    
End Sub

Private Sub lblML_Click()
    ' |fffd||fffd||493||fffd||fffd||fffd||fffd|J|fffd||fffd||fffd||fffd||fffd|_|fffd|[|fffd||fffd||fffd||fffd|P|fffd||fffd||fffd|O|fffd||250||752||80b5||fffd||702||fffd|
    With frmNonoperationDay
        If .lblMonth.Caption = 1 Then
            .lblMonth.Caption = 12
            If .txtYear.text <= 0 Then
                .txtYear.text = 9999
            Else
                .txtYear.text = CLng(.txtYear.text) - 1
            End If
        Else
            .lblMonth.Caption = CLng(.lblMonth.Caption) - 1
        End If
    End With
    
    ' |fffd||fffd||493||fffd||fffd||fffd||fffd|J|fffd||fffd||fffd||fffd||fffd|_|fffd|[|fffd||fffd||fffd|X|fffd|V|fffd||fffd||fffd||fffd|
    Call RefreshCalendar

End Sub

Private Sub lblMR_Click()
    ' |fffd||fffd||493||fffd||fffd||fffd||fffd|J|fffd||fffd||fffd||fffd||fffd|_|fffd|[|fffd||fffd||fffd||fffd|P|fffd||fffd||fffd||fffd||250||752||80b5||fffd||702||fffd|
    With frmNonoperationDay
        If .lblMonth.Caption = 12 Then
            .lblMonth.Caption = 1
            If .txtYear.text >= 9999 Then
                .txtYear.text = 0
            Else
                .txtYear.text = CLng(.txtYear.text) + 1
            End If
        Else
            .lblMonth.Caption = CLng(.lblMonth.Caption) + 1
        End If
    End With
    
    ' |fffd||fffd||493||fffd||fffd||fffd||fffd|J|fffd||fffd||fffd||fffd||fffd|_|fffd|[|fffd||fffd||fffd|X|fffd|V|fffd||fffd||fffd||fffd|
    Call RefreshCalendar

End Sub

Sub SetHoliday(ByVal iWeek As Long, Optional ByVal flg As Boolean)

    ' |fffd||fffd||493||fffd||fffd||fffd||fffd|J|fffd||fffd||fffd||fffd||fffd|_|fffd|[|fffd||fffd||fffd|X|fffd|V|fffd||fffd||fffd||fffd|
    Call RefreshCalendar

End Sub

Sub InitCheck()

    ' |fffd||fffd||fffd|[|fffd|U|fffd|x|fffd||fffd||fffd||313|o|fffd|^|fffd||cbd42||24d||fffd||fffd||d0b9||fffd||117|L|fffd||fffd||fffd|E|fffd||fffd||fffd||fffd||fffd||310||752||fffd||fffd||fffd|s|fffd||fffd|
    With frmNonoperationDay
        If coUserHoliday.Count = 0 Then
            .cmdInit.Enabled = False
        Else
            .cmdInit.Enabled = True
        End If
    End With
    
End Sub
Attribute VB_Name = "frmPLHistory"
Attribute VB_Base = "0{1AE8EA80-7CC0-4F37-951E-A3BFCEF7A5FD}{C0B79F61-40BD-4D21-BB87-AD965AEC4ED0}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Option Explicit

' |fffd||fffd||fffd|W|fffd||fffd||fffd|[|fffd||fffd||fffd||3d0||fffd||fffd||fffd|`
Dim shtDataList     As Worksheet

' |fffd||fffd||fffd|W|fffd||fffd||fffd|[|fffd||fffd||fffd||8414|
'Const RNG_HSTNUM = "AB2"
Const RNG_HSTNUM = "I2"
'Const RNG_SUN = "AD2"
Const RNG_SUN = "Q2"

Private NumChk(1 To 7) As New clsDrawWeekday

Private Sub chkAllDrawWeekday_Click()

    ' |fffd||fffd||fffd|[|fffd|J|fffd||fffd||fffd||3d0||fffd|
    Dim i           As Long
    Dim isValue     As Boolean

    ' |fffd|R|fffd||fffd||fffd|e|fffd|i|fffd||fffd||303|`|fffd|F|fffd|b|fffd|N|fffd|{|fffd|b|fffd|N|fffd|X|fffd|R|fffd||fffd||fffd|g|fffd||fffd||fffd|[|fffd||fffd||fffd||30f||fffd||502||fffd|chkAllDrawWeekday|fffd||30f||fffd||502||24f||33d1||fffd||fffd||fffd||fffd||fffd||fffd|
    If frmPLHistory.chkAllDrawWeekday.Value Then
        isValue = True
    Else
        isValue = False
    End If
    
    ' |fffd||fffd||fffd||fffd||38f||6d7|j|fffd||fffd||fffd||fffd||fffd||5c2||102||251|S|fffd|I|fffd||fffd||fffd|E|fffd|S|fffd||fffd||fffd||fffd||fffd||312|l|fffd||fffd||752||80b7||fffd||fffd|
    For i = 1 To 7
        frmPLHistory.fraWeek.Controls("chkDrawWeekday" & i).Value = isValue
    Next
    
End Sub

Private Sub cmdCancel_Click()

    ' |fffd|t|fffd|H|fffd|[|fffd||fffd||fffd|A|fffd||fffd||fffd||fffd||fffd|[|fffd|h
    Unload Me
    
    ' |fffd|I|fffd|u|fffd|W|fffd|F|fffd|N|fffd|g|fffd||309||fffd||fffd|
    Set shtDataList = Nothing
    
End Sub

Private Sub cmdOK_Click()
    
    Application.StatusBar = ""
    
    Me.Hide
    
    ' |fffd||752||fffd|l|fffd||fffd||fffd|f|fffd|[|fffd|^|fffd|V|fffd|[|fffd|g|fffd||24f|o|fffd||342||fffd||fffd||fffd|
    shtDataList.Range(RNG_HSTNUM).Value = Me.txtNumber.text
    
    Application.ScreenUpdating = False
    
    ' |fffd||fffd||fffd||fffd||38f||6d7|j|fffd||fffd||fffd||310||752||fffd|l|fffd||fffd||fffd|f|fffd|[|fffd|^|fffd|V|fffd|[|fffd|g|fffd||24f|o|fffd||342||fffd||fffd||fffd|
    Dim i As Long
    For i = 1 To 7
        shtDataList.Range(RNG_SUN).OFFSET(i - 1).Value = Me.fraWeek.Controls("chkDrawWeekday" & i).Value
    Next
    
    ' |fffd|X|fffd|e|fffd|[|fffd|^|fffd|X|fffd|o|fffd|[|fffd||243||fffd||fffd|b|fffd|Z|fffd|[|fffd|W|fffd||fffd||fffd|o|fffd||342||fffd||fffd||fffd|
    Application.StatusBar = "|fffd||fffd||210||fffd||fffd||fffd||fffd||fffd||fffd||315|`|fffd||6414||fffd||fffd| " & Me.txtNumber.text & "|fffd|{ |fffd||142||fffd||fffd|B"
    
    ' |fffd|e|fffd||fffd||fffd|`|fffd||fffd||fffd||3cd|X|fffd|L|fffd||fffd||fffd|t|fffd||fffd||fffd|O|fffd||fffd|ON|fffd|itrue|fffd|j|fffd||242||fffd||fffd||fffd|
    isSheetUpdate = True
    
    ' |fffd|I|fffd||fffd||fffd||fffd||fffd||fffd|
    Set shtDataList = Nothing
    Call cmdCancel_Click
    
    Application.ScreenUpdating = True
    
End Sub

Private Sub spnPLHistory_Change()
    With frmPLHistory
        .txtNumber.text = .spnPLHistory.Value
    End With
End Sub

Private Sub txtNumber_KeyPress(ByVal KeyAscii As MSForms.ReturnInteger)
    ' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||a0bd||fffd|L|fffd|[|fffd||fffd||fffd|A|fffd|X|fffd|L|fffd|[|fffd|R|fffd|[|fffd|h|fffd||143|`|fffd|F|fffd|b|fffd|N|fffd||fffd||fffd|A|fffd||fffd||fffd||fffd||fffd|i0-9|fffd|j|fffd||20a|O|fffd||356||fffd||fffd||fffd||fffd||182||fffd||fffd||fffd|
    If Chr(KeyAscii) < "0" Or Chr(KeyAscii) > "9" Then
        KeyAscii = 0
    End If
End Sub

Private Sub txtNumber_BeforeUpdate(ByVal Cancel As MSForms.ReturnBoolean)
    With frmPLHistory
        If Len(.txtNumber.text) = 0 Then
            .txtNumber.text = 1
            .spnPLHistory.Value = 1
        ElseIf Int(.txtNumber.text) <= .spnPLHistory.Max Then
            .spnPLHistory.Value = .txtNumber.text
        Else
            .txtNumber.text = .spnPLHistory.Value
        End If
    End With
End Sub

Private Sub UserForm_Initialize()
    
    Application.StatusBar = ""
    
    Set shtDataList = ThisWorkbook.Worksheets(SHT_DATALIST)
    
    ' |fffd|f|fffd|[|fffd|^|fffd|V|fffd|[|fffd|g|fffd||310||752||fffd|l|fffd||17697||fffd||38f||6d7|j|fffd||fffd||fffd||250||752||80b7||fffd||fffd|
    Dim i As Long
    For i = 1 To 7
        NumChk(i).DrawWeekday Controls("chkDrawWeekday" & i), shtDataList.Range(RNG_SUN).OFFSET(i - 1).Value
    Next
    
    ' |fffd|R|fffd||fffd||fffd|g|fffd||fffd||fffd|[|fffd||fffd||fffd||24f||fffd||fffd||fffd||fffd|l|fffd||fffd||752||80b7||fffd||fffd|
    With frmPLHistory
        .txtNumber.text = shtDataList.Range(RNG_HSTNUM).Value
        .spnPLHistory.Value = shtDataList.Range(RNG_HSTNUM).Value
    End With
    
End Sub
Attribute VB_Name = "frmReportDate"
Attribute VB_Base = "0{0CA98E4A-B4DD-4BAF-A162-363453E90D54}{8F00A89A-C83E-4062-836B-E0E023B36950}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Option Explicit

Private Sub cmdCancel_Click()
    Unload frmReportDate
End Sub

Private Sub cmdOK_Click()
    Me.Hide
    Call SetReportDate
End Sub

Private Sub cmdToday_Click()
    Call SelectToday
End Sub

Private Sub lstCalendar_Click()
    Call SelectList
End Sub

Attribute VB_Name = "frmSetLst"
Attribute VB_Base = "0{B269B874-34EB-47E7-9C5B-08C90C2BCE1F}{B0E88D8E-B6FE-4992-BB73-75E030DA8AA8}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Option Explicit

Private Const MENU_TITLE = "|fffd|J|fffd||fffd||fffd||fffd||fffd|_|fffd|["

Private Sub UserForm_Initialize()
    
    Application.ScreenUpdating = False
    
    With ThisWorkbook.Worksheets(SHT_DATALIST)
    
        ' |fffd|\|fffd|[|fffd|g|fffd||fffd||fffd|[|fffd|N|fffd||308||fffd|N|fffd||fffd||fffd|A
        .Range("G:G").Clear
    
        Dim i       As Long
        Dim lMAX    As Long
        ' |fffd|J|fffd||fffd||fffd||fffd||fffd|_|fffd|[|fffd||303||fffd||fffd|[|fffd|U|fffd||752||fffd||fffd||fffd|f|fffd|[|fffd|^|fffd|V|fffd|[|fffd|g|fffd||303|\|fffd|[|fffd|g|fffd|p|fffd||fffd||250||752||80b7||fffd||fffd|
        lMAX = coUserHoliday.Count
        For i = 1 To lMAX
            .Range("G1").OFFSET(i) = coUserHoliday.Item(i)
        Next
        
        ' |fffd||fffd||fffd|[|fffd|U|fffd||752||fffd|R|fffd||fffd||fffd|N|fffd|V|fffd||fffd||fffd||fffd||fffd||303|f|fffd|[|fffd|^|fffd||fffd||fffd|P|fffd||fffd||fffd||fffd||847d||fffd||fffd||fffd||a347||fffd||34f||fffd||fffd||fffd||fffd||243|\|fffd|[|fffd|g|fffd||fffd||fffd||fffd|
        If lMAX > 1 Then
            .Range("G2", .Range("G1").OFFSET(i - 1)).Sort Key1:=.Range("G2"), Order1:=xlAscending
            Me.lstUser.List = .Range("G2", .Range("G1").OFFSET(i - 1)).Value
        Else
            Me.lstUser.AddItem .Range("G2", .Range("G1").OFFSET(i - 1)).Value
        End If
    End With
            
    ' |fffd||fffd||fffd|X|fffd|g|fffd||fffd|\|fffd||fffd||fffd||fffd||fffd||fffd|
    Me.lstUser.Visible = True
    
    Application.ScreenUpdating = True
    
End Sub

Private Sub cmdDel_Click()
    
    Const QUESTION = "|fffd|I|fffd||fffd||fffd||fffd||fffd||a0bd||fffd||fffd||fffd|[|fffd|U|fffd||752||fffd||fffd||fffd||d3dc||fffd||fffd||fffd||702||fffd||fffd|B" & vbCrLf & "|fffd||fffd||b0b5||fffd||fffd||fffd||142||fffd||fffd||fffd||fffd|H"
    
    ' |fffd|m|fffd|F
    If OutMessage(QUESTION, vbOKCancel + vbExclamation, MENU_TITLE) = vbOK Then
        
        ' |fffd||fffd||fffd|[|fffd|U|fffd||752||fffd||313|o|fffd|^|fffd||fffd||fffd||fffd||fffd||fffd||fffd||7c2||fffd|
        Dim lMAX    As Long
        lMAX = coUserHoliday.Count - 1
        
        ' |fffd|I|fffd||fffd||fffd||fffd||fffd||a0bd||fffd||fffd||fffd|[|fffd|U|fffd||752||fffd||fffd||fffd|R|fffd||fffd||fffd|N|fffd|V|fffd||fffd||fffd||fffd||fffd||183||fffd||fffd|X|fffd|g|fffd||fffd||fffd||fffd||d3dc||fffd||fffd||fffd||fffd|
        With frmSetLst
            Dim i       As Long
            i = 0
            Do Until i > lMAX
                If .lstUser.Selected(i) Then
                    coUserHoliday.Remove CStr(.lstUser.List(i))
                    .lstUser.RemoveItem (i)
                    lMAX = lMAX - 1
                Else
                    i = i + 1
                End If
            Loop
        End With
        
        ' |fffd||33c8||fffd||fffd|
        lMAX = coUserHoliday.Count
        With frmSetLst
            If lMAX > 0 Then
                .cmdDel.Enabled = False
                .cmdInit.Enabled = True
            Else
                .cmdDel.Enabled = False
                .cmdInit.Enabled = False
            End If
        End With
        
        ' |fffd||fffd||fffd|X|fffd|g|fffd|\|fffd||fffd|
        Me.lstUser.Visible = True
    
    End If

End Sub

Private Sub cmdInit_Click()
    ' |fffd||fffd||fffd|[|fffd|J|fffd||fffd||fffd||8414|
    Const QUESTION = "|fffd||fffd||fffd|[|fffd|U|fffd||752||fffd||fffd||fffd||fffd||fffd||5c2||10d||d3dc||fffd||fffd||fffd||702||fffd||fffd|B" & vbCrLf & "|fffd||fffd||b0b5||fffd||fffd||fffd||142||fffd||fffd||fffd||fffd|H"
    
    ' |fffd|m|fffd|F
    If OutMessage(QUESTION, vbOKCancel + vbExclamation, MENU_TITLE) = vbOK Then
    
        ' |fffd||fffd||fffd|[|fffd|U|fffd||752||fffd||fffd||fffd||fffd||fffd||5c2||10d||d3dc||fffd||fffd||fffd||fffd|
        Set coUserHoliday = Nothing
        Set coUserHoliday = New Collection
    
        ' |fffd||33c8||fffd||fffd|
        With frmSetLst
            .cmdDel.Enabled = False
            .cmdInit.Enabled = False
            .lstUser.Clear
        End With
    End If
    
End Sub

Private Sub lstUser_Change()
        
    ' |fffd|I|fffd||fffd||fffd||fffd||fffd||fffd||102||fffd||fffd||fffd||90||fffd||fffd||fffd||fffd|J|fffd|E|fffd||fffd||fffd|g|fffd||fffd||fffd||fffd|
    Dim i           As Long
    Dim lSelect     As Long: lSelect = 0
    With frmSetLst
        For i = 0 To .lstUser.listCount - 1
            If .lstUser.Selected(i) = True Then
                lSelect = lSelect + 1
            End If
        Next i
    End With
    
    ' |fffd||fffd||82||142||fffd||fffd|I|fffd||fffd||fffd||fffd||fffd||fffd||102||fffd||fffd||fffd||38d||d3dc||fffd|{|fffd|^|fffd||fffd||fffd||fffd|L|fffd||fffd||fffd||242||fffd||fffd||fffd|
    With frmSetLst
        If lSelect > 0 Then
            .cmdDel.Enabled = True
        Else
            .cmdDel.Enabled = False
        End If
    End With
End Sub

Private Sub cmdOK_Click()
    
    ' |fffd|J|fffd||fffd||fffd||fffd||fffd|_|fffd|[|fffd||fffd||fffd||150|V|fffd||fffd||fffd||fffd||fffd||fffd|
    Call RefreshCalendar
    
    ' |fffd|A|fffd||fffd||fffd||fffd||fffd|[|fffd|h
'    frmSetLst.Hide
    Unload frmSetLst
    Set frmSetLst = Nothing
    
End Sub

Attribute VB_Name = "frmShtList"
Attribute VB_Base = "0{3266AA9C-3373-4A01-91F6-C991D016D6F7}{7EE5ACEA-3207-4EEF-84D5-93554BFBFDC1}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Option Explicit

Private Sub cmdCansel_Click()
    Application.StatusBar = ""
    Unload Me
End Sub

Private Sub cmdOK_Click()
    ' |fffd|V|fffd|[|fffd|g|fffd||a5d7||fffd||151|I|fffd||fffd||fffd||fffd||fffd||fffd||102||fffd||fffd||fffd|V|fffd|[|fffd|g|fffd||fffd||fffd|A|fffd|N|fffd|e|fffd|B|fffd|u|fffd||242||fffd||fffd||fffd|
    Call ToActivateSelectedSheet
    Unload Me
End Sub

Private Sub lstpl_DblClick(ByVal Cancel As MSForms.ReturnBoolean)
    ' |fffd|V|fffd|[|fffd|g|fffd||a5d7||fffd||151|I|fffd||fffd||fffd||fffd||fffd||fffd||102||fffd||fffd||fffd|V|fffd|[|fffd|g|fffd||fffd||fffd|A|fffd|N|fffd|e|fffd|B|fffd|u|fffd||242||fffd||fffd||fffd|
    Call ToActivateSelectedSheet
End Sub

Private Sub UserForm_Terminate()
    Set frmShtList = Nothing
End Sub
Attribute VB_Name = "frmStyle"
Attribute VB_Base = "0{554B4576-6921-4588-BE1D-FDFE22B32C27}{D77DF523-559C-482B-8892-8104092ECE1C}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Option Explicit

Private arrayColorPalette(1 To 20) As New clsColorPalette
Private arrayLineKind(1 To 8) As New clsLineKind

Private Sub lblKindH_Click()
    Call cmdLineH_Click
End Sub

Private Sub UserForm_Initialize()
    
    Application.StatusBar = ""
    Const LINE_KIND = "1,11,10,4,5,7,8,9"
    
    Dim i               As Long
    Dim shtDataList     As Worksheet
    Dim lineKindNumber  As Variant
    Dim dashstyle       As Long
    
    ' Worksheet|fffd||30e|Q|fffd||190||752||fffd||fffd||fffd|s|fffd||fffd|
    Set shtDataList = ThisWorkbook.Worksheets(SHT_DATALIST)
    
    ' |fffd||fffd||fffd||fffd||50d||fffd||fffd||fffd|z|fffd||fffd||24a|i|fffd|[|fffd||fffd||fffd||fffd|
    lineKindNumber = Split(LINE_KIND, ",")

    ' |fffd|}|fffd|C|fffd|J|fffd||fffd||fffd||fffd||fffd|_|fffd|[|fffd||303|C|fffd||fffd||fffd|X|fffd|^|fffd||fffd||fffd|X|fffd||10d90||fffd||fffd||fffd||fffd||fffd|
    For i = 1 To 20
        arrayColorPalette(i).SetControl Controls("lblColorPalette" & i)
    Next
    
    ' |fffd||fffd||fffd||30e||fffd||782||303|C|fffd||fffd||fffd|X|fffd|^|fffd||fffd||fffd|X|fffd||10d90||fffd||fffd||fffd||fffd||fffd|
    For i = 1 To 8
        arrayLineKind(i).LineKind Controls("imgLineKind" & lineKindNumber(i - 1))
    Next
    
    ' |fffd||4d413||fffd||fffd||308||fffd||210||fffd||fffd|X|fffd|^|fffd|C|fffd||fffd||fffd||30f||fffd||fffd||fffd||fffd|l|fffd||fffd||752||80b7||fffd||fffd|
    With lblKind
        dashstyle = shtDataList.Shapes(STYLE_REPO).Line.dashstyle
        .ControlTipText = DashStyleConstantToText(dashstyle)
        .Tag = dashstyle
        Set .Picture = frmStyle.Controls("imgLineKind" & dashstyle).Picture
    End With
    
    ' |fffd||7cb||fffd||fffd||fffd||fffd||308||fffd||210||fffd||fffd|X|fffd|^|fffd|C|fffd||fffd||fffd||30f||fffd||fffd||fffd||fffd|l|fffd||fffd||752||80b7||fffd||fffd|
    With lblKindH
        dashstyle = shtDataList.Shapes(STYLE_HIST).Line.dashstyle
        .ControlTipText = DashStyleConstantToText(dashstyle)
        .Tag = dashstyle
        Set .Picture = frmStyle.Controls("imgLineKind" & dashstyle).Picture
    End With
    
    ' |fffd||4d413||fffd||fffd||308||fffd||210||fffd||fffd||310||752||fffd|
    With shtDataList
        Label1.Caption = .Range("C2").Value                                     ' |fffd|J|fffd||fffd||fffd|[|fffd|L|fffd||fffd||fffd|v|fffd|V|fffd||fffd||fffd||fffd|
        lblSelectColor.BackColor = .Shapes(STYLE_REPO).Line.ForeColor           ' |fffd||fffd||fffd||310|F|fffd||752||fffd|
        cmbKind.List = .Range("A3:A5").Value                                    ' |fffd||fffd|[|fffd||30e||fffd||fffd|
        cmbKind.ListIndex = .Range("A2").Value                                  ' |fffd||fffd|[|fffd||30e||fffd||781|i|fffd|C|fffd||fffd||fffd|f|fffd|b|fffd|N|fffd|X|fffd|j
        cmbSize.List = .Range("B3:B5").Value                                    ' |fffd||fffd|[|fffd||311||50ab||fffd||fffd|
        cmbSize.ListIndex = .Range("B2").Value                                  ' |fffd||fffd|[|fffd||311||50ab||fffd||fffd||fffd|i|fffd|C|fffd||fffd||fffd|f|fffd|b|fffd|N|fffd|X|fffd|j
        spnWidth.Value = .Shapes(STYLE_REPO).Line.Weight / LINE_WIDTH_POINT     ' |fffd||4d413||fffd||fffd||308||fffd||210||fffd||fffd||315||fffd|
    End With
    
    ' |fffd||7cb||fffd||fffd||fffd||fffd||308||fffd||210||fffd||fffd||310||752||fffd|
    With shtDataList
        lblColorNameH.Caption = .Range("F2").Value                              ' |fffd|J|fffd||fffd||fffd|[|fffd|L|fffd||fffd||fffd|v|fffd|V|fffd||fffd||fffd||fffd|
        lblSelectColorH.BackColor = .Shapes(STYLE_HIST).Line.ForeColor          ' |fffd||fffd||fffd||310|F|fffd||752||fffd|
        cmbKindH.List = .Range("D3:D5").Value                                   ' |fffd||fffd|[|fffd||30e||fffd||fffd|
        cmbKindH.ListIndex = .Range("D2").Value                                 ' |fffd||fffd|[|fffd||30e||fffd||781|i|fffd|C|fffd||fffd||fffd|f|fffd|b|fffd|N|fffd|X|fffd|j
        cmbSizeH.List = .Range("E3:E5").Value                                   ' |fffd||fffd|[|fffd||311||50ab||fffd||fffd|
        cmbSizeH.ListIndex = .Range("E2").Value                                 ' |fffd||fffd|[|fffd||311||50ab||fffd||fffd||fffd|i|fffd|C|fffd||fffd||fffd|f|fffd|b|fffd|N|fffd|X|fffd|j
        spnWidthH.Value = .Shapes(STYLE_HIST).Line.Weight / LINE_WIDTH_POINT    ' |fffd||7cb||fffd||fffd||fffd||fffd||308||fffd||210||fffd||fffd||315||fffd|
    End With
    
    ' |fffd||fffd||fffd|p|fffd||fffd||fffd|b|fffd|g|fffd||fffd||fffd||fffd||fffd||292|u
    With frmStyle
        fraLineStyle.Top = .lblKind.Top + .lblKind.Height
        fraLineStyle.Left = .lblKind.Left
    End With
    
    ' |fffd|e|fffd||fffd|I|fffd|u|fffd|W|fffd|F|fffd|N|fffd|g|fffd||30a|J|fffd||fffd|
    Set shtDataList = Nothing
    
End Sub

Private Sub cmdOK_Click()

    Application.StatusBar = ""

    ' msoArrowheadNone      :1
    ' msoArrowheadDiamond   :5
    ' msoArrowheadOval      :6
    Const ARROWHEADSTYLE = "1,5,6"
    
    Dim shtDataList         As Worksheet
    Dim arrayArrowHeadStyle As Variant
    
    ' |fffd|t|fffd|H|fffd|[|fffd||fffd||fffd||fffd||fffd|\|fffd||fffd||fffd||242||fffd||fffd||fffd|
    Me.Hide
    
    ' Worksheet|fffd||30e|Q|fffd||190||752||fffd||fffd||fffd|s|fffd||fffd|
    Set shtDataList = ThisWorkbook.Worksheets(SHT_DATALIST)
        
    arrayArrowHeadStyle = Split(ARROWHEADSTYLE, ",")
    
    Application.ScreenUpdating = False
    
    ' |fffd|X|fffd|^|fffd|C|fffd||fffd||fffd||752||fffd|t|fffd|H|fffd|[|fffd||fffd||fffd||312|l|fffd||fffd||fffd|f|fffd|[|fffd|^|fffd|V|fffd|[|fffd|g|fffd||250||752||80b7||fffd||fffd|
    ' |fffd||4d413||fffd|
    With shtDataList
        ' |fffd||fffd||fffd||30e||fffd||fffd|
        .Shapes(STYLE_REPO).Line.dashstyle = Me.lblKind.Tag
        
        ' |fffd||fffd||fffd||310|F
        .Range("C2") = Me.Label1.Caption
        .Shapes(STYLE_REPO).Line.ForeColor.RGB = lblSelectColor.BackColor
        
        ' |fffd||fffd||fffd||315||fffd|
        .Shapes(STYLE_REPO).Line.Weight = CSng(spnWidth.Value * LINE_WIDTH_POINT)
        txtWidth.text = CSng(spnWidth.Value * LINE_WIDTH_POINT) & " pt"
        
        ' |fffd||fffd||fffd||310||fffd|[|fffd||30e||fffd||fffd|
        .Range("A2") = Me.cmbKind.ListIndex
        .Shapes(STYLE_REPO).Line.BeginArrowheadStyle = arrayArrowHeadStyle(Me.cmbKind.ListIndex)
        .Shapes(STYLE_REPO).Line.EndArrowheadStyle = arrayArrowHeadStyle(Me.cmbKind.ListIndex)
            
        ' |fffd||4d413||fffd||fffd||308||fffd||210||fffd||fffd||310||fffd|[|fffd||303|T|fffd|C|fffd|Y
        .Range("B2") = Me.cmbSize.ListIndex
        .Shapes(STYLE_REPO).Line.BeginArrowheadLength = Me.cmbSize.ListIndex + 1
        .Shapes(STYLE_REPO).Line.EndArrowheadLength = Me.cmbSize.ListIndex + 1
        .Shapes(STYLE_REPO).Line.BeginArrowheadWidth = Me.cmbSize.ListIndex + 1
        .Shapes(STYLE_REPO).Line.EndArrowheadWidth = Me.cmbSize.ListIndex + 1
    
    End With
    
    ' |fffd||7cb||fffd||fffd||fffd|
    With shtDataList
        ' |fffd||7cb||fffd||fffd||308||fffd||210||fffd||fffd||30e||fffd||fffd|
        .Shapes(STYLE_HIST).Line.dashstyle = Me.lblKindH.Tag
                
        ' |fffd||7cb||fffd||fffd||308||fffd||210||fffd||fffd||310|F
        .Range("F2") = Me.lblColorNameH.Caption
        .Shapes(STYLE_HIST).Line.ForeColor.RGB = lblSelectColorH.BackColor
        
        ' |fffd||7cb||fffd||fffd||308||fffd||210||fffd||fffd||315||fffd|
        .Shapes(STYLE_HIST).Line.Weight = CSng(spnWidthH.Value * LINE_WIDTH_POINT)
        txtWidthH.text = CSng(spnWidthH.Value * LINE_WIDTH_POINT) & " pt"
        
        ' |fffd||7cb||fffd||fffd||308||fffd||210||fffd||fffd||310||fffd|[|fffd||30e||fffd||fffd|
        .Range("D2") = Me.cmbKindH.ListIndex
        .Shapes(STYLE_HIST).Line.BeginArrowheadStyle = arrayArrowHeadStyle(Me.cmbKindH.ListIndex)
        .Shapes(STYLE_HIST).Line.EndArrowheadStyle = arrayArrowHeadStyle(Me.cmbKindH.ListIndex)
        
        ' |fffd||7cb||fffd||fffd||308||fffd||210||fffd||fffd||310||fffd|[|fffd||303|T|fffd|C|fffd|Y
        .Range("E2") = Me.cmbSizeH.ListIndex
        .Shapes(STYLE_HIST).Line.BeginArrowheadLength = Me.cmbSizeH.ListIndex + 1
        .Shapes(STYLE_HIST).Line.EndArrowheadLength = Me.cmbSizeH.ListIndex + 1
        .Shapes(STYLE_HIST).Line.BeginArrowheadWidth = Me.cmbSizeH.ListIndex + 1
        .Shapes(STYLE_HIST).Line.EndArrowheadWidth = Me.cmbSizeH.ListIndex + 1
        
    End With
    
    ' |fffd|X|fffd|^|fffd|C|fffd||fffd||fffd||752||fffd|t|fffd|H|fffd|[|fffd||fffd||fffd||fffd||fffd|A|fffd||fffd||fffd||fffd||fffd|[|fffd|h|fffd||fffd||fffd||fffd|
    Unload frmStyle
    
    ' |fffd|e|fffd||fffd||fffd|`|fffd||fffd||fffd||3cd|X|fffd|L|fffd||fffd||fffd|t|fffd||fffd||fffd|O|fffd||fffd|ON|fffd|itrue|fffd|j|fffd||242||fffd||fffd||fffd|
    isSheetUpdate = True
    
    ' |fffd|e|fffd||fffd|I|fffd|u|fffd|W|fffd|F|fffd|N|fffd|g|fffd||30a|J|fffd||fffd|
    Set shtDataList = Nothing
    
    Application.StatusBar = "|fffd||fffd||210||fffd||fffd||303|X|fffd|^|fffd|C|fffd||fffd||fffd||fffd||3cd|X|fffd||fffd||fffd||702||fffd||fffd||fffd||fffd|B"
    Application.ScreenUpdating = True

End Sub

Private Sub cmdCancel_Click()

    ' |fffd|X|fffd|^|fffd|C|fffd||fffd||fffd||752||fffd|t|fffd|H|fffd|[|fffd||fffd||fffd||fffd||fffd|A|fffd||fffd||fffd||fffd||fffd|[|fffd|h|fffd||fffd||fffd||fffd|
    Unload frmStyle
End Sub

Private Sub cmdColor_Click()
    
    ' |fffd||fffd||fffd|[|fffd|J|fffd||fffd||fffd||3d0||fffd|
    Dim bState  As Boolean
    
    ' |fffd||4d413||fffd||fffd||308||fffd||210||fffd|
    gsKindPL = PL_NEW
    
    ' |fffd|J|fffd||fffd||fffd|[|fffd|p|fffd||fffd||fffd|b|fffd|g|fffd||315|\|fffd||fffd||fffd||fffd||502||fffd||fffd||64fe|
    bState = fraColorPalette.Visible
    
    '  |fffd|J|fffd||fffd||fffd|[|fffd|p|fffd||fffd||fffd|b|fffd|g|fffd||308||292|u|fffd||fffd||752||80b7||fffd||fffd|
    With frmStyle
        .fraColorPalette.Top = .lblColor.Top + .lblColor.Height + fraStyle.Top + fraPLNew.Top + 10
        .fraColorPalette.Left = .lblColor.Left + fraStyle.Left + fraPLNew.Left + 3
    End With
    
    ' |fffd|\|fffd||fffd||fffd||fffd||502||fffd|Xor|fffd||fffd||fffd||fffd|i|fffd|\|fffd||fffd||fffd||303|I|fffd||fffd||fffd|I|fffd|t|fffd||fffd||602||fffd||582||fffd||fffd||fffd|j
    fraColorPalette.Visible = bState Xor True
    
    ' |fffd||fffd||fffd||30e||fffd||783|p|fffd|l|fffd||fffd||fffd||fffd||fffd|\|fffd||fffd||fffd||242||fffd||fffd||fffd|
    fraLineStyle.Visible = False

End Sub

Private Sub cmdColorH_Click()
    Dim bState  As Boolean
    
    ' |fffd||4d413||fffd||fffd||308||fffd||210||fffd|
    gsKindPL = PL_OLD
    
    ' |fffd|J|fffd||fffd||fffd|[|fffd|p|fffd||fffd||fffd|b|fffd|g|fffd||315|\|fffd||fffd||fffd||fffd||502||fffd||fffd||64fe|
    bState = fraColorPalette.Visible
    
    '  |fffd|J|fffd||fffd||fffd|[|fffd|p|fffd||fffd||fffd|b|fffd|g|fffd||308||292|u|fffd||fffd||752||80b7||fffd||fffd|
    With frmStyle
        .fraColorPalette.Top = .lblColorH.Top + .lblColorH.Height + fraStyle.Top + fraPLOld.Top + 10
        .fraColorPalette.Left = .lblColorH.Left + fraStyle.Left + fraPLOld.Left + 3
    End With
    
    ' |fffd|\|fffd||fffd||fffd||fffd||502||fffd|Xor|fffd||fffd||fffd||fffd|i|fffd|\|fffd||fffd||fffd||303|I|fffd||fffd||fffd|I|fffd|t|fffd||fffd||602||fffd||582||fffd||fffd||fffd|j
    fraColorPalette.Visible = bState Xor True
    
    ' |fffd||fffd||fffd||30e||fffd||783|p|fffd|l|fffd||fffd||fffd||fffd||fffd|\|fffd||fffd||fffd||242||fffd||fffd||fffd|
    fraLineStyle.Visible = False

End Sub
Private Sub cmdLine_Click()
    
    Dim bState  As Boolean
    
    ' |fffd||4d413||fffd||fffd||308||fffd||210||fffd|
    gsKindPL = PL_NEW
    
    ' |fffd||fffd||fffd||30e||fffd||783|p|fffd|l|fffd||fffd||fffd||315|\|fffd||fffd||fffd||fffd||502||fffd||fffd||64fe|
    bState = fraLineStyle.Visible
    
    '  |fffd||fffd||fffd||30e||fffd||783|p|fffd|l|fffd||fffd||fffd||308||292|u|fffd||fffd||752||80b7||fffd||fffd|
    With fraLineStyle
        .Top = fraPLNew.Top + lblKind.Top + lblKind.Height + 5
        .Left = fraPLNew.Left + lblKind.Left + 1.5
        
    End With
    
    ' |fffd|\|fffd||fffd||fffd||fffd||502||fffd|Xor|fffd||fffd||fffd||fffd|i|fffd|\|fffd||fffd||fffd||303|I|fffd||fffd||fffd|I|fffd|t|fffd||fffd||602||fffd||582||fffd||fffd||fffd|j
    fraLineStyle.Visible = bState Xor True
    
    ' |fffd|J|fffd||fffd||fffd|[|fffd|p|fffd||fffd||fffd|b|fffd|g|fffd||fffd||fffd|\|fffd||fffd||fffd||242||fffd||fffd||fffd|
    fraColorPalette.Visible = False

End Sub

Private Sub cmdLineH_Click()
    Dim bState  As Boolean
    
    ' |fffd||4d413||fffd||fffd||308||fffd||210||fffd|
    gsKindPL = PL_OLD
    
    ' |fffd||fffd||fffd||30e||fffd||783|p|fffd|l|fffd||fffd||fffd||315|\|fffd||fffd||fffd||fffd||502||fffd||fffd||64fe|
    bState = fraLineStyle.Visible
    
    '  |fffd||fffd||fffd||30e||fffd||783|p|fffd|l|fffd||fffd||fffd||308||292|u|fffd||fffd||752||80b7||fffd||fffd|
    With fraLineStyle
        .Top = fraPLOld.Top + lblKind.Top + lblKind.Height + 5
        .Left = fraPLOld.Left + lblKind.Left + 1.5
        
    End With
    
    ' |fffd|\|fffd||fffd||fffd||fffd||502||fffd|Xor|fffd||fffd||fffd||fffd|i|fffd|\|fffd||fffd||fffd||303|I|fffd||fffd||fffd|I|fffd|t|fffd||fffd||602||fffd||582||fffd||fffd||fffd|j
    fraLineStyle.Visible = bState Xor True
    
    ' |fffd|J|fffd||fffd||fffd|[|fffd|p|fffd||fffd||fffd|b|fffd|g|fffd||fffd||fffd|\|fffd||fffd||fffd||242||fffd||fffd||fffd|
    fraColorPalette.Visible = False

End Sub

Private Sub imgCurrent_Click()
    Dim bState  As Boolean
    
    bState = fraLineStyle.Visible
    fraLineStyle.Visible = bState Xor True
End Sub

Private Sub lblColor_Click()
    Call cmdColor_Click
End Sub

Private Sub lblKind_Click()
    Call cmdLine_Click
End Sub

Private Sub lblSelectColor_Click()
    Call cmdColor_Click
End Sub

Private Sub Label1_Click()
    Call cmdColor_Click
End Sub

Private Sub lblColorNameH_Click()
    Call cmdColorH_Click
End Sub

'***** |fffd||fffd||fffd|[|fffd|U|fffd||752||fffd|
Private Sub lblOther_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal x As Single, ByVal y As Single)
    Call MouseMove(lblOther)
End Sub

Private Sub lblOther_Click()
    
    frmStyle.fraColorPalette.Visible = False
    
    frmUserColor.Show
End Sub

Private Sub spnWidth_Change()
    txtWidth.text = CSng(spnWidth.Value * LINE_WIDTH_POINT) & " pt"
End Sub

Private Sub txtWidth_KeyPress(ByVal KeyAscii As MSForms.ReturnInteger)
    ' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||a0bd||fffd|L|fffd|[|fffd||fffd||fffd|A|fffd|X|fffd|L|fffd|[|fffd|R|fffd|[|fffd|h|fffd||143|`|fffd|F|fffd|b|fffd|N|fffd||fffd||fffd|A|fffd|s|fffd||fffd||fffd|I|fffd|h|fffd||190||fffd||fffd||fffd||fffd|i0-9|fffd|j|fffd||20a|O|fffd||353||fffd||fffd||342||16ccc||fffd||fffd||182||fffd||fffd||fffd|
    Select Case Chr(KeyAscii)
        Case "."
            If InStr(txtWidth, ".") > 0 Then KeyAscii = 0
        Case "0" To "9"
        Case Else
            KeyAscii = 0
    End Select
End Sub


Private Sub txtWidth_BeforeUpdate(ByVal Cancel As MSForms.ReturnBoolean)
    ' |fffd||fffd||fffd|[|fffd|J|fffd||fffd||fffd||8414||fffd||fffd|`
    Const WIDTH_MAX = 100
    
    ' |fffd||fffd||fffd|[|fffd|J|fffd||fffd||fffd||3d0||fffd||fffd||fffd|`
    Dim sWidthPoint As String
    
    ' |fffd||fffd||fffd||fffd||fffd||342||30f||a347||fffd||34f||fffd||fffd||fffd||fffd||fffd||fffd|I|fffd||fffd||fffd||fffd||fffd||fffd|
    If txtWidth.text = "" Then Exit Sub
    
    ' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||d3dc||fffd||fffd||fffd||110||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||255||48f|W|fffd||fffd||fffd||fffd|
    sWidthPoint = txtWidth.text
    sWidthPoint = Replace(sWidthPoint, " ", "")
    sWidthPoint = Replace(sWidthPoint, "p", "")
    sWidthPoint = Replace(sWidthPoint, "t", "")
    
    If sWidthPoint > WIDTH_MAX Then
        ' |fffd|l|fffd||fffd|100|fffd||12d02||fffd||fffd||fffd||fffd||a347||fffd||fffd|100|fffd||255||2433||fffd||fffd||fffd||fffd|
        sWidthPoint = WIDTH_MAX
    ElseIf sWidthPoint < LINE_WIDTH_POINT Then
        ' |fffd|l|fffd||fffd|0|fffd||fffd||83ec||fffd||fffd||fffd||fffd||fffd||a347||fffd||fffd|0.25|fffd||255||2433||fffd||fffd||fffd||fffd|
        sWidthPoint = LINE_WIDTH_POINT
    End If
    
    ' |fffd|e|fffd|L|fffd|X|fffd|g|fffd|{|fffd|b|fffd|N|fffd|X|fffd||312|l|fffd||fffd||fffd|X|fffd|s|fffd||fffd||fffd|R|fffd||fffd||fffd|g|fffd||fffd||fffd|[|fffd||fffd||fffd||250||752||80b7||fffd||fffd|
    sWidthPoint = CLng(CSng(sWidthPoint) * 100)
    sWidthPoint = CSng(sWidthPoint) / 100
    spnWidth.Value = CSng(sWidthPoint) / LINE_WIDTH_POINT
    Me.txtWidth.text = CSng(Me.spnWidth.Value * LINE_WIDTH_POINT) & " pt"

End Sub

Private Sub spnWidthH_Change()
    txtWidthH.text = CSng(spnWidthH.Value * LINE_WIDTH_POINT) & " pt"
End Sub

Private Sub txtWidthH_KeyPress(ByVal KeyAscii As MSForms.ReturnInteger)
    ' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||a0bd||fffd|L|fffd|[|fffd||fffd||fffd|A|fffd|X|fffd|L|fffd|[|fffd|R|fffd|[|fffd|h|fffd||143|`|fffd|F|fffd|b|fffd|N|fffd||fffd||fffd|A|fffd|s|fffd||fffd||fffd|I|fffd|h|fffd||190||fffd||fffd||fffd||fffd|i0-9|fffd|j|fffd||20a|O|fffd||353||fffd||fffd||342||16ccc||fffd||fffd||182||fffd||fffd||fffd|
    Select Case Chr(KeyAscii)
        Case "."
            If InStr(txtWidthH, ".") > 0 Then KeyAscii = 0
        Case "0" To "9"
        Case Else
            KeyAscii = 0
    End Select
End Sub


Private Sub txtWidthH_BeforeUpdate(ByVal Cancel As MSForms.ReturnBoolean)
    ' |fffd||fffd||fffd|[|fffd|J|fffd||fffd||fffd||8414||fffd||fffd|`
    Const WIDTH_MAX = 100
    
    ' |fffd||fffd||fffd|[|fffd|J|fffd||fffd||fffd||3d0||fffd||fffd||fffd|`
    Dim sWidthPoint As String
    
    ' |fffd||fffd||fffd||fffd||fffd||342||30f||a347||fffd||34f||fffd||fffd||fffd||fffd||fffd||fffd|I|fffd||fffd||fffd||fffd||fffd||fffd|
    If txtWidthH.text = "" Then Exit Sub
    
    ' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||d3dc||fffd||fffd||fffd||110||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||255||48f|W|fffd||fffd||fffd||fffd|
    sWidthPoint = txtWidthH.text
    sWidthPoint = Replace(sWidthPoint, " ", "")
    sWidthPoint = Replace(sWidthPoint, "p", "")
    sWidthPoint = Replace(sWidthPoint, "t", "")
    
    If sWidthPoint > WIDTH_MAX Then
        ' |fffd|l|fffd||fffd|100|fffd||12d02||fffd||fffd||fffd||fffd||a347||fffd||fffd|100|fffd||255||2433||fffd||fffd||fffd||fffd|
        sWidthPoint = WIDTH_MAX
    ElseIf sWidthPoint < LINE_WIDTH_POINT Then
        ' |fffd|l|fffd||fffd|0|fffd||fffd||83ec||fffd||fffd||fffd||fffd||fffd||a347||fffd||fffd|0.25|fffd||255||2433||fffd||fffd||fffd||fffd|
        sWidthPoint = LINE_WIDTH_POINT
    End If
    
    ' |fffd|e|fffd|L|fffd|X|fffd|g|fffd|{|fffd|b|fffd|N|fffd|X|fffd||312|l|fffd||fffd||fffd|X|fffd|s|fffd||fffd||fffd|R|fffd||fffd||fffd|g|fffd||fffd||fffd|[|fffd||fffd||fffd||250||752||80b7||fffd||fffd|
    sWidthPoint = CLng(CSng(sWidthPoint) * 100)
    sWidthPoint = CSng(sWidthPoint) / 100
    spnWidthH.Value = CSng(sWidthPoint) / LINE_WIDTH_POINT
    Me.txtWidthH.text = CSng(Me.spnWidthH.Value * LINE_WIDTH_POINT) & " pt"

End Sub
Attribute VB_Name = "frmUserColor"
Attribute VB_Base = "0{C20C2570-0A60-4CC5-AB67-8B5A8C29C925}{531CDB9F-EEA5-4CD6-932A-66E3F7D23D14}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Option Explicit

Dim miR As Long
Dim miG As Long
Dim miB As Long

Private Sub UserForm_Initialize()
        
    ' |fffd||fffd||fffd|[|fffd|J|fffd||fffd||fffd||3d0||fffd||fffd||312||fffd|`
    Dim arrayRGB    As Variant
    
    ' |fffd|e|fffd|L|fffd|X|fffd|g|fffd|{|fffd|b|fffd|N|fffd|X|fffd||24f||fffd||fffd||fffd||fffd|l|fffd||fffd||752||80b7||fffd||fffd|
    If frmStyle.Label1.Caption = "|fffd||fffd||fffd|[|fffd|U|fffd||752||fffd|" Then
        lblCurrent.BackColor = frmStyle.lblSelectColor.BackColor
        arrayRGB = Split(ConvertRGBtoCSV(lblCurrent.BackColor), ",")
        txtR.text = arrayRGB(0)
        txtG.text = arrayRGB(1)
        txtB.text = arrayRGB(2)
    Else
        txtR.text = 0
        txtG.text = 0
        txtB.text = 0
    End If
    
    ' |fffd|X|fffd|s|fffd||fffd||fffd|{|fffd|^|fffd||fffd||fffd||24f||fffd||fffd||fffd||fffd|l|fffd||fffd||752||80b7||fffd||fffd|
    spnR.Value = txtR.text
    spnG.Value = txtG.text
    spnB.Value = txtB.text
    
    ' RGB|fffd|l|fffd||fffd||794||fffd||fffd||fffd||fffd||fffd|
    miR = txtR.text
    miG = txtG.text
    miB = txtB.text
    
    ' |fffd||fffd||fffd|[|fffd|U|fffd||752||fffd||fffd|RGB|fffd|l|fffd||fffd||fffd|m|fffd||80b7||fffd||fffd|
    Call setRGB
End Sub

Private Sub cmdCancel_Click()
    ' |fffd|J|fffd||fffd||fffd|[|fffd||752||fffd|t|fffd|H|fffd|[|fffd||fffd||fffd||fffd||fffd|\|fffd||fffd||fffd||242||fffd||fffd||fffd|
    frmUserColor.Hide
    
    ' |fffd||794||fffd||fffd||fffd||fffd||102||fffd||fffd||fffd|RGB|fffd|l|fffd||fffd||7c2||fffd|
    txtR.text = miR
    txtG.text = miG
    txtB.text = miB
    
End Sub

Private Sub cmdOK_Click()
    ' |fffd||fffd||fffd|[|fffd|J|fffd||fffd||fffd||3d0||fffd||fffd||312||fffd|`
    Dim lRGB  As Long
    
    lRGB = RGB(txtR.text, txtG.text, txtB.text)
    Call SelectColor(lRGB, "|fffd||fffd||fffd|[|fffd|U|fffd||752||fffd|")
    
    ' RGB|fffd|l|fffd||fffd||794||fffd||fffd||fffd||fffd||fffd|
    miR = txtR.text
    miG = txtG.text
    miB = txtB.text
    
    ' |fffd|J|fffd||fffd||fffd|[|fffd||752||fffd|t|fffd|H|fffd|[|fffd||fffd||fffd||fffd||fffd|\|fffd||fffd||fffd||242||fffd||fffd||fffd|
    frmUserColor.Hide

    ' |fffd|e|fffd||fffd||fffd|`|fffd||fffd||fffd||3cd|X|fffd|L|fffd||fffd||fffd|t|fffd||fffd||fffd|O|fffd||fffd|ON|fffd|itrue|fffd|j|fffd||242||fffd||fffd||fffd|
    isSheetUpdate = True

End Sub

Sub spnR_Change()
    txtR.text = spnR.Value
    
    ' |fffd||fffd||fffd|[|fffd|U|fffd||752||fffd||fffd|RGB|fffd|l|fffd||fffd||fffd|m|fffd||80b7||fffd||fffd|
    Call setRGB
End Sub

Sub spnG_Change()
    txtG.text = spnG.Value
    
    ' |fffd||fffd||fffd|[|fffd|U|fffd||752||fffd||fffd|RGB|fffd|l|fffd||fffd||fffd|m|fffd||80b7||fffd||fffd|
    Call setRGB
End Sub

Sub spnB_Change()
    txtB.text = spnB.Value
    
    ' |fffd||fffd||fffd|[|fffd|U|fffd||752||fffd||fffd|RGB|fffd|l|fffd||fffd||fffd|m|fffd||80b7||fffd||fffd|
    Call setRGB
End Sub

Private Sub txtR_KeyPress(ByVal KeyAscii As MSForms.ReturnInteger)
    ' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||a0bd||fffd|L|fffd|[|fffd||fffd||fffd|A|fffd|X|fffd|L|fffd|[|fffd|R|fffd|[|fffd|h|fffd||143|`|fffd|F|fffd|b|fffd|N|fffd||fffd||fffd|A|fffd||fffd||fffd||fffd||fffd|i0-9|fffd|j|fffd||20a|O|fffd||356||fffd||fffd||fffd||fffd||182||fffd||fffd||fffd|
    If Chr(KeyAscii) < "0" Or Chr(KeyAscii) > "9" Then
        KeyAscii = 0
    End If
End Sub

Private Sub txtR_BeforeUpdate(ByVal Cancel As MSForms.ReturnBoolean)
    If Len(txtR.text) = 0 Then
        txtR.text = 0
        spnR.Value = 0
    ElseIf CLng(txtR.text) <= 255 Then
        spnR.Value = txtR.text
    Else
        txtR.text = spnR.Value
    End If
End Sub

Private Sub txtG_KeyPress(ByVal KeyAscii As MSForms.ReturnInteger)
    ' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||a0bd||fffd|L|fffd|[|fffd||fffd||fffd|A|fffd|X|fffd|L|fffd|[|fffd|R|fffd|[|fffd|h|fffd||143|`|fffd|F|fffd|b|fffd|N|fffd||fffd||fffd|A|fffd||fffd||fffd||fffd||fffd|i0-9|fffd|j|fffd||20a|O|fffd||356||fffd||fffd||fffd||fffd||182||fffd||fffd||fffd|
    If Chr(KeyAscii) < "0" Or Chr(KeyAscii) > "9" Then
        KeyAscii = 0
    End If
End Sub

Private Sub txtG_BeforeUpdate(ByVal Cancel As MSForms.ReturnBoolean)
    If Len(txtG.text) = 0 Then
        txtG.text = 0
        spnG.Value = 0
    ElseIf CLng(txtG.text) <= 255 Then
        spnG.Value = txtG.text
    Else
        txtG.text = spnG.Value
    End If
End Sub

Private Sub txtB_KeyPress(ByVal KeyAscii As MSForms.ReturnInteger)
    ' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||a0bd||fffd|L|fffd|[|fffd||fffd||fffd|A|fffd|X|fffd|L|fffd|[|fffd|R|fffd|[|fffd|h|fffd||143|`|fffd|F|fffd|b|fffd|N|fffd||fffd||fffd|A|fffd||fffd||fffd||fffd||fffd|i0-9|fffd|j|fffd||20a|O|fffd||356||fffd||fffd||fffd||fffd||182||fffd||fffd||fffd|
    If Chr(KeyAscii) < "0" Or Chr(KeyAscii) > "9" Then
        KeyAscii = 0
    End If
End Sub

Private Sub txtB_BeforeUpdate(ByVal Cancel As MSForms.ReturnBoolean)
    If Len(txtB.text) = 0 Then
        txtB.text = 0
        spnB.Value = 0
    ElseIf CLng(txtB.text) <= 255 Then
        spnB.Value = txtB.text
    Else
        txtB.text = spnB.Value
    End If

End Sub

Sub setRGB()
    If txtR.text <= 255 And txtG.text <= 255 And txtB.text <= 255 Then
        frmUserColor.lblCurrent.BackColor = RGB(txtR.text, txtG.text, txtB.text)
    End If
    
End Sub


Attribute VB_Name = "modAPI"
Option Explicit

Function IsHoliday(ByVal |fffd||fffd||fffd|t As Date) As Boolean
Attribute IsHoliday.VB_Description = "|fffd||fffd||fffd|t|fffd||fffd||fffd|x|fffd||fffd||fffd||fffd||fffd||1c2||fffd||fffd||fffd||fffd||12c82||5c1|A|fffd||fffd||fffd||282||fffd||fffd|u|fffd|[|fffd||fffd||fffd|^ (Boolean) |fffd||155||502||fffd||fffd||702||fffd||fffd|B"
Attribute IsHoliday.VB_ProcData.VB_Invoke_Func = " \n14"
    On Error Resume Next

    Application.Volatile (True)
            
    If Not IsDate(|fffd||fffd||fffd|t) Then Exit Function
    
    ' |fffd|j|fffd||fffd||fffd||fffd||fffd||fffd|
    If UCase(ThisWorkbook.Worksheets(SHT_DATALIST).Cells(Weekday(|fffd||fffd||fffd|t) + 1, "K").Value) = "TRUE" Then
        IsHoliday = True
    Else
        ' |fffd|j|fffd||fffd||fffd||fffd||fffd||fffd|
        If GetHoliday(|fffd||fffd||fffd|t) = "" Then
            IsHoliday = False
        Else
            IsHoliday = True
        End If
    
    End If
        
    ' |fffd||fffd||fffd|[|fffd|U|fffd||752||fffd||182||313||2cd||fffd||fffd||fffd|
    ' |fffd|x|fffd|j|fffd||fffd||fffd||2d5||fffd||fffd||fffd||fffd|A|fffd||fffd||fffd||fffd||fffd||2cb|x|fffd|j|fffd||fffd|
    If Application.WorksheetFunction.CountIf(ThisWorkbook.Worksheets(SHT_DATALIST).Range("N2:N" & Rows.Count), |fffd||fffd||fffd|t) > 0 Then
        IsHoliday = IsHoliday Xor True
    End If

End Function

Function GetHolidayName(ByVal |fffd||fffd||fffd|t As Date) As String
Attribute GetHolidayName.VB_Description = "|fffd||fffd||fffd|t|fffd||251||389||fffd||fffd||fffd||fffd||fffd|j|fffd||fffd||fffd||fffd||fffd||fffd||502||fffd||fffd||702||fffd||fffd|B"
Attribute GetHolidayName.VB_ProcData.VB_Invoke_Func = " \n14"
    On Error Resume Next

    If Not IsDate(|fffd||fffd||fffd|t) Then Exit Function
    
    ' |fffd|j|fffd||fffd||fffd||fffd||fffd||64fe|
    GetHolidayName = GetHoliday(|fffd||fffd||fffd|t)

End Function
Attribute VB_Name = "modCanvas"
Option Explicit
Option Private Module

Private Type tCANVAS
    prj_period          As Range    ' |fffd|v|fffd||fffd||fffd|W|fffd|F|fffd|N|fffd|g|fffd||fffd||fffd||fffd|
    pl_range            As Range    ' |fffd||fffd||210||fffd||fffd|`|fffd||fffd||348||fffd|
    pl_history_range    As Range    ' |fffd||fffd||fffd||fffd|`|fffd||fffd||348||fffd|
    top_task            As Range    ' |fffd||64ea||fffd|^|fffd|X|fffd|N
    top_startdate       As Range    ' |fffd||64ea||fffd|^|fffd|X|fffd|N|fffd||30a|J|fffd|n|fffd||fffd|
    top_enddate         As Range    ' |fffd||64ea||fffd|^|fffd|X|fffd|N|fffd||30f|I|fffd||fffd||fffd||fffd|
    progress_ratio      As Range    ' |fffd||64ea||fffd|^|fffd|X|fffd|N|fffd||310|i|fffd||fffd||fffd||fffd|
End Type

Sub EditCanvasFormat(control As IRibbonControl)
    On Error GoTo EditCanvasFormatErr

    ' |fffd|v|fffd|Z|fffd||317|}|fffd|~
    Dim saveExcelCalc       As Variant      ' xlCalculation|fffd||303|o|fffd|b|fffd|N|fffd|A|fffd|b|fffd|v
    Dim saveReferenceStyle  As String       ' |fffd|s|fffd||197||fffd||30c||fffd||fffd|o|fffd||fffd||fffd|`|fffd||fffd||fffd||303|o|fffd|b|fffd|N|fffd|A|fffd|b|fffd|v
    With Application
        saveExcelCalc = .Calculation
        saveReferenceStyle = .ReferenceStyle
        .Calculation = xlCalculationManual
        .ReferenceStyle = xlA1
        .StatusBar = ""
    End With

    ' |fffd||752||82ae||fffd||fffd||fffd|t|fffd||fffd||fffd|O|fffd||fffd||fffd||fffd||fffd||fffd|
    isEditCheckOK = False
    
    ' Worksheet|fffd||30e|Q|fffd||190||752||fffd||fffd||fffd|s|fffd||fffd|
    Dim sheetCanvas         As Worksheet    ' |fffd|`|fffd||fffd|V|fffd|[|fffd|g
    Dim shtEdtFormat        As Object       ' |fffd|`|fffd||fffd|V|fffd|[|fffd|g|fffd||752||fffd|_|fffd|C|fffd|A|fffd||fffd||fffd|O|fffd|Q|fffd||190||752||fffd|p
    Set sheetCanvas = ActiveWorkbook.ActiveSheet
    Set shtEdtFormat = ThisWorkbook.Sheets(DLG_FORMAT)
    
    ' |fffd|`|fffd||fffd|V|fffd|[|fffd|g|fffd||313|o|fffd|^|fffd||fffd||fffd||fffd||fffd||64fe||fffd||fffd||fffd||fffd|
    Dim canvas_info         As tCANVAS
    canvas_info = GetCanvasInfo(sheetCanvas.Name)
    
    ' |fffd|V|fffd|[|fffd|g|fffd||253|o|fffd|^|fffd||fffd||fffd||fffd||102||fffd||fffd||95bc||fffd|O|fffd|I|fffd|u|fffd|W|fffd|F|fffd|N|fffd|g|fffd||312|l|fffd||fffd|`|fffd||fffd|V|fffd|[|fffd|g|fffd||fffd||fffd||fffd||fffd||752||fffd|_|fffd|C|fffd|A|fffd||fffd||fffd|O|fffd||250||752||80b5||fffd||115|\|fffd||fffd||fffd||fffd||fffd||fffd|
    With shtEdtFormat
        If canvas_info.prj_period Is Nothing Then
            Dim i                   As Long
            For i = 1 To 6
                shtEdtFormat.EditBoxes(i).text = ""
            Next
        Else
            .EditBoxes(1).text = canvas_info.prj_period.Address
            .EditBoxes(2).text = canvas_info.pl_range.Address
            .EditBoxes(3).text = canvas_info.top_task.Address
            .EditBoxes(4).text = canvas_info.top_startdate.Address
            .EditBoxes(5).text = canvas_info.top_enddate.Address
            .EditBoxes(6).text = canvas_info.progress_ratio.Address
        End If
    End With

SET_EDIT:
    shtEdtFormat.Show                           ' |fffd|`|fffd||fffd|V|fffd|[|fffd|g|fffd||752||fffd|_|fffd|C|fffd|A|fffd||fffd||fffd|O|fffd|\|fffd||fffd|
    
    ' |fffd||fffd||fffd||fffd||fffd||752||80aa||fffd|m|fffd|f|fffd||30f||a347||fffd|A|fffd||752||fffd||fffd||fffd||fffd||84bc||fffd||fffd|
    If isEditCheckOK Then                        ' OK|fffd|{|fffd|^|fffd||fffd||fffd||fffd||fffd||fffd|
        
        ' |fffd||fffd||28d|X|fffd|V|fffd||fffd|}|fffd|~|fffd||fffd||fffd||fffd|
        Application.ScreenUpdating = False

        ' |fffd|`|fffd||fffd|V|fffd|[|fffd|g|fffd||752||fffd|l|fffd||303|`|fffd|F|fffd|b|fffd|N|fffd||fffd||fffd|s|fffd||fffd|
        If Not SetFormat(sheetCanvas) Then
            ' |fffd||fffd||28d|X|fffd|V|fffd|}|fffd|~|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
            Application.ScreenUpdating = True
            GoTo SET_EDIT
        End If
        
        ' |fffd||fffd||fffd||fffd|pNameObject|fffd||fffd|o|fffd|^|fffd||fffd||fffd||fffd|
        Call AddHistoryManager(sheetCanvas, sheetCanvas.Range(shtEdtFormat.EditBoxes(2).text).Address)
        
        ' |fffd||fffd||210||fffd||fffd|`|fffd||fffd||348||342||303|^|fffd|X|fffd|N|fffd||256||fffd||fffd|O|fffd|I|fffd|u|fffd|W|fffd|F|fffd|N|fffd|g|fffd||fffd||1c9||fffd||fffd||fffd||fffd||fffd|
        Call AddAllTaskName(sheetCanvas)
        
        ' |fffd||752||82ae||fffd||fffd||fffd||fffd||fffd|b|fffd|Z|fffd|[|fffd|W|fffd||fffd||fffd|o|fffd||342||fffd||fffd||fffd|
        Application.StatusBar = "|fffd|`|fffd||fffd|V|fffd|[|fffd|g|fffd||310||752||80aa||fffd||fffd||fffd||fffd||fffd||fffd||fffd||702||fffd||fffd||fffd||fffd|B"
    End If
    
    ' |fffd|I|fffd||fffd||fffd||fffd||fffd||fffd|
    GoTo EditCanvasFormatExit
    
EditCanvasFormatErr:
    ' |fffd|~|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||103|_|fffd|C|fffd|A|fffd||fffd||fffd|O|fffd||fffd||fffd|I|fffd||fffd||fffd||fffd||fffd||fffd||183|G|fffd||fffd||fffd|[|fffd||242||202||90aa||fffd|A|fffd|G|fffd||fffd||fffd|[|fffd||fffd||fffd|b|fffd|Z|fffd|[|fffd|W|fffd||34f|o|fffd||342||fffd||fffd||202||fffd||fffd||60a4||fffd||242||fffd||fffd||fffd|
    err.Clear
    
EditCanvasFormatExit:
    
    ' |fffd|Q|fffd||190||752||fffd||fffd||fffd|J|fffd||fffd||fffd||fffd||fffd||fffd|
    Set sheetCanvas = Nothing
    Set shtEdtFormat = Nothing
    
    ' |fffd|v|fffd|Z|fffd||317|}|fffd|~|fffd||fffd||fffd||fffd||fffd||fffd|
    With Application
        .Calculation = saveExcelCalc
        .ReferenceStyle = saveReferenceStyle
    End With
End Sub

Function NormalizedRangeFormat(ByVal rangeString As String, Optional ByVal sOption As String) As String
    On Error Resume Next
    
    ' |fffd||fffd||fffd|[|fffd|J|fffd||fffd||fffd||3d0||fffd||fffd||fffd|`
    Dim i                       As Long
    Dim j                       As Long
    Dim referencePosition       As Long
    Dim divisionPosition        As Long
    Dim referenceSheetName      As String
    Dim workRangeString         As String
    Dim arrayRowColNumber(2, 2) As String
    Dim arrayRangeString        As Variant
    Dim va_MltSelect            As Variant
    
    ' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||30f||a347||fffd||34f||fffd||fffd||fffd||fffd||14c82||fffd||fffd||fffd|
    If rangeString = "" Then
        NormalizedRangeFormat = ""
        Exit Function
    End If
    
    ' |fffd|Z|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|I|fffd||fffd||fffd||fffd||fffd||fffd||102||fffd||fffd||fffd||a347||fffd|A|fffd||14f||fffd||fffd||251|I|fffd||fffd||fffd||fffd||fffd||a0bd||fffd|Z|fffd||fffd||fffd||302||757|L|fffd||fffd||fffd||182||fffd||fffd||fffd|
    va_MltSelect = Split(rangeString, ",")
    If UBound(va_MltSelect) > 0 Then rangeString = va_MltSelect(0)
    
    ' |fffd||fffd||38e|Q|fffd||182||30b|L|fffd||fffd||fffd|u$|fffd|v|fffd||fffd||fffd||d3dc||fffd||fffd||fffd||fffd|
    workRangeString = Replace(rangeString, "$", "")
    
    ' |fffd|Q|fffd||183|V|fffd|[|fffd|g|fffd||fffd||fffd||1228f|o|fffd||fffd||fffd||fffd|
    referencePosition = InStr(1, workRangeString, "!")
    If referencePosition > 0 Then
        referenceSheetName = Mid(workRangeString, 1, referencePosition - 1)
        workRangeString = Mid(workRangeString, referencePosition + 1)
        referenceSheetName = Replace(referenceSheetName, "'", "")
    End If
            
    ' |fffd|J|fffd|n|fffd|Z|fffd||fffd||fffd||18f|I|fffd||fffd||fffd|Z|fffd||fffd||fffd||1228f|o|fffd||fffd||fffd||fffd|
    divisionPosition = InStr(1, workRangeString, ":")
    If divisionPosition > 0 Then
        arrayRangeString = Split(workRangeString, ":")
    Else
        ReDim arrayRangeString(1) As Variant
        arrayRangeString(0) = workRangeString
    End If
    
    ' |fffd||fffd||fffd||fffd||fffd||fffd||15a89||fffd||fffd||fffd||fffd||10d|s|fffd||197||fffd||1228f|o|fffd||fffd||fffd||fffd|
    For i = 0 To UBound(arrayRangeString)
        For j = 1 To Len(arrayRangeString(i))
            If IsNumeric(Mid(arrayRangeString(i), j, 1)) Then
                arrayRowColNumber(i, 1) = Mid(arrayRangeString(i), j)
                Exit For
            Else
                arrayRowColNumber(i, 0) = arrayRowColNumber(i, 0) & Mid(arrayRangeString(i), j, 1)
            End If
        Next
    Next
    
    ' |fffd|I|fffd||fffd||348||342||fffd||48f|W|fffd||fffd||fffd||fffd|
    If referencePosition > 0 Then referenceSheetName = referenceSheetName & "!"
    Select Case sOption
        Case "R"    '|fffd|s|fffd||348||fffd|
            workRangeString = referenceSheetName & "$" & arrayRowColNumber(0, 0) & "$" & arrayRowColNumber(0, 1)
            If divisionPosition > 0 Then
                workRangeString = workRangeString & ":" & "$" & arrayRowColNumber(0, 0) & "$" & arrayRowColNumber(1, 1)
            End If
        Case "RR"    '|fffd|s|fffd||348||fffd|
            workRangeString = referenceSheetName & "$" & arrayRowColNumber(0, 1) & ":" & "$"
            If divisionPosition = 0 Then
                workRangeString = workRangeString & arrayRowColNumber(0, 1)
            Else
                workRangeString = workRangeString & arrayRowColNumber(1, 1)
            End If
        Case "C"    '|fffd||fffd||348||fffd|
            workRangeString = referenceSheetName & "$" & arrayRowColNumber(0, 0) & "$" & arrayRowColNumber(0, 1)
            If divisionPosition > 0 Then
                workRangeString = workRangeString & ":" & "$" & arrayRowColNumber(1, 0) & "$" & arrayRowColNumber(0, 1)
            End If
        Case "CC"    '|fffd||fffd||348||fffd|
            workRangeString = referenceSheetName & "$" & arrayRowColNumber(0, 0) & ":" & "$"
            If divisionPosition = 0 Then
                workRangeString = workRangeString & arrayRowColNumber(0, 0)
            Else
                workRangeString = workRangeString & arrayRowColNumber(1, 0)
            End If
        Case "C1"    '|fffd|P|fffd|Z|fffd||fffd|
            workRangeString = referenceSheetName & "$" & arrayRowColNumber(0, 0) & "$" & arrayRowColNumber(0, 1)
        Case Else   '|fffd|Z|fffd||fffd||fffd||348||fffd|
            workRangeString = referenceSheetName & "$" & arrayRowColNumber(0, 0) & "$" & arrayRowColNumber(0, 1)
            If divisionPosition > 0 Then
                workRangeString = workRangeString & ":" & "$" & arrayRowColNumber(1, 0) & "$" & arrayRowColNumber(1, 1)
            End If
    End Select
    
    ' |fffd||fffd||fffd||282||fffd||502||fffd|
    If IsError(Range(workRangeString)) Then workRangeString = ""
    NormalizedRangeFormat = workRangeString
End Function

' |fffd|v|fffd||fffd||fffd|W|fffd|F|fffd|N|fffd|g|fffd||fffd||fffd||fffd|
Sub |fffd|G|fffd|f|fffd|B|fffd|b|fffd|g8_Change()
    
    ' |fffd||fffd||fffd|[|fffd|J|fffd||fffd||fffd||3d0||fffd||fffd||fffd|`
    Dim shtEdtFormat    As Object   ' |fffd|`|fffd||fffd|V|fffd|[|fffd|g|fffd||752||fffd|_|fffd|C|fffd|A|fffd||fffd||fffd|O|fffd|Q|fffd||190||752||fffd|p
    
    ' Worksheet|fffd||30e|Q|fffd||190||752||fffd||fffd||fffd|s|fffd||fffd|
    Set shtEdtFormat = ThisWorkbook.Sheets(DLG_FORMAT)
    
    ' |fffd|v|fffd||fffd||fffd|W|fffd|F|fffd|N|fffd|g|fffd||fffd||fffd||fffd|
    shtEdtFormat.EditBoxes(1).text = NormalizedRangeFormat(shtEdtFormat.EditBoxes(1).text, "C")
    
    ' |fffd|Q|fffd||190||752||fffd||fffd||fffd|J|fffd||fffd||fffd||fffd||fffd||fffd|
    Set shtEdtFormat = Nothing
    
End Sub

' |fffd||fffd||210||fffd||fffd||348||fffd|
Sub |fffd|G|fffd|f|fffd|B|fffd|b|fffd|g12_Change()
    
    ' |fffd||fffd||fffd|[|fffd|J|fffd||fffd||fffd||3d0||fffd||fffd||fffd|`
    Dim shtEdtFormat    As Object   ' |fffd|`|fffd||fffd|V|fffd|[|fffd|g|fffd||752||fffd|_|fffd|C|fffd|A|fffd||fffd||fffd|O|fffd|Q|fffd||190||752||fffd|p
    
    ' Worksheet|fffd||30e|Q|fffd||190||752||fffd||fffd||fffd|s|fffd||fffd|
    Set shtEdtFormat = ThisWorkbook.Sheets(DLG_FORMAT)
    
    ' |fffd||fffd||210||fffd||fffd|`|fffd||fffd||348||fffd|
    shtEdtFormat.EditBoxes(2).text = NormalizedRangeFormat(shtEdtFormat.EditBoxes(2).text, "RR")
    
    ' |fffd|Q|fffd||190||752||fffd||fffd||fffd|J|fffd||fffd||fffd||fffd||fffd||fffd|
    Set shtEdtFormat = Nothing
    
End Sub

' |fffd||64ea||fffd|^|fffd|X|fffd|N|fffd||348||fffd|
Sub |fffd|G|fffd|f|fffd|B|fffd|b|fffd|g13_Change()
    
    ' |fffd||fffd||fffd|[|fffd|J|fffd||fffd||fffd||3d0||fffd||fffd||fffd|`
    Dim shtEdtFormat    As Object   ' |fffd|`|fffd||fffd|V|fffd|[|fffd|g|fffd||752||fffd|_|fffd|C|fffd|A|fffd||fffd||fffd|O|fffd|Q|fffd||190||752||fffd|p
    
    ' Worksheet|fffd||30e|Q|fffd||190||752||fffd||fffd||fffd|s|fffd||fffd|
    Set shtEdtFormat = ThisWorkbook.Sheets(DLG_FORMAT)
    
    ' |fffd||64ea||fffd|^|fffd|X|fffd|N|fffd||348||fffd|
    shtEdtFormat.EditBoxes(3).text = NormalizedRangeFormat(shtEdtFormat.EditBoxes(3).text, "RR")
    
    ' |fffd|Q|fffd||190||752||fffd||fffd||fffd|J|fffd||fffd||fffd||fffd||fffd||fffd|
    Set shtEdtFormat = Nothing

End Sub

' |fffd|J|fffd|n|fffd|\|fffd||fffd||fffd|
Sub |fffd|G|fffd|f|fffd|B|fffd|b|fffd|g14_Change()
    
    ' |fffd||fffd||fffd|[|fffd|J|fffd||fffd||fffd||3d0||fffd||fffd||fffd|`
    Dim shtEdtFormat    As Object   ' |fffd|`|fffd||fffd|V|fffd|[|fffd|g|fffd||752||fffd|_|fffd|C|fffd|A|fffd||fffd||fffd|O|fffd|Q|fffd||190||752||fffd|p
    
    ' Worksheet|fffd||30e|Q|fffd||190||752||fffd||fffd||fffd|s|fffd||fffd|
    Set shtEdtFormat = ThisWorkbook.Sheets(DLG_FORMAT)
    
    ' |fffd|J|fffd|n|fffd||fffd||fffd|Z|fffd||fffd|
    shtEdtFormat.EditBoxes(4).text = NormalizedRangeFormat(shtEdtFormat.EditBoxes(4).text, "C1")

    ' |fffd|Q|fffd||190||752||fffd||fffd||fffd|J|fffd||fffd||fffd||fffd||fffd||fffd|
    Set shtEdtFormat = Nothing

End Sub

' |fffd|I|fffd||fffd||fffd|\|fffd||fffd||fffd|
Sub |fffd|G|fffd|f|fffd|B|fffd|b|fffd|g15_Change()
    
    ' |fffd||fffd||fffd|[|fffd|J|fffd||fffd||fffd||3d0||fffd||fffd||fffd|`
    Dim shtEdtFormat    As Object   ' |fffd|`|fffd||fffd|V|fffd|[|fffd|g|fffd||752||fffd|_|fffd|C|fffd|A|fffd||fffd||fffd|O|fffd|Q|fffd||190||752||fffd|p
    
    ' Worksheet|fffd||30e|Q|fffd||190||752||fffd||fffd||fffd|s|fffd||fffd|
    Set shtEdtFormat = ThisWorkbook.Sheets(DLG_FORMAT)
    
    ' |fffd|I|fffd||fffd||fffd||fffd||fffd|Z|fffd||fffd|
    shtEdtFormat.EditBoxes(5).text = NormalizedRangeFormat(shtEdtFormat.EditBoxes(5).text, "C1")
    
    ' |fffd|Q|fffd||190||752||fffd||fffd||fffd|J|fffd||fffd||fffd||fffd||fffd||fffd|
    Set shtEdtFormat = Nothing
    
End Sub

' |fffd|i|fffd||fffd||fffd||fffd|
Sub |fffd|G|fffd|f|fffd|B|fffd|b|fffd|g16_Change()
    
    ' |fffd||fffd||fffd|[|fffd|J|fffd||fffd||fffd||3d0||fffd||fffd||fffd|`
    Dim shtEdtFormat    As Object   ' |fffd|`|fffd||fffd|V|fffd|[|fffd|g|fffd||752||fffd|_|fffd|C|fffd|A|fffd||fffd||fffd|O|fffd|Q|fffd||190||752||fffd|p
    
    ' Worksheet|fffd||30e|Q|fffd||190||752||fffd||fffd||fffd|s|fffd||fffd|
    Set shtEdtFormat = ThisWorkbook.Sheets(DLG_FORMAT)
    
    ' |fffd|i|fffd||fffd||fffd||fffd||fffd|Z|fffd||fffd|
    shtEdtFormat.EditBoxes(6).text = NormalizedRangeFormat(shtEdtFormat.EditBoxes(6).text, "C1")
    
    ' |fffd|Q|fffd||190||752||fffd||fffd||fffd|J|fffd||fffd||fffd||fffd||fffd||fffd|
    Set shtEdtFormat = Nothing
    
End Sub

Sub AddNames(ByRef Worksheet As Worksheet, ByVal sRange As String, ByVal sName As String)

    ' |fffd||fffd||fffd|[|fffd|J|fffd||fffd||fffd||3d0||fffd||fffd||fffd|`
    Dim i           As Long
    Dim sRangeR1C1  As String
    
    ' |fffd|A|fffd|h|fffd||fffd||fffd|X|fffd|Z|fffd|o|fffd|p|fffd||303||fffd||fffd|[|fffd|N|fffd|V|fffd|[|fffd|g
    ' |fffd|`|fffd||fffd|V|fffd|[|fffd|g|fffd||24c||fffd||fffd||fffd||fffd|Z|fffd||fffd||fffd||fffd||fffd||fffd||fffd||742||fffd||fffd||102||fffd||fffd||fffd||a347||fffd|A|fffd|A|fffd|h|fffd||fffd||fffd|X|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||64fe||fffd||142||fffd||fffd||202||fffd||fffd||fffd||fffd||182||fffd||fffd||fffd||fffd||fffd|
    ' |fffd||fffd||fffd||302||fffd||fffd||7d0|V|fffd|K|fffd||303||fffd||fffd|[|fffd|N|fffd|V|fffd|[|fffd|g|fffd||17617|p|fffd||fffd||fffd||103|A|fffd|h|fffd||fffd||fffd|X|fffd||10cc2||fffd||fffd||fffd||fffd||64fe||fffd||fffd||fffd||fffd||60a4||fffd||251||38f||fffd||fffd||fffd||fffd||fffd|
    ' 2016/5/14 |fffd|_|fffd|~|fffd|[|fffd|V|fffd|[|fffd|g|fffd||598|A|fffd||fffd||fffd||d3dc|
    ' |fffd||fffd||fffd||fffd||fffd|Z|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||182|m|fffd|f|fffd||182||fffd||fffd||fffd||fffd||fffd||fffd||6c2||fffd||fffd||10c||fffd||fffd||fffd||fffd||fffd|
    
    ' |fffd||fffd||fffd||fffd||fffd||303|Z|fffd||fffd||fffd||348||34f||fffd||fffd||243|V|fffd|[|fffd|g|fffd||fffd||fffd||fffd||fffd||702||702||fffd||102||fffd||fffd||fffd||a347||fffd||341|A|fffd|V|fffd|[|fffd|g|fffd||fffd||fffd||fffd||fffd||d3dc||fffd||fffd||fffd||fffd|
    i = InStr(1, sRange, "!")
    If i > 0 Then sRange = Mid(sRange, i + 1)
    
    ' |fffd|I|fffd||fffd||348||342||303|A|fffd|h|fffd||fffd||fffd|X|fffd|`|fffd||fffd||fffd||fffd|A1|fffd|`|fffd||fffd||fffd||fffd||fffd||fffd|R1C1|fffd|`|fffd||fffd||fffd||255||3ca||fffd||fffd||fffd||fffd||fffd|
    sRangeR1C1 = Range(sRange).Address(ReferenceStyle:=xlR1C1)
    
    ' |fffd|`|fffd||fffd|V|fffd|[|fffd|g|fffd||fffd|name|fffd|I|fffd|u|fffd|W|fffd|F|fffd|N|fffd|g|fffd||fffd||1c9||fffd||fffd||fffd||fffd||fffd|
    Worksheet.Names.Add Name:=sName, RefersToR1C1:="=" & sRangeR1C1
    ' |fffd||fffd||fffd|O|fffd|I|fffd|u|fffd|W|fffd|F|fffd|N|fffd|g|fffd||fffd||fffd|\|fffd||fffd||fffd||242||fffd||fffd||fffd|
'    Worksheet.Names(sName).Visible = False
    
NamesAddExit:

End Sub

'
' |fffd|@|fffd|\      : |fffd|e|fffd||fffd||fffd||fffd||fffd||752||fffd|
'
' |fffd||502||fffd|l    : True|fffd|i|fffd||fffd||fffd||fffd|j|fffd|^ False|fffd|i|fffd||64f||fffd|j
'
' |fffd||fffd||fffd||fffd||fffd||fffd|    : Canvassheet [Worksheet]
'
' |fffd|@|fffd|\|fffd||fffd||fffd||fffd|  : |fffd||fffd||fffd||352|l|fffd||303|t|fffd|H|fffd|[|fffd|}|fffd|b|fffd|g|fffd||fffd||fffd|`|fffd|F|fffd|b|fffd|N|fffd||fffd||fffd||fffd|
'             |fffd||64f||fffd||30f||a347||fffd|A|fffd||fffd||fffd||fffd||fffd||fffd||fffd|t|fffd|H|fffd|[|fffd|}|fffd|b|fffd|g|fffd||255||3ca||fffd||fffd||fffd||fffd||fffd|
Function SetFormat(ByRef canvasSheet As Worksheet) As Boolean

    ' |fffd||fffd||fffd|[|fffd|J|fffd||fffd||fffd||3d0||fffd||fffd||fffd|`
    Dim i                   As Long
    Dim isInputOK           As Boolean
    Dim sMessage            As String
    Dim arrayMessageItem    As Variant
    Dim arrayNameObject     As Variant
    Dim shtEdtFormat        As Object   ' |fffd|`|fffd||fffd|V|fffd|[|fffd|g|fffd||752||fffd|_|fffd|C|fffd|A|fffd||fffd||fffd|O|fffd|Q|fffd||190||752||fffd|p
    Dim myRange             As Range
    Dim taskTopRow          As Long
    Dim taskCompositionLine As Long
    Dim lDayRow             As Long
    
    ' Worksheet|fffd||30e|Q|fffd||190||752||fffd||fffd||fffd|s|fffd||fffd|
    Set shtEdtFormat = ThisWorkbook.Sheets(DLG_FORMAT)
    
    ' |fffd||fffd||fffd|b|fffd|Z|fffd|[|fffd|W|fffd||fffd||fffd||682||fffd|z|fffd||fffd||24a|i|fffd|[|fffd||fffd||fffd||fffd|
    arrayMessageItem = _
        Split("|fffd|v|fffd||fffd||fffd|W|fffd|F|fffd|N|fffd|g|fffd||fffd||fffd||fffd|,|fffd||fffd||210||fffd||fffd|s|fffd||348||fffd|,|fffd||64ea||fffd|^|fffd|X|fffd|N|fffd|s|fffd||348||fffd|,|fffd|J|fffd|n|fffd|\|fffd||fffd||fffd|,|fffd|I|fffd||fffd||fffd|\|fffd||fffd||fffd|,|fffd|i|fffd||fffd||fffd||fffd|", ",")
    ' Name|fffd|I|fffd|u|fffd|W|fffd|F|fffd|N|fffd|g|fffd||fffd||fffd||fffd|z|fffd||fffd||24a|i|fffd|[|fffd||fffd||fffd||fffd|
    arrayNameObject = _
        Split(NM_CL & "," & NM_PL & "," & NM_TT & "," & NM_SD & "," & NM_ED & "," & NM_PR, ",")
    
    ' |fffd||fffd||fffd||fffd||fffd||343|`|fffd|F|fffd|b|fffd|N
    isInputOK = True
    sMessage = ""
    For i = 0 To UBound(arrayMessageItem)
        If shtEdtFormat.EditBoxes(i + 1).text = "" Then
            sMessage = sMessage & arrayMessageItem(i) & "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||342||142||fffd||fffd|B" & vbCrLf
            isInputOK = False
        End If
    Next
    
    ' |fffd||95||28c|`|fffd||fffd||fffd|`|fffd|F|fffd|b|fffd|N
    '' |fffd|v|fffd||fffd||fffd|W|fffd|F|fffd|N|fffd|g|fffd||fffd||fffd||502||253||fffd||fffd|t|fffd||20a|O|fffd||fffd||fffd||702||702||fffd||90a9||fffd|H
    If shtEdtFormat.EditBoxes(1).text <> "" Then
        For Each myRange In canvasSheet.Range(shtEdtFormat.EditBoxes(1).text)
            If Not IsDate(myRange) Then
                sMessage = sMessage & arrayMessageItem(0) & "|fffd||310||752||fffd||348||342||253||fffd||fffd|t|fffd|iyyyy/mm/dd|fffd|j|fffd||20a|O|fffd||312|l|fffd||fffd||fffd||702||702||fffd||102||fffd||fffd||702||fffd||fffd|B" & vbCrLf
                isInputOK = False
                Exit For
            End If
        Next
    End If
        
    '' |fffd|J|fffd|n|fffd|\|fffd||fffd||fffd||fffd||fffd||fffd||64ea||fffd|^|fffd|X|fffd|N|fffd||348||353||fffd||fffd||fffd||fffd|H
    If shtEdtFormat.EditBoxes(3).text <> "" And shtEdtFormat.EditBoxes(4).text <> "" Then
        taskTopRow = canvasSheet.Range(shtEdtFormat.EditBoxes(3).text).Row
        taskCompositionLine = canvasSheet.Range(shtEdtFormat.EditBoxes(3).text).Rows.Count - 1
        lDayRow = canvasSheet.Range(shtEdtFormat.EditBoxes(4).text).Row
        If lDayRow < taskTopRow Or lDayRow > (taskTopRow + taskCompositionLine) Then
            sMessage = sMessage & arrayMessageItem(3) & "|fffd||30d|s|fffd||fffd||fffd||64ea||fffd|^|fffd|X|fffd|N|fffd|s|fffd||314||348||353||fffd||fffd||142||342||fffd||fffd||fffd||702||fffd||fffd||fffd|B" & vbCrLf
            isInputOK = False
        End If
    End If
    
    '' |fffd|I|fffd||fffd||fffd|\|fffd||fffd||fffd||fffd||fffd||fffd||64ea||fffd|^|fffd|X|fffd|N|fffd||348||353||fffd||fffd||fffd||fffd|H
    If shtEdtFormat.EditBoxes(3).text <> "" And shtEdtFormat.EditBoxes(5).text <> "" Then
        taskTopRow = canvasSheet.Range(shtEdtFormat.EditBoxes(3).text).Row
        taskCompositionLine = canvasSheet.Range(shtEdtFormat.EditBoxes(3).text).Rows.Count - 1
        lDayRow = canvasSheet.Range(shtEdtFormat.EditBoxes(5).text).Row
        If lDayRow < taskTopRow Or lDayRow > (taskTopRow + taskCompositionLine) Then
            sMessage = sMessage & arrayMessageItem(4) & "|fffd||30d|s|fffd||fffd||fffd||64ea||fffd|^|fffd|X|fffd|N|fffd|s|fffd||314||348||353||fffd||fffd||142||342||fffd||fffd||fffd||702||fffd||fffd||fffd|B" & vbCrLf
            isInputOK = False
        End If
    End If
    
    '' |fffd|i|fffd||fffd||fffd||fffd||fffd||fffd||fffd||64ea||fffd|^|fffd|X|fffd|N|fffd||348||353||fffd||fffd||fffd||fffd|H
    If shtEdtFormat.EditBoxes(3).text <> "" And shtEdtFormat.EditBoxes(6).text <> "" Then
        taskTopRow = canvasSheet.Range(shtEdtFormat.EditBoxes(3).text).Row
        taskCompositionLine = canvasSheet.Range(shtEdtFormat.EditBoxes(3).text).Rows.Count - 1
        lDayRow = canvasSheet.Range(shtEdtFormat.EditBoxes(6).text).Row
        If lDayRow < taskTopRow Or lDayRow > (taskTopRow + taskCompositionLine) Then
            sMessage = sMessage & arrayMessageItem(5) & "|fffd||30d|s|fffd||fffd||fffd||64ea||fffd|^|fffd|X|fffd|N|fffd|s|fffd||314||348||353||fffd||fffd||142||342||fffd||fffd||fffd||702||fffd||fffd||fffd|B" & vbCrLf
            isInputOK = False
        End If
    End If
    
    ' |fffd||752||fffd|l|fffd||316||fffd||fffd||752||80aa||fffd||fffd||fffd||fffd||a347||fffd||343|G|fffd||fffd||fffd|[
    If isInputOK Then
        ' |fffd|`|fffd||fffd|V|fffd|[|fffd|g|fffd||fffd|Name|fffd|I|fffd|u|fffd|W|fffd|F|fffd|N|fffd|g|fffd||fffd|o|fffd|^|fffd||fffd||fffd||fffd|
        For i = 0 To UBound(arrayNameObject)
            Call AddNames(canvasSheet, shtEdtFormat.EditBoxes(i + 1).text, arrayNameObject(i))
        Next
    Else
        ' |fffd|G|fffd||fffd||fffd|[|fffd||fffd||fffd|b|fffd|Z|fffd|[|fffd|W|fffd|o|fffd||fffd|
        Call OutMessage(sMessage, vbOKOnly + vbExclamation, "|fffd|`|fffd||fffd|V|fffd|[|fffd|g|fffd||752||fffd|")
        
    End If
    
SetFormatExit:

    ' |fffd|Q|fffd||190||752||fffd||fffd||fffd|J|fffd||fffd||fffd||fffd||fffd||fffd|
    Set shtEdtFormat = Nothing
    
    ' |fffd|`|fffd|F|fffd|b|fffd|N|fffd||fffd||fffd||282||fffd||502||fffd|
    SetFormat = isInputOK
                
End Function

'
' |fffd|@|fffd|\      : |fffd||fffd||210||fffd||fffd||30f||fffd||fffd||fffd||fffd||752||fffd|OK
'
' |fffd||502||fffd|l    : |fffd||202||fffd|
'
' |fffd||fffd||fffd||fffd||fffd||fffd|    : |fffd||202||fffd|
'
' |fffd|@|fffd|\|fffd||fffd||fffd||fffd|  : |fffd||fffd||210||fffd||fffd||30f||fffd||fffd||fffd||fffd||752||fffd|OK|fffd|{|fffd|^|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||a0bd||fffd||a347||fffd|A|fffd||48f|W|fffd|t|fffd||fffd||fffd|O|fffd||fffd||fffd|I|fffd||fffd||fffd||242||fffd||fffd||fffd|
'
Sub |fffd|{|fffd|^|fffd||fffd|2_Click()
    
    isEditCheckOK = True

End Sub

'
' |fffd|@|fffd|\      : |fffd||fffd||210||fffd||fffd||30f||fffd||fffd||fffd||fffd||752||fffd|L|fffd||fffd||fffd||fffd||fffd|Z|fffd||fffd|
'
' |fffd||502||fffd|l    : |fffd||202||fffd|
'
' |fffd||fffd||fffd||fffd||fffd||fffd|    : |fffd||202||fffd|
'
' |fffd|@|fffd|\|fffd||fffd||fffd||fffd|  : |fffd||fffd||210||fffd||fffd||30f||fffd||fffd||fffd||fffd||752||fffd|L|fffd||fffd||fffd||fffd||fffd|Z|fffd||fffd||fffd|{|fffd|^|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||a0bd||fffd||a347||fffd|A|fffd||48f|W|fffd|t|fffd||fffd||fffd|O|fffd||fffd||fffd|I|fffd|t|fffd||242||fffd||fffd||fffd|
'
Sub |fffd|{|fffd|^|fffd||fffd|3_Click()
    
    isEditCheckOK = False
    
End Sub

'
' |fffd|@|fffd|\      : |fffd|G|fffd|f|fffd|B|fffd|b|fffd|g|fffd|{|fffd|b|fffd|N|fffd|X|fffd|N|fffd||fffd||fffd|A
'
' |fffd||502||fffd|l    : |fffd||202||fffd|
'
' |fffd||fffd||fffd||fffd||fffd||fffd|    : |fffd||202||fffd|
'
' |fffd|@|fffd|\|fffd||fffd||fffd||fffd|  : |fffd|G|fffd|f|fffd|B|fffd|b|fffd|g|fffd|{|fffd|b|fffd|N|fffd|X|fffd||313||fffd||fffd|e|fffd||fffd||fffd|N|fffd||fffd||fffd|A|fffd||fffd||fffd||fffd|
'
Sub |fffd|{|fffd|^|fffd||fffd|27_Click()
    Dim i   As Long
    
    For i = 1 To 6
        ThisWorkbook.Sheets(DLG_FORMAT).EditBoxes(i).text = ""
    Next
End Sub



Attribute VB_Name = "modCommon"
Option Explicit
Option Private Module

Private Type tCANVAS
    prj_period          As Range    ' |fffd|v|fffd||fffd||fffd|W|fffd|F|fffd|N|fffd|g|fffd||fffd||fffd||fffd|
    pl_range            As Range    ' |fffd||fffd||210||fffd||fffd|`|fffd||fffd||348||fffd|
    pl_history_range    As Range    ' |fffd||fffd||fffd||fffd|`|fffd||fffd||348||fffd|
    top_task            As Range    ' |fffd||64ea||fffd|^|fffd|X|fffd|N
    top_startdate       As Range    ' |fffd||64ea||fffd|^|fffd|X|fffd|N|fffd||30a|J|fffd|n|fffd||fffd|
    top_enddate         As Range    ' |fffd||64ea||fffd|^|fffd|X|fffd|N|fffd||30f|I|fffd||fffd||fffd||fffd|
    progress_ratio      As Range    ' |fffd||64ea||fffd|^|fffd|X|fffd|N|fffd||310|i|fffd||fffd||fffd||fffd|
End Type

' |fffd|O|fffd||fffd||fffd|[|fffd|o|fffd||fffd||fffd||3d0||fffd|
Public isEditCheckOK        As Boolean                  ' |fffd||fffd||210||fffd||fffd||fffd||fffd||fffd||fffd||752||fffd|`|fffd|F|fffd|b|fffd|N|fffd|t|fffd||fffd||fffd|O
Public isSheetUpdate        As Boolean                  ' |fffd|e|fffd||fffd||fffd|`|fffd||fffd||fffd||3cd|X|fffd|L|fffd||fffd||fffd|t|fffd||fffd||fffd|O|fffd|i|fffd||3cd|X|fffd|L|fffd|Ftrue |fffd||3cd|X|fffd||fffd||fffd|Ffalse|fffd|j
Public gReportDate          As String                   ' |fffd||4d413||fffd|
Public coUserHoliday        As Collection
Public gsKindPL             As String                   ' |fffd||4d413||fffd||fffd||308||fffd||210||fffd||fffd|FNEW / |fffd||7cb||fffd||fffd||fffd||fffd||308||fffd||210||fffd||fffd|FOLD

' |fffd||8414||fffd||fffd|`
Public Const AP_TITLE = "|fffd||fffd||210||fffd| "                                       ' |fffd|A|fffd|v|fffd||fffd||fffd||303|^|fffd|C|fffd|g|fffd||fffd|
Public Const AP_VERSION = "5.0.0"                                       ' |fffd|A|fffd|h|fffd|C|fffd||fffd||fffd||303|o|fffd|[|fffd|W|fffd||fffd||fffd||fffd|
Public Const SHT_DATALIST = "ProgressLine_datalist"                     ' |fffd|R|fffd||fffd||fffd|g|fffd||fffd||fffd|[|fffd||fffd||fffd|l|fffd||752||fffd|V|fffd|[|fffd|g|fffd||fffd|
Public Const DLG_FORMAT = "dlgEdtFormat"                                ' |fffd|`|fffd||fffd|V|fffd|[|fffd|g|fffd||30f||fffd||fffd||fffd||fffd||752||fffd|V|fffd|[|fffd|g|fffd||fffd|
Public Const NM_CL = "_plCalendar"                                      ' |fffd||fffd||fffd|O|fffd|I|fffd|u|fffd|W|fffd|F|fffd|N|fffd|g|fffd|o|fffd|^|fffd||fffd|-|fffd|v|fffd||fffd||fffd|W|fffd|F|fffd|N|fffd|g|fffd||fffd||fffd||fffd|
Public Const NM_PL = "_plProgressLine"                                  ' |fffd||fffd||fffd|O|fffd|I|fffd|u|fffd|W|fffd|F|fffd|N|fffd|g|fffd|o|fffd|^|fffd||fffd|-|fffd||fffd||210||fffd||fffd|`|fffd||fffd||348||fffd|
Public Const NM_SD = "_plStartDate"                                     ' |fffd||fffd||fffd|O|fffd|I|fffd|u|fffd|W|fffd|F|fffd|N|fffd|g|fffd|o|fffd|^|fffd||fffd|-|fffd||64ea||fffd|^|fffd|X|fffd|N|fffd||30a|J|fffd|n|fffd||fffd|
Public Const NM_ED = "_plEndDate"                                       ' |fffd||fffd||fffd|O|fffd|I|fffd|u|fffd|W|fffd|F|fffd|N|fffd|g|fffd|o|fffd|^|fffd||fffd|-|fffd||64ea||fffd|^|fffd|X|fffd|N|fffd||30f|I|fffd||fffd||fffd||fffd|
Public Const NM_PR = "_plProgressRatio"                                 ' |fffd||fffd||fffd|O|fffd|I|fffd|u|fffd|W|fffd|F|fffd|N|fffd|g|fffd|o|fffd|^|fffd||fffd|-|fffd||64ea||fffd|^|fffd|X|fffd|N|fffd||310|i|fffd||fffd||fffd||fffd|
Public Const NM_TT = "_plTopTask"                                       ' |fffd||fffd||fffd|O|fffd|I|fffd|u|fffd|W|fffd|F|fffd|N|fffd|g|fffd|o|fffd|^|fffd||fffd|-|fffd||64ea||fffd|^|fffd|X|fffd|N|fffd||314||348||fffd|
Public Const NM_SL = "_PLSkipLine1"                                     ' |fffd||fffd||fffd|O|fffd|I|fffd|u|fffd|W|fffd|F|fffd|N|fffd|g|fffd|o|fffd|^|fffd||fffd|-|fffd|R|fffd||fffd||fffd||fffd||fffd|g|fffd|s
Public Const NM_HT = "_PLHistory"                                       ' |fffd||fffd||fffd|O|fffd|I|fffd|u|fffd|W|fffd|F|fffd|N|fffd|g|fffd|o|fffd|^|fffd||fffd|-|fffd||fffd||210||fffd||fffd||fffd||fffd||fffd||fffd||1d7||fffd|
Public Const DATE_FORM = "yyyy/mm/dd"                                   ' |fffd||fffd||fffd|t|fffd|^|fffd||30f||fffd||fffd||fffd|
Public Const LINE_WIDTH_POINT = 0.25                                    ' |fffd||fffd||210||fffd||fffd||311||fffd||fffd||fffd||fffd|i|fffd|||fffd|C|fffd||fffd||fffd|g|fffd|j
Public Const RNG_REPORT = "R2"                                          ' |fffd||4d413||fffd||fffd||308||fffd||210||fffd||fffd||d3dc||fffd||14ed2||80b7||fffd||fffd|l|fffd||30a|i|fffd|[|fffd|Z|fffd||fffd|
Public Const RNG_HOLIDAY = "R3"                                         ' |fffd||7cb||fffd||fffd||308||fffd||210||fffd||fffd||d3dc||fffd||14ed2||80b7||fffd||fffd|l|fffd||30a|i|fffd|[|fffd|Z|fffd||fffd|
Public Const RNG_REFRESH = "R4"                                         ' |fffd||fffd||210||fffd||fffd|`|fffd||fffd||198|A|fffd|g|fffd||fffd||fffd||103|^|fffd|X|fffd|N|fffd||fffd||fffd||fffd||fffd|N|fffd||115|`|fffd||fffd||14ed2||80b7||fffd||fffd|l|fffd||30a|i|fffd|[|fffd|Z|fffd||fffd|
Public Const STYLE_REPO = "Report"                                      ' |fffd||4d413||fffd||fffd|pShape|fffd|I|fffd|u|fffd|W|fffd|F|fffd|N|fffd|g|fffd||316||fffd||fffd|O
Public Const STYLE_HIST = "History"                                     ' |fffd||fffd||fffd||fffd|pShape|fffd|I|fffd|u|fffd|W|fffd|F|fffd|N|fffd|g|fffd||316||fffd||fffd|O

Public Const ERR_REF_ERROR = "|fffd||24e|Q|fffd||183|G|fffd||fffd||fffd|[|fffd||fffd||fffd||fffd||fffd||fffd||702||fffd||fffd|B"                 ' |fffd|Q|fffd||183|G|fffd||fffd||fffd|[
Public Const WNG_CANVAS_ERROR = "|fffd|`|fffd||fffd|V|fffd|[|fffd|g|fffd||310||752||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||102||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|B"  ' |fffd|`|fffd||fffd|V|fffd|[|fffd|g|fffd||752||8329||fffd||fffd||fffd||fffd|
Public Const WNG_COMMENT_ERROR = "|fffd|R|fffd||fffd||fffd||fffd||fffd|g|fffd|s|fffd||310||752||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||102||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|B" ' |fffd|R|fffd||fffd||fffd||fffd||fffd|g|fffd|s|fffd||752||8329||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
Public Const ERR_CANVAS_STABLISHED = "|fffd|`|fffd||fffd|V|fffd|[|fffd|g|fffd||fffd||fffd||752||80b3||fffd||fffd||102||fffd||fffd||702||fffd||fffd||fffd|B" ' |fffd|`|fffd||fffd|V|fffd|[|fffd|g|fffd||fffd||fffd||752||fffd|

Public Const PL_NEW = "NEW"
Public Const PL_OLD = "OLD"
Public Const RECENT_FILE_MAX = 10
Public Const GET_HISTORY_CELL = "P2"

' |fffd||fffd||493||fffd||fffd||fffd||fffd|J|fffd||fffd||fffd||fffd||fffd|_|fffd|[|fffd|p|fffd||fffd||fffd|t|fffd|F
Public Const ON_FORE = &H404040     ' |fffd||fffd||fffd||fffd|
Public Const ON_BACK = &HFFFFFF     ' |fffd||493||fffd||fffd||fffd|
Public Const OFF_FORE = &HC0&       ' |fffd|x|fffd||fffd|
Public Const OFF_BACK = &HC0C0C0    ' |fffd||fffd||493||fffd||fffd||fffd|
Public Const USER_BACK = &HC0C0FF   ' |fffd||fffd||fffd|[|fffd|U|fffd||752||fffd|

' |fffd|F|fffd||8414|-|fffd|T
Public Const BACKCOLOR_WEEK_ON = &HC0&         ' |fffd|x|fffd||fffd|
Public Const BACKCOLOR_WEEK_OFF = &H808080     ' |fffd||fffd||fffd||fffd|

' |fffd||fffd||fffd|W|fffd||fffd||fffd|[|fffd||fffd||fffd||3d0||fffd|
Dim save_calc   As Variant

Const TBL_DASHSTYLE = "|fffd||fffd||fffd||fffd|,|fffd|_|fffd||fffd||fffd|i|fffd||6c1|j,|fffd|_|fffd||fffd||fffd|i|fffd|p|fffd|j,|fffd|j|fffd||fffd|,|fffd||fffd|_|fffd||fffd||fffd||fffd|,|fffd||fffd||fffd|j|fffd||fffd|,|fffd||fffd||fffd||fffd||fffd||fffd|,|fffd||fffd||fffd||fffd|_|fffd||fffd||fffd||fffd|"
Const TBL_DASHSTYLE_CONST = "1,11,10,4,5,7,8,9"
Const TBL_ARROWSTYLE = "|fffd||fffd||fffd||202||fffd|,|fffd||fffd||fffd|,|fffd|J|fffd||fffd||fffd||fffd||fffd||fffd||fffd|,|fffd|s|fffd||fffd||fffd||fffd||fffd|,|fffd||402||fffd||fffd|`|fffd||fffd||fffd|,|fffd|~|fffd|`|fffd||fffd||fffd|"
Const TBL_BEGINARROWSTYLE = "|fffd||fffd||fffd||202||fffd|,|fffd||402||fffd||fffd|`|fffd||fffd||fffd|,|fffd|~|fffd|`|fffd||fffd||fffd|"
Const TBL_BEGINARROWSTYLE_CONST = "1,5,6"

Sub GetScreenTip(control As IRibbonControl, ByRef screentip)

    Dim i   As Long
    
    ' |fffd||fffd||fffd|{|fffd||fffd||fffd||fffd||fffd|j|fffd||fffd||fffd|[|fffd||24a|Y|fffd||fffd||fffd||fffd||fffd||fffd|X|fffd|N|fffd||fffd||fffd|[|fffd||fffd||fffd|`|fffd|b|fffd|v|fffd||fffd||fffd||fffd||fffd|[|fffd|N|fffd|V|fffd|[|fffd|g|fffd|uscreentip|fffd|v|fffd||fffd||fffd||731f||fffd||fffd||fffd||fffd||fffd||fffd|
    With ThisWorkbook.Worksheets("screentip")
        i = 1
        screentip = ""
        Do Until .Cells(i, 2) = ""
            If InStr(1, .Cells(i, 1), control.ID) > 0 Then
                screentip = .Cells(i, 2)
                Exit Do
            End If
            i = i + 1
        Loop
    End With

End Sub

'
' |fffd|@|fffd|\      : |fffd|A|fffd|C|fffd|e|fffd||fffd||fffd|I|fffd||fffd||fffd|`|fffd|F|fffd|b|fffd|N
'
' |fffd||502||fffd|l    : |fffd|I|fffd||fffd|L|fffd|itrue|fffd|j|fffd|^|fffd|I|fffd||16cc1|ifalse|fffd|j
'
' |fffd||fffd||fffd||fffd||fffd||fffd|    : DialogSheet|fffd||fffd||fffd|istring|fffd|j
'
' |fffd|@|fffd|\|fffd||fffd||fffd||fffd|  : |fffd||fffd||fffd||fffd||fffd||fffd||fffd||157|^|fffd||fffd||fffd||fffd||a0bd||fffd|_|fffd|C|fffd|A|fffd||fffd||fffd|O|fffd|V|fffd|[|fffd|g|fffd||251||fffd||fffd||742||fffd||fffd||fffd|
'             |fffd||fffd||fffd|X|fffd|g|fffd|{|fffd|b|fffd|N|fffd|X|fffd||303|A|fffd|C|fffd|e|fffd||fffd||fffd||fffd||fffd|I|fffd||fffd||fffd||fffd||fffd||fffd||102||fffd||fffd||90a9||fffd|`|fffd|F|fffd|b|fffd|N|fffd||fffd||fffd||fffd|
'
Function CheckItemSelect(ByVal DialogSheet As String) As Boolean
    
    ' |fffd||fffd||fffd|[|fffd|J|fffd||fffd||fffd||3d0||fffd||fffd||fffd|`
    Dim i               As Long
    Dim isListSelect    As Boolean
    
    ' |fffd||fffd||fffd|X|fffd|g|fffd||fffd||fffd|I|fffd||fffd||fffd||fffd||fffd||fffd||102||fffd||fffd||90a9||fffd|`|fffd|F|fffd|b|fffd|N|fffd||fffd||fffd||101|A|fffd|I|fffd||fffd||fffd||fffd||fffd||fffd||102||fffd||fffd||fffd||fffd|True|fffd||fffd||502||fffd|
    isListSelect = False
    With ThisWorkbook.Sheets(DialogSheet)
        For i = 1 To .ListBoxes(1).listCount
            If .ListBoxes(1).Selected(i) Then isListSelect = True: Exit For
        Next
    End With

    ' |fffd|`|fffd|F|fffd|b|fffd|N|fffd||fffd||fffd||282||fffd||502||fffd|
    CheckItemSelect = isListSelect
End Function

'
' |fffd|@|fffd|\      : |fffd|A|fffd|C|fffd|e|fffd||fffd||fffd||fffd||fffd||743|`|fffd|F|fffd|b|fffd|N
'
' |fffd||502||fffd|l    : |fffd||fffd||fffd||757|L|fffd|itrue|fffd|j|fffd|^|fffd||fffd||fffd||756||fffd||fffd|ifalse|fffd|j
'
' |fffd||fffd||fffd||fffd||fffd||fffd|    : DialogSheet|fffd||fffd||fffd|istring|fffd|j
'
' |fffd|@|fffd|\|fffd||fffd||fffd||fffd|  : |fffd||fffd||fffd||fffd||fffd||fffd||fffd||157|^|fffd||fffd||fffd||fffd||a0bd||fffd|_|fffd|C|fffd|A|fffd||fffd||fffd|O|fffd|V|fffd|[|fffd|g|fffd||251||fffd||fffd||742||fffd||fffd||fffd|
'             |fffd||fffd||fffd|X|fffd|g|fffd|{|fffd|b|fffd|N|fffd|X|fffd||303|A|fffd|C|fffd|e|fffd||fffd||fffd||fffd||fffd||757|L|fffd||fffd||fffd||fffd||fffd|`|fffd|F|fffd|b|fffd|N|fffd||fffd||fffd||fffd|
'
Function CheckItemExist(ByVal DialogSheet As String) As Boolean
    
    ' |fffd||fffd||fffd|X|fffd|g|fffd||243|R|fffd||fffd||fffd||fffd||fffd|g|fffd|s|fffd||fffd||fffd||fffd||fffd||742||fffd||fffd||102||fffd||fffd||fffd||fffd|True|fffd||fffd||502||fffd|
    With ThisWorkbook.Sheets(DialogSheet).ListBoxes(1)
        If .listCount > 0 Then
            CheckItemExist = True
        Else
            CheckItemExist = False
        End If
    End With
    
End Function

'
' |fffd|@|fffd|\      : |fffd||fffd||fffd|b|fffd|Z|fffd|[|fffd|W|fffd|o|fffd||fffd|
'
' |fffd||502||fffd|l    : long
'
' |fffd||fffd||fffd||fffd||fffd||fffd||fffd|P  : |fffd||fffd||fffd|b|fffd|Z|fffd|[|fffd|W
' |fffd||fffd||fffd||fffd||fffd||fffd||fffd|Q  : |fffd|{|fffd|^|fffd||fffd|
' |fffd||fffd||fffd||fffd||fffd||fffd||fffd|R  : |fffd|T|fffd|u|fffd|^|fffd|C|fffd|g|fffd||fffd|
'
' |fffd|@|fffd|\|fffd||fffd||fffd||fffd|  : |fffd||fffd||fffd||fffd||fffd||fffd||fffd||157|^|fffd||fffd||fffd||fffd||a0bd||fffd||fffd||fffd|b|fffd|Z|fffd|[|fffd|W|fffd||fffd||fffd|o|fffd||342||fffd||fffd||fffd|
'
Public Function OutMessage(ByVal message As String, Optional ByVal buttons As Long, Optional ByVal subTitle As String) As Long
            
    ' |fffd||fffd||fffd||fffd||fffd||153|n|fffd||fffd||fffd||a0bd||fffd||fffd||fffd|b|fffd|Z|fffd|[|fffd|W|fffd||fffd||fffd|o|fffd||342||fffd||fffd||fffd|B
    If subTitle = "" Then
        OutMessage = MsgBox(message, buttons, AP_TITLE & AP_VERSION)
    Else
        OutMessage = MsgBox(message, buttons, AP_TITLE & AP_VERSION & " - " & subTitle)
    End If
    
End Function

'
' |fffd|@|fffd|\      : |fffd||fffd||fffd||fffd||fffd||308||fffd||210||fffd||fffd||fffd||fffd||d3dc||fffd||fffd||fffd||fffd|
'
' |fffd||502||fffd|l    : |fffd||202||fffd|
'
' |fffd||fffd||fffd||fffd||fffd||fffd||fffd|P  : |fffd|`|fffd||fffd|V|fffd|[|fffd|g
' |fffd||fffd||fffd||fffd||fffd||fffd||fffd|Q  : ShapeName
'
' |fffd|@|fffd|\|fffd||fffd||fffd||fffd|  : |fffd||fffd||fffd||fffd||fffd||fffd||fffd||157|^|fffd||fffd||fffd||fffd||a0bd|ShapeName|fffd||188||fffd|v|fffd||fffd||fffd||fffd|ShapeObject|fffd||fffd||fffd||d3dc||fffd||fffd||fffd||fffd|
'
Public Sub DeleteLine(ByRef sheetName As Worksheet, ByVal lineName As String)

    Dim targetShape As Object
    
    ' |fffd||fffd||fffd||fffd||fffd||157|^|fffd||fffd||fffd||fffd||a0bd||fffd||fffd||fffd|O|fffd||fffd|ShapeObject|fffd||fffd||fffd||fffd||fffd||5c2||10d||d3dc||fffd||fffd||fffd||fffd|
    For Each targetShape In sheetName.Shapes
        If targetShape.Name = lineName Then targetShape.Delete
        DoEvents
    Next

End Sub

Function DashStyleConstantToText(ByVal constant As Long) As String

    ' |fffd||fffd||fffd||30e||fffd||783|e|fffd|[|fffd|u|fffd||fffd||fffd||fffd|z|fffd||fffd||24a|i|fffd|[|fffd||fffd||fffd||fffd|
    Dim array_dashstyle As Variant
    array_dashstyle = Split(TBL_DASHSTYLE, ",")
    
    ' EXCEL|fffd||30f||fffd||fffd||fffd||fffd||150||752||80b7||fffd||fffd|l|fffd||fffd|MS|fffd|W|fffd||fffd||fffd||312||fffd|`|fffd||152|l|fffd||fffd||fffd||642||202||90bd||fffd||7d5||3ca||fffd||fffd|[|fffd|u|fffd||fffd||fffd|s|fffd||fffd|
    Dim array_const     As Variant
    array_const = Split(TBL_DASHSTYLE_CONST, ",")
    
    ' |fffd||fffd||fffd||fffd||fffd||183|e|fffd|[|fffd|u|fffd||fffd||fffd||313||2cd||fffd||fffd||fffd||fffd||242||fffd||fffd|A|fffd||fffd||fffd|o|fffd||fffd||fffd||fffd||fffd||292|u|fffd||fffd||fffd||64fe||fffd||fffd||fffd||fffd|
    Dim i           As Long
    i = GetTableIndex(array_const, constant, 1)
    
    ' |fffd||fffd||fffd||30e||fffd||783|e|fffd|[|fffd|u|fffd||fffd||fffd|i|fffd|l|fffd|j|fffd||fffd||502||fffd|
    DashStyleConstantToText = array_dashstyle(i)

End Function

Function DashStyleTextToConstant(ByVal val As String) As Long

    ' |fffd||fffd||fffd||30e||fffd||783|e|fffd|[|fffd|u|fffd||fffd||fffd|i|fffd||fffd||fffd|{|fffd||fffd|j|fffd||fffd|z|fffd||fffd||24a|i|fffd|[|fffd||fffd||fffd||fffd|
    Dim array_dashstyle As Variant
    array_dashstyle = Split(TBL_DASHSTYLE, ",")
    
    ' EXCEL|fffd||30f||fffd||fffd||fffd||fffd||150||752||80b7||fffd||fffd|l|fffd||fffd|MS|fffd|W|fffd||fffd||fffd||312||fffd|`|fffd||152|l|fffd||fffd||fffd||642||202||90bd||fffd||7d5||3ca||fffd||fffd|[|fffd|u|fffd||fffd||fffd|s|fffd||fffd|
    Dim array_const     As Variant
    array_const = Split(TBL_DASHSTYLE_CONST, ",")
    
    ' |fffd||fffd||fffd||fffd||fffd||183|e|fffd|[|fffd|u|fffd||fffd||fffd||313||2cd||fffd||fffd||fffd||fffd||242||fffd||fffd|A|fffd||fffd||fffd|o|fffd||fffd||fffd||fffd||fffd||292|u|fffd||fffd||fffd||64fe||fffd||fffd||fffd||fffd|
    Dim i           As Long
    i = GetTableIndex(array_dashstyle, val)
    
    ' |fffd||fffd||fffd||30e||fffd||783|e|fffd|[|fffd|u|fffd||fffd||fffd|i|fffd|l|fffd|j|fffd||fffd||502||fffd|
    DashStyleTextToConstant = array_const(i)

End Function

Function DashStyleConstantToNumber(ByVal constant As Long) As Long

    ' EXCEL|fffd||30f||fffd||fffd||fffd||fffd||150||752||80b7||fffd||fffd|l|fffd||fffd|MS|fffd|W|fffd||fffd||fffd||312||fffd|`|fffd||152|l|fffd||fffd||fffd||642||202||90bd||fffd||7d5||3ca||fffd||fffd|[|fffd|u|fffd||fffd||fffd|s|fffd||fffd|
    Dim array_const     As Variant
    array_const = Split(TBL_DASHSTYLE_CONST, ",")
    
    ' |fffd||fffd||fffd||fffd||fffd||183|e|fffd|[|fffd|u|fffd||fffd||fffd||313||2cd||fffd||fffd||fffd||fffd||242||fffd||fffd|A|fffd||fffd||fffd|o|fffd||fffd||fffd||fffd||fffd||292|u|fffd||fffd||fffd||64fe||fffd||fffd||fffd||fffd|
    Dim i           As Long
    i = GetTableIndex(array_const, constant, 1)
    
    ' |fffd||fffd||fffd||30e||fffd||783|e|fffd|[|fffd|u|fffd||fffd||fffd|i|fffd|l|fffd|j|fffd||fffd||502||fffd|
    DashStyleConstantToNumber = i + 1

End Function

Function BeginArrowheadConstantToNumber(ByVal constant As String) As Long

    ' |fffd||fffd|[|fffd||30e||fffd||782||312||8414||fffd||fffd|z|fffd||fffd||24a|i|fffd|[|fffd||fffd||fffd||fffd|
    Dim array_const As Variant
    array_const = Split(TBL_BEGINARROWSTYLE_CONST, ",")
    
    ' |fffd||fffd||fffd||fffd||fffd||183|e|fffd|[|fffd|u|fffd||fffd||fffd||313||2cd||fffd||fffd||fffd||fffd||242||fffd||fffd|A|fffd||fffd||fffd|o|fffd||fffd||fffd||fffd||fffd||292|u|fffd||fffd||fffd||64fe||fffd||fffd||fffd||fffd|
    Dim i           As Long
    i = GetTableIndex(array_const, constant)
    
    ' |fffd||fffd||fffd||30e||fffd||783|e|fffd|[|fffd|u|fffd||fffd||fffd|i|fffd|l|fffd|j|fffd||fffd||502||fffd|
    BeginArrowheadConstantToNumber = i + 1

End Function

Function BeginArrowheadTextToConstant(ByVal val As String) As Long

    ' |fffd||fffd|[|fffd||30e||fffd||782||303|e|fffd|L|fffd|X|fffd|g|fffd|i|fffd||fffd||fffd|O|fffd|j|fffd||fffd|z|fffd||fffd||24a|i|fffd|[|fffd||fffd||fffd||fffd|
    Dim array_text  As Variant
    array_text = Split(TBL_BEGINARROWSTYLE, ",")
    
    ' |fffd||fffd|[|fffd||30e||fffd||782||312||8414||fffd||fffd|z|fffd||fffd||24a|i|fffd|[|fffd||fffd||fffd||fffd|
    Dim array_const As Variant
    array_const = Split(TBL_BEGINARROWSTYLE_CONST, ",")
    
    ' |fffd||fffd||fffd||fffd||fffd||183|e|fffd|[|fffd|u|fffd||fffd||fffd||313||2cd||fffd||fffd||fffd||fffd||242||fffd||fffd|A|fffd||fffd||fffd|o|fffd||fffd||fffd||fffd||fffd||292|u|fffd||fffd||fffd||64fe||fffd||fffd||fffd||fffd|
    Dim i           As Long
    i = GetTableIndex(array_text, val)
    
    ' |fffd||fffd||fffd||30e||fffd||783|e|fffd|[|fffd|u|fffd||fffd||fffd|i|fffd|l|fffd|j|fffd||fffd||502||fffd|
    BeginArrowheadTextToConstant = array_const(i)

End Function

Function EndArrowheadConstantToNumber(ByVal constant As Long) As Long

    ' |fffd||fffd|[|fffd||30e||fffd||783|e|fffd|[|fffd|u|fffd||fffd||fffd|i|fffd||fffd||fffd|{|fffd||fffd|j|fffd||fffd|z|fffd||fffd||24a|i|fffd|[|fffd||fffd||fffd||fffd|
    Dim array_const     As Variant
    array_const = Split(TBL_DASHSTYLE_CONST, ",")
    
    ' |fffd||fffd||fffd||fffd||fffd||183|e|fffd|[|fffd|u|fffd||fffd||fffd||313||2cd||fffd||fffd||fffd||fffd||242||fffd||fffd|A|fffd||fffd||fffd|o|fffd||fffd||fffd||fffd||fffd||292|u|fffd||fffd||fffd||64fe||fffd||fffd||fffd||fffd|
    Dim i           As Long
    i = GetTableIndex(array_const, constant)
    ' |fffd||fffd||fffd||30e||fffd||783|e|fffd|[|fffd|u|fffd||fffd||fffd|i|fffd|l|fffd|j|fffd||fffd||502||fffd|
    EndArrowheadConstantToNumber = i + 1

End Function

Function EndArrowheadTextToNumber(ByVal val As String) As Long

    ' |fffd||fffd|[|fffd||30e||fffd||782||303|e|fffd|L|fffd|X|fffd|g|fffd|i|fffd||fffd||fffd|O|fffd|j|fffd||fffd|z|fffd||fffd||24a|i|fffd|[|fffd||fffd||fffd||fffd|
    Dim array_text  As Variant
    array_text = Split(TBL_ARROWSTYLE, ",")
    
    ' |fffd||fffd||fffd||fffd||fffd||183|e|fffd|[|fffd|u|fffd||fffd||fffd||313||2cd||fffd||fffd||fffd||fffd||242||fffd||fffd|A|fffd||fffd||fffd|o|fffd||fffd||fffd||fffd||fffd||292|u|fffd||fffd||fffd||64fe||fffd||fffd||fffd||fffd|
    Dim i           As Long
    i = GetTableIndex(array_text, val)
    
    ' |fffd||fffd||fffd||30e||fffd||783|e|fffd|[|fffd|u|fffd||fffd||fffd|i|fffd|l|fffd|j|fffd||fffd||502||fffd|
    EndArrowheadTextToNumber = i + 1

End Function

Function ArrowNumberToSize(ByVal number As Long) As Variant

    ' |fffd||fffd||fffd||fffd||fffd||314||50d||fffd||fffd||fffd||fffd||fffd||fffd||182||256||fffd||fffd||303|T|fffd|C|fffd|Y|fffd||fffd||50b|p|fffd||fffd||fffd||fffd|
    ' "a,b" = (width,length)
    Dim array_size  As Variant
    array_size = Array("1,1", "1,2", "1,3", "2,1", "2,2", "2,3", "3,1", "3,2", "3,3")

    ' |fffd||fffd||fffd||192||fffd||fffd||fffd||fffd||fffd|z|fffd||fffd||182||fffd||fffd||115||50b|p|fffd||fffd||fffd||fffd|
    ArrowNumberToSize = Split(array_size(number - 1), ",")

End Function

Function GetTableIndex(ByRef table As Variant, ByVal key As Variant, Optional ByVal def_val As String) As Long
On Error Resume Next

    ' |fffd|z|fffd||fffd||30d||151||fffd|Y|fffd||fffd||fffd||fffd||fffd||fffd||fffd||64fe||fffd||fffd||fffd||fffd|
    Dim max_idx     As Long
    max_idx = UBound(table)
    
    ' |fffd||fffd||fffd||fffd||fffd||153|n|fffd||fffd||fffd||a0bd||fffd||fffd||fffd||fffd||fffd|L|fffd|[|fffd||154|z|fffd||fffd|i|fffd|i|fffd|[|fffd|l|fffd||355||fffd||fffd||fffd||fffd||182||742||202||fffd||fffd|j|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
    Dim i           As Long
    Dim is_exists   As Boolean: is_exists = False
    For i = 0 To max_idx
        If CStr(table(i)) = key Then is_exists = True: Exit For
    Next
    
    ' |fffd|z|fffd||fffd||fffd||fffd||24c||fffd||fffd||fffd||fffd|L|fffd|[|fffd||fffd||fffd||fffd||fffd||742||fffd||fffd||fffd||fffd||a347||fffd|A|fffd||fffd||fffd|o|fffd||fffd||fffd||303|C|fffd||fffd||fffd|f|fffd|b|fffd|N|fffd|X|fffd||fffd||752||80b7||fffd||fffd|
    If is_exists Then GetTableIndex = i: Exit Function
    
    ' |fffd|z|fffd||fffd||fffd||fffd||24c||fffd||fffd||fffd||fffd|L|fffd|[|fffd||fffd||fffd||fffd||fffd||742||fffd||fffd||202||fffd||fffd||fffd||fffd||fffd||fffd||a347||fffd||341|A|fffd|f|fffd|t|fffd|H|fffd||fffd||fffd|g|fffd|l|fffd||fffd||752||80b7||fffd||fffd|
    GetTableIndex = 0
    If def_val > 0 Then GetTableIndex = def_val

End Function

Function IsCanvas(ByVal sheet As Worksheet) As Boolean
    Dim oName   As Object   ' Name|fffd|I|fffd|u|fffd|W|fffd|F|fffd|N|fffd|g|fffd||fffd||fffd||fffd||fffd|p
    
    IsCanvas = False

    If sheet Is Nothing Then Exit Function
    If sheet.ProtectContents Then Exit Function

    ' |fffd|`|fffd||fffd|V|fffd|[|fffd|g|fffd||20a|O|fffd||34f||fffd||fffd||fffd||fffd||fffd||fffd|I|fffd||fffd||fffd||fffd||fffd||fffd|i|fffd|v|fffd||fffd||fffd|W|fffd|F|fffd|N|fffd|g|fffd||fffd||fffd||502||313|o|fffd|^|fffd|L|fffd||fffd||fffd||154||fffd||fffd|f|fffd|j
    For Each oName In sheet.Names
        If InStr(1, oName.Name, NM_CL) > 0 Then
            IsCanvas = True
            Exit For
        End If
    Next

End Function

Function GetNameFromReferTo(ByVal refer_to As String) As String

    Dim exclamation_pos   As Long
    
    ' |fffd||fffd||fffd|O|fffd||30e|Q|fffd||194||348||342||24a||702||702||fffd||fffd|V|fffd|[|fffd|g|fffd||fffd||fffd||30b||fffd||602||fffd||292|u|fffd||fffd||fffd||fffd||fffd||7c2||fffd|
    refer_to = Replace(refer_to, "'", "")
    exclamation_pos = InStr(1, refer_to, "!")
    
    GetNameFromReferTo = refer_to
    If exclamation_pos > 0 Then GetNameFromReferTo = Mid(refer_to, exclamation_pos + 1)

End Function

Function GetSheetNameFromReferTo(ByVal refer_to As String) As String

    Dim exclamation_pos   As Long
    
    ' |fffd||fffd||fffd|O|fffd||30e|Q|fffd||194||348||342||24a||702||702||fffd||fffd|V|fffd|[|fffd|g|fffd||fffd||fffd||30b||fffd||602||fffd||292|u|fffd||fffd||fffd||fffd||fffd||7c2||fffd|
    refer_to = Replace(refer_to, "'", "")
    exclamation_pos = InStr(1, refer_to, "!")
    
    GetSheetNameFromReferTo = ""
    If exclamation_pos > 0 Then GetSheetNameFromReferTo = Mid(refer_to, 1, exclamation_pos - 1)

End Function

Function IsRelatedName(ByVal name_id As String) As Boolean

    IsRelatedName = True
    
    Dim exclamation_pos As Long
    
    name_id = UCase(name_id)
    exclamation_pos = InStr(1, name_id, "!")
    If exclamation_pos > 0 Then
        name_id = Mid(name_id, exclamation_pos + 1) ' |fffd|I|fffd|u|fffd|W|fffd|F|fffd|N|fffd|g|fffd|Q|fffd||195||fffd||fffd||fffd||fffd||d3dc|
        name_id = Mid(name_id, 1, 3)                ' NAME|fffd||310||64ea||fffd|R|fffd||fffd||fffd||fffd||fffd||14e||fffd||fffd||fffd|
    End If
    
    If name_id = "_PL" Then Exit Function
    If name_id = "_TS" Then Exit Function
    If name_id = "_LK" Then Exit Function
    
    IsRelatedName = False

End Function

Sub ToActivateSelectedSheet()
    On Error Resume Next
    
    Dim select_book_name    As String
    Dim select_sheet_name   As String
    
    With frmShtList.lstpl
        select_book_name = .List(.ListIndex, 0)
        select_sheet_name = .List(.ListIndex, 1)
    End With
    
    Workbooks(select_book_name).Worksheets(select_sheet_name).Activate

    Application.StatusBar = select_sheet_name
    If err.number = 0 Then
        Application.StatusBar = Application.StatusBar & " |fffd||fffd||fffd|A|fffd|N|fffd|e|fffd|B|fffd|u|fffd||242||fffd||fffd||702||fffd||fffd||fffd||fffd|B"
    Else
        Application.StatusBar = Application.StatusBar & " |fffd||fffd||fffd||fffd||fffd||82||fffd||fffd||fffd||702||fffd||fffd||fffd|B"
        err.Clear
    End If

End Sub

Sub DivideLeftClickAction(ByVal Sh As Object)

    Dim left_action_num             As Long
    left_action_num = ThisWorkbook.Worksheets(SHT_DATALIST).Range("L2")

    Select Case left_action_num
        Case 1
            Exit Sub
        Case 2
            Call SetSchedule(Sh, False)
        Case 3
            Call OnDrawTaskLink
    End Select
    
End Sub

Function AdjustDateForm(ByVal arg_date As String) As String

    ' |fffd|^|fffd|X|fffd|N|fffd||30a|J|fffd|n|fffd||fffd||fffd||18f|I|fffd||fffd||fffd||fffd||fffd||fffd||fffd|W|fffd||fffd||fffd||310||fffd||fffd||fffd||14e||64fe||fffd||fffd||fffd||fffd|
    AdjustDateForm = Format(arg_date, DATE_FORM)
    
    ' |fffd||fffd||fffd|t|fffd||182||fffd||fffd||114|F|fffd||fffd||fffd||142||fffd||fffd||90a9||fffd|`|fffd|F|fffd|b|fffd|N|fffd||fffd||fffd||fffd|
    If IsDate(AdjustDateForm) Then
        ' |fffd||fffd||fffd|t|fffd||fffd|1900/1/1|fffd||fffd||fffd||7cb||fffd||fffd||302||182||fffd||fffd||341|u1900/1/1|fffd|v|fffd||fffd||752||80b7||fffd||fffd|
        If CDate(AdjustDateForm) < CDate("1900/1/1") Then AdjustDateForm = CDate("1900 / 1 / 1")
    End If

End Function

Sub CreateHolidayTable(ByVal first_date As Date, ByVal last_date As Date)

    Dim tmp_date        As Date
    Dim holiday_count   As Long

    ' |fffd|A|fffd|h|fffd|C|fffd||fffd||fffd||303|f|fffd|[|fffd|^|fffd|V|fffd|[|fffd|g|fffd||fffd|O|fffd||fffd||24a|J|fffd|n|fffd||fffd||fffd||fffd||fffd||fffd|I|fffd||fffd||fffd||fffd||fffd||702||142||314||fffd||493||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||5c2||10f|o|fffd||342||fffd||fffd||fffd|
    With ThisWorkbook.Worksheets(SHT_DATALIST)
        .Range("O:O").Clear
        holiday_count = 2   ' 1|fffd|s|fffd||682||343|^|fffd|C|fffd|g|fffd||fffd||fffd|s|fffd||202||302||fffd|2|fffd|s|fffd||682||fffd||fffd||fffd|J|fffd|n|fffd||fffd||fffd||fffd|
        For tmp_date = first_date To last_date
            If IsHoliday(tmp_date) Then
                .Cells(holiday_count, "O").Value = tmp_date
                holiday_count = holiday_count + 1
            End If
        Next
    End With
    
End Sub

Function GetCalCol(ByRef arrayWorkPeriod() As Variant, ByVal key As Date, ByVal minCal As Long, ByVal maxCal As Long) As Long

    Dim midCal  As Long

    If maxCal < minCal Then
        ' |fffd|Y|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||742||fffd||fffd||202||fffd||fffd||a347||fffd||34a|Y|fffd||fffd||fffd||fffd||fffd||fffd||fffd||702||702||fffd||fffd|O|fffd||317||fffd||fffd||50b|p|fffd||fffd||fffd||fffd|
        GetCalCol = minCal
    Else
        midCal = minCal + (maxCal - minCal) / 2
        If arrayWorkPeriod(1, midCal) > key Then
            GetCalCol = GetCalCol(arrayWorkPeriod, key, minCal, midCal - 1)
        ElseIf arrayWorkPeriod(1, midCal) < key Then
            GetCalCol = GetCalCol(arrayWorkPeriod, key, midCal + 1, maxCal)
        Else
            GetCalCol = midCal
        End If
    End If
    
End Function

Function GetPoint(ByRef Range_Tsk As Range, Optional consumptionMan_Day As Variant, Optional progress_date As Date, _
                Optional first_date As Date, Optional last_date As Date, Optional report_date_correction As Long) As Single()

    Dim array_point(5)                      As Single   ' 0:Xs 1:Ys 2:Xe 3:Ye 4:Xp
    Dim all_days                            As Single   ' |fffd|i|fffd||fffd||fffd||fffd||fffd||fffd||fffd||702||702||fffd||fffd||fffd||fffd||fffd||313||fffd||fffd||fffd|
    Dim number_of_days_until_progress_day   As Single   ' |fffd|i|fffd||fffd||fffd||fffd||fffd||fffd||fffd||702||702||fffd||fffd||fffd||310||64ea||fffd||fffd||fffd||fffd||fffd||fffd|i|fffd||fffd||fffd||fffd||fffd||702||142||30f||fffd||fffd||fffd||fffd||fffd||fffd|
    Dim consumption_man_day_in_area         As Single   ' |fffd|P|fffd||fffd||fffd||fffd||fffd||fffd||fffd||30f||fffd||fffd||fffd|H|fffd||fffd|
    
    ' |fffd|i|fffd||fffd||fffd||fffd||fffd||fffd||fffd||702||702||fffd||fffd||fffd||249||fffd||fffd||fffd||fffd||702||702||fffd||90a9||fffd||fffd||fffd||fffd||fffd||fffd||fffd|Z|fffd|o|fffd||fffd||fffd||fffd|
    ' ex) 5/1 |fffd|` 5/7 |fffd||fffd| 7|fffd||fffd|
    all_days = last_date - first_date
    
    ' |fffd||fffd||fffd||fffd|H|fffd||fffd||fffd||312|[|fffd||fffd||fffd||fffd||fffd|n|fffd||fffd||fffd||a0bd||fffd||182||fffd||fffd||34a|Y|fffd||fffd||fffd||317||fffd|i|fffd|i|fffd||fffd||fffd||fffd||fffd||fffd||fffd||702||702||fffd||fffd||fffd|j|fffd||fffd||fffd||313||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||f0b5||fffd||102||fffd||fffd||90a9||fffd|Z|fffd|o|fffd||fffd||fffd||fffd|
    number_of_days_until_progress_day = 0
    If Not IsError(consumptionMan_Day) Then
        number_of_days_until_progress_day = progress_date - (first_date + 1) + consumptionMan_Day + report_date_correction
    End If
    
    ' |fffd|i|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||315||fffd||fffd||fffd||fffd||702||fffd||fffd||fffd||fffd||fffd||fffd||fffd|i|fffd|^|fffd|C|fffd||fffd||fffd|X|fffd|P|fffd|[|fffd||fffd||fffd|j|fffd||14f||fffd||fffd|Z|fffd||fffd||fffd|A|fffd|P|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||315||fffd||fffd||fffd||fffd|Z|fffd|o|fffd||fffd||fffd||fffd|
    consumption_man_day_in_area = 0
    If all_days = 0 Then
        consumption_man_day_in_area = Range_Tsk.width
    ElseIf all_days > 0 Then
        consumption_man_day_in_area = number_of_days_until_progress_day * (Range_Tsk.width / all_days)
    End If
    
    ' |fffd|Z|fffd||fffd||fffd||30d||fffd||fffd||fffd||fffd||fffd|W|fffd|iXs,Ys|fffd|j|fffd||189|E|fffd||fffd||fffd||fffd||fffd|W|fffd|iXe,Ye|fffd|j|fffd||fffd||fffd||fffd||fffd||7c2||fffd|
    With Range_Tsk
        array_point(0) = .Left                                  ' |fffd||fffd||fffd||fffd||fffd|X|fffd||fffd||fffd|W|fffd|iXs|fffd|j
        array_point(1) = .Top                                   ' |fffd||fffd||fffd||fffd||fffd|Y|fffd||fffd||fffd|W|fffd|iYs|fffd|j
        array_point(2) = .Left + .width                         ' |fffd|E|fffd||fffd||fffd||fffd|X|fffd||fffd||fffd|W|fffd|iXe|fffd|j
        array_point(3) = .Top + .Height                         ' |fffd|E|fffd||fffd||fffd||fffd|Y|fffd||fffd||fffd|W|fffd|iYe|fffd|j
        array_point(4) = .Left + consumption_man_day_in_area    ' |fffd|P|fffd||fffd||fffd||fffd||fffd||fffd||fffd|H|fffd||fffd||fffd|p|fffd||fffd|X|fffd||fffd||fffd|W|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
    End With
    
    GetPoint = array_point

End Function

Sub DrawProgressLine(ByRef CANVAS As Worksheet, ByRef pl_x() As Single, ByRef pl_y() As Single, ByVal max_array_index As Long, ByVal pl_name As String)
    
    Dim i   As Long

    ' |fffd||fffd||fffd|W|fffd|z|fffd||fffd||fffd||fffd||fffd||fffd||182||248||fffd||210||fffd||fffd||fffd|`|fffd||60b7||fffd||fffd|
    With CANVAS.Shapes.BuildFreeform(msoEditingAuto, pl_x(0), pl_y(0))
        For i = 1 To max_array_index
            .AddNodes msoSegmentLine, msoEditingAuto, pl_x(i), pl_y(i)
        Next
        .ConvertToShape.Select
    End With
    
    ' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|i|fffd||fffd||fffd||30c||fffd||fffd||fffd||fffd|_|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||90bd||fffd||7c2||311|[|fffd|u|fffd|j|fffd||fffd||fffd|R|fffd|s|fffd|[|fffd||fffd||fffd||fffd|
    ThisWorkbook.Worksheets(SHT_DATALIST).Shapes(pl_name).PickUp
    With Selection.ShapeRange
        .Apply
        .Name = pl_name
    End With
    
End Sub

Function GetOperationDayCount(ByVal first_date As String, ByVal last_date As String, ByVal is_No_Operation_Day As Boolean) As Long

    ' |fffd|J|fffd|n|fffd||fffd||fffd||fffd||fffd||fffd|I|fffd||fffd||fffd||fffd||fffd||702||142||313||fffd||fffd||fffd||fffd||fffd||fffd|J|fffd|E|fffd||fffd||fffd|g|fffd||fffd||fffd||fffd|
    GetOperationDayCount = DateDiff("d", first_date, last_date) + 1
    
    ' |fffd|u|fffd||fffd||fffd||5c2||109||493||fffd||fffd||fffd||fffd||182||742||202||fffd||fffd|v|fffd||fffd||fffd|I|fffd||fffd||fffd||30f||a347||fffd|A|fffd|J|fffd|n|fffd||fffd||fffd||fffd||fffd||fffd|I|fffd||fffd||fffd||fffd||fffd||702||142||313||fffd||fffd||fffd||fffd||fffd||fffd||70bb||fffd||30a||502||24a||702||702||fffd||fffd|x|fffd|j|fffd||fffd||fffd||313||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
    If Not is_No_Operation_Day Then
        With ThisWorkbook.Worksheets(SHT_DATALIST)
            GetOperationDayCount = GetOperationDayCount - (Application.WorksheetFunction.CountIfs(.Range("O:O"), ">=" & first_date, .Range("O:O"), "<=" & last_date))
        End With
    End If

End Function

Function SetInPLPointArray(ByVal array_count As Long, ByRef pl_x() As Single, ByRef pl_y() As Single, ByRef point As Variant, _
                            ByVal edge_size As Single, ByVal is_edge As Boolean) As Long
    
    ' |fffd||fffd||fffd|W-|fffd||fffd|
    array_count = array_count + 1
    pl_x(array_count) = pl_x(0)
    pl_y(array_count) = point(1)

    ' |fffd||fffd||fffd|W-|fffd||fffd||fffd||fffd|1
    array_count = array_count + 1
    pl_x(array_count) = point(4)
    pl_y(array_count) = ((point(1) + (point(3))) / 2) - edge_size

    ' |fffd||fffd||fffd|W-|fffd||fffd||fffd||fffd|2
    If is_edge Then
        ' |fffd|v|fffd||fffd||fffd|W|fffd|F|fffd|N|fffd|g|fffd||fffd||fffd||514||348||34a|O|fffd||30f||fffd||fffd||fffd|
        array_count = array_count + 1
        pl_x(array_count) = pl_x(array_count - 1)
        pl_y(array_count) = ((point(1) + (point(3))) / 2) + edge_size
    End If

    ' |fffd||fffd||fffd|W-|fffd||fffd|
    array_count = array_count + 1
    pl_x(array_count) = pl_x(0)
    pl_y(array_count) = point(3)

    ' |fffd|z|fffd||fffd||302||1c2||fffd||fffd||702||143|f|fffd|[|fffd|^|fffd||fffd||fffd|i|fffd|[|fffd||fffd||fffd||102||fffd||fffd||90a9||fffd||fffd||fffd||fffd||fffd||fffd||fffd|C|fffd||fffd||fffd|f|fffd|b|fffd|N|fffd|X|fffd||fffd||50b|p|fffd||fffd||fffd||fffd|
    SetInPLPointArray = array_count
        
End Function

Sub SuppressUpdates(ByVal on_init As Boolean)
    
    ' on_init|fffd|@True:|fffd|}|fffd|~|fffd|@False:|fffd|}|fffd|~|fffd||fffd||fffd||fffd|
    With Application
        If on_init Then
            .StatusBar = ""
            .ScreenUpdating = False
            save_calc = .Calculation
            .Calculation = xlCalculationManual  ' |fffd||84ee||fffd|v|fffd|Z
            .EnableEvents = False
        Else
            .Calculation = save_calc            ' |fffd||fffd||fffd||fffd||fffd|O|fffd||303||fffd||fffd|[|fffd|h|fffd||256||7c2||fffd|
            .EnableEvents = True
            .ScreenUpdating = True
        End If
    End With

End Sub

Function GetPointToRange(ByVal sheet As String, ByVal x As Variant, ByVal y As Variant) As Range
On Error Resume Next

    ' |fffd||fffd||fffd||fffd||30d||fffd||fffd|W|fffd|i|fffd||fffd||fffd||fffd||fffd|j|fffd||fffd||fffd||fffd|l|fffd|p|fffd||fffd|`|fffd||60b5||fffd||101|A|fffd||fffd||fffd||30d||fffd||fffd|W|fffd||fffd||fffd||702||fffd|RANGE|fffd|I|fffd|u|fffd|W|fffd|F|fffd|N|fffd|g|fffd||fffd||fffd||64fe||fffd||fffd||fffd||fffd|
    With Worksheets(sheet)
        .Shapes.AddShape msoShapeRectangle, x, y, 10, 10
        Set GetPointToRange = .Shapes(.Shapes.Count).TopLeftCell
        .Shapes(.Shapes.Count).Delete
    End With

End Function

Function GetCanvasInfo(ByVal sheet As String) As tCANVAS
On Error Resume Next
    
    ' |fffd||fffd||fffd|[|fffd|N|fffd|V|fffd|[|fffd|g|fffd||253|o|fffd|^|fffd||fffd||fffd||fffd||102||fffd||fffd||fffd|NAMES|fffd|I|fffd|u|fffd|W|fffd|F|fffd|N|fffd|g|fffd||1228f|o|fffd||fffd||fffd||10d|\|fffd||fffd||fffd||302||24a|i|fffd|[|fffd||fffd||fffd||fffd|
    Dim name_in_sheet   As Object
    Dim name_info       As String
    For Each name_in_sheet In Worksheets(sheet).Names
        ' NAME|fffd|I|fffd|u|fffd|W|fffd|F|fffd|N|fffd|g|fffd||fffd||fffd||fffd||fffd||fffd||fffd|o|fffd||fffd|
        name_info = name_in_sheet.Name
        
        ' |fffd||fffd||fffd|o|fffd||fffd||fffd||fffd||fffd||fffd||fffd|O|fffd||fffd||fffd||fffd|Q|fffd||182||fffd||fffd||102||fffd||fffd||90cf||fffd|[|fffd|N|fffd|V|fffd|[|fffd|g|fffd||fffd||fffd||fffd||fffd||fffd||83dc||fffd||fffd|
        name_info = Mid(name_info, InStr(1, name_info, "!") + 1)
        
        ' |fffd|Q|fffd||194||348||342||fffd||fffd|Y|fffd||fffd||fffd||fffd||fffd||fffd|\|fffd||fffd||fffd||303||fffd||fffd||fffd||fffd|o|fffd||250||752||80b7||fffd||fffd|
        With GetCanvasInfo
            Select Case name_info
                Case NM_CL
                    Set .prj_period = Range(name_in_sheet)
                Case NM_PL
                    Set .pl_range = Range(name_in_sheet)
                Case NM_SD
                    Set .top_startdate = Range(name_in_sheet)
                Case NM_ED
                    Set .top_enddate = Range(name_in_sheet)
                Case NM_PR
                    Set .progress_ratio = Range(name_in_sheet)
                Case NM_TT
                    Set .top_task = Range(name_in_sheet)
                Case NM_HT
                    Set .pl_history_range = Range(name_in_sheet)
            End Select
        End With
    Next

End Function
Attribute VB_Name = "modExport"
Option Explicit
Option Private Module

Private Const MENU_TITLE = "|fffd|t|fffd|@|fffd|C|fffd||fffd||fffd|o|fffd||fffd|"

Sub ExportToEXCEL(control As IRibbonControl)
    On Error Resume Next

    Const FILTER_EXCEL = "EXCEL|fffd|t|fffd|@|fffd|C|fffd||fffd|,*.xlsx"
    Const EXCEL_EXTENSION = ".xlsx"
    
    Application.StatusBar = ""
    
    Dim targetWorkSheet As Worksheet
    Set targetWorkSheet = ActiveSheet   ' |fffd|`|fffd||fffd|V|fffd|[|fffd|g|fffd||fffd|Worksheet|fffd||fffd||fffd||64fe|
    
    Dim savezoom        As Variant      ' windows|fffd||fffd|zoom|fffd|v|fffd||fffd||fffd|p|fffd|e|fffd|B|fffd||fffd||6d1||fffd||fffd||fffd||fffd||fffd||3d0||fffd|
    savezoom = ActiveWindow.Zoom        ' windows|fffd||fffd|zoom|fffd|v|fffd||fffd||fffd|p|fffd|e|fffd|B|fffd||fffd||6d1||fffd||fffd||fffd||fffd||fffd|
        
    ' |fffd|o|fffd||343|t|fffd|@|fffd|C|fffd||fffd||fffd||fffd||fffd||fffd||fffd||64fe||fffd||fffd||fffd||fffd|
    Dim exportFileName  As String
    exportFileName = GetExportName(targetWorkSheet.Name, FILTER_EXCEL, EXCEL_EXTENSION)
    
    If exportFileName <> "False" Then
        If IsFileOpen(exportFileName) Then
        Call OutMessage("|fffd|t|fffd|@|fffd|C|fffd||fffd||fffd||fffd||fffd|J|fffd||fffd||fffd||fffd||102||fffd||fffd||702||fffd||fffd|B" & vbCrLf & _
            "|fffd|t|fffd|@|fffd|C|fffd||fffd||fffd||fffd||82||fffd||fffd||10d||113|x|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|B", vbOKOnly + vbExclamation, MENU_TITLE)
        Else
            Application.ScreenUpdating = False
            Application.DisplayAlerts = False

            ' |fffd|^|fffd|[|fffd|Q|fffd|b|fffd|g|fffd|V|fffd|[|fffd|g|fffd||fffd||fffd|R|fffd|s|fffd|[|fffd||fffd||fffd||110||fffd||fffd||fffd||fffd||fffd||fffd||d3dc||fffd||fffd||fffd||fffd|
            Dim exportWorkBook  As Workbook
            Dim exportWorkSheet As Worksheet
            targetWorkSheet.Copy                    ' |fffd|`|fffd||fffd|V|fffd|[|fffd|g|fffd||fffd|Workbook|fffd||182||fffd||fffd||10d||c42c||fffd||fffd||fffd||fffd|
            Set exportWorkBook = ActiveWorkbook     ' EXPORT|fffd||fffd|Workbook|fffd||fffd||fffd||64fe|
            Set exportWorkSheet = ActiveSheet       ' EXPORT|fffd||fffd|Worksheet|fffd||fffd||fffd||64fe|
            exportWorkSheet.Cells.Select
            Selection.Copy
            
            With ThisWorkbook.Worksheets(SHT_DATALIST).Range("S2")
            
                ' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||d3dc||fffd||fffd||fffd||fffd|
                If .OFFSET(0).Value = True Then
                    Selection.PasteSpecial Paste:=xlPasteValues, Operation:=xlNone, SkipBlanks _
                        :=False, Transpose:=False
                End If
                
                ' |fffd|^|fffd|[|fffd|Q|fffd|b|fffd|g|fffd|V|fffd|[|fffd|g|fffd||fffd||303|R|fffd||fffd||fffd|g|fffd|[|fffd||fffd||fffd||fffd||fffd||fffd|o|fffd|^|fffd|}|fffd|N|fffd||fffd||fffd||fffd||fffd||d3dc||fffd||fffd||fffd||fffd|
                Dim shapeObject     As Object
                For Each shapeObject In exportWorkSheet.Shapes
                    shapeObject.OnAction = ""
                Next
                
                ' |fffd|n|fffd|C|fffd|p|fffd|[|fffd||fffd||fffd||fffd||fffd|N|fffd||fffd||fffd||d3dc||fffd||fffd||fffd||fffd|
                If .OFFSET(1).Value = True Then
                    Selection.Hyperlinks.Delete
                End If
                
                ' |fffd|f|fffd|[|fffd|^|fffd||313||fffd||fffd||34b|K|fffd||fffd||fffd||fffd||fffd||d3dc||fffd||fffd||fffd||fffd|
                If .OFFSET(2).Value = True Then
                    Selection.Validation.Delete
                End If
                
                ' NAME|fffd|I|fffd|u|fffd|W|fffd|F|fffd|N|fffd|g|fffd||fffd||fffd||d3dc||fffd||fffd||fffd||fffd|
                If .OFFSET(3).Value = True Then
                    Dim collectionName  As Object
                    For Each collectionName In exportWorkBook.Names
                        collectionName.Delete
                    Next
                End If
                
                ' |fffd|R|fffd||fffd||fffd||fffd||fffd|g|fffd||fffd||fffd||d3dc||fffd||fffd||fffd||fffd|
                If .OFFSET(4).Value = True Then
                    Selection.ClearComments
                End If
                
                ' |fffd|\|fffd||fffd||fffd|{|fffd||fffd||fffd||fffd|100%|fffd||242||fffd||fffd||fffd|
                If .OFFSET(5).Value = True Then
                    ActiveWindow.Zoom = 100
                End If
                
            End With
    '        Cells.FormatConditions.Delete  ' |fffd||fffd||fffd||fffd||fffd|t|fffd||fffd||fffd||fffd||fffd||fffd||fffd||30d||d3dc|
            
            ' |fffd|t|fffd|@|fffd|C|fffd||fffd||fffd||fffd||fffd|o|fffd||342||fffd||fffd||fffd|
            exportWorkSheet.Range("A1").Select
            exportWorkBook.SaveAs fileName:=exportFileName, CreateBackup:=False
            exportWorkBook.Close
            Application.StatusBar = "|fffd|o|fffd||343|t|fffd|@|fffd|C|fffd||fffd||fffd|F" & exportFileName
            
            ActiveWindow.Zoom = savezoom
            Application.DisplayAlerts = True
            Application.ScreenUpdating = True
            Set targetWorkSheet = Nothing
        End If

    End If
    
    Set exportWorkBook = Nothing
    Set exportWorkSheet = Nothing
        
End Sub

Sub ExportToPDF(control As IRibbonControl)
    On Error Resume Next
 
    Const FILTER_PDF = "PDF|fffd|t|fffd|@|fffd|C|fffd||fffd|,*.pdf"
    Const PDF_EXTENSION = ".pdf"
    
    Application.StatusBar = ""
            
    ' |fffd|o|fffd||343|t|fffd|@|fffd|C|fffd||fffd||fffd||fffd||fffd||fffd||fffd||64fe||fffd||fffd||fffd||fffd|
    Dim exportFileName  As String   '|fffd||6d1||fffd||fffd||fffd|t|fffd|H|fffd||fffd||fffd|_|fffd|p|fffd|X|fffd||fffd||fffd|t|fffd|@|fffd|C|fffd||fffd||fffd||fffd|
    exportFileName = GetExportName(ActiveSheet.Name, FILTER_PDF, PDF_EXTENSION)
    If exportFileName <> "False" Then
        If IsFileOpen(exportFileName) Then
            Call OutMessage("|fffd|t|fffd|@|fffd|C|fffd||fffd||fffd||fffd||fffd|J|fffd||fffd||fffd||fffd||102||fffd||fffd||702||fffd||fffd|B" & vbCrLf & _
                "|fffd|t|fffd|@|fffd|C|fffd||fffd||fffd||fffd||82||fffd||fffd||10d||113|x|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|B", vbOKOnly + vbExclamation, MENU_TITLE)
        Else
            Application.ScreenUpdating = False
            Application.DisplayAlerts = False

            ' PDF|fffd|o|fffd||34e||fffd||fffd||343|Y|fffd|[|fffd||fffd||fffd||fffd|100%|fffd||242||fffd||fffd||102||fffd||fffd||fffd|
            Dim savezoom        As Variant  ' windows|fffd||fffd|zoom|fffd|v|fffd||fffd||fffd|p|fffd|e|fffd|B|fffd||fffd||6d1||fffd||fffd||fffd||fffd||fffd||3d0||fffd|
            savezoom = ActiveWindow.Zoom
            ActiveWindow.Zoom = 100
        
        
            ' |fffd|t|fffd|@|fffd|C|fffd||fffd||fffd||fffd||fffd|o|fffd||342||fffd||fffd||fffd|
            ActiveSheet.ExportAsFixedFormat Type:=xlTypePDF, fileName:=exportFileName
            If err.number > 0 Then
                If Application.Version = 12 Then
                    Call OutMessage("PDF|fffd|o|fffd||342||142||fffd||fffd||702||fffd||fffd||fffd|B" & vbCrLf & _
                        "Microsoft PDF/XPS |fffd||6d1||fffd||fffd|A|fffd|h|fffd|C|fffd||fffd||fffd||fffd||fffd|_|fffd|E|fffd||fffd||fffd||fffd||fffd|[|fffd|h|fffd||fffd||fffd||10d||113|x|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|B", vbOKOnly + vbExclamation, MENU_TITLE)
                Else
                    Call OutMessage("PDF|fffd|o|fffd||342||142||fffd||fffd||702||fffd||fffd||fffd|B", vbOKOnly + vbExclamation, MENU_TITLE)
                End If
            Else
                Application.StatusBar = "|fffd|o|fffd||343|t|fffd|@|fffd|C|fffd||fffd||fffd|F" & exportFileName
            End If
            
            ActiveWindow.Zoom = savezoom
            Application.DisplayAlerts = True
            Application.ScreenUpdating = True
        End If
    End If

End Sub

Function GetExportName(ByVal sheetName As String, ByVal filter As String, ByVal extension As String) As String

    ' |fffd|o|fffd||343|t|fffd|@|fffd|C|fffd||fffd||fffd||fffd||fffd||183|p|fffd|X|fffd||fffd||fffd||fffd||fffd||80b7||fffd||fffd|
    GetExportName = Application.GetSaveAsFilename( _
        InitialFileName:=Worksheets(sheetName).Name & extension, _
        FileFilter:=filter, _
        title:="|fffd|t|fffd|@|fffd|C|fffd||fffd||fffd|o|fffd||fffd|")

End Function

Function IsFileOpen(ByVal fileName As String) As Boolean
    On Error Resume Next
    
    Dim fileNo  As Integer
    
    ' |fffd|t|fffd|@|fffd|C|fffd||fffd||fffd||fffd||fffd|J|fffd||fffd||fffd||fffd||102||fffd||fffd||90a9||fffd|`|fffd|F|fffd|b|fffd|N|fffd||fffd||fffd||fffd|
    fileNo = FreeFile
    Open fileName For Append As fileNo
    Close fileNo
    
    If err.number > 0 Then
        IsFileOpen = True   ' |fffd||fffd||fffd||142||24a|J|fffd||fffd||fffd||fffd||102||fffd||fffd||fffd|
    Else
        IsFileOpen = False  ' |fffd||82||fffd||fffd||102||fffd||fffd||fffd|
    End If
    err.Clear
    
End Function

Sub onExportOption(control As IRibbonControl, ByRef returnValue)

    Dim toggleButtonNumber  As Long
    
    ' toggleButton|fffd|v|fffd|f|fffd||fffd|ON(true)|fffd|EOFF(false)|fffd||fffd||752||80b7||fffd||fffd|
    If Left(control.ID, Len("tglExportToEXCEL")) = "tglExportToEXCEL" Then
        toggleButtonNumber = Right(control.ID, 1&)
        returnValue = ThisWorkbook.Worksheets(SHT_DATALIST).Range("S2").OFFSET(toggleButtonNumber - 1).Value
    End If

End Sub

Sub SetExportOptions(control As IRibbonControl, ByRef returnValue)

    Dim toggleButtonNumber  As Long
    
    ' toggleButton|fffd|v|fffd|f|fffd||fffd|ON(true)|fffd|EOFF(false)|fffd||fffd||fffd|f|fffd|[|fffd|^|fffd|V|fffd|[|fffd|g|fffd||255||6d1||fffd||fffd||fffd||fffd||fffd|
    If Left(control.ID, Len("tglExportToEXCEL")) = "tglExportToEXCEL" Then
        toggleButtonNumber = Right(control.ID, 1&)
        ThisWorkbook.Worksheets(SHT_DATALIST).Range("S2").OFFSET(toggleButtonNumber - 1).Value = returnValue
    End If
    
    ' |fffd|e|fffd||fffd||fffd|`|fffd||fffd||fffd||3cd|X|fffd|L|fffd||fffd||fffd|t|fffd||fffd||fffd|O|fffd||fffd|ON|fffd|itrue|fffd|j|fffd||242||fffd||fffd||fffd|
    isSheetUpdate = True

End Sub
Attribute VB_Name = "modHandyTools"
Option Explicit
Option Private Module
Sub ShowCommentList(control As IRibbonControl)

    ' |fffd|V|fffd|[|fffd|g|fffd||251||fffd||fffd||742||fffd||fffd||102||fffd||fffd||fffd|R|fffd||fffd||fffd||fffd||fffd|g|fffd||fffd||fffd|R|fffd||fffd||fffd||fffd||fffd|g|fffd||a5d7||fffd||252||1c9||fffd||fffd||fffd||fffd||fffd|
    frmCommentList.Show
End Sub

Sub ShowAllNameObjects(control As IRibbonControl)
    
    ' |fffd|u|fffd|b|fffd|N|fffd||fffd||fffd||316||fffd||fffd|O|fffd|I|fffd|u|fffd|W|fffd|F|fffd|N|fffd|g|fffd||fffd||fffd||fffd||fffd||5c2||115|\|fffd||fffd||fffd||fffd||fffd||fffd|
    Dim name_obj    As Object
    For Each name_obj In ActiveWorkbook.Names
        name_obj.Visible = True
    Next

End Sub

Sub HideAllNameObjects(control As IRibbonControl)
    
    ' |fffd|u|fffd|b|fffd|N|fffd||fffd||fffd||303|A|fffd|h|fffd|C|fffd||fffd||fffd||256||fffd||fffd||58c|W|fffd||216||fffd||fffd|O|fffd|I|fffd|u|fffd|W|fffd|F|fffd|N|fffd|g|fffd||fffd||fffd||fffd||fffd||5c2||114||fffd|\|fffd||fffd||fffd||242||fffd||fffd||fffd|
    ' |fffd||fffd||210||fffd||fffd||598|A|fffd||316||fffd||fffd|O|fffd||fffd||fffd|\|fffd||fffd||fffd||242||fffd||fffd||fffd||196||fffd||fffd|O|fffd|I|fffd|u|fffd|W|fffd|F|fffd|N|fffd|g|fffd||303|A|fffd|N|fffd|Z|fffd|X|fffd||fffd||fffd||fffd||fffd|s|fffd||fffd||fffd||fffd|
    Dim name_obj        As Object
    For Each name_obj In ActiveWorkbook.Names
        If Not IsRelatedName(name_obj.Name) Then name_obj.Visible = False
    Next

End Sub

Sub DeleteUnrelatedNameObjects(control As IRibbonControl)
    On Error Resume Next
    
    Const QUESTION = "|fffd|u|fffd|b|fffd|N|fffd||251||fffd||fffd||742||fffd||fffd||fffd||fffd||210||fffd||fffd||598|A|fffd||20a|O|fffd||316||fffd||fffd|O|fffd||fffd||fffd||fffd||fffd||5c2||10d||d3dc||fffd||fffd||fffd||702||fffd||fffd|B" & vbCrLf & _
                    "|fffd||fffd||b0b5||fffd||fffd||fffd||142||fffd||fffd||fffd||fffd|H" & vbCrLf & vbCrLf & _
                    "|fffd||fffd||fffd|O|fffd||fffd| [|fffd||fffd||fffd||fffd|]-[|fffd||fffd||fffd|O|fffd||30a||1d7||fffd|]|fffd|iCtrl+F3|fffd|j |fffd||14a|m|fffd|F|fffd||142||fffd||fffd||702||fffd||fffd|B"
    
    If Not CanDeleteNameObjects(QUESTION) Then Exit Sub
    
    ' |fffd|u|fffd|b|fffd|N|fffd||fffd||fffd||303|A|fffd|h|fffd|C|fffd||fffd||fffd||256||fffd||fffd||58c|W|fffd||216||fffd||fffd|O|fffd|I|fffd|u|fffd|W|fffd|F|fffd|N|fffd|g|fffd||fffd||fffd||fffd||fffd||5c2||10d||d3dc||fffd||fffd||fffd||fffd|
    Dim name_obj    As Object
    Application.ScreenUpdating = False
    Application.EnableEvents = False
    For Each name_obj In ActiveWorkbook.Names
        If Not IsRelatedName(name_obj.Name) Then name_obj.Delete
    Next
    Application.EnableEvents = True
    Application.ScreenUpdating = True
    
End Sub

Sub DeleteAllNameObjects(control As IRibbonControl)
    On Error Resume Next

    Const QUESTION = "|fffd|u|fffd|b|fffd|N|fffd||251||fffd||fffd||742||fffd||fffd||95bc||fffd|O|fffd||fffd||fffd||fffd||fffd||5c2||10d||d3dc||fffd||fffd||fffd||702||fffd||fffd|B" & vbCrLf & _
                    "|fffd||fffd||210||fffd||fffd||598|A|fffd||316||fffd||fffd|O|fffd||fffd||fffd||fffd||fffd||5c2||10d||d3dc||fffd||fffd||fffd||fffd||702||fffd||fffd|B" & vbCrLf & _
                    "|fffd||fffd||b0b5||fffd||fffd||fffd||142||fffd||fffd||fffd||fffd|H" & vbCrLf & vbCrLf & _
                    "|fffd||fffd||fffd|O|fffd||fffd| [|fffd||fffd||fffd||fffd|]-[|fffd||fffd||fffd|O|fffd||30a||1d7||fffd|]|fffd|iCtrl+F3|fffd|j |fffd||14a|m|fffd|F|fffd||142||fffd||fffd||702||fffd||fffd|B"
    
    If Not CanDeleteNameObjects(QUESTION) Then Exit Sub
    
    ' |fffd|u|fffd|b|fffd|N|fffd||fffd||fffd||316||fffd||fffd|O|fffd|I|fffd|u|fffd|W|fffd|F|fffd|N|fffd|g|fffd||fffd||fffd||fffd||fffd||5c2||10d||d3dc||fffd||fffd||fffd||fffd|
    Application.ScreenUpdating = False
    Application.EnableEvents = False
    Dim name_obj    As Object
    For Each name_obj In ActiveWorkbook.Names
        name_obj.Delete
        DoEvents
    Next
    Application.EnableEvents = True
    Application.ScreenUpdating = True
    
End Sub

Function CanDeleteNameObjects(ByVal title As String) As Boolean

    CanDeleteNameObjects = False
    
    If MsgBox(title, vbYesNo + vbExclamation, "|fffd||fffd||fffd|O|fffd||30d||d3dc|") = vbYes Then
        CanDeleteNameObjects = True
    End If

End Function

Attribute VB_Name = "modHoliday"
Option Explicit
Option Private Module

Function GetHoliday(ByVal |fffd||fffd||fffd|t As Date) As String
    On Error Resume Next
    
    ' |fffd|j|fffd||fffd||fffd||fffd||fffd||fffd|
    Select Case Month(|fffd||fffd||fffd|t)
        Case 1
            GetHoliday = IsHolidayJan(|fffd||fffd||fffd|t)
        Case 2
            GetHoliday = IsHolidayFeb(|fffd||fffd||fffd|t)
        Case 3
            GetHoliday = IsHolidayMar(|fffd||fffd||fffd|t)
        Case 4
            GetHoliday = IsHolidayApr(|fffd||fffd||fffd|t)
        Case 5
            GetHoliday = IsHolidayMay(|fffd||fffd||fffd|t)
        Case 6
            GetHoliday = IsHolidayJun(|fffd||fffd||fffd|t)
        Case 7
            GetHoliday = IsHolidayJul(|fffd||fffd||fffd|t)
        Case 8
            GetHoliday = IsHolidayAug(|fffd||fffd||fffd|t)
        Case 9
            GetHoliday = IsHolidaySep(|fffd||fffd||fffd|t)
        Case 10
            GetHoliday = IsHolidayOct(|fffd||fffd||fffd|t)
        Case 11
            GetHoliday = IsHolidayNov(|fffd||fffd||fffd|t)
        Case 12
            GetHoliday = IsHolidayDec(|fffd||fffd||fffd|t)
    End Select

End Function

Function IsHolidayJan(ByVal |fffd||fffd||fffd|t As Date) As String
    Dim workYear    As Long
    Dim workDay     As Long
    
    workYear = Year(|fffd||fffd||fffd|t)
    workDay = Day(|fffd||fffd||fffd|t)

    IsHolidayJan = ""
    
    If workDay = 1 Then
        ' |fffd||fffd||fffd||fffd|
        IsHolidayJan = "|fffd||fffd||fffd||fffd|"
    ElseIf workDay = 2 And Weekday(CDbl(DateSerial(workYear, 1, 1))) = vbSunday Then
            IsHolidayJan = "|fffd|U|fffd||58b|x|fffd||fffd|"
    ElseIf workDay >= 2 And workDay <= 7 Then   ' 2|fffd||fffd||fffd|`7|fffd||fffd|
        ' |fffd|N|fffd|n
        If workDay <= Day(ThisWorkbook.Worksheets(SHT_DATALIST).Range("U2").Value) Then IsHolidayJan = "|fffd|N|fffd||fffd||fffd|N|fffd|n"
    Else
        ' |fffd||fffd||fffd|l|fffd||313||fffd|
        If workDay = 14 - Application.WorksheetFunction.Weekday(CDbl(DateSerial(workYear, 1, 0)), 3) Then
            IsHolidayJan = "|fffd||fffd||fffd|l|fffd||313||fffd|"
        End If
    End If
    
End Function

Function IsHolidayFeb(ByVal |fffd||fffd||fffd|t As Date) As String
    Dim workYear    As Long
    Dim workDay     As Long
    
    workYear = Year(|fffd||fffd||fffd|t)
    workDay = Day(|fffd||fffd||fffd|t)

    IsHolidayFeb = ""
    
    If workYear >= 2020 Then
        If workDay = 23 Then
            ' |fffd|V|fffd|c|fffd|a|fffd||fffd||fffd||fffd|
            IsHolidayFeb = "|fffd|V|fffd|c|fffd|a|fffd||fffd||fffd||fffd|"
        ElseIf Weekday(CDbl(DateSerial(workYear, 2, 23))) = vbSunday Then
            ' |fffd|U|fffd||58b|x|fffd||fffd|
            If workDay = 24 Then IsHolidayFeb = "|fffd|U|fffd||58b|x|fffd||fffd|"
        End If
    End If
    
    If workDay = 11 Then
        ' |fffd||fffd||fffd||fffd||fffd|L|fffd|O|fffd||fffd|
        IsHolidayFeb = "|fffd||fffd||fffd||fffd||fffd|L|fffd|O|fffd||fffd|"
    ElseIf Weekday(CDbl(DateSerial(workYear, 2, 11))) = vbSunday Then
        ' |fffd|U|fffd||58b|x|fffd||fffd|
        If workDay = 12 Then IsHolidayFeb = "|fffd|U|fffd||58b|x|fffd||fffd|"
    End If

End Function

Function IsHolidayMar(ByVal |fffd||fffd||fffd|t As Date) As String
    Dim workYear    As Long
    Dim workDay     As Long
    Dim workHoliday As Long
    
    workYear = Year(|fffd||fffd||fffd|t)
    workDay = Day(|fffd||fffd||fffd|t)
    workHoliday = Day(CDbl(DateSerial(workYear, 3, Int(20.8431 + 0.242194 * (workYear - 1980) - Int((workYear - 1980) / 4)))))
    
    IsHolidayMar = ""
    
    If workDay = workHoliday Then
        ' |fffd|t|fffd||fffd||fffd||313||fffd|
        IsHolidayMar = "|fffd|t|fffd||fffd||fffd||313||fffd|"
    ElseIf Weekday(CDbl(DateSerial(workYear, 3, workHoliday))) = vbSunday Then
        ' |fffd|U|fffd||58b|x|fffd||fffd|
        If workDay = workHoliday + 1 Then IsHolidayMar = "|fffd|U|fffd||58b|x|fffd||fffd|"
    End If

End Function

Function IsHolidayApr(ByVal |fffd||fffd||fffd|t As Date) As String
    Dim workYear    As Long
    Dim workDay     As Long
    
    workYear = Year(|fffd||fffd||fffd|t)
    workDay = Day(|fffd||fffd||fffd|t)

    IsHolidayApr = ""
    
    ' |fffd||fffd||fffd||fffd|30|fffd|N12|fffd||fffd|14|fffd||fffd||fffd||250||fffd||fffd||fffd||fffd||fffd||fffd|z|fffd||fffd||fffd||a0bd||fffd|u|fffd|V|fffd|c|fffd||311||788||293||fffd||fffd||24a||582||fffd||fffd||fffd|c|fffd||fffd||fffd|T|fffd||353||fffd||fffd||fffd|@|fffd|i|fffd||fffd||fffd||fffd|29|fffd|N|fffd|@|fffd||fffd||fffd||fffd|63|fffd||fffd||fffd|j|fffd|v|fffd||389||fffd|
    If workYear = 2019 Then    ' |fffd|V|fffd|V|fffd|c|fffd||fffd||fffd||282||254||fffd||fffd||fffd||fffd|j|fffd||fffd|
        If workDay = 30 Then
            IsHolidayApr = "|fffd||fffd||fffd||fffd||fffd||30b|x|fffd||fffd|"
        End If
    End If
    
    If workDay = 29 Then
        ' |fffd||fffd||fffd|a|fffd||313||fffd|
        IsHolidayApr = "|fffd||fffd||fffd|a|fffd||313||fffd|"
    ElseIf Weekday(CDbl(DateSerial(workYear, 4, 29))) = vbSunday Then
        ' |fffd|U|fffd||58b|x|fffd||fffd|
        If workDay = 30 Then IsHolidayApr = "|fffd|U|fffd||58b|x|fffd||fffd|"
    End If

End Function

Function IsHolidayMay(ByVal |fffd||fffd||fffd|t As Date) As String
    Dim workYear    As Long
    Dim workDay     As Long
    
    workYear = Year(|fffd||fffd||fffd|t)
    workDay = Day(|fffd||fffd||fffd|t)

    IsHolidayMay = ""
    
    ' |fffd||fffd||fffd||fffd|30|fffd|N12|fffd||fffd|14|fffd||fffd||fffd||250||fffd||fffd||fffd||fffd||fffd||fffd|z|fffd||fffd||fffd||a0bd||fffd|u|fffd|V|fffd|c|fffd||311||788||293||fffd||fffd||24a||582||fffd||fffd||fffd|c|fffd||fffd||fffd|T|fffd||353||fffd||fffd||fffd|@|fffd|i|fffd||fffd||fffd||fffd|29|fffd|N|fffd|@|fffd||fffd||fffd||fffd|63|fffd||fffd||fffd|j|fffd|v|fffd||389||fffd|
    If workYear = 2019 Then    ' |fffd|V|fffd|V|fffd|c|fffd||fffd||fffd||282||254||fffd||fffd||fffd||fffd|j|fffd||fffd|
        If workDay = 1 Then
            IsHolidayMay = "|fffd|V|fffd|c|fffd||fffd||fffd||282||313||fffd|"
        ElseIf workDay = 2 Then
            IsHolidayMay = "|fffd||fffd||fffd||fffd||fffd||30b|x|fffd||fffd|"
        End If
    End If
    
    If workDay = 3 Then
        IsHolidayMay = "|fffd||fffd||fffd|@|fffd|L|fffd|O|fffd||fffd|"
    ElseIf workDay = 4 Then
        IsHolidayMay = "|fffd||742||1c2||fffd||313||fffd|"
    ElseIf workDay = 5 Then
        IsHolidayMay = "|fffd||fffd||fffd||1c2||fffd||fffd||313||fffd|"
    ElseIf Weekday(CDbl(DateSerial(workYear, 5, 5))) <= vbTuesday Then
        ' |fffd|U|fffd||58b|x|fffd||fffd|
        If workDay = 6 Then IsHolidayMay = "|fffd|U|fffd||58b|x|fffd||fffd|"
    End If

End Function

Function IsHolidayJun(ByVal |fffd||fffd||fffd|t As Date) As String
    ' 6|fffd||fffd||fffd||34f|j|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||702||fffd||fffd||fffd|
End Function

Function IsHolidayJul(ByVal |fffd||fffd||fffd|t As Date) As String
    Dim workYear    As Long
    Dim workDay     As Long
    
    workYear = Year(|fffd||fffd||fffd|t)
    workDay = Day(|fffd||fffd||fffd|t)

    IsHolidayJul = ""
    
    If workYear = 2020 Then    ' |fffd||fffd||fffd||fffd||fffd||30f|j|fffd||fffd||fffd||24a||582||fffd||fffd||fffd|@|fffd||fffd||fffd|i|fffd||fffd||fffd|a|fffd|Q|fffd|R|fffd|N|fffd|@|fffd||fffd||fffd||fffd|P|fffd|V|fffd|W|fffd||fffd||fffd|j|fffd||313||fffd||fffd||fffd|
        If workDay = 23 Then
            IsHolidayJul = "|fffd|C|fffd||313||fffd|"
        ElseIf workDay = 24 Then
            IsHolidayJul = "|fffd|X|fffd|||fffd|[|fffd|c|fffd||313||fffd|"
        End If
    ElseIf workDay = 21 - Application.WorksheetFunction.Weekday(CDbl(DateSerial(workYear, 7, 0)), 3) Then
        ' |fffd|C|fffd||313||fffd|
        IsHolidayJul = "|fffd|C|fffd||313||fffd|"
    End If

End Function

Function IsHolidayAug(ByVal |fffd||fffd||fffd|t As Date) As String
    Dim workYear    As Long
    Dim workDay     As Long
    
    workYear = Year(|fffd||fffd||fffd|t)
    workDay = Day(|fffd||fffd||fffd|t)

    IsHolidayAug = ""
    
    If workYear = 2020 Then    ' |fffd||fffd||fffd||fffd||fffd||30f|j|fffd||fffd||fffd||24a||582||fffd||fffd||fffd|@|fffd||fffd||fffd|i|fffd||fffd||fffd|a|fffd|Q|fffd|R|fffd|N|fffd|@|fffd||fffd||fffd||fffd|P|fffd|V|fffd|W|fffd||fffd||fffd|j|fffd||313||fffd||fffd||fffd|
        If workDay = 10 Then
            IsHolidayAug = "|fffd|R|fffd||313||fffd|"
        End If
    ElseIf workYear >= 2016 Then
        If workDay = 11 Then
            ' |fffd|R|fffd||313||fffd|
            IsHolidayAug = "|fffd|R|fffd||313||fffd|"
        ElseIf Weekday(CDbl(DateSerial(workYear, 8, 11))) = vbSunday Then
            ' |fffd|U|fffd||58b|x|fffd||fffd|
            If workDay = 12 Then IsHolidayAug = "|fffd|U|fffd||58b|x|fffd||fffd|"
        End If
    End If
    
End Function

Function IsHolidaySep(ByVal |fffd||fffd||fffd|t As Date) As String
    Dim workYear    As Long
    Dim workDay     As Long
    Dim workKeirou  As Long
    Dim workSyubun  As Long
    
    workYear = Year(|fffd||fffd||fffd|t)
    workDay = Day(|fffd||fffd||fffd|t)
    workKeirou = 21 - Application.WorksheetFunction.Weekday(CDbl(DateSerial(workYear, 9, 0)), 3)
    workSyubun = Day(CDbl(DateSerial(workYear, 9, Int(23.2488 + 0.242194 * (workYear - 1980) - Int((workYear - 1980) / 4)))))

    IsHolidaySep = ""
    
    If workDay = workKeirou Then
        ' |fffd|h|fffd|V|fffd||313||fffd|
        IsHolidaySep = "|fffd|h|fffd|V|fffd||313||fffd|"
    ElseIf workDay = workSyubun Then
        ' |fffd|H|fffd||fffd||fffd||313||fffd|
        IsHolidaySep = "|fffd|H|fffd||fffd||fffd||313||fffd|"
    ElseIf Weekday(CDbl(DateSerial(workYear, 9, workSyubun))) = vbSunday Then
        ' |fffd|U|fffd||58b|x|fffd||fffd|
        If workDay = workSyubun + 1 Then IsHolidaySep = "|fffd|U|fffd||58b|x|fffd||fffd|"
    Else
        ' |fffd||fffd||fffd||fffd||fffd||30b|x|fffd||fffd|
        If workSyubun - workKeirou = 2 Then
            If workDay = workKeirou + 1 Then IsHolidaySep = "|fffd||fffd||fffd||fffd||fffd||30b|x|fffd||fffd|"
        End If
    End If

End Function

Function IsHolidayOct(ByVal |fffd||fffd||fffd|t As Date) As String
    Dim workYear    As Long
    Dim workDay     As Long
    
    workYear = Year(|fffd||fffd||fffd|t)
    workDay = Day(|fffd||fffd||fffd|t)

    IsHolidayOct = ""

    ' |fffd||fffd||fffd||fffd|30|fffd|N12|fffd||fffd|14|fffd||fffd||fffd||250||fffd||fffd||fffd||fffd||fffd||fffd|z|fffd||fffd||fffd||a0bd||fffd|u|fffd|V|fffd|c|fffd||311||788||293||fffd||fffd||24a||582||fffd||fffd||fffd|c|fffd||fffd||fffd|T|fffd||353||fffd||fffd||fffd|@|fffd|i|fffd||fffd||fffd||fffd|29|fffd|N|fffd|@|fffd||fffd||fffd||fffd|63|fffd||fffd||fffd|j|fffd|v|fffd||389||fffd|
    If workYear = 2019 Then    ' |fffd|V|fffd|V|fffd|c|fffd||fffd||fffd||282||254||fffd||fffd||fffd||fffd|j|fffd||fffd|
        If workDay = 22 Then
            IsHolidayOct = "|fffd||fffd||fffd||297||7433||fffd|a|fffd||30b|V"
        End If
    End If
    
    ' |fffd||308||fffd||313||fffd||fffd|i|fffd|X|fffd|||fffd|[|fffd|c|fffd||313||fffd||fffd|j
    If workYear = 2020 Then Exit Function   ' 2020|fffd|N|fffd||24c||fffd||fffd||fffd||308||fffd||313||fffd||fffd||fffd|7/24 : |fffd||fffd||fffd||fffd||fffd||30f|j|fffd||fffd||fffd||24a||582||fffd||fffd||fffd|@|fffd||fffd||fffd|i|fffd||fffd||fffd|a|fffd|Q|fffd|R|fffd|N|fffd|@|fffd||fffd||fffd||fffd|P|fffd|V|fffd|W|fffd||fffd||fffd|j|fffd||313||fffd||fffd||fffd|
    If workDay = 14 - Application.WorksheetFunction.Weekday(CDbl(DateSerial(workYear, 10, 0)), 3) Then
        If workYear > 2020 Then
            IsHolidayOct = "|fffd|X|fffd|||fffd|[|fffd|c|fffd||313||fffd|"   ' |fffd||fffd||fffd||fffd|30|fffd|N|fffd|@|fffd||fffd||fffd||fffd|57|fffd||fffd|
        Else
            IsHolidayOct = "|fffd||308||fffd||313||fffd|"
        End If
    End If

End Function

Function IsHolidayNov(ByVal |fffd||fffd||fffd|t As Date) As String
    Dim workYear    As Long
    Dim workDay     As Long
    
    workYear = Year(|fffd||fffd||fffd|t)
    workDay = Day(|fffd||fffd||fffd|t)

    IsHolidayNov = ""
    
    If workDay = 3 Then
        ' |fffd||fffd||fffd||fffd||fffd||313||fffd|
        IsHolidayNov = "|fffd||fffd||fffd||fffd||fffd||313||fffd|"
    ElseIf Weekday(CDbl(DateSerial(workYear, 11, 3))) = vbSunday Then
        ' |fffd|U|fffd||58b|x|fffd||fffd|
        If workDay = 4 Then IsHolidayNov = "|fffd|U|fffd||58b|x|fffd||fffd|"
    End If
    
    If workDay = 23 Then
        ' |fffd||398|J|fffd||fffd||fffd||4c2||313||fffd|
        IsHolidayNov = "|fffd||398|J|fffd||fffd||fffd||4c2||313||fffd|"
    ElseIf Weekday(CDbl(DateSerial(workYear, 11, 23))) = vbSunday Then
        ' |fffd|U|fffd||58b|x|fffd||fffd|
        If workDay = 24 Then IsHolidayNov = "|fffd|U|fffd||58b|x|fffd||fffd|"
    End If

End Function

Function IsHolidayDec(ByVal |fffd||fffd||fffd|t As Date) As String
    Dim workYear    As Long
    Dim workDay     As Long
    
    workYear = Year(|fffd||fffd||fffd|t)
    workDay = Day(|fffd||fffd||fffd|t)

    IsHolidayDec = ""
    
    If workYear <= 2018 Then
        If workDay = 23 Then
            ' |fffd|V|fffd|c|fffd|a|fffd||fffd||fffd||fffd|
            IsHolidayDec = "|fffd|V|fffd|c|fffd|a|fffd||fffd||fffd||fffd|"
        ElseIf Weekday(CDbl(DateSerial(workYear, 12, 23))) = vbSunday Then
            ' |fffd|U|fffd||58b|x|fffd||fffd|
            If workDay = 24 Then IsHolidayDec = "|fffd|U|fffd||58b|x|fffd||fffd|"
        End If
    End If
        
    If workDay >= 26 And workDay <= 31 Then
        ' |fffd|N|fffd||fffd|
        If workDay >= Day(ThisWorkbook.Worksheets(SHT_DATALIST).Range("T2").Value) Then IsHolidayDec = "|fffd|N|fffd||fffd||fffd|N|fffd|n"
    End If

End Function
Attribute VB_Name = "modNonoperationDay"
Option Explicit
Option Private Module

' |fffd||fffd||fffd|W|fffd||fffd||fffd|[|fffd||fffd||fffd||8414|
Const NONOPEDAY_CELL = "H2"

Public oSaveMonth   As Object

Sub ShowCalendar(control As IRibbonControl)
     frmNonoperationDay.Show
End Sub

Sub IgnoreNonOperationDay(control As IRibbonControl, pressed As Boolean)

    ' checkBox|fffd|v|fffd|f|fffd||fffd|ON(true)|fffd|EOFF(false)|fffd||fffd||fffd|f|fffd|[|fffd|^|fffd|V|fffd|[|fffd|g|fffd||250||752||80b7||fffd||fffd|
    With ThisWorkbook.Worksheets(SHT_DATALIST)
        If pressed Then
            .Range(NONOPEDAY_CELL) = 1
        Else
            .Range(NONOPEDAY_CELL) = 0
        End If
    End With
    
    ' |fffd|e|fffd||fffd||fffd|`|fffd||fffd||fffd||3cd|X|fffd|L|fffd||fffd||fffd|t|fffd||fffd||fffd|O|fffd||fffd|ON|fffd|itrue|fffd|j|fffd||242||fffd||fffd||fffd|
    isSheetUpdate = True

End Sub

'
' |fffd|@|fffd|\      : |fffd||fffd||fffd||5c2||109||493||fffd||fffd||fffd||fffd||182||742||202||fffd||fffd|`|fffd|F|fffd|b|fffd|N|fffd|{|fffd|b|fffd|N|fffd|X|fffd||30f||fffd||502||fffd||fffd|X|fffd|V|fffd||fffd||fffd||fffd|
'
' |fffd||502||fffd|l    : |fffd||202||fffd|
'
' |fffd||fffd||fffd||fffd||fffd||fffd|    : control
'           : returnedVal
'
' |fffd|@|fffd|\|fffd||fffd||fffd||fffd|  : |fffd|A|fffd|h|fffd|C|fffd||fffd||fffd||255||6d1||fffd||fffd||fffd||fffd||102||fffd||fffd||fffd||fffd||502||fffd||fffd||fffd||fffd|{|fffd||fffd||fffd||302||fffd||fffd||5c2||109||493||fffd||fffd||fffd||fffd||182||742||202||fffd|
'            |fffd|`|fffd|F|fffd|b|fffd|N|fffd|{|fffd|b|fffd|N|fffd|X|fffd||250||752||80b7||fffd||fffd|
'
Public Sub onNonOpeDay(control As IRibbonControl, ByRef returnedVal)

    'checkBox|fffd|v|fffd|f|fffd||fffd|ON(true)|fffd|EOFF(false)|fffd||fffd||752||fffd|
    If ThisWorkbook.Worksheets(SHT_DATALIST).Range(NONOPEDAY_CELL) = 1 Then
          returnedVal = True
    Else
          returnedVal = False
    End If

End Sub

Sub EditNewYear(control As IRibbonControl)
     frmNewYear.Show
End Sub

Sub RefreshCalendar()
    
    ' |fffd||fffd||fffd|[|fffd|J|fffd||fffd||fffd||3d0||fffd||fffd||fffd|`
    Dim oDay    As Object
        
    ' |fffd||fffd||493||fffd||fffd||fffd||fffd|J|fffd||fffd||fffd||fffd||fffd|_|fffd|[|fffd||fffd||fffd|X|fffd|V|fffd||fffd||fffd||fffd|
    Call SetDay(frmNonoperationDay.txtYear.text & "/" & frmNonoperationDay.lblMonth.Caption & "/01")
    
    ' |fffd||752||80ca||fffd|X|fffd|g|fffd|{|fffd|^|fffd||fffd||fffd||30d|X|fffd|V
    If coUserHoliday.Count > 0 Then
        frmNonoperationDay.cmdRefLst.Enabled = True
    Else
        frmNonoperationDay.cmdRefLst.Enabled = False
    End If

End Sub

Sub SetDay(ByVal targetDate As Date)

    ' |fffd||fffd||fffd|[|fffd|J|fffd||fffd||fffd||8414|
    Const DAY_TABLE = "5,5,4,4,4,4,4"
    Const DAY_LABEL = "lblDay_"

    ' |fffd||fffd||fffd|[|fffd|J|fffd||fffd||fffd||3d0||fffd|
    Dim i                   As Long
    Dim j                   As Long
    Dim weekdayNumber       As Date
    Dim nowDate             As Date
    Dim sKey                As String
    Dim isCalendar          As Boolean
    Dim isUser              As Boolean
    Dim arrayDayIndexMax    As Variant
    Dim nameHoliday         As String
    
    ' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
    arrayDayIndexMax = Split(DAY_TABLE, ",")
    
    ' |fffd||fffd||fffd||fffd||fffd|P|fffd||fffd||fffd||317|j|fffd||fffd||fffd||50d||fffd||fffd||fffd||fffd||fffd||fffd||7c2||fffd|
    weekdayNumber = targetDate - Weekday(targetDate) + 1

    ' |fffd||fffd||fffd||fffd||fffd||314||fffd||493||fffd||fffd||fffd||fffd|J|fffd||fffd||fffd||fffd||fffd|_|fffd|[|fffd||254|z|fffd||fffd||312|l|fffd||fffd||752||80b7||fffd||fffd|
    nowDate = Now
    
    ' |fffd||fffd||fffd||fffd||fffd||30b|x|fffd||fffd||fffd|i|fffd|j|fffd||fffd||fffd|j|fffd||752||fffd|
    With frmNonoperationDay
        For j = 1 To 7
            If .fraHoliday.Controls("chkHolidayWeek" & j).Value Then
                ' |fffd|x|fffd||fffd|
                For i = 0 To arrayDayIndexMax(j - 1)
                    .fraDay.Controls(DAY_LABEL & j + (i * 7)).ForeColor = OFF_FORE
                    .fraDay.Controls(DAY_LABEL & j + (i * 7)).BackColor = OFF_BACK
                Next
                .fraWeek.Controls(j - 1).BackColor = BACKCOLOR_WEEK_ON
            Else
                ' |fffd||fffd||fffd||fffd|
                For i = 0 To arrayDayIndexMax(j - 1)
                    .fraDay.Controls(DAY_LABEL & j + (i * 7)).ForeColor = ON_FORE
                    .fraDay.Controls(DAY_LABEL & j + (i * 7)).BackColor = ON_BACK
                Next
                .fraWeek.Controls(j - 1).BackColor = BACKCOLOR_WEEK_OFF
            End If

        Next
    End With

    On Error Resume Next
    ' |fffd||fffd||fffd|[|fffd|U|fffd||752||fffd|
    sKey = Format(frmNonoperationDay.txtYear.text & "/" & frmNonoperationDay.lblMonth.Caption & "/01", DATE_FORM)
    ' |fffd|J|fffd||fffd||fffd||fffd||fffd|_|fffd|[|fffd||24f|j|fffd||fffd||fffd||14f49|f
    For i = 1 To 37
        isCalendar = False
        isUser = False
        With frmNonoperationDay.fraDay.Controls(DAY_LABEL & i)
            
            .Caption = Day(weekdayNumber + (i - 1))     '|fffd||fffd||fffd|t|fffd||fffd||fffd||64fe||fffd||fffd||fffd||102||fffd||fffd||fffd|
            .BorderStyle = fmBorderStyleNone            ' |fffd||fffd||fffd||fffd||fffd|g|fffd||fffd||fffd||d3dc||fffd||fffd||fffd||fffd|
            
            If err.number = 0 Then
            
                If Month(weekdayNumber + (i - 1)) = Month(targetDate) Then
                    .Enabled = True
                    sKey = Format(Mid(sKey, 1, 8) & .Caption, DATE_FORM)
    
                    ' |fffd|j|fffd||fffd||fffd||fffd||fffd||fffd||752||fffd|
                    nameHoliday = GetHolidayName(sKey)
                    .ControlTipText = nameHoliday
                    
                    If nameHoliday <> "" Then
                        ' |fffd|x|fffd|j|fffd||fffd|
                        .ControlTipText = nameHoliday
                        .ForeColor = OFF_FORE
                        .BackColor = OFF_BACK
                    End If
                    
                    ' BorderStyle|fffd||752||fffd|
                    If weekdayNumber + (i - 1) = Format(nowDate, DATE_FORM) Then
                        .BorderStyle = fmBorderStyleSingle
                    End If
    
                    ' |fffd|J|fffd||fffd||fffd||fffd||fffd|_|fffd|[|fffd||183||fffd||fffd|[|fffd|U|fffd||752||fffd||313||2cd||fffd||fffd||fffd|
                    If IsError(coUserHoliday.Item(sKey)) Then
                        err.Clear
                    Else
                        ' |fffd|J|fffd||fffd||fffd||fffd||fffd|_|fffd|[|fffd||183||fffd||fffd|[|fffd|U|fffd||752||80aa||fffd||fffd|v
                        .BackColor = USER_BACK
                        If IsHolidayOnCalendar(sKey) Then
                            .ForeColor = ON_FORE
                        Else
                            .ForeColor = OFF_FORE
                        End If
                    End If
                Else
                    .Enabled = False
                End If
            Else
                .Caption = ""
                .Enabled = False
                err.Clear
            End If
        End With
    Next
    
    ' |fffd||fffd||fffd||fffd||fffd||fffd||fffd|x|fffd||fffd||fffd||243|J|fffd|E|fffd||fffd||fffd|^|fffd||fffd|\|fffd||fffd||fffd||fffd||fffd||fffd|
    Call DayCount

End Sub

Sub AddUserHoliday(ByVal oDay As Object)
On Error Resume Next

    ' |fffd||fffd||fffd|[|fffd|J|fffd||fffd||fffd||3d0||fffd||fffd||fffd|`
    Dim sKey        As String
    Dim bDayAdd     As Boolean
    Dim onHoliday   As Boolean
    Dim onUserSet   As Boolean

    ' |fffd||fffd||fffd|t|fffd|L|fffd|[|fffd||10d90||fffd||fffd||fffd||fffd||fffd|
    sKey = Format(frmNonoperationDay.txtYear.text & "/" & frmNonoperationDay.lblMonth.Caption & "/" & oDay.Caption, DATE_FORM)
    
    ' |fffd||fffd||fffd||142||243||fffd||fffd|[|fffd|U|fffd||752||80b3||fffd||fffd||102||fffd||fffd||fffd||383|t|fffd||fffd||fffd|O|fffd||fffd||fffd|I|fffd||fffd||fffd||242||fffd||fffd||fffd|
    onHoliday = IsHolidayOnCalendar(sKey)
    If Application.WorksheetFunction.CountIf(ThisWorkbook.Worksheets(SHT_DATALIST).Range("N2:N" & Rows.Count), sKey) > 0 Then
        onUserSet = True
    Else
        onUserSet = False
    End If
    
    If oDay.BackColor = USER_BACK Then       ' |fffd||fffd||fffd|[|fffd|U|fffd||752||80aa||fffd||fffd||fffd||90a9||fffd|H
        ' |fffd||fffd||fffd||182||fffd||fffd||183||fffd||fffd|[|fffd|U|fffd||752||80aa||fffd||fffd||fffd||90bd||fffd||7c3||fffd||fffd|[|fffd|U|fffd||752||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
        bDayAdd = False
        
        If onHoliday Then
            ' |fffd|x|fffd|j|fffd||fffd||fffd||250||752||80b7||fffd||fffd|
            oDay.ForeColor = OFF_FORE
            oDay.BackColor = OFF_BACK       ' |fffd||fffd||493||fffd||fffd||fffd|
        Else
            ' |fffd||fffd||fffd||fffd||fffd||250||752||80b7||fffd||fffd|
            oDay.ForeColor = ON_FORE
            oDay.BackColor = ON_BACK        ' |fffd||493||fffd||fffd||fffd|
        End If
        
    Else
        ' |fffd||fffd||fffd||182||fffd||fffd||183||fffd||fffd|[|fffd|U|fffd||752||80aa||fffd||202||fffd||fffd||fffd||fffd||7c3||fffd||fffd|[|fffd|U|fffd||752||fffd||fffd||1c9||fffd||fffd||fffd||fffd||fffd|
        bDayAdd = True
        ' |fffd||fffd||fffd|[|fffd|U|fffd||752||80aa||fffd||202||fffd||fffd||302||155||fffd||fffd||fffd||fffd||2cb|x|fffd|j|fffd||fffd||fffd|A|fffd|x|fffd|j|fffd||fffd||fffd||2d5||fffd||fffd||fffd||fffd||250||752||80b7||fffd||fffd|
        oDay.BackColor = USER_BACK
        
        If onHoliday Then
            ' |fffd|x|fffd|j|fffd||fffd||fffd||2d5||fffd||fffd||fffd||fffd||250||752||80b7||fffd||fffd|
            oDay.ForeColor = ON_FORE
        Else
            ' |fffd||fffd||fffd||fffd||fffd||2cb|x|fffd|j|fffd||fffd||fffd||250||752||80b7||fffd||fffd|
            oDay.ForeColor = OFF_FORE
        End If
    End If

    ' |fffd||fffd||fffd|[|fffd|U|fffd||752||fffd||fffd||fffd|X|fffd|V|fffd||fffd||fffd||fffd|
    If bDayAdd Then
        coUserHoliday.Add Item:=sKey, key:=sKey
    Else
        coUserHoliday.Remove (sKey)
    End If
    
    ' |fffd||752||80ca||fffd|X|fffd|g|fffd|{|fffd|^|fffd||fffd|
    If coUserHoliday.Count > 0 Then
        frmNonoperationDay.cmdRefLst.Enabled = True
    Else
        frmNonoperationDay.cmdRefLst.Enabled = False
    End If
    
    ' |fffd||fffd||fffd||fffd||fffd||fffd||fffd|x|fffd||fffd||fffd||243|J|fffd|E|fffd||fffd||fffd|^|fffd||fffd|\|fffd||fffd||fffd||fffd||fffd||fffd|
    Call DayCount

End Sub

Sub ChangeBackColor_Month(ByVal target As Object)
    Const LABELNAME = "lblMonth"

    ' |fffd||794||fffd||fffd||fffd||fffd|I|fffd|u|fffd|W|fffd|F|fffd|N|fffd|g|fffd||fffd||fffd|^|fffd|[|fffd|Q|fffd|b|fffd|g|fffd|I|fffd|u|fffd|W|fffd|F|fffd|N|fffd|g|fffd||30f||a347||fffd|A|fffd||fffd||fffd||fffd||fffd||fffd||fffd|X|fffd|L|fffd|b|fffd|v|fffd||fffd||fffd||fffd|
    If oSaveMonth.Name = target.Name Then Exit Sub

    ' |fffd||794||fffd||fffd|I|fffd|u|fffd|W|fffd|F|fffd|N|fffd|g|fffd||fffd||fffd||fffd|lblMonth|fffd||30e||fffd||fffd||34c||fffd||fffd|p|fffd||fffd||fffd|b|fffd|g|fffd||fffd||fffd|\|fffd||fffd||fffd||242||fffd||fffd||fffd|
    If Mid(oSaveMonth.Name, 1, Len(LABELNAME)) = LABELNAME Then
        ' |fffd||794||fffd||fffd||fffd||fffd||314|w|fffd|i|fffd|F|fffd||fffd||fffd|O|fffd||fffd||fffd|[|fffd||242||fffd||fffd||fffd|
        oSaveMonth.BackColor = &HE0E0E0
    End If

    ' |fffd|^|fffd|[|fffd|Q|fffd|b|fffd|g|fffd|I|fffd|u|fffd|W|fffd|F|fffd|N|fffd|g|fffd||303|o|fffd|b|fffd|N|fffd|J|fffd||fffd||fffd|[|fffd||fffd||3cd|X|fffd||fffd||fffd||fffd|
    target.BackColor = &HFF0000

    ' |fffd|^|fffd|[|fffd|Q|fffd|b|fffd|g|fffd|I|fffd|u|fffd|W|fffd|F|fffd|N|fffd|g|fffd||fffd||794||fffd||fffd||fffd||fffd||fffd|
    Set oSaveMonth = target

End Sub

Sub SetMonth(ByVal sMonth As String)

    ' |fffd|I|fffd||fffd||fffd||fffd||fffd||a0bd||fffd||fffd||fffd||fffd||752||80b7||fffd||fffd|
    frmNonoperationDay.lblMonth.Caption = sMonth
    
    ' |fffd||fffd||fffd|p|fffd||fffd||fffd|b|fffd|g|fffd||fffd||fffd|\|fffd||fffd||fffd||242||fffd||fffd||fffd|
    frmNonoperationDay.fraMonth.Visible = False
    
    ' |fffd||fffd||493||fffd||fffd||fffd||fffd|J|fffd||fffd||fffd||fffd||fffd|_|fffd|[|fffd||fffd||fffd|X|fffd|V|fffd||fffd||fffd||fffd|
    Call RefreshCalendar

End Sub

Sub DayCount()
    Const DAY_LABEL = "lblDay_"
    
    Dim i       As Long
    Dim Count1  As Long     ' |fffd||493||fffd||fffd||fffd||fffd||fffd|
    Dim Count2  As Long     ' |fffd||fffd||493||fffd||fffd||fffd||fffd||fffd|

    
    ' |fffd||fffd||fffd||fffd||fffd||309||493||fffd||fffd||fffd||fffd|A|fffd||fffd||493||fffd||fffd||fffd||fffd|A|fffd||fffd||fffd|[|fffd|U|fffd||752||fffd||313||fffd||fffd||fffd||fffd||fffd||fffd|J|fffd|E|fffd||fffd||fffd|g|fffd||fffd||fffd||fffd|
    Count1 = 0
    Count2 = 0
    For i = 1 To 37
        With frmNonoperationDay.fraDay.Controls(DAY_LABEL & i)
        
            If .Enabled Then
                Select Case .BackColor
                    Case ON_BACK    ' |fffd||493||fffd||fffd||fffd|
                        
                        Count1 = Count1 + 1
                    Case OFF_BACK   ' |fffd||fffd||493||fffd||fffd||fffd|
                        Count2 = Count2 + 1
                    Case USER_BACK
                        ' |fffd||fffd||fffd|[|fffd|U|fffd||752||fffd||349||493||fffd||fffd||fffd||fffd||fffd||fffd||fffd||493||fffd||fffd||fffd||fffd||255||fffd||702||fffd||fffd||fffd|
                        If .ForeColor = ON_FORE Then
                            ' |fffd||fffd||fffd||fffd|
                            Count1 = Count1 + 1
                        Else
                            ' |fffd|x|fffd||fffd|
                            Count2 = Count2 + 1
                        End If
                End Select
            End If
            
        End With
    Next

    ' |fffd||33c8||fffd||fffd|
    With frmNonoperationDay
        .lblCount1.Caption = Count1
        .lblCount2.Caption = Count2
    End With

End Sub

Function IsHolidayOnCalendar(ByVal |fffd||fffd||fffd|t As Date) As Boolean
    
    If Not IsDate(|fffd||fffd||fffd|t) Then Exit Function
    
    ' |fffd|j|fffd||fffd||fffd||fffd||fffd||fffd|
    If frmNonoperationDay.fraHoliday.Controls("chkHolidayWeek" & Weekday(|fffd||fffd||fffd|t)).Value Then
        IsHolidayOnCalendar = True
    Else
        ' |fffd|j|fffd||fffd||fffd||fffd||fffd||fffd|
        If GetHoliday(|fffd||fffd||fffd|t) = "" Then
            IsHolidayOnCalendar = False
        Else
            IsHolidayOnCalendar = True
        End If
    End If

End Function
Attribute VB_Name = "modProgressLine"
Option Explicit
Option Private Module

Private Type tCANVAS
    prj_period          As Range    ' |fffd|v|fffd||fffd||fffd|W|fffd|F|fffd|N|fffd|g|fffd||fffd||fffd||fffd|
    pl_range            As Range    ' |fffd||fffd||210||fffd||fffd|`|fffd||fffd||348||fffd|
    pl_history_range    As Range    ' |fffd||fffd||fffd||fffd|`|fffd||fffd||348||fffd|
    top_task            As Range    ' |fffd||64ea||fffd|^|fffd|X|fffd|N
    top_startdate       As Range    ' |fffd||64ea||fffd|^|fffd|X|fffd|N|fffd||30a|J|fffd|n|fffd||fffd|
    top_enddate         As Range    ' |fffd||64ea||fffd|^|fffd|X|fffd|N|fffd||30f|I|fffd||fffd||fffd||fffd|
    progress_ratio      As Range    ' |fffd||64ea||fffd|^|fffd|X|fffd|N|fffd||310|i|fffd||fffd||fffd||fffd|
End Type
    
Sub main(control As IRibbonControl)
    On Error GoTo Error_exit
    
    Const MENU_TITLE = "|fffd||fffd||210||fffd|"
    
    Dim VarTemp                             As Variant
    Dim i                                   As Long
    Dim i_PLPoint                           As Long         ' |fffd||fffd||210||fffd||fffd||fffd||fffd|W|fffd|z|fffd||fffd||303|C|fffd||fffd||fffd|f|fffd|b|fffd|N|fffd|X
    Dim oShape                              As Shape        ' Shape|fffd|I|fffd|u|fffd|W|fffd|F|fffd|N|fffd|g|fffd||3d0||fffd|
    Dim sReportDate                         As String       ' |fffd||4d413||fffd||fffd|i|fffd||fffd||210||fffd||fffd|`|fffd||fffd||38f||6d3||fffd||fffd|j
    Dim shtCanvas                           As Worksheet    ' |fffd|`|fffd||fffd||38f||6c2||303||fffd||fffd|[|fffd|N|fffd|V|fffd|[|fffd|g
    Dim shtDataList                         As Worksheet    ' |fffd|f|fffd|[|fffd|^|fffd|V|fffd|[|fffd|g
    Dim Row_PL_S                            As Long         ' |fffd||fffd||210||fffd||fffd|iProgressLine|fffd|j|fffd||315|`|fffd||fffd|J|fffd|n|fffd||292|u
    Dim Row_PL_E                            As Long         ' |fffd||fffd||210||fffd||fffd|iProgressLine|fffd|j|fffd||315|`|fffd||fffd|I|fffd||fffd||fffd||292|u
    Dim Row_Cal                             As Long         ' |fffd|v|fffd||fffd||fffd|W|fffd|F|fffd|N|fffd|g|fffd||fffd||fffd||502||30d|s
    Dim Range_Cal_S                         As Range        ' |fffd|v|fffd||fffd||fffd|W|fffd|F|fffd|N|fffd|g|fffd||fffd||fffd||502||30a|J|fffd|n|fffd||fffd|
    Dim Range_Cal_E                         As Range        ' |fffd|v|fffd||fffd||fffd|W|fffd|F|fffd|N|fffd|g|fffd||fffd||fffd||502||30f|I|fffd||fffd||fffd||fffd|
    Dim Row_Tsk_S                           As Long         ' |fffd|^|fffd|X|fffd|N|fffd|J|fffd|n|fffd|s
    Dim Row_Tsk_E                           As Long         ' |fffd|^|fffd|X|fffd|N|fffd|I|fffd||fffd||fffd|s
    Dim MAX_TskLine                         As Long         ' |fffd|P|fffd|^|fffd|X|fffd|N|fffd||14e|g|fffd|p|fffd||fffd||fffd||fffd|s|fffd||fffd|
    Dim OffsetR_StartDay                    As Long         ' |fffd|J|fffd|n|fffd||fffd||fffd|t|fffd|iA|fffd||42a42||fffd|X|fffd||fffd||fffd||fffd||fffd||582||303|I|fffd|t|fffd|Z|fffd|b|fffd|g|fffd|l|fffd|j
    Dim OffsetC_StartDay                    As Long         ' |fffd|J|fffd|n|fffd||fffd||fffd|t|fffd||30a|i|fffd|[|fffd||fffd|
    Dim OffsetR_EndDay                      As Long         ' |fffd|I|fffd||fffd||fffd||fffd||fffd|t|fffd|iA|fffd||42a42||fffd|X|fffd||fffd||fffd||fffd||fffd||582||303|I|fffd|t|fffd|Z|fffd|b|fffd|g|fffd|l|fffd|j
    Dim OffsetC_EndDay                      As Long         ' |fffd|I|fffd||fffd||fffd||fffd||fffd|t|fffd||30a|i|fffd|[|fffd||fffd|
    Dim OffsetR_Progress                    As Long         ' |fffd|i|fffd||fffd||fffd||fffd||fffd|iA|fffd||42a42||fffd|X|fffd||fffd||fffd||fffd||fffd||582||303|I|fffd|t|fffd|Z|fffd|b|fffd|g|fffd|l|fffd|j
    Dim OffsetC_Progress                    As Long         ' |fffd|i|fffd||fffd||fffd||fffd||fffd||30a|i|fffd|[|fffd||fffd|
    Dim Col_PL                              As Long         ' |fffd||fffd||210||fffd||fffd||315|`|fffd||fffd||fffd|
    Dim Col_Tsk                             As Long         ' |fffd|^|fffd|X|fffd|N|fffd||308||292|u|fffd|i|fffd||fffd||50d||fffd||fffd|j
    Dim lLastRow                            As Long         ' |fffd||fffd||493||fffd||fffd||fffd||fffd||fffd||fffd|X|fffd|g|fffd||30d||14f|I|fffd|s
    Dim arrayPLPointX()                     As Single       ' |fffd||fffd||210||fffd||fffd||fffd|X|fffd||fffd||fffd|W|fffd|i|fffd|[|fffd|z|fffd||fffd|
    Dim arrayPLPointY()                     As Single       ' |fffd||fffd||210||fffd||fffd||fffd|Y|fffd||fffd||fffd|W|fffd|i|fffd|[|fffd|z|fffd||fffd|
    Dim sinDiff                             As Single       ' Y|fffd||fffd||fffd|W|fffd||30a|J|fffd|n|fffd||18f|I|fffd||fffd||fffd||30d||fffd||fffd||fffd|
    Dim arrayNonOpeday                      As Variant      ' |fffd||fffd||493||fffd||fffd||fffd||fffd|i|fffd|[|fffd|z|fffd||fffd|
    Dim TskStartDay                         As String       ' |fffd|^|fffd|X|fffd|N|fffd|J|fffd|n|fffd||fffd|
    Dim TskEndDay                           As String       ' |fffd|^|fffd|X|fffd|N|fffd|I|fffd||fffd||fffd||fffd|
    Dim TskProgress                         As Variant      ' |fffd|^|fffd|X|fffd|N|fffd|i|fffd||fffd||fffd||fffd|
    Dim task_Progress_str                   As String       ' |fffd|^|fffd|X|fffd|N|fffd|i|fffd||fffd||fffd||fffd||fffd|i|fffd||fffd||fffd||fffd||fffd|^|fffd|j
    Dim canPaint                            As Boolean      ' |fffd||fffd||210||fffd||fffd|`|fffd||fffd||38f||6d4||fffd||fffd||fffd|t|fffd||fffd||fffd|O
    Dim isNonOpeday                         As Boolean      ' |fffd||fffd||493||fffd||fffd||fffd||fffd||fffd||fffd|X|fffd|g|fffd||fffd||fffd||fffd|t|fffd||fffd||fffd|O
    Dim saveExcelCalc                       As Variant      ' xlCalculation|fffd||303|o|fffd|b|fffd|N|fffd|A|fffd|b|fffd|v
    Dim rngSaveLocate                       As Range
    Dim arrayWorkRows                       As Variant      ' |fffd|R|fffd||fffd||fffd||fffd||fffd|g|fffd|s|fffd||fffd||fffd||fffd|p|fffd|z|fffd||fffd|
    Dim csv_SkipLine                        As String       ' |fffd|R|fffd||fffd||fffd||fffd||fffd|g|fffd|s|fffd||fffd||fffd|o|fffd|@|fffd|\|fffd||fffd||fffd||fffd||316||7c2||fffd|l|fffd||fffd||fffd|i|fffd|[|fffd||fffd||fffd||fffd||3d0||fffd|
    Dim OperationDay                        As Long         ' |fffd|^|fffd|X|fffd|N|fffd||fffd||fffd||502||309||493||fffd||fffd||fffd||fffd||fffd|
    Dim consumptionDay                      As Variant       ' |fffd||fffd||fffd||f0b5||fffd||fffd||fffd|H|fffd||fffd||fffd|i|fffd||fffd||fffd||fffd||fffd||702||781|j
    Dim considerationDay                    As Long         ' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||602||fffd||30b0||fffd||fffd||fffd||742||202||fffd||fffd|H|fffd||fffd|
    Dim lOpeCount                           As Long         ' |fffd|i|fffd||fffd||fffd||fffd||fffd||702||142||30e||fffd||fffd||fffd||fffd||fffd|
    Dim lSearchOpeDay                       As Long         ' |fffd|c|fffd||193||fffd||fffd||fffd||fffd||fffd||fffd|p|fffd|C|fffd||fffd||fffd|f|fffd|b|fffd|N|fffd|X
    Dim savezoom                            As Variant      ' windows|fffd||fffd|zoom|fffd|v|fffd||fffd||fffd|p|fffd|e|fffd|B|fffd||fffd||6d1||fffd||fffd||fffd||fffd||fffd||3d0||fffd|
    Dim HistoryName                         As String       ' |fffd||fffd||fffd||fffd|o|fffd|^|fffd|^|fffd|X|fffd|N|fffd||fffd|
    Dim arrayWorkPeriod                     As Variant      ' |fffd|v|fffd||fffd||fffd|W|fffd|F|fffd|N|fffd|g|fffd||fffd||fffd||502||313||fffd||fffd|t|fffd|i|fffd|[|fffd|z|fffd||fffd|
    Dim arrayWorkPeriodArg()                As Variant      ' |fffd||fffd||fffd||fffd||fffd|p|fffd||303|v|fffd||fffd||fffd|W|fffd|F|fffd|N|fffd|g|fffd||fffd||fffd||502||313||fffd||fffd|t|fffd|i|fffd|[|fffd|z|fffd||fffd|
    Dim arrayWorkPeriodMax                  As Long         ' |fffd|v|fffd||fffd||fffd|W|fffd|F|fffd|N|fffd|g|fffd||fffd||fffd||502||313||fffd||fffd|t|fffd|i|fffd|[|fffd|z|fffd||fffd||151||fffd|Y|fffd||fffd||fffd||fffd|
    Dim range_in_progress_date              As Range        ' |fffd|i|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|Z|fffd||fffd|
    Dim progress_date                       As Date         ' |fffd|i|fffd||fffd||fffd||fffd|
    Dim fraction                            As Variant      ' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||30f||fffd||fffd||fffd|H|fffd||fffd||fffd|i|fffd|[|fffd||fffd||fffd|j
    Dim first_date_in_projectperiod_column  As Date         ' |fffd|i|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||311|O|fffd||317||fffd||312|l|fffd|i|fffd||fffd||fffd|t|fffd|j
    Dim last_date_in_projectperiod_column   As Date         ' |fffd|i|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||312|l|fffd|i|fffd||fffd||fffd|t|fffd|j
    Dim isOutsideAreaS                      As Boolean      ' |fffd|J|fffd|n|fffd||fffd||fffd||fffd||fffd|v|fffd||fffd||fffd|W|fffd|F|fffd|N|fffd|g|fffd||fffd||fffd||514||348||34a|O|fffd||303|t|fffd||fffd||fffd|O
    Dim isOutsideAreaE                      As Boolean      ' |fffd|I|fffd||fffd||fffd||fffd||fffd||fffd||fffd|v|fffd||fffd||fffd|W|fffd|F|fffd|N|fffd|g|fffd||fffd||fffd||514||348||34a|O|fffd||303|t|fffd||fffd||fffd|O
    
    ' |fffd|G|fffd|N|fffd|Z|fffd||fffd||fffd||303|o|fffd|[|fffd|W|fffd||fffd||fffd||fffd||fffd||fffd|12|fffd|iEXCEL2007|fffd|j|fffd||fffd||827a||fffd||30f||a347||fffd|A|fffd||fffd||fffd||fffd||fffd||fffd||fffd|I|fffd||fffd||fffd||fffd||fffd||fffd|
    If Application.Version < 12 Then
        Call OutMessage("|fffd||fffd||210||fffd||fffd|A|fffd|h|fffd|C|fffd||fffd||fffd||fffd|EXCEL2007|fffd||20d|~|fffd||153||fffd||fffd||c0b5||fffd||702||fffd||fffd|B", vbOKOnly + vbExclamation)
        Exit Sub
    End If

    ' |fffd||fffd||fffd||fffd||fffd|}|fffd|~
    With Application
        saveExcelCalc = .Calculation
        .Calculation = xlCalculationManual
        .StatusBar = ""
        .ScreenUpdating = False
    End With
    
    ' shape|fffd|`|fffd||639e||fffd||24d||fffd||fffd|W|fffd||fffd||fffd||fffd||fffd||a0bd||fffd||60a4||fffd||255|\|fffd||fffd||fffd||fffd||fffd||fffd||90b1||fffd||182||fffd|h|fffd||fffd||fffd||38f||fffd|
    savezoom = ActiveWindow.Zoom
    
    ' |fffd|A|fffd|N|fffd|e|fffd|B|fffd|u|fffd|V|fffd|[|fffd|g|fffd||fffd||fffd|i|fffd||fffd||210||fffd||fffd||fffd|`|fffd||60b7||fffd||fffd|V|fffd|[|fffd|g|fffd||fffd||fffd|j|fffd||fffd||fffd||64fe||fffd||fffd||fffd||fffd|
    Set shtCanvas = Worksheets(ActiveSheet.Name)
    
    ' |fffd|Q|fffd||183|G|fffd||fffd||fffd|[|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||102||fffd||fffd||fffd|NameObject|fffd||fffd||fffd||d3dc||fffd||fffd||fffd||fffd|
    Call CleanNameObject(shtCanvas)
    
    ' Worksheet|fffd||30e|Q|fffd||190||752||fffd||fffd||fffd|s|fffd||fffd|
    Set shtDataList = ThisWorkbook.Worksheets(SHT_DATALIST)
    
    ' |fffd||fffd||fffd||742||303|J|fffd|[|fffd|\|fffd||fffd||fffd||292|u|fffd||fffd||794||fffd||fffd||fffd||fffd||102||fffd||fffd||fffd|
    Set rngSaveLocate = ActiveCell
    
    ' |fffd|`|fffd||fffd|V|fffd|[|fffd|g|fffd||30f||fffd||fffd||fffd||fffd||fffd||fffd||752||80b3||fffd||fffd||102||fffd||fffd||90a9||fffd|`|fffd|F|fffd|b|fffd|N|fffd||fffd||fffd||fffd|
    If RunCheck(shtCanvas) Then
    Else
        Call OutMessage("|fffd|`|fffd||fffd|V|fffd|[|fffd|g|fffd||fffd||fffd||fffd||fffd||82||fffd||fffd||fffd||702||fffd||fffd||fffd|B" & vbCrLf & "|fffd|`|fffd||fffd|V|fffd|[|fffd|g|fffd||fffd||752||80b5||fffd||102||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|B", vbOKOnly + vbExclamation, MENU_TITLE)
        GoTo main_exit
    End If
        
    ' |fffd||fffd||fffd||fffd||fffd||308||fffd||210||fffd||fffd||fffd||fffd||d3dc||fffd||fffd||fffd||fffd|
    If shtDataList.Range(RNG_REPORT).Value Then
        Call DeleteLine(shtCanvas, STYLE_REPO)
    End If
    
    ' |fffd||fffd||fffd||fffd||fffd||308||fffd||210||fffd||fffd||fffd||fffd||d3dc||fffd||fffd||fffd||fffd|
    If shtDataList.Range(RNG_HOLIDAY).Value Then
        Call DeleteLine(shtCanvas, STYLE_HIST)
    End If
    
    ' |fffd|`|fffd||fffd|V|fffd|[|fffd|g|fffd||313|o|fffd|^|fffd||fffd||fffd||fffd||fffd||64fe||fffd||fffd||fffd||fffd|
    Dim canvas_info         As tCANVAS
    canvas_info = GetCanvasInfo(shtCanvas.Name)
    
    ' |fffd||fffd||210||fffd||fffd|`|fffd||fffd||348||342||30e|Q|fffd||183|G|fffd||fffd||fffd|[|fffd||fffd||fffd||fffd||fffd||fffd|
    With canvas_info
        If .pl_range Is Nothing Or InStr(.pl_range.Address, "#REF") > 0 Then
            Call OutMessage("|fffd||fffd||210||fffd||fffd||348||fffd|" & ERR_REF_ERROR & vbCrLf & _
                WNG_CANVAS_ERROR, vbOKOnly + vbExclamation, MENU_TITLE)
            GoTo main_exit
        End If
        Row_PL_S = .pl_range.Row                        ' |fffd|n|fffd|_|fffd||30d|s|fffd||50d||fffd|
        Row_PL_E = Row_PL_S + .pl_range.Rows.Count - 1  ' |fffd|n|fffd|_|fffd||30d|s|fffd||50d||fffd|
    End With
    
    ' |fffd|v|fffd||fffd||fffd|W|fffd|F|fffd|N|fffd|g|fffd||fffd||fffd||502||30e|Q|fffd||183|G|fffd||fffd||fffd|[|fffd||fffd||fffd||fffd||fffd||fffd|
    With canvas_info
        If .prj_period Is Nothing Or InStr(.prj_period.Address, "#REF") > 0 Then
            Call OutMessage("|fffd|v|fffd||fffd||fffd|W|fffd|F|fffd|N|fffd|g|fffd||fffd||fffd||fffd|" & ERR_REF_ERROR & vbCrLf & _
                WNG_CANVAS_ERROR, vbOKOnly + vbExclamation, MENU_TITLE)
            GoTo main_exit
        End If
        Row_Cal = .prj_period.Row                               ' |fffd|v|fffd||fffd||fffd|W|fffd|F|fffd|N|fffd|g|fffd||fffd||fffd||502||30d|s|fffd||50d||fffd|
        Set Range_Cal_S = .prj_period.Item(1)                   ' |fffd|v|fffd||fffd||fffd|W|fffd|F|fffd|N|fffd|g|fffd||fffd||fffd||502||30a|J|fffd|n|fffd||fffd|iRANGE|fffd|R|fffd||fffd||fffd|N|fffd|V|fffd||fffd||fffd||fffd||fffd||310||64ea||fffd|j
        Set Range_Cal_E = .prj_period.Item(.prj_period.Count)   ' |fffd|v|fffd||fffd||fffd|W|fffd|F|fffd|N|fffd|g|fffd||fffd||fffd||502||30f|I|fffd||fffd||fffd||fffd|
    End With
    
    ' |fffd|v|fffd||fffd||fffd|W|fffd|F|fffd|N|fffd|g|fffd||fffd||fffd||515||2433|-|fffd|J|fffd|n|fffd||fffd|
    For i = Range_Cal_S.Column To Range_Cal_E.Column
        ' |fffd|v|fffd||fffd||fffd|W|fffd|F|fffd|N|fffd|g|fffd||fffd||fffd||502||30a|J|fffd|n|fffd|`|fffd|I|fffd||fffd||fffd||348||342||14d||14f||fffd||fffd||313||fffd||fffd|t|fffd|f|fffd|[|fffd|^|fffd||fffd||fffd||fffd||fffd||fffd|Z|fffd||fffd||fffd||fffd||fffd|v|fffd||fffd||fffd|W|fffd|F|fffd|N|fffd|g|fffd||fffd||fffd||50a|J|fffd|n|fffd||fffd||fffd||182||fffd||fffd||fffd|
        If IsDate(Range_Cal_S.OFFSET(, i - Range_Cal_S.Column)) Then
            Set Range_Cal_S = Range_Cal_S.OFFSET(, i - Range_Cal_S.Column)
            Exit For
        End If
    Next
    
    ' |fffd|v|fffd||fffd||fffd|W|fffd|F|fffd|N|fffd|g|fffd||fffd||fffd||515||2433|-|fffd|I|fffd||fffd||fffd||fffd|
    For i = Range_Cal_E.Column To Range_Cal_S.Column + 1 Step -1
        ' |fffd|v|fffd||fffd||fffd|W|fffd|F|fffd|N|fffd|g|fffd||fffd||fffd||502||30a|J|fffd|n|fffd|`|fffd|I|fffd||fffd||fffd||348||342||14d||14c||fffd||313||fffd||fffd|t|fffd|f|fffd|[|fffd|^|fffd||fffd||fffd||fffd||fffd||fffd|Z|fffd||fffd||fffd||fffd||fffd|v|fffd||fffd||fffd|W|fffd|F|fffd|N|fffd|g|fffd||fffd||fffd||50f|I|fffd||fffd||fffd||fffd||fffd||182||fffd||fffd||fffd|
        If IsDate(Range_Cal_E.OFFSET(, i - Range_Cal_E.Column)) Then
            Set Range_Cal_E = Range_Cal_E.OFFSET(, i - Range_Cal_E.Column)
            Exit For
        End If
    Next

    ' |fffd|^|fffd|X|fffd|N|fffd||314||348||342||30e|Q|fffd||183|G|fffd||fffd||fffd|[|fffd||fffd||fffd||fffd||fffd||fffd|
    With canvas_info
        If .top_task Is Nothing Or InStr(.top_task.Address, "#REF") > 0 Then
            Call OutMessage("|fffd||64ea||fffd|^|fffd|X|fffd|N" & ERR_REF_ERROR & vbCrLf & WNG_CANVAS_ERROR, vbOKOnly + vbExclamation, MENU_TITLE)
            GoTo main_exit
        End If
        Row_Tsk_S = .top_task.Row           ' |fffd||64ea||fffd|^|fffd|X|fffd|N|fffd||348||342||30d|s|fffd||50d||fffd|
        Row_Tsk_E = Row_PL_E                ' |fffd||fffd||210||fffd||fffd||315|`|fffd||fffd||348||342||30d|s|fffd||50d||fffd|
        MAX_TskLine = .top_task.Rows.Count
    End With
    
    ' |fffd|J|fffd|n|fffd|\|fffd||fffd||fffd||fffd||30e|Q|fffd||183|G|fffd||fffd||fffd|[|fffd||fffd||fffd||fffd||fffd||fffd|
    With canvas_info
        If .top_startdate Is Nothing Or InStr(.top_startdate.Address, "#REF") > 0 Then
            Call OutMessage("|fffd||fffd||18a|J|fffd|n|fffd|\|fffd||fffd||fffd|" & ERR_REF_ERROR & vbCrLf & WNG_CANVAS_ERROR, vbOKOnly + vbExclamation, MENU_TITLE)
            GoTo main_exit
        End If
        OffsetR_StartDay = Abs(Row_Tsk_S - .top_startdate.Row)  ' |fffd|J|fffd|n|fffd||fffd||fffd|t|fffd||30d|s|fffd|i|fffd|^|fffd|X|fffd|N|fffd|s|fffd||fffd||fffd||fffd||303|I|fffd|t|fffd|Z|fffd|b|fffd|g|fffd|j
        OffsetC_StartDay = .top_startdate.Column                ' |fffd|J|fffd|n|fffd||fffd||fffd|t|fffd||317||fffd|i|fffd|^|fffd|X|fffd|N|fffd|s|fffd||fffd||fffd||fffd||303|I|fffd|t|fffd|Z|fffd|b|fffd|g|fffd|j
    End With
    
    ' |fffd|I|fffd||fffd||fffd|\|fffd||fffd||fffd||fffd||30e|Q|fffd||183|G|fffd||fffd||fffd|[|fffd||fffd||fffd||fffd||fffd||fffd|
    With canvas_info
        If .top_enddate Is Nothing Or InStr(.top_enddate.Address, "#REF") > 0 Then
            Call OutMessage("|fffd||fffd||18f|I|fffd||fffd||fffd|\|fffd||fffd||fffd|" & ERR_REF_ERROR & vbCrLf & WNG_CANVAS_ERROR, vbOKOnly + vbExclamation, MENU_TITLE)
            GoTo main_exit
        End If
        OffsetR_EndDay = Abs(Row_Tsk_S - .top_enddate.Row)
        OffsetC_EndDay = .top_enddate.Column                    ' |fffd|I|fffd||fffd||fffd||fffd||fffd|t|fffd||317||fffd|i|fffd|^|fffd|X|fffd|N|fffd|s|fffd||fffd||fffd||fffd||303|I|fffd|t|fffd|Z|fffd|b|fffd|g|fffd|j
    End With
        
    ' |fffd|i|fffd||fffd||fffd||fffd||fffd||30e|Q|fffd||183|G|fffd||fffd||fffd|[|fffd||fffd||fffd||fffd||fffd||fffd|
    With canvas_info
        If .progress_ratio Is Nothing Or InStr(.progress_ratio.Address, "#REF") > 0 Then
            Call OutMessage("|fffd|i|fffd||fffd||fffd||fffd|" & ERR_REF_ERROR & vbCrLf & WNG_CANVAS_ERROR, vbOKOnly + vbExclamation, MENU_TITLE)
            GoTo main_exit
        End If
        OffsetR_Progress = Abs(Row_Tsk_S - .progress_ratio.Row)                 ' |fffd|i|fffd||fffd||fffd||fffd||fffd||30d|s|fffd|i|fffd|^|fffd|X|fffd|N|fffd|s|fffd||fffd||fffd||fffd||303|I|fffd|t|fffd|Z|fffd|b|fffd|g|fffd|j
        OffsetC_Progress = .progress_ratio.Column                               ' |fffd|i|fffd||fffd||fffd||fffd||fffd||317||fffd|i|fffd|^|fffd|X|fffd|N|fffd|s|fffd||fffd||fffd||fffd||303|I|fffd|t|fffd|Z|fffd|b|fffd|g|fffd|j
    End With
    
    ' |fffd|`|fffd||fffd|V|fffd|[|fffd|g|fffd||fffd||303|v|fffd||fffd||fffd|W|fffd|F|fffd|N|fffd|g|fffd||fffd||fffd||502||311||fffd||fffd||742||fffd||fffd|`|fffd|F|fffd|b|fffd|N|fffd||fffd||fffd||fffd|
    shtCanvas.Select
    canPaint = False
    If IsDate(Cells(Row_Cal, Range_Cal_S.Column)) Then canPaint = True
    If IsDate(Cells(Row_Cal, Range_Cal_E.Column)) Then canPaint = True
    If Not canPaint Then
        Call OutMessage("|fffd|v|fffd||fffd||fffd|W|fffd|F|fffd|N|fffd|g|fffd||fffd||fffd||502||fffd||fffd||fffd||fffd||82||fffd||fffd||fffd||702||fffd||fffd||fffd|B" & vbCrLf & WNG_CANVAS_ERROR, vbOKOnly + vbExclamation, MENU_TITLE)
        GoTo main_exit
    End If
    
    ' |fffd||4d413||fffd||fffd||fffd||fffd||64fe||fffd||fffd||fffd||fffd|
    If gReportDate = "" Then
        sReportDate = Format(Now, DATE_FORM)    '|fffd|{|fffd||fffd||fffd|i|fffd|V|fffd|X|fffd|e|fffd||fffd||fffd||fffd||fffd|t|fffd|j
    Else
        sReportDate = gReportDate               '|fffd||794||fffd||fffd||fffd|t
    End If
    
    ' |fffd||fffd||fffd||fffd||fffd||313||fffd||fffd|t|fffd||fffd||fffd|v|fffd||fffd||fffd|W|fffd|F|fffd|N|fffd|g|fffd||fffd||fffd||50a|O|fffd||30f||a347||fffd|A|fffd||fffd||210||fffd||fffd||355|`|fffd||60b5||fffd||202||fffd||fffd|B
    If sReportDate < Cells(Row_Cal, Range_Cal_S.Column) Or sReportDate > Cells(Row_Cal, Range_Cal_E.Column) Then
        Call OutMessage("|fffd|i|fffd||fffd||fffd||4d413||fffd||fffd|i " & sReportDate & " |fffd|j|fffd||343|v|fffd||fffd||fffd|W|fffd|F|fffd|N|fffd|g|fffd||fffd||fffd||502||314||348||34a|O|fffd||142||fffd||fffd|B", vbOKOnly + vbExclamation, MENU_TITLE)
        GoTo main_exit
    End If

    ' |fffd||fffd||210||fffd||fffd||303|X|fffd|^|fffd|C|fffd||fffd||fffd||fffd||752||80b7||fffd||fffd|
    With shtDataList
        ' |fffd||fffd||fffd||5c2||109||493||fffd||fffd||fffd||fffd||182||742||202||fffd| 0:FALSE 1:TRUE
        If .Cells(2, "H") = 1 Then
            isNonOpeday = True                                                                  ' |fffd|x|fffd||fffd||fffd||fffd||fffd||493||fffd||fffd||fffd||fffd||24a||702||7c2||fffd|
        Else
            isNonOpeday = False                                                                 ' |fffd|x|fffd||fffd||fffd||349||493||fffd||fffd||fffd||fffd||24a||702||7c2||202||fffd|
            
            ' |fffd|v|fffd||fffd||fffd|W|fffd|F|fffd|N|fffd|g|fffd||fffd||fffd||502||24a||702||702||fffd||fffd|x|fffd|j|fffd||fffd||fffd||fffd||fffd|x|fffd|j|fffd||fffd||fffd|e|fffd|[|fffd|u|fffd||fffd||fffd|i|fffd|f|fffd|[|fffd|^|fffd|V|fffd|[|fffd|g|fffd||fffd|O|fffd||fffd|j|fffd||24d||c42c||fffd||fffd||fffd||fffd|
            Call CreateHolidayTable(Range_Cal_S, Range_Cal_E)
            
            ' |fffd|x|fffd|j|fffd||fffd||fffd||fffd||252||fffd|`|fffd||fffd||fffd||a0bd||fffd||fffd||fffd|t|fffd||fffd||fffd||493||fffd||fffd||fffd||fffd|z|fffd||fffd||24a|i|fffd|[|fffd||fffd||fffd||fffd|
            ' |fffd||fffd||fffd|J|fffd|n|fffd||fffd||fffd||fffd||fffd|v|fffd||fffd||fffd|W|fffd|F|fffd|N|fffd|g|fffd||fffd||fffd||502||fffd||fffd||fffd||fffd|O|fffd||141|A|fffd||fffd||fffd||90|i|fffd||fffd||fffd||cbd42||fffd||fffd||fffd||fffd||513||fffd||fffd||30f||a347||fffd|A|fffd||fffd||fffd||50a|O|fffd||30b|x|fffd|j|fffd||fffd||fffd||fffd||fffd|l|fffd||fffd||fffd||fffd||fffd||fffd||202||fffd|
            arrayNonOpeday = ""
            lLastRow = Application.WorksheetFunction.CountA(.Range("O:O"))                      ' |fffd|x|fffd|j|fffd||fffd||fffd||30c||90||fffd|
            If lLastRow > 0 Then
                arrayNonOpeday = .Range(.Range("O2"), .Range("O2").OFFSET(lLastRow - 1)).Value  ' |fffd||fffd||493||fffd||fffd||fffd||fffd||fffd||4e7cc||fffd||fffd|z|fffd||fffd||24a|i|fffd|[
            Else
                ' |fffd|x|fffd|j|fffd||fffd||fffd||fffd||249||fffd||fffd||fffd||fffd||752||80b3||fffd||fffd||102||fffd||fffd||202||fffd||fffd||a347||fffd||341|A|fffd||fffd||fffd||5c2||109||493||fffd||fffd||fffd||fffd||182||742||202||fffd|
                isNonOpeday = True                                                              ' |fffd|x|fffd||fffd||fffd||fffd||fffd||493||fffd||fffd||fffd||fffd||24a||702||7c2||fffd|
            End If
            
        End If
    End With
    
    ' |fffd|v|fffd||fffd||fffd|W|fffd|F|fffd|N|fffd|g|fffd||fffd||fffd||502||fffd|z|fffd||fffd||24a|i|fffd|[|fffd||fffd||fffd||fffd|
    If canvas_info.prj_period.Columns.Count > 1 Then
        arrayWorkPeriod = canvas_info.prj_period
    Else
        ReDim arrayWorkPeriod(1, 1) As Variant
        arrayWorkPeriod(1, 1) = canvas_info.prj_period
    End If
    
    ' |fffd||fffd|v|fffd|f|fffd||50d||fffd||fffd||30d||151||fffd|l|fffd||fffd||fffd||64fe|
    arrayWorkPeriodMax = UBound(arrayWorkPeriod, 2)
    arrayWorkPeriodArg = arrayWorkPeriod
    
    ' |fffd||fffd||210||fffd||fffd||fffd|`|fffd||60b7||fffd||fffd||fffd||fffd|t|fffd||fffd||fffd||fffd||fffd||182||248||fffd||210||fffd||fffd||fffd|`|fffd||60b7||fffd||fffd||fffd||fffd||fffd|Z|fffd|o|fffd||fffd||fffd||fffd|
    Col_PL = GetCalCol(arrayWorkPeriodArg, sReportDate, 1, arrayWorkPeriodMax)
    If Col_PL = 0 Then
        Call OutMessage("|fffd||4d413||fffd||fffd||fffd||fffd||fffd||fffd||82||fffd||fffd||fffd||702||fffd||fffd||fffd|B", vbOKOnly + vbExclamation, MENU_TITLE)
        GoTo main_exit
    Else
        Col_PL = Col_PL + Range_Cal_S.Column - 1
    End If
    
    ' |fffd||fffd||210||fffd||fffd||30d||fffd||fffd|W|fffd|i|fffd|[|fffd|z|fffd||50501|i|fffd|R|fffd||fffd||fffd|W|fffd||fffd||fffd|j|fffd||fffd||fffd||fffd||fffd||7c2||fffd|
    i_PLPoint = (((Row_Tsk_E - Row_Tsk_S) + 2) / MAX_TskLine) * 3
    
    ' |fffd||fffd||210||fffd||fffd||30d||fffd||fffd|W|fffd|i|fffd|[|fffd|z|fffd||fffd||fffd||fffd||112||fffd|`|fffd||fffd||fffd||fffd|
    ' |fffd|J|fffd|n|fffd||fffd||fffd||18f|I|fffd||fffd||fffd||fffd||fffd||fffd||fffd|v|fffd||fffd||fffd|W|fffd|F|fffd|N|fffd|g|fffd||fffd||fffd||514||348||34a|O|fffd||30f||a347||fffd||30d||fffd||fffd|W|fffd||fffd||fffd|i|fffd|[|fffd||fffd||fffd||fffd|z|fffd||fffd||fffd|]|fffd||fffd||fffd||24a|m|fffd||6c2||fffd||fffd||102||fffd||fffd||fffd|
    
    ReDim arrayPLPointX(i_PLPoint + (i_PLPoint / MAX_TskLine)) As Single
    ReDim arrayPLPointY(i_PLPoint + (i_PLPoint / MAX_TskLine)) As Single
    
    ' |fffd||4d413||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|v|fffd||fffd||fffd|W|fffd|F|fffd|N|fffd|g|fffd||fffd||fffd||502||313||fffd||fffd|t|fffd||fffd||fffd||fffd||fffd||7c2||fffd|
    If Col_PL > Range_Cal_S.Column Then
        first_date_in_projectperiod_column = shtCanvas.Cells(Row_Cal, Col_PL - 1)
    Else
        first_date_in_projectperiod_column = shtCanvas.Cells(Row_Cal, Col_PL)
    End If
    
    last_date_in_projectperiod_column = shtCanvas.Cells(Row_Cal, Col_PL)
    
    VarTemp = GetPoint(Cells(Row_PL_S, Col_PL), 0, CDate(sReportDate), first_date_in_projectperiod_column, last_date_in_projectperiod_column, 1)
    
    ' |fffd|v|fffd||fffd||fffd|W|fffd|F|fffd|N|fffd|g|fffd||fffd||fffd||502||fffd||fffd||72c1||fffd||7c2||fffd||fffd||fffd||fffd||fffd||fffd||303|Z|fffd||fffd||fffd||fffd||fffd||fffd||fffd||182||241|A|fffd||fffd||210||fffd||fffd||30a|J|fffd|n|fffd||fffd||fffd|W|fffd||fffd||fffd||fffd||fffd||80b5||fffd||a39e||fffd|z|fffd||fffd||24a|i|fffd|[|fffd||fffd||fffd||fffd|
    ' 0:LEFT/X 1:LEFT/Y 2:RIGHT/X 3:RIGHT/Y
    arrayPLPointY(0) = VarTemp(1)                                       ' |fffd||fffd||210||fffd||fffd|n|fffd|_:Y|fffd||fffd||fffd|W
    arrayPLPointX(0) = VarTemp(4)                                       ' |fffd||fffd||210||fffd||fffd|n|fffd|_:X|fffd||fffd||fffd|W
    
    ' |fffd|R|fffd||fffd||fffd||fffd||fffd|g|fffd|s|fffd|i|fffd|[|fffd|z|fffd||fffd||fffd||fffd|^|fffd|X|fffd|N|fffd|s|fffd||fffd||fffd||fffd||fffd|m|fffd||6c2||fffd||fffd||fffd|
     ReDim arrayCommentRow(Row_Tsk_E)
    
    ' |fffd|R|fffd||fffd||fffd||fffd||fffd|g|fffd|s|fffd|z|fffd||fffd||fffd||fffd|i|fffd|[|fffd||fffd||fffd||fffd|
    csv_SkipLine = GetSkipRows(shtCanvas)
    ' |fffd|Q|fffd||183|G|fffd||fffd||fffd|[|fffd||fffd||fffd||fffd||fffd||fffd||fffd||311||38f||fffd|
    If InStr(csv_SkipLine, "#REF") > 0 Then
        Call OutMessage("|fffd|R|fffd||fffd||fffd||fffd||fffd|g|fffd|s" & ERR_REF_ERROR & vbCrLf & WNG_COMMENT_ERROR, vbOKOnly + vbExclamation, MENU_TITLE)
        GoTo main_exit
    End If
    
    If csv_SkipLine <> "" Then
        arrayWorkRows = Split(csv_SkipLine, ",")
        For i = 0 To UBound(arrayWorkRows)
            ' |fffd|R|fffd||fffd||fffd||fffd||fffd|g|fffd|s|fffd||fffd||fffd||fffd||210||fffd||fffd||315|`|fffd||fffd||348||34a|O|fffd||30f||a347||fffd||356||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
            If arrayWorkRows(i) <= Row_Tsk_E Then arrayCommentRow(arrayWorkRows(i)) = "ON"
        Next
    End If
    
    ' |fffd||64ea||fffd|^|fffd|X|fffd|N|fffd||30a|J|fffd|n|fffd|s|fffd||fffd||fffd||fffd||210||fffd||fffd||30a|J|fffd|n|fffd|s|fffd||24d||fffd||fffd||d0b9||fffd||112||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
    Do While Row_Tsk_S < Row_PL_S
        If arrayCommentRow(Row_Tsk_S) = "ON" Then
            Row_Tsk_S = Row_Tsk_S + 1
        Else
            Row_Tsk_S = Row_Tsk_S + MAX_TskLine
        End If
    Loop
    
    ' |fffd||fffd||fffd||fffd||fffd||64fe||fffd||fffd|true|fffd||302||182||fffd||fffd|A|fffd||fffd||fffd||fffd||fffd||fffd||fffd||64fe||fffd||fffd||fffd||fffd|
    With shtDataList
        If .Range(GET_HISTORY_CELL) = 1 Then
            ' |fffd||4d413||fffd||fffd||fffd||85a2||fffd||fffd||fffd||317||fffd||fffd||fffd||fffd||fffd||fffd||d3dc||fffd||fffd||fffd||fffd|i|fffd||fffd||fffd||fffd||fffd||fffd||fffd|j
            Call InitHistory(shtCanvas, sReportDate, ((Row_Tsk_E - Row_Tsk_S + 1) / MAX_TskLine))
        
            ' |fffd||fffd||210||fffd||fffd||fffd||fffd||fffd||fffd||1d7||fffd||fffd||fffd||fffd||fffd||fffd||742||fffd||fffd||202||fffd||fffd||a347||fffd||352||1c9||fffd||fffd||fffd||fffd||fffd|
            If canvas_info.pl_history_range Is Nothing Then
                ' |fffd||fffd||210||fffd||fffd||fffd||fffd||fffd||fffd||1d7||fffd||fffd||fffd|o|fffd|^|fffd||fffd||fffd||fffd|
                Call AddHistoryManager(shtCanvas, canvas_info.pl_range.Address)
            End If
            
            ' |fffd||fffd||210||fffd||fffd||fffd||fffd||fffd||fffd||30a||1d7||fffd||fffd|f|fffd|[|fffd|^|fffd||255||4d413||fffd||fffd||fffd||1c9||fffd||fffd||fffd||fffd||fffd|
            Call AddHistory(shtCanvas, NM_HT, sReportDate)
        End If
    End With
    
    ' |fffd||fffd||18d||fffd||fffd||690||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|J|fffd||fffd||502||fffd|
    ActiveWindow.Zoom = 100
    i_PLPoint = 0
    shtCanvas.Activate
    For i = Row_Tsk_S To Row_Tsk_E Step MAX_TskLine
        
        ' |fffd||fffd|\|fffd||fffd||fffd|Z|fffd||fffd||fffd||242||fffd||83c8||fffd||fffd||fffd||fffd|U|fffd||856a||fffd||fffd||fffd||fffd|
        If shtCanvas.Rows(i).Hidden Then
            ' |fffd||fffd|\|fffd||fffd||fffd|Z|fffd||fffd||fffd||fffd||fffd|R|fffd||fffd||fffd||fffd||fffd|g|fffd||302||182||fffd|
            If arrayCommentRow(i) = "ON" Then
                i = i - MAX_TskLine + 1
            End If
        Else
            ' |fffd|`|fffd||fffd|t|fffd||fffd||fffd|O|fffd||fffd|True|fffd|i|fffd||38f||6c1|j|fffd||fffd||752||80b7||fffd||fffd|
            canPaint = True
            
            ' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||30d|s|fffd||fffd||fffd|R|fffd||fffd||fffd||fffd||fffd|g|fffd|s|fffd||142||fffd||fffd||fffd||395|`|fffd||fffd||38f||6ca|O|fffd||182||fffd||fffd||fffd|
            If arrayCommentRow(i) = "ON" Then
                i = i - MAX_TskLine + 1
                canPaint = False
            End If
            
            ' |fffd|`|fffd||fffd||38f||6c2||30f||a347||fffd|A|fffd||fffd||fffd||fffd||fffd||fffd||fffd|p|fffd||fffd||fffd||fffd||fffd||fffd|
            If canPaint Then
                ' |fffd|`|fffd||fffd|t|fffd||fffd||fffd|O|fffd||fffd|False|fffd|i|fffd||38f||6ca|O|fffd|j|fffd||fffd||752||80b7||fffd||fffd|
                canPaint = False
                
                ' |fffd|^|fffd|X|fffd|N|fffd||30a|J|fffd|n|fffd||fffd||fffd||18f|I|fffd||fffd||fffd||fffd||fffd||fffd||fffd||64fe||fffd||fffd||fffd||fffd|
                TskStartDay = AdjustDateForm(shtCanvas.Cells(i + OffsetR_StartDay, OffsetC_StartDay))
                TskEndDay = AdjustDateForm(shtCanvas.Cells(i + OffsetR_EndDay, OffsetC_EndDay))
                
                ' |fffd||fffd||fffd|t|fffd||182||fffd||fffd||114|F|fffd||fffd||fffd||142||fffd||fffd||90a9||fffd|`|fffd|F|fffd|b|fffd|N|fffd||fffd||fffd||fffd|
                If IsDate(TskStartDay) And IsDate(TskEndDay) Then
                    
                    ' |fffd|^|fffd|X|fffd|N|fffd||310|i|fffd||fffd||fffd||fffd||fffd||fffd||fffd||64fe||fffd||fffd||fffd||fffd|
                    TskProgress = 0
                    task_Progress_str = shtCanvas.Cells(i + OffsetR_Progress, OffsetC_Progress)
                    If IsNumeric(task_Progress_str) Then TskProgress = CSng(task_Progress_str)
                    
                    ' |fffd|^|fffd|X|fffd|N|fffd||310|i|fffd||fffd||fffd||fffd||fffd||fffd|100%|fffd||209||fffd||fffd||30f||a347||fffd|`|fffd||fffd||38f||6ca|O|fffd||182||fffd||fffd||fffd|i100%|fffd||12d02||fffd||fffd||102||fffd||fffd||fffd||a347||fffd||350|i|fffd||fffd||fffd||cbd42||14ed2|f|fffd||142||fffd||fffd||202||fffd||fffd||fffd||fffd||7d5|`|fffd||fffd||38f||6ca|O|fffd||182||fffd||fffd||fffd|j
                    If TskProgress <= 1 Then
                        ' |fffd|i|fffd||fffd||fffd||fffd||fffd||155|`|fffd||fffd||38f||6c2||14ed2||80b7||fffd||fffd|B|fffd|i1|fffd||fffd|100%|fffd|j
                        Select Case TskProgress
                            Case 0                                                                      ' |fffd||fffd||196||fffd||fffd||fffd||fffd||fffd|
                                ' |fffd||fffd||182||fffd||fffd|x|fffd||fffd||fffd||fffd||fffd||102||fffd||fffd||fffd||395|`|fffd||fffd||38f||6c2||242||fffd||fffd||fffd|
                                If TskStartDay <= sReportDate Then canPaint = True
                            Case 1                                                                      ' |fffd||fffd||18a||fffd||fffd||fffd|
                                ' |fffd||fffd||182||34a||fffd||fffd||fffd||fffd||fffd||fffd||102||fffd||fffd||90aa||fffd|A|fffd|I|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||30f||a347||fffd||355|`|fffd||fffd||38f||6c2||242||fffd||fffd||fffd|B
                                If sReportDate < TskEndDay Then canPaint = True
                            Case Else                                                                   ' |fffd||fffd||192||fffd|
                                canPaint = True
                        End Select
                    End If
                    
                    ' |fffd|J|fffd|n|fffd||fffd||fffd||fffd||fffd|I|fffd||fffd||fffd||fffd||fffd|`|fffd|F|fffd|b|fffd|N
                    If TskStartDay > TskEndDay Then canPaint = False
                
                End If
            End If
            
            ' |fffd|`|fffd||fffd|t|fffd||fffd||fffd|O|fffd||fffd|True|fffd||30f||a347||fffd|A|fffd||fffd||210||fffd||fffd||30d||fffd||fffd|W|fffd||fffd|z|fffd||fffd||24a|i|fffd|[|fffd||fffd||fffd||fffd|
            If canPaint Then
                isOutsideAreaS = False
                isOutsideAreaE = False
                consumptionDay = 0
                considerationDay = 0
                fraction = 0
                lOpeCount = 0
            
                ' |fffd|\|fffd||fffd|H|fffd||fffd||fffd|i|fffd|J|fffd|n|fffd||fffd||fffd||fffd||fffd||fffd|I|fffd||fffd||fffd||fffd||fffd||30a||502||313||fffd||fffd||fffd||fffd|j|fffd||250|i|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||10e||fffd||fffd|H|fffd||fffd||fffd||fffd||fffd|Z|fffd|o|fffd||fffd||fffd|A|fffd|J|fffd|n|fffd||fffd||fffd||24e||fffd||fffd|H|fffd||fffd||fffd||fffd||fffd||fffd||fffd|Z|fffd||fffd||fffd||90b1||fffd||182||14e||fffd||fffd|H|fffd||fffd||fffd|i|fffd||fffd||fffd||749||fffd||fffd||fffd||fffd||24a|Y|fffd||fffd||fffd||fffd||fffd||90a9||fffd|j|fffd||fffd||fffd||fffd||fffd||7c2||fffd|B
                Select Case TskProgress
                    Case 1                              ' |fffd||fffd||18a||fffd||fffd||fffd|
                        progress_date = CDate(TskEndDay)
                        ' |fffd||fffd||fffd||fffd||fffd||fffd||fffd|@|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||702||702||fffd||fffd||42a90||fffd||fffd||fffd||fffd||fffd||fffd||202||fffd||fffd|B
                    Case 0                              ' |fffd||fffd||196||fffd||fffd||fffd||fffd||fffd|
                        progress_date = CDate(TskStartDay)
                    Case Else                           ' |fffd||fffd||192||fffd|
                    
                        With Application.WorksheetFunction
                            OperationDay = GetOperationDayCount(TskStartDay, TskEndDay, isNonOpeday)
                            ' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||30f||fffd||fffd||fffd|H|fffd||fffd||fffd|i|fffd|[|fffd||fffd||fffd|j|fffd||fffd||fffd||fffd||fffd||7c2||fffd|
                            ' |fffd||fffd||fffd||fffd||fffd|_|fffd||209||fffd||fffd||24c||b377||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||90bd||fffd||7c1|A100|fffd|{|fffd||fffd||fffd||110||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||7c2||fffd||fffd||fffd||fffd||182||fffd|100|fffd||14a||fffd||fffd||fffd||7c2||fffd|
'                            consumptionDay = .RoundUp(OperationDay * TskProgress, 1)
                            consumptionDay = Int(OperationDay * TskProgress * 100) / 100
                            considerationDay = .RoundUp(consumptionDay, 0)
                            ' single|fffd||fffd||fffd|g|fffd||fffd||fffd||192|l|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||102||fffd||fffd||702||fffd||fffd||302||fffd|var|fffd|^|fffd||fffd||fffd|g|fffd||fffd|
                            fraction = consumptionDay - Int(consumptionDay)
                        End With
                        
                        If isNonOpeday Then     ' |fffd||fffd||fffd||5c2||109||493||fffd||fffd||fffd||fffd||182||742||202||fffd|
                            progress_date = considerationDay - 1 + CDate(TskStartDay)
                        Else
                            lOpeCount = -1
                            For lSearchOpeDay = 0 To considerationDay - 1
                                lOpeCount = lOpeCount + 1
                                ' |fffd|`|fffd|F|fffd|b|fffd|N|fffd||fffd||fffd||fffd||fffd||fffd||493||fffd||fffd||fffd||fffd|i|fffd|[|fffd|z|fffd||fffd||251||fffd||fffd||742||fffd||fffd||202||fffd||fffd||202||fffd||702||14c|J|fffd||fffd||502||fffd||fffd|i|fffd|c|fffd||193||fffd||fffd||fffd|T|fffd||fffd||fffd|j
                                Do While Not IsError(Application.Match(CVar(CDate(TskStartDay) + lOpeCount), arrayNonOpeday, 0))
                                    lOpeCount = lOpeCount + 1
                                Loop
                            Next
                            
                            ' |fffd|^|fffd|X|fffd|N|fffd||349||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||30f||fffd||502||142||fffd||fffd||fffd||fffd|H
                            If lOpeCount = -1 Then          ' |fffd|c|fffd||193||fffd||fffd||fffd||fffd||fffd||fffd||742||fffd||fffd||202||fffd|
                                ' |fffd|^|fffd|X|fffd|N|fffd||34a|J|fffd|n|fffd||fffd||fffd||30f||fffd||fffd|
                                progress_date = CDate(TskStartDay)
                            Else
                                ' |fffd|J|fffd|n|fffd||fffd||fffd|{|fffd|H|fffd||fffd||fffd||fffd||fffd||fffd||fffd||f0b7||fffd||fffd||702||142||257|v|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|i|fffd||fffd||fffd||fffd||fffd||102||fffd||fffd||fffd|
                                progress_date = CDate(TskStartDay) + lOpeCount
                            End If
                        End If
                End Select
                
                ' |fffd||2433| (|fffd|[|fffd||fffd||fffd||fffd||fffd||202||fffd||fffd||182||fffd||fffd||353||fffd||fffd||fffd||fffd||fffd||fffd||fffd||182||702||14a||fffd||fffd||fffd||fffd||fffd||fffd||102||fffd||fffd||fffd||182||742||202||fffd||fffd||fffd|J|fffd|n|fffd||292|u|fffd||17093||fffd||fffd||310||64ea||fffd||255||2433||fffd||fffd||fffd||fffd|)
                If lOpeCount <> -1 And fraction = 0 And TskProgress > 0 Then
                    progress_date = DateAdd("d", 1, progress_date)
                    consumptionDay = consumptionDay + 1
                    considerationDay = considerationDay + 1
                End If
                
                ' |fffd|^|fffd|X|fffd|N|fffd||316||fffd||fffd|O|fffd|I|fffd|u|fffd|W|fffd|F|fffd|N|fffd|g|fffd||fffd|o|fffd|^|fffd||fffd||fffd||fffd|
                Call AddTaskName(shtCanvas, i)
                
                ' |fffd|v|fffd||fffd||fffd|W|fffd|F|fffd|N|fffd|g|fffd||fffd||fffd||502||fffd||fffd||fffd||fffd||fffd|t|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||10a|Y|fffd||fffd||fffd||fffd||fffd||fffd||fffd||50d||fffd||fffd||fffd||fffd||64fe||fffd||fffd||fffd||fffd|
                If progress_date < CDate(Range_Cal_S) Then
                    ' |fffd||fffd||fffd|t|fffd||fffd||fffd|v|fffd||fffd||fffd|W|fffd|F|fffd|N|fffd|g|fffd||fffd||fffd||502||30a|J|fffd|n|fffd||fffd||fffd||fffd||83ec||fffd||fffd||fffd||fffd||fffd||a347||fffd||343|v|fffd||fffd||fffd|W|fffd|F|fffd|N|fffd|g|fffd|J|fffd|n|fffd||fffd||242||fffd||fffd||fffd|
                    isOutsideAreaS = True
                    Col_Tsk = Range_Cal_S.Column
                ElseIf progress_date > CDate(Range_Cal_E) Then
                    ' |fffd||fffd||fffd|t|fffd||fffd||fffd|v|fffd||fffd||fffd|W|fffd|F|fffd|N|fffd|g|fffd||fffd||fffd||502||30f|I|fffd||fffd||fffd||fffd||fffd||fffd||fffd||50ab||fffd||fffd||fffd||a347||fffd||343|v|fffd||fffd||fffd|W|fffd|F|fffd|N|fffd|g|fffd|I|fffd||fffd||fffd||fffd||242||fffd||fffd||fffd|
                    isOutsideAreaE = True
                    Col_Tsk = Range_Cal_E.Column
                Else
                    Col_Tsk = GetCalCol(arrayWorkPeriodArg, progress_date, 1, arrayWorkPeriodMax)
                    If Col_Tsk = 0 Then
                        ' |fffd||fffd||fffd|t|fffd||fffd||fffd||fffd||fffd||82||fffd||fffd||fffd||202||fffd||fffd||fffd||fffd||fffd||fffd||a347||fffd||343|v|fffd||fffd||fffd|W|fffd|F|fffd|N|fffd|g|fffd|J|fffd|n|fffd||fffd||242||fffd||fffd||fffd|
                        Col_Tsk = Col_Tsk + Range_Cal_S.Column
                    Else
                        Col_Tsk = Col_Tsk + Range_Cal_S.Column - 1
                    End If
                End If
                
                ' |fffd||fffd||fffd||fffd||fffd||64fe||fffd||fffd|true|fffd||302||182||fffd||fffd|A|fffd||fffd||fffd||fffd||fffd||fffd||fffd||64fe||fffd||fffd||fffd||fffd|
                With shtDataList
                    If .Range(GET_HISTORY_CELL) = 1 Then
                        ' |fffd|^|fffd|X|fffd|N|fffd||317||fffd||fffd||fffd||fffd||fffd||fffd|L|fffd|^|fffd||fffd||fffd||fffd|
                        ' |fffd||fffd||fffd||fffd||fffd||fffd||fffd|@|fffd||202||fffd||fffd||64ea||fffd|^|fffd|X|fffd|N|fffd||30f||a347||fffd||341|H|fffd|@|fffd||348||342||fffd||fffd||fffd||fffd||fffd||fffd||a347||fffd||356||fffd||fffd|O|fffd||fffd|t|fffd||fffd||fffd||fffd||fffd||202||fffd||fffd|H
'                        If i = canvas_info.top_task.Row Then
'                            HistoryName = NM_TT
'                        Else
                            HistoryName = shtCanvas.Range(i & ":" & i).Name.Name
'                        End If
                        
                        If CDate(progress_date) < CDate(sReportDate) Then
                            ' |fffd|x|fffd||fffd|
                            If fraction = 0 Then
                                consumptionDay = (Abs(progress_date - CDate(sReportDate)) + fraction) * -1
                            Else
                                consumptionDay = (Abs(progress_date - CDate(sReportDate) - 1) - (1 - fraction)) * -1
                            End If
                        Else
                            ' |fffd|I|fffd||fffd||fffd|X|fffd|P|fffd||702||fffd||fffd||350||fffd|s
                            consumptionDay = progress_date - CDate(sReportDate) + fraction
                        End If
                            
                        Call AddHistory(shtCanvas, HistoryName, sReportDate, consumptionDay)
                        
                    End If
                End With
                
                ' |fffd|^|fffd|X|fffd|N|fffd||303|Z|fffd||fffd||fffd||292|u|fffd||fffd||fffd||fffd||fffd|W|fffd||255||3ca||fffd||fffd||fffd||fffd||114|z|fffd||fffd||24a|i|fffd|[|fffd||fffd||fffd||fffd|
                ' 0:LEFT/X 1:LEFT/Y 2:RIGHT/X 3:RIGHT/Y 4:MIDDLE/X
                With shtCanvas
                    ' |fffd|^|fffd|X|fffd|N|fffd||310|i|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|v|fffd||fffd||fffd|W|fffd|F|fffd|N|fffd|g|fffd||fffd||fffd||501|i|fffd|Z|fffd||fffd||fffd|j|fffd||fffd||fffd|Z|fffd|o|fffd||fffd||fffd||fffd|
                    Set range_in_progress_date = .Range(.Cells(i, Col_Tsk), .Cells(i + MAX_TskLine - 1, Col_Tsk))
                
                    ' |fffd|i|fffd||fffd||fffd||fffd||fffd||311||fffd||fffd||fffd||fffd||fffd|v|fffd||fffd||fffd|W|fffd|F|fffd|N|fffd|g|fffd||fffd||fffd||517||fffd||314||348||341|i|fffd|J|fffd|n|fffd||fffd||fffd||18f|I|fffd||fffd||fffd||fffd||fffd|j|fffd||fffd||fffd||fffd||fffd||7c2||fffd|
                    ' |fffd|i|fffd||fffd||fffd||fffd||fffd||fffd||fffd|v|fffd||fffd||fffd|W|fffd|F|fffd|N|fffd|g|fffd||fffd||fffd||502||30a|J|fffd|n|fffd||fffd||fffd||20d|~|fffd||142||fffd||fffd||fffd||382|P|fffd||fffd||fffd||fffd||fffd||111|O|fffd||317||fffd||313||fffd||fffd|t|fffd||fffd||fffd||fffd||fffd||7c2||fffd|
                    If Col_Tsk > Range_Cal_S.Column Then
                        first_date_in_projectperiod_column = CDate(.Cells(Row_Cal, Col_Tsk - 1))
                    Else
                        first_date_in_projectperiod_column = CDate(.Cells(Row_Cal, Col_Tsk))
                    End If
                    ' |fffd|^|fffd|X|fffd|N|fffd||310|i|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|v|fffd||fffd||fffd|W|fffd|F|fffd|N|fffd|g|fffd||fffd||fffd||502||303|Z|fffd||fffd||fffd||312|l|fffd|i|fffd||fffd||fffd||fffd||30d||14f|I|fffd||fffd||fffd|t|fffd|j|fffd||fffd||fffd||fffd||fffd||7c2||fffd|
                    last_date_in_projectperiod_column = CDate(.Cells(Row_Cal, Col_Tsk))
                    
                    ' GetPoint  arg1:|fffd|i|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|   arg2:|fffd|P|fffd||fffd||fffd||fffd||fffd||fffd||fffd||30f||fffd||fffd||fffd|H|fffd||fffd| arg3:|fffd|i|fffd||fffd||fffd||fffd| arg4:|fffd|i|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||302|P|fffd||fffd|O|fffd||303|Z|fffd||fffd||fffd||312|l|fffd|i|fffd||fffd||fffd|t|fffd|j arg5:|fffd|i|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||312|l|fffd|i|fffd||fffd||fffd|t|fffd|j   arg6:|fffd||fffd||210||fffd||fffd|J|fffd|n|fffd||2433||fffd|p
                    '           RANGE                   Variant                 Date        Date                                            Date                                long:0|fffd||152||fffd|
                    VarTemp = GetPoint(range_in_progress_date, fraction, progress_date, first_date_in_projectperiod_column, last_date_in_projectperiod_column, 0)
                End With
                
                ' |fffd|J|fffd|n|fffd|\|fffd||fffd||fffd||fffd||fffd||fffd|v|fffd||fffd||fffd|W|fffd|F|fffd|N|fffd|g|fffd||fffd||fffd||514||348||34a|O|fffd||302||182||fffd||fffd||311||38f||fffd|
                sinDiff = 0
                If isOutsideAreaS Then
                    sinDiff = (VarTemp(3) - VarTemp(1)) * (1 / 4)
                    VarTemp(2) = VarTemp(0)
                    VarTemp(4) = VarTemp(0)
                End If
                
                ' |fffd|I|fffd||fffd||fffd|\|fffd||fffd||fffd||fffd||fffd||fffd|v|fffd||fffd||fffd|W|fffd|F|fffd|N|fffd|g|fffd||fffd||fffd||514||348||34a|O|fffd||302||182||fffd||fffd||311||38f||fffd|
                If isOutsideAreaE Then
                    sinDiff = (VarTemp(3) - VarTemp(1)) * (1 / 4)
                    VarTemp(4) = VarTemp(2)
                End If
                
                ' |fffd||fffd||210||fffd||fffd||30d||fffd||fffd|W|fffd||fffd|z|fffd||fffd||24a|i|fffd|[|fffd||fffd||fffd||fffd|
                i_PLPoint = SetInPLPointArray(i_PLPoint, arrayPLPointX, arrayPLPointY, VarTemp, sinDiff, isOutsideAreaS Or isOutsideAreaE)

            End If
        End If
    Next
    
    ' |fffd|v|fffd||fffd||fffd|W|fffd|F|fffd|N|fffd|g|fffd||fffd||fffd||502||fffd||fffd||72c1||fffd||7c2||fffd||fffd||fffd||fffd||fffd||fffd||303|Z|fffd||fffd||fffd||fffd||fffd||fffd||fffd||182||241|A|fffd||fffd||210||fffd||fffd||30f|I|fffd||fffd||fffd||fffd||fffd|W|fffd||fffd||fffd||fffd||fffd||80b5||fffd||a39e||fffd|z|fffd||fffd||24a|i|fffd|[|fffd||fffd||fffd||fffd|
    i_PLPoint = i_PLPoint + 1
    arrayPLPointY(i_PLPoint) = shtCanvas.Cells(Row_PL_E + 1, Col_PL).Top    '|fffd||fffd||210||fffd||fffd|I|fffd|_:Y|fffd||fffd||fffd|W
    arrayPLPointX(i_PLPoint) = arrayPLPointX(0)                             '|fffd||fffd||210||fffd||fffd|I|fffd|_:X|fffd||fffd||fffd|W
    
    ' |fffd|z|fffd||fffd||24a|i|fffd|[|fffd||fffd||fffd||fffd||fffd||fffd||fffd|W|fffd||fffd||fffd||fffd||fffd||248||fffd||210||fffd||fffd||fffd|`|fffd||60b7||fffd||fffd|
    Call DrawProgressLine(shtCanvas, arrayPLPointX, arrayPLPointY, i_PLPoint, STYLE_REPO)
    
    ' |fffd|\|fffd||fffd||fffd|{|fffd||fffd||fffd||fffd||7c2||fffd|
    ActiveWindow.Zoom = savezoom
        
    ' |fffd||fffd||fffd||fffd||fffd|}|fffd|~|fffd||fffd||fffd||fffd|
    With Application
        .ScreenUpdating = True
    End With
    
    ' |fffd||fffd||fffd||fffd||fffd||64fe||fffd||fffd|true|fffd||302||182||fffd||fffd|A|fffd||fffd||fffd||fffd||fffd||fffd||fffd||64fe||fffd||fffd||fffd||fffd|
    With shtDataList
        If .Range(GET_HISTORY_CELL) = 1 Then
            ' |fffd||fffd||210||fffd||fffd||fffd||fffd||fffd||fffd||fffd|`|fffd||60b7||fffd||fffd|
            If .Range("J2").Value = 1 Then Call DrawHistory(shtCanvas, shtDataList, .Range("I2").Value)
            ' |fffd|`|fffd||fffd|Y|fffd||fffd||fffd||fffd||2433||fffd||fffd||fffd||90bd||fffd||7c1|A|fffd||fffd|x|fffd|\|fffd||fffd||fffd|{|fffd||fffd||fffd||fffd|100%|fffd||242||fffd||fffd||102||fffd||fffd||7333||fffd||314|{|fffd||fffd||fffd||256||7c2||fffd|
            Application.ScreenUpdating = False
            ActiveWindow.Zoom = 100
            ActiveWindow.Zoom = savezoom
            Application.ScreenUpdating = True
        End If
    End With
    
    ' |fffd|^|fffd|X|fffd|N|fffd||fffd||fffd||fffd||fffd|N|fffd||fffd||fffd||115|`|fffd||60b7||fffd||fffd|
    If shtDataList.Range(RNG_REFRESH).Value Then Call RefreshLink(shtCanvas)
    
    ' |fffd||794||fffd||fffd||fffd||fffd||102||fffd||fffd||fffd||fffd|Z|fffd||fffd||fffd||fffd||fffd|A|fffd|N|fffd|e|fffd|B|fffd|u|fffd||242||fffd||fffd||fffd|
    rngSaveLocate.Select

    ' |fffd|I|fffd||fffd||fffd||fffd||fffd||fffd|
    Call addRecentFile
    GoTo main_exit

Error_exit:
    
    ' |fffd|\|fffd||fffd||fffd|{|fffd||fffd||fffd||fffd||7c2||fffd|
    ActiveWindow.Zoom = savezoom
    ' |fffd|G|fffd||fffd||fffd|[|fffd||fffd||fffd|b|fffd|Z|fffd|[|fffd|W|fffd|o|fffd||fffd|
    Call OutMessage(err.Description & vbCrLf & WNG_CANVAS_ERROR, vbOKOnly + vbExclamation, MENU_TITLE)
    
main_exit:
    
    ' |fffd|e|fffd|I|fffd|u|fffd|W|fffd|F|fffd|N|fffd|g|fffd||fffd||fffd|J|fffd||fffd||fffd||fffd||fffd||fffd|
    Set shtCanvas = Nothing
    Set shtDataList = Nothing
    Set oShape = Nothing
    Set rngSaveLocate = Nothing
        
    ' |fffd||fffd||fffd||fffd||fffd|}|fffd|~|fffd||fffd||fffd||fffd|
    With Application
        .Calculation = saveExcelCalc
    End With

End Sub

Function ExistSheet(ByVal sheetName As String) As Boolean

    ' |fffd||fffd||fffd|[|fffd|J|fffd||fffd||fffd||3d0||fffd||fffd||fffd|`
    Dim Sheet_Work  As Worksheet
    Dim f_Exist     As Boolean
    
    ' |fffd|A|fffd|N|fffd|e|fffd|B|fffd|u|fffd|u|fffd|b|fffd|N|fffd||fffd||fffd||311|S|fffd|V|fffd|[|fffd|g|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||153|n|fffd||fffd||fffd||a0bd||fffd|V|fffd|[|fffd|g|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
    For Each Sheet_Work In ActiveWorkbook.Worksheets
        If Sheet_Work.Name = sheetName Then f_Exist = True: Exit For
    Next
    
    ExistSheet = f_Exist

End Function

'
' |fffd|@|fffd|\      : NAME|fffd|I|fffd|u|fffd|W|fffd|F|fffd|N|fffd|g|fffd||fffd||fffd||743|`|fffd|F|fffd|b|fffd|N
'
' |fffd||502||fffd|l    : True|fffd|iOK|fffd|j|fffd|^False|fffd|iNG|fffd|j
'
' |fffd||fffd||fffd||fffd||fffd||fffd|    : CanvasSheet [Worksheet]
'
' |fffd|@|fffd|\|fffd||fffd||fffd||fffd|  : |fffd||fffd||fffd|[|fffd|N|fffd|V|fffd|[|fffd|g|fffd||255|K|fffd|{NAME|fffd|I|fffd|u|fffd|W|fffd|F|fffd|N|fffd|g|fffd||fffd||fffd||fffd||fffd||fffd||fffd||102||fffd||fffd||90a9|
'             |fffd|`|fffd|F|fffd|b|fffd|N|fffd||fffd||fffd||fffd|
Function RunCheck(ByRef canvasSheet As Worksheet) As Boolean
    
    ' |fffd||fffd||fffd|[|fffd|J|fffd||fffd||fffd||3d0||fffd||fffd||fffd|`
    Dim i           As Long
    Dim va_Names    As Variant
    Dim sNamesTable As String
    Dim f_Check     As Boolean
    
    ' |fffd||7c2||fffd|l|fffd||30f||fffd||fffd||fffd||fffd||752||fffd|
    f_Check = True
    
    ' NAME|fffd|I|fffd|u|fffd|W|fffd|F|fffd|N|fffd|g|fffd||fffd||fffd||fffd|z|fffd||fffd||24a|i|fffd|[|fffd||fffd||fffd||fffd|
    sNamesTable = NM_CL & "," & NM_PL & "," & NM_SD & "," & NM_ED & "," & NM_PR & "," & NM_TT
    va_Names = Split(sNamesTable, ",")
        
    ' |fffd||fffd||fffd|O|fffd|I|fffd|u|fffd|W|fffd|F|fffd|N|fffd|g|fffd||fffd||fffd|S|fffd||111||fffd||fffd||fffd||fffd||102||fffd||fffd||90a9||fffd|`|fffd|F|fffd|b|fffd|N|fffd||fffd||fffd||fffd|
    For i = 0 To UBound(va_Names)
        If GetNames(canvasSheet, va_Names(i)) = "" Then
            f_Check = False
            Exit For
        End If
    Next
    
    ' |fffd|`|fffd|F|fffd|b|fffd|N|fffd||fffd||fffd||282||fffd||502||fffd|
    RunCheck = f_Check

End Function

Function GetNames(ByRef Worksheet As Worksheet, ByVal sNames As String) As String
    On Error GoTo GetNamesErr

    ' |fffd||fffd||fffd|[|fffd|J|fffd||fffd||fffd||3d0||fffd||fffd||fffd|`
    Dim oWorkName           As Object
    Dim sCanvasSheetName    As String
    
    ' |fffd|`|fffd||fffd|V|fffd|[|fffd|g|fffd||303|V|fffd|[|fffd|g|fffd||fffd||fffd||fffd||fffd||64fe||fffd||fffd||fffd||fffd|
    sCanvasSheetName = Worksheet.Name
    
    ' |fffd||7c2||fffd|l|fffd||30f||fffd||fffd||fffd||fffd||752||fffd|
    GetNames = ""
    
    ' |fffd||fffd||fffd|[|fffd|N|fffd|V|fffd|[|fffd|g|fffd||253|o|fffd|^|fffd||fffd||fffd||fffd||102||fffd||fffd||fffd|NAMES|fffd|I|fffd|u|fffd|W|fffd|F|fffd|N|fffd|g|fffd||fffd||fffd|Q|fffd||182||fffd||fffd||fffd|
    For Each oWorkName In Worksheet.Names
    
        ' NAMES|fffd|I|fffd|u|fffd|W|fffd|F|fffd|N|fffd|g|fffd||fffd||fffd|o|fffd|^|fffd||fffd||fffd||fffd||102||fffd||fffd||fffd||390||752||fffd|l|fffd||fffd||fffd||64fe||fffd||fffd||fffd||fffd|
        If Replace(oWorkName.Name, "'", "") = sCanvasSheetName & "!" & sNames Then
            GetNames = Mid(oWorkName, 2)
            Exit For
        End If
    Next
    
    ' |fffd|I|fffd||fffd||fffd||fffd||fffd||fffd|
    GoTo GetNamesExit
    
GetNamesErr:
    err.Clear

GetNamesExit:
    
End Function

Sub CleanNameObject(ByRef canvasSheet As Worksheet)
    ' |fffd||fffd||fffd|[|fffd|J|fffd||fffd||fffd||3d0||fffd|
    Dim i       As Long
    Dim oName   As Object
    Dim sName   As String
    
    For Each oName In canvasSheet.Names
        ' NameObject|fffd||24e|Q|fffd||183|G|fffd||fffd||fffd|[|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||102||fffd||fffd||90a9||fffd|`|fffd|F|fffd|b|fffd|N|fffd||fffd||fffd||fffd|
        If InStr(oName.refersto, "#REF") > 0 Or InStr(oName.Name, "#REF") > 0 Then
            
            ' |fffd||fffd||fffd|O|fffd|I|fffd|u|fffd|W|fffd|F|fffd|N|fffd|g|fffd||243|V|fffd|[|fffd|g|fffd||fffd||fffd||fffd||fffd||fffd||fffd||742||fffd||fffd||fffd||a347||fffd||343|V|fffd|[|fffd|g|fffd||fffd||fffd||fffd||fffd||d3dc||fffd||fffd||fffd||fffd|
            sName = oName.Name
            i = InStr(1, sName, "!")
            If i > 0 Then sName = Mid(sName, i + 1)
            
            ' |fffd|{|fffd|A|fffd|h|fffd|C|fffd||fffd||fffd||14e|g|fffd|p|fffd||fffd||fffd||102||fffd||fffd||95bc||fffd|O|fffd|I|fffd|u|fffd|W|fffd|F|fffd|N|fffd|g|fffd||30f||a347||fffd||34d||d3dc||fffd||fffd||fffd||fffd|
            If InStr(sName, "!_ts") = 1 Or InStr(sName, "!_PL") = 1 Then oName.Delete
            
        End If
    Next
    
    ' Object|fffd||fffd||fffd|
    Set oName = Nothing

End Sub

Sub onMovement(control As IRibbonControl, ByRef returnValue)

    Dim toggleButtonNumber  As Long
    
    ' toggleButton|fffd|v|fffd|f|fffd||fffd|ON(true)|fffd|EOFF(false)|fffd||fffd||fffd||fffd||fffd||fffd||fffd||752||80b7||fffd||fffd|
    If Left(control.ID, Len("tglPreMovement")) = "tglPreMovement" Then
        toggleButtonNumber = Right(control.ID, 1&)
        returnValue = ThisWorkbook.Worksheets(SHT_DATALIST).Range(RNG_REPORT).OFFSET(toggleButtonNumber - 1).Value
    End If

End Sub

Sub SetDeleteReport(control As IRibbonControl, ByRef returnValue)

    ThisWorkbook.Worksheets(SHT_DATALIST).Range(RNG_REPORT).Value = returnValue
    ' |fffd|e|fffd||fffd||fffd|`|fffd||fffd||fffd||3cd|X|fffd|L|fffd||fffd||fffd|t|fffd||fffd||fffd|O|fffd||fffd|ON|fffd|itrue|fffd|j|fffd||242||fffd||fffd||fffd|
    isSheetUpdate = True

End Sub

Sub SetDeleteHistory(control As IRibbonControl, ByRef returnValue)

    ThisWorkbook.Worksheets(SHT_DATALIST).Range(RNG_HOLIDAY).Value = returnValue
    ' |fffd|e|fffd||fffd||fffd|`|fffd||fffd||fffd||3cd|X|fffd|L|fffd||fffd||fffd|t|fffd||fffd||fffd|O|fffd||fffd|ON|fffd|itrue|fffd|j|fffd||242||fffd||fffd||fffd|
    isSheetUpdate = True

End Sub

Sub SetRefreshLink(control As IRibbonControl, ByRef returnValue)

    ThisWorkbook.Worksheets(SHT_DATALIST).Range(RNG_REFRESH).Value = returnValue
    ' |fffd|e|fffd||fffd||fffd|`|fffd||fffd||fffd||3cd|X|fffd|L|fffd||fffd||fffd|t|fffd||fffd||fffd|O|fffd||fffd|ON|fffd|itrue|fffd|j|fffd||242||fffd||fffd||fffd|
    isSheetUpdate = True

End Sub

Attribute VB_Name = "modProgressLineHistory"
Option Explicit
Option Private Module

Private Type tCANVAS
    prj_period          As Range    ' |fffd|v|fffd||fffd||fffd|W|fffd|F|fffd|N|fffd|g|fffd||fffd||fffd||fffd|
    pl_range            As Range    ' |fffd||fffd||210||fffd||fffd|`|fffd||fffd||348||fffd|
    pl_history_range    As Range    ' |fffd||fffd||fffd||fffd|`|fffd||fffd||348||fffd|
    top_task            As Range    ' |fffd||64ea||fffd|^|fffd|X|fffd|N
    top_startdate       As Range    ' |fffd||64ea||fffd|^|fffd|X|fffd|N|fffd||30a|J|fffd|n|fffd||fffd|
    top_enddate         As Range    ' |fffd||64ea||fffd|^|fffd|X|fffd|N|fffd||30f|I|fffd||fffd||fffd||fffd|
    progress_ratio      As Range    ' |fffd||64ea||fffd|^|fffd|X|fffd|N|fffd||310|i|fffd||fffd||fffd||fffd|
End Type
    
    Dim Row_PL_S                As Long         ' |fffd||fffd||210||fffd||fffd|iProgressLine|fffd|j|fffd||315|`|fffd||fffd|J|fffd|n|fffd||292|u
    Dim Row_PL_E                As Long         ' |fffd||fffd||210||fffd||fffd|iProgressLine|fffd|j|fffd||315|`|fffd||fffd|I|fffd||fffd||fffd||292|u
    Dim Range_Cal_S             As Range        ' |fffd|v|fffd||fffd||fffd|W|fffd|F|fffd|N|fffd|g|fffd||fffd||fffd||502||30a|J|fffd|n|fffd||fffd|
    Dim Range_Cal_E             As Range        ' |fffd|v|fffd||fffd||fffd|W|fffd|F|fffd|N|fffd|g|fffd||fffd||fffd||502||30f|I|fffd||fffd||fffd||fffd|
    Dim Row_Tsk_S               As Long         ' |fffd|^|fffd|X|fffd|N|fffd|J|fffd|n|fffd|s
    Dim Row_Tsk_E               As Long         ' |fffd|^|fffd|X|fffd|N|fffd|I|fffd||fffd||fffd|s
    Dim MAX_TskLine             As Long         ' |fffd|P|fffd|^|fffd|X|fffd|N|fffd||14e|g|fffd|p|fffd||fffd||fffd||fffd|s|fffd||fffd|
    Dim sProgressLine           As String       ' |fffd||fffd||210||fffd||fffd||315|`|fffd||fffd||348||fffd|
    Dim arrayCommentRow         As Variant      ' |fffd|R|fffd||fffd||fffd||fffd||fffd|g|fffd|s|fffd|i|fffd|[|fffd|z|fffd||fffd|
    Dim arrayWorkRows           As Variant      ' |fffd|R|fffd||fffd||fffd||fffd||fffd|g|fffd|s|fffd||fffd||fffd||fffd|p|fffd|z|fffd||fffd|
    Dim csv_SkipLine            As String       ' |fffd|R|fffd||fffd||fffd||fffd||fffd|g|fffd|s|fffd||fffd||fffd|o|fffd|@|fffd|\|fffd||fffd||fffd||fffd||316||7c2||fffd|l|fffd||fffd||fffd|i|fffd|[|fffd||fffd||fffd||fffd||3d0||fffd|
    Dim vDrawHistory            As Variant      ' |fffd|`|fffd||65da||fffd||fffd||fffd||fffd||fffd||fffd|i|fffd|[|fffd||fffd||fffd||fffd|z|fffd||fffd|
    Dim iDrawHistoryIndexMAX    As Long         ' |fffd|`|fffd||65da||fffd||fffd||fffd||fffd|i|fffd|[|fffd|z|fffd||fffd|
    Dim vPLHistory              As Variant      ' |fffd||fffd||210||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|i|fffd|[|fffd||fffd||fffd||fffd|z|fffd||fffd|
    Dim vTaskHistory            As Variant      ' |fffd|^|fffd|X|fffd|N|fffd||fffd||fffd||fffd||fffd|i|fffd|[|fffd|p|fffd|z|fffd||fffd|
    Dim arrayIndexTaskRowNum    As Long         ' |fffd|^|fffd|X|fffd|N|fffd|s|fffd||50d||fffd||fffd|z|fffd||fffd|p|fffd|C|fffd||fffd||fffd|f|fffd|b|fffd|N|fffd|X
    Dim iDrawHistoryCount       As Long         ' |fffd||fffd||fffd||fffd||fffd||fffd|`|fffd||60b5||fffd||fffd||fffd||fffd||fffd||fffd|

Sub ShowHistoryList(control As IRibbonControl)
    On Error Resume Next

    Const ERR_MSG = "|fffd||fffd||fffd||fffd||fffd|f|fffd|[|fffd|^|fffd||fffd||fffd||fffd||fffd||742||fffd||fffd||702||fffd||fffd||fffd|B"
    
    ' |fffd|X|fffd|e|fffd|[|fffd|^|fffd|X|fffd|o|fffd|[|fffd||fffd||fffd||fffd||fffd||fffd|
    Application.StatusBar = ""

    ' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||742||fffd||fffd||fffd||a347||fffd||357||fffd||fffd||fffd||fffd||a5d7||fffd||fffd|\|fffd||fffd||fffd||fffd||fffd||fffd|
    If IsError(ActiveSheet.Names(NM_HT)) Then
        Application.StatusBar = ERR_MSG
        err.Clear
    ElseIf ActiveSheet.Names(NM_HT).comment = "" Then
        Application.StatusBar = ERR_MSG
    Else
        ' |fffd||fffd||210||fffd||fffd||fffd||fffd||fffd||fffd||a5d7||fffd||fffd|\|fffd||fffd||fffd||fffd||fffd||fffd|
        frmHistoryList.Show
    End If
    
End Sub

Sub ShowHistoryEdit(control As IRibbonControl)
    ' |fffd||fffd||210||fffd||fffd||fffd||fffd||fffd||752||fffd||fffd|\|fffd||fffd||fffd||fffd||fffd||fffd|
    frmPLHistory.Show
End Sub


'
' |fffd|@|fffd|\      : |fffd||fffd||210||fffd||fffd||fffd||fffd||fffd||fffd||1d7||fffd||fffd|I|fffd|u|fffd|W|fffd|F|fffd|N|fffd|g|fffd|o|fffd|^
'
' |fffd||502||fffd|l    : |fffd||202||fffd|
'
' |fffd||fffd||fffd||fffd||fffd||fffd|    : CanvasSheet [Worksheet]
' |fffd|@|fffd|@|fffd|@    : TargetRange [String]
'
' |fffd|@|fffd|\|fffd||fffd||fffd||fffd|  : |fffd||fffd||fffd||fffd||fffd||153|n|fffd||fffd||fffd||a0bd||fffd|V|fffd|[|fffd|g|fffd||248||fffd||210||fffd||fffd||fffd||fffd||fffd||fffd||1d7||fffd||fffd|I|fffd|u|fffd|W|fffd|F|fffd|N|fffd|g|fffd||fffd|o|fffd|^|fffd||fffd||fffd||fffd|
'
Sub AddHistoryManager(ByRef canvasSheet As Worksheet, ByVal targetRange As String)
    On Error Resume Next
    ' |fffd||fffd||fffd|[|fffd|J|fffd||fffd||fffd||3d0||fffd||fffd||fffd|`
    Dim sRangeR1C1  As String
    
    ' |fffd|I|fffd|u|fffd|W|fffd|F|fffd|N|fffd|g|fffd||fffd||fffd||fffd||fffd|o|fffd|^|fffd||30f||a347||fffd||343|^|fffd|X|fffd|N|fffd||316||fffd||fffd|O|fffd|I|fffd|u|fffd|W|fffd|F|fffd|N|fffd|g|fffd||fffd|o|fffd|^|fffd||fffd||fffd||fffd|
    If GetNames(canvasSheet, NM_HT) = "" Then
        sRangeR1C1 = canvasSheet.Range(targetRange).Address(ReferenceStyle:=xlR1C1)
        canvasSheet.Names.Add Name:=NM_HT, RefersToR1C1:="=" & sRangeR1C1
        ' |fffd||fffd||fffd|O|fffd|I|fffd|u|fffd|W|fffd|F|fffd|N|fffd|g|fffd||fffd||fffd|\|fffd||fffd||fffd||242||fffd||fffd||fffd|
'        CanvasSheet.Names(NM_HT).Visible = False
        ' |fffd||fffd||fffd||fffd||fffd|f|fffd|[|fffd|^|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
        canvasSheet.Names(NM_HT).comment = ""
    End If
    
    ' |fffd|G|fffd||fffd||fffd|[|fffd||fffd||502||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
    err.Clear
    
End Sub

'
' |fffd|@|fffd|\      : |fffd||fffd||fffd|O|fffd|I|fffd|u|fffd|W|fffd|F|fffd|N|fffd|g|fffd||a287||fffd|o|fffd|^
'
' |fffd||502||fffd|l    : |fffd||202||fffd|
'
' |fffd||fffd||fffd||fffd||fffd||fffd|    : |fffd||202||fffd|
'
' |fffd|@|fffd|\|fffd||fffd||fffd||fffd|  : |fffd|A|fffd|N|fffd|e|fffd|B|fffd|u|fffd|V|fffd|[|fffd|g|fffd||243|^|fffd|X|fffd|N|fffd||316||fffd||fffd|O|fffd|I|fffd|u|fffd|W|fffd|F|fffd|N|fffd|g|fffd||fffd||fffd||a287||fffd|o|fffd|^|fffd||fffd||fffd||fffd|
'
Sub AddAllTaskName(ByRef shtCanvas As Worksheet)
    On Error Resume Next
    
    ' |fffd|`|fffd||fffd|V|fffd|[|fffd|g|fffd||313|o|fffd|^|fffd||fffd||fffd||fffd||fffd||64fe||fffd||fffd||fffd||fffd|
    Dim canvas_info         As tCANVAS
    canvas_info = GetCanvasInfo(shtCanvas.Name)
    
    ' |fffd||64ea||fffd|^|fffd|X|fffd|N|fffd|s|fffd||fffd||fffd||64fe||fffd||fffd||fffd||fffd|
    Row_Tsk_S = canvas_info.top_task.Row
    
    If Row_Tsk_S = 0 Then GoTo AddAllTaskName_exit
    ' |fffd|^|fffd|X|fffd|N|fffd|\|fffd||fffd||fffd|s|fffd||fffd||fffd||fffd||fffd||64fe||fffd||fffd||fffd||fffd|
    Dim Row_Tsk_Rows    As Long
    Row_Tsk_Rows = canvas_info.top_task.Rows.Count
    
    ' |fffd||fffd||210||fffd||fffd||315|`|fffd||fffd||348||fffd|NameObject|fffd||fffd||fffd||64fe||fffd||fffd||fffd||fffd|
    sProgressLine = canvas_info.pl_range.Address
    
    ' |fffd||fffd||210||fffd||fffd|`|fffd||fffd|J|fffd|n|fffd|s|fffd||fffd||fffd||fffd||fffd||64fe||fffd||fffd||fffd||fffd|
    Row_PL_S = canvas_info.pl_range.Row
    
    ' |fffd||fffd||210||fffd||fffd|`|fffd||fffd|I|fffd||fffd||fffd|s|fffd||fffd||fffd||fffd||fffd||64fe||fffd||fffd||fffd||fffd|
    Row_PL_E = Row_PL_S + canvas_info.pl_range.Rows.Count - 1
    
    ' |fffd|^|fffd|X|fffd|N
    Row_Tsk_E = Row_PL_E
    
    ' |fffd|R|fffd||fffd||fffd||fffd||fffd|g|fffd|s|fffd|i|fffd|[|fffd|z|fffd||fffd||fffd||fffd|^|fffd|X|fffd|N|fffd|s|fffd||fffd||fffd||fffd||fffd|m|fffd||6c2||fffd||fffd||fffd|
    ReDim arrayCommentRow(Row_Tsk_E)
    
    ' |fffd|R|fffd||fffd||fffd||fffd||fffd|g|fffd|s|fffd|z|fffd||fffd||fffd||fffd|i|fffd|[|fffd||fffd||fffd||fffd|
    csv_SkipLine = GetSkipRows(shtCanvas)
    ' |fffd|Q|fffd||183|G|fffd||fffd||fffd|[|fffd||fffd||fffd||fffd||fffd||fffd||fffd||311||38f||fffd|
    If InStr(csv_SkipLine, "#REF") > 0 Then
        Call OutMessage("|fffd|R|fffd||fffd||fffd||fffd||fffd|g|fffd|s" & ERR_REF_ERROR & vbCrLf & WNG_COMMENT_ERROR, vbOKOnly + vbExclamation, "|fffd|`|fffd||fffd|V|fffd|[|fffd|g|fffd||752||fffd|")
        GoTo AddAllTaskName_exit
    End If
    
    ' |fffd|R|fffd||fffd||fffd||fffd||fffd|g|fffd|s|fffd||fffd||fffd||fffd||fffd||742||fffd||fffd||fffd||a347||fffd|A|fffd|R|fffd||fffd||fffd||fffd||fffd|g|fffd|s|fffd||fffd|z|fffd||fffd||24a|i|fffd|[|fffd||fffd||fffd||fffd|
    Dim i               As Long
    If csv_SkipLine <> "" Then
        arrayWorkRows = Split(csv_SkipLine, ",")
        For i = 0 To UBound(arrayWorkRows)
            ' |fffd|R|fffd||fffd||fffd||fffd||fffd|g|fffd|s|fffd||fffd||fffd||fffd||210||fffd||fffd||315|`|fffd||fffd||348||34a|O|fffd||30f||a347||fffd||356||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
            If arrayWorkRows(i) <= Row_Tsk_E Then arrayCommentRow(arrayWorkRows(i)) = "ON"
        Next
    End If
    
    ' |fffd|^|fffd|X|fffd|N|fffd|s|fffd||249||7cb||fffd||fffd||fffd||210||fffd||fffd|pNameObject|fffd||fffd||1c9||fffd||fffd||fffd||fffd||fffd|
    For i = Row_Tsk_S To Row_Tsk_E Step Row_Tsk_Rows
        ' |fffd||fffd|\|fffd||fffd||fffd|Z|fffd||fffd||fffd||242||fffd||83c8||fffd||fffd||fffd||fffd|U|fffd||856a||fffd||fffd||fffd||fffd|
        If shtCanvas.Rows(i).Hidden Then
            ' |fffd||fffd|\|fffd||fffd||fffd|Z|fffd||fffd||fffd||fffd||fffd|R|fffd||fffd||fffd||fffd||fffd|g|fffd||302||182||fffd||fffd||34f||fffd||fffd||fffd||fffd||fffd||fffd||303|^|fffd|X|fffd|N|fffd||fffd||fffd|X|fffd|L|fffd|b|fffd|v|fffd||fffd||fffd||fffd|
            If arrayCommentRow(i) = "ON" Then
                i = i - Row_Tsk_Rows + 1
            End If
        Else
            ' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||30d|s|fffd||fffd||fffd|R|fffd||fffd||fffd||fffd||fffd|g|fffd|s|fffd||142||fffd||fffd||fffd||391||38f||6ca|O|fffd||182||fffd||fffd||fffd|
            If arrayCommentRow(i) = "ON" Then
                i = i - Row_Tsk_Rows + 1
            Else
                Call AddTaskName(shtCanvas, i)
            End If
            
        End If
    Next
AddAllTaskName_exit:

End Sub

'
' |fffd|@|fffd|\      : |fffd||fffd||fffd|O|fffd|I|fffd|u|fffd|W|fffd|F|fffd|N|fffd|g|fffd||95||293|o|fffd|^
'
' |fffd||502||fffd|l    : |fffd||202||fffd|
'
' |fffd||fffd||fffd||fffd||fffd||fffd|    : shtCanvas [Worksheet]
' |fffd|@|fffd|@|fffd|@    : TargetRow [Long]
' |fffd|@|fffd|@|fffd|@    : MyName [String]
'
' |fffd|@|fffd|\|fffd||fffd||fffd||fffd|  : |fffd||fffd||fffd||fffd||fffd||153|n|fffd||fffd||fffd||a0bd||fffd|V|fffd|[|fffd|g|fffd||243|^|fffd|X|fffd|N|fffd||316||fffd||fffd|O|fffd|I|fffd|u|fffd|W|fffd|F|fffd|N|fffd|g|fffd||fffd|o|fffd|^|fffd||fffd||fffd||fffd|
'
Sub AddTaskName(ByRef shtCanvas As Worksheet, ByVal targetRow As Long, Optional ByVal MyName As String)
    On Error Resume Next
    ' |fffd||fffd||fffd|[|fffd|J|fffd||fffd||fffd||3d0||fffd||fffd||fffd|`
    Dim i               As Long
    Dim lDate           As Long
    Dim sTIME           As String
    Dim sName           As String
    Dim sExistName      As String
    Dim sRangeR1C1      As String
    Dim sRange          As String
    
    If MyName = "" Then
        ' |fffd|V|fffd|X|fffd|e|fffd||fffd||fffd||fffd||fffd|t|fffd||fffd||fffd||64fe||fffd||fffd||fffd||fffd|
        lDate = DateValue(Now)
        ' |fffd||fffd||fffd||74e||fffd||fffd||fffd||fffd||fffd||fffd||64fe||fffd||fffd||fffd||fffd|
        sTIME = TimeValue(Now)
        sTIME = Replace(sTIME, ":", "")
        sName = "_ts" & targetRow & "_" & lDate & sTIME
    Else
        sName = MyName
    End If
    
    err.Clear
    
    ' |fffd|I|fffd||fffd||348||342||303|A|fffd|h|fffd||fffd||fffd|X|fffd|`|fffd||fffd||fffd||fffd|A1|fffd|`|fffd||fffd||fffd||fffd||fffd||fffd|R1C1|fffd|`|fffd||fffd||fffd||255||3ca||fffd||fffd||fffd||fffd||fffd|
    sRangeR1C1 = shtCanvas.Range(targetRow & ":" & targetRow).Address(ReferenceStyle:=xlR1C1)
    
    ' |fffd|I|fffd|u|fffd|W|fffd|F|fffd|N|fffd|g|fffd||fffd||fffd||fffd||fffd|o|fffd|^|fffd||30f||a347||fffd||343|^|fffd|X|fffd|N|fffd||316||fffd||fffd|O|fffd|I|fffd|u|fffd|W|fffd|F|fffd|N|fffd|g|fffd||fffd|o|fffd|^|fffd||fffd||fffd||fffd|
    ' |fffd|^|fffd|X|fffd|N|fffd||fffd||fffd|P|fffd|s|fffd|\|fffd||fffd||fffd||30f||a347||fffd|ATopTask|fffd||fffd||fffd|g|fffd||fffd||fffd|B
    sExistName = shtCanvas.Range(targetRow & ":" & targetRow).Name.Name
    If sExistName = "" Then
        err.Clear
        shtCanvas.Names.Add Name:=sName, RefersToR1C1:="=" & sRangeR1C1
        ' |fffd||fffd||fffd|O|fffd|I|fffd|u|fffd|W|fffd|F|fffd|N|fffd|g|fffd||fffd||fffd|\|fffd||fffd||fffd||242||fffd||fffd||fffd|
'        shtCanvas.Names(sName).Visible = False
        ' |fffd||fffd||fffd||fffd||fffd|f|fffd|[|fffd|^|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
        shtCanvas.Names(sName).comment = ""
    Else
        ' |fffd||fffd||fffd||fffd||fffd||303|Z|fffd||fffd||fffd||348||34f||fffd||fffd||243|V|fffd|[|fffd|g|fffd||fffd||fffd||fffd||fffd||702||702||fffd||102||fffd||fffd||fffd||a347||fffd||341|A|fffd|V|fffd|[|fffd|g|fffd||fffd||fffd||fffd||fffd||d3dc||fffd||fffd||fffd||fffd|
        sRange = shtCanvas.Names(sExistName).RefersToR1C1
        i = InStr(1, sRange, "!")
        If i > 0 Then sRange = Mid(sRange, i + 1)
        If sRange <> sRangeR1C1 Then
            shtCanvas.Names.Add Name:=sName, RefersToR1C1:="=" & sRangeR1C1
            ' |fffd||fffd||fffd|O|fffd|I|fffd|u|fffd|W|fffd|F|fffd|N|fffd|g|fffd||fffd||fffd|\|fffd||fffd||fffd||242||fffd||fffd||fffd|
'            shtCanvas.Names(sName).Visible = False
            ' |fffd||fffd||fffd||fffd||fffd|f|fffd|[|fffd|^|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
            shtCanvas.Names(sName).comment = ""
        End If
    End If
    
    ' |fffd|G|fffd||fffd||fffd|[|fffd||fffd||502||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
    err.Clear
    
End Sub

Sub AddHistory(ByRef shtCanvas As Worksheet, ByVal MyName As String, ByVal MyDate As String, Optional ByVal progress As String)

    ' |fffd||fffd||fffd|[|fffd|J|fffd||fffd||fffd||3d0||fffd|
    Dim oName           As Object
    Dim vSaveName       As Variant
    Dim i               As Long
    Dim iLocate         As Long
    Dim iStatus         As Long
    Dim lNameCountMAX   As Long
    Dim lNameCount      As Long
    Dim sComment        As String
    Dim sDate           As String
    Dim sWork           As String
    Dim sSaveName       As String
    Dim sNewName        As String
    
    ' |fffd||fffd||fffd||fffd||fffd||315||4d413||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|O|fffd|^|fffd||255||3ca||fffd||fffd||fffd||fffd||fffd|
    sDate = CLng(DateValue(MyDate))
    
    ' |fffd||fffd||fffd|[|fffd|N|fffd|V|fffd|[|fffd|g|fffd||251||fffd||fffd||742||fffd||fffd||9561||fffd||fffd||fffd||316||fffd||fffd|O|fffd|I|fffd|u|fffd|W|fffd|F|fffd|N|fffd|g|fffd||fffd||fffd||75da||fffd||fffd||fffd|f|fffd|[|fffd|^|fffd||1228f|o|fffd||fffd||fffd|b|fffd|r|fffd|u|fffd|`|fffd||fffd||fffd||24c||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
    iStatus = 0
    sSaveName = ""
    sComment = ""
    
    For Each oName In shtCanvas.Names
        If InStr(1, oName.Name, MyName) > 0 Then
            iStatus = 1
            sComment = sComment & "," & oName.comment
            sSaveName = sSaveName & "," & oName.Name
        ElseIf iStatus = 1 Then
            iStatus = 2
        End If
        If iStatus = 2 Then Exit For
    Next
    ' |fffd||64ea||fffd||303|J|fffd||fffd||fffd|}|fffd||fffd||fffd||d3dc||fffd||fffd||fffd||fffd|
    If sComment <> "" Then
        sComment = Mid(sComment, 2)
        sSaveName = Mid(sSaveName, 2)
    End If
    
    ' |fffd||7cb||fffd||fffd||fffd||fffd|t|fffd|f|fffd|[|fffd|^|fffd||fffd||fffd||fffd||fffd||742||fffd||fffd||fffd||a347||fffd||34f||fffd||fffd||fffd||fffd||fffd||fffd|p|fffd||fffd||fffd||fffd||fffd||fffd|
    If sComment <> "" Then
            
        ' |fffd||fffd||210||fffd||fffd||fffd||fffd||fffd||fffd||1d7||fffd||fffd||188||fffd||210||fffd||fffd||fffd||fffd||fffd||fffd||14f||fffd||fffd||fffd||fffd||fffd|U|fffd||856a||fffd||fffd||fffd||fffd|
        If InStr(1, MyName, NM_HT) > 0 Then
            If sComment = "" Then
                sComment = sDate
            Else
                sComment = sDate & "," & sComment
            End If
        Else    ' |fffd||fffd||210||fffd||fffd||fffd||fffd||fffd|
            If sComment = "" Then
                sComment = sDate & progress
            Else
                sComment = sDate & progress & "," & sComment
            End If
        End If
        
    Else
        
        If progress <> "" Then
            sComment = sDate & progress
        Else
            sComment = sDate
        End If
        
    End If
        
    ' |fffd||fffd||fffd||fffd||fffd|f|fffd|[|fffd|^|fffd||16f11|O|fffd|I|fffd|u|fffd|W|fffd|F|fffd|N|fffd|g|fffd||24a|i|fffd|[|fffd||fffd||fffd||fffd|
    With shtCanvas
        vSaveName = Split(sSaveName, ",")
        lNameCountMAX = UBound(vSaveName)
        
        lNameCount = 0
        Do Until sComment = ""
        
            If lNameCount > lNameCountMAX Then
                sNewName = MyName & "_" & Format(lNameCount, "000")
                .Names.Add Name:=sNewName, RefersToR1C1:=.Names(vSaveName(0)).RefersToR1C1
                ' |fffd||fffd||fffd|O|fffd|I|fffd|u|fffd|W|fffd|F|fffd|N|fffd|g|fffd||fffd||fffd|\|fffd||fffd||fffd||242||fffd||fffd||fffd|
'                .Names(sNewName).Visible = False
            Else
                sNewName = vSaveName(lNameCount)
            End If
    
            ' |fffd||fffd||fffd||fffd||fffd|f|fffd|[|fffd|^|fffd||16f11|O|fffd|I|fffd|u|fffd|W|fffd|F|fffd|N|fffd|g|fffd||24a|i|fffd|[|fffd||fffd||fffd||fffd|
            If Len(sComment) > 255 Then
                sWork = Mid(sComment, 1, 255)
                iLocate = InStrRev(sWork, ",")
                sWork = Mid(sComment, 1, iLocate - 1)
                sComment = Mid(sComment, iLocate + 1)
                .Names(sNewName).comment = sWork
           Else
                .Names(sNewName).comment = sComment
                sComment = ""
            End If
            
            lNameCount = lNameCount + 1
        
        Loop
            
        ' |fffd|s|fffd|v|fffd||242||202||fffd||fffd||fffd||fffd||fffd||fffd|O|fffd|I|fffd|u|fffd|W|fffd|F|fffd|N|fffd|g|fffd||fffd||fffd||d3dc||fffd||fffd||fffd||fffd|
        If lNameCount > 0 Then
            For i = lNameCountMAX To lNameCount Step -1
                .Names(vSaveName(i)).Delete
            Next
        End If
    End With
        
End Sub

Sub InitDrawHistory(ByRef shtCanvas As Worksheet)
    
    Dim sDrawHistoryDATA        As String       ' |fffd|`|fffd||65da||fffd||fffd||fffd||fffd||303|f|fffd|[|fffd|^|fffd|i|fffd||fffd||fffd|t|fffd|j|fffd||fffd||fffd|i|fffd|[|fffd||fffd||fffd||fffd|z|fffd||fffd|
    
    ' CSV|fffd||fffd|
    sDrawHistoryDATA = GetHistoryCSV(shtCanvas)
    
    ' |fffd|`|fffd||65da||fffd||fffd||fffd|f|fffd|[|fffd|^|fffd||fffd|z|fffd||fffd||24a|i|fffd|[|fffd||fffd||fffd||fffd|
    vDrawHistory = Split(sDrawHistoryDATA, ",")
    iDrawHistoryIndexMAX = UBound(vDrawHistory)

End Sub

Sub InitPL(ByRef shtCanvas As Worksheet)

    ' |fffd|`|fffd||fffd|V|fffd|[|fffd|g|fffd||313|o|fffd|^|fffd||fffd||fffd||fffd||fffd||64fe||fffd||fffd||fffd||fffd|
    Dim canvas_info         As tCANVAS
    canvas_info = GetCanvasInfo(shtCanvas.Name)
    
    ' |fffd||fffd||fffd||fffd||fffd||fffd||fffd|@|fffd|G|fffd||fffd||fffd|[|fffd||302||182||fffd||fffd||34f||fffd||fffd||fffd||fffd||14c82||fffd||fffd||fffd|
    If canvas_info.prj_period Is Nothing Then Exit Sub
    
    ' |fffd||fffd||210||fffd||fffd||315|`|fffd||fffd||348||fffd|
    With canvas_info
        Row_PL_S = .pl_range.Row                        ' |fffd|n|fffd|_|fffd||30d|s|fffd||50d||fffd|
        Row_PL_E = Row_PL_S + .pl_range.Rows.Count - 1  ' |fffd|I|fffd|_|fffd||30d|s|fffd||50d||fffd|
    End With
    
    ' |fffd|v|fffd||fffd||fffd|W|fffd|F|fffd|N|fffd|g|fffd||fffd||fffd||502||30d|s|fffd||50d||fffd|
    With canvas_info.prj_period
        Set Range_Cal_S = .Item(1)                      ' |fffd|v|fffd||fffd||fffd|W|fffd|F|fffd|N|fffd|g|fffd||fffd||fffd||502||30a|J|fffd|n|fffd||fffd|iRANGE|fffd|R|fffd||fffd||fffd|N|fffd|V|fffd||fffd||fffd||fffd||fffd||310||64ea||fffd|j
        Set Range_Cal_E = .Item(.Count)                 ' |fffd|v|fffd||fffd||fffd|W|fffd|F|fffd|N|fffd|g|fffd||fffd||fffd||502||30f|I|fffd||fffd||fffd||fffd|
    End With
    
    ' |fffd|^|fffd|X|fffd|N|fffd||314||348||fffd|
    Row_Tsk_S = canvas_info.top_task.Row                ' |fffd||64ea||fffd|^|fffd|X|fffd|N|fffd||348||342||30d|s|fffd||50d||fffd|
    Row_Tsk_E = Row_PL_E                                ' |fffd||fffd||210||fffd||fffd||315|`|fffd||fffd||348||342||30d|s|fffd||50d||fffd|
        
    ' |fffd|P|fffd|^|fffd|X|fffd|N|fffd||30d|s|fffd||fffd|
    MAX_TskLine = canvas_info.top_task.Rows.Count       ' |fffd||64ea||fffd|^|fffd|X|fffd|N|fffd||30d|\|fffd||fffd||fffd|s|fffd||fffd|
        
    ' |fffd|^|fffd|X|fffd|N|fffd||fffd||fffd||fffd||fffd||314|z|fffd||fffd||fffd||fffd|m|fffd||6c2||fffd||fffd||fffd|
    ReDim vTaskHistory(((Row_Tsk_E - Row_Tsk_S) + 1) / MAX_TskLine, iDrawHistoryIndexMAX + 1)

    ' |fffd|R|fffd||fffd||fffd||fffd||fffd|g|fffd|s|fffd|i|fffd|[|fffd|z|fffd||fffd||fffd||fffd|^|fffd|X|fffd|N|fffd|s|fffd||fffd||fffd||fffd||fffd|m|fffd||6c2||fffd||fffd||fffd|
    ReDim arrayCommentRow(Row_Tsk_E)
    
    ' |fffd|R|fffd||fffd||fffd||fffd||fffd|g|fffd|s|fffd|z|fffd||fffd||fffd||fffd|i|fffd|[|fffd||fffd||fffd||fffd|
    csv_SkipLine = GetSkipRows(shtCanvas)
    
    ' |fffd|R|fffd||fffd||fffd||fffd||fffd|g|fffd|s|fffd||fffd||fffd||fffd||fffd||742||fffd||fffd||fffd||a347||fffd||343|R|fffd||fffd||fffd||fffd||fffd|g|fffd|s|fffd||fffd|z|fffd||fffd||24a|i|fffd|[|fffd||fffd||fffd||fffd|
    If csv_SkipLine <> "" Then
        Dim i           As Long
        arrayWorkRows = Split(csv_SkipLine, ",")
        For i = 0 To UBound(arrayWorkRows)
            ' |fffd|R|fffd||fffd||fffd||fffd||fffd|g|fffd|s|fffd||fffd||fffd||fffd||210||fffd||fffd||315|`|fffd||fffd||348||34a|O|fffd||30f||a347||fffd||356||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
            If arrayWorkRows(i) <= Row_Tsk_E Then arrayCommentRow(arrayWorkRows(i)) = "ON"
        Next
    End If
    
    ' |fffd||64ea||fffd|^|fffd|X|fffd|N|fffd||30a|J|fffd|n|fffd|s|fffd||fffd||fffd||fffd||210||fffd||fffd||30a|J|fffd|n|fffd|s|fffd||24d||fffd||fffd||d0b9||fffd||112||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
    Do While Row_Tsk_S < Row_PL_S
        If arrayCommentRow(Row_Tsk_S) = "ON" Then
            Row_Tsk_S = Row_Tsk_S + 1
        Else
            Row_Tsk_S = Row_Tsk_S + MAX_TskLine
        End If
    Loop

End Sub

Sub DrawHistory(ByRef shtCanvas As Worksheet, ByRef shtDataList As Worksheet, ByVal DrawTimes As Long, Optional ByVal drawSelection As String)
    On Error Resume Next
    
    Dim iStatus                 As Long
    Dim iDrawHistoryIndex       As Long         ' |fffd|`|fffd||65da||fffd||fffd||fffd||fffd|z|fffd||fffd|p|fffd|C|fffd||fffd||fffd|f|fffd|b|fffd|N|fffd|X
    Dim sHistoryDate            As String       ' |fffd||4d413||fffd||fffd|i|fffd||fffd||210||fffd||fffd|`|fffd||fffd||38f||6d3||fffd||fffd|j
    Dim isFind                  As Boolean      ' |fffd||4d413||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||182||202||fffd|C|fffd||fffd||fffd|f|fffd|b|fffd|N|fffd|X|fffd||fffd||fffd||fffd||fffd|p|fffd|t|fffd||fffd||fffd|O
    Dim rangeWorkPeriod         As Range        ' |fffd|v|fffd||fffd||fffd|W|fffd|F|fffd|N|fffd|g|fffd||fffd||fffd||502||314||348||fffd|
    Dim arrayWorkPeriod         As Variant      ' |fffd|v|fffd||fffd||fffd|W|fffd|F|fffd|N|fffd|g|fffd||fffd||fffd||502||313||fffd||fffd|t|fffd|i|fffd|[|fffd|z|fffd||fffd|
    Dim arrayWorkPeriodArg()    As Variant      ' |fffd||fffd||fffd||fffd||fffd|p|fffd||303|v|fffd||fffd||fffd|W|fffd|F|fffd|N|fffd|g|fffd||fffd||fffd||502||313||fffd||fffd|t|fffd|i|fffd|[|fffd|z|fffd||fffd|
    Dim arrayWorkPeriodMax      As Long         ' |fffd|v|fffd||fffd||fffd|W|fffd|F|fffd|N|fffd|g|fffd||fffd||fffd||502||313||fffd||fffd|t|fffd|i|fffd|[|fffd|z|fffd||fffd||151||fffd|Y|fffd||fffd||fffd||fffd|
    
    vTaskHistory = ""
    vPLHistory = ""
    
    ' |fffd|`|fffd||65da||fffd||fffd||fffd|f|fffd|[|fffd|^|fffd||fffd|z|fffd||fffd||24a|i|fffd|[|fffd||fffd||fffd||fffd|
    Call InitDrawHistory(shtCanvas)
    If DrawTimes > iDrawHistoryIndexMAX Then DrawTimes = iDrawHistoryIndexMAX
    
    ' |fffd||fffd||210||fffd||fffd||fffd||fffd||fffd|`|fffd||fffd|p|fffd||315||4d413||fffd||fffd||fffd||fffd||64fe||fffd||fffd||fffd||fffd|
    If gReportDate = "" Then
        sHistoryDate = Format(Now, DATE_FORM)    '|fffd|{|fffd||fffd||fffd|i|fffd|V|fffd|X|fffd|e|fffd||fffd||fffd||fffd||fffd|t|fffd|j
    Else
        sHistoryDate = gReportDate               '|fffd||794||fffd||fffd||fffd|t
    End If

    ' |fffd||fffd||210||fffd||fffd|`|fffd||63c0||fffd||fffd|
    Call InitPL(shtCanvas)
    
    ' |fffd|v|fffd||fffd||fffd|W|fffd|F|fffd|N|fffd|g|fffd||fffd||fffd||502||fffd|z|fffd||fffd||24a|i|fffd|[|fffd||fffd||fffd||fffd|
    Set rangeWorkPeriod = ActiveSheet.Range(Range_Cal_S, Range_Cal_E)
    If rangeWorkPeriod.Columns.Count > 1 Then
        arrayWorkPeriod = rangeWorkPeriod
    Else
        ReDim arrayWorkPeriod(1, 1) As Variant
        arrayWorkPeriod(1, 1) = rangeWorkPeriod
    End If
    
    ' |fffd||fffd|v|fffd|f|fffd||50d||fffd||fffd||30d||151||fffd|l|fffd||fffd||fffd||64fe|
    arrayWorkPeriodMax = UBound(arrayWorkPeriod, 2)
    arrayWorkPeriodArg = arrayWorkPeriod
    
    ' |fffd|S|fffd|^|fffd|X|fffd|N|fffd||317||fffd||fffd||fffd||fffd||fffd||fffd||fffd|z|fffd||fffd||24a|i|fffd|[|fffd||fffd||fffd||fffd|
    Call SetTaskHistory(shtCanvas)

    ' |fffd||fffd||210||fffd||fffd||fffd||fffd||fffd||fffd|f|fffd|[|fffd|^|fffd||fffd|z|fffd||50515||fffd||fffd||fffd||210||fffd||fffd||fffd|`|fffd||60b7||fffd||fffd|
    Application.StatusBar = ""
    iDrawHistoryCount = 0
    iDrawHistoryIndex = 1
    
    Do While iDrawHistoryCount < DrawTimes And iDrawHistoryIndex <= iDrawHistoryIndexMAX
        sHistoryDate = Format(vDrawHistory(iDrawHistoryIndex), DATE_FORM)
        
        Call DrawHistoryMain(shtDataList, shtCanvas, sHistoryDate, False, iDrawHistoryIndex, arrayWorkPeriodArg, arrayWorkPeriodMax)

        ' |fffd|`|fffd||65da||fffd||fffd||fffd||fffd|i|fffd|[|fffd|z|fffd||50503|C|fffd||fffd||fffd|f|fffd|b|fffd|N|fffd|X|fffd||fffd||fffd|C|fffd||fffd||fffd|N|fffd||fffd||fffd||fffd||fffd||fffd||fffd|g|fffd||fffd||fffd||fffd|
        iDrawHistoryIndex = iDrawHistoryIndex + 1
        
        ' |fffd||fffd||fffd||fffd|`|fffd||65e6||fffd||fffd|\|fffd||fffd||fffd||fffd||fffd||fffd|
        Application.StatusBar = "|fffd||fffd||fffd||fffd|`|fffd||fffd|F" & Int(iDrawHistoryCount / DrawTimes * 100) & " %"
        DoEvents
    
    Loop

DrawHistory_exit:
    
    ' |fffd||fffd||fffd||fffd|`|fffd||62ae||fffd||fffd||fffd||fffd||fffd|b|fffd|Z|fffd|[|fffd|W|fffd||fffd||fffd|o|fffd||342||fffd||fffd||fffd|
    If iDrawHistoryCount = 0 Then
        Application.StatusBar = "|fffd|`|fffd||fffd||94|\|fffd||217||fffd||fffd||fffd||fffd|f|fffd|[|fffd|^|fffd||342||fffd||fffd||fffd||702||fffd||fffd||fffd||142||fffd||fffd||fffd||fffd|B"
    Else
        Application.StatusBar = "|fffd||fffd||fffd||fffd|`|fffd||fffd|F100 %"
    End If
    
End Sub


'
' |fffd|@|fffd|\      : |fffd||fffd||fffd||fffd||fffd||fffd|`|fffd||60b7||fffd||fffd|`|fffd|F|fffd|b|fffd|N|fffd|{|fffd|b|fffd|N|fffd|X|fffd||30f||fffd||502||fffd||fffd|X|fffd|V|fffd||fffd||fffd||fffd|
'
' |fffd||502||fffd|l    : |fffd||202||fffd|
'
' |fffd||fffd||fffd||fffd||fffd||fffd|    : control
'           : returnedVal
'
' |fffd|@|fffd|\|fffd||fffd||fffd||fffd|  : |fffd|A|fffd|h|fffd|C|fffd||fffd||fffd||255||6d1||fffd||fffd||fffd||fffd||102||fffd||fffd||fffd||fffd||502||fffd||fffd||fffd||fffd|{|fffd||fffd||fffd||317||fffd||fffd||fffd||fffd||fffd|`|fffd||60b7||fffd||fffd|
'            |fffd|`|fffd|F|fffd|b|fffd|N|fffd|{|fffd|b|fffd|N|fffd|X|fffd||250||752||80b7||fffd||fffd|
'
Sub onDrawHistory(control As IRibbonControl, ByRef returnedVal)
    Const DRAW_HISTORY_CELL = "J2"

    ' checkBox|fffd|v|fffd|f|fffd||fffd|ON(true)|fffd|EOFF(false)|fffd||fffd||752||fffd|
    If ThisWorkbook.Worksheets(SHT_DATALIST).Range(DRAW_HISTORY_CELL) = 1 Then
          returnedVal = True
    Else
          returnedVal = False
    End If

End Sub

Sub EnabledHistory(control As IRibbonControl, pressed As Boolean)
    
    Dim message As String
    
    ' checkBox|fffd|v|fffd|f|fffd||fffd|ON(true)|fffd|EOFF(false)|fffd||fffd||fffd|f|fffd|[|fffd|^|fffd|V|fffd|[|fffd|g|fffd||250||752||80b7||fffd||fffd|
    With ThisWorkbook.Worksheets(SHT_DATALIST)
        If pressed Then
            .Range(GET_HISTORY_CELL) = 1
            message = "|fffd||fffd||fffd||fffd||fffd|L|fffd|^|fffd||fffd|L|fffd||fffd||fffd||242||fffd||fffd||702||fffd||fffd||fffd||fffd|B"
        Else
            .Range(GET_HISTORY_CELL) = 0
            message = "|fffd||fffd||fffd||fffd||fffd|L|fffd|^|fffd||16ccc||fffd||fffd||242||fffd||fffd||702||fffd||fffd||fffd||fffd|B"
        End If
    End With
  
    ' [|fffd||fffd||fffd||fffd||fffd||fffd||fffd|L|fffd|^|fffd||fffd||fffd||fffd|]|fffd||30f||fffd||502||249||fffd||fffd||fffd||fffd||fffd|[|fffd||fffd||fffd||fffd||fffd||fffd|`|fffd||60b7||fffd||fffd|]|fffd|`|fffd|F|fffd|b|fffd|N|fffd|{|fffd|b|fffd|N|fffd|X|fffd||fffd||fffd|X|fffd|V|fffd||fffd||fffd||fffd|
    Call setHistoryChecked(pressed)
    
    ' |fffd|e|fffd||fffd||fffd|`|fffd||fffd||fffd||3cd|X|fffd|L|fffd||fffd||fffd|t|fffd||fffd||fffd|O|fffd||fffd|ON|fffd|itrue|fffd|j|fffd||242||fffd||fffd||fffd|
    isSheetUpdate = True
    
    ' |fffd||fffd||fffd|b|fffd|Z|fffd|[|fffd|W|fffd|o|fffd||fffd|
    Application.StatusBar = message

End Sub

Sub IgnoreHistory(control As IRibbonControl, pressed As Boolean)
    Const DRAW_HISTORY_CELL = "J2"

    ' checkBox|fffd|v|fffd|f|fffd||fffd|ON(true)|fffd|EOFF(false)|fffd||fffd||fffd|f|fffd|[|fffd|^|fffd|V|fffd|[|fffd|g|fffd||250||752||80b7||fffd||fffd|
    With ThisWorkbook.Worksheets(SHT_DATALIST)
        If pressed Then
            .Range(DRAW_HISTORY_CELL) = 1
        Else
            .Range(DRAW_HISTORY_CELL) = 0
        End If
    End With
    
    ' |fffd|e|fffd||fffd||fffd|`|fffd||fffd||fffd||3cd|X|fffd|L|fffd||fffd||fffd|t|fffd||fffd||fffd|O|fffd||fffd|ON|fffd|itrue|fffd|j|fffd||242||fffd||fffd||fffd|
    isSheetUpdate = True

End Sub

Function IsTargetWeekDay(ByRef shtDataList As Worksheet, ByVal targetDate As String) As Boolean

    ' |fffd||fffd||fffd|[|fffd|J|fffd||fffd||fffd||3d0||fffd|
    Dim sRange   As String
        
    ' |fffd|j|fffd||fffd||fffd||30e|Q|fffd||190||fffd||fffd||48f|W|fffd||fffd||fffd||fffd|
    sRange = "Q" & (Weekday(targetDate) + 1)
    
    ' |fffd|j|fffd||fffd||fffd||fffd||fffd|`|fffd||fffd||38f||6c2||30f||a347||fffd||fffd|True|fffd|A|fffd|`|fffd||fffd||fffd||38f||6c2||30f||a347||fffd||fffd|False|fffd||fffd||502||fffd|
    If UCase(shtDataList.Range(sRange).Value) = "TRUE" Then
        IsTargetWeekDay = True
    Else
        IsTargetWeekDay = False
    End If
            
End Function

Sub DrawSelectHistory()

    Dim i                       As Long
    Dim selectItemCount         As Long
    Dim listHistory             As String
    Dim savezoom                As Variant      ' windows|fffd||fffd|zoom|fffd|v|fffd||fffd||fffd|p|fffd|e|fffd|B|fffd||fffd||6d1||fffd||fffd||fffd||fffd||fffd||3d0||fffd|
    Dim rangeWorkPeriod         As Range        ' |fffd|v|fffd||fffd||fffd|W|fffd|F|fffd|N|fffd|g|fffd||fffd||fffd||502||314||348||fffd|
    Dim arrayWorkPeriod         As Variant      ' |fffd|v|fffd||fffd||fffd|W|fffd|F|fffd|N|fffd|g|fffd||fffd||fffd||502||313||fffd||fffd|t|fffd|i|fffd|[|fffd|z|fffd||fffd|
    Dim arrayWorkPeriodArg()    As Variant      ' |fffd||fffd||fffd||fffd||fffd|p|fffd||303|v|fffd||fffd||fffd|W|fffd|F|fffd|N|fffd|g|fffd||fffd||fffd||502||313||fffd||fffd|t|fffd|i|fffd|[|fffd|z|fffd||fffd|
    Dim arrayWorkPeriodMax      As Long         ' |fffd|v|fffd||fffd||fffd|W|fffd|F|fffd|N|fffd|g|fffd||fffd||fffd||502||313||fffd||fffd|t|fffd|i|fffd|[|fffd|z|fffd||fffd||151||fffd|Y|fffd||fffd||fffd||fffd|
    
    With Application
        .StatusBar = ""
        .ScreenUpdating = False
    End With
    
    ' shape|fffd|`|fffd||639e||fffd||24d||fffd||fffd|W|fffd||fffd||fffd||fffd||fffd||a0bd||fffd||60a4||fffd||255|\|fffd||fffd||fffd||fffd||fffd||fffd||90b1||fffd||182||fffd|h|fffd||fffd||fffd||38f||fffd|
    savezoom = ActiveWindow.Zoom
    ActiveWindow.Zoom = 100
    
    ' |fffd|`|fffd||65da||fffd||fffd||fffd|f|fffd|[|fffd|^|fffd||fffd|z|fffd||fffd||24a|i|fffd|[|fffd||fffd||fffd||fffd|
    Call InitDrawHistory(ActiveSheet)
    
    ' |fffd||fffd||210||fffd||fffd|`|fffd||63c0||fffd||fffd|
    Call InitPL(ActiveSheet)
    
    ' |fffd|v|fffd||fffd||fffd|W|fffd|F|fffd|N|fffd|g|fffd||fffd||fffd||502||fffd|z|fffd||fffd||24a|i|fffd|[|fffd||fffd||fffd||fffd|
    Set rangeWorkPeriod = ActiveSheet.Range(Range_Cal_S, Range_Cal_E)
    If rangeWorkPeriod.Columns.Count > 1 Then
        arrayWorkPeriod = rangeWorkPeriod
    Else
        ReDim arrayWorkPeriod(1, 1) As Variant
        arrayWorkPeriod(1, 1) = rangeWorkPeriod
    End If
    
    ' |fffd||fffd|v|fffd|f|fffd||50d||fffd||fffd||30d||151||fffd|l|fffd||fffd||fffd||64fe|
    arrayWorkPeriodMax = UBound(arrayWorkPeriod, 2)
    arrayWorkPeriodArg = arrayWorkPeriod
    
    ' |fffd|S|fffd|^|fffd|X|fffd|N|fffd||317||fffd||fffd||fffd||fffd||fffd||fffd||fffd|z|fffd||fffd||24a|i|fffd|[|fffd||fffd||fffd||fffd|
    Call SetTaskHistory(ActiveSheet)
    
    ' |fffd|I|fffd||fffd||fffd||fffd||fffd||fffd||102||fffd||fffd||95da||fffd||fffd||fffd|f|fffd|[|fffd|^|fffd||fffd||fffd||fffd||fffd||5c2||115|`|fffd||60b7||fffd||fffd|
    With frmHistoryList.lstHistory
        selectItemCount = .listCount - 1
        If selectItemCount > 999 Then selectItemCount = 999
        
        For i = 0 To selectItemCount
        
            If .Selected(i) = True Then
                Call DrawHistoryMain(ThisWorkbook.Worksheets(SHT_DATALIST), ActiveSheet, .List(i), True, i, arrayWorkPeriodArg(), arrayWorkPeriodMax)
            End If
        
        Next
    End With
    
    ' |fffd|\|fffd||fffd||fffd|{|fffd||fffd||fffd||fffd||7c2||fffd|
    ActiveWindow.Zoom = savezoom
    
    With Application
        .ScreenUpdating = True
    End With
    
End Sub

Sub DrawHistoryMain(ByRef shtDataList As Worksheet, ByRef shtCanvas As Worksheet, ByVal targetDay As String, ByVal isSelect As Boolean, ByVal iDrawHistoryIndex As Long, _
    ByRef arrayWorkPeriodArg() As Variant, ByVal arrayWorkPeriodMax As Long)
    
    On Error Resume Next
    
    ' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|v|fffd||fffd||fffd|W|fffd|F|fffd|N|fffd|g|fffd||fffd||fffd||513||fffd||fffd||142||fffd||fffd||fffd||38f||fffd||fffd||fffd||fffd||11c4d|s|fffd||fffd||fffd||fffd|
    If targetDay >= Range_Cal_S And targetDay <= Range_Cal_E Then
    
        ' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|`|fffd||fffd||38f||6d7|j|fffd||fffd||fffd||142||fffd||fffd||fffd||38f||fffd||fffd||fffd||fffd||11c4d|s|fffd||fffd||fffd||fffd|
        ' |fffd|I|fffd||fffd|`|fffd||60aa|ON|fffd|iisSelect=True|fffd|j|fffd||30e||fffd||fffd||34f||fffd||fffd||fffd||fffd||11c4d|s|fffd||fffd||fffd||fffd|
        If IsTargetWeekDay(shtDataList, targetDay) Or isSelect Then
            
            ' |fffd||fffd||210||fffd||fffd||fffd|`|fffd||60b7||fffd||fffd||fffd||fffd|t|fffd||fffd||fffd||fffd||fffd||182||248||fffd||210||fffd||fffd||fffd|`|fffd||60b7||fffd||fffd||fffd||fffd||fffd|Z|fffd|o|fffd||fffd||fffd||fffd|
            Dim Col_PL                              As Long         ' |fffd||fffd||210||fffd||fffd||315|`|fffd||fffd||fffd|
            Col_PL = GetCalCol(arrayWorkPeriodArg(), targetDay, 1, arrayWorkPeriodMax)
            If Col_PL = 0 Then
                Exit Sub
            Else
                Col_PL = Col_PL + Range_Cal_S.Column - 1
            End If
            
            ' |fffd||fffd||210||fffd||fffd||30d||fffd||fffd|W|fffd|i|fffd|[|fffd|z|fffd||50501|i|fffd|R|fffd||fffd||fffd|W|fffd||fffd||fffd|j|fffd||fffd||fffd||fffd||fffd||7c2||fffd|
            Dim i_PLPoint                           As Long         ' |fffd||fffd||210||fffd||fffd||fffd||fffd|W|fffd|z|fffd||fffd||303|C|fffd||fffd||fffd|f|fffd|b|fffd|N|fffd|X
            i_PLPoint = (((Row_Tsk_E - Row_Tsk_S) + 2) / MAX_TskLine) * 3
            
            ' |fffd||fffd||210||fffd||fffd||30d||fffd||fffd|W|fffd|i|fffd|[|fffd|z|fffd||fffd||fffd||fffd||112||fffd|`|fffd||fffd||fffd||fffd|
            ' |fffd|J|fffd|n|fffd||fffd||fffd||18f|I|fffd||fffd||fffd||fffd||fffd||fffd||fffd|v|fffd||fffd||fffd|W|fffd|F|fffd|N|fffd|g|fffd||fffd||fffd||514||348||34a|O|fffd||30f||a347||fffd||30d||fffd||fffd|W|fffd||fffd||fffd|i|fffd|[|fffd||fffd||fffd||fffd|z|fffd||fffd||fffd|]|fffd||fffd||fffd||24a|m|fffd||6c2||fffd||fffd||102||fffd||fffd||fffd|
            ReDim arrayPLPointX(i_PLPoint + (i_PLPoint / MAX_TskLine)) As Single
            ReDim arrayPLPointY(i_PLPoint + (i_PLPoint / MAX_TskLine)) As Single
            
            ' |fffd|v|fffd||fffd||fffd|W|fffd|F|fffd|N|fffd|g|fffd||fffd||fffd||502||fffd||fffd||72c1||fffd||7c2||fffd||fffd||fffd||fffd||fffd||fffd||303|Z|fffd||fffd||fffd||fffd||fffd||fffd||fffd||182||241|A|fffd||fffd||210||fffd||fffd||30a|J|fffd|n|fffd||fffd||fffd|W|fffd||fffd||fffd||fffd||fffd||80b5||fffd||a39e||fffd|z|fffd||fffd||24a|i|fffd|[|fffd||fffd||fffd||fffd|
            Dim VarTemp                             As Variant
            VarTemp = GetPoint(Cells(Row_PL_S, Col_PL))

            ' |fffd||4d413||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|v|fffd||fffd||fffd|W|fffd|F|fffd|N|fffd|g|fffd||fffd||fffd||502||313||fffd||fffd|t|fffd||fffd||fffd||fffd||fffd||7c2||fffd|
            Dim first_date_in_projectperiod_column  As Date         ' |fffd|i|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||311|O|fffd||317||fffd||312|l|fffd|i|fffd||fffd||fffd|t|fffd|j
            Dim last_date_in_projectperiod_column   As Date         ' |fffd|i|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||312|l|fffd|i|fffd||fffd||fffd|t|fffd|j
            If Col_PL > Range_Cal_S.Column Then
                first_date_in_projectperiod_column = shtCanvas.Cells(Row_PL_S, Col_PL - 1)
            Else
                first_date_in_projectperiod_column = shtCanvas.Cells(Row_PL_S, Col_PL)
            End If
            
            last_date_in_projectperiod_column = shtCanvas.Cells(Row_PL_S, Col_PL)
            VarTemp = GetPoint(Cells(Row_PL_S, Col_PL), 0, CDate(targetDay), first_date_in_projectperiod_column, last_date_in_projectperiod_column, 1)

            ' |fffd|v|fffd||fffd||fffd|W|fffd|F|fffd|N|fffd|g|fffd||fffd||fffd||502||fffd||fffd||72c1||fffd||7c2||fffd||fffd||fffd||fffd||fffd||fffd||303|Z|fffd||fffd||fffd||fffd||fffd||fffd||fffd||182||241|A|fffd||fffd||210||fffd||fffd||30a|J|fffd|n|fffd||fffd||fffd|W|fffd||fffd||fffd||fffd||fffd||80b5||fffd||a39e||fffd|z|fffd||fffd||24a|i|fffd|[|fffd||fffd||fffd||fffd|
            ' 0:LEFT/X 1:LEFT/Y 2:RIGHT/X 3:RIGHT/Y
            arrayPLPointY(0) = VarTemp(1)     ' |fffd||fffd||210||fffd||fffd|n|fffd|_:Y|fffd||fffd||fffd|W
            arrayPLPointX(0) = VarTemp(4)     ' |fffd||fffd||210||fffd||fffd|n|fffd|_:X|fffd||fffd||fffd|W
            
            ' |fffd||fffd||210||fffd||fffd|`|fffd||fffd||348||353||fffd||fffd||303|^|fffd|X|fffd|N|fffd||242||82||fffd||fffd||108||fffd||210||fffd||fffd||fffd|`|fffd||60b7||fffd||fffd|
            i_PLPoint = 0
            shtCanvas.Activate
            Dim lTaskHistoryIndexMAX                As Long         ' |fffd|^|fffd|X|fffd|N|fffd||fffd||fffd||fffd|p|fffd|C|fffd||fffd||fffd|f|fffd|b|fffd|N|fffd|X
            lTaskHistoryIndexMAX = UBound(vTaskHistory) ' - 1
            
            ' |fffd|^|fffd|X|fffd|N|fffd||fffd||fffd||fffd|z|fffd||50515||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|J|fffd||fffd||502||fffd|
            Dim Col_Tsk                             As Long         ' |fffd|^|fffd|X|fffd|N|fffd||308||292|u|fffd|i|fffd||fffd||50d||fffd||fffd|j
            Dim sinDiff                             As Single       ' Y|fffd||fffd||fffd|W|fffd||30a|J|fffd|n|fffd||18f|I|fffd||fffd||fffd||30d||fffd||fffd||fffd|
            Dim consumptionDay                      As Variant      ' |fffd||fffd||fffd||f0b5||fffd||fffd||fffd|H|fffd||fffd||fffd|i|fffd||fffd||fffd||fffd||fffd||702||781|j
            Dim arrayConsumptionDay                 As Variant      ' |fffd||fffd||fffd||fffd|H|fffd||fffd||fffd||10b90||fffd||fffd||fffd||fffd||18f||fffd||fffd||fffd||fffd||fffd||fffd||255||fffd||fffd||fffd||fffd||90bd||fffd||7c2||314|z|fffd||fffd|
            Dim range_in_progress_date              As Range        ' |fffd|i|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|Z|fffd||fffd|
            Dim progress_date                       As Date         ' |fffd|i|fffd||fffd||fffd||fffd|
            Dim fraction                            As Variant      ' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||30f||fffd||fffd||fffd|H|fffd||fffd||fffd|i|fffd|[|fffd||fffd||fffd|j
            Dim isOutsideAreaS                      As Boolean      ' |fffd|J|fffd|n|fffd||fffd||fffd||fffd||fffd|v|fffd||fffd||fffd|W|fffd|F|fffd|N|fffd|g|fffd||fffd||fffd||514||348||34a|O|fffd||303|t|fffd||fffd||fffd|O
            Dim isOutsideAreaE                      As Boolean      ' |fffd|I|fffd||fffd||fffd||fffd||fffd||fffd||fffd|v|fffd||fffd||fffd|W|fffd|F|fffd|N|fffd|g|fffd||fffd||fffd||514||348||34a|O|fffd||303|t|fffd||fffd||fffd|O
            For arrayIndexTaskRowNum = 0 To lTaskHistoryIndexMAX
                
                If Not IsEmpty(vTaskHistory(arrayIndexTaskRowNum, iDrawHistoryIndex + 1)) Then
                    If vTaskHistory(arrayIndexTaskRowNum, 0) > 0 Then
                        
                        ' |fffd||fffd||fffd||fffd||fffd||fffd||190|i|fffd||fffd||fffd||cbd42||fffd||fffd||fffd||fffd||210||fffd||fffd||315|`|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||7c2||fffd|
                        consumptionDay = vTaskHistory(arrayIndexTaskRowNum, iDrawHistoryIndex + 1)
                        arrayConsumptionDay = Split(CStr(consumptionDay), ".")
                        
                        If UBound(arrayConsumptionDay) = 0 Then
                            ' |fffd||fffd||fffd||fffd||fffd|_|fffd||209||fffd||fffd||fffd||fffd||fffd||fffd||742||fffd||fffd||202||fffd|
                            fraction = 0
                        Else
                            consumptionDay = arrayConsumptionDay(0)
                            fraction = arrayConsumptionDay(1) / (10 ^ Len(arrayConsumptionDay(1)))
                        
                        End If
                         
                        ' |fffd||fffd||fffd||fffd||fffd||fffd|i|fffd||7cb||fffd||fffd||315||4d413||fffd||fffd|j|fffd||24f||fffd||fffd||fffd|H|fffd||fffd||fffd||fffd||fffd||fffd||fffd|Z|fffd||fffd||fffd||110|i|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||7c2||fffd|
                        progress_date = Format(DateValue(targetDay) + Application.WorksheetFunction.RoundUp(consumptionDay, 0), DATE_FORM)
                        
                        ' |fffd|t|fffd||fffd||fffd|O|fffd||fffd||fffd||fffd||fffd||fffd|
                        isOutsideAreaS = False
                        isOutsideAreaE = False
                        
                        ' |fffd|v|fffd||fffd||fffd|W|fffd|F|fffd|N|fffd|g|fffd||fffd||fffd||502||fffd||fffd||fffd||fffd||fffd|t|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||10a|Y|fffd||fffd||fffd||fffd||fffd||fffd||fffd||50d||fffd||fffd||fffd||fffd||64fe||fffd||fffd||fffd||fffd|
                        If progress_date < CDate(Range_Cal_S) Then
                            ' |fffd||fffd||fffd|t|fffd||fffd||fffd|v|fffd||fffd||fffd|W|fffd|F|fffd|N|fffd|g|fffd||fffd||fffd||502||30a|J|fffd|n|fffd||fffd||fffd||fffd||83ec||fffd||fffd||fffd||fffd||fffd||a347||fffd||343|v|fffd||fffd||fffd|W|fffd|F|fffd|N|fffd|g|fffd|J|fffd|n|fffd||fffd||242||fffd||fffd||fffd|
                            isOutsideAreaS = True
                            Col_Tsk = Range_Cal_S.Column
                        ElseIf progress_date > CDate(Range_Cal_E) Then
                            ' |fffd||fffd||fffd|t|fffd||fffd||fffd|v|fffd||fffd||fffd|W|fffd|F|fffd|N|fffd|g|fffd||fffd||fffd||502||30f|I|fffd||fffd||fffd||fffd||fffd||fffd||fffd||50ab||fffd||fffd||fffd||a347||fffd||343|v|fffd||fffd||fffd|W|fffd|F|fffd|N|fffd|g|fffd|I|fffd||fffd||fffd||fffd||242||fffd||fffd||fffd|
                            isOutsideAreaE = True
                            Col_Tsk = Range_Cal_E.Column
                        Else
                            Col_Tsk = GetCalCol(arrayWorkPeriodArg, progress_date, 1, arrayWorkPeriodMax)
                            If Col_Tsk = 0 Then
                                ' |fffd||fffd||fffd|t|fffd||fffd||fffd||fffd||fffd||82||fffd||fffd||fffd||202||fffd||fffd||fffd||fffd||fffd||fffd||a347||fffd||343|v|fffd||fffd||fffd|W|fffd|F|fffd|N|fffd|g|fffd|J|fffd|n|fffd||fffd||242||fffd||fffd||fffd|
                                Col_Tsk = Col_Tsk + Range_Cal_S.Column
                            Else
                                Col_Tsk = Col_Tsk + Range_Cal_S.Column - 1
                            End If
                        End If
                            
                        ' |fffd|^|fffd|X|fffd|N|fffd||303|Z|fffd||fffd||fffd||292|u|fffd||fffd||fffd||fffd||fffd|W|fffd||255||3ca||fffd||fffd||fffd||fffd||114|z|fffd||fffd||24a|i|fffd|[|fffd||fffd||fffd||fffd|
                        ' 0:LEFT/X 1:LEFT/Y 2:RIGHT/X 3:RIGHT/Y 4:MIDDLE/X
                        With shtCanvas
                            ' |fffd|^|fffd|X|fffd|N|fffd||310|i|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|v|fffd||fffd||fffd|W|fffd|F|fffd|N|fffd|g|fffd||fffd||fffd||501|i|fffd|Z|fffd||fffd||fffd|j|fffd||fffd||fffd|Z|fffd|o|fffd||fffd||fffd||fffd|
                            Set range_in_progress_date = .Range(.Cells(vTaskHistory(arrayIndexTaskRowNum, 0), Col_Tsk), .Cells(vTaskHistory(arrayIndexTaskRowNum, 0) + MAX_TskLine - 1, Col_Tsk))
                    
                            ' |fffd|i|fffd||fffd||fffd||fffd||fffd||311||fffd||fffd||fffd||fffd||fffd|v|fffd||fffd||fffd|W|fffd|F|fffd|N|fffd|g|fffd||fffd||fffd||517||fffd||314||348||341|i|fffd|J|fffd|n|fffd||fffd||fffd||18f|I|fffd||fffd||fffd||fffd||fffd|j|fffd||fffd||fffd||fffd||fffd||7c2||fffd|
                            ' |fffd|i|fffd||fffd||fffd||fffd||fffd||fffd||fffd|v|fffd||fffd||fffd|W|fffd|F|fffd|N|fffd|g|fffd||fffd||fffd||502||30a|J|fffd|n|fffd||fffd||fffd||20d|~|fffd||142||fffd||fffd||fffd||382|P|fffd||fffd||fffd||fffd||fffd||111|O|fffd||317||fffd||313||fffd||fffd|t|fffd||fffd||fffd||fffd||fffd||7c2||fffd|
                            If Col_Tsk > Range_Cal_S.Column Then
                                first_date_in_projectperiod_column = CDate(.Cells(Range_Cal_S.Row, Col_Tsk - 1))
                            Else
                                first_date_in_projectperiod_column = CDate(.Cells(Range_Cal_S.Row, Col_Tsk))
                            End If
                            ' |fffd|^|fffd|X|fffd|N|fffd||310|i|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|v|fffd||fffd||fffd|W|fffd|F|fffd|N|fffd|g|fffd||fffd||fffd||502||303|Z|fffd||fffd||fffd||312|l|fffd|i|fffd||fffd||fffd||fffd||30d||14f|I|fffd||fffd||fffd|t|fffd|j|fffd||fffd||fffd||fffd||fffd||7c2||fffd|
                            last_date_in_projectperiod_column = CDate(.Cells(Range_Cal_S.Row, Col_Tsk))
                            
                            ' GetPoint  arg1:|fffd|i|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|   arg2:|fffd|P|fffd||fffd||fffd||fffd||fffd||fffd||fffd||30f||fffd||fffd||fffd|H|fffd||fffd| arg3:|fffd|i|fffd||fffd||fffd||fffd| arg4:|fffd|i|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||302|P|fffd||fffd|O|fffd||303|Z|fffd||fffd||fffd||312|l|fffd|i|fffd||fffd||fffd|t|fffd|j arg5:|fffd|i|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||312|l|fffd|i|fffd||fffd||fffd|t|fffd|j   arg6:|fffd||fffd||210||fffd||fffd|J|fffd|n|fffd||2433||fffd|p
                            '           RANGE                   Variant                 Date        Date                                            Date                                long:0|fffd||152||fffd|
                            ' |fffd||fffd||fffd||fffd||fffd||fffd||fffd|@|fffd|v|fffd||fffd||fffd|W|fffd|F|fffd|N|fffd|g|fffd||fffd||fffd||50a|O|fffd||fffd||fffd||58c|W|fffd||fffd||fffd||fffd|P|fffd|[|fffd|X|fffd||242||fffd||fffd||fffd||fffd||102||350||fffd||fffd|m|fffd||215|`|fffd||60aa||fffd||142||fffd||fffd||202||fffd||fffd|i|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||182||fffd||fffd||fffd|j
                            VarTemp = GetPoint(range_in_progress_date, fraction, progress_date, first_date_in_projectperiod_column, last_date_in_projectperiod_column, 0)
                        End With
                        
                        ' |fffd|J|fffd|n|fffd|\|fffd||fffd||fffd||fffd||fffd||fffd|v|fffd||fffd||fffd|W|fffd|F|fffd|N|fffd|g|fffd||fffd||fffd||514||348||34a|O|fffd||302||182||fffd||fffd||311||38f||fffd|
                        sinDiff = 0
                        If isOutsideAreaS Then
                            sinDiff = (VarTemp(3) - VarTemp(1)) * (1 / 4)
                            VarTemp(2) = VarTemp(0)
                            VarTemp(4) = VarTemp(0)
                        End If
                        
                        ' |fffd|I|fffd||fffd||fffd|\|fffd||fffd||fffd||fffd||fffd||fffd|v|fffd||fffd||fffd|W|fffd|F|fffd|N|fffd|g|fffd||fffd||fffd||514||348||34a|O|fffd||302||182||fffd||fffd||311||38f||fffd|
                        If isOutsideAreaE Then
                            sinDiff = (VarTemp(3) - VarTemp(1)) * (1 / 4)
                            VarTemp(4) = VarTemp(2)
                        End If
                            
                        ' |fffd||fffd||210||fffd||fffd||30d||fffd||fffd|W|fffd||fffd|z|fffd||fffd||24a|i|fffd|[|fffd||fffd||fffd||fffd|
                        i_PLPoint = SetInPLPointArray(i_PLPoint, arrayPLPointX, arrayPLPointY, VarTemp, sinDiff, isOutsideAreaS Or isOutsideAreaE)

                    End If
                End If
            Next
            
            ' |fffd|v|fffd||fffd||fffd|W|fffd|F|fffd|N|fffd|g|fffd||fffd||fffd||502||fffd||fffd||72c1||fffd||7c2||fffd||fffd||fffd||fffd||fffd||fffd||303|Z|fffd||fffd||fffd||fffd||fffd||fffd||fffd||182||241|A|fffd||fffd||210||fffd||fffd||30f|I|fffd||fffd||fffd||fffd||fffd|W|fffd||fffd||fffd||fffd||fffd||80b5||fffd||a39e||fffd|z|fffd||fffd||24a|i|fffd|[|fffd||fffd||fffd||fffd|
            i_PLPoint = i_PLPoint + 1
            arrayPLPointY(i_PLPoint) = shtCanvas.Cells(Row_PL_E + 1, Col_PL).Top    '|fffd||fffd||210||fffd||fffd|I|fffd|_:Y|fffd||fffd||fffd|W
            arrayPLPointX(i_PLPoint) = arrayPLPointX(0)                             '|fffd||fffd||210||fffd||fffd|I|fffd|_:X|fffd||fffd||fffd|W
            
            ' |fffd|z|fffd||fffd||24a|i|fffd|[|fffd||fffd||fffd||fffd||fffd||fffd||fffd|W|fffd||fffd||fffd||fffd||fffd||248||fffd||210||fffd||fffd||fffd|`|fffd||60b7||fffd||fffd|
            Call DrawProgressLine(shtCanvas, arrayPLPointX, arrayPLPointY, i_PLPoint, STYLE_HIST)
            
            ' |fffd||fffd||fffd||fffd|`|fffd||630f||fffd||fffd||fffd||fffd||fffd|C|fffd||fffd||fffd|N|fffd||fffd||fffd||fffd||fffd||fffd||fffd|g|fffd||fffd||fffd||fffd|
            iDrawHistoryCount = iDrawHistoryCount + 1
        End If
    End If
End Sub

Function GetHistoryCSV(ByRef shtCanvas As Worksheet) As String

        
    ' |fffd||fffd||fffd|[|fffd|N|fffd|V|fffd|[|fffd|g|fffd||251||fffd||fffd||742||fffd||fffd||95da||fffd||fffd||fffd||1d7||fffd||fffd|I|fffd|u|fffd|W|fffd|F|fffd|N|fffd|g|fffd||fffd||fffd||75da||fffd||fffd||fffd|f|fffd|[|fffd|^|fffd||1228f|o|fffd||fffd||fffd|b|fffd|r|fffd|u|fffd|`|fffd||fffd||fffd||24c||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
    Dim iStatus     As Long: iStatus = 0
    Dim nameHistory As Object
    Dim HistoryDATA As String: HistoryDATA = "" ' |fffd|`|fffd||65da||fffd||fffd||fffd||fffd||fffd|CSV|fffd|f|fffd|[|fffd|^|fffd|i|fffd||fffd||fffd|t|fffd|j
    
    For Each nameHistory In shtCanvas.Names
        If InStr(1, nameHistory.Name, NM_HT) > 0 Then
            iStatus = 1
            HistoryDATA = HistoryDATA & "," & nameHistory.comment
        ElseIf iStatus = 1 Then
            iStatus = 2
        End If
        If iStatus = 2 Then Exit For
    Next
    
    ' |fffd||64ea||fffd||303|J|fffd||fffd||fffd|}|fffd||fffd||fffd||d3dc||fffd||fffd||fffd||fffd|
    If HistoryDATA <> "" Then
        HistoryDATA = Mid(HistoryDATA, 2)
    End If

    GetHistoryCSV = HistoryDATA

End Function

Sub SetTaskHistory(ByRef shtCanvas As Worksheet)
    On Error Resume Next
    
    Dim iStatus             As Long
    Dim i                   As Long
    Dim j                   As Long
    Dim iDrawHistoryIndex   As Long         ' |fffd|`|fffd||65da||fffd||fffd||fffd||fffd|z|fffd||fffd|p|fffd|C|fffd||fffd||fffd|f|fffd|b|fffd|N|fffd|X
    Dim sPLHistoryDATA      As String       ' |fffd||fffd||210||fffd||fffd||fffd||fffd||fffd||fffd|f|fffd|[|fffd|^|fffd||fffd||fffd|i|fffd|[|fffd||fffd||fffd||fffd|z|fffd||fffd|
    Dim iPLHistoryIndexMAX  As Long         ' |fffd||fffd||210||fffd||fffd||fffd||fffd||fffd||fffd|i|fffd|[|fffd|z|fffd||fffd|
    Dim iHistoryDataIndex   As Long         ' |fffd||fffd||fffd||fffd||fffd|f|fffd|[|fffd|^|fffd|p|fffd|C|fffd||fffd||fffd|f|fffd|b|fffd|N|fffd|X
    Dim sTaskName           As String
    Dim sSaveTaskName       As String       ' |fffd||fffd||fffd||fffd||fffd|Z|fffd||fffd||fffd||fffd||fffd||38d||fffd|
    Dim sRangeR1C1          As String
    Dim sRange              As String
    Dim oName               As Object
    Dim isEqualHistoryDay   As Boolean      ' |fffd||fffd||fffd||fffd||fffd||fffd|`|fffd|F|fffd|b|fffd|N|fffd|p|fffd|t|fffd||fffd||fffd|O
    
    ' |fffd|S|fffd|^|fffd|X|fffd|N|fffd||308||fffd||210||fffd||fffd||fffd||fffd||fffd||fffd||fffd|z|fffd||fffd||24a|i|fffd|[|fffd||fffd||fffd||fffd|
    arrayIndexTaskRowNum = 0
    i = Row_Tsk_S
    While (i + MAX_TskLine - 1) <= Row_Tsk_E
        ' |fffd||fffd||fffd||fffd||fffd|Z|fffd||fffd||fffd||fffd||fffd||fffd||fffd||742||fffd||fffd||102||fffd||fffd||fffd||a347||fffd||355||282||30d|s|fffd||142||fffd||fffd||fffd||fffd||fffd||fffd|^|fffd|X|fffd|N|fffd||fffd||fffd||fffd||fffd||64fe||fffd||fffd||fffd||fffd||90bd||fffd||7c1|A|fffd|O|fffd||fffd||316||fffd||fffd|O|fffd|I|fffd|u|fffd|W|fffd|F|fffd|N|fffd|g|fffd||188||fffd|v|fffd||fffd||fffd||fffd||a347||fffd||34f||fffd||fffd||fffd||fffd||16cce||fffd||fffd||fffd||fffd||fffd|
        sTaskName = shtCanvas.Range(i & ":" & i).Name.Name
        
        If sTaskName = "" Or sTaskName = sSaveTaskName Then
            ' NameObject|fffd||fffd||fffd||fffd||fffd||742||fffd||fffd||202||fffd||fffd|s|fffd|A|fffd||702||fffd||fffd||352||fffd||fffd|O|fffd||fffd|NameObject|fffd||193||fffd||fffd||fffd||fffd||a347||fffd||356||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
           err.Clear
        Else
            
            ' |fffd||fffd|\|fffd||fffd||fffd|Z|fffd||fffd||fffd||183|R|fffd||fffd||fffd||fffd||fffd|g|fffd|s|fffd||fffd||fffd|X|fffd|L|fffd|b|fffd|v|fffd||fffd||fffd||fffd|
            If shtCanvas.Rows(i).Hidden Or arrayCommentRow(i) = "ON" Or InStr(sTaskName, "#REF!") > 0 Then
                If arrayCommentRow(i) = "ON" Then i = i - MAX_TskLine + 1
            Else
            
                ' |fffd|I|fffd||fffd||348||342||303|A|fffd|h|fffd||fffd||fffd|X|fffd|`|fffd||fffd||fffd||fffd|A1|fffd|`|fffd||fffd||fffd||fffd||fffd||fffd|R1C1|fffd|`|fffd||fffd||fffd||255||3ca||fffd||fffd||fffd||fffd||fffd|
                sRangeR1C1 = shtCanvas.Range(i & ":" & i).Address(ReferenceStyle:=xlR1C1)
                
                ' |fffd||fffd||fffd||fffd||fffd||303|Z|fffd||fffd||fffd||348||34f||fffd||fffd||243|V|fffd|[|fffd|g|fffd||fffd||fffd||fffd||fffd||702||702||fffd||102||fffd||fffd||fffd||a347||fffd||341|A|fffd|V|fffd|[|fffd|g|fffd||fffd||fffd||fffd||fffd||d3dc||fffd||fffd||fffd||fffd|
                sRange = shtCanvas.Names(sTaskName).RefersToR1C1
                j = InStr(1, sRange, "!")
                If j > 0 Then sRange = Mid(sRange, j + 1)
                
                ' |fffd|I|fffd||fffd||348||342||18e|Q|fffd||194||348||342||fffd||fffd||fffd|v|fffd||fffd||fffd||102||fffd||fffd||fffd||38f||fffd||fffd||fffd||fffd||11c4d|s|fffd||fffd||fffd||fffd|
                If sRange = sRangeR1C1 Then
                        
                    ' |fffd||fffd||fffd|[|fffd|N|fffd|V|fffd|[|fffd|g|fffd||251||fffd||fffd||742||fffd||fffd||9561||fffd||fffd||fffd||316||fffd||fffd|O|fffd|I|fffd|u|fffd|W|fffd|F|fffd|N|fffd|g|fffd||fffd||fffd||75da||fffd||fffd||fffd|f|fffd|[|fffd|^|fffd||1228f|o|fffd||fffd||fffd|b|fffd|r|fffd|u|fffd|`|fffd||fffd||fffd||24c||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
                    iStatus = 0
                    sPLHistoryDATA = ""
                    For Each oName In shtCanvas.Names
                        If InStr(1, oName.Name, sTaskName) > 0 Then
                            iStatus = 1
                            sPLHistoryDATA = sPLHistoryDATA & "," & oName.comment
                        ElseIf iStatus = 1 Then
                            iStatus = 2
                        End If
                        If iStatus = 2 Then Exit For
                    Next
                
                    ' |fffd||64ea||fffd||303|J|fffd||fffd||fffd|}|fffd||fffd||fffd||d3dc||fffd||fffd||fffd||fffd|
                    If sPLHistoryDATA <> "" Then
                        sPLHistoryDATA = Mid(sPLHistoryDATA, 2)
                    End If
                    
                    ' |fffd||fffd||fffd||fffd||fffd|f|fffd|[|fffd|^|fffd|i|fffd||4d413||fffd||fffd||190|i|fffd||fffd||fffd|j|fffd||fffd|z|fffd||fffd||24a|i|fffd|[|fffd||fffd||fffd||fffd|
                    vPLHistory = Split(sPLHistoryDATA, ",")
                    ' |fffd|z|fffd||fffd||30d||151||5414||fffd||fffd||fffd||64fe||fffd||fffd||fffd||fffd|i|fffd||151||fffd|100|fffd|j
                    iPLHistoryIndexMAX = UBound(vPLHistory)
                
                    ' |fffd|z|fffd||fffd||243|^|fffd|X|fffd|N|fffd|s|fffd||50d||fffd||fffd||fffd||fffd|i|fffd|[|fffd||fffd||fffd||fffd|
                    vTaskHistory(arrayIndexTaskRowNum, 0) = i
                    ' |fffd||fffd||fffd||fffd||fffd|f|fffd|[|fffd|^|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|J|fffd||fffd||502||fffd|
                    For iHistoryDataIndex = 0 To iPLHistoryIndexMAX
                        isEqualHistoryDay = False
                        ' |fffd|`|fffd||65da||fffd||fffd||fffd||fffd||188||fffd|v|fffd||fffd||fffd||fffd||fffd||210||fffd||fffd||fffd||fffd||fffd||fffd||fffd||1228f|o|fffd||fffd||fffd||fffd|
                        For iDrawHistoryIndex = 0 To iDrawHistoryIndexMAX
                            If Mid(vPLHistory(iHistoryDataIndex), 1, 5) = Mid(vDrawHistory(iDrawHistoryIndex), 1, 5) Then
                                isEqualHistoryDay = True
                                Exit For
                            End If
                        Next
                        ' |fffd|z|fffd||fffd||257||fffd||fffd||fffd||fffd|f|fffd|[|fffd|^|fffd||fffd||fffd|i|fffd|[|fffd||fffd||fffd||fffd|
                        If isEqualHistoryDay Then
                            vTaskHistory(arrayIndexTaskRowNum, iDrawHistoryIndex + 1) = Mid(vPLHistory(iHistoryDataIndex), 6)  ' |fffd|i|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
                        End If
                    Next
                    arrayIndexTaskRowNum = arrayIndexTaskRowNum + 1
                End If
                
            End If
        End If
        i = i + MAX_TskLine
        sSaveTaskName = sTaskName
    Wend
End Sub

Sub InitHistory(ByRef shtCanvas As Worksheet, ByVal targetDay As String, ByVal arrayCount As Long)
    On Error Resume Next
    
    Dim iStatus             As Long
    Dim i                   As Long
    Dim j                   As Long
    Dim k                   As Long
    Dim lNameCountMAX       As Long
    Dim lNameCount          As Long
    Dim iLocate             As Long
    Dim historyIndex        As Long
    Dim lDateCountMAX       As Long
    Dim lDateCount          As Long
    Dim oName               As Object
    Dim sSaveName           As String
    Dim sComment            As String
    Dim sDate               As String
    Dim sNewName            As String
    Dim sWork               As String
    Dim vPastDate           As Variant
    Dim vSaveName           As Variant
    Dim arrayTaskInfo       As Variant
    
    ' |fffd||fffd||fffd|O|fffd|I|fffd|u|fffd|W|fffd|F|fffd|N|fffd|g|fffd||fffd||fffd|i|fffd|[|fffd||fffd||fffd||90bd||fffd||7c2||314|z|fffd||fffd||fffd||fffd||112||fffd|`|fffd||fffd||fffd||fffd|
    ReDim arrayTaskInfo(arrayCount, 1) As Variant

    ' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||96||fffd||fffd|O|fffd|I|fffd|u|fffd|W|fffd|F|fffd|N|fffd|g|fffd||fffd|z|fffd||fffd||24a|i|fffd|[|fffd||fffd||fffd||fffd|
    ' |fffd||64ea||fffd|^|fffd|X|fffd|N|fffd||242||357||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||202||fffd||fffd||60a4||fffd||255||3cd|X|fffd||fffd||fffd||90b1||fffd||181|B
    historyIndex = -1
    For Each oName In shtCanvas.Names
'        If InStr(1, oName.Name, NM_TT) > 0 Or InStr(1, oName.Name, NM_HT) > 0 Or InStr(1, oName.Name, "!_ts") > 0 Then
        If InStr(1, oName.Name, NM_HT) > 0 Or InStr(1, oName.Name, "!_ts") > 0 Then
            historyIndex = historyIndex + 1
            arrayTaskInfo(historyIndex, 0) = oName.Name
            arrayTaskInfo(historyIndex, 1) = oName.comment
        End If
    Next
    
    ' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||96||fffd||fffd|O|fffd|I|fffd|u|fffd|W|fffd|F|fffd|N|fffd|g|fffd||fffd||fffd||fffd||fffd||742||fffd||fffd||202||fffd||fffd||a347||fffd||34f||fffd||fffd||fffd||fffd||fffd||fffd|I|fffd||fffd||fffd||fffd||fffd||fffd|
    If historyIndex = -1 Then Exit Sub
    
    ' |fffd||fffd||fffd||fffd||fffd||315||4d413||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|O|fffd|^|fffd||255||3ca||fffd||fffd||fffd||fffd||fffd|
    sDate = CLng(DateValue(targetDay))
    
    For i = 0 To historyIndex
        
        iStatus = 0
        sSaveName = ""
        sComment = ""
        
        ' |fffd|z|fffd||42a42||75bc||fffd|O|fffd|I|fffd|u|fffd|W|fffd|F|fffd|N|fffd|g|fffd||fffd||fffd||fffd||fffd|o|fffd||fffd||fffd|A|fffd||fffd||fffd||fffd||fffd|s|fffd||303|f|fffd|[|fffd|^|fffd||fffd||fffd||fffd||82||242||702||182||7c2||fffd|
        For j = i To historyIndex
            If InStr(1, arrayTaskInfo(j, 0), arrayTaskInfo(i, 0)) > 0 Then
                ' |fffd|L|fffd|[|fffd||fffd||fffd||fffd||fffd||82||fffd||fffd||fffd||fffd||fffd||fffd||75bc||fffd|O|fffd||197||fffd||fffd||fffd||fffd|f|fffd|[|fffd|^|fffd||fffd|CSV|fffd|f|fffd|[|fffd|^|fffd||253||fffd||fffd||fffd||fffd|
                iStatus = 1
                sComment = sComment & "," & arrayTaskInfo(j, 1)
                sSaveName = sSaveName & "," & arrayTaskInfo(j, 0)
            ElseIf iStatus = 1 Then
                ' |fffd||fffd||fffd||fffd||fffd|f|fffd|[|fffd|^|fffd||48f|W|fffd||fffd||fffd||303|X|fffd|e|fffd|[|fffd|^|fffd|X|fffd||242||fffd||fffd||fffd|
                iStatus = 2
            End If
            ' |fffd|L|fffd|[|fffd||fffd||fffd||3c2||fffd||fffd|A|fffd||fffd||fffd||fffd||fffd|f|fffd|[|fffd|^|fffd||48f|W|fffd||fffd||fffd||142||fffd||fffd||fffd||383||fffd||fffd|[|fffd|v|fffd||14c82||fffd||fffd||fffd|
            If iStatus = 2 Then Exit For
        Next
        
        ' |fffd||64ea||fffd||303|J|fffd||fffd||fffd|}|fffd||fffd||fffd||d3dc||fffd||fffd||fffd||fffd|
        If sComment <> "" Then
            sComment = Mid(sComment, 2)
            sSaveName = Mid(sSaveName, 2)
        End If
        
        ' |fffd||7cb||fffd||fffd||fffd||fffd|t|fffd|f|fffd|[|fffd|^|fffd||fffd||fffd||fffd||fffd||742||fffd||fffd||fffd||a347||fffd||34f||fffd||fffd||fffd||fffd||fffd||fffd|p|fffd||fffd||fffd||fffd||fffd||fffd|
        If sComment <> "" Then
            
            ' |fffd||7cb||fffd||fffd||fffd||fffd|t|fffd|f|fffd|[|fffd|^|fffd||fffd|z|fffd||fffd||24a|i|fffd|[|fffd||fffd||fffd||fffd|
            vPastDate = Split(sComment, ",")
            lDateCountMAX = UBound(vPastDate)
            
            ' |fffd||150|V|fffd||fffd||fffd|t|fffd||30a|i|fffd|[|fffd||292|u|fffd||fffd||fffd||fffd||80b7||fffd||fffd|
            For lDateCount = 0 To lDateCountMAX
            
                ' |fffd||150|V|fffd||fffd||fffd|t|fffd||fffd||fffd||7cb||fffd||fffd||fffd||fffd|t|fffd||12d02||fffd||fffd||fffd||702||149||7cb||fffd||fffd||fffd||fffd|t|fffd||fffd|z|fffd||42a42||fffd||d3dc||fffd||fffd||fffd||fffd|
                If IsNumeric(Mid(vPastDate(lDateCount), 1, 5)) Then  ' |fffd|f|fffd|[|fffd|^|fffd||fffd||fffd||fffd||fffd|l|fffd||142||fffd||fffd||90b1||fffd||fffd|
                    If sDate > CLng(Mid(vPastDate(lDateCount), 1, 5)) Then
                        Exit For
                    Else
                        If lDateCount = lDateCountMAX Then
                            ' |fffd|z|fffd||fffd||30d||14c||fffd||30f||a347||fffd||34f||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
                            sComment = ""
                        Else
                            ' |fffd|z|fffd||fffd||24a|i|fffd|[|fffd||fffd||fffd||fffd||102||fffd||fffd||9576||fffd||fffd||fffd||fffd||fffd||fffd||fffd||d3dc||fffd||fffd||fffd||fffd|
                            sComment = Mid(sComment, Len(vPastDate(lDateCount)) + 2)
                        End If
                    End If
                End If
            Next
            
            ' |fffd||fffd||fffd||fffd||fffd|f|fffd|[|fffd|^|fffd||16f11|O|fffd|I|fffd|u|fffd|W|fffd|F|fffd|N|fffd|g|fffd||24a|i|fffd|[|fffd||fffd||fffd||fffd|
            With shtCanvas
                vSaveName = Split(sSaveName, ",")
                lNameCountMAX = UBound(vSaveName)
                lNameCount = 0
                Do
                    ' |fffd||64ea||fffd||316||fffd||fffd|O|fffd|I|fffd|u|fffd|W|fffd|F|fffd|N|fffd|g|fffd||fffd||fffd||75da||fffd||fffd||fffd|f|fffd|[|fffd|^|fffd||fffd||752||80b7||fffd||fffd|
                    sNewName = vSaveName(lNameCount)
            
                    ' |fffd||fffd||fffd||fffd||fffd|f|fffd|[|fffd|^|fffd||fffd|255|fffd||fffd||fffd||fffd||fffd||12d02||fffd||fffd||fffd||fffd||739f||fffd||316||fffd||fffd|O|fffd|I|fffd|u|fffd|W|fffd|F|fffd|N|fffd|g|fffd||250||602||fffd||582||fffd||fffd||fffd|
                    If Len(sComment) > 255 Then
                        sWork = Mid(sComment, 1, 255)
                        iLocate = InStrRev(sWork, ",")
                        sWork = Mid(sComment, 1, iLocate - 1)
                        sComment = Mid(sComment, iLocate + 1)
                        .Names(sNewName).comment = sWork
                    Else
                        .Names(sNewName).comment = sComment
                        sComment = ""
                    End If
                    
                    lNameCount = lNameCount + 1
                
                Loop Until sComment = ""
                    
                ' |fffd|s|fffd|v|fffd||242||202||fffd||fffd||fffd||fffd||fffd||fffd|O|fffd|I|fffd|u|fffd|W|fffd|F|fffd|N|fffd|g|fffd||fffd||fffd||d3dc||fffd||fffd||fffd||fffd|
                If lNameCount > 0 Then
                    For k = lNameCountMAX To lNameCount Step -1
                        .Names(vSaveName(k)).Delete
                    Next
                End If
            End With
        
        End If
        
        ' |fffd||fffd||fffd||316||fffd||fffd|O|fffd|I|fffd|u|fffd|W|fffd|F|fffd|N|fffd|g|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||90bd||fffd||7c3|C|fffd||fffd||fffd|f|fffd|b|fffd|N|fffd|X|fffd||fffd||fffd||fffd||96||7c2||fffd|
        i = j - 1
    
    Next

End Sub
Attribute VB_Name = "modReferences"
Option Explicit
Option Private Module

Private Const MENU_TITLE = "|fffd|Q|fffd||190||752||fffd|"

Public Sub AddReference(control As IRibbonControl)
    On Error GoTo AddReferenceError:
    
    Dim objWshShell     As Object
    Dim referenceObject As Object
    Dim addInFileName   As String
    Dim installPath     As String
    Dim projectName     As String
    Dim errorMessage    As String
    Dim isAdd           As Boolean
    
    addInFileName = "|fffd||fffd||210||fffd|.xlam"
    projectName = "ProgressLineProject"
    isAdd = False

    ' |fffd||fffd||fffd|C|fffd|u|fffd||fffd||fffd||fffd||fffd||303|t|fffd||fffd||fffd|p|fffd|X|fffd||752||fffd|
    ' (ex)C:\Users\[User]\AppData\Roaming\Microsoft\AddIns\[addInFileName]
    Set objWshShell = CreateObject("WScript.Shell")
    installPath = objWshShell.SpecialFolders("Appdata") & "\Microsoft\Addins\" & addInFileName
    
    ' |fffd|Q|fffd||190||752||fffd|
    With ActiveWorkbook.VBProject
        For Each referenceObject In .References
            If referenceObject.Name = projectName Then
                isAdd = True
                Exit For
            End If
        Next
        If isAdd Then
            Application.StatusBar = "|fffd|Q|fffd||190||752||fffd||252||1c9||fffd||fffd||fffd||fffd||fffd||102||fffd||fffd||702||fffd||fffd|B"
        Else
            .References.AddFromFile installPath
            Application.StatusBar = "|fffd|Q|fffd||190||752||fffd||252||1c9||fffd||fffd||fffd||fffd||702||fffd||fffd||fffd||fffd|B"
        End If
    End With

AddReferenceExit:
    Set objWshShell = Nothing
    Set referenceObject = Nothing
    Exit Sub

AddReferenceError:
    errorMessage = GetErrorMessage(err)
    If errorMessage = "" Then
        Resume Next
    Else
        Call OutMessage(errorMessage, vbOKOnly + vbExclamation, MENU_TITLE)
    End If
    GoTo AddReferenceExit:
    
End Sub

Sub RemoveReference(control As IRibbonControl)
    On Error GoTo RemoveReferenceError:
    
    Dim referenceObject As Object
    Dim projectName     As String
    Dim errorMessage    As String
    Dim isRemove        As Boolean
    
    projectName = "ProgressLineProject"
    isRemove = False
    
    ' |fffd|Q|fffd||190||752||fffd||fffd||fffd||d3dc||fffd||fffd||fffd||fffd|
    With ActiveWorkbook.VBProject
        For Each referenceObject In .References
            If referenceObject.Name = projectName Then
                .References.Remove referenceObject
                isRemove = True
            End If
        Next
    End With
    
    If isRemove Then
        Application.StatusBar = "|fffd|Q|fffd||190||752||fffd||fffd||fffd||d3dc||fffd||fffd||fffd||702||fffd||fffd||fffd||fffd|B"
    Else
        Application.StatusBar = "|fffd|Q|fffd||190||752||fffd||34d||d3dc||fffd||3c2||742||142||fffd||fffd|B"
    End If
    
RemoveReferenceExit:
    Set referenceObject = Nothing
    Exit Sub
    
RemoveReferenceError:
    
    errorMessage = GetErrorMessage(err)
    If errorMessage = "" Then
        Resume Next
    Else
        Call OutMessage(errorMessage, vbOKOnly + vbExclamation, MENU_TITLE)
    End If
    GoTo RemoveReferenceExit:

End Sub

Function GetErrorMessage(ByVal err As Object) As String
    Dim workMessage As String

    workMessage = ""
    
    ' |fffd|G|fffd||fffd||fffd|[|fffd||fffd||fffd|b|fffd|Z|fffd|[|fffd|W|fffd||fffd||48f|W|fffd||fffd||fffd||fffd|
    Select Case err.number
        Case 32813
        Case 1004
            workMessage = "VisualBasic|fffd|v|fffd||fffd||fffd|W|fffd|F|fffd|N|fffd|g|fffd||582||303|A|fffd|N|fffd|Z|fffd|X|fffd||fffd||fffd||82||fffd||fffd||fffd||fffd||fffd||702||fffd||fffd||fffd|B" & vbCrLf & _
                "|fffd||fffd||fffd||30e||83c7||fffd||fffd|VisualBasic|fffd|v|fffd||fffd||fffd|W|fffd|F|fffd|N|fffd|g|fffd||582||303|A|fffd|N|fffd|Z|fffd|X|fffd||fffd||fffd||fffd||fffd||82||fffd||fffd||102||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|B" & vbCrLf & vbCrLf & _
                "[|fffd|t|fffd|@|fffd|C|fffd||fffd|]-[|fffd|I|fffd|v|fffd|V|fffd||fffd||fffd||fffd|]|fffd||141|uExcel|fffd||303|I|fffd|v|fffd|V|fffd||fffd||fffd||fffd||fffd|v|fffd||fffd||fffd|J|fffd||fffd||fffd||702||fffd||fffd|B" & vbCrLf & _
                "[|fffd|Z|fffd|L|fffd||fffd||fffd||fffd||fffd|e|fffd|B |fffd|Z|fffd||fffd||fffd|^|fffd|[]-[|fffd|Z|fffd|L|fffd||fffd||fffd||fffd||fffd|e|fffd|B |fffd|Z|fffd||fffd||fffd|^|fffd|[|fffd||310||752||fffd|]|fffd||141|u|fffd|Z|fffd|L|fffd||fffd||fffd||fffd||fffd|e|fffd|B |fffd|Z|fffd||fffd||fffd|^|fffd|[|fffd|v|fffd||fffd||fffd|J|fffd||fffd||fffd||702||fffd||fffd|B" & vbCrLf & _
                "|fffd|uVBA |fffd|v|fffd||fffd||fffd|W|fffd|F|fffd|N|fffd|g |fffd|I|fffd|u|fffd|W|fffd|F|fffd|N|fffd|g |fffd||fffd||fffd|f|fffd||fffd||fffd||582||303|A|fffd|N|fffd|Z|fffd|X|fffd||fffd|M|fffd||fffd||fffd||fffd||fffd||fffd|v|fffd||243|`|fffd|F|fffd|b|fffd|N|fffd||fffd||fffd||fffd||fffd||702||fffd||fffd|B"
        Case 48
            workMessage = "|fffd|A|fffd|h|fffd|C|fffd||fffd||fffd||fffd||fffd||fffd||fffd||82||fffd||fffd||fffd||702||fffd||fffd||fffd|B" & vbCrLf & _
                "|fffd|A|fffd|h|fffd|C|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|C|fffd||fffd||fffd|X|fffd|g|fffd|[|fffd||fffd||fffd||fffd||fffd||fffd||102||fffd||fffd||90a9||fffd|m|fffd|F|fffd||fffd||fffd||102||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|B"
        Case Else
            workMessage = "|fffd|G|fffd||fffd||fffd|[|fffd||50d||fffd||fffd|F" & err.number & vbCrLf & _
             err.Description
    End Select
    
    GetErrorMessage = workMessage

End Function


Attribute VB_Name = "modRefreshLink"
Option Explicit
Option Private Module

Private Type tCANVAS
    prj_period          As Range    ' |fffd|v|fffd||fffd||fffd|W|fffd|F|fffd|N|fffd|g|fffd||fffd||fffd||fffd|
    pl_range            As Range    ' |fffd||fffd||210||fffd||fffd|`|fffd||fffd||348||fffd|
    pl_history_range    As Range    ' |fffd||fffd||fffd||fffd|`|fffd||fffd||348||fffd|
    top_task            As Range    ' |fffd||64ea||fffd|^|fffd|X|fffd|N
    top_startdate       As Range    ' |fffd||64ea||fffd|^|fffd|X|fffd|N|fffd||30a|J|fffd|n|fffd||fffd|
    top_enddate         As Range    ' |fffd||64ea||fffd|^|fffd|X|fffd|N|fffd||30f|I|fffd||fffd||fffd||fffd|
    progress_ratio      As Range    ' |fffd||64ea||fffd|^|fffd|X|fffd|N|fffd||310|i|fffd||fffd||fffd||fffd|
End Type

Dim serial_num  As Long
Dim save_timer  As String

Function GetUniqueNumber() As String
    
    GetUniqueNumber = ""
    
    ' |fffd|V|fffd|X|fffd|e|fffd||fffd||fffd||fffd||fffd|t|fffd||fffd||fffd||fffd||fffd||64fe||fffd||fffd||fffd||fffd|
    Dim date_info   As Date
    date_info = Now
    
    ' 0|fffd||fffd||fffd||fffd||fffd||fffd||30c|o|fffd||7ce||fffd||fffd||fffd||fffd||fffd||fffd|V|fffd||fffd||fffd|A|fffd||fffd||fffd|l|fffd||14e||64fe||fffd||fffd||fffd||fffd|
    Dim timer_val   As String
    timer_val = Timer
    
    ' |fffd|~|fffd||fffd||fffd|b|fffd||312|l|fffd||14c82||fffd||fffd|o|fffd||fffd||fffd||113||4c14c||152||fffd||315||fffd||fffd||fffd||fffd||fffd||255||3ca||fffd||fffd||fffd||fffd||fffd|
    Dim ms_pos      As Long
    Dim ms_val      As String
    ms_pos = InStrRev(timer_val, ".")
    If ms_pos > 0 Then
        ms_val = Format(CLng(Mid(timer_val, ms_pos + 1)), "00")
    Else
        ms_val = "00"
    End If
    
    ' |fffd|V|fffd|X|fffd|e|fffd||fffd||fffd||fffd||fffd|t|fffd||fffd||fffd||64fe||fffd||fffd||fffd||fffd|
    Dim date_val    As Long
    date_val = DateValue(date_info)
    
    ' |fffd||fffd||fffd||74e||fffd||fffd||fffd||fffd||fffd||fffd||64fe||fffd||fffd||fffd||fffd|
    Dim time_val    As String
    time_val = Format(TimeValue(date_info), "HHMMSS")
    
    GetUniqueNumber = date_val & time_val & ms_val & GetSerial(timer_val)
End Function

Function GetLinkName(ByVal row_prev As Long) As String
    
    ' LinkName|fffd||10d90||fffd||fffd||fffd||fffd||115||50b|p|fffd||fffd||fffd||fffd|
    GetLinkName = "_lk_" & GetUniqueNumber

End Function

Function GetSerial(ByVal timer_val As String) As String

    ' |fffd||fffd||fffd||fffd||fffd||fffd||fffd|O|fffd||fffd||312|l|fffd||193||fffd||fffd||fffd||fffd||fffd||fffd||a347||fffd||358|A|fffd||502||fffd||fffd|C|fffd||fffd||fffd|N|fffd||fffd||fffd||fffd||fffd||fffd||fffd|g|fffd||fffd||fffd||fffd|
    If timer_val = save_timer Then
        serial_num = serial_num + 1
    Else
        serial_num = 0
    End If
    save_timer = timer_val
    
    ' |fffd|A|fffd||502||fffd||4c14c||152||fffd||255||2433||fffd||fffd||fffd||115||50b|p|fffd||fffd||fffd||fffd|
    GetSerial = Format(serial_num, "00")

End Function

Sub AddLinkName(ByRef shtCanvas As Worksheet, ByVal row_prev As Long, ByVal row_back As Long)
    On Error Resume Next
    
    ' |fffd|^|fffd|X|fffd|N|fffd||fffd||fffd||fffd||fffd|N|fffd|I|fffd|u|fffd|W|fffd|F|fffd|N|fffd|g|fffd||316||fffd||fffd|O|fffd||fffd||fffd||64fe||fffd||fffd||fffd||fffd|
    Dim link_name       As String
    link_name = GetLinkName(row_prev)
    
    ' |fffd|I|fffd||fffd||342||fffd||fffd|`|fffd||fffd||fffd||fffd|
    Dim range_tasklink  As String
    range_tasklink = "$" & row_prev & ":$" & row_prev & ",$" & row_back & ":$" & row_back

    ' |fffd|^|fffd|X|fffd|N|fffd||fffd||fffd||fffd||fffd|N|fffd||fffd|Name|fffd|I|fffd|u|fffd|W|fffd|F|fffd|N|fffd|g|fffd||fffd|o|fffd|^|fffd||fffd||fffd||fffd|
    ' |fffd||fffd||fffd||253|o|fffd|^|fffd||fffd||fffd||fffd||102||fffd||fffd||fffd||a347||fffd||34f||fffd||fffd||fffd||fffd||fffd||fffd|X|fffd|L|fffd|b|fffd|v|fffd||fffd||fffd||fffd|
    Dim name_exist      As String
    name_exist = shtCanvas.Range(range_tasklink).Name.Name
    err.Clear
    If Mid(name_exist, InStr(1, name_exist, "!") + 1, 4) = "_lk_" Then Exit Sub
    shtCanvas.Names.Add Name:=link_name, refersto:="=" & range_tasklink
    
    ' |fffd||fffd||fffd|O|fffd|I|fffd|u|fffd|W|fffd|F|fffd|N|fffd|g|fffd||fffd||fffd|\|fffd||fffd||fffd||242||fffd||fffd||fffd|
    shtCanvas.Names(link_name).Visible = False
            
End Sub

Sub RefreshLink(ByVal CANVAS As Worksheet)
    
    ' |fffd|}|fffd|~|fffd||fffd||fffd||fffd|
    Call SuppressUpdates(True)
    
    ' |fffd|`|fffd||fffd|V|fffd|[|fffd|g|fffd||313|o|fffd|^|fffd||fffd||fffd||fffd||fffd||64fe||fffd||fffd||fffd||fffd|
    Dim canvas_info         As tCANVAS
    canvas_info = GetCanvasInfo(CANVAS.Name)
    
    ' |fffd|v|fffd||fffd||fffd|W|fffd|F|fffd|N|fffd|g|fffd||fffd||fffd||502||fffd||fffd||64fe||fffd||fffd||fffd||fffd|
    If canvas_info.prj_period Is Nothing Then Exit Sub
    
    ' |fffd|J|fffd|n|fffd|\|fffd||fffd||fffd|
    If canvas_info.top_startdate Is Nothing Then Exit Sub
        
    ' |fffd|I|fffd||fffd||fffd|\|fffd||fffd||fffd|
    If canvas_info.top_enddate Is Nothing Then Exit Sub
    
    ' |fffd|v|fffd||fffd||fffd|W|fffd|F|fffd|N|fffd|g|fffd||fffd||fffd||502||fffd|z|fffd||fffd||24a|i|fffd|[|fffd||fffd||fffd||fffd|
    Dim projectperiod_range     As Range
    Dim projectperiod_array()   As Variant
    Set projectperiod_range = canvas_info.prj_period
    
    If projectperiod_range.Columns.Count > 1 Then
        projectperiod_array = projectperiod_range
    Else
        ReDim projectperiod_array(1, 1) As Variant
        projectperiod_array(1, 1) = projectperiod_range
    End If
    
    ' |fffd|v|fffd||fffd||fffd|W|fffd|F|fffd|N|fffd|g|fffd||fffd||fffd||502||30a|J|fffd|n|fffd||fffd||fffd||fffd||fffd||fffd||fffd||7c2||fffd|
    Dim projectperiod_start_date    As Date     ' |fffd|v|fffd||fffd||fffd|W|fffd|F|fffd|N|fffd|g|fffd||fffd||fffd||502||30a|J|fffd|n|fffd||fffd|
    projectperiod_start_date = CDate(projectperiod_range.Item(1))
        
    ' |fffd|v|fffd||fffd||fffd|W|fffd|F|fffd|N|fffd|g|fffd||fffd||fffd||502||30f|I|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||7c2||fffd|
    Dim projectperiod_end_date      As Date     ' |fffd|v|fffd||fffd||fffd|W|fffd|F|fffd|N|fffd|g|fffd||fffd||fffd||502||30f|I|fffd||fffd||fffd||fffd|
    projectperiod_end_date = CDate(projectperiod_range.Item(projectperiod_range.Count))
        
    ' |fffd|V|fffd|[|fffd|g|fffd||fffd||303|^|fffd|X|fffd|N|fffd||fffd||fffd||fffd||fffd|N|fffd||fffd||fffd|N|fffd||fffd||fffd|A|fffd||fffd||fffd||fffd|
    Dim shape_name      As Object
    For Each shape_name In CANVAS.Shapes
        If Mid(shape_name.Name, 1, 8) = "TaskLink" Then shape_name.Delete
    Next
    
    ' |fffd|V|fffd|[|fffd|g|fffd||253|o|fffd|^|fffd||fffd||fffd||fffd||102||fffd||fffd||fffd|^|fffd|X|fffd|N|fffd||fffd||fffd||fffd||fffd|N|fffd||fffd||42a42||fffd|^|fffd|X|fffd|N|fffd||fffd||fffd||fffd||fffd|N|fffd||fffd|`|fffd||60b7||fffd||fffd|
    Dim shape_tasklink              As Object   ' |fffd|V|fffd|[|fffd|g|fffd||fffd||fffd||fffd|NAME|fffd|I|fffd|u|fffd|W|fffd|F|fffd|N|fffd|g|fffd|i|fffd|[|fffd|p|fffd||3d0||fffd|
    Dim names_name                  As String   ' |fffd|V|fffd|[|fffd|g|fffd||fffd||fffd||fffd|NAME|fffd|I|fffd|u|fffd|W|fffd|F|fffd|N|fffd|g|fffd||fffd||fffd|i|fffd|[|fffd|p|fffd||3d0||fffd|
    Dim link_array                  As Variant  ' |fffd||fffd|s|fffd||18c||3471||fffd||30d|s|fffd|A|fffd|h|fffd||fffd||fffd|X|fffd||fffd||fffd|i|fffd|[|fffd||fffd||fffd||fffd|z|fffd||fffd|
    Dim start_row_adr               As String   ' Range|fffd|A|fffd|h|fffd||fffd||fffd|X|fffd|`|fffd||fffd|
    Dim end_row_adr                 As String   ' Range|fffd|A|fffd|h|fffd||fffd||fffd|X|fffd|`|fffd||fffd|
    Dim get_start_col               As Long     ' |fffd|n|fffd|_|fffd||317||fffd||50d||fffd||fffd|i|fffd||2433||fffd|O|fffd|j
    Dim get_end_col                 As Long     ' |fffd|I|fffd|_|fffd||317||fffd||50d||fffd||fffd|i|fffd||2433||fffd|O|fffd|j
    Dim start_col                   As Long     ' |fffd|n|fffd|_|fffd||317||fffd||50d||fffd||fffd|i|fffd||2433||fffd||fffd|j
    Dim end_col                     As Long     ' |fffd|I|fffd|_|fffd||317||fffd||50d||fffd||fffd|i|fffd||2433||fffd||fffd|j
    Dim date_sp                     As Date     ' |fffd|n|fffd|_|fffd||313||fffd||fffd|t|fffd|i|fffd||fffd|s|fffd|^|fffd|X|fffd|N|fffd||30f|I|fffd||fffd||fffd||fffd||fffd|j
    Dim date_ep                     As Date     ' |fffd|I|fffd|_|fffd||313||fffd||fffd|t|fffd|i|fffd||3471||fffd|^|fffd|X|fffd|N|fffd||30a|J|fffd|n|fffd||fffd||fffd|j
    Dim onSpecialS                  As Boolean  ' TRUE:|fffd|n|fffd|_|fffd||30d||fffd||fffd|W|fffd||343|Z|fffd||fffd||fffd||30d||fffd||fffd|@FALSE:|fffd|n|fffd|_|fffd||30d||fffd||fffd|W|fffd||343|Z|fffd||fffd||fffd||309|E
    Dim onSpecialE                  As Boolean  ' TRUE:|fffd|I|fffd|_|fffd||30d||fffd||fffd|W|fffd||343|Z|fffd||fffd||fffd||30f||fffd|@FALSE:|fffd|I|fffd|_|fffd||30d||fffd||fffd|W|fffd||343|Z|fffd||fffd||fffd||30d||fffd|
    
    For Each shape_tasklink In CANVAS.Names
        names_name = NormalizedName(shape_tasklink.Name)
        
        If Mid(names_name, 1, 4) = "_lk_" Then
            ' |fffd|Q|fffd||194||348||342||fffd||fffd||fffd||fffd|s|fffd|^|fffd|X|fffd|N|fffd|s|fffd||18c||3471||fffd|^|fffd|X|fffd|N|fffd|s|fffd||1228f|o|fffd||fffd||fffd||114|z|fffd||fffd||24a|i|fffd|[|fffd||fffd||fffd||fffd|
            link_array = Split(shape_tasklink.refersto, ",")
            start_row_adr = Mid(link_array(0), InStrRev(link_array(0), ":") + 2)    ' |fffd||fffd|s|fffd|^|fffd|X|fffd|N|fffd|s
            end_row_adr = Mid(link_array(1), InStrRev(link_array(1), ":") + 2)      ' |fffd||3471||fffd|^|fffd|X|fffd|N|fffd|s
        
           ' |fffd|n|fffd|_|fffd||30f|I|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||50d||fffd||fffd||fffd||fffd||fffd||fffd||7c2||fffd|
           date_sp = CANVAS.Cells(start_row_adr, canvas_info.top_enddate.Column)
           get_start_col = GetCalCol(projectperiod_array, date_sp, 1, UBound(projectperiod_array, 2))
           start_col = get_start_col + projectperiod_range.Column - 1
           
           ' |fffd|I|fffd|_|fffd||30a|J|fffd|n|fffd||fffd||fffd||fffd||fffd||fffd||fffd||50d||fffd||fffd||fffd||fffd||fffd||fffd||7c2||fffd|
           date_ep = CANVAS.Cells(end_row_adr, canvas_info.top_startdate.Column)
           get_end_col = GetCalCol(projectperiod_array, date_ep, 1, UBound(projectperiod_array, 2))
           end_col = get_end_col + projectperiod_range.Column - 1
            
            If IsErrorEndDate(date_ep, projectperiod_start_date, projectperiod_end_date) Then
                ' |fffd|^|fffd|X|fffd|N|fffd||fffd||fffd||fffd||fffd|N|fffd||143|G|fffd||fffd||fffd|[|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||a347||fffd||34c||c2||fffd||fffd||fffd||fffd||fffd||fffd|N|fffd||194||fffd||fffd|f|fffd||fffd||fffd||fffd|NAME|fffd|I|fffd|u|fffd|W|fffd|F|fffd|N|fffd|g|fffd||fffd||fffd||d3dc||fffd||fffd||fffd||fffd|
                shape_tasklink.Delete
            ElseIf get_start_col > 0 And get_end_col > 0 Then
                onSpecialS = False
                onSpecialE = False
                ' |fffd|n|fffd|_|fffd|i|fffd||fffd|s|fffd|^|fffd|X|fffd|N|fffd||30f|I|fffd||fffd||fffd||fffd||fffd|j|fffd||fffd||fffd|v|fffd||fffd||fffd|W|fffd|F|fffd|N|fffd|g|fffd||fffd||fffd||50a|J|fffd|n|fffd||fffd||fffd||fffd||fffd|O|fffd||242||202||fffd||a347||fffd||343||fffd||fffd||fffd||fffd|N|fffd||30a|J|fffd|n|fffd||fffd||fffd|W|fffd||fffd||fffd|Z|fffd||fffd||fffd||30d||fffd||fffd||242||fffd||fffd||fffd|
                If date_sp < projectperiod_start_date Then onSpecialS = True
                ' |fffd|I|fffd|_|fffd|i|fffd||3471||fffd|^|fffd|X|fffd|N|fffd||30a|J|fffd|n|fffd||fffd||fffd|j|fffd||fffd||fffd|v|fffd||fffd||fffd|W|fffd|F|fffd|N|fffd|g|fffd||fffd||fffd||50a|J|fffd|n|fffd||fffd||fffd||193||fffd||fffd||fffd||fffd||fffd||fffd||a347||fffd||343||fffd||fffd||fffd||fffd|N|fffd||30f|I|fffd||fffd||fffd||fffd||fffd|W|fffd||fffd||fffd|Z|fffd||fffd||fffd||30f||fffd||242||fffd||fffd||fffd|
                If date_ep = projectperiod_start_date Then onSpecialE = True
                ' |fffd|^|fffd|X|fffd|N|fffd||fffd||fffd||fffd||fffd|N|fffd||fffd|`|fffd||60b7||fffd||fffd|
                Call DrawTaskLink(CANVAS, Cells(start_row_adr, start_col).Address, Cells(end_row_adr, end_col).Address, onSpecialS, onSpecialE)
            End If
        
        End If
    Next
    
    ' |fffd|`|fffd||fffd|Y|fffd||fffd||fffd||311||38f||fffd|
    Call RefreshWindow
    
    ' |fffd|}|fffd|~|fffd||7c2||fffd||fffd||fffd||fffd||fffd|
    Call SuppressUpdates(False)
    Application.StatusBar = "|fffd|^|fffd|X|fffd|N|fffd||fffd||fffd||fffd||fffd|N|fffd||fffd||fffd||115|`|fffd||60b5||fffd||702||fffd||fffd||fffd||fffd|B"
    
End Sub

Function NormalizedName(ByVal org_name As String) As String
On Error Resume Next
    
    ' |fffd||fffd||fffd||fffd||fffd||316||fffd||fffd|O|fffd||fffd||fffd||fffd|V|fffd|[|fffd|g|fffd||fffd||fffd||fffd||fffd||fffd||83dc||fffd||fffd||fffd||116||fffd||fffd|O|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|o|fffd||fffd|
    NormalizedName = org_name
    Dim sheetname_pos   As Long
    sheetname_pos = InStrRev(org_name, "!")
    If sheetname_pos > 0 Then NormalizedName = Mid(org_name, sheetname_pos + 1)

End Function

Sub RefreshWindow()
    ' Shape|fffd||fffd|`|fffd||60b7||fffd||fffd||196|{|fffd||fffd||fffd||315|`|fffd||fffd||292|u|fffd||fffd||fffd||fffd|Y|fffd||fffd||fffd||115|\|fffd||fffd||fffd||fffd||fffd||fffd||9396||fffd||6c2||fffd||fffd||fffd||fffd||fffd|
    ' |fffd||fffd||fffd||30e||fffd||fffd||6c2||fffd||fffd||fffd||fffd||fffd||fffd||fffd||90bd||fffd||7c1|A|fffd|\|fffd||fffd||fffd|{|fffd||fffd||fffd||fffd|100%|fffd||242||fffd||fffd||102||fffd||fffd||733b||fffd||742||315|\|fffd||fffd||fffd|{|fffd||fffd||fffd||256||7c2||fffd||fffd||38f||fffd||fffd||fffd||fffd|{|fffd||fffd|
    Dim save_zoom           As Variant
    
    ' |fffd||fffd||282||315|\|fffd||fffd||fffd|{|fffd||fffd||fffd||fffd|100%|fffd||242||fffd||fffd||102||fffd||fffd||7333||fffd||315|\|fffd||fffd||fffd|{|fffd||fffd||fffd||256||7c2||fffd|
    Application.ScreenUpdating = False
    With ActiveWindow
        save_zoom = .Zoom
        .Zoom = 100
        .Zoom = save_zoom
    End With
    Application.ScreenUpdating = True

End Sub

Function IsUnLink(Optional ByVal is_all As Boolean) As Boolean
    Dim message         As String
    
    IsUnLink = False
    message = "|fffd|^|fffd|X|fffd|N|fffd||fffd||fffd||fffd||fffd|N|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||702||fffd||fffd||fffd||fffd|H" & vbCrLf _
            & vbCrLf _
            & "|fffd||fffd||fffd||fffd||fffd||fffd||34c||fffd||fffd||256||7c2||fffd||fffd||702||fffd||fffd||fffd|B" & vbCrLf _
            & "|fffd|K|fffd|v|fffd||249||fffd||fffd||fffd||fffd||10d||110||752||80b5||fffd||102||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|B"
    
    If is_all Then message = "|fffd||fffd||fffd||5c2||102||fffd|" & message

    Application.Cursor = xlNorthwestArrow
    If MsgBox(message, vbYesNo + vbExclamation, AP_TITLE & AP_VERSION & " - " & "|fffd|^|fffd|X|fffd|N|fffd||fffd||fffd||fffd||fffd|N|fffd||fffd||fffd||fffd|") = vbYes Then IsUnLink = True
    Application.Cursor = xlDefault

End Function
Attribute VB_Name = "modReport"
Option Explicit
Option Private Module

Private Const MENU_TITLE = "|fffd||4d413||fffd||fffd||752||fffd|"
    
Sub EditReportDate(control As IRibbonControl)
    On Error GoTo EditReportDateErr

    ' |fffd||fffd||fffd|[|fffd|J|fffd||fffd||fffd||3d0||fffd||fffd||fffd|`
    Dim sDateCSV                As String       '|fffd||fffd||fffd|t|fffd||fffd|CSV|fffd|`|fffd||fffd||fffd||24a|i|fffd|[|fffd||fffd||fffd||fffd|
    Dim arrayCalendar           As Variant      '|fffd||fffd||fffd|t|fffd||fffd||fffd|i|fffd|[|fffd|z|fffd||fffd|
    Dim first_date_of_project   As Date
    Dim last_date_of_project    As Date
    Dim current_date            As Date
    Dim row_of_project          As Long
    Dim col_of_project          As Long
   
    ' |fffd|C|fffd|x|fffd||fffd||fffd|g|fffd||314||fffd||fffd||fffd||fffd||fffd|}|fffd|~|fffd||fffd||fffd||fffd|
    Application.EnableEvents = False
    
    ' |fffd|X|fffd|e|fffd|[|fffd|^|fffd|X|fffd|o|fffd|[|fffd||fffd||fffd||fffd||fffd||fffd|
    Application.StatusBar = ""
    
    ' OK|fffd|{|fffd|^|fffd||fffd||fffd||16ccc||fffd||fffd||242||fffd||fffd||101|A|fffd|{|fffd||fffd||fffd|{|fffd|^|fffd||fffd||fffd||243|t|fffd|H|fffd|[|fffd|J|fffd|X|fffd||fffd||fffd||fffd|
    frmReportDate.cmdOK.Enabled = False
    frmReportDate.cmdToday.SetFocus
    
    ' |fffd|A|fffd|N|fffd|e|fffd|B|fffd|u|fffd|V|fffd|[|fffd|g|fffd||fffd||fffd|i|fffd||fffd||210||fffd||fffd||fffd|`|fffd||60b7||fffd||fffd|V|fffd|[|fffd|g|fffd||fffd||fffd|j|fffd||fffd||fffd||64fe||fffd||fffd||fffd||fffd|
    Dim sheetCanvas             As Worksheet    '|fffd|`|fffd||fffd||38f||6c2||303||fffd||fffd|[|fffd|N|fffd|V|fffd|[|fffd|g
    Set sheetCanvas = Worksheets(ActiveSheet.Name)
    
    ' |fffd|`|fffd||fffd|V|fffd|[|fffd|g|fffd||303|v|fffd||fffd||fffd|W|fffd|F|fffd|N|fffd|g|fffd||fffd||fffd||502||fffd||fffd||64fe||fffd||fffd||fffd||fffd|
    Dim sCalendar               As String       '|fffd||fffd||fffd|t|fffd||fffd||fffd|i|fffd|[|fffd||3d0||fffd|
    sCalendar = GetNames(sheetCanvas, NM_CL)
    
    ' |fffd|v|fffd||fffd||fffd|W|fffd|F|fffd|N|fffd|g|fffd||fffd||fffd||502||fffd||fffd|o|fffd|^|fffd||fffd||fffd||fffd||102||fffd||fffd||202||fffd||fffd||a347||fffd||34f||fffd||fffd||fffd||fffd||fffd||fffd|I|fffd||fffd||fffd||fffd||fffd||fffd|
    If sCalendar = "" Then
        Call OutMessage("|fffd|v|fffd||fffd||fffd|W|fffd|F|fffd|N|fffd|g|fffd||fffd||fffd||502||fffd||fffd|o|fffd|^|fffd||fffd||fffd||fffd||102||fffd||fffd||702||fffd||fffd||fffd|B" & vbCrLf & "|fffd|`|fffd||fffd|V|fffd|[|fffd|g|fffd||fffd||752||80b5||fffd||102||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|B", vbOKOnly + vbExclamation, MENU_TITLE)
        GoTo EditReportDateExit
    End If
    
    ' |fffd|Q|fffd||183|G|fffd||fffd||fffd|[|fffd||fffd||fffd||fffd||fffd||fffd||fffd||311||38f||fffd|
    If InStr(sCalendar, "#REF") > 0 Then
        Call OutMessage("|fffd|v|fffd||fffd||fffd|W|fffd|F|fffd|N|fffd|g|fffd||fffd||fffd||fffd|" & ERR_REF_ERROR & vbCrLf & WNG_CANVAS_ERROR, vbOKOnly + vbExclamation, MENU_TITLE)
        GoTo EditReportDateExit
    End If
        
    ' |fffd|{|fffd||fffd||fffd||fffd||fffd|t|fffd||fffd||fffd||64fe||fffd||fffd||fffd||fffd|
    Dim sToday                  As String       '|fffd|V|fffd|X|fffd|e|fffd||fffd||fffd||fffd||fffd|t|fffd|i|fffd|[|fffd||3d0||fffd|
    sToday = Format(Now, DATE_FORM)
    
    ' |fffd|v|fffd||fffd||fffd|W|fffd|F|fffd|N|fffd|g|fffd||fffd||fffd||502||fffd|i|fffd||fffd||fffd||4d413||fffd||fffd||303||fffd||fffd|X|fffd|g|fffd||253|o|fffd|^|fffd||fffd||fffd||fffd|
    Dim i                       As Long
    Dim lTodayIndex             As Long         '|fffd||fffd||fffd|t|fffd||fffd||fffd|X|fffd|g|fffd||fffd||fffd||303|V|fffd|X|fffd|e|fffd||fffd||fffd||fffd||fffd|t|fffd||292|u
    Dim lSaveIndex              As Long         '|fffd||fffd||fffd|t|fffd||fffd||fffd|X|fffd|g|fffd||fffd||fffd||311||794||fffd||fffd||fffd|t|fffd||292|u
    frmReportDate.lstCalendar.Clear
    i = 0
    lSaveIndex = -1
    lTodayIndex = -1
    
    ' |fffd|v|fffd||fffd||fffd|W|fffd|F|fffd|N|fffd|g|fffd||fffd||fffd||502||fffd|CSV|fffd|`|fffd||fffd||fffd||155||3d0||fffd||fffd||24a|i|fffd|[|fffd||fffd||fffd||fffd|
    With sheetCanvas
        row_of_project = .Range(sCalendar).Row
        col_of_project = .Range(sCalendar).Column
        first_date_of_project = .Cells(row_of_project, col_of_project)
        last_date_of_project = .Cells(row_of_project, col_of_project + .Range(sCalendar).Count - 1)
    End With

    Dim wDate                   As String       '|fffd||fffd||fffd|t|fffd|i|fffd|[|fffd||3d0||fffd|
    For current_date = first_date_of_project To last_date_of_project
        wDate = Format(current_date, DATE_FORM)
        sDateCSV = sDateCSV & "," & wDate
        Select Case wDate
            Case sToday
                lTodayIndex = i
                i = i + 1       ' |fffd||4d413||fffd||fffd||fffd||fffd|{|fffd||fffd||fffd||fffd||fffd|t|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||302||182||fffd||fffd||311||38f||fffd|
            Case gReportDate
                lSaveIndex = i
            Case Else
                i = i + 1
        End Select
    Next
    
    ' |fffd|v|fffd||fffd||fffd|W|fffd|F|fffd|N|fffd|g|fffd||fffd||fffd||502||fffd||fffd|P|fffd||fffd||fffd||fffd||fffd||fffd||fffd||742||fffd||fffd||202||fffd||fffd||a347||fffd||343|G|fffd||fffd||fffd|[|fffd||fffd|\|fffd||fffd||fffd||fffd||fffd||fffd|
    If Len(sDateCSV) <= 1 Then
        Call OutMessage("|fffd|v|fffd||fffd||fffd|W|fffd|F|fffd|N|fffd|g|fffd||fffd||fffd||502||fffd||fffd||fffd||fffd||82||fffd||fffd||fffd||702||fffd||fffd||fffd|B" & vbCrLf & WNG_CANVAS_ERROR, vbOKOnly + vbExclamation, MENU_TITLE)
        GoTo EditReportDateExit
    End If
    
    ' |fffd||64ea||fffd||303|J|fffd||fffd||fffd|}|fffd||fffd||fffd||d3dc||fffd||fffd||fffd||fffd|
    sDateCSV = Mid(sDateCSV, 2)
    
    ' |fffd|v|fffd||fffd||fffd|W|fffd|F|fffd|N|fffd|g|fffd||fffd||fffd||502||fffd|z|fffd||fffd||24a|i|fffd|[|fffd||fffd||fffd||fffd|
    arrayCalendar = Split(sDateCSV, ",")
        
    ' |fffd|v|fffd||fffd||fffd|W|fffd|F|fffd|N|fffd|g|fffd||fffd||fffd||502||fffd||fffd||fffd||835e||fffd||fffd||155||4d413||fffd||fffd||752||fffd|t|fffd|H|fffd|[|fffd||fffd||fffd||fffd|\|fffd||fffd||fffd||fffd||fffd||fffd|
    With frmReportDate
        .lstCalendar.List = arrayCalendar
        If lSaveIndex = -1 Then ' |fffd||4d413||fffd||fffd||fffd||fffd||fffd||fffd||752||fffd||30f||a347||fffd||353||fffd||fffd||fffd||fffd||fffd||fffd|t|fffd||303|C|fffd||fffd||fffd|f|fffd|b|fffd|N|fffd|X|fffd||fffd||752||80b7||fffd||fffd|
            .lstCalendar.ListIndex = lTodayIndex
        Else
            .lstCalendar.ListIndex = lSaveIndex
        End If
        .Show
    End With
    
    ' |fffd|e|fffd|I|fffd|u|fffd|W|fffd|F|fffd|N|fffd|g|fffd||fffd||fffd|J|fffd||fffd||fffd||fffd||fffd||fffd|
    Set sheetCanvas = Nothing
    
    ' |fffd|I|fffd||fffd||fffd||fffd||fffd||fffd|
    GoTo EditReportDateExit
    
EditReportDateErr:
    err.Clear
    
EditReportDateExit:
    ' |fffd|e|fffd|I|fffd|u|fffd|W|fffd|F|fffd|N|fffd|g|fffd||fffd||fffd|J|fffd||fffd||fffd||fffd||fffd||fffd|
    Set sheetCanvas = Nothing
    
    ' |fffd|C|fffd|x|fffd||fffd||fffd|g|fffd||314||fffd||fffd||fffd||fffd|}|fffd|~|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
    Application.EnableEvents = True
End Sub

'
' |fffd|@|fffd|\      : |fffd||4d413||fffd||fffd||fffd||fffd||fffd|
'
' |fffd||502||fffd|l    : |fffd||202||fffd|
'
' |fffd||fffd||fffd||fffd||fffd||fffd|    : |fffd||202||fffd|
'
' |fffd|@|fffd|\|fffd||fffd||fffd||fffd|  : |fffd||fffd||fffd|t|fffd||fffd||fffd|X|fffd|g|fffd||151|I|fffd||fffd||fffd||fffd||fffd||a0bd||fffd||fffd||fffd|t|fffd||fffd||4d413||fffd||fffd||182||fffd||fffd||fffd|
'
Sub SetReportDate()
    

    gReportDate = frmReportDate.lstCalendar.List(frmReportDate.lstCalendar.ListIndex)
    
    ' |fffd||fffd||fffd|b|fffd|Z|fffd|[|fffd|W|fffd|o|fffd||fffd|
    Application.StatusBar = "|fffd|i|fffd||fffd||fffd||4d413||fffd||fffd||fffd| " & gReportDate & " |fffd||250||752||80b5||fffd||702||fffd||fffd||fffd||fffd|B"
        
    Unload frmReportDate
    
End Sub

'
' |fffd|@|fffd|\      : |fffd||4d413||fffd||fffd||fffd||fffd|X|fffd|g|fffd|I|fffd||fffd|
'
' |fffd||502||fffd|l    : |fffd||202||fffd|
'
' |fffd||fffd||fffd||fffd||fffd||fffd|    : |fffd||202||fffd|
'
' |fffd|@|fffd|\|fffd||fffd||fffd||fffd|  : |fffd||4d413||fffd||fffd||a5d7||fffd|I|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|OK|fffd|{|fffd|^|fffd||fffd||fffd||fffd|L|fffd||fffd||fffd||242||fffd||fffd||fffd|
'
Sub SelectList()

    ' OK|fffd|{|fffd|^|fffd||fffd||fffd||fffd|L|fffd||fffd||fffd||242||fffd||fffd||fffd|
    frmReportDate.cmdOK.Enabled = True

End Sub

'
' |fffd|@|fffd|\      : |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
'
' |fffd||502||fffd|l    : |fffd||202||fffd|
'
' |fffd||fffd||fffd||fffd||fffd||fffd|    : |fffd||202||fffd|
'
' |fffd|@|fffd|\|fffd||fffd||fffd||fffd|  : |fffd||fffd||fffd|t|fffd||fffd||fffd|X|fffd|g|fffd||fffd||fffd||74d6||fffd||fffd||fffd||fffd||fffd|t|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
'
Sub SelectToday()
    
    ' |fffd||fffd||fffd|[|fffd|J|fffd||fffd||fffd||3d0||fffd||fffd||fffd|`
    Dim i       As Long
    Dim sToday  As String
    Dim isFound As Boolean
    
    ' |fffd|{|fffd||fffd||fffd||fffd||fffd|t|fffd|i|fffd|V|fffd|X|fffd|e|fffd||fffd||fffd||fffd||fffd|t|fffd|j|fffd||fffd||fffd||64fe||fffd||fffd||fffd||fffd|
    sToday = Format(Now, DATE_FORM)
  
    isFound = False
    With frmReportDate
        For i = 0 To .lstCalendar.listCount - 1
            If sToday = .lstCalendar.List(i) Then
                .lstCalendar.ListIndex = i
                .cmdOK.Enabled = True
                isFound = True
                Exit For
            End If
        Next
    End With
    
    If Not isFound Then
       Call OutMessage("|fffd|v|fffd||fffd||fffd|W|fffd|F|fffd|N|fffd|g|fffd||fffd||fffd||502||fffd| " & sToday & " |fffd||fffd||fffd||fffd||fffd||742||fffd||fffd||702||fffd||fffd||fffd|B", vbOKOnly + vbExclamation, MENU_TITLE)
    End If
            
End Sub


Attribute VB_Name = "modReset"
Option Explicit
Option Private Module

Sub ResetCanvas(control As IRibbonControl)
Attribute ResetCanvas.VB_ProcData.VB_Invoke_Func = " \n14"
    On Error Resume Next
    
    ' |fffd||fffd||fffd||fffd||fffd|p|fffd||fffd||fffd||30a|m|fffd|F|fffd||fffd||fffd|s|fffd||fffd||fffd|B
    Const message = "|fffd|`|fffd||fffd|V|fffd|[|fffd|g|fffd||310||752||fffd||fffd||fffd||fffd||fffd||fffd||fffd|Z|fffd|b|fffd|g|fffd||fffd||fffd||702||fffd||fffd|B" & vbCrLf & "|fffd||fffd||210||fffd||fffd|`|fffd||65da||fffd||fffd||fffd||fffd||fffd||702||782||fffd||fffd||5c2||102||30a||fffd||fffd||fffd||fffd||752||80aa||fffd||d3dc||fffd||fffd||fffd||fffd||702||fffd||fffd|B" & _
        vbCrLf & "|fffd||fffd||fffd||fffd||fffd||11c4d|s|fffd||fffd||fffd||102||fffd||fffd||fffd||b0b5||fffd||fffd||fffd||142||fffd||fffd||fffd||fffd|H"
    If OutMessage(message, vbOKCancel + vbExclamation, "|fffd|`|fffd||fffd|V|fffd|[|fffd|g|fffd||fffd||fffd|Z|fffd|b|fffd|g") = vbCancel Then
        Application.StatusBar = "|fffd|`|fffd||fffd|V|fffd|[|fffd|g|fffd||303||fffd||fffd|Z|fffd|b|fffd|g|fffd||fffd||fffd|L|fffd||fffd||fffd||fffd||fffd|Z|fffd||fffd||fffd||fffd||fffd||702||fffd||fffd||fffd||fffd|B"
        Exit Sub
    End If
    
    ' |fffd||fffd||fffd||fffd||fffd|}|fffd|~
    Call SuppressUpdates(True)
    
    ' |fffd|`|fffd||fffd|V|fffd|[|fffd|g|fffd||253|o|fffd|^|fffd||fffd||fffd||fffd||102||fffd||fffd||fffd||fffd||210||fffd||fffd||598|A|fffd||316||fffd||fffd|O|fffd|I|fffd|u|fffd|W|fffd|F|fffd|N|fffd|g|fffd||fffd||fffd||fffd||fffd||5c2||10d||d3dc||fffd||fffd||fffd||fffd|
    Dim oName               As Object       ' |fffd|`|fffd||fffd|V|fffd|[|fffd|g|fffd||fffd||316||fffd||fffd|O|fffd|I|fffd|u|fffd|W|fffd|F|fffd|N|fffd|g
    For Each oName In ActiveWorkbook.ActiveSheet.Names
        If IsRelatedName(oName.Name) Then oName.Delete
    Next

    ' |fffd|}|fffd|~|fffd||fffd||fffd||fffd|
    Call SuppressUpdates(False)
    Application.StatusBar = "|fffd|`|fffd||fffd|V|fffd|[|fffd|g|fffd||fffd||fffd||fffd||fffd|Z|fffd|b|fffd|g|fffd||fffd||fffd||702||fffd||fffd||fffd||fffd|B"

End Sub

Sub ClearCanvas(control As IRibbonControl)
    On Error Resume Next
    
    Application.StatusBar = ""
    
    Const message = "|fffd||fffd||210||fffd||fffd||fffd|e|fffd|L|fffd|X|fffd|g|fffd|{|fffd|b|fffd|N|fffd|X|fffd||202||1c2||310|}|fffd|`|fffd||fffd||fffd||fffd||fffd||5c2||10d||d3dc||fffd||fffd||fffd||702||fffd||fffd|B" & vbCrLf & _
                    "|fffd||fffd||fffd||fffd||fffd||11c4d|s|fffd||fffd||fffd||102||fffd||fffd||fffd||b0b5||fffd||fffd||fffd||142||fffd||fffd||fffd||fffd|H"
    If OutMessage(message, vbOKCancel + vbExclamation, "|fffd|`|fffd||fffd|V|fffd|[|fffd|g|fffd|N|fffd||fffd||fffd|A") = vbCancel Then Exit Sub
    ' |fffd||fffd||fffd||fffd||fffd|}|fffd|~
    Call SuppressUpdates(True)
    
    ' |fffd||fffd||fffd||fffd|1:|fffd||4d413||fffd||fffd||308||fffd||210||fffd||fffd|@|fffd||fffd||fffd||fffd|2:|fffd||7cb||fffd||fffd||308||fffd||210||fffd||fffd|@|fffd||fffd||fffd||fffd|3:|fffd|^|fffd|X|fffd|N|fffd||fffd||fffd||fffd||fffd|N|fffd|@|fffd||fffd||fffd||fffd|4:|fffd||fffd||fffd||311||fffd||fffd|}|fffd|`
    ' True:|fffd||d3dc||fffd|@False:|fffd|X|fffd|L|fffd|b|fffd|v
    Const TARGET_NAME = "|fffd|`|fffd||fffd|V|fffd|[|fffd|g"
    If RunClearShapes(True, True, True, True) Then
        Application.StatusBar = TARGET_NAME & "|fffd||fffd||fffd|N|fffd||fffd||fffd|A|fffd||fffd||fffd||702||fffd||fffd||fffd||fffd|B"
    Else
        Application.StatusBar = TARGET_NAME & "|fffd||303|N|fffd||fffd||fffd|A|fffd||fffd||fffd|L|fffd||fffd||fffd||fffd||fffd|Z|fffd||fffd||fffd||fffd||fffd||702||fffd||fffd||fffd||fffd|B"
    End If
    
    ' |fffd|}|fffd|~|fffd||fffd||fffd||fffd|
    Call SuppressUpdates(False)

End Sub

Sub ClearReport(control As IRibbonControl)
    On Error Resume Next

    Application.StatusBar = ""

    Const TARGET_NAME = "|fffd||4d413||fffd||fffd||308||fffd||210||fffd|"
    Const message = TARGET_NAME & "|fffd||fffd||fffd||d3dc||fffd||fffd||fffd||702||fffd||fffd|B" & vbCrLf & _
                    "|fffd||fffd||fffd||fffd||fffd||11c4d|s|fffd||fffd||fffd||102||fffd||fffd||fffd||b0b5||fffd||fffd||fffd||142||fffd||fffd||fffd||fffd|H"
    
    If OutMessage(message, vbOKCancel + vbExclamation, "|fffd|`|fffd||fffd|V|fffd|[|fffd|g|fffd|N|fffd||fffd||fffd|A") = vbCancel Then Exit Sub
    ' |fffd||fffd||fffd||fffd||fffd|}|fffd|~
    Call SuppressUpdates(True)
    
    ' |fffd||fffd||fffd||fffd|1:|fffd||4d413||fffd||fffd||308||fffd||210||fffd||fffd|@|fffd||fffd||fffd||fffd|2:|fffd||7cb||fffd||fffd||308||fffd||210||fffd||fffd|@|fffd||fffd||fffd||fffd|3:|fffd|^|fffd|X|fffd|N|fffd||fffd||fffd||fffd||fffd|N|fffd|@|fffd||fffd||fffd||fffd|4:|fffd||fffd||fffd||311||fffd||fffd|}|fffd|`
    ' True:|fffd||d3dc||fffd|@False:|fffd|X|fffd|L|fffd|b|fffd|v
    If RunClearShapes(True, False, False, False) Then
        Application.StatusBar = TARGET_NAME & "|fffd||fffd||fffd||d3dc||fffd||fffd||fffd||702||fffd||fffd||fffd||fffd|B"
    Else
        Application.StatusBar = TARGET_NAME & "|fffd||d3dc||fffd||fffd||fffd||fffd||fffd||fffd||fffd|L|fffd||fffd||fffd||fffd||fffd|Z|fffd||fffd||fffd||fffd||fffd||702||fffd||fffd||fffd||fffd|B"
    End If
    
    ' |fffd|}|fffd|~|fffd||fffd||fffd||fffd|
    Call SuppressUpdates(False)

End Sub

Sub ClearHistory(control As IRibbonControl)
    On Error Resume Next

    Application.StatusBar = ""
    
    Const TARGET_NAME = "|fffd||7cb||fffd||fffd||308||fffd||210||fffd|"
    Const message = TARGET_NAME & "|fffd||fffd||fffd||d3dc||fffd||fffd||fffd||702||fffd||fffd|B" & vbCrLf & _
                  "|fffd||fffd||fffd||fffd||fffd||11c4d|s|fffd||fffd||fffd||102||fffd||fffd||fffd||b0b5||fffd||fffd||fffd||142||fffd||fffd||fffd||fffd|H"
    
    If OutMessage(message, vbOKCancel + vbExclamation, "|fffd|`|fffd||fffd|V|fffd|[|fffd|g|fffd|N|fffd||fffd||fffd|A") = vbCancel Then Exit Sub
    ' |fffd||fffd||fffd||fffd||fffd|}|fffd|~
    Call SuppressUpdates(True)
    
    ' |fffd||fffd||fffd||fffd|1:|fffd||4d413||fffd||fffd||308||fffd||210||fffd||fffd|@|fffd||fffd||fffd||fffd|2:|fffd||7cb||fffd||fffd||308||fffd||210||fffd||fffd|@|fffd||fffd||fffd||fffd|3:|fffd|^|fffd|X|fffd|N|fffd||fffd||fffd||fffd||fffd|N|fffd|@|fffd||fffd||fffd||fffd|4:|fffd||fffd||fffd||311||fffd||fffd|}|fffd|`
    ' True:|fffd||d3dc||fffd|@False:|fffd|X|fffd|L|fffd|b|fffd|v
    If RunClearShapes(False, True, False, False) Then
        Application.StatusBar = TARGET_NAME & "|fffd||fffd||fffd||d3dc||fffd||fffd||fffd||702||fffd||fffd||fffd||fffd|B"
    Else
        Application.StatusBar = TARGET_NAME & "|fffd||d3dc||fffd||fffd||fffd||fffd||fffd||fffd||fffd|L|fffd||fffd||fffd||fffd||fffd|Z|fffd||fffd||fffd||fffd||fffd||702||fffd||fffd||fffd||fffd|B"
    End If
    
    ' |fffd|}|fffd|~|fffd||fffd||fffd||fffd|
    Call SuppressUpdates(False)

End Sub

Sub onClearLinks(control As IRibbonControl)
    On Error Resume Next

    Application.StatusBar = ""
    
    Const message = "|fffd||fffd||fffd||5c2||102||303|^|fffd|X|fffd|N|fffd||fffd||fffd||fffd||fffd|N|fffd||fffd||fffd||d3dc||fffd||fffd||fffd||702||fffd||fffd|B" & vbCrLf & _
                  "|fffd||fffd||fffd||fffd||fffd||11c4d|s|fffd||fffd||fffd||102||fffd||fffd||fffd||b0b5||fffd||fffd||fffd||142||fffd||fffd||fffd||fffd|H"
    If OutMessage(message, vbOKCancel + vbExclamation, "|fffd|`|fffd||fffd|V|fffd|[|fffd|g|fffd|N|fffd||fffd||fffd|A") = vbCancel Then Exit Sub
    ' |fffd||fffd||fffd||fffd||fffd|}|fffd|~
    Call SuppressUpdates(True)
    
    ' |fffd||fffd||fffd||fffd|1:|fffd||4d413||fffd||fffd||308||fffd||210||fffd||fffd|@|fffd||fffd||fffd||fffd|2:|fffd||7cb||fffd||fffd||308||fffd||210||fffd||fffd|@|fffd||fffd||fffd||fffd|3:|fffd|^|fffd|X|fffd|N|fffd||fffd||fffd||fffd||fffd|N|fffd|@|fffd||fffd||fffd||fffd|4:|fffd||fffd||fffd||311||fffd||fffd|}|fffd|`
    ' True:|fffd||d3dc||fffd|@False:|fffd|X|fffd|L|fffd|b|fffd|v
    Const TARGET_NAME = "|fffd|^|fffd|X|fffd|N|fffd||fffd||fffd||fffd||fffd|N"
    If RunClearShapes(False, False, True, False) Then
        Application.StatusBar = TARGET_NAME & "|fffd||fffd||fffd||d3dc||fffd||fffd||fffd||702||fffd||fffd||fffd||fffd|B"
    Else
        Application.StatusBar = TARGET_NAME & "|fffd||d3dc||fffd||fffd||fffd||fffd||fffd||fffd||fffd|L|fffd||fffd||fffd||fffd||fffd|Z|fffd||fffd||fffd||fffd||fffd||702||fffd||fffd||fffd||fffd|B"
    End If
    
    ' |fffd|}|fffd|~|fffd||fffd||fffd||fffd|
    Call SuppressUpdates(False)
    
End Sub

Sub ClearShapes(control As IRibbonControl)
    On Error Resume Next

    Application.StatusBar = ""
    
    Const message = "|fffd||fffd||210||fffd||fffd||183|^|fffd|X|fffd|N|fffd||fffd||fffd||fffd||fffd|N|fffd||20a|O|fffd||310|}|fffd|`|fffd||fffd||fffd||fffd||fffd||5c2||10d||d3dc||fffd||fffd||fffd||702||fffd||fffd|B" & vbCrLf & _
                  "|fffd||fffd||fffd||fffd||fffd||11c4d|s|fffd||fffd||fffd||102||fffd||fffd||fffd||b0b5||fffd||fffd||fffd||142||fffd||fffd||fffd||fffd|H"
    If OutMessage(message, vbOKCancel + vbExclamation, "|fffd|`|fffd||fffd|V|fffd|[|fffd|g|fffd|N|fffd||fffd||fffd|A") = vbCancel Then Exit Sub
    ' |fffd||fffd||fffd||fffd||fffd|}|fffd|~
    Call SuppressUpdates(True)
    
    ' |fffd||fffd||fffd||fffd|1:|fffd||4d413||fffd||fffd||308||fffd||210||fffd||fffd|@|fffd||fffd||fffd||fffd|2:|fffd||7cb||fffd||fffd||308||fffd||210||fffd||fffd|@|fffd||fffd||fffd||fffd|3:|fffd|^|fffd|X|fffd|N|fffd||fffd||fffd||fffd||fffd|N|fffd|@|fffd||fffd||fffd||fffd|4:|fffd||fffd||fffd||311||fffd||fffd|}|fffd|`
    ' True:|fffd||d3dc||fffd|@False:|fffd|X|fffd|L|fffd|b|fffd|v
    Const TARGET_NAME = "|fffd|}|fffd|`"
    If RunClearShapes(False, False, False, True) Then
        Application.StatusBar = "|fffd||fffd||210||fffd||fffd||20a|O|fffd||fffd|" & TARGET_NAME & "|fffd||fffd||fffd||d3dc||fffd||fffd||fffd||702||fffd||fffd||fffd||fffd|B"
    Else
        Application.StatusBar = TARGET_NAME & "|fffd||30d||d3dc||fffd||fffd||fffd||fffd||fffd||fffd||fffd|L|fffd||fffd||fffd||fffd||fffd|Z|fffd||fffd||fffd||fffd||fffd||702||fffd||fffd||fffd||fffd|B"
    End If
    
    ' |fffd|}|fffd|~|fffd||fffd||fffd||fffd|
    Call SuppressUpdates(False)

End Sub

Function RunClearShapes(ByVal aReport As Boolean, ByVal aHistory As Boolean, ByVal aLink As Boolean, ByVal aShapes As Boolean) As Boolean
    On Error Resume Next
    
    Dim shapeName           As String       ' |fffd||fffd||fffd|O|fffd|I|fffd|u|fffd|W|fffd|F|fffd|N|fffd|g|fffd||fffd|
    Dim shapeObject         As Object       ' |fffd|`|fffd||fffd|V|fffd|[|fffd|g|fffd||fffd||fffd|shape|fffd|I|fffd|u|fffd|W|fffd|F|fffd|N|fffd|g
    Dim isDelete            As Boolean      ' |fffd||d3dc||fffd|t|fffd||fffd||fffd|O
    
    ' |fffd||fffd||fffd||fffd||fffd||24f|]|fffd||fffd||fffd|`|fffd||fffd|V|fffd|[|fffd|g|fffd||fffd||310|}|fffd|`|fffd||fffd||fffd||fffd||fffd||5c2||10d||d3dc||fffd||fffd||fffd||fffd|
    For Each shapeObject In ActiveWorkbook.ActiveSheet.Shapes
        
        isDelete = False
        shapeName = shapeObject.Name
        If shapeName = STYLE_REPO Then
            isDelete = aReport
        ElseIf shapeName = STYLE_HIST Then
            isDelete = aHistory
        ElseIf Mid(shapeName, 1, 8) = "TaskLink" Then
            isDelete = aLink
        Else
            isDelete = aShapes
        End If
        
        If isDelete Then shapeObject.Delete
    Next

    RunClearShapes = True

End Function

Attribute VB_Name = "modRibbon"
Option Explicit
Option Private Module
    
Dim rbRibbon        As IRibbonUI    ' |fffd||fffd||fffd|{|fffd||fffd|
Dim rbEnabled       As Boolean      ' |fffd|L|fffd||fffd||fffd|E|fffd||fffd||fffd||fffd|
Dim recentFileCount As Integer      ' dynamicMenu|fffd||fffd|button|fffd||310||fffd||fffd|i|fffd||14b||7ce|g|fffd||fffd||fffd||fffd||fffd|t|fffd|@|fffd|C|fffd||fffd||fffd||310||fffd||fffd|j
Dim rbScheduling    As Boolean
Private on_left_button_click1 As Boolean
Private on_left_button_click2 As Boolean
Private on_left_button_click3 As Boolean

Sub SetLeftButtonValue()

    Dim i                           As Long
    Dim on_left_action_num(1 To 3)  As Boolean
    For i = 1 To 3
        on_left_action_num(i) = False
    Next
    
    Dim left_action_num             As Long
    left_action_num = ThisWorkbook.Worksheets(SHT_DATALIST).Range("L2")
    on_left_action_num(left_action_num) = True
    
    on_left_button_click1 = on_left_action_num(1)
    on_left_button_click2 = on_left_action_num(2)
    on_left_button_click3 = on_left_action_num(3)

End Sub

Sub InitRibbon(ByVal ribbon As IRibbonUI)
    On Error Resume Next
  
    ' |fffd|}|fffd|E|fffd|X|fffd||fffd||fffd|{|fffd|^|fffd||fffd||fffd||752||80c1||fffd|j|fffd||fffd||fffd|[|fffd||303||fffd||fffd|W|fffd|I|fffd|{|fffd|^|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
    Call SetLeftButtonValue

    ' |fffd||fffd||fffd|{|fffd||fffd||fffd||315|\|fffd||fffd||fffd||fffd||fffd|X|fffd|V|fffd||142||fffd||fffd||fffd||60a4||fffd||242||fffd||fffd||90bd||fffd||7c2||243||fffd||fffd|{|fffd||fffd||fffd||fffd||fffd|Z|fffd|b|fffd|g|fffd||fffd||fffd||fffd|
    Set rbRibbon = ribbon
    
    ' |fffd||fffd||fffd||fffd||fffd||64fe||fffd|v|fffd||6c2||30f||fffd||fffd||fffd||fffd|l|fffd||242||fffd||85da||fffd||fffd|`|fffd||fffd|L|fffd||fffd||fffd||fffd||fffd||fffd||fffd||80b7||fffd||fffd|
    With ThisWorkbook.Worksheets(SHT_DATALIST)
        If .Range(GET_HISTORY_CELL) = 1 Then
              rbEnabled = True
        Else
              rbEnabled = False
        End If
        
        ' |fffd||14b||7ce|g|fffd|p|fffd||fffd||fffd||fffd||fffd|t|fffd|@|fffd|C|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||7c2||fffd|
        recentFileCount = .Range("V12").End(xlUp).Row
    End With
    
    ' |fffd||fffd||fffd|{|fffd||fffd||fffd||315|\|fffd||fffd||fffd||fffd||fffd|X|fffd|V|fffd||fffd||fffd||fffd|
    rbRibbon.Invalidate

End Sub

Sub setHistoryChecked(ByVal pressed As Boolean)
    ' [|fffd||fffd||fffd||fffd||fffd||fffd|`|fffd||60b7||fffd||fffd|]|fffd|`|fffd|F|fffd|b|fffd|N|fffd|{|fffd|b|fffd|N|fffd|X|fffd||fffd||fffd|I|fffd||fffd||fffd|^|fffd|I|fffd|t|fffd||602||fffd||582||fffd||fffd||fffd|
    rbEnabled = pressed
    
    ' |fffd||fffd||fffd|{|fffd||fffd||fffd||315|\|fffd||fffd||fffd||fffd||fffd|X|fffd|V|fffd||fffd||fffd||fffd|
    rbRibbon.Invalidate

End Sub

Sub getEnabled(control As IRibbonControl, ByRef returnedVal)
    ' [|fffd||fffd||fffd||fffd||fffd||fffd|`|fffd||60b7||fffd||fffd|]|fffd|`|fffd|F|fffd|b|fffd|N|fffd|{|fffd|b|fffd|N|fffd|X|fffd||317|L|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd||fffd||fffd|
    returnedVal = rbEnabled
End Sub

Sub onRecHistory(control As IRibbonControl, ByRef returnedVal)
    ' |fffd||fffd||fffd||fffd||fffd||64fe||fffd|v|fffd||6c2||249||fffd||fffd||fffd||fffd||117||fffd||fffd||fffd|`|fffd||fffd|`|fffd|F|fffd|b|fffd|N|fffd|{|fffd|b|fffd|N|fffd|X|fffd||fffd|L|fffd||fffd||fffd||fffd||fffd|^|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
    returnedVal = rbEnabled
End Sub

Sub GetContent(control As IRibbonControl, ByRef content)
    content = CreateDynamicMenu()
End Sub

Function CreateDynamicMenu() As String
    Dim rowRecentFile       As Long
    Dim XmlDocument         As Object
    Dim dynamicMenu         As Object
    Dim recentFileButton    As Object
    Dim fullPath            As String
    Dim filePath            As String
    Dim fileName            As String
   
    With ThisWorkbook.Worksheets(SHT_DATALIST)
        .Range("V12").Clear
        recentFileCount = .Range("V12").End(xlUp).Row
        If recentFileCount = 1 Then Exit Function ' 1|fffd|s|fffd||682||343|^|fffd|C|fffd|g|fffd||fffd||fffd|s
    End With
    
    Set XmlDocument = CreateObject("Msxml2.DOMDocument")
    Set dynamicMenu = XmlDocument.CreateElement("menu")
    
    With dynamicMenu
        .SetAttribute "xmlns", "http://schemas.microsoft.com/office/2006/01/customui"
        .SetAttribute "itemSize", "normal"
    End With
    
    ' XML|fffd|`|fffd||fffd||fffd||303||fffd||fffd|j|fffd||fffd||fffd|[|fffd||10d90||fffd||fffd||fffd||fffd||fffd|
    For rowRecentFile = 2 To recentFileCount
        Set recentFileButton = XmlDocument.CreateElement("button")
        
        With recentFileButton
            .SetAttribute "id", "btnRecentFiles" & (rowRecentFile - 1)
            fullPath = ThisWorkbook.Worksheets(SHT_DATALIST).Cells(rowRecentFile, "V").Value
            fileName = Mid(fullPath, InStrRev(fullPath, "\") + 1)
            .SetAttribute "label", fileName
            .SetAttribute "image", "NO" & Format((rowRecentFile - 1), "00")
            .SetAttribute "screentip", fullPath
            .SetAttribute "supertip", fullPath
            .SetAttribute "onAction", "OpenRecentFile"
        End With
        dynamicMenu.AppendChild recentFileButton
        Set recentFileButton = Nothing
    Next

    XmlDocument.AppendChild dynamicMenu
    CreateDynamicMenu = XmlDocument.XML
    
    Set dynamicMenu = Nothing
    Set XmlDocument = Nothing
End Function

Sub OpenRecentFile(control As IRibbonControl)  ' |fffd|{|fffd|^|fffd||fffd||fffd||fffd||fffd|N|fffd||fffd||fffd|b|fffd|N|fffd||fffd||fffd||fffd||fffd||fffd||fffd||241|AdynamicMenu|fffd||30d||fffd||fffd||682||310||752||fffd||fffd||3cd|X|fffd||fffd||fffd||702||fffd|
On Error Resume Next

    Dim fullPath    As String
    Dim filePath    As String
    Dim fileName    As String
    Dim onFileNo    As Long
    Dim fileNo      As Long
  
    Application.StatusBar = ""
    onFileNo = CLng(Replace(control.ID, "btnRecentFiles", "")) + 1
    
    fullPath = ThisWorkbook.Worksheets(SHT_DATALIST).Cells(onFileNo, "V").Value
    fileName = Mid(fullPath, InStrRev(fullPath, "\") + 1)
    filePath = Replace(fullPath, fileName, "")
        
    ' |fffd|t|fffd|@|fffd|C|fffd||fffd||fffd||fffd||fffd||743|`|fffd|F|fffd|b|fffd|N
    If Dir(fullPath) = "" Then
        If MsgBox(fileName & " |fffd||fffd||fffd||fffd||fffd||82||fffd||fffd||fffd||702||fffd||fffd||fffd|B" & vbCrLf & "|fffd|t|fffd|@|fffd|C|fffd||fffd||fffd||fffd||fffd||a5d7||fffd||fffd||fffd||fffd||d3dc||fffd||fffd||fffd||702||fffd||fffd||fffd||fffd|H", _
            vbYesNo + vbExclamation, "|fffd||14b||7ce|g|fffd|p|fffd||fffd||fffd||fffd||fffd|t|fffd|@|fffd|C|fffd||fffd|") = vbYes Then
            Call deleteRecentFile(onFileNo)
        Else
            GoTo OpenRecentFile_exit
        End If
    Else
        ' |fffd|t|fffd|@|fffd|C|fffd||fffd||fffd|I|fffd|[|fffd|v|fffd||fffd||fffd|`|fffd|F|fffd|b|fffd|N
        fileNo = FreeFile
        Open fullPath For Append As fileNo
        Close fileNo
        
        If err.number > 0 Then
            Application.StatusBar = fileName & " |fffd||34a||fffd||fffd||24a|J|fffd||fffd||fffd||102||fffd||fffd||702||fffd||fffd|B"
            Workbooks(fileName).Activate
            Call sortRecentFile(onFileNo)
        Else
            ' |fffd|t|fffd|@|fffd|C|fffd||fffd||fffd|I|fffd|[|fffd|v|fffd||fffd|
            ChDir filePath
            Workbooks.Open fullPath
            If err.number > 0 Then
                MsgBox err.Description
                GoTo OpenRecentFile_exit
            Else
                Call sortRecentFile(onFileNo)
            End If
        End If
    End If
    
    ' |fffd||fffd||fffd|{|fffd||fffd||fffd|X|fffd|V
    rbRibbon.Invalidate
    
OpenRecentFile_exit:
    ' |fffd|e|fffd||fffd||fffd|`|fffd||fffd||fffd||3cd|X|fffd|L|fffd||fffd||fffd|t|fffd||fffd||fffd|O|fffd||fffd|ON|fffd|itrue|fffd|j|fffd||242||fffd||fffd||fffd|
    isSheetUpdate = True
  
End Sub

Sub sortRecentFile(ByVal index As Long)

    ' |fffd|g|fffd|p|fffd||fffd||fffd||fffd||fffd|t|fffd|@|fffd|C|fffd||fffd||fffd||fffd||fffd||fffd||fffd|X|fffd|g|fffd||310||64ea||fffd||248||693||fffd||fffd||fffd||fffd||fffd|
    With ThisWorkbook.Worksheets(SHT_DATALIST)
        If index > 2 Then   ' |fffd||fffd||fffd|X|fffd|g|fffd||310||64ea||fffd|iindex=1|fffd|j|fffd||34d|X|fffd|V|fffd||fffd||fffd||202||fffd|
            .Cells(index, "V").Cut
            .Cells(2, "V").Insert Shift:=xlDown
        End If
    End With

End Sub

Sub deleteRecentFile(ByVal index As Long)
    
    With ThisWorkbook.Worksheets(SHT_DATALIST)
        .Cells(index, "V").Delete Shift:=xlUp
    End With

End Sub

Sub addRecentFile()
    On Error Resume Next
    Dim i           As Long
    Dim indexMax    As Long
    Dim isFind      As Boolean
    Dim recentFile  As String
    
    recentFile = ActiveWorkbook.FullName
    
    With ThisWorkbook.Worksheets(SHT_DATALIST)
        ' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|t|fffd|@|fffd|C|fffd||fffd||fffd||fffd||fffd||14b||7ce|g|fffd|p|fffd||fffd||fffd||fffd||fffd|t|fffd|@|fffd|C|fffd||fffd||fffd||308||a5d7||fffd||251||fffd||fffd||742||fffd||fffd||202||fffd||fffd||fffd||392||1c9||fffd||fffd||fffd||fffd||fffd|
        isFind = False
        indexMax = RECENT_FILE_MAX + 1
        For i = 2 To indexMax
            If .Cells(i, "V") = recentFile Then
                isFind = True
                Exit For
            End If
        Next
        
        If isFind Then
            ' |fffd||a5d7||fffd||251||fffd||fffd||742||fffd||fffd||fffd||fffd||a347||fffd||348||a5d7||fffd||310||64ea||fffd||248||693||fffd||fffd||fffd||fffd||fffd|
            If i > 2 Then
                .Cells(i, "V").Cut
                .Cells(2, "V").Insert Shift:=xlDown
            End If
        Else
            ' |fffd||a5d7||fffd||251||fffd||fffd||742||fffd||fffd||202||fffd||fffd||a347||fffd||348||a5d7||fffd||310||64ea||fffd||252||1c9||fffd||fffd||fffd||fffd||fffd|
            .Cells(2, "V").Insert Shift:=xlDown
            .Cells(2, "V") = recentFile
        End If
        
        ' |fffd||151||5414||fffd||12d02||fffd||fffd||fffd||fffd|t|fffd|@|fffd|C|fffd||fffd||fffd||348||a5d7||fffd||fffd||fffd||fffd||d3dc||fffd||fffd||fffd||fffd|
        .Cells(indexMax + 1, "V").Clear
    End With
    
    ' |fffd||fffd||fffd|{|fffd||fffd||fffd|X|fffd|V
    rbRibbon.Invalidate

    ' |fffd|e|fffd||fffd||fffd|`|fffd||fffd||fffd||3cd|X|fffd|L|fffd||fffd||fffd|t|fffd||fffd||fffd|O|fffd||fffd|ON|fffd|itrue|fffd|j|fffd||242||fffd||fffd||fffd|
    isSheetUpdate = True

End Sub

Sub exportConfig(control As IRibbonControl)
On Error Resume Next
    
    Const CONFIG_NAME = "PLconfig.cfg"
    Dim fileNo      As Integer
    Dim i           As Long
    Dim RGB         As Long
    Dim config      As String
    Dim datFile     As String
    Dim filePath    As String
    Dim fullPath    As String
    Dim shtDataList As Worksheet
    
    Application.StatusBar = ""
    
    ' |fffd|R|fffd||fffd||fffd|t|fffd|B|fffd|O|fffd|t|fffd|@|fffd|C|fffd||fffd||fffd||30f|o|fffd||350||fffd|t|fffd|H|fffd||fffd||fffd|_|fffd||fffd||fffd||64fe||fffd||fffd||fffd||fffd|
    With Application.FileDialog(msoFileDialogFolderPicker)
        If .Show = True Then
            filePath = .SelectedItems(1)
            fullPath = filePath & "\" & CONFIG_NAME
        Else
            Exit Sub
        End If
    End With
    
    fileNo = FreeFile
    config = fullPath
    
    ' |fffd|t|fffd|@|fffd|C|fffd||fffd||fffd|I|fffd|[|fffd|v|fffd||fffd||fffd|`|fffd|F|fffd|b|fffd|N
    Open fullPath For Append As fileNo
    Close fileNo
    
    If err.number > 0 Then
        MsgBox CONFIG_NAME & " |fffd||fffd||fffd|J|fffd||fffd||fffd||fffd||102||fffd||fffd||702||fffd||fffd|B" & vbCrLf & "|fffd|t|fffd|@|fffd|C|fffd||fffd||fffd||fffd||82||fffd||fffd||10d||113|x|fffd||fffd||fffd|s|fffd||fffd||fffd||102||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|B", vbOKOnly, "|fffd|R|fffd||fffd||fffd|t|fffd|B|fffd|O|fffd|o|fffd||fffd|"
        Exit Sub
    End If
    
    ' Worksheet|fffd||30e|Q|fffd||190||752||fffd||fffd||fffd|s|fffd||fffd|
    Set shtDataList = ThisWorkbook.Worksheets(SHT_DATALIST)
    
    Open config For Output As #fileNo
     
    ' |fffd||4d413||fffd||fffd||308||fffd||210||fffd||fffd|X|fffd|^|fffd|C|fffd||fffd||fffd||752||fffd|
    With shtDataList.Shapes("Report").Line
        Print #fileNo, "# |fffd||4d413||fffd||fffd||fffd||fffd||310|F"
        RGB = .ForeColor.RGB
        Print #fileNo, RGB
        
        Print #fileNo, "# |fffd||4d413||fffd||fffd||fffd||fffd||315||fffd|"
        Print #fileNo, CSng(.Weight)
         
        Print #fileNo, "# |fffd||4d413||fffd||fffd||fffd||fffd||303|X|fffd|^|fffd|C|fffd||fffd|"
        Print #fileNo, .dashstyle
    End With
    
    With shtDataList
        Print #fileNo, "# |fffd||4d413||fffd||fffd||fffd||fffd||310|F|fffd|^|fffd|C|fffd|g|fffd||fffd|"
        Print #fileNo, .Range("C2").Value
        
        Print #fileNo, "# |fffd||4d413||fffd||fffd||fffd||fffd||310||fffd|[|fffd||30e||fffd||fffd|"
        Print #fileNo, .Range("A2").Value
         
        Print #fileNo, "# |fffd||4d413||fffd||fffd||fffd||fffd||310||fffd|[|fffd||311||50ab||fffd||fffd|"
        Print #fileNo, .Range("B2").Value
    End With
         
    ' |fffd||fffd||fffd||fffd||fffd||308||fffd||210||fffd||fffd|X|fffd|^|fffd|C|fffd||fffd||fffd||752||fffd|
    With shtDataList.Shapes("History").Line
        Print #fileNo, "# |fffd||fffd||fffd||fffd||fffd||fffd||310|F"
        RGB = .ForeColor.RGB
        Print #fileNo, RGB
        
        Print #fileNo, "# |fffd||fffd||fffd||fffd||fffd||fffd||315||fffd|"
        Print #fileNo, CSng(.Weight)
         
        Print #fileNo, "# |fffd||fffd||fffd||fffd||fffd||fffd||303|X|fffd|^|fffd|C|fffd||fffd|"
        Print #fileNo, .dashstyle
    End With
    
    With shtDataList
        Print #fileNo, "# |fffd||fffd||fffd||fffd||fffd||fffd||310|F|fffd|^|fffd|C|fffd|g|fffd||fffd|"
        Print #fileNo, .Range("F2").Value
        
        Print #fileNo, "# |fffd||fffd||fffd||fffd||fffd||fffd||310||fffd|[|fffd||30e||fffd||fffd|"
        Print #fileNo, .Range("D2").Value
         
        Print #fileNo, "# |fffd||fffd||fffd||fffd||fffd||fffd||310||fffd|[|fffd||311||50ab||fffd||fffd|"
        Print #fileNo, .Range("E2").Value
    End With
    
    ' |fffd|^|fffd|X|fffd|N|fffd||fffd||fffd||fffd||fffd|N|fffd||303|X|fffd|^|fffd|C|fffd||fffd||fffd||752||fffd|
    With shtDataList.Shapes("TaskLink").Line
        Print #fileNo, "# |fffd|^|fffd|X|fffd|N|fffd||fffd||fffd||fffd||fffd|N|fffd||fffd||fffd||310|F"
        RGB = .ForeColor.RGB
        Print #fileNo, RGB
        
        Print #fileNo, "# |fffd|^|fffd|X|fffd|N|fffd||fffd||fffd||fffd||fffd|N|fffd||fffd||fffd||303|X|fffd|^|fffd|C|fffd||fffd|"
        Print #fileNo, .dashstyle
        
        Print #fileNo, "# |fffd|n|fffd|_|fffd||303|X|fffd|^|fffd|C|fffd||fffd|"
        Print #fileNo, CSng(.BeginArrowheadStyle)
        
        Print #fileNo, "# |fffd|I|fffd|_|fffd||303|X|fffd|^|fffd|C|fffd||fffd|"
        Print #fileNo, CSng(.EndArrowheadStyle)
        
        Print #fileNo, "# |fffd||fffd||fffd||312||fffd||fffd||fffd|"
        Print #fileNo, CSng(.BeginArrowheadLength)
        
        Print #fileNo, "# |fffd||fffd||fffd||315||fffd|"
        Print #fileNo, CSng(.EndArrowheadWidth)
    End With
    
    With shtDataList
        Print #fileNo, "# |fffd||4d413||fffd||fffd||fffd||fffd||310|F|fffd|^|fffd|C|fffd|g|fffd||fffd|"
        Print #fileNo, .Range("C2").Value
        
        Print #fileNo, "# |fffd||4d413||fffd||fffd||fffd||fffd||310||fffd|[|fffd||30e||fffd||fffd|"
        Print #fileNo, .Range("A2").Value
         
        Print #fileNo, "# |fffd||4d413||fffd||fffd||fffd||fffd||310||fffd|[|fffd||311||50ab||fffd||fffd|"
        Print #fileNo, .Range("B2").Value
    End With

    
    ' |fffd||fffd||fffd|{|fffd||fffd||fffd||310||752||fffd|
    With shtDataList
        Print #fileNo, "# |fffd|o|fffd|H|fffd|Q|fffd||fffd|"
        Print #fileNo, .Range("M2").Value
        
        Print #fileNo, "# |fffd||fffd||493||fffd||fffd||fffd||fffd||fffd||fffd||fffd|"
        Print #fileNo, .Range("H2").Value
         
        Print #fileNo, "# |fffd||fffd||fffd||fffd|{|fffd||fffd|"
        Print #fileNo, .Range("I2").Value
         
        Print #fileNo, "# |fffd||fffd||fffd||fffd|\|fffd||fffd|"
        Print #fileNo, .Range("J2").Value
         
        Print #fileNo, "# |fffd|x|fffd||fffd||fffd|i|fffd|j|fffd||fffd||fffd|j"
        i = 0
        Do While .Range("K2").OFFSET(i) <> ""
            Print #fileNo, .Range("K2").OFFSET(i).Value
            i = i + 1
        Loop
         
        Print #fileNo, "# |fffd|}|fffd|E|fffd|X|fffd||fffd|"
        Print #fileNo, UCase(.Range("L2").Value)
         
        Print #fileNo, "# |fffd||fffd||fffd|[|fffd|U|fffd||752||fffd|"
        i = 0
        Do While .Range("N2").OFFSET(i) <> ""
            Print #fileNo, Format(.Range("N2").OFFSET(i).Value, DATE_FORM)
            i = i + 1
        Loop
         
        Print #fileNo, "# |fffd||fffd||fffd||fffd||fffd||64fe|"
        Print #fileNo, .Range("P2").Value
         
        Print #fileNo, "# |fffd||fffd||fffd||fffd|`|fffd||fffd|j|fffd||fffd|"
        i = 0
        Do While .Range("Q2").OFFSET(i) <> ""
            Print #fileNo, .Range("Q2").OFFSET(i).Value
            i = i + 1
        Loop
         
        Print #fileNo, "# |fffd|`|fffd||fffd|O|fffd||fffd||fffd||fffd|"
        i = 0
        Do While .Range("R2").OFFSET(i) <> ""
            Print #fileNo, .Range("R2").OFFSET(i).Value
            i = i + 1
        Loop
         
        Print #fileNo, "# EXCEL"
        i = 0
        Do While .Range("S2").OFFSET(i) <> ""
            Print #fileNo, UCase(.Range("S2").OFFSET(i).Value)
            i = i + 1
        Loop
         
        Print #fileNo, "# |fffd|N|fffd||fffd|"
        Print #fileNo, Format(.Range("T2").Value, "mm|fffd||fffd|dd|fffd||fffd|")
         
        Print #fileNo, "# |fffd|N|fffd|n"
        Print #fileNo, Format(.Range("U2").Value, "mm|fffd||fffd|dd|fffd||fffd|")
         
        Print #fileNo, "# |fffd||14b||7ce|g|fffd|p|fffd||fffd||fffd||fffd||fffd|t|fffd|@|fffd|C|fffd||fffd|"
        i = 0
        Do While .Range("V2").OFFSET(i) <> ""
            Print #fileNo, .Range("V2").OFFSET(i).Value
            i = i + 1
        Loop
    End With
    
    Close #fileNo
    Set shtDataList = Nothing
    Application.StatusBar = "|fffd|G|fffd|N|fffd|X|fffd|||fffd|[|fffd|g|fffd|F" & fullPath
 
End Sub

Sub importConfig(control As IRibbonControl)
On Error GoTo importConfig_Error:

    Dim fileNo      As Integer
    Dim i           As Long
    Dim RGB         As Long
    Dim config      As String
    Dim datFile     As String
    Dim filePath    As String
    Dim cfgRecord   As String
    Dim message     As String
    Dim isNextRec   As Boolean
    Dim fullPath    As Variant
    Dim shtDataList As Worksheet
    
    Application.StatusBar = ""
    fullPath = Application.GetOpenFilename("|fffd|R|fffd||fffd||fffd|t|fffd|B|fffd|O|fffd|t|fffd|@|fffd|C|fffd||fffd| (*.cfg), *.txt")

    If VarType(fullPath) = vbBoolean Then
        Application.StatusBar = "|fffd|C|fffd||fffd||fffd|||fffd|[|fffd|g|fffd||fffd||fffd||fffd||fffd||343|L|fffd||fffd||fffd||fffd||fffd|Z|fffd||fffd||fffd||fffd||fffd||fffd||702||fffd||fffd||fffd||fffd|B"
        Exit Sub
    End If
    
    Application.ScreenUpdating = False
    fileNo = FreeFile
    config = fullPath
    
    ' Worksheet|fffd||30e|Q|fffd||190||752||fffd||fffd||fffd|s|fffd||fffd|
    Set shtDataList = ThisWorkbook.Worksheets(SHT_DATALIST)
    
    Open config For Input As #fileNo
        
    With shtDataList
        Do While Not EOF(fileNo)
            If Not isNextRec Then cfgRecord = ReadConfig(fileNo)
            isNextRec = False
            Select Case cfgRecord
                Case "# |fffd||4d413||fffd||fffd||fffd||fffd||310|F"
                    cfgRecord = ReadConfig(fileNo)
                    If IsNumeric(cfgRecord) Then
                        .Shapes("Report").Line.ForeColor.RGB = CLng(cfgRecord)
                    End If
                Case "# |fffd||4d413||fffd||fffd||fffd||fffd||315||fffd|"
                    cfgRecord = ReadConfig(fileNo)
                    If IsNumeric(cfgRecord) Then
                        .Shapes("Report").Line.Weight = CSng(cfgRecord)
                    End If
                Case "# |fffd||4d413||fffd||fffd||fffd||fffd||303|X|fffd|^|fffd|C|fffd||fffd|"
                    cfgRecord = ReadConfig(fileNo)
                    If IsNumeric(cfgRecord) Then
                        .Shapes("Report").Line.dashstyle = CLng(cfgRecord)
                    End If
                Case "# |fffd||4d413||fffd||fffd||fffd||fffd||310|F|fffd|^|fffd|C|fffd|g|fffd||fffd|"
                    cfgRecord = ReadConfig(fileNo)
                    If cfgRecord <> "EOF" Then
                        If Len(cfgRecord) > 0 Then
                            .Range("C2").Value = Mid(cfgRecord, 1)
                        End If
                    End If
                Case "# |fffd||4d413||fffd||fffd||fffd||fffd||310||fffd|[|fffd||30e||fffd||fffd|"
                    cfgRecord = ReadConfig(fileNo)
                    If IsNumeric(cfgRecord) Then
                        If CLng(cfgRecord) >= 1 & CLng(cfgRecord) <= 3 Then
                            .Range("A2").Value = Mid(Trim(cfgRecord), 1)
                        End If
                    End If
                Case "# |fffd||4d413||fffd||fffd||fffd||fffd||310||fffd|[|fffd||311||50ab||fffd||fffd|"
                    cfgRecord = ReadConfig(fileNo)
                    If IsNumeric(cfgRecord) Then
                        If CLng(cfgRecord) >= 1 & CLng(cfgRecord) <= 3 Then
                            .Range("B2").Value = Mid(Trim(cfgRecord), 1)
                        End If
                    End If
                Case "# |fffd||fffd||fffd||fffd||fffd||fffd||310|F"
                    cfgRecord = ReadConfig(fileNo)
                    If IsNumeric(cfgRecord) Then
                        .Shapes("History").Line.ForeColor.RGB = CLng(cfgRecord)
                    End If
                Case "# |fffd||fffd||fffd||fffd||fffd||fffd||315||fffd|"
                    cfgRecord = ReadConfig(fileNo)
                    If IsNumeric(cfgRecord) Then
                        .Shapes("History").Line.Weight = CSng(cfgRecord)
                    End If
                Case "# |fffd||fffd||fffd||fffd||fffd||fffd||303|X|fffd|^|fffd|C|fffd||fffd|"
                    cfgRecord = ReadConfig(fileNo)
                    If IsNumeric(cfgRecord) Then
                        .Shapes("History").Line.dashstyle = CLng(cfgRecord)
                    End If
                Case "# |fffd||fffd||fffd||fffd||fffd||fffd||310|F|fffd|^|fffd|C|fffd|g|fffd||fffd|"
                    cfgRecord = ReadConfig(fileNo)
                    If cfgRecord <> "EOF" Then
                        If Len(cfgRecord) > 0 Then
                            .Range("F2").Value = Mid(cfgRecord, 1)
                        End If
                    End If
                Case "# |fffd||fffd||fffd||fffd||fffd||fffd||310||fffd|[|fffd||30e||fffd||fffd|"
                    cfgRecord = ReadConfig(fileNo)
                    If IsNumeric(cfgRecord) Then
                        If CLng(cfgRecord) >= 1 & CLng(cfgRecord) <= 3 Then
                            .Range("D2").Value = Mid(Trim(cfgRecord), 1)
                        End If
                    End If
                Case "# |fffd||fffd||fffd||fffd||fffd||fffd||310||fffd|[|fffd||311||50ab||fffd||fffd|"
                    cfgRecord = ReadConfig(fileNo)
                    If IsNumeric(cfgRecord) Then
                        If CLng(cfgRecord) >= 1 & CLng(cfgRecord) <= 3 Then
                            .Range("E2").Value = Mid(Trim(cfgRecord), 1)
                        End If
                    End If
                
                Case "# |fffd|^|fffd|X|fffd|N|fffd||fffd||fffd||fffd||fffd|N|fffd||fffd||fffd||310|F"
                    cfgRecord = ReadConfig(fileNo)
                    If IsNumeric(cfgRecord) Then
                        .Shapes("TaskLink").Line.ForeColor.RGB = CLng(cfgRecord)
                    End If
                Case "# |fffd|^|fffd|X|fffd|N|fffd||fffd||fffd||fffd||fffd|N|fffd||fffd||fffd||303|X|fffd|^|fffd|C|fffd||fffd|"
                    cfgRecord = ReadConfig(fileNo)
                    If IsNumeric(cfgRecord) Then
                        .Shapes("TaskLink").Line.dashstyle = CLng(cfgRecord)
                    End If
                Case "# |fffd|n|fffd|_|fffd||303|X|fffd|^|fffd|C|fffd||fffd|"
                    cfgRecord = ReadConfig(fileNo)
                    If IsNumeric(cfgRecord) Then
                        .Shapes("TaskLink").Line.BeginArrowheadStyle = CLng(cfgRecord)
                    End If
                Case "# |fffd|I|fffd|_|fffd||303|X|fffd|^|fffd|C|fffd||fffd|"
                    cfgRecord = ReadConfig(fileNo)
                    If IsNumeric(cfgRecord) Then
                        .Shapes("TaskLink").Line.EndArrowheadStyle = CLng(cfgRecord)
                    End If
                Case "# |fffd||fffd||fffd||312||fffd||fffd||fffd|"
                    cfgRecord = ReadConfig(fileNo)
                    If IsNumeric(cfgRecord) Then
                        .Shapes("TaskLink").Line.EndArrowheadLength = CLng(cfgRecord)
                    End If
                Case "# |fffd||fffd||fffd||315||fffd|"
                    cfgRecord = ReadConfig(fileNo)
                    If IsNumeric(cfgRecord) Then
                        .Shapes("TaskLink").Line.EndArrowheadWidth = CLng(cfgRecord)
                    End If
                
                Case "# |fffd|o|fffd|H|fffd|Q|fffd||fffd|"
                    cfgRecord = ReadConfig(fileNo)
                    If IsNumeric(cfgRecord) Then
                        If CLng(cfgRecord) >= 0 & CLng(cfgRecord) <= 1 Then
                            .Range("M2").Value = Mid(Trim(cfgRecord), 1)
                        End If
                    End If
                
                Case "# |fffd||fffd||493||fffd||fffd||fffd||fffd||fffd||fffd||fffd|"
                    cfgRecord = ReadConfig(fileNo)
                    If IsNumeric(cfgRecord) Then
                        If CLng(cfgRecord) >= 0 & CLng(cfgRecord) <= 1 Then
                            .Range("H2").Value = Mid(Trim(cfgRecord), 1)
                        End If
                    End If
                Case "# |fffd||fffd||fffd||fffd|{|fffd||fffd|"
                    cfgRecord = ReadConfig(fileNo)
                    If IsNumeric(cfgRecord) Then
                        If CLng(cfgRecord) >= 1 & CLng(cfgRecord) <= 999 Then
                            .Range("I2").Value = CLng(cfgRecord)
                        End If
                    End If
                Case "# |fffd||fffd||fffd||fffd|\|fffd||fffd|"
                    cfgRecord = ReadConfig(fileNo)
                    If cfgRecord <> "EOF" Then
                        If IsNumeric(cfgRecord) Then
                            If CLng(cfgRecord) >= 0 & CLng(cfgRecord) <= 1 Then
                                .Range("J2").Value = cfgRecord
                            End If
                        End If
                    End If
                Case "# |fffd|x|fffd||fffd||fffd|i|fffd|j|fffd||fffd||fffd|j"
                    cfgRecord = ReadConfig(fileNo)
                    If cfgRecord <> "EOF" Then
                        i = 0
                        Do While UCase(cfgRecord) = "TRUE" Or UCase(cfgRecord) = "FALSE"
                            .Range("K2").OFFSET(i).Value = UCase(cfgRecord)
                            cfgRecord = ReadConfig(fileNo)
                            i = i + 1
                        Loop
                        isNextRec = True
                    End If
                Case "# |fffd|}|fffd|E|fffd|X|fffd||fffd|"
                    cfgRecord = ReadConfig(fileNo)
                    If cfgRecord <> "EOF" Then
                        If IsNumeric(cfgRecord) Then
                            If CLng(cfgRecord) >= 1 & CLng(cfgRecord) <= 4 Then
                                .Range("L2").Value = Mid(Trim(cfgRecord), 1)
                                Call SetLeftButtonValue
                            End If
                        End If
                    End If
                Case "# |fffd||fffd||fffd|[|fffd|U|fffd||752||fffd|"
                    cfgRecord = ReadConfig(fileNo)
                    If cfgRecord <> "EOF" Then
                        i = 0
                        Do While Mid(cfgRecord, 1, 1) <> "#" And cfgRecord <> "EOF"
                            If IsDate(cfgRecord) Then
                                .Range("N2").OFFSET(i).Value = Format(cfgRecord, DATE_FORM)
                            End If
                            cfgRecord = ReadConfig(fileNo)
                            i = i + 1
                        Loop
                        isNextRec = True
                    End If
                Case "# |fffd||fffd||fffd||fffd||fffd||64fe|"
                    cfgRecord = ReadConfig(fileNo)
                    If cfgRecord <> "EOF" Then
                        If IsNumeric(cfgRecord) Then
                            If CLng(cfgRecord) >= 0 & CLng(cfgRecord) <= 1 Then
                                .Range("P2").Value = cfgRecord
                                If cfgRecord = 1 Then
                                    Call setHistoryChecked(True)
                                Else
                                    Call setHistoryChecked(False)
                                End If
                            End If
                        End If
                    End If
                Case "# |fffd||fffd||fffd||fffd|`|fffd||fffd|j|fffd||fffd|"
                    cfgRecord = ReadConfig(fileNo)
                    If cfgRecord <> "EOF" Then
                        i = 0
                        Do While UCase(cfgRecord) = "TRUE" Or UCase(cfgRecord) = "FALSE"
                            .Range("Q2").OFFSET(i).Value = UCase(cfgRecord)
                            cfgRecord = ReadConfig(fileNo)
                            i = i + 1
                        Loop
                        isNextRec = True
                    End If
                Case "# |fffd|`|fffd||fffd|O|fffd||fffd||fffd||fffd|"
                    cfgRecord = ReadConfig(fileNo)
                    If cfgRecord <> "EOF" Then
                        i = 0
                        Do While UCase(cfgRecord) = "TRUE" Or UCase(cfgRecord) = "FALSE"
                            .Range("R2").OFFSET(i).Value = UCase(cfgRecord)
                            cfgRecord = ReadConfig(fileNo)
                            i = i + 1
                        Loop
                        isNextRec = True
                    End If
                Case "# EXCEL"
                    cfgRecord = ReadConfig(fileNo)
                    If cfgRecord <> "EOF" Then
                        i = 0
                        Do While UCase(cfgRecord) = "TRUE" Or UCase(cfgRecord) = "FALSE"
                            .Range("S2").OFFSET(i).Value = UCase(cfgRecord)
                            cfgRecord = ReadConfig(fileNo)
                            i = i + 1
                        Loop
                        isNextRec = True
                    End If
                Case "# |fffd|N|fffd||fffd|"
                    cfgRecord = ReadConfig(fileNo)
                    If cfgRecord <> "EOF" And IsDate(cfgRecord) Then
                        .Range("T2").Value = Format(cfgRecord, DATE_FORM)
                    End If
                Case "# |fffd|N|fffd|n"
                    cfgRecord = ReadConfig(fileNo)
                    If cfgRecord <> "EOF" And IsDate(cfgRecord) Then
                        .Range("U2").Value = Format(cfgRecord, DATE_FORM)
                    End If
                Case "# |fffd||14b||7ce|g|fffd|p|fffd||fffd||fffd||fffd||fffd|t|fffd|@|fffd|C|fffd||fffd|"
                    
                    cfgRecord = ReadConfig(fileNo)
                    i = 0
                    Do While Mid(cfgRecord, 1, 1) <> "#" And cfgRecord <> "EOF"
                         .Range("V2").OFFSET(i).Value = cfgRecord
                        cfgRecord = ReadConfig(fileNo)
                        i = i + 1
                    Loop
            End Select
        
        Loop
    End With
    
    message = "|fffd|A|fffd|h|fffd|C|fffd||fffd||fffd||fffd|`|fffd||350||fffd||fffd||fffd||243|C|fffd||fffd||fffd|||fffd|[|fffd|g|fffd||fffd||fffd||fffd||702||fffd||fffd||fffd||fffd|B"
    GoTo importConfig_Exit
    
importConfig_Error:
    message = "|fffd|A|fffd|h|fffd|C|fffd||fffd||fffd||fffd|`|fffd||350||fffd||fffd||fffd||243|C|fffd||fffd||fffd|||fffd|[|fffd|g|fffd||142||fffd||fffd||702||fffd||fffd||fffd||142||fffd||fffd||fffd||fffd|B"
    err.Clear

importConfig_Exit:
    Close #fileNo
    Set shtDataList = Nothing
    
    ' |fffd||fffd||fffd|{|fffd||fffd||fffd|X|fffd|V
    rbRibbon.Invalidate
    
    ' |fffd|e|fffd||fffd||fffd|`|fffd||fffd||fffd||3cd|X|fffd|L|fffd||fffd||fffd|t|fffd||fffd||fffd|O|fffd||fffd|ON|fffd|itrue|fffd|j|fffd||242||fffd||fffd||fffd|
    isSheetUpdate = True
 
    Application.StatusBar = message
    Application.ScreenUpdating = True
 
End Sub

Function ReadConfig(ByVal fileNo As Integer) As String

    Dim cfgRecord   As String
    Dim isExist     As Boolean
    
    ' |fffd|t|fffd|@|fffd|C|fffd||fffd||fffd||fffd||1c2||74d||fffd||fffd||fffd|
    isExist = False
    If EOF(fileNo) Then
        cfgRecord = "EOF"
    Else
        Do While Not isExist
            Line Input #fileNo, cfgRecord
            ' |fffd||d448d|s|fffd|i|fffd||fffd||fffd|R|fffd|[|fffd|h|fffd||fffd||fffd||fffd||fffd|O|fffd|j|fffd||fffd||1c2||754||fffd||382||fffd|
            cfgRecord = Trim(cfgRecord)
            If Len(cfgRecord) > 0 Then
                isExist = True
            End If
        Loop
    End If
    
    ReadConfig = cfgRecord

End Function

Sub OnSchedulingRepeat(control As IRibbonControl)
    Dim onExit  As Boolean
    
    ' ESC|fffd||242||fffd||9284||fffd||835e||fffd||742||fffd|}|fffd|~|fffd||fffd||fffd||fffd|
    Application.EnableCancelKey = xlDisabled
    
    ' |fffd|X|fffd|P|fffd|W|fffd||fffd||fffd|[|fffd||fffd||fffd||fffd||fffd|O|fffd||fffd||fffd|[|fffd|h|fffd||30c|J|fffd||fffd||502||fffd|
    Do Until onExit
        onExit = SetSchedule(ActiveSheet, True)
        DoEvents
    Loop
    
    ' ESC|fffd||242||fffd||9284||fffd||835e||fffd||742||fffd||fffd||fffd||fffd||82||fffd||fffd||fffd|
    Application.EnableCancelKey = xlInterrupt
    
End Sub

Sub onDoubleClick(control As IRibbonControl, ByRef returnValue)
    
    ThisWorkbook.Worksheets(SHT_DATALIST).Range("L2").Value = returnValue
    ' |fffd|e|fffd||fffd||fffd|`|fffd||fffd||fffd||3cd|X|fffd|L|fffd||fffd||fffd|t|fffd||fffd||fffd|O|fffd||fffd|ON|fffd|itrue|fffd|j|fffd||242||fffd||fffd||fffd|
    isSheetUpdate = True
    
End Sub

Public Sub OnScheduling(control As IRibbonControl)

    Dim onExit  As Boolean
    
    onExit = SetSchedule(ActiveSheet, False)

End Sub

Sub RefreshRibbon()

    ' |fffd||fffd||fffd|{|fffd||fffd||fffd||fffd||fffd||115|`|fffd||60b7||fffd||fffd|
    rbRibbon.Invalidate
End Sub

Public Sub OnLink(control As IRibbonControl)

    Call OnDrawTaskLink

End Sub

Sub OnLinkRepeat(control As IRibbonControl)

    ' |fffd|^|fffd|X|fffd|N|fffd||fffd||fffd||fffd||fffd|N|fffd|`|fffd||fffd||fffd||fffd|J|fffd||fffd||502||fffd|
    Call DrawLinkRepeat(0)
    
End Sub

Sub onRefreshLink(control As IRibbonControl)

    ' |fffd|A|fffd|N|fffd|e|fffd|B|fffd|u|fffd|Z|fffd||fffd||fffd||fffd||6ce||fffd||fffd||fffd||fffd||102||fffd||fffd||fffd|
    Dim save_range  As Range
    Set save_range = ActiveCell
    
    ' |fffd|A|fffd|N|fffd|e|fffd|B|fffd|u|fffd|V|fffd|[|fffd|g|fffd||303|^|fffd|X|fffd|N|fffd||fffd||fffd||fffd||fffd|N|fffd||fffd||fffd||115|`|fffd||60b7||fffd||fffd|
    Call RefreshLink(ActiveSheet)
        
    ' |fffd|A|fffd|N|fffd|e|fffd|B|fffd|u|fffd|Z|fffd||fffd||fffd||fffd|I|fffd||fffd||fffd||fffd||fffd||fffd|
    save_range.Select

End Sub

Sub onUnLink(control As IRibbonControl)

    Application.StatusBar = ""
    Application.ScreenUpdating = False
    
    ' |fffd|^|fffd|X|fffd|N|fffd||fffd||fffd||fffd||fffd|N|fffd||309||fffd||fffd||fffd||fffd||94||6c2||fffd||fffd|m|fffd|F|fffd||fffd||fffd||fffd|
    If IsUnLink(True) Then Call UnLinks(ActiveSheet.Name)

    Application.StatusBar = "|fffd|^|fffd|X|fffd|N|fffd||fffd||fffd||fffd||fffd|N|fffd||fffd||fffd||fffd||fffd||5c2||109||fffd||fffd||fffd||fffd||fffd||fffd||702||fffd||fffd||fffd||fffd|B"
    Application.ScreenUpdating = True

End Sub

Sub DrawLinkRepeat(ByVal Kind As Long)
    
    Dim onExit  As Boolean
    
    ' ESC|fffd||242||fffd||9284||fffd||835e||fffd||742||fffd|}|fffd|~|fffd||fffd||fffd||fffd|
    Application.EnableCancelKey = xlDisabled
    
    ' |fffd|^|fffd|X|fffd|N|fffd||fffd||fffd||fffd||fffd|N|fffd||30c|J|fffd||fffd||502||fffd|
    Do Until onExit
        onExit = shapeLine(ActiveSheet, Kind)
        DoEvents
    Loop
    
    ' ESC|fffd||242||fffd||9284||fffd||835e||fffd||742||fffd||fffd||fffd||fffd||82||fffd||fffd||fffd|
    Application.EnableCancelKey = xlInterrupt

End Sub

Sub LeftButtonClickButton_Click(control As IRibbonControl)
  on_left_button_click1 = False
  on_left_button_click2 = False
  on_left_button_click3 = False

  Select Case control.ID
    Case "LeftButtonClick1"
      on_left_button_click1 = True
    Case "LeftButtonClick2"
      on_left_button_click2 = True
    Case "LeftButtonClick3"
      on_left_button_click3 = True
  End Select
  ThisWorkbook.Worksheets(SHT_DATALIST).Range("L2") = Mid(control.ID, Len(control.ID))
  rbRibbon.Invalidate
End Sub

Sub GetRadioButtonImage(control As IRibbonControl, ByRef image)
  Select Case control.ID
    Case "LeftButtonClick1"
      If on_left_button_click1 Then
         Set image = frmImageBase.RadioOn.Picture
      Else
         Set image = frmImageBase.RadioOff.Picture
      End If
    Case "LeftButtonClick2"
      If on_left_button_click2 Then
         Set image = frmImageBase.RadioOn.Picture
      Else
         Set image = frmImageBase.RadioOff.Picture
      End If
    Case "LeftButtonClick3"
      If on_left_button_click3 Then
         Set image = frmImageBase.RadioOn.Picture
      Else
         Set image = frmImageBase.RadioOff.Picture
      End If
  End Select
  
End Sub

Sub onReferToRoute(control As IRibbonControl, pressed As Boolean)

    ' checkBox|fffd|v|fffd|f|fffd||fffd|ON(true)|fffd|EOFF(false)|fffd||fffd||fffd|f|fffd|[|fffd|^|fffd|V|fffd|[|fffd|g|fffd||250||752||80b7||fffd||fffd|
    With ThisWorkbook.Worksheets(SHT_DATALIST)
        If pressed Then
            .Range("M2") = 1
        Else
            .Range("M2") = 0
        End If
    End With
    
    ' |fffd|e|fffd||fffd||fffd|`|fffd||fffd||fffd||3cd|X|fffd|L|fffd||fffd||fffd|t|fffd||fffd||fffd|O|fffd||fffd|ON|fffd|itrue|fffd|j|fffd||242||fffd||fffd||fffd|
    isSheetUpdate = True
End Sub

Public Sub ReferToRoute(control As IRibbonControl, ByRef returnedVal)

    'checkBox|fffd|v|fffd|f|fffd||fffd|ON(true)|fffd|EOFF(false)|fffd||fffd||752||fffd|
    If ThisWorkbook.Worksheets(SHT_DATALIST).Range("M2") = 1 Then
          returnedVal = True
    Else
          returnedVal = False
    End If

End Sub

Sub onLinkStyle(control As IRibbonControl)
    ' |fffd|^|fffd|X|fffd|N|fffd||fffd||fffd||fffd||fffd|N|fffd||303|X|fffd|^|fffd|C|fffd||fffd||fffd||752||fffd|_|fffd|C|fffd|A|fffd||fffd||fffd|O|fffd||fffd|\|fffd||fffd||fffd||fffd||fffd||fffd|
    frmLinkStyle.Show

End Sub
Attribute VB_Name = "modScheduling"
Option Explicit
Option Private Module

Private Type POINTAPI
    x   As Long
    y   As Long
End Type

Private Type tCANVAS
    prj_period          As Range    ' |fffd|v|fffd||fffd||fffd|W|fffd|F|fffd|N|fffd|g|fffd||fffd||fffd||fffd|
    pl_range            As Range    ' |fffd||fffd||210||fffd||fffd|`|fffd||fffd||348||fffd|
    pl_history_range    As Range    ' |fffd||fffd||fffd||fffd|`|fffd||fffd||348||fffd|
    top_task            As Range    ' |fffd||64ea||fffd|^|fffd|X|fffd|N
    top_startdate       As Range    ' |fffd||64ea||fffd|^|fffd|X|fffd|N|fffd||30a|J|fffd|n|fffd||fffd|
    top_enddate         As Range    ' |fffd||64ea||fffd|^|fffd|X|fffd|N|fffd||30f|I|fffd||fffd||fffd||fffd|
    progress_ratio      As Range    ' |fffd||64ea||fffd|^|fffd|X|fffd|N|fffd||310|i|fffd||fffd||fffd||fffd|
End Type

Const VK_LBUTTON = &H1 '[LeftClick]

'|fffd|}|fffd|E|fffd|X|fffd|J|fffd|[|fffd|\|fffd||fffd||fffd||308||292|u|fffd||fffd||fffd||64fe||fffd||fffd||fffd||fffd|API
#If VBA7 And Win64 Then
Private Declare PtrSafe Function GetCursorPos Lib "USER32" (lpPoint As POINTAPI) As Long
Private Declare PtrSafe Function GetAsyncKeyState Lib "User32.dll" (ByVal vKey As LongPtr) As Long
Private Declare PtrSafe Sub Sleep Lib "kernel32" (ByVal ms As LongPtr)
#Else
Private Declare Function GetCursorPos Lib "USER32" (lpPoint As POINTAPI) As Long
Private Declare Function GetAsyncKeyState Lib "User32.dll" (ByVal vKey As Long) As Long
Private Declare Sub Sleep Lib "kernel32" (ByVal ms As Long)
#End If

Sub onSetSchedule()
    Dim onExit  As Boolean

    ' |fffd|X|fffd|P|fffd|W|fffd||fffd||fffd|[|fffd||fffd||fffd||fffd||fffd|O|fffd||fffd||fffd|[|fffd|h|fffd|i|fffd|E|fffd|N|fffd||fffd||fffd|b|fffd|N|fffd||fffd||fffd|j|fffd||fffd||fffd|[|fffd|j
    onExit = SetSchedule(ActiveSheet, False)
    
End Sub

Sub getDoubleClick(control As IRibbonControl, ByRef returnValue)

    ' toggleButton|fffd|v|fffd|f|fffd||fffd|ON(true)|fffd|EOFF(false)|fffd||fffd||fffd||fffd||fffd||fffd||fffd||752||80b7||fffd||fffd|
    ' |fffd||fffd||fffd|{|fffd|^|fffd||fffd||fffd||30f||fffd||fffd||fffd||fffd|l|fffd||fffd|OFF|fffd|ifalse|fffd|j|fffd||242||fffd||fffd||102||fffd||fffd||fffd|
    returnValue = ThisWorkbook.Worksheets(SHT_DATALIST).Range("L2").Value
    
End Sub

Public Function SetSchedule(ByVal sheet As Worksheet, Optional onRepeat As Boolean) As Boolean
On Error Resume Next
    Const MODE_NAME = "|fffd|y|fffd|X|fffd|P|fffd|W|fffd||fffd||fffd|[|fffd||fffd||fffd||fffd||fffd|O|fffd|z "
    Const MSG_001 = "  |fffd|mESC|fffd||14f|I|fffd||fffd||fffd|n"
    Const ERROR_001 = "|fffd|v|fffd||fffd||fffd|W|fffd|F|fffd|N|fffd|g|fffd||fffd||fffd||50a|O"
    Const ERROR_002 = "|fffd|^|fffd|X|fffd|N|fffd||fffd||fffd||348||34a|O|fffd||142||fffd||fffd|B"
    Const ERROR_003 = "|fffd|Z|fffd||fffd||fffd||fffd||fffd||fffd||fffd|b|fffd|N|fffd||fffd||fffd||fffd||102||fffd||fffd||702||fffd||fffd|B"
    
    Dim onEnd                   As Boolean  ' |fffd|I|fffd||fffd||fffd|t|fffd||fffd||fffd|O
    Dim onPressed               As Boolean  ' |fffd|u|fffd|O|fffd||fffd||fffd|b|fffd|h|fffd||24d||fffd||fffd||d0b9||fffd||fffd|v|fffd||309||fffd||fffd||fffd||fffd||fffd||502||12c82||5c2||fffd|
    Dim onChange                As Boolean  ' |fffd|u|fffd|O|fffd||fffd||fffd|b|fffd|h|fffd||24d||fffd||fffd||d0b9||fffd||fffd|v|fffd||309||fffd||fffd||fffd||fffd||fffd||516||7c2||fffd||fffd|p|fffd|t|fffd||fffd||fffd|O
    Dim saveExcelCalc           As Variant  ' xlCalculation|fffd||303|o|fffd|b|fffd|N|fffd|A|fffd|b|fffd|v
    Dim schedulingBar           As String   ' |fffd|X|fffd|P|fffd|W|fffd||fffd||fffd|[|fffd||fffd||fffd||fffd||fffd|O|fffd|o|fffd|[|fffd|iShape|fffd|j|fffd||316||fffd||fffd|O|fffd|i|fffd|[|fffd|p|fffd||3d0||fffd|
    Dim errorMessage            As String   ' |fffd|G|fffd||fffd||fffd|[|fffd||fffd||fffd|b|fffd|Z|fffd|[|fffd|W|fffd|i|fffd|[|fffd||3d0||fffd|
    Dim workMessage             As String   ' |fffd|J|fffd||fffd||502||fffd||fffd||fffd||fffd||303||fffd||fffd|b|fffd|Z|fffd|[|fffd|W
    Dim topTaskRow              As Long     ' |fffd||64ea||fffd|^|fffd|X|fffd|N|fffd|s|fffd|i|fffd|[|fffd||3d0||fffd|
    Dim spOffset                As Long     ' |fffd||fffd||fffd|t|fffd||702||142||303|I|fffd|t|fffd|Z|fffd|b|fffd|g|fffd|i|fffd|J|fffd|n|fffd||fffd||fffd|j
    Dim epOffset                As Long     ' |fffd||fffd||fffd|t|fffd||702||142||303|I|fffd|t|fffd|Z|fffd|b|fffd|g|fffd|i|fffd|I|fffd||fffd||fffd||fffd||fffd|j
    Dim saveShapeCount          As Long     ' |fffd|}|fffd|`|fffd||310||fffd||fffd||fffd||6ce||fffd||fffd||fffd||fffd||fffd||3d0||fffd|
    Dim startdate               As Range    ' |fffd|J|fffd|n|fffd|\|fffd||fffd||fffd||fffd|Z|fffd||fffd|
    Dim endDate                 As Range    ' |fffd|I|fffd||fffd||fffd|\|fffd||fffd||fffd||fffd|Z|fffd||fffd|
    Dim Range_Cal_S             As Range    ' |fffd|v|fffd||fffd||fffd|W|fffd|F|fffd|N|fffd|g|fffd||fffd||fffd||502||30a|J|fffd|n|fffd||fffd|
    Dim Range_Cal_E             As Range    ' |fffd|v|fffd||fffd||fffd|W|fffd|F|fffd|N|fffd|g|fffd||fffd||fffd||502||30f|I|fffd||fffd||fffd||fffd|
    Dim rangeMousePoint         As Range    ' |fffd|}|fffd|E|fffd|X|fffd|||fffd|C|fffd||fffd||fffd|^|fffd||30d||fffd||fffd|W|fffd||fffd||fffd||fffd||3ca||fffd||fffd||fffd||fffd||fffd||fffd|Z|fffd||fffd|
    Dim p                       As POINTAPI ' API|fffd|p|fffd||3d0||fffd|
    Dim barSRow                 As Long     ' |fffd|X|fffd|P|fffd|W|fffd||fffd||fffd|[|fffd||fffd||fffd||fffd||fffd|O|fffd|o|fffd|[|fffd||fffd||fffd||fffd||fffd||fffd||fffd|J|fffd|n|fffd|\|fffd||fffd||fffd||fffd||30d|s
    Dim barSColumn              As Long     ' |fffd|X|fffd|P|fffd|W|fffd||fffd||fffd|[|fffd||fffd||fffd||fffd||fffd|O|fffd|o|fffd|[|fffd||fffd||fffd||fffd||fffd||fffd||fffd|J|fffd|n|fffd|\|fffd||fffd||fffd||fffd||317||fffd|
    Dim barERow                 As Long     ' |fffd|X|fffd|P|fffd|W|fffd||fffd||fffd|[|fffd||fffd||fffd||fffd||fffd|O|fffd|o|fffd|[|fffd||fffd||fffd||fffd||fffd||fffd||fffd|I|fffd||fffd||fffd|\|fffd||fffd||fffd||fffd||30d|s
    Dim barEColumn              As Long     ' |fffd|X|fffd|P|fffd|W|fffd||fffd||fffd|[|fffd||fffd||fffd||fffd||fffd|O|fffd|o|fffd|[|fffd||fffd||fffd||fffd||fffd||fffd||fffd|I|fffd||fffd||fffd|\|fffd||fffd||fffd||fffd||317||fffd|
    Dim pjPeriodRow             As Long     ' |fffd|v|fffd||fffd||fffd|W|fffd|F|fffd|N|fffd|g|fffd||fffd||fffd||502||312||fffd|`|fffd|s
    Dim newDateS                As Date     ' |fffd||3cd|X|fffd||fffd||30a|J|fffd|n|fffd||fffd|
    Dim newDateE                As Date     ' |fffd||3cd|X|fffd||fffd||30f|I|fffd||fffd||fffd||fffd|
    Dim onDrag                  As Boolean  ' |fffd|h|fffd||fffd||fffd|b|fffd|O|fffd|J|fffd|n|fffd|t|fffd||fffd||fffd|O
    Dim wkState                 As Boolean  ' |fffd|}|fffd|E|fffd|X|fffd||30d||fffd||fffd|N|fffd||fffd||fffd|b|fffd|N|fffd||fffd||502||fffd||fffd|i|fffd|[|fffd||fffd||fffd||fffd||3d0||fffd|
    
    Application.StatusBar = ""
    
    ' |fffd|`|fffd||fffd|V|fffd|[|fffd|g|fffd||20a|O|fffd||34f||fffd||fffd||fffd||fffd||fffd||fffd|I|fffd||fffd||fffd||fffd||fffd||fffd|
    If Not IsCanvas(sheet) Then
        SetSchedule = True
        Exit Function
    End If
    
    ' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
    With Application
        saveExcelCalc = .Calculation
        Application.Calculation = xlCalculationAutomatic   ' |fffd|v|fffd|Z|fffd||fffd||fffd||fffd||fffd||fffd||fffd||242||fffd||fffd||fffd|
    End With
    errorMessage = ""
    
    ' |fffd|A|fffd||fffd||fffd|X|fffd|P|fffd|W|fffd||fffd||fffd|[|fffd||fffd||fffd||fffd||fffd|O|fffd||30e||fffd||fffd||34c|J|fffd||fffd||502||fffd||fffd|I|fffd||fffd||fffd||fffd||fffd|b|fffd|Z|fffd|[|fffd|W|fffd||fffd||752||80b7||fffd||fffd|
    If onRepeat Then
        workMessage = MSG_001
    Else
        workMessage = ""
    End If
    
    ' |fffd|O|fffd||fffd||fffd|b|fffd|h|fffd||24d||fffd||fffd||d0b9||fffd||fffd||311|I|fffd||fffd||fffd||fffd||502||fffd||fffd||64fe||fffd||fffd||fffd||fffd|
    onPressed = Application.CommandBars.GetPressedMso("SnapToGrid")
    
    ' |fffd|O|fffd||fffd||fffd|b|fffd|h|fffd||24d||fffd||fffd||d0b9||fffd||fffd|
    If Not onPressed Then
        Application.CommandBars.ExecuteMso ("SnapToGrid")
        Call RefreshRibbon
        onChange = True
    End If
        
    ' |fffd|`|fffd||fffd|V|fffd|[|fffd|g|fffd||313|o|fffd|^|fffd||fffd||fffd||fffd||fffd||64fe||fffd||fffd||fffd||fffd|
    Dim canvas_info         As tCANVAS
    canvas_info = GetCanvasInfo(sheet.Name)
    
    ' |fffd|v|fffd||fffd||fffd|W|fffd|F|fffd|N|fffd|g|fffd||fffd||fffd||502||fffd||fffd||64fe||fffd||fffd||fffd||fffd|
    With canvas_info
        If .prj_period Is Nothing Then GoTo SetSchedule_exit
        pjPeriodRow = .prj_period.Row
        Set Range_Cal_S = .prj_period.Item(1)                   ' |fffd|v|fffd||fffd||fffd|W|fffd|F|fffd|N|fffd|g|fffd||fffd||fffd||502||30a|J|fffd|n|fffd||fffd|iRANGE|fffd|R|fffd||fffd||fffd|N|fffd|V|fffd||fffd||fffd||fffd||fffd||310||64ea||fffd|j
        Set Range_Cal_E = .prj_period.Item(.prj_period.Count)   ' |fffd|v|fffd||fffd||fffd|W|fffd|F|fffd|N|fffd|g|fffd||fffd||fffd||502||30f|I|fffd||fffd||fffd||fffd|
    End With

    ' |fffd||64ea||fffd|^|fffd|X|fffd|N|fffd||30d|s|fffd||50d||fffd||fffd||fffd||fffd||fffd||fffd||7c2||fffd|
    topTaskRow = canvas_info.top_task.Row

    ' |fffd|^|fffd|X|fffd|N|fffd|J|fffd|n|fffd|\|fffd||fffd||fffd||fffd||fffd||fffd||fffd|I|fffd|t|fffd|Z|fffd|b|fffd|g|fffd||fffd||fffd|Z|fffd|o|fffd||fffd||fffd||fffd|
    Set startdate = canvas_info.top_startdate
    spOffset = Abs(startdate.Row - topTaskRow)
    
    ' |fffd|^|fffd|X|fffd|N|fffd|I|fffd||fffd||fffd|\|fffd||fffd||fffd||fffd||fffd||fffd||fffd|I|fffd|t|fffd|Z|fffd|b|fffd|g|fffd||fffd||fffd|Z|fffd|o|fffd||fffd||fffd||fffd|
    Set endDate = canvas_info.top_enddate
    epOffset = Abs(endDate.Row - topTaskRow)
    
    ' |fffd|l|fffd|p|fffd||fffd|`|fffd||60b7||fffd||fffd|i|fffd||fffd||fffd||fffd||fffd||7c2||fffd||fffd|p|fffd|F|fffd||fffd||fffd||742||30f||fffd||fffd||fffd||fffd||fffd||fffd||64fe||fffd||fffd||fffd||90b1||fffd||182||fffd||fffd||693|I|fffd||142||fffd||fffd||fffd|T|fffd|C|fffd|Y|fffd||248||4d6||fffd||fffd||342||202||fffd||fffd|j
    With sheet
        .Shapes.AddShape msoShapeRectangle, 10, 10, 10, 10
        schedulingBar = .Shapes(sheet.Shapes.Count).Name
        .Shapes(schedulingBar).PickUp
        ThisWorkbook.Worksheets(SHT_DATALIST).Shapes("ReturnRect").Apply
    End With

    ' |fffd|X|fffd|P|fffd|W|fffd||fffd||fffd|[|fffd||fffd||fffd||fffd||fffd|O|fffd|o|fffd|[|fffd|p|fffd||30f||fffd||fffd||fffd||fffd||fffd||752||80b7||fffd||fffd|
    ThisWorkbook.Worksheets(SHT_DATALIST).Shapes("ScheduleRect").PickUp
    With sheet.Shapes(schedulingBar)
        .Apply
        .SetShapesDefaultProperties
        .Delete
    End With
        
    ' |fffd|X|fffd|P|fffd|W|fffd||fffd||fffd|[|fffd||fffd||fffd||fffd||fffd|O|fffd|o|fffd|[|fffd||fffd|`|fffd||60b7||fffd||fffd|
    Application.CommandBars.FindControl(ID:=1111).Execute   ' |fffd|}|fffd|`|fffd|`|fffd||fffd||fffd||fffd||fffd||fffd|s
    Call RefreshRibbon
    saveShapeCount = sheet.Shapes.Count
    
    ' |fffd|}|fffd|E|fffd|X|fffd||30d||fffd||fffd|{|fffd|^|fffd||fffd||fffd|N|fffd||fffd||fffd|b|fffd|N|fffd||fffd||502||fffd||fffd||64fe|
    ' |fffd||fffd|x|fffd||fffd||fffd|s|fffd||fffd||fffd||fffd||183|X|fffd|e|fffd|[|fffd|^|fffd|X|fffd||fffd||fffd|N|fffd||fffd||fffd|A|fffd||fffd||fffd||fffd||fffd|i|fffd||fffd||fffd||6c2||fffd||fffd|j
    wkState = GetAsyncKeyState(VK_LBUTTON)
    
    ' |fffd|}|fffd|E|fffd|X|fffd||30d||fffd||fffd|N|fffd||fffd||fffd|b|fffd|N|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||702||143||fffd||fffd|[|fffd|v|fffd||fffd||fffd||fffd|
    onDrag = False
    onEnd = False
    Do While Application.CommandBars.GetPressedMso("ShapeRectangle") And Not onEnd
        
        ' ESC|fffd|L|fffd|[|fffd||fffd||fffd||fffd||fffd||fffd||fffd||34f||fffd||fffd||fffd||fffd||fffd||fffd|I|fffd||fffd||fffd||fffd||fffd||fffd|
        If GetAsyncKeyState(vbKeyEscape) Then
            Application.CommandBars.FindControl(ID:=1111).Execute   ' |fffd|}|fffd|`|fffd|`|fffd||fffd||fffd||fffd||fffd||fffd||fffd|
            Call RefreshRibbon
            onEnd = True
            
        ElseIf GetAsyncKeyState(VK_LBUTTON) Then
            If onDrag Then
                ' |fffd|h|fffd||fffd||fffd|b|fffd|O|fffd||fffd||fffd||349||fffd||fffd||fffd||fffd||fffd||fffd||202||fffd|
            Else
                Call GetCursorPos(p)
                Set rangeMousePoint = ActiveWindow.RangeFromPoint(p.x, p.y)
                If rangeMousePoint Is Nothing Then
                    Application.CommandBars.FindControl(ID:=1111).Execute   ' |fffd|}|fffd|`|fffd|`|fffd||fffd||fffd||fffd||fffd||fffd||fffd|
                    Call RefreshRibbon
                    onEnd = True
                Else
                    ' |fffd|h|fffd||fffd||fffd|b|fffd|O|fffd|J|fffd|n
                    onDrag = True
                    Set rangeMousePoint = Nothing
                End If
            End If
        End If
            
        ' |fffd|}|fffd|E|fffd|X|fffd|J|fffd|[|fffd|\|fffd||fffd||fffd||30d||fffd||fffd|W|fffd||fffd||fffd||64fe|
        Call GetCursorPos(p)
        Set rangeMousePoint = ActiveWindow.RangeFromPoint(p.x, p.y)
        
        If rangeMousePoint Is Nothing Then
            ' Worksheet|fffd||20a|O|fffd||356||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
        Else
            ' |fffd||64fe||fffd||fffd||fffd||fffd||fffd||fffd||fffd|t|fffd||fffd||fffd|v|fffd||fffd||fffd|W|fffd|F|fffd|N|fffd|g|fffd||fffd||fffd||513||fffd||fffd||fffd||fffd|`|fffd|F|fffd|b|fffd|N|fffd||fffd||fffd||fffd|
            If rangeMousePoint.Column < Range_Cal_S.Column Then
                Application.StatusBar = MODE_NAME & ERROR_001
            ElseIf rangeMousePoint.Column > Range_Cal_E.Column Then
                Application.StatusBar = MODE_NAME & ERROR_001
            Else
                Application.StatusBar = MODE_NAME & Format(Cells(pjPeriodRow, rangeMousePoint.Column).Value, DATE_FORM) & workMessage
            End If
            Set rangeMousePoint = Nothing
        End If
        DoEvents
        Sleep (10)
    Loop

    Application.ScreenUpdating = False

    ' |fffd|X|fffd|P|fffd|W|fffd||fffd||fffd|[|fffd||fffd||fffd||fffd||fffd|O|fffd|o|fffd|[|fffd||fffd||fffd|`|fffd||60b3||fffd||fffd||102||fffd||fffd||202||fffd||fffd||a347||fffd||34f||fffd||fffd||fffd||fffd||fffd||fffd|I|fffd||fffd||fffd||fffd||fffd||fffd|
    If saveShapeCount = sheet.Shapes.Count Then
        GoTo SetSchedule_exit
    Else
        schedulingBar = sheet.Shapes(sheet.Shapes.Count).Name
    End If

    ' |fffd|J|fffd|n|fffd||fffd||fffd|Z|fffd||fffd||fffd||18f|I|fffd||fffd||fffd||fffd||fffd|Z|fffd||fffd||fffd||30d|s|fffd||50d||fffd||fffd||197||fffd||50d||fffd||fffd||fffd||fffd||fffd||fffd||7c2||fffd| BottomRightCell
    With sheet.Shapes(schedulingBar).TopLeftCell
        barSRow = .Row
        barSColumn = .Column
    End With
    With sheet.Shapes(schedulingBar).BottomRightCell.OFFSET(, -1)
        barERow = barSRow
        barEColumn = .Column
    End With

    ' |fffd|}|fffd|`|fffd||30f||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||256||7c2||fffd|
    ThisWorkbook.Worksheets(SHT_DATALIST).Shapes("ReturnRect").PickUp
    With sheet.Shapes(schedulingBar)
        .Apply
        .SetShapesDefaultProperties
        .Delete
    End With
   
    ' |fffd|X|fffd|P|fffd|W|fffd||fffd||fffd|[|fffd||fffd||fffd|o|fffd|[|fffd||fffd||fffd||72c1||fffd||7c2||fffd||fffd||fffd||348||342||fffd||fffd|v|fffd||fffd||fffd|W|fffd|F|fffd|N|fffd|g|fffd||fffd||fffd||513||fffd||fffd||142||fffd||fffd||90b1||fffd||fffd|
    If barSColumn < Range_Cal_S.Column Then
        errorMessage = "|fffd|J|fffd|n|fffd||fffd||fffd||fffd|" & ERROR_001 & "|fffd||142||fffd||fffd|B"
        GoTo SetSchedule_exit
    ElseIf barEColumn > Range_Cal_E.Column Then
        errorMessage = "|fffd|I|fffd||fffd||fffd||fffd||fffd||fffd|" & ERROR_001 & "|fffd||142||fffd||fffd|B"
        GoTo SetSchedule_exit
    End If

    ' |fffd|n|fffd|_|fffd||30d||fffd||fffd|W|fffd||fffd||fffd||fffd|Z|fffd||fffd||fffd||fffd||fffd||fffd||fffd||7c2||101|A|fffd|\|fffd||fffd||fffd|s|fffd||183|R|fffd||fffd||fffd||fffd||fffd|g|fffd||fffd||fffd|l|fffd||fffd||fffd||fffd||fffd||fffd||fffd||2433||fffd|s|fffd||255||3ca||fffd||fffd||fffd||fffd||fffd|
    barSRow = GetConvertRow(sheet, Cells(barSRow, barSColumn).Address) + spOffset   ' |fffd|R|fffd||fffd||fffd||fffd||fffd|g|fffd|s|fffd||343|_|fffd||fffd|

    ' |fffd|n|fffd|_|fffd||fffd||fffd||fffd||210||fffd||fffd||348||34a|O|fffd||34f||fffd||fffd||fffd||fffd||38f||6ca|O|fffd||182||fffd||fffd||fffd|
    If barSRow = 0 Then
        errorMessage = ERROR_002
        GoTo SetSchedule_exit
    End If

    ' |fffd|J|fffd|n|fffd||fffd||fffd||fffd||fffd||fffd||fffd||7c2||fffd|
    newDateS = Format(sheet.Cells(pjPeriodRow, barSColumn), DATE_FORM)
    
    ' |fffd|I|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||7c2||fffd|
    newDateE = Format(sheet.Cells(pjPeriodRow, barEColumn), DATE_FORM)
    
    ' |fffd|J|fffd|n|fffd||fffd||fffd||fffd||752||80b7||fffd||fffd|
    If sheet.ProtectContents And startdate.Locked Then
        errorMessage = "|fffd|J|fffd|n|fffd||fffd||fffd||fffd|" & ERROR_003
        GoTo SetSchedule_exit
    Else
        sheet.Cells(barSRow, startdate.Column).Value = newDateS
    End If

    ' |fffd|I|fffd|_|fffd||30d||fffd||fffd|W|fffd||fffd||fffd||fffd|Z|fffd||fffd||fffd||fffd||fffd||fffd||fffd||7c2||101|A|fffd|\|fffd||fffd||fffd|s|fffd||183|R|fffd||fffd||fffd||fffd||fffd|g|fffd||fffd||fffd|l|fffd||fffd||fffd||fffd||fffd||fffd||fffd||2433||fffd|s|fffd||255||3ca||fffd||fffd||fffd||fffd||fffd|
    barERow = GetConvertRow(sheet, Cells(barERow, barEColumn).Address) + epOffset
    
    ' |fffd|I|fffd|_|fffd||fffd||fffd||fffd||210||fffd||fffd||348||34a|O|fffd||34f||fffd||fffd||fffd||fffd||38f||6ca|O|fffd||182||fffd||fffd||fffd|
    If barERow = 0 Then
        errorMessage = ERROR_002
        GoTo SetSchedule_exit
    End If

    ' |fffd|I|fffd||fffd||fffd||fffd||fffd||fffd||752||80b7||fffd||fffd|
    If sheet.ProtectContents And endDate.Locked Then
        errorMessage = "|fffd|I|fffd||fffd||fffd||fffd||fffd||fffd|" & ERROR_003
        GoTo SetSchedule_exit
    Else
        sheet.Cells(barERow, endDate.Column).Value = newDateE
    End If

SetSchedule_exit:

    Application.ScreenUpdating = True

    ' |fffd|u|fffd|O|fffd||fffd||fffd|b|fffd|h|fffd||24d||fffd||fffd||d0b9||fffd||fffd|v|fffd||309||fffd||fffd||fffd||fffd||fffd||502||fffd||7c2||fffd|
    If onChange Then
        Application.CommandBars.ExecuteMso ("SnapToGrid")
        Call RefreshRibbon
    End If

    ' |fffd|I|fffd||fffd||fffd||fffd||fffd||fffd|
    Set Range_Cal_S = Nothing
    Set Range_Cal_E = Nothing
    Set startdate = Nothing
    Set endDate = Nothing
    
    With Application
        .Calculation = saveExcelCalc
        If errorMessage = "" Then
            sheet.Cells(barERow, barEColumn).Select
            .StatusBar = MODE_NAME & "|fffd|I|fffd||fffd|"
        Else
            .StatusBar = MODE_NAME & errorMessage
        End If
    End With
    
    ' |fffd||fffd||fffd||fffd||fffd||fffd||fffd|J|fffd||fffd||502||fffd||fffd||a347||fffd||fffd|False|fffd||fffd||502||fffd|
    If onDrag Then
        SetSchedule = False
    Else
        SetSchedule = onEnd
    End If

End Function
Attribute VB_Name = "modSearch"
Option Explicit
Option Private Module

Sub SearchCanvas(control As IRibbonControl)
    
    Dim active_book_name        As String
    Dim active_sheet_name       As String
    
    With Application.ActiveWorkbook
        active_book_name = .Name
        active_sheet_name = .ActiveSheet.Name
    End With
    
    ' |fffd|t|fffd|H|fffd|[|fffd||fffd||fffd||fffd|\|fffd||fffd||fffd||fffd||fffd||fffd||fffd||243||fffd||fffd|X|fffd|g|fffd|{|fffd|b|fffd|N|fffd|X|fffd||255|`|fffd||fffd|V|fffd|[|fffd|g|fffd||fffd||1c9||fffd||fffd||fffd||fffd||90bd||fffd||7c3|t|fffd|H|fffd|[|fffd||fffd||fffd|I|fffd|u|fffd|W|fffd|F|fffd|N|fffd|g|fffd||fffd||1c2||74d||fffd||fffd||fffd|
    Load frmShtList
    frmShtList.lstpl.Clear
    
    Const LIST_FONT_SIZE = 9
    Dim selected_position       As Long
    Dim book_name_length        As Long
    Dim sheet_name_length       As Long
    Dim name_in_present_sheet   As Object
    Dim excel_books             As Workbook
    Dim sheet_in_present_book   As Worksheet
    Dim name_calendar           As String
    Dim sheet_name_refer_to     As String
    
    For Each excel_books In Workbooks
        For Each sheet_in_present_book In excel_books.Worksheets
            For Each name_in_present_sheet In sheet_in_present_book.Names
                
                ' Name|fffd|I|fffd|u|fffd|W|fffd|F|fffd|N|fffd|g|fffd||fffd||fffd||fffd|u|fffd||fffd||fffd|O|fffd|v|fffd||fffd||fffd||fffd||fffd|o|fffd||fffd|
                name_calendar = GetNameFromReferTo(name_in_present_sheet.Name)
                
                ' |fffd|`|fffd||fffd||752||fffd||317|L|fffd||fffd||fffd||fffd||fffd|v|fffd||fffd||fffd|W|fffd|F|fffd|N|fffd|g|fffd||fffd||fffd||50f||fffd||fffd||154||fffd||fffd|f|fffd||fffd||fffd||fffd|
                If name_calendar = NM_CL Then
                                        
                    ' |fffd||fffd||fffd||743|A|fffd|N|fffd|e|fffd|B|fffd|u|fffd||203|V|fffd|[|fffd|g|fffd||fffd||fffd|`|fffd||fffd|V|fffd|[|fffd|g|fffd||30f||a347||fffd|A|fffd||fffd||fffd|X|fffd|g|fffd||308||292|u|fffd||fffd||794||fffd||fffd||fffd||fffd||102||fffd||fffd||fffd|
                    If excel_books.Name = active_book_name And sheet_in_present_book.Name = active_sheet_name Then
                        selected_position = frmShtList.lstpl.listCount
                    End If

                    ' Name|fffd|I|fffd|u|fffd|W|fffd|F|fffd|N|fffd|g|fffd||fffd||fffd||fffd|u|fffd||fffd||fffd|[|fffd|N|fffd|V|fffd|[|fffd|g|fffd||fffd||fffd|v|fffd||fffd||fffd||fffd||fffd|o|fffd||fffd|
                    sheet_name_refer_to = GetSheetNameFromReferTo(name_in_present_sheet.Name)
                    
                    ' |fffd||fffd||fffd||fffd||fffd||fffd||242||fffd||fffd||a0bc||fffd||fffd|A|fffd|C|fffd|e|fffd||fffd||fffd||fffd||1c9||fffd||fffd||fffd||fffd||fffd|
                    With frmShtList.lstpl
                        .AddItem ""
                        .List(.listCount - 1, 0) = excel_books.Name
                        .List(.listCount - 1, 1) = sheet_name_refer_to
                    End With
                    
                    ' |fffd||fffd||fffd|X|fffd|g|fffd|{|fffd|b|fffd|N|fffd|X|fffd||317||55742||12c90||fffd||fffd||fffd||fffd||90bd||fffd||7c3|u|fffd|b|fffd|N|fffd||fffd||fffd||183|V|fffd|[|fffd|g|fffd||fffd||fffd||312||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||7c2||10d||151||fffd|l|fffd||fffd||794||fffd||fffd||fffd||fffd||fffd|
                    If Len(excel_books.Name) > book_name_length Then book_name_length = Len(excel_books.Name)
                    If Len(sheet_name_refer_to) > sheet_name_length Then sheet_name_length = Len(sheet_name_refer_to)
                    
                    Exit For
                End If
            Next name_in_present_sheet
        Next sheet_in_present_book
    Next excel_books
       
    
    With frmShtList.lstpl
        If .listCount = 0 Then
            ' |fffd|`|fffd||fffd|V|fffd|[|fffd|g|fffd||202||fffd||fffd||fffd||fffd|b|fffd|Z|fffd|[|fffd|W|fffd||fffd||fffd|o|fffd||342||fffd||fffd||fffd|
            Application.StatusBar = "|fffd|`|fffd||fffd|V|fffd|[|fffd|g|fffd||fffd||fffd||fffd||fffd||82||fffd||fffd||fffd||702||fffd||fffd||fffd|B"
        Else
            ' |fffd|V|fffd|[|fffd|g|fffd||fffd||fffd||315||fffd||fffd||fffd||fffd||fffd|X|fffd|N|fffd||fffd||fffd|[|fffd||fffd||fffd|o|fffd|[|fffd||312||fffd||fffd||fffd||fffd||12c90||fffd||fffd||fffd||fffd||fffd|
            ' |fffd||fffd||fffd||751|I|fffd||fffd||fffd||fffd||fffd||fffd||102||fffd||fffd||fffd|V|fffd|[|fffd|g|fffd||fffd||fffd|V|fffd|[|fffd|g|fffd||a5d7||fffd||fffd||fffd||fffd|I|fffd||fffd||fffd||fffd||fffd||fffd|
            .ColumnWidths = book_name_length * LIST_FONT_SIZE & ";" & sheet_name_length * LIST_FONT_SIZE
            .ListIndex = selected_position
            
            ' |fffd|V|fffd|[|fffd|g|fffd||a5d7||fffd||151|I|fffd||fffd||fffd||fffd||fffd||fffd||102||fffd||fffd||fffd|V|fffd|[|fffd|g|fffd||fffd||fffd|A|fffd|N|fffd|e|fffd|B|fffd|u|fffd||242||fffd||fffd||fffd|
            Call ToActivateSelectedSheet
                    
            ' |fffd|V|fffd|[|fffd|g|fffd||a5d7||fffd||255||fffd||fffd||fffd||fffd||303||fffd||fffd|X|fffd|g|fffd||fffd||fffd||fffd||fffd||742||fffd||fffd||fffd||a347||fffd||fffd||fffd||fffd||fffd|t|fffd|H|fffd|[|fffd||fffd||fffd||fffd|\|fffd||fffd||fffd||fffd||fffd||fffd|
            If .listCount > 1 Then frmShtList.Show
        End If
    End With

End Sub

Attribute VB_Name = "modSkipLine"
Option Explicit
Option Private Module

Public collectionRows   As Collection   ' |fffd|R|fffd||fffd||fffd||fffd||fffd|g|fffd|s|fffd|i|fffd|[|fffd|R|fffd||fffd||fffd|N|fffd|V|fffd||fffd||fffd||fffd|
Private Const MENU_TITLE = "|fffd|R|fffd||fffd||fffd||fffd||fffd|g|fffd|s"

Function InitCommentCollection(ByVal isDelete As Boolean) As Long
    On Error Resume Next

    Dim i               As Long
    Dim commentName     As Object
    Dim rowsComment     As Range
    Dim workRange       As String
    Dim arrayComment    As Variant
    
    Set collectionRows = New Collection
    
    ' |fffd|`|fffd||fffd|V|fffd|[|fffd|g|fffd||fffd||311|S|fffd|R|fffd||fffd||fffd||fffd||fffd|g|fffd|s|fffd||fffd||fffd|R|fffd||fffd||fffd|N|fffd|V|fffd||fffd||fffd||fffd||fffd||24a|i|fffd|[|fffd||fffd||fffd||fffd|
    For Each commentName In ActiveSheet.Names
    
        If InStr(1, commentName.Name, NM_SL) > 0 Then
        
            workRange = Mid(commentName.refersto, 2)
            
            arrayComment = Split(workRange, ",")
        
            For i = 0 To UBound(arrayComment)
            
                ' |fffd|Q|fffd||183|V|fffd|[|fffd|g|fffd||fffd||fffd||d3dc||fffd||fffd||fffd||114||348||34f||fffd||fffd||1228f|o
                workRange = Replace(Mid(arrayComment(i), InStr(1, arrayComment(i), "!") + 1), """", "")
                
                For Each rowsComment In Rows(workRange)
                    collectionRows.Add rowsComment.Address, rowsComment.Address ' key|fffd||fffd||fffd|w|fffd||80b7||fffd||90b1||fffd||182||14f|d|fffd||fffd||fffd||fffd||fffd||202||fffd||fffd||fffd|
                    err.Clear                                                   ' Key|fffd|d|fffd||fffd||fffd||fffd||fffd||343|G|fffd||fffd||fffd|[|fffd||242||202||90bd||fffd||7c3|N|fffd||fffd||fffd|A|fffd||fffd||fffd||fffd|
                Next
            
            Next
            ' collection|fffd||24e||fffd||835e||fffd||42f8e||fffd||fffd|_|fffd||143|R|fffd||fffd||fffd||fffd||fffd|g|fffd|s|fffd||fffd||fffd||d3dc||fffd||fffd||fffd||fffd|
            If isDelete Then commentName.Delete
        End If
    Next
    
    ' |fffd|R|fffd||fffd||fffd|N|fffd|V|fffd||fffd||fffd||fffd||fffd||24e||fffd||835e||fffd||42f83|R|fffd||fffd||fffd||fffd||fffd|g|fffd||fffd||fffd||fffd||50b|p|fffd||fffd||fffd||fffd|
    InitCommentCollection = collectionRows.Count
    
End Function

Sub SetCommentLine(control As IRibbonControl)
    On Error Resume Next

    Dim selectRow       As Object
    Dim commentRows     As String
    Dim nameCommentLine As String
    Dim setCount        As Long
    
    With Application
        .StatusBar = ""
        .EnableEvents = False
        .ScreenUpdating = False
    End With
    
    ' |fffd|`|fffd||fffd|V|fffd|[|fffd|g|fffd|i|fffd|v|fffd||fffd||fffd|W|fffd|F|fffd|N|fffd|g|fffd||fffd||fffd||501|j|fffd||fffd||fffd|o|fffd|^|fffd||fffd||fffd||fffd||102||fffd||fffd||202||fffd||fffd||a347||fffd||34f||fffd||fffd||fffd||fffd||fffd||fffd|I|fffd||fffd||fffd||fffd||fffd||fffd|
    If GetNames(ActiveSheet, NM_CL) = "" Then
        Call OutMessage("|fffd|`|fffd||fffd|V|fffd|[|fffd|g|fffd||fffd||fffd||fffd||fffd||82||fffd||fffd||fffd||702||fffd||fffd||fffd|B" & vbCrLf & "|fffd|`|fffd||fffd|V|fffd|[|fffd|g|fffd||fffd||752||80b5||fffd||102||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|B", vbOKOnly + vbExclamation, MENU_TITLE)
        GoTo SetCommentLineExit
    End If
    
    Call InitCommentCollection(True)
    
    ' |fffd|I|fffd||fffd||fffd||fffd||fffd||fffd||102||fffd||fffd||fffd|s|fffd||fffd||fffd|R|fffd||fffd||fffd|N|fffd|V|fffd||fffd||fffd||fffd||fffd||252||1c9||fffd||fffd||fffd||fffd||fffd|
    setCount = 0
    For Each selectRow In Selection.Rows
        setCount = setCount + 1
        commentRows = NormalizedRangeFormat(selectRow.Address, "RR")    ' SelectionObject|fffd||fffd||fffd|s|fffd|`|fffd||fffd||fffd||255||3ca||fffd||fffd||fffd||fffd||fffd|
        collectionRows.Add commentRows, commentRows                     ' key|fffd||fffd||fffd|w|fffd||80b7||fffd||90b1||fffd||182||14f|d|fffd||fffd||fffd||fffd||fffd||202||fffd||fffd||fffd|
        err.Clear
    Next
    
    Call AddCommentLineName
    
SetCommentLineExit:

    Set collectionRows = Nothing
    
    With Application
        .StatusBar = "|fffd|R|fffd||fffd||fffd||fffd||fffd|g|fffd|s|fffd||fffd| " & setCount & " |fffd|s|fffd||752||80b5||fffd||702||fffd||fffd||fffd||fffd|B"
        .EnableEvents = True
        .ScreenUpdating = True
    End With
    
End Sub

Sub ShowCommentLineList(control As IRibbonControl)
    On Error Resume Next
    Const ERR_MSG = "|fffd|R|fffd||fffd||fffd||fffd||fffd|g|fffd|s|fffd||fffd||fffd||fffd||fffd||742||fffd||fffd||702||fffd||fffd||fffd|B"
    
    With Application
        .StatusBar = ""
        .EnableEvents = False
        .ScreenUpdating = False
    End With

    ' |fffd|R|fffd||fffd||fffd||fffd||fffd|g|fffd|s|fffd||fffd||fffd||fffd||fffd||742||fffd||fffd||fffd||a347||fffd||350||752||fffd||a5d7||fffd||fffd|\|fffd||fffd||fffd||fffd||fffd||fffd|
    If InitCommentCollection(False) <= 0 Then
        Application.StatusBar = ERR_MSG
        err.Clear
        Set collectionRows = Nothing
    Else
        frmCommentLine.Show
    End If

    With Application
        .EnableEvents = True
        .ScreenUpdating = True
    End With

End Sub

Sub UnSetCommentLine(control As IRibbonControl)
    On Error Resume Next
    
    Dim selectRow       As Object
    Dim commentRows     As String
    Dim nameCommentLine As String
    Dim unsetCount      As Long
    
    With Application
        .StatusBar = ""
        .EnableEvents = False
        .ScreenUpdating = False
    End With
    
    ' |fffd|`|fffd||fffd|V|fffd|[|fffd|g|fffd|i|fffd|v|fffd||fffd||fffd|W|fffd|F|fffd|N|fffd|g|fffd||fffd||fffd||501|j|fffd||fffd||fffd|o|fffd|^|fffd||fffd||fffd||fffd||102||fffd||fffd||202||fffd||fffd||a347||fffd||34f||fffd||fffd||fffd||fffd||fffd||fffd|I|fffd||fffd||fffd||fffd||fffd||fffd|
    If GetNames(ActiveSheet, NM_CL) = "" Then
        Call OutMessage("|fffd|`|fffd||fffd|V|fffd|[|fffd|g|fffd||fffd||fffd||fffd||fffd||82||fffd||fffd||fffd||702||fffd||fffd||fffd|B" & vbCrLf & "|fffd|`|fffd||fffd|V|fffd|[|fffd|g|fffd||fffd||752||80b5||fffd||102||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|B", vbOKOnly + vbExclamation, MENU_TITLE)
        GoTo UnSetCommentLine
    End If
    
    Call InitCommentCollection(True)
    
    ' |fffd|I|fffd||fffd||fffd||fffd||fffd||fffd||102||fffd||fffd||fffd|s|fffd||fffd||fffd|R|fffd||fffd||fffd|N|fffd|V|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||d3dc||fffd||fffd||fffd||fffd|
    unsetCount = 0
    For Each selectRow In Selection.Rows
        unsetCount = unsetCount + 1
        commentRows = NormalizedRangeFormat(selectRow.Address, "RR")    ' SelectionObject|fffd||fffd||fffd|s|fffd|`|fffd||fffd||fffd||255||3ca||fffd||fffd||fffd||fffd||fffd|
        collectionRows.Remove commentRows                               ' collection|fffd||fffd||fffd||fffd|key|fffd||188||fffd|v|fffd||fffd||fffd||fffd|f|fffd|[|fffd|^|fffd||fffd||fffd||d3dc||fffd||fffd||fffd||fffd|
        err.Clear                                                       ' key|fffd||fffd||fffd||fffd||fffd||fffd||fffd||343|G|fffd||fffd||fffd|[|fffd||242||202||90bd||fffd||7c3|N|fffd||fffd||fffd|A|fffd||fffd||fffd||fffd|
    Next
    
    Call AddCommentLineName
    
UnSetCommentLine:
    
    Set collectionRows = Nothing
    
    With Application
        .StatusBar = "|fffd|R|fffd||fffd||fffd||fffd||fffd|g|fffd|s|fffd||fffd| " & unsetCount & " |fffd|s|fffd||d3dc||fffd||fffd||fffd||702||fffd||fffd||fffd||fffd|B"
        .EnableEvents = True
        .ScreenUpdating = True
    End With
    
End Sub

Sub AddCommentLineName()
    Dim i               As Long
    Dim nameCommentLine As String
    
    ' |fffd|A|fffd|N|fffd|e|fffd|B|fffd|u|fffd|V|fffd|[|fffd|g|fffd||243|R|fffd||fffd||fffd||fffd||fffd|g|fffd|s|fffd||fffd||752||80b7||fffd||fffd|
    With ActiveSheet
        For i = 1 To collectionRows.Count
            nameCommentLine = NM_SL & i
            .Names.Add Name:=nameCommentLine, RefersToR1C1:="='" & .Name & "'!" & .Range(collectionRows.Item(i)).Address(ReferenceStyle:=xlR1C1)
        Next
    End With

End Sub


'
' |fffd|@|fffd|\      : |fffd|R|fffd||fffd||fffd||fffd||fffd|g|fffd|s|fffd||50d||fffd||fffd||64fe|
'
' |fffd||502||fffd|l    : |fffd|s|fffd||50d||fffd||fffd|iCSV|fffd|`|fffd||fffd||fffd|j
'
' |fffd||fffd||fffd||fffd||fffd||fffd|    : |fffd||fffd||fffd|[|fffd|N|fffd|V|fffd|[|fffd|g|fffd|I|fffd|u|fffd|W|fffd|F|fffd|N|fffd|g
'
' |fffd|@|fffd|\|fffd||fffd||fffd||fffd|  : |fffd||fffd||fffd|[|fffd|N|fffd|V|fffd|[|fffd|g|fffd||253|o|fffd|^|fffd||fffd||fffd||a0bd||fffd|R|fffd||fffd||fffd||fffd||fffd|g|fffd|s|fffd||fffd|NAME|fffd|I|fffd|u|fffd|W|fffd|F|fffd|N|fffd|g|fffd||fffd|
'             |fffd||fffd||fffd|o|fffd||fffd||fffd|A|fffd|s|fffd||50d||fffd||fffd||fffd|CSV|fffd|`|fffd||fffd||fffd||24c||fffd||fffd||fffd||fffd||fffd||fffd||115||50b|p|fffd||fffd||fffd||fffd|
'
Function GetSkipRows(ByRef canvasSheet As Worksheet) As String

    ' |fffd||fffd||fffd|[|fffd|J|fffd||fffd||fffd||3d0||fffd||fffd||fffd|`
    Dim i               As Long
    Dim j               As Long
    Dim sRange          As String
    Dim sSkipLine       As String
    Dim oRange          As Range
    Dim va_MltSelect    As Variant
    Dim i_MltSelect     As Long
    Dim oWorkName       As Object
    Dim sItem           As String
    
    ' |fffd||fffd||fffd|[|fffd|N|fffd|V|fffd|[|fffd|g|fffd||253|o|fffd|^|fffd||fffd||fffd||fffd||102||fffd||fffd||fffd|NAMES|fffd|I|fffd|u|fffd|W|fffd|F|fffd|N|fffd|g|fffd||fffd||fffd||fffd||fffd|X|fffd|g|fffd||253|o|fffd|^|fffd||fffd||fffd||fffd|
    For Each oWorkName In canvasSheet.Names
        ' NAMES|fffd|I|fffd|u|fffd|W|fffd|F|fffd|N|fffd|g|fffd||fffd||fffd|o|fffd|^|fffd||fffd||fffd||fffd||102||fffd||fffd||fffd||390||752||fffd|l|fffd||fffd||fffd||64fe||fffd||fffd||fffd||fffd|
        If InStr(1, oWorkName.Name, NM_SL) > 0 Then
            sItem = oWorkName
            ' |fffd|Q|fffd||183|G|fffd||fffd||fffd|[|fffd||fffd||fffd||fffd||fffd||fffd||fffd||311||38f||fffd|
            If InStr(sItem, "#REF") > 0 Then
                GetSkipRows = "#REF"
                GoTo GetSkipRowsExit
            End If
            sItem = Replace(sItem, "=", "")
        
            ' |fffd|Z|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|I|fffd||fffd||fffd||fffd||fffd||fffd||102||fffd||fffd||fffd||a347||fffd|A|fffd|J|fffd||fffd||fffd|}|fffd||155||fffd||fffd||fffd||fffd||fffd||fffd||114|z|fffd||fffd||24a|i|fffd|[|fffd||fffd||fffd||fffd|
            va_MltSelect = Split(sItem, ",")
            ' |fffd|I|fffd||fffd||fffd||fffd||fffd||fffd||102||fffd||fffd||fffd|Z|fffd||fffd||fffd||fffd||fffd|P|fffd||82||30f||a347||fffd|A|fffd|z|fffd||fffd||fffd||fffd|P|fffd||82||fffd||fffd||fffd||fffd||112||fffd|`|fffd||fffd||fffd||112|l|fffd||fffd||fffd|i|fffd|[|fffd||fffd||fffd||fffd|
            i_MltSelect = UBound(va_MltSelect)
            If i_MltSelect <= 0 Then
                ReDim va_MltSelect(1)
                va_MltSelect(0) = sItem
                i_MltSelect = 0
            End If
            
            For i = 0 To i_MltSelect
                
                ' |fffd||fffd||fffd||fffd||fffd||303|Z|fffd||fffd||fffd||348||34f||fffd||fffd||243|V|fffd|[|fffd|g|fffd||fffd||fffd||fffd||fffd||702||702||fffd||102||fffd||fffd||fffd||a347||fffd||341|A|fffd|V|fffd|[|fffd|g|fffd||fffd||fffd||fffd||fffd||d3dc||fffd||fffd||fffd||fffd|
                sRange = va_MltSelect(i)
                j = InStr(1, sRange, "!")
                If j > 0 Then sRange = Mid(sRange, j + 1)
                
                ' |fffd|I|fffd||fffd||fffd|Z|fffd||fffd||fffd||30d|s|fffd||50d||fffd||fffd||fffd||fffd||fffd||fffd||1228f|o|fffd||fffd||fffd||fffd|
                For Each oRange In Range(sRange).Rows
                    sSkipLine = sSkipLine & "," & oRange.Row
                Next
            Next
        End If
    Next
    
    ' |fffd|]|fffd||fffd||fffd||203|J|fffd||fffd||fffd|}|fffd||fffd||fffd||d3dc||fffd||fffd||fffd||112||fffd||fffd|o|fffd|f|fffd|[|fffd|^|fffd||fffd||50b|p|fffd||fffd||fffd||fffd|
    If sSkipLine <> "" Then GetSkipRows = Mid(sSkipLine, 2)

GetSkipRowsExit:

End Function

Sub DeleteItem()
    Call frmCommentLine.cmdDelete_Click
End Sub

Sub SelectItem()
    Call frmCommentLine.lstCommentLine_DblClick(Null)
End Sub



Attribute VB_Name = "modStyle"
Option Explicit
Option Private Module

Dim sSaveLabel  As String
Dim sSaveImage  As String

Sub EditStyle(control As IRibbonControl)
    frmStyle.Show
End Sub

Sub SelectColor(ByVal lColor As Long, ByVal sCaption As String)

    ' |fffd||fffd||210||fffd||fffd||310|F|fffd||fffd|I|fffd||fffd||fffd||fffd||fffd||fffd|
    With frmStyle
        If gsKindPL = PL_NEW Then
            ' |fffd||4d413||fffd||fffd||308||fffd||210||fffd||fffd||310||fffd||fffd||310|F
            .lblSelectColor.BackColor = lColor
            .Label1.Caption = sCaption
            .fraColorPalette.Visible = False
        Else
            ' |fffd||7cb||fffd||fffd||308||fffd||210||fffd||fffd||310||fffd||fffd||310|F
            .lblSelectColorH.BackColor = lColor
            .lblColorNameH.Caption = sCaption
            .fraColorPalette.Visible = False
        End If
    End With
    
End Sub

Sub SelectLine(ByVal oImage As control)

    ' |fffd||fffd||210||fffd||fffd||30e||fffd||782||fffd|I|fffd||fffd||fffd||fffd||fffd||fffd|
    With frmStyle
        If gsKindPL = PL_NEW Then
            ' |fffd||4d413||fffd||fffd||308||fffd||210||fffd|
            Set .lblKind.Picture = oImage.Picture
            .lblKind.ControlTipText = oImage.ControlTipText
            .lblKind.Tag = oImage.Tag
            .fraLineStyle.Visible = False
        Else
            ' |fffd||7cb||fffd||fffd||308||fffd||210||fffd|
            Set .lblKindH.Picture = oImage.Picture
            .lblKindH.ControlTipText = oImage.ControlTipText
            .lblKindH.Tag = oImage.Tag
            .fraLineStyle.Visible = False
        End If
    End With
    
End Sub

Function ConvertRGBtoCSV(ByVal lRGB As Long) As String

    ' |fffd||fffd||fffd|[|fffd|J|fffd||fffd||fffd||3d0||fffd||fffd||312||fffd|`
    Dim iRed    As Long
    Dim iGreen  As Long
    Dim iBlue   As Long

    ' |fffd|w|fffd|i|fffd|F|fffd||fffd||fffd|q|fffd|f|fffd|a|fffd||fffd||fffd||255||fffd||fffd||fffd||fffd||fffd||fffd||10e||64fe||fffd||fffd||fffd||fffd|
    iRed = lRGB Mod 256
    iGreen = Int(lRGB / 256) Mod 256
    iBlue = Int(lRGB / 256 / 256)

    ' |fffd||fffd||fffd||282||fffd|CSV|fffd|`|fffd||fffd||fffd||255||48f|W|fffd||fffd||fffd||10c||102||442||fffd||fffd||182||255||502||fffd|
    ConvertRGBtoCSV = iRed & "," & iGreen & "," & iBlue

End Function

Sub MouseMove(ByRef oLabel As control)
    
    ' |fffd|I|fffd||fffd||fffd||fffd||fffd||a0bd||fffd|p|fffd|l|fffd||fffd||fffd||310|F|fffd||fffd||fffd|m|fffd||80b7||fffd||fffd|
    If sSaveLabel <> oLabel.Name Then
        With frmStyle
            Select Case sSaveLabel
                Case ""
                Case "lblOther"
                    .fraColorPalette.Controls(sSaveLabel).BorderStyle = fmBorderStyleNone
                Case Else
                    .fraColorPalette.Controls(sSaveLabel).BorderColor = OFF_BACK
            End Select
        End With
        oLabel.BorderStyle = fmBorderStyleSingle
        oLabel.BorderColor = &H0
    End If
    sSaveLabel = oLabel.Name

End Sub

Sub MouseMoveLine(ByRef oImage As control)
    
    If sSaveImage <> oImage.Name Then
    
        Select Case sSaveImage
            Case ""
            Case Else
                frmStyle.fraLineStyle.Controls(sSaveImage).BorderStyle = fmBorderStyleNone
        End Select
        
        With oImage
            .BorderStyle = fmBorderStyleSingle
            .BorderColor = &H0
        End With
    End If
    sSaveImage = oImage.Name

End Sub


Attribute VB_Name = "modTaskLink"
Option Explicit
Option Private Module

Private Type POINTAPI
    x   As Long
    y   As Long
End Type

Private Type tCANVAS
    prj_period          As Range    ' |fffd|v|fffd||fffd||fffd|W|fffd|F|fffd|N|fffd|g|fffd||fffd||fffd||fffd|
    pl_range            As Range    ' |fffd||fffd||210||fffd||fffd|`|fffd||fffd||348||fffd|
    pl_history_range    As Range    ' |fffd||fffd||fffd||fffd|`|fffd||fffd||348||fffd|
    top_task            As Range    ' |fffd||64ea||fffd|^|fffd|X|fffd|N
    top_startdate       As Range    ' |fffd||64ea||fffd|^|fffd|X|fffd|N|fffd||30a|J|fffd|n|fffd||fffd|
    top_enddate         As Range    ' |fffd||64ea||fffd|^|fffd|X|fffd|N|fffd||30f|I|fffd||fffd||fffd||fffd|
    progress_ratio      As Range    ' |fffd||64ea||fffd|^|fffd|X|fffd|N|fffd||310|i|fffd||fffd||fffd||fffd|
End Type

Const VK_LBUTTON = &H1 '[LeftClick]

'|fffd|}|fffd|E|fffd|X|fffd|J|fffd|[|fffd|\|fffd||fffd||fffd||308||292|u|fffd||fffd||fffd||64fe||fffd||fffd||fffd||fffd|API
#If VBA7 And Win64 Then
Private Declare PtrSafe Function GetCursorPos Lib "USER32" (lpPoint As POINTAPI) As Long
Private Declare PtrSafe Function GetAsyncKeyState Lib "User32.dll" (ByVal vKey As LongPtr) As Long
Private Declare PtrSafe Sub Sleep Lib "kernel32" (ByVal ms As LongPtr)
#Else
Private Declare Function GetCursorPos Lib "USER32" (lpPoint As POINTAPI) As Long
Private Declare Function GetAsyncKeyState Lib "User32.dll" (ByVal vKey As Long) As Long
Private Declare Sub Sleep Lib "kernel32" (ByVal ms As Long)
#End If

Sub OnDrawTaskLink()
    ' |fffd||fffd||fffd||fffd||fffd|N|fffd||fffd||fffd||fffd|`|fffd||60b7||fffd||fffd|
    Call shapeLine(ActiveSheet, 0)
End Sub

Sub OnDrawTaskLinks()
    ' |fffd|I|fffd||fffd||fffd||fffd||fffd||fffd||fffd|^|fffd|X|fffd|N|fffd||248||a287||fffd||143||fffd||fffd||fffd||fffd|N|fffd||fffd||fffd||fffd|`|fffd||60b7||fffd||fffd|
    Call DrawTaskLinks(ActiveSheet)
End Sub

Public Function shapeLine(ByVal sheet As Worksheet, ByVal Kind As Long) As Boolean
On Error Resume Next
    Const MODE_NAME = "|fffd|y|fffd|^|fffd|X|fffd|N|fffd||fffd||fffd||fffd||fffd|N|fffd|z "
    Const ERROR_001 = "|fffd|n|fffd|_|fffd||fffd||fffd|`|fffd||fffd||38f||6ca|O|fffd||142||fffd||fffd|B"
    Const ERROR_002 = "|fffd|I|fffd|_|fffd||fffd||fffd|`|fffd||fffd||38f||6ca|O|fffd||142||fffd||fffd|B"
    Const ERROR_003 = "|fffd|\|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||752||fffd||142||fffd||fffd|B"
    Const ERROR_004 = "|fffd|n|fffd|_|fffd||18f|I|fffd|_|fffd||fffd||fffd||fffd||fffd||fffd||fffd|^|fffd|X|fffd|N|fffd||142||fffd||fffd|B"
    
    Dim onPressed               As Boolean  ' |fffd|u|fffd|O|fffd||fffd||fffd|b|fffd|h|fffd||24d||fffd||fffd||d0b9||fffd||fffd|v|fffd||309||fffd||fffd||fffd||fffd||fffd||502||12c82||5c2||fffd|
    Dim onChange                As Boolean  ' |fffd|u|fffd|O|fffd||fffd||fffd|b|fffd|h|fffd||24d||fffd||fffd||d0b9||fffd||fffd|v|fffd||309||fffd||fffd||fffd||fffd||fffd||516||7c2||fffd||fffd|p|fffd|t|fffd||fffd||fffd|O
    Dim onSpecialS              As Boolean
    Dim onSpecialE              As Boolean
    Dim linkLineName            As String   ' |fffd||fffd||fffd||fffd||fffd|N|fffd||fffd|
    Dim spCell                  As String
    Dim epCell                  As String
    Dim taskDateSP              As String   ' |fffd|n|fffd|_|fffd|^|fffd|X|fffd|N|fffd||30a|J|fffd|n|fffd||fffd|
    Dim taskDateEP              As String   ' |fffd|I|fffd|_|fffd|^|fffd|X|fffd|N|fffd||30f|I|fffd||fffd||fffd||fffd|
    Dim errorMessage            As String   ' |fffd|G|fffd||fffd||fffd|[|fffd||fffd||fffd|b|fffd|Z|fffd|[|fffd|W|fffd|i|fffd|[|fffd||3d0||fffd|
    Dim convertRow              As Long
    Dim convColumn              As Long
    Dim topTaskRow              As Long     ' |fffd||64ea||fffd|^|fffd|X|fffd|N|fffd|s|fffd|i|fffd|[|fffd||3d0||fffd|
    Dim spOffset                As Long     ' |fffd||fffd||fffd|t|fffd||702||142||303|I|fffd|t|fffd|Z|fffd|b|fffd|g|fffd|i|fffd|n|fffd|_|fffd|j
    Dim epOffset                As Long     ' |fffd||fffd||fffd|t|fffd||702||142||303|I|fffd|t|fffd|Z|fffd|b|fffd|g|fffd|i|fffd|I|fffd|_|fffd|j
    Dim saveShapeCount          As Long     ' |fffd|}|fffd|`|fffd||310||fffd||fffd||fffd||6ce||fffd||fffd||fffd||fffd||fffd||3d0||fffd|
    Dim pjPeriodDateS           As Date     ' |fffd|v|fffd||fffd||fffd|W|fffd|F|fffd|N|fffd|g|fffd||fffd||fffd||50a|J|fffd|n|fffd||fffd|
    Dim pjPeriodDateE           As Date     ' |fffd|v|fffd||fffd||fffd|W|fffd|F|fffd|N|fffd|g|fffd||fffd||fffd||50f|I|fffd||fffd||fffd||fffd|
    Dim endDate                 As Range    ' |fffd|n|fffd|_|fffd||30f|I|fffd||fffd||fffd|\|fffd||fffd||fffd|
    Dim startdate               As Range    ' |fffd|I|fffd|_|fffd||30a|J|fffd|n|fffd|\|fffd||fffd||fffd|
    Dim savezoom                As Variant  ' windows|fffd||fffd|zoom|fffd|v|fffd||fffd||fffd|p|fffd|e|fffd|B|fffd||fffd||6d1||fffd||fffd||fffd||fffd||fffd||3d0||fffd|
    Dim arrayCoordinate         As Variant
    Dim Range_Cal_S             As Range    ' |fffd|v|fffd||fffd||fffd|W|fffd|F|fffd|N|fffd|g|fffd||fffd||fffd||502||30a|J|fffd|n|fffd||fffd|
    Dim Range_Cal_E             As Range    ' |fffd|v|fffd||fffd||fffd|W|fffd|F|fffd|N|fffd|g|fffd||fffd||fffd||502||30f|I|fffd||fffd||fffd||fffd|
    Dim rangeWorkPeriod         As Range    ' |fffd|v|fffd||fffd||fffd|W|fffd|F|fffd|N|fffd|g|fffd||fffd||fffd||502||314||348||fffd|
    Dim arrayWorkPeriod         As Variant  ' |fffd|v|fffd||fffd||fffd|W|fffd|F|fffd|N|fffd|g|fffd||fffd||fffd||502||313||fffd||fffd|t|fffd|i|fffd|[|fffd|z|fffd||fffd|
    Dim arrayWorkPeriodArg()    As Variant  ' |fffd||fffd||fffd||fffd||fffd|p|fffd||303|v|fffd||fffd||fffd|W|fffd|F|fffd|N|fffd|g|fffd||fffd||fffd||502||313||fffd||fffd|t|fffd|i|fffd|[|fffd|z|fffd||fffd|
    Dim arrayWorkPeriodMax      As Long     ' |fffd|v|fffd||fffd||fffd|W|fffd|F|fffd|N|fffd|g|fffd||fffd||fffd||502||313||fffd||fffd|t|fffd|i|fffd|[|fffd|z|fffd||fffd||151||fffd|Y|fffd||fffd||fffd||fffd|
    Dim onDrag                  As Boolean  ' |fffd|h|fffd||fffd||fffd|b|fffd|O|fffd|J|fffd|n|fffd|t|fffd||fffd||fffd|O
    Dim wkState                 As Boolean  ' |fffd|}|fffd|E|fffd|X|fffd||30d||fffd||fffd|N|fffd||fffd||fffd|b|fffd|N|fffd||fffd||502||fffd||fffd|i|fffd|[|fffd||fffd||fffd||fffd||3d0||fffd|
    Dim rangeMousePoint         As Range    ' |fffd|}|fffd|E|fffd|X|fffd|||fffd|C|fffd||fffd||fffd|^|fffd||30d||fffd||fffd|W|fffd||fffd||fffd||fffd||3ca||fffd||fffd||fffd||fffd||fffd||fffd|Z|fffd||fffd|
    Dim p                       As POINTAPI ' API|fffd|p|fffd||3d0||fffd|
    
    ' |fffd|`|fffd||fffd|V|fffd|[|fffd|g|fffd||20a|O|fffd||34f||fffd||fffd||fffd||fffd||fffd||fffd|I|fffd||fffd||fffd||fffd||fffd||fffd|
    Application.StatusBar = ""
    If Not IsCanvas(sheet) Then
        Call OutMessage("|fffd|`|fffd||fffd|V|fffd|[|fffd|g|fffd||fffd||fffd||fffd||fffd||82||fffd||fffd||fffd||702||fffd||fffd||fffd|B" & vbCrLf & "|fffd|`|fffd||fffd|V|fffd|[|fffd|g|fffd||fffd||752||80b5||fffd||102||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|B", vbOKOnly + vbExclamation, "|fffd||fffd||fffd||fffd||fffd|N|fffd||752||fffd|")
        shapeLine = True
        Exit Function
    End If
    errorMessage = ""
    
    ' shape|fffd|`|fffd||639e||fffd||24d||fffd||fffd|W|fffd||fffd||fffd||fffd||fffd||a0bd||fffd||60a4||fffd||255|\|fffd||fffd||fffd||fffd||fffd||fffd||90b1||fffd||182||fffd|h|fffd||fffd||fffd||38f||fffd|
    savezoom = ActiveWindow.Zoom
    
    ' |fffd|^|fffd|X|fffd|N|fffd||fffd||fffd||fffd||fffd|N|fffd||30a|J|fffd|n|fffd||fffd||933e||fffd||fffd||fffd||fffd|
    Application.StatusBar = MODE_NAME & "|fffd|J|fffd|n"
    Application.EnableEvents = False

    ' |fffd||fffd||fffd||fffd||fffd||fffd|`|fffd||60b7||fffd||fffd|i|fffd||fffd||fffd||fffd||fffd||7c2||fffd||fffd|p|fffd|F|fffd||fffd||fffd||312||fffd||fffd||fffd||fffd||248||4d6||fffd||fffd||342||202||fffd||fffd|j
    sheet.Shapes.AddLine 100, 10, 110, 15
    
    ' |fffd||fffd||fffd||fffd||fffd||303|I|fffd|u|fffd|W|fffd|F|fffd|N|fffd|g|fffd||fffd||fffd||fffd||fffd||64fe||fffd||fffd||fffd||fffd|
    linkLineName = sheet.Shapes(sheet.Shapes.Count).Name
    
    ' |fffd|A|fffd|N|fffd|e|fffd|B|fffd|u|fffd|u|fffd|b|fffd|N|fffd||fffd|Shape|fffd||30f||fffd||fffd||fffd||fffd||fffd||794||fffd||fffd||fffd||fffd||fffd|
    sheet.Shapes(linkLineName).PickUp
    ThisWorkbook.Worksheets(SHT_DATALIST).Shapes("ReturnLine").Apply
    
    ' |fffd||fffd||fffd||fffd||fffd|N|fffd||fffd||fffd|p|fffd||30f||fffd||fffd||fffd||fffd||fffd||752||80b7||fffd||fffd|
    ThisWorkbook.Worksheets(SHT_DATALIST).Shapes("LinkLine").PickUp
    With sheet.Shapes(linkLineName)
        .Apply
        .SetShapesDefaultProperties
        .Delete
    End With

    ' |fffd|O|fffd||fffd||fffd|b|fffd|h|fffd||24d||fffd||fffd||d0b9||fffd||fffd||311|I|fffd||fffd||fffd||fffd||502||fffd||fffd||64fe||fffd||fffd||fffd||fffd|
    onPressed = Application.CommandBars.GetPressedMso("SnapToGrid")
    
    ' |fffd|O|fffd||fffd||fffd|b|fffd|h|fffd||24d||fffd||fffd||d0b9||fffd||90aa|TRUE|fffd||30f||a347||fffd||fffd|FALSE|fffd||255||3cd|X|fffd||fffd||fffd||fffd|
    If onPressed Then
        Application.CommandBars.ExecuteMso ("SnapToGrid")
        onChange = True
    End If
        
    ' |fffd|`|fffd||fffd|V|fffd|[|fffd|g|fffd||313|o|fffd|^|fffd||fffd||fffd||fffd||fffd||64fe||fffd||fffd||fffd||fffd|
    Dim canvas_info         As tCANVAS
    canvas_info = GetCanvasInfo(sheet.Name)
    
    ' |fffd|v|fffd||fffd||fffd|W|fffd|F|fffd|N|fffd|g|fffd||fffd||fffd||502||fffd||fffd||64fe||fffd||fffd||fffd||fffd|
    With canvas_info
        If .prj_period Is Nothing Then Exit Function
        Set Range_Cal_S = .prj_period.Item(1)                   ' |fffd|v|fffd||fffd||fffd|W|fffd|F|fffd|N|fffd|g|fffd||fffd||fffd||502||30a|J|fffd|n|fffd||fffd|iRANGE|fffd|R|fffd||fffd||fffd|N|fffd|V|fffd||fffd||fffd||fffd||fffd||310||64ea||fffd|j
        Set Range_Cal_E = .prj_period.Item(.prj_period.Count)   ' |fffd|v|fffd||fffd||fffd|W|fffd|F|fffd|N|fffd|g|fffd||fffd||fffd||502||30f|I|fffd||fffd||fffd||fffd|
    End With
    
    ' |fffd|v|fffd||fffd||fffd|W|fffd|F|fffd|N|fffd|g|fffd||fffd||fffd||502||fffd|z|fffd||fffd||24a|i|fffd|[|fffd||fffd||fffd||fffd|
    Set rangeWorkPeriod = sheet.Range(Range_Cal_S.Address, Range_Cal_E.Address)
    If rangeWorkPeriod.Columns.Count > 1 Then
        arrayWorkPeriod = rangeWorkPeriod
    Else
        ReDim arrayWorkPeriod(1, 1) As Variant
        arrayWorkPeriod(1, 1) = rangeWorkPeriod
    End If
    
    ' |fffd||fffd|v|fffd|f|fffd||50d||fffd||fffd||30d||151||fffd|l|fffd||fffd||fffd||64fe|
    arrayWorkPeriodMax = UBound(arrayWorkPeriod, 2)
    arrayWorkPeriodArg = arrayWorkPeriod
    
    ' |fffd|v|fffd||fffd||fffd|W|fffd|F|fffd|N|fffd|g|fffd||fffd||fffd||502||30a|J|fffd|n|fffd||fffd||fffd||18f|I|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||7c2||fffd|
    pjPeriodDateS = Format(Range_Cal_S.Value, DATE_FORM)
    pjPeriodDateE = Format(Range_Cal_E.Value, DATE_FORM)
    
    ' |fffd||fffd||fffd||fffd|(LinkLine)|fffd||fffd|`|fffd||60b7||fffd||fffd|
    Application.CommandBars.FindControl(ID:=1042).Execute
    saveShapeCount = sheet.Shapes.Count

    ' |fffd|}|fffd|E|fffd|X|fffd||30d||fffd||fffd|{|fffd|^|fffd||fffd||fffd|N|fffd||fffd||fffd|b|fffd|N|fffd||fffd||502||fffd||fffd||64fe|
    ' |fffd||fffd|x|fffd||fffd||fffd|s|fffd||fffd||fffd||fffd||183|X|fffd|e|fffd|[|fffd|^|fffd|X|fffd||fffd||fffd|N|fffd||fffd||fffd|A|fffd||fffd||fffd||fffd||fffd|i|fffd||fffd||fffd||6c2||fffd||fffd|j
    wkState = GetAsyncKeyState(VK_LBUTTON)
    
    ' |fffd|}|fffd|E|fffd|X|fffd||30d||fffd||fffd|N|fffd||fffd||fffd|b|fffd|N|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||702||143||fffd||fffd|[|fffd|v|fffd||fffd||fffd||fffd|
    Dim onEnd                   As Boolean  ' |fffd|I|fffd||fffd||fffd|t|fffd||fffd||fffd|O
    
    onDrag = False
    onEnd = False
    Do While Application.CommandBars.GetPressedMso("ShapeStraightConnector")
        
        ' ESC|fffd|L|fffd|[|fffd||fffd||fffd||fffd||fffd||fffd||fffd||34f||fffd||fffd||fffd||fffd||fffd||fffd|I|fffd||fffd||fffd||fffd||fffd||fffd|
        If GetAsyncKeyState(vbKeyEscape) Then
            Application.CommandBars.FindControl(ID:=1042).Execute   ' |fffd|}|fffd|`|fffd|`|fffd||fffd||fffd||fffd||fffd||fffd||fffd|
            Call RefreshRibbon
            onEnd = True
            
        ElseIf GetAsyncKeyState(VK_LBUTTON) Then
            If onDrag Then
                ' |fffd|h|fffd||fffd||fffd|b|fffd|O|fffd||fffd||fffd||349||fffd||fffd||fffd||fffd||fffd||fffd||202||fffd|
            Else
                Call GetCursorPos(p)
                Set rangeMousePoint = ActiveWindow.RangeFromPoint(p.x, p.y)
                If rangeMousePoint Is Nothing Then
                    Application.CommandBars.FindControl(ID:=1042).Execute   ' |fffd|}|fffd|`|fffd|`|fffd||fffd||fffd||fffd||fffd||fffd||fffd|
                    Call RefreshRibbon
                    onEnd = True
                Else
                    ' |fffd|h|fffd||fffd||fffd|b|fffd|O|fffd|J|fffd|n
                    onDrag = True
                    Set rangeMousePoint = Nothing
                End If
            End If
        End If
        
        DoEvents
        Sleep (10)
        
    Loop

    ' |fffd||fffd||fffd||fffd||fffd|}|fffd|~
    Call SuppressUpdates(True)
'    ActiveWindow.Zoom = 100
    
    ' |fffd|^|fffd|X|fffd|N|fffd||fffd||fffd||fffd||fffd|N|fffd||fffd||fffd|`|fffd||60b3||fffd||fffd||102||fffd||fffd||202||fffd||fffd||a347||fffd||34f||fffd||fffd||fffd||fffd||fffd||fffd|I|fffd||fffd||fffd||fffd||fffd||fffd|
    If saveShapeCount = sheet.Shapes.Count Then
        GoTo shapeline_exit
    Else
        linkLineName = sheet.Shapes(sheet.Shapes.Count).Name
    End If
    
    ' |fffd||fffd||fffd||fffd||fffd||30e|n|fffd|_|fffd||18f|I|fffd|_|fffd||fffd||fffd||64fe||fffd||fffd||fffd||fffd|
    arrayCoordinate = Split(GetLinkLineCoordinate(linkLineName), ",")
    
    ' |fffd||fffd||fffd||fffd||fffd||30f||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||256||7c2||fffd|
    ThisWorkbook.Worksheets(SHT_DATALIST).Shapes("ReturnLine").PickUp
    With sheet.Shapes(sheet.Shapes.Count)
        .Apply
        .SetShapesDefaultProperties
        .Delete
    End With
    
    ' |fffd||64ea||fffd|^|fffd|X|fffd|N|fffd||30d|s|fffd||50d||fffd||fffd||fffd||fffd||fffd||fffd||7c2||fffd|
    topTaskRow = canvas_info.top_task.Row
    
    ' |fffd|n|fffd|_|fffd||303|^|fffd|X|fffd|N|fffd|I|fffd||fffd||fffd|\|fffd||fffd||fffd||fffd||fffd||fffd||fffd|I|fffd|t|fffd|Z|fffd|b|fffd|g|fffd||fffd||fffd|Z|fffd|o|fffd||fffd||fffd||fffd|
    Set endDate = canvas_info.top_enddate
    
    spOffset = Abs(endDate.Row - topTaskRow)
    
    ' |fffd|I|fffd|_|fffd||303|^|fffd|X|fffd|N|fffd|J|fffd|n|fffd|\|fffd||fffd||fffd||fffd||fffd||fffd||fffd|I|fffd|t|fffd|Z|fffd|b|fffd|g|fffd||fffd||fffd|Z|fffd|o|fffd||fffd||fffd||fffd|
    Set startdate = canvas_info.top_startdate
    
    epOffset = Abs(startdate.Row - topTaskRow)
    
    ' |fffd|n|fffd|_|fffd||30d||fffd||fffd|W|fffd||fffd||fffd||fffd|Z|fffd||fffd||fffd||fffd||fffd||fffd||fffd||7c2||101|A|fffd|\|fffd||fffd||fffd|s|fffd||183|R|fffd||fffd||fffd||fffd||fffd|g|fffd||fffd||fffd|l|fffd||fffd||fffd||fffd||fffd||fffd||fffd||2433||fffd|s|fffd||255||3ca||fffd||fffd||fffd||fffd||fffd|
    spCell = CoordinateToCell(arrayCoordinate(0), arrayCoordinate(1))
    convertRow = GetConvertRow(sheet, spCell)
    
    ' |fffd|n|fffd|_|fffd||fffd||fffd||fffd||210||fffd||fffd||348||34a|O|fffd||34f||fffd||fffd||fffd||fffd||38f||6ca|O|fffd||182||fffd||fffd||fffd|
    If convertRow = 0 Then
        errorMessage = ERROR_001
        GoTo shapeline_exit
    End If
    
    ' |fffd|I|fffd||fffd||fffd||fffd||fffd|t|fffd|i|fffd|n|fffd|_|fffd|j|fffd||317||fffd||50d||fffd||fffd||fffd||fffd||fffd||fffd||7c2||fffd|
    taskDateSP = sheet.Range(Cells(convertRow, endDate.Column), Cells(convertRow, endDate.Column)).OFFSET(spOffset)
    ' |fffd||fffd||fffd|t|fffd||fffd||fffd||fffd||fffd||752||fffd||30f||a347||fffd||34f||fffd||fffd||fffd||fffd||38f||6ca|O|fffd||182||fffd||fffd||fffd|
    If taskDateSP = "" Then
        errorMessage = "|fffd|n|fffd|_|fffd||30f|I|fffd||fffd|" & ERROR_003
        GoTo shapeline_exit
    End If
    
    ' |fffd|n|fffd|_|fffd||317||fffd||50d||fffd||fffd||fffd||fffd||fffd||fffd||7c2||fffd|
    convColumn = GetCalCol(arrayWorkPeriodArg, taskDateSP, 1, arrayWorkPeriodMax)
    
    ' |fffd|n|fffd|_|fffd||fffd||fffd||fffd||210||fffd||fffd||348||34a|O|fffd||34f||fffd||fffd||fffd||fffd||38f||6ca|O|fffd||182||fffd||fffd||fffd|
    If convColumn = 0 Then
        errorMessage = ERROR_001
        GoTo shapeline_exit
    End If
    convColumn = convColumn + Range_Cal_S.Column - 1
    spCell = Range(Cells(convertRow, convColumn), Cells(convertRow, convColumn)).Address
    
    ' |fffd|I|fffd|_|fffd||30d||fffd||fffd|W|fffd||fffd||fffd||fffd|Z|fffd||fffd||fffd||fffd||fffd||fffd||fffd||7c2||101|A|fffd|\|fffd||fffd||fffd|s|fffd||183|R|fffd||fffd||fffd||fffd||fffd|g|fffd||fffd||fffd|l|fffd||fffd||fffd||fffd||fffd||fffd||fffd||2433||fffd|s|fffd||255||3ca||fffd||fffd||fffd||fffd||fffd|
    epCell = CoordinateToCell(arrayCoordinate(2), arrayCoordinate(3))
    convertRow = GetConvertRow(sheet, epCell)
    ' |fffd|I|fffd|_|fffd||fffd||fffd||fffd||210||fffd||fffd||348||34a|O|fffd||34f||fffd||fffd||fffd||fffd||38f||6ca|O|fffd||182||fffd||fffd||fffd|
    If convertRow = 0 Then
        errorMessage = ERROR_002
        GoTo shapeline_exit
    End If
    
    ' |fffd|I|fffd||fffd||fffd||fffd||fffd|t|fffd|i|fffd|I|fffd|_|fffd|j|fffd||317||fffd||50d||fffd||fffd||fffd||fffd||fffd||fffd||7c2||fffd|
    taskDateEP = sheet.Range(Cells(convertRow, startdate.Column), Cells(convertRow, startdate.Column)).OFFSET(epOffset)
    ' |fffd||fffd||fffd|t|fffd||fffd||fffd||fffd||fffd||752||fffd||30f||a347||fffd||34f||fffd||fffd||fffd||fffd||38f||6ca|O|fffd||182||fffd||fffd||fffd|
    If taskDateEP = "" Then
        errorMessage = "|fffd|I|fffd|_|fffd||30a|J|fffd|n" & ERROR_003
        GoTo shapeline_exit
    End If
    ' |fffd|I|fffd|_|fffd||317||fffd||50d||fffd||fffd||fffd||fffd||fffd||fffd||7c2||fffd|
    convColumn = GetCalCol(arrayWorkPeriodArg, taskDateEP, 1, arrayWorkPeriodMax)
    
    ' |fffd|I|fffd|_|fffd||fffd||fffd||fffd||210||fffd||fffd||348||34a|O|fffd||34f||fffd||fffd||fffd||fffd||38f||6ca|O|fffd||182||fffd||fffd||fffd|
    If convColumn = 0 Then
        errorMessage = ERROR_002
        GoTo shapeline_exit
    End If
    convColumn = convColumn + Range_Cal_S.Column - 1
    epCell = Range(Cells(convertRow, convColumn), Cells(convertRow, convColumn)).Address
    
    '|fffd|v|fffd||fffd||fffd|W|fffd|F|fffd|N|fffd|g|fffd||fffd||fffd||503|`|fffd|F|fffd|b|fffd|N
    onSpecialS = False
    onSpecialE = False
    
    If Range(spCell).Row = Range(epCell).Row Then errorMessage = ERROR_004: GoTo shapeline_exit

    If IsErrorEndDate(CDate(taskDateEP), pjPeriodDateS, pjPeriodDateE) Then errorMessage = ERROR_002: GoTo shapeline_exit
    
    ' |fffd||fffd|s|fffd|^|fffd|X|fffd|N|fffd||30f|I|fffd||fffd||fffd||fffd||fffd||fffd||fffd|v|fffd||fffd||fffd|W|fffd|F|fffd|N|fffd|g|fffd||fffd||fffd||50a|J|fffd|n|fffd||fffd||fffd||fffd||fffd|O|fffd||242||202||fffd||a347||fffd||343||fffd||fffd||fffd||fffd|N|fffd||30a|J|fffd|n|fffd||fffd||fffd|W|fffd||fffd||fffd|Z|fffd||fffd||fffd||30d||fffd||fffd||242||fffd||fffd||fffd|
    If CDate(taskDateSP) < pjPeriodDateS Then onSpecialS = True
    ' |fffd||3471||fffd|^|fffd|X|fffd|N|fffd||30a|J|fffd|n|fffd||fffd||fffd||fffd||fffd|v|fffd||fffd||fffd|W|fffd|F|fffd|N|fffd|g|fffd||fffd||fffd||50a|J|fffd|n|fffd||fffd||fffd||193||fffd||fffd||fffd||fffd||fffd||fffd||a347||fffd||343||fffd||fffd||fffd||fffd|N|fffd||30f|I|fffd||fffd||fffd||fffd||fffd|W|fffd||fffd||fffd|Z|fffd||fffd||fffd||30f||fffd||242||fffd||fffd||fffd|
    If CDate(taskDateEP) = pjPeriodDateS Then onSpecialE = True
    
    ' |fffd|^|fffd|X|fffd|N|fffd||fffd||fffd||fffd||fffd|N|fffd||fffd|Name|fffd|I|fffd|u|fffd|W|fffd|F|fffd|N|fffd|g|fffd||fffd|o|fffd|^|fffd||fffd||fffd||fffd|
    Call AddLinkName(sheet, Mid(spCell, InStrRev(spCell, "$") + 1), Mid(epCell, InStrRev(epCell, "$") + 1))
    ' |fffd|^|fffd|X|fffd|N|fffd||fffd||fffd||fffd||fffd|N|fffd||fffd|`|fffd||60b7||fffd||fffd|
    Call DrawTaskLink(sheet, spCell, epCell, onSpecialS, onSpecialE)
        
shapeline_exit:
    
    ' |fffd|u|fffd|O|fffd||fffd||fffd|b|fffd|h|fffd||24d||fffd||fffd||d0b9||fffd||fffd|v|fffd||309||fffd||fffd||fffd||fffd||fffd||502||fffd||7c2||fffd|
    If onChange Then Application.CommandBars.ExecuteMso ("SnapToGrid")
    
    ' |fffd|n|fffd|_|fffd||303|Z|fffd||fffd||fffd||fffd|I|fffd||fffd||fffd||fffd||fffd||fffd|
    sheet.Range(spCell).Select
    
    ' |fffd|\|fffd||fffd||fffd|{|fffd||fffd||fffd||fffd||7c2||fffd|
    ActiveWindow.Zoom = savezoom
    
    ' |fffd|I|fffd||fffd||fffd||fffd||fffd||fffd|
    Set Range_Cal_S = Nothing
    Set Range_Cal_E = Nothing
    Set rangeWorkPeriod = Nothing
    Set startdate = Nothing
    Set endDate = Nothing
    
    ' |fffd|}|fffd|~|fffd||fffd||fffd||fffd|
    Call SuppressUpdates(False)
    With Application
        If errorMessage = "" Then
            .StatusBar = MODE_NAME & "|fffd|I|fffd||fffd|"
        Else
            .StatusBar = MODE_NAME & errorMessage
        End If
    End With
    
    shapeLine = onEnd
    
End Function

Function GetLinkLineCoordinate(ByVal shapeName As String) As String
    Dim SX                  As Single   ' |fffd|n|fffd|_|fffd||fffd|X|fffd||fffd||fffd|W
    Dim SY                  As Single   ' |fffd|n|fffd|_|fffd||fffd|Y|fffd||fffd||fffd|W
    Dim ex                  As Single   ' |fffd|I|fffd|_|fffd||fffd|X|fffd||fffd||fffd|W
    Dim EY                  As Single   ' |fffd|I|fffd|_|fffd||fffd|Y|fffd||fffd||fffd|W
    Dim returnCoordinate    As String   ' |fffd||50b|p|fffd||fffd||fffd|W|fffd|iCSV|fffd|`|fffd||fffd||fffd|j

    ' |fffd||fffd||fffd||fffd||fffd||30e|n|fffd|_|fffd||18f|I|fffd|_|fffd||fffd||fffd||fffd||fffd||7c2||fffd|
    With ActiveSheet.Shapes(shapeName)
        If .HorizontalFlip = msoTrue Then
            If .VerticalFlip = msoTrue Then
                SX = .Left + .width
                SY = .Top + .Height
                ex = .Left
                EY = .Top
            Else
                SX = .Left + .width
                SY = .Top
                ex = .Left
                EY = .Top + .Height
            End If
        Else
            If .VerticalFlip = msoTrue Then
                SX = .Left
                SY = .Top + .Height
                ex = .Left + .width
                EY = .Top
            Else
                SX = .Left
                SY = .Top
                ex = .Left + .width
                EY = .Top + .Height
            End If
        End If
    End With
    
    ' CSV|fffd|`|fffd||fffd||fffd||155||50b|p|fffd||fffd||fffd||fffd|
    returnCoordinate = SX & "," & SY & "," & ex & "," & EY
    GetLinkLineCoordinate = returnCoordinate
 
 End Function

Function CoordinateToCell(ByVal x As Single, ByVal y As Single) As String

    Dim returnCell  As String
    Dim dummyShape  As Object
    
    ' |fffd||fffd||fffd||fffd||fffd||30d||fffd||fffd|W|fffd||fffd||fffd|N|fffd|_|fffd||182||fffd||fffd||fffd|shape|fffd|I|fffd|u|fffd|W|fffd|F|fffd|N|fffd|g|fffd||fffd||fffd||c42c|
    ' Width,Height|fffd||fffd|2|fffd||153||fffd||fffd||a0b5||fffd||102||fffd||fffd||90aa||fffd||fffd||fffd||248||4d6||fffd||fffd||342||202||fffd|
    Set dummyShape = ActiveSheet.Shapes.AddShape(msoShapeRectangle, x, y, 2, 2)
    
    ' |fffd||fffd||fffd|_|fffd||30d||fffd||fffd|W|fffd||fffd||fffd|Z|fffd||fffd||fffd||3ca||fffd||fffd||fffd||fffd||fffd|iTopLeftCell|fffd|j
    returnCell = dummyShape.TopLeftCell.Address
    
    ' |fffd|_|fffd|~|fffd|[|fffd|I|fffd|u|fffd|W|fffd|F|fffd|N|fffd|g|fffd||fffd||fffd||d3dc||fffd||fffd||fffd||fffd|
    dummyShape.Delete
    Set dummyShape = Nothing

    ' |fffd||3ca||fffd||fffd||fffd||fffd||282||fffd||502||fffd|
    CoordinateToCell = returnCell
    
End Function

Sub DrawTaskLink(ByVal sheet As Worksheet, ByVal startCell As String, endCell As String, ByVal onSpecialS As Boolean, ByVal onSpecialE As Boolean)
    
    Const OFFSET = 5        ' |fffd|^|fffd|X|fffd|N|fffd|p|fffd|X|fffd||18c||3471||fffd|^|fffd|X|fffd|N|fffd||182||30b||fffd||fffd||fffd|

    ' |fffd||fffd||fffd||fffd||fffd||303|Z|fffd||fffd||fffd||fffd||fffd||fffd|`|fffd||fffd||30d||fffd||fffd|W|fffd||fffd||fffd|Z|fffd|o|fffd||fffd||fffd||fffd|
    Dim pointMAX            As Long     ' |fffd|z|fffd||fffd||30d||151||fffd|Y|fffd||fffd||fffd||fffd|
    pointMAX = 0
    
    ' |fffd||fffd||fffd|W|fffd|P|fffd|i|fffd|n|fffd|_|fffd|j|fffd||fffd||fffd|Z|fffd|o|fffd||fffd||fffd||fffd|
    Dim arrayPoint(4, 2)    As Single   ' |fffd||fffd||fffd|W|fffd|i|fffd|[|fffd|z|fffd||fffd|
    With sheet.Range(startCell)
        If onSpecialS Then
            arrayPoint(0, 0) = .Left
        Else
            arrayPoint(0, 0) = .Left + .width
        End If
        arrayPoint(0, 1) = .Top + (.Height / 2)
    End With
    
    If Range(startCell).Column < Range(endCell).Column Or onSpecialE Then
        pointMAX = 2
        
        ' |fffd||fffd||fffd|W|fffd|Q|fffd||fffd||fffd|Z|fffd|o|fffd||fffd||fffd||fffd|
        With sheet.Range(endCell)
            arrayPoint(1, 0) = .Left + OFFSET
            arrayPoint(1, 1) = arrayPoint(0, 1)
        End With
        
        ' |fffd||fffd||fffd|W|fffd|R|fffd|i|fffd|I|fffd|_|fffd|j|fffd||fffd||fffd|Z|fffd|o|fffd||fffd||fffd||fffd|
        If Range(startCell).Row < Range(endCell).Row Then
            With sheet.Range(endCell)
                arrayPoint(2, 0) = arrayPoint(1, 0)
                arrayPoint(2, 1) = .Top
            End With
        Else
            With sheet.Range(endCell)
                arrayPoint(2, 0) = arrayPoint(1, 0)
                arrayPoint(2, 1) = .Top + .Height - 1
            End With
        End If
    Else
        pointMAX = 3
        
        ' |fffd||fffd||fffd|W|fffd|Q|fffd||fffd||fffd|Z|fffd|o|fffd||fffd||fffd||fffd|
        With sheet.Range(endCell).OFFSET(, -1)
            arrayPoint(1, 0) = .Left + (.width / 2)
            arrayPoint(1, 1) = arrayPoint(0, 1)
        End With
        
        ' |fffd||fffd||fffd|W|fffd|R|fffd||fffd||fffd|Z|fffd|o|fffd||fffd||fffd||fffd|
        With sheet.Range(endCell).OFFSET(, -1)
            arrayPoint(2, 0) = arrayPoint(1, 0)
            arrayPoint(2, 1) = .Top + (.Height / 2)
        End With
        
        ' |fffd||fffd||fffd|W|fffd|S|fffd|i|fffd|I|fffd|_|fffd|j|fffd||fffd||fffd|Z|fffd|o|fffd||fffd||fffd||fffd|
        With sheet.Range(endCell)
            arrayPoint(3, 0) = .Left
            arrayPoint(3, 1) = .Top + (.Height / 2)
        End With
    End If

    ' |fffd|^|fffd|X|fffd|N|fffd|p|fffd|X|fffd||fffd||fffd|o|fffd||342||fffd||fffd||fffd|
    Dim i                   As Long
    With sheet.Shapes.BuildFreeform(msoEditingAuto, arrayPoint(0, 0), arrayPoint(0, 1))
        For i = 1 To pointMAX
            .AddNodes msoSegmentLine, msoEditingAuto, arrayPoint(i, 0), arrayPoint(i, 1)
        Next
        .ConvertToShape.Select
    End With
    
    ' |fffd|^|fffd|X|fffd|N|fffd||fffd||fffd||fffd||fffd|N|fffd||30f||fffd||fffd||fffd||fffd||fffd||fffd|R|fffd|s|fffd|[|fffd||fffd||fffd||fffd|
    Dim linkName            As String
    linkName = "TaskLink"
    ThisWorkbook.Worksheets(SHT_DATALIST).Shapes(linkName).PickUp
    
    ' |fffd|^|fffd|X|fffd|N|fffd||fffd||fffd||fffd||fffd|N|fffd||fffd||fffd||10d90||fffd||fffd||fffd||fffd||103|f|fffd|t|fffd|H|fffd||fffd||fffd|g|fffd||fffd||fffd||fffd||fffd||fffd||752||80b7||fffd||fffd|
    linkName = linkName & GetUniqueNumber
    With Selection.ShapeRange
        .Apply
        .Name = linkName
    End With
    
    ' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|^|fffd|X|fffd|N|fffd||fffd||fffd||fffd||fffd|N|fffd||243|C|fffd|x|fffd||fffd||fffd|g|fffd||fffd|o|fffd|^|fffd||fffd||fffd||fffd|
    sheet.Shapes(linkName).OnAction = "TaskLinkClick"
    
End Sub

Function CheckInPLine(ByVal sheet As Worksheet, ByVal cell As String) As Boolean

    Dim oName           As Object   ' Name|fffd|I|fffd|u|fffd|W|fffd|F|fffd|N|fffd|g|fffd||fffd||fffd||fffd||fffd|p
    Dim isFind          As Boolean  ' |fffd||fffd||fffd||fffd||fffd|t|fffd||fffd||fffd|O
    Dim searchRange     As String
    
    ' |fffd|V|fffd|[|fffd|g|fffd||fffd||fffd||fffd|NAME|fffd|I|fffd|u|fffd|W|fffd|F|fffd|N|fffd|g|fffd||fffd||fffd||fffd||fffd||210||fffd||fffd|`|fffd||fffd||348||343|I|fffd|u|fffd|W|fffd|F|fffd|N|fffd|g|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
    For Each oName In sheet.Names
        If InStr(1, oName.Name, NM_PL) > 0 Then
            ' |fffd||fffd||fffd||fffd||fffd||153|n|fffd||fffd||fffd||a0bd||fffd|Z|fffd||fffd||fffd||fffd||fffd||fffd||210||fffd||fffd|`|fffd||fffd||348||353||fffd||fffd||fffd||fffd|`|fffd|F|fffd|b|fffd|N|fffd||fffd||fffd||fffd|
            If Application.Intersect(Range(sheet.Names(NM_PL).Value), Range(cell)) Is Nothing Then
                isFind = False
            Else
                isFind = True
            End If
            
            Exit For
        End If
    Next
    
    CheckInPLine = isFind
    
End Function

Function GetConvertRow(ByVal sheet As Worksheet, ByVal cell As String) As Long

    Dim targetIDX           As Long
    Dim arrayStartTaskRow() As Long
    
    ' |fffd|e|fffd|^|fffd|X|fffd|N|fffd||30a|J|fffd|n|fffd|s|fffd||fffd|z|fffd||fffd||24a|i|fffd|[|fffd||fffd||fffd||fffd|
    arrayStartTaskRow = GetTaskStartRow(sheet, False)
    
    ' |fffd||fffd||fffd||fffd||fffd||30d|s|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|^|fffd|X|fffd|N|fffd||fffd||fffd|i|fffd|[|fffd||fffd||fffd||a0bd||fffd|z|fffd||fffd|Y|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||7c2||fffd|
    targetIDX = GetArrayIndex(arrayStartTaskRow, Range(cell).Row)
    
    ' cell|fffd||fffd||fffd||702||702||fffd||fffd|^|fffd|X|fffd|N|fffd||310||64ea||fffd|s|fffd||fffd||50b|p|fffd||fffd||fffd||fffd|
    If targetIDX < 0 Then
        GetConvertRow = 0
    Else
        GetConvertRow = arrayStartTaskRow(targetIDX)
    End If
    
End Function

Function GetTaskStartRow(ByRef canvasSheet As Worksheet, Optional ByVal rowCheck As Boolean) As Long()

    Dim i               As Long
    Dim j               As Long
    Dim areaCount       As Long
    Dim itemCount       As Long
    Dim arrayComment()  As Long
    Dim topTaskRow      As Long
    Dim arrayIndexMAX   As Long
    Dim topPLRow        As Long
    Dim bottomPLRow     As Long
    Dim currentRow      As Long
    Dim consistRowMAX   As Long
    Dim commentLine     As String
    Dim oWorkName       As Object
    Dim isSet           As Boolean
    Dim isInclude       As Boolean
    
    ' |fffd||fffd||fffd|[|fffd|N|fffd|V|fffd|[|fffd|g|fffd||253|o|fffd|^|fffd||fffd||fffd||fffd||102||fffd||fffd||fffd|NAMES|fffd|I|fffd|u|fffd|W|fffd|F|fffd|N|fffd|g|fffd||fffd||fffd||fffd||fffd|X|fffd|g|fffd||253|o|fffd|^|fffd||fffd||fffd||fffd|
    commentLine = ""
    For Each oWorkName In canvasSheet.Names
        ' NAMES|fffd|I|fffd|u|fffd|W|fffd|F|fffd|N|fffd|g|fffd||fffd||fffd|o|fffd|^|fffd||fffd||fffd||fffd||102||fffd||fffd||fffd||390||752||fffd|l|fffd||fffd||fffd||64fe||fffd||fffd||fffd||fffd|
        ' NAMES|fffd|I|fffd|u|fffd|W|fffd|F|fffd|N|fffd|g|fffd||14f||fffd||fffd||fffd||fffd||fffd|U|fffd||856a||fffd||fffd||fffd||fffd|
        If InStr(1, oWorkName.Name, NM_SL) > 0 Then
            For i = 1 To Range(oWorkName).Rows.Count
                commentLine = commentLine & "," & Range(oWorkName).OFFSET(i - 1).Row
            Next
        ElseIf InStr(1, oWorkName.Name, NM_TT) > 0 Then
            topTaskRow = Range(oWorkName.Value).Row
            consistRowMAX = Range(oWorkName.Value).Rows.Count
        ElseIf InStr(1, oWorkName.Name, NM_PL) > 0 Then
            topPLRow = Range(oWorkName.Value).Row
            bottomPLRow = topPLRow + Range(oWorkName.Value).Rows.Count - 1
        End If
    Next
    
    ' |fffd|]|fffd||fffd||fffd||203|J|fffd||fffd||fffd|}|fffd||fffd||fffd||d3dc||fffd||fffd||fffd||112||fffd||fffd|o|fffd|f|fffd|[|fffd|^|fffd||fffd||50b|p|fffd||fffd||fffd||fffd|
    If commentLine <> "" Then
        commentLine = Mid(commentLine, 2)
        arrayComment = CSVtoArray(commentLine)
    End If

    ' |fffd|^|fffd|X|fffd|N|fffd||348||342||30d|s|fffd|z|fffd||fffd|p|fffd|C|fffd||fffd||fffd|f|fffd|b|fffd|N|fffd|X|fffd||fffd||fffd|Z|fffd|o|fffd||fffd||fffd||fffd|
    arrayIndexMAX = ((bottomPLRow - topTaskRow) + 1) / consistRowMAX
    
    ' |fffd|^|fffd|X|fffd|N|fffd||fffd||fffd||30a|J|fffd|n|fffd|s|fffd||fffd||fffd|i|fffd|[|fffd||fffd||fffd||fffd|z|fffd||fffd||fffd||fffd||112||fffd|`|fffd||fffd||fffd||fffd|
    ReDim arrayConvert(arrayIndexMAX) As Long
    
    ' |fffd|e|fffd||fffd|Y|fffd||fffd||fffd||fffd||fffd||30f||fffd||fffd||fffd||fffd||fffd|
    currentRow = topTaskRow
    i = 0
    itemCount = 0
    areaCount = Selection.Areas.Count
    
    ' |fffd||64ea||fffd|^|fffd|X|fffd|N|fffd|s|fffd||fffd||fffd||fffd|I|fffd||fffd||fffd|s|fffd||702||14c|J|fffd||fffd||502||fffd|
    Do While currentRow <= bottomPLRow
        isSet = False
        If commentLine = "" Then                        ' |fffd|R|fffd||fffd||fffd||fffd||fffd|g|fffd|s|fffd||fffd||fffd||fffd||fffd||742||fffd||fffd||202||fffd||fffd||a347|
            isSet = True
        Else                                            ' |fffd|R|fffd||fffd||fffd||fffd||fffd|g|fffd|s|fffd||fffd||fffd||fffd||fffd||742||fffd||fffd||fffd||a347|
            If i <= UBound(arrayComment) Then           ' |fffd|R|fffd||fffd||fffd||fffd||fffd|g|fffd|s|fffd||317|v|fffd|f|fffd||fffd||fffd||209||fffd||fffd||202||73c8||fffd||fffd||fffd||fffd||fffd|s
                If currentRow = arrayComment(i) Then    ' |fffd|J|fffd||fffd||fffd||fffd||fffd|g|fffd|s|fffd||183|R|fffd||fffd||fffd||fffd||fffd|g|fffd|s|fffd||fffd||fffd||fffd|v|fffd||30e||fffd||fffd||343|X|fffd|L|fffd|b|fffd|v|fffd||fffd||fffd||fffd|
                    currentRow = currentRow + 1
                    i = i + 1
                ElseIf currentRow < arrayComment(i) Then
                    isSet = True
                Else
                    i = i + 1
                End If
            Else
                isSet = True
            End If
        End If
        
        ' |fffd|^|fffd|X|fffd|N|fffd|J|fffd|n|fffd|s|fffd||fffd|z|fffd||fffd||24a|i|fffd|[|fffd||fffd||fffd||fffd|
        If isSet Then
            If rowCheck Then
                ' |fffd||a287||fffd||fffd||fffd||fffd||fffd|N|fffd||fffd||fffd||351|I|fffd||fffd||fffd|s|fffd||302||743||fffd||fffd||fffd||fffd|N|fffd||38f||6c2||242||fffd||fffd||fffd|
                isInclude = False
                ' |fffd||fffd||fffd||fffd||fffd|N|fffd|s|fffd||fffd||fffd|I|fffd||fffd||348||342||255||fffd||702||fffd||fffd||fffd||102||fffd||fffd||90a9||fffd|`|fffd|F|fffd|b|fffd|N|fffd||fffd||fffd||fffd|
                For j = 1 To areaCount
                    If Application.Intersect((Selection.Areas(j)), Rows(currentRow)) Is Nothing Then
                    Else
                        isInclude = True
                        Exit For
                    End If
                Next
                If isInclude Then
                    arrayConvert(itemCount) = currentRow
                    itemCount = itemCount + 1
                End If
            Else
                arrayConvert(itemCount) = currentRow
                itemCount = itemCount + 1
            End If
            currentRow = currentRow + consistRowMAX
        End If
    Loop
        
    ' |fffd|z|fffd||fffd||fffd||50b|p|fffd||fffd||fffd||fffd|
    ReDim Preserve arrayConvert(itemCount)
    GetTaskStartRow = arrayConvert

GetSkipRowsExit:

End Function

Function CSVtoArray(ByVal CSV As String) As Long()
    Dim i               As Long
    Dim lMAX            As Long
    Dim arrayReturn()   As Long
    Dim arrayWork       As Variant
    
    ' CSV|fffd|f|fffd|[|fffd|^|fffd|`|fffd|F|fffd|b|fffd|N
    If CSV = "" Then Exit Function
    
    ' CSV to Array
    arrayWork = Split(CSV, ",")
    lMAX = UBound(arrayWork)
    
    ' |fffd|f|fffd|[|fffd|^|fffd||fffd||fffd||fffd|1|fffd||fffd||fffd||30f||a347||fffd||343|\|fffd|[|fffd|g|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|{|fffd||fffd||fffd||fffd||fffd||50b|p|fffd|p|fffd|z|fffd||fffd||24a|i|fffd|[|fffd||fffd||fffd||fffd|
    If lMAX = 0 Then
        ReDim arrayReturn(1)
        arrayReturn(0) = arrayWork(0)
    Else
        With ThisWorkbook.Worksheets(SHT_DATALIST)
            ' |fffd|\|fffd|[|fffd|g|fffd||fffd||fffd|[|fffd|N|fffd||308||fffd|N|fffd||fffd||fffd|A
            .Range("G:G").Clear
            
            ' |fffd|f|fffd|[|fffd|^|fffd||fffd||fffd||fffd||fffd|[|fffd|N|fffd|V|fffd|[|fffd|g|fffd||303|\|fffd|[|fffd|g|fffd||308||fffd||24f|o|fffd||342||fffd||fffd||fffd|
            For i = 0 To lMAX
                .Range("G2").OFFSET(i) = arrayWork(i)
            Next
            
            ' |fffd||fffd||fffd||fffd||fffd||243|\|fffd|[|fffd|g|fffd||fffd||fffd||fffd|
            ReDim arrayReturn(lMAX + 1)
            .Range("G2", .Range("G2").OFFSET(lMAX)).Sort Key1:=.Range("G2"), Order1:=xlAscending
            
            ' |fffd|\|fffd|[|fffd|g|fffd||3c3|f|fffd|[|fffd|^|fffd||fffd||50b|p|fffd|p|fffd|z|fffd||fffd||24a|i|fffd|[|fffd||fffd||fffd||fffd|
            For i = 0 To lMAX
                arrayReturn(i) = .Range("G2").OFFSET(i).Value
            Next
        End With
    End If
    
    ' |fffd|z|fffd||fffd||fffd||50b|p|fffd||fffd||fffd||fffd|
    CSVtoArray = arrayReturn
    
End Function

Sub DrawTaskLinks(ByVal sheet As Worksheet)

    ' |fffd|`|fffd||fffd|V|fffd|[|fffd|g|fffd||20a|O|fffd||34f||fffd||fffd||fffd||fffd||fffd||fffd|I|fffd||fffd||fffd||fffd||fffd||fffd|
    Application.StatusBar = ""
    If Not IsCanvas(sheet) Then
        Call OutMessage("|fffd|`|fffd||fffd|V|fffd|[|fffd|g|fffd||fffd||fffd||fffd||fffd||82||fffd||fffd||fffd||702||fffd||fffd||fffd|B" & vbCrLf & "|fffd|`|fffd||fffd|V|fffd|[|fffd|g|fffd||fffd||752||80b5||fffd||102||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|B", vbOKOnly + vbExclamation, "|fffd||a287||fffd||fffd||fffd||fffd||fffd|N|fffd||752||fffd|")
        Exit Sub
    End If
    
    ' |fffd||fffd||fffd||fffd||fffd|}|fffd|~
    Call SuppressUpdates(True)
    
    ' shape|fffd|`|fffd||639e||fffd||24d||fffd||fffd|W|fffd||fffd||fffd||fffd||fffd||a0bd||fffd||60a4||fffd||255|\|fffd||fffd||fffd||fffd||fffd||fffd||90b1||fffd||182||fffd|h|fffd||fffd||fffd||38f||fffd|
    Dim svZoom                  As Variant  ' windows|fffd||fffd|zoom|fffd|v|fffd||fffd||fffd|p|fffd|e|fffd|B|fffd||fffd||6d1||fffd||fffd||fffd||fffd||fffd||3d0||fffd|
    svZoom = ActiveWindow.Zoom
    ActiveWindow.Zoom = 100
    
    ' |fffd|I|fffd||fffd||fffd||fffd||fffd||fffd||fffd|s|fffd||310||64ea||fffd||18d||14f|I|fffd||30d|s|fffd||50d||fffd||fffd||fffd||fffd||64fe||fffd||fffd||fffd||fffd|
    Dim sSelectRow              As Long     ' |fffd|I|fffd||fffd||fffd||fffd||fffd||fffd||fffd|s|fffd||348||342||310||64ea||fffd|s|fffd||50d||fffd|
    Dim eSelectRow              As Long     ' |fffd|I|fffd||fffd||fffd||fffd||fffd||fffd||fffd|s|fffd||348||342||30d||14f|I|fffd|s|fffd||50d||fffd|
    With Selection
        sSelectRow = .Areas(1).Row
        eSelectRow = .Areas(.Areas.Count).Row + .Areas(.Areas.Count).Rows.Count - 1
    End With
    
    ' |fffd|e|fffd|^|fffd|X|fffd|N|fffd||30a|J|fffd|n|fffd|s|fffd||fffd|z|fffd||fffd||24a|i|fffd|[|fffd||fffd||fffd||fffd|
    Dim arrayIndexMAX           As Long
    Dim arrayStartTaskRow()     As Long     ' |fffd|^|fffd|X|fffd|N|fffd||30a|J|fffd|n|fffd|s|fffd|i|fffd|[|fffd|p|fffd|z|fffd||fffd|
    arrayStartTaskRow = GetTaskStartRow(sheet, True)
    arrayIndexMAX = UBound(arrayStartTaskRow) - 1
    
    ' |fffd||64ea||fffd|s|fffd||315||2433|
    If sSelectRow < arrayStartTaskRow(0) Then sSelectRow = arrayStartTaskRow(0)
    ' |fffd||14f|I|fffd|s|fffd||315||2433|
    If eSelectRow > arrayStartTaskRow(arrayIndexMAX) Then eSelectRow = arrayStartTaskRow(arrayIndexMAX)
    
    
    
    ' |fffd|`|fffd||fffd|V|fffd|[|fffd|g|fffd||313|o|fffd|^|fffd||fffd||fffd||fffd||fffd||64fe||fffd||fffd||fffd||fffd|
    Dim canvas_info         As tCANVAS
    canvas_info = GetCanvasInfo(sheet.Name)
    
    
    
    ' |fffd|`|fffd||fffd|V|fffd|[|fffd|g|fffd||310||64ea||fffd|^|fffd|X|fffd|N|fffd|s|fffd||fffd||fffd||64fe||fffd||fffd||fffd||fffd|
    Dim topTaskRow              As Long     ' |fffd||64ea||fffd|^|fffd|X|fffd|N|fffd|s|fffd|i|fffd|[|fffd||3d0||fffd|
    topTaskRow = canvas_info.top_task.Row
    
    ' |fffd|^|fffd|X|fffd|N|fffd|I|fffd||fffd||fffd|\|fffd||fffd||fffd||fffd||fffd||fffd||fffd|I|fffd|t|fffd|Z|fffd|b|fffd|g|fffd||fffd||fffd|Z|fffd|o|fffd||fffd||fffd||fffd|
    Dim spOffset                As Long     ' |fffd||fffd||fffd|t|fffd||702||142||303|I|fffd|t|fffd|Z|fffd|b|fffd|g|fffd|i|fffd|n|fffd|_|fffd|j
    Dim eDateofSP               As Range    ' |fffd|n|fffd|_|fffd||30f|I|fffd||fffd||fffd|\|fffd||fffd||fffd|
    Set eDateofSP = canvas_info.top_enddate
    
    spOffset = Abs(eDateofSP.Row - topTaskRow)
    
    ' |fffd|^|fffd|X|fffd|N|fffd|J|fffd|n|fffd|\|fffd||fffd||fffd||fffd||fffd||fffd||fffd|I|fffd|t|fffd|Z|fffd|b|fffd|g|fffd||fffd||fffd|Z|fffd|o|fffd||fffd||fffd||fffd|
    Dim epOffset                As Long     ' |fffd||fffd||fffd|t|fffd||702||142||303|I|fffd|t|fffd|Z|fffd|b|fffd|g|fffd|i|fffd|I|fffd|_|fffd|j
    Dim sDateofEP               As Range    ' |fffd|I|fffd|_|fffd||30a|J|fffd|n|fffd|\|fffd||fffd||fffd|
    Set sDateofEP = canvas_info.top_startdate
    
    
    epOffset = Abs(sDateofEP.Row - topTaskRow)
    
    ' |fffd|J|fffd|n|fffd|s|fffd||fffd||fffd||1c2||303|^|fffd|X|fffd|N|fffd||24a|Y|fffd||fffd||fffd||fffd||fffd||90a9||fffd||fffd||fffd||7c2||fffd|
    Dim sIDX                    As Long     ' |fffd|z|fffd||fffd||313|Y|fffd||fffd||fffd|i|fffd|J|fffd|n|fffd|^|fffd|X|fffd|N|fffd||308||292|u|fffd|j
    sIDX = GetArrayIndex(arrayStartTaskRow, sSelectRow)
    
    ' |fffd|I|fffd||fffd||fffd|s|fffd||fffd||fffd||1c2||303|^|fffd|X|fffd|N|fffd||24a|Y|fffd||fffd||fffd||fffd||fffd||90a9||fffd||fffd||fffd||7c2||fffd|
    Dim eIDX                    As Long     ' |fffd|z|fffd||fffd||313|Y|fffd||fffd||fffd|i|fffd|I|fffd||fffd||fffd|^|fffd|X|fffd|N|fffd||308||292|u|fffd|j
    eIDX = GetArrayIndex(arrayStartTaskRow, eSelectRow)
    
    ' |fffd|Y|fffd||fffd||fffd|s|fffd||fffd||fffd||fffd||fffd||82||fffd||fffd||fffd||202||fffd||fffd||fffd||fffd||fffd||fffd||a347||fffd||34f||fffd||fffd||fffd||fffd||fffd||fffd|X|fffd|L|fffd|b|fffd|v|fffd||fffd||fffd||fffd|
    If sIDX < 0 Or eIDX < 0 Then GoTo DrawTaskLinksExit
    
    ' |fffd|v|fffd||fffd||fffd|W|fffd|F|fffd|N|fffd|g|fffd||fffd||fffd||502||fffd||fffd||64fe||fffd||fffd||fffd||fffd|
    Dim Range_Cal_S             As Range    ' |fffd|v|fffd||fffd||fffd|W|fffd|F|fffd|N|fffd|g|fffd||fffd||fffd||502||30a|J|fffd|n|fffd||fffd|
    Dim Range_Cal_E             As Range    ' |fffd|v|fffd||fffd||fffd|W|fffd|F|fffd|N|fffd|g|fffd||fffd||fffd||502||30f|I|fffd||fffd||fffd||fffd|
    
    If canvas_info.prj_period Is Nothing Then Exit Sub
    
    With canvas_info.prj_period
        Set Range_Cal_S = .Item(1)          ' |fffd|v|fffd||fffd||fffd|W|fffd|F|fffd|N|fffd|g|fffd||fffd||fffd||502||30a|J|fffd|n|fffd||fffd|iRANGE|fffd|R|fffd||fffd||fffd|N|fffd|V|fffd||fffd||fffd||fffd||fffd||310||64ea||fffd|j
        Set Range_Cal_E = .Item(.Count)     ' |fffd|v|fffd||fffd||fffd|W|fffd|F|fffd|N|fffd|g|fffd||fffd||fffd||502||30f|I|fffd||fffd||fffd||fffd|
    End With
    
    ' |fffd|v|fffd||fffd||fffd|W|fffd|F|fffd|N|fffd|g|fffd||fffd||fffd||502||fffd|z|fffd||fffd||24a|i|fffd|[|fffd||fffd||fffd||fffd|
    Dim rangeWorkPeriod         As Range    ' |fffd|v|fffd||fffd||fffd|W|fffd|F|fffd|N|fffd|g|fffd||fffd||fffd||502||314||348||fffd|
    Dim arrayWorkPeriod         As Variant  ' |fffd|v|fffd||fffd||fffd|W|fffd|F|fffd|N|fffd|g|fffd||fffd||fffd||502||313||fffd||fffd|t|fffd|i|fffd|[|fffd|z|fffd||fffd|
    Set rangeWorkPeriod = sheet.Range(Range_Cal_S.Address, Range_Cal_E.Address)
    If rangeWorkPeriod.Columns.Count > 1 Then
        arrayWorkPeriod = rangeWorkPeriod
    Else
        ReDim arrayWorkPeriod(1, 1) As Variant
        arrayWorkPeriod(1, 1) = rangeWorkPeriod
    End If
    
    ' |fffd||fffd|v|fffd|f|fffd||50d||fffd||fffd||30d||151||fffd|l|fffd||fffd||fffd||64fe|
    Dim arrayWorkPeriodArg()    As Variant  ' |fffd||fffd||fffd||fffd||fffd|p|fffd||303|v|fffd||fffd||fffd|W|fffd|F|fffd|N|fffd|g|fffd||fffd||fffd||502||313||fffd||fffd|t|fffd|i|fffd|[|fffd|z|fffd||fffd|
    Dim arrayWorkPeriodMax      As Long     ' |fffd|v|fffd||fffd||fffd|W|fffd|F|fffd|N|fffd|g|fffd||fffd||fffd||502||313||fffd||fffd|t|fffd|i|fffd|[|fffd|z|fffd||fffd||151||fffd|Y|fffd||fffd||fffd||fffd|
    arrayWorkPeriodMax = UBound(arrayWorkPeriod, 2)
    arrayWorkPeriodArg = arrayWorkPeriod
    
    ' |fffd|v|fffd||fffd||fffd|W|fffd|F|fffd|N|fffd|g|fffd||fffd||fffd||502||30a|J|fffd|n|fffd||fffd||fffd||18f|I|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||7c2||fffd|
    Dim pjPeriodDateS           As Date     ' |fffd|v|fffd||fffd||fffd|W|fffd|F|fffd|N|fffd|g|fffd||fffd||fffd||50a|J|fffd|n|fffd||fffd|
    Dim pjPeriodDateE           As Date     ' |fffd|v|fffd||fffd||fffd|W|fffd|F|fffd|N|fffd|g|fffd||fffd||fffd||50f|I|fffd||fffd||fffd||fffd|
    pjPeriodDateS = Format(Range_Cal_S.Value, DATE_FORM)
    pjPeriodDateE = Format(Range_Cal_E.Value, DATE_FORM)
    
    ' |fffd|J|fffd|n|fffd|^|fffd|X|fffd|N|fffd||fffd||fffd||fffd|I|fffd||fffd||fffd|^|fffd|X|fffd|N|fffd|||fffd|P|fffd||702||143|^|fffd|X|fffd|N|fffd||fffd||fffd||fffd||fffd|N|fffd||fffd|`|fffd||60b7||fffd||fffd|
    Dim i                       As Long
    Dim onSpecialS              As Boolean  ' |fffd||fffd||fffd||282||203||fffd||fffd||fffd||fffd|N|fffd|J|fffd|n|fffd||fffd||fffd|W|fffd||242||fffd||fffd||fffd|t|fffd||fffd||fffd|O
    Dim onSpecialE              As Boolean  ' |fffd||fffd||fffd||282||203||fffd||fffd||fffd||fffd|N|fffd|I|fffd||fffd||fffd||fffd||fffd|W|fffd||242||fffd||fffd||fffd|t|fffd||fffd||fffd|O
    Dim convColumn              As Long     ' X|fffd||fffd||fffd|W|fffd||fffd||fffd||fffd||50d||fffd|
    Dim taskDateSP              As String   ' |fffd|n|fffd|_|fffd|^|fffd|X|fffd|N|fffd||30a|J|fffd|n|fffd||fffd|
    Dim taskDateEP              As String   ' |fffd|I|fffd|_|fffd|^|fffd|X|fffd|N|fffd||30f|I|fffd||fffd||fffd||fffd|
    Dim spCell                  As String   ' |fffd|n|fffd|_|fffd||303|Z|fffd||fffd|
    Dim epCell                  As String   ' |fffd|I|fffd|_|fffd||303|Z|fffd||fffd|
    
    For i = sIDX To (eIDX - 1)
        ' |fffd|I|fffd||fffd||fffd||fffd||fffd|t|fffd|i|fffd|n|fffd|_|fffd|j|fffd||317||fffd||50d||fffd||fffd||fffd||fffd||fffd||fffd||7c2||fffd|
        taskDateSP = sheet.Range(Cells(arrayStartTaskRow(i), eDateofSP.Column), Cells(arrayStartTaskRow(i), eDateofSP.Column)).OFFSET(spOffset)
        ' |fffd||fffd||fffd|t|fffd||fffd||fffd||fffd||fffd||752||fffd||30f||a347||fffd||34f||fffd||fffd||fffd||fffd||38f||6ca|O|fffd||182||fffd||fffd||fffd|
        If taskDateSP = "" Then
            spCell = ""
        Else
            ' |fffd|n|fffd|_|fffd||317||fffd||50d||fffd||fffd||fffd||fffd||fffd||fffd||7c2||fffd|
            convColumn = GetCalCol(arrayWorkPeriodArg, taskDateSP, 1, arrayWorkPeriodMax)
            If convColumn > 0 Then
                convColumn = convColumn + Range_Cal_S.Column - 1
                spCell = Range(Cells(arrayStartTaskRow(i), convColumn), Cells(arrayStartTaskRow(i), convColumn)).Address
            Else
                spCell = ""
            End If
        End If
        
        ' |fffd||fffd||fffd|t|fffd||fffd||fffd||fffd||fffd||752||fffd||30f||a347||fffd||34f||fffd||fffd||fffd||fffd||38f||6ca|O|fffd||182||fffd||fffd||fffd|
        If spCell <> "" Then
            ' |fffd|J|fffd|n|fffd||fffd||fffd|t|fffd|i|fffd|I|fffd|_|fffd|j|fffd||317||fffd||50d||fffd||fffd||fffd||fffd||fffd||fffd||7c2||fffd|
            taskDateEP = sheet.Range(Cells(arrayStartTaskRow(i + 1), sDateofEP.Column), Cells(arrayStartTaskRow(i + 1), sDateofEP.Column)).OFFSET(epOffset)
            ' |fffd||fffd||fffd|t|fffd||fffd||fffd||fffd||fffd||752||fffd||30f||a347||fffd||34f||fffd||fffd||fffd||fffd||38f||6ca|O|fffd||182||fffd||fffd||fffd|
            If taskDateEP <> "" Then
                ' |fffd|I|fffd|_|fffd||317||fffd||50d||fffd||fffd||fffd||fffd||fffd||fffd||7c2||fffd|
                convColumn = GetCalCol(arrayWorkPeriodArg, taskDateEP, 1, arrayWorkPeriodMax)
                If convColumn > 0 Then
                    convColumn = convColumn + Range_Cal_S.Column - 1
                    epCell = Range(Cells(arrayStartTaskRow(i + 1), convColumn), Cells(arrayStartTaskRow(i + 1), convColumn)).Address
                    
                    ' |fffd|I|fffd|_|fffd||313||fffd||fffd|t|fffd|`|fffd|F|fffd|b|fffd|N|fffd|iTRUE:|fffd|G|fffd||fffd||fffd|[|fffd|j
                    If Not IsErrorEndDate(CDate(taskDateEP), pjPeriodDateS, pjPeriodDateE) Then
                        onSpecialS = False
                        onSpecialE = False
                        ' |fffd||fffd|s|fffd|^|fffd|X|fffd|N|fffd||30f|I|fffd||fffd||fffd||fffd||fffd||fffd||fffd|v|fffd||fffd||fffd|W|fffd|F|fffd|N|fffd|g|fffd||fffd||fffd||50a|J|fffd|n|fffd||fffd||fffd||fffd||fffd|O|fffd||242||202||fffd||a347||fffd||343||fffd||fffd||fffd||fffd|N|fffd||30a|J|fffd|n|fffd||fffd||fffd|W|fffd||fffd||fffd|Z|fffd||fffd||fffd||30d||fffd||fffd||242||fffd||fffd||fffd|
                        If CDate(taskDateSP) < pjPeriodDateS Then onSpecialS = True
                        ' |fffd||3471||fffd|^|fffd|X|fffd|N|fffd||30a|J|fffd|n|fffd||fffd||fffd||fffd||fffd|v|fffd||fffd||fffd|W|fffd|F|fffd|N|fffd|g|fffd||fffd||fffd||50a|J|fffd|n|fffd||fffd||fffd||193||fffd||fffd||fffd||fffd||fffd||fffd||a347||fffd||343||fffd||fffd||fffd||fffd|N|fffd||30f|I|fffd||fffd||fffd||fffd||fffd|W|fffd||fffd||fffd|Z|fffd||fffd||fffd||30f||fffd||242||fffd||fffd||fffd|
                        If CDate(taskDateEP) = pjPeriodDateS Then onSpecialE = True
                        
                        ' |fffd|^|fffd|X|fffd|N|fffd||fffd||fffd||fffd||fffd|N|fffd||fffd|Name|fffd|I|fffd|u|fffd|W|fffd|F|fffd|N|fffd|g|fffd||fffd|o|fffd|^|fffd||fffd||fffd||fffd|
                        Call AddLinkName(sheet, Mid(spCell, InStrRev(spCell, "$") + 1), Mid(epCell, InStrRev(epCell, "$") + 1))
                        
                        ' |fffd|^|fffd|X|fffd|N|fffd||fffd||fffd||fffd||fffd|N|fffd||fffd|`|fffd||60b7||fffd||fffd|
                        Call DrawTaskLink(sheet, spCell, epCell, onSpecialS, onSpecialE)
                    End If
                End If
            End If
        End If
    Next
    
DrawTaskLinksExit:
    
    ' |fffd||14f|I|fffd|Z|fffd||fffd||fffd||fffd|I|fffd||fffd||fffd||fffd||fffd||fffd|
    If epCell <> "" Then Range(epCell).Select
    
    ' |fffd|\|fffd||fffd||fffd|{|fffd||fffd||fffd||fffd||7c2||fffd|
    ActiveWindow.Zoom = svZoom
    
    ' |fffd|}|fffd|~|fffd||fffd||fffd||fffd|
    Call SuppressUpdates(False)
    
End Sub

Function GetArrayIndex(arrayStartTaskRow() As Long, ByVal targetRow As Long) As Long
    Dim isFind          As Boolean
    Dim i               As Long
    Dim arrayIndexMAX   As Long
    
    ' |fffd|e|fffd|^|fffd|X|fffd|N|fffd||30a|J|fffd|n|fffd|s|fffd||fffd|z|fffd||fffd||24a|i|fffd|[|fffd||fffd||fffd||fffd|
    arrayIndexMAX = UBound(arrayStartTaskRow) - 1
    
    ' |fffd||fffd||fffd||fffd||fffd||157|^|fffd||fffd||fffd||fffd||a0bd||fffd|s|fffd||50d||fffd||fffd||fffd||fffd||1c2||303|^|fffd|X|fffd|N|fffd||24a|Y|fffd||fffd||fffd||fffd||fffd||90a9||fffd||fffd||fffd||7c2||102||fffd||fffd||30e||fffd||fffd||313|Y|fffd||fffd||fffd||fffd||fffd||fffd||50b|p|fffd||fffd||fffd||fffd|
    For i = 0 To arrayIndexMAX
        If targetRow = arrayStartTaskRow(i) Then
            isFind = True
            Exit For
        ElseIf targetRow < arrayStartTaskRow(i) Then
            isFind = True
            If i > 0 Then i = i - 1
            Exit For
        End If
    Next
    
    ' |fffd||fffd||fffd||fffd||fffd||30d|s|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|^|fffd|X|fffd|N|fffd||310||64ea||fffd|s|fffd||fffd||50b|p|fffd||fffd||fffd||fffd|
    If isFind Then
        GetArrayIndex = i
    Else
        GetArrayIndex = -1
    End If

End Function

Function IsErrorEndDate(ByVal end_date As Date, ByVal projectperiod_start_date As Date, ByVal projectperiod_end_date As Date) As Boolean
    ' |fffd|^|fffd|X|fffd|N|fffd||fffd||fffd||fffd||fffd|N|fffd||30f|I|fffd|_|fffd||fffd||fffd|L|fffd||fffd||fffd||fffd||fffd||6c2||fffd||fffd||14ed2||80b7||fffd||fffd|
    IsErrorEndDate = True
    If end_date < projectperiod_start_date Then Exit Function   ' |fffd|I|fffd|_|fffd||fffd||fffd|v|fffd||fffd||fffd|W|fffd|F|fffd|N|fffd|g|fffd||fffd||fffd||50a|J|fffd|n|fffd||fffd|
    If end_date > projectperiod_end_date Then Exit Function     ' |fffd|I|fffd|_|fffd||fffd||fffd|v|fffd||fffd||fffd|W|fffd|F|fffd|N|fffd|g|fffd||fffd||fffd||50f|I|fffd||fffd||fffd||fffd|
    IsErrorEndDate = False

End Function

Sub TaskLinkClick()
    On Error Resume Next
    Application.ScreenUpdating = True
    
    ' |fffd|V|fffd|t|fffd|g|fffd|L|fffd|[|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||102||fffd||fffd||fffd||a347||fffd||34c||3471||fffd|^|fffd|X|fffd|N|fffd||248||693||fffd||fffd||fffd||fffd||fffd|
    Dim on_shift_key        As Boolean
    on_shift_key = False
    If GetAsyncKeyState(vbKeyShift) Then on_shift_key = True    ' |fffd||fffd|s|fffd|Q|fffd||fffd|
    
    Application.StatusBar = ""
    
    ' |fffd|I|fffd||fffd||fffd||fffd||fffd||fffd||fffd|^|fffd|X|fffd|N|fffd||fffd||fffd||fffd||fffd|N|fffd||fffd||fffd||fffd||fffd||182||24e|n|fffd|_|fffd|i|fffd||fffd|s|fffd|^|fffd|X|fffd|N|fffd||303|Z|fffd||fffd||fffd|j|fffd||18f|I|fffd|_|fffd|i|fffd||3471||fffd|^|fffd|X|fffd|N|fffd||303|Z|fffd||fffd||fffd|j|fffd||303|A|fffd|h|fffd||fffd||fffd|X|fffd||fffd||fffd||fffd||fffd||7c2||fffd|
    Dim sheet               As String
    sheet = ActiveSheet.Name
    
    ' |fffd||fffd||fffd||751|I|fffd||fffd||fffd||fffd||fffd||102||fffd||fffd||fffd|^|fffd|X|fffd|N|fffd||fffd||fffd||fffd||fffd|N|fffd||fffd||fffd||fffd|n|fffd|_|fffd||18f|I|fffd|_|fffd||30d||fffd||fffd|W|fffd||fffd||fffd||64fe||fffd||fffd||fffd||90bd||fffd||fffd| ShapeNodes |fffd||fffd||fffd||c42c||fffd||fffd||fffd||fffd|
    Dim tasklink_shape      As Shape
    Dim tasklink_shapenodes As ShapeNodes
    Set tasklink_shape = Worksheets(sheet).Shapes(Application.Caller)   ' Shape|fffd||fffd||fffd||64fe||fffd||fffd||fffd||fffd|
    Set tasklink_shapenodes = tasklink_shape.Nodes                      ' ShapeNodes|fffd||fffd||fffd||64fe||fffd||fffd||fffd||fffd|
    
    ' |fffd|n|fffd|_|fffd||18f|I|fffd|_|fffd||30d||fffd||fffd|W|fffd||fffd||fffd||70bb||fffd||a0bc||fffd||fffd||30d||fffd||fffd|W|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|Z|fffd||fffd||fffd||fffd||fffd||64fe||fffd||fffd||fffd||fffd|
    Dim sp_range_adr        As String
    Dim ep_range_adr        As String
    With tasklink_shapenodes
        sp_range_adr = GetPointToRange(sheet, .Item(1).Points(1, 1), .Item(1).Points(1, 2)).Address
        ep_range_adr = GetPointToRange(sheet, .Item(.Count).Points(1, 1), .Item(.Count).Points(1, 2)).Address
    End With
    
    ' |fffd|o|fffd|H|fffd|Q|fffd||181||fffd||fffd|P|fffd|F|fffd|o|fffd|H|fffd|Q|fffd||181|@|fffd|o|fffd|H|fffd|Q|fffd||181||fffd||fffd|O|fffd|F|fffd|^|fffd|X|fffd|N|fffd||fffd||fffd||fffd||fffd|N|fffd||fffd||fffd||fffd|
    If ThisWorkbook.Worksheets(SHT_DATALIST).Range("M2") = 1 Then
        ' on_shift_key
        ' True : |fffd||fffd|s|fffd|Z|fffd||fffd||fffd|Q|fffd||181|@False : |fffd||3471||fffd|Z|fffd||fffd||fffd|Q|fffd||fffd|
        If on_shift_key Then
            Worksheets(sheet).Range(sp_range_adr).Activate
        Else
            '|fffd||fffd|s|fffd|^|fffd|X|fffd|N|fffd||248||693||fffd||fffd||fffd||fffd||fffd|
            Application.ScreenUpdating = False
            Dim foretask_range  As Range
            Set foretask_range = Worksheets(sheet).Range(sp_range_adr)
            
            ' |fffd|`|fffd||fffd|V|fffd|[|fffd|g|fffd||313|o|fffd|^|fffd||fffd||fffd||fffd||fffd||64fe||fffd||fffd||fffd||fffd|
            Dim canvas_info         As tCANVAS
            canvas_info = GetCanvasInfo(sheet)
        
            ' |fffd|n|fffd|_|fffd||303|^|fffd|X|fffd|N|fffd|I|fffd||fffd||fffd|\|fffd||fffd||fffd||fffd||fffd||fffd||fffd|I|fffd|t|fffd|Z|fffd|b|fffd|g|fffd||fffd||fffd|Z|fffd|o|fffd||fffd||fffd||fffd|
            Dim end_date_column     As Long
            end_date_column = canvas_info.top_enddate.Column
            
            ' |fffd|I|fffd|_|fffd||303|^|fffd|X|fffd|N|fffd|J|fffd|n|fffd|\|fffd||fffd||fffd||fffd||fffd||fffd||fffd|I|fffd|t|fffd|Z|fffd|b|fffd|g|fffd||fffd||fffd|Z|fffd|o|fffd||fffd||fffd||fffd|
            Dim start_date_column   As Long
            start_date_column = canvas_info.top_startdate.Column
            
            ' |fffd|J|fffd|n|fffd|\|fffd||fffd||fffd||fffd||18f|I|fffd||fffd||fffd|\|fffd||fffd||fffd||fffd||303|I|fffd|t|fffd|Z|fffd|b|fffd|g|fffd||fffd||fffd|Z|fffd|o|fffd||fffd||fffd||fffd|
            Dim start_date_offset   As Long
            Dim end_date_offset     As Long
            With canvas_info
                start_date_offset = Abs(.top_startdate.Row - .top_task.Row)
                end_date_offset = Abs(.top_enddate.Row - .top_task.Row)
            End With
            
            Dim shape_name          As Shape
            Dim tmp_range           As Range
            Dim backtask_range_adr  As String
            Dim foretask_end_date   As String
            Dim backtask_start_date As String
            Dim sort_idx            As Long
            sort_idx = 0
            
            ' |fffd|\|fffd|[|fffd|g|fffd||fffd||fffd|[|fffd|N|fffd||308||fffd|N|fffd||fffd||fffd|A
            ThisWorkbook.Worksheets(SHT_DATALIST).Range("W:X").Clear
            
            For Each shape_name In Worksheets(sheet).Shapes
                
                ' |fffd|^|fffd|X|fffd|N|fffd||fffd||fffd||fffd||fffd|N|fffd||30f||a347||fffd||302||74f||fffd||fffd||fffd||fffd||11c4d|s|fffd||fffd||fffd||fffd|
                If Mid(shape_name.Name, 1, 8) = "TaskLink" Then
                    
                    ' |fffd|^|fffd|X|fffd|N|fffd||fffd||fffd||fffd||fffd|N|fffd||30a|J|fffd|n|fffd|Z|fffd||fffd||fffd||fffd|I|fffd||fffd||fffd||fffd||fffd||fffd|
                     Set tmp_range = GetPointToRange(sheet, shape_name.Nodes.Item(1).Points(1, 1), shape_name.Nodes.Item(1).Points(1, 2))
                    
                    ' |fffd|J|fffd|n|fffd|Z|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|N|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||101|A|fffd||fffd||fffd||fffd||fffd||fffd||fffd||742||fffd||fffd||fffd||a347||fffd||343||fffd||fffd|X|fffd|g|fffd||248||a5d7||fffd||fffd||fffd||fffd||fffd||fffd|
                    If Not (Intersect(tmp_range, foretask_range) Is Nothing) Then
                        With shape_name.Nodes
                            ' |fffd||3471||fffd||303|Z|fffd||fffd||fffd|A|fffd|h|fffd||fffd||fffd|X|fffd||fffd||fffd||64fe||fffd||fffd||fffd||fffd|
                            backtask_range_adr = GetPointToRange(sheet, .Item(.Count).Points(1, 1), .Item(.Count).Points(1, 2)).Address
                            backtask_range_adr = Replace(backtask_range_adr, "$", "")
                            
                        End With
                        
                        foretask_end_date = Worksheets(sheet).Cells(Range(sp_range_adr).OFFSET(end_date_offset).Row, end_date_column).Value
                        foretask_end_date = Format(foretask_end_date, DATE_FORM)
                        With frmBackLinks
                            .lblForeEndDate.Caption = "|fffd|@" & foretask_end_date
                            .lblForeTaskCell.Caption = "|fffd|@" & Replace(sp_range_adr, "$", "")
                        End With
                         
                        ' |fffd||3471||fffd|^|fffd|X|fffd|N|fffd||30a|J|fffd|n|fffd||fffd||fffd||fffd||fffd||64fe||fffd||fffd||fffd||fffd|
                        backtask_start_date = Worksheets(sheet).Cells(Range(backtask_range_adr).OFFSET(start_date_offset).Row, start_date_column).Value
                        backtask_start_date = Format(backtask_start_date, DATE_FORM)
                        
                        
                        ' |fffd||3471||fffd|^|fffd|X|fffd|N|fffd||30a|J|fffd|n|fffd||fffd||fffd||183|Z|fffd||fffd||fffd||fffd||fffd|f|fffd|[|fffd|^|fffd|V|fffd|[|fffd|g|fffd||303|\|fffd|[|fffd|g|fffd||308||fffd||24a|i|fffd|[|fffd||fffd||fffd||fffd|
                        With ThisWorkbook.Worksheets(SHT_DATALIST)
                                sort_idx = sort_idx + 1
                                .Cells(sort_idx + 1, "W") = backtask_start_date
                                .Cells(sort_idx + 1, "X") = backtask_range_adr
                        End With
                     
                    End If
                End If
             Next
                        
            ' |fffd||fffd|s|fffd|Z|fffd||fffd||fffd||30c||3471||fffd||fffd||fffd||fffd||fffd|N|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||742||fffd||fffd||fffd||a347||fffd||34c||3471||fffd|^|fffd|X|fffd|N|fffd||a5d7||fffd||fffd|\|fffd||fffd||fffd||fffd||fffd||fffd|
            If sort_idx <= 1 Then
                Worksheets(sheet).Range(ep_range_adr).Activate
                Application.ScreenUpdating = True
            Else
                ' |fffd||3471||fffd|^|fffd|X|fffd|N|fffd||30a|J|fffd|n|fffd||fffd||fffd||183|Z|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||243|\|fffd|[|fffd|g|fffd||fffd||fffd||fffd|
                With ThisWorkbook.Worksheets(SHT_DATALIST)
                    .Sort.SortFields.Clear
                    .Sort.SortFields.Add key:= _
                        Range(Cells(1, "W"), Cells(sort_idx + 1, "W")), SortOn:=xlSortOnValues, Order:=xlAscending, DataOption:=xlSortNormal
                    .Sort.SortFields.Add key:= _
                        Range(Cells(1, "X"), Cells(sort_idx + 1, "X")), SortOn:=xlSortOnValues, Order:=xlAscending, DataOption:=xlSortNormal
                End With
                With ThisWorkbook.Worksheets(SHT_DATALIST).Sort
                    .SetRange Range(Cells(1, "W"), Cells(sort_idx + 1, "X"))
                    .Header = xlYes
                    .MatchCase = False
                    .Orientation = xlTopToBottom
                    .SortMethod = xlStroke
                    .Apply
                End With
                
                ' |fffd|\|fffd|[|fffd|g|fffd||fffd||fffd||fffd||fffd|f|fffd|[|fffd|^|fffd||fffd||fffd||fffd||fffd|X|fffd|g|fffd|{|fffd|b|fffd|N|fffd|X|fffd||248||a287||fffd||fffd||fffd|[|fffd|h|fffd||fffd||fffd||fffd|
                With ThisWorkbook.Worksheets(SHT_DATALIST)
                    frmBackLinks.lstBackLinks.List = .Range(.Cells(2, "W"), .Cells(sort_idx + 1, "X")).Value
                End With
            
                Application.ScreenUpdating = True
                
                Worksheets(sheet).Range(sp_range_adr).Activate
                ' |fffd|\|fffd||fffd||fffd||292|u|fffd||fffd||fffd|}|fffd|E|fffd|X|fffd||309|E|fffd||242||fffd||fffd||fffd||60a4||fffd||24f|C|fffd||fffd||fffd||fffd||fffd||fffd|
                Dim form_point  As Variant
                form_point = GetRangeToPoint(Worksheets(sheet).Range(sp_range_adr).OFFSET(1, 1))
                If IsError(form_point) Then
                    frmBackLinks.Show
                Else
                    With frmBackLinks
                        .StartUpPosition = 0
                        .Top = form_point(0)
                        .Left = form_point(1)
                        .Show
                    End With
                End If
            End If
        End If
    Else
        Dim emphasis_Weight     As Single
        Dim save_Weight         As Single
        Dim save_RGB            As Long
        With tasklink_shape
            emphasis_Weight = 1.5           ' |fffd||fffd||fffd||fffd||fffd|p|fffd||315||fffd|
            ' |fffd||fffd||fffd||742||310||752||fffd||fffd||fffd|o|fffd|b|fffd|N|fffd|A|fffd|b|fffd|v|fffd||fffd||fffd||fffd|
            save_Weight = .Line.Weight
            save_RGB = .Line.ForeColor.RGB
            
            ' |fffd|I|fffd||fffd||fffd||fffd||fffd||a0bd||fffd||fffd||fffd||fffd||fffd|N|fffd||fffd||fffd||fffd||fffd||fffd||fffd|\|fffd||fffd||fffd||fffd||fffd||fffd|
            .Line.Weight = emphasis_Weight  ' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
            .Line.ForeColor.RGB = vbMagenta ' |fffd||fffd||fffd||fffd||fffd|F|fffd|F|fffd|}|fffd|[|fffd||fffd||fffd|^
            .ZOrder msoBringToFront         ' |fffd||151|O|fffd||282||255|\|fffd||fffd||fffd||fffd||fffd||fffd|
    
'            Application.ScreenUpdating = True
'            Call SuppressUpdates(True)  ' |fffd||fffd||297|}|fffd|~
            
            If IsUnLink Then
                ' |fffd|^|fffd|X|fffd|N|fffd||fffd||fffd||fffd||fffd|N|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
                Call UnLink(sheet, Range(sp_range_adr).Row, Range(ep_range_adr).Row)
                ' Shape|fffd||fffd||fffd||d3dc||fffd||fffd||fffd||fffd|
                .Delete
            Else
                ' |fffd|o|fffd|b|fffd|N|fffd|A|fffd|b|fffd|v|fffd||fffd||fffd||102||fffd||fffd||fffd||fffd||752||fffd||fffd||7c2||fffd|
                .Line.Weight = save_Weight
                .Line.ForeColor.RGB = save_RGB
            End If
            
'            Call SuppressUpdates(False) ' |fffd||fffd||297|}|fffd|~|fffd||fffd||fffd||fffd|
        End With
    End If

    Unload frmBackLinks
    Set frmBackLinks = Nothing

End Sub

Sub UnLink(ByVal sheet As String, ByVal sp_row_adr As String, ByVal ep_row_adr As String)
        
    ' |fffd||fffd||fffd||fffd||fffd||30f||fffd||fffd||fffd||fffd||fffd||fffd||182||254||fffd|r|fffd|p|fffd||301|u|fffd|Q|fffd||194||348||341|v|fffd||10d90||fffd||fffd||fffd||fffd||fffd|
    ' |fffd|V|fffd|[|fffd|g|fffd||fffd|!|fffd||fffd|s|fffd|^|fffd|X|fffd|N|fffd|Q|fffd||194||348||fffd|,|fffd|V|fffd|[|fffd|g|fffd||fffd|!|fffd||3471||fffd|^|fffd|X|fffd|N|fffd|Q|fffd||194||348||fffd|
    Dim refersto    As String
    refersto = "=" & sheet & "!$" & sp_row_adr & ":$" & sp_row_adr & "," & sheet & "!$" & ep_row_adr & ":$" & ep_row_adr
    
    ' |fffd||fffd||fffd|[|fffd|N|fffd|V|fffd|[|fffd|g|fffd||fffd||fffd||fffd|NAME|fffd|I|fffd|u|fffd|W|fffd|F|fffd|N|fffd|g|fffd||fffd||fffd||fffd|^|fffd|X|fffd|N|fffd||fffd||fffd||fffd||fffd|N|fffd||1228f|o|fffd||fffd||fffd||fffd|
    Dim object_name As Object
    Dim names_name  As String
    For Each object_name In Worksheets(sheet).Names
        names_name = NormalizedName(object_name.Name)
        ' |fffd|Q|fffd||194||348||342||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|^|fffd|X|fffd|N|fffd||fffd||fffd||fffd||fffd|N|fffd||fffd||fffd||d3dc||fffd||fffd||fffd||fffd|
        If Mid(names_name, 1, 4) = "_lk_" Then
            If object_name.refersto = refersto Then
                object_name.Delete
                Exit For
            End If
        End If
    Next

End Sub

Sub UnLinks(ByVal sheet As String)
    On Error Resume Next
            
    ' |fffd||fffd||fffd|[|fffd|N|fffd|V|fffd|[|fffd|g|fffd||fffd||fffd||303|^|fffd|X|fffd|N|fffd||fffd||fffd||fffd||fffd|N|fffd|iNAME|fffd|I|fffd|u|fffd|W|fffd|F|fffd|N|fffd|g|fffd||310||64ea|4|fffd||fffd||fffd||fffd|=|fffd|u_lk_|fffd|v|fffd|j|fffd||fffd||fffd||fffd||fffd||5c2||10d||d3dc||fffd||fffd||fffd||fffd|
    Dim object_name As Object
    Dim names_name  As String
    For Each object_name In Worksheets(sheet).Names
        names_name = NormalizedName(object_name.Name)
        If Mid(names_name, 1, 4) = "_lk_" Then object_name.Delete
    Next

    ' |fffd||fffd||fffd|[|fffd|N|fffd|V|fffd|[|fffd|g|fffd||fffd||fffd||303|^|fffd|X|fffd|N|fffd||fffd||fffd||fffd||fffd|N|fffd|iShape|fffd|I|fffd|u|fffd|W|fffd|F|fffd|N|fffd|g|fffd||310||64ea|8|fffd||fffd||fffd||fffd|=|fffd|uTaskLink|fffd|v|fffd|j|fffd||fffd||fffd||fffd||fffd||5c2||10d||d3dc||fffd||fffd||fffd||fffd|
    Dim shape_name As Shape
    For Each shape_name In Worksheets(sheet).Shapes
        If Mid(shape_name.Name, 1, 8) = "TaskLink" Then shape_name.Delete
    Next

End Sub

Public Function GetRangeToPoint(ByRef target_rng As Range) As Variant

    Const DPI       As Long = 96   'Dots Per Inch
    Const PPI       As Long = 72   'Pixel Per Inch
    
    ' |fffd||fffd||fffd||fffd||fffd||153|n|fffd||fffd||fffd||a0bd||fffd|Z|fffd||fffd||fffd||fffd||fffd|A|fffd|N|fffd|e|fffd|B|fffd|u|fffd||242||fffd||fffd||fffd|
    target_rng.Activate
    
    With ActiveWindow
        Dim on_freeze   As Boolean  ' |fffd||152||fffd| TRUE:|fffd||152||80a0||fffd||fffd|^FALSE:|fffd||152||fffd||202||fffd|
        Dim on_split    As Boolean  ' |fffd||fffd||fffd||fffd| TRUE:|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|^FALSE:|fffd||fffd||fffd||fffd||fffd||202||fffd|
        on_freeze = .FreezePanes
        on_split = .Split
        Dim pane_id     As Long
        pane_id = 0
        If on_freeze Then   ' |fffd|E|fffd|B|fffd||fffd||fffd|h|fffd|E|fffd|g|fffd||30c||152||fffd|
            ' |fffd|E|fffd|B|fffd||fffd||fffd|h|fffd|E|fffd|g|fffd||fffd||fffd||255|\|fffd||fffd||fffd||fffd||fffd||fffd||102||fffd||fffd||fffd|Z|fffd||fffd||fffd||348||342||243|Z|fffd||fffd||fffd||fffd||fffd||702||702||fffd||102||fffd||fffd||90a9||fffd|`|fffd|F|fffd|b|fffd|N|fffd||fffd||fffd||fffd|B
            ' |fffd||702||702||fffd||102||fffd||fffd||fffd|      |fffd|F|fffd|E|fffd|B|fffd||fffd||fffd|h|fffd|E|fffd|g|fffd||314||50d||fffd||fffd||fffd||502||fffd|
            ' |fffd||702||702||fffd||102||fffd||fffd||202||fffd|    |fffd|F|fffd|G|fffd||fffd||fffd|[
            Dim i       As Long
            For i = 1 To .Panes.Count
                If Not (Intersect(.Panes(i).VisibleRange, target_rng) Is Nothing) Then
                    pane_id = i
                    Exit For
                End If
            Next
            If pane_id = 0 Then GetRangeToPoint = CVErr(xlErrValue): Exit Function
        ElseIf on_split Then    '|fffd|E|fffd|B|fffd||fffd||fffd|h|fffd|E|fffd||fffd||fffd||fffd|
            ' |fffd|E|fffd|B|fffd||fffd||fffd|h|fffd|E|fffd|g|fffd||fffd||fffd||255|\|fffd||fffd||fffd||fffd||fffd||fffd||102||fffd||fffd||fffd|Z|fffd||fffd||fffd||348||342||243|Z|fffd||fffd||fffd||fffd||fffd||702||702||fffd||102||fffd||fffd||90a9||fffd|`|fffd|F|fffd|b|fffd|N|fffd||fffd||fffd||fffd|B
            ' |fffd||702||702||fffd||102||fffd||fffd||fffd|      |fffd|F|fffd|A|fffd|N|fffd|e|fffd|B|fffd|u|fffd|E|fffd|B|fffd||fffd||fffd|h|fffd|E|fffd|g|fffd||314||50d||fffd||fffd||fffd||502||fffd|
            ' |fffd||702||702||fffd||102||fffd||fffd||202||fffd|    |fffd|F|fffd|G|fffd||fffd||fffd|[
            If Not (Intersect(.ActivePane.VisibleRange, target_rng) Is Nothing) Then
                pane_id = .ActivePane.index
            Else
                GetRangeToPoint = CVErr(xlErrValue)
                Exit Function
            End If
        End If
    End With

    ' pane_id
    ' 0: |fffd||fffd||fffd||fffd||fffd||202||fffd| 1: |fffd||fffd||fffd||fffd| 2: |fffd|E|fffd||fffd| 3: |fffd||fffd||fffd||fffd| 4: |fffd|E|fffd||fffd|
    With ActiveWindow
        Dim x           As Long
        Dim y           As Long
        If pane_id = 0 Then
            y = .PointsToScreenPixelsY(0)
            x = .PointsToScreenPixelsX(0)
        Else
            y = .Panes(pane_id).PointsToScreenPixelsY(0)
            x = .Panes(pane_id).PointsToScreenPixelsX(0)
        End If
        ' |fffd|X|fffd|N|fffd||fffd||fffd|[|fffd||fffd||fffd||fffd||fffd|W|fffd||fffd||fffd||fffd|h|fffd|L|fffd||fffd||fffd||fffd||fffd||fffd||fffd|g|fffd||fffd||fffd|W|fffd||255||3ca||fffd||fffd||fffd||fffd||fffd|
        Dim target_y    As Long
        Dim target_x    As Long
        target_y = ((target_rng.Top * (DPI / PPI)) * (.Zoom / 100)) + y
        target_x = ((target_rng.Left * (DPI / PPI)) * (.Zoom / 100)) + x
        GetRangeToPoint = Array(target_y * (PPI / DPI), target_x * (PPI / DPI))
    End With
    
    ' |fffd||fffd||fffd||fffd||fffd||153|n|fffd||fffd||fffd||fffd||fffd|Z|fffd||fffd||fffd||349|E|fffd||fffd||fffd||242||fffd||fffd||70b5||fffd||102||fffd||fffd||fffd||302||141|A|fffd||fffd||fffd||303|Z|fffd||fffd||fffd||292|u|fffd||256||7c2||fffd||fffd||102||fffd||fffd||fffd|
    target_rng.OFFSET(-1, -1).Activate
 End Function


Attribute VB_Name = "modTaskLinkStyle"
Option Explicit
Option Private Module

Dim save_name(1 To 5)  As String

Sub SelectLinkStyle(ByVal link_control As control)

    ' |fffd|^|fffd|X|fffd|N|fffd||fffd||fffd||fffd||fffd|N|fffd||30e||fffd||782||fffd|I|fffd||fffd||fffd||fffd||fffd||fffd|
    With frmLinkStyle
        Set .imgLinkStyle1.Picture = link_control.Picture
        .imgLinkStyle1.ControlTipText = link_control.ControlTipText
        .fraLineStyle.Visible = False
        .Repaint
    End With
    
End Sub

Sub MouseMoveLinkStyle(ByRef link_control As control)
    
    ' |fffd|I|fffd||fffd||fffd||fffd||fffd||a0bd||fffd|R|fffd||fffd||fffd|g|fffd||fffd||fffd|[|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||a347||fffd||34f||fffd||fffd||fffd||fffd||fffd||fffd|I|fffd||fffd||fffd||fffd||fffd||fffd|
    If save_name(1) = link_control.Name Then Exit Sub
    
    ' |fffd||c2||fffd||fffd|g|fffd||fffd||fffd||fffd||fffd||fffd|
    With frmLinkStyle
        Select Case save_name(1)
            Case ""
            Case Else
                .fraLineStyle.Controls(save_name(1)).BorderStyle = fmBorderStyleNone
        End Select
    End With
    
    ' |fffd|I|fffd||fffd||fffd||fffd||fffd||a0bd||fffd|R|fffd||fffd||fffd|g|fffd||fffd||fffd|[|fffd||fffd||fffd||258|g|fffd||fffd||fffd||693||fffd||fffd||fffd||fffd||fffd|
    With link_control
        .BorderStyle = fmBorderStyleSingle
        .BorderColor = &H0
        save_name(1) = .Name
    End With

End Sub

Sub SelectLinkColor(ByVal link_color As Long, ByVal link_caption As String)

    ' |fffd|^|fffd|X|fffd|N|fffd||fffd||fffd||fffd||fffd|N|fffd||310|F|fffd||fffd|I|fffd||fffd||fffd||fffd||fffd||fffd|
    With frmLinkStyle
        .lblLinkColor.Caption = link_caption
        .imgLinkStyle2.BackColor = link_color
        .fraColorPalette.Visible = False
        .Repaint
    End With
    
End Sub


Sub MouseMoveLinkColor(ByRef link_control As control)
    
    ' |fffd|I|fffd||fffd||fffd||fffd||fffd||a0bd||fffd|p|fffd|l|fffd||fffd||fffd||310|F|fffd||fffd||fffd|m|fffd||80b7||fffd||fffd|
    If save_name(2) <> link_control.Name Then
        With frmLinkStyle
            Select Case save_name(2)
                Case ""
                Case Else
                    .fraColorPalette.Controls(save_name(2)).SpecialEffect = fmSpecialEffectFlat
            End Select
        End With
        link_control.SpecialEffect = fmSpecialEffectEtched
    End If
    save_name(2) = link_control.Name

End Sub

Sub SelectBeginStyle(ByVal link_control As control)

    ' |fffd||fffd||210||fffd||fffd||310|F|fffd||fffd|I|fffd||fffd||fffd||fffd||fffd||fffd|
    With frmLinkStyle
        Set .imgLinkStyle3.Picture = link_control.Picture
        .imgLinkStyle3.ControlTipText = link_control.ControlTipText
        .fraBeginStyle.Visible = False
        .Repaint
    End With
    
End Sub

Sub MouseMoveBeginStyle(ByRef link_control As control)
    
    ' |fffd|I|fffd||fffd||fffd||fffd||fffd||a0bd||fffd|p|fffd|l|fffd||fffd||fffd||310|F|fffd||fffd||fffd|m|fffd||80b7||fffd||fffd|
    If save_name(3) <> link_control.Name Then
        With frmLinkStyle
            Select Case save_name(3)
                Case ""
                Case Else
                    .fraBeginStyle.Controls(save_name(3)).BorderStyle = fmBorderStyleNone
            End Select
        End With
        link_control.BorderStyle = fmBorderStyleSingle
        link_control.BorderColor = &H0
    End If
    save_name(3) = link_control.Name

End Sub

Sub SelectEndStyle(ByVal link_control As control)

    ' |fffd||fffd||210||fffd||fffd||310|F|fffd||fffd|I|fffd||fffd||fffd||fffd||fffd||fffd|
    With frmLinkStyle
        Set .imgLinkStyle4.Picture = link_control.Picture
        .imgLinkStyle4.ControlTipText = link_control.ControlTipText
        .fraEndStyle.Visible = False
        .Repaint
    End With
    
End Sub

Sub MouseMoveEndStyle(ByRef link_control As control)
    
    ' |fffd|I|fffd||fffd||fffd||fffd||fffd||a0bd||fffd|p|fffd|l|fffd||fffd||fffd||310|F|fffd||fffd||fffd|m|fffd||80b7||fffd||fffd|
    If save_name(4) <> link_control.Name Then
        With frmLinkStyle
            Select Case save_name(4)
                Case ""
                Case Else
                    .fraEndStyle.Controls(save_name(4)).BorderStyle = fmBorderStyleNone
            End Select
        End With
        link_control.BorderStyle = fmBorderStyleSingle
        link_control.BorderColor = &H0
    End If
    save_name(4) = link_control.Name

End Sub

Sub SelectTipSize(ByVal link_control As control)

    ' |fffd||fffd||210||fffd||fffd||310|F|fffd||fffd|I|fffd||fffd||fffd||fffd||fffd||fffd|
    With frmLinkStyle
        Set .imgLinkStyle5.Picture = link_control.Picture
        .imgLinkStyle5.ControlTipText = link_control.ControlTipText
        .fraTipSize.Visible = False
        .Repaint
    End With
    
End Sub

Sub MouseMoveTipSize(ByRef link_control As control)
    
    ' |fffd|I|fffd||fffd||fffd||fffd||fffd||a0bd||fffd|p|fffd|l|fffd||fffd||fffd||310|F|fffd||fffd||fffd|m|fffd||80b7||fffd||fffd|
    If save_name(5) <> link_control.Name Then
        With frmLinkStyle
            Select Case save_name(5)
                Case ""
                Case Else
                    .fraTipSize.Controls(save_name(5)).BorderStyle = fmBorderStyleNone
            End Select
        End With
        link_control.BorderStyle = fmBorderStyleSingle
        link_control.BorderColor = &H0
    End If
    save_name(5) = link_control.Name

End Sub

Sub HideFrame(Optional ByRef cmd_control As control)
    
    Dim i   As Long
    Dim onVisible(1 To 5) As Boolean
    Dim obj_in_form   As Object
    
    If cmd_control Is Nothing Then
        For Each obj_in_form In frmLinkStyle.Controls
            If LCase(Mid(obj_in_form.Name, 1, 3)) = "fra" Then obj_in_form.Visible = False
        Next
    Else
        For Each obj_in_form In frmLinkStyle.Controls
            If LCase(Mid(obj_in_form.Name, 1, 3)) = "fra" Then
                If obj_in_form.Name <> cmd_control.Name Then obj_in_form.Visible = False
            End If
        Next
    End If

End Sub


' InQuest injected base64 decoded content
' x)br
' {-j{
' y+kj(!

INQUEST-PP=macro
