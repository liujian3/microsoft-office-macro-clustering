Attribute VB_Name = "Foglio1"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Foglio2"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Public Sub Worksheet_BeforeDoubleClick(ByVal Target As Range, Cancel As Boolean)
'Spalluto Tonio 2018(c)
'Application.Calculation = xlCalculationManual
'Application.ScreenUpdating = False
Application.CutCopyMode = False

Cancel = True
Dim Q As Integer



If Intersect(Range([F12], [F1048576]), Target) Is Nothing Then Exit Sub 'Controlla se |fffd| stato premuto il doppio click del mouse nella colonna con il nome dell'incontro
IndCella = Target.Address(RowAbsolute:=False, ColumnAbsolute:=False) 'Passa l'indirizzo della cella dove abbiamo fatto doppio click alla variabile IndCella

Riga = Target.Row 'Passa il valore della cella in cui abbiamo fatto il doppio click alla variabile Incontro

Inizio = Target.Value
Lega = Range(IndCella).Offset(0, -1).Value  'Alla variabile Data passa il valore della cella che si trova a due colonne a sinistra dalla cella in cui abbiamo fatto doppio click e stessa riga

If Inizio = "" Then Exit Sub 'esce se abbiamo cliccato su una cella vuota
If Lega = "" Then Exit Sub 'esce se la colonna data |fffd| vuota


Sheets("Index").Range("D" & Riga & ":X" & Riga).Copy
'Sheets("Ricerca").Select
Sheets("Ricerca").Range("E2").PasteSpecial Paste:=xlPasteValues
        
Sheets("Ricerca").Select
Sheets("Ricerca").Range("A1").Select

Calculate

'Call IndirizzaRicerca
'Sheets("Esito").Range("E26:X5000").ClearContents

Call CercaDati

'Sheets("Esito").Select

'Sheets("Esito").Range("AO2").Value = Inizio
'Sheets("Esito").Range("AP2").Value = Lega

'Sheets("Esito").Range("D2").Select
Application.Calculation = xlCalculationAutomatic
Application.ScreenUpdating = True
Application.CutCopyMode = False

Calculate

End Sub

Attribute VB_Name = "Foglio3"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Foglio6"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Foglio7"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Modulo1"
Sub Aggiorna_DatiIndex()
'Spalluto Tonio 2018(c)
Application.Calculation = xlCalculationManual
Application.ScreenUpdating = False
Application.CutCopyMode = False

Sheets("Index").[B9] = Now

myURL = "http://data.nowgoal.group/1x2/"
Set ie = CreateObject("InternetExplorer.Application")
   
With ie
    .navigate myURL
    .Visible = False
    Do While .Busy: DoEvents: Loop    'Attesa not busy
    Do While .readyState <> 4: DoEvents: Loop 'Attesa documento
End With
'
myStart = Timer  'attesa addizionale
Do
    DoEvents
    If Timer > myStart + 2 Or Timer < myStart Then Exit Do
Loop

'Leggi le tabelle, su un nuovo foglio
I = 1 'Riga di inizio copia dati
Worksheets("SitoIndex").Activate
Range("T:AG").ClearContents 'Pulisce la Zona dove saranno incollati i dati
Set mycoll = ie.document.getElementsByTagName("TABLE")
For Each myItm In mycoll
    For Each trtr In myItm.Rows
        For Each tdtd In trtr.Cells
            Cells(I + 1, J + 20) = tdtd.innerText 'J + 20 E' LA COLONNA DI INIZIO COPIA
            J = J + 1
        Next tdtd
        I = I + 1: J = 0
    Next trtr
I = I + 1
Next myItm

ie.Quit
Set ie = Nothing

'Application.Calculation = xlAutomatic

Calculate

On Error Resume Next

Calculate

'Inizio copia Dati
Book = Sheets("Index").Range("E6").Value
Tempo = Now + TimeSerial(Sheets("Index").Cells(1, 5), 0, 0)

Set Ws1 = Sheets("SitoIndex")
Set Ws2 = Sheets("Index")

Ws2.Range("D12:O1048576").ClearContents

UR1 = Ws1.Range("T" & Rows.Count).End(xlUp).Row

  For RR1 = 3 To UR1
    If Ws1.Range("AS" & RR1).Value >= Book And Ws1.Range("AJ" & RR1).Value <= Tempo Then 'DateSerial(Year(Tempo), Month(Tempo), Day(Tempo))
        UR2 = Ws2.Range("E" & Rows.Count).End(xlUp).Row + 1
        Ws2.Range("D" & UR2).Value = Now
        Ws1.Range("AI" & RR1 & ":AS" & RR1).Copy
        Ws2.Range("E" & UR2).PasteSpecial Paste:=xlPasteValues
    
    End If
  Next RR1
  
  Set Ws1 = Nothing
  Set Ws2 = Nothing
'Fine Copia Dati

Calculate

Sheets("Index").[B10] = Now

Worksheets("Index").Activate

Application.Calculation = xlCalculationAutomatic
Application.ScreenUpdating = True
Application.CutCopyMode = False

    
End Sub
Attribute VB_Name = "Modulo10"
Sub Saetta1_Click()
If MsgBox("ATTENZIONE!!!:" & vbNewLine & _
                vbNewLine & _
                "Sto Cancellando tutti i PRONOSTICI " & vbNewLine & _
                vbNewLine & _
                "SEI PROPRIO SICURO?", _
                vbCritical + vbYesNo + vbDefaultButton2, "Cancellazione Pronostici") = vbNo Then
                Exit Sub
                End If

Application.ScreenUpdating = False

    Rows("2:1001").Select
    Selection.Delete Shift:=xlUp
    Range("B2").Select

End Sub
Attribute VB_Name = "Modulo2"
Sub ResetFiltri()
Application.ScreenUpdating = False
For x = 9 To 26
    ActiveSheet.Range("$E$12:$Z$32197").AutoFilter Field:=x - 4
Next x
End Sub
Attribute VB_Name = "Modulo3"
Sub Rettangolo1_Click()
Application.ScreenUpdating = False
Range("D12").ClearContents

URA = Sheets("Ricerca").Range("E" & Rows.Count).End(xlUp).Row
URB = Sheets("Ricerca").Range("AE" & Rows.Count).End(xlUp).Row + 1

For RR1 = URB To URA

Range("D" & RR1).Value = RR1 - 12
Range("U" & RR1).Value = Range("L" & RR1) - Range("I" & RR1).Value
Range("V" & RR1).Value = Range("M" & RR1) - Range("J" & RR1).Value
Range("W" & RR1).Value = Range("N" & RR1) - Range("K" & RR1).Value
Range("X" & RR1).Value = (1 / Range("I" & RR1).Value + 1 / Range("J" & RR1).Value + 1 / Range("K" & RR1).Value) - 1
Range("Y" & RR1).Value = (1 / Range("L" & RR1).Value + 1 / Range("M" & RR1).Value + 1 / Range("N" & RR1).Value) - 1
Range("R" & RR1).Value = 100 / Range("I" & RR1).Value / (Range("X" & RR1).Value + 1)
Range("S" & RR1).Value = 100 / Range("J" & RR1).Value / (Range("X" & RR1).Value + 1)
Range("T" & RR1).Value = 100 / Range("K" & RR1).Value / (Range("X" & RR1).Value + 1)
Range("Z" & RR1).Value = Range("Y" & RR1).Value - Range("X" & RR1).Value

    Range("AA" & RR1).Select
    ActiveCell.FormulaR1C1 = _
        "=IF(RC[-11]="""","""",VALUE(TRIM(MID(RC[-11],1,FIND(""-"",RC[-11])-1))))"
            Selection.Copy
    Selection.PasteSpecial Paste:=xlPasteValues, Operation:=xlNone, SkipBlanks _
        :=False, Transpose:=False
       Application.CutCopyMode = False
    Range("AB" & RR1).Select
    ActiveCell.FormulaR1C1 = _
        "=IF(RC[-12]="""","""",VALUE(TRIM(MID(RC[-12],FIND(""-"",RC[-12])+1,LEN(RC[-12])))))"
            Selection.Copy
    Selection.PasteSpecial Paste:=xlPasteValues, Operation:=xlNone, SkipBlanks _
        :=False, Transpose:=False
       Application.CutCopyMode = False
    Range("AC" & RR1).Select
    ActiveCell.FormulaR1C1 = _
        "=IF(RC[-12]="""","""",VALUE(TRIM(MID(RC[-12],1,FIND(""-"",RC[-12])-1))))"
            Selection.Copy
    Selection.PasteSpecial Paste:=xlPasteValues, Operation:=xlNone, SkipBlanks _
        :=False, Transpose:=False
       Application.CutCopyMode = False
    Range("AD" & RR1).Select
    ActiveCell.FormulaR1C1 = _
        "=IF(RC[-13]="""","""",VALUE(TRIM(MID(RC[-13],FIND(""-"",RC[-13])+1,LEN(RC[-13])))))"
            Selection.Copy
    Selection.PasteSpecial Paste:=xlPasteValues, Operation:=xlNone, SkipBlanks _
        :=False, Transpose:=False
       Application.CutCopyMode = False
       
Range("AE" & RR1) = 0
If Range("AA" & RR1) > Range("AB" & RR1) Then
Range("AE" & RR1) = 1
End If

Range("AF" & RR1) = 0
If Range("AA" & RR1) = Range("AB" & RR1) Then
Range("AF" & RR1) = 1
End If

Range("AG" & RR1) = 0
If Range("AA" & RR1) < Range("AB" & RR1) Then
Range("AG" & RR1) = 1
End If

Range("AH" & RR1) = 0
If Range("AA" & RR1) + Range("AB" & RR1) > 1 Then
Range("AH" & RR1) = 1
End If

Range("AI" & RR1) = 0
If Range("AA" & RR1) + Range("AB" & RR1) < 4 Then
Range("AI" & RR1) = 1
End If

Range("AJ" & RR1) = 0
If Range("AA" & RR1) + Range("AB" & RR1) > 2 Then
Range("AJ" & RR1) = 1
End If

Range("AK" & RR1) = 0
If Range("AA" & RR1) + Range("AB" & RR1) < 3 Then
Range("AK" & RR1) = 1
End If

Range("AL" & RR1) = 0
If Range("AA" & RR1) > 0 And Range("AB" & RR1) > 0 Then
Range("AL" & RR1) = 1
End If

Range("AM" & RR1) = 0
If Range("AA" & RR1) = 0 Or Range("AB" & RR1) = 0 Then
Range("AM" & RR1) = 1
End If

Range("AN" & RR1) = 0
If Range("AJ" & RR1) + Range("AL" & RR1) = 2 Then
Range("AN" & RR1) = 1
End If



Range("AO" & RR1) = 0
If Range("AC" & RR1) > Range("AD" & RR1) Then
Range("AO" & RR1) = 1
End If

Range("AP" & RR1) = 0
If Range("AC" & RR1) = Range("AD" & RR1) Then
Range("AP" & RR1) = 1
End If

Range("AQ" & RR1) = 0
If Range("AC" & RR1) < Range("AD" & RR1) Then
Range("AQ" & RR1) = 1
End If

Range("AR" & RR1) = 0
If Range("AC" & RR1) + Range("AD" & RR1) > 1 Then
Range("AR" & RR1) = 1
End If

Range("AS" & RR1) = 0
If Range("AC" & RR1) + Range("AD" & RR1) < 4 Then
Range("AS" & RR1) = 1
End If

Range("AT" & RR1) = 0
If Range("AC" & RR1) + Range("AD" & RR1) > 2 Then
Range("AT" & RR1) = 1
End If

Range("AU" & RR1) = 0
If Range("AC" & RR1) + Range("AD" & RR1) < 3 Then
Range("AU" & RR1) = 1
End If

Range("AV" & RR1) = 0
If Range("AC" & RR1) > 0 And Range("AD" & RR1) > 0 Then
Range("AV" & RR1) = 1
End If

Range("AW" & RR1) = 0
If Range("AC" & RR1) = 0 Or Range("AD" & RR1) = 0 Then
Range("AW" & RR1) = 1
End If

Range("AX" & RR1) = 0
If Range("AT" & RR1) + Range("AV" & RR1) = 2 Then
Range("AX" & RR1) = 1
End If

Next RR1

MsgBox (" Fine Elaborazione ")

Range("D12").Select
    ActiveCell.FormulaR1C1 = "=SUBTOTAL(2,RC:R[1000000]C)"
Range("D10").Value = Range("D12").Value
End Sub

Attribute VB_Name = "Modulo4"
Public Sub CercaDati()
Attribute CercaDati.VB_ProcData.VB_Invoke_Func = " \n14"
Application.ScreenUpdating = False

For x = 9 To 26
If Cells(10, x) <> "" Then
aa$ = Cells(8, x).Value
bb$ = Cells(9, x).Value
    ActiveSheet.Range("$E$12:$Z$132197").AutoFilter Field:=x - 4, Criteria1:= _
        aa$, Operator:=xlAnd, Criteria2:=bb$
End If
Next x
End Sub

Attribute VB_Name = "Modulo5"
Sub CancProc()
    'Cancella Processo
    On Error Resume Next
    For Each obj In GetObject("winmgmts:").ExecQuery("SELECT * FROM Win32_Process WHERE Name='iexplore.exe'")
    obj.Terminate
    Next
    'End Sub
End Sub
Sub Chiudiexplorer()
On Error Resume Next
Dim objProcs As Object
Dim Process As Variant
Set objProcs = GetObject("winmgmts:").ExecQuery("select * from Win32_Process where Name='iexplore.exe'")
For Each Process In objProcs
Process.Terminate
Next
End Sub

Attribute VB_Name = "Modulo6"
Sub Calloutconfrecciaingi|fffd|2_Click()
Range("E" & Cells(12, 4).Value + 13).Select
End Sub
Attribute VB_Name = "Modulo7"
Sub Aggiorna_IncontriConclusi()
'Spalluto Tonio 2017(c)
Application.Calculation = xlCalculationManual
Application.ScreenUpdating = False
Application.CutCopyMode = False

Sheets("Index").Select
Sheets("Index").[B9] = Now

myURL = "http://data.nowgoal.group/1x2/TomorrowOdds.htm?matchdate=" & Sheets("Index").Range("N4").Value & "-" & Sheets("Index").Range("M4").Value & "-" & Sheets("Index").Range("L4").Value
Set ie = CreateObject("InternetExplorer.Application")
   
With ie
    .navigate myURL
    .Visible = False
    Do While .Busy: DoEvents: Loop    'Attesa not busy
    Do While .readyState <> 4: DoEvents: Loop 'Attesa documento
End With
'
myStart = Timer  'attesa addizionale
Do
    DoEvents
    If Timer > myStart + 2 Or Timer < myStart Then Exit Do
Loop

'Leggi le tabelle, su un nuovo foglio
I = 1 'Riga di inizio copia dati
Worksheets("SitoConclusi").Activate
Range("T:AG").ClearContents 'Pulisce la Zona dove saranno incollati i dati
Set mycoll = ie.document.getElementsByTagName("TABLE")
For Each myItm In mycoll
    For Each trtr In myItm.Rows
        For Each tdtd In trtr.Cells
            Cells(I + 1, J + 20) = tdtd.innerText 'J + 20 E' LA COLONNA DI INIZIO COPIA
            J = J + 1
        Next tdtd
        I = I + 1: J = 0
    Next trtr
I = I + 1
Next myItm

ie.Quit
Set ie = Nothing

'Application.Calculation = xlAutomatic

Calculate





On Error Resume Next


'Sheets("SitoIndex").Range("A3:L5000").Clear
'Sheets("SitoIndex").Range("A2").QueryTable.Refresh BackgroundQuery:=False


Calculate



'Calculate

'Inizio copia Dati
Book = Sheets("Index").Range("E6").Value
Tempo = Now + TimeSerial(Sheets("Index").Cells(1, 5), 0, 0)

Set Ws1 = Sheets("SitoConclusi")
Set Ws2 = Sheets("Index")

Ws2.Range("D12:O1048576").ClearContents

UR1 = Ws1.Range("T" & Rows.Count).End(xlUp).Row

  For RR1 = 3 To UR1
    If Ws1.Range("AS" & RR1).Value >= Book And Ws1.Range("AJ" & RR1).Value <= Tempo Then 'DateSerial(Year(Tempo), Month(Tempo), Day(Tempo))
        UR2 = Ws2.Range("E" & Rows.Count).End(xlUp).Row + 1
        'Ws1.Range("AI" & RR1).Copy
        'Ws2.Range("C" & UR2).PasteSpecial Paste:=xlPasteValues
        Ws2.Range("D" & UR2).Value = Now
        Ws1.Range("AI" & RR1 & ":AS" & RR1).Copy
        Ws2.Range("E" & UR2).PasteSpecial Paste:=xlPasteValues
        
    End If
  Next RR1
  
  Set Ws1 = Nothing
  Set Ws2 = Nothing
'Fine Copia Dati

Calculate

Sheets("Index").[B10] = Now

Worksheets("Index").Activate

Application.Calculation = xlCalculationAutomatic
Application.ScreenUpdating = True
Application.CutCopyMode = False

'Sheets("Archivio").Select
'Range("A1").Select
    
End Sub

Attribute VB_Name = "Modulo8"
Sub Macro1()
Attribute Macro1.VB_ProcData.VB_Invoke_Func = " \n14"
'
' Macro1 Macro
'

'
    Range("L4").Select
    ActiveCell.FormulaR1C1 = "=DAY(NOW())"
    Range("O1").Select
End Sub
Attribute VB_Name = "Modulo9"
Sub Smile3_Click()
Application.ScreenUpdating = False

urto = Sheets("Prono").Range("B" & Rows.Count).End(xlUp).Row + 1

Sheets("Ricerca").Select
    Range("E4:V6").Select
    Selection.Copy
Sheets("Prono").Select
Range("B" & urto).Select
Selection.PasteSpecial Paste:=xlPasteValues, Operation:=xlNone, SkipBlanks _
        :=False, Transpose:=False
Selection.PasteSpecial Paste:=xlPasteFormats, Operation:=xlNone, SkipBlanks _
        :=False, Transpose:=False
Range("A1").Select
Sheets("Ricerca").Select
    Range("D1").Select
    Application.CutCopyMode = False
MsgBox " OK!...Fatto "
End Sub

Attribute VB_Name = "ModuloIndirizzaRicerca"
Sub IndirizzaRicerca()


Application.ScreenUpdating = False
Application.CutCopyMode = False

''---------- CONTROLLO QUOTE DA CERCARE ----------------
'Quota1 = Sheets("CercaQuote").Range("F9").Value
'QuotaX = Sheets("CercaQuote").Range("G9").Value
'Quota2 = Sheets("CercaQuote").Range("H9").Value
'
'If Quota1 = "" Or QuotaX = "" Or Quota2 = "" Then
'MsgBox ("Inserire le quote dei 3 segni!")
'GoTo FINE
'End If
''---------- FINE CONTROLLO QUOTE DA CERCARE ----------------


'Call ElencaFile

Sheets("Esito").Range("E26:X100000").ClearContents
Sheets("Ricerca").Range("E13:X100000").ClearContents
'Sheets("RicercaBET365").Range("J10:CX50000").ClearContents
'Sheets("RicercaLADBROKES").Range("J10:CX50000").ClearContents
'Sheets("RicercaPINNACLE").Range("J10:CX50000").ClearContents
'Sheets("RicercaWILLIAMHILL").Range("J10:CX50000").ClearContents

If Sheets("Ricerca").Range("G3").Value = "TUTTI" Then GoTo STEP1
'If Sheets("Ricerca").Range("G3").Value <> "TUTTI" And Sheets("CercaQuote").Range("C11").Value = "TUTTE" Then GoTo STEP2
'If Sheets("CercaQuote").Range("C9").Value = "TUTTI" And Sheets("CercaQuote").Range("C11").Value = "TUTTE" Then GoTo STEP3

Application.StatusBar = "Elaborazione Archivio Anno: " & Sheets("Ricerca").Range("G3").Value '& " del Campionato " & Sheets("CercaQuote").Range("C9").Value

'Call ImportaDatidaFileArchivio

Call CercaDati

GoTo Fine


STEP1:
'-------------------- OPZIONE TUTTI GLI ANNI ------------------------

'----------- OPZIONE TUTTI I CAMPIONATI --------------------
If Sheets("Ricerca").Range("G3").Value = "TUTTI" Then

URC = Sheets("Impostazioni").[G1048576].End(xlUp).Row  'con URO otteniamo il numero dell'ultima riga occupata, colonna A Foglio 1
For NC = 6 To URC        'iniziamo un ciclo che scorre le celle dalla riga 6 fino all'ultima riga occupata


Sheets("Ricerca").Range("G3").Value = Sheets("Impostazioni").Range("G" & NC).Value

Application.StatusBar = "Elaborazione Archivio Anno: " & Sheets("Ricerca").Range("G3").Value '& " del Campionato " & Sheets("CercaQuote").Range("C9").Value

'Call ImportaDatidaFileArchivio

Call CercaDati

Next NC
End If

Sheets("Ricerca").Range("G3").Value = "TUTTI"
'-------------------- FINE OPZIONE TUTTI I CAMPIONATI E UNA STAGIONE ------------------------
GoTo Fine


'STEP2:
''-------------------- OPZIONE UN CAMPIONATO E TUTTE LE STAGIONI ------------------------
'
''----------- OPZIONE TUTTE LE STAGIONI --------------------
'If Sheets("CercaQuote").Range("C11").Value = "TUTTE" Then

'For URS = 6 To 100 ' conta le righe fino a trovare la prima vuota
'If Sheets("Impostazioni").Cells(URS, 7) = Empty Then URS = URS - 1: GoTo Avanti2 'assegna alla variabile URS il numero dell'ultima riga occupata
'Next URS
'
'Avanti2:
'For NS = 6 To URS        'iniziamo un ciclo che scorre le celle dalla riga 6 fino all'ultima riga occupata
'
'Sheets("CercaQuote").Range("C11").Value = Sheets("Impostazioni").Range("G" & NS).Value
'
'Application.StatusBar = "Elaborazione della stagione " & Sheets("CercaQuote").Range("C11").Value & " del Campionato " & Sheets("CercaQuote").Range("C9").Value
'
'Call ImportaDatiQuote
'
'Call Cercadati1X2
'
'
'Next NS
'End If
'
'Sheets("CercaQuote").Range("C11").Value = "TUTTE"
'
''-------------------- FINE OPZIONE UN CAMPIONATO E TUTTE LE STAGIONI ------------------------
'GoTo FINE
'
'
'STEP3:
''-------------------- OPZIONE TUTTI I CAMPIONATI E TUTTE LE STAGIONI ------------------------
'
''----------- OPZIONE TUTTI I CAMPIONATI --------------------
'If Sheets("CercaQuote").Range("C9").Value = "TUTTI" Then
'
'URC = Sheets("Impostazioni").[B65536].End(xlUp).Row  'con URO otteniamo il numero dell'ultima riga occupata, colonna A Foglio 1
'For NC = 6 To URC        'iniziamo un ciclo che scorre le celle dalla riga 6 fino all'ultima riga occupata
'
'
'Sheets("CercaQuote").Range("C9").Value = Sheets("Impostazioni").Range("B" & NC).Value
'
''----------- OPZIONE TUTTE LE STAGIONI --------------------
'If Sheets("CercaQuote").Range("C11").Value = "TUTTE" Then
'
'For URS = 6 To 100 ' conta le righe fino a trovare la prima vuota
'If Sheets("Impostazioni").Cells(URS, 7) = Empty Then URS = URS - 1: GoTo Avanti3 'assegna alla variabile URS il numero dell'ultima riga occupata
'Next URS
'
'Avanti3:
'For NS = 6 To URS        'iniziamo un ciclo che scorre le celle dalla riga 6 fino all'ultima riga occupata
'
'Sheets("CercaQuote").Range("C11").Value = Sheets("Impostazioni").Range("G" & NS).Value
'
'Application.StatusBar = "Elaborazione della stagione " & Sheets("CercaQuote").Range("C11").Value & " del Campionato " & Sheets("CercaQuote").Range("C9").Value
'
'Call ImportaDatiQuote
'
'Call Cercadati1X2
'
'Next NS
'End If
'
'Sheets("CercaQuote").Range("C11").Value = "TUTTE"
'
'Next NC
'End If
'
'Sheets("CercaQuote").Range("C9").Value = "TUTTI"
''-------------------- FINE OPZIONE TUTTI I CAMPIONATI E TUTTE LE STAGIONI ------------------------


Fine:
Application.StatusBar = False
Application.ScreenUpdating = True
Application.CutCopyMode = False

End Sub
Attribute VB_Name = "ModuloTimer"
Public runtime1 As Date
Public timein As Date
Public timeout As Date
Sub RIPETI() ' AGGANCIATO AL PULSANTE "ATTIVA AGGIORNAMENTI AUTOMATICI"


'aggiorna immediatamente

Call COPIASINGOLO

'accende l'interruttore
Sheets("Index").Select

Cells(1, 31).Value = 1 ' Cella di controllo "1" Attivo , "0" Disattivato
'Range("L4").Select
'ActiveCell.FormulaR1C1 = "=DAY(NOW())"
Sheets("Index").Range("L4").FormulaR1C1 = "=DAY(NOW())" 'Imposta il giorno automatico in base alla data attuale
'lancia il prossimo aggiornamento

Application.OnTime runtime1, "COPIA", , True

 'prossimo = CStr(runtime1)
  prossimo = runtime1
    'lunghezza = Len(prossimo)
    'prossimo = Left(prossimo, lunghezza - 3)
    
 Cells(7, 2).Value = prossimo '"Prossimo: " & prossimo 'Cella con indicazione del prossimo aggiornamento


'ActiveSheet.Protect DrawingObjects:=True, Contents:=True, Scenarios:=True

End Sub


Sub COPIASINGOLO() 'ESEGUITO DA AGGIORNAMENTI AUTOMATICI

Sheets("Index").Select
Sheets("Index").[G1] = "AGGIORNAMENTO IN CORSO..."
Application.ScreenUpdating = False

    'prende l'orario attuale
    
    
timein = Now
    ' aggiorna dati

'Sheets("VAR").Select

'Call Aggiorna_DatiIndex
Call Aggiorna_IncontriConclusi
    
    
    

    'calcola l'intervallo di aggiornamento leggendolo dal foglio
    
    ore = "00"
    'ore = CStr(Cells(5, 19).Value) 'Cella Ore
    'If Len(ore) = 1 Then
    'ore = "0" & ore
    'End If

    minuti = CStr(Cells(3, 5).Value) 'Cella Minuti
    If Len(minuti) = 1 Then
    minuti = "0" & minuti
    End If

    secondi = CStr(Cells(4, 5).Value) 'Cella Secondi
    If Len(secondi) = 1 Then
    secondi = "0" & secondi
    End If
    
    intervallo = ore & ":" & minuti & ":" & secondi
    
    'calcola il prossimo aggiornamento (serve se la routine |fffd| eseguita
    'all'inizio degli aggiornamenti automatici)
    
    runtime1 = timein + TimeValue(intervallo)
    
    'spegne l'interruttore
    
    Cells(1, 31).Value = 0 'Cella di controllo
    Sheets("Index").[G1] = "Aggiornato"
    Application.ScreenUpdating = True
    

End Sub
Sub COPIA()

Sheets("Index").Select

'verifica se l'interruttore |fffd| acceso e prende l'orario attuale
Sheets("Index").[G1] = "AGGIORNAMENTO IN CORSO...."
Application.ScreenUpdating = False
If Cells(1, 31).Value = 1 Then

timein = Now
' aggiorna dati
 
'Sheets("VAR").Select
'Call Aggiorna_DatiIndex
Call Aggiorna_IncontriConclusi

     'incrementa l'interruttore e calcola l'intervallo di aggiornamento leggendolo dal foglio
    
    ore = "00"
    'ore = CStr(Cells(5, 19).Value) 'Cella Ore
    'If Len(ore) = 1 Then
    'ore = "0" & ore
    'End If

    minuti = CStr(Cells(3, 5).Value) 'Cella Minuti
    If Len(minuti) = 1 Then
    minuti = "0" & minuti
    End If

    secondi = CStr(Cells(4, 5).Value) 'Cella Secondi
    If Len(secondi) = 1 Then
    secondi = "0" & secondi
    End If
    
    intervallo = ore & ":" & minuti & ":" & secondi
    
    'calcola e lancia il prossimo aggiornamento
    
    runtime1 = timein + TimeValue(intervallo)
    Application.OnTime runtime1, "COPIA", , True
    
    prossimo = runtime1
    'lunghezza = Len(prossimo)
    'prossimo = Left(prossimo, lunghezza - 3)
    
    Cells(7, 2).Value = prossimo '"Prossimo: " & prossimo 'Cella con indicazione del prossimo aggiornamento
    Sheets("Index").[G1] = "ATTENDO LO SCADERE DEL TEMPO"
    End If

    Application.ScreenUpdating = True

End Sub
Sub fermatimer()
  
    'azzera l'interrutore e ferma l'aggiornamento automatico
    
    If Cells(1, 31).Value = 1 Then
    Cells(1, 31).Value = 0
    
    If runtime1 > Now Then
    Application.OnTime runtime1, "COPIA", , False
    'Sheets("Index").[G3] = "FERMO"
    Sheets("Index").[G1] = "Stop Time"

    End If
    Sheets("Index").[G1] = "Stop Time"
    End If

End Sub
Attribute VB_Name = "Questa_cartella_di_lavoro"
Attribute VB_Base = "0{00020819-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True


INQUEST-PP=macro
