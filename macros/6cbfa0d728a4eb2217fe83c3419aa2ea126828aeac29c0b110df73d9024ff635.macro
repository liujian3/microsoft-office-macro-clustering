Attribute VB_Name = "Chart1"
Attribute VB_Base = "0{00020821-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Chart4"
Attribute VB_Base = "0{00020821-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Module1"
Sub HistoricalData()

Dim datasheet As Worksheet, Setup As Worksheet
Set datasheet = Worksheets("Input Data")
Set Setup = Worksheets("Setup")
Dim symbol As String, counter As Integer, period As String
On Error Resume Next
Application.Calculation = xlCalculationManual
Application.DisplayAlerts = False
Application.Calculate

EndDate = Date
If Worksheets("Setup").OptionButton1.Value = True Then
    freq = "d"
    StartDate = Date - (Worksheets("Setup").Range("F10").Value * 1.488) - 50 * 1.488
ElseIf Worksheets("Setup").OptionButton2.Value = True Then
    freq = "w"
    StartDate = Date - (Worksheets("Setup").Range("F10").Value * 7)
ElseIf Worksheets("Setup").OptionButton3.Value = True Then
    freq = "m"
    StartDate = Date - (Worksheets("Setup").Range("F10").Value * 30.44)
End If
symbol = Setup.Cells(10, 14).Value

Sheets("Input Data").Range("A2:G10000").ClearContents
Sheets("Calculations").Range("AJ2:AP10000").ClearContents

'qurl = "http://finance.google.com/finance/historical?q=" & symbol
'qurl = qurl & "&startdate=" & MonthName(Month(StartDate), True) & _
'       "+" & Day(StartDate) & "+" & Year(StartDate) & _
'       "&enddate=" & MonthName(Month(EndDate), True) & _
'       "+" & Day(EndDate) & "+" & Year(EndDate) & "&output=csv"

'qurl = "https://www.investopedia.com/markets/api/partial/historical/?Symbol=SPY&Type=Historical+Prices&Timeframe=Daily&StartDate=Nov+28%2C+2016&EndDate=Dec+05%2C+2017"
'qurl = "https://www.investopedia.com/markets/api/partial/historical/?Symbol=" & symbol & "&Type=Historical+Prices&Timeframe=Daily&StartDate=" & StartDate & "&EndDate=" & EndDate & ""
qurl = "http://download.macrotrends.net/assets/php/stock_data_export.php?t=" & symbol

QueryQuote:
With Sheets("Calculations").QueryTables.Add(Connection:="URL;" & qurl, Destination:=Sheets("Calculations").Range("AJ1"))
    .BackgroundQuery = True
    .RefreshStyle = xlOverwriteCells
    .TablesOnlyFromHTML = False
    .Refresh BackgroundQuery:=False
    .SaveData = True
End With

Sheets("Calculations").Columns("AJ").TextToColumns Destination:=Sheets("Calculations").Range("AJ1"), DataType:=xlDelimited, _
                                                       TextQualifier:=xlDoubleQuote, ConsecutiveDelimiter:=False, Tab:=True, _
                                                       Semicolon:=False, Comma:=True, Space:=False, other:=False
Sheets("Calculations").Columns("AJ:AP").ColumnWidth = 12

    'MacroTrands Incoming Data Handler
    Sheets("Calculations").Range("AJ1:AO14").Delete Shift:=xlUp
    Worksheets("Calculations").Sort.SortFields.Clear
    Worksheets("Calculations").Sort.SortFields.Add Key:=Range( _
        "AJ1"), SortOn:=xlSortOnValues, Order:=xlDescending, DataOption:= _
        xlSortNormal
    With Worksheets("Calculations").Sort
        .SetRange Range("AJ1:AO9999")
        .Header = xlGuess
        .MatchCase = False
        .Orientation = xlTopToBottom
        .SortMethod = xlPinYin
        .Apply
    End With
    Sheets("Calculations").Range("AJ2:AO2").Delete Shift:=xlUp

For lcol = 36 To 41 'Replace any missing data ("-") with the price from the previous day
lrow = 2
    Do Until Sheets("Calculations").Cells(lrow, lcol).Value = ""
        If Sheets("Calculations").Cells(lrow, lcol).Value = "-" Then Sheets("Calculations").Cells(lrow, lcol).Value = Sheets("Calculations").Cells(lrow + 1, lcol).Value
        lrow = lrow + 1
    Loop
Next lcol

lrow = 2 '-------------Remove Dividend-------------
Do Until Sheets("Calculations").Cells(lrow, 36).Value = ""
    If Sheets("Calculations").Cells(lrow, 36).Value = Sheets("Calculations").Cells(lrow + 1, 36).Value Then
        Sheets("Calculations").Cells(lrow + 1, 36).Delete Shift:=xlUp
        Sheets("Calculations").Cells(lrow + 1, 37).Delete Shift:=xlUp
        Sheets("Calculations").Cells(lrow + 1, 38).Delete Shift:=xlUp
        Sheets("Calculations").Cells(lrow + 1, 39).Delete Shift:=xlUp
        Sheets("Calculations").Cells(lrow + 1, 40).Delete Shift:=xlUp
        Sheets("Calculations").Cells(lrow + 1, 41).Delete Shift:=xlUp
    End If
    lrow = lrow + 1
Loop

If freq = "d" Then
    'Paste daily input data on input sheet
    Sheets("Calculations").Range("AJ2:AP10000").Copy
    Sheets("Input Data").Range("A2").PasteSpecial Paste:=xlPasteValues, Operation:=xlNone, SkipBlanks _
        :=False, Transpose:=False
    Sheets("Calculations").Range("AJ:AP").Delete
ElseIf freq = "w" Then
    lrow = 2 'Daily counter
    WDay = 2 'Weekly Counter
    Do
        Worksheets("Input Data").Cells(WDay, 1).Value = Worksheets("Calculations").Cells(lrow, 36).Value 'date
        POpen = Worksheets("Calculations").Cells(lrow, 37).Value
        PHigh = Worksheets("Calculations").Cells(lrow, 38).Value
        PLow = Worksheets("Calculations").Cells(lrow, 39).Value
        Worksheets("Input Data").Cells(WDay, 5).Value = Worksheets("Calculations").Cells(lrow, 40).Value 'close
        Vol = Worksheets("Calculations").Cells(lrow, 41).Value
        Do While Abs(Worksheets("Calculations").Cells(lrow, 36) - Worksheets("Calculations").Cells(lrow + 1, 36)) = 1
            lrow = lrow + 1
            Worksheets("Input Data").Cells(WDay, 1).Value = Worksheets("Calculations").Cells(lrow, 36).Value
            POpen = Worksheets("Calculations").Cells(lrow, 37).Value
            If Worksheets("Calculations").Cells(lrow, 38).Value > PHigh Then PHigh = Worksheets("Calculations").Cells(lrow, 38).Value
            If Worksheets("Calculations").Cells(lrow, 39).Value < PLow Then PLow = Worksheets("Calculations").Cells(lrow, 39).Value
            Vol = Vol + Worksheets("Calculations").Cells(lrow, 41).Value
        Loop
        
        Worksheets("Input Data").Cells(WDay, 2).Value = POpen
        Worksheets("Input Data").Cells(WDay, 3).Value = PHigh
        Worksheets("Input Data").Cells(WDay, 4).Value = PLow
        Worksheets("Input Data").Cells(WDay, 6).Value = Vol
        WDay = WDay + 1
        lrow = lrow + 1
    Loop Until Worksheets("calculations").Cells(lrow, 36) = ""
    Sheets("Calculations").Range("AJ:AP").Delete
ElseIf freq = "m" Then
    lrow = 2 'Daily counter
    MonthData = 2 'Monthly Counter
    Do
        Worksheets("Input Data").Cells(MonthData, 1).Value = Worksheets("Calculations").Cells(lrow, 36).Value 'date
        POpen = Worksheets("Calculations").Cells(lrow, 37).Value
        If Worksheets("Calculations").Cells(lrow, 38).Value <> "-" Then PHigh = Worksheets("Calculations").Cells(lrow, 38).Value
        If Worksheets("Calculations").Cells(lrow, 39).Value <> "-" Then PLow = Worksheets("Calculations").Cells(lrow, 39).Value
        Worksheets("Input Data").Cells(MonthData, 5).Value = Worksheets("Calculations").Cells(lrow, 40).Value 'close
        Vol = Worksheets("Calculations").Cells(lrow, 41).Value
        Do While Abs(Month(Worksheets("Calculations").Cells(lrow, 36)) - Month(Worksheets("Calculations").Cells(lrow + 1, 36))) = 0 And Worksheets("Calculations").Cells(lrow + 1, 36) <> ""
            lrow = lrow + 1
            Worksheets("Input Data").Cells(MonthData, 1).Value = Worksheets("Calculations").Cells(lrow, 36).Value
            POpen = Worksheets("Calculations").Cells(lrow, 37).Value
            If Worksheets("Calculations").Cells(lrow, 38).Value <> "-" And Worksheets("Calculations").Cells(lrow, 38).Value > PHigh Then PHigh = Worksheets("Calculations").Cells(lrow, 38).Value
            If Worksheets("Calculations").Cells(lrow, 39).Value <> "-" And Worksheets("Calculations").Cells(lrow, 39).Value < PLow Then PLow = Worksheets("Calculations").Cells(lrow, 39).Value
            Vol = Vol + Worksheets("Calculations").Cells(lrow, 41).Value
        Loop
        
        Worksheets("Input Data").Cells(MonthData, 2).Value = POpen
        Worksheets("Input Data").Cells(MonthData, 3).Value = PHigh
        Worksheets("Input Data").Cells(MonthData, 4).Value = PLow
        Worksheets("Input Data").Cells(MonthData, 6).Value = Vol
        MonthData = MonthData + 1
        lrow = lrow + 1
    Loop Until Worksheets("calculations").Cells(lrow, 36) = ""
    Sheets("Calculations").Range("AJ:AP").Delete
End If

datasheet.Columns("E:E").Copy 'Google doesn't use Adj. Close
datasheet.Columns("G:G").PasteSpecial Paste:=xlPasteValues, Operation:=xlNone, SkipBlanks _
        :=False, Transpose:=False
datasheet.Cells(1, 1).Value = "001 Symbol: " & symbol
datasheet.Cells(1, 2).Value = "002 Open"
datasheet.Cells(1, 3).Value = "003 High"
datasheet.Cells(1, 4).Value = "004 Low"
datasheet.Cells(1, 5).Value = "005 Close"
datasheet.Cells(1, 6).Value = "006 Volume"
datasheet.Cells(1, 7).Value = "007 Adj. Close"

Worksheets("Setup").CheckBox1 = False

Application.Calculate
Application.DisplayAlerts = True
Application.Calculation = xlCalculationAutomatic

End Sub

Sub realtime()
'
Dim datasheet As Worksheet, HistData As Worksheet, Setup As Worksheet
Set HistData = Worksheets("Input Data")
Set Setup = Worksheets("Setup")
Dim symbol As String

Sheets("Input Data").Select
symbol = Setup.Cells(10, 14).Value


    With ActiveSheet.QueryTables.Add(Connection:= _
        "TEXT;http://finance.yahoo.com/d/quotes.csv?s=" & symbol & "&f=sl1t1", Destination:= _
        Range("CO2"))
        .Name = "quotes.csv?s=SPY&f=sl1t1"
        .FieldNames = True
        .RowNumbers = False
        .FillAdjacentFormulas = False
        .PreserveFormatting = True
        .RefreshOnFileOpen = False
        .RefreshStyle = xlOverwriteCells
        .SavePassword = False
        .SaveData = True
        .AdjustColumnWidth = True
        .RefreshPeriod = 0
        .TextFilePromptOnRefresh = False
        .TextFilePlatform = 437
        .TextFileStartRow = 1
        .TextFileParseType = xlDelimited
        .TextFileTextQualifier = xlTextQualifierDoubleQuote
        .TextFileConsecutiveDelimiter = False
        .TextFileTabDelimiter = False
        .TextFileSemicolonDelimiter = False
        .TextFileCommaDelimiter = True
        .TextFileSpaceDelimiter = False
        .TextFileColumnDataTypes = Array(1, 1, 1)
        .TextFileTrailingMinusNumbers = True
        .Refresh BackgroundQuery:=False
    End With
    
HistData.Cells(2, 2).Value = HistData.Range("CP2").Value 'Copy the latest price to the open
HistData.Cells(2, 5).Value = HistData.Range("CP2").Value 'Copy the latest price to the open
HistData.Cells(2, 7).Value = HistData.Range("CP2").Value 'Copy the latest price to the open
HistData.Cells(2, 1).Value = Date 'Copy the latest price to the open
    
End Sub

Attribute VB_Name = "Module3"
Sub Simulation2(Auto)
Dim datasheet As Worksheet, Setup As Worksheet, output As Worksheet
Set datasheet = Worksheets("Input Data")
Set Setup = Worksheets("Setup")
Set output = Worksheets("Results Output")
Dim lrow As Long, counter As Long, CounterCrit As Long, priceatShort As Currency, priceatLong As Currency, sdev As Single
Dim Longtrades As Single, Longtotal As Currency, goodLongtotal As Currency, goodLongtrades As Currency, Longpercentgain As Single, Forecasted As Currency
Dim Shorttrades As Single, Shorttotal As Currency, goodShorttotal As Currency, goodShorttrades As Currency, Shortpercentgain As Single
Dim ParameterH As Single, ParameterL As Single, BuyHold As Currency
Dim symbol As String, Continue As String, ignorecritA As String, ignorecritB As String, ignorecritC As String, ignorecritD As String
Dim Axperiods As Long, Bxperiods  As Long, Cxperiods As Long, Dxperiods As Long, Ayperiods  As Long, Byperiods  As Long, Cyperiods  As Long, Dyperiods  As Long
Dim xCol As Integer, ycol As Integer, Upper As Integer, Lower As Integer

A1 = Left(Worksheets("Setup").Cells(12, 4).Value, 3)
B1 = Left(Worksheets("Setup").Cells(14, 4).Value, 3)
C1 = Left(Worksheets("Setup").Cells(16, 4).Value, 3)
D1 = Left(Worksheets("Setup").Cells(18, 4).Value, 3)
A2 = Left(Worksheets("Setup").Cells(12, 12).Value, 3)
B2 = Left(Worksheets("Setup").Cells(14, 12).Value, 3)
C2 = Left(Worksheets("Setup").Cells(16, 12).Value, 3)
D2 = Left(Worksheets("Setup").Cells(18, 12).Value, 3)

If Worksheets("Setup").Cells(12, 19).Value <> "" And ((Worksheets("Setup").OptionButton5.Value = True And (Worksheets("Setup").Cells(12, 6).Value <= 0 Or Worksheets("Setup").Cells(12, 14).Value <= 0)) Or (Worksheets("Setup").OptionButton4.Value = True And ((A1 <> 2 And A1 <> 10 And A1 <> 16 And A1 <> 32 And A1 <> 34 And A1 <> 36 And A1 <> 38 And A1 <> 40 And A1 < 99 And Worksheets("Setup").Cells(12, 6).Value <= 0) Or (A2 <> 2 And A2 <> 10 And A2 <> 16 And A2 <> 32 And A2 <> 34 And A2 <> 36 And A2 <> 38 And A2 <> 40 And A2 < 99 And Worksheets("Setup").Cells(12, 14).Value <= 0)))) Then
    MsgBox "ERROR ON SETUP TAB - Criteria A contains a future variable. Remember, since the program sends the signal at day 0 Open, you may not use any data from day 0 except columns 002, 010, 016, 032, 034, 036, 038, or 040 and only in the case of Signal Issuance: 'At Market Open' "
    For Each ws In Worksheets
        ws.Protect Password:=""  'pWord1
    Next
    Worksheets("Main").EnableSelection = xlUnlockedCells
    Worksheets("Setup").EnableSelection = xlUnlockedCells
    Worksheets("Results Output").EnableSelection = xlUnlockedCells
    Exit Sub
ElseIf Worksheets("Setup").Cells(12, 19).Value <> "" And (Not IsNumeric(A1) Or Not IsNumeric(A2)) Then
    MsgBox "ERROR ON SETUP TAB - Criteria A column reference MUST begin with the corresponding 3 digit column number from the tab 'Input Data'."
    For Each ws In Worksheets
        ws.Protect Password:=""  'pWord1
    Next
    Worksheets("Main").EnableSelection = xlUnlockedCells
    Worksheets("Setup").EnableSelection = xlUnlockedCells
    Worksheets("Results Output").EnableSelection = xlUnlockedCells
    Exit Sub
ElseIf Worksheets("Setup").Cells(14, 19).Value <> "" And ((Worksheets("Setup").OptionButton5.Value = True And (Worksheets("Setup").Cells(14, 6).Value <= 0 Or Worksheets("Setup").Cells(14, 14).Value <= 0)) Or (Worksheets("Setup").OptionButton4.Value = True And ((B1 <> 2 And B1 <> 10 And B1 <> 16 And B1 <> 32 And B1 <> 34 And B1 <> 36 And B1 <> 38 And B1 <> 40 And B1 < 99 And Worksheets("Setup").Cells(14, 6).Value <= 0) Or (B2 <> 2 And B2 <> 10 And B2 <> 16 And B2 <> 32 And B2 <> 34 And B2 <> 36 And B2 <> 38 And B2 <> 40 And B2 < 99 And Worksheets("Setup").Cells(14, 14).Value <= 0)))) Then
    MsgBox "ERROR ON SETUP TAB - Criteria B contains a future variable. Remember, since the program sends the signal at day 0 Open, you may not use any data from day 0 except columns 002, 010, 016, 032, 034, 036, 038, or 040 and only in the case of Signal Issuance: 'At Market Open' "
    For Each ws In Worksheets
        ws.Protect Password:=""  'pWord1
    Next
    Worksheets("Main").EnableSelection = xlUnlockedCells
    Worksheets("Setup").EnableSelection = xlUnlockedCells
    Worksheets("Results Output").EnableSelection = xlUnlockedCells
    Exit Sub
ElseIf Worksheets("Setup").Cells(14, 19).Value <> "" And (Not IsNumeric(B1) Or Not IsNumeric(B2)) Then
    MsgBox "ERROR ON SETUP TAB - Criteria B column reference MUST begin with the corresponding 3 digit column number from the tab 'Input Data'."
    For Each ws In Worksheets
        ws.Protect Password:=""  'pWord1
    Next
    Worksheets("Main").EnableSelection = xlUnlockedCells
    Worksheets("Setup").EnableSelection = xlUnlockedCells
    Worksheets("Results Output").EnableSelection = xlUnlockedCells
    Exit Sub
ElseIf Worksheets("Setup").Cells(16, 19).Value <> "" And ((Worksheets("Setup").OptionButton5.Value = True And (Worksheets("Setup").Cells(16, 6).Value <= 0 Or Worksheets("Setup").Cells(16, 14).Value <= 0)) Or (Worksheets("Setup").OptionButton4.Value = True And ((C1 <> 2 And C1 <> 10 And C1 <> 16 And C1 <> 32 And C1 <> 34 And C1 <> 36 And C1 <> 38 And C1 <> 40 And C1 < 99 And Worksheets("Setup").Cells(16, 6).Value <= 0) Or (C2 <> 2 And C2 <> 10 And C2 <> 16 And C2 <> 32 And C2 <> 34 And C2 <> 36 And C2 <> 38 And C2 <> 40 And C2 < 99 And Worksheets("Setup").Cells(16, 14).Value <= 0)))) Then
    MsgBox "ERROR ON SETUP TAB - Criteria C contains a future variable. Remember, since the program sends the signal at day 0 Open, you may not use any data from day 0 except columns 002, 010, 016, 032, 034, 036, 038, or 040 and only in the case of Signal Issuance: 'At Market Open' "
    For Each ws In Worksheets
        ws.Protect Password:=""  'pWord1
    Next
    Worksheets("Main").EnableSelection = xlUnlockedCells
    Worksheets("Setup").EnableSelection = xlUnlockedCells
    Worksheets("Results Output").EnableSelection = xlUnlockedCells
    Exit Sub
ElseIf Worksheets("Setup").Cells(16, 19).Value <> "" And (Not IsNumeric(C1) Or Not IsNumeric(C2)) Then
    MsgBox "ERROR ON SETUP TAB - Criteria C column reference MUST begin with the corresponding 3 digit column number from the tab 'Input Data'."
    For Each ws In Worksheets
        ws.Protect Password:=""  'pWord1
    Next
    Worksheets("Main").EnableSelection = xlUnlockedCells
    Worksheets("Setup").EnableSelection = xlUnlockedCells
    Worksheets("Results Output").EnableSelection = xlUnlockedCells
    Exit Sub
ElseIf Worksheets("Setup").Cells(18, 19).Value <> "" And ((Worksheets("Setup").OptionButton5.Value = True And (Worksheets("Setup").Cells(18, 6).Value <= 0 Or Worksheets("Setup").Cells(18, 14).Value <= 0)) Or (Worksheets("Setup").OptionButton4.Value = True And ((D1 <> 2 And D1 <> 10 And D1 <> 16 And D1 <> 32 And D1 <> 34 And D1 <> 36 And D1 <> 38 And D1 <> 40 And D1 < 99 And Worksheets("Setup").Cells(18, 6).Value <= 0) Or (D2 <> 2 And D2 <> 10 And D2 <> 16 And D2 <> 32 And D2 <> 34 And D2 <> 36 And D2 <> 38 And D2 <> 40 And D2 < 99 And Worksheets("Setup").Cells(18, 14).Value <= 0)))) Then
    MsgBox "ERROR ON SETUP TAB - Criteria D contains a future variable. Remember, since the program sends the signal at day 0 Open, you may not use any data from day 0 except columns 002, 010, 016, 032, 034, 036, 038, or 040 and only in the case of Signal Issuance: 'At Market Open' "
    For Each ws In Worksheets
        ws.Protect Password:=""  'pWord1
    Next
    Worksheets("Main").EnableSelection = xlUnlockedCells
    Worksheets("Setup").EnableSelection = xlUnlockedCells
    Worksheets("Results Output").EnableSelection = xlUnlockedCells
    Exit Sub
ElseIf Worksheets("Setup").Cells(18, 19).Value <> "" And (Not IsNumeric(D1) Or Not IsNumeric(D2)) Then
    MsgBox "ERROR ON SETUP TAB - Criteria D column reference MUST begin with the corresponding 3 digit column number from the tab 'Input Data'."
    For Each ws In Worksheets
        ws.Protect Password:=""  'pWord1
    Next
    Worksheets("Main").EnableSelection = xlUnlockedCells
    Worksheets("Setup").EnableSelection = xlUnlockedCells
    Worksheets("Results Output").EnableSelection = xlUnlockedCells
    Exit Sub
End If

'speeds up macro
Application.Calculation = xlCalculationManual

counter = 1
Pattern = 1

Upper = Setup.Cells(10, 6).Value
If Worksheets("Setup").OptionButton4.Value = True Then Lower = 2 Else Lower = 3
If Worksheets("Setup").CheckBox2.Value = True Then
    If Worksheets("Results Output").Range("R2").Value = True Then
        Lower = 255
    ElseIf Worksheets("Results Output").Range("R3").Value = True Then
        Lower = 53
    ElseIf Worksheets("Results Output").Range("R4").Value = True Then
        Lower = 13
    End If
End If
Axperiods = Setup.Cells(12, 6).Value
Bxperiods = Setup.Cells(14, 6).Value
Cxperiods = Setup.Cells(16, 6).Value
Dxperiods = Setup.Cells(18, 6).Value
Ayperiods = Setup.Cells(12, 14).Value
Byperiods = Setup.Cells(14, 14).Value
Cyperiods = Setup.Cells(16, 14).Value
Dyperiods = Setup.Cells(18, 14).Value
ignorecritA = Setup.Cells(12, 19).Value
ignorecritB = Setup.Cells(14, 19).Value
ignorecritC = Setup.Cells(16, 19).Value
ignorecritD = Setup.Cells(18, 19).Value
Sheets("Results Output").Range("L2:L28000").ClearContents
Sheets("Results Output").Select
Range("A1").Select
Sheets("Results Output").Range("A2:B28000").ClearContents
Sheets("Results Output").Range("D2:H28000").ClearContents
Sheets("Results Output").Range("T2:T28000").ClearContents


Longtrades = 0
Longtotal = 0
goodLongtotal = 0
goodLongtrades = 0
Longpercentgain = 0
Shorttrades = 0
Shorttotal = 0
goodShorttotal = 0
goodShorttrades = 0
Shortpercentgain = 0
priceatShort = 0
priceatLong = 0

If datasheet.Cells(Upper + 10, 1).Value = "" Then
    Do
        Upper = Upper - 1
    Loop Until datasheet.Cells(Upper + 10, 1).Value <> "" And datasheet.Cells(Upper + 10, 8).Value <> ""
End If

BuyHold = datasheet.Cells(Upper, 10).Value '13

For lrow = Upper To Lower Step -1   'Simulation Range (Should be 1 from end)

    output.Cells(lrow, 1).Value = datasheet.Cells(lrow, 1).Value
    output.Cells(lrow, 2).Value = "Cash"

'Define and evaluate the criteria
For CounterCrit = 1 To 4
    If Setup.Cells(10 + 2 * CounterCrit, 4).Value <> "" And Setup.Cells(10 + 2 * CounterCrit, 12).Value <> "" And Setup.Cells(10 + 2 * CounterCrit, 11).Value <> "" Then 'if non applied criteria contains blanks, just ignore them.

        xCol = Left(Setup.Cells(10 + 2 * CounterCrit, 4).Value, 3)
        ycol = Left(Setup.Cells(10 + 2 * CounterCrit, 12).Value, 3)
        Op = Setup.Cells(10 + 2 * CounterCrit, 11).Value
        
        Select Case Op
            Case "="
                Select Case CounterCrit
                    Case 1
                        A = datasheet.Cells(lrow + Axperiods, xCol).Value = datasheet.Cells(lrow + Ayperiods, ycol).Value
                    Case 2
                        B = datasheet.Cells(lrow + Bxperiods, xCol).Value = datasheet.Cells(lrow + Byperiods, ycol).Value
                    Case 3
                        C = datasheet.Cells(lrow + Cxperiods, xCol).Value = datasheet.Cells(lrow + Cyperiods, ycol).Value
                    Case 4
                        D = datasheet.Cells(lrow + Dxperiods, xCol).Value = datasheet.Cells(lrow + Dyperiods, ycol).Value
                End Select
            Case "<>"
                Select Case CounterCrit
                    Case 1
                        A = datasheet.Cells(lrow + Axperiods, xCol).Value <> datasheet.Cells(lrow + Ayperiods, ycol).Value
                    Case 2
                        B = datasheet.Cells(lrow + Bxperiods, xCol).Value <> datasheet.Cells(lrow + Byperiods, ycol).Value
                    Case 3
                        C = datasheet.Cells(lrow + Cxperiods, xCol).Value <> datasheet.Cells(lrow + Cyperiods, ycol).Value
                    Case 4
                        D = datasheet.Cells(lrow + Dxperiods, xCol).Value <> datasheet.Cells(lrow + Dyperiods, ycol).Value
                End Select
            Case "<"
                Select Case CounterCrit
                    Case 1
                        A = datasheet.Cells(lrow + Axperiods, xCol).Value < datasheet.Cells(lrow + Ayperiods, ycol).Value
                    Case 2
                        B = datasheet.Cells(lrow + Bxperiods, xCol).Value < datasheet.Cells(lrow + Byperiods, ycol).Value
                    Case 3
                        C = datasheet.Cells(lrow + Cxperiods, xCol).Value < datasheet.Cells(lrow + Cyperiods, ycol).Value
                    Case 4
                        D = datasheet.Cells(lrow + Dxperiods, xCol).Value < datasheet.Cells(lrow + Dyperiods, ycol).Value
                End Select
            Case "<="
                Select Case CounterCrit
                    Case 1
                        A = datasheet.Cells(lrow + Axperiods, xCol).Value <= datasheet.Cells(lrow + Ayperiods, ycol).Value
                    Case 2
                        B = datasheet.Cells(lrow + Bxperiods, xCol).Value <= datasheet.Cells(lrow + Byperiods, ycol).Value
                    Case 3
                        C = datasheet.Cells(lrow + Cxperiods, xCol).Value <= datasheet.Cells(lrow + Cyperiods, ycol).Value
                    Case 4
                        D = datasheet.Cells(lrow + Dxperiods, xCol).Value <= datasheet.Cells(lrow + Dyperiods, ycol).Value
                End Select
            Case ">"
                Select Case CounterCrit
                    Case 1
                        A = datasheet.Cells(lrow + Axperiods, xCol).Value > datasheet.Cells(lrow + Ayperiods, ycol).Value
                    Case 2
                        B = datasheet.Cells(lrow + Bxperiods, xCol).Value > datasheet.Cells(lrow + Byperiods, ycol).Value
                    Case 3
                        C = datasheet.Cells(lrow + Cxperiods, xCol).Value > datasheet.Cells(lrow + Cyperiods, ycol).Value
                    Case 4
                        D = datasheet.Cells(lrow + Dxperiods, xCol).Value > datasheet.Cells(lrow + Dyperiods, ycol).Value
                End Select
            Case ">="
                Select Case CounterCrit
                    Case 1
                        A = datasheet.Cells(lrow + Axperiods, xCol).Value >= datasheet.Cells(lrow + Ayperiods, ycol).Value
                    Case 2
                        B = datasheet.Cells(lrow + Bxperiods, xCol).Value >= datasheet.Cells(lrow + Byperiods, ycol).Value
                    Case 3
                        C = datasheet.Cells(lrow + Cxperiods, xCol).Value >= datasheet.Cells(lrow + Cyperiods, ycol).Value
                    Case 4
                        D = datasheet.Cells(lrow + Dxperiods, xCol).Value >= datasheet.Cells(lrow + Dyperiods, ycol).Value
                End Select
        End Select
    End If
Next CounterCrit

    counter = 1000
    Select Case Setup.Cells(37, 5).Value
        Case True
            CtoL = True
        Case False
            CtoL = False
        Case "A"
            CtoL = A
        Case "B"
            CtoL = B
        Case "C"
            CtoL = C
        Case "D"
            CtoL = D
        Case "Not A"
            CtoL = Not A
        Case "Not B"
            CtoL = Not B
        Case "Not C"
            CtoL = Not C
        Case "Not D"
            CtoL = Not D
    End Select

    Select Case Setup.Cells(38, 5).Value
        Case True
            CtoS = True
        Case False
            CtoS = False
        Case "A"
            CtoS = A
        Case "B"
            CtoS = B
        Case "C"
            CtoS = C
        Case "D"
            CtoS = D
        Case "Not A"
            CtoS = Not A
        Case "Not B"
            CtoS = Not B
        Case "Not C"
            CtoS = Not C
        Case "Not D"
            CtoS = Not D
    End Select
    
    Select Case Setup.Cells(37, 12).Value
        Case True
            LtoS = True
        Case False
            LtoS = False
        Case "A"
            LtoS = A
        Case "B"
            LtoS = B
        Case "C"
            LtoS = C
        Case "D"
            LtoS = D
        Case "Not A"
            LtoS = Not A
        Case "Not B"
            LtoS = Not B
        Case "Not C"
            LtoS = Not C
        Case "Not D"
            LtoS = Not D
    End Select
    
    Select Case Setup.Cells(38, 12).Value
        Case True
            LtoC = True
        Case False
            LtoC = False
        Case "A"
            LtoC = A
        Case "B"
            LtoC = B
        Case "C"
            LtoC = C
        Case "D"
            LtoC = D
        Case "Not A"
            LtoC = Not A
        Case "Not B"
            LtoC = Not B
        Case "Not C"
            LtoC = Not C
        Case "Not D"
            LtoC = Not D
    End Select
    
    Select Case Setup.Cells(37, 19).Value
        Case True
            StoL = True
        Case False
            StoL = False
        Case "A"
            StoL = A
        Case "B"
            StoL = B
        Case "C"
            StoL = C
        Case "D"
            StoL = D
        Case "Not A"
            StoL = Not A
        Case "Not B"
            StoL = Not B
        Case "Not C"
            StoL = Not C
        Case "Not D"
            StoL = Not D
    End Select
    
    Select Case Setup.Cells(38, 19).Value
        Case True
            StoC = True
        Case False
            StoC = False
        Case "A"
            StoC = A
        Case "B"
            StoC = B
        Case "C"
            StoC = C
        Case "D"
            StoC = D
        Case "Not A"
            StoC = Not A
        Case "Not B"
            StoC = Not B
        Case "Not C"
            StoC = Not C
        Case "Not D"
            StoC = Not D
    End Select




'++++++++++++++++++++++++++++++++++++++++++++++++++++
If output.Cells(lrow + 1, 2).Value = "Cash" Then
        If CtoL Then
            output.Cells(lrow, 2).Value = "Long"
            priceatLong = datasheet.Cells(lrow, 2 + 8).Value
            output.Cells(lrow, 5).Value = priceatLong
            
            datasheet.Cells(lrow, 56) = 1 'Counter for consecutive Longs for time based exits
            datasheet.Cells(lrow, 57) = 0 'Counter for consecutive Shorts for time based exits

        ElseIf CtoS Then
            output.Cells(lrow, 2).Value = "Short"
            priceatShort = datasheet.Cells(lrow, 2 + 8).Value
            output.Cells(lrow, 6).Value = priceatShort

            datasheet.Cells(lrow, 56) = 0 'Counter for consecutive Longs for time based exits
            datasheet.Cells(lrow, 57) = 1 'Counter for consecutive Shorts for time based exits
        Else
            output.Cells(lrow, 2).Value = "Cash"
            'If Auto = 0 Then output.Cells(lrow, 19).Value = Range("r31")
            datasheet.Cells(lrow, 56) = 0 'Counter for consecutive Longs for time based exits
            datasheet.Cells(lrow, 57) = 0 'Counter for consecutive Shorts for time based exits
        End If
    End If

    If output.Cells(lrow + 1, 2).Value = "Short" Then
            If StoL Then
                output.Cells(lrow, 2).Value = "Long"
                priceatLong = datasheet.Cells(lrow, 2 + 8).Value
                datasheet.Cells(lrow, 56) = 1 'Counter for consecutive Longs for time based exits
                datasheet.Cells(lrow, 57) = 0 'Counter for consecutive Shorts for time based exits
                
                 'Graph
                 output.Cells(lrow, 5).Value = priceatLong
                 output.Cells(lrow, 8).Value = ((priceatShort - priceatLong) / priceatShort) '- 0.004
                 output.Cells(lrow, 20).Value = ((datasheet.Cells(lrow + 1, 2 + 8).Value - datasheet.Cells(lrow, 2 + 8).Value) / datasheet.Cells(lrow + 1, 2 + 8).Value)
         
            ElseIf StoC Then
                output.Cells(lrow, 2).Value = "Cash" '
                priceatLong = datasheet.Cells(lrow, 2 + 8).Value
                datasheet.Cells(lrow, 56) = 0 'Counter for consecutive Longs for time based exits
                datasheet.Cells(lrow, 57) = 0 'Counter for consecutive Shorts for time based exits
           
                 'Graph
                 output.Cells(lrow, 4).Value = priceatLong
                 output.Cells(lrow, 8).Value = ((priceatShort - priceatLong) / priceatShort) '- 0.004
                 output.Cells(lrow, 20).Value = ((datasheet.Cells(lrow + 1, 2 + 8).Value - datasheet.Cells(lrow, 2 + 8).Value) / datasheet.Cells(lrow + 1, 2 + 8).Value)
            
            Else
                output.Cells(lrow, 2).Value = "Short"
                'Below is to provide periodic results rather than trade results
                'priceatLong = datasheet.Cells(lrow, 2).Value
                'output.Cells(lrow, 4).Value = priceatLong
                output.Cells(lrow, 20).Value = ((datasheet.Cells(lrow + 1, 2 + 8).Value - datasheet.Cells(lrow, 2 + 8).Value) / datasheet.Cells(lrow + 1, 2 + 8).Value)
                'output.Cells(lrow, 7).Value = ((priceatShort  - priceatLong ) / priceatShort) '- 0.004
                'priceatShort = datasheet.Cells(lrow, 2).Value
                'output.Cells(lrow, 6).Value = priceatShort
                
                datasheet.Cells(lrow, 56) = 0 'Counter for consecutive Longs for time based exits
                datasheet.Cells(lrow, 57) = datasheet.Cells(lrow + 1, 57) + 1 'Counter for consecutive Shorts for time based exits
            End If
    
    ElseIf output.Cells(lrow + 1, 2).Value = "Long" Then
            If LtoS Then
                output.Cells(lrow, 2).Value = "Short"
                priceatShort = datasheet.Cells(lrow, 2 + 8).Value
                datasheet.Cells(lrow, 56) = 0 'Counter for consecutive Longs for time based exits
                datasheet.Cells(lrow, 57) = 1 'Counter for consecutive Shorts for time based exits
    
                'Graph
                output.Cells(lrow, 6).Value = priceatShort
                output.Cells(lrow, 7).Value = ((priceatShort - priceatLong) / priceatLong) '- 0.004
                output.Cells(lrow, 20).Value = ((datasheet.Cells(lrow, 2 + 8).Value - datasheet.Cells(lrow + 1, 2 + 8).Value) / datasheet.Cells(lrow + 1, 2 + 8).Value)

            ElseIf LtoC Then
                output.Cells(lrow, 2).Value = "Cash"
                priceatShort = datasheet.Cells(lrow, 2 + 8).Value
                datasheet.Cells(lrow, 56) = 0 'Counter for consecutive Longs for time based exits
                datasheet.Cells(lrow, 57) = 0 'Counter for consecutive Shorts for time based exits
           
                'Graph
                output.Cells(lrow, 4).Value = priceatShort
                output.Cells(lrow, 7).Value = ((priceatShort - priceatLong) / priceatLong) '- 0.004
                output.Cells(lrow, 20).Value = ((datasheet.Cells(lrow, 2 + 8).Value - datasheet.Cells(lrow + 1, 2 + 8).Value) / datasheet.Cells(lrow + 1, 2 + 8).Value)

            Else
                output.Cells(lrow, 2).Value = "Long"
                'Below is to provide periodic results rather than trade results
                'priceatShort = datasheet.Cells(lrow, 2).Value
                'output.Cells(lrow, 4).Value = priceatShort
                output.Cells(lrow, 20).Value = ((datasheet.Cells(lrow, 2 + 8).Value - datasheet.Cells(lrow + 1, 2 + 8).Value) / datasheet.Cells(lrow + 1, 2 + 8).Value)
                'output.Cells(lrow, 7).Value = ((priceatShort - priceatLong) / priceatLong) '- 0.004
                'priceatLong = datasheet.Cells(lrow, 2).Value
                'output.Cells(lrow, 5).Value = priceatLong
                
                datasheet.Cells(lrow, 56) = datasheet.Cells(lrow + 1, 56) + 1 'Counter for consecutive Longs for time based exits
                datasheet.Cells(lrow, 57) = 0 'Counter for consecutive Shorts for time based exits
            End If
    End If

If output.Cells(lrow, 12).Value = "" Then output.Cells(lrow, 12).Value = (datasheet.Cells(lrow, 10).Value - BuyHold) / BuyHold '10

Next lrow

'if the last year of data is deleted, then the buy & hold result needs to be transferred up to the final cells so that the rating calculated correctly
If Worksheets("Setup").CheckBox2.Value = True And Lower > 3 Then
    output.Cells(2, 12).Value = output.Cells(Lower, 12).Value
    output.Cells(3, 12).Value = output.Cells(Lower, 12).Value
End If

Application.Calculate

output.Cells(2, 3).Value = Setup.Cells(10, 14).Value 'symbol
If output.Cells(2, 12).Value = "" Then output.Cells(2, 12).Value = output.Cells(3, 12).Value

Application.Calculation = xlCalculationAutomatic

End Sub
Attribute VB_Name = "Module5"
Sub Trial()



End Sub
Attribute VB_Name = "Sheet1"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Control = "OptionButton1, 13, 3, MSForms, OptionButton"
Private Sub OptionButton1_Click()

'Application.OnTime TimeValue(CDate(Worksheets("Main").Cells(27, 13).Value)), "livemode", , False

End Sub
Attribute VB_Name = "Sheet2"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Control = "CommandButton1, 1, 0, MSForms, CommandButton"
Attribute VB_Control = "CommandButton2, 35, 1, MSForms, CommandButton"
Attribute VB_Control = "CommandButton3, 36, 2, MSForms, CommandButton"
Attribute VB_Control = "CommandButton4, 137, 3, MSForms, CommandButton"
Private Sub CommandButton1_Click()
    Worksheets("Results Output").Unprotect Password:="" 'pWord3
        
    Columns("N:N").Select
    Selection.Copy
    Selection.End(xlToRight).Select
    ActiveCell.Offset(0, 1).Activate
    Selection.PasteSpecial Paste:=xlPasteValues, Operation:=xlNone, SkipBlanks _
        :=False, Transpose:=False
    Selection.PasteSpecial Paste:=xlPasteFormats, Operation:=xlNone, _
        SkipBlanks:=False, Transpose:=False
    
    Selection.Locked = False
    Selection.FormulaHidden = False
    
    Columns("J:J").Select
    Application.CutCopyMode = False
    Selection.Copy
    Selection.End(xlToRight).Select
    Selection.End(xlToRight).Select
    Selection.End(xlToRight).Select
    ActiveCell.Offset(0, 1).Activate
    Selection.PasteSpecial Paste:=xlPasteValues, Operation:=xlNone, SkipBlanks _
        :=False, Transpose:=False
    Selection.PasteSpecial Paste:=xlPasteFormats, Operation:=xlNone, _
        SkipBlanks:=False, Transpose:=False
    
    Selection.Locked = False
    Selection.FormulaHidden = False
    
    ActiveCell = Date
    
    Worksheets("Results Output").Protect Password:="" 'pWord3

    
End Sub

Private Sub CommandButton2_Click()
    Worksheets("Results Output").Unprotect Password:="" 'pWord3
        
    Range("BO1:IV4000").Select
    Selection.ClearContents
    
    Worksheets("Results Output").Protect Password:="" 'pWord3
End Sub

Private Sub CommandButton3_Click()
    Worksheets("Results Output").Unprotect Password:="" 'pWord3

    Range("BN1").Select
    Selection.End(xlToRight).Select
    Range("" & Mid(ActiveCell.Address, 2, 2) & ":" & Mid(ActiveCell.Address, 2, 2) & "").ClearContents
    ActiveCell.Offset(0, -1).Select
    Range("" & Mid(ActiveCell.Address, 2, 2) & ":" & Mid(ActiveCell.Address, 2, 2) & "").ClearContents
    
    Range("A2").Select
    
    Worksheets("Results Output").Protect Password:="" 'pWord3
End Sub

Private Sub CommandButton4_Click()

    Worksheets("Results Output").Unprotect Password:="" 'pWord3

If Worksheets("Results Output").Range("R2").Value = True Then
    Range("D2:H255").Select
    Selection.ClearContents
ElseIf Worksheets("Results Output").Range("R3").Value = True Then
    Range("D2:H53").Select
    Selection.ClearContents
ElseIf Worksheets("Results Output").Range("R4").Value = True Then
    Range("D2:H13").Select
    Selection.ClearContents
End If

    Worksheets("Results Output").Protect Password:="" 'pWord3

End Sub
Attribute VB_Name = "Sheet3"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Control = "CheckBox1, 73, 0, MSForms, CheckBox"
Attribute VB_Control = "OptionButton5, 64, 1, MSForms, OptionButton"
Attribute VB_Control = "CommandButton2, 43, 3, MSForms, CommandButton"
Attribute VB_Control = "OptionButton1, 52, 4, MSForms, OptionButton"
Attribute VB_Control = "OptionButton2, 53, 5, MSForms, OptionButton"
Attribute VB_Control = "OptionButton3, 54, 6, MSForms, OptionButton"
Attribute VB_Control = "OptionButton4, 55, 7, MSForms, OptionButton"
Attribute VB_Control = "CheckBox2, 19532, 12, MSForms, CheckBox"
Private Sub CommandButton2_Click()

For Each ws In Worksheets
    ws.Unprotect Password:="" 'pWord3
Next
Application.Calculate

'make sure formulas are pasted far enough down on input data sheet (Initially, only 250 rows have formulas)
RowCount = Worksheets("Input Data").Range("P:P").Cells.SpecialCells(xlCellTypeConstants).Count
RequestedRows = Worksheets("Setup").Range("F10") + 50
If RequestedRows > RowCount Then Worksheets("Input Data").Range("H245:GR250").AutoFill Destination:=Worksheets("Input Data").Range("H245:GR" & RequestedRows & ""), Type:=xlFillDefault

If Worksheets("Setup").Cells(40, 15).Value <> "" Then
    Worksheets("Setup").Cells(37, 5).Value = ""
    Worksheets("Setup").Cells(38, 5).Value = ""
    Worksheets("Setup").Cells(37, 12).Value = ""
    Worksheets("Setup").Cells(38, 12).Value = ""
    Worksheets("Setup").Cells(37, 19).Value = ""
    Worksheets("Setup").Cells(38, 19).Value = ""
End If

If Worksheets("Setup").CheckBox1.Value = True Or (Worksheets("Results Output").Cells(2, 3).Value <> Worksheets("Setup").Cells(10, 14).Value) Then Call HistoricalData

Auto = 0
Call Simulation2(Auto)

Worksheets("Results Output").Cells(32, 14).Value = Worksheets("Setup").Cells(37, 5).Value
Worksheets("Results Output").Cells(34, 14).Value = Worksheets("Setup").Cells(38, 5).Value
Worksheets("Results Output").Cells(36, 14).Value = Worksheets("Setup").Cells(37, 12).Value
Worksheets("Results Output").Cells(38, 14).Value = Worksheets("Setup").Cells(38, 12).Value
Worksheets("Results Output").Cells(40, 14).Value = Worksheets("Setup").Cells(37, 19).Value
Worksheets("Results Output").Cells(42, 14).Value = Worksheets("Setup").Cells(38, 19).Value
Worksheets("Results Output").Cells(44, 14).Value = Worksheets("Setup").Cells(40, 15).Value
Worksheets("Results Output").Cells(23, 14).Value = Left(Worksheets("Setup").Cells(12, 4).Value, 3) & ", " & Worksheets("Setup").Cells(12, 6).Value & ", " & Worksheets("Setup").Cells(12, 11).Value & ", " & Left(Worksheets("Setup").Cells(12, 12).Value, 3) & ", " & Worksheets("Setup").Cells(12, 14).Value & ", "
Worksheets("Results Output").Cells(25, 14).Value = Left(Worksheets("Setup").Cells(14, 4).Value, 3) & ", " & Worksheets("Setup").Cells(14, 6).Value & ", " & Worksheets("Setup").Cells(14, 11).Value & ", " & Left(Worksheets("Setup").Cells(14, 12).Value, 3) & ", " & Worksheets("Setup").Cells(14, 14).Value & ", "
Worksheets("Results Output").Cells(27, 14).Value = Left(Worksheets("Setup").Cells(16, 4).Value, 3) & ", " & Worksheets("Setup").Cells(16, 6).Value & ", " & Worksheets("Setup").Cells(16, 11).Value & ", " & Left(Worksheets("Setup").Cells(16, 12).Value, 3) & ", " & Worksheets("Setup").Cells(16, 14).Value & ", "
Worksheets("Results Output").Cells(29, 14).Value = Left(Worksheets("Setup").Cells(18, 4).Value, 3) & ", " & Worksheets("Setup").Cells(18, 6).Value & ", " & Worksheets("Setup").Cells(18, 11).Value & ", " & Left(Worksheets("Setup").Cells(18, 12).Value, 3) & ", " & Worksheets("Setup").Cells(18, 14).Value & ", "

For Each ws In Worksheets
    ws.Protect Password:=""   'pWord1
Next
Worksheets("Main").EnableSelection = xlUnlockedCells
Worksheets("Setup").EnableSelection = xlUnlockedCells
Worksheets("Results Output").EnableSelection = xlUnlockedCells
Application.Calculation = xlCalculationAutomatic
Application.ScreenUpdating = True

Sheets("Return Graph").Select

End Sub

Private Sub OptionButton1_Click()
Worksheets("Setup").CheckBox1 = True
End Sub

Private Sub OptionButton2_Click()
Worksheets("Setup").CheckBox1 = True
End Sub

Private Sub OptionButton3_Click()
Worksheets("Setup").CheckBox1 = True
End Sub
Attribute VB_Name = "Sheet4"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Sheet5"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Sheet8"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "ThisWorkbook"
Attribute VB_Base = "0{00020819-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Private Sub Workbook_Open()

Application.WindowState = xlMaximized
Sheets("Main").Visible = True
Sheets("Setup").Visible = True
Sheets("Results Output").Visible = True
Sheets("Return Graph").Visible = True
Sheets("Input Data").Visible = True
Sheets("Compounded Return Graph").Visible = True
Sheets("Msg").Visible = xlVeryHidden

Sheets("Main").Select

If Application.Version >= "12.0" Then ActiveWorkbook.EnableConnections

End Sub

Private Sub Workbook_BeforeClose(Cancel As Boolean)
   
Sheets("Msg").Visible = True
Sheets("Main").Visible = xlVeryHidden
Sheets("Setup").Visible = xlVeryHidden
Sheets("Results Output").Visible = xlVeryHidden
Sheets("Return Graph").Visible = xlVeryHidden
Sheets("Input Data").Visible = xlVeryHidden
Sheets("Compounded Return Graph").Visible = xlVeryHidden

Sheets("Msg").Select

Application.EnableEvents = True

End Sub



INQUEST-PP=macro
