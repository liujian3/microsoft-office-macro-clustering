Attribute VB_Name = "ThisDocument"
Attribute VB_Base = "1TemplateProject.ThisDocument"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = True
Attribute VB_Customizable = True

Const nazevPolozkyASDFormular = "ASD &Editor |fffd|ablon DF"   'nazev POLOZKY ASDFormular
Const nazevMakraZobrazeniASDFormulare = "zobrazASDFormular"  'nazev makra ktere spousti ASDFormular
Const nazevHlavnihoMenuAplikace = "Menu Bar"  'nazev hlavniho MENU APLIKACE



'pri otevirani dokumentu
Private Sub Document_Open()
    On Error Resume Next
    
    'oblast nastavovani
    CustomizationContext = ThisDocument
    
    'je nutne zakazat drag and drop, protoze tuhle akci nemuzeme mit pod kontrolou.
    'zakaze drag-and-drop
    'Application.Options.AllowDragAndDrop = False
    
    'vymazat menu "ASD |fffd|ablony" z menu aplikace
    VymazatMenuASDSablony
    
    'p|fffd|idat menu "ASD |fffd|ablony" do menu aplikace
    PridatMenuASDSablony
End Sub


'pri uzavirani dokumentu
Private Sub Document_Close()
    On Error Resume Next
    
    'oblast nastavovani
    CustomizationContext = ThisDocument
    
    'povolit drag-and-drop
    'Application.Options.AllowDragAndDrop = True

    'vymazat menu "ASD |fffd|ablony" z menu aplikace
    VymazatMenuASDSablony

End Sub





'prida MENU ASDSablony do hlavniho MENU APLIKACE
Public Sub PridatMenuASDSablony()
    On Error GoTo chyba
    
    Dim asdSablonyPopup As CommandBarPopup      'MENU ASDSablony
    Dim asdFormularControl As CommandBarControl     'polozka ASDFormular
    Dim pocetPolozekHlavnihoMenuAplikace As Integer     'pocet MENU v hlavnim MENU APLIKACE
             
    'oblast nastavovani
    CustomizationContext = ThisDocument
    
    'zjistime pocet MENU v hlavnim MENU APLIKACE
    pocetPolozekHlavnihoMenuAplikace = Application.CommandBars(nazevHlavnihoMenuAplikace).Controls.Count
    
    'pridat MENU ASDSablony
    Set asdSablonyPopup = Application.CommandBars.Item(nazevHlavnihoMenuAplikace).Controls.Add(Type:=msoControlPopup, Before:=(pocetPolozekHlavnihoMenuAplikace))
    asdSablonyPopup.Caption = nazevMenuASDSablony
    
    'pridat polozku ASDFormular
    Set asdFormularControl = asdSablonyPopup.Controls.Add(Type:=msoControlButton, ID:=1, Before:=1)
    asdFormularControl.Caption = nazevPolozkyASDFormular
    asdFormularControl.OnAction = nazevMakraZobrazeniASDFormulare

    On Error Resume Next
    'nastavi zkratkovou klavesu pro ASDFormular
    'KeyBindings.Add KeyCode:=BuildKeyCode(wdKeyF10), KeyCategory:=wdKeyCategoryCommand, Command:=nazevMakraZobrazeniASDFormulare

    GoTo konec
chyba:
    vypisChybu Err
konec:
End Sub


'vymaze MENU ASDSablony z hlavniho MENU APLIKACE
Public Sub VymazatMenuASDSablony()
    On Error GoTo chyba
    Dim i As Integer    'pro cykly
    
    'oblast nastavovani
    CustomizationContext = ThisDocument
    
    'projde MENU APLIKACE a vymaze v nem MENU ASDSablony
    With Application.CommandBars.Item(nazevHlavnihoMenuAplikace).Controls
        For i = .Count To 1 Step -1
            If .Item(i).Caption = nazevMenuASDSablony Then
                .Item(i).Delete
            End If
        Next i
    End With


    'zrusi zkratkovou klavesu pro ASDFormular
    'For i = 1 To KeyBindings.Count
    '    If KeyBindings.Item(i).KeyCode = BuildKeyCode(wdKeyF10) Then
    '        KeyBindings.Item(i).Clear
    '    End If
    'Next i

    GoTo konec
chyba:
    vypisChybu Err
konec:
End Sub

Attribute VB_Name = "UnlinkLinkedPictures"

'predelame hyperlinky
Sub UnlinkHyperlinksAndLinkedPicturesInBody(Optional par1 As String, Optional par2 As String, Optional par3 As String, Optional par4 As String, Optional par5 As String, Optional par6 As String, Optional par7 As String, Optional par8 As String, Optional par9 As String, Optional par10 As String, _
    Optional par11 As String, Optional par12 As String, Optional par13 As String, Optional par14 As String, Optional par15 As String, Optional par16 As String, Optional par17 As String, Optional par18 As String, Optional par19 As String, Optional par20 As String, _
    Optional par21 As String, Optional par22 As String, Optional par23 As String, Optional par24 As String, Optional par25 As String, Optional par26 As String, Optional par27 As String, Optional par28 As String, Optional par29 As String, Optional par30 As String)

Call UnlinkHyperlinksInBody(par1, par2, par3, par4, par5, par6, par7, par8, par9, par10, par11, par12, par13, par14, par15, par16, par17, par18, par19, par20, par21, par22, par23, par24)
Call UnlinkLinkedPicturesInBody(par1, par2, par3, par4, par5, par6, par7, par8, par9, par10, par11, par12, par13, par14, par15, par16, par17, par18, par19, par20, par21, par22, par23, par24)

End Sub


'predelame hyperlinky
Sub UnlinkHyperlinksAndLinkedPicturesInBodyAndHeaderAndFooter(Optional par1 As String, Optional par2 As String, Optional par3 As String, Optional par4 As String, Optional par5 As String, Optional par6 As String, Optional par7 As String, Optional par8 As String, Optional par9 As String, Optional par10 As String, _
    Optional par11 As String, Optional par12 As String, Optional par13 As String, Optional par14 As String, Optional par15 As String, Optional par16 As String, Optional par17 As String, Optional par18 As String, Optional par19 As String, Optional par20 As String, _
    Optional par21 As String, Optional par22 As String, Optional par23 As String, Optional par24 As String, Optional par25 As String, Optional par26 As String, Optional par27 As String, Optional par28 As String, Optional par29 As String, Optional par30 As String)

'Dim i As Integer
'i = 1 / 0

Call UnlinkHyperlinksInHeader(par1, par2, par3, par4, par5, par6, par7, par8, par9, par10, par11, par12, par13, par14, par15, par16, par17, par18, par19, par20, par21, par22, par23, par24)
Call UnlinkHyperlinksInFooter(par1, par2, par3, par4, par5, par6, par7, par8, par9, par10, par11, par12, par13, par14, par15, par16, par17, par18, par19, par20, par21, par22, par23, par24)
Call UnlinkHyperlinksInBody(par1, par2, par3, par4, par5, par6, par7, par8, par9, par10, par11, par12, par13, par14, par15, par16, par17, par18, par19, par20, par21, par22, par23, par24)

Call UnlinkLinkedPicturesInHeader(par1, par2, par3, par4, par5, par6, par7, par8, par9, par10, par11, par12, par13, par14, par15, par16, par17, par18, par19, par20, par21, par22, par23, par24)
Call UnlinkLinkedPicturesInFooter(par1, par2, par3, par4, par5, par6, par7, par8, par9, par10, par11, par12, par13, par14, par15, par16, par17, par18, par19, par20, par21, par22, par23, par24)
Call UnlinkLinkedPicturesInBody(par1, par2, par3, par4, par5, par6, par7, par8, par9, par10, par11, par12, par13, par14, par15, par16, par17, par18, par19, par20, par21, par22, par23, par24)

End Sub


'predelame hyperlinky
Sub UnlinkHyperlinksInBody(Optional par1 As String, Optional par2 As String, Optional par3 As String, Optional par4 As String, Optional par5 As String, Optional par6 As String, Optional par7 As String, Optional par8 As String, Optional par9 As String, Optional par10 As String, _
    Optional par11 As String, Optional par12 As String, Optional par13 As String, Optional par14 As String, Optional par15 As String, Optional par16 As String, Optional par17 As String, Optional par18 As String, Optional par19 As String, Optional par20 As String, _
    Optional par21 As String, Optional par22 As String, Optional par23 As String, Optional par24 As String, Optional par25 As String, Optional par26 As String, Optional par27 As String, Optional par28 As String, Optional par29 As String, Optional par30 As String)
  
  Dim i As Integer
  Dim s As Hyperlink
  For i = ActiveDocument.Hyperlinks.Count To 1 Step -1
    Set s = ActiveDocument.Hyperlinks(i)
    If (s.Type = msoHyperlinkInlineShape) Or (s.Type = msoHyperlinkShape) Then
      s.Delete
    End If  'msoHyperlinkInlineShape, msoHyperlinkShape
  Next i

End Sub


'predelame obrazky linked na embeded
Sub UnlinkLinkedPicturesInBody(Optional par1 As String, Optional par2 As String, Optional par3 As String, Optional par4 As String, Optional par5 As String, Optional par6 As String, Optional par7 As String, Optional par8 As String, Optional par9 As String, Optional par10 As String, _
    Optional par11 As String, Optional par12 As String, Optional par13 As String, Optional par14 As String, Optional par15 As String, Optional par16 As String, Optional par17 As String, Optional par18 As String, Optional par19 As String, Optional par20 As String, _
    Optional par21 As String, Optional par22 As String, Optional par23 As String, Optional par24 As String, Optional par25 As String, Optional par26 As String, Optional par27 As String, Optional par28 As String, Optional par29 As String, Optional par30 As String)

  Dim i As Integer
  Dim s As InlineShape
  For i = ActiveDocument.InlineShapes.Count To 1 Step -1
    Set s = ActiveDocument.InlineShapes(i)
    If s.Type = wdInlineShapeLinkedPicture Then
      ' use debug print to get a list of images converted.. not necessary though...
      'Debug.Print s.Type & " <>"
      's.LinkFormat.SavePictureWithDocument = True
      's.LinkFormat.Update
      s.LinkFormat.BreakLink
    End If  'wdInlineShapeLinkedPicture
  Next i

End Sub


'predelame hyperlinky
Sub UnlinkHyperlinksInHeader(Optional par1 As String, Optional par2 As String, Optional par3 As String, Optional par4 As String, Optional par5 As String, Optional par6 As String, Optional par7 As String, Optional par8 As String, Optional par9 As String, Optional par10 As String, _
    Optional par11 As String, Optional par12 As String, Optional par13 As String, Optional par14 As String, Optional par15 As String, Optional par16 As String, Optional par17 As String, Optional par18 As String, Optional par19 As String, Optional par20 As String, _
    Optional par21 As String, Optional par22 As String, Optional par23 As String, Optional par24 As String, Optional par25 As String, Optional par26 As String, Optional par27 As String, Optional par28 As String, Optional par29 As String, Optional par30 As String)

'ActiveDocument.Fields.Unlink

'Dim aField As Object
'For Each aField In ActiveDocument.Fields
'    aField.LinkFormat.BreakLink
'Next aField

'ActiveDocument.Sections(1).Headers(1).Range.Fields.Unlink

If ActiveDocument.Sections.Count > 0 Then
  If ActiveDocument.Sections(1).Headers.Count > 0 Then
        
      Dim i As Integer
      Dim s As Hyperlink
      For i = ActiveDocument.Sections(1).Headers(1).Range.Hyperlinks.Count To 1 Step -1
        Set s = ActiveDocument.Sections(1).Headers(1).Range.Hyperlinks(i)
        If (s.Type = msoHyperlinkInlineShape) Or (s.Type = msoHyperlinkShape) Then
          s.Delete
        End If  'msoHyperlinkInlineShape, msoHyperlinkShape
      Next i
        
  End If  'Headers
End If  'Sections

End Sub


Sub UnlinkHyperlinksInFooter(Optional par1 As String, Optional par2 As String, Optional par3 As String, Optional par4 As String, Optional par5 As String, Optional par6 As String, Optional par7 As String, Optional par8 As String, Optional par9 As String, Optional par10 As String, _
    Optional par11 As String, Optional par12 As String, Optional par13 As String, Optional par14 As String, Optional par15 As String, Optional par16 As String, Optional par17 As String, Optional par18 As String, Optional par19 As String, Optional par20 As String, _
    Optional par21 As String, Optional par22 As String, Optional par23 As String, Optional par24 As String, Optional par25 As String, Optional par26 As String, Optional par27 As String, Optional par28 As String, Optional par29 As String, Optional par30 As String)

'ActiveDocument.Fields.Unlink

'Dim aField As Object
'For Each aField In ActiveDocument.Fields
'    aField.LinkFormat.BreakLink
'Next aField

'ActiveDocument.Sections(1).Headers(1).Range.Fields.Unlink

If ActiveDocument.Sections.Count > 0 Then
  If ActiveDocument.Sections(1).Footers.Count > 0 Then
        
      Dim i As Integer
      Dim s As Hyperlink
      For i = ActiveDocument.Sections(1).Footers(1).Range.Hyperlinks.Count To 1 Step -1
        Set s = ActiveDocument.Sections(1).Footers(1).Range.Hyperlinks(i)
        If (s.Type = msoHyperlinkInlineShape) Or (s.Type = msoHyperlinkShape) Then
          s.Delete
        End If  'msoHyperlinkInlineShape, msoHyperlinkShape
      Next i
        
  End If  'Footers
End If  'Sections

End Sub

'predelame obrazky linked na embeded
Sub UnlinkLinkedPicturesInHeader(Optional par1 As String, Optional par2 As String, Optional par3 As String, Optional par4 As String, Optional par5 As String, Optional par6 As String, Optional par7 As String, Optional par8 As String, Optional par9 As String, Optional par10 As String, _
    Optional par11 As String, Optional par12 As String, Optional par13 As String, Optional par14 As String, Optional par15 As String, Optional par16 As String, Optional par17 As String, Optional par18 As String, Optional par19 As String, Optional par20 As String, _
    Optional par21 As String, Optional par22 As String, Optional par23 As String, Optional par24 As String, Optional par25 As String, Optional par26 As String, Optional par27 As String, Optional par28 As String, Optional par29 As String, Optional par30 As String)

'ActiveDocument.Fields.Unlink
    
'Dim aField As Object
'For Each aField In ActiveDocument.Fields
'    aField.LinkFormat.BreakLink
'Next aField

'ActiveDocument.Sections(1).Headers(1).Range.Fields.Unlink

If ActiveDocument.Sections.Count > 0 Then
  If ActiveDocument.Sections(1).Headers.Count > 0 Then
        
      Dim i As Integer
      Dim s As InlineShape
      For i = ActiveDocument.Sections(1).Headers(1).Range.InlineShapes.Count To 1 Step -1 '.Fields
        'If s.Type = wdFieldIncludePicture Then
          'If s.InlineShape.Type = wdInlineShapeLinkedPicture Then
          '  s.InlineShape.LinkFormat.BreakLink
          'End If  'wdInlineShapeLinkedPicture
        'End If  'wdFieldIncludePicture
        Set s = ActiveDocument.Sections(1).Headers(1).Range.InlineShapes(i)
        If s.Type = wdInlineShapeLinkedPicture Then
          s.LinkFormat.BreakLink
        End If  'wdInlineShapeLinkedPicture
      Next i

  End If  'Headers
End If  'Sections

End Sub

'predelame obrazky linked na embeded
Sub UnlinkLinkedPicturesInFooter(Optional par1 As String, Optional par2 As String, Optional par3 As String, Optional par4 As String, Optional par5 As String, Optional par6 As String, Optional par7 As String, Optional par8 As String, Optional par9 As String, Optional par10 As String, _
    Optional par11 As String, Optional par12 As String, Optional par13 As String, Optional par14 As String, Optional par15 As String, Optional par16 As String, Optional par17 As String, Optional par18 As String, Optional par19 As String, Optional par20 As String, _
    Optional par21 As String, Optional par22 As String, Optional par23 As String, Optional par24 As String, Optional par25 As String, Optional par26 As String, Optional par27 As String, Optional par28 As String, Optional par29 As String, Optional par30 As String)

'ActiveDocument.Fields.Unlink
    
'Dim aField As Object
'For Each aField In ActiveDocument.Fields
'    aField.LinkFormat.BreakLink
'Next aField

'ActiveDocument.Sections(1).Headers(1).Range.Fields.Unlink

If ActiveDocument.Sections.Count > 0 Then
  If ActiveDocument.Sections(1).Footers.Count > 0 Then
        
      Dim i As Integer
      Dim s As InlineShape
      For i = ActiveDocument.Sections(1).Footers(1).Range.InlineShapes.Count To 1 Step -1 '.Fields
        'If s.Type = wdFieldIncludePicture Then
          'If s.InlineShape.Type = wdInlineShapeLinkedPicture Then
          '  s.InlineShape.LinkFormat.BreakLink
          'End If  'wdInlineShapeLinkedPicture
        'End If  'wdFieldIncludePicture
        Set s = ActiveDocument.Sections(1).Footers(1).Range.InlineShapes(i)
        If s.Type = wdInlineShapeLinkedPicture Then
          s.LinkFormat.BreakLink
        End If  'wdInlineShapeLinkedPicture
      Next i
        
  End If  'Footers
End If  'Sections

End Sub



Sub XXUpdateALL()
    Dim oStory As Object
    Dim oToc As Object
     
     'exit if no document is open
    If Documents.Count = 0 Then Exit Sub
    Application.ScreenUpdating = False
     
    For Each oStory In ActiveDocument.StoryRanges
        oStory.Fields.Update 'update fields in all stories
    Next oStory
     
    For Each oToc In ActiveDocument.TablesOfContents
        oToc.Update 'update TOC's
    Next oToc
     
    Application.ScreenUpdating = True
End Sub
 
'This is the Dirty way to do it:
Sub XXUpdateALL2()
     'exit if no document is open
    If Documents.Count = 0 Then Exit Sub
    Application.ScreenUpdating = False
     
     'changing views updates all fields!
    With ActiveWindow.View
        .Type = wdMasterView
        .Type = wdPrintView
    End With
     
    Application.ScreenUpdating = True
End Sub
 
'Update only the fields in your footer like:
Sub XXUpdateFooter()
    Dim i As Integer
     
     'exit if no document is open
    If Documents.Count = 0 Then Exit Sub
    Application.ScreenUpdating = False
     
     'Get page count
    i = ActiveDocument.BuiltInDocumentProperties(14)
     
    If i >= 1 Then 'Update fields in Footer
        ActiveDocument.Sections(ActiveDocument.Sections.Count).Footers(1).Range.Fields.Update
    End If
     
    Application.ScreenUpdating = True
End Sub
 
'Update only the fields in your footer like:
Sub XXUpdateHeader()
    Dim i As Integer
     
     'exit if no document is open
    If Documents.Count = 0 Then Exit Sub
    Application.ScreenUpdating = False
     
     'Get page count
    i = ActiveDocument.BuiltInDocumentProperties(14)
     
    If i >= 1 Then 'Update fields in Header
        ActiveDocument.Sections(ActiveDocument.Sections.Count).Headers(1).Range.Fields.Update
    End If
     
    Application.ScreenUpdating = True
End Sub

'In some versions of Word you have to move the selection to the section you're updating
Sub XXUpdateFooter2()
    Dim i As Integer
     
     'exit if no document is open
    If Documents.Count = 0 Then Exit Sub
    Application.ScreenUpdating = False
     
     'Get page count
    i = ActiveDocument.BuiltInDocumentProperties(14)
     
    If i >= 1 Then 'Update fields in Footer
        Selection.EndKey wdStory 'move selection to end of document
        ActiveDocument.Sections(ActiveDocument.Sections.Count).Footers(1).Range.Fields.Update
    End If
     
    Application.ScreenUpdating = True
End Sub


Attribute VB_Name = "clsASDFormatovani"
Attribute VB_Base = "0{FCFB3D2A-A0FA-1068-A738-08002B3371B5}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = False
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False


Option Base 1   'array zacinaji od jednicky

Dim prFormatovaniNazev As New Collection
Dim prFormatovaniZnaky As New Collection


Private Sub Class_Initialize()

  prFormatovaniNazev.Add "P|fffd|eve|fffd| desetinn|fffd| znak na |fffd||fffd|rku" 'A
  prFormatovaniNazev.Add "P|fffd|eve|fffd| desetinn|fffd| znak na te|fffd|ku" 'B
  prFormatovaniNazev.Add "Naform|fffd|tuj tis|fffd|ce" 'C
  prFormatovaniNazev.Add "Odstra|fffd| mezery z cel|fffd|ho |fffd|et|fffd|zce" 'D
  prFormatovaniNazev.Add "Odstra|fffd| mezery zleva" 'E
  prFormatovaniNazev.Add "Odstra|fffd| mezery zprava" 'F
  prFormatovaniNazev.Add "Odstra|fffd| zbyte|fffd|n|fffd| nuly zleva" 'G
  prFormatovaniNazev.Add "Odstra|fffd| zbyte|fffd|n|fffd| nuly zprava" 'H
  prFormatovaniNazev.Add "Naform|fffd|tuj PS|fffd|" 'I
  prFormatovaniNazev.Add "Odstra|fffd| mezery zprava i zleva" 'J
  prFormatovaniNazev.Add "p|fffd|idej znak procento na konec" 'K
  prFormatovaniNazev.Add "Naform|fffd|tuj datum ve tvaru dd.MM.yyyy" 'L
  prFormatovaniNazev.Add "P|fffd|eve|fffd| mezery na pevn|fffd| mezery" 'M
  prFormatovaniNazev.Add "P|fffd|idej mezeru na konec" 'O
  prFormatovaniNazev.Add "P|fffd|idej apostrof na za|fffd||fffd|tek" 'P
  prFormatovaniNazev.Add "P|fffd|idej EUR na konec" 'R
  prFormatovaniNazev.Add "P|fffd|idej K|fffd| na konec" 'S
  prFormatovaniNazev.Add "P|fffd|idej tis. na konec" 'T
  prFormatovaniNazev.Add "P|fffd|idej mezeru na za|fffd||fffd|tek" 'U
  prFormatovaniNazev.Add "P|fffd|eve|fffd| p|fffd||fffd|znaky nov|fffd|ch |fffd||fffd|dk|fffd| na BR" 'V
  prFormatovaniNazev.Add "P|fffd|eve|fffd| BR na p|fffd||fffd|znaky nov|fffd|ch |fffd||fffd|dk|fffd|" 'W
  prFormatovaniNazev.Add "Naform|fffd|tuj dle v|fffd|razu v C#, nap|fffd|. [datetime][dd.MM.yyyy]" 'X
  prFormatovaniNazev.Add "P|fffd|eve|fffd| IMAGE na UTF-8" 'u
  
  prFormatovaniNazev.Add "!! Pod|fffd|l milionem" 'a
  prFormatovaniNazev.Add "!! Pod|fffd|l tis|fffd|cem" 'b
  prFormatovaniNazev.Add "!! Vyn|fffd|sob milionem" 'c
  prFormatovaniNazev.Add "!! Vyn|fffd|sob tis|fffd|cem" 'd
  prFormatovaniNazev.Add "!! Zaokrouhli na 0 desetinn|fffd|ch m|fffd|st" '0
  prFormatovaniNazev.Add "!! Zaokrouhli na 1 desetinn|fffd| m|fffd|sto" '1
  prFormatovaniNazev.Add "!! Zaokrouhli na 2 desetinn|fffd| m|fffd|sta" '2
  prFormatovaniNazev.Add "!! Zaokrouhli na 3 desetinn|fffd| m|fffd|sta" '3
  prFormatovaniNazev.Add "!! Zaokrouhli na 4 desetinn|fffd| m|fffd|sta" '4
  prFormatovaniNazev.Add "!! Zaokrouhli na 5 desetinn|fffd|ch m|fffd|st" '5
  prFormatovaniNazev.Add "!! Zaokrouhli na 6 desetinn|fffd|ch m|fffd|st" '6
  prFormatovaniNazev.Add "!! Zaokrouhli na 7 desetinn|fffd|ch m|fffd|st" '7
  prFormatovaniNazev.Add "!! Zaokrouhli na 8 desetinn|fffd|ch m|fffd|st" '8
  prFormatovaniNazev.Add "!! Zaokrouhli na 9 desetinn|fffd|ch m|fffd|st" '9


  prFormatovaniZnaky.Add "A"
  prFormatovaniZnaky.Add "B"
  prFormatovaniZnaky.Add "C"
  prFormatovaniZnaky.Add "D"
  prFormatovaniZnaky.Add "E"
  prFormatovaniZnaky.Add "F"
  prFormatovaniZnaky.Add "G"
  prFormatovaniZnaky.Add "H"
  prFormatovaniZnaky.Add "I"
  prFormatovaniZnaky.Add "J"
  prFormatovaniZnaky.Add "K"
  prFormatovaniZnaky.Add "L"
  prFormatovaniZnaky.Add "M"
  prFormatovaniZnaky.Add "O"
  prFormatovaniZnaky.Add "P"
  prFormatovaniZnaky.Add "R"
  prFormatovaniZnaky.Add "S"
  prFormatovaniZnaky.Add "T"
  prFormatovaniZnaky.Add "U"
  prFormatovaniZnaky.Add "V"
  prFormatovaniZnaky.Add "W"
  prFormatovaniZnaky.Add "X[datatype][dataformat]"
  prFormatovaniZnaky.Add "u"
  
  prFormatovaniZnaky.Add "a"
  prFormatovaniZnaky.Add "b"
  prFormatovaniZnaky.Add "c"
  prFormatovaniZnaky.Add "d"
  prFormatovaniZnaky.Add "0"
  prFormatovaniZnaky.Add "1"
  prFormatovaniZnaky.Add "2"
  prFormatovaniZnaky.Add "3"
  prFormatovaniZnaky.Add "4"
  prFormatovaniZnaky.Add "5"
  prFormatovaniZnaky.Add "6"
  prFormatovaniZnaky.Add "7"
  prFormatovaniZnaky.Add "8"
  prFormatovaniZnaky.Add "9"

End Sub


'property pro nazvy formatovani
Public Property Get FormatovaniNazev() As Collection
    Set FormatovaniNazev = prFormatovaniNazev
End Property

'property pro formatovaci znaky
Public Property Get FormatovaniZnaky() As Collection
    Set FormatovaniZnaky = prFormatovaniZnaky
End Property

Attribute VB_Name = "clsASDPolicka"
Attribute VB_Base = "0{FCFB3D2A-A0FA-1068-A738-08002B3371B5}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = False
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
'obsah tohoto CLASS MODULU je dynamicky menen ze C# !!
'a proto musi byt zachovan nazev CLASS MODULU: clsASDPolicka
'jinak se sem nemam jak odkazat !!

Private prNazvyPolicek As New Collection     'nazvy policek
Private prNazvyTabulek As New Collection     'nazvy tabulek
Private prDruhyPolicek As New Collection     'druhy policek
Private prCiselnikDruhuPolicek As New Collection     'ciselnik druhu policek

'konstruktor tridy
Private Sub Class_Initialize()
    prNazvyPolicek.Add "agentura_nazev"
    prNazvyPolicek.Add "cislo_kontroly"
    prNazvyPolicek.Add "datum_ukonceni_kontroly"
    prNazvyPolicek.Add "datum_zahajeni_kontroly"
    prNazvyPolicek.Add "evid_cislo_projektu"
    prNazvyPolicek.Add "ic_prijemce_dotace"
    prNazvyPolicek.Add "kontrolovane_obdobi"
    prNazvyPolicek.Add "misto_konani_kontroly"
    prNazvyPolicek.Add "nazev_prijemce_dotace"
    prNazvyPolicek.Add "nazev_projektu"
    prNazvyPolicek.Add "planovany_cas_zahajeni"
    prNazvyPolicek.Add "projekt_manager_email"
    prNazvyPolicek.Add "regist_cislo_projektu"
    prNazvyPolicek.Add "sidlo_prijemce_dotace"
    prNazvyPolicek.Add "statutarni_zastupce"
    prNazvyPolicek.Add "vedouci_email"
    prNazvyPolicek.Add "vedouci_fax"
    prNazvyPolicek.Add "vedouci_jmeno"
    prNazvyPolicek.Add "vedouci_jmeno_celkem"
    prNazvyPolicek.Add "vedouci_nazev_organizace"
    prNazvyPolicek.Add "vedouci_prijmeni"
    prNazvyPolicek.Add "vedouci_telefon"
    prNazvyPolicek.Add "vedouci_telefon_fax"
    prNazvyPolicek.Add "vedouci_titul_pred_jmenem"
    prNazvyPolicek.Add "vedouci_titul_za_jmenem"

    prNazvyTabulek.Add ""
    prNazvyTabulek.Add ""
    prNazvyTabulek.Add ""
    prNazvyTabulek.Add ""
    prNazvyTabulek.Add ""
    prNazvyTabulek.Add ""
    prNazvyTabulek.Add ""
    prNazvyTabulek.Add ""
    prNazvyTabulek.Add ""
    prNazvyTabulek.Add ""
    prNazvyTabulek.Add ""
    prNazvyTabulek.Add ""
    prNazvyTabulek.Add ""
    prNazvyTabulek.Add ""
    prNazvyTabulek.Add ""
    prNazvyTabulek.Add ""
    prNazvyTabulek.Add ""
    prNazvyTabulek.Add ""
    prNazvyTabulek.Add "isop_up_sab_kontr"
    prNazvyTabulek.Add ""
    prNazvyTabulek.Add ""
    prNazvyTabulek.Add ""
    prNazvyTabulek.Add "isop_up_sab_kontr"
    prNazvyTabulek.Add ""
    prNazvyTabulek.Add ""

    prDruhyPolicek.Add "0"
    prDruhyPolicek.Add "0"
    prDruhyPolicek.Add "0"
    prDruhyPolicek.Add "0"
    prDruhyPolicek.Add "0"
    prDruhyPolicek.Add "0"
    prDruhyPolicek.Add "0"
    prDruhyPolicek.Add "0"
    prDruhyPolicek.Add "0"
    prDruhyPolicek.Add "0"
    prDruhyPolicek.Add "0"
    prDruhyPolicek.Add "0"
    prDruhyPolicek.Add "0"
    prDruhyPolicek.Add "0"
    prDruhyPolicek.Add "0"
    prDruhyPolicek.Add "0"
    prDruhyPolicek.Add "0"
    prDruhyPolicek.Add "0"
    prDruhyPolicek.Add "36"
    prDruhyPolicek.Add "0"
    prDruhyPolicek.Add "0"
    prDruhyPolicek.Add "0"
    prDruhyPolicek.Add "36"
    prDruhyPolicek.Add "0"
    prDruhyPolicek.Add "0"

    prCiselnikDruhuPolicek.Add "Samostatn|fffd|Hodnota"
    prCiselnikDruhuPolicek.Add "xstare01__Sloupec_DoV|fffd|ceBun|fffd|k_Vytv|fffd||fffd|ej|fffd||fffd|dky"
    prCiselnikDruhuPolicek.Add "xstare02__Sloupec_DoJedin|fffd|Bu|fffd|ky"
    prCiselnikDruhuPolicek.Add "xstare03__Objekt_CheckBox"
    prCiselnikDruhuPolicek.Add "OblastPro_V|fffd|maz"
    prCiselnikDruhuPolicek.Add "xstare05__Sloupec_DoV|fffd|ceBun|fffd|k_Vytv|fffd||fffd|ej|fffd||fffd|dky_GrupujData"
    prCiselnikDruhuPolicek.Add "xstare06__Sloupec_DoJedin|fffd|Bu|fffd|ky_GrupujData"
    prCiselnikDruhuPolicek.Add "xstare07__Sloupec_DoV|fffd|ceBun|fffd|k_Vytv|fffd||fffd|ej|fffd||fffd|dky_Skryj|fffd||fffd|ry|fffd||fffd|dk|fffd|"
    prCiselnikDruhuPolicek.Add "xstare08__Sloupec_DoV|fffd|ceBun|fffd|k"
    prCiselnikDruhuPolicek.Add "xstare09__Sloupec_DoV|fffd|ceBun|fffd|k_GrupujData"
    prCiselnikDruhuPolicek.Add "xstare10__Oblast_Pro_Kopii"
    prCiselnikDruhuPolicek.Add "xstare11__Oblast_Pro_|fffd||fffd|dekTabulky"
    prCiselnikDruhuPolicek.Add "xstare12__Oblast_Pro_|fffd||fffd|dekTabulky_Samostatn|fffd|Hodnota"
    prCiselnikDruhuPolicek.Add "xstare13__Sloupec_DoJedin|fffd|Bu|fffd|ky_P|fffd|eskakujNULL"
    prCiselnikDruhuPolicek.Add "Sloupec_DoV|fffd|ceBun|fffd|k"
    prCiselnikDruhuPolicek.Add "xstare15__Sloupec_DoV|fffd|ceBun|fffd|k_Vytv|fffd||fffd|ej|fffd||fffd|dky"
    prCiselnikDruhuPolicek.Add "xstare16__Sloupec_DoV|fffd|ceBun|fffd|k_Vytv|fffd||fffd|ej|fffd||fffd|dky_GrupujData"
    prCiselnikDruhuPolicek.Add "xstare17__Sloupec_DoV|fffd|ceBun|fffd|k_Vytv|fffd||fffd|ej|fffd||fffd|dky_Skryj|fffd||fffd|ry|fffd||fffd|dk|fffd|"
    prCiselnikDruhuPolicek.Add "xstare18__Sloupec_DoV|fffd|ceBun|fffd|k_GrupujData"
    prCiselnikDruhuPolicek.Add "Sloupec_DoJedin|fffd|Bu|fffd|ky"
    prCiselnikDruhuPolicek.Add "xstare20__Sloupec_DoJedin|fffd|Bu|fffd|ky_GrupujData"
    prCiselnikDruhuPolicek.Add "xstare21__Sloupec_DoJedin|fffd|Bu|fffd|ky_P|fffd|eskakujNULL"
    prCiselnikDruhuPolicek.Add "xstare22__Sloupec_DoV|fffd|ceBun|fffd|k_Skryj|fffd||fffd|ry|fffd||fffd|dk|fffd|"
    prCiselnikDruhuPolicek.Add "xstare23__Sloupec_DoV|fffd|ceBun|fffd|k_Skryj|fffd||fffd|ry|fffd||fffd|dk|fffd|"
    prCiselnikDruhuPolicek.Add "Sloupec_Bu|fffd|kySamostatn|fffd|"
    prCiselnikDruhuPolicek.Add "PoziceProVlo|fffd|en|fffd|_HtmlK|fffd|du_Hodnotou"
    prCiselnikDruhuPolicek.Add "PoziceProVlo|fffd|en|fffd|_HtmlK|fffd|du_OdkazemNaSoubor"
    prCiselnikDruhuPolicek.Add "Sloupec_SesumujHodnotu"
    prCiselnikDruhuPolicek.Add "PoziceProVlo|fffd|en|fffd|_Obr|fffd|zku_Hodnotou"
    prCiselnikDruhuPolicek.Add "PoziceProVlo|fffd|en|fffd|_Obr|fffd|zku_OdkazemNaSoubor"
    prCiselnikDruhuPolicek.Add "Samostatn|fffd|Hodnota_Po|fffd|etStran_Kr|fffd|tKonstanta"
    prCiselnikDruhuPolicek.Add "Tabulka"
    prCiselnikDruhuPolicek.Add "Sloupec_DoV|fffd|ceBun|fffd|k_Spojen|fffd|Sloupc|fffd|"
    prCiselnikDruhuPolicek.Add "xstare33__Sloupec_Spojen|fffd|Sloupec"
    prCiselnikDruhuPolicek.Add "PoziceProVlo|fffd|en|fffd|_Pozad|fffd|_Hodnotou"
    prCiselnikDruhuPolicek.Add "PoziceProVlo|fffd|en|fffd|_Pozad|fffd|_OdkazemNaSoubor"
    prCiselnikDruhuPolicek.Add "Sloupec_DoJedin|fffd|Bu|fffd|ky_Spojen|fffd|Sloupc|fffd|"
    prCiselnikDruhuPolicek.Add "PoziceProVlo|fffd|en|fffd|_Souboru_Vypln|fffd|n|fffd|m|fffd|ablony"
    prCiselnikDruhuPolicek.Add "PoziceProVlo|fffd|en|fffd|_Souboru_Hodnotou"
    prCiselnikDruhuPolicek.Add "PoziceProVlo|fffd|en|fffd|_Souboru_OdkazemNaSoubor"
    prCiselnikDruhuPolicek.Add "Tabulka_JakoHTML"
    prCiselnikDruhuPolicek.Add "Tabulka_JakoXML"
    prCiselnikDruhuPolicek.Add "Samostatn|fffd|Hodnota_XmlElement"
    prCiselnikDruhuPolicek.Add "Samostatn|fffd|Hodnota_XmlAtribut"
    prCiselnikDruhuPolicek.Add "Tabulka_OddeleniTabulatory"
    prCiselnikDruhuPolicek.Add "Tabulka_OddeleniMezera"
    prCiselnikDruhuPolicek.Add "Tabulka_OddeleniMezeraDvojita"
    prCiselnikDruhuPolicek.Add "Tabulka_JakoHTML_PrevzitNazvySloupcu"
    prCiselnikDruhuPolicek.Add "Tabulka_PrevzitNazvySloupcu"
    prCiselnikDruhuPolicek.Add "Tabulka_OddeleniTabulatory_PrevzitNazvySloupcu"
    prCiselnikDruhuPolicek.Add "Tabulka_OddeleniMezera_PrevzitNazvySloupcu"
    prCiselnikDruhuPolicek.Add "Tabulka_OddeleniMezeraDvojita_PrevzitNazvySloupcu"
    prCiselnikDruhuPolicek.Add "Tabulka_JakoHTML_bezTaguTable"
    prCiselnikDruhuPolicek.Add "Tabulka_JakoHTML_PrevzitNazvySloupcu_bezTaguTable"
    prCiselnikDruhuPolicek.Add "Tabulka_JakoXML_Excel2003"
    prCiselnikDruhuPolicek.Add "MakroVykonej"
    prCiselnikDruhuPolicek.Add "Tabulka_JakoXML_Excel2003_PrevzitNazvySloupcu"
    prCiselnikDruhuPolicek.Add "Tabulka_JakoXML_Word2003"
    prCiselnikDruhuPolicek.Add "Tabulka_JakoXML_Word2003_PrevzitNazvySloupcu"
End Sub


'property pro seznam nazvu policek
Public Property Get NazvyPolicek() As Collection
    Set NazvyPolicek = prNazvyPolicek
End Property

'property pro seznam nazvu tabulek
Public Property Get NazvyTabulek() As Collection
    Set NazvyTabulek = prNazvyTabulek
End Property

'property pro seznam druhu policek
Public Property Get DruhyPolicek() As Collection
    Set DruhyPolicek = prDruhyPolicek
End Property

'property pro ciselnik druhu policek
Public Property Get CiselnikDruhuPolicek() As Collection
    Set CiselnikDruhuPolicek = prCiselnikDruhuPolicek
End Property



Attribute VB_Name = "frmASDFormular"
Attribute VB_Base = "0{4FFCBE66-A53E-41FA-AEA4-FF91A7B71C62}{C6191970-A7A5-4911-B59D-32ECF4C1F0E3}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False


Option Explicit         'nutnost deklarovat promenne

Option Base 1       'vsechna indexovani zacinaji od 1 (ve VBA je v tom celkem neporadek, protoze neco zacina od nuly a neco vyhradne jen od jednicky)
Option Compare Text       'nutne kvuli porovnavani retezcu ktere pouzivam

'jaky druh seznamu pouzijeme
Private Const PouzitySeznam = Seznam_ListBox
Private Const VerzeMaker = "1.00.12"
'



'///////////////////////////////////
'//   ASD Editor Sablon 1.00.12   //
'///////////////////////////////////


'pri dvojkliku na radek v ListBoxu vlozi policko
Private Sub lbNazvyPolicek_DblClick(ByVal Cancel As MSForms.ReturnBoolean)
On Error Resume Next
    Call VlozPolickoListBox
End Sub

Private Sub lbNazvyPolicek_Change()
On Error Resume Next
    Call ZobrazMoznostiListBox
End Sub

'pri dvojkliku na radek v ListView vlozi policko
'Private Sub lvNazvyPolicek_DblClick()
'On Error Resume Next
'    Call VlozPolickoListView
'End Sub

'Private Sub lvNazvyPolicek_Click()
'On Error Resume Next
'    Call ZobrazMoznostiListView
'End Sub

'Private Sub lvNazvyPolicek_KeyUp(KeyCode As Integer, ByVal Shift As Integer)
'On Error Resume Next
'    Call ZobrazMoznostiListView
'End Sub



'pri kliknuti na tlacitko vlozi policko
Private Sub cbVlozit_Click()
On Error Resume Next

    Select Case PouzitySeznam
        
        Case Seznam_ListBox
            Call VlozPolickoListBox
        
        'Case Seznam_ListView
        '    Call VlozPolickoListView
        
        Case Else
    
    End Select

End Sub



'vymaze policko
Private Sub cbVymazat_Click()
On Error Resume Next
    VymazPolicko True
End Sub

'zavrit formular
Private Sub cbZavrit_Click()
On Error Resume Next
    Unload Me       'ukonceni formu
End Sub


'pri stisku ESC ukonci ASD Formular
Private Sub cbUkoncit_KeyDown(ByVal KeyCode As MSForms.ReturnInteger, ByVal Shift As Integer)
On Error Resume Next
    If KeyCode = vbKeyEscape Then
        Unload Me       'ukonceni formu
    End If
End Sub


'Private Sub lvNazvyPolicek_ColumnClick(ByVal ColumnHeader As MSComctlLib.ColumnHeader)
'On Error GoTo chyba

'    naplnListbox ColumnHeader.Text

'GoTo konec
'chyba:
'    vypisChybu Err
'konec:
'End Sub


Private Sub cbNazevTabulky_Click()
On Error GoTo chyba
    
    Select Case PouzitySeznam
        
        Case Seznam_ListBox
            NaplnASDListBox Sloupec_NazevTabulky
        
        'Case Seznam_ListView
        '    NaplnASDListView Sloupec_NazevTabulky
        
        Case Else
    
    End Select

GoTo konec
chyba:
    vypisChybu Err
konec:
End Sub


Private Sub cbNazevPolicka_Click()
On Error GoTo chyba
    
    Select Case PouzitySeznam
        
        Case Seznam_ListBox
            NaplnASDListBox Sloupec_NazevPolicka
        
        'Case Seznam_ListView
        '    NaplnASDListView Sloupec_NazevPolicka
        
        Case Else
    
    End Select

GoTo konec
chyba:
    vypisChybu Err
konec:
End Sub


Private Sub cbDruhPolicka_Click()
On Error GoTo chyba
    
    Select Case PouzitySeznam
        
        Case Seznam_ListBox
            NaplnASDListBox Sloupec_DruhPolicka
        
        'Case Seznam_ListView
        '    NaplnASDListView Sloupec_DruhPolicka
        
        Case Else
    
    End Select

GoTo konec
chyba:
    vypisChybu Err
konec:
End Sub


'pri stisku ESC ukonci ASD Formular
Private Sub cbVlozit_KeyDown(ByVal KeyCode As MSForms.ReturnInteger, ByVal Shift As Integer)
On Error Resume Next
    If KeyCode = vbKeyEscape Then
        Unload Me
    End If
End Sub


'pri stisku ESC ukonci ASD Formular
Private Sub cbVymazat_KeyDown(ByVal KeyCode As MSForms.ReturnInteger, ByVal Shift As Integer)
On Error Resume Next
    If KeyCode = vbKeyEscape Then
        Unload Me
    End If
End Sub


'pri stisku ESC ukonci ASD Formular
Private Sub lbNazvyPolicek_KeyDown(ByVal KeyCode As MSForms.ReturnInteger, ByVal Shift As Integer)
On Error GoTo chyba
    
    If KeyCode = vbKeyReturn Then
        Call cbVlozit_Click
    ElseIf KeyCode = vbKeyEscape Then
        Unload Me
    End If
    
GoTo konec
chyba:
    vypisChybu Err
konec:
End Sub



Private Sub spCisloStatistiky_Change()
    tbCisloStatistiky.Text = spCisloStatistiky.Value
End Sub

Private Sub spFormatovaniCislo_Change()
    tbFormatovaniCislo.Text = spFormatovaniCislo.Value
    'tbFormatovaniCislo.SetFocus
End Sub

Private Sub spSloupecBunkySamostatne_Change()
    tbSloupecBunkySamostatne.Text = spSloupecBunkySamostatne.Value
    'tbKazdouBunkuZvlast.SetFocus
End Sub



Private Sub tbFormatovaniCislo_Change()
On Error Resume Next
    If IsNumeric(tbFormatovaniCislo.Text) = False Then
        tbFormatovaniCislo.Text = 1
        spFormatovaniCislo.Value = 1
    ElseIf Val(tbFormatovaniCislo.Text) > 999 Then
        tbFormatovaniCislo.Text = 999
        spFormatovaniCislo.Value = 999
    ElseIf Val(tbFormatovaniCislo.Text < 1) Then
        spFormatovaniCislo.Value = 1
    Else: spFormatovaniCislo.Value = Val(tbFormatovaniCislo.Text)
    End If

End Sub


Private Sub tbKazdouBunkuZvlast_Change()
On Error Resume Next
    If IsNumeric(tbSloupecBunkySamostatne.Text) = False Then
        tbSloupecBunkySamostatne.Text = 1
        spSloupecBunkySamostatne.Value = 1
    ElseIf Val(tbSloupecBunkySamostatne.Text) > 999 Then
        tbSloupecBunkySamostatne.Text = 999
        spSloupecBunkySamostatne.Value = 999
    ElseIf Val(tbSloupecBunkySamostatne.Text < 1) Then
        spSloupecBunkySamostatne.Value = 1
    Else: spSloupecBunkySamostatne.Value = Val(tbSloupecBunkySamostatne.Text)
    End If
End Sub


'pri stisknuti ENTER vlozi nazev z aktualniho radku v listboxu
Private Sub UserForm_KeyDown(ByVal KeyCode As MSForms.ReturnInteger, ByVal Shift As Integer)
On Error GoTo chyba
    
    If KeyCode = vbKeyReturn Then
        Call cbVlozit_Click
    End If
       
GoTo konec
chyba:
    vypisChybu Err
konec:
End Sub


'pri stisknuti ENTER vlozi nazev z aktualniho radku v listboxu
Private Sub txtSearch_KeyDown(ByVal KeyCode As MSForms.ReturnInteger, ByVal Shift As Integer)
On Error GoTo chyba
    
    If KeyCode = vbKeyReturn Then
        Call cbVlozit_Click
    ElseIf KeyCode = vbKeyEscape Then
        Unload Me       'pri stisku ESC ukonci ASD Formular
    End If
   
GoTo konec
chyba:
    vypisChybu Err
konec:
End Sub


'pri aktivovani FORMU
Private Sub UserForm_Activate()
'On Error Resume Next
'    lvNazvyPolicek.Visible = False
'    lvNazvyPolicek.Visible = True
'    lvNazvyPolicek.SetFocus
End Sub


'pri kliknuti na FORMU
Private Sub UserForm_Click()
'On Error Resume Next
'    lvNazvyPolicek.Visible = False
'    lvNazvyPolicek.Visible = True
'    lvNazvyPolicek.SetFocus
End Sub


'pri inicializaci FORMU
Private Sub UserForm_Initialize()
On Error GoTo chyba
       
       'naplni ListBox, (podle ceho ma tridit)
       Select Case PouzitySeznam
        
        Case Seznam_ListBox
            NaplnASDListBox Sloupec_NazevTabulky
            'lvNazvyPolicek.Visible = False
            lblSloupec1.Visible = True
            lblSloupec2.Visible = True
            lblSloupec3.Visible = True
            Call ZobrazMoznostiListBox
        
        'Case Seznam_ListView
        '    NaplnASDListView Sloupec_NazevTabulky
        '    lbNazvyPolicek.Visible = False
        '    lblSloupec1.Visible = False
        '    lblSloupec2.Visible = False
        '    lblSloupec3.Visible = False
        '    Call ZobrazMoznostiListView
        
        Case Else
    
    End Select


    'formatovani policka - sekce 3
    ddFormatovani.AddItem "<|fffd||fffd|dn|fffd|>", 0
    Dim ASDFormatovani As New clsASDFormatovani    'formatovani policek
    Dim i As Integer
    Dim polozka As String
    For i = 1 To ASDFormatovani.FormatovaniNazev.Count
        polozka = ASDFormatovani.FormatovaniNazev.Item(i) + " [" & ASDFormatovani.FormatovaniZnaky.Item(i) & "]"
        ddFormatovani.AddItem polozka, i
    Next i
    ddFormatovani.ListIndex = 0


    'velikost bunky - sekce 6
    'Excel ma defautne "NO", Word ma defaultne "YES"
    If InStr(1, Application.Name, "excel", vbTextCompare) > 0 Then
      cbNastavVelikostBunky.Value = False
      VlozitNames.Visible = True
      VymazatNames.Visible = True
    ElseIf InStr(1, Application.Name, "word", vbTextCompare) > 0 Then
      cbNastavVelikostBunky.Value = True
      VlozitNames.Visible = False
      VymazatNames.Visible = False
    End If

    frmASDFormular.Caption = frmASDFormular.Caption + " " + VerzeMaker


GoTo konec
chyba:
    vypisChybu Err
konec:
End Sub


Private Sub ddFormatovani_Change()
On Error Resume Next
    tbFormatovaniCislo.SetFocus
End Sub


Private Sub cbFormatovani_Click()
On Error GoTo chyba
  Dim i As Integer
  Dim cislo As Integer
  Dim formatovaciZnak As String
  Dim vystupni As String
  Dim ASDFormatovani As New clsASDFormatovani    'formatovani policek


'pokud je neco vybrano v dropdownu
If ddFormatovani.ListIndex > -1 Then

    cislo = Val(tbFormatovaniCislo.Text)
    
    'pokud je "cislo" vetsi nez pocet mist, tak "cislo" zkorigujeme
    If cislo > Len(tbFormatovani.Text) _
      And Len(tbFormatovani.Text) > 0 _
      And Len(tbFormatovani.Text) < spFormatovaniCislo.Max Then
        
        spFormatovaniCislo.Value = Len(tbFormatovani.Text) + 1
    End If


    If (ddFormatovani.ListIndex < 1) Or (ddFormatovani.ListIndex > ASDFormatovani.FormatovaniZnaky.Count) Then
        formatovaciZnak = ""
    Else
        formatovaciZnak = ASDFormatovani.FormatovaniZnaky.Item(ddFormatovani.ListIndex)
    End If
    
    
    'zvolime formatovani
    vystupni = ""
    If cislo <= Len(tbFormatovani.Text) Then
        For i = 1 To Len(tbFormatovani.Text)
            If i <> cislo Then
              vystupni = vystupni & Mid(tbFormatovani.Text, i, 1)
            Else
              vystupni = vystupni & formatovaciZnak
            End If
        Next i
    Else
      vystupni = tbFormatovani.Text & formatovaciZnak
    End If


    'zvolene formatovani umistime do textboxu
    tbFormatovani.Text = vystupni


    'pokud nemazeme, tak zvetsime "cislo" o jednicku ci vice
    If ddFormatovani.ListIndex > 0 And spFormatovaniCislo.Value < spFormatovaniCislo.Max Then
      spFormatovaniCislo.Value = Len(tbFormatovani.Text) + 1
    ElseIf ddFormatovani.ListIndex = 0 _
      And spFormatovaniCislo.Value > Len(tbFormatovani.Text) _
      And Len(tbFormatovani) <> 0 Then
        spFormatovaniCislo.Value = Len(tbFormatovani.Text)
    End If
    
    tbFormatovaniCislo.SetFocus

  Else

  
End If 'pokud je neco vybrano v dropdownu


GoTo konec
chyba:
    vypisChybu Err
konec:
End Sub


Private Sub cbSloupecDoviceBunek_Click()
On Error Resume Next
    If cbSloupecDoviceBunek.Value = True Then
        SloupceVymazZaskrtnuti ("W")
        VlastnostiVymazZaskrtnuti ("BIJLSG")
        VlastnostiSchovej ("BIJLSG")
    End If
End Sub

Private Sub cbSloupecDoviceBunek_AfterUpdate()
On Error Resume Next
    PokudNeniSloupecVymazVlastnosti
End Sub


Private Sub cbSloupecDojedineBunky_Click()
On Error Resume Next
    If cbSloupecDojedineBunky.Value = True Then
        SloupceVymazZaskrtnuti ("D")
        VlastnostiVymazZaskrtnuti ("GN")
        VlastnostiSchovej ("GN")
    End If
End Sub

Private Sub cbSloupecDojedineBunky_AfterUpdate()
On Error Resume Next
    PokudNeniSloupecVymazVlastnosti
End Sub



Private Sub cbSloupecSesumujHodnotu_Click()
On Error Resume Next
    If cbSloupecSesumujHodnotu.Value = True Then
        SloupceVymazZaskrtnuti ("Q")
        VlastnostiVymazZaskrtnuti ("U")
        VlastnostiSchovej ("U")
    End If
End Sub

Private Sub cbSloupecSesumujHodnotu_AfterUpdate()
On Error Resume Next
    PokudNeniSloupecVymazVlastnosti
End Sub


Private Sub cbSloupecBunkySamostatne_Click()
On Error Resume Next
    If cbSloupecBunkySamostatne.Value = True Then
        SloupceVymazZaskrtnuti ("H")
        VlastnostiVymazZaskrtnuti ("")
        VlastnostiSchovej ("")
    End If

    ZobrazZvlastCislo
End Sub

Private Sub cbSloupecBunkySamostatne_AfterUpdate()
On Error Resume Next
    PokudNeniSloupecVymazVlastnosti
End Sub








Private Sub cbVytvarejRadky_AfterUpdate()
On Error Resume Next
    If cbVytvarejRadky.Value = True Then
        SloupceVymazZaskrtnuti ("W")
        VlastnostiVymazZaskrtnuti ("BSGN")
        cbSloupecDoviceBunek.Value = True
    End If
End Sub


Private Sub cbVytvarejRadkyAlePosledni1Ne_AfterUpdate()
On Error Resume Next
    If cbVytvarejRadkyAlePosledni1Ne.Value = True Then
        SloupceVymazZaskrtnuti ("W")
        VlastnostiVymazZaskrtnuti ("ISGN")
        cbSloupecDoviceBunek.Value = True
    End If
End Sub

Private Sub cbVytvarejRadkyAlePosledni2Ne_AfterUpdate()
On Error Resume Next
    If cbVytvarejRadkyAlePosledni2Ne.Value = True Then
        SloupceVymazZaskrtnuti ("W")
        VlastnostiVymazZaskrtnuti ("JSGN")
        cbSloupecDoviceBunek.Value = True
    End If
End Sub

Private Sub cbVytvarejRadkyAlePosledni3Ne_AfterUpdate()
On Error Resume Next
    If cbVytvarejRadkyAlePosledni3Ne.Value = True Then
        SloupceVymazZaskrtnuti ("W")
        VlastnostiVymazZaskrtnuti ("LSGN")
        cbSloupecDoviceBunek.Value = True
    End If
End Sub



Private Sub cbGrupujData_AfterUpdate()
On Error Resume Next
    If cbGrupujData.Value = True Then
        If cbSloupecDojedineBunky.Value = False Then
            If cbSloupecDoviceBunek.Value = False Then
                SloupceVymazZaskrtnuti ("W")
                cbSloupecDoviceBunek.Value = True
            End If
        End If
    End If
End Sub

Private Sub cbSkryjCaryRadku_AfterUpdate()
On Error Resume Next
    If cbSkryjCaryRadku.Value = True Then
        SloupceVymazZaskrtnuti ("W")
        cbSloupecDoviceBunek.Value = True
    End If
End Sub

Private Sub cbPreskakujNull_AfterUpdate()
On Error Resume Next
    If cbPreskakujNull.Value = True Then
        SloupceVymazZaskrtnuti ("D")
        cbSloupecDojedineBunky.Value = True
    End If
End Sub

Private Sub cbSumujJakoRetezec_AfterUpdate()
On Error Resume Next
    If cbSumujJakoRetezec.Value = True Then
        SloupceVymazZaskrtnuti ("Q")
        cbSloupecSesumujHodnotu.Value = True
    End If
End Sub






Public Sub PokudNeniSloupecVymazVlastnosti()
On Error Resume Next
  If cbSloupecDoviceBunek.Value = False Then
    If cbSloupecDojedineBunky.Value = False Then
        If cbSloupecBunkySamostatne.Value = False Then
            If cbSloupecSesumujHodnotu.Value = False Then
                VlastnostiVymazZaskrtnuti ("")
                VlastnostiSchovej ("BIJLSGNU")
            End If
        End If
    End If
  End If
End Sub


Public Sub SloupceVymazZaskrtnuti(ponechat As String)
On Error Resume Next
    If InStrB(1, ponechat, "W") = 0 Then cbSloupecDoviceBunek.Value = False
    If InStrB(1, ponechat, "D") = 0 Then cbSloupecDojedineBunky.Value = False
    If InStrB(1, ponechat, "Q") = 0 Then cbSloupecSesumujHodnotu.Value = False
    If InStrB(1, ponechat, "H") = 0 Then cbSloupecBunkySamostatne.Value = False
End Sub

Public Sub SloupceSchovej(ponechat As String)
On Error Resume Next
    cbSloupecDoviceBunek.Enabled = Not (InStrB(1, ponechat, "W") = 0)
    cbSloupecDojedineBunky.Enabled = Not (InStrB(1, ponechat, "D") = 0)
    cbSloupecSesumujHodnotu.Enabled = Not (InStrB(1, ponechat, "Q") = 0)
    cbSloupecBunkySamostatne.Enabled = Not (InStrB(1, ponechat, "H") = 0)
End Sub

Public Sub VlastnostiVymazZaskrtnuti(ponechat As String)
On Error Resume Next
    If InStrB(1, ponechat, "B") = 0 Then cbVytvarejRadky.Value = False
    If InStrB(1, ponechat, "I") = 0 Then cbVytvarejRadkyAlePosledni1Ne.Value = False
    If InStrB(1, ponechat, "J") = 0 Then cbVytvarejRadkyAlePosledni2Ne.Value = False
    If InStrB(1, ponechat, "L") = 0 Then cbVytvarejRadkyAlePosledni3Ne.Value = False
    If InStrB(1, ponechat, "S") = 0 Then cbSkryjCaryRadku.Value = False
    If InStrB(1, ponechat, "G") = 0 Then cbGrupujData.Value = False
    If InStrB(1, ponechat, "N") = 0 Then cbPreskakujNull.Value = False
    If InStrB(1, ponechat, "U") = 0 Then cbSumujJakoRetezec.Value = False
End Sub

Public Sub VlastnostiSchovej(ponechat As String)
On Error Resume Next
    cbVytvarejRadky.Enabled = Not (InStrB(1, ponechat, "B") = 0)
    cbVytvarejRadkyAlePosledni1Ne.Enabled = Not (InStrB(1, ponechat, "I") = 0)
    cbVytvarejRadkyAlePosledni2Ne.Enabled = Not (InStrB(1, ponechat, "J") = 0)
    cbVytvarejRadkyAlePosledni3Ne.Enabled = Not (InStrB(1, ponechat, "L") = 0)
    cbSkryjCaryRadku.Enabled = Not (InStrB(1, ponechat, "S") = 0)
    cbGrupujData.Enabled = Not (InStrB(1, ponechat, "G") = 0)
    cbPreskakujNull.Enabled = Not (InStrB(1, ponechat, "N") = 0)
    cbSumujJakoRetezec.Enabled = Not (InStrB(1, ponechat, "U") = 0)
End Sub



Private Sub OpravitKomentare_Click()
    'On Error Resume Next
    'Dim i As Integer
    'Dim j As Integer

    'For i = 1 To 100
    '    For j = 1 To 50
    '        Cells(i, j).Comment.Shape.Width = 200
    '    Next j
    'Next i
    'On Error GoTo hell
'hell:
End Sub



Private Sub VlozitNames_Click()
On Error GoTo chyba

        VlozPolicko ""
    
    GoTo konec
chyba:
    vypisChybu Err
konec:
End Sub


Private Sub VymazatNames_Click()
On Error GoTo chyba

        VymazPolicko False
    
    GoTo konec
chyba:
    vypisChybu Err
konec:
End Sub
Attribute VB_Name = "modASDListBox"

Option Base 1   'array zacinaji od jednicky


Public Sub NaplnASDListBox(sloupec As String)
On Error GoTo chyba
    Dim ASDPolicka As New clsASDPolicka    'seznam nazvu vsech POLICEK ktere muzeme do dokumentu vlozit
    
    Dim druh As Integer
    Dim index As Integer
    
    Dim prvni As String
    Dim druhy As String
    Dim treti As String
    
    Dim nazev1 As String
    Dim nazev2 As String
    Dim nazev3 As String

    frmASDFormular.lbNazvyPolicek.Clear
    frmASDFormular.lbNazvyPolicek.ColumnCount = 3
    frmASDFormular.lblSloupec1.Caption = "sloupec1"
    frmASDFormular.lblSloupec2.Caption = "sloupec2"
    frmASDFormular.lblSloupec3.Caption = "sloupec3"
    
    Dim MyArray() As String
    If ASDPolicka.NazvyPolicek.Count > 0 Then
        ReDim Preserve MyArray(ASDPolicka.NazvyPolicek.Count, 3)
    End If
    
    'naplneni ListBoxu
    Dim i As Integer
    For i = 1 To ASDPolicka.NazvyPolicek.Count
    
    
        'MyArray(i, 1) = ASDPolicka.NazvyPolicek.Item(i)
        'MyArray(i, 2) = ASDPolicka.NazvyTabulek.Item(i)
        'MyArray(i, 3) = ASDPolicka.DruhyPolicek.Item(i)
        
        
        'druh policka
        'POZOR!! VBA indexuje od 1, takze to posuneme
        druh = ASDPolicka.DruhyPolicek.Item(i) + 1
        
        Select Case sloupec
        Case Sloupec_NazevTabulky
            If i = 1 Then
                nazev1 = Sloupec_NazevTabulky
                nazev2 = Sloupec_NazevPolicka
                nazev3 = Sloupec_DruhPolicka
            End If
            prvni = ASDPolicka.NazvyTabulek.Item(i)
            druhy = ASDPolicka.NazvyPolicek.Item(i)
            treti = ASDPolicka.CiselnikDruhuPolicek.Item(druh)
        
        Case Sloupec_NazevPolicka
            If i = 1 Then
                nazev1 = Sloupec_NazevPolicka
                nazev2 = Sloupec_NazevTabulky
                nazev3 = Sloupec_DruhPolicka
            End If
            prvni = ASDPolicka.NazvyPolicek.Item(i)
            druhy = ASDPolicka.NazvyTabulek.Item(i)
            treti = ASDPolicka.CiselnikDruhuPolicek.Item(druh)
        
        Case Sloupec_DruhPolicka
            If i = 1 Then
                nazev1 = Sloupec_DruhPolicka
                nazev2 = Sloupec_NazevTabulky
                nazev3 = Sloupec_NazevPolicka
            End If
            prvni = ASDPolicka.CiselnikDruhuPolicek.Item(druh)
            druhy = ASDPolicka.NazvyTabulek.Item(i)
            treti = ASDPolicka.NazvyPolicek.Item(i)
        
        Case Else
            MsgBox "Nastala chyba!! Nenalezen sloupec podle kter|fffd|ho t|fffd||fffd|dit !!", _
            vbCritical + vbOKOnly, "CHYBA"
            
            GoTo chyba
        
        End Select
        
        
        'prvni sloupec (nazev policka)
        MyArray(i, 1) = prvni
        
        'druhy sloupec (tabulka do ktere policko patri)
        MyArray(i, 2) = druhy

        'treti sloupec (druh policka)
        MyArray(i, 3) = treti
     
        
    Next i
    frmASDFormular.lblSloupec1.Caption = nazev1
    frmASDFormular.lblSloupec2.Caption = nazev2
    frmASDFormular.lblSloupec3.Caption = nazev3
    
    If ASDPolicka.NazvyPolicek.Count > 0 Then
        frmASDFormular.lbNazvyPolicek.List() = MyArray
    End If
    frmASDFormular.lbNazvyPolicek.ColumnWidths = "190; 190; 165"

       
       
    'pokud v listboxu neco je, tak oznacime prvni radek
    If frmASDFormular.lbNazvyPolicek.ListCount > 0 Then
        frmASDFormular.lbNazvyPolicek.ListIndex = 0
        frmASDFormular.cbVlozit.Enabled = True
        frmASDFormular.lbNazvyPolicek.SetFocus
    End If


    Call ZobrazMoznostiListBox

GoTo konec
chyba:
    vypisChybu Err
konec:
End Sub



'zprostredkuje vlozeni noveho POLICKA do dokumentu
Public Sub VlozPolickoListBox()
On Error GoTo chyba
    Dim coVkladame As String
    Dim druhPolicka As String
    Dim ASDPolicka As New clsASDPolicka    'seznam nazvu vsech POLICEK ktere muzeme do dokumentu vlozit
    'kolekce ve VBS jsou od jednicky !!
    'pozor vsechny cisla mame zvetseny o jednicku

    

  'pokud je co vkladat
  If frmASDFormular.lbNazvyPolicek.ListCount > 0 Then

    'najdeme nazev policka v ListBoxu
    Select Case Sloupec_NazevPolicka
        
        Case frmASDFormular.lblSloupec1.Caption
            coVkladame = frmASDFormular.lbNazvyPolicek.List(frmASDFormular.lbNazvyPolicek.ListIndex, 0)
        
        Case frmASDFormular.lblSloupec2.Caption
            coVkladame = frmASDFormular.lbNazvyPolicek.List(frmASDFormular.lbNazvyPolicek.ListIndex, 1)
        
        Case frmASDFormular.lblSloupec3.Caption
            coVkladame = frmASDFormular.lbNazvyPolicek.List(frmASDFormular.lbNazvyPolicek.ListIndex, 2)

        Case Else
            MsgBox "Nastala chyba!! Nenalezen sloupec s n|fffd|zvem pol|fffd||fffd|ka !!", _
                vbCritical + vbOKOnly, "CHYBA"
            GoTo chyba

    End Select
    
    'najdeme druh policka v ListView
    Select Case Sloupec_DruhPolicka

        Case frmASDFormular.lblSloupec1.Caption
            druhPolicka = frmASDFormular.lbNazvyPolicek.List(frmASDFormular.lbNazvyPolicek.ListIndex, 0)
        
        Case frmASDFormular.lblSloupec2.Caption
            druhPolicka = frmASDFormular.lbNazvyPolicek.List(frmASDFormular.lbNazvyPolicek.ListIndex, 1)
        
        Case frmASDFormular.lblSloupec3.Caption
            druhPolicka = frmASDFormular.lbNazvyPolicek.List(frmASDFormular.lbNazvyPolicek.ListIndex, 2)
            
        Case Else
            MsgBox "Nastala chyba!! Nenalezen sloupec s druhem pol|fffd||fffd|ka !!", _
                vbCritical + vbOKOnly, "CHYBA"
            GoTo chyba

    End Select




    'vlastnosti policka - sekce 2
    Dim vlastnostiTab As String
    vlastnostiTab = ""
    
    If (frmASDFormular.cbSloupecDojedineBunky.Value = True) Then
        If (druhPolicka = ASDPolicka.CiselnikDruhuPolicek(33) Or druhPolicka = ASDPolicka.CiselnikDruhuPolicek(37)) Then
            vlastnostiTab = vlastnostiTab & "c"  'Sloupec_DoJedineBunky_SpojeniSloupcu
        Else:
            vlastnostiTab = vlastnostiTab & "D"  'postaru = C
        End If
    End If

    If (frmASDFormular.cbSloupecDoviceBunek.Value = True) Then
        If (druhPolicka = ASDPolicka.CiselnikDruhuPolicek(33) Or druhPolicka = ASDPolicka.CiselnikDruhuPolicek(37)) Then
            vlastnostiTab = vlastnostiTab & "a"  'Sloupec_DoJedineBunky_SpojeniSloupcu
        Else:
            vlastnostiTab = vlastnostiTab & "W"  'postaru = T
        End If
    End If
    
    If frmASDFormular.cbSloupecSesumujHodnotu.Value = True Then vlastnostiTab = vlastnostiTab & "Q"
    If frmASDFormular.cbSloupecBunkySamostatne.Value = True Then vlastnostiTab = vlastnostiTab & "H"
    
    If frmASDFormular.cbVytvarejRadky.Value = True Then vlastnostiTab = vlastnostiTab & "B"
    If frmASDFormular.cbVytvarejRadkyAlePosledni1Ne.Value = True Then vlastnostiTab = vlastnostiTab & "I"
    If frmASDFormular.cbVytvarejRadkyAlePosledni2Ne.Value = True Then vlastnostiTab = vlastnostiTab & "J"
    If frmASDFormular.cbVytvarejRadkyAlePosledni3Ne.Value = True Then vlastnostiTab = vlastnostiTab & "L"
    If frmASDFormular.cbSkryjCaryRadku.Value = True Then vlastnostiTab = vlastnostiTab & "S"
    If frmASDFormular.cbGrupujData.Value = True Then vlastnostiTab = vlastnostiTab & "G"
    If frmASDFormular.cbPreskakujNull.Value = True Then vlastnostiTab = vlastnostiTab & "N"
    If frmASDFormular.cbSumujJakoRetezec.Value = True Then vlastnostiTab = vlastnostiTab & "U"
    
    If frmASDFormular.fmTabulkovaData.Enabled = False Then vlastnostiTab = ""
    

    'formatovani policka - sekce 3
    Dim formatovani As String
    formatovani = ""
    If frmASDFormular.tbFormatovani.Text <> "" Then
      formatovani = frmASDFormular.tbFormatovani.Text
    End If
    
    'cislo radku - sekce 5
    Dim cisloRadku As String
    cisloRadku = ""
    If (frmASDFormular.cbSloupecBunkySamostatne.Enabled = True _
      And frmASDFormular.cbSloupecBunkySamostatne.Value = True) Then
        cisloRadku = frmASDFormular.tbSloupecBunkySamostatne.Text
    End If

    'velikost bunky - sekce 6
    'Excel ma defautne "NO", Word ma defaultne "YES"
    Dim velikostBunky As String
    velikostBunky = ""
    If InStr(1, Application.Name, "excel", vbTextCompare) > 0 _
      And frmASDFormular.cbNastavVelikostBunky.Value = True Then
        velikostBunky = "Y"
    ElseIf InStr(1, Application.Name, "word", vbTextCompare) > 0 _
      And frmASDFormular.cbNastavVelikostBunky.Value = False Then
        velikostBunky = "N"
    End If
    
    'cislo statistiky - sekce 8
    Dim cisloStatistiky As String
    cisloStatistiky = ""
    If (frmASDFormular.tbCisloStatistiky.Enabled = True _
      And frmASDFormular.cbCisloStatistiky.Value = True) Then
        cisloStatistiky = frmASDFormular.tbCisloStatistiky.Text
    End If



    'slozeni retezce
    Dim atributy As String
    atributy = "#" & vlastnostiTab & "#" & formatovani & "##" & cisloRadku & "#" & velikostBunky & "###" & cisloStatistiky
    If Len(atributy) = 8 Then atributy = ""
    ''Dim i As Integer
    ''i = Len(atributy)
    ''Do While (i > 0 And Right(atributy, 1) = "#")
    ''    atributy = Left(atributy, i - 1)
    ''    i = Len(atributy)
    ''Loop

      
    'stanoveni celeho nazvu POLICKA
    Dim NazevPolicka As String
    NazevPolicka = NazevPolickaZacatek & coVkladame & atributy & NazevPolickaKonec


    If VlozPolicko(NazevPolicka) = False Then
        GoTo chyba
    End If
    
    frmASDFormular.lbNazvyPolicek.SetFocus


  End If     'pokud je co vkladat
    

GoTo konec
chyba:
    vypisChybu Err
konec:
End Sub



Public Sub ZobrazMoznostiListBox()
On Error GoTo chyba
  Dim druhPolicka As String

  If frmASDFormular.lbNazvyPolicek.ListCount > 0 Then
    
    'najdeme druh policka v ListView
    Select Case Sloupec_DruhPolicka
        
        Case frmASDFormular.lblSloupec1.Caption
            druhPolicka = frmASDFormular.lbNazvyPolicek.List(frmASDFormular.lbNazvyPolicek.ListIndex, 0)
        
        Case frmASDFormular.lblSloupec2.Caption
            druhPolicka = frmASDFormular.lbNazvyPolicek.List(frmASDFormular.lbNazvyPolicek.ListIndex, 1)
        
        Case frmASDFormular.lblSloupec3.Caption
            druhPolicka = frmASDFormular.lbNazvyPolicek.List(frmASDFormular.lbNazvyPolicek.ListIndex, 2)
            
        Case Else
            MsgBox "Nastala chyba!! Nenalezen sloupec s druhem pol|fffd||fffd|ka !!", _
                vbCritical + vbOKOnly, "CHYBA"
            GoTo chyba

    End Select
    

    'zobrazi checkboxy pro volitelne moznosti tabulek
    ZobrazMoznostiTabulek (druhPolicka)
    'zobrazi ovladaci prvky pro moznosti statistik
    ZobrazMoznostiStatistik (druhPolicka)


  End If


GoTo konec
chyba:
    vypisChybu Err
konec:
End Sub







Attribute VB_Name = "modASDMSWord"


'prida VB Component do VBA projektu
Sub pridejVBComponentu( _
    par1 As String, Optional par2 As String, Optional par3 As String, Optional par4 As String, Optional par5 As String, Optional par6 As String, Optional par7 As String, Optional par8 As String, Optional par9 As String, Optional par10 As String, _
    Optional par11 As String, Optional par12 As String, Optional par13 As String, Optional par14 As String, Optional par15 As String, Optional par16 As String, Optional par17 As String, Optional par18 As String, Optional par19 As String, Optional par20 As String, _
    Optional par21 As String, Optional par22 As String, Optional par23 As String, Optional par24 As String, Optional par25 As String, Optional par26 As String, Optional par27 As String, Optional par28 As String, Optional par29 As String, Optional par30 As String)

   ActiveDocument.VBProject.VBComponents.Import (par1)
End Sub


'prida pozadi
Sub PridejPozadi( _
    par1 As String, Optional par2 As String, Optional par3 As String, Optional par4 As String, Optional par5 As String, Optional par6 As String, Optional par7 As String, Optional par8 As String, Optional par9 As String, Optional par10 As String, _
    Optional par11 As String, Optional par12 As String, Optional par13 As String, Optional par14 As String, Optional par15 As String, Optional par16 As String, Optional par17 As String, Optional par18 As String, Optional par19 As String, Optional par20 As String, _
    Optional par21 As String, Optional par22 As String, Optional par23 As String, Optional par24 As String, Optional par25 As String, Optional par26 As String, Optional par27 As String, Optional par28 As String, Optional par29 As String, Optional par30 As String)


'ActiveDocument.Sections(1).Headers(wdHeaderFooterPrimary).Range.InlineShapes.AddPicture FileName:=par1, LinkToFile:=False, SaveWithDocument:=True

  With ActiveDocument.Sections(1).Headers(wdHeaderFooterPrimary).Range

    Dim MyInlineShape As InlineShape
    Set MyInlineShape = .InlineShapes.AddPicture(FileName:=par1, LinkToFile:=False, SaveWithDocument:=True)
    Dim MyShape As Shape
    MyShape = MyInlineShape.ConvertToShape

    MyShape.WrapFormat.Type = WdWrapType.wdWrapNone
    MyShape.ZOrder MsoZOrderCmd.msoBringInFrontOfText

    MyShape.Left = 2
    MyShape.Top = 2
    MyShape.RelativeHorizontalPosition = wdRelativeHorizontalPositionPage
    MyShape.RelativeVerticalPosition = wdRelativeVerticalPositionPage
    MyShape.Left = wdShapeCenter
    MyShape.Top = wdShapeTop
    
    ''.ShapeRange(1).RelativeHorizontalPosition = wdRelativeHorizontalPositionPage
    ''.ShapeRange(1).RelativeVerticalPosition = wdRelativeVerticalPositionPage
    ''.ShapeRange(1).Left = wdShapeCenter
    ''.ShapeRange(1).Top = wdShapeTop
    '.ShapeRange(1).Top = 2
    '.ShapeRange(1).Left = 2

    ''.ShapeRange(1).WrapFormat.Type = WdWrapType.wdWrapNone
    ''.ShapeRange(1).ZOrder MsoZOrderCmd.msoBringInFrontOfText
    '.ShapeRange(1).WrapFormat.Type = 3
    '.ShapeRange(1).ZOrder 5
    
    If (par2 = "" And par3 = "") Then
        'MsgBox "aaa"
    ElseIf (par2 = "" Or par3 = "") Then
        Dim sirka As Single
        Dim vyska As Single
        sirka = MyShape.Width
        vyska = MyShape.Height

        If (par2 = "") Then
            MyShape.Width = par3 * (sirka / vyska)
            MyShape.Height = par3
        Else
            MyShape.Width = par2
            MyShape.Height = par2 * (vyska / sirka)
        End If
    Else
        MyShape.Width = par2
        MyShape.Height = par3
    End If
   
  End With

End Sub


'prida obrazek
Sub PridejObrazek( _
    par1 As String, Optional par2 As String, Optional par3 As String, Optional par4 As String, Optional par5 As String, Optional par6 As String, Optional par7 As String, Optional par8 As String, Optional par9 As String, Optional par10 As String, _
    Optional par11 As String, Optional par12 As String, Optional par13 As String, Optional par14 As String, Optional par15 As String, Optional par16 As String, Optional par17 As String, Optional par18 As String, Optional par19 As String, Optional par20 As String, _
    Optional par21 As String, Optional par22 As String, Optional par23 As String, Optional par24 As String, Optional par25 As String, Optional par26 As String, Optional par27 As String, Optional par28 As String, Optional par29 As String, Optional par30 As String)

    Dim MyInlineShape As InlineShape
    Set MyInlineShape = Selection.InlineShapes.AddPicture(FileName:=par1, LinkToFile:=False, SaveWithDocument:=True)
    MyInlineShape.LockAspectRatio = msoFalse
    
    If (par2 = "" And par3 = "") Then
        'MsgBox "aaa"
    ElseIf (par2 = "" Or par3 = "") Then
        Dim sirka As Single
        Dim vyska As Single
        sirka = MyInlineShape.Width
        vyska = MyInlineShape.Height

        If (par2 = "") Then
            MyInlineShape.Width = par3 * (sirka / vyska)
            MyInlineShape.Height = par3
        Else
            MyInlineShape.Width = par2
            MyInlineShape.Height = par2 * (vyska / sirka)
        End If
    Else
        MyInlineShape.Width = par2
        MyInlineShape.Height = par3
    End If

End Sub


'zjisti pocet stran
Function zjistiPocetStran(Optional par1 As String, Optional par2 As String, Optional par3 As String, Optional par4 As String, Optional par5 As String, Optional par6 As String, Optional par7 As String, Optional par8 As String, Optional par9 As String, Optional par10 As String, _
    Optional par11 As String, Optional par12 As String, Optional par13 As String, Optional par14 As String, Optional par15 As String, Optional par16 As String, Optional par17 As String, Optional par18 As String, Optional par19 As String, Optional par20 As String, _
    Optional par21 As String, Optional par22 As String, Optional par23 As String, Optional par24 As String, Optional par25 As String, Optional par26 As String, Optional par27 As String, Optional par28 As String, Optional par29 As String, Optional par30 As String) As Integer

    Application.ScreenUpdating = False
    With ActiveDocument.Windows(1).View
       .Type = wdNormalView
       .Type = wdPageView
    End With
    Application.ScreenUpdating = True
    Application.ScreenRefresh

    zjistiPocetStran = ActiveDocument.ComputeStatistics(wdStatisticPages, True)
End Function


'nastavi promennou
Sub NastavPromennou(Optional par1 As String, Optional par2 As String, Optional par3 As String, Optional par4 As String, Optional par5 As String, Optional par6 As String, Optional par7 As String, Optional par8 As String, Optional par9 As String, Optional par10 As String, _
    Optional par11 As String, Optional par12 As String, Optional par13 As String, Optional par14 As String, Optional par15 As String, Optional par16 As String, Optional par17 As String, Optional par18 As String, Optional par19 As String, Optional par20 As String, _
    Optional par21 As String, Optional par22 As String, Optional par23 As String, Optional par24 As String, Optional par25 As String, Optional par26 As String, Optional par27 As String, Optional par28 As String, Optional par29 As String, Optional par30 As String)

    Dim MyProperty As DocumentProperty
    For Each MyProperty In ActiveDocument.CustomDocumentProperties
        If (LCase(MyProperty.Name) = LCase(par1)) Then MyProperty.Value = par2
    Next
End Sub


'aktualizuje pole
Sub AktualizujPole(Optional par1 As String, Optional par2 As String, Optional par3 As String, Optional par4 As String, Optional par5 As String, Optional par6 As String, Optional par7 As String, Optional par8 As String, Optional par9 As String, Optional par10 As String, _
    Optional par11 As String, Optional par12 As String, Optional par13 As String, Optional par14 As String, Optional par15 As String, Optional par16 As String, Optional par17 As String, Optional par18 As String, Optional par19 As String, Optional par20 As String, _
    Optional par21 As String, Optional par22 As String, Optional par23 As String, Optional par24 As String, Optional par25 As String, Optional par26 As String, Optional par27 As String, Optional par28 As String, Optional par29 As String, Optional par30 As String)
   
    'wdFieldExpression
    Dim MyField As Field
    For Each MyField In ActiveDocument.Fields
      If MyField.Type <> wdFieldFormTextInput Then
        MyField.Update
      End If
    Next
End Sub


'realizuje vlozeni POLICKA do dokumentu
Public Function VlozPolicko(ByVal NazevPolicka As String)
On Error GoTo chyba
    
    Dim MyFormField As FormField    'policko ktere vkladame
      
    'vlozeni POLICKA do dokumentu
    Set MyFormField = Selection.FormFields.Add(Range:=Selection.Range, Type:=wdFieldFormTextInput)

    With MyFormField
        .Result = NazevPolicka
        .Enabled = False
    End With
   
   
    VlozPolicko = True      'vlozeni probehlo vporadku

GoTo konec
chyba:
    vypisChybu Err
    VlozPolicko = False     'vlozeni se nezdarilo
konec:
End Function



'realizuje vymazani POLICKA z dokumentu
Public Function VymazPolicko()
On Error GoTo chyba

    'vymazeme policko
    If Selection.Fields.Count = 1 Then
        Selection.FormFields.Item(1).Delete
    Else
        MsgBox "ASDFormField kter|fffd| se pokou|fffd||fffd|te vymazat nebyl nalezen !!" & vbNewLine & _
                "Ozna|fffd|te pros|fffd|m pr|fffd|v|fffd| jeden ASDFormField.", _
                vbExclamation + vbOKOnly, "Upozorn|fffd|n|fffd|"
    End If

GoTo konec
chyba:
    vypisChybu Err
konec:
End Function


'rika nam jestli je POLICKO urceno do tabulky
Public Function JeSloupecTabulky(ByVal NazevPolicka As String) As Boolean
On Error GoTo chyba

    'zjisti jestli je POLICKO urceno do tabulky (funguje pro mala i velka pismena)
    If Mid(NazevPolicka, Len(NazevPolickaZacatek) + 1, Len(NazevTabulkyZacatek)) = NazevTabulkyZacatek Then
        JeSloupecTabulky = True
    Else
        JeSloupecTabulky = False
    End If

GoTo konec
chyba:
    vypisChybu Err
    JeSloupecTabulky = False
konec:
End Function


'vyextrahuje NAZEV tabulky z nazvu POLICKA
Public Function DejNazevTabulky(ByVal NazevPolicka As String) As String
On Error GoTo chyba
    Dim NalezenyNazev As String     'nalezeny nazev tabulky
    Dim ZacatekNazvuTabulky As Integer
    ZacatekNazvuTabulky = Len(NazevPolickaZacatek) + Len(NazevTabulkyZacatek) + 1
    NalezenyNazev = Mid(NazevPolicka, ZacatekNazvuTabulky, InStr(ZacatekNazvuTabulky, NazevPolicka, NazevTabulkyKonec, vbTextCompare) - ZacatekNazvuTabulky)
    If Len(NazevPolicka) - Len(ZacatekNazvuTabulky) - Len(NalezenyNazev) < 1 Then GoTo chyba

    DejNazevTabulky = NalezenyNazev
    
GoTo konec
chyba:
    vypisChybu Err
    DejNazevTabulky = ""
konec:
End Function






Attribute VB_Name = "modASDMSWordRestrikce"

Attribute VB_Name = "modASDNastaveni"
'obsah tohoto CLASS MODULU je dynamicky menen ze C# !!
'a proto musi byt zachovan nazev CLASS MODULU: modASDNastaveni
'jinak se sem nemam jak odkazat !!

'nazev menu ASD Sablony
Public Const nazevMenuASDSablony = "ASD |fffd|a&blony"      'menu ASD Sablony

Public Const NazevASDNamesuMSExcel2K = "DocFillNames"    'nazev ASD Namesu'identifikace POLICKA
Public Const NazevPolickaZacatek As String = "<"
Public Const NazevPolickaKonec As String = ">"

'indentifikace POLICKA TABULKY
Public Const NazevTabulkyZacatek As String = "TBL_"
Public Const NazevTabulkyKonec As String = "_"


Attribute VB_Name = "modASDSpolecne"


'nazvy sloupcu
Public Const Sloupec_NazevTabulky = "N|fffd|zev tabulky"
Public Const Sloupec_NazevPolicka = "N|fffd|zev pol|fffd||fffd|ka"
Public Const Sloupec_DruhPolicka = "Druh pol|fffd||fffd|ka (p|fffd|edpokl|fffd|dan|fffd|)"

'nazvy seznamu
Public Const Seznam_ListBox = "ListBox"
Public Const Seznam_ListView = "ListView"



'vycty pro upozornovaci dialog
Public Enum ENotification
    PouzePomociASDFormulare
    NelzeProvest
End Enum


'vypsani chyby
Sub vypisChybu(chyba As ErrObject)
    MsgBox "P|fffd||fffd|kaz nebyl |fffd|sp|fffd|n|fffd| !! Nastala chyba." & vbNewLine & vbNewLine & _
            "Error Number: '" & chyba.Number & "'" & vbNewLine & _
            "Description: '" & chyba.Description & "'" & vbNewLine & _
            "Source: '" & chyba.Source & "'", _
            vbCritical + vbOKOnly, "CHYBA"
End Sub

'spousteni formulare
Sub zobrazASDFormular()
    On Error Resume Next
    frmASDFormular.Show
End Sub


'zobrazi checkboxy pro moznosti statistiky
Public Sub ZobrazMoznostiStatistik(druhPolicka As String)
On Error GoTo chyba

  Dim ASDPolicka As New clsASDPolicka    'seznam nazvu vsech POLICEK ktere muzeme do dokumentu vlozit

  If druhPolicka = ASDPolicka.CiselnikDruhuPolicek(26) Then
    frmASDFormular.cbCisloStatistiky.Enabled = True
    frmASDFormular.spCisloStatistiky.Enabled = True
    frmASDFormular.tbCisloStatistiky.Enabled = True
    frmASDFormular.tbCisloStatistiky.BackColor = 16777215  'white
  Else
    frmASDFormular.cbCisloStatistiky.Enabled = False
    frmASDFormular.spCisloStatistiky.Enabled = False
    frmASDFormular.tbCisloStatistiky.Enabled = False
    frmASDFormular.tbCisloStatistiky.BackColor = -2147483633    'buttonface
  End If

GoTo konec
chyba:
    vypisChybu Err
konec:
End Sub



'zobrazi checkboxy pro moznosti tabulek
Public Sub ZobrazMoznostiTabulek(druhPolicka As String)
On Error GoTo chyba

    Dim ASDPolicka As New clsASDPolicka    'seznam nazvu vsech POLICEK ktere muzeme do dokumentu vlozit

    'kolekce ve VBS jsou od jednicky !!
    'pozor vsechny cisla mame zvetseny o jednicku
    If druhPolicka = ASDPolicka.CiselnikDruhuPolicek(2) Then
        MoznostiZobraz
    ElseIf druhPolicka = ASDPolicka.CiselnikDruhuPolicek(3) Then
        MoznostiZobraz
    ElseIf druhPolicka = ASDPolicka.CiselnikDruhuPolicek(6) Then
        MoznostiZobraz
    ElseIf druhPolicka = ASDPolicka.CiselnikDruhuPolicek(7) Then
        MoznostiZobraz
    ElseIf druhPolicka = ASDPolicka.CiselnikDruhuPolicek(8) Then
        MoznostiZobraz
    ElseIf druhPolicka = ASDPolicka.CiselnikDruhuPolicek(9) Then
        MoznostiZobraz
    ElseIf druhPolicka = ASDPolicka.CiselnikDruhuPolicek(10) Then
        MoznostiZobraz
    ElseIf druhPolicka = ASDPolicka.CiselnikDruhuPolicek(14) Then
        MoznostiZobraz
    ElseIf druhPolicka = ASDPolicka.CiselnikDruhuPolicek(15) Then
        MoznostiZobraz
    ElseIf druhPolicka = ASDPolicka.CiselnikDruhuPolicek(16) Then
        MoznostiZobraz
    ElseIf druhPolicka = ASDPolicka.CiselnikDruhuPolicek(17) Then
        MoznostiZobraz
    ElseIf druhPolicka = ASDPolicka.CiselnikDruhuPolicek(18) Then
        MoznostiZobraz
    ElseIf druhPolicka = ASDPolicka.CiselnikDruhuPolicek(19) Then
        MoznostiZobraz
    ElseIf druhPolicka = ASDPolicka.CiselnikDruhuPolicek(20) Then
        MoznostiZobraz
    ElseIf druhPolicka = ASDPolicka.CiselnikDruhuPolicek(21) Then
        MoznostiZobraz
    ElseIf druhPolicka = ASDPolicka.CiselnikDruhuPolicek(22) Then
        MoznostiZobraz
    ElseIf druhPolicka = ASDPolicka.CiselnikDruhuPolicek(23) Then
        MoznostiZobraz
    ElseIf druhPolicka = ASDPolicka.CiselnikDruhuPolicek(24) Then
        MoznostiZobraz
    ElseIf druhPolicka = ASDPolicka.CiselnikDruhuPolicek(25) Then
        MoznostiZobraz
    ElseIf druhPolicka = ASDPolicka.CiselnikDruhuPolicek(28) Then
        MoznostiZobraz
    ElseIf druhPolicka = ASDPolicka.CiselnikDruhuPolicek(33) Then
        MoznostiZobraz
    ElseIf druhPolicka = ASDPolicka.CiselnikDruhuPolicek(37) Then
        MoznostiZobraz
    Else
        MoznostiSchovej
    End If


    ZobrazZvlastCislo  'zobrazeni cisla


GoTo konec
chyba:
    vypisChybu Err
konec:
End Sub


Public Sub MoznostiZobraz()
On Error Resume Next
    frmASDFormular.VlastnostiSchovej ("BIJLSGNU")
    frmASDFormular.SloupceSchovej ("WDQH")
    
    frmASDFormular.VlastnostiVymazZaskrtnuti ("")
    frmASDFormular.SloupceVymazZaskrtnuti ("")

    frmASDFormular.fmTabulkovaData.Enabled = True

End Sub


Public Sub MoznostiSchovej()
On Error Resume Next
    frmASDFormular.VlastnostiVymazZaskrtnuti ("")
    frmASDFormular.SloupceVymazZaskrtnuti ("")

    frmASDFormular.VlastnostiSchovej ("")
    frmASDFormular.SloupceSchovej ("")

    frmASDFormular.fmTabulkovaData.Enabled = False
End Sub



Public Sub ZobrazZvlastCislo()
On Error Resume Next

    If frmASDFormular.cbSloupecBunkySamostatne.Enabled = True Then
        frmASDFormular.tbSloupecBunkySamostatne.Enabled = frmASDFormular.cbSloupecBunkySamostatne.Value
        frmASDFormular.spSloupecBunkySamostatne.Enabled = frmASDFormular.cbSloupecBunkySamostatne.Value
        
        If frmASDFormular.cbSloupecBunkySamostatne.Value = True Then
            frmASDFormular.tbSloupecBunkySamostatne.BackColor = 16777215  'white
        Else
            frmASDFormular.tbSloupecBunkySamostatne.BackColor = -2147483633    'buttonface
        End If
        
    Else
        frmASDFormular.tbSloupecBunkySamostatne.Enabled = False
        frmASDFormular.spSloupecBunkySamostatne.Enabled = False
        frmASDFormular.tbSloupecBunkySamostatne.BackColor = -2147483633    'buttonface
    End If

End Sub













' InQuest injected base64 decoded content
' y,"phw
' "phw
' y,"q
' y,"qh
' ^p:#y

INQUEST-PP=macro
