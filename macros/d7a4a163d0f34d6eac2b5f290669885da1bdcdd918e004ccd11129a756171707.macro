Attribute VB_Name = "Module1"
Sub addNumberOfRow()

    'Get the number of rows the user wants to add
    Dim rowsToAdd As Integer
    rowsToAdd = Range("F5").Value
    
    'Move to the delivery note tab
    Sheets("Blank Delivery note").Select
    
    'unprotect the sheet so we can alter it
    protectSheet (False)
    
    'Call the addRow sub the number of times required
    Dim index As Integer
    For index = 1 To rowsToAdd
        addRow
    Next
    
    'Protect the sheet again now the alterations have been completed
    protectSheet (True)
    
    'Return to the controls tab
    Sheets("Controls").Select

End Sub
Sub addRow()
    
    'Get the last row from the last row counter
    Dim lastRow As Integer
    lastRow = Range("buttonControl!B1").Value
    
    'Select, copy and insert cells
    Dim rowRef As String
    rowRef = lastRow & ":" & lastRow
    Rows(rowRef).Select
    Selection.Copy
    Selection.Insert Shift:=xlDown
    
    'add 1 to the number of rows count
    Range("buttonControl!B1").Value = lastRow + 1
    
End Sub

Sub removeNumberOfRow()

    'Find out how many rows the user wants to remove
    Dim rowsToremove As Integer
    rowsToremove = Range("F7").Value
    
    'Move to the delivery note tab
    Sheets("Blank Delivery note").Select
    
    'unprotect the sheet so we can alter it
    protectSheet (False)
    
    'Call the removeRow sub the number of times required
    Dim index As Integer
    For index = 1 To rowsToremove
        removeRow
    Next
    
    'Protect the sheet again now the alterations have been completed
    protectSheet (True)
    
    'Return to the controls tab
    Sheets("Controls").Select
     
End Sub

Sub removeRow()

    'Get the last row from the last row counter
    Dim lastRow As Integer
    lastRow = Range("buttonControl!B1").Value
    
    'Get the minimum row from the minimum row controller
    Dim minRow As Integer
    minRow = Range("buttonControl!B2").Value
    
    'Only remove rows when we have more rows than the minimum row
    If lastRow > minRow Then
        'Select the last row and delete it.
        Dim rowRef As String
        rowRef = lastRow & ":" & lastRow
        Rows(rowRef).Select
        Selection.Delete Shift:=xlUp
        Range("buttonControl!B1").Value = lastRow - 1
    End If
    
End Sub

Sub setDecimalPlaces()

    'Get the number of decimal places the user wants to use.
    Dim decPlaces As Integer
    decPlaces = Range("F9").Value

    'Move to the delivery note tab and select the Total_Pieces named range
    Sheets("Blank Delivery note").Select
    
    'unprotect the sheet so we can alter it
    protectSheet (False)
    
    Range("Total_Pieces").Select
    
    'Format the named range accordingly
    If decPlaces = 0 Then
        Selection.NumberFormat = "0"
    End If
    If decPlaces = 1 Then
        Selection.NumberFormat = "0.0"
    End If
    If decPlaces = 2 Then
        Selection.NumberFormat = "0.00"
    End If
     
    'Protect the sheet again now the alterations have been completed
    protectSheet (True)
     
    'Return to the controls tab
    Sheets("Controls").Select
    
End Sub
Sub protectSheet(ByVal yesNo As Boolean)
   
   If yesNo = True Then
      'Protect the sheet
       ActiveSheet.Protect DrawingObjects:=False, Contents:=True, Scenarios:=False, Password:="howdensids"
   Else
       'unprotect the sheet so we can alter it
       ActiveSheet.Unprotect Password:="howdensids"
   End If
       
End Sub
Attribute VB_Name = "Sheet1"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Sheet2"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Sheet3"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Sheet4"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Sheet5"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Sheet6"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "ThisWorkbook"
Attribute VB_Base = "0{00020819-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True


INQUEST-PP=macro
