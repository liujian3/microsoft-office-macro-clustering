Attribute VB_Name = "Module1"
Option Explicit

Public Type ItemData
    'Picture As Boolean
    'PictureComment As String
    Issue As String
    IssueOld As String
    Reason As String
    Solution As String
    System As String
    Location As String
    Unit As String
    IssueCategory As String
    Image As New Image
    Shape1 As InlineShape
    Shape2 As InlineShape
    Shape(3) As InlineShape
End Type

Public OldIssue As String
Public NewIssue As String

Public dlg As FileDialog
Attribute VB_Name = "NewMacros"
Sub ToggleForm()
'
' ToggleForm Macro
'
'
If UserForm1.Visible = True Then UserForm1.Hide Else UserForm1.Show
End Sub

Sub RefreshForm()
    UserForm1.Hide
    UserForm1.Show
End Sub
Attribute VB_Name = "ThisDocument"
Attribute VB_Base = "1Normal.ThisDocument"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = True
Attribute VB_Customizable = True
Attribute VB_Control = "chkNoRepresentative, 3, 0, MSForms, CheckBox"
Attribute VB_Control = "chkVerballyGiven, 2, 1, MSForms, CheckBox"
Attribute VB_Control = "chkOfficeInformationOnly, 1, 2, MSForms, CheckBox"
Attribute VB_Control = "chkClientInformation, 0, 3, MSForms, CheckBox"
Option Explicit

Private Sub Document_Open()
    UserForm1.Show
End Sub
Attribute VB_Name = "UserForm1"
Attribute VB_Base = "0{A5F340EC-FB49-42AB-BA81-AE5F36F8B060}{6210F096-D058-42EE-8E88-908A24FE00D0}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Option Explicit

Dim curItem As Integer
Dim iProblem(99) As String
Dim iPicture(99) As Byte
Const startRow As Integer = 3 'this is the amount of rows that are above the project row
Dim DataFields(99) As ItemData
Const picSpacer As String = "   "
Private Sub UserForm_Activate()

    Set dlg = Application.FileDialog(msoFileDialogFilePicker)

    ' initialize the common dialog control for inserting images
    'dlg.InitDir = "C:\"
    'dlg.Filter = "All Files (*.*)|*.*|Image Formats (*.bmp; *.jpg; *.gif; *.tif)|*.bmp;*.jpg;*.jpeg;*.gif;*.tif;*.tiff"
    'dlg.FilterIndex = 2
    'dlg.CancelError = True
    
    ' fill the category combobox with items
    With cboCategory
        .Clear
        .AddItem ""
        .AddItem "Fans"
        .AddItem "Air Distribution"
        .AddItem "VAV Boxes"
        .AddItem "DDC Controls"
        .AddItem "Water"
        .AddItem "Pump"
        .AddItem "Coil"
        .AddItem "Duct"
        .AddItem "Stairs"
        .AddItem "General"
    End With
    
    ' if this document is not new (being created manually), we must pull the PDR info into the yellow form so the user can work with the PDR
    
    ' pull the selected PDR choices into the yellow form
    If ThisDocument.chkClientInformation.Value = True Then UserForm1.optClientInformation.Value = True
    If ThisDocument.chkOfficeInformationOnly.Value = True Then UserForm1.optOfficeInformationOnly.Value = True
    If ThisDocument.chkVerballyGiven.Value = True Then UserForm1.optGiven.Value = True
    If ThisDocument.chkNoRepresentative.Value = True Then UserForm1.optGiven2.Value = True
    'If ThisDocument.Tables(1).Cell(8, 1).Range.FormFields(1).CheckBox.Value = True Then UserForm1.optGiven.Value = True
    'If ThisDocument.Tables(1).Cell(10, 1).Range.FormFields(1).CheckBox.Value = True Then UserForm1.optGiven2.Value = True
    'If ThisDocument.Tables(1).Cell(6, 1).Range.FormFields(1).CheckBox.Value = True Then UserForm1.optClientInformation.Value = True
    'If ThisDocument.Tables(1).Cell(6, 3).Range.FormFields(1).CheckBox.Value = True Then UserForm1.optOfficeInformationOnly.Value = True
        
    ' pull the basic PDR info into the yellow form
    GetProp UserForm1.txtProject, 2
    GetProp UserForm1.txtLocation, 3
    GetProp UserForm1.txtReportNumber, 4
    GetProp UserForm1.txtFieldTechnician, 5
    GetProp UserForm1.txtReportDate, 6
    GetProp UserForm1.txtFirm, 7

    ' pull remaining PDR info into the yellow form
    'GetBlock UserForm1.txtProject, 4, 2
    'GetBlock UserForm1.txtReportNumber, 4, 4
    'GetBlock UserForm1.txtLocation, 5, 2
    'GetBlock UserForm1.txtReportDate, 5, 4
    'GetBlock UserForm1.txtFirm, 2, 3
    'GetBlock UserForm1.txtFieldTechnician, 10, 4
    GetBlock UserForm1.txtPerson, 2, 5
    GetBlock UserForm1.txtNameTitle, 3, 3
    GetBlock UserForm1.txtOnDate, 3, 5
    
    ' lock the content controls if this PDR was generated by APS. we know it was generated if LockContents = True for the Project content control (index 2).
    If ThisDocument.ContentControls(2).LockContents = True Then
        UserForm1.txtProject.Locked = True
        UserForm1.txtLocation.Locked = True
        UserForm1.txtReportNumber.Locked = True
        UserForm1.txtFieldTechnician.Locked = True
        UserForm1.txtReportDate.Locked = True
        UserForm1.txtFirm.Locked = True
    End If
    
    ' start on the first PDR issue
    curItem = 1
    ThisDocument.Tables(3).Cell(1 + curItem, 1).Range.Text = curItem
    lblItem.Caption = curItem
    NewIssue = ThisDocument.Tables(3).Cell(1 + curItem, 4).Range.Text
    GetItem

End Sub

'================================================================
' MAIN
'================================================================

Private Sub UserForm_Initialize()

End Sub

'================================================================
' CATEGORY CHANGES
'================================================================

Private Sub cboCategory_Change()
    ' clear the comment combobox
    cboComment.Clear
    
    ' fill the comment combobox with info pertaining to the selected category
    Select Case cboCategory.Text
        Case ""
            cboComment.AddItem ""
        Case "Fans"
            cboComment.AddItem "No electrical power to the fan. This fan needs power and start up completed so that we may accomplish our work."
            cboComment.AddItem "The economizer controls are inoperable. Full operational control of the economizer is required to complete our scope of work."
            cboComment.AddItem "The economizer is not installed. The economizer needs to be installed and functioning properly for us to be able to complete our scope of work."
            cboComment.AddItem "The static pressure controls & inlet vanes are inoperable. These controls need to be functioning properly for us to be able to complete our scope of work."
            cboComment.AddItem "The static pressure controls & inverters are inoperable. These controls need to be functioning properly for us to be able to complete our scope of work."
            cboComment.AddItem "The outside air (OSA) intake is not installed. The OSA needs to be installed for us to be able to complete our scope of work. "
            cboComment.AddItem "The filters are not installed. Filters need to be installed prior to system balance."
            cboComment.AddItem "The filters are dirty.  New filters need to be installed prior to system balance."
            cboComment.AddItem "The unit does not run as fuses and/or heaters are not installed.  These need to be installed and system start up completed prior to system balance."
            cboComment.AddItem "The coil is clogged and needs to be cleaned. The pressure drop is excessive and this issue needs to be resolved prior to system balance."
            cboComment.AddItem "The electrical disconnect switch needs installation. This switch needs to be installed and system start up completed prior to system balance."
            cboComment.AddItem "The fan is inoperable, sheaves and/or belts are not installed. These items need to be installed and system start up completed prior to system balance."
            cboComment.AddItem "Belts are bad and need replacement. This fan needs new belts installed prior to final system balance."
            cboComment.AddItem "The fan is running backwards. The rotation of this motor needs to be changed prior to system balance."
            cboComment.AddItem "The fan motor is over amping. This condition needs to be corrected to ensure the life of the motor."
            cboComment.AddItem "There is no access to the inline fan. Please provide access to obtain the fan data. "
            cboComment.AddItem "There is no access to the fan motor, unable to obtain nameplate info. Please provide access to obtain the fan data."
            cboComment.AddItem "Low system static pressure is preventing the completion of our work. The existing system is not providing sufficient static pressure to properly balance the VAV boxes within our scope of work."
            cboComment.AddItem "The shipping/packaging material has not been removed from this system. The fan is not running. These items need to be removed and system start up completed prior to system balance."
            cboComment.AddItem "The fan is not installed. This fan needs to be installed and system start up completed prior to system balance. "
            cboComment.AddItem "The fan is not running. Controls are incomplete. These items need to be installed and system start up completed prior to system balance. "
            cboComment.AddItem "Inline sealed unit. All actual data that is accessible has been recorded and will be included in our final report. Please provide equipment submittal data."
            cboComment.AddItem "A sheave change is required to obtain the required design air quantity."
            cboComment.AddItem "The information tag is covered. All actual data that is accessible has been recorded and will be included in our final report."
            cboComment.AddItem "The required OSA is not shown on the prints. Please confirm the OSA CFM requirement."
            cboComment.AddItem "The manual volume damper is fully closed. The diffuser is high and unable to be reduced to the design CFM. This damper needs repair or replacement to work properly and to be able to achieve design air flow."
            cboComment.AddItem "The existing air distribution required air quantity is not listed."
            cboComment.AddItem "The air distribution is not installed as specified. Please install per plans and specifications."
            cboComment.AddItem "The outlet is not listed on plans."
            cboComment.AddItem "The fan is set on high and the system is below design."
            cboComment.AddItem "The fan is set on low and the system is above design air flow."
            cboComment.AddItem "There is no motor tag. All actual data that is accessible has been recorded and will be included in our final report."
        Case "Air Distribution"
            cboComment.AddItem "No main zone dampers are installed. Main zone dampers are the most efficient method of balancing and are required to obtain proper system balance."
            cboComment.AddItem "The opposed blade dampers are stuck and corroded. Unable to proportion; needs repair or replacement."
            cboComment.AddItem "The air distribution is not installed as specified."
            cboComment.AddItem "Thermostat does not work properly and needs repair or replacement."
            cboComment.AddItem "No manual volume damper installed or shown on drawings."
            cboComment.AddItem "The thermostat is not installed."
            cboComment.AddItem "The air distribution has been deleted."
            cboComment.AddItem "The air distribution is not installed."
            cboComment.AddItem "The face of air distribution is not installed."
            cboComment.AddItem "The air distribution is not shown on mechanical drawing."
            cboComment.AddItem "No manual volume damper installed. Please install a volume damper to adjust air flow to design requirements."
            cboComment.AddItem "Top can and air distribution are not installed. Please install this equipment so we may complete our work."
            cboComment.AddItem "Required air quantity is not listed. Please provide the required CFM."
            cboComment.AddItem "The air distribution is capped."
            cboComment.AddItem "The return register/grille is not installed."
            cboComment.AddItem "The damper is open at 100%; unable to achieve design air quantities."
            cboComment.AddItem "Supply outlet has a return register/grille installed."
            cboComment.AddItem "Return inlet has a supply diffuser installed."
            cboComment.AddItem "The supply outlet is not installed properly.  This air distribution is connected to the exhaust duct."
        Case "VAV Boxes"
            cboComment.AddItem "The required minimum air quantities are not listed on the plans. Please provide the individual CFM values prior to system balance."
            cboComment.AddItem "The thermostat is not installed. This thermostat needs to be installed and operating properly prior to system balance."
            cboComment.AddItem "Thermostat does not work. This thermostat needs repair or replacement and to be operating properly prior to system balance."
            cboComment.AddItem "The thermostat will not communicate with box. This thermostat needs repair or replacement and to be operating properly prior to system balance."
            cboComment.AddItem "The velocity controller is inoperable and needs to be replaced. This controller needs repair or replacement and to be operating properly prior to system balance."
            cboComment.AddItem "The velocity controller is not installed. This controller needs to be installed and operating properly prior to system balance."
            cboComment.AddItem "The velocity sensor is broken. This sensor needs repair or replacement and to be operating properly prior to system balance."
            cboComment.AddItem "The velocity sensor is obstructed and needs to be repaired or replaced. This controller needs repair or replacement and to be operating properly prior to system balance."
            cboComment.AddItem "The damper actuator is inoperable. This actuator needs repair or replacement and to be operating properly prior to system balance."
            cboComment.AddItem "Damper does not operate properly. The damper linkage is not connected. This linkage needs repair or replacement and to be operating properly prior to system balance."
            cboComment.AddItem "No main air pressure, therefore the controls will not operate."
            cboComment.AddItem "The installed thermostat is direct acting. Reverse acting is required for this system. This thermostat needs replacement and needs to be operating properly prior to system balance."
            cboComment.AddItem "The installed thermostat is reverse acting. Direct acting is required for this system. This thermostat needs replacement and needs to be operating properly prior to system balance."
            cboComment.AddItem "The velocity sensor ports are missing caps. These caps need to be installed for the controller to work properly. This repair needs to be completed prior to system balance."
            cboComment.AddItem "The variable air volume pneumatic controls are not piped and are incomplete. These controls need to be complete and operating properly prior to system balance."
        Case "DDC Controls"
            cboComment.AddItem "The required minimum air quantities are not listed. Please provide this specific information to accomplish system balance."
            cboComment.AddItem "Variable air volume is not commissioned. These controls need to be complete, operating properly and fully commissioned prior to system balance."
            cboComment.AddItem "The variable air volume is inoperable, not commissioned. These controls need to be complete, operating properly and commissioned prior to system balance."
            cboComment.AddItem "The thermostat will not communicate with box. This thermostat needs to be commissioned, repaired and/or replaced and to be operating properly prior to system balance."
            cboComment.AddItem "The control contractor was not scheduled to be on site with the Test and Balance agency. We are unable to adjust the D.D.C. systems as the program has not been provided to our technician."
            cboComment.AddItem "The fan is not operating under automated control. The CAV/VAV boxes have not been commissioned. The controls need to be complete, operating properly and commissioned prior to system balance."
        Case "Water"
            cboComment.AddItem "Pete's plugs installed are not located in the correct location. This condition impedes our ability to provide accurate pressure readings."
            cboComment.AddItem "System has not been cleaned and flushed. Complete flushing and cleaning of this system is required to obtain proper final system balance."
            cboComment.AddItem "Balancing valves are not installed as required to achieve proper system balance. Only coil service/isolation valves are installed."
            cboComment.AddItem "The coil does not have balancing or flow measuring devices installed."
            cboComment.AddItem "The coil has both supply and return valves fully closed due to water leakage. This coil needs repair prior to system balance."
            cboComment.AddItem "Pump doesn't have gauges, gauge ports or Pete's plugs installed as specified. These items are required to measure and record pressure and temperature. Please provide means to obtain the required information."
            cboComment.AddItem "The pump is running backwards. The rotation of the pump must be changed to properly balance this system."
            cboComment.AddItem "The pump is not running because it has no electrical power. The pump needs to be running under normal operation to properly balance this system."
            cboComment.AddItem "The pump is not running. Controls are incomplete. The pump needs to be running under normal operation to properly balance this system."
            cboComment.AddItem "The required gallons per minute (GPM) is not listed. Please provide the required flow rate."
            cboComment.AddItem "The required total dynamic head pressure (TDH) is not listed. Please provide this information."
            cboComment.AddItem "The piping is not complete. The piping needs to be complete, with clean water in the system and the pump running under normal operation to properly balance this system."
            cboComment.AddItem "The valve controls are not complete. These controls need to be complete, operating properly and fully commissioned prior to system balance."
            cboComment.AddItem "The coil is not piped. This piping needs to be complete, with clean water in the system and the pump needs to be running under normal operation to properly balance this system."
            cboComment.AddItem "The coil is piped backwards. This piping needs to be corrected prior to system balance."
            cboComment.AddItem "The reheat actuator valve is direct acting. Reverse acting is required for this system to operate properly. This actuator needs replacement and needs to be operating properly prior to system balance."
            cboComment.AddItem "The reheat actuator valve is reverse acting. A direct acting actuator is required for this system. This actuator needs replacement and needs to be operating properly prior to system balance."
            cboComment.AddItem "The strainer is clogged. This system needs to be cleaned prior to system balance."
            cboComment.AddItem "The gas is not turned on for this unit. This unit needs to be fully operational and operating under design conditions to complete our work."
            cboComment.AddItem "No ports are available to read water temperature. These are required to measure and record pressure and temperature. Please provide means to obtain the required information."
            cboComment.AddItem "Chiller not in operation. The chiller(s) need to be complete, with clean water in the system running under normal operation to properly balance this system."
            cboComment.AddItem "Chiller not in operation, startup has not been completed. The chiller(s) need to be complete, with clean water in the system running under normal operation to properly balance this system."
            cboComment.AddItem "Boiler not in operation. The boiler(s) need to be complete, with clean water in the system running under normal (design) operation to properly balance this system."
            cboComment.AddItem "Boiler set points are not set to operate at required temperatures listed on contract documents provided. This is required to obtain proper system balance. Please adjust the set points to the design criteria indicated on the project documents."
        Case "Pump"
            cboComment.AddItem "Pump pressure gauges are not installed. This condition impedes our ability to provide accurate pressure readings. Please install gauges."
            cboComment.AddItem "The pump is running backwards. The rotation of the pump must be changed to properly balance this system."
            cboComment.AddItem "The pump is not running because it has no electrical power. The pump needs to be running under normal operation to properly balance this system."
            cboComment.AddItem "The pump is not running. Controls are incomplete. The pump needs to be running under normal operation to properly balance this system."
            cboComment.AddItem "The required gallons per minute (GPM) is not listed. Please provide the required flow rate."
            cboComment.AddItem "The required total dynamic head pressure (TDH) is not listed. Please provide this information."
            cboComment.AddItem "The piping is not complete. The piping need to be complete, with clean water in the system and the pump needs to be running under normal operation to properly balance this system."
        Case "Coil"
            cboComment.AddItem "The coil is air locked."
            cboComment.AddItem "The coil is piped backwards. This piping needs to be corrected prior to system balance."
            cboComment.AddItem "The strainer is clogged. This system needs to be cleaned prior to system balance."
        Case "Duct"
            cboComment.AddItem "The flex is not connected in ceiling."
            cboComment.AddItem "No volume dampers are installed."
            cboComment.AddItem "The damper handle is missing."
            cboComment.AddItem "The damper is broken. Needs repair or replacement."
            cboComment.AddItem "The fire damper has no access door installed in the ductwork."
            cboComment.AddItem "The smoke or fire damper is not wired."
            cboComment.AddItem "The flex is kinked and obstructing air flow to diffuser."
            cboComment.AddItem "The ductwork is not installed."
            cboComment.AddItem "The ductwork is not installed as shown on the plans."
            cboComment.AddItem "Unable to traverse duct. The possible location is poor and has an inadequate length of straight run to obtain accurate readings."
            cboComment.AddItem "The ductwork is not installed as shown."
        Case "Stairs"
            cboComment.AddItem "All doors are not installed. Testing of the Fire Life Safety Stairwell System requires that all doors be installed with floor sweeps, all openings in the stair well are sealed and that the fan, air distribution and relief louver are 100% complete."
            cboComment.AddItem "Relief louver is not installed. Testing of the Fire Life Safety Stairwell System requires that all doors be installed with floor sweeps, all openings in the stair well are sealed and that the fan, air distribution and relief louver are 100% complete."
            cboComment.AddItem "Stairwell is not ready for pressure testing. Excessive leakage is present, as smoke seals, door sweeps, wall penetrations, lights, electrical switch plates and walls have not been installed and sealed. Testing of the Fire Life Safety Stairwell System requires that all doors be installed with floor sweeps, all openings in the stair well are sealed and that the fan, air distribution and relief louver are 100% complete."
        Case "General"
            cboComment.AddItem "Please contact our office to reschedule this project when all systems are 100% operable and ready to complete the final Test and Balance."
            cboComment.AddItem "The building is not complete.  All doors, windows and outside building walls must be installed per the project specification for the Test and Balance to be started."
            cboComment.AddItem "VFD has not been commissioned. The VFD needs to be complete, operating properly and fully commissioned prior to system balance."
            cboComment.AddItem "No access. This area is inaccessible because ___________________________. Please provide access to this area so we may complete our work."
    End Select
    'UpdateTable2
End Sub

'================================================================
' CONTROL EVENTS
'================================================================

Private Sub optGiven_Click()
    ThisDocument.chkVerballyGiven.Value = True
    ThisDocument.chkNoRepresentative.Value = False
    'ThisDocument.FormFields.Item(3).CheckBox.Value = True
    'ThisDocument.FormFields.Item(4).CheckBox.Value = False
End Sub

Private Sub optGiven2_Click()
    ThisDocument.chkVerballyGiven.Value = False
    ThisDocument.chkNoRepresentative.Value = True
    'ThisDocument.FormFields.Item(3).CheckBox.Value = False
    'ThisDocument.FormFields.Item(4).CheckBox.Value = True
End Sub

Private Sub optClientInformation_Click()
    ThisDocument.chkClientInformation.Value = True
    ThisDocument.chkOfficeInformationOnly.Value = False
End Sub

Private Sub optOfficeInformationOnly_Click()
    ThisDocument.chkClientInformation.Value = False
    ThisDocument.chkOfficeInformationOnly.Value = True
End Sub

Private Sub optDeficiencies_Click()
    UpdateBlock 8, 1, "During the process of testing and balancing on this project we have noted issues, conflicts, errors, or deficiencies that need to be rectified prior to the completion of our work.  We request that the responsible party address these issues and contact our office upon completion.  The issues are as follows:"
    ThisDocument.Sections(1).Footers(wdHeaderFooterFirstPage).Range.Tables(1).Rows(1).Range = "We are dependent upon your help and co-operation in resolving these items as they may delay the completion of the test and balance analysis report.  We kindly request you to return this form to our office upon completion."
End Sub

Private Sub optInspectionsGeneralInfo_Click()
    UpdateBlock 8, 1, ""
    'ThisDocument.Sections(1).Footers(wdHeaderFooterFirstPage).Range.Paragraphs(1).Range.Text
    ThisDocument.Sections(1).Footers(wdHeaderFooterFirstPage).Range.Tables(1).Rows(1).Range = ""
End Sub

Private Sub txtProject_Change()
    'UpdateBlock 4, 2, txtProject.Text
    UpdateProp 2, txtProject.Text
End Sub

Private Sub txtLocation_Change()
    'UpdateBlock 5, 2, txtLocation.Text
    UpdateProp 3, txtLocation.Text
End Sub

Private Sub txtReportNumber_Change()
    'UpdateBlock 4, 4, txtReportNumber.Text
    UpdateProp 4, txtReportNumber.Text
End Sub

Private Sub txtFieldTechnician_Change()
    'UpdateBlock 10, 4, txtFieldTechnician.Text
    UpdateProp 5, txtFieldTechnician.Text
End Sub

Private Sub txtReportDate_Change()
    'UpdateBlock 5, 4, txtReportDate.Text
    UpdateProp 6, txtReportDate.Text
End Sub

Private Sub txtFirm_Change()
    'UpdateBlock 2, 3, txtFirm.Text
    UpdateProp 7, txtFirm.Text
End Sub

Private Sub txtNameTitle_Change()
    UpdateBlock 3, 3, txtNameTitle.Text
End Sub

Private Sub txtOnDate_Change()
    UpdateBlock 3, 5, txtOnDate.Text
End Sub

Private Sub txtPerson_Change()
    UpdateBlock 2, 5, txtPerson.Text
End Sub

Private Sub txtSystem_Change()
    DataFields(curItem).System = txtSystem.Text
    UpdateSystem
End Sub

Private Sub txtUnit_Change()
    DataFields(curItem).Unit = txtUnit.Text
    UpdateUnit
End Sub

'================================================================
' PDR ISSUE BUTTONS
'================================================================

Private Sub cmdFinish_Click()

    Dim iBox As String
    iBox = InputBox("Enter password to prepare this document for sending.", "Password")
    
    If iBox = "finish" Then
    
    'ThisDocument.Sections(1).Headers(wdHeaderFooterPrimary).Range.Tables.Add ThisDocument.Sections(1).Headers(wdHeaderFooterPrimary).Range, 1, 1 '5
    ThisDocument.Sections(1).Footers(wdHeaderFooterPrimary).Range.Tables.Add ThisDocument.Sections(1).Footers(wdHeaderFooterPrimary).Range, 9, 4 '5
    
    'With ThisDocument.Sections(1).Headers(wdHeaderFooterPrimary).Range.Tables(1)
    '.Cell(1, 1).Range.InlineShapes.AddPicture "G:\Shared\LETTERHEAD\pdr_header.jpg"
    '.Cell(1, 1).Range.InlineShapes(1).Width = 60
    '.Cell(1, 1).Range.InlineShapes(1).Height = 84
    '.Cell(1, 1).Range.ParagraphFormat.Alignment = wdAlignParagraphCenter
    'End With
    
    With ThisDocument.Sections(1).Headers(wdHeaderFooterPrimary).Range
    .InlineShapes.AddPicture "J:\images\letterhead_aabc.jpg"
    .InlineShapes(1).ScaleWidth = 14
    .InlineShapes(1).ScaleHeight = 14
    .ParagraphFormat.Alignment = wdAlignParagraphCenter
    End With
    
    With ThisDocument.Sections(1).Footers(wdHeaderFooterPrimary).Range.Tables(1)
    .Range.Font.Name = "Times New Roman"
    .Range.Font.Size = 7
    
        '/right column width for the AABC logo
        .Columns(4).Width = 60
    
        '/merge all the top rows columns
        .Cell(1, 1).Merge .Cell(1, 2)
        .Cell(1, 1).Merge .Cell(1, 2)
        .Cell(1, 1).Merge .Cell(1, 2)
        '.Cell(1, 1).Merge .Cell(1, 2)
        
        .Cell(2, 1).Merge .Cell(2, 2)
        .Cell(2, 1).Merge .Cell(2, 2)
        .Cell(2, 1).Merge .Cell(2, 2)
        '.Cell(2, 1).Merge .Cell(2, 2)
        
        .Cell(3, 1).Merge .Cell(3, 2)
        .Cell(3, 1).Merge .Cell(3, 2)
        .Cell(3, 1).Merge .Cell(3, 2)
        '.Cell(3, 1).Merge .Cell(3, 2)
        
        .Cell(2, 1).Range.Font.Size = 10
        .Cell(2, 1).Range.Text = "We are dependent upon your help and co-operation in resolving these items as they may delay the completion of the test and balance analysis report.  We kindly request you to return this form to our office upon completion."
    
        '/insert the address block
        '.Rows(7).Range.Font.Color = wdColorGray125
        '.Rows(8).Range.Font.Color = wdColorGray125
        '.Rows(9).Range.Font.Color = wdColorGray125
        
        .Cell(4, 1).Range.Text = ""
        .Cell(5, 1).Range.Text = ""
        .Cell(6, 1).Range.Text = "Anaheim (Corporate Headquarters)"
        .Cell(7, 1).Range.Text = "4721 East Hunter Avenue"
        .Cell(8, 1).Range.Text = "Anaheim, CA  92807"
        .Cell(9, 1).Range.Text = "(714) 693-3700 / (714) 693-9509 fax"
        
        .Cell(4, 2).Range.Text = ""
        .Cell(5, 2).Range.Text = ""
        .Cell(6, 2).Range.Text = "Las Vegas"
        .Cell(7, 2).Range.Text = "5415 Cameron St., Suite 104"
        .Cell(8, 2).Range.Text = "Las Vegas, NV  89118"
        .Cell(9, 2).Range.Text = "(702) 255-7331 / (702) 294-1306 fax"
        
        .Cell(4, 3).Range.Text = ""
        .Cell(5, 3).Range.Text = ""
        .Cell(6, 3).Range.Text = "San Diego"
        .Cell(7, 3).Range.Text = "13144 Tawny Way"
        .Cell(8, 3).Range.Text = "Poway, CA  92064"
        .Cell(9, 3).Range.Text = "(760) 737-0190 / (760) 737-0965 fax"
        
        '.Cell(4, 4).Range.Text = ""
        '.Cell(5, 4).Range.Text = ""
        '.Cell(6, 4).Range.Text = ""
        '.Cell(7, 4).Range.Text = ""
        '.Cell(8, 4).Range.Text = ""
        '.Cell(9, 4).Range.Text = ""
    
        '/merge all the right columns rows, this column holds the AABC logo
        .Cell(4, 4).Merge .Cell(5, 4)
        .Cell(4, 4).Merge .Cell(6, 4)
        .Cell(4, 4).Merge .Cell(7, 4)
        .Cell(4, 4).Merge .Cell(8, 4)
        .Cell(4, 4).Merge .Cell(9, 4)
        '/add the AABC logo
        .Cell(4, 4).VerticalAlignment = wdCellAlignVerticalBottom
        .Cell(4, 4).Range.InlineShapes.AddPicture "J:\images\aabc_member.jpg"
        .Cell(4, 4).Range.InlineShapes(1).Width = 40
        .Cell(4, 4).Range.InlineShapes(1).Height = 40
        .Cell(4, 4).Range.ParagraphFormat.Alignment = wdAlignParagraphCenter
        
        '/set table properties
        .PreferredWidthType = wdPreferredWidthPercent
        .PreferredWidth = 100
        
        .Borders(wdBorderBottom).Visible = False
        .Borders(wdBorderDiagonalDown).Visible = False
        .Borders(wdBorderDiagonalUp).Visible = False
        .Borders(wdBorderHorizontal).Visible = False
        .Borders(wdBorderLeft).Visible = False
        .Borders(wdBorderRight).Visible = False
        .Borders(wdBorderTop).Visible = False
        .Borders(wdBorderVertical).Visible = False
    
    End With
    
        '/add top picture and text block
        'ThisDocument.Tables(1).Cell(1, 1).Range.InlineShapes.AddPicture "G:\Shared\LETTERHEAD\pdr_header.jpg"
        'ThisDocument.Tables(1).Cell(1, 1).Range.InlineShapes(1).Width = 40
        'ThisDocument.Tables(1).Cell(1, 1).Range.InlineShapes(1).Height = 60
        ThisDocument.Tables(1).Cell(startRow + 8, 1).Range.Text = "During the process of testing and balancing on this project we have noted errors, deficiencies, or issues which need to be rectified prior to the completion of our work.  We request that the responsible party address these issues and contact our office upon completion.  The issues are as follows:"
    
    ThisDocument.PageSetup.FooterDistance = 0
    ThisDocument.PageSetup.HeaderDistance = 20
    
    End If

End Sub

Private Sub cmdBefore_Click()

    'add the row below the current row
    ThisDocument.Tables(3).Rows.Add ThisDocument.Tables(3).Rows(curItem + 1)
    
    'curItem = curItem - 1
    'lblItem.Caption = curItem
    'ThisDocument.Tables(2).Cell(1 + curItem, 4).Range.InsertParagraphAfter
    'ThisDocument.Tables(2).Cell(1 + curItem, 4).Range.InsertParagraphAfter
    'ThisDocument.Tables(2).Cell(1 + curItem, 4).Range.InsertParagraphAfter
    
    'renumber the row item#'s
    Dim i
    For i = 2 To ThisDocument.Tables(3).Rows.Count
        ThisDocument.Tables(3).Cell(i, 1).Range.Text = i - 1
    Next i
    'TableToControl
    GetItem
End Sub

Private Sub cmdInsert_Click()
Dim tmpCurItem As Integer
    
    'add a temporary row to allow for adding below last row
    ThisDocument.Tables(3).Rows.Add
    'add the row below the current row
    ThisDocument.Tables(3).Rows.Add ThisDocument.Tables(3).Rows(curItem + 2)
    'delete tmp row
    ThisDocument.Tables(3).Rows(ThisDocument.Tables(3).Rows.Count).Delete
    
    curItem = curItem + 1
    lblItem.Caption = curItem
    
    'renumber the row item#'s
    Dim i
    For i = 2 To ThisDocument.Tables(3).Rows.Count
        ThisDocument.Tables(3).Cell(i, 1).Range.Text = i - 1
    Next i
    'TableToControl
    GetItem
    
    'txtSystem.Text = ""
    'txtUnit.Text = ""
    'cboCategory.ListIndex = 0
    'cboCategory.Text = ""
    'cboComment.ListIndex = 0
    'cboComment.Text = ""
    
End Sub

Private Sub cmdDelete_Click()
'/the first row cannot be deleted
If curItem > 1 Then
    'delete the row
    ThisDocument.Tables(3).Rows(curItem + 1).Delete
    '
    curItem = curItem - 1
    lblItem.Caption = curItem
    'renumber the row item#'s
    Dim i
    For i = 2 To ThisDocument.Tables(3).Rows.Count
        ThisDocument.Tables(3).Cell(i, 1).Range.Text = i - 1
    Next i
    'TableToControl
    GetItem
    
    curItem = ThisDocument.Tables(3).Rows.Count - 1
    lblItem.Caption = curItem
    'TableToControl
    GetItem
'/if the first row tries to delete, clear the fields instead
ElseIf curItem = 0 Then
    
End If
End Sub

Private Sub cmdNext_Click()
'/go to the next item if it exists
If curItem < ThisDocument.Tables(3).Rows.Count - 1 Then
    'this next item already existed
    curItem = curItem + 1
    lblItem.Caption = curItem
    If curItem = ThisDocument.Tables(3).Rows.Count - 1 Then cmdNext.Caption = ">"
    GetItem
'/create a new next item
ElseIf curItem = ThisDocument.Tables(3).Rows.Count - 1 Then
    'the next item doesn't exist, make new row in table
    curItem = curItem + 1
    lblItem.Caption = curItem
    ThisDocument.Tables(3).Rows.Add
    txtSystem.Text = ""
    txtUnit.Text = ""
    cboCategory.ListIndex = 0
    cboCategory.Text = ""
    cboComment.ListIndex = 0
    cboComment.Text = ""
    txtReason.Text = ""
    txtSolution.Text = ""
    'chkPicture.Value = 0
End If
UpdateItem
End Sub

Private Sub cmdPrev_Click()
'/go to the previous item if it exists
If curItem > 1 Then
    curItem = curItem - 1
    lblItem.Caption = curItem
    GetItem
End If
cmdNext.Caption = ">"
UpdateItem
End Sub

'================================================================
' FORM / DOCUMENT LINKED UPDATE METHODS
'================================================================

Private Sub UpdateTable(Optional Num As Long)
    'sends info from the input form to the table
    ThisDocument.Tables(3).Cell(1 + curItem, 1).Range.Text = curItem
    ThisDocument.Tables(3).Cell(1 + curItem, 2).Range.Text = txtSystem.Text
    ThisDocument.Tables(3).Cell(1 + curItem, 3).Range.Text = txtUnit.Text
    iProblem(curItem) = cboCategory.Text
    iPicture(curItem) = chkPicture.Value
    ThisDocument.Tables(3).Cell(1 + curItem, 4).Range.Text = cboComment.Text & " | " & txtReason.Text & " | " & txtSolution.Text
End Sub

Private Sub TableToControl()

    Dim tmpItem As String
    Dim tmpSystem As String
    Dim tmpUnit As String
    Dim tmpProblem As String
    Dim tmpComment As String
    Dim tmpReason As String
    Dim tmpSolution As String
    Dim tmpPicture As Byte
    Dim spl() As String
    
    ' set cell text to temp string for easier string operations
    tmpItem = ThisDocument.Tables(3).Cell(1 + curItem, 1).Range.Text
    tmpSystem = ThisDocument.Tables(3).Cell(1 + curItem, 2).Range.Text
    tmpUnit = ThisDocument.Tables(3).Cell(1 + curItem, 3).Range.Text
    tmpProblem = iProblem(curItem)
    tmpPicture = iPicture(curItem)
    spl = Split(ThisDocument.Tables(3).Cell(1 + curItem, 4).Range.Text, " | ")
    tmpComment = spl(0) 'ThisDocument.Tables(2).Cell(1 + curItem, 4).Range.Text
    tmpReason = spl(1)
    tmpSolution = spl(2)
    
    ' cut the formatting off the end of the cell text and fill the fields with info from the table
    lblItem.Caption = Mid(tmpItem, 1, Len(tmpItem) - 2)
    txtSystem.Text = Mid(tmpSystem, 1, Len(tmpSystem) - 2)
    txtUnit.Text = Mid(tmpUnit, 1, Len(tmpUnit) - 2)
    cboComment.Text = tmpComment
    txtReason.Text = tmpReason
    chkPicture.Value = tmpPicture
    
    ' fill the rest of the fields
    If tmpProblem <> "" Then
        cboCategory.Text = tmpProblem
    End If
    
    ' cut the formatting off the end of the cell text and fill the fields with info from the table
    If tmpSolution <> "" Then
        txtSolution.Text = Mid(tmpSolution, 1, Len(tmpSolution) - 2)
    End If

End Sub

Private Sub UpdateBlock(Row As Long, Column As Long, Text As String)
    ThisDocument.Tables(2).Cell(Row, Column).Range.Text = Text
End Sub

Private Sub UpdateProp(argIndex As Integer, argText As String)
    If ThisDocument.ContentControls(argIndex).LockContents = True Then Exit Sub
    ThisDocument.ContentControls(argIndex).Range.Text = argText
End Sub

Private Sub GetBlock(Obj As Object, Row As Long, Column As Long)
    Dim tmpProject As String
    tmpProject = ThisDocument.Tables(2).Cell(Row, Column).Range.Text
    Obj.Text = Mid(tmpProject, 1, Len(tmpProject) - 2)
End Sub

Private Sub GetProp(Obj As Object, Index As Integer)
    If ThisDocument.ContentControls(Index).ShowingPlaceholderText = True Then
        Obj.Text = ""
    Else
        Obj.Text = ThisDocument.ContentControls(Index).Range.Text
    End If
End Sub

Private Sub UpdateTable2()
    ThisDocument.Tables(3).Cell(1 + curItem, 1).Range.Text = curItem
    ThisDocument.Tables(3).Cell(1 + curItem, 2).Range.Text = DataFields(curItem).System
    If DataFields(curItem).IssueOld = "" Then
        ThisDocument.Tables(3).Cell(1 + curItem, 4).Range.Text = DataFields(curItem).Issue
        ThisDocument.Tables(3).Cell(1 + curItem, 4).Range.InsertParagraphAfter
        ThisDocument.Tables(3).Cell(1 + curItem, 4).Range.InsertParagraphAfter
        ThisDocument.Tables(3).Cell(1 + curItem, 4).Range.InsertParagraphAfter
    Else
        With ThisDocument.Tables(3).Cell(1 + curItem, 4).Range.Find
            .Execute DataFields(curItem).IssueOld, , , , , , , , , DataFields(curItem).Issue
        End With
    End If
End Sub

Sub UpdateItem()
    ThisDocument.Tables(3).Cell(1 + curItem, 1).Range.Text = curItem
End Sub

Sub UpdateSystem()
    ThisDocument.Tables(3).Cell(1 + curItem, 2).Range.Text = DataFields(curItem).System
End Sub

Sub UpdateUnit()
    ThisDocument.Tables(3).Cell(1 + curItem, 3).Range.Text = DataFields(curItem).Unit
End Sub

Private Sub GetItem()
    Dim str As String
    Dim pics As Long
    Dim pars As Long
    Dim le As Long
    '/get the current item
    lblItem.Caption = curItem
    '/get the system text
    str = ThisDocument.Tables(3).Cell(1 + curItem, 2).Range.Text
    txtSystem.Text = Mid(str, 1, Len(str) - 2)
    '/get the unit text
    str = ThisDocument.Tables(3).Cell(1 + curItem, 3).Range.Text
    txtUnit.Text = Mid(str, 1, Len(str) - 2)
    '/get the issue text
    pics = ThisDocument.Tables(3).Cell(1 + curItem, 4).Range.InlineShapes.Count
    pars = ThisDocument.Tables(3).Cell(1 + curItem, 4).Range.Paragraphs.Count - 1
    str = ThisDocument.Tables(3).Cell(1 + curItem, 4).Range.Text
    cboComment.Text = Mid(str, 1, Len(str) - 2 - pics - pars - (pics * Len(picSpacer)))
    'cboComment.Text = Mid(ThisDocument.Tables(2).Cell(1 + curItem, 4).Range.Paragraphs(1).Range.Text, 1, Len(ThisDocument.Tables(2).Cell(1 + curItem, 4).Range) - 2)
    'le = InStr(1, ThisDocument.Tables(2).Cell(1 + curItem, 4).Range, vbCr)
    'cboComment.Text = Mid(str, 1, le - 1)
End Sub

Private Sub cboComment_change()
    Dim pics As Long
    Dim pars As Long
    Dim str As String
    '/set the OldIssue
    pics = ThisDocument.Tables(3).Cell(1 + curItem, 4).Range.InlineShapes.Count
    pars = ThisDocument.Tables(3).Cell(1 + curItem, 4).Range.Paragraphs.Count - 1
    str = ThisDocument.Tables(3).Cell(1 + curItem, 4).Range.Text
    OldIssue = Mid(str, 1, Len(str) - 2 - pics - pars - (pics * Len(picSpacer)))
    '/set the NewIssue
    NewIssue = cboComment.Text
    '/update the issue in the table
    UpdateIssue
End Sub

Sub UpdateIssue()
    '/update the issue text in the form
    If OldIssue = "" Then
        ThisDocument.Tables(3).Cell(1 + curItem, 4).Range.Text = cboComment.Text
    Else
        '/replace the oldissue with the newissue
        'With ThisDocument.Tables(2).Cell(1 + curItem, 4).Range.Find
        '    .Execute OldIssue, True, , , , , , , , NewIssue
        'End With
        ThisDocument.Tables(3).Cell(1 + curItem, 4).Range.Paragraphs(1).Range.Delete
        If ThisDocument.Tables(3).Cell(1 + curItem, 4).Range.InlineShapes.Count > 0 Then
        ThisDocument.Tables(3).Cell(1 + curItem, 4).Range.InsertBefore NewIssue & vbNewLine
        Else
        ThisDocument.Tables(3).Cell(1 + curItem, 4).Range.InsertBefore NewIssue
        End If
    End If
End Sub

'================================================================
' IMAGE HANDLING
'================================================================

Sub ResizeImages()
    Dim shp As InlineShape
    Dim aspect As Single
    For Each shp In ThisDocument.Tables(3).Cell(1 + curItem, 4).Range.InlineShapes
        aspect = shp.Height / shp.Width
        shp.Width = 212
        'shp.Height = shp.Width * aspect
        shp.Height = 159
    Next
End Sub

Private Sub Delete1_Click()
    'Dim shp As InlineShape
    'Dim c As Long
    'For Each shp In ThisDocument.Tables(2).Cell(1 + curItem, 4).Range.InlineShapes
    '    shp.Delete
    'Next
    'Dim par As Paragraph
    'For Each par In ThisDocument.Tables(2).Cell(1 + curItem, 4).Range.Paragraphs
    '    c = c + 1
    'Next
    'ThisDocument.Tables(2).Cell(1 + curItem, 4).Range.Text = Mid(ThisDocument.Tables(2).Cell(1 + curItem, 4).Range.Text, 1, Len(ThisDocument.Tables(2).Cell(1 + curItem, 4).Range.Text) - c - 1)
    ThisDocument.Tables(3).Cell(1 + curItem, 4).Range.Text = cboComment.Text
End Sub

Private Sub Image1_Click()
    Dim rng As Range
    Dim ic As Integer 'image count
    '/if there is a comment, allow an image to be inserted
    If cboComment.Text <> "" Then
        '/required to handle dialog cancel button
        'On Error Resume Next
        '/show the dialog
        'dlg.ShowOpen
        '/exit since the user clicked the cancel button
        'If Err Then Exit Sub
        '/remember the issue before it's changed
        DataFields(curItem).IssueOld = cboComment.Text
        '/if an image was selected in the dialog, insert it
        If dlg.Show = -1 Then
            Dim filename As String
            filename = dlg.SelectedItems(1)
            '/set the range
            Set rng = ThisDocument.Tables(3).Cell(1 + curItem, 4).Range
            '/get the image count
            ic = ThisDocument.Tables(3).Cell(1 + curItem, 4).Range.InlineShapes.Count
            '/prepare to add the image by deleting the existing one if it exists
            Select Case ic
                Case 0 'GOOD
                ThisDocument.Tables(3).Cell(1 + curItem, 4).Range.InsertParagraphAfter
                rng.Start = rng.End - 1
                rng.InsertAfter picSpacer
                Case 1 'GOOD
                ThisDocument.Tables(3).Cell(1 + curItem, 4).Range.InlineShapes(1).Delete
                'rng.Start = rng.End - 1
                rng.Start = rng.End - 1 - (Len(picSpacer) * 1)
                Case 2 'GOOD
                ThisDocument.Tables(3).Cell(1 + curItem, 4).Range.InlineShapes(1).Delete
                rng.Start = rng.End - 2 - (Len(picSpacer) * 2)
                Case 3 'GOOD
                ThisDocument.Tables(3).Cell(1 + curItem, 4).Range.InlineShapes(1).Delete
                rng.Start = rng.End - 5 - (Len(picSpacer) * 3)
                Case 4 'GOOD
                ThisDocument.Tables(3).Cell(1 + curItem, 4).Range.InlineShapes(1).Delete
                rng.Start = rng.End - 6 - (Len(picSpacer) * 4)
            End Select
            '/add the image
            ThisDocument.Tables(3).Cell(1 + curItem, 4).Range.InlineShapes.AddPicture filename, , , rng
            '/resize the images
            ResizeImages
            '/redraw the document
            Me.Repaint
            'UpdateTable2
        End If
    Else
        '/the comment is blank, don't do anything
        Beep
    End If
End Sub

Private Sub Image2_Click()
    Dim rng As Range
    Dim ic As Integer
    If ThisDocument.Tables(3).Cell(1 + curItem, 4).Range.InlineShapes.Count >= 1 Then
        'On Error Resume Next
        'dlg.ShowOpen
        'If Err Then Exit Sub
        DataFields(curItem).IssueOld = cboComment.Text
        If dlg.Show = -1 Then
            Dim filename As String
            filename = dlg.SelectedItems(1)
            Set rng = ThisDocument.Tables(3).Cell(1 + curItem, 4).Range
            ic = ThisDocument.Tables(3).Cell(1 + curItem, 4).Range.InlineShapes.Count
            Select Case ic
                Case 1 'GOOD
                rng.Start = rng.End - 1
                rng.InsertAfter picSpacer
                Case 2 'GOOD
                ThisDocument.Tables(3).Cell(1 + curItem, 4).Range.InlineShapes(2).Delete
                rng.Start = rng.End - 1 - (Len(picSpacer) * 1)
                Case 3 'GOOD
                ThisDocument.Tables(3).Cell(1 + curItem, 4).Range.InlineShapes(2).Delete
                rng.Start = rng.End - 4 - (Len(picSpacer) * 2)
                Case 4 'GOOD
                ThisDocument.Tables(3).Cell(1 + curItem, 4).Range.InlineShapes(2).Delete
                rng.Start = rng.End - 5 - (Len(picSpacer) * 3)
            End Select
            ThisDocument.Tables(3).Cell(1 + curItem, 4).Range.InlineShapes.AddPicture filename, , , rng
            ResizeImages
            Me.Repaint
            'UpdateTable2
        End If
    Else
        Beep
    End If
End Sub

Private Sub Image3_Click()
    Dim rng As Range
    Dim ic As Integer
    If ThisDocument.Tables(3).Cell(1 + curItem, 4).Range.InlineShapes.Count >= 2 Then
        'On Error Resume Next
        'dlg.ShowOpen
        'If Err Then Exit Sub
        DataFields(curItem).IssueOld = cboComment.Text
        If dlg.Show = -1 Then
            Dim filename As String
            filename = dlg.SelectedItems(1)
            Set rng = ThisDocument.Tables(3).Cell(1 + curItem, 4).Range
            ic = ThisDocument.Tables(3).Cell(1 + curItem, 4).Range.InlineShapes.Count
            Select Case ic
                Case 2 'GOOD
                ThisDocument.Tables(3).Cell(1 + curItem, 4).Range.InsertParagraphAfter
                ThisDocument.Tables(3).Cell(1 + curItem, 4).Range.InsertParagraphAfter
                rng.Start = rng.End - 1
                rng.InsertAfter picSpacer
                Case 3 'GOOD
                ThisDocument.Tables(3).Cell(1 + curItem, 4).Range.InlineShapes(3).Delete
                rng.Start = rng.End - 1 - (Len(picSpacer) * 1)
                Case 4 'GOOD
                ThisDocument.Tables(3).Cell(1 + curItem, 4).Range.InlineShapes(3).Delete
                rng.Start = rng.End - 2 - (Len(picSpacer) * 2)
            End Select
            ThisDocument.Tables(3).Cell(1 + curItem, 4).Range.InlineShapes.AddPicture filename, , , rng
            ResizeImages
            Me.Repaint
            'UpdateTable2
        End If
    Else
        Beep
    End If
End Sub

Private Sub Image4_Click()
    Dim rng As Range
    Dim ic As Integer
    If ThisDocument.Tables(3).Cell(1 + curItem, 4).Range.InlineShapes.Count >= 3 Then
        'On Error Resume Next
        'dlg.ShowOpen
        'If Err Then Exit Sub
        DataFields(curItem).IssueOld = cboComment.Text
        If dlg.Show = -1 Then
            Dim filename As String
            filename = dlg.SelectedItems(1)
            Set rng = ThisDocument.Tables(3).Cell(1 + curItem, 4).Range
            ic = ThisDocument.Tables(3).Cell(1 + curItem, 4).Range.InlineShapes.Count
            Select Case ic
                Case 3
                rng.Start = rng.End - 1
                rng.InsertAfter picSpacer
                Case 4
                ThisDocument.Tables(3).Cell(1 + curItem, 4).Range.InlineShapes(4).Delete
                rng.Start = rng.End - 1 - (Len(picSpacer) * 1)
            End Select
            ThisDocument.Tables(3).Cell(1 + curItem, 4).Range.InlineShapes.AddPicture filename, , , rng
            ResizeImages
            Me.Repaint
            'UpdateTable2
        End If
    Else
        Beep
    End If
End Sub


' InQuest injected base64 decoded content
' *':yr
' *':yr

INQUEST-PP=macro
