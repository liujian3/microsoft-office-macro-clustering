Attribute VB_Name = "Find"
Attribute VB_Base = "0{6CA133B0-627C-4BF7-849E-03C4909AA7B2}{EAFEF7ED-1C04-456C-8DF4-147EF7A590A0}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False




Private Sub CommandButton1_Click()
    Cells(3, 4) = ListBox1.Value
    Find.Hide
End Sub

Private Sub Label1_Click()

End Sub

Private Sub ListBox1_DblClick(ByVal Cancel As MSForms.ReturnBoolean)
    Cells(3, 4) = ListBox1.Value
    Find.Hide
End Sub

Private Sub TextBox1_Change()
    
    Dim arr2, arr
    Dim srow As Long
    Dim i As Long
    Dim j As Long
    Dim namec As String
    ListBox1.Clear
    With ThisWorkbook.Sheets("Rule")
        srow = .Cells(.Rows.Count, 1).End(xlUp).Row + 1
        arr = .[a2].Resize(srow, 1).Value
        ReDim arr2(0 To srow)
    End With
    namec = LCase(TextBox1.Value)
    j = 0
    For i = 1 To srow
        If LCase(arr(i, 1)) Like namec & "*" Then
            arr2(j) = arr(i, 1)
            j = j + 1
        End If
    Next
    If j > 0 Then
        For i = 0 To j - 1
            ListBox1.AddItem arr2(i)
        Next
    End If
End Sub

Private Sub UserForm_Initialize()
    '|fffd||fffd||2be||fffd||fffd||fffd||439||fffd||fffd||fffd|
    Dim srow As Long
    Dim arr
    Dim i As Long
    
    ListBox1.Clear
    With ThisWorkbook.Sheets("Rule")
        srow = .Cells(.Rows.Count, 1).End(xlUp).Row + 1
        arr = .[a2].Resize(srow, 1).Value
    End With
    For i = 1 To srow - 1
        ListBox1.AddItem arr(i, 1)
    Next
End Sub

Attribute VB_Name = "M_SUB"
Option Explicit
Public dicPC As Object

Sub Len_Sup(ByRef tar As Range)
    Dim inLen As Long, srow As Long, slen As Long, ilen As Long, strSwiftCode As String
    Dim tempLen, arr
    Dim inSup As Long
    Dim tempSup
    Dim bolLen As Boolean
    Dim i As Long
    Dim strCOnfig As String, istr As String
    Dim C As Range
    Dim strBankName As String, iField As String
    
    With ThisWorkbook.Sheets("config")
        For i = 31 To 60
            If .Cells(1, i).Value = tar.Address Then
                strCOnfig = .Cells(2, i).Value
                Exit For
            End If
        Next
        strBankName = Trim(.[q1].Value)
        strSwiftCode = "Swift Code"
        srow = .Cells(.Rows.Count, "BO").End(xlUp).Row
        arr = .[bo1].Resize(srow, 2).Value
    End With
    
    If Len(tar.Value) > 0 Then
       
        ''|3bb||fffd||fffd||fffd||fffd||fffd||fffd|
        inLen = InStr(1, strCOnfig, "[LEN]")
        If inLen > 0 Then
            bolLen = False
            If Mid(strCOnfig, inLen + 5, 1) <> "L" And Mid(strCOnfig, inLen + 5, 1) <> "S" And Mid(strCOnfig, inLen + 5, 1) <> "B" And Mid(strCOnfig, inLen + 5, 1) <> "N" Then
                tempLen = Split(Split(Right(strCOnfig, Len(strCOnfig) - inLen - 4), "_")(0), "\")
                For i = 0 To UBound(tempLen)
                    If Len(tar.Value) = CLng(tempLen(i)) Then
                        bolLen = True
                        Exit For
                    End If
                Next
            ElseIf Mid(strCOnfig, inLen + 5, 1) = "L" Then
                ilen = CLng(Split(Right(strCOnfig, Len(strCOnfig) - inLen - 6), "_")(0))
                If Len(tar.Value) <= ilen Then
                    bolLen = True
                End If
            ElseIf Mid(strCOnfig, inLen + 5, 1) = "S" Then
                istr = UCase(Split(Split(Right(strCOnfig, Len(strCOnfig) - inLen - 4), "_")(0), "\")(1))
                ilen = CLng(Split(Split(Right(strCOnfig, Len(strCOnfig) - inLen - 4), "_")(0), "\")(2))
                bolLen = True
                '|fffd||fffd|Bank name
                Set C = ThisWorkbook.Sheets("template").Columns("A").Find(strBankName, lookat:=xlPart, LookIn:=xlValues, MatchCase:=False)
                If Not C Is Nothing Then
                    If UCase(C.Offset(0, 1).Value) Like "*" & istr & "*" And Len(tar.Value) <> ilen Then
                        bolLen = False
                    End If
                End If
            ElseIf Mid(strCOnfig, inLen + 5, 1) = "B" Then
                istr = UCase(Split(Split(Right(strCOnfig, Len(strCOnfig) - inLen - 4), "_")(0), "\")(1))
                ilen = CLng(Split(Split(Right(strCOnfig, Len(strCOnfig) - inLen - 4), "_")(0), "\")(2))
                bolLen = True
                '|fffd||fffd|swift code
                Set C = ThisWorkbook.Sheets("template").Columns("A").Find(strSwiftCode, lookat:=xlPart, LookIn:=xlValues, MatchCase:=False)
                If Not C Is Nothing Then
                    If UCase(C.Offset(0, 1).Value) = istr And Len(tar.Value) <> ilen Then
                        bolLen = False
                    End If
                End If
            ElseIf Mid(strCOnfig, inLen + 5, 1) = "N" Then
                iField = UCase(Split(Split(Right(strCOnfig, Len(strCOnfig) - inLen - 4), "_")(0), "\")(1))
                istr = UCase(Split(Split(Right(strCOnfig, Len(strCOnfig) - inLen - 4), "_")(0), "\")(2))
                ilen = CLng(Split(Split(Right(strCOnfig, Len(strCOnfig) - inLen - 4), "_")(0), "\")(3))
                bolLen = True
                '|fffd||fffd||fffd||5b6||fffd||fffd||fffd|
                Set C = ThisWorkbook.Sheets("template").Columns("A").Find(iField, lookat:=xlPart, LookIn:=xlValues, MatchCase:=False)
                If Not C Is Nothing Then
                    If UCase(C.Offset(0, 1).Value) <> istr And Len(tar.Value) <> ilen Then
                        bolLen = False
                    End If
                End If
            End If
            If bolLen = False Then
                MsgBox "String length is incorrect"
                Exit Sub
            End If
        Else
            '|fffd||5bd||6b3||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
            istr = UCase(tar.Offset(0, -1).Value)
            istr = Split(istr, "(")(0)
            ilen = 0
            For i = 2 To srow
                If istr Like "*" & UCase(Trim(arr(i, 1))) & "*" Then
                    ilen = arr(i, 2)
                    Exit For
                End If
            Next
            If ilen > 0 Then
                slen = 0
                For i = 1 To Len(tar.Value)
                    istr = Mid(tar.Value, i, 1)
                    If Asc(istr) > 0 Then
                        slen = slen + 1
                    ElseIf Asc(istr) < -22542 Then
                        slen = slen + 2
                    Else
                        slen = slen + 3
                    End If
                Next
                If slen > ilen Then
                    MsgBox "String length is incorrect"
                    Exit Sub
                End If
            End If
        End If
          '8|3bb||fffd||fffd||fffd||fffd|11|3bb|
        inSup = InStr(1, strCOnfig, "[SUP]")
        If inSup > 0 Then
            tempSup = Split(Split(Right(strCOnfig, Len(strCOnfig) - inSup - 4), "_")(0), "\")
            'MsgBox strCOnfig
            If Len(tar.Value) < CLng(tempSup(0)) Then
                If tempSup(2) = "A" Then
                    tar.Value = WorksheetFunction.Rept(tempSup(1), (tempSup(0) - Len(tar.Value)) / Len(tempSup(1))) & tar.Value
                Else
                    tar.Value = tar.Value & WorksheetFunction.Rept(tempSup(1), tempSup(0) - Len(tar.Value))
                End If
            End If
        End If
    End If
    
End Sub
Sub UcaseNum(ByRef tar As Range) '|fffd||fffd||fffd||5bc||4f4||fffd||434||fffd||fffd||138|
    Dim inLen As Long
    Dim bolLen As Boolean
    Dim i As Long
    Dim istr As String, strCOnfig As String
   
    With ThisWorkbook.Sheets("config")
        For i = 31 To 60
            If .Cells(1, i).Value = tar.Address Then
                strCOnfig = .Cells(2, i).Value
                Exit For
            End If
        Next
    End With
     If Len(tar.Value) > 0 Then
        inLen = InStr(1, strCOnfig, "[UNUM]")
        bolLen = True
        If inLen > 0 Then
            tar.Value = UCase(tar.Value)
            For i = 1 To Len(tar.Value)
                istr = Mid(tar.Value, i, 1)
                If Asc(istr) < 48 Or (Asc(istr) > 57 And Asc(istr) < 65) Or Asc(istr) > 90 Then
                    bolLen = False
                    Exit For
                End If
            Next
            If bolLen = False Then
                MsgBox "Only Letter or number allowed"
                Exit Sub
            End If
        End If
    End If
End Sub
Sub Cut_Cha(ByRef tar As Range)
    Dim i As Long
    Dim strCOnfig As String
    Dim ilen As Long
    Dim inCut0 As Long
    Dim inCut As Long
    Dim tempCut
    Dim j As Long
    Dim strFML As String
    Dim strBankName As String
    Dim C As Range
    Dim BOL As Boolean
    
    With ThisWorkbook.Sheets("config")
        For i = 31 To 60  '|fffd||fffd||221||fffd||fffd||fffd||fffd|
            If .Cells(1, i).Value = tar.Address Then
                strCOnfig = .Cells(2, i).Value
            End If
        Next
        strBankName = Trim(.[q1].Value)
        inCut0 = InStr(1, strCOnfig, "[CUT0]")
        If inCut0 > 0 Then
            '|fffd||4b5||fffd||fffd||fffd||4aa||fffd||fffd||fffd||fffd||fffd||fffd||5b7||fffd||fffd||fffd||fffd||43d||fffd||221||fffd||5b7||fffd||fffd||fffd||fffd||135||fffd||52a||fffd||fffd||3bb||fffd||fffd|
            ilen = Len(tar.Value)
            '|fffd||fffd||fffd||fffd||5b7||fffd||fffd||fffd||fffd||fffd||fffd||232||fffd||fffd||523||fffd||fffd||fffd||fffd||fffd||221|
            BOL = True
            inCut = InStr(1, strCOnfig, "[LEN]")
            If inCut > 0 Then
                tempCut = Split(Split(Right(strCOnfig, Len(strCOnfig) - inCut - 4), "_")(0), "\")
                BOL = False
                For j = 0 To UBound(tempCut)
                    If ilen = tempCut(j) Then
                        BOL = True
                        Exit For
                    End If
                Next
            End If
            If BOL Then
            For i = 31 To 60
                inCut = InStr(1, .Cells(2, i).Value, "[CUT]")  '|fffd||4b5||fffd||fffd||fffd|CUT|fffd||fffd||1f5||135||fffd||52a||fffd||fffd|
                If inCut > 0 Then
                    ThisWorkbook.Sheets("template").Unprotect "123"
                    If ilen = 0 Then
                        ThisWorkbook.Sheets("Template").Range(.Cells(1, i).Value).Value = ""  '|fffd||fffd||fffd||fffd||fffd||fffd||fffd||221||fffd||fffd||fffd||1ff||570||5e3||fffd||fffd||fffd||221||fffd||fffd||4b2||fffd||1ff||570||fffd|
                    Else
                        tempCut = Split(Split(Right(.Cells(2, i).Value, Len(.Cells(2, i).Value) - inCut - 4), "_")(0), "\")  '|fffd||fffd||fffd||fffd||fffd||fffd||fffd||221||fffd||fffd||fffd||1ff||570||5e3||fffd||fffd||fffd||221||fffd||fffd||4b2||fffd||1ff||570||fffd|
                        'MsgBox Right(.Cells(2, i).Value, Len(.Cells(2, i).Value) - inCut - 4)
                        If UBound(tempCut) = 1 Then
                            ThisWorkbook.Sheets("Template").Range(.Cells(1, i).Value).Value = Mid(tar.Value, tempCut(0), tempCut(1))
                            Call Len_Sup(ThisWorkbook.Sheets("Template").Range(.Cells(1, i).Value))
                        Else
                            For j = 1 To UBound(tempCut) Step 2
                                strFML = strFML & "," & Mid(tar.Value, tempCut(j), tempCut(j + 1))
                            Next
                            ThisWorkbook.Sheets("Template").Range(.Cells(1, i).Value).Validation.Delete
                            ThisWorkbook.Sheets("Template").Range(.Cells(1, i).Value).Validation.Add Type:=xlValidateList, AlertStyle:=xlValidAlertStop, Operator:=xlBetween, Formula1:=strFML
                            '|fffd||4b5||fffd|Bank Name,|fffd||436||fffd||fffd||fffd||221||fffd||138||fffd||5b5|
                            Set C = ThisWorkbook.Sheets("template").Columns("A").Find(strBankName, lookat:=xlPart, LookIn:=xlValues, MatchCase:=False)
                            If Not C Is Nothing Then
                                If UCase(C.Offset(0, 1).Value) Like "*" & UCase(tempCut(0)) & "*" Then
                                    ThisWorkbook.Sheets("Template").Range(.Cells(1, i).Value).Value = Split(strFML, ",")(1)
                                    Call Len_Sup(ThisWorkbook.Sheets("Template").Range(.Cells(1, i).Value))
                                Else
                                    ThisWorkbook.Sheets("Template").Range(.Cells(1, i).Value).Value = Split(strFML, ",")(2)
                                    Call Len_Sup(ThisWorkbook.Sheets("Template").Range(.Cells(1, i).Value))
                                End If
                            End If
                        End If
                    End If
                    ThisWorkbook.Sheets("template").Protect Password:=123, DrawingObjects:=False, Contents:=True, Scenarios:= _
                        False, AllowFormattingCells:=True, AllowFormattingColumns:=True, _
                        AllowFormattingRows:=True, AllowInsertingHyperlinks:=True, AllowSorting:= _
                        True, AllowFiltering:=True, AllowUsingPivotTables:=True
                End If
            Next
            End If
        End If
    End With
End Sub
Sub ProCity(ByRef tar As Range)
    Dim ikey As String
    Dim i As Long
    Dim srow As Long
    Dim inPC As Long
    Dim inPC0 As Long
    Dim strPC As String
    Dim strCOnfig As String
    If Len(tar.Value) > 0 Then
        With ThisWorkbook.Sheets("config")
            For i = 31 To 60  '|fffd||fffd||221||fffd||fffd||fffd||fffd|
                If .Cells(1, i).Value = tar.Address Then
                    strCOnfig = .Cells(2, i).Value
                End If
            Next
            inPC0 = InStr(1, strCOnfig, "[PC0]")
            If inPC0 > 0 Then
                ikey = Trim(UCase(tar.Value))
                If dicPC Is Nothing Then
                    Set dicPC = CreateObject("scripting.dictionary")
                    srow = .Cells(.Rows.Count, "BR").End(xlUp).Row
                    For i = 2 To srow
                        ikey = Trim(UCase(.Cells(i, "BR").Value))
                        dicPC(ikey) = .Cells(i, "BS").Value & "{" & .Cells(i, "BT").Value
                    Next
                End If
                If dicPC.exists(ikey) Then
                    For i = 31 To 60
                        inPC = InStr(1, .Cells(2, i).Value, "[PC]")  '|fffd||4b5||fffd||fffd||fffd|PC|fffd||fffd||1f5||135||fffd||52a||fffd||fffd|
                        If inPC > 0 Then
                            strPC = Mid(.Cells(2, i).Value, inPC + 4, 1)
                            If strPC = "P" Then
                                ThisWorkbook.Sheets("Template").Range(.Cells(1, i).Value).Value = Split(dicPC(ikey), "{")(1)
                            Else
                                ThisWorkbook.Sheets("Template").Range(.Cells(1, i).Value).Value = Split(dicPC(ikey), "{")(0)
                            End If
                        End If
                    Next
                End If
            End If
        End With
    End If
End Sub
Sub SamValue(ByRef tar As Range)
    Dim i As Long
    Dim strCOnfig As String
    Dim inSam As Long
    Dim j As Long
    Dim strSam As String
    
    With ThisWorkbook.Sheets("config")
        For i = 31 To 60
            If .Cells(1, i).Value = tar.Address Then
                strCOnfig = .Cells(2, i).Value
                Exit For
            End If
        Next
    
        inSam = InStr(1, strCOnfig, "[SAM]")
        If inSam > 0 Then
            '|fffd||4b5||fffd||fffd||fffd||235||135||fffd||52a||fffd||fffd||3bb||fffd||fffd|
            strSam = Split(Right(strCOnfig, Len(strCOnfig) - inSam - 4), "_")(0)
            For i = 31 To 60
                If InStr(1, .Cells(2, i).Value, "[SAM]" & strSam) > 0 Then
                    ThisWorkbook.Sheets("Template").Range(.Cells(1, i).Value).Value = tar.Value
                    '|3bb||fffd||fffd||fffd||fffd||fffd||fffd|
                    Call Len_Sup(ThisWorkbook.Sheets("Template").Range(.Cells(1, i).Value))
                    '|fffd||5b7||fffd||fffd||fffd||221|
                    Call Cut_Cha(ThisWorkbook.Sheets("Template").Range(.Cells(1, i).Value))
                    '|fffd||fffd||5b5||fffd||fffd||fffd||fffd|
                    Call NumOnly(ThisWorkbook.Sheets("Template").Range(.Cells(1, i).Value))
                End If
            Next
        Else
            inSam = InStr(1, strCOnfig, "[SAMAS]")
            If inSam > 0 Then
                strSam = Split(Right(strCOnfig, Len(strCOnfig) - inSam - 6), "_")(0)
                If strSam = "0" Then
                    If tar.Value <> "" Then
                        For i = 31 To 60
                            If InStr(1, .Cells(2, i).Value, "[SAMAS]1") > 0 Then
                                ThisWorkbook.Sheets("Template").Range(.Cells(1, i).Value).Value = tar.Value
                            End If
                        Next
                    End If
                Else
                    For i = 31 To 60
                        If InStr(1, .Cells(2, i).Value, "[SAMAS]0") > 0 Then
                            If ThisWorkbook.Sheets("Template").Range(.Cells(1, i).Value).Value <> "" Then
                                If ThisWorkbook.Sheets("Template").Range(.Cells(1, i).Value).Value <> tar.Value Then
                                    MsgBox "Should be the same with " & ThisWorkbook.Sheets("Template").Range(.Cells(1, i).Value).Offset(0, -1).Value
                                    tar.Value = ThisWorkbook.Sheets("Template").Range(.Cells(1, i).Value).Value
                                End If
                            End If
                            Exit For
                        End If
                    Next
                End If
            End If
        End If
    End With
End Sub
Sub Suppli_AccountN(ByRef tar As Range)
    Dim C As Range
    With tar.Parent
        If tar.Offset(0, -1).Value Like "Supplier Name*" Then
            Set C = .Columns("a").Find("Account Name", LookIn:=xlValues, lookat:=xlPart, MatchCase:=False)
            If Not C Is Nothing Then
                C.Offset(0, 1).Value = tar.Value
                'C.EntireRow.AutoFit
            End If
        End If
    End With
End Sub
Sub ChangeToC(ByRef tar As Range)
    Dim i As Long
    Dim strCOnfig As String
    Dim inSam As Long
    Dim strSam As String
    Dim rng As Range
    
    With ThisWorkbook.Sheets("config")
        For i = 31 To 60
            If .Cells(1, i).Value = tar.Address Then
                strCOnfig = .Cells(2, i).Value
                
                Exit For
            End If
        Next
    
        inSam = InStr(1, strCOnfig, "[CH0]")
        If inSam > 0 Then
            ThisWorkbook.Sheets("template").Unprotect "123"
            '|fffd||4b5||fffd||fffd||fffd||4aa||fffd||fffd||fffd||fffd||fffd||fffd||5b7||fffd||fffd||fffd||fffd||43d||fffd||221||fffd||5b7||fffd||fffd||fffd||fffd||135||fffd||52a||fffd||fffd||3bb||fffd||fffd|
            strSam = Split(Right(strCOnfig, Len(strCOnfig) - inSam - 4), "_")(0)
            If UCase(tar.Value) = UCase(strSam) Then
                For i = 31 To 60
                    If InStr(1, .Cells(2, i).Value, "[CH]") > 0 Then
                        '|fffd||133||271||fffd||fffd||fffd||fffd||fffd|
                       Set rng = ThisWorkbook.Sheets("Template").Range(.Cells(1, i).Value)
                       If Left(rng.Offset(0, -1).Value, 1) <> "*" Then
                            Call ComporaryToInput(ThisWorkbook.Sheets("Template"), "[C]", rng.Offset(0, -1).Value, rng.Row)
                            .Cells(2, i).Value = .Cells(2, i).Value & "_[C]"
                       End If
                    End If
                Next
                 '|fffd||133||277||1f1||fffd||fffd||fffd||fffd||fffd|
                For i = 31 To 60
                    If InStr(1, .Cells(2, i).Value, "[CH1]") > 0 Then
                       Set rng = ThisWorkbook.Sheets("Template").Range(.Cells(1, i).Value).Offset(0, -1)
                        If Left(rng.Value, 1) = "*" Then
                            rng.Value = Right(rng.Value, Len(rng.Value) - 1)
                            rng.Font.Color = RGB(0, 0, 0)
                            .Cells(2, i).Value = Replace(.Cells(2, i).Value, "[C]", "")
                        End If
                    End If
                Next
            Else
                For i = 31 To 60
                    If InStr(1, .Cells(2, i).Value, "[CH]") > 0 Then
                        '|fffd||133||277||1f1||fffd||fffd||fffd||fffd||fffd|
                        Set rng = ThisWorkbook.Sheets("Template").Range(.Cells(1, i).Value).Offset(0, -1)
                        If Left(rng.Value, 1) = "*" Then
                            rng.Value = Right(rng.Value, Len(rng.Value) - 1)
                            rng.Font.Color = RGB(0, 0, 0)
                            .Cells(2, i).Value = Replace(.Cells(2, i).Value, "[C]", "")
                        End If
                    End If
                Next
                For i = 31 To 60
                    If InStr(1, .Cells(2, i).Value, "[CH1]") > 0 Then
                        '|fffd||133||271||fffd||fffd||fffd||fffd||fffd|
                       Set rng = ThisWorkbook.Sheets("Template").Range(.Cells(1, i).Value)
                       If Left(rng.Offset(0, -1).Value, 1) <> "*" Then
                            Call ComporaryToInput(ThisWorkbook.Sheets("Template"), "[C]", rng.Offset(0, -1).Value, rng.Row)
                            .Cells(2, i).Value = .Cells(2, i).Value & "_[C]"
                       End If
                    End If
                Next
            End If
            ThisWorkbook.Sheets("template").Protect Password:=123, DrawingObjects:=False, Contents:=True, Scenarios:= _
                        False, AllowFormattingCells:=True, AllowFormattingColumns:=True, _
                        AllowFormattingRows:=True, AllowInsertingHyperlinks:=True, AllowSorting:= _
                        True, AllowFiltering:=True, AllowUsingPivotTables:=True
        End If
    End With
End Sub
'|fffd||fffd||fffd||fffd||fffd||fffd||131||fffd||fffd||fffd|
Sub ComporaryToInput(ByRef sht As Worksheet, ByRef istr, ByRef istr2, ByRef irow)

Dim iC As Long
Dim inD As Long
Dim strD As String
Dim ilen As Long
Dim istart As Long
With sht
    iC = InStr(1, istr, "[C]")
    If iC > 0 Then
        .Cells(irow, 1).Value = "*" & .Cells(irow, 1).Value
    End If
    '|fffd||1f7||fffd||fffd||fffd||2f5||fffd||fffd|
    inD = InStr(1, istr, "[D]")
    If inD > 0 Then
        strD = Split(Right(istr, Len(istr) - inD - 2), "_")(0)
        ilen = Len(.Cells(irow, 1).Value)
        .Cells(irow, 1).Value = .Cells(irow, 1).Value & strD
    End If
    
    If iC > 0 Then
        With .Cells(irow, 1).Characters(Start:=1, Length:=1).Font
            .ColorIndex = 3
            .Bold = True
        End With
        istart = 2
    Else
        istart = 1
    End If
    With .Cells(irow, 1).Characters(Start:=istart, Length:=Len(istr2) + 1).Font
        .Bold = True
    End With
    If inD > 0 Then
        With .Cells(irow, 1).Characters(Start:=ilen + 1, Length:=Len(strD)).Font
            .Size = 10
            .Bold = False
        End With
    End If
End With
End Sub
Sub NumOnly(ByRef tar As Range)
    Dim i As Long
    Dim inNum As Long
    Dim strCOnfig As String
    
    With ThisWorkbook.Sheets("config")
        For i = 31 To 60
            If .Cells(1, i).Value = tar.Address Then
                strCOnfig = .Cells(2, i).Value
            End If
        Next
    End With
    If Len(tar.Value) > 0 Then
        inNum = InStr(1, strCOnfig, "[NUM]")
        If inNum > 0 Then
            If Not IsNumeric(tar.Value) Then
                MsgBox "Nonnumeric is not allowed"
                tar.Value = ""
                tar.Select
            End If
        End If
    End If
End Sub
Sub EmailRule(ByRef tar As Range)
    Dim i As Long
    Dim inNum As Long
    Dim strCOnfig As String
    
    With ThisWorkbook.Sheets("config")
        For i = 31 To 60
            If Trim(UCase(.Cells(1, i).Value)) = tar.Address Then
                strCOnfig = .Cells(2, i).Value
            End If
        Next
    End With
    If Len(tar.Value) > 0 Then
        inNum = InStr(1, strCOnfig, "[EMAIL]")
        If inNum > 0 Then
            If Not tar.Value Like "*@*" Then
                MsgBox "Email address is incorrect."
                tar.Select
            End If
        End If
    End If
End Sub
Sub BeUcase(ByRef tar As Range)
    Dim i As Long
    Dim inNum As Long
    Dim strCOnfig As String
    
    With ThisWorkbook.Sheets("config")
        For i = 31 To 60
            If .Cells(1, i).Value = tar.Address Then
                strCOnfig = .Cells(2, i).Value
            End If
        Next
    End With
    If Len(tar.Value) > 0 Then
        inNum = InStr(1, strCOnfig, "[UCASE]")
        If inNum > 0 Then
            tar.Value = UCase(tar.Value)
            For i = 1 To Len(tar.Value)
                strCOnfig = Mid(tar.Value, i, 1)
                If Asc(strCOnfig) > 90 Or Asc(strCOnfig) < 65 Then
                    MsgBox "Currency should be Capital Letter."
                    tar.Select
                    Exit For
                End If
            Next
        End If
    End If
End Sub
Sub PhoneRule(ByRef tar As Range)
    Dim i As Long
    Dim inNum As Long
    Dim strCOnfig As String
    
    With ThisWorkbook.Sheets("config")
        For i = 31 To 60
            If .Cells(1, i).Value = tar.Address Then
                strCOnfig = .Cells(2, i).Value
            End If
        Next
    End With
    If Len(tar.Value) > 0 Then
        inNum = InStr(1, strCOnfig, "[PHONE]")
        If inNum > 0 Then
            For i = 1 To Len(tar.Value)
                strCOnfig = Mid(tar.Value, i, 1)
                If strCOnfig <> "+" And strCOnfig <> "-" And strCOnfig <> " " And Not IsNumeric(strCOnfig) Then
                    MsgBox "Phone Number should be made up of number,+ or -."
                    tar.Select
                    Exit For
                End If
            Next
        End If
    End If
End Sub
Function deleteSpecial(ByVal strfilename As String) As String
    strfilename = Replace(strfilename, "/", "")
    strfilename = Replace(strfilename, "\", "")
    strfilename = Replace(strfilename, "*", "")
    strfilename = Replace(strfilename, "?", "")
    strfilename = Replace(strfilename, """", "")
    strfilename = Replace(strfilename, "<", "")
    strfilename = Replace(strfilename, ">", "")
    strfilename = Replace(strfilename, "|", "")
    deleteSpecial = strfilename
End Function
Sub ShowDetail()
    Application.EnableEvents = False
    Application.ScreenUpdating = False
    UFlogin.Show 0
    Application.ScreenUpdating = True
    Application.EnableEvents = True
End Sub
Sub HideDetail()
    Dim arr
    Dim i As Long
    
    Application.EnableEvents = False
    arr = Array("Privacy Statement(Italy)", "Privacy Statement(Japan)", "Privacy Statement(Korea)", "Privacy Statement(China)", "Chile", "Micro", "ConfigSpecial2", "Head", "Tail", "Rule", "CurrencyConfig", "Special Char", "BankConfig", "Password", "Config", "information", "ConfigSpecial", "Korea, Republic of", "Brazil", "Privacy Statement(Cote)", "Cote d'Ivoire", "Ecuador", "Russian Federation", "United States", ThisWorkbook.Sheets("ConfigSpecial").[a2].Value, "China")
    For i = 0 To UBound(arr)
         ThisWorkbook.Sheets(arr(i)).Visible = 2
    Next
    Dim sht As Worksheet
    For Each sht In ThisWorkbook.Sheets
        If sht.Name Like "_*" Then
            If sht.Visible = -1 Then
                sht.Visible = xlSheetVeryHidden
            End If
        End If
    Next
    Application.EnableEvents = True
End Sub
Sub CopyPC(ByVal strCountry As String) '******************************************************************************************************************
    Dim shtConfig As Worksheet
    Dim srow As Long
    Dim jcol As Long, i As Long
    Dim C As Range
    Dim arr1, arr2
    Dim ikey As String
    
    Set shtConfig = ThisWorkbook.Sheets("Config")
    shtConfig.[br2].Resize(shtConfig.UsedRange.Rows.Count - 1, 3).ClearContents
    Set dicPC = Nothing
    Set dicPC = CreateObject("scripting.dictionary")
    If strCountry = ThisWorkbook.Sheets("ConfigSpecial").[e2].Value Then
        strCountry = "China"
    End If
    With ThisWorkbook.Sheets("BankConfig")
        srow = .Cells(.Rows.Count, 5).End(xlUp).Row
        jcol = .Cells(1, .Columns.Count).End(xlToLeft).Column
        If strCountry = "China" Then
            Set C = .Columns(5).Find(strCountry, LookIn:=xlValues, lookat:=xlPart, MatchCase:=False)
        Else
            Set C = .Columns(5).Find(strCountry, LookIn:=xlValues, lookat:=xlWhole, MatchCase:=False)
        End If
        If Not C Is Nothing Then
            If strCountry = "China" Then
                .[a1].Resize(srow, jcol).AutoFilter Field:=5, Criteria1:="*" & strCountry & "*"
            Else
                .[a1].Resize(srow, jcol).AutoFilter Field:=5, Criteria1:=strCountry
            End If
            arr1 = Array(9, 13, 14)
            arr2 = Array(70, 71, 72)
            For i = 0 To UBound(arr1)
                .Cells(1, arr1(i)).Resize(srow, 1).SpecialCells(xlCellTypeVisible).Copy shtConfig.Cells(1, arr2(i))
            Next
            .AutoFilterMode = False
        End If
    End With
    With shtConfig
        srow = .Cells(.Rows.Count, "BR").End(xlUp).Row
        For i = 2 To srow
            ikey = Trim(UCase(.Cells(i, "BR").Value))
            dicPC(ikey) = .Cells(i, "BS").Value & "{" & .Cells(i, "BT").Value
        Next
    End With
End Sub
Sub subaddComment(ByVal str As String)
    Dim shp1, shp2 As Shape, shp3 As Shape, shp4 As Shape, shp5 As Shape, shp6 As Shape, shp7 As Shape, shp8 As Shape, shp  As Shape
    Dim C As Range
    Set shp1 = ThisWorkbook.Sheets("Micro").Shapes(2)
    Set shp2 = ThisWorkbook.Sheets("Micro").Shapes(1)
    Set shp3 = ThisWorkbook.Sheets("Micro").Shapes(3)
    If Not shp1 Is Nothing Then
    shp1.Copy
    ThisWorkbook.Sheets("template").Paste
    End If
    If Not shp2 Is Nothing Then
        shp2.Copy
        ThisWorkbook.Sheets("template").Paste
    End If
    If Not shp3 Is Nothing Then
        shp3.Copy
        ThisWorkbook.Sheets("template").Paste
    End If
    With ThisWorkbook.Sheets("template")
        For Each shp In .Shapes
            If shp.AutoShapeType = msoShapeRoundedRectangle Or shp.AutoShapeType = msoShapeRectangularCallout Then
                If shp.DrawingObject.Caption = str Then ' "Search bank info"
                    Set shp4 = shp
                ElseIf shp.DrawingObject.Caption = "Finish" Then
                    Set shp5 = shp
                ElseIf shp.DrawingObject.Caption = shp1.DrawingObject.Caption Then
                    Set shp6 = shp
                ElseIf shp.DrawingObject.Caption = shp2.DrawingObject.Caption Then
                    Set shp7 = shp
                ElseIf shp.DrawingObject.Caption = shp3.DrawingObject.Caption Then
                    Set shp8 = shp
                End If
            End If
        Next
        If Not shp6 Is Nothing And Not shp4 Is Nothing Then
            shp6.Left = shp4.Left + 16
        End If
        If Not shp7 Is Nothing And Not shp4 Is Nothing Then
            shp7.Left = shp4.Left + 16
        End If
        If Not shp8 Is Nothing And Not shp4 Is Nothing Then
            shp8.Left = shp4.Left + 16
        End If
        If Not shp6 Is Nothing And Not shp4 Is Nothing Then
            shp6.Top = shp4.Top - shp6.Height - 120
        End If
        If Not shp7 Is Nothing And Not shp4 Is Nothing Then
            shp7.Top = shp4.Top + shp4.Height - 115
        End If
        If Not shp8 Is Nothing And Not shp5 Is Nothing Then
            shp8.Top = shp5.Top - 30
        End If
        ActiveWindow.ScrollRow = 1
        .[b17].Select
    End With
    Set shp1 = Nothing
    Set shp2 = Nothing
    Set shp3 = Nothing
    Set shp4 = Nothing
    Set shp5 = Nothing
    Set shp6 = Nothing
    Set shp7 = Nothing
    Set shp8 = Nothing
End Sub

Function CUTSUP(ByVal strCOnfig As String, ByVal strValue As String, ByVal ilen As Long, ByVal strcut As String) As Boolean
    Dim ikey2 As String
    
    CUTSUP = False
    If InStr(1, strCOnfig, "[SUP]") > 0 Then
        ikey2 = Split(Split(Right(strCOnfig, Len(strCOnfig) - InStr(1, strCOnfig, "[SUP]") - 4), "_")(0), "\")(2)
        If UCase(ikey2) = "A" Then
            If Right(strValue, ilen) = strcut Then
                CUTSUP = True
            End If
        Else
            If Left(strValue, ilen) = strcut Then
                CUTSUP = True
            End If
        End If
    End If
End Function
Sub Clear_click()
    Dim arr2, i As Integer, sht As Worksheet, shtConfig As Worksheet, rng As Range, BOL As Boolean
    'On Error GoTo exitsub
    arr2 = Array(1, 2, 3, 4, 5)
    Set shtConfig = ThisWorkbook.Sheets("Config")
    Set sht = ThisWorkbook.Sheets("Template")
    BOL = False
    sht.Unprotect 123
    With shtConfig
        For i = 0 To UBound(arr2)
            If .Cells(2, i + 16).Value <> "" Then
                If sht.Range(.Cells(2, i + 16).Value).Value <> "" Then
                    BOL = True
                End If
                If rng Is Nothing Then
                    Set rng = sht.Range(.Cells(2, i + 16).Value).MergeArea
                Else
                    Set rng = Application.Union(rng, sht.Range(.Cells(2, i + 16).Value).MergeArea)
                End If
            End If
        Next
        If BOL Then
            rng.Locked = False
            rng.ClearContents
        End If
    End With
exitsub:
    sht.Protect Password:=123, DrawingObjects:=False, Contents:=True, Scenarios:= _
            False, AllowFormattingCells:=True, AllowFormattingColumns:=True, _
            AllowFormattingRows:=True, AllowInsertingHyperlinks:=True, AllowSorting:= _
            True, AllowFiltering:=True, AllowUsingPivotTables:=True
End Sub
Sub addReference(ByVal strCountry As String, ByRef rng As Range)
    If shtexsits(ThisWorkbook, "_" & strCountry) Then
        Dim str1 As String
        
       
        If UCase(strCountry) = "BRAZIL" Then
             str1 = "Reference:Contribution Type/ Tipo do Estabelecimento"
        ElseIf UCase(strCountry) = "MONGOLIA" Then
             str1 = "Reference:Bank name list"
        ElseIf UCase(strCountry) = "KUWAIT" Then
            str1 = "Reference:Supplier Bank Adderss list"
        Else
             str1 = "Reference:Bank code or branch code List"
        End If
         rng.Value = str1
        rng.IndentLevel = 2
        ThisWorkbook.Sheets("Template").Hyperlinks.Add Anchor:=rng, Address:="", SubAddress:= _
            "'_" & strCountry & "'!A1", TextToDisplay:=str1
        'ThisWorkbook.Sheets("_" & strCountry).Visible = -1
        rng.Font.ColorIndex = 3
        rng.Font.Bold = True
        ThisWorkbook.Sheets("Template").Activate
        rng.EntireColumn.ColumnWidth = 40
    End If
End Sub
Function shtexsits(ByRef wk As Workbook, ByVal shtname As String) As Boolean
    Dim sht As Worksheet
    shtexsits = False
    For Each sht In wk.Sheets
        If UCase(sht.Name) = UCase(shtname) Then
            shtexsits = True
            Exit For
        End If
    Next
End Function

Attribute VB_Name = "Search"
Attribute VB_Base = "0{C858DFC2-75E5-4794-AB12-3EE8EB119ECF}{8E4AFB3B-3948-4052-B17E-4FAA008B5408}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False



Option Explicit

Private Sub ComboBox1_Change()
    Me.TextBox1.Value = ""
    Me.ListBox1.Clear
    
    Call subcourse
End Sub

Private Sub CommandButton1_Click()
    Dim A As String
    Dim C As Range
    Dim strCountry As String, istr As String
    On Error Resume Next
    A = Me.ListBox1.Value
    If Err.Number <> 0 Then
        Err.Clear
        A = ""
    End If
    On Error GoTo 0
    strCountry = ThisWorkbook.Sheets("Main").[D3].Value
    With ThisWorkbook.Sheets("template")
        .Unprotect 123
        If strCountry <> "Japan" Then
            Set C = .Columns("a").Find(Me.ComboBox1.Value, lookat:=xlPart, MatchCase:=False)
            If Not C Is Nothing Then
                If C.Offset(0, 1).Value <> A Then
                    C.Offset(0, 1).Value = A
                End If
            End If
        Else
            istr = Replace(Me.ComboBox1.Value, "Number", "Code")
            Set C = .Columns("a:c").Find(istr, lookat:=xlPart, MatchCase:=False)
            If Not C Is Nothing Then
                If C.Offset(0, 1).Value <> A Then
                    C.Offset(0, 1).Value = A
                End If
            End If
        End If
    End With
    Search.Hide
    ThisWorkbook.Sheets("template").Protect Password:=123, DrawingObjects:=False, Contents:=True, Scenarios:= _
            False, AllowFormattingCells:=True, AllowFormattingColumns:=True, _
            AllowFormattingRows:=True, AllowInsertingHyperlinks:=True, AllowSorting:= _
            True, AllowFiltering:=True, AllowUsingPivotTables:=True
End Sub

Private Sub CommandButton2_Click()
    Call Clear_click
    Call subcourse
End Sub

Private Sub ListBox1_DblClick(ByVal Cancel As MSForms.ReturnBoolean)
    Dim A As String
    Dim C As Range
    Dim strCountry As String, istr As String
    A = Me.ListBox1.Value
    'Find.Hide
    strCountry = ThisWorkbook.Sheets("Main").[D3].Value
    With ThisWorkbook.Sheets("template")
        .Unprotect 123
        If strCountry <> "Japan" Then
        Set C = .Columns("a").Find(Me.ComboBox1.Value, lookat:=xlPart, MatchCase:=False)
        If Not C Is Nothing Then
            C.Offset(0, 1).Value = A
        End If
        Else
        istr = Replace(Me.ComboBox1.Value, "Number", "Code")
        Set C = .Columns("a:c").Find(istr, lookat:=xlPart, MatchCase:=False)
        If Not C Is Nothing Then
            C.Offset(0, 1).Value = A
        End If
        End If
    End With
    Search.Hide
End Sub



Private Sub TextBox1_Change()
    ListBox1.Clear
    Call subcourse
End Sub
Sub subcourse()
    Dim arr2, arr
    Dim srow As Long
    Dim i As Long
    Dim j As Long
    Dim namec As String
    Dim col As Long
    Select Case Me.ComboBox1.Value
        Case "Bank Number"
            col = 1
        Case "Bank Name"
            col = 2
        Case "Branch Name"
            col = 3
        Case "Branch Number"
            col = 4
        Case "Swift Code"
            col = 5
    End Select
    With ThisWorkbook.Sheets("Config")
        srow = .Cells(.Rows.Count, col).End(xlUp).Row
        arr = .Cells(1, col).Resize(srow, 1).Value
        ReDim arr2(0 To srow)
    End With
    namec = LCase(TextBox1.Value)
    j = 0
    For i = 2 To srow
        If LCase(arr(i, 1)) Like "*" & namec & "*" Then
            arr2(j) = arr(i, 1)
            j = j + 1
        End If
    Next
    If j > 0 Then
        For i = 0 To j - 1
            ListBox1.AddItem arr2(i)
        Next
    End If
    ListBox1.AddItem ""
End Sub

Private Sub UserForm_Initialize()
    Dim arr, arr2
    Dim i As Long
    Me.ComboBox1.Clear
    With ThisWorkbook.Sheets("Config")
        arr = .[P2:T2].Value
    End With
    arr2 = Array("Bank Number", "Bank Name", "Branch Name", "Branch Number", "Swift Code")
    For i = 1 To 5
        If arr(1, i) <> "" Then
            Me.ComboBox1.AddItem arr2(i - 1)
        End If
    Next
    Me.ComboBox1.Value = Me.ComboBox1.List(0)
    Me.ListBox1.Clear
    Me.TextBox1.Value = ""
    Call subcourse
   
End Sub
Attribute VB_Name = "Sheet1"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Option Explicit

Attribute VB_Name = "Sheet10"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Sub A()
    
    Sheet10.UsedRange.Rows.Count
    
    heckString = CreateObject("Scripting.Dictionary")
    Set checkString1 = CreateObject("Scripting.Dictionary")
    
    For i = 3 To Row
        If checkString.exists(AbnormalChar.Cells(i, 2).Value) = False Then
            
            checkString.Add AbnormalChar.Cells(i, 2).Value, AbnormalChar.Cells(i, 2).Value
        End If
             
    Next i



End Sub

Attribute VB_Name = "Sheet11"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Option Explicit

Attribute VB_Name = "Sheet12"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Option Explicit

Attribute VB_Name = "Sheet13"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Option Explicit

Attribute VB_Name = "Sheet14"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Option Explicit

Attribute VB_Name = "Sheet15"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Option Explicit

Attribute VB_Name = "Sheet16"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Option Explicit

Private Sub Worksheet_Activate()

End Sub

Private Sub Worksheet_BeforeDoubleClick(ByVal Target As Range, Cancel As Boolean)

End Sub

Private Sub Worksheet_BeforeRightClick(ByVal Target As Range, Cancel As Boolean)

End Sub

Private Sub Worksheet_LensGalleryRenderComplete()

End Sub

Private Sub Worksheet_PivotTableAfterValueChange(ByVal TargetPivotTable As PivotTable, ByVal TargetRange As Range)

End Sub

Private Sub Worksheet_PivotTableBeforeCommitChanges(ByVal TargetPivotTable As PivotTable, ByVal ValueChangeStart As Long, ByVal ValueChangeEnd As Long, Cancel As Boolean)

End Sub

Private Sub Worksheet_SelectionChange(ByVal Target As Range)

End Sub

Private Sub Worksheet_TableUpdate(ByVal Target As TableObject)

End Sub
Attribute VB_Name = "Sheet17"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Option Explicit

Attribute VB_Name = "Sheet18"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Option Explicit

Attribute VB_Name = "Sheet19"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Option Explicit

Attribute VB_Name = "Sheet2"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Option Explicit

Attribute VB_Name = "Sheet20"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Option Explicit

Attribute VB_Name = "Sheet21"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Option Explicit

Attribute VB_Name = "Sheet22"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Option Explicit

Attribute VB_Name = "Sheet23"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Control = "HTMLHidden1, 3, 0, MSForms, HTMLHidden"
Attribute VB_Control = "HTMLHidden2, 4, 1, MSForms, HTMLHidden"
Attribute VB_Control = "HTMLHidden3, 5, 2, MSForms, HTMLHidden"
Attribute VB_Name = "Sheet24"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Option Explicit

Attribute VB_Name = "Sheet25"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Option Explicit

Attribute VB_Name = "Sheet27"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Option Explicit

Attribute VB_Name = "Sheet3"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Option Explicit

Attribute VB_Name = "Sheet30"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Sheet31"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Sheet32"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Sheet33"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Option Explicit

Attribute VB_Name = "Sheet34"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Option Explicit

Attribute VB_Name = "Sheet35"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Option Explicit

Attribute VB_Name = "Sheet36"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Option Explicit

Attribute VB_Name = "Sheet37"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Option Explicit

Attribute VB_Name = "Sheet38"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Option Explicit

Attribute VB_Name = "Sheet39"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Sheet4"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Option Explicit

Attribute VB_Name = "Sheet40"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Option Explicit

Attribute VB_Name = "Sheet41"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Option Explicit

Attribute VB_Name = "Sheet5"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Option Explicit

Attribute VB_Name = "Sheet6"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Sheet7"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Option Explicit

Attribute VB_Name = "Sheet8"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Sheet9"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Option Explicit

Attribute VB_Name = "ThisWorkbook"
Attribute VB_Base = "0{00020819-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Option Explicit




Private Sub Workbook_BeforeClose(Cancel As Boolean)
    Dim sht As Worksheet
    Application.ScreenUpdating = False
    Application.DisplayAlerts = False
    Application.EnableEvents = False
    On Error Resume Next
    Unload Find
    Unload UFlogin
    Unload Search
    Set dicPC = Nothing
    Call deleteF(ThisWorkbook.Path & "\tempararyfile.xls")
    ThisWorkbook.Sheets("Template").Delete
    
    For Each sht In ThisWorkbook.Sheets
        If sht.Index < ThisWorkbook.Sheets("Main").Index And Not sht.Name Like "*Privacy Statement*" Then
            sht.Delete
        End If
    Next
    ThisWorkbook.Sheets("Main").[D3].ClearContents
    On Error GoTo 0
    '|fffd||fffd||fffd||fffd||fffd||fffd||fffd||431||fffd||fffd||fffd||5bb||fffd||fffd||fffd||fffd||2be||fffd||fffd||fffd||fa||fffd||131||fffd|
    
    ThisWorkbook.Sheets("Micro").Visible = -1
    ThisWorkbook.Sheets("Micro").Activate
    ActiveWindow.ScrollRow = 1
    For Each sht In ThisWorkbook.Sheets
        If sht.Name <> "Micro" Then
            sht.Visible = 2
        End If
    Next
    
    Application.DisplayAlerts = True
    Application.ScreenUpdating = True
    Application.EnableEvents = True
    ThisWorkbook.Close True
End Sub



Private Sub Workbook_Open()
    Dim sht As Worksheet
    
    On Error Resume Next
    Application.ScreenUpdating = False
    Application.DisplayAlerts = False
    Application.EnableEvents = False
    ThisWorkbook.Sheets("Main").Visible = -1
    ThisWorkbook.Sheets("Template").Delete
    For Each sht In ThisWorkbook.Sheets
        If sht.Index < ThisWorkbook.Sheets("Main").Index And Not sht.Name Like "*Privacy Statement*" Then
            sht.Delete
        End If
    Next
    ThisWorkbook.Sheets("Main").[D3].ClearContents
    ThisWorkbook.Sheets("Micro").Visible = 2
    For Each sht In ThisWorkbook.Sheets
        If sht.Name Like "*Privacy Statement*" Then
            sht.Visible = 2
        End If
    Next
    ThisWorkbook.Sheets("Main").Activate
    Application.Application.AutoFormatAsYouTypeReplaceHyperlinks = False
    Application.ScreenUpdating = True
    Application.DisplayAlerts = True
    Application.EnableEvents = True
    On Error GoTo 0
End Sub

Private Sub Workbook_SheetBeforeRightClick(ByVal Sh As Object, ByVal Target As Range, Cancel As Boolean)
    If Sh.Name = "Template" Then
        Cancel = True
        Call SetRightMenu
    End If
End Sub

Private Sub Workbook_SheetChange(ByVal Sh As Object, ByVal Target As Range)
    Dim ifVa As Boolean
    Dim countcol As Long
    Dim i As Long
    Dim keycol As String
    Dim bolConfig As Boolean
    Dim arr1, arr2
    Dim tar As Range
    Dim jcol As Long
    Dim srow As Long
    Dim C As Range
    Dim shtConfig As Worksheet
    Dim rng As Range
    Dim strCountry As String
    Dim strChina As String
    
    If Sh.Name = "Template" Then
        Sh.Unprotect 123
        strCountry = ThisWorkbook.Sheets("Main").[D3].Value
        strChina = ThisWorkbook.Sheets("ConfigSpecial").[e1].Value
        On Error GoTo exitsub
        Application.ScreenUpdating = False
        Application.EnableEvents = False
        For Each tar In Target
            If tar.Column = 2 Or (tar.Column = 4 And UCase(strCountry) = "JAPAN") Then
                Set shtConfig = ThisWorkbook.Sheets("Config")
                ifVa = False
                With shtConfig
                    countcol = .Cells(1, 30).End(xlToLeft).Column - 15
                    For i = 1 To countcol
                        If tar.Address = .Cells(2, i + 15).Value Then
                            Set C = .Columns(i).Find(tar.Value, LookIn:=xlValues, lookat:=xlWhole, MatchCase:=False)
                            If Not C Is Nothing Then
                                ifVa = True
                                .Cells(4, i + 15).Value = tar.Value
                            Else
                                .Cells(4, i + 15).Value = ""
                                'tar.Value = ""
                            End If
                            keycol = .Cells(3, i + 15).Value
                            Exit For
                        End If
                    Next
                End With
                If ifVa Then
                    'BankConfig|fffd||439||63c||fffd||fffd||fffd||278||461||fffd||fffd||fffd||fffd||278||461||fffd||fffd||5b5||fffd||175||fffd|Config|fffd||fffd||fffd||423||fffd||fffd||7b8||fffd||fffd||fffd||fffd||fffd|
                    With ThisWorkbook.Sheets("BankConfig")
                        .AutoFilterMode = False
                        srow = .Cells(.Rows.Count, keycol).End(xlUp).Row
                        jcol = .Cells(1, .Columns.Count).End(xlToLeft).Column
                        
                        If strCountry = "Russian Federation" Then
                            Set C = .Columns(5).Find("Russian Federation", LookIn:=xlValues, lookat:=xlWhole, MatchCase:=False)
                        Else
                            Set C = .Columns(5).Find(strCountry, LookIn:=xlValues, lookat:=xlWhole, MatchCase:=False)
                        End If
                        If Not C Is Nothing Then
                            If strCountry = "Russian Federation" Then
                                .[a1].Resize(srow, jcol).AutoFilter Field:=5, Criteria1:=strCountry, Operator:=xlOr, Criteria2:=C.Value
                            Else
                                .[a1].Resize(srow, jcol).AutoFilter Field:=5, Criteria1:=strCountry
                            End If
                            Set C = .Columns(keycol).Find(tar.Value, LookIn:=xlValues, lookat:=xlWhole, MatchCase:=False)
                            If Not C Is Nothing Then
                                arr1 = Array(6, 3, 8, 9, 10)
                                arr2 = Array(1, 2, 3, 4, 5)
                                For i = 0 To UBound(arr1)
                                    If shtConfig.Cells(4, i + 16).Value <> "" Then
                                        .[a1].Resize(srow, jcol).AutoFilter Field:=Cells(1, arr1(i)).Column, Criteria1:=shtConfig.Cells(4, i + 16).Value
                                    End If
                                Next
                                On Error Resume Next
                                For i = 0 To UBound(arr1)
                                    If arr1(i) <> Cells(1, keycol).Column Or shtConfig.Cells(4, i + 16).Value = "" Then
                                        shtConfig.Cells(2, arr2(i)).Resize(srow).ClearContents
                                        .Cells(1, arr1(i)).Resize(srow, 1).SpecialCells(xlCellTypeVisible).Copy shtConfig.Cells(1, arr2(i))
                                    End If
                                Next
                                On Error GoTo exitsub
                                bolConfig = True
                            Else
                                bolConfig = False
                            End If
                            .AutoFilterMode = False
                        Else
                            bolConfig = False
                            .AutoFilterMode = False
                        End If
                    End With
                    If bolConfig Then
                        '|225||fffd||638||fffd||fffd||fffd|'|fffd||fffd||fffd||fffd||fffd||fffd|
                        arr1 = Array("_F", "_C", "_H", "_I", "_J")
                        arr2 = Array(1, 2, 3, 4, 5)
                        With shtConfig
                            For i = 0 To UBound(arr1)
                                srow = .Cells(.Rows.Count, arr2(i)).End(xlUp).Row
                                .Cells(1, arr2(i)).Resize(srow + 1, 1).RemoveDuplicates Columns:=1, Header:=xlYes
                                srow = .Cells(.Rows.Count, arr2(i)).End(xlUp).Row
                                ThisWorkbook.Names(arr1(i)).RefersToR1C1 = "=Config!R2C" & arr2(i) & ":R" & srow & "C" & arr2(i)
                            Next
                        End With
                    End If
                    '|fffd||fffd||fffd||5bb||fffd||fffd|1|fffd||fffd||fffd||fffd||fffd||763||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||4bb||fffd||fffd||fffd||fffd||fffd||fffd|
                    If tar.Value <> "" Then
                        tar.MergeArea.Locked = True
                        arr2 = Array(1, 2, 3, 4, 5)
                        With shtConfig
                            For i = 0 To UBound(arr2)
                                If .Cells(2, i + 16).Value <> "" And .Cells(4, i + 16).Value = "" Then
                                    srow = .Cells(.Rows.Count, i + 1).End(xlUp).Row
                                    If srow = 2 Then
                                        Sh.Range(.Cells(2, i + 16).Value).Value = .Cells(2, i + 1).Value
                                        If .Cells(2, i + 1).Value <> "" Then
                                            'Sh.Range(.Cells(2, i + 16).Value).MergeArea.Locked = True
                                        End If
                                        If UCase(strCountry) <> UCase("Cote d'Ivoire") And UCase(strCountry) <> "JAPAN" And strCountry <> strChina And UCase(strCountry) <> "BRAZIL" And UCase(strCountry) <> "ECUADOR" And UCase(strCountry) <> UCase("Korea, Republic of") And UCase(strCountry) <> "RUSSIAN FEDERATION" Then
                                            'Sh.Range(.Cells(2, i + 16).Value).Rows.AutoFit
                                            If Sh.Range(.Cells(2, i + 16).Value).RowHeight < 20 Then
                                                Sh.Range(.Cells(2, i + 16).Value).RowHeight = 20
                                            End If
                                        End If
                                        '|fffd||fffd||fffd||fef9||fffd||43f||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||423||fffd||fffd|
                                        Set rng = Sh.Range(.Cells(2, i + 16).Value)
                                        Call Len_Sup(rng)
                                        Call SamValue(rng)
                                        Call ProCity(rng)
                                    End If
                                End If
                            Next
                        End With
                    End If
                End If
                
                With shtConfig
                    'Acocunt name|fffd||fffd|Suppliername|fffd||4eef|
                    Call Suppli_AccountN(tar)
                    '|fffd||fffd||3aa||fffd||fffd||fffd||fffd||fffd||fffd|
                    Call ChangeToC(tar)
                    '|fffd||fffd||fffd||5bc||4f4||fffd||434||fffd||fffd||138|
                    Call UcaseNum(tar)
                    '|3bb||fffd||fffd||fffd||fffd||fffd||fffd|+|fffd||fffd||3bb|X'|fffd||5bd||6b3||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
                    Call Len_Sup(tar)
                    '|fffd||5b7||fffd||fffd||fffd||221||fffd||4eef|
                    Call Cut_Cha(tar)
                    '|fffd||fffd||5b5||fffd||fffd||fffd||fffd|
                    Call NumOnly(tar)
                    '|fffd||fffd||36c||fffd||fffd||5b5||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||5b5|
                    Call SamValue(tar)
                    '|fffd||fffd||fffd||fffd||fffd||5b7|
                    Call EmailRule(tar)
                    '|fffd||7ef0||fffd||fffd||fffd||fffd|
                    Call PhoneRule(tar)
                    '|fffd||fffd|Branch number|221|Provice&City
                    Call ProCity(tar)
                    '|fffd||fffd||fffd||434|
                    Call BeUcase(tar)
                End With
                
                '|fffd||fffd||2bd|
                If UCase(strCountry) <> "JAPAN" And UCase(strCountry) <> UCase("Cote d'Ivoire") And strCountry <> strChina And UCase(strCountry) <> "BRAZIL" And UCase(strCountry) <> "ECUADOR" And UCase(strCountry) <> UCase("Korea, Republic of") And UCase(strCountry) <> "RUSSIAN FEDERATION" Then
                    With tar
                        .Interior.ColorIndex = 0
                        .WrapText = True
                        .NumberFormatLocal = "@"
                        .Font.Name = "Arial"
                        .Font.Size = 11
                        .Borders.LineStyle = xlContinuous
                        .ClearComments
                    End With
                End If
            End If
        Next
        Dim strCOnfig As String, inSam As Integer
        If UCase(strCountry) <> "JAPAN" And UCase(strCountry) <> UCase("Cote d'Ivoire") And strCountry <> strChina And UCase(strCountry) <> "BRAZIL" And UCase(strCountry) <> "ECUADOR" And UCase(strCountry) <> UCase("Korea, Republic of") And UCase(strCountry) <> "RUSSIAN FEDERATION" Then
            For Each tar In Target
                strCOnfig = "0"
                With ThisWorkbook.Sheets("Config")
                    For i = 31 To 60
                        If .Cells(1, i).Value = tar.Address Then
                            strCOnfig = .Cells(2, i).Value
                            Exit For
                        End If
                    Next
                End With
                inSam = InStr(1, strCOnfig, "[RH]")
                If inSam = 0 Then
                    tar.EntireRow.AutoFit
                    tar.RowHeight = tar.RowHeight + 4
                End If
            Next
            For Each tar In Target
                If tar.RowHeight < 20 Then
                    tar.RowHeight = 20
                End If
            Next
        End If
    End If
exitsub:
    If Sh.Name = "Template" Then
    Sh.Protect Password:=123, DrawingObjects:=False, Contents:=True, Scenarios:= _
            False, AllowFormattingCells:=True, AllowFormattingColumns:=True, _
            AllowFormattingRows:=True, AllowInsertingHyperlinks:=True, AllowSorting:= _
            True, AllowFiltering:=True, AllowUsingPivotTables:=True
    End If
    If Err.Number <> 0 Then
        MsgBox Err.Description
        Err.Clear
    End If
    Application.EnableEvents = True
    Application.ScreenUpdating = True
End Sub


Private Sub Workbook_SheetFollowHyperlink(ByVal Sh As Object, ByVal Target As Hyperlink)
    Dim shtname As String, strpath As String
    If Target.Name Like "Reference:*" Then
        shtname = Mid(Split(Target.SubAddress, "!")(0), 2, Len(Split(Target.SubAddress, "!")(0)) - 2)
        If shtexsits(ThisWorkbook, shtname) Then
            ThisWorkbook.Sheets(shtname).Visible = -1
            ThisWorkbook.Sheets(shtname).Copy
            strpath = ThisWorkbook.Path & "\tempararyfile.xls"
            Call closewk(strpath)
            Call deleteF(strpath)
            Workbooks(Workbooks.Count).SaveAs strpath
            ThisWorkbook.Sheets(shtname).Visible = 2
        End If
    End If
End Sub

Private Sub Workbook_SheetLensGalleryRenderComplete(ByVal Sh As Object)

End Sub

'Private Sub Workbook_SheetSelectionChange(ByVal Sh As Object, ByVal Target As Range)
'    '|fffd||fffd||fffd||fffd||fffd||fffd||461||fffd||fffd|A:B|fffd||fffd||fffd||fffd|
'    If Sh.Name = "Template" Then
'        If Target.Columns.Count > 1 And Target.Rows.Count > 5 Then
'            Application.EnableEvents = False
'            Target(1).Select
'            Application.EnableEvents = True
'        End If
'    End If
'End Sub



Private Sub Workbook_WindowDeactivate(ByVal Wn As Window)
    If Wn.Caption = ThisWorkbook.Name Then
        Application.CutCopyMode = False
    End If
End Sub
Attribute VB_Name = "UFlogin"
Attribute VB_Base = "0{7DD21658-EEC1-48D8-8CFE-21458AF10A2F}{00D990D3-0148-4A1F-949E-66D0CD8702DB}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False




Private Sub CmbConfirm_Click()
    Dim i As Long
    Dim arr, sht As Worksheet
    
    If UFlogin.TextBox1.Text = ThisWorkbook.Sheets("Password").[a1].Text Then
       UFlogin.Hide
       arr = Array("Privacy Statement(Italy)", "Privacy Statement(Cote)", "Privacy Statement(ENCN)", "Privacy Statement(Japan)", "Privacy Statement(Korea)", "Privacy Statement(China)", "Micro", "Config", "ConfigSpecial2", "Head", "Tail", "Rule", "CurrencyConfig", "Special Char", "BankConfig", "Password", "information", "Korea, Republic of", "Ecuador", "Russian Federation", "Brazil", "Cote d'Ivoire", "United States", ThisWorkbook.Sheets("ConfigSpecial").[a2].Value, "China")
       Application.ScreenUpdating = False
       For i = 0 To UBound(arr)
            ThisWorkbook.Sheets(arr(i)).Visible = -1
       Next
       For Each sht In ThisWorkbook.Sheets
        If sht.Name Like "_*" Then
            sht.Visible = -1
        End If
       Next
       Application.ScreenUpdating = True
    Else
        MsgBox "Wrong Password!"
        UFlogin.Hide
    End If
End Sub



Private Sub UserForm_Activate()
    UFlogin.TextBox1.Text = ""
    UFlogin.TextBox1.SetFocus
End Sub


Attribute VB_Name = "m_Export"
Option Explicit

Sub Export_Excel()
    
    Dim sht As Worksheet
    Dim bolOK As Boolean
    Dim pstr As String
    On Error GoTo exitsub
    
    '|fffd||fffd||fffd||fffd||fffd||1f7||fffd||fffd||fffd||fffd|
    For Each sht In ThisWorkbook.Sheets
        If sht.Name = "Template" Then
            Exit For
        End If
    Next
    If sht.Name <> "Template" Then
        MsgBox "Please generate template first."
        Exit Sub
    End If
    
    Application.EnableEvents = False
    Application.ScreenUpdating = False
    Application.DisplayAlerts = False
    
    sht.Unprotect 123
    
    bolOK = True
    pstr = ""
    Call checkbeforeEX(sht, bolOK, pstr)
    If bolOK = False Then GoTo exitsub
    
    Call exportToExcel(sht, pstr)
    
    On Error GoTo 0
exitsub:
    sht.Protect Password:=123, DrawingObjects:=False, Contents:=True, Scenarios:= _
        False, AllowFormattingCells:=True, AllowFormattingColumns:=True, _
        AllowFormattingRows:=True, AllowInsertingHyperlinks:=True, AllowSorting:= _
        True, AllowFiltering:=True, AllowUsingPivotTables:=True
    
    Application.EnableEvents = True
    Application.ScreenUpdating = True
    Application.DisplayAlerts = True
End Sub

Sub Export_PDF()
    
    Dim sht As Worksheet
    Dim bolOK As Boolean
    Dim pstr As String
    'On Error GoTo exitsub
    pstr = ""
    '|fffd||fffd||fffd||fffd||fffd||1f7||fffd||fffd||fffd||fffd|
    For Each sht In ThisWorkbook.Sheets
        If sht.Name = "Template" Then
            Exit For
        End If
    Next
    If sht.Name <> "Template" Then
        MsgBox "Please generate template first."
        Exit Sub
    End If
    
    Application.EnableEvents = False
    Application.ScreenUpdating = False
    Application.DisplayAlerts = False
    
    sht.Unprotect 123
    
    bolOK = True
    Call checkbeforeEX(sht, bolOK, pstr)
    If bolOK = False Then GoTo exitsub
    
    Call exportToPDF(sht, pstr)
    
    On Error GoTo 0
exitsub:
    sht.Protect Password:=123, DrawingObjects:=False, Contents:=True, Scenarios:= _
            False, AllowFormattingCells:=True, AllowFormattingColumns:=True, _
            AllowFormattingRows:=True, AllowInsertingHyperlinks:=True, AllowSorting:= _
            True, AllowFiltering:=True, AllowUsingPivotTables:=True
    If Err.Number <> 0 Then
        MsgBox Err.Description
        Err.Clear
    End If
    Application.EnableEvents = True
    Application.ScreenUpdating = True
    Application.DisplayAlerts = True
End Sub

Sub exportToPDF(ByRef sht As Worksheet, ByVal pstr As String)
    Dim FSO
    Dim strfilename As String
    Dim nam As Name
    Dim obj As Shape
    Dim shtn As Worksheet
    Dim strCountry As String
    Dim temp
    Dim i As Long, strname As String, shtP As Worksheet
    For Each shtP In ThisWorkbook.Sheets
        If shtP.Visible = -1 Then
            If shtP.Name Like "*Privacy Statement*" Then
                strname = shtP.Name
                Exit For
            End If
        End If
    Next
    ThisWorkbook.Sheets(Array(strname, sht.Name)).Copy
    Set shtn = ActiveWorkbook.Sheets("Template")
    ActiveWorkbook.Sheets(1).Move AFTER:=shtn
    shtn.Activate
    For Each obj In shtn.Shapes
        If Not obj.Name Like "Option*" Then
            obj.Delete
        End If
    Next
    Dim C As Range
    Set C = shtn.Columns("D").Find("Reference", lookat:=xlPart, MatchCase:=False)
    If Not C Is Nothing Then
        C.Clear
    End If
    '|27e||fffd||fffd||fffd||fffd|
    If pstr <> "" Then
        temp = Split(pstr, ",")
        For i = UBound(temp) To 1 Step -1
            shtn.Rows(temp(i)).Delete
        Next
    End If
    '|fffd||fffd||fffd||fffd||4b3||fffd||fffd||fffd||fffd||fffd||fffd|
    strCountry = ThisWorkbook.Sheets("Main").[D3].Value
    If UCase(strCountry) <> "BRAZIL" And UCase(strCountry) <> UCase("Cote d'Ivoire") And UCase(strCountry) <> UCase("United States") And UCase(strCountry) <> "ECUADOR" And UCase(strCountry) <> UCase("Korea, Republic of") And UCase(strCountry) <> UCase("Russian Federation") Then
        With shtn.PageSetup
            .Zoom = False
            .FitToPagesTall = 1
            .FitToPagesWide = 1
            .CenterHorizontally = True
            .CenterVertically = True
        End With
    ElseIf UCase(strCountry) = "BRAZIL" Then
        With shtn.PageSetup
            .Zoom = False
            .FitToPagesTall = 2
            .FitToPagesWide = 1
            .CenterHorizontally = True
            .CenterVertically = True
        End With
    End If
    '|fffd||1b3||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
    strfilename = deleteSpecial(strCountry)
    Set FSO = CreateObject("scripting.filesystemobject")
    If Not FSO.folderexists(ThisWorkbook.Path & "\output") Then
        FSO.createfolder ThisWorkbook.Path & "\output"
    End If
    ActiveWorkbook.ExportAsFixedFormat Type:=xlTypePDF, Filename:= _
        ThisWorkbook.Path & "\output\" & strfilename & Format(Now, "yymmdd hhmmss") & ".pdf", Quality:=xlQualityStandard, _
        IncludeDocProperties:=True, IgnorePrintAreas:=False, OpenAfterPublish:=True
    'shtn.ExportAsFixedFormat Type:=xlTypePDF, Filename:= _
        ThisWorkbook.Path & "\output\" & strfilename & Format(Now, "yymmdd hhmmss") & ".pdf", Quality:=xlQualityStandard, _
        IncludeDocProperties:=True, IgnorePrintAreas:=False, OpenAfterPublish:=True
    shtn.Parent.Close False
End Sub

Sub exportToExcel(ByRef sht As Worksheet, ByVal pstr As String)
    Dim FSO
    Dim strfilename As String
    Dim nam As Name
    Dim obj As Shape
    Dim shtn As Worksheet
    Dim strCountry As String
    Dim i As Long
    Dim temp
    
    '|fffd||1b3||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
    strfilename = deleteSpecial(ThisWorkbook.Sheets("Main").[D3].Value)
    Set FSO = CreateObject("scripting.filesystemobject")
    If Not FSO.folderexists(ThisWorkbook.Path & "\output") Then
        FSO.createfolder ThisWorkbook.Path & "\output"
    End If
    
    sht.Copy
    Set shtn = ActiveSheet
    shtn.Name = "Sheet1"
    shtn.Columns("B").Validation.Delete
    For Each nam In ActiveWorkbook.Names
        nam.Delete
    Next
    For Each obj In shtn.Shapes
        If Not obj.Name Like "Option*" Then
            obj.Delete
        End If
    Next
    '|27e||fffd||fffd||fffd||fffd|
    If pstr <> "" Then
        temp = Split(pstr, ",")
        For i = UBound(temp) To 1 Step -1
            shtn.Rows(temp(i)).Delete
        Next
    End If
    '|fffd||fffd||fffd||fffd||4b3||fffd||fffd||fffd||fffd||fffd||fffd|
    strCountry = ThisWorkbook.Sheets("Main").[D3].Value
    If UCase(strCountry) <> "BRAZIL" And UCase(strCountry) <> UCase("Cote d'Ivoire") And UCase(strCountry) <> "ECUADOR" And UCase(strCountry) <> UCase("Korea, Republic of") And UCase(strCountry) <> UCase("Russian Federation") Then
        With shtn.PageSetup
            .Zoom = False
            .FitToPagesTall = 1
            .FitToPagesWide = 1
            .CenterHorizontally = True
            .CenterVertically = True
        End With
    End If
    ActiveWorkbook.SaveAs ThisWorkbook.Path & "\output\" & strfilename & Format(Now, "yymmdd hhmmss") & ".xlsx"
End Sub

Sub checkbeforeEX(ByRef sht As Worksheet, ByRef bolOK As Boolean, ByRef pstr As String)

    Dim i As Long, slen As Long, ilen As Long, strField As String
    Dim j As Long
    Dim srow As Long
    Dim arr1, arr2, arr3, arr
    Dim inRep As Long, inLen As Long, inCut0 As Long, inCut As Long, inNum As Long, inSam As Long, inC As Long, inCH As Long
    Dim bolLen As Boolean
    Dim tempLen, tempCut
    Dim k As Long
    Dim strSam As String, ikey As String, istr As String, ikey2 As String
    Dim strCountry As String
    Dim strVAL As String, strBankName As String
    Dim dicREP As Object, dicCountrySh As Object, dicrep2 As Object
    Dim strPhone As String
    Dim C As Range, arrAll As Variant
    Dim strChina As String, strSwiftCode As String
    
    Set dicCountrySh = CreateObject("scripting.dictionary")
    '|fffd||fffd||fffd||6efb||fffd||5b7||fffd||fffd||17d||fffd||fffd||fffd||fffd||fffd|
    With ThisWorkbook.Sheets("Special Char")
        srow = .Cells(.Rows.Count, 1).End(xlUp).Row
        Set dicREP = CreateObject("scripting.dictionary")
        Set dicrep2 = CreateObject("scripting.dictionary")
        For i = 2 To srow
            ikey = .Cells(i, "a").Value
            If Not dicREP.exists(ikey) Then
                dicREP.Add ikey, 1
            End If
            ikey = .Cells(i, "a").Value & Trim(UCase(.Cells(i, 2).Value)) & Trim(UCase(.Cells(i, 3).Value))
            If Not dicrep2.exists(ikey) Then
                dicrep2.Add ikey, .Cells(i, 4).Value
            End If
        Next
        srow = .Cells(.Rows.Count, "h").End(xlUp).Row
        arrAll = .[h2].Resize(srow - 1, 1).Value
    End With
    strChina = ThisWorkbook.Sheets("ConfigSpecial").[e1].Value
    With ThisWorkbook.Sheets("CurrencyConfig")
        srow = .Cells(.Rows.Count, 1).End(xlUp).Row
        For i = 2 To srow
            ikey = Trim(UCase(.Cells(i, 1).Value))
            If ikey = "CHINA" Then
                ikey = UCase(strChina)
            End If
            If Not dicCountrySh.exists(ikey) Then
                dicCountrySh.Add ikey, Trim(UCase(.Cells(i, 5).Value))
            End If
        Next
    End With
    '|fffd||fffd||221||ff||fffd||fffd||fffd||5b6||3b5||135||fffd||5b7||fffd||fffd||fffd||fffd||fffd||fffd||fffd||5b7||fffd||fffd||fffd|
    With ThisWorkbook.Sheets("Config")
        arr3 = .[ae1].Resize(2, 30).Value
        srow = .Cells(.Rows.Count, "BO").End(xlUp).Row
        arr = .[bo1].Resize(srow, 2).Value
        strBankName = .[q1].Value
        strSwiftCode = "Swift Code"
    End With
    strCountry = ThisWorkbook.Sheets("Main").[D3].Value
    
    With sht
        '|fffd||6efb||fffd||fffd||fffd||fffd||fffd||5b7||fffd|
        For i = 1 To 30
            If arr3(1, i) = "" Then
                Exit For
            End If
            inRep = InStr(1, arr3(2, i), "[REP]")
            If inRep > 0 Then
                .Range(arr3(1, i)).Value = repSpecial(.Range(arr3(1, i)).Value, arrAll, dicrep2, dicREP, strCountry, .Range(arr3(1, i)).Offset(0, -1).Value)
            End If
        Next
        '|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
        For i = 1 To 30
            If arr3(1, i) = "" Then
                Exit For
            End If
            inLen = InStr(1, arr3(2, i), "[C]")
            If inLen > 0 Then
                If Len(.Range(arr3(1, i)).Value) = 0 Then
                    MsgBox "Compulsory to input---" & .Range(arr3(1, i)).Offset(0, -1).Value
                    bolOK = False
                    Exit Sub
                End If
            End If
        Next
        '|fffd||fffd||fffd||5bb||fffd||fffd||fffd||fffd||434||fffd||fffd||fffd||5ba||374||fffd||434||fffd||5b7||fffd|
        For i = 1 To 30
            If arr3(1, i) = "" Then
                Exit For
            End If
            inNum = InStr(1, arr3(2, i), "[UNUM]")
            bolLen = True
            If inNum > 0 Then
                For j = 1 To Len(.Range(arr3(1, i)).Value)
                    istr = Mid(.Range(arr3(1, i)).Value, j, 1)
                    If Asc(istr) < 48 Or (Asc(istr) > 57 And Asc(istr) < 65) Or Asc(istr) > 90 Then
                        bolLen = False
                        Exit For
                    End If
                Next
                If bolLen = False Then
                    MsgBox "Only Letter or number allowed--" & .Range(arr3(1, i)).Offset(0, -1).Value
                    bolOK = False
                    Exit Sub
                End If
            End If
        Next
        '|fffd||fffd||fffd||5bb||fffd||fffd||fffd||fffd||fffd||434||fffd||5b7||fffd|
        For i = 1 To 30
            If arr3(1, i) = "" Then
                Exit For
            End If
            inNum = InStr(1, arr3(2, i), "[UCASE]")
            bolLen = True
            If inNum > 0 Then
                For j = 1 To Len(.Range(arr3(1, i)).Value)
                    istr = Mid(.Range(arr3(1, i)).Value, j, 1)
                    If Asc(istr) < 65 Or Asc(istr) > 90 Then
                        bolLen = False
                        Exit For
                    End If
                Next
                If bolLen = False Then
                    MsgBox "Only Letter allowed--" & .Range(arr3(1, i)).Offset(0, -1).Value
                    bolOK = False
                    Exit Sub
                End If
            End If
        Next
        '|fffd||fffd||fffd||bc||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
        For i = 1 To 30
            If arr3(1, i) = "" Then
                Exit For
            End If
            inLen = InStr(1, arr3(2, i), "[LEN]")
            If inLen > 0 And Len(.Range(arr3(1, i)).Value) > 0 Then
                If Mid(arr3(2, i), inLen + 5, 1) <> "L" And Mid(arr3(2, i), inLen + 5, 1) <> "S" And Mid(arr3(2, i), inLen + 5, 1) <> "B" And Mid(arr3(2, i), inLen + 5, 1) <> "N" Then
                    tempLen = Split(Split(Right(arr3(2, i), Len(arr3(2, i)) - inLen - 4), "_")(0), "\")
                    bolLen = False
                    For j = 0 To UBound(tempLen)
                        If Len(.Range(arr3(1, i)).Value) = CLng(tempLen(j)) Then
                            bolLen = True
                            Exit For
                        End If
                    Next
                ElseIf Mid(arr3(2, i), inLen + 5, 1) = "L" Then
                    bolLen = False
                    ilen = CLng(Split(Right(arr3(2, i), Len(arr3(2, i)) - inLen - 6), "_")(0))
                    If Len(.Range(arr3(1, i)).Value) <= ilen Then
                        bolLen = True
                    End If
                ElseIf Mid(arr3(2, i), inLen + 5, 1) = "S" Then
                    istr = UCase(Split(Split(Right(arr3(2, i), Len(arr3(2, i)) - inLen - 4), "_")(0), "\")(1))
                    ilen = CLng(Split(Split(Right(arr3(2, i), Len(arr3(2, i)) - inLen - 4), "_")(0), "\")(2))
                    bolLen = True
                    '|fffd||fffd|Bank name
                    Set C = .Columns("A").Find(strBankName, lookat:=xlPart, LookIn:=xlValues, MatchCase:=False)
                    If Not C Is Nothing Then
                        If UCase(C.Offset(0, 1).Value) Like "*" & istr & "*" And Len(.Range(arr3(1, i)).Value) <> ilen Then
                            bolLen = False
                        End If
                    End If
                ElseIf Mid(arr3(2, i), inLen + 5, 1) = "B" Then
                    istr = UCase(Split(Split(Right(arr3(2, i), Len(arr3(2, i)) - inLen - 4), "_")(0), "\")(1))
                    ilen = CLng(Split(Split(Right(arr3(2, i), Len(arr3(2, i)) - inLen - 4), "_")(0), "\")(2))
                    bolLen = True
                    '|fffd||fffd|Swift code
                    Set C = .Columns("A").Find(strSwiftCode, lookat:=xlPart, LookIn:=xlValues, MatchCase:=False)
                    If Not C Is Nothing Then
                        If UCase(C.Offset(0, 1).Value) = istr And Len(.Range(arr3(1, i)).Value) <> ilen Then
                            bolLen = False
                        End If
                    End If
                ElseIf Mid(arr3(2, i), inLen + 5, 1) = "N" Then
                    strField = UCase(Split(Split(Right(arr3(2, i), Len(arr3(2, i)) - inLen - 4), "_")(0), "\")(1))
                    istr = UCase(Split(Split(Right(arr3(2, i), Len(arr3(2, i)) - inLen - 4), "_")(0), "\")(2))
                    ilen = CLng(Split(Split(Right(arr3(2, i), Len(arr3(2, i)) - inLen - 4), "_")(0), "\")(3))
                    bolLen = True
                    '|fffd||fffd|Swift code
                    Set C = .Columns("A").Find(strField, lookat:=xlPart, LookIn:=xlValues, MatchCase:=False)
                    If Not C Is Nothing Then
                        If UCase(C.Offset(0, 1).Value) <> istr And Len(.Range(arr3(1, i)).Value) <> ilen Then
                            bolLen = False
                        End If
                    End If
                End If
                If bolLen = False Then
                    MsgBox "String length is incorrect---" & .Range(arr3(1, i)).Offset(0, -1).Value
                    bolOK = False
                    Exit Sub
                End If
            Else
                '|fffd||5bd||6b3||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
                istr = UCase(.Range(arr3(1, i)).Offset(0, -1).Value)
                ilen = 0
                For j = 2 To srow
                    If istr Like "*" & UCase(Trim(arr(j, 1))) & "*" Then
                        ilen = arr(j, 2)
                        Exit For
                    End If
                Next
                If ilen > 0 Then
                    slen = 0
                    For j = 1 To Len(.Range(arr3(1, i)).Value)
                        istr = Mid(.Range(arr3(1, i)).Value, j, 1)
                        If Asc(istr) > 0 Then
                            slen = slen + 1
                        ElseIf Asc(istr) < -22542 Then
                            slen = slen + 2
                        Else
                            slen = slen + 3
                        End If
                    Next
                    If slen > ilen Then
                        MsgBox "String length is incorrect---" & .Range(arr3(1, i)).Offset(0, -1).Value
                        bolOK = False
                        Exit Sub
                    End If
                End If
            End If
        Next
        '|fffd||fffd||fffd||bc||fffd||fffd||5bb||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
        For i = 1 To 30
            If arr3(1, i) = "" Then
                Exit For
            End If
            inNum = InStr(1, arr3(2, i), "[NUM]")
            If inNum > 0 Then
                If Not IsNumeric(.Range(arr3(1, i)).Value) Then
                    MsgBox "Nonnumeric is not allowed---" & .Range(arr3(1, i)).Offset(0, -1).Value
                    bolOK = False
                    Exit Sub
                End If
            End If
        Next
        '|fffd||fffd||fffd||bc||fffd||fffd||fffd||221||fffd||fffd||fffd||5b7||fffd||fffd||fffd|
        For i = 1 To 30
            If arr3(1, i) = "" Then
                Exit For
            End If
            inCut0 = InStr(1, arr3(2, i), "[CUT0]")
            If inCut0 > 0 Then
                If Len(.Range(arr3(1, i)).Value) > 0 Then
                    For j = 1 To 30
                        inCut = InStr(1, arr3(2, j), "[CUT]")
                        If inCut > 0 Then
                            tempCut = Split(Split(Right(arr3(2, j), Len(arr3(2, j)) - inCut - 4), "_")(0), "\")
                            bolOK = False
                            If UBound(tempCut) = 1 Then
                                If .Range(arr3(1, j)).Value = Mid(.Range(arr3(1, i)).Value, tempCut(0), tempCut(1)) Then
                                    bolOK = True
                                Else
                                    '|fffd||436||fffd||fffd||1f7||fffd||fffd||432||fffd||fffd||fffd|
                                    bolOK = CUTSUP(arr3(2, j), .Range(arr3(1, j)).Value, tempCut(1), Mid(.Range(arr3(1, i)).Value, tempCut(0), tempCut(1)))
                                End If
                            Else
                                '|fffd||fffd|Bank Name|fffd||fffd||5b5|
                                Set C = .Columns("A").Find(strBankName, lookat:=xlPart, LookIn:=xlValues, MatchCase:=False)
                                If Not C Is Nothing Then
                                    If UCase(C.Offset(0, 1).Value) Like "*" & UCase(tempCut(0)) & "*" Then
                                        If .Range(arr3(1, j)).Value = Mid(.Range(arr3(1, i)).Value, tempCut(1), tempCut(2)) Then
                                            bolOK = True
                                        Else
                                            '|fffd||436||fffd||fffd||1f7||fffd||fffd||432||fffd||fffd||fffd|
                                            bolOK = CUTSUP(arr3(2, j), .Range(arr3(1, j)).Value, tempCut(2), Mid(.Range(arr3(1, i)).Value, tempCut(1), tempCut(2)))
                                        End If
                                    Else
                                        If .Range(arr3(1, j)).Value = Mid(.Range(arr3(1, i)).Value, tempCut(3), tempCut(4)) Then
                                            bolOK = True
                                        Else
                                            '|fffd||436||fffd||fffd||1f7||fffd||fffd||432||fffd||fffd||fffd|
                                            bolOK = CUTSUP(arr3(2, j), .Range(arr3(1, j)).Value, tempCut(4), Mid(.Range(arr3(1, i)).Value, tempCut(3), tempCut(4)))
                                        End If
                                    End If
                                End If
                            End If
                            If bolOK = False Then
                                MsgBox "Incorrect Value---" & .Range(arr3(1, j)).Offset(0, -1).Value
                                bolOK = False
                                Exit Sub
                            End If
                        End If
                    Next
                End If
            End If
        Next
        '|fffd||fffd||fffd||fffd||fffd||36c||fffd||fffd||5b5||fffd||1f7||fffd||fffd||fffd||fffd|
        For i = 1 To 30
            If arr3(1, i) = "" Then
                Exit For
            End If
            inSam = InStr(1, arr3(2, i), "[SAM]")
            If inSam > 0 Then
                strSam = Split(Right(arr3(2, i), Len(arr3(2, i)) - inSam - 4), "_")(0)
                strVAL = CStr(.Range(arr3(1, i)).Value)
                For j = 1 To 30
                    If arr3(1, j) = "" Then
                        Exit For
                    End If
                    If Len(arr3(2, j)) > 0 Then
                        If InStr(1, arr3(2, j), "[SAM]" & strSam) > 0 Then
                            If strVAL <> CStr(.Range(arr3(1, j)).Value) Then
                                MsgBox "The text of these two are different.----" & .Range(arr3(1, j)).Offset(0, -1).Value & "," & .Range(arr3(1, i)).Offset(0, -1).Value
                                bolOK = False
                                Exit Sub
                            End If
                        End If
                    End If
                Next
            End If
        Next
        '|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
        For i = 1 To 30
            If arr3(1, i) = "" Then
                Exit For
            End If
            inSam = InStr(1, arr3(2, i), "[SAMAS]0")
            If inSam > 0 Then
                strVAL = CStr(.Range(arr3(1, i)).Value)
                If strVAL <> "" Then
                    For j = 1 To 30
                        If arr3(1, j) = "" Then
                            Exit For
                        End If
                        If InStr(1, arr3(2, j), "[SAMAS]1") > 0 Then
                            If strVAL <> CStr(.Range(arr3(1, j)).Value) Then
                                MsgBox "The text of these two are different.----" & .Range(arr3(1, j)).Offset(0, -1).Value & "," & .Range(arr3(1, i)).Offset(0, -1).Value
                                bolOK = False
                                Exit Sub
                            End If
                        End If
                    Next
                End If
            End If
        Next
        '|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||5b7|
        inNum = 0
        For i = 1 To 30
            If arr3(1, i) = "" Then
                Exit For
            End If
            inNum = InStr(1, arr3(2, i), "[EMAIL]")
            If inNum > 0 Then
            '***********************************
                If .Range(arr3(1, i)).Value = "" Then
                     MsgBox "please fill in finance Email address"
                    bolOK = False
                    Exit Sub
                End If
                '****************************************************
                If Trim(.Range(arr3(1, i)).Value) <> "" Then
                    If Not .Range(arr3(1, i)).Value Like "*@*" Then
                        MsgBox "Incorrect eMail address---" & .Range(arr3(1, i)).Value
                        bolOK = False
                        Exit Sub
                    End If
                End If
            End If
        Next
        '|fffd||fffd||fffd||7ef0||fffd||fffd||fffd||fffd|
        inNum = 0
        For i = 1 To 30
            If arr3(1, i) = "" Then
                Exit For
            End If
            inNum = InStr(1, arr3(2, i), "[PHONE]")
            If inNum > 0 Then
                '******************************
               If .Range(arr3(1, i)).Value = "" Then
                     MsgBox "please fill in phone number"
                    bolOK = False
                    Exit Sub
               End If
               '***************************************
                For j = 1 To Len(.Range(arr3(1, i)).Value)
                    strPhone = Mid(.Range(arr3(1, i)).Value, j, 1)
                    If strPhone <> "+" And strPhone <> "-" And strPhone <> " " And Not IsNumeric(strPhone) Then
                        MsgBox "Phone Number should be made up of number,+ or -"
                        bolOK = False
                        Exit Sub
                    End If
                Next
            End If
        Next
        '|423||fffd||fffd||fffd||fffd||4b4||fffd||fffd||fffd||fffd|IBAN|fffd||fffd|swiftcode|4bb||fffd||fffd||fffd||fffd|
        If dicCountrySh.exists(UCase(strCountry)) Then
            Set C = .Columns(1).Find("Swift Code", lookat:=xlPart, LookIn:=xlValues, MatchCase:=False)
            If Not C Is Nothing Then
                If C.Offset(0, 1).Value <> "" Then
                    If dicCountrySh(UCase(strCountry)) <> UCase(Mid(C.Offset(0, 1).Value, 5, 2)) Then
                        MsgBox "5-6 digits of swift code is different from Country Code---" & dicCountrySh(UCase(strCountry))
                        'bolOK = False
                        'Exit Sub
                    End If
                End If
            End If
            Set C = .Columns(1).Find("IBAN", lookat:=xlPart, LookIn:=xlValues, MatchCase:=False)
            If Not C Is Nothing Then
                If C.Offset(0, 1).Value <> "" Then
                    If dicCountrySh(UCase(strCountry)) <> UCase(Left(C.Offset(0, 1).Value, 2)) Then
                        MsgBox "1-2 digits of IBAN is different from Country Code---" & dicCountrySh(UCase(strCountry))
                        'bolOK = False
                        'Exit Sub
                    End If
                End If
            End If
        Else
            MsgBox "Can't find Country Code, Please check whether the 5-6 digits of swift code is the same as Country Code."
        End If
        
        '|fffd||fffd||9e69||4e6||fffd||fffd||fffd||fffd||fffd||1ba||fffd||fffd||57f||fffd||fffd||fffd||fffd||fffd||fffd||fffd||4bb||fffd||fffd||fffd||fffd|
        'For i = 1 To 30
            'If arr3(1, i) = "" Then
            'Exit For
           'End If
            'inSam = InStr(1, arr3(2, i), "[SAM0]")
            'If inSam > 0 Then
                'strSam = Split(Right(arr3(2, i), Len(arr3(2, i)) - inSam - 5), "_")(0)
               'If UCase(CStr(.Range(arr3(1, i)).Value)) <> UCase(CStr(.Range(strSam).Value)) Then
                    'MsgBox "The bank account name is different from supplier name, Please confirm whether correct."
                'End If
            'End If
        'Next
        '|fffd||439||fffd||fffd||fffd|swiftCode|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||1f7||fffd|CNY|2b1||3aa||fffd||fffd||fffd||fffd||fffd||fffd|
        If strCountry = ThisWorkbook.Sheets("ConfigSpecial").[e1].Value Then
            If .[B15].Value <> "CNY" And .[b9] = "" Then
                MsgBox "Compulsory to input---" & .[a9].Value
                bolOK = False
                Exit Sub
            End If
        End If
        'Next
        '|fffd||439||fffd||fffd||fffd|swiftCode|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||1f7||fffd|CNY|2b1||3aa||fffd||fffd||fffd||fffd||fffd||fffd|
        'If strCountry = ThisWorkbook.Sheets("ConfigSpecial").[e1].Value Then
            'If .[B23].Value <> "CNY" And .[b24].[b25] = "" Then
                'MsgBox "Compulsory to input---" & .[b24].[b25].Value
               'bolOK = False
                'Exit Sub
            'End If
        'End If
        '|fffd||fffd||5e2||fffd||1f1||fffd||fffd||fffd||fffd|[CH]
        For i = 1 To 30
            If arr3(1, i) = "" Then
                Exit For
            End If
            inCH = InStr(1, arr3(2, i), "[CH]")
            inC = InStr(1, arr3(2, i), "[C]")
            If inCH > 0 And inC = 0 And .Range(arr3(1, i)).Value = "" Then
                pstr = pstr & "," & .Range(arr3(1, i)).Row
            End If
        Next
    End With
End Sub
Function repSpecial(ByVal istr As String, ByVal arrAll As Variant, ByRef dicrep2 As Object, ByRef dicREP As Object, ByVal strCountry As String, ByVal stracount As String) As String
    '|fffd||436||fffd||fffd||5b7||fffd||fffd||fffd||fffd||fffd||fffd||1f7||fffd||fffd||437||1f7||fffd||fffd||5b7||fffd||fffd||fffd||fffd||fffd||fffd||423||fffd||fffd||fffd||9c34||fffd||fffd||fffd||fffd||2f3||fffd||fffd||1f7||fffd||fffd||5b7||fffd|+|fffd||fffd||fffd||fffd|+|fffd||5b6||fffd|/|fffd||1f7||fffd||fffd||5b7||fffd|+|fffd||fffd||fffd||fffd|+ALL/|fffd||1f7||fffd||fffd||5b7||fffd|+ALL+|fffd||5b6||fffd|/|fffd||1f7||fffd||fffd||5b7||fffd|+ALL+ALL|fffd||fffd||4e6||fffd||fffd||fffd||6efb||fffd||5b7||fffd||fffd||fffd||fffd||fffd||fffd||6efb|
    Dim i As Long
    Dim ikey1 As String, ikey2 As String, ikey3 As String, ikey4 As String
    Dim ikeys
    ikeys = dicREP.keys
    strCountry = Trim(UCase(strCountry))
    stracount = Trim(UCase(stracount))
    '|fffd||4b5||fffd||fffd||fffd||fffd||fffd||5b6||3b6||fffd||4e6||fffd||13c||fffd||434||fffd||5b6||fffd||fffd||fffd|
    For i = 1 To UBound(arrAll)
        If stracount Like "*" & Trim(UCase(arrAll(i, 1))) & "*" Then
            stracount = Trim(UCase(arrAll(i, 1)))
            Exit For
        End If
    Next
    For i = 0 To UBound(ikeys)
        If InStr(1, istr, ikeys(i)) <> 0 Then
            ikey1 = ikeys(i) & strCountry & stracount
            ikey2 = ikeys(i) & strCountry & "ALL"
            ikey3 = ikeys(i) & "ALL" & stracount
            ikey4 = ikeys(i) & "ALLALL"
            If dicrep2.exists(ikey1) Then
                istr = Replace(istr, ikeys(i), dicrep2(ikey1))
            ElseIf dicrep2.exists(ikey2) Then
                istr = Replace(istr, ikeys(i), dicrep2(ikey2))
            ElseIf dicrep2.exists(ikey3) Then
                istr = Replace(istr, ikeys(i), dicrep2(ikey3))
            ElseIf dicrep2.exists(ikey4) Then
                istr = Replace(istr, ikeys(i), dicrep2(ikey4))
            End If
        End If
    Next
    repSpecial = istr
End Function

Sub test()
    Dim dic
    Set dic = CreateObject("scripting.dictionary")
    dic.Add [a39].Value, 1
    dic.Add [a31].Value, 5
    If dic.exists([a31].Value) Then
        MsgBox dic([a31].Value)
    End If
End Sub
Sub TEST2()
    Dim i As Long
    For i = 1 To 50000
        Cells(i, 2).Value = Chr(i)
    Next
End Sub
Attribute VB_Name = "m_GenerateTemplate"
Option Explicit

Sub Choose_Country()
    Find.Show
End Sub
Sub Search_show()
    Search.Show 0
End Sub
Sub Generate()
    
    Dim strCountry As String
    Dim strD As String
    Dim strVa As String
    Dim tempDef
    
    Dim C As Range
    Dim sht As Worksheet
    Dim shtConfig As Worksheet
    
    Dim arrTitle As Range
    Dim arrRule, arr1, arr2
    Dim nam As Name
    
    Dim iC As Long
    Dim inD As Long
    Dim inM As Long
    Dim inVA As Long
    Dim istart As Long
    Dim ilen As Long
    Dim jcol As Long
    Dim inVc As Long
    Dim colConfig As Long
    Dim inDef As Long
    Dim inCut As Long
    Dim intRH As Long '|fffd||fffd||fffd||fffd||fffd||fffd|
    Dim intRS As Long '|fffd||438||fffd|
    Dim strRS As String
    
    Dim i As Long
    Dim irow As Long
    Dim scol As Long
    Dim srow As Long
    
    Dim sha As Shape
    
    Dim bolConfig As Boolean
    bolConfig = False
    
    Application.EnableEvents = False
    Application.ScreenUpdating = False
    Application.DisplayAlerts = False
    On Error Resume Next
    ThisWorkbook.Sheets("Template").Delete
    For Each sht In ThisWorkbook.Sheets
        If sht.Visible = -1 And sht.Name Like "_*" Then
            sht.Visible = 2
        End If
    Next
    For Each sht In ThisWorkbook.Sheets
        If sht.Visible = -1 And sht.Name Like "Privacy Statement*" Then
            sht.Visible = 2
        End If
    Next
    On Error GoTo exitsub
    'On Error GoTo 0
    strCountry = ThisWorkbook.Sheets("Main").[D3].Value
    For Each nam In ThisWorkbook.Names
        nam.Delete
    Next
    '|fffd||fffd||fffd||fffd||fffd||5b7||fffd||fffd||fffd|
    With ThisWorkbook.Sheets("Config")
        ThisWorkbook.Sheets("CurrencyConfig").Columns("c").Copy .[BI1]
        srow = .Cells(.Rows.Count, 61).End(xlUp).Row
        .[BI1].Resize(srow, 1).RemoveDuplicates Columns:=1, Header:=xlYes
        srow = .Cells(.Rows.Count, 61).End(xlUp).Row
        .[BI1].Resize(srow, 1).Sort KEY1:=.Columns("BI"), order1:=xlAscending, Header:=xlYes
        srow = .Cells(.Rows.Count, 61).End(xlUp).Row
        ThisWorkbook.Names.Add Name:="strCurrency", RefersToR1C1:="=Config!R2C61:R" & srow & "C61"
    End With
    
    ThisWorkbook.Sheets("Config").[br2].Resize(ThisWorkbook.Sheets("Config").UsedRange.Rows.Count - 1, 3).ClearContents
    
    '|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||4b5||fffd||5a7||fffd||43a||163||fffd||2a1||fffd||77a||373||fffd||fffd||43f||fffd||fffd||fffd||fffd||fffd|COnfig|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||5b5||fffd|dicPC
    'If strCountry = ThisWorkbook.Sheets("ConfigSpecial").[e1].Value Then
        Call CopyPC(strCountry)
    'End If
    Dim shtPrivacy As Worksheet
    If UCase(strCountry) = "JAPAN" Then
        Set shtPrivacy = ThisWorkbook.Sheets("Privacy Statement(Japan)")
    ElseIf UCase(strCountry) = "KOREA, REPUBLIC OF" Then
        Set shtPrivacy = ThisWorkbook.Sheets("Privacy Statement(Korea)")
    ElseIf UCase(strCountry) = "CHINA" Then
        Set shtPrivacy = ThisWorkbook.Sheets("Privacy Statement(China)")
    ElseIf UCase(strCountry) = UCase("Cote d'Ivoire") Then
        Set shtPrivacy = ThisWorkbook.Sheets("Privacy Statement(Cote)")
    ElseIf UCase(strCountry) = UCase("Italy") Then
        Set shtPrivacy = ThisWorkbook.Sheets("Privacy Statement(Italy)")
    Else
        Set shtPrivacy = ThisWorkbook.Sheets("Privacy Statement(ENCN)")
    End If
    shtPrivacy.Visible = -1
    shtPrivacy.[a1] = False
    If UCase(strCountry) = "JAPAN" Then
        Call GenerateJapan(strCountry)
    ElseIf UCase(strCountry) = "CHINA" Then 'ThisWorkbook.Sheets("ConfigSpecial").[e1].Value Then  'china|fffd||439||fffd|
        Call GenerateChina(strCountry)
    ElseIf UCase(strCountry) = "BRAZIL" Then
        Call GenerateBrazil(strCountry)
    ElseIf UCase(strCountry) = "ECUADOR" Then
        Call GenerateEcuador(strCountry)
    ElseIf UCase(strCountry) = "KOREA, REPUBLIC OF" Then 'Korea, Republic of
        Call GenerateKorea(strCountry)
    ElseIf UCase(strCountry) = "RUSSIAN FEDERATION" Then
        Call GenerateRussia(strCountry)
    ElseIf UCase(strCountry) = "UNITED STATES" Then
        Call GenerateUnitedStates(strCountry)
    ElseIf UCase(strCountry) = UCase("Cote d'Ivoire") Then
        Call GenerateCotedIv(strCountry)
    Else
        With ThisWorkbook.Sheets("Rule")
            scol = .Cells(1, .Columns.Count).End(xlToLeft).Column - 1
            Set C = .Columns(1).Find(strCountry, LookIn:=xlValues, lookat:=xlWhole, MatchCase:=False)
            If Not C Is Nothing Then
                Set arrTitle = .[b1].Resize(1, scol)
                arrRule = .Cells(C.Row, 2).Resize(1, scol).Value
            Else
                Set arrTitle = .[b1].Resize(1, scol)
                arrRule = .Cells(.Cells(.Rows.Count, 1).End(xlUp).Row + 1, 2).Resize(1, scol).Value
                
                MsgBox "Bank Country is not exist."
                GoTo exitsub
            End If
        End With
        
        Set shtConfig = ThisWorkbook.Sheets("Config")
        shtConfig.UsedRange.Offset(1, 0).Resize(, 5).ClearContents
        '|278||461||fffd||fffd||fffd||fffd|---|fffd||fffd|BankConfig|fffd||175||fffd||fffd||fffd||fffd||fffd||fffd||fffd||427||fffd||fffd||fffd||fffd||fffd||a3b36||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
        With ThisWorkbook.Sheets("BankConfig")
            .AutoFilterMode = False
            srow = .Cells(.Rows.Count, 5).End(xlUp).Row
            jcol = .Cells(1, .Columns.Count).End(xlToLeft).Column
            Set C = .Columns(5).Find(strCountry, LookIn:=xlValues, lookat:=xlWhole, MatchCase:=False)
            If Not C Is Nothing Then
                arr1 = Array(6, 3, 8, 9, 10)
                arr2 = Array(1, 2, 3, 4, 5)
                .[a1].Resize(srow, jcol).AutoFilter Field:=5, Criteria1:=C.Value
                For i = 0 To UBound(arr1)
                    .Cells(1, arr1(i)).Resize(srow, 1).SpecialCells(xlCellTypeVisible).Copy shtConfig.Cells(1, arr2(i))
                Next
                bolConfig = True
                .AutoFilterMode = False
            Else
                bolConfig = False
            End If
        End With
        
        If bolConfig Then
            With shtConfig
                arr1 = Array("_F", "_C", "_H", "_I", "_J")
                arr2 = Array(1, 2, 3, 4, 5)
                For i = 0 To UBound(arr1)
                    srow = .Cells(.Rows.Count, arr2(i)).End(xlUp).Row
                    If srow > 1 Then
                        .Cells(1, arr2(i)).Resize(srow, 1).RemoveDuplicates Columns:=1, Header:=xlYes
                    End If
                    srow = .Cells(.Rows.Count, arr2(i)).End(xlUp).Row
                    .Cells(1, arr2(i)).Resize(srow, 1).Sort KEY1:=.Columns(arr2(i)), order1:=xlDescending, Header:=xlYes
                    srow = .Cells(.Rows.Count, arr2(i)).End(xlUp).Row
                    .Cells(1, arr2(i)).Resize(srow, 1).Sort KEY1:=.Columns(arr2(i)), order1:=xlAscending, Header:=xlYes
                    ThisWorkbook.Names.Add Name:=arr1(i), RefersToR1C1:="=Config!R2C" & arr2(i) & ":R" & srow & "C" & arr2(i)
                Next
                .[p2].Resize(1, 15).ClearContents
                .[p4].Resize(1, 15).ClearContents
            End With
        End If
        
        i = ThisWorkbook.Sheets("Head").Visible
        ThisWorkbook.Sheets("Head").Visible = -1
        ThisWorkbook.Sheets("Head").Copy before:=ThisWorkbook.Sheets("Main")
        Set sht = ActiveSheet
        sht.Name = "Template"
        ThisWorkbook.Sheets("Head").Visible = i
        
        With sht
            .Unprotect 123
            '.Activate
            irow = .Cells(.Rows.Count, 1).End(xlUp).Row + 1
            srow = irow - 1
            colConfig = 1
            shtConfig.Cells(1, 31).Resize(2, 30).ClearContents
            For i = 1 To scol
                '|fffd||1f7||fffd||fffd||fffd||2be|
                'If arrTitle(1, i).Interior.Color = RGB(83, 142, 213) Or arrRule(1, i) Like "*[V]*" Then
                If arrRule(1, i) <> "" Then
                    .Cells(irow, 1).Value = arrTitle(1, i).Value & ":"
                    .Cells(irow, 1).Locked = True
                    .Cells(irow, 2).Locked = False
                    '|fffd||1f7||fffd||fffd||fffd||fffd|
                    Call ComporaryToInput(sht, arrRule(1, i), arrTitle(1, i).Value, irow)

                    '|fffd||1f7||fffd||3f2||fffd||fffd||fffd||431||fffd||fffd|
                    inM = InStr(1, arrRule(1, i), "[M]")
                    If inM > 0 Then
                        .Cells(irow, 1).Resize(1, 2).Merge
                        .Cells(irow, 1).Resize(1, 2).Font.Italic = True
                    End If
                    '|fffd||1f7||fffd||336||fffd||fffd||438||fffd|
                    intRH = InStr(1, arrRule(1, i), "[RH]")
                    If intRH > 0 Then
                        strRS = Trim(UCase(Split(Right(arrRule(1, i), Len(arrRule(1, i)) - intRH - 3), "_")(0)))
                        .Cells(irow, 1).RowHeight = CLng(strRS)
                    End If
                    '|fffd||1f7||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
                    intRS = InStr(1, arrRule(1, i), "[RS]")
                    If intRS > 0 Then
                        strRS = Trim(UCase(Split(Right(arrRule(1, i), Len(arrRule(1, i)) - intRS - 3), "_")(0)))
                         With .Cells(irow, 2)
                                .HorizontalAlignment = xlRight
                                .VerticalAlignment = xlCenter
                                .WrapText = True
                                .Orientation = 0
                                .AddIndent = False
                                .IndentLevel = strRS
                                .ShrinkToFit = False
                                .ReadingOrder = xlContext
                                .MergeCells = False
                        End With
                    Else
                        .Cells(irow, 2).WrapText = True
                    End If
                    '|fffd||131||fffd||fffd||fffd||2bd|
                    .Cells(irow, 2).NumberFormatLocal = "@"
                    '|fffd||1f7||fffd||fffd||fffd||fffd|
                    If i = 1 Then
                        .Cells(irow, 2).Value = strCountry
                        .Cells(irow, 2).Locked = True
                    End If
                    
                    '|fffd||1f7||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||427||fffd||fffd|
                    inVA = InStr(1, arrRule(1, i), "[Va]")
                    If inVA > 0 Then
                        strVa = Trim(UCase(Split(Right(arrRule(1, i), Len(arrRule(1, i)) - inVA - 3), "_")(0)))
                        If bolConfig Then
                            With .Cells(irow, 2).Validation
                                .Delete
                                .Add Type:=xlValidateList, AlertStyle:=xlValidAlertStop, Operator:=xlBetween, Formula1:="=_" & strVa
                                .ShowError = False
                            End With
                        End If
                        '|fffd||fffd||bc||fffd||fffd||fffd||fffd||fffd||52a||fffd||fffd||fffd||5b7||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||134||fffd||fffd||fffd|
                        Select Case strVa
                            Case "F"
                                jcol = 16
                            Case "C"
                                jcol = 17
                            Case "H"
                                jcol = 18
                            Case "I"
                                jcol = 19
                            Case "J"
                                jcol = 20
                        End Select
                        shtConfig.Cells(2, jcol).Value = .Cells(irow, 2).Address
                    End If
                    '|fffd||fffd||fffd||5b5||fffd||fffd||fffd||fffd||fffd||fffd||fffd||427||fffd||fffd|
                    inVc = InStr(1, arrRule(1, i), "[Vc]")
                    If inVc > 0 Then
                        With .Cells(irow, 2).Validation
                            .Delete
                            .Add Type:=xlValidateList, AlertStyle:=xlValidAlertStop, Operator:=xlBetween, Formula1:="=strCurrency"
                            .ShowError = True
                        End With
                    End If
                    '|12c||fffd||fffd||5b5|
                    inDef = InStr(1, arrRule(1, i), "[DEF]")
                    If inDef > 0 Then
                        tempDef = Split(Split(Right(arrRule(1, i), Len(arrRule(1, i)) - inDef - 4), "_")(0), "\")
                        If UBound(tempDef) = 0 Then
                            .Cells(irow, 2).Value = tempDef(0)
                            '|fffd||fffd||fffd||fffd||12c||fffd||fffd||5b5|
                            .Cells(irow, 2).Locked = True
                            '***************************************
                        Else
                            With .Cells(irow, 2).Validation
                                .Delete
                                .Add Type:=xlValidateList, AlertStyle:=xlValidAlertStop, Operator:=xlBetween, Formula1:=Replace(Split(Right(arrRule(1, i), Len(arrRule(1, i)) - inDef - 4), "_")(0), "\", ",")
                                If Not UCase(sht.Cells(irow, 1).Value) Like "*ACCOUNT TYPE*" Then
                                    .ShowError = False
                                End If
                            End With
                        End If
                    End If
                    '|fffd||fffd||fffd||fffd||fffd||fffd||221|
                    inCut = InStr(1, arrRule(1, i), "[CUT]")
                    If inCut > 0 Then
                        strVa = Trim(UCase(Split(Right(arrRule(1, i), Len(arrRule(1, i)) - inCut - 4), "_")(0)))
                        If UBound(Split(strVa, "\")) = 1 Then
                            .Cells(irow, 2).Locked = True
                        End If
                    End If
                    '|fffd||fffd||bc||fffd||fffd||fffd||435||fffd||5b7||fffd||fffd||4e6||fffd||139||fffd||fffd||fffd|
                    shtConfig.Cells(1, 30 + colConfig).Value = .Cells(irow, 2).Address
                    shtConfig.Cells(2, 30 + colConfig).Value = arrRule(1, i)
                    colConfig = colConfig + 1
                    irow = irow + 1
                End If
            Next
            '|fffd||fffd||fffd||fffd||fffd||5b7||4aa||fffd||fffd|@
            shtConfig.Cells(1, 30 + colConfig).Value = "$B$12"
            shtConfig.Cells(2, 30 + colConfig).Value = "[EMAIL]"
            colConfig = colConfig + 1
            '|fffd||fffd||3f5||fffd||2f5||7ef0||5bb||fffd||fffd|-|fffd||fffd|+|fffd||fffd||fffd||fffd||fffd||fffd|
            shtConfig.Cells(1, 30 + colConfig).Value = "$B$13"
            shtConfig.Cells(2, 30 + colConfig).Value = "[PHONE]"
            colConfig = colConfig + 1
'            '|fffd||fffd||4e6||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||4aa||fffd||6efb||fffd||1f7||fffd||fffd||5b7||fffd|
'            shtConfig.Cells(1, 30 + colConfig).Value = "$B$10"
'            shtConfig.Cells(2, 30 + colConfig).Value = "[REP]"
            With .Cells(srow + 1, 1).Resize(irow - srow, 2)
                .Font.Name = "Arial"
                .Borders.LineStyle = xlContinuous
                '.WrapText = True
            End With
            With .Cells(srow + 1, 1).Resize(irow - srow, 1)
                .WrapText = True
            End With
            For i = srow + 1 To irow
                If .Rows(i).RowHeight < 20 And .Rows(i).RowHeight <> 0 Then
                    .Rows(i).RowHeight = 20
                End If
            Next
            Set C = .Columns("a").Find("Bank Name", lookat:=xlPart, MatchCase:=False)
            If Not C Is Nothing Then
                i = C.Row
            End If
            For Each sha In sht.Shapes
                If sha.Type = msoAutoShape Then
                    If sha.DrawingObject.Caption = "Search bank info" Then
                        sha.Top = .Cells(i, 3).Top
                        sha.Left = .Cells(i, 3).Left + 3
                    ElseIf sha.DrawingObject.Caption = "Clear" Then
                        sha.Top = .Cells(i, 3).Top
                        sha.Left = .Cells(i, 3).Left + 120
                        sha.Placement = xlFreeFloating
                    End If
                End If
            Next
        End With
        
        With ThisWorkbook.Sheets("Tail")
            srow = .Cells(.Rows.Count, 1).End(xlUp).Row
            .Rows("1:" & srow).Copy sht.Cells(irow, 1)
        End With
    End If
    'Code|fffd||5d65|
    With ThisWorkbook.Sheets("template")
        If shtexsits(ThisWorkbook, "_" & strCountry) Then
            Set C = .Columns("a").Find("Branch Name", lookat:=xlPart, MatchCase:=False)
            If Not C Is Nothing Then
                i = C.Row
                Call addReference(strCountry, .Cells(i, 4))
            End If
        End If
    End With
   '|fffd||47c||fffd||fffd||fffd||fffd||fffd||5e2||fffd||1b9||fffd||fffd||fffd|
   If UCase(strCountry) <> UCase("Cote d'Ivoire") Then
        Call subaddComment("Search bank info")
    Else
        Call subaddComment("Clear")
    End If
    shtPrivacy.Activate
     ActiveSheet.PageSetup.PrintArea = "$A$1:$A$3"
exitsub:
    If shtExists(ThisWorkbook, "template") Then
        ThisWorkbook.Sheets("template").Protect Password:=123, DrawingObjects:=False, Contents:=True, Scenarios:= _
            False, AllowFormattingCells:=True, AllowFormattingColumns:=True, _
            AllowFormattingRows:=True, AllowInsertingHyperlinks:=True, AllowSorting:= _
            True, AllowFiltering:=True, AllowUsingPivotTables:=True
        ThisWorkbook.Sheets("template").Visible = 0
    End If
    If Err.Number <> 0 Then
        MsgBox Err.Description
    End If
    
    Application.DisplayAlerts = True
    Application.ScreenUpdating = True
    Application.EnableEvents = True
End Sub
Sub AgreeShowTemplate()
    If [a1].Value = True Then
    ThisWorkbook.Sheets("template").Visible = -1
    ThisWorkbook.Sheets("template").Activate
    Else
        ThisWorkbook.Sheets("template").Visible = 2
    End If
End Sub
Function shtExists(ByRef wk As Workbook, ByVal shtname As String) As Boolean
    Dim sht As Worksheet
    shtExists = False
    For Each sht In wk.Sheets
        If UCase(sht.Name) = UCase(shtname) Then
            shtExists = True
            Exit For
        End If
    Next
End Function

Sub GenerateJapan(ByVal strCountry As String)
    Dim nam As Name
    Dim srow As Long
    Dim shtname As String
    Dim arr1, arr2, arr3, arr4, arr5
    Dim C As Range
    Dim jcol As Long
    Dim shtConfig As Worksheet
    Dim i As Long
    Dim bolConfig As Boolean
    
    With ThisWorkbook.Sheets("ConfigSpecial")
        srow = .[a4].End(xlDown).Row
        ThisWorkbook.Names.Add "HW", "=ConfigSpecial!R4C1:R" & srow & "C1"
        shtname = .[a2].Value
    End With
    '******************
    With ThisWorkbook.Sheets(shtname)
        .Visible = -1
        .Copy before:=ThisWorkbook.Sheets("Main")
        .Visible = 2
    End With
    ThisWorkbook.Sheets(ThisWorkbook.Sheets("Main").Index - 1).Name = "Template"
    ThisWorkbook.Sheets("Template").Unprotect 123
    '*********************************
    Set shtConfig = ThisWorkbook.Sheets("Config")
    shtConfig.UsedRange.Offset(1, 0).Resize(, 5).ClearContents
    '|278||461||fffd||fffd||fffd||fffd|---|fffd||fffd|BankConfig|fffd||175||fffd||fffd||fffd||fffd||fffd||fffd||fffd||427||fffd||fffd||fffd||fffd||fffd||fffd|
    With ThisWorkbook.Sheets("BankConfig")
        .AutoFilterMode = False
        srow = .Cells(.Rows.Count, 5).End(xlUp).Row
        jcol = .Cells(1, .Columns.Count).End(xlToLeft).Column
        Set C = .Columns(5).Find(strCountry, LookIn:=xlValues, lookat:=xlWhole, MatchCase:=False)
        If Not C Is Nothing Then
            arr1 = Array(6, 3, 8, 9, 10)
            arr2 = Array(1, 2, 3, 4, 5)
            .[a1].Resize(srow, jcol).AutoFilter Field:=5, Criteria1:=C.Value
            For i = 0 To UBound(arr1)
                .Cells(1, arr1(i)).Resize(srow, 1).SpecialCells(xlCellTypeVisible).Copy shtConfig.Cells(1, arr2(i))
            Next
            bolConfig = True
            .AutoFilterMode = False
        Else
            bolConfig = False
        End If
    End With
    '|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
    If bolConfig Then
        With shtConfig
            arr1 = Array("_F", "_C", "_H", "_I", "_J")
            arr2 = Array(1, 2, 3, 4, 5)
            arr3 = Array("$D$14", "$B$14", "$B$15", "$D$15", "$D$17")
            
            For i = 0 To UBound(arr1)
                srow = .Cells(.Rows.Count, arr2(i)).End(xlUp).Row
                If srow > 1 Then
                .Cells(1, arr2(i)).Resize(srow, 1).RemoveDuplicates Columns:=1, Header:=xlYes
                End If
                srow = .Cells(.Rows.Count, arr2(i)).End(xlUp).Row
                .Cells(1, arr2(i)).Resize(srow, 1).Sort KEY1:=.Columns(arr2(i)), order1:=xlDescending, Header:=xlYes
                srow = .Cells(.Rows.Count, arr2(i)).End(xlUp).Row
                ThisWorkbook.Names.Add Name:=arr1(i), RefersToR1C1:="=Config!R2C" & arr2(i) & ":R" & srow & "C" & arr2(i)
            Next
            .[p2].Resize(1, 15).ClearContents
            .[p4].Resize(1, 15).ClearContents
            .[p2].Resize(1, 5).Value = arr3
        End With
        '|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||427||fffd||fffd|
        With ThisWorkbook.Sheets("Template")
            .Unprotect 123
            For i = 0 To UBound(arr1)
                With .Range(arr3(i)).Validation
                    .Delete
                    .Add Type:=xlValidateList, AlertStyle:=xlValidAlertStop, Operator:=xlBetween, Formula1:="=" & arr1(i)
                    .ShowError = False
                End With
            Next
            With .Cells(13, 4).Validation
                .Delete
                .Add Type:=xlValidateList, AlertStyle:=xlValidAlertStop, Operator:=xlBetween, Formula1:="=strCurrency"
                '.ShowError = False
            End With
        End With
    End If
    With ThisWorkbook.Sheets("ConfigSpecial2")
        i = .Cells(10, .Columns.Count).End(xlToLeft).Column - 1
        arr4 = .[b10].Resize(1, i).Value
        arr5 = .[b11].Resize(1, i).Value
    End With
    With shtConfig
    .[ae1].Resize(2, 30).ClearContents
    .[ae1].Resize(1, i).Value = arr4
    .[ae2].Resize(1, i).Value = arr5
    End With
End Sub
Sub GenerateChina(ByVal strCountry As String)
    Dim nam As Name
    Dim srow As Long
    Dim shtname As String
    Dim arr1, arr2, arr3, arr4, arr5
    Dim C As Range
    Dim jcol As Long
    Dim shtConfig As Worksheet
    Dim i As Long
    Dim bolConfig As Boolean
    
    With ThisWorkbook.Sheets("ConfigSpecial")
        shtname = .[e2].Value
    End With
    With ThisWorkbook.Sheets(shtname)
        .Visible = -1
        .Copy before:=ThisWorkbook.Sheets("Main")
        .Visible = 2
    End With
    ThisWorkbook.Sheets(ThisWorkbook.Sheets("Main").Index - 1).Name = "Template"
    ThisWorkbook.Sheets("Template").Unprotect 123
    Set shtConfig = ThisWorkbook.Sheets("Config")
    shtConfig.UsedRange.Offset(1, 0).Resize(, 5).ClearContents
    '|278||461||fffd||fffd||fffd||fffd|---|fffd||fffd|BankConfig|fffd||175||fffd||fffd||fffd||fffd||fffd||fffd||fffd||427||fffd||fffd||fffd||fffd||fffd||fffd|
    With ThisWorkbook.Sheets("BankConfig")
        .AutoFilterMode = False
        srow = .Cells(.Rows.Count, 5).End(xlUp).Row
        jcol = .Cells(1, .Columns.Count).End(xlToLeft).Column
        Set C = .Columns(5).Find("China", LookIn:=xlValues, lookat:=xlWhole, MatchCase:=False)
        If Not C Is Nothing Then
            arr1 = Array(6, 3, 8, 9, 10)
            arr2 = Array(1, 2, 3, 4, 5)
            .[a1].Resize(srow, jcol).AutoFilter Field:=5, Criteria1:=C.Value, Operator:=xlOr, Criteria2:=strCountry
            For i = 0 To UBound(arr1)
                .Cells(1, arr1(i)).Resize(srow, 1).SpecialCells(xlCellTypeVisible).Copy shtConfig.Cells(1, arr2(i))
            Next
            bolConfig = True
            .AutoFilterMode = False
        Else
            bolConfig = False
        End If
    End With
    '|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
    If bolConfig Then
        With shtConfig
            arr1 = Array("_F", "_C", "_H", "_I", "_J")
            arr2 = Array(1, 2, 3, 4, 5)
            arr3 = Array("", "$B$10", "$B$12", "$B$11", "$B$9")
            
            For i = 0 To UBound(arr1)
                srow = .Cells(.Rows.Count, arr2(i)).End(xlUp).Row
                If srow > 1 Then
                .Cells(1, arr2(i)).Resize(srow, 1).RemoveDuplicates Columns:=1, Header:=xlYes
                End If
                srow = .Cells(.Rows.Count, arr2(i)).End(xlUp).Row
                .Cells(1, arr2(i)).Resize(srow, 1).Sort KEY1:=.Columns(arr2(i)), order1:=xlDescending, Header:=xlYes
                srow = .Cells(.Rows.Count, arr2(i)).End(xlUp).Row
                ThisWorkbook.Names.Add Name:=arr1(i), RefersToR1C1:="=Config!R2C" & arr2(i) & ":R" & srow & "C" & arr2(i)
            Next
            .[p2].Resize(1, 15).ClearContents
            .[p4].Resize(1, 15).ClearContents
           
            .[p2].Resize(1, 5).Value = arr3
           
        End With
        '|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||427||fffd||fffd|
        With ThisWorkbook.Sheets("Template")
            .Unprotect 123
            For i = 0 To UBound(arr1)
                If arr3(i) <> "" Then
                With .Range(arr3(i)).Validation
                    .Delete
                    .Add Type:=xlValidateList, AlertStyle:=xlValidAlertStop, Operator:=xlBetween, Formula1:="=" & arr1(i)
                    .ShowError = False
                End With
                End If
            Next
            With .Cells(23, 2).Validation
                .Delete
                .Add Type:=xlValidateList, AlertStyle:=xlValidAlertStop, Operator:=xlBetween, Formula1:="=strCurrency"
                '.ShowError = False
            End With
        End With
    End If
    With ThisWorkbook.Sheets("ConfigSpecial2")
        i = .Cells(7, .Columns.Count).End(xlToLeft).Column - 1
        arr4 = .[b7].Resize(1, i).Value
        arr5 = .[b8].Resize(1, i).Value
    End With
    With shtConfig
        .[ae1].Resize(2, 30).ClearContents
        .[ae1].Resize(1, i).Value = arr4
        .[ae2].Resize(1, i).Value = arr5
    End With
End Sub
Sub GenerateBrazil(ByVal strCountry As String)
    Dim nam As Name
    Dim srow As Long
    Dim shtname As String
    Dim arr1, arr2, arr3, arr4, arr5
    Dim C As Range
    Dim jcol As Long
    Dim shtConfig As Worksheet
    Dim i As Long
    Dim bolConfig As Boolean
    
    With ThisWorkbook.Sheets("ConfigSpecial")  '|221||fffd||fffd||123||fffd||fffd||fffd||fffd||fffd||fffd|
        shtname = .[i2].Value
    End With
    With ThisWorkbook.Sheets(shtname)
        .Visible = -1
        .Copy before:=ThisWorkbook.Sheets("Main")
        .Visible = 2
    End With
    ThisWorkbook.Sheets(ThisWorkbook.Sheets("Main").Index - 1).Name = "Template"
    ThisWorkbook.Sheets("Template").Unprotect 123
    Set shtConfig = ThisWorkbook.Sheets("Config")
    shtConfig.UsedRange.Offset(1, 0).Resize(, 5).ClearContents
    '|278||461||fffd||fffd||fffd||fffd|---|fffd||fffd|BankConfig|fffd||175||fffd||fffd||fffd||fffd||fffd||fffd||fffd||427||fffd||fffd||fffd||fffd||fffd||fffd|
    With ThisWorkbook.Sheets("BankConfig")
        .AutoFilterMode = False
        srow = .Cells(.Rows.Count, 5).End(xlUp).Row
        jcol = .Cells(1, .Columns.Count).End(xlToLeft).Column
        Set C = .Columns(5).Find(strCountry, LookIn:=xlValues, lookat:=xlWhole, MatchCase:=False)
        If Not C Is Nothing Then
            arr1 = Array(6, 3, 8, 9, 10)
            arr2 = Array(1, 2, 3, 4, 5)
            .[a1].Resize(srow, jcol).AutoFilter Field:=5, Criteria1:=C.Value
            For i = 0 To UBound(arr1)
                .Cells(1, arr1(i)).Resize(srow, 1).SpecialCells(xlCellTypeVisible).Copy shtConfig.Cells(1, arr2(i))
            Next
            bolConfig = True
            .AutoFilterMode = False
        Else
            bolConfig = False
        End If
    End With
    '|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
    If bolConfig Then
        With shtConfig
            arr1 = Array("_F", "_C", "_H", "_I", "_J")
            arr2 = Array(1, 2, 3, 4, 5)
            arr3 = Array("$B$20", "$B$19", "$B$21", "$B$22", "$B$23")   '|fffd||fffd||fffd||fffd||fffd||fffd||3e2||fffd||fffd||5b7|
            For i = 0 To UBound(arr1)
                srow = .Cells(.Rows.Count, arr2(i)).End(xlUp).Row
                If srow > 1 Then
                .Cells(1, arr2(i)).Resize(srow, 1).RemoveDuplicates Columns:=1, Header:=xlYes
                End If
                srow = .Cells(.Rows.Count, arr2(i)).End(xlUp).Row
                .Cells(1, arr2(i)).Resize(srow, 1).Sort KEY1:=.Columns(arr2(i)), order1:=xlDescending, Header:=xlYes
                srow = .Cells(.Rows.Count, arr2(i)).End(xlUp).Row
                ThisWorkbook.Names.Add Name:=arr1(i), RefersToR1C1:="=Config!R2C" & arr2(i) & ":R" & srow & "C" & arr2(i)
            Next
            .[p2].Resize(1, 15).ClearContents
            .[p4].Resize(1, 15).ClearContents
            .[p2].Resize(1, 5).Value = arr3
        End With
        '|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||427||fffd||fffd|Characters
        With ThisWorkbook.Sheets("Template")
            For i = 0 To UBound(arr1)
                If arr3(i) <> "" Then
                With .Range(arr3(i)).Validation
                    .Delete
                    .Add Type:=xlValidateList, AlertStyle:=xlValidAlertStop, Operator:=xlBetween, Formula1:="=" & arr1(i)
                    .ShowError = False
                End With
                End If
            Next
            With .Cells(26, 2).Validation   '|fffd||fffd||fffd||5b5||fffd||5b7|
                .Delete
                .Add Type:=xlValidateList, AlertStyle:=xlValidAlertStop, Operator:=xlBetween, Formula1:="=strCurrency"
                '.ShowError = False
            End With
         End With
     End If
     With ThisWorkbook.Sheets("ConfigSpecial2")
        i = .Cells(4, .Columns.Count).End(xlToLeft).Column - 1
        arr4 = .[b4].Resize(1, i).Value
        arr5 = .[b5].Resize(1, i).Value
    End With
    With shtConfig
    .[ae1].Resize(2, 30).ClearContents
    .[ae1].Resize(1, i).Value = arr4
    .[ae2].Resize(1, i).Value = arr5
    End With
End Sub
Sub GenerateEcuador(ByVal strCountry As String)
    Dim nam As Name
    Dim srow As Long
    Dim shtname As String
    Dim arr1, arr2, arr3, arr4, arr5
    Dim C As Range
    Dim jcol As Long
    Dim shtConfig As Worksheet
    Dim i As Long
    Dim bolConfig As Boolean
    
'    For Each nam In ThisWorkbook.Names
'        nam.Delete
'    Next
    With ThisWorkbook.Sheets("ConfigSpecial")
        shtname = .[m2].Value
    End With
    With ThisWorkbook.Sheets(shtname)
        .Visible = -1
        .Copy before:=ThisWorkbook.Sheets("Main")
        .Visible = 2
    End With
    ThisWorkbook.Sheets(ThisWorkbook.Sheets("Main").Index - 1).Name = "Template"
    ThisWorkbook.Sheets("Template").Unprotect 123
    Set shtConfig = ThisWorkbook.Sheets("Config")
    shtConfig.UsedRange.Offset(1, 0).Resize(, 5).ClearContents
    '|278||461||fffd||fffd||fffd||fffd|---|fffd||fffd|BankConfig|fffd||175||fffd||fffd||fffd||fffd||fffd||fffd||fffd||427||fffd||fffd||fffd||fffd||fffd||fffd|
    With ThisWorkbook.Sheets("BankConfig")
        .AutoFilterMode = False
        srow = .Cells(.Rows.Count, 5).End(xlUp).Row
        jcol = .Cells(1, .Columns.Count).End(xlToLeft).Column
        Set C = .Columns(5).Find(strCountry, LookIn:=xlValues, lookat:=xlWhole, MatchCase:=False)
        If Not C Is Nothing Then
            arr1 = Array(6, 3, 8, 9, 10)
            arr2 = Array(1, 2, 3, 4, 5)
            .[a1].Resize(srow, jcol).AutoFilter Field:=5, Criteria1:=C.Value
            For i = 0 To UBound(arr1)
                .Cells(1, arr1(i)).Resize(srow, 1).SpecialCells(xlCellTypeVisible).Copy shtConfig.Cells(1, arr2(i))
            Next
            bolConfig = True
            .AutoFilterMode = False
        Else
            bolConfig = False
        End If
    End With
    '|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
    If bolConfig Then
        With shtConfig
            arr1 = Array("_F", "_C", "_H", "_I", "_J")
            arr2 = Array(1, 2, 3, 4, 5)
            arr3 = Array("$B$17", "$B$16", "$B$18", "", "$B$20")
            For i = 0 To UBound(arr1)
                srow = .Cells(.Rows.Count, arr2(i)).End(xlUp).Row
                If srow > 1 Then
                .Cells(1, arr2(i)).Resize(srow, 1).RemoveDuplicates Columns:=1, Header:=xlYes
                End If
                srow = .Cells(.Rows.Count, arr2(i)).End(xlUp).Row
                .Cells(1, arr2(i)).Resize(srow, 1).Sort KEY1:=.Columns(arr2(i)), order1:=xlDescending, Header:=xlYes
                srow = .Cells(.Rows.Count, arr2(i)).End(xlUp).Row
                ThisWorkbook.Names.Add Name:=arr1(i), RefersToR1C1:="=Config!R2C" & arr2(i) & ":R" & srow & "C" & arr2(i)
            Next
            .[p2].Resize(1, 15).ClearContents
            .[p4].Resize(1, 15).ClearContents
            
            .[p2].Resize(1, 5).Value = arr3
            
        End With
        '|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||427||fffd||fffd|
        With ThisWorkbook.Sheets("Template")
            For i = 0 To UBound(arr1)
                If arr3(i) <> "" Then
                    With .Range(arr3(i)).Validation
                        .Delete
                        .Add Type:=xlValidateList, AlertStyle:=xlValidAlertStop, Operator:=xlBetween, Formula1:="=" & arr1(i)
                        .ShowError = False
                    End With
                End If
            Next
            With .Cells(23, 2).Validation
                .Delete
                .Add Type:=xlValidateList, AlertStyle:=xlValidAlertStop, Operator:=xlBetween, Formula1:="=strCurrency"
                '.ShowError = False
            End With
        End With
    End If
    With ThisWorkbook.Sheets("ConfigSpecial2")
        i = .Cells(1, .Columns.Count).End(xlToLeft).Column - 1
        arr4 = .[b1].Resize(1, i).Value
        arr5 = .[b2].Resize(1, i).Value
    End With
    With shtConfig
    .[ae1].Resize(2, 30).ClearContents
    .[ae1].Resize(1, i).Value = arr4
    .[ae2].Resize(1, i).Value = arr5
    End With
End Sub
Sub GenerateKorea(ByVal strCountry As String)
    Dim nam As Name
    Dim srow As Long
    Dim shtname As String
    Dim arr1, arr2, arr3, arr4, arr5
    Dim C As Range
    Dim jcol As Long
    Dim shtConfig As Worksheet
    Dim i As Long
    Dim bolConfig As Boolean
    
'    For Each nam In ThisWorkbook.Names
'        nam.Delete
'    Next
    With ThisWorkbook.Sheets("ConfigSpecial")
        shtname = .[q2].Value
    End With
    With ThisWorkbook.Sheets(shtname)
        .Visible = -1
        .Copy before:=ThisWorkbook.Sheets("Main")
        .Visible = 2
    End With
    ThisWorkbook.Sheets(ThisWorkbook.Sheets("Main").Index - 1).Name = "Template"
    ThisWorkbook.Sheets("Template").Unprotect 123
    Set shtConfig = ThisWorkbook.Sheets("Config")
    shtConfig.UsedRange.Offset(1, 0).Resize(, 5).ClearContents
    '|278||461||fffd||fffd||fffd||fffd|---|fffd||fffd|BankConfig|fffd||175||fffd||fffd||fffd||fffd||fffd||fffd||fffd||427||fffd||fffd||fffd||fffd||fffd||fffd|
    With ThisWorkbook.Sheets("BankConfig")
        .AutoFilterMode = False
        srow = .Cells(.Rows.Count, 5).End(xlUp).Row
        jcol = .Cells(1, .Columns.Count).End(xlToLeft).Column
        Set C = .Columns(5).Find(strCountry, LookIn:=xlValues, lookat:=xlPart, MatchCase:=False)
        If Not C Is Nothing Then
            arr1 = Array(6, 3, 8, 9, 10)
            arr2 = Array(1, 2, 3, 4, 5)
            .[a1].Resize(srow, jcol).AutoFilter Field:=5, Criteria1:=C.Value
            For i = 0 To UBound(arr1)
                .Cells(1, arr1(i)).Resize(srow, 1).SpecialCells(xlCellTypeVisible).Copy shtConfig.Cells(1, arr2(i))
            Next
            bolConfig = True
            .AutoFilterMode = False
        Else
            bolConfig = False
        End If
    End With
    '|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
    If bolConfig Then
        With shtConfig
            arr1 = Array("_F", "_C", "_H", "_I", "_J")
            arr2 = Array(1, 2, 3, 4, 5)
            arr3 = Array("$B$17", "$B$16", "", "", "$B$19")
            For i = 0 To UBound(arr1)
                srow = .Cells(.Rows.Count, arr2(i)).End(xlUp).Row
                If srow > 1 Then
                .Cells(1, arr2(i)).Resize(srow, 1).RemoveDuplicates Columns:=1, Header:=xlYes
                End If
                srow = .Cells(.Rows.Count, arr2(i)).End(xlUp).Row
                .Cells(1, arr2(i)).Resize(srow, 1).Sort KEY1:=.Columns(arr2(i)), order1:=xlDescending, Header:=xlYes
                srow = .Cells(.Rows.Count, arr2(i)).End(xlUp).Row
                ThisWorkbook.Names.Add Name:=arr1(i), RefersToR1C1:="=Config!R2C" & arr2(i) & ":R" & srow & "C" & arr2(i)
            Next
            .[p2].Resize(1, 15).ClearContents
            .[p4].Resize(1, 15).ClearContents
            
            .[p2].Resize(1, 5).Value = arr3
           
        End With
        '|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||427||fffd||fffd|
        With ThisWorkbook.Sheets("Template")
            For i = 0 To UBound(arr1)
                If arr3(i) <> "" Then
                With .Range(arr3(i)).Validation
                    .Delete
                    .Add Type:=xlValidateList, AlertStyle:=xlValidAlertStop, Operator:=xlBetween, Formula1:="=" & arr1(i)
                    .ShowError = False
                End With
                End If
            Next
            With .Cells(22, 2).Validation
                .Delete
                .Add Type:=xlValidateList, AlertStyle:=xlValidAlertStop, Operator:=xlBetween, Formula1:="=strCurrency"
               ' .ShowError = False
            End With
        End With
    End If
    With ThisWorkbook.Sheets("ConfigSpecial2")
        i = .Cells(13, .Columns.Count).End(xlToLeft).Column - 1
        arr4 = .[b13].Resize(1, i).Value
        arr5 = .[b14].Resize(1, i).Value
    End With
    With shtConfig
    .[ae1].Resize(2, 30).ClearContents
    .[ae1].Resize(1, i).Value = arr4
    .[ae2].Resize(1, i).Value = arr5
    End With
End Sub
Sub GenerateRussia(ByVal strCountry As String)
    Dim nam As Name
    Dim srow As Long
    Dim shtname As String
    Dim arr1, arr2, arr3, arr4, arr5
    Dim C As Range
    Dim jcol As Long
    Dim shtConfig As Worksheet
    Dim i As Long
    Dim bolConfig As Boolean
    
'    For Each nam In ThisWorkbook.Names
'        nam.Delete
'    Next
    With ThisWorkbook.Sheets("ConfigSpecial")
        shtname = .[u2].Value
    End With
    With ThisWorkbook.Sheets(shtname)
        .Visible = -1
        .Copy before:=ThisWorkbook.Sheets("Main")
        .Visible = 2
    End With
    ThisWorkbook.Sheets(ThisWorkbook.Sheets("Main").Index - 1).Name = "Template"
    ThisWorkbook.Sheets("Template").Unprotect 123
    Set shtConfig = ThisWorkbook.Sheets("Config")
    shtConfig.UsedRange.Offset(1, 0).Resize(, 5).ClearContents
    '|278||461||fffd||fffd||fffd||fffd|---|fffd||fffd|BankConfig|fffd||175||fffd||fffd||fffd||fffd||fffd||fffd||fffd||427||fffd||fffd||fffd||fffd||fffd||fffd|
    With ThisWorkbook.Sheets("BankConfig")
        .AutoFilterMode = False
        srow = .Cells(.Rows.Count, 5).End(xlUp).Row
        jcol = .Cells(1, .Columns.Count).End(xlToLeft).Column
        Set C = .Columns(5).Find("Russian Federation", LookIn:=xlValues, lookat:=xlWhole, MatchCase:=False)
        If Not C Is Nothing Then
            arr1 = Array(6, 3, 8, 9, 10)
            arr2 = Array(1, 2, 3, 4, 5)
            .[a1].Resize(srow, jcol).AutoFilter Field:=5, Criteria1:=C.Value
            For i = 0 To UBound(arr1)
                .Cells(1, arr1(i)).Resize(srow, 1).SpecialCells(xlCellTypeVisible).Copy shtConfig.Cells(1, arr2(i))
            Next
            bolConfig = True
            .AutoFilterMode = False
        Else
            bolConfig = False
        End If
    End With
    '|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
    If bolConfig Then
        With shtConfig
            arr1 = Array("_F", "_C", "_H", "_I", "_J")
            arr2 = Array(1, 2, 3, 4, 5)
            arr3 = Array("", "$B$16", "", "$B$18", "$B$19")
            For i = 0 To UBound(arr1)
                srow = .Cells(.Rows.Count, arr2(i)).End(xlUp).Row
                If srow > 1 Then
                    .Cells(1, arr2(i)).Resize(srow, 1).RemoveDuplicates Columns:=1, Header:=xlYes
                End If
                srow = .Cells(.Rows.Count, arr2(i)).End(xlUp).Row
                .Cells(1, arr2(i)).Resize(srow, 1).Sort KEY1:=.Columns(arr2(i)), order1:=xlDescending, Header:=xlYes
                srow = .Cells(.Rows.Count, arr2(i)).End(xlUp).Row
                ThisWorkbook.Names.Add Name:=arr1(i), RefersToR1C1:="=Config!R2C" & arr2(i) & ":R" & srow & "C" & arr2(i)
            Next
            .[p2].Resize(1, 15).ClearContents
            .[p4].Resize(1, 15).ClearContents
            .[p2].Resize(1, 5).Value = arr3
        End With
        '|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||427||fffd||fffd|
        With ThisWorkbook.Sheets("Template")
            For i = 0 To UBound(arr1)
                If arr3(i) <> "" Then
                    With .Range(arr3(i)).Validation
                        .Delete
                        .Add Type:=xlValidateList, AlertStyle:=xlValidAlertStop, Operator:=xlBetween, Formula1:="=" & arr1(i)
                        .ShowError = False
                    End With
                End If
            Next
            With .Cells(22, 2).Validation
                .Delete
                .Add Type:=xlValidateList, AlertStyle:=xlValidAlertStop, Operator:=xlBetween, Formula1:="=strCurrency"
               ' .ShowError = False
            End With
        End With
    End If
    With ThisWorkbook.Sheets("ConfigSpecial2")
        i = .Cells(16, .Columns.Count).End(xlToLeft).Column - 1
        arr4 = .[b16].Resize(1, i).Value
        arr5 = .[b17].Resize(1, i).Value
    End With
    With shtConfig
    .[ae1].Resize(2, 30).ClearContents
    .[ae1].Resize(1, i).Value = arr4
    .[ae2].Resize(1, i).Value = arr5
    End With
End Sub
Sub GenerateCotedIv(ByVal strCountry As String)
    Dim nam As Name
    Dim srow As Long
    Dim shtname As String
    Dim arr1, arr2, arr3, arr4, arr5
    Dim C As Range
    Dim jcol As Long
    Dim shtConfig As Worksheet
    Dim i As Long
    Dim bolConfig As Boolean
    
    With ThisWorkbook.Sheets("ConfigSpecial")
        shtname = .[AD2].Value
    End With
    With ThisWorkbook.Sheets(shtname)
        .Visible = -1
        .Copy before:=ThisWorkbook.Sheets("Main")
        .Visible = 2
    End With
    ThisWorkbook.Sheets(ThisWorkbook.Sheets("Main").Index - 1).Name = "Template"
    ThisWorkbook.Sheets("Template").Unprotect 123
    Set shtConfig = ThisWorkbook.Sheets("Config")
    shtConfig.UsedRange.Offset(1, 0).Resize(, 5).ClearContents
    '|278||461||fffd||fffd||fffd||fffd|---|fffd||fffd|BankConfig|fffd||175||fffd||fffd||fffd||fffd||fffd||fffd||fffd||427||fffd||fffd||fffd||fffd||fffd||fffd|
    With ThisWorkbook.Sheets("BankConfig")
        .AutoFilterMode = False
        srow = .Cells(.Rows.Count, 5).End(xlUp).Row
        jcol = .Cells(1, .Columns.Count).End(xlToLeft).Column
        Set C = .Columns(5).Find(strCountry, LookIn:=xlValues, lookat:=xlWhole, MatchCase:=False)
        If Not C Is Nothing Then
            arr1 = Array(6, 3, 8, 9, 10)
            arr2 = Array(1, 2, 3, 4, 5)
            .[a1].Resize(srow, jcol).AutoFilter Field:=5, Criteria1:=C.Value
            For i = 0 To UBound(arr1)
                .Cells(1, arr1(i)).Resize(srow, 1).SpecialCells(xlCellTypeVisible).Copy shtConfig.Cells(1, arr2(i))
            Next
            bolConfig = True
            .AutoFilterMode = False
        Else
            bolConfig = False
        End If
    End With
    '|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
    If bolConfig Then
        With shtConfig
            arr1 = Array("_F", "_C", "_H", "_I", "_J")
            arr2 = Array(1, 2, 3, 4, 5)
             '|fffd||fffd||5e2||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||434||fffd||fffd||fffd||fffd|5|fffd||fffd||fffd||5b6||fffd||fffd||fffd||fffd||6b5||fffd||52a||fffd||fffd||fffd||5b7|,|fffd||fffd|    "$B$18",    "$B$19"    |fffd||fffd|, Bank Number BankName  BranchName  BRANCH_NUMBER   SwiftCode,|fb||fffd||435||13e||fffd||fffd||fffd|""
            arr3 = Array("$B$17", "$B$16", "$B$18", "$B$19", "$B$20")
            '*************************************************************************************************************************************
            For i = 0 To UBound(arr1)
                srow = .Cells(.Rows.Count, arr2(i)).End(xlUp).Row
                If srow > 1 Then
                    .Cells(1, arr2(i)).Resize(srow, 1).RemoveDuplicates Columns:=1, Header:=xlYes
                End If
                srow = .Cells(.Rows.Count, arr2(i)).End(xlUp).Row
                .Cells(1, arr2(i)).Resize(srow, 1).Sort KEY1:=.Columns(arr2(i)), order1:=xlDescending, Header:=xlYes
                srow = .Cells(.Rows.Count, arr2(i)).End(xlUp).Row
                ThisWorkbook.Names.Add Name:=arr1(i), RefersToR1C1:="=Config!R2C" & arr2(i) & ":R" & srow & "C" & arr2(i)
            Next
            .[p2].Resize(1, 15).ClearContents
            .[p4].Resize(1, 15).ClearContents
            .[p2].Resize(1, 5).Value = arr3
        End With
        '|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||427||fffd||fffd|
        With ThisWorkbook.Sheets("Template")
            For i = 0 To UBound(arr1)
                If arr3(i) <> "" Then
                    With .Range(arr3(i)).Validation
                        .Delete
                        .Add Type:=xlValidateList, AlertStyle:=xlValidAlertStop, Operator:=xlBetween, Formula1:="=" & arr1(i)
                        .ShowError = False
                    End With
                End If
            Next
            With .Cells(24, 2).Validation
                .Delete
                .Add Type:=xlValidateList, AlertStyle:=xlValidAlertStop, Operator:=xlBetween, Formula1:="=strCurrency"
            End With
        End With
    End If
    With ThisWorkbook.Sheets("ConfigSpecial2")
        i = .Cells(24, .Columns.Count).End(xlToLeft).Column - 1
        arr4 = .[b24].Resize(1, i).Value
        arr5 = .[b25].Resize(1, i).Value
    End With
    With shtConfig
        .[ae1].Resize(2, 30).ClearContents
        .[ae1].Resize(1, i).Value = arr4
        .[ae2].Resize(1, i).Value = arr5
    End With
End Sub
Sub GenerateUnitedStates(ByVal strCountry As String)
    Dim nam As Name
    Dim srow As Long
    Dim shtname As String
    Dim arr1, arr2, arr3, arr4, arr5
    Dim C As Range
    Dim jcol As Long
    Dim shtConfig As Worksheet
    Dim i As Long
    Dim bolConfig As Boolean
    
    With ThisWorkbook.Sheets("ConfigSpecial")
        shtname = .[y2].Value
    End With
    With ThisWorkbook.Sheets(shtname)
        .Visible = -1
        .Copy before:=ThisWorkbook.Sheets("Main")
        .Visible = 2
    End With
    ThisWorkbook.Sheets(ThisWorkbook.Sheets("Main").Index - 1).Name = "Template"
    ThisWorkbook.Sheets("Template").Unprotect 123
    Set shtConfig = ThisWorkbook.Sheets("Config")
    shtConfig.UsedRange.Offset(1, 0).Resize(, 5).ClearContents
    '|278||461||fffd||fffd||fffd||fffd|---|fffd||fffd|BankConfig|fffd||175||fffd||fffd||fffd||fffd||fffd||fffd||fffd||427||fffd||fffd||fffd||fffd||fffd||fffd|
    With ThisWorkbook.Sheets("BankConfig")
        .AutoFilterMode = False
        srow = .Cells(.Rows.Count, 5).End(xlUp).Row
        jcol = .Cells(1, .Columns.Count).End(xlToLeft).Column
        Set C = .Columns(5).Find(strCountry, LookIn:=xlValues, lookat:=xlWhole, MatchCase:=False)
        If Not C Is Nothing Then
            arr1 = Array(6, 3, 8, 9, 10)
            arr2 = Array(1, 2, 3, 4, 5)
            .[a1].Resize(srow, jcol).AutoFilter Field:=5, Criteria1:=C.Value
            For i = 0 To UBound(arr1)
                .Cells(1, arr1(i)).Resize(srow, 1).SpecialCells(xlCellTypeVisible).Copy shtConfig.Cells(1, arr2(i))
            Next
            bolConfig = True
            .AutoFilterMode = False
        Else
            bolConfig = False
        End If
    End With
    '|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
    If bolConfig Then
        With shtConfig
            arr1 = Array("_F", "_C", "_H", "_I", "_J")
            arr2 = Array(1, 2, 3, 4, 5)
            arr3 = Array("", "$B$18", "$B$19", "$B$20", "$B$21")
            For i = 0 To UBound(arr1)
                srow = .Cells(.Rows.Count, arr2(i)).End(xlUp).Row
                If srow > 1 Then
                    .Cells(1, arr2(i)).Resize(srow, 1).RemoveDuplicates Columns:=1, Header:=xlYes
                End If
                srow = .Cells(.Rows.Count, arr2(i)).End(xlUp).Row
                .Cells(1, arr2(i)).Resize(srow, 1).Sort KEY1:=.Columns(arr2(i)), order1:=xlDescending, Header:=xlYes
                srow = .Cells(.Rows.Count, arr2(i)).End(xlUp).Row
                ThisWorkbook.Names.Add Name:=arr1(i), RefersToR1C1:="=Config!R2C" & arr2(i) & ":R" & srow & "C" & arr2(i)
            Next
            .[p2].Resize(1, 15).ClearContents
            .[p4].Resize(1, 15).ClearContents
            .[p2].Resize(1, 5).Value = arr3
        End With
        '|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||427||fffd||fffd|
        With ThisWorkbook.Sheets("Template")
            For i = 0 To UBound(arr1)
                If arr3(i) <> "" Then
                    With .Range(arr3(i)).Validation
                        .Delete
                        .Add Type:=xlValidateList, AlertStyle:=xlValidAlertStop, Operator:=xlBetween, Formula1:="=" & arr1(i)
                        .ShowError = False
                    End With
                End If
            Next
            With .Cells(24, 2).Validation
                .Delete
                .Add Type:=xlValidateList, AlertStyle:=xlValidAlertStop, Operator:=xlBetween, Formula1:="=strCurrency"
            End With
        End With
    End If
    With ThisWorkbook.Sheets("ConfigSpecial2")
        i = .Cells(19, .Columns.Count).End(xlToLeft).Column - 1
        arr4 = .[b19].Resize(1, i).Value
        arr5 = .[b20].Resize(1, i).Value
    End With
    With shtConfig
        .[ae1].Resize(2, 30).ClearContents
        .[ae1].Resize(1, i).Value = arr4
        .[ae2].Resize(1, i).Value = arr5
    End With
End Sub
Attribute VB_Name = "mdPublic"
Option Explicit

Sub SetRightMenu()
    On Error Resume Next
    Application.CommandBars("New_menu").Delete
    On Error GoTo 0
    With CommandBars.Add("New_menu", msoBarPopup)
        With .Controls.Add(msoControlButton)
            .FaceId = 11
            .OnAction = "Export_Excel"
            .Caption = "Export_Excel"
        End With
        With .Controls.Add(msoControlButton)
            .FaceId = 7
            .OnAction = "Export_PDF"
            .Caption = "Export_PDF"
        End With
    End With
    Application.CommandBars("New_menu").ShowPopup
End Sub
Sub test()
Dim sht As Worksheet
For Each sht In ThisWorkbook.Sheets
    sht.Visible = xlSheetVisible
Next
End Sub
Sub closewk(ByVal istr As String)
    Dim wk As Workbook
    For Each wk In Workbooks
        If istr Like "*\" & wk.Name Then
            wk.Close False
            Exit For
        End If
    Next
End Sub
Sub deleteF(istr As String)
    Dim FSO As Object
    Set FSO = CreateObject("scripting.filesystemobject")
    If FSO.FILEEXISTS(istr) Then
        FSO.DELETEfile istr
    End If
End Sub

' InQuest injected base64 decoded content
' -jx.

INQUEST-PP=macro
