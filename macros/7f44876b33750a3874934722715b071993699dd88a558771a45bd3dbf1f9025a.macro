Attribute VB_Name = "ControlForm"
Attribute VB_Base = "0{12C60859-8219-4C29-9E7D-19A1FE7C5806}{7CE128D2-8B5B-48D5-B064-3BFDE78D3727}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Option Base 0

Dim ErrorsRange() As Range
Dim ErrorsSheet() As Integer
Dim ErrorIndex As Integer

Private Sub listErrors_Change()
  
    Dim index As Integer
  
    indexItem = listErrors.ListIndex
    
    If (indexItem > -1) And (indexItem < ErrorIndex) Then
        ThisWorkbook.Sheets(ErrorsSheet(indexItem)).Activate
        ErrorsRange(indexItem).Select
    End If

End Sub

Private Sub listErrors_Click()

End Sub

Private Sub UserForm_Initialize()

    ErrClear

End Sub

Private Sub btnCancel_Click()

    Hide

End Sub

Public Sub ErrClear()

    Me.listErrors.ListIndex = -1
    
    Me.listErrors.Clear
    ReDim ErrorsRange(999)
    ReDim ErrorsSheet(999)
    ErrorIndex = 0

End Sub

Public Sub ErrAdd(ErrText As String, ErrRange As Range, ErrSheet As Integer)

    Me.listErrors.AddItem (ThisWorkbook.Sheets(ErrSheet).name & "; " & ErrText)
    Set ErrorsRange(ErrorIndex) = ErrRange
    ErrorsSheet(ErrorIndex) = ErrSheet
    ErrorIndex = ErrorIndex + 1

End Sub

Public Function ErrCount() As Integer

    ErrCount = ErrorIndex

End Function

Attribute VB_Name = "DataModule"
'------------------------------------------------------------------------------
'
' Data Manipulation Module
'
'------------------------------------------------------------------------------

Option Private Module
Option Explicit

'--------------------------------------
' Data Initialization
'--------------------------------------

Private Sub Initialize_Sheet1()

    Sheet1.Range("Reversal").value = ""
    Sheet1.Range("Name").value = ""
    Sheet1.Range("Work").value = ""
    Sheet1.Range("Position").value = ""

    Sheet1.Range("EntryNumber").value = ""
    Sheet1.Range("EntryDate").value = ""
    Sheet1.Range("Conclusion").value = ""
    Sheet1.Range("Code1").value = ""
    Sheet1.Range("Code2").value = ""
    Sheet1.Range("Code3").value = ""
    Sheet1.Range("Hash").value = ""
    
    'Sheet1.Range("EntryNumber").Locked = True
    'Sheet1.Range("EntryDate").Locked = True
    'Sheet1.Range("Code1").Locked = True
    'Sheet1.Range("Code2").Locked = True
    'Sheet1.Range("Code3").Locked = True
    'Sheet1.Range("Conclusion").Locked = True
    
    'Sheet1.btnSaveFloppy.Enabled = False
    Sheet1.btnSave.Enabled = False
    Sheet1.btnPrint.Enabled = False
    'Sheet1.btnExport.Visible = False

End Sub

Private Sub Initialize_Sheet2()

    Sheet2.Range("EGN").value = ""
    Sheet2.Range("LKN").value = ""
    Sheet2.Range("LKD").value = ""
    Sheet2.Range("Address").value = ""
    Sheet2.Range("Phone").value = ""
    Sheet2.Range("Spouse").value = ""
    Sheet2.Range("SpouseEGN").value = ""
    Sheet2.Range("SpouseCitizenship").value = STR_BGCitizen
    Sheet2.Range("Divorced").value = ""
    Sheet2.Range("Parted").value = ""
    Sheet2.Range("PartnerOnly").value = ""
    Sheet2.Range("HideEGN").value = ""

    Call Initialize_Table0

End Sub

Private Sub Initialize_Sheet3()

    Sheet3.InChangeMode = True

    Sheet3.Range("Primary11").value = ""
    Sheet3.Range("Primary12").value = ""
    Sheet3.Range("Primary13").value = ""
    Sheet3.Range("Primary21").value = ""
    Sheet3.Range("Primary31").value = ""
    Sheet3.Range("Primary32").value = ""
    Sheet3.Range("Primary33").value = ""
    
    Sheet3.Range("NothingT1").value = ""
    Sheet3.Range("NothingT1_1").value = ""
    Sheet3.Range("NothingT1_2").value = ""
    Sheet3.Range("NothingT2").value = ""

    Call Initialize_Table1
    Call UpdateT1
    Call Initialize_Table1_1
    Call UpdateT1_1
    Call Initialize_Table1_2
    Call UpdateT1_2
    Call Initialize_Table2
    Call UpdateT2

    Sheet3.InChangeMode = False

    Sheet3.Activate
    Sheet3.btnOption2.value = True

End Sub

Private Sub Initialize_Sheet4()

    Sheet4.InChangeMode = True

    Sheet4.Range("NothingT3").value = ""
    Sheet4.Range("NothingT3_1").value = ""
    Sheet4.Range("NothingT4").value = ""
    Sheet4.Range("NothingT5").value = ""
    Sheet4.Range("NothingT5N").value = ""
    Sheet4.Range("NothingT6N").value = ""

    Call Initialize_Table3
    Call UpdateT3
    Call Initialize_Table3_1
    Call UpdateT3_1
    Call Initialize_Table4
    Call UpdateT4
    Call Initialize_Table5
    Call UpdateT5
    Call Initialize_Table5N
    Call UpdateT5N
    Call Initialize_Table6N
    Call UpdateT6N

    Sheet4.InChangeMode = False

End Sub

Private Sub Initialize_Sheet5()

    Sheet5.InChangeMode = True

    Sheet5.Range("NothingT6").value = ""
    Sheet5.Range("NothingT7").value = ""
    Sheet5.Range("NothingT8").value = ""
    Sheet5.Range("NothingT9").value = ""

    Call Initialize_Table6
    Call UpdateT6
    Call Initialize_Table7
    Call UpdateT7
    Call Initialize_Table8
    Call UpdateT8
    Call Initialize_Table9
    Call UpdateT9

    Sheet5.InChangeMode = False

End Sub

Private Sub Initialize_Sheet6()

    Sheet6.InChangeMode = True

    Sheet6.Range("NothingT12N").value = ""
    Sheet6.Range("NothingT10").value = ""
    Sheet6.Range("NothingT11").value = ""
    Sheet6.Range("NothingT12").value = ""

    Call Initialize_Table12N
    Call UpdateT12N
    Call Initialize_Table10
    Call UpdateT10
    Call Initialize_Table11
    Call UpdateT11
    Call Initialize_Table12
    Call UpdateT12

    Sheet6.InChangeMode = False

End Sub

Private Sub Initialize_Sheet7()

    Sheet7.InChangeMode = True

    Sheet7.Range("NothingT13").value = ""
    Sheet7.Range("NothingT14").value = ""

    Call Initialize_Table13
    Call UpdateT13
    Call Initialize_Table14
    Call UpdateT14

    Sheet7.InChangeMode = False

End Sub

Private Sub Initialize_Sheet8()

    Sheet8.InChangeMode = True

    Sheet8.Range("NothingT15").value = ""
    Sheet8.Range("Date8_1").value = ""

    Call Initialize_Table15
    Call UpdateT15

    Sheet8.InChangeMode = False

End Sub

Public Sub Initialize_Book()

    ThisWorkbook.Unprotect STR_Pass_Book

    Sheet1.Unprotect (STR_Pass_Sheet)
    Sheet2.Unprotect (STR_Pass_Sheet)
    Sheet3.Unprotect (STR_Pass_Sheet)
    Sheet4.Unprotect (STR_Pass_Sheet)
    Sheet5.Unprotect (STR_Pass_Sheet)
    Sheet6.Unprotect (STR_Pass_Sheet)
    Sheet7.Unprotect (STR_Pass_Sheet)
    Sheet8.Unprotect (STR_Pass_Sheet)

    Sheet10.Unprotect (STR_Pass_Sheet)
    Sheet11.Unprotect (STR_Pass_Sheet)
    
    Sheet1.Visible = True
    Sheet2.Visible = True
    Sheet3.Visible = True
    Sheet4.Visible = True
    Sheet5.Visible = True
    Sheet6.Visible = True
    Sheet7.Visible = True
    Sheet8.Visible = True

    Sheet10.Visible = True
    Sheet11.Visible = True

    Sheet1.EnableCalculation = False
    Sheet2.EnableCalculation = False
    Sheet3.EnableCalculation = False
    Sheet4.EnableCalculation = False
    Sheet5.EnableCalculation = False
    Sheet6.EnableCalculation = False
    Sheet7.EnableCalculation = False
    Sheet8.EnableCalculation = False

    Call Initialize_Sheet1
    Call Initialize_Sheet2
    Call Initialize_Sheet4
    Call Initialize_Sheet5
    Call Initialize_Sheet6
    Call Initialize_Sheet7
    Call Initialize_Sheet8

    Call Initialize_Sheet3

    Sheet11.Range("Saved").ClearContents

    Sheet1.Activate
    Sheet1.Range("A1").Select
    ThisWorkbook.Windows(1).Zoom = 90
    Sheet2.Activate
    Sheet2.Range("A1").Select
    ThisWorkbook.Windows(1).Zoom = 95
    Sheet3.Activate
    Sheet3.Range("A1").Select
    ThisWorkbook.Windows(1).Zoom = 85
    Sheet4.Activate
    Sheet4.Range("A1").Select
    ThisWorkbook.Windows(1).Zoom = 90
    Sheet5.Activate
    Sheet5.Range("A1").Select
    ThisWorkbook.Windows(1).Zoom = 90
    Sheet6.Activate
    Sheet6.Range("A1").Select
    ThisWorkbook.Windows(1).Zoom = 80
    Sheet7.Activate
    Sheet7.Range("A1").Select
    ThisWorkbook.Windows(1).Zoom = 90
    Sheet8.Activate
    Sheet8.Range("A1").Select
    ThisWorkbook.Windows(1).Zoom = 85

    Sheet10.Activate
    Sheet10.Range("A1").Select
    ThisWorkbook.Windows(1).Zoom = 90
    Sheet11.Activate
    Sheet11.Range("A1").Select
    ThisWorkbook.Windows(1).Zoom = 90

    ThisWorkbook.Windows(1).WindowState = xlMaximized

    Sheet1.EnableCalculation = True
    Sheet2.EnableCalculation = True
    Sheet3.EnableCalculation = True
    Sheet4.EnableCalculation = True
    Sheet5.EnableCalculation = True
    Sheet6.EnableCalculation = True
    Sheet7.EnableCalculation = True
    Sheet8.EnableCalculation = True

    Sheet1.EnableSelection = xlUnlockedCells
    Sheet2.EnableSelection = xlUnlockedCells
    Sheet3.EnableSelection = xlUnlockedCells
    Sheet4.EnableSelection = xlUnlockedCells
    Sheet5.EnableSelection = xlUnlockedCells
    Sheet6.EnableSelection = xlUnlockedCells
    Sheet7.EnableSelection = xlUnlockedCells
    Sheet8.EnableSelection = xlUnlockedCells
    
    Sheet1.Protect Password:=STR_Pass_Sheet, Contents:=True
    Sheet2.Protect Password:=STR_Pass_Sheet, Contents:=True
    Sheet3.Protect Password:=STR_Pass_Sheet, Contents:=True
    Sheet4.Protect Password:=STR_Pass_Sheet, Contents:=True
    Sheet5.Protect Password:=STR_Pass_Sheet, Contents:=True
    Sheet6.Protect Password:=STR_Pass_Sheet, Contents:=True
    Sheet7.Protect Password:=STR_Pass_Sheet, Contents:=True
    Sheet8.Protect Password:=STR_Pass_Sheet, Contents:=True

    Sheet10.Protect Password:=STR_Pass_Sheet, Contents:=True
    Sheet11.Protect Password:=STR_Pass_Sheet, Contents:=True
    
    Sheet1.Activate
    Sheet1.Range("Name").Select
    
    Sheet11.Visible = False

    ThisWorkbook.Protect STR_Pass_Book, True, False

End Sub

Public Sub Unlock_Book()

    ThisWorkbook.Unprotect STR_Pass_Book

    Sheet1.Unprotect (STR_Pass_Sheet)
    Sheet2.Unprotect (STR_Pass_Sheet)
    Sheet3.Unprotect (STR_Pass_Sheet)
    Sheet4.Unprotect (STR_Pass_Sheet)
    Sheet5.Unprotect (STR_Pass_Sheet)
    Sheet6.Unprotect (STR_Pass_Sheet)
    Sheet7.Unprotect (STR_Pass_Sheet)
    Sheet8.Unprotect (STR_Pass_Sheet)

    Sheet10.Unprotect (STR_Pass_Sheet)
    Sheet11.Unprotect (STR_Pass_Sheet)

    Sheet1.Visible = True
    Sheet1.EnableSelection = xlUnlockedCells

    Sheet2.Visible = True
    Sheet2.EnableSelection = xlUnlockedCells

    Sheet3.Visible = True
    Sheet3.EnableSelection = xlUnlockedCells

    Sheet4.Visible = True
    Sheet4.EnableSelection = xlUnlockedCells

    Sheet5.Visible = True
    Sheet5.EnableSelection = xlUnlockedCells

    Sheet6.Visible = True
    Sheet6.EnableSelection = xlUnlockedCells
    
    Sheet7.Visible = True
    Sheet7.EnableSelection = xlUnlockedCells
    
    Sheet8.Visible = True
    Sheet8.EnableSelection = xlUnlockedCells
    
    Sheet10.Visible = True
    Sheet10.EnableSelection = xlNoRestrictions

    Sheet11.Visible = True
    Sheet11.EnableSelection = xlNoRestrictions

End Sub

'--------------------------------------
' Tables Initialization
'--------------------------------------

Private Sub Initialize_Table0()

    InitializeTable SheetContainer:=Sheet2, TableRangeName:="Table0", DefaultRows:=ROW_Default_Table0

End Sub


Private Sub Initialize_Table1()

    InitializeTable SheetContainer:=Sheet3, TableRangeName:="Table1", DefaultRows:=ROW_Default_Table1

End Sub

Private Sub Initialize_Table1_1()

    InitializeTable SheetContainer:=Sheet3, TableRangeName:="Table1_1", DefaultRows:=ROW_Default_Table1_1

End Sub

Private Sub Initialize_Table1_2()

    InitializeTable SheetContainer:=Sheet3, TableRangeName:="Table1_2", DefaultRows:=ROW_Default_Table1_2

End Sub

Private Sub Initialize_Table2()

    InitializeTable SheetContainer:=Sheet3, TableRangeName:="Table2", DefaultRows:=ROW_Default_Table2

End Sub

Private Sub Initialize_Table3()

    InitializeTable SheetContainer:=Sheet4, TableRangeName:="Table3", DefaultRows:=ROW_Default_Table3

End Sub

Private Sub Initialize_Table3_1()

    InitializeTable SheetContainer:=Sheet4, TableRangeName:="Table3_1", DefaultRows:=ROW_Default_Table3_1

End Sub

Private Sub Initialize_Table4()

    InitializeTable SheetContainer:=Sheet4, TableRangeName:="Table4", DefaultRows:=ROW_Default_Table4

End Sub

Private Sub Initialize_Table5()

    InitializeTable SheetContainer:=Sheet4, TableRangeName:="Table5", DefaultRows:=ROW_Default_Table5

End Sub

Private Sub Initialize_Table5N()

    InitializeTable SheetContainer:=Sheet4, TableRangeName:="Table5N", DefaultRows:=ROW_Default_Table5N

End Sub

Private Sub Initialize_Table6N()

    InitializeTable SheetContainer:=Sheet4, TableRangeName:="Table6N", DefaultRows:=ROW_Default_Table6N

End Sub

Private Sub Initialize_Table6()

    InitializeTable SheetContainer:=Sheet5, TableRangeName:="Table6", DefaultRows:=ROW_Default_Table6

End Sub


Private Sub Initialize_Table7()

    InitializeTable SheetContainer:=Sheet5, TableRangeName:="Table7", DefaultRows:=ROW_Default_Table7

End Sub

Private Sub Initialize_Table8()

    InitializeTable SheetContainer:=Sheet5, TableRangeName:="Table8", DefaultRows:=ROW_Default_Table8

End Sub

Private Sub Initialize_Table9()

    InitializeTable SheetContainer:=Sheet5, TableRangeName:="Table9", DefaultRows:=ROW_Default_Table9

End Sub

Private Sub Initialize_Table10()

    InitializeTable SheetContainer:=Sheet6, TableRangeName:="Table10", DefaultRows:=ROW_Default_Table10

End Sub

Private Sub Initialize_Table11()

    InitializeTable SheetContainer:=Sheet6, TableRangeName:="Table11", DefaultRows:=ROW_Default_Table11

End Sub

Private Sub Initialize_Table12()

    InitializeTable SheetContainer:=Sheet6, TableRangeName:="Table12", DefaultRows:=ROW_Default_Table12

End Sub

Private Sub Initialize_Table12N()

    InitializeTable SheetContainer:=Sheet6, TableRangeName:="Table12N", DefaultRows:=ROW_Default_Table12N

End Sub

Private Sub Initialize_Table13()

    InitializeTable SheetContainer:=Sheet7, TableRangeName:="Table13", DefaultRows:=ROW_Default_Table13
    
    Sheet7.Range("Table13P1").value = ""
    Sheet7.Range("Table13P1").Locked = False
    Sheet7.Range("Table13P2").value = ""
    Sheet7.Range("Table13P2").Locked = False

End Sub

Private Sub Initialize_Table14()

    InitializeTable SheetContainer:=Sheet7, TableRangeName:="Table14", DefaultRows:=ROW_Default_Table14

End Sub

Private Sub Initialize_Table15()

    InitializeTable SheetContainer:=Sheet8, TableRangeName:="Table15_1", DefaultRows:=ROW_Default_Table15_1
    InitializeTable SheetContainer:=Sheet8, TableRangeName:="Table15_2", DefaultRows:=ROW_Default_Table15_2
    InitializeTable SheetContainer:=Sheet8, TableRangeName:="Table15_3", DefaultRows:=ROW_Default_Table15_3
    InitializeTable SheetContainer:=Sheet8, TableRangeName:="Table15_4", DefaultRows:=ROW_Default_Table15_4

End Sub

'--------------------------------------
' Tables Update
'--------------------------------------

' Sheet 3

Public Sub UpdateT1()

    Dim nothingFlag As Boolean
    Dim partialFlag As Boolean

    nothingFlag = (Sheet3.Range("NothingT1").value) = STR_Marked
    partialFlag = Not Sheet3.btnOption2.value

    If nothingFlag Then
        Call Initialize_Table1
        Sheet3.Range("DisabledT1").Font.Color = COLOR_FontDisabled
        Sheet3.Range("DisabledT1").Locked = True
    Else
        Sheet3.Range("DisabledT1").Font.Color = COLOR_FontEnabled
        Range_RemoveCaptionRowAndColumn(Sheet3, Sheet3.Range("Table1")).Locked = False
        
        If partialFlag Then
            Sheet3.Range("DisabledT1P").Font.Color = COLOR_FontDisabled
            Sheet3.Range("DisabledT1P").Locked = True
            Range_RemoveCaptionRow(Sheet3, Sheet3.Range("PartialT1")).value = ""
        End If
    End If

    Sheet3.btnT1Add.Enabled = Not nothingFlag
    Sheet3.btnT1Sub.Enabled = Not nothingFlag

End Sub

Public Sub UpdateT1_1()

    Dim nothingFlag As Boolean
    Dim partialFlag As Boolean

    nothingFlag = (Sheet3.Range("NothingT1_1").value) = STR_Marked
    partialFlag = Not Sheet3.btnOption2.value

    If nothingFlag Then
        Call Initialize_Table1_1
        Sheet3.Range("DisabledT1_1").Font.Color = COLOR_FontDisabled
        Sheet3.Range("DisabledT1_1").Locked = True
    Else
        Sheet3.Range("DisabledT1_1").Font.Color = COLOR_FontEnabled
        Range_RemoveCaptionRowAndColumn(Sheet3, Sheet3.Range("Table1_1")).Locked = False
        
        If partialFlag Then
            Sheet3.Range("DisabledT1_1P").Font.Color = COLOR_FontDisabled
            Sheet3.Range("DisabledT1_1P").Locked = True
            Range_RemoveCaptionRow(Sheet3, Sheet3.Range("PartialT1_1")).value = ""
        End If
    End If

    Sheet3.btnT1_1Add.Enabled = Not nothingFlag
    Sheet3.btnT1_1Sub.Enabled = Not nothingFlag

End Sub

Public Sub UpdateT1_2()

    Dim nothingFlag As Boolean
    Dim partialFlag As Boolean

    nothingFlag = (Sheet3.Range("NothingT1_2").value) = STR_Marked
    partialFlag = Not Sheet3.btnOption2.value

    If nothingFlag Then
        Call Initialize_Table1_2
        Sheet3.Range("DisabledT1_2").Font.Color = COLOR_FontDisabled
        Sheet3.Range("DisabledT1_2").Locked = True
    Else
        Sheet3.Range("DisabledT1_2").Font.Color = COLOR_FontEnabled
        Range_RemoveCaptionRowAndColumn(Sheet3, Sheet3.Range("Table1_2")).Locked = False
        
        If partialFlag Then
            Sheet3.Range("DisabledT1_2P").Font.Color = COLOR_FontDisabled
            Sheet3.Range("DisabledT1_2P").Locked = True
            Range_RemoveCaptionRow(Sheet3, Sheet3.Range("PartialT1_2")).value = ""
        End If
    End If

    Sheet3.btnT1_2Add.Enabled = Not nothingFlag
    Sheet3.btnT1_2Sub.Enabled = Not nothingFlag

End Sub

Public Sub UpdateT2()

    Dim nothingFlag As Boolean
    Dim enableFlag As Boolean

    nothingFlag = (Sheet3.Range("NothingT2").value) = STR_Marked
    enableFlag = Sheet3.btnOption2.value

    If enableFlag Then
        If nothingFlag Then
            Call Initialize_Table2
            Sheet3.Range("DisabledT2").Font.Color = COLOR_FontDisabled
            Sheet3.Range("DisabledT2").Locked = True
        Else
            Sheet3.Range("DisabledT2C").Font.Color = COLOR_FontEnabled
            Sheet3.Range("NothingT2").Locked = False
            Range_RemoveCaptionRowAndColumn(Sheet3, Sheet3.Range("Table2")).Locked = False
        End If
    Else
        Call Initialize_Table2
        Sheet3.Range("NothingT2").value = ""
        Sheet3.Range("DisabledT2C").Font.Color = COLOR_FontDisabled
        Sheet3.Range("DisabledT2C").Locked = True
    End If

    Sheet3.btnT2Add.Enabled = Not nothingFlag And enableFlag
    Sheet3.btnT2Sub.Enabled = Not nothingFlag And enableFlag

End Sub

' Sheet 4

Public Sub UpdateT3()

    Dim nothingFlag As Boolean
    Dim partialFlag As Boolean

    nothingFlag = (Sheet4.Range("NothingT3").value) = STR_Marked
    partialFlag = Not Sheet3.btnOption2.value

    If nothingFlag Then
        Call Initialize_Table3
        Sheet4.Range("DisabledT3").Font.Color = COLOR_FontDisabled
        Sheet4.Range("DisabledT3").Locked = True
    Else
        Sheet4.Range("DisabledT3").Font.Color = COLOR_FontEnabled
        Range_RemoveCaptionRowAndColumn(Sheet4, Sheet4.Range("Table3")).Locked = False
        
        If partialFlag Then
            Sheet4.Range("DisabledT3P").Font.Color = COLOR_FontDisabled
            Sheet4.Range("DisabledT3P").Locked = True
            Range_RemoveCaptionRow(Sheet4, Sheet4.Range("PartialT3")).value = ""
        End If
    End If

    Sheet4.btnT3Add.Enabled = Not nothingFlag
    Sheet4.btnT3Sub.Enabled = Not nothingFlag

End Sub

Public Sub UpdateT3_1()

    Dim nothingFlag As Boolean
    Dim partialFlag As Boolean

    nothingFlag = (Sheet4.Range("NothingT3_1").value) = STR_Marked
    partialFlag = Not Sheet3.btnOption2.value

    If nothingFlag Then
        Call Initialize_Table3_1
        Sheet4.Range("DisabledT3_1").Font.Color = COLOR_FontDisabled
        Sheet4.Range("DisabledT3_1").Locked = True
    Else
        Sheet4.Range("DisabledT3_1").Font.Color = COLOR_FontEnabled
        Range_RemoveCaptionRowAndColumn(Sheet4, Sheet4.Range("Table3_1")).Locked = False
        
        If partialFlag Then
            Sheet4.Range("DisabledT3_1P").Font.Color = COLOR_FontDisabled
            Sheet4.Range("DisabledT3_1P").Locked = True
            Range_RemoveCaptionRow(Sheet4, Sheet4.Range("PartialT3_1")).value = ""
        End If
    End If

    Sheet4.btnT3_1Add.Enabled = Not nothingFlag
    Sheet4.btnT3_1Sub.Enabled = Not nothingFlag

End Sub

Public Sub UpdateT4()

    Dim nothingFlag As Boolean
    Dim partialFlag As Boolean

    nothingFlag = (Sheet4.Range("NothingT4").value) = STR_Marked
    partialFlag = Not Sheet3.btnOption2.value

    If nothingFlag Then
        Call Initialize_Table4
        Sheet4.Range("DisabledT4").Font.Color = COLOR_FontDisabled
        Sheet4.Range("DisabledT4").Locked = True
    Else
        Sheet4.Range("DisabledT4").Font.Color = COLOR_FontEnabled
        Range_RemoveCaptionRowAndColumn(Sheet4, Sheet4.Range("Table4")).Locked = False
        
        If partialFlag Then
            Sheet4.Range("DisabledT4P").Font.Color = COLOR_FontDisabled
            Sheet4.Range("DisabledT4P").Locked = True
            Range_RemoveCaptionRow(Sheet4, Sheet4.Range("PartialT4")).value = ""
        End If
    End If

    Sheet4.btnT4Add.Enabled = Not nothingFlag
    Sheet4.btnT4Sub.Enabled = Not nothingFlag

End Sub

Public Sub UpdateT5()

    Dim nothingFlag As Boolean
    Dim enableFlag As Boolean

    nothingFlag = (Sheet4.Range("NothingT5").value) = STR_Marked
    enableFlag = Sheet3.btnOption2.value

    If enableFlag Then
        If nothingFlag Then
            Call Initialize_Table5
            Sheet4.Range("DisabledT5").Font.Color = COLOR_FontDisabled
            Sheet4.Range("DisabledT5").Locked = True
        Else
            Sheet4.Range("DisabledT5C").Font.Color = COLOR_FontEnabled
            Sheet4.Range("NothingT5").Locked = False
            Range_RemoveCaptionRowAndColumn(Sheet4, Sheet4.Range("Table5")).Locked = False
        End If
    Else
        Call Initialize_Table5
        Sheet4.Range("NothingT5").value = ""
        Sheet4.Range("DisabledT5C").Font.Color = COLOR_FontDisabled
        Sheet4.Range("DisabledT5C").Locked = True
    End If

    Sheet4.btnT5Add.Enabled = Not nothingFlag And enableFlag
    Sheet4.btnT5Sub.Enabled = Not nothingFlag And enableFlag

End Sub

Public Sub UpdateT5N()

    Dim nothingFlag As Boolean
    Dim partialFlag As Boolean

    nothingFlag = (Sheet4.Range("NothingT5N").value) = STR_Marked
    partialFlag = Not Sheet3.btnOption2.value

    If nothingFlag Then
        Call Initialize_Table5N
        Sheet4.Range("DisabledT5N").Font.Color = COLOR_FontDisabled
        Sheet4.Range("DisabledT5N").Locked = True
    Else
        Sheet4.Range("DisabledT5N").Font.Color = COLOR_FontEnabled
        Range_RemoveCaptionRowAndColumn(Sheet4, Sheet4.Range("Table5N")).Locked = False
        
        If partialFlag Then
            Sheet4.Range("DisabledT5NP").Font.Color = COLOR_FontDisabled
            Sheet4.Range("DisabledT5NP").Locked = True
            Range_RemoveCaptionRow(Sheet4, Sheet4.Range("PartialT5N")).value = ""
        End If
    End If

    Sheet4.btnT5NAdd.Enabled = Not nothingFlag
    Sheet4.btnT5NSub.Enabled = Not nothingFlag

End Sub

Public Sub UpdateT6N()

    Dim nothingFlag As Boolean
    Dim partialFlag As Boolean

    nothingFlag = (Sheet4.Range("NothingT6N").value) = STR_Marked
    partialFlag = Not Sheet3.btnOption2.value

    If nothingFlag Then
        Call Initialize_Table6N
        Sheet4.Range("DisabledT6N").Font.Color = COLOR_FontDisabled
        Sheet4.Range("DisabledT6N").Locked = True
    Else
        Sheet4.Range("DisabledT6N").Font.Color = COLOR_FontEnabled
        Range_RemoveCaptionRowAndColumn(Sheet4, Sheet4.Range("Table6N")).Locked = False
        
        If partialFlag Then
            Sheet4.Range("DisabledT6NP").Font.Color = COLOR_FontDisabled
            Sheet4.Range("DisabledT6NP").Locked = True
            Range_RemoveCaptionRow(Sheet4, Sheet4.Range("PartialT6N")).value = ""
        End If
    End If

    Sheet4.btnT6NAdd.Enabled = Not nothingFlag
    Sheet4.btnT6NSub.Enabled = Not nothingFlag

End Sub

' Sheet 5

Public Sub UpdateT6()

    Dim nothingFlag As Boolean
    Dim partialFlag As Boolean

    nothingFlag = (Sheet5.Range("NothingT6").value) = STR_Marked
    partialFlag = Not Sheet3.btnOption2.value

    If nothingFlag Then
        Call Initialize_Table6
        Sheet5.Range("DisabledT6").Font.Color = COLOR_FontDisabled
        Sheet5.Range("DisabledT6").Locked = True
    Else
        Sheet5.Range("DisabledT6").Font.Color = COLOR_FontEnabled
        Range_RemoveCaptionRowAndColumn(Sheet5, Sheet5.Range("Table6")).Locked = False
        
        If partialFlag Then
            Sheet5.Range("DisabledT6P").Font.Color = COLOR_FontDisabled
            Sheet5.Range("DisabledT6P").Locked = True
            Range_RemoveCaptionRow(Sheet5, Sheet5.Range("PartialT6")).value = ""
        End If
    End If

    Sheet5.btnT6Add.Enabled = Not nothingFlag
    Sheet5.btnT6Sub.Enabled = Not nothingFlag

End Sub

Public Sub UpdateT7()

    Dim nothingFlag As Boolean
    Dim partialFlag As Boolean

    nothingFlag = (Sheet5.Range("NothingT7").value) = STR_Marked
    partialFlag = Not Sheet3.btnOption2.value

    If nothingFlag Then
        Call Initialize_Table7
        Sheet5.Range("DisabledT7").Font.Color = COLOR_FontDisabled
        Sheet5.Range("DisabledT7").Locked = True
    Else
        Sheet5.Range("DisabledT7").Font.Color = COLOR_FontEnabled
        Range_RemoveCaptionRowAndColumn(Sheet5, Sheet5.Range("Table7")).Locked = False
        
        If partialFlag Then
            Sheet5.Range("DisabledT7P").Font.Color = COLOR_FontDisabled
            Sheet5.Range("DisabledT7P").Locked = True
            Range_RemoveCaptionRow(Sheet5, Sheet5.Range("PartialT7")).value = ""
        End If
    End If

    Sheet5.btnT7Add.Enabled = Not nothingFlag
    Sheet5.btnT7Sub.Enabled = Not nothingFlag

End Sub

Public Sub UpdateT8()

    Dim nothingFlag As Boolean

    nothingFlag = (Sheet5.Range("NothingT8").value) = STR_Marked

    If nothingFlag Then
        Call Initialize_Table8
        Sheet5.Range("DisabledT8").Font.Color = COLOR_FontDisabled
        Sheet5.Range("DisabledT8").Locked = True
    Else
        Sheet5.Range("DisabledT8").Font.Color = COLOR_FontEnabled
        Range_RemoveCaptionRowAndColumn(Sheet5, Sheet5.Range("Table8")).Locked = False
    End If

    Sheet5.btnT8Add.Enabled = Not nothingFlag
    Sheet5.btnT8Sub.Enabled = Not nothingFlag

End Sub

Public Sub UpdateT9()

    Dim nothingFlag As Boolean

    nothingFlag = (Sheet5.Range("NothingT9").value) = STR_Marked

    If nothingFlag Then
        Call Initialize_Table9
        Sheet5.Range("DisabledT9").Font.Color = COLOR_FontDisabled
        Sheet5.Range("DisabledT9").Locked = True
    Else
        Sheet5.Range("DisabledT9").Font.Color = COLOR_FontEnabled
        Range_RemoveCaptionRowAndColumn(Sheet5, Sheet5.Range("Table9")).Locked = False
    End If

    Sheet5.btnT9Add.Enabled = Not nothingFlag
    Sheet5.btnT9Sub.Enabled = Not nothingFlag

End Sub

' Sheet 6

Public Sub UpdateT10()

    Dim nothingFlag As Boolean
    Dim partialFlag As Boolean

    nothingFlag = (Sheet6.Range("NothingT10").value) = STR_Marked
    partialFlag = Not Sheet3.btnOption2.value

    If nothingFlag Then
        Call Initialize_Table10
        Sheet6.Range("DisabledT10").Font.Color = COLOR_FontDisabled
        Sheet6.Range("DisabledT10").Locked = True
    Else
        Sheet6.Range("DisabledT10").Font.Color = COLOR_FontEnabled
        Range_RemoveCaptionRowAndColumn(Sheet6, Sheet6.Range("Table10")).Locked = False
        
        If partialFlag Then
            Sheet6.Range("DisabledT10P").Font.Color = COLOR_FontDisabled
            Sheet6.Range("DisabledT10P").Locked = True
            Range_RemoveCaptionRow(Sheet6, Sheet6.Range("PartialT10")).value = ""
        End If
    End If

    Sheet6.btnT10Add.Enabled = Not nothingFlag
    Sheet6.btnT10Sub.Enabled = Not nothingFlag

End Sub

Public Sub UpdateT11()

    Dim nothingFlag As Boolean
    Dim partialFlag As Boolean

    nothingFlag = (Sheet6.Range("NothingT11").value) = STR_Marked
    partialFlag = Not Sheet3.btnOption2.value

    If nothingFlag Then
        Call Initialize_Table11
        Sheet6.Range("DisabledT11").Font.Color = COLOR_FontDisabled
        Sheet6.Range("DisabledT11").Locked = True
    Else
        Sheet6.Range("DisabledT11").Font.Color = COLOR_FontEnabled
        Range_RemoveCaptionRowAndColumn(Sheet6, Sheet6.Range("Table11")).Locked = False
        
        If partialFlag Then
            Sheet6.Range("DisabledT11P").Font.Color = COLOR_FontDisabled
            Sheet6.Range("DisabledT11P").Locked = True
            Range_RemoveCaptionRow(Sheet6, Sheet6.Range("PartialT11")).value = ""
        End If
    End If

    Sheet6.btnT11Add.Enabled = Not nothingFlag
    Sheet6.btnT11Sub.Enabled = Not nothingFlag

End Sub

Public Sub UpdateT12()

    Dim nothingFlag As Boolean
    Dim enableFlag As Boolean

    nothingFlag = (Sheet6.Range("NothingT12").value) = STR_Marked
    enableFlag = Sheet3.btnOption2.value

    If enableFlag Then
        If nothingFlag Then
            Call Initialize_Table12
            Sheet6.Range("DisabledT12").Font.Color = COLOR_FontDisabled
            Sheet6.Range("DisabledT12").Locked = True
        Else
            Sheet6.Range("DisabledT12C").Font.Color = COLOR_FontEnabled
            Sheet6.Range("NothingT12").Locked = False
            Range_RemoveCaptionRowAndColumn(Sheet6, Sheet6.Range("Table12")).Locked = False
        End If
    Else
        Call Initialize_Table12
        Sheet6.Range("NothingT12").value = ""
        Sheet6.Range("DisabledT12C").Font.Color = COLOR_FontDisabled
        Sheet6.Range("DisabledT12C").Locked = True
    End If

    Sheet6.btnT12Add.Enabled = Not nothingFlag And enableFlag
    Sheet6.btnT12Sub.Enabled = Not nothingFlag And enableFlag

End Sub

Public Sub UpdateT12N()

    Dim nothingFlag As Boolean
    Dim partialFlag As Boolean

    nothingFlag = (Sheet6.Range("NothingT12N").value) = STR_Marked
    partialFlag = Not Sheet3.btnOption2.value

    If nothingFlag Then
        Call Initialize_Table12N
        Sheet6.Range("DisabledT12N").Font.Color = COLOR_FontDisabled
        Sheet6.Range("DisabledT12N").Locked = True
    Else
        Sheet6.Range("DisabledT12N").Font.Color = COLOR_FontEnabled
        Range_RemoveCaptionRowAndColumn(Sheet6, Sheet6.Range("Table12N")).Locked = False
        
        If partialFlag Then
            Sheet6.Range("DisabledT12NP").Font.Color = COLOR_FontDisabled
            Sheet6.Range("DisabledT12NP").Locked = True
            Range_RemoveCaptionRow(Sheet6, Sheet6.Range("PartialT12N")).value = ""
        End If
    End If

    Sheet6.btnT12NAdd.Enabled = Not nothingFlag
    Sheet6.btnT12NSub.Enabled = Not nothingFlag

End Sub

' Sheet 7

Public Sub UpdateT13()

    Dim nothingFlag As Boolean
    Dim enableFlag As Boolean

    nothingFlag = (Sheet7.Range("NothingT13").value) = STR_Marked
    enableFlag = Sheet3.btnOption2.value

    If enableFlag Then
        If nothingFlag Then
            Call Initialize_Table13
            Sheet7.Range("DisabledT13").Font.Color = COLOR_FontDisabled
            Sheet7.Range("DisabledT13").Locked = True
        Else
            Sheet7.Range("DisabledT13C").Font.Color = COLOR_FontEnabled
            Sheet7.Range("NothingT13").Locked = False
            Sheet7.Range("Table13P1").Locked = False
            Sheet7.Range("Table13P2").Locked = False
            Range_RemoveCaptionRowAndColumn(Sheet7, Sheet7.Range("Table13")).Locked = False
        End If
    Else
        Call Initialize_Table13
        Sheet7.Range("NothingT13").value = ""
        Sheet7.Range("DisabledT13C").Font.Color = COLOR_FontDisabled
        Sheet7.Range("DisabledT13C").Locked = True
    End If

    Sheet7.btnT13Add.Enabled = Not nothingFlag And enableFlag
    Sheet7.btnT13Sub.Enabled = Not nothingFlag And enableFlag

End Sub

Public Sub UpdateT14()

    Dim nothingFlag As Boolean
    Dim enableFlag As Boolean

    nothingFlag = (Sheet7.Range("NothingT14").value) = STR_Marked
    enableFlag = Sheet3.btnOption2.value

    If enableFlag Then
        If nothingFlag Then
            Call Initialize_Table14
            Sheet7.Range("DisabledT14").Font.Color = COLOR_FontDisabled
            Sheet7.Range("DisabledT14").Locked = True
        Else
            Sheet7.Range("DisabledT14C").Font.Color = COLOR_FontEnabled
            Sheet7.Range("NothingT14").Locked = False
            Range_RemoveCaptionRowAndColumn(Sheet7, Sheet7.Range("Table14")).Locked = False
        End If
    Else
        Call Initialize_Table14
        Sheet7.Range("NothingT14").value = ""
        Sheet7.Range("DisabledT14C").Font.Color = COLOR_FontDisabled
        Sheet7.Range("DisabledT14C").Locked = True
    End If

    Sheet7.btnT14Add.Enabled = Not nothingFlag And enableFlag
    Sheet7.btnT14Sub.Enabled = Not nothingFlag And enableFlag

End Sub

' Sheet 8

Public Sub UpdateT15()

    Dim nothingFlag As Boolean
    Dim enableFlag As Boolean

    nothingFlag = (Sheet8.Range("NothingT15").value) = STR_Marked
    enableFlag = Sheet3.btnOption2.value

    If enableFlag Then
        If nothingFlag Then
            Call Initialize_Table15
            Sheet8.Range("DisabledT15").Font.Color = COLOR_FontDisabled
            Sheet8.Range("DisabledT15").Locked = True
        Else
            Sheet8.Range("DisabledT15C").Font.Color = COLOR_FontEnabled
            Sheet8.Range("NothingT15").Locked = False
            Range_RemoveCaptionRowAndColumn(Sheet8, Sheet8.Range("Table15_1")).Locked = False
            Range_RemoveCaptionRowAndColumn(Sheet8, Sheet8.Range("Table15_2")).Locked = False
            Range_RemoveCaptionRowAndColumn(Sheet8, Sheet8.Range("Table15_3")).Locked = False
            Range_RemoveCaptionRowAndColumn(Sheet8, Sheet8.Range("Table15_4")).Locked = False
        End If
    Else
        Call Initialize_Table15
        Sheet8.Range("NothingT15").value = ""
        Sheet8.Range("DisabledT15C").Font.Color = COLOR_FontDisabled
        Sheet8.Range("DisabledT15C").Locked = True
    End If

    Sheet8.btnT15_1Add.Enabled = Not nothingFlag And enableFlag
    Sheet8.btnT15_1Sub.Enabled = Not nothingFlag And enableFlag
    
    Sheet8.btnT15_2Add.Enabled = Not nothingFlag And enableFlag
    Sheet8.btnT15_2Sub.Enabled = Not nothingFlag And enableFlag
    
    Sheet8.btnT15_3Add.Enabled = Not nothingFlag And enableFlag
    Sheet8.btnT15_3Sub.Enabled = Not nothingFlag And enableFlag

End Sub

Attribute VB_Name = "FileBrowserModule"
'------------------------------------------------------------------------------
'
' File Browser Dialogs - Open & Save
'
'------------------------------------------------------------------------------

Option Private Module
Option Explicit

Type thOPENFILENAME
    lStructSize As Long
#If VBA7 Then
    hwndOwner As LongPtr
    hInstance As LongPtr
#Else
    hwndOwner As Long
    hInstance As Long
#End If
    strFilter As String
    strCustomFilter As String
    nMaxCustFilter As Long
    nFilterIndex As Long
    strFile As String
    nMaxFile As Long
    strFileTitle As String
    nMaxFileTitle As Long
    strInitialDir As String
    strTitle As String
    Flags As Long
    nFileOffset As Integer
    nFileExtension As Integer
    strDefExt As String
#If VBA7 Then
    lCustData As LongPtr
    lpfnHook As LongPtr
#Else
    lCustData As Long
    lpfnHook As Long
#End If
    lpTemplateName As String
End Type

#If VBA7 Then
Declare PtrSafe Function th_apiGetOpenFileName Lib "comdlg32.dll" Alias "GetOpenFileNameA" (OFN As thOPENFILENAME) As Boolean
Declare PtrSafe Function th_apiGetSaveFileName Lib "comdlg32.dll" Alias "GetSaveFileNameA" (OFN As thOPENFILENAME) As Boolean
Declare PtrSafe Function CommDlgExtendetError Lib "commdlg32.dll" () As Long
#Else
Declare Function th_apiGetOpenFileName Lib "comdlg32.dll" Alias "GetOpenFileNameA" (OFN As thOPENFILENAME) As Boolean
Declare Function th_apiGetSaveFileName Lib "comdlg32.dll" Alias "GetSaveFileNameA" (OFN As thOPENFILENAME) As Boolean
Declare Function CommDlgExtendetError Lib "commdlg32.dll" () As Long
#End If


Public Const thOFN_READONLY = &H1
Public Const thOFN_OVERWRITEPROMPT = &H2
Public Const thOFN_HIDEREADONLY = &H4
Public Const thOFN_NOCHANGEDIR = &H8
Public Const thOFN_SHOWHELP = &H10
Public Const thOFN_NOVALIDATE = &H100
Public Const thOFN_ALLOWMULTISELECT = &H200
Public Const thOFN_EXTENSIONDIFFERENT = &H400
Public Const thOFN_PATHMUSTEXIST = &H800
Public Const thOFN_FILEMUSTEXIST = &H1000
Public Const thOFN_CREATEPROMPT = &H2000
Public Const thOFN_SHAREWARE = &H4000
Public Const thOFN_NOREADONLYRETURN = &H8000
Public Const thOFN_NOTESTFILECREATE = &H10000
Public Const thOFN_NONETWORKBUTTON = &H20000
Public Const thOFN_NOLONGGAMES = &H40000
Public Const thOFN_EXPLORER = &H80000
Public Const thOFN_NODEREFERENCELINKS = &H100000
Public Const thOFN_LONGNAMES = &H200000

Function thCommonFileOpenSave(Optional ByRef Flags As Variant, Optional ByVal InitialDir As Variant, Optional ByVal Filter As Variant, _
                              Optional ByVal FilterIndex As Variant, Optional ByVal DefaultEx As Variant, Optional ByVal fileName As Variant, _
                              Optional ByVal DialogTitle As Variant, Optional ByVal hwnd As Variant, Optional ByVal OpenFile As Variant) As Variant
                               
    Dim OFN As thOPENFILENAME
    Dim strFileName As String
    Dim FileTitle As String
    Dim fResult As Boolean
            
    If IsMissing(InitialDir) Then InitialDir = CurDir
    If IsMissing(Filter) Then Filter = ""
    If IsMissing(FilterIndex) Then FilterIndex = 1
    If IsMissing(Flags) Then Flags = 0&
    If IsMissing(DefaultEx) Then DefaultEx = ""
    If IsMissing(fileName) Then fileName = ""
    If IsMissing(DialogTitle) Then DialogTitle = ""
    If IsMissing(hwnd) Then hwnd = 0
    If IsMissing(OpenFile) Then OpenFile = True
    
    strFileName = Left(fileName & String(254, 0), 254)
    FileTitle = String(254, 0)
    
    With OFN
        .lStructSize = LenB(OFN)
        .hwndOwner = 0&
        .strFilter = Filter
        .nFilterIndex = FilterIndex
        .strFile = strFileName
        .nMaxFile = LenB(strFileName)
        .strFileTitle = FileTitle
        .nMaxFileTitle = LenB(FileTitle)
        .strTitle = DialogTitle
        .Flags = Flags
        .strDefExt = DefaultEx
        .strInitialDir = InitialDir
        .hInstance = 0&
        .lpfnHook = 0&
        .strCustomFilter = String(254, 0)
        .nMaxCustFilter = 254
    End With
        
    On Error Resume Next
    Err.Clear
    
    If OpenFile Then fResult = th_apiGetOpenFileName(OFN) Else fResult = th_apiGetSaveFileName(OFN)

    If fResult Then
        If Not IsMissing(Flags) Then Flags = OFN.Flags
        thCommonFileOpenSave = TrimNull(OFN.strFile)
    Else
        thCommonFileOpenSave = vbNullString
    End If
       
End Function

Function thAddFilterItem(strFilter As String, strDescription As String, Optional varItem As Variant) As String

    If IsMissing(varItem) Then varItem = "*.*"
    thAddFilterItem = strFilter & strDescription & vbNullChar & varItem & vbNullChar
    
End Function

Function TrimNull(ByVal strItem As String) As String
    
    Dim intPos As Integer
    intPos = InStr(strItem, vbNullChar)
    If intPos > 0 Then
        TrimNull = Left(strItem, intPos - 1)
    Else
        TrimNull = strItem
    End If
        
End Function

Attribute VB_Name = "MD5CalculationModule"
'------------------------------------------------------------------------------
'
' MD5 Calculation Module
'
' Derived from the RSA Data Security, Inc. MD5 Message-Digest Algorithm,
' as set out in the memo RFC1321.
'
'
' ASP VBScript code for generating an MD5 'digest' or 'signature' of a string. The
' MD5 algorithm is one of the industry standard methods for generating digital
' signatures. It is generically known as a digest, digital signature, one-way
' encryption, hash or checksum algorithm. A common use for MD5 is for password
' encryption as it is one-way in nature, that does not mean that your passwords
' are not free from a dictionary attack.
'
' This is 'free' software with the following restrictions:
'
' You may not redistribute this code as a 'sample' or 'demo'. However, you are free
' to use the source code in your own code, but you may not claim that you created
' the sample code. It is expressly forbidden to sell or profit from this source code
' other than by the knowledge gained or the enhanced value added by your own code.
'
' Use of this software is also done so at your own risk. The code is supplied as
' is without warranty or guarantee of any kind.
'
' Should you wish to commission some derivative work based on this code provided
' here, or any consultancy work, please do not hesitate to contact us.
'
' Web Site:  http://www.frez.co.uk
' E-mail:    sales@frez.co.uk
'
'------------------------------------------------------------------------------

Private Const BITS_TO_A_BYTE = 8
Private Const BYTES_TO_A_WORD = 4
Private Const BITS_TO_A_WORD = 32

Private m_lOnBits(30)
Private m_l2Power(30)

Private Sub Initialization()
    m_lOnBits(0) = CLng(1)
    m_lOnBits(1) = CLng(3)
    m_lOnBits(2) = CLng(7)
    m_lOnBits(3) = CLng(15)
    m_lOnBits(4) = CLng(31)
    m_lOnBits(5) = CLng(63)
    m_lOnBits(6) = CLng(127)
    m_lOnBits(7) = CLng(255)
    m_lOnBits(8) = CLng(511)
    m_lOnBits(9) = CLng(1023)
    m_lOnBits(10) = CLng(2047)
    m_lOnBits(11) = CLng(4095)
    m_lOnBits(12) = CLng(8191)
    m_lOnBits(13) = CLng(16383)
    m_lOnBits(14) = CLng(32767)
    m_lOnBits(15) = CLng(65535)
    m_lOnBits(16) = CLng(131071)
    m_lOnBits(17) = CLng(262143)
    m_lOnBits(18) = CLng(524287)
    m_lOnBits(19) = CLng(1048575)
    m_lOnBits(20) = CLng(2097151)
    m_lOnBits(21) = CLng(4194303)
    m_lOnBits(22) = CLng(8388607)
    m_lOnBits(23) = CLng(16777215)
    m_lOnBits(24) = CLng(33554431)
    m_lOnBits(25) = CLng(67108863)
    m_lOnBits(26) = CLng(134217727)
    m_lOnBits(27) = CLng(268435455)
    m_lOnBits(28) = CLng(536870911)
    m_lOnBits(29) = CLng(1073741823)
    m_lOnBits(30) = CLng(2147483647)
    
    m_l2Power(0) = CLng(1)
    m_l2Power(1) = CLng(2)
    m_l2Power(2) = CLng(4)
    m_l2Power(3) = CLng(8)
    m_l2Power(4) = CLng(16)
    m_l2Power(5) = CLng(32)
    m_l2Power(6) = CLng(64)
    m_l2Power(7) = CLng(128)
    m_l2Power(8) = CLng(256)
    m_l2Power(9) = CLng(512)
    m_l2Power(10) = CLng(1024)
    m_l2Power(11) = CLng(2048)
    m_l2Power(12) = CLng(4096)
    m_l2Power(13) = CLng(8192)
    m_l2Power(14) = CLng(16384)
    m_l2Power(15) = CLng(32768)
    m_l2Power(16) = CLng(65536)
    m_l2Power(17) = CLng(131072)
    m_l2Power(18) = CLng(262144)
    m_l2Power(19) = CLng(524288)
    m_l2Power(20) = CLng(1048576)
    m_l2Power(21) = CLng(2097152)
    m_l2Power(22) = CLng(4194304)
    m_l2Power(23) = CLng(8388608)
    m_l2Power(24) = CLng(16777216)
    m_l2Power(25) = CLng(33554432)
    m_l2Power(26) = CLng(67108864)
    m_l2Power(27) = CLng(134217728)
    m_l2Power(28) = CLng(268435456)
    m_l2Power(29) = CLng(536870912)
    m_l2Power(30) = CLng(1073741824)
End Sub

Private Function LShift(lValue, iShiftBits)
    If iShiftBits = 0 Then
        LShift = lValue
        Exit Function
    ElseIf iShiftBits = 31 Then
        If lValue And 1 Then
            LShift = &H80000000
        Else
            LShift = 0
        End If
        Exit Function
    ElseIf iShiftBits < 0 Or iShiftBits > 31 Then
        Err.Raise 6
    End If

    If (lValue And m_l2Power(31 - iShiftBits)) Then
        LShift = ((lValue And m_lOnBits(31 - (iShiftBits + 1))) * m_l2Power(iShiftBits)) Or &H80000000
    Else
        LShift = ((lValue And m_lOnBits(31 - iShiftBits)) * m_l2Power(iShiftBits))
    End If
End Function

Private Function RShift(lValue, iShiftBits)
    If iShiftBits = 0 Then
        RShift = lValue
        Exit Function
    ElseIf iShiftBits = 31 Then
        If lValue And &H80000000 Then
            RShift = 1
        Else
            RShift = 0
        End If
        Exit Function
    ElseIf iShiftBits < 0 Or iShiftBits > 31 Then
        Err.Raise 6
    End If
    
    RShift = (lValue And &H7FFFFFFE) \ m_l2Power(iShiftBits)

    If (lValue And &H80000000) Then
        RShift = (RShift Or (&H40000000 \ m_l2Power(iShiftBits - 1)))
    End If
End Function

Private Function RotateLeft(lValue, iShiftBits)
    RotateLeft = LShift(lValue, iShiftBits) Or RShift(lValue, (32 - iShiftBits))
End Function

Private Function AddUnsigned(lX, lY)
    Dim lX4
    Dim lY4
    Dim lX8
    Dim lY8
    Dim lResult
 
    lX8 = lX And &H80000000
    lY8 = lY And &H80000000
    lX4 = lX And &H40000000
    lY4 = lY And &H40000000
 
    lResult = (lX And &H3FFFFFFF) + (lY And &H3FFFFFFF)
 
    If lX4 And lY4 Then
        lResult = lResult Xor &H80000000 Xor lX8 Xor lY8
    ElseIf lX4 Or lY4 Then
        If lResult And &H40000000 Then
            lResult = lResult Xor &HC0000000 Xor lX8 Xor lY8
        Else
            lResult = lResult Xor &H40000000 Xor lX8 Xor lY8
        End If
    Else
        lResult = lResult Xor lX8 Xor lY8
    End If
 
    AddUnsigned = lResult
End Function

Private Function F(x, y, z)
    F = (x And y) Or ((Not x) And z)
End Function

Private Function G(x, y, z)
    G = (x And z) Or (y And (Not z))
End Function

Private Function H(x, y, z)
    H = (x Xor y Xor z)
End Function

Private Function I(x, y, z)
    I = (y Xor (x Or (Not z)))
End Function

Private Sub FF(a, b, C, d, x, S, ac)
    a = AddUnsigned(a, AddUnsigned(AddUnsigned(F(b, C, d), x), ac))
    a = RotateLeft(a, S)
    a = AddUnsigned(a, b)
End Sub

Private Sub GG(a, b, C, d, x, S, ac)
    a = AddUnsigned(a, AddUnsigned(AddUnsigned(G(b, C, d), x), ac))
    a = RotateLeft(a, S)
    a = AddUnsigned(a, b)
End Sub

Private Sub HH(a, b, C, d, x, S, ac)
    a = AddUnsigned(a, AddUnsigned(AddUnsigned(H(b, C, d), x), ac))
    a = RotateLeft(a, S)
    a = AddUnsigned(a, b)
End Sub

Private Sub II(a, b, C, d, x, S, ac)
    a = AddUnsigned(a, AddUnsigned(AddUnsigned(I(b, C, d), x), ac))
    a = RotateLeft(a, S)
    a = AddUnsigned(a, b)
End Sub

Private Function ConvertToWordArray(sMessage)
    Dim lMessageLength
    Dim lNumberOfWords
    Dim lWordArray()
    Dim lBytePosition
    Dim lByteCount
    Dim lWordCount
    
    Const MODULUS_BITS = 512
    Const CONGRUENT_BITS = 448
    
    lMessageLength = Len(sMessage)
    
    lNumberOfWords = (((lMessageLength + ((MODULUS_BITS - CONGRUENT_BITS) \ BITS_TO_A_BYTE)) \ (MODULUS_BITS \ BITS_TO_A_BYTE)) + 1) * (MODULUS_BITS \ BITS_TO_A_WORD)
    ReDim lWordArray(lNumberOfWords - 1)
    
    lBytePosition = 0
    lByteCount = 0
    Do Until lByteCount >= lMessageLength
        lWordCount = lByteCount \ BYTES_TO_A_WORD
        lBytePosition = (lByteCount Mod BYTES_TO_A_WORD) * BITS_TO_A_BYTE
        lWordArray(lWordCount) = lWordArray(lWordCount) Or LShift(Asc(Mid(sMessage, lByteCount + 1, 1)), lBytePosition)
        lByteCount = lByteCount + 1
    Loop

    lWordCount = lByteCount \ BYTES_TO_A_WORD
    lBytePosition = (lByteCount Mod BYTES_TO_A_WORD) * BITS_TO_A_BYTE

    lWordArray(lWordCount) = lWordArray(lWordCount) Or LShift(&H80, lBytePosition)

    lWordArray(lNumberOfWords - 2) = LShift(lMessageLength, 3)
    lWordArray(lNumberOfWords - 1) = RShift(lMessageLength, 29)
    
    ConvertToWordArray = lWordArray
End Function

Private Function WordToHex(lValue)
    Dim lByte
    Dim lCount
    
    For lCount = 0 To 3
        lByte = RShift(lValue, lCount * BITS_TO_A_BYTE) And m_lOnBits(BITS_TO_A_BYTE - 1)
        WordToHex = WordToHex & Right("0" & Hex(lByte), 2)
    Next
End Function

Public Function MD5(sMessage)
    Dim x
    Dim k
    Dim AA
    Dim BB
    Dim CC
    Dim DD
    Dim a
    Dim b
    Dim C
    Dim d
    
    Const S11 = 7
    Const S12 = 12
    Const S13 = 17
    Const S14 = 22
    Const S21 = 5
    Const S22 = 9
    Const S23 = 14
    Const S24 = 20
    Const S31 = 4
    Const S32 = 11
    Const S33 = 16
    Const S34 = 23
    Const S41 = 6
    Const S42 = 10
    Const S43 = 15
    Const S44 = 21

    Initialization

    x = ConvertToWordArray(sMessage)
    
    a = &H67452301
    b = &HEFCDAB89
    C = &H98BADCFE
    d = &H10325476

    For k = 0 To UBound(x) Step 16
        AA = a
        BB = b
        CC = C
        DD = d
    
        FF a, b, C, d, x(k + 0), S11, &HD76AA478
        FF d, a, b, C, x(k + 1), S12, &HE8C7B756
        FF C, d, a, b, x(k + 2), S13, &H242070DB
        FF b, C, d, a, x(k + 3), S14, &HC1BDCEEE
        FF a, b, C, d, x(k + 4), S11, &HF57C0FAF
        FF d, a, b, C, x(k + 5), S12, &H4787C62A
        FF C, d, a, b, x(k + 6), S13, &HA8304613
        FF b, C, d, a, x(k + 7), S14, &HFD469501
        FF a, b, C, d, x(k + 8), S11, &H698098D8
        FF d, a, b, C, x(k + 9), S12, &H8B44F7AF
        FF C, d, a, b, x(k + 10), S13, &HFFFF5BB1
        FF b, C, d, a, x(k + 11), S14, &H895CD7BE
        FF a, b, C, d, x(k + 12), S11, &H6B901122
        FF d, a, b, C, x(k + 13), S12, &HFD987193
        FF C, d, a, b, x(k + 14), S13, &HA679438E
        FF b, C, d, a, x(k + 15), S14, &H49B40821
    
        GG a, b, C, d, x(k + 1), S21, &HF61E2562
        GG d, a, b, C, x(k + 6), S22, &HC040B340
        GG C, d, a, b, x(k + 11), S23, &H265E5A51
        GG b, C, d, a, x(k + 0), S24, &HE9B6C7AA
        GG a, b, C, d, x(k + 5), S21, &HD62F105D
        GG d, a, b, C, x(k + 10), S22, &H2441453
        GG C, d, a, b, x(k + 15), S23, &HD8A1E681
        GG b, C, d, a, x(k + 4), S24, &HE7D3FBC8
        GG a, b, C, d, x(k + 9), S21, &H21E1CDE6
        GG d, a, b, C, x(k + 14), S22, &HC33707D6
        GG C, d, a, b, x(k + 3), S23, &HF4D50D87
        GG b, C, d, a, x(k + 8), S24, &H455A14ED
        GG a, b, C, d, x(k + 13), S21, &HA9E3E905
        GG d, a, b, C, x(k + 2), S22, &HFCEFA3F8
        GG C, d, a, b, x(k + 7), S23, &H676F02D9
        GG b, C, d, a, x(k + 12), S24, &H8D2A4C8A
            
        HH a, b, C, d, x(k + 5), S31, &HFFFA3942
        HH d, a, b, C, x(k + 8), S32, &H8771F681
        HH C, d, a, b, x(k + 11), S33, &H6D9D6122
        HH b, C, d, a, x(k + 14), S34, &HFDE5380C
        HH a, b, C, d, x(k + 1), S31, &HA4BEEA44
        HH d, a, b, C, x(k + 4), S32, &H4BDECFA9
        HH C, d, a, b, x(k + 7), S33, &HF6BB4B60
        HH b, C, d, a, x(k + 10), S34, &HBEBFBC70
        HH a, b, C, d, x(k + 13), S31, &H289B7EC6
        HH d, a, b, C, x(k + 0), S32, &HEAA127FA
        HH C, d, a, b, x(k + 3), S33, &HD4EF3085
        HH b, C, d, a, x(k + 6), S34, &H4881D05
        HH a, b, C, d, x(k + 9), S31, &HD9D4D039
        HH d, a, b, C, x(k + 12), S32, &HE6DB99E5
        HH C, d, a, b, x(k + 15), S33, &H1FA27CF8
        HH b, C, d, a, x(k + 2), S34, &HC4AC5665
    
        II a, b, C, d, x(k + 0), S41, &HF4292244
        II d, a, b, C, x(k + 7), S42, &H432AFF97
        II C, d, a, b, x(k + 14), S43, &HAB9423A7
        II b, C, d, a, x(k + 5), S44, &HFC93A039
        II a, b, C, d, x(k + 12), S41, &H655B59C3
        II d, a, b, C, x(k + 3), S42, &H8F0CCC92
        II C, d, a, b, x(k + 10), S43, &HFFEFF47D
        II b, C, d, a, x(k + 1), S44, &H85845DD1
        II a, b, C, d, x(k + 8), S41, &H6FA87E4F
        II d, a, b, C, x(k + 15), S42, &HFE2CE6E0
        II C, d, a, b, x(k + 6), S43, &HA3014314
        II b, C, d, a, x(k + 13), S44, &H4E0811A1
        II a, b, C, d, x(k + 4), S41, &HF7537E82
        II d, a, b, C, x(k + 11), S42, &HBD3AF235
        II C, d, a, b, x(k + 2), S43, &H2AD7D2BB
        II b, C, d, a, x(k + 9), S44, &HEB86D391
    
        a = AddUnsigned(a, AA)
        b = AddUnsigned(b, BB)
        C = AddUnsigned(C, CC)
        d = AddUnsigned(d, DD)
    Next
    
    MD5 = LCase(WordToHex(a) & WordToHex(b) & WordToHex(C) & WordToHex(d))
End Function

Attribute VB_Name = "ObligatedPersonsForm"
Attribute VB_Base = "0{3EDCA9B4-0D85-4FC9-8ED8-58AB41716CC8}{3E1286B1-81C9-481D-BCE7-9266CE9CB909}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Private Sub btnCancel_Click()

    Hide

End Sub

Private Sub btnOK_Click()
    
    If cbxObligated.value > 0 Then
        
        Sheet1.Unprotect (STR_Pass_Sheet)

        Sheet1.Range("Code1") = (cbxObligated.value - (cbxObligated.value Mod 10)) \ 10
        Sheet1.Range("Code2") = cbxObligated.value Mod 10

        If cbxObligated.ListIndex = 31 - 1 Then
            Sheet1.Range("Code3") = cbxObligated31.value
        ElseIf cbxObligated.ListIndex = 38 - 1 Then
            Sheet1.Range("Code3") = cbxObligated31.value
        Else
            Sheet1.Range("Code3") = 0
        End If

        Sheet1.EnableSelection = xlUnlockedCells
        Sheet1.Protect Password:=STR_Pass_Sheet, Contents:=True

    End If

    Hide

End Sub

Private Sub cbxObligated_Change()

    If cbxObligated.ListIndex = 31 - 1 Then
        cbxObligated31.RowSource = "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|!ObligatedPersons31List"
        cbxObligated31.ListIndex = -1
        cbxObligated31.Enabled = True
    ElseIf cbxObligated.ListIndex = 38 - 1 Then
        cbxObligated31.RowSource = "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|!ObligatedPersons38List"
        cbxObligated31.ListIndex = -1
        cbxObligated31.Enabled = True
    Else
        cbxObligated31.RowSource = "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|!$A$2:$B$2" 'empty
        cbxObligated31.ListIndex = -1
        cbxObligated31.Enabled = False
    End If

    Call SetDescription
    
End Sub

Private Sub SetDescription()

    'cbxObligated.ControlTipText = SplitLongTextToMultyLine(cbxObligated.text, 100)

    Dim desc As String
    desc = Str((cbxObligated.value - (cbxObligated.value Mod 10)) \ 10)
    desc = desc & Str(cbxObligated.value Mod 10)

    If cbxObligated.ListIndex = 31 - 1 Then
        desc = desc & Str(cbxObligated31.value)
        desc = desc & " - " & cbxObligated.text _
                    & " - " & cbxObligated31.text
    ElseIf cbxObligated.ListIndex = 38 - 1 Then
        desc = desc & Str(cbxObligated31.value)
        desc = desc & " - " & cbxObligated.text _
                    & " - " & cbxObligated31.text
    Else
        desc = desc & Str(0)
        desc = desc & " - " & cbxObligated.text
    End If
    
    lblDesc.Caption = desc

End Sub


Private Sub cbxObligated31_Change()
    
    Call SetDescription
    
End Sub


Private Sub UserForm_Initialize()

    cbxObligated.ListIndex = -1
    cbxObligated.ControlTipText = ""
    cbxObligated31.ListIndex = -1
    cbxObligated31.Enabled = False

End Sub

Private Function SplitLongTextToMultyLine(text As String, _
                                          lineLength As Integer) As String

    Dim words As Variant
    words = Split(text, " ")
    
    Dim currentLineLength As Integer
    Dim multyLine As String
    
    multyLine = ""
    currentLineLength = 0
    
    For Each word In words
        multyLine = multyLine & word
        currentLineLength = currentLineLength + Len(word)
        If currentLineLength > lineLength Then
            currentLineLength = 0
            multyLine = multyLine & vbCrLf
        Else
            multyLine = multyLine & " "
        End If
    Next
    
    SplitLongTextToMultyLine = multyLine
End Function
Attribute VB_Name = "SharedModule"
'------------------------------------------------------------------------------
'
' Primary Shared Module
'
'------------------------------------------------------------------------------

' Major changes
'
' * 2018.05: |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| -> |fffd||fffd||fffd||fffd||fffd||fffd||fffd|
'       General: added EGN column in almost all existing tables (Sheet4-Sheet6)
'       Sheet 3: new table  -- "Table1_2"
'       Sheet 4: new tables -- "Table5N" -> 3.3 & "Table6N" -> 3.4
'              : table number changes -- T4 -> 3.2, T5 -> 3.5
'       Sheet 5: table number changes -- T6 -> 4, T7 -> 5, T8 -> 6, T9 -> 7
'       Sheet 6: new table -- "Table12N" -> 8
'              : table number changes -- T10 -> 9, T11 -> 10, T12 -> 11
'       Sheet 7: table number changes -- T13 -> 12, T14 -> 13
'       Sheet 8: new sub-table 2.4
'              : table number changes -- T15 -> 14
'       Sheet 9: remains unused

Option Private Module
Option Explicit

' Global Constants

Public Const STR_Pass_Sheet = "str" + "anici"
Public Const STR_Pass_Book = "kni" + "ga"

Public Const STR_Marked = "X"
Public Const STR_BGCitizen = "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|"
Public Const STR_ForeignCitizen = "|fffd||fffd||fffd||fffd||fffd|"

Public Const STR_Save_File_Name = "$name-$Y$M$d$h$m-ZPKONPI_D35A1T2-1.xls" '|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|

' Sheet 3
Public Const ROW_Default_Table0 = 3
Public Const ROW_Default_Table1 = 2
Public Const ROW_Default_Table1_1 = 2
Public Const ROW_Default_Table1_2 = 2 ' 2018.05
Public Const ROW_Default_Table2 = 1
' Sheet 4
Public Const ROW_Default_Table3 = 1
Public Const ROW_Default_Table3_1 = 1
Public Const ROW_Default_Table4 = 1
Public Const ROW_Default_Table5 = 1
Public Const ROW_Default_Table5N = 1 ' 2018.05
Public Const ROW_Default_Table6N = 1 ' 2018.05
' Sheet 5
Public Const ROW_Default_Table6 = 2
Public Const ROW_Default_Table7 = 3
Public Const ROW_Default_Table8 = 3
Public Const ROW_Default_Table9 = 3
' Sheet 6
Public Const ROW_Default_Table10 = 2
Public Const ROW_Default_Table11 = 7
Public Const ROW_Default_Table12 = 4
Public Const ROW_Default_Table12N = 3 ' 2018.05
' Sheet 7
Public Const ROW_Default_Table13 = 4
Public Const ROW_Default_Table14 = 5
' Sheet 8
Public Const ROW_Default_Table15_1 = 3
Public Const ROW_Default_Table15_2 = 4
Public Const ROW_Default_Table15_3 = 3
Public Const ROW_Default_Table15_4 = 2

Public Const COLOR_FontDisabled As Long = &HC0C0C0 ' Grey
Public Const COLOR_FontEnabled As Long = 0 ' Black

' Custom formats for Excel cells

Public Const FORMAT_INTERNAL_DATE = "dd.MM.yyyy"
Public Const FORMAT_INTERNAL_INTEGER = "0"
Public Const FORMAT_INTERNAL_TWOYEAR = "00"
Public Const FORMAT_TEXT = "@"
Public Const FORMAT_GENERAL = "General"

' Columns Arrays

Public TC0, TC1, TC1_1, TC1_2, TC2, _
       TC3, TC3_1, TC4, TC5, TC5N, TC6N, _
       TC6, TC7, TC8, TC9, _
       TC10, TC11, TC12, TC12N, _
       TC13, TC14, _
       TC15 As Variant
       
Public TCN0 As Variant
'Public TCN0, TCN1, TCN1_1, TCN2, _
'       TCN3, TCN3_1, TCN4, TCN5, _
'       TCN6, TCN7, TCN8, TCN9, _
'       TCN10, TCN11, TCN12, _
'       TCN13, TCN14, _
'       TCN15 As Variant

' Columns Arrays Initialization

Public Sub Initialize_TableStructure()

    ' Table_Data_Column = Sheet_Column - 1
    ' Sheet 3
    TC0 = Array(Empty, 0, 1, 2, 10)
    TC1 = Array(Empty, 0, 1, 3, 5, 7, 8, 9, 10, 13, 14, 15, 16, 18)
    TC1_1 = Array(Empty, 0, 1, 3, 5, 7, 8, 9, 10, 13, 14, 15, 16, 18)
    TC1_2 = Array(Empty, 0, 1, 3, 5, 7, 8, 9, 10, 13, 14, 15, 16, 18) ' 2018.05
    TC2 = Array(Empty, 0, 1, 5, 8, 9, 10, 11, 14, 15, 16, 17)
    ' Sheet 4
    TC3 = Array(Empty, 0, 1, 4, 6, 7, 8, 11, 12, 13, 15)
    TC3_1 = Array(Empty, 0, 1, 4, 6, 7, 8, 11, 12, 13, 15)
    TC4 = Array(Empty, 0, 1, 4, 6, 7, 8, 11, 12, 13, 15)
    TC5 = Array(Empty, 0, 1, 4, 6, 7, 13, 14, 15)
    TC5N = Array(Empty, 0, 1, 4, 6, 7, 8, 11, 12, 13, 15) ' 2018.05
    TC6N = Array(Empty, 0, 1, 4, 6, 7, 8, 11, 12, 13, 15) ' 2018.05
    ' Sheet 5
    TC6 = Array(Empty, 0, 1, 4, 5, 6, 13, 14)
    TC7 = Array(Empty, 0, 1, 3, 4, 5, 9, 10, 12, 14)
    TC8 = Array(Empty, 0, 1, 4, 5, 6, 7, 11, 12, 14, 16)
    TC9 = Array(Empty, 0, 1, 4, 5, 6, 7, 11, 12, 14, 16)
    ' Sheet 6
    TC10 = Array(Empty, 0, 1, 4, 5, 6, 7, 8, 9, 12, 13, 15)
    TC11 = Array(Empty, 0, 1, 4, 5, 7, 8, 9, 12, 13, 15)
    TC12 = Array(Empty, 0, 1, 4, 5, 7, 8, 9, 14, 15)
    TC12N = Array(Empty, 0, 1, 3, 4, 6, 10, 11, 13, 15) ' 2018.05
    ' Sheet 7
    TC13 = Array(Empty, 0, 1, 12, 13)
    TC14 = Array(Empty, 0, 1, 3, 5, 8, 10, 12)
    ' Sheet 8
    TC15 = Array(Empty, 0, 1, 2, 3, 4, 5, 6, 7, 8)

    ' Table Column Name
    TCN0 = Array(Empty, _
        "no", _
        "name", _
        "egn", _
        "citizenship")
    
' unused...
'    TCN1 = Array(Empty, _
'        "no", _
'        "vid_na_imota", _
'        "mestonahojdenie", _
'        "obshtina", _
'        "plosht_kv_m", _
'        "razgynata_zastroena_plosht_kv_m", _
'        "godina_na_pridobivane", _
'        "sobstvenik_ime", _
'        "sobstvenik_idealna_chast", _
'        "cena_na_pridobivane_lv", _
'        "pravno_osnovanie_za_pridobivane", _
'        "proizhod_na_sredstvata")
'    TCN1_1 = Array(Empty, _
'        "no", _
'        "vid_na_imota", _
'        "mestonahojdenie", _
'        "obshtina", _
'        "plosht_dekara", _
'        "razgynata_zastroena_plosht_kv_m", _
'        "godina_na_pridobivane", _
'        "sobstvenik_ime", _
'        "sobstvenik_idealna_chast", _
'        "cena_na_pridobivane_lv", _
'        "pravno_osnovanie_za_pridobivane", _
'        "proizhod_na_sredstvata")
'    TCN2 = Array(Empty, _
'        "no", _
'        "vid_na_imota", _
'        "mestonahojdenie", _
'        "obshtina", _
'        "plosht_kv_m_ili_dekara", _
'        "razgynata_zastroena_plosht_kv_m", _
'        "sobstvenik_ime", _
'        "sobstvenik_idealna_chast", _
'        "cena_na_sdelkata_lv", _
'        "pravno_osnovanie_za_otchujdavane")
'    TCN3 = Array(Empty, _
'        "no", _
'        "vid_na_prevoznoto_sredstvo", _
'        "marka_na_prevoznoto_sredstvo", _
'        "cena_na_pridobivane_lv", _
'        "godina_na_pridobivane", _
'        "sobstvenik_ime", _
'        "sobstvenik_idealna_chast", _
'        "pravno_osnovanie_za_pridobivane", _
'        "proizhod_na_sredstvata")
'    TCN3_1 = Array(Empty, _
'        "no", _
'        "vid_na_zemedelskata_ili_gorskata_tehnika", _
'        "marka_na_tehnikata", _
'        "cena_na_pridobivane_lv", _
'        "godina_na_pridobivane", _
'        "sobstvenik_ime", _
'        "sobstvenik_idealna_chast", _
'        "pravno_osnovanie_za_pridobivane", _
'        "proizhod_na_sredstvata")
'    TCN4 = Array(Empty, _
'        "no", _
'        "vid_na_prevoznoto_sredstvo", _
'        "marka_na_prevoznoto_sredstvo", _
'        "cena_na_pridobivane_lv", _
'        "godina_na_pridobivane", _
'        "sobstvenik_ime", _
'        "sobstvenik_idealna_chast", _
'        "pravno_osnovanie_za_pridovivane", _
'        "proizhod_na_sredstvata")
'    TCN5 = Array(Empty, _
'        "no", _
'        "vid_na_prevoznoto_sredstvo", _
'        "marka_na_prevoznoto_sredstvo", _
'        "cena_na_otchujdavane_lv", _
'        "sobstvenik_ime", _
'        "sobstvenik_idealna_chast", _
'        "pravno_osnovanie_za_otchujdavane")
'    TCN6 = Array(Empty, _
'        "no", _
'        "razmer_na_sredstvata", _
'        "vid_valuta", _
'        "ravnostoinost_v_leva", _
'        "sobstvenik_ime", _
'        "proizhod_na_sredstvata")
'    TCN7 = Array(Empty, _
'        "no", _
'        "razmer_na_sredstvata", _
'        "vid_valuta", _
'        "ravnostoinost_v_leva", _
'        "tituliar_na_vloga_ime", _
'        "v_stranata", _
'        "v_chujbina", _
'        "proizhod_na_sredstvata")
'    TCN8 = Array(Empty, _
'        "no", _
'        "vid_na_vzemaneto", _
'        "razmer_na_vzemaneto", _
'        "vid_valuta", _
'        "ravnostoinost_v_leva", _
'        "tituliar_na_vzemaneto_ime", _
'        "pravno_osnovanie_za_vzemaneto", _
'        "ot_mestni_lica", _
'        "ot_chujdestranni_lica")
'    TCN9 = Array(Empty, _
'        "no", _
'        "vid_na_zadyljenieto", _
'        "razmer_na_zadyljenieto", _
'        "vid_valuta", _
'        "ravnostoinost_v_leva", _
'        "tituliar_na_zadyljenieto_ime", _
'        "pravno_osnovanie_za_zadyljenieto", _
'        "kym_banki", _
'        "kym_fizicheski_i_iuridicheski_lica")
'    TCN10 = Array(Empty, _
'        "no", _
'        "vid_na_cennite_knigi", _
'        "broi_na_cennite_knigi", _
'        "povereni_na_investicionen_posrednik_knija", _
'        "povereni_na_investicionen_posrednik_pari", _
'        "emitent", _
'        "cena_na_pridobivane_lv", _
'        "sobstvenik_ili_tituliar_na_pravoto_ime", _
'        "pravno_osnovanie_za_pridovivane", _
'        "proizhod_na_sredstvata")
'    TCN11 = Array(Empty, _
'        "no", _
'        "vid_na_imushtestvoto", _
'        "razmer_na_dialovoto_uchastie", _
'        "naimenovanie_na_drujestvoto", _
'        "sedalishte", _
'        "stojnost_na_dialovoto_uchastie", _
'        "sobstvenik_ili_tituliar_na_pravoto_ime", _
'        "pravno_osnovanie_za_pridovivane", _
'        "proizhod_na_sredstvata")
'    TCN12 = Array(Empty, _
'        "no", _
'        "vid_na_imushtestvoto", _
'        "razmer_na_dialovoto_uchastie", _
'        "naimenovanie_na_drujestvoto", _
'        "sedalishte", _
'        "cena_na_otchujdavane_lv", _
'        "sobstvenik_ili_tituliar_na_pravoto_ime", _
'        "pravno_osnovanie_za_otchujdavane")
'    TCN13 = Array(Empty, _
'        "no", _
'        "vidove_dohod", _
'        "razmer_dohod_na_deklaratora", _
'        "razmer_dohod_na_brachnia_partnior")
'    TCN14 = Array(Empty, _
'        "no", _
'        "vid_na_obezpechenieto", _
'        "razmer_na_obezpechenieto", _
'        "harakter_obezpechenie_ot_deklaratora", _
'        "harakter_obezpechenie_v_polza_na_deklaratora", _
'        "harakter_obezpechenie_ot_brachnia_partnior_ili_decata", _
'        "harakter_obezpechenie_v_polza_na_brachnia_partnior_ili_decata")
'    TCN15 = Array(Empty, _
'        "no", _
'        "vid_na_razhoda", _
'        "razmer_na_razhoda", _
'        "vid_valuta", _
'        "ravnostoinost_v_leva", _
'        "napraven_v_polza_na_deklaratora", _
'        "napraven_v_polza_na_deklaratora_za_chia_smetka", _
'        "napraven_v_polza_na_brachnia_partnior_ili_decata", _
'        "napraven_v_polza_na_brachnia_partnior_ili_decata_za_chia_smetka")

End Sub

' Toolkit Functions

Private Function GenerateSaveFileName(PersonName As String) As String
        
    Dim fileName, strName, strYear, strMonth, strDay, strHour, strMinute
        
    strName = Trim(PersonName)
    While InStr(1, strName, "  ") > 0
        strName = Replace(strName, "  ", " ")
    Wend
    If (Len(strName) = 0) Then
        strName = "unknown"
    End If
    strName = Replace(strName, " ", "_")
    strYear = Format(Now, "yyyy")
    strMonth = Format(Now, "mm")
    strDay = Format(Now, "dd")
    strHour = Format(Now, "hH")
    strMinute = Format(Now, "Nn")
    fileName = STR_Save_File_Name
    fileName = Replace(fileName, "$name", strName)
    fileName = Replace(fileName, "$Y", strYear)
    fileName = Replace(fileName, "$M", strMonth)
    fileName = Replace(fileName, "$d", strDay)
    fileName = Replace(fileName, "$h", strHour)
    fileName = Replace(fileName, "$m", strMinute)

    GenerateSaveFileName = fileName

End Function

Public Sub SaveBookOnFloppy(PersonName As String)

    On Error Resume Next
    Err.Clear
    
    Dim Response, Msg
    
    Msg = "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| ""|fffd|:"" |fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd| |fffd||fffd||fffd||fffd||fffd| ""|fffd||fffd|""."
    Response = MsgBox(Msg, vbOKCancel + vbExclamation + vbDefaultButton1, "|fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd|", "", 0)
    
    If Response = vbOK Then

        Dim fileName
        fileName = "A:\" & GenerateSaveFileName(PersonName)

        AddToLog ("|fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd|")
        
        ThisWorkbook.IsInternalSave = True
        Err.Clear

        ThisWorkbook.SaveCopyAs (fileName)

        ThisWorkbook.IsInternalSave = False

        If Err.Number <> 0 Then
            Msg = "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd|!" & vbCrLf & vbCrLf & Err.Description
            MsgBox Msg, vbCritical + vbOKOnly, "|fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd|", "", 0
        Else
            Msg = "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|: """ & fileName & """ |fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd|!"
            MsgBox Msg, vbInformation + vbOKOnly, "|fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd|", "", 0
        End If

    End If

End Sub

Public Sub SaveBook(PersonName As String)

    On Error Resume Next
    Err.Clear
    
    Dim fileName, Msg
    If (InStr(1, ThisWorkbook.FullName, "tp://", vbTextCompare) > 0) Then
        fileName = Application.DefaultFilePath & Application.PathSeparator & GenerateSaveFileName(PersonName)
    Else
        fileName = ThisWorkbook.Path & Application.PathSeparator & GenerateSaveFileName(PersonName)
    End If

    AddToLog ("|fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd|")
    
    ThisWorkbook.IsInternalSave = True
    Err.Clear

    ThisWorkbook.SaveCopyAs (fileName)

    ThisWorkbook.IsInternalSave = False

    If Err.Number <> 0 Then
        Msg = "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd|!" & vbCrLf & vbCrLf & Err.Description
        MsgBox Msg, vbCritical + vbOKOnly, "|fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd|", "", 0
    Else
        Msg = "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|: """ & fileName & """ |fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd|!"
        MsgBox Msg, vbInformation + vbOKOnly, "|fffd||fffd||fffd||fffd||fffd|", "", 0
    End If

End Sub

' Range Manipulations

Public Function Range_RemoveCaptionRow(SheetContainer As Worksheet, _
                                       Target As Range) As Range

    Set Range_RemoveCaptionRow = SheetContainer.Range( _
        SheetContainer.Cells(Target.row + 1, Target.Column), _
        SheetContainer.Cells(Target.row + Target.Rows.Count - 1, Target.Column + Target.Columns.Count - 1))

End Function

Public Function Range_RemoveCaptionColumn(SheetContainer As Worksheet, _
                                          Target As Range) As Range

    Set Range_RemoveCaptionColumn = SheetContainer.Range( _
        SheetContainer.Cells(Target.row, Target.Column + 1), _
        SheetContainer.Cells(Target.row + Target.Rows.Count - 1, Target.Column + Target.Columns.Count - 1))

End Function

Public Function Range_RemoveCaptionRowAndColumn(SheetContainer As Worksheet, _
                                                Target As Range) As Range

    Set Range_RemoveCaptionRowAndColumn = SheetContainer.Range( _
        SheetContainer.Cells(Target.row + 1, Target.Column + 1), _
        SheetContainer.Cells(Target.row + Target.Rows.Count - 1, Target.Column + Target.Columns.Count - 1))

End Function

Public Function Range_RemoveCaptionRowAndColumnAndLastColumns(SheetContainer As Worksheet, _
                                                              Target As Range, Columns As Integer) As Range

    Set Range_RemoveCaptionRowAndColumnAndLastColumns = SheetContainer.Range( _
        SheetContainer.Cells(Target.row + 1, Target.Column + 1), _
        SheetContainer.Cells(Target.row + Target.Rows.Count - 1, Target.Column + Target.Columns.Count - 1 - Columns))

End Function

Public Sub AppendTableByRange(SheetContainer As Worksheet, _
                              Target As Range)

    Dim insertRowPos, lastRowPos As Integer
    
    insertRowPos = Target.row + Target.Rows.Count - 1
    lastRowPos = insertRowPos + 1

    SheetContainer.Rows(insertRowPos).Insert xlShiftDown
    SheetContainer.Rows(lastRowPos).Copy (SheetContainer.Rows(insertRowPos))
    
    SheetContainer.Range( _
        SheetContainer.Cells(lastRowPos, Target.Column + 1), _
        SheetContainer.Cells(lastRowPos, Target.Columns.Count)).value = ""

End Sub

' General Table Manipulations

Public Sub InitializeTable(SheetContainer As Worksheet, _
                           TableRangeName As String, _
                           DefaultRows As Integer)

    On Error Resume Next
    Err.Clear

    SheetContainer.EnableCalculation = False
    
    Dim Tbl As Range
    Dim minRows As Integer
    Dim delRowPos As Integer

    Set Tbl = SheetContainer.Range(TableRangeName)
    minRows = DefaultRows + 1

    If (Tbl.Rows.Count < 2) Then
        MsgBox "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd| """ & TableRangeName & """!", vbCritical + vbOKOnly, "|fffd||fffd||fffd||fffd||fffd||fffd|", "", 0
        Exit Sub
    End If

    While (Tbl.Rows.Count < minRows)
        AppendTableByRange SheetContainer:=SheetContainer, Target:=Tbl
    Wend

    Range_RemoveCaptionRowAndColumn(SheetContainer, Tbl).value = ""

    While (Tbl.Rows.Count > minRows)
        delRowPos = Tbl.row + Tbl.Rows.Count - 1
        SheetContainer.Rows(delRowPos).Delete xlShiftUp
    Wend

    SheetContainer.EnableCalculation = True

End Sub

Public Sub AppendTable(SheetContainer As Worksheet, _
                       TableRangeName As String)

    On Error Resume Next
    Err.Clear

    SheetContainer.Unprotect (STR_Pass_Sheet)
    SheetContainer.EnableCalculation = False

    AppendTableByRange SheetContainer:=SheetContainer, Target:=SheetContainer.Range(TableRangeName)

    SheetContainer.EnableCalculation = True
    SheetContainer.EnableSelection = xlUnlockedCells
    SheetContainer.Protect Password:=STR_Pass_Sheet, Contents:=True

End Sub

Public Sub CleanUpTable(SheetContainer As Worksheet, _
                        TableRangeName As String, _
                        DefaultRows As Integer)

    On Error Resume Next
    Err.Clear

    SheetContainer.Unprotect (STR_Pass_Sheet)
    SheetContainer.EnableCalculation = False

    Dim Tbl As Range
    Dim minRows As Integer
    Dim row As Integer
    Dim col As Integer
    Dim delRowPos As Integer
    Dim del As Boolean
    Dim val As String
    
    Set Tbl = SheetContainer.Range(TableRangeName)
    minRows = DefaultRows + 1

    row = Tbl.Rows.Count

    While (Tbl.Rows.Count > minRows) And (row > 1)
        del = True
        For col = 2 To Tbl.Columns.Count
            
            val = Trim(Tbl.Cells(row, col))
            
            If Trim(Tbl.Cells(row, col)) <> "" Then
                del = False
                col = Tbl.Columns.Count
            End If
        Next
        
        If del Then
            delRowPos = Tbl.row + row - 1
            SheetContainer.Rows(delRowPos).Delete xlShiftUp
        End If
        
        row = row - 1
    Wend

    SheetContainer.EnableCalculation = True
    SheetContainer.EnableSelection = xlUnlockedCells
    SheetContainer.Protect Password:=STR_Pass_Sheet, Contents:=True

End Sub

' Validation and Control

Public Function CalculateHash() As String

    Dim AllAsText As String
    Dim I As Integer
    Dim C As Range

    AllAsText = ""

    For I = 2 To 8
        For Each C In ThisWorkbook.Sheets(I).Range("A1:Z300").Cells
            AllAsText = AllAsText + C.text
        Next
    Next I

    CalculateHash = Right(UCase(MD5(AllAsText)), 8)

End Function

Public Sub TrimEntered(Target As Range)

    On Error Resume Next
    Err.Clear

    Dim valueText As String
    Dim valueFormat As String
    Dim targetSheet As Worksheet
    
    Set targetSheet = Target.Parent

    If Not targetSheet.ProtectContents Then
        Exit Sub
    End If

    valueText = Trim(Target.value)
    valueFormat = Target.NumberFormat

    If (Len(valueText) = 0) And (Len(Target.value) > 0) Then
        Target.value = ""
        Exit Sub
    End If

    targetSheet.Unprotect (STR_Pass_Sheet)

    If IsNumeric(valueText) And (valueFormat = FORMAT_INTERNAL_INTEGER) Then
        
        Target.value = Fix(CDbl(valueText))
        
'        If Err.Number <> 0 Then
'            Target.value = 0
'        End If
'
'    ElseIf IsDate(valueText) And (StrComp(FORMAT_INTERNAL_DATE, valueFormat, vbTextCompare) = 0) Then
'
'        Target.value = CDate(valueText)
'
'        If Err.Number <> 0 Then
'            Target.value = 1
'        End If
    
    ElseIf (valueFormat = FORMAT_TEXT) Then
        
        Target.value = valueText
    
    End If

    targetSheet.EnableSelection = xlUnlockedCells
    targetSheet.Protect Password:=STR_Pass_Sheet, Contents:=True

End Sub

' Various

Public Function GetContainerName() As String

    On Error Resume Next
    Err.Clear

    Dim oc As Object

    GetContainerName = ""

    Set oc = ThisWorkbook.Container
    If (Err.Number = 0) Then
        Err.Clear
        GetContainerName = oc.name
        If (Err.Number <> 0) Or (Len(Trim(GetContainerName)) = 0) Then
            Err.Clear
            GetContainerName = TypeName(oc)
            If (Err.Number <> 0) Then
                GetContainerName = ""
            End If
        End If
    End If

    Set oc = Nothing
    Err.Clear

End Function

Public Sub AddToLog(Action As String)

    On Error Resume Next
    Err.Clear

    Dim Log As String
    
    If (Len(Sheet11.Range("Saved")) = 0) Then
        Log = ""
    Else
        Log = Sheet11.Range("Saved").value & vbLf
    End If

    Log = Log & "[" & Format(Now, "dd.mm.yyyy/hH:Nn:Ss") & "/" & Application.UserName & "]: " & Action & ", "
    Log = Log & "APP: " & Application.Version & "." & Application.Build & ", "
    Log = Log & "OS: " & Application.OperatingSystem
    Sheet11.Range("Saved").value = Log

End Sub
Attribute VB_Name = "Sheet1"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Control = "btnCalculateHash, 2, 1, MSForms, CommandButton"
Attribute VB_Control = "btnPrint, 4, 3, MSForms, CommandButton"
Attribute VB_Control = "btnSave, 226, 7, MSForms, CommandButton"
Attribute VB_Control = "btnHelp, 46, 8, MSForms, CommandButton"
Attribute VB_Control = "btnExport2XML, 156, 9, MSForms, CommandButton"
Attribute VB_Control = "btnCode, 19, 10, MSForms, CommandButton"
Attribute VB_Control = "LabelWarning, 123, 11, MSForms, Label"
Option Explicit

' Event Handlers

Private Sub btnExport2XML_Click()

    Call XML_ExportUI

End Sub

Private Sub btnCalculateHash_Click()

    Call actControl

End Sub

Private Sub btnHelp_Click()

    Call actHelp

End Sub

Private Sub btnPrint_Click()

    Call actPrint

End Sub

'Private Sub btnSaveFloppy_Click()
'
'    Call actSaveFloppy
'
'End Sub

Private Sub btnSave_Click()

    Call actSave

End Sub

Private Sub btnCode_Click()

    'If Sheet1.ProtectContents And Sheet1.Range("Code1").Locked Then
    '    Dim Msg As String
    '    Msg = "|fffd||fffd||fffd||fffd||fffd||fffd| ""|fffd||fffd||fffd|"" |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd|!"
    '    MsgBox Msg, vbOKOnly + vbCritical, "|fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd|"
    '    Exit Sub
    'Else
        ObligatedPersonsForm.Show (vbModal)
    'End If

End Sub
Attribute VB_Name = "Sheet10"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Control = "btnPrint, 2, 1, MSForms, CommandButton"
Option Explicit

' Event Handlers

Private Sub btnPrint_Click()

    On Error GoTo PrintError
    Err.Clear

    Dim Responce As Integer
    Dim Msg, MsgErr As String

    Msg = "|fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd|, |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd| |fffd||fffd||fffd||fffd||fffd| ""|fffd||fffd|""."
    Responce = MsgBox(Msg, vbOKCancel + vbExclamation + vbDefaultButton1, "|fffd||fffd||fffd||fffd||fffd|", "", 0)

    If Responce = vbOK Then
        ThisWorkbook.IsInternalPrint = True
        ThisWorkbook.IsValidated = True

        Sheet10.PrintOut

        ThisWorkbook.IsInternalPrint = False
        ThisWorkbook.IsValidated = False
    End If

    Exit Sub

PrintError:
    MsgErr = "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd| |fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|!"
    MsgBox MsgErr, vbCritical + vbOKOnly, "|fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd|", "", 0

End Sub
Attribute VB_Name = "Sheet11"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Control = "btnInitializeBook, 4, 0, MSForms, CommandButton"
Attribute VB_Control = "btnExport, 8, 1, MSForms, CommandButton"
Attribute VB_Control = "btnUnlockAll, 6, 2, MSForms, CommandButton"
Attribute VB_Control = "bntExcelNamesOut, 9, 3, MSForms, CommandButton"
Attribute VB_Control = "bntExcelNamesIn, 10, 4, MSForms, CommandButton"
Option Explicit

' Event Handlers

Private Sub btnInitializeBook_Click()

    If Sheet11.ProtectContents Then
        Exit Sub
    End If

    Dim Responce As Integer
    Dim Msg As String

    Msg = "|fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd|, |fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd| |fffd||fffd||fffd||fffd||fffd||fffd|!"
    Responce = MsgBox(Msg, vbOKCancel + vbExclamation + vbDefaultButton2, "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|!", "", 0)

    If Responce = vbCancel Then
        Exit Sub
    End If

    Call Initialize_Book

End Sub

Private Sub btnUnlockAll_Click()

    If Sheet11.ProtectContents Then
        Exit Sub
    End If

    Dim Responce As Integer
    Dim Msg As String

    Msg = "|fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|!"
    Responce = MsgBox(Msg, vbOKCancel + vbExclamation + vbDefaultButton2, "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|!", "", 0)

    If Responce = vbCancel Then
        Exit Sub
    End If

    Call Unlock_Book

End Sub

Private Sub btnExport_Click()

    If Sheet11.ProtectContents Then
        Exit Sub
    End If

    Call XML_ExportUI

End Sub

' Backup Excel Named Regions, Formulas, etc.

Private Sub bntExcelNamesOut_Click() ' |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd|, |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd| |fffd||fffd||fffd||fffd||fffd|

    If Sheet11.ProtectContents Then
        Exit Sub
    End If

    If MsgBox("|fffd||fffd| |fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| Excel Names, |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|!!!" & _
        vbCrLf & vbCrLf & "|fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd|?", _
        vbOKCancel + vbExclamation + vbDefaultButton2, "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|!", "", 0) = vbCancel Then

        Exit Sub
    End If
    
    Dim I As Integer
    Dim strText As String

    strText = ""

    For I = 1 To ThisWorkbook.Names.Count
        strText = strText + ThisWorkbook.Names(I).name & ThisWorkbook.Names(I).RefersTo & vbCrLf
    Next I

    Dim intFileNum As Integer
    
    intFileNum = FreeFile
    Open "c:\pub_reg_form_names.txt" For Output As #intFileNum
    Print #intFileNum, strText
    Close #intFileNum

    MsgBox "|fffd||fffd||fffd||fffd||fffd||fffd| |fffd| Excel Names ""c:\pub_reg_form_names.txt"" |fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd|."

End Sub

Private Sub bntExcelNamesIn_Click() ' |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd|, |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd| |fffd||fffd||fffd||fffd||fffd|

    If Sheet11.ProtectContents Then
        Exit Sub
    End If

    If MsgBox("|fffd||fffd| |fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| Excel Names, |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|!!!" & _
        vbCrLf & vbCrLf & "|fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd|?", _
        vbOKCancel + vbExclamation + vbDefaultButton2, "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|!", "", 0) = vbCancel Then

        Exit Sub
    End If

    Dim intFileNum, I, P As Integer
    Dim strLine, strName, strRefers As String
    Dim flagFound As Boolean
    
    intFileNum = FreeFile
    Open "c:\pub_reg_form_names.txt" For Input As #intFileNum
    Do While Not EOF(1)
        Line Input #intFileNum, strLine
        P = InStr(strLine, "=")
        If (P > 0) Then
            strName = Left(strLine, P - 1)
            strRefers = Mid(strLine, P)
            flagFound = False
            For I = 1 To ThisWorkbook.Names.Count
                If (ThisWorkbook.Names(I).name = strName) Then
                    ThisWorkbook.Names(I).RefersTo = strRefers
                    I = ThisWorkbook.Names.Count
                    flagFound = True
                End If
            Next I
            If Not flagFound Then
                ThisWorkbook.Names.Add name:=strName, RefersTo:=strRefers
            End If
        End If
    Loop
    Close #intFileNum

    MsgBox "Excel Names |fffd||fffd| |fffd||fffd||fffd||fffd| ""c:\pub_reg_form_names.txt"" |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|/|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd|."

End Sub

Attribute VB_Name = "Sheet2"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Control = "btnAddChild, 26, 2, MSForms, CommandButton"
Attribute VB_Control = "btnSubChild, 27, 3, MSForms, CommandButton"
Option Explicit

' Global Vars

Public InChangeMode As Boolean

' Event Handlers

Private Sub btnAddChild_Click()
    InChangeMode = True
    AppendTable SheetContainer:=Sheet2, TableRangeName:="Table0"
    InChangeMode = False
End Sub

Private Sub btnSubChild_Click()
    InChangeMode = True
    CleanUpTable SheetContainer:=Sheet2, TableRangeName:="Table0", DefaultRows:=ROW_Default_Table0
    InChangeMode = False
End Sub

Private Sub Worksheet_Change(ByVal Target As Range)

    If InChangeMode Then
        Exit Sub
    End If

    InChangeMode = True
    
    TrimEntered Target:=Target
    
    InChangeMode = False

End Sub
Attribute VB_Name = "Sheet3"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Control = "btnT1Add, 3, 0, MSForms, CommandButton"
Attribute VB_Control = "btnT1Sub, 4, 1, MSForms, CommandButton"
Attribute VB_Control = "btnT1_1Add, 6, 2, MSForms, CommandButton"
Attribute VB_Control = "btnT1_1Sub, 7, 3, MSForms, CommandButton"
Attribute VB_Control = "btnT2Add, 8, 4, MSForms, CommandButton"
Attribute VB_Control = "btnT2Sub, 9, 5, MSForms, CommandButton"
Attribute VB_Control = "btnT1_2Sub, 346, 9, MSForms, CommandButton"
Attribute VB_Control = "Label, 151, 10, MSForms, Label"
Attribute VB_Control = "btnT1_2Add, 345, 11, MSForms, CommandButton"
Attribute VB_Control = "btnOption3, 16, 12, MSForms, ToggleButton"
Attribute VB_Control = "btnOption1, 17, 13, MSForms, ToggleButton"
Attribute VB_Control = "btnOption2, 18, 14, MSForms, ToggleButton"
Option Explicit

' Global Vars

Public InChangeMode As Boolean

' Event Handlers

Private Sub btnOption1_Click()

    If InChangeMode Then
        Exit Sub
    End If

    InChangeMode = True

    btnOption1.value = True
    btnOption1.PrintObject = True
    btnOption1.Font.Bold = True

    btnOption2.value = False
    btnOption2.PrintObject = False
    btnOption2.Font.Bold = False

    btnOption3.value = False
    btnOption3.PrintObject = False
    btnOption3.Font.Bold = False

    EnableByPrimaryOption

    Sheet3.Range("Primary11").Select

    InChangeMode = False

End Sub

Private Sub btnOption1_MouseUp(ByVal Button As Integer, ByVal Shift As Integer, ByVal x As Single, ByVal y As Single)

    If Button = 1 Then
        btnOption1.value = True
        Sheet3.Range("Primary11").Select
    End If

End Sub

Private Sub btnOption2_Click()

    If InChangeMode Then
        Exit Sub
    End If

    InChangeMode = True

    btnOption1.value = False
    btnOption1.PrintObject = False
    btnOption1.Font.Bold = False

    btnOption2.value = True
    btnOption2.PrintObject = True
    btnOption2.Font.Bold = True

    btnOption3.value = False
    btnOption3.PrintObject = False
    btnOption3.Font.Bold = False

    EnableByPrimaryOption

    Sheet3.Range("Primary21").Select

    InChangeMode = False

End Sub

Private Sub btnOption2_MouseUp(ByVal Button As Integer, ByVal Shift As Integer, ByVal x As Single, ByVal y As Single)

    If Button = 1 Then
        btnOption2.value = True
        Sheet3.Range("Primary21").Select
    End If

End Sub

Private Sub btnOption3_Click()

    If InChangeMode Then
        Exit Sub
    End If

    InChangeMode = True

    btnOption1.value = False
    btnOption1.PrintObject = False
    btnOption1.Font.Bold = False
    btnOption2.value = False
    btnOption2.PrintObject = False
    btnOption2.Font.Bold = False
    btnOption3.value = True
    btnOption3.PrintObject = True
    btnOption3.Font.Bold = True

    EnableByPrimaryOption

    Sheet3.Range("Primary31").Select

    InChangeMode = False

End Sub

Private Sub btnOption3_MouseUp(ByVal Button As Integer, ByVal Shift As Integer, ByVal x As Single, ByVal y As Single)

    If Button = 1 Then
        btnOption3.value = True
        Sheet3.Range("Primary31").Select
    End If

End Sub


Private Sub btnT1Add_Click()
    InChangeMode = True
    AppendTable SheetContainer:=Sheet3, TableRangeName:="Table1"
    InChangeMode = False
End Sub

Private Sub btnT1Sub_Click()
    InChangeMode = True
    CleanUpTable SheetContainer:=Sheet3, TableRangeName:="Table1", DefaultRows:=ROW_Default_Table1
    InChangeMode = False
End Sub

Private Sub btnT1_1Add_Click()
    InChangeMode = True
    AppendTable SheetContainer:=Sheet3, TableRangeName:="Table1_1"
    InChangeMode = False
End Sub

Private Sub btnT1_1Sub_Click()
    InChangeMode = True
    CleanUpTable SheetContainer:=Sheet3, TableRangeName:="Table1_1", DefaultRows:=ROW_Default_Table1_1
    InChangeMode = False
End Sub

Private Sub btnT1_2Add_Click()
    InChangeMode = True
    AppendTable SheetContainer:=Sheet3, TableRangeName:="Table1_2"
    InChangeMode = False
End Sub

Private Sub btnT1_2Sub_Click()
    InChangeMode = True
    CleanUpTable SheetContainer:=Sheet3, TableRangeName:="Table1_2", DefaultRows:=ROW_Default_Table1_2
    InChangeMode = False
End Sub

Private Sub btnT2Add_Click()
    InChangeMode = True
    AppendTable SheetContainer:=Sheet3, TableRangeName:="Table2"
    InChangeMode = False
End Sub

Private Sub btnT2Sub_Click()
    InChangeMode = True
    CleanUpTable SheetContainer:=Sheet3, TableRangeName:="Table2", DefaultRows:=ROW_Default_Table2
    InChangeMode = False
End Sub

Private Sub Worksheet_Change(ByVal Target As Range)

    On Error Resume Next
    Err.Clear

    If InChangeMode Then
        Exit Sub
    End If

    Dim enable As Boolean
    Dim rowChanged, columnChanged As Integer

    rowChanged = Target.row
    columnChanged = Target.Column

    If rowChanged = Sheet3.Range("NothingT1").row _
        And columnChanged = Sheet3.Range("NothingT1").Column Then

        InChangeMode = True

        Sheet3.Unprotect (STR_Pass_Sheet)

        Call UpdateT1

        Sheet3.EnableSelection = xlUnlockedCells
        Sheet3.Protect Password:=STR_Pass_Sheet, Contents:=True

    ElseIf rowChanged = Sheet3.Range("NothingT1_1").row _
        And columnChanged = Sheet3.Range("NothingT1_1").Column Then

        InChangeMode = True

        Sheet3.Unprotect (STR_Pass_Sheet)

        Call UpdateT1_1

        Sheet3.EnableSelection = xlUnlockedCells
        Sheet3.Protect Password:=STR_Pass_Sheet, Contents:=True

    ElseIf rowChanged = Sheet3.Range("NothingT1_2").row _
        And columnChanged = Sheet3.Range("NothingT1_2").Column Then

        InChangeMode = True

        Sheet3.Unprotect (STR_Pass_Sheet)

        Call UpdateT1_2

        Sheet3.EnableSelection = xlUnlockedCells
        Sheet3.Protect Password:=STR_Pass_Sheet, Contents:=True

    ElseIf rowChanged = Sheet3.Range("NothingT2").row _
        And columnChanged = Sheet3.Range("NothingT2").Column Then

        InChangeMode = True
        
        Sheet3.Unprotect (STR_Pass_Sheet)

        Call UpdateT2

        Sheet3.EnableSelection = xlUnlockedCells
        Sheet3.Protect Password:=STR_Pass_Sheet, Contents:=True

    Else

        InChangeMode = True

        TrimEntered Target:=Target

    End If

    InChangeMode = False

End Sub

' Sheety Logic

Private Sub EnableByPrimaryOption()

    On Error Resume Next
    Err.Clear

    If ControlForm.Visible Then
        ControlForm.Hide
    End If

    Sheet3.Unprotect (STR_Pass_Sheet)

    If btnOption1.value Then

        Sheet3.Range("DisabledTC1").Font.Color = COLOR_FontEnabled
        Sheet3.Range("Primary11").Locked = False
        Sheet3.Range("Primary12").Locked = False
        Sheet3.Range("Primary13").Locked = False
        Sheet3.Range("Position3_1").Formula = "=TRIM(Position)"
        Sheet3.Range("Work3_1").Formula = "=TRIM(Work)"

        Sheet3.Range("DisabledTC2").Font.Color = COLOR_FontDisabled
        Sheet3.Range("DisabledTC2").Locked = True
        Sheet3.Range("Primary21").value = ""
        Sheet3.Range("Position3_2").Formula = ""
        Sheet3.Range("Work3_2").Formula = ""

        Sheet3.Range("DisabledTC3").Font.Color = COLOR_FontDisabled
        Sheet3.Range("DisabledTC3").Locked = True
        Sheet3.Range("Primary31").value = ""
        Sheet3.Range("Primary32").value = ""
        Sheet3.Range("Primary33").value = ""
        Sheet3.Range("Position3_3").Formula = ""
        Sheet3.Range("Work3_3").Formula = ""

    ElseIf btnOption2.value Then

        Sheet3.Range("DisabledTC1").Font.Color = COLOR_FontDisabled
        Sheet3.Range("DisabledTC1").Locked = True
        Sheet3.Range("Primary11").value = ""
        Sheet3.Range("Primary12").value = ""
        Sheet3.Range("Primary13").value = ""
        Sheet3.Range("Position3_1").Formula = ""
        Sheet3.Range("Work3_1").Formula = ""

        Sheet3.Range("DisabledTC2").Font.Color = COLOR_FontEnabled
        Sheet3.Range("Primary21").Locked = False
        Sheet3.Range("Position3_2").Formula = "=TRIM(Position)"
        Sheet3.Range("Work3_2").Formula = "=TRIM(Work)"

        Sheet3.Range("DisabledTC3").Font.Color = COLOR_FontDisabled
        Sheet3.Range("DisabledTC3").Locked = True
        Sheet3.Range("Primary31").value = ""
        Sheet3.Range("Primary32").value = ""
        Sheet3.Range("Primary33").value = ""
        Sheet3.Range("Position3_3").Formula = ""
        Sheet3.Range("Work3_3").Formula = ""

    Else

        Sheet3.Range("DisabledTC1").Font.Color = COLOR_FontDisabled
        Sheet3.Range("DisabledTC1").Locked = True
        Sheet3.Range("Primary11").value = ""
        Sheet3.Range("Primary12").value = ""
        Sheet3.Range("Primary13").value = ""
        Sheet3.Range("Position3_1").Formula = ""
        Sheet3.Range("Work3_1").Formula = ""

        Sheet3.Range("DisabledTC2").Font.Color = COLOR_FontDisabled
        Sheet3.Range("DisabledTC2").Locked = True
        Sheet3.Range("Primary21").value = ""
        Sheet3.Range("Position3_2").Formula = ""
        Sheet3.Range("Work3_2").Formula = ""

        Sheet3.Range("DisabledTC3").Font.Color = COLOR_FontEnabled
        Sheet3.Range("Primary31").Locked = False
        Sheet3.Range("Primary32").Locked = False
        Sheet3.Range("Primary33").Locked = False
        Sheet3.Range("Position3_3").Formula = "=TRIM(Position)"
        Sheet3.Range("Work3_3").Formula = "=TRIM(Work)"

    End If

    Call UpdateT1
    Call UpdateT1_1
    Call UpdateT1_2
    Call UpdateT2
    Sheet3.EnableSelection = xlUnlockedCells
    Sheet3.Protect Password:=STR_Pass_Sheet, Contents:=True

    Sheet4.InChangeMode = True
    Sheet4.Unprotect (STR_Pass_Sheet)
    Call UpdateT3
    Call UpdateT3_1
    Call UpdateT4
    Call UpdateT5
    Call UpdateT5N
    Call UpdateT6N
    Sheet4.EnableSelection = xlUnlockedCells
    Sheet4.Protect Password:=STR_Pass_Sheet, Contents:=True
    Sheet4.InChangeMode = False

    Sheet5.InChangeMode = True
    Sheet5.Unprotect (STR_Pass_Sheet)
    Call UpdateT6
    Call UpdateT7
    Call UpdateT8
    Call UpdateT9
    Sheet5.EnableSelection = xlUnlockedCells
    Sheet5.Protect Password:=STR_Pass_Sheet, Contents:=True
    Sheet5.InChangeMode = False

    Sheet6.InChangeMode = True
    Sheet6.Unprotect (STR_Pass_Sheet)
    Call UpdateT12N
    Call UpdateT10
    Call UpdateT11
    Call UpdateT12
    Sheet6.EnableSelection = xlUnlockedCells
    Sheet6.Protect Password:=STR_Pass_Sheet, Contents:=True
    Sheet6.InChangeMode = False

    Sheet7.InChangeMode = True
    Sheet7.Unprotect (STR_Pass_Sheet)
    Call UpdateT13
    Call UpdateT14
    Sheet7.EnableSelection = xlUnlockedCells
    Sheet7.Protect Password:=STR_Pass_Sheet, Contents:=True
    Sheet7.InChangeMode = False

    Sheet8.InChangeMode = True
    Sheet8.Unprotect (STR_Pass_Sheet)
    Call UpdateT15
    Sheet8.EnableSelection = xlUnlockedCells
    Sheet8.Protect Password:=STR_Pass_Sheet, Contents:=True
    Sheet8.InChangeMode = False

    ActiveWindow.VisibleRange.Activate ' to refresh - removes artifacts

End Sub
Attribute VB_Name = "Sheet4"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Control = "btnT3Add, 1, 0, MSForms, CommandButton"
Attribute VB_Control = "btnT3Sub, 2, 1, MSForms, CommandButton"
Attribute VB_Control = "btnT3_1Add, 3, 2, MSForms, CommandButton"
Attribute VB_Control = "btnT3_1Sub, 4, 3, MSForms, CommandButton"
Attribute VB_Control = "btnT4Add, 5, 4, MSForms, CommandButton"
Attribute VB_Control = "btnT4Sub, 6, 5, MSForms, CommandButton"
Attribute VB_Control = "btnT5Add, 7, 6, MSForms, CommandButton"
Attribute VB_Control = "btnT5Sub, 8, 7, MSForms, CommandButton"
Attribute VB_Control = "btnT5NAdd, 93, 8, MSForms, CommandButton"
Attribute VB_Control = "btnT5NSub, 94, 9, MSForms, CommandButton"
Attribute VB_Control = "btnT6NAdd, 95, 10, MSForms, CommandButton"
Attribute VB_Control = "btnT6NSub, 96, 11, MSForms, CommandButton"
Option Explicit

' Global Vars

Public InChangeMode As Boolean

' Event Handlers

Private Sub btnT3Add_Click()
    InChangeMode = True
    AppendTable SheetContainer:=Sheet4, TableRangeName:="Table3"
    InChangeMode = False
End Sub

Private Sub btnT3Sub_Click()
    InChangeMode = True
    CleanUpTable SheetContainer:=Sheet4, TableRangeName:="Table3", DefaultRows:=ROW_Default_Table3
    InChangeMode = False
End Sub

Private Sub btnT3_1Add_Click()
    InChangeMode = True
    AppendTable SheetContainer:=Sheet4, TableRangeName:="Table3_1"
    InChangeMode = False
End Sub

Private Sub btnT3_1Sub_Click()
    InChangeMode = True
    CleanUpTable SheetContainer:=Sheet4, TableRangeName:="Table3_1", DefaultRows:=ROW_Default_Table3_1
    InChangeMode = False
End Sub

Private Sub btnT4Add_Click()
    InChangeMode = True
    AppendTable SheetContainer:=Sheet4, TableRangeName:="Table4"
    InChangeMode = False
End Sub

Private Sub btnT4Sub_Click()
    InChangeMode = True
    CleanUpTable SheetContainer:=Sheet4, TableRangeName:="Table4", DefaultRows:=ROW_Default_Table4
    InChangeMode = False
End Sub

Private Sub btnT5Add_Click()
    InChangeMode = True
    AppendTable SheetContainer:=Sheet4, TableRangeName:="Table5"
    InChangeMode = False
End Sub

Private Sub btnT5Sub_Click()
    InChangeMode = True
    CleanUpTable SheetContainer:=Sheet4, TableRangeName:="Table5", DefaultRows:=ROW_Default_Table5
    InChangeMode = False
End Sub

Private Sub btnT5NAdd_Click()
    InChangeMode = True
    AppendTable SheetContainer:=Sheet4, TableRangeName:="Table5N"
    InChangeMode = False
End Sub

Private Sub btnT5NSub_Click()
    InChangeMode = True
    CleanUpTable SheetContainer:=Sheet4, TableRangeName:="Table5N", DefaultRows:=ROW_Default_Table5N
    InChangeMode = False
End Sub

Private Sub btnT6NAdd_Click()
    InChangeMode = True
    AppendTable SheetContainer:=Sheet4, TableRangeName:="Table6N"
    InChangeMode = False
End Sub

Private Sub btnT6NSub_Click()
    InChangeMode = True
    CleanUpTable SheetContainer:=Sheet4, TableRangeName:="Table6N", DefaultRows:=ROW_Default_Table6N
    InChangeMode = False
End Sub

Private Sub Worksheet_Change(ByVal Target As Range)

    On Error Resume Next
    Err.Clear

    If InChangeMode Then
        Exit Sub
    End If

    Dim enable As Boolean
    Dim rowChanged, columnChanged As Integer

    rowChanged = Target.row
    columnChanged = Target.Column

    If rowChanged = Sheet4.Range("NothingT3").row _
        And columnChanged = Sheet4.Range("NothingT3").Column Then

        InChangeMode = True

        Sheet4.Unprotect (STR_Pass_Sheet)

        UpdateT3

        Sheet4.EnableSelection = xlUnlockedCells
        Sheet4.Protect Password:=STR_Pass_Sheet, Contents:=True

    ElseIf rowChanged = Sheet4.Range("NothingT3_1").row _
        And columnChanged = Sheet4.Range("NothingT3_1").Column Then

        InChangeMode = True

        Sheet4.Unprotect (STR_Pass_Sheet)

        UpdateT3_1

        Sheet4.EnableSelection = xlUnlockedCells
        Sheet4.Protect Password:=STR_Pass_Sheet, Contents:=True

    ElseIf rowChanged = Sheet4.Range("NothingT4").row _
        And columnChanged = Sheet4.Range("NothingT4").Column Then

        InChangeMode = True
        
        Sheet4.Unprotect (STR_Pass_Sheet)

        UpdateT4

        Sheet4.EnableSelection = xlUnlockedCells
        Sheet4.Protect Password:=STR_Pass_Sheet, Contents:=True
        
    ElseIf rowChanged = Sheet4.Range("NothingT5N").row _
        And columnChanged = Sheet4.Range("NothingT5N").Column Then

        InChangeMode = True
        
        Sheet4.Unprotect (STR_Pass_Sheet)

        UpdateT5N

        Sheet4.EnableSelection = xlUnlockedCells
        Sheet4.Protect Password:=STR_Pass_Sheet, Contents:=True

    ElseIf rowChanged = Sheet4.Range("NothingT6N").row _
        And columnChanged = Sheet4.Range("NothingT6N").Column Then

        InChangeMode = True
        
        Sheet4.Unprotect (STR_Pass_Sheet)

        UpdateT6N

        Sheet4.EnableSelection = xlUnlockedCells
        Sheet4.Protect Password:=STR_Pass_Sheet, Contents:=True
    
    ElseIf rowChanged = Sheet4.Range("NothingT5").row _
        And columnChanged = Sheet4.Range("NothingT5").Column Then

        InChangeMode = True
        
        Sheet4.Unprotect (STR_Pass_Sheet)

        UpdateT5

        Sheet4.EnableSelection = xlUnlockedCells
        Sheet4.Protect Password:=STR_Pass_Sheet, Contents:=True

    Else

        InChangeMode = True

        TrimEntered Target:=Target

    End If

    InChangeMode = False

End Sub
Attribute VB_Name = "Sheet5"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Control = "btnT6Add, 1, 0, MSForms, CommandButton"
Attribute VB_Control = "btnT6Sub, 2, 1, MSForms, CommandButton"
Attribute VB_Control = "btnT7Add, 3, 2, MSForms, CommandButton"
Attribute VB_Control = "btnT7Sub, 4, 3, MSForms, CommandButton"
Attribute VB_Control = "btnT8Add, 5, 4, MSForms, CommandButton"
Attribute VB_Control = "btnT8Sub, 6, 5, MSForms, CommandButton"
Attribute VB_Control = "btnT9Add, 7, 6, MSForms, CommandButton"
Attribute VB_Control = "btnT9Sub, 8, 7, MSForms, CommandButton"
Option Explicit

' Global Vars

Public InChangeMode As Boolean

' Event Handlers

Private Sub btnT6Add_Click()
    InChangeMode = True
    AppendTable SheetContainer:=Sheet5, TableRangeName:="Table6"
    InChangeMode = False
End Sub

Private Sub btnT6Sub_Click()
    InChangeMode = True
    CleanUpTable SheetContainer:=Sheet5, TableRangeName:="Table6", DefaultRows:=ROW_Default_Table6
    InChangeMode = False
End Sub

Private Sub btnT7Add_Click()
    InChangeMode = True
    AppendTable SheetContainer:=Sheet5, TableRangeName:="Table7"
    InChangeMode = False
End Sub

Private Sub btnT7Sub_Click()
    InChangeMode = True
    CleanUpTable SheetContainer:=Sheet5, TableRangeName:="Table7", DefaultRows:=ROW_Default_Table7
    InChangeMode = False
End Sub

Private Sub btnT8Add_Click()
    InChangeMode = True
    AppendTable SheetContainer:=Sheet5, TableRangeName:="Table8"
    InChangeMode = False
End Sub

Private Sub btnT8Sub_Click()
    InChangeMode = True
    CleanUpTable SheetContainer:=Sheet5, TableRangeName:="Table8", DefaultRows:=ROW_Default_Table8
    InChangeMode = False
End Sub

Private Sub btnT9Add_Click()
    InChangeMode = True
    AppendTable SheetContainer:=Sheet5, TableRangeName:="Table9"
    InChangeMode = False
End Sub

Private Sub btnT9Sub_Click()
    InChangeMode = True
    CleanUpTable SheetContainer:=Sheet5, TableRangeName:="Table9", DefaultRows:=ROW_Default_Table9
    InChangeMode = False
End Sub

Private Sub Worksheet_Change(ByVal Target As Range)

    On Error Resume Next
    Err.Clear

    If InChangeMode Then
        Exit Sub
    End If

    Dim enable As Boolean
    Dim rowChanged, columnChanged As Integer

    rowChanged = Target.row
    columnChanged = Target.Column

    If rowChanged = Sheet5.Range("NothingT6").row _
        And columnChanged = Sheet5.Range("NothingT6").Column Then

        InChangeMode = True

        Sheet5.Unprotect (STR_Pass_Sheet)

        UpdateT6

        Sheet5.EnableSelection = xlUnlockedCells
        Sheet5.Protect Password:=STR_Pass_Sheet, Contents:=True

    ElseIf rowChanged = Sheet5.Range("NothingT7").row _
        And columnChanged = Sheet5.Range("NothingT7").Column Then

        InChangeMode = True

        Sheet5.Unprotect (STR_Pass_Sheet)

        UpdateT7

        Sheet5.EnableSelection = xlUnlockedCells
        Sheet5.Protect Password:=STR_Pass_Sheet, Contents:=True

    ElseIf rowChanged = Sheet5.Range("NothingT8").row _
        And columnChanged = Sheet5.Range("NothingT8").Column Then

        InChangeMode = True
        
        Sheet5.Unprotect (STR_Pass_Sheet)

        UpdateT8

        Sheet5.EnableSelection = xlUnlockedCells
        Sheet5.Protect Password:=STR_Pass_Sheet, Contents:=True

    ElseIf rowChanged = Sheet5.Range("NothingT9").row _
        And columnChanged = Sheet5.Range("NothingT9").Column Then

        InChangeMode = True

        Sheet5.Unprotect (STR_Pass_Sheet)

        UpdateT9

        Sheet5.EnableSelection = xlUnlockedCells
        Sheet5.Protect Password:=STR_Pass_Sheet, Contents:=True

    Else

        InChangeMode = True

        TrimEntered Target:=Target

    End If

    InChangeMode = False

End Sub
Attribute VB_Name = "Sheet6"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Control = "btnT10Add, 1, 0, MSForms, CommandButton"
Attribute VB_Control = "btnT10Sub, 2, 1, MSForms, CommandButton"
Attribute VB_Control = "btnT11Add, 3, 2, MSForms, CommandButton"
Attribute VB_Control = "btnT11Sub, 4, 3, MSForms, CommandButton"
Attribute VB_Control = "btnT12Add, 5, 4, MSForms, CommandButton"
Attribute VB_Control = "btnT12Sub, 6, 5, MSForms, CommandButton"
Attribute VB_Control = "btnT12NAdd, 66, 6, MSForms, CommandButton"
Attribute VB_Control = "btnT12NSub, 67, 7, MSForms, CommandButton"
Option Explicit

' Global Vars

Public InChangeMode As Boolean

' Event Handlers

Private Sub btnT10Add_Click()
    InChangeMode = True
    AppendTable SheetContainer:=Sheet6, TableRangeName:="Table10"
    InChangeMode = False
End Sub

Private Sub btnT10Sub_Click()
    InChangeMode = True
    CleanUpTable SheetContainer:=Sheet6, TableRangeName:="Table10", DefaultRows:=ROW_Default_Table10
    InChangeMode = False
End Sub

Private Sub btnT11Add_Click()
    InChangeMode = True
    AppendTable SheetContainer:=Sheet6, TableRangeName:="Table11"
    InChangeMode = False
End Sub

Private Sub btnT11Sub_Click()
    InChangeMode = True
    CleanUpTable SheetContainer:=Sheet6, TableRangeName:="Table11", DefaultRows:=ROW_Default_Table11
    InChangeMode = False
End Sub

Private Sub btnT12Add_Click()
    InChangeMode = True
    AppendTable SheetContainer:=Sheet6, TableRangeName:="Table12"
    InChangeMode = False
End Sub


Private Sub btnT12Sub_Click()
    InChangeMode = True
    CleanUpTable SheetContainer:=Sheet6, TableRangeName:="Table12", DefaultRows:=ROW_Default_Table12
    InChangeMode = False
End Sub

Private Sub btnT12NAdd_Click()
    InChangeMode = True
    AppendTable SheetContainer:=Sheet6, TableRangeName:="Table12N"
    InChangeMode = False
End Sub

Private Sub btnT12NSub_Click()
    InChangeMode = True
    CleanUpTable SheetContainer:=Sheet6, TableRangeName:="Table12N", DefaultRows:=ROW_Default_Table12N
    InChangeMode = False
End Sub

Private Sub Worksheet_Change(ByVal Target As Range)

    On Error Resume Next
    Err.Clear

    If InChangeMode Then
        Exit Sub
    End If

    Dim enable As Boolean
    Dim rowChanged, columnChanged As Integer

    rowChanged = Target.row
    columnChanged = Target.Column

    If rowChanged = Sheet6.Range("NothingT12N").row _
        And columnChanged = Sheet6.Range("NothingT12N").Column Then

        InChangeMode = True
        
        Sheet6.Unprotect (STR_Pass_Sheet)

        UpdateT12N

        Sheet6.EnableSelection = xlUnlockedCells
        Sheet6.Protect Password:=STR_Pass_Sheet, Contents:=True

    ElseIf rowChanged = Sheet6.Range("NothingT10").row _
        And columnChanged = Sheet6.Range("NothingT10").Column Then

        InChangeMode = True

        Sheet6.Unprotect (STR_Pass_Sheet)

        UpdateT10

        Sheet6.EnableSelection = xlUnlockedCells
        Sheet6.Protect Password:=STR_Pass_Sheet, Contents:=True

    ElseIf rowChanged = Sheet6.Range("NothingT11").row _
        And columnChanged = Sheet6.Range("NothingT11").Column Then

        InChangeMode = True

        Sheet6.Unprotect (STR_Pass_Sheet)

        UpdateT11

        Sheet6.EnableSelection = xlUnlockedCells
        Sheet6.Protect Password:=STR_Pass_Sheet, Contents:=True

    ElseIf rowChanged = Sheet6.Range("NothingT12").row _
        And columnChanged = Sheet6.Range("NothingT12").Column Then

        InChangeMode = True
        
        Sheet6.Unprotect (STR_Pass_Sheet)

        UpdateT12

        Sheet6.EnableSelection = xlUnlockedCells
        Sheet6.Protect Password:=STR_Pass_Sheet, Contents:=True

    Else

        InChangeMode = True

        TrimEntered Target:=Target

    End If

    InChangeMode = False

End Sub

Attribute VB_Name = "Sheet7"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Control = "btnT14Add, 1, 0, MSForms, CommandButton"
Attribute VB_Control = "btnT14Sub, 2, 1, MSForms, CommandButton"
Attribute VB_Control = "btnT13Add, 3, 2, MSForms, CommandButton"
Attribute VB_Control = "btnT13Sub, 4, 3, MSForms, CommandButton"
Option Explicit

' Global Vars

Public InChangeMode As Boolean

' Event Handlers

Private Sub btnT13Add_Click()
    InChangeMode = True
    AppendTable SheetContainer:=Sheet7, TableRangeName:="Table13"
    InChangeMode = False
End Sub

Private Sub btnT13Sub_Click()
    InChangeMode = True
    CleanUpTable SheetContainer:=Sheet7, TableRangeName:="Table13", DefaultRows:=ROW_Default_Table13 - 1
    InChangeMode = False
End Sub

Private Sub btnT14Add_Click()
    InChangeMode = True
    AppendTable SheetContainer:=Sheet7, TableRangeName:="Table14"
    InChangeMode = False
End Sub

Private Sub btnT14Sub_Click()
    InChangeMode = True
    CleanUpTable SheetContainer:=Sheet7, TableRangeName:="Table14", DefaultRows:=ROW_Default_Table14
    InChangeMode = False
End Sub

Private Sub Worksheet_Change(ByVal Target As Range)

    On Error Resume Next
    Err.Clear

    If InChangeMode Then
        Exit Sub
    End If

    Dim enable As Boolean
    Dim rowChanged, columnChanged As Integer

    rowChanged = Target.row
    columnChanged = Target.Column

    If rowChanged = Sheet7.Range("NothingT13").row _
        And columnChanged = Sheet7.Range("NothingT13").Column Then

        InChangeMode = True

        Sheet7.Unprotect (STR_Pass_Sheet)

        UpdateT13

        Sheet7.EnableSelection = xlUnlockedCells
        Sheet7.Protect Password:=STR_Pass_Sheet, Contents:=True

    ElseIf rowChanged = Sheet7.Range("NothingT14").row _
        And columnChanged = Sheet7.Range("NothingT14").Column Then

        InChangeMode = True
        
        Sheet7.Unprotect (STR_Pass_Sheet)

        UpdateT14

        Sheet7.EnableSelection = xlUnlockedCells
        Sheet7.Protect Password:=STR_Pass_Sheet, Contents:=True

    Else

        InChangeMode = True

        TrimEntered Target:=Target

    End If

    InChangeMode = False

End Sub
Attribute VB_Name = "Sheet8"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Control = "btnT15_1Add, 6, 0, MSForms, CommandButton"
Attribute VB_Control = "btnT15_1Sub, 7, 1, MSForms, CommandButton"
Attribute VB_Control = "btnT15_2Add, 8, 2, MSForms, CommandButton"
Attribute VB_Control = "btnT15_2Sub, 9, 3, MSForms, CommandButton"
Attribute VB_Control = "btnT15_3Add, 10, 4, MSForms, CommandButton"
Attribute VB_Control = "btnT15_3Sub, 11, 5, MSForms, CommandButton"
Attribute VB_Control = "btnBack, 49, 7, MSForms, CommandButton"
Attribute VB_Control = "btnT15_4Add, 154, 9, MSForms, CommandButton"
Attribute VB_Control = "btnT15_4Sub, 155, 10, MSForms, CommandButton"
Option Explicit

' Global Vars

Public InChangeMode As Boolean

' Event Handlers

Private Sub btnT15_1Add_Click()
    InChangeMode = True
    AppendTable SheetContainer:=Sheet8, TableRangeName:="Table15_1"
    InChangeMode = False
End Sub

Private Sub btnT15_1Sub_Click()
    InChangeMode = True
    CleanUpTable SheetContainer:=Sheet8, TableRangeName:="Table15_1", DefaultRows:=ROW_Default_Table15_1
    InChangeMode = False
End Sub

Private Sub btnT15_2Add_Click()
    InChangeMode = True
    AppendTable SheetContainer:=Sheet8, TableRangeName:="Table15_2"
    InChangeMode = False
End Sub

Private Sub btnT15_2Sub_Click()
    InChangeMode = True
    CleanUpTable SheetContainer:=Sheet8, TableRangeName:="Table15_2", DefaultRows:=ROW_Default_Table15_2
    InChangeMode = False
End Sub

Private Sub btnT15_3Add_Click()
    InChangeMode = True
    AppendTable SheetContainer:=Sheet8, TableRangeName:="Table15_3"
    InChangeMode = False
End Sub

Private Sub btnT15_3Sub_Click()
    InChangeMode = True
    CleanUpTable SheetContainer:=Sheet8, TableRangeName:="Table15_3", DefaultRows:=ROW_Default_Table15_3
    InChangeMode = False
End Sub

Private Sub btnT15_4Add_Click()
    InChangeMode = True
    AppendTable SheetContainer:=Sheet8, TableRangeName:="Table15_4"
    InChangeMode = False
End Sub

Private Sub btnT15_4Sub_Click()
    InChangeMode = True
    CleanUpTable SheetContainer:=Sheet8, TableRangeName:="Table15_4", DefaultRows:=ROW_Default_Table15_4
    InChangeMode = False
End Sub

Private Sub btnBack_Click()

    Sheet1.Activate

End Sub


Private Sub Worksheet_Change(ByVal Target As Range)

    On Error Resume Next
    Err.Clear

    If InChangeMode Then
        Exit Sub
    End If

    Dim enable As Boolean
    Dim rowChanged, columnChanged As Integer

    rowChanged = Target.row
    columnChanged = Target.Column

    If rowChanged = Sheet8.Range("NothingT15").row _
        And columnChanged = Sheet8.Range("NothingT15").Column Then

        InChangeMode = True

        Sheet8.Unprotect (STR_Pass_Sheet)

        UpdateT15

        Sheet8.EnableSelection = xlUnlockedCells
        Sheet8.Protect Password:=STR_Pass_Sheet, Contents:=True

    Else

        InChangeMode = True

        TrimEntered Target:=Target

    End If

    InChangeMode = False

End Sub
Attribute VB_Name = "ThisWorkbook"
Attribute VB_Base = "0{00020819-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Public IsValidated As Boolean
Public IsInternalSave As Boolean
Public IsInternalPrint As Boolean

Private Sub Workbook_Activate()

    ShowToolbar (True)

    IsValidated = False
    IsInternalSave = False
    IsInternalPrint = False

    Sheet1.EnableSelection = xlUnlockedCells
    Sheet2.EnableSelection = xlUnlockedCells
    Sheet3.EnableSelection = xlUnlockedCells
    Sheet4.EnableSelection = xlUnlockedCells
    Sheet5.EnableSelection = xlUnlockedCells
    Sheet6.EnableSelection = xlUnlockedCells
    Sheet7.EnableSelection = xlUnlockedCells
    Sheet8.EnableSelection = xlUnlockedCells

    Initialize_TableStructure

    Dim containerName As String
    containerName = GetContainerName
    If (Len(containerName) > 0) Then

        MsgBox "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|!" & _
            vbCrLf & vbCrLf & "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd| ""Open"" |fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd|." & _
            vbCrLf & vbCrLf & "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| ""Save"" |fffd| |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|. |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| Excel |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|. |fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd|.", _
            vbExclamation + vbOKOnly, "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|", "", 0

    End If

End Sub

Private Sub Workbook_BeforeClose(Cancel As Boolean) ' on Close - first executes this

    'ShowToolbar (False)

End Sub

Private Sub Workbook_Deactivate() ' on Close - last executes this

    ShowToolbar (False)

End Sub

Private Sub Workbook_SheetChange(ByVal Sh As Object, ByVal Target As Range)

    IsValidated = False

End Sub

Private Sub Workbook_BeforePrint(Cancel As Boolean)

    If Not IsValidated Then
        ValidateData ShowDialog:=False
    End If

    If Not IsInternalPrint Then
        MsgBox "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|: |fffd||fffd| |fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|." & _
            vbCrLf & vbCrLf & "|fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| ""|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|"" |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| ""|fffd||fffd||fffd||fffd||fffd|"".", _
            vbExclamation + vbOKOnly, "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|", "", 0
    End If

End Sub

Private Sub Workbook_BeforeSave(ByVal SaveAsUI As Boolean, Cancel As Boolean)

    If Not IsValidated Then
        ValidateData ShowDialog:=False
    End If

    If Not IsInternalSave And Not Sheet11.Visible Then
        MsgBox "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|: |fffd||fffd| |fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|." & _
            vbCrLf & vbCrLf & "|fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| ""|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|"" |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|" & _
            vbCrLf & """|fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd|"".", _
            vbExclamation + vbOKOnly, "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|", "", 0
    End If

End Sub

Attribute VB_Name = "ToolbarModule"
'------------------------------------------------------------------------------
'
' Toolbar Module and main actions
'
'------------------------------------------------------------------------------

Option Private Module
Option Explicit

Private Const STR_NAOPubRegFormToolbar = "|fffd||fffd||fffd||fffd||fffd||fffd||fffd| - |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|: |fffd||fffd||fffd||fffd| I"

Public Sub ShowToolbar(Visible As Boolean)

    On Error GoTo ExitLabel
    Err.Clear

    Dim myBar As CommandBar
    Dim tbb1, tbb2, tbb3, tbb4, tbb5, tbb6 As CommandBarButton
    
    If CommandBars.Count > 0 Then
        For Each myBar In CommandBars
            If myBar.name = STR_NAOPubRegFormToolbar Then
                CommandBars(STR_NAOPubRegFormToolbar).Delete
            End If
        Next
    End If

    Set myBar = CommandBars.Add(name:=STR_NAOPubRegFormToolbar, Position:=msoBarTop, Temporary:=True)

    'Set tbb1 = myBar.Controls.Add(Type:=msoControlButton, ID:=2520)
    'tbb1.Style = msoButtonIconAndCaption
    'tbb1.Caption = "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd|.4, |fffd||fffd|.4"
    'tbb1.OnAction = "actNoChanges"
    'tbb1.TooltipText = "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd|.4, |fffd||fffd|.4 |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|"

    Set tbb2 = myBar.Controls.Add(Type:=msoControlButton, ID:=793)
    tbb2.Style = msoButtonIconAndCaption
    tbb2.Caption = "|fffd||fffd||fffd||fffd||fffd||fffd||fffd|"
    tbb2.BeginGroup = True
    tbb2.OnAction = "actControl"
    tbb2.TooltipText = "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd| |fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|"

'    Set tbb3 = myBar.Controls.Add(Type:=msoControlButton, ID:=3)
'    tbb3.Style = msoButtonIconAndCaption
'    tbb3.Caption = "|fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd|"
'    tbb3.BeginGroup = True
'    tbb3.OnAction = "actSaveFloppy"
'    tbb3.TooltipText = "|fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| (|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| ""|fffd|:"")"
'    tbb3.Enabled = Sheet1.btnSaveFloppy.Enabled

    Set tbb4 = myBar.Controls.Add(Type:=msoControlButton, ID:=3)
    tbb4.Style = msoButtonIconAndCaption
    tbb4.Caption = "|fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd|"
    tbb4.BeginGroup = True
    tbb4.OnAction = "actSave"
    tbb4.TooltipText = "|fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|"
    tbb4.Enabled = Sheet1.btnSave.Enabled

    Set tbb5 = myBar.Controls.Add(Type:=msoControlButton, ID:=4)
    tbb5.Style = msoButtonIconAndCaption
    tbb5.Caption = "|fffd||fffd||fffd||fffd||fffd|"
    tbb5.TooltipText = "|fffd||fffd||fffd||fffd||fffd|"
    tbb5.BeginGroup = True
    tbb5.OnAction = "actPrint"
    tbb5.TooltipText = "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|"
    tbb5.Enabled = Sheet1.btnPrint.Enabled

    Set tbb6 = myBar.Controls.Add(Type:=msoControlButton, ID:=984)
    tbb6.Style = msoButtonIconAndCaption
    tbb6.Caption = "|fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|"
    tbb6.BeginGroup = True
    tbb6.OnAction = "actHelp"
    tbb6.TooltipText = "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|"

    myBar.Visible = True

ExitLabel:
    Exit Sub

End Sub

Public Sub UpdateToolbar(DisableButtons As Boolean)

    On Error GoTo ExitLabel
    Err.Clear

    Dim myBar As CommandBar
    Dim tbb1, tbb2, tbb3, tbb4, tbb5, tbb6 As CommandBarButton
   
    Set myBar = CommandBars(STR_NAOPubRegFormToolbar)
    
    'Set tbb1 = myBar.Controls(1)
    Set tbb2 = myBar.Controls(1)
    'Set tbb3 = myBar.Controls(3)
    Set tbb4 = myBar.Controls(2)
    Set tbb5 = myBar.Controls(3)
    Set tbb6 = myBar.Controls(4)

    'tbb3.Enabled = DisableButtons
    tbb4.Enabled = DisableButtons
    tbb5.Enabled = DisableButtons

ExitLabel:
    Exit Sub

End Sub

Public Sub actControl()

    ValidateData ShowDialog:=True

    If ControlForm.ErrCount = 0 Then
        Dim Msg As String
        Msg = "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd|." & _
            vbCrLf & vbCrLf & "|fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd| |fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd| CD |fffd||fffd||fffd| |fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd|." & _
            vbCrLf & "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|."
        MsgBox Msg, vbOKOnly + vbInformation, "|fffd||fffd||fffd||fffd||fffd||fffd||fffd|"
    End If

End Sub

Public Sub actSaveFloppy()

    Dim containerName As String
    containerName = GetContainerName
    If (Len(containerName) > 0) Then

        MsgBox "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd| |fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|, |fffd||fffd||fffd||fffd||fffd||fffd| ""Microsoft Excel"" |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|!" & _
            vbCrLf & vbCrLf & "|fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| ""Microsoft Excel"" |fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd| """ & containerName & """.", _
            vbCritical + vbOKOnly, "|fffd||fffd||fffd||fffd||fffd||fffd|", "", 0
        
        Exit Sub
    End If

    If Not ThisWorkbook.IsValidated Or (ControlForm.ErrCount > 0) Then
        ValidateData ShowDialog:=True
        If (ControlForm.ErrCount > 0) Then
            Exit Sub
        End If
    End If

    On Error Resume Next
    Err.Clear
    
    'Dim flagMustLock As Boolean

    'If Not Sheet1.btnExport.Visible Then
    '    Sheet1.Unprotect (STR_Pass_Sheet)
    '    Sheet1.Range("EntryNumber").Locked = False
    '    Sheet1.Range("EntryDate").Locked = False
    '    Sheet1.Range("Code1").Locked = False
    '    Sheet1.Range("Code2").Locked = False
    '    Sheet1.Range("Code3").Locked = False
    '    Sheet1.Range("Conclusion").Locked = False
    '    Sheet1.btnExport.Visible = True
    '    Sheet1.EnableSelection = xlUnlockedCells
    '    Sheet1.Protect Password:=STR_Pass_Sheet, Contents:=True
    '    flagMustLock = True
    'Else
    '    flagMustLock = False
    'End If

    SaveBookOnFloppy (Sheet1.Range("Name").text)

    'If flagMustLock Then
    '    Sheet1.Unprotect (STR_Pass_Sheet)
    '    Sheet1.Range("EntryNumber").Locked = True
    '    Sheet1.Range("EntryDate").Locked = True
    '    Sheet1.Range("Code1").Locked = True
    '    Sheet1.Range("Code2").Locked = True
    '    Sheet1.Range("Code3").Locked = True
    '    Sheet1.Range("Conclusion").Locked = True
    '    Sheet1.btnExport.Visible = False
    '    Sheet1.EnableSelection = xlUnlockedCells
    '    Sheet1.Protect Password:=STR_Pass_Sheet, Contents:=True
    'End If

End Sub

Public Sub actSave()

    Dim containerName As String
    containerName = GetContainerName
    If (Len(containerName) > 0) Then

        MsgBox "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd| |fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|, |fffd||fffd||fffd||fffd||fffd||fffd| ""Microsoft Excel"" |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|!" & _
            vbCrLf & vbCrLf & "|fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| ""Microsoft Excel"" |fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd| """ & containerName & """.", _
            vbCritical + vbOKOnly, "|fffd||fffd||fffd||fffd||fffd||fffd|", "", 0
        
        Exit Sub
    End If
    
    If Not ThisWorkbook.IsValidated Or (ControlForm.ErrCount > 0) Then
        ValidateData ShowDialog:=True
        If (ControlForm.ErrCount > 0) Then
            Exit Sub
        End If
    End If

    On Error Resume Next
    Err.Clear
    
    'Dim flagMustLock As Boolean

    'If Not Sheet1.btnExport.Visible Then
    '    Sheet1.Unprotect (STR_Pass_Sheet)
    '    Sheet1.Range("EntryNumber").Locked = False
    '    Sheet1.Range("EntryDate").Locked = False
    '    Sheet1.Range("Code1").Locked = False
    '    Sheet1.Range("Code2").Locked = False
    '    Sheet1.Range("Code3").Locked = False
    '    Sheet1.Range("Conclusion").Locked = False
    '    Sheet1.btnExport.Visible = True
        Sheet1.LabelWarning.Height = 0
        Sheet1.LabelWarning.Width = 0
    '    Sheet1.EnableSelection = xlUnlockedCells
    '    Sheet1.Protect Password:=STR_Pass_Sheet, Contents:=True
    '    flagMustLock = True
    'Else
    '    flagMustLock = False
    'End If

    SaveBook (Sheet1.Range("Name").text)

    'If flagMustLock Then
    '    Sheet1.Unprotect (STR_Pass_Sheet)
    '    Sheet1.Range("EntryNumber").Locked = True
    '    Sheet1.Range("EntryDate").Locked = True
    '    Sheet1.Range("Code1").Locked = True
    '    Sheet1.Range("Code2").Locked = True
    '    Sheet1.Range("Code3").Locked = True
    '    Sheet1.Range("Conclusion").Locked = True
    '    Sheet1.btnExport.Visible = False
        Sheet1.LabelWarning.Height = 189
        Sheet1.LabelWarning.Width = 372
    '    Sheet1.EnableSelection = xlUnlockedCells
    '    Sheet1.Protect Password:=STR_Pass_Sheet, Contents:=True
    'End If

End Sub

Public Sub actPrint()

    If Not ThisWorkbook.IsValidated Or (ControlForm.ErrCount > 0) Then
        ValidateData ShowDialog:=True
        If (ControlForm.ErrCount > 0) Then
            Exit Sub
        End If
    End If
    
    On Error GoTo PrintError
    Err.Clear

    Dim Responce, Msg, MsgErr
    
    Msg = "|fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd|, |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd| |fffd||fffd||fffd||fffd||fffd| ""|fffd||fffd|""."
    
    Responce = MsgBox(Msg, vbOKCancel + vbExclamation + vbDefaultButton1, "|fffd||fffd||fffd||fffd||fffd|", "", 0)

    If Responce = vbOK Then

        ThisWorkbook.IsInternalPrint = True

        Sheet1.PrintOut
        Sheet2.PrintOut
        Sheet3.PrintOut
        Sheet4.PrintOut
        Sheet5.PrintOut
        Sheet6.PrintOut
        Sheet7.PrintOut
        Sheet8.PrintOut

        ThisWorkbook.IsInternalPrint = False

    End If
    
    Exit Sub
    
PrintError:
    MsgErr = "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd| |fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|!" & vbCrLf & vbCrLf & Err.Description
    MsgBox MsgErr, vbCritical + vbOKOnly, "|fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd|", "", 0

End Sub

Public Sub actHelp()

    Sheet10.Activate
    Sheet10.Range("A1").Activate

End Sub

Attribute VB_Name = "ValidationModule"
'------------------------------------------------------------------------------
'
' Table Validation Module
'
'------------------------------------------------------------------------------

Option Private Module
Option Explicit

Public Sub ValidateData(ShowDialog As Boolean)

    Dim Hash As String
    Dim Tbl As Range
    Dim arr As Variant
    Dim R, S, N As Integer
    Dim firstColumn, lastColumn As Integer
    Dim partialFlag, foundValue, foundEmptyValue, foundFullRow, haveData, isDeclared As Boolean
    Dim childName, childEGN, childCitizen As String

    If ControlForm.Visible Then
        ControlForm.Hide
    End If
    
    Sheet1.Unprotect (STR_Pass_Sheet)
    Sheet1.Range("Hash").ClearComments
    Sheet1.EnableSelection = xlUnlockedCells
    Sheet1.Protect Password:=STR_Pass_Sheet, Contents:=True

    ControlForm.ErrClear

    If IsEmpty(TC1) Then
        Initialize_TableStructure
    End If
    
    partialFlag = Not Sheet3.btnOption2.value
    
    'Sheet 1 --------------------------------------------------------------------------------------

    If Not IsValidName(Sheet1.Range("Name").value) Then
        ControlForm.ErrAdd ErrText:="|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|, |fffd||fffd||fffd||fffd||fffd||fffd| |fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|, |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd| |fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|", _
            ErrRange:=Sheet1.Range("Name"), ErrSheet:=1
    End If
    If Len(Trim(Sheet1.Range("Work").value)) = 0 Then
        ControlForm.ErrAdd ErrText:="|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| - ""|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|""", _
            ErrRange:=Sheet1.Range("Work"), ErrSheet:=1
    End If
    If Len(Trim(Sheet1.Range("Position").value)) = 0 Then
        ControlForm.ErrAdd ErrText:="|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| - ""|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|""", _
            ErrRange:=Sheet1.Range("Position"), ErrSheet:=1
    End If

    'Sheet 2 --------------------------------------------------------------------------------------

    If Not IsValidEGN(Sheet2.Range("EGN").text, checksumOnly:=True) Then
        ControlForm.ErrAdd ErrText:="|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|", _
            ErrRange:=Sheet2.Range("EGN"), ErrSheet:=2
    End If
    If Not (IsNumeric(Sheet2.Range("LKN").text) And (Len(Sheet2.Range("LKN").text) = 9)) Then
        ControlForm.ErrAdd ErrText:="|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd| (9 |fffd||fffd||fffd||fffd||fffd|) |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|", _
            ErrRange:=Sheet2.Range("LKN"), ErrSheet:=2
    End If
    If Len(Trim(Sheet2.Range("LKD").value)) = 0 Then
        ControlForm.ErrAdd ErrText:="|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| - |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd| ""|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd|""", _
            ErrRange:=Sheet2.Range("LKD"), ErrSheet:=2
    End If
    If Len(Trim(Sheet2.Range("Address").value)) = 0 Then
        ControlForm.ErrAdd ErrText:="|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| - ""|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd|""", _
            ErrRange:=Sheet2.Range("Address"), ErrSheet:=2
    End If
    If (Len(Trim(Sheet2.Range("Spouse").value)) > 0) Then
        If (Trim(Sheet2.Range("SpouseCitizenship").value) = STR_BGCitizen) Then
            If Not IsValidEGN(Sheet2.Range("SpouseEGN").text, checksumOnly:=True) Then
                ControlForm.ErrAdd ErrText:="|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd|/|fffd||fffd|/", _
                    ErrRange:=Sheet2.Range("SpouseEGN"), ErrSheet:=2
            Else
                If (Sheet2.Range("SpouseEGN").value = Sheet2.Range("EGN").value) Then
                    ControlForm.ErrAdd ErrText:="|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|", _
                        ErrRange:=Sheet2.Range("SpouseEGN"), ErrSheet:=2
                End If
            End If
        Else
            If (Len(Trim(Sheet2.Range("SpouseCitizenship").value)) = 0) Then
                ControlForm.ErrAdd ErrText:="|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd|/|fffd||fffd|/", _
                    ErrRange:=Sheet2.Range("SpouseCitizenship"), ErrSheet:=2
            End If
        End If
    Else
        If (Len(Sheet2.Range("SpouseEGN").text) > 0) Then
            ControlForm.ErrAdd ErrText:="|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd| |fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd|/|fffd||fffd|/ |fffd||fffd||fffd| |fffd||fffd| |fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd|", _
                ErrRange:=Sheet2.Range("SpouseEGN"), ErrSheet:=2
        End If
    End If
    If (Sheet2.Range("Divorced").value = STR_Marked) And (Len(Trim(Sheet2.Range("Spouse").value)) = 0) Then
        ControlForm.ErrAdd ErrText:="|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd| |fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd|, |fffd| |fffd||fffd| |fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd|/|fffd||fffd|/", _
            ErrRange:=Sheet2.Range("Divorced"), ErrSheet:=2
    End If
    If (Sheet2.Range("Parted").value = STR_Marked) And (Len(Trim(Sheet2.Range("Spouse").value)) = 0) Then
        ControlForm.ErrAdd ErrText:="|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd| |fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|, |fffd| |fffd||fffd| |fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd|/|fffd||fffd|/", _
            ErrRange:=Sheet2.Range("Parted"), ErrSheet:=2
    End If

    If (Sheet2.Range("PartnerOnly").value = STR_Marked) And (Len(Trim(Sheet2.Range("Spouse").value)) = 0) Then
        ControlForm.ErrAdd ErrText:="|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd| |fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd|, |fffd| |fffd||fffd| |fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|", _
            ErrRange:=Sheet2.Range("PartnerOnly"), ErrSheet:=2
    End If

    'Table0

    Set Tbl = Range_RemoveCaptionRowAndColumn(Sheet2, Sheet2.Range("Table0"))
    arr = Tbl.value
    If IsArray(arr) Then
        For R = 1 To UBound(arr)
            childName = Trim(arr(R, TC0(2)))
            childEGN = Trim(arr(R, TC0(3)))
            childCitizen = Trim(arr(R, TC0(4)))

            If (Len(childName) > 0) Then
                If (Len(childEGN) > 0) Then
                    If (childCitizen = STR_BGCitizen) And Not IsValidEGN(childEGN, checksumOnly:=True) Then
                        ControlForm.ErrAdd ErrText:="|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd|", _
                            ErrRange:=Sheet2.Range("Table0").Cells(R + 1, TC0(3) + 1), ErrSheet:=2
                    Else
                        If (Len(childCitizen) = 0) Then
                            ControlForm.ErrAdd ErrText:="|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd|", _
                                ErrRange:=Sheet2.Range("Table0").Cells(R + 1, TC0(4) + 1), ErrSheet:=2
                        End If
                    End If
                    If (childEGN = Trim(Sheet2.Range("EGN").text)) Then
                        ControlForm.ErrAdd ErrText:="|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd| |fffd| |fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|", _
                            ErrRange:=Sheet2.Range("Table0").Cells(R + 1, TC0(3) + 1), ErrSheet:=2
                    End If
                    If (childEGN = Trim(Sheet2.Range("SpouseEGN").text)) Then
                        ControlForm.ErrAdd ErrText:="|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd| |fffd| |fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd|/|fffd||fffd|/", _
                            ErrRange:=Sheet2.Range("Table0").Cells(R + 1, TC0(3) + 1), ErrSheet:=2
                    End If
                    For S = 1 To UBound(arr)
                        If (R <> S) And (childEGN = Trim(arr(S, 2))) Then
                            ControlForm.ErrAdd ErrText:="|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd| |fffd||fffd||fffd||fffd|", _
                                ErrRange:=Sheet2.Range("Table0").Cells(R + 1, TC0(3) + 1), ErrSheet:=2
                        End If
                    Next S
                Else
                    If (childCitizen <> STR_ForeignCitizen) Then
                        ControlForm.ErrAdd ErrText:="|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd|", _
                            ErrRange:=Sheet2.Range("Table0").Cells(R + 1, TC0(3) + 1), ErrSheet:=2
                    End If
                End If
            Else
                If (Len(childEGN) > 0) Then
                    ControlForm.ErrAdd ErrText:="|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd| |fffd||fffd||fffd| |fffd||fffd| |fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd|", _
                        ErrRange:=Sheet2.Range("Table0").Cells(R + 1, TC0(3)), ErrSheet:=2
                End If
            End If
        Next R
    End If

    'Sheet 3 --------------------------------------------------------------------------------------

    If Sheet3.btnOption1.value Then

        If Len(Trim(Sheet3.Range("Primary11").text)) = 0 Then
            ControlForm.ErrAdd ErrText:="|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|", _
                ErrRange:=Sheet3.Range("Primary11"), ErrSheet:=3
        End If
        If Len(Trim(Sheet3.Range("Primary12").text)) = 0 Then
            ControlForm.ErrAdd ErrText:="|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|", _
                ErrRange:=Sheet3.Range("Primary12"), ErrSheet:=3
        End If
        If Not IsValidPositivInteger(Trim(Sheet3.Range("Primary13").text), 2) Then
            ControlForm.ErrAdd ErrText:="|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd| 2 |fffd||fffd||fffd||fffd||fffd|", _
                ErrRange:=Sheet3.Range("Primary13"), ErrSheet:=3
        End If
    
    ElseIf Sheet3.btnOption2.value Then

        If Not IsValidPositivInteger(Trim(Sheet3.Range("Primary21").text), 2) Then
            ControlForm.ErrAdd ErrText:="|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd| 2 |fffd||fffd||fffd||fffd||fffd|", _
                ErrRange:=Sheet3.Range("Primary21"), ErrSheet:=3
        End If

    Else

        If Len(Trim(Sheet3.Range("Primary31").text)) = 0 Then
            ControlForm.ErrAdd ErrText:="|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|", _
                ErrRange:=Sheet3.Range("Primary31"), ErrSheet:=3
        End If
        If Len(Trim(Sheet3.Range("Primary32").text)) = 0 Then
            ControlForm.ErrAdd ErrText:="|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|", _
                ErrRange:=Sheet3.Range("Primary32"), ErrSheet:=3
        End If
        If Not IsValidPositivInteger(Trim(Sheet3.Range("Primary33").text), 2) Then
            ControlForm.ErrAdd ErrText:="|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd| 2 |fffd||fffd||fffd||fffd||fffd|", _
                ErrRange:=Sheet3.Range("Primary33"), ErrSheet:=3
        End If

    End If

    'Table 1 '2018.05: added EGN (9) column
    Set Tbl = Range_RemoveCaptionRowAndColumn(Sheet3, Sheet3.Range("Table1"))
    arr = Tbl.value
    foundFullRow = False
    haveData = False
    isDeclared = Not (Sheet3.Range("NothingT1").value = STR_Marked)
    If IsArray(arr) Then
        For R = 1 To UBound(arr)
            foundValue = (Len(Trim(arr(R, TC1(2)))) > 0) Or _
                         (Len(Trim(arr(R, TC1(3)))) > 0) Or _
                         (Len(Trim(arr(R, TC1(4)))) > 0) Or _
                         (Len(Trim(arr(R, TC1(5)))) > 0) Or _
                         (Len(Trim(arr(R, TC1(6)))) > 0) Or _
                         (Len(Trim(arr(R, TC1(7)))) > 0) Or _
                         (Len(Trim(arr(R, TC1(8)))) > 0) Or _
                         (Len(Trim(arr(R, TC1(9)))) > 0) Or _
                         (Len(Trim(arr(R, TC1(10)))) > 0) Or _
                         (Len(Trim(arr(R, TC1(11)))) > 0)
            
            ' |fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| 6, 10, 11 + EGN (9)
            foundEmptyValue = (Len(Trim(arr(R, TC1(2)))) = 0) Or _
                              (Len(Trim(arr(R, TC1(3)))) = 0) Or _
                              (Len(Trim(arr(R, TC1(4)))) = 0) Or _
                              (Len(Trim(arr(R, TC1(5)))) = 0) Or _
                              (Len(Trim(arr(R, TC1(7)))) = 0) Or _
                              (Len(Trim(arr(R, TC1(8)))) = 0)
            
            ' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd| "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|" |fffd| "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|" |fffd||fffd||fffd||fffd||fffd||fffd| 12, 13
            If Not partialFlag Then
                foundValue = foundValue Or _
                             (Len(Trim(arr(R, TC1(12)))) > 0) Or _
                             (Len(Trim(arr(R, TC1(13)))) > 0)
                             
                foundEmptyValue = foundEmptyValue Or _
                                  (Len(Trim(arr(R, TC1(12)))) = 0) Or _
                                  (Len(Trim(arr(R, TC1(13)))) = 0)
                                  
                lastColumn = TC1(12)
            Else
                lastColumn = TC1(10)
                
                If (Len(Trim(arr(R, TC1(12)))) > 0) Or _
                   (Len(Trim(arr(R, TC1(13)))) > 0) Then
                    ControlForm.ErrAdd ErrText:="|fffd||fffd||fffd||fffd||fffd||fffd||fffd| 1; |fffd||fffd||fffd||fffd||fffd| |fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd|", _
                        ErrRange:=Sheet3.Range( _
                            Tbl.Cells(R, TC1(12)), _
                            Tbl.Cells(R, TC1(13))), _
                        ErrSheet:=3
                End If
            End If
            firstColumn = TC1(2)
            
            If isDeclared Then
                If foundEmptyValue And foundValue Then
                    ControlForm.ErrAdd ErrText:="|fffd||fffd||fffd||fffd||fffd||fffd||fffd| 1; |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd| |fffd| |fffd||fffd||fffd||fffd||fffd|", _
                        ErrRange:=Sheet3.Range( _
                            Tbl.Cells(R, firstColumn), _
                            Tbl.Cells(R, lastColumn)), _
                        ErrSheet:=3
                End If
                If (Len(Trim(arr(R, TC1(9)))) > 0) _
                    And Not IsValidEGN(Trim(arr(R, TC1(9))), checksumOnly:=True) Then
                        ControlForm.ErrAdd ErrText:="|fffd||fffd||fffd||fffd||fffd||fffd||fffd| 1; |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd|", _
                            ErrRange:=Sheet3.Range( _
                                Tbl.Cells(R, TC1(9)), _
                                Tbl.Cells(R, TC1(9))), _
                            ErrSheet:=3
                End If
            End If

            If foundValue Then
                If Not foundEmptyValue Then
                    foundFullRow = True
                End If
                haveData = True
            End If
        Next R
    End If

    If isDeclared Then
        If Not foundFullRow Then
            ControlForm.ErrAdd ErrText:="|fffd||fffd||fffd||fffd||fffd||fffd||fffd| 1; |fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd|", _
                ErrRange:=Tbl, ErrSheet:=3
        End If
    Else
        If haveData Then
            ControlForm.ErrAdd ErrText:="|fffd||fffd||fffd||fffd||fffd||fffd||fffd| 1; |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| '|fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|' |fffd||fffd| |fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd|", _
                ErrRange:=Tbl, ErrSheet:=3
        End If
    End If

    'Table 1.1 '2018.05: added EGN (9) column
    Set Tbl = Range_RemoveCaptionRowAndColumn(Sheet3, Sheet3.Range("Table1_1"))
    arr = Tbl.value
    foundFullRow = False
    haveData = False
    isDeclared = Not (Sheet3.Range("NothingT1_1").value = STR_Marked)
    If IsArray(arr) Then
        For R = 1 To UBound(arr)
            foundValue = (Len(Trim(arr(R, TC1_1(2)))) > 0) Or _
                         (Len(Trim(arr(R, TC1_1(3)))) > 0) Or _
                         (Len(Trim(arr(R, TC1_1(4)))) > 0) Or _
                         (Len(Trim(arr(R, TC1_1(5)))) > 0) Or _
                         (Len(Trim(arr(R, TC1_1(6)))) > 0) Or _
                         (Len(Trim(arr(R, TC1_1(7)))) > 0) Or _
                         (Len(Trim(arr(R, TC1_1(8)))) > 0) Or _
                         (Len(Trim(arr(R, TC1_1(9)))) > 0) Or _
                         (Len(Trim(arr(R, TC1_1(10)))) > 0) Or _
                         (Len(Trim(arr(R, TC1_1(11)))) > 0)

            ' |fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| 6, 10, 11 + EGN (9)
            foundEmptyValue = (Len(Trim(arr(R, TC1_1(2)))) = 0) Or _
                              (Len(Trim(arr(R, TC1_1(3)))) = 0) Or _
                              (Len(Trim(arr(R, TC1_1(4)))) = 0) Or _
                              (Len(Trim(arr(R, TC1_1(5)))) = 0) Or _
                              (Len(Trim(arr(R, TC1_1(7)))) = 0) Or _
                              (Len(Trim(arr(R, TC1_1(8)))) = 0)

            ' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd| "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|" |fffd| "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|" |fffd||fffd||fffd||fffd||fffd||fffd| 12, 13
            If Not partialFlag Then
                foundValue = foundValue Or _
                             (Len(Trim(arr(R, TC1_1(12)))) > 0) Or _
                             (Len(Trim(arr(R, TC1_1(13)))) > 0)
                             
                foundEmptyValue = foundEmptyValue Or _
                                  (Len(Trim(arr(R, TC1_1(12)))) = 0) Or _
                                  (Len(Trim(arr(R, TC1_1(13)))) = 0)
                                  
                lastColumn = TC1_1(13)
            Else
                lastColumn = TC1_1(11)
                
                If (Len(Trim(arr(R, TC1_1(12)))) > 0) Or _
                   (Len(Trim(arr(R, TC1_1(13)))) > 0) Then
                    ControlForm.ErrAdd ErrText:="|fffd||fffd||fffd||fffd||fffd||fffd||fffd| 1.1; |fffd||fffd||fffd||fffd||fffd| |fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd|", _
                        ErrRange:=Sheet3.Range( _
                            Tbl.Cells(R, TC1_1(12)), _
                            Tbl.Cells(R, TC1_1(13))), _
                        ErrSheet:=3
                End If
            End If
            firstColumn = TC1_1(2)
            
            If isDeclared Then
                If foundEmptyValue And foundValue Then
                    ControlForm.ErrAdd ErrText:="|fffd||fffd||fffd||fffd||fffd||fffd||fffd| 1.1; |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd| |fffd| |fffd||fffd||fffd||fffd||fffd|", _
                        ErrRange:=Sheet3.Range( _
                            Tbl.Cells(R, firstColumn), _
                            Tbl.Cells(R, lastColumn)), _
                        ErrSheet:=3
                End If
                If (Len(Trim(arr(R, TC1_1(9)))) > 0) _
                    And Not IsValidEGN(Trim(arr(R, TC1_1(9))), checksumOnly:=True) Then
                        ControlForm.ErrAdd ErrText:="|fffd||fffd||fffd||fffd||fffd||fffd||fffd| 1.1; |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd|", _
                            ErrRange:=Sheet3.Range( _
                                Tbl.Cells(R, TC1_1(9)), _
                                Tbl.Cells(R, TC1_1(9))), _
                            ErrSheet:=3
                End If
            End If

            If foundValue Then
                If Not foundEmptyValue Then
                    foundFullRow = True
                End If
                haveData = True
            End If
        Next R
    End If

    If isDeclared Then
        If Not foundFullRow Then
            ControlForm.ErrAdd ErrText:="|fffd||fffd||fffd||fffd||fffd||fffd||fffd| 1.1; |fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd|", _
                ErrRange:=Tbl, ErrSheet:=3
        End If
    Else
        If haveData Then
            ControlForm.ErrAdd ErrText:="|fffd||fffd||fffd||fffd||fffd||fffd||fffd| 1.1; |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| '|fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|' |fffd||fffd| |fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd|", _
                ErrRange:=Tbl, ErrSheet:=3
        End If
    End If

    'Table 1.2 '2018.05: added as 1.2
    Set Tbl = Range_RemoveCaptionRowAndColumn(Sheet3, Sheet3.Range("Table1_2"))
    arr = Tbl.value
    foundFullRow = False
    haveData = False
    isDeclared = Not (Sheet3.Range("NothingT1_2").value = STR_Marked)
    If IsArray(arr) Then
        For R = 1 To UBound(arr)
            foundValue = (Len(Trim(arr(R, TC1_2(2)))) > 0) Or _
                         (Len(Trim(arr(R, TC1_2(3)))) > 0) Or _
                         (Len(Trim(arr(R, TC1_2(4)))) > 0) Or _
                         (Len(Trim(arr(R, TC1_2(5)))) > 0) Or _
                         (Len(Trim(arr(R, TC1_2(6)))) > 0) Or _
                         (Len(Trim(arr(R, TC1_2(7)))) > 0) Or _
                         (Len(Trim(arr(R, TC1_2(8)))) > 0) Or _
                         (Len(Trim(arr(R, TC1_2(9)))) > 0) Or _
                         (Len(Trim(arr(R, TC1_2(10)))) > 0) Or _
                         (Len(Trim(arr(R, TC1_2(11)))) > 0)

            ' |fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| 6, 10, 11 + EGN (9)
            foundEmptyValue = (Len(Trim(arr(R, TC1_2(2)))) = 0) Or _
                              (Len(Trim(arr(R, TC1_2(3)))) = 0) Or _
                              (Len(Trim(arr(R, TC1_2(4)))) = 0) Or _
                              (Len(Trim(arr(R, TC1_2(5)))) = 0) Or _
                              (Len(Trim(arr(R, TC1_2(7)))) = 0) Or _
                              (Len(Trim(arr(R, TC1_2(8)))) = 0)

            ' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd| "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|" |fffd| "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|" |fffd||fffd||fffd||fffd||fffd||fffd| 12, 13
            If Not partialFlag Then
                foundValue = foundValue Or _
                             (Len(Trim(arr(R, TC1_2(12)))) > 0) Or _
                             (Len(Trim(arr(R, TC1_2(13)))) > 0)
                             
                foundEmptyValue = foundEmptyValue Or _
                                  (Len(Trim(arr(R, TC1_2(12)))) = 0) Or _
                                  (Len(Trim(arr(R, TC1_2(13)))) = 0)
                                  
                lastColumn = TC1_2(13)
            Else
                lastColumn = TC1_2(11)
                
                If (Len(Trim(arr(R, TC1_2(12)))) > 0) Or _
                   (Len(Trim(arr(R, TC1_2(13)))) > 0) Then
                    ControlForm.ErrAdd ErrText:="|fffd||fffd||fffd||fffd||fffd||fffd||fffd| 1.2; |fffd||fffd||fffd||fffd||fffd| |fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd|", _
                        ErrRange:=Sheet3.Range( _
                            Tbl.Cells(R, TC1_2(12)), _
                            Tbl.Cells(R, TC1_2(13))), _
                        ErrSheet:=3
                End If
            End If
            firstColumn = TC1_2(2)
            
            If isDeclared Then
                If foundEmptyValue And foundValue Then
                    ControlForm.ErrAdd ErrText:="|fffd||fffd||fffd||fffd||fffd||fffd||fffd| 1.2; |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd| |fffd| |fffd||fffd||fffd||fffd||fffd|", _
                        ErrRange:=Sheet3.Range( _
                            Tbl.Cells(R, firstColumn), _
                            Tbl.Cells(R, lastColumn)), _
                        ErrSheet:=3
                End If
                If (Len(Trim(arr(R, TC1_2(9)))) > 0) _
                    And Not IsValidEGN(Trim(arr(R, TC1_2(9))), checksumOnly:=True) Then
                        ControlForm.ErrAdd ErrText:="|fffd||fffd||fffd||fffd||fffd||fffd||fffd| 1.2; |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd|", _
                            ErrRange:=Sheet3.Range( _
                                Tbl.Cells(R, TC1_2(9)), _
                                Tbl.Cells(R, TC1_2(9))), _
                            ErrSheet:=3
                End If
            End If

            If foundValue Then
                If Not foundEmptyValue Then
                    foundFullRow = True
                End If
                haveData = True
            End If
        Next R
    End If

    If isDeclared Then
        If Not foundFullRow Then
            ControlForm.ErrAdd ErrText:="|fffd||fffd||fffd||fffd||fffd||fffd||fffd| 1.2; |fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd|", _
                ErrRange:=Tbl, ErrSheet:=3
        End If
    Else
        If haveData Then
            ControlForm.ErrAdd ErrText:="|fffd||fffd||fffd||fffd||fffd||fffd||fffd| 1.2; |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| '|fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|' |fffd||fffd| |fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd|", _
                ErrRange:=Tbl, ErrSheet:=3
        End If
    End If

    'Table 2 '2018.05: added EGN (8) column
    Set Tbl = Range_RemoveCaptionRowAndColumn(Sheet3, Sheet3.Range("Table2"))
    arr = Tbl.value
    foundFullRow = False
    haveData = False
    ' |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd| |fffd||fffd| "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|"
    isDeclared = Not (Sheet3.Range("NothingT2").value = STR_Marked) And Not partialFlag
    If IsArray(arr) Then
        For R = 1 To UBound(arr)
            foundValue = (Len(Trim(arr(R, TC2(2)))) > 0) Or _
                         (Len(Trim(arr(R, TC2(3)))) > 0) Or _
                         (Len(Trim(arr(R, TC2(4)))) > 0) Or _
                         (Len(Trim(arr(R, TC2(5)))) > 0) Or _
                         (Len(Trim(arr(R, TC2(6)))) > 0) Or _
                         (Len(Trim(arr(R, TC2(7)))) > 0) Or _
                         (Len(Trim(arr(R, TC2(8)))) > 0) Or _
                         (Len(Trim(arr(R, TC2(9)))) > 0) Or _
                         (Len(Trim(arr(R, TC2(10)))) > 0) Or _
                         (Len(Trim(arr(R, TC2(11)))) > 0)

            ' |fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| 6, 9, 10 + EGN (8)
            foundEmptyValue = (Len(Trim(arr(R, TC2(2)))) = 0) Or _
                              (Len(Trim(arr(R, TC2(3)))) = 0) Or _
                              (Len(Trim(arr(R, TC2(4)))) = 0) Or _
                              (Len(Trim(arr(R, TC2(5)))) = 0) Or _
                              (Len(Trim(arr(R, TC2(7)))) = 0) Or _
                              (Len(Trim(arr(R, TC2(11)))) = 0)

            firstColumn = TC2(2)
            lastColumn = TC2(10)

            If isDeclared Then
                If foundEmptyValue And foundValue Then
                    ControlForm.ErrAdd ErrText:="|fffd||fffd||fffd||fffd||fffd||fffd||fffd| 2; |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd| |fffd| |fffd||fffd||fffd||fffd||fffd|", _
                        ErrRange:=Sheet3.Range( _
                            Tbl.Cells(R, firstColumn), _
                            Tbl.Cells(R, lastColumn)), _
                        ErrSheet:=3
                End If
                If (Len(Trim(arr(R, TC2(8)))) > 0) _
                    And Not IsValidEGN(Trim(arr(R, TC2(8))), checksumOnly:=True) Then
                        ControlForm.ErrAdd ErrText:="|fffd||fffd||fffd||fffd||fffd||fffd||fffd| 2; |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd|", _
                            ErrRange:=Sheet3.Range( _
                                Tbl.Cells(R, TC2(8)), _
                                Tbl.Cells(R, TC2(8))), _
                            ErrSheet:=3
                End If
            End If

            If foundValue Then
                If Not foundEmptyValue Then
                    foundFullRow = True
                End If
                haveData = True
            End If
        Next R
    End If
    
    If isDeclared Then
        If Not foundFullRow Then
            ControlForm.ErrAdd ErrText:="|fffd||fffd||fffd||fffd||fffd||fffd||fffd| 2; |fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd|", _
                ErrRange:=Tbl, ErrSheet:=3
        End If
    Else
        If haveData Then
            If partialFlag Then
                ControlForm.ErrAdd ErrText:="|fffd||fffd||fffd||fffd||fffd||fffd||fffd| 2; |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd| |fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| (|fffd||fffd| |fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|)", _
                    ErrRange:=Tbl, ErrSheet:=3
            Else
                ControlForm.ErrAdd ErrText:="|fffd||fffd||fffd||fffd||fffd||fffd||fffd| 2; |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| '|fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|' |fffd||fffd| |fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd|", _
                    ErrRange:=Tbl, ErrSheet:=3
            End If
                
        End If
    End If

    'Sheet 4 --------------------------------------------------------------------------------------

    'Table 3 '2018.05: added EGN (7) column
    Set Tbl = Range_RemoveCaptionRowAndColumn(Sheet4, Sheet4.Range("Table3"))
    arr = Tbl.value
    foundFullRow = False
    haveData = False
    isDeclared = Not (Sheet4.Range("NothingT3").value = STR_Marked)
    If IsArray(arr) Then
        For R = 1 To UBound(arr)
            foundValue = (Len(Trim(arr(R, TC3(2)))) > 0) Or _
                         (Len(Trim(arr(R, TC3(3)))) > 0) Or _
                         (Len(Trim(arr(R, TC3(4)))) > 0) Or _
                         (Len(Trim(arr(R, TC3(5)))) > 0) Or _
                         (Len(Trim(arr(R, TC3(6)))) > 0) Or _
                         (Len(Trim(arr(R, TC3(7)))) > 0) Or _
                         (Len(Trim(arr(R, TC3(8)))) > 0)

            ' |fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| 8 + EGN (7)
            foundEmptyValue = (Len(Trim(arr(R, TC3(2)))) = 0) Or _
                              (Len(Trim(arr(R, TC3(3)))) = 0) Or _
                              (Len(Trim(arr(R, TC3(4)))) = 0) Or _
                              (Len(Trim(arr(R, TC3(5)))) = 0) Or _
                              (Len(Trim(arr(R, TC3(6)))) = 0)

            ' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd| "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|" |fffd| "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|" |fffd||fffd||fffd||fffd||fffd||fffd| 9, 10
            If Not partialFlag Then
                foundValue = foundValue Or _
                             (Len(Trim(arr(R, TC3(9)))) > 0) Or _
                             (Len(Trim(arr(R, TC3(10)))) > 0)
                             
                foundEmptyValue = foundEmptyValue Or _
                                  (Len(Trim(arr(R, TC3(9)))) = 0) Or _
                                  (Len(Trim(arr(R, TC3(10)))) = 0)
                                  
                lastColumn = TC3(10)
            Else
                lastColumn = TC3(8)
                
                If (Len(Trim(arr(R, TC3(9)))) > 0) Or _
                   (Len(Trim(arr(R, TC3(10)))) > 0) Then
                    ControlForm.ErrAdd ErrText:="|fffd||fffd||fffd||fffd||fffd||fffd||fffd| 3; |fffd||fffd||fffd||fffd||fffd| |fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd|", _
                        ErrRange:=Sheet4.Range( _
                            Tbl.Cells(R, TC3(9)), _
                            Tbl.Cells(R, TC3(10))), _
                        ErrSheet:=4
                End If
            End If
            firstColumn = TC3(2)
            
            If isDeclared Then
                If foundEmptyValue And foundValue Then
                    ControlForm.ErrAdd ErrText:="|fffd||fffd||fffd||fffd||fffd||fffd||fffd| 3; |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd| |fffd| |fffd||fffd||fffd||fffd||fffd|", _
                        ErrRange:=Sheet4.Range( _
                            Tbl.Cells(R, firstColumn), _
                            Tbl.Cells(R, lastColumn)), _
                        ErrSheet:=4
                End If
                If (Len(Trim(arr(R, TC3(7)))) > 0) _
                    And Not IsValidEGN(Trim(arr(R, TC3(7))), checksumOnly:=True) Then
                        ControlForm.ErrAdd ErrText:="|fffd||fffd||fffd||fffd||fffd||fffd||fffd| 3; |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd|", _
                            ErrRange:=Sheet4.Range( _
                                Tbl.Cells(R, TC3(7)), _
                                Tbl.Cells(R, TC3(7))), _
                            ErrSheet:=4
                End If
            End If

            If foundValue Then
                If Not foundEmptyValue Then
                    foundFullRow = True
                End If
                haveData = True
            End If
        Next R
    End If

    If isDeclared Then
        If Not foundFullRow Then
            ControlForm.ErrAdd ErrText:="|fffd||fffd||fffd||fffd||fffd||fffd||fffd| 3; |fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd|", _
                ErrRange:=Tbl, ErrSheet:=4
        End If
    Else
        If haveData Then
            ControlForm.ErrAdd ErrText:="|fffd||fffd||fffd||fffd||fffd||fffd||fffd| 3; |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| '|fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|' |fffd||fffd| |fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd|", _
                ErrRange:=Tbl, ErrSheet:=4
        End If
    End If

    'Table 3.1 '2018.05: added EGN (7) column
    Set Tbl = Range_RemoveCaptionRowAndColumn(Sheet4, Sheet4.Range("Table3_1"))
    arr = Tbl.value
    foundFullRow = False
    haveData = False
    isDeclared = Not (Sheet4.Range("NothingT3_1").value = STR_Marked)
    If IsArray(arr) Then
        For R = 1 To UBound(arr)
            foundValue = (Len(Trim(arr(R, TC3_1(2)))) > 0) Or _
                         (Len(Trim(arr(R, TC3_1(3)))) > 0) Or _
                         (Len(Trim(arr(R, TC3_1(4)))) > 0) Or _
                         (Len(Trim(arr(R, TC3_1(5)))) > 0) Or _
                         (Len(Trim(arr(R, TC3_1(6)))) > 0) Or _
                         (Len(Trim(arr(R, TC3_1(7)))) > 0) Or _
                         (Len(Trim(arr(R, TC3_1(8)))) > 0)

            ' |fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| 8 + EGN (7)
            foundEmptyValue = (Len(Trim(arr(R, TC3_1(2)))) = 0) Or _
                              (Len(Trim(arr(R, TC3_1(3)))) = 0) Or _
                              (Len(Trim(arr(R, TC3_1(4)))) = 0) Or _
                              (Len(Trim(arr(R, TC3_1(5)))) = 0) Or _
                              (Len(Trim(arr(R, TC3_1(6)))) = 0)

            ' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd| "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|" |fffd| "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|" |fffd||fffd||fffd||fffd||fffd||fffd| 9, 10
            If Not partialFlag Then
                foundValue = foundValue Or _
                             (Len(Trim(arr(R, TC3_1(9)))) > 0) Or _
                             (Len(Trim(arr(R, TC3_1(10)))) > 0)
                             
                foundEmptyValue = foundEmptyValue Or _
                                  (Len(Trim(arr(R, TC3_1(9)))) = 0) Or _
                                  (Len(Trim(arr(R, TC3_1(10)))) = 0)
                                  
                lastColumn = TC3_1(10)
            Else
                lastColumn = TC3_1(8)

                If (Len(Trim(arr(R, TC3_1(9)))) > 0) Or _
                   (Len(Trim(arr(R, TC3_1(10)))) > 0) Then
                    ControlForm.ErrAdd ErrText:="|fffd||fffd||fffd||fffd||fffd||fffd||fffd| 3.1; |fffd||fffd||fffd||fffd||fffd| |fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd|", _
                        ErrRange:=Sheet4.Range( _
                            Tbl.Cells(R, TC3_1(9)), _
                            Tbl.Cells(R, TC3_1(10))), _
                        ErrSheet:=4
                End If
            End If
            firstColumn = TC3_1(2)

            If isDeclared Then
                If foundEmptyValue And foundValue Then
                    ControlForm.ErrAdd ErrText:="|fffd||fffd||fffd||fffd||fffd||fffd||fffd| 3.1; |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd| |fffd| |fffd||fffd||fffd||fffd||fffd|", _
                        ErrRange:=Sheet4.Range( _
                            Tbl.Cells(R, firstColumn), _
                            Tbl.Cells(R, lastColumn)), _
                        ErrSheet:=4
                End If
                If (Len(Trim(arr(R, TC3_1(7)))) > 0) _
                    And Not IsValidEGN(Trim(arr(R, TC3_1(7))), checksumOnly:=True) Then
                        ControlForm.ErrAdd ErrText:="|fffd||fffd||fffd||fffd||fffd||fffd||fffd| 3; |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd|", _
                            ErrRange:=Sheet4.Range( _
                                Tbl.Cells(R, TC3_1(7)), _
                                Tbl.Cells(R, TC3_1(7))), _
                            ErrSheet:=4
                End If
            End If

            If foundValue Then
                If Not foundEmptyValue Then
                    foundFullRow = True
                End If
                haveData = True
            End If
        Next R
    End If
        
    If isDeclared Then
        If Not foundFullRow Then
            ControlForm.ErrAdd ErrText:="|fffd||fffd||fffd||fffd||fffd||fffd||fffd| 3.1; |fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd|", _
                ErrRange:=Tbl, ErrSheet:=4
        End If
    Else
        If haveData Then
            ControlForm.ErrAdd ErrText:="|fffd||fffd||fffd||fffd||fffd||fffd||fffd| 3.1; |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| '|fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|' |fffd||fffd| |fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd|", _
                ErrRange:=Tbl, ErrSheet:=4
        End If
    End If

    'Table 3.2 '2018.05: prev 4 / added EGN (7) column
    Set Tbl = Range_RemoveCaptionRowAndColumn(Sheet4, Sheet4.Range("Table4"))
    arr = Tbl.value
    foundFullRow = False
    haveData = False
    isDeclared = Not (Sheet4.Range("NothingT4").value = STR_Marked)
    If IsArray(arr) Then
        For R = 1 To UBound(arr)
            foundValue = (Len(Trim(arr(R, TC4(2)))) > 0) Or _
                         (Len(Trim(arr(R, TC4(3)))) > 0) Or _
                         (Len(Trim(arr(R, TC4(4)))) > 0) Or _
                         (Len(Trim(arr(R, TC4(5)))) > 0) Or _
                         (Len(Trim(arr(R, TC4(6)))) > 0) Or _
                         (Len(Trim(arr(R, TC4(7)))) > 0) Or _
                         (Len(Trim(arr(R, TC4(8)))) > 0)

            ' |fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| 8 + EGN (7)
            foundEmptyValue = (Len(Trim(arr(R, TC4(2)))) = 0) Or _
                              (Len(Trim(arr(R, TC4(3)))) = 0) Or _
                              (Len(Trim(arr(R, TC4(4)))) = 0) Or _
                              (Len(Trim(arr(R, TC4(5)))) = 0) Or _
                              (Len(Trim(arr(R, TC4(6)))) = 0)

            ' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd| "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|" |fffd| "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|" |fffd||fffd||fffd||fffd||fffd||fffd| 9, 10
            If Not partialFlag Then
                foundValue = foundValue Or _
                             (Len(Trim(arr(R, TC4(9)))) > 0) Or _
                             (Len(Trim(arr(R, TC4(10)))) > 0)
                             
                foundEmptyValue = foundEmptyValue Or _
                                  (Len(Trim(arr(R, TC4(9)))) = 0) Or _
                                  (Len(Trim(arr(R, TC4(10)))) = 0)
                                  
                lastColumn = TC4(10)
            Else
                lastColumn = TC4(8)

                If (Len(Trim(arr(R, TC4(9)))) > 0) Or _
                   (Len(Trim(arr(R, TC4(10)))) > 0) Then
                    ControlForm.ErrAdd ErrText:="|fffd||fffd||fffd||fffd||fffd||fffd||fffd| 3.2; |fffd||fffd||fffd||fffd||fffd| |fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd|", _
                        ErrRange:=Sheet4.Range( _
                            Tbl.Cells(R, TC4(9)), _
                            Tbl.Cells(R, TC4(10))), _
                        ErrSheet:=4
                End If
            End If
            firstColumn = TC4(2)
            
            If isDeclared Then
                If foundEmptyValue And foundValue Then
                    ControlForm.ErrAdd ErrText:="|fffd||fffd||fffd||fffd||fffd||fffd||fffd| 3.2; |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd| |fffd| |fffd||fffd||fffd||fffd||fffd|", _
                        ErrRange:=Sheet4.Range( _
                            Tbl.Cells(R, firstColumn), _
                            Tbl.Cells(R, lastColumn)), _
                        ErrSheet:=4
                End If
                If (Len(Trim(arr(R, TC4(7)))) > 0) _
                    And Not IsValidEGN(Trim(arr(R, TC4(7))), checksumOnly:=True) Then
                        ControlForm.ErrAdd ErrText:="|fffd||fffd||fffd||fffd||fffd||fffd||fffd| 3.2; |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd|", _
                            ErrRange:=Sheet4.Range( _
                                Tbl.Cells(R, TC4(7)), _
                                Tbl.Cells(R, TC4(7))), _
                            ErrSheet:=4
                End If
            End If

            If foundValue Then
                If Not foundEmptyValue Then
                    foundFullRow = True
                End If
                haveData = True
            End If
        Next R
    End If

    If isDeclared Then
        If Not foundFullRow Then
            ControlForm.ErrAdd ErrText:="|fffd||fffd||fffd||fffd||fffd||fffd||fffd| 3.2; |fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd|", _
                ErrRange:=Tbl, ErrSheet:=4
        End If
    Else
        If haveData Then
            ControlForm.ErrAdd ErrText:="|fffd||fffd||fffd||fffd||fffd||fffd||fffd| 3.2; |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| '|fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|' |fffd||fffd| |fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd|", _
                ErrRange:=Tbl, ErrSheet:=4
        End If
    End If

    'Table 3.3 '2018.05: added as 5N
    Set Tbl = Range_RemoveCaptionRowAndColumn(Sheet4, Sheet4.Range("Table5N"))
    arr = Tbl.value
    foundFullRow = False
    haveData = False
    isDeclared = Not (Sheet4.Range("NothingT5N").value = STR_Marked)
    If IsArray(arr) Then
        For R = 1 To UBound(arr)
            foundValue = (Len(Trim(arr(R, TC5N(2)))) > 0) Or _
                         (Len(Trim(arr(R, TC5N(3)))) > 0) Or _
                         (Len(Trim(arr(R, TC5N(4)))) > 0) Or _
                         (Len(Trim(arr(R, TC5N(5)))) > 0) Or _
                         (Len(Trim(arr(R, TC5N(6)))) > 0) Or _
                         (Len(Trim(arr(R, TC5N(7)))) > 0) Or _
                         (Len(Trim(arr(R, TC5N(8)))) > 0)

            ' |fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| 8 + EGN (7)
            foundEmptyValue = (Len(Trim(arr(R, TC5N(2)))) = 0) Or _
                              (Len(Trim(arr(R, TC5N(3)))) = 0) Or _
                              (Len(Trim(arr(R, TC5N(4)))) = 0) Or _
                              (Len(Trim(arr(R, TC5N(5)))) = 0) Or _
                              (Len(Trim(arr(R, TC5N(6)))) = 0)

            ' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd| "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|" |fffd| "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|" |fffd||fffd||fffd||fffd||fffd||fffd| 9, 10
            If Not partialFlag Then
                foundValue = foundValue Or _
                             (Len(Trim(arr(R, TC5N(9)))) > 0) Or _
                             (Len(Trim(arr(R, TC5N(10)))) > 0)
                             
                foundEmptyValue = foundEmptyValue Or _
                                  (Len(Trim(arr(R, TC5N(9)))) = 0) Or _
                                  (Len(Trim(arr(R, TC5N(10)))) = 0)
                                  
                lastColumn = TC5N(10)
            Else
                lastColumn = TC5N(8)

                If (Len(Trim(arr(R, TC5N(9)))) > 0) Or _
                   (Len(Trim(arr(R, TC5N(10)))) > 0) Then
                    ControlForm.ErrAdd ErrText:="|fffd||fffd||fffd||fffd||fffd||fffd||fffd| 3.3; |fffd||fffd||fffd||fffd||fffd| |fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd|", _
                        ErrRange:=Sheet4.Range( _
                            Tbl.Cells(R, TC5N(9)), _
                            Tbl.Cells(R, TC5N(10))), _
                        ErrSheet:=4
                End If
            End If
            firstColumn = TC5N(2)
            
            If isDeclared Then
                If foundEmptyValue And foundValue Then
                    ControlForm.ErrAdd ErrText:="|fffd||fffd||fffd||fffd||fffd||fffd||fffd| 3.3; |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd| |fffd| |fffd||fffd||fffd||fffd||fffd|", _
                        ErrRange:=Sheet4.Range( _
                            Tbl.Cells(R, firstColumn), _
                            Tbl.Cells(R, lastColumn)), _
                        ErrSheet:=4
                End If
                If (Len(Trim(arr(R, TC5N(7)))) > 0) _
                    And Not IsValidEGN(Trim(arr(R, TC5N(7))), checksumOnly:=True) Then
                        ControlForm.ErrAdd ErrText:="|fffd||fffd||fffd||fffd||fffd||fffd||fffd| 3.3; |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd|", _
                            ErrRange:=Sheet4.Range( _
                                Tbl.Cells(R, TC5N(7)), _
                                Tbl.Cells(R, TC5N(7))), _
                            ErrSheet:=4
                End If
            End If

            If foundValue Then
                If Not foundEmptyValue Then
                    foundFullRow = True
                End If
                haveData = True
            End If
        Next R
    End If

    If isDeclared Then
        If Not foundFullRow Then
            ControlForm.ErrAdd ErrText:="|fffd||fffd||fffd||fffd||fffd||fffd||fffd| 3.3; |fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd|", _
                ErrRange:=Tbl, ErrSheet:=4
        End If
    Else
        If haveData Then
            ControlForm.ErrAdd ErrText:="|fffd||fffd||fffd||fffd||fffd||fffd||fffd| 3.3; |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| '|fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|' |fffd||fffd| |fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd|", _
                ErrRange:=Tbl, ErrSheet:=4
        End If
    End If
    
    'Table 3.4 '2018.05: added as 6N
    Set Tbl = Range_RemoveCaptionRowAndColumn(Sheet4, Sheet4.Range("Table6N"))
    arr = Tbl.value
    foundFullRow = False
    haveData = False
    isDeclared = Not (Sheet4.Range("NothingT6N").value = STR_Marked)
    If IsArray(arr) Then
        For R = 1 To UBound(arr)
            foundValue = (Len(Trim(arr(R, TC6N(2)))) > 0) Or _
                         (Len(Trim(arr(R, TC6N(3)))) > 0) Or _
                         (Len(Trim(arr(R, TC6N(4)))) > 0) Or _
                         (Len(Trim(arr(R, TC6N(5)))) > 0) Or _
                         (Len(Trim(arr(R, TC6N(6)))) > 0) Or _
                         (Len(Trim(arr(R, TC6N(7)))) > 0) Or _
                         (Len(Trim(arr(R, TC6N(8)))) > 0)

            ' |fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| 8 + EGN (7)
            foundEmptyValue = (Len(Trim(arr(R, TC6N(2)))) = 0) Or _
                              (Len(Trim(arr(R, TC6N(3)))) = 0) Or _
                              (Len(Trim(arr(R, TC6N(4)))) = 0) Or _
                              (Len(Trim(arr(R, TC6N(5)))) = 0) Or _
                              (Len(Trim(arr(R, TC6N(6)))) = 0)

            ' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd| "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|" |fffd| "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|" |fffd||fffd||fffd||fffd||fffd||fffd| 9, 10
            If Not partialFlag Then
                foundValue = foundValue Or _
                             (Len(Trim(arr(R, TC6N(9)))) > 0) Or _
                             (Len(Trim(arr(R, TC6N(10)))) > 0)
                             
                foundEmptyValue = foundEmptyValue Or _
                                  (Len(Trim(arr(R, TC6N(9)))) = 0) Or _
                                  (Len(Trim(arr(R, TC6N(10)))) = 0)
                                  
                lastColumn = TC6N(10)
            Else
                lastColumn = TC6N(8)

                If (Len(Trim(arr(R, TC6N(9)))) > 0) Or _
                   (Len(Trim(arr(R, TC6N(10)))) > 0) Then
                    ControlForm.ErrAdd ErrText:="|fffd||fffd||fffd||fffd||fffd||fffd||fffd| 3.4; |fffd||fffd||fffd||fffd||fffd| |fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd|", _
                        ErrRange:=Sheet4.Range( _
                            Tbl.Cells(R, TC6N(9)), _
                            Tbl.Cells(R, TC6N(10))), _
                        ErrSheet:=4
                End If
            End If
            firstColumn = TC4(2)
            
            If isDeclared Then
                If foundEmptyValue And foundValue Then
                    ControlForm.ErrAdd ErrText:="|fffd||fffd||fffd||fffd||fffd||fffd||fffd| 3.4; |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd| |fffd| |fffd||fffd||fffd||fffd||fffd|", _
                        ErrRange:=Sheet4.Range( _
                            Tbl.Cells(R, firstColumn), _
                            Tbl.Cells(R, lastColumn)), _
                        ErrSheet:=4
                End If
                If (Len(Trim(arr(R, TC6N(7)))) > 0) _
                    And Not IsValidEGN(Trim(arr(R, TC6N(7))), checksumOnly:=True) Then
                        ControlForm.ErrAdd ErrText:="|fffd||fffd||fffd||fffd||fffd||fffd||fffd| 3.4; |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd|", _
                            ErrRange:=Sheet4.Range( _
                                Tbl.Cells(R, TC6N(7)), _
                                Tbl.Cells(R, TC6N(7))), _
                            ErrSheet:=4
                End If
            End If

            If foundValue Then
                If Not foundEmptyValue Then
                    foundFullRow = True
                End If
                haveData = True
            End If
        Next R
    End If

    If isDeclared Then
        If Not foundFullRow Then
            ControlForm.ErrAdd ErrText:="|fffd||fffd||fffd||fffd||fffd||fffd||fffd| 3.4; |fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd|", _
                ErrRange:=Tbl, ErrSheet:=4
        End If
    Else
        If haveData Then
            ControlForm.ErrAdd ErrText:="|fffd||fffd||fffd||fffd||fffd||fffd||fffd| 3.4; |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| '|fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|' |fffd||fffd| |fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd|", _
                ErrRange:=Tbl, ErrSheet:=4
        End If
    End If

    'Table 3.5 '2018.05: prev 5 / added EGN (6) column
    Set Tbl = Range_RemoveCaptionRowAndColumn(Sheet4, Sheet4.Range("Table5"))
    arr = Tbl.value
    foundFullRow = False
    haveData = False
    ' |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd| |fffd||fffd| "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|"
    isDeclared = Not (Sheet4.Range("NothingT5").value = STR_Marked) And Not partialFlag
    If IsArray(arr) Then
        For R = 1 To UBound(arr)
            foundValue = (Len(Trim(arr(R, TC5(2)))) > 0) Or _
                         (Len(Trim(arr(R, TC5(3)))) > 0) Or _
                         (Len(Trim(arr(R, TC5(4)))) > 0) Or _
                         (Len(Trim(arr(R, TC5(5)))) > 0) Or _
                         (Len(Trim(arr(R, TC5(6)))) > 0) Or _
                         (Len(Trim(arr(R, TC5(7)))) > 0) Or _
                         (Len(Trim(arr(R, TC5(8)))) > 0)

            ' |fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| 7 + EGN (6)
            foundEmptyValue = (Len(Trim(arr(R, TC5(2)))) = 0) Or _
                              (Len(Trim(arr(R, TC5(3)))) = 0) Or _
                              (Len(Trim(arr(R, TC5(4)))) = 0) Or _
                              (Len(Trim(arr(R, TC5(5)))) = 0) Or _
                              (Len(Trim(arr(R, TC5(8)))) = 0)

            firstColumn = TC5(2)
            lastColumn = TC5(8)
            
            If isDeclared Then
                If foundEmptyValue And foundValue Then
                    ControlForm.ErrAdd ErrText:="|fffd||fffd||fffd||fffd||fffd||fffd||fffd| 3.5; |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd| |fffd| |fffd||fffd||fffd||fffd||fffd|", _
                        ErrRange:=Sheet4.Range( _
                            Tbl.Cells(R, firstColumn), _
                            Tbl.Cells(R, lastColumn)), _
                        ErrSheet:=4
                End If
                If (Len(Trim(arr(R, TC5(6)))) > 0) _
                    And Not IsValidEGN(Trim(arr(R, TC5(6))), checksumOnly:=True) Then
                        ControlForm.ErrAdd ErrText:="|fffd||fffd||fffd||fffd||fffd||fffd||fffd| 3.5; |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd|", _
                            ErrRange:=Sheet4.Range( _
                                Tbl.Cells(R, TC5(6)), _
                                Tbl.Cells(R, TC5(6))), _
                            ErrSheet:=4
                End If
            End If

            If foundValue Then
                If Not foundEmptyValue Then
                    foundFullRow = True
                End If
                haveData = True
            End If
        Next R
    End If

    If isDeclared Then
        If Not foundFullRow Then
            ControlForm.ErrAdd ErrText:="|fffd||fffd||fffd||fffd||fffd||fffd||fffd| 3.5; |fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd|", _
                ErrRange:=Tbl, ErrSheet:=4
        End If
    Else
        If haveData Then
            If partialFlag Then
                ControlForm.ErrAdd ErrText:="|fffd||fffd||fffd||fffd||fffd||fffd||fffd| 3.5; |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd| |fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| (|fffd||fffd| |fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|)", _
                    ErrRange:=Tbl, ErrSheet:=4
            Else
                ControlForm.ErrAdd ErrText:="|fffd||fffd||fffd||fffd||fffd||fffd||fffd| 3.5; |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| '|fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|' |fffd||fffd| |fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd|", _
                    ErrRange:=Tbl, ErrSheet:=4
            End If
        End If
    End If

    'Sheet 5 --------------------------------------------------------------------------------------

    'Table 4 '2018.05: prev 6 / added EGN (6) column
    Set Tbl = Range_RemoveCaptionRowAndColumn(Sheet5, Sheet5.Range("Table6"))
    arr = Tbl.value
    foundFullRow = False
    haveData = False
    isDeclared = Not (Sheet5.Range("NothingT6").value = STR_Marked)
    If IsArray(arr) Then
        For R = 1 To UBound(arr)
            foundValue = (Len(Trim(arr(R, TC6(2)))) > 0) Or _
                         (Len(Trim(arr(R, TC6(3)))) > 0) Or _
                         (Len(Trim(arr(R, TC6(4)))) > 0) Or _
                         (Len(Trim(arr(R, TC6(5)))) > 0) Or _
                         (Len(Trim(arr(R, TC6(6)))) > 0)

            ' |fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| 4 + EGN (6)
            foundEmptyValue = (Len(Trim(arr(R, TC6(2)))) = 0) Or _
                              (Len(Trim(arr(R, TC6(3)))) = 0) Or _
                              (Len(Trim(arr(R, TC6(5)))) = 0)

            ' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd| "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|" |fffd| "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|" |fffd||fffd||fffd||fffd||fffd||fffd| 7
            If Not partialFlag Then
                foundValue = foundValue Or _
                             (Len(Trim(arr(R, TC6(7)))) > 0)
                             
                foundEmptyValue = foundEmptyValue Or _
                                  (Len(Trim(arr(R, TC6(7)))) = 0)
                                  
                lastColumn = TC6(7)
            Else
                lastColumn = TC6(6)

                If (Len(Trim(arr(R, TC6(7)))) > 0) Then
                    ControlForm.ErrAdd ErrText:="|fffd||fffd||fffd||fffd||fffd||fffd||fffd| 4; |fffd||fffd||fffd||fffd||fffd| |fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd|", _
                        ErrRange:=Sheet5.Range( _
                            Tbl.Cells(R, TC6(7)), _
                            Tbl.Cells(R, TC6(7))), _
                        ErrSheet:=5
                End If
            End If
            firstColumn = TC6(2)
            
            If isDeclared Then
                If foundEmptyValue And foundValue Then
                    ControlForm.ErrAdd ErrText:="|fffd||fffd||fffd||fffd||fffd||fffd||fffd| 4; |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd| |fffd| |fffd||fffd||fffd||fffd||fffd|", _
                        ErrRange:=Sheet5.Range( _
                            Tbl.Cells(R, firstColumn), _
                            Tbl.Cells(R, lastColumn)), _
                        ErrSheet:=5
                End If
                If (Len(Trim(arr(R, TC6(6)))) > 0) _
                    And Not IsValidEGN(Trim(arr(R, TC6(6))), checksumOnly:=True) Then
                        ControlForm.ErrAdd ErrText:="|fffd||fffd||fffd||fffd||fffd||fffd||fffd| 4; |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd|", _
                            ErrRange:=Sheet5.Range( _
                                Tbl.Cells(R, TC6(6)), _
                                Tbl.Cells(R, TC6(6))), _
                            ErrSheet:=5
                End If
            End If

            If foundValue Then
                If Not foundEmptyValue Then
                    foundFullRow = True
                End If
                haveData = True
            End If
        Next R
    End If

    If isDeclared Then
        If Not foundFullRow Then
            ControlForm.ErrAdd ErrText:="|fffd||fffd||fffd||fffd||fffd||fffd||fffd| 4; |fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd|", _
                ErrRange:=Tbl, ErrSheet:=5
        End If
    Else
        If haveData Then
            ControlForm.ErrAdd ErrText:="|fffd||fffd||fffd||fffd||fffd||fffd||fffd| 4; |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| '|fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|' |fffd||fffd| |fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd|", _
                ErrRange:=Tbl, ErrSheet:=5
        End If
    End If

    'Table 5 '2018.05: prev 7 / added EGN (6) column
    Set Tbl = Range_RemoveCaptionRowAndColumn(Sheet5, Sheet5.Range("Table7"))
    arr = Tbl.value
    foundFullRow = False
    haveData = False
    isDeclared = Not (Sheet5.Range("NothingT7").value = STR_Marked)
    If IsArray(arr) Then
        For R = 1 To UBound(arr)
            foundValue = False
            foundEmptyValue = False
                    
            foundValue = (Len(Trim(arr(R, TC7(2)))) > 0) Or _
                         (Len(Trim(arr(R, TC7(3)))) > 0) Or _
                         (Len(Trim(arr(R, TC7(4)))) > 0) Or _
                         (Len(Trim(arr(R, TC7(5)))) > 0) Or _
                         (Len(Trim(arr(R, TC7(6)))) > 0)

            ' |fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| 4 + EGN (6)
            foundEmptyValue = (Len(Trim(arr(R, TC7(2)))) = 0) Or _
                              (Len(Trim(arr(R, TC7(3)))) = 0) Or _
                              (Len(Trim(arr(R, TC7(5)))) = 0)

            ' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd| "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|" |fffd| "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|" |fffd||fffd||fffd||fffd||fffd||fffd| 9
            If Not partialFlag Then
                foundValue = foundValue Or _
                                 (Len(Trim(arr(R, TC7(9)))) > 0)
                             
                foundEmptyValue = foundEmptyValue Or _
                                  (Len(Trim(arr(R, TC7(9)))) = 0)
                                  
                lastColumn = TC7(9)
            Else
                lastColumn = TC7(8)

                If (Len(Trim(arr(R, TC7(9)))) > 0) Then
                    ControlForm.ErrAdd ErrText:="|fffd||fffd||fffd||fffd||fffd||fffd||fffd| 5; |fffd||fffd||fffd||fffd||fffd| |fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd|", _
                        ErrRange:=Sheet5.Range( _
                            Tbl.Cells(R, TC7(9)), _
                            Tbl.Cells(R, TC7(9))), _
                        ErrSheet:=5
                End If
            End If
            firstColumn = TC7(2)
            
            ' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| 7 |fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| 8 |fffd||fffd||fffd| |fffd| |fffd||fffd||fffd||fffd||fffd|
            If foundValue And (Len(Trim(arr(R, TC7(7)))) = 0) And (Len(Trim(arr(R, TC7(8)))) = 0) Then
                foundEmptyValue = True

                If isDeclared Then
                    ControlForm.ErrAdd ErrText:="|fffd||fffd||fffd||fffd||fffd||fffd||fffd| 5; |fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| ""|fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|"" |fffd| ""|fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd|"" |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|", _
                        ErrRange:=Sheet5.Range( _
                            Tbl.Cells(R, TC7(7)), _
                            Tbl.Cells(R, TC7(8))), _
                        ErrSheet:=5
                End If
            Else
                foundValue = foundValue Or _
                             (Len(Trim(arr(R, TC7(7)))) > 0) Or _
                             (Len(Trim(arr(R, TC7(8)))) > 0)
            End If

            If isDeclared Then
                If foundEmptyValue And foundValue Then
                    ControlForm.ErrAdd ErrText:="|fffd||fffd||fffd||fffd||fffd||fffd||fffd| 5; |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd| |fffd| |fffd||fffd||fffd||fffd||fffd|", _
                        ErrRange:=Sheet5.Range( _
                            Tbl.Cells(R, firstColumn), _
                            Tbl.Cells(R, lastColumn)), _
                        ErrSheet:=5
                End If
                If (Len(Trim(arr(R, TC7(6)))) > 0) _
                    And Not IsValidEGN(Trim(arr(R, TC7(6))), checksumOnly:=True) Then
                        ControlForm.ErrAdd ErrText:="|fffd||fffd||fffd||fffd||fffd||fffd||fffd| 5; |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd|", _
                            ErrRange:=Sheet5.Range( _
                                Tbl.Cells(R, TC7(6)), _
                                Tbl.Cells(R, TC7(6))), _
                            ErrSheet:=5
                End If
            End If

            If foundValue Then
                If Not foundEmptyValue Then
                    foundFullRow = True
                End If
                haveData = True
            End If
        Next R
    End If

    If isDeclared Then
        If Not foundFullRow Then
            ControlForm.ErrAdd ErrText:="|fffd||fffd||fffd||fffd||fffd||fffd||fffd| 5; |fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd|", _
                ErrRange:=Tbl, ErrSheet:=5
        End If
    Else
        If haveData Then
            ControlForm.ErrAdd ErrText:="|fffd||fffd||fffd||fffd||fffd||fffd||fffd| 5; |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| '|fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|' |fffd||fffd| |fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd|", _
                ErrRange:=Tbl, ErrSheet:=5
        End If
    End If

    'Table 6 '2018.05: prev 8 / added EGN (7) column
    Set Tbl = Range_RemoveCaptionRowAndColumn(Sheet5, Sheet5.Range("Table8"))
    arr = Tbl.value
    foundFullRow = False
    haveData = False
    isDeclared = Not (Sheet5.Range("NothingT8").value = STR_Marked)
    If IsArray(arr) Then
        For R = 1 To UBound(arr)
            foundValue = False
            foundEmptyValue = False

            foundValue = (Len(Trim(arr(R, TC8(2)))) > 0) Or _
                         (Len(Trim(arr(R, TC8(3)))) > 0) Or _
                         (Len(Trim(arr(R, TC8(4)))) > 0) Or _
                         (Len(Trim(arr(R, TC8(5)))) > 0) Or _
                         (Len(Trim(arr(R, TC8(6)))) > 0) Or _
                         (Len(Trim(arr(R, TC8(7)))) > 0) Or _
                         (Len(Trim(arr(R, TC8(8)))) > 0)

            ' |fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| 5, 8 + EGN (7)
            foundEmptyValue = (Len(Trim(arr(R, TC8(2)))) = 0) Or _
                              (Len(Trim(arr(R, TC8(3)))) = 0) Or _
                              (Len(Trim(arr(R, TC8(4)))) = 0) Or _
                              (Len(Trim(arr(R, TC8(6)))) = 0)

            firstColumn = TC8(2)
            lastColumn = TC8(10)
            
            ' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| 9 |fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| 10 |fffd||fffd||fffd| |fffd| |fffd||fffd||fffd||fffd||fffd|
            If foundValue And (Len(Trim(arr(R, TC8(9)))) = 0) And (Len(Trim(arr(R, TC8(10)))) = 0) Then
                foundEmptyValue = True
                
                If isDeclared Then
                    ControlForm.ErrAdd ErrText:="|fffd||fffd||fffd||fffd||fffd||fffd||fffd| 6; |fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| ""|fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd|"" |fffd| ""|fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd|"" |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|", _
                        ErrRange:=Sheet5.Range( _
                            Tbl.Cells(R, TC8(9)), _
                            Tbl.Cells(R, TC8(10))), _
                        ErrSheet:=5
                End If
            Else
                foundValue = foundValue Or _
                             (Len(Trim(arr(R, TC8(9)))) > 0) Or _
                             (Len(Trim(arr(R, TC8(10)))) > 0)
            End If
            
            If isDeclared Then
                If foundEmptyValue And foundValue Then
                    ControlForm.ErrAdd ErrText:="|fffd||fffd||fffd||fffd||fffd||fffd||fffd| 6; |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd| |fffd| |fffd||fffd||fffd||fffd||fffd|", _
                        ErrRange:=Sheet5.Range( _
                            Tbl.Cells(R, firstColumn), _
                            Tbl.Cells(R, lastColumn)), _
                        ErrSheet:=5
                End If
                If (Len(Trim(arr(R, TC8(7)))) > 0) _
                    And Not IsValidEGN(Trim(arr(R, TC8(7))), checksumOnly:=True) Then
                        ControlForm.ErrAdd ErrText:="|fffd||fffd||fffd||fffd||fffd||fffd||fffd| 6; |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd|", _
                            ErrRange:=Sheet5.Range( _
                                Tbl.Cells(R, TC8(7)), _
                                Tbl.Cells(R, TC8(7))), _
                            ErrSheet:=5
                End If
            End If

            If foundValue Then
                If Not foundEmptyValue Then
                    foundFullRow = True
                End If
                haveData = True
            End If
        Next R
    End If

    If isDeclared Then
        If Not foundFullRow Then
            ControlForm.ErrAdd ErrText:="|fffd||fffd||fffd||fffd||fffd||fffd||fffd| 6; |fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd|", _
                ErrRange:=Tbl, ErrSheet:=5
        End If
    Else
        If haveData Then
            ControlForm.ErrAdd ErrText:="|fffd||fffd||fffd||fffd||fffd||fffd||fffd| 6; |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| '|fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|' |fffd||fffd| |fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd|", _
                ErrRange:=Tbl, ErrSheet:=5
        End If
    End If

    'Table 7 '2018.05: prev 9 / added EGN (7) column
    Set Tbl = Range_RemoveCaptionRowAndColumn(Sheet5, Sheet5.Range("Table9"))
    arr = Tbl.value
    foundFullRow = False
    haveData = False
    isDeclared = Not (Sheet5.Range("NothingT9").value = STR_Marked)
    If IsArray(arr) Then
        For R = 1 To UBound(arr)
            foundValue = False
            foundEmptyValue = False

            foundValue = (Len(Trim(arr(R, TC9(2)))) > 0) Or _
                         (Len(Trim(arr(R, TC9(3)))) > 0) Or _
                         (Len(Trim(arr(R, TC9(4)))) > 0) Or _
                         (Len(Trim(arr(R, TC9(5)))) > 0) Or _
                         (Len(Trim(arr(R, TC9(6)))) > 0) Or _
                         (Len(Trim(arr(R, TC9(7)))) > 0) Or _
                         (Len(Trim(arr(R, TC9(8)))) > 0)
            
            ' |fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| 5, 8 + EGN (7)
            foundEmptyValue = (Len(Trim(arr(R, TC9(2)))) = 0) Or _
                              (Len(Trim(arr(R, TC9(3)))) = 0) Or _
                              (Len(Trim(arr(R, TC9(4)))) = 0) Or _
                              (Len(Trim(arr(R, TC9(6)))) = 0)

            firstColumn = TC9(2)
            lastColumn = TC9(10)

            ' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| 9 |fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| 10 |fffd||fffd||fffd| |fffd| |fffd||fffd||fffd||fffd||fffd|
            If foundValue And (Len(Trim(arr(R, TC9(9)))) = 0) And (Len(Trim(arr(R, TC9(10)))) = 0) Then
                foundEmptyValue = True

                If isDeclared Then
                    ControlForm.ErrAdd ErrText:="|fffd||fffd||fffd||fffd||fffd||fffd||fffd| 7; |fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| ""|fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd|"" |fffd| ""|fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd|"" |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|", _
                        ErrRange:=Sheet5.Range( _
                            Tbl.Cells(R, TC9(9)), _
                            Tbl.Cells(R, TC9(10))), _
                        ErrSheet:=5
                End If
            Else
                foundValue = foundValue Or _
                             (Len(Trim(arr(R, TC9(9)))) > 0) Or _
                             (Len(Trim(arr(R, TC9(10)))) > 0)
            End If

            If isDeclared Then
                If foundEmptyValue And foundValue Then
                    ControlForm.ErrAdd ErrText:="|fffd||fffd||fffd||fffd||fffd||fffd||fffd| 7; |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd| |fffd| |fffd||fffd||fffd||fffd||fffd|", _
                        ErrRange:=Sheet5.Range( _
                            Tbl.Cells(R, firstColumn), _
                            Tbl.Cells(R, lastColumn)), _
                        ErrSheet:=5
                End If
                If (Len(Trim(arr(R, TC9(7)))) > 0) _
                    And Not IsValidEGN(Trim(arr(R, TC9(7))), checksumOnly:=True) Then
                        ControlForm.ErrAdd ErrText:="|fffd||fffd||fffd||fffd||fffd||fffd||fffd| 7; |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd|", _
                            ErrRange:=Sheet5.Range( _
                                Tbl.Cells(R, TC9(7)), _
                                Tbl.Cells(R, TC9(7))), _
                            ErrSheet:=5
                End If
            End If

            If foundValue Then
                If Not foundEmptyValue Then
                    foundFullRow = True
                End If
                haveData = True
            End If
        Next R
    End If
        
    If isDeclared Then
        If Not foundFullRow Then
            ControlForm.ErrAdd ErrText:="|fffd||fffd||fffd||fffd||fffd||fffd||fffd| 7; |fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd|", _
                ErrRange:=Tbl, ErrSheet:=5
        End If
    Else
        If haveData Then
            ControlForm.ErrAdd ErrText:="|fffd||fffd||fffd||fffd||fffd||fffd||fffd| 7; |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| '|fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|' |fffd||fffd| |fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd|", _
                ErrRange:=Tbl, ErrSheet:=5
        End If
    End If

    'Sheet 6 --------------------------------------------------------------------------------------

    'Table 8 '2018.05: added as T12N
    Set Tbl = Range_RemoveCaptionRowAndColumn(Sheet6, Sheet6.Range("Table12N"))
    arr = Tbl.value
    foundFullRow = False
    haveData = False
    isDeclared = Not (Sheet6.Range("NothingT12N").value = STR_Marked)
    If IsArray(arr) Then
        For R = 1 To UBound(arr)
            foundValue = False
            foundEmptyValue = False
                    
            foundValue = (Len(Trim(arr(R, TC12N(2)))) > 0) Or _
                         (Len(Trim(arr(R, TC12N(3)))) > 0) Or _
                         (Len(Trim(arr(R, TC12N(4)))) > 0) Or _
                         (Len(Trim(arr(R, TC12N(5)))) > 0) Or _
                         (Len(Trim(arr(R, TC12N(6)))) > 0)

            ' |fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| 4 + EGN (6)
            foundEmptyValue = (Len(Trim(arr(R, TC12N(2)))) = 0) Or _
                              (Len(Trim(arr(R, TC12N(3)))) = 0) Or _
                              (Len(Trim(arr(R, TC12N(5)))) = 0)

            ' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd| "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|" |fffd| "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|" |fffd||fffd||fffd||fffd||fffd||fffd| 9
            If Not partialFlag Then
                foundValue = foundValue Or _
                                 (Len(Trim(arr(R, TC12N(9)))) > 0)
                             
                foundEmptyValue = foundEmptyValue Or _
                                  (Len(Trim(arr(R, TC12N(9)))) = 0)
                                  
                lastColumn = TC12N(9)
            Else
                lastColumn = TC12N(8)

                If (Len(Trim(arr(R, TC12N(9)))) > 0) Then
                    ControlForm.ErrAdd ErrText:="|fffd||fffd||fffd||fffd||fffd||fffd||fffd| 8; |fffd||fffd||fffd||fffd||fffd| |fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd|", _
                        ErrRange:=Sheet6.Range( _
                            Tbl.Cells(R, TC12N(9)), _
                            Tbl.Cells(R, TC12N(9))), _
                        ErrSheet:=6
                End If
            End If
            firstColumn = TC12N(2)
            
            ' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| 7 |fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| 8 |fffd||fffd||fffd| |fffd| |fffd||fffd||fffd||fffd||fffd|
            If foundValue And (Len(Trim(arr(R, TC12N(7)))) = 0) And (Len(Trim(arr(R, TC12N(8)))) = 0) Then
                foundEmptyValue = True

                If isDeclared Then
                    ControlForm.ErrAdd ErrText:="|fffd||fffd||fffd||fffd||fffd||fffd||fffd| 8; |fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| ""|fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|"" |fffd| ""|fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd|"" |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|", _
                        ErrRange:=Sheet6.Range( _
                            Tbl.Cells(R, TC12N(7)), _
                            Tbl.Cells(R, TC12N(8))), _
                        ErrSheet:=6
                End If
            Else
                foundValue = foundValue Or _
                             (Len(Trim(arr(R, TC12N(7)))) > 0) Or _
                             (Len(Trim(arr(R, TC12N(8)))) > 0)
            End If

            If isDeclared Then
                If foundEmptyValue And foundValue Then
                    ControlForm.ErrAdd ErrText:="|fffd||fffd||fffd||fffd||fffd||fffd||fffd| 8; |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd| |fffd| |fffd||fffd||fffd||fffd||fffd|", _
                        ErrRange:=Sheet6.Range( _
                            Tbl.Cells(R, firstColumn), _
                            Tbl.Cells(R, lastColumn)), _
                        ErrSheet:=6
                End If
                If (Len(Trim(arr(R, TC12N(6)))) > 0) _
                    And Not IsValidEGN(Trim(arr(R, TC12N(6))), checksumOnly:=True) Then
                        ControlForm.ErrAdd ErrText:="|fffd||fffd||fffd||fffd||fffd||fffd||fffd| 8; |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd|", _
                            ErrRange:=Sheet6.Range( _
                                Tbl.Cells(R, TC12N(6)), _
                                Tbl.Cells(R, TC12N(6))), _
                            ErrSheet:=6
                End If
            End If

            If foundValue Then
                If Not foundEmptyValue Then
                    foundFullRow = True
                End If
                haveData = True
            End If
        Next R
    End If

    If isDeclared Then
        If Not foundFullRow Then
            ControlForm.ErrAdd ErrText:="|fffd||fffd||fffd||fffd||fffd||fffd||fffd| 8; |fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd|", _
                ErrRange:=Tbl, ErrSheet:=6
        End If
    Else
        If haveData Then
            ControlForm.ErrAdd ErrText:="|fffd||fffd||fffd||fffd||fffd||fffd||fffd| 8; |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| '|fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|' |fffd||fffd| |fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd|", _
                ErrRange:=Tbl, ErrSheet:=6
        End If
    End If

    'Table 9 '2018.05: prev 10 / added EGN (9) column
    Set Tbl = Range_RemoveCaptionRowAndColumn(Sheet6, Sheet6.Range("Table10"))
    arr = Tbl.value
    foundFullRow = False
    haveData = False
    isDeclared = Not (Sheet6.Range("NothingT10").value = STR_Marked)
    If IsArray(arr) Then
        For R = 1 To UBound(arr)
            foundValue = (Len(Trim(arr(R, TC10(2)))) > 0) Or _
                         (Len(Trim(arr(R, TC10(3)))) > 0) Or _
                         (Len(Trim(arr(R, TC10(4)))) > 0) Or _
                         (Len(Trim(arr(R, TC10(5)))) > 0) Or _
                         (Len(Trim(arr(R, TC10(6)))) > 0) Or _
                         (Len(Trim(arr(R, TC10(7)))) > 0) Or _
                         (Len(Trim(arr(R, TC10(8)))) > 0) Or _
                         (Len(Trim(arr(R, TC10(9)))) > 0)
                         
            ' |fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| 4, 5 + EGN (9)
            foundEmptyValue = (Len(Trim(arr(R, TC10(2)))) = 0) Or _
                              (Len(Trim(arr(R, TC10(3)))) = 0) Or _
                              (Len(Trim(arr(R, TC10(6)))) = 0) Or _
                              (Len(Trim(arr(R, TC10(7)))) = 0) Or _
                              (Len(Trim(arr(R, TC10(8)))) = 0)

            ' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd| "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|" |fffd| "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|" |fffd||fffd||fffd||fffd||fffd||fffd| 10, 11
            If Not partialFlag Then
                foundValue = foundValue Or _
                             (Len(Trim(arr(R, TC10(10)))) > 0) Or _
                             (Len(Trim(arr(R, TC10(11)))) > 0)
                             
                foundEmptyValue = foundEmptyValue Or _
                                  (Len(Trim(arr(R, TC10(10)))) = 0) Or _
                                  (Len(Trim(arr(R, TC10(11)))) = 0)
                                  
                lastColumn = TC10(11)
            Else
                lastColumn = TC10(9)

                If (Len(Trim(arr(R, TC10(10)))) > 0) Or _
                   (Len(Trim(arr(R, TC10(11)))) > 0) Then
                    ControlForm.ErrAdd ErrText:="|fffd||fffd||fffd||fffd||fffd||fffd||fffd| 9; |fffd||fffd||fffd||fffd||fffd| |fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd|", _
                        ErrRange:=Sheet6.Range( _
                            Tbl.Cells(R, TC10(10)), _
                            Tbl.Cells(R, TC10(11))), _
                        ErrSheet:=6
                End If
            End If
            firstColumn = TC10(2)
            
            If isDeclared Then
                If foundEmptyValue And foundValue Then
                    ControlForm.ErrAdd ErrText:="|fffd||fffd||fffd||fffd||fffd||fffd||fffd| 9; |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd| |fffd| |fffd||fffd||fffd||fffd||fffd|", _
                        ErrRange:=Sheet6.Range( _
                            Tbl.Cells(R, firstColumn), _
                            Tbl.Cells(R, lastColumn)), _
                        ErrSheet:=6
                End If
                If (Len(Trim(arr(R, TC10(9)))) > 0) _
                    And Not IsValidEGN(Trim(arr(R, TC10(9))), checksumOnly:=True) Then
                        ControlForm.ErrAdd ErrText:="|fffd||fffd||fffd||fffd||fffd||fffd||fffd| 9; |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd|", _
                            ErrRange:=Sheet6.Range( _
                                Tbl.Cells(R, TC10(9)), _
                                Tbl.Cells(R, TC10(9))), _
                            ErrSheet:=6
                End If
            End If
            
            If foundValue Then
                If Not foundEmptyValue Then
                    foundFullRow = True
                End If
                haveData = True
            End If
        Next R
    End If

    If isDeclared Then
        If Not foundFullRow Then
            ControlForm.ErrAdd ErrText:="|fffd||fffd||fffd||fffd||fffd||fffd||fffd| 9; |fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd|", _
                ErrRange:=Tbl, ErrSheet:=6
        End If
    Else
        If haveData Then
            ControlForm.ErrAdd ErrText:="|fffd||fffd||fffd||fffd||fffd||fffd||fffd| 9; |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| '|fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|' |fffd||fffd| |fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd|", _
                ErrRange:=Tbl, ErrSheet:=6
        End If
    End If

    'Table 10 '2018.05: prev 11 / added EGN (8) column
    Set Tbl = Range_RemoveCaptionRowAndColumn(Sheet6, Sheet6.Range("Table11"))
    arr = Tbl.value
    foundFullRow = False
    haveData = False
    isDeclared = Not (Sheet6.Range("NothingT11").value = STR_Marked)
    If IsArray(arr) Then
        For R = 1 To UBound(arr)
            foundValue = (Len(Trim(arr(R, TC11(2)))) > 0) Or _
                         (Len(Trim(arr(R, TC11(3)))) > 0) Or _
                         (Len(Trim(arr(R, TC11(4)))) > 0) Or _
                         (Len(Trim(arr(R, TC11(5)))) > 0) Or _
                         (Len(Trim(arr(R, TC11(6)))) > 0) Or _
                         (Len(Trim(arr(R, TC11(7)))) > 0) Or _
                         (Len(Trim(arr(R, TC11(8)))) > 0)

            ' |fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| EGN (8)
            foundEmptyValue = (Len(Trim(arr(R, TC11(2)))) = 0) Or _
                              (Len(Trim(arr(R, TC11(3)))) = 0) Or _
                              (Len(Trim(arr(R, TC11(4)))) = 0) Or _
                              (Len(Trim(arr(R, TC11(5)))) = 0) Or _
                              (Len(Trim(arr(R, TC11(6)))) = 0) Or _
                              (Len(Trim(arr(R, TC11(7)))) = 0)

            ' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd| "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|" |fffd| "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|" |fffd||fffd||fffd||fffd||fffd||fffd| 9, 10
            If Not partialFlag Then
                foundValue = foundValue Or _
                             (Len(Trim(arr(R, TC11(9)))) > 0) Or _
                             (Len(Trim(arr(R, TC11(10)))) > 0)
                             
                foundEmptyValue = foundEmptyValue Or _
                                  (Len(Trim(arr(R, TC11(9)))) = 0) Or _
                                  (Len(Trim(arr(R, TC11(10)))) = 0)
                                  
                lastColumn = TC11(10)
            Else
                lastColumn = TC11(8)

                If (Len(Trim(arr(R, TC11(9)))) > 0) Or _
                   (Len(Trim(arr(R, TC11(10)))) > 0) Then
                    ControlForm.ErrAdd ErrText:="|fffd||fffd||fffd||fffd||fffd||fffd||fffd| 10; |fffd||fffd||fffd||fffd||fffd| |fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd|", _
                        ErrRange:=Sheet6.Range( _
                            Tbl.Cells(R, TC11(9)), _
                            Tbl.Cells(R, TC11(10))), _
                        ErrSheet:=6
                End If
            End If
            firstColumn = TC11(2)

            If isDeclared Then
                If foundEmptyValue And foundValue Then
                    ControlForm.ErrAdd ErrText:="|fffd||fffd||fffd||fffd||fffd||fffd||fffd| 10; |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd| |fffd| |fffd||fffd||fffd||fffd||fffd|", _
                        ErrRange:=Sheet6.Range( _
                            Tbl.Cells(R, firstColumn), _
                            Tbl.Cells(R, lastColumn)), _
                        ErrSheet:=6
                End If
                If (Len(Trim(arr(R, TC11(8)))) > 0) _
                    And Not IsValidEGN(Trim(arr(R, TC11(8))), checksumOnly:=True) Then
                        ControlForm.ErrAdd ErrText:="|fffd||fffd||fffd||fffd||fffd||fffd||fffd| 10; |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd|", _
                            ErrRange:=Sheet6.Range( _
                                Tbl.Cells(R, TC11(8)), _
                                Tbl.Cells(R, TC11(8))), _
                            ErrSheet:=6
                End If
            End If

            If foundValue Then
                If Not foundEmptyValue Then
                    foundFullRow = True
                End If
                haveData = True
            End If
        Next R
    End If

    If isDeclared Then
        If Not foundFullRow Then
            ControlForm.ErrAdd ErrText:="|fffd||fffd||fffd||fffd||fffd||fffd||fffd| 10; |fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd|", _
                ErrRange:=Tbl, ErrSheet:=6
        End If
    Else
        If haveData Then
            ControlForm.ErrAdd ErrText:="|fffd||fffd||fffd||fffd||fffd||fffd||fffd| 10; |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| '|fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|' |fffd||fffd| |fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd|", _
                ErrRange:=Tbl, ErrSheet:=6
        End If
    End If

    'Table 11 '2018.05: prev 12 / added EGN (8) column
    Set Tbl = Range_RemoveCaptionRowAndColumn(Sheet6, Sheet6.Range("Table12"))
    arr = Tbl.value
    foundFullRow = False
    haveData = False
    ' |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd| |fffd||fffd| "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|"
    isDeclared = Not (Sheet6.Range("NothingT12").value = STR_Marked) And Not partialFlag
    If IsArray(arr) Then
        For R = 1 To UBound(arr)
            foundValue = (Len(Trim(arr(R, TC12(2)))) > 0) Or _
                         (Len(Trim(arr(R, TC12(3)))) > 0) Or _
                         (Len(Trim(arr(R, TC12(4)))) > 0) Or _
                         (Len(Trim(arr(R, TC12(5)))) > 0) Or _
                         (Len(Trim(arr(R, TC12(6)))) > 0) Or _
                         (Len(Trim(arr(R, TC12(7)))) > 0) Or _
                         (Len(Trim(arr(R, TC12(8)))) > 0) Or _
                         (Len(Trim(arr(R, TC12(9)))) > 0)

            ' |fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| EGN (8)
            foundEmptyValue = (Len(Trim(arr(R, TC12(2)))) = 0) Or _
                              (Len(Trim(arr(R, TC12(3)))) = 0) Or _
                              (Len(Trim(arr(R, TC12(4)))) = 0) Or _
                              (Len(Trim(arr(R, TC12(5)))) = 0) Or _
                              (Len(Trim(arr(R, TC12(6)))) = 0) Or _
                              (Len(Trim(arr(R, TC12(7)))) = 0) Or _
                              (Len(Trim(arr(R, TC12(9)))) = 0)

            firstColumn = TC12(2)
            lastColumn = TC12(9)
            
            If isDeclared Then
                If foundEmptyValue And foundValue Then
                    ControlForm.ErrAdd ErrText:="|fffd||fffd||fffd||fffd||fffd||fffd||fffd| 11; |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd| |fffd| |fffd||fffd||fffd||fffd||fffd|", _
                        ErrRange:=Sheet6.Range( _
                            Tbl.Cells(R, firstColumn), _
                            Tbl.Cells(R, lastColumn)), _
                        ErrSheet:=6
                End If
                If (Len(Trim(arr(R, TC12(8)))) > 0) _
                    And Not IsValidEGN(Trim(arr(R, TC12(8))), checksumOnly:=True) Then
                        ControlForm.ErrAdd ErrText:="|fffd||fffd||fffd||fffd||fffd||fffd||fffd| 11; |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd|", _
                            ErrRange:=Sheet6.Range( _
                                Tbl.Cells(R, TC12(8)), _
                                Tbl.Cells(R, TC12(8))), _
                            ErrSheet:=6
                End If
            End If

            If foundValue Then
                If Not foundEmptyValue Then
                    foundFullRow = True
                End If
                haveData = True
            End If
        Next R
    End If

    If isDeclared Then
        If Not foundFullRow Then
            ControlForm.ErrAdd ErrText:="|fffd||fffd||fffd||fffd||fffd||fffd||fffd| 11; |fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd|", _
                ErrRange:=Tbl, ErrSheet:=6
        End If
    Else
        If haveData Then
            If partialFlag Then
                ControlForm.ErrAdd ErrText:="|fffd||fffd||fffd||fffd||fffd||fffd||fffd| 11; |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd| |fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| (|fffd||fffd| |fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|)", _
                    ErrRange:=Tbl, ErrSheet:=6
            Else
                ControlForm.ErrAdd ErrText:="|fffd||fffd||fffd||fffd||fffd||fffd||fffd| 11; |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| '|fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|' |fffd||fffd| |fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd|", _
                    ErrRange:=Tbl, ErrSheet:=6
            End If
        End If
    End If

    'Sheet 7 --------------------------------------------------------------------------------------

    'Table 12 '2018.05: prev 13
    ' |fffd||fffd||fffd||fffd| II |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| 2,3,4
    Set Tbl = Application.Union(Range_RemoveCaptionRowAndColumn(Sheet7, Sheet7.Range("Table13_1")), _
                                Range_RemoveCaptionRowAndColumn(Sheet7, Sheet7.Range("Table13_2")))
    foundFullRow = False
    haveData = False
    ' |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd| |fffd||fffd| "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|"
    isDeclared = Not (Sheet7.Range("NothingT13").value = STR_Marked) And Not partialFlag
    For S = 1 To Tbl.Areas.Count
        arr = Tbl.Areas(S).value
        If IsArray(arr) Then
            For R = 1 To UBound(arr) '(Len(Trim(arr(R, TC13(2)))) > 0) Or
                foundValue = (Len(Trim(arr(R, TC13(3)))) > 0) Or _
                             (Len(Trim(arr(R, TC13(4)))) > 0)
        
                ' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| 1 |fffd| (2 |fffd||fffd||fffd| 3)
                foundEmptyValue = (Len(Trim(arr(R, TC13(2)))) = 0) ' And _
                                  '((Len(Trim(arr(R, TC13(3)))) = 0) Or _
                                  '(Len(Trim(arr(R, TC13(4)))) = 0))
        
                firstColumn = TC13(2)
                lastColumn = TC13(4)
        
                If isDeclared Then
                    If foundEmptyValue And foundValue Then
                        ControlForm.ErrAdd ErrText:="|fffd||fffd||fffd||fffd||fffd||fffd||fffd| 12; |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd| |fffd| |fffd||fffd||fffd||fffd||fffd|", _
                            ErrRange:=Sheet7.Range( _
                                Tbl.Areas(S).Cells(R, firstColumn), _
                                Tbl.Areas(S).Cells(R, lastColumn)), _
                            ErrSheet:=7
                    End If
                End If
        
                If foundValue Then
                    If Not foundEmptyValue Then
                        foundFullRow = True
                    End If
                    haveData = True
                End If
            Next R
        End If
    Next S
    
    ' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd| |fffd||fffd||fffd||fffd||fffd||fffd| 2, |fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd|
    'If Not foundFullRow Then
    '    Set Tbl = Sheet7.Range("Table13P1")
    '    arr = Tbl.value
    '    If IsArray(arr) Then
    '        For R = 1 To UBound(arr)
    '            If (Len(Trim(arr(R, 1))) > 0) Or (Len(Trim(arr(R, 2))) > 0) Then
    '                foundFullRow = True
    '                R = UBound(arr)
    '            End If
    '        Next R
    '    End If
    '    If Not foundFullRow Then
    '        Set Tbl = Sheet7.Range("Table13P2")
    '        arr = Tbl.value
    '        If IsArray(arr) Then
    '             For R = 1 To UBound(arr)
    '                If (Len(Trim(arr(R, 1))) > 0) Or (Len(Trim(arr(R, 2))) > 0) Then
    '                    foundFullRow = True
    '                    R = UBound(arr)
    '                End If
    '            Next R
    '        End If
    '    End If

    '    If Not foundFullRow Then
    '        Set Tbl = Application.Union(Sheet7.Range("Table13P1"), _
    '                                    Sheet7.Range("Table13P2"), _
    '                                    Range_RemoveCaptionRowAndColumn(Sheet7, Sheet7.Range("Table13")))
    '
    '        ControlForm.ErrAdd ErrText:="|fffd||fffd||fffd||fffd||fffd||fffd||fffd| 13; |fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd|", _
    '            ErrRange:=Tbl, ErrSheet:=7
    '    End If
    'End If

    If isDeclared Then
        If Not foundFullRow Then
            ControlForm.ErrAdd ErrText:="|fffd||fffd||fffd||fffd||fffd||fffd||fffd| 12; |fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd|", _
                ErrRange:=Tbl, ErrSheet:=7
        End If
    Else
        If haveData Then
            If partialFlag Then
                ControlForm.ErrAdd ErrText:="|fffd||fffd||fffd||fffd||fffd||fffd||fffd| 12; |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd| |fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| (|fffd||fffd| |fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|)", _
                    ErrRange:=Tbl, ErrSheet:=7
            Else
                ControlForm.ErrAdd ErrText:="|fffd||fffd||fffd||fffd||fffd||fffd||fffd| 12; |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| '|fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|' |fffd||fffd| |fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd|", _
                    ErrRange:=Tbl, ErrSheet:=7
            End If
        End If
    End If

    'Table 13 '2018.05: prev 14
    Set Tbl = Range_RemoveCaptionRowAndColumn(Sheet7, Sheet7.Range("Table14"))
    arr = Tbl.value
    foundFullRow = False
    haveData = False
    ' |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd| |fffd||fffd| "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|"
    isDeclared = Not (Sheet7.Range("NothingT14").value = STR_Marked) And Not partialFlag
    If IsArray(arr) Then
        For R = 1 To UBound(arr)
            foundValue = (Len(Trim(arr(R, TC14(2)))) > 0) Or _
                         (Len(Trim(arr(R, TC14(3)))) > 0) Or _
                         (Len(Trim(arr(R, TC14(4)))) > 0) Or _
                         (Len(Trim(arr(R, TC14(5)))) > 0) Or _
                         (Len(Trim(arr(R, TC14(6)))) > 0) Or _
                         (Len(Trim(arr(R, TC14(7)))) > 0)
            
            foundEmptyValue = (Len(Trim(arr(R, TC14(2)))) = 0) Or _
                              (Len(Trim(arr(R, TC14(3)))) = 0) Or _
                              ((Len(Trim(arr(R, TC14(4)))) = 0) And _
                               (Len(Trim(arr(R, TC14(5)))) = 0) And _
                               (Len(Trim(arr(R, TC14(6)))) = 0) And _
                               (Len(Trim(arr(R, TC14(7)))) = 0))

            firstColumn = TC14(2)
            lastColumn = TC14(7)

            If isDeclared Then
                If foundEmptyValue And foundValue Then
                    ControlForm.ErrAdd ErrText:="|fffd||fffd||fffd||fffd||fffd||fffd||fffd| 13; |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd| |fffd| |fffd||fffd||fffd||fffd||fffd|", _
                        ErrRange:=Sheet7.Range( _
                            Tbl.Cells(R, firstColumn), _
                            Tbl.Cells(R, lastColumn)), _
                        ErrSheet:=7
                End If

                ' |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| 4,5,6 |fffd| 7 |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
                N = 0
                For S = 4 To 7
                    If (Len(Trim(arr(R, TC14(S)))) > 0) Then
                        N = N + 1
                    End If
                Next S
                If (N > 1) Then
                    ControlForm.ErrAdd ErrText:="|fffd||fffd||fffd||fffd||fffd||fffd||fffd| 13; |fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| 4,5,6 |fffd| 7 |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|", _
                        ErrRange:=Sheet7.Range( _
                            Tbl.Cells(R, TC14(4)), _
                            Tbl.Cells(R, TC14(7))), _
                        ErrSheet:=7
                End If
            End If
            
            If foundValue Then
                If Not foundEmptyValue Then
                    foundFullRow = True
                End If
                haveData = True
            End If
        Next R
    End If

    If isDeclared Then
        If Not foundFullRow Then
            ControlForm.ErrAdd ErrText:="|fffd||fffd||fffd||fffd||fffd||fffd||fffd| 13; |fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd|", _
                ErrRange:=Tbl, ErrSheet:=7
        End If
    Else
        If haveData Then
            If partialFlag Then
                ControlForm.ErrAdd ErrText:="|fffd||fffd||fffd||fffd||fffd||fffd||fffd| 13; |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd| |fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| (|fffd||fffd| |fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|)", _
                    ErrRange:=Tbl, ErrSheet:=7
            Else
                ControlForm.ErrAdd ErrText:="|fffd||fffd||fffd||fffd||fffd||fffd||fffd| 13; |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| '|fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|' |fffd||fffd| |fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd|", _
                    ErrRange:=Tbl, ErrSheet:=7
            End If
        End If
    End If

    'Sheet 8 --------------------------------------------------------------------------------------

    'Table 14 '2018.05: prev 15
    Set Tbl = Application.Union(Range_RemoveCaptionRowAndColumn(Sheet8, Sheet8.Range("Table15_1")), _
                                Range_RemoveCaptionRowAndColumn(Sheet8, Sheet8.Range("Table15_2")), _
                                Range_RemoveCaptionRowAndColumn(Sheet8, Sheet8.Range("Table15_3")), _
                                Range_RemoveCaptionRowAndColumn(Sheet8, Sheet8.Range("Table15_4")))
    foundFullRow = False
    haveData = False
    ' |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd| |fffd||fffd| "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|"
    isDeclared = Not (Sheet8.Range("NothingT15").value = STR_Marked) And Not partialFlag
    For S = 1 To Tbl.Areas.Count
        arr = Tbl.Areas(S).value
        If IsArray(arr) Then
            For R = 1 To UBound(arr)
                foundValue = (Len(Trim(arr(R, TC15(2)))) > 0) Or _
                             (Len(Trim(arr(R, TC15(3)))) > 0) Or _
                             (Len(Trim(arr(R, TC15(4)))) > 0) Or _
                             (Len(Trim(arr(R, TC15(5)))) > 0) Or _
                             (Len(Trim(arr(R, TC15(6)))) > 0) Or _
                             (Len(Trim(arr(R, TC15(7)))) > 0) Or _
                             (Len(Trim(arr(R, TC15(8)))) > 0) Or _
                             (Len(Trim(arr(R, TC15(9)))) > 0)

                ' |fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| 5, 6, 7, 8, 9, |fffd||fffd|... (*)
                foundEmptyValue = (Len(Trim(arr(R, TC15(2)))) = 0) Or _
                                  (Len(Trim(arr(R, TC15(3)))) = 0) Or _
                                  (Len(Trim(arr(R, TC15(4)))) = 0)
                                  
                lastColumn = TC15(9)
                firstColumn = TC15(2)
            
                If isDeclared Then
                    If foundEmptyValue And foundValue Then
                        ControlForm.ErrAdd ErrText:="|fffd||fffd||fffd||fffd||fffd||fffd||fffd| 14; |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd| |fffd| |fffd||fffd||fffd||fffd||fffd|", _
                            ErrRange:=Sheet8.Range( _
                                Tbl.Areas(S).Cells(R, firstColumn), _
                                Tbl.Areas(S).Cells(R, lastColumn)), _
                            ErrSheet:=8
                    End If
                    
                    ' (*) |fffd||fffd||fffd||fffd||fffd||fffd| 6 |fffd| 7 |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
                    If (Len(Trim(arr(R, TC15(6)))) > 0) And (Len(Trim(arr(R, TC15(7)))) = 0) Then
                        ControlForm.ErrAdd ErrText:="|fffd||fffd||fffd||fffd||fffd||fffd||fffd| 14; |fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| 6, |fffd||fffd||fffd||fffd||fffd||fffd| 7 |fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|", _
                            ErrRange:=Sheet8.Range( _
                                Tbl.Areas(S).Cells(R, TC15(6)), _
                                Tbl.Areas(S).Cells(R, TC15(7))), _
                            ErrSheet:=8
                    ElseIf (Len(Trim(arr(R, TC15(6)))) = 0) And (Len(Trim(arr(R, TC15(7)))) > 0) Then
                        ControlForm.ErrAdd ErrText:="|fffd||fffd||fffd||fffd||fffd||fffd||fffd| 14; |fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| 7, |fffd||fffd||fffd||fffd||fffd||fffd| 6 |fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|", _
                            ErrRange:=Sheet8.Range( _
                                Tbl.Areas(S).Cells(R, TC15(6)), _
                                Tbl.Areas(S).Cells(R, TC15(7))), _
                            ErrSheet:=8
                    End If

                    ' (*) |fffd||fffd||fffd||fffd||fffd||fffd| 8 |fffd| 9 |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
                    If (Len(Trim(arr(R, TC15(8)))) > 0) And (Len(Trim(arr(R, TC15(9)))) = 0) Then
                        ControlForm.ErrAdd ErrText:="|fffd||fffd||fffd||fffd||fffd||fffd||fffd| 14; |fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| 8, |fffd||fffd||fffd||fffd||fffd||fffd| 9 |fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|", _
                            ErrRange:=Sheet8.Range( _
                                Tbl.Areas(S).Cells(R, TC15(8)), _
                                Tbl.Areas(S).Cells(R, TC15(9))), _
                            ErrSheet:=8
                    ElseIf (Len(Trim(arr(R, TC15(8)))) = 0) And (Len(Trim(arr(R, TC15(9)))) > 0) Then
                        ControlForm.ErrAdd ErrText:="|fffd||fffd||fffd||fffd||fffd||fffd||fffd| 14; |fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| 9, |fffd||fffd||fffd||fffd||fffd||fffd| 8 |fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|", _
                            ErrRange:=Sheet8.Range( _
                                Tbl.Areas(S).Cells(R, TC15(8)), _
                                Tbl.Areas(S).Cells(R, TC15(9))), _
                            ErrSheet:=8
                    End If
                End If

                If foundValue Then
                    If Not foundEmptyValue Then
                        foundFullRow = True
                    End If
                    haveData = True
                End If
            Next R
        End If
    Next S

    If isDeclared Then
        If Not foundFullRow Then
            ControlForm.ErrAdd ErrText:="|fffd||fffd||fffd||fffd||fffd||fffd||fffd| 14; |fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd|", _
                ErrRange:=Tbl, ErrSheet:=8
        End If
    Else
        If haveData Then
            If partialFlag Then
                ControlForm.ErrAdd ErrText:="|fffd||fffd||fffd||fffd||fffd||fffd||fffd| 14; |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd| |fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| (|fffd||fffd| |fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|)", _
                    ErrRange:=Tbl, ErrSheet:=8
            Else
                ControlForm.ErrAdd ErrText:="|fffd||fffd||fffd||fffd||fffd||fffd||fffd| 14; |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| '|fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|' |fffd||fffd| |fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd|", _
                    ErrRange:=Tbl, ErrSheet:=8
            End If
        End If
    End If

    'If Not IsDate(Sheet8.Range("Date8_1").Value) Then
    '    ControlForm.ErrAdd ErrText:="|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd| |fffd||fffd| |fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|", _
    '        ErrRange:=Sheet8.Range("Date8_1"), ErrSheet:=8
    'End If

    If (Len(Trim(Sheet8.Range("Date8_1").text)) = 0) Then
        ControlForm.ErrAdd ErrText:="|fffd||fffd| |fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|", _
            ErrRange:=Sheet8.Range("Date8_1"), ErrSheet:=8
    End If

    If (ControlForm.ErrCount > 0) Then
        If ShowDialog Then
            ControlForm.Show (vbModeless)
        End If
        Hash = "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|"
        Sheet1.btnSave.Enabled = False
        Sheet1.btnPrint.Enabled = False
        UpdateToolbar (False)
    Else
        Hash = CalculateHash
        Sheet1.btnSave.Enabled = True
        Sheet1.btnPrint.Enabled = True
        UpdateToolbar (True)
    End If

    Sheet1.Unprotect (STR_Pass_Sheet)
    Sheet1.Range("Hash").value = Hash
    Sheet1.EnableSelection = xlUnlockedCells
    Sheet1.Protect Password:=STR_Pass_Sheet, Contents:=True

    ThisWorkbook.IsValidated = True

End Sub

Attribute VB_Name = "VerificationFunctionsModule"
'------------------------------------------------------------------------------
'
' Exported Public Functions
'
' EGN and Name Validation
'
'------------------------------------------------------------------------------

Option Explicit

Public Function IsValidEGN(EGN, checksumOnly) As Boolean

    On Error GoTo ErrorLabel
    Err.Clear

    Dim PreparedEGN As String
    Dim Heights()
    Dim Month, day, MaxDays As Integer
    Dim CheckDigit As Integer
    Dim CheckSum As Integer
    Dim I As Integer

    IsValidEGN = False

    If IsEmpty(EGN) Or IsNull(EGN) Then
        Exit Function
    End If

    PreparedEGN = Trim(EGN)
    
    If Len(PreparedEGN) = 9 Then
        PreparedEGN = "0" & PreparedEGN
    ElseIf Len(PreparedEGN) <> 10 Then
        Exit Function
    End If

    If Not IsNumeric(PreparedEGN) Then
        Exit Function
    End If

    If Not checksumOnly Then
        Month = CInt(Mid(PreparedEGN, 3, 2))
        If (Month = 0) Or (Month > 52) Then
            Exit Function
        End If
                
        If (Month = 2) Then
            MaxDays = 29
        Else
            MaxDays = 31
        End If
                
        day = CInt(Mid(PreparedEGN, 5, 2))
    
        If (day = 0) Or (day > MaxDays) Then
            Exit Function
        End If
    End If

    Heights = Array(2, 4, 8, 5, 10, 9, 7, 3, 6)

    CheckSum = 0
    For I = 1 To 9
        CheckSum = CheckSum + CInt(Mid(PreparedEGN, I, 1)) * Heights(I - 1)
    Next
    
    CheckDigit = CheckSum Mod 11
            
    If (CheckDigit = 10) Then
        CheckDigit = 0
    End If

    IsValidEGN = (CheckDigit = CInt(Mid(PreparedEGN, 10, 1)))

ErrorLabel:
    Exit Function
    
End Function

Public Function IsValidName(name) As Boolean

    On Error GoTo ErrorLabel
    Err.Clear

    Dim PreparedName As String
    Dim Names() As String
    Dim I, L As Integer

    Const AllowedChars As String = " -|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|"

    IsValidName = False

    If IsEmpty(name) Or IsNull(name) Then
        Exit Function
    End If

    PreparedName = Trim(name)
    While InStr(1, PreparedName, "  ") > 0
        PreparedName = Replace(PreparedName, "  ", " ")
    Wend
    
    Names = Split(PreparedName)

    If UBound(Names) < 2 Then
        Exit Function
    End If

    IsValidName = True

    L = Len(PreparedName)
    For I = 1 To L
        If InStr(1, AllowedChars, LCase(Mid(PreparedName, I, 1))) = 0 Then
            IsValidName = False
            I = L + 1
        End If
    Next

ErrorLabel:
    Exit Function

End Function

Public Function IsValidPositivInteger(Number, Digits) As Boolean

    On Error GoTo ErrorLabel
    Err.Clear

    Dim PreparedNumberStr As String
    Dim PreparedNumber As Long
    Dim NewNumberStr As String

    IsValidPositivInteger = False

    If IsEmpty(Number) Or IsNull(Number) Or IsEmpty(Digits) Or IsNull(Digits) Then
        Exit Function
    End If

    PreparedNumberStr = Trim(Number)

    If (Digits > 0) And (Len(PreparedNumberStr) <> Digits) Then
        Exit Function
    End If

    If Not IsNumeric(PreparedNumber) Then
        Exit Function
    End If

    PreparedNumber = CLng(PreparedNumberStr)
    NewNumberStr = CStr(PreparedNumber)
    While (Len(NewNumberStr) < Digits)
        NewNumberStr = "0" & NewNumberStr
    Wend
    If NewNumberStr <> PreparedNumberStr Then
        Exit Function
    End If

    IsValidPositivInteger = (PreparedNumber >= 0)

ErrorLabel:
    Exit Function
    
End Function

Attribute VB_Name = "XMLExportModule"
'------------------------------------------------------------------------------
'
' XML Export Module
'
'------------------------------------------------------------------------------

'Option Explicit

Private Const STR_XML_VERSION = "C1"
Private Const STR_NODE_XML_VERSION = "ExportVersion"

Private Const STR_NODE_REGIONAL_SETTINGS = "RegionalSettings"
Private Const STR_NODE_DECIMAL_SEPARATOR = "DecimalSeparator"
Private Const STR_NODE_DATE_FORMAT = "DateFormat"

Private Const STR_NODE_PERSON = "PublicPerson"
Private Const STR_NODE_PERSONAL = "Personal"
Private Const STR_NODE_SPOSE = "Spouse"
Private Const STR_NODE_CHILDREN = "Children"
Private Const STR_NODE_DECLARATION_DATA = "DeclarationData"
Private Const STR_NODE_TABLES = "Tables"

Private Const STR_NODE_NAME = "Name"
Private Const STR_NODE_WORK = "Work"
Private Const STR_NODE_POSITION = "Position"
Private Const STR_NODE_WORK_CODE = "WorkCode"
Private Const STR_NODE_EGN = "EGN"
Private Const STR_NODE_PASSPORT_NUMBER = "PassportNumber"
Private Const STR_NODE_PASSPORT_DATA = "PassportData"
Private Const STR_NODE_ADDRESS = "Address"
Private Const STR_NODE_PHONE = "Phone"

Private Const STR_NODE_CITIZENSHIP = "Citizenship"
Private Const STR_NODE_DIVORCED = "Divorced"
Private Const STR_NODE_PARTED = "Parted"
Private Const STR_NODE_PARTNERONLY = "PartnerOnly"
Private Const STR_NODE_HIDEEGN = "HideEGN"

Private Const STR_NODE_NOPARENTALRIGHTS = "NoParentalRights"

Private Const STR_NODE_YEAR = "Year"
Private Const STR_NODE_ACT_NUMBER = "ActNumber"
Private Const STR_NODE_ACT_DATA = "ActData"

Private Const STR_NODE_ENTRY_NUMBER = "EntryNumber"
Private Const STR_NODE_ENTRY_DATE = "EntryDate"
Private Const STR_NODE_REVERSAL = "ReversalDeclaration"
Private Const STR_NODE_HASH = "ControlHash"
Private Const STR_NODE_CONCLUSION = "NAOConclusion"
Private Const STR_NODE_DECLARATION_TYPE = "DeclarationType"
Private Const STR_NODE_DECLARATION_DATE = "DeclarationDate"
Private Const STR_NODE_AGREEMENT_DATE = "AgreementDate"

Private Const STR_NODE_TABLE = "Table"
Private Const STR_NODE_ROW = "Row"
Private Const STR_NODE_CELL = "Cell"
Private Const STR_ATTR_NUM = "Num"
Private Const STR_ATTR_PARENT = "Parent"
Private Const STR_ATTR_DESCRIPTION = "Description"
Private Const STR_ATTR_DECLARED = "Declared"
Private Const STR_ATTR_DISABLED = "Disabled"

Private Const STR_TRUE = "True"
Private Const STR_FALSE = "False"

Private Const STR_TYPE_1 = "Entry"
Private Const STR_TYPE_2 = "Annualy"
Private Const STR_TYPE_3 = "Vacate"

Private Const STR_NODE_TABLE_PREFIX = "Table_"
Private Const STR_NODE_STATUS = "Status"
Private Const STR_STATUS_1 = "Declared"
Private Const STR_STATUS_2 = "Undeclared"
Private Const STR_STATUS_3 = "Inaccessible"

Public Sub XML_ExportUI()

    On Error Resume Next
    Err.Clear

    Dim Filter As String
    Dim Flags As Long
    Dim fileName As String
   
    Filter = thAddFilterItem(Filter, "XML Files (*.xml)", "*.xml")
    Filter = thAddFilterItem(Filter, "All Files (*.*)", "*.*")
    Flags = thOFN_OVERWRITEPROMPT Or thOFN_PATHMUSTEXIST
    
    fileName = ThisWorkbook.name
    fileName = Left(fileName, Len(fileName) - 4) & ".xml"
    ' ActiveWorkbook.Path -- current .XLS path
    ' Application.DefaultFilePath -- My Documents folder
    fileName = thCommonFileOpenSave(InitialDir:=ActiveWorkbook.Path, Filter:=Filter, FilterIndex:=1, Flags:=Flags, OpenFile:=False, _
                                    DialogTitle:="|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd| |fffd| |fffd||fffd||fffd| |fffd||fffd| .XML |fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd|", fileName:=fileName)

    If Not IsNull(fileName) Then
        fileName = TrimNull(fileName)
    Else
        Exit Sub
    End If

    If (fileName <> "") Then

        Err.Clear

        XML_Export (fileName)
        
        If Err.Number <> 0 Then
            MsgBox "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd| .XML!" & vbCrLf & vbCrLf & Err.Description & " (" & Err.Number & ")", _
                    vbCritical + vbOKOnly, "|fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd|", "", 0
        End If

    End If

End Sub

Public Sub XML_Export(FullFileName As String)

    Dim partialFlag As Boolean
    Dim R As Integer
    Dim XMLDocObj, XMLRoot, XMLNode

    partialFlag = Not Sheet3.btnOption2.value

    If IsEmpty(TC1) Then
        Initialize_TableStructure
    End If

    Set XMLDocObj = CreateObject("Microsoft.XMLDOM")
    XMLDocObj.async = False
    
    Set XMLNode = XMLDocObj.createProcessingInstruction("xml", " version=""1.0"" encoding=""UTF-8"" standalone=""yes""")
    XMLDocObj.appendChild (XMLNode)
    
    Set XMLRoot = XMLDocObj.createElement(STR_NODE_PERSON)
    XMLDocObj.appendChild (XMLRoot)
    
    ' Version
    XMLRoot.appendChild (NewDataNode(XMLDocObj, STR_NODE_XML_VERSION, STR_XML_VERSION))
    
    ' Regional Settings
    Set XMLNode = XMLDocObj.createElement(STR_NODE_REGIONAL_SETTINGS)
    XMLRoot.appendChild (XMLNode)
    XMLNode.appendChild (NewDataNode(XMLDocObj, STR_NODE_DECIMAL_SEPARATOR, Application.DecimalSeparator))
    XMLNode.appendChild (NewDataNode(XMLDocObj, STR_NODE_DATE_FORMAT, FORMAT_INTERNAL_DATE))

    ' Personal
    Set XMLNode = XMLDocObj.createElement(STR_NODE_PERSONAL)
    XMLRoot.appendChild (XMLNode)
    XMLNode.appendChild (NewDataNode(XMLDocObj, STR_NODE_NAME, Trim(Sheet1.Range("Name").text)))
    XMLNode.appendChild (NewDataNode(XMLDocObj, STR_NODE_WORK, Trim(Sheet1.Range("Work").text)))
    XMLNode.appendChild (NewDataNode(XMLDocObj, STR_NODE_POSITION, Trim(Sheet1.Range("Position").text)))
    XMLNode.appendChild (NewDataNode(XMLDocObj, STR_NODE_WORK_CODE, Trim(Sheet1.Range("Code1").text & _
                                                                    Trim(Sheet1.Range("Code2").text) & _
                                                                    Trim(Sheet1.Range("Code3").text))))

    XMLNode.appendChild (NewDataNode(XMLDocObj, STR_NODE_EGN, Trim(Sheet2.Range("EGN").text)))
    XMLNode.appendChild (NewDataNode(XMLDocObj, STR_NODE_PASSPORT_NUMBER, Trim(Sheet2.Range("LKN").text)))
    XMLNode.appendChild (NewDataNode(XMLDocObj, STR_NODE_PASSPORT_DATA, Trim(Sheet2.Range("LKD").text)))
    XMLNode.appendChild (NewDataNode(XMLDocObj, STR_NODE_ADDRESS, Trim(Sheet2.Range("Address").text)))
    XMLNode.appendChild (NewDataNode(XMLDocObj, STR_NODE_PHONE, Trim(Sheet2.Range("Phone").text)))

    ' Spouse/Partner
    Set XMLNode = XMLDocObj.createElement(STR_NODE_SPOSE)
    XMLRoot.appendChild (XMLNode)
    XMLNode.appendChild (NewDataNode(XMLDocObj, STR_NODE_NAME, Trim(Sheet2.Range("Spouse").text)))
    XMLNode.appendChild (NewDataNode(XMLDocObj, STR_NODE_EGN, Trim(Sheet2.Range("SpouseEGN").text)))
    XMLNode.appendChild (NewDataNode(XMLDocObj, STR_NODE_CITIZENSHIP, Trim(Sheet2.Range("SpouseCitizenship").text)))
    XMLNode.appendChild (NewDataNode(XMLDocObj, STR_NODE_DIVORCED, Bool2Str(Sheet2.Range("Divorced").value = STR_Marked)))
    XMLNode.appendChild (NewDataNode(XMLDocObj, STR_NODE_PARTED, Bool2Str(Sheet2.Range("Parted").value = STR_Marked)))
    XMLNode.appendChild (NewDataNode(XMLDocObj, STR_NODE_PARTNERONLY, Bool2Str(Sheet2.Range("PartnerOnly").value = STR_Marked)))
    XMLNode.appendChild (NewDataNode(XMLDocObj, STR_NODE_HIDEEGN, Trim(Sheet2.Range("HideEGN").text)))

    ' Children
    Set XMLNode = NewDataTableNode_OldManner(XMLDocObj, "0", False, False, _
                                             Sheet2.Range("Table0"), TC0, TCN0, _
                                             STR_NODE_CHILDREN, True)
    XMLNode.setAttribute STR_NODE_NOPARENTALRIGHTS, Bool2Str(Sheet2.Range("NoParentalRights").value = STR_Marked)
    XMLRoot.appendChild (XMLNode)

    ' Declaration Fields
    Set XMLNode = XMLDocObj.createElement(STR_NODE_DECLARATION_DATA)
    XMLRoot.appendChild (XMLNode)
    XMLNode.appendChild (NewDataNode(XMLDocObj, STR_NODE_ENTRY_NUMBER, Trim(Sheet1.Range("EntryNumber").text)))
    XMLNode.appendChild (NewDataNode(XMLDocObj, STR_NODE_ENTRY_DATE, Trim(Sheet1.Range("EntryDate").text)))

    XMLNode.appendChild (NewDataNode(XMLDocObj, STR_NODE_REVERSAL, Bool2Str(Sheet1.Range("Reversal").value = STR_Marked)))

    If Sheet3.btnOption1.value Then
        XMLNode.appendChild (NewDataNode(XMLDocObj, STR_NODE_DECLARATION_TYPE, STR_TYPE_1))
        XMLNode.appendChild (NewDataNode(XMLDocObj, STR_NODE_ACT_NUMBER, Trim(Sheet3.Range("Primary11").text)))
        XMLNode.appendChild (NewDataNode(XMLDocObj, STR_NODE_ACT_DATA, Trim(Sheet3.Range("Primary12").text)))
        XMLNode.appendChild (NewDataNode(XMLDocObj, STR_NODE_YEAR, "20" & Trim(Sheet3.Range("Primary13").text)))
    ElseIf Sheet3.btnOption2.value Then
        XMLNode.appendChild (NewDataNode(XMLDocObj, STR_NODE_DECLARATION_TYPE, STR_TYPE_2))
        XMLNode.appendChild (NewDataNode(XMLDocObj, STR_NODE_YEAR, "20" & Trim(Sheet3.Range("Primary21").text)))
    Else
        XMLNode.appendChild (NewDataNode(XMLDocObj, STR_NODE_DECLARATION_TYPE, STR_TYPE_3))
        XMLNode.appendChild (NewDataNode(XMLDocObj, STR_NODE_ACT_NUMBER, Trim(Sheet3.Range("Primary31").text)))
        XMLNode.appendChild (NewDataNode(XMLDocObj, STR_NODE_ACT_DATA, Trim(Sheet3.Range("Primary32").text)))
        XMLNode.appendChild (NewDataNode(XMLDocObj, STR_NODE_YEAR, "20" & Trim(Sheet3.Range("Primary33").text)))
    End If

    XMLNode.appendChild (NewDataNode(XMLDocObj, STR_NODE_DECLARATION_DATE, Trim(Sheet8.Range("Date8_1").text)))

    Dim arrConclusion As Variant
    arrConclusion = Sheet1.Range("Conclusion").value
    If IsArray(arrConclusion) Then
        XMLNode.appendChild (NewDataNode(XMLDocObj, STR_NODE_CONCLUSION, Trim(arrConclusion(1, 1))))
    Else
        XMLNode.appendChild (NewDataNode(XMLDocObj, STR_NODE_HASH, Sheet1.Range("Conclusion").text))
    End If
    XMLNode.appendChild (NewDataNode(XMLDocObj, STR_NODE_HASH, Sheet1.Range("Hash").text))

    ' Declaration Tables
    Set XMLNode = XMLDocObj.createElement(STR_NODE_TABLES)
    XMLRoot.appendChild (XMLNode)
    
    Dim xmlTable1Node, xmlTable1_1Node, xmlTable1_2Node, xmlTable2Node, _
        xmlTable3Node, xmlTable3_1Node, xmlTable4Node, xmlTable5NNode, xmlTable6NNode, xmlTable5Node, _
        xmlTable6Node, xmlTable7Node, xmlTable8Node, xmlTable9Node, _
        xmlTable12NNode, xmlTable10Node, xmlTable11Node, xmlTable12Node, _
        xmlTable13Node, xmlTable14Node, _
        xmlTable15Node

    Set xmlTable1Node = XMLNode.appendChild(XMLDocObj.createElement(STR_NODE_TABLE))
    Set xmlTable1_1Node = XMLNode.appendChild(XMLDocObj.createElement(STR_NODE_TABLE))
    Set xmlTable1_2Node = XMLNode.appendChild(XMLDocObj.createElement(STR_NODE_TABLE))
    Set xmlTable2Node = XMLNode.appendChild(XMLDocObj.createElement(STR_NODE_TABLE))

    Set xmlTable3Node = XMLNode.appendChild(XMLDocObj.createElement(STR_NODE_TABLE))
    Set xmlTable3_1Node = XMLNode.appendChild(XMLDocObj.createElement(STR_NODE_TABLE))
    Set xmlTable4Node = XMLNode.appendChild(XMLDocObj.createElement(STR_NODE_TABLE))
    Set xmlTable5NNode = XMLNode.appendChild(XMLDocObj.createElement(STR_NODE_TABLE))
    Set xmlTable6NNode = XMLNode.appendChild(XMLDocObj.createElement(STR_NODE_TABLE))
    Set xmlTable5Node = XMLNode.appendChild(XMLDocObj.createElement(STR_NODE_TABLE))

    Set xmlTable6Node = XMLNode.appendChild(XMLDocObj.createElement(STR_NODE_TABLE))
    Set xmlTable7Node = XMLNode.appendChild(XMLDocObj.createElement(STR_NODE_TABLE))
    Set xmlTable8Node = XMLNode.appendChild(XMLDocObj.createElement(STR_NODE_TABLE))
    Set xmlTable9Node = XMLNode.appendChild(XMLDocObj.createElement(STR_NODE_TABLE))

    Set xmlTable12NNode = XMLNode.appendChild(XMLDocObj.createElement(STR_NODE_TABLE))
    Set xmlTable10Node = XMLNode.appendChild(XMLDocObj.createElement(STR_NODE_TABLE))
    Set xmlTable11Node = XMLNode.appendChild(XMLDocObj.createElement(STR_NODE_TABLE))
    Set xmlTable12Node = XMLNode.appendChild(XMLDocObj.createElement(STR_NODE_TABLE))

    Set xmlTable13Node = XMLNode.appendChild(XMLDocObj.createElement(STR_NODE_TABLE))
    Set xmlTable14Node = XMLNode.appendChild(XMLDocObj.createElement(STR_NODE_TABLE))

    Set xmlTable15Node = XMLNode.appendChild(XMLDocObj.createElement(STR_NODE_TABLE))

    isNotAnnualDeclaration = Not Sheet3.btnOption2.value

    ' Sheet 3

    ' ************************************************************************************************************************

    table1Num = "1"
    table1Desc = "|fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd|"
    isTable1Declared = Sheet3.Range("NothingT1").value <> STR_Marked
    isTable1Disabled = False
    Set table1Range = Sheet3.Range("Table1")

    table1CellDescs = Array(Array("|fffd||fffd||fffd|. |fffd||fffd| |fffd||fffd||fffd|", "", False), _
                            Array("|fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd| /|fffd||fffd||fffd||fffd||fffd||fffd||fffd|/", "", False), _
                            Array("|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|", "", False), _
                            Array("|fffd||fffd||fffd||fffd||fffd||fffd|", "", False), _
                            Array("|fffd||fffd||fffd||fffd| |fffd||fffd|.|fffd|.", "", False), _
                            Array("|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd| - |fffd||fffd|.|fffd|.", "", False), _
                            Array("|fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|", "", False), _
                            Array("|fffd||fffd||fffd|: |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|, |fffd||fffd||fffd||fffd||fffd||fffd|, |fffd||fffd||fffd||fffd||fffd||fffd||fffd|", "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|", False), _
                            Array("|fffd||fffd||fffd|", "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|", False), _
                            Array("|fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd|", "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|", False), _
                            Array("|fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| /|fffd||fffd||fffd||fffd|/", "", False), _
                            Array("|fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|", "", isNotAnnualDeclaration), _
                            Array("|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|", "", isNotAnnualDeclaration))

    FillTableNodeWithData table1Num, table1Desc, _
                           isTable1Declared, isTable1Disabled, _
                           XMLDocObj, xmlTable1Node, _
                           table1Range, TC1, table1CellDescs, "", 0

    ' ************************************************************************************************************************

    table1_1Num = "1.1"
    table1_1Desc = "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd| |fffd| |fffd||fffd||fffd||fffd|"
    isTable1_1Declared = Sheet3.Range("NothingT1_1").value <> STR_Marked
    isTable1_1Disabled = False
    Set table1_1Range = Sheet3.Range("Table1_1")

    table1_1CellDescs = Array(Array("|fffd||fffd||fffd|. |fffd||fffd| |fffd||fffd||fffd|", "", False), _
                              Array("|fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd| /|fffd||fffd||fffd||fffd||fffd||fffd||fffd|/", "", False), _
                              Array("|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|", "", False), _
                              Array("|fffd||fffd||fffd||fffd||fffd||fffd|", "", False), _
                              Array("|fffd||fffd||fffd||fffd| /|fffd||fffd||fffd||fffd||fffd||fffd|/", "", False), _
                              Array("|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd| /|fffd||fffd|.|fffd|./", "", False), _
                              Array("|fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|", "", False), _
                              Array("|fffd||fffd||fffd|: |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|, |fffd||fffd||fffd||fffd||fffd||fffd|, |fffd||fffd||fffd||fffd||fffd||fffd||fffd|", "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|", False), _
                              Array("|fffd||fffd||fffd|", "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|", False), _
                              Array("|fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd|", "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|", False), _
                              Array("|fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| /|fffd||fffd||fffd||fffd|/", "", False), _
                              Array("|fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|", "", isNotAnnualDeclaration), _
                              Array("|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|", "", isNotAnnualDeclaration))

    FillTableNodeWithData table1_1Num, table1_1Desc, _
                          isTable1_1Declared, isTable1_1Disabled, _
                          XMLDocObj, xmlTable1_1Node, _
                          table1_1Range, TC1_1, table1_1CellDescs, "", 0

    ' ************************************************************************************************************************

    table1_2Num = "1.2" '2018.05: added
    table1_2Desc = "|fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|"
    isTable1_2Declared = Sheet3.Range("NothingT1_2").value <> STR_Marked
    isTable1_2Disabled = False
    Set table1_2Range = Sheet3.Range("Table1_2")

    table1_2CellDescs = Array(Array("|fffd||fffd||fffd|. |fffd||fffd| |fffd||fffd||fffd|", "", False), _
                              Array("|fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd| /|fffd||fffd||fffd||fffd||fffd||fffd||fffd|/", "", False), _
                              Array("|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|", "", False), _
                              Array("|fffd||fffd||fffd||fffd||fffd||fffd|", "", False), _
                              Array("|fffd||fffd||fffd||fffd| /|fffd||fffd||fffd||fffd||fffd||fffd|/", "", False), _
                              Array("|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd| /|fffd||fffd|.|fffd|./", "", False), _
                              Array("|fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|", "", False), _
                              Array("|fffd||fffd||fffd|: |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|, |fffd||fffd||fffd||fffd||fffd||fffd|, |fffd||fffd||fffd||fffd||fffd||fffd||fffd|", "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|", False), _
                              Array("|fffd||fffd||fffd|", "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|", False), _
                              Array("|fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd|", "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|", False), _
                              Array("|fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| /|fffd||fffd||fffd||fffd|/", "", False), _
                              Array("|fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|", "", isNotAnnualDeclaration), _
                              Array("|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|", "", isNotAnnualDeclaration))

    FillTableNodeWithData table1_2Num, table1_2Desc, _
                          isTable1_2Declared, isTable1_2Disabled, _
                          XMLDocObj, xmlTable1_2Node, _
                          table1_2Range, TC1_2, table1_2CellDescs, "", 0

    ' ************************************************************************************************************************

    table2Num = "2"
    table2Desc = "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd|"
    isTable2Declared = Sheet3.Range("NothingT2").value <> STR_Marked
    isTable2Disabled = isNotAnnualDeclaration
    Set table2Range = Sheet3.Range("Table2")

    table2CellDescs = Array(Array("|fffd||fffd||fffd|. |fffd||fffd| |fffd||fffd||fffd|", "", False), _
                            Array("|fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd|", "", False), _
                            Array("|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|", "", False), _
                            Array("|fffd||fffd||fffd||fffd||fffd||fffd|", "", False), _
                            Array("|fffd||fffd||fffd||fffd| |fffd||fffd|.|fffd|. /|fffd||fffd||fffd||fffd||fffd||fffd|/", "", False), _
                            Array("|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd| - |fffd||fffd|.|fffd|.", "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|", False), _
                            Array("|fffd||fffd||fffd|: |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|, |fffd||fffd||fffd||fffd||fffd||fffd|, |fffd||fffd||fffd||fffd||fffd||fffd||fffd|", "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|", False), _
                            Array("|fffd||fffd||fffd|", "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|", False), _
                            Array("|fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd|", "", False), _
                            Array("|fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| /|fffd||fffd||fffd||fffd|/", "", False), _
                            Array("|fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd|", "", False))

    FillTableNodeWithData table2Num, table2Desc, _
                          isTable2Declared, isTable2Disabled, _
                          XMLDocObj, xmlTable2Node, _
                          table2Range, TC2, table2CellDescs, "", 0

    ' Sheet 4

    ' ************************************************************************************************************************

    table3Num = "3"
    table3Desc = "|fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|"
    isTable3Declared = Sheet4.Range("NothingT3").value <> STR_Marked
    isTable3Disabled = False
    Set table3Range = Sheet4.Range("Table3")

    table3CellDescs = Array(Array("|fffd||fffd||fffd|. |fffd||fffd| |fffd||fffd||fffd|", "", False), _
                            Array("|fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|", "", False), _
                            Array("|fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|", "", False), _
                            Array("|fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| /|fffd||fffd|./", "", False), _
                            Array("|fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|", "", False), _
                            Array("|fffd||fffd||fffd|: |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|, |fffd||fffd||fffd||fffd||fffd||fffd|, |fffd||fffd||fffd||fffd||fffd||fffd||fffd|", "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|", False), _
                            Array("|fffd||fffd||fffd|", "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|", False), _
                            Array("|fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd|", "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|", False), _
                            Array("|fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|", "", isNotAnnualDeclaration), _
                            Array("|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|", "", isNotAnnualDeclaration))

    FillTableNodeWithData table3Num, table3Desc, _
                          isTable3Declared, isTable3Disabled, _
                          XMLDocObj, xmlTable3Node, _
                          table3Range, TC3, table3CellDescs, "", 0

    ' ************************************************************************************************************************

    table3_1Num = "3.1"
    table3_1Desc = "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd|"
    isTable3_1Declared = Sheet4.Range("NothingT3_1").value <> STR_Marked
    isTable3_1Disabled = False
    Set table3_1Range = Sheet4.Range("Table3_1")

    table3_1CellDescs = Array(Array("|fffd||fffd||fffd|. |fffd||fffd| |fffd||fffd||fffd|", "", False), _
                              Array("|fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd|", "", False), _
                              Array("|fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|", "", False), _
                              Array("|fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| /|fffd||fffd|./", "", False), _
                              Array("|fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|", "", False), _
                              Array("|fffd||fffd||fffd|: |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|, |fffd||fffd||fffd||fffd||fffd||fffd|, |fffd||fffd||fffd||fffd||fffd||fffd||fffd|", "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|", False), _
                              Array("|fffd||fffd||fffd|", "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|", False), _
                              Array("|fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd|", "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|", False), _
                              Array("|fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|", "", isNotAnnualDeclaration), _
                              Array("|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|", "", isNotAnnualDeclaration))

    FillTableNodeWithData table3_1Num, table3_1Desc, _
                          isTable3_1Declared, isTable3_1Disabled, _
                          XMLDocObj, xmlTable3_1Node, _
                          table3_1Range, TC3_1, table3_1CellDescs, "", 0

    ' ************************************************************************************************************************

    table4Num = "3.2" '2018.05: prev "4"
    table4Desc = "|fffd||fffd||fffd||fffd||fffd| |fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|"
    isTable4Declared = Sheet4.Range("NothingT4").value <> STR_Marked
    isTable4Disabled = False
    Set table4Range = Sheet4.Range("Table4")

    table4CellDescs = Array(Array("|fffd||fffd||fffd|. |fffd||fffd| |fffd||fffd||fffd|", "", False), _
                            Array("|fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|", "", False), _
                            Array("|fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|", "", False), _
                            Array("|fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| /|fffd||fffd|./", "", False), _
                            Array("|fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|", "", False), _
                            Array("|fffd||fffd||fffd|: |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|, |fffd||fffd||fffd||fffd||fffd||fffd|, |fffd||fffd||fffd||fffd||fffd||fffd||fffd|", "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|", False), _
                            Array("|fffd||fffd||fffd|", "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|", False), _
                            Array("|fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd|", "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|", False), _
                            Array("|fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|", "", isNotAnnualDeclaration), _
                            Array("|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|", "", isNotAnnualDeclaration))

    FillTableNodeWithData table4Num, table4Desc, _
                          isTable4Declared, isTable4Disabled, _
                          XMLDocObj, xmlTable4Node, _
                          table4Range, TC4, table4CellDescs, "", 0

    ' ************************************************************************************************************************

    table5NNum = "3.3" '2018.05: added
    table5NDesc = "|fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|, |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd|"
    isTable5N = Sheet4.Range("NothingT5N").value <> STR_Marked
    isTable5NDisabled = False
    Set table5NRange = Sheet4.Range("Table5N")

    table5NCellDescs = Array(Array("|fffd||fffd||fffd|. |fffd||fffd| |fffd||fffd||fffd|", "", False), _
                            Array("|fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|", "", False), _
                            Array("|fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|", "", False), _
                            Array("|fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| /|fffd||fffd|./", "", False), _
                            Array("|fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|", "", False), _
                            Array("|fffd||fffd||fffd|: |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|, |fffd||fffd||fffd||fffd||fffd||fffd|, |fffd||fffd||fffd||fffd||fffd||fffd||fffd|", "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|", False), _
                            Array("|fffd||fffd||fffd|", "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|", False), _
                            Array("|fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd|", "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|", False), _
                            Array("|fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|", "", isNotAnnualDeclaration), _
                            Array("|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|", "", isNotAnnualDeclaration))

    FillTableNodeWithData table5NNum, table5NDesc, _
                          isTable5NDeclared, isTable5NDisabled, _
                          XMLDocObj, xmlTable5NNode, _
                          table5NRange, TC5N, table5NCellDescs, "", 0

    ' ************************************************************************************************************************

    table6NNum = "3.4" '2018.05: added
    table6NDesc = "|fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|, |fffd||fffd||fffd||fffd||fffd| |fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd| 10000 |fffd||fffd||fffd||fffd|"
    isTable6NDeclared = Sheet4.Range("NothingT6N").value <> STR_Marked
    isTable6NDisabled = False
    Set table6NRange = Sheet4.Range("Table6N")

    table6NCellDescs = Array(Array("|fffd||fffd||fffd|. |fffd||fffd| |fffd||fffd||fffd|", "", False), _
                             Array("|fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|", "", False), _
                             Array("|fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|", "", False), _
                             Array("|fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| /|fffd||fffd|./", "", False), _
                             Array("|fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|", "", False), _
                             Array("|fffd||fffd||fffd|: |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|, |fffd||fffd||fffd||fffd||fffd||fffd|, |fffd||fffd||fffd||fffd||fffd||fffd||fffd|", "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|", False), _
                             Array("|fffd||fffd||fffd|", "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|", False), _
                             Array("|fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd|", "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|", False), _
                             Array("|fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|", "", isNotAnnualDeclaration), _
                             Array("|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|", "", isNotAnnualDeclaration))

    FillTableNodeWithData table6NNum, table6NDesc, _
                          isTable6NDeclared, isTable6NDisabled, _
                          XMLDocObj, xmlTable6NNode, _
                          table6NRange, TC6N, table6NCellDescs, "", 0

    ' ************************************************************************************************************************

    table5Num = "3.5" '2018.05: prev "5"
    table5Desc = "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|, |fffd||fffd||fffd||fffd||fffd| |fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd|"
    isTable5Declared = Sheet4.Range("NothingT5").value <> STR_Marked
    isTable5Disabled = isNotAnnualDeclaration
    Set table5Range = Sheet4.Range("Table5")

    table5CellDescs = Array(Array("|fffd||fffd||fffd|. |fffd||fffd| |fffd||fffd||fffd|", "", False), _
                            Array("|fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|", "", False), _
                            Array("|fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|", "", False), _
                            Array("|fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| /|fffd||fffd|./", "", False), _
                            Array("|fffd||fffd||fffd|: |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|, |fffd||fffd||fffd||fffd||fffd||fffd|, |fffd||fffd||fffd||fffd||fffd||fffd||fffd|", "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|", False), _
                            Array("|fffd||fffd||fffd|", "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|", False), _
                            Array("|fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd|", "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|", False), _
                            Array("|fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|", "", False))

    FillTableNodeWithData table5Num, table5Desc, _
                          isTable5Declared, isTable5Disabled, _
                          XMLDocObj, xmlTable5Node, _
                          table5Range, TC5, table5CellDescs, "", 0

    ' Sheet 5

    ' ************************************************************************************************************************
    
    table6Num = "4" '2018.05: prev "6"
    table6Desc = "|fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|"
    isTable6Declared = Sheet5.Range("NothingT6").value <> STR_Marked
    isTable6Disabled = False
    Set table6Range = Sheet5.Range("Table6")

    table6CellDescs = Array(Array("|fffd||fffd||fffd|. |fffd||fffd| |fffd||fffd||fffd|", "", False), _
                            Array("|fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|", "", False), _
                            Array("|fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|", "", False), _
                            Array("|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd| |fffd||fffd|.", "", False), _
                            Array("|fffd||fffd||fffd|: |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|, |fffd||fffd||fffd||fffd||fffd||fffd|, |fffd||fffd||fffd||fffd||fffd||fffd||fffd|", "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|", False), _
                            Array("|fffd||fffd||fffd|", "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|", False), _
                            Array("|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|", "", isNotAnnualDeclaration))

    FillTableNodeWithData table6Num, table6Desc, _
                          isTable6Declared, isTable6Disabled, _
                          XMLDocObj, xmlTable6Node, _
                          table6Range, TC6, table6CellDescs, "", 0

    ' ************************************************************************************************************************

    table7Num = "5" '2018.05: prev "7"
    table7Desc = "|fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| /|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|/"
    isTable7Declared = Sheet5.Range("NothingT7").value <> STR_Marked
    isTable7Disabled = False
    Set table7Range = Sheet5.Range("Table7")

    table7CellDescs = Array(Array("|fffd||fffd||fffd|. |fffd||fffd| |fffd||fffd||fffd|", "", False), _
                            Array("|fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|", "", False), _
                            Array("|fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|", "", False), _
                            Array("|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd| |fffd||fffd|.", "", False), _
                            Array("|fffd||fffd||fffd|: |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|, |fffd||fffd||fffd||fffd||fffd||fffd|, |fffd||fffd||fffd||fffd||fffd||fffd||fffd|", "|fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd|", False), _
                            Array("|fffd||fffd||fffd|", "|fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd|", False), _
                            Array("|fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|", "", False), _
                            Array("|fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd|", "", False), _
                            Array("|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|", "", isNotAnnualDeclaration))

    FillTableNodeWithData table7Num, table7Desc, _
                          isTable7Declared, isTable7Disabled, _
                          XMLDocObj, xmlTable7Node, _
                          table7Range, TC7, table7CellDescs, "", 0

    ' ************************************************************************************************************************

    table8Num = "6" '2018.05: prev "8"
    table8Desc = "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd| 10000 |fffd||fffd||fffd||fffd|"
    isTable8Declared = Sheet5.Range("NothingT8").value <> STR_Marked
    isTable8Disabled = False
    Set table8Range = Sheet5.Range("Table8")

    table8CellDescs = Array(Array("|fffd||fffd||fffd|. |fffd||fffd| |fffd||fffd||fffd|", "", False), _
                            Array("|fffd||fffd||fffd|  |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|", "", False), _
                            Array("|fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|", "", False), _
                            Array("|fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|", "", False), _
                            Array("|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd| |fffd||fffd|.", "", False), _
                            Array("|fffd||fffd||fffd|: |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|, |fffd||fffd||fffd||fffd||fffd||fffd|, |fffd||fffd||fffd||fffd||fffd||fffd||fffd|", "|fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|", False), _
                            Array("|fffd||fffd||fffd|", "|fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|", False), _
                            Array("|fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|", "", False), _
                            Array("|fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd|", "", False), _
                            Array("|fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd|", "", False))

    FillTableNodeWithData table8Num, table8Desc, _
                          isTable8Declared, isTable8Disabled, _
                          XMLDocObj, xmlTable8Node, _
                          table8Range, TC8, table8CellDescs, "", 0

    ' ************************************************************************************************************************

    table9Num = "7" '2018.05: prev "9"
    table9Desc = "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd| 10000 |fffd||fffd||fffd||fffd|"
    isTable9Declared = Sheet5.Range("NothingT9").value <> STR_Marked
    isTable9Disabled = False
    Set table9Range = Sheet5.Range("Table9")
    
    table9CellDescs = Array(Array("|fffd||fffd||fffd|. |fffd||fffd| |fffd||fffd||fffd|", "", False), _
                            Array("|fffd||fffd||fffd|  |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|", "", False), _
                            Array("|fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|", "", False), _
                            Array("|fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|", "", False), _
                            Array("|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd| |fffd||fffd|.", "", False), _
                            Array("|fffd||fffd||fffd|: |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|, |fffd||fffd||fffd||fffd||fffd||fffd|, |fffd||fffd||fffd||fffd||fffd||fffd||fffd|", "|fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|", False), _
                            Array("|fffd||fffd||fffd|", "|fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|", False), _
                            Array("|fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|", "", False), _
                            Array("|fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd|", "", False), _
                            Array("|fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd|", "", False))

    FillTableNodeWithData table9Num, table9Desc, _
                          isTable9Declared, isTable9Disabled, _
                          XMLDocObj, xmlTable9Node, _
                          table9Range, TC9, table9CellDescs, "", 0

    ' Sheet 6

    ' ************************************************************************************************************************

    table12NNum = "8" '2018.05: prev "9"
    table12NDesc = "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|, |fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| 10000 |fffd||fffd|."
    isTable12NDeclared = Sheet6.Range("NothingT12N").value <> STR_Marked
    isTable12NDisabled = False
    Set table12NRange = Sheet6.Range("Table12N")

    table12NCellDescs = Array(Array("|fffd||fffd||fffd|. |fffd||fffd| |fffd||fffd||fffd|", "", False), _
                            Array("|fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|", "", False), _
                            Array("|fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|", "", False), _
                            Array("|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd| |fffd||fffd|.", "", False), _
                            Array("|fffd||fffd||fffd|: |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|, |fffd||fffd||fffd||fffd||fffd||fffd|, |fffd||fffd||fffd||fffd||fffd||fffd||fffd|", "|fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|", False), _
                            Array("|fffd||fffd||fffd|", "|fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|", False), _
                            Array("|fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|", "", False), _
                            Array("|fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd|", "", False), _
                            Array("|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|", "", isNotAnnualDeclaration))

    FillTableNodeWithData table12NNum, table12NDesc, _
                          isTable12NDeclared, isTable12NDisabled, _
                          XMLDocObj, xmlTable12NNode, _
                          table12NRange, TC12N, table12NCellDescs, "", 0

    table10Num = "9" '2018.05: prev "10"
    table10Desc = "|fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd|, |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd| |fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|, |fffd| |fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| /|fffd||fffd||fffd||fffd||fffd||fffd|/ |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|"
    isTable10Declared = Sheet6.Range("NothingT10").value <> STR_Marked
    isTable10Disabled = False
    Set table10Range = Sheet6.Range("Table10")

    table10CellDescs = Array(Array("|fffd||fffd||fffd|. |fffd||fffd| |fffd||fffd||fffd|", "", False), _
                             Array("|fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd|", "", False), _
                             Array("|fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd|", "", False), _
                             Array("|fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd|", "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd|. |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|", False), _
                             Array("|fffd|/|fffd||fffd||fffd| |fffd||fffd||fffd||fffd|", "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd|. |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|", False), _
                             Array("|fffd||fffd||fffd||fffd||fffd||fffd||fffd|", "", False), _
                             Array("|fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| /|fffd||fffd|./", "", False), _
                             Array("|fffd||fffd||fffd|: |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|, |fffd||fffd||fffd||fffd||fffd||fffd|, |fffd||fffd||fffd||fffd||fffd||fffd||fffd|", "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd|", False), _
                             Array("|fffd||fffd||fffd|", "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd|", False), _
                             Array("|fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|", "", isNotAnnualDeclaration), _
                             Array("|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|", "", isNotAnnualDeclaration))

    FillTableNodeWithData table10Num, table10Desc, _
                          isTable10Declared, isTable10Disabled, _
                          XMLDocObj, xmlTable10Node, _
                          table10Range, TC10, table10CellDescs, "", 0

    ' ************************************************************************************************************************

    table11Num = "10" '2018.05: prev "11"
    table11Desc = "|fffd||fffd||fffd||fffd||fffd||fffd| |fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|"
    isTable11Declared = Sheet6.Range("NothingT11").value <> STR_Marked
    isTable11Disabled = False
    Set table11Range = Sheet6.Range("Table11")

    table11CellDescs = Array(Array("|fffd||fffd||fffd|. |fffd||fffd| |fffd||fffd||fffd|", "", False), _
                             Array("|fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|", "", False), _
                             Array("|fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd|", "", False), _
                             Array("|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|", "", False), _
                             Array("|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|", "", False), _
                             Array("|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd|", "", False), _
                             Array("|fffd||fffd||fffd|: |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|, |fffd||fffd||fffd||fffd||fffd||fffd|, |fffd||fffd||fffd||fffd||fffd||fffd||fffd|", "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd|", False), _
                             Array("|fffd||fffd||fffd|", "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd|", False), _
                             Array("|fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|", "", isNotAnnualDeclaration), _
                             Array("|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|", "", isNotAnnualDeclaration))

    FillTableNodeWithData table11Num, table11Desc, _
                          isTable11Declared, isTable11Disabled, _
                          XMLDocObj, xmlTable11Node, _
                          table11Range, TC11, table11CellDescs, "", 0

    ' ************************************************************************************************************************

    table12Num = "11" '2018.05: prev "12"
    table12Desc = "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|"
    isTable12Declared = Sheet6.Range("NothingT12").value <> STR_Marked
    isTable12Disabled = isNotAnnualDeclaration
    Set table12Range = Sheet6.Range("Table12")

    table12CellDescs = Array(Array("|fffd||fffd||fffd|. |fffd||fffd| |fffd||fffd||fffd|", "", False), _
                             Array("|fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|", "", False), _
                             Array("|fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd|", "", False), _
                             Array("|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|", "", False), _
                             Array("|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|", "", False), _
                             Array("|fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| /|fffd||fffd|./", "", False), _
                             Array("|fffd||fffd||fffd|: |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|, |fffd||fffd||fffd||fffd||fffd||fffd|, |fffd||fffd||fffd||fffd||fffd||fffd||fffd|", "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|", False), _
                             Array("|fffd||fffd||fffd|", "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|", False), _
                             Array("|fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|", "", False))

    FillTableNodeWithData table12Num, table12Desc, _
                          isTable12Declared, isTable12Disabled, _
                          XMLDocObj, xmlTable12Node, _
                          table12Range, TC12, table12CellDescs, "", 0

    ' Sheet 7

    ' ************************************************************************************************************************

    table13Num = "12" '2018.05: prev "13"
    table13Desc = "|fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|, |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd|, |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd| |fffd||fffd||fffd| 1000 |fffd||fffd||fffd||fffd| |fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd|, |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd|"
    isTable13Declared = Sheet7.Range("NothingT13").value <> STR_Marked
    isTable13Disabled = isNotAnnualDeclaration
    Set table13Range = Sheet7.Range("Table13_1")

    table13CellDescs = Array(Array("|fffd||fffd||fffd|. |fffd||fffd| |fffd||fffd||fffd|", "", False), _
                             Array("|fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd| |fffd||fffd|", "", False), _
                             Array("|fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| /|fffd||fffd|./", "|fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd|", False), _
                             Array("|fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd|/|fffd||fffd| /|fffd||fffd|./", "|fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd|", False))

    lastRowT13_1 = FillTableNodeWithData( _
                            table13Num, table13Desc, _
                            isTable13Declared, isTable13Disabled, _
                            XMLDocObj, xmlTable13Node, _
                            table13Range, TC13, table13CellDescs, _
                            "I. |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd| |fffd||fffd|", 0)

    Set table13Range = Sheet7.Range("Table13_2")

    FillTableNodeWithData table13Num, table13Desc, _
                          isTable13Declared, isTable13Disabled, _
                          XMLDocObj, xmlTable13Node, _
                          table13Range, TC13, table13CellDescs, _
                          "II. |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd|, |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd| |fffd|. I.", lastRowT13_1

    ' ************************************************************************************************************************

    table14Num = "13" '2018.05: prev "14"
    table14Desc = "|fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd| |fffd| |fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|, |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| /|fffd||fffd||fffd||fffd||fffd||fffd||fffd|/, |fffd||fffd||fffd||fffd| |fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|" _
                  + " |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd| |fffd| |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|, |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|, |fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd| |fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|" _
                  + " |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|, |fffd| |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|"
    isTable14Declared = Sheet7.Range("NothingT14").value <> STR_Marked
    isTable14Disabled = isNotAnnualDeclaration
    Set table14Range = Sheet7.Range("Table14")

    table14CellDescs = Array(Array("|fffd||fffd||fffd|. |fffd||fffd| |fffd||fffd||fffd|", "", False), _
                             Array("|fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|", "", False), _
                             Array("|fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|", "", False), _
                             Array("|fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|", "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|", False), _
                             Array("|fffd| |fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|", "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|", False), _
                             Array("|fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd|/|fffd|, |fffd||fffd||fffd||fffd| |fffd||fffd||fffd| |fffd||fffd||fffd||fffd|. |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd|. |fffd||fffd||fffd||fffd|", "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|", False), _
                             Array("|fffd| |fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd|/|fffd|, |fffd||fffd||fffd||fffd| |fffd||fffd||fffd| |fffd||fffd||fffd||fffd|. |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd|. |fffd||fffd||fffd||fffd|", "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|", False))

     FillTableNodeWithData table14Num, table14Desc, _
                           isTable14Declared, isTable14Disabled, _
                           XMLDocObj, xmlTable14Node, _
                           table14Range, TC14, table14CellDescs, "", 0

    ' Sheet 8

    ' ************************************************************************************************************************

    table15Num = "14" '2018.05: prev "15"
    table15Desc = "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd| |fffd| |fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|, |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| /|fffd||fffd||fffd||fffd||fffd||fffd||fffd|/, |fffd||fffd||fffd||fffd| |fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|" _
                  + " |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd| |fffd| |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|, |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd| |fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|, |fffd| |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|"
    isTable15Declared = Sheet8.Range("NothingT15").value <> STR_Marked
    isTable15Disabled = isNotAnnualDeclaration
    Set table15Range = Sheet8.Range("Table15_1")
    
    table15CellDescs = Array(Array("|fffd||fffd||fffd|. |fffd||fffd| |fffd||fffd||fffd|", "", False), _
                             Array("|fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd|", "", False), _
                             Array("|fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd|", "", False), _
                             Array("|fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|", "", False), _
                             Array("|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd| |fffd||fffd||fffd||fffd|", "", False), _
                             Array("|fffd| |fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|", "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|", False), _
                             Array("|fffd||fffd| |fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd|", "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|", False), _
                             Array("|fffd| |fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd|/|fffd|, |fffd||fffd||fffd||fffd| |fffd||fffd||fffd| |fffd||fffd||fffd||fffd|.|fffd||fffd||fffd||fffd||fffd|.|fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd|.|fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd|.|fffd||fffd||fffd||fffd|", "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|", False), _
                             Array("|fffd||fffd| |fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd|", "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|", False))

    lastRowT15_1 = FillTableNodeWithData( _
                            table15Num, table15Desc, _
                            isTable15Declared, isTable15Disabled, _
                            XMLDocObj, xmlTable15Node, _
                            table15Range, TC15, table15CellDescs, _
                            "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|", 0)

    Set table15Range = Sheet8.Range("Table15_2")

    lastRowT15_2 = FillTableNodeWithData( _
                            table15Num, table15Desc, _
                            isTable15Declared, isTable15Disabled, _
                            XMLDocObj, xmlTable15Node, _
                            table15Range, TC15, table15CellDescs, _
                            "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|", _
                            lastRowT15_1)

    Set table15Range = Sheet8.Range("Table15_3")

    lastRowT15_3 = FillTableNodeWithData( _
                            table15Num, table15Desc, _
                            isTable15Declared, isTable15Disabled, _
                            XMLDocObj, xmlTable15Node, _
                            table15Range, TC15, table15CellDescs, _
                            "|fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd| |fffd||fffd||fffd| 1000 |fffd||fffd||fffd||fffd|", _
                            lastRowT15_2)

    Set table15Range = Sheet8.Range("Table15_4")

    FillTableNodeWithData table15Num, table15Desc, _
                          isTable15Declared, isTable15Disabled, _
                          XMLDocObj, xmlTable15Node, _
                          table15Range, TC15, table15CellDescs, _
                          "|fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd|.10 |fffd| |fffd|.|fffd|. |fffd| |fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd|.4, |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| 1000 |fffd||fffd||fffd||fffd|", _
                          lastRowT15_3

    XMLDocObj.Save (FullFileName)

End Sub

Private Function NewDataNode(XMLDoc, ByVal name As String, ByVal Data As String)

    Dim NewNode, DataNode

    Set NewNode = XMLDoc.createElement(name)
    Set DataNode = XMLDoc.CreateTextNode(Data)
    NewNode.appendChild (DataNode)

    Set NewDataNode = NewNode

End Function

Private Function NewDataTableNode_OldManner(XMLDoc, ByVal TableNodeID As String, _
                             ByVal NothingToDeclare As Boolean, ByVal Disabled As Boolean, _
                             ByVal TableRows As Range, ByVal TableColumns As Variant, ByVal ColumnsNames As Variant, _
                             Optional CustomTableName As String, Optional HideStatus As Boolean = False)
    
    Dim a, R, C As Integer
    Dim TableNodeName, DataNodeName, v As String
    Dim foundValue As Boolean
    Dim Tbl As Range
    Dim TableNode, RowNode

    If (Len(Trim(CustomTableName)) = 0) Then
        TableNodeName = STR_NODE_TABLE_PREFIX & TableNodeID
    Else
        TableNodeName = CustomTableName
    End If

    Set TableNode = XMLDoc.createElement(TableNodeName)

    If Disabled Then
        If Not HideStatus Then
            TableNode.appendChild (NewDataNode(XMLDoc, STR_NODE_STATUS, STR_STATUS_3))
        End If
    ElseIf NothingToDeclare Then
        If Not HideStatus Then
            TableNode.appendChild (NewDataNode(XMLDoc, STR_NODE_STATUS, STR_STATUS_2))
        End If
    Else
        If Not HideStatus Then
            TableNode.appendChild (NewDataNode(XMLDoc, STR_NODE_STATUS, STR_STATUS_1))
        End If
    
        For a = 1 To TableRows.Areas.Count
            Set Tbl = Range_RemoveCaptionRow(TableRows.Worksheet, TableRows.Areas(a))
            For R = 1 To Tbl.Rows.Count
                foundValue = False
                For C = 2 To UBound(TableColumns)
                    v = Tbl.Cells(R, TableColumns(C) + 1).text
                    If (Len(Trim(Tbl.Cells(R, TableColumns(C) + 1).text)) > 0) Then
                        foundValue = True
                        C = 999
                    End If
                Next C

                foundValue = True

                If foundValue Then
                    Set RowNode = XMLDoc.createElement(STR_NODE_ROW)
                    TableNode.appendChild (RowNode)

                    For C = 1 To UBound(TableColumns)
                        DataNodeName = ColumnsNames(C)
                        RowNode.appendChild (NewDataNode(XMLDoc, DataNodeName, _
                            Trim(Tbl.Cells(R, TableColumns(C) + 1).text)))
                    Next C
                End If
            Next R
        Next a
    End If

    Set NewDataTableNode_OldManner = TableNode

End Function

Private Function Bool2Str(value)

    If (value) Then
       Bool2Str = STR_TRUE
    Else
       Bool2Str = STR_FALSE
    End If

End Function

Private Function FillTableNodeWithData(ByVal tableNum As String, ByVal tableDesc As String, _
                                       ByVal isTableDeclared As Boolean, ByVal isTableDisabled As Boolean, _
                                       XMLDoc, xmlTableNode, _
                                       tableRange, valuableColumns, tableCellDescs As Variant, _
                                       ByVal rowParent As String, ByVal rowOffset As Integer)

    xmlTableNode.setAttribute STR_ATTR_NUM, tableNum
    xmlTableNode.setAttribute STR_ATTR_DESCRIPTION, tableDesc
    xmlTableNode.setAttribute STR_ATTR_DECLARED, Bool2Str(isTableDeclared)

    If (isTableDisabled) Then
        xmlTableNode.setAttribute STR_ATTR_DISABLED, Bool2Str(isTableDisabled)
    End If

    Dim Table As Range
    Set Table = Range_RemoveCaptionRow(tableRange.Worksheet, tableRange.Areas(1))

    For R = 1 To Table.Rows.Count

        Set xmlRowNode = XMLDoc.createElement(STR_NODE_ROW)
        xmlRowNode.setAttribute STR_ATTR_NUM, (R + rowOffset)
        xmlTableNode.appendChild (xmlRowNode)

        If ((R = 1) And (Len(rowParent) > 0)) Then
            xmlRowNode.setAttribute STR_ATTR_PARENT, rowParent
        End If

        For C = 1 To UBound(valuableColumns)
        
            Set cell = NewDataNode(XMLDoc, STR_NODE_CELL, Trim(Table.Cells(R, valuableColumns(C) + 1).text))
            xmlRowNode.appendChild (cell)
            
            cell.setAttribute STR_ATTR_NUM, C

            If (R = 1) Then
                strDesc = tableCellDescs(C - 1)(0)
                strParent = tableCellDescs(C - 1)(1)
                cellDisabled = tableCellDescs(C - 1)(2)

                If (Len(strParent) > 0) Then
                    cell.setAttribute STR_ATTR_PARENT, strParent
                End If

                cell.setAttribute STR_ATTR_DESCRIPTION, strDesc

                If (cellDisabled) Then
                    cell.setAttribute STR_ATTR_DISABLED, Bool2Str(cellDisabled)
                End If
            End If
        Next C
    Next R

    FillTableNodeWithData = Table.Rows.Count + rowOffset

End Function



' InQuest injected base64 decoded content
' [r.)

INQUEST-PP=macro
