Attribute VB_Name = "About"
Public Const InDev As Integer = 0
Public Sub Main()
    Load frmAbout
    #If VBA6 Then
        frmAbout.Show 1
    #Else
        frmAbout.Show
    #End If
End Sub
'Test Add
Attribute VB_Name = "AppPart1"
Public StartID As Integer
Public Sub Main()
'StartID, Optional CtrlFocus
'<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
'    Daniel H. Smith    7/31/2002
'<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
'    Documentation -- Main
'<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
'This section of code:
'<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
'Called from AppPart1a, saves file if appropriate,
'and loads frmMain at the first page
'of the Loan Information section
'<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
' LOAN INFORMATION
'
'
XMLLoaded = ActiveDocument.Bookmarks("XMLLoaded").Range.Text
If XMLLoaded Then
    Call MsgBox("This Authorization has been completed through XML Data File Import.       " _
            & vbCrLf & "" _
            & vbCrLf & "No modifications can be made without utilizing LMS" _
            & vbCrLf & "and importing a corrected file downloaded from LMS." _
            & vbCrLf & "" _
            & vbCrLf & "Click 'OK' to Exit." _
            , vbExclamation, "XML Populated Authorization")
    Exit Sub
End If
  frmMain.ShowBlankPage
'  CommandBars("Task Pane").Visible = False
    If Mid(Application.Version, 1, 2) >= 12 Then
      WizLib.MinimizeRibbon
    End If
  If Val(Application.Version) <= 10 Then
  Else
    CommandBars("Task Pane").visible = False
  End If
  WizLib.SaveYourFile
  StartID = 0
  UpdatepgLI = 0
    #If VBA6 Then
        frmMain.Show 1
    #Else
        frmMain.Show
    #End If
End Sub
Attribute VB_Name = "AppPart1a"
Public Sub Main()
'<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
'    Daniel H. Smith    7/31/2002
'<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
'    Documentation -- Main
'<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
'This section of code:
'<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
'Called from Update button on first page of doc
'Moves cursor to blank page, calls AppPart1, which
'loads frmMain at the first page
'of the Loan Information section
'<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
'
XMLLoaded = ActiveDocument.Bookmarks("XMLLoaded").Range.Text
If XMLLoaded Then
    Call MsgBox("This Authorization has been completed through XML Data File Import.       " _
            & vbCrLf & "" _
            & vbCrLf & "No modifications can be made without utilizing LMS" _
            & vbCrLf & "and importing a corrected file downloaded from LMS." _
            & vbCrLf & "" _
            & vbCrLf & "Click 'OK' to Exit." _
            , vbExclamation, "XML Populated Authorization")
    Exit Sub
End If
  frmMain.ShowBlankPage
    If Mid(Application.Version, 1, 2) >= 12 Then
      WizLib.MinimizeRibbon
    End If
  If Val(Application.Version) <= 10 Then
  Else
    CommandBars("Task Pane").visible = False
  End If
  frmPleaseWait.lblWaitActivity.Caption = "Loading ..."
  frmPleaseWait.Show
  Application.ScreenRefresh
  AppPart1.Main
End Sub
Attribute VB_Name = "AppPart1b"
Public Sub Main()
'<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
'    Daniel H. Smith    7/31/2002
'<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
'    Documentation -- Main
'<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
'This section of code:
'<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
'Called from Shortcut to Loan Number, moves cursor to blank
'page, unlocks the document,
'and loads frmMain at the third page
'of the Loan Information section, Loan Number
'<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
'  LOAN NUMBER SHORTCUT
'
'

XMLLoaded = ActiveDocument.Bookmarks("XMLLoaded").Range.Text
If XMLLoaded Then
    Call MsgBox("This Authorization has been completed through XML Data File Import.       " _
            & vbCrLf & "" _
            & vbCrLf & "No modifications can be made without utilizing LMS" _
            & vbCrLf & "and importing a corrected file downloaded from LMS." _
            & vbCrLf & "" _
            & vbCrLf & "Click 'OK' to Exit." _
            , vbExclamation, "XML Populated Authorization")
    Exit Sub
End If
frmMain.ShowBlankPage
    If Mid(Application.Version, 1, 2) >= 12 Then
      WizLib.MinimizeRibbon
    End If
  If Val(Application.Version) <= 10 Then
  Else
    CommandBars("Task Pane").visible = False
  End If
'  CommandBars("Task Pane").Visible = False
frmPleaseWait.lblWaitActivity.Caption = "Loading ..."
frmPleaseWait.Show
Application.ScreenUpdating = False
'Added 9/11/2006 to allow use in Word 2003
  On Error Resume Next
  If ActiveDocument.ProtectionType <> wdNoProtection Then
    ActiveDocument.Unprotect "snad7623"
  End If
'If ActiveDocument.ProtectionType <> wdNoProtection Then
'    ActiveDocument.Unprotect
'End If
If ActiveDocument.Bookmarks("cbPreQual").Range.Text = 1 Then
  AppPart1.Main
Else
  StartID = 6
  #If VBA6 Then
      frmMain.Show 1
  #Else
      frmMain.Show
  #End If
  frmMain.mpgWizard.Value = 2
End If
  Application.ScreenRefresh
End Sub
Attribute VB_Name = "AppPart2"
Public Sub Main()
'<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
'    Daniel H. Smith    7/31/2002
'<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
'    Documentation -- Main
'<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
'This section of code:
'<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
'Moves cursor to blank page, prompts to save file if
'time has elapsed, and loads frmMain at section
'indicated as StartID
'<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
' REPAYMENT TERMS
'
'
XMLLoaded = ActiveDocument.Bookmarks("XMLLoaded").Range.Text
If XMLLoaded Then
    Call MsgBox("This Authorization has been completed through XML Data File Import.       " _
            & vbCrLf & "" _
            & vbCrLf & "No modifications can be made without utilizing LMS" _
            & vbCrLf & "and importing a corrected file downloaded from LMS." _
            & vbCrLf & "" _
            & vbCrLf & "Click 'OK' to Exit." _
            , vbExclamation, "XML Populated Authorization")
    Exit Sub
End If
frmMain.ShowBlankPage
    If Mid(Application.Version, 1, 2) >= 12 Then
      WizLib.MinimizeRibbon
    End If
  If Val(Application.Version) <= 10 Then
  Else
    CommandBars("Task Pane").visible = False
  End If
'  CommandBars("Task Pane").Visible = False
'Added 9/11/2006 to allow use in Word 2003
  On Error Resume Next
  If ActiveDocument.ProtectionType <> wdNoProtection Then
    ActiveDocument.Unprotect "snad7623"
  End If
'If ActiveDocument.ProtectionType <> wdNoProtection Then
'    ActiveDocument.Unprotect
'End If

If ActiveDocument.Bookmarks("Complete_LI").Range.Text = 0 And WizInfo.IsInDev = False Then
MsgBox "The Loan Information section must be completed before the Repayment Terms section." & vbCrLf & vbCrLf & _
                      "Click 'OK' to move to the Loan Information section.", _
                      vbCritical + vbOKOnly, _
                      "Section Precedence"
  AppPart1.Main
  Exit Sub
Else
  frmMain.ShowBlankPage
  
  WizLib.SaveYourFile
  StartID = 1
  Application.ScreenRefresh
  Application.ScreenUpdating = False
    #If VBA6 Then
        frmMain.Show 1
    #Else
        frmMain.Show
    #End If
End If
End Sub
Attribute VB_Name = "AppPart3"
Public Sub Main()
'<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
'    Daniel H. Smith    7/31/2002
'<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
'    Documentation -- Main
'<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
'This section of code:
'<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
'Moves cursor to blank page, prompts to save file if
'time has elapsed, and loads frmMain at section
'indicated as StartID
'<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
'  USE OF PROCEEDS Test add
'
'
XMLLoaded = ActiveDocument.Bookmarks("XMLLoaded").Range.Text
If XMLLoaded Then
    Call MsgBox("This Authorization has been completed through XML Data File Import.       " _
            & vbCrLf & "" _
            & vbCrLf & "No modifications can be made without utilizing LMS" _
            & vbCrLf & "and importing a corrected file downloaded from LMS." _
            & vbCrLf & "" _
            & vbCrLf & "Click 'OK' to Exit." _
            , vbExclamation, "XML Populated Authorization")
    Exit Sub
End If
frmMain.ShowBlankPage
    If Mid(Application.Version, 1, 2) >= 12 Then
      WizLib.MinimizeRibbon
    End If
  If Val(Application.Version) <= 10 Then
  Else
    CommandBars("Task Pane").visible = False
  End If
'  CommandBars("Task Pane").Visible = False
'Added 9/11/2006 to allow use in Word 2003
  On Error Resume Next
  If ActiveDocument.ProtectionType <> wdNoProtection Then
    ActiveDocument.Unprotect "snad7623"
  End If
'If ActiveDocument.ProtectionType <> wdNoProtection Then
'    ActiveDocument.Unprotect
'End If

If ActiveDocument.Bookmarks("Complete_LI").Range.Text = 0 And WizInfo.IsInDev = False Then
MsgBox "The Loan Information section must be completed before the Use of Proceeds section." & vbCrLf & vbCrLf & _
                      "Click 'OK' to move to the Loan Information section.", _
                      vbCritical + vbOKOnly, _
                      "Section Precedence"
  AppPart1.Main
  Exit Sub
ElseIf ActiveDocument.Bookmarks("Complete_RT").Range.Text = 0 And WizInfo.IsInDev = False Then
MsgBox "The Repayment Terms section must be completed before the Use of Proceeds section." & vbCrLf & vbCrLf & _
                      "Click 'OK' to move to the Repayment Terms Information section.", _
                      vbCritical + vbOKOnly, _
                      "Section Precedence"
  AppPart2.Main
  Exit Sub
Else
  frmMain.ShowBlankPage
  WizLib.SaveYourFile
  StartID = 2
    #If VBA6 Then
        frmMain.Show 1
    #Else
        frmMain.Show
    #End If
End If
End Sub
Attribute VB_Name = "AppPart4"
Public Sub Main()
'<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
'    Daniel H. Smith    7/31/2002
'<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
'    Documentation -- Main
'<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
'This section of code:
'<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
'Moves cursor to blank page, prompts to save file if
'time has elapsed, and loads frmMain at section
'indicated as StartID
'
'<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
' COLLATERAL CONDITIONS SECTION
'
'
XMLLoaded = ActiveDocument.Bookmarks("XMLLoaded").Range.Text
If XMLLoaded Then
    Call MsgBox("This Authorization has been completed through XML Data File Import.       " _
            & vbCrLf & "" _
            & vbCrLf & "No modifications can be made without utilizing LMS" _
            & vbCrLf & "and importing a corrected file downloaded from LMS." _
            & vbCrLf & "" _
            & vbCrLf & "Click 'OK' to Exit." _
            , vbExclamation, "XML Populated Authorization")
    Exit Sub
End If
frmMain.ShowBlankPage
    If Mid(Application.Version, 1, 2) >= 12 Then
      WizLib.MinimizeRibbon
    End If
  If Val(Application.Version) <= 10 Then
  Else
    CommandBars("Task Pane").visible = False
  End If
'  CommandBars("Task Pane").Visible = False
'Added 9/11/2006 to allow use in Word 2003
  On Error Resume Next
  If ActiveDocument.ProtectionType <> wdNoProtection Then
    ActiveDocument.Unprotect "snad7623"
  End If
'If ActiveDocument.ProtectionType <> wdNoProtection Then
'    ActiveDocument.Unprotect
'End If

MsgCount = 0
If ActiveDocument.Bookmarks("Complete_LI").Range.Text = 0 Then
  MsgCount = 1
ElseIf ActiveDocument.Bookmarks("Complete_RT").Range.Text = 0 Then
  MsgCount = 2
ElseIf ActiveDocument.Bookmarks("Complete_UP").Range.Text = 0 Then
  MsgCount = 3
End If
Select Case MsgCount
  Case 1
    CMsg = "Loan Information "
  Case 2
    CMsg = "Repayment Terms "
  Case 3
    CMsg = "Use of Proceeds "
End Select

If MsgCount > 0 And WizInfo.IsInDev = False Then
MsgBox "The " & CMsg & "section must be completed     " & vbCrLf & vbCrLf & _
                      "before the Collateral Conditions section." & vbCrLf & vbCrLf & _
                      "Click 'OK' to move to the " & CMsg & "section.", _
                      vbCritical + vbOKOnly, _
                      "Section Precedence"
  Select Case MsgCount
    Case 1
      GotoLI.Main
    Case 2
      GotoNT.Main
    Case 3
      GotoUP.Main
  End Select
  Exit Sub
Else
  frmMain.ShowBlankPage
  WizLib.SaveYourFile
  StartID = 3
    #If VBA6 Then
        frmMain.Show 1
    #Else
        frmMain.Show
    #End If
End If
End Sub
Attribute VB_Name = "AppPart5"
Public Sub Main()
'<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
'    Daniel H. Smith    7/31/2002
'<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
'    Documentation -- Main
'<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
'This section of code:
'<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
'Moves cursor to blank page, prompts to save file if
'time has elapsed, and loads frmMain at section
'indicated as StartID
'<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
' ADDITIONAL CONDITIONS I
' Test
'
XMLLoaded = ActiveDocument.Bookmarks("XMLLoaded").Range.Text
If XMLLoaded Then
    Call MsgBox("This Authorization has been completed through XML Data File Import.       " _
            & vbCrLf & "" _
            & vbCrLf & "No modifications can be made without utilizing LMS" _
            & vbCrLf & "and importing a corrected file downloaded from LMS." _
            & vbCrLf & "" _
            & vbCrLf & "Click 'OK' to Exit." _
            , vbExclamation, "XML Populated Authorization")
    Exit Sub
End If
frmMain.ShowBlankPage
    If Mid(Application.Version, 1, 2) >= 12 Then
      WizLib.MinimizeRibbon
    End If
  If Val(Application.Version) <= 10 Then
  Else
    CommandBars("Task Pane").visible = False
  End If
'  CommandBars("Task Pane").Visible = False
'Added 9/11/2006 to allow use in Word 2003
  On Error Resume Next
  If ActiveDocument.ProtectionType <> wdNoProtection Then
    ActiveDocument.Unprotect "snad7623"
  End If
'If ActiveDocument.ProtectionType <> wdNoProtection Then
'    ActiveDocument.Unprotect
'End If

If ActiveDocument.Bookmarks("Complete_UP").Range.Text = 0 And WizInfo.IsInDev = False Then
MsgBox "The Loan Information, Repayment Terms, and Use of Proceeds sections must be completed     " & vbCrLf & vbCrLf & _
                      "before the Additional Conditions sections." & vbCrLf & vbCrLf & _
                      "Click 'OK' to move to the Loan Information section.", _
                      vbCritical + vbOKOnly, _
                      "Section Precedence"
  GotoLI.Main
  Exit Sub
Else
  frmMain.ShowBlankPage
  WizLib.SaveYourFile
  StartID = 4
  UpdateACI1 = 0
    #If VBA6 Then
        frmMain.Show 1
    #Else
        frmMain.Show
    #End If
End If
End Sub
Attribute VB_Name = "AppPart6"
Public Sub Main()
'<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
'    Daniel H. Smith    7/31/2002
'<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
'    Documentation -- Main
'<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
'This section of code:
'<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
'Moves cursor to blank page, prompts to save file if
'time has elapsed, and loads frmMain at section
'indicated as StartID
'<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
' ADDITIONAL CONDITIONS II
'
'
XMLLoaded = ActiveDocument.Bookmarks("XMLLoaded").Range.Text
If XMLLoaded Then
    Call MsgBox("This Authorization has been completed through XML Data File Import.       " _
            & vbCrLf & "" _
            & vbCrLf & "No modifications can be made without utilizing LMS" _
            & vbCrLf & "and importing a corrected file downloaded from LMS." _
            & vbCrLf & "" _
            & vbCrLf & "Click 'OK' to Exit." _
            , vbExclamation, "XML Populated Authorization")
    Exit Sub
End If
frmMain.ShowBlankPage
  If Val(Application.Version) <= 10 Then
  Else
    CommandBars("Task Pane").visible = False
  End If
'  CommandBars("Task Pane").Visible = False
'Added 9/11/2006 to allow use in Word 2003
  On Error Resume Next
  If ActiveDocument.ProtectionType <> wdNoProtection Then
    ActiveDocument.Unprotect "snad7623"
  End If
'If ActiveDocument.ProtectionType <> wdNoProtection Then
'    ActiveDocument.Unprotect
'End If

If ActiveDocument.Bookmarks("Complete_UP").Range.Text = 0 And WizInfo.IsInDev = False Then
MsgBox "The Loan Information, Repayment Terms, and Use of Proceeds sections must be completed     " & vbCrLf & vbCrLf & _
                      "before the Additional Conditions sections." & vbCrLf & vbCrLf & _
                      "Click 'OK' to move to the Loan Information section.", _
                      vbCritical + vbOKOnly, _
                      "Section Precedence"
  GotoLI.Main
  Exit Sub
Else
  frmMain.ShowBlankPage
  WizLib.SaveYourFile
  StartID = 5
    #If VBA6 Then
        frmMain.Show 1
    #Else
        frmMain.Show
    #End If
End If
End Sub
Attribute VB_Name = "AutoNew"
Dim Pass As Integer

Public Sub Main()
Application.ScreenUpdating = False
  '  MsgBox "Auto New is running" 'DL Added for debug
    Dim xx
    Dim MySection
    Dim yy
    #If VBA6 Then
    Application.WindowState = wdWindowStateMaximize
    #End If
    xx = VersionSpecific.DataImported
    If xx = 0 Then
        WizardSpecific.GetDefaultInfo
    End If
    On Error Resume Next
    MySection = "HKEY_CURRENT_USER\software\SBA\" + WizInfo.WizSection + "\" + WizInfo.WizVer
    yy = System.PrivateProfileString("", MySection, "DoNotShowHelp")
    If Val(yy) < 1 Then WizHelp.Start 4
    Application.ScreenRefresh
'    MySection = "HKEY_CURRENT_USER\Software\SBA\" + WizInfo.WizSection + "\" + WizInfo.WizVer
'    xx = System.PrivateProfileString("", MySection, "NoList")
'    If xx <> "True" Or xx = "" Then
      SaveAsDefault "NoList", "False"  'Means SBA Offices List does exist.
'    End If Test
'    xx = System.PrivateProfileString("", MySection, "NoEmpList")
'    If xx <> "True" Or xx = "" Then
      SaveAsDefault "NoEmpList", "False"  'Means EmpList does exist.
'    End If
    On Error GoTo -1: On Error GoTo 0
    ActiveWindow.View.ShowFieldCodes = False
    ActiveWindow.View.Type = wdPrintView
    InitializeDoc.Main
End Sub
'Test
Attribute VB_Name = "AutoOpen"
Public Sub Main()
Application.ScreenUpdating = False
Application.ScreenRefresh
frmPleaseWait.lblWaitActivity.Caption = "Checking template ..."
frmPleaseWait.Show
 ' MsgBox "Auto Open is running" 'DL Added for Debug
    Dim MyTemplate
'    Dim FSA As Object: Set FSA = Dialogs(wdDialogFileSaveAs)
'    If FSA.Format = 1 Then
    If ActiveDocument.Type = wdTypeTemplate Then
        MyTemplate = ActiveDocument.AttachedTemplate.FullName
        On Error GoTo EndIt
        ActiveDocument.Close
        Documents.Add Template:=MyTemplate
        Application.ScreenRefresh
        Application.ScreenUpdating = False
        ActiveWindow.View.ShowFieldCodes = False
        ActiveWindow.View.Type = wdPrintView
        InitializeDoc.Main
    Else
        WizLib.CheckTemplate
        If ActiveDocument.Bookmarks("Complete_LI").Range.Text = 0 And WizInfo.IsInDev = False Then
          CommandBars("7a Wizard").Controls("Repayment Terms").enabled = False
        Else
          CommandBars("7a Wizard").Controls("Repayment Terms").enabled = True
        End If
        If ActiveDocument.Bookmarks("Complete_RT").Range.Text = 0 And WizInfo.IsInDev = False Then
          CommandBars("7a Wizard").Controls("Use of Proceeds").enabled = False
        Else
          CommandBars("7a Wizard").Controls("Use of Proceeds").enabled = True
        End If
        If ActiveDocument.Bookmarks("Complete_UP").Range.Text = 0 And WizInfo.IsInDev = False Then
          CommandBars("7a Wizard").Controls("Collateral Cond.").enabled = False
          CommandBars("7a Wizard").Controls("Additional Cond. (1)").enabled = False
          CommandBars("7a Wizard").Controls("Additional Cond. (2)").enabled = False
        Else
          CommandBars("7a Wizard").Controls("Collateral Cond.").enabled = True
          CommandBars("7a Wizard").Controls("Additional Cond. (1)").enabled = True
          CommandBars("7a Wizard").Controls("Additional Cond. (2)").enabled = True
        End If
        ActiveWindow.View.Type = wdPrintView
        ActiveWindow.View.ShowFieldCodes = False
        InitializeDoc.Main
    End If
EndIt:
Set FSA = Nothing
End Sub
Attribute VB_Name = "Calculator"
Public A As Double
Public B As Double
Public c As Double
Public M As Double
Public Flag As String
Public Cl As Boolean
Public blnsign As Boolean

Sub Clear()
    If Cl = True Then
        frmCalc.txtCalcResult.Text = ""
        Cl = False
    End If
End Sub

Sub Cal()
    Select Case Flag
        Case "add"
            A = A + Val(frmCalc.txtCalcResult.Text)
        Case "minus"
            A = A - Val(frmCalc.txtCalcResult.Text)
        Case "multiply"
            A = A * Val(frmCalc.txtCalcResult.Text)
        Case "divide"
            If Val(frmCalc.txtCalcResult.Text) <> 0 Then A = A / Val(frmCalc.txtCalcResult.Text)
        Case Else
            A = Val(frmCalc.txtCalcResult.Text)
    End Select
    
    frmCalc.txtCalcResult.Text = A
    Cl = True
    
End Sub
Attribute VB_Name = "Cleaning"
Public Sub Main()
Dim WizName
Dim MsgTxt
Dim i
Dim CCLength
Dim retVal
Dim dlg As Object
ReDim myStatus__(8)

'Added 9/11/2006 to allow use in Word 2003
  On Error Resume Next
  If ActiveDocument.ProtectionType <> wdNoProtection Then
    ActiveDocument.Unprotect "snad7623"
  End If
'If ActiveDocument.ProtectionType <> wdNoProtection Then
'    ActiveDocument.Unprotect
'End If

Application.EnableCancelKey = wdCancelDisabled
MsgBox "Any conditions added to this authorization (after converting the authorization      " & vbCr & _
    "to a Word Document), which were not pre-written or pre-approved by SBA" & vbCr & _
    "(except where custom language is specifically permitted in a 'Write Your Own'" & vbCr & _
    " section) must be approved by SBA BEFORE it can be reused in any subsequent " & vbCr & _
    "SBA guaranty loan.     " & vbCrLf & vbCrLf & _
    "See SOP reference Q&A #5 in Subpart A, Chapter 5," & vbCr & _
    "paragraph 1, on page 98." & vbCrLf & vbCrLf & _
    "Mail requests to:" & vbCrLf & vbCrLf & _
    "SBA" & vbCrLf & _
    "c/o The 7(a) Policy Branch, Code 7881" & vbCrLf & _
    "Office of Financial Assistance" & vbCrLf & _
    "Washington, DC  20416", vbOKOnly, "Approved Conditions"
Dim FSA As Object: Set FSA = Dialogs(wdDialogFileSaveAs)
If FSA.Format <> 1 Then
i = 1
If Val(ActiveDocument.Bookmarks("Complete_LI").Range.Text) = 0 Then
  myStatus__(i) = "-- The Loan Information section has not been updated."
  i = i + 1
ElseIf Val(ActiveDocument.Bookmarks("cbPrequal").Range.Text) = 0 Then
  If Len(ActiveDocument.Bookmarks("LoanNumber").Range.Text) = 0 Or _
    ActiveDocument.Bookmarks("LoanNumber") = "____________________" Or _
    Len(ActiveDocument.Bookmarks("ApprovalDate")) = 0 Or _
    ActiveDocument.Bookmarks("ApprovalDate").Range.Text = "____________________" Or _
    Len(ActiveDocument.Bookmarks("RequestDate")) = 0 Or _
    ActiveDocument.Bookmarks("RequestDate").Range.Text = "____________________" Then
  myStatus__(i) = "-- Loan Information -- One or more of the following items are missing:"
  i = i + 1
  myStatus__(i) = "    --> Loan Number, Approval Date, Accepted Date. <--"
  i = i + 1
  End If
End If
If Val(ActiveDocument.Bookmarks("Complete_RT").Range.Text) = 0 Then
  myStatus__(i) = "-- The Repayment Terms section has not been updated."
i = i + 1
End If
If Val(ActiveDocument.Bookmarks("Complete_UP").Range.Text) = 0 Then
  myStatus__(i) = "-- The Use of Proceeds section has not been updated."
  i = i + 1
Else
  If Val(ActiveDocument.Bookmarks("LoanAmount").Range.Text) <> _
    Val(ActiveDocument.Bookmarks("TotalUP").Range.Text) Then
  myStatus__(i) = "-- Use of Proceeds -- Total use of proceeds does not equal loan amount."
  i = i + 1
End If
End If
On Error Resume Next
CCLength = Len(ActiveDocument.Bookmarks("CCAll").Range.Text)
On Error GoTo -1: On Error GoTo 0
If Val(ActiveDocument.Bookmarks("cbNoCC").Range.Text) = 0 And CCLength = 153 Then
  myStatus__(i) = "-- No Collateral Condition has been inserted."
  i = i + 1
End If
If Val(ActiveDocument.Bookmarks("Complete_AC1").Range.Text) = 0 Then
  myStatus__(i) = "-- The Additional Conditions (1) section has not been updated."
  i = i + 1
End If
If Val(ActiveDocument.Bookmarks("Complete_AC2").Range.Text) = 0 Then
  myStatus__(i) = "-- The Additional Conditions (2) section has not been updated."
  i = i + 1
End If
If i > 1 Then
  Load frmWizardStatus
  frmWizardStatus.Show
Else
  frmWizardStatus.Tag = True
End If
  If frmWizardStatus.Tag = True Then
    WizName = WizInfo.WizName
    MsgTxt = "You are about to convert this " + WizName + " Wizard document into a standard Word document." + Chr(13) + Chr(13)
    MsgTxt = MsgTxt + "You will no longer be able to update this document with the Wizard once this operation is completed.     " + Chr(13) + Chr(13)
    MsgTxt = MsgTxt + "Click on Cancel to undo this operation or click on OK to continue.     " + Chr(13)
    If MsgBox(MsgTxt, vbCritical + vbOKCancel, WizName & " Wizard") = vbOK Then
      If MsgBox("This operation cannot be undone.  Continue?          ", vbCritical + vbOKCancel, "Please confirm... [" & WizName & " Wizard]") = vbOK Then
        FileSave.Main
        If frmWizardStatus.Tag = False Then
          Unload frmWizardStatus
          MsgBox "Document not saved.  Conversion cancelled.    ", vbCritical + vbOKOnly, WizName & " Wizard"
        Else
          Unload frmWizardStatus
          CleanDocument
        End If
      End If
    End If
  End If
Else
Unload frmWizardStatus
End If
Set FSA = Nothing
Set dlg = Nothing
End Sub
Public Sub CleanDocument()
ActiveDocument.AttachedTemplate.Saved = True
Load ufConverting
ufConverting.Show
Application.ScreenUpdating = False
'Added 9/11/2006 to allow use in Word 2003
  On Error Resume Next
  If ActiveDocument.ProtectionType <> wdNoProtection Then
    ActiveDocument.Unprotect "snad7623"
  End If
'On Error Resume Next
'  If ActiveDocument.ProtectionType <> wdNoProtection Then
'    ActiveDocument.Unprotect
'  End If
On Error GoTo -1: On Error GoTo 0
#If VBA6 Then
    ActiveWindow.View.Type = wdPrintView
#Else
    ActiveWindow.View.Type = wdPageView
#End If

On Error Resume Next
ActiveDocument.Fields.Update
ActiveDocument.Fields.Unlink
ActiveDocument.Sections(1).Footers(1).Range.Fields.Update
ActiveDocument.Sections(2).Footers(1).Range.Fields.Update
ActiveDocument.Sections(3).Footers(1).Range.Fields.Update
'ActiveDocument.Sections(1).Footers(1).Range.Fields.Unlink
'ActiveDocument.Sections(2).Footers(1).Range.Fields.Unlink
'ActiveDocument.Sections(3).Footers(1).Range.Fields.Unlink


On Error GoTo -1: On Error GoTo 0
If ActiveDocument.Bookmarks.Exists("MacroSection") Then
  ActiveDocument.Bookmarks("MacroSection").Range.Delete
End If
  
If ActiveWindow.View.ShowHiddenText = False Then
  With ActiveWindow
    With .View
      .ShowHiddenText = True
    End With
  End With
End If

'ActiveDocument.ActiveWindow.View.ShowHiddenText = _
'    Not ActiveDocument.ActiveWindow.View.ShowHiddenText
'
Application.Selection.HomeKey Unit:=wdStory, Extend:=wdMove
Application.Selection.Range.WholeStory

    Selection.Find.ClearFormatting
    Selection.Find.Font.Hidden = True
    Selection.Find.Replacement.ClearFormatting
    With Selection.Find
        .Text = ""
        .Replacement.Text = ""
        .Forward = True
        .Wrap = wdFindContinue
        .Format = True
        .MatchCase = False
        .MatchWholeWord = False
        .MatchWildcards = False
        .MatchSoundsLike = False
        .MatchAllWordForms = False
    End With
    Selection.Find.Execute
    Selection.Find.Execute Replace:=wdReplaceAll

'With Selection
'  .Find.ClearFormatting
'  .Find.Replacement.ClearFormatting
'  .Find.Font.Hidden = 1
'  .Find.Execute ReplaceWith:="", Replace:=wdReplaceAll
'End With

With ActiveDocument.Styles("input")
    .Delete
End With
With ActiveDocument.Styles("input2")
    .Delete
End With

Set AllParas = ActiveDocument.Paragraphs
With AllParas
  .Borders(wdBorderLeft).LineStyle = wdLineStyleNone
End With
#If VBA6 Then
    ActiveWindow.View.Type = wdPrintView
#Else
    ActiveWindow.View.Type = wdPageView
#End If
Selection.HomeKey wdStory
Selection.MoveRight wdCharacter, 1
ActiveDocument.Bookmarks("TopOfDocument").Select
ActiveDocument.AcceptAllRevisions
On Error Resume Next
ActiveDocument.AttachedTemplate = "Normal.dot"
ActiveDocument.AttachedTemplate = "Normal.dotm"
End Sub
Attribute VB_Name = "DocClose"
Public Sub Main()
Dim X As Integer
X = 0
For Each dv In ActiveDocument.Variables
  If dv.Name = "MainDoc" Then
    X = Len(ActiveDocument.Variables("MainDoc").Value)
  End If
Next dv
If X = 0 Then
    ActiveDocument.AttachedTemplate.Saved = True
    ActiveWindow.Close
Else
    TableCancel.Main
End If
End Sub
Attribute VB_Name = "FileClose"
Public Sub Main()
Dim X As Integer
X = 0
For Each dv In ActiveDocument.Variables
  If dv.Name = "MainDoc" Then
    X = Len(ActiveDocument.Variables("MainDoc").Value)
  End If
Next dv
If X = 0 Then
    On Error Resume Next
'Added 9/11/2006 to allow use in Word 2003
  On Error Resume Next
  If ActiveDocument.ProtectionType <> wdNoProtection Then
    ActiveDocument.Unprotect "snad7623"
  End If
'  If ActiveDocument.ProtectionType <> wdNoProtection Then
'    ActiveDocument.Unprotect
'  End If
    
  AllVersions ("Restore")
  ActiveDocument.AttachedTemplate.Saved = True
  ActiveDocument.Close
Else
    TableCancel.Main
End If
End Sub
Attribute VB_Name = "FilePrint"
Public Sub Main()
'    Application.PrintOut fileName:="", Range:=wdPrintRangeOfPages, Item:= _
'        wdPrintDocumentWithMarkup, Copies:=1, Pages:="1-2", PageType:= _
'        wdPrintAllPages, Collate:=True, Background:=True, PrintToFile:=False, _
'        PrintZoomColumn:=0, PrintZoomRow:=0, PrintZoomPaperWidth:=0, _
'        PrintZoomPaperHeight:=0
Dim dlg As Object
Dim myStatus__(10)
Dim i As Integer
Dim xx
'Added 9/11/2006 to allow use in Word 2003
  On Error Resume Next
  If ActiveDocument.ProtectionType <> wdNoProtection Then
    ActiveDocument.Unprotect "snad7623"
  End If
'If ActiveDocument.ProtectionType <> wdNoProtection Then
'    ActiveDocument.Unprotect
'End If
Dim X As Integer
X = 0
For Each dv In ActiveDocument.Variables
  If dv.Name = "MainDoc" Then
    X = ActiveDocument.Variables("MainDoc").Value
  End If
Next dv
If X = 0 Then
  i = 1
  If Val(ActiveDocument.Bookmarks("Complete_LI").Range.Text) = 0 Then
    myStatus__(i) = "-- The Loan Information section has not been updated."
    i = i + 1
  ElseIf Val(ActiveDocument.Bookmarks("cbPrequal").Range.Text) = 0 Then
    If Len(ActiveDocument.Bookmarks("LoanNumber").Range.Text) = 0 Or _
      ActiveDocument.Bookmarks("LoanNumber") = "____________________" Or _
      Len(ActiveDocument.Bookmarks("ApprovalDate")) = 0 Or _
      ActiveDocument.Bookmarks("ApprovalDate").Range.Text = "____________________" Or _
      Len(ActiveDocument.Bookmarks("RequestDate")) = 0 Or _
      ActiveDocument.Bookmarks("RequestDate").Range.Text = "____________________" Then
    myStatus__(i) = "-- Loan Information -- One or more of the following items are missing:"
    i = i + 1
    myStatus__(i) = "    --> Loan Number, Approval Date, Accepted Date. <--"
    i = i + 1
    End If
  End If
  If Val(ActiveDocument.Bookmarks("Complete_RT").Range.Text) = 0 Then
    myStatus__(i) = "-- The Repayment Terms section has not been updated."
  i = i + 1
  End If
  If Val(ActiveDocument.Bookmarks("Complete_UP").Range.Text) = 0 Then
    myStatus__(i) = "-- The Use of Proceeds section has not been updated."
    i = i + 1
  Else
    If Val(ActiveDocument.Bookmarks("LoanAmount").Range.Text) <> _
      Val(ActiveDocument.Bookmarks("TotalUP").Range.Text) Then
    myStatus__(i) = "-- Use of Proceeds -- Total use of proceeds does not equal loan amount."
    i = i + 1
  End If
  End If
  On Error Resume Next
  CCLength = Len(ActiveDocument.Bookmarks("CCAll").Range.Text)
  On Error GoTo -1: On Error GoTo 0
  If Val(ActiveDocument.Bookmarks("cbNoCC").Range.Text) = 0 And CCLength = 153 Then
    myStatus__(i) = "-- No Collateral Condition has been inserted."
    i = i + 1
  End If
  If Val(ActiveDocument.Bookmarks("Complete_AC1").Range.Text) = 0 Then
    myStatus__(i) = "-- The Additional Conditions (1) section has not been updated."
    i = i + 1
  End If
  If Val(ActiveDocument.Bookmarks("Complete_AC2").Range.Text) = 0 Then
    myStatus__(i) = "-- The Additional Conditions (2) section has not been updated."
    i = i + 1
  End If
  FilePrintApp.Main 0, i
Else
  With Dialogs(wdDialogFilePrint)
    .Pages = ToPrint
    Select Case .Display
    Case -1
      .Execute 'okay button
    Case 0
      'cancel button
    End Select
  End With
End If
Set dlg = Nothing
End Sub
Attribute VB_Name = "FilePrintApp"
Public Sub Main(Type_ As Integer, SectionVal As Integer)

'=============================================================
' FilePrintApp.MAIN
' Type_ (Integer)
' Sub
'-------------------------------------------------------------
' Modified 08-27-2001 WordBasic to VBA
' Author : Daniel H. Smith, Programmer/Analyst
' Notes :  Complete
'-------------------------------------------------------------
' Revision History
'-------------------------------------------------------------
' 08-27-2001 DHS: 9-14-01 Complete/Tested DHS:
'=============================================================
' End Code Header block

Dim PrintRevMark
Dim LastSection
Dim ToPrint
Dim dlg As Object
Dim xx
ActiveDocument.UndoClear
If SectionVal > 1 Then
  Load frmWizardStatus
  frmWizardStatus.Show
Else
  GoTo PrintRevisions
End If
If frmWizardStatus.Tag = True Then
    Unload frmWizardStatus
PrintRevisions:
    Application.ScreenRefresh
    Application.ScreenUpdating = False
    System.Cursor = wdCursorWait
    #If VBA6 Then
        ActiveWindow.View.Type = wdPrintView
    #Else
        ActiveWindow.View.Type = wdPageView
    #End If
'Added 9/11/2006 to allow use in Word 2003
  On Error Resume Next
  If ActiveDocument.ProtectionType <> wdNoProtection Then
    ActiveDocument.Unprotect "snad7623"
  End If
'    On Error Resume Next
'  If ActiveDocument.ProtectionType <> wdNoProtection Then
'    ActiveDocument.Unprotect
'  End If
    On Error GoTo -1: On Error GoTo 0
    With ActiveDocument
        .ShowRevisions = False
        .PrintRevisions = False
    End With
    ActiveDocument.Bookmarks.Add Name:="Temp2"
    Selection.MoveUp wdWindow, 2
    ActiveDocument.Bookmarks.Add Name:="Temp"
    PrintRevMark = MsgBox("Do you wish to print the revision marks?", vbQuestion + vbYesNoCancel, WizName & " Wizard")
    If PrintRevMark = 2 Then
      GoTo TheEnd
    End If
    Application.ScreenUpdating = True
    Application.ScreenRefresh
    Application.ScreenUpdating = False
    If PrintRevMark = 7 Then
      RevMark 0
    End If
    Selection.EndKey wdStory
    LastSection = Selection.Information(wdActiveEndSectionNumber)
    ToPrint = "s1"
    If LastSection > 2 Then
    ToPrint = ToPrint + "-s" + Trim(Str(LastSection - 1))
    End If
Else
  Unload frmWizardStatus
  Exit Sub
End If
ActiveDocument.Bookmarks("Temp2").Select
If Type_ = 0 Then
Dim X As Integer

    With Dialogs(wdDialogFilePrint)
        .Range = wdPrintRangeOfPages
        .Pages = ToPrint
      Select Case .Display
      Case -1
        If .Range = wdPrintCurrentPage Then
          .Pages = ""
        End If
        .Execute
      Case 0
      Application.ScreenUpdating = True
      Application.ScreenRefresh
      Application.ScreenUpdating = False
      End Select
    End With
Else
    ActiveDocument.PrintOut Range:=wdPrintRangeOfPages, Pages:=ToPrint
End If

If PrintRevMark = 7 Then RevMark 1
TheEnd:
    #If VBA6 Then
        ActiveWindow.View.Type = wdPrintView
    #Else
        ActiveWindow.View.Type = wdPageView
    #End If
    ActiveDocument.Bookmarks("Temp").Select
    ActiveDocument.Bookmarks("Temp").Delete
    Selection.MoveDown wdScreen, 2
    ActiveDocument.Bookmarks("Temp2").Select
    ActiveDocument.Bookmarks("Temp2").Delete
    Application.ScreenUpdating = True
'    ActiveDocument.Protect 1
'Added 9/11/2006 to work with Word 2003
   On Error Resume Next
   If Val(Application.Version) >= 11 And ActiveDocument.ProtectionType <> wdAllowOnlyReading Then
    ActiveDocument.Protect wdAllowOnlyReading, , "snad7623"
   Else
    ActiveDocument.Protect wdAllowOnlyComments
   End If
CommandBars("Reviewing").visible = False
Set dlg = Nothing
End Sub
Public Sub RevMark(Status)

'=============================================================
' FilePrintApp.RevMark
' Status (Variant)
' Sub
'-------------------------------------------------------------
' Modified 08-27-2001 WordBasic to VBA
' Author : Daniel H. Smith, Programmer/Analyst
' Notes :  Complete
'-------------------------------------------------------------
' Revision History
'-------------------------------------------------------------
' 08-27-2001 DHS: 9-14-2001 Complete/Tested DHS:
'=============================================================
' End Code Header block
Dim X As Integer
Dim IUnderline
Dim IColor
Dim BColor1
Dim BColor2
Dim xx
System.Cursor = wdCursorWait
If Status = 0 Then
IUnderline = wdUnderlineNone
IUnderline2 = wdUnderlineNone
  #If VBA6 Then
    IColor = wdColorAutomatic
    IColor2 = wdColorAutomatic
    BColor1 = wdColorRed
    BColor2 = wdColorWhite
  #Else
    IColor = wdAuto
    IColor2 = wdAuto
    BColor1 = wdRed
    BColor2 = wdWhite
  #End If
Else
IUnderline = wdUnderlineDouble
IUnderline2 = wdUnderlineDotted
  #If VBA6 Then
    IColor = wdColorRed
    IColor2 = wdColorBlue
    BColor1 = wdColorWhite
    BColor2 = wdColorRed
  #Else
    IColor = wdRed
    IColor2 = wdBlue
    BColor1 = wdWhite
    BColor2 = wdRed
  #End If
End If
#If VBA6 Then
With ActiveDocument.Styles("Input").Font
    .Underline = IUnderline
    .Color = IColor
End With
#Else
With ActiveDocument.Styles("Input").Font
    .Underline = IUnderline
    .ColorIndex = IColor
End With
#End If
#If VBA6 Then
With ActiveDocument.Styles("Input2").Font
    .Underline = IUnderline2
    .Color = IColor2
End With
#Else
With ActiveDocument.Styles("Input2").Font
    .Underline = IUnderline2
    .ColorIndex = IColor2
End With
#End If

StatusBar = "Please Wait ..."
Application.ScreenRefresh
If Status = 0 Then
  frmPleaseWait.lblWaitActivity.Caption = "Removing revision marks ..."
Else
  frmPleaseWait.lblWaitActivity.Caption = "Restoring revision marks ..."
End If
ActiveDocument.ActiveWindow.View.ShowFieldCodes = True
Application.ScreenRefresh
frmPleaseWait.Show
Selection.GoTo Name:="EndOfDocument"
Selection.HomeKey Unit:=wdStory, Extend:=wdExtend

For X = 22 To Selection.Range.Paragraphs.Count - 1
ActiveDocument.Paragraphs(X).Range.Select
If InStr(1, Selection.Paragraphs(1).Style, "Heading") <> 0 Or InStr(1, Selection.Paragraphs(1).Style, "Indent") <> 0 Then
  With Selection.ParagraphFormat
  If .Borders(wdBorderLeft) Then
    With Selection
    If .Style Is Nothing Then
    Else
      If InStr(1, .Style, "Start") = 0 Then
      #If VBA6 Then
        If .Borders(wdBorderLeft).Color = BColor1 Then
          .Borders(wdBorderLeft).Color = BColor2
        End If
      #Else
        If .Borders(wdBorderLeft).ColorIndex = BColor1 Then
          .Borders(wdBorderLeft).ColorIndex = BColor2
        End If
      #End If
      End If
    End If
    End With
  End If
  End With
End If
ActiveDocument.UndoClear
Next X
On Error GoTo -1: On Error GoTo 0
ActiveDocument.ActiveWindow.View.ShowFieldCodes = False
StatusBar = "Done!"
frmPleaseWait.lblWaitMessage.Width = 166.5
frmPleaseWait.lblWaitMessage.Caption = "Done!    "
frmPleaseWait.Show
End Sub
Attribute VB_Name = "FilePrintDefault"
Public Sub Main()

'=============================================================
' FilePrintDefault.MAIN
'
' Sub
'-------------------------------------------------------------
' Modified 08-27-2001 WordBasic to VBA
' Author : Daniel H. Smith, Programmer/Analyst
' Notes :  Complete
'-------------------------------------------------------------
' Revision History
'-------------------------------------------------------------
' 08-27-2001 DHS: 9-14-01 Complete/Tested DHS:
'=============================================================
' End Code Header block
Dim X As Integer
X = 0
For Each dv In ActiveDocument.Variables
  If dv.Name = "MainDoc" Then
    X = Len(ActiveDocument.Variables("MainDoc").Value)
  End If
Next dv
If X = 0 Then
    FilePrint.Main
Else
    ActiveDocument.PrintOut
End If
End Sub
Attribute VB_Name = "FileSave"
Public Sub Main()
  If ActiveDocument.Name = WizInfo.WizTemplate Then
    ActiveDocument.Save
  Else
    ActiveDocument.AttachedTemplate.Saved = True
    FileSaveApp.udSave
  End If
End Sub
Attribute VB_Name = "FileSaveApp"
Public Sub udSave()

'=============================================================
' FileSaveApp.udSave
'
' Sub
'-------------------------------------------------------------
' Modified 09-14-2001 WordBasic to VBA
' Author : Daniel H. Smith, Programmer/Analyst
' Notes :  Complete
'-------------------------------------------------------------
' Revision History
'-------------------------------------------------------------
' 09-14-2001 DHS: Complete 9-14-01
'=============================================================
' End Code Header block
Dim X As Integer
X = 0
WizLib.CheckDocMap
On Error Resume Next
For Each dv In ActiveDocument.Variables
  If dv.Name = "MainDoc" Then
    X = Len(ActiveDocument.Variables("MainDoc").Value)
  End If
Next dv
On Error GoTo 0
    If X = 0 Then
        SaveDocument
    Else
        SaveInclude
    End If
End Sub
Public Sub udSaveAs()
    SaveDocumentAs
End Sub
Public Sub SaveDocument()

'=============================================================
' FileSaveApp.SaveDocument
'
' Sub
'-------------------------------------------------------------
' Modified 09-14-2001 WordBasic to VBA
' Author : Daniel H. Smith, Programmer/Analyst
' Notes :  Complete
'-------------------------------------------------------------
' Revision History
'-------------------------------------------------------------
' 09-14-2001 DHS: Complete 9-14-01 DHS: Again 12/3/01 DHS:
'=============================================================
' End Code Header block
    If InStr(ActiveDocument.FullName, "\") > 0 Then
        ActiveDocument.AttachedTemplate.Saved = True
        ActiveDocument.Save
    Else
        SaveDocumentAs
    End If
End Sub
Public Sub SaveDocumentAs()

'=============================================================
' FileSaveApp.SaveDocumentAs
'
' Sub
'-------------------------------------------------------------
' Modified 08-27-2001 WordBasic to VBA
' Author : Daniel H. Smith, Programmer/Analyst
' Notes :  Complete
'-------------------------------------------------------------
' Revision History
'-------------------------------------------------------------
' 08-27-2001 DHS:
'=============================================================
' End Code Header block
  Dim fso As Object
  Dim SBALoanPath As String
  Dim xx
  Dim SBALP2 As String
  WizLib.CheckDocMap
  If Int(Val(Application.Version)) < 10 Then
   ' SBALoanPath = "S:\USERS\SHARE\LOANAUTH\"
   SBALoanPath = "K:\Documents\0" & Left(LoanId, 3) & "\0" & LoanId & "\"   'Changed by GAP 2/26/13 so file will save in the proper folder.
  Else
   ' SBALoanPath = "S:\LOANAUTH\"
   SBALoanPath = "K:\Documents\0" & Left(LoanId, 3) & "\0" & LoanId & "\"    'Changed by GAP 2/26/13 so file will save in the proper folder.
   
  End If
  MySection = "HKEY_CURRENT_USER\software\SBA\" + WizInfo.WizSection + "\" + WizInfo.WizVer
  X = System.PrivateProfileString("", MySection, "SaveAsDefault")
  On Error GoTo -1: On Error GoTo 0
  If X = "" Then
  Else
    SBALoanPath = X
  End If
    Set fso = CreateObject("Scripting.FileSystemObject")
    SBALP2 = Mid(SBALoanPath, 2, Len(SBALoanPath) - 2)
    If fso.FolderExists(SBALP2) Then
    Else
      ' SBALoanPath = "S:\LOANAUTH\"
      SBALoanPath = "K:\Documents\0" & Left(LoanId, 3) & "\0" & LoanId & "\"    'Changed by GAP 2/26/13 so file will save in the proper folder.
      If fso.FolderExists(SBALoanPath) Then
      Else
        SBALoanPath = ""
      End If
    End If
    Set fso = Nothing
    Dim dlg2 As Object
    Set dlg2 = Dialogs(wdDialogFileSaveAs)
    If InStr(dlg2.Name, "\") > 0 Then
        dlg2.Name = dlg2.Name
    Else
        dlg2.Name = SBALoanPath
    End If
    dlg2.Format = 0
    On Error Resume Next
    ChangeFileOpenDirectory SBALoanPath
    With dlg2
        If .Show = -1 Then
          frmWizardStatus.Tag = True
        Else
          frmWizardStatus.Tag = False
        End If
    End With
    On Error Resume Next
    Dim dlg As Object: Set dlg = Dialogs(wdDialogToolsOptionsFileLocations)
    Options.DefaultFilePath(wdDocumentsPath) = dlg.setting + "\"
On Error GoTo -1: On Error GoTo 0
ActiveDocument.AttachedTemplate.Saved = True
EndSave:
Set dlg = Nothing
Set dlg2 = Nothing
Set fso = Nothing
End Sub
Public Sub SaveInclude()
    TableUpdate.Main
End Sub
Attribute VB_Name = "FileSaveAs"
Public Sub Main()
    FileSaveApp.udSaveAs
End Sub
Attribute VB_Name = "FileSaveAs1"
Public Sub Main()
    FileSaveApp.udSaveAs
End Sub
Attribute VB_Name = "GotoAC1"
Public Sub Main()
  CCRunning = False
  GotoSection.Main "S_AdditionalConditions_1"
End Sub
Attribute VB_Name = "GotoAC2"
Public Sub Main()
  CCRunning = False
    GotoSection.Main "S_AdditionalConditions_2"
End Sub
Attribute VB_Name = "GotoCC"
Public Sub Main()
  CCRunning = True
    GotoSection.Main "S_CollateralConditions"
End Sub
Attribute VB_Name = "GotoLI"
Public Sub Main()
    CCRunning = False
    GotoSection.Main "S_LoanInfo"
End Sub
Attribute VB_Name = "GotoNT"
Public Sub Main()
  CCRunning = False
    GotoSection.Main "S_NoteTerms"
End Sub
Attribute VB_Name = "GotoSection"
Public Sub Main(Section)
'=============================================================
' GotoSection.MAIN
' Section (Variant)
' Sub
'-------------------------------------------------------------
' Modified 08-27-2001 WordBasic to VBA
' Author : Daniel H. Smith, Programmer/Analyst
' Notes :  Complete
'-------------------------------------------------------------
' Revision History
'-------------------------------------------------------------
' 08-27-2001 DHS:
'=============================================================
' End Code Header block

'frmMain.ShowBlankPage
'Application.ScreenUpdating = False
'Application.ScreenRefresh
    If Mid(Application.Version, 1, 2) >= 12 Then
      WizLib.MinimizeRibbon
    End If
If Val(Application.Version) <= 10 Then
Else
  CommandBars("Task Pane").visible = False
End If
CommandBars("Reviewing").visible = False
WizLib.CheckDocMap
frmPleaseWait.lblWaitActivity.Caption = "Locating section ..."
frmPleaseWait.Show


VersionSpecific.ClearUndoStack
Dim X As Integer
X = 0
For Each dv In ActiveDocument.Variables
  If dv.Name = "MainDoc" Then
    X = Len(ActiveDocument.Variables("MainDoc").Value)
  End If
Next dv
If PrintPreview = False And X = 0 Then
  WizLib.CheckTemplate
  System.Cursor = wdCursorWait
  Application.ScreenUpdating = False
'Added 9/11/2006 to allow use in Word 2003
  On Error Resume Next
  If ActiveDocument.ProtectionType <> wdNoProtection Then
    ActiveDocument.Unprotect "snad7623"
  End If
'  On Error Resume Next
'  If ActiveDocument.ProtectionType <> wdNoProtection Then
'    ActiveDocument.Unprotect
'  End If
  On Error GoTo -1: On Error GoTo 0
  With ActiveWindow.View
      .Type = wdPageView
      .Zoom.PageFit = wdPageFitBestFit
      .ShowBookmarks = False
      .ShowFieldCodes = False
      .ShowHiddenText = False
      .ShowParagraphs = False
      .ShowSpaces = False
      .ShowTabs = False
      .ShowAll = False
      .ShowHiddenText = True
  End With
  ActiveDocument.ShowRevisions = False
  frmMain.ShowBlankPage
  If Section = Empty Then
      Section = "S_LoanInfo"
  End If
  Selection.GoTo What:=wdGoToBookmark, Name:=Section
  Selection.MoveDown wdScreen, 2
  Selection.GoTo What:=wdGoToBookmark, Name:=Section
  Selection.EndKey wdLine
  frmPleaseWait.lblWaitMessage.Width = 166.5
  frmPleaseWait.lblWaitMessage.Caption = "Done!    "
  frmPleaseWait.Show
  Application.ScreenRefresh
    If CCid > 0 Then
'Added 9/11/2006 to work with Word 2003
   On Error Resume Next
   If Val(Application.Version) >= 11 And ActiveDocument.ProtectionType <> wdAllowOnlyReading Then
    ActiveDocument.Protect wdAllowOnlyReading, , "snad7623"
   Else
    ActiveDocument.Protect wdAllowOnlyComments
   End If
'      ActiveDocument.Protect wdAllowOnlyComments
    End If
End If
'ActiveDocument.Protect wdAllowOnlyComments
'Added 9/11/2006 to work with Word 2003
   On Error Resume Next
   If Val(Application.Version) >= 11 And ActiveDocument.ProtectionType <> wdAllowOnlyReading Then
    ActiveDocument.Protect wdAllowOnlyReading, , "snad7623"
   Else
    ActiveDocument.Protect wdAllowOnlyComments
   End If
ActiveDocument.ShowRevisions = False
For Each ctl In CommandBars("Tools").Controls
  If ctl.Caption = CStr("Un&protect Document") Then
    CommandBars("Tools").Controls("Un&protect Document").Delete
    Exit For
  End If
Next ctl
AllVersions "NoPreserve"
ActiveDocument.AttachedTemplate.Saved = True
End Sub
Attribute VB_Name = "GotoUP"
Public Sub Main()
  CCRunning = False
    GotoSection.Main "S_UseOfProceeds"
End Sub
Attribute VB_Name = "InitializeDoc"
Dim Section As String
Dim InitPass As Integer

Public Sub Main()

'=============================================================
' InitializeDoc.MAIN
'
' Sub
'-------------------------------------------------------------
' Modified 08-27-2001 WordBasic to VBA
' Author : Daniel H. Smith, Programmer/Analyst
' Notes :  Complete
'-------------------------------------------------------------
' Revision History
'-------------------------------------------------------------
' 08-27-2001 DHS:
'=============================================================
' End Code Header block
    Dim CurVer As Integer
    Application.ScreenRefresh
    frmPleaseWait.lblWaitActivity.Caption = "Initializing document ..."
    frmPleaseWait.Show
    frmMain.ShowBlankPage
    CurVer = Val(Application.Version)

    MySection = "HKEY_CURRENT_USER\Software\SBA\" + WizInfo.WizSection + "\" + WizInfo.WizVer
    xx = System.PrivateProfileString("", MySection, "NoList")
    If xx <> "True" Or xx = "" Then
        SaveAsDefault "NoList", "False"  'Means SBA Offices List does exist.
    End If
    xx = System.PrivateProfileString("", MySection, "NoEmpList")
    If xx <> "True" Or xx = "" Then
        SaveAsDefault "NoEmpList", "False"  'Means EmpList does exist.
    End If

    WizLib.CheckDocMap

If Mid(Application.Version, 1, 2) >= 12 Then
  WizLib.MinimizeRibbon
End If
    Dim MsgTxt$
    If Mid(Application.Version, 1, InStr(1, Application.Version, ".") - 1) > 7 Or Mid(Application.Version, 1, 2) > 11 Then
        If InitPass = 0 Then
            PrepareDocument
            'WizLib.AddBeta (ActiveDocument.CustomDocumentProperties(spropName).Value)
            InitPass = InitPass + 1
        Else
            InitPass = 0
        End If
    'ElseIf Mid(Application.Version, 1, 2) = 10 Or Mid(Application.Version, 1, 2) = 11 Then
    '  PrepareDocument
        GotoSection.Main "S_LoanInfo"
    'If Mid(Application.Version, 1, 1) > 7 Then
    '  PrepareDocument
    'ElseIf Mid(Application.Version, 1, 2) = 10 Or Mid(Application.Version, 1, 2) = 11 Then
    '  PrepareDocument
    Else
        ActiveDocument.Close
        MsgTxt = "The " + WizName + "Authorization Wizard installed on this " + _
                 "computer was not designed for this version of Microsoft " + _
                 "Word." + Chr(13) + Chr(13) + "Please make sure to " + _
                 "install the correct version and try again."
        MsgBox MsgTxt, vbCritical + vbOKOnly, WizName
    End If
End Sub

Private Sub PrepareDocument()

'=============================================================
' InitializeDoc.PrepareDocument
'
' Sub
'-------------------------------------------------------------
' Modified 08-27-2001 WordBasic to VBA
' Author : Daniel H. Smith, Programmer/Analyst
' Notes :  Complete
'-------------------------------------------------------------
' Revision History
'-------------------------------------------------------------
' 08-27-2001 DHS:
'=============================================================
' End Code Header block
'Application.ScreenUpdating = False

    Dim xx
    On Error Resume Next

    'Added 9/11/2006 to allow use in Word 2003
    On Error Resume Next
    If ActiveDocument.ProtectionType <> wdNoProtection Then
        ActiveDocument.Unprotect "snad7623"
    End If
    '  If ActiveDocument.ProtectionType <> wdNoProtection Then
    '    ActiveDocument.Unprotect
    '  End If
    WizLib.CheckDocMap
    With ActiveDocument
        .TrackRevisions = False
        .PrintRevisions = False
        .ShowRevisions = False
    '  .AcceptAllRevisions = True
    End With
    With ActiveWindow.View
        .Draft = False
        .WrapToWindow = False
        .ShowPicturePlaceHolders = False
        .ShowFieldCodes = False
        .ShowBookmarks = False
        .ShowTabs = False
        .ShowSpaces = False
        .ShowParagraphs = False
        .ShowHiddenText = True
        .ShowAll = False
    End With
    ResetToolbars.Main
    CommandBars("Reviewing").visible = False
    If ActiveDocument.Bookmarks("Complete_LI").Range.Text = 0 And WizInfo.IsInDev = False Then
        CommandBars("7a Wizard").Controls("Repayment Terms").enabled = False
    Else
        CommandBars("7a Wizard").Controls("Repayment Terms").enabled = True
    End If
    If ActiveDocument.Bookmarks("Complete_RT").Range.Text = 0 And WizInfo.IsInDev = False Then
        CommandBars("7a Wizard").Controls("Use of Proceeds").enabled = False
    Else
        CommandBars("7a Wizard").Controls("Use of Proceeds").enabled = True
    End If
    If ActiveDocument.Bookmarks("Complete_UP").Range.Text = 0 And WizInfo.IsInDev = False Then
        CommandBars("7a Wizard").Controls("Collateral Cond.").enabled = False
        CommandBars("7a Wizard").Controls("Additional Cond. (1)").enabled = False
        CommandBars("7a Wizard").Controls("Additional Cond. (2)").enabled = False
    Else
        CommandBars("7a Wizard").Controls("Collateral Cond.").enabled = True
        CommandBars("7a Wizard").Controls("Additional Cond. (1)").enabled = True
        CommandBars("7a Wizard").Controls("Additional Cond. (2)").enabled = True
    End If
    Dim TOS As Object: Set TOS = Dialogs(wdDialogToolsOptionsSpellingAndGrammar)
    xx = TOS.AutomaticSpellChecking
    ActiveDocument.Variables.Add ("AutomaticSpellChecking"), Str(xx)
    TimeNow = Format(Now(), "nn")
    For Each aVar In ActiveDocument.Variables
        If aVar.Name = "CurrentTime" Then
            ActiveDocument.Variables(aVar.Name).Delete
        End If
    Next aVar
    ActiveDocument.Variables.Add ("CurrentTime"), TimeNow
    '    GotoSection.Main "S_LoanInfo"
    'Added 9/11/2006 to allow use in Word 2003
    On Error Resume Next
    If ActiveDocument.ProtectionType <> wdNoProtection Then
        ActiveDocument.Unprotect "snad7623"
    End If
    '  If ActiveDocument.ProtectionType <> wdNoProtection Then
    '    ActiveDocument.Unprotect
    '  End If
    '    ActiveDocument.Protect wdAllowOnlyComments
    'Added 9/11/2006 to work with Word 2003
    On Error Resume Next
    If Val(Application.Version) >= 11 And ActiveDocument.ProtectionType <> wdAllowOnlyReading Then
        ActiveDocument.Protect wdAllowOnlyReading, , "snad7623"
    Else
        ActiveDocument.Protect wdAllowOnlyComments
    End If
    AllVersions "Nopreserve"
    ActiveDocument.ShowRevisions = False
    WizLib.CopyDataFiles
    Set TOS = Nothing
    For Each ctl In CommandBars("Tools").Controls
        If ctl.Caption = CStr("Un&protect Document") Then
            CommandBars("Tools").Controls("Un&protect Document").Delete
            Exit For
        End If
    Next ctl
    AllVersions ("Preserve")
End Sub
Sub AllVersions(State As String)
    On Error Resume Next
    If Val(Application.Version) >= 11 And ActiveDocument.ProtectionType = wdAllowOnlyReading Then
        ActiveDocument.Unprotect "snad7623"
    Else
        ActiveDocument.Unprotect
    End If
    If State = "Preserve" Then
        fSmartCutAndPaste = Application.Options.SmartCutPaste
'        UpdateText "SmartCutPaste", fSmartCutAndPaste
        Options.SmartCutPaste = False
    Else
        Options.SmartCutPaste = ActiveDocument.Bookmarks.Item("SmartCutPaste").Range.Text
    End If
    If State = "NoPreserve" Then
        If Val(Application.Version) >= 11 Then
            On Error Resume Next
            ActiveDocument.Protect wdAllowOnlyReading, , "snad7623"
        Else
            On Error Resume Next
            ActiveDocument.Protect wdAllowOnlyComments
        End If
    End If
    '  frmMain.ShowBlankPage
    '  CommandBars("Task Pane").Visible = False
End Sub

Attribute VB_Name = "Level1"
Public Sub Main()
On Error Resume Next
    Selection.Paragraphs.Style = "Heading 1"
On Error GoTo -1: On Error GoTo 0
End Sub
Attribute VB_Name = "Level2"
Public Sub Main()
On Error Resume Next
    Selection.Paragraphs.Style = "Heading 2"
On Error GoTo -1: On Error GoTo 0
End Sub
Attribute VB_Name = "Level3"
Public Sub Main()
On Error Resume Next
    Selection.Paragraphs.Style = "Heading 3"
On Error GoTo -1: On Error GoTo 0
End Sub
Attribute VB_Name = "Level4"
Public Sub Main()
On Error Resume Next
    Selection.Paragraphs.Style = "Heading 4"
On Error GoTo -1: On Error GoTo 0
End Sub
Attribute VB_Name = "Level5"
Public Sub Main()
On Error Resume Next
    Selection.Paragraphs.Style = "Heading 5"
On Error GoTo -1: On Error GoTo 0
End Sub
Attribute VB_Name = "Level6"
Public Sub Main()
On Error Resume Next
    Selection.Paragraphs.Style = "Heading 6"
On Error GoTo -1: On Error GoTo 0
End Sub
Attribute VB_Name = "Mods2007"
Dim OrigState As Boolean
Public Sub EndMod()
    'Word2007Update TableModify
    HideShowOptions "Show"
    HideShowNav "Hide"
    HideShowTools "Hide"
End Sub

Public Sub EndCancel()
    'Word2007Update Table Cancel
    HideShowOptions "Hide"
    HideShowNav "Show"
    HideShowTools "Show"
    OrigState = ActiveDocument.Bookmarks.Item("TaskbarState").Range.Text
    Application.ShowWindowsInTaskbar = OrigState
End Sub

Public Sub EndUpdate()
    'Word2007 Compatibility
    HideShowOptions "Hide"
    HideShowNav "Show"
    HideShowTools "Show"
    OrigState = ActiveDocument.Bookmarks.Item("TaskbarState").Range.Text
'    MsgBox OrigState
    Application.ShowWindowsInTaskbar = OrigState
End Sub

Public Sub ShowRibbon()
    RefreshRibbon
End Sub

Public Sub SetTaskbar()
  'Word 2007 WindowsinTaskbar
    Dim OrigState As Boolean
    Selection.MoveRight Unit:=wdCharacter, Count:=1
    With ActiveDocument.Bookmarks
        .Add Range:=Selection.Range, Name:="Mod"
    End With
  OrigState = Application.ShowWindowsInTaskbar
  ' store the current value
  UpdateText "TaskbarState", OrigState
    Selection.GoTo What:=wdGoToBookmark, Name:="Mod"
    ActiveDocument.Bookmarks("Mod").Delete
  '-----------------------
End Sub
Attribute VB_Name = "NumberOnOff"
Public Sub Main()

'=============================================================
' NumberOnOff.MAIN
'
' Sub
'-------------------------------------------------------------
' Modified 08-27-2001 WordBasic to VBA
' Author : Daniel H. Smith, Programmer/Analyst
' Notes :  Complete
'-------------------------------------------------------------
' Revision History
'-------------------------------------------------------------
' 08-27-2001 DHS:  Not Used ... only for Word 95/Word 97
' Compatibility 7/31/02
'=============================================================
' End Code Header block
On Error Resume Next
Select Case Selection.Style.NameLocal
Case "Heading 1"
    ActiveDocument.Paragraphs.Style = "Indent1"
Case "Heading 2"
    ActiveDocument.Paragraphs.Style = "Indent2"
Case "Heading 3"
    ActiveDocument.Paragraphs.Style = "Indent3"
Case "Heading 4"
    ActiveDocument.Paragraphs.Style = "Indent4"
Case "Heading 5"
    ActiveDocument.Paragraphs.Style = "Indent5"
Case "Indent1"
    ActiveDocument.Paragraphs.Style = "Heading 1"
Case "Indent2"
    ActiveDocument.Paragraphs.Style = "Heading 2"
Case "Indent3"
    ActiveDocument.Paragraphs.Style = "Heading 3"
Case "Indent4"
    ActiveDocument.Paragraphs.Style = "Heading 4"
Case "Indent5"
    ActiveDocument.Paragraphs.Style = "Heading 5"
Case Else
End Select
On Error GoTo -1: On Error GoTo 0
End Sub
Attribute VB_Name = "PopulateACArrays"
Dim US_State(60, 2)

Public Sub RepaymentList(ByRef cbxControl As control)
Dim SARepayment(4) 'Standby Agreement
SARepayment(0) = "No Payments"
SARepayment(1) = "Interest Rate only"
SARepayment(2) = "Monthly Payment and Interest Rate"
SARepayment(3) = "Monthly Payment, Interest Rate and Beginning Date"
SARepayment(4) = "Write Your Own"
cbxControl.Clear
For xx = 0 To UBound(SARepayment())
    cbxControl.AddItem SARepayment(xx)
Next xx
If cbxControl.ListIndex > 0 Then
    cbxControl.ListIndex = cbxControl.ListIndex 'from doc
Else
     cbxControl.ListIndex = 0
End If
End Sub

Public Sub BooksRecordsList(ByRef cbxControl As control)
Dim CAStatement(3) 'Certifications and Agreements
CAStatement(0) = "year-end statements"
CAStatement(1) = "compiled year-end statements"
CAStatement(2) = "reviewed year-end statements"
CAStatement(3) = "audited year-end statements"
cbxControl.Clear
For xx = 0 To UBound(CAStatement())
    cbxControl.AddItem CAStatement(xx)
Next xx
If cbxControl.ListIndex > 0 Then
    cbxControl.ListIndex = cbxControl.ListIndex 'from doc
Else
     cbxControl.ListIndex = 0
End If
End Sub

Public Sub StatesList(ByRef cbxControl As control)
Dim US_State(60, 2)
cbxControl.ColumnCount = 2
US_State(0, 1) = ""
US_State(0, 2) = ""
US_State(1, 1) = "AL"
US_State(1, 2) = "Alabama"
US_State(2, 1) = "AK"
US_State(2, 2) = "Alaska"
US_State(3, 1) = "AS"
US_State(3, 2) = "American Samoa"
US_State(4, 1) = "AZ"
US_State(4, 2) = "Arizona"
US_State(5, 1) = "AR"
US_State(5, 2) = "Arkansas"
US_State(6, 1) = "CA"
US_State(6, 2) = "California"
US_State(7, 1) = "CO"
US_State(7, 2) = "Colorado"
US_State(8, 1) = "CT"
US_State(8, 2) = "Connecticut"
US_State(9, 1) = "DE"
US_State(9, 2) = "Delaware"
US_State(10, 1) = "DC"
US_State(10, 2) = "the District of Columbia"
US_State(11, 1) = "FM"
US_State(11, 2) = "the Fed. States of Micronesia"
US_State(12, 1) = "FL"
US_State(12, 2) = "Florida"
US_State(13, 1) = "GA"
US_State(13, 2) = "Georgia"
US_State(14, 1) = "GU"
US_State(14, 2) = "Guam"
US_State(15, 1) = "HI"
US_State(15, 2) = "Hawaii"
US_State(16, 1) = "ID"
US_State(16, 2) = "Idaho"
US_State(17, 1) = "IL"
US_State(17, 2) = "Illinois"
US_State(18, 1) = "IN"
US_State(18, 2) = "Indiana"
US_State(19, 1) = "IA"
US_State(19, 2) = "Iowa"
US_State(20, 1) = "KS"
US_State(20, 2) = "Kansas"
US_State(21, 1) = "KY"
US_State(21, 2) = "Kentucky"
US_State(22, 1) = "LA"
US_State(22, 2) = "Louisiana"
US_State(23, 1) = "ME"
US_State(23, 2) = "Maine"
US_State(24, 1) = "MH"
US_State(24, 2) = "the Marshall Islands"
US_State(25, 1) = "MD"
US_State(25, 2) = "Maryland"
US_State(26, 1) = "MA"
US_State(26, 2) = "Massachusetts"
US_State(27, 1) = "MI"
US_State(27, 2) = "Michigan"
US_State(28, 1) = "MN"
US_State(28, 2) = "Minnesota"
US_State(29, 1) = "MS"
US_State(29, 2) = "Mississippi"
US_State(30, 1) = "MO"
US_State(30, 2) = "Missouri"
US_State(31, 1) = "MP"
US_State(31, 2) = "the Northern Mariana Is."
US_State(32, 1) = "MT"
US_State(32, 2) = "Montana"
US_State(33, 1) = "NE"
US_State(33, 2) = "Nebraska"
US_State(34, 1) = "NV"
US_State(34, 2) = "Nevada"
US_State(35, 1) = "NH"
US_State(35, 2) = "New Hampshire"
US_State(36, 1) = "NJ"
US_State(36, 2) = "New Jersey"
US_State(37, 1) = "NM"
US_State(37, 2) = "New Mexico"
US_State(38, 1) = "NY"
US_State(38, 2) = "New York"
US_State(39, 1) = "NC"
US_State(39, 2) = "North Carolina"
US_State(40, 1) = "ND"
US_State(40, 2) = "North Dakota"
US_State(41, 1) = "OH"
US_State(41, 2) = "Ohio"
US_State(42, 1) = "OK"
US_State(42, 2) = "Oklahoma"
US_State(43, 1) = "OR"
US_State(43, 2) = "Oregon"
US_State(46, 1) = "PW"
US_State(46, 2) = "Palau"
US_State(44, 1) = "PA"
US_State(44, 2) = "Pennsylvania"
US_State(45, 1) = "PR"
US_State(45, 2) = "Puerto Rico"
US_State(47, 1) = "RI"
US_State(47, 2) = "Rhode Island"
US_State(48, 1) = "SC"
US_State(48, 2) = "South Carolina"
US_State(49, 1) = "SD"
US_State(49, 2) = "South Dakota"
US_State(50, 1) = "TN"
US_State(50, 2) = "Tennessee"
US_State(51, 1) = "TX"
US_State(51, 2) = "Texas"
US_State(52, 1) = "UT"
US_State(52, 2) = "Utah"
US_State(53, 1) = "VT"
US_State(53, 2) = "Vermont"
US_State(54, 1) = "VA"
US_State(54, 2) = "Virginia"
US_State(55, 1) = "VI"
US_State(55, 2) = "the Virgin Islands"
US_State(56, 1) = "WA"
US_State(56, 2) = "Washington"
US_State(57, 1) = "WV"
US_State(57, 2) = "West Virginia"
US_State(58, 1) = "WI"
US_State(58, 2) = "Wisconsin"
US_State(59, 1) = "WY"
US_State(59, 2) = "Wyoming"
cbxControl.Clear
For xx = 0 To UBound(US_State())
    cbxControl.AddItem US_State(xx, 1) 'Abbreviation
    cbxControl.List(xx, 2) = US_State(xx, 2) 'Written out
Next xx
'If cbxControl.ListIndex > 0 Then
'    cbxControl.ListIndex = cbxControl.ListIndex 'from doc
'Else
'     cbxControl.ListIndex = 0
'End If
End Sub
Attribute VB_Name = "PopulateCCArrays"
Dim Evidence__(9)
Public Sub CCWriteYourOwn(ByRef cbxControl As control)
  cbxControl.AddItem "E. WRITE YOUR OWN:"
  cbxControl.AddItem "     Write your own"
End Sub

Public Sub CCGuaranteeList(ByRef cbxControl As control)
Dim CCGuaranteeList(4, 2) 'Guarantee
Dim CCTitle(4)
Dim CCInfo(4)
Dim CCid(4)

i = 0
CCTitle(i) = "A. PERSONAL OR CORPORATE GUARANTEES:"
CCInfo(i) = ""
CCid(i) = ""
i = i + 1
CCTitle(i) = "   1.  Full Unsecured Guarantee"
CCInfo(i) = "Use this option to create a " + CCTitle(i)
CCid(i) = 290
i = i + 1
CCTitle(i) = "   2.  Full Secured Guarantee"
CCInfo(i) = "Use this option to create a " + CCTitle(i)
CCid(i) = 291
i = i + 1
CCTitle(i) = "   3.  Limited Unsecured Guarantee"
CCInfo(i) = "Use this option to create a " + CCTitle(i)
CCid(i) = 292
i = i + 1
CCTitle(i) = "   4.  Limited Secured Guarantee"
CCInfo(i) = "Use this option to create a " + CCTitle(i)
CCid(i) = 293
cbxControl.Clear
For xx = 0 To UBound(CCGuaranteeList())
    cbxControl.AddItem CCTitle(xx)
    cbxControl.List(xx, 1) = CCInfo(xx)
    cbxControl.List(xx, 2) = CCid(xx)
Next xx
If cbxControl.ListIndex > 0 Then
    cbxControl.ListIndex = cbxControl.ListIndex 'from doc
Else
     cbxControl.ListIndex = 0
End If
End Sub
Public Sub CCRealtyList(ByRef cbxControl As control)
Dim CCRealtyList(10, 2) 'Guarantee
Dim CCTitle(10)
Dim CCInfo(10)
Dim CCid(10)

i = 0
CCTitle(i) = "B. REALTY AND LEASEHOLDS:"
CCInfo(i) = ""
CCid(i) = 0
i = i + 1
CCTitle(i) = "   1.  Lien on Land and Improvements"
CCInfo(i) = "Use this option to create a " + CCTitle(i)
CCid(i) = 1
i = i + 1
CCTitle(i) = "   2.  Collateral Assignment of Purchaser's Interest in Land Contract of Sale"
CCInfo(i) = "Use this option to create a " + CCTitle(i)
CCid(i) = 2
i = i + 1
CCTitle(i) = "   3.  Collateral Assignment of Seller's Interest in Land Contract for Sale"
CCInfo(i) = "Use this option to create a " + CCTitle(i)
CCid(i) = 3
i = i + 1
CCTitle(i) = "   4.  Assignment of Beneficial Interest in Land Trust"
CCInfo(i) = "Use this option to create an " + CCTitle(i)
CCid(i) = 5
i = i + 1
CCTitle(i) = "   5.  Leasehold Instrument on Building Constructed on Leased Land"
CCInfo(i) = "Use this option to create a " + CCTitle(i)
CCid(i) = 4
i = i + 1
CCTitle(i) = "   6.  Leasehold Security Interest in Building on Leased Land"
CCInfo(i) = "Use this option to create a " + CCTitle(i)
CCid(i) = 22
i = i + 1
CCTitle(i) = "   7.  Lessee|fffd|s Interest in a Lease, by Assigment"
CCInfo(i) = "Use this option to create a " + CCTitle(i)
CCid(i) = 23
i = i + 1
CCTitle(i) = "   8.  Lessee|fffd|s Interest in a Lease, by Lien, Mortgage or Deed of Trust"
CCInfo(i) = "Use this option to create a " + CCTitle(i)
CCid(i) = 24
i = i + 1
CCTitle(i) = "   9.  Leasehold on Tribal Land"
CCInfo(i) = "Use this option to create a " + CCTitle(i)
CCid(i) = 27
i = i + 1
CCTitle(i) = "  10.  Security Interest in Cooperative Apartment"
CCInfo(i) = "Use this option to create a " + CCTitle(i)
CCid(i) = 6

cbxControl.Clear
For xx = 0 To UBound(CCRealtyList())
    cbxControl.AddItem CCTitle(xx)
    cbxControl.List(xx, 1) = CCInfo(xx)
    cbxControl.List(xx, 2) = CCid(xx)
Next xx
If cbxControl.ListIndex > 0 Then
    cbxControl.ListIndex = cbxControl.ListIndex 'from doc
Else
     cbxControl.ListIndex = 0
End If
End Sub

Public Sub CCAssignmentList(ByRef cbxControl As control)
Dim CCAssignmentList(8, 2) 'Assignment
Dim CCTitle(8)
Dim CCInfo(8)
Dim CCid(8)

i = 0
CCTitle(i) = "D. ASSIGNMENT OF INTEREST:"
CCInfo(i) = ""
i = i + 1
CCTitle(i) = "   1.  Certificate of Deposit"
CCInfo(i) = "Use this option to create an " + CCTitle(i)
CCid(i) = 20
i = i + 1
CCTitle(i) = "   2.  Mutual Fund"
CCInfo(i) = "Use this option to create an " + CCTitle(i)
CCid(i) = 13
i = i + 1
CCTitle(i) = "   3.  Corporate Stock (by Pledge)"
CCInfo(i) = "Use this option to create an " + CCTitle(i)
CCid(i) = 12
i = i + 1
CCTitle(i) = "   4.  Note"
CCInfo(i) = "Use this option to create an " + CCTitle(i)
CCid(i) = 18
i = i + 1
CCTitle(i) = "   5.  Contract"
CCInfo(i) = "Use this option to create an " + CCTitle(i)
CCid(i) = 17
i = i + 1
CCTitle(i) = "   6.  Government Contract"
CCInfo(i) = "Use this option to create an " + CCTitle(i)
CCid(i) = 16
i = i + 1
CCTitle(i) = "   7.  U.S. Patent"
CCInfo(i) = "Use this option to create an " + CCTitle(i)
CCid(i) = 21
i = i + 1
' CCTitle(i) = "   8.  Franchise Agreement"                                     ' Removed 7/3/2018 RH
' CCInfo(i) = "Use this option to create an " + CCTitle(i)                      ' Removed 7/3/2018 RH
' CCid(i) = 28                                                                  ' Removed 7/3/2018 RH


cbxControl.Clear
For xx = 0 To UBound(CCAssignmentList())
    cbxControl.AddItem CCTitle(xx)
    cbxControl.List(xx, 1) = CCInfo(xx)
    cbxControl.List(xx, 2) = CCid(xx)
Next xx
If cbxControl.ListIndex > 0 Then
    cbxControl.ListIndex = cbxControl.ListIndex 'from doc
Else
     cbxControl.ListIndex = 0
End If
End Sub


Public Sub CCSecurityList(ByRef cbxControl As control)
Dim CCSecurityList(7, 2) 'Assignment
Dim CCTitle(7)
Dim CCInfo(7)
Dim CCid(7)

i = 0
CCTitle(i) = "C. SECURITY INTEREST:"
CCInfo(i) = ""
CCid(i) = -1
i = i + 1
CCTitle(i) = "   1.  Personal Property"
CCInfo(i) = "Use this option to create a " + CCTitle(i)
CCid(i) = 7
i = i + 1
CCTitle(i) = "    1a.  Personal Property (PUERTO RICO Chattel Mortgage)"
CCInfo(i) = "Use this option to create a " + CCTitle(i)
CCid(i) = 7
i = i + 1
CCTitle(i) = "   2.  Liquor License"
CCInfo(i) = "Use this option to create a " + CCTitle(i)
CCid(i) = 11
i = i + 1
CCTitle(i) = "   3.  Vehicle"
CCInfo(i) = "Use this option to create a " + CCTitle(i)
CCid(i) = 9
i = i + 1
CCTitle(i) = "   4.  Mobile Home"
CCInfo(i) = "Use this option to create a " + CCTitle(i)
CCid(i) = 10
i = i + 1
CCTitle(i) = "   5.  Aircraft"
CCInfo(i) = "Use this option to create a " + CCTitle(i)
CCid(i) = 14
i = i + 1
CCTitle(i) = "   6.  Vessel"
CCInfo(i) = "Use this option to create a " + CCTitle(i)
CCid(i) = 15

cbxControl.Clear
For xx = 0 To UBound(CCSecurityList())
    cbxControl.AddItem CCTitle(xx)
    cbxControl.List(xx, 1) = CCInfo(xx)
    cbxControl.List(xx, 2) = CCid(xx)
Next xx
If cbxControl.ListIndex > 0 Then
    cbxControl.ListIndex = cbxControl.ListIndex 'from doc
Else
     cbxControl.ListIndex = 0
End If
End Sub

Public Sub CCLienList(ByRef cbxControl As control)
Dim CCLienList(5) 'Assignment

CCLienList(0) = "First"
CCLienList(1) = "Second"
CCLienList(2) = "Third"
CCLienList(3) = "Fourth"
CCLienList(4) = "Fifth"

cbxControl.Clear
For xx = 0 To UBound(CCLienList())
    cbxControl.AddItem CCLienList(xx)
Next xx
If cbxControl.ListIndex > 0 Then
    cbxControl.ListIndex = cbxControl.ListIndex 'from doc
Else
     cbxControl.ListIndex = 0
End If
End Sub

Public Sub CCPropertyList(ByRef cbxControl As control)
Dim C7Owned(1) 'Assignment

C7Owned(0) = "whether now owned or later acquired"
C7Owned(1) = "acquired with loan or project proceeds, including all replacements and substitutions"
'C7Owned(2) = "whether now owned or later acquired, or acquired with loan proceeds, including all replacements and substitutions"

cbxControl.Clear
For xx = 0 To UBound(C7Owned())
    cbxControl.AddItem C7Owned(xx)
Next xx
If cbxControl.ListIndex > 0 Then
    cbxControl.ListIndex = cbxControl.ListIndex 'from doc
Else
     cbxControl.ListIndex = 0
End If
End Sub

Public Sub CCTypeList(ByRef cbxControl As control)
Dim C24Type(2) 'Assignment

C24Type(0) = "commercial"
C24Type(1) = "residential"
' C24Type(2) = "agricultural"  ' Removed 4/2/2018 RH

cbxControl.Clear
For xx = 0 To UBound(C24Type())
    cbxControl.AddItem C24Type(xx)
Next xx
If cbxControl.ListIndex > 0 Then
    cbxControl.ListIndex = cbxControl.ListIndex 'from doc
Else
     cbxControl.ListIndex = 0
End If
End Sub

Public Sub CCInstrumentList(ByRef cbxControl As control)
Dim Instrument(4) 'Assignment

Instrument(0) = "Mortgage"
Instrument(1) = "Deed of Trust"
Instrument(2) = " "
Instrument(3) = " "

cbxControl.Clear
For xx = 0 To UBound(Instrument())
    cbxControl.AddItem Instrument(xx)
Next xx
If cbxControl.ListIndex > 0 Then
    cbxControl.ListIndex = cbxControl.ListIndex 'from doc
Else
     cbxControl.ListIndex = 0
End If
End Sub

Public Sub CCEvidenceList(ByRef cbxControl As control)

Evidence__(1) = "ALTA Loan Policy insuring lender and assigns"
Evidence__(2) = "Mortgagee's Title Policy insuring lender and assigns"
Evidence__(3) = "Attorney's Certificate of title, or title opinion in favor of lender (...)"
Evidence__(4) = "Title Insurance customarily obtained for similar transactions in this state"
Evidence__(5) = "Title and/or Lien Search, or other evidence of proper ownership (...)"
Evidence__(6) = "CLTA Loan Policy"
Evidence__(7) = "Limited Title Policy"
Evidence__(8) = "Property, Judgment and Lien Report indicating lender obtained required position"

cbxControl.Clear
For xx = 1 To UBound(Evidence__())
    cbxControl.AddItem Evidence__(xx)
Next xx
End Sub

Public Sub CCPrimaryResProp(ByRef cbxControl As control)
Dim ResProp(2) 'Resident type for properties

ResProp(0) = "Borrower"
ResProp(1) = "Guarantor"

cbxControl.Clear
For xx = 0 To UBound(ResProp())
    cbxControl.AddItem ResProp(xx)
Next xx
If cbxControl.ListIndex > 0 Then
    cbxControl.ListIndex = cbxControl.ListIndex 'from doc
Else
     cbxControl.ListIndex = 0
End If
End Sub
Attribute VB_Name = "PopulateEmpList"
Public Sub EmpList(ByRef cbxControl As control)
Dim EmpList(44)
EmpList(0) = "-, Loan Specialist"
EmpList(1) = "Eric Aylor, Supervisory Loan Specialist"
EmpList(2) = "Roger Barrick, Loan Specialist"
EmpList(3) = "Anthony Battistella, Loan Specialist"
EmpList(4) = "Pamela Browning, Loan Specialist"
EmpList(5) = "Kimberly Bury, Loan Specialist"
EmpList(6) = "Kim Caines, Loan Specialist"
EmpList(7) = "Eric Camp, Loan Specialist"
EmpList(8) = "Danielle Carpenter, Loan Specialist"
EmpList(9) = "Bryan Chaney, Loan Specialist"
EmpList(10) = "Jeremy Chang, Loan Specialist"
EmpList(11) = "Rhonda Couch, Loan Specialist"
EmpList(12) = "John Todd Forlini, Loan Specialist"
EmpList(13) = "Ronald Gendrich, Loan Specialist"
EmpList(14) = "Brendell Givens, Supervisory Loan Specialist"
EmpList(15) = "Sally Grabowski, Loan Specialist"
EmpList(16) = "June Griffy, Loan Specialist"
EmpList(17) = "Ethan Guertin, Loan Specialist"
EmpList(18) = "Michael Harbison, Loan Specialist"
EmpList(19) = "Theresa Hendrix, Supervisory Loan Specialist"
EmpList(20) = "Anthony Herron, Loan Specialist"
EmpList(21) = "Betty Hill, Supervisory Loan Specialist"
EmpList(22) = "William Higginbotham, Loan Specialist"
EmpList(23) = "Chris Hooker, Loan Specialist"
EmpList(24) = "Mark Jensen, Loan Specialist"
EmpList(25) = "Brian Jordan, Loan Specialist"
EmpList(26) = "Ahsan Kazmi, Loan Specialist"
EmpList(27) = "Linda Lambert, Loan Specialist"
EmpList(28) = "Curtis Lee, Loan Specialist"
EmpList(29) = "Annette May, Loan Specialist"
EmpList(30) = "Karen Miller, Loan Specialist"
EmpList(31) = "John Padilla, Loan Specialist"
EmpList(32) = "Pete Paganucci, Loan Specialist"
EmpList(33) = "Orisse Pastorino, Loan Specialist"
EmpList(34) = "Sam Pavlitsky, Loan Specialist"
EmpList(35) = "Chris Payne, Loan Specialist"
EmpList(36) = "Carolyn Porter, Loan Specialist"
EmpList(37) = "Roger Prince, Loan Specialist"
EmpList(38) = "Bill Reed, Loan Specialist"
EmpList(39) = "Peggy Reynolds, Loan Specialist"
EmpList(40) = "Daniel Smallhouse, Loan Specialist"
EmpList(41) = "Mark Smith, Loan Specialist"
EmpList(42) = "Mariebeth Torres, Loan Specialist"
EmpList(43) = "Donna Williams, Loan Specialist"
EmpList(44) = "Cheri Yam, Loan Specialist"

cbxControl.Clear
For xx = 0 To UBound(EmpList())
    If xx = 0 Then
    cbxControl.AddItem EmpList(0)
    Else
    cbxControl.AddItem EmpList(xx)
    End If
Next xx
If cbxControl.ListIndex > 0 Then
    cbxControl.ListIndex = cbxControl.ListIndex 'from doc
Else
     cbxControl.ListIndex = 0
End If
End Sub
Attribute VB_Name = "PopulateLIArrays"

Public Sub MaturityStartList(ByRef cbxControl As control)
Dim MaturityStart(1)
MaturityStart(0) = "date of Note"
MaturityStart(1) = "date of initial disbursement"
cbxControl.Clear
For xx = 0 To UBound(MaturityStart())
    cbxControl.AddItem MaturityStart(xx)
Next xx
If cbxControl.ListIndex > 0 Then
    cbxControl.ListIndex = cbxControl.ListIndex 'from doc
Else
     cbxControl.ListIndex = 0
End If
End Sub

Attribute VB_Name = "PopulatePTArrays"
Public Sub DayCountList(ByRef cbxControl As control)
Dim DayCount(32)
DayCount(0) = "same day as Note/first disbursement"
DayCount(1) = "__________"
DayCount(2) = "first"
DayCount(3) = "second"
DayCount(4) = "third"
DayCount(5) = "fourth"
DayCount(6) = "fifth"
DayCount(7) = "sixth"
DayCount(8) = "seventh"
DayCount(9) = "eighth"
DayCount(10) = "ninth"
DayCount(11) = "tenth"
DayCount(12) = "eleventh"
DayCount(13) = "twelfth"
DayCount(14) = "thirteenth"
DayCount(15) = "fourteenth"
DayCount(16) = "fifteenth"
DayCount(17) = "sixteenth"
DayCount(18) = "seventeenth"
DayCount(19) = "eighteenth"
DayCount(20) = "nineteenth"
DayCount(21) = "twentieth"
DayCount(22) = "twenty-first"
DayCount(23) = "twenty-second"
DayCount(24) = "twenty-third"
DayCount(25) = "twenty-fourth"
DayCount(26) = "twenty-fifth"
DayCount(27) = "twenty-sixth"
DayCount(28) = "twenty-seventh"
DayCount(29) = "twenty-eighth"
DayCount(30) = "twenty-ninth"
DayCount(31) = "thirtieth"
DayCount(32) = "thirty-first"
cbxControl.Clear
For xx = 0 To UBound(DayCount())
    If xx = 0 Then
    cbxControl.AddItem DayCount(0)
    Else
    cbxControl.AddItem DayCount(xx) & " calendar day"
    End If
Next xx
If cbxControl.ListIndex > 0 Then
    cbxControl.ListIndex = cbxControl.ListIndex 'from doc
Else
     cbxControl.ListIndex = 0
End If
End Sub


Public Sub TimePeriodList(ByRef cbxControl As control)
Dim TimePeriod(3)
TimePeriod(0) = "month"
TimePeriod(1) = "quarter"
TimePeriod(2) = "calendar quarter"
TimePeriod(3) = "year"
cbxControl.Clear
For xx = 0 To UBound(TimePeriod())
    cbxControl.AddItem TimePeriod(xx)
Next xx
If cbxControl.ListIndex > 0 Then
    cbxControl.ListIndex = cbxControl.ListIndex 'from doc
Else
     cbxControl.ListIndex = 0
End If
End Sub

Public Sub DFPPeriodList(ByRef cbxControl As control)
Dim TimePeriod(5)
TimePeriod(0) = "30"
TimePeriod(1) = "60"
TimePeriod(2) = "90"
TimePeriod(3) = "120"
TimePeriod(4) = "180"
TimePeriod(5) = "365"
cbxControl.Clear
For xx = 0 To UBound(TimePeriod())
    cbxControl.AddItem TimePeriod(xx)
Next xx
If cbxControl.ListIndex > 0 Then
    cbxControl.ListIndex = cbxControl.ListIndex 'from doc
Else
     cbxControl.ListIndex = 0
End If
End Sub



Public Sub TimeFrequencyList(cbxControl)
Dim TimeFrequency(4)
TimeFrequency(0) = "month"
TimeFrequency(1) = "months"
TimeFrequency(2) = "quarter"
TimeFrequency(3) = "calendar quarter"
TimeFrequency(4) = "year"
cbxControl.Clear
For xx = 0 To UBound(TimeFrequency())
    cbxControl.AddItem TimeFrequency(xx)
Next xx
If cbxControl.ListIndex > 0 Then
    cbxControl.ListIndex = cbxControl.ListIndex 'from doc
Else
     cbxControl.ListIndex = 0
End If

End Sub

Public Sub ChangePeriodList(cbxControl)
Dim ChangePeriod(9)
ChangePeriod(0) = "monthly"
'ChangePeriod(1) = "bimonthly"
ChangePeriod(1) = "quarterly"
ChangePeriod(2) = "every calendar quarter"
ChangePeriod(3) = "every ___ months"
ChangePeriod(4) = "semi-annually"
ChangePeriod(5) = "annually"
ChangePeriod(6) = "every calendar year"
ChangePeriod(7) = "every year"
ChangePeriod(8) = "every ___ years"
cbxControl.Clear
For xx = 0 To UBound(ChangePeriod())
    cbxControl.AddItem ChangePeriod(xx)
Next xx
If cbxControl.ListIndex > 0 Then
    cbxControl.ListIndex = cbxControl.ListIndex 'from doc
Else
     cbxControl.ListIndex = 0
End If

End Sub

Public Sub NumberTextList(ByRef cbxControl As control)
Dim NumberText(29)
NumberText(0) = "one"
NumberText(1) = "two"
NumberText(2) = "three"
NumberText(3) = "four"
NumberText(4) = "five"
NumberText(5) = "six"
NumberText(6) = "seven"
NumberText(7) = "eight"
NumberText(8) = "nine"
NumberText(9) = "ten"
NumberText(10) = "eleven"
NumberText(11) = "twelve"
NumberText(12) = "thirteen"
NumberText(13) = "fourteen"
NumberText(14) = "fifteen"
NumberText(15) = "sixteen"
NumberText(16) = "seventeen"
NumberText(17) = "eighteen"
NumberText(18) = "nineteen"
NumberText(19) = "twenty"
NumberText(20) = "twenty-one"
NumberText(21) = "twenty-two"
NumberText(22) = "twenty-three"
NumberText(23) = "twenty-four"
NumberText(24) = "twenty-five"
NumberText(25) = "twenty-six"
NumberText(26) = "twenty-seven"
NumberText(27) = "twenty-eight"
NumberText(28) = "twenty-nine"
NumberText(29) = "thirty"
cbxControl.Clear
For xx = 0 To UBound(NumberText())
    cbxControl.AddItem NumberText(xx)
Next xx
If cbxControl.ListIndex > 0 Then
    cbxControl.ListIndex = cbxControl.ListIndex 'from doc
Else
     cbxControl.ListIndex = 0
End If

End Sub

Public Sub VariableOptionList(cbxControl)
Dim ChangePeriod(9)
ChangePeriod(0) = "monthly"
'ChangePeriod(1) = "bimonthly"
ChangePeriod(1) = "quarterly"
ChangePeriod(2) = "every calendar quarter"
ChangePeriod(3) = "every ___ months"
ChangePeriod(4) = "semi-annually"
ChangePeriod(5) = "annually"
ChangePeriod(6) = "every calendar year"
ChangePeriod(7) = "every year"
ChangePeriod(8) = "every ___ years"
cbxControl.Clear
For xx = 0 To UBound(ChangePeriod())
    cbxControl.AddItem ChangePeriod(xx)
Next xx
If cbxControl.ListIndex > 0 Then
    cbxControl.ListIndex = cbxControl.ListIndex 'from doc
Else
     cbxControl.ListIndex = 0
End If

End Sub
Public Sub StateRateReductionList(cbxControl)
Dim RRProgram(10)
RRProgram(0) = " "
RRProgram(1) = "LIFT Focused Small Business Program"
RRProgram(2) = "Linked Deposit Program"
RRProgram(3) = "City of Cincinnati's Linked Deposit Program"
RRProgram(4) = " "
cbxControl.Clear
For xx = 0 To UBound(RRProgram())
    cbxControl.AddItem RRProgram(xx)
Next xx
If cbxControl.ListIndex > 0 Then
    cbxControl.ListIndex = cbxControl.ListIndex 'from doc
Else
     cbxControl.ListIndex = 0
End If

End Sub
Attribute VB_Name = "PopulateUPArrays"
Public Sub UseProceedsList(ByRef cbxControl As control)
Dim UPID(24)
Dim UPList(24)
Dim UPData(24, 4)
Dim i As Integer
i = 0
UPID(i) = 0
UPList(i) = "0. Write your own description (start with 'to' or 'for')"
UPData(i, 1) = "Type your description (start with 'to' or 'for'):"
UPData(i, 2) = ""
i = 1
UPID(i) = 1
UPList(i) = "1. Purchase Land"
UPData(i, 1) = "Location:"
UPData(i, 2) = ""
i = 2
UPID(i) = 2
UPList(i) = "2. Purchase Land and Improvements"
UPData(i, 1) = "Location:"
UPData(i, 2) = ""
i = 3
UPID(i) = 3
UPList(i) = "3. Purchase Improvements"
UPData(i, 1) = "Location:"
UPData(i, 2) = ""
i = 4
UPID(i) = 4
UPList(i) = "4. Construct a Building (Construction financing SBA guaranteed)"
UPData(i, 1) = "Location:"
UPData(i, 2) = ""
i = 5
UPID(i) = 5
UPList(i) = "5. Add an Additon to a Building(Construction financing SBA guaranteed)"
UPData(i, 1) = "Location:"
UPData(i, 2) = ""
i = 6
UPID(i) = 6
UPList(i) = "6. Make Renovations to a Building (Construction financing SBA guaranteed)"
UPData(i, 1) = "Location:"
UPData(i, 2) = ""
i = 7
UPID(i) = 7
UPList(i) = "7. Pay off Interim Construction Loan (Construction financing NOT SBA guaranteed)"
UPData(i, 1) = "Lender:"
UPData(i, 2) = ""
i = 8
UPID(i) = 8
UPList(i) = "8. Pay off Lender's Interim Loan"
UPData(i, 1) = "Lender's Interim Loan is used for:"
UPData(i, 2) = ""
i = 9
UPID(i) = 9
UPList(i) = "9. Make Leasehold Improvements to a Building (Construction financing SBA guaranteed)"
UPData(i, 1) = "Location:"
UPData(i, 2) = ""
i = 10
UPID(i) = 10
UPList(i) = "10. Purchase Equipment"
UPData(i, 1) = ""
UPData(i, 2) = ""
i = 11
UPID(i) = 11
UPList(i) = "11. Purchase Fixtures"
UPData(i, 1) = ""
UPData(i, 2) = ""
i = 12
UPID(i) = 12
UPList(i) = "12. Purchase Inventory"
UPData(i, 1) = ""
UPData(i, 2) = ""
i = 13
UPID(i) = 13
UPList(i) = "13. Pay Trade or Accounts Payable"
UPData(i, 1) = ""
UPData(i, 2) = ""
i = 14
UPID(i) = 14
UPList(i) = "14. Pay Notes Payable - Not Same Institution Debt"
UPData(i, 1) = "Payee:"
UPData(i, 2) = ""
i = 15
UPID(i) = 15
UPList(i) = "15. Pay Notes Payble - Same Institution Debt"
UPData(i, 1) = "Payee:"
UPData(i, 2) = ""
i = 16
UPID(i) = 16
UPList(i) = "16. Purchase a Business"
UPData(i, 1) = "Name of Business:"
UPData(i, 2) = "Purchase Agreement Date: (leave blank if no purchase agreement)"
UPData(i, 3) = "Intang. Assets $ Value"
UPData(i, 4) = "for intangible assets described as ..."
i = 17
UPID(i) = 17
UPList(i) = "17. Purchase All Outstanding Ownership Interest"
UPData(i, 1) = "Corporation/Entity:"
UPData(i, 2) = "Stockholder/Seller:"
UPData(i, 3) = "Intang. Assets $ Value"
UPData(i, 4) = "for intangible assets described as ..."
i = 18
UPID(i) = 18
UPList(i) = "18. Refinance SBA Loan"
UPData(i, 1) = "Loan Number:"
UPData(i, 2) = ""
i = 19
UPID(i) = 19
UPList(i) = "19. Working Capital"
UPData(i, 1) = ""
UPData(i, 2) = ""
i = 20
UPID(i) = 20
UPList(i) = "20. Pay the Guaranty Fee (not solely to pay Guaranty Fee)"
UPData(i, 1) = ""
UPData(i, 2) = ""
i = 21
UPID(i) = 21
UPList(i) = "Select Use of Proceeds Type"
UPData(i, 1) = "Type your description (start with 'to' or 'for'):"
UPData(i, 2) = ""
'RH 4/24/2017 Added section 22 below to match the Use of Proceeds from the 7a Processing System.
i = 22
' UPID(i) = 22
' UPList(i) = "22.  Refinance SBA Loan - Not Same Institution Debt"
' UPData(i, 1) = "Loan Number:"
' UPData(i, 2) = ""
'i = 22
'UPID(i) = 22
'UPList(i) = "22a.  (New Inventory) Dealer Floor Plan Acquisition of Inventory (do not use with 22b)"
'UPData(i, 1) = ""
'UPData(i, 2) = ""
'i = 23
'UPID(i) = 23
'UPList(i) = "22b.  (Used Inventory) Dealer Floor Plan Acquisition of Inventory (do not use with 22a)"
'UPData(i, 1) = ""
'UPData(i, 2) = ""
'i = 24
'UPID(i) = 24
'UPList(i) = "23.  Dealer Floor Plan Refinancing"
'UPData(i, 1) = "Lender:"
'UPData(i, 2) = ""
cbxControl.Clear
    For xx = 0 To UBound(UPList())
        cbxControl.AddItem UPList(xx)
        cbxControl.List(xx, 1) = UPData(xx, 1)
        cbxControl.List(xx, 2) = UPData(xx, 2)
        cbxControl.List(xx, 3) = UPData(xx, 3)
        cbxControl.List(xx, 4) = UPData(xx, 4)
    Next xx
If cbxControl.ListIndex > 0 Then
    cbxControl.ListIndex = cbxControl.ListIndex 'from doc
Else
     cbxControl.ListIndex = 21 'UBound(UPList())
End If
End Sub
Attribute VB_Name = "ResetDefault"
'Private Declare Function RegDeleteKey Lib "advapi32.dll" Alias "RegDeleteKeyA" (ByVal hKey As Long, ByVal lpSubKey As String) As Long
#If VBA7 Then
Private Declare PtrSafe Function RegDeleteKey Lib "advapi32.dll" Alias "RegDeleteKeyA" (ByVal hKey As Long, ByVal lpSubKey As String) As Long
#Else
Private Declare Function RegDeleteKey Lib "advapi32.dll" Alias "RegDeleteKeyA" (ByVal hKey As Long, ByVal lpSubKey As String) As Long
#End If

Public Sub Main()
'<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
'    Daniel H. Smith    7/31/2002
'<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
'    Documentation -- Main
'<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
'This section of code:
'<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
'Final modification 7/31/02 ... Clears all registry
'setting made to template
'<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
'
Dim vWizName
Dim xx
Dim HKEY_CURRENT_USER
Dim sKeyName
vWizName = WizName & " Authorization Wizard"
xx = MsgBox("This action will reset all " + vWizName + " default values to their original value." & vbCr & vbCr & "This action will only affect new " + WizName + " documents.  It will not affect existing documents (including this document)." & vbCr & vbCr & "Do you wish to continue ?", vbInformation + vbOKCancel, vWizName)
If xx Then
  HKEY_CURRENT_USER = VersionSpecific.RegValue
  sKeyName = "software\SBA\" + WizInfo.WizSection + "\" + WizInfo.WizVer
  RegDeleteKey HKEY_CURRENT_USER, sKeyName
End If
End Sub
Attribute VB_Name = "ResetToolbars"
Public Sub Main()

'=============================================================
' ResetToolbars.MAIN
'
' Sub
'-------------------------------------------------------------
' Modified 08-27-2001 WordBasic to VBA
' Author : Daniel H. Smith, Programmer/Analyst
' Notes :  Complete
'-------------------------------------------------------------
' Revision History
'-------------------------------------------------------------
' 08-27-2001 DHS: 11/23/2001 DHS:  Final Mod 7/31/02
'=============================================================
' End Code Header block
Application.ScreenUpdating = False
Dim MainDocx As Integer
Dim myWindowType As Integer
Dim WizTb As String
Dim OOTb As String
Dim X As Integer
X = 0
For Each dv In ActiveDocument.Variables
  If dv.Name = "MainDoc" Then
    X = Len(ActiveDocument.Variables("MainDoc").Value)
  End If
Next dv
If PrintPreview Then
    myWindowType = 0
ElseIf X = 0 Then
    myWindowType = 1
Else
    myWindowType = 2
End If
WizTb = WizName & " Wizard"
OOTb = WizTb & " Open Options"
Select Case myWindowType
Case 1
    CommandBars(WizTb).visible = True
    CommandBars(OOTb).visible = False
Case 2
    CommandBars(WizTb).visible = False
    CommandBars(OOTb).visible = True
Case Else
    CommandBars(WizTb).visible = True
    CommandBars(OOTb).visible = False
End Select
VersionSpecific.ResetToolbarLocation OOTb, 109
VersionSpecific.ResetToolbarLocation WizTb, 110
End Sub
Attribute VB_Name = "RunHelp"
Public Sub Main()
    WizHelp.Start 20001
End Sub
Attribute VB_Name = "SBAOffices"
Dim strDest As String
Dim Count As Integer
Sub PopulateSBAOfficeList()
' ===================================================
' Populate SBA Office list from text file
' ===================================================
' Rewritten 6/11/03
' Commented lines may be removed at later time
' Rewritten to avoid DAO360.DLL -- which cannot be distributed by SBA
'
'Dim rs As Object
Dim strConnect As String
Dim strTable As String
Dim strDB As String
Dim strSource As String
Dim mySql As String
Dim FileLoc As String
Dim OfcTemp, arrTemp As Variant
Dim fld As Variant
'Dim Count As Integer
Dim blnFirst3146 As Boolean
Dim OffListContinue As Boolean
Dim X As Integer
Dim OfficeList()
Dim Y As Integer
Const adOpenStatic = 3
Dim Zip As String
blnFirst3146 = True
Dim MySection
Dim xx As String
Dim yy As String

' Define csv file and database directory
strTable = "SBAOffices.txt"
strSource = Environ("APPWG")
strDest = Environ("Temp")
strDB = strDest

If Right(strDest, 1) = "\" Then strDest = Left(strDest, Len(strDest) - 1)
If Right(strSource, 1) = "\" Then strSource = Left(strSource, Len(strSource) - 1)

' Copy csv file to database directory
On Error Resume Next
If strSource <> "" Then
    strSource = strSource & "\SBA Data\" & strTable
    strDest = strDest & "\" & strTable
    If Dir(strDest) <> "" Then
      SetAttr strDest, vbNormal
    End If
    FileCopy strSource, strDest
Else
    strDB = strDest
    strDest = ActiveDocument.AttachedTemplate.Path & "\" & strTable
End If
  
If Dir(strDest) = "" Then
  If InStr(strSource, "WINAPPS") <> 0 Then
    FileLoc = "X:\WinApps\SBA Data"
    FileDir = "the SBA data subdirectory"
  Else
    FileLoc = ActiveDocument.AttachedTemplate.Path
    FileDir = "your templates directory"
  End If
  On Error Resume Next
  MySection = "HKEY_CURRENT_USER\Software\SBA\" + WizInfo.WizSection + "\" + WizInfo.WizVer
  xx = System.PrivateProfileString("", MySection, "NoList")
  yy = System.PrivateProfileString("", MySection, "MessageShown")
  If xx = "False" And yy = "False" Or xx = "" And yy = "False" Then
  If MsgBox("The SBA Offices list file could not be found." & vbCrLf & vbCrLf & _
    "The Wizard operates best with the SBAOffices.txt file.     " & vbCrLf & vbCrLf & _
    "Please obtain a copy of this file and install it in " & FileDir & ".     " & vbCrLf & vbCrLf & _
    "-> " & FileLoc & "<-     " & vbCrLf & vbCrLf & _
    "Click OK to continue without the SBA Offices list.  This message will not be repeated.     " & vbCrLf & vbCrLf & _
    "Click Cancel to locate and install the missing file.", vbExclamation + vbOKCancel, _
    "Wizard Error") = vbOK Then
      frmMain.cbxSBAName.enabled = False
      SaveAsDefault "NoList", "True"
      SaveAsDefault "MessageShown", "True"
      Exit Sub
    Else
    On Error Resume Next
    ActiveDocument.Close
    End
  End If
End If
End If

ReadSBA:
'If Dir(strDestination, vbNormal) <> "" Then
'Else
'If Environ("APPWG") <> "" Then
'  FileLoc = "X:\WinApps\SBA Data"
'  FileDir = "the SBA data subdirectory"
'Else
'  FileLoc = ActiveDocument.AttachedTemplate.Path
'  FileDir = "your templates directory"
'End If
'On Error Resume Next
'MySection = "HKEY_CURRENT_USER\Software\SBA\" + WizInfo.WizSection + "\" + WizInfo.WizVer
'xx = System.PrivateProfileString("", MySection, "NoList")
'If xx = "False" Or xx = "" Then
'  If MsgBox("The SBA Offices list file could not be found." & vbCrLf & vbCrLf & _
'    "The Wizard operates best with the SBAOffices.txt file.     " & vbCrLf & vbCrLf & _
'    "Please obtain a copy of this file and install it in " & FileDir & ".     " & vbCrLf & vbCrLf & _
'    "-> " & FileLoc & "     " & vbCrLf & vbCrLf & _
'    "Click OK to continue without the SBA Offices list.  This message will not be repeated.     " & vbCrLf & vbCrLf & _
'    "Click Cancel to locate and install the missing file.", vbExclamation + vbOKCancel, _
'    "Wizard Error") = vbOK Then
'      frmMain.cbxSBAName.Enabled = False
'      SaveAsDefault "NoList", "True"
'    Else
'    On Error Resume Next
'    ActiveDocument.Close
'    End
'  End If
'End If
'End If

ConnectFile:
Count = 0

'If Dir(strDestination, vbNormal) <> "" Then
'Get count of records in file
'If strDest = "" Then
'  strDest = ActiveDocument.AttachedTemplate.Path
'End If
'----------------------

Set RS = CreateObject("ador.recordset")
strConnect = "Driver={Microsoft Text Driver (*.txt; *.csv)};" & "DefaultDir=" & strDB & ";" & "Extensions=asc,csv,tab,txt;"
'Dim Conn
'Set Conn = CreateObject("ADODB.Connection")
'
'Conn.Open "Driver={Microsoft Text Driver (*.txt; *.csv)};" _
'        & "Dbq='<File Directory>';" _
'        & "Extensions=asc,csv,tab,txt;")
mySql = "Select * from " & strTable & " order by ST, Name"
RS.Open mySql, strConnect, adOpenStatic ', adLockReadOnly

Count = RS.RecordCount

If Count = 0 Then
  RS.Close
  Form41
  If Count = 0 Then
    GoTo ErrorOfficesList
  Else
    SaveAsDefault "NoList", "False"
    SaveAsDefault "MessageShown", "False"
    Exit Sub
  End If
Else
  SaveAsDefault "NoList", "False"
  SaveAsDefault "MessageShown", "False"
End If
ReDim OfficeList(Count, 7)

'14 columns in SBAOffices.txt
' Access and read Text file

Do Until RS.EOF
For Each fld In RS.Fields
If fld = Empty Then
Else
      If fld.Name = "ST" Then
        OfficeList(Y, 0) = fld.Value
        OfficeList(Y, 5) = fld.Value
      End If
      If fld.Name = "Name" Then 'Office
        OfficeList(Y, 1) = fld.Value
      End If
      If fld.Name = "Bldg" Then
        OfficeList(Y, 2) = fld.Value
      End If
      If fld.Name = "Room1" And fld.Value > "" Then
        vRoom = fld.Value
      End If
      If fld.Name = "Address" Then
        If vRoom <> "" Then
          OfficeList(Y, 3) = fld.Value & ", " & vRoom
          vRoom = ""
        Else
          OfficeList(Y, 3) = fld.Value
        End If
      End If
      If fld.Name = "City" Then
        OfficeList(Y, 4) = fld.Value
      End If
      If fld.Name = "Zip" Then
        OfficeList(Y, 6) = fld.Value
      End If
      If fld.Name = "MailCode" Then
        OfficeList(Y, 7) = fld.Value
      End If
    End If
Next
Y = Y + 1
RS.MoveNext
Loop
RS.Close

'SortArray OfficeList(), 0, , , 0

frmMain.cbxSBAName.Clear
For X = 0 To Count
With frmMain.cbxSBAName '.ddOffice
  If OfficeList(X, 0) <> "" Then
    .AddItem OfficeList(X, 0) 'State
    .Column(1, .ListCount - 1) = OfficeList(X, 1) 'Office/Name
    .Column(2, .ListCount - 1) = OfficeList(X, 2) 'Building
    .Column(3, .ListCount - 1) = OfficeList(X, 3) 'Address and Office#
    .Column(4, .ListCount - 1) = OfficeList(X, 4) 'City
    .Column(5, .ListCount - 1) = OfficeList(X, 5) 'State
    .Column(6, .ListCount - 1) = OfficeList(X, 6) 'Zip
    .Column(7, .ListCount - 1) = OfficeList(X, 7) 'Code
  End If
End With
Next
SaveAsDefault "MessageShown", "False"

ReadError:
  On Error Resume Next
  MySection = "HKEY_CURRENT_USER\Software\SBA\" + WizInfo.WizSection + "\" + WizInfo.WizVer
  xx = System.PrivateProfileString("", MySection, "NoList")
  yy = System.PrivateProfileString("", MySection, "MessageShown")
  If frmMain.cbxSBAName.ListCount = 0 And xx = "False" Then
    If yy = "False" Or yy = "" Then
      If MsgBox("The SBA Offices list could not be created." & vbCrLf & vbCrLf & _
      "An error occurred in reading the SBAOffices.txt file.     " & vbCrLf & vbCrLf & _
      "Click OK to continue without the SBA Offices list.  This message will not be repeated.     ", vbExclamation + vbOKCancel, _
      "Wizard Error") = vbOK Then
        frmMain.cbxSBAName.enabled = False
        SaveAsDefault "NoList", "True"
        SaveAsDefault "MessageShown", "True"
      Else
      On Error Resume Next
      ActiveDocument.Close
      End
      End If
    Else
      frmMain.cbxSBAName.enabled = False
      SaveAsDefault "NoList", "True"
      SaveAsDefault "MessageShown", "True"
    End If
  End If


GoTo PopEnd

ErrorOfficesList:
' Check whether the error is due to the DOA engine
' text set to DELIMITED(,) in the registry
If Err = 3146 And blnFirst3146 = True Or Err = 3704 And blnFirst3146 = True Then
    If System.PrivateProfileString("", "HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Jet\3.5\Engines\Text", "Format") <> "Delimited(,)" Then
        System.PrivateProfileString("", "HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Jet\3.5\Engines\Text", "Format") = "Delimited(,)"
    End If
    If System.PrivateProfileString("", "HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Jet\4.0\Engines\Text", "Format") <> "Delimited(,)" Then
        System.PrivateProfileString("", "HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Jet\4.0\Engines\Text", "Format") = "Delimited(,)"
    End If
    Err = 0
    blnFirst3146 = False
    Set RS = Nothing
    GoTo ConnectFile
Else
  GoTo ReadError
End If

PopEnd:
Set RS = Nothing
End Sub

Private Sub Form41()
Dim SBAOffice__$()
Dim SBAOffice2__$()
ReDim SBAOffice__$(130, 7)
ReDim SBAOffice2__$(130)
Dim xx
Dim SourceFile$
Dim SBACode
Dim MailCode$
Dim Type_$
Dim Office$
Dim Mainlist$
Dim Fax$
Dim FaxLowDoc$
Dim TDD$
Dim BLDG$
Dim Room1$
Dim Address$
Dim City$
Dim ST$
Dim Zip$
MailCode$ = Space(255)
Type_$ = Space(255)
Office$ = Space(255)
Mainlist$ = Space(255)
Fax$ = Space(255)
FaxLowDoc$ = Space(255)
TDD$ = Space(255)
BLDG$ = Space(255)
Room1$ = Space(255)
Address$ = Space(255)
City$ = Space(255)
ST$ = Space(255)
Zip$ = Space(255)
Dim Hidden$
Dim i
SourceFile$ = strDest 'OfficesPath & "\SBAOffices.txt" 'Environ("temp") & "\SBAOffices.txt"
Open SourceFile$ For Input As 1
While Not EOF(1) And xx < 130
xx = xx + 1
Input #1, MailCode$, Type_$, Office$, Mainlist$, Fax$, FaxLowDoc$, _
TDD$, BLDG$, Room1$, Address$, City$, ST$, Zip$, Hidden$
If Len(Room1$) > 0 Then Room1$ = ", " + Room1$
Address$ = Address$ + Room1$
SBAOffice__$(xx, 0) = ST$ ' + " - " + Office$
SBAOffice__$(xx, 1) = Office$
If Len(BLDG$) > 0 Then
SBAOffice__$(xx, 2) = BLDG$
SBAOffice__$(xx, 3) = Address$
Else
SBAOffice__$(xx, 2) = Address$
SBAOffice__$(xx, 3) = ""
End If
SBAOffice__$(xx, 4) = City$
SBAOffice__$(xx, 5) = ST$
SBAOffice__$(xx, 6) = Zip$
SBAOffice__$(xx, 7) = MailCode$
Wend
Close 1

Count = xx

frmMain.cbxSBAName.Clear

WordBasic.SortArray SBAOffice__$(), 0, 1, xx
'SortArray SBAOffice__$, 0, 0, xx, 4

For X = 0 To Count
With frmMain.cbxSBAName '.ddOffice
  If SBAOffice__$(X, 0) <> "" And SBAOffice__$(X, 0) <> "ST" Then
    .AddItem SBAOffice__$(X, 0) 'State
    .Column(1, .ListCount - 1) = SBAOffice__$(X, 1) 'Office/Name
    .Column(2, .ListCount - 1) = SBAOffice__$(X, 2) 'Building
    .Column(3, .ListCount - 1) = SBAOffice__$(X, 3) 'Address and Office#
    .Column(4, .ListCount - 1) = SBAOffice__$(X, 4) 'City
    .Column(5, .ListCount - 1) = SBAOffice__$(X, 5) 'State
    .Column(6, .ListCount - 1) = SBAOffice__$(X, 6) 'Zip
    .Column(7, .ListCount - 1) = SBAOffice__$(X, 7) 'Code
  End If
End With
Next

''''Err.Number = 0
''''On Error GoTo -1: On Error GoTo 0
''''SBAOffice2__$(0) = "(Write your own)"
''''  frmMain.cbxSBAName.AddItem SBAOffice2__$(0), 0
''''If xx > 0 Then
''''WordBasic.SortArray SBAOffice__$(), 0, 1, xx
''''For i = 1 To xx
''''SBAOffice2__$(i) = SBAOffice__$(i, 0)
''''  frmMain.cbxSBAName.AddItem SBAOffice2__$(i), i
''''Next
''''End If
''''SBAOffice2__$(xx + 1) = ""
  
'  frmMain.cbxSBAName.List SBAOffice2__$ '(), xx + 1
If frmMain.cbxSBAName.ListCount > 0 Then
  SaveAsDefault "NoList", "False"  'Means SBA Offices List exists.
  SaveAsDefault "MessageShown", "False"
  frmMain.cbxSBAName.enabled = True
  frmMain.cbxSBAName.BackColor = vbWhite
  frmMain.txtSBAName.enabled = False
'  frmMain.txtSBAName.BackColor = myGray
End If
End Sub




Attribute VB_Name = "ShowHideHelp"
Public Sub Main()
Dim MySection
Dim xx
Dim retVal As Integer
On Error Resume Next
MySection = "HKEY_CURRENT_USER\software\SBA\" + WizSection + "\" + WizInfo.WizVer
xx = Val(System.PrivateProfileString("", MySection, "DoNotShowHelp"))
On Error GoTo -1: On Error GoTo 0
If xx = 0 Then
  retVal = Abs(MsgBox("Help at startup is currently enabled." & vbCr & vbCr & "Do you wish to hide Help at startup the next time you create a new wizard document?", vbInformation + vbYesNo, WizName & " Wizard"))
  If retVal = vbYes Then
    xx = 1
  Else
    Exit Sub
  End If
Else
  retVal = Abs(MsgBox("Help at startup is currently disabled." & vbCr & vbCr & "Do you wish to show Help at startup the next time you create a new wizard document?", vbInformation + vbYesNo, WizName & " Wizard"))
  If retVal = vbYes Then
    xx = 0
  Else
    Exit Sub
  End If
End If
  SaveAsDefault "DoNotShowHelp", Trim(Str(xx))
End Sub
Attribute VB_Name = "TableCancel"
Public Sub Main()
Dim retVal
Dim MyWindow
Dim MyBook

ClearUndoStack
If ActiveDocument.Variables("MainDoc").Value = "" Then GoTo EndOfTableCancel
retVal = MsgBox("Discard changes?", vbQuestion + vbYesNo, "Discard changes")
If retVal = 6 Then
  Application.ScreenUpdating = False
  MyWindow = ActiveDocument.Variables("MainDoc").Value
  MyBook = ActiveDocument.Variables("MyBook").Value
  ActiveWindow.Close wdNoSave
  Windows(MyWindow).Activate
'Added 9/11/2006 to allow use in Word 2003
  On Error Resume Next
  If ActiveDocument.ProtectionType <> wdNoProtection Then
    ActiveDocument.Unprotect "snad7623"
  End If
'  On Error Resume Next
'  If ActiveDocument.ProtectionType <> wdNoProtection Then
'    ActiveDocument.Unprotect
'  End If
  On Error GoTo -1: On Error GoTo 0
  ActiveDocument.Bookmarks(MyBook).Select
  Selection.MoveLeft wdCharacter, 1
  Selection.MoveUp wdParagraph, 1
  Selection.MoveEnd wdLine, 1
  ActiveDocument.Bookmarks(MyBook).Delete
  ResetToolbars.Main
'Added 9/11/2006 to work with Word 2003
   On Error Resume Next
   If Val(Application.Version) >= 11 And ActiveDocument.ProtectionType <> wdAllowOnlyReading Then
    ActiveDocument.Protect wdAllowOnlyReading, , "snad7623"
   Else
    ActiveDocument.Protect wdAllowOnlyComments
   End If
'  On Error Resume Next
'  ActiveDocument.Protect wdAllowOnlyComments
  On Error GoTo -1: On Error GoTo 0
End If
EndOfTableCancel:
On Error GoTo -1: On Error GoTo 0
ActiveWindow.View.Type = wdPageView
Application.ScreenRefresh
Windows(1).View.ShowFieldCodes = False
'On Error Resume Next
'ActiveDocument.Protect wdAllowOnlyComments
'Added 9/11/2006 to work with Word 2003
   On Error Resume Next
   If Val(Application.Version) >= 11 And ActiveDocument.ProtectionType <> wdAllowOnlyReading Then
    ActiveDocument.Protect wdAllowOnlyReading, , "snad7623"
   Else
    ActiveDocument.Protect wdAllowOnlyComments
   End If
Selection.Collapse wdCollapseStart
ActiveDocument.AcceptAllRevisions
CommandBars("Reviewing").visible = False
If CurVer = 12 Then
    Mods2007.EndCancel
End If
End Sub
Attribute VB_Name = "TableDelete"
Public Sub Main()
Dim retVal
VersionSpecific.ClearUndoStack
WizLib.CheckTemplate
Selection.EndKey wdLine, wdExtend
retVal = MsgBox("Delete the following section?", vbQuestion + vbYesNo, "Delete a Section")
If retVal = 6 And Selection.Style = "StartOfSection" Then DeleteSection
End Sub
Private Sub DeleteSection()
Dim M
Dim n
Application.ScreenUpdating = False
System.Cursor = wdCursorWait
ActiveWindow.View.Type = wdNormalView
'Added 9/11/2006 to allow use in Word 2003
  On Error Resume Next
  If ActiveDocument.ProtectionType <> wdNoProtection Then
    ActiveDocument.Unprotect "snad7623"
  End If
'On Error Resume Next
'  If ActiveDocument.ProtectionType <> wdNoProtection Then
'    ActiveDocument.Unprotect
'  End If
On Error GoTo -1: On Error GoTo 0
ActiveDocument.Bookmarks("\Para").Range.Select
M = Selection.Start
While Left(Selection.Style, 12) <> "EndOfSection"
  Selection.MoveDown wdParagraph, 1
Wend
ActiveDocument.Bookmarks("\Para").Range.Select
n = Selection.End
ActiveDocument.Range(M, n).Select
Selection.Delete
'Added to delete CA when Collateral is removed RH 1/10/2018
If InCA = 1 Or ActiveDocument.Bookmarks("C1State").Range.Text = "CA" Then
WizLib.ClearBookmark "Inc_SPCA"
WizLib.UpdateText "C1State", ""
End If


ActiveDocument.Bookmarks.Add ("Temp")
frmMain.CCClosing
Selection.WholeStory
Selection.Fields.Update
ActiveDocument.Bookmarks("Temp").Range.Select
Selection.EndKey wdLine, wdMove
On Error GoTo -1: On Error GoTo 0
ActiveWindow.View.Type = wdPageView
Application.ScreenRefresh
Windows(1).View.ShowFieldCodes = False
ActiveDocument.AcceptAllRevisions
'On Error Resume Next
'ActiveDocument.Protect wdAllowOnlyComments
'Added 9/11/2006 to work with Word 2003
   On Error Resume Next
   If Val(Application.Version) >= 11 And ActiveDocument.ProtectionType <> wdAllowOnlyReading Then
    ActiveDocument.Protect wdAllowOnlyReading, , "snad7623"
   Else
    ActiveDocument.Protect wdAllowOnlyComments
   End If
End Sub

Attribute VB_Name = "TableModify"
Dim OrigState As Boolean
Public Sub Main()
  VersionSpecific.ClearUndoStack
'Added 9/11/2006 to allow use in Word 2003
  On Error Resume Next
  If ActiveDocument.ProtectionType <> wdNoProtection Then
    ActiveDocument.Unprotect "snad7623"
  End If
  'Word 2007 WindowsinTaskbar
    Dim OrigState As Boolean
    Selection.MoveRight Unit:=wdCharacter, Count:=1
    With ActiveDocument.Bookmarks
        .Add Range:=Selection.Range, Name:="Mod"
    End With
  OrigState = Application.ShowWindowsInTaskbar
  ' store the current value
  UpdateText "TaskbarState", OrigState
    Selection.GoTo What:=wdGoToBookmark, Name:="Mod"
    ActiveDocument.Bookmarks("Mod").Delete
  '-----------------------
  WizLib.CheckDocMap
  WizLib.CheckTemplate
  Selection.EndKey wdLine, wdMove
  Application.ShowWindowsInTaskbar = False
  If Selection.Style = "StartOfSection" Then
    ModifySection
  End If
End Sub
Private Sub ModifySection()
Dim MyWindow
Dim Now_
Dim MyBook
Dim M
Dim n
Dim CurTemplate
Dim SUpdating As Boolean
SUpdating = False
Application.ScreenUpdating = SUpdating
On Error Resume Next
  If ActiveDocument.ProtectionType <> wdNoProtection Then
    ActiveDocument.Unprotect "snad7623"
  End If
On Error GoTo -1: On Error GoTo 0
MyWindow = ActiveWindow.Caption
Now_ = Trim(Str(Now()))
Randomize
MyBook = "upd" + Left(Now_, InStr(Now_, "/") - 1) + Trim(Str(Int((600 * Rnd) + 1))) + Trim(Str(Int(Rnd))) + "xx"
Selection.MoveDown wdParagraph, 1, wdMove
ActiveDocument.Bookmarks("\Para").Range.Select
M = Selection.Start
While Left(Selection.Style, 12) <> "EndOfSection"
    Selection.MoveDown wdParagraph, 1, wdMove
Wend
  Selection.MoveUp wdParagraph, 1, wdMove
  ActiveDocument.Bookmarks("\Para").Range.Select
  n = Selection.End
  ActiveDocument.Range(M, n).Select
  If ActiveDocument.Bookmarks.Exists(MyBook) Then
    ActiveDocument.Bookmarks(MyBook).Delete
  End If
  ActiveDocument.Bookmarks.Add (MyBook)
  Selection.Range.Copy
  On Error Resume Next
   If Val(Application.Version) >= 11 And ActiveDocument.ProtectionType <> wdAllowOnlyReading Then
    ActiveDocument.Protect wdAllowOnlyReading, , "snad7623"
   Else
    ActiveDocument.Protect wdAllowOnlyComments
   End If
'  ActiveDocument.Protect wdAllowOnlyReading, , "snad7623"
  On Error GoTo -1: On Error GoTo 0
  CurTemplate = ActiveDocument.AttachedTemplate.FullName
  WordBasic.DisableAutoMacros 'Same in VBA as WordBasic
  Documents.Add
  ActiveDocument.AttachedTemplate = CurTemplate
  ActiveDocument.UpdateStyles
'  Documents.Add Template:=CurTemplate
'  WordBasic.DisableAutoMacros 0 'Same in VBA as WordBasic
  On Error Resume Next
  If ActiveDocument.ProtectionType <> wdNoProtection Then
    ActiveDocument.Unprotect "snad7623"
  End If
  On Error GoTo -1: On Error GoTo 0
  Selection.Range.Paste
  ActiveDocument.Revisions.AcceptAll
'  ActiveDocument.Bookmarks(MyBook).Range.Select
'  Selection.Collapse wdCollapseEnd
'  Selection.Range.Delete 'Deletes additional para after pasting
  ActiveDocument.Variables.Add "MainDoc", MyWindow
  ActiveDocument.Variables.Add "MyBook", MyBook
  Selection.HomeKey Unit:=wdStory
  ResetToolbars.Main
  ActiveDocument.Variables.Add "SelStyle", Selection.Style
  Select Case Selection.Style
    Case "old1"
      Selection.ParagraphFormat.Style = "Heading 1"
    Case "old2"
      Selection.ParagraphFormat.Style = "Heading 2"
    Case "old3"
      Selection.ParagraphFormat.Style = "Heading 3"
    Case "old4"
      Selection.ParagraphFormat.Style = "Heading 4"
    Case "old5"
      Selection.ParagraphFormat.Style = "Heading 5"
    Case "oldIndent1"
      Selection.ParagraphFormat.Style = "Indent1"
    Case "oldIndent2"
      Selection.ParagraphFormat.Style = "Indent2"
    Case "oldIndent3"
      Selection.ParagraphFormat.Style = "Indent3"
    Case "oldIndent4"
      Selection.ParagraphFormat.Style = "Indent4"
    Case "oldIndent5"
      Selection.ParagraphFormat.Style = "Indent5"
    Case Else
    End Select
  With ActiveWindow.View
    .ShowRevisionsAndComments = False
    .RevisionsView = wdRevisionsViewFinal
  End With
'Word2007Update TableModify
  Mods2007.EndMod
End Sub

Attribute VB_Name = "TableUpdate"
Public Sub Main()
Dim retVal
Dim MyWindow$
Dim MyBook$
Dim CopyText As String
Dim SUpdating As Boolean
SUpdating = False

'Dim MyData As DataObject
'
'Set MyData = New DataObject
'MyData.SetText ""
'MyData.PutInClipboard

VersionSpecific.ClearUndoStack
WizLib.CheckDocMap
Application.ScreenUpdating = SUpdating
If ActiveDocument.Variables("MainDoc").Value = "" Then
  GoTo EndOfTableUpdate
End If
retVal = MsgBox("Update document?", vbQuestion + vbYesNo, "Update a Section")
If retVal = 6 Then
  Application.ScreenUpdating = SUpdating
  MyWindow$ = ActiveDocument.Variables("MainDoc")
  MyBook$ = ActiveDocument.Variables("MyBook")
  Selection.WholeStory
  'Added 9/12/2007 to enable deleting of Open Options.
  If Len(Selection.Text) <= 1 Then
    retVal2 = MsgBox("Do you wish to delete this Open Option?", vbQuestion + vbYesNo, "Delete the Option")
    If retVal2 = 6 Then
        OldStyle = ActiveDocument.Variables("SelStyle")
        ActiveDocument.Saved = True
        ActiveDocument.Close SaveChanges:=wdDoNotSaveChanges
        Windows(MyWindow$).Activate
        If ActiveDocument.ProtectionType <> wdNoProtection Then
          ActiveDocument.Unprotect "snad7623"
        End If
        On Error GoTo -1: On Error GoTo 0
        ActiveDocument.Bookmarks(MyBook$).Range.GoTo
        Selection.Range.Delete
        Selection.MoveLeft wdCharacter, 1, wdMove
        Selection.InsertParagraphAfter
        Selection.MoveRight wdCharacter, 1, wdMove
        Select Case OldStyle
            Case "Heading 1"
                Selection.ParagraphFormat.Style = "old1"
            Case "Heading 2"
                Selection.ParagraphFormat.Style = "old2"
            Case "Heading 3"
                Selection.ParagraphFormat.Style = "old3"
            Case "Heading 4"
                Selection.ParagraphFormat.Style = "old4"
            Case "Indent3"
                Selection.ParagraphFormat.Style = "oldindent3"
        End Select
        GoTo FinishDelete
    Else
        GoTo EndOfTableUpdate
    End If
  End If
  Selection.MoveLeft wdCharacter, 1, 1
  On Error Resume Next
  With Selection.ParagraphFormat
    With .Borders(wdBorderLeft)
      .LineStyle = wdLineStyleSingle
      .LineWidth = wdLineWidth050pt
      .ColorIndex = wdRed
    End With
    With .Borders
      .DistanceFromLeft = 1
    End With
  End With
  Selection.Range.Copy
  Application.ScreenUpdating = SUpdating
  ActiveDocument.Saved = True
  ActiveDocument.Close SaveChanges:=wdDoNotSaveChanges
  Windows(MyWindow$).Activate
  Application.ScreenUpdating = SUpdating
  On Error Resume Next
  If ActiveDocument.ProtectionType <> wdNoProtection Then
    ActiveDocument.Unprotect "snad7623"
  End If
  On Error GoTo -1: On Error GoTo 0
  ActiveWindow.View.Type = wdNormalView
  ActiveDocument.Bookmarks(MyBook$).Range.GoTo
  Selection.Range.Paste
  frmMain.CCClosing
  ActiveDocument.Bookmarks(MyBook$).Range.Select
  Selection.MoveLeft wdCharacter
  Selection.MoveUp wdParagraph, 1, wdMove
  Selection.EndKey wdLine, wdMove

  If ActiveDocument.Bookmarks.Exists(MyBook$) Then
    ActiveDocument.Bookmarks(MyBook$).Delete
FinishDelete:
    ResetToolbars.Main
    ActiveWindow.View.Type = wdPageView
    ActiveDocument.AcceptAllRevisions
    On Error Resume Next
   If Val(Application.Version) >= 11 And ActiveDocument.ProtectionType <> wdAllowOnlyReading Then
    ActiveDocument.Protect wdAllowOnlyReading, , "snad7623"
   Else
    ActiveDocument.Protect wdAllowOnlyComments
   End If
'    ActiveDocument.Protect wdAllowOnlyReading, , "snad7623"
    On Error GoTo -1: On Error GoTo 0
  End If
End If
EndOfTableUpdate:
ActiveDocument.Fields.Update
ActiveWindow.View.ShowFieldCodes = False
'#If VBA6 Then
'  With ActiveWindow.View
'    .ShowRevisionsAndComments = False
'    .RevisionsView = wdRevisionsViewFinal
'  End With
'#End If
  CommandBars("Reviewing").visible = False
If CurVer >= 12 Then
    Mods2007.EndUpdate
End If
End Sub


Attribute VB_Name = "ThisDocument"
Attribute VB_Base = "0{00020906-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True


















Attribute VB_Name = "VersionSpecific"
Public Function WordVer()
WordVer = "for Microsoft Word 2010/Word 2013/Word 2016"
End Function
Public Function CurVer()
  CurVer = Val(Application.Version)
End Function
Public Sub ClearUndoStack()
ActiveDocument.UndoClear
End Sub
Public Sub RemoveLeftBorder()
Selection.ParagraphFormat.Borders(wdBorderLeft).LineStyle = wdLineStyleNone
End Sub
Public Function RegValue()
RegValue = &H80000001
End Function
Public Sub StopWiz()
End
End Sub
Public Function DataImported()
End Function
Public Sub cmdAddressListClick(PrevControl)
ufAddressList.ControlID = PrevControl
ufAddressList.Show
End Sub
Public Sub ResetToolbarLocation(TbName, TbRowIndex)
On Error Resume Next
With CommandBars.Item(TbName)
.Position = msoBarTop
.Left = 0
.RowIndex = TbRowIndex
End With
On Error GoTo 0
End Sub
Attribute VB_Name = "ViewBoilerplate"
'Private Declare Function FindWindowA Lib "user32" _
'(ByVal lpClassName$, ByVal lpWindowName As Long) As Integer
'Private Declare Function ShellExecute Lib "shell32.dll" Alias "ShellExecuteA" _
'(ByVal hwnd As Integer, ByVal lpOperation$, _
'ByVal lpFile$, ByVal lpParameters$, _
'ByVal lpDirectory$, ByVal nShowCmd As Integer) As Integer
#If VBA7 Then
Private Declare PtrSafe Function FindWindowA Lib "user32" _
(ByVal lpClassName$, ByVal lpWindowName As Long) As Integer
Private Declare PtrSafe Function ShellExecute Lib "shell32.dll" Alias "ShellExecuteA" _
(ByVal hwnd As Integer, ByVal lpOperation$, _
ByVal lpFile$, ByVal lpParameters$, _
ByVal lpDirectory$, ByVal nShowCmd As Integer) As Integer
#Else
Private Declare Function FindWindowA Lib "user32" _
(ByVal lpClassName$, ByVal lpWindowName As Long) As Integer
Private Declare Function ShellExecute Lib "shell32.dll" Alias "ShellExecuteA" _
(ByVal hwnd As Integer, ByVal lpOperation$, _
ByVal lpFile$, ByVal lpParameters$, _
ByVal lpDirectory$, ByVal nShowCmd As Integer) As Integer
#End If

Public Sub Main()
Dim PDFFile
Dim hwnd
Dim xx

Application.ScreenRefresh
frmPleaseWait.lblWaitActivity.Caption = "Loading Boilerplate ..."
frmPleaseWait.Show
Application.ScreenRefresh
On Error Resume Next
Dim dlg As Object: Set dlg = Dialogs(wdDialogToolsTemplates)
PDFFile = ActiveDocument.AttachedTemplate.Path & "\" & WizInfo.WizBoilerplate
If PDFFile = "" Or Not CBool(Len(Dir$(PDFFile))) Then
  MsgBox "Wizard could not find the boilerplate document " + _
  PDFFile + ".", "Error opening boilerplate document!", 48
GoTo EndOfOpenBoilerplate
End If
hwnd = FindWindowA("OPUSAPP", 0)
xx = ShellExecute(hwnd, "Open", PDFFile, "", "", 3)
If xx <= 32 Then
  MsgBox "Wizard could not start the Adobe Reader. " + _
    "You need the Adobe Reader to view the boilerplate document. " + _
    "Click on OK for more information.", _
    "Error opening boilerplate document!", 48
  WizHelp.Start 20005
End If
EndOfOpenBoilerplate:
Set dlg = Nothing
End Sub
Attribute VB_Name = "WizCallBack"
'Page
Public Sub PgUp(control As IRibbonControl)
    WizLib.PgUp
End Sub

Public Sub PgDown(control As IRibbonControl)
    WizLib.PgDown
End Sub

'Navigation Wizard
Public Sub LI(control As IRibbonControl)
    GotoLI.Main
End Sub

Public Sub NT(control As IRibbonControl)
    GotoNT.Main
End Sub

Public Sub CC(control As IRibbonControl)
    GotoCC.Main
End Sub

'Specific to 7a
Public Sub UP(control As IRibbonControl)
    GotoUP.Main
End Sub

Public Sub ACI(control As IRibbonControl)
    GotoAC1.Main
End Sub

Public Sub ACII(control As IRibbonControl)
    GotoAC2.Main
End Sub


'Tools Wizard

Public Sub FSave(control As IRibbonControl)
    FileSave.Main
End Sub

Public Sub FSaveAs(control As IRibbonControl)
    FileSaveAs.Main
End Sub

Public Sub FClose(control As IRibbonControl)
    FileClose.Main
End Sub

Public Sub FPrint(control As IRibbonControl)
    FilePrint.Main
End Sub

Public Sub SWindow(control As IRibbonControl)
    Application.Dialogs(wdDialogWindowActivate).Show
End Sub

Public Sub Read(control As IRibbonControl)
    ActiveDocument.ActiveWindow.View.ReadingLayout = True
End Sub

Public Sub Calc(control As IRibbonControl)
    Shell "c:\windows\system32\calc.exe", vbNormalFocus
End Sub

Public Sub FFind()
    Application.Dialogs(wdDialogEditFind).Show
End Sub

Public Sub ShowView()
    Application.Dialogs(wdDialogViewZoom).Show
End Sub

'Open Options

Public Sub TUpdate(control As IRibbonControl)
    TableUpdate.Main
End Sub

Public Sub TCancel(control As IRibbonControl)
    TableCancel.Main
End Sub

Public Sub mLevel1(control As IRibbonControl)
    Level1.Main
End Sub

Public Sub mLevel2(control As IRibbonControl)
    Level2.Main
End Sub

Public Sub mLevel3(control As IRibbonControl)
    Level3.Main
End Sub

Public Sub mLevel4(control As IRibbonControl)
    Level4.Main
End Sub

Public Sub mLevel5(control As IRibbonControl)
    Level5.Main
End Sub

Public Sub mNumbering()
    NumberOnOff.Main
End Sub

'Wizard Menu
Public Sub mHelp(control As IRibbonControl)
    RunHelp.Main
End Sub

Public Sub mBoilerplate(control As IRibbonControl)
    ViewBoilerplate.Main
End Sub

Public Sub mToolbars(control As IRibbonControl)
    ResetToolbars.Main
End Sub

Public Sub mDefaults(control As IRibbonControl)
    ResetDefault.Main
End Sub

Public Sub mDirectory(control As IRibbonControl)

End Sub

Public Sub mStartup(control As IRibbonControl)
    ShowHideHelp.Main
End Sub

Public Sub mTemplate(control As IRibbonControl)
    WizLib.ConnectToTemplate
End Sub

Public Sub mConvert(control As IRibbonControl)
    Cleaning.Main
End Sub

Public Sub mAbout(control As IRibbonControl)
    About.Main
End Sub
Public Sub mPop7aFromSQL(control As IRibbonControl)
    vbaImport.ShowForm
End Sub


Attribute VB_Name = "WizCallbackMain"

'################################################################
'#                                                              #
'#      Created with / Erstellt mit:                            #
'#      IDBE Ribbon Creator                                     #
'#      Version 1.1022                                          #
'#                                                              #
'#      (c) 2007-2008 IDBE Avenius                              #
'#                                                              #
'#      http://www.ribboncreator.com                            #
'#      http://www.accessribon.com                              #
'#      http://www.avenius.com                                  #
'#                                                              #
'#      You may send change requests or report errors to:       #
'#      Aenderungswuensche oder Fehler bitte an:                #
'#                                                              #
'#      mailto://info@ribboncreator.com                         #
'#                                                              #
'################################################################


' Globals

Public gobjRibbon As IRibbonUI

Public bolEnabled As Boolean    ' Used in Callback "getEnabled"
                                ' Further informations in Callback "getEnabled"
                                ' F|fffd|r Callback "getEnabled"
                                ' Genauere Informationen in Callback "getEnabled".
                               
Public bolOOVisible As Boolean    ' Used in Callback "getVisible"
Public bolNavVisible As Boolean   ' More information in Callback "getVisible
Public bolToolsVisible As Boolean ' F|fffd|r Callback "getVisible"
                                  ' Further informations in Callback "getVisible

' Callbacks

Public Sub OnRibbonLoad(ribbon As IRibbonUI)
'Callbackname in XML File "onLoad"

    Set gobjRibbon = ribbon
    bolOOVisible = False
    bolNavVisible = True
    bolToolsVisible = True

End Sub

Public Sub RefreshRibbon()
    If gobjRibbon Is Nothing Then
    Else
        gobjRibbon.Invalidate
    End If
End Sub

'Public Sub HideShow(visible)
'    bolVisible = visible
'    gobjRibbon.InvalidateControl "grpWizardOpenOptions"
'    RefreshRibbon
'End Sub
'
Public Sub HideShowOptions(visible)
    If visible = "Show" Then
        bolOOVisible = True
    Else
        bolOOVisible = False
    End If
    gobjRibbon.InvalidateControl "grpWizardOpenOptions"
End Sub

Public Sub HideShowTools(visible)
    If visible = "Show" Then
        bolToolsVisible = True
    Else
        bolToolsVisible = False
    End If
    gobjRibbon.InvalidateControl "grpTools"
End Sub

Public Sub HideShowNav(visible)
    If visible = "Show" Then
        bolNavVisible = True
    Else
        bolNavVisible = False
    End If
    gobjRibbon.InvalidateControl "grpWizardNavigation"
End Sub

'Public Sub ClickIt(ribbon As IRibbonUI, Val As Boolean)
'    Set gobjRibbon = ribbon
'    bolCtlVisible = Val
'     gobjRibbon.InvalidateControl "btnRepaymentTerms"
'End Sub
'
Public Sub LoadImages(control, ByRef image)
'Callbackname in XML File "loadImage"

    ' Loads an image with transparency to the ribbon
    ' Modul basGDIPlus is required
    ' L|fffd|d ein Bild mit Transparenz in das Ribbon
    ' Modul basGDIPlus wird daf|fffd|r ben|fffd|tigt

'    Set image = LoadPictureGDIP(CStr(control))
    
End Sub

Public Sub GetImages(control As IRibbonControl, ByRef image)
''Callbacks name in XML File "getImages"
'
'    ' Loads an image with transparency to the ribbon
'    ' Modul basGDIPlus is required
'    ' L|fffd|d ein Bild mit Transparenz in das Ribbon
'    ' Modul basGDIPlus wird daf|fffd|r ben|fffd|tigt
'
'    Dim strPicturePath  As String
'    Dim strPicture      As String
'
'    strPicturePath = getTheValue(control.Tag, "CustomPicturePath")
'    strPicture = getTheValue(control.Tag, "CustomPicture")
'
'    Set image = LoadPictureGDIP(strPicturePath & strPicture)
'
End Sub

Public Sub OnActionButton(control As IRibbonControl)
'Callback in XML File "onAction"

    ' Callback for event button click
    ' Callback f|fffd|r Button Click
    
    Select Case control.ID
        'Case "btnInfo"
        '    DoCmd.OpenForm "frmMyForm"
        Case "btnFind"
            WizCallBack.FFind
        Case "btnWindow"
            WizCallBack.SWindow control
        Case "btnView000"
            WizCallBack.ShowView
        Case "btnImportDataFile000"
'            MsgBox "This feature is under construction.      "
            XMLCode.LoadXMLData
        Case Else
            MsgBox "Button """ & control.ID & """ clicked" & vbCrLf & _
                           "Es wurde auf Button """ & control.ID & """ in Ribbon geklickt", _
                           vbInformation
    End Select
End Sub

Sub OnActionCheckBox(control As IRibbonControl, _
                               pressed As Boolean)
    ' Callbackname in XML File "OnActionCheckBox"
    
    ' Callback for event checkbox click
    ' Callback f|fffd|r Checkbox Click

    Select Case control.ID
        'Case "chkMyCheckbox"
        '    If pressed = True Then
        '       DoCmd.OpenForm "frmMyForm1"
        '    Else
        '       DoCmd.OpenForm "frmMyForm2"
        '    End If
        '
        Case Else
            MsgBox "The Value of the Checkbox """ & control.ID & """ is: " & pressed & vbCrLf & _
                   "Der Wert der Checkbox """ & control.ID & """ ist: " & pressed, _
                   vbInformation
    End Select

End Sub

Sub GetPressedCheckBox(control As IRibbonControl, _
                       ByRef bolReturn)
    
    ' Callbackname in XML File "GetPressedCheckBox"
    
    ' Callback for checkbox
    ' indicates how the control is displayed
    ' Callback f|fffd|r Checkbox wie das Control
    ' angezeigt werden soll

    Select Case control.ID
        Case Else
            If getTheValue(control.Tag, "DefaultValue") = "1" Then
                bolReturn = True
            Else
                bolReturn = False
            End If
    End Select

End Sub


Sub OnActionTglButton(control As IRibbonControl, _
                       pressed As Boolean)
                              
    ' Callbackname in XML File "onAction"
    
    ' Callback f|fffd|r einen Toggle Button Klick
    ' Callback for a Toggle Buttons click event

    Select Case control.ID
        '    If pressed = True Then
        '       DoCmd.OpenForm "frmMyForm1"
        '    Else
        '       DoCmd.OpenForm "frmMyForm2"
        '    End If
        Case Else
            MsgBox "The Value of the Toggle Button """ & control.ID & """ is: " & pressed & vbCrLf & _
                   "Der Wert der Toggle Button """ & control.ID & """ ist: " & pressed, _
                   vbInformation
    End Select

End Sub

Sub GetPressedTglButton(control As IRibbonControl, _
                       ByRef pressed)
' Callbackname in XML File "getPressed"

' Callback f|fffd|r ein Access ToogleButton Control wie dieser Angezeigt werden soll
' Callback for an Access ToogleButton Control. Indicates how the control is displayed

    Select Case control.ID
        Case Else
            If getTheValue(control.Tag, "DefaultValue") = "1" Then
                pressed = True
            Else
                pressed = False
            End If
    End Select
End Sub

Public Sub GetEnabled(control As IRibbonControl, ByRef enabled)
    ' Callbackname in XML File "getEnabled"
    
    ' To set the property "enabled" to a Ribbon Control
    ' For further information see: http://www.accessribbon.de/en/index.php?Downloads:12
    ' Setzen der Enabled Eigenschaft eines Ribbon Controls
    ' Weitere Informationen: http://www.accessribbon.de/index.php?Downloads:12
    Select Case control.ID
        Case "btnRepaymentTerms"
                enabled = CheckComplete("Complete_LI")
        Case "btnUseOfProceeds"
                enabled = CheckComplete("Complete_RT")
        Case "btnCollateralConditions"
                enabled = CheckComplete("Complete_UP")
        Case "btnAdditionalConditionsI"
                enabled = CheckComplete("Complete_UP")
        Case "btnAdditionalConditionsII"
                enabled = CheckComplete("Complete_UP")
        Case "btnWindows"
            If Application.Windows.Count > 1 Then
                enabled = True
            Else
                enabled = False
            End If
        Case Else
            enabled = True
    End Select
End Sub

'Public Sub GetEnabled(control As IRibbonControl, ByRef enabled)
'    ' Callbackname in XML File "getEnabled"
'
'    ' To set the property "enabled" to a Ribbon Control
'    ' For further information see: http://www.accessribbon.de/en/index.php?Downloads:12
'    ' Setzen der Enabled Eigenschaft eines Ribbon Controls
'    ' Weitere Informationen: http://www.accessribbon.de/index.php?Downloads:12
'
'    Select Case control.ID
'        'Case "ID_XMLRibbControl"
'        '    enabled = False
'        Case Else
'            enabled = True
'    End Select
'End Sub
'
Public Sub GetVisible(control As IRibbonControl, ByRef visible)
    ' Callbackname in XML File "getVisible"
    
    ' To set the property "visible" to a Ribbon Control
    ' For further information see: http://www.accessribbon.de/en/index.php?Downloads:12
    ' Setzen der Visible Eigenschaft eines Ribbon Controls
    ' Weitere Informationen: http://www.accessribbon.de/index.php?Downloads:12

    Select Case control.ID
        'Case "ID_XMLRibbControl"
        '    visible = bolVisible
        Case "grpTools"
            visible = bolToolsVisible
        Case "grpWizardNavigation"
            visible = bolNavVisible
        Case "grpWizardOpenOptions"
            visible = bolOOVisible
        Case Else
            visible = True
    End Select
End Sub

'Public Sub GetVisible(control As IRibbonControl, ByRef visible)
'    ' Callbackname in XML File "getVisible"
'
'    ' To set the property "visible" to a Ribbon Control
'    ' For further information see: http://www.accessribbon.de/en/index.php?Downloads:12
'    ' Setzen der Visible Eigenschaft eines Ribbon Controls
'    ' Weitere Informationen: http://www.accessribbon.de/index.php?Downloads:12
'
'    Select Case control.ID
'        'Case "ID_XMLRibbControl"
'        '    visible = bolVisible
''        Case "grpWizardOpenOptions"
''            visible = bolVisible
'        Case Else
'            visible = True
'    End Select
'End Sub

'EditBox

Sub GetTextEditBox(control As IRibbonControl, _
                             ByRef strText)
    ' Callbackname in XML File "GetTextEditBox"
    
    ' Callback f|fffd|r EditBox welcher Wert in der
    ' EditBox eingetragen werden soll.
    ' Callback for an EditBox Control
    ' Indicates which value is to set to the control

    Select Case control.ID
        Case Else
            strText = getTheValue(control.Tag, "DefaultValue")
    End Select
    
End Sub

Sub OnChangeEditBox(control As IRibbonControl, _
                              strText As String)
    ' Callbackname in XML File "OnChangeEditBox"
    
    ' Callback Editbox: R|fffd|ckgabewert der Editbox
    ' Callback Editbox: Return value of the Editbox

    Select Case control.ID
        'Case "MyEbx"
            'If strText = "Password" Then
            '   DoCmd.OpenForm "frmMyForm"
            'End If
        Case Else
            MsgBox "The Value of the EditBox """ & control.ID & """ is: " & strText & vbCrLf & _
                   "Der Wert der EditBox """ & control.ID & """ ist: " & strText, _
                   vbInformation
    End Select

End Sub

'DropDown

Sub OnActionDropDown(control As IRibbonControl, _
                             selectedId As String, _
                             selectedIndex As Integer)
    ' Callbackname in XML File "OnActionDropDown"
    
    ' Callback onAction (DropDown)
    
    Select Case control.ID
        'Case "MyItemID"
        '    DoCmd.OpenForm "MyForm"
        Case Else
            MsgBox "The selected ItemID of DropDown-Control """ & control.ID & """ is : """ & selectedId & """" & vbCrLf & _
                   "Die selektierte ItemID des DropDown-Control """ & control.ID & """ ist : """ & selectedId & """", _
                   vbInformation
    End Select

End Sub

Sub GetSelectedItemIndexDropDown(control As IRibbonControl, _
                                   ByRef index)
    ' Callbackname in XML File "GetSelectedItemIndexDropDown"
    
    ' Callback getSelectedItemIndex (DropDown)
    
    Dim varIndex As Variant
    varIndex = getTheValue(control.Tag, "DefaultValue")
    
    If IsNumeric(varIndex) Then
        Select Case control.ID
            Case Else
                index = varIndex
        End Select
    End If

End Sub

'Gallery

Sub OnActionGallery(control As IRibbonControl, _
                     selectedId As String, _
                     selectedIndex As Integer)
    ' Callbackname in XML File "OnActionGallery"
    
    ' Callback onAction (Gallery)
    
    Select Case control.ID
        'Case "MyGalleryID"
        '   Select Case selectedId
        '      Case "MyGalleryItemID"
        '        DoCmd.OpenForm "MyForm"
        Case Else
            Select Case selectedId
                Case Else
                    MsgBox "The selected ItemID of Gallery-Control """ & control.ID & """ is : """ & selectedId & """" & vbCrLf & _
                           "Die selektierte ItemID des Gallery-Control """ & control.ID & """ ist : """ & selectedId & """", _
                           vbInformation
            End Select
    End Select

End Sub

Sub GetSelectedItemIndexGallery(control As IRibbonControl, _
                                   ByRef index)
    ' Callbackname in XML File "GetSelectedItemIndexGallery"
    
    ' Callback getSelectedItemIndex (Gallery)
    
    Dim varIndex As Variant
    varIndex = getTheValue(control.Tag, "DefaultValue")
    
    If IsNumeric(varIndex) Then
        Select Case control.ID

            Case Else
                index = varIndex

        End Select

    End If

End Sub

'Combobox

Sub GetTextComboBox(control As IRibbonControl, _
                      ByRef strText)

    ' Callbackname im XML File "GetTextComboBox"
    
    ' Callback getText (Combobox)
                           
    Select Case control.ID
        
        Case Else
            strText = getTheValue(control.Tag, "DefaultValue")
    End Select

End Sub


Sub OnChangeComboBox(control As IRibbonControl, _
                               strText As String)
                           
    ' Callbackname im XML File "OnChangeCombobox"
    
    ' Callback onChange (Combobox)
   
    Select Case control.ID
        
        Case Else
            MsgBox "The selected Item of Combobox-Control """ & control.ID & """ is : """ & strText & """" & vbCrLf & _
                   "Das selektierte Item des Combobox-Control """ & control.ID & """ ist : """ & strText & """", _
                   vbInformation
    End Select

End Sub

'Helper Function
'Hilfsfunktionen

Public Function getTheValue(strTag As String, strValue As String) As String
   ' *************************************************************
   ' Erstellt von     : Avenius
   ' Parameter        : Input String, SuchValue String
   ' Erstellungsdatum : 05.01.2008
   ' Bemerkungen      :
   ' |fffd|nderungen       :
   '
   ' Beispiel
   ' getTheValue("DefaultValue:=Test;Enabled:=0;Visible:=1", "DefaultValue")
   ' Return           : "Test"
   ' *************************************************************
      
   On Error Resume Next
      
   Dim workTb()     As String
   Dim Ele()        As String
   Dim myVariabs()  As String
   Dim i            As Integer

      workTb = Split(strTag, ";")
      
      ReDim myVariabs(LBound(workTb) To UBound(workTb), 0 To 1)
      For i = LBound(workTb) To UBound(workTb)
         Ele = Split(workTb(i), ":=")
         myVariabs(i, 0) = Ele(0)
         If UBound(Ele) = 1 Then
            myVariabs(i, 1) = Ele(1)
         End If
      Next
      
      For i = LBound(myVariabs) To UBound(myVariabs)
         If strValue = myVariabs(i, 0) Then
            getTheValue = myVariabs(i, 1)
         End If
      Next
      
End Function



Attribute VB_Name = "WizHelp"
'Private Declare Function WinHelp Lib "user32" Alias "WinHelpA" (ByVal hwnd As Long, ByVal helpfilename$, ByVal wCommand As Long, ByVal dwData As Long) As Long
'Private Declare Function GetFocus Lib "user32" () As Long
#If VBA7 Then
Private Declare PtrSafe Function WinHelp Lib "user32" Alias "WinHelpA" (ByVal hwnd As Long, ByVal helpfilename$, ByVal wCommand As Long, ByVal dwData As Long) As Long
Private Declare PtrSafe Function GetFocus Lib "user32" () As Long
#Else
Private Declare Function WinHelp Lib "user32" Alias "WinHelpA" (ByVal hwnd As Long, ByVal helpfilename$, ByVal wCommand As Long, ByVal dwData As Long) As Long
Private Declare Function GetFocus Lib "user32" () As Long
#End If

Public Sub Start(myID)
Dim MyFile$
Dim helpfilename$
Dim hwnd
Dim wCommand
Dim HelpID As String
Dim TaskCounter As Integer
Dim tskTask As Task
#If VBA6 Then
For Each tskTask In Tasks
  If InStr(1, tskTask.Name, "Wizard Help") Then
    With Tasks("Wizard Help")
      .Close
    End With
  End If
Next
#End If
If ActiveDocument.ProtectionType <> wdNoProtection Then
    ActiveDocument.Unprotect "snad7623"
End If
Dim FT As Object
Set FT = Dialogs(wdDialogToolsTemplates)

ActiveDocument.ActiveWindow.View.ShowFieldCodes = False
ActiveWindow.View.Type = wdPrintView
Application.ScreenUpdating = False
MyFile$ = FT.Template
On Error Resume Next
helpfilename$ = ActiveDocument.AttachedTemplate.Path
FileExists = 0
If Dir(helpfilename$ + "\AuthWizVBA.chm") <> "" Then
  ' GoTo HTMLHelp
Else
frmMain.ShowBlankPage
MsgBox "The 7a Wizard Help file, AuthWizVBA.CHM, cannot be located.   " & vbCrLf & vbCrLf & _
  "Please assure the file is placed in the default templates directory." & vbCrLf & vbCrLf & _
  "[--> " & helpfilename$ & " <--]     ", _
  vbExclamation + vbOKOnly, _
  "Help File Missing!"
Exit Sub
HTMLHelp:
If myID = "" Or myID < 20000 Then HelpID = 20001
If myID >= 20000 Then HelpID = myID
helpfilename$ = " " & ActiveDocument.AttachedTemplate.Path + "\AuthWizVBA.chm" '" " space is absolutely required
Shell "hh.exe -mapid " & HelpID & helpfilename$, vbNormalFocus   '" " space after -mapid are absolutely required
End If
Set FT = Nothing
End Sub

Attribute VB_Name = "WizInfo"
'Version sent to some users between 1/10 and 1/19 timestamp 1:01 AM
Function IsInDev()
  'True = Working on Wizard; False = Production version
  IsInDev = True
End Function
Function WizName()
WizName = "7a"
End Function
Function WizSection()
WizSection = "7aWizard"
End Function
Function WizVer()
WizVer = "2018"
End Function
Function WizSR()
'Type 1, 2, 3, etc. (Service Release)
WizSR = ""
End Function
Function WizDate()
WizDate = ""
End Function
Function WizTemplate()
WizTemplate = "7a Wizard 2018.dotm"
End Function
Function WizBoilerplate()
WizBoilerplate = "a7a2014.pdf"
End Function
Function spropName()
    spropName = "Status"
End Function
Function WizardLocalVersion()
    WizardLocalVersion = "1.0.0.0" 'Increment for internal releases
End Function
Attribute VB_Name = "WizLib"
'Declare Function GetWindowsDirectory Lib "kernel32" Alias "GetWindowsDirectoryA" (ByVal lpBuffer As String, ByVal nSize As Long) As Long
'Declare Function CopyFileA Lib "kernel32" (A As String, B As String, n As Integer) As Integer (Test Add)
#If VBA7 Then
Declare PtrSafe Function GetWindowsDirectory Lib "kernel32" Alias "GetWindowsDirectoryA" (ByVal lpBuffer As String, ByVal nSize As Long) As Long
Declare PtrSafe Function CopyFileA Lib "kernel32" (A As String, B As String, n As Integer) As Integer
#Else
Declare Function GetWindowsDirectory Lib "kernel32" Alias "GetWindowsDirectoryA" (ByVal lpBuffer As String, ByVal nSize As Long) As Long
Declare Function CopyFileA Lib "kernel32" (A As String, B As String, n As Integer) As Integer
#End If

Public Const SAASCENDING As Integer = 0
Public Const SADESCENDING As Integer = 0
Sub ReadStateXML()
 Dim adList() As Double
 Dim asText() As String
 Dim sFile As String
 Dim sXpath As String
 Dim i As Long
 Dim j As Long
   
  sFile = "C:\Documents\SBAOffices.xml"
 
  'Reminder: XML is caseSensitive!
  sXpath = "//Placemark/MultiGeometry/Point/coordinates"
   
  With CreateObject(|fffd|MSXML2.DOMDocument|fffd|)
     Debug.Assert Len(Dir(sFile)) 'Check the file exists
    .Load sFile
     Debug.Assert .parseError.ErrorCode = 0
     With .DocumentElement.SelectNodes(sXpath)
       Debug.Assert .Length
       ReDim adList(.Length |fffd| 1, 1)
       For i = 0 To .Length |fffd| 1
         asText = Split(.Item(i).Text, ", ")
         For j = 0 To 1
           'Use Val not Cstr
          adList(i, j) = Val(asText(j))
         Next
       Next
       'Range(|fffd|A2?).Resize(.Length, 2) = adList
       MsgBox adList
     End With
   End With
   
End Sub



Sub Open_Sort_CSV()

Dim cN As ADODB.Connection '* Connection String

Dim RS As ADODB.Recordset '* Record Set

Dim sQuery As String '* Query String



On Error GoTo ADO_ERROR



' -----------------------------------------

' Coded by Shasur for vbadud.blogspot.com

' -----------------------------------------



cN = New ADODB.Connection

cN.ConnectionString = "Provider=Microsoft.Jet.OLEDB.4.0;Data Source=c:\sba\7a\7a2011\bin\sbaoffices.txt;Extended Properties=""text;HDR=Yes;FMT=Delimited(,)"";Persist Security Info=False"

cN.ConnectionTimeout = 40

cN.Open



Set RS = New ADODB.Recordset



sQuery = "Select * From VBA.csv ORDER BY ID"



RS.ActiveConnection = cN

RS.Source = sQuery

RS.Open



If RS.EOF <> True Then

    Do While Not RS.EOF
    
        Open "c:\sba\7a\7a2011\bin\sbaoffices.txt" For Append As 1
        
        Print #1, RS.Fields(0) & "," & RS.Fields(1)
        
        RS.MoveNext
        
        Close #1
    
    Loop

End If



If RS.State <> adStateClosed Then

RS.Close

End If



If Not RS Is Nothing Then Set RS = Nothing

If Not cN Is Nothing Then Set cN = Nothing



ADO_ERROR:

If Err <> 0 Then

Debug.Assert (Err = 0)

MsgBox (Err.Description)

Resume Next

End If


End Sub


'Read more at http://vbadud.blogspot.com/2008/09/opening-comma-separate-file-csv-through.html#ivRlgHH8VcfzoL2Z.99
Sub Read_text_File()

Dim oFSO As New FileSystemObject
Dim oFS


Set oFS = oFSO.OpenTextFile("c:\sba\7a\7a2011\bin\sbaoffices.txt")

Do Until oFS.AtEndOfStream
sText = oFS.ReadLine
sText = oFS.ReadAll
Loop

MsgBox oFS.Count

Set oFS = Nothing

End Sub


'Read more at http://vbadud.blogspot.com/2007/06/vba-read-text-files-with-leading.html#5M1x1IdxfHkMYHOm.99

Sub getNames()

Dim ctl As control
Dim ctl2 As control
Dim i As Integer
Dim v As Integer
Dim CtrlList(10000, 2)
'   Dim wrdApp As Word.Application
'    Dim wrdDoc As Word.Document
'
'    Set wrdApp = CreateObject("Word.Application")
'    wrdApp.visible = True
'    Set wrdDoc = wrdApp.Documents.Add
    Application.Documents.Add

i = 1
v = 1
'Forms!frmLeerlingPunten![frmLeerlingPunten Subform].Form!PuntenOp
'Me!Subform1.Form!ControlName
'For Each ctl In frm.Controls
'    If TypeName(ctl) = "SubForm" Then
'        Debug.Print ctl.Name & " is a SubForm"
'        For Each ctlSub In ctl.Form.Controls
'            Debug.Print ctlSub.Name
'        Next
'    End If
'Next
'    For Each ctl In frmMain.Controls
'        If ctl.ControlType = acTextBox Then
'            If ctl.visible = True Then
'                If ctl.Locked = False Then
'                    If Not IsNull(ctl) Then
'                        NullCheck = "No"
''                        Exit Function  '*You have encountered a Null value you don't need to continue
'                    End If
'                End If
'            End If
'        ElseIf ctl.ControlType = acSubform Then
'            NullCheck = NullCheck(ctl.Form)
''            If Null Check="No" Then Exit Function '*
'        End If
'    Next ctl

For Each ctl In frmMain.Controls
'    If ctl.Name = "pgLI1" Then
'        MsgBox ctl.Name & " is a SubForm"
'        For Each ctl2 In ctl2.Controls
'            CtrlList(i, 1) = ctl.Name
'            wrdDoc.Content.InsertAfter CtrlList(i, 1)
'            wrdDoc.Content.InsertParagraphAfter
'        Next
'    End If
'    If ctl.ControlType = acTextBox Or ctl.ControlType = acComboBox Or ctl.ControlType = acListBox Then
    If InStr(1, ctl.Name, "txt") Or InStr(1, ctl.Name, "cbx") Or InStr(1, ctl.Name, "cbo") Or InStr(1, ctl.Name, "opt") Or InStr(1, ctl.Name, "chk") Then
'    If InStr(1, ctl.Name, "pgLI1") Then
'        For Each ctl2 In pgLI1.Controls.Form
            CtrlList(i, 1) = ctl.Name
'            CtrlList(i, 2) = ctl.Parent
            ActiveDocument.Content.InsertAfter CtrlList(i, 1) ' & ", [" & ctl.Parent & "]"
            ActiveDocument.Content.InsertParagraphAfter
            v = v + 1
'        Next
    End If
i = i + 1
Next ctl
         ActiveDocument.Content.InsertParagraphAfter
         ActiveDocument.Content.InsertAfter "Completed with " & v & " records."

'    Set wrdDoc = Nothing
'    Set wrdApp = Nothing
    
MsgBox "Completed with " & v & " records"

End Sub
Sub UnlockToolbar()
    Application.ScreenUpdating = False
    UpdateText "Complete_LI", "1"
    UpdateText "Complete_RT", "1"
    UpdateText "Complete_UP", "1"
    Selection.HomeKey Unit:=wdStory
    CommandBars("7a Wizard").Controls("Repayment Terms").enabled = True
    CommandBars("7a Wizard").Controls("Use of Proceeds").enabled = True
    CommandBars("7a Wizard").Controls("Collateral Cond.").enabled = True
    CommandBars("7a Wizard").Controls("Additional Cond. (1)").enabled = True
    CommandBars("7a Wizard").Controls("Additional Cond. (2)").enabled = True
   If Val(Application.Version) >= 11 And ActiveDocument.ProtectionType <> wdAllowOnlyReading Then
    ActiveDocument.Protect wdAllowOnlyReading, , "snad7623"
   Else
    ActiveDocument.Protect wdAllowOnlyComments
   End If
End Sub
Sub ProtectForm()
End Sub

Sub ToolsProtect()
End Sub

Sub ViewTaskPane()
End Sub

Public Function MinimizeRibbon(Optional MakeMin = False)
'False means MakeMin to maximum ribbon
' This function minimizes or maximizes the ribbon, depending upon the value
' of MakeMin.  True minimizes the ribbon and False maximizes the ribbon.
' The default value for MakeMin is True.

' MinimizeRibbon() Version 1.0.0
' Copyright |fffd| 2009 Extra Mile Data, www.extramiledata.com.
' For questions or issues, please contact support@extramiledata.com.
' Use (at your own risk) and modify freely as long as proper credit is given.
On Error GoTo Err_MinimizeRibbon

    Dim blnIsMin As Boolean
    
    ' The Ribbon has a height of 147 when it is maximized.
    ' If it is maximized, set the blnIsMin value to False.
'    MsgBox Application.CommandBars.Item("Ribbon").Height
    If Application.CommandBars.Item("Ribbon").Height >= 100 Then
        'Ribbon IS NOT minimized
        blnIsMin = False
    Else
        'Ribbon IS minimized
        blnIsMin = True
    End If
    
    ' If the current state is the same as MakeMin, then do
    ' nothing.  Otherwise, toggle the ribbon by using Ctrl-F1.
    ' MakeMin is False means it's expanded
    'blnIsMin = False means it's expanded
    If MakeMin = blnIsMin Then
        ' Do nothing.
'        SendKeys "^{F1}", True
    Else
        ' Send the keystrokes and wait until they are processed.
        ' IF MakeMin is False and blnIsMin is True
        SendKeys "^{F1}", True
    End If

    MinimizeRibbon = True

Exit_MinimizeRibbon:
    On Error Resume Next
    Exit Function

Err_MinimizeRibbon:
    MsgBox Err.Number & " " & Err.Description, vbCritical, "MinimizeRibbon"
    MinimizeRibbon = False
    Resume Exit_MinimizeRibbon

End Function

Sub DoWord10Stuff(State As String)
'   If Val(Application.Version) >= 11 And ActiveDocument.ProtectionType = wdAllowOnlyReading Then
'    ActiveDocument.Unprotect "snad7623"
'   Else
'    ActiveDocument.Unprotect
'   End If
  If State = "Preserve" Then
    Dim fPasteSmartCutAndPaste As Boolean
    fPasteSmartCutAndPaste = Application.Options.PasteSmartCutPaste
  ' store the current value
    UpdateText "CutPaste", fPasteSmartCutAndPaste
  'turn it off
    Options.PasteSmartCutPaste = False
  Else
    Options.SmartCutPaste = ActiveDocument.Bookmarks.Item("CutPaste").Range.Text
  End If
   If Val(Application.Version) >= 11 And ActiveDocument.ProtectionType <> wdAllowOnlyReading Then
    ActiveDocument.Protect wdAllowOnlyReading, , "snad7623"
   Else
    ActiveDocument.Protect wdAllowOnlyComments
   End If
  Application.ShowStartupDialog = False
  If Val(Application.Version) <= 10 Then
  Else
    CommandBars("Task Pane").visible = False
  End If
'  CommandBars("Task Pane").Visible = False
End Sub
Sub CheckDocMap()
If ActiveWindow.DocumentMap = True Then
  ActiveWindow.DocumentMap = False
End If
End Sub

Sub SaveIt()
Dim ActString As String
ActString = CommandBars.ActionControl.Tag
NameType = Mid(ActString, 1, (InStr(1, ActString, "|") - 1))
ActString = Mid(ActString, InStr(1, ActString, "|") + 1)
SectionName = Mid(ActString, 1, InStr(1, ActString, "|") - 1)
ActString = Mid(ActString, InStr(1, ActString, "|") + 1)
Action = Mid(ActString, 1, InStr(1, ActString, "|") - 1)
ActString = Mid(ActString, InStr(1, ActString, "|") + 1)
curCtrl = Mid(ActString, 1, InStr(1, ActString, "|") - 1)
ActString = Mid(ActString, InStr(1, ActString, "|") + 1)
SaveType = Mid(ActString, 1, InStr(1, ActString, "|") - 1)
ActString = Mid(ActString, InStr(1, ActString, "|") + 1)
Page = Mid(ActString, 1, InStr(1, ActString, "|") - 1)
ActString = Mid(ActString, InStr(1, ActString, "|") + 1)
X = Mid(ActString, 1, InStr(1, ActString, "|") - 1)
ActString = Mid(ActString, InStr(1, ActString, "|") + 1)
Y = Mid(ActString, 1, InStr(1, ActString, "|") - 1)
ActString = Mid(ActString, InStr(1, ActString, "|") + 1)
If ActString <> """" Then
  CCPage = Mid(ActString, 1, Len(ActString) - 1)
End If
frmMain.SaveInfo NameType, SectionName, Action, curCtrl, SaveType, Page, X, Y, CCPage
End Sub
Sub LoadXML()
   Dim strXML As String
   Dim objXML As MSXML2.DOMDocument
'Dim StrFileName As String

MsgBox "Load XML"

'   Dim fd As FileDialog
'   Dim vrtSelectedItem As Variant
'   Set fd = Application.FileDialog(msoFileDialogFilePicker)
'   With fd
'        .InitialFileName = "c:\sample\*.xml"
'        If .Show = -1 Then
'            For Each vrtSelectedItem In .SelectedItems
'                Application.ImportXML _
'                    DataSource:=vrtSelectedItem, _
'                    ImportOptions:=acStructureAndData
'
'            Next vrtSelectedItem
'        Else
'        End If
'    End With
'    Set fd = Nothing


    'Load strXML here

'    If Not objXML.LoadXML(strXML) Then
'        Err.Raise objXML.parseError.ErrorCode, , objXML.parseError.reason
'
'        Dim point As IXMLDOMNode
'        Set point = objXML.FirstChild
'
'        Debug.Print point.SelectSingleNode("X").Text
'        Debug.Print point.SelectSingleNode("Y").Text
'
'    End If
End Sub

Sub PgUp()
Application.Browser.Target = wdBrowsePage
Application.Browser.Previous
End Sub
Sub PgDown()
Application.Browser.Target = wdBrowsePage
Application.Browser.Next
End Sub
Public Sub StartOfWizard()

'=============================================================
' WizLib.StartOfWizard
'
' Sub
'-------------------------------------------------------------
' Modified 08-23-2001 WordBasic to VBA
' Author : Daniel H. Smith, Programmer/Analyst
' Notes :  Complete
'-------------------------------------------------------------
' Revision History
'-------------------------------------------------------------
' 08-23-2001 DHS: Not Tested -- Checked -- Keep 8/23/02
'=============================================================
' End Code Header block
    VersionSpecific.ClearUndoStack
    Dim FSA As Object: Set FSA = Dialogs(wdDialogFileSaveAs)
    If FSA.Format = wdFormatTemplate Then VersionSpecific.StopWiz
    CheckTemplate
    Application.EnableCancelKey = wdCancelDisabled
    Application.ScreenUpdating = False
    System.Cursor = wdCursorWait
    ResetToolbars.Main
'Added 9/11/2006 to allow use in Word 2003
  On Error Resume Next
  If ActiveDocument.ProtectionType <> wdNoProtection Then
    ActiveDocument.Unprotect "snad7623"
  End If
'    On Error Resume Next
'  If ActiveDocument.ProtectionType <> wdNoProtection Then
'    ActiveDocument.Unprotect
'  End If
    On Error GoTo -1: On Error GoTo 0
    With Options
        .CheckSpellingAsYouType = False
    End With
    Application.ScreenUpdating = False
    With ActiveWindow.View
        .ShowFieldCodes = True
        .ShowTabs = True
        .ShowSpaces = True
        .ShowParagraphs = True
        .ShowHiddenText = False
        .ShowAll = True
    End With
    #If VBA6 Then
    With Options
        .ReplaceSelection = True
        .Overtype = False
'        .PasteSmartCutPaste = False
        .Pagination = False
    End With
    #End If
    ActiveWindow.View.Type = wdOutlineView
    ActiveWindow.View.ShowHeading 9
    ActiveWindow.View.ShowAllHeadings
    #If VBA6 Then
        ActiveWindow.View.Type = wdPrintView
    #Else
        ActiveWindow.View.Type = wdPageView
    #End If
    Set FSA = Nothing
End Sub

Public Sub SaveYourFile()

'=============================================================
' WizLib.SaveYourFile
'
' Sub
'-------------------------------------------------------------
' Modified 08-23-2001 WordBasic to VBA
' Author : Daniel H. Smith, Programmer/Analyst
' Notes :  Complete
'-------------------------------------------------------------
' Revision History
'-------------------------------------------------------------
' 08-23-2001 DHS: 9-14-01 Completed.  Needs testing/proof DHS:
' -- Checked -- Keep 8/23/02
'=============================================================
' End Code Header block
    Dim eTime As String
    Dim TimeNow As String
    Application.ScreenUpdating = False
    
    TimeNow = Format(Now(), "nn")
    eTime = Format(Now(), "nn") - ActiveDocument.Variables("CurrentTime")
  If eTime < 0 Then
    eTime = Format(Now(), "nn")
    eTime = (60 - ActiveDocument.Variables("CurrentTime")) + eTime
  End If
  If eTime > 10 Then
      If MsgBox("Do you wish to save current changes to your document?'" & vbCrLf & vbCrLf & _
        "(TIP: You should save your documents frequently." & vbCrLf & _
        "Saving increases processing speed and limits the risk of" & vbCrLf & _
        "data loss in case of power, computer, or application failure.)", _
        vbQuestion + vbYesNo, _
        "Save Document Now?") = vbYes Then
          FileSaveApp.udSave
      End If
  End If
  For Each aVar In ActiveDocument.Variables
    If aVar.Name = "CurrentTime" Then
      ActiveDocument.Variables(aVar.Name).Delete
    End If
  Next aVar
  ActiveDocument.Variables.Add ("CurrentTime"), TimeNow
End Sub
Function WizField(Book)

'=============================================================
' WizLib.WizField
' Book (Variant)
' Function
'-------------------------------------------------------------
' Modified 08-23-2001 WordBasic to VBA
' Author : Daniel H. Smith, Programmer/Analyst
' Notes :  Complete
'-------------------------------------------------------------
' Revision History
'-------------------------------------------------------------
' 08-23-2001 DHS:  Untested -- Checked -- Keep 8/23/02
'=============================================================
' End Code Header block
    Dim myText As String
'Added 9/11/2006 to allow use in Word 2003
  On Error Resume Next
  If ActiveDocument.ProtectionType <> wdNoProtection Then
    ActiveDocument.Unprotect "snad7623"
  End If
'    On Error Resume Next
'  If ActiveDocument.ProtectionType <> wdNoProtection Then
'    ActiveDocument.Unprotect
'  End If
    If ActiveDocument.Bookmarks.Exists(Book) Then
        myText = ActiveDocument.Bookmarks(Book).Range.Text
        If Left(myText, 1) = "[" Then myText = ""
    End If
    WizField = myText
End Function
Sub UpdateText(Book, Text_)

'=============================================================
' WizLib.UpdateText
' Book (Variant)
' Text_ (Variant)
' Sub
'-------------------------------------------------------------
' Modified 08-23-2001 WordBasic to VBA
' Author : Daniel H. Smith, Programmer/Analyst
' Notes :  Complete
'-------------------------------------------------------------
' Revision History
'-------------------------------------------------------------
' 08-23-2001 DHS: -- Checked 8/23/02 -- KEEP
'=============================================================
' End Code Header block
'Added 9/11/2006 to allow use in Word 2003
  On Error Resume Next
  If ActiveDocument.ProtectionType <> wdNoProtection Then
    ActiveDocument.Unprotect "snad7623"
  End If
'  If ActiveDocument.ProtectionType <> wdNoProtection Then
'    ActiveDocument.Unprotect
'  End If
    Application.ScreenUpdating = False
    Dim xx
    If Text_ = "" Or IsNull(Text_) Then Text_ = "[" + Book + "]"
    If ActiveDocument.Bookmarks.Exists(Book) Then
        Dim BMRange As Range
        Set BMRange = ActiveDocument.Bookmarks(Book).Range
        BMRange.Text = Text_
        ActiveDocument.Bookmarks.Add Book, BMRange

'        ActiveDocument.Bookmarks(Book).Select
'        xx = Selection.Start
'        ActiveDocument.Range(xx, Selection.End).Select
'        Selection.TypeText Trim(Text_)
'        ActiveDocument.Range(xx, Selection.End).Select
'        ActiveDocument.Bookmarks.Add (Book)
    End If
    FixWindows (Val(Application.Version) > 10)
'    #If VBA6 Then
'    With ActiveWindow.View
'        .ShowRevisionsAndComments = False
'        .RevisionsView = wdRevisionsViewFinal
'    End With
'    #End If
End Sub
Public Sub FixWindows(FState)
    #If VB6 Then
  If FState Then
    With ActiveWindow.View
        .ShowRevisionsAndComments = False
        .RevisionsView = wdRevisionsViewFinal
    End With
  End If
  #End If
End Sub


Public Sub ShowHide(BookText, CheckValue, ValueToExpand)

'=============================================================
' WizLib.ShowHide
' BookText (Variant)
' CheckValue (Variant)
' ValueToExpand (Variant)
' Sub
'-------------------------------------------------------------
' Modified 08-23-2001 WordBasic to VBA
' Author : Daniel H. Smith, Programmer/Analyst
' Notes :  Complete
'-------------------------------------------------------------
' Revision History
'-------------------------------------------------------------
' 08-23-2001 DHS: 11-06-2001 DHS:  Untested
'=============================================================
' End Code Header block
    If ActiveDocument.Bookmarks.Exists(BookText) = 0 Then GoTo EndOfShowHide
    If CheckValue = ValueToExpand Then
        ActiveDocument.Bookmarks(BookText).Select
        Selection.Rows.HeightRule = wdRowHeightAuto
    Else
        ActiveDocument.Bookmarks(BookText).Select
        Selection.Rows.SetHeight 1, wdRowHeightExactly
    End If
EndOfShowHide:
End Sub
Public Sub DuplicateGroup(Group)
Application.ScreenUpdating = False
    Dim MP
    ActiveDocument.Bookmarks(Group).Range.Select
    Selection.Range.Copy
    Selection.SplitTable
    If Not ActiveDocument.Bookmarks.Exists("MP" & Group) Then
        MP = 0
    Else
        MP = 1
    End If
    If MP = 0 Then
        ActiveDocument.Bookmarks("\Para").Range.Select
        ActiveDocument.Bookmarks.Add "MP" + Group
        ActiveDocument.Bookmarks("\StartofSel").Range.Select
    End If
    Selection.Range.Paste
    ActiveDocument.Bookmarks("\Para").Range.Select
    ActiveDocument.Bookmarks("\EndofSel").Range.Select
    Selection.MoveRight wdCharacter, 1, wdMove
    Selection.Range.Delete
End Sub
Public Sub SaveAsDefault(MyKey, MyValue)

'=============================================================
' WizLib.SaveAsDefault
' MyKey (Variant)
' MyValue (Variant)
' Sub
'-------------------------------------------------------------
' Modified 08-23-2001 WordBasic to VBA
' Author : Daniel H. Smith, Programmer/Analyst
' Notes :  Complete
'-------------------------------------------------------------
' Revision History
'-------------------------------------------------------------
' 08-23-2001 DHS:   -- Checked -- Keep 8/23/02
'=============================================================
' End Code Header block
    Dim MySection
    On Error Resume Next
   
   MySection = "HKEY_CURRENT_USER\Software\SBA\" + WizInfo.WizSection + "\" + WizInfo.WizVer
   System.PrivateProfileString("", MySection, MyKey) = MyValue
   On Error GoTo -1: On Error GoTo 0
End Sub
Public Sub GetDefault(MyKey, MyBook)

'=============================================================
' WizLib.GetDefault
' MyKey (Variant)
' MyBook (Variant)
' Sub
'-------------------------------------------------------------
' Modified 08-23-2001 WordBasic to VBA
' Author : Daniel H. Smith, Programmer/Analyst
' Notes :  Complete
'-------------------------------------------------------------
' Revision History
'-------------------------------------------------------------
' 08-23-2001 DHS: Untested -- Checked 8/23/02 -- KEEP
'=============================================================
' End Code Header block
    Dim MySection
    Dim xx
    Dim yy
    On Error Resume Next
    MySection = "HKEY_CURRENT_USER\Software\SBA\" + WizInfo.WizSection + "\" + WizInfo.WizVer
    xx = System.PrivateProfileString("", MySection, MyKey)
    If xx <> "" Then UpdateText MyBook, xx
'    yy = System.PrivateProfileString("", MySection, "NoList")
'    If yy = "False" Then
'      frmMain.cbxSBAName.Enabled = False
'    End If
    On Error GoTo -1: On Error GoTo 0
End Sub
Public Sub CheckTemplate()

'=============================================================
' WizLib.CheckTemplate
' Sub
'-------------------------------------------------------------
' Modified 08-23-2001 WordBasic to VBA
' Author : Daniel H. Smith, Programmer/Analyst
' Notes :  Complete
'-------------------------------------------------------------
' Revision History
'-------------------------------------------------------------
' 08-23-2001 DHS: Tested OK
'=============================================================
' End Code Header block
    Dim CurTemplate
    Dim DocTemplate
    CurTemplate = WizInfo.WizTemplate
    If ActiveDocument.Bookmarks.Exists("WizTemplate") Then
'Added 9/11/2006 to allow use in Word 2003
  On Error Resume Next
  If ActiveDocument.ProtectionType <> wdNoProtection Then
    ActiveDocument.Unprotect "snad7623"
  End If
'        On Error Resume Next
'  If ActiveDocument.ProtectionType <> wdNoProtection Then
'    ActiveDocument.Unprotect
'  End If
        DocTemplate = ActiveDocument.Bookmarks("WizTemplate").Range.Text
    Else
        DocTemplate = "the same wizard version as specified in the footer"
    End If
    If DocTemplate <> CurTemplate Then
        MsgBox "Problem:  this document is now attached to " + CurTemplate + " but was not created with that version of the wizard." + Chr(13) + Chr(13) + "Solution: reconnect the document to " + DocTemplate + ".", vbCritical + vbOKOnly, "Wrong Wizard Version"
        Selection.HomeKey Unit:=wdStory
        On Error Resume Next
        If Val(Application.Version) >= 11 And ActiveDocument.ProtectionType <> wdAllowOnlyReading Then
         ActiveDocument.Protect wdAllowOnlyReading, , "snad7623"
        Else
         ActiveDocument.Protect wdAllowOnlyComments
        End If
        VersionSpecific.StopWiz
    End If
End Sub
Public Function GetTempDir()

'=============================================================
' WizLib.GetTempDir
' Function
'-------------------------------------------------------------
' Modified 08-23-2001 WordBasic to VBA
' Author : Daniel H. Smith, Programmer/Analyst
' Notes :  Complete
'-------------------------------------------------------------
' Revision History
'-------------------------------------------------------------
' 08-23-2001 DHS:
'=============================================================
' End Code Header block
    Dim TempPath
    Dim WinDir
    Dim Y
    TempPath = Environ("TEMP")
    If Len(TempPath) = 0 Then TempPath = Environ("TMP")
    If Len(TempPath) = 0 Then
        WinDir = String(144, " ")
        Y = GetWindowsDirectory(WinDir, 144)
        TempPath = Left(WinDir, Y)
    End If
    If Right(TempPath, 1) <> "\" Then TempPath = TempPath + "\"
    GetTempDir = TempPath
End Function
Public Sub CopyDataFiles()

'=============================================================
' WizLib.CopyDataFiles
' Sub
'-------------------------------------------------------------
' Modified 08-23-2001 WordBasic to VBA
' Author : Daniel H. Smith, Programmer/Analyst
' Notes :  Complete
' 8/23/01 -- CopyFileA "Bad DLL Calling Convention"
'-------------------------------------------------------------
' Revision History
'-------------------------------------------------------------
' 08-23-2001 DHS:
'=============================================================
' End Code Header block
    
    Dim SourceFile1 As String
    Dim SourceFile2 As String
    Dim TempPath As String
    Dim FromPath As String
    Dim MyFile As String
    Dim xx As Integer
    On Error Resume Next
    SourceFile1 = "SBAOffices.txt"
    SourceFile2 = "EmpList.txt"
    TempPath = GetTempDir
    
    FromPath = Environ("APPWG")
    If Right(FromPath, 1) <> "\" Then
      FromPath = FromPath + "\"
    End If
    
    FromPath = FromPath + "SBA Data\"
    If Dir(FromPath + SourceFile2) <> "" Then
      GoTo Src1
    End If
    
Src1:
    If Dir(FromPath + SourceFile1) <> "" Then
      GoTo CopyFiles
    End If
    
    Dim FT As Object: Set FT = Dialogs(wdDialogToolsTemplates)
    MyFile = FT.Template
    FromPath = ActiveDocument.AttachedTemplate.FullName

CopyFiles:
    On Error Resume Next
    SetAttr TempPath + SourceFile1, vbReadOnly
    SetAttr TempPath + SourceFile2, vbReadOnly
    On Error GoTo -1: On Error GoTo 0
    xx = CopyFileA(FromPath + SourceFile1, TempPath + SourceFile1, 0)
    xx = CopyFileA(FromPath + SourceFile2, TempPath + SourceFile2, 0)
    On Error Resume Next
    ActiveDocument.Variables("SBAOffices").Delete
    ActiveDocument.Variables.Add "SBAOffices", TempPath + SourceFile1
    ActiveDocument.Variables("EmpList").Delete
    ActiveDocument.Variables.Add "EmpList", SourceFile2
    On Error GoTo -1: On Error GoTo 0
Set FT = Nothing
End Sub
Public Function LUText()

'=============================================================
' WizLib.LUText
'
' Function
'-------------------------------------------------------------
' Modified 08-23-2001 WordBasic to VBA
' Author : Daniel H. Smith, Programmer/Analyst
' Notes :  Complete
'-------------------------------------------------------------
' Revision History
'-------------------------------------------------------------
' 08-23-2001 DHS:
'=============================================================
' End Code Header block
    Dim Initials As String
    On Error Resume Next
    Dim TOUI As Object: Set TOUI = Dialogs(wdDialogToolsOptionsUserInfo)
    Initials = TOUI.Initials
    If Len(Initials) = 0 Then Initials = "(Unknown)"
    LUText = "by " & Initials & " on " & Str(Date) & " " & Str(Time)
    On Error GoTo -1: On Error GoTo 0
    Set TOUI = Nothing
End Function

Public Function SortArray(ArrayName As Variant, _
    Optional SortOrder As Integer = 0, _
    Optional SortFrom As Variant, _
    Optional SortTo As Variant, _
    Optional SortKey As Long) As Variant
'VBA (near) equivalent for late, lamented WordBasic SortArray command
'w/o dependency on WordBasic object

'performs row sort on ArrayName
'always returns true; ArrayName is returned sorted when complete
'ArrayName  The one-dimensional or two-dimensional array to be sorted.
'           Arrays with more than two dimensions are not sorted.
'SortOrder  The sorting order:
'               saAscending or saDecending
'               default if omitted: saAscending
'SortFrom   Number of the first element to sort. The default is LBound(ArrayName).
'SortTo     Number of the last element to sort. The default is UBound(ArrayName).
'SortKey    The number of the row or column to sort by (applies only to
'           two-dimensional arrays):
'               0 (zero) indicates the first column, 1 indicates the second,
'               and so on. The default is 0 (zero).

'adapted from Microsoft Knowledge Base
'   title "XL: Using a Visual Basic Macro to Sort Arrays in Microsoft Excel"
'   article Q133135
'   dated February 3, 1998
Dim maxVal As Variant
Dim maxIndex As Integer
Dim i As Variant
Dim j As Integer
Dim tempArray() As Variant
Dim LeftBound As Long
Dim RightBound As Long
Dim r As Long
Dim c As Long
Dim isSingleColumn As Boolean
Dim maxValMultiColumn() As Variant
    RightBound = -1
    On Error Resume Next
    LeftBound = LBound(ArrayName, 2)
    RightBound = UBound(ArrayName, 2)
    On Error GoTo 0
    isSingleColumn = RightBound = -1
    If IsMissing(SortFrom) Then SortFrom = LBound(ArrayName)
    If IsMissing(SortTo) Then SortTo = UBound(ArrayName)
    'build TempArray to perform sort
    If isSingleColumn Then
        ReDim tempArray(SortFrom To SortTo)
    Else
        ReDim tempArray(SortFrom To SortTo, LeftBound To RightBound)
    End If
    For r = SortFrom To SortTo
        If isSingleColumn Then
            tempArray(r) = ArrayName(r)
        Else
            For c = LeftBound To RightBound
                tempArray(r, c) = ArrayName(r, c)
            Next
        End If
    Next
    'now sort TempArray
    ' Step through the elements in the array starting with the
    ' last element in the array.
    For i = SortTo To SortFrom Step -1
        ' Set MaxVal to the element in the array and save the
        ' index of this element as MaxIndex.
        If isSingleColumn Then
            maxVal = tempArray(i)
        Else
            maxVal = tempArray(i, SortKey)
        End If
        maxIndex = i
        ' Loop through the remaining elements to see if any is
        ' larger (ascending)/smaller (descending) than MaxVal. If it is then set this element
        ' to be the new MaxVal.
        For j = SortFrom To i
            If SortOrder = SAASCENDING Then
                If isSingleColumn Then
                    If tempArray(j) > maxVal Then
                        maxVal = tempArray(j)
                        maxIndex = j
                    End If
                Else
                    If tempArray(j, SortKey) > maxVal Then
                        maxVal = tempArray(j, SortKey)
                        maxIndex = j
                    End If
                End If
            Else
                If isSingleColumn Then
                    If tempArray(j) < maxVal Then
                        maxVal = tempArray(j, SortKey)
                        maxIndex = j
                    End If
                Else
                    If tempArray(j, SortKey) < maxVal Then
                        maxVal = tempArray(j, SortKey)
                        maxIndex = j
                    End If
                End If
            End If
        Next j
        ' If the index of the largest element is not i, then
        ' exchange this element with element i.
        If maxIndex < i Then
            If isSingleColumn Then
                tempArray(maxIndex) = tempArray(i)
                tempArray(i) = maxVal
            Else
                'store values at maxIndex in temporary array
                ReDim maxValMultiColumn(RightBound)
                For c = LeftBound To RightBound
                    maxValMultiColumn(c) = tempArray(maxIndex, c)
                Next
                For c = LeftBound To RightBound
                    tempArray(maxIndex, c) = tempArray(i, c)
                Next
                For c = LeftBound To RightBound
                    tempArray(i, c) = maxValMultiColumn(c)
                Next
            End If
        End If
    Next i
    'replace elements in ArrayName with sorted elements from TempArray
    For r = SortFrom To SortTo
        If isSingleColumn Then
            ArrayName(r) = tempArray(r)
        Else
            For c = LeftBound To RightBound
                ArrayName(r, c) = tempArray(r, c)
            Next
        End If
    Next
SortArray = True
End Function
Public Sub ConnectToTemplate()
Dim MyTemplate
Dim MyPath
Dim X

MyTemplate = GetTemplateName

If MyTemplate = "" Then

    WordBasic.MsgBox "Word could not determine the Wizard name and version.", "Word could not attach document to Authorization Wizard", 16

Else

    MyPath = Environ("AppWG")
    If Right(MyPath, 1) <> "\" Then
        MyPath = MyPath + "\"
    End If
    On Error GoTo -1: On Error GoTo AddSub
    X = GetAttr(MyPath + MyTemplate)
AddSub:
    MyPath = ""
'    If Len(Dir("X:\Winapps\")) > 0 Then
        MyPath = "X:\WinApps\"
        MyPath = MyPath + "SBA Templates\FD\"
        On Error GoTo -1: On Error GoTo CheckTemplPath
        X = GetAttr(MyPath + MyTemplate)
'    Else
'    MsgBox Len(Dir("X:\Winapps\"))
'        MyPath = ""
'    End If

CheckTemplPath:
    MyPath = ""
        MyPath = Application.Options.DefaultFilePath(wdUserTemplatesPath)
        If Right(MyPath, 1) <> "\" Then
            MyPath = MyPath + "\"
        End If
        On Error GoTo -1: On Error GoTo CheckTemplPath2
        X = GetAttr(MyPath + MyTemplate)
'        If Len(Dir(MyPath & MyTemplate)) > 0 Then
            GoTo AttachToTempl
'        Else
            MyPath = ""
'        End If

CheckTemplPath2:
    MyPath = ""
'    If MyPath = "" Then
        MyPath = Application.Options.DefaultFilePath(wdWorkgroupTemplatesPath)
        If Right(MyPath, 1) <> "\" Then
            MyPath = MyPath + "\"
        End If
        On Error GoTo -1: On Error GoTo PathError
        X = GetAttr(MyPath + MyTemplate)
'        If Len(Dir(MyPath & MyTemplate)) > 0 Then
'            GoTo AttachToTempl
'        End If
'    End If
    
    
AttachToTempl:
    On Error GoTo -1: On Error GoTo PathError
    X = GetAttr(MyPath & MyTemplate)
    MsgBox MyPath + MyTemplate
    ActiveDocument.AttachedTemplate = MyPath & MyTemplate
    AutoOpen.Main
    MsgBox "The document was successfully attached to " + MyTemplate, vbInformation, "Authorization Wizard Attached!"
    On Error GoTo -1: On Error GoTo 0
    GoTo Suite

PathError:
If MsgBox("The template path or file could not be found in Word's template directories.:     " & vbCrLf & vbCrLf & _
     WizInfo.WizTemplate & vbCrLf & vbCrLf & _
    "Click 'Retry' to locate the Wizard manually.  Navigate to the" & vbCrLf & _
    "subdirectory containing the file '" & WizInfo.WizTemplate & "'       " & vbCrLf & _
    "and click OK to return to the document.", _
    vbExclamation + vbRetryCancel + vbDefaultButton2, _
    "Wizard Template") = vbRetry Then
     Reattach
'    MsgBox "The Wizard template file, " & MyTemplate & ", could not be found.    ", vbOKOnly + vbCritical, "Authorization Wizard Template Error"
End If

Suite:
        
End If

End Sub


Private Function GetTemplateName()
Dim MyTemplate

' Get Template Name
If ActiveDocument.Bookmarks.Exists("WizTemplate") Then
    MyTemplate = ActiveDocument.Bookmarks("WizTemplate").Range.Text
    'ActiveDocument.CustomDocumentProperties
ElseIf ActiveDocument.CustomDocumentProperties("WizTemplate") Then
    MyTemplate = ActiveDocument.CustomDocumentProperties("WizTemplate")
ElseIf WordBasic.DocumentPropertyExists("Wizard Name") Then
    MyTemplate = WordBasic.[GetDocumentProperty]("Wizard Name")
    If WordBasic.DocumentPropertyExists("Wizard Version") Then
        MyTemplate = MyTemplate + " " + _
                        WordBasic.[GetDocumentProperty]("Wizard Version") + _
                        ".dot"
    End If
'ElseIf WordBasic.ExistingBookmark("dtDate750") Then
'    MyTemplate = "7a Wizard 2.0.dot"
'ElseIf WordBasic.ExistingBookmark("Date750") Then
'    MyTemplate = "7a Wizard 1.4.dot"
Else
    MyTemplate = ""
End If

GetTemplateName = MyTemplate

End Function

Private Sub Reattach()
  On Error Resume Next
  If ActiveDocument.ProtectionType <> wdNoProtection Then
    ActiveDocument.Unprotect "snad7623"
  End If

    Dim dlg2 As Object
    Set dlg2 = Dialogs(wdDialogToolsTemplates)
    SendKeys "%A", False
    SendKeys WizInfo.WizTemplate, False
'    dlg2.Show
'    MsgBox dlg2.Name
'    If InStr(dlg2.Name, "\") > 0 Then
'        dlg2.Name = dlg2.Name
'    Else
''        dlg2.Name = SBALoanPath
'    End If
'    dlg2.Format = 0
'    On Error Resume Next
'    ChangeFileOpenDirectory SBALoanPath
'Dialogs(wdDialogFileOpen).Show
'Dialogs(wdDialogFileOpen).Show
X = dlg2.Show
''    If dlg2.Show = 0 Then
'    If x = 0 Then
'        MsgBox "Cancelled"
'    ElseIf x = -1 Then
'        MsgBox "OK"
'
'    End If

'Return value Description
'-2 The Close button.
'-1 The OK button.
'0 (zero) The Cancel button.
'> 0 (zero) A command button: 1 is the first button, 2 is the second button, and so on.
    
'    With ActiveDocument
'        .UpdateStylesOnOpen = False
'        .AttachedTemplate = _
'            dlg2.Name & MyTemplate
''            "C:\Documents and Settings\DHSMITH\Application Data\Microsoft\Templates\7a Wizard 2007.1.dot"
'        .XMLSchemaReferences.AutomaticValidation = True
'        .XMLSchemaReferences.AllowSaveAsXMLWithoutValidation = False
'    End With
CheckTemplate
If Val(Application.Version) >= 11 And ActiveDocument.ProtectionType <> wdAllowOnlyReading Then
 ActiveDocument.Protect wdAllowOnlyReading, , "snad7623"
Else
 ActiveDocument.Protect wdAllowOnlyComments
End If
'MsgBox "Done"
End Sub
Sub AddBeta(vString As String)
' AddBeta Macro
'Macro recorded 6/9/2010 by SBA

 Dim pSection As Word.Section
 Dim pHeader As Long
 Dim WMName As Variant
 Dim WMMessage As String
 WMMessage = vString
 pHeader = 1
 If ActiveWindow.View.SplitSpecial = wdPaneNone Then
    ActiveWindow.ActivePane.View.Type = wdPrintView
Else
     ActiveWindow.View.Type = wdPrintView
End If
If Len(vString) > 4 Then '
Application.ScreenUpdating = False
For Each pSection In ActiveDocument.Sections
If pHeader <= 3 Then
  WMName = "BetaSec" & pHeader
  ActiveDocument.Sections(pHeader).Range.Select
  ActiveWindow.ActivePane.View.SeekView = wdSeekCurrentPageHeader
  Selection.HeaderFooter.Shapes.AddTextEffect(BetaMessage, WMMessage, "Tahoma", 1, False, False, 0, 0).Select
 ' MsgBox Selection.ShapeRange.Name
On Error GoTo MyUndoExit
  With Selection.ShapeRange
    .Name = WMName
    .TextEffect.NormalizedHeight = False
    .Line.visible = True 'False
    .Fill.visible = False 'True
    '.Fill.Solid
    .Fill.ForeColor.RGB = RGB(192, 192, 192)
    .Fill.Transparency = 0.5
    .Rotation = 315
    .LockAspectRatio = True
   .Height = InchesToPoints(1.59)
   .Width = InchesToPoints(7.93)
    .WrapFormat.AllowOverlap = True
    .WrapFormat.Side = wdWrapNone
    .WrapFormat.Type = 3
   .RelativeHorizontalPosition = _
      wdRelativeVerticalPositionMargin
   .RelativeVerticalPosition = _
      wdRelativeVerticalPositionMargin
    .Left = wdShapeCenter
    .Top = wdShapeCenter
  End With
  ActiveWindow.ActivePane.View.SeekView = wdSeekMainDocument
  pHeader = pHeader + 1
  Else
  ActiveWindow.ActivePane.View.SeekView = wdSeekMainDocument
'  Application.Selection.GoTo wdGoToPage, 1
'  Selection.MoveLeft Unit:=wdCharacter, Count:=1
  GoTo MyExit
  End If
  Next
  GoTo MyExit
MyUndoExit:
  ActiveDocument.Undo
MyExit:
  ActiveWindow.ActivePane.View.SeekView = wdSeekMainDocument
  Application.Selection.GoTo wdGoToPage, 1
  Selection.MoveLeft Unit:=wdCharacter, Count:=1
End If
  ActiveWindow.ActivePane.View.SeekView = wdSeekMainDocument
End Sub
Public Sub FindShape()
Dim oShpNrm As Shape          ' normal shape
For Each oShpNrm In ActiveDocument.Shapes
If oShpNrm.Type = msoTextEffect Then
'      oShpNrm.Select
      MsgBox "WordArt Shape"
oShpNrm.Delete
End If
Next
End Sub
Public Sub FindShape2()
Dim oShpNrm As Shape
Dim oInlineShpNrm As InlineShape
Dim sText As String
On Error GoTo ErrHandler
For Each oShpNrm In ActiveDocument.Shapes
sText = "no Word Art"
sText = oShpNrm.TextEffect.Text
If sText <> "no Word Art" Then
oShpNrm.Select
Selection.Text = sText
End If
Next
For Each oInlineShpNrm In ActiveDocument.InlineShapes
sText = "no Word Art"
sText = oInlineShpNrm.TextEffect.Text
If sText <> "no Word Art" Then
oInlineShpNrm.Select
Selection.Text = sText
End If
Next
ErrHandler:
Err.Clear
Resume Next
End Sub
Sub ClearBookmark(BookmarkName As String)
    If ActiveDocument.Bookmarks.Exists(BookmarkName) Then
        ActiveDocument.Bookmarks(BookmarkName).Select
        Selection.MoveEnd Unit:=wdLine, Count:=-1
        On Error Resume Next
        Selection.Range.Cut
        If Not ActiveDocument.Bookmarks.Exists(BookmarkName) Then
            ActiveDocument.Bookmarks.Add BookmarkName
        End If
        On Error GoTo -1: On Error GoTo 0
    End If
End Sub
Public Function CheckComplete(Book As String)
    If ActiveDocument.Bookmarks.Exists(Book) Then
        If ActiveDocument.Bookmarks(Book).Range.Text = 0 Then
            CheckComplete = False
        Else
            CheckComplete = True
        End If
    End If
End Function
Attribute VB_Name = "WizardSpecific"
Public Sub ApplyHeadingNumbering()
WordBasic.FormatHeadingNumber Points:="Auto", Color:=0, Before:="", Type:=3, After:=".", StartAt:="1", Include:=0, Alignment:=0, Indent:="0.3" + Chr(34), Space:="0" + Chr(34), Hang:=1, Level:="1", Font:="", StrikeThrough:=-1, Bold:=-1, Italic:=-1, Underline:=-1
WordBasic.FormatHeadingNumber Points:="Auto", Color:=0, Before:="", Type:=0, After:=".", StartAt:="1", Include:=0, Alignment:=0, Indent:="0.3" + Chr(34), Space:="0" + Chr(34), Hang:=1, Level:="2", Font:="", StrikeThrough:=-1, Bold:=-1, Italic:=-1, Underline:=-1
WordBasic.FormatHeadingNumber Points:="Auto", Color:=0, Before:="", Type:=4, After:=".", StartAt:="1", Include:=0, Alignment:=0, Indent:="0.3" + Chr(34), Space:="0" + Chr(34), Hang:=1, Level:="3", Font:="", StrikeThrough:=-1, Bold:=-1, Italic:=-1, Underline:=-1
WordBasic.FormatHeadingNumber Points:="Auto", Color:=0, Before:="(", Type:=0, After:=")", StartAt:="1", Include:=0, Alignment:=0, Indent:="0.3" + Chr(34), Space:="0" + Chr(34), Hang:=1, Level:="4", Font:="", StrikeThrough:=-1, Bold:=-1, Italic:=-1, Underline:=-1
WordBasic.FormatHeadingNumber Points:="Auto", Color:=0, Before:="(", Type:=4, After:=")", StartAt:="1", Include:=0, Alignment:=0, Indent:="0.3" + Chr(34), Space:="0" + Chr(34), Hang:=1, Level:="5", Font:="", StrikeThrough:=-1, Bold:=-1, Italic:=-1, Underline:=-1
WordBasic.FormatHeadingNumber Points:="Auto", Color:=0, Before:="[", Type:=0, After:="]", StartAt:="1", Include:=0, Alignment:=0, Indent:="0.3" + Chr(34), Space:="0" + Chr(34), Hang:=1, Level:="6", Font:="", StrikeThrough:=-1, Bold:=-1, Italic:=-1, Underline:=-1
WordBasic.FormatHeadingNumber Points:="Auto", Color:=0, Before:="[", Type:=4, After:="]", StartAt:="1", Include:=0, Alignment:=0, Indent:="0.3" + Chr(34), Space:="0" + Chr(34), Hang:=1, Level:="7", Font:="", StrikeThrough:=-1, Bold:=-1, Italic:=-1, Underline:=-1
WordBasic.FormatHeadingNumber Points:="Auto", Color:=0, Before:="{", Type:=0, After:="}", StartAt:="1", Include:=0, Alignment:=0, Indent:="0.3" + Chr(34), Space:="0" + Chr(34), Hang:=1, Level:="8", Font:="", StrikeThrough:=-1, Bold:=-1, Italic:=-1, Underline:=-1
WordBasic.FormatHeadingNumber Points:="Auto", Color:=0, Before:="{", Type:=4, After:="}", StartAt:="1", Include:=0, Alignment:=0, Indent:="0.3" + Chr(34), Space:="0" + Chr(34), Hang:=1, Level:="9", Font:="", StrikeThrough:=-1, Bold:=-1, Italic:=-1, Underline:=-1
WordBasic.FormatHeadingNumber RestartNum:=0
End Sub
Public Sub GetDefaultInfo()
Application.ScreenUpdating = False
With ActiveWindow
  .View.ShowFieldCodes = True
  .View = wdNormalView
End With
#If VBA6 Then
With Options
  .ReplaceSelection = True
  .Overtype = False
'  .PasteSmartCutPaste = False
End With
#End If
'Added 9/11/2006 to allow use in Word 2003
  On Error Resume Next
  If ActiveDocument.ProtectionType <> wdNoProtection Then
    ActiveDocument.Unprotect "snad7623"
  End If
'On Error Resume Next
'  If ActiveDocument.ProtectionType <> wdNoProtection Then
'    ActiveDocument.Unprotect
'  End If

frmMain.ShowBlankPage
Application.ScreenUpdating = False
On Error GoTo -1: On Error GoTo 0

GetDefault "LenderName", "LenderName"
GetDefault "LenderName2", "LenderName2"
GetDefault "LenderAddress", "LenderAddress"
GetDefault "LenderAddress2", "LenderAddress2"
GetDefault "LenderCity", "LenderCity"
GetDefault "LenderState", "LenderState"
GetDefault "LenderZip", "LenderZip"
GetDefault "LenderSign", "LenderSign"
GetDefault "SBAName", "SBAName"
GetDefault "SBAAddress", "SBAAddress"
GetDefault "SBAAddress2", "SBAAddress2"
GetDefault "SBACity", "SBACity"
GetDefault "SBAState", "SBAState"
GetDefault "SBAZip", "SBAZip"
GetDefault "SBACode", "SBACode"
GetDefault "FirstDisb", "FirstDisb"
GetDefault "LastDisb", "LastDisb"
GetDefault "obPLP", "obPLP"
GetDefault "SBSBA", "SBSBA"
GetDefault "SBLender", "SBLender"
GetDefault "LoanPrefix", "LoanPrefix"
GetDefault "LoanSuffix", "LoanSuffix"
GetDefault "Exit2Doc", "Exit2Doc"
GetDefault "OSFee", "OSFee"
GetDefault "obddRate", "obddRate"
GetDefault "obIO", "obIO"
GetDefault "IOBeginValue", "IOBeginValue"
GetDefault "IOBeginPeriod", "IOBeginPeriod"
GetDefault "IOFrequency", "IOFrequency"
GetDefault "IOPayDay", "IOPayDay"
GetDefault "obddPay", "obddPay"
GetDefault "PTFrequency", "PTFrequency"
GetDefault "PTPayDay1", "PTPayDay1"
GetDefault "PTPayDay2", "PTPayDay2"
GetDefault "PTBeginValue", "PTBeginValue"
GetDefault "PTBeginPeriod", "PTBeginPeriod"
GetDefault "PIPayPeriodV2", "PIPayPeriodV2"
GetDefault "IPPayPeriodV2", "IPPayPeriodV2"
GetDefault "RISPPayPeriodV2", "RISPPayPeriodV2"
GetDefault "SPI2PayPeriodV2", "SPI2PayPeriodV2"


frmMain.SetDialog 0
With ActiveWindow
  .View.ShowFieldCodes = False
End With
'Added 9/11/2006 to work with Word 2003
   On Error Resume Next
   If Val(Application.Version) >= 11 And ActiveDocument.ProtectionType <> wdAllowOnlyReading Then
    ActiveDocument.Protect wdAllowOnlyReading, , "snad7623"
   Else
    ActiveDocument.Protect wdAllowOnlyComments
   End If

'If ActiveDocument.ProtectionType = wdNoProtection Then
'  ActiveDocument.Protect wdAllowOnlyComments
'End If
End Sub
Attribute VB_Name = "frmAbout"
Attribute VB_Base = "0{D27E1345-61C7-497D-8F93-A4507BA33DEE}{F44A4D78-FA67-446F-AF77-F4ED288713FF}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Private Sub cmdOkay_Click()
    Me.hide
    Unload Me
End Sub

Private Sub Image2_Click()

End Sub

Private Sub UserForm_Deactivate()
Me.imgGC.visible = False
Me.imgRX.visible = False
End Sub

Private Sub UserForm_Initialize()
Dim WizAbout
Dim WizVersion
Dim WizRelease
Dim WordVer
Dim WizWord

frmAbout.Caption = "About " & WizName
frmAbout.lblVersion.Caption = WizName & " version " & WizVer
If WizSR <> "" Then
  WizardVer = WizVer & " (SR-" & WizSR & ")"
  frmAbout.lblVersion.Caption = WizName & " version " & WizardVer
End If

CheckVer

frmAbout.lblWordVersion.Caption = "for Microsoft Word 2010/Word 2013/Word 2016"
End Sub

Function CheckVer()
    Dim VerPath As String
    Dim hf As Integer: hf = FreeFile
    Dim lines() As String, i As Long
    
    VerPath = "\\s7apw12fp01\SACLC5\Winapps\SBA Data\Wizard.txt"
    
    If FileExists(VerPath) Then
        Open VerPath For Input As #hf
            lines = Split(Input$(LOF(hf), #hf), vbNewLine)
        Close #hf
            
        If lines(0) = WizardLocalVersion Then
            frmAbout.lblRelease.Caption = "(released " & CheckVer & ") Up to Date"
            Me.imgGC.visible = True
        Else
            frmAbout.lblRelease.Caption = "(released " & CheckVer & ") Update Required!"
            Me.imgRX.visible = True
        End If
    Else
        frmAbout.lblRelease.Caption = "(released " & ")"
    End If
End Function

Public Function FileExists(ByVal FileName As String) As Boolean
    Dim oFSO As Object
    Set oFSO = CreateObject("Scripting.FileSystemObject")
    FileExists = oFSO.FileExists(FileName)
End Function

Attribute VB_Name = "frmCalc"
Attribute VB_Base = "0{B04CCD2A-75B3-4D0C-90C0-713E347FFB0B}{05663EC0-9A27-4B88-B77B-7773918C545B}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False














































Option Explicit
Dim vResult As String
Dim mintWidth As Integer
Dim mintHeight As Integer

Private Sub cmdper_Click()
  txtCalcResult.Text = txtCalcResult.Text / 100
End Sub

Private Sub UserForm_Zoom(Percent As Integer)
  Me.Top = mintHeight * (Percent / 100)
  Me.Width = mintWidth * (Percent / 100)
  Me.Height = mintHeight * (Percent / 100)
  Me.Repaint
End Sub

Private Sub UserForm_Initialize()
  mintWidth = Me.Width
  mintHeight = Me.Height
End Sub

Private Sub cmd0_Click()
    Clear
    txtCalcResult.Text = txtCalcResult.Text & "0"
End Sub

Private Sub cmd1_Click()
    Clear
    txtCalcResult.Text = txtCalcResult.Text & "1"
End Sub

Private Sub cmd2_Click()
    Clear
    txtCalcResult.Text = txtCalcResult.Text & "2"
End Sub

Private Sub cmd3_Click()
    Clear
    txtCalcResult.Text = txtCalcResult.Text & "3"
End Sub

Private Sub cmd4_Click()
    Clear
    txtCalcResult.Text = txtCalcResult.Text & "4"
End Sub

Private Sub cmd5_Click()
    Clear
    txtCalcResult.Text = txtCalcResult.Text & "5"
End Sub

Private Sub cmd6_Click()
    Clear
    txtCalcResult.Text = txtCalcResult.Text & "6"
End Sub

Private Sub cmd7_Click()
    Clear
    txtCalcResult.Text = txtCalcResult.Text & "7"
End Sub

Private Sub cmd8_Click()
    Clear
    txtCalcResult.Text = txtCalcResult.Text & "8"
End Sub

Private Sub cmd9_Click()
    Clear
    txtCalcResult.Text = txtCalcResult.Text & "9"
End Sub

Private Sub cmdback_Click()
    On Error Resume Next
    txtCalcResult.Text = Mid(txtCalcResult.Text, 1, Len(txtCalcResult.Text) - 1)
End Sub

Private Sub cmdc_Click()
    Form_Load
End Sub

Private Sub cmdce_Click()
    txtCalcResult.Text = ""
End Sub

Private Sub cmdinverse_Click()
    txtCalcResult.Text = 1 / (Val(txtCalcResult.Text))
End Sub

Private Sub cmdmc_Click()
    M = 0
    lblmem.Caption = ""
    Cl = True
End Sub

Private Sub cmdmp_Click()
    M = M + Val(txtCalcResult.Text)
    lblmem.Caption = "M"
    Cl = True
End Sub

Private Sub cmdmr_Click()
    txtCalcResult.Text = M
    Cl = True
End Sub

Private Sub cmdms_Click()
    M = txtCalcResult.Text
    lblmem.Caption = "M"
    Cl = True
End Sub

Private Sub cmdpoint_Click()
  If Flag <> "" And txtCalcResult.Text = "" Then
    txtCalcResult.Text = "."
    Cl = False
  Else
    txtCalcResult.Text = txtCalcResult.Text & "."
  End If
End Sub

Private Sub cmdsign_Click()
    If blnsign = False Then
        txtCalcResult.Text = "-" & txtCalcResult.Text
        blnsign = True
        Cl = True
    Else
        txtCalcResult.Text = Val(Mid(txtCalcResult.Text, 2))
        blnsign = False
        Cl = True
    End If
            
End Sub

Private Sub cmdadd_Click()
    Cal
    Flag = "add"
End Sub

Private Sub cmdminus_Click()
    Cal
    Flag = "minus"
End Sub

Private Sub cmdmultiply_Click()
    Cal
    Flag = "multiply"
End Sub

Private Sub cmddivide_Click()
    Cal
    Flag = "divide"
End Sub

Private Sub cmdequal_Click()
   
    Select Case Flag
        Case "add"
            c = A + Val(txtCalcResult.Text)
            txtCalcResult.Text = Format(c, "#,###.00")
        Case "divide"
            c = A / Val(txtCalcResult.Text)
            txtCalcResult.Text = Format(c, "#,###.00")
        Case "multiply"
            c = A * Val(txtCalcResult.Text)
            txtCalcResult.Text = Format(c, "#,###.00")
        Case "minus"
            c = A - Val(txtCalcResult.Text)
            txtCalcResult.Text = Format(c, "#,###.00")
        End Select
    
    Flag = ""
    A = 0
    B = 0
    c = 0
    
End Sub

Private Sub cmdsqrt_Click()
    txtCalcResult.Text = Sqr(txtCalcResult.Text)
End Sub

Private Sub Form_Load()
    txtCalcResult.Text = ""
    A = 0
    B = 0
    c = 0
    M = 0
    Flag = ""
    blnsign = False
    Cl = False
End Sub

Private Sub lblCancel_Click()
  Me.hide
  frmMain.txtLDGuaranteeFee.SetFocus
  Unload frmCalc
End Sub

Private Sub mnuItemPaste_Click()
    vResult = txtCalcResult.Text
    Me.hide
    frmMain.txtLDGuaranteeFee.Text = Format(vResult, "#,###.00")
    Unload frmCalc
    Cl = True
    frmMain.txtLDMaturityYears.SetFocus
End Sub
Attribute VB_Name = "frmDefault"
Attribute VB_Base = "0{EBE96F63-CCC0-49B9-A888-9B38F0DF0170}{E84ACF7E-21E6-471F-B378-481E21459386}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
'Test Comment

Private Sub cmdDefaultCancel_Click()
  Cancel = True
  fName = Mid(frmDefault.Tag, InStr(1, frmDefault.Tag, "/") + 1)
  cmdStart = Mid(frmDefault.Tag, 1, InStr(1, frmDefault.Tag, "/") - 1)
  Unload Me
  If fName = "fraSBASignor" Then
      frmMain.mpgWizard.Value = 2
  End If
  frmMain(fName).SetFocus
  frmMain(cmdStart).SetFocus
End Sub

Private Sub cmdDefaultOkay_Click()
Dim cmdStart As String
  For X = 1 To 6
    If Me("chkDefault" & X).Caption = "Lender Information" And Me("chkDefault" & X).Value = True Then
      CurPanel = "pgLI1"
      SaveAsDefault "LenderName", frmMain.txtLIName.Text
      SaveAsDefault "LenderName2", frmMain.txtLIName2.Text
      SaveAsDefault "LenderAddress", frmMain.txtLIAddress.Text
      SaveAsDefault "LenderAddress2", frmMain.txtLIAddress2.Text
      SaveAsDefault "LenderCity", frmMain.txtLICity.Text
      SaveAsDefault "LenderState", frmMain.cbxLIState.Text
      SaveAsDefault "LenderZip", frmMain.txtLIZip.Text
      SaveAsDefault "LenderSign", frmMain.txtLILenderSign.Text
    ElseIf Me("chkDefault" & X).Caption = "SBA District Office Information" And Me("chkDefault" & X).Value = True Then
      CurPanel = "pgLI1"
      If frmMain.cbxSBAName.ListCount = 0 Then
        SaveAsDefault "SBAName", frmMain.txtSBAName.Text
        SaveAsDefault "SBACode", "0"
      Else
        SaveAsDefault "SBAName", frmMain.txtSBAName.Text
        SaveAsDefault "SBACode", frmMain.cbxSBAName.Column(7, frmMain.cbxSBAName.ListIndex)
      End If
      SaveAsDefault "SBAAddress", frmMain.txtSBAAddress.Text
      SaveAsDefault "SBAAddress2", frmMain.txtSBAAddress2.Text
      SaveAsDefault "SBACity", frmMain.txtSBACity.Text
      SaveAsDefault "SBAState", frmMain.cbxSBAState.Text
      SaveAsDefault "SBAZip", frmMain.txtSBAZip.Text
'    ElseIf Me("chkDefault" & X).Caption = "Disbursement Information" And Me("chkDefault" & X).Value = True Then
'      CurPanel = "pgLI3"
'      SaveAsDefault "FirstDisb", frmMain.txtDIFirstDisbursement.Text
'      SaveAsDefault "LastDisb", frmMain.txtDILastDisbursement.Text
    ElseIf Me("chkDefault" & X).Caption = "Signature Block PLP" And Me("chkDefault" & X).Value = True Then
      CurPanel = "pgLI3"
      If frmMain.optLSPLP.Value = True Then
        SaveAsDefault "obPLP", "0"
      Else
        SaveAsDefault "obPLP", "1"
      End If
      'SBA Signator
   ElseIf Me("chkDefault" & X).Caption = "SBA Administrator" And Me("chkDefault" & X).Value = True Then
      CurPanel = "pgLI3"
      If frmMain.cbxSBASignor.ListIndex = -1 Or frmMain.cbxSBASignor.visible = False Then
        SaveAsDefault "SBSBA", frmMain.txtSBASignor.Text
      Else
        SaveAsDefault "SBSBA", frmMain.cbxSBASignor.ListIndex
      End If
   ElseIf Me("chkDefault" & X).Caption = "Lender Signator" And Me("chkDefault" & X).Value = True Then
      CurPanel = "pgLI1"
      If frmMain.txtLILenderSign.Text <> "" Then
        SaveAsDefault "SBLender", frmMain.txtLILenderSign.Text
      End If
   ElseIf Me("chkDefault" & X).Caption = "Loan Number Prefix" And Me("chkDefault" & X).Value = True Then
      CurPanel = "pgLI3"
      If Len(frmMain.txtLSPrefix.Text) > 1 Then
        SaveAsDefault "LoanPrefix", frmMain.txtLSPrefix.Text
      End If
   ElseIf Me("chkDefault" & X).Caption = "Loan Number Suffix" And Me("chkDefault" & X).Value = True Then
      CurPanel = "pgLI3"
      If Len(frmMain.txtLSSuffix.Text) > 1 Then
        SaveAsDefault "LoanSuffix", frmMain.txtLSSuffix.Text
      End If
   ElseIf Me("chkDefault" & X).Caption = "Ongoing Servicing Fee" And Me("chkDefault" & X).Value = True Then
      CurPanel = "pgLI3"
      If Len(frmMain.txtLDOngoingServicingFee.Text) > 1 Then
        SaveAsDefault "OSFee", frmMain.txtLDOngoingServicingFee.Text
      End If
   ElseIf Me("chkDefault" & X).Caption = "Exit to Document" Then
      CurPanel = "pgLI1"
        SaveAsDefault "Exit2Doc", Me("chkDefault" & X).Value
        GetDefault "Exit2Doc", "Exit2Doc"
    End If
  Next X
  fName = Mid(frmDefault.Tag, InStr(1, frmDefault.Tag, "/") + 1)
  cmdStart = Mid(frmDefault.Tag, 1, InStr(1, frmDefault.Tag, "/") - 1)
  Unload frmDefault
  MsgBox "Defaults have been saved for future use.", _
  vbInformation + vbOKOnly, _
  "Defaults Saved"
frmMain.mpgWizard.Value = frmMain.mpgWizard.Pages(CurPanel).index
frmMain(fName).SetFocus
frmMain(cmdStart).SetFocus
End Sub

Private Sub UserForm_Activate()
Dim DefHeight As Integer
Dim BtnTop As Integer
DefHeight = 218
BtnTop = DefHeight - 42
  If Me.chkDefault6.Caption = "" Then
    Me.chkDefault6.visible = False
    DefHeight = DefHeight - 17
    BtnTop = DefHeight - 42
  Else
    DefHeight = DefHeight - 17
    BtnTop = DefHeight - 42
    Me.cmdDefaultCancel.Top = BtnTop
    Me.cmdDefaultOkay.Top = BtnTop
    frmDefault.Height = DefHeight
    Exit Sub
  End If
  If Me.chkDefault5.Caption = "" Then
    Me.chkDefault5.visible = False
    DefHeight = DefHeight - 17
    BtnTop = DefHeight - 42
  Else
    DefHeight = DefHeight - 17
    BtnTop = DefHeight - 42
    Me.cmdDefaultCancel.Top = BtnTop
    Me.cmdDefaultOkay.Top = BtnTop
    frmDefault.Height = DefHeight
    Exit Sub
  End If
  If Me.chkDefault4.Caption = "" Then
    Me.chkDefault4.visible = False
    DefHeight = DefHeight - 17
    BtnTop = DefHeight - 42
  Else
    DefHeight = DefHeight - 17
    BtnTop = DefHeight - 42
    Me.cmdDefaultCancel.Top = BtnTop
    Me.cmdDefaultOkay.Top = BtnTop
    frmDefault.Height = DefHeight
    Exit Sub
  End If
  If Me.chkDefault3.Caption = "" Then
    Me.chkDefault3.visible = False
    DefHeight = DefHeight - 17
    BtnTop = DefHeight - 42
  Else
    DefHeight = DefHeight - 17
    BtnTop = DefHeight - 42
    Me.cmdDefaultCancel.Top = BtnTop
    Me.cmdDefaultOkay.Top = BtnTop
    frmDefault.Height = DefHeight
    Exit Sub
  End If
  If Me.chkDefault2.Caption = "" Then
    Me.chkDefault2.visible = False
    DefHeight = DefHeight - 17
    BtnTop = DefHeight - 42
  Else
    DefHeight = DefHeight - 17
    BtnTop = DefHeight - 42
    Me.cmdDefaultCancel.Top = BtnTop
    Me.cmdDefaultOkay.Top = BtnTop
    frmDefault.Height = DefHeight
  End If
End Sub
Attribute VB_Name = "frmLoanCalc"
Attribute VB_Base = "0{AF6172E3-CC33-43F2-B260-0211D62FD441}{FD3AF96F-9D5E-49BE-BF5F-C5EA9DBEA0B2}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Private Sub cmdCalculate_Click()
Dim Queries As Integer
Dim varRate As Double
Dim varTerm As Double
Dim varAmount As Double
Dim varPayment As Double
Dim varValue As Double
varRate = 0
varTerm = 0
varAmount = 0
varValue = 0
Queries = 0
Dim TermMult As Integer
TermMult = Me.txtTermMult.Text
fmt = "###,##0.00"
If Me.txtAmount.Text = "?" Then Queries = Queries + 1 'b1
If Me.txtTerm.Text = "?" Then Queries = Queries + 1 'b2
If Me.txtRate.Text = "?" Then Queries = Queries + 1 'b3
If Me.txtPayment.Text = "?" Then Queries = Queries + 1 'b4
If Queries <> 1 Then
    MsgBox "Enter three data items plus one '?' in blank field."
    Exit Sub
End If
On Error GoTo CalcError
'If Me.txtAmount.Text = "?" Then
'  varRate = (Me.txtRate.Text / 12) / 100
'  varTerm = Me.txtTerm.Text
'  varPayment = Me.txtPayment.Text
'  varValue = PV(varRate, varTerm, -varPayment)
'  Me.txtAmount.Text = Format(varValue, fmt)
'End If
'If Me.txtTerm.Text = "?" Then
'  varAmount = Me.txtAmount.Text
'  varRate = (Me.txtRate.Text / 12) / 100
'  varPayment = Me.txtPayment.Text
'  varValue = NPer(varRate, -varPayment, varAmount, 0, 0)
'  Me.txtTerm.Text = Format(varValue, "##0")
'End If
'If Me.txtRate.Text = "?" Then
'  varAmount = Me.txtAmount.Text
'  varTerm = CDec(Me.txtTerm.Text)
'  varPayment = Me.txtPayment.Text
'  varValue = Rate(varTerm, -varPayment, varAmount)
'  varxValue = Rate(varTerm, -varPayment, varAmount)
'  Me.txtRate.Text = Format(varValue * 100, "##0.00")
'End If
'If Me.txtPayment.Text = "?" Then
'  varAmount = Me.txtAmount.Text
'  varTerm = Me.txtTerm.Text
'  varRate = (Me.txtRate.Text / 12) / 100
'  varValue = Pmt(varRate, varTerm, -varAmount, 0, 0)
'  Me.txtPayment.Text = Format(varValue, fmt) 'TestSave
'End If
If Me.txtAmount.Text = "?" Then
  varRate = (Me.txtRate.Text / 12) / 100
  varTerm = Me.txtTerm.Text
  varPayment = Me.txtPayment.Text
  varValue = PV(varRate, varTerm, -varPayment)
  If TermMult > 0 Then
    varValue = CDec(varValue * TermMult)
  End If
  Me.txtAmount.Text = Format(varValue, fmt)
End If
If Me.txtTerm.Text = "?" Then
  varAmount = Me.txtAmount.Text
  varRate = (Me.txtRate.Text / 12) / 100
  varPayment = Me.txtPayment.Text
  varValue = NPer(varRate, -varPayment, varAmount, 0, 0)
  If TermMult > 0 Then
    varValue = CDec(varValue * TermMult)
  End If
  Me.txtTerm.Text = Format(varValue, "##0")
End If
If Me.txtRate.Text = "?" Then
  varAmount = Me.txtAmount.Text
  varTerm = CDec(Me.txtTerm.Text)
  varPayment = Me.txtPayment.Text
  varValue = Rate(varTerm, -varPayment, varAmount)
  varxValue = Rate(varTerm, -varPayment, varAmount)
  Me.txtRate.Text = Format(varValue * 100, "##0.00")
End If
If Me.txtPayment.Text = "?" Then
  varAmount = Me.txtAmount.Text
  varTerm = Me.txtTerm.Text
  varRate = (Me.txtRate.Text / 12) / 100
  varValue = Pmt(varRate, varTerm, -varAmount, 0, 0)
  If TermMult > 0 Then
    varValue = CDec(varValue * TermMult)
  End If
  Me.txtPayment.Text = Format(varValue, fmt)
End If
GoTo ExitCalc
CalcError:
MsgBox "A calculaton error has occurred.  Please check your input values.", _
  vbCritical + vbOKOnly, _
  "Loan Calculator"
  Exit Sub
ExitCalc:
End Sub

Private Sub cmdCancel_Click()
  Unload frmLoanCalc
End Sub

Private Sub cmdLCPaste_Click()
  frmMain.txtPTAmount1.Text = Me.txtPayment.Text
  Unload frmLoanCalc
End Sub

Private Sub txtAmount_Enter()
  Me.txtAmount.SelStart = 0
  Me.txtAmount.SelLength = 99
End Sub

Private Sub UserForm_Activate()
  Me.Left = frmMain.Left + 175
  Me.txtAmount.Text = IIf(Left(ActiveDocument.Bookmarks("LoanAmount").Range.Text, 1) <> "[", ActiveDocument.Bookmarks("LoanAmount").Range.Text, "?")
  Me.txtRate.Text = frmMain.txtIRVariable.Text
    If Me.txtRate.Text = "" And frmMain.optIRFixed = True Then
        Me.txtRate.Text = frmMain.txtIRFixed.Text
    End If
'Dan Arra
'DAN ARRA
  Me.txtTerm.Text = IIf(Left(ActiveDocument.Bookmarks("LDMaturity").Range.Text, 1) <> "[", ActiveDocument.Bookmarks("LDMaturity").Range.Text, "?")
  Me.txtAmount.SetFocus
    'lblPmtFreq
    'txtPTEveryNum1
    'cbxPTPeriod1
    'Options: Every: 1.  Month, 2. X Months, 3. Quarter, 4. Calendar Quarter, 5. Year
    If frmMain.txtPTEveryNum1.enabled Then
        Me.lblPmtFreq.Caption = "Pmt Every " & frmMain.txtPTEveryNum1.Text & " Mos."
        TermMult = Val(frmMain.txtPTEveryNum1.Text)
    ElseIf frmMain.cbxPTPeriod1.Text = "month" Then
        Me.lblPmtFreq.Caption = "Monthly Payment"
        TermMult = 0
    ElseIf frmMain.cbxPTPeriod1.Text = "quarter" Then
        Me.lblPmtFreq.Caption = "Pmt Every Qtr"
        TermMult = 3
    ElseIf frmMain.cbxPTPeriod1.Text = "year" Then
        Me.lblPmtFreq.Caption = "Yearly Payment"
        TermMult = 12
    ElseIf frmMain.cbxPTPeriod1.Text = "calendar quarter" Then
        Me.lblPmtFreq.Caption = "Pmt Every Cal Qtr"
        TermMult = 3
    End If
    Me.txtTermMult.Value = TermMult
End Sub
'Test Add
Attribute VB_Name = "frmMain"
Attribute VB_Base = "0{DA4F75CF-1503-4644-A700-5FE375BFF80C}{6DFDBA82-7D33-4AE5-928A-6331FBF3C970}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
'Test 11/9/05
'8:00 a 10/14/05
'Dim BMRange As Integer
'Dim EndRange As Integer
'BMRange = ActiveDocument.Bookmarks("Dest").Range.Start
'EndRange = ActiveDocument.Bookmarks("Start").Range.End - ActiveDocument.Bookmarks("Start").Range.Start
'ActiveDocument.Bookmarks("Dest").Range.Text = ActiveDocument.Bookmarks("Start").Range.Text
'
'ActiveDocument.Bookmarks.Add Name:="Dest", Range:=ActiveDocument.Range(BMRange, BMRange + EndRange)


Const myDisabled = &H80000018
Dim CBtn As CommandBarButton
Dim CBar As CommandBar
Public HelpPath As String
Public EditSBA As Boolean
Public IsConstruction As Integer
Dim MyLienList As String
Dim MyLenderList As String
Dim UpPass As Integer
Dim US_State(60, 2)
Public OffListContinue As Boolean
Public CCid As Integer
Public CCFinished As Boolean
Public CCExit As Boolean
Public CCFirstTime As Boolean
Public ExitCC As Boolean
Public txtCCName As String
Public LastCCName As String
Dim intCCValue As Integer
Public CCSelected As Boolean
Public GuaranteeSecured As Boolean
Public IsASecurity As Boolean
Public optSecured As Integer
Public MyGroup As String
Dim MinPanel As Integer
Dim MaxPanel As Integer
Public SectionStart As Integer
Public SectionEnd As Integer
Public XMLLoaded As Boolean
Dim Ctrl As control
Dim PrevCtrl As String
Public curCtrl As String
Public curOption As Integer
Public pgOption As Integer
Dim curpage As Integer
Dim curPageName As String
Dim PrevPage As Integer
Dim pastCtrl As Object
Dim mintWidth As Integer
Dim mintHeight As Integer
Dim vShowIt As Boolean
Dim vReturn As Boolean
Dim IsBlank As Boolean
Dim iLastPanel As Integer
Dim ev__(20)
Dim Evidence2__(20)
Dim UP__(10)
Dim RP__(10, 10)
Dim RPid__(10)
Dim PLP__()
Dim IOIndex(7)
Dim retVal
Dim SBAEdited As Boolean
Dim SBACode As String
Dim SBAOfficial(130)
Dim IsRequired As Boolean
Dim UpdateLI1 As Integer
Dim UpdateLI2 As Integer
Dim UpdateLI3 As Integer
Dim UpdateRT1 As Integer
Dim UpdateRT2 As Integer
Dim UpdateRT3 As Integer
Dim UpdateRT4 As Integer
Dim UpdateUP As Integer
Dim UpdateCC1 As Integer
Dim UpdateACI1 As Integer
Dim UpdateACI2 As Integer
Dim UpdateACI3 As Integer
Dim UpdateACI4 As Integer
Dim UpdateACI5 As Integer
Dim UpdateACII1 As Integer
Dim UpdateACII2 As Integer
Dim UpdateACII3 As Integer
Dim OptLienHolder As Integer
Dim CurTab As String
Dim StartTab As String
Dim tabPage As Integer
Dim tabCCPage As Integer
Dim CCPage As Integer
Dim RetrieveInfo As Boolean
Dim retCheckInput As Boolean
Dim ErrCheck As Integer
Dim CurIdx As Integer
Dim LastIdx As Integer
Dim FirstIdx As Integer
Dim ShowMsg As Boolean
Dim vListItem As Integer
Dim LoanAmount As String
Dim LDMaturity As Integer
Dim CCTitle As String
Dim CtrlIndex
Dim sbaName As String
Dim SBANmIndex As Variant
Dim SBAIndex As Variant
Dim LIIndex As Variant
Dim OCIndex As Variant
Dim BIIndex As Variant
Dim NoteSecured As Boolean
Dim StartPage As Integer
Dim CtrlGroup__(250)
Dim CtrlStyle__(250)
Dim CtrlValue__(250)
Dim CtrlBook__(250)
Dim ShowBP__(11) 'Modified 12/4/2007
Dim Evidence__(9)
Public CCRunning As Boolean
Public CCMaster As String
Dim ButtonState As String
Dim WizardState As Boolean
Public txtBox As String
Const myGreen As String = "&H00008000"
Const myGray As String = "&H8000000F"
Dim Direction As Integer
Const InDev As Integer = 1
Dim Counter As Integer
Dim Cancel As Boolean
Dim NavButton As String
Dim SaveState As String
Dim ShowUPList As Boolean
Dim UPEdit As Boolean
Dim StateFinish As Boolean
Dim LICIDChanged As Boolean
Dim ErrorCaught As Boolean
Dim PPeg As Integer
Public ResetCC As Boolean
Dim strEmpDB As String
Dim strEmpTable As String
Dim strEmpDestination As String
Dim HaveEmpList As Boolean
Dim PrevAmount As String
Dim FirstPass As Boolean
Dim LockState As Boolean
Dim AcceptCurVal As Boolean
Dim CurCCid As Integer
Dim cPass As Integer
Dim PriorVal As Boolean
Dim curOSFee As String
Dim ccReset As Boolean
Dim UPEdited As Boolean
Dim PropType As String



' ActiveDocument.Unprotect "snad7623"

'Private Sub TstXML()
'   Dim strXML As String
'   Dim objXML As MSXML2.DOMDocument
''Dim StrFileName As String
'
'   Dim fd As FileDialog
'   Dim vrtSelectedItem As Variant
'   Set fd = Application.FileDialog(msoFileDialogFilePicker)
'   With fd
'        .InitialFileName = "c:\sample\*.xml"
'        If .Show = -1 Then
'            For Each vrtSelectedItem In .SelectedItems
'                Application.ImportXML _
'                    DataSource:=vrtSelectedItem, _
'                    ImportOptions:=acStructureAndData
'
'            Next vrtSelectedItem
'        Else
'        End If
'    End With
'    Set fd = Nothing
'
'
'    'Load strXML here
'
''    If Not objXML.LoadXML(strXML) Then
''        Err.Raise objXML.parseError.ErrorCode, , objXML.parseError.reason
''
''        Dim point As IXMLDOMNode
''        Set point = objXML.FirstChild
''
''        Debug.Print point.SelectSingleNode("X").Text
''        Debug.Print point.SelectSingleNode("Y").Text
''
''    End If
'End Sub
'
Private Sub cbxAC2Repayment_Change()
    Select Case Me.cbxAC2Repayment.ListIndex
    Case 1
        Me.txtAC2obSA.Text = 1
        Me.txtAC2SARate.enabled = True
        Me.txtAC2SAPayments.enabled = False
        Me.txtAC2SABeginDate.enabled = False
        Me.txtAC2SAWyoA.enabled = False
        Me.txtAC2SAWyoA.visible = False
        Me.txtAC2SARate.BackColor = vbWhite
        Me.txtAC2SAPayments.BackColor = myGray
        Me.txtAC2SABeginDate.BackColor = myGray
        Me.lblAC2YearlyRate.enabled = True
        Me.lblAC2MonthlyPayment.enabled = False
        Me.lblAC2BeginningDate.enabled = False
        Me.txtAC2SARate.SetFocus
    Case 2
        Me.txtAC2obSA.Text = 2
        Me.txtAC2SARate.enabled = True
        Me.txtAC2SAPayments.enabled = True
        Me.txtAC2SABeginDate.enabled = False
        Me.txtAC2SARate.BackColor = vbWhite
        Me.txtAC2SAPayments.BackColor = vbWhite
        Me.txtAC2SABeginDate.BackColor = myGray
        Me.txtAC2SAWyoA.enabled = False
        Me.txtAC2SAWyoA.visible = False
        Me.lblAC2YearlyRate.enabled = True
        Me.lblAC2MonthlyPayment.enabled = True
        Me.lblAC2BeginningDate.enabled = False
        Me.txtAC2SARate.SetFocus
    Case 3
        Me.txtAC2obSA.Text = 3
        Me.txtAC2SARate.enabled = True
        Me.txtAC2SAPayments.enabled = True
        Me.txtAC2SABeginDate.enabled = True
        Me.txtAC2SAWyoA.enabled = False
        Me.txtAC2SAWyoA.visible = False
        Me.txtAC2SARate.BackColor = vbWhite
        Me.txtAC2SAPayments.BackColor = vbWhite
        Me.txtAC2SABeginDate.BackColor = vbWhite
        Me.lblAC2YearlyRate.enabled = True
        Me.lblAC2MonthlyPayment.enabled = True
        Me.lblAC2BeginningDate.enabled = True
        Me.txtAC2SARate.SetFocus
    Case 4
        Me.txtAC2obSA.Text = 4
        Me.txtAC2SARate.enabled = False
        Me.txtAC2SAPayments.enabled = False
        Me.txtAC2SABeginDate.enabled = False
        Me.txtAC2SAWyoA.enabled = True
        Me.txtAC2SAWyoA.visible = True
        Me.txtAC2SAWyoA.BackColor = vbWhite
        Me.txtAC2SARate.BackColor = myGray
        Me.txtAC2SAPayments.BackColor = myGray
        Me.txtAC2SABeginDate.BackColor = myGray
        Me.lblAC2YearlyRate.enabled = False
        Me.lblAC2MonthlyPayment.enabled = False
        Me.lblAC2BeginningDate.enabled = False
        Me.txtAC2SAWyoA.SetFocus
    Case Else
        Me.txtAC2obSA.Text = 0
        Me.txtAC2SARate.enabled = False
        Me.txtAC2SAPayments.enabled = False
        Me.txtAC2SABeginDate.enabled = False
        Me.txtAC2SAWyoA.enabled = False
        Me.txtAC2SAWyoA.visible = False
        Me.txtAC2SARate.BackColor = myGray
        Me.txtAC2SAPayments.BackColor = myGray
        Me.txtAC2SABeginDate.BackColor = myGray
        Me.lblAC2YearlyRate.enabled = False
        Me.lblAC2MonthlyPayment.enabled = False
        Me.lblAC2BeginningDate.enabled = False
    End Select

End Sub

Private Sub cbxAC2Repayment_Enter()
    If Me.cbxAC2Repayment.ListCount = 0 Then
        RepaymentList Me.cbxAC2Repayment
    ElseIf Me.cbxAC2Repayment.Value = "" Then
        Me.cbxAC2Repayment.ListIndex = 0
    End If
End Sub

Private Sub cbxAC2Repayment_KeyPress(ByVal KeyAscii As MSForms.ReturnInteger)
    KeyAscii = -1
End Sub

Private Sub cbxBIState_Change()
    BIIndex = Me.cbxBIState.ListIndex
    If ActiveDocument.Bookmarks.Exists("Inc_SP" + Me.cbxBIState.Value) Then
        InsertText "none", "Inc_SP" + Me.cbxBIState.Value, "none", 0, 2
    End If
    If ActiveDocument.Bookmarks.Exists("Inc_SP" + Me.cbxBIState.Value + "F2") Then
        InsertText "none", "Inc_SP" + Me.cbxBIState.Value + "F2", "none", 0, 2
    End If
    If ActiveDocument.Bookmarks.Exists("Inc_SP" + Me.cbxBIState.Value + "F3") Then
        InsertText "none", "Inc_SP" + Me.cbxBIState.Value + "F3", "none", 0, 2
    End If
    If ActiveDocument.Bookmarks.Exists("Inc_SP" + Me.cbxBIState.Value + "3") Then
        InsertText "none", "Inc_SP" + Me.cbxBIState.Value + "3", "none", 0, 2
    End If
End Sub

Private Sub cbxBIState_Enter()
    If Me.cbxBIState.ListCount = 0 Then
        StatesList Me.cbxBIState
    End If
    If Len(Me.cbxBIState.Text) > 0 Then
        Me.cbxBIState.Text = Me.cbxBIState.Text
    End If
    Me.cbxBIState.DropDown
End Sub

Private Sub cbxBIState_Exit(ByVal Cancel As MSForms.ReturnBoolean)
    curCtrl = "cbxBIState"
    If Me.cbxBIState.ListIndex = 0 Then
        Cancel = True
        MyErrorMsg Me.mpgWizard.Value, "Text", True, curCtrl
    '  CommandSetup 3
    End If
End Sub

Private Sub cbxC7Owned_Enter()
    If Me.cbxC7Owned.ListCount = 0 Then
        CCPropertyList cbxC7Owned
    End If
End Sub

Private Sub cbxC7Owned_KeyPress(ByVal KeyAscii As MSForms.ReturnInteger)
    KeyAscii = -1
End Sub

Private Sub cbxCABooksRecords_Enter()
    BooksRecordsList Me.cbxCABooksRecords
End Sub

Private Sub cbxCABooksRecords_KeyPress(ByVal KeyAscii As MSForms.ReturnInteger)
    KeyAscii = -1
End Sub

Private Sub cbxCALienPosition_Change()
    If Me.cbxCALienPosition.ListIndex = 2 Then

    End If
End Sub

Private Sub cbxCC_C1EV_Change()
    If Me.cbxCC_C1EV.Text = "" Then
        Cancel = True
        Exit Sub
    Else
        For Each Ctrl In Controls
            If InStr(1, Ctrl.Name, "chkCC_C1EV1") Or InStr(1, Ctrl.Name, "txtCC_C1EV1") Then
                Me(Ctrl.Name).visible = False
                Me(Ctrl.Name).TabStop = False
            End If
        Next

        If Me.cbxCC_C1EV.Text = Evidence__(1) Then
            Me.chkCC_C1EV2C.visible = False
            Me.chkCC_C1EV2C.TabStop = False
            Me.chkCC_C1EV2D.visible = False
            Me.chkCC_C1EV2D.TabStop = False
            For Each Ctrl In Controls
                If InStr(1, Ctrl.Name, "chkCC_C1EV1") Or InStr(1, Ctrl.Name, "txtCC_C1EV1") Then
                    Me(Ctrl.Name).visible = True
                    Me(Ctrl.Name).TabStop = True
                End If
            Next
            Me.txtCC_C1EV1D.Text = ""
            'Me.chkCC_C1EV1C.Top = 71.5
            Me.chkCC_C1EV1E.Top = 90.75
            Me.chkCC_C1EV1A.visible = True
            Me.chkCC_C1EV1A.TabStop = True
            Me.txtCC_C1EV1A.Text = IIf(Left(ActiveDocument.Bookmarks("LoanAmount").Range.Text, 1) <> "[", Format(ActiveDocument.Bookmarks("LoanAmount").Range.Text, "Standard"), "0.00")
            Me.txtCC_C1EV1A.visible = True
            Me.txtCC_C1EV1A.TabStop = True
            Me.chkCC_C1EV2C.visible = False
            Me.chkCC_C1EV2C.TabStop = False
            Me.chkCC_C1EV2D.visible = False
            Me.chkCC_C1EV2D.TabStop = False
            Me.chkCC_C1EV2E.visible = False
            Me.chkCC_C1EV2E.TabStop = False
            Me.chkCC_C1EV2F.visible = False
            Me.chkCC_C1EV2F.TabStop = False
            Exit Sub
        End If
        If Me.cbxCC_C1EV.Text = Evidence__(2) Then
            Me.chkCC_C1EV2D.visible = False
            Me.chkCC_C1EV2D.TabStop = False
            For Each Ctrl In Controls
                If InStr(1, Ctrl.Name, "chkCC_C1EV2") Or InStr(1, Ctrl.Name, "txtCC_C1EV2") Then
                    Me(Ctrl.Name).visible = True
                    Me(Ctrl.Name).TabStop = True
                End If
            Next
            If Me.cbxCCState2.Text = "TX" Then
                Me.chkCC_C1EV2F.visible = True
                Me.chkCC_C1EV2F.TabStop = True
                Me.chkCC_C1EV2F.Top = 135
            Else
                Me.chkCC_C1EV2F.visible = False
                Me.chkCC_C1EV2F.TabStop = False
            End If
            If Me.cbxCCState2.Text = "MA" Then
                Me.chkCC_C1EV2D.visible = True
                Me.chkCC_C1EV2D.TabStop = True
                Me.chkCC_C1EV2D.Top = 135
            Else
                Me.chkCC_C1EV2D.visible = False
                Me.chkCC_C1EV2D.TabStop = False
            End If
            For Each Ctrl In Controls
                If InStr(1, Ctrl.Name, "chkCC_C1EV1") Or InStr(1, Ctrl.Name, "txtCC_C1EV1") Then
                    Me(Ctrl.Name).visible = False
                    Me(Ctrl.Name).TabStop = False
                End If
            Next
            Me.chkCC_C1EV1A.visible = True
            Me.chkCC_C1EV1A.TabStop = True
            Me.txtCC_C1EV1A.visible = True
            Me.txtCC_C1EV1A.TabStop = True
            'Me.chkCC_C1EV1C.visible = False
            'Me.chkCC_C1EV1C.TabStop = False
            Me.chkCC_C1EV1E.visible = True
            Me.chkCC_C1EV1E.Top = 75
            Me.chkCC_C1EV1E.TabStop = True
            Me.chkCC_C1EV2B.visible = False
            Me.chkCC_C1EV2B.TabStop = False
            Exit Sub
        End If
        If Me.cbxCC_C1EV.Text = Evidence__(3) Then
            For Each Ctrl In Controls
                If InStr(1, Ctrl.Name, "chkCC_C1EV2") Or InStr(1, Ctrl.Name, "txtCC_C1EV2") Then
                    Me(Ctrl.Name).visible = False
                    Me(Ctrl.Name).TabStop = False
                End If
            Next
            Me.chkCC_C1EV2D.visible = True
            Me.chkCC_C1EV2D.TabStop = True
            Me.chkCC_C1EV2D.Top = 50
            Me.chkCC_C1EV2F.visible = False
            For Each Ctrl In Controls
                If InStr(1, Ctrl.Name, "chkCC_C1EV1") Or InStr(1, Ctrl.Name, "txtCC_C1EV1") Then
                    Me(Ctrl.Name).visible = False
                    Me(Ctrl.Name).TabStop = False
                End If
            Next
            Me.chkCC_C1EV1A.visible = False
            Me.chkCC_C1EV1A.TabStop = False
            Me.txtCC_C1EV1A.visible = False
            Me.txtCC_C1EV1A.TabStop = False
            Exit Sub
        End If
        For Each Ctrl In Controls
            If InStr(1, Ctrl.Name, "chkCC_C1EV2") Or InStr(1, Ctrl.Name, "txtCC_C1EV2") Then
                Me(Ctrl.Name).visible = False
                Me(Ctrl.Name).TabStop = False
            End If
        Next
        Me.chkCC_C1EV2F.visible = False
        For Each Ctrl In Controls
            If InStr(1, Ctrl.Name, "chkCC_C1EV1") Or InStr(1, Ctrl.Name, "txtCC_C1EV1") Then
                Me(Ctrl.Name).visible = False
                Me(Ctrl.Name).TabStop = False
            End If
        Next
        Me.chkCC_C1EV1A.visible = False
        Me.chkCC_C1EV1A.TabStop = False
        Me.txtCC_C1EV1A.visible = False
        Me.txtCC_C1EV1A.TabStop = False
        Me.txtCC_C1EV1D.Text = ""
    End If
End Sub

Private Sub cbxCC_C1EV_Enter()
    For X = 0 To UBound(Evidence2__())
        If Trim(Evidence2__(X)) = "" Then
        Else
            Me.cbxCC_C1EV.AddItem Evidence2__(X)
        End If
    Next
    LstCount = 0
    For X = 0 To Me.cbxCC_C1EV.ListCount - 1
        If Me.cbxCC_C1EV.List(X) <> "" Then
            LstCount = LstCount + 1
        End If
    Next X
    Me.cbxCC_C1EV.ListRows = LstCount + 1
'    On Error Resume Next  'Modified 12/4/2007
'    Me.cbxCC_C1EV.DropDown  'Modified 12/4/2007
End Sub

Public Sub GuaranteeSetup(CCid As Integer)
    Dim optState As Integer
    If CCid = 290 Then    'Full Unsecured
        Me.optCCFullUnsecured.enabled = True
        Me.optCCFullSecured.enabled = False
        Me.optCCLimitedUnsecured.enabled = False
        Me.optCCLimitedSecured.enabled = False
        Me.optCCFullUnsecured.Value = True
        Me.optCCFullSecured.Value = False
        Me.optCCLimitedUnsecured.Value = False
        Me.optCCLimitedSecured.Value = False
        GuaranteeSecured = False
        Me.cmdNext.enabled = False
        Me.cmdFinish.enabled = True
    ElseIf CCid = 291 Then    'Full Secured
        Me.optCCFullUnsecured.enabled = False
        Me.optCCFullSecured.enabled = True
        Me.optCCLimitedUnsecured.enabled = False
        Me.optCCLimitedSecured.enabled = False
        Me.optCCFullUnsecured.Value = False
        Me.optCCFullSecured.Value = True
        Me.optCCLimitedUnsecured.Value = False
        Me.optCCLimitedSecured.Value = False
        GuaranteeSecured = True
        Me.cmdNext.enabled = True
        Me.cmdFinish.enabled = False
    ElseIf CCid = 292 Then    'Limited Unsecured
        Me.optCCFullUnsecured.enabled = False
        Me.optCCFullSecured.enabled = False
        Me.optCCLimitedUnsecured.enabled = True
        Me.optCCLimitedSecured.enabled = False
        Me.optCCFullUnsecured.Value = False
        Me.optCCFullSecured.Value = False
        Me.optCCLimitedUnsecured.Value = True
        Me.optCCLimitedSecured.Value = False
        GuaranteeSecured = False
        Me.cmdNext.enabled = True
        Me.cmdFinish.enabled = False
    ElseIf CCid = 293 Then    'Limited Secured
        Me.optCCFullUnsecured.enabled = False
        Me.optCCFullSecured.enabled = False
        Me.optCCLimitedUnsecured.enabled = False
        Me.optCCLimitedSecured.enabled = True
        Me.optCCFullUnsecured.Value = False
        Me.optCCFullSecured.Value = False
        Me.optCCLimitedUnsecured.Value = False
        Me.optCCLimitedSecured.Value = True
        GuaranteeSecured = True
        Me.cmdNext.enabled = True
        Me.cmdFinish.enabled = False
    End If
    Me.mpgCCOptions(2).visible = True
    Me.mpgCCOptions.Value = 1
    Me.fraCCInfo.enabled = True
    Me.cbxCCB.enabled = False
    Me.cbxCCC.enabled = False
    Me.cbxCCD.enabled = False
    Me.cbxCCE.enabled = False
    Me.txtCCGuarantors.enabled = True
    Me.txtCCGuarantors.SetFocus
    ' UpdateCtrl "Guarantor", "txtCCGuarantors"   'RH 11/7/2018
End Sub

Private Sub cbxCC_C1EV_Exit(ByVal Cancel As MSForms.ReturnBoolean)
    If Me.cbxCC_C1EV.Text = "" Then
        Cancel = True
    End If
End Sub

Private Sub cbxCC_C1EV_KeyPress(ByVal KeyAscii As MSForms.ReturnInteger)
    KeyAscii = -1
End Sub

Private Sub cbxCCA_KeyPress(ByVal KeyAscii As MSForms.ReturnInteger)
    KeyAscii = -1
End Sub

Private Sub cbxCCB_KeyPress(ByVal KeyAscii As MSForms.ReturnInteger)
    KeyAscii = -1
End Sub

Private Sub cbxCCC_KeyPress(ByVal KeyAscii As MSForms.ReturnInteger)
    KeyAscii = -1
End Sub

Private Sub cbxCCD_KeyPress(ByVal KeyAscii As MSForms.ReturnInteger)
    KeyAscii = -1
End Sub

Private Sub cbxCCE_KeyPress(ByVal KeyAscii As MSForms.ReturnInteger)
    KeyAscii = -1
End Sub

Private Sub cbxCCE_Enter()
    ResetCollateral
    Me.cbxCCE.Font.Bold = False
    If Me.cbxCCE.ListCount = 0 Then
        CheckCCCombo ("cbxCCE")
        CCWriteYourOwn cbxCCE
    End If
    Me.cbxCCE.DropDown
End Sub

Private Sub cbxCCA_Change()
'Populate the list if blank
    Me.cbxCCA.Font.Bold = False
    If Me.cbxCCA.ListCount = 0 Then
        CheckCCCombo ("cbxCCA")
        CCGuaranteeList Me.cbxCCA
        Me.cbxCCA.DropDown
    End If
    'If something selected, reset to nothing, clear CCid -- but WHY -- to reset all
    'CCA list is disabled when secured ... so if you can select from CCA, it's a new collateral
    If Me.cbxCCA.ListIndex > 0 Then
        ExitCC = True    'What does this one mean? 11/12/02
        CCRunning = True   'Indicates we made a selection
        CCFinished = False   'Indicates that we have started Collateral Condition
        Me.cbxCCA.Font.Bold = True
    End If

    'Cancel will be disabled on Next of Finish -- once started, can't quit -- is this good???? 11/12/02
    If Me.cmdCancel.enabled = False Then
        Me.cmdCancel.enabled = True
    End If

    'We've made our selection, you can't get out using Navigator
    CommandSetup "EnableNext"
    Me.cmdWizardShortCut.visible = False

    If Me.cbxCCA.ListIndex = 1 Then  'Full Unsecured Guarantee
        CCid = 290
    ElseIf Me.cbxCCA.ListIndex = 2 Then  'Full Secured Guarantee
        CCid = 291
    ElseIf Me.cbxCCA.ListIndex = 3 Then  'Limited Unsecured Guarantee'
        CCid = 292
    ElseIf Me.cbxCCA.ListIndex = 4 Then    'Limited Secured Guarantee'
        CCid = 293
    End If
'    If Me.optCCGuaranteesOnly.Value = True And Me.cbxCCA.ListIndex = 2 Or Me.cbxCCA.ListIndex = 4 Then
'        MsgBox "This is not a valid selection." & vbCrLf & vbCrLf & _
'            "Secured guarantees are not available under this option.      " & vbCrLf & vbCrLf & _
'            "Please select an unsecured guarantee.", _
'            vbInformation + vbOKOnly, _
'            "SLA Loan Guarantees Only"
'            CCSelected = False
'            cmdCCReset_Click
'            Exit Sub
'    End If
    'If the ListIndex is > 0 then we are on first pass.  Otherwise second pass.
    If CCid > 0 And Me.cbxCCA.ListIndex > 0 Then
        GuaranteeSetup CCid
    'Because selected 1, 2, 3 or 4, CCSelected = True
        CCSelected = True
        Me.cmdCCReset.visible = True
    Else
    End If
    CurCCid = CCid
End Sub

Private Sub cbxCCA_Enter()
    ResetCollateral
    If Me.cbxCCA.ListCount = 0 Then
        CCGuaranteeList Me.cbxCCA
        CheckCCCombo ("cbxCCA")
    End If
    If Me.cbxCCA.ListIndex < 0 Then
        Me.cbxCCA.ListIndex = 0
    End If
    Me.cbxCCA.DropDown
End Sub

Private Sub cbxCCAircraftLien_Change()
    If Me.cbxCCAircraftLien.ListIndex = 0 Then
        CommandSetup "EnableFinish"
    Else
        CommandSetup "EnableNext"
    End If
End Sub

Private Sub cbxCCAircraftLien_Enter()
    CCLienList cbxCCAircraftLien
End Sub

Private Sub cbxCCB_Change()
    ccReset = True
    Me.cbxCCB.Font.Bold = False
    Me.cbxCCB.MatchRequired = True
    Me.txtCCC1BP3.Text = "30"
    If Me.cbxCCB.ListIndex > 0 Then
        ExitCC = True
        CCRunning = True
    End If
    If Me.cmdCancel.enabled = False Then
        Me.cmdCancel.enabled = True
    End If
    Me.cmdWizardShortCut.visible = False
    Me.lblTitle.Caption = "Collateral Conditions Section"
    Me.cbxCCB.Font.Bold = False
    Select Case Me.cbxCCB.ListIndex
    Case 1  'Lien on Land and Improvements
        CCid = 1
        OptLienHolder = 0
        Me.cbxCCB.Font.Bold = True
        Me.fraCCFrame1.Caption = Trim(Mid(Me.cbxCCB.Text, 7))
        Me.chkCCSharedPosition.Value = False
        ResetCCControls "pgCC4", CCid
        Me.mpgWizard.Value = Me.mpgWizard.Pages("pgCC4").index
        intCCValue = Me.cbxCCB.List(Me.cbxCCB.ListIndex, 2)
        txtCCName = Trim(Mid(Me.cbxCCB.List(Me.cbxCCB.ListIndex, 0), 7))
        CommandSetup "EnableNext"
    Case 2  'Collateral Assignment of Purchaser's Interest in Land Contract
        CCid = 2
        Me.cbxCCB.Font.Bold = True
        Me.fraCCFrame6.Caption = Trim(Mid(Me.cbxCCB.Text, 7))
        ResetCCControls "pgCC6", CCid
        Me.mpgWizard.Value = Me.mpgWizard.Pages("pgCC6").index
        intCCValue = Me.cbxCCB.List(Me.cbxCCB.ListIndex, 2)
        txtCCName = Trim(Mid(Me.cbxCCB.List(Me.cbxCCB.ListIndex, 0), 7))
        CommandSetup "EnableNext"
    Case 3  'Collateral Assignment of Seller's Interest in Land Contract
        CCid = 3
        Me.cbxCCB.Font.Bold = True
        Me.fraCCFrame6.Caption = Trim(Mid(Me.cbxCCB.Text, 7))
        ResetCCControls "pgCC6", CCid
        Me.mpgWizard.Value = Me.mpgWizard.Pages("pgCC6").index
        intCCValue = Me.cbxCCB.List(Me.cbxCCB.ListIndex, 2)
        txtCCName = Trim(Mid(Me.cbxCCB.List(Me.cbxCCB.ListIndex, 0), 7))
        CommandSetup "EnableFinish"
    Case 4  'Assignment of Beneficial Interest in Land Trust
        CCid = 5
        Me.cbxCCB.Font.Bold = True
        Me.fraCCFrame5.Caption = Trim(Mid(Me.cbxCCB.Text, 7))
        ResetCCControls "pgCC3", CCid
        Me.mpgWizard.Value = Me.mpgWizard.Pages("pgCC3").index
        intCCValue = Me.cbxCCB.List(Me.cbxCCB.ListIndex, 2)
        txtCCName = Trim(Mid(Me.cbxCCB.List(Me.cbxCCB.ListIndex, 0), 7))
        CommandSetup "EnableFinish"
    Case 5  'Leasehold Instrument on Building Constructed
        CCid = 4
        Me.cbxCCB.Font.Bold = True
        Me.fraCCFrame1.Caption = Trim(Mid(Me.cbxCCB.Text, 7))
        ResetCCControls "pgCC4", CCid
        Me.mpgWizard.Value = Me.mpgWizard.Pages("pgCC4").index
        intCCValue = Me.cbxCCB.List(Me.cbxCCB.ListIndex, 2)
        txtCCName = Trim(Mid(Me.cbxCCB.List(Me.cbxCCB.ListIndex, 0), 7))
    Case 6  'Leasehold Security Interest on Building
        CCid = 22
        Me.cbxCCB.Font.Bold = True
        Me.fraCCFrame1.Caption = Trim(Mid(Me.cbxCCB.Text, 7))
        ResetCCControls "pgCC4", CCid
        Me.mpgWizard.Value = Me.mpgWizard.Pages("pgCC4").index
        If Me.cbxCCLienPosition2.ListCount = 0 Then
            CCLienList cbxCCLienPosition2
            Me.cbxCCLienPosition2.ListIndex = 0
        Else
            Me.cbxCCLienPosition2.ListIndex = 0
        End If
        intCCValue = Me.cbxCCB.List(Me.cbxCCB.ListIndex, 2)
        txtCCName = Trim(Mid(Me.cbxCCB.List(Me.cbxCCB.ListIndex, 0), 7))
        CommandSetup "EnableFinish"
    Case 7  'Lessee's Interest in Lease by Assignment
        CCid = 23
        Me.cbxCCB.Font.Bold = True
        Me.fraCCFrame2.Caption = Trim(Mid(Me.cbxCCB.Text, 7))
        ResetCCControls "pgCC5", CCid
        Me.mpgWizard.Value = Me.mpgWizard.Pages("pgCC5").index
        Me.cbxCCTypeofProperty3.ListIndex = -1
        intCCValue = Me.cbxCCB.List(Me.cbxCCB.ListIndex, 2)
        txtCCName = Trim(Mid(Me.cbxCCB.List(Me.cbxCCB.ListIndex, 0), 7))
        CommandSetup "EnableFinish"
'        Me.chkCC7Shared.Value = False
        Me.txtCC7SharedAmt.Text = ""
        Me.txtCC7SharedLender.Text = ""
        Me.optCC7NonSBA.Value = True
        Me.cbxCCLienPosition3.Text = ""
        Me.cbxCCLienPosition3.ListIndex = -1
        Me.lblCCLien3.enabled = False
        Me.cbxCCLienPosition3.enabled = False
        Me.cbxCCLienPosition3.BackColor = myGray
        Me.txtCCLesseeName3.Text = ""
        Me.txtCCLessorName3.Text = ""
        Me.txtCCAddress3.Text = ""
        Me.lblCCTermofLoan3.enabled = True
        Me.txtCCPlusYears3.Text = ""
        Me.chkCCPlusYears3.enabled = True
        Me.chkCCPlusYears3.Value = 0
        Me.txtCCWrittenNotice.enabled = True
        Me.txtCCWrittenNotice.BackColor = vbWhite
        Me.lblCCTypeofProperty3.enabled = False
        On Error Resume Next
        Me.cbxCCTypeofProperty3.ListIndex = -1
        Me.cbxCCTypeofProperty3.enabled = False
        Me.cbxCCTypeofProperty3.BackColor = myGray
        Me.chkCCLeaseDate3.enabled = True
        Me.chkCCLeaseDate3.Value = False
        CommandSetup "EnableFinish"
    Case 8  'Lessee's Interest in Lease by Lien
        CCid = 24
        Me.cbxCCB.Font.Bold = True
        Me.fraCCFrame2.Caption = Trim(Mid(Me.cbxCCB.Text, 7))
        intCCValue = Me.cbxCCB.List(Me.cbxCCB.ListIndex, 2)
        txtCCName = Trim(Mid(Me.cbxCCB.List(Me.cbxCCB.ListIndex, 0), 7))
        Me.mpgWizard.Value = Me.mpgWizard.Pages("pgCC5").index
        ResetCCControls "pgCC5", CCid
        Me.lblCCTermofLoan3.enabled = True
        Me.chkCCPlusYears.enabled = True
        Me.txtCCWrittenNotice.enabled = True
        Me.txtCCWrittenNotice.BackColor = vbWhite
        Me.lblCCTypeofProperty3.enabled = True
        Me.cbxCCTypeofProperty3.enabled = True
        Me.cbxCCTypeofProperty3.BackColor = vbWhite
        Me.cbxCCTypeofProperty3.Text = "commercial"
        Me.chkCCLeaseDate3.enabled = False
        Me.txtCCLeaseDate3.Text = ""
        Me.txtCCLeaseDate3.BackColor = myGray
        Me.cbxCCLienPosition3.ListIndex = -1
        CommandSetup "EnableFinish"
    Case 9  'Leasehold on Tribal Land
        CCid = 27
        Me.cbxCCB.Font.Bold = True
        Me.txtCCLienAmount.Text = ""
        Me.txtCCTribeLocation.Text = ""
        Me.txtCCTribeName.Text = ""
        Me.txtCCTermPlus.Text = ""
        Me.chkCCTermPlus.Value = 0
        If Me.cbxCCTribeLien.ListCount = 0 Then
            CCLienList cbxCCTribeLien
            Me.cbxCCTribeLien.ListIndex = 0
        Else
            Me.cbxCCTribeLien.ListIndex = 0
        End If
        Me.fraCCFrame1.Caption = Trim(Mid(Me.cbxCCB.Text, 7))
        intCCValue = Me.cbxCCB.List(Me.cbxCCB.ListIndex, 2)
        txtCCName = Trim(Mid(Me.cbxCCB.List(Me.cbxCCB.ListIndex, 0), 7))
        CCPanel 4
        CommandSetup "EnableFinish"
    Case 10  'Security Interest in Cooperative Apartment
        CCid = 6
        Me.cbxCCB.Font.Bold = True
        Me.txtCCApartmentAddress.Text = ""
        If Me.cbxCCLienApartment.ListCount = 0 Then
            CCLienList cbxCCLienApartment
            Me.cbxCCLienApartment.ListIndex = 0
        Else
            Me.cbxCCLienApartment.ListIndex = 0
        End If
        Me.fraCCFrame1.Caption = Trim(Mid(Me.cbxCCB.Text, 7))
        intCCValue = Me.cbxCCB.List(Me.cbxCCB.ListIndex, 2)
        txtCCName = Trim(Mid(Me.cbxCCB.List(Me.cbxCCB.ListIndex, 0), 7))
        CCPanel 5
        CommandSetup "EnableFinish"
    Case Else
    End Select
    CCSelected = True
    If GuaranteeSecured = True Then
        IsASecurity = True
    End If
End Sub

Private Sub cbxCCB_Enter()
    ResetCollateral
    Me.cbxCCB.Font.Bold = False
    If Me.cbxCCB.ListCount = 0 Then
        CheckCCCombo ("cbxCCB")
        CCRealtyList Me.cbxCCB
    End If
    If Me.lblCCSecurity3.visible = True Then
    Else
        Me.cbxCCB.DropDown
    End If
End Sub

Private Sub cbxCCC_Change()
    Me.cbxCCC.Font.Bold = False
    Me.cbxCCC.MatchRequired = True
    If Me.cbxCCC.ListIndex > 0 Then
        ExitCC = True
        CCRunning = True
    End If
    If Me.cmdCancel.enabled = False Then
        Me.cmdCancel.enabled = True
    End If
    Me.cmdWizardShortCut.visible = False
    Me.cbxCCC.Font.Bold = False
    Select Case Me.cbxCCC.ListIndex
    Case 1  'Personal Property
        CCid = 7
        CtrlIndex = 0
        CCTitle = Trim(Me.cbxCCA.Text)
        Me.cbxCCC.Font.Bold = True
        Me.fraCCFrame3.Caption = Trim(Mid(Me.cbxCCC.Text, 7))
        Me.chkC7OptionA.Value = False
        Me.txtC7Lienholder.Text = ""
        Me.txtC7Amount.Text = ""
        For i = 1 To 10
            Me("chkC7PP" & Trim((i))).Value = 0
        Next
        Me.chkC7OptionC.Value = False
        Me.txtC7Lender.Text = ""
        Me.txtC7MaxAmount.Text = ""
        For i = 1 To 10
            Me("chkC7PP" & Trim((i)) & "B").Value = 0
        Next
        CleanDuplicateGroups
        intCCValue = Me.cbxCCC.List(Me.cbxCCC.ListIndex, 2)
        txtCCName = Trim(Mid(Me.cbxCCC.List(Me.cbxCCC.ListIndex, 0), 7))
        ResetCCControls "pgCC8", 7
        Me.mpgWizard.Value = Me.mpgWizard.Pages("pgCC8").index
        CCLienList cbxCCLienPosition
        CCPropertyList cbxC7Owned
        CommandSetup "EnableFinish"
    Case 2  'Personal Property Puerto Rico
        Application.ScreenUpdating = False
        CCid = 7
        CtrlIndex = 0
        Me.cbxCCC.Font.Bold = True
        Me.fraCCFrame3.Caption = Trim(Mid(Me.cbxCCC.Text, 9))
        Me.chkC7OptionA.Value = False
        Me.txtC7Lienholder.Text = ""
        Me.txtC7Amount.Text = ""
        For i = 1 To 10
            Me("chkC7PP" & Trim((i))).Value = 0
        Next
        Me.chkC7OptionC.Value = False
        Me.txtC7Lender.Text = ""
        Me.txtC7MaxAmount.Text = ""
        For i = 1 To 10
            Me("chkC7PP" & Trim((i)) & "B").Value = 0
        Next
        CleanDuplicateGroups
        intCCValue = Me.cbxCCC.List(Me.cbxCCC.ListIndex, 2)
        txtCCName = Trim(Mid(Me.cbxCCC.List(Me.cbxCCC.ListIndex, 0), 9))
        ResetCCControls "pgCC8", 7
        Me.mpgWizard.Value = Me.mpgWizard.Pages("pgCC8").index
        CCLienList cbxCCLienPosition
        CCPropertyList cbxC7Owned
        CommandSetup "EnableFinish"
    Case 3  'Liquor License
        CCid = 11
        Me.cbxCCC.Font.Bold = True
        CCPanel 6
        intCCValue = Me.cbxCCC.List(Me.cbxCCC.ListIndex, 2)
        txtCCName = Trim(Mid(Me.cbxCCC.List(Me.cbxCCC.ListIndex, 0), 7))
        ResetCCControls "pg06CCLiquor", 11
        CommandSetup "EnableFinish"
        Me.optCCLiquorLicenseA.SetFocus
    Case 4  'Vehicle
        CCid = 9
        Me.cbxCCC.Font.Bold = True
        CCPanelEnableDisable "fraCCMobileHome", "CCM", False
        CCPanelEnableDisable "fraCCVehicle", "CCV", True
        Me.txtCCMobileHomeLocation.Text = ""
        Me.txtCCMobileHomeOwner.Text = ""
        Me.txtCCMobileHomeSerial.Text = ""
        Me.cbxCCMobileHomeLien.Text = ""
        Me.txtCCMobileHomeLocation.BackColor = myGray
        Me.txtCCMobileHomeOwner.BackColor = myGray
        Me.txtCCMobileHomeSerial.BackColor = myGray
        Me.cbxCCMobileHomeLien.BackColor = myGray
        CCPanel 9
        intCCValue = Me.cbxCCC.List(Me.cbxCCC.ListIndex, 2)
        txtCCName = Trim(Mid(Me.cbxCCC.List(Me.cbxCCC.ListIndex, 0), 7))
        CommandSetup "EnableFinish"
        Me.txtCCVehicleMake.Text = ""
        Me.txtCCVehicleYear.Text = ""
        Me.cbxCCVehicleLien.Text = "First"
        Me.txtCCVehicleMake.SetFocus
    Case 5  'Mobile Home
        CCid = 10
        Me.cbxCCC.Font.Bold = True
        CCPanelEnableDisable "fraCCMobileHome", "CCM", True
        CCPanelEnableDisable "fraCCVehicle", "CCV", False
        intCCValue = Me.cbxCCC.List(Me.cbxCCC.ListIndex, 2)
        txtCCName = Trim(Mid(Me.cbxCCC.List(Me.cbxCCC.ListIndex, 0), 7))
        CCPanel 9
        ResetCCControls "pg09CCVehicle", CCid
        Me.txtCCVehicleMake.Text = ""
        Me.txtCCVehicleYear.Text = ""
        Me.cbxCCVehicleLien.Text = ""
        Me.txtCCVehicleMake.BackColor = myGray
        Me.txtCCVehicleYear.BackColor = myGray
        Me.cbxCCVehicleLien.BackColor = myGray
        Me.txtCCMobileHomeOwner.SetFocus
        CommandSetup "EnableFinish"
    Case 6  'Aircraft
        CCid = 14
        Me.cbxCCC.Font.Bold = True
        CCPanelEnableDisable "fraCCAircraft", "CCA", True
        CCPanelEnableDisable "fraCCVessel", "CCVes", False
        CCPanel 14
        intCCValue = Me.cbxCCC.List(Me.cbxCCC.ListIndex, 2)
        txtCCName = Trim(Mid(Me.cbxCCC.List(Me.cbxCCC.ListIndex, 0), 7))
        Me.txtCCAircraftMake.Text = ""
        Me.txtCCAircraftModel.Text = ""
        Me.txtCCAircraftYear.Text = ""
        Me.cbxCCAircraftLien.ListIndex = -1
        Me.txtCCAircraftMake.SetFocus
        CommandSetup "EnableFinish"
    Case 7  'Vessel
        CCid = 15
        Me.cbxCCC.Font.Bold = True
        CCPanelEnableDisable "fraCCAircraft", "CCA", False
        CCPanelEnableDisable "fraCCVessel", "CCVes", True
        CCPanel 14
        intCCValue = Me.cbxCCC.List(Me.cbxCCC.ListIndex, 2)
        txtCCName = Trim(Mid(Me.cbxCCC.List(Me.cbxCCC.ListIndex, 0), 7))
        Me.txtCCVesselName.Text = ""
        Me.cbxCCVesselLien.ListIndex = -1
        Me.txtCCVesselName.SetFocus
        CommandSetup "EnableFinish"
    Case Else
    End Select
    CCSelected = True
    If GuaranteeSecured = True Then
        IsASecurity = True
    End If
End Sub
Private Sub cbxCCC_Enter()
    ResetCollateral
    Me.cbxCCC.Font.Bold = False
    If Me.cbxCCC.ListCount = 0 Then
        CheckCCCombo ("cbxCCC")
        CCSecurityList Me.cbxCCC
    End If
    Me.cbxCCC.DropDown
End Sub

Private Sub cbxCCD_Change()
    Me.cbxCCD.Font.Bold = False
    Me.cbxCCD.MatchRequired = True
    If Me.cbxCCD.ListIndex > 0 Then
        ExitCC = True
        CCRunning = True
    End If
    If Me.cmdCancel.enabled = False Then
        Me.cmdCancel.enabled = True
    End If
    Me.cmdWizardShortCut.visible = False
    Me.cbxCCD.Font.Bold = False
    Select Case Me.cbxCCD.ListIndex
    Case 1  'Certificate of Deposit
        CCid = 20
        Me.cbxCCD.Font.Bold = True
        CCPanelEnableDisable "fraCCCertificateDeposit", "CCC", True
        CCPanelEnableDisable "fraCCMutualFund", "CCM", False
        CCPanel 10
        intCCValue = Me.cbxCCD.List(Me.cbxCCD.ListIndex, 2)
        txtCCName = Trim(Mid(Me.cbxCCD.List(Me.cbxCCD.ListIndex, 0), 7))
        CommandSetup "EnableFinish"
        Me.txtCCCDName.Text = ""
        Me.txtCCCDValue.Text = ""
        Me.txtCCCDValue.SetFocus
    Case 2  'Mutual Fund
        CCid = 13
        Me.cbxCCD.Font.Bold = True
        CCPanelEnableDisable "fraCCMutualFund", "CCM", True
        CCPanelEnableDisable "fraCCCertificateDeposit", "CCCo", False
        CCPanel 10
        intCCValue = Me.cbxCCD.List(Me.cbxCCD.ListIndex, 2)
        txtCCName = Trim(Mid(Me.cbxCCD.List(Me.cbxCCD.ListIndex, 0), 7))
        CommandSetup "EnableFinish"
        Me.txtCCCDName.Text = ""
        Me.txtCCCDValue.Text = ""
        Me.txtCCMutualFundName.Text = ""
        Me.txtCCMutualFundShareholder.Text = ""
        Me.txtCCMutualFundShareholder.SetFocus
    Case 3  'Corporate Stock
        CCid = 12
        Me.cbxCCD.Font.Bold = True
        CCPanelEnableDisable "fraCCCorporateStock", "CCS", True
        CCPanelEnableDisable "fraCCContract", "CCCo", False
        CCPanel 11
        intCCValue = Me.cbxCCD.List(Me.cbxCCD.ListIndex, 2)
        txtCCName = Trim(Mid(Me.cbxCCD.List(Me.cbxCCD.ListIndex, 0), 7))
        CommandSetup "EnableFinish"
        Me.txtCCStockShareholder.Text = ""
        Me.txtCCStockSharesNumber.Text = ""
        Me.txtCCStockCompany.Text = ""
        Me.txtCCStockShareholder.SetFocus
    Case 4  'Note
        If NoteSecured = True Then
            Me.cbxCCD.ListIndex = 0
            MsgBox "Selecting Note as a security for a Note is not a valid option."
            Cancel = True
            Me.cbxCCD.SetFocus
            SendKeys "%{down}"
        Else
            CCid = 18
            Me.lblCCNoteSecured.Caption = "This Note requires a security item." & vbCrLf & vbCrLf & _
                                          "Select a security item from the above options to secure this note." & vbCrLf & vbCrLf & _
                                          "Additional securities for this note made be selected later, if desired."
            Me.cbxCCD.Font.Bold = True
            CCPanel 8
            intCCValue = Me.cbxCCD.List(Me.cbxCCD.ListIndex, 2)
            txtCCName = Trim(Mid(Me.cbxCCD.List(Me.cbxCCD.ListIndex, 0), 7))
            CommandSetup "EnableFinish"
            Me.txtCCNoteExecutedBy.Text = ""
            Me.txtCCNoteExecutedTo.Text = ""
            Me.txtCCNoteBalanceDue.Text = ""
            Me.txtCCNoteDate.Text = ""
            Me.txtCCNoteExecutedBy.SetFocus
        End If
    Case 5  'Contract
        CCid = 17
        Me.cbxCCD.Font.Bold = True
        CCPanelEnableDisable "fraCCCorporateStock", "CCS", False
        CCPanelEnableDisable "fraCCContract", "CCC", True
        CCPanel 11
        intCCValue = Me.cbxCCD.List(Me.cbxCCD.ListIndex, 2)
        txtCCName = Trim(Mid(Me.cbxCCD.List(Me.cbxCCD.ListIndex, 0), 7))
        CommandSetup "EnableFinish"
        Me.txtCCContractAmount.Text = ""
        Me.txtCCContractDate.Text = ""
        Me.txtCCContractParty.Text = ""
        Me.txtCCContractAmount.SetFocus
    Case 6  'Government Contract
        CCid = 16
        Me.cbxCCD.Font.Bold = True
        CCPanelEnableDisable "fraCCGovernmentContract", "CCG", True
        CCPanelEnableDisable "fraCCUSPatent", "CCP", False
        CCPanel 12
        intCCValue = Me.cbxCCD.List(Me.cbxCCD.ListIndex, 2)
        txtCCName = Trim(Mid(Me.cbxCCD.List(Me.cbxCCD.ListIndex, 0), 7))
        CommandSetup "EnableFinish"
        Me.txtCCGovContractAgency.Text = ""
        Me.txtCCGovContractAmount.Text = ""
        Me.txtCCGovContractNumber.Text = ""
        Me.txtCCGovContractAgency.SetFocus
    Case 7  'US Patent
        CCid = 21
        Me.cbxCCD.Font.Bold = True
        CCPanelEnableDisable "fraCCUSPatent", "CCP", True
        CCPanelEnableDisable "fraCCGovernmentContract", "CCG", False
        CCPanel 12
        intCCValue = Me.cbxCCD.List(Me.cbxCCD.ListIndex, 2)
        txtCCName = Trim(Mid(Me.cbxCCD.List(Me.cbxCCD.ListIndex, 0), 7))
        CommandSetup "EnableFinish"
        Me.txtCCPatentHolder.Text = ""
        Me.txtCCPatentNumber.Text = ""
        Me.txtCCPatentHolder.SetFocus
  '  Case 8  'Franchise Agreement                                                               ' Removed 7/3/2018 RH
  '      CCid = 28                                                                              ' Removed 7/3/2018 RH
  '      Me.cbxCCD.Font.Bold = True                                                             ' Removed 7/3/2018 RH
  '      CCPanel 13                                                                             ' Removed 7/3/2018 RH
  '      intCCValue = Me.cbxCCD.List(Me.cbxCCD.ListIndex, 2)                                    ' Removed 7/3/2018 RH
  '      txtCCName = Trim(Mid(Me.cbxCCD.List(Me.cbxCCD.ListIndex, 0), 7))                       ' Removed 7/3/2018 RH
  '      CommandSetup "EnableFinish"                                                            ' Removed 7/3/2018 RH
  '      Me.cmdFinish.SetFocus                                                                  ' Removed 7/3/2018 RH
    Case Else
    End Select
    CCSelected = True
    If GuaranteeSecured = True Then
        IsASecurity = True
    End If
End Sub

Private Sub cbxCCD_Enter()
    ResetCollateral
    Me.cbxCCD.Font.Bold = False
    If Me.cbxCCD.ListCount = 0 Then
        CheckCCCombo ("cbxCCD")
        CCAssignmentList Me.cbxCCD
    End If
    Me.cbxCCD.DropDown
End Sub

Private Sub cbxCCLienApartment_Enter()
    CCLienList Me.cbxCCLienApartment
End Sub

Private Sub cbxCCLienLicense_Change()
    If Me.cbxCCLienLicense.ListIndex = 0 Then
        CommandSetup "EnableFinish"
    Else
        OptLienHolder = 1
        CommandSetup "EnableNext"
    End If
End Sub

Private Sub cbxCCLienLicense_Enter()
    CCLienList cbxCCLienLicense
End Sub

Private Sub cbxCCLienPosition_Change()
    If Me.cbxCCLienPosition.ListIndex > 0 Then
        CommandSetup "EnableNext"
    Else
        OptLienHolder = 1
        CommandSetup "EnableFinish"
    End If
End Sub

Private Sub cbxCCLienPosition_Enter()
    CCLienList cbxCCLienPosition
End Sub

Private Sub cbxCCLienPosition_KeyPress(ByVal KeyAscii As MSForms.ReturnInteger)
    KeyAscii = -1
End Sub

Private Sub cbxCCLienPosition2_Change()
    If Me.cbxCCLienPosition2.ListIndex < 1 Then
        OptLienHolder = 1
        CommandSetup "EnableFinish"
    ElseIf Me.cbxCCLienPosition2.ListIndex >= 1 Then
        OptLienHolder = 2
        CommandSetup "EnableNext"
    End If
    If CCid = 22 Then
    '    CommandSetup "EnableFinish"
        If Me.cbxCCLienPosition2.ListIndex > 0 Then
    'Changes made after bug found in 504 -- 10/12/04
'            Me.lblCCLienAmt2.enabled = True
    '      Me.chkCCLienAmt2.Enabled = True
            Me.chkCCLienAmt2.visible = True
            Me.chkCCLienAmt2.enabled = True
            Me.chkCCLienAmt2.Value = True
            Me.chkCCLienAmt2.Locked = True
            Me.txtCCLienAmount2.visible = True
            Me.txtCCLienAmount2.enabled = True
            Me.txtCCLienAmount2.BackColor = vbWhite
'          Me.txtCCLienAmount2.SetFocus
            On Error Resume Next
            Me.txtCCLienAmount2.SetFocus
        Else
'            Me.lblCCLienAmt2.enabled = False
    '      Me.chkCCLienAmt2.Value = False ' -- Added 10/12/04
    '      Me.chkCCLienAmt2.Enabled = False
            Me.txtCCLienAmount2.enabled = False
            Me.txtCCLienAmount2.Text = ""
            Me.txtCCLienAmount2.BackColor = myGray
        End If
    End If
End Sub

Private Sub cbxCCLienPosition2_Enter()
    If Me.cbxCCLienPosition2.ListCount = 0 Then
        CCLienList cbxCCLienPosition2
    End If
End Sub

Private Sub cbxCCLienPosition2_KeyPress(ByVal KeyAscii As MSForms.ReturnInteger)
    KeyAscii = -1
End Sub

Private Sub cbxCCLienPosition3_Change()
    If CCid = 23 Or CCid = 24 Then
        If Me.cbxCCLienPosition3.ListIndex > 0 Then
            Me.lblCCLienAmt3.enabled = True
            Me.chkCCLienAmt3.enabled = True
            Me.chkCCLienAmt3.Value = True
            Me.chkCCLienAmt3.Locked = True
            Me.txtCCLienAmount3.enabled = True
            Me.txtCCLienAmount3.BackColor = vbWhite
        Else
            If CCid = 23 Then
                Me.cbxCCTypeofProperty3.ListIndex = -1
                If Me.cbxCCLienPosition3.ListCount > 0 Then
                    Me.cbxCCLienPosition3.ListIndex = -1
                End If
                Me.lblCCLienAmt3.enabled = False
            Else
                Me.lblCCLien3.enabled = True
                Me.cbxCCLienPosition3.enabled = True
                Me.cbxCCLienPosition3.BackColor = vbWhite
                If Me.cbxCCLienPosition3.ListCount > 0 Then
                    Me.cbxCCLienPosition3.ListIndex = 0
                End If
            End If
            Me.chkCCLienAmt3.enabled = False
            Me.chkCCLienAmt3.Value = False
            Me.txtCCLienAmount3.enabled = False
            Me.txtCCLienAmount3.Text = ""
            Me.txtCCLienAmount3.BackColor = myGray
        End If
    End If
End Sub

Private Sub cbxCCLienPosition3_Enter()
    If Me.cbxCCLienPosition3.ListCount = 0 Then
        CCLienList cbxCCLienPosition3
    End If
End Sub

Private Sub cbxCCLienPosition3_KeyPress(ByVal KeyAscii As MSForms.ReturnInteger)
    KeyAscii = -1
End Sub

Private Sub cbxCCMobileHomeLien_Change()
    If Me.cbxCCMobileHomeLien.ListIndex = 0 Then
        CommandSetup "EnableFinish"
    Else
        OptLienHolder = 1
        CommandSetup "EnableNext"
    End If
End Sub

Private Sub cbxCCMobileHomeLien_Enter()
    CCLienList cbxCCMobileHomeLien
End Sub

Private Sub cbxCCState2_Change()
    SelectInstrument Me.cbxCCState2.Text
End Sub

Private Sub cbxCCState2_Click()
    If Me.cbxCCState2.ListCount = 0 Then
        StatesList Me.cbxCCState2
    End If
    Me.cbxCCState2.DropDown
End Sub

Private Sub cbxCCState2_Enter()
    If Me.cbxCCState2.ListCount = 0 Then
        StatesList Me.cbxCCState2
    End If
    Me.cbxCCState2.DropDown
End Sub

Private Sub cbxCCState2_Exit(ByVal Cancel As MSForms.ReturnBoolean)
    If Me.cbxCCState2.ListIndex = 0 And ccReset = False Then
        curCtrl = "cbxCCState2"
        MyErrorMsg Me.mpgWizard.Value, "Text", True, curCtrl
    '  CommandSetup 3
    Else
        ccReset = False
    End If
End Sub

Private Sub cbxCCState4_Change()
    SelectInstrument Me.cbxCCState4.Text
End Sub

Private Sub cbxCCState4_Enter()
    StatesList Me.cbxCCState4
    Me.cbxCCState4.DropDown
End Sub

Private Sub cbxCCState4_Exit(ByVal Cancel As MSForms.ReturnBoolean)
    If Me.cbxCCState4.ListIndex = 0 Then
        curCtrl = "cbxCCState4"
        MyErrorMsg Me.mpgWizard.Value, "Text", True, curCtrl
    '  CommandSetup 3
    End If
End Sub

Private Sub cbxCCTribeLien_Change()
    If Me.cbxCCTribeLien.ListIndex > 0 Then
        Me.lblCCLienAmt.enabled = True
        Me.txtCCLienAmount.enabled = True
        Me.txtCCLienAmount.BackColor = vbWhite
    Else
        Me.txtCCLienAmount.Text = ""
        Me.lblCCLienAmt.enabled = False
        Me.txtCCLienAmount.enabled = False
        Me.txtCCLienAmount.BackColor = myGray
    End If
End Sub

Private Sub cbxCCTribeLien_Enter()
    If Me.cbxCCTribeLien.ListCount = 0 Then
        CCLienList cbxCCTribeLien
    End If
End Sub

Private Sub cbxCCTypeofInstrument2_KeyPress(ByVal KeyAscii As MSForms.ReturnInteger)
    KeyAscii = -1
End Sub

Private Sub cbxCCTypeofProperty2_Change()
    PropType = Me.cbxCCTypeofProperty2.Value
    
    SelectInstrument Me.cbxCCState2.Text
End Sub
Private Sub cbxCCTypeofProperty4_Change()
    PropType = cbxCCTypeofProperty4.Value
    
    SelectInstrument Me.cbxCCState4.Text
End Sub

Private Sub cbxCCTypeofProperty2_Enter()
    CCTypeList cbxCCTypeofProperty2
End Sub
Private Sub cbxCCTypeofProperty4_Enter()
    CCTypeList cbxCCTypeofProperty4
End Sub

Private Sub cbxCCTypeofProperty2_KeyPress(ByVal KeyAscii As MSForms.ReturnInteger)
    KeyAscii = -1
End Sub
Private Sub cbxCCTypeofProperty4_KeyPress(ByVal KeyAscii As MSForms.ReturnInteger)
    KeyAscii = -1
End Sub
Private Sub cbxCCTypeofProperty3_Enter()
    CCTypeList cbxCCTypeofProperty3
End Sub

Private Sub cbxCCTypeofProperty3_KeyPress(ByVal KeyAscii As MSForms.ReturnInteger)
    KeyAscii = -1
End Sub

Private Sub cbxCCVehicleLien_Change()
    If Me.cbxCCVehicleLien.ListIndex = 0 Then
        CommandSetup "EnableFinish"
    Else
        OptLienHolder = 1
        CommandSetup "EnableNext"
    End If
End Sub

Private Sub cbxCCVehicleLien_Enter()
    If Me.cbxCCVehicleLien.ListCount = 0 Then
        CCLienList cbxCCVehicleLien
    End If
End Sub

Private Sub cbxCCVesselLien_Change()
    If Me.cbxCCVesselLien.ListIndex = 0 Then
        CommandSetup "EnableFinish"
    Else
        OptLienHolder = 1
        CommandSetup "EnableNext"
    End If
End Sub

Private Sub cbxCCVesselLien_Enter()
    If Me.cbxCCVesselLien.ListCount = 0 Then
        CCLienList cbxCCVesselLien
    End If
End Sub

Private Sub cbxIODaysMore_Change()
    IOIndex(4) = Me.cbxIODaysMore.ListIndex
End Sub

Private Sub cbxIODaysOne_Change()
    IOIndex(1) = Me.cbxIODaysOne.ListIndex
End Sub

Private Sub cbxIODaysOne_Enter()
    If Me.cbxIODaysOne.ListCount = 0 Then
        NumberTextList cbxIODaysOne
        IOIndex(1) = Me.cbxIODaysOne.ListIndex
    End If
End Sub

Private Sub cbxIODaysMore_Enter()
    If Me.cbxIODaysMore.ListCount = 0 Then
        NumberTextList cbxIODaysMore
    End If
End Sub

Private Sub cbxIOMonthsDueMore_Change()
    IOIndex(7) = Me.cbxIOMonthsDueMore.ListIndex
End Sub

Private Sub cbxIOMonthsDueMore_Enter()
    If Me.cbxIOMonthsDueMore.ListCount = 0 Then
        DayCountList cbxIOMonthsDueMore
    End If
    If Me.cbxIOMonthsDueMore.ListIndex = -1 Then
        Me.cbxIOMonthsDueMore.ListIndex = 1
    End If
End Sub

Private Sub cbxIOMonthsDue_Enter()
    If Me.cbxIOMonthsDueMore.ListCount = 0 Then
        TimePeriodList cbxIOMonthsDueMore
    End If
End Sub

Private Sub cbxIOMonthsMore_Change()
    IOIndex(5) = Me.cbxIOMonthsMore.ListIndex
End Sub

Private Sub cbxIOMonthsMore_Enter()
    If Me.cbxIOMonthsMore.ListCount = 0 Then
        TimePeriodList cbxIOMonthsMore
    End If
End Sub

Private Sub cbxDFPMonths_Enter()
'    If Me.cbxDFPMonths.LineCount = 0 Then
'        DayCountList cbxDFPMonths
'    End If
End Sub

Private Sub cbxIOMonthsOne_Change()
    IOIndex(3) = Me.cbxIOMonthsOne.ListIndex
End Sub

Private Sub cbxIOMonthsOne_Enter()
    If Me.cbxIOMonthsOne.ListCount = 0 Then
        DayCountList cbxIOMonthsOne
    End If
    If Me.cbxIOMonthsOne.ListIndex = -1 Then
        Me.cbxIOMonthsOne.ListIndex = 1
    End If
End Sub

Private Sub cbxIOPeriodMore_Change()
    IOIndex(6) = Me.cbxIOPeriodMore.ListIndex
End Sub

Private Sub cbxIOPeriodMore_Enter()
    If Me.cbxIOPeriodMore.ListCount = 0 Then
        TimePeriodList cbxIOPeriodMore
    End If
End Sub

Private Sub cbxIOPeriodOne_Change()
    IOIndex(2) = Me.cbxIOPeriodOne.ListIndex
End Sub

Private Sub cbxIOPeriodOne_Enter()
    If Me.cbxIOPeriodOne.ListCount = 0 Then
        TimePeriodList cbxIOPeriodOne
    End If
End Sub

Private Sub cbxLDMaturityPeriod_Change()
    If Me.cbxLDMaturityPeriod.ListIndex = -1 Then
        Me.cbxLDMaturityPeriod.Clear
        MaturityStartList Me.cbxLDMaturityPeriod
    End If
    If cbxLDMaturityPeriod.ListIndex = 0 Then
        lblIOMore3.Caption = "from the month this Note is dated"
        lblPTBeginDisbursement.Caption = "from the month this Note is dated"
    ElseIf cbxLDMaturityPeriod.ListIndex = 1 Then
        lblIOMore3.Caption = "from the month of initial disbursement on this Note"
        lblPTBeginDisbursement.Caption = "from the month of initial disbursement on this Note"
    End If
End Sub

Private Sub cbxLDMaturityPeriod_Enter()
    If Me.txtLDGuaranteeFee.Text = "" Then
        UpdateGuaranteeFee
    End If
    If Me.cbxLDMaturityPeriod.ListIndex = -1 Then
        MaturityStartList Me.cbxLDMaturityPeriod
    End If
End Sub

Private Sub cbxLIState_Change()
    LIIndex = Me.cbxLIState.ListIndex
End Sub

Private Sub cbxLIState_Enter()
    If Me.cbxLIState.ListCount = 0 Then
        StatesList Me.cbxLIState
    End If
    If Len(Me.cbxLIState.Text) > 0 Then
        Me.cbxLIState.Text = Me.cbxLIState.Text
    End If
    Me.cbxLIState.DropDown
End Sub

Private Sub cbxOCState_Change()
    OCIndex = Me.cbxOCState.ListIndex
End Sub

Private Sub cbxOCState_Enter()
    If Me.cbxOCState.ListCount = 0 Then
        StatesList Me.cbxOCState
    End If
    Me.cbxOCState.DropDown
End Sub

Private Sub cbxOCState_Exit(ByVal Cancel As MSForms.ReturnBoolean)
    curCtrl = "cbxOCState"
    If Me.cbxOCState.ListIndex = 0 Then
        Cancel = True
        MyErrorMsg Me.mpgWizard.Value, "Text", True, curCtrl
    '  CommandSetup 3
    End If
End Sub

Private Sub cbxOLORateReduction_KeyPress(ByVal KeyAscii As MSForms.ReturnInteger)
    KeyAscii = -1
End Sub

Private Sub cbxPTBeginPeriodNum_KeyPress(ByVal KeyAscii As MSForms.ReturnInteger)
    KeyAscii = -1
End Sub

Private Sub cbxPTBeginPeriodType_KeyPress(ByVal KeyAscii As MSForms.ReturnInteger)
    KeyAscii = -1
End Sub

Private Sub cbxPTDayCount1_KeyPress(ByVal KeyAscii As MSForms.ReturnInteger)
    KeyAscii = -1
End Sub

Private Sub cbxPTDayCount2_KeyPress(ByVal KeyAscii As MSForms.ReturnInteger)
    KeyAscii = -1
End Sub

Private Sub cbxPTDayCount3a_KeyPress(ByVal KeyAscii As MSForms.ReturnInteger)
    KeyAscii = -1
End Sub

Private Sub cbxPTDayCount3b_KeyPress(ByVal KeyAscii As MSForms.ReturnInteger)
    KeyAscii = -1
End Sub

Private Sub cbxPTDayCount4_KeyPress(ByVal KeyAscii As MSForms.ReturnInteger)
    KeyAscii = -1
End Sub

Private Sub cbxPTDayCount5_KeyPress(ByVal KeyAscii As MSForms.ReturnInteger)
    KeyAscii = -1
End Sub

Private Sub cbxPTPeriod1_KeyPress(ByVal KeyAscii As MSForms.ReturnInteger)
    KeyAscii = -1
End Sub

Private Sub cbxPTPeriod2_KeyPress(ByVal KeyAscii As MSForms.ReturnInteger)
    KeyAscii = -1
End Sub

Private Sub cbxPTPeriod3_KeyPress(ByVal KeyAscii As MSForms.ReturnInteger)
    KeyAscii = -1
End Sub

Private Sub cbxPTPeriod5_KeyPress(ByVal KeyAscii As MSForms.ReturnInteger)
    KeyAscii = -1
End Sub

Private Sub cbxRTPeriod_Enter()
'    DFPPeriodList cbxRTPeriod
End Sub

Private Sub cbxSBASignor_KeyPress(ByVal KeyAscii As MSForms.ReturnInteger)
    KeyAscii = -1
End Sub

Private Sub cbxSBAState_Enter()
    If Me.cbxSBAState.ListCount = 0 Then
        StatesList Me.cbxSBAState
    End If
    Me.cbxSBAState.DropDown
End Sub

Private Sub cbxOLORateReduction_Enter()
    If cbxOLORateReduction.Text = "" Then
        ListItem = Me.cbxOLORateReduction.Text
        StateRateReductionList cbxOLORateReduction
        Me.cbxOLORateReduction.Text = ListItem
    Else
        StateRateReductionList cbxOLORateReduction
    End If
End Sub

Private Sub cbxPTBeginPeriodNum_Enter()
    If Len(Me.cbxPTBeginPeriodNum.Text) > 0 Then
        ListItem = Me.cbxPTBeginPeriodNum.Text
        NumberTextList Me.cbxPTBeginPeriodNum
        Me.cbxPTBeginPeriodNum.Text = ListItem
    Else
        NumberTextList Me.cbxPTBeginPeriodNum
    End If
End Sub
Private Sub cbxPTBeginPeriodType_Enter()
    If Len(Me.cbxPTBeginPeriodType.Text) > 0 Then
        ListItem = Me.cbxPTBeginPeriodType.Text
        TimePeriodList Me.cbxPTBeginPeriodType
        Me.cbxPTBeginPeriodType.Text = ListItem
    Else
        TimePeriodList Me.cbxPTBeginPeriodType
    End If
End Sub

Private Sub cbxPTDayCount1_Enter()
    If Me.cbxPTDayCount1.ListCount = 0 Then
        DayCountList Me.cbxPTDayCount1
    End If
End Sub

'Private Sub cbxPTDayCount1_Exit(ByVal Cancel As MSForms.ReturnBoolean)
'  Me.cbxPTDayCount1.Clear
'End Sub
'
Private Sub cbxPTDayCount2_Enter()
    If Me.cbxPTDayCount2.ListCount = 0 Then
        DayCountList Me.cbxPTDayCount2
    End If
End Sub

Private Sub cbxPTDayCount3a_Enter()
    If Me.cbxPTDayCount3a.ListCount = 0 Then
        DayCountList Me.cbxPTDayCount3a
    End If
End Sub

Private Sub cbxPTDayCount3b_Enter()
    If Me.cbxPTDayCount3b.ListCount = 0 Then
        DayCountList Me.cbxPTDayCount3b
    End If
End Sub

Private Sub cbxPTDayCount4_Enter()
    If Me.cbxPTDayCount4.ListCount = 0 Then
        DayCountList Me.cbxPTDayCount4
    End If
End Sub

Private Sub cbxPTDayCount5_Enter()
    If Me.cbxPTDayCount5.ListCount = 0 Then
        DayCountList Me.cbxPTDayCount5
    End If
End Sub

Private Sub cbxPTPeriod1_Change()
    If Me.cbxPTPeriod1.ListIndex = 1 Then
        Me.txtPTEveryNum1.enabled = True
        Me.txtPTEveryNum1.BackColor = vbWhite
        Me.txtPTEveryNum1.SetFocus
    Else
        Me.txtPTEveryNum1.Text = ""
        Me.txtPTEveryNum1.enabled = False
        Me.txtPTEveryNum1.BackColor = myGray
    End If
End Sub

Private Sub cbxPTPeriod1_Enter()
    If Me.cbxPTPeriod1.ListCount = 0 Then
        TimeFrequencyList cbxPTPeriod1
    End If
End Sub

Private Sub cbxPTPeriod2_Change()
    If Me.cbxPTPeriod2.ListIndex = 1 Then
        Me.txtPTEveryNum2.enabled = True
        Me.txtPTEveryNum2.BackColor = vbWhite
        Me.txtPTEveryNum2.SetFocus
    Else
        Me.txtPTEveryNum2.Text = ""
        Me.txtPTEveryNum2.enabled = False
        Me.txtPTEveryNum2.BackColor = myGray
    End If
End Sub

Private Sub cbxPTPeriod2_Enter()
    If Me.cbxPTPeriod2.ListCount = 0 Then
        TimeFrequencyList cbxPTPeriod2
    End If
End Sub

Private Sub cbxPTPeriod3_Change()
    If Me.cbxPTPeriod3.Text = "months" Then
        Me.txtPTEveryNum3.enabled = True
        Me.txtPTEveryNum3.BackColor = vbWhite
        Me.txtPTEveryNum3.SetFocus
    Else
        Me.txtPTEveryNum3.Text = ""
        Me.txtPTEveryNum3.enabled = False
        Me.txtPTEveryNum3.BackColor = myGray
    End If
End Sub

Private Sub cbxPTPeriod3_Enter()
    If Me.cbxPTPeriod3.ListCount = 0 Then
        TimeFrequencyList cbxPTPeriod3
    End If
    cbxPTDayCount3a_Enter
    If Me.cbxPTDayCount3a.ListIndex = -1 Then
        Me.cbxPTDayCount3a.ListIndex = 0
    End If
    cbxPTDayCount3b_Enter
    If Me.cbxPTDayCount3b.ListIndex = -1 Then
        Me.cbxPTDayCount3b.ListIndex = 0
    End If
End Sub

Private Sub cbxPTPeriod5_Change()
    If InStr(1, Me.cbxPTPeriod5.Text, "months") Then
        Me.txtPTEveryNum5.enabled = True
        Me.txtPTEveryNum5.BackColor = vbWhite
        Me.txtPTEveryNum5.SetFocus
    Else
        Me.txtPTEveryNum5.Text = ""
        Me.txtPTEveryNum5.enabled = False
        Me.txtPTEveryNum5.BackColor = myGray
    End If
End Sub

Private Sub cbxPTPeriod5_Enter()
    If Me.cbxPTPeriod5.ListCount = 0 Then
        TimeFrequencyList cbxPTPeriod5
    End If
End Sub

Private Sub cbxSBAName_Change()
    If Me.cbxSBAName.ListIndex < 0 Then
        Me.cmdResetSBA.visible = True
        Me.cmdSBAEdit.visible = False
    Else
        Me.cmdResetSBA.visible = False
        Me.cmdSBAEdit.visible = True
        EditSBA = False
    End If
    SBANmIndex = Me.cbxSBAName.ListIndex

End Sub

Private Sub cbxSBAName_Click()
    EditSBA = False
    SelectSBAName
End Sub

Private Sub cbxSBAName_Enter()
    On Error Resume Next
    If ActiveDocument.ProtectionType <> wdNoProtection Then
        ActiveDocument.Unprotect "snad7623"
        DocEditSBA = ActiveDocument.Bookmarks("EditSBA").Range.Text
    End If
    'If ActiveDocument.ProtectionType = wdNoProtection Then
    'Else
    '  ActiveDocument.Unprotect
    '  DocEditSBA = ActiveDocument.Bookmarks("EditSBA").Range.Text
    'End If
    If Me.cbxSBAName.ListCount = 0 Then
        PopulateSBAOfficeList
        Me.cbxSBAName.DropDown
    ElseIf EditSBA = False Then
        Me.cbxSBAName.DropDown
    ElseIf DocEditSBA = False Then
        Me.cbxSBAName.DropDown
    Else
        Me.cbxSBAName.DropDown
    End If
    'Added 9/11/2006 to work with Word 2003
    On Error Resume Next
    If Val(Application.Version) >= 11 And ActiveDocument.ProtectionType <> wdAllowOnlyReading Then
        ActiveDocument.Protect wdAllowOnlyReading, , "snad7623"
    Else
        ActiveDocument.Protect wdAllowOnlyComments
    End If
    'ActiveDocument.Protect wdAllowOnlyComments
    If Me.cbxSBAName.ListCount = 0 And System.PrivateProfileString("", MySection, "NoList") = "False" Then
        Dim Ctrl As control
        For Each Ctrl In Controls
            If InStr(1, Ctrl.Name, "SBA") Then
                If InStr(1, Ctrl.Name, "cbxSBA") Then
                    Me(Ctrl.Name).visible = True
                    Me(Ctrl.Name).Locked = True
                    Me(Ctrl.Name).BackColor = myGray
                    If InStr(1, Ctrl.Name, "cbxSBAState") Then
                        Me(Ctrl.Name).visible = True
                        Me(Ctrl.Name).Locked = False
                        Me(Ctrl.Name).enabled = True
                        Me(Ctrl.Name).BackColor = vbWhite
                        Me(Ctrl.Name).TabStop = True
                    End If
                ElseIf InStr(1, Ctrl.Name, "txtSBA") Then
                    Me(Ctrl.Name).visible = True
                    Me(Ctrl.Name).BackColor = vbWhite
                    Me(Ctrl.Name).Locked = False
                    Me(Ctrl.Name).enabled = True
                    Me(Ctrl.Name).TabStop = True
                End If
            End If
        Next  'Enable/Disable SBA Information dialog
        On Error Resume Next
        Me.txtSBAName.SetFocus
    End If
End Sub
Private Sub SelectSBAName()
    Dim Ctrl As control
    vIndex = Me.cbxSBAName.ListIndex
    If EditSBA = False Then
        If vIndex >= 0 Then
            SBANmIndex = vIndex
            Me.txtSBAName.Text = ""
            Me.txtSBAAddress.Text = ""
            Me.txtSBAAddress2.Text = ""
            Me.txtSBACity.Text = ""
            Me.cbxSBAState.Locked = True
            Me.txtSBAZip.Text = ""
            Select Case vIndex
            Case -1
                Me.txtSBAName.Locked = True
                Me.cbxSBAName.Text = ""
                For Each Ctrl In Controls
                    If InStr(1, Ctrl.Name, "SBA") And (InStr(1, Ctrl.Name, "fra") <= 0) And (InStr(1, Ctrl.Name, "img") <= 0) Then
                        Select Case Ctrl
                        Case InStr(1, Ctrl.Name, "lblSBA")
                            Me(Ctrl.Name).enabled = False
                        Case InStr(1, Ctrl.Name, "txtSBA")
                            Me(Ctrl.Name).Text = ""
                            Me(Ctrl.Name).enabled = False
                        Case Else
                        End Select
                    End If
                Next
            Case Else
    'Added 9/11/2006 to allow use in Word 2003
                On Error Resume Next
                If ActiveDocument.ProtectionType <> wdNoProtection Then
                    ActiveDocument.Unprotect "snad7623"
                End If
    '    On Error Resume Next
    '    If ActiveDocument.ProtectionType = wdNoProtection Then
    '    Else
    '      ActiveDocument.Unprotect
    '    End If
                DocEditSBA = ActiveDocument.Bookmarks("EditSBA").Range.Text
                If DocEditSBA = False Or EditSBA = False Then
                    Me.txtSBAName.Text = Me.cbxSBAName.Column(1, vIndex)
                    If Me.cbxSBAName.Column(2, vIndex) = "" Or IsNull(Me.cbxSBAName.Column(2, vIndex)) Then
                        Me.txtSBAAddress.Text = Me.cbxSBAName.Column(3, vIndex)
                        Me.txtSBAAddress2.Text = ""
                    Else
                        Me.txtSBAAddress.Text = Me.cbxSBAName.Column(2, vIndex)
                        Me.txtSBAAddress2.Text = Me.cbxSBAName.Column(3, vIndex)
                    End If
                    Me.txtSBACity.Text = Me.cbxSBAName.Column(4, vIndex)
                    Me.cbxSBAState.Value = Me.cbxSBAName.Column(5, vIndex)
                    Me.txtSBAZip.Text = Me.cbxSBAName.Column(6, vIndex)
                    SBACode = Me.cbxSBAName.Column(7, vIndex)
                Else
                    Me.txtSBAName.Text = IIf(Left(ActiveDocument.Bookmarks("SBAName").Range.Text, 1) <> "[", ActiveDocument.Bookmarks("SBAName").Range.Text, "")
                    Me.txtSBAAddress.Text = IIf(Left(ActiveDocument.Bookmarks("SBAAddress").Range.Text, 1) <> "[", ActiveDocument.Bookmarks("SBAAddress").Range.Text, "")
                    Me.txtSBAAddress2.Text = IIf(Left(ActiveDocument.Bookmarks("SBAAddress2").Range.Text, 1) <> "[", ActiveDocument.Bookmarks("SBAAddress2").Range.Text, "")
                    Me.txtSBACity.Text = IIf(Left(ActiveDocument.Bookmarks("SBACity").Range.Text, 1) <> "[", ActiveDocument.Bookmarks("SBACity").Range.Text, "")
                    Me.cbxSBAState.Locked = False
                    Me.cbxSBAState.Value = IIf(Left(ActiveDocument.Bookmarks("SBAState").Range.Text, 1) <> "[", ActiveDocument.Bookmarks("SBAState").Range.Text, "")
                    Me.cbxSBAState.Locked = True
                    Me.txtSBAZip.Text = IIf(Left(ActiveDocument.Bookmarks("SBAZip").Range.Text, 1) <> "[", ActiveDocument.Bookmarks("SBAZip").Range.Text, "")
                End If
                For Each Ctrl In Controls
                    If InStr(1, Ctrl.Name, "SBA") And (InStr(1, Ctrl.Name, "fra") <= 0) And (InStr(1, Ctrl.Name, "img") <= 0) And EditSBA = False Then
                        If InStr(1, Ctrl.Name, "txtSBA") Then
                            If InStr(1, Ctrl.Name, "txtSBASignor") Then
                            Else
                                Me(Ctrl.Name).BackColor = myGray
                                Me(Ctrl.Name).Locked = True
                                Me(Ctrl.Name).TabStop = False
                                Me(Ctrl.Name).enabled = True
                            End If
                        ElseIf InStr(1, Ctrl.Name, "cbxSBAState") Then
                            Me(Ctrl.Name).BackColor = myGray
                            Me(Ctrl.Name).Locked = True
                            Me(Ctrl.Name).TabStop = False
                            Me(Ctrl.Name).enabled = True
                            Me.txtSBAName.Locked = True
                        End If
                    End If
                Next
            End Select
        End If
    End If
End Sub

Private Sub cbxSBAName_Exit(ByVal Cancel As MSForms.ReturnBoolean)
    SelectSBAName
End Sub

Private Sub cbxSBASignor_Enter()
    If Me.txtLDGuaranteeFee.Text = "" Then
        UpdateGuaranteeFee
    End If
    If Me.cbxSBASignor.ListCount = 0 Then
        ReadEmpList
    End If
End Sub
Private Sub ReadEmpList()

''ReadEmpList
'' ===================================================
'' Populate frmMain.cbxSBASignor list from EmpList.txt text file
'' ===================================================
'Revised to eliminate DAO360 5/20/03
'Comma delimited must be sorted and NO commas allowed in text fields
'Eliminate DAO360 per Ron Whalen
'Open "c:\documents and settings\dhsmith\local settings\temp\EmpList.ini" For Output As #1
'  Print #1, "[EmpList.txt]"
'  Print #1, "ColNameHeader = True"
'  Print #1, "Format = DELIMITED(,)"
'Close #1
'    Dim RS As Object
'    Dim strConnect As String
'    Dim strSource As String
'    Dim strSrouce2 As String
'    Dim strDestination As String
'    Dim strEmpDB As String
'    Dim Env As String
'    Dim vEmpList As String
'    Dim vFirstName As String
'    Dim vMidName As String
'    Dim vLastName As String
'    Dim vTitle As String
'    Dim strEmpTable As String
'    Dim Count As Integer
'    Dim fld As Variant
'    Dim strSQL As String
'
'    Const adOpenStatic = 3
'
'
'
'    'Copy List
'    strSource = Environ("APPWG") & "SBA Data\EmpList.txt"
'    If Dir(strSource) <> "" And strSource <> "SBA Data\EmpList.txt" Then
'        strDestination = Environ("Temp") & "\EmpList.txt"
'        On Error Resume Next
'        If Dir(strDestination) <> "" Then
'            SetAttr strDestination, vbNormal
'        End If
'        FileCopy strSource, strDestination
'        Me.cbxSBASignor.BackColor = vbWhite
'        Me.cbxSBASignor.enabled = True
'        If Me.cbxSBASignor.ListCount > 0 Then
'            Me.cbxSBASignor.ListIndex = 0
'        End If
'    Else
'        strSource2 = ActiveDocument.AttachedTemplate.Path & "\EmpList.txt"
'        If Dir(strSource2) <> "" Then
'            If Environ("temp") = "" Then
'                Env = Environ("tmp")
'            Else
'                Env = Environ("temp")
'            End If
'            If Env <> "" Then
'                strDestination = Env & "\EmpList.txt"
'                If Dir(strDestination) <> "" Then
'                    SetAttr strDestination, vbNormal
'                End If
'                FileCopy strSource2, strDestination
'            Else
'                MySection = "HKEY_CURRENT_USER\Software\SBA\" + WizInfo.WizSection + "\" + WizInfo.WizVer
'                xx = System.PrivateProfileString("", MySection, "NoEmpList")
'                If xx = "True" Then
'                    MsgBox "The file 'EmpList.txt' cannot be found at" & vbCrLf & vbCrLf & _
'                           Env & vbCrLf & vbCrLf & _
'                           "Please check that the file and subdirectory exist.     ", _
'                           vbCritical + vbOKOnly, _
'                          "File Missing"
'                    Me.cbxSBASignor.BackColor = myGray
'                    Me.cbxSBASignor.Text = "No Employee List Available"
'                    Me.cmdSBAOverride.visible = True
'                    Me.cmdSBAOverride.enabled = True
'                    SaveAsDefault "NoEmpList", "True"
'                    Exit Sub
'                End If
'    '  Else
'                If Environ("APPWG") = "" Then
'                    Me.cbxSBASignor.BackColor = myGray
'                    Me.cbxSBASignor.Locked = True
'                    Me.cbxSBASignor.Text = "No Employee List Available"
'                    Me.cmdSBAOverride.visible = True
'                    Me.cmdSBAOverride.enabled = True
'                    SaveAsDefault "NoEmpList", "True"
'                Else
''                    MsgBox "The file 'EmpList.txt' cannot be found at" & vbCrLf & vbCrLf & _    2/22/2019  RDH  Commented out Message box
''                           Environ("APPWG") & "SBA Data\" & vbCrLf & vbCrLf & _
''                           "Please check that the file and subdirectory exist.     ", _
''                           vbCritical + vbOKOnly, _
''                           "File Missing"
'                    Me.cbxSBASignor.BackColor = myGray
'                    Me.cbxSBASignor.Locked = True
'                    Me.cbxSBASignor.Text = "No Employee List Available"
'                    Me.cmdSBAOverride.visible = True
'                    Me.cmdSBAOverride.enabled = True
'                    SaveAsDefault "NoEmpList", "True"
'                    Exit Sub
'                End If
'            End If
'        End If
'    End If
'    'blnFirst3146 = True
'
'    '' Define csv file and database directory
'    On Error GoTo -1: On Error GoTo ErrorEmpList
'    vEmpList = ActiveDocument.Variables("EmpList").Value
'    strEmpTable = vEmpList
'    If Env <> "" Then
'        strEmpDB = Env
'    Else
'        strEmpDB = Environ("Temp")
'    End If
'
'    If Right(strEmpDB, 1) = "\" Then strEmpDB = Left(strEmpDB, Len(strEmpDB) - 1)
'
'   '' Populate list
'    If UCase(Dir(strEmpDB & "\" & strEmpTable, vbNormal)) <> "" Then    'UCase(strEmpTable) Then
'        Set RS = CreateObject("ador.recordset")
'        strConnect = _
'        "Driver={Microsoft Text Driver (*.txt; *.csv)};" & _
'                     "DefaultDir=" & strEmpDB & ";" & Chr(34)
'        RS.Open "select * from " & strEmpTable & " order by LastName", strConnect, adOpenStatic
'        Count = RS.RecordCount
'        Do Until RS.EOF
'            For Each fld In RS.Fields
'                If fld.Name <> "Alias" And fld.Value <> "" Then
'                    If fld.Name = "FirstName" And fld.Value <> "" Then
'                        vFirstName = fld.Value + " "
'                    End If
'                    If fld.Name = "MidName" And fld.Value <> "" Then
'                        vMidName = fld.Value + " "
'                    End If
'                    If fld.Name = "LastName" And fld.Value <> "" Then
'                        vLastName = fld.Value
'                    End If
'                    If fld.Name = "Title" And fld.Value <> "" Then
'                        vTitle = ", " + fld.Value
'                    End If
'
'                End If
'            Next
'            With frmMain.cbxSBASignor
'                .AddItem vFirstName + vMidName + vLastName + vTitle
'            End With
'            vFirstName = ""
'            vMidName = ""
'            vLastName = ""
'            vTitle = ""
'            RS.MoveNext
'        Loop
'        RS.Close
'    End If
'    If frmMain.cbxSBASignor.ListCount = 0 Then
'        frmMain.cbxSBASignor.Text = "No Employee List Available"
'        SaveAsDefault "NoEmpList", "True"
'    Else
'        SaveAsDefault "NoEmpList", "False"
'    End If
'    GoTo EndList
'
'ErrorEmpList:
''    MsgBox "An error has occurred reading the Employee List.     " & vbCrLf & vbCrLf & _    2/22/2019  RDH  Commented out Message box
''           "Continuing without the list.", _
''           vbExclamation + vbOKOnly, _
''           "Read Employee List"
'    Me.cbxSBASignor.BackColor = myGray
'    Me.cbxSBASignor.Locked = True
'    Me.cbxSBASignor.Text = "No Employee List Available"
'    Me.cmdSBAOverride.visible = True
'    Me.cmdSBAOverride.enabled = True
'    SaveAsDefault "NoEmpList", "True"
'EndList:

 
    If Me.cbxSBASignor.ListCount = 0 Then
        EmpList cbxSBASignor
    End If
    Me.cbxCCE.DropDown


End Sub

Private Sub cbxUPCategory_AfterUpdate()
'    MsgBox "Hi, Dan"
End Sub

Private Sub cbxUPCategory_Change()
Dim CurIndex As Integer
Me.fraUPInfo2.Top = Me.fraUPInfo2.Tag
'CurIndex = Me.cbxUPCategory.ListIndex
'If ActiveDocument.Bookmarks("cbLIDFP").Range.text = 1 Then
'    If Me.cbxUPCategory.ListIndex < 20 Then
'    MsgBox "This selection is not available when Dealer Floor Plan      " & vbCrLf & vbCrLf & _
'    "has been selected in the Loan Information panel." & vbCrLf & vbCrLf & _
'    "Please select Option 20, 22a, 22b or 23.", _
'    vbCritical + vbOKOnly, _
'    "Invalid Selection for DFP Loans"
'    Me.cbxUPCategory.ListIndex = Me.txtobUPID.text 'CurIndex
'    Exit Sub
'    End If
'ElseIf ActiveDocument.Bookmarks("cbLIDFP").Range.text = 0 Then
'    If Me.cbxUPCategory.ListIndex = 22 Or Me.cbxUPCategory.ListIndex = 23 Then
'    MsgBox "This selection is not available when Dealer Floor Plan      " & vbCrLf & vbCrLf & _
'    "IS NOT selected in the Loan Information panel." & vbCrLf & vbCrLf & _
'    "Please select another option.", _
'    vbCritical + vbOKOnly, _
'    "Invalid Selection for Non-DFP Loans"
'    Me.cbxUPCategory.ListIndex = Me.txtobUPID.text 'CurIndex
'    Exit Sub
'    End If
'End If
    If Me.cbxUPCategory.ListIndex = 21 Then                    ' RH Removed for changes requested by Cheri 7/13/2018
        UPOPtions 21, False                                    ' RH Removed for changes requested by Cheri 7/13/2018
        Me.cmdUPEdit.enabled = False                           ' RH Removed for changes requested by Cheri 7/13/2018
        Me.cmdUPNew.enabled = True                            ' RH Removed for changes requested by Cheri 7/13/2018
        Me.cmdUPNew.Caption = "Save"
        Me.txtUPAmount.Locked = True                           ' RH Removed for changes requested by Cheri 7/13/2018
        Me.txtUPAmount.BackColor = myGray                      ' RH Removed for changes requested by Cheri 7/13/2018
    Else                                                       ' RH Removed for changes requested by Cheri 7/13/2018
        If Me.cbxUPCategory.Locked = False Then                ' RH Removed for changes requested by Cheri 7/13/2018
            Me.cmdUPEdit.enabled = False                       ' RH Removed for changes requested by Cheri 7/13/2018
            Me.txtUPAmount.Locked = False                      ' RH Removed for changes requested by Cheri 7/13/2018
            Me.txtUPAmount.BackColor = vbWhite                 ' RH Removed for changes requested by Cheri 7/13/2018
        Else                                                   ' RH Removed for changes requested by Cheri 7/13/2018
            Me.cmdUPEdit.enabled = True                        ' RH Removed for changes requested by Cheri 7/13/2018
            Me.txtUPAmount.Locked = True                       ' RH Removed for changes requested by Cheri 7/13/2018
            Me.txtUPAmount.BackColor = myDisabled              ' RH Removed for changes requested by Cheri 7/13/2018
        End If                                                 ' RH Removed for changes requested by Cheri 7/13/2018
    End If                                                     ' RH Removed for changes requested by Cheri 7/13/2018
    Dim CatSelected As String
    For i = FirstIdx To LastIdx
        If ActiveDocument.Bookmarks.Exists("obUPID_" & i) Then
            CatSelected = CatSelected & "|" & IIf(InStr(1, ActiveDocument.Bookmarks("obUPID_" & i).Range.Text, "[") = 0, Trim(ActiveDocument.Bookmarks("obUPID_" & i).Range.Text), "")
        End If
    Next i
    If Me.cbxUPCategory.ListIndex = 7 Then
        If InStr(1, CatSelected, "|4") > 0 Then
            GoTo Xit
        ElseIf InStr(1, CatSelected, "|5") > 0 Then
            GoTo Xit
        ElseIf InStr(1, CatSelected, "|6") > 0 Then
            GoTo Xit
        ElseIf InStr(1, CatSelected, "|9") > 0 Then
            GoTo Xit
        End If
    End If
    If Me.cbxUPCategory.ListIndex = 22 And Me.txtUPRemainingAmount.Text <> "0.00" Then
     If InStr(1, CatSelected, "|22") > 0 Then
        Me.cbxUPCategory.ListIndex = 21
        GoTo Xit3
     End If
    End If
    If Me.cbxUPCategory.ListIndex = 23 And Me.txtUPRemainingAmount.Text <> "0.00" Then
     If InStr(1, CatSelected, "|23") > 0 Then
        Me.cbxUPCategory.ListIndex = 21
        GoTo Xit3
     End If
    End If
    Select Case Me.cbxUPCategory.ListIndex
    Case 4, 5, 6, 9
        If InStr(1, CatSelected, "|7") > 0 Then
            GoTo Xit2
        End If
    Case 22
'        If Me.cbxUPCategory.ListIndex = 22 Then
'            Me.cbxUPCategory.ListIndex = 21
'            GoTo Xit3
'        End If
        If InStr(1, CatSelected, "|23") > 0 Then
            Me.cbxUPCategory.ListIndex = 21
            GoTo Xit3
        End If
    Case 23
'        If Me.cbxUPCategory.ListIndex = 23 And InStr(1, CatSelected, "|23") > 0 Then
'            Me.cbxUPCategory.ListIndex = 21
'            GoTo Xit3
'        End If
        If InStr(1, CatSelected, "|22") > 0 Then
            Me.cbxUPCategory.ListIndex = 21
            GoTo Xit3
        End If
    Case Else
    End Select
    GoTo EndIt
Xit:
    MsgBox "Use of Proceeds Categories 4, 5, 6 and/or 9 have previously     " & vbCrLf & _
           "been selected." & vbCrLf & vbCrLf & _
           "Use of Proceeds Category 7 cannot be selected with     " & vbCrLf & _
           "Categories 4, 5, 6 or 9." & vbCrLf & vbCrLf & _
           "If Category 7 is required, first delete Categories 4, 5, 6 and/or 9.     ", _
           vbCritical + vbOKOnly, _
           "Invalid Use of Proceeds Selection"
'    Me.cbxUPCategory.ListIndex = 21
    Exit Sub
'    GoTo EndIt
Xit2:
    MsgBox "The Use of Proceeds Category 7 was previously selected.    " & vbCrLf & vbCrLf & _
           "Use of Proceeds Categories 4, 5, 6 or 9 cannot be selected with     " & vbCrLf & _
           "Category 7." & vbCrLf & vbCrLf & _
           "If Categories 4, 5, 6 and/or 9 are required, first delete Category 7.     ", _
           vbCritical + vbOKOnly, _
           "Invalid Use of Proceeds Selection"
'    Me.cbxUPCategory.ListIndex = 21
Xit3:
    MsgBox "Use of Proceeds Category 22a or 22b were previously selected.    " & vbCrLf & vbCrLf & _
           "Use of Proceeds Categories 22a and 22b cannot be selected together.     ", _
           vbCritical + vbOKOnly, _
           "Invalid Use of Proceeds Selection"
            UpdateChangeRP 7, 10, "UP", "RPFirst010", "RPLast010"

EndIt:
    If Me.cbxUPCategory.ListIndex <> 21 Then
        UpPass = 0
        On Error Resume Next
        If Me.cbxUPCategory.Locked = False Then
'            If Me.cbxUPCategory.ListIndex = 22 Then
'                Me.cmdUPEdit.enabled = False
'                Me.txtUPAmount.Text = ""
'                Me.txtUPAmount.BackColor = myGray
'                Me.txtUPAmount.Locked = True
'                Me.txtUPAmount.enabled = False
''                Me.lblUPData1.Visible = False
'                Me.txtUPField1.visible = False
'                Me.lblUPData1.enabled = True 'IIf(cIndex = 0, False, True)
'                Me.lblUPData1.visible = True 'IIf(cIndex = 0, False, True)
'                Me.lblUPData1.Caption = "This option requires no amount and no Use of Proceeds balances.  Click 'Finish' to continue." 'Me.cbxUPCategory.List(cIndex, 1)
'                Me.lblUPData1.SetFocus
'                Me.txtUPField1.Text = ""
'                Me.txtUPField2.visible = False
'                Me.txtUPField2.Text = ""
'                Me.lblUPData2.visible = False
'                On Error Resume Next
'                Me.cmdFinish.enabled = True
'                Me.cmdNext.enabled = False
'                Me.cmdCancel.SetFocus
'            Else
                Me.cmdUPEdit.enabled = True
                Me.txtUPAmount.enabled = True
                Me.lblUPUseAmount.enabled = True
                Me.txtUPAmount.Locked = False
                Me.txtUPAmount.BackColor = vbWhite
                Me.txtUPAmount.SetFocus
'                If Me.cbxUPCategory.ListIndex = 23 Then
'                    Me.cmdFinish.enabled = False
'                End If
                If Me.cbxUPCategory.ListIndex = 16 Or Me.cbxUPCategory.ListIndex = 17 Then
                    Me.fraUPInfo2.Top = 228
                    ResetUP 32, Me.cbxUPCategory.ListIndex
                    Me.txtUPAmount2.visible = True
                    Me.txtUPField3.visible = True
                    Me.lblUPData3.visible = True
                    Me.lblUPData4.visible = True
                    Dim cIndex As Integer
                    Me.lblUPData3.Caption = Me.cbxUPCategory.List(Me.cbxUPCategory.ListIndex, 3)
                    Me.lblUPData4.Caption = Me.cbxUPCategory.List(Me.cbxUPCategory.ListIndex, 4)
                End If
'            End If
        Else
            Me.cmdUPEdit.enabled = True
            Me.txtUPAmount.Locked = True
            Me.txtUPAmount.BackColor = myDisabled
        End If
    End If
'UpdateChangeRP 7, 10, "UP", "RPFirst010", "RPLast010"
End Sub

Private Sub ResetUP(vTop As Integer, cIndex As Integer)
    Dim cList As Variant
    cList = Split("cmdUPShowList lblUpRemaining txtUpRemaining2 cmdUPEdit cmdUPNew cmdUPDelete cmdUPInfo cmdUPLeft cmdUPRight lblUPContinue", " ")
    Dim intX As Integer
    intX = 0
    If cIndex <> 16 And cIndex <> 17 Then
    For intX = 0 To UBound(cList)
'        If Direction = 0 Then 'And Me(cList(intX)).Tag <> Me(cList(intX)).Top Then
        vTop = Me(cList(intX)).Tag
        If Me(cList(intX)).enabled = False Then
            Me(cList(intX)).enabled = True
'            Me(cList(intX)).Top = vTop
            Me(cList(intX)).enabled = False
        Else
'            Me(cList(intX)).Top = vTop
        End If
        Me.fraUPInfo2.Top = Me.fraUPInfo2.Tag
'        End If
    Next
        cIndex = 0
        Me.txtUPAmount2.enabled = IIf(cIndex = 0, False, True)
        Me.txtUPAmount2.visible = IIf(cIndex = 0, False, True)
        Me.lblUPData3.enabled = IIf(cIndex = 0, False, True)
        Me.lblUPData3.visible = IIf(cIndex = 0, False, True)
        Me.txtUPField3.enabled = IIf(cIndex = 0, False, True)
        Me.txtUPField3.visible = IIf(cIndex = 0, False, True)
        Me.lblUPData4.enabled = IIf(cIndex = 0, False, True)
        Me.lblUPData4.visible = IIf(cIndex = 0, False, True)
    End If
    If cIndex = 16 Or cIndex = 17 Then
    For intX = 0 To UBound(cList)
        If Me(cList(intX)).enabled = False Then
            Me(cList(intX)).enabled = True
            Me(cList(intX)).visible = True
'            Me(cList(intX)).Top = Me(cList(intX)).Tag + vTop
            Me(cList(intX)).enabled = False
        Else
'            Me(cList(intX)).Top = Me(cList(intX)).Tag + vTop
            Me(cList(intX)).visible = True
        End If
    Next
    Me.fraUPInfo2.Top = 228
    End If
End Sub

Private Sub cbxUPCategory_KeyPress(ByVal KeyAscii As MSForms.ReturnInteger)
    KeyAscii = -1
End Sub

Private Sub cbxVLORateAdjusted_KeyPress(ByVal KeyAscii As MSForms.ReturnInteger)
    KeyAscii = -1
End Sub

'Added 4/25/2018 Borrower's Contribution
'Private Sub chkAC2Borrower_Click()
'    Me.txtAC2BorrowerAmount.enabled = Me.chkAC2Borrower.Value
'    'Me.txtAC2Assets.enabled = Me.chkAC2Borrower.Value
'    Me.lblAC2BorrowerAmt.enabled = Me.chkAC2Borrower.Value
'    If Me.chkAC2Borrower.Value = False Then
'        Me.txtAC2BorrowerAmount.Text = ""
'        'Me.txtAC2Assets.Text = ""
'        Me.txtAC2BorrowerAmount.BackColor = myGray
'        'Me.txtAC2Assets.BackColor = myGray
'    Else
'        Me.txtAC2BorrowerAmount.BackColor = vbWhite
'        'Me.txtAC2Assets.BackColor = vbWhite
'        Me.txtAC2BorrowerAmount.SetFocus
'    End If
'End Sub

'Added 6/28/2010 Business Valuation
Private Sub chkAC2BVCheck_Click()
    If Me.chkAC2BVCheck.Value = True Then
        Me.txtAC2BVAmount.enabled = True
        Me.txtAC2BVAmount.BackColor = vbWhite
        Me.txtAC2BVName.enabled = True
        Me.txtAC2BVName.BackColor = vbWhite
        Me.txtAC2BVName.SetFocus
    Else
        Me.txtAC2BVAmount.enabled = False
        Me.txtAC2BVAmount.BackColor = myGray
        Me.txtAC2BVName.enabled = False
        Me.txtAC2BVName.BackColor = myGray
    End If
End Sub

Private Sub chkC7PP10_Click()
    If Me.chkC7PP10.Value = True Then
        Me.txtC7PP10.enabled = True
        Me.txtC7PP10.BackColor = vbWhite
        Me.txtC7PP10.SetFocus
    Else
        Me.txtC7PP10.enabled = False
        Me.txtC7PP10.BackColor = myGray
        Me.txtC7PP10.Text = ""
    End If
End Sub

Private Sub chkC7PP10A_Click()
    If Me.chkC7PP10A.Value = True Then
        Me.txtC7PP10A.enabled = True
        Me.txtC7PP10A.Text = Me.txtC7PP10.Text
        Me.txtC7PP10A.BackColor = vbWhite
        Me.txtC7PP10A.SetFocus
    Else
        Me.txtC7PP10A.enabled = False
        Me.txtC7PP10A.BackColor = myGray
    End If
End Sub

Private Sub chkC7PP10B_Click()
    If Me.chkC7PP10B.Value = True Then
        Me.txtC7PP10B.Text = Me.txtC7PP10A.Text
        Me.txtC7PP10B.enabled = True
        Me.txtC7PP10B.BackColor = vbWhite
        Me.txtC7PP10B.SetFocus
    Else
        Me.txtC7PP10B.enabled = False
        Me.txtC7PP10B.BackColor = myGray
    End If
End Sub

Private Sub chkCC7Shared_Click() 'Added 3/7/2008
  If Me.chkCC7Shared.Value = True Then
'    Me.lblCC7Shared.enabled = True
'    Me.lblCC7Dollar.Enabled = True
'    Me.lblCC7Dollar.Enabled = True
'    Me.txtCC7Shared.enabled = True
'    Me.txtCC7Shared.BackColor = vbWhite
    Me.txtCC7SharedAmt.enabled = True
    Me.txtCC7SharedAmt.BackColor = vbWhite
    Me.optCC7NonSBA.enabled = True
    Me.optCC7PariPassu.enabled = True
  Else
'    Me.lblCC7Shared.enabled = False
'    Me.lblCC7Dollar.Enabled = False
    Me.txtCC7SharedLender.Text = ""
    Me.txtCC7SharedLender.enabled = False
    Me.txtCC7SharedLender.BackColor = myGray
    Me.txtCC7SharedAmt.Text = ""
    Me.txtCC7SharedAmt.enabled = False
    Me.txtCC7SharedAmt.BackColor = myGray
    Me.optCC7NonSBA.Value = True
    Me.optCC7NonSBA.enabled = False
    Me.optCC7PariPassu.enabled = False
  End If
End Sub

Private Sub GuaranteesOnly(PriorVal)
'    Dim PriorVal As Boolean
'    PriorVal = Me.chkCCGuaranteesOnly.Value
    If FirstPass = True Then
    Else
    CCLength = Len(ActiveDocument.Bookmarks("CCAll").Range.Text)
    If CCLength > 159 And cPass = 0 Then
        If PriorVal = True Then
            Cancel = True
            If MsgBox("The Collateral Conditions section has existing conditions." & vbCrLf & vbCrLf & _
                "Changing the option for the SLA guarantees only will delete ALL existing conditions.      " & vbCrLf & vbCrLf & _
                "Continue?", _
                vbInformation + vbYesNo, _
                "Collateral Conditions") = vbYes Then
                ' Me.optCCGuaranteesOnly.Value = False
                RestoreCC
                MsgBox "All Collateral Conditions have been removed from the Collateral Conditions Section.      ", vbInformation + vbOKOnly
                cPass = 1
            Else
                Cancel = True
             '   Me.optCCGuaranteesOnly.Value = True
                cPass = 1
            End If
        End If
    End If
    End If
End Sub

Private Sub chkLISLA_Click()
    If Me.chkLISLA.Value = True Then
        ' Me.optCCGuaranteesOnly.enabled = True
    Else
        ' Me.optCCGuaranteesOnly.Value = False
        ' Me.optCCGuaranteesOnly.enabled = False
    End If
End Sub

Private Sub optCCAllCollateral_Click()
'If Me.optCCAllCollateral.Value = False Then
'    Me.cbxCCB.enabled = False
'    Me.cbxCCC.enabled = False
'    Me.cbxCCD.enabled = False
'    Me.cbxCCE.enabled = False
''    GuaranteesOnly (PriorVal)
'Else
'    Me.cbxCCB.enabled = True
'    Me.cbxCCC.enabled = True
'    Me.cbxCCD.enabled = True
'    Me.cbxCCE.enabled = True
''    GuaranteesOnly (PriorVal)
'End If

End Sub

Private Sub chkRTESF_Change()
    If Me.chkRTESF.Value = True Then
        Me.lblRTESF2.enabled = True
        Me.txtRTESF.enabled = True
        Me.txtRTESF.BackColor = vbWhite
        Me.txtRTESF.SetFocus
    Else
        Me.lblRTESF2.enabled = False
        Me.txtRTESF.Text = ""
        Me.txtRTESF.enabled = False
        Me.txtRTESF.BackColor = myGray
    End If
End Sub

Private Sub chkRTESF_Click()
    If Me.chkRTESF.Value = True Then
        Me.lblRTESF2.enabled = True
        Me.txtRTESF.enabled = True
        Me.txtRTESF.BackColor = vbWhite
        Me.txtRTESF.SetFocus
    Else
        Me.lblRTESF2.enabled = False
        Me.txtRTESF.Text = ""
        Me.txtRTESF.enabled = False
        Me.txtRTESF.BackColor = myGray
    End If
End Sub

Private Sub fraLI3_Click()

End Sub

Private Sub imgSBA_BeforeDragOver(ByVal Cancel As MSForms.ReturnBoolean, ByVal Data As MSForms.DataObject, ByVal X As Single, ByVal Y As Single, ByVal DragState As MSForms.fmDragState, ByVal Effect As MSForms.ReturnEffect, ByVal Shift As Integer)

End Sub

Private Sub Label546_Click()

End Sub

Private Sub Label562_Click()

End Sub

Private Sub lblAC2AssetAmt_Click()

End Sub

' Private Sub optCCGuaranteesOnly_Click()
'If Me.optCCGuaranteesOnly.Value = True And FirstPass = False Then
'    Me.cbxCCB.enabled = False
'    Me.cbxCCC.enabled = False
'    Me.cbxCCD.enabled = False
'    Me.cbxCCE.enabled = False
''    GuaranteesOnly (PriorVal)
'Else
'    Me.cbxCCB.enabled = True
'    Me.cbxCCC.enabled = True
'    Me.cbxCCD.enabled = True
'    Me.cbxCCE.enabled = True
''    GuaranteesOnly (PriorVal)
'End If
'FirstPass = False

' End Sub

Private Sub chkCCLienAmt2_Click()
    Me.txtCCLienAmount2.enabled = Me.chkCCLienAmt2.Value
    If Me.chkCCLienAmt2.Value = True Then
        Me.txtCCLienAmount2.BackColor = vbWhite
        Me.txtCCLienAmount2.visible = True
        Me.txtCCLienAmount2.SetFocus
    Else
        Me.txtCCLienAmount2.enabled = False
        Me.txtCCLienAmount2.BackColor = myGray
    End If
End Sub

Private Sub chkCCLienAmt3_Click()
    Me.txtCCLienAmount3.enabled = Me.chkCCLienAmt3.Value
    If Me.chkCCLienAmt3.Value = True Then
        Me.txtCCLienAmount3.BackColor = vbWhite
        Me.txtCCLienAmount3.SetFocus
    Else
        Me.txtCCLienAmount3.enabled = False
        Me.txtCCLienAmount3.BackColor = myGray
    End If
End Sub

Private Sub chkCCLienAmt4_Click()
    Me.txtCCLienAmount4.enabled = Me.chkCCLienAmt4.Value
    If Me.chkCCLienAmt4.Value = True Then
        Me.txtCCLienAmount4.enabled = True
        Me.txtCCLienAmount4.BackColor = vbWhite
        Me.txtCCLienAmount4.SetFocus
    Else
        Me.txtCCLienAmount4.enabled = False
        Me.txtCCLienAmount4.BackColor = myGray
    End If
End Sub

Private Sub chkIMNonCitizen_Click()
  If Me.chkIMNonCitizen.Value = True Then
    Me.txtNonCitizen.enabled = True
    Me.txtNonCitizen.BackColor = vbWhite
    Me.lblIMOwnership.enabled = True
'    Me.optAC50Pct.enabled = True
'    Me.optAC20Pct.enabled = True
    Me.lblIMOwnership2.enabled = True
    Me.txtNonCitizen.SetFocus
  Else
    Me.txtNonCitizen.enabled = False
    Me.txtNonCitizen.Text = ""
    Me.txtNonCitizen.BackColor = myGray
'    Me.optAC50Pct.enabled = False
'    Me.optAC20Pct.enabled = False
    Me.lblIMOwnership.enabled = False
    Me.lblIMOwnership2.enabled = False
    Me.chkIMNonCitizen.SetFocus
  End If
    Me.cmdAC3DeleteNC.enabled = Me.chkIMNonCitizen.Value
    Me.cmdAC3NewNC.enabled = Me.chkIMNonCitizen.Value
    Me.cmdAC3RightNC.enabled = Me.chkIMNonCitizen.Value
    Me.cmdAC3LeftNC.enabled = Me.chkIMNonCitizen.Value
    Me.cmdAC3InfoNC.enabled = Me.chkIMNonCitizen.Value
    LastIdx = Val(Trim(ActiveDocument.Bookmarks("RPLast011").Range.Text))
    CurIdx = Val(Trim(ActiveDocument.Bookmarks("RPCur011").Range.Text))
'    Me.chkIMNonCitizen.Value = Val(Trim(ActiveDocument.Bookmarks("chkIMNonCitizen").Range.Text))
    If Me.chkIMNonCitizen.Value = True Then
        If LastIdx > 0 Then
            Me.txtNonCitizen.Text = IIf(Left(ActiveDocument.Bookmarks("NonCitizen_" & CurIdx).Range.Text, 1) <> "[", ActiveDocument.Bookmarks("NonCitizen_" & CurIdx).Range.Text, "")
'            If Trim(ActiveDocument.Bookmarks("OptAC50Pct_" & CurIdx).Range.Text) = "0" Then
'                Me.optAC50Pct.Value = False
'            Else
'                Me.optAC50Pct.Value = True
'            End If
            UpdateChangeRP 9, 1, "AC3", "RPFirst011", "RPLast011"
        End If
    Else
        If LastIdx >= 1 Then
            If MsgBox("Unchecking this option will cause all Non-Citizen Ownership     " & vbCrLf & _
                      "items to be deleted." & vbCrLf & vbCrLf & _
                      "If you wish to edit an individual item, use the '<' and '>' arrows to     " & vbCrLf & _
                      "locate the item and then make the desired changes." & vbCrLf & vbCrLf & _
                      "Otherwise, click Yes to delete all Non-Citizen Ownership items.", _
                      vbExclamation + vbYesNo, _
                      "Wizard message ...") = vbYes Then
                ActiveDocument.Bookmarks("RPSection011").Range.Select
    'Insert AutoText
                ActiveDocument.AttachedTemplate.AutoTextEntries("NonCitizen").Insert Where:=Selection.Range, RichText:=True
            Else
                Me.chkIMNonCitizen.Value = True
            End If
        End If
    End If
End Sub

Private Sub chkLDAutoCalc_Change()
    chkLDAutoCalc_Click
End Sub

Private Sub chkLIDFP_AfterUpdate()
    If Me.chkLIDFP.Value = False And ActiveDocument.Bookmarks("cbLIDFP").Range.Text = 1 Then
    If MsgBox("Unchecking this option could result in corruption" & vbCrLf & vbCrLf & _
        "of this document if you have completed any portion of" & vbCrLf & vbCrLf & _
        "the Loan Information, Repayment Terms, Use of Proceeds, or      " & vbCrLf & vbCrLf & _
        "Collateral Conditions sections." & vbCrLf & vbCrLf & _
        "Click 'Cancel' to recheck DFP.", _
        vbCritical + vbOKCancel, _
        "Dealer Floor Plan Pilot Initiative") = vbOK Then
            UpdateText "Unchecked", "..."
        Else
            Me.chkLIDFP.Value = True
        End If
   End If
End Sub

Private Sub chkLIDFP_Click()
    If Me.chkLIDFP.Value = True Then
        Me.chkLI502.enabled = False
        Me.chkLI502.Value = False
       ' Me.optCCGuaranteesOnly.Value = False
       ' Me.optCCGuaranteesOnly.enabled = False
    Else
        Me.chkLI502.enabled = True
    End If
End Sub

'Private Sub chkLIOpts_AfterUpdate()
'    If Me.chkLIOpts.Value = True Then
'        Me.chkLIDFP.enabled = True
'        Me.chkLISLA.enabled = True
'        If Me.chkLIDFP.Value = False And Me.chkLISLA.Value = False Then
'            Me.chkLIDFP.Value = True
'        End If
'        Me.chkLIDFP.SetFocus
'    Else
'        Me.chkLIDFP.Value = False
'        Me.chkLISLA.Value = False
'        Me.chkLIDFP.enabled = False
'        Me.chkLISLA.enabled = False
'        Me.optCCGuaranteesOnly.Value = False
'        Me.optCCGuaranteesOnly.enabled = False
'    End If
'End Sub

Private Sub chkOSFSTAR_Click()
    If Me.txtLDGuaranteeFee.Text = "" Then
        UpdateGuaranteeFee
    End If
End Sub

Private Sub chkRTCurtailment_Click()
'    Me.cbxRTPeriod.enabled = Me.chkRTCurtailment.Value
'    Me.txtRTCurtailment.enabled = Me.chkRTCurtailment.Value
    Me.lblRTDays.enabled = Me.chkRTCurtailment.Value
    Me.lblRTPeriod.enabled = Me.chkRTCurtailment.Value
'    Me.cbxDFPMonths.enabled = Me.chkRTCurtailment.Value
    If Me.chkRTCurtailment.Value = True Then
        Me.txtRTCurtailment.BackColor = vbWhite
'        Me.cbxRTPeriod.BackColor = vbWhite
        Me.cbxDFPMonths.BackColor = vbWhite
'        Me.txtRTCurtailment.SetFocus
    Else
        Me.txtRTCurtailment.Text = ""
        Me.txtRTCurtailment.BackColor = myGray
'        Me.cbxRTPeriod.BackColor = myGray
        Me.cbxDFPMonths.BackColor = myGray
        Me.cbxRTPeriod.Text = ""
'        Me.chkRTCurtailment.SetFocus
    End If
End Sub

Private Sub cmdAC1Info_Click()
    MsgBox "To add additional Life Insurance information, click 'NEW'." & vbCrLf & _
           "Existing Life Insurance information will be cleared." & vbCrLf & vbCrLf & _
           "If information exists in the current Life Insurance areas, you are in EDIT mode.     " & vbCrLf & _
           "If edits are made, click 'New', 'Next', '>' or '<' to save changes." & vbCrLf & vbCrLf & _
           "After adding a new Life Insurance item, click 'SAVE'." & vbCrLf & vbCrLf & _
           "View existing information by clicking '<' or '>' when available." & vbCrLf & vbCrLf & _
           "Click 'Help' for additional information.", _
           vbExclamation + vbOKOnly + vbMsgBoxHelpButton, _
           "Life Insurance", HelpPath & "AuthWizVBA.chm", 20044

End Sub

Private Sub cmdAC2InfoAppr_Click()
    MsgBox "To add additional Appraisal information, click 'NEW'." & vbCrLf & _
           "Existing Appraisal information will be cleared." & vbCrLf & vbCrLf & _
           "If information exists in the current Appraisal areas, you are in EDIT mode.     " & vbCrLf & _
           "If edits are made, click 'New', 'Next', '>' or '<' to save changes." & vbCrLf & vbCrLf & _
           "After adding a new Appraisal item, click 'SAVE'." & vbCrLf & vbCrLf & _
           "View existing Appraisal items by clicking '<' or '>' when available." & vbCrLf & vbCrLf & _
           "Click 'Help' for additional information.", _
           vbExclamation + vbOKOnly + vbMsgBoxHelpButton, _
           "Appraisal", HelpPath & "AuthWizVBA.chm", 20044
End Sub

Private Sub cmdAC2InfoSA_Click()
    MsgBox "To add additional Standby Agreement information, click 'NEW'." & vbCrLf & _
           "Existing Standby Agreement information will be cleared." & vbCrLf & vbCrLf & _
           "If information exists in the current Standby Agreement areas, you are in EDIT mode.     " & vbCrLf & _
           "If edits are made, click 'New', 'Next', '>' or '<' to save changes." & vbCrLf & vbCrLf & _
           "After adding a new Standby Agreement item, click 'SAVE'." & vbCrLf & vbCrLf & _
           "View existing Standby Agreement items by clicking '<' or '>' when available." & vbCrLf & vbCrLf & _
           "Click 'Help' for additional information.", _
           vbExclamation + vbOKOnly + vbMsgBoxHelpButton, _
           "Standby Agreement", HelpPath & "AuthWizVBA.chm", 20044
End Sub

Private Sub cmdAC3DeleteNC_Click()
    If Val(ActiveDocument.Bookmarks("RPLast011").Range.Text) = 1 Then
        Me.cmdAC3DeleteNC.enabled = False
    Else
        DeleteRP "011", "AC3", "Non-Citizen Ownerships"
        If Val(ActiveDocument.Bookmarks("RPLast011").Range.Text) = 1 Then
            Me.cmdAC3DeleteNC.enabled = False
        End If
    End If
    If Me.cmdAC3NewNC.Caption = "Save" Then
        Me.cmdAC3NewNC.Caption = "New"
    End If
    Me.txtNonCitizen.SetFocus
End Sub

Private Sub cmdAC3InfoNC_Click()
    MsgBox "To add additional Non-Citizen Ownerships, click 'NEW'." & vbCrLf & _
           "Existing ownership information will be cleared." & vbCrLf & vbCrLf & _
           "If information exists in the current Non-Citizen text areas, you are in EDIT mode.     " & vbCrLf & _
           "If edits are made, click 'New', 'Next', '>' or '<' to save changes." & vbCrLf & vbCrLf & _
           "After adding new ownership information, click 'SAVE'." & vbCrLf & vbCrLf & _
           "View existing ownership items by clicking '<' or '>' when available.", _
           vbExclamation + vbOKOnly, _
           "Non-Citizen Ownership"
    On Error Resume Next
    Me.txtNonCitizen.SetFocus
End Sub

Private Sub cmdAC3LeftNC_Click()
    ChangeRP "011", -1, 1, "AC3"
End Sub

Private Sub cmdAC3NewNC_Click()
    If Me.txtNonCitizen.Text = "" Then
        MyErrorMsg Me.mpgWizard.Value, "Blank", "Yes", "txtNonCitizen"
    '    CommandSetup 3
        Exit Sub
    End If
'    If Val(Me.optAC50Pct.Value + Me.optAC20Pct.Value) = 0 Then
'        MsgBox "A non-citizen percentage must be selected.      ", _
'    vbCritical + vbOKOnly, _
'    "Non-Citizen Ownership"
'        Me.optAC50Pct.SetFocus
'        Exit Sub
'    End If
    NewRP "011", 1, "AC3"
End Sub

Private Sub cmdAC3RightNC_Click()
    ChangeRP "011", 1, 1, "AC3"
    Me.txtNonCitizen.SetFocus
End Sub

Private Sub cmdBIInfo_Click()
    MsgBox "SBA permits only one EPC borrower, but allows multiple operating" & vbCrLf & _
           "companies as Co-Borrowers or Guarantors." & vbCrLf & vbCrLf & _
           "If the real estate is held by separate individuals, click 'New' for each     " & vbCrLf & _
           "additional individual.  They will be considered as one EPC.", _
           vbInformation + vbOKOnly, _
           "Eligible Passive Company"
    On Error Resume Next
    Me.txtBIName.SetFocus
End Sub

Private Sub cmdBOCInfo_Click()
    MsgBox "To add additional Non-Compete Contract information, click 'NEW'." & vbCrLf & _
           "Existing Principal and Competitor names will be cleared." & vbCrLf & vbCrLf & _
           "If names exist in the current Principal or Competitor areas, you are in EDIT mode.     " & vbCrLf & _
           "If edits are made, click 'New', 'Next', '>' or '<' to save changes." & vbCrLf & vbCrLf & _
           "After adding a new Principal and Competitor name, click 'SAVE'." & vbCrLf & vbCrLf & _
           "View existing names by clicking '<' or '>' when available." & vbCrLf & vbCrLf & _
           "Click 'Help' for additional information.", _
           vbExclamation + vbOKOnly + vbMsgBoxHelpButton, _
           "Non-Compete Contracts", HelpPath & "AuthWizVBA.chm", 20044
End Sub

Private Sub cmdBOCInfoAF_Click()
    MsgBox "To add a New source of additional funding, click 'NEW'." & vbCrLf & _
           "Existing funding source text will be cleared.  Select funding     " & vbCrLf & _
           "source and complete remaining information." & vbCrLf & vbCrLf & _
           "If text exists in the current funding source, you are in EDIT mode.     " & vbCrLf & _
           "If edits are made, click 'New', 'Next', '>' or '<' to save changes." & vbCrLf & vbCrLf & _
           "After adding a new funding source, click 'SAVE'." & vbCrLf & vbCrLf & _
           "View existing funding sources by clicking '<' or '>' when available." & vbCrLf & vbCrLf & _
           "Click 'Help' for additional information.", _
           vbExclamation + vbOKOnly + vbMsgBoxHelpButton, _
           "Additional Funding", HelpPath & "AuthWizVBA.chm", 20044
End Sub

Private Sub cmdCCCreate_Click()
    Set copyAndPasteMenu = CommandBars.Add( _
                           Name:="Custom", Position:=msoBarPopup, _
                           temporary:=True)
    Set xCopy = copyAndPasteMenu.Controls.Add
    With xCopy
        .FaceId = CommandBars("Standard").Controls("Copy").ID
        .Caption = "Copy the selection"
    End With
    Set xPaste = copyAndPasteMenu.Controls.Add
    With xPaste
        .FaceId = CommandBars("Standard").Controls("Paste").ID
        .Caption = "Paste from the Clipboard"
    End With
    copyAndPasteMenu.ShowPopup    '400, 200
End Sub

Private Sub cmdCCInfo_Click()
    MsgBox "To insert a collateral condition into your document,    " & vbCrLf & _
           "select from categories A through E." & vbCrLf & vbCrLf & _
           "After completing one collateral condition, either select    " & vbCrLf & _
           "an additional collateral condition from categories A through E,       " & vbCrLf & _
           "or click 'Finish' to exit to the document or 'Navigator' to exit" & vbCrLf & vbCrLf & _
           "the Collateral Conditions section." & vbCrLf & vbCrLf & _
           "If a Guarantee has been selected (category A) and a security" & vbCrLf & _
           "is required, select the security (categories B-E) and then " & vbCrLf & _
           "click 'Finish.'" & vbCrLf & vbCrLf & _
           "Select additional securities as necessary.  Click 'Finish' to" & vbCrLf & _
           "complete the current Secured Guarantee and return to the" & vbCrLf & _
           "Collateral Conditions Main Menu to select additional conditions." & vbCrLf & vbCrLf & _
           "Select 'Cancel' to clear the existing condition and return" & vbCrLf & _
           "to the Collateral Conditions Main Menu." & vbCrLf & vbCrLf & _
           "Click 'Help' for additional information.", _
           vbInformation + vbMsgBoxHelpButton + vbOKOnly, _
           "Collateral Conditions", HelpPath & "AuthWizVBA.CHM", 20068
    On Error Resume Next
    Me.txtCCSelectMsg.SetFocus
'     Me.optCCGuaranteesOnly.SetFocus
End Sub

Private Sub cmdDIInfo_Click()
If Me.chkLIDFP.Value = False Then
    MsgBox "The final disbursement period cannot exceed 48 months from " & vbCr & _
    "the approval date of this Authorization.  Any undisbursed balance " & vbCr & _
    "remaining after 48 months will be automatically cancelled by SBA.", _
           vbInformation + vbOKOnly, _
           "Final Disbursement"
           Me.txtDIFirstDisbursement.SetFocus
Else
    MsgBox "The default first disbursement is 6 months." & vbCrLf & vbCrLf & _
           "    ", _
           vbInformation + vbOKOnly, _
           "Disbursement"
End If
End Sub

Private Sub cmdGuarantyFeeClose_Click()
    If PrevPage <> 26 Then
        Me.mpgWizard.Value = PrevPage
    End If
'    If pgOption <> 0 Then
'        ErrCheck = 1
'        Me.mpgCCOptions.Value = pgOption
'    End If
    PageSetup PrevPage, 1
'    If OptLienHolder > 1 And StateFinish = False Then
'        CommandSetup "EnableNext"
'    End If
    If Me(PrevCtrl).visible = True And Me(PrevCtrl).enabled = True Then
        On Error Resume Next
        Me(PrevCtrl).SetFocus
    End If
    Me.cmdWizardShortCut.visible = WizardState
End Sub

Private Sub cmdGuarantyLink_Click()
On Error GoTo NoConnection
ActiveDocument.FollowHyperlink _
    Address:="http://www.sba.gov/services/financialassistance/basics/sbarole/SERV_7A_FEES.html", _
    NewWindow:=True, AddHistory:=True
Exit Sub
NoConnection:
MsgBox "Either there is no internet connection on this machine or      " & vbCrLf & _
    "some other error has occurred." & vbCrLf & vbCrLf & _
    "Note the URL below for later use:" & vbCrLf & vbCrLf & _
    "http://www.sba.gov/financing/subfiles/guaranty_percents.html     ", _
    vbExclamation + vbOKOnly, _
    "SBA Internet Information"
End Sub

Private Sub cmdLIDefault_Click()
    curCtrl = "txtLDOngoingServicingFee"
    If Me(curCtrl).Text <> "" Then
        If IsNumeric(Me(curCtrl).Text) Then
            InputFormat Me(curCtrl).Name, "TextIsNumber", 3
        End If
    End If

    frmDefault.Tag = "cmdLIDefault/fraSBASignor"
    curpage = Me.mpgWizard.Value

    X = 1  '1
    frmDefault.chkDefault1.Caption = "Ongoing Servicing Fee"
    frmDefault.chkDefault1.enabled = True
    frmDefault.chkDefault1.Value = True
'    X = X + 1
'    frmDefault("chkDefault" & X).Caption = "Disbursement Information"
'    If Me.txtDIFirstDisbursement.Text <> "" And Me.txtDILastDisbursement.Text <> "" Then
'        frmDefault.chkDefault2.Enabled = True
'        frmDefault.chkDefault2.Value = True
'    End If
    X = X + 1  '2
    frmDefault("chkDefault" & X).Caption = "Loan Number Prefix"
    If Len(Me.txtLSPrefix.Text) > 1 Then
        frmDefault.chkDefault2.enabled = True
        frmDefault.chkDefault2.Value = True
    End If
    X = X + 1  '3
    frmDefault("chkDefault" & X).Caption = "Loan Number Suffix"
    If Len(Me.txtLSSuffix.Text) > 1 Then
        frmDefault.chkDefault3.enabled = True
        frmDefault.chkDefault3.Value = True
    End If
    X = X + 1  '4
    frmDefault("chkDefault" & X).Caption = "Signature Block PLP"
    If Me.optLSPLP.Value = True Then
        frmDefault.chkDefault4.enabled = True
        frmDefault.chkDefault4.Value = True
    End If
    X = X + 1  '5
    frmDefault("chkDefault" & X).Caption = "SBA Administrator"
    If (Me.cbxSBASignor.ListIndex = -1) And Me.cbxSBASignor.Locked = False Then
    Else
        frmDefault.chkDefault5.enabled = True
        frmDefault.chkDefault5.Value = True
    End If
    X = X + 1  '6
    If Len(Me.txtSBASignor.Text) = 0 And Me.txtSBASignor.Locked = False Then
    Else
        frmDefault.chkDefault6.enabled = True
        frmDefault.chkDefault6.Value = True
    End If

    frmDefault.Caption = frmDefault.Caption & "the Loan Information Section"
    Load frmDefault
    #If VBA6 Then
        frmDefault.Show 1
    #Else
        frmDefault.Show
    #End If
End Sub

Private Sub cmdLIWizTips_Click()
    MsgBox "For best results:" & vbCrLf & vbCrLf & _
           Chr(149) & "  TAB from control to control; SHIFT-TAB to move backward     " & vbCrLf & vbCrLf & _
           Chr(149) & "  SPACE BAR to toggle checkboxes and option boxes on and off     " & vbCrLf & vbCrLf & _
           Chr(149) & "  Use ALT-? shortcuts (? = letter)" & vbCrLf & vbCrLf & _
           Chr(149) & "  Use ALT-Dn to show lists" & vbCrLf & vbCrLf & _
           Chr(149) & "  DO NOT use double quotes (" & Chr(34) & ") in textboxes, use single quotes (')     " & vbCrLf & vbCrLf & _
           Chr(149) & "  Watch for hints in yellow tooltips when moving mouse" & vbCrLf & vbCrLf & _
           Chr(149) & "  Use Right-Click to Save or Retrieve names and addresses", _
           vbInformation + vbOKOnly, _
           "Wizard Tips"

End Sub

Private Sub cmdLoanCalc_Click()
    Load frmLoanCalc
    frmLoanCalc.Show
End Sub

Private Sub cmdLSInfo_Click()
    MsgBox "The Loan Number must consist of 12 digits for later use." & vbCrLf & vbCrLf & _
           "The prefix (8 characters upper case) and the suffix" & vbCrLf & _
           "(4 characters upper case) to the Loan Number are optional.     " & vbCrLf & vbCrLf & _
           "Use '--' as a placeholder in the Loan Number, Receipt Date,     " & vbCrLf & _
           "and Approval Date textboxes." & vbCrLf & vbCrLf & _
           "Checking 'non-PLP' under Signature Block/Loan Type will cause the     " & vbCrLf & _
           "SBA Employee List to become available under 'SBA Administrator.'     " & vbCrLf & vbCrLf & _
           "Click 'Help' for more information.", _
           vbInformation + vbOKOnly + vbMsgBoxHelpButton, _
           "Loan Specifics Help", HelpPath & "AuthWizVBA.chm", 20036
End Sub

Private Sub cmdNavCancel_Click()
'    If WizardState <> False Then
        Me.cmdWizardShortCut.visible = True
'    End If
    Me.cmdWizardLoanInfo.visible = False
    Me.cmdWizardRepayment.visible = False
    Me.cmdWizardUseProceeds.visible = False
    Me.cmdWizardCollateral.visible = False
    Me.cmdWizardAC1.visible = False
    Me.cmdWizardAC2.visible = False
    Me.cmdWizardSave.visible = False
    Me.cmdNavCancel.visible = False
    vShowIt = False
End Sub

Private Sub cmdNext_Enter()
    Dim ctrltext As String
    Dim cLen As String
    If Me.mpgWizard.Value = 26 Then
        Me.mpgWizard.Value = curpage
        If curpage = 0 Then
            UpdateLI1 = 0
        End If
    End If
    If Me.mpgWizard.Value = Me.mpgWizard.Pages("pgLI1").index Then
        SelectSBAName
    End If
    If Me.mpgWizard.Value = Me.mpgWizard.Pages("pgLI1").index And Me.txtSBAZip.enabled = True Then
        curCtrl = "txtSBAZip"
        If InStr(1, Me(curCtrl).Text, "-") > 0 Then
            ctrltext = Mid(Me(curCtrl).Text, 1, InStr(1, Me(curCtrl).Text, "-") - 1) & Mid(Me(curCtrl).Text, InStr(1, Me(curCtrl).Text, "-") + 1)
        Else
            ctrltext = Me(curCtrl).Text
        End If
        If Len(ctrltext) <> 5 And Len(ctrltext) <> 9 Then
            cLen = Len(ctrltext) & " (without '-')"
            UpdateLI3 = 1
            MyErrorMsg 0, "Length", True, curCtrl, , cLen
    '        CommandSetup 3
        End If
        If Not IsNumeric(ctrltext) Then
            UpdateLI3 = 1
            MyErrorMsg 0, "Numeric", True, curCtrl, , cLen
    '        CommandSetup 3
        End If
        If IsNumeric(ctrltext) And Len(ctrltext) = 9 Then
            Me(curCtrl).Text = Format(ctrltext, "00000\-####")
        ElseIf IsNumeric(ctrltext) And Len(ctrltext) = 5 Then
            Me(curCtrl).Text = Format(ctrltext, "00000")
        End If
    End If
    If Me.mpgPTOptions.Value = 6 Then
        curCtrl = "txtPTAmount7b"
        If Me(curCtrl).Text <> "" Then
            If IsNumeric(Me(curCtrl).Text) Then
                InputFormat Me(curCtrl).Name, "TextIsNumber", 2
            Else
                UpdateRT3 = 1
                MyErrorMsg Me.mpgWizard.Value, "Numeric", True, curCtrl
    '        CommandSetup 3
            End If
        End If
    End If
    If Me.mpgWizard.Value = 3 Then
        curCtrl = "txtIRSplitPercent2"
        If Me(curCtrl).Text <> "" Then
            If IsNumeric(Me(curCtrl).Text) Then
                InputFormat Me(curCtrl).Name, "TextIsNumber", 2
            Else
                UpdateRT1 = 1
                MyErrorMsg Me.mpgWizard.Value, "Numeric", True, curCtrl
    '        CommandSetup 3
            End If
        End If
    End If
    If Me.mpgWizard.Value = Me.mpgWizard.Pages("pgCC4").index Then
        curCtrl = "txtCCLienAmount2"
        If Me(curCtrl).Text <> "" Then
            If IsNumeric(Me(curCtrl).Text) Then
                InputFormat Me(curCtrl).Name, "TextIsNumber", 2
            Else
                UpdateCC = 1
                MyErrorMsg Me.mpgWizard.Value, "Numeric", True, curCtrl
            End If
        End If
        curCtrl = "txtCCSharedAmt"
        If Me(curCtrl).Text <> "" Then
            If IsNumeric(Me(curCtrl).Text) Then
                InputFormat Me(curCtrl).Name, "TextIsNumber", 2
            Else
                UpdateCC = 1
                MyErrorMsg Me.mpgWizard.Value, "Numeric", True, curCtrl
            End If
        End If
    End If
End Sub

Private Sub cmdOngoingFeeClose_Click()
    If PrevPage <> 26 Then
        Me.mpgWizard.Value = PrevPage
    End If
'    If pgOption <> 0 Then
'        ErrCheck = 1
'        Me.mpgCCOptions.Value = pgOption
'    End If
    PageSetup PrevPage, 1
'    If OptLienHolder > 1 And StateFinish = False Then
'        CommandSetup "EnableNext"
'    End If
    If Me(PrevCtrl).visible = True And Me(PrevCtrl).enabled = True Then
        On Error Resume Next
        Me(PrevCtrl).SetFocus
    End If
    Me.cmdWizardShortCut.visible = WizardState
End Sub

Private Sub cmdOngoingLink_Click()
On Error GoTo No7aConnection
ActiveDocument.FollowHyperlink _
    Address:="http://www.sba.gov/services/financialassistance/basics/sbarole/SERV_7A_FEES.html", _
    NewWindow:=True, AddHistory:=True
Exit Sub
No7aConnection:
MsgBox "Either there is no internet connection on this machine or      " & vbCrLf & _
    "some other error has occurred." & vbCrLf & vbCrLf & _
    "Note the URL below for later use:" & vbCrLf & vbCrLf & _
    "http://www.sba.gov/financing/subfiles/sba_7a_fees.html     ", _
    vbExclamation + vbOKOnly, _
    "SBA Internet Information"

End Sub

Private Sub cmdOSFInfo_Click()
    MyErrorMsg Me.mpgWizard.Value, "Info", True, curCtrl
End Sub

Private Sub cmdResetReg_Click()
    SaveAsDefault "NoList", "False"
    SaveAsDefault "MessageShown", "False"
    MsgBox "The registry entry for the SBA Offices list has been cleared.     " & vbCrLf & vbCrLf & _
           "Please exit the document and restart the Wizard.  The" & vbCrLf & _
           "SBA list may still not appear, however.", _
           vbInformation + vbOKOnly, _
           "SBA Offices List"
End Sub

Private Sub cmdResetSBA_Click()
    EditSBA = False
    If Me.cbxSBAName.ListCount = 0 Then
        PopulateSBAOfficeList
    End If
    If Me.cbxSBAName.ListCount <> 0 And Me.cbxSBAName.ListIndex >= 0 Then
        Me.txtSBAAddress.Locked = True
        Me.txtSBAAddress.BackColor = myGray
        Me.txtSBAAddress2.Locked = True
        Me.txtSBAAddress2.BackColor = myGray
        Me.txtSBACity.Locked = True
        Me.txtSBACity.BackColor = myGray
        Me.cbxSBAState.Locked = True
        Me.cbxSBAState.BackColor = myGray
        Me.txtSBAZip.Locked = True
        Me.txtSBAZip.BackColor = myGray
    End If
    If Me.cbxSBAName.enabled = True Then
        Me.cmdResetSBA.visible = False
        Me.cbxSBAName.SetFocus
        Me.cbxSBAName.DropDown
    End If
End Sub

Private Sub cmdSavedCancel_Click()
    Me.mpgWizard.Value = tabPage
    Me.mpgCCOptions.Value = tabCCPage
    PageSetup tabPage, 0
    Me.prgPleaseWait.visible = False
    Me(PrevCtrl).SetFocus
    RetrieveInfo = False
End Sub

Private Sub cmdSBADefault_Click()
    frmDefault.Tag = "cmdSBADefault/fraSBAInfo"
    frmDefault.chkDefault1.Caption = "Lender Information"
    If Me.txtLIName.Text <> "" Then
        frmDefault.chkDefault1.enabled = True
        frmDefault.chkDefault1.Value = True
    End If
    frmDefault.chkDefault2.Caption = "SBA District Office Information"
    If Me.cbxSBAName.ListIndex <> 0 Or Me.cbxSBAName.ListIndex <> -1 Then
        frmDefault.chkDefault2.enabled = True
        frmDefault.chkDefault2.Value = True
    End If
    frmDefault.chkDefault3.Caption = "Lender Signator"
    If Me.txtLILenderSign.Text <> "" Then
        frmDefault.chkDefault3.enabled = True
        frmDefault.chkDefault3.Value = True
    End If
    frmDefault.chkDefault4.Caption = "Exit to Document"
        frmDefault.chkDefault4.enabled = True
        frmDefault.chkDefault4.Value = Application.ActiveDocument.Bookmarks("Exit2Doc").Range.Text
    frmDefault.Caption = frmDefault.Caption & "the Loan Information Section"
    Load frmDefault
    #If VBA6 Then
        frmDefault.Show 1
    #Else
        frmDefault.Show
    #End If
End Sub

Private Sub cmdSBAOverride_Click()
    If Me.cbxSBASignor.Text = "No Employee List Available" Then
        MsgBox "Please enter the exact name of the SBA Administrator     " & vbCrLf & _
               "from the local SBA Office responsible for signing this Authorization.     " & vbCrLf & vbCrLf & _
               "Once entered, click Default to preserve the name for future" & vbCrLf & _
               "Authorizations.", _
               vbInformation + vbOKOnly, _
               "SBA Administrator"
        Me.cbxSBASignor.visible = False
        Me.txtSBASignor.visible = True
        Me.txtSBASignor.SetFocus
    Else
        Me.cbxSBASignor.visible = True
        Me.txtSBASignor.visible = False
    End If
End Sub

Private Sub cmdShowC7OptionA_Click()
    If Me.cmdShowC7OptionA.Caption = "Show List" Then
        Me.cmdNewC7OptionA.enabled = False
        Me.txtC7PriorLiens.visible = True
        Me.txtC7PriorLiens.ZOrder 0
        Me.txtC7PriorLiens.SetFocus
        If InStr(1, MyLienList, Me.txtC7Lienholder.Text & " -- " & Me.txtC7Amount) = 0 Then
            If Me.txtC7PriorLiens.Text = "" Then
                MyLienList = Me.txtC7Lienholder.Text & " -- " & Me.txtC7Amount
            Else
                MyLienList = MyLienList & vbCr & Me.txtC7Lienholder.Text & " -- " & Me.txtC7Amount
            End If
        End If
        Me.txtC7PriorLiens.Text = MyLienList
        Me.cmdShowC7OptionA.Caption = "Hide List"
    Else
        Me.cmdShowC7OptionA.Caption = "Show List"
        Me.txtC7Lienholder.SetFocus
        Me.txtC7PriorLiens.visible = False
        Me.cmdNewC7OptionA.enabled = True
    End If
End Sub

Private Sub cmdShowC7OptionC_Click()
    If Me.cmdShowC7OptionC.Caption = "Show List" Then
        Me.cmdNewC7OptionC.enabled = False
        Me.txtC7LineCredit.visible = True
        Me.txtC7LineCredit.ZOrder 0
        Me.txtC7LineCredit.SetFocus
        If InStr(1, MyLenderList, (Me.txtC7Lender.Text & " -- " & Me.txtC7MaxAmount)) = 0 Then
            If Me.txtC7Lender.Text = "" Then
                MyLenderList = Me.txtC7Lender.Text & " -- " & Me.txtC7MaxAmount
            Else
                MyLenderList = MyLenderList & vbCr & Me.txtC7Lender.Text & " -- " & Me.txtC7MaxAmount
            End If
        End If
        Me.txtC7LineCredit.Text = MyLenderList
        Me.cmdShowC7OptionC.Caption = "Hide List"
    Else
        Me.cmdShowC7OptionC.Caption = "Show List"
        Me.txtC7Lender.SetFocus
        Me.cmdNewC7OptionC.enabled = True
        Me.txtC7LineCredit.visible = False
    End If
End Sub

Private Sub cmdUPEdit_Click()
    UPEdit = True
    cIndex = Me.cbxUPCategory.ListIndex
    Me.cmdUPNew.enabled = True
    Me.cmdUPNew.Caption = "Save"
    Me.cmdUPNew.Accelerator = "S"
    Me.cmdUPEdit.enabled = False
    '---------------
    Me.cbxUPCategory.enabled = True
    Me.cbxUPCategory.BackColor = vbWhite
    Me.cbxUPCategory.Locked = False
    '---------------
    Me.txtUPAmount.enabled = True
    Me.txtUPAmount.Locked = False
    Me.txtUPAmount.BackColor = vbWhite
    Me.txtUPField1.enabled = True
    Me.txtUPField1.Locked = False
    Me.txtUPField1.BackColor = vbWhite
    Me.txtUPField2.enabled = True
    Me.txtUPField2.Locked = False
    Me.txtUPField2.BackColor = vbWhite
    'UP 16 and 17
    Me.txtUPAmount2.enabled = True
    Me.txtUPAmount2.Locked = False
    Me.txtUPAmount2.BackColor = vbWhite
    Me.txtUPField3.enabled = True
    Me.txtUPField3.Locked = False
    Me.txtUPField3.BackColor = vbWhite
    '==================
    Me.txtUPText.Locked = False
    If cIndex = 0 Then
        Me.txtUPText.visible = True
        Me.txtUPText.enabled = True
        Me.txtUPText.Locked = False
        Me.txtUPText.BackColor = vbWhite
    Else
        Me.txtUPText.visible = False
    '    Me.txtUPText.Enabled = False
    '    Me.txtUPText.Locked = True
    End If
    Me.cmdUPDelete.enabled = False
    Me.cmdUPLeft.enabled = False
    Me.cmdUPRight.enabled = False
End Sub

Private Sub cmdUPInfo_Click()
    MsgBox "The total use of proceeds amount entered MUST     " & vbCrLf & _
           "be equal to the loan amount." & vbCrLf & vbCrLf & _
           "Note the Remaining Loan Amount shown below." & vbCrLf & vbCrLf & _
           "Construction options will appear when the use of" & vbCrLf & _
           "proceeds amount exceeds $125,000 AND the" & vbCrLf & _
           "construction financing has SBA guarantee." & vbCrLf & vbCrLf & _
           "When appropriate, enter the maximum contract price below.", _
           vbInformation + vbMsgBoxHelpButton + vbOKOnly, _
           "Use of Proceeds", HelpPath + "AuthWizVBA.chm", 20086
End Sub

Private Sub cmdUPNew_Enter()
    If Me.cmdUPNew.Caption = "Save" Then
        Me.cmdUPShowList.enabled = False
        Me.cmdFinish.enabled = False
    End If
End Sub

Private Sub cmdUPShowList_Click()
    Dim ShowTotalUP As Long
    Dim tmpTotal As Long
    Dim ArrayItem(30, 5)
    Dim Item2 As String
    If Me.cmdUPShowList.Caption = "Show List" Then
        Me.cmdPanelHelp.enabled = False
        Me.lstUPList1.Top = 8.45
        Me.lstUPList1.Height = 116
        Me.lstUPList1.Clear
        Me.lstUPList1.visible = True
        ArrayItem(0, 0) = "**********************Use of Proceeds Selections************"
        ArrayItem(0, 1) = "*****************"
        ArrayItem(1, 0) = ""
        X = 2
        For i = FirstIdx To LastIdx
            ArrayItem(X, 1) = "*****************"
            BookName = "UPAmount_" + LTrim(Str(i))
            If ActiveDocument.Bookmarks.Exists(BookName) Then
                If ActiveDocument.Bookmarks.Exists("obUPID_" & i) Then
                    xCategory = Trim(ActiveDocument.Bookmarks("obUPID_" & i).Range.Text)
                    If InStr(1, xCategory, "[") Then
                    Else
                        If Me.cbxUPCategory.Column(0, xCategory) = "" Then
                            X = X - 1
                            GoTo GetNext
                        Else
                            If InStr(1, Me.cbxUPCategory.Column(0, xCategory), "(") Then
                                ArrayItem(X, 0) = Mid(Me.cbxUPCategory.Column(0, xCategory), 1, InStr(1, Me.cbxUPCategory.Column(0, xCategory), "(") - 2)
                            Else
                                ArrayItem(X, 0) = Me.cbxUPCategory.Column(0, xCategory)
                            End If
                            RSet ArrayItem(X, 1) = ActiveDocument.Bookmarks(BookName).Range.Text
                            tmpTotal = ActiveDocument.Bookmarks(BookName).Range.Text
                            ShowTotalUP = ShowTotalUP + tmpTotal
                        End If
                    End If
                    X = X + 1
                End If
            End If
GetNext:
        Next i
        ArrayItem(X, 0) = "-------------------------------------------------------------------------------------------"
        ArrayItem(X + 1, 0) = "Total Use of Proceeds Processed:  $" & Format(ShowTotalUP, "##,##0.00")
        Me.lstUPList1.List() = ArrayItem
        Me.cmdUPShowList.Caption = "Hide List"
        Me.cmdUPShowList.Accelerator = "H"
        Me.cmdCancel.enabled = False
        Me.cmdUPNew.enabled = False
        Me.cmdUPDelete.enabled = False
        Me.cmdUPInfo.enabled = False
        Me.cmdUPLeft.enabled = False
        Me.cmdUPRight.enabled = False
        Me.cmdUPEdit.enabled = False
    Else
        Me.cmdPanelHelp.enabled = True
        Me.lstUPList1.Clear
        Me.lstUPList1.visible = False
        Me.cmdUPShowList.Caption = "Show List"
        Me.cmdUPShowList.Accelerator = "S"
        Me.cbxUPCategory.SetFocus
        If Me.txtUPRemainingAmount.Value = "0.00" Then
            Me.cmdUPNew.enabled = False
        Else
            Me.cmdUPNew.enabled = True
        End If
        Me.cmdUPDelete.enabled = True
        Me.cmdUPInfo.enabled = True
        Me.cmdCancel.enabled = True
        If Me.cbxUPCategory.Locked = True Then
            Me.cmdUPEdit.enabled = True
        Else
            Me.cmdUPEdit.enabled = False
        End If
        UpdateChangeRP 7, 10, "UP", "RPFirst010", "RPLast010"
    End If
End Sub

Private Sub Frame39_Click()
    MsgBox "Hi, Dan"
End Sub

Private Sub fraOCInfo_Enter()
    Dim ctrltext As String
    Dim cLen As String
    curCtrl = "txtBIZip"
    If InStr(1, Me(curCtrl).Text, "-") > 0 Then
        ctrltext = Mid(Me(curCtrl).Text, 1, InStr(1, Me(curCtrl).Text, "-") - 1) & Mid(Me(curCtrl).Text, InStr(1, Me(curCtrl).Text, "-") + 1)
    Else
        ctrltext = Me(curCtrl).Text
    End If
    If Len(ctrltext) <> 5 And Len(ctrltext) <> 9 Then
        If InStr(1, Me(curCtrl).Text, "-") > 0 Then
            cLen = Len(ctrltext) - 1 & " (without '-')"
        Else
            cLen = Len(ctrltext)
        End If
        UpdateLI3 = 1
        MyErrorMsg Me.mpgWizard.Value, "Length", True, curCtrl, , cLen
    '        CommandSetup 3
        Exit Sub
    End If
    If Not IsNumeric(ctrltext) Then
        UpdateLI3 = 1
        MyErrorMsg Me.mpgWizard.Value, "Numeric", True, curCtrl, , cLen
    '        CommandSetup 3
    End If
    If IsNumeric(ctrltext) And Len(ctrltext) = 9 Then
        Me(curCtrl).Text = Format(Str(ctrltext), "00000\-####")
    ElseIf IsNumeric(ctrltext) And Len(ctrltext) = 5 Then
        Me(curCtrl).Text = Format(Str(ctrltext), "00000")
    End If
End Sub

Private Sub fraUPInfo1_Click()
    If Me.cmdWizardShortCut.visible = True Then
        Me.cmdWizardShortCut.visible = False
    End If
End Sub

Private Sub fraUPInfo2_Click()
    If Me.cmdWizardShortCut.visible = True Then
        Me.cmdWizardShortCut.visible = False
    End If
End Sub

Private Sub lbAddressList_DblClick(ByVal Cancel As MSForms.ReturnBoolean)
    Dim strAddress As String
    strAddress = lbAddressList.Text
    UPEdited = True

    'Return to page and textbox
    Me.mpgWizard.Value = tabPage
    PageSetup tabPage, 0
    Me.prgPleaseWait.visible = False
    txtBox = PrevCtrl
    Me(txtBox).SetFocus
    If Len(Me(txtBox)) > 0 Then
        Me(txtBox).Text = Me(txtBox).Text & "; " & strAddress
    Else
        Me(txtBox).Text = strAddress
    End If
    CommandSetup ButtonState
    Me(txtBox).SetFocus
    RetrieveInfo = False
End Sub

Private Sub lblBOCTerm_Click()

End Sub

Private Sub lblIRFixedVariableOverPrime_Change()
    curCtrl = "lblIRFixedVariableOverPrime"
    If Me(curCtrl).Text = "% Over Prime" Then
        Me.txtIRRTPublisher.enabled = True
        Me.txtIRRTPublisher.BackColor = vbWhite
        Me.optIRRTPubNewspaper.enabled = True
        Me.optIRRTPubWebsite.enabled = True
        Me.lblVLOOverLibor.visible = False
        Me.lblVLOPegRate.visible = False
        Me.lblVLOOverPrime.visible = True
    ElseIf Me(curCtrl).Text = "% Over Peg" Then
        Me.txtIRRTPublisher.Text = ""
        Me.txtIRRTPublisher.enabled = False
        Me.txtIRRTPublisher.BackColor = myGray
        Me.optIRRTPubNewspaper.enabled = False
        Me.optIRRTPubWebsite.enabled = False
        Me.lblIRSplit9.enabled = False
        Me.lblVLOOverLibor.visible = False
        Me.lblVLOPegRate.visible = True
        Me.lblVLOOverPrime.visible = False
    ElseIf Me(curCtrl).Text = "% Over LIBOR" Then
        Me.txtIRRTPublisher.Text = ""
        Me.txtIRRTPublisher.enabled = False
        Me.txtIRRTPublisher.BackColor = myGray
        Me.optIRRTPubNewspaper.enabled = False
        Me.optIRRTPubWebsite.enabled = False
        Me.lblIRSplit9.enabled = False
        Me.lblVLOOverLibor.visible = True
        Me.lblVLOPegRate.visible = False
        Me.lblVLOOverPrime.visible = False
    End If
End Sub

Private Sub lblIRFixedVariableOverPrime_DblClick(ByVal Cancel As MSForms.ReturnBoolean)
'Actually a textbox, but using as label to minimize recoding
    ChangePrimePegRate ("lblIRFixedVariableOverPrime")
End Sub

Private Sub lblIRLenderOverPrime_Change()
    curCtrl = "lblIRLenderOverPrime"
    If Me(curCtrl).Text = "% Over Prime" Then
        Me.txtIRRTPublisher.enabled = True
        Me.txtIRRTPublisher.BackColor = vbWhite
        Me.optIRRTPubNewspaper.enabled = True
        Me.optIRRTPubWebsite.enabled = True
        Me.lblVLOOverLibor.visible = False
        Me.lblVLOPegRate.visible = False
        Me.lblVLOOverPrime.visible = True
    ElseIf Me(curCtrl).Text = "% Over Peg" Then
        Me.txtIRRTPublisher.Text = ""
        Me.txtIRRTPublisher.enabled = False
        Me.txtIRRTPublisher.BackColor = myGray
        Me.optIRRTPubNewspaper.enabled = False
        Me.optIRRTPubWebsite.enabled = False
        Me.lblIRSplit9.enabled = False
        Me.lblVLOOverLibor.visible = False
        Me.lblVLOPegRate.visible = True
        Me.lblVLOOverPrime.visible = False
    ElseIf Me(curCtrl).Text = "% Over LIBOR" Then
        Me.txtIRRTPublisher.Text = ""
        Me.txtIRRTPublisher.enabled = False
        Me.txtIRRTPublisher.BackColor = myGray
        Me.optIRRTPubNewspaper.enabled = False
        Me.optIRRTPubWebsite.enabled = False
        Me.lblIRSplit9.enabled = False
        Me.lblVLOOverLibor.visible = True
        Me.lblVLOPegRate.visible = False
        Me.lblVLOOverPrime.visible = False
    End If
End Sub

Private Sub lblIRLenderOverPrime_DblClick(ByVal Cancel As MSForms.ReturnBoolean)
'Actually a textbox, but using as label to minimize recoding
    ChangePrimePegRate ("lblIRLenderOverPrime")
End Sub

Private Sub lblIRSBAOverPrime_Change()
    curCtrl = "lblIRSBAOverPrime"
    If Me(curCtrl).Text = "% Over Prime" Then
        Me.txtIRRTPublisher.enabled = True
        Me.txtIRRTPublisher.BackColor = vbWhite
        Me.optIRRTPubNewspaper.enabled = True
        Me.optIRRTPubWebsite.enabled = True
        Me.lblVLOOverLibor.visible = False
        Me.lblVLOPegRate.visible = False
        Me.lblVLOOverPrime.visible = True
    ElseIf Me(curCtrl).Text = "% Over Peg" Then
        Me.txtIRRTPublisher.Text = ""
        Me.txtIRRTPublisher.enabled = False
        Me.txtIRRTPublisher.BackColor = myGray
        Me.optIRRTPubNewspaper.enabled = False
        Me.optIRRTPubWebsite.enabled = False
        Me.lblIRSplit9.enabled = False
        Me.lblVLOOverLibor.visible = False
        Me.lblVLOPegRate.visible = True
        Me.lblVLOOverPrime.visible = False
    ElseIf Me(curCtrl).Text = "% Over LIBOR" Then
        Me.txtIRRTPublisher.Text = ""
        Me.txtIRRTPublisher.enabled = False
        Me.txtIRRTPublisher.BackColor = myGray
        Me.optIRRTPubNewspaper.enabled = False
        Me.optIRRTPubWebsite.enabled = False
        Me.lblIRSplit9.enabled = False
        Me.lblVLOOverLibor.visible = True
        Me.lblVLOPegRate.visible = False
        Me.lblVLOOverPrime.visible = False
    End If
End Sub

Private Sub lblIRSBAOverPrime_DblClick(ByVal Cancel As MSForms.ReturnBoolean)
'Actually a textbox, but using as label to minimize recoding
    ChangePrimePegRate ("lblIRSBAOverPrime")
End Sub

Private Sub lblIRVariableOverPrime_Change()
    curCtrl = "lblIRVariableOverPrime"
    If Me(curCtrl).Text = "% Over Prime" Then
        Me.txtIRRTPublisher.enabled = True
        Me.txtIRRTPublisher.BackColor = vbWhite
        If Me.txtIRRTPublisher.Text = "" Then
         Me.txtIRRTPublisher.Text = "Wall Street Journal"
        End If
        Me.optIRRTPubNewspaper.enabled = True
        Me.optIRRTPubWebsite.enabled = True
        Me.lblVLOOverLibor.visible = False
        Me.lblVLOPegRate.visible = False
        Me.lblVLOOverPrime.visible = True
    ElseIf Me(curCtrl).Text = "% Over Peg" Then
        Me.txtIRRTPublisher.Text = ""
        Me.txtIRRTPublisher.enabled = False
        Me.txtIRRTPublisher.BackColor = myGray
        Me.optIRRTPubNewspaper.enabled = False
        Me.optIRRTPubWebsite.enabled = False
        Me.lblIRSplit9.enabled = False
        Me.lblVLOOverLibor.visible = False
        Me.lblVLOPegRate.visible = True
        Me.lblVLOOverPrime.visible = False
    ElseIf Me(curCtrl).Text = "% Over LIBOR" Then
        Me.txtIRRTPublisher.Text = ""
        Me.txtIRRTPublisher.enabled = False
        Me.txtIRRTPublisher.BackColor = myGray
        Me.optIRRTPubNewspaper.enabled = False
        Me.optIRRTPubWebsite.enabled = False
        Me.lblIRSplit9.enabled = False
        Me.lblVLOOverLibor.visible = True
        Me.lblVLOPegRate.visible = False
        Me.lblVLOOverPrime.visible = False
    End If
End Sub

Private Sub lblIRVariableOverPrime_DblClick(ByVal Cancel As MSForms.ReturnBoolean)
'Actually a textbox, but using as label to minimize recoding
    ChangePrimePegRate ("lblIRVariableOverPrime")
End Sub

Private Sub lblIRSplit4_Change()

    curCtrl = "lblIRSplit4"
'    If Me(curCtrl).Text = "The rate is Prime Rate plus" Then
'MsgBox Me(curCtrl).Text
    If Me(curCtrl).Text = "The rate is Peg Rate plus" Or Me(curCtrl).Text = "The rate is LIBOR Rate plus" Then
        If Me.cbxVLORateAdjusted.ListCount > 2 Or Me.cbxVLORateAdjusted.ListCount = 0 Then
            Me.cbxVLORateAdjusted.Clear
            Me.cbxVLORateAdjusted.AddItem "every ___ years", 0
            Me.cbxVLORateAdjusted.AddItem "every calendar quarter", 1
            Me.cbxVLORateAdjusted.AddItem "every calendar year", 2
            Me.cbxVLORateAdjusted.AddItem "semi-annually", 3
        End If
        If Me.cbxVLORateAdjusted.ListIndex = -1 Then
            Me.cbxVLORateAdjusted.ListIndex = 0
        End If
        If Me(curCtrl).Text = "The rate is LIBOR Rate plus" Then
            Me.lblVLOOverLibor.visible = True
            Me.lblVLOPegRate.visible = False
            Me.lblVLOOverPrime.visible = False
        Else
            Me.lblVLOOverLibor.visible = False
            Me.lblVLOPegRate.visible = True
            Me.lblVLOOverPrime.visible = False
        End If
        Me.txtIRRTPublisher.Text = ""
        Me.txtIRRTPublisher.enabled = False
        Me.txtIRRTPublisher.BackColor = myGray
        Me.lblIRDClick.enabled = True
        Me.optIRRTPubNewspaper.enabled = False
        Me.optIRRTPubWebsite.enabled = False
        Me.lblIRSplit9.enabled = False
        PPeg = 99
        UpdateRT4 = 0
    ElseIf Me(curCtrl).Text = "The rate is Prime Rate plus" Then
        If Me.cbxVLORateAdjusted.ListCount <= 2 Then
            Me.cbxVLORateAdjusted.Clear
            VariableOptionList cbxVLORateAdjusted
        End If
        Me.lblVLOOverLibor.visible = False
        Me.lblVLOPegRate.visible = False
        Me.lblVLOOverPrime.visible = True
        Me.txtIRRTPublisher.enabled = True
        Me.txtIRRTPublisher.BackColor = vbWhite
        Me.lblIRDClick.enabled = True
        Me.optIRRTPubNewspaper.enabled = True
        Me.optIRRTPubWebsite.enabled = True
        Me.lblIRSplit9.enabled = True
        Me.lblVLOPegRate.visible = False
        PPeg = 0
        UpdateRT4 = 0
    Else
'        MsgBox "It's LIBOR"
    End If
    
End Sub

Private Sub lblIRSplit4xx_DblClick(ByVal Cancel As MSForms.ReturnBoolean)
    curCtrl = "lblIRSplit4"
    If Me(curCtrl).Text = "The rate is Prime Rate plus" Then
        Me(curCtrl).Text = "The rate is Peg Rate plus"
        If Me.cbxVLORateAdjusted.ListCount > 2 Or Me.cbxVLORateAdjusted.ListCount = 0 Then
            Me.cbxVLORateAdjusted.Clear
            Me.cbxVLORateAdjusted.AddItem "every ___ years", 0
            Me.cbxVLORateAdjusted.AddItem "every calendar quarter", 1
            Me.cbxVLORateAdjusted.AddItem "every calendar year", 2
            Me.cbxVLORateAdjusted.AddItem "semi-annually", 3
        End If
        If Me.cbxVLORateAdjusted.ListIndex = -1 Then
            Me.cbxVLORateAdjusted.ListIndex = 0
        End If
        Me.lblVLOPegRate.visible = True
        Me.txtIRRTPublisher.enabled = False
        Me.txtIRRTPublisher.BackColor = myGray
        Me.lblIRDClick.enabled = True
        Me.optIRRTPubNewspaper.enabled = False
        Me.optIRRTPubWebsite.enabled = False
        Me.lblIRSplit9.enabled = False
        PPeg = 99
        UpdateRT4 = 0
    Else
        Me(curCtrl).Text = "The rate is Prime Rate plus"
        If Me.cbxVLORateAdjusted.ListCount <= 2 Then
            Me.cbxVLORateAdjusted.Clear
            VariableOptionList cbxVLORateAdjusted
        End If
        Me.txtIRRTPublisher.enabled = True
        Me.txtIRRTPublisher.BackColor = vbWhite
        Me.lblIRDClick.enabled = True
        Me.optIRRTPubNewspaper.enabled = True
        Me.optIRRTPubWebsite.enabled = True
        Me.lblIRSplit9.enabled = True
        Me.lblVLOPegRate.visible = False
        PPeg = 0
        UpdateRT4 = 0
    End If
End Sub

Private Sub ChangePrimePegRate(Ctrl)
    Me.lblVLOEveryPeriod.enabled = False
    Me.txtVLOEveryNum.Text = ""
    Me.txtVLOEveryNum.enabled = False

    curCtrl = Ctrl
    If Me(curCtrl).Text = "% Over Prime" Then
        Me(curCtrl).Text = "% Over Peg"
        If Me.cbxVLORateAdjusted.ListCount > 2 Or Me.cbxVLORateAdjusted.ListCount = 0 Then
            Me.cbxVLORateAdjusted.Clear
            Me.cbxVLORateAdjusted.AddItem "every ___ years", 0
            Me.cbxVLORateAdjusted.AddItem "every calendar quarter", 1
            Me.cbxVLORateAdjusted.AddItem "every calendar year", 2
            Me.cbxVLORateAdjusted.AddItem "semi-annually", 3
        End If
        If Me.cbxVLORateAdjusted.ListIndex = -1 Then
            Me.cbxVLORateAdjusted.ListIndex = 0
        End If
        Me.lblVLOPegRate.visible = True
        PPeg = 99
        UpdateRT4 = 0
    Else
        Me(curCtrl).Text = "% Over Prime"
        If Me.cbxVLORateAdjusted.ListCount <= 2 Then
            Me.cbxVLORateAdjusted.Clear
            VariableOptionList cbxVLORateAdjusted
        End If
        Me.lblVLOPegRate.visible = False
        PPeg = 0
        UpdateRT4 = 0
    End If
End Sub

Private Sub lblVLOOverLibor_Click()

End Sub

Private Sub lbNamesList_DblClick(ByVal Cancel As MSForms.ReturnBoolean)
    Dim strName As String
    strName = lbNamesList.Text
    UPEdited = True
    
    'Return to page and textbox
    Me.mpgWizard.Value = tabPage
    PageSetup tabPage, 0
    Me.mpgCCOptions.Value = tabCCPage
    Me.prgPleaseWait.visible = False
    txtBox = PrevCtrl
    If txtBox = "txtIC5Insured" Then
        Me.chkAC1LifeInsurance.Value = True
    End If
    Me(txtBox).SetFocus
    If Len(Me(txtBox)) > 0 Then
        Me(txtBox).Text = Me(txtBox).Text & "; " & strName
    Else
        Me(txtBox).Text = strName
    End If
    Me(txtBox).SetFocus
    CommandSetup ButtonState
End Sub

Private Sub lbNamesList_MouseDown(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
'If Right-Button Clicked
    If Button = 2 Then
        DeleteName
    End If
End Sub
Sub DeleteName()
    Dim strName As String
    strName = Me.lbNamesList.Text
    CurDocVarNo = ActiveDocument.Variables.Count
    If CurDocVarNo > 0 Then
        For Count = 1 To CurDocVarNo
            CurVarName = ActiveDocument.Variables(Count).Name
            CurDocTxt = ActiveDocument.Variables(CurVarName).Value
            If strName = CurDocTxt Then
                ActiveDocument.Variables(CurVarName).Delete
                Me.lbNamesList.RemoveItem Me.lbNamesList.ListIndex
                MsgBox strName & vbCr & vbCr & "was removed from the Names List only." & vbCr & vbCr & "This name was not changed in the authorization.", vbInformation, "Names List"
                Count = CurDocVarNo + 1
            Else
                If Count >= CurDocVarNo Then
                    MsgBox strName & vbCr & vbCr & "is a permanent name.  It cannot be removed here.", vbCritical, "Delete Address"
                    Count = CurDocVarNo + 1
                Else
                End If
            End If
        Next Count
    End If
    UseProceeds = 0
End Sub
Sub DeleteAddress()
    Dim strAddress As String
    strAddress = Me.lbAddressList.Text
    CurDocVarNo = ActiveDocument.Variables.Count
    If CurDocVarNo > 0 Then
        For Count = 1 To CurDocVarNo
            CurVarAddress = ActiveDocument.Variables(Count).Name
            CurDocTxt = ActiveDocument.Variables(CurVarAddress).Value
            If strAddress = CurDocTxt Then
                ActiveDocument.Variables(CurVarAddress).Delete
                Me.lbAddressList.RemoveItem Me.lbAddressList.ListIndex
                MsgBox strAddress & vbCr & vbCr & "was removed from the Addresss List only." & vbCr & vbCr & "This Address was not changed in the authorization.", vbInformation, "Address List"
                Count = CurDocVarNo + 1
            Else
                If Count >= CurDocVarNo Then
                    MsgBox strAddress & vbCr & vbCr & "is a permanent address.  It cannot be removed here.", vbCritical, "Delete Address"
                    Count = CurDocVarNo + 1
                Else
                End If
            End If
        Next Count
    End If
    UseProceeds = 0
End Sub
Sub PopulateAddressList()
    Dim intLast As String
    Dim strName As String
    Dim strAddress As String
    Dim strTemp As String
    Dim strI As String
    Me.lbAddressList.Clear
    Me.lbNamesList.Clear
    intLast = Val(WizField("RPLast007"))
    For i = 1 To intLast
        strI = Trim(Str(i))
        strAddress = WizField("BorrowerAddress_" & strI)
        If strAddress <> "" Then
            strTemp = WizField("BorrowerAddress2_" & strI)
            If strTemp <> "" Then
                strAddress = strAddress & ", " & strTemp
            End If
            strName = WizField("BorrowerName_" & strI)
            strAddress = strAddress & ", " & WizField("BorrowerCity_" & strI)
            strAddress = strAddress & " " & WizField("BorrowerState_" & strI)
            strAddress = strAddress & " " & WizField("BorrowerZip_" & strI)
            AddToAddressList strAddress
            AddToNameList strName
        End If
    Next
    strName = ""
    intLast = Val(WizField("RPLast008"))
    For i = 1 To intLast
        strI = Trim(Str(i))
        strName = WizField("OCName_" & strI)
        strAddress = WizField("OCAddress_" & strI)
        If strAddress <> "" Then
            strTemp = WizField("OCAddress2_" & strI)
            If strTemp <> "" Then
                strAddress = strAddress & ", " & strTemp
            End If
            strName = WizField("OCName_" & strI)
            strAddress = strAddress & ", " & WizField("OCCity_" & strI)
            strAddress = strAddress & " " & WizField("OCState_" & strI)
            strAddress = strAddress & " " & WizField("OCZip_" & strI)
            AddToAddressList strAddress
            AddToNameList strName
        End If
    Next
    If WizInfo.WizName = "7a Wizard" Then
        intLast = Val(WizField("RPLast010"))
        For i = 1 To intLast
            strI = Trim(Str(i))
            strTemp = "\" & Trim(WizField("obUPID_" & strI)) & "\"
            If InStr("\1\2\3\4\5\6\9\", strTemp) > 0 Then
                strAddress = WizField("UPField1_" & strI)
                AddToAddressList strAddress
            End If
        Next
    End If
    If WizInfo.WizName = "504 Wizard" Then
        intLast = Val(WizField("RPLast003"))
        For i = 1 To intLast
            strI = Trim(Str(i))
            strAddress = WizField("PPAddress_" & strI)
            If strAddress <> "" Then
                AddToAddressList strAddress
            End If
        Next
    End If
    strAddress = ""
    If ActiveDocument.Variables.Count > 0 Then
        For i = 1 To ActiveDocument.Variables.Count
            gdvName = ActiveDocument.Variables(i).Name
            If InStr(1, gdvName, "Address") Or InStr(1, gdvName, "Location") Then
                strAddress = ActiveDocument.Variables(gdvName).Value
            End If
            If strAddress <> "" Then
                AddToAddressList strAddress
                strAddress = ""
            End If
        Next i
    End If
    AddNamesOnly
End Sub

Sub AddNamesOnly()
    If ActiveDocument.Variables.Count > 0 Then
        For i = 1 To ActiveDocument.Variables.Count
            gdvName = ActiveDocument.Variables(i).Name
            If InStr(1, gdvName, "txtLI") > 0 Or InStr(1, gdvName, "txtOC") > 0 Then
            Else
                If InStr(1, gdvName, "Name") > 0 And InStr(1, gdvName, "cNameNo") = 0 Then
                    strName = ActiveDocument.Variables(gdvName).Value
                End If
                If strName <> "" Then
                    lbNamesList.AddItem strName
                End If
            End If
        Next i
    End If
End Sub

Sub AddToAddressList(myText As String)
    If Len(myText) = 0 Then
        Exit Sub
    End If
    With Me.lbAddressList
        For i = 0 To .ListCount - 1
            If .List(i, 0) = myText Then
                Exit Sub
            End If
        Next i
        .AddItem myText
    End With
End Sub

Sub AddToNameList(myText As String)
    If Len(myText) = 0 Then
        Exit Sub
    End If
    With lbNamesList
        For i = 0 To .ListCount - 1
            If .List(i, 0) = myText Then
                Exit Sub
            End If
        Next i
        .AddItem myText
    End With
End Sub

Private Sub lstUPList1_Click()
    MsgBox "Use of Proceeds items CANNOT be edited from this list.     " & vbCrLf & vbCrLf & _
           "To modify a Use of Proceeds item, use '>' or '<' to display     " & vbCrLf & _
           "item, then click Edit or Delete to modify/remove the category." & vbCrLf & vbCrLf & _
           "Click Edit to edit the category, amount, or descriptions." & vbCrLf & vbCrLf & _
           "Click Save to save edits.", _
           vbCritical + vbOKOnly, _
           "Use of Proceeds List"
End Sub

Private Sub optAC2Aircraft_Change()
    optAC2Aircraft_Click
End Sub

Private Sub optAC2Equipment_Change()
    optAC2Equipment_Click
End Sub

Private Sub optAC2Marine_Change()
    optAC2Marine_Click
End Sub

Private Sub optAC2RealEstate_Change()
    optAC2RealEstate_Click
End Sub

Private Sub optBD5SubordinateD_Click()
    If Me.optBD5SubordinateD.Value = True Then
        Me.txtcbBD5Subordinate.Value = 3
    End If
    Me.txtBD5Term.enabled = Not Me.optBD5SubordinateD.Value
    Me.txtBD5Term.BackColor = myGray
    Me.lblBOCTerm.enabled = Not Me.optBD5SubordinateD.Value
    Me.txtBD5From.SetFocus
    Me.lblBOCProceeds.Caption = "Line of Credit from:"
End Sub

Private Sub optCC7NonSBA_Click()
    If Me.optCCNonSBA.Value = True Then
        Me.txtCC7SharedLender.enabled = False
        Me.txtCC7SharedLender.BackColor = myGray
        On Error Resume Next
        Me.txtCC7SharedAmt.SetFocus
    Else
        Me.txtCC7SharedLender.enabled = True
        Me.txtCC7SharedLender.BackColor = vbWhite
        Me.txtCC7SharedLender.SetFocus
    End If
End Sub

Private Sub optCC7PariPassu_Click()
    If Me.optCC7PariPassu.Value = False Then
        Me.txtCC7SharedLender.enabled = False
        Me.txtCCSharedLender.BackColor = myGray
    Else
        Me.txtCC7SharedLender.enabled = True
        Me.txtCC7SharedLender.BackColor = vbWhite
        Me.txtCC7SharedLender.SetFocus
    End If
End Sub

' Private Sub optCCGuaranteesOnly_BeforeUpdate(ByVal Cancel As MSForms.ReturnBoolean)
'    MsgBox "Before Update value is " & Me.optCCGuaranteesOnly.Value
' End Sub

'Private Sub optCCGuaranteesOnly_Change()
'    If Me.optCCGuaranteesOnly.Value = True Then
'        Me.txtCCSelectMsg.Text = "SLA Loan of $25,000 or less that will ONLY take guarantees:"
'    Else
'        Me.txtCCSelectMsg.Text = "Select a Collateral Condition from the categories below:"
'    End If
' End Sub

'Private Sub optCCGuaranteesOnly_Click()
'    MsgBox "Hi, Dan " & Me.optCCGuaranteesOnly.Value
'    GuaranteesOnly True
'End Sub
'
Private Sub optCCLiquorLicenseA_Exit(ByVal Cancel As MSForms.ReturnBoolean)
    CommandSetup "EnableFinish"
End Sub

Private Sub optCCNonSBA_Click()
    If Me.optCCNonSBA.Value = True Then
        Me.txtCCSharedLender.enabled = False
        Me.txtCCSharedLender.BackColor = myGray
        On Error Resume Next
        Me.txtCCSharedAmt.SetFocus
    Else
        Me.txtCCSharedLender.enabled = True
        Me.txtCCSharedLender.BackColor = vbWhite
        Me.txtCCSharedLender.SetFocus
    End If
End Sub

Private Sub optCCPariPassu_Click()
    If Me.optCCPariPassu.Value = False Then
        Me.txtCCSharedLender.enabled = False
        Me.txtCCSharedLender.BackColor = myGray
    Else
        Me.txtCCSharedLender.enabled = True
        Me.txtCCSharedLender.BackColor = vbWhite
        Me.txtCCSharedLender.SetFocus
    End If
End Sub

Private Sub optERLessThan_Click()
    Me.chkERNonPLP.enabled = False
End Sub

Private Sub optERMoreThan_Click()
    If ActiveDocument.Bookmarks("obPLP").Range.Text = 1 Then
        Me.chkERNonPLP.Value = True
        Me.chkERNonPLP.enabled = True
    Else
        Me.chkERNonPLP.Value = False
        Me.chkERNonPLP.enabled = False
    End If
End Sub

'Private Sub OptionButton1_Click()
'    MsgBox "Hi, Dan " & Me.OptionButton1.Value
'    MsgBox "Hi, Dan2 " & Me.OptionButton2.Value
'End Sub
'
Private Sub optIONone_Change()
    If Me.optIONone.Value = True Then
        Me.cmdIODefault.enabled = False
    Else
        Me.cmdIODefault.enabled = True
    End If
End Sub

Private Sub optIRFixedVariable_Enter()
'CAP
    Me.cmdIROverPrimeInfo.enabled = False
End Sub

Private Sub optIRLenderFixed_Enter()
'CAP
    Me.cmdIROverPrimeInfo.enabled = False
End Sub

Private Sub optIRSBAFixed_Enter()
'CAP
    Me.cmdIROverPrimeInfo.enabled = False
End Sub

Private Sub optIRSplit_Enter()
'CAP
    Me.cmdIROverPrimeInfo.enabled = False
End Sub

Private Sub optIRTwoFixed_Enter()
'CAP
    Me.cmdIROverPrimeInfo.enabled = False
End Sub

Private Sub optLSNonPLP_Change()
    If Me.optLSNonPLP.Value = True Then
 '       Me.chkCAIP.enabled = True
 '       Me.chkCAIP.Value = False
        Me.cbxSBASignor.MatchRequired = True
        If Me.cbxSBASignor.ListCount = 0 Then
            ReadEmpList
            Me.cbxSBASignor.enabled = True
        End If
        On Error Resume Next
        If Me.cbxSBASignor.ListCount > 0 Then
            If Me.optLSNonPLP.Value = False Then
                Me.cbxSBASignor.ListIndex = 0
                Me.cbxSBASignor.enabled = False
                Me.cbxSBASignor.BackColor = myGray
                Me.cbxSBASignor.TabStop = False
            Else
                Me.cbxSBASignor.visible = True
                Me.cbxSBASignor.enabled = True
                Me.cbxSBASignor.BackColor = vbWhite
                Me.cbxSBASignor.SetFocus
                Me.cbxSBASignor.TabStop = True
            End If
        Else
            Me.cbxSBASignor.enabled = False
            Me.cbxSBASignor.BackColor = myGray
            Me.cbxSBASignor.Text = "No Employee List Available"
            Me.cbxSBASignor.TabStop = False
            Me.cmdSBAOverride.visible = True
            Me.cmdSBAOverride.enabled = True
            MySection = "HKEY_CURRENT_USER\Software\SBA\" + WizInfo.WizSection + "\" + WizInfo.WizVer
            xx = System.PrivateProfileString("", MySection, "NoEmpList")
            If xx = "True" Then
                Me.cbxSBASignor.visible = False
                Me.txtSBASignor.visible = True
                yy = System.PrivateProfileString("", MySection, "SBSBA")
                If yy <> "" Then
                    Me.txtSBASignor.Text = yy
                End If
            End If
            On Error Resume Next
            Me.txtLDAmt.SetFocus
        End If
    End If
End Sub

Private Sub optLSPLP_Click()
    If Me.optLSPLP.Value = True Then
 '       Me.chkCAIP.enabled = False
 '       Me.chkCAIP.Value = False
        Me.cbxSBASignor.MatchRequired = False
        Me.cmdSBAOverride.visible = False
        On Error Resume Next
        Me.cbxSBASignor.ListIndex = -1
        Me.cbxSBASignor.enabled = False
        Me.cbxSBASignor.BackColor = myGray
        Me.cbxSBASignor.TabStop = False
        Me.cmdNext.SetFocus
    End If
End Sub

Private Sub optRTDFP_Change()
    If Me.optRTDFP.Value = True Then
'        Me.lblRTESF1.enabled = False
        Me.chkRTESF.enabled = False
        Me.lblRTESF2.enabled = False
        Me.txtRTESF.enabled = False
        Me.txtRTESF.Text = ""
        Me.txtRTESF.BackColor = myGray

'        Me.txtRTCurtailment.enabled = True
        Me.txtRTCurtailment.BackColor = vbWhite
'        Me.cbxRTPeriod.enabled = True
        Me.cbxRTPeriod.BackColor = vbWhite
        Me.lblRTCurtailment.enabled = True
'        DisableLoanOptions
'        Me.cbxDFPMonths.enabled = True
        Me.cbxDFPMonths.BackColor = vbWhite
'        Me.lblIOOne6.enabled = True
        On Error Resume Next
        Me.txtRTCurtailment.SetFocus
    Else
        Me.chkRTESF.enabled = True
'        Me.lblRTESF1.enabled = True
        Me.lblRTESF2.enabled = True
        Me.txtRTESF.enabled = True
        Me.txtRTCurtailment.Text = ""
        Me.txtRTCurtailment.enabled = False
        Me.lblRTCurtailment.enabled = False
        Me.txtRTCurtailment.BackColor = myGray
        Me.cbxRTPeriod.enabled = False
        Me.cbxRTPeriod.BackColor = myGray
        Me.cbxDFPMonths.enabled = False
        Me.cbxIOMonthsOne.BackColor = myGray
'        DisableLoanOptions
    End If

End Sub

Private Sub txtAC1DisabilityInsurance_MouseDown(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
    If Button = 2 Then
        ButtonState = 0
        If Me.cmdFirst.enabled = True Then
            ButtonState = 1
        End If
        If Me.cmdback.enabled = True Then
            ButtonState = ButtonState + 2
        End If
        If Me.cmdNext.enabled = True Then
            ButtonState = ButtonState + 3
        End If
        If Me.cmdFinish.enabled = True Then
            ButtonState = ButtonState + 4
        End If

        If Len(Me.txtAC1DisabilityInsurance.Text) > 0 Then
            SaveData "Insured", "Additional Conditions 1", "Save", "txtAC1DisabilityInsurance", "Name", Me.mpgWizard.Value, X, Y
        Else
            SaveData "Insured", "Additional Conditions 1", "Retrieve", "txtAC1DisabilityInsurance", "Name", Me.mpgWizard.Value, X, Y
        End If
    End If
End Sub

Private Sub txtAC2APLocation_MouseDown(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
    curCtrl = "txtAC2APLocation"
    If Button = 2 Then
        ButtonState = 0
        If Me.cmdFirst.enabled = True Then
            ButtonState = 1
        End If
        If Me.cmdback.enabled = True Then
            ButtonState = ButtonState + 2
        End If
        If Me.cmdNext.enabled = True Then
            ButtonState = ButtonState + 3
        End If
        If Me.cmdFinish.enabled = True Then
            ButtonState = ButtonState + 4
        End If
        Y = 183
        If Len(Me(curCtrl).Text) > 0 And Me.lblAC2Location.Caption = "Location:" Then
            SaveData "Property", "Appraisal", "Save", curCtrl, "Address", Me.mpgWizard.Value, X, Y
        ElseIf Me.lblAC2Location.Caption = "Location:" Then
            SaveData "Property", "Appraisal", "Retrieve", curCtrl, "Address", Me.mpgWizard.Value, X, Y
        End If
    End If
End Sub

'Private Sub txtAC2BorrowerAmount_Exit(ByVal Cancel As MSForms.ReturnBoolean)
'    curCtrl = "txtAC2BorrowerAmount"
'    If Me(curCtrl).Text <> "" Then
'        If IsNumeric(Me(curCtrl).Text) Then
'            InputFormat Me(curCtrl).Name, "TextIsNumber", 2
'        Else
'            UpdateACII1 = 1
'            MyErrorMsg Me.mpgWizard.Value, "Numeric", True, curCtrl
'    '        CommandSetup 3
'        End If
'    End If
'End Sub

Private Sub txtAC2BVAmount_Exit(ByVal Cancel As MSForms.ReturnBoolean)
    curCtrl = "txtAC2BVAmount"
    If Me(curCtrl).Text <> "" Then
        If IsNumeric(Me(curCtrl).Text) Then
            InputFormat Me(curCtrl).Name, "TextIsNumber", 2
        Else
            UpdateACII2 = 1
            MyErrorMsg Me.mpgWizard.Value, "Numeric", True, curCtrl
    '        CommandSetup 3
        End If
    End If
End Sub

Private Sub txtAC2SABeginDate_Exit(ByVal Cancel As MSForms.ReturnBoolean)
    curCtrl = "txtAC2SABeginDate"
    If Me(curCtrl).Text <> "" Then
        If IsDate(Me(curCtrl).Text) Then
            InputFormat Me(curCtrl).Name, "TextIsDate", 2
        Else
            UpdateACII2 = 1
            MyErrorMsg Me.mpgWizard.Value, "Date", True, curCtrl
    '        CommandSetup 3
        End If
    End If
End Sub

Private Sub txtAC2SAName_MouseDown(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
    If Button = 2 Then
        ButtonState = 0
        If Me.cmdFirst.enabled = True Then
            ButtonState = 1
        End If
        If Me.cmdback.enabled = True Then
            ButtonState = ButtonState + 2
        End If
        If Me.cmdNext.enabled = True Then
            ButtonState = ButtonState + 3
        End If
        If Me.cmdFinish.enabled = True Then
            ButtonState = ButtonState + 4
        End If

        If Len(Me.txtAC2SAName.Text) > 0 Then
            SaveData "Creditor", "Additional Conditions 2", "Save", "txtAC2SAName", "Name", Me.mpgWizard.Value, X, Y
        Else
            SaveData "Creditor", "Additional Conditions 2", "Retrieve", "txtAC2SAName", "Name", Me.mpgWizard.Value, X, Y
        End If
    End If
End Sub

Private Sub txtAC2SAPayments_Exit(ByVal Cancel As MSForms.ReturnBoolean)
    curCtrl = "txtAC2SAPayments"
    If Me(curCtrl).Text <> "" Then
        If IsNumeric(Me(curCtrl).Text) Then
            InputFormat Me(curCtrl).Name, "TextIsNumber", 2
        Else
            UpdateACII2 = 1
            MyErrorMsg Me.mpgWizard.Value, "Numeric", True, curCtrl
    '        CommandSetup 3
        End If
    End If
End Sub

Private Sub txtAC2SARate_Exit(ByVal Cancel As MSForms.ReturnBoolean)
    curCtrl = "txtAC2SARate"
    If Me(curCtrl).Text <> "" Then
        If IsNumeric(Me(curCtrl).Text) Then
            InputFormat Me(curCtrl).Name, "TextIsNumber", 2
        Else
            UpdateACII2 = 1
            MyErrorMsg Me.mpgWizard.Value, "Numeric", True, curCtrl
    '        CommandSetup 3
        End If
    End If
End Sub

Private Sub txtBD4Competitor_MouseDown(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
    If Button = 2 Then
        ButtonState = 0
        If Me.cmdFirst.enabled = True Then
            ButtonState = 1
        End If
        If Me.cmdback.enabled = True Then
            ButtonState = ButtonState + 2
        End If
        If Me.cmdNext.enabled = True Then
            ButtonState = ButtonState + 3
        End If
        If Me.cmdFinish.enabled = True Then
            ButtonState = ButtonState + 4
        End If

        If Len(Me.txtBD4Competitor.Text) > 0 Then
            SaveData "Competitor", "Additional Conditions 1", "Save", "txtBD4Competitor", "Name", Me.mpgWizard.Value, X, Y
        Else
            SaveData "Competitor", "Additional Conditions 1", "Retrieve", "txtBD4Competitor", "Name", Me.mpgWizard.Value, X, Y
        End If
    End If
End Sub

Private Sub txtBD4Principal_MouseDown(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
    If Button = 2 Then
        ButtonState = 0
        If Me.cmdFirst.enabled = True Then
            ButtonState = 1
        End If
        If Me.cmdback.enabled = True Then
            ButtonState = ButtonState + 2
        End If
        If Me.cmdNext.enabled = True Then
            ButtonState = ButtonState + 3
        End If
        If Me.cmdFinish.enabled = True Then
            ButtonState = ButtonState + 4
        End If

        If Len(Me.txtBD4Principal.Text) > 0 Then
            SaveData "Principal", "Additional Conditions 1", "Save", "txtBD4Principal", "Name", Me.mpgWizard.Value, X, Y
        Else
            SaveData "Principal", "Additional Conditions 1", "Retrieve", "txtBD4Principal", "Name", Me.mpgWizard.Value, X, Y
        End If
    End If
End Sub

Private Sub txtBD5From_MouseDown(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
    If Button = 2 Then
        ButtonState = 0
        If Me.cmdFirst.enabled = True Then
            ButtonState = 1
        End If
        If Me.cmdback.enabled = True Then
            ButtonState = ButtonState + 2
        End If
        If Me.cmdNext.enabled = True Then
            ButtonState = ButtonState + 3
        End If
        If Me.cmdFinish.enabled = True Then
            ButtonState = ButtonState + 4
        End If
        Y = 169
        If Len(Me.txtBD5From.Text) > 0 Then
            SaveData "Additional Funding", "Additional Conditions 1", "Save", "txtBD5From", "Name", Me.mpgWizard.Value, X, Y
        Else
            SaveData "Additional Funding", "Additional Conditions 1", "Retrieve", "txtBD5From", "Name", Me.mpgWizard.Value, X, Y
        End If
    End If
End Sub

Private Sub txtBIName_MouseDown(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
    If Button = 2 Then
        ButtonState = 0
        If Me.cmdFirst.enabled = True Then
            ButtonState = 1
        End If
        If Me.cmdback.enabled = True Then
            ButtonState = ButtonState + 2
        End If
        If Me.cmdNext.enabled = True Then
            ButtonState = ButtonState + 3
        End If
        If Me.cmdFinish.enabled = True Then
            ButtonState = ButtonState + 4
        End If
        If Len(Me.txtBIName.Text) > 0 Then
            SaveData "Borrower", "Borrower Information", "Save", "txtBIName", "Name", Me.mpgWizard.Value, X, Y
        Else
            SaveData "Borrower", "Borrower Information", "Retrieve", "txtBIName", "Name", Me.mpgWizard.Value, X, Y
        End If
    End If
End Sub

Private Sub txtBIZip_Exit(ByVal Cancel As MSForms.ReturnBoolean)
    If ErrorCaught = True Then
    Else
        Dim ctrltext As String
        Dim cLen As String
        curCtrl = "txtBIZip"
        If InStr(1, Me(curCtrl).Text, "-") > 0 Then
            ctrltext = Mid(Me(curCtrl).Text, 1, InStr(1, Me(curCtrl).Text, "-") - 1) & Mid(Me(curCtrl).Text, InStr(1, Me(curCtrl).Text, "-") + 1)
        Else
            ctrltext = Me(curCtrl).Text
        End If
        If Len(ctrltext) <> 5 And Len(ctrltext) <> 9 Then
            If InStr(1, Me(curCtrl).Text, "-") > 0 Then
                cLen = Len(ctrltext) - 1 & " (without '-')"
            Else
                cLen = Len(ctrltext)
            End If
            UpdateLI3 = 1
            MyErrorMsg Me.mpgWizard.Value, "Length", True, curCtrl, , cLen
    '        CommandSetup 3
            Exit Sub
        End If
        If Not IsNumeric(ctrltext) Then
            UpdateLI3 = 1
            MyErrorMsg Me.mpgWizard.Value, "Numeric", True, curCtrl, , cLen
    '        CommandSetup 3
        End If
        If IsNumeric(ctrltext) And Len(ctrltext) = 9 Then
            Me(curCtrl).Text = Format(ctrltext, "00000\-####")
        ElseIf IsNumeric(ctrltext) And Len(ctrltext) = 5 Then
            Me(curCtrl).Text = Format(ctrltext, "00000")
        End If
    End If
End Sub

Private Sub txtC7Lender_MouseDown(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
    curCtrl = "txtC7Lender"
    If Button = 2 Then
        ButtonState = 0
        If Me.cmdFirst.enabled = True Then
            ButtonState = 1
        End If
        If Me.cmdback.enabled = True Then
            ButtonState = ButtonState + 2
        End If
        If Me.cmdNext.enabled = True Then
            ButtonState = ButtonState + 3
        End If
        If Me.cmdFinish.enabled = True Then
            ButtonState = ButtonState + 4
        End If

        If Len(Me(curCtrl).Text) > 0 Then
            SaveData "Lender", "Personal Property", "Save", curCtrl, "Name", Me.mpgWizard.Value, X, Y
        Else
            SaveData "Lender", "Personal Property", "Retrieve", curCtrl, "Name", Me.mpgWizard.Value, X, Y
        End If
    End If
End Sub

Private Sub txtC7Lienholder_MouseDown(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
    If Button = 2 Then
        ButtonState = 0
        If Me.cmdFirst.enabled = True Then
            ButtonState = 1
        End If
        If Me.cmdback.enabled = True Then
            ButtonState = ButtonState + 2
        End If
        If Me.cmdNext.enabled = True Then
            ButtonState = ButtonState + 3
        End If
        If Me.cmdFinish.enabled = True Then
            ButtonState = ButtonState + 4
        End If

        If Len(Me.txtC7Lienholder.Text) > 0 Then
            SaveData "Lienholder", "Lienholder Information", "Save", "txtC7Lienholder", "Name", Me.mpgWizard.Value, X, Y
        Else
            SaveData "Lienholder", "Lienholder Information", "Retrieve", "txtC7Lienholder", "Name", Me.mpgWizard.Value, X, Y
        End If
    End If
End Sub

Private Sub txtCACommLoanAmount_Change()
    If Me.txtCACommLoanAmount.Text <> "" And IsNumeric(Me.txtCACommLoanAmount.Text) Then
        On Error Resume Next
        If CDec(Me.txtCACommLoanAmount.Text) > 0 Then
            Me.cbxCALienPosition.enabled = True
        Else
            Me.cbxCALienPosition.ListIndex = 0
            Me.cbxCALienPosition.enabled = False
        End If
    Else
        Me.cbxCALienPosition.ListIndex = 0
        Me.cbxCALienPosition.enabled = False
    End If
End Sub

Private Sub txtCACommLoanAmount_Exit(ByVal Cancel As MSForms.ReturnBoolean)
    Dim LoanAmt As String
    Dim PercentGuarantee As String
    curCtrl = "txtCACommLoanAmount"
    If Me(curCtrl).Text <> "" Then
        If IsNumeric(Me(curCtrl).Text) Then
            InputFormat Me(curCtrl).Name, "TextIsNumber", 2
        Else
            UpdateACII3 = 1
            MyErrorMsg Me.mpgWizard.Value, "Numeric", True, curCtrl
        End If
    End If
    LoanAmt = IIf(Left(ActiveDocument.Bookmarks("LoanAmount").Range.Text, 1) <> "[", ActiveDocument.Bookmarks("LoanAmount").Range.Text, "")
    If LoanAmt = "" And Me.chkCAPiggyback.Value = True Then
        MsgBox "The SBA Loan Amount has a current value of zero.          " & vbCrLf & vbCrLf & _
               "Please complete the Loan Information section before completing this section.      ", _
               vbCritical + vbOKOnly, _
               "Commercial Loan Amount"
        Me.chkCAPiggyback.Value = False
        Exit Sub
    End If
    If LoanAmt <> "0" And LoanAmt <> "" And Me.txtCACommLoanAmount.Text <> "" Then
        If CDec(Me.txtCACommLoanAmount.Value) > CDec(LoanAmt) Then
            Cancel = True
            MsgBox "The amount entered exceeds the SBA Loan Amount of $" & LoanAmt & ".          " & vbCrLf & vbCrLf & _
                   "Please re-enter your loan amount.", _
                   vbCritical + vbOKOnly, _
                   "Combination Loan Amount"
            Me.txtCACommLoanAmount.Text = ""
        End If
    End If
End Sub

Private Sub txtCACommMonths_Exit(ByVal Cancel As MSForms.ReturnBoolean)
    curCtrl = "txtCACommMonths"
    If Me(curCtrl).Text <> "" Then
        If IsNumeric(Me(curCtrl).Text) Then
            InputFormat Me(curCtrl).Name, "TextIsNumber", 0
            If Abs(Me.txtCACommMonths.Text) > 11 Then
                Cancel = True
                MsgBox "A maximum of 11 months can be entered.          " & vbCrLf & vbCrLf & _
                       "Add values exceeding 11 months to maturity years.", _
                       vbCritical + vbOKOnly, _
                       "Combination Loan Maturity"
                Me.txtCACommMonths.Text = "0"
            End If
        Else
            UpdateACII3 = 1
            MyErrorMsg Me.mpgWizard.Value, "Numeric", True, curCtrl
        End If
    End If
End Sub

Private Sub txtCACommRate_Exit(ByVal Cancel As MSForms.ReturnBoolean)
    curCtrl = "txtCACommRate"
    If Me(curCtrl).Text <> "" Then
        If IsNumeric(Me(curCtrl).Text) Then
            InputFormat Me(curCtrl).Name, "TextIsNumber", 2
        Else
            UpdateACII3 = 1
            MyErrorMsg Me.mpgWizard.Value, "Numeric", True, curCtrl
        End If
    End If
End Sub

Private Sub txtCACommYears_Exit(ByVal Cancel As MSForms.ReturnBoolean)
    curCtrl = "txtCACommYears"
    If Me(curCtrl).Text <> "" Then
        If IsNumeric(Me(curCtrl).Text) Then
            InputFormat Me(curCtrl).Name, "TextIsNumber", 0
        Else
            UpdateACII3 = 1
            MyErrorMsg Me.mpgWizard.Value, "Numeric", True, curCtrl
        End If
    End If
End Sub

Private Sub txtCALenderName_MouseDown(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
    If Button = 2 Then
        ButtonState = 0
        If Me.cmdFirst.enabled = True Then
            ButtonState = 1
        End If
        If Me.cmdback.enabled = True Then
            ButtonState = ButtonState + 2
        End If
        If Me.cmdNext.enabled = True Then
            ButtonState = ButtonState + 3
        End If
        If Me.cmdFinish.enabled = True Then
            ButtonState = ButtonState + 4
        End If

        If Len(Me.txtCALenderName.Text) > 0 Then
            SaveData "Additional Lender", "Additional Conditions 2", "Save", "txtCALenderName", "Name", Me.mpgWizard.Value, X, Y
        Else
            SaveData "Additional Lender", "Additional Conditions 2", "Retrieve", "txtCALenderName", "Name", Me.mpgWizard.Value, X, Y
        End If
    End If
End Sub

Private Sub txtCALocation_MouseDown(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
    curCtrl = "txtCALocation"
    If Button = 2 Then
        ButtonState = 0
        If Me.cmdFirst.enabled = True Then
            ButtonState = 1
        End If
        If Me.cmdback.enabled = True Then
            ButtonState = ButtonState + 2
        End If
        If Me.cmdNext.enabled = True Then
            ButtonState = ButtonState + 3
        End If
        If Me.cmdFinish.enabled = True Then
            ButtonState = ButtonState + 4
        End If

        If Len(Me(curCtrl).Text) > 0 Then
            SaveData "Real Estate", "Additional Conditions II", "Save", curCtrl, "Address", Me.mpgWizard.Value, X, Y
        Else
            SaveData "Real Estate", "Additional Conditions II", "Retrieve", curCtrl, "Address", Me.mpgWizard.Value, X, Y
        End If
    End If
End Sub

Private Sub txtCAPPAmount_Exit(ByVal Cancel As MSForms.ReturnBoolean)
    curCtrl = "txtCAPPAmount"
    If Me(curCtrl).Text <> "" Then
        If IsNumeric(Me(curCtrl).Text) Then
            InputFormat Me(curCtrl).Name, "TextIsNumber", 2
        Else
            UpdateACII3 = 1
            MyErrorMsg Me.mpgWizard.Value, "Numeric", True, curCtrl
        End If
    End If

End Sub

Private Sub txtCC7SharedAmt_Exit(ByVal Cancel As MSForms.ReturnBoolean)
  curCtrl = "txtCC7SharedAmt"
  If Me(curCtrl).Text <> "" Then
    If IsNumeric(Me(curCtrl).Text) Then
        InputFormat Me(curCtrl).Name, "TextIsNumber", 2
    Else
        UpdateCC1 = 1
        MyErrorMsg Me.mpgWizard.Value, "Numeric", True, curCtrl
    End If
  End If
End Sub

Private Sub txtCCAddress1_MouseDown(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
    curCtrl = "txtCCAddress1"
    RetrieveInfo = True
    If Button = 2 Then
        ButtonState = 0
        If Me.cmdFirst.enabled = True Then
            ButtonState = 1
        End If
        If Me.cmdback.enabled = True Then
            ButtonState = ButtonState + 2
        End If
        If Me.cmdNext.enabled = True Then
            ButtonState = ButtonState + 3
        End If
        If Me.cmdFinish.enabled = True Then
            ButtonState = ButtonState + 4
        End If

        If Len(Me(curCtrl).Text) > 0 Then
            SaveData "Location", "Collateral Condition", "Save", curCtrl, "Address", Me.mpgWizard.Value, X, Y
        Else
            SaveData "Location", "Collateral Condition", "Retrieve", curCtrl, "Address", Me.mpgWizard.Value, X, Y
        End If
    End If
End Sub

Private Sub txtCCAddress2_MouseDown(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
    curCtrl = "txtCCAddress2"
    RetrieveInfo = True
    If Button = 2 Then
        ButtonState = 0
        If Me.cmdFirst.enabled = True Then
            ButtonState = 1
        End If
        If Me.cmdback.enabled = True Then
            ButtonState = ButtonState + 2
        End If
        If Me.cmdNext.enabled = True Then
            ButtonState = ButtonState + 3
        End If
        If Me.cmdFinish.enabled = True Then
            ButtonState = ButtonState + 4
        End If
        If Len(Me(curCtrl).Text) > 0 Then
            SaveData "Location", "Collateral Condition", "Save", curCtrl, "Address", Me.mpgWizard.Value, X, Y
        Else
            SaveData "Location", "Collateral Condition", "Retrieve", curCtrl, "Address", Me.mpgWizard.Value, X, Y
        End If
    End If

End Sub

Private Sub txtCCAddress3_MouseDown(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
    curCtrl = "txtCCAddress3"
    RetrieveInfo = True
    If Button = 2 Then
        ButtonState = 0
        If Me.cmdFirst.enabled = True Then
            ButtonState = 1
        End If
        If Me.cmdback.enabled = True Then
            ButtonState = ButtonState + 2
        End If
        If Me.cmdNext.enabled = True Then
            ButtonState = ButtonState + 3
        End If
        If Me.cmdFinish.enabled = True Then
            ButtonState = ButtonState + 4
        End If
        If Len(Me(curCtrl).Text) > 0 Then
            SaveData "Location", "Collateral Condition", "Save", curCtrl, "Address", Me.mpgWizard.Value, X, Y
        Else
            SaveData "Location", "Collateral Condition", "Retrieve", curCtrl, "Address", Me.mpgWizard.Value, X, Y
        End If
    End If

End Sub

Private Sub txtCCAddress4_MouseDown(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
    curCtrl = "txtCCAddress4"
    RetrieveInfo = True
    If Button = 2 Then
        ButtonState = 0
        If Me.cmdFirst.enabled = True Then
            ButtonState = 1
        End If
        If Me.cmdback.enabled = True Then
            ButtonState = ButtonState + 2
        End If
        If Me.cmdNext.enabled = True Then
            ButtonState = ButtonState + 3
        End If
        If Me.cmdFinish.enabled = True Then
            ButtonState = ButtonState + 4
        End If
        If Len(Me(curCtrl).Text) > 0 Then
            SaveData "Location", "Collateral Condition", "Save", curCtrl, "Address", Me.mpgWizard.Value, X, Y
        Else
            SaveData "Location", "Collateral Condition", "Retrieve", curCtrl, "Address", Me.mpgWizard.Value, X, Y
        End If
    End If
End Sub

Private Sub txtCCApartmentAddress_MouseDown(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
    curCtrl = "txtCCApartmentAddress"
    RetrieveInfo = True
    If Button = 2 Then
        ButtonState = 0
        If Me.cmdFirst.enabled = True Then
            ButtonState = 1
        End If
        If Me.cmdback.enabled = True Then
            ButtonState = ButtonState + 2
        End If
        If Me.cmdNext.enabled = True Then
            ButtonState = ButtonState + 3
        End If
        If Me.cmdFinish.enabled = True Then
            ButtonState = ButtonState + 4
        End If
        Y = Y + 126
        If Len(Me(curCtrl).Text) > 0 Then
            SaveData "Apartment", "Collateral Condition", "Save", curCtrl, "Address", Me.mpgWizard.Value, X, Y, Me.mpgCCOptions.Value
        Else
            SaveData "Apartment", "Collateral Condition", "Retrieve", curCtrl, "Address", Me.mpgWizard.Value, X, Y, Me.mpgCCOptions.Value
        End If
    End If
End Sub

Private Sub txtCCCDName_MouseDown(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
    RetrieveInfo = True
    curCtrl = "txtCCCDName"
    If Button = 2 Then
        ButtonState = 0
        If Me.cmdFirst.enabled = True Then
            ButtonState = 1
        End If
        If Me.cmdback.enabled = True Then
            ButtonState = ButtonState + 2
        End If
        If Me.cmdNext.enabled = True Then
            ButtonState = ButtonState + 3
        End If
        If Me.cmdFinish.enabled = True Then
            ButtonState = ButtonState + 4
        End If
        Y = Y + 126
        If Len(Me.txtCCCDName.Text) > 0 Then
            SaveData "Certificate of Deposit Owner", "Collateral Conditions", "Save", curCtrl, "Name", Me.mpgWizard.Value, X, Y, Me.mpgCCOptions.Value
        Else
            SaveData "Certificate of Deposit Owner", "Collateral Conditions", "Retrieve", curCtrl, "Name", Me.mpgWizard.Value, X, Y, Me.mpgCCOptions.Value
        End If
    End If
End Sub

Private Sub txtCCContractParty_MouseDown(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
    curCtrl = "txtCCContractParty"
    RetrieveInfo = True
    If Button = 2 Then
        ButtonState = 0
        If Me.cmdFirst.enabled = True Then
            ButtonState = 1
        End If
        If Me.cmdback.enabled = True Then
            ButtonState = ButtonState + 2
        End If
        If Me.cmdNext.enabled = True Then
            ButtonState = ButtonState + 3
        End If
        If Me.cmdFinish.enabled = True Then
            ButtonState = ButtonState + 4
        End If
        Y = Y + 126
        If Len(Me.txtCCContractParty.Text) > 0 Then
            SaveData "Party to Contract", "Collateral Conditions", "Save", curCtrl, "Name", Me.mpgWizard.Value, X, Y, Me.mpgCCOptions.Value
        Else
            SaveData "Party to Contract", "Collateral Conditions", "Retrieve", curCtrl, "Name", Me.mpgWizard.Value, X, Y, Me.mpgCCOptions.Value
        End If
    End If
End Sub

Private Sub txtCCGovContractAgency_MouseDown(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
    curCtrl = "txtCCGovContractAgency"
    RetrieveInfo = True
    If Button = 2 Then
        ButtonState = 0
        If Me.cmdFirst.enabled = True Then
            ButtonState = 1
        End If
        If Me.cmdback.enabled = True Then
            ButtonState = ButtonState + 2
        End If
        If Me.cmdNext.enabled = True Then
            ButtonState = ButtonState + 3
        End If
        If Me.cmdFinish.enabled = True Then
            ButtonState = ButtonState + 4
        End If
        Y = Y + 126
        If Len(Me.txtCCGovContractAgency.Text) > 0 Then
            SaveData "Contract Agency", "Collateral Conditions", "Save", curCtrl, "Name", Me.mpgWizard.Value, X, Y, Me.mpgCCOptions.Value
        Else
            SaveData "Contract Agency", "Collateral Conditions", "Retrieve", curCtrl, "Name", Me.mpgWizard.Value, X, Y, Me.mpgCCOptions.Value
        End If
    End If
End Sub

Private Sub txtCCMutualFundName_MouseDown(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
    curCtrl = "txtCCMutualFundName"
    RetrieveInfo = True
    If Button = 2 Then
        ButtonState = 0
        If Me.cmdFirst.enabled = True Then
            ButtonState = 1
        End If
        If Me.cmdback.enabled = True Then
            ButtonState = ButtonState + 2
        End If
        If Me.cmdNext.enabled = True Then
            ButtonState = ButtonState + 3
        End If
        If Me.cmdFinish.enabled = True Then
            ButtonState = ButtonState + 4
        End If
        Y = Y + 126 + 61
        If Len(Me.txtCCMutualFundName.Text) > 0 Then
            SaveData "Mutual Fund", "Collateral Conditions", "Save", curCtrl, "Name", Me.mpgWizard.Value, X, Y, Me.mpgCCOptions.Value
        Else
            SaveData "Mutual Fund", "Collateral Conditions", "Retrieve", curCtrl, "Name", Me.mpgWizard.Value, X, Y, Me.mpgCCOptions.Value
        End If
    End If
End Sub

Private Sub txtCCMutualFundShareholder_MouseDown(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
    curCtrl = "txtCCMutualFundShareholder"
    RetrieveInfo = True
    If Button = 2 Then
        ButtonState = 0
        If Me.cmdFirst.enabled = True Then
            ButtonState = 1
        End If
        If Me.cmdback.enabled = True Then
            ButtonState = ButtonState + 2
        End If
        If Me.cmdNext.enabled = True Then
            ButtonState = ButtonState + 3
        End If
        If Me.cmdFinish.enabled = True Then
            ButtonState = ButtonState + 4
        End If
        Y = Y + 126 + 61
        If Len(Me.txtCCMutualFundShareholder.Text) > 0 Then
            SaveData "Shareholder", "Collateral Conditions", "Save", curCtrl, "Name", Me.mpgWizard.Value, X, Y, Me.mpgCCOptions.Value
        Else
            SaveData "Shareholder", "Collateral Conditions", "Retrieve", curCtrl, "Name", Me.mpgWizard.Value, X, Y, Me.mpgCCOptions.Value
        End If
    End If
End Sub

Private Sub txtCCNoteExecutedBy_MouseDown(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
    curCtrl = "txtCCNoteExecutedBy"
    RetrieveInfo = True
    If Button = 2 Then
        ButtonState = 0
        If Me.cmdFirst.enabled = True Then
            ButtonState = 1
        End If
        If Me.cmdback.enabled = True Then
            ButtonState = ButtonState + 2
        End If
        If Me.cmdNext.enabled = True Then
            ButtonState = ButtonState + 3
        End If
        If Me.cmdFinish.enabled = True Then
            ButtonState = ButtonState + 4
        End If
        Y = Y + 126
        If Len(Me.txtCCNoteExecutedBy.Text) > 0 Then
            SaveData "Executed By", "Collateral Conditions", "Save", curCtrl, "Name", Me.mpgWizard.Value, X, Y, Me.mpgCCOptions.Value
        Else
            SaveData "Executed By", "Collateral Conditions", "Retrieve", curCtrl, "Name", Me.mpgWizard.Value, X, Y, Me.mpgCCOptions.Value
        End If
    End If
End Sub

Private Sub txtCCNoteExecutedTo_MouseDown(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
    curCtrl = "txtCCNoteExecutedTo"
    RetrieveInfo = True
    If Button = 2 Then
        ButtonState = 0
        If Me.cmdFirst.enabled = True Then
            ButtonState = 1
        End If
        If Me.cmdback.enabled = True Then
            ButtonState = ButtonState + 2
        End If
        If Me.cmdNext.enabled = True Then
            ButtonState = ButtonState + 3
        End If
        If Me.cmdFinish.enabled = True Then
            ButtonState = ButtonState + 4
        End If
        Y = Y + 126
        If Len(Me.txtCCNoteExecutedTo.Text) > 0 Then
            SaveData "Executed To", "Collateral Conditions", "Save", curCtrl, "Name", Me.mpgWizard.Value, X, Y, Me.mpgCCOptions.Value
        Else
            SaveData "Executed To", "Collateral Conditions", "Retrieve", curCtrl, "Name", Me.mpgWizard.Value, X, Y, Me.mpgCCOptions.Value
        End If
    End If
End Sub

Private Sub txtCCPatentHolder_MouseDown(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
    curCtrl = "txtCCPatentHolder"
    RetrieveInfo = True
    If Button = 2 Then
        ButtonState = 0
        If Me.cmdFirst.enabled = True Then
            ButtonState = 1
        End If
        If Me.cmdback.enabled = True Then
            ButtonState = ButtonState + 2
        End If
        If Me.cmdNext.enabled = True Then
            ButtonState = ButtonState + 3
        End If
        If Me.cmdFinish.enabled = True Then
            ButtonState = ButtonState + 4
        End If
        Y = Y + 126 + 61
        If Len(Me.txtCCPatentHolder.Text) > 0 Then
            SaveData "Patent Holder", "Collateral Conditions", "Save", curCtrl, "Name", Me.mpgWizard.Value, X, Y, Me.mpgCCOptions.Value
        Else
            SaveData "Patent Holder", "Collateral Conditions", "Retrieve", curCtrl, "Name", Me.mpgWizard.Value, X, Y, Me.mpgCCOptions.Value
        End If
    End If
End Sub

Private Sub txtCCSharedAmt_Exit(ByVal Cancel As MSForms.ReturnBoolean)
    curCtrl = "txtCCSharedAmt"
    If Me(curCtrl).Text <> "" Then
        If IsNumeric(Me(curCtrl).Text) Then
            InputFormat Me(curCtrl).Name, "TextIsNumber", 2
        Else
            UpdateCC1 = 1
            MyErrorMsg Me.mpgWizard.Value, "Numeric", True, curCtrl
        End If
    End If
End Sub

Private Sub txtCCStockCompany_MouseDown(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
    curCtrl = "txtCCStockCompany"
    RetrieveInfo = True
    If Button = 2 Then
        ButtonState = 0
        If Me.cmdFirst.enabled = True Then
            ButtonState = 1
        End If
        If Me.cmdback.enabled = True Then
            ButtonState = ButtonState + 2
        End If
        If Me.cmdNext.enabled = True Then
            ButtonState = ButtonState + 3
        End If
        If Me.cmdFinish.enabled = True Then
            ButtonState = ButtonState + 4
        End If
        Y = Y + 126 + 61
        If Len(Me.txtCCStockCompany.Text) > 0 Then
            SaveData "Company", "Collateral Conditions", "Save", curCtrl, "Name", Me.mpgWizard.Value, X, Y, Me.mpgCCOptions.Value
        Else
            SaveData "Company", "Collateral Conditions", "Retrieve", curCtrl, "Name", Me.mpgWizard.Value, X, Y, Me.mpgCCOptions.Value
        End If
    End If
End Sub

Private Sub txtCCStockShareholder_MouseDown(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
    curCtrl = "txtCCStockShareholder"
    RetrieveInfo = True
    If Button = 2 Then
        ButtonState = 0
        If Me.cmdFirst.enabled = True Then
            ButtonState = 1
        End If
        If Me.cmdback.enabled = True Then
            ButtonState = ButtonState + 2
        End If
        If Me.cmdNext.enabled = True Then
            ButtonState = ButtonState + 3
        End If
        If Me.cmdFinish.enabled = True Then
            ButtonState = ButtonState + 4
        End If
        Y = Y + 126 + 61
        If Len(Me.txtCCStockShareholder.Text) > 0 Then
            SaveData "Shareholder", "Collateral Conditions", "Save", curCtrl, "Name", Me.mpgWizard.Value, X, Y, Me.mpgCCOptions.Value
        Else
            SaveData "Shareholder", "Collateral Conditions", "Retrieve", curCtrl, "Name", Me.mpgWizard.Value, X, Y, Me.mpgCCOptions.Value
        End If
    End If
End Sub

Private Sub txtCCFirstLH_MouseDown(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
    curCtrl = "txtCCFirstLH"
    RetrieveInfo = True
    If Button = 2 Then
        ButtonState = 0
        If Me.cmdFirst.enabled = True Then
            ButtonState = 1
        End If
        If Me.cmdback.enabled = True Then
            ButtonState = ButtonState + 2
        End If
        If Me.cmdNext.enabled = True Then
            ButtonState = ButtonState + 3
        End If
        If Me.cmdFinish.enabled = True Then
            ButtonState = ButtonState + 4
        End If
        Y = Y + 126
        If Len(Me.txtCCFirstLH.Text) > 0 Then
            SaveData "Lienholder", "Collateral Conditions", "Save", curCtrl, "Name", Me.mpgWizard.Value, X, Y, Me.mpgCCOptions.Value
        Else
            SaveData "Lienholder", "Collateral Conditions", "Retrieve", curCtrl, "Name", Me.mpgWizard.Value, X, Y, Me.mpgCCOptions.Value
        End If
    End If
End Sub
Private Sub txtCCSecondLH_MouseDown(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
    curCtrl = "txtCCSecondLH"
    RetrieveInfo = True
    If Button = 2 Then
        ButtonState = 0
        If Me.cmdFirst.enabled = True Then
            ButtonState = 1
        End If
        If Me.cmdback.enabled = True Then
            ButtonState = ButtonState + 2
        End If
        If Me.cmdNext.enabled = True Then
            ButtonState = ButtonState + 3
        End If
        If Me.cmdFinish.enabled = True Then
            ButtonState = ButtonState + 4
        End If
        Y = Y + 126 + 61
        If Len(Me.txtCCSecondLH.Text) > 0 Then
            SaveData "Lienholder", "Collateral Conditions", "Save", curCtrl, "Name", Me.mpgWizard.Value, X, Y, Me.mpgCCOptions.Value
        Else
            SaveData "Lienholder", "Collateral Conditions", "Retrieve", curCtrl, "Name", Me.mpgWizard.Value, X, Y, Me.mpgCCOptions.Value
        End If
    End If
End Sub

Private Sub txtCCThirdLH_MouseDown(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
    curCtrl = "txtCCThirdLH"
    RetrieveInfo = True
    If Button = 2 Then
        ButtonState = 0
        If Me.cmdFirst.enabled = True Then
            ButtonState = 1
        End If
        If Me.cmdback.enabled = True Then
            ButtonState = ButtonState + 2
        End If
        If Me.cmdNext.enabled = True Then
            ButtonState = ButtonState + 3
        End If
        If Me.cmdFinish.enabled = True Then
            ButtonState = ButtonState + 4
        End If
        Y = Y + 126
        If Len(Me.txtCCThirdLH.Text) > 0 Then
            SaveData "Lienholder", "Collateral Conditions", "Save", curCtrl, "Name", Me.mpgWizard.Value, X, Y, Me.mpgCCOptions.Value
        Else
            SaveData "Lienholder", "Collateral Conditions", "Retrieve", curCtrl, "Name", Me.mpgWizard.Value, X, Y, Me.mpgCCOptions.Value
        End If
    End If
End Sub
Private Sub txtCCFourthLH_MouseDown(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
    curCtrl = "txtCCFourthLH"
    RetrieveInfo = True
    If Button = 2 Then
        ButtonState = 0
        If Me.cmdFirst.enabled = True Then
            ButtonState = 1
        End If
        If Me.cmdback.enabled = True Then
            ButtonState = ButtonState + 2
        End If
        If Me.cmdNext.enabled = True Then
            ButtonState = ButtonState + 3
        End If
        If Me.cmdFinish.enabled = True Then
            ButtonState = ButtonState + 4
        End If
        Y = Y + 126 + 61
        If Len(Me.txtCCFourthLH.Text) > 0 Then
            SaveData "Lienholder", "Collateral Conditions", "Save", curCtrl, "Name", Me.mpgWizard.Value, X, Y, Me.mpgCCOptions.Value
        Else
            SaveData "Lienholder", "Collateral Conditions", "Retrieve", curCtrl, "Name", Me.mpgWizard.Value, X, Y, Me.mpgCCOptions.Value
        End If
    End If
End Sub

Private Sub txtCCLesseeName3_MouseDown(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
    curCtrl = "txtCCLesseeName3"
    RetrieveInfo = True
    If Button = 2 Then
        ButtonState = 0
        If Me.cmdFirst.enabled = True Then
            ButtonState = 1
        End If
        If Me.cmdback.enabled = True Then
            ButtonState = ButtonState + 2
        End If
        If Me.cmdNext.enabled = True Then
            ButtonState = ButtonState + 3
        End If
        If Me.cmdFinish.enabled = True Then
            ButtonState = ButtonState + 4
        End If
        If Len(Me.txtCCLesseeName3.Text) > 0 Then
            SaveData "Lessee", "Collateral Conditions", "Save", curCtrl, "Name", Me.mpgWizard.Value, X, Y, Me.mpgCCOptions.Value
        Else
            SaveData "Lessee", "Collateral Conditions", "Retrieve", curCtrl, "Name", Me.mpgWizard.Value, X, Y, Me.mpgCCOptions.Value
        End If
    End If
End Sub

Private Sub txtCCLessorName3_MouseDown(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
    curCtrl = "txtCCLessorName3"
    RetrieveInfo = True
    If Button = 2 Then
        ButtonState = 0
        If Me.cmdFirst.enabled = True Then
            ButtonState = 1
        End If
        If Me.cmdback.enabled = True Then
            ButtonState = ButtonState + 2
        End If
        If Me.cmdNext.enabled = True Then
            ButtonState = ButtonState + 3
        End If
        If Me.cmdFinish.enabled = True Then
            ButtonState = ButtonState + 4
        End If
        If Len(Me.txtCCLessorName3.Text) > 0 Then
            SaveData "Lessor", "Collateral Conditions", "Save", curCtrl, "Name", Me.mpgWizard.Value, X, Y, Me.mpgCCOptions.Value
        Else
            SaveData "Lessor", "Collateral Conditions", "Retrieve", curCtrl, "Name", Me.mpgWizard.Value, X, Y, Me.mpgCCOptions.Value
        End If
    End If
End Sub

Private Sub txtCCLienAmount_Exit(ByVal Cancel As MSForms.ReturnBoolean)
    curCtrl = "txtCCLienAmount"
    pgOption = Me.mpgCCOptions.Value
    If Me(curCtrl).Text <> "" Then
        If IsNumeric(Me(curCtrl).Text) Then
            InputFormat Me(curCtrl).Name, "TextIsNumber", 2
        Else
            UpdateCC = 1
            MyErrorMsg Me.mpgWizard.Value, "Numeric", True, curCtrl, , , pgOption
        End If
    Else
        UpdateCC = 1
        MyErrorMsg Me.mpgWizard.Value, "Blank", True, curCtrl, , , pgOption
    End If
End Sub

Private Sub txtCCMobileHomeLocation_MouseDown(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
    curCtrl = "txtCCMobileHomeLocation"
    RetrieveInfo = True
    If Button = 2 Then
        ButtonState = 0
        If Me.cmdFirst.enabled = True Then
            ButtonState = 1
        End If
        If Me.cmdback.enabled = True Then
            ButtonState = ButtonState + 2
        End If
        If Me.cmdNext.enabled = True Then
            ButtonState = ButtonState + 3
        End If
        If Me.cmdFinish.enabled = True Then
            ButtonState = ButtonState + 4
        End If
        Y = Y + 126 + 61
        If Len(Me(curCtrl).Text) > 0 Then
            SaveData "Mobile Home", "Collateral Condition", "Save", curCtrl, "Address", Me.mpgWizard.Value, X, Y, Me.mpgCCOptions.Value
        Else
            SaveData "Mobile Home", "Collateral Condition", "Retrieve", curCtrl, "Address", Me.mpgWizard.Value, X, Y, Me.mpgCCOptions.Value
        End If
    End If
End Sub

Private Sub txtCCMobileHomeOwner_MouseDown(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
    curCtrl = "txtCCMobileHomeOwner"
    RetrieveInfo = True
    If Button = 2 Then
        ButtonState = 0
        If Me.cmdFirst.enabled = True Then
            ButtonState = 1
        End If
        If Me.cmdback.enabled = True Then
            ButtonState = ButtonState + 2
        End If
        If Me.cmdNext.enabled = True Then
            ButtonState = ButtonState + 3
        End If
        If Me.cmdFinish.enabled = True Then
            ButtonState = ButtonState + 4
        End If
        Y = Y + 126 + 61
        If Len(Me.txtCCMobileHomeOwner.Text) > 0 Then
            SaveData "Mobile Home Owner", "Collateral Conditions", "Save", curCtrl, "Name", Me.mpgWizard.Value, X, Y, Me.mpgCCOptions.Value
        Else
            SaveData "Mobile Home Owner", "Collateral Conditions", "Retrieve", curCtrl, "Name", Me.mpgWizard.Value, X, Y, Me.mpgCCOptions.Value
        End If
    End If

End Sub

Private Sub txtCCPurchaserName4_MouseDown(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
    If Button = 2 Then
        ButtonState = 0
        If Me.cmdFirst.enabled = True Then
            ButtonState = 1
        End If
        If Me.cmdback.enabled = True Then
            ButtonState = ButtonState + 2
        End If
        If Me.cmdNext.enabled = True Then
            ButtonState = ButtonState + 3
        End If
        If Me.cmdFinish.enabled = True Then
            ButtonState = ButtonState + 4
        End If
        If Len(Me.txtCCPurchaserName4.Text) > 0 Then
            SaveData "Purchaser", "Collateral Conditions", "Save", "txtCCPurchaserName4", "Name", Me.mpgWizard.Value, X, Y
        Else
            SaveData "Purchaser", "Collateral Conditions", "Retrieve", "txtCCPurchaserName4", "Name", Me.mpgWizard.Value, X, Y
        End If
    End If
End Sub

Private Sub txtCCSellerName4_MouseDown(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
    If Button = 2 Then
        ButtonState = 0
        If Me.cmdFirst.enabled = True Then
            ButtonState = 1
        End If
        If Me.cmdback.enabled = True Then
            ButtonState = ButtonState + 2
        End If
        If Me.cmdNext.enabled = True Then
            ButtonState = ButtonState + 3
        End If
        If Me.cmdFinish.enabled = True Then
            ButtonState = ButtonState + 4
        End If
        If Len(Me.txtCCSellerName4.Text) > 0 Then
            SaveData "Seller", "Collateral Conditions", "Save", "txtCCSellerName4", "Name", Me.mpgWizard.Value, X, Y
        Else
            SaveData "Seller", "Collateral Conditions", "Retrieve", "txtCCSellerName4", "Name", Me.mpgWizard.Value, X, Y
        End If
    End If
End Sub

Private Sub txtCCStockSharesNumber_Exit(ByVal Cancel As MSForms.ReturnBoolean)
    curCtrl = "txtCCStockSharesNumber"
    pgOption = Me.mpgCCOptions.Value
    If Me(curCtrl).Text <> "" Then
        If IsNumeric(Me(curCtrl).Text) Then
            InputFormat Me(curCtrl).Name, "TextIsNumber", 0
        Else
            UpdateCC = 1
            MyErrorMsg Me.mpgWizard.Value, "Numeric", True, curCtrl, , , pgOption
        End If
    End If
End Sub

Private Sub cbxUPCategory_Exit(ByVal Cancel As MSForms.ReturnBoolean)
'    ResetUP 0, Me.cbxUPCategory.ListIndex
    If Me.cbxUPCategory.ListIndex = 21 Or Me.cbxUPCategory.Locked = True Then
    Else
        If Me.cmdWizardShortCut.visible = True Then
            Me.cmdWizardShortCut.visible = False
        End If
        Dim cIndex As Integer

        If Me.cbxUPCategory.ListCount = 0 Then
            UseProceedsList Me.cbxUPCategory
        ElseIf Me.cbxUPCategory.ListCount >= 1 Then
            'Me.txtUPContractPrice.Text = ""
            Me.txtUPContractPrice.enabled = False
            Me.txtUPContractPrice.BackColor = myGray
        End If

        cIndex = Me.cbxUPCategory.ListIndex
        Me.fraUPInfo2.Top = Me.fraUPInfo2.Tag
        Select Case cIndex
        Case -1
            MsgBox "Input not allowed.  Your selection must match an entry in the list.     ", _
                   vbInformation + vbOKOnly, _
                   "Input Error"
            Me.cbxUPCategory.SetFocus
            Me.cbxUPCategory.ListIndex = 21
            On Error Resume Next
            Me.lblUPData1.Caption = Me.cbxUPCategory.List(cIndex, 2)
        Case 22, 23
'            Me.cbxUPCategory.SetFocus
'            Me.txtUPAmount.Text = ""
'            Me.txtUPAmount.enabled = False
'            Me.txtUPAmount.BackColor = myGray
'            Me.lblUPUseAmount.enabled = False
'            Me.lblUPData1.enabled = True 'IIf(cIndex = 0, False, True)
'            Me.lblUPData1.visible = True 'IIf(cIndex = 0, False, True)
'            Me.lblUPData1.Caption = "This option requires no amount and no Use of Proceeds balances.  Click 'Finish' to continue." 'Me.cbxUPCategory.List(cIndex, 1)
'            Me.txtUPField1.enabled = False
'            Me.txtUPField1.visible = False 'IIf(cIndex = 0, False, True)
'            Me.cmdUPNew.SetFocus
            Me.txtobUPID.Text = cIndex
            GoTo ProcUP2
        Case 24
            Me.txtUPAmount.visible = True
            Me.lblUPUseAmount.enabled = True
            Me.txtUPAmount.enabled = True
            Me.txtUPAmount.SetFocus
            Me.lblUPData1.enabled = IIf(cIndex = 0, False, True)
            Me.lblUPData1.visible = IIf(cIndex = 0, False, True)
            Me.lblUPData1.Caption = Me.cbxUPCategory.List(cIndex, 1)
            Me.txtUPField1.enabled = IIf(cIndex = 0, False, True)
            Me.txtUPField1.visible = IIf(cIndex = 0, False, True)
            Me.txtUPField1.Locked = False
            Me.txtUPField1.BackColor = vbWhite
            Me.txtobUPID.Text = cIndex
            GoTo ProcUP
        Case Else
            Me.txtUPAmount.visible = True
            Me.lblUPUseAmount.visible = True
            Me.lblUPData1.enabled = IIf(cIndex = 0, False, True)
            Me.lblUPData1.visible = IIf(cIndex = 0, False, True)
            Me.lblUPData1.Caption = Me.cbxUPCategory.List(cIndex, 1)
            Me.txtUPField1.enabled = IIf(cIndex = 0, False, True)
            Me.txtUPField1.visible = IIf(cIndex = 0, False, True)
            Me.txtUPField2.enabled = IIf(cIndex = 0, False, True)
            Me.txtUPField2.visible = IIf(cIndex = 0, False, True)
            Me.lblUPData2.enabled = IIf(cIndex = 0, False, True)
            Me.lblUPData2.visible = IIf(cIndex = 0, False, True)
            If cIndex = 16 Or cIndex = 17 Then
                Me.fraUPInfo2.Top = 228
                Me.txtUPAmount2.enabled = IIf(cIndex = 0, False, True)
                Me.txtUPAmount2.visible = IIf(cIndex = 0, False, True)
                Me.lblUPData3.enabled = IIf(cIndex = 0, False, True)
                Me.lblUPData3.visible = IIf(cIndex = 0, False, True)
                Me.txtUPField3.enabled = IIf(cIndex = 0, False, True)
                Me.txtUPField3.visible = IIf(cIndex = 0, False, True)
                Me.lblUPData4.enabled = IIf(cIndex = 0, False, True)
                Me.lblUPData4.visible = IIf(cIndex = 0, False, True)
    
                Me.lblUPData2.Caption = Me.cbxUPCategory.List(cIndex, 2)
                Me.lblUPData3.Caption = Me.cbxUPCategory.List(cIndex, 3)
                Me.lblUPData4.Caption = Me.cbxUPCategory.List(cIndex, 4)
'                If Me.fraUPInfo2.Top = 190 Then
'                Else
                ResetUP 32, cIndex
'                End If
            End If
ProcUP:
ProcUP2:
            Me.txtobUPID.Text = cIndex
            If Me.cbxUPCategory.Locked = False Then
                UPOPtions (cIndex)
            End If
            If Me.txtUPAmount.Text <> "" Then
                UpdateUPTot
            End If
            If Me.cmdUPNew.Caption = "Save" Then
                Me.cmdUPEdit.enabled = False
                Me.txtUPAmount.Locked = False
                Me.txtUPAmount.BackColor = vbWhite
                Me.txtUPField1.Locked = False
                Me.txtUPField1.BackColor = vbWhite
                Me.txtUPField2.Locked = False
                Me.txtUPField2.BackColor = vbWhite
                Me.cmdUPShowList.enabled = False
                Me.cmdUPLeft.enabled = False
                Me.cmdUPRight.enabled = False
            ElseIf Me.cmdUPNew.Caption = "Save" And Me.cmdUPNew.enabled = False Or Me.cmdUPNew.Caption = "New" Then
                If Me.txtUPProcessed.Text <> "0.00" Then
                    Me.cmdUPShowList.enabled = True
                Else
                    Me.cmdUPShowList.enabled = False
                End If
            End If
        End Select
        If Me.cbxUPCategory.ListIndex = 21 Then
            Me.cmdUPNew.enabled = False
'            If Me.cbxUPCategory.ListIndex = 22 Then
'                Me.cmdFinish.enabled = True
'                Me.cmdFinish.Default = True
'            End If
        Else
            Me.cmdUPNew.enabled = True
            On Error Resume Next
            Me.txtUPAmount.SetFocus
        End If
    End If
    On Error Resume Next
    FirstPass = False
    Me.txtUPAmount.SetFocus
    If cIndex = 22 Then
'        Me.cmdFinish.SetFocus
    End If
End Sub
Private Sub cbxUPCategory_Enter()
    If UpPass = 99 Then
        UpPass = 0
        Exit Sub
    ElseIf FirstPass = True Then
        FirstPass = False
        Exit Sub
    End If
    If UPEdit = False Then
        If Me.cmdUPNew.enabled = True And Me.cmdUPNew.Caption = "Save" And frmMain.visible = True And Me.txtUPProcessed.Text <> "0.00" Then
            If MsgBox("The current Use of Proceeds item has not been saved.     " & vbCrLf & vbCrLf & _
                      "Do you wish to discard this item?", _
                      vbQuestion + vbYesNo, _
                      "Use of Proceeds Category") = vbYes Then
                UpdateUPTot
                Me.cmdUPNew.enabled = False
                Me.cmdUPDelete.enabled = False
                UpPass = 99
                Me.txtUPAmount.Text = ""
                Me.txtUPField1.visible = False
                Me.txtUPField1.Text = ""
                Me.lblUPData1.visible = False
                Me.txtUPField2.visible = False
                Me.txtUPField2.Text = ""
                Me.lblUPData2.visible = False
                Me.txtUPText.Text = ""
                Me.txtUPText.visible = False
                Me.cbxUPCategory.ListIndex = 21
                On Error Resume Next
                Me.fraUPInfo1.SetFocus
                Me.cbxUPCategory.SetFocus
                SendKeys "{ENTER}", True
                Exit Sub
            Else
                On Error Resume Next
                Me.cmdUPNew.SetFocus
                Exit Sub
            End If
        End If
    End If
    Me.cbxUPCategory.MatchRequired = True
    If ShowUPList = False Then
        If Me.cbxUPCategory.ListCount > 0 Then
            If Me.cbxUPCategory.ListIndex = 21 Then
                Me.cmdUPNew.enabled = False
                Me.cmdUPDelete.enabled = False
                Me.cmdUPEdit.enabled = False
            ElseIf Me.cbxUPCategory.ListIndex <> 22 Then
                Me.cmdUPDelete.enabled = True
                Me.cmdUPEdit.enabled = True
            End If
        Else
            UseProceedsList Me.cbxUPCategory
            If Me.cbxUPCategory.ListIndex = 21 Then
                Me.cmdUPNew.enabled = False
                Me.cmdUPEdit.enabled = False
                Me.cmdUPDelete.enabled = False
                Me.cmdUPLeft.enabled = False
                Me.cmdUPRight.enabled = False
                Me.cmdUPShowList.enabled = True
            Else
                Me.cmdUPDelete.enabled = True
                Me.cmdUPEdit.enabled = True
            End If
        End If
    End If
    ShowUPList = False
    FirstPass = False
End Sub
Private Sub CCPanel(CtrlValue)
    Me.mpgCCOptions.Value = CtrlValue
End Sub
Private Sub CCPanelEnableDisable(Frame, dlgCtrlName, State)
    Dim Ctrl As control
    For Each Ctrl In Me(Frame).Controls
        Me(Ctrl.Name).enabled = State
        If InStr(1, "txt", Me(Ctrl.Name)) > 0 And State = False Or InStr(1, "cbx", Me(Ctrl.Name)) > 0 And State = False Then
            Me(Ctrl.Name).BackColor = myGray
        ElseIf InStr(1, "txt", Me(Ctrl.Name)) > 0 And State = False Or InStr(1, "cbx", Me(Ctrl.Name)) > 0 And State = True Then
            Me(Ctrl.Name).BackColor = vbWhite
        End If
    Next
    Me(Frame).enabled = State
End Sub


Private Sub CheckCCCombo(dlgCtrlName)
    If dlgCtrlName <> "cbxCCA" And Me.cbxCCA.ListIndex <> -1 Then Me.cbxCCA.Value = "A. PERSONAL OR CORPORATE GUARANTEES:"
    If dlgCtrlName <> "cbxCCB" And Me.cbxCCB.ListIndex <> -1 Then Me.cbxCCB.Value = "B. REALTY AND LEASEHOLDS:"
    If dlgCtrlName <> "cbxCCC" And Me.cbxCCC.ListIndex <> -1 Then Me.cbxCCC.Value = "C. SECURITY INTEREST:"
    If dlgCtrlName <> "cbxCCD" And Me.cbxCCD.ListIndex <> -1 Then Me.cbxCCD.Value = "D. ASSIGNMENT OF INTEREST:"
    If dlgCtrlName <> "cbxCCE" And Me.cbxCCE.ListIndex <> -1 Then Me.cbxCCE.Value = "E. WRITE YOUR OWN:"
End Sub

Private Sub cbxVLORateAdjusted_Change()
    If Me.cbxVLORateAdjusted.ListIndex = 3 Then
        Me.lblVLOEveryPeriod.enabled = True
        Me.lblVLOEveryPeriod.Caption = "every                    months      "
        Me.txtVLOEveryNum.enabled = True
        Me.txtVLOEveryNum.BackColor = vbWhite
        On Error Resume Next
        Me.txtVLOEveryNum.SetFocus
    ElseIf Me.cbxVLORateAdjusted.ListIndex = 8 Or Me.cbxVLORateAdjusted.ListIndex = 0 And PPeg >= 1 Then
        'Modified 4/13/2007
        Me.lblVLOEveryPeriod.enabled = True
        Me.lblVLOEveryPeriod.Caption = "every                    years      "
        Me.txtVLOEveryNum.enabled = True
        Me.txtVLOEveryNum.BackColor = vbWhite
        On Error Resume Next
        Me.txtVLOEveryNum.SetFocus
    ElseIf Me.cbxVLORateAdjusted.Text = "monthly" Then
        Me.txtVLOEveryNum.Text = ""
        Me.lblVLOEveryPeriod.enabled = False
        Me.txtVLOEveryNum.enabled = False
        Me.txtVLOEveryNum.BackColor = myGray
    Else
        Me.txtVLOEveryNum.Text = ""
        Me.lblVLOEveryPeriod.enabled = False
        Me.txtVLOEveryNum.enabled = False
        Me.txtVLOEveryNum.BackColor = myGray
    End If
    If Me.cbxVLORateAdjusted.Text = "monthly" Then
        Me.txtVLOEveryNum.Text = ""
        Me.txtVLOEveryNum.enabled = False
        Me.txtVLOEveryNum.BackColor = myGray
        Me.lblVLOEveryPeriod.enabled = False
    End If
End Sub

Private Sub cbxVLORateAdjusted_Enter()
    Me.cmdVLOInfo.enabled = False
    If Me.cbxVLORateAdjusted.ListCount = 0 Then
        VariableOptionList cbxVLORateAdjusted
    End If
End Sub

Private Sub chkAC1DisabilityInsurance_Change()
    PrevCtrl = Me.chkAC1DisabilityInsurance.Name
    CtrlOptChkClick PrevCtrl, 1
End Sub

Private Sub chkAC1LifeInsurance_Click()
    Me.txtIC5Insured.enabled = Me.chkAC1LifeInsurance.Value
    Me.txtIC5Amount.enabled = Me.chkAC1LifeInsurance.Value
    Me.lblAC1InsuredName.enabled = Me.chkAC1LifeInsurance.Value
    Me.lblAC1InsuredAmount.enabled = Me.chkAC1LifeInsurance.Value
    Me.cmdAC1New.enabled = Me.chkAC1LifeInsurance.Value
    Me.cmdAC1Info.enabled = Me.chkAC1LifeInsurance.Value
    If Me.chkAC1LifeInsurance.Value = True Then
        Me.txtIC5Insured.BackColor = vbWhite
        Me.txtIC5Amount.BackColor = vbWhite
        Me.txtIC5Insured.SetFocus
        Me.cmdAC1Info.enabled = True
        Me.cmdAC1New.enabled = False
        Me.cmdAC1Left.enabled = False
        Me.cmdAC1Right.enabled = False
        Me.cmdAC1Delete.enabled = False
        On Error Resume Next
        If Len(Me.txtIC5Insured.Text) > 0 Then
            Me.cmdAC1New.enabled = True
        End If
    Else
        Me.txtIC5Insured.Text = ""
        Me.txtIC5Amount.Text = ""
        Me.cmdAC1Info.enabled = False
        Me.cmdAC1New.enabled = False
        Me.cmdAC1Left.enabled = False
        Me.cmdAC1Right.enabled = False
        Me.cmdAC1Delete.enabled = False
        Me.txtIC5Insured.BackColor = myGray
        Me.txtIC5Amount.BackColor = myGray
    End If
    LastIdx = Val(Trim(ActiveDocument.Bookmarks("RPLast001").Range.Text))
    CurIdx = Val(Trim(ActiveDocument.Bookmarks("RPCur001").Range.Text))
    If Me.chkAC1LifeInsurance.Value = True Then
        If LastIdx > 0 Then
            Me.txtIC5Insured.Text = IIf(Left(ActiveDocument.Bookmarks("IC5Insured_" & CurIdx).Range.Text, 1) <> "[", ActiveDocument.Bookmarks("IC5Insured_" & CurIdx).Range.Text, "")
            Me.txtIC5Amount.Text = IIf(Left(ActiveDocument.Bookmarks("IC5Amount_" & CurIdx).Range.Text, 1) <> "[", ActiveDocument.Bookmarks("IC5Amount_" & CurIdx).Range.Text, "")
            UpdateChangeRP 2, 1, "AC1", "RPFirst001", "RPLast001"
        End If
    Else
        If LastIdx >= 1 Then
            If MsgBox("Unchecking this option will cause all Life Insurance     " & vbCrLf & _
                      "items to be deleted." & vbCrLf & vbCrLf & _
                      "If you wish to edit an individual item, use the '<' and '>' arrows to     " & vbCrLf & _
                      "locate the item and then make the desired changes." & vbCrLf & vbCrLf & _
                      "Otherwise, click Yes to delete all Life Insurance items.", _
                      vbExclamation + vbYesNo, _
                      "Wizard message ...") = vbYes Then
                ActiveDocument.Bookmarks("RPSection001").Range.Select
    'Insert AutoText
                ActiveDocument.AttachedTemplate.AutoTextEntries("LifeInsurance").Insert Where:=Selection.Range, RichText:=True
            Else
                Me.chkAC1LifeInsurance.Value = True
            End If
        End If
    End If
End Sub

Private Sub chkAC1MarineInsurance_Click()
    Me.txtAC1MarineVessels.enabled = Me.chkAC1MarineInsurance.Value
    Me.lblAC1ListVessels.enabled = Me.chkAC1MarineInsurance.Value
    If Me.chkAC1MarineInsurance.Value = True Then
        Me.txtAC1MarineVessels.BackColor = vbWhite
        Me.txtAC1MarineVessels.SetFocus
    Else
        Me.txtAC1MarineVessels.Text = ""
        Me.txtAC1MarineVessels.BackColor = myGray
    End If
End Sub

Private Sub chkAC1OtherInsurance_Click()
    If Me.chkAC1OtherInsurance.Value = True Then
        Me.optAC1Select.enabled = True
        Me.optAC1WriteYourOwn.enabled = True
        If Me.optAC1Select.Value = 0 Then
            Me.optAC1WriteYourOwn.Value = 1
        End If
    Else
        Me.optAC1Select.Value = 0
        Me.optAC1WriteYourOwn.Value = 0
        Me.optAC1Select.enabled = False
        Me.optAC1WriteYourOwn.enabled = False
        Me.cbxAC1OtherInsurance.ListIndex = -1
        Me.cbxAC1OtherInsurance.enabled = False
        Me.cbxAC1OtherInsurance.Locked = True
        Me.cbxAC1OtherInsurance.BackColor = myGray
        Me.txtAC1OtherInsurance.enabled = False
        Me.txtAC1OtherInsurance.Locked = True
        Me.txtAC1OtherInsurance.BackColor = myGray
    End If
End Sub

Private Sub chkAC1RealEstateInsurance_Click()
    Me.chkAC1BusinessInsurance.enabled = Me.chkAC1RealEstateInsurance.Value
    If Me.chkAC1RealEstateInsurance.Value = False Then
        Me.chkAC1BusinessInsurance.Value = False
    End If
    On Error Resume Next
    Me.chkAC1BusinessInsurance.SetFocus
End Sub

Private Sub chkCC_C1EV1D_Click()
    If Me.chkCC_C1EV1D.Value = True Then
        Me.txtCC_C1EV1D.enabled = True
        Me.txtCC_C1EV1D.BackColor = vbWhite
        If Me.cbxCCState2.Text = "MA" Then
            Me.txtCC_C1EV1D.Text = "Policy will not contain an M.G.L. Section 21(e) exception unless a detailed engineering study satisfactory to Lender is submitted prior to closing"
        End If
        Me.txtCC_C1EV1D.SetFocus
    Else
        Me.txtCC_C1EV1D.enabled = False
        Me.txtCC_C1EV1D.BackColor = myGray
        If Me.cbxCCState2.Text = "MA" Then
            Me.txtCC_C1EV1D.Text = "Policy will not contain an M.G.L. Section 21(e) exception unless a detailed engineering study satisfactory to Lender is submitted prior to closing"
        Else
            Me.txtCC_C1EV1D.Text = ""
        End If
    End If
End Sub

Private Sub chkCC_C1EVOther_Click()
    If Me.chkCC_C1EVOther.Value = True Then
        Me.txtCC_C1EVOther.enabled = True
        Me.txtCC_C1EVOther.BackColor = vbWhite
        Me.txtCC_C1EVOther.SetFocus
    Else
        Me.txtCC_C1EVOther.enabled = False
        Me.txtCC_C1EVOther.BackColor = myGray
        Me.txtCC_C1EVOther.Text = ""
    End If
End Sub

Private Sub txtCCTribeLocation_MouseDown(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
    curCtrl = "txtCCTribeLocation"
    RetrieveInfo = True
    If Button = 2 Then
        ButtonState = 0
        If Me.cmdFirst.enabled = True Then
            ButtonState = 1
        End If
        If Me.cmdback.enabled = True Then
            ButtonState = ButtonState + 2
        End If
        If Me.cmdNext.enabled = True Then
            ButtonState = ButtonState + 3
        End If
        If Me.cmdFinish.enabled = True Then
            ButtonState = ButtonState + 4
        End If
        Y = Y + 126
        If Len(Me(curCtrl).Text) > 0 Then
            SaveData "Leasehold", "Collateral Condition", "Save", curCtrl, "Address", Me.mpgWizard.Value, X, Y, Me.mpgCCOptions.Value
        Else
            SaveData "Leasehold", "Collateral Condition", "Retrieve", curCtrl, "Address", Me.mpgWizard.Value, X, Y, Me.mpgCCOptions.Value
        End If
    End If
End Sub

Private Sub txtCCVehicleMake_Exit(ByVal Cancel As MSForms.ReturnBoolean)
    CommandSetup "EnableFinish"
End Sub

Private Sub txtDILastDisbursement_Enter()
    Me.txtDILastDisbursement.SelLength = 99
End Sub

Private Sub txtGTPrincipal_Exit(ByVal Cancel As MSForms.ReturnBoolean)
    curCtrl = "txtGTPrincipal"
    If Me(curCtrl).Text <> "" Then
        If IsNumeric(Me(curCtrl).Text) Then
            InputFormat Me(curCtrl).Name, "TextIsNumber", 2
        Else
            MyErrorMsg Me.mpgWizard.Value, "Numeric", True, curCtrl
        End If
    End If
End Sub

Private Sub txtIC5Insured_MouseDown(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
    curCtrl = "txtIC5Insured"
    If Button = 2 Then
        ButtonState = 0
        If Me.cmdFirst.enabled = True Then
            ButtonState = 1
        End If
        If Me.cmdback.enabled = True Then
            ButtonState = ButtonState + 2
        End If
        If Me.cmdNext.enabled = True Then
            ButtonState = ButtonState + 3
        End If
        If Me.cmdFinish.enabled = True Then
            ButtonState = ButtonState + 4
        End If

        If Len(Me.txtIC5Insured.Text) > 0 Then
            SaveData "Insured", "Additional Conditions 1", "Save", curCtrl, "Name", Me.mpgWizard.Value, X, Y
        Else
            SaveData "Insured", "Additional Conditions 1", "Retrieve", curCtrl, "Name", Me.mpgWizard.Value, X, Y
        End If
    End If
End Sub
Private Sub txtIRFixedVariablePeriod_Enter()
    Me.cmdIROverPrimeInfo.enabled = False
End Sub

Private Sub txtIRSplitPercent2_Enter()
    Me.cmdIROverPrimeInfo.enabled = False
End Sub

Private Sub txtIRSplitRate2_Enter()
    Me.cmdIROverPrimeInfo.enabled = False
End Sub

Private Sub txtLDAmt_BeforeUpdate(ByVal Cancel As MSForms.ReturnBoolean)
'ARRA Change 3/15/2009
'Not used 3/15/2009
'    If Me.chkLIARRA.Value = True And IsNumeric(Me.txtLDAmt.Text) Then
'        If Me.txtLDAmt.Text > 250000 Then
'            Cancel = True
'            MsgBox "This loan is a Pre-Qual loan authorization." & vbCrLf & vbCrLf & _
'                   "The maximum loan amount permitted in a Pre-Qual scenario     " & vbCrLf & _
'                   "is $250,000." & vbCrLf & vbCrLf & _
'                   "Please re-enter the loan amount.", _
'                   vbInformation + vbOKOnly, _
'                   "Loan Amount"
'            Me.txtLDAmt.Text = ""
'            Me.txtLDAmt.SetFocus
'            Exit Sub
'        End If
'    End If
'    If Me.txtLDAmt.Text <> "" And IsNumeric(Me.txtLDAmt.Text) Then
'        If Me.txtLDAmt.Text > 2000000 And AcceptCurVal = False Then
'            Cancel = True
'                If MsgBox("The maximum loan amount permitted in a 7(a) Loan     " & vbCrLf & _
'                   "is $2,000,000 as of Wizard release date." & vbCrLf & vbCrLf & _
'                   "Please double-check the loan amount." & vbCrLf & vbCrLf & _
'                    "Click 'Cancel' to modify the entered amount.     " & vbCrLf & vbCrLf & _
'                    "Click 'Retry' to override the maximum loan amount." & vbCrLf & _
'                    "(use only if SBA has increased the maximum since Wizard release date)     ", _
'                    vbInformation + vbRetryCancel + vbDefaultButton2, _
'                    "Loan Amount") = vbRetry Then
'                    AcceptCurVal = True
'                    Exit Sub
'                Else
'                    Me.txtLDAmt.SetFocus
'                    Exit Sub
'                End If
'        End If
'    End If
End Sub

Private Sub txtLDAmt_Enter()
    Me.txtLDAmt.SelLength = 99
End Sub

Private Sub txtLDGuaranteeFee_Enter()
    Me.txtLDGuaranteeFee.SelLength = 99
End Sub

Private Sub txtLDGuaranteeFee_Exit(ByVal Cancel As MSForms.ReturnBoolean)
    curCtrl = "txtLDGuaranteeFee"
    If Me(curCtrl).Text <> "" Then
        If IsNumeric(Me(curCtrl).Text) Then
            InputFormat Me(curCtrl).Name, "TextIsNumber", 2
        Else
            UpdateLI3 = 1
            MyErrorMsg Me.mpgWizard.Value, "Numeric", True, curCtrl
        End If
    End If
End Sub
Public Sub ShowPopup(NameType, SectionName, Action, curCtrl, SaveType, Page, X, Y, Optional CCPage)
    Set CBar = CommandBars.Add("AddressMenu", msoBarPopup)
    If Action = "Save" Then
        Set CBtnSave = CBar.Controls.Add(msoControlButton)
        With CBtnSave
            .Caption = "&Save " & NameType & " " & SaveType
            .FaceId = 317
            .OnAction = "SaveIt"
            If IsMissing(CCPage) Then
                .Tag = Chr(34) & NameType & "|" & SectionName & "|" & Action & "|" & curCtrl & "|" & SaveType & "|" & Trim(Str(Page)) & "|" & X & "|" & Y & "|" & Chr(34)
            Else
                .Tag = Chr(34) & NameType & "|" & SectionName & "|" & Action & "|" & curCtrl & "|" & SaveType & "|" & Trim(Str(Page)) & "|" & X & "|" & Y & "|" & CCPage & Chr(34)
            End If
        End With
    End If
    If Action = "Retrieve" Then
        Set CBtnRetrieve = CBar.Controls.Add(msoControlButton)
        With CBtnRetrieve
            .Caption = "Retrieve " & NameType & " " & SaveType
            .FaceId = 316
            .OnAction = "SaveIt"
            If IsMissing(CCPage) Then
                .Tag = Chr(34) & NameType & "|" & SectionName & "|" & Action & "|" & curCtrl & "|" & SaveType & "|" & Trim(Str(Page)) & "|" & X & "|" & Y & "|" & Chr(34)
            Else
                .Tag = Chr(34) & NameType & "|" & SectionName & "|" & Action & "|" & curCtrl & "|" & SaveType & "|" & Trim(Str(Page)) & "|" & X & "|" & Y & "|" & CCPage & Chr(34)
            End If
        End With
    End If
    Set CBtnCancel = CBar.Controls.Add(msoControlButton)
    With CBtnCancel
        .Caption = "Cancel"
        .FaceId = 358
    End With
    X = X + Me.Left + Me(curCtrl).Left + Me(curCtrl).Width + 20
    Y = Y + Me.Top + Me(curCtrl).Top + Me(curCtrl).Height + 95
    If X > 600 Then
        X = 600
    End If
    CBar.ShowPopup X, Y
    CBar.Delete
    X = 0
    Y = 0
    Set CBar = Nothing
    Set CBtnSave = Nothing
    Set CBtnRetrieve = Nothing
End Sub
Public Sub SaveData(NameType, SectionName, Action, curCtrl, SaveType, Page, X, Y, Optional CCPage)

    Static click_flag As Long

    ' The following is required because the MouseDown event
    ' fires twice when right-clicked !!
    click_flag = click_flag + 1

    ' Do nothing on first firing of MouseDown event
    If (click_flag Mod 2 <> 0) Then Exit Sub
    If IsMissing(CCPage) Then
        ShowPopup NameType, SectionName, Action, curCtrl, SaveType, Page, X, Y
    Else
        ShowPopup NameType, SectionName, Action, curCtrl, SaveType, Page, X, Y, Int(CCPage)
    End If
End Sub

Sub SaveInfo(NameType, SectionName, Action, curCtrl, SaveType, Page, X, Y, Optional CCPage)
    Dim cNameNo As Integer
    On Error Resume Next
    If ActiveDocument.ProtectionType <> wdNoProtection Then
        ActiveDocument.Unprotect "snad7623"
    End If
    'If ActiveDocument.ProtectionType = wdNoProtection Then
    '  Else
    '    ActiveDocument.Protect wdNoProtection
    'End If
    If SaveType = "Name" Then
        vFocus = curCtrl
        RetrieveInfo = True
        If Action = "Save" Then
            vFocus = curCtrl
            cNameNo = 0
            On Error Resume Next
            cNameNo = ActiveDocument.Variables("cNameNo").Value
            If cNameNo = 0 Then
                ActiveDocument.Variables.Add "cNameNo", 1
                cNameNo = ActiveDocument.Variables("cNameNo").Value
            End If
            vDocVarName = vFocus + "Name" + Trim(Str(cNameNo))
            ActiveDocument.Variables.Add vDocVarName, Me(vFocus).Text
            CName = ""
            CName = ActiveDocument.Variables(vDocVarName).Value
            cNameNo = cNameNo + 1
            ActiveDocument.Variables("cNameNo").Value = cNameNo
            NameType = IIf(InStr(1, NameType, """") > 0, Mid(NameType, 2), NameType)
            MsgBox CName & vbCr & vbCr & "added to Names List.   ", vbInformation, NameType
            Me(vFocus).SetFocus
        ElseIf Action = "Retrieve" Then
            PrevCtrl = curCtrl
            tabPage = Page
            If Not IsMissing(CCPage) Then
                tabCCPage = CCPage
            End If
            Me.mpgWizard.Value = Me.mpgWizard.Pages("pgSaved").index
            PageSetup 99, 0
            Me.prgPleaseWait.visible = False
            Me.lbAddressList.visible = False
            Me.lbNamesList.visible = True
            If Me.lbNamesList.ListCount = 0 Then
                MsgBox "No names available", vbInformation, WizInfo.WizName & " Wizard"
                Me.mpgWizard.Value = tabPage
                If Not IsMissing(CCPage) Then
                    Me.mpgCCOptions.Value = CCPage
                End If
                PageSetup tabPage, 0
                CommandSetup ButtonState
                RetrieveInfo = False
            End If
        End If
        On Error Resume Next
        Me(vFocus).SetFocus
    ElseIf SaveType = "Address" Then
        vFocus = curCtrl
        If Action = "Save" Then
            vFocus = curCtrl
            cAddrNo = 0
            On Error Resume Next
            cAddressNo = ActiveDocument.Variables("cAddrNo").Value
            If cAddrNo = 0 Then
                ActiveDocument.Variables.Add "cAddrNo", 1
                cAddrNo = ActiveDocument.Variables("cAddrNo").Value
            End If
            vDocVarName = vFocus + "_Address" + Trim(Str(cAddrNo))
            ActiveDocument.Variables.Add vDocVarName, Me(vFocus).Text
            cAddress = ""
            cAddress = ActiveDocument.Variables(vDocVarName).Value
            cAddrNo = cAddrNo + 1
            ActiveDocument.Variables("cAddrNo").Value = cAddrNo
            MsgBox cAddress & vbCr & vbCr & "added to Address List.   ", vbInformation, NameType
            Me(vFocus).SetFocus
        Else
            PrevCtrl = curCtrl
            tabPage = Page
            If Not IsMissing(CCPage) Then
                tabCCPage = CCPage
            End If
            Me.mpgWizard.Value = Me.mpgWizard.Pages("pgSaved").index
            PageSetup 99, 0
            Me.prgPleaseWait.visible = False
            Me.lbAddressList.visible = True
            Me.lbNamesList.visible = False
            If Me.lbAddressList.ListCount = 0 Then
                MsgBox "No addresses available", vbInformation, WizInfo.WizName & " Wizard"
                Me.mpgWizard.Value = tabPage
                PageSetup tabPage, 0
                If Not IsMissing(CCPage) Then
                    Me.mpgCCOptions.Value = CCPage
                End If
                CommandSetup ButtonState
                RetrieveInfo = False
            End If
            On Error Resume Next
            Me(PrevCtrl).SetFocus
        End If
        On Error Resume Next
        Me(vFocus).SetFocus
    End If
End Sub
Private Sub txtLDGuaranteePct_Enter()
    Me.txtLDGuaranteePct.SelLength = 99
End Sub

Private Sub txtLDMaturityMonths_Enter()
    Me.txtLDMaturityMonths.SelLength = 99
End Sub

Private Sub txtLDMaturityYears_Enter()
    Me.txtLDMaturityYears.SelLength = 99
End Sub

Private Sub txtLDOngoingServicingFee_Exit(ByVal Cancel As MSForms.ReturnBoolean)
    curCtrl = "txtLDOngoingServicingFee"
    If Me(curCtrl).Text <> "" Then
        If IsNumeric(Me(curCtrl).Text) Then
            InputFormat Me(curCtrl).Name, "TextIsNumber", 3
        Else
            UpdateLI3 = 1
            MyErrorMsg Me.mpgWizard.Value, "Numeric", True, curCtrl
    '        CommandSetup 7
        End If
    End If
End Sub

Private Sub txtLILenderSign_Exit(ByVal Cancel As MSForms.ReturnBoolean)
    txtLILenderSign_Change
End Sub

Private Sub txtLIName_MouseDown(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
    If Button = 2 Then
        ButtonState = 0
        If Me.cmdFirst.enabled = True Then
            ButtonState = 1
        End If
        If Me.cmdback.enabled = True Then
            ButtonState = ButtonState + 2
        End If
        If Me.cmdNext.enabled = True Then
            ButtonState = ButtonState + 3
        End If
        If Me.cmdFinish.enabled = True Then
            ButtonState = ButtonState + 4
        End If

        If Len(Me.txtLIName.Text) > 0 Then
            SaveData "Lender", "Lender Information", "Save", "txtLIName", "Name", Me.mpgWizard.Value, X, Y
        Else
    '    SaveData "Lender", "Lender Information", "Retrieve", "txtLIName", "Name", Me.mpgWizard.Value
        End If
    End If
End Sub

Private Sub txtLIZip_Enter()
    If PrevPage <> 26 Then
        PrevPage = Me.mpgWizard.Value
    End If
End Sub

Private Sub txtLIZip_Exit(ByVal Cancel As MSForms.ReturnBoolean)
    curCtrl = "txtLIZip"
    If InStr(1, Me(curCtrl).Text, "-") > 0 Then
        ctrltext = Mid(Me(curCtrl).Text, 1, InStr(1, Me(curCtrl).Text, "-") - 1) & Mid(Me(curCtrl).Text, InStr(1, Me(curCtrl).Text, "-") + 1)
    Else
        ctrltext = Me(curCtrl).Text
    End If
    If Len(ctrltext) <> 5 And Len(ctrltext) <> 9 Then
        If InStr(1, Me(curCtrl).Text, "-") > 0 Then
            cLen = Len(ctrltext) - 1 & " (without '-')"
        Else
            cLen = Len(ctrltext)
        End If
        UpdateLI1 = 1
        MyErrorMsg Me.mpgWizard.Value, "Length", True, curCtrl, , cLen
    '        CommandSetup 3
        Exit Sub
    End If
    If Not IsNumeric(ctrltext) Then
        UpdateLI1 = 1
        MyErrorMsg Me.mpgWizard.Value, "Numeric", True, curCtrl, , cLen
    '        CommandSetup 3
        Exit Sub
    End If
    If IsNumeric(ctrltext) And Len(ctrltext) = 9 Then
        Me(curCtrl).Text = Format(Str(ctrltext), "00000\-####")
    ElseIf IsNumeric(ctrltext) And Len(ctrltext) = 5 Then
        Me(curCtrl).Text = Format(Str(ctrltext), "00000")
    End If
End Sub

Private Sub txtLSApprovalDate_BeforeUpdate(ByVal Cancel As MSForms.ReturnBoolean)
    Me.txtLSApprovalDate.SelLength = 99
    If Len(Me.txtLSApprovalDate.Text) > 2 Then
        If Not IsDate(txtLSApprovalDate) Then
            Cancel = True
            MsgBox "The value " & TextBox1 & " is not a valid date!"
            txtLSApprovalDate = Empty    'optional
        End If
    End If
End Sub

Private Sub txtLSApprovalDate_Enter()
    If Me.txtLDGuaranteeFee.Text = "" Then
        UpdateGuaranteeFee
    End If
End Sub

Private Sub txtLSLoanNumber_Enter()
    If Me.cmdFinish.enabled = False Then
        CommandSetup 7
    End If
    With Me.txtLSLoanNumber
        .SelStart = 0
        .SelLength = Len(.Text)
    End With
    If Me.txtLDGuaranteeFee.Text = "" Then
        UpdateGuaranteeFee
    End If
End Sub

Private Sub txtLSLoanNumber_Exit(ByVal Cancel As MSForms.ReturnBoolean)
    curCtrl = "txtLSLoanNumber"
    If Me(curCtrl).Text <> "" And Me(curCtrl).Text <> "--" Then
        If InStr(1, Me(curCtrl).Text, "-") > 0 Then
            ctrltext = Mid(Me(curCtrl).Text, 1, InStr(1, Me(curCtrl).Text, "-") - 1) & Mid(Me(curCtrl).Text, InStr(1, Me(curCtrl).Text, "-") + 1)
        Else
            ctrltext = Me(curCtrl).Text
        End If
        If Len(ctrltext) < 10 Or Len(ctrltext) > 10 Then
            cLen = Len(ctrltext)
            UpdateLI3 = 1
            MyErrorMsg Me.mpgWizard.Value, "Length", True, curCtrl, , cLen
    '        CommandSetup 7
        End If
        If IsNumeric(ctrltext) Then
            If InStr(1, ctrltext, "-") > 0 Then
            Else
                Me(curCtrl).Text = Format(ctrltext, "########\-##")
            End If
        End If
    ElseIf Me(curCtrl).Text <> "--" Then
        Cancel = True
        If MsgBox("The Loan Number cannot be blank." & vbCrLf & vbCrLf & _
                  "If you wish to leave a space in the Authorization" & vbCrLf & _
                  "as a placeholder, type two hyphens ('--') in the" & vbCrLf & _
                  "Loan Number.", _
                  vbInformation + vbOKOnly, _
                  "Loan Number Placeholder") = vbOK Then
            On Error Resume Next
            Me.txtLSLoanNumber.SetFocus
            Me.txtLSLoanNumber.Text = "--"
            Application.ScreenRefresh
            curCtrl = ""
            CommandSetup 7
            Exit Sub
        End If
    End If
End Sub

Private Sub txtLSPrefix_Enter()
    curCtrl = "txtLDOngoingServicingFee"
    If Me(curCtrl).Text <> "" Then
        If IsNumeric(Me(curCtrl).Text) Then
            InputFormat Me(curCtrl).Name, "TextIsNumber", 3
        Else
            UpdateLI3 = 1
            MyErrorMsg Me.mpgWizard.Value, "Numeric", True, curCtrl
    '        CommandSetup 7
        End If
    End If
    Me.txtLSPrefix.SetFocus
    Me.txtLSPrefix.Text = Trim(Me.txtLSPrefix.Text)
    Me.txtLSPrefix.SelLength = 99
    'Chr(160) is REQUIRED Space
    If Me.txtLDGuaranteeFee.Text = "" Then
        UpdateGuaranteeFee
    End If
    If InStr(1, Me.txtLSPrefix.Text, Chr(160)) > 0 Then
        For X = 1 To 8
            If Mid(Me.txtLSPrefix.Text, X, 1) = Chr(160) Then
            Else
                txt = txt & Mid(Me.txtLSPrefix.Text, X, 1)
            End If
        Next
        Me.txtLSPrefix.Text = txt
    Else
        Me.txtLSPrefix.Text = ""
    End If
End Sub

Private Sub txtLSPrefix_Exit(ByVal Cancel As MSForms.ReturnBoolean)
'Chr(160) is REQUIRED Space
    Dim txt As String
    If InStr(1, Me.txtLSPrefix.Text, Chr(160)) > 0 Then
        For X = 1 To 8
            If Mid(Me.txtLSPrefix.Text, X, 1) = Chr(160) Then
            Else
                txt = txt & Mid(Me.txtLSPrefix.Text, X, 1)
            End If
        Next
        Me.txtLSPrefix.Text = txt
    End If
    If Me.txtLSPrefix.Text <> "" Then
        Me.txtLSPrefix.Text = Trim(UCase(Me.txtLSPrefix.Text) + Chr(160))
    End If
End Sub

Private Sub txtLSReceiptDate_Enter()
    Me.txtLSReceiptDate.SelLength = 99
    If Me.txtLDGuaranteeFee.Text = "" Then
        UpdateGuaranteeFee
    End If
End Sub

Private Sub txtLSSuffix_Enter()
    Dim txt As String
    Me.txtLSSuffix.Text = Trim(Me.txtLSSuffix.Text)
    Me.txtLSSuffix.SelLength = 99
    'Chr(160) is REQUIRED Space
    If Me.txtLDGuaranteeFee.Text = "" Then
        UpdateGuaranteeFee
    End If
    If InStr(1, Me.txtLSSuffix.Text, Chr(160)) > 0 Then
        For X = 1 To 4
            If Mid(Me.txtLSSuffix.Text, X, 1) = Chr(160) Then
            Else
                txt = txt & Mid(Me.txtLSSuffix.Text, X, 1)
            End If
        Next
        Me.txtLSSuffix.Text = txt
    Else
        Me.txtLSSuffix.Text = ""
    End If
End Sub

Private Sub txtLSSuffix_Exit(ByVal Cancel As MSForms.ReturnBoolean)
'Chr(160) is REQUIRED Space
    Dim txt As String
    If InStr(1, Me.txtLSSuffix.Text, Chr(160)) > 0 Then
        For X = 1 To 4
            If Mid(Me.txtLSSuffix.Text, X, 1) = Chr(160) Then
            Else
                txt = txt & Mid(Me.txtLSSuffix.Text, X, 1)
            End If
        Next
        Me.txtLSSuffix.Text = txt
    End If
    If Me.txtLSSuffix.Text <> "" Then
        Me.txtLSSuffix.Text = Chr(160) + Trim(UCase(Me.txtLSSuffix.Text))
    End If
End Sub

Private Sub txtNonCitizen_MouseDown(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
    If Button = 2 Then
        ButtonState = 0
        If Me.cmdFirst.enabled = True Then
            ButtonState = 1
        End If
        If Me.cmdback.enabled = True Then
            ButtonState = ButtonState + 2
        End If
        If Me.cmdNext.enabled = True Then
            ButtonState = ButtonState + 3
        End If
        If Me.cmdFinish.enabled = True Then
            ButtonState = ButtonState + 4
        End If

        If Len(Me.txtNonCitizen.Text) > 0 Then
            SaveData "Non-Citizen Owner", "Additional Conditions 2", "Save", "txtNonCitizen", "Name", Me.mpgWizard.Value, X, Y
        Else
            SaveData "Non-Citizen Owner", "Additional Conditions 2", "Retrieve", "txtNonCitizen", "Name", Me.mpgWizard.Value, X, Y
        End If
    End If
End Sub

Private Sub txtOCName_MouseDown(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
    If Button = 2 Then
        ButtonState = 0
        If Me.cmdFirst.enabled = True Then
            ButtonState = 1
        End If
        If Me.cmdback.enabled = True Then
            ButtonState = ButtonState + 2
        End If
        If Me.cmdNext.enabled = True Then
            ButtonState = ButtonState + 3
        End If
        If Me.cmdFinish.enabled = True Then
            ButtonState = ButtonState + 4
        End If
        Y = Y + 131 + 24
        If Len(Me.txtOCName.Text) > 0 Then
            SaveData "Operating Company", "Operating Company Information", "Save", "txtOCName", "Name", Me.mpgWizard.Value, X, Y
        Else
            SaveData "Operating Company", "Operating Company Information", "Retrieve", "txtOCName", "Name", Me.mpgWizard.Value, X, Y
        End If
    End If
End Sub

Private Sub txtOCZip_Exit(ByVal Cancel As MSForms.ReturnBoolean)
    Dim ctrltext As String
    Dim cLen As String
    curCtrl = "txtOCZip"
    If InStr(1, Me(curCtrl).Text, "-") > 0 Then
        ctrltext = Mid(Me(curCtrl).Text, 1, InStr(1, Me(curCtrl).Text, "-") - 1) & Mid(Me(curCtrl).Text, InStr(1, Me(curCtrl).Text, "-") + 1)
    Else
        ctrltext = Me(curCtrl).Text
    End If
    If Len(ctrltext) <> 5 And Len(ctrltext) <> 9 Then
        If InStr(1, Me(curCtrl).Text, "-") > 0 Then
            cLen = Len(ctrltext) - 1 & " (without '-')"
        Else
            cLen = Len(ctrltext)
        End If
        UpdateLI3 = 1
        MyErrorMsg Me.mpgWizard.Value, "Length", True, curCtrl, , cLen
    '        CommandSetup 3
        Exit Sub
    End If
    If Not IsNumeric(ctrltext) Then
        UpdateLI3 = 1
        MyErrorMsg Me.mpgWizard.Value, "Numeric", True, curCtrl, , cLen
    '        CommandSetup 3
    End If
    If IsNumeric(ctrltext) And Len(ctrltext) = 9 Then
        Me(curCtrl).Text = Format(ctrltext, "00000\-####")
    ElseIf IsNumeric(ctrltext) And Len(ctrltext) = 5 Then
        Me(curCtrl).Text = Format(ctrltext, "00000")
    End If
End Sub

Private Sub txtOLODaysLate_Exit(ByVal Cancel As MSForms.ReturnBoolean)
    curCtrl = "txtOLODaysLate"
    If Me(curCtrl).Value <= 9 Then
        Cancel = True
        MsgBox "The Days Late value must be     " & vbCrLf & _
               "equal to or greater than 10." & vbCrLf & vbCrLf & _
               "Please check your entry.", _
               vbExclamation + vbOKOnly, _
               "Days Late"
        Me(curCtrl).Value = 10
    End If
End Sub

Private Sub txtOLOLateChargePct_Exit(ByVal Cancel As MSForms.ReturnBoolean)
    curCtrl = "txtOLOLateChargePct"
    If Me(curCtrl).Value > 5 Then
        Cancel = True
        MsgBox "The Late Charge percent must be     " & vbCrLf & _
               "equal to or less than 5." & vbCrLf & vbCrLf & _
               "Please check your entry.", _
               vbExclamation + vbOKOnly, _
               "Days Late"
        Me(curCtrl).Value = "5.00"
        Exit Sub
    End If
    If Me(curCtrl).Text <> "" Then
        If IsNumeric(Me(curCtrl).Text) Then
            InputFormat Me(curCtrl).Name, "TextIsNumber", 2
        Else
            UpdateRT4 = 1
            MyErrorMsg Me.mpgWizard.Value, "Numeric", True, curCtrl
    '        CommandSetup 7
        End If
    End If
End Sub

Private Sub txtPTAmount1_Enter()
    cbxPTPeriod1_Enter
    If Me.cbxPTPeriod1.ListIndex = -1 Then
        Me.cbxPTPeriod1.ListIndex = 0
    End If
    cbxPTDayCount1_Enter
    If Me.cbxPTDayCount1.ListIndex = -1 Then
        Me.cbxPTDayCount1.ListIndex = 0
    End If
End Sub

Private Sub txtPTAmount2_Enter()
    cbxPTPeriod2_Enter
    If Me.cbxPTPeriod2.ListIndex = -1 Then
        Me.cbxPTPeriod2.ListIndex = 0
    End If
    cbxPTDayCount2_Enter
    If Me.cbxPTDayCount2.ListIndex = -1 Then
        Me.cbxPTDayCount2.ListIndex = 0
    End If
End Sub

Private Sub txtPTAmount4_Enter()
    cbxPTDayCount4_Enter
    If Me.cbxPTDayCount4.ListIndex = -1 Then
        Me.cbxPTDayCount4.ListIndex = 0
    End If
End Sub

Private Sub txtPTAmount5_Enter()
    cbxPTPeriod5_Enter
    If Me.cbxPTPeriod5.ListIndex = -1 Then
        Me.cbxPTPeriod5.ListIndex = 0
    End If
    cbxPTDayCount5_Enter
    If Me.cbxPTDayCount5.ListIndex = -1 Then
        Me.cbxPTDayCount5.ListIndex = 0
    End If
End Sub

Private Sub txtPTEveryNum1_Exit(ByVal Cancel As MSForms.ReturnBoolean)
    curCtrl = "txtPTEveryNum1"
    If Me(curCtrl).Text <> "" Then
        If IsNumeric(Me(curCtrl).Text) Then
            InputFormat Me(curCtrl).Name, "TextIsNumber", 0
        Else
            UpdateRT3 = 1
            MyErrorMsg Me.mpgWizard.Value, "Numeric", True, curCtrl
    '        CommandSetup 3
        End If
    End If
End Sub

Private Sub txtPTEveryNum2_Exit(ByVal Cancel As MSForms.ReturnBoolean)
    curCtrl = "txtPTEveryNum2"
    If Me(curCtrl).Text <> "" Then
        If IsNumeric(Me(curCtrl).Text) Then
            InputFormat Me(curCtrl).Name, "TextIsNumber", 0
        Else
            UpdateRT3 = 1
            MyErrorMsg Me.mpgWizard.Value, "Numeric", True, curCtrl
    '        CommandSetup 3
        End If
    End If
End Sub

Private Sub txtPTEveryNum3_Exit(ByVal Cancel As MSForms.ReturnBoolean)
    curCtrl = "txtPTEveryNum3"
    If Me(curCtrl).Text <> "" Then
        If IsNumeric(Me(curCtrl).Text) Then
            InputFormat Me(curCtrl).Name, "TextIsNumber", 0
        Else
            UpdateRT3 = 1
            MyErrorMsg Me.mpgWizard.Value, "Numeric", True, curCtrl
    '        CommandSetup 3
        End If
    End If
End Sub

Private Sub txtPTEveryNum5_Exit(ByVal Cancel As MSForms.ReturnBoolean)
    curCtrl = "txtPTEveryNum5"
    If Me(curCtrl).Text <> "" Then
        If IsNumeric(Me(curCtrl).Text) Then
            InputFormat Me(curCtrl).Name, "TextIsNumber", 0
        Else
            UpdateRT3 = 1
            MyErrorMsg Me.mpgWizard.Value, "Numeric", True, curCtrl
    '        CommandSetup 3
        End If
    End If
End Sub

Private Sub txtRTCurtailment_Exit(ByVal Cancel As MSForms.ReturnBoolean)
    curCtrl = "txtRTCurtailment"
    If Me(curCtrl).Text <> "" Then
        If IsNumeric(Me(curCtrl).Text) Then
            InputFormat Me(curCtrl).Name, "TextIsNumber", 1
        Else
            UpdateRT2 = 1
            MyErrorMsg Me.mpgWizard.Value, "Numeric", True, curCtrl
    '        CommandSetup 3
        End If
    End If
End Sub

Private Sub txtRTESF_Exit(ByVal Cancel As MSForms.ReturnBoolean)
    curCtrl = "txtRTESF"
    If Me(curCtrl).Text <> "" And Me(curCtrl).Text > 2 Then
            Cancel = True
            If MsgBox("The maximum Extraordinary Servicing Fee is 2.0%" & vbCrLf & vbCrLf & _
                      "Defaulting to 2.0%.", _
                      vbInformation + vbOKOnly, _
                      "Extraordinary Servicing Fee") = vbOK Then
                Me(curCtrl).SetFocus
                Me(curCtrl).Value = "2.0"
                Exit Sub
            End If
    Else
        If Me(curCtrl).Text <> "" Then
            If IsNumeric(Me(curCtrl).Text) Then
                InputFormat Me(curCtrl).Name, "TextIsNumber", 2
            Else
                MyErrorMsg Me.mpgWizard.Value, "Numeric", True, curCtrl
            End If
        End If
    End If
End Sub

Private Sub txtSBAName_Change()
    If Me.cbxSBAName.enabled = True Then
        Me.txtSBAName.Locked = True
        Me.txtSBAName.enabled = True
        Me.txtSBAAddress.enabled = True
        Me.txtSBAAddress.BackColor = myGray
        Me.txtSBAAddress.Locked = True
        Me.txtSBAAddress2.enabled = True
        Me.txtSBAAddress2.BackColor = myGray
        Me.txtSBAAddress2.Locked = True
        Me.txtSBACity.enabled = True
        Me.txtSBACity.BackColor = myGray
        Me.txtSBACity.Locked = True
        Me.cbxSBAState.enabled = True
        Me.cbxSBAState.BackColor = myGray
        Me.cbxSBAState.Locked = True
        Me.txtSBAZip.enabled = True
        Me.txtSBAZip.BackColor = myGray
        Me.txtSBAZip.Locked = True
        Me.cmdResetSBA.visible = False
        Me.cmdSBAEdit.visible = True
    End If
End Sub

Private Sub txtSBAName_Enter()
    Dim MySection As String
    Dim MyKey As String
    Dim xx As String
    '  On Error Resume Next
    MyKey = "NoList"
    MySection = "HKEY_CURRENT_USER\Software\SBA\" + WizInfo.WizSection + "\" + WizInfo.WizVer
    xx = System.PrivateProfileString("", MySection, MyKey)
    If Me.txtSBAName.Text = "" And Me.cbxSBAName.enabled = False Then
        If System.PrivateProfileString("", MySection, "SBAName") = "" Then
            MsgBox "The Wizard is unable to read the SBA Offices list." & vbCrLf & vbCrLf & _
                   "Please enter the correct SBA Office name and address in the      " & vbCrLf & _
                   "appropriate textboxes." & vbCrLf & vbCrLf & _
                   "Once entered, click Default to save the information for" & vbCrLf & _
                   "future Authorizations.", _
                   vbExclamation + vbOKOnly, _
                   "SBA Offices List"
        End If
        PageSetup "pgLI1"
        Me.txtSBAName.Locked = False
        Me.txtSBAAddress.enabled = True
        Me.txtSBAAddress.BackColor = vbWhite
        Me.txtSBAAddress.Locked = False
        Me.txtSBAAddress2.enabled = True
        Me.txtSBAAddress2.BackColor = vbWhite
        Me.txtSBAAddress2.Locked = False
        Me.txtSBACity.enabled = True
        Me.txtSBACity.BackColor = vbWhite
        Me.txtSBACity.Locked = False
        Me.cbxSBAState.enabled = True
        Me.cbxSBAState.BackColor = vbWhite
        Me.cbxSBAState.Locked = False
        Me.txtSBAZip.enabled = True
        Me.txtSBAZip.BackColor = vbWhite
        Me.txtSBAZip.Locked = False
    End If
End Sub

Private Sub txtSBASignor_Enter()
    Me.txtSBASignor.SelLength = 99
    If Me.txtLDGuaranteeFee.Text = "" Then
        UpdateGuaranteeFee
    End If
End Sub

Private Sub txtSBAZip_Exit(ByVal Cancel As MSForms.ReturnBoolean)
'  curCtrl = "txtSBAZip"
'    If InStr(1, Me(curCtrl).Text, "-") > 0 Then
'      ctrltext = Mid(Me(curCtrl).Text, 1, InStr(1, Me(curCtrl).Text, "-") - 1) & Mid(Me(curCtrl).Text, InStr(1, Me(curCtrl).Text, "-") + 1)
'    Else
'      ctrltext = Me(curCtrl).Text
'    End If
'    If Len(ctrltext) <> 5 And Len(ctrltext) <> 9 Then
'      If InStr(1, Me(curCtrl).Text, "-") > 0 Then
'        cLen = Len(ctrltext) - 1 & " (without '-')"
'      Else
'        cLen = Len(ctrltext)
'      End If
'        UpdateLI3 = 1
'        MyErrorMsg Me.mpgWizard.Value, "Length", True, curCtrl, , cLen
'        CommandSetup 3
'        Exit Sub
'    End If
'    If Not IsNumeric(ctrltext) Then
'        UpdateLI3 = 1
'        MyErrorMsg Me.mpgWizard.Value, "Numeric", True, curCtrl, , cLen
'        CommandSetup 3
'    End If
'    If IsNumeric(ctrltext) And Len(ctrltext) = 9 Then
'      Me(curCtrl).Text = Format(ctrltext, "#####\-####")
'    ElseIf IsNumeric(ctrltext) And Len(ctrltext) = 5 Then
'      Me(curCtrl).Text = Format(ctrltext, "#####")
'    End If
End Sub

Private Sub txtUPField1_Change()
    If Me.txtUPField1.Text <> "" Then
        Me.lblUPData1.enabled = True
        Me.lblUPData1.visible = True
        Me.lblUPData1.Caption = Me.cbxUPCategory.List(Me.cbxUPCategory.ListIndex, 1)
        Me.txtUPField1.visible = True
    End If
End Sub

Private Sub txtUPField2_Change()
    If Me.txtUPField2.Text <> "" Then
        Me.lblUPData2.visible = True
        Me.lblUPData2.enabled = True
        Me.lblUPData2.Caption = Me.cbxUPCategory.List(Me.cbxUPCategory.ListIndex, 2)
        Me.txtUPField2.visible = True
    End If
End Sub

Private Sub txtUPField1_MouseDown(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
    If Button = 2 Then
        Dim vName As String
        Dim vType As String
        vUPCat = Me.cbxUPCategory.ListIndex
        Select Case vUPCat
        Case 7, 14, 15, 16, 17
            UpdateUP = 1
            Select Case vUPCat
            Case 7
                vName = "Lender"
                vType = "Name"
            Case 14, 15
                vName = "Payee"
                vType = "Name"
            Case 16
                vName = "Business"
                vType = "Name"
            Case 17
                vName = "Corporation"
                vType = "Name"
            Case Else
            End Select
        Case 1 To 6, 9
            UpdateUP = 1
            vName = "Location"
            vType = "Address"
        Case Else
            Me.txtUPField1.ControlTipText = ""
            Exit Sub
        End Select
        If Len(Me.txtUPField1.Text) > 0 Then
            SaveData vName, "Use of Proceeds", "Save", "txtUPField1", vType, 7, X, Y
        Else
            SaveData vName, "Use of Proceeds", "Retrieve", "txtUPField1", vType, 7, X, Y
        End If
    End If
End Sub

Private Sub txtUPField1_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
    Me.txtUPField1.ControlTipText = "Right click to add to/retrieve from the Name/Address List."
End Sub

Private Sub txtUPField2_Enter()
    curCtrl = "txtUPField2"
    vUPCat = Me.cbxUPCategory.ListIndex
    Select Case vUPCat
    Case 1, 2, 3, 4, 5, 6, 9
        Me.txtUPField2.ControlTipText = "Right click to add to/retrieve from the Name/Address List, if applicable."
    Case 7, 14, 15, 16, 17
        Me.txtUPField2.ControlTipText = "Right click to add to/retrieve from the Name/Address List, if applicable."
    Case Else
        Me.txtUPField2.ControlTipText = ""
    End Select
End Sub

Private Sub txtUPField2_Exit(ByVal Cancel As MSForms.ReturnBoolean)
    If InStr(Me.lblUPData2.Caption, "Date") Then
        curCtrl = "txtUPField2"
        If Me(curCtrl).Text <> "" Then
            If IsDate(Me(curCtrl).Text) Then
                InputFormat Me(curCtrl).Name, "TextIsDate", 0
            Else
                If MsgBox("This " & Me.lblUPData2.Caption & " usually expects a viable date.     " & vbCrLf & vbCrLf & _
                          "Continue with '" & Me(curCtrl).Text & "'?", _
                          vbInformation + vbYesNo, _
                          "Date Input") = vbYes Then
                    Exit Sub
                Else
                    Cancel = True
                End If
            End If
        End If
    End If
End Sub

Private Sub txtUPField2_MouseDown(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
    If Button = 2 Then
        Dim vName As String
        Dim vType As String
        vUPCat = Me.cbxUPCategory.ListIndex
        Select Case vUPCat
        Case 7, 14, 15, 16, 17
            UpdateUP = 1
            Select Case vUPCat
            Case 17
                vName = "Stockholder"
                vType = "Name"
                Me.txtUPField2.ControlTipText = "Right click to add to/retrieve from the Name/Address List, if applicable."
            Case Else
                Me.txtUPField2.ControlTipText = ""
                Exit Sub
            End Select
        Case Else
        End Select

        If Len(Me.txtUPField2.Text) > 0 Then
            SaveData vName, "Use of Proceeds", "Save", "txtUPField2", vType, 7, X, Y
        Else
            SaveData vName, "Use of Proceeds", "Retrieve", "txtUPField2", vType, 7, X, Y
        End If
    End If
End Sub

Private Sub txtUPField1_Enter()
    curCtrl = "txtUPField1"
    vUPCat = Me.cbxUPCategory.ListIndex
    Select Case vUPCat
    Case 1, 2, 3, 4, 5, 6, 9, 24
        Me.txtUPField1.ControlTipText = "Right click to add to/retrieve from the Name/Address List."
    Case 7, 14, 15, 16, 17, 24
        Me.txtUPField1.ControlTipText = "Right click to add to/retrieve from the Name/Address List."
    Case Else
    End Select
End Sub

Private Sub txtUPField2_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
    curCtrl = "txtUPField2"
    vUPCat = Me.cbxUPCategory.ListIndex
    Select Case vUPCat
    Case 1, 2, 3, 4, 5, 6, 9
        Me.txtUPField2.ControlTipText = "Right click to add to/retrieve from the Name/Address List, if applicable."
    Case 7, 14, 15, 16, 17
        Me.txtUPField2.ControlTipText = "Right click to add to/retrieve from the Name/Address List, if applicable."
    Case Else
        Me.txtUPField2.ControlTipText = ""
    End Select
End Sub

Private Sub txtUPAmount2_Change()
    If Me.txtUPAmount2.Text <> "" Then
        Me.lblUPData2.visible = True
        Me.lblUPData2.enabled = True
        Me.lblUPData2.Caption = Me.cbxUPCategory.List(Me.cbxUPCategory.ListIndex, 2)
        Me.txtUPAmount2.visible = True
    End If
End Sub

Private Sub txtUPAmount2_Exit(ByVal Cancel As MSForms.ReturnBoolean)
    curCtrl = "txtUPAmount2"
    If Me(curCtrl).Text <> "" Then
        If IsNumeric(Me(curCtrl).Text) Then
            InputFormat Me(curCtrl).Name, "TextIsNumber", 2
        Else
            UpdateUP = 1
            MyErrorMsg Me.mpgWizard.Value, "Numeric", True, curCtrl
        End If
    End If
End Sub

Private Sub txtUPField3_Change()
    If Me.txtUPField3.Text <> "" Then
        Me.lblUPData3.visible = True
        Me.lblUPData3.enabled = True
        Me.lblUPData3.Caption = Me.cbxUPCategory.List(Me.cbxUPCategory.ListIndex, 3)
        Me.txtUPField3.visible = True
    End If
End Sub

Private Sub txtUPRemaining2_Change()
    Me.txtUPRemaining2.Text = Me.txtUPRemainingAmount.Text
    If Me.txtUPRemainingAmount.Text = "0.00" Then
        Me.lblUPContinue.visible = True
        Me.cmdWizardShortCut.visible = True
        Me.cmdFinish.enabled = True
    Else
        Me.lblUPContinue.visible = False
        Me.cmdWizardShortCut.visible = False
    End If
End Sub

Private Sub txtUPText_Change()
    If Me.txtUPText.Text <> "" Then
        Me.lblUPData1.enabled = True
        Me.lblUPData1.visible = True
        Me.lblUPData1.Caption = Me.cbxUPCategory.List(Me.cbxUPCategory.ListIndex, 1)
        Me.txtUPText.Top = 82
        Me.txtUPText.Height = 46
        Me.txtUPText.visible = True
        Me.txtUPText.enabled = True
        Me.txtUPField1.visible = False
    Else
    End If
End Sub

Private Sub txtVLOEveryNum_Exit(ByVal Cancel As MSForms.ReturnBoolean)
    curCtrl = "txtVLOEveryNum"
    If Me(curCtrl).Text <> "" Then
        If IsNumeric(Me(curCtrl).Text) Then
            InputFormat Me(curCtrl).Name, "TextIsNumber", 0
        Else
            UpdateRT4 = 1
            MyErrorMsg Me.mpgWizard.Value, "Numeric", True, curCtrl
    '        CommandSetup 7
        End If
    End If
End Sub

Public Sub ChkInput(ChkPage, retChkInput)
    retCheckInput = False
    State = True
    Select Case ChkPage
    Case "pgLI1", "pgLI2"
        For Each Ctrl In Me.mpgWizard(ChkPage).Controls
            curCtrl = Me(Ctrl.Name).Name
            On Error Resume Next
            If Me(curCtrl).enabled Or Not Me(curCtrl).Locked Then
                If InStr(1, curCtrl, "txt") Then
                    If InStr(1, curCtrl, "txtLS") _
                       Or InStr(6, curCtrl, "Name2") _
                       Or InStr(6, curCtrl, "Dba") _
                       Or InStr(6, curCtrl, "Address2") _
                       Or InStr(6, curCtrl, "LenderSign") _
                       Or InStr(6, curCtrl, "LenderSign") _
                       Or InStr(6, curCtrl, "Zip") Then
                    Else
                        If Me(curCtrl).Text = "" And Me(curCtrl).enabled = True Then
                            retCheckInput = True
                            MyErrorMsg Me.mpgWizard.Value, "Blank", True, curCtrl, retCheckInput
    '              CommandSetup 3
                            Exit Sub
                        End If
                    End If
                ElseIf InStr(1, curCtrl, "cbx") And Me(curCtrl).enabled = True And Me(curCtrl).Locked = False Then
                    curCtrlIndex = Me(curCtrl).ListIndex
                    If curCtrlIndex = -1 Then
                        retCheckInput = True
                        MyErrorMsg Me.mpgWizard.Value, "Blank", True, curCtrl, retCheckInput
    '              CommandSetup 3
                        Exit Sub
                    End If
                End If
            End If
        Next
    Case "pgLI3"
        For Each Ctrl In Me.mpgWizard(ChkPage).Controls
            curCtrl = Me(Ctrl.Name).Name
            If (TypeOf Ctrl Is MSForms.TextBox) Then
                If InStr(1, curCtrl, "Date") Then
                    Exit Sub
                ElseIf InStr(1, curCtrl, "Number") Then
                    If Me(curCtrl).Text <> "--" _
                       And (Not IsNumeric(Mid(Me(curCtrl).Text, 1, 8) & Mid(Me(curCtrl).Text, 10, 2))) Then
                        retCheckInput = True
                        MyErrorMsg Me.mpgWizard.Value, "Placeholder", True, curCtrl, retCheckInput
    '          CommandSetup 7
                        Exit Sub
                    End If
                ElseIf Me(curCtrl).Text = "" _
                       And curCtrl <> "txtLSPrefix" _
                       And curCtrl <> "txtLSSuffix" Then  '_
    'And curCtrl <> "txtSBASignor"
                    retCheckInput = True
                    MyErrorMsg Me.mpgWizard.Value, "Blank", True, curCtrl, retCheckInput
    '          CommandSetup 7
                    Exit Sub
                End If
            End If
        Next

    Case "pgRT1"
'CAP
        For Each Ctrl In Me.mpgWizard.Pages(CurTab).Controls
            curCtrl = Me(Ctrl.Name).Name
            If Me(curCtrl).enabled And InStr(1, curCtrl, "txt") Then
                If Me(curCtrl).Name = "txtIRFixedVariablePeriod" And Me.optIRFixedVariable.Value = True Then
                    If Me(curCtrl).Text = "" Then
                        retCheckInput = True
                        MyErrorMsg Me.mpgWizard.Value, "Blank", True, curCtrl, retCheckInput
    '            CommandSetup 3
                        Exit Sub
                    End If
                Else
                    If Me(curCtrl).Text = "" Then
                        retCheckInput = True
                        MyErrorMsg Me.mpgWizard.Value, "Blank", True, curCtrl, retCheckInput
    '            CommandSetup 3
                        Exit Sub
                    End If
                End If
            End If
        Next

    Case "pgRT2"
        For Each Ctrl In Me.mpgWizard.Pages(CurTab).Controls
            curCtrl = Me(Ctrl.Name).Name
            If Me(curCtrl).enabled And InStr(1, curCtrl, "txt") Then
                If Me(curCtrl).Text = "" Then
                    retCheckInput = True
                    MyErrorMsg Me.mpgWizard.Value, "Blank", True, curCtrl, retCheckInput
    '          CommandSetup 3
                    Exit Sub
                End If
            End If
        Next

    Case "pgRT3"
        mpgPTOptions_Change
        For Each Ctrl In Me.mpgPTOptions.Pages(tabPage).Controls
            curCtrl = Me(Ctrl.Name).Name
            If Me(curCtrl).enabled And InStr(1, curCtrl, "txt") Then
                If Me(curCtrl).Text = "" Then
                    retCheckInput = True
                    MyErrorMsg Me.mpgWizard.Value, "Blank", True, curCtrl, retCheckInput
    '          CommandSetup 3
                    Exit Sub
                End If
            End If
        Next

    Case "pgRT4"
        For Each Ctrl In Me.mpgWizard.Pages(CurTab).Controls
            curCtrl = Me(Ctrl.Name).Name
            If Me(curCtrl).enabled And InStr(1, curCtrl, "txt") Then
                If Me(curCtrl).Text = "" Then
                    retCheckInput = True
                    MyErrorMsg Me.mpgWizard.Value, "Blank", True, curCtrl, retCheckInput
    '          CommandSetup 7
                    Exit Sub
                End If
            End If
            If Me(curCtrl).enabled And InStr(1, curCtrl, "cbxOLO") Then
                X = Me.cbxOLORateReduction.ListIndex
                If Me(curCtrl).ListIndex = -1 Or Me(curCtrl).ListIndex = 0 Then
                    retCheckInput = True
                    MyErrorMsg Me.mpgWizard.Value, "Blank", True, curCtrl, retCheckInput
    '          CommandSetup 7
                    Exit Sub
                End If
            End If
        Next

    Case "pgCC1"
        For Each Ctrl In Me.mpgCCOptions.Pages(tabCCPage).Controls
            curCtrl = Me(Ctrl.Name).Name
            'curOption change 9/7/2007
            curOption = Me.mpgCCOptions.Pages(tabCCPage).index
            If Me(curCtrl).enabled And InStr(1, curCtrl, "txt") Then
                If Me(curCtrl).Text = "" Then
                    retCheckInput = True
                    MyErrorMsg Me.mpgWizard.Value, "Blank", True, curCtrl, retCheckInput, , curOption
                    Exit Sub
                End If
            End If
            If InStr(1, curCtrl, "lst") Then
                If Me(curCtrl).enabled Or Not Me(curCtrl).Locked Then
                    curCtrlIndex = Me("lstCC" & Mid(curCtrl, 6)).ListIndex
                    If curCtrlIndex = -1 Or curCtrlIndex = 0 Then
                        retCheckInput = True
                        MyErrorMsg Me.mpgWizard.Value, "Blank", True, curCtrl, retCheckInput
                        Exit Sub
                    End If
                End If
            End If
        Next

    Case "pgACI1", "pgACI3", "pgACI4", "pgACII1", "pgACII3"
        For Each Ctrl In Me.mpgWizard.Pages(CurTab).Controls
            curCtrl = Me(Ctrl.Name).Name
    '      MsgBox Me(curCtrl).Enabled
            If Me(curCtrl).enabled And InStr(1, curCtrl, "txt") Then
                If Me(curCtrl).Text = "" Then
                    retCheckInput = True
                    MyErrorMsg Me.mpgWizard.Value, "Blank", True, curCtrl, retCheckInput
                    Exit Sub
                End If
            End If
        Next

    Case "pgCC3", "pgCC4"
        For Each Ctrl In Me.mpgWizard.Pages(CurTab).Controls
            curCtrl = Me(Ctrl.Name).Name
            If Me(curCtrl).enabled And InStr(1, curCtrl, "txt") Then
                If Me(curCtrl).Text = "" Then
                    retCheckInput = True
                    MyErrorMsg Me.mpgWizard.Value, "Blank", True, curCtrl, retCheckInput
                    If CCid = 5 Or CCid = 22 Then
                        CommandSetup 4
                    Else
                        CommandSetup 3
                    End If
                    Exit Sub
                End If
            ElseIf Me(curCtrl).enabled And InStr(1, curCtrl, "cbx") Then
                If Me(curCtrl).ListIndex = -1 Then
                    retCheckInput = True
                    MyErrorMsg Me.mpgWizard.Value, "Blank", True, curCtrl, retCheckInput
                    If CCid = 5 Or CCid = 22 Then
                        CommandSetup 4
                    Else
                        CommandSetup 3
                    End If
                    Exit Sub
                End If
            End If
        Next

    Case "pgACI2"
        For Each Ctrl In Me.mpgWizard.Pages(CurTab).Controls
            curCtrl = Me(Ctrl.Name).Name
            If Me(curCtrl).enabled And InStr(1, curCtrl, "txt") Then
                If Me(curCtrl).Text = "" Then
                    retCheckInput = True
                    MyErrorMsg Me.mpgWizard.Value, "Blank", True, curCtrl, retCheckInput
    '          CommandSetup 3
                    Exit Sub
                End If
            ElseIf Me(curCtrl).enabled And InStr(1, curCtrl, "cbx") Then
                If Me(curCtrl).ListIndex = -1 Then
                    retCheckInput = True
                    MyErrorMsg Me.mpgWizard.Value, "Blank", True, curCtrl, retCheckInput
    '          CommandSetup 3
                    Exit Sub
                End If
            End If
        Next
        If Me.chkAC1OtherInsurance.Value Then
            If Me.optAC1Select.Value = False And Me.optAC1WriteYourOwn.Value = False Then
                curCtrl = "optAC1Select"
                retCheckInput = True
                MyErrorMsg Me.mpgWizard.Value, "Blank", True, curCtrl, retCheckInput
    '        CommandSetup 3
                Exit Sub
            ElseIf Me.optAC1WriteYourOwn.Value = True Then
                If Me.txtAC1OtherInsurance.Text = "" Then
                    curCtrl = "txtAC1OtherInsurance"
                    retCheckInput = True
                    MyErrorMsg Me.mpgWizard.Value, "Blank", True, curCtrl, retCheckInput
    '          CommandSetup 3
                    Exit Sub
                End If
            ElseIf Me.cbxAC1OtherInsurance.ListIndex = -1 Then
                curCtrl = "cbxAC1OtherInsurance"
                retCheckInput = True
                MyErrorMsg Me.mpgWizard.Value, "Blank", True, curCtrl, retCheckInput
    '        CommandSetup 3
                Exit Sub
            End If
        End If

    Case "pgACII2"
        For Each Ctrl In Me.mpgWizard.Pages(CurTab).Controls
            curCtrl = Me(Ctrl.Name).Name
            If Me(curCtrl).enabled And InStr(1, curCtrl, "txt") Then
                If Me(curCtrl).Text = "" Then
                    retCheckInput = True
                    MyErrorMsg Me.mpgWizard.Value, "Blank", True, curCtrl, retCheckInput
    '          CommandSetup 3
                    Exit Sub
                End If
            End If
            If InStr(1, curCtrl, "cbxVLO") _
               Or InStr(1, curCtrl, "cbxOLO") Then
                If Me(curCtrl).enabled Or Not Me(curCtrl).Locked Then
                    curCtrlIndex = Me(curCtrl).ListIndex
                    If curCtrlIndex = -1 Or curCtrlIndex = 0 Then
                        retCheckInput = True
                        MyErrorMsg Me.mpgWizard.Value, "Blank", True, curCtrl, retCheckInput
    '          CommandSetup 3
                        Exit Sub
                    End If
                End If
            End If
        Next

    Case Else    'Everybody else
        For Each Ctrl In Me.mpgWizard.Pages(CurTab).Controls
            curCtrl = Me(Ctrl.Name).Name
            If Me(curCtrl).enabled And InStr(1, curCtrl, "txt") Then
                If Me(curCtrl).Name = "txtUPField2" And InStr(Me.lblUPData2.Caption, "Purchase Agreement") Then
                Else
                    If Me(curCtrl).Text = "" And Me(curCtrl).visible = True Then
                        retCheckInput = True
                        MyErrorMsg Me.mpgWizard.Value, "Blank", True, curCtrl, retCheckInput
                        Exit Sub
                    End If
                End If
            End If
        Next

    End Select

End Sub
Public Sub CheckInput(ChkPage, retChkInput)
    retCheckInput = False
    If ChkPage = "pgRT1" Or ChkPage = "pgRT2" Or ChkPage = "pgRT3" Then
        mpgPTOptions_Change
        For Each Ctrl In Me.mpgPTOptions.Pages(tabPage).Controls
            State = True
            curCtrl = Me(Ctrl.Name).Name
            If Me(curCtrl).enabled = State And InStr(1, curCtrl, "txt") > 0 Then
                If Me(curCtrl).Text = "" Then
                    retCheckInput = True
                    MyErrorMsg Me.mpgWizard.Value, "Blank", True, curCtrl, retCheckInput
    '        CommandSetup 3
                    Exit Sub
                End If
            End If
        Next
    ElseIf ChkPage = "pgCC1" Then
        For Each Ctrl In Me.mpgCCOptions.Pages(tabCCPage).Controls
            State = True
            curCtrl = Me(Ctrl.Name).Name
            If Me(curCtrl).enabled = State And InStr(1, curCtrl, "txt") > 0 Then
                If Me(curCtrl).Text = "" Then
                    retCheckInput = True
                    MyErrorMsg Me.mpgWizard.Value, "Blank", True, curCtrl, retCheckInput, , Me.mpgCCOptions.Value
                    Exit Sub
                End If
            ElseIf InStr(1, curCtrl, "lst") > 0 Then
                If InStr(1, curCtrl, "lst") > 0 And Me(curCtrl).Locked = False Then
                    curCtrlIndex = Me("lstCC" & Mid(curCtrl, 6)).ListIndex
                    If curCtrlIndex = -1 Or curCtrlIndex = 0 Then
                        retCheckInput = True
                        MyErrorMsg Me.mpgWizard.Value, "Blank", True, curCtrl, retCheckInput
                        Exit Sub
                    End If
                End If
            End If
        Next
    Else
        For Each Ctrl In Me.mpgWizard(ChkPage).Controls
            State = True
            curCtrl = Me(Ctrl.Name).Name
            On Error Resume Next
            If Me(curCtrl).enabled = State Or Me(curCtrl).Locked = Not State Then
                If InStr(1, curCtrl, "txt") > 0 Then
                    If ChkPage = "pgLI1" Or ChkPage = "pgLI2" Then
                        If InStr(1, curCtrl, "txtLS") Or InStr(6, curCtrl, "Name2") Or InStr(6, curCtrl, "Dba") Or InStr(6, curCtrl, "Address2") Or InStr(6, curCtrl, "LenderSign") Or InStr(5, curCtrl, "AAddress2") Then
                        Else
                            If Me(curCtrl).Text = "" And Me(curCtrl).enabled = True Then
                                retCheckInput = True
                                MyErrorMsg Me.mpgWizard.Value, "Blank", True, curCtrl, retCheckInput
    '              CommandSetup 3
                                Exit Sub
                            End If
                        End If
                    ElseIf ChkPage = "pgLI3" Then
                        If InStr(1, curCtrl, "Date") Then
                            Me(curCtrl).Text = Format(Me(curCtrl).Text, "mmmm d, yyyy")
                        End If
                        If InStr(1, curCtrl, "Date") And Me(curCtrl).Text <> "--" And Not IsDate(Me(curCtrl).Text) Or InStr(1, curCtrl, "Number") And Me(curCtrl).Text <> "--" And Not IsNumeric(Mid(Me(curCtrl).Text, 1, 8) & Mid(Me(curCtrl).Text, 8, 2)) Then
                            retCheckInput = True
                            MyErrorMsg Me.mpgWizard.Value, "Placeholder", True, curCtrl, retCheckInput
    '            CommandSetup 7
                            Exit Sub
                        ElseIf Me(curCtrl).Text = "" And curCtrl <> "txtLSPrefix" And curCtrl <> "txtLSSuffix" Then    'And curCtrl <> "txtSBASignor"
                            retCheckInput = True
                            MyErrorMsg Me.mpgWizard.Value, "Blank", True, curCtrl, retCheckInput
    '            CommandSetup 7
                            Exit Sub
                        End If
                    ElseIf Me(curCtrl).Text = "" And Me(curCtrl).enabled = True Then
                        retCheckIntput = True
                        MyErrorMsg Me.mpgWizard.Value, "Blank", True, curCtrl, retCheckInput
                        Exit Sub
                    End If
                ElseIf InStr(1, curCtrl, "cbx") > 0 And InStr(1, curCtrl, "cbxSBAState") = 0 Then
                    If (Me(curCtrl).Locked = False And Me(curCtrl).enabled = True) Or (Me(curCtrl).Locked = True And Me(curCtrl).enabled = False) Then
                        curCtrlIndex = Me(curCtrl).ListIndex
                        If InStr(1, curCtrl, "cbxCCState") = 0 Or InStr(1, curCtrl, "cbxVLO") = 0 Or InStr(1, curCtrl, "cbxOLO") = 0 And Me(curCtrl).enabled = True Then
                            If InStr(1, curCtrl, "cbxSBASignor") <> 0 _
                               And Me(curCtrl).enabled = True Then
                            Else
                                If curCtrlIndex = -1 Then
                                    retCheckInput = True
                                    MyErrorMsg Me.mpgWizard.Value, "Blank", True, curCtrl, retCheckInput
                                    Exit Sub
                                End If
                            End If
                        ElseIf InStr(1, curCtrl, "cbx") = 0 And curCtrlIndex = -1 Or curCtrlIndex = 0 And Me(curCtrl).Locked = False Then
                            retCheckInput = True
                            MyErrorMsg Me.mpgWizard.Value, "Blank", True, curCtrl, retCheckInput
                            Exit Sub
                        End If
                    End If
                ElseIf InStr(1, curCtrl, "chkAC1Other") > 0 Then
                    If Me(curCtrl).Value = True Then
                        If Me.optAC1Select.Value = False And Me.optAC1WriteYourOwn.Value = False Then
                            retCheckInput = True
                            MyErrorMsg Me.mpgWizard.Value, "Blank", True, curCtrl, retCheckInput
                            Exit Sub
                        ElseIf Me.optAC1WriteYourOwn.Value = True Then
                            If Me.txtAC1OtherInsurance.Text = "" Then
                                curCtrl = "txtAC1OtherInsurance"
                                retCheckInput = True
                                MyErrorMsg Me.mpgWizard.Value, "Blank", True, curCtrl, retCheckInput
                                Exit Sub
                            End If
                        ElseIf Me.cbxAC1OtherInsurance.ListIndex = 0 Or Me.cbxAC1OtherInsurance.ListIndex = -1 Then
                            curCtrl = "cbxAC1OtherInsurance"
                            retCheckInput = True
                            MyErrorMsg Me.mpgWizard.Value, "Blank", True, curCtrl, retCheckInput
                            Exit Sub
                        End If
                    End If
                End If
            End If
CtrlNext:
        Next
    End If
    retCheckInput = retCheckInput
End Sub
Private Sub optAC1Select_Click()
    If Me.optAC1Select.Value = True Then
        Me.txtAC1OtherInsurance.enabled = False
        Me.txtAC1OtherInsurance.Locked = True
        Me.txtAC1OtherInsurance.visible = False
        Me.cbxAC1OtherInsurance.enabled = True
        Me.cbxAC1OtherInsurance.Locked = False
        Me.cbxAC1OtherInsurance.visible = True
        Me.cbxAC1OtherInsurance.BackColor = vbWhite
    End If
End Sub

Private Sub optAC1WriteYourOwn_Click()
    If Me.optAC1WriteYourOwn.Value = True Then
        Me.cbxAC1OtherInsurance.enabled = False
        Me.cbxAC1OtherInsurance.Locked = True
        Me.cbxAC1OtherInsurance.visible = False
        Me.txtAC1OtherInsurance.enabled = True
        Me.txtAC1OtherInsurance.Locked = False
        Me.txtAC1OtherInsurance.visible = True
        Me.txtAC1OtherInsurance.BackColor = vbWhite
    End If
End Sub

Private Sub chkAC2Appraisal_Click()
    Me.optAC2RealEstate.enabled = Me.chkAC2Appraisal.Value
    Me.optAC2Equipment.enabled = Me.chkAC2Appraisal.Value
    Me.optAC2Aircraft.enabled = Me.chkAC2Appraisal.Value
    Me.optAC2Marine.enabled = Me.chkAC2Appraisal.Value
    Me.lblAC2Marine.enabled = Me.chkAC2Appraisal.Value
    Me.txtAC2APLocation.enabled = Me.chkAC2Appraisal.Value
    Me.txtAC2APAmount.enabled = Me.chkAC2Appraisal.Value
    Me.txtAC2APYear.enabled = Me.chkAC2Appraisal.Value
    Me.txtAC2APModel.enabled = Me.chkAC2Appraisal.Value
    Me.txtAC2APMake.enabled = Me.chkAC2Appraisal.Value
    Me.txtAC2APLocation.enabled = Me.chkAC2Appraisal.Value
    Me.lblAC2Location.enabled = Me.chkAC2Appraisal.Value
    Me.lblAC2MarketValue.enabled = Me.chkAC2Appraisal.Value
    Me.lblAC2Year.enabled = Me.chkAC2Appraisal.Value
    Me.lblAC2Model.enabled = Me.chkAC2Appraisal.Value
    Me.cmdAC2NewAppr.enabled = Me.chkAC2Appraisal.Value
    Me.cmdAC2InfoAppr.enabled = Me.chkAC2Appraisal.Value
    Me.cmdAC2DeleteAppr.enabled = Me.chkAC2Appraisal.Value
    Me.optAC2RealEstate.Value = True
    If Me.chkAC2Appraisal.Value = False Then
        Me.txtAC2APLocation.visible = True
        Me.txtAC2APLocation.BackColor = myGray
        Me.txtAC2APAmount.BackColor = myGray
        Me.txtAC2APYear.BackColor = myGray
        Me.txtAC2APModel.BackColor = myGray
        Me.txtAC2APMake.BackColor = myGray
        Me.txtAC2APLocation.Text = ""
        Me.txtAC2APAmount.Text = ""
        Me.txtAC2APYear.Text = ""
        Me.txtAC2APModel.Text = ""
        Me.txtAC2APMake.Text = ""
        Me.optAC2RealEstate.Value = Me.chkAC2Appraisal.Value
        Me.optAC2Equipment.Value = Me.chkAC2Appraisal.Value
        Me.optAC2Aircraft.Value = Me.chkAC2Appraisal.Value
        Me.optAC2Marine.Value = Me.chkAC2Appraisal.Value
    End If
    If Me.chkAC2Appraisal.Value = True Then
        CurIdx = Val(Trim(ActiveDocument.Bookmarks("RPCur006").Range.Text))
        Me.txtAC2APLocation.Text = IIf(Left(ActiveDocument.Bookmarks("APLocation_" & CurIdx).Range.Text, 1) <> "[", ActiveDocument.Bookmarks("APLocation_" & CurIdx).Range.Text, "")
        Me.txtAC2APMake.Text = IIf(Left(ActiveDocument.Bookmarks("APMake_" & CurIdx).Range.Text, 1) <> "[", ActiveDocument.Bookmarks("APMake_" & CurIdx).Range.Text, "")
        Me.txtAC2APModel.Text = IIf(Left(ActiveDocument.Bookmarks("APModel_" & CurIdx).Range.Text, 1) <> "[", ActiveDocument.Bookmarks("APModel_" & CurIdx).Range.Text, "")
        Me.txtAC2APAmount.Text = IIf(Left(ActiveDocument.Bookmarks("APAmount_" & CurIdx).Range.Text, 1) <> "[", ActiveDocument.Bookmarks("APAmount_" & CurIdx).Range.Text, "")
        Me.txtAC2APYear.Text = IIf(Left(ActiveDocument.Bookmarks("APYear_" & CurIdx).Range.Text, 1) <> "[", ActiveDocument.Bookmarks("APYear_" & CurIdx).Range.Text, "")
        UpdateChangeRP 5, 5, "AC2", "RPFirst005", "RPLast005"
    End If
End Sub

Private Sub chkAC2Asset_Click()
    Me.txtAC2AssetAmount.enabled = Me.chkAC2Asset.Value
    Me.txtAC2Assets.enabled = Me.chkAC2Asset.Value
    Me.lblAC2AssetAmt.enabled = Me.chkAC2Asset.Value
    If Me.chkAC2Asset.Value = False Then
        Me.txtAC2AssetAmount.Text = ""
        Me.txtAC2Assets.Text = ""
        Me.txtAC2AssetAmount.BackColor = myGray
        Me.txtAC2Assets.BackColor = myGray
    Else
        Me.txtAC2AssetAmount.BackColor = vbWhite
        Me.txtAC2Assets.BackColor = vbWhite
        Me.txtAC2AssetAmount.SetFocus
    End If
End Sub

Private Sub chkAC2Cash_Click()
    Me.txtAC2CashAmount.enabled = Me.chkAC2Cash.Value
    Me.txtAC2Cash.enabled = Me.chkAC2Cash.Value
    Me.lblAC2CashAmt.enabled = Me.chkAC2Cash.Value
    Me.txtAC2CashSource.enabled = Me.chkAC2Cash.Value
    If Me.chkAC2Cash.Value = False Then
        Me.txtAC2CashAmount.Text = ""
        Me.txtAC2Cash.Text = ""
        Me.txtAC2CashAmount.BackColor = myGray
        Me.txtAC2Cash.BackColor = myGray
        Me.txtAC2CashSource.BackColor = myGray
    Else
        Me.txtAC2CashAmount.BackColor = vbWhite
        Me.txtAC2Cash.BackColor = vbWhite
        Me.txtAC2CashSource.BackColor = vbWhite
        Me.txtAC2CashAmount.SetFocus
    End If
End Sub

'Private Sub chkAC2Equity_Click()
'    Me.txtAC2EquityAmount.enabled = Me.chkAC2Equity.Value
'    Me.txtAC2Equity.enabled = Me.chkAC2Equity.Value
'    Me.lblAC2EquityAmt.enabled = Me.chkAC2Equity.Value
'    If Me.chkAC2Equity.Value = False Then
'        Me.txtAC2EquityAmount.Text = ""
'        Me.txtAC2Equity.Text = ""
'        Me.txtAC2EquityAmount.BackColor = myGray
'        Me.txtAC2Equity.BackColor = myGray
'    Else
'        Me.txtAC2EquityAmount.BackColor = vbWhite
'        Me.txtAC2Equity.BackColor = vbWhite
'        Me.txtAC2EquityAmount.SetFocus
'    End If
'End Sub

Private Sub chkAC2StandbyAgreement_Click()
    Me.txtAC2SAName.enabled = Me.chkAC2StandbyAgreement.Value
    Me.txtAC2SAAmount.enabled = Me.chkAC2StandbyAgreement.Value
    Me.cbxAC2Repayment.enabled = Me.chkAC2StandbyAgreement.Value
    Me.cmdAC2NewSA.enabled = Me.chkAC2StandbyAgreement.Value
    Me.cmdAC2InfoSA.enabled = Me.chkAC2StandbyAgreement.Value
    Me.lblAC2Creditor.enabled = Me.chkAC2StandbyAgreement.Value
    Me.lblAC2Amount.enabled = Me.chkAC2StandbyAgreement.Value
    Me.lblAC2Repayment.enabled = Me.chkAC2StandbyAgreement.Value
    If Me.chkAC2StandbyAgreement.Value = True Then
        Me.txtAC2SAName.BackColor = vbWhite
        Me.txtAC2SAAmount.BackColor = vbWhite
        Me.cbxAC2Repayment.BackColor = vbWhite
        Me.txtAC2SAName.SetFocus
    Else
        Me.txtAC2SAWyoA.Text = ""
        Me.txtAC2SAName.Text = ""
        Me.txtAC2SAAmount.Text = ""
        Me.cbxAC2Repayment.ListIndex = -1
        Me.txtAC2SAName.BackColor = myGray
        Me.txtAC2SAAmount.BackColor = myGray
        Me.cbxAC2Repayment.BackColor = myGray
    End If
    If Me.chkAC2StandbyAgreement.Value = True Then
        CurIdx = Val(Trim(ActiveDocument.Bookmarks("RPCur005").Range.Text))
        Me.txtAC2SAName.Text = IIf(Left(ActiveDocument.Bookmarks("SAName_" & CurIdx).Range.Text, 1) <> "[", ActiveDocument.Bookmarks("SAName_" & CurIdx).Range.Text, "")
        Me.txtAC2SAAmount.Text = IIf(Left(ActiveDocument.Bookmarks("SAAmount_" & CurIdx).Range.Text, 1) <> "[", ActiveDocument.Bookmarks("SAAmount_" & CurIdx).Range.Text, "")
        RepaymentList cbxAC2Repayment
        Me.cbxAC2Repayment.ListIndex = IIf(Val(Trim(ActiveDocument.Bookmarks("obSA_" & CurIdx).Range.Text)) > 0, Val(Trim(ActiveDocument.Bookmarks("obSA_" & CurIdx).Range.Text)), 0)
        Me.txtAC2SARate.Text = IIf(Left(ActiveDocument.Bookmarks("SARate_" & CurIdx).Range.Text, 1) <> "[", ActiveDocument.Bookmarks("SARate_" & CurIdx).Range.Text, "")
        Me.txtAC2SAPayments.Text = IIf(Left(ActiveDocument.Bookmarks("SAPayments_" & CurIdx).Range.Text, 1) <> "[", ActiveDocument.Bookmarks("SAPayments_" & CurIdx).Range.Text, "")
        Me.txtAC2SABeginDate.Text = IIf(Left(ActiveDocument.Bookmarks("SABeginDate_" & CurIdx).Range.Text, 1) <> "[", ActiveDocument.Bookmarks("SABeginDate_" & CurIdx).Range.Text, "")
        UpdateChangeRP 5, 5, "AC2", "RPFirst005", "RPLast005"
        If Val(Trim(ActiveDocument.Bookmarks("RPCur005").Range.Text)) > 1 Then
            Me.cmdAC2DeleteSA.enabled = True
        End If
    End If
End Sub

Private Sub chkAC2Standby_Click()
    Me.txtAC2StandbyAmount.enabled = Me.chkAC2Standby.Value
    Me.txtAC2Standby.enabled = Me.chkAC2Standby.Value
    Me.lblAC2StandbyAmt.enabled = Me.chkAC2Standby.Value
    If Me.chkAC2Standby.Value = False Then
        Me.txtAC2StandbyAmount.Text = ""
        Me.txtAC2Standby.Text = ""
        Me.txtAC2StandbyAmount.BackColor = myGray
        Me.txtAC2Standby.BackColor = myGray
    Else
        Me.txtAC2StandbyAmount.BackColor = vbWhite
        Me.txtAC2Standby.BackColor = vbWhite
        Me.txtAC2StandbyAmount.SetFocus
    End If
End Sub

Private Sub chkBIEPC_Click()
    Dim Ctrl As control
    For Each Ctrl In Controls
        If InStr(1, Ctrl.Name, "OC") Then
            Me(Ctrl.Name).enabled = Me.chkBIEPC.Value
        End If
        If InStr(1, Ctrl.Name, "txtOC") Or InStr(1, Ctrl.Name, "cbxOC") Then
            If Me.chkBIEPC.Value = False Then
                On Error Resume Next
                Me(Ctrl.Name).Text = ""
                Me(Ctrl.Name).Value = ""
                Me(Ctrl.Name).BackColor = myGray
                Me(Ctrl.Name).enabled = False
                Me(Ctrl.Name).Locked = True
            Else
                Me(Ctrl.Name).enabled = True
                Me(Ctrl.Name).Locked = False
                Me(Ctrl.Name).BackColor = vbWhite
            End If
        End If
    Next  'Enable Operating Company dialog
    If Left(ActiveDocument.Bookmarks("OCName").Range.Text, 1) <> "[" Or ActiveDocument.Bookmarks("OCName").Range.Text <> "" And Me.chkBIEPC.Value = True Then
        If Me.chkBIEPC.Value = True Then
            For Each Ctrl In Controls
                If InStr(1, Ctrl.Name, "txtOC") Or InStr(1, Ctrl.Name, "cbxOC") Then
                    On Error Resume Next
                    Me(Ctrl.Name).Text = IIf(Left(ActiveDocument.Bookmarks("OC" & Mid(Ctrl.Name, 6)).Range.Text, 1) <> "[", ActiveDocument.Bookmarks("OC" & Mid(Ctrl.Name, 6)).Range.Text, "")
                    Me(Ctrl.Name).Value = IIf(Left(ActiveDocument.Bookmarks("OC" & Mid(Ctrl.Name, 6)).Range.Text, 1) <> "[", ActiveDocument.Bookmarks("OC" & Mid(Ctrl.Name, 6)).Range.Text, "")
                End If
                If InStr(1, Ctrl.Name, "chkOC") Then
                    Me(Ctrl.Name).Value = IIf(Left(ActiveDocument.Bookmarks("cbCoBorrower").Range.Text, 1) <> "[", ActiveDocument.Bookmarks("cbCoBorrower").Range.Text, 0)
                End If
            Next  'Enable Operating Company dialog
        Else
        End If
        If Me.chkBIEPC.Value = True And Me.txtOCName.Text = "" Then
            Me.txtOCAddress.Text = Me.txtBIAddress.Text
            Me.txtOCAddress2.Text = Me.txtBIAddress2.Text
            Me.txtOCCity.Text = Me.txtBICity.Text
            Me.txtOCZip.Text = Me.txtBIZip.Text
            If Me.cbxOCState.ListCount = 0 Then
                StatesList Me.cbxOCState
            End If
            Me.cbxOCState.Text = Me.cbxBIState.Text
        End If
        Me.cmdOCInfo.enabled = True
        Me.cmdOCNew.enabled = False
        Me.cmdOCLeft.enabled = False
        Me.cmdOCRight.enabled = False
        Me.cmdOCDelete.enabled = False
        On Error Resume Next
        If Len(Me.txtOCName.Text) > 0 Then
            Me.cmdOCNew.enabled = True
        End If
    End If
    Me.cmdOCNew.SetFocus
End Sub

Private Sub chkBOCAdditionalFunding_Change()
    Me.lblBOCType.enabled = Me.chkBOCAdditionalFunding.Value
    Me.lblBOCProceeds.enabled = Me.chkBOCAdditionalFunding.Value
    Me.lblBOCAmount.enabled = Me.chkBOCAdditionalFunding.Value
    Me.lblBOCTerm.enabled = Me.chkBOCAdditionalFunding.Value
    Me.lblBOCType.enabled = Me.chkBOCAdditionalFunding.Value
    Me.txtBD5From.enabled = Me.chkBOCAdditionalFunding.Value
    Me.txtBD5Amount.enabled = Me.chkBOCAdditionalFunding.Value
    Me.txtBD5Term.enabled = Me.chkBOCAdditionalFunding.Value
    Me.optBD5SubordinateA.enabled = Me.chkBOCAdditionalFunding.Value
    Me.optBD5SubordinateB.enabled = Me.chkBOCAdditionalFunding.Value
    Me.optBD5SubordinateC.enabled = Me.chkBOCAdditionalFunding.Value
    Me.optBD5SubordinateD.enabled = Me.chkBOCAdditionalFunding.Value
    Me.cmdBOCNewAF.enabled = Me.chkBOCAdditionalFunding.Value
    Me.cmdBOCInfoAF.enabled = Me.chkBOCAdditionalFunding.Value
    Me.cmdBOCDeleteAF.enabled = Me.chkBOCAdditionalFunding.Value
    If Me.chkBOCAdditionalFunding.Value = True Then
        Me.txtBD5From.BackColor = vbWhite
        Me.txtBD5Amount.BackColor = vbWhite
        Me.txtBD5Term.BackColor = vbWhite
        Me.optBD5SubordinateA.SetFocus
    Else
        Me.txtBD5From.Text = ""
        Me.txtBD5Amount.Text = ""
        Me.txtBD5Term.Text = ""
        Me.txtBD5From.BackColor = myGray
        Me.txtBD5Amount.BackColor = myGray
        Me.txtBD5Term.BackColor = myGray
    End If
    LastIdx = Val(Trim(ActiveDocument.Bookmarks("RPLast002").Range.Text))
    CurIdx = Val(Trim(ActiveDocument.Bookmarks("RPCur002").Range.Text))
    If Me.chkBOCAdditionalFunding.Value = True Then
        If LastIdx > 0 Then
            Me.txtBD5From.Text = IIf(Left(ActiveDocument.Bookmarks("BD5From_" & CurIdx).Range.Text, 1) <> "[", ActiveDocument.Bookmarks("BD5From_" & CurIdx).Range.Text, "")
            Me.txtBD5Amount.Text = IIf(Left(ActiveDocument.Bookmarks("BD5Amount_" & CurIdx).Range.Text, 1) <> "[", ActiveDocument.Bookmarks("BD5Amount_" & CurIdx).Range.Text, "")
            Me.txtBD5Term.Text = IIf(Left(ActiveDocument.Bookmarks("BD5Term_" & CurIdx).Range.Text, 1) <> "[", ActiveDocument.Bookmarks("BD5Term_" & CurIdx).Range.Text, "")
            If Trim(ActiveDocument.Bookmarks("cbBD5Subordinate_" & CurIdx).Range.Text) = "0" Then
                Me.optBD5SubordinateA.Value = True
            ElseIf Trim(ActiveDocument.Bookmarks("cbBD5Subordinate_" & CurIdx).Range.Text) = "1" Then
                Me.optBD5SubordinateB.Value = True
            ElseIf Trim(ActiveDocument.Bookmarks("cbBD5Subordinate_" & CurIdx).Range.Text) = "2" Then
                Me.optBD5SubordinateC.Value = True
            ElseIf Trim(ActiveDocument.Bookmarks("cbBD5Subordinate_" & CurIdx).Range.Text) = "3" Then
                Me.optBD5SubordinateD.Value = True
            End If
            UpdateChangeRP 3, 1, "BOC", "RPFirst002", "RPLast002"
        End If
        If Me.optBD5SubordinateA.Value + Me.optBD5SubordinateB.Value + Me.optBD5SubordinateC.Value + Me.optBD5SubordinateD.Value = 0 Then
            Me.txtcbBD5Subordinate.Text = 0
        End If
    Else
        If LastIdx >= 1 Then
            If MsgBox("Unchecking this option will cause all Subordinate Funding     " & vbCrLf & _
                      "items to be deleted." & vbCrLf & vbCrLf & _
                      "If you wish to edit an individual item, use the '<' and '>' arrows to     " & vbCrLf & _
                      "locate the item and then make the desired changes." & vbCrLf & vbCrLf & _
                      "Otherwise, click Yes to delete all Subordinate Funding items.", _
                      vbExclamation + vbYesNo, _
                      "Wizard message ...") = vbYes Then
                ActiveDocument.Bookmarks("RPSection002").Range.Select
    'Insert AutoText
                ActiveDocument.AttachedTemplate.AutoTextEntries("SubordinateFunding").Insert Where:=Selection.Range, RichText:=True
            Else
                Me.chkBOCAdditionalFunding.Value = True
            End If
            Me.txtBD5From.Text = ""
            Me.txtBD5Amount.Text = ""
            Me.txtBD5Term.Text = ""
            Me.txtBD5From.BackColor = myGray
            Me.txtBD5Amount.BackColor = myGray
            Me.txtBD5Term.BackColor = myGray
        End If
    End If
End Sub

Private Sub chkBOCEvidenceNonCompete_Change()
    Me.txtBD4Principal.enabled = Me.chkBOCEvidenceNonCompete.Value
    Me.txtBD4Competitor.enabled = Me.chkBOCEvidenceNonCompete.Value
    Me.lblBOCPrincipal.enabled = Me.chkBOCEvidenceNonCompete.Value
    Me.lblBOCCompetitor.enabled = Me.chkBOCEvidenceNonCompete.Value
    Me.cmdBOCInfo.enabled = Me.chkBOCEvidenceNonCompete.Value
    If Me.chkBOCEvidenceNonCompete.Value = True Then
        Me.txtBD4Principal.BackColor = vbWhite
        Me.txtBD4Competitor.BackColor = vbWhite
        Me.txtBD4Principal.SetFocus
        Me.cmdBOCInfo.enabled = True
        Me.cmdBOCNew.enabled = False
        Me.cmdBOCLeft.enabled = False
        Me.cmdBOCRight.enabled = False
        Me.cmdBOCDelete.enabled = False
        On Error Resume Next
        If Len(Me.txtBD4Principal.Text) > 0 Then
            Me.cmdBOCNew.enabled = True
        End If
    Else
        Me.txtBD4Principal.Text = ""
        Me.txtBD4Competitor.Text = ""
        Me.txtBD4Principal.BackColor = myGray
        Me.txtBD4Competitor.BackColor = myGray
        Me.cmdBOCNew.enabled = False
        Me.cmdBOCLeft.enabled = False
        Me.cmdBOCRight.enabled = False
        Me.cmdBOCDelete.enabled = False
    End If
    LastIdx = Val(Trim(ActiveDocument.Bookmarks("RPLast009").Range.Text))
    CurIdx = Val(Trim(ActiveDocument.Bookmarks("RPCur009").Range.Text))
    If Me.chkBOCEvidenceNonCompete.Value = True Then
        If LastIdx > 0 Then
            Me.txtBD4Principal.Text = IIf(Left(ActiveDocument.Bookmarks("BD4Principal_" & CurIdx).Range.Text, 1) <> "[", ActiveDocument.Bookmarks("BD4Principal_" & CurIdx).Range.Text, "")
            Me.txtBD4Competitor.Text = IIf(Left(ActiveDocument.Bookmarks("BD4Competitor_" & CurIdx).Range.Text, 1) <> "[", ActiveDocument.Bookmarks("BD4Competitor_" & CurIdx).Range.Text, "")
            UpdateChangeRP 4, 1, "BOC", "RPFirst009", "RPLast009"
        End If
    Else
        If LastIdx >= 1 Then
            If MsgBox("Unchecking this option will cause all Non-Compete Contract     " & vbCrLf & _
                      "items to be deleted." & vbCrLf & vbCrLf & _
                      "If you wish to edit an individual item, use the '<' and '>' arrows to     " & vbCrLf & _
                      "locate the item and then make the desired changes." & vbCrLf & vbCrLf & _
                      "Otherwise, click Yes to delete all Non-Compete Contract items.", _
                      vbExclamation + vbYesNo, _
                      "Wizard message ...") = vbYes Then
                ActiveDocument.Bookmarks("RPSection009").Range.Select
    'Insert AutoText
                ActiveDocument.AttachedTemplate.AutoTextEntries("NonCompete").Insert Where:=Selection.Range, RichText:=True
            Else
                Me.chkBOCEvidenceNonCompete.Value = True
            End If
        End If
        Me.txtBD4Principal.Text = ""
        Me.txtBD4Competitor.Text = ""
        Me.txtBD4Principal.BackColor = myGray
        Me.txtBD4Competitor.BackColor = myGray
        Me.cmdBOCNew.enabled = False
        Me.cmdBOCLeft.enabled = False
        Me.cmdBOCRight.enabled = False
        Me.cmdBOCDelete.enabled = False
    End If
End Sub

Private Sub chkBOCPurchaseAgreement_Click()
    Me.chkBOCNonCompete.enabled = Me.chkBOCPurchaseAgreement.Value
    If Me.chkBOCPurchaseAgreement.Value = False Then
        Me.chkBOCNonCompete.Value = False
    End If
    On Error Resume Next
    Me.chkBOCNonCompete.SetFocus
End Sub

Private Sub chkBOCStockPurchase_Change()
    If Me.chkBOCStockPurchase.Value = True Then
        Me.txtBOCStockPurchase.enabled = True
        Me.lblBOCStockPurchase.enabled = True
        Me.txtBOCStockPurchase.Text = "."                               '  Added  July 9, 2018 RH  to bypass a required field.
        Me.txtBOCStockPurchase.BackColor = vbWhite
        Me.txtBOCStockPurchase.SetFocus
    Else
        Me.txtBOCStockPurchase.enabled = False
        Me.lblBOCStockPurchase.enabled = False
        Me.txtBOCStockPurchase.Text = ""
        Me.txtBOCStockPurchase.BackColor = myGray
    End If
End Sub

Private Sub chkCACommercial_Click()
'  If Me.chkCACommercial.Value = False Then
'    Me.txtCALocation.Text = ""
'    Me.txtCALocation.BackColor = myGray
'    Me.txtCALocation.Enabled = False
'  Else
'    Me.txtCALocation.BackColor = vbWhite
'    Me.txtCALocation.Enabled = True
'  End If
'  On Error Resume Next
'  Me.txtCALocation.SetFocus
End Sub

Private Sub chkCACompensation_Click()
    If Me.chkCACompensation.Value = 0 And ActiveDocument.Bookmarks("cbRecapture").Range.Text = 1 Then
        retVal = MsgBox("The Limitation on Compensation clause option should be exercised when a Recapture Clause     " & vbCrLf & _
                        "is being used, otherwise it is feasible for owner compensation to be adjusted to offset" & vbCrLf & _
                        "the requirement to repay the loan." & vbCrLf & vbCrLf & _
                        "Do you still wish to unselect this option?", _
                        vbInformation + vbYesNo, _
                        "Limitation on Compensation/Recapture Clause")
        If retVal = 6 Then
            Me.chkCACompensation.Value = 0
        Else
            Me.chkCACompensation.Value = 1
        End If
    End If
    Me.txtCACompensation.enabled = Me.chkCACompensation.Value
    Me.txtCACompensation.enabled = Me.chkCACompensation.Value
    If Me.chkCACompensation.Value = False Then
        Me.txtCACompensation.BackColor = myGray
    Else
        Me.txtCACompensation.BackColor = vbWhite
    End If
    On Error Resume Next
    Me.txtCACompensation.SetFocus
End Sub

Private Sub chkCAFixedAsset_Click()
    Me.txtCAFixedAmount.enabled = Me.chkCAFixedAsset.Value
    Me.txtCAFixedAmount.enabled = Me.chkCAFixedAsset.Value
    If Me.chkCAFixedAsset.Value = False Then
        Me.txtCAFixedAmount.BackColor = myGray
    Else
        Me.txtCAFixedAmount.BackColor = vbWhite
    End If
    On Error Resume Next
    Me.txtCAFixedAmount.SetFocus
End Sub

Private Sub chkCAPiggyback_Click()
'FIXED 6/11/03
'If txtCALenderName is blank, do nothing.  If not blank, check doc to see if other name.
'Otherwise, should match lender name.
    Me.txtCALenderName.enabled = Me.chkCAPiggyback.Value
    '5/20/05
    Me.txtCAPPAmount.enabled = Me.chkCAPiggyback.Value
    '  Me.txtCALenderName.Enabled = Me.chkCAPiggyback.Value
    '==============
    '  Me.txtCACommLoanAmount.Enabled = Me.chkCAPiggyback.Value
    '  Me.cbxCALienPosition.Enabled = Me.chkCAPiggyback.Value
    '  Me.txtCACommYears.Enabled = Me.chkCAPiggyback.Value
    '  Me.txtCACommMonths.Enabled = Me.chkCAPiggyback.Value
    '  Me.txtCACommRate.Enabled = Me.chkCAPiggyback.Value
    If Me.chkCAPiggyback.Value = False Then
        Me.txtCALenderName.BackColor = myGray
        Me.txtCALenderName.Text = ""
        Me.txtCAPPAmount.BackColor = myGray
    '5/20/05
    '    Me.txtCACommLoanAmount.BackColor = myGray
    '    Me.cbxCALienPosition.BackColor = myGray
    '    Me.txtCACommLoanAmount.Text = ""
    '    Me.txtCACommYears.Text = ""
    '    Me.txtCACommMonths.Text = ""
    '    Me.txtCACommRate.Text = ""
    '    Me.txtCACommYears.BackColor = myGray
    '    Me.txtCACommMonths.BackColor = myGray
    '    Me.txtCACommRate.BackColor = myGray
    Else
        Me.txtCALenderName.BackColor = vbWhite
    '5/20/05
        Me.txtCAPPAmount.BackColor = vbWhite
    '    Me.txtCACommLoanAmount.BackColor = vbWhite
    '    Me.cbxCALienPosition.BackColor = vbWhite
    '    Me.txtCACommYears.BackColor = vbWhite
    '    Me.txtCACommMonths.BackColor = vbWhite
    '    Me.txtCACommRate.BackColor = vbWhite
        If ActiveDocument.Bookmarks("LenderName").Range.Text <> "[LenderName]" And Me.txtCALenderName.Text = "" Then
            Me.txtCALenderName.Text = IIf(Left(ActiveDocument.Bookmarks("LenderName").Range.Text, 1) <> "[", ActiveDocument.Bookmarks("LenderName").Range.Text, "")
        End If
        If ActiveDocument.Bookmarks("PariPassuAmount").Range.Text <> "[PariPassuAmount]" Then
            Me.txtCAPPAmount.Text = IIf(Left(ActiveDocument.Bookmarks("PariPassuAmount").Range.Text, 1) <> "[", ActiveDocument.Bookmarks("PariPassuAmount").Range.Text, "")
        End If
    End If
    On Error Resume Next
    Me.txtCALenderName.SetFocus
End Sub

Private Sub chkCC_C1EV1b_Click()
    If Me.chkCC_C1EV1B.Value = True Then
        Me.txtCC_C1EV1B.enabled = True
        Me.txtCC_C1EV1B.BackColor = vbWhite
        'Me.txtCC_C1EV1B.SetFocus
    Else
        Me.txtCC_C1EV1B.TabStop = False
        Me.txtCC_C1EV1B.enabled = False
        Me.txtCC_C1EV1B.BackColor = myGray
        Me.txtCC_C1EV1B.Text = ""
    End If
End Sub

Private Sub chkCC_C1EV1A_Click()
'  Me.txtCC_C1EV1A.Enabled = Me.chkCC_C1EV1A.Value
    If Me.chkCC_C1EV1A.Value = True Then
        Me.txtCC_C1EV1A.BackColor = vbWhite
        Me.txtCC_C1EV1A.enabled = True    '5/2/05
        Me.txtCC_C1EV1A.Text = IIf(Left(ActiveDocument.Bookmarks("LoanAmount").Range.Text, 1) <> "[", Format(ActiveDocument.Bookmarks("LoanAmount").Range.Text, "Standard"), "0.00")
        On Error Resume Next
        Me.txtCC_C1EV1A.SelStart = 0
        Me.txtCC_C1EV1A.SelLength = 99
        Me.txtCC_C1EV1A.SetFocus
    Else
        Me.txtCC_C1EV1A.BackColor = myGray
        Me.txtCC_C1EV1A.Text = "0.00"
        Me.txtCC_C1EV1A.enabled = False
    End If
    'Changed to match 504 2005 6/15/2005
    '  Me.txtCC_C1EV1A.Enabled = Me.chkCC_C1EV1A.Value
    '  If Me.chkCC_C1EV1A.Value = True Then
    '    Me.txtCC_C1EV1A.Text = IIf(Left(ActiveDocument.Bookmarks("C1EV1A").Range.Text, 1) = "[", Format(ActiveDocument.Bookmarks("LoanAmount").Range.Text, "Standard"), ActiveDocument.Bookmarks("C1EV1A").Range.Text)
    '    Me.txtCC_C1EV1A.BackColor = vbWhite
    '    Me.txtCC_C1EV1A.SetFocus
    '  Else
    '    Me.txtCC_C1EV1A.BackColor = myGray
    '    Me.txtCC_C1EV1A.Text = ""
    '  End If
End Sub

Private Sub chkCCC1BP3_Click()
    If Me.chkCCC1BP3.Value = True Then
        Me.txtCCC1BP3.enabled = True
        Me.txtCCC1BP3.BackColor = vbWhite
    Else
        Me.txtCCC1BP3.Text = ""
        Me.txtCCC1BP3.enabled = False
        Me.txtCCC1BP3.BackColor = myGray
    End If
End Sub

Private Sub chkCCFeeTitle1_Click()
    Me.txtCCFeeTitle1.enabled = Me.chkCCFeeTitle1.Value
    Me.txtCCFeeTitleAmount1.enabled = Me.chkCCFeeTitle1.Value
    Me.lblCCFeeTitleInfo1.enabled = Me.chkCCFeeTitle1.Value
    Me.lblCCFeeTitleAmt1.enabled = Me.chkCCFeeTitle1.Value
    If Me.chkCCFeeTitle1.Value = True Then
        Me.txtCCFeeTitle1.BackColor = vbWhite
        Me.txtCCFeeTitleAmount1.BackColor = vbWhite
        Me.txtCCFeeTitle1.SetFocus
    Else
        Me.txtCCFeeTitle1.Text = ""
        Me.txtCCFeeTitleAmount1.Text = ""
        Me.txtCCFeeTitle1.BackColor = myGray
        Me.txtCCFeeTitleAmount1.BackColor = myGray
    End If
End Sub

Private Sub chkC7OptionC_Click()
    If Me.chkC7OptionC.Value = True Then
        MyLenderList = ""
        For i = 1 To 9
            i_ = Trim(Str(i))
            xx = "chkC7PP" & i_
            Y = xx + "B"
            If Me(xx).enabled Then
                Me(Y).enabled = Me(xx).Value
            End If
        Next
        Me.txtC7PP10B.Text = Me.txtC7PP10A.Text
        Me.txtC7PP10B.enabled = False
        Me.txtC7PP10B.BackColor = myGray
        Me.txtC7MaxAmount.enabled = True
        Me.txtC7MaxAmount.BackColor = vbWhite
        Me.txtC7Lender.enabled = True
        Me.txtC7Lender.BackColor = vbWhite
        Me.lblCCMaxAmount.enabled = True
        Me.lblCCCollateralLineCredit.enabled = True
        Me.chkC7PP10B.enabled = True
        Me.cmdShowC7OptionC.enabled = True
        Me.cmdNewC7OptionC.enabled = True
        Me.txtC7Lender.SetFocus
    Else
        For i = 1 To 9
            i_ = Trim(Str(i))
            xx = "chkC7PP" & i_
            Y = xx + "A"
            If Me(xx).enabled Then
                Me(Y).enabled = False
            End If
        Next
        Me.txtC7PP10B.enabled = False
        Me.txtC7MaxAmount.enabled = False
        Me.txtC7MaxAmount.BackColor = myGray
        Me.txtC7Lender.enabled = False
        Me.txtC7Lender.BackColor = myGray
        Me.lblCCMaxAmount.enabled = False
        Me.lblCCCollateralLineCredit.enabled = False
        Me.chkC7PP10B.enabled = False
        Me.cmdShowC7OptionA.enabled = False
        Me.cmdNewC7OptionC.enabled = False
    End If
End Sub

Private Sub chkCCLeaseDate3_Click()
    If Me.chkCCLeaseDate3.Value = True Then
        Me.txtCCLeaseDate3.enabled = True
        Me.txtCCLeaseDate3.BackColor = vbWhite
        On Error Resume Next
        Me.txtCCLeaseDate3.SetFocus
    Else
        Me.txtCCLeaseDate3.enabled = False
        Me.txtCCLeaseDate3.Text = ""
        Me.txtCCLeaseDate3.BackColor = myGray
    End If
End Sub

Private Sub chkCCNoteSecured_Click()
    If Me.chkCCNoteSecured.Value = True Then
        CommandSetup "EnableNext"
        NoteSecured = True
        GuaranteeSecured = True
    Else
        CommandSetup "EnableFinish"
    End If
End Sub

Private Sub chkCCPlusYears3_Change()
    PrevCtrl = Me.chkCCPlusYears3.Name
    CtrlOptChkClick PrevCtrl, 0
End Sub

Private Sub chkCCPlusYears_Change()
    PrevCtrl = Me.chkCCPlusYears.Name
    CtrlOptChkClick PrevCtrl, 0
End Sub

Private Sub chkCCPriorAssignment1_Click()
    Me.txtCCPriorAssignment1.enabled = Me.chkCCPriorAssignment1.Value
    Me.txtCCPriorAssignmentAmount.enabled = Me.chkCCPriorAssignment1.Value
    Me.lblCCPriorAssignmentInfo1.enabled = Me.chkCCPriorAssignment1.Value
    Me.lblCCPriorAssignmentAmt.enabled = Me.chkCCPriorAssignment1.Value
    If Me.chkCCPriorAssignment1.Value = True Then
        Me.txtCCPriorAssignment1.BackColor = vbWhite
        Me.txtCCPriorAssignmentAmount.BackColor = vbWhite
        Me.txtCCPriorAssignment1.SetFocus
    Else
        Me.txtCCPriorAssignment1.Text = ""
        Me.txtCCPriorAssignment1.BackColor = myGray
        Me.txtCCPriorAssignmentAmount.Text = ""
        Me.txtCCPriorAssignmentAmount.BackColor = myGray
    End If
End Sub

Private Sub chkCCFirstLH_Click()
    Me.lblCCFirstLHRevAmt.enabled = Me.chkCCFirstLH.Value
    Me.txtCCFirstLHRevAmt.enabled = Me.chkCCFirstLH.Value
    If Me.chkCCFirstLH.Value = True Then
        Me.txtCCFirstLHRevAmt.BackColor = vbWhite
        Me.txtCCFirstLHRevAmt.SetFocus
    Else
        Me.txtCCFirstLHRevAmt.BackColor = myGray
    End If
End Sub

Private Sub chkC7OptionA_Click()
    If Me.chkC7OptionA.Value = True Then
        MyLienList = ""
        For i = 1 To 9
            i_ = Trim(Str(i))
            xx = "chkC7PP" & i_
            Y = xx + "A"
            If Me(xx).enabled Then
                Me(Y).enabled = Me(xx).Value
            End If
            Me(Y).Value = 0
        Next
        Me.txtC7PP10A.enabled = False
        Me.txtC7PP10A.Text = Me.txtC7PP10.Text
        Me.txtC7Lienholder.enabled = True
        Me.txtC7Lienholder.BackColor = vbWhite
        Me.txtC7Amount.enabled = True
        Me.txtC7Amount.BackColor = vbWhite
        Me.lblCCPriorLienAmt.enabled = True
        Me.lblCCCollateralPriorLien.enabled = True
        Me.chkC7PP10A.enabled = True
        Me.cmdShowC7OptionA.enabled = True
        Me.cmdNewC7OptionA.enabled = True
        Me.chkC7OptionB.enabled = True
        Me.txtC7Lienholder.SetFocus
    Else
        For i = 1 To 9
            i_ = Trim(Str(i))
            xx = "chkC7PP" & i_
            Y = xx + "A"
            If Me(xx).enabled Then
                Me(Y).enabled = False
            End If
            Me(Y).Value = 0
        Next
        Me.txtC7Lienholder.enabled = False
        Me.txtC7Lienholder.BackColor = myGray
        Me.txtC7Amount.enabled = False
        Me.txtC7Amount.BackColor = myGray
        Me.lblCCPriorLienAmt.enabled = False
        Me.lblCCCollateralPriorLien.enabled = False
        Me.chkC7PP10A.enabled = False
        Me.cmdShowC7OptionA.enabled = False
        Me.cmdNewC7OptionA.enabled = False
    End If
End Sub

Private Sub chkCCSecondLH_Click()
    Me.lblCCSecondLHRevAmt.enabled = Me.chkCCSecondLH.Value
    Me.txtCCSecondLHRevAmt.enabled = Me.chkCCSecondLH.Value
    If Me.chkCCSecondLH.Value = True Then
        Me.txtCCSecondLHRevAmt.BackColor = vbWhite
        Me.txtCCSecondLHRevAmt.SetFocus
    Else
        Me.txtCCSecondLHRevAmt.BackColor = myGray
    End If
End Sub
Private Sub chkCCThirdLH_Click()
    Me.lblCCThirdLHRevAmt.enabled = Me.chkCCThirdLH.Value
    Me.txtCCThirdLHRevAmt.enabled = Me.chkCCThirdLH.Value
    If Me.chkCCThirdLH.Value = True Then
        Me.txtCCThirdLHRevAmt.BackColor = vbWhite
        Me.txtCCThirdLHRevAmt.SetFocus
    Else
        Me.txtCCThirdLHRevAmt.BackColor = myGray
    End If
End Sub
Private Sub chkCCFourthLH_Click()
    Me.lblCCFourthLHRevAmt.enabled = Me.chkCCFourthLH.Value
    Me.txtCCFourthLHRevAmt.enabled = Me.chkCCFourthLH.Value
    If Me.chkCCFourthLH.Value = True Then
        Me.txtCCFourthLHRevAmt.BackColor = vbWhite
        Me.txtCCFourthLHRevAmt.SetFocus
    Else
        Me.txtCCFourthLHRevAmt.BackColor = myGray
    End If
End Sub

Private Sub chkCCTermPlus_Click()
    PrevCtrl = Me.chkCCTermPlus.Name
    CtrlOptChkClick PrevCtrl, 0
End Sub

Private Sub chkCCTitleAmt_Change()
    PrevCtrl = Me.chkCCTermPlus.Name
    CtrlOptChkClick PrevCtrl, 0
End Sub

Private Sub chkCCTitleWrite_Change()
    PrevCtrl = Me.chkCCTitleWrite.Name
    CtrlOptChkClick PrevCtrl, 0
End Sub

Private Sub chkCCUnsecured_Click()
    If Counter <> 99 And UpdateCC1 <> 0 Then
        If Me.chkCCUnsecured.Value = False Then
            vStatus = "RETURNED TO"
        Else
            vStatus = "REMOVED FROM"
        End If
        If MsgBox("Unsecured Loan option has been selected." & vbCrLf & vbCrLf & _
                  "The Collateral Conditions section will be " & vStatus & "          " & vbCrLf & _
                  "this Authorization." & vbCrLf & vbCrLf & _
                  "Click 'OK' to continue.", _
                  vbQuestion + vbOKCancel, _
                  "Unsecured Loan Authorization") = vbOK Then
            If Me.chkCCUnsecured.Value = True Then
                ExitCC = True
                On Error Resume Next
                Me.cbxCCA.ListIndex = 0
                Me.cbxCCB.ListIndex = 0
                Me.cbxCCC.ListIndex = 0
                Me.cbxCCD.ListIndex = 0
                Me.cbxCCE.ListIndex = 0
            End If
            Me.cbxCCA.enabled = Not Me.chkCCUnsecured.Value
            Me.cbxCCB.enabled = Not Me.chkCCUnsecured.Value
            Me.cbxCCC.enabled = Not Me.chkCCUnsecured.Value
            Me.cbxCCD.enabled = Not Me.chkCCUnsecured.Value
            Me.cbxCCE.enabled = Not Me.chkCCUnsecured.Value
            Me.mpgCCOptions.Value = 0
            HideShowCC
        Else
            Counter = 99
            Me.chkCCUnsecured.Value = Not Me.chkCCUnsecured.Value
            Counter = 0
        End If
    End If
    Me.cbxCCA.enabled = Not Me.chkCCUnsecured.Value
    Me.cbxCCB.enabled = Not Me.chkCCUnsecured.Value
    Me.cbxCCC.enabled = Not Me.chkCCUnsecured.Value
    Me.cbxCCD.enabled = Not Me.chkCCUnsecured.Value
    Me.cbxCCE.enabled = Not Me.chkCCUnsecured.Value
    Me.mpgCCOptions.Value = 0
    CCExit = False
End Sub

Private Sub cbxCCE_Change()
    Me.cbxCCE.Font.Bold = False
    ExitCC = True
    CCRunning = True
    If Me.cbxCCE.ListIndex = 1 Then
        On Error Resume Next
        Me.cbxCCA.ListIndex = 0
        Me.cbxCCB.ListIndex = 0
        Me.cbxCCC.ListIndex = 0
        Me.cbxCCD.ListIndex = 0
    End If
    Me.mpgCCOptions.pg01CCWrite.enabled = Me.cbxCCE.ListIndex
    Me.mpgCCOptions.Value = Abs(Me.cbxCCE.ListIndex)
    Me.txtCCWrite.enabled = Abs(Me.cbxCCE.ListIndex)
    txtCCName = "Write your own"
    On Error Resume Next
    Me.txtCCWrite.SetFocus
    If Me.cbxCCE.ListIndex = 1 Then
        CCSelected = True
        CCid = 0
        If GuaranteeSecured = True Then
            IsASecurity = True
        End If
        Me.cbxCCA.enabled = False
        Me.cbxCCB.enabled = False
        Me.cbxCCC.enabled = False
        Me.cbxCCD.enabled = False
        Me.cbxCCE.Font.Bold = True
        Me.cmdCCWriteInfo.enabled = True
    Else
        Me.cbxCCA.enabled = True
        Me.cbxCCB.enabled = True
        Me.cbxCCC.enabled = True
        Me.cbxCCD.enabled = True
        Me.cbxCCE.Font.Bold = False
    End If
    If Me.cbxCCE.ListIndex = 1 Then
        Me.cmdback.enabled = False
        Me.cmdNext.enabled = False
        Me.cmdFinish.enabled = True
    Else
        Me.cmdNext.enabled = False
        Me.cmdFinish.enabled = True
    End If
End Sub

Private Sub chkERLoanAmount_Click()
    Me.optERMoreThan.enabled = Me.chkERLoanAmount.Value
'    Me.optERLessThan.Enabled = Me.chkERLoanAmount.Value
'    Me.optERMoreThan.Value = Me.chkERLoanAmount.Value
'    Me.optERLessThan.Value = Me.chkERLoanAmount.Value
'    On Error Resume Next
'    Me.optERLessThan.SetFocus
    If Me.chkERLoanAmount.Value = False Then
        Me.chkERNonPLP.enabled = False
        Me.chkERNonPLP.Value = False
    Else
        Me.chkERNonPLP.enabled = True
        Me.chkERNonPLP.Value = True
    End If
End Sub

Private Sub chkLDAutoCalc_Click()
    If Me.chkLDAutoCalc.Value = False Then
        Me.cmdLDCalc.enabled = True
        Me.txtLDGuaranteeFee.enabled = True
        Me.txtLDGuaranteeFee.Locked = False
        Me.txtLDGuaranteeFee.BackColor = vbWhite
        On Error Resume Next
        Me.txtLDGuaranteeFee.SetFocus
    Else
        Me.cmdLDCalc.enabled = False
        Me.txtLDGuaranteeFee.Text = ""
        Me.txtLDGuaranteeFee.BackColor = myGray
        Me.txtLDGuaranteeFee.enabled = False
        Me.txtLDGuaranteeFee.Locked = True
        Me.txtLDGuaranteeFee.TabStop = True
        Me.txtLDMaturityYears.SetFocus
    End If
End Sub

'Private Sub chkLIPreQual_Change()
''ARRA Change 3/15/2009 -- This code not used for ARRA
'    LICIDChanged = False
'    On Error Resume Next
'    Me.lblLICID.Enabled = Me.chkLIARRA.Value
'    Me.txtLICID.Enabled = Me.chkLIARRA.Value
'    If Me.chkLIARRA.Value = True Then
'        Me.txtLICID.Enabled = True
'        Me.txtLICID.Locked = False
'        Me.txtLICID.BackColor = vbWhite
'        Me.txtLICID.SetFocus
'    Else
'        Me.txtLICID.Text = ""
'        Me.txtLICID.BackColor = myGray
'        Me.txtLICID.Enabled = False
'        Me.txtLICID.Locked = True
'        Me.txtLIName.SetFocus
'    End If
'End Sub
'
Private Sub chkOIDefaultMonths_Click()
    Me.txtOIDefaultMonths.enabled = Me.chkOIDefaultMonths.Value
    Me.lblOIMonths.enabled = Me.chkOIDefaultMonths.Value
    If Me.chkOIDefaultMonths.Value = False Then
        Me.txtOIDefaultMonths.Text = ""
        Me.txtOIDefaultMonths.BackColor = myGray
    Else
        Me.txtOIDefaultMonths.BackColor = vbWhite
        On Error Resume Next
        Me.txtOIDefaultMonths.SetFocus
    End If
End Sub

Private Sub chkOILoanDefault_Click()
    Me.chkOIDefaultMonths.enabled = Me.chkOILoanDefault.Value
    If Me.chkOILoanDefault.Value = False Then
        Me.txtOIDefaultMonths.Text = ""
        Me.chkOIDefaultMonths.Value = False
    End If
    On Error Resume Next
    Me.chkOIDefaultMonths.SetFocus
End Sub

Private Sub chkOLOLateCharge_Click()
    Me.lblOLODaysLate.enabled = Me.chkOLOLateCharge.Value
    Me.lblOLOLateChargePct.enabled = Me.chkOLOLateCharge.Value
    Me.txtOLODaysLate.enabled = Me.chkOLOLateCharge.Value
    Me.txtOLOLateChargePct.enabled = Me.chkOLOLateCharge.Value
    If Me.chkOLOLateCharge.Value = False Then
        Me.txtOLODaysLate.BackColor = myGray
        Me.txtOLOLateChargePct.BackColor = myGray
    Else
        Me.txtOLODaysLate.BackColor = vbWhite
        Me.txtOLOLateChargePct.BackColor = vbWhite
        Me.txtOLODaysLate.SetFocus
    End If
End Sub

Private Sub chkOLORateReduction_Click()
    Me.cbxOLORateReduction.enabled = Me.chkOLORateReduction.Value
    Me.lblOLORateReduction.enabled = Me.chkOLORateReduction.Value
    If Me.chkOLORateReduction.Value = True Then
        Me.cbxOLORateReduction.BackColor = vbWhite
        Me.cbxOLORateReduction.SetFocus
    Else
        Me.cbxOLORateReduction.BackColor = &H80000013
    End If
End Sub

Private Sub chkOLORecapture_Click()
    If Me.chkOLORecapture.Value = True Then
        Me.optOLORecaptureOver.enabled = True
        Me.optOLORecapturePct.enabled = True
        Me.optOLORecapturePct.Value = True
        Me.lblOLORecapture.enabled = True
        Me.lblOLONetEarnings.enabled = True
        Me.lblOLOPctOf.visible = True
        Me.lblOLOPctOf.enabled = True
        Me.txtOLORecapturePct.enabled = True
        Me.txtOLORecapturePct.TabStop = True
        Me.txtOLORecapturePct.BackColor = vbWhite
        On Error Resume Next
        Me.txtOLORecapturePct.SetFocus
    Else
        Me.optOLORecaptureOver.enabled = False
        Me.optOLORecapturePct.enabled = False
        Me.lblOLONetEarnings.enabled = False
        Me.lblOLORecapture.enabled = False
        Me.lblOLOPctOf.visible = True
        Me.lblOLOPctOf.enabled = False
        Me.lblOLORecaptureOver.enabled = False
        Me.txtOLORecapturePct.TabStop = False
        Me.txtOLORecapturePct.enabled = False
        Me.txtOLORecapturePct.Text = ""
        Me.txtOLORecapturePct.BackColor = myGray
        Me.txtOLORecaptureAmt.enabled = False
        Me.txtOLORecaptureAmt.Text = ""
        Me.txtOLORecaptureAmt.BackColor = myGray
    End If
End Sub

'Private Sub chkLIPreQual_Click()
'ARRA Change 3/15/2009 - This code not used for ARRA
'    Dim Ctrl As Control
'    For Each Ctrl In Controls
'        If InStr(1, Ctrl.Name, "LI") Then
'            If InStr(1, Ctrl.Name, "txt") Or InStr(1, Ctrl.Name, "cbx") Then
'                If InStr(1, Ctrl.Name, "cbx") Then
'                    Me(Ctrl.Name).Value = ""
'                Else
'                    Me(Ctrl.Name).Text = ""
'                End If
'                If Me.chkLIARRA.Value = True Then
'                    Me(Ctrl.Name).BackColor = myGray
'                Else
'                    Me(Ctrl.Name).BackColor = vbWhite
'                End If
'            End If
'            Me(Ctrl.Name).Enabled = Not Me.chkLIARRA.Value
'        End If
'    Next  'Enable Loan Information dialog
'    On Error Resume Next
'    If Me.chkLIARRA.Value = False Then    'This is NOT a PreQual
'        Me.lblLICID.Enabled = False
'        Me.txtLICID.Text = ""
'        Me.txtLICID.Enabled = False
'        Me.txtLICID.Locked = True
'        Me.txtLICID.BackColor = myGray
'        Me.txtLIName.SetFocus
'        Me.cmdLIARRA.Enabled = True
'    Else  'This IS a PreQual
'        Me.lblLICID.Enabled = True
'        Me.txtLICID.Enabled = True
'        Me.txtLICID.Locked = False
'        Me.txtLICID.BackColor = vbWhite
'        Me.txtLICID.SetFocus
'        Me.cmdLIARRA.Enabled = True
'    End If
'    Me.chkLIARRA.Enabled = True
'End Sub
'
Private Sub cmdAC1Delete_Click()
    DeleteRP "001", "AC1", "Life Insurance"
    If Val(ActiveDocument.Bookmarks("RPLast001").Range.Text) = 0 Then
        Me.chkAC1LifeInsurance.Value = 0
        ActiveDocument.Bookmarks("RPSection001").Range.Select
    'Insert AutoText
        ActiveDocument.AttachedTemplate.AutoTextEntries("LifeInsurance").Insert Where:=Selection.Range, RichText:=True
    End If
    If Me.cmdAC1New.Caption = "Save" Then
        Me.cmdAC1New.Caption = "New"
    End If
End Sub

Private Sub cmdAC1Left_Click()
    If Me.txtIC5Insured.Text = "" Then
        MyErrorMsg Me.mpgWizard.Value, "Blank", "Yes", "txtIC5Insured"
    '    CommandSetup 3
        Exit Sub
    ElseIf Me.txtIC5Amount.Text = "" Then
        MyErrorMsg Me.mpgWizard.Value, "Blank", "Yes", "txtIC5Amount"
    '    CommandSetup 3
        Exit Sub
    End If
    ChangeRP "001", -1, 1, "AC1"
End Sub

Private Sub cmdAC1New_Click()
    If Me.txtIC5Insured.Text = "" Then
        MyErrorMsg Me.mpgWizard.Value, "Blank", "Yes", "txtIC5Insured"
    '    CommandSetup 3
        Exit Sub
    ElseIf Me.txtIC5Amount.Text = "" Then
        MyErrorMsg Me.mpgWizard.Value, "Blank", "Yes", "txtIC5Amount"
    '    CommandSetup 3
        Exit Sub
    End If
    NewRP "001", 1, "AC1"
End Sub

Private Sub cmdAC1Right_Click()
    If Me.txtIC5Insured.Text = "" Then
        MyErrorMsg Me.mpgWizard.Value, "Blank", "Yes", "txtIC5Insured"
    '    CommandSetup 3
        Exit Sub
    ElseIf Me.txtIC5Amount.Text = "" Then
        MyErrorMsg Me.mpgWizard.Value, "Blank", "Yes", "txtIC5Amount"
    '    CommandSetup 3
        Exit Sub
    End If
    ChangeRP "001", 1, 1, "AC1"
End Sub

Private Sub cmdAC2DeleteAppr_Click()
    If Val(ActiveDocument.Bookmarks("RPLast006").Range.Text) = 1 Then
        Me.cmdAC2DeleteAppr.enabled = False
    Else
        DeleteRP "006", "AC2", "Appraisal"
        If Val(ActiveDocument.Bookmarks("RPLast006").Range.Text) = 1 Then
            Me.cmdAC2DeleteAppr.enabled = False
        End If
    End If
    If Me.cmdAC2NewAppr.Caption = "Save" Then
        Me.cmdAC2NewAppr.Caption = "New"
    End If
    Me.cmdAC2NewAppr.SetFocus
End Sub

Private Sub cmdAC2LeftAppr_Click()
    If Me.txtAC2APMake.Text = "" And Me.txtAC2APMake.enabled = True Then
        MyErrorMsg Me.mpgWizard.Value, "Blank", "Yes", "txtAC2APMake"
    '    CommandSetup 3
        Exit Sub
    ElseIf Me.txtAC2APAmount.Text = "" And Me.txtAC2APAmount.enabled = True Then
        MyErrorMsg Me.mpgWizard.Value, "Blank", "Yes", "txtAC2APAmount"
    '    CommandSetup 3
        Exit Sub
    ElseIf Me.txtAC2APLocation.Text = "" And Me.txtAC2APLocation.enabled = True Then
        MyErrorMsg Me.mpgWizard.Value, "Blank", "Yes", "txtAC2APLocation"
    '    CommandSetup 3
        Exit Sub
    ElseIf Me.txtAC2APModel.Text = "" And Me.txtAC2APModel.enabled = True Then
        MyErrorMsg Me.mpgWizard.Value, "Blank", "Yes", "txtAC2APModel"
    '    CommandSetup 3
        Exit Sub
    ElseIf Me.txtAC2APYear.Text = "" And Me.txtAC2APYear.enabled = True Then
        MyErrorMsg Me.mpgWizard.Value, "Blank", "Yes", "txtAC2APYear"
    '    CommandSetup 3
        Exit Sub
    ElseIf Me.txtAC2SAWyoA.Text = "" And Me.txtAC2SAWyoA.enabled = True Then
        MyErrorMsg Me.mpgWizard.Value, "Blank", "Yes", "txtAC2SAWyoA"
    '    CommandSetup 3
        Exit Sub
    End If
    ChangeRP "006", -1, 1, "AC2"
End Sub

Private Sub cmdAC2LeftSA_Click()
    If Me.txtAC2SAName.Text = "" Then
        MyErrorMsg Me.mpgWizard.Value, "Blank", "Yes", "txtAC2SAName"
    '    CommandSetup 3
        Exit Sub
    ElseIf Me.txtAC2SAAmount.Text = "" Then
        MyErrorMsg Me.mpgWizard.Value, "Blank", "Yes", "txtAC2SAAmount"
    '    CommandSetup 3
        Exit Sub
    ElseIf Me.txtAC2SAPayments.Text = "" And Me.txtAC2SAPayments.enabled = True Then
        MyErrorMsg Me.mpgWizard.Value, "Blank", "Yes", "txtAC2SAPayments"
    '    CommandSetup 3
        Exit Sub
    ElseIf Me.txtAC2SARate.Text = "" And Me.txtAC2SARate.enabled = True Then
        MyErrorMsg Me.mpgWizard.Value, "Blank", "Yes", "txtAC2SARate"
    '    CommandSetup 3
        Exit Sub
    ElseIf Me.txtAC2SABeginDate.Text = "" And Me.txtAC2SABeginDate.enabled = True Then
        MyErrorMsg Me.mpgWizard.Value, "Blank", "Yes", "txtAC2SABeginDate"
    '    CommandSetup 3
        Exit Sub
    ElseIf Me.txtAC2SAWyoA.Text = "" And Me.txtAC2SAWyoA.enabled = True Then
        MyErrorMsg Me.mpgWizard.Value, "Blank", "Yes", "txtAC2SAWyoA"
    '    CommandSetup 3
        Exit Sub
    End If
    ChangeRP "005", -1, 1, "AC2"
End Sub

Private Sub cmdAC2NewAppr_Click()
    If Me.txtAC2APMake.Text = "" And Me.txtAC2APMake.enabled = True Then
        MyErrorMsg Me.mpgWizard.Value, "Blank", "Yes", "txtAC2APMake"
    '    CommandSetup 3
        Exit Sub
    ElseIf Me.txtAC2APAmount.Text = "" And Me.txtAC2APAmount.enabled = True Then
        MyErrorMsg Me.mpgWizard.Value, "Blank", "Yes", "txtAC2APAmount"
    '    CommandSetup 3
        Exit Sub
    ElseIf Me.txtAC2APLocation.Text = "" And Me.txtAC2APLocation.enabled = True Then
        MyErrorMsg Me.mpgWizard.Value, "Blank", "Yes", "txtAC2APLocation"
    '    CommandSetup 3
        Exit Sub
    ElseIf Me.txtAC2APModel.Text = "" And Me.txtAC2APModel.enabled = True Then
        MyErrorMsg Me.mpgWizard.Value, "Blank", "Yes", "txtAC2APModel"
    ' Command Setup 3
        Exit Sub
    ElseIf Me.txtAC2APYear.Text = "" And Me.txtAC2APYear.enabled = True Then
        MyErrorMsg Me.mpgWizard.Value, "Blank", "Yes", "txtAC2APYear"
    'CommandSetup 3
        Exit Sub
    ElseIf Me.txtAC2SAWyoA.Text = "" And Me.txtAC2SAWyoA.enabled = True Then
        MyErrorMsg Me.mpgWizard.Value, "Blank", "Yes", "txtAC2SAWyoA"
    '    CommandSetup 3
        Exit Sub
    End If
    NewRP "006", 1, "AC2"
End Sub

Private Sub cmdAC2NewSA_Click()
    If Me.txtAC2SAName.Text = "" Then
        MyErrorMsg Me.mpgWizard.Value, "Blank", "Yes", "txtAC2SAName"
    '    CommandSetup 3
        Exit Sub
    ElseIf Me.txtAC2SAAmount.Text = "" Then
        MyErrorMsg Me.mpgWizard.Value, "Blank", "Yes", "txtAC2SAAmount"
    '    CommandSetup 3
        Exit Sub
    ElseIf Me.txtAC2SAPayments.Text = "" And Me.txtAC2SAPayments.enabled = True Then
        MyErrorMsg Me.mpgWizard.Value, "Blank", "Yes", "txtAC2SAPayments"
    '    CommandSetup 3
        Exit Sub
    ElseIf Me.txtAC2SARate.Text = "" And Me.txtAC2SARate.enabled = True Then
        MyErrorMsg Me.mpgWizard.Value, "Blank", "Yes", "txtAC2SARate"
    '    CommandSetup 3
        Exit Sub
    ElseIf Me.txtAC2SABeginDate.Text = "" And Me.txtAC2SABeginDate.enabled = True Then
        MyErrorMsg Me.mpgWizard.Value, "Blank", "Yes", "txtAC2SABeginDate"
    '    CommandSetup 3
        Exit Sub
    ElseIf Me.txtAC2SAWyoA.Text = "" And Me.txtAC2SAWyoA.enabled = True Then
        MyErrorMsg Me.mpgWizard.Value, "Blank", "Yes", "txtAC2SAWyoA"
    '    CommandSetup 3
        Exit Sub
    End If
    NewRP "005", 1, "AC2"
End Sub

Private Sub cmdAC2DeleteSA_Click()
    If Val(ActiveDocument.Bookmarks("RPLast005").Range.Text) = 1 Then
        Me.cmdAC2DeleteSA.enabled = False
    Else
        DeleteRP "005", "AC2", "Standby Agreement"
        If Val(ActiveDocument.Bookmarks("RPLast005").Range.Text) = 1 Then
            Me.cmdAC2DeleteSA.enabled = False
        End If
    End If
    If Me.cmdAC2NewSA.Caption = "Save" Then
        Me.cmdAC2NewSA.Caption = "New"
    End If
    Me.cmdAC2NewSA.SetFocus
End Sub

Private Sub cmdAC2RightAppr_Click()
    If Me.txtAC2APMake.Text = "" And Me.txtAC2APMake.enabled = True Then
        MyErrorMsg Me.mpgWizard.Value, "Blank", "Yes", "txtAC2APMake"
    '    CommandSetup 3
        Exit Sub
    ElseIf Me.txtAC2APAmount.Text = "" And Me.txtAC2APAmount.enabled = True Then
        MyErrorMsg Me.mpgWizard.Value, "Blank", "Yes", "txtAC2APAmount"
    '    CommandSetup 3
        Exit Sub
    ElseIf Me.txtAC2APLocation.Text = "" And Me.txtAC2APLocation.enabled = True Then
        MyErrorMsg Me.mpgWizard.Value, "Blank", "Yes", "txtAC2APLocation"
    '    CommandSetup 3
        Exit Sub
    ElseIf Me.txtAC2APModel.Text = "" And Me.txtAC2APModel.enabled = True Then
        MyErrorMsg Me.mpgWizard.Value, "Blank", "Yes", "txtAC2APModel"
    '    CommandSetup 3
        Exit Sub
    ElseIf Me.txtAC2APYear.Text = "" And Me.txtAC2APYear.enabled = True Then
        MyErrorMsg Me.mpgWizard.Value, "Blank", "Yes", "txtAC2APYear"
    '    CommandSetup 3
        Exit Sub
    ElseIf Me.txtAC2SAWyoA.Text = "" And Me.txtAC2SAWyoA.enabled = True Then
        MyErrorMsg Me.mpgWizard.Value, "Blank", "Yes", "txtAC2SAWyoA"
    '    CommandSetup 3
        Exit Sub
    End If
    ChangeRP "006", 1, 1, "AC2"
End Sub

Private Sub cmdAC2RightSA_Click()
    If Me.txtAC2SAName.Text = "" Then
        MyErrorMsg Me.mpgWizard.Value, "Blank", "Yes", "txtAC2SAName"
    '    CommandSetup 3
        Exit Sub
    ElseIf Me.txtAC2SAAmount.Text = "" Then
        MyErrorMsg Me.mpgWizard.Value, "Blank", "Yes", "txtAC2SAAmount"
    '    CommandSetup 3
        Exit Sub
    ElseIf Me.txtAC2SAPayments.Text = "" And Me.txtAC2SAPayments.enabled = True Then
        MyErrorMsg Me.mpgWizard.Value, "Blank", "Yes", "txtAC2SAPayments"
    '    CommandSetup 3
        Exit Sub
    ElseIf Me.txtAC2SARate.Text = "" And Me.txtAC2SARate.enabled = True Then
        MyErrorMsg Me.mpgWizard.Value, "Blank", "Yes", "txtAC2SARate"
    '    CommandSetup 3
        Exit Sub
    ElseIf Me.txtAC2SABeginDate.Text = "" And Me.txtAC2SABeginDate.enabled = True Then
        MyErrorMsg Me.mpgWizard.Value, "Blank", "Yes", "txtAC2SABeginDate"
    '    CommandSetup 3
        Exit Sub
    ElseIf Me.txtAC2SAWyoA.Text = "" And Me.txtAC2SAWyoA.enabled = True Then
        MyErrorMsg Me.mpgWizard.Value, "Blank", "Yes", "txtAC2SAWyoA"
    '    CommandSetup 3
        Exit Sub
    End If
    ChangeRP "005", 1, 1, "AC2"
    Me.txtAC2SAName.SetFocus
End Sub

Private Sub cmdAddressList_Click()
    frmAddressList.Tag = curCtrl
    Load frmAddressList
    #If VBA6 Then
        frmAddressList.Show 1
    #Else
        frmAddressList.Show
    #End If
End Sub


Private Sub cmdBIDelete_Click()
    If Val(ActiveDocument.Bookmarks("RPLast007").Range.Text) = 1 Then
        Me.cmdBIDelete.enabled = False
    Else
        DeleteRP "007", "BI", "Borrower Information"
        If Val(ActiveDocument.Bookmarks("RPLast007").Range.Text) = 1 Then
            Me.cmdBIDelete.enabled = False
        End If
    End If
    If Me.cmdBINew.Caption = "Save" Then
        Me.cmdBINew.Caption = "New"
    End If
    Me.txtBIName.SetFocus
End Sub
Private Sub ChangeUP(Direction, Check)

    Dim NewIdx As Integer
    Dim Field_ As String
    Dim NewField As String
    Dim i As Integer
    Dim Ctrl As String
    Dim CurField As String
    Dim dlgCtrlName As String
    System.Cursor = wdCursorWait
    retVal = 1
    If retVal = 1 Then
        NewIdx = CurIdx + Direction
        If CurIdx = LastIdx And Direction = 1 Then
        Else
            RPIDx = 7
            While NewIdx <= LastIdx And NewIdx >= 1
                Field_ = RP__(RPIDx, 1)
                NewField = Field_ + "_" + Trim(Str(NewIdx))
                If ActiveDocument.Bookmarks.Exists(NewField) Then
                    i = 1
                    While RP__(RPIDx, i) <> ""
                        Field_ = RP__(RPIDx, i)
                        dlgCtrlName = "txt" & Field_
                        CurField = Field_ + "_" + Trim(Str(CurIdx))
                        NewField = Field_ + "_" + Trim(Str(NewIdx))
                        UpdateField CurField, dlgCtrlName, 0
                        UpdateCtrl NewField, dlgCtrlName
                        UpdateField Field_, dlgCtrlName, 0
                        i = i + 1
                    Wend
                    CurIdx = NewIdx
                    GoTo ChangeUPFound
                End If
                NewIdx = NewIdx + Direction
            Wend
ChangeUPFound:
            CurIdx = NewIdx
            UpdateField "RPCur010", CurIdx, -1
            Me.cbxUPCategory.SetFocus
            UpdateChangeRP 7, 10, "UP", "RPFirst010", "RPLast010"
            System.Cursor = wdCursorNormal
        End If
    End If
    If Me.txtUPRemainingAmount.Value = "0.00" Then
        Me.cmdUPNew.enabled = False
        Me.cmdUPShowList.enabled = True
    Else
        Me.cmdUPNew.enabled = True
    End If

End Sub

Private Sub DeleteUP()

    Dim MyValue As Integer
    Dim i As Integer
    Dim Field_ As String
    Dim CurField As String
    MyValue = MsgBox("Delete current Use of Proceeds entry?", vbCritical + vbOKCancel, "Please Confirm...")
    If MyValue = 1 Then
        System.Cursor = wdCursorWait
        i = 1
        RPid_ = 7
        While RP__(RPid_, i) <> ""
            Field_ = RP__(RPid_, i)
            CurField = Field_ + "_" + Trim(Str(CurIdx))
            ActiveDocument.Bookmarks(CurField).Select
            Selection.Delete
            i = i + 1
        Wend
        If FirstIdx = LastIdx Then
            CurIdx = 1
            LastIdx = 0
            NewUP
            FirstIdx = 1
        ElseIf CurIdx = LastIdx Then
            ChangeUP -1, 0
            LastIdx = CurIdx
        ElseIf CurIdx = FirstIdx Then
            xIdx = CurIdx + 1
            ChangeUP 1, 0
            FirstIdx = CurIdx
        Else
            ChangeUP 1, 0
        End If
        UpdateChangeRP 7, 10, "UP", "RPFirst010", "RPLast010"
        UpdateUPTot
        System.Cursor = wdCursorNormal
    Else

    End If
End Sub
Private Sub DeleteRP(RPindex As String, dlgCtrlPre, txtCategory)
    Dim MyValue
    Dim RPid_
    Dim i
    Dim Field_
    Dim CurField
    Dim dlgPre As String
    Application.ScreenUpdating = False
    dlgPre = dlgCtrlPre
    MyValue = MsgBox("Delete current " & txtCategory & " entry?     " & vbCrLf & vbCrLf & _
                     "(Make sure to 'Update' this section.)     ", vbCritical + vbOKCancel, "Please Confirm...")
    If MyValue = 1 Then
        System.Cursor = wdCursorWait
        RPindex = Right(RPindex, 3)
        RPid_ = GetArrayId(RPindex)
        If RPid_ > -1 Then
            CurIdx = Val(ActiveDocument.Bookmarks("RPCur" + RPindex).Range.Text)
            LastIdx = Val(ActiveDocument.Bookmarks("RPLast" + RPindex).Range.Text)
            FirstIdx = Val(ActiveDocument.Bookmarks("RPFirst" + RPindex).Range.Text)
            i = 1
            While RP__(RPid_, i) <> ""
                Field_ = RP__(RPid_, i)
                CurField = Field_ + "_" + Trim(Str(CurIdx))
                ActiveDocument.Bookmarks(CurField).Select
                Selection.Range.Delete
                i = i + 1
            Wend
            If FirstIdx = LastIdx Then
                RP__(RPid_, 0) = "1"
                UpdateText "RPLast" + RPindex, "0"
                NewRP Str(RPindex), 0, dlgPre
                UpdateText "RPFirst" + RPindex, "1"
            ElseIf CurIdx = LastIdx Then
                ChangeRP RPindex, -1, 0, dlgPre
                UpdateText "RPLast" + RPindex, (RP__(RPid_, 0))
            ElseIf CurIdx = FirstIdx Then
                ChangeRP RPindex, 1, 0, dlgPre
                UpdateText "RPFirst" + RPindex, (RP__(RPid_, 0))
            Else
                ChangeRP RPindex, 1, 0, dlgPre
            End If
            UpdateChangeRP Int(RPid_), Int(RPindex), dlgPre, "RPFirst" & RPindex, "RPLast" & RPindex
            System.Cursor = wdCursorNormal
        End If
    End If
End Sub

Private Sub cmdBIRight_Click()
    ChangeRP "007", 1, 1, "BI"
End Sub

Private Sub cmdBILeft_Click()
    ChangeRP "007", -1, 1, "BI"
End Sub

Private Sub RestoreUP()
    Dim strName
    Dim atEntry As AutoTextEntry

    On Error Resume Next
    strName = "RPSection010"
    ActiveDocument.Bookmarks(strName).Select
    ActiveDocument.AttachedTemplate.AutoTextEntries(strName).Insert Where:=Selection.Range, RichText:=True
    For Each atEntry In _
        ActiveDocument.AttachedTemplate.AutoTextEntries
        If atEntry.Name = strName Then atEntry.Delete
    Next atEntry
    On Error GoTo -1: On Error GoTo 0
End Sub

Private Sub RestoreUP2()
    Dim strName
    Dim atEntry As AutoTextEntry

    On Error Resume Next
    strName = "RPSection010a"
    ActiveDocument.Bookmarks(strName).Select
    ActiveDocument.AttachedTemplate.AutoTextEntries(strName).Insert Where:=Selection.Range, RichText:=True
    For Each atEntry In _
        ActiveDocument.AttachedTemplate.AutoTextEntries
        If atEntry.Name = strName Then atEntry.Delete
    Next atEntry
    On Error GoTo -1: On Error GoTo 0
End Sub

Private Sub RestoreRP()
    Dim i
    Dim strName
    On Error Resume Next
    For i = 0 To 10
        If RPid__(i) <> "" Then
            strName = "RPSection" + RPid__(i)
            ActiveDocument.Bookmarks(strName).Select
            ActiveDocument.AttachedTemplate.AutoTextEntries(strName).Insert Where:=Selection.Range, RichText:=True
            ActiveDocument.AttachedTemplate.AutoTextEntries.Delete Name:=strName, Range:=Selection.Range
        End If
    Next i
    On Error GoTo -1: On Error GoTo 0
End Sub

Private Sub RestoreCC()
    Dim strName
    Dim atEntry As AutoTextEntry

    On Error Resume Next
    strName = "CCAll"
    ActiveDocument.Bookmarks(strName).Select
    ActiveDocument.AttachedTemplate.AutoTextEntries(strName).Insert Where:=Selection.Range, RichText:=True
End Sub

Private Sub DeleteBackupUP()
    Dim strName
    On Error Resume Next
    strName = "RPSection010"
    ActiveDocument.AttachedTemplate.AutoTextEntries(strName).Delete
    On Error GoTo -1
    On Error GoTo 0
End Sub

Private Sub DeleteBackupUP2()
    Dim strName
    On Error Resume Next
    strName = "RPSection010a"
    ActiveDocument.AttachedTemplate.AutoTextEntries(strName).Delete
    On Error GoTo -1
    On Error GoTo 0
End Sub

Private Sub DeleteBackupRP()
    Dim i
    Dim strName
    If Len(ID) > 0 Then
        strName = "RPSection" & ID
        ActiveDocument.AttachedTemplate.AutoTextEntries(strName).Delete
    Else
        On Error Resume Next
        For i = 0 To 10
            If RPid__(i) <> "" Then
                strName = "RPSection" + RPid__(i)
                ActiveDocument.AttachedTemplate.AutoTextEntries(strName).Delete
            End If
        Next i
    End If
    On Error GoTo -1: On Error GoTo 0
End Sub

Private Sub BackupUP()

    Dim strName
    On Error Resume Next
    strName = "RPSection010"
    ActiveDocument.Bookmarks(strName).Range.Select
    ActiveDocument.AttachedTemplate.AutoTextEntries.Add Name:=strName, Range:=Selection.Range
    On Error GoTo -1
    On Error GoTo 0
End Sub

Private Sub BackupUP2()

    Dim strName
    On Error Resume Next
    strName = "RPSection010a"
    ActiveDocument.Bookmarks(strName).Range.Select
    ActiveDocument.AttachedTemplate.AutoTextEntries.Add Name:=strName, Range:=Selection.Range
    On Error GoTo -1
    On Error GoTo 0
End Sub

Private Sub BackupRP()
    Dim i
    Dim strName
    On Error Resume Next
    For i = 0 To 10
        If RPid__(i) <> "" Then
            strName = "RPSection" + RPid__(i)
            ActiveDocument.Bookmarks(strName).Select
            ActiveDocument.AttachedTemplate.AutoTextEntries.Add Name:=strName, Range:=Selection.Range
        End If
    Next i
    On Error GoTo -1: On Error GoTo 0
End Sub

Private Sub ChangeRP(RPindex As String, Direction, Check, dlgCtrlPre)
'=============================================================
' frmMain.ChangeRP
' RPindex (Variant)
' Direction (Variant)
' Check (Variant)
' dlgCtrlPre (Variant)
' Sub
'-------------------------------------------------------------
' Modified 09-17-2001 WordBasic to VBA
' Author : Daniel H. Smith, Programmer/Analyst
' Notes :  Complete
'-------------------------------------------------------------
' Revision History
'-------------------------------------------------------------
' 09-17-2001 DHS: Completed; Tested; Watch; Improved 9/26/01
'=============================================================
' End Code Header block

    Application.ScreenUpdating = False
    ActiveWindow.View.ShowFieldCodes = False    'True  9/20/2006
    Dim dlgPre As String
    Dim RPid_ As Integer
    Dim CurIdx As Integer
    Dim LastIdx As Integer
    Dim NewIdx As Integer
    Dim Field_ As String
    Dim NewField As String
    Dim i As Integer
    Dim dlgCtrlName As String
    Dim dlgCtrlName2 As String
    Dim Ctrl As String
    Dim CurField As String
    Dim RPIDx As Integer
    Dim ArrayID As String
    System.Cursor = wdCursorWait
    dlgPre = dlgCtrlPre
    ArrayID = RPindex
    RPindex = Right(RPindex, 3)
    RPid_ = GetArrayId(RPindex)
    RPIDx = RPid_
    Type_ = 0
    If RPid_ > -1 Then
        retVal = 1
        If retVal = 1 Then
    'Was Val, now Trim  DHS 6/2/04
            CurIdx = Trim(RP__(RPid_, 0))
            LastIdx = Trim(ActiveDocument.Bookmarks("RPLast" + RPindex).Range.Text)
            NewIdx = CurIdx + Direction
            If RPindex = "007" Or RPindex = "008" Then
                Pos = InStr(RP__(RPid_, 1), "Name")
            End If
            While NewIdx <= LastIdx And NewIdx >= 1
                Field_ = RP__(RPid_, 1)
                NewField = Field_ + "_" + Trim(Str(NewIdx))
                If ActiveDocument.Bookmarks.Exists(NewField) Then
                    i = 1
                    While RP__(RPid_, i) <> ""
                        Field_ = RP__(RPid_, i)
                        If RPindex = "001" Then    'Insurance
                            dlgCtrlName = "txt" & Field_
                            Type_ = 0
                        End If
                        If RPindex = "002" And InStr(1, Field_, "cbBD5Subordinate") <> 0 Then
    'Additional Funding
                            dlgCtrlName = "txt" & Field_
                            Type_ = 0
                        ElseIf RPindex = "002" And InStr(1, Field_, "cb") = 0 Then
                            dlgCtrlName = "txt" & Field_
                            Type_ = 0
                        End If
                        If RPindex = "005" Then    'Standby Agreement
                            dlgCtrlName = "txtAC2" & Field_
                            Type_ = 0
                        End If
                        If RPindex = "006" Then    'Appraisal
                            If InStr(1, Field_, "obAP") > 0 Then
                                dlgCtrlName = "txtAC2" & Field_
                                Type_ = 0
                            Else
                                dlgCtrlName = "txtAC2" & Field_
                                Type_ = 0
                            End If
                        End If
                        If RPindex = "007" Or RPindex = "008" Then    'Borrower and Operating Company
                            If InStr(RP__(RPid_, i), "CoBorrower") Then
                                dlgCtrlName = "chkOCCoBorrower"
                                Type_ = 1
                            ElseIf InStr(RP__(RPid_, i), "State") Then
                                dlgCtrlName = "cbx" & dlgCtrlPre & Mid(Field_, Pos)
                                Type_ = 0
                            Else
                                dlgCtrlName = "txt" & dlgCtrlPre & Mid(Field_, Pos)
                                Type_ = 0
                            End If
                        End If
                        If RPindex = "009" Then    'Principal/Competitor
                            dlgCtrlName = "txt" & Field_
                            Type_ = 0
                        End If
                        If RPindex = "010" Then    'Use of Proceeds
                            If Field_ = "obUPID" Then
                                dlgCtrlName = "cbxUPCategory"
                            Else
                                dlgCtrlName = "txt" & Field_
                            End If
                        End If
                        If RPindex = "011" Then    'Non-Citizen
                            If Field_ = "optAC50Pct" Then
                                GoTo NoIndex
                                dlgCtrlName = "optAC50Pct"
                                Type_ = 1
                            Else
                                dlgCtrlName = "txt" & Field_
                            End If
                        End If
                        CurField = Field_ + "_" + Trim(Str(CurIdx))
                        NewField = Field_ + "_" + Trim(Str(NewIdx))
                        UpdateField CurField, dlgCtrlName, Type_
                        UpdateCtrl NewField, dlgCtrlName
                        UpdateField Field_, dlgCtrlName, Type_
NoIndex:
                        i = i + 1
                    Wend
                    UpdateText "RPCur" + RPindex, Trim(Str(NewIdx))
                    RP__(RPid_, 0) = Str(NewIdx)
                    GoTo ChangeRPFound
                End If
                NewIdx = NewIdx + Direction
            Wend
ChangeRPFound:
            UpdateChangeRP RPIDx, Int(ArrayID), dlgPre, "RPFirst" + RPindex, "RPLast" + RPindex
            System.Cursor = wdCursorNormal
            Select Case dlgPre
            Case "OC", "BI"
                Me("txt" & dlgPre & "Name").SetFocus
            Case "BOC"
                If ArrayID = "009" Then
                    Me.txtBD4Principal.SetFocus
                ElseIf ArrayID = "002" Then
                    Me.txtBD5From.SetFocus
                End If
            Case "AC2"
                If ArrayID = "005" Then
                    Me.txtAC2SAName.SetFocus
                ElseIf ArrayID = "006" Then
                    If Me.txtAC2APLocation.visible = True Then
                        Me.txtAC2APLocation.SetFocus
                    Else
                        Me.txtAC2APMake.SetFocus
                    End If
                End If
            Case "UP"
                If ArrayID = "010" Then
                    Me.cbxUPCategory.SetFocus
                End If
            Case Else
                On Error Resume Next
                Me("txt" & Field_).SetFocus
            End Select
        End If
    End If
    ActiveWindow.View.ShowFieldCodes = False
End Sub

Private Sub cmdBINew_Click()
    If Me.cmdBINew.Caption = "New" Then
        MsgBox "You are about to add an additional borrower to this Authorization." & vbCrLf & vbCrLf & _
               "Please note that the address from the current borrower will be carried     " & vbCrLf & _
               "over to the new one by default, but it can be changed if needed.", _
               vbExclamation + vbOKOnly, _
               "Additional Borrower"
    Else
    End If
    NewRP "007", 1, "BI"
    If Me.cmdBINew.Caption = "Save" Then
        Me.cmdNext.enabled = False
    Else
        Me.cmdNext.enabled = True
    End If
End Sub

Private Sub cmdBOCDelete_Click()
    DeleteRP "009", "BOC", "Non-Compete"
    If Val(ActiveDocument.Bookmarks("RPLast009").Range.Text) = 0 Then
        Me.chkBOCEvidenceNonCompete.Value = 0
        ActiveDocument.Bookmarks("RPSection009").Range.Select
    'Insert AutoText
        ActiveDocument.AttachedTemplate.AutoTextEntries("NonCompete").Insert Where:=Selection.Range, RichText:=True
    End If
    If Me.cmdBOCNew.Caption = "Save" Then
        Me.cmdBOCNew.Caption = "New"
    End If
End Sub

Private Sub cmdBOCDeleteAF_Click()
    DeleteRP "002", "BOC", "Additional Funding"
    If Val(ActiveDocument.Bookmarks("RPLast002").Range.Text) = 0 Then
        Me.chkBOCAdditionalFunding.Value = 0
        ActiveDocument.Bookmarks("RPSection002").Range.Select
    'Insert AutoText
        ActiveDocument.AttachedTemplate.AutoTextEntries("SubordinateFunding").Insert Where:=Selection.Range, RichText:=True
    End If
    If Me.cmdBOCNewAF.Caption = "Save" Then
        Me.cmdBOCNewAF.Caption = "New"
    End If
End Sub

Private Sub cmdBOCLeft_Click()
    If Me.txtBD4Principal.Text = "" Then
        MyErrorMsg Me.mpgWizard.Value, "Blank", "Yes", "txtBD4Principal"
    '    CommandSetup 3
        Exit Sub
    ElseIf Me.txtBD4Competitor.Text = "" Then
        MyErrorMsg Me.mpgWizard.Value, "Blank", "Yes", "txtBD4Competitor"
    '    CommandSetup 3
        Exit Sub
    End If
    ChangeRP "009", -1, 1, "BOC"
End Sub

Private Sub cmdBOCLeftAF_Click()
    If Me.txtBD5From.Text = "" Then
        MyErrorMsg Me.mpgWizard.Value, "Blank", "Yes", "txtBD5From"
    '    CommandSetup 3
        Exit Sub
    ElseIf Me.txtBD5Amount.Text = "" Then
        MyErrorMsg Me.mpgWizard.Value, "Blank", "Yes", "txtBD5Amount"
    '    CommandSetup 3
        Exit Sub
    ElseIf Me.txtBD5Term.Text = "" And Me.txtBD5Term.enabled = True Then
        MyErrorMsg Me.mpgWizard.Value, "Blank", "Yes", "txtBD5Term"
    '    CommandSetup 3
        Exit Sub
    End If
    ChangeRP "002", -1, 1, "BOC"
End Sub

Private Sub cmdBOCNew_Click()
    If Me.txtBD4Principal.Text = "" Then
        MyErrorMsg Me.mpgWizard.Value, "Blank", "Yes", "txtBD4Principal"
    '    CommandSetup 3
        Exit Sub
    ElseIf Me.txtBD4Competitor.Text = "" Then
        MyErrorMsg Me.mpgWizard.Value, "Blank", "Yes", "txtBD4Competitor"
    '    CommandSetup 3
        Exit Sub
    End If
    NewRP "009", 1, "BOC"
End Sub

Private Sub cmdBOCNewAF_Click()
    If Me.txtBD5From.Text = "" Then
        MyErrorMsg Me.mpgWizard.Value, "Blank", "Yes", "txtBD5From"
    '    CommandSetup 3
        Exit Sub
    ElseIf Me.txtBD5Amount.Text = "" Then
        MyErrorMsg Me.mpgWizard.Value, "Blank", "Yes", "txtBD5Amount"
    '    CommandSetup 3
        Exit Sub
    ElseIf Me.txtBD5Term.Text = "" And Me.txtBD5Term.enabled = True Then
        MyErrorMsg Me.mpgWizard.Value, "Blank", "Yes", "txtBD5Term"
    '    CommandSetup 3
        Exit Sub
    End If
    NewRP "002", 1, "BOC"
End Sub

Private Sub cmdBOCRight_Click()
    If Me.txtBD4Principal.Text = "" Then
        MyErrorMsg Me.mpgWizard.Value, "Blank", "Yes", "txtBD4Principal"
    '    CommandSetup 3
        Exit Sub
    ElseIf Me.txtBD4Competitor.Text = "" Then
        MyErrorMsg Me.mpgWizard.Value, "Blank", "Yes", "txtBD4Competitor"
    '    CommandSetup 3
        Exit Sub
    End If
    ChangeRP "009", 1, 1, "BOC"
End Sub

Private Sub cmdBOCRightAF_Click()
    If Me.txtBD5From.Text = "" Then
        MyErrorMsg Me.mpgWizard.Value, "Blank", "Yes", "txtBD5From"
    '    CommandSetup 3
        Exit Sub
    ElseIf Me.txtBD5Amount.Text = "" Then
        MyErrorMsg Me.mpgWizard.Value, "Blank", "Yes", "txtBD5Amount"
    '    CommandSetup 3
        Exit Sub
    ElseIf Me.txtBD5Term.Text = "" And Me.txtBD5Term.enabled = True Then
        MyErrorMsg Me.mpgWizard.Value, "Blank", "Yes", "txtBD5Term"
    '    CommandSetup 3
        Exit Sub
    End If
    ChangeRP "002", 1, 1, "BOC"
End Sub

Private Sub cmdCancel_Click()

    curPageName = Me.mpgWizard.Pages(Me.mpgWizard.Value).Name
    If Me.mpgWizard.Pages(Me.mpgWizard.Value).Name = "pgUP" Then
        curPageName = "pgUP"
        GoTo Exit2Doc
    End If
    If Me.mpgWizard.Pages(Me.mpgWizard.Value).Name = "pgPleaseWait" Then
        curPageName = Me.mpgWizard.Pages(PrevPage).Name
        GoTo ExitWait
    End If
    If Me.fraCustomizedConditions.visible = True Then
        Me.fraCustomizedConditions.visible = False
    End If
    If Me.lblCCNoteSecured.visible = True Then
        Me.lblCCNoteSecured.visible = False
    End If
    If CCid > 0 And ExitCC = True Or Me.mpgCCOptions.Value = 1 Then
        If MsgBox("Are you sure you wish to cancel this selection" & vbCrLf & vbCrLf & _
                  "and return to the Collateral Conditions Main Menu?       ", _
                  vbQuestion + vbYesNo, _
                  "Collateral Conditions") = vbYes Then
            RestoreRP
            Me.txtCCSelectMsg.visible = True
        '   Me.optCCGuaranteesOnly.visible = True
            CCExit = True
            CCMaster = ""
            RetrieveInfo = False
            ResetCollateral
            ResetLienholders CCid
            CommandSetup "EnableFinish"
            Me.cmdWizardShortCut.visible = True
            CCid = -1
        End If
    Else
        vStartTab = StartTab
        Select Case InStr(1, CurTab, "pgCC")
        Case 1
            If Me.chkCCNoteSecured.Value = True Then
                Me.chkCCNoteSecured.Value = False
                CurTab = "pgCC1"
                cmdFinish_Click
            End If
        Case Else
        End Select
    'curPageName = Me.mpgWizard.Pages(ActiveControl).Name
        If InStr(1, curPageName, "pg") > 0 Then
            Select Case StartID
            Case 0
                curPageName = "pgLI"
                ExitCC = True
            Case 1
                curPageName = "pgRT"
                ExitCC = True
            Case 2
                curPageName = "pgUP"
                ExitCC = True
            Case 3
                curPageName = "pgCC"
                If CCRunning = True Then
                    ExitCC = True
                End If
            Case 4
                curPageName = "pgACI"
                ExitCC = True
            Case 5
                curPageName = "pgACII"
                ExitCC = True
            Case 6
                curPageName = "pgLI"
                ExitCC = True
            Case Else
            End Select
        End If
        If ActiveDocument.Bookmarks("Complete_LI").Range.Text = 0 And WizInfo.IsInDev = False Then
            CommandBars("7a Wizard").Controls("Repayment Terms").enabled = False
        Else
            CommandBars("7a Wizard").Controls("Repayment Terms").enabled = True
        End If
        If ActiveDocument.Bookmarks("Complete_RT").Range.Text = 0 And WizInfo.IsInDev = False Then
            CommandBars("7a Wizard").Controls("Use of Proceeds").enabled = False
        Else
            CommandBars("7a Wizard").Controls("Use of Proceeds").enabled = True
        End If
        If ActiveDocument.Bookmarks("Complete_UP").Range.Text = 0 And WizInfo.IsInDev = False Then
            CommandBars("7a Wizard").Controls("Collateral Cond.").enabled = False
            CommandBars("7a Wizard").Controls("Additional Cond. (1)").enabled = False
            CommandBars("7a Wizard").Controls("Additional Cond. (2)").enabled = False
        Else
            CommandBars("7a Wizard").Controls("Collateral Cond.").enabled = True
            CommandBars("7a Wizard").Controls("Additional Cond. (1)").enabled = True
            CommandBars("7a Wizard").Controls("Additional Cond. (2)").enabled = True
        End If
        If InDev = 0 Then
            frmMain.hide
            curPageName = Me.mpgWizard.Pages(PrevPage).Name
            Application.ScreenRefresh
            Application.ScreenUpdating = False
            If InStr(1, curPageName, "pgLI") > 0 Then
                GotoLI.Main
                Exit Sub
            ElseIf InStr(1, curPageName, "pgRT") > 0 Then
                GotoNT.Main
            ElseIf InStr(1, curPageName, "pgUP") > 0 Then
                GotoUP.Main
            ElseIf InStr(1, curPageName, "pgCC") > 0 Then
                GotoCC.Main
            ElseIf InStr(1, curPageName, "pgACII") > 0 Then
                GotoAC2.Main
            ElseIf InStr(1, curPageName, "pgACI") > 0 Then
                GotoAC1.Main
            End If
            Unload frmMain
        Else
            If ExitCC = False And CCRunning = False Then
                frmMain.hide
                Application.ScreenRefresh
                Application.ScreenUpdating = False
                Unload frmMain
            Else
Exit2Doc:
                vResult = MsgBox("Exit to Document? " & vbCr & vbCr & _
                                 "If you are cancelling this section of the Wizard,     " & vbCr & _
                                 "all information just typed in this section will be discarded.     " & vbCrLf & vbCrLf & _
                                 "Continue?", _
                                 vbQuestion + vbYesNo + vbDefaultButton2, _
                                 "Cancel Clicked")
                If vResult = 6 Then
ExitWait:
                    Me.lblTitle.Caption = ""
                    Cancel = False
                    frmMain.hide
                    Application.ScreenRefresh
                    Application.ScreenUpdating = False
                    If InStr(1, curPageName, "pgLI") > 0 Then
                        RestoreRP
                        UpdateLI1 = 0
                        UpdateLI2 = 0
    '        UpdateLI3 = 0
                        GotoLI.Main
                    ElseIf InStr(1, curPageName, "pgRT") > 0 Then
                        RestoreRP
                        UpdateRT1 = 0
                        UpdateRT2 = 0
                        UpdateRT3 = 0
                        UpdateRT4 = 0
                        GotoNT.Main
                    ElseIf InStr(1, curPageName, "pgUP") > 0 Then
                        RestoreUP
                        UpdateUP = 0
                        GotoUP.Main
                        Unload frmMain
                        GoTo ExitContinue
                    ElseIf InStr(1, curPageName, "pgCC") > 0 Then
                        RestoreRP
                        UpdateCC1 = 0
                        GotoCC.Main
                    ElseIf InStr(1, curPageName, "pgACII") > 0 Then
                        RestoreRP
                        UpdateACI1 = 0
                        UpdateACI2 = 0
                        UpdateACI3 = 0
                        UpdateACI4 = 0
                        UpdateACI5 = 0
                        GotoAC2.Main
                    ElseIf InStr(1, curPageName, "pgACI") > 0 Then
                        RestoreRP
                        UpdateACII1 = 0
                        UpdateACII2 = 0
                        UpdateACII3 = 0
                        GotoAC1.Main
                    End If
                Else
                End If
                Exit Sub
            End If
        End If
ExitContinue:
        Application.ScreenUpdating = False
        Select Case SectionStart
        Case 0, 2
            GotoLI.Main
        Case 3
            GotoNT.Main
        Case 7
            GotoUP.Main
        Case 8
            GotoCC.Main
        Case 17
            GotoAC1.Main
        Case 22
            GotoAC2.Main
        Case Else
        End Select
        If NoteSecured = True Then 'And Me.optCCGuaranteesOnly.Value = False Then
            CCid = 18
            Me.mpgWizard.Value = Me.mpgWizard.Pages("pgCC1").index
            Me.fraCCInfo.Caption = "Note -- Select Note Collateral"
            Me.mpgCCOptions.Value = Me.mpgCCOptions.Pages("pg00CCBlank").index
            Me.lblCCNoteSecured.visible = True
            Me.lblCCNoteSecured.Caption = Me.lblCCNoteSecured.Caption & vbCr & vbCr & "Click 'Finish' to end."
    '                    HideTop of Page 8
            Me.cbxCCA.enabled = False
            Me.cbxCCB.enabled = True
            Me.cbxCCC.enabled = True
            Me.cbxCCD.enabled = True
            Me.cbxCCE.enabled = True
            Me.cmdNext.enabled = False
            Me.cmdFinish.enabled = True
        Else
            On Error Resume Next
            Me.mpgWizard.Value = Me.mpgWizard.Pages("pgCC1").index
            Me.cbxCCA.enabled = True
            Me.cbxCCA.ListIndex = 0
'            If Me.optCCGuaranteesOnly.Value = False Then
                Me.cbxCCB.enabled = True
                Me.cbxCCB.ListIndex = 0
                Me.cbxCCC.enabled = True
                Me.cbxCCC.ListIndex = 0
                Me.cbxCCD.enabled = True
                Me.cbxCCD.ListIndex = 0
                Me.cbxCCE.enabled = True
                Me.cbxCCE.ListIndex = 0
'            End If
            Me.fraCCInfo.Caption = "Collateral Conditions"
            Me.mpgCCOptions.Value = Me.mpgCCOptions.Pages("pg00CCBlank").index
            Me.lblCCNoteSecured.visible = False
            Me.txtCCSelectMsg.visible = True
'            Me.optCCGuaranteesOnly.visible = True
        End If
    End If
End Sub
Private Sub cmdCCAllBusiness_Click()
    Me.chkC7PP1.Value = True  'Equipment
    Me.chkC7PP3.Value = True  'Inventory
    Me.chkC7PP4.Value = True  'Accounts
    Me.chkC7PP5.Value = True  'Instruments
    Me.chkC7PP6.Value = True  'Chattel Paper
    Me.chkC7PP7.Value = True  'Intangibles
End Sub

Private Sub cmdCCReset_Click()
    ResetCC = True
    Me.txtCCGuarantors.Text = ""
    If Me.lstCCUSState.ListIndex <> -1 Then
        Me.lstCCUSState.ListIndex = 0
    End If
    Me.txtCCCountry.Text = ""
    Me.mpgCCOptions.Value = 0
    Me.lblCCSecurity1.Width = 240
    Me.lblCCSecurity2.Width = 240
    Me.lblCCSecurity3.Width = 240
    Me.lblCCSecurity1.visible = False
    Me.lblCCSecurity2.visible = False
    Me.lblCCSecurity3.visible = False
    Me.txtCCSelectMsg.visible = True
'    Me.optCCGuaranteesOnly.visible = True
    Me.lblCCProcessing.Caption = ""
    Me.lblCCProcessing.visible = False
    Me.lblCCNoteSecured.Caption = ""
    Me.lblCCNoteSecured.visible = False
    Me.cbxCCA.visible = True
    Me.cbxCCA.enabled = True
    Me.cbxCCB.visible = True
    Me.cbxCCB.enabled = True
    Me.cbxCCC.visible = True
    Me.cbxCCC.enabled = True
    Me.cbxCCD.visible = True
    Me.cbxCCD.enabled = True
    Me.cbxCCE.visible = True
    Me.cbxCCE.enabled = True
    Me.cbxCCA.Value = "A. PERSONAL OR CORPORATE GUARANTEES:"
    Me.cbxCCA.Font.Bold = False
    cbxCCA_Change
    CCid = 0
'    If Me.optCCGuaranteesOnly.Value = True Then
        Me.cbxCCB.enabled = False
        Me.cbxCCC.enabled = False
        Me.cbxCCD.enabled = False
        Me.cbxCCE.enabled = False
'    End If
    Me.txtCCSelectMsg.SetFocus
'    Me.optCCGuaranteesOnly.SetFocus
End Sub

Private Sub cmdCCWriteInfo_Click()
    MsgBox "Collateral Conditions Write Your Own ......." & vbCrLf & vbCrLf & _
           "More text or advanced formatting can be added by using the [MODIFY]     " & vbCrLf & _
           "button after this condition is inserted in the document." _
           & vbCrLf & vbCrLf & "Click OK to continue.", _
           vbQuestion + vbOKOnly, _
           "Collateral Conditions Write Your Own -- Information"
End Sub

Private Sub cmdEPCHelp_Click()
    MsgBox "SBA permits only one Eligible Passive Company (EPC) borrower, but allows multiple operating companies as co-Borrowers or Guarantors." & vbCrLf & vbCrLf & _
           "If the real estate is held by separate individuals, click 'New' for each additional individual.  They will be considered as one EPC." & vbCrLf & vbCrLf & _
           "Click OK to continue.", _
           vbInformation + vbOKOnly, _
           "Eligible Passive Company Information"
End Sub

Private Sub cmdNewC7OptionA_Click()
    If Me.txtC7Lienholder.Text <> "" And Me.txtC7Amount.Text <> "" Then
        If InStr(1, MyLienList, Me.txtC7Lienholder.Text & " -- " & Me.txtC7Amount) = 0 Then
            If Me.txtC7PriorLiens.Text = "" Then
                MyLienList = Me.txtC7Lienholder.Text & " -- " & Me.txtC7Amount
            Else
                MyLienList = MyLienList & vbCr & Me.txtC7Lienholder.Text & " -- " & Me.txtC7Amount
            End If
        End If
        Me.txtC7PriorLiens.Text = MyLienList
        Me.chkC7OptionA.SetFocus
        NewGroup "Para_C7OptionA"
    End If
End Sub

Private Sub cmdNewC7OptionC_Click()
    If Me.txtC7Lender.Text <> "" And Me.txtC7MaxAmount.Text <> "" Then
        If InStr(1, MyLenderList, (Me.txtC7Lender.Text & " -- " & Me.txtC7MaxAmount)) = 0 Then
            If Me.txtC7Lender.Text = "" Then
                MyLenderList = Me.txtC7Lender.Text & " -- " & Me.txtC7MaxAmount
            Else
                MyLenderList = MyLenderList & vbCr & Me.txtC7Lender.Text & " -- " & Me.txtC7MaxAmount
            End If
        End If
        Me.txtC7LineCredit.Text = MyLenderList
        Me.chkC7OptionC.SetFocus
        NewGroup "Para_C7OptionC"
    End If
End Sub

Private Sub cmdUPDelete_Click()
    Select Case Me.cbxUPCategory.ListIndex
    Case 4, 5, 6, 7, 9
        IsConstruction = 0
    Case Else
    End Select
    DeleteUP
    If Me.cbxUPCategory.ListIndex = 21 Then                                'RH removed requested by Cheri for change to Code 21
        UPOPtions 21                                                       'RH removed requested by Cheri for change to Code 21
        Me.cmdUPNew.enabled = True
        Me.cmdUPNew.Caption = "Save"                                       'RH removed requested by Cheri for change to Code 21
        Me.txtUPAmount.visible = True                                      'RH removed requested by Cheri for change to Code 21
        Me.txtUPAmount.enabled = True                                      'RH removed requested by Cheri for change to Code 21
        Me.txtUPAmount.Locked = False                                      'RH removed requested by Cheri for change to Code 21
        Me.txtUPAmount.BackColor = vbWhite                                 'RH removed requested by Cheri for change to Code 21
        Me.lblUPUseAmount.visible = True                                   'RH removed requested by Cheri for change to Code 21
        Me.cbxUPCategory.enabled = True                                    'RH removed requested by Cheri for change to Code 21
        Me.cbxUPCategory.Locked = False                                    'RH removed requested by Cheri for change to Code 21
        Me.cbxUPCategory.BackColor = vbWhite                               'RH removed requested by Cheri for change to Code 21
    End If                                                                 'RH removed requested by Cheri for change to Code 21
    UPOPtions Me.cbxUPCategory.ListIndex, Me.cbxUPCategory.Locked
End Sub

Private Sub cmdUPLeft_Click()
    ChangeUP -1, 1
    UPOPtions Me.cbxUPCategory.ListIndex, Me.cbxUPCategory.Locked
End Sub

Private Sub cmdUPRight_Click()
    ChangeUP 1, 1
    UPOPtions Me.cbxUPCategory.ListIndex, Me.cbxUPCategory.Locked
End Sub

Private Sub cmdErrorMsg_Click()
    ErrorPageClick Me.txtPrevCtrl, Me.txtPrevPage, Me.txtCurOption
End Sub


Private Sub ErrorPageClick(PrevCtrl As String, PrevPage As String, curOption As String)
If PrevPage <> 26 Then
  
  StateFinish = False  ' RH Added 2/9/2018 to make buttons appear after collateral section and no Lien amount added.
  Me.mpgWizard.Value = PrevPage
  
End If
    'Modified 9/13/2007 to correct error message crashes
  If curOption <> 0 Then
    ErrCheck = 1
    Me.mpgCCOptions.Value = curOption
'    Me(PrevCtrl).SetFocus
    If NextState = True Then
        CommandSetup "EnableNext"
    End If
    If FinishState = True Then
        CommandSetup "EnableFinish"
    End If
  Else
    PageSetup PrevPage, 1
  End If
  If OptLienHolder > 1 And StateFinish = False Then
    CommandSetup "EnableNext"
  Else
'    CommandSetup "EnableFinish"
  End If
  If Me(PrevCtrl).visible = True And Me(PrevCtrl).enabled = True Then
    On Error Resume Next
    Me(PrevCtrl).SetFocus
  End If
  If InStr(1, PrevCtrl, "cbx") And Me(PrevCtrl).visible <> False Then
    SendKeys "%{down}"
  End If
  Me.cmdWizardShortCut.visible = WizardState
  'Added 9/13/2007
  ErrCheck = 0
End Sub

Private Sub UpdateLoanName()

'=============================================================
' AppPart1.UpdateLoanName
'
' Sub
'-------------------------------------------------------------
' Modified 08-29-2001 WordBasic to VBA
' Author : Daniel H. Smith, Programmer/Analyst
' Notes :  Complete
'-------------------------------------------------------------
' Revision History
'-------------------------------------------------------------
' 08-29-2001 DHS: Modified 8/23/02 (fix footer updates)
'=============================================================
' End Code Header block
    Dim Idx
    Dim MyBook
    Dim LoanName
    If Me.chkBIEPC.Value = True Then
        Idx = Trim(ActiveDocument.Bookmarks("RPFirst008").Range.Text)
        MyBook = "OCDba_" + Idx
        If ActiveDocument.Bookmarks(MyBook).Range.Text <> "[" + MyBook + "]" Then
            LoanName = ActiveDocument.Bookmarks(MyBook).Range.Text
        Else
            LoanName = ActiveDocument.Bookmarks("OCName_" + Idx).Range.Text
        End If
    Else
        Idx = Trim(ActiveDocument.Bookmarks("RPFirst007").Range.Text)
        MyBook = "BorrowerDba_" + Idx
        If ActiveDocument.Bookmarks(MyBook).Range.Text <> "[" + MyBook + "]" Then
            LoanName = ActiveDocument.Bookmarks(MyBook).Range.Text
        Else
            LoanName = ActiveDocument.Bookmarks("BorrowerName_" + Idx).Range.Text
        End If
    End If
    UpdateField "LoanName", LoanName, -1
    Application.ScreenRefresh
    Application.ScreenUpdating = False
    ActiveDocument.Sections(1).Footers(wdHeaderFooterPrimary).Range.Fields.Update
    ActiveDocument.Sections(2).Footers(wdHeaderFooterPrimary).Range.Fields.Update
    On Error Resume Next
    ActiveDocument.Sections(3).Footers(wdHeaderFooterPrimary).Range.Fields.Update
    Application.ScreenRefresh
End Sub

Private Sub chkCCSharedPosition_Click()
  If Me.chkCCSharedPosition.Value = True Then
'    Me.txtCCSharedLender.enabled = False
'    Me.lblCCSharedLender.enabled = True
    Me.optCCPariPassu.enabled = True
    Me.optCCNonSBA.enabled = True
    Me.optCCPariPassu.enabled = True
    Me.lblSharedDollar.enabled = True
    Me.txtCCSharedAmt.enabled = True
'    Me.txtCCSharedLender.BackColor = vbWhite
    Me.txtCCSharedAmt.BackColor = vbWhite
    Me.txtCCSharedAmt.SetFocus
  Else
    Me.txtCCSharedLender.Text = ""
    Me.txtCCSharedAmt.Text = ""
'    Me.lblCCSharedLender.enabled = False
    Me.optCCNonSBA.Value = True
    Me.optCCNonSBA.enabled = False
    Me.optCCPariPassu.enabled = False
    Me.lblSharedDollar.enabled = False
    Me.txtCCSharedLender.enabled = False
    Me.txtCCSharedAmt.enabled = False
    Me.txtCCSharedLender.BackColor = myGray
    Me.txtCCSharedAmt.BackColor = myGray
  End If
End Sub

Private Sub cmdFinish_Click()
    PrevPage = Me.mpgWizard.Value
    Me.lblThankYou.visible = False
    Me.lblPleaseWait.visible = True
    RetrieveInfo = False
    NavButton = "Finish"
    StateFinish = True
    WizardState = Me.cmdWizardShortCut.visible
    ErrorCaught = False
    If Me.mpgWizard.Value = Me.mpgWizard.Pages("pgLI3").index Then
        If Me.txtLDMaturityMonths.Text = "" Then
            Me.txtLDMaturityMonths.Text = 0
        End If
    'Check for 501 and less than 12 months
        LDMaturity = Val(Me.txtLDMaturityYears.Text) * 12 + Val(Me.txtLDMaturityMonths.Text)
        If LDMaturity <= 12 And Me.chkLI501.Value = True Then
        MsgBox "Selecting Section 501 with a maturity of less than 13 months" & vbCrLf & vbCrLf & _
            "is invalid.  Please change the maturity period or unselect 501.      ", _
            vbCritical + vbOKOnly, _
            "Guarantee Fee"
        Cancel = True
        Me.txtLDMaturityMonths.Text = 1
        Me.txtLDMaturityYears.Text = 1
        Me.txtLDMaturityYears.SetFocus
        Exit Sub
        End If
        curCtrl = "txtDIFirstDisbursement"
        If Me(curCtrl).Text <> "" Then
            If IsNumeric(Me(curCtrl).Text) Then
                InputFormat Me(curCtrl).Name, "TextIsNumber", 0
            Else
                UpdateLI3 = 1
                MyErrorMsg Me.mpgWizard.Value, "Numeric", True, curCtrl
            End If
        End If
        If Me(curCtrl).Text = "" And Me(curCtrl).enabled = True Then
            MyErrorMsg Me.mpgWizard.Value, "Numeric", True, curCtrl
        ElseIf Me.txtDIFirstDisbursement > 48 And Me.chkLIDFP.Value = False Then
            Cancel = True
            MsgBox "The amount entered exceeds 48 months.      " & vbCrLf & vbCrLf & _
                   "Please re-enter your final disbursement period.      ", _
                   vbCritical + vbOKOnly, _
                   "Final Disbursement"
            Me.txtDIFirstDisbursement.Text = ""
            Me.txtDIFirstDisbursement.SetFocus
            Exit Sub
        End If
        curCtrl = "txtLDOngoingServicingFee"
        If Me(curCtrl).Text <> "" Then
            If IsNumeric(Me(curCtrl).Text) Then
                InputFormat Me(curCtrl).Name, "TextIsNumber", 3
            Else
                UpdateLI3 = 1
                MyErrorMsg Me.mpgWizard.Value, "Numeric", True, curCtrl
    '          CommandSetup 3
            End If
        End If
    End If
    '9/11/2007 added to format dollar amount
    If Me.mpgWizard.Value = Me.mpgWizard.Pages("pgCC1").index Then
      curCtrl = "txtCCNoteBalanceDue"
      pgOption = Me.mpgCCOptions.Value
      If Me(curCtrl).Text <> "" Then
        If IsNumeric(Me(curCtrl).Text) Then
            InputFormat Me(curCtrl).Name, "TextIsNumber", 2
        Else
            UpdateCC1 = 1
            MyErrorMsg Me.mpgWizard.Value, "Numeric", True, curCtrl, , , pgOption
        End If
      End If
    End If
    If Me.mpgWizard.Value = Me.mpgWizard.Pages("pgCC2").index Then
        curCtrl = "txtGTBalance"
        If Me(curCtrl).Text <> "" Then
            If IsNumeric(Me(curCtrl).Text) Then
                InputFormat Me(curCtrl).Name, "TextIsNumber", 2
            Else
                MyErrorMsg Me.mpgWizard.Value, "Numeric", True, curCtrl
            End If
        End If
        curCtrl = "txtGTPrincipal"
        If Me(curCtrl).Text <> "" Then
            If IsNumeric(Me(curCtrl).Text) Then
                InputFormat Me(curCtrl).Name, "TextIsNumber", 2
            Else
                MyErrorMsg Me.mpgWizard.Value, "Numeric", True, curCtrl
            End If
        End If
        curCtrl = "txtGTMaximum"
        If Me(curCtrl).Text <> "" Then
            If IsNumeric(Me(curCtrl).Text) Then
                InputFormat Me(curCtrl).Name, "TextIsNumber", 2
            Else
                MyErrorMsg Me.mpgWizard.Value, "Numeric", True, curCtrl
            End If
        End If
        curCtrl = "txtGTPercentage"
        If Me(curCtrl).Text <> "" Then
            If IsNumeric(Me(curCtrl).Text) Then
                InputFormat Me(curCtrl).Name, "TextIsNumber", 2
            Else
                MyErrorMsg Me.mpgWizard.Value, "Numeric", True, curCtrl
            End If
        End If
    End If
    If Me.mpgWizard.Value = Me.mpgWizard.Pages("pgCC3").index Then
        curCtrl = "txtCCPriorAssignmentAmount"
        If Me(curCtrl).Text <> "" Then
            If IsNumeric(Me(curCtrl).Text) Then
                InputFormat Me(curCtrl).Name, "TextIsNumber", 2
            Else
                MyErrorMsg Me.mpgWizard.Value, "Numeric", True, curCtrl
            End If
        End If
        curCtrl = "txtCCFeeTitleAmount1"
        If Me(curCtrl).Text <> "" Then
            If IsNumeric(Me(curCtrl).Text) Then
                InputFormat Me(curCtrl).Name, "TextIsNumber", 2
            Else
                MyErrorMsg Me.mpgWizard.Value, "Numeric", True, curCtrl
            End If
        End If
    End If
    If Me.mpgWizard.Value = Me.mpgWizard.Pages("pgCC4").index Then
        curCtrl = "txtCCLienAmount2"
        If Me(curCtrl).Text <> "" Then
            If IsNumeric(Me(curCtrl).Text) Then
                InputFormat Me(curCtrl).Name, "TextIsNumber", 2
            Else
                MyErrorMsg Me.mpgWizard.Value, "Numeric", True, curCtrl
            End If
        End If
        curCtrl = "txtCCSharedAmt"
        If Me(curCtrl).Text <> "" Then
            If IsNumeric(Me(curCtrl).Text) Then
                InputFormat Me(curCtrl).Name, "TextIsNumber", 2
            Else
                UpdateCC = 1
                MyErrorMsg Me.mpgWizard.Value, "Numeric", True, curCtrl
            End If
        End If
    End If
    If Me.mpgWizard.Value = Me.mpgWizard.Pages("pgCC5").index Then
        curCtrl = "txtCCLienAmount3"
        If Me(curCtrl).Text <> "" Then
            If IsNumeric(Me(curCtrl).Text) Then
                InputFormat Me(curCtrl).Name, "TextIsNumber", 2
            Else
                MyErrorMsg Me.mpgWizard.Value, "Numeric", True, curCtrl
            End If
        End If
    End If
    If Me.mpgWizard.Value = Me.mpgWizard.Pages("pgCC6").index Then
        curCtrl = "txtCCOwedSellerAmt4"
        If Me(curCtrl).Text <> "" Then
            If IsNumeric(Me(curCtrl).Text) Then
                InputFormat Me(curCtrl).Name, "TextIsNumber", 2
            Else
                MyErrorMsg Me.mpgWizard.Value, "Numeric", True, curCtrl
            End If
        End If
    End If
    If Me.mpgWizard.Value = Me.mpgWizard.Pages("pgCC7").index Then
        curCtrl = "txtCC_C1EV1A"
        If Me(curCtrl).Text <> "" Then
            If IsNumeric(Me(curCtrl).Text) Then
                InputFormat Me(curCtrl).Name, "TextIsNumber", 2
            Else
                MyErrorMsg Me.mpgWizard.Value, "Numeric", True, curCtrl
            End If
        End If
        If Me(curCtrl).Text = "0.00" And Me.chkCC_C1EV1A.Value = True Then
            MyErrorMsg Me.mpgWizard.Value, "Numeric", True, curCtrl
        End If
        curCtrl = "txtCC_C1EV1B"
        If Me(curCtrl).Text = "" And Me(curCtrl).enabled = True Then
            MyErrorMsg Me.mpgWizard.Value, "Blank", True, curCtrl
        End If    'chkCC_C1EV1A
            Dim yy As Integer
            If Me.optCCNonSBA.Value = True Then
                yy = 0
            Else
                yy = 1
            End If
            UpdateField "C1SharedLender", yy, -1
            ActiveDocument.Fields.Update
    End If
    If Me.mpgWizard.Value = Me.mpgWizard.Pages("pgCC8").index Then
        curCtrl = "txtCC7SharedAmt"
        If Me(curCtrl).Text <> "" Then
            If IsNumeric(Me(curCtrl).Text) Then
                InputFormat Me(curCtrl).Name, "TextIsNumber", 2
            Else
                UpdateCC = 1
                MyErrorMsg Me.mpgWizard.Value, "Numeric", True, curCtrl
            End If
        End If
    End If
    If Me.mpgWizard.Value = Me.mpgWizard.Pages("pgRT1").index Then
        curCtrl = "txtIRRTPublisher"
        If Me(curCtrl).Text = "" And Me(curCtrl).enabled = True Then
            MyErrorMsg Me.mpgWizard.Value, "Blank", True, curCtrl
        End If
    End If
    If Me.mpgWizard.Value = Me.mpgWizard.Pages("pgRT2").index Then
        curCtrl = "txtRTCurtailment"
        If Me(curCtrl).Text <> "" Then
            If IsNumeric(Me(curCtrl).Text) Then
                InputFormat Me(curCtrl).Name, "TextIsNumber", 1
            Else
                UpdateRT2 = 1
                MyErrorMsg Me.mpgWizard.Value, "Numeric", True, curCtrl
        '        CommandSetup 3
            End If
        End If
        curCtrl = "txtRTESF"
        If Me(curCtrl).Text <> "" Then
            If IsNumeric(Me(curCtrl).Text) Then
                InputFormat Me(curCtrl).Name, "TextIsNumber", 2
            Else
                MyErrorMsg Me.mpgWizard.Value, "Numeric", True, curCtrl
            End If
        End If
    End If
    If Me.mpgWizard.Value = Me.mpgWizard.Pages("pgRT4").index Then
        curCtrl = "txtOLORecaptureAmt"
        If Me(curCtrl).Text <> "" Then
            If IsNumeric(Me(curCtrl).Text) Then
                InputFormat Me(curCtrl).Name, "TextIsNumber", 2
            Else
                UpdateRT4 = 1
                MyErrorMsg Me.mpgWizard.Value, "Numeric", True, curCtrl
    '        CommandSetup 7
            End If
        End If
        curCtrl = "txtOLORecapturePct"
        If Me(curCtrl).Text <> "" Then
            If IsNumeric(Me(curCtrl).Text) Then
                InputFormat Me(curCtrl).Name, "TextIsNumber", 2
            Else
                UpdateRT4 = 1
                MyErrorMsg Me.mpgWizard.Value, "Numeric", True, curCtrl
    '        CommandSetup 7
            End If
        End If
        curCtrl = "txtCFOMin"
        If Me(curCtrl).Text <> "" Then
            If IsNumeric(Me(curCtrl).Text) Then
                InputFormat Me(curCtrl).Name, "TextIsNumber", 2
            Else
                UpdateRT4 = 1
                MyErrorMsg Me.mpgWizard.Value, "Numeric", True, curCtrl
    '        CommandSetup 7
            End If
        End If
        curCtrl = "txtOLOLateChargePct"
        If Me(curCtrl).Text <> "" Then
            If IsNumeric(Me(curCtrl).Text) Then
                InputFormat Me(curCtrl).Name, "TextIsNumber", 2
            Else
                UpdateACII3 = 1
                MyErrorMsg Me.mpgWizard.Value, "Numeric", True, curCtrl
    '        CommandSetup 7
            End If
        End If
    End If
    If Me.mpgWizard.Value = Me.mpgWizard.Pages("pgACII3").index Then
        curCtrl = "txtCAFixedAmount"
        If Me(curCtrl).Text <> "" Then
            If IsNumeric(Me(curCtrl).Text) Then
                InputFormat Me(curCtrl).Name, "TextIsNumber", 2
            Else
                UpdateACII3 = 1
                MyErrorMsg Me.mpgWizard.Value, "Numeric", True, curCtrl
    '        CommandSetup 7
            End If
        End If
        curCtrl = "txtCACompensation"
        If Me(curCtrl).Text <> "" Then
            If IsNumeric(Me(curCtrl).Text) Then
                InputFormat Me(curCtrl).Name, "TextIsNumber", 2
            Else
                UpdateACII3 = 1
                MyErrorMsg Me.mpgWizard.Value, "Numeric", True, curCtrl
    '        CommandSetup 7
            End If
        End If
    End If
    If Me.mpgWizard.Value = Me.mpgWizard.Pages("pgLI3").index Then
        curCtrl = "txtLSLoanNumber"
        If InStr(1, Me(curCtrl).Text, "-") > 0 Then
        Else
            Me(curCtrl).Text = Format(Me(curCtrl).Text, "########\-##")
        End If
        UpdateGuaranteeFee
        curCtrl = "txtLSReceiptDate"
        If Me(curCtrl).Text <> "" And Me(curCtrl).Text <> "--" Then
            If IsDate(Me(curCtrl).Text) Then
                InputFormat Me(curCtrl).Name, "TextIsDate", 0
            Else
                Cancel = True
                UpdateLI3 = 1
                MyErrorMsg Me.mpgWizard.Value, "Date", False, curCtrl
            End If
        ElseIf Me(curCtrl).Text <> "--" Then
            Cancel = True
            If MsgBox("The Receipt Date cannot be blank." & vbCrLf & vbCrLf & _
                      "If you wish to leave a space in the Authorization" & vbCrLf & _
                      "as a placeholder, type two hyphens ('--') in the" & vbCrLf & _
                      "Receipt Date textbox.", _
                      vbInformation + vbOKOnly, _
                      "Receipt Date Placeholder") = vbOK Then
                Me(curCtrl).SetFocus
                Exit Sub
            End If
        End If
        curCtrl = "txtLSApprovalDate"
        If Me(curCtrl).Text <> "" And Me(curCtrl).Text <> "--" Then
            If IsDate(Me(curCtrl).Text) Then
                InputFormat Me(curCtrl).Name, "TextIsDate", 0
            Else
                Cancel = True
                UpdateLI3 = 1
                MyErrorMsg Me.mpgWizard.Value, "Date", False, curCtrl
            End If
        ElseIf Me(curCtrl).Text <> "--" Then
            Cancel = True
            If MsgBox("The Approval Date cannot be blank." & vbCrLf & vbCrLf & _
                      "If you wish to leave a space in the Authorization" & vbCrLf & _
                      "as a placeholder, type two hyphens ('--') in the" & vbCrLf & _
                      "Approval Date textbox.", _
                      vbInformation + vbOKOnly, _
                      "Approval Date Placeholder") = vbOK Then
                Me(curCtrl).SetFocus
                Exit Sub
            End If
        End If
    End If
    If Me.mpgWizard.Value = Me.mpgWizard.Pages("pgLI2").index Then
        curCtrl = "txtBIZip"
        If InStr(1, Me(curCtrl).Text, "-") > 0 Then
            ctrltext = Mid(Me(curCtrl).Text, 1, InStr(1, Me(curCtrl).Text, "-") - 1) & Mid(Me(curCtrl).Text, InStr(1, Me(curCtrl).Text, "-") + 1)
        Else
            ctrltext = Me(curCtrl).Text
        End If
        If Len(ctrltext) <> 5 And Len(ctrltext) <> 9 Then
            If InStr(1, Me(curCtrl).Text, "-") > 0 Then
                cLen = Len(ctrltext) - 1 & " (without '-')"
            Else
                cLen = Len(ctrltext)
            End If
            UpdateLI2 = 1
            MyErrorMsg Me.mpgWizard.Value, "Length", True, curCtrl, , cLen
    '        CommandSetup 3
            Exit Sub
        End If
        If Not IsNumeric(ctrltext) Then
            UpdateLI2 = 1
            MyErrorMsg Me.mpgWizard.Value, "Numeric", True, curCtrl, , cLen
    '        CommandSetup 3
        End If
        If IsNumeric(ctrltext) And Len(ctrltext) = 9 Then
            Me(curCtrl).Text = Format(ctrltext, "00000\-####")
        ElseIf IsNumeric(ctrltext) And Len(ctrltext) = 5 Then
            Me(curCtrl).Text = Format(ctrltext, "00000")
        End If
        curCtrl = "txtOCZip"
    '  If Me.chkOCCoBorrower.Value = True Then
        If Me.chkBIEPC.Value = True Then
            If InStr(1, Me(curCtrl).Text, "-") > 0 Then
                ctrltext = Mid(Me(curCtrl).Text, 1, InStr(1, Me(curCtrl).Text, "-") - 1) & Mid(Me(curCtrl).Text, InStr(1, Me(curCtrl).Text, "-") + 1)
            Else
                ctrltext = Me(curCtrl).Text
            End If
            If Len(ctrltext) <> 5 And Len(ctrltext) <> 9 Then
                If InStr(1, Me(curCtrl).Text, "-") > 0 Then
                    cLen = Len(ctrltext) - 1 & " (without '-')"
                Else
                    cLen = Len(ctrltext)
                End If
                UpdateLI2 = 1
                MyErrorMsg Me.mpgWizard.Value, "Length", True, curCtrl, , cLen
    '        CommandSetup 3
                Exit Sub
            End If
            If Not IsNumeric(ctrltext) Then
                UpdateLI2 = 1
                MyErrorMsg Me.mpgWizard.Value, "Numeric", True, curCtrl, , cLen
    '        CommandSetup 3
            End If
            If IsNumeric(ctrltext) And Len(ctrltext) = 9 Then
                Me(curCtrl).Text = Format(ctrltext, "00000\-####")
            ElseIf IsNumeric(ctrltext) And Len(ctrltext) = 5 Then
                Me(curCtrl).Text = Format(ctrltext, "00000")
            End If
        End If
    End If
    If Me.mpgWizard.Value = Me.mpgWizard.Pages("pgUP").index Then
        curCtrl = "txtUPContractPrice"
        If Me(curCtrl).Text <> "" And Me(curCtrl).enabled = True Then
            If IsNumeric(Me(curCtrl).Text) Then
                InputFormat Me(curCtrl).Name, "TextIsNumber", 2
            Else
                UpdateUP = 1
                MyErrorMsg Me.mpgWizard.Value, "Numeric", True, curCtrl
'                CommandSetup 4
            End If
        ElseIf Me(curCtrl).Text = "" And Me(curCtrl).enabled = True Then
    'If blank
            UpdateUP = 1
            MyErrorMsg Me.mpgWizard.Value, "Blank", True, curCtrl
'                CommandSetup 4
        End If
        Me.cmdUPNew.TabStop = False
    End If
    CurTab = ""
    Application.ScreenUpdating = False
    Me.txtCustomizedConditions.Text = ""
    Me.lblCancelMsg.visible = False
    If Me.mpgWizard.Value = Me.mpgWizard.Pages("pgCC1").index And Me.mpgCCOptions.Value = Me.mpgCCOptions.Pages("pg00CCBlank").index Then
        If Me.cbxCCA.ListIndex <= 0 And Me.cbxCCB.ListIndex <= 0 _
           And Me.cbxCCC.ListIndex <= 0 And Me.cbxCCD.ListIndex <= 0 _
           And Me.cbxCCD.ListIndex <= 0 And Me.cbxCCE.ListIndex <= 0 _
           And GuaranteeSecured = False Then
            If MsgBox("No Collateral Conditions are currently selected.     " & vbCrLf & vbCrLf & _
                      "Previous conditions, if any, have been updated." & vbCrLf & vbCrLf & _
                      "EXITING to document.", _
                      vbInformation + vbOKOnly, _
                      "Collateral Conditions Complete") = vbOK Then
                CCClosing
                ExitCC = False
                CCRunning = False
                cmdCancel_Click
                GotoCC.Main
                Exit Sub
            End If
        ElseIf CCid >= 0 And CCSelected = True Then
            CurTab = "pgCC1"
            CCSelected = False
            CCRunning = True
        End If
    End If
    Me.prgPleaseWait.Width = 0
    If CurTab = "" Then
        CurTab = Me.mpgWizard.Pages(Me.mpgWizard.Value).Name
    End If
    retCheckInput = False
    ChkInput CurTab, True
    If retCheckInput = True Then
        Exit Sub
    '  CommandSetup "EnableFinish"
    Else
    If ActiveDocument.ProtectionType <> wdNoProtection Then
        ActiveDocument.Unprotect "snad7623"
    End If
        Select Case CCid
        Case 7
            Select Case Me.mpgWizard.Value  '--> Personal Property
            Case Me.mpgWizard.Pages("pgCC8").index
                X = 0
                For i = 1 To 10
                    X = X + Me("chkC7PP" & Trim((i))).Value
                Next
                If X = 0 Then
                    MsgBox "Please select at least one personal property option.", _
                           vbCritical + vbOKOnly, _
                           "No Personal Property Option Selected"
                    Me.chkC7PP1.SetFocus
                    CommandSetup "EnableFinish"
                    Exit Sub
                End If
            Case Else
            End Select
        Case Else
        End Select
        If InStr(1, CurTab, "pgCC") > 0 Then
            UpdateCCOptions
        Else
            Me.fraCustomizedConditions.visible = False
            Select Case CurTab
            Case "pgLI3"
                Me.lblTitle.Caption = "Processing Authorization ... Loan Information Section"
                PageSetup 99  'Please Wait
                Me.mpgWizard.Value = Me.mpgWizard("pgPleaseWait").index
                Me.prgPleaseWait.Width = 0
                Application.ScreenUpdating = False
                UpdateDocFields "pgLI1"
                UpdateDocFields "pgLI2"
                UpdateDocFields "pgLI3"
                UpdateField "EditSBA", EditSBA, -1
                UpdateLoanName
                UpdateLateCharge
                HideShowPara "pgLI3"
                CCClosing
                DeleteBackupRP
                UpdateField "Complete_LI", "1", -1
                UpdateField "LastUpdate_LI", "Last updated " & WizLib.LUText, -1
                CommandBars("7a Wizard").Controls("Repayment Terms").enabled = True
                UpdateUP = 0
                Me.lblCancel.visible = True
                Me.lblTitle.Caption = "Processing Complete ... Loan Information Section"
            Case "pgRT4", "pgRT2"
                Me.lblTitle.Caption = "Processing Authorization ... Repayment Terms Section"
                PageSetup 99  'Please Wait
                Me.mpgWizard.Value = Me.mpgWizard("pgPleaseWait").index
                Me.prgPleaseWait.Width = 0
                UpdateDocFields "pgRT1"
                UpdateDocFields "pgRT2"
                UpdateDocFields "pgRT3"
                UpdateDocFields "pgRT4"
                HideShowPara "pgRT4"
                DeleteBackupRP
                UpdateField "Complete_RT", "1", -1
                UpdateField "LastUpdate_RT", "Last updated " & WizLib.LUText, -1
                CommandBars("7a Wizard").Controls("Use of Proceeds").enabled = True
                Me.lblCancel.visible = True
                Me.lblTitle.Caption = "Processing Complete ... Repayment Terms Section"
            Case "pgUP"
                Me.lblTitle.Caption = "Processing Authorization ... Use of Proceeds Section"
                PageSetup 99  'Please Wait
                Me.mpgWizard.Value = Me.mpgWizard("pgPleaseWait").index
                Me.prgPleaseWait.Width = 0
                UpdateCurUP
                InsertUP
                UpdateField "RPCur010", Trim(Str(CurIdx)), -1
                UpdateField "RPLast010", Trim(Str(LastIdx)), -1
                UpdateField "RPFirst010", Trim(Str(FirstIdx)), -1
                PreSelectAC
                UpdateField "CPPrice", Format(Me.txtUPContractPrice.Text, "#,##0.00;(#,##0.00)"), -1
                InsertText "none", "Inc_CP", "none", 0, 2 + 256
                If Val(ActiveDocument.Bookmarks("cbCP").Range.Text) > 0 Then
                    vCP = ActiveDocument.Bookmarks("obCP").Range.Text
                    InsertText "Para_CPTitle", "Inc_CP", "1", 1, 0 + 256
                    InsertText "Para_CP1", "Inc_CP", vCP, 0, 0 + 256
                    InsertText "Para_CP2", "Inc_CP", vCP, 1, 0 + 256
                    InsertText "Para_CP3", "Inc_CP", vCP, 2, 0 + 256
                End If
                DeleteBackupUP
                UpdateField "TotalUP", txtUPLoanAmount, -1
                UpdateField "Complete_UP", "1", -1
                UpdateField "LastUpdate_UP", "Last updated " & WizLib.LUText, -1
                CommandBars("7a Wizard").Controls("Collateral Cond.").enabled = True
                CommandBars("7a Wizard").Controls("Additional Cond. (1)").enabled = True
                CommandBars("7a Wizard").Controls("Additional Cond. (2)").enabled = True
                Me.lblCancel.visible = True
                Me.lblTitle.Caption = "Processing Complete ... Use of Proceeds Section"
                StartTab = "pgUP"
                Me.cmdWizardShortCut.visible = True
            Case "pgACI5"
                Me.lblTitle.Caption = "Processing Authorization ... Additional Conditions I Section"
                PageSetup 99  'Please Wait
                Me.mpgWizard.Value = Me.mpgWizard("pgPleaseWait").index
                Me.prgPleaseWait.Width = 0
                UpdateDocFields "pgACI1"
                UpdateDocFields "pgACI2"
                UpdateDocFields "pgACI3"
                UpdateDocFields "pgACI4"
                UpdateDocFields "pgACI5"
                HideShowPara "pgACI5"
                CCClosing
                DeleteBackupRP
                UpdateField "Complete_AC1", "1", -1
                UpdateField "LastUpdate_AC1", "Last updated " & WizLib.LUText, -1
                Me.lblCancel.visible = True
                Me.lblTitle.Caption = "Processing Complete ... Additional Conditions I Section"
            Case "pgACII3"
                Me.lblTitle.Caption = "Processing Authorization ... Additional Conditions II Section"
                PageSetup 99  'Please Wait
                Me.mpgWizard.Value = Me.mpgWizard("pgPleaseWait").index
                Me.prgPleaseWait.Width = 0
                UpdateDocFields "pgACII1"
                UpdateDocFields "pgACII2"
                UpdateDocFields "pgACII3"
                HideShowPara "pgACII3"
                DeleteBackupRP
                UpdateField "Complete_AC2", "1", -1
                UpdateField "LastUpdate_AC2", "Last updated " & WizLib.LUText, -1
                Me.fraCustomizedConditions.visible = True
                Me.txtCustomizedConditions.Text = "Any conditions added to this authorization (after converting the authorization to a Word Document)" & _
                                                  " which were not pre-written or pre-approved by SBA (except where custom language is specifically" & _
                                                  " permitted in a 'Write Your Own' section) must be approved by SBA BEFORE it can be reused in" & _
                                                  " any subsequent SBA guaranty loan." & vbCrLf & vbCrLf & _
                                                  "See SOP reference Q&A #5 in Subpart A, Chapter 5, paragraph 1, on page 98." & vbCrLf & vbCrLf & _
                                                  "Mail requests to:" & vbCrLf & vbCrLf & _
                                                  "SBA" & vbCrLf & _
                                                  "c/o The 7(a) Policy Branch, Code 7881" & vbCrLf & _
                                                  "Office of Financial Assistance" & vbCrLf & _
                                                  "Washington, DC  20416"
                Me.lblCancel.visible = True
                Me.lblTitle.Caption = "Processing Complete ... Additional Conditions II Section"
            Case Else
            End Select
            Me.cmdWizardShortCut.visible = True
        End If
    End If
    ActiveDocument.Range.Fields.Update
    Me.prgPleaseWait.Width = 0
    Me.lblPleaseWait.visible = False
    Me.lblThankYou.visible = True
    Me.prgPleaseWait.visible = False
    '  Me.cmdCancel.Visible = True
    Me.lblCancelMsg.visible = True
    If ActiveDocument.ActiveWindow.View.ShowFieldCodes = True Then
        ActiveDocument.ActiveWindow.View.ShowFieldCodes = False
    End If
    frmMain.ShowBlankPage
    If CCRunning = True Then
        GoTo EndCollateral
    End If
    CommandSetup "CancelOnly"
'If ActiveDocument.Bookmarks("Exit2Doc").Range.Text = "False" Then
'Else
'    cmdCancel_Click
'    Exit Sub
'End If
EndCollateral:
    frmMain.ShowBlankPage
    curPageName = CurTab
    ActiveDocument.UndoClear
'Word2007Update cmdFinish
Mods2007.ShowRibbon

End Sub
Private Sub ResetCCControls(CCPage As String, CCid As Integer)
    Select Case CCPage
    Case "pgCC2"
        Me.optGTBalance.Value = 1
        Me.txtGTBalance.Text = ""
        Me.txtGTPrincipal.Text = ""
        Me.txtGTMaximum.Text = ""
        Me.txtGTPercentage.Text = ""
        Me.txtGTCollateral.Text = ""
        Me.txtGTTime.Text = ""

    Case "pgCC3"
        Me.txtCCAddress1.Text = ""
        Me.chkCCPriorAssignment1.Value = 0
        Me.txtCCPriorAssignment1.Text = ""
        Me.txtCCPriorAssignmentAmount.Text = ""
        Me.chkCCFeeTitle1.Value = 0
        Me.txtCCFeeTitle1.Text = ""
        Me.txtCCFeeTitleAmount1.Text = ""
        Me.optCCALTAPolicy.Value = 1
        Me.optCCTractBook.Value = 0

    Case "pgCC4"
        Me.txtCCAddress2.Text = ""
        Me.chkCCPrimaryResidenceProp.Value = False
        If Me.cbxCCResidentChoice.ListCount = 0 Then
            CCPrimaryResProp Me.cbxCCResidentChoice
            Me.cbxCCResidentChoice.ListIndex = 0
        Else
            Me.cbxCCResidentChoice.ListIndex = 0
        End If
        If Me.cbxCCState2.ListCount = 0 Then
            StatesList Me.cbxCCState2
            Me.cbxCCState2.ListIndex = 0
        Else
            Me.cbxCCState2.ListIndex = 0
        End If
        If Me.cbxCCLienPosition2.ListCount = 0 Then
            CCLienList Me.cbxCCLienPosition2
            Me.cbxCCLienPosition2.ListIndex = 0
        Else
            Me.cbxCCLienPosition2.ListIndex = 0
        End If
    '  Me.lblCCLienAmt2.Enabled = False
        Me.chkCCLienAmt2.Value = False
        Me.txtCCLienAmount2.Text = ""
        If CCid = 1 Then
    '      Me.chkCCLienAmt2.Enabled = True
            Me.chkCCPlusYears.Value = 0
            Me.chkCCPlusYears.enabled = False
            Me.txtCCPlusYears.Text = ""
            Me.txtCCPlusYears.enabled = False
            Me.lblCCTermofLoan2.enabled = False
            Me.chkCCWaterRights2.enabled = True
            Me.chkCCWaterRights2.Value = 1
            Me.chkCCAssignmentRents.enabled = True
            Me.chkCCAssignmentRents.Value = 1
            Me.chkCCLandlordWaiver.Value = 0
            Me.chkCCLandlordWaiver.enabled = False
            If Me.cbxCCTypeofProperty2.ListCount = 0 Then
                CCTypeList Me.cbxCCTypeofProperty2
                Me.cbxCCTypeofProperty2.ListIndex = 0
            Else
                Me.cbxCCTypeofProperty2.ListIndex = 0
            End If
            If Me.cbxCCTypeofProperty4.ListCount = 0 Then
                CCTypeList Me.cbxCCTypeofProperty4
                Me.cbxCCTypeofProperty4.ListIndex = 0
            Else
                Me.cbxCCTypeofProperty4.ListIndex = 0
            End If
            If Me.cbxCCTypeofInstrument2.ListCount = 0 Then
                CCInstrumentList Me.cbxCCTypeofInstrument2
                Me.cbxCCTypeofInstrument2.ListIndex = 0
            Else
                Me.cbxCCTypeofInstrument2.ListIndex = 0
            End If
            If Me.cbxCCResidentChoice.ListCount = 0 Then
                CCPrimaryResProp Me.cbxCCResidentChoice
                Me.cbxCCResidentChoice.ListIndex = 0
            Else
                Me.cbxCCResidentChoice.ListIndex = 0
            End If
            Me.chkCCLienAmt2.Value = False
            Me.chkCCSharedPosition.Value = False
            Me.chkCCSharedPosition.Value = False
'            Dim y As Integer
'            If Me.optCCNonSBA.Value = 1 Then
'                yy = 0
'            Else
'                yy = 1
'            End If
'            UpdateField "SharedLien", "0", -1
            ActiveDocument.Fields.Update
    '      Me.chkCCLienAmt2.Enabled = False
    '        ResetLienholders
        ElseIf CCid = 4 Then
            If Me.cbxCCTypeofProperty2.ListCount = 0 Then
                CCTypeList Me.cbxCCTypeofProperty2
                Me.cbxCCTypeofProperty2.ListIndex = 0
            Else
                Me.cbxCCTypeofProperty2.ListIndex = 0
            End If
            If Me.cbxCCTypeofInstrument2.ListCount = 0 Then
                CCInstrumentList Me.cbxCCTypeofInstrument2
                Me.cbxCCTypeofInstrument2.ListIndex = 0
            Else
                Me.cbxCCTypeofInstrument2.ListIndex = 0
            End If
            Me.chkCCPlusYears.Value = 0
            Me.chkCCPlusYears.enabled = True
            Me.lblCCTermofLoan2.enabled = True
            Me.txtCCPlusYears.Text = ""
            Me.chkCCWaterRights2.Value = 0
            Me.chkCCWaterRights2.enabled = False
            Me.chkCCAssignmentRents.Value = 0
            Me.chkCCAssignmentRents.enabled = False
            Me.chkCCLandlordWaiver.Value = 1
            Me.chkCCLandlordWaiver.enabled = True
            Me.lblCCState2.enabled = True
            Me.lblCCStateInfo2.enabled = True
            Me.cbxCCState2.enabled = True
            Me.lblCCTypeofInstrument2.enabled = True
            Me.lblCCTypeofProperty2.enabled = True
            Me.cbxCCTypeofInstrument2.enabled = True
            Me.cbxCCTypeofInstrument2.BackColor = vbWhite
            Me.chkCCSharedPosition.Value = False
            Me.cbxCCTypeofProperty2.enabled = True
            Me.cbxCCTypeofProperty2.BackColor = vbWhite
    '     Me.lblCCLienAmt2.Enabled = False
    '      Me.chkCCLienAmt2.Value = False
    '      Me.txtCCLienAmount2.Enabled = False
    '      Me.txtCCLienAmount2.BackColor = myGray
    '      ResetLienholders
            Me.lblCCLienAmt2.visible = False
            Me.chkCCLienAmt2.enabled = True
            Me.chkCCLienAmt2.visible = True
            Me.chkCCSharedPosition.Value = False
'            UpdateField "SharedLien", "0", -1
        ElseIf CCid = 22 Then
            Me.lblCCState2.enabled = False
            Me.lblCCStateInfo2.enabled = False
            Me.cbxCCState2.enabled = False
            Me.cbxCCState2.BackColor = myGray
            Me.lblCCTypeofProperty2.enabled = False
            Me.cbxCCTypeofProperty2.ListIndex = -1
            Me.cbxCCTypeofProperty2.enabled = False
            Me.cbxCCTypeofProperty2.BackColor = myGray
            Me.chkCCLienAmt2.Value = False
    '      Me.chkCCLienAmt2.Enabled = False
'            Me.lblCCLienAmt2.enabled = False
'            Me.lblCCLienAmt2.visible = True
            Me.chkCCLienAmt2.enabled = False
            Me.chkCCLienAmt2.visible = False
            Me.txtCCLienAmount2.visible = False
            Me.txtCCLienAmount2.enabled = False
            Me.txtCCLienAmount2.BackColor = myGray
            Me.lblCCTypeofInstrument2.enabled = False
            Me.cbxCCTypeofInstrument2.ListIndex = -1
            Me.cbxCCTypeofInstrument2.enabled = False
            Me.cbxCCTypeofInstrument2.BackColor = myGray
            Me.chkCCWaterRights2.enabled = False
            Me.chkCCAssignmentRents.enabled = False
            Me.lblCCTermofLoan2.enabled = True
            Me.chkCCPlusYears.enabled = True
            Me.txtCCPlusYears.enabled = False
            Me.txtCCPlusYears.Text = ""
            Me.chkCCLandlordWaiver.enabled = False
            Me.chkCC7Shared.Value = False
            Me.chkCCSharedPosition.Value = False
'            UpdateField "SharedLien", "0", -1
        End If

    Case "pgCC5"
        Me.txtCCLessorName3.Text = ""
        Me.txtCCLesseeName3.Text = ""
        Me.txtCCAddress3.Text = ""
        Me.chkCCLeaseDate3.Value = 0
        Me.txtCCLeaseDate3.enabled = False
        Me.cbxCCTypeofProperty3.enabled = False
        Me.cbxCCTypeofProperty3.ListIndex = -1
        If CCid = 23 Then
            If Me.cbxCCLienPosition3.ListCount = 0 Then
                CCLienList Me.cbxCCLienPosition3
                Me.cbxCCLienPosition3.ListIndex = 0
            Else
                Me.cbxCCLienPosition3.ListIndex = 0
            End If
        End If
        Me.chkCCLienAmt3.enabled = False
        Me.txtCCLienAmount3.Text = ""
        Me.txtCCLienAmount3.enabled = False
        Me.chkCCPlusYears3.Value = 0
        Me.txtCCPlusYears.Text = ""
        Me.txtCCWrittenNotice.Text = "60"

    Case "pgCC6"
        Me.txtCCSellerName4.Text = ""
        Me.txtCCPurchaserName4.Text = ""
        Me.txtCCAddress4.Text = ""
        Me.txtCCOwedSellerAmt4 = ""
        Me.chkCCLienAmt4.Value = False
        If CCid = 3 Then
            Me.lblCCState4.enabled = False
            Me.cbxCCState4.enabled = False
            Me.lblCCState4Info.enabled = False
            Me.chkCCDeedEscrow4.Value = 0
            Me.chkCCDeedEscrow4.enabled = False
            Me.chkCCLienAmt4.enabled = False
        Else
            Me.cbxCCState4.enabled = True
            Me.lblCCState4.enabled = True
            Me.lblCCState4Info.enabled = True
            Me.chkCCDeedEscrow4.Value = 0
            Me.chkCCDeedEscrow4.enabled = True
        End If
        If Me.cbxCCState4.ListCount = 0 Then
            StatesList Me.cbxCCState4
            Me.cbxCCState4.ListIndex = 0
        Else
            Me.cbxCCState4.ListIndex = 0
        End If
        Me.optCCAssignment4A = 1
        Me.optCCAssignment4B = 0
        Me.txtCCAssignment4.Text = ""
        Me.optCCNonSBA.Value = 0

    Case "pgCC7"
        Me.chkCC_C1EV1A.Value = 0
        Me.chkCC_C1EV1B.Value = 0
        'Me.chkCC_C1EV1C.Value = 0
        Me.chkCC_C1EV1D.Value = 0
        Me.chkCC_C1EV1E.Value = 0
        Me.txtCC_C1EV1A.Text = ""
        Me.txtCC_C1EV1B.Text = ""
        Me.txtCC_C1EV1D.Text = ""
        Me.chkCC_C1EV2B.Value = 0
        Me.chkCC_C1EV2C.Value = 0
        Me.chkCC_C1EV2D.Value = 0
        Me.chkCC_C1EV2E.Value = 0
        Me.chkCC_C1EV2F.Value = 0
    '    Me.chkCC_C1EVOther.Value = 0
    '    Me.txtCC_C1EVOther.Text = ""

    Case "pgCC8"
        If Me.cbxC7Owned.ListCount = 0 Then
            CCPropertyList cbxC7Owned
            Me.cbxC7Owned.ListIndex = 1
        Else
            Me.cbxC7Owned.ListIndex = 1
        End If
        If Me.cbxCCLienPosition.ListCount = 0 Then
            CCLienList Me.cbxCCLienPosition
            Me.cbxCCLienPosition.ListIndex = 1
        Else
            Me.cbxCCLienPosition.ListIndex = 1
        End If
        For X = 1 To 9
            Me("chkC7PP" & X).Value = 0
        Next
        Me.txtC7PP10.Text = ""
        Me.chkCCLandlordWaiver.Value = 1
        CommandSetup "EnableFinish"

    Case "pgCC8a"
        Me.chkC7OptionA.Value = 0
        Me.txtC7PriorLiens.Text = ""
        Me.txtC7Lienholder.Text = ""
        Me.txtC7Amount.Text = ""
        For X = 1 To 9
            Me("chkC7PP" & X & "A").Value = 0
        Next
        Me.txtC7PP10A.Text = ""
        Me.chkC7OptionB.Value = 0

    Case "pgCC8b"
        Me.chkC7OptionC.Value = 0
        Me.txtC7LineCredit.Text = ""
        Me.txtC7Lender.Text = ""
        Me.txtC7MaxAmount.Text = ""
        For X = 1 To 9
            Me("chkC7PP" & X & "B").Value = 0
        Next
        Me.txtC7PP10B.Text = ""

    Case "pgCC9"
        For X = 2 To 10
            Me("chkCCC1BP" & X).Value = 0
        Next
        Me.txtCCC1BP3.Text = ""

    Case "pg06CCLiquor"
        Me.optCCLiquorLicenseA.Value = 1
        Me.txtCCLiqLicense.Text = ""
        If Me.cbxCCLienLicense.ListCount = 0 Then
            CCLienList Me.cbxCCLienLicense
            Me.cbxCCLienLicense.ListIndex = 0
        Else
            Me.cbxCCLienLicense.ListIndex = 0
        End If
    '    ResetLienholders

    Case "pg09CCVehicle"
        If CCid = 10 Then
            Me.txtCCMobileHomeOwner.Text = ""
            Me.txtCCMobileHomeLocation.Text = ""
            Me.txtCCMobileHomeSerial.Text = ""
            If Me.cbxCCMobileHomeLien.ListCount = 0 Then
                CCLienList Me.cbxCCMobileHomeLien
                Me.cbxCCMobileHomeLien.ListIndex = 0
            Else
                Me.cbxCCMobileHomeLien.ListIndex = 0
            End If
        Else
            Me.txtCCVehicleMake.Text = ""
            Me.txtCCVehicleYear.Text = ""
            If Me.cbxCCVehicleLien.ListCount = 0 Then
                CCLienList Me.cbxCCVehicleLien
                Me.cbxCCVehicleLien.ListIndex = 0
            Else
                Me.cbxCCVehicleLien.ListIndex = 0
            End If
        End If
    '    ResetLienholders
    Case Else
    End Select
End Sub
Private Sub ResetLienholders(CCid)
    Me.txtCCFirstLHAmount.Text = ""
    Me.txtCCSecondLHAmount.Text = ""
    Me.txtCCThirdLHAmount.Text = ""
    Me.txtCCFourthLHAmount.Text = ""
    Me.txtCCFirstLHRevAmt.Text = ""
    Me.txtCCSecondLHRevAmt.Text = ""
    Me.txtCCThirdLHRevAmt.Text = ""
    Me.txtCCFourthLHRevAmt.Text = ""
    Me.txtCCFirstLH.Text = ""
    Me.txtCCSecondLH.Text = ""
    Me.txtCCThirdLH.Text = ""
    Me.txtCCFourthLH.Text = ""
    Me.chkCCFirstLH.Value = 0
    Me.chkCCSecondLH.Value = 0
    Me.chkCCThirdLH.Value = 0
    Me.chkCCFourthLH.Value = 0
    Select Case CCid
    Case 9, 11, 10, 14, 15
        Me.chkCCFirstLH.enabled = False
        Me.chkCCSecondLH.enabled = False
        Me.chkCCThirdLH.enabled = False
        Me.chkCCFourthLH.enabled = False
    Case Else
        Me.chkCCFirstLH.enabled = True
        Me.chkCCSecondLH.enabled = True
        Me.chkCCThirdLH.enabled = True
        Me.chkCCFourthLH.enabled = True
    End Select
End Sub
Private Sub ResetCollateral()
    If RetrieveInfo = True Then
    Else
        If CCid >= 0 Then
            If NoteSecured = True Then
                CCid = 18
                Me.mpgWizard.Value = Me.mpgWizard.Pages("pgCC1").index
                Me.fraCCInfo.Caption = "Note -- Select Note Collateral"
                Me.mpgCCOptions.Value = Me.mpgCCOptions.Pages("pg00CCBlank").index
                Me.lblCCNoteSecured.visible = True
                Me.lblCCNoteSecured.Caption = Me.lblCCNoteSecured.Caption & vbCr & vbCr & "Click 'CANCEL' to end."
    '    HideTop of Page 8
                Me.cbxCCA.enabled = False
                Me.cbxCCB.enabled = True
                On Error Resume Next
                Me.cbxCCB.ListIndex = 0
                Me.cbxCCC.enabled = True
                Me.cbxCCC.ListIndex = 0
                Me.cbxCCD.enabled = True
                Me.cbxCCD.ListIndex = 0
                Me.cbxCCE.enabled = True
                Me.cbxCCE.ListIndex = 0
                Me.cmdNext.enabled = False
                Me.cmdFinish.enabled = True
            Else
                If CCRunning = True Then
                    On Error Resume Next
                    Me.mpgWizard.Value = Me.mpgWizard.Pages("pgCC1").index
                    Me.cbxCCA.enabled = True
                    Me.cbxCCA.Font.Bold = False
                    Me.cbxCCA.ListIndex = 0
'                    If Me.optCCGuaranteesOnly.Value = False Then
                        Me.cbxCCB.enabled = True
                        Me.cbxCCB.Font.Bold = False
                        Me.cbxCCB.ListIndex = 0
                        Me.cbxCCC.enabled = True
                        Me.cbxCCC.Font.Bold = False
                        Me.cbxCCC.ListIndex = 0
                        Me.cbxCCD.enabled = True
                        Me.cbxCCD.Font.Bold = False
                        Me.cbxCCD.ListIndex = 0
                        Me.cbxCCE.enabled = True
                        Me.cbxCCE.Font.Bold = False
                        Me.cbxCCE.ListIndex = 0
'                    End If
                    Me.cmdCCInfo.visible = True
                    Me.fraCCInfo.Caption = "Collateral Conditions"
                    Me.mpgCCOptions.Value = Me.mpgCCOptions.Pages("pg00CCBlank").index
                    Me.lblCCNoteSecured.visible = False
    'If leaving a secured condition, remove security message
                    If CCExit = True Then
                        Me.lblCCSecurity1.visible = False
                        Me.lblCCSecurity2.visible = False
                        Me.lblCCSecurity3.visible = False
                        Me.cmdCCInfo.visible = True
                        Me.cbxCCA.visible = True
                    End If
                End If
            End If
        End If
    End If
End Sub
Private Sub UpdatePara(Book, Ctrl, Type_, Index_)
    Dim Value
    Select Case Type_
    Case 0
        Value = Me(Ctrl).Text
        If Me(Ctrl).enabled = 0 Then Value = -1
    Case 1
        Value = Me(Ctrl).Value
        If InStr(1, Ctrl, "chkCCC1BP") = 1 Then
        Else
         If Me(Ctrl).enabled = 0 Then Value = -1
        End If
    Case 2
        Value = Me(Ctrl).ListIndex
    Case -1
        If IsNull(Ctrl) Then
            Value = -1
        Else
            Value = Val(Ctrl)
        End If
    Case Else
    End Select
    If Value = "True" Then
        Value = 1
    ElseIf Value = "False" Then
        Value = 0
    End If
    ShowHide Book, Value, Index_
    ProgressBar (5)
End Sub
Public Sub InsertGroup(Group, Book, Type_)
    Dim TRH As Object
    Dim MyRule
    Dim xx
    Dim Y
    Dim StSpec As String
    StSpec = "[RECC IN " & cbxCCState2.Text & "][" & cbxCCTypeofProperty2.Text & "]"
    Application.ScreenUpdating = False
    ActiveDocument.Bookmarks(Group).Range.Select
    Selection.Range.Copy
    ActiveDocument.Bookmarks(Book).Range.Select
    Selection.EndKey wdLine, wdMove
    Selection.HomeKey wdLine, wdMove
    Selection.TypeParagraph
    Selection.MoveUp wdParagraph, 1
    Selection.Style = "StartOfSection"
    ActiveDocument.Fields.Add Selection.Range, wdFieldEmpty, "MACROBUTTON TableDelete [ Delete ]", PreserveFormatting:=False
    Selection.InsertAfter " "
    ActiveDocument.Fields.Add Selection.Range, wdFieldEmpty, "MACROBUTTON TableModify [ Modify ]", PreserveFormatting:=False
    Selection.MoveLeft Unit:=wdCharacter, Count:=1, Extend:=wdExtend
    Selection.MoveRight Unit:=wdCharacter, Count:=1, Extend:=wdMove
    Selection.Style = "StartOfSection"
    Selection.EndKey wdLine
    Selection.TypeParagraph
    Selection.Paste
    Selection.Range.InsertAfter StSpec
    If Type_ = 0 Then
        Selection.Style = "EndOfSection"
        Selection.InsertAfter "End of Section"
    ElseIf Type_ = 1 Then
        Selection.Style = "EndOfSection2"
    Else
        Selection.Style = "SepLine"
    End If
    While Selection.Style <> "StartOfSection"
        If Selection.Information(wdWithInTable) Then
            Selection.SelectRow
            With Selection.Rows
                MyRule = .HeightRule
            End With
            If MyRule = 2 Then
                Selection.Rows.Delete
            Else
                Selection.SelectRow
                Selection.Rows.ConvertToText
                On Error Resume Next
                Selection.Range.Fields.Update
                Selection.Range.Fields.Unlink
                ActiveDocument.Bookmarks("\StartOfSel").Range.GoTo
                On Error GoTo -1: On Error GoTo 0
                If Type_ = 2 And Left(Selection.Style.NameLocal, 7) = "Heading" Then
                    xx = Abs(Selection.Paragraphs.KeepWithNext)
                    Y = Abs(Selection.Paragraphs.KeepTogether)
                    Selection.Paragraphs.OutlineDemote
                    If xx = 1 Then
                        Selection.Paragraphs.KeepWithNext = True
                    End If
                    If Y = 1 Then
                        Selection.Paragraphs.KeepTogether = True
                    End If
                End If
                'Added 9/13/2007 to fix Secured Note Problem
                If Me.chkCCNoteSecured.Value = True And Group <> "GroupC18" And Group <> "GroupC29" Then
                    Selection.Paragraphs.OutlineDemote
                End If
            End If
        ElseIf Len(ActiveDocument.Bookmarks("\Para").Range) = 1 And Selection.Style.NameLocal = "Normal" Then
            ActiveDocument.Bookmarks("\Para").Range.Select
            Selection.Delete
        ElseIf Selection.Style.NameLocal = "SepLine" Then
            ActiveDocument.Bookmarks("\Para").Range.Select
            Selection.Delete
        ElseIf Type_ = 2 And Left(Selection.Style.NameLocal, 7) = "Heading" Then
            Selection.Paragraphs.OutlineDemote
        End If
        Selection.HomeKey wdLine, wdMove
        If Type_ <> 2 Then
            If Selection.Style.NameLocal <> "Bookmark" Then
                With Selection.ParagraphFormat
                    With .Borders(wdBorderLeft)
                        .LineStyle = wdLineStyleSingle
                        .LineWidth = wdLineWidth050pt
                        .ColorIndex = wdRed
                    End With
                    With .Borders
                        .DistanceFromLeft = 1
                    End With
                End With
            End If
    '        ElseIf Type_ = 1 Then
    '          Selection.ParagraphFormat.Style = "Heading 2"
        End If
        Selection.MoveUp wdParagraph, 1
        ProgressBar 5
    Wend
    If Type_ = 2 And Selection.Style.NameLocal = "StartOfSection" Then
        Selection.ParagraphFormat.Style = "SepLine"
    End If
    Set TRH = Nothing
End Sub
Private Sub NewGroup(GroupName)
    Dim i
    Dim i_
    'CheckFill
    retVal = 1
    If retVal = 1 Then
        Select Case GroupName
        Case "Para_C7OptionA"
    'Create new textboxes and checkbox
            NewCtrl "para_C7OptionA", "chkC7OptionA", 1, GroupName
            NewCtrl "C7Lienholder", "txtC7Lienholder", -1, GroupName
            NewCtrl "C7Amount", "txtC7Amount", -1, GroupName
            For i = 1 To 10    'Create new set of checkboxes
                i_ = Trim(Str(i))
                NewCtrl "cbC7PP" + i_ + "A", "chkC7PP" + i_ + "A", -1, GroupName
            Next i
            NewCtrl "C7PP10A", "txtC7PP10A", -1, GroupName    'New textbox for misc
            NewCtrl "", "", -9, GroupName    'clear all controls ????
            Me.txtC7Lienholder.SetFocus
        Case "Para_C7OptionC"
            NewCtrl "para_C7OptionC", "chkC7OptionC", 1, GroupName
            NewCtrl "C7Lender", "txtC7Lender", -1, GroupName
            NewCtrl "C7MaxAmount", "txtC7MaxAmount", -1, GroupName
            For i = 1 To 10
                i_ = Trim(Str(i))
                NewCtrl "cbC7PP" + i_ + "B", "chkC7PP" + i_ + "B", -1, GroupName
            Next i
            NewCtrl "C7PP10B", "txtC7PP10B", -1, GroupName
            NewCtrl "", "", -9, GroupName
            Me.txtC7Lender.SetFocus
        Case Else
        End Select
    End If
End Sub
Private Sub NewCtrl(Book, Ctrl, Type_, Group)
    Application.ScreenUpdating = False    'Needed to rewrite the dialog
    CtrlIndex = CtrlIndex + 1
    CtrlGroup__(CtrlIndex) = Group
    CtrlStyle__(CtrlIndex) = Type_
    Select Case Type_
    Case -1
        If Left(Ctrl, 3) = "chk" Or Left(Ctrl, 3) = "opt" Then
            CtrlValue__(CtrlIndex) = Str(Me(Ctrl).Value)
            If CtrlValue__(CtrlIndex) = "True" Then
                CtrlValue__(CtrlIndex) = 1
            ElseIf CtrlValue__(CtrlIndex) = "False" Then
                CtrlValue__(CtrlIndex) = 0
            End If
            Me(Ctrl).Value = 0
        Else
            CtrlValue__(CtrlIndex) = Me(Ctrl).Text
            Me(Ctrl).Text = ""
        End If
        CtrlBook__(CtrlIndex) = Book
        If Ctrl = PrevCtrl Then
            CtrlValue__(CtrlIndex) = CtrlValue__(CtrlIndex - 1)
        End If
    Case -9
    Case Else
        CtrlBook__(CtrlIndex) = Book
        CtrlValue__(CtrlIndex) = Str(Me(Ctrl).Value)
        If CtrlValue__(CtrlIndex) = "True" Then
            CtrlValue__(CtrlIndex) = 1
        ElseIf CtrlValue__(CtrlIndex) = "False" Then
            CtrlValue__(CtrlIndex) = 0
        End If
        If Ctrl = PrevCtrl Then
            CtrlValue__(CtrlIndex) = CtrlValue__(CtrlIndex - 1)
        End If
    End Select
    PrevCtrl = Ctrl
End Sub
Private Sub DuplicateGroups()
    Dim i
    Dim xx
    For i = 1 To CtrlIndex
        Select Case CtrlStyle__(i)
        Case -1
            UpdateField (CtrlBook__(i)), (CtrlValue__(i)), -1
        Case -9
            xx = Right(CtrlGroup__(i), Len(CtrlGroup__(i)) - 7)
            DuplicateGroup (CtrlGroup__(i))
        Case Else
            UpdatePara (CtrlBook__(i)), (CtrlValue__(i)), -1, (CtrlStyle__(i))
        End Select
    Next i
End Sub
Private Sub CleanDuplicateGroups()
    If ActiveDocument.Bookmarks.Exists("MPPara_C7OptionA") Then
        ActiveDocument.Bookmarks("MPPara_C7OptionA").Range.Select
        Selection.Rows.Delete
    End If
    If ActiveDocument.Bookmarks.Exists("MPPara_C7OptionC") Then
        ActiveDocument.Bookmarks("MPPara_C7OptionC").Range.Select
        Selection.Rows.Delete
    End If
End Sub

Private Sub HideShowCC()
    Application.ScreenUpdating = False
    Dim X As Integer
    ActiveDocument.Bookmarks("Store_CC").Range.Select
    Selection.Range.Cut
    If Me.chkCCUnsecured.Value = False Then
        ActiveDocument.Bookmarks("S_CollateralConditions").Range.Select
        X = Selection.Range.Paragraphs.Count
        With ActiveDocument.Paragraphs(X)
            .PageBreakBefore = False
        End With
        ActiveDocument.Bookmarks("Store_CC_In").Range.Select
    Else
        ActiveDocument.Bookmarks("S_CollateralConditions").Range.Select
        X = Selection.Range.Paragraphs.Count
        With ActiveDocument.Paragraphs(X)
            .PageBreakBefore = True
        End With
        ActiveDocument.Bookmarks("Store_CC_Out").Range.Select
    End If
    Selection.Range.Paste

End Sub
Private Sub HideShowPara(PageID)
    Application.ScreenUpdating = False
    ActiveWindow.View.ShowFieldCodes = True

    Select Case PageID
    Case "pgLI3"  'All of Loan Information Section
        InsertText "none", "Inc_RP007", "none", 0, 2
        InsertText "none", "Inc_RP007B", "none", 0, 2
        InsertRP "007", "Para_RP007", "Inc_RP007", "none", 0, 0
        InsertText "none", "Inc_RP008", "none", 0, 2
        InsertText "none", "Inc_RP008B", "none", 0, 2
        InsertRP "008", "Para_RP008", "Inc_RP008", "chkBIEPC", 1, 0
        InsertText "Para_CC25", "Inc_CC25", "chkBIEPC", 1, 2
        InsertText "Para_CCDFP", "Inc_CC24a", "chkLIDFP", 1, 2
        'Small Loan Advantage
        InsertText "none", "Inc_SLA", "none", 1, 2
        InsertText "none", "Inc_SLART", "none", 1, 2
        InsertText "none", "Inc_SLACC", "none", 1, 2
        InsertText "Para_SLART", "Inc_SLART", "1", 1, 2

'        If Me.chkLIOpts.Value = True Then   'REMOVED 5/28/14
'            If Me.chkLIDFP.Value = True Or Me.chkLISLA.Value = True Then
                InsertText "Para_SLA", "Inc_SLA", "1", 1, 2
'                InsertText "Para_SLART", "Inc_SLART", "1", 1, 2
                InsertText "Para_SLACC", "Inc_SLACC", "1", 1, 2
'            End If
'        Else
'            InsertText "Para_NonSLA", "Inc_SLART", "1", 1, 2
'        End If

        If Me.chkOSFSTAR.Value = 0 Then
            ActiveDocument.Bookmarks("STAR").Select
            Selection.Style = "SepLine"
        Else
    '        ActiveDocument.Bookmarks("STAR").Select
    '        Selection.Style = "Heading 3"
        End If
        'ARRA 3/15/2009
        'ARRA 501
        'DLP 7/2009
        InsertText "none", "Inc_DFPCC", "none", 0, 2
        InsertText "Para_DFPCC", "Inc_DFPCC", "chkLIDFP", 1, 0 + 256
        'ARRA 502
        'Removed 4/29/2011
'        InsertText "none", "Inc_502", "none", 0, 2
'        InsertText "Para_502", "Inc_502", "chkLI502", 1, 0 + 256
        'Removed 11/12/10
'        InsertText "none", "Inc_501_2", "none", 0, 2
'        If Me.chkLI501.Value = True Or Me.chkLI502.Value = True Then
'            InsertText "Para_501_2", "Inc_501_2", "1", 1, 0 ' + 256
'        End If
        '501
        'MaturityYears * 12 + MaturityMonths
        InsertText "none", "Inc_GFeeMT12", "none", 0, 2
        InsertText "none", "Inc_GFeeLT12", "none", 0, 2
        InsertText "none", "Inc_GFee501", "none", 0, 2
'        MsgBox (ActiveDocument.Bookmarks("MaturityYears").Range.Text * 12) + ActiveDocument.Bookmarks("MaturityMonths").Range.Text
        'If Maturity > 12 and 501 not checked
        If (ActiveDocument.Bookmarks("MaturityYears").Range.Text * 12) + ActiveDocument.Bookmarks("MaturityMonths").Range.Text > 12 Then
            If Me.chkLI501.Value = True Then
            Else
                InsertText "Para_GFeeMT12", "Inc_GFeeMT12", "1", 1, 0 ' + 256
            End If
        End If
        'If Maturity < 12 and 501 not checked
        If (ActiveDocument.Bookmarks("MaturityYears").Range.Text * 12) + ActiveDocument.Bookmarks("MaturityMonths").Range.Text <= 12 Then
            If Me.chkLI501.Value = True Then
            Else
                InsertText "Para_GFeeLT12", "Inc_GFeeLT12", "1", 1, 0 ' + 256
            End If
        End If
        If (ActiveDocument.Bookmarks("MaturityYears").Range.Text * 12) + ActiveDocument.Bookmarks("MaturityMonths").Range.Text > 12 Then
            InsertText "Para_GFee501", "Inc_GFee501", "chkLI501", 1, 0 + 256
        End If
        'ARRA 506
        'COMING
        InsertText "none", "Inc_CAIP", "none", 0, 2
'        InsertText "Para_CAIP", "Inc_CAIP", "chkCAIP", 1, 0 + 256
   Case "pgRT2" 'Dealer Floor Plan
        InsertText "none", "Inc_InterestOnly", "none", 0, 2 + 256
        InsertText "none", "Inc_PaymentTerms", "none", 0, 2 + 256
        
'DPF 5/2013
'        InsertText "none", "Inc_DFPNote", "none", 0, 2 + 256
'        InsertText "Para_DFPNote", "Inc_DFPNote", "chkLISLA", 1, 0 + 256

        'Remove DFP paragraphs
        InsertText "none", "Inc_DFPNote", "none", 0, 2
        InsertText "none", "Inc_DFPNote2", "none", 0, 2
        
        'If Small Loan True or False put both paragraphs
        If Me.chkLIDFP.Value = True Then
            InsertText "Para_DFPNote", "Inc_DFPNote", "1", 1, 0 + 256
'            InsertText "Para_DFPNote2", "Inc_DFPNote", "1", 1, 0 + 256
        End If
        
        'If NOT Extraordinary Servicing and Small Loan REMOVE second paragraph
        If Me.chkRTESF.Value = False Then 'And Me.chkLISLA.Value = True Then
            InsertText "none", "Inc_DFPNote2", "none", 0, 2
        End If
        
        'If Extraordinary Servicing AND Small Loan put second
        If Me.chkRTESF.Value = True Or Me.chkLIDFP.Value = True Then
            InsertText "Para_DFPNote2", "Inc_DFPNote", "1", 1, 0 + 256
        End If
 
'        InsertText "none", "Inc_InterestOnly", "none", 0, 2 + 256
'        InsertText "Para_DFP", "Inc_InterestOnly", "optRTDFP", 1, 1 + 256
        '====================
   Case "pgRT4"  'All of Repayment Section
   'CAP
        If Me.optIRFixed.Value = True Then
            obddrate = 0
        ElseIf Me.optIRVariable.Value = True Then
            obddrate = 1
        ElseIf Me.optIRFixedVariable.Value = True Then
            obddrate = 2
        ElseIf Me.optIRSBAFixed.Value = True Then
            obddrate = 3
        ElseIf Me.optIRLenderFixed.Value = True Then
            obddrate = 4
        ElseIf Me.optIRTwoFixed.Value = True Then
            obddrate = 5
        ElseIf Me.optIRSplit.Value = True Then
            obddrate = 6
        Else
            obddrate = 99
        End If
        Dim xx
        InsertText "none", "Inc_InterestRate", "none", 0, 2 + 256
        InsertText "Para_FixedRate", "Inc_InterestRate", Str(obddrate), 0, 1
        InsertText "Para_VariableRate", "Inc_InterestRate", Str(obddrate), 1, 1
        InsertText "Para_FixedVariable", "Inc_InterestRate", Str(obddrate), 2, 1
        InsertText "Para_SplitRate1", "Inc_InterestRate", Str(obddrate), 3, 1
        InsertText "Para_SplitRate2", "Inc_InterestRate", Str(obddrate), 4, 1
        InsertText "Para_MPFixed", "Inc_InterestRate", Str(obddrate), 5, 1
        InsertText "Para_MPVariable", "Inc_InterestRate", Str(obddrate), 6, 1
        If Me.optIONone.Value = True Then
            obIO = 0
        ElseIf Me.optIOOne.Value = True Then
            obIO = 1
        ElseIf Me.optIOMorethanOne.Value = True Then
            obIO = 2
        End If
        InsertText "none", "Inc_PaymentTerms", "none", 0, 2 + 256
        InsertText "none", "Inc_PaymentTerms2", "none", 0, 2 + 256
        InsertText "none", "Inc_InterestOnly", "none", 0, 2 + 256
        InsertText "Para_IO1", "Inc_InterestOnly", Str(obIO), 1, 1 + 256
        InsertText "Para_IO2", "Inc_InterestOnly", Str(obIO), 2, 1 + 256
        
'DFP 7/2009
'        InsertText "none", "Inc_InterestOnly", "none", 0, 2 + 256
        InsertText "Para_DFP", "Inc_PaymentTerms", "optRTDFP", 1, 1 + 256
        InsertText "Para_DFP2", "Inc_PaymentTerms2", "chkRTCurtailment", 1, 1 + 256
        InsertText "none", "Inc_IntAccrued", "none", 0, 2 + 256
        If Me.chkLIDFP.Value = False Then
        obddPay = Me.mpgPTOptions.Value
        InsertText "Para_IntAccrued", "Inc_IntAccrued", "1", 1, 1 + 256

        InsertText "none", "Inc_PaymentTerms", "none", 0, 2 + 256
        InsertText "Para_PI", "Inc_PaymentTerms", Str(obddPay), 0, 1 + 256
        InsertText "Para_IP", "Inc_PaymentTerms", Str(obddPay), 1, 1 + 256
        InsertText "Para_RISP", "Inc_PaymentTerms", Str(obddPay), 2, 1 + 256
        InsertText "Para_SPI1", "Inc_PaymentTerms", Str(obddPay), 3, 1 + 256
        InsertText "Para_SPI2", "Inc_PaymentTerms", Str(obddPay), 4, 1 + 256
        InsertText "Para_SPI3", "Inc_PaymentTerms", Str(obddPay), 5, 1 + 256
        InsertText "Para_MSPO", "Inc_PaymentTerms", Str(obddPay), 6, 1 + 256
        End If
        xx = 1
        If obddrate = 0 Or obddrate = 5 Then
            xx = 0
        End If
        InsertText "Para_VarTerms1", "Inc_VarTerms1", Str(xx), 1, 2
        InsertText "Para_VarTerms2", "Inc_VarTerms2", Str(xx), 1, 2
        If Me.optCFONone.Value = True Then
            obCF = 0
  '      ElseIf Me.optCFOFluctuate.Value = True Then
            obCF = 1
        ElseIf Me.optCFOFixed.Value = True Then
            obCF = 2
        End If
        xx = xx * obCF
        InsertText "none", "Inc_CeilingAndFloor", Str(xx), 0, 1
        'InsertText "para_CFFluctuate", "Inc_CeilingAndFloor", Str(xx), 1, 1
        InsertText "para_CFFixed", "Inc_CeilingAndFloor", Str(xx), 2, 1
        InsertText "para_LateCharge", "Inc_LateCharge", "chkOLOLateCharge", 1, 2
        InsertText "para_EscrowAccount", "Inc_EscrowAccount", "chkOLOEscrowAccount", 1, 2
        InsertText "para_Recapture", "Inc_Recapture", "chkOLORecapture", 1, 2
        InsertText "para_IowaLift", "Inc_IowaLift", "chkOLORateReduction", 1, 2

    Case "pgCC1"
        HideShowCCPara (CCid)
        MsgBox "The selected Collateral Condition was successfully" & vbCrLf & _
               "inserted in your document." & vbCrLf & vbCrLf & _
               "Click OK to return to the main Collateral Conditions menu.", _
               vbInformation + vbOKOnly, _
               "Collateral Condition Processed"

    Case "pgACI5"  'All of Additional Conditions I
        If ActiveDocument.ActiveWindow.View.ShowFieldCodes = False Then
            ActiveDocument.ActiveWindow.View.ShowFieldCodes = True
        End If
        Dim Temp
        InsertText "none", "Inc_IC", "none", 0, 2
        InsertText "Para_IC1", "Inc_IC", "chkAC1FloodInsurance", 1, 0
        InsertText "Para_IC2", "Inc_IC", "chkAC1RealEstateInsurance", 1, 0
        InsertText "Para_IC3", "Inc_IC", "chkAC1PersonalInsurance", 1, 0
        InsertText "Para_IC4", "Inc_IC", "chkAC1MarineInsurance", 1, 0
        InsertText "Para_IC5Title", "Inc_IC", "chkAC1LifeInsurance", 1, 0
        InsertRP "001", "Para_RP001", "Inc_IC", "chkAC1LifeInsurance", 1, 0
        InsertText "Para_IC5Closing", "Inc_IC", "chkAC1LifeInsurance", 1, 0
        InsertText "Para_IC6", "Inc_IC", "chkAC1LiabilityInsurance", 1, 0
        InsertText "Para_IC7", "Inc_IC", "chkAC1ProductInsurance", 1, 0
        InsertText "Para_IC8", "Inc_IC", "chkAC1ShopInsurance", 1, 0
        InsertText "Para_IC9", "Inc_IC", "chkAC1MalpracticeInsurance", 1, 0
        InsertText "Para_IC10", "Inc_IC", "chkAC1DisabilityInsurance", 1, 0
        InsertText "Para_IC11", "Inc_IC", "chkAC1WorkersInsurance", 1, 0
        InsertText "Para_IC12", "Inc_IC", "chkAC1OtherInsurance", 1, 0
        InsertText "none", "Inc_ER", "none", 0, 2
        If Me.chkERLoanAmount.Value = True Then 'And Me.optERLessThan.Value = True Or Me.chkERLoanAmount.Value = True And Me.optERMoreThan.Value = True Then
            InsertText "Para_ERTitle", "Inc_ER", "chkERLoanAmount", 1, 0    'HEADING
'            If Me.optERLessThan.Value = True Then
'                InsertText "Para_ER2", "Inc_ER", 0, 0, 0
'            Else
                InsertText "Para_ER1A", "Inc_ER", 0, 0, 0
'                If Val(ActiveDocument.Bookmarks("obPLP").Range.text) = 1 And Me.chkERNonPLP.Value = True Then
                If Me.chkERNonPLP.Value = True Then
                    InsertText "Para_ER1B", "Inc_ER", "chkERNonPLP", 1, 0
                End If
'            End If
            InsertText "Para_ERClosing", "Inc_ER", "chkERLoanAmount", 1, 0
        End If
        ActiveDocument.Bookmarks("Store_ER").Select
        Selection.Range.Cut
        If Me.chkERLoanAmount.Value = True Then
            ActiveDocument.Bookmarks("Store_ER_In").Select
        Else
            ActiveDocument.Bookmarks("Store_ER_Out").Select
        End If
        Selection.Range.Paste
        InsertText "none", "Inc_BD", "none", 0, 2
    'Remove paras below to prevent duplicates
        Temp = ActiveDocument.Bookmarks("Inc_BD").Range.Text
        InsertText "Para_BD1", "Inc_BD", "chkBOCPurchaseAgreement", 1, 0
        InsertText "Para_BD3", "Inc_BD", "chkBOCBulkSales", 1, 0
        InsertText "Para_BD6", "Inc_BD", "chkBOCStockPurchase", 1, 0
        InsertRP "009", "Para_RP009", "Inc_BD", "chkBOCEvidenceNonCompete", 1, 0
        InsertRP "002", "Para_RP002", "Inc_BD", "chkBOCAdditionalFunding", 1, 0
    '      If ActiveDocument.Bookmarks("Inc_BD").Range.Text = Temp Then 'Temp <> " " And
    '       InsertText "none", "Inc_BD", "none", 0, 2
    '      End If
        InsertText "none", "Inc_OI2", "none", 0, 2
'        InsertText "none", "Inc_OI4", "none", 0, 2
        InsertText "Para_OI2A", "Inc_OI2", "obOI2", 1, 0
        InsertText "Para_OI2B", "Inc_OI2", "obOI2", 2, 0
        InsertText "Para_OI2C", "Inc_OI2", "obOI2", 3, 0
        InsertText "Para_OI2D", "Inc_OI2", "obOI2", 4, 0
'        InsertText "Para_OI4", "Inc_OI4", 0, 0, 0
        InsertText "none", "Inc_OI3", "none", 0, 2
        xx = 0
        If Me.chkOIBooksRecords.Value = True Or Me.chkOILoanDefault.Value = True Or Me.chkOITerminate.Value = True Or Me.chkOICureDefaults.Value = True Or Me.chkIsAFranchise.Value = True Then
            xx = "1"
        End If
        ' InsertText "Para_OI3Title", "Inc_OI3", xx, 1, 0                    ' Removed July 3, 2018 RH
        ' InsertText "Para_OI3A", "Inc_OI3", "chkOIBooksRecords", 1, 0       ' Removed July 3, 2018 RH
        ' InsertText "Para_OI3B", "Inc_OI3", "chkOILoanDefault", 1, 0        ' Removed July 3, 2018 RH
        ' InsertText "Para_OI3C", "Inc_OI3", "chkOITerminate", 1, 0          ' Removed July 3, 2018 RH
        InsertText "Para_OI3D", "Inc_OI3", "chkOICureDefaults", 1, 0
        InsertText "Para_OI3E", "Inc_OI3", "chkIsAFranchise", 1, 0
        'InsertText "Para_OI3E", "Inc_Fran", "chkIsAFranchise", 1, 0 'Added 2017
    Case "pgACII3"  'All of Additional Conditions II
        Dim Selected
        InsertText "none", "Inc_IN", "none", 0, 2
        'If Me.chkAC2Cash.Value = True Or Me.chkAC2Standby.Value = True Or Me.chkAC2Equity.Value = True Or Me.chkAC2Asset.Value = True Or Me.chkAC2Borrower.Value = True Then
        If Me.chkAC2Cash.Value = True Or Me.chkAC2Standby.Value = True Or Me.chkAC2Asset.Value = True Then
            Selected = 1
        End If
        If Selected > 0 Then
            InsertText "Para_IN0", "Inc_IN", "1", 1, 0
            InsertText "Para_IN1", "Inc_IN", "chkAC2Cash", 1, 0
            InsertText "Para_IN2", "Inc_IN", "chkAC2Standby", 1, 0
            ' InsertText "Para_IN4", "Inc_IN", "chkAC2Equity", 1, 0         ' Removed July 3, 2018 RH
            InsertText "Para_IN3", "Inc_IN", "chkAC2Asset", 1, 0
            ' InsertText "Para_IN5", "Inc_IN", "chkAC2Borrower", 1, 0       ' Removed July 3, 2018 RH
        End If

        InsertText "none", "Inc_SA", "none", 0, 2
        InsertText "Para_SATitle", "Inc_SA", "chkAC2StandbyAgreement", 1, 0
        InsertRP "005", "Para_RP005", "Inc_SA", "chkAC2StandbyAgreement", 1, 0

        InsertText "none", "Inc_AP", "none", 0, 2
        InsertText "Para_APTitle", "Inc_AP", "chkAC2Appraisal", 1, 0

        InsertRP "006", "Para_RP006", "Inc_AP", "chkAC2Appraisal", 1, 0
        '5/6/2008 Added
        InsertText "none", "Inc_NonCitizen", "none", 0, 2
        InsertRP "011", "Para_NonCitizen", "Inc_NonCitizen", "chkIMNonCitizen", 1, 0

'        InsertText "Para_NonCitizen", "Inc_NonCitizen", "chkIMNonCitizen", 1, 0
    
    
    '5/20/05
    '      InsertText "Para_CAPiggyBack", "Inc_CAPiggyBack", "chkCAPiggyBack", 1, 2 + 256
        InsertText "Para_CAPariPassu", "Inc_CAPariPassu", "chkCAPiggyBack", 1, 2 + 256
    '--------------
        InsertText "Para_CA1", "Inc_CA1", "chkCACommercial", 1, 2 + 256
        InsertText "none", "Inc_CA2", "none", 0, 2 + 256
        InsertText "Para_CA2A", "Inc_CA2", "chkCARenovation", 1, 0 + 256
        InsertText "Para_CA2B", "Inc_CA2", "chkCANew", 1, 0 + 256
        InsertText "none", "Inc_CA3", "none", 0, 2 + 256
        InsertText "Para_CA3A", "Inc_CA3", "chkCAFixedAsset", 1, 0 + 256
        InsertText "Para_CA3B", "Inc_CA3", "chkCALocationLimit", 1, 0 + 256
        InsertText "Para_CA3C", "Inc_CA3", "chkCACompensation", 1, 0 + 256

    ''Added 6/28/2010
'    Application.ScreenUpdating = True
        InsertText "none", "Inc_BV", "none", 0, 2 + 256
        InsertText "Para_BVTitle", "Inc_BV", "chkAC2BVCheck", 1, 0 + 256
    ''Credit Card 6/28/2010
         InsertText "none", "Inc_CreditCard", "none", 0, 2 + 256
        InsertText "Para_CreditCard", "Inc_CreditCard", "chkAC2CreditCard", 1, 0 + 256
   
    '-------

''ARRA 501 and 502 -- Moved to LIpg3
'        InsertText "none", "Inc_501_2", "none", 0, 2 + 256
'        If Me.chkLI501.Value = True And Me.chkLI502.Value = True Then
'            InsertText "Para_501_2", "Inc_501_2", 1, 1, 0 ' + 256
'        End If
        
    '     Following Combination Loan code removed 9/30/2004 DHS
    '      InsertText "none", "Inc_CombLoanFee", "none", 0, 2
    '      If Me.chkCAPiggyback.Value = True Then
    '        InsertText "Para_CombinationLoan", "Inc_CombLoanFee", "cbxCALienPosition", 0, 1
    '        InsertText "Para_CombinationLoanNoFee", "Inc_CombLoanFee", "cbxCALienPosition", 1, 1
    '        InsertText "Para_CombinationLoanNoFee", "Inc_CombLoanFee", "cbxCALienPosition", 2, 1
    '      End If
    Case Else
    End Select
    ActiveWindow.View.ShowFieldCodes = False
End Sub
Public Sub HideShowCCPara(CCid)
    Dim xx As String
    Dim xy As Integer
    Select Case CCid
    Case 1, 4    'Lien on Land and Instrument on Building
        UpdatePara "Para_C1Main", Str(CCid), -1, 1
        UpdatePara "Para_C4Main", Str(CCid), -1, 4
        UpdatePara "Para_C4BP", Str(CCid), -1, 4
        xx = Me.cbxCCLienPosition2.ListIndex
        If xx = 0 Or xx = -1 Then xx_ = "0" Else xx_ = "1"
        UpdatePara "Para_C1NoLien", xx_, -1, 0
        UpdatePara "Para_C1PriorLien1", xx_, -1, 1
        UpdatePara "Para_C1Lien1", Str(Abs(xx > 0)), -1, 1
        UpdatePara "Para_C1Lien2", Str(Abs(xx > 1)), -1, 1
        UpdatePara "Para_C1Lien3", Str(Abs(xx > 2)), -1, 1
        UpdatePara "Para_C1Lien4", Str(Abs(xx > 3)), -1, 1
        UpdatePara "Para_C1BP2", "chkCCC1BP2", 1, 1
        UpdatePara "Para_C1BP3", "chkCCC1BP3", 1, 1
        UpdatePara "Para_C1BP4", "chkCCC1BP4", 1, 1
        UpdatePara "Para_C1BP5", "chkCCC1BP5", 1, 1
        UpdatePara "Para_C1BP6", "chkCCC1BP6", 1, 1
        UpdatePara "Para_C1BP7", "chkCCC1BP7", 1, 1
        UpdatePara "Para_C1BP8", "chkCCC1BP8", 1, 1
        UpdatePara "Para_C1BP9", "chkCCC1BP9", 1, 1
        UpdatePara "Para_C1BP10", "chkCCC1BP10", 1, 1
        'Added BP11 12/3/2007
        UpdatePara "Para_C1BP11", "chkCCC1BP11", 1, 1
        UpdatePara "Para_C1EV1", "cbxCC_C1EV", 2, (ev__(1))
        UpdatePara "Para_C1EV2", "cbxCC_C1EV", 2, (ev__(2))
        UpdatePara "Para_C1EV3", "cbxCC_C1EV", 2, (ev__(3))
        UpdatePara "Para_C1EV4", "cbxCC_C1EV", 2, (ev__(4))
        UpdatePara "Para_C1EV5", "cbxCC_C1EV", 2, (ev__(5))
        UpdatePara "Para_C1EV6", "cbxCC_C1EV", 2, (ev__(6))
        UpdatePara "Para_C1EV7", "cbxCC_C1EV", 2, (ev__(7))
        UpdatePara "Para_C1EV8", "cbxCC_C1EV", 2, (ev__(8))
        UpdatePara "Para_C1LienShared", "chkCCSharedPosition", 1, 1 'Added 11/1/2010
'        UpdatePara "Para_C1Evidence", "cbxCC_C1EV", 2, 1 '(ev__(1))
        For i = 1 To 8 ' Modified 12/4/2007
            If (ev__(i)) = 0 Then
                UpdatePara "Para_C1Evidence", "cbxCC_C1EV", 2, 0
            End If
        Next i
        UpdatePara "Para_C1EVOther", "chkCC_C1EVOther", 1, 1
        If CCid = 4 Then
            UpdatePara "Para_C1Waiver", "chkCCLandlordWaiver", 1, 1
        Else
            UpdatePara "Para_C1Waiver", "0", -1, 1
        End If
    Case 2    'Purchaser's Interest
        UpdatePara "Para_C2Escrow", "chkCCDeedEscrow4", 1, 1
        UpdatePara "Para_C2EV1", "cbxCC_C1EV", 2, (ev__(1))
        UpdatePara "Para_C2EV2", "cbxCC_C1EV", 2, (ev__(2))
        UpdatePara "Para_C2EV3", "cbxCC_C1EV", 2, (ev__(3))
        UpdatePara "Para_C2EV4", "cbxCC_C1EV", 2, (ev__(4))
        UpdatePara "Para_C2EV5", "cbxCC_C1EV", 2, (ev__(5))
        UpdatePara "Para_C2EV6", "cbxCC_C1EV", 2, (ev__(6))
        UpdatePara "Para_C2EV7", "cbxCC_C1EV", 2, (ev__(7))
        UpdatePara "Para_C2EV8", "cbxCC_C1EV", 2, (ev__(8))
        UpdatePara "Para_C2EVOther", "chkCC_C1EVOther", 1, 1
    Case 5    'Land Trust
        UpdatePara "Para_C5Assign", "chkCCPriorAssignment1", 1, 1
        UpdatePara "Para_C5Lien", "chkCCFeeTitle1", 1, 1
        UpdatePara "Para_C5EV1", "optCCAltaPolicy", 1, 0
        UpdatePara "Para_C5EV2", "optCCTractBook", 1, 1
    Case 7    'Personal Property
        If Me.cbxCCLienPosition.ListIndex = 0 Or Me.cbxCCLienPosition.ListIndex = -1 Then
            Me.chkC7OptionA.Value = 0
            Me.chkC7OptionB.Value = 0
            Me.chkC7OptionC.Value = 0
            CleanDuplicateGroups
        End If
        UpdatePara "Para_C7OptionA", "chkC7OptionA", 1, 1
        UpdatePara "Para_C7OptionB", "chkC7OptionB", 1, 1
        UpdatePara "Para_C7OptionC", "chkC7OptionC", 1, 1
        UpdatePara "Para_C7Waiver", "chkCCLandlordWaiver2", 1, 1
        UpdatePara "Para_C7LienShared", "chkCC7Shared", 1, 1 'Added 11/1/2010
        xx = Me.chkC7PP1.Value Or Me.chkC7PP2.Value
        If xx = True Then
            xx = "1"
        ElseIf xx = False Then
            xx = "0"
        End If
        UpdatePara "Para_C7Equip", xx, -1, 1
        xx = "1"
        If Me.cbxCCLienPosition.Text = "First" Then
            xx = "0"
        End If
        UpdatePara "Para_C7NotFirst", xx, -1, 1
'        If Me.chkCC7Shared.Value = True Then
'            UpdatePara "Para_C7LienShared", "chkCC7Shared", 1, 1
'        End If
    Case 9    'Vehicle
        xy = Me.cbxCCVehicleLien.ListIndex
        If xy = 0 Or xy = -1 Then xx = "0" Else xx = "1"
        UpdatePara "Para_C9NoLien", xx, -1, 0
        UpdatePara "Para_C9PriorLien", xx, -1, 1
        UpdatePara "Para_C9Lien1", Str(Abs(xy > 0)), -1, 1
        UpdatePara "Para_C9Lien2", Str(Abs(xy > 1)), -1, 1
        UpdatePara "Para_C9Lien3", Str(Abs(xy > 2)), -1, 1
        UpdatePara "Para_C9Lien4", Str(Abs(xy > 3)), -1, 1
    Case 10    'Mobile Home
        xy = Me.cbxCCMobileHomeLien.ListIndex
        If xy = 0 Or xy = -1 Then xx = "0" Else xx = "1"
        UpdatePara "Para_C10NoLien", xx, -1, 0
        UpdatePara "Para_C10PriorLien", xx, -1, 1
        UpdatePara "Para_C10Lien1", Str(Abs(xy > 0)), -1, 1
        UpdatePara "Para_C10Lien2", Str(Abs(xy > 1)), -1, 1
        UpdatePara "Para_C10Lien3", Str(Abs(xy > 2)), -1, 1
        UpdatePara "Para_C10Lien4", Str(Abs(xy > 3)), -1, 1
    Case 11    'Liquor License
        xy = Me.cbxCCLienLicense.ListIndex
        If xy = 0 Or xy = -1 Then xx = "0" Else xx = "1"
        UpdatePara "Para_C11NoLien", xx, -1, 0
        UpdatePara "Para_C11PriorLien", xx, -1, 1
        UpdatePara "Para_C11Lien1", Str(Abs(xy > 0)), -1, 1
        UpdatePara "Para_C11Lien2", Str(Abs(xy > 1)), -1, 1
        UpdatePara "Para_C11Lien3", Str(Abs(xy > 2)), -1, 1
        UpdatePara "Para_C11Lien4", Str(Abs(xy > 3)), -1, 1
    Case 14    'Aircraft
        xy = Me.cbxCCAircraftLien.ListIndex
        If xy = 0 Or xy = -1 Then xx = "0" Else xx = "1"
        UpdatePara "Para_C14NoLien", xx, -1, 0
        UpdatePara "Para_C14PriorLien", xx, -1, 1
        UpdatePara "Para_C14Lien1", Str(Abs(xy > 0)), -1, 1
        UpdatePara "Para_C14Lien2", Str(Abs(xy > 1)), -1, 1
        UpdatePara "Para_C14Lien3", Str(Abs(xy > 2)), -1, 1
        UpdatePara "Para_C14Lien4", Str(Abs(xy > 3)), -1, 1
    Case 15    'Vessel
        xy = Me.cbxCCVesselLien.ListIndex
        If xy = 0 Or xy = -1 Then xx = "0" Else xx = "1"
        UpdatePara "Para_C15NoLien", xx, -1, 0
        UpdatePara "Para_C15PriorLien", xx, -1, 1
        UpdatePara "Para_C15Lien1", Str(Abs(xy > 0)), -1, 1
        UpdatePara "Para_C15Lien2", Str(Abs(xy > 1)), -1, 1
        UpdatePara "Para_C15Lien3", Str(Abs(xy > 2)), -1, 1
        UpdatePara "Para_C15Lien4", Str(Abs(xy > 3)), -1, 1
    Case 22    'Security on Building
        xx = "1"
        If Me.cbxCCLienPosition2.ListIndex = 0 Then
            xx = "0"
        Else
            xx = "1"
        End If
        If Me.chkCCLienAmt2.Value = False And Me.chkCCLienAmt2.visible = True Then
            xx = "0"
        End If
        UpdatePara "Para_C22NotFirst", xx, -1, 1
        UpdatePara "Para_C22NoLien", xx, -1, 0
        UpdatePara "Para_C22LienShared", "chkCCSharedPosition", 1, 1
        xz = Me.cbxCCLienPosition2.ListIndex
        UpdatePara "Para_C22PriorLien", Str(Abs(xz > 0)), -1, 1
        UpdatePara "Para_C22Lien1", Str(Abs(xz > 0)), -1, 1
        UpdatePara "Para_C22Lien2", Str(Abs(xz > 1)), -1, 1
        UpdatePara "Para_C22Lien3", Str(Abs(xz > 2)), -1, 1
        UpdatePara "Para_C22Lien4", Str(Abs(xz > 3)), -1, 1
    '      xx = "1"
    '      If Me.cbxCCLienPosition2.ListIndex = 0 Then
    '        xx = "0"
    '        UpdatePara "Para_C22NotFirst", xx, -1, 1
    '      End If
    Case 290, 291, 292, 293    'FullUnsecured
    'Check values of pgCC2 on panel, then show/hide LimitedA-LimitedG
    'If 290 or 291, must hide them anyway, so all -1
        If Me.optGTBalance.Value = True Then
            optGT = 0
            Me.optGTBalance.Value = False
        ElseIf Me.optGTPrincipal.Value = True Then
            optGT = 1
            Me.optGTPrincipal.Value = False
        ElseIf Me.optGTMaximum.Value = True Then
            optGT = 2
            Me.optGTMaximum.Value = False
        ElseIf Me.optGTPercentage.Value = True Then
            optGT = 3
            Me.optGTPercentage.Value = False
        ElseIf Me.optGTCollateral.Value = True Then
            optGT = 4
            Me.optGTCollateral.Value = False
        ElseIf Me.optGTTime.Value = True Then
            optGT = 5
            Me.optGTCollateral.Value = False
        ElseIf Me.optGTCommunity.Value = True Then
            optGT = 6
            Me.optGTCommunity.Value = False
        Else
            optGT = -1
        End If
    'optGT value must match last value in lines below, otherwise para won't show
    '-1 makes sure none show
        
        If ActiveDocument.Bookmarks("XMLLoaded").Range.Text > 0 Then
            optGT = ActiveDocument.Bookmarks("optGT").Range.Text
        End If
        
        UpdatePara "Para_LimitedA", optGT, -1, 0
        UpdatePara "Para_LimitedB", optGT, -1, 1
        UpdatePara "Para_LimitedC", optGT, -1, 2
        UpdatePara "Para_LimitedD", optGT, -1, 3
        UpdatePara "Para_LimitedE", optGT, -1, 4
        UpdatePara "Para_LimitedF", optGT, -1, 5
        UpdatePara "Para_LimitedG", optGT, -1, 6 ' Modified 12/3/2007--Replaced 5/27/2008
        If Me.optCCFullUnsecured.Value = True Then
            optSecured = 0
        ElseIf Me.optCCFullSecured.Value = True Then
            optSecured = 1
        ElseIf Me.optCCLimitedUnsecured.Value = True Then
            optSecured = 2
        ElseIf Me.optCCLimitedSecured.Value = True Then
            optSecured = 3
        End If
        UpdatePara "Para_Secured", Str(Abs(optSecured - 2)), -1, 1
    Case Else
    End Select
End Sub
Private Sub AddSecurity()
    If Me.chkCCNoteSecured.Value = True Then
        Me.mpgWizard.Value = Me.mpgWizard.Pages("pgCC1").index
        Me.fraCCInfo.Caption = "Additional Note Collateral"
        Me.mpgCCOptions.Value = Me.mpgCCOptions.Pages("pg00CCBlank").index
        Me.lblCCNoteSecured.Caption = "This note may require an additional security item." & vbCrLf & vbCrLf & _
                                      "Select an additional security item from the above options to secure this note." & vbCrLf & vbCrLf & _
                                      "If no additional security is required, click 'CANCEL' to complete the Assignment of Note."
        Me.lblCCNoteSecured.visible = True
        On Error Resume Next
        Me.cbxCCA.enabled = False
        Me.cbxCCB.enabled = True
        Me.cbxCCB.ListIndex = 0
        Me.cbxCCC.enabled = True
        Me.cbxCCC.ListIndex = 0
        Me.cbxCCD.enabled = True
        Me.cbxCCD.ListIndex = 0
        Me.cbxCCE.enabled = True
        Me.cbxCCE.ListIndex = 0
        Me.cmdNext.enabled = False
        Me.cmdFinish.enabled = False
        Me.cbxCCB.SetFocus
    End If
End Sub
Private Sub UpdateDocCCFields(CCid)

    If ActiveDocument.ActiveWindow.View.ShowFieldCodes = False Then
        ActiveDocument.ActiveWindow.View.ShowFieldCodes = True
    End If
    Dim xx As String
    Select Case CCid
    Case 0    'Write Your Own
        UpdateField "WYOCC", "txtCCWrite", 0
        Me.txtCCWrite.Text = ""
    Case 1, 4    'Lien on Land and Instrument on Building
        Select Case CCid
        Case 1
            UpdateField "C1Instrument", "cbxCCTypeofInstrument2", 0
            UpdateField "C1LienPos", "cbxCCLienPosition2", 0
            UpdateField "C1Address", "txtCCAddress2", 0
            UpdateField "C1State", "cbxCCState2", 0
            UpdateField "C1Type", "cbxCCTypeofProperty2", 0
            UpdateField "chkCCLienAmt2", "chkCCLienAmt2", 1
            ''Added 6/28/2010
            UpdateField "C1SharedLender", "optCCNonSBA", 1
            UpdateField "C1PPLender", "txtCCSharedLender", 0
            UpdateField "C1PPAmount", "txtCCSharedAmt", 0
            ''-----------
            UpdateField "txtCCLienAmount2", "txtCCLienAmount2", 5
            UpdateField "CCShared", "chkCCSharedPosition", 1
            xx = ""
            If Me("chkCCAssignmentRents").Value = 1 Or Me("chkCCAssignmentRents").Value = "True" Then
                xx = "assignment of rents"
            End If
            If Me("chkCCWaterRights2").Value = 1 Or Me("chkCCWaterRights2").Value = "True" Then
                If Len(xx) > 0 Then xx = " and " + xx
                xx = "water rights, if any" + xx
            End If
            If CCMaster = "" Then
                If InStr(xx, "and") = 0 And Len(xx) > 0 Then
                    xx = " and " + xx
                ElseIf Len(xx) > 0 Then
                    xx = ", " + xx
                End If
                xx = "due on sale clause" + xx
            End If
            If Len(xx) > 0 Then
                xx = "(including " + xx + ")" & Chr(160)
            Else
                xx = Chr(160)
            End If
            UpdateField "C1Including", xx, -1
            If Me("chkCCPrimaryResidenceProp").Value = 1 Or Me("chkCCPrimaryResidenceProp").Value = "True" Then
                UpdateText "C1CPR", "The collateral property is the " + Me.cbxCCResidentChoice.Text + "'s primary residence."
            Else
                UpdateText "C1CPR", " "
            End If
        Case 4
            UpdateField "C1Instrument", "cbxCCTypeofInstrument2", 0
            UpdateField "C4Instrument", "cbxCCTypeofInstrument2", 0
            UpdateField "C1LienPos", "cbxCCLienPosition2", 0
            UpdateField "C1Address", "txtCCAddress2", 0
            UpdateField "C1State", "cbxCCState2", 0
            UpdateField "C1Type", "cbxCCTypeofProperty2", 0
            UpdateField "cbC4Years", "chkCCPlusYears", 1
            UpdateField "C4Years", "txtCCPlusYears", 0
            UpdateField "chkCCLienAmt3", "chkCCLienAmt2", 1
            UpdateField "txtCCLienAmount3", "txtCCLienAmount2", 5
            ''Added 6/28/2010
            UpdateField "SharedLien", "chkCCSharedPosition", 1
            UpdateField "C1SharedLender", "optCCNonSBA", 1
            UpdateField "C1PPLender", "txtCCSharedLender", 0
            UpdateField "C1PPAmount", "txtCCSharedAmt", 0
            If Me("chkCCPrimaryResidenceProp").Value = 1 Or Me("chkCCPrimaryResidenceProp").Value = "True" Then
                UpdateText "C1CPR", "The collateral property is the " + Me.cbxCCResidentChoice.Text + "'s primary residence."
            Else
                UpdateText "C1CPR", " "
            End If
            ''-----------
        Case Else
        End Select
    'First Lienholder
        UpdateField "C1Lien1Name", "txtCCFirstLH", 0
        UpdateField "C1Lien1Amount", "txtCCFirstLHAmount", 0
        UpdateField "cbC1Lien1Limited", "chkCCFirstLH", 1
        UpdateField "C1Lien1LtdAmount", "txtCCFirstLHRevAmt", 0
    'Second Lienholder
        UpdateField "C1Lien2Name", "txtCCSecondLH", 0
        UpdateField "C1Lien2Amount", "txtCCSecondLHAmount", 0
        UpdateField "cbC1Lien2Limited", "chkCCSecondLH", 1
        UpdateField "C1Lien2LtdAmount", "txtCCSecondLHRevAmt", 0
    'Third Lienholder
        UpdateField "C1Lien3Name", "txtCCThirdLH", 0
        UpdateField "C1Lien3Amount", "txtCCThirdLHAmount", 0
        UpdateField "cbC1Lien3Limited", "chkCCThirdLH", 1
        UpdateField "C1Lien3LtdAmount", "txtCCThirdLHRevAmt", 0
    'Fourth Lienholder
        UpdateField "C1Lien4Name", "txtCCFourthLH", 0
        UpdateField "C1Lien4Amount", "txtCCFourthLHAmount", 0
        UpdateField "cbC1Lien4Limited", "chkCCFourthLH", 1
        UpdateField "C1Lien4LtdAmount", "txtCCFourthLHRevAmt", 0
    'State-specific options
        UpdateField "C1BP3", "txtCCC1BP3", 0
        UpdateField "cbC1EV1A", "chkCC_C1EV1A", 1
        UpdateField "C1EV1A", "txtCC_C1EV1A", 0
        UpdateField "cbC1EV1B", "chkCC_C1EV1B", 1
        UpdateField "C1EV1B", "txtCC_C1EV1B", 0
        'UpdateField "cbC1EV1C", "chkCC_C1EV1C", 1
        UpdateField "cbC1EV1E", "chkCC_C1EV1E", 1
        UpdateField "cbC1EV1D", "chkCC_C1EV1D", 1
        UpdateField "C1EV1D", "txtCC_C1EV1D", 0
        UpdateField "cbC1EV2A", "chkCC_C1EV1A", 1    'reuse of 1A
        UpdateField "C1EV2A", "txtCC_C1EV1A", 0    'resuse of 1A
        UpdateField "cbC1EV2B", "chkCC_C1EV2B", 1
        UpdateField "cbC1EV2C", "chkCC_C1EV2C", 1
        UpdateField "cbC1EV2E", "chkCC_C1EV2E", 1
        UpdateField "cbC1EV2D", "chkCC_C1EV2D", 1
        UpdateField "cbC1EV3A", "chkCC_C1EV2D", 1    'reuse of 2D
        UpdateField "cbC1EV2F", "chkCC_C1EV2F", 1
        UpdateField "C1EVOther", "txtCC_C1EVOther", 0
    Case 2
    'Dialog CC6
        UpdateField "C2Seller", "txtCCSellerName4", 0
        UpdateField "C2Purchaser", "txtCCPurchaserName4", 0
        UpdateField "C2Address", "txtCCAddress4", 0
        UpdateField "C1State", "cbxCCState4", 0
        UpdateField "C2Amount", "txtCCOwedSellerAmt4", 0
        UpdateField "chkCCLienAmt4", "chkCCLienAmt4", 1
        UpdateField "txtCCLienAmount4", "txtCCLienAmount4", 5
        If Me.optCCAssignment4A.Value = True Then
            UpdateField "obC2Interest", 0, -1
        Else
            UpdateField "obC2Interest", 1, -1
        End If
        UpdateField "C2Interest", "txtCCAssignment4", 0
        UpdateField "chkCCLienAmt3", "chkCCLienAmt2", 1
    '    UpdateField "txtCCLienAmount3", "txtCCLienAmount3", 5
    'Dialog CC7
        UpdateField "cbC2EV1A", "chkCC_C1EV1A", 1
        UpdateField "C2EV1A", "txtCC_C1EV1A", 0
        UpdateField "cbC2EV1B", "chkCC_C1EV1B", 1
        UpdateField "C2EV1B", "txtCC_C1EV1B", 0
        'UpdateField "cbC2EV1C", "chkCC_C1EV1C", 1
        UpdateField "cbC2EV1E", "chkCC_C1EV1E", 1
        UpdateField "cbC2EV1D", "chkCC_C1EV1D", 1
        UpdateField "C2EV1D", "txtCC_C1EV1D", 0
        UpdateField "cbC2EV2A", "chkCC_C1EV1A", 1    'reuse of 1A
        UpdateField "C2EV2A", "txtCC_C1EV1A", 0    'reuse of 1A
        UpdateField "cbC2EV2B", "chkCC_C1EV2B", 1
        UpdateField "cbC2EV2C", "chkCC_C1EV2C", 1
        UpdateField "cbC2EV2E", "chkCC_C1EV2E", 1
        UpdateField "cbC2EV2D", "chkCC_C1EV2D", 1
        UpdateField "cbC2EV3A", "chkCC_C1EV2D", 1    'reuse of 2D
        UpdateField "cbC2EV2F", "chkCC_C1EV2F", 1
        UpdateField "C2EVOther", "txtCC_C1EVOther", 0
    Case 3    'Seller's Interest
        UpdateField "C3Seller", "txtCCSellerName4", 0
        UpdateField "C3Purchaser", "txtCCPurchaserName4", 0
        UpdateField "C3Address", "txtCCAddress4", 0
        UpdateField "C3Amount", "txtCCOwedSellerAmt4", 0
        If Me.optCCAssignment4A.Value = True Then
            UpdateField "obC3Interest", "0", -1
        Else
            UpdateField "obC3Interest", "1", -1
        End If
        UpdateField "C3Interest", "txtCCAssignment4", 0
    Case 5    'Land Trust
        UpdateField "C5Address", "txtCCAddress1", 0
        UpdateField "C5Assignee", "txtCCPriorAssignment1", 0
        UpdateField "C5Amount1", "txtCCPriorAssignmentAmount", 0
        UpdateField "C5Lienholder", "txtCCFeeTitle1", 0
        UpdateField "C5Amount2", "txtCCFeeTitleAmount1", 0
    Case 6    'Cooperative Apartment
        UpdateField "C6LienPos", "cbxCCLienApartment", 0
        UpdateField "C6Address", "txtCCApartmentAddress", 0
    Case 7    'Personal Property (also Puerto Rico)
    'If Puerto Rico use Chattel Mortgage
        If InStr(Me.cbxCCC.Text, "Chattel Mortgage") > 0 Then
            xx = "Chattel Mortgage"
        Else
            xx = "Perfected Security Interest"
        End If
        UpdateField "C7Instrument", xx, -1
        UpdateField "C7LienPos", "cbxCCLienPosition", 0
        UpdateField "C7Owned", "cbxC7Owned", 0
        UpdateField "cbC7PP1", "chkC7PP1", 1
        UpdateField "cbC7PP2", "chkC7PP2", 1
        UpdateField "cbC7PP3", "chkC7PP3", 1
        UpdateField "cbC7PP4", "chkC7PP4", 1
        UpdateField "cbC7PP5", "chkC7PP5", 1
        UpdateField "cbC7PP6", "chkC7PP6", 1
        UpdateField "cbC7PP7", "chkC7PP7", 1
        UpdateField "cbC7PP8", "chkC7PP8", 1
        UpdateField "cbC7PP9", "chkC7PP9", 1
        UpdateField "cbC7PP10", "chkC7PP10", 1
        UpdateField "C7PP10", "txtC7PP10", 0
        UpdateField "C7Lienholder", "txtC7Lienholder", 0
        UpdateField "C7Amount", "txtC7Amount", 0
        UpdateField "cbC7PP1A", "chkC7PP1A", 1
        UpdateField "cbC7PP2A", "chkC7PP2A", 1
        UpdateField "cbC7PP3A", "chkC7PP3A", 1
        UpdateField "cbC7PP4A", "chkC7PP4A", 1
        UpdateField "cbC7PP5A", "chkC7PP5A", 1
        UpdateField "cbC7PP6A", "chkC7PP6A", 1
        UpdateField "cbC7PP7A", "chkC7PP7A", 1
        UpdateField "cbC7PP8A", "chkC7PP8A", 1
        UpdateField "cbC7PP9A", "chkC7PP9A", 1
        UpdateField "cbC7PP10A", "chkC7PP10A", 1
        UpdateField "C7PP10A", "txtC7PP10A", 0
'        UpdateField "CCSharedPosition", "chkCCSharedPosition", 1
        UpdateField "C7Shared", "chkCC7Shared", 1
        UpdateField "CC7NonSBA", "optCC7NonSBA", 1
        UpdateField "C7PPLender", "txtCC7SharedLender", 0 'Added 11/1/2010
        UpdateField "C7PPAmount", "txtCC7SharedAmt", 0 'Added 11/1/2010
        UpdateField "C7Lender", "txtC7Lender", 0
        UpdateField "C7MaxAmount", "txtC7MaxAmount", 0
        UpdateField "cbC7PP1B", "chkC7PP1B", 1
        UpdateField "cbC7PP2B", "chkC7PP2B", 1
        UpdateField "cbC7PP3B", "chkC7PP3B", 1
        UpdateField "cbC7PP4B", "chkC7PP4B", 1
        UpdateField "cbC7PP5B", "chkC7PP5B", 1
        UpdateField "cbC7PP6B", "chkC7PP6B", 1
        UpdateField "cbC7PP7B", "chkC7PP7B", 1
        UpdateField "cbC7PP8B", "chkC7PP8B", 1
        UpdateField "cbC7PP9B", "chkC7PP9B", 1
        UpdateField "cbC7PP10B", "chkC7PP10B", 1
        UpdateField "C7PP10B", "txtC7PP10B", 0
    Case 9    'Vehicle
        UpdateField "C9LienPos", "cbxCCVehicleLien", 5
        UpdateField "C9Make", "txtCCVehicleMake", 0
        UpdateField "C9Year", "txtCCVehicleYear", 0
        UpdateField "C9Lien1Name", "txtCCFirstLH", 0
        UpdateField "C9Lien1Amount", "txtCCFirstLHAmount", 0
        UpdateField "C9Lien2Name", "txtCCSecondLH", 0
        UpdateField "C9Lien2Amount", "txtCCSecondLHAmount", 0
        UpdateField "C9Lien3Name", "txtCCThirdLH", 0
        UpdateField "C9Lien3Amount", "txtCCThirdLHAmount", 0
        UpdateField "C9Lien4Name", "txtCCFourthLH", 0
        UpdateField "C9Lien4Amount", "txtCCFourthLHAmount", 0
    Case 10    'Mobile Home
        UpdateField "C10LienPos", "cbxCCMobileHomeLien", 5
        UpdateField "C10SerialNumber", "txtCCMobileHomeSerial", 0
        UpdateField "C10Owner", "txtCCMobileHomeOwner", 0
        UpdateField "C10Location", "txtCCMobileHomeLocation", 0
        UpdateField "C10Lien1Name", "txtCCFirstLH", 0
        UpdateField "C10Lien1Amount", "txtCCFirstLHAmount", 0
        UpdateField "C10Lien2Name", "txtCCSecondLH", 0
        UpdateField "C10Lien2Amount", "txtCCSecondLHAmount", 0
        UpdateField "C10Lien3Name", "txtCCThirdLH", 0
        UpdateField "C10Lien3Amount", "txtCCThirdLHAmount", 0
        UpdateField "C10Lien4Name", "txtCCFourthLH", 0
        UpdateField "C10Lien4Amount", "txtCCFourthLHAmount", 0
    Case 11    'Liquor License
        ActiveWindow.View.ShowFieldCodes = True
        If Me.optCCLiquorLicenseA.Value = True Then
            UpdateField "obC11Type", 0, -1
        Else
            UpdateField "obC11Type", 1, -1
        End If
        UpdateField "C11LienPos", "cbxCCLienLicense", 0
        UpdateField "C11LicenseNumber", "txtCCLiqLicense", 0
        UpdateField "C11Lien1Name", "txtCCFirstLH", 0
        UpdateField "C11Lien1Amount", "txtCCFirstLHAmount", 0
        UpdateField "C11Lien2Name", "txtCCSecondLH", 0
        UpdateField "C11Lien2Amount", "txtCCSecondLHAmount", 0
        UpdateField "C11Lien3Name", "txtCCThirdLH", 0
        UpdateField "C11Lien3Amount", "txtCCThirdLHAmount", 0
        UpdateField "C11Lien4Name", "txtCCFourthLH", 0
        UpdateField "C11Lien4Amount", "txtCCFourthLHAmount", 0
    Case 12    'Corporate Stock
        UpdateField "C12Pledgor", "txtCCStockShareholder", 0
        UpdateField "C12Shares", "txtCCStockSharesNumber", 0
        UpdateField "C12Company", "txtCCStockCompany", 0
    Case 13    'Mutual Fund
        UpdateField "C13Shareholder", "txtCCMutualFundShareholder", 0
        UpdateField "C13Account", "txtCCMutualFundName", 0
    Case 14    'Aircraft
        UpdateField "C14LienPos", "cbxCCAircraftLien", 0
        UpdateField "C14Make", "txtCCAircraftMake", 0
        UpdateField "C14Model", "txtCCAircraftModel", 0
        UpdateField "C14Year", "txtCCAircraftYear", 0
        UpdateField "C14Lien1Name", "txtCCFirstLH", 0
        UpdateField "C14Lien1Amount", "txtCCFirstLHAmount", 0
        UpdateField "C14Lien2Name", "txtCCSecondLH", 0
        UpdateField "C14Lien2Amount", "txtCCSecondLHAmount", 0
        UpdateField "C14Lien3Name", "txtCCThirdLH", 0
        UpdateField "C14Lien3Amount", "txtCCThirdLHAmount", 0
        UpdateField "C14Lien4Name", "txtCCFourthLH", 0
        UpdateField "C14Lien4Amount", "txtCCFourthLHAmount", 0
    Case 15    'Vessel
        UpdateField "C15LienPos", "cbxCCVesselLien", 0
        UpdateField "C15Name", "txtCCVesselName", 0
        UpdateField "C15Lien1Name", "txtCCFirstLH", 0
        UpdateField "C15Lien1Amount", "txtCCFirstLHAmount", 0
        UpdateField "C15Lien2Name", "txtCCSecondLH", 0
        UpdateField "C15Lien2Amount", "txtCCSecondLHAmount", 0
        UpdateField "C15Lien3Name", "txtCCThirdLH", 0
        UpdateField "C15Lien3Amount", "txtCCThirdLHAmount", 0
        UpdateField "C15Lien4Name", "txtCCFourthLH", 0
        UpdateField "C15Lien4Amount", "txtCCFourthLHAmount", 0
    Case 16    'Government Contract
        UpdateField "C16Contract", "txtCCGovContractNumber", 0
        UpdateField "C16Amount", "txtCCGovContractAmount", 0
        UpdateField "C16Agency", "txtCCGovContractAgency", 0
    Case 17    'Contract
        UpdateField "C17Date", "txtCCContractDate", 0
        UpdateField "C17Name", "txtCCContractParty", 0
        UpdateField "C17Amount", "txtCCContractAmount", 0
    Case 18    'Note
        UpdateField "C18Date", "txtCCNoteDate", 0
        UpdateField "C18ExecutedBy", "txtCCNoteExecutedby", 0
        UpdateField "C18ExecutedTo", "txtCCNoteExecutedTo", 0
        UpdateField "C18Amount", "txtCCNoteBalanceDue", 0
        UpdateField "cbC18Secured", "chkCCNoteSecured", 1
    Case 20    'Certificate of Deposit
        UpdateField "C20Assignor", "txtCCCDName", 0
        UpdateField "C20Amount", "txtCCCDValue", 0
    Case 21    'US Patent
        UpdateField "C21Number", "txtCCPatentNumber", 0
        UpdateField "C21Holder", "txtCCPatentHolder", 0
    Case 22    ' Instrument on Building
        UpdateField "C22LienPos", "cbxCCLienPosition2", 0
        UpdateField "C22Address", "txtCCAddress2", 0
        UpdateField "C22LienAmount", "txtCCLienAmount2", 0
        UpdateField "CCSharedPosition", "chkCCSharedPosition", 1
        '            UpdateField "CCShared", "chkCCSharedPosition", 1

            UpdateField "C22NonSBA", "optCCNonSBA", 1
'            UpdateField "C1PPLender", "txtCCSharedLender", 0
'            UpdateField "C1PPAmount", "txtCCSharedAmt", 0
            ''Added 6/28/2010
            UpdateField "C22PPLender", "txtCCSharedLender", 0
            UpdateField "C22PPAmount", "txtCCSharedAmt", 0
'            UpdateField "SharedLien", "chkCCSharedPosition", 1
            ''-----------
        UpdateField "cbC22Years", "chkCCPlusYears", 1
        UpdateField "C22Years", "txtCCPlusYears", 0
    'First Lienholder
        UpdateField "C22Lien1Name", "txtCCFirstLH", 0
        UpdateField "C22Lien1Amount", "txtCCFirstLHAmount", 0
        UpdateField "cbC22Lien1Limited", "chkCCFirstLH", 1
        UpdateField "C22Lien1LtdAmount", "txtCCFirstLHRevAmt", 0
    'Second Lienholder
        UpdateField "C22Lien2Name", "txtCCSecondLH", 0
        UpdateField "C22Lien2Amount", "txtCCSecondLHAmount", 0
        UpdateField "cbC22Lien2Limited", "chkCCSecondLH", 1
        UpdateField "C22Lien2LtdAmount", "txtCCSecondLHRevAmt", 0
    'Third Lienholder
        UpdateField "C22Lien3Name", "txtCCThirdLH", 0
        UpdateField "C22Lien3Amount", "txtCCThirdLHAmount", 0
        UpdateField "cbC22Lien3Limited", "chkCCThirdLH", 1
        UpdateField "C22Lien3LtdAmount", "txtCCThirdLHRevAmt", 0
    'Fourth Lienholder
        UpdateField "C22Lien4Name", "txtCCFourthLH", 0
        UpdateField "C22Lien4Amount", "txtCCFourthLHAmount", 0
        UpdateField "cbC22Lien4Limited", "chkCCFourthLH", 1
        UpdateField "C22Lien4LtdAmount", "txtCCFourthLHRevAmt", 0
    Case 23    'Lease by assignment
        UpdateField "C23Lessor", "txtCCLessorName3", 0
        UpdateField "C23Lessee", "txtCCLesseeName3", 0
        UpdateField "C23Date", "txtCCLeaseDate3", 0
        UpdateField "cbC23Date", "chkCCLeaseDate3", 1
        UpdateField "C23Address", "txtCCAddress3", 0
        UpdateField "cbC23Years", "chkCCPlusYears3", 1
        UpdateField "C23Years", "txtCCPlusYears3", 0
        UpdateField "C23Days", "txtCCWrittenNotice", 0
    Case 24    'Lease by Lien
        UpdateField "C24LienPos", "cbxCCLienPosition3", 0
        UpdateField "C24Lessor", "txtCCLessorName3", 0
        UpdateField "C24Lessee", "txtCCLesseeName3", 0
        UpdateField "C24Type", "cbxCCTypeofProperty3", 0
        UpdateField "C24LienAmount", "txtCCLienAmount3", 5
        UpdateField "chkCCLienAmt3", "chkCCLienAmt3", 1
    '    UpdateField "txtCCLienAmount3", "txtCCLienAmount3", 5
        UpdateField "cbC24Years", "chkCCPlusYears3", 1
        UpdateField "C24Years", "txtCCPlusYears3", 0
        UpdateField "C24Days", "txtCCWrittenNotice", 0
    Case 27    'Tribal Land
        UpdateField "C27LienPos", "cbxCCTribeLien", 0
        UpdateField "C27Tribe", "txtCCTribeName", 0
        UpdateField "C27Location", "txtCCTribeLocation", 0
        UpdateField "C27LienAmount", "txtCCLienAmount", 0
        UpdateField "cbC27Years", "chkCCTermPlus", 1
        UpdateField "C27Years", "txtCCTermPlus", 0
    Case 28
    Case 290, 291, 292, 293
    'Insert Guarantor and State and then clear dialog
    'Then update doc fields from pgCC2 if Limited
        If Me.optCCFullSecured.Value = True Then
            optSecured = 0
        ElseIf Me.optCCFullUnsecured.Value = True Then
            optSecured = 1
        ElseIf Me.optCCLimitedSecured.Value = True Then
            optSecured = 2
        ElseIf Me.optCCLimitedUnsecured.Value = True Then
            optSecured = 3
        End If
        UpdateField "obGuaranty", optSecured, -1
        UpdateField "Guarantor", "txtCCGuarantors", 0
        If Me.lstCCUSState.ListIndex = 0 Then
            GState = Me.txtCCCountry.Text
        Else
            GState = Me.lstCCUSState.List(Me.lstCCUSState.ListIndex, 2)
        End If
        UpdateField "GuarantorState", GState, -1
        Me.txtCCGuarantors.Text = ""
        Me.lstCCUSState.ListIndex = 0
        Me.txtCCCountry.Text = ""
    'The following options come from pgCC2
        If CCid = 292 Or CCid = 293 Then
            UpdateField "LimitedA", "txtGTBalance", 0
            UpdateField "LimitedB", "txtGTPrincipal", 0
            UpdateField "LimitedC", "txtGTMaximum", 0
            UpdateField "LimitedD", "txtGTPercentage", 0
            UpdateField "LimitedE", "txtGTCollateral", 0
            UpdateField "LimitedF", "txtGTTime", 0
        End If
    Case Else
    End Select
    ResetCCControls "pgCC7", 99
    CCClosing
    ActiveDocument.ActiveWindow.View.ShowFieldCodes = False
End Sub
Private Sub UpdateDocFields(PageID)
    Application.ScreenUpdating = False
    ActiveDocument.ActiveWindow.View.ShowFieldCodes = True
    Select Case PageID
    Case "pgLI1"
    'DAN
    'ARRA Changed 3/15/2009
        UpdateField "cbLI501", "chkLI501", 1
        UpdateField "cbLI502", "chkLI502", 1
        UpdateField "cbLIDFP", "chkLIDFP", 1
        'Small Business Advantage
      '  UpdateField "cbLIOPTS", "chkLIOPTS", 1
        UpdateField "cbLISLA", "chkLISLA", -1
      ' UpdateField "chkCCGuaranteesOnly", "optCCGuaranteesOnly", 1
       
        TotARRA = 0
        '1 = 501; 3 = 502; 4 = 501 & 502; 5 = 506; 6 = 502 & 506
        If Me.chkLI501.Value = True Then
            TotARRA = 1
        End If
        If Me.chkLI502.Value = True Then
            TotARRA = 3
        End If
        If Me.chkLI501.Value = True And Me.chkLI502.Value = True Then
            TotARRA = 4
        End If
'        If Me.chkLIDFP.Value = True Then
'            TotARRA = 5
'        End If
'        If Me.chkLI502.Value = True And Me.chkLIDFP.Value = True Then
'            TotARRA = 6
'        End If
        UpdateField "cbARRA", TotARRA, -1
        UpdateField "CIDNumber", "txtLICID", 0
        UpdateField "SBLender", "txtLILenderSign", 0
        UpdateField "LenderName", "txtLIName", 0
        UpdateField "LenderName2", "txtLIName2", 0
        UpdateField "LenderAddress", "txtLIAddress", 0
        UpdateField "LenderAddress2", "txtLIAddress2", 0
        UpdateField "LenderCity", "txtLICity", 0
        UpdateField "LenderState", "cbxLIState", 0
        UpdateField "LenderZip", "txtLIZip", 0
        UpdateField "LenderSign", "txtLILenderSign", 0
        If Me.cbxSBAName.ListIndex = 0 Or Me.cbxSBAName.ListCount = 0 Then
            UpdateField "SBAName", "txtSBAName", 0
        Else
            UpdateField "SBAName", "txtSBAName", 0
        End If
        UpdateField "SBAAddress", "txtSBAAddress", 0
        UpdateField "SBAAddress2", "txtSBAAddress2", 0
        UpdateField "SBACity", "txtSBACity", 0
        UpdateField "SBAState", "cbxSBAState", 0
        UpdateField "SBAZip", "txtSBAZip", 0
        If Me.cbxSBAName.ListIndex = 0 Or Me.cbxSBAName.ListCount = 0 Or Me.cbxSBAName.Locked = True Then
            UpdateField "SBACode", 0, -1
            UpdateField "ddOffice", Me.cbxSBAState.Text & " - " & Me.txtSBAName.Text, -1
        Else
            UpdateField "SBACode", SBACode, -1
            UpdateField "ddOffice", Me.cbxSBAState.Text & " - " & Me.txtSBAName.Text, -1
        End If
    Case "pgLI2"
        Dim i
        Dim CurIdx
        Dim j
        Dim dlgCtrlPre As String
        UpdateField "cbEPC", IIf(Me.chkBIEPC.Value = True, 1, 0), -1
        For i = 0 To 1
            Pos = InStr(RP__(i, 1), "Name")
            If RPid__(i) = "007" Then
                dlgCtrlPre = "BI"
            Else
                dlgCtrlPre = "OC"
            End If
            If RPid__(i) <> "" Then
                CurIdx = Trim(RP__(i, 0))
                j = 1
                While RP__(i, j) <> ""
                    If InStr(RP__(i, j), "CoBorrower") Then
                        dlgCtrlName = "chkOCCoBorrower"
                        Type_ = 1
                    ElseIf InStr(RP__(i, j), "State") Then
                        dlgCtrlName = "cbx" & dlgCtrlPre & Mid(RP__(i, j), Pos)
                        Type_ = 0
                    Else
                        dlgCtrlName = "txt" & dlgCtrlPre & Mid(RP__(i, j), Pos)
                        Type_ = 0
                    End If
                    UpdateField (RP__(i, j)) + "_" + CurIdx, dlgCtrlName, Type_
                    j = j + 1
                Wend
            End If
        Next i
        InsertText "none", "Inc_RP007", "none", 0, 2
        InsertText "none", "Inc_RP007B", "none", 0, 2
        InsertRP "007", "Para_RP007", "Inc_RP007", "none", 0, 0
        InsertText "none", "Inc_RP008", "none", 0, 2
        InsertText "none", "Inc_RP008B", "none", 0, 2
        InsertRP "008", "Para_RP008", "Inc_RP008", "chkBIEPC", 1, 0
    Case "pgLI3"
        UpdateField "cbEPC", IIf(Me.chkBIEPC.Value = True, 1, 0), -1
        UpdateField "LoanAmount", "txtLDAmt", 0
        UpdateField "PercentGuaranteed", "txtLDGuaranteePct", 0
        UpdateField "MaturityYears", "txtLDMaturityYears", 0
        UpdateField "MaturityMonths", "txtLDMaturityMonths", 0
        UpdateField "LDMaturity", LDMaturity, -1
        UpdateField "obMaturityStart", Me.cbxLDMaturityPeriod.ListIndex, -1
        UpdateField "cbAutoGuaranteeFee", "chkLDAutoCalc", 1
    '      UpdateField "OSF", "chkOSFSTAR", 1
    'DAN ARRA
        InsertText "none", "Inc_NTPrepayment", "none", 0, 2 + 256
        If ActiveDocument.Bookmarks("MaturityYears").Range.Text >= 15 Then
            If ActiveDocument.Bookmarks("cbLIDFP").Range.Text = 0 Then
                InsertText "Para_NTPrepayment", "Inc_NTPrepayment", 1, 0, 1 + 256
            End If
        End If
        UpdateField "AutoGuaranteeFee", "txtLDGuaranteeFee", 0
        UpdateField "ManualGuaranteeFee", "txtLDGuaranteeFee", 0
        UpdateField "OSFee", "txtLDOngoingServicingFee", 0
'        UpdateField "LastDisb", "txtDIFirstDisbursement", 0
'        UpdateField "LastDisb", "txtDILastDisbursement", 0
        If Me.txtLSPrefix.Text = "" Then
            UpdateField "LoanPrefix", Chr(160), -1
        Else
            UpdateField "LoanPrefix", "txtLSPrefix", 0
        End If
        If Me.txtLSLoanNumber.Text = "--" Then
            UpdateField "LoanNumber", "____________________", -1
        Else
            UpdateField "LoanNumber", "txtLSLoanNumber", 0
        End If
        If Me.txtLSSuffix.Text = "" Then
            UpdateField "LoanSuffix", Chr(160), -1
        Else
            UpdateField "LoanSuffix", "txtLSSuffix", 0
        End If
        If Me.txtLSReceiptDate.Text = "--" Then
            UpdateField "RequestDate", "____________________", -1
        Else
            UpdateField "RequestDate", "txtLSReceiptDate", 0
        End If
        If Me.txtLSApprovalDate.Text = "--" Then
            UpdateField "ApprovalDate", "____________________", -1
            UpdateField "ApprovalDate2", Chr(160) & Chr(160) & Chr(160) & Chr(160) & Chr(160) & Chr(160) & Chr(160) & Chr(160) & Chr(160) & Chr(160) & Chr(160) & Chr(160) & Chr(160), -1
        Else
            UpdateField "ApprovalDate", "txtLSApprovalDate", 0
            UpdateField "ApprovalDate2", "txtLSApprovalDate", 0
        End If
        'ARRA 3/15/2009
        UpdateField "cbLI501", "chkLI501", 1
        UpdateField "cbLI502", "chkLI502", 1
        UpdateField "cbLIDFP", "chkLIDFP", 1
       ' UpdateField "cbLIOPTS", "chkLIOPTS", 1
        'Small Loan Advantage
        UpdateField "cbLISLA", "chkLISLA", 1
 '       UpdateField "cbCACAIP", "chkCAIP", 1
       ' UpdateField "chkCCGuaranteesOnly", "optCCGuaranteesOnly", 1
        ActiveDocument.Sections(1).Footers(wdHeaderFooterPrimary).Range.Fields.Update
        UpdateField "obPLP", "optLSNonPLP", 1
        If Me.cbxSBASignor.visible = True And Me.cbxSBASignor.Text <> "No Employee List Available" Then
            UpdateField "SBSBA", Me.cbxSBASignor.Text, -1
        ElseIf Me.txtSBASignor.visible = True And Me.txtSBASignor.Text <> "" Then
            UpdateField "SBSBA", Me.txtSBASignor.Text, -1
        End If
        UpdateField "SBLender", "txtLILenderSign", 0
        ActiveDocument.ActiveWindow.View = wdPageView
    Case "pgRT1"
        If Me.optIRFixed.Value = True Then
            obddrate = 0
            UpdateField "IRRate1", "txtIRFixed", 0
        ElseIf Me.optIRVariable.Value = True Then
            obddrate = 1
            UpdateField "IRRate2", "txtIRVariable", 0
            UpdateField "IROverPrime", "txtIRVariableOverPrime", 0
            UpdateField "RTPublication", "txtIRRTPublisher", 0
            'ADD TO MAIN
            If Me.optIRRTPubWebsite.Value = True Then
                UpdateField "RTPubType", "0", -1
            Else
                UpdateField "RTPubType", "1", -1
            End If
            If Me.lblIRVariableOverPrime.Text = "% Over Prime" Then
                PPeg = 0
            ElseIf Me.lblIRVariableOverPrime.Text = "% Over Peg" Then
                PPeg = 1
            Else
                PPeg = 2
            End If
        ElseIf Me.optIRFixedVariable.Value = True Then
'CAP
            obddrate = 2
            UpdateField "IRRate1", "txtIRFixedVariable", 0
            UpdateField "IROverPrime", "txtIRFixedVariableOverPrime", 0
            UpdateField "IRPeriod1", "txtIRFixedVariablePeriod", 0
            UpdateField "RTPublication", "txtIRRTPublisher", 0
            If Not IsNull(Me.optIRRTPubNewspaper.Value) Then
                UpdateField "RTPubType", "optIRRTPubNewspaper", 1
            End If
            If Me.lblIRFixedVariableOverPrime.Text = "% Over Prime" Then
                PPeg = 0
            ElseIf Me.lblIRFixedVariableOverPrime.Text = "% Over Peg" Then
                PPeg = 1
            Else
                PPeg = 2
            End If
        ElseIf Me.optIRSBAFixed.Value = True Then
'CAP
            obddrate = 3
            UpdateField "IRRate1", "txtIRSBAFixed", 0
            UpdateField "IRRate2", "txtIRLenderVariable", 0
            UpdateField "IROverPrime", "txtIRLenderOverPrime", 0
            If Me.lblIRLenderOverPrime.Text = "% Over Prime" Then
                PPeg = 0
            ElseIf Me.lblIRLenderOverPrime.Text = "% Over Peg" Then
                PPeg = 1
            Else
                PPeg = 2
            End If
            UpdateField "RTPublication", "txtIRRTPublisher", 0
            If Not IsNull(Me.optIRRTPubNewspaper.Value) Then
                UpdateField "RTPubType", "optIRRTPubNewspaper", 1
            End If
        ElseIf Me.optIRLenderFixed.Value = True Then
'CAP
            obddrate = 4
            UpdateField "IRRate1", "txtIRLenderFixed", 0
            UpdateField "IRRate2", "txtIRSBAVariable", 0
            UpdateField "IROverPrime", "txtIRSBAOverPrime", 0
            UpdateField "RTPublication", "txtIRRTPublisher", 0
            If Not IsNull(Me.optIRRTPubNewspaper.Value) Then
                UpdateField "RTPubType", "optIRRTPubNewspaper", 1
            End If
            If Me.lblIRSBAOverPrime.Text = "% Over Prime" Then
                PPeg = 0
            ElseIf Me.lblIRSBAOverPrime.Text = "% Over Peg" Then
                PPeg = 1
            Else
                PPeg = 2
            End If
        ElseIf Me.optIRTwoFixed.Value = True Then
'CAP
            obddrate = 5
            UpdateField "IRRate1", "txtIRSplitPercent", 0
            UpdateField "IRRate2", "txtIRSplitPercent2", 0
            UpdateField "IRPShare1", "txtIRSplitRate", 0
            UpdateField "IRPShare2", "txtIRSplitRate2", 0
        ElseIf Me.optIRSplit.Value = True Then
'CAP
            obddrate = 6
            UpdateField "IRRate1", "txtIRSplitPercent", 0
            UpdateField "IRRate2", "txtIRSplitPercent2", 0
            UpdateField "IRPShare1", "txtIRSplitRate", 0
            UpdateField "IRPShare2", "txtIRSplitRate2", 0
            UpdateField "IROverPrime", "txtIRSplitPrime", 0
            UpdateField "RTPublication", "txtIRRTPublisher", 0
            If Not IsNull(Me.optIRRTPubNewspaper.Value) Then
                UpdateField "RTPubType", "optIRRTPubNewspaper", 1
            End If
            If Me.lblIRSplit4.Text = "The rate is Prime Rate plus" Then
                PPeg = 0
            ElseIf Me.lblIRSplit4.Text = "The rate is Peg Rate plus" Then
                PPeg = 1
            Else
                PPeg = 2
            End If
        End If
        UpdateField "ChangePrimePeg", PPeg, -1
        UpdateField "obddRate", obddrate, -1
        UpdateRT1 = 0
    Case "pgRT2"
        If Me.optRTDFP.Value = True Then
            UpdateField "optRTDFP", "optRTDFP", 1
'            UpdateField "chkRTCurtailment", "chkRTCurtailment", 1
'            UpdateField "DFPCurtailment", "txtRTCurtailment", 0
'            UpdateField "txtRTDays", "cbxRTPeriod", 0
            UpdateField "DFPPayDay", "cbxDFPMonths", 0
            HideShowPara "pgRT2"
        End If
        If Me.chkLISLA.Value = True Or Me.chkLISLA.Value = False Then
            UpdateField "txtRTESF", "txtRTESF", 0
            UpdateField "chkRTESF", "chkRTESF", 1
            HideShowPara "pgRT2"
        End If
        If Me.optIONone.Value = True Then
            UpdateField "obIO", 0, -1
            UpdateField "IOBeginValue", "one", -1
            UpdateField "IOPayDay", "cbxIOMonthsOne", 0
        End If
        If Me.optIOOne.Value = True Then
            UpdateField "obIO", 1, -1
            UpdateField "IOBeginValue", "cbxIODaysOne", 0
            UpdateField "IOBeginPeriod", "cbxIOPeriodOne", 0
            UpdateField "IOPayDay", "cbxIOMonthsOne", 0
        End If
        If Me.optIOMorethanOne.Value = True Then
            UpdateField "obIO", 2, -1
            UpdateField "IOBeginValue", "cbxIODaysMore", 0
            UpdateField "IOBeginPeriod", "cbxIOMonthsMore", 0
            UpdateField "IOPayDay", "cbxIOMonthsDueMore", 0
            UpdateField "IOPayments", "txtIOPaymentsMore", 0
            UpdateField "IOFrequency", "every " & Me.cbxIOPeriodMore.Text, -1
        End If
        UpdateRT2 = 0
    Case "pgRT3"
        obddPay = Me.mpgPTOptions.Value
        UpdateField "obddPay", obddPay, -1
        Select Case Me.mpgPTOptions.Value
        Case 0
            UpdateField "PIPayPeriodV2", "txtPTEveryNum1", 0
            UpdateField "PTAmount1", "txtPTAmount1", 0
            If Me.cbxPTPeriod1.Text = "months" Then
                UpdateField "PTFrequency", "every " & Me.txtPTEveryNum1.Text & " months", -1
            Else
                UpdateField "PTFrequency", "every " & Me.cbxPTPeriod1.Text, -1
            End If
            UpdateField "PTPayDay1", "cbxPTDayCount1", 0
        Case 1
            UpdateField "IPPayPeriodV2", "txtPTEveryNum2", 0
            UpdateField "PTAmount1", "txtPTAmount2", 0
            If Me.cbxPTPeriod2.ListIndex = 1 Then
                UpdateField "PTFrequency", "every " & Me.txtPTEveryNum2.Text & " months", -1
            Else
                UpdateField "PTFrequency", "every " & Me.cbxPTPeriod2.Text, -1
            End If
            UpdateField "PTPayDay1", "cbxPTDayCount2", 0
        Case 2
            UpdateField "RISPPayPeriodV2", "txtPTEveryNum3", 0
            UpdateField "PTAmount2", "txtPTAmount3", 0
            If Me.cbxPTPeriod3.ListIndex = 1 Then
                UpdateField "PTFrequency", "every " & Me.txtPTEveryNum3.Text & " months", -1
            Else
                UpdateField "PTFrequency", "every " & Me.cbxPTPeriod3.Text, -1
            End If
            UpdateField "PTPayDay1", "cbxPTDayCount3a", 0
            UpdateField "PTPayDay2", "cbxPTDayCount3b", 0
            UpdateField "PTPeriod1", "txtPTMonthsInclude3", 0
        Case 3
            UpdateField "PTAmount1", "txtPTAmount4", 0
            UpdateField "PTPeriod1", "txtPTMonthsInclude4", 0
            UpdateField "PTPayDay1", "cbxPTDayCount4", 0
        Case 4
            UpdateField "SPI2PayPeriodV2", "txtPTEveryNum5", 0
            UpdateField "PTAmount1", "txtPTAmount5", 0
            If Me.cbxPTPeriod5.ListIndex = 1 Then
                UpdateField "PTFrequency", "every " & Me.txtPTEveryNum5.Text & " months", -1
            Else
                UpdateField "PTFrequency", "every " & Me.cbxPTPeriod5.Text, -1
            End If
            UpdateField "PTPayDay1", "cbxPTDayCount5", 0
            UpdateField "PTPeriod2", "txtPTMonthsExcept5", 0
        Case 5
            UpdateField "PTAmount1", "txtPTAmount6a", 0
            UpdateField "PTAmount2", "txtPTAmount6b", 0
            UpdateField "PTPeriod1", "txtPTMonthsInclude6a", 0
            UpdateField "PTPeriod2", "txtPTMonthsInclude6b", 0
        Case 6
            UpdateField "PTAmount1", "txtPTAmount7a", 0
            UpdateField "PTAmount2", "txtPTAmount7b", 0
            UpdateField "PTPShare1", "txtPTPercent7", 0
        Case Else
        End Select
        UpdateField "PTBeginValue", "cbxPTBeginPeriodNum", 0
        UpdateField "PTBeginPeriod", "cbxPTBeginPeriodType", 0
        UpdateRT3 = 0
    Case "pgRT4"
        If InStr(1, Me.cbxVLORateAdjusted.Text, "months") Then
            UpdateField "ChangePeriod", "every " & Me.txtVLOEveryNum.Text & " months", -1
        ElseIf Me.cbxVLORateAdjusted.ListIndex = 8 Or Me.cbxVLORateAdjusted.ListIndex = 0 And PPeg >= 1 Then
            'Modified 4/13/2007 -- compensate for larger list
            UpdateField "ChangePeriod", "every " & Me.txtVLOEveryNum.Text & " years", -1
        Else
            UpdateField "ChangePeriod", "cbxVLORateAdjusted", 0
        End If
        If InStr(1, Me.cbxVLORateAdjusted.Text, "monthly") Then
            UpdateField "ChangePeriod", "cbxVLORateAdjusted", 0
        End If
        UpdateField "ChangePeriod2", "txtVLOEveryNum", 0
        UpdateField "CDOverPrime", "txtVLOOverPrime", 0
  '      If Me.optCFOFluctuate.Value = True Then
  '          obCF = 1
  '      ElseIf Me.optCFOFixed.Value = True Then
  '          obCF = 2
  '      End If
        UpdateField "obCF", obCF, -1
        UpdateField "Ceiling", "txtCFOMax", 0
        UpdateField "Floor", "txtCFOMin", 0
        UpdateField "cbLateCharge", "chkOLOLateCharge", 1
        UpdateField "chkOLOEscrowAccount", "chkOLOEscrowAccount", 1
        UpdateField "LateChargeDays", "txtOLODaysLate", 0
        UpdateField "LateChargePercent", "txtOLOLateChargePct", 0
        UpdateField "cbRecapture", "chkOLORecapture", 1
        If Me.chkOLORecapture.Value = True Then
            Me.chkCACompensation.Value = True
        End If
        If Me.chkOLORecapture.Value = True Then
            UpdateField "cbRecapture", 1, -1
            If Me.optOLORecaptureOver.Value = True Then
                UpdateField "obRecapture", 1, -1
                UpdateField "RecaptureAmount", "txtOLORecaptureAmt", 0
            Else
                UpdateField "obRecapture", 0, -1
                UpdateField "RecapturePercent", "txtOLORecapturePct", 0
            End If
        Else
            UpdateField "cbRecapture", 0, -1
        End If
        UpdateField "cbRRProgram", "chkOLORateReduction", 1
        UpdateField "RRProgram", "cbxOLORateReduction", 0
        UpdateRT4 = 0
    '=====COLLATERAL CONDITIONS
    Case "pgCC1"    'Do nothing here
      '  UpdateField "chkCCGuaranteesOnly", "optCCGuaranteesOnly", 1

    '=====ADDITIONAL CONDITIONS
    Case "pgACI4"
        UpdateField "cbRP009", "chkBOCEvidenceNonCompete", 1
        UpdateField "cbRP002", "chkBOCAdditionalFunding", 1
    Case "pgACI5"
        CurIdx = Trim(RP__(2, 0))
        j = 1
        i = 2    'Insurance
        While RP__(i, j) <> ""
            UpdateField (RP__(i, j)) + "_" + CurIdx, "txt" & (RP__(i, j)), 0
            j = j + 1
        Wend
        CurIdx = Trim(RP__(4, 0))
        j = 1
        i = 4    'Competitor
        While RP__(i, j) <> ""
            UpdateField (RP__(i, j)) + "_" + CurIdx, "txt" & (RP__(i, j)), 0
            j = j + 1
        Wend
        CurIdx = Trim(RP__(3, 0))
        j = 1
        i = 3    'Additiional Funding
        While RP__(i, j) <> ""
            UpdateField (RP__(i, j)) + "_" + CurIdx, "txt" & (RP__(i, j)), 0
            j = j + 1
        Wend
        UpdateField "cbIC1", "chkAC1FloodInsurance", 1
        UpdateField "cbIC2", "chkAC1RealEstateInsurance", 1
        UpdateField "cbIC2Commercial", "chkAC1BusinessInsurance", 1
        UpdateField "cbIC3", "chkAC1PersonalInsurance", 1
        UpdateField "cbIC4", "chkAC1MarineInsurance", 1
        UpdateField "IC4Vessel", "txtAC1MarineVessels", 0
        UpdateField "cbRP001", "chkAC1LifeInsurance", 1
        UpdateField "cbIC6", "chkAC1LiabilityInsurance", 1
        UpdateField "cbIC7", "chkAC1ProductInsurance", 1
        UpdateField "cbIC8", "chkAC1ShopInsurance", 1
        UpdateField "cbIC9", "chkAC1MalpracticeInsurance", 1
        UpdateField "cbIC10", "chkAC1DisabilityInsurance", 1
        UpdateField "IC10Insured", "txtAC1DisabilityInsurance", 0
        UpdateField "cbIC11", "chkAC1WorkersInsurance", 1
        UpdateField "cbIC12", "chkAC1OtherInsurance", 1
        If Me.chkAC1OtherInsurance.Value = True Then
            If Me.optAC1Select.enabled = True And Me.optAC1Select.Value = True Then
                UpdateField "IC12", "cbxAC1OtherInsurance", 0
            ElseIf Me.optAC1WriteYourOwn.enabled = True And Me.optAC1WriteYourOwn.Value = True Then
                UpdateField "IC12", "txtAC1OtherInsurance", 0
            End If
            UpdateField "optIC12a", "optAC1Select", 1
            UpdateField "optIC12b", "optAC1WriteYourOwn", 1
        End If
        UpdateField "cbER", "chkERLoanAmount", 1
        UpdateField "obER", "optERMoreThan", 1
        UpdateField "cbERInvest", "chkERNonPLP", 1
        UpdateField "cbBD1", "chkBOCPurchaseAgreement", 1
        UpdateField "cbBD1NonCompete", "chkBOCNonCompete", 1
        UpdateField "cbBD3", "chkBOCBulkSales", 1
        UpdateField "cbBD6", "chkBOCStockPurchase", 1
        UpdateField "BD6Corp", "txtBOCStockPurchase", 0
        UpdateField "cbRP009", "chkBOCEvidenceNonCompete", 1
        UpdateField "cbRP002", "chkBOCAdditionalFunding", 1
        If Me.optOINone.Value = True Then
            UpdateField "obOI2", 0, -1
        ElseIf Me.optOIGeneralRule.Value = True Then
            UpdateField "obOI2", 1, -1
        ElseIf Me.optOILessThanTerm.Value = True Then
            UpdateField "obOI2", 2, -1
        ElseIf Me.optOILeasehold.Value = True Then
            UpdateField "obOI2", 3, -1
        ElseIf Me.optOIPresentLocation.Value = True Then
            UpdateField "obOI2", 4, -1
        End If
        UpdateField "OI2CYears", "txtOITermPlusYears", 0
        UpdateField "cbOI3A", "chkOIBooksRecords", 1
        UpdateField "cbOI3B", "chkOILoanDefault", 1
        UpdateField "cbOI3BMonths", "chkOIDefaultMonths", 1
        UpdateField "OI3BMonths", "txtOIDefaultMonths", 0
        UpdateField "cbOI3C", "chkOITerminate", 1
        UpdateField "cbOI3D", "chkOICureDefaults", 1
        UpdateField "cbFran", "chkIsAFranchise", 1
    Case "pgACII3"
        CurIdx = Trim(RP__(5, 0))
        j = 1
        i = 5    'Standby Agreement
        While RP__(i, j) <> ""
            UpdateField (RP__(i, j)) + "_" + CurIdx, "txtAC2" & (RP__(i, j)), 0
            j = j + 1
        Wend
        CurIdx = Trim(RP__(6, 0))
        j = 1
        i = 6    'Appraisal
        While RP__(i, j) <> ""
            UpdateField (RP__(i, j)) + "_" + CurIdx, "txtAC2" & (RP__(i, j)), 0
            j = j + 1
        Wend
        CurIdx = Trim(RP__(9, 0))
        j = 1
        i = 9    'NonCitizen
        ''Added 6/28/2010 Non-Citizens
        While RP__(i, j) <> ""
            If InStr(RP__(i, j), "opt") Then
                GoTo NextFldUpdate
'                UpdateField (RP__(i, j)) + "_" + CurIdx, "optAC50Pct", 1 '& (RP__(i, j)), 0
'                        dlgCtrlName = "optAC50Pct" '& dlgCtrlPre & Mid(RP__(i, j), Pos)
            Else
                UpdateField (RP__(i, j)) + "_" + CurIdx, "txt" & (RP__(i, j)), 0
            End If
NextFldUpdate:
            j = j + 1
        Wend
        UpdateField "cbIN1", "chkAC2Cash", 1
        UpdateField "IN1Amount", "txtAC2CashAmount", 0
        UpdateField "IN1Purpose", "txtAC2Cash", 0
        UpdateField "IN1Source", "txtAC2CashSource", 0
        UpdateField "cbIN2", "chkAC2Standby", 1
        UpdateField "IN2Amount", "txtAC2StandbyAmount", 0
        UpdateField "IN2Purpose", "txtAC2Standby", 0
        ' UpdateField "cbIN4", "chkAC2Equity", 1                          ' Removed July 3, 2018 RH
        'UpdateField "IN4Amount", "txtAC2EquityAmount", 0
        'UpdateField "IN4Purpose", "txtAC2Equity", 0
        UpdateField "cbIN3", "chkAC2Asset", 1
        UpdateField "IN3Amount", "txtAC2AssetAmount", 0
        UpdateField "IN3Purpose", "txtAC2Assets", 0
        ' UpdateField "cbIN5", "chkAC2Borrower", 1                        ' Removed July 3, 2018 RH
        'UpdateField "IN5Amount", "txtAC2BorrowerAmount", 0
        UpdateField "cbRP005", "chkAC2StandbyAgreement", 1
        UpdateField "cbRP006", "chkAC2Appraisal", 1
        UpdateField "chkIMNonCitizen", "chkIMNonCitizen", 1
'        UpdateField "optAC50Pct", "optAC50Pct", 1
'        UpdateField "txtNonCitizen", "txtNonCitizen", 0
    '      UpdateField "cbCAPiggyBack", "chkCAPiggyBack", 1
    '      UpdateField "PiggyBackLender", "txtCALenderName", 0
    ' 5/20/05
        UpdateField "cbPariPassu", "chkCAPiggyBack", 1
        UpdateField "PariPassuLender", "txtCALenderName", 0
        UpdateField "PariPassuAmount", "txtCAPPAmount", 0
    ' end 5/20/05
    '==========================
    ''6/28/2010 Business Valuation
        UpdateField "chkBVCheck", "chkAC2BVCheck", 1
        UpdateField "BVName", "txtAC2BVName", 0
        UpdateField "BVAmount", "txtAC2BVAmount", 0
        'Credit Card 6/28/2010
        UpdateField "chkCACreditCard", "chkAC2CreditCard", 1

    '-------------------
    'Combination Loan
        UpdateField "txtCACommLoanAmount", "txtCACommLoanAmount", 0
        UpdateField "txtCACommYears", "txtCACommYears", 0
        UpdateField "txtCACommMonths", "txtCACommMonths", 0
        UpdateField "txtCACommRate", "txtCACommRate", 0
        UpdateField "cbxCALienPosition", Me.cbxCALienPosition.ListIndex, -1
        If Me.txtCACommLoanAmount.Text <> "" And Me.txtCACommLoanAmount.Text <> "[CommercialAmt]" Then
            UpdateField "txtCACommFee", Format((Me.txtCACommLoanAmount.Text * 0.007), "#,##0.00"), -1
        End If
    '==========================
        UpdateField "cbCA1", "chkCACommercial", 1
    '      UpdateField "CALocation", "txtCALocation", 0
        UpdateField "CADays", "txtCAFurnishDays", 0
        UpdateField "CAStatement", "cbxCABooksRecords", 0
        UpdateField "cbCA2A", "chkCARenovation", 1
        UpdateField "cbCA2B", "chkCANew", 1
        UpdateField "cbCA3A", "chkCAFixedAsset", 1
        UpdateField "CAAsset", "txtCAFixedAmount", 0
        UpdateField "cbCA3B", "chkCALocationLimit", 1
        UpdateField "cbCA3C", "chkCACompensation", 1
        UpdateField "CARemuneration", "txtCACompensation", 0
   Case Else
    End Select
    ActiveWindow.Selection.WholeStory
    Selection.Fields.Update
    ActiveWindow.View.ShowFieldCodes = False
End Sub

Private Sub cmdFirst_Click()
'Move to first panel in this section ONLY
    Me.mpgWizard.Value = SectionStart
    PageSetup Me.mpgWizard.Value
    If Me.mpgWizard.Value = Me.mpgWizard.Pages("pgLI1").index Then
        Me.cmdLIWizTips.visible = True
    Else
        Me.cmdLIWizTips.visible = False
    End If
End Sub

Private Sub cmdHintError_Click()
    MsgBox "TEXTBOX:  If the information is not available for a textbox, type in a placeholder, such as:" & vbCrLf & vbCrLf & _
           "          'To be provided.'" & vbCrLf & vbCrLf & _
           "NUMERIC:  If value is used in a calculation, use an approximate number and replace with the actual number later.", _
           vbInformation + vbOKOnly, _
           "Error Hint"
    Me.cmdErrorMsg.SetFocus
End Sub

Private Sub cmdPTDefault_Click()
    Select Case Me.mpgPTOptions.Value  'Panel Index
    Case 0
        PTPage = "Principal and Interest"
    Case 1
        PTPage = "Interest plus Principal"
    Case 2
        PTPage = "Regular Interest and Seasonal Principal"
    Case 3
        PTPage = "Seasonal Principal and Interest - Payment"
    Case 4
        PTPage = "Seasonal Principal and Interest - Nonpayment"
    Case 5
        PTPage = "Seasonal Principal and Interest - Two Periods"
        MsgBox PTPage & vbCrLf & vbCrLf & _
               "None of the settings in this panel can be set to default." & vbCrLf & vbCrLf & _
               "Only the panel and Beginning period will be defaulted for use in future documents.", _
               vbInformation + vbOKOnly, _
               "Save as Default Settings"
    Case 6
        PTPage = "Mississippi Poultry"
        MsgBox PTPage & vbCrLf & vbCrLf & _
               "None of the settings in this panel can be set to default." & vbCrLf & vbCrLf & _
               "Only the panel and Beginning period will be defaulted for use in future documents.", _
               vbInformation + vbOKOnly, _
               "Save as Default Settings"
    Case Else
    End Select

    vbResult = MsgBox("Do you wish to save the current '" & PTPage & "' Term option      " & vbCr & vbCr & "as the default for future use?" & vbCrLf & vbCrLf & _
                      "These settings will appear in all future documents created with the " & WizInfo.WizName & ".", _
                      vbQuestion + vbOKCancel, _
                      "Save as Default Settings")
    If vbResult = vbOK Then
        Select Case Me.mpgPTOptions.Value  'Panel Index
        Case 0
            If Me.txtPTEveryNum1.enabled = True Then
                MyVar1 = "every " & Me.txtPTEveryNum1.Text & " months"
            Else
                MyVar1 = "every " & Me.cbxPTPeriod1.Value
            End If
            MyVar2 = Me.cbxPTDayCount1.Value
            MyVar3 = Me.txtPTEveryNum1.Text
            SaveAsDefault "PTFrequency", MyVar1
            SaveAsDefault "PTPayDay1", MyVar2
            SaveAsDefault "PIPayPeriodV2", MyVar3
            SaveAsDefault "IPPayPeriodV2", "0"
            SaveAsDefault "RISPPayPeriodV2", "0"
            SaveAsDefault "SPI2PayPeriodV2", "0"
        Case 1
            If Me.txtPTEveryNum2.enabled = True Then
                MyVar1 = "every " & Me.txtPTEveryNum2.Text & " months"
            Else
                MyVar1 = "every " & Me.cbxPTPeriod2.Value
            End If
            MyVar2 = Me.cbxPTDayCount2.Value
            MyVar3 = Me.txtPTEveryNum1.Text
            SaveAsDefault "PTFrequency", MyVar1
            SaveAsDefault "PTPayDay1", MyVar2
            SaveAsDefault "PIPayPeriodV2", "0"
            SaveAsDefault "IPPayPeriodV2", MyVar3
            SaveAsDefault "RISPPayPeriodV2", "0"
            SaveAsDefault "SPI2PayPeriodV2", "0"
        Case 2
            If Me.txtPTEveryNum3.enabled = True Then
                MyVar1 = "every " & Me.txtPTEveryNum3.Text & " months"
            Else
                MyVar1 = "every " & Me.cbxPTPeriod3.Value
            End If
            MyVar2 = Me.cbxPTDayCount3a.Value
            MyVar2b = Me.cbxPTDayCount3b.Value
            MyVar3 = Me.txtPTEveryNum3.Text
            SaveAsDefault "PTFrequency", MyVar1
            SaveAsDefault "PTPayDay1", Me.cbxPTDayCount3a.Value
            SaveAsDefault "PTPayDay2", Me.cbxPTDayCount3b.Value
            SaveAsDefault "PIPayPeriodV2", "0"
            SaveAsDefault "IPPayPeriodV2", "0"
            SaveAsDefault "RISPPayPeriodV2", MyVar3
            SaveAsDefault "SPI2PayPeriodV2", "0"
        Case 3
            SaveAsDefault "PTPayDay1", Me.cbxPTDayCount4.Value
        Case 4
            If Me.txtPTEveryNum5.enabled = True Then
                MyVar1 = "every " & Me.txtPTEveryNum5.Text & " months"
            Else
                MyVar1 = "every " & Me.cbxPTPeriod5.Value
            End If
            MyVar2 = Me.cbxPTDayCount5.Value
            MyVar3 = Me.txtPTEveryNum5.Text
            SaveAsDefault "PTFrequency", MyVar1
            SaveAsDefault "PTPayDay1", Me.cbxPTDayCount5.Value
            SaveAsDefault "PIPayPeriodV2", "0"
            SaveAsDefault "IPPayPeriodV2", "0"
            SaveAsDefault "RISPPayPeriodV2", "0"
            SaveAsDefault "SPI2PayPeriodV2", MyVar3
        Case Else
        End Select
        SaveAsDefault "obddPay", Me.mpgPTOptions.Value
        SaveAsDefault "PTBeginValue", Me.cbxPTBeginPeriodNum.Value
        SaveAsDefault "PTBeginPeriod", Me.cbxPTBeginPeriodType.Value

        MsgBox "Defaults have been saved for future use.", _
               vbInformation + vbOKOnly, _
               "Defaults Saved"
    End If
    Me.cmdPTDefault.SetFocus
End Sub

Private Sub cmdIODefault_Click()
    Dim IOArray(2, 1)
    IOArray(0, 0) = "optIOOne"
    IOArray(0, 1) = "One Payment"
    IOArray(1, 0) = "optIOMorethanOne"
    IOArray(1, 1) = "More than One"
    For X = 0 To 1
        If Me(IOArray(X, 0)).Value = True Then
            IORate = IOArray(X, 1)
            SaveValue = X
        End If
    Next
    vbResult = MsgBox("Do you wish to save the current '" & IORate & " Interest Only Rate Term' option      " & vbCr & vbCr & "as the default for future use?        " & vbCrLf & vbCrLf & _
                      "These settings will appear in all future documents created with the " & WizInfo.WizName & " Wizard.", _
                      vbQuestion + vbOKCancel, _
                      "Save as Default Settings")
    If vbResult = vbOK Then
        SaveAsDefault "obIO", IOArray(SaveValue, 0)
        If Me.cbxIODaysOne.ListIndex <> -1 And SaveValue = 0 Then
            SaveAsDefault "IOBeginValue", Me.cbxIODaysOne.Value
            SaveAsDefault "IOBeginPeriod", Me.cbxIOPeriodOne.Value
            SaveAsDefault "IOPayDay", Me.cbxIOMonthsOne.Value
        ElseIf Me.cbxIODaysMore.ListIndex <> -1 And SaveValue = 1 Then
            SaveAsDefault "IOBeginValue", Me.cbxIODaysMore.Value
            SaveAsDefault "IOBeginPeriod", Me.cbxIOMonthsMore.Value
            SaveAsDefault "IOFrequency", "every " & Me.cbxIOPeriodMore.Value
            SaveAsDefault "IOPayDay", Me.cbxIOMonthsDueMore.Value
        Else
            MsgBox "One or more options are not complete.    " & vbCrLf & vbCrLf & _
                   "Please correct and continue.", _
                   vbExclamation + vbOKOnly, _
                   "Save as Default Settings"
            Exit Sub
        End If
        MsgBox "Defaults have been saved for future use.", _
               vbInformation + vbOKOnly, _
               "Defaults Saved"
    End If
    Me.cmdIODefault.SetFocus
End Sub

Private Sub cmdIRDefault_Click()
    Dim IRArray(7, 1)
    IRArray(0, 0) = "optIRFixed"
    IRArray(0, 1) = "Fixed"
    IRArray(1, 0) = "optIRVariable"
    IRArray(1, 1) = "Variable"
    IRArray(2, 0) = "optIRFixedVariable"
    IRArray(2, 1) = "Fixed and Variable"
    IRArray(3, 0) = "optIRSBAFixed"
    IRArray(3, 1) = "SBA Fixed/Lender Variable"
    IRArray(4, 0) = "optIRLenderFixed"
    IRArray(4, 1) = "Lender Fixed/SBA Variable"
    IRArray(5, 0) = "optIRTwoFixed"
    IRArray(5, 1) = "Two Fixed"
    IRArray(6, 0) = "optIRSplit"
    IRArray(6, 1) = "Split Variable and Fixed"
    For X = 0 To 7
        If Me(IRArray(X, 0)).Value = True Then
            IRRate = IRArray(X, 1)
            SaveValue = X
        End If
    Next

    vbResult = MsgBox("Do you wish to save the current '" & IRRate & " Interest Rate Term' option      " & vbCr & vbCr & "as the default for future use?     " & vbCrLf & vbCrLf & _
                      "These settings will appear in all future documents created with the " & WizInfo.WizName & ".", _
                      vbQuestion + vbOKCancel, _
                      "Save as Default Settings")
    If vbResult = vbOK Then
        SaveAsDefault "obddRate", Trim(Str(SaveValue))
        MsgBox "Defaults have been saved for future use.", _
               vbInformation + vbOKOnly, _
               "Defaults Saved"
    End If
    Me.cmdIRDefault.SetFocus
End Sub

Private Sub cmdLDCalc_Click()
    Load frmCalc
    #If VBA6 Then
        frmCalc.Show 1
    #Else
        frmCalc.Show
    #End If
End Sub

Private Sub cmdMore_Click()
    MsgBox "Pre-Qual ......." & vbCrLf & vbCrLf & _
           "Click OK to continue.", _
           vbQuestion + vbOKOnly, _
           "Pre-Qual Information"
End Sub

Private Sub cmdNew007_Click()
    MsgBox "You are about to add another borrower to this Authorization." + Chr(13) + Chr(13) + "Please note that the address from the current borrower will be carried     " & vbCrLf & _
           "over to the new one by default, but can be changed if needed.", vbInformation + vbOkayOnly, _
           WizName & " - Cancel Clicked"
End Sub

Private Sub cmdNew008_Click()
    MsgBox "You are about to add another operating company to this Authorization." + Chr(13) + Chr(13) + "Please note that the address from the current borrower will be carried     " & vbCrLf & _
           "over to the new one by default, but can be changed if needed.", vbInformation + vbOkayOnly, _
           WizName & " - Cancel Clicked"
End Sub

Private Sub cmdLDInfo_Click()
    MyErrorMsg Me.mpgWizard.Value, "Info", True, curCtrl
End Sub

Private Sub cmdLIARRA_Click()
'        MsgBox "The date of this loan must be before October 1, 2010      " & vbCr & vbCr & _
'        "and the loan maturity must exceed 12 months.", _
'           vbInformation + vbOKOnly, _
'           "American Recovery and Reinvestment Act of 2009"
'    On Error Resume Next
'    Me.chkLI501.SetFocus

End Sub

Private Sub cmdback_Click()
    Me.mpgWizard.Value = Me.mpgWizard.Value - 1
    If Trim(ActiveDocument.Bookmarks("cbLIDFP").Range.Text) = 1 Then
        If Me.mpgWizard.Value = Me.mpgWizard.Pages("pgRT3").index Then
            Me.mpgWizard.Value = Me.mpgWizard.Value - 1
        End If
    End If
    If Me.mpgWizard.Value = SectionStart Then
        PageSetup SectionStart, 1
    Else
        PageSetup Me.mpgWizard.Value, 1
    End If
    If Me.mpgWizard.Value = Me.mpgWizard.Pages("pgLI1").index Then
        Me.cmdLIWizTips.visible = True
    Else
        Me.cmdLIWizTips.visible = False
    End If
End Sub

Private Sub cmdNext_Click()
    ErrorCaught = False
    CurTab = Me.mpgWizard.Pages(Me.mpgWizard.Value).Name
    Cancel = False
    NavButton = "Next"
    WizardState = Me.cmdWizardShortCut.visible
    cmdNavCancel_Click
    Select Case Me.mpgWizard.Value
    Case Me.mpgWizard.Pages("pgCC1").index
        If Me.mpgCCOptions.Value = 2 Then
            If Me.lstCCUSState.ListIndex <> -1 Then
                If Me.lstCCUSState.ListIndex <> 0 Then
                    Me.txtCCCountry.enabled = True
                    Me.txtCCCountry.BackColor = vbWhite
                    Me.txtCCCountry.Text = Me.lstCCUSState.List(Me.lstCCUSState.ListIndex, 2)
                    Me.lblCCCountry.Caption = "(State/Possession spelled out)"
                Else
                    Me.txtCCCountry.Text = ""
                    Me.lblCCCountry.Caption = "(Country)"
                End If
            End If
        End If
    Case Me.mpgWizard.Pages("pgCC4").index
        curCtrl = "txtCCLienAmount2"
        If Me(curCtrl).Text <> "" Then
            If IsNumeric(Me(curCtrl).Text) Then
                InputFormat Me(curCtrl).Name, "TextIsNumber", 2
            Else
                UpdateCC = 1
                MyErrorMsg Me.mpgWizard.Value, "Numeric", True, curCtrl
            End If
        End If
    Case Me.mpgWizard.Pages("pgCC7").index
        curCtrl = "txtCCSharedAmount"
        If Me(curCtrl).Text <> "" Then
            If IsNumeric(Me(curCtrl).Text) Then
                InputFormat Me(curCtrl).Name, "TextIsNumber", 2
            Else
                UpdateCC = 1
                MyErrorMsg Me.mpgWizard.Value, "Numeric", True, curCtrl
            End If
        End If
    Case Me.mpgWizard.Pages("pgRT1").index
    'CAP
        For Each Ctrl In Controls
            On Error Resume Next
            If InStr(1, Ctrl.Name, "txtIR") Then
                If Me(Ctrl.Name).Text <> "" Then
                    If IsNumeric(Me(Ctrl.Name).Text) Then
                        InputFormat Me(Ctrl.Name).Name, "TextIsNumber", 2
                    Else
                        If Me(Ctrl.Name).Name = "txtIRFixedVariablePeriod" And Me.optIRFixedVariable.Value = True Then
                            If Me(Ctrl.Name).Text = "" Then
                                UpdateRT1 = 1
                                MyErrorMsg Me.mpgWizard.Value, "Blank", True, Ctrl.Name
    '            CommandSetup 3
                                ErrorCaught = True
                                Exit Sub
                            End If
'                        ElseIf Me(Ctrl.Name).Name = "txtIRRTPublisher" Then 'And Me.optIRSplit.Value = True Then
'                            GoTo ContinueNext
'                        Else
'                            UpdateRT1 = 1
'                            MyErrorMsg Me.mpgWizard.Value, "Numeric", True, Ctrl.Name
'    '            CommandSetup 3
'                            ErrorCaught = True
'                            Exit Sub
                        End If
                    End If
                End If
            End If
        Next
        
        curCtrl = "txtIRRTPublisher"
        If Me(curCtrl).Text = "" And Me(curCtrl).enabled = True Then
            UpdateRT1 = 1
            MyErrorMsg Me.mpgWizard.Value, "Blank", True, curCtrl
            Exit Sub
        End If
        If Me(curCtrl).Text > "" And Me(curCtrl).enabled = True And Me.optIRRTPubWebsite.Value = False Then
            Me.optIRRTPubNewspaper.Value = True
        ElseIf Me(curCtrl).Text > "" And Me(curCtrl).enabled = True And Me.optIRRTPubNewspaper.Value = False Then
            Me.optIRRTPubWebsite.Value = True
        End If
        
ContinueNext:
        'lblIRVariableOverPrime
        If Me.lblIRVariableOverPrime.Text = "% Over Prime" And Me.lblIRVariableOverPrime.enabled = True Then
            PPeg = 0
            UpdateRT4 = 0
        ElseIf Me.lblIRFixedVariableOverPrime.Text = "% Over Prime" And Me.lblIRFixedVariableOverPrime.enabled = True Then
            PPeg = 0
            UpdateRT4 = 0
        ElseIf Me.lblIRLenderOverPrime.Text = "% Over Prime" And Me.lblIRLenderOverPrime.enabled = True Then
            PPeg = 0
            UpdateRT4 = 0
        ElseIf Me.lblIRSBAOverPrime.Text = "% Over Prime" And Me.lblIRSBAOverPrime.enabled = True Then
            PPeg = 0
            UpdateRT4 = 0
        End If
        If Me.lblIRVariableOverPrime.Text = "% Over Peg" And Me.lblIRVariableOverPrime.enabled = True Then
            PPeg = 1
            UpdateRT4 = 0
        ElseIf Me.lblIRFixedVariableOverPrime.Text = "% Over Peg" And Me.lblIRFixedVariableOverPrime.enabled = True Then
            PPeg = 1
            UpdateRT4 = 0
        ElseIf Me.lblIRLenderOverPrime.Text = "% Over Peg" And Me.lblIRLenderOverPrime.enabled = True Then
            PPeg = 1
            UpdateRT4 = 0
        ElseIf Me.lblIRSBAOverPrime.Text = "% Over Peg" And Me.lblIRSBAOverPrime.enabled = True Then
            PPeg = 1
            UpdateRT4 = 0
        End If
        If Me.lblIRVariableOverPrime.Text = "% Over LIBOR" And Me.lblIRVariableOverPrime.enabled = True Then
            PPeg = 2
            UpdateRT4 = 0
        ElseIf Me.lblIRFixedVariableOverPrime.Text = "% Over LIBOR" And Me.lblIRFixedVariableOverPrime.enabled = True Then
            PPeg = 2
            UpdateRT4 = 0
        ElseIf Me.lblIRLenderOverPrime.Text = "% Over LIBOR" And Me.lblIRLenderOverPrime.enabled = True Then
            PPeg = 2
            UpdateRT4 = 0
        ElseIf Me.lblIRSBAOverPrime.Text = "% Over LIBOR" And Me.lblIRSBAOverPrime.enabled = True Then
            PPeg = 2
            UpdateRT4 = 0
        End If
        
    Case Me.mpgWizard.Pages("pgRT2").index
        curCtrl = "txtRTESF"
        If Me(curCtrl).Text <> "" And Me(curCtrl).Text > 2 Then
                Cancel = True
                If MsgBox("The maximum Extraordinary Servicing Fee is 2.0%" & vbCrLf & vbCrLf & _
                          "Defaulting to 2.0%.", _
                          vbInformation + vbOKOnly, _
                          "Extraordinary Servicing Fee") = vbOK Then
                    Me(curCtrl).SetFocus
                    Me(curCtrl).Value = "2.0"
                    Exit Sub
                End If
        Else
            If Me(curCtrl).Text <> "" Then
                If IsNumeric(Me(curCtrl).Text) Then
                    InputFormat Me(curCtrl).Name, "TextIsNumber", 2
                Else
                    UpdateRT1 = 1
                    MyErrorMsg Me.mpgWizard.Value, "Numeric", True, curCtrl
        '          CommandSetup 3
                End If
            End If
        End If
    

    Case Me.mpgWizard.Pages("pgRT3").index
        Dim TBArray(8)
        For X = 0 To 4
            TBArray(X) = "txtPTAmount" & (X + 1)
        Next
        TBArray(5) = "txtPTAmount6a"
        TBArray(6) = "txtPTAmount6b"
        TBArray(7) = "txtPTAmount7a"
        TBArray(8) = "txtPTAmount7b"
        For Y = 0 To 8
            curCtrl = TBArray(Y)
            If Me(curCtrl).Text <> "" Then
                If IsNumeric(Me(curCtrl).Text) Then
                    InputFormat Me(curCtrl).Name, "TextIsNumber", 2
                Else
                    UpdateRT3 = 1
                    MyErrorMsg Me.mpgWizard.Value, "Numeric", True, curCtrl
    '          CommandSetup 3
                    ErrorCaught = True
                    Exit Sub
                End If
            End If
        Next Y

    Case Me.mpgWizard.Pages("pgLI1").index
        ctrlCheck "txtLIZip"
        If ErrorCaught Then
            Exit Sub
        End If
        ctrlCheck "txtSBAZip"
        If ErrorCaught Then
            Exit Sub
        End If
    Case Me.mpgWizard.Pages("pgLI2").index
        ctrlCheck "txtBIZip"
        If ErrorCaught Then
            Exit Sub
        End If
        ctrlCheck "txtOCZip"
        If ErrorCaught Then
            Exit Sub
        End If
    Case Me.mpgWizard.Pages("pgACI1").index
        curCtrl = "txtIC5Amount"
        If Me(curCtrl).Text <> "" Then
            If IsNumeric(Me(curCtrl).Text) Then
                InputFormat Me(curCtrl).Name, "TextIsNumber", 2
            Else
                UpdateACI1 = 1
                MyErrorMsg Me.mpgWizard.Value, "Numeric", True, curCtrl
    '          CommandSetup 3
            End If
        End If
    Case Me.mpgWizard.Pages("pgACI4").index
        If Me.cmdBOCNew.Caption = "Save" Then
            MsgBox "The Non-Compete entry has not been saved.", _
                   vbCritical + vbOKOnly, _
                   "Borrower and Operating Company"
    '      CommandSetup 3
            Me.fraBOCInfo2.SetFocus
            Me.cmdBOCNew.SetFocus
            Exit Sub
        End If
        If Me.cmdBOCNewAF.Caption = "Save" Then
            MsgBox "The Additional Funding entry has not been saved.", _
                   vbCritical + vbOKOnly, _
                   "Borrower and Operating Company"
    '      CommandSetup 3
            Me.fraBOCInfo3.SetFocus
            Me.cmdBOCNewAF.SetFocus
            Exit Sub
        End If
    Case Me.mpgWizard.Pages("pgACII1").index
        curCtrl = "txtAC2AssetAmount"
        If Me(curCtrl).Text <> "" Then
            If IsNumeric(Me(curCtrl).Text) Then
                InputFormat Me(curCtrl).Name, "TextIsNumber", 2
            Else
                UpdateACII1 = 1
                MyErrorMsg Me.mpgWizard.Value, "Numeric", True, curCtrl
    '          CommandSetup 3
            End If
        End If
    Case Me.mpgWizard.Pages("pgACII2").index
        ''Added 6/28/2010 Business Valuation
        curCtrl = "txtAC2BVAmount"
        If Me(curCtrl).Text <> "" Then
            If IsNumeric(Me(curCtrl).Text) Then
                InputFormat Me(curCtrl).Name, "TextIsNumber", 2
            Else
                UpdateACII2 = 1
                MyErrorMsg Me.mpgWizard.Value, "Numeric", True, curCtrl
    '          CommandSetup 3
            End If
        End If
        curCtrl = "txtAC2BVName"
        If Me(curCtrl).Text = "" And Me(curCtrl).enabled = True Then
            MyErrorMsg Me.mpgWizard.Value, "Blank", True, curCtrl
        End If
        '------------------
        curCtrl = "txtAC2SAAmount"
        If Me(curCtrl).Text <> "" Then
            If IsNumeric(Me(curCtrl).Text) Then
                InputFormat Me(curCtrl).Name, "TextIsNumber", 2
            Else
                UpdateACII2 = 1
                MyErrorMsg Me.mpgWizard.Value, "Numeric", True, curCtrl
    '          CommandSetup 3
            End If
        End If
        If Me.cmdAC2NewSA.Caption = "Save" Then
            MsgBox "The Standby Agreement entry has not been saved.", _
                   vbCritical + vbOKOnly, _
                   "Additional Conditions II"
            CommandSetup 3
            Me.fraAC2Standby.SetFocus
            Me.cmdAC2NewSA.SetFocus
            Exit Sub
        End If
        If Me.cmdAC2NewAppr.Caption = "Save" Then
            MsgBox "The Appraisal entry has not been saved.", _
                   vbCritical + vbOKOnly, _
                   "Additional Conditions II"
            CommandSetup 3
            Me.fraAC2Appraisal.SetFocus
            Me.cmdAC2NewAppr.SetFocus
            Exit Sub
        End If
    Case Else
    End Select

    If Me.mpgWizard.Value = 8 Then
        If CurTab <> "pgCC1" Then
            CurTab = "pgCC1"
        End If
    End If
    ChkInput CurTab, False
    If retCheckInput = False Then
        Select Case CCid
        Case 9, 11, 10, 14, 15
            Me.chkCCFirstLH.enabled = False
            Me.chkCCSecondLH.enabled = False
            Me.chkCCThirdLH.enabled = False
            Me.chkCCFourthLH.enabled = False
        Case Else
            Me.chkCCFirstLH.enabled = True
            Me.chkCCSecondLH.enabled = True
            Me.chkCCThirdLH.enabled = True
            Me.chkCCFourthLH.enabled = True
        End Select
        Select Case CCid
        Case 290    'Handled in cmdFinish_Click
        Case 291
            If CCFirstTime = True Then
                CCFirstTime = False
            End If
            cmdFinish_Click
            Exit Sub
        Case 292
            Select Case Me.mpgWizard.Value
            Case Me.mpgWizard.Pages("pgCC2").index
                cmdFinish_Click
            Case Else
                Me.mpgWizard.Value = 9
                PageSetup Me.mpgWizard.Value
            End Select
            Exit Sub
        Case 293
            Select Case Me.mpgWizard.Value
    '--> Limited Secured
            Case Me.mpgWizard.Pages("pgCC2").index
                tabCCPage = Me.mpgCCOptions.Value
                cmdFinish_Click
            Case Else
                tabCCPage = Me.mpgCCOptions.Value
                Me.mpgWizard.Value = 9
                PageSetup Me.mpgWizard.Value
            End Select
            Exit Sub
        Case 1, 4
            Select Case Me.mpgWizard.Value
    '--> Wiz pgCC4,  CCOpt pgXX, Wiz pgCC9, Wiz pgCC7, Done
            Case Me.mpgWizard.Pages("pgCC4").index
                Me.mpgWizard.Value = Me.mpgWizard.Pages("pgCC1").index
                Me.fraCCFrame1.Caption = Trim(Mid(Me.cbxCCB.Text, 7))
                Me.fraCCInfo.Caption = Trim(Mid(Me.cbxCCB.Text, 7)) & " Lienholder(s)"
                Me.fraCCFrame4.Caption = Trim(Mid(Me.cbxCCB.Text, 7))
                If Me.cbxCCLienPosition2.ListIndex < 1 Then
                    Me.mpgWizard.Value = Me.mpgWizard.Pages("pgCC9").index
                    SelectBP 0
                Else
                    Me.mpgCCOptions.Value = Me.mpgCCOptions.Pages("pg07CCLienholder").index
    ''Clear Lieholder text boxes
    '            ResetLienholders
    '  HideTop of Page 8
                    Me.cbxCCA.enabled = False
                    Me.cbxCCB.enabled = False
                    Me.cbxCCC.enabled = False
                    Me.cbxCCD.enabled = False
                    Me.cbxCCE.enabled = False
                    If Me.cbxCCLienPosition2.ListIndex >= 1 Then
    '  Hide Lienholders
                        For Each Ctrl In Controls
                            If InStr(1, Ctrl.Name, "CCFirst") > 0 Then
                                Me(Ctrl.Name).enabled = True
                            End If
                        Next
                        If Me.chkCCFirstLH.Value = False Then
                            Me.txtCCFirstLHRevAmt.enabled = False
                        End If
                        For Each Ctrl In Controls
                            If InStr(1, Ctrl.Name, "CCSecond") > 0 Then
                                Me(Ctrl.Name).enabled = False
                            End If
                        Next
                    End If
                    If Me.cbxCCLienPosition2.ListIndex >= 2 Then
    '  Hide Lienholders
                        For Each Ctrl In Controls
                            If InStr(1, Ctrl.Name, "CCFirst") > 0 Then
                                Me(Ctrl.Name).enabled = True
                            End If
                        Next
                        If Me.chkCCFirstLH.Value = False Then
                            Me.txtCCFirstLHRevAmt.enabled = False
                        End If
                        For Each Ctrl In Controls
                            If InStr(1, Ctrl.Name, "CCSecond") > 0 Then
                                Me(Ctrl.Name).enabled = True
                            End If
                        Next
                        If Me.chkCCSecondLH.Value = False Then
                            Me.txtCCSecondLHRevAmt.enabled = False
                        End If
                    End If
                    If Me.cbxCCLienPosition2.ListIndex >= 3 Then
    '  Hide Multiple Lienholders
                        For Each Ctrl In Controls
                            If InStr(1, Ctrl.Name, "CCThird") > 0 Then
                                Me(Ctrl.Name).enabled = True
                            End If
                        Next
                        If Me.chkCCThirdLH.Value = False Then
                            Me.txtCCThirdLHRevAmt.enabled = False
                        End If
                        For Each Ctrl In Controls
                            If InStr(1, Ctrl.Name, "CCFourth") > 0 Then
                                Me(Ctrl.Name).enabled = False
                            End If
                            If Me.chkCCFourthLH.Value = False Then
                                Me.txtCCFourthLHRevAmt.enabled = False
                            End If
                        Next
                    End If
                    If Me.cbxCCLienPosition2.ListIndex >= 4 Then
    '  Hide Multiple Lienholders
                        For Each Ctrl In Controls
                            If InStr(1, Ctrl.Name, "CCThird") > 0 Then
                                Me(Ctrl.Name).enabled = True
                            End If
                        Next
                        If Me.chkCCThirdLH.Value = False Then
                            Me.txtCCThirdLHRevAmt.enabled = False
                        End If
                        For Each Ctrl In Controls
                            If InStr(1, Ctrl.Name, "CCFourth") > 0 Then
                                Me(Ctrl.Name).enabled = True
                            End If
                        Next
                        If Me.chkCCFourthLH.Value = False Then
                            Me.txtCCFourthLHRevAmt.enabled = False
                        End If
                    End If
                    Me.txtCCFirstLHAmount.SetFocus
                End If
                Exit Sub
            Case Me.mpgWizard.Pages("pgCC1").index
                If Me.cbxCCLienPosition2.ListIndex >= 3 And OptLienHolder = 2 Then
                    Me.mpgCCOptions.Value = Me.mpgCCOptions.Pages("pg07CCLienholderA").index
    ''  Clear Lienholder, second panel
                    Me.txtCCThirdLH.Text = ""
                    Me.txtCCThirdLHAmount.Text = ""
                    Me.txtCCThirdLHRevAmt.Text = ""
                    Me.chkCCThirdLH.Value = False
                    Me.txtCCFourthLH.Text = ""
                    Me.txtCCFourthLHAmount.Text = ""
                    Me.txtCCFourthLHRevAmt.Text = ""
                    Me.chkCCFourthLH.Value = False

                    OptLienHolder = 1
                Else
                    Me.mpgWizard.Value = Me.mpgWizard.Pages("pgCC9").index
                    SelectBP 0
                End If
                Exit Sub
            Case Me.mpgWizard.Pages("pgCC9").index
                Me.mpgWizard.Value = Me.mpgWizard.Pages("pgCC7").index
                Me.cmdNext.enabled = False
                Me.cmdFinish.enabled = True
                Exit Sub
            Case Else
            End Select
        Case 2
            Select Case Me.mpgWizard.Value
    '--> Wiz pgCC6,  Wiz pgCC7, Done
            Case Me.mpgWizard.Pages("pgCC6").index
                Me.mpgWizard.Value = Me.mpgWizard.Pages("pgCC7").index
                Me.cmdNext.enabled = False
                Me.cmdFinish.enabled = True
                Me.cbxCC_C1EV.SetFocus
                Exit Sub
            Case Else
            End Select
        Case 3
        
        
            Select Case Me.mpgWizard.Value
    '--> Wiz pgCC6, Done
    'Nothing Done Here
            Case Else
            End Select
        Case 22, 23, 24
            Select Case Me.mpgWizard.Value
    '--> Wiz pgCC4, CCOpt pgXX, Wiz pgCC9, Wiz pgCC7, Done
            Case Me.mpgWizard.Pages("pgCC4").index
                Me.mpgWizard.Value = Me.mpgWizard.Pages("pgCC1").index
                Me.fraCCFrame1.Caption = Trim(Mid(Me.cbxCCB.Text, 7))
                Me.fraCCInfo.Caption = Trim(Mid(Me.cbxCCB.Text, 7)) & " Lienholder(s)"
                Me.fraCCFrame4.Caption = Trim(Mid(Me.cbxCCB.Text, 7))

                If Me.cbxCCLienPosition2.ListIndex < 1 And CCid <> 22 Then
                    Me.mpgWizard.Value = Me.mpgWizard.Pages("pgCC9").index
                    SelectBP 0
                Else
                    Me.mpgCCOptions.Value = Me.mpgCCOptions.Pages("pg07CCLienholder").index
    ''  Clear Lieholder text boxes
                    Me.txtCCFirstLH.Text = ""
                    Me.txtCCFirstLHAmount.Text = ""
                    Me.txtCCFirstLHRevAmt.Text = ""
                    Me.chkCCFirstLH.Value = False
                    Me.txtCCSecondLH.Text = ""
                    Me.txtCCSecondLHAmount.Text = ""
                    Me.txtCCSecondLHRevAmt.Text = ""
                    Me.chkCCSecondLH.Value = False

    '   HideTop of Page 8
                    Me.cbxCCA.enabled = False
                    Me.cbxCCB.enabled = False
                    Me.cbxCCC.enabled = False
                    Me.cbxCCD.enabled = False
                    Me.cbxCCE.enabled = False
                    If Me.cbxCCLienPosition2.ListIndex = 1 Then
    ' Hide Lienholders
                        For Each Ctrl In Controls
                            If InStr(1, Ctrl.Name, "CCSecond") > 0 Then
                                Me(Ctrl.Name).enabled = False
                            End If
                        Next
                    End If
                    If Me.cbxCCLienPosition2.ListIndex = 3 Then
    ' Hide Multiple Lienholders
                        For Each Ctrl In Controls
                            If InStr(1, Ctrl.Name, "CCFourth") > 0 Then
                                Me(Ctrl.Name).enabled = False
                            End If
                        Next
                    End If
                    Me.txtCCFirstLHAmount.SetFocus
                End If
                If CCid = 22 And Me.cbxCCLienPosition2.ListIndex <= 2 Then
                    Me.cmdNext.enabled = False
                    Me.cmdFinish.enabled = True
                End If
                Exit Sub
            Case Me.mpgWizard.Pages("pgCC1").index
                If Me.cbxCCLienPosition2.ListIndex > 2 And OptLienHolder = 2 Then
                    Me.mpgCCOptions.Value = Me.mpgCCOptions.Pages("pg07CCLienholderA").index
    '' Clear Lienholder, second panel
                    Me.txtCCThirdLH.Text = ""
                    Me.txtCCThirdLHAmount.Text = ""
                    Me.txtCCThirdLHRevAmt.Text = ""
                    Me.chkCCThirdLH.Value = False
                    Me.txtCCFourthLH.Text = ""
                    Me.txtCCFourthLHAmount.Text = ""
                    Me.txtCCFourthLHRevAmt.Text = ""
                    Me.chkCCFourthLH.Value = False

                    OptLienHolder = 1
                ElseIf CCid <> 22 Then
                    Me.mpgWizard.Value = Me.mpgWizard.Pages("pgCC9").index
                    SelectBP 0
                End If
                If CCid = 22 Then
                    Me.cmdNext.enabled = False
                    Me.cmdFinish.enabled = True
                End If
                Exit Sub
            Case Me.mpgWizard.Pages("pgCC9").index
                Me.mpgWizard.Value = Me.mpgWizard.Pages("pgCC7").index
                Me.cmdNext.enabled = False
                Me.cmdFinish.enabled = True
                Exit Sub
            Case Else
            End Select
    '//END 23-24
        Case 104
            Select Case Me.mpgWizard.Value  '--> Wiz pgCC4,  CCOpt pgXX, Wiz pgCC9, Wiz pgCC7, Done
            Case Me.mpgWizard.Pages("pgCC4").index
                Me.mpgWizard.Value = Me.mpgWizard.Pages("pgCC1").index
                Me.fraCCFrame1.Caption = Trim(Mid(Me.cbxCCB.Text, 7))
                Me.fraCCInfo.Caption = Trim(Mid(Me.cbxCCB.Text, 7)) & " Lienholder(s)"
                If Me.cbxCCLienPosition2.ListIndex = 0 Then
                    Me.mpgWizard.Value = Me.mpgWizard.Pages("pgCC9").index
                Else
                    Me.mpgCCOptions.Value = Me.mpgCCOptions.Pages("pg07CCLienholder").index
    '  HideTop of Page 8
                    Me.cbxCCA.enabled = False
                    Me.cbxCCB.enabled = False
                    Me.cbxCCC.enabled = False
                    Me.cbxCCD.enabled = False
                    Me.cbxCCE.enabled = False
                    If Me.cbxCCLienPosition2.ListIndex = 0 Then
    '  Hide Lienholders
                        For Each Ctrl In Controls
                            If InStr(1, Ctrl.Name, "CCSecond") > 0 Then
                                Me(Ctrl.Name).enabled = False
                            End If
                        Next
                    End If
                    Me.txtCCFirstLH.SetFocus
                    Exit Sub
                    If Me.cbxCCLienPosition2.ListIndex = 1 Then
    '  Hide Lienholders
                        For Each Ctrl In Controls
                            If InStr(1, Ctrl.Name, "CCSecond") > 0 Then
                                Me(Ctrl.Name).enabled = False
                            End If
                        Next
                    End If
                    If Me.cbxCCLienPosition2.ListIndex = 3 Then
    '  Hide Multiple Lienholders
                        For Each Ctrl In Controls
                            If InStr(1, Ctrl.Name, "CCFourth") > 0 Then
                                Me(Ctrl.Name).enabled = False
                            End If
                        Next
                    End If
                    Me.txtCCFirstLHAmount.SetFocus
                End If
                Exit Sub
            Case Me.mpgWizard.Pages("pgCC1").index
                If Me.cbxCCLienPosition2.ListIndex > 3 And OptLienHolder = 2 Then
                    Me.mpgCCOptions.Value = Me.mpgCCOptions.Pages("pg07CCLienholderA").index
                    OptLienHolder = 1
                Else
                    Me.mpgWizard.Value = Me.mpgWizard.Pages("pgCC9").index
                End If
                Exit Sub
            Case Me.mpgWizard.Pages("pgCC9").index
                Me.mpgWizard.Value = Me.mpgWizard.Pages("pgCC7").index
                Me.cmdNext.enabled = False
                Me.cmdFinish.enabled = True
                Exit Sub
            Case Else
            End Select
        Case 5
            Select Case Me.mpgWizard.Value
    '--> Wiz pgCC3, Done
    'Nothing Done Here
            Case Else
            End Select
        Case 7
            Select Case Me.mpgWizard.Value
    '--> Personal Property
            Case Me.mpgWizard.Pages("pgCC8").index
                X = 0
                For i = 1 To 10
                    X = X + Me("chkC7PP" & Trim((i))).Value
                Next
                If X = 0 Then
                    MsgBox "Please select at least one personal property option.     ", _
                           vbCritical + vbOKOnly, _
                           "No Personal Property Option Selected"
                    Me.chkC7PP1.SetFocus
                    CommandSetup "EnableNext"
                    Exit Sub
                    CommandSetup "EnableNext"
                End If
                Me.mpgWizard.Value = Me.mpgWizard.Pages("pgCC8a").index
                CommandSetup "EnableNext"
                Exit Sub
            Case Me.mpgWizard.Pages("pgCC8a").index
                Me.mpgWizard.Value = Me.mpgWizard.Pages("pgCC8b").index
                CommandSetup "EnableFinish"
                Exit Sub
            Case Else
            End Select
        Case 9, 10, 11, 14, 15
            Dim ListName As String
            Dim PagesName As String
            Select Case CCid
            Case 9  'Vehicle
                PagesName = "pg09CCVehicle"
                ListName = "cbxCCVehicleLien"
            Case 10  ' Mobile Home
                PagesName = "pg09CCVehicle"
                ListName = "cbxCCMobileHomeLien"
            Case 11  'Liquor License
                PagesName = "pg06CCLiquor"
                ListName = "cbxCCLienLicense"
            Case 14  'Aircraft
                PagesName = "pg14CCAircraftVessel"
                ListName = "cbxCCAircraftLien"
            Case 15  'Vessel
                PagesName = "pg14CCAircraftVessel"
                ListName = "cbxCCVesselLien"
            Case Else
            End Select
            Select Case Me.mpgCCOptions.Value
    '--> CCOpt Liquor, Lien, Done
            Case Me.mpgCCOptions.Pages(PagesName).index
                Me.mpgCCOptions.Value = Me.mpgCCOptions.Pages("pg07CCLienholder").index
                Me.fraCCInfo.Caption = Trim(Mid(Me.cbxCCC.Text, 7)) & " Lienholder(s)"
                Me.cbxCCA.enabled = False
                Me.cbxCCB.enabled = False
                Me.cbxCCC.enabled = False
                Me.cbxCCD.enabled = False
                Me.cbxCCE.enabled = False
                If Me(ListName).ListIndex = 0 Then
                    CommandSetup "EnableFinish"
                End If
                If Me(ListName).ListIndex = 1 Then
    '  Hide Lienholders
                    For Each Ctrl In Controls
                        If InStr(1, Ctrl.Name, "CCSecond") > 0 Then
                            Me(Ctrl.Name).enabled = False
                        End If
                    Next
                    CommandSetup "EnableFinish"
                ElseIf Me(ListName).ListIndex = 2 Then
                    CommandSetup "EnableFinish"
                Else
                    CommandSetup "EnableNext"
                End If
                Me.txtCCFirstLHAmount.SetFocus
                Exit Sub
            Case Me.mpgCCOptions.Pages("pg07CCLienholder").index
                Me.mpgCCOptions.Value = Me.mpgCCOptions.Pages("pg07CCLienholderA").index
                If Me(ListName).ListIndex = 3 Then
    '  Hide Multiple Lienholders
                    For Each Ctrl In Controls
                        If InStr(1, Ctrl.Name, "CCFourth") > 0 Then
                            Me(Ctrl.Name).enabled = False
                        End If
                    Next
                End If
                CommandSetup "EnableFinish"
                Exit Sub
            Case Else
            End Select
        Case 18  'Note
            Select Case Me.mpgWizard.Value
    '--> CCOpt Note, Restart, Done
            Case Me.mpgWizard.Pages("pgCC1").index
                If Me.chkCCNoteSecured.Value = True Then
                    UpdateCCOptions
                Else
                    UpdateDocCCFields CCid
                End If
                Me.mpgWizard.Value = Me.mpgWizard.Pages("pgCC1").index
                Me.fraCCInfo.Caption = Trim(Me.cbxCCD.Text) & " -- Select Note Collateral"
                Me.mpgCCOptions.Value = Me.mpgCCOptions.Pages("pg00CCBlank").index
                Me.lblCCNoteSecured.visible = True
    '  HideTop of Page 8
                Me.cbxCCA.enabled = False
                Me.cbxCCB.enabled = True
                Me.cbxCCC.enabled = True
                Me.cbxCCD.enabled = True
                Me.cbxCCD.ListIndex = 0
                Me.cbxCCE.enabled = True
                Me.cmdNext.enabled = False
                Me.cmdFinish.enabled = False
                Exit Sub
            Case Else
            End Select
    '    Case 22
    '      Select Case Me.mpgWizard.Value
    '      '--> Wiz pgCC4, Done
    '          'Nothing Done Here
    '        Case Else
    '      End Select
        Case Else
        End Select
NextPage:
        If SectionEnd <= Me.mpgWizard.Value Then
            SetDialog StartID
        End If
        If Me.mpgWizard.Value = 8 And Me.cbxCCA.ListIndex = 3 Then
            Me.mpgWizard.Value = 8
        ElseIf Me.mpgWizard.Value = 8 And Me.cbxCCA.ListIndex = 4 Then
            Me.mpgWizard.Value = 8
        End If
        If Me.mpgWizard.Value <= SectionEnd Then
            Me.mpgWizard.Value = Me.mpgWizard.Value + 1
        End If
        If Trim(ActiveDocument.Bookmarks("cbLIDFP").Range.Text) = 1 Then
            If Me.mpgWizard.Value = Me.mpgWizard.Pages("pgRT3").index Then
                Me.mpgWizard.Value = Me.mpgWizard.Value + 1
            End If
        End If

        If Me.mpgWizard.Value = SectionEnd And Me.mpgWizard.Value <> Me.mpgWizard("pgPleaseWait").index - 1 Then
            PageSetup 98
        ElseIf Me.mpgWizard.Value = SectionEnd + 1 Then
            PageSetup (SectionEnd + 1)
        ElseIf Me.mpgWizard.Value <> Me.mpgWizard.Pages("pgErrorMsg").index Then
            PageSetup Me.mpgWizard.Value
        End If
    End If
End Sub

Private Sub ctrlCheck(curCtrl)
    If Me(curCtrl).enabled = True Then
        If InStr(1, Me(curCtrl).Text, "-") > 0 Then
            ctrltext = Mid(Me(curCtrl).Text, 1, InStr(1, Me(curCtrl).Text, "-") - 1) & Mid(Me(curCtrl).Text, InStr(1, Me(curCtrl).Text, "-") + 1)
        Else
            ctrltext = Me(curCtrl).Text
        End If
        If Len(ctrltext) <> 5 And Len(ctrltext) <> 9 Then
            If InStr(1, Me(curCtrl).Text, "-") > 0 Then
                cLen = Len(ctrltext) - 1 & " (without '-')"
            Else
                cLen = Len(ctrltext)
            End If
            UpdateLI1 = 1
            MyErrorMsg Me.mpgWizard.Value, "Length", True, curCtrl, , cLen
    '        CommandSetup 3
            ErrorCaught = True
            Exit Sub
        End If
        If Not IsNumeric(ctrltext) Then
            UpdateLI1 = 1
            MyErrorMsg Me.mpgWizard.Value, "Numeric", True, curCtrl, , cLen
    '        CommandSetup 3
            ErrorCaught = True
            Exit Sub
        End If
        If IsNumeric(ctrltext) And Len(ctrltext) = 9 Then
            Me(curCtrl).Text = Format(ctrltext, "00000\-####")
        ElseIf IsNumeric(ctrltext) And Len(ctrltext) = 5 Then
            Me(curCtrl).Text = Format(ctrltext, "00000")
        End If
    End If
End Sub
Private Sub cmdOCDelete_Click()
    If Val(ActiveDocument.Bookmarks("RPLast008").Range.Text) = 1 Then
        Me.cmdOCDelete.enabled = False
    Else
        DeleteRP "008", "OC", "Operating Company"
        If Val(ActiveDocument.Bookmarks("RPLast008").Range.Text) = 1 Then
            Me.cmdOCDelete.enabled = False
        End If
    End If
    If Me.cmdOCNew.Caption = "Save" Then
        Me.cmdOCNew.Caption = "New"
    End If
End Sub

Private Sub cmdOCInfo_Click()
    MsgBox "SBA permits only one EPC borrower, but allows multiple operating" & vbCrLf & _
           "companies as Co-Borrowers or Guarantors." & vbCrLf & vbCrLf & _
           "If the real estate is held by separate individuals, click 'New' for each     " & vbCrLf & _
           "additional individual.  They will be considered as one EPC.", _
           vbInformation + vbOKOnly, _
           "Eligible Passive Company"
    On Error Resume Next
    Me.txtOCName.SetFocus
End Sub

Private Sub cmdOCLeft_Click()
    ChangeRP "008", -1, 1, "OC"
End Sub

Private Sub cmdOCNew_Click()
    If Me.cmdOCNew.Caption = "New" Then
        MsgBox "You are about to add an additional Operating Company to this Authorization." & vbCrLf & vbCrLf & _
               "Please note that the address from the current operating company will be carried     " & vbCrLf & _
               "over to the new one by default, but it can be changed if needed.", _
               vbExclamation + vbOKOnly, _
               "Additional Operating Company"
    End If
    NewRP "008", 1, "OC"
    If Me.cmdOCNew.Caption = "Save" Then
        Me.cmdNext.enabled = False
    Else
        Me.cmdNext.enabled = True
    End If
End Sub

Private Sub cmdOCRight_Click()
    ChangeRP "008", 1, 1, "OC"
End Sub

Private Sub cmdPanelHelp_Click()
    Dim curpage As String
    curpage = Me.mpgWizard.Pages(Me.mpgWizard.Value).Name
    Select Case curpage
    Case "pgLI1", "pgLI2", "pgLI3"
        WizHelp.Start 20001
    Case "pgUP"
        WizHelp.Start 20085
    Case "pgCC1"
        WizHelp.Start 20063
    Case "pgACI4", "pgACII2"
        WizHelp.Start 20044
    Case Else
        WizHelp.Start 20001
    End Select
End Sub

Private Sub cmdSBAEdit_Click()
    EditSBA = True
    If Me.cbxSBAName.ListIndex >= 0 Then
        Dim Ctrl As control
        For Each Ctrl In Controls
            If InStr(1, Ctrl.Name, "SBA") Then
                If InStr(1, Ctrl.Name, "txtSBA") Or InStr(1, Ctrl.Name, "cbxSBA") Then
                    Me(Ctrl.Name).BackColor = vbWhite
                    Me(Ctrl.Name).Locked = False
                    Me(Ctrl.Name).TabStop = True
                End If
            End If
        Next  'Enable/Disable SBA Information dialog
        Me.txtSBAName.Locked = True
        Me.txtSBAName.BackColor = myGray
        Me.cbxSBAState.Locked = True
        Me.cbxSBAState.BackColor = myGray
        Me.cmdResetSBA.visible = False
        Me.cmdSBAEdit.visible = False
    '  SBAEdited = True
        If Me.txtSBAAddress.enabled = True Then
            Me.txtSBAAddress.SetFocus
        Else
            Me.txtSBAAddress.enabled = True
            Me.txtSBAAddress.SetFocus
        End If
    Else
        Me.txtSBAName.Text = Me.cbxSBAName.Text
        Me.cbxSBAName.Clear
        Me.txtSBAName.visible = True
        Me.txtSBAName.Locked = True
    '''''  Me.cbxSBAName.Visible = False
    '''''  Me.cbxSBAName.Enabled = False
    '''''  Me.cbxSBAName.Locked = True
        For Each Ctrl In Controls
            If InStr(1, Ctrl.Name, "SBA") Then
                If InStr(1, Ctrl.Name, "txtSBA") Or InStr(1, Ctrl.Name, "cbxSBA") Then
                    Me(Ctrl.Name).BackColor = vbWhite
                    Me(Ctrl.Name).Locked = False
                    Me(Ctrl.Name).TabStop = True
                End If
            End If
        Next  'Enable/Disable SBA Information dialog
        Me.cmdResetSBA.visible = True
        Me.cmdSBAEdit.visible = False
        Me.txtSBAName.Locked = True
        Me.txtSBAName.BackColor = myGray
        On Error Resume Next
        Me.txtSBAAddress.SetFocus
    End If
End Sub

Private Sub cmdUPNew_Click()
    UpPass = 0
    If Me.cmdUPNew.Caption = "New" Then
        Me.cmdUPEdit.enabled = True
        Me.cmdUPShowList.enabled = True
        If Me.txtUPRemainingAmount.Text = "0.00" Or Me.txtUPRemainingAmount.Text <= 0 Then
            MsgBox "Total Use of Proceeds equals OR exceeds Loan Amount." & _
                   vbCr & vbCr & "No new Use of Proceeds selections allowed!     " & _
                   vbCr & vbCr & "Delete or edit existing selections.", vbCritical + vbOkay, "Additional Use of Proceeds"
        Else
            retVal = MsgBox("Add new Use of Proceeds item?    ", _
                            vbQuestion + vbYesNo, _
                            "Additional Use of Proceeds")
            If retVal = vbYes Then
                ResetUP 0, 21
                Me.cbxUPCategory.Locked = False
                Me.cbxUPCategory.BackColor = vbWhite
                Me.txtUPField1.Locked = False
                Me.txtUPField1.BackColor = vbWhite
                Me.txtUPField1.visible = False
                Me.lblUPData1.visible = False
                Me.txtUPField2.Locked = False
                Me.txtUPField2.BackColor = vbWhite
                Me.txtUPField2.visible = False
                Me.lblUPData2.visible = False
                Me.txtUPText.visible = False
                Me.txtUPAmount.Locked = False
                Me.txtUPAmount.BackColor = vbWhite
                BackupUP2
                NewUP
            End If
        End If
    Else
        If Me.cbxUPCategory.ListIndex = 21 Then
            MsgBox "Invalid selection.  Your selection must match an entry in the list.     ", _
                   vbInformation + vbOKOnly, _
                   "Invalid Selection"
            On Error Resume Next
            Me.cbxUPCategory.ListIndex = 21
            Me.cbxUPCategory.SetFocus
            Exit Sub
        End If
        Me.cmdUPShowList.enabled = False
        If Me.cmdUPNew.Caption = "Save" Then
            Me.cmdUPEdit.enabled = True
            If Me.txtUPAmount.Text <> "" And UPEdit = False Then
                If Int(Me.txtUPAmount.Text) > Int(Me.txtUPRemainingAmount.Text) Then
                    retVal = MsgBox("The amount entered exceeds the remaining amount.     " & vbCrLf & vbCrLf & _
                                    "Please reenter the amount for the " & Trim(Mid(Me.cbxUPCategory.Text, 4)) & ".     ", _
                                    vbCritical + vbOKOnly, _
                                    "Wizard message ...")
                    If retVal = 1 Then
                        Cancel = True
                        Me.txtUPAmount.Text = ""
                        Me.txtUPAmount.SetFocus
                        Exit Sub
                    End If
                End If
            Else
                UpdateText "UPAmount_" & CurIdx, Me.txtUPAmount.Text
                UpdateText "UPField1_" & CurIdx, Me.txtUPField1.Text
                UpdateText "UPField2_" & CurIdx, Me.txtUPField2.Text
                UpdateText "UPText_" & CurIdx, Me.txtUPText.Text
                UpdateText "UPAmount2_" & CurIdx, Me.txtUPAmount2.Text
                UpdateText "UPField3_" & CurIdx, Me.txtUPField3.Text
            End If
            SaveState = "Save"
            retCheckInput = False
            ChkInput "pgUP", True
            If retCheckInput = False Then
                UpdateCurUP
                UpdateUPTot
                UPEdit = False
                txtUPRemainingAmount_Change
                If Me.cbxUPCategory.ListIndex = 21 Then
                    Me.cmdUPDelete.enabled = False
                End If
                Me.cbxUPCategory.Locked = True
                Me.cbxUPCategory.BackColor = myDisabled
                Me.txtUPText.Locked = True
                Me.txtUPText.BackColor = myDisabled
                Me.txtUPAmount.Locked = True
                Me.txtUPAmount.BackColor = myDisabled
                Me.txtUPField1.Locked = True
                Me.txtUPField1.BackColor = myDisabled
                Me.txtUPField2.Locked = True
                Me.txtUPField2.BackColor = myDisabled
                Me.txtUPAmount2.Locked = True
                Me.txtUPAmount2.BackColor = myDisabled
                Me.txtUPField3.Locked = True
                Me.txtUPField3.BackColor = myDisabled
                UpdateChangeRP 7, 10, "UP", "RPFirst010", "RPLast010"
                Me.cmdUPNew.Caption = "New"
                Me.cmdUPNew.Accelerator = "N"
                Me.cmdUPShowList.enabled = True
                DeleteBackupUP2
            End If
        End If
    End If
End Sub
Private Sub NewUP()
    Application.ScreenUpdating = False
    Dim NewIdx As Integer
    Dim i As Integer
    Dim Field_ As String
    Dim dlgCtrlName As String
    Dim dlgCtrlPre As String
    Dim dlgCtrl As String
    Dim NewField As String
    Dim xx As Long
    Dim CurField As String
    System.Cursor = wdCursorWait
    NewIdx = LastIdx + 1
    i = 1
    RPid_ = 7
    dlgCtrlPre = "UP"
    If Me("cmd" & dlgCtrlPre & "New").Caption = "New" Then
        While RP__(RPid_, i) <> ""
            Field_ = RP__(RPid_, i)
            dlgCtrlName = "txt" & Field_
            NewField = Field_ + "_" + Trim(Str(NewIdx))
            ActiveDocument.Bookmarks("AddRP010").Select
            Selection.MoveLeft wdCharacter, 1
            Selection.InsertAfter " "
            Selection.MoveRight wdCharacter, 1
            xx = Selection.Start
            Selection.InsertAfter "[" + NewField + "]"
            Selection.SetRange xx, Selection.End
            ActiveDocument.Bookmarks.Add NewField
            UpdateCtrl NewField, dlgCtrlName
            UpdateField Field_, dlgCtrlName, 0
            i = i + 1
        Wend
        LastIdx = NewIdx
        CurIdx = NewIdx
        UpdateField "RPCur010", Trim(Str(CurIdx)), -1
        UpdateField "RPLast010", Trim(Str(CurIdx)), -1
        Me.cbxUPCategory.enabled = True
        Me.cbxUPCategory.SetFocus
        UpdateChangeRP 7, 10, "UP", "RPFirst010", "RPLast010"
        System.Cursor = wdCursorNormal

        Me.cmdUPNew.Caption = "Save"
        Me.cmdUPNew.Accelerator = "S"
        If LastIdx > 1 Then
            Me.cmdUPShowList.enabled = True
        End If
    Else
        UpdateCurUP
        Me.cmdUPNew.Caption = "New"
        Me.cmdUPNew.Accelerator = "N"
        Me.cmdUPShowList.enabled = True
        Me.cmdFinish.enabled = True
        Me.cmdWizardShortCut.visible = False
        Me.cbxUPCategory.Locked = True
        Me.cbxUPCategory.BackColor = myDisabled
        Me.txtUPText.Locked = True
        Me.txtUPText.BackColor = myDisabled
        Me.txtUPField1.Locked = True
        Me.txtUPField1.BackColor = myDisabled
        Me.txtUPField2.Locked = True
        Me.txtUPField2.BackColor = myDisabled
        Me.txtUPAmount.Locked = True
        Me.txtUPAmount.BackColor = myDisabled
        Me.txtUPAmount2.Locked = True
        Me.txtUPAmount2.BackColor = myDisabled
        Me.txtUPField3.Locked = True
        Me.txtUPField3.BackColor = myDisabled
    End If
End Sub
Private Sub PreSelectAC()
    ReDim UPType__(0)
    ReDim UPAmount__(0)
    Dim i
    Dim BookType
    Dim BookAmount
    Dim j
    Dim Amount As Variant
    ReDim UPType__(25)
    ReDim UPAmount_(25) As Variant
Dim CatSelected As String
For i = FirstIdx To LastIdx
    If ActiveDocument.Bookmarks.Exists("obUPID_" & i) Then
        CatSelected = CatSelected & "|" & IIf(InStr(1, ActiveDocument.Bookmarks("obUPID_" & i).Range.Text, "[") = 0, Trim(ActiveDocument.Bookmarks("obUPID_" & i).Range.Text), "")
    End If
Next i
If InStr(1, CatSelected, "|22") > 0 Or InStr(1, CatSelected, "|23") > 0 Then
    Else
    For i = 1 To LastIdx
        BookType = "obUPID_" + Trim(Str(i))
        BookAmount = "UPAmount_" + Trim(Str(i))
        If ActiveDocument.Bookmarks.Exists(BookType) Then
            j = Val(ActiveDocument.Bookmarks(BookType).Range.Text)
            If j = 7 Then
                CPFinance = "UPField1_" & (i)
                CPFinance = ActiveDocument.Bookmarks(CPFinance).Range.Text
                UpdateText "CPFinancing", CPFinance
            End If
            Amount = ActiveDocument.Bookmarks(BookAmount).Range.Text
            UPType__(j) = UPType__(j) + 1
            UPAmount_(j) = CCur(UPAmount_(j)) + CCur(Amount)
        End If
    Next i
    If Val(LoanAmount) > 25000 Then
        UpdateField "obER", "1", -1
    Else
        UpdateField "obER", "0", -1
    End If
    If UPType__(4) + UPType__(5) + UPType__(6) + UPType__(7) + UPType__(9) > 0 Then
        UpdateField "cbCP", "1", -1
        If UPAmount_(4) + UPAmount_(5) + UPAmount_(6) + UPAmount_(9) <= 350000 Then
            UpdateField "cbCP", "1", -1
            UpdateField "obCP", "0", -1
        ElseIf UPAmount_(4) + UPAmount_(5) + UPAmount_(6) + UPAmount_(9) > 350000 Then
            UpdateField "cbCP", "1", -1
            UpdateField "obCP", "1", -1
        End If
        If UPType__(7) > 0 Then
            UpdateField "cbCP", "1", -1
            UpdateField "obCP", "2", -1
        End If
    Else
        UpdateField "CPFinance", "", -1
        UpdateField "cbCP", "0", -1
    End If
End If
End Sub

Private Sub cmdWizardAC1_Click()
    StartID = 4
    SetDialog 4
    PageSetup SectionStart
    Me.mpgWizard.Value = SectionStart
    cmdWizardShortCut_Click
    Me.chkAC1FloodInsurance.SetFocus
    CCRunning = False
    BackupRP
    CommandSetup 3
End Sub

Private Sub cmdWizardSave_Click()
    If MsgBox("Save document?     ", _
              vbQuestion + vbOKCancel, _
              "Save document?") = vbOK Then
        FileSave.Main
        MsgBox ActiveDocument.Name & " saved.     ", _
               vbInformation + vbOKOnly, _
               "Document saved."
        Application.ScreenRefresh
    Else
    End If
    cmdWizardShortCut_Click
End Sub

Private Sub cmdWizardAC2_Click()
    StartID = 5
    SetDialog 5
    PageSetup SectionStart
    Me.mpgWizard.Value = SectionStart
    Me.chkAC2Cash.SetFocus
    cmdWizardShortCut_Click
    CCRunning = False
    BackupRP
    CommandSetup 3
End Sub

Private Sub cmdWizardCollateral_Click()
    StartID = 3
    SetDialog 3
    PageSetup SectionStart
    Me.mpgWizard.Value = SectionStart
    Me.mpgCCOptions.Value = 0
    On Error Resume Next
    Me.txtCCSelectMsg.SetFocus
'    Me.optCCGuaranteesOnly.SetFocus
    cmdWizardShortCut_Click
    CCRunning = True
    BackupRP
End Sub

Private Sub cmdWizardLoanInfo_Click()
    StartID = 0
    SetDialog 0
    UpdateLI1 = 0
    PageSetup SectionStart
    Me.mpgWizard.Value = SectionStart
    On Error Resume Next
    Me.txtLIName.SetFocus
'    If Me.chkLI501.Value = False Then
'        Me.chkLI501.SetFocus
'    End If
'    Me.chkLIOpts.SetFocus
    cmdWizardShortCut_Click
    CCRunning = False
    BackupRP
    CommandSetup 3
End Sub
Private Sub cmdWizardRepayment_Click()
    StartID = 1
    SetDialog 1
    PageSetup SectionStart
    Me.mpgWizard.Value = SectionStart
    On Error Resume Next
    Me.txtIRFixed.SetFocus
    cmdWizardShortCut_Click
    CCRunning = False
    BackupRP
'    If Me.chkLIDFP.Value = True Then
'        CommandSetup 4
'    Else
        CommandSetup 3
'    End If
End Sub

Private Sub cmdWizardUseProceeds_Click()
    StartID = 2
    SetDialog 2
    Me.mpgWizard.Value = Me.mpgWizard("pgUP").index
    If CurTab = "pgLI1" Then
        cmdWizardShortCut_Click
        Exit Sub
    Else
        UpdateControls "pgUP"
    End If
    SectionStart = Me.mpgWizard.Value
    SectionEnd = Me.mpgWizard.Value
    PageSetup 97
    On Error Resume Next
    Me.cbxUPCategory.SetFocus
    CurTab = Me.mpgWizard.Pages(ActiveControl.Name).Name
    cmdWizardShortCut_Click
    CCRunning = False
    BackupRP
End Sub

Private Sub cmdWizardShortCut_Click()
    If Me.mpgWizard.Value = Me.mpgWizard.Pages("pgCC1").index And Me.mpgCCOptions.Value = Me.mpgCCOptions.Pages("pg00CCBlank").index Then
        CCid = 0
        ExitCC = False
    End If
    CurTab = Me.mpgWizard.Pages(Me.mpgWizard.Value).Name

    If CurTab = "pgUP" And Me.txtUPRemainingAmount.Text = "0.00" Then
        frmPleaseWait.lblWaitActivity.Caption = "Processing Use of Proceeds ..."
        frmPleaseWait.Show

        UpdateCurUP
        InsertUP
        UpdateField "RPCur010", Trim(Str(CurIdx)), -1
        UpdateField "RPLast010", Trim(Str(LastIdx)), -1
        UpdateField "RPFirst010", Trim(Str(FirstIdx)), -1
        PreSelectAC
        UpdateField "CPPrice", Format(Me.txtUPContractPrice.Text, "#,##0.00;(#,##0.00)"), -1
        InsertText "none", "Inc_CP", "none", 0, 2 + 256
        If Val(ActiveDocument.Bookmarks("cbCP").Range.Text) > 0 Then
            vCP = ActiveDocument.Bookmarks("obCP").Range.Text
            InsertText "Para_CPTitle", "Inc_CP", "1", 1, 0 + 256
            InsertText "Para_CP1", "Inc_CP", vCP, 0, 0 + 256
            InsertText "Para_CP2", "Inc_CP", vCP, 1, 0 + 256
            InsertText "Para_CP3", "Inc_CP", vCP, 2, 0 + 256
        End If
        DeleteBackupUP
        UpdateField "TotalUP", txtUPLoanAmount, -1
        UpdateField "Complete_UP", "1", -1
        UpdateField "LastUpdate_UP", "Last updated " & WizLib.LUText, -1
        Unload frmPleaseWait
    End If
    If Me.fraCustomizedConditions.visible = True Then
        Me.fraCustomizedConditions.visible = False
    End If
    Me.txtCustomizedConditions.Text = ""
    Me.lblCancelMsg.visible = False
    UpdateLI1 = 0
    UpdateRT1 = 0
'    UpdateUP = 0
    FirstPass = True
    UpdateCC1 = 0
    UpdateACI1 = 0
    UpdateACII2 = 0

    If vShowIt = False Then
        Me.cmdWizardShortCut.visible = False
        Me.cmdWizardLoanInfo.visible = True
        Me.cmdWizardRepayment.visible = True
        Me.cmdWizardUseProceeds.visible = True
        Me.cmdWizardCollateral.visible = True
        Me.cmdWizardAC1.visible = True
        Me.cmdWizardAC2.visible = True
        Me.cmdWizardSave.visible = True
    '    Me.cmdWizardRepayment.Enabled = True
    '    Me.cmdWizardUseProceeds.Enabled = True
    '    Me.cmdWizardCollateral.Enabled = True
    '    Me.cmdWizardAC1.Enabled = True
    '    Me.cmdWizardAC2.Enabled = True
        Me.cmdWizardSave.enabled = True
        Me.cmdNavCancel.visible = True
        Me.cmdNavCancel.Top = 446.95
        vShowIt = True
        If Me.mpgWizard.Value = Me.mpgWizard.Pages("pgLI1").index Then
            Me.cmdWizardLoanInfo.enabled = False
            CommandSetup 3
        End If
        If Me.mpgWizard.Value = Me.mpgWizard.Pages("pgRT1").index Then
            Me.cmdWizardRepayment.enabled = False
            CommandSetup 3
        End If
        If Me.mpgWizard.Value = Me.mpgWizard.Pages("pgUP").index Then
            Me.cmdWizardUseProceeds.enabled = False
        End If
        If Me.mpgWizard.Value = Me.mpgWizard.Pages("pgCC1").index Then
            Me.cmdWizardCollateral.enabled = False
        End If
        If Me.mpgWizard.Value = Me.mpgWizard.Pages("pgACI1").index Then
            Me.cmdWizardAC1.enabled = False
            CommandSetup 3
        End If
        If Me.mpgWizard.Value = Me.mpgWizard.Pages("pgACII1").index Then
            CommandSetup 3
            Me.cmdWizardAC2.enabled = False
        End If
        If ActiveDocument.Bookmarks("Complete_LI").Range.Text = 0 Then
            Me.cmdWizardRepayment.enabled = False
            Me.cmdWizardUseProceeds.enabled = False
        Else
            Me.cmdWizardLoanInfo.enabled = True
        End If
        If ActiveDocument.Bookmarks("Complete_LI").Range.Text = 0 Then
            Me.cmdWizardRepayment.enabled = False
            Me.cmdWizardUseProceeds.enabled = False
        ElseIf ActiveDocument.Bookmarks("Complete_LI").Range.Text = 1 Then
            Me.cmdWizardRepayment.enabled = True
            If ActiveDocument.Bookmarks("Complete_RT").Range.Text = 1 Then
                Me.cmdWizardUseProceeds.enabled = True
            Else
                Me.cmdWizardUseProceeds.enabled = False
            End If
        End If
        If ActiveDocument.Bookmarks("Complete_UP").Range.Text = 1 Then
            Me.cmdWizardCollateral.enabled = True
            Me.cmdWizardAC1.enabled = True
            Me.cmdWizardAC2.enabled = True
        End If
    Else
        Me.cmdWizardShortCut.visible = True
        Me.cmdWizardLoanInfo.visible = False
        Me.cmdWizardRepayment.visible = False
        Me.cmdWizardUseProceeds.visible = False
        Me.cmdWizardCollateral.visible = False
        Me.cmdWizardAC1.visible = False
        Me.cmdWizardAC2.visible = False
        Me.cmdWizardSave.visible = False
        Me.cmdNavCancel.visible = False
    '    If ActiveDocument.Bookmarks("Complete_LI").Range.Text = 0 Then
    '      Me.cmdWizardRepayment.Enabled = False
    '      Me.cmdWizardUseProceeds.Enabled = False
    '    ElseIf ActiveDocument.Bookmarks("Complete_LI").Range.Text = 1 Then
    '      Me.cmdWizardRepayment.Enabled = True
    '      If ActiveDocument.Bookmarks("Complete_RT").Range.Text = 1 Then
    '        Me.cmdWizardUseProceeds.Enabled = True
    '      Else
    '        Me.cmdWizardUseProceeds.Enabled = False
    '      End If
    '    End If
        vShowIt = False
    End If
    On Error Resume Next
    If ActiveDocument.ProtectionType <> wdNoProtection Then
        ActiveDocument.Unprotect "snad7623"
    End If
    'If ActiveDocument.ProtectionType <> wdNoProtection Then
    '    ActiveDocument.Unprotect
    'End If

    If ActiveDocument.Bookmarks("Complete_LI").Range.Text = 0 Then

    End If
    Me.cmdCancel.enabled = True
    ActiveDocument.UndoClear
End Sub

Private Sub CommandSetup(Buttons As String)
    Me.cmdFirst.visible = True
    Me.cmdback.visible = True
    Me.cmdNext.visible = True
    Me.cmdFinish.visible = True
    Me.cmdCancel.visible = True
    Me.lblHelp.visible = True
    Me.lblCancel.visible = True
    Me.lblStart.visible = True
    Me.lblBack.visible = True
    Me.lblNext.visible = True
    Me.lblFinish.visible = True
    Select Case Buttons
    Case 3    'Next only
        Me.cmdFirst.enabled = False
        Me.cmdback.enabled = False
        Me.cmdNext.enabled = True
        Me.cmdNext.Default = True
        Me.cmdFinish.enabled = False
    Case 4    'Finish only
        Me.cmdFirst.enabled = False
        Me.cmdback.enabled = False
        Me.cmdNext.enabled = False
        Me.cmdFinish.enabled = True
        Me.cmdFinish.Default = True
    Case 7    'All but Next
        Me.cmdFirst.enabled = True
        Me.cmdback.enabled = True
        Me.cmdNext.enabled = False
        Me.cmdFinish.enabled = True
        Me.cmdFinish.Default = True
    Case 6    'All but Finish
        Me.cmdFirst.enabled = True
        Me.cmdback.enabled = True
        Me.cmdNext.enabled = True
        Me.cmdNext.Default = True
        Me.cmdFinish.enabled = False
    Case "EnableFinish"
        Me.cmdFirst.enabled = False
        Me.cmdback.enabled = False
        Me.cmdNext.enabled = False
        Me.cmdFinish.enabled = True
        Me.cmdFinish.Default = True
    Case "EnableNext"
        Me.cmdFirst.enabled = False
        Me.cmdback.enabled = False
        Me.cmdNext.enabled = True
        Me.cmdNext.Default = True
        Me.cmdFinish.enabled = False
    Case "CancelOnly"
        Me.cmdFirst.visible = False
        Me.cmdback.visible = False
        Me.cmdNext.visible = False
        Me.cmdCancel.visible = True
        Me.cmdCancel.Default = True
        Me.cmdFinish.visible = False
        Me.lblHelp.visible = False
        Me.lblCancel.visible = True
        Me.lblStart.visible = False
        Me.lblBack.visible = False
        Me.lblNext.visible = False
        Me.lblFinish.visible = False
        WizardState = True
    Case Else
    End Select
End Sub
Private Sub CtrlOptChkClick(PrevCtrl, HasLabel)
    txtCtrl = "txt" & Mid(PrevCtrl, 4)
    Me(txtCtrl).enabled = Me(PrevCtrl).Value
    If HasLabel = 1 Then
        lblCtrl = "lbl" & Mid(PrevCtrl, 4)
        Me(lblCtrl).enabled = Me(PrevCtrl).Value
    End If
    If Me(PrevCtrl).Value = True Then
        Me(txtCtrl).BackColor = vbWhite
        Me(txtCtrl).SetFocus
    Else
        Me(txtCtrl).Text = ""
        Me(txtCtrl).BackColor = myGray
    End If
End Sub

Public Sub IncBar()
    Dim Count As Integer
    Dim xx As Integer
    Me.lblPleaseWait.visible = False
    Me.lblThankYou.visible = True
    Count = 0
    Do While Count < 100
        Count = Count + 1
    Loop
End Sub

Private Sub InitialRateSet(dlgCtrlName)
    With frmMain
        .Controls("txtIRInitialRate1").Text = .Controls(dlgCtrlName).Text
        .Controls("txtIRInitialRate2").Text = .Controls(dlgCtrlName).Text
        .Controls("txtIRInitialRate3").Text = .Controls(dlgCtrlName).Text
        .Controls("txtIRInterestRateSBA4").Text = .Controls(dlgCtrlName).Text
        .Controls("txtIRInterestRateSBA5").Text = .Controls(dlgCtrlName).Text
    End With
End Sub

Function InputFormat(dlgCtrlName, TextIsDateNumber, NumDecimals012)
    Select Case TextIsDateNumber
    Case "TextIsDate"
        Me(dlgCtrlName).Text = Format(Me(dlgCtrlName).Text, "mmmm d, yyyy")
    Case "TextIsNumber"
        If NumDecimals012 = 0 Then
            Me(dlgCtrlName).Value = Format(Me(dlgCtrlName).Text, "#,##0")
        ElseIf NumDecimals012 = 1 Then
            Me(dlgCtrlName).Value = Format(Me(dlgCtrlName).Text, "##,##0.0")
        ElseIf NumDecimals012 = 2 Then
            Me(dlgCtrlName).Value = Format(Me(dlgCtrlName).Text, "##,##0.00#")
        ElseIf NumDecimals012 = 3 Then
            Me(dlgCtrlName).Value = Format(Me(dlgCtrlName).Text, "#0.000#")
        End If
    Case Else
    End Select
End Function
Private Function IsItText(control As String)
    Dim chkStr As String
    Dim X As Integer
    Dim fchar As String
    Dim Cancel As Boolean
    chkStr = "abcdefghijklmnopqrstuvwxyz"
    For X = 1 To Len(Me(control).Value)
        fchar = Mid(Me(control).Value, X, 1)
        If InStr(1, chkStr, fchar) > 0 Then
            Cancel = False
        Else
            Cancel = True
        End If
    Next X
End Function

Private Sub cmdIROverPrimeInfo_Click()
    Dim vPegRate As Integer
    Dim vLIBORRate As Integer
    vPegRate = InStr(1, UCase(Me.lblIRVariableOverPrime.Text), UCase("peg")) + _
               InStr(1, UCase(Me.lblIRFixedVariableOverPrime.Text), UCase("peg")) + _
               InStr(1, UCase(Me.lblIRLenderOverPrime.Text), UCase("peg")) + _
               InStr(1, UCase(Me.lblIRSBAOverPrime.Text), UCase("peg")) + _
               InStr(1, UCase(Me.lblIRSplit4.Text), UCase("peg"))
    vLIBORRate = InStr(1, UCase(Me.lblIRVariableOverPrime.Text), UCase("LIBOR")) + _
               InStr(1, UCase(Me.lblIRFixedVariableOverPrime.Text), UCase("LIBOR")) + _
               InStr(1, UCase(Me.lblIRLenderOverPrime.Text), UCase("LIBOR")) + _
               InStr(1, UCase(Me.lblIRSBAOverPrime.Text), UCase("LIBOR")) + _
               InStr(1, UCase(Me.lblIRSplit4.Text), UCase("LIBOR"))
    If vPegRate > 0 Then
        MsgBox "SBA Optional Peg Rate:" & vbCrLf & vbCrLf & _
               "The rate published by SBA in the Federal Register for every calendar quarter.     ", _
               vbInformation + vbOKOnly, _
               "SBA Optional Peg Rate"
    ElseIf vLIBORRate > 0 Then
        MsgBox "LIBOR Base Rate:" & vbCrLf & vbCrLf & _
                "The LIBOR Base Rate is the combination of the One Month" & vbCrLf & _
                "London Interbank Offered Rate in effect on the first business" & vbCrLf & _
                "day of the month in which an interest rate change occurs," & vbCrLf & _
                "as published in the Wall Street Journal on the next business      " & vbCrLf & _
                "day, plus an additional 3.0 percentage points.", _
               vbInformation + vbOKOnly, _
               "LIBOR Base Rate"
    Else
        MsgBox "Must not exceed:" & vbCrLf & vbCrLf & _
               "a)  2.25% - for loans over 50,000 maturing in less than 7 years." & vbCrLf & _
               "b)  2.75% - for loans over 50,000 maturing in 7 years or more." & vbCrLf & vbCrLf & _
               "c)  3.25% - for loans 25,001-50,000 maturing in less than 7 years." & vbCrLf & _
               "d)  3.75% - for loans 25,001-50,000 maturing in 7 years or more." & vbCrLf & vbCrLf & _
               "e)  4.25% - for loans 25,000 and under maturing in less than 7 years.    " & vbCrLf & _
               "f)   4.75% - for loans 25,000 and under maturing in 7 years or more.", _
               vbInformation + vbOKOnly, _
               "Interest Rate Over Prime"
    End If
    Me(curCtrl).SetFocus
End Sub

Private Sub cmdVLOInfo_Click()
    curCtrl = "txtVLOOverPrime"
    Dim vPegRate As Integer
    vPegRate = InStr(1, UCase(Me.lblIRVariableOverPrime.Text), UCase("peg")) + _
               InStr(1, UCase(Me.lblIRFixedVariableOverPrime.Text), UCase("peg")) + _
               InStr(1, UCase(Me.lblIRLenderOverPrime.Text), UCase("peg")) + _
               InStr(1, UCase(Me.lblIRSBAOverPrime.Text), UCase("peg")) + _
               InStr(1, UCase(Me.lblIRSplit4.Text), UCase("peg"))
    vLIBORRate = InStr(1, UCase(Me.lblIRVariableOverPrime.Text), UCase("LIBOR")) + _
               InStr(1, UCase(Me.lblIRFixedVariableOverPrime.Text), UCase("LIBOR")) + _
               InStr(1, UCase(Me.lblIRLenderOverPrime.Text), UCase("LIBOR")) + _
               InStr(1, UCase(Me.lblIRSBAOverPrime.Text), UCase("LIBOR")) + _
               InStr(1, UCase(Me.lblIRSplit4.Text), UCase("LIBOR"))
    If vPegRate > 0 Then
        MsgBox "SBA Optional Peg Rate:" & vbCrLf & vbCrLf & _
               "The rate published by SBA in the Federal Register for every calendar quarter.     ", _
               vbInformation + vbOKOnly, _
               "SBA Optional Peg Rate"
    ElseIf vLIBORRate > 0 Then
        MsgBox "LIBOR Base Rate:" & vbCrLf & vbCrLf & _
                "The LIBOR Base Rate is the combination of the One Month" & vbCrLf & _
                "London Interbank Offered Rate in effect on the first business      " & vbCrLf & _
                "day of the month in which an interest rate change occurs," & vbCrLf & _
                "as published in the Wall Street Journal on the next business" & vbCrLf & _
                "day, plus an additional 3.0 percentage points.", _
               vbInformation + vbOKOnly, _
               "LIBOR Base Rate"
    Else
        MsgBox "Must not exceed:" & vbCrLf & vbCrLf & _
               "a)  2.25% - for loans over 50,000 maturing in less than 7 years." & vbCrLf & _
               "b)  2.75% - for loans over 50,000 maturing in 7 years or more." & vbCrLf & vbCrLf & _
               "c)  3.25% - for loans 25,001-50,000 maturing in less than 7 years." & vbCrLf & _
               "d)  3.75% - for loans 25,001-50,000 maturing in 7 years or more." & vbCrLf & vbCrLf & _
               "e)  4.25% - for loans 25,000 and under maturing in less than 7 years.    " & vbCrLf & _
               "f)   4.75% - for loans 25,000 and under maturing in 7 years or more.", _
               vbInformation + vbOKOnly, _
               "Interest Rate Over Prime"
    End If
    Me(curCtrl).SetFocus
    '  MsgBox "Must not exceed:" & vbCrLf & vbCrLf & _
       '         "a)  2.25% - for loans over 50,000 maturing in less than 7 years." & vbCrLf & _
       '         "b)  2.75% - for loans over 50,000 maturing in 7 years or more." & vbCrLf & vbCrLf & _
       '         "c)  3.25% - for loans 25,001-50,000 maturing in less than 7 years." & vbCrLf & _
       '         "d)  3.75% - for loans 25,001-50,000 maturing in 7 years or more." & vbCrLf & vbCrLf & _
       '         "e)  4.25% - for loans 25,000 and under maturing in less than 7 years.    " & vbCrLf & _
       '         "f)   4.75% - for loans 25,000 and under maturing in 7 years or more.", _
       '         vbInformation + vbOKOnly, _
       '         "Interest Rate Over Prime"
    '  Me(curCtrl).SetFocus
End Sub

Private Sub lblAC2Appraisal_Click()
    If Me.chkAC2Appraisal.Value = False Then
        Me.chkAC2Appraisal.Value = True
    Else
        Me.chkAC2Appraisal.Value = False
    End If
End Sub

Private Sub lblAC2Marine_Click()
    Me.optAC2Marine.Value = True
End Sub

Private Sub lstCCUSState_Exit(ByVal Cancel As MSForms.ReturnBoolean)
    If Me.lstCCUSState.ListIndex <> -1 Then
        If Me.lstCCUSState.ListIndex <> 0 Then
            Me.txtCCCountry.enabled = True
            Me.txtCCCountry.BackColor = vbWhite
            Me.txtCCCountry.Text = Me.lstCCUSState.List(Me.lstCCUSState.ListIndex, 2)
            Me.lblCCCountry.Caption = "(State/Possession spelled out)"
        Else
            Me.txtCCCountry.Text = ""
            Me.lblCCCountry.Caption = "(Country)"
        End If
    End If
End Sub
Private Sub lstCCUSState_Change()
    If InStr(1, Me.lstCCUSState.Text, " ") Or InStr(1, Me.lstCCUSState.Text, "  ") Then
        Me.lstCCUSState.Text = ""
        Me.txtCCCountry.Text = ""
        Me.lstCCUSState.ListIndex = 0
        Me.lstCCUSState.SetFocus
    ElseIf Me.lstCCUSState.ListIndex <> -1 Then
        If Me.lstCCUSState.ListIndex <> 0 Then
            Me.txtCCCountry.enabled = True
            Me.txtCCCountry.BackColor = vbWhite
            Me.txtCCCountry.Text = Me.lstCCUSState.List(Me.lstCCUSState.ListIndex, 2)
            Me.lblCCCountry.Caption = "(State/Possession spelled out)"
        Else
            Me.txtCCCountry.Text = ""
            Me.lblCCCountry.Caption = "(Country)"
        End If

        On Error GoTo lstCCUSState_Change_Error
        Exit Sub

lstCCUSState_Change_Error:
        Me.txtCCCountry.Text = ""
        Me.lstCCUSState.Text = ""
        Me.lstCCUSState.SetFocus
    End If
End Sub

Private Sub lstCCUSState_Enter()
    If Me.lstCCUSState.ListCount = 0 Then
        StatesList Me.lstCCUSState
    End If
End Sub

Private Sub mpgCCOptions_Change()
    If RetrieveInfo = True Then
    Else
        tabCCPage = Me.mpgCCOptions.Value
    End If
End Sub

Private Sub mpgPTOptions_Change()
    tabPage = Me.mpgPTOptions.Value
End Sub

Private Sub mpgWizard_Change()
'  Application.ScreenUpdating = True
    Application.ScreenRefresh
    Application.ScreenUpdating = False
    Me.lblWizScreenNum.Caption = Me.mpgWizard.Value
    On Error Resume Next
    CurTab = Me.mpgWizard.Pages(ActiveControl.Value).Name
    If retCheckInput = False Then
        If Me.chkAC2Appraisal.Value = True Then ' CurTab = "pgSaved" Then
            UpdateACII2 = 1
            UpdateControls CurTab
        Else
            UpdateControls CurTab
        End If
    End If
End Sub
Function MyErrorMsg(curpage, ErrorMsgType, IsRequired, dlgCtrlName, Optional retChkInput, Optional cLen, Optional curOption As Integer)
'ErrorMsgType = "numeric", "date", or "text"
'IsRequired = True or False Boolean
    Dim ErrorText As String
    Beep
  'Add following textboxes to ErrMsg panel
  Me.txtCurOption.Value = curOption
  Me.txtPrevPage.Value = curpage
  Me.txtPrevCtrl.Text = dlgCtrlName
  Me.lblErrControl.Caption = dlgCtrlName
  'End 9/13/2007 change
    If ErrorCaught = False Then
        If ErrorMsgType = "Info" Then
            Me.mpgWizard.Value = Me.mpgWizard.Pages("pgRates").index
            Me.cmdWizardShortCut.visible = False
        Else
            Me.mpgWizard.Value = Me.mpgWizard.Pages("pgErrorMsg").index
            Me.cmdWizardShortCut.visible = False
        End If
        On Error Resume Next
        Me.mpgWizard.SetFocus
        Me.cmdFinish.visible = True
        Me.cmdback.visible = True
        Me.cmdNext.visible = True
        Me.cmdFirst.visible = True
        Me.cmdLIWizTips.visible = True
        Me.cmdPanelHelp.visible = True
        Me.cmdAddressList.visible = True
        Me.cmdCancel.visible = True
        Me.lblHelp.visible = True
        Me.lblCancel.visible = True
        Me.lblStart.visible = True
        Me.lblBack.visible = True
        Me.lblNext.visible = True
        Me.lblFinish.visible = True
        Me.fraErrorMsg.visible = True

        If ErrorMsgType = "Info" Then
        Else
            On Error Resume Next
            Me.cmdErrorMsg.SetFocus

            Select Case LCase(ErrorMsgType)
            Case LCase("Numeric")
                ErrorText = "numeric"
            Case LCase("Date")
                ErrorText = "date"
            Case LCase("Text")
                ErrorText = "text"
            Case LCase("Blank")
                ErrorText = "User"
            Case LCase("Length")
                If InStr(1, dlgCtrlName, "Zip") Then
                    ErrorText = "a Zip code length of 5 or 10 characters [" & cLen & " entered]"
                ElseIf InStr(1, dlgCtrlName, "Zip") Then
                    ErrorText = "a length of 10 characters [" & cLen & " entered]"
                ElseIf InStr(1, dlgCtrlName, "LoanNumber") Then
                    ErrorText = "a length of 10 characters [" & cLen & " entered]"
                ElseIf InStr(1, dlgCtrlName, "txtLICID") Then
                    ErrorText = "a length of 12 characters [" & cLen & " entered]"
                End If
            Case LCase("Placeholder")
                ErrorText = "placeholder [--]"
            Case Else
            End Select
            If IsRequired Then
                Me.txtErrorMsg.Text = "This field requires " & Trim(ErrorText) & " input and cannot be blank.  Please check your entry."
            Else
                Me.txtErrorMsg.Text = "This field requires " & Trim(ErrorText) & " input.  Please check your entry."
            End If
        End If
    End If
    PrevPage = curpage
    CurTab = Me.mpgWizard.Pages(curpage).Name
    PrevCtrl = dlgCtrlName
    curOption = curOption
End Function

Private Sub optAC2Aircraft_Click()
    If Me.chkAC2Appraisal.Value = True And Me.optAC2Aircraft.Value = True Then
    'Location ... Aircraft Make
        Me.txtAC2obAP.Text = 3
        Me.lblAC2Location.enabled = True
        Me.lblAC2Location.Caption = "Make:"
        Me.txtAC2APLocation.visible = False
        Me.txtAC2APLocation.enabled = False
        Me.txtAC2APLocation.ControlTipText = ""
    'Amount
        Me.lblAC2MarketValue.enabled = True
        Me.txtAC2APAmount.enabled = True
        Me.txtAC2APAmount.BackColor = vbWhite
    'Make, Model and Year
        Me.txtAC2APMake.visible = True
        Me.txtAC2APMake.enabled = True
        Me.txtAC2APMake.BackColor = vbWhite

        Me.txtAC2APModel.enabled = True
        Me.txtAC2APModel.visible = True
        Me.txtAC2APModel.BackColor = vbWhite
        Me.lblAC2Model.visible = True

        Me.txtAC2APYear.enabled = True
        Me.txtAC2APYear.visible = True
        Me.txtAC2APYear.BackColor = vbWhite
        Me.lblAC2Year.visible = True

        Me.txtAC2APAmount.SetFocus
    End If

End Sub

Private Sub optAC2Equipment_Click()
    If Me.chkAC2Appraisal.Value = True And Me.optAC2Equipment.Value = True Then
    'Location ... Equipment ... Description
        Me.txtAC2obAP.Text = 1
        Me.lblAC2Location.enabled = True
        Me.lblAC2Location.Caption = "Description:"
        Me.txtAC2APLocation.visible = True
        Me.txtAC2APLocation.enabled = True
        Me.txtAC2APLocation.BackColor = vbWhite
        Me.txtAC2APLocation.ControlTipText = ""
    'Amount
        Me.txtAC2APAmount.enabled = True
        Me.txtAC2APAmount.enabled = True
        Me.txtAC2APAmount.BackColor = vbWhite
    'Make, Model and Year
    'No Make ... it's location
        Me.txtAC2APMake.visible = False
        Me.txtAC2APMake.enabled = False
        Me.txtAC2APModel.visible = False
        Me.txtAC2APModel.enabled = False
        Me.txtAC2APModel.BackColor = myGray

        Me.txtAC2APYear.visible = False
        Me.txtAC2APYear.enabled = False
        Me.txtAC2APYear.BackColor = myGray
        Me.lblAC2Year.visible = False
        Me.lblAC2Model.visible = False

        On Error Resume Next
        Me.txtAC2APAmount.SetFocus
    End If
End Sub

Private Sub optAC2Marine_Click()
    If Me.chkAC2Appraisal.Value = True And Me.optAC2Marine.Value = True Then
    'Location ... or Vessel Name
        Me.txtAC2obAP.Text = 2
        Me.lblAC2Location.enabled = True
        Me.lblAC2Location.Caption = "Vessel Name:"
        Me.txtAC2APLocation.visible = True
        Me.txtAC2APLocation.enabled = True
        Me.txtAC2APLocation.ControlTipText = ""
    'Marine Amount
        Me.txtAC2APAmount.enabled = True
        Me.lblAC2MarketValue.enabled = True
        Me.txtAC2APAmount.BackColor = vbWhite
    'Make, Model and Year
    'Make is Location/Vessel Name
        Me.txtAC2APMake.visible = False
        Me.txtAC2APMake.enabled = False

        Me.txtAC2APModel.visible = False
        Me.txtAC2APModel.enabled = False
        Me.txtAC2APModel.BackColor = myGray
        Me.lblAC2Model.visible = False

        Me.txtAC2APYear.visible = False
        Me.txtAC2APYear.enabled = False
        Me.txtAC2APYear.BackColor = myGray
        Me.lblAC2Year.visible = False

        On Error Resume Next
        Me.txtAC2APAmount.SetFocus
    End If
End Sub

Private Sub optAC2RealEstate_Click()
    If Me.chkAC2Appraisal.Value = True And Me.optAC2RealEstate.Value = True Then
    'Location Text Box/Hide Make
        Me.txtAC2obAP.Text = 0
        Me.txtAC2APLocation.visible = True
        Me.txtAC2APLocation.enabled = True
        Me.txtAC2APLocation.BackColor = vbWhite
        Me.lblAC2Location.enabled = True
        Me.lblAC2Location.Caption = "Location:"
        Me.txtAC2APLocation.ControlTipText = "Right click to save to/retrieve from the Name/Address list."
    'Amount Text Box
        Me.txtAC2APAmount.enabled = True
        Me.lblAC2MarketValue.enabled = True
        Me.txtAC2APAmount.BackColor = vbWhite
    'Year and Make and Model turn off
        Me.txtAC2APMake.visible = False
        Me.txtAC2APMake.enabled = False
        Me.txtAC2APModel.visible = False
        Me.txtAC2APModel.enabled = False
        Me.txtAC2APModel.BackColor = myGray
        Me.lblAC2Model.visible = False
        Me.lblAC2Year.visible = False
        Me.txtAC2APYear.visible = False
        Me.txtAC2APYear.enabled = False
        Me.txtAC2APYear.BackColor = myGray

        On Error Resume Next
        Me.txtAC2APAmount.SetFocus
    End If
End Sub

Private Sub optBD5SubordinateC_Click()
    If Me.optBD5SubordinateC.Value = True Then
        Me.txtcbBD5Subordinate.Value = 2
    End If
    Me.txtBD5Term.enabled = Not Me.optBD5SubordinateC.Value
    Me.txtBD5Term.BackColor = myGray
    Me.lblBOCTerm.enabled = Not Me.optBD5SubordinateC.Value
    Me.lblBOCProceeds.Caption = "Proceeds received from:"
    Me.txtBD5From.SetFocus
End Sub

Private Sub optBD5SubordinateB_Click()
    If Me.optBD5SubordinateB.Value = True Then
        Me.txtcbBD5Subordinate.Value = 1
    End If
    Me.txtBD5Term.enabled = Me.optBD5SubordinateB.Value
    Me.txtBD5Term.BackColor = vbWhite
    Me.lblBOCTerm.enabled = Me.optBD5SubordinateB.Value
    Me.lblBOCProceeds.Caption = "Proceeds received from:"
    Me.txtBD5From.SetFocus
End Sub

Private Sub optBD5SubordinateA_Click()
    If Me.optBD5SubordinateA.Value = True Then
        Me.txtcbBD5Subordinate.Value = 0
    End If
    Me.txtBD5Term.enabled = Me.optBD5SubordinateA.Value
    Me.txtBD5Term.BackColor = vbWhite
    Me.lblBOCTerm.enabled = Me.optBD5SubordinateA.Value
    Me.lblBOCProceeds.Caption = "Proceeds received from:"
    Me.txtBD5From.SetFocus
End Sub

Private Sub optCCAssignment4A_Click()
    Me.txtCCAssignment4.enabled = Not Me.optCCAssignment4A.Value
    If Me.optCCAssignment4A.Value = True Then
        Me.txtCCAssignment4.Text = ""
        Me.txtCCAssignment4.BackColor = myGray
    End If
End Sub

Private Sub optCCAssignment4B_Click()
    Me.txtCCAssignment4.enabled = Me.optCCAssignment4B.Value
    If Me.optCCAssignment4B.Value = True Then
        Me.txtCCAssignment4.BackColor = vbWhite
        Me.txtCCAssignment4.SetFocus
    Else
        Me.txtCCAssignment4.Text = ""
        Me.txtCCAssignment4.BackColor = myGray
    End If
End Sub

Private Sub optCFONone_Click()
    If Me.optCFONone.Value = True Then
        Me.lblCFOMaxCeiling.enabled = False
        Me.txtCFOMax.Text = ""
        Me.txtCFOMax.BackColor = myGray
        Me.txtCFOMax.enabled = False
        Me.txtCFOMin.Text = ""
        Me.txtCFOMin.BackColor = myGray
        Me.lblCFOMinCeiling.enabled = False
        Me.txtCFOMin.enabled = False
    End If
End Sub

Private Sub optGTBalance_Change()
    PrevCtrl = Me.optGTBalance.Name
    CtrlOptChkClick PrevCtrl, 1
End Sub

Private Sub optCFOFixed_Click()
    If Me.optCFOFixed.Value = True Then
        Me.lblCFOMaxCeiling.enabled = True
        Me.txtCFOMax.enabled = True
        Me.txtCFOMax.BackColor = vbWhite
        Me.lblCFOMinCeiling.enabled = True
        Me.txtCFOMin.enabled = True
        Me.txtCFOMin.BackColor = vbWhite
        Me.txtCFOMax.SetFocus
    Else
        Me.lblCFOMaxCeiling.enabled = False
        Me.txtCFOMax.Text = ""
        Me.txtCFOMax.BackColor = myGray
        Me.txtCFOMax.enabled = False
        Me.txtCFOMin.Text = ""
        Me.txtCFOMax.BackColor = myGray
        Me.lblCFOMinCeiling.enabled = False
        Me.txtCFOMin.enabled = False
    End If
End Sub

'Private Sub optCFOFluctuate_Change()
'    If Me.optCFOFluctuate.Value = True Then
'        Me.lblCFOMaxCeiling.enabled = True
'        Me.txtCFOMax.enabled = True
'        Me.txtCFOMax.BackColor = vbWhite
'        Me.lblCFOMinCeiling.enabled = True
'        Me.txtCFOMin.enabled = True
'        Me.txtCFOMin.BackColor = vbWhite
'        On Error Resume Next
'        Me.txtCFOMax.SetFocus
'    Else
'        Me.lblCFOMaxCeiling.enabled = False
'       Me.txtCFOMax.BackColor = myGray
'        Me.txtCFOMax.enabled = False
'        Me.txtCFOMin.Text = ""
'        Me.txtCFOMin.BackColor = myGray
'        Me.lblCFOMinCeiling.enabled = False
'        Me.txtCFOMin.enabled = False
'    End If
' End Sub

Private Sub optGTCollateral_Change()
    PrevCtrl = Me.optGTCollateral.Name
    CtrlOptChkClick PrevCtrl, 1
End Sub

Private Sub optGTMaximum_Change()
    PrevCtrl = Me.optGTMaximum.Name
    CtrlOptChkClick PrevCtrl, 1
End Sub

Private Sub optGTPercentage_Change()
    PrevCtrl = Me.optGTPercentage.Name
    CtrlOptChkClick PrevCtrl, 1
End Sub

Private Sub optGTPrincipal_Change()
    PrevCtrl = Me.optGTPrincipal.Name
    CtrlOptChkClick PrevCtrl, 1
End Sub

Private Sub optGTTime_Change()
    PrevCtrl = Me.optGTTime.Name
    CtrlOptChkClick PrevCtrl, 1
End Sub

Private Sub optIOMorethanOne_Change()
    If Me.optIOMorethanOne.Value = True Then
        cbxIODaysMore_Enter
        If Me.cbxIODaysMore.ListIndex = -1 Then
            Me.cbxIODaysMore.ListIndex = 0
        End If
        cbxIOMonthsMore_Enter
        If Me.cbxIOMonthsMore.ListIndex = -1 Then
            Me.cbxIOMonthsMore.ListIndex = 0
        End If
        cbxIOPeriodMore_Enter
        If Me.cbxIOPeriodMore.ListIndex = -1 Then
            Me.cbxIOPeriodMore.ListIndex = 0
        End If
        cbxIOMonthsDueMore_Enter
        If Me.cbxIOMonthsDueMore.ListIndex = -1 Then
            Me.cbxIOMonthsDueMore.ListIndex = 0
        End If
        Me.txtIOPaymentsMore.enabled = True
        Me.cbxIODaysMore.enabled = True
        Me.cbxIOMonthsMore.enabled = True
        Me.cbxIOPeriodMore.enabled = True
        Me.cbxIOMonthsDueMore.enabled = True
        Me.txtIOPaymentsMore.BackColor = vbWhite
        Me.cbxIOPeriodMore.BackColor = vbWhite
        Me.cbxIODaysMore.BackColor = vbWhite
        Me.cbxIOMonthsMore.BackColor = vbWhite
        Me.cbxIOMonthsDueMore.BackColor = vbWhite
        Me.lblIOMore1.enabled = True
        Me.lblIOMore2.enabled = True
        Me.lblIOMore3.enabled = True
        Me.lblIOMore4.enabled = True
        Me.lblIOMore5.enabled = True
        Me.lblIOMore6.enabled = True
        Me.lblIOMore7.enabled = True
        Me.lblIOMore8.enabled = True
        On Error Resume Next
        Me.txtIOPaymentsMore.SetFocus
    Else
        Me.txtIOPaymentsMore.enabled = False
        Me.cbxIODaysMore.enabled = False
        Me.cbxIOMonthsMore.enabled = False
        Me.cbxIOPeriodMore.enabled = False
        Me.cbxIOMonthsDueMore.enabled = False
        Me.txtIOPaymentsMore.Text = ""
        Me.cbxIODaysMore.Text = ""
        Me.cbxIOMonthsMore.Text = ""
        Me.cbxIOPeriodMore.Text = ""
        Me.cbxIOMonthsDueMore.Text = ""
        Me.txtIOPaymentsMore.BackColor = myGray
        Me.cbxIOPeriodMore.BackColor = myGray
        Me.cbxIODaysMore.BackColor = myGray
        Me.cbxIOMonthsMore.BackColor = myGray
        Me.cbxIOMonthsDueMore.BackColor = myGray
        Me.lblIOMore1.enabled = False
        Me.lblIOMore2.enabled = False
        Me.lblIOMore3.enabled = False
        Me.lblIOMore4.enabled = False
        Me.lblIOMore5.enabled = False
        Me.lblIOMore6.enabled = False
        Me.lblIOMore7.enabled = False
        Me.lblIOMore8.enabled = False
    End If
End Sub

Private Sub optIOOne_Change()
    If Me.optIOOne.Value = True Then
        cbxIOMonthsOne_Enter
        If Me.cbxIOMonthsOne.ListIndex = -1 Then
            Me.cbxIOMonthsOne.ListIndex = 0
        End If
        cbxIODaysOne_Enter
        If Me.cbxIODaysOne.ListIndex = -1 Then
            Me.cbxIODaysOne.ListIndex = 0
        End If
        cbxIOPeriodOne_Enter
        If Me.cbxIOPeriodOne.ListIndex = -1 Then
            Me.cbxIOPeriodOne.ListIndex = 0
        End If
        Me.cbxIODaysOne.enabled = True
        Me.cbxIOMonthsOne.enabled = True
        Me.cbxIOPeriodOne.enabled = True
        Me.cbxIODaysOne.BackColor = vbWhite
        Me.cbxIOMonthsOne.BackColor = vbWhite
        Me.cbxIOPeriodOne.BackColor = vbWhite
        Me.lblIOOne1.enabled = True
        Me.lblIOOne2.enabled = True
        Me.lblIOOne3.enabled = True
        Me.lblIOOne4.enabled = True
        Me.lblIOOne5.enabled = True
        Me.lblIOOne6.enabled = True
        On Error Resume Next
        Me.cbxIODaysOne.SetFocus
    Else
        Me.cbxIODaysOne.enabled = False
        Me.cbxIOMonthsOne.enabled = False
        Me.cbxIOPeriodOne.enabled = False
        Me.cbxIODaysOne.Text = ""
        Me.cbxIOMonthsOne.Text = ""
        Me.cbxIOPeriodOne.Text = ""
        Me.cbxIODaysOne.BackColor = myGray
        Me.cbxIOMonthsOne.BackColor = myGray
        Me.cbxIOPeriodOne.BackColor = myGray
        Me.lblIOOne1.enabled = False
        Me.lblIOOne2.enabled = False
        Me.lblIOOne3.enabled = False
        Me.lblIOOne4.enabled = False
        Me.lblIOOne5.enabled = False
        Me.lblIOOne6.enabled = False
    End If
End Sub

Private Sub optIRFixed_Change()
    If Me.optIRFixed.Value = True Then
        Me.txtIRFixed.enabled = True
        Me.lblIRFixed.enabled = True
        Me.txtIRFixed.BackColor = vbWhite
        Me.optIRRTPubNewspaper.enabled = False
        Me.optIRRTPubWebsite.enabled = False
        Me.lblIRSplit5.enabled = False
        Me.lblIRSplit9.enabled = False
        Me.txtIRRTPublisher.Text = ""
        Me.txtIRRTPublisher.enabled = False
        Me.txtIRRTPublisher.BackColor = myGray
        DisableLoanOptions
        On Error Resume Next
        Me.txtIRFixed.SetFocus
    Else
        Me.txtIRFixed.Text = ""
        Me.txtIRFixed.enabled = False
        Me.lblIRFixed.enabled = False
        Me.txtIRFixed.BackColor = myGray
        Me.txtIRRTPublisher.Text = ""
        DisableLoanOptions
    End If
End Sub
Private Sub DisableLoanOptions()
    If Me.optIRFixed.Value = True Or Me.optIRTwoFixed.Value = True Or Me.optRTDFP.Value = True Then
        State = False
    Else
        State = True
    End If
    If ActiveDocument.Bookmarks("cbLIDFP").Range.Text = 0 Then
        Me.optRTDFP.enabled = False
        Me.txtRTCurtailment.enabled = False
        Me.cbxDFPMonths.enabled = False
        Me.chkRTESF.enabled = True
'        Me.lblRTESF1.enabled = True
        Me.lblRTESF2.enabled = True
        Me.txtRTESF.enabled = True
        Me.txtRTESF.BackColor = vbWhite
    Else
        Me.chkRTESF.enabled = True
'        Me.lblRTESF1.enabled = False
        Me.lblRTESF2.enabled = False
        Me.txtRTESF.enabled = False
        Me.txtRTESF.Text = ""
        Me.txtRTESF.BackColor = myGray
    End If
    Dim Ctrl As control
    For Each Ctrl In Controls
        If InStr(1, Ctrl.Name, "VLO") Or InStr(1, Ctrl.Name, "CFO") Then
            Me(Ctrl.Name).enabled = State   'Enable/Disable, including labels
        End If
        If InStr(1, Ctrl.Name, "txtVLO") Or InStr(1, Ctrl.Name, "cbxVLO") Or InStr(1, Ctrl.Name, "txtCFO") Then
            On Error Resume Next    'Clear and enable/disable text boxes
            Me(Ctrl.Name).Text = ""
            Me(Ctrl.Name).Value = ""
            If State = False Then
                Me(Ctrl.Name).BackColor = myGray
            Else
                Me(Ctrl.Name).BackColor = vbWhite
            End If
            Me(Ctrl.Name).enabled = State
        End If
        If InStr(1, Ctrl.Name, "optIO") And Me.optRTDFP.Value = True Then
            Me(Ctrl.Name).enabled = State
        End If
    Next  'Enable Operating Company dialog
End Sub
Private Sub optIRFixedVariable_Change()
'CAP
    If Me.optIRFixedVariable.Value = True Then
        Me.txtIRFixedVariable.enabled = True
        Me.lblIRFixedVariable.enabled = True
        Me.txtIRFixedVariable.BackColor = vbWhite
        Me.txtIRFixedVariableOverPrime.enabled = True
        Me.lblIRFixedVariableOverPrime.enabled = True
        Me.txtIRFixedVariableOverPrime.BackColor = vbWhite
        Me.lblIRFixedVariableOverPrime.BackColor = vbWhite
        Me.txtIRFixedVariablePeriod.enabled = True
        Me.lblIRFixedVariablePeriod.enabled = True
        Me.txtIRFixedVariablePeriod.BackColor = vbWhite
        Me.optIRRTPubNewspaper.enabled = True
        Me.optIRRTPubWebsite.enabled = True
        Me.txtIRRTPublisher.enabled = True
        Me.txtIRRTPublisher.BackColor = vbWhite
        Me.txtIRRTPublisher.Text = ""
        Me.lblIRSplit9.enabled = True
        DisableLoanOptions
        On Error Resume Next
        Me.txtIRFixedVariable.SetFocus
    Else
        Me.txtIRFixedVariable.Text = ""
        Me.txtIRFixedVariable.enabled = False
        Me.lblIRFixedVariable.enabled = False
        Me.txtIRFixedVariable.BackColor = myGray
        Me.txtIRFixedVariableOverPrime.Text = ""
        Me.lblIRFixedVariableOverPrime.Text = "% Over Prime"
        Me.txtIRFixedVariableOverPrime.enabled = False
        Me.lblIRFixedVariableOverPrime.enabled = False
        Me.txtIRFixedVariableOverPrime.BackColor = myGray
        Me.lblIRFixedVariableOverPrime.BackColor = myGray
        Me.txtIRFixedVariablePeriod.Text = ""
        Me.txtIRFixedVariablePeriod.enabled = False
        Me.lblIRFixedVariablePeriod.enabled = False
        Me.txtIRFixedVariablePeriod.BackColor = myGray
        Me.txtIRRTPublisher.Text = ""
        DisableLoanOptions
        Me.cmdIROverPrimeInfo.enabled = False
    End If
End Sub

Private Sub optIRLenderFixed_Change()
    If Me.optIRLenderFixed.Value = True Then

        Me.txtIRLenderFixed.enabled = True
        Me.txtIRLenderFixed.Locked = False
        Me.lblIRLenderFixed.enabled = True
        Me.txtIRLenderFixed.BackColor = vbWhite

        Me.txtIRSBAVariable.enabled = True
        Me.txtIRSBAVariable.Locked = False
        Me.lblIRSBAVariable.enabled = True
        Me.txtIRSBAVariable.BackColor = vbWhite

        Me.txtIRSBAOverPrime.enabled = True
        Me.txtIRSBAOverPrime.Locked = False
        Me.lblIRSBAOverPrime.enabled = True
        Me.txtIRSBAOverPrime.BackColor = vbWhite
        Me.lblIRSBAOverPrime.BackColor = vbWhite
        Me.optIRRTPubNewspaper.enabled = True
        Me.optIRRTPubWebsite.enabled = True
        Me.lblIRSplit9.enabled = True
        Me.txtIRRTPublisher.enabled = True
        Me.txtIRRTPublisher.BackColor = vbWhite
        Me.txtIRRTPublisher.Text = ""
        DisableLoanOptions

        Me.txtIRLenderFixed.SetFocus
    Else
        Me.txtIRLenderFixed.Text = ""
        Me.txtIRLenderFixed.enabled = False
        Me.lblIRLenderFixed.enabled = False
        Me.txtIRLenderFixed.BackColor = myGray

        Me.txtIRSBAVariable.Text = ""
        Me.txtIRSBAVariable.enabled = False
        Me.lblIRSBAVariable.enabled = False
        Me.txtIRSBAVariable.BackColor = myGray

        Me.txtIRSBAOverPrime.Text = ""
        Me.txtIRSBAOverPrime.enabled = False
        Me.lblIRSBAOverPrime.enabled = False
        Me.txtIRSBAOverPrime.BackColor = myGray
        Me.lblIRSBAOverPrime.BackColor = myGray
        Me.lblIRSBAOverPrime.Text = "% Over Prime"
        Me.txtIRRTPublisher.Text = ""
        DisableLoanOptions

        Me.cmdIROverPrimeInfo.enabled = False
    End If
End Sub

Private Sub optIRSBAFixed_Change()
    If Me.optIRSBAFixed.Value = True Then

        Me.txtIRSBAFixed.enabled = True
        Me.txtIRSBAFixed.Locked = False
        Me.lblIRSBAFixed.enabled = True
        Me.txtIRSBAFixed.BackColor = vbWhite

        Me.txtIRLenderVariable.enabled = True
        Me.txtIRLenderVariable.Locked = False
        Me.lblIRLenderVariable.enabled = True
        Me.txtIRLenderVariable.BackColor = vbWhite

        Me.txtIRLenderOverPrime.enabled = True
        Me.txtIRLenderOverPrime.Locked = False
        Me.lblIRLenderOverPrime.enabled = True
        Me.txtIRLenderOverPrime.BackColor = vbWhite
        Me.lblIRLenderOverPrime.BackColor = vbWhite
        Me.optIRRTPubNewspaper.enabled = True
        Me.optIRRTPubWebsite.enabled = True
        Me.txtIRRTPublisher.enabled = True
        Me.txtIRRTPublisher.BackColor = vbWhite
        Me.txtIRRTPublisher.Text = ""
        Me.lblIRSplit9.enabled = True
        DisableLoanOptions
        Me.txtIRSBAFixed.SetFocus
    Else
        Me.txtIRSBAFixed.Text = ""
        Me.txtIRSBAFixed.enabled = False
        Me.lblIRSBAFixed.enabled = False
        Me.txtIRSBAFixed.BackColor = myGray
        Me.txtIRLenderVariable.Text = ""
        Me.txtIRLenderVariable.enabled = False
        Me.lblIRLenderVariable.enabled = False
        Me.txtIRLenderVariable.BackColor = myGray
        Me.txtIRLenderOverPrime.Text = ""
        Me.txtIRLenderOverPrime.enabled = False
        Me.lblIRLenderOverPrime.enabled = False
        Me.txtIRLenderOverPrime.BackColor = myGray
        Me.lblIRLenderOverPrime.BackColor = myGray
        Me.lblIRLenderOverPrime.Text = "% Over Prime"
        Me.txtIRRTPublisher.Text = ""
        DisableLoanOptions
        Me.cmdIROverPrimeInfo.enabled = False
    End If
End Sub

Private Sub optIRSplit_Change()
    If Me.optIRSplit.Value = True Then
        Me.lblIRSplit1.Caption = "Initial Rate on"
        Me.txtIRSplitRate.enabled = True
        Me.txtIRSplitRate2.enabled = True
        Me.txtIRSplitPrime.enabled = True
        Me.txtIRSplitPercent.enabled = True
        Me.txtIRSplitPercent2.enabled = True
        Me.txtIRSplitRate.BackColor = vbWhite
        Me.txtIRSplitRate2.BackColor = vbWhite
        Me.txtIRSplitPrime.BackColor = vbWhite
        Me.txtIRSplitPercent.BackColor = vbWhite
        Me.txtIRSplitPercent2.BackColor = vbWhite
        Me.lblIRSplit4.BackColor = vbWhite
        Me.lblIRSplit1.enabled = True
        Me.lblIRSplit2.enabled = True
        Me.lblIRSplit3.enabled = True
        Me.lblIRSplit4.enabled = True
        Me.lblIRSplit5.enabled = True
        Me.lblIRSplit6.enabled = True
        Me.lblIRSplit7.enabled = True
        Me.lblIRSplit8.enabled = True
        Me.lblIRSplit9.enabled = True
        Me.txtIRRTPublisher.enabled = True
        Me.txtIRRTPublisher.BackColor = vbWhite
        Me.optIRRTPubNewspaper.enabled = True
        Me.optIRRTPubWebsite.enabled = True
        Me.lblIRDClick.enabled = True
        On Error Resume Next
        DisableLoanOptions
        Me.txtIRSplitRate.SetFocus
    Else
        Me.txtIRSplitRate.Text = ""
        Me.txtIRSplitRate.enabled = False
        Me.txtIRSplitRate2.Text = ""
        Me.txtIRSplitRate2.enabled = False
        Me.txtIRSplitPrime.Text = ""
        Me.txtIRSplitPrime.enabled = False
        Me.txtIRSplitPercent.Text = ""
        Me.txtIRSplitPercent.enabled = False
        Me.txtIRSplitPercent2.Text = ""
        Me.txtIRSplitPercent2.enabled = False
        Me.txtIRSplitRate.BackColor = myGray
        Me.txtIRSplitRate2.BackColor = myGray
        Me.txtIRSplitPrime.BackColor = myGray
        Me.txtIRSplitPercent.BackColor = myGray
        Me.txtIRSplitPercent2.BackColor = myGray
        Me.lblIRSplit4.BackColor = myGray
        Me.lblIRSplit1.enabled = False
        Me.lblIRSplit2.enabled = False
        Me.lblIRSplit3.enabled = False
        Me.lblIRSplit4.enabled = False
        Me.lblIRSplit5.enabled = False
        Me.lblIRSplit6.enabled = False
        Me.lblIRSplit7.enabled = False
        Me.lblIRSplit8.enabled = False
        Me.txtIRRTPublisher.enabled = False
        Me.txtIRRTPublisher.BackColor = myGray
        Me.optIRRTPubNewspaper.enabled = False
        Me.optIRRTPubWebsite.enabled = False
        Me.lblIRDClick.enabled = False
        DisableLoanOptions
        Me.cmdIROverPrimeInfo.enabled = False
    End If
End Sub

Private Sub optIRTwoFixed_Change()
    If Me.optIRTwoFixed.Value = True Then
        Me.lblIRSplit1.Caption = "Interest Rate on"
        Me.txtIRSplitRate.enabled = True
        Me.txtIRSplitRate2.enabled = True
        Me.txtIRSplitPrime.enabled = False
        Me.txtIRSplitPercent.enabled = True
        Me.txtIRSplitPercent2.enabled = True
        Me.txtIRSplitRate.BackColor = vbWhite
        Me.txtIRSplitRate2.BackColor = vbWhite
        Me.txtIRSplitPrime.BackColor = myGray
        Me.txtIRSplitPercent.BackColor = vbWhite
        Me.txtIRSplitPercent2.BackColor = vbWhite
        Me.lblIRSplit4.BackColor = myGray
        Me.lblIRSplit1.enabled = True
        Me.lblIRSplit2.enabled = True
        Me.lblIRSplit3.enabled = True
        Me.lblIRSplit4.enabled = False
        Me.lblIRSplit5.enabled = False
        Me.lblIRSplit6.enabled = True
        Me.lblIRSplit7.enabled = True
        Me.lblIRSplit8.enabled = True
        Me.lblIRSplit9.enabled = False
        Me.txtIRRTPublisher.enabled = False
        Me.txtIRRTPublisher.BackColor = myGray
        Me.optIRRTPubNewspaper.enabled = False
        Me.optIRRTPubWebsite.enabled = False
        Me.lblIRDClick.enabled = False
        Me.txtIRRTPublisher.Text = ""
        DisableLoanOptions
        On Error Resume Next
        Me.txtIRSplitRate.SetFocus
    Else
        Me.txtIRSplitRate.Text = ""
        Me.txtIRSplitRate.enabled = False
        Me.txtIRSplitRate2.Text = ""
        Me.txtIRSplitRate2.enabled = False
        Me.txtIRSplitPrime.Text = ""
        Me.txtIRSplitPrime.enabled = False
        Me.txtIRSplitPercent.Text = ""
        Me.txtIRSplitPercent.enabled = False
        Me.txtIRSplitPercent2.Text = ""
        Me.txtIRSplitPercent2.enabled = False
        Me.txtIRSplitRate.BackColor = myGray
        Me.txtIRSplitRate2.BackColor = myGray
        Me.txtIRSplitPrime.BackColor = myGray
        Me.txtIRSplitPercent.BackColor = myGray
        Me.txtIRSplitPercent2.BackColor = myGray
        Me.lblIRSplit4.BackColor = myGray
        Me.lblIRSplit1.enabled = False
        Me.lblIRSplit2.enabled = False
        Me.lblIRSplit3.enabled = False
        Me.lblIRSplit4.enabled = False
        Me.lblIRSplit5.enabled = False
        Me.lblIRSplit6.enabled = False
        Me.lblIRSplit7.enabled = False
        Me.lblIRSplit8.enabled = False
        Me.lblIRSplit9.enabled = False
        Me.txtIRRTPublisher.enabled = False
        Me.txtIRRTPublisher.BackColor = myGray
        Me.optIRRTPubNewspaper.enabled = False
        Me.optIRRTPubWebsite.enabled = False
        Me.lblIRDClick.enabled = False
        Me.txtIRRTPublisher.Text = ""
        DisableLoanOptions
    End If
End Sub

Private Sub optIRVariable_Change()
    If Me.optIRVariable.Value = True Then
        Me.txtIRVariable.enabled = True
        Me.lblIRVariable.enabled = True
        Me.txtIRVariable.BackColor = vbWhite
        Me.txtIRVariableOverPrime.enabled = True
        Me.lblIRVariableOverPrime.enabled = True
        Me.txtIRVariableOverPrime.BackColor = vbWhite
        Me.lblIRVariableOverPrime.BackColor = vbWhite
        If Me.lblIRVariableOverPrime.Text = "% Over Prime" Then
            Me.optIRRTPubNewspaper.enabled = True
            Me.optIRRTPubWebsite.enabled = True
            Me.txtIRRTPublisher.enabled = True
            Me.txtIRRTPublisher.BackColor = vbWhite
            Me.txtIRRTPublisher.Text = ""
        End If
        Me.lblIRSplit9.enabled = True
        On Error Resume Next
        DisableLoanOptions
        Me.txtIRVariable.SetFocus
    Else
        Me.txtIRVariable.Text = ""
        Me.txtIRVariable.enabled = False
        Me.lblIRVariable.enabled = False
        Me.txtIRVariable.BackColor = myGray
        Me.txtIRVariableOverPrime.Text = ""
        Me.txtIRVariableOverPrime.enabled = False
        Me.lblIRVariableOverPrime.enabled = False
        Me.txtIRVariableOverPrime.BackColor = myGray
        Me.lblIRVariableOverPrime.BackColor = myGray
        Me.lblIRVariableOverPrime.Text = "% Over Prime"
        Me.optIRRTPubNewspaper.enabled = False
        Me.optIRRTPubWebsite.enabled = False
        Me.txtIRRTPublisher.enabled = False
        Me.txtIRRTPublisher.BackColor = myGray
        Me.txtIRRTPublisher.Text = ""
        Me.lblIRSplit9.enabled = False
        Me.lblIRSplit5.enabled = False
        Me.cmdIROverPrimeInfo.enabled = False
        DisableLoanOptions
    End If
End Sub

Private Sub optOIGeneralRule_Click()
    Me.txtOIText.Text = 1
    Me.txtOITermPlusYears.Text = ""
    Me.txtOITermPlusYears.enabled = False
    Me.txtOITermPlusYears.BackColor = myGray
End Sub

Private Sub optOILeasehold_Click()
    Me.txtOIText.Text = 3
    Me.txtOITermPlusYears.enabled = Me.optOILeasehold.Value
    If Me.optOILeasehold.Value = False Then
        Me.txtOITermPlusYears.Text = ""
        Me.txtOITermPlusYears.BackColor = myGray
    Else
        Me.txtOITermPlusYears.BackColor = vbWhite
        Me.txtOITermPlusYears.SetFocus
    End If
End Sub

Private Sub optOILessThanTerm_Click()
    Me.txtOIText.Text = 2
    Me.txtOITermPlusYears.Text = ""
    Me.txtOITermPlusYears.enabled = False
    Me.txtOITermPlusYears.BackColor = myGray
End Sub

Private Sub optOINone_Click()
    Me.txtOIText.Text = 0
    Me.txtOITermPlusYears.Text = ""
    Me.txtOITermPlusYears.enabled = False
    Me.txtOITermPlusYears.BackColor = myGray
End Sub

Private Sub optOIPresentLocation_Click()
    Me.txtOIText.Text = 4
    Me.txtOITermPlusYears.Text = ""
    Me.txtOITermPlusYears.enabled = False
    Me.txtOITermPlusYears.BackColor = myGray
End Sub

Private Sub optOLORecaptureOver_Click()
    If Me.optOLORecaptureOver.Value = True Then
        Me.optOLORecapturePct.TabStop = True
        Me.txtOLORecaptureAmt.TabStop = True
        Me.txtOLORecaptureAmt.enabled = True
        Me.txtOLORecaptureAmt.BackColor = vbWhite
        Me.txtOLORecapturePct.Text = ""
        Me.txtOLORecapturePct.enabled = False
        Me.txtOLORecapturePct.BackColor = myGray
        Me.lblOLOPctOf.visible = False
        Me.lblOLORecaptureOver.enabled = True
        On Error Resume Next
        Me.txtOLORecaptureAmt.SetFocus
    End If
End Sub

Private Sub optOLORecapturePct_Click()
    If Me.optOLORecapturePct.Value = True Then
        Me.optOLORecaptureOver.TabStop = True
        Me.lblOLOPctOf.visible = True
        Me.lblOLOPctOf.enabled = True
        Me.txtOLORecapturePct.enabled = True
        Me.txtOLORecapturePct.BackColor = vbWhite
        Me.lblOLORecapture.enabled = True
        Me.lblOLORecaptureOver.enabled = False
        Me.txtOLORecaptureAmt.TabStop = False
        Me.txtOLORecaptureAmt.enabled = False
        Me.txtOLORecaptureAmt.BackColor = myGray
        On Error Resume Next
        Me.txtOLORecapturePct.SetFocus
    Else
        Me.lblOLOPctOf.visible = False
        Me.lblOLOPctOf.enabled = False
        Me.txtOLORecapturePct.enabled = False
        Me.txtOLORecapturePct.BackColor = myGray
        Me.lblOLORecapture.enabled = False
        Me.lblOLORecaptureOver.enabled = True
        Me.txtOLORecaptureAmt.enabled = True
        Me.txtOLORecaptureAmt.BackColor = vbWhite
        On Error Resume Next
        Me.txtOLORecaptureAmt.SetFocus
    End If
End Sub

Public Sub PageSetup(PageNo, Optional CtrlsOnly As Integer)
    Dim xx As Integer
    Dim vName As String
    Me.cmdFinish.visible = True
    Me.cmdNext.visible = True
    Me.cmdback.visible = True
    Me.cmdFirst.visible = True
    Me.cmdPanelHelp.visible = True
    Me.cmdCancel.visible = True
    Me.lblHelp.visible = True
    Me.lblCancel.visible = True
    Me.lblStart.visible = True
    Me.lblBack.visible = True
    Me.lblNext.visible = True
    Me.lblFinish.visible = True
    Select Case PageNo
    Case SectionStart
        Me.cmdFirst.enabled = False
        Me.cmdback.enabled = False
        If retCheckInput = False Then
            Me.cmdNext.enabled = True
            Me.cmdNext.Default = True
        End If
        Me.cmdFinish.enabled = False
        Me.cmdWizardShortCut.visible = True
        If SectionStart = Me.mpgWizard.Pages("pgUP").index Then
            Me.cmdFirst.enabled = False
            Me.cmdWizardShortCut.visible = True
            Me.cmdback.enabled = False
            Me.cmdNext.enabled = False
            If UPEdited = True Then
                Me.cmdFinish.enabled = False
                If Me.cbxUPCategory.ListIndex = 21 Then
                    Me.cmdUPNew.enabled = False
                ElseIf Me.cbxUPCategory.ListIndex = 22 Or Me.cbxUPCategory.ListIndex = 23 Then
                    Me.cmdFinish.enabled = True
                    Me.cmdUPNew.enabled = False
                Else
                    Me.cmdUPNew.enabled = True
                End If
            Else
                If Me.txtUPRemainingAmount.Text = "0.00" Then
                    Me.cmdFinish.enabled = True
                    Me.cmdFinish.Default = True
                    Me.cmdUPNew.enabled = False
                    Me.cmdUPShowList.enabled = True
                Else
                    Me.cmdFinish.enabled = False
                    If Me.cbxUPCategory.ListIndex = 21 Then
                        Me.cmdUPNew.enabled = False
                    ElseIf Me.cbxUPCategory.ListIndex = 22 Or Me.cbxUPCategory.ListIndex = 23 Then
                        Me.cmdFinish.enabled = True
                        Me.cmdUPNew.enabled = False
                    Else
                        Me.cmdUPNew.enabled = True
                    End If
                End If
            End If
        End If
        If SectionStart = Me.mpgWizard.Pages("pgCC1").index Then
            Me.cmdNext.enabled = False
            Me.cmdFinish.enabled = True
            Me.cmdFinish.Default = True
            On Error Resume Next
            Me.txtCCSelectMsg.SetFocus
'            Me.optCCGuaranteesOnly.SetFocus
    End If
        If SectionStart = Me.mpgWizard.Pages("pgLI1").index Then
            Me.cmdLIWizTips.visible = True
        Else
            Me.cmdLIWizTips.visible = False
        End If
        If SectionStart = Me.mpgWizard.Pages("pgRT2").index Then
            Me.cmdNext.enabled = False
            Me.cmdFinish.enabled = True
            Me.cmdFinish.Default = True
            On Error Resume Next
            Me.txtRTCurtailment.SetFocus
        End If
        Select Case CCid
        Case 293
            Me.cmdNext.enabled = False
            Me.cmdFinish.enabled = True
            Me.cmdFinish.Default = True
        Case 1, 2, 4, 5, 22, 23, 24
            Me.cmdFirst.enabled = True
            Me.cmdback.enabled = True
            Me.cmdNext.enabled = True
            Me.cmdNext.Default = True
            Me.cmdFinish.enabled = False
        Case Else
        End Select
    Case (SectionStart + 1) To SectionEnd
        If PageNo = Me.mpgWizard("pgPleaseWait").index - 1 Or PageNo = SectionEnd Then
            Me.cmdFirst.enabled = True
            Me.cmdback.enabled = True
            Me.cmdNext.enabled = False
            Me.cmdFinish.enabled = True
            Me.cmdFinish.Default = True
        Else
            Me.cmdFirst.enabled = True
            Me.cmdback.enabled = True
            Me.cmdNext.enabled = True
            Me.cmdNext.Default = True
            Me.cmdFinish.enabled = False
        End If
        Select Case CCid
        Case 292
            Me.optGTBalance.Value = True
            Me.txtGTBalance.SetFocus
            Me.cmdFirst.enabled = False
            Me.cmdback.enabled = False
            Me.cmdCancel.enabled = False
            Me.cmdNext.enabled = False
            Me.cmdFinish.enabled = True
            Me.cmdFinish.Default = True
        Case 293
            Me.optGTBalance.Value = True
            Me.txtGTBalance.SetFocus
            Me.cmdNext.enabled = True
            Me.cmdNext.Default = True
            Me.cmdFinish.enabled = False
        Case 1, 2, 4, 5, 22, 23, 24
            Me.cmdFirst.enabled = False
            Me.cmdback.enabled = False
            Me.cmdNext.enabled = False
            Me.cmdFinish.enabled = True
            Me.cmdFinish.Default = True
        Case Else
        End Select
    Case 95  'Finish enabled, Cancel Hidden
        Me.cmdCancel.visible = False
        Me.lblCancel.visible = False
        Me.cmdFirst.visible = False
        Me.lblStart.visible = False
        Me.cmdback.visible = False
        Me.lblBack.visible = False
        Me.cmdNext.visible = False
        Me.lblNext.visible = False
        Me.cmdFinish.enabled = True
        Me.cmdFinish.Default = True
        Me.lblFinish.visible = True
        Exit Sub
    Case 96  'Finish enabled
        Me.cmdCancel.enabled = False
        Me.cmdFirst.enabled = False
        Me.cmdback.enabled = False
        Me.cmdNext.enabled = False
        Me.cmdFinish.enabled = True
        Me.cmdFinish.Default = True
    Case 97  'Finish
        Me.cmdFirst.enabled = False
        Me.cmdback.enabled = False
        Me.cmdNext.enabled = False
        Me.cmdFinish.enabled = False
    Case 98  'Finish
        Me.cmdFirst.enabled = True
        Me.cmdback.enabled = True
        Me.cmdNext.enabled = False
        Me.cmdFinish.enabled = True
        Me.cmdFinish.Default = True
    Case 99  'Please Wait
        Me.cmdAddressList.visible = False
        Me.cmdFirst.visible = False
        Me.cmdback.visible = False
        Me.cmdCancel.visible = False
        Me.cmdFinish.visible = False
        Me.cmdNext.visible = False
        Me.cmdPanelHelp.visible = False
        Me.prgPleaseWait.visible = True
        Me.lblHelp.visible = False
        Me.lblCancel.visible = False
        Me.lblStart.visible = False
        Me.lblBack.visible = False
        Me.lblNext.visible = False
        Me.lblFinish.visible = False
        Me.Repaint
        Exit Sub
    Case (SectionEnd + 2)
        Me.cmdFinish.visible = False
        Me.cmdNext.visible = False
        Me.cmdback.visible = False
        Me.cmdFirst.visible = False
        Me.cmdPanelHelp.visible = False
        Me.cmdAddressList.visible = False
        Me.cmdCancel.visible = False
    Case Else
    End Select
    Application.ScreenUpdating = False

    If CtrlsOnly = 1 Then
    Else
        If frmMain.visible = True Then
            Select Case Me.mpgWizard.Pages(ActiveControl.Value).Name
            Case "pgLI1"
                If UpdateLI1 = 0 Then
                    UpdateControls "pgLI1"
                End If
                Me.cmdWizardShortCut.visible = True
            Case "pgLI2"
                If UpdateLI2 = 0 Then
                    UpdateControls "pgLI2"
                End If
                Me.cmdWizardShortCut.visible = False
            Case "pgLI3"
                If UpdateLI3 = 0 Then
                    UpdateControls "pgLI3"
                End If
                Me.cmdWizardShortCut.visible = False
            Case "pgRT1"
                If UpdateRT1 = 0 Then
                    UpdateControls "pgRT1"
                End If
                Me.cmdWizardShortCut.visible = True
            Case "pgRT2"
                If UpdateRT2 = 0 Then
                    UpdateControls "pgRT2"
                End If
                Me.cmdWizardShortCut.visible = False
            Case "pgRT3"
                If UpdateRT3 = 0 Then
                    UpdateControls "pgRT3"
                End If
                Me.cmdWizardShortCut.visible = False
            Case "pgRT4"
                If UpdateRT4 = 0 Then
                    UpdateControls "pgRT4"
                End If
                Me.cmdWizardShortCut.visible = False
            Case "pgUP"
                If UpdateUP = 0 Then
                    UpdateControls "pgUP"
                End If
            Case "pgCC1"
                If UpdateCC1 = 0 Then
                    UpdateControls "pgCC1"
                    CommandSetup "EnableFinish"
                End If
                Me.cmdWizardShortCut.visible = True
            Case "pgACI1"
                If UpdateACI1 = 0 Then
                    UpdateControls "pgACI1"
                    UpdateChangeRP 2, 1, "AC1", "RPFirst001", "RPLast001"
                End If
                Me.cmdWizardShortCut.visible = True
            Case "pgACI2"
                If UpdateACI2 = 0 Then
                    UpdateControls "pgACI2"
                End If
                Me.cmdWizardShortCut.visible = False
            Case "pgACI3"
                If UpdateACI3 = 0 Then
                    UpdateControls "pgACI3"
                End If
                Me.cmdWizardShortCut.visible = False
            Case "pgACI4"
                If UpdateACI4 = 0 Then
                    UpdateControls "pgACI4"
                    UpdateChangeRP 9, 1, "BOC", "RPFirst009", "RPLast009"
                    UpdateChangeRP 3, 1, "BOC", "RPFirst005", "RPLast005"
                    UpdateChangeRP 4, 1, "AC4", "RPFirst011", "RPLast011"
                End If
                Me.cmdWizardShortCut.visible = False
            Case "pgACII1"
                If UpdateACII1 = 0 Then
                    UpdateControls "pgACII1"
                End If
                Me.cmdWizardShortCut.visible = True
            Case "pgACII2"
                If UpdateACII2 = 0 Then
                    UpdateControls "pgACII2"
                    UpdateChangeRP 5, 5, "AC2", "RPFirst005", "RPLast005"
                    UpdateChangeRP 6, 6, "AC2", "RPFirst006", "RPLast006"
                End If
                Me.cmdWizardShortCut.visible = False
            Case "pgACII3"
                If UpdateACII3 = 0 Then
                    UpdateControls "pgACII3"
                End If
                Me.cmdWizardShortCut.visible = False
            Case Else
            End Select
            Me.lblHelp.visible = True
            Me.lblCancel.visible = True
            Me.lblStart.visible = True
            Me.lblBack.visible = True
            Me.lblNext.visible = True
            Me.lblFinish.visible = True
        End If
    End If
End Sub
Sub UpdateChangeRP(RPIDx As Integer, ArrayID As Integer, dlgCtrlPre As String, BookFirst As String, BookLast As String)

'=============================================================
' frmMain.UpdateChangeRP
' ArrayID (Integer)
' dlgCtrlPre (String)
' BookFirst (String)
' BookLast (String)
' Sub
'-------------------------------------------------------------
' Modified 09-17-2001 WordBasic to VBA
' Author : Daniel H. Smith, Programmer/Analyst
' Notes :  Complete
'-------------------------------------------------------------
' Revision History
'-------------------------------------------------------------
' 09-17-2001 DHS: Completed ... Watch
'=============================================================
' End Code Header block

    Application.ScreenUpdating = False
    Dim cmdCur As Integer
    Dim cmdFirst As Integer
    Dim cmdLast As Integer
    Dim SubCmdL As String
    Dim SubCmdR As String
    Dim SubCmdD As String

    SubCmdL = "Left"
    SubCmdR = "Right"
    SubCmdD = "Delete"

    If RPIDx = 3 Then
        SubCmdL = "LeftAF"
        SubCmdR = "RightAF"
        SubCmdD = "DeleteAF"
    End If

    If RPIDx = 4 Then
        SubCmdL = "Left"
        SubCmdR = "Right"
        SubCmdD = "Delete"
    End If

    If RPIDx = 5 Then
        SubCmdL = "LeftSA"
        SubCmdR = "RightSA"
        SubCmdD = "DeleteSA"
    End If

    If RPIDx = 6 Then
        SubCmdL = "LeftAppr"
        SubCmdR = "RightAppr"
        SubCmdD = "DeleteAppr"
    End If

    If RPIDx = 9 Then
        SubCmdL = "LeftNC"
        SubCmdR = "RightNC"
        SubCmdD = "DeleteNC"
    End If
    
    If RPIDx = 7 Then
        cmdCur = CurIdx
        cmdFirst = FirstIdx
        cmdLast = LastIdx
    Else
        cmdCur = Val(RP__(RPIDx, 0))
        cmdFirst = Val(ActiveDocument.Bookmarks(BookFirst).Range.Text)
        cmdLast = Val(ActiveDocument.Bookmarks(BookLast).Range.Text)
    End If

    If cmdLast <> 1 Then
        If cmdCur = cmdFirst Then
            Me("cmd" & dlgCtrlPre & SubCmdL).enabled = False
            Me("cmd" & dlgCtrlPre & SubCmdR).enabled = True
            Me("cmd" & dlgCtrlPre & SubCmdD).enabled = True
        End If
        If cmdCur > cmdFirst And cmdCur < cmdLast Then
            Me("cmd" & dlgCtrlPre & SubCmdL).enabled = True
            Me("cmd" & dlgCtrlPre & SubCmdR).enabled = True
            Me("cmd" & dlgCtrlPre & SubCmdD).enabled = True
        End If
        If cmdCur = cmdLast Then
            Me("cmd" & dlgCtrlPre & SubCmdL).enabled = True
            Me("cmd" & dlgCtrlPre & SubCmdR).enabled = False
            Me("cmd" & dlgCtrlPre & SubCmdD).enabled = True
        End If
    Else
        Me("cmd" & dlgCtrlPre & SubCmdL).enabled = False
        Me("cmd" & dlgCtrlPre & SubCmdR).enabled = False
        Me("cmd" & dlgCtrlPre & SubCmdD).enabled = True
    End If
    cmdFirst = Val(ActiveDocument.Bookmarks(BookFirst).Range.Text)
    cmdLast = Val(ActiveDocument.Bookmarks(BookLast).Range.Text)
    If RPIDx = 7 Then
        If cmdLast > 1 And Me.cmdUPNew.Caption = "New" Then
            Me.cmdUPShowList.enabled = True
            Me.cmdUPNew.Accelerator = "N"
            If Me.cbxUPCategory.ListIndex = 21 Then
                Me.cmdUPLeft.enabled = False
                Me.cmdUPRight.enabled = False
                Me.cmdUPDelete.enabled = False
            End If
        ElseIf cmdLast <= 1 And Me.cmdUPNew.Caption = "Save" Then
            Me.cmdUPLeft.enabled = False
            Me.cmdUPRight.enabled = False
            Me.cmdUPShowList.enabled = False
            Me.cmdUPNew.Accelerator = "S"
        ElseIf Me.cmdUPNew.Caption = "Save" And Me.cbxUPCategory.ListIndex = 21 Then
            Me.cmdUPLeft.enabled = False
            Me.cmdUPRight.enabled = False
            Me.cmdUPDelete.enabled = False
            Me.cmdUPNew.enabled = False
        End If
    End If
End Sub

Private Sub SecurityMsg()
    Me.cbxCCA.visible = False
    Me.lblCCSecurity1.visible = True
    Me.lblCCSecurity2.visible = True
    Me.lblCCSecurity3.visible = True
    Me.txtCCSelectMsg.visible = False
'    Me.optCCGuaranteesOnly.visible = False
    Me.lblCCSecurity1.Width = 340.5
    Me.lblCCSecurity2.Width = 340.5
    Me.lblCCSecurity3.Width = 340.5
    If Me.chkCCNoteSecured.Value = True Then
        Me.lblCCSecurity1.Caption = "  The option for a Secured Note has been selected."
    Else
        Me.lblCCSecurity1.Caption = "  The option for a Full or Limited Secured Guarantee has been selected."
    End If
    Me.lblCCSecurity2.Caption = "  Additional security is required.  Select a security from Group B, C, D or E, below."
    Me.lblCCSecurity3.Caption = "  This Guarantee is Secured by:"
    Me.cmdCCInfo.visible = False

End Sub

Public Sub SetProgScale()
    For Each txtProg In Controls
        If InStr(1, txtProg.Name, "txtProg") Then
            Me(txtProg.Name).BackColor = vbRed  '&H800000
        End If
    Next  'Next program control
End Sub

Private Sub txtBOCFrom_Change()
    If Len(Me.txtBD5From.Text) > 0 Then
        Me.cmdBOCNew.enabled = True
    End If
End Sub

Private Sub txtAC2APAmount_Exit(ByVal Cancel As MSForms.ReturnBoolean)
    curCtrl = "txtAC2APAmount"
    If Me(curCtrl).Text <> "" Then
        If IsNumeric(Me(curCtrl).Text) Then
            InputFormat Me(curCtrl).Name, "TextIsNumber", 2
        Else
            UpdateACII2 = 1
            MyErrorMsg Me.mpgWizard.Value, "Numeric", True, curCtrl
    '        CommandSetup 3
        End If
    End If
End Sub

''Added 6/28/2010 Business Valuation
Private Sub txtACBVAmount_Exit(ByVal Cancel As MSForms.ReturnBoolean)
    curCtrl = "txtAC2BVAmount"
    If Me(curCtrl).Text <> "" Then
        If IsNumeric(Me(curCtrl).Text) Then
            InputFormat Me(curCtrl).Name, "TextIsNumber", 2
        Else
            UpdateACII2 = 1
            MyErrorMsg Me.mpgWizard.Value, "Numeric", True, curCtrl
    '        CommandSetup 3
        End If
    End If
End Sub

Private Sub txtAC2AssetAmount_Exit(ByVal Cancel As MSForms.ReturnBoolean)
    curCtrl = "txtAC2AssetAmount"
    If Me(curCtrl).Text <> "" Then
        If IsNumeric(Me(curCtrl).Text) Then
            InputFormat Me(curCtrl).Name, "TextIsNumber", 2
        Else
            UpdateACII1 = 1
            MyErrorMsg Me.mpgWizard.Value, "Numeric", True, curCtrl
    '        CommandSetup 3
        End If
    End If
End Sub

Private Sub txtAC2CashAmount_Exit(ByVal Cancel As MSForms.ReturnBoolean)
    curCtrl = "txtAC2CashAmount"
    If Me(curCtrl).Text <> "" Then
        If IsNumeric(Me(curCtrl).Text) Then
            InputFormat Me(curCtrl).Name, "TextIsNumber", 2
        Else
            UpdateACII1 = 1
            MyErrorMsg Me.mpgWizard.Value, "Numeric", True, curCtrl
    '        CommandSetup 3
        End If
    End If
End Sub

'Private Sub txtAC2EquityAmount_Exit(ByVal Cancel As MSForms.ReturnBoolean)
'    curCtrl = "txtAC2EquityAmount"
'    If Me(curCtrl).Text <> "" Then
'        If IsNumeric(Me(curCtrl).Text) Then
'            InputFormat Me(curCtrl).Name, "TextIsNumber", 2
'        Else
'            UpdateACII1 = 1
'            MyErrorMsg Me.mpgWizard.Value, "Numeric", True, curCtrl
'    '        CommandSetup 3
'        End If
'    End If
'End Sub

Private Sub txtAC2obAP_Change()
    If Me.txtAC2obAP.Text = "" Then  'Real Estate Default
        Me.optAC2RealEstate.Value = 1
    ElseIf Me.txtAC2obAP.Text = 0 Then  'Real Estate
        Me.optAC2RealEstate.Value = 1
    ElseIf Me.txtAC2obAP.Text = 1 Then  'Equipment
        Me.optAC2Equipment.Value = 1
    ElseIf Me.txtAC2obAP.Text = 3 Then  'Aircraft
        Me.optAC2Aircraft.Value = 1
    ElseIf Me.txtAC2obAP.Text = 2 Then  'Marine
        Me.optAC2Marine.Value = 1
    End If
End Sub

Private Sub txtAC2obSA_Change()
    If Me.txtAC2obSA.Text = "" Then
        Me.cbxAC2Repayment.ListIndex = 0
    ElseIf Me.txtAC2obSA.Text = 0 Then
        Me.cbxAC2Repayment.ListIndex = 0
    ElseIf Me.txtAC2obSA.Text = 1 Then
        Me.cbxAC2Repayment.ListIndex = 1
    ElseIf Me.txtAC2obSA.Text = 2 Then
        Me.cbxAC2Repayment.ListIndex = 2
    ElseIf Me.txtAC2obSA.Text = 3 Then
        Me.cbxAC2Repayment.ListIndex = 3
    ElseIf Me.txtAC2obSA.Text = 4 Then
        Me.cbxAC2Repayment.ListIndex = 4
    End If
End Sub

Private Sub txtAC2SAAmount_Exit(ByVal Cancel As MSForms.ReturnBoolean)
    curCtrl = "txtAC2SAAmount"
    If Me(curCtrl).Text <> "" Then
        If IsNumeric(Me(curCtrl).Text) Then
            InputFormat Me(curCtrl).Name, "TextIsNumber", 2
        Else
            UpdateACII2 = 1
            MyErrorMsg Me.mpgWizard.Value, "Numeric", True, curCtrl
    '        CommandSetup 3
        End If
    End If
End Sub

Private Sub txtAC2StandbyAmount_Exit(ByVal Cancel As MSForms.ReturnBoolean)
    curCtrl = "txtAC2StandbyAmount"
    If Me(curCtrl).Text <> "" Then
        If IsNumeric(Me(curCtrl).Text) Then
            InputFormat Me(curCtrl).Name, "TextIsNumber", 2
        Else
            UpdateACII1 = 1
            MyErrorMsg Me.mpgWizard.Value, "Numeric", True, curCtrl
    '        CommandSetup 3
        End If
    End If
End Sub

Private Sub txtBD5Amount_Exit(ByVal Cancel As MSForms.ReturnBoolean)
    curCtrl = "txtBD5Amount"
    If Me(curCtrl).Text <> "" Then
        If IsNumeric(Me(curCtrl).Text) Then
            InputFormat Me(curCtrl).Name, "TextIsNumber", 2
        Else
            UpdateACI4 = 1
            MyErrorMsg Me.mpgWizard.Value, "Numeric", True, curCtrl
    '        CommandSetup 3
        End If
    End If
End Sub

Private Sub txtBD5From_Change()
    If Len(Me.txtBD5From.Text) > 0 Then
        Me.cmdBOCNewAF.enabled = True
    End If
End Sub

Private Sub txtBD5Term_Exit(ByVal Cancel As MSForms.ReturnBoolean)
    curCtrl = "txtBD5Term"
    If Me(curCtrl).Text <> "" Then
        If IsNumeric(Me(curCtrl).Text) Then
            InputFormat Me(curCtrl).Name, "TextIsNumber", 1
        Else
            UpdateACI4 = 1
            MyErrorMsg Me.mpgWizard.Value, "Numeric", True, curCtrl
        End If
    End If
End Sub

Private Sub txtC7Amount_Exit(ByVal Cancel As MSForms.ReturnBoolean)
    curCtrl = "txtC7Amount"
    If Me(curCtrl).Text <> "" Then
        If IsNumeric(Me(curCtrl).Text) Then
            InputFormat Me(curCtrl).Name, "TextIsNumber", 2
        Else
            MyErrorMsg Me.mpgWizard.Value, "Numeric", True, curCtrl
        End If
    End If
End Sub

Private Sub txtC7MaxAmount_Exit(ByVal Cancel As MSForms.ReturnBoolean)
    curCtrl = "txtC7MaxAmount"
    If Me(curCtrl).Text <> "" Then
        If IsNumeric(Me(curCtrl).Text) Then
            InputFormat Me(curCtrl).Name, "TextIsNumber", 2
        Else
            MyErrorMsg Me.mpgWizard.Value, "Numeric", True, curCtrl
        End If
    End If
End Sub

Private Sub txtCACompensation_Exit(ByVal Cancel As MSForms.ReturnBoolean)
    curCtrl = "txtCACompensation"
    If Me(curCtrl).Text <> "" Then
        If IsNumeric(Me(curCtrl).Text) Then
            InputFormat Me(curCtrl).Name, "TextIsNumber", 2
        Else
            UpdateACII3 = 1
            MyErrorMsg Me.mpgWizard.Value, "Numeric", True, curCtrl
        End If
    End If
End Sub

Private Sub txtCAFixedAmount_Exit(ByVal Cancel As MSForms.ReturnBoolean)
    curCtrl = "txtCAFixedAmount"
    If Me(curCtrl).Text <> "" Then
        If IsNumeric(Me(curCtrl).Text) Then
            InputFormat Me(curCtrl).Name, "TextIsNumber", 2
        Else
            UpdateACII3 = 1
            MyErrorMsg Me.mpgWizard.Value, "Numeric", True, curCtrl
        End If
    End If
End Sub

Private Sub txtcbBD5Subordinate_Change()
    If Me.txtcbBD5Subordinate.Text = "" Then
        Me.optBD5SubordinateA.Value = 1
        Me.optBD5SubordinateA.SetFocus
    ElseIf Me.txtcbBD5Subordinate.Text = 0 Then
        Me.optBD5SubordinateA.Value = 1
    ElseIf Me.txtcbBD5Subordinate.Text = 1 Then
        Me.optBD5SubordinateB.Value = 1
    ElseIf Me.txtcbBD5Subordinate.Text = 2 Then
        Me.optBD5SubordinateC.Value = 1
    ElseIf Me.txtcbBD5Subordinate.Text = 3 Then
        Me.optBD5SubordinateD.Value = 1
    End If
End Sub

Private Sub txtBD4Principal_Change()
    If Len(Me.txtBD4Principal.Text) > 0 Then
        Me.cmdBOCNew.enabled = True
    End If
End Sub

Private Sub txtCC_C1EV1A_Exit(ByVal Cancel As MSForms.ReturnBoolean)
    curCtrl = "txtCC_C1EV1A"
    If Me(curCtrl).Text <> "" Then
        If IsNumeric(Me(curCtrl).Text) Then
            InputFormat Me(curCtrl).Name, "TextIsNumber", 2
        Else
            MyErrorMsg Me.mpgWizard.Value, "Numeric", True, curCtrl
        End If
    Else
        MyErrorMsg Me.mpgWizard.Value, "Blank", True, curCtrl
    End If
End Sub

Private Sub txtCCCDValue_Exit(ByVal Cancel As MSForms.ReturnBoolean)
    curCtrl = "txtCCCDValue"
    pgOption = Me.mpgCCOptions.Value
    If Me(curCtrl).Text <> "" Then
        If IsNumeric(Me(curCtrl).Text) Then
            InputFormat Me(curCtrl).Name, "TextIsNumber", 2
        Else
            UpdateCC1 = 1
            MyErrorMsg Me.mpgWizard.Value, "Numeric", True, curCtrl, , , pgOption
        End If
    End If
End Sub

Private Sub txtCCContractAmount_Exit(ByVal Cancel As MSForms.ReturnBoolean)
    curCtrl = "txtCCContractAmount"
    pgOption = Me.mpgCCOptions.Value
    If Me(curCtrl).Text <> "" Then
        If IsNumeric(Me(curCtrl).Text) Then
            InputFormat Me(curCtrl).Name, "TextIsNumber", 2
        Else
            UpdateCC1 = 1
            MyErrorMsg Me.mpgWizard.Value, "Numeric", True, curCtrl, , , pgOption
        End If
    End If
End Sub

Private Sub txtCCContractDate_Exit(ByVal Cancel As MSForms.ReturnBoolean)
    curCtrl = "txtCCContractDate"
    pgOption = Me.mpgCCOptions.Value
    If Me(curCtrl).Text <> "" Then
        If IsDate(Me(curCtrl).Text) Then
            InputFormat Me(curCtrl).Name, "TextIsDate", 0
        Else
            If ErrCheck = 0 Then
                Cancel = True
                ErrCheck = 0
                UpdateCC1 = 1
                MyErrorMsg Me.mpgWizard.Value, "Date", False, curCtrl, , , pgOption
            End If
        End If
    End If
End Sub

Private Sub txtCCFeeTitleAmount1_Exit(ByVal Cancel As MSForms.ReturnBoolean)
    curCtrl = "txtCCFeeTitleAmount1"
    If Me(curCtrl).Text <> "" Then
        If IsNumeric(Me(curCtrl).Text) Then
            InputFormat Me(curCtrl).Name, "TextIsNumber", 2
        Else
            UpdateCC1 = 1
            MyErrorMsg Me.mpgWizard.Value, "Numeric", True, curCtrl
        End If
    End If
End Sub

Private Sub txtCCFirstLHAmount_Exit(ByVal Cancel As MSForms.ReturnBoolean)
    curCtrl = "txtCCFirstLHAmount"
    pgOption = Me.mpgCCOptions.Value
    If Me(curCtrl).Text <> "" Then
        If IsNumeric(Me(curCtrl).Text) Then
            InputFormat Me(curCtrl).Name, "TextIsNumber", 2
        Else
            UpdateCC1 = 1
            MyErrorMsg Me.mpgWizard.Value, "Numeric", True, curCtrl, , , pgOption
        End If
    End If
End Sub

Private Sub txtCCFirstLHRevAmt_Exit(ByVal Cancel As MSForms.ReturnBoolean)
    curCtrl = "txtCCFirstLHRevAmt"
    pgOption = Me.mpgCCOptions.Value
    If Me(curCtrl).Text <> "" Then
        If IsNumeric(Me(curCtrl).Text) Then
            InputFormat Me(curCtrl).Name, "TextIsNumber", 2
        Else
            UpdateCC1 = 1
            MyErrorMsg Me.mpgWizard.Value, "Numeric", True, curCtrl, , , pgOption
        End If
    End If
End Sub

Private Sub txtCCFourthLHAmount_Exit(ByVal Cancel As MSForms.ReturnBoolean)
    curCtrl = "txtCCFourthLHAmount"
    pgOption = Me.mpgCCOptions.Value
    If Me(curCtrl).Text <> "" Then
        If IsNumeric(Me(curCtrl).Text) Then
            InputFormat Me(curCtrl).Name, "TextIsNumber", 2
        Else
            UpdateRT4 = 1
            MyErrorMsg Me.mpgWizard.Value, "Numeric", True, curCtrl, , , pgOption
        End If
    End If
End Sub

Private Sub txtCCFourthLHRevAmt_Exit(ByVal Cancel As MSForms.ReturnBoolean)
    curCtrl = "txtCCFourthLHRevAmt"
    pgOption = Me.mpgCCOptions.Value
    If Me(curCtrl).Text <> "" Then
        If IsNumeric(Me(curCtrl).Text) Then
            InputFormat Me(curCtrl).Name, "TextIsNumber", 2
        Else
            UpdateCC1 = 1
            MyErrorMsg Me.mpgWizard.Value, "Numeric", True, curCtrl, , , pgOption
        End If
    End If
End Sub

Private Sub txtCCGovContractAmount_Exit(ByVal Cancel As MSForms.ReturnBoolean)
    curCtrl = "txtCCGovContractAmount"
    pgOption = Me.mpgCCOptions.Value
    If Me(curCtrl).Text <> "" Then
        If IsNumeric(Me(curCtrl).Text) Then
            InputFormat Me(curCtrl).Name, "TextIsNumber", 2
        Else
            UpdateCC1 = 1
            MyErrorMsg Me.mpgWizard.Value, "Numeric", True, curCtrl, , , pgOption
        End If
    End If
End Sub

Private Sub txtCCLeaseDate3_Exit(ByVal Cancel As MSForms.ReturnBoolean)
    curCtrl = "txtCCLeaseDate3"
    If Me(curCtrl).Text <> "" Then
        If IsDate(Me(curCtrl).Text) Then
            InputFormat Me(curCtrl).Name, "TextIsDate", 0
        Else
            Cancel = True
            MyErrorMsg Me.mpgWizard.Value, "Date", False, curCtrl
        End If
    End If
End Sub

Private Sub txtCCLienAmount2_Exit(ByVal Cancel As MSForms.ReturnBoolean)
    curCtrl = "txtCCLienAmount2"
    If Me(curCtrl).Text <> "" Then
        If IsNumeric(Me(curCtrl).Text) Then
            InputFormat Me(curCtrl).Name, "TextIsNumber", 2
        Else
            UpdateCC1 = 1
            MyErrorMsg Me.mpgWizard.Value, "Numeric", True, curCtrl
        End If
    End If
End Sub

Private Sub txtCCLienAmount3_Exit(ByVal Cancel As MSForms.ReturnBoolean)
    curCtrl = "txtCCLienAmount3"
    If Me(curCtrl).Text <> "" Then
        If IsNumeric(Me(curCtrl).Text) Then
            InputFormat Me(curCtrl).Name, "TextIsNumber", 2
        Else
            UpdateCC1 = 1
            MyErrorMsg Me.mpgWizard.Value, "Numeric", True, curCtrl
        End If
    End If
End Sub

Private Sub txtCCLienAmount4_Exit(ByVal Cancel As MSForms.ReturnBoolean)
    curCtrl = "txtCCLienAmount4"
    If Me(curCtrl).Text <> "" Then
        If IsNumeric(Me(curCtrl).Text) Then
            InputFormat Me(curCtrl).Name, "TextIsNumber", 2
        Else
            UpdateCC1 = 1
            MyErrorMsg Me.mpgWizard.Value, "Numeric", True, curCtrl
        End If
    End If
End Sub

Private Sub txtCCNoteBalanceDue_Exit(ByVal Cancel As MSForms.ReturnBoolean)
    curCtrl = "txtCCNoteBalanceDue"
    pgOption = Me.mpgCCOptions.Value
    If Me(curCtrl).Text <> "" Then
        If IsNumeric(Me(curCtrl).Text) Then
            InputFormat Me(curCtrl).Name, "TextIsNumber", 2
        Else
            UpdateCC1 = 1
            MyErrorMsg Me.mpgWizard.Value, "Numeric", True, curCtrl, , , pgOption
        End If
    End If
End Sub

Private Sub txtCCNoteDate_Exit(ByVal Cancel As MSForms.ReturnBoolean)
    curCtrl = "txtCCNoteDate"
    pgOption = Me.mpgCCOptions.Value
    If Me(curCtrl).Text <> "" Then
        If IsDate(Me(curCtrl).Text) Then
            InputFormat Me(curCtrl).Name, "TextIsDate", 0
        Else
            Cancel = True
            MyErrorMsg Me.mpgWizard.Value, "Date", False, curCtrl, , , pgOption
        End If
    End If
End Sub

Private Sub txtCCOwedSellerAmt4_Exit(ByVal Cancel As MSForms.ReturnBoolean)
    curCtrl = "txtCCOwedSellerAmt4"
    If Me(curCtrl).Text <> "" Then
        If IsNumeric(Me(curCtrl).Text) Then
            InputFormat Me(curCtrl).Name, "TextIsNumber", 2
        Else
            UpdateCC1 = 1
            MyErrorMsg Me.mpgWizard.Value, "Numeric", True, curCtrl
        End If
    End If
End Sub

Private Sub txtCCPriorAssignmentAmount_Exit(ByVal Cancel As MSForms.ReturnBoolean)
    curCtrl = "txtCCPriorAssignmentAmount"
    If Me(curCtrl).Text <> "" Then
        If IsNumeric(Me(curCtrl).Text) Then
            InputFormat Me(curCtrl).Name, "TextIsNumber", 2
        Else
            UpdateCC1 = 1
            MyErrorMsg Me.mpgWizard.Value, "Numeric", True, curCtrl
        End If
    End If
End Sub

Private Sub txtCCSecondLHAmount_Exit(ByVal Cancel As MSForms.ReturnBoolean)
    curCtrl = "txtCCSecondLHAmount"
    pgOption = Me.mpgCCOptions.Value
    If Me(curCtrl).Text <> "" Then
        If IsNumeric(Me(curCtrl).Text) Then
            InputFormat Me(curCtrl).Name, "TextIsNumber", 2
        Else
            UpdateCC1 = 1
            MyErrorMsg Me.mpgWizard.Value, "Numeric", True, curCtrl, , , pgOption
        End If
    End If
End Sub

Private Sub txtCCSecondLHRevAmt_Exit(ByVal Cancel As MSForms.ReturnBoolean)
    curCtrl = "txtCCSecondLHRevAmt"
    pgOption = Me.mpgCCOptions.Value
    If Me(curCtrl).Text <> "" Then
        If IsNumeric(Me(curCtrl).Text) Then
            InputFormat Me(curCtrl).Name, "TextIsNumber", 2
        Else
            UpdateCC1 = 1
            MyErrorMsg Me.mpgWizard.Value, "Numeric", True, curCtrl, , , pgOption
        End If
    End If
End Sub

Private Sub txtCCThirdLHAmount_Exit(ByVal Cancel As MSForms.ReturnBoolean)
    curCtrl = "txtCCThirdLHAmount"
    pgOption = Me.mpgCCOptions.Value
    If Me(curCtrl).Text <> "" Then
        If IsNumeric(Me(curCtrl).Text) Then
            InputFormat Me(curCtrl).Name, "TextIsNumber", 2
        Else
            UpdateCC1 = 1
            MyErrorMsg Me.mpgWizard.Value, "Numeric", True, curCtrl, , , pgOption
        End If
    End If
End Sub

Private Sub txtCCThirdLHRevAmt_Exit(ByVal Cancel As MSForms.ReturnBoolean)
    curCtrl = "txtCCThirdLHRevAmt"
    pgOption = Me.mpgCCOptions.Value
    If Me(curCtrl).Text <> "" Then
        If IsNumeric(Me(curCtrl).Text) Then
            InputFormat Me(curCtrl).Name, "TextIsNumber", 2
        Else
            UpdateCC1 = 1
            MyErrorMsg Me.mpgWizard.Value, "Numeric", True, curCtrl, , , pgOption
        End If
    End If
End Sub

Private Sub txtCFOMax_Exit(ByVal Cancel As MSForms.ReturnBoolean)
    curCtrl = "txtCFOMax"
    If Me(curCtrl).Text <> "" Then
        If IsNumeric(Me(curCtrl).Text) Then
            InputFormat Me(curCtrl).Name, "TextIsNumber", 2
        Else
            UpdateRT4 = 1
            MyErrorMsg Me.mpgWizard.Value, "Numeric", True, curCtrl
        End If
    End If
    If Len(Me.txtCFOMin) = 0 Then
        Me.txtCFOMin.Text = Me.txtCFOMax.Text
    End If
End Sub

Private Sub txtCFOMin_Exit(ByVal Cancel As MSForms.ReturnBoolean)
    curCtrl = "txtCFOMin"
    If Me(curCtrl).Text <> "" Then
        If IsNumeric(Me(curCtrl).Text) Then
            InputFormat Me(curCtrl).Name, "TextIsNumber", 2
        Else
            UpdateRT4 = 1
            MyErrorMsg Me.mpgWizard.Value, "Numeric", True, curCtrl
        End If
    End If
End Sub

Private Sub txtGTBalance_Exit(ByVal Cancel As MSForms.ReturnBoolean)
    curCtrl = "txtGTBalance"
    If Me(curCtrl).Text <> "" Then
        If IsNumeric(Me(curCtrl).Text) Then
            InputFormat Me(curCtrl).Name, "TextIsNumber", 2
        Else
            MyErrorMsg Me.mpgWizard.Value, "Numeric", True, curCtrl
        End If
    End If
End Sub

Private Sub txtGTMaximum_Exit(ByVal Cancel As MSForms.ReturnBoolean)
    curCtrl = "txtGTMaximum"
    If Me(curCtrl).Text <> "" Then
        If IsNumeric(Me(curCtrl).Text) Then
            InputFormat Me(curCtrl).Name, "TextIsNumber", 2
        Else
            MyErrorMsg Me.mpgWizard.Value, "Numeric", True, curCtrl
        End If
    End If
End Sub

Private Sub txtIC5Amount_Exit(ByVal Cancel As MSForms.ReturnBoolean)
    curCtrl = "txtIC5Amount"
    If Me(curCtrl).Text <> "" Then
        If IsNumeric(Me(curCtrl).Text) Then
            InputFormat Me(curCtrl).Name, "TextIsNumber", 2
        Else
            UpdateACI1 = 1
            MyErrorMsg Me.mpgWizard.Value, "Numeric", True, curCtrl
        End If
    End If
End Sub

Private Sub txtIC5Insured_Change()
    If Len(Me.txtIC5Insured.Text) > 0 Then
        Me.cmdAC1New.enabled = True
    Else
        Me.cmdAC1New.enabled = False
    End If
End Sub

Private Sub txtBIName_Change()
    If Len(Me.txtBIName.Text) > 0 Then
        Me.cmdBINew.enabled = True
    End If
End Sub

Private Sub txtBIName_Enter()
    If Me.cmdBINew.Caption = "Save" Then
        Me.cmdBINew.enabled = False
        Me.cmdBILeft.enabled = False
        Me.cmdBIRight.enabled = False
    End If
    If Len(Me.txtBIName.Text) > 0 Then
        Me.cmdBINew.enabled = True
    End If
End Sub

Public Sub txtBIName_Exit(ByVal Cancel As MSForms.ReturnBoolean)
    If Len(txtBIName.Text) > 0 Then
        Me.cmdBINew.enabled = True
    End If
    curCtrl = "txtBIName"
    If Me(curCtrl).Text <> "" Then
    Else
        MyErrorMsg Me.mpgWizard.Value, "Text", True, curCtrl
        ErrorCaught = True
    End If
End Sub
Private Sub txtCCAddress2_Change()
    If CCid <> 22 Then
        Me.cbxCCState2.enabled = True
        Me.cbxCCState2.BackColor = vbWhite
    End If
End Sub

Private Sub txtCCAddress4_Change()
    If CCid = 3 Then
        Me.cbxCCState4.enabled = False
        Me.cbxCCState4.BackColor = myGray
    Else
        Me.cbxCCState4.enabled = True
        Me.cbxCCState4.BackColor = vbWhite
    End If
End Sub

Private Sub txtCCCountry_Change()
    If Len(Me.txtCCCountry.Text) > 0 And Me.lstCCUSState.ListIndex = -1 Or Len(Me.txtCCCountry.Text) > 0 And Me.lstCCUSState.ListIndex = 0 Then
        Me.lstCCUSState.enabled = False
        Me.lstCCUSState.Locked = True
        Me.lstCCUSState.BackColor = myGray
    Else
        Me.lstCCUSState.enabled = True
        Me.lstCCUSState.Locked = False
        Me.lstCCUSState.BackColor = vbWhite
    End If
    If Len(Me.txtCCGuarantors.Text) = 0 Or Len(Me.txtCCCountry.Text) = 0 Then
        Me.cbxCCB.enabled = False
        Me.cbxCCC.enabled = False
        Me.cbxCCD.enabled = False
        Me.cbxCCE.enabled = False
    Else
'        If Me.optCCGuaranteesOnly.Value = False Then
            Me.cbxCCB.enabled = True
            Me.cbxCCC.enabled = True
            Me.cbxCCD.enabled = True
            Me.cbxCCE.enabled = True
'        End If
    End If
End Sub

Private Sub optCCGuarantors_Change()
'    If Len(Me.optCCGuarantors.Text) = 0 Or Len(Me.txtCCCountry.Text) = 0 And Len(Me.txtCCGuarantors.Text) > 0 Then
'        Me.cbxCCB.enabled = False
'        Me.cbxCCC.enabled = False
'        Me.cbxCCD.enabled = False
'        Me.cbxCCE.enabled = False
''    ElseIf Len(Me.optCCGuarantors.Text) = 0 And Len(Me.txtCCCountry.Text) = 0 And Len(Me.txtCCGuarantors.Text) = 0 Then
''        Me.cbxCCB.enabled = True
''        Me.cbxCCC.enabled = True
''        Me.cbxCCD.enabled = True
''        Me.cbxCCE.enabled = True
'    End If
End Sub

Private Sub txtDIFirstDisbursement_Enter()
    Me.txtDIFirstDisbursement.SelLength = 99
    If Me.txtLDGuaranteeFee.Text = "" Then
        UpdateGuaranteeFee
    End If
    If Me.fraLDInfo.cbxLDMaturityPeriod.BackColor = &HC0FFFF Then
        Me.fraLDInfo.cbxLDMaturityPeriod.BackColor = vbWhite
    End If
End Sub

Private Sub txtDIFirstDisbursement_Exit(ByVal Cancel As MSForms.ReturnBoolean)
    If Me.txtDIFirstDisbursement.Text = "" Then
        Me.txtDIFirstDisbursement.Text = 6
    Else
        PrevCtrl = Me.fraDIInfo.ActiveControl.Name
        InputFormat Me(PrevCtrl).Name, "txtNumber", 0
        Cancel = vReturn
        If vReturn = True Then
            Me(PrevCtrl).SetFocus
        End If
    End If
'If Me.txtDIFirstDisbursement > 48 And Me.chkLIDFP.Value = True Then
'            Cancel = True
'            MsgBox "The amount entered exceeds 48 months.      " & vbCrLf & vbCrLf & _
'                   "Please re-enter your final disbursement period.      ", _
'                   vbCritical + vbOKOnly, _
'                   "Final Disbursement"
'            Me.txtDILastDisbursement.SetFocus
'End If
End Sub

Private Sub txtDILastDisbursement_Exit(ByVal Cancel As MSForms.ReturnBoolean)
    If Me.txtLDGuaranteeFee.Text = "" Then
        UpdateGuaranteeFee
    End If
    If Me.txtDILastDisbursement = "" Then
        Me.txtDILastDisbursement.Text = "6"
    Else
        PrevCtrl = Me.fraDIInfo.ActiveControl.Name
        InputFormat Me(PrevCtrl).Name, "txtNumber", 0
        Cancel = vReturn
        If vReturn = True Then
            Me(PrevCtrl).SetFocus
        End If
    End If
If Me.txtDILastDisbursement > 48 Then
            Cancel = True
            MsgBox "The amount entered exceeds 48 months.      " & vbCrLf & vbCrLf & _
                   "Please re-enter your final disbursement period.      ", _
                   vbCritical + vbOKOnly, _
                   "Final Disbursement"
            Me.txtDILastDisbursement.SetFocus
End If
End Sub

Private Sub txtIRFixed_Exit(ByVal Cancel As MSForms.ReturnBoolean)
    curCtrl = "txtIRFixed"
    If Me(curCtrl).Text <> "" Then
        If IsNumeric(Me(curCtrl).Text) Then
            InputFormat Me(curCtrl).Name, "TextIsNumber", 2
        Else
            UpdateRT1 = 1
            MyErrorMsg Me.mpgWizard.Value, "Numeric", True, curCtrl
        End If
    End If
End Sub

Private Sub txtIRFixedVariable_Exit(ByVal Cancel As MSForms.ReturnBoolean)
    curCtrl = "txtIRFixedVariable"
    If Me(curCtrl).Text <> "" Then
        If IsNumeric(Me(curCtrl).Text) Then
            InputFormat Me(curCtrl).Name, "TextIsNumber", 2
        Else
            UpdateRT1 = 1
            MyErrorMsg Me.mpgWizard.Value, "Numeric", True, curCtrl
        End If
    End If
End Sub

Private Sub txtIRFixedVariableOverPrime_Enter()
    Me.cmdIROverPrimeInfo.enabled = True
End Sub

Private Sub txtIRFixedVariableOverPrime_Exit(ByVal Cancel As MSForms.ReturnBoolean)
    curCtrl = "txtIRFixedVariableOverPrime"
    If Me(curCtrl).Text <> "" Then
        If IsNumeric(Me(curCtrl).Text) Then
            InputFormat Me(curCtrl).Name, "TextIsNumber", 2
        Else
            UpdateRT1 = 1
            MyErrorMsg Me.mpgWizard.Value, "Numeric", True, curCtrl
        End If
    End If
    If Len(Me.txtVLOOverPrime.Text) = 0 Then
        Me.txtVLOOverPrime.Text = Me.txtIRFixedVariableOverPrime.Text
    ElseIf Me.txtVLOOverPrime.Text <> Me.txtIRFixedVariableOverPrime.Text Then
        If Me.txtIRFixedVariableOverPrime.Text = IIf(Left(ActiveDocument.Bookmarks("CDOverPrime").Range.Text, 1) <> "[", ActiveDocument.Bookmarks("CDOverPrime").Range.Text, "") Then
        Else
            Me.txtVLOOverPrime.Text = Me.txtIRFixedVariableOverPrime.Text
        End If
    End If
End Sub

Private Sub txtIRLenderFixed_Exit(ByVal Cancel As MSForms.ReturnBoolean)
    curCtrl = "txtIRLenderFixed"
    If Me(curCtrl).Text <> "" Then
        If IsNumeric(Me(curCtrl).Text) Then
            InputFormat Me(curCtrl).Name, "TextIsNumber", 2
        Else
            UpdateRT1 = 1
            MyErrorMsg Me.mpgWizard.Value, "Numeric", True, curCtrl
        End If
    End If
End Sub

Private Sub txtIRLenderOverPrime_Enter()
    Me.cmdIROverPrimeInfo.enabled = True
End Sub

Private Sub txtIRLenderOverPrime_Exit(ByVal Cancel As MSForms.ReturnBoolean)
    curCtrl = "txtIRLenderOverPrime"
    If Me(curCtrl).Text <> "" Then
        If IsNumeric(Me(curCtrl).Text) Then
            InputFormat Me(curCtrl).Name, "TextIsNumber", 2
        Else
            UpdateRT1 = 1
            MyErrorMsg Me.mpgWizard.Value, "Numeric", True, curCtrl
        End If
    End If
    If Len(Me.txtVLOOverPrime.Text) = 0 Then
        Me.txtVLOOverPrime.Text = Me.txtIRLenderOverPrime.Text
    ElseIf Me.txtVLOOverPrime.Text <> Me.txtIRLenderOverPrime.Text Then
        If Me.txtIRLenderOverPrime.Text = IIf(Left(ActiveDocument.Bookmarks("CDOverPrime").Range.Text, 1) <> "[", ActiveDocument.Bookmarks("CDOverPrime").Range.Text, "") Then
        Else
            Me.txtVLOOverPrime.Text = Me.txtIRLenderOverPrime.Text
        End If
    End If
End Sub

Private Sub txtIRLenderVariable_Exit(ByVal Cancel As MSForms.ReturnBoolean)
    curCtrl = "txtIRLenderVariable"
    If Me(curCtrl).Text <> "" Then
        If IsNumeric(Me(curCtrl).Text) Then
            InputFormat Me(curCtrl).Name, "TextIsNumber", 2
        Else
            UpdateRT1 = 1
            MyErrorMsg Me.mpgWizard.Value, "Numeric", True, curCtrl
        End If
    End If
End Sub

Private Sub txtIRSBAFixed_Exit(ByVal Cancel As MSForms.ReturnBoolean)
    curCtrl = "txtIRSBAFixed"
    If Me(curCtrl).Text <> "" Then
        If IsNumeric(Me(curCtrl).Text) Then
            InputFormat Me(curCtrl).Name, "TextIsNumber", 2
        Else
            UpdateRT1 = 1
            MyErrorMsg Me.mpgWizard.Value, "Numeric", True, curCtrl
        End If
    End If
End Sub

Private Sub txtIRSBAOverPrime_Enter()
    Me.cmdIROverPrimeInfo.enabled = True
End Sub

Private Sub txtIRSBAOverPrime_Exit(ByVal Cancel As MSForms.ReturnBoolean)
    curCtrl = "txtIRSBAOverPrime"
    If Me(curCtrl).Text <> "" Then
        If IsNumeric(Me(curCtrl).Text) Then
            InputFormat Me(curCtrl).Name, "TextIsNumber", 2
        Else
            UpdateRT1 = 1
            MyErrorMsg Me.mpgWizard.Value, "Numeric", True, curCtrl
        End If
    End If
    If Len(Me.txtVLOOverPrime.Text) = 0 Then
        Me.txtVLOOverPrime.Text = Me.txtIRSBAOverPrime.Text
    ElseIf Me.txtVLOOverPrime.Text <> Me.txtIRSBAOverPrime.Text Then
        If Me.txtIRSBAOverPrime.Text = IIf(Left(ActiveDocument.Bookmarks("CDOverPrime").Range.Text, 1) <> "[", ActiveDocument.Bookmarks("CDOverPrime").Range.Text, "") Then
        Else
            Me.txtVLOOverPrime.Text = Me.txtIRSBAOverPrime.Text
        End If
    End If
End Sub

Private Sub txtIRSBAVariable_Exit(ByVal Cancel As MSForms.ReturnBoolean)
    curCtrl = "txtIRSBAVariable"
    If Me(curCtrl).Text <> "" Then
        If IsNumeric(Me(curCtrl).Text) Then
            InputFormat Me(curCtrl).Name, "TextIsNumber", 2
        Else
            UpdateRT1 = 1
            MyErrorMsg Me.mpgWizard.Value, "Numeric", True, curCtrl
        End If
    End If
End Sub

Private Sub txtIRSplitPercent_Exit(ByVal Cancel As MSForms.ReturnBoolean)
    curCtrl = "txtIRSplitPercent"
    If Me(curCtrl).Text <> "" Then
        If IsNumeric(Me(curCtrl).Text) Then
            InputFormat Me(curCtrl).Name, "TextIsNumber", 2
        Else
            UpdateRT1 = 1
            MyErrorMsg Me.mpgWizard.Value, "Numeric", True, curCtrl
        End If
    End If
End Sub

Private Sub txtIRSplitPercent2_Exit(ByVal Cancel As MSForms.ReturnBoolean)
    curCtrl = "txtIRSplitPercent2"
    If Me(curCtrl).Text <> "" Then
        If IsNumeric(Me(curCtrl).Text) Then
            InputFormat Me(curCtrl).Name, "TextIsNumber", 2
        Else
            UpdateRT1 = 1
            MyErrorMsg Me.mpgWizard.Value, "Numeric", True, curCtrl
        End If
    End If
End Sub

Private Sub txtIRSplitPrime_Enter()
    Me.cmdIROverPrimeInfo.enabled = True
End Sub

Private Sub txtIRSplitPrime_Exit(ByVal Cancel As MSForms.ReturnBoolean)
    curCtrl = "txtIRSplitPrime"
    If Me(curCtrl).Text <> "" Then
        If IsNumeric(Me(curCtrl).Text) Then
            InputFormat Me(curCtrl).Name, "TextIsNumber", 2
        Else
            UpdateRT1 = 1
            MyErrorMsg Me.mpgWizard.Value, "Numeric", True, curCtrl
        End If
    End If
    If Len(Me.txtVLOOverPrime.Text) = 0 Then
        Me.txtVLOOverPrime.Text = Me.txtIRSplitPrime.Text
    ElseIf Me.txtVLOOverPrime.Text <> Me.txtIRSplitPrime.Text Then
        If Me.txtIRSplitPrime.Text = IIf(Left(ActiveDocument.Bookmarks("CDOverPrime").Range.Text, 1) <> "[", ActiveDocument.Bookmarks("CDOverPrime").Range.Text, "") Then
        Else
            Me.txtVLOOverPrime.Text = Me.txtIRSplitPrime.Text
        End If
    End If
End Sub

Private Sub txtIRSplitRate_Exit(ByVal Cancel As MSForms.ReturnBoolean)
    curCtrl = "txtIRSplitRate"
    If Me(curCtrl).Text <> "" Then
        If IsNumeric(Me(curCtrl).Text) Then
            InputFormat Me(curCtrl).Name, "TextIsNumber", 2
        Else
            UpdateRT1 = 1
            MyErrorMsg Me.mpgWizard.Value, "Numeric", True, curCtrl
        End If
    End If
End Sub

Private Sub txtIRSplitRate2_Exit(ByVal Cancel As MSForms.ReturnBoolean)
    curCtrl = "txtIRSplitRate2"
    If Me(curCtrl).Text <> "" Then
        If IsNumeric(Me(curCtrl).Text) Then
            InputFormat Me(curCtrl).Name, "TextIsNumber", 2
        Else
            UpdateRT1 = 1
            MyErrorMsg Me.mpgWizard.Value, "Numeric", True, curCtrl
        End If
    End If
End Sub

Private Sub txtIRVariable_Exit(ByVal Cancel As MSForms.ReturnBoolean)
    curCtrl = "txtIRVariable"
    If Me(curCtrl).Text <> "" Then
        If IsNumeric(Me(curCtrl).Text) Then
            InputFormat Me(curCtrl).Name, "TextIsNumber", 2
        Else
            UpdateRT1 = 1
            MyErrorMsg Me.mpgWizard.Value, "Numeric", True, curCtrl
        End If
    End If
End Sub

Private Sub txtIRVariableOverPrime_Enter()
    Me.cmdIROverPrimeInfo.enabled = True
End Sub

Private Sub txtIRVariableOverPrime_Exit(ByVal Cancel As MSForms.ReturnBoolean)
    curCtrl = "txtIRVariableOverPrime"
    If Me(curCtrl).Text <> "" Then
        If IsNumeric(Me(curCtrl).Text) Then
            InputFormat Me(curCtrl).Name, "TextIsNumber", 2
        Else
            UpdateRT1 = 1
            MyErrorMsg Me.mpgWizard.Value, "Numeric", True, curCtrl
        End If
    End If
    If Len(Me.txtVLOOverPrime.Text) = 0 Then
        Me.txtVLOOverPrime.Text = Me.txtIRVariableOverPrime.Text
    ElseIf Me.txtVLOOverPrime.Text <> Me.txtIRVariableOverPrime.Text Then
        If Me.txtVLOOverPrime.Text = IIf(Left(ActiveDocument.Bookmarks("CDOverPrime").Range.Text, 1) <> "[", ActiveDocument.Bookmarks("CDOverPrime").Range.Text, "") Then
        Else
            Me.txtVLOOverPrime.Text = Me.txtIRVariableOverPrime.Text
        End If
    End If
End Sub

Private Sub txtLDAmt_Exit(ByVal Cancel As MSForms.ReturnBoolean)
    curCtrl = "txtLDAmt"
    If Me(curCtrl).Text <> "" Then
        If IsNumeric(Me(curCtrl).Text) Then
            InputFormat Me(curCtrl).Name, "TextIsNumber", 2
            UpdateGuaranteeFee
        Else
            Cancel = True
            UpdateLI3 = 1
            MyErrorMsg Me.mpgWizard.Value, "Numeric", True, curCtrl
        End If
    Else
        Cancel = True
        UpdateLI3 = 1
        MyErrorMsg Me.mpgWizard.Value, "Numeric", True, curCtrl
    End If
'    UpdateGuaranteeFee
End Sub
Private Sub UpdateField(Book, Ctrl, Type_)
    Dim Text_ As String
    Select Case Type_
    Case 0
        Text_ = Trim(Me(Ctrl).Text)
    Case 1
        Text_ = Str(Me(Ctrl).Value)
    Case -1
        Text_ = Ctrl
    Case 5
        Text_ = Me(Ctrl).Text
    Case Else
    End Select
    If Text_ = "True" Then
        Text_ = 1
    ElseIf Text_ = "False" Then
        Text_ = 0
    End If
    UpdateText Book, Text_
    ProgressBar (5)
End Sub
Private Sub ProgressBar(Inc)
    If Me.prgPleaseWait.Width >= 360 Then
        Me.prgPleaseWait.Width = 0
    Else
        Me.prgPleaseWait.Width = Me.prgPleaseWait.Width + Inc
        DoEvents
    End If
End Sub

Private Sub UpdateGuaranteeFee()
'DAN ARRA

    If Me.chkLDAutoCalc.Value = True Then
        Dim LDLoan As String
        Dim LDPercent As String
        Dim LDAmount As String
    '  Dim LDMaturity As Integer
        Dim LDFee As String
        Dim strLDFee As String
    'Replaced 2014 Guarantee calcuations with 2011 Wizard calculations
        If Me.txtLDAmt.Text = "" Or Me.txtLDMaturityYears.Text = "" Or Me.txtLDMaturityMonths.Text = "" Or Me.txtLDGuaranteePct.Text = "" Then
        Else
            LDLoan = Me.txtLDAmt.Text
            LDPercent = Me.txtLDGuaranteePct.Text
            LDAmount = LDLoan * LDPercent / 100
    'LDLoan = Full amount of loan on which percentage is based
    'LDAmount = SBA Guarantee amount of loan on which fee is calculated
    'Calculations are to the penny ... not rounded
            LDMaturity = Me.txtLDMaturityYears.Text * 12 + Me.txtLDMaturityMonths.Text
' Commented out for 2014 approved changes
'            If LDLoan < 150000 Then
'                Me.txtLDOngoingServicingFee.Text = "0.000"
'            End If
'            If Me.chkLDCombination.Value = True Then
                'Clear Everything
                'Exit sub
                'MsgBox "Nothing"
'           Else
            
'           End If
'            If LDMaturity < 12 And Me.chkLI502.Value = True Then
'            MsgBox "The minimum loan period for a      " & vbCrLf & _
'                   "ARRA 502 Loan is 12 months." & vbCrLf & vbCrLf & _
'                   "Please re-enter the month and years.      ", _
'                   vbInformation + vbOKOnly, _
'                   "Maturity"
'                Me.txtLDMaturityMonths.Text = ""
'                Me.txtLDMaturityYears.Text = ""
'                Me.txtLDMaturityMonths.SetFocus
'                Exit Sub
'            End If
            Select Case LDMaturity
            Case 1 To 12
                LDFee = LDAmount * 0.0025
            Case Is > 12
                If LDLoan <= 150000 Then
                    LDFee = LDAmount * 0.02  'Changed from .02 on 10/1/02
                ElseIf LDLoan <= 700000 Then
                    LDFee = LDAmount * 0.03
    'Added 4/8/04
                ElseIf LDLoan >= 1000000 Then
                    LDFee1 = LDAmount * 0.035
                    If LDAmount - 1000000 > 0 Then
                        LDFee2 = (LDAmount - 1000000) * 0.0025
                    End If
                    LDFee = LDFee1 + LDFee2
    'End modification
                Else
                    LDFee = LDAmount * 0.035
                End If
    ''OLD CALCS 1 'LDFee = LDFee + Abs(LDAmount >250000) * LDAmount - 250000) * 0.005
    ''OLD CALCS 2 'LDFee = LDFee + Abs(LDAmount >500000) * LDAmount - 500000) * 0.00375
            Case Else
                LDFee = 0
            End Select
    'No rounding of fee as of 1/29/03 per Committee
    'LDFee = Int(((LDFee + 0.005) * 100) / 100)
            Me.txtLDGuaranteeFee.enabled = True
            Me.txtLDGuaranteeFee.Text = Format(LDFee, "#,#00.00")
        End If
    End If
End Sub

Private Sub txtLDGuaranteePct_Exit(ByVal Cancel As MSForms.ReturnBoolean)
'If Me.chkLI502.Value = True Then
'Else
'    If Me.txtLDAmt.Text > 150000 And Me.txtLDGuaranteePct > 75 Then
'        Cancel = True
'        MsgBox "The maximum guarantee percentage permitted on a loan greater     " & vbCrLf & _
'               "than $150,000 is 75%." & vbCrLf & vbCrLf & _
'               "Please re-enter the guarantee fee.", _
'               vbInformation + vbOKOnly, _
'               "Guarantee Percentage"
'        Me.txtLDGuaranteePct.Text = "75.00"
'        Me.txtLDGuaranteePct.SetFocus
'        Exit Sub
'    End If
'End If
'    Cancel = False
'    If Me.txtLDGuaranteePct.Value > 90 And Me.txtLDGuaranteePct.Value <> "" And Me.chkLI502.Value = True Then
'        Cancel = True
'        MsgBox "Loan is subject to Section 502 of ARRA.     " & vbCr & vbCr & _
'        "Value exceeds allowable percentage.  Inserting maximum 90%.    ", vbCritical + vbOKOnly, "Guarantee Percentage"
'        Me.txtLDGuaranteePct.Value = "90.00"
'        Me.fraLDInfo.SetFocus
'        Me.txtLDGuaranteeFee.SetFocus
'    ElseIf Me.txtLDGuaranteePct.Value > 85 And Me.txtLDGuaranteePct.Value <> "" And Me.chkLI502.Value = False Then
'        Cancel = True
'        MsgBox "Value exceeds allowable percentage.  Inserting maximum 85%.    ", vbCritical + vbOKOnly, "Guarantee Percentage"
'        Me.txtLDGuaranteePct.Value = "85.00"
'        Me.fraLDInfo.SetFocus
'        Me.txtLDGuaranteeFee.SetFocus
'    Else
'        UpdateGuaranteeFee
'        On Error Resume Next
'        Me.fraLDInfo.SetFocus
'        Me.txtLDGuaranteeFee.SetFocus
'    End If
    curCtrl = "txtLDGuaranteePct"
    If Me(curCtrl).Text <> "" Then
        If IsNumeric(Me(curCtrl).Text) Then
            InputFormat Me(curCtrl).Name, "TextIsNumber", 2
            UpdateGuaranteeFee
        Else
            Cancel = True
            UpdateLI3 = 1
            MyErrorMsg Me.mpgWizard.Value, "Numeric", True, curCtrl
            Exit Sub
        End If
    End If
End Sub

Private Sub txtLDMaturityMonths_Exit(ByVal Cancel As MSForms.ReturnBoolean)
'DAN ARRA
    If Me.txtLDMaturityMonths.Text = "" Then
        Me.txtLDMaturityMonths.Text = 0
'        curCtrl = "txtLDMaturityMonths"
'        MyErrorMsg Me.mpgWizard.Value, "Numeric", True, curCtrl
    Else
        If Val(txtLDMaturityMonths.Text) > 11 Then
            If Val(txtLDMaturityYears.Text) > 0 Then
                vResult = MsgBox("Add calculated years to current year value?", vbYesNo + vbQuestion, "Replace Year Value?")
                If vResult = 7 Then
                    Me.txtLDMaturityYears = 0
                Else
                End If
            End If
            Me.txtLDMaturityYears.Text = Val(Me.txtLDMaturityYears.Text) + Int(Val(txtLDMaturityMonths.Text) / 12)
            Me.txtLDMaturityMonths.Text = txtLDMaturityMonths Mod 12
        ElseIf Val(txtLDMaturityMonths.Text) <= 11 And txtLDMaturityYears.Text = "" Then
            Me.txtLDMaturityYears.Text = 0
        End If
    End If
    If Me.chkLDAutoCalc.Value = True Then
    'Check for 501 and less than 12 months
        If Len(txtLDMaturityYears.Text) > 1 Then   'Added 2/21/2019 to prevent Run Time Error 13 when the Maturity field is blank  -  RDH
        LDMaturity = Me.txtLDMaturityYears.Text * 12 + Me.txtLDMaturityMonths.Text
        If LDMaturity <= 12 And Me.chkLI501.Value = True Then
        MsgBox "Selecting Section 501 with a maturity of less than 13 months" & vbCrLf & vbCrLf & _
            "is invalid.  Please change the maturity period or unselect 501.      ", _
            vbCritical + vbOKOnly, _
            "Guarantee Fee"
        Cancel = True
        Me.txtLDMaturityMonths.Text = 1
        Me.txtLDMaturityYears.Text = 1
        Me.txtLDMaturityYears.SetFocus
        Exit Sub
        End If
        End If
        UpdateGuaranteeFee
    End If
End Sub

Private Sub txtLDMaturityYears_Exit(ByVal Cancel As MSForms.ReturnBoolean)
'DAN ARRA
    If Me.txtLDMaturityYears.Text <> "" And Me.txtLDMaturityMonths.Text = "" Then
        Me.txtLDMaturityMonths.Text = 0
    End If
    If Me.chkLDAutoCalc.Value = True Then
        UpdateGuaranteeFee
    End If
End Sub

Private Sub UPOPtions(index, Optional LockState)
    If IsMissing(LockState) Then
        LockState = False
    End If
    Dim cIndex As Integer
    cIndex = index

    
    Select Case index
    Case 10, 11, 12, 13, 19, 20
    ResetUP 0, cIndex
        Me.txtUPText.visible = False
        Me.txtUPText.enabled = False
        Me.lblUPData1.visible = False
        Me.lblUPData2.visible = False
        Me.txtUPField1.visible = False
        Me.txtUPField2.visible = False
    Case 16, 17
    ResetUP 32, cIndex
        Me.txtUPText.visible = False
        Me.lblUPData1.visible = True
        Me.lblUPData2.visible = True
        Me.lblUPData3.visible = True
        Me.lblUPData4.visible = True
        Me.lblUPData3.enabled = True
        Me.lblUPData4.enabled = True
        Me.txtUPField2.enabled = True
        Me.txtUPAmount2.enabled = True
        Me.txtUPField3.enabled = True
        Me.txtUPAmount2.visible = True
        Me.txtUPField3.visible = True
        Me.txtUPField1.visible = True
        If LockState = False Then
            Me.txtUPField1.enabled = True
            Me.txtUPField1.BackColor = vbWhite
            Me.txtUPField2.visible = True
            Me.txtUPField2.BackColor = vbWhite
            Me.txtUPAmount2.enabled = True
            Me.txtUPAmount2.Locked = False
            Me.txtUPAmount2.BackColor = vbWhite
            Me.txtUPField3.visible = True
            Me.txtUPField3.Locked = False
            Me.txtUPField3.BackColor = vbWhite
        End If
    Case 7, 8, 14, 15, 18, 22, 24
    ResetUP 0, cIndex
        Me.txtUPText.visible = False
        Me.lblUPData1.visible = True
        Me.lblUPData2.visible = False
        Me.txtUPField2.enabled = True
        Me.txtUPField1.visible = True
        Me.txtUPField2.visible = False
        If LockState = False Then
            Me.txtUPField1.BackColor = vbWhite
            Me.txtUPField1.enabled = True
        End If
    Case 1, 2, 3, 4, 5, 6, 9
    ResetUP 0, cIndex
        Me.txtUPAmount.visible = True
        Me.lblUPUseAmount.visible = True
        Me.lblUPData1.visible = True
        Me.lblUPData1.Caption = Me.cbxUPCategory.List(index, 1)
        Me.txtUPText.visible = False
        Me.txtUPText.enabled = False
        Me.lblUPData1.visible = True
        Me.lblUPData1.enabled = True
        Me.lblUPData2.visible = False
        Me.txtUPField1.visible = True
        Me.txtUPField2.visible = False
        Me.txtUPField1.enabled = True
        If LockState = False Then
            Me.txtUPField1.BackColor = vbWhite
            Me.txtUPField2.enabled = True
        End If
    Case 0
    ResetUP 0, cIndex
        ' Me.cmdUPNew.Caption = "Save"
        ' Me.cmdUPNew.enabled = True
        Me.lblUPData1.visible = True
        Me.lblUPData1.enabled = True
        Me.txtUPText.visible = True
        Me.txtUPText.Top = 82
        Me.txtUPText.Height = 46
        Me.txtUPField1.visible = False
        Me.txtUPField2.visible = False
        If LockState = False Then
            Me.txtUPText.enabled = True
            Me.txtUPText.Locked = False
            Me.txtUPText.BackColor = vbWhite
        End If
        On Error Resume Next
        Me.txtUPText.SetFocus
        Me.txtUPText.SelLength = 7
        Me.fraUPInfo1.SetFocus
        Me.txtUPAmount.SetFocus
    Case 21, 23
    ResetUP 0, cIndex
'        Me.txtUPAmount.Text = ""
        Me.lblUPData1.visible = False
        Me.txtUPField1.visible = False
        Me.txtUPField1.Text = ""
        Me.txtUPField2.visible = False
        Me.txtUPField2.Text = ""
        Me.lblUPData2.visible = False
        Me.txtUPText.visible = False
        If Me.txtUPRemainingAmount.Text = "0.00" Then
            Me.cmdUPNew.enabled = False
        Else
            Me.cmdUPNew.enabled = True
        End If
        Me.cmdUPDelete.enabled = False
'    Case 22
'    ResetUP 0, cIndex
''        Me.cmdFinish.enabled = True
'        On Error Resume Next
        Me.txtUPAmount.SetFocus
'        Me.cmdCancel.SetFocus
    Case Else
    End Select
End Sub

Private Sub txtLIAddress_Exit(ByVal Cancel As MSForms.ReturnBoolean)
    curCtrl = "txtLIAddress"
    If Me(curCtrl).Text <> "" Then
    Else
        MyErrorMsg Me.mpgWizard.Value, "Text", True, curCtrl
    End If
End Sub

'Not used 3/15/2009
'Private Sub txtLICID_Exit(ByVal Cancel As MSForms.ReturnBoolean)
'    curCtrl = "txtLICID"
'    If LICIDChanged = True Then
'        If Me.chkLIARRA.Value = True And Len(Me.txtLICID.Text) = 12 Then
'            If Not IsNumeric(Me.txtLICID.Text) Then
'                MyErrorMsg Me.mpgWizard.Value, "Numeric", True, curCtrl
'            End If
'        ElseIf Me.chkLIARRA.Value = True And Len(Me.txtLICID.Text) < 12 Then
'            MyErrorMsg Me.mpgWizard.Value, "Length", True, curCtrl, , Len(Me(curCtrl).Text)
'        End If
'    End If
'End Sub
'
'Private Sub txtLICID_Change()
'    LICIDChanged = True
'End Sub
'
Private Sub txtLICity_Exit(ByVal Cancel As MSForms.ReturnBoolean)
    curCtrl = "txtLICity"
    If Me(curCtrl).Text <> "" Then
    Else
        MyErrorMsg Me.mpgWizard.Value, "Text", True, curCtrl
    End If
End Sub

Private Sub txtLILenderSign_Change()
'  If Len(Me.txtLILenderSign.Text) > 0 And Me.optLSNonPLP.Value = True Then
'    If Me.txtLILenderSign.Text <> Me.txtSBASignor.Text And Me.txtSBASignor.Text <> "" Then
'    Else
'      Me.txtSBASignor.Text = Me.txtLILenderSign.Text
'    End If
'  End If
End Sub

Public Sub CheckFill(pgName)
    If pgName = "pgLI1" Then
        If Me.txtLIName.Text = "" Or Me.txtLIAddress.Text = "" Or Me.txtLICity.Text = "" Or Me.txtLIZip.Text = "" Then
            IsBlank = True
            Me.cmdNext.enabled = False
            MsgBox Len(Me.cbxSBAName.Text)
        ElseIf Me.cbxLIState.ListIndex <> -1 Or Me.cbxSBAName.ListIndex <> -1 Then
            IsBlank = True
            Me.cmdNext.enabled = False
        Else
            IsBlank = False
            Me.cmdNext.enabled = True
        End If
    Else
    End If
End Sub

Private Sub txtLIName_Exit(ByVal Cancel As MSForms.ReturnBoolean)
    curCtrl = "txtLIName"
    If Me(curCtrl).Text <> "" Then
    Else
        MyErrorMsg Me.mpgWizard.Value, "Text", True, curCtrl
        ErrorCaught = True
    End If
End Sub

Private Sub cbxLIState_Exit(ByVal Cancel As MSForms.ReturnBoolean)
    If Me.cbxLIState.ListIndex < 0 Then
    Else
        curCtrl = "cbxLIState"
        If Me.cbxLIState.ListIndex = 0 Then
            Me.cbxLIState.SetFocus
            Cancel = True
            MyErrorMsg Me.mpgWizard.Value, "Text", True, curCtrl
        End If
    End If
End Sub

Private Sub txtLSApprovalDate_Exit(ByVal Cancel As MSForms.ReturnBoolean)
    curCtrl = "txtLSApprovalDate"
    If Me(curCtrl).Text <> "" And Me(curCtrl).Text <> "--" Then
        If IsDate(Me(curCtrl).Text) Then
            InputFormat Me(curCtrl).Name, "TextIsDate", 0
        Else
            Cancel = True
            UpdateLI3 = 1
            MyErrorMsg Me.mpgWizard.Value, "Date", False, curCtrl
        End If
    ElseIf Me(curCtrl).Text <> "--" Then
        Cancel = True
        If MsgBox("The Approval Date cannot be blank." & vbCrLf & vbCrLf & _
                  "If you wish to leave a space in the Authorization" & vbCrLf & _
                  "as a placeholder, type two hyphens ('--') in the" & vbCrLf & _
                  "Approval Date textbox.", _
                  vbInformation + vbOKOnly, _
                  "Approval Date Placeholder") = vbOK Then
            Me(curCtrl).SetFocus
            Exit Sub
        End If
    End If
End Sub

Private Sub txtLSReceiptDate_Exit(ByVal Cancel As MSForms.ReturnBoolean)
    curCtrl = "txtLSReceiptDate"
    If Me(curCtrl).Text <> "" And Me(curCtrl).Text <> "--" Then
        If IsDate(Me(curCtrl).Text) Then
            InputFormat Me(curCtrl).Name, "TextIsDate", 0
        Else
            Cancel = True
            UpdateLI3 = 1
            MyErrorMsg Me.mpgWizard.Value, "Date", False, curCtrl
        End If
    ElseIf Me(curCtrl).Text <> "--" Then
        Cancel = True
        If MsgBox("The Receipt Date cannot be blank." & vbCrLf & vbCrLf & _
                  "If you wish to leave a space in the Authorization" & vbCrLf & _
                  "as a placeholder, type two hyphens ('--') in the" & vbCrLf & _
                  "Receipt Date textbox.", _
                  vbInformation + vbOKOnly, _
                  "Receipt Date Placeholder") = vbOK Then
            Me(curCtrl).SetFocus
            Exit Sub
        End If
    End If
End Sub

Private Sub txtobUPID_Change()
    If Me.txtobUPID.Text = "" Then
        Me.cbxUPCategory.ListIndex = 21
        Me.cmdUPNew.enabled = False
    ElseIf Me.txtobUPID.Text = "0" Then
        Me.cbxUPCategory.ListIndex = 0
    ElseIf Me.txtobUPID.Text = "22" Then
        Me.cbxUPCategory.ListIndex = Me.txtobUPID.Text
'        Me.cmdFinish.enabled = True
    Else
        Me.cbxUPCategory.ListIndex = Me.txtobUPID.Text
    End If
End Sub

Private Sub txtOCName_Change()
    If Len(Me.txtOCName.Text) > 0 Then
        Me.cmdOCNew.enabled = True
    End If
End Sub

Private Sub txtOCName_Enter()
    If Len(Me.txtOCName.Text) > 0 Then
        Me.cmdOCNew.enabled = True
    End If
End Sub

Private Sub txtOCName_Exit(ByVal Cancel As MSForms.ReturnBoolean)
    If Len(Me.txtOCName.Text) > 0 Then
        Me.cmdOCNew.enabled = True
    End If
End Sub

Private Sub txtOLORecaptureAmt_Exit(ByVal Cancel As MSForms.ReturnBoolean)
    curCtrl = "txtOLORecaptureAmt"
    If Me(curCtrl).Text <> "" Then
        If IsNumeric(Me(curCtrl).Text) Then
            InputFormat Me(curCtrl).Name, "TextIsNumber", 2
        Else
            Cancel = True
            UpdateRT4 = 1
            MyErrorMsg Me.mpgWizard.Value, "Numeric", False, curCtrl
        End If
    End If
End Sub

Private Sub txtOLORecapturePct_Exit(ByVal Cancel As MSForms.ReturnBoolean)
    curCtrl = "txtOLORecapturePct"
    If Me(curCtrl).Text <> "" Then
        If IsNumeric(Me(curCtrl).Text) Then
            InputFormat Me(curCtrl).Name, "TextIsNumber", 2
        Else
            UpdateRT4 = 1
            MyErrorMsg Me.mpgWizard.Value, "Numeric", True, curCtrl
        End If
    End If
End Sub

Private Sub txtPTAmount1_Exit(ByVal Cancel As MSForms.ReturnBoolean)
    curCtrl = "txtPTAmount1"
    If Me(curCtrl).Text <> "" Then
        If IsNumeric(Me(curCtrl).Text) Then
            InputFormat Me(curCtrl).Name, "TextIsNumber", 2
        Else
            UpdateRT3 = 1
            MyErrorMsg Me.mpgWizard.Value, "Numeric", True, curCtrl
        End If
    End If
End Sub

Private Sub txtPTAmount2_Exit(ByVal Cancel As MSForms.ReturnBoolean)
    curCtrl = "txtPTAmount2"
    If Me(curCtrl).Text <> "" Then
        If IsNumeric(Me(curCtrl).Text) Then
            InputFormat Me(curCtrl).Name, "TextIsNumber", 2
        Else
            UpdateRT3 = 1
            MyErrorMsg Me.mpgWizard.Value, "Numeric", True, curCtrl
        End If
    End If
End Sub

Private Sub txtPTAmount3_Exit(ByVal Cancel As MSForms.ReturnBoolean)
    curCtrl = "txtPTAmount3"
    If Me(curCtrl).Text <> "" Then
        If IsNumeric(Me(curCtrl).Text) Then
            InputFormat Me(curCtrl).Name, "TextIsNumber", 2
        Else
            UpdateRT3 = 1
            MyErrorMsg Me.mpgWizard.Value, "Numeric", True, curCtrl
        End If
    End If
End Sub

Private Sub txtPTAmount4_Exit(ByVal Cancel As MSForms.ReturnBoolean)
    curCtrl = "txtPTAmount4"
    If Me(curCtrl).Text <> "" Then
        If IsNumeric(Me(curCtrl).Text) Then
            InputFormat Me(curCtrl).Name, "TextIsNumber", 2
        Else
            UpdateRT3 = 1
            MyErrorMsg Me.mpgWizard.Value, "Numeric", True, curCtrl
        End If
    End If
End Sub

Private Sub txtPTAmount5_Exit(ByVal Cancel As MSForms.ReturnBoolean)
    curCtrl = "txtPTAmount5"
    If Me(curCtrl).Text <> "" Then
        If IsNumeric(Me(curCtrl).Text) Then
            InputFormat Me(curCtrl).Name, "TextIsNumber", 2
        Else
            UpdateRT3 = 1
            MyErrorMsg Me.mpgWizard.Value, "Numeric", True, curCtrl
        End If
    End If
End Sub

Private Sub txtPTAmount6a_Exit(ByVal Cancel As MSForms.ReturnBoolean)
    curCtrl = "txtPTAmount6a"
    If Me(curCtrl).Text <> "" Then
        If IsNumeric(Me(curCtrl).Text) Then
            InputFormat Me(curCtrl).Name, "TextIsNumber", 2
        Else
            UpdateRT3 = 1
            MyErrorMsg Me.mpgWizard.Value, "Numeric", True, curCtrl
        End If
    End If
End Sub

Private Sub txtPTAmount6b_Exit(ByVal Cancel As MSForms.ReturnBoolean)
    curCtrl = "txtPTAmount6b"
    If Me(curCtrl).Text <> "" Then
        If IsNumeric(Me(curCtrl).Text) Then
            InputFormat Me(curCtrl).Name, "TextIsNumber", 2
        Else
            UpdateRT3 = 1
            MyErrorMsg Me.mpgWizard.Value, "Numeric", True, curCtrl
        End If
    End If
End Sub

Private Sub txtPTAmount7a_Exit(ByVal Cancel As MSForms.ReturnBoolean)
    curCtrl = "txtPTAmount7a"
    If Me(curCtrl).Text <> "" Then
        If IsNumeric(Me(curCtrl).Text) Then
            InputFormat Me(curCtrl).Name, "TextIsNumber", 2
        Else
            UpdateRT3 = 1
            MyErrorMsg Me.mpgWizard.Value, "Numeric", True, curCtrl
        End If
    End If
End Sub

Private Sub txtPTAmount7b_Exit(ByVal Cancel As MSForms.ReturnBoolean)
    curCtrl = "txtPTAmount7b"
    If Me(curCtrl).Text <> "" Then
        If IsNumeric(Me(curCtrl).Text) Then
            InputFormat Me(curCtrl).Name, "TextIsNumber", 2
        Else
            UpdateRT3 = 1
            MyErrorMsg Me.mpgWizard.Value, "Numeric", True, curCtrl
        End If
    End If
End Sub

Private Sub txtPTPercent7_Exit(ByVal Cancel As MSForms.ReturnBoolean)
    curCtrl = "txtPTPercent7"
    If Me(curCtrl).Text <> "" Then
        If IsNumeric(Me(curCtrl).Text) Then
            InputFormat Me(curCtrl).Name, "TextIsNumber", 2
        Else
            UpdateRT3 = 1
            MyErrorMsg Me.mpgWizard.Value, "Numeric", True, curCtrl
        End If
    End If
End Sub

Private Sub txtUPAmount_BeforeUpdate(ByVal Cancel As MSForms.ReturnBoolean)
    If Me.txtUPAmount.Text <> "" And IsNumeric(Me.txtUPAmount.Text) Then
        Me.txtUPAmount.Text = Format(Me.txtUPAmount.Text, "#,##0.00;(#,##0.00)")
    Else
        If Me.txtUPRemainingAmount.Text <> "0.00" Then
        Else
            MyErrorMsg Me.mpgWizard.Value, "Numeric", True, curCtrl
        End If
    End If
End Sub
Private Sub UpdateUPTot()

    Dim LoanAmount As Currency
    Dim ConstructionAmount As Long
    Dim vUP As Currency
    Dim TotalUP As Currency
    Dim i As Integer
    Dim BookName As String
    Dim BalanceUP As Currency
    TotalUP = 0
    LoanAmount = Me.txtUPLoanAmount.Value
    Me.txtUPLoanAmount.Value = Format(LoanAmount, "#,##0.00;(#,##0.00)")
    If Me.txtUPAmount.Text = "" Then
        TotalUP = 0
    Else
        TotalUP = Me.txtUPAmount.Text
    End If
    For i = 1 To LastIdx
        If ActiveDocument.Bookmarks.Exists("obUPID_" & (i)) Then
            If i <> CurIdx Then
                BookName = "UPAmount_" + Trim(Str(i))
                If ActiveDocument.Bookmarks.Exists(BookName) Then
                    On Error Resume Next
                    TotalUP = TotalUP + ActiveDocument.Bookmarks(BookName).Range.Text
                End If
            End If
        End If
    Next i
    BalanceUP = LoanAmount - TotalUP
    Me.txtUPProcessed.Value = Format(TotalUP, "#,##0.00;(#,##0.00)")
    Me.txtUPRemainingAmount = Format(BalanceUP, "#,##0.00;(#,##0.00)")
    If Me.txtUPRemainingAmount.Text = "0.00" Then
        Me.cmdUPNew.enabled = False
    End If
'    If Me.cbxUPCategory.ListIndex = 4 Or Me.cbxUPCategory.ListIndex = 5 Or Me.cbxUPCategory.ListIndex = 6 Or Me.cbxUPCategory.ListIndex = 9 Then
'        CheckConstruction
'    End If
    If LoanAmount = TotalUP Then
    'Turn on Contract Price here ...
        Me.cmdUPNew.enabled = False
        Me.cmdFinish.enabled = True
        Me.cmdNext.enabled = False
        Me.cmdback.enabled = False
        Me.cmdFirst.enabled = False
        CheckConstruction
    ElseIf LoanAmount < TotalUP And UpPass = 0 Then
        Me.cmdback.enabled = False
        Me.cmdFirst.enabled = False
        Me.cmdFinish.enabled = False
        Me.cmdNext.enabled = False
        Me.cmdWizardShortCut.visible = False
        If MsgBox("The total Use of Proceeds exceeds the Loan Amount." & vbCrLf & vbCrLf & _
                  "The Finish button will not become available unless both amounts are equal.", _
                  vbCritical + vbOKOnly, _
                  "Use of Proceeds") = vbOK Then
            UpPass = UpPass + 1
        End If
        UpdateUPTot
        'Removed 4/25/2011
'    ElseIf Me.cbxUPCategory.ListIndex <> 22 Then
'        Me.cmdFinish.enabled = False
'        Me.cmdNext.enabled = False
'        Me.cmdback.enabled = False
'        Me.cmdFirst.enabled = False
'        Me.cmdWizardShortCut.visible = False
    End If
    If BalanceUP = 0 And UPEdit = False Then
        Me.txtUPAmount.Locked = True
        Me.cbxUPCategory.Locked = True
        Me.txtUPField1.Locked = True
        Me.txtUPField2.Locked = True
        Me.txtUPAmount2.Locked = True
        Me.txtUPField3.Locked = True
        Me.txtUPText.Locked = True
        Me.cmdFinish.enabled = True
        Me.cmdWizardShortCut.visible = False
    End If
End Sub

Private Sub CheckConstruction()
    Dim ContractPrice As String
    For X = FirstIdx To LastIdx
        If X = CurIdx Then
            Select Case Me.cbxUPCategory.ListIndex
            Case 4, 5, 6, 9    'removed 7 6/30/03
                IsConstruction = IsConstruction + 1
                ConstructionAmount = Int(ConstructionAmount) + Int(Me.txtUPAmount.Text)
            Case Else
            End Select
        ElseIf X <> CurIdx Then
            If ActiveDocument.Bookmarks.Exists("obUPID_" & (X)) Then
                Select Case ActiveDocument.Bookmarks("obUPID_" & (X)).Range.Text
                Case 4, 5, 6, 9  'removed 7 6/30/03
                    IsConstruction = IsConstruction + 1
                    ConstructionAmount = Int(ConstructionAmount) + Int(ActiveDocument.Bookmarks("UPAmount_" & (X)).Range.Text)
                Case Else
                End Select
            End If
        End If
    Next X
    If ConstructionAmount >= 350000 And IsConstruction > 0 Then
        Me.txtUPContractPrice.TabStop = True
        Me.lblUPConstruction.enabled = True
        Me.txtUPContractPrice.enabled = True
        Me.txtUPContractPrice.BackColor = vbWhite
        ContractPrice = Me.txtUPContractPrice.Text
        Me.txtUPContractPrice.Text = IIf(Left(ActiveDocument.Bookmarks("CPPrice").Range.Text, 1) <> "[", Format(ActiveDocument.Bookmarks("CPPrice").Range.Text, "#,##0.00;(#,##0.00)"), "")
        Me.txtUPContractPrice.Text = ContractPrice
        If Me.cbxUPCategory.ListIndex = 16 Or Me.cbxUPCategory.ListIndex = 17 Then
            Me.lblUPConstruction.Top = 190 '219
            Me.lblUPConstruction.ZOrder (0)
            Me.fraUPInfo2.ZOrder (1)
            Me.txtUPContractPrice.Top = 206 '233
            Me.txtUPContractPrice.ZOrder (0)
        End If
    ElseIf ConstructionAmount < 350000 And IsConstruction > 0 Then
        Me.lblUPConstruction.enabled = False
        Me.txtUPContractPrice.TabStop = False
        'Me.txtUPContractPrice.Text = ""
        Me.txtUPContractPrice.enabled = False
        Me.txtUPContractPrice.BackColor = myGray
    ElseIf IsConstruction = 0 Then
        Me.lblUPConstruction.enabled = False
        Me.txtUPContractPrice.TabStop = False
        'Me.txtUPContractPrice.Text = ""
        Me.txtUPContractPrice.enabled = False
        Me.txtUPContractPrice.BackColor = myGray
    End If
End Sub

Private Sub InsertUP()
    Dim ii
    Dim CurIdx_
    Dim CheckField
    Dim j
    Dim Field
    Dim Value
    InsertText "none", "Inc_RP010", "none", 0, 2
    For ii = 1 To LastIdx
        CurIdx_ = Trim(Str(ii))
        CheckField = RP__(7, 1) + "_" + CurIdx_
        If ActiveDocument.Bookmarks.Exists(CheckField) Then
            j = 1
            While RP__(7, j) <> ""
                Field = RP__(7, j)
                Value = ActiveDocument.Bookmarks(Field + "_" + CurIdx_).Range.Text
                UpdateField Field, Value, -1
                j = j + 1
            Wend
            Dim CatSelected As String
            For i = FirstIdx To LastIdx
                If ActiveDocument.Bookmarks.Exists("obUPID_" & i) Then
                    CatSelected = CatSelected & "|" & IIf(InStr(1, ActiveDocument.Bookmarks("obUPID_" & i).Range.Text, "[") = 0, Trim(ActiveDocument.Bookmarks("obUPID_" & i).Range.Text), "")
                End If
            Next i
'            MsgBox CatSelected
'            Removed 4/25/2011 to allow
'            If InStr(1, CatSelected, "|22") > 0 Then
'                InsertText "Para_RP010a", "Inc_RP010", "none", 0, 0
'            Else
                InsertText "Para_RP010", "Inc_RP010", "none", 0, 0
'            End If
        End If
    Next ii
    If InStr(1, CatSelected, "|24") > 0 Then
       InsertText "Para_RP010b", "Inc_RP010", "none", 0, 0
    End If
    CurIdx = FirstIdx
    CurIdx_ = Trim(Str(CurIdx))
    j = 1
    While RP__(7, j) <> ""
        Field = RP__(7, j)
        If ActiveDocument.Bookmarks.Exists(Field + "_" + CurIdx_) Then
            Value = ActiveDocument.Bookmarks(Field + "_" + CurIdx_).Range.Text
            On Error Resume Next
            UpdateField Field, Value, -1
            j = j + 1
        End If
    Wend
End Sub
Private Sub UpdateCurUP()
    ActiveDocument.ActiveWindow.View.ShowFieldCodes = True
    Dim i
    i = 1
    RPid_ = 7
    CurIdx = ActiveDocument.Bookmarks("RPCur010").Range.Text
    While RP__(RPid_, i) <> ""
        If RP__(RPid_, i) = "obUPID" Then
            UpdateField RP__(RPid_, i) + "_" + Trim(Str(CurIdx)), Me.cbxUPCategory.ListIndex, -1
        Else
            UpdateField RP__(RPid_, i) + "_" + Trim(Str(CurIdx)), IIf(Me("txt" & (RP__(RPid_, i))).Text = "", "", Me("txt" & (RP__(RPid_, i))).Text), -1
        End If
        i = i + 1
    Wend
End Sub

Private Sub txtUPAmount_Exit(ByVal Cancel As MSForms.ReturnBoolean)
    curCtrl = "txtUPAmount"
    If Me(curCtrl).Text <> "" Then
        If IsNumeric(Me(curCtrl).Text) Then
            InputFormat Me(curCtrl).Name, "TextIsNumber", 2
        Else
            UpdateUP = 1
            MyErrorMsg Me.mpgWizard.Value, "Numeric", True, curCtrl
        End If
        If Me.txtUPProcessed.Text = "0.00" And Me.cmdUPNew.Caption = "New" Then
            Me.cmdAC1New.enabled = True
        ElseIf Me.txtUPRemainingAmount.Text = "0.00" And Me.cmdUPNew.Caption = "Save" Then
        End If
    Else
    End If
End Sub

Private Sub txtUPContractPrice_Exit(ByVal Cancel As MSForms.ReturnBoolean)
    curCtrl = "txtUPContractPrice"
    If Me(curCtrl).Text <> "" Then
        If IsNumeric(Me(curCtrl).Text) Then
            InputFormat Me(curCtrl).Name, "TextIsNumber", 2
        Else
            UpdateUP = 1
            MyErrorMsg Me.mpgWizard.Value, "Numeric", True, curCtrl
        End If
    End If
    Me.cmdUPNew.TabStop = False
End Sub

Private Sub txtUPRemainingAmount_Change()
'If Me.cbxUPCategory.ListIndex = 22 Then
'Else
    If Me.txtUPRemainingAmount.Text <> "0.00" Then
        Me.cmdUPNew.enabled = True
        Me.cmdNext.enabled = False
        Select Case Me.cbxUPCategory.ListIndex
        Case 4, 5, 6, 9
        Case Else
            Me.txtUPContractPrice.enabled = False
            Me.txtUPContractPrice.TabStop = False
            'Me.txtUPContractPrice.Text = ""
            Me.txtUPContractPrice.BackColor = myGray
        End Select
        Me.cmdFinish.enabled = False
        Me.cmdWizardShortCut.visible = False
    Else
        Me.cmdNext.enabled = False
        Me.cmdFinish.enabled = True
        Me.cmdUPNew.enabled = False
    End If
    If Me.txtUPRemainingAmount.Text = "0.00" Then
        Me.cmdUPShowList.enabled = True
        Me.cmdWizardShortCut.enabled = True
        Me.cmdUPNew.Caption = "New"
        Me.cmdUPNew.Accelerator = "N"
    End If
    Me.txtUPRemaining2.Text = Me.txtUPRemainingAmount.Text
'End If
End Sub

Private Sub txtVLOOverPrime_Enter()
'Added 9/11/2006 to allow use in Word 2003
    On Error Resume Next
    If ActiveDocument.ProtectionType <> wdNoProtection Then
        ActiveDocument.Unprotect "snad7623"
    End If
    '  If ActiveDocument.ProtectionType = 1 Then
    '    'This was added because an error occurred on Ed's machine (4605 This method or property is not available because the document is locked for editing)
    '    'Could not determine the cause of this error -- occurred after update and on Cancel of Repayment Terms to return to doc
    '    ActiveDocument.Unprotect
    '  End If
    If Me.txtVLOOverPrime.Text = "" Then
        Me.txtVLOOverPrime.Text = IIf(Me.txtIRVariableOverPrime.Text <> "", Me.txtIRVariableOverPrime.Text, Me.txtVLOOverPrime.Text)
        Me.txtVLOOverPrime.Text = IIf(Me.txtIRFixedVariableOverPrime.Text <> "", Me.txtIRFixedVariableOverPrime.Text, Me.txtVLOOverPrime.Text)
        Me.txtVLOOverPrime.Text = IIf(Me.txtIRLenderOverPrime.Text <> "", Me.txtIRLenderOverPrime.Text, Me.txtVLOOverPrime.Text)
        Me.txtVLOOverPrime.Text = IIf(Me.txtIRSBAOverPrime.Text <> "", Me.txtIRSBAOverPrime.Text, Me.txtVLOOverPrime.Text)
        Me.txtVLOOverPrime.Text = IIf(Me.txtIRSplitPrime.Text <> "", Me.txtIRSplitPrime.Text, Me.txtVLOOverPrime.Text)
    End If
    '  ActiveDocument.Protect wdAllowOnlyComments
    'Added 9/11/2006 to work with Word 2003
    On Error Resume Next
    If Val(Application.Version) >= 11 And ActiveDocument.ProtectionType <> wdAllowOnlyReading Then
        ActiveDocument.Protect wdAllowOnlyReading, , "snad7623"
    Else
        ActiveDocument.Protect wdAllowOnlyComments
    End If
    Me.cmdVLOInfo.enabled = True
End Sub

Private Sub txtVLOOverPrime_Exit(ByVal Cancel As MSForms.ReturnBoolean)
    curCtrl = "txtVLOOverPrime"
    If Me(curCtrl).Text <> "" Then
        If IsNumeric(Me(curCtrl).Text) Then
            InputFormat Me(curCtrl).Name, "TextIsNumber", 2
        Else
            UpdateRT4 = 1
            MyErrorMsg Me.mpgWizard.Value, "Numeric", True, curCtrl
        End If
    End If
End Sub
Public Sub CCClosing()
    Application.ScreenUpdating = False
    Dim i
    Dim i_
    Dim InCA
    Dim InAK
    Dim InWI
    Dim InMD
    Dim InPA
    Dim InDE
    Dim InVA
    Dim InOH
    Dim InMO
    Dim InGA
    Dim InOR
    Dim InWA
    Dim InID
    Dim REState
    Dim Gty As String
    Dim MyBook
    Dim xx
    '    InCA = 0
    '    InAK = 0
    '    InWI = 0
    '    InMD = 0
    '    InPA = 0
    '    InDE = 0
    '    InVA = 0
    '    InOH = 0
    '    InMO = 0
    Gty = ""
    MyBook = ""
    REState = ActiveDocument.Bookmarks("CCAll").Range.Text
    '    xx = "0"
    For i = Val(ActiveDocument.Bookmarks("RPFirst007").Range.Text) To _
        Val(ActiveDocument.Bookmarks("RPLast007").Range.Text)
        i_ = Trim(Str(i))
        'Borrower lives in the state:
        If ActiveDocument.Bookmarks.Exists("BorrowerState_" + i_) Then
            Select Case WizField("BorrowerState_" + i_)
            Case "CA"
                InCA = 1
            Case "AK"
                InAK = 1
            Case "WI"
                InWI = 1
            Case "MD"
                InMD = 1
            Case "MO"
                InMO = 1
            Case "PA"
                InPA = 1
            Case "DE"
                InDE = 1
            Case "KY"
                InKY = 1
            Case "VA"
                InVA = 1
            Case "OH"
                InOH = 1
            Case "GA"
                InGA = 1
            Case "OR"
                InOR = 1
            Case "WA"
                InWA = 1
            Case Else
            End Select
        End If
    Next
    On Error Resume Next
    Gty = ActiveDocument.Bookmarks("CC29to30").Range.Text
    On Error GoTo -1: On Error GoTo 0
    On Error Resume Next
    MyBook = ActiveDocument.Bookmarks("CCAll").Range.Text
    On Error GoTo -1: On Error GoTo 0
    xx = "0"
    If InStr(MyBook, " CA ") > 0 Or _
       InStr(MyBook, " CA,") > 0 Or _
       InStr(MyBook, " CA.") > 0 Or _
       InStr(MyBook, " CA;") > 0 Or _
       ActiveDocument.Bookmarks("C1State").Range.Text = "CA" Then xx = "1"  'Removed 12/29/2007 Or InStr(MyBook, " California") > 0
    'The following paragraph shows in Repayment Terms
    If InStr(Gty, "resident in California") > 0 Then xx = "1"
    InsertText "Para_SPCAF3", "Inc_SPCAF3", InCA, 1, 2
    
    If InCA = 1 Or ActiveDocument.Bookmarks("C1State").Range.Text = "CA" Then xx = "1"
    If Len(Gty) <= 8 And ActiveDocument.Bookmarks("C1State").Range.Text <> "CA" Then xx = "0"
    'The following paragraph shows in Collateral Conditions
    InsertText "Para_SPCA", "Inc_SPCA", xx, 1, 2
    If InStr(REState, "[RECC IN CA][residential]") > 0 Then
     InsertText "Para_SPCAF3", "Inc_SPCAF3", xx, 1, 2
    End If
  
    ' Added by RH 1/24/2018 for testing Resident in California
    If InStr(Gty, "resident in California") > 0 Then xx = "1"
   ' If InStr(REState, "RECC IN CA") > 0 Then xx = "1"
   ' InsertText "Para_SPCAF3", "Inc_SPCAF3", xx, 1, 2
    ' InsertText "Para_SPCA", "Inc_SPCA", xx, 1, 2
    If InCA = 1 Then
     InsertText "Para_SPCA", "Inc_SPCA", Str(InCA), 1, 2
    End If
    ' InsertText "Para_SPCA", "Inc_SPCA", Str(InCA), 1, 2
    
    
    xx = "0" 'Alaska
    If InStr(REState, "RECC IN AK") > 0 Then xx = "1"
    'If InStr(Gty, "resident in Alaska") > 0 Then xx = "1"
    'If xx = "1" Then
    InsertText "Para_SPAK", "Inc_SPAK", xx, 1, 2
    InsertText "Para_SPAKF3", "Inc_SPAKF3", Str(InAK), 1, 2
    'End If
    
    xx = "0"  'Arizona
    If InStr(Gty, "resident in Arizona") > 0 Then xx = "1"
    'If xx = "1" Then
    InsertText "Para_SPAZ", "Inc_SPAZ", xx, 1, 2
'    InsertText "Para_SPAZF3", "Inc_SPAZF3", Str(InAZ), 1, 2
    'End If
    
    xx = "0"  'Wisconsin
    If InStr(Gty, "resident in Wisconsin") > 0 Then xx = "1"
    'If xx = "1" Then
    InsertText "Para_SPWI", "Inc_SPWI", xx, 1, 2
    InsertText "Para_SPWIF3", "Inc_SPWIF3", Str(InWI), 1, 2
    'End If
    
    xx = "0"
    If InStr(Gty, "resident in Maryland") > 0 Then xx = "1"
    'If xx = "1" Then
    InsertText "Para_SPMD", "Inc_SPMD", xx, 1, 2
    InsertText "Para_SPMDF3", "Inc_SPMDF3", Str(InMD), 1, 2
    'End If
    
    xx = "0"
    If InStr(Gty, "resident in Pennsylvania") > 0 Then xx = "1"
    'If xx = "1" Then
    InsertText "Para_SPPA", "Inc_SPPA", xx, 1, 2
    InsertText "Para_SPPAF3", "Inc_SPPAF3", Str(InPA), 1, 2
    'End If
    
    xx = "0"
    If InStr(Gty, "resident in Delaware") > 0 Then xx = "1"
    'If xx = "1" Then
    InsertText "Para_SPDE", "Inc_SPDE", xx, 1, 2
    InsertText "Para_SPDEF3", "Inc_SPDEF3", Str(InDE), 1, 2
      
    'End If
    
    xx = "0"
    If InStr(Gty, "resident in Virginia") > 0 Then xx = "1"
    'If xx = "1" Then
    InsertText "Para_SPVA", "Inc_SPVA", xx, 1, 2
    InsertText "Para_SPVAF3", "Inc_SPVAF3", Str(InVA), 1, 2
    'End If
 '   xx = "0"
 '  If InStr(Gty, "resident in Georgia") > 0 Then xx = "1"
 '   InsertText "Para_SPGA", "Inc_SPGA", xx, 1, 2
 '   InsertText "Para_SPGAF3", "Inc_SPOGA3", str(InOH), 1, 2
    
    xx = "0"
    If InStr(Gty, "resident in Kentucky") > 0 Then xx = "1"
    'If xx = "1" Then
    InsertText "Para_SPKY", "Inc_SPKY", xx, 1, 2
    'End If
    
    
    xx = "0"
    If InStr(Gty, "resident in Ohio") > 0 Then xx = "1"
    'If xx = "1" Then
    InsertText "Para_SPOHF3", "Inc_SPOHF3", Str(InOH), 1, 2
    'End If
    
    xx = "0"
    If InStr(Gty, "resident in Missouri") > 0 Then xx = "1"
    'If xx = "1" Then
    InsertText "Para_SPMO", "Inc_SPMO", xx, 1, 2
    InsertText "Para_SPMOF3", "Inc_SPMO3", Str(InMO), 1, 2
'    InsertText "Para_SPMO", "Inc_SPMO", Str(InMO), 1, 2
    'End If
    
    xx = "0"
    If InStr(Gty, "resident in Georgia") > 0 Then xx = "1"
    'If xx = "1" Then
    InsertText "Para_SPGA", "Inc_SPGA", xx, 1, 2
    InsertText "Para_SPGAF3", "Inc_SPGA3", Str(InGA), 1, 2
'    InsertText "Para_SPGA", "Inc_SPGA", Str(InGA), 1, 2
    'End If
    
    xx = "0"
    If InStr(Gty, "resident in Oregon") > 0 Then xx = "1"
    'If xx = "1" Then
    InsertText "Para_SPOR", "Inc_SPOR", xx, 1, 2
    InsertText "Para_SPORF3", "Inc_SPOR3", Str(InOR), 1, 2
'    InsertText "Para_SPOR", "Inc_SPOR", Str(InOR), 1, 2
    'End If
    
    xx = "0"
    If InStr(REState, "RECC IN WA") > 0 Then xx = "1"
    'If InStr(Gty, "resident in Washington") > 0 Then xx = "1"
    'If xx = "1" Then
    InsertText "Para_SPWA", "Inc_SPWA", xx, 1, 2
    InsertText "Para_SPWAF3", "Inc_SPWA3", Str(InWA), 1, 2
'    InsertText "Para_SPGA", "Inc_SPGA", Str(InGA), 1, 2
    'End If

    xx = "0"
    ' If InStr(Gty, "resident in Idaho") > 0 Then xx = "1"
    If InStr(REState, "RECC IN ID") > 0 Then xx = "1"
    'If xx = "1" Then
    InsertText "Para_SPID", "Inc_SPID", xx, 1, 2
    'End If
    
End Sub
Public Sub ShowBlankPage()
    Application.ScreenUpdating = False
    Selection.EndKey Unit:=wdStory
    ActiveDocument.Bookmarks("BlankPage").Range.Select
    Application.ScreenUpdating = True
    Application.ScreenRefresh
    Application.ScreenUpdating = False
End Sub

'''==Private Sub UserForm_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
'''  Application.ScreenUpdating = True
'''  Application.ScreenRefresh
'''  Application.ScreenUpdating = False
'''End Sub
'''
Private Sub UserForm_Activate()
    If StartID >= 0 Then
        Select Case StartID
        Case 0
            UpdateLI1 = 0
            SectionStart = 0
            Me.mpgWizard.Value = 0
            Me.lblTitle.Caption = "Loan Information"
            SetDialog StartID
            CommandSetup 3
            XMLRunWiz
'            If XMLLoaded = True Then
'                Me.mpgWizard.Value = 25
                'Loan Information
'                Application.ScreenUpdating = False
'                Me.mpgWizard.Value = 0
'                Me.mpgWizard.Value = 1
'                Me.mpgWizard.Value = 2
'    '            'PlsWait = 25
'                cmdFinish_Click
                'Repayment Terms
'                cmdWizardRepayment_Click
'                Me.mpgWizard.Value = 3
'                Me.mpgWizard.Value = 4
'                Me.mpgWizard.Value = 5
'                Me.mpgWizard.Value = 6
'                cmdFinish_Click
                'Use of Proceeds
'                cmdWizardUseProceeds_Click
'                If Me.cmdUPRight.enabled = True Then
'                    cmdUPRight_Click
'                End If
'                cmdFinish_Click
                'Collateral Conditions
                'Separate code
                'Additional Conditions I
'                cmdWizardAC1_Click
'                Me.mpgWizard.Value = 17
'                Me.mpgWizard.Value = 18
'                Me.mpgWizard.Value = 19
'                Me.mpgWizard.Value = 20
'                Me.mpgWizard.Value = 21
'                cmdFinish_Click
                'Additional Conditions II
'                cmdWizardAC2_Click
'                Me.mpgWizard.Value = 22
'                Me.mpgWizard.Value = 23
'                Me.mpgWizard.Value = 24
'                cmdFinish_Click
'                cmdCancel_Click
'                Selection.HomeKey Unit:=wdStory
'            End If
        Case 1
            UpdateRT1 = 0
'            If ActiveDocument.Bookmarks("cbLIDFP").Range.Text = 1 Then
'                SectionStart = 4
'                Me.mpgWizard.Value = 4
'                CommandSetup 4
'            Else
                SectionStart = 3
                Me.mpgWizard.Value = 3
                CommandSetup 3
'            End If
            Me.lblTitle.Caption = "Repayment Information"
            SetDialog StartID
        Case 2
    '      UpdateUP = 0
            Me.mpgWizard.Value = 7
            SectionStart = 7
            Me.lblTitle.Caption = "Use of Proceeds Information"
            SetDialog StartID
            FirstPass = True
        Case 3
    '      UpdateCC1 = 0
            Me.mpgWizard.Value = 8
            SectionStart = 8
            Me.lblTitle.Caption = "Collateral Information"
            SetDialog StartID
        Case 4
            UpdateACI1 = 0
            Me.mpgWizard.Value = 17
            SectionStart = 17
            Me.lblTitle.Caption = "Additional Conditions I Information"
            SetDialog StartID
            CommandSetup 3
        Case 5
            UpdateACII1 = 0
            Me.mpgWizard.Value = 22
            SectionStart = 22
            Me.lblTitle.Caption = "Additional Conditions II Information"
            SetDialog StartID
            CommandSetup 3
        Case 6
            UpdateLI1 = 0
            UpdateLI2 = 0
            UpdatepgLI1
            UpdatepgLI2
            Me.mpgWizard.Value = 2
            Me.lblTitle.Caption = "Loan Information"
            StartID = 0
            SectionStart = 0
            SetDialog StartID
            Me.cmdLIWizTips.visible = False
            CommandSetup "EnableFinish"
        Case Else
        End Select
    End If
    frmMain.ShowBlankPage
    If Me.mpgWizard.Value = 0 Then
        If Me.cbxSBAName.ListCount = 0 Then
            Me.txtSBAName.Locked = False
            Me.txtSBAName.enabled = True
            Me.txtSBAName.TabStop = True
            Me.txtSBAName.visible = True
            Me.txtSBAName.BackColor = vbWhite
            Me.txtSBAAddress.Locked = False
            Me.txtSBAAddress.enabled = True
            Me.txtSBAAddress.TabStop = True
            Me.txtSBAAddress.visible = True
            Me.txtSBAAddress.BackColor = vbWhite
            Me.txtSBAAddress2.Locked = False
            Me.txtSBAAddress2.enabled = True
            Me.txtSBAAddress2.TabStop = True
            Me.txtSBAAddress2.visible = True
            Me.txtSBAAddress2.BackColor = vbWhite
            Me.txtSBACity.Locked = False
            Me.txtSBACity.enabled = True
            Me.txtSBACity.TabStop = True
            Me.txtSBACity.visible = True
            Me.txtSBACity.BackColor = vbWhite
            Me.cbxSBAState.Locked = False
            Me.cbxSBAState.enabled = True
            Me.cbxSBAState.TabStop = True
            Me.cbxSBAState.visible = True
            Me.cbxSBAState.BackColor = vbWhite
            Me.txtSBAZip.Locked = False
            Me.txtSBAZip.enabled = True
            Me.txtSBAZip.TabStop = True
            Me.txtSBAZip.visible = True
            Me.txtSBAZip.BackColor = vbWhite
        End If
        On Error Resume Next
        If ActiveDocument.ProtectionType <> wdNoProtection Then
            ActiveDocument.Unprotect "snad7623"
        End If
        StartPage = 0
        Me.lblLastEdit.Caption = ""
        Me.chkLI501.Value = ActiveDocument.Bookmarks("cbLI501").Range.Text
        Me.chkLI502.Value = ActiveDocument.Bookmarks("cbLI502").Range.Text
        Me.chkLIDFP.Value = ActiveDocument.Bookmarks("cbLIDFP").Range.Text
'        Me.chkLIOpts.Value = ActiveDocument.Bookmarks("cbLIOPTS").Range.Text
'       Small Loan Advantage
        Me.chkLIDFP.Value = ActiveDocument.Bookmarks("cbLIDFP").Range.Text
'        If Me.chkLI501.Value = False Or Me.chkLI502.Value = False Then
'            On Error Resume Next
'            Me.chkLI501.SetFocus
'            curCtrl = "chkLI501"
'Small Loan Advantage
        If Me.chkLIDFP.Value = False Or Me.chkLISLA.Value = False Then
            On Error Resume Next
'           Me.chkLIOpts.SetFocus
'            curCtrl = "chkLIOPTS"
        Else
            Me.txtLIName.SetFocus
        End If
'        MsgBox DateValue(Now())
'        If DateValue(Format(Now(), "Short Date")) >= DateValue("10/1/2010") And Me.chkLI501.Value = False Then
'            Me.chkLI501.Value = False
'            Me.fraLIInfo.Top = 5
'            Me.fraSBAInfo.Top = 140
'            Me.cmdLIARRA.visible = False
'        Else
'            Me.fraLIInfo.Top = 21
'            Me.fraSBAInfo.Top = 156
'            Me.cmdLIARRA.visible = True
'        End If
        CurTab = Me.mpgWizard.Pages(ActiveControl.Value).Name
    End If
    If Me.mpgWizard.Value = 2 Then
        StartPage = 2
        Me.txtLSLoanNumber.SetFocus
        CurTab = Me.mpgWizard.Pages(ActiveControl.Value).Name
        curCtrl = "txtLSLoanNumber"
        CommandSetup 7
    End If
    If Me.mpgWizard.Value = 3 Then
        StartPage = 3
        UpdateControls "pgRT1"
        CurTab = Me.mpgWizard.Pages(ActiveControl.Value).Name
        CommandSetup "EnableNext"
        PrevCtrl = "fraIRInfo"
        curCtrl = "txtIRVariable"
    End If
    If Me.mpgWizard.Value = 7 Then
        StartPage = 7
        UpdateControls "pgUP"
        CurTab = Me.mpgWizard.Pages(ActiveControl.Value).Name
        PrevCtrl = ""
        curCtrl = "cbxUPCategory"
        If Me.cbxUPCategory.ListIndex = 21 Then
            Me.cmdUPNew.enabled = False
        Else
            Me.cmdUPNew.enabled = True
        End If
    End If
    If Me.mpgWizard.Value = 8 Then
        StartPage = 8
        UpdateControls "pgCC1"
        Me.mpgCCOptions.Value = 0
        CurTab = Me.mpgWizard.Pages(ActiveControl.Value).Name
        PrevCtrl = "fraCCInfo"
        curCtrl = "txtCCSelectMsg"
'        curCtrl = "optCCGuaranteesOnly"
    End If
    If Me.mpgWizard.Value = 17 Then
        StartPage = 17
        UpdateControls "pgACI1"
        CurTab = Me.mpgWizard.Pages(ActiveControl.Value).Name
        PrevCtrl = "fraAC1Info1"
        curCtrl = "chkAC1FloodInsurance"
    End If
    If Me.mpgWizard.Value = 22 Then
        StartPage = 22
        UpdateControls "pgACII1"
        CurTab = Me.mpgWizard.Pages(ActiveControl.Value).Name
        PreCtrl = "fraAC2Info"
        curCtrl = "chkAC2Cash"
    End If
    NavSetup
    PageSetup Me.mpgWizard.Value
    Me.cmdWizardShortCut.visible = True
    Me.cmdWizardLoanInfo.visible = False
    Me.cmdWizardRepayment.visible = False
    Me.cmdWizardUseProceeds.visible = False
    Me.cmdWizardCollateral.visible = False
    Me.cmdWizardAC1.visible = False
    Me.cmdWizardAC2.visible = False
    Me.cmdWizardSave.visible = False
    On Error Resume Next
    Me(PrevCtrl).SetFocus
    Me(curCtrl).SetFocus
    HelpPath = ActiveDocument.AttachedTemplate.Path + "\"
End Sub

Public Sub NavSetup()
'<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
'    Daniel H. Smith    7/29/2002
'<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
'    Documentation -- NavSetup
'<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
'This section of code:
'<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
'The Wizard is programmed below so each button will appear
'lower on the screen during runtime than in development
'<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
    
    Me.cmdWizardSave.Top = 309.7
    Me.cmdWizardLoanInfo.Top = 328.95 '427.2
    Me.cmdWizardRepayment.Top = 348.6 '407.55
    Me.cmdWizardUseProceeds.Top = 368.25 '387.9 '387.9
    Me.cmdWizardCollateral.Top = 387.9 '368.25 '368.25
    Me.cmdWizardAC1.Top = 407.55 '348.6
    Me.cmdWizardAC2.Top = 427.2   '159.65
    
'    Me.cmdWizardSave.Top = 309.7
'    Me.cmdWizardLoanInfo.Top = 427.2
'    Me.cmdWizardRepayment.Top = 407.55
'    Me.cmdWizardCollateral.Top = 368.25
'    Me.cmdWizardUseProceeds.Top = 387.9
'    Me.cmdWizardAC1.Top = 348.6
'    Me.cmdWizardAC2.Top = 328.95   '159.65
End Sub

Private Sub UserForm_Initialize()
'<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
'    Daniel H. Smith    7/29/2002
'<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
'    Documentation -- UserForm_Initialize
'<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
'This section of code:
'<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
'The RPid coding initializes the repeating sections of
'the Wizard.
'Each panel is set to 0 to indicate no previous control
'update
'The evidence dropdown is populated for Collateral
' Conditions -- this may be moved to that section
'SBA Office list populated and first panel set (pgLI1)
'<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
'
    EditSBA = True
    Options.Pagination = False
    frmPleaseWait.lblWaitActivity.Caption = "Initializing ..."
    frmPleaseWait.Show
    Application.ScreenRefresh
    Application.ScreenUpdating = False
    'Added 9/11/2006 to allow use in Word 2003
    On Error Resume Next
    If ActiveDocument.ProtectionType <> wdNoProtection Then
        ActiveDocument.Unprotect "snad7623"
    End If
    '  On Error Resume Next
    '  If ActiveDocument.ProtectionType <> wdNoProtection Then
    '    ActiveDocument.Unprotect
    '  End If
    RPid__(0) = "007"
    RPid__(1) = "008"
    RPid__(2) = "001"
    RPid__(3) = "002"
    RPid__(4) = "009"
    RPid__(5) = "005"
    RPid__(6) = "006"
    RPid__(7) = "010"
    RPid__(8) = "003"    'Collateral Conditions area
    RPid__(9) = "011"    'Non-Citizen Ownership
    
    RP__(0, 0) = ActiveDocument.Bookmarks("RPCur007").Range.Text
    RP__(0, 1) = "BorrowerName"
    RP__(0, 2) = "BorrowerDba"
    RP__(0, 3) = "BorrowerAddress"
    RP__(0, 4) = "BorrowerAddress2"
    RP__(0, 5) = "BorrowerCity"
    RP__(0, 6) = "BorrowerState"
    RP__(0, 7) = "BorrowerZip"
    RP__(1, 0) = ActiveDocument.Bookmarks("RPCur008").Range.Text
    RP__(1, 1) = "OCName"
    RP__(1, 2) = "OCDba"
    RP__(1, 3) = "OCAddress"
    RP__(1, 4) = "OCAddress2"
    RP__(1, 5) = "OCCity"
    RP__(1, 6) = "OCState"
    RP__(1, 7) = "OCZip"
    RP__(1, 8) = "cbCoBorrower"
    RP__(2, 0) = ActiveDocument.Bookmarks("RPCur001").Range.Text
    RP__(2, 1) = "IC5Insured"
    RP__(2, 2) = "IC5Amount"
    RP__(3, 0) = ActiveDocument.Bookmarks("RPCur002").Range.Text
    RP__(3, 1) = "BD5From"
    RP__(3, 2) = "BD5Amount"
    RP__(3, 3) = "BD5Term"
    RP__(3, 4) = "cbBD5Subordinate"
    RP__(4, 0) = ActiveDocument.Bookmarks("RPCur009").Range.Text
    RP__(4, 1) = "BD4Principal"
    RP__(4, 2) = "BD4Competitor"
    RP__(5, 0) = ActiveDocument.Bookmarks("RPCur005").Range.Text
    RP__(5, 1) = "SAName"
    RP__(5, 2) = "SAAmount"
    RP__(5, 3) = "obSA"
    RP__(5, 4) = "SARate"
    RP__(5, 5) = "SAPayments"
    RP__(5, 6) = "SABeginDate"
    RP__(5, 7) = "SAWyoA"
    RP__(6, 0) = ActiveDocument.Bookmarks("RPCur006").Range.Text
    RP__(6, 1) = "obAP"
    RP__(6, 2) = "APLocation"
    RP__(6, 3) = "APMake"
    RP__(6, 4) = "APModel"
    RP__(6, 5) = "APYear"
    RP__(6, 6) = "APAmount"
    RP__(7, 0) = ActiveDocument.Bookmarks("RPCur010").Range.Text
    RP__(7, 1) = "obUPID"
    RP__(7, 2) = "UPAmount"
    RP__(7, 3) = "UPText"
    RP__(7, 4) = "UPField1"
    RP__(7, 5) = "UPField2"
    RP__(7, 6) = "UPAmount2"
    RP__(7, 7) = "UPField3"
    RP__(9, 0) = ActiveDocument.Bookmarks("RPCur011").Range.Text
    RP__(9, 1) = "NonCitizen"
'    RP__(9, 2) = "optAC50Pct"
    
    UpdateLI1 = 0
    UpdateLI2 = 0
    UpdateLI3 = 0
    UpdateRT1 = 0
    UpdateRT2 = 0
    UpdateRT3 = 0
    UpdateRT4 = 0
    UpdateUP = 0
    UpdateACI1 = 0
    UpdateACI2 = 0
    UpdateACI3 = 0
    UpdateACI4 = 0
    UpdateACI5 = 0
    UpdateACII1 = 0
    UpdateACII2 = 0
    UpdateACII3 = 0
    CtrlIndex = 0

    Evidence__(1) = "ALTA Loan Policy insuring lender and assigns"
    Evidence__(2) = "Mortgagee's Title Policy insuring lender and assigns"
    Evidence__(3) = "Attorney's Certificate of title, or title opinion in favor of lender (...)"
    Evidence__(4) = "Title Insurance customarily obtained for similar transactions in this state"
    Evidence__(5) = "Title and/or Lien Search, or other evidence of proper ownership (...)"
    Evidence__(6) = "CLTA Loan Policy"
    Evidence__(7) = "Limited Title Policy"
    Evidence__(8) = "Property, Judgment and Lien Report indicating lender obtained required position"

    Application.ScreenUpdating = False
    Dim vShowIt As Boolean
    Dim txtProg As control
    SetDialog (StartID)
    vShowIt = False
    'Added 9/11/2006 to allow use in Word 2003
    On Error Resume Next
    If ActiveDocument.ProtectionType <> wdNoProtection Then
        ActiveDocument.Unprotect "snad7623"
    End If
    '  On Error Resume Next
    '  If ActiveDocument.ProtectionType <> wdNoProtection Then
    '    ActiveDocument.Unprotect
    '  End If
    If ActiveDocument.Bookmarks("SBACode").Range.Text <> "0" Or ActiveDocument.Bookmarks("SBACode").Range.Text = "[SBACode]" Then
        PopulateSBAOfficeList
    Else
    '''''    Me.cbxSBAName.Visible = False
    '''''    Me.cbxSBAName.Locked = True
        Me.txtSBAName.enabled = True
        Me.txtSBAName.visible = True
        Me.txtSBAName.Locked = False
        Me.txtSBAName.BackColor = vbWhite
        Me.txtSBAName.Text = IIf(Left(ActiveDocument.Bookmarks("SBAName").Range.Text, 1) <> "[", ActiveDocument.Bookmarks("SBAName").Range.Text, "")
        Me.txtSBAAddress.BackColor = vbWhite
        Me.txtSBAAddress.Text = IIf(Left(ActiveDocument.Bookmarks("SBAAddress").Range.Text, 1) <> "[", ActiveDocument.Bookmarks("SBAAddress").Range.Text, "")
        Me.txtSBAAddress2.BackColor = vbWhite
        Me.txtSBAAddress2.Text = IIf(Left(ActiveDocument.Bookmarks("SBAAddress2").Range.Text, 1) <> "[", ActiveDocument.Bookmarks("SBAAddress2").Range.Text, "")
        Me.txtSBACity.BackColor = vbWhite
        Me.txtSBACity.Text = IIf(Left(ActiveDocument.Bookmarks("SBACity").Range.Text, 1) <> "[", ActiveDocument.Bookmarks("SBACity").Range.Text, "")

        Me.cbxSBAState.BackColor = vbWhite
        Me.cbxSBAState.Locked = False
        StatesList Me.cbxSBAState
        Me.cbxSBAState.Value = IIf(Left(ActiveDocument.Bookmarks("SBAState").Range.Text, 1) <> "[", ActiveDocument.Bookmarks("SBAState").Range.Text, "")
        Me.txtSBAZip.BackColor = vbWhite
        Me.txtSBAZip.Text = IIf(Left(ActiveDocument.Bookmarks("SBAZip").Range.Text, 1) <> "[", ActiveDocument.Bookmarks("SBAZip").Range.Text, "")
    End If
    frmMain.Caption = "SBA " & WizName & " Authorization Wizard Version " & WizVer
    If WizSR <> "" Then
        Dim SR As String
        SR = "Service Release "
        frmMain.Caption = "SBA " & WizName & " Authorization Wizard Version " & WizVer & " (" & SR & WizSR & ")"
    End If
    Me.mpgWizard.Style = 2
    Me.mpgCCOptions.Style = 2
    Me.lblWizScreenNum.Caption = Me.mpgWizard.Value
    Me.mpgWizard.Value = SectionStart
    StartPage = SectionStart

    UpdateDlg = 0
    CtrlsOnly = 0
    BackupRP

    Application.ScreenUpdating = False
End Sub

Public Sub SetDialog(StartID)
    SectionStart = 0
    SectionEnd = 0
    '<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
    '    Daniel H. Smith    7/29/2002
    '<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
    '    Documentation -- SetDialog
    '<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
    'This section of code:
    '<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
    'Section begin and end points set (Start/End)
    'Captions for panel title also set
    '
    '<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
    '
    Select Case StartID
    Case 0  'Loan Information
        SectionStart = Me.mpgWizard("pgLI1").index
        SectionEnd = SectionStart + 2
        Me.lblTitle.Caption = "Loan Information"
    Case 1  'Repayment Information
        SectionStart = 0
'        If ActiveDocument.Bookmarks("cbLIDFP").Range.Text = 1 Then
'            SectionStart = Me.mpgWizard("pgRT2").index
'            SectionEnd = SectionStart + 1
'        Else
            SectionStart = Me.mpgWizard("pgRT1").index
            SectionEnd = SectionStart + 3
'        End If
        Me.lblTitle.Caption = "Repayment Information"
    Case 2  'Use of Proceeds
        SectionStart = Me.mpgWizard("pgUP").index
        SectionEnd = SectionStart + 4
        Me.lblTitle.Caption = "Use of Proceeds Information"
    Case 3  'Collateral Conditions
        SectionStart = Me.mpgWizard("pgCC1").index
        SectionEnd = SectionStart + 8
        Me.lblTitle.Caption = "Collateral Information"
    Case 4  'Additional Conditions 1
        SectionStart = Me.mpgWizard("pgACI1").index
        SectionEnd = SectionStart + 4
        Me.lblTitle.Caption = "Additional Conditions I Information"
    Case 5  'Additional Conditions 2
        SectionStart = Me.mpgWizard("pgACII1").index
        SectionEnd = SectionStart + 2
        Me.lblTitle.Caption = "Additional Conditions II Information"
    Case 6
        SectionStart = Me.mpgWizard("pgLI1").index
        SectionEnd = SectionStart + 2
        Me.lblTitle.Caption = "Loan Information"
    Case Else
        Me.lblTitle.Caption = "Processing Authorization ..."
    End Select

End Sub
Public Sub UpdateCCControls()
'<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
'    Daniel H. Smith    7/29/2002
'<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
'    Documentation -- UpdateCCControls
'<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
'This section of code:
'Not used as of 11/22/02 ... 11/26/02 only for WordBasic
'See ResetCCControls
'<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
'Initial panel values of Collateral Conditions set here
' from document bookmarks -- NO VALUE in VBA
'<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
'
'Update from Bookmark to Control Name
    Select Case CCid
    Case 3
        UpdateCtrl "C3Amount", "txtCCOwedSellerAmt4", 3
    Case 5
        UpdateCtrl "C5Amount1", "txtCCPriorAssignmentAmount", 3
        UpdateCtrl "C5Amount2", "txtCCFeeTitleAmount1", 3
    Case 6
    Case 7
        UpdateCtrl "C7Amount", "txtC7Amount", 3
        UpdateCtrl "C7MaxAmount", "txtC7MaxAmount", 3
        Me.chkCCLandlordWaiver2.Value = True
    Case 9
        UpdateCtrl "C9Year", "txtCCVehicleYear", 1
        UpdateCtrl "C9Lien1Amount", "txtCCFirstLH", 3
        UpdateCtrl "C9Lien2Amount", "txtCCFirstLHAmount", 3
        UpdateCtrl "C9Lien3Amount", "txtCCSecondLH", 3
        UpdateCtrl "C9Lien4Amount", "txtCCSecondLHAmount", 3
    Case 10
        UpdateCtrl "C10Lien1Amount", "txtCCFirstLHAmount", 3
        UpdateCtrl "C10Lien2Amount", "txtCCSecondLHAmount", 3
        UpdateCtrl "C10Lien3Amount", "txtCCThirdLHAmount", 3
        UpdateCtrl "C10Lien4Amount", "txtCCFourdhLHAmount", 3
    Case 11
        UpdateCtrl "C11Lien1Amount", "txtCCFirstLHAmount", 3
        UpdateCtrl "C11Lien2Amount", "txtCCSecondLHAmount", 3
        UpdateCtrl "C11Lien3Amount", "txtCCThirdLHAmount", 3
        UpdateCtrl "C11Lien4Amount", "txtCCFourthLHAmount", 3
    Case 12
        UpdateCtrl "C12Shares", "txtCCStockSharesNumber", 1
    Case 14
        UpdateCtrl "C14Year", "txtCCAircraftYear", 1
        UpdateCtrl "C14Lien1Amount", "txtCCFirstLHAmount", 0
        UpdateCtrl "C14Lien2Amount", "txtCCSecondLHAmount", 0
        UpdateCtrl "C14Lien3Amount", "txtCCThirdLHAmount", 0
        UpdateCtrl "C14Lien4Amount", "txtCCFourthLHAmount", 0
    Case 15
        UpdateCtrl "C15Lien1Amount", "txtCCFirstLHAmount", 3
        UpdateCtrl "C15Lien2Amount", "txtCCSecondLHAmount", 3
        UpdateCtrl "C15Lien3Amount", "txtCCThirdLHAmount", 3
        UpdateCtrl "C15Lien4Amount", "txtCCFourthLHAmount", 3
    Case 16
        UpdateCtrl "C16Amount", "txtCCGovContractAmount", 3
    Case 17
        UpdateCtrl "C17Date", "txtCCContractDate", 2
        UpdateCtrl "C17Amount", "txtCCContractAmount", 3
    Case 20
        UpdateCtrl "C20Amount", "txtCCDValue", 3
    Case 22
        UpdateCtrl "C22LienAmount", "txtCCLienAmount2", 5
        UpdateCtrl "C22Years", "txtCCPlusYears", 1
    Case 23
        UpdateCtrl "C23Date", "txtCCLeaseDate3", 2
        Me.chkCCLeaseDate3.Value = 1
        UpdateCtrl "C23Years", "txtCCPlusYears3", 1
        UpdateCtrl "C23Days", "txtCCWrittenNotice", 1
        Me.txtCCWrittenNotice.Text = "60"
    Case 24
        UpdateCtrl "C24LienAmount", "txtCCLienAmount4", 3
        UpdateCtrl "C24Years", "txtCCPlusYears3", 1
        UpdateCtrl "C24Days", "txtCCWrittenNotice", 1
        Me.txtCCWrittenNotice.Text = "60"
    Case 27
        UpdateCtrl "C27LienAmount", "txtCCLienAmount", 3
        UpdateCtrl "C27Years", "txtCCTermPlus", 1
    Case 28
    Case Else
    End Select
End Sub
Public Sub UpdateControls(Panel As String)
'<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
'    Daniel H. Smith    7/29/2002
'<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
'    Documentation -- UpdateControls
'<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
'This section of code:
'<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
'Sets panel initial values for all but Collateral Conditions
' Update set to 1 if updated (UpdateLI1 = 1)
'IIf statements used to avoid blank or "[" fields
'<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
'
    Application.ScreenUpdating = False
    'Added 9/11/2006 to allow use in Word 2003
    On Error Resume Next
    If ActiveDocument.ProtectionType <> wdNoProtection Then
        ActiveDocument.Unprotect "snad7623"
    End If
    '  If ActiveDocument.ProtectionType = 1 Then
    '    ActiveDocument.Unprotect
    '  End If
    Dim Ctrl As control
    Dim X As Integer
    Me.cmdLIWizTips.visible = False
    Select Case Panel
    Case "pgLI1"
    '============LOAN INFORMATION, page 1=============
        UpdatepgLI1
    Case "pgLI2"
    '============LOAN INFORMATION, page 2=============
        UpdatepgLI2
    Case "pgLI3"
    '============LOAN INFORMATION, page 3=============
        UpdatepgLI3
    Case "pgRT1"
    '============REPAYMENT TERMS, page 1=============
        UpdatepgRT1
    Case "pgRT2"
    '============REPAYMENT TERMS, page 2=============
        UpdatepgRT2
    Case "pgRT3"
    '============REPAYMENT TERMS, page 3=============
        UpdatepgRT3
    Case "pgRT4"
    '============REPAYMENT TERMS, page 4=============
        UpdatepgRT4
    Case "pgCC5"
    '============COLLATERAL CONDITIONS, page 1=============
        CCLienList cbxCCLienPosition3
        CCTypeList cbxCCTypeofProperty3
    Case "pgUP"
    '============USE OF PROCEEDS=============
        UpdatepgUP
    Case "pgCC1"
    '============COLLATERAL CONDITIONS=============
        UpdatepgCC1
    Case "pgCC2"
    '============COLLATERAL CONDITIONS=============
        Me.txtGTBalance.Text = ""
        Me.txtGTPrincipal.Text = ""
        Me.txtGTMaximum.Text = ""
        Me.txtGTPercentage.Text = ""
        Me.txtGTCollateral.Text = ""
        Me.txtGTTime.Text = ""
    Case "pgACI1"
    '============ADDITIONAL CONDITIONS I, page 1=============
        UpdatepgACI1
    Case "pgACI2"
    '============ADDITIONAL CONDITIONS I, page 2=============
        UpdatepgACI2
    Case "pgACI3"
    '============ADDITIONAL CONDITIONS I, page 3=============
        UpdatepgACI3
    Case "pgACI4"
    '============ADDITIONAL CONDITIONS I, page 4=============
        UpdatepgACI4
    Case "pgACI5"
    '============ADDITIONAL CONDITIONS I, page 5=============
        UpdatepgACI5
    Case "pgACII1"
    '============ADDITIONAL CONDITIONS II, page 1=============
        UpdatepgACII1
    Case "pgACII2"
    '============ADDITIONAL CONDITIONS II, page 2=============
        UpdatepgACII2
    Case "pgACII3"
    '============ADDITIONAL CONDITIONS II, page 3=============
        UpdatepgACII3
    Case "pgSaved"
        PopulateAddressList
    Case Else
    End Select
    Application.ScreenUpdating = False
End Sub
Private Sub NewRP(RPindex As String, Check, dlgCtrlPre)

'=============================================================
' frmMain.NewRP
' RPindex (Variant)
' Check (Variant)
' Sub
'-------------------------------------------------------------
' Modified 08-31-2001 WordBasic to VBA
' Author : Daniel H. Smith, Programmer/Analyst
' Notes :  Complete
'-------------------------------------------------------------
' Revision History
'-------------------------------------------------------------
' 08-31-2001 DHS:
'=============================================================
' End Code Header block
    Dim RPid_ As String
    Dim CurIdx As Integer
    Dim LastIdx As Integer
    Dim NewIdx As Integer
    Dim i As Integer
    Dim Field_ As String
    Dim dlgCtrlName As String
    Dim NewField As String
    Dim dlgCtrl As String
    Dim xx As Long
    Dim CurField As String
    Dim RPIDx As Integer
    Dim ArrayID As Integer
    System.Cursor = wdCursorWait
    Application.ScreenUpdating = False
    RPindex = Right(RPindex, 3)
    dlgCtrl = dlgCtrlPre
    If RPindex = "005" Then
        If Me("cmd" & dlgCtrlPre & "NewSA").Caption = "Save" Then
            If Me.txtAC2SAName.Text = "" Then
                MyErrorMsg Me.mpgWizard.Value, "Blank", "Yes", "txtAC2SAName"
                Exit Sub
            ElseIf Me.txtAC2SAAmount.Text = "" Then
                MyErrorMsg Me.mpgWizard.Value, "Blank", "Yes", "txtAC2SAAmount"
                Exit Sub
            ElseIf Me.txtAC2SAPayments.Text = "" And Me.txtAC2SAPayments.enabled = True Then
                MyErrorMsg Me.mpgWizard.Value, "Blank", "Yes", "txtAC2SAPayments"
                Exit Sub
            ElseIf Me.txtAC2SARate.Text = "" And Me.txtAC2SARate.enabled = True Then
                MyErrorMsg Me.mpgWizard.Value, "Blank", "Yes", "txtAC2SARate"
                Exit Sub
            ElseIf Me.txtAC2SABeginDate.Text = "" And Me.txtAC2SABeginDate.enabled = True Then
                MyErrorMsg Me.mpgWizard.Value, "Blank", "Yes", "txtAC2SABeginDate"
                Exit Sub
            ElseIf Me.txtAC2SAWyoA.Text = "" And Me.txtAC2SAWyoA.enabled = True Then
                MyErrorMsg Me.mpgWizard.Value, "Blank", "Yes", "txtAC2SAWyoA"
                Exit Sub
            End If
        End If
        strNew = "NewSA"    'New Standby Agreement item
    ElseIf RPindex = "002" Then
        If Me("cmd" & dlgCtrlPre & "NewAF").Caption = "Save" Then
            If Me.txtBD5From.Text = "" Then
                MyErrorMsg Me.mpgWizard.Value, "Blank", "Yes", "txtBD5From"
                Exit Sub
            ElseIf Me.txtBD5Amount.Text = "" Then
                MyErrorMsg Me.mpgWizard.Value, "Blank", "Yes", "txtBD5Amount"
                Exit Sub
            ElseIf Me.txtBD5Term.Text = "" And Me.txtBD5Term.enabled = True Then
                MyErrorMsg Me.mpgWizard.Value, "Blank", "Yes", "txtBD5Term"
                Exit Sub
            End If
        End If
        'Added txtcbBD5Subordinate 9/7/2007
        If Me.txtcbBD5Subordinate.Text = "" Then
            Me.txtcbBD5Subordinate.Text = 0
        End If
      strNew = "NewAF"  'New Additional Funding item
    ElseIf RPindex = "006" Then
        If Me("cmd" & dlgCtrlPre & "NewAppr").Caption = "Save" Then
            If Me.txtAC2APMake.Text = "" And Me.txtAC2APMake.enabled = True Then
                MyErrorMsg Me.mpgWizard.Value, "Blank", "Yes", "txtAC2APMake"
                Exit Sub
            ElseIf Me.txtAC2APAmount.Text = "" And Me.txtAC2APAmount.enabled = True Then
                MyErrorMsg Me.mpgWizard.Value, "Blank", "Yes", "txtAC2APAmount"
                Exit Sub
            ElseIf Me.txtAC2APLocation.Text = "" And Me.txtAC2APLocation.enabled = True Then
                MyErrorMsg Me.mpgWizard.Value, "Blank", "Yes", "txtAC2APLocation"
                Exit Sub
            ElseIf Me.txtAC2APModel.Text = "" And Me.txtAC2APModel.enabled = True Then
                MyErrorMsg Me.mpgWizard.Value, "Blank", "Yes", "txtAC2APModel"
                Exit Sub
            ElseIf Me.txtAC2APYear.Text = "" And Me.txtAC2APYear.enabled = True Then
                MyErrorMsg Me.mpgWizard.Value, "Blank", "Yes", "txtAC2APYear"
                Exit Sub
            ElseIf Me.txtAC2SAWyoA.Text = "" And Me.txtAC2SAWyoA.enabled = True Then
                MyErrorMsg Me.mpgWizard.Value, "Blank", "Yes", "txtAC2SAWyoA"
                Exit Sub
            End If
        End If
        strNew = "NewAppr"    'New Appraisal item
    ElseIf RPindex = "009" Then
        If Me("cmd" & dlgCtrlPre & "New").Caption = "Save" Then
            If Me.txtBD4Principal.Text = "" Then
                MyErrorMsg Me.mpgWizard.Value, "Blank", "Yes", "txtBD4Principal"
                Exit Sub
            ElseIf Me.txtBD4Competitor.Text = "" Then
                MyErrorMsg Me.mpgWizard.Value, "Blank", "Yes", "txtBD4Competitor"
                Exit Sub
            End If
        End If
        strNew = "New"
    ElseIf RPindex = "001" Then
        If Me.txtIC5Insured.Text = "" Then
            MyErrorMsg Me.mpgWizard.Value, "Blank", "Yes", "txtIC5Insured"
            Exit Sub
        ElseIf Me.txtIC5Amount.Text = "" Then
            MyErrorMsg Me.mpgWizard.Value, "Blank", "Yes", "txtIC5Amount"
            Exit Sub
        End If
        strNew = "New"
    ElseIf RPindex = "011" Then 'Non-Citizen Ownership
        If Me.txtNonCitizen.Text = "" Then
            MyErrorMsg Me.mpgWizard.Value, "Blank", "Yes", "txtNonCitizen"
            Exit Sub
        End If
        strNew = "NewNC"
    Else
        strNew = "New"
    End If
    If Me("cmd" & dlgCtrlPre & strNew).Caption = "Save" Then
        Me("cmd" & dlgCtrlPre & strNew).Default = True
        RPid_ = GetArrayId(RPindex)
        RPIDx = RPid_
        ArrayID = RPindex
        Pos = InStr(RP__(RPid_, 1), "Name")
        CurIdx = Val(RP__(RPid_, 0))
        i = 1
        While RP__(RPid_, i) <> ""
            Field_ = RP__(RPid_, i)
            If RPindex = "001" Then    'Insurance
                dlgCtrlName = "txt" & Field_
                Type_ = 0
            End If
            If RPindex = "002" And InStr(1, Field_, "cbBD5Subordinate") <> 0 Then    'Additional Funding
                dlgCtrlName = "txt" & Field_
                Type_ = 0
            ElseIf RPindex = "002" And InStr(1, Field_, "cb") = 0 Then
                dlgCtrlName = "txt" & Field_
                Type_ = 0
            End If
            If RPindex = "005" Then    'Standby Agreement
                dlgCtrlName = "txtAC2" & Field_
                Type_ = 0
                Me.txtAC2obSA.Text = Me.cbxAC2Repayment.ListIndex
            End If
            If RPindex = "006" Then    'Appraisal
                If Me.optAC2RealEstate.Value = True Then
                    Me.txtAC2obAP.Text = "0"
                ElseIf Me.optAC2Equipment.Value = True Then
                    Me.txtAC2obAP.Text = "1"
                ElseIf Me.optAC2Aircraft.Value = True Then
                    Me.txtAC2obAP.Text = "2"
                ElseIf Me.optAC2Marine.Value = True Then
                    Me.txtAC2obAP.Text = "3"
                End If
                dlgCtrlName = "txtAC2" & Field_
                Type_ = 0
            End If
            If RPindex = "007" Or RPindex = "008" Then    'Borrower and Operating Company
                If InStr(RP__(RPid_, i), "CoBorrower") Then
                    dlgCtrlName = "chkOCCoBorrower"
                    Type_ = 1
                ElseIf InStr(RP__(RPid_, i), "State") Then
                    dlgCtrlName = "cbx" & dlgCtrlPre & Mid(Field_, Pos)
                    Type_ = 0
                Else
                    dlgCtrlName = "txt" & dlgCtrlPre & Mid(Field_, Pos)
                    Type_ = 0
                End If
            End If
            If RPindex = "009" Then    'Principal/Competitor
                dlgCtrlName = "txt" & Field_
                Type_ = 0
            End If
            If RPindex = "010" Then    'Use of Proceeds
                If Field_ = "obUPID" Then
                    dlgCtrlName = "cbxUPCategory"
                Else
                    dlgCtrlName = "txt" & Field_
                End If
            End If
            If RPindex = "011" Then    'Non-Citizen Ownership
                If Field_ = "optAC50Pct" Then
'                    dlgCtrlName = "optAC50Pct"
'                    Type_ = 1
                    GoTo NextField
                Else
                    dlgCtrlName = "txt" & Field_
                End If
            End If
            CurField = Field_ + "_" + Trim(Str(CurIdx))
            UpdateField CurField, dlgCtrlName, Type_
NextField:
            i = i + 1
        Wend
        Me("cmd" & dlgCtrlPre & strNew).Caption = "New"
        If ArrayID > 9 Then
            UpdateChangeRP RPIDx, ArrayID, dlgCtrl, "RPFirst0" + Trim(Str(ArrayID)), "RPLast0" + Trim(Str(ArrayID))
        Else
            UpdateChangeRP RPIDx, ArrayID, dlgCtrl, "RPFirst00" + Trim(Str(ArrayID)), "RPLast00" + Trim(Str(ArrayID))
        End If
        If RPindex = "007" Or RPindex = "008" Then
            Me("txt" & dlgCtrlPre & "Name").SetFocus
        End If
        If RPindex = "010" Then
            Me.cbxUPCategory.SetFocus
        End If
    Else
        RPid_ = GetArrayId(RPindex)
        RPIDx = RPid_
        ArrayID = RPindex
        If RPid_ > -1 Then
            retVal = 1
    'If Check = 1 Then CheckFillRP (RPid_)
            If retVal = 1 Then
                CurIdx = Val(RP__(RPid_, 0))
                LastIdx = Val(ActiveDocument.Bookmarks("RPLast" + RPindex).Range.Text)
                NewIdx = LastIdx + 1
                UpdateField "RPLast" + RPindex, Trim(Str(NewIdx)), -1
                UpdateField "RPCur" + RPindex, Trim(Str(NewIdx)), -1
                RP__(RPid_, 0) = Trim(Str(NewIdx))
                i = 1
                Pos = InStr(RP__(RPid_, 1), "Name")
                While RP__(RPid_, i) <> ""
                    Field_ = RP__(RPid_, i)  'Original field, Original dialog
                    If RPindex = "001" Then    'Insurance
                        dlgCtrlName = "txt" & Field_
                        Type_ = 0
                    End If
                    If RPindex = "002" And InStr(1, Field_, "cbBD5Subordinate") <> 0 Then    'Additional Funding
                        dlgCtrlName = "txt" & Field_
                        Type_ = 0
                    ElseIf RPindex = "002" And InStr(1, Field_, "cb") = 0 Then
                        dlgCtrlName = "txt" & Field_
                        Type_ = 0
                    End If
                    If RPindex = "005" Then    'Standby Agreement
                        dlgCtrlName = "txtAC2" & Field_
                        Type_ = 0
                    End If
                    If RPindex = "006" Then    'Appraisal
                        dlgCtrlName = "txtAC2" & Field_
                        Type_ = 0
                    End If
                    If RPindex = "007" Or RPindex = "008" Then    'Borrower and Operating Company
                        If InStr(RP__(RPid_, i), "CoBorrower") Then
                            dlgCtrlName = "chkOCCoBorrower"
                            Type_ = 1
                        ElseIf InStr(RP__(RPid_, i), "State") Then
                            dlgCtrlName = "cbx" & dlgCtrlPre & Mid(Field_, Pos)
                            Type_ = 0
                        Else
                            dlgCtrlName = "txt" & dlgCtrlPre & Mid(Field_, Pos)
                            Type_ = 0
                        End If
                    End If
                    If RPindex = "009" Then    'Principal/Competitor
                        dlgCtrlName = "txt" & Field_
                        Type_ = 0
                    End If
                    If RPindex = "010" Then    'Use of Proceeds
                        If Field_ = "obUPID" Then
                            dlgCtrlName = "cbxUPCategory"
                        Else
                            dlgCtrlName = "txt" & Field_
                        End If
                    End If
                    If RPindex = "011" Then    'Use of Proceeds
                        If Field_ = "optAC50Pct" Then
                        GoTo NextFldNewUP
'                            dlgCtrlName = "optAC50Pct"
'                            Type_ = 1
                        Else
                            dlgCtrlName = "txt" & Field_
                        End If
                    End If
                    NewField = Field_ + "_" + Trim(Str(NewIdx))  'Original Field incremented by 1
                    ActiveDocument.Bookmarks("AddRP" + RPindex).Select  'Find insertion point
                    Selection.MoveLeft wdCharacter, 1  'Move left
                    Selection.InsertAfter " "  'Insert a space
                    Selection.MoveRight wdCharacter, 1  'Move right
                    xx = Selection.Start  'Record left side position
                    Selection.InsertAfter "[" + NewField + "]"  'Insert new field name
                    Selection.SetRange xx, Selection.End  'select new text
                    ActiveDocument.Bookmarks.Add (NewField)  'create new bookmark for text
                    If CurIdx <> NewIdx Then
                        CurField = Field_ + "_" + Trim(Str(CurIdx))  'Original Field current number
                        If InStr(1, dlgCtrlName, "chk") Then
                            dlgCtrlName = "0"
                            Type_ = -1
                        End If
'                        If InStr(1, dlgCtrlName, "opt") Then
'                            Type_ = 1
'                        Else
'                            Type_ = 0
'                        End If
                        UpdateField CurField, dlgCtrlName, Type_  'update the curField, using current dialog info
                    End If
                    If InStr(1, "BorrowerAddress, BorrowerAddress2, BorrowerCity, BorrowerState, BorrowerZip, OCAddress, OCAddress2, OCCity, OCState, OCZip", Field_) = 0 Then
                        UpdateCtrl NewField, dlgCtrlName, 0  ', -1 'update new field, using current dialog info????
                    End If
                    If InStr(1, dlgCtrlName, "chk") Then
                        dlgCtrlName = "0"
                        Type_ = 1
                    End If
                    If InStr(1, dlgCtrlName, "opt") Then
'                        dlgCtrlName = "0"
                        Type_ = -1
                    End If
                    UpdateField Field_, dlgCtrlName, Type_  ' update original field with current dialog
NextFldNewUP:
                    i = i + 1
                Wend
                If ArrayID > 9 Then
                    UpdateChangeRP RPIDx, ArrayID, dlgCtrl, "RPFirst0" + Trim(Str(ArrayID)), "RPLast0" + Trim(Str(ArrayID))
                Else
                    UpdateChangeRP RPIDx, ArrayID, dlgCtrl, "RPFirst00" + Trim(Str(ArrayID)), "RPLast00" + Trim(Str(ArrayID))
                End If
                Me("cmd" & dlgCtrlPre & strNew).Caption = "Save"
                Me("cmd" & dlgCtrlPre & strNew).TabStop = True
            End If
        End If
    End If

    On Error Resume Next
    'The following sets the cursor into the appropriate position for next repeating paragraph
    Select Case RPindex
    Case "001"
        Me.txtIC5Insured.SetFocus
    Case "002"
        Me.optBD5SubordinateA.SetFocus
    Case "005"
        Me.txtAC2SAName.SetFocus
    Case "006"
        Me.optAC2RealEstate.SetFocus
    Case "007"
        Me.txtBIName.SetFocus
    Case "008"
        Me.txtOCName.SetFocus
    Case "009"
        Me.txtBD4Principal.SetFocus
    Case "010"
        Me.cbxUPCategory.SetFocus
    Case "011"
        Me.txtNonCitizen.SetFocus
    Case Else
    End Select
    System.Cursor = wdCursorNormal
End Sub

Private Sub UpdateCtrl(Book As String, dlgCtrlName As String, Optional MyCtrlType)
    Application.ScreenUpdating = False
    On Error GoTo ChkControl
    If Left(dlgCtrlName, 3) <> "cbx" Then
        If InStr(1, ActiveDocument.Bookmarks(Book).Range.Text, "[") > 0 Then
            Me(dlgCtrlName).Text = ""
        Else
            Me(dlgCtrlName).Text = ActiveDocument.Bookmarks(Book).Range.Text
        End If
    End If
ChkControl:
    If Left(dlgCtrlName, 3) = "opt" Or Left(dlgCtrlName, 3) = "chk" Then
        If ActiveDocument.Bookmarks.Exists(Book) Then
            If InStr(1, dlgCtrlName, "optBD5Subordinate") > 0 Then
                If Val(ActiveDocument.Bookmarks(Book).Range.Text) = 0 Then
                    Me.optBD5SubordinateA.Value = 1
                ElseIf Val(ActiveDocument.Bookmarks(Book).Range.Text) = 1 Then
                    Me.optBD5SubordinateB.Value = 1
                ElseIf Val(ActiveDocument.Bookmarks(Book).Range.Text) = 2 Then
                    Me.optBD5SubordinateC.Value = 1
                ElseIf Val(ActiveDocument.Bookmarks(Book).Range.Text) = 3 Then
                    Me.optBD5SubordinateD.Value = 1
                End If
            ElseIf InStr(1, dlgCtrlName, "optAC2") > 0 Then
                If Val(ActiveDocument.Bookmarks(Book).Range.Text) = 0 Then
                    Me.optAC2RealEstate.Value = 1
                ElseIf Val(ActiveDocument.Bookmarks(Book).Range.Text) = 1 Then
                    Me.optAC2Equipment.Value = 1
                ElseIf Val(ActiveDocument.Bookmarks(Book).Range.Text) = 2 Then
                    Me.optAC2Marine.Value = 1
                ElseIf Val(ActiveDocument.Bookmarks(Book).Range.Text) = 3 Then
                    Me.optAC2Aircraft.Value = 1
                End If
            Else
'                Me(dlgCtrlName).Value = ActiveDocument.Bookmarks(Book).Range.Text
'                If dlgCtrlName = "optAC50Pct" Then
'                    Me.optAC20Pct.Value = Not Me(dlgCtrlName).Value
'                End If
            End If
        End If
    End If
    If Left(dlgCtrlName, 3) = "cbx" Then
        On Error GoTo NumEntry
        Me(dlgCtrlName).Text = IIf(Left(ActiveDocument.Bookmarks(Book).Range.Text, 1) <> "[", ActiveDocument.Bookmarks(Book).Range.Text, "")
        GoTo LeaveEntry
NumEntry:
        If Book Like "BorrowerState_*" Then  '  Added to catch Error 380 if the Borrower information is not complete RH 1/11/2018
            MsgBox "The Borrower Information Address and State must be filled in to continue!", vbExclaimation, "Complete Borrower Address"
        Else
            Me(dlgCtrlName).Value = ActiveDocument.Bookmarks(Book).Range.Text
        End If
LeaveEntry:
    End If
    GoTo EndIt
EndIt:
    ProgressBar (5)
End Sub
Private Function GetArrayId(RPindex As String)
'<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
'    Daniel H. Smith    7/29/2002
'<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
'    Documentation -- GetArrayId
'<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
'This section of code:
'<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
'Pull field names from array populated in frmMain
' initialize
'<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
'
    Dim i
    Dim j
    i = 0
    j = -1
    On Error GoTo -1: On Error GoTo EndOfGetArrayId
    While i >= 0
        If RPid__(i) = RPindex Then j = i
        i = i + 1
    Wend
EndOfGetArrayId:
    On Error GoTo -1: On Error GoTo 0
    GetArrayId = j
End Function

Private Sub InsertRP(RPindex As String, What, Where, From, Value, Type_)
    Dim RPid_
    Dim LastIdx
    Dim i
    Dim CurIdx
    Dim CheckField
    Dim j
    Dim Field_
    Dim Value_
    RPindex = Right(RPindex, 3)
    RPid_ = GetArrayId(RPindex)
    If RPid_ > -1 Then
        LastIdx = Val(ActiveDocument.Bookmarks("RPLast" + RPindex).Range.Text)
        For i = 1 To LastIdx
            CurIdx = Trim(Str(i))
            CheckField = RP__(RPid_, 1) + "_" + CurIdx
            If ActiveDocument.Bookmarks.Exists(CheckField) Then
                Pos = InStr(RP__(RPid_, 1), "Name")
                j = 1
                While RP__(RPid_, j) <> ""
                    Field_ = RP__(RPid_, j)
                    Value_ = ActiveDocument.Bookmarks(Field_ + "_" + CurIdx).Range.Text
                    UpdateField Field_, Value_, -1
                    UpdateText "RPCur" + RPindex, CurIdx
                    j = j + 1
                Wend
                InsertText What, Where, From, Value, Type_
                If ActiveDocument.Bookmarks.Exists(What + "B") Then _
                   InsertText What + "B", Where + "B", From, Value, Type_
            End If
            Type_ = 0
        Next i
    End If
End Sub
Private Sub SelectBP(PanelID)
    Dim LienPos
    Dim i
    Dim i_
    Dim BPOrder
    Dim MyFocus
    Select Case CCid
    Case 1
        'If Me.cbxCCTypeofProperty2.ListIndex = 1 Then    'Type of property from CC4
            'ShowBP__(7) = 0
        'Else
            'ShowBP__(5) = 0
        'End If
    Case Else
        'ShowBP__(5) = 0
    End Select
    If Me.cbxCCLienPosition2.ListIndex = 0 Then
        ShowBP__(2) = 0
        ShowBP__(3) = 0
        ShowBP__(4) = 0
        ShowBP__(6) = 0
    End If
    For i = 2 To 11  'Modified 12/4/2007
        i_ = Trim(Str(i))
        Me("chkCCC1BP" + i_).enabled = ShowBP__(i)
        If ShowBP__(i) = 0 Then Me("chkCCC1BP" + i_) = 0
        If ShowBP__(i) = 1 Then Me("chkCCC1BP" + i_) = 1
        Me("chkCCC1BP" + i_).enabled = 0
    Next
    If CCid = 1 Then
        If cbxCCLienPosition2.Value = "First" Then
            Me.mpgWizard.Value = Me.mpgWizard.Pages("pgCC7").index
            Me.cmdNext.enabled = False
            Me.cmdFinish.enabled = True
        Else
            SplitBP
        End If
    Else
        SplitBP
    End If
End Sub

Private Sub SplitBP()
        Dim CurState
        
        CurState = Me.cbxCCState2.Text
        SelectInstrument (CurState)
        
        If CurState = "" Then
        Else
            Select Case CurState
                Case "AL"
                    chkCCC1BP2.enabled = True
                    chkCCC1BP2.Value = False
                    chkCCC1BP3.enabled = True
                    chkCCC1BP3.Value = False
                    chkCCC1BP5.enabled = True
                    chkCCC1BP5.Value = False
                Case "FL"
                    chkCCC1BP6.enabled = True
                    chkCCC1BP6.Value = False
                    If cbxCCTypeofProperty2.Value <> "residential" Or cbxCCTypeofProperty4.Value <> "residential" Then
                        chkCCC1BP10.enabled = False
                        chkCCC1BP10.Value = True
                    End If
                Case "GA"
                    chkCCC1BP3.enabled = True
                    chkCCC1BP3.Value = False
                Case "KY"
                    chkCCC1BP3.enabled = True
                    chkCCC1BP3.Value = False
                    chkCCC1BP6.enabled = True
                    chkCCC1BP6.Value = False
                    chkCCC1BP5.enabled = True
                    chkCCC1BP5.Value = False
                    chkCCC1BP10.enabled = True
                    chkCCC1BP10.Value = False
                Case "LA"
                    chkCCC1BP3.enabled = True
                    chkCCC1BP3.Value = False
                    chkCCC1BP6.enabled = True
                    chkCCC1BP6.Value = False
                Case "MS"
                    chkCCC1BP3.enabled = True
                    chkCCC1BP3.Value = False
                Case "SC"
                    chkCCC1BP3.enabled = True
                    chkCCC1BP3.Value = False
                Case "TN"
                    chkCCC1BP3.enabled = True
                    chkCCC1BP3.Value = False
                    chkCCC1BP6.enabled = True
                    chkCCC1BP6.Value = False
                    chkCCC1BP8.enabled = True
                    chkCCC1BP8.Value = False
                Case "TX"
                    chkCCC1BP3.enabled = True
                    chkCCC1BP3.Value = False
                    chkCCC1BP5.enabled = False    ' RH Added 8/7/2018
                Case "UT"
                        chkCC_C1EV1B.enabled = False  'RH Added 5/7/2018
                        chkCC_C1EV1B.Value = True     'RH Added 5/7/2018
                        txtCC_C1EV1B.Text = "100 (or 9-06) and 116 (or 22-06)"  'RH Added 5/7/2018
                        txtCC_C1EV1B.enabled = False  'RH Added 5/7/2018
                                                
                    ' If chkCC_C1EV1B.enabled = True Then
                    '    chkCC_C1EV1B.Value = True
                       
                    ' End If
                Case Else
            End Select
        End If
End Sub

Private Sub SelectInstrument(State)
    Dim Instrument__(3)
    Dim Instrument2__(3)
    Dim LienPos__(4)
    Dim Evidence2__(20)
    Dim ev__(20)
    Dim C1Type__(2)
    Dim C4Type__(1)
    Dim CurState
    Dim myText
    Dim CurInstrument
    Dim CurEvidence
    Dim i
    If State = "" Then
    Else
        CurState = State
        Me.cbxCC_C1EV.Clear
        If CCid = 1 Or CCid = 4 Then
            CurInstrument = ""
        End If
        CurEvidence = ""
        For i = 2 To 11  'Modified 12/4/2007
            ShowBP__(i) = 0
        Next
        Select Case CurState
        Case "AS", "FM", "MH", "MP", "PW", "VI", "AA", "AE", "AP"
            Instrument2__(0) = "Mortgage"
            Instrument2__(1) = "Deed of Trust"
            Instrument2__(2) = ""
            Evidence2__(0) = Evidence__(1)
            Evidence2__(1) = Evidence__(2)
            Evidence2__(2) = Evidence__(3)
            Evidence2__(3) = Evidence__(4)
            Evidence2__(4) = Evidence__(5)
            Evidence2__(5) = ""
            ShowBP__(2) = 1
            ShowBP__(3) = 1
            ShowBP__(4) = 1
            ShowBP__(5) = 1
            ShowBP__(6) = 1
            ShowBP__(10) = 1
        Case "AL"
            Instrument2__(0) = "Mortgage"
            Instrument2__(1) = ""
            If PropType = "commercial" Then
                Evidence2__(0) = Evidence__(1)
                Evidence2__(1) = ""
            ElseIf PropType = "residential" Then
                Evidence2__(0) = Evidence__(3)
                Evidence2__(1) = Evidence__(4)
                Evidence2__(2) = Evidence__(5)
                Evidence2__(3) = ""
            End If
            ShowBP__(2) = 1
            ShowBP__(3) = 1
            ShowBP__(5) = 1
            ShowBP__(6) = 1
            ShowBP__(10) = 1
        Case "AK"
            Instrument2__(0) = "Deed of Trust"
            Instrument2__(1) = ""
            Evidence2__(0) = Evidence__(1)
            Evidence2__(1) = Evidence__(2)
            Evidence2__(2) = Evidence__(5)
            Evidence2__(3) = ""
            ShowBP__(2) = 1
            ShowBP__(5) = 1 'Added 1/10/2018
            ShowBP__(6) = 1
            ShowBP__(10) = 1 'Added 1/10/2018
        Case "AZ"
            Instrument2__(0) = "Deed of Trust"
            Instrument2__(1) = ""
            Evidence2__(0) = Evidence__(1)
            Evidence2__(1) = Evidence__(2)
            Evidence2__(2) = Evidence__(5)
            Evidence2__(3) = ""
            ShowBP__(2) = 1
            ShowBP__(6) = 1
        Case "AR"
            Instrument2__(0) = "Mortgage"
            Instrument2__(1) = "Deed of Trust"
            Instrument2__(2) = ""
            If PropType = "commercial" Then
                Evidence2__(0) = Evidence__(1)
                Evidence2__(1) = ""
            ElseIf PropType = "residential" Then
                Evidence2__(0) = Evidence__(2)
                Evidence2__(1) = Evidence__(5)
                Evidence2__(2) = ""
            End If
            ShowBP__(2) = 1
            ShowBP__(4) = 1
            ShowBP__(5) = 1
            ShowBP__(10) = 1
        Case "CA"
            Instrument2__(0) = "Deed of Trust"
            Instrument2__(1) = ""
            Evidence2__(0) = Evidence__(1)
            Evidence2__(1) = Evidence__(6)
            Evidence2__(2) = Evidence__(7)
            Evidence2__(3) = Evidence__(4)
            Evidence2__(4) = Evidence__(5)
            Evidence2__(5) = ""
            ShowBP__(2) = 1
            ShowBP__(4) = 1
            ShowBP__(6) = 1
        Case "CO"
            Instrument2__(0) = "Deed of Trust"
            Instrument2__(1) = ""
            Evidence2__(0) = Evidence__(1)
            Evidence2__(1) = Evidence__(5)
            Evidence2__(2) = ""
            ShowBP__(2) = 1
            ShowBP__(6) = 1
            ShowBP__(10) = 1
        Case "CT"
            Instrument2__(0) = "Mortgage"
            Instrument2__(1) = ""
            Evidence2__(0) = Evidence__(1)
            Evidence2__(1) = Evidence__(2)
            Evidence2__(2) = Evidence__(3)
            Evidence2__(3) = Evidence__(5)
            Evidence2__(4) = ""
            ShowBP__(2) = 1
            ShowBP__(5) = 1
            ShowBP__(6) = 1
        Case "DE"
            Instrument2__(0) = "Mortgage"
            Instrument2__(1) = ""
            Evidence2__(0) = Evidence__(1) 'Modified 12/3/2007
            Evidence2__(1) = Evidence__(4)
            Evidence2__(2) = Evidence__(5)
            Evidence2__(3) = ""
            ShowBP__(2) = 1
            ShowBP__(6) = 1
            ShowBP__(10) = 0 'Modified 12/3/2007
        Case "FL"
            Instrument2__(0) = "Mortgage"
            Instrument2__(1) = ""
            If PropType = "commercial" Then
                Evidence2__(0) = Evidence__(1)
                Evidence2__(1) = ""
            ElseIf PropType = "residential" Then
                Evidence2__(0) = Evidence__(5)
                Evidence2__(1) = ""
            End If
            ShowBP__(10) = 1
            ShowBP__(2) = 1
            ShowBP__(6) = 1
        Case "GA"
            Instrument2__(0) = "Deed to Secure Debt"
            Instrument2__(1) = ""
            If PropType = "commercial" Then
                Evidence2__(0) = Evidence__(1)
                Evidence2__(1) = ""
            ElseIf PropType = "residential" Then
                Evidence2__(0) = Evidence__(3)
                Evidence2__(1) = Evidence__(4)
                Evidence2__(2) = Evidence__(5)
                Evidence2__(3) = ""
            End If
            ShowBP__(2) = 1
            ShowBP__(3) = 1
            ShowBP__(6) = 1
        Case "GU"
            Instrument2__(0) = "Mortgage"
            Instrument2__(1) = ""
            Evidence2__(0) = Evidence__(1) 'Modified 12/3/2007
            Evidence2__(1) = Evidence__(4)
            Evidence2__(2) = Evidence__(5)
            Evidence2__(3) = ""
            ShowBP__(2) = 1 'Modified 12/3/2007
            ShowBP__(6) = 1
            ShowBP__(10) = 1
        Case "HI"
            Instrument2__(0) = "Mortgage"
            Instrument2__(1) = ""
            Evidence2__(0) = Evidence__(1) 'Modified 12/3/2007
            Evidence2__(1) = Evidence__(4)
            Evidence2__(2) = Evidence__(5)
            Evidence2__(3) = ""
            ShowBP__(2) = 1 'Modified 12/3/2007
            ShowBP__(6) = 1
        Case "ID"
            Instrument2__(0) = "Deed of Trust"
            Instrument2__(1) = "Mortgage"
            Instrument2__(2) = ""
            Evidence2__(0) = Evidence__(1)
            Evidence2__(1) = Evidence__(2) 'Modified 1/10/2018
            Evidence2__(2) = ""
            ShowBP__(2) = 1 'Added 1/10/2018
            ShowBP__(6) = 1
        Case "IL"
            Instrument2__(0) = "Mortgage"
            Instrument2__(1) = ""
            Evidence2__(0) = Evidence__(1)
            Evidence2__(1) = Evidence__(3)
            Evidence2__(2) = Evidence__(5)
            Evidence2__(3) = ""
            ShowBP__(2) = 1
            ShowBP__(5) = 1
            ShowBP__(6) = 1
            ShowBP__(7) = 1
            ShowBP__(10) = 0        'Modified 11/24/2009 for v 2010 DHS
        Case "IN"
            Instrument2__(0) = "Mortgage"
            Instrument2__(1) = ""
            Evidence2__(0) = Evidence__(2)
            Evidence2__(1) = Evidence__(5)
            Evidence2__(2) = ""
            ShowBP__(2) = 1 'Modified 12/3/2007
            'ShowBP__(3) = 1 Removed 1/10/2018
            ShowBP__(6) = 1
        Case "IA"
            Instrument2__(0) = "Mortgage"
            Instrument2__(1) = ""
            Evidence2__(0) = Evidence__(3)
            Evidence2__(1) = Evidence__(5)
            Evidence2__(2) = ""
            ShowBP__(2) = 1
            ShowBP__(5) = 1
            ShowBP__(6) = 1
    '      ShowBP__(8) = 1 '-- Removed 7/29/2005 (D. Anderson)
        Case "KS"
            Instrument2__(0) = "Mortgage"
            Instrument2__(1) = ""
            Evidence2__(0) = Evidence__(1)
            Evidence2__(1) = Evidence__(2)
            Evidence2__(2) = Evidence__(3)
            Evidence2__(3) = Evidence__(4)
            Evidence2__(4) = Evidence__(5)
            Evidence2__(5) = ""
            ShowBP__(2) = 1
            ShowBP__(6) = 1
            ShowBP__(7) = 1
            ShowBP__(10) = 1
        Case "KY"
            Instrument2__(0) = "Mortgage"
            Instrument2__(1) = ""
            If PropType = "commercial" Then
                Evidence2__(0) = Evidence__(1)
                Evidence2__(1) = ""
            ElseIf PropType = "residential" Then
                Evidence2__(0) = Evidence__(2)
                Evidence2__(1) = Evidence__(5)
                Evidence2__(2) = ""
            End If
            ShowBP__(2) = 1
            ShowBP__(3) = 1
            ShowBP__(5) = 1
            ShowBP__(6) = 1
            ShowBP__(10) = 1
        Case "LA"
            Instrument2__(0) = "Mortgage"
            Instrument2__(1) = ""
            If PropType = "commercial" Then
                Evidence2__(0) = Evidence__(1)
                Evidence2__(1) = ""
            ElseIf PropType = "residential" Then
                Evidence2__(0) = Evidence__(2)
                Evidence2__(1) = Evidence__(5)
                Evidence2__(2) = ""
            End If
            ShowBP__(2) = 1
            ShowBP__(3) = 1
            ShowBP__(4) = 1
            ShowBP__(5) = 1
            ShowBP__(6) = 1
            ShowBP__(10) = 1
        Case "ME"
            Instrument2__(0) = "Mortgage"
            Instrument2__(1) = ""
            Evidence2__(0) = Evidence__(1)
            'Evidence2__(1) = Evidence__(2) 'Removed 1/10/2018
            'Evidence2__(2) = Evidence__(3) 'Removed 1/10/2018
            Evidence2__(1) = Evidence__(5)
            Evidence2__(2) = ""
            ShowBP__(2) = 1
            ShowBP__(6) = 1
        Case "MD"
            If CCMaster = "GroupC29" Then
                Instrument2__(0) = "Indemnity Deed of Trust"
            Else
                Instrument2__(0) = "Deed of Trust"
            End If
            Instrument2__(1) = ""
            Evidence2__(0) = Evidence__(1)
            Evidence2__(1) = Evidence__(2)
            Evidence2__(2) = Evidence__(3)
            Evidence2__(3) = Evidence__(8)
            Evidence2__(4) = Evidence__(5)
            Evidence2__(5) = ""
            ShowBP__(2) = 1
            ShowBP__(3) = 1
'            ShowBP__(11) = 1 'Modified 12/3/2007
        Case "MA"
            Me("txtCC_C1EV1D") = "Policy will not contain an M.G.L. Section 21(e) exception unless a detailed engineering study satisfactory to Lender is submitted prior to closing"
            Instrument2__(0) = "Mortgage"
            Instrument2__(1) = ""
            Evidence2__(0) = Evidence__(1)
            Evidence2__(1) = Evidence__(2)
            'Evidence2__(2) = Evidence__(3) Removed 1/10/2018
            'Evidence2__(3) = Evidence__(5) Removed 1/10/2018
            ShowBP__(2) = 1
            ShowBP__(4) = 1
            ShowBP__(6) = 1
            ShowBP__(11) = 1
       Case "MI"
            Instrument2__(0) = "Mortgage"
            Instrument2__(1) = ""
            Evidence2__(0) = Evidence__(1)
            Evidence2__(1) = Evidence__(5)
            Evidence2__(2) = ""
            ShowBP__(2) = 1
            ShowBP__(3) = 1
        Case "MN"
            Instrument2__(0) = "Mortgage"
            Instrument2__(1) = ""
            Evidence2__(0) = Evidence__(1)
            Evidence2__(1) = Evidence__(2)
            Evidence2__(2) = Evidence__(3)
            Evidence2__(3) = Evidence__(4)
            Evidence2__(4) = Evidence__(5)
            Evidence2__(5) = ""
            ShowBP__(2) = 1
            ShowBP__(4) = 1
            ShowBP__(6) = 1
            ShowBP__(10) = 1
        Case "MS"
            Instrument2__(0) = "Deed of Trust"
            Instrument2__(1) = ""
            If PropType = "commercial" Then
                Evidence2__(0) = Evidence__(1)
                Evidence2__(1) = ""
            ElseIf PropType = "residential" Then
                Evidence2__(0) = Evidence__(3)
                Evidence2__(1) = Evidence__(4)
                Evidence2__(2) = Evidence__(5)
                Evidence2__(3) = ""
            End If
            ShowBP__(2) = 1
            ShowBP__(3) = 1
            ShowBP__(5) = 1
            ShowBP__(6) = 1
            ShowBP__(10) = 1
        Case "MO"
            Instrument2__(0) = "Deed of Trust"
            Instrument2__(1) = ""
            Evidence2__(0) = Evidence__(1)
            Evidence2__(1) = Evidence__(2)
            Evidence2__(2) = Evidence__(3)
            Evidence2__(3) = Evidence__(4)
            Evidence2__(4) = Evidence__(5)
            Evidence2__(5) = ""
            ShowBP__(2) = 1
            ShowBP__(4) = 1
            ShowBP__(6) = 1
        Case "MT"
            Instrument2__(0) = "Montana Trust Indenture"
            Instrument2__(1) = "Mortgage"
            Instrument2__(2) = ""
            Evidence2__(0) = Evidence__(1)
            Evidence2__(1) = Evidence__(2)
            Evidence2__(2) = Evidence__(5)
            Evidence2__(3) = ""
            ShowBP__(2) = 1
            ShowBP__(3) = 1
            ShowBP__(6) = 1
'            ShowBP__(10) = 1
        Case "NE"
            Instrument2__(0) = "Deed of Trust"
            Instrument2__(1) = ""
            Evidence2__(0) = Evidence__(1)
            Evidence2__(1) = Evidence__(2)
            Evidence2__(2) = Evidence__(3)
            Evidence2__(3) = ""
            ShowBP__(2) = 1
            ShowBP__(4) = 1
            ShowBP__(6) = 1
            ShowBP__(10) = 1
        Case "NV"
            Instrument2__(0) = "Deed of Trust"
            Instrument2__(1) = ""
            Evidence2__(0) = Evidence__(1)
            Evidence2__(1) = Evidence__(2)
            Evidence2__(2) = Evidence__(3)
            Evidence2__(3) = ""
            ShowBP__(2) = 1
            ShowBP__(4) = 1
            ShowBP__(5) = 1
            ShowBP__(6) = 1
            ShowBP__(10) = 1
        Case "NH"
            Instrument2__(0) = "Mortgage"
            Instrument2__(1) = ""
            Evidence2__(0) = Evidence__(1)
            Evidence2__(1) = Evidence__(3)
            Evidence2__(2) = ""
            ShowBP__(2) = 1
            ShowBP__(3) = 1
            ShowBP__(5) = 1
            ShowBP__(6) = 1
            ShowBP__(10) = 1
        Case "NJ"
            Instrument2__(0) = "Mortgage"
            Instrument2__(1) = ""
            Evidence2__(0) = Evidence__(1)
            Evidence2__(1) = Evidence__(2) 'Modified 12/3/2007
            Evidence2__(2) = ""
            ShowBP__(6) = 1
            ShowBP__(10) = 1
        Case "NM"
            Instrument2__(0) = "Mortgage"
            Instrument2__(1) = ""
            Evidence2__(0) = Evidence__(1)
            Evidence2__(1) = Evidence__(2) 'Modified 12/3/2007
            Evidence2__(2) = ""
            ShowBP__(2) = 1
            ShowBP__(3) = 1 'Modified 12/3/2007
            ShowBP__(6) = 1 'Modified 12/3/2007
        Case "NY"
            Instrument2__(0) = "Mortgage"
            Instrument2__(1) = ""
            Evidence2__(0) = Evidence__(1)
            Evidence2__(1) = Evidence__(2)
            Evidence2__(2) = ""
            ShowBP__(2) = 1
            ShowBP__(6) = 1
        Case "NC"
            Instrument2__(0) = "Deed of Trust"
            Instrument2__(1) = ""
            If PropType = "commercial" Then
                Evidence2__(0) = Evidence__(1)
                Evidence2__(1) = ""
            ElseIf PropType = "residential" Then
                Evidence2__(0) = Evidence__(1)
                Evidence2__(1) = Evidence__(2)
                Evidence2__(2) = Evidence__(3)
                Evidence2__(3) = Evidence__(4)
                Evidence2__(4) = ""
            End If
            ShowBP__(2) = 1
            ShowBP__(4) = 1
            ShowBP__(6) = 1
        Case "ND"
            Instrument2__(0) = "Mortgage"
            Instrument2__(1) = ""
            Evidence2__(0) = Evidence__(1) 'Added 10/23/2006
            Evidence2__(1) = Evidence__(2)
            'Evidence2__(2) = Evidence__(3) Removed 1/10/2018
            Evidence2__(2) = ""
            ShowBP__(2) = 1
            ShowBP__(5) = 1
            ShowBP__(6) = 1
            ShowBP__(10) = 1
        Case "OH"
            Instrument2__(0) = "Mortgage"
            Instrument2__(1) = ""
            Evidence2__(0) = Evidence__(1)
            Evidence2__(1) = Evidence__(2)
            Evidence2__(2) = Evidence__(3)
            Evidence2__(3) = Evidence__(5)
            Evidence2__(4) = ""
            ShowBP__(2) = 1
            ShowBP__(6) = 1
        Case "OK"
            Instrument2__(0) = "Mortgage"
            Instrument2__(1) = ""
            If PropType = "commercial" Then
                Evidence2__(0) = Evidence__(1)
                Evidence2__(1) = ""
            ElseIf PropType = "residential" Then
                Evidence2__(0) = Evidence__(2)
                Evidence2__(1) = Evidence__(3)
                Evidence2__(2) = Evidence__(4)
                Evidence2__(3) = Evidence__(5)
                Evidence2__(4) = ""
            End If
            ShowBP__(2) = 1
            ShowBP__(6) = 1
            ShowBP__(10) = 1
        Case "OR"
            Instrument2__(0) = "Deed of Trust"
            Instrument2__(1) = "Mortgage"
            Instrument2__(2) = ""
            Evidence2__(0) = Evidence__(1)
            Evidence2__(1) = Evidence__(4)
            Evidence2__(2) = Evidence__(5)
            Evidence2__(3) = ""
            ShowBP__(2) = 1
            ShowBP__(3) = 0
            ShowBP__(6) = 1
        Case "PA"
            Instrument2__(0) = "Mortgage"
            Instrument2__(1) = ""
            Evidence2__(0) = Evidence__(1) 'Modified 12/3/2007
            Evidence2__(1) = Evidence__(4)
            Evidence2__(2) = Evidence__(5)
            Evidence2__(3) = ""
            ShowBP__(2) = 1
            ShowBP__(6) = 1
'            ShowBP__(10) = 1 'Modified 12/3/2007
        Case "PR"
            Instrument2__(0) = "Mortgage"
            Instrument2__(1) = ""
            Evidence2__(0) = Evidence__(1) 'Modified 12/3/2007
            Evidence2__(1) = Evidence__(2)
            Evidence2__(2) = Evidence__(5)
            Evidence2__(3) = ""
            ShowBP__(2) = 1
            ShowBP__(6) = 1
        Case "RI"
            Instrument2__(0) = "Mortgage"
            Instrument2__(1) = ""
            Evidence2__(0) = Evidence__(1) 'Modified 12/3/2007
            Evidence2__(1) = Evidence__(2)
            Evidence2__(2) = Evidence__(3)
            Evidence2__(3) = Evidence__(4)
            Evidence2__(4) = Evidence__(5)
            Evidence2__(5) = ""
            ShowBP__(2) = 1
            'ShowBP__(3) = 1 Removed 1/10/2018
            ShowBP__(10) = 1 'Modified 12/3/2007
            ShowBP__(11) = 1 'Modified 12/3/2007
        Case "SC"
            Instrument2__(0) = "Mortgage"
            Instrument2__(1) = ""
            If PropType = "commercial" Then
                Evidence2__(0) = Evidence__(1)
                Evidence2__(1) = ""
            ElseIf PropType = "residential" Then
                Evidence2__(0) = Evidence__(2)
                Evidence2__(1) = Evidence__(3)
                Evidence2__(2) = Evidence__(5)
                Evidence2__(3) = ""
            End If
            ShowBP__(2) = 1
            ShowBP__(3) = 1
            ShowBP__(5) = 1
        Case "SD"
            Instrument2__(0) = "Mortgage"
            Instrument2__(1) = ""
            Evidence2__(0) = Evidence__(1)
            Evidence2__(1) = Evidence__(2) 'Modified 12/3/2007
            Evidence2__(2) = Evidence__(5)
            Evidence2__(3) = ""
            ShowBP__(2) = 1
            ShowBP__(5) = 1
            ShowBP__(6) = 1
            ShowBP__(10) = 1
        Case "TN"
            Instrument2__(0) = "Deed of Trust"
            Instrument2__(1) = ""
            If PropType = "commercial" Then
                Evidence2__(0) = Evidence__(1)
                Evidence2__(1) = ""
            ElseIf PropType = "residential" Then
                Evidence2__(0) = Evidence__(3)
                Evidence2__(1) = ""
            End If
            ShowBP__(2) = 1
            ShowBP__(3) = 1
            ShowBP__(6) = 1
            ShowBP__(8) = 1
'            ShowBP__(10) = 1'Modified 12/3/2007
        Case "TX"
            Instrument2__(0) = "Deed of Trust"
            Instrument2__(1) = ""
            If PropType = "commercial" Then
                Evidence2__(0) = Evidence__(2)
                Evidence2__(1) = ""
            ElseIf PropType = "residential" Then
                Evidence2__(0) = Evidence__(5)
                Evidence2__(1) = ""
            End If
            ShowBP__(2) = 1
            ShowBP__(3) = 1
            ShowBP__(5) = 1
            ShowBP__(6) = 1
            ShowBP__(9) = 1
'            ShowBP__(10) = 1'Modified 12/3/2007
        Case "UT"
            Instrument2__(0) = "Deed of Trust"
            Instrument2__(1) = ""
            Evidence2__(0) = Evidence__(1)
            'Evidence2__(1) = Evidence__(5)
            Evidence2__(1) = ""
            'ShowBP__(2) = 1 Removed 1/18/2018
            'ShowBP__(4) = 1 Removed 1/18/2018
            'ShowBP__(6) = 1 Removed 1/18/2018
            If chkCC_C1EV1B.enabled = True Then
                chkCC_C1EV1B.visible = True
                chkCC_C1EV1B.Value = True
                'chkCC_C1EV1C.visible = False
                chkCC_C1EV2B.visible = False
                chkCC_C1EV1B.enabled = False
                txtCC_C1EV1B.Text = "100 (or 9-06) and 116 (or 22-06)"
                txtCC_C1EV1B.enabled = False
                chkUtah.visible = False
                chkUtah.Value = False
                chkUtah.enabled = False
                txtUtah.visible = False
                txtUtah.Text = "100 (or 9-06) and 116 (or 22-06)"
                txtUtah.enabled = False
            End If
        Case "VT"
            Instrument2__(0) = "Mortgage"
            Instrument2__(1) = ""
            Evidence2__(0) = Evidence__(1)
            Evidence2__(1) = Evidence__(2)
            Evidence2__(2) = Evidence__(3)
            Evidence2__(3) = Evidence__(5)
            Evidence2__(4) = ""
            ShowBP__(2) = 1
            ShowBP__(3) = 1
            ShowBP__(5) = 1
            ShowBP__(6) = 1
            ShowBP__(10) = 1
        Case "VA"
            Instrument2__(0) = "Deed of Trust"
            Instrument2__(1) = ""
            Evidence2__(0) = Evidence__(1)
            Evidence2__(1) = Evidence__(3)
            Evidence2__(2) = Evidence__(5)
            Evidence2__(3) = ""
            ShowBP__(2) = 1
            'ShowBP__(3) = 1 Removed 1/18/2018
            'ShowBP__(5) = 1 'Modified 12/3/2007 Removed 1/18/2018
            ShowBP__(8) = 1
            'ShowBP__(10) = 1 'Modified 12/3/2007 Removed 1/18/2018
        Case "WA"
            Instrument2__(0) = "Deed of Trust"
            Instrument2__(1) = "Mortgage"
            Instrument2__(2) = ""
            Evidence2__(0) = Evidence__(1)
            Evidence2__(1) = Evidence__(2)
            Evidence2__(2) = ""
            ShowBP__(2) = 1
            ShowBP__(6) = 1
        Case "DC"
            Instrument2__(0) = "Deed of Trust"
            Instrument2__(1) = ""
            Evidence2__(0) = Evidence__(1) 'Modified 12/3/2007
            Evidence2__(1) = Evidence__(4)
            Evidence2__(2) = Evidence__(5)
            Evidence2__(3) = ""
            ShowBP__(2) = 1
            'ShowBP__(3) = 1 Removed 2/14/2018
            ShowBP__(6) = 1
            ShowBP__(10) = 1
        Case "WV"
            Instrument2__(0) = "Deed of Trust"
            Instrument2__(1) = "Mortgage"
            Instrument2__(2) = ""
            Evidence2__(0) = Evidence__(1) 'Modified 12/3/2007
            Evidence2__(1) = Evidence__(3)
            Evidence2__(2) = Evidence__(5)
            Evidence2__(3) = ""
            ShowBP__(2) = 1
            ShowBP__(3) = 1
            ShowBP__(4) = 1
            ShowBP__(6) = 1
        Case "WI"
            Instrument2__(0) = "Mortgage"
            Instrument2__(1) = ""
            Evidence2__(0) = Evidence__(1)
            Evidence2__(1) = Evidence__(5)
            Evidence2__(2) = ""
            ShowBP__(2) = 1
            ShowBP__(3) = 1
            ShowBP__(6) = 1
            ShowBP__(10) = 1
        Case "WY"
            Instrument2__(0) = "Mortgage"
            Instrument2__(1) = ""
            Evidence2__(0) = Evidence__(1)
            Evidence2__(1) = Evidence__(2)
            Evidence2__(2) = Evidence__(4)
            Evidence2__(3) = Evidence__(5)
            Evidence2__(4) = ""
            ShowBP__(5) = 1
            ShowBP__(6) = 1
            ShowBP__(10) = 1
        Case ""
        Case Else
        End Select
        If CCid = 1 Or CCid = 4 Then
            Me.cbxCCTypeofInstrument2.List() = Instrument2__()
            Me.cbxCCTypeofInstrument2.Text = CurInstrument
            If Me.cbxCCTypeofInstrument2.Text = "" Then
                Me.cbxCCTypeofInstrument2.Text = Instrument2__(0)
            End If
            Me.cbxCC_C1EV.List() = Evidence2__()
            Me.cbxCC_C1EV.Text = CurEvidence
            If cbxCC_C1EV.Text = "" Then
                Me.cbxCC_C1EV.Text = Evidence2__(0)
            End If
        Else
            Me.cbxCC_C1EV.List() = Evidence2__()
        End If
    End If
End Sub

Public Sub InsertText(What, Where, From, Value, Type_)
'If From = Value then copy What to Where
'Type:  0 = add to existing text
'Type:  1 = replace existing Text - non-exclusive
'Type:  2 = replace existing Text - exclusive
'Plus:  0 = unlike fields
'      256 = do not unlike fields
    Dim CurrentValue
    Dim MyUnlinkFields
    Application.ScreenUpdating = False
    If From = "obOI2" Then
        From = "txtOIText"
        GoTo TextControl
    End If
    If From = "cbxCALienPosition" Then
        CurrentValue = Me.cbxCALienPosition.ListIndex
        GoTo InsertParaStep2
    End If
    On Error Resume Next
    ProgressBar (5)
    On Error GoTo -1: On Error GoTo 0
    On Error GoTo -1: On Error GoTo TextControl
    CurrentValue = frmMain(From).Value
    If CurrentValue = True Then
        CurrentValue = 1
    Else
        CurrentValue = 0
    End If
    GoTo InsertParaStep2
TextControl:
    On Error GoTo -1: On Error GoTo 0
    On Error GoTo -1: On Error GoTo StringValue
    CurrentValue = Val(frmMain.Controls(From).Text)
    GoTo InsertParaStep2
StringValue:
    CurrentValue = Val(From)
InsertParaStep2:
    On Error GoTo -1: On Error GoTo 0
    If Type_ >= 256 Then
        MyUnlinkFields = 0
        Type_ = Type_ - 256
    Else
        MyUnlinkFields = 1
    End If
'    MsgBox ActiveDocument.Bookmarks.Exists(Where)
    If ActiveDocument.Bookmarks.Exists(Where) And _
       ((CurrentValue = Value And Type_ = 1) Or Type_ = 2) Then
        ActiveDocument.Bookmarks(Where).Select
        Selection.MoveEnd Unit:=wdLine, Count:=-1
        On Error Resume Next
        Selection.Range.Cut
        If Not ActiveDocument.Bookmarks.Exists(Where) Then
            ActiveDocument.Bookmarks.Add Where
        End If
        On Error GoTo -1: On Error GoTo 0
    End If
    If ActiveDocument.Bookmarks.Exists(Where) And ActiveDocument.Bookmarks.Exists(What) And _
       CurrentValue = Value And What <> "none" Then
        ActiveDocument.Bookmarks(What).Select
        On Error Resume Next
        Selection.Fields.Update
        On Error GoTo -1: On Error GoTo 0
        ActiveDocument.Bookmarks(What).Select
        Selection.Range.Fields.Update
        
     'This was added because an error occurred 4605 This method or property is not available because the document is locked for editing
       If ActiveDocument.ProtectionType = 1 Then
       ActiveDocument.Unprotect
       End If
        Selection.Range.Copy
        On Error GoTo PasteFail   'Added to catch RunTime error 4605 when the copy section is empty RH 8/20/2018
        ActiveDocument.Bookmarks(Where).Select
        ActiveDocument.Bookmarks("\EndOfSel").Select
        Selection.MoveEnd Unit:=wdLine, Count:=-1
        Selection.Range.Paste
        If MyUnlinkFields = 1 Then
            ActiveDocument.Bookmarks(Where).Select
            Selection.MoveEnd Unit:=wdLine, Count:=-1
            On Error Resume Next
            Selection.Range.Fields.Unlink
            On Error GoTo -1: On Error GoTo 0
        Else
            ActiveDocument.Bookmarks(Where).Select
            Selection.Range.Fields.Unlink
        End If
    End If
PasteFail:
        If Err.Number = 4605 Then  'clipboard is empty or not valid
            DoEvents
            Resume Next
        End If
    ProgressBar (5)
End Sub

Private Sub UpdateLateCharge()

'=============================================================
' AppPart1.UpdateLateCharge
'
' Sub
'-------------------------------------------------------------
' Modified 08-29-2001 WordBasic to VBA
' Author : Daniel H. Smith, Programmer/Analyst
' Notes :  Complete
'-------------------------------------------------------------
' Revision History
'-------------------------------------------------------------
' 08-29-2001 DHS:  11/09/2001 dhs:
'=============================================================
' End Code Header block
    Dim State
    Dim LCDays
    Dim LCPercent

    If Left(ActiveDocument.Bookmarks("LateChargeDays").Range.Text, 1) = "[" Then
        State = "BorrowerState_" + Trim(ActiveDocument.Bookmarks("RPFirst007").Range.Text)
        Select Case State
        Case "MA", "NC", "MS", "OR", "TN"
            LCDays = "15"
        Case Else
            LCDays = "10"
        End Select
        Select Case State
        Case "MA"
            LCPercent = "3"
        Case "NC", "MS"
            LCPercent = "4"
        Case Else
            LCPercent = "5"
        End Select
        UpdateField "LateChargeDays", LCDays, -1
        UpdateField "LateChargePercent", LCPercent, -1
    End If
End Sub

Sub UpdateText(Book, Text_)

'=============================================================
' WizLib.UpdateText
' Book (Variant)
' Text_ (Variant)
' Sub
'-------------------------------------------------------------
' Modified 08-23-2001 WordBasic to VBA
' Author : Daniel H. Smith, Programmer/Analyst
' Notes :  Complete
'-------------------------------------------------------------
' Revision History
'-------------------------------------------------------------
' 08-23-2001 DHS:
'=============================================================
' End Code Header block

    Application.ScreenUpdating = False
    If ActiveDocument.ActiveWindow.View.ShowFieldCodes = True Then
    Else
        ActiveDocument.ActiveWindow.View.ShowFieldCodes = True
    End If
'    ActiveDocument.Fields.Update
    'Added 9/11/2006 to allow use in Word 2003
    On Error Resume Next
    If ActiveDocument.ProtectionType <> wdNoProtection Then
        ActiveDocument.Unprotect "snad7623"
    End If
    '  If ActiveDocument.ProtectionType <> wdNoProtection Then
    '    ActiveDocument.Unprotect
    '  End If
    Dim xx
    If Text_ = "" Or IsNull(Text_) Then Text_ = "[" + Book + "]"
    If ActiveDocument.Bookmarks.Exists(Book) Then
        Dim BMRange As Range
        Set BMRange = ActiveDocument.Bookmarks(Book).Range
        BMRange.Text = Text_
        ActiveDocument.Bookmarks.Add Book, BMRange

'        Application.ScreenUpdating = False
'        ActiveDocument.Bookmarks(Book).Select
'        xx = ActiveDocument.Bookmarks(Book).Range.Start
'        ActiveDocument.Bookmarks(Book).Range.Text = Text_
'        ActiveDocument.Bookmarks.Add Name:=Book, Range:=ActiveDocument.Range(xx, xx + Len(Text_))

    End If
    FixWindows (Val(Application.Version) > 10)

'    With ActiveWindow.View
'        .ShowRevisionsAndComments = False
'        .RevisionsView = wdRevisionsViewFinal
'    End With
End Sub

Public Sub UpdatepgLI1()
    If UpdateLI1 = 0 Then
        Me.chkLI501.Value = ActiveDocument.Bookmarks("cbLI501").Range.Text
        Me.chkLI502.Value = ActiveDocument.Bookmarks("cbLI502").Range.Text
        Me.chkLIDFP.Value = ActiveDocument.Bookmarks("cbLIDFP").Range.Text
        Me.chkLISLA.Value = ActiveDocument.Bookmarks("cbLISLA").Range.Text
        If Me.cbxSBAName.ListCount = 0 Then
            PopulateSBAOfficeList
        End If
        Me.cbxSBAName.enabled = True
        Me.cbxSBAName.BackColor = vbWhite
        MySection = "HKEY_CURRENT_USER\Software\SBA\" + WizInfo.WizSection + "\" + WizInfo.WizVer
        If ActiveDocument.Bookmarks("SBACode").Range.Text = "0" Or System.PrivateProfileString("", MySection, "NoList") = "True" Or System.PrivateProfileString("", MySection, "NoList") = "" Then
    '''''          Me.cbxSBAName.Visible = False
            Me.cbxSBAName.enabled = False
            Me.cbxSBAName.BackColor = myGray
            Me.txtSBAName.visible = True
            Me.txtSBAName.Locked = False
            Me.txtSBAName.enabled = True
            Me.txtSBAName.BackColor = vbWhite
            Me.txtSBAName.Text = IIf(Left(ActiveDocument.Bookmarks("SBAName").Range.Text, 1) <> "[", ActiveDocument.Bookmarks("SBAName").Range.Text, "")
            Me.txtSBAAddress.enabled = True
            Me.txtSBAAddress.BackColor = vbWhite
            Me.txtSBAAddress.Text = IIf(Left(ActiveDocument.Bookmarks("SBAAddress").Range.Text, 1) <> "[", ActiveDocument.Bookmarks("SBAAddress").Range.Text, "")
            Me.txtSBAAddress2.enabled = True
            Me.txtSBAAddress2.BackColor = vbWhite
            Me.txtSBAAddress2.Text = IIf(Left(ActiveDocument.Bookmarks("SBAAddress2").Range.Text, 1) <> "[", ActiveDocument.Bookmarks("SBAAddress2").Range.Text, "")
            Me.txtSBACity.enabled = True
            Me.txtSBACity.BackColor = vbWhite
            Me.txtSBACity.Text = IIf(Left(ActiveDocument.Bookmarks("SBACity").Range.Text, 1) <> "[", ActiveDocument.Bookmarks("SBACity").Range.Text, "")

            StatesList cbxSBAState
            Me.cbxSBAState.enabled = True
            Me.cbxSBAState.BackColor = vbWhite
            Me.cbxSBAState.enabled = True
            Me.cbxSBAState.BackColor = vbWhite
            Me.txtSBAZip.enabled = True
            Me.txtSBAZip.BackColor = vbWhite
            Me.txtSBAZip.Text = IIf(Left(ActiveDocument.Bookmarks("SBAZip").Range.Text, 1) <> "[", ActiveDocument.Bookmarks("SBAZip").Range.Text, "")
            If Me.cbxSBAState.ListCount = 0 Then
                StatesList cbxSBAState
                PopulateSBAOfficeList
                Me.cbxSBAState.Value = IIf(Left(ActiveDocument.Bookmarks("SBAState").Range.Text, 1) <> "[", ActiveDocument.Bookmarks("SBAState").Range.Text, "")
    '            Me.cbxSBAName.Text = Me.cbxSBAState.Value
            Else
                Me.cbxSBAState.Value = IIf(Left(ActiveDocument.Bookmarks("SBAState").Range.Text, 1) <> "[", ActiveDocument.Bookmarks("SBAState").Range.Text, "")
    '            Me.cbxSBAName.Text = Me.cbxSBAState.Value
    '            Me.txtSBAName.Enabled = False
    '            Me.txtSBAName.BackColor = myGray
    '            Me.txtSBAName.Locked = True
    '            Me.txtSBAAddress.Enabled = False
    '            Me.txtSBAAddress.BackColor = myGray
    '            Me.txtSBAAddress.Locked = True
    '            Me.txtSBAAddress2.Enabled = False
    '            Me.txtSBAAddress2.BackColor = myGray
    '            Me.txtSBAAddress2.Locked = True
    '            Me.txtSBACity.Enabled = False
    '            Me.txtSBACity.BackColor = myGray
    '            Me.txtSBACity.Locked = True
    '            Me.cbxSBAState.Enabled = False
    '            Me.cbxSBAState.BackColor = myGray
    '            Me.cbxSBAState.Locked = True
    '            Me.txtSBAZip.Enabled = False
    '            Me.txtSBAZip.BackColor = myGray
    '            Me.txtSBAZip.Locked = True
            End If
        Else
            If ActiveDocument.Bookmarks("EditSBA").Range.Text = False Then
                If ActiveDocument.Bookmarks("SBACode").Range.Text <> "0" Then
                    If Me.cbxSBAState.ListCount = 0 Then
                        StatesList cbxSBAState
                    End If
                    If Me.cbxSBAName.ListCount = 0 Then
                        MySection = "HKEY_CURRENT_USER\Software\SBA\" + WizInfo.WizSection + "\" + WizInfo.WizVer
                        xx = System.PrivateProfileString("", MySection, "NoList")
                        If xx = "False" Or xx = "" Then
                            PopulateSBAOfficeList
                        End If
                    End If
                    For X = 1 To Me.cbxSBAName.ListCount - 1
                        If Me.cbxSBAName.Column(7, X) = ActiveDocument.Bookmarks("SBACode").Range.Text Then
                            Me.cbxSBAName.ListIndex = X
                            Exit For
                        End If
                    Next X
                End If
            Else
                If ActiveDocument.Bookmarks("ddOffice").Range.Text > "" Then
                    For X = 1 To Me.cbxSBAName.ListCount - 1
                        If Me.cbxSBAName.Column(1, X) = Mid(ActiveDocument.Bookmarks("ddOffice").Range.Text, 6) Then
                            Me.cbxSBAName.ListIndex = X
                            Exit For
                        End If
                    Next X
                    SBANmIndex = X
                End If
            End If
        End If
        'ARRA 3/15/2009
        Me.chkLI501.Value = ActiveDocument.Bookmarks("cbLI501").Range.Text
        Me.chkLI502.Value = ActiveDocument.Bookmarks("cbLI502").Range.Text
        Me.chkLIDFP.Value = ActiveDocument.Bookmarks("cbLIDFP").Range.Text
        Me.chkLISLA.Value = ActiveDocument.Bookmarks("cbLISLA").Range.Text
'        Me.optCCGuaranteesOnly.Value = ActiveDocument.Bookmarks("chkCCGuaranteesOnly").Range.Text
'        If Me.chkLIARRA.Value = True Then
'            Me.txtLICID.Text = IIf(Left(ActiveDocument.Bookmarks("CIDNumber").Range.Text, 1) <> "[", ActiveDocument.Bookmarks("CIDNumber").Range.Text, "")
'        Else
            Me.txtLIName.Text = IIf(Left(ActiveDocument.Bookmarks("LenderName").Range.Text, 1) <> "[", ActiveDocument.Bookmarks("LenderName").Range.Text, "")
            Me.txtLIName2.Text = IIf(Left(ActiveDocument.Bookmarks("LenderName2").Range.Text, 1) <> "[", ActiveDocument.Bookmarks("LenderName2").Range.Text, "")
            Me.txtLIAddress.Text = IIf(Left(ActiveDocument.Bookmarks("LenderAddress").Range.Text, 1) <> "[", ActiveDocument.Bookmarks("LenderAddress").Range.Text, "")
            Me.txtLIAddress2.Text = IIf(Left(ActiveDocument.Bookmarks("LenderAddress2").Range.Text, 1) <> "[", ActiveDocument.Bookmarks("LenderAddress2").Range.Text, "")
            Me.txtLICity.Text = IIf(Left(ActiveDocument.Bookmarks("LenderCity").Range.Text, 1) <> "[", ActiveDocument.Bookmarks("LenderCity").Range.Text, "")
            If Me.cbxLIState.ListCount = 0 Then
                StatesList Me.cbxLIState
            End If
            On Error Resume Next
            Me.cbxLIState.Text = IIf(Left(ActiveDocument.Bookmarks("LenderState").Range.Text, 1) <> "[", ActiveDocument.Bookmarks("LenderState").Range.Text, "")
            LIIndex = Me.cbxLIState.ListIndex
            Me.txtLIZip.Text = IIf(Left(ActiveDocument.Bookmarks("LenderZip").Range.Text, 1) <> "[", ActiveDocument.Bookmarks("LenderZip").Range.Text, "")
            Me.txtLILenderSign.Text = IIf(Left(ActiveDocument.Bookmarks("LenderSign").Range.Text, 1) <> "[", ActiveDocument.Bookmarks("LenderSign").Range.Text, "")
            If Me.cbxSBAName.ListCount = 0 Then
                Me.txtSBAName.Locked = False
                Me.cbxSBAName.enabled = False
                Me.cbxSBAName.BackColor = myGray
            End If
'        End If
        If Me.txtLIName.enabled = True Then
            Me.txtLIName.SetFocus
        End If
'        If Me.chkLI501.Value = False Or Me.chkLI502.Value = False Then
'            On Error Resume Next
'            Me.chkLI501.SetFocus
'            curCtrl = "chkLI501"
'        If Me.chkLIDFP.Value = False Then
'            On Error Resume Next
'            Me.chkLIDFP.SetFocus
'            curCtrl = "chkLIDFP"
'        Else
            Me.txtLIName.SetFocus
            curCtrl = "txtLIName"
'        End If
        UpdateLI1 = 1
    End If
    Me.cmdLIWizTips.visible = True
End Sub

Public Sub UpdatepgLI2()
    If UpdateLI2 = 0 Then
        CurIdx = Trim(RP__(0, 0)) 'RP__(0, 0)
'        CurIdx = Val(Trim(ActiveDocument.Bookmarks("RPCur007").Range.Text))
        Me.txtBIName.Text = IIf(Left(ActiveDocument.Bookmarks("BorrowerName_" & CurIdx).Range.Text, 1) <> "[", ActiveDocument.Bookmarks("BorrowerName_" & CurIdx).Range.Text, "")
        Me.txtBIDba.Text = IIf(Left(ActiveDocument.Bookmarks("BorrowerDBA_" & CurIdx).Range.Text, 1) <> "[", ActiveDocument.Bookmarks("BorrowerDBA_" & CurIdx).Range.Text, "")
        Me.txtBIAddress.Text = IIf(Left(ActiveDocument.Bookmarks("BorrowerAddress_" & CurIdx).Range.Text, 1) <> "[", ActiveDocument.Bookmarks("BorrowerAddress_" & CurIdx).Range.Text, "")
        Me.txtBIAddress2.Text = IIf(Left(ActiveDocument.Bookmarks("BorrowerAddress2_" & CurIdx).Range.Text, 1) <> "[", ActiveDocument.Bookmarks("BorrowerAddress2_" & CurIdx).Range.Text, "")
        Me.txtBICity.Text = IIf(Left(ActiveDocument.Bookmarks("BorrowerCity_" & CurIdx).Range.Text, 1) <> "[", ActiveDocument.Bookmarks("BorrowerCity_" & CurIdx).Range.Text, "")
        StatesList Me.cbxBIState
        Me.cbxBIState.Value = IIf(Left(ActiveDocument.Bookmarks("BorrowerState_" & CurIdx).Range.Text, 1) <> "[", ActiveDocument.Bookmarks("BorrowerState_" & CurIdx).Range.Text, "")
        BIIndex = Me.cbxBIState.ListIndex
        Me.txtBIZip.Text = IIf(Left(ActiveDocument.Bookmarks("BorrowerZip_" & CurIdx).Range.Text, 1) <> "[", ActiveDocument.Bookmarks("BorrowerZip_" & CurIdx).Range.Text, "")
        Me.chkBIEPC.Value = Val(Trim(ActiveDocument.Bookmarks("cbEPC").Range.Text))
        UpdateChangeRP 0, 7, "BI", "RPFirst007", "RPLast007"
        If Me.chkBIEPC.Value = True Then
            CurIdx = Trim(RP__(1, 0))
'            CurIdx = Val(Trim(ActiveDocument.Bookmarks("RPCur008").Range.Text))
            Me.txtOCName.Text = IIf(Left(ActiveDocument.Bookmarks("OCName_" & CurIdx).Range.Text, 1) <> "[", ActiveDocument.Bookmarks("OCName_" & CurIdx).Range.Text, "")
            Me.txtOCDba.Text = IIf(Left(ActiveDocument.Bookmarks("OCDba_" & CurIdx).Range.Text, 1) <> "[", ActiveDocument.Bookmarks("OCDba_" & CurIdx).Range.Text, "")
            Me.txtOCAddress.Text = IIf(Left(ActiveDocument.Bookmarks("OCAddress_" & CurIdx).Range.Text, 1) <> "[", ActiveDocument.Bookmarks("OCAddress_" & CurIdx).Range.Text, "")
            Me.txtOCAddress2.Text = IIf(Left(ActiveDocument.Bookmarks("OCAddress2_" & CurIdx).Range.Text, 1) <> "[", ActiveDocument.Bookmarks("OCAddress2_" & CurIdx).Range.Text, "")
            Me.txtOCCity.Text = IIf(Left(ActiveDocument.Bookmarks("OCCity_" & CurIdx).Range.Text, 1) <> "[", ActiveDocument.Bookmarks("OCCity_" & CurIdx).Range.Text, "")
            Me.chkOCCoBorrower.Value = IIf(Left(ActiveDocument.Bookmarks("cbCoBorrower_" & CurIdx).Range.Text, 1) <> "[", ActiveDocument.Bookmarks("cbCoBorrower_" & CurIdx).Range.Text, 0)
            StatesList Me.cbxOCState
            On Error Resume Next
    '          MsgBox IIf(Left(ActiveDocument.Bookmarks("OCState_" & CurIdx).Range.Text, 1) <> "[", ActiveDocument.Bookmarks("OCState_" & CurIdx).Range.Text, "")
            Me.cbxOCState.Text = IIf(Left(ActiveDocument.Bookmarks("OCState_" & CurIdx).Range.Text, 1) <> "[", ActiveDocument.Bookmarks("OCState_" & CurIdx).Range.Text, "")
            Me.cbxOCState.Value = IIf(Left(ActiveDocument.Bookmarks("OCState_" & CurIdx).Range.Text, 1) <> "[", ActiveDocument.Bookmarks("OCState_" & CurIdx).Range.Text, "")
            On Error GoTo 0
            OCIndex = Me.cbxOCState.ListIndex
            Me.txtOCZip.Text = IIf(Left(ActiveDocument.Bookmarks("OCZip_" & CurIdx).Range.Text, 1) <> "[", ActiveDocument.Bookmarks("OCZip_" & CurIdx).Range.Text, "")
            UpdateChangeRP 1, 8, "OC", "RPFirst008", "RPLast008"
        End If
        If Val(ActiveDocument.Bookmarks("RPLast007").Range.Text) = 1 Then
            Me.cmdBIDelete.enabled = False
        End If
        If Val(ActiveDocument.Bookmarks("RPLast008").Range.Text) = 1 Then
            Me.cmdOCDelete.enabled = False
        End If
        On Error Resume Next
        Me.txtBIName.SetFocus
        UpdateLI2 = 1
    End If
End Sub

Public Sub UpdatepgLI3()
    If UpdateLI3 = 0 Then
        If Me.cbxSBASignor.ListCount = 0 Then
            ReadEmpList
        End If
        If Trim(ActiveDocument.Bookmarks("cbAutoGuaranteeFee").Range.Text) = "1" Then
            Me.txtLDGuaranteeFee.Text = IIf(Left(ActiveDocument.Bookmarks("AutoGuaranteeFee").Range.Text, 1) <> "[", Format(ActiveDocument.Bookmarks("AutoGuaranteeFee").Range.Text, "#,#00.00"), "")
        Else
            Me.txtLDGuaranteeFee.Text = IIf(Left(ActiveDocument.Bookmarks("ManualGuaranteeFee").Range.Text, 1) <> "[", Format(ActiveDocument.Bookmarks("ManualGuaranteeFee").Range.Text, "#,#00.00"), "")
        End If  'AutoCalc
'DAN ARRA
        Me.txtLDAmt.Text = IIf(Left(ActiveDocument.Bookmarks("LoanAmount").Range.Text, 1) <> "[", ActiveDocument.Bookmarks("LoanAmount").Range.Text, "")
        Me.txtLDGuaranteePct.Text = IIf(Left(ActiveDocument.Bookmarks("PercentGuaranteed").Range.Text, 1) <> "[", ActiveDocument.Bookmarks("PercentGuaranteed").Range.Text, "")
        Me.txtLDMaturityMonths.Text = IIf(Left(ActiveDocument.Bookmarks("MaturityMonths").Range.Text, 1) <> "[", ActiveDocument.Bookmarks("MaturityMonths").Range.Text, "")
        Me.txtLDMaturityYears.Text = IIf(Left(ActiveDocument.Bookmarks("MaturityYears").Range.Text, 1) <> "[", ActiveDocument.Bookmarks("MaturityYears").Range.Text, "")
        If Trim(ActiveDocument.Bookmarks("cbAutoGuaranteeFee").Range.Text) = "0" Then
            Me.chkLDAutoCalc = False
        ElseIf Trim(ActiveDocument.Bookmarks("cbAutoGuaranteeFee").Range.Text) = "1" Then
            Me.chkLDAutoCalc = True
        End If
        If Trim(ActiveDocument.Bookmarks("cbCACAIP").Range.Text) = "0" Then
'          Me.chkCAIP = False
        Else
'          Me.chkCAIP = True
        End If
        If Me.chkLI501.Value = True Then
'           Me.chkCAIP.Value = False
'           Me.chkCAIP.enabled = False
        Else
 '           Me.chkCAIP.enabled = True
        End If

'Accidentally used bookmark LastDisb for FirstDisb textbox
'        Me.txtDIFirstDisbursement.Text = IIf(Left(ActiveDocument.Bookmarks("LastDisb").Range.Text, 1) <> "[", ActiveDocument.Bookmarks("LastDisb").Range.Text, "")
'        Me.txtDILastDisbursement.text = "12" 'IIf(Left(ActiveDocument.Bookmarks("LastDisb").Range.Text, 1) <> "[", ActiveDocument.Bookmarks("LastDisb").Range.Text, "")
'RFD 7/2009
        If Me.chkLIDFP.Value = True Then
            Me.lblDIFirstDisbursement.Caption = "Initial disbursement no later than             months from approval date"
            If Me.txtDIFirstDisbursement.Text = "" Then
                Me.txtDIFirstDisbursement.Text = "6"
            End If
        Else
        End If
        
'==================

        Me.txtLSApprovalDate.Text = IIf(Left(ActiveDocument.Bookmarks("ApprovalDate").Range.Text, 1) <> "[", ActiveDocument.Bookmarks("ApprovalDate").Range.Text, "")
        If Me.txtLSApprovalDate.Text = "____________________" Or Me.txtLSApprovalDate.Text = "" Then
            Me.txtLSApprovalDate.Text = "--"
        End If
        Me.txtLSReceiptDate.Text = IIf(Left(ActiveDocument.Bookmarks("RequestDate").Range.Text, 1) <> "[", ActiveDocument.Bookmarks("RequestDate").Range.Text, "")
        If Me.txtLSReceiptDate.Text = "____________________" Or Me.txtLSReceiptDate.Text = "" Then
            Me.txtLSReceiptDate.Text = "--"
        End If
        Me.txtLSPrefix.Text = Trim(IIf(Left(ActiveDocument.Bookmarks("LoanPrefix").Range.Text, 1) <> "[", ActiveDocument.Bookmarks("LoanPrefix").Range.Text, " "))
        Me.txtLSSuffix.Text = Trim(IIf(Left(ActiveDocument.Bookmarks("LoanSuffix").Range.Text, 1) <> "[", ActiveDocument.Bookmarks("LoanSuffix").Range.Text, " "))
        Me.txtLSLoanNumber.Text = IIf(Left(ActiveDocument.Bookmarks("LoanNumber").Range.Text, 1) <> "[", ActiveDocument.Bookmarks("LoanNumber").Range.Text, "")
        If Me.txtLSLoanNumber.Text = "____________________" Or Me.txtLSLoanNumber.Text = "" Then
            Me.txtLSLoanNumber.Text = "--"
        End If
        If Trim(ActiveDocument.Bookmarks("obPLP").Range.Text) = "0" Then
            Me.optLSNonPLP.Value = False
            Me.optLSPLP.Value = True
            Me.cbxSBASignor.enabled = False
            Me.cbxSBASignor.BackColor = myGray
        ElseIf Trim(ActiveDocument.Bookmarks("obPLP").Range.Text) = "1" Then
            Me.cbxSBASignor.enabled = False
            Me.optLSNonPLP.Value = True
            Me.cbxSBASignor.visible = True
            Me.cbxSBASignor.BackColor = myGray
            Me.txtSBASignor.visible = False
            Me.cmdSBAOverride.visible = True
            Me.cmdSBAOverride.enabled = True
            MySection = "HKEY_CURRENT_USER\Software\SBA\" + WizInfo.WizSection + "\" + WizInfo.WizVer
            xx = System.PrivateProfileString("", MySection, "NoEmpList")
            If xx = "True" And Left(ActiveDocument.Bookmarks("SBSBA").Range.Text, 1) <> "[" And ActiveDocument.Bookmarks("SBSBA").Range.Text <> "" Then
                Me.cbxSBASignor.visible = False
                Me.txtSBASignor.visible = True
                yy = System.PrivateProfileString("", MySection, "SBSBA")
                If yy <> "" Then
                    Me.txtSBASignor.Text = yy
                ElseIf Left(ActiveDocument.Bookmarks("SBSBA").Range.Text, 1) <> "[" And ActiveDocument.Bookmarks("SBSBA").Range.Text <> "" Then
                    Me.txtSBASignor.Text = ActiveDocument.Bookmarks("SBSBA").Range.Text
                Else
                    Me.cbxSBASignor.visible = True
                    Me.txtSBASignor.visible = False
                    Me.cbxSBASignor.enabled = False
                    Me.cbxSBASignor.BackColor = myGray
                    Me.cbxSBASignor.Text = "No Employee List Available"
                End If
            ElseIf Me.cbxSBASignor.Text <> "No Employee List Available" Then
                Me.cbxSBASignor.visible = True
                Me.cbxSBASignor.enabled = True
                Me.cbxSBASignor.BackColor = vbWhite
                Me.txtSBASignor.visible = False
                Me.cmdSBAOverride.visible = False
            End If
        End If
        If Trim(ActiveDocument.Bookmarks("cbAutoGuaranteeFee").Range.Text) = "0" Then
            Me.chkLDAutoCalc = False
        ElseIf Trim(ActiveDocument.Bookmarks("cbAutoGuaranteeFee").Range.Text) = "1" Then
            Me.chkLDAutoCalc = True
        End If
        Me.txtLDOngoingServicingFee.Text = ActiveDocument.Bookmarks("OSFee").Range.Text
        If ActiveDocument.Bookmarks("obMaturityStart").Range.Text = "0" Then
            Me.cbxLDMaturityPeriod.Value = "date of Note"
        Else
            Me.cbxLDMaturityPeriod.Value = "date of initial disbursement"
        End If
    '        If Trim(ActiveDocument.Bookmarks("OSF").Range.Text) = "0" Then
    '          Me.chkOSFSTAR = False
    '        ElseIf Trim(ActiveDocument.Bookmarks("OSF").Range.Text) = "1" Then
    '          Me.chkOSFSTAR = True
    '        End If
        If Me.cbxSBASignor.ListCount = 0 Then
            ReadEmpList
        End If
        If Me.cbxSBASignor.ListCount > 0 And Me.txtSBASignor.Text = "" Then
            Me.txtSBASignor.visible = False
            vSignor = IIf(Left(ActiveDocument.Bookmarks("SBSBA").Range.Text, 1) <> "[", ActiveDocument.Bookmarks("SBSBA").Range.Text, "")
            If vSignor <> "" And vSignor <> "No Employee List Available" Then
                If Me.cbxSBASignor.ListCount <> 0 And Me.optLSNonPLP.Value = True Then
                    If Len(vSignor) > 2 Then
                        Me.cbxSBASignor.Text = vSignor
                    Else
                        Me.cbxSBASignor.ListIndex = vSignor
                    End If
                End If
            ElseIf vSignor = "No Employee List Available" Then
                Me.txtSBASignor.visible = True
                Me.txtSBASignor.Text = IIf(Left(ActiveDocument.Bookmarks("SBSBA").Range.Text, 1) <> "[", ActiveDocument.Bookmarks("SBSBA").Range.Text, "")
            Else
                Me.cbxSBASignor.ListIndex = 0
            End If
        End If
        UpdateLI3 = 1
    End If
    If StartID = 6 Then
        Me.txtLSApprovalDate.SetFocus
    Else
        Me.fraLDInfo.SetFocus
        Me.txtLDAmt.SetFocus
    End If
End Sub

Public Sub UpdatepgRT1()
    If ActiveDocument.Bookmarks("Complete_LI").Range.Text = 0 And WizInfo.IsInDev = False Then
        retVal = 0
        retVal = MsgBox("The Loan Information section must be completed before the Repayment Terms section." & vbCrLf & vbCrLf & _
                        "Click 'OK' to move to the Loan Information section.", _
                        vbCritical + vbOKOnly, _
                        "Section Precedence")
        If retVal = 1 Then
            UpdateRT1 = 1    'Prevents above message from appearing twice
            frmMain.mpgWizard.Value = 0
    '        frmMain.mpgWizard.Value = frmMain.mpgWizard.Pages("pgLI1").Index '0
            Application.ScreenRefresh
            SetDialog 0
            UpdateLI1 = 0
            CommandSetup 3
            Me.fraLIInfo.SetFocus
            Me.txtLIName.SetFocus
        End If
    Else
        If UpdateRT1 = 0 Then
            Me.lblVLOOverPrime.visible = True
            Me.lblVLOPegRate.visible = False
            Me.lblVLOOverLibor.visible = False
            If ActiveDocument.Bookmarks("cbLIDFP").Range.Text = 1 Then
            Dim oBox As control

                For Each oBox In Me.fraIRInfo.Controls
'                    MsgBox TypeName(oBox)
                    If TypeName(oBox) = "OptionButton" Then
                        If oBox.Name = "optIRFixed" Or oBox.Name = "optIRVariable" Then
'                            MsgBox oBox.Name
                        Else
                            Me(oBox.Name).enabled = False
                        End If
                    End If
                    
'                Debug.Print oBox.Name
'                Debug.Print oBox.Caption
'                Debug.Print oBox.Value
'                End If
                Next

'                Me.mpgWizard.Value = Me.mpgWizard.Pages("pgRT2").Index
'                'Me.mpgPTOptions.Pages("pgRT1").Enabled = False
                CommandSetup "EnableFinish"
'                Application.ScreenRefresh
'                Me.mpgPTOptions.Pages("pgRT3").Enabled = False
'                Me.mpgPTOptions.Pages("pgRT4").Enabled = False
            Else
            Dim pBox As control
                For Each pBox In Me.fraIRInfo.Controls
                    If TypeName(pBox) = "OptionButton" Then
                        If pBox.Name = "optIRFixed" Or pBox.Name = "optIRVariable" Then
                        Else
                            Me(pBox.Name).enabled = True
                        End If
                    End If
                Next
'                Me.mpgPTOptions.Pages("pgRT1").Enabled = True
                CommandSetup "EnableNext"
'                Me.mpgPTOptions.Pages("pgRT3").Enabled = True
'                Me.mpgPTOptions.Pages("pgRT4").Enabled = True
'
            End If
            Select Case Val(ActiveDocument.Bookmarks("obddRate").Range.Text)
            Case 0
                Me.optIRFixed.Value = True
                PrevCtrl = "optIRFixed"
                curCtrl = "txtIRFixed"
            Case 1
                Me.optIRVariable.Value = True
                PrevCtrl = "optIRVariable"
                curCtrl = "txtIRVariable"
            Case 2
 'CAP
               Me.optIRFixedVariable.Value = True
                PrevCtrl = "optIRFixedVariable"
                curCtrl = "txtIRFixedVariable"
            Case 3
'CAP
                Me.optIRSBAFixed.Value = True
                PrevCtrl = "optIRSBAFixed"
                curCtrl = "txtIRSBAFixed"
            Case 4
'CAP
                Me.optIRLenderFixed.Value = True
                PrevCtrl = "optIRLenderFixed"
                curCtrl = "txtIRLenderFixed"
            Case 5
'CAP
                Me.optIRTwoFixed.Value = True
                PrevCtrl = "optIRTwoFixed"
                curCtrl = "txtIRSplitRate"
            Case 6
'CAP
                Me.optIRSplit.Value = True
                PrevCtrl = "optIRSplit"
                curCtrl = "txtIRSplitPercent"
            Case Else
            End Select
'CAP
            If Me.optIRFixed.Value = True Then
                Me.txtIRFixed.Text = IIf(Left(ActiveDocument.Bookmarks("IRRate1").Range.Text, 1) <> "[", ActiveDocument.Bookmarks("IRRate1").Range.Text, "")
            Else
                Me.txtIRFixed.Text = ""
            End If  'Fixed
'CAP
            Me.lblIRVariableOverPrime.Clear
            Me.lblIRVariableOverPrime.AddItem "% Over Prime", 0
            Me.lblIRVariableOverPrime.AddItem "% Over Peg", 1
            Me.lblIRVariableOverPrime.AddItem "% Over LIBOR", 2
            
            Me.lblIRFixedVariableOverPrime.Clear
            Me.lblIRFixedVariableOverPrime.AddItem "% Over Prime", 0
            Me.lblIRFixedVariableOverPrime.AddItem "% Over Peg", 1
            Me.lblIRFixedVariableOverPrime.AddItem "% Over LIBOR", 2
            
            Me.lblIRLenderOverPrime.Clear
            Me.lblIRLenderOverPrime.AddItem "% Over Prime", 0
            Me.lblIRLenderOverPrime.AddItem "% Over Peg", 1
            Me.lblIRLenderOverPrime.AddItem "% Over LIBOR", 2
            
            Me.lblIRSBAOverPrime.Clear
            Me.lblIRSBAOverPrime.AddItem "% Over Prime", 0
            Me.lblIRSBAOverPrime.AddItem "% Over Peg", 1
            Me.lblIRSBAOverPrime.AddItem "% Over LIBOR", 2
            
            Me.lblIRSplit4.Clear
            Me.lblIRSplit4.AddItem "The rate is Prime Rate plus"
            Me.lblIRSplit4.AddItem "The rate is Peg Rate plus"
            Me.lblIRSplit4.AddItem "The rate is LIBOR Rate plus"
            
            If Me.optIRVariable.Value = True Then
'CAP
                Me.txtIRVariable.Text = IIf(Left(ActiveDocument.Bookmarks("IRRate2").Range.Text, 1) <> "[", ActiveDocument.Bookmarks("IRRate2").Range.Text, "")
                Me.txtIRVariableOverPrime.Text = IIf(Left(ActiveDocument.Bookmarks("IROverPrime").Range.Text, 1) <> "[", ActiveDocument.Bookmarks("IROverPrime").Range.Text, "")
                Me.txtIRRTPublisher.Text = IIf(Left(ActiveDocument.Bookmarks("RTPublication").Range.Text, 1) <> "[", ActiveDocument.Bookmarks("RTPublication").Range.Text, "")
                Me.optIRRTPubNewspaper.Value = IIf(Left(ActiveDocument.Bookmarks("RTPubType").Range.Text, 1) <> "[", ActiveDocument.Bookmarks("RTPubType").Range.Text, 0)
                If Me.optIRRTPubNewspaper.Value = False Then
                    Me.optIRRTPubWebsite.Value = True
                Else
                    Me.optIRRTPubNewspaper.Value = True
                    If Me.txtIRRTPublisher.Text = "" Then
                        Me.txtIRRTPublisher.Text = "Wall Street Journal"
                    End If
                End If
'                MsgBox ActiveDocument.Bookmarks("RTPubType").Range.Text
                If ActiveDocument.Bookmarks("ChangePrimePeg").Range.Text = "0" Then
                    Me.lblIRVariableOverPrime.Text = "% Over Prime"
                    PPeg = 0
                ElseIf ActiveDocument.Bookmarks("ChangePrimePeg").Range.Text = "1" Then
                    '4/13/2007
                    Me.lblIRVariableOverPrime.enabled = True
                    Me.lblIRVariableOverPrime.Text = "% Over Peg"
                    PPeg = 1
                Else
                    Me.lblIRVariableOverPrime.enabled = True
                    Me.lblIRVariableOverPrime.Text = "% Over LIBOR"
                    PPeg = 2
                End If
            Else
'                Me.txtIRVariable.text = ""
'                Me.txtIRVariable.enabled = False
'                Me.lblIRVariable.enabled = False
'                Me.txtIRVariableOverPrime.text = ""
'                Me.txtIRVariableOverPrime.enabled = False
            End If  'Variable
            If Me.optIRFixedVariable.Value = True Then
'CAP
                Me.txtIRFixedVariable.Text = IIf(Left(ActiveDocument.Bookmarks("IRRate1").Range.Text, 1) <> "[", ActiveDocument.Bookmarks("IRRate1").Range.Text, "")
                Me.txtIRFixedVariableOverPrime.Text = IIf(Left(ActiveDocument.Bookmarks("IROverPrime").Range.Text, 1) <> "[", ActiveDocument.Bookmarks("IROverPrime").Range.Text, "")
                Me.txtIRFixedVariablePeriod.Text = IIf(Left(ActiveDocument.Bookmarks("IRPeriod1").Range.Text, 1) <> "[", ActiveDocument.Bookmarks("IRPeriod1").Range.Text, "")
                Me.txtIRRTPublisher.Text = IIf(Left(ActiveDocument.Bookmarks("RTPublication").Range.Text, 1) <> "[", ActiveDocument.Bookmarks("RTPublication").Range.Text, "")
                Me.optIRRTPubNewspaper.Value = IIf(Left(ActiveDocument.Bookmarks("RTPubType").Range.Text, 1) <> "[", ActiveDocument.Bookmarks("RTPubType").Range.Text, 0)
                If Me.optIRRTPubNewspaper.Value = False Then
                    Me.optIRRTPubWebsite.Value = True
                Else
                    Me.optIRRTPubNewspaper.Value = True
                End If
                If ActiveDocument.Bookmarks("ChangePrimePeg").Range.Text = "0" Then
                    Me.lblIRFixedVariableOverPrime.Text = "% Over Prime"
                    Me.lblIRSplit4.Text = "The rate is Prime Rate plus"
                    PPeg = 0
                ElseIf ActiveDocument.Bookmarks("ChangePrimePeg").Range.Text = "1" Then
                    Me.lblIRFixedVariableOverPrime.Text = "% Over Peg"
                    Me.lblIRSplit4.Text = "The rate is Peg Rate plus"
                    PPeg = 1
                Else
                    Me.lblIRFixedVariableOverPrime.Text = "% Over LIBOR"
                    Me.lblIRSplit4.Text = "The rate is LIBOR Rate plus"
                    PPeg = 2
                End If
            Else
'                Me.txtIRFixedVariable.text = ""
'                Me.txtIRFixedVariable.enabled = False
'                Me.txtIRFixedVariableOverPrime.text = ""
'                Me.lblIRFixedVariable.enabled = False
'                Me.lblIRFixedVariableOverPrime.text = "% Over Prime"
'                Me.txtIRFixedVariableOverPrime.enabled = False
'                Me.txtIRFixedVariablePeriod.text = ""
'                Me.txtIRFixedVariablePeriod.enabled = False
            End If  'FixedVariable
            If Me.optIRSBAFixed.Value = True Then
'CAP
                Me.txtIRSBAFixed.Text = IIf(Left(ActiveDocument.Bookmarks("IRRate1").Range.Text, 1) <> "[", ActiveDocument.Bookmarks("IRRate1").Range.Text, "")
                Me.txtIRLenderOverPrime.Text = IIf(Left(ActiveDocument.Bookmarks("IROverPrime").Range.Text, 1) <> "[", ActiveDocument.Bookmarks("IROverPrime").Range.Text, "")
                Me.txtIRLenderVariable.Text = IIf(Left(ActiveDocument.Bookmarks("IRRate2").Range.Text, 1) <> "[", ActiveDocument.Bookmarks("IRRate2").Range.Text, "")
                Me.txtIRRTPublisher.Text = IIf(Left(ActiveDocument.Bookmarks("RTPublication").Range.Text, 1) <> "[", ActiveDocument.Bookmarks("RTPublication").Range.Text, "")
                Me.optIRRTPubNewspaper.Value = IIf(Left(ActiveDocument.Bookmarks("RTPubType").Range.Text, 1) <> "[", ActiveDocument.Bookmarks("RTPubType").Range.Text, 0)
                If Me.optIRRTPubNewspaper.Value = False Then
                    Me.optIRRTPubWebsite.Value = True
                Else
                    Me.optIRRTPubNewspaper.Value = True
                End If
                If ActiveDocument.Bookmarks("ChangePrimePeg").Range.Text = "0" Then
                    Me.lblIRLenderOverPrime.Text = "% Over Prime"
                    PPeg = 0
                ElseIf ActiveDocument.Bookmarks("ChangePrimePeg").Range.Text = "1" Then
                    Me.lblIRLenderOverPrime.Text = "% Over Peg"
                    PPeg = 1
                Else
                    Me.lblIRLenderOverPrime.Text = "% Over LIBOR"
                    PPeg = 2
                End If
            Else
'                Me.txtIRSBAFixed.text = ""
'                Me.txtIRSBAFixed.enabled = False
'                Me.txtIRLenderOverPrime.text = ""
'                Me.txtIRLenderOverPrime.enabled = False
'                Me.lblIRLenderOverPrime.text = "% Over Prime"
'                Me.lblIRLenderOverPrime.enabled = False
'                Me.txtIRLenderVariable.text = ""
'                Me.txtIRLenderVariable.enabled = False
            End If  'SBAFixed
            If Me.optIRLenderFixed.Value = True Then
'CAP
                Me.txtIRLenderFixed.Text = IIf(Left(ActiveDocument.Bookmarks("IRRate1").Range.Text, 1) <> "[", ActiveDocument.Bookmarks("IRRate1").Range.Text, "")
                Me.txtIRSBAOverPrime.Text = IIf(Left(ActiveDocument.Bookmarks("IROverPrime").Range.Text, 1) <> "[", ActiveDocument.Bookmarks("IROverPrime").Range.Text, "")
                Me.txtIRSBAVariable.Text = IIf(Left(ActiveDocument.Bookmarks("IRRate2").Range.Text, 1) <> "[", ActiveDocument.Bookmarks("IRRate2").Range.Text, "")
                Me.txtIRRTPublisher.Text = IIf(Left(ActiveDocument.Bookmarks("RTPublication").Range.Text, 1) <> "[", ActiveDocument.Bookmarks("RTPublication").Range.Text, "")
                Me.optIRRTPubNewspaper.Value = IIf(Left(ActiveDocument.Bookmarks("RTPubType").Range.Text, 1) <> "[", ActiveDocument.Bookmarks("RTPubType").Range.Text, 0)
                If Me.optIRRTPubNewspaper.Value = False Then
                    Me.optIRRTPubWebsite.Value = True
                Else
                    Me.optIRRTPubNewspaper.Value = True
                End If
                If ActiveDocument.Bookmarks("ChangePrimePeg").Range.Text = "0" Then
                    Me.lblIRSBAOverPrime.Text = "% Over Prime"
                    PPeg = 0
                ElseIf ActiveDocument.Bookmarks("ChangePrimePeg").Range.Text = "1" Then
                    Me.lblIRSBAOverPrime.Text = "% Over Peg"
                    PPeg = 1
                Else
                    Me.lblIRSBAOverPrime.Text = "% Over LIBOR"
                    PPeg = 2
                End If
            Else
'                Me.txtIRLenderFixed.text = ""
'                Me.txtIRLenderFixed.enabled = False
'                Me.lblIRSBAOverPrime.enabled = False
'                Me.lblIRSBAOverPrime.text = "% Over Prime"
'                Me.txtIRSBAOverPrime.text = ""
'                Me.txtIRSBAOverPrime.enabled = False
'                Me.txtIRSBAVariable.text = ""
'                Me.txtIRSBAVariable.enabled = False
            End If  'LenderFixed
            If Me.optIRTwoFixed.Value = True Then
'CAP
                Me.txtIRSplitRate.Text = IIf(Left(ActiveDocument.Bookmarks("IRPShare1").Range.Text, 1) <> "[", ActiveDocument.Bookmarks("IRPShare1").Range.Text, "")
                Me.txtIRSplitPercent.Text = IIf(Left(ActiveDocument.Bookmarks("IRRate1").Range.Text, 1) <> "[", ActiveDocument.Bookmarks("IRRate1").Range.Text, "")
                Me.txtIRSplitRate2.Text = IIf(Left(ActiveDocument.Bookmarks("IRRate2").Range.Text, 1) <> "[", ActiveDocument.Bookmarks("IRRate2").Range.Text, "")
                Me.txtIRSplitPercent2.Text = IIf(Left(ActiveDocument.Bookmarks("IRPShare2").Range.Text, 1) <> "[", ActiveDocument.Bookmarks("IRPShare2").Range.Text, "")
'            ElseIf Me.optIRSplit.Value = False Then
'                Me.txtIRSplitRate.Text = ""
'                Me.txtIRSplitRate.enabled = False
'                Me.txtIRSplitPercent.Text = ""
'                Me.txtIRSplitPercent.enabled = False
'                Me.txtIRSplitRate2.Text = ""
'                Me.txtIRSplitRate2.enabled = False
'                Me.lblIRSplit4.enabled = False
'                Me.lblIRSplit4.Text = "The rate is Prime Rate plus"
'                Me.txtIRSplitPercent2.Text = ""
'                Me.txtIRSplitPercent2.enabled = False
            End If  'TwoFixed
            If Me.optIRSplit.Value = True Then
'CAP
                Me.txtIRSplitRate.Text = IIf(Left(ActiveDocument.Bookmarks("IRPShare1").Range.Text, 1) <> "[", ActiveDocument.Bookmarks("IRPShare1").Range.Text, "")
                Me.txtIRSplitPercent.Text = IIf(Left(ActiveDocument.Bookmarks("IRRate1").Range.Text, 1) <> "[", ActiveDocument.Bookmarks("IRRate1").Range.Text, "")
                Me.txtIRSplitRate2.Text = IIf(Left(ActiveDocument.Bookmarks("IRPShare2").Range.Text, 1) <> "[", ActiveDocument.Bookmarks("IRPShare2").Range.Text, "")
                Me.txtIRSplitPercent2.Text = IIf(Left(ActiveDocument.Bookmarks("IRRate2").Range.Text, 1) <> "[", ActiveDocument.Bookmarks("IRRate2").Range.Text, "")
                Me.txtIRSplitPrime.Text = IIf(Left(ActiveDocument.Bookmarks("IROverPrime").Range.Text, 1) <> "[", ActiveDocument.Bookmarks("IROverPrime").Range.Text, "")
                Me.txtIRRTPublisher.Text = IIf(Left(ActiveDocument.Bookmarks("RTPublication").Range.Text, 1) <> "[", ActiveDocument.Bookmarks("RTPublication").Range.Text, "")
                Me.optIRRTPubNewspaper.Value = IIf(Left(ActiveDocument.Bookmarks("RTPubType").Range.Text, 1) <> "[", ActiveDocument.Bookmarks("RTPubType").Range.Text, 0)
                If Me.optIRRTPubNewspaper.Value = False Then
                    Me.optIRRTPubWebsite.Value = True
                Else
                    Me.optIRRTPubNewspaper.Value = True
                End If
                If ActiveDocument.Bookmarks("ChangePrimePeg").Range.Text = "0" Then
                    Me.lblIRSplit4.Text = "The rate is Prime Rate plus"
                    PPeg = 0
                ElseIf ActiveDocument.Bookmarks("ChangePrimePeg").Range.Text = "1" Then
                    Me.lblIRSplit4.Text = "The rate is Peg Rate plus"
                    PPeg = 1
                Else
                    Me.lblIRSplit4.Text = "The rate is LIBOR Rate plus"
                    PPeg = 2
                End If
            ElseIf Me.optIRTwoFixed.Value = False Then
'                Me.txtIRSplitRate.Text = ""
'                Me.txtIRSplitRate.enabled = False
'                Me.txtIRSplitPercent.Text = ""
'                Me.txtIRSplitPercent.enabled = False
'                Me.txtIRSplitRate2.Text = ""
'                Me.txtIRSplitRate2.enabled = False
'                Me.txtIRSplitPercent2.Text = ""
'                Me.txtIRSplitPercent2.enabled = False
'                Me.txtIRSplitPrime.Text = ""
'                Me.txtIRSplitPrime.enabled = False
'                Me.lblIRSplit4.enabled = False
'                Me.lblIRSplit4.Text = "The rate is Prime Rate plus"
            End If  'Split
'            Me.txtIRRTPublisher.Text = IIf(Left(ActiveDocument.Bookmarks("RTPublication").Range.Text, 1) <> "[", ActiveDocument.Bookmarks("RTPublication").Range.Text, "")
'            Me.optIRRTPubNewspaper.Value = IIf(Left(ActiveDocument.Bookmarks("RTPubType").Range.Text, 1) <> "[", ActiveDocument.Bookmarks("RTPubType").Range.Text, 0)

            UpdateRT1 = 1
        End If
    End If
    On Error Resume Next
    Me(PrevCtrl).SetFocus
    Me(curCtrl).SetFocus
End Sub

Public Sub UpdatepgRT2()
    If UpdateRT2 = 0 Then
        If Trim(ActiveDocument.Bookmarks("cbLIDFP").Range.Text) = 1 Then
                DayCountList cbxDFPMonths

            Me.optRTDFP.Value = True
            Me.optRTDFP.Locked = True
'            Me.cbxRTPeriod.enabled = True
            Me.cbxRTPeriod.BackColor = vbWhite
            Me.lblRTCurtailment.enabled = True
            Me.lblRTDays.enabled = True
            Me.lblRTPeriod.enabled = True
            Me.chkRTCurtailment.Value = True
            Me.cbxDFPMonths.enabled = True
            Me.cbxDFPMonths.BackColor = vbWhite
            Me.chkRTCurtailment.enabled = True
'            Me.fraDFP.enabled = True
'            Me.chkRTCurtailment.Value = IIf(Left(ActiveDocument.Bookmarks("chkRTCurtailment").Range.Text, 1) <> "[", ActiveDocument.Bookmarks("chkRTCurtailment").Range.Text, 0)
'            Me.txtRTCurtailment.Text = IIf(Left(ActiveDocument.Bookmarks("DFPCurtailment").Range.Text, 1) <> "[", ActiveDocument.Bookmarks("DFPCurtailment").Range.Text, "")
'            Me.cbxRTPeriod.Text = IIf(Left(ActiveDocument.Bookmarks("txtRTDays").Range.Text, 1) <> "[", ActiveDocument.Bookmarks("txtRTDays").Range.Text, "")
            Me.cbxDFPMonths.Text = IIf(Left(ActiveDocument.Bookmarks("DFPPayDay").Range.Text, 1) <> "[", ActiveDocument.Bookmarks("DFPPayDay").Range.Text, "")
            Me.optIONone.enabled = True
            Me.optIONone.Value = True
            Me.optIONone.enabled = False
            Me.fraIOInfo.enabled = False
            Me.lblIOBorrower.enabled = False
            Me.optIOOne.enabled = False
            Me.optIONone.enabled = False
            Me.optIOMorethanOne.enabled = False
'            Me.optIONone.Enabled = False
'            Me.lblRTESF1.enabled = False
            Me.chkRTESF.Value = False
            Me.chkRTESF.enabled = False
            Me.lblRTESF2.enabled = False
            Me.txtRTESF.enabled = False
            Me.txtRTESF.Text = ""
            Me.txtRTESF.BackColor = myGray
        Else
            Me.cbxDFPMonths.Clear
            Me.fraIOInfo.enabled = True
            Me.lblIOBorrower.enabled = True
            Me.optIONone.enabled = True
            Me.optIOOne.enabled = True
            Me.optIOMorethanOne.enabled = True
            Me.optRTDFP.Value = False
            Me.optRTDFP.Locked = False
            Me.chkRTCurtailment.Value = False
            Me.lblRTCurtailment.enabled = False
            Me.cbxDFPMonths.enabled = False
            Me.cbxDFPMonths.BackColor = myGray
'            Me.lblRTDays.enabled = False
            Me.lblRTPeriod.enabled = False
'            Me.cbxRTPeriod.enabled = False
            Me.cbxRTPeriod.BackColor = myGray
'            Me.chkRTCurtailment.Value = False
'            Me.fraDFP.enabled = False
'            Me.chkRTCurtailment.enabled = False
'            Me.optIONone.Enabled = True
'            Me.lblRTESF1.enabled = True
'            Me.chkRTCurtailment.Value = IIf(Left(ActiveDocument.Bookmarks("chkRTCurtailment").Range.Text, 1) <> "[", ActiveDocument.Bookmarks("chkRTCurtailment").Range.Text, 0)
            
            Me.chkRTESF.Value = IIf(Left(ActiveDocument.Bookmarks("chkRTESF").Range.Text, 1) <> "[", ActiveDocument.Bookmarks("chkRTESF").Range.Text, 0)
            If Me.chkLIDFP.Value = False Then
                Me.chkRTESF.enabled = True
                If Me.chkRTESF.Value = True Then
                    Me.lblRTESF2.enabled = True
                    Me.txtRTESF.enabled = True
                    Me.txtRTESF.Text = IIf(Left(ActiveDocument.Bookmarks("txtRTESF").Range.Text, 1) <> "[", ActiveDocument.Bookmarks("txtRTESF").Range.Text, "")
                    Me.txtRTESF.BackColor = vbWhite
                Else
                    Me.lblRTESF2.enabled = False
                    Me.txtRTESF.Text = ""
                    Me.txtRTESF.enabled = False
                    Me.txtRTESF.BackColor = myGray
                End If
            End If
        End If
        If Me.chkLIDFP.Value = False Then
            If Trim(ActiveDocument.Bookmarks("obIO").Range.Text) = 0 Or Trim(ActiveDocument.Bookmarks("obIO").Range.Text) = "optIOOne" Then
                Me.optIONone.Value = 1
            End If
            If Trim(ActiveDocument.Bookmarks("obIO").Range.Text) = 1 Or Trim(ActiveDocument.Bookmarks("obIO").Range.Text) = "optIOOne" Then
                Me.optIOOne.Value = 1
                Me.cbxIODaysOne.Text = IIf(Left(ActiveDocument.Bookmarks("IOBeginValue").Range.Text, 1) <> "[", ActiveDocument.Bookmarks("IOBeginValue").Range.Text, "")
                Me.cbxIOPeriodOne.Text = IIf(Left(ActiveDocument.Bookmarks("IOBeginPeriod").Range.Text, 1) <> "[", ActiveDocument.Bookmarks("IOBeginPeriod").Range.Text, "")
                Me.cbxIOMonthsOne.Text = IIf(Left(ActiveDocument.Bookmarks("IOPayDay").Range.Text, 1) <> "[", ActiveDocument.Bookmarks("IOPayDay").Range.Text, "")
            End If
            If Trim(ActiveDocument.Bookmarks("obIO").Range.Text) = 2 Or Trim(ActiveDocument.Bookmarks("obIO").Range.Text) = "OptIOMore" Then
                Me.optIOMorethanOne.Value = 1
                Me.txtIOPaymentsMore.Text = IIf(Left(ActiveDocument.Bookmarks("IOPayments").Range.Text, 1) <> "[", ActiveDocument.Bookmarks("IOPayments").Range.Text, "")
                Me.cbxIODaysMore.Text = IIf(Left(ActiveDocument.Bookmarks("IOBeginValue").Range.Text, 1) <> "[", ActiveDocument.Bookmarks("IOBeginValue").Range.Text, "")
                Me.cbxIOMonthsMore.Text = IIf(Left(ActiveDocument.Bookmarks("IOBeginPeriod").Range.Text, 1) <> "[", ActiveDocument.Bookmarks("IOBeginPeriod").Range.Text, "")
                Me.cbxIOMonthsDueMore.Text = IIf(Left(ActiveDocument.Bookmarks("IOPayDay").Range.Text, 1) <> "[", ActiveDocument.Bookmarks("IOPayDay").Range.Text, "")
                Me.cbxIOPeriodMore.Text = IIf(Left(ActiveDocument.Bookmarks("IOFrequency").Range.Text, 1) <> "[", Mid(ActiveDocument.Bookmarks("IOFrequency").Range.Text, 7), "")
            End If
'            Me.fraIOInfo.SetFocus
'            Me.optIONone.SetFocus
        End If
        UpdateRT2 = 1
    End If
    If Me.cbxDFPMonths.enabled Then
        Me.cbxDFPMonths.SetFocus
    Else
        Me.chkRTESF.SetFocus
    End If
End Sub

Public Sub UpdatepgRT3()
    If Me.optIRSplit.Value = False Then
        Me.mpgPTOptions.Pages("pgPT7").enabled = False
    Else
        Me.mpgPTOptions.Pages("pgPT7").enabled = True
    End If
    If UpdateRT3 = 0 Then
'        If Trim(ActiveDocument.Bookmarks("cbLIDFP").Range.Text) = 1 Then
''            If Me.mpgWizard.Value = Me.mpgWizard.Pages("pgRT3").index Then
'                Me.mpgWizard.Value = Me.mpgWizard.Value + 1
'                Exit Sub
''            End If
''            Me.mpgPTOptions.Pages("pgPT2").enabled = False
''            Me.mpgPTOptions.Pages("pgPT3").enabled = False
''            Me.mpgPTOptions.Pages("pgPT4").enabled = False
''            Me.mpgPTOptions.Pages("pgPT5").enabled = False
''            Me.mpgPTOptions.Pages("pgPT6").enabled = False
''            Me.mpgPTOptions.Pages("pgPT7").enabled = False
'        End If

        Me.mpgPTOptions.Value = Trim(ActiveDocument.Bookmarks("obddPay").Range.Text)
        Select Case Trim(ActiveDocument.Bookmarks("obddPay").Range.Text)
        Case "0"
            Me.txtPTAmount1.Text = IIf(Left(ActiveDocument.Bookmarks("PTAmount1").Range.Text, 1) <> "[", ActiveDocument.Bookmarks("PTAmount1").Range.Text, "")
            If Left(ActiveDocument.Bookmarks("PIPayPeriodV2").Range.Text, 1) <> "[" Then
                If ActiveDocument.Bookmarks("PIPayPeriodV2").Range.Text > 1 And InStr(1, ActiveDocument.Bookmarks("PTFrequency").Range.Text, "months") Then
                    Me.txtPTEveryNum1.enabled = True
                    Me.txtPTEveryNum1.BackColor = vbWhite
                    Me.txtPTEveryNum1.Text = ActiveDocument.Bookmarks("PIPayPeriodV2").Range.Text
                    Me.cbxPTPeriod1.Text = "months"
                ElseIf ActiveDocument.Bookmarks("PIPayPeriodV2").Range.Text > 1 And InStr(1, ActiveDocument.Bookmarks("PTFrequency").Range.Text, "years") Then
                    Me.txtPTEveryNum1.enabled = True
                    Me.txtPTEveryNum1.BackColor = vbWhite
                    Me.txtPTEveryNum1.Text = ActiveDocument.Bookmarks("PTPayPeriodV2").Range.Text
                    Me.cbxPTPeriod1.Text = "years"
                Else
                    Me.cbxPTPeriod1.Text = Mid(ActiveDocument.Bookmarks("PTFrequency").Range.Text, 7)
                End If
            End If
            Me.cbxPTDayCount1.Text = ActiveDocument.Bookmarks("PTPayDay1").Range.Text
            Me.txtPTAmount1.SetFocus
        Case "1"
            Me.txtPTAmount2.Text = IIf(Left(ActiveDocument.Bookmarks("PTAmount1").Range.Text, 1) <> "[", ActiveDocument.Bookmarks("PTAmount1").Range.Text, "")
            If Left(ActiveDocument.Bookmarks("IPPayPeriodV2").Range.Text, 1) <> "[" Then
                If ActiveDocument.Bookmarks("IPPayPeriodV2").Range.Text > 1 And InStr(1, ActiveDocument.Bookmarks("PTFrequency").Range.Text, "months") Then
                    Me.txtPTEveryNum2.enabled = True
                    Me.txtPTEveryNum2.BackColor = vbWhite
                    Me.txtPTEveryNum2.Text = ActiveDocument.Bookmarks("IPPayPeriodV2").Range.Text
                    Me.cbxPTPeriod2.Text = "months"
                ElseIf ActiveDocument.Bookmarks("IPPayPeriodV2").Range.Text > 1 And InStr(1, ActiveDocument.Bookmarks("PTFrequency").Range.Text, "years") Then
                    Me.txtPTEveryNum2.enabled = True
                    Me.txtPTEveryNum2.BackColor = vbWhite
                    Me.txtPTEveryNum2.Text = ActiveDocument.Bookmarks("PTPayPeriodV2").Range.Text
                    Me.cbxPTPeriod2.Text = "years"
                Else
                    Me.cbxPTPeriod2.Text = Mid(ActiveDocument.Bookmarks("PTFrequency").Range.Text, 7)
                End If
            End If
            Me.cbxPTDayCount2.Text = ActiveDocument.Bookmarks("PTPayDay1").Range.Text
            Me.txtPTAmount2.SetFocus
        Case "2"
            Me.txtPTAmount3.Text = IIf(Left(ActiveDocument.Bookmarks("PTAmount2").Range.Text, 1) <> "[", ActiveDocument.Bookmarks("PTAmount2").Range.Text, "")
            Me.txtPTMonthsInclude3.Text = IIf(Left(ActiveDocument.Bookmarks("PTPeriod1").Range.Text, 1) <> "[", ActiveDocument.Bookmarks("PTPeriod1").Range.Text, "")
            If Left(ActiveDocument.Bookmarks("RISPPayPeriodV2").Range.Text, 1) <> "[" Then
                If InStr(1, ActiveDocument.Bookmarks("PTFrequency").Range.Text, "months") Then
                    Me.txtPTEveryNum3.enabled = True
                    Me.txtPTEveryNum3.Text = ActiveDocument.Bookmarks("RISPPayPeriodV2").Range.Text
                    Me.txtPTEveryNum3.BackColor = vbWhite
                    Me.cbxPTPeriod3.Text = "months"
                ElseIf ActiveDocument.Bookmarks("RISPPayPeriodV2").Range.Text > 1 And InStr(1, ActiveDocument.Bookmarks("PTFrequency").Range.Text, "years") Then
                    Me.txtPTEveryNum3.enabled = True
                    Me.txtPTEveryNum3.BackColor = vbWhite
                    Me.txtPTEveryNum3.Text = ActiveDocument.Bookmarks("RISPPayPeriodV2").Range.Text
                    Me.cbxPTPeriod3.Text = "years"
                Else
                    Me.cbxPTPeriod3.Text = Mid(ActiveDocument.Bookmarks("PTFrequency").Range.Text, 7)
                End If
            End If
            Me.cbxPTDayCount3a.Text = ActiveDocument.Bookmarks("PTPayDay1").Range.Text
            Me.cbxPTDayCount3b.Text = ActiveDocument.Bookmarks("PTPayDay2").Range.Text
            If Me.txtPTEveryNum3.enabled = False Then
                Me.txtPTAmount3.SetFocus
            Else
                Me.txtPTEveryNum3.SetFocus
            End If
        Case "3"
            Me.txtPTAmount4.Text = IIf(Left(ActiveDocument.Bookmarks("PTAmount1").Range.Text, 1) <> "[", ActiveDocument.Bookmarks("PTAmount1").Range.Text, "")
            Me.txtPTMonthsInclude4.Text = IIf(Left(ActiveDocument.Bookmarks("PTPeriod1").Range.Text, 1) <> "[", ActiveDocument.Bookmarks("PTPeriod1").Range.Text, "")
            Me.cbxPTDayCount4.Text = ActiveDocument.Bookmarks("PTPayDay1").Range.Text
            Me.txtPTAmount4.SetFocus
        Case "4"
            Me.txtPTAmount5.Text = IIf(Left(ActiveDocument.Bookmarks("PTAmount1").Range.Text, 1) <> "[", ActiveDocument.Bookmarks("PTAmount1").Range.Text, "")
            If Left(ActiveDocument.Bookmarks("SPI2PayPeriodV2").Range.Text, 1) <> "[" Then
                If ActiveDocument.Bookmarks("SPI2PayPeriodV2").Range.Text > 1 And InStr(1, ActiveDocument.Bookmarks("PTFrequency").Range.Text, "months") Then
                    Me.txtPTEveryNum5.enabled = True
                    Me.txtPTEveryNum5.BackColor = vbWhite
                    Me.txtPTEveryNum5.Text = ActiveDocument.Bookmarks("SPI2PayPeriodV2").Range.Text
                    Me.cbxPTPeriod5.Text = "months"
                ElseIf ActiveDocument.Bookmarks("SPI2PayPeriodV2").Range.Text > 1 And InStr(1, ActiveDocument.Bookmarks("PTFrequency").Range.Text, "years") Then
                    Me.txtPTEveryNum5.enabled = True
                    Me.txtPTEveryNum5.BackColor = vbWhite
                    Me.txtPTEveryNum5.Text = ActiveDocument.Bookmarks("SPI2PayPeriodV2").Range.Text
                    Me.cbxPTPeriod5.Text = "years"
                Else
                    Me.cbxPTPeriod5.Text = Mid(ActiveDocument.Bookmarks("PTFrequency").Range.Text, 7)
                End If
            End If
            Me.cbxPTDayCount5.Text = IIf(Left(ActiveDocument.Bookmarks("PTPayDay1").Range.Text, 1) <> "[", ActiveDocument.Bookmarks("PTPeriod1").Range.Text, "")
            Me.txtPTMonthsExcept5.Text = IIf(Left(ActiveDocument.Bookmarks("PTPeriod2").Range.Text, 1) <> "[", ActiveDocument.Bookmarks("PTPeriod2").Range.Text, "")
            Me.txtPTAmount5.SetFocus
        Case "5"
            Me.txtPTMonthsInclude6a.Text = IIf(Left(ActiveDocument.Bookmarks("PTPeriod1").Range.Text, 1) <> "[", ActiveDocument.Bookmarks("PTPeriod1").Range.Text, "")
            Me.txtPTMonthsInclude6b.Text = IIf(Left(ActiveDocument.Bookmarks("PTPeriod2").Range.Text, 1) <> "[", ActiveDocument.Bookmarks("PTPeriod2").Range.Text, "")
            Me.txtPTAmount6a.Text = IIf(Left(ActiveDocument.Bookmarks("PTAmount1").Range.Text, 1) <> "[", ActiveDocument.Bookmarks("PTAmount1").Range.Text, "")
            Me.txtPTAmount6b.Text = IIf(Left(ActiveDocument.Bookmarks("PTAmount2").Range.Text, 1) <> "[", ActiveDocument.Bookmarks("PTAmount2").Range.Text, "")
            Me.txtPTMonthsInclude6a.SetFocus
        Case "6"
            Me.txtPTPercent7.Text = IIf(Left(ActiveDocument.Bookmarks("PTPShare1").Range.Text, 1) <> "[", ActiveDocument.Bookmarks("PTPShare1").Range.Text, "")
            Me.txtPTAmount7a.Text = IIf(Left(ActiveDocument.Bookmarks("PTAmount1").Range.Text, 1) <> "[", ActiveDocument.Bookmarks("PTAmount1").Range.Text, "")
            Me.txtPTAmount7b.Text = IIf(Left(ActiveDocument.Bookmarks("PTAmount2").Range.Text, 1) <> "[", ActiveDocument.Bookmarks("PTAmount2").Range.Text, "")
            Me.txtPTPercent7.SetFocus
        Case Else
        End Select
        Me.cbxPTBeginPeriodNum.Text = IIf(Left(ActiveDocument.Bookmarks("PTBeginValue").Range.Text, 1) <> "[", ActiveDocument.Bookmarks("PTBeginValue").Range.Text, "one")
        Me.cbxPTBeginPeriodType.Text = IIf(Left(ActiveDocument.Bookmarks("PTBeginPeriod").Range.Text, 1) <> "[", ActiveDocument.Bookmarks("PTBeginPeriod").Range.Text, "month")
        UpdateRT3 = 1
    End If
    Select Case Trim(ActiveDocument.Bookmarks("obddPay").Range.Text)
    Case 0
        Me.txtPTAmount1.SetFocus
    Case 1
        Me.txtPTAmount2.SetFocus
    Case 2
        If Me.txtPTEveryNum3.enabled = False Then
            Me.cbxPTPeriod3.SetFocus
        Else
            Me.txtPTEveryNum3.SetFocus
        End If
    Case 3
        Me.txtPTAmount4.SetFocus
    Case 4
        Me.txtPTAmount5.SetFocus
    Case 5
        Me.txtPTMonthsInclude6a.SetFocus
    Case 6
        Me.txtPTPercent7.SetFocus
    Case Else
    End Select
End Sub

Public Sub UpdatepgRT4()
'    Me.lblVLOOverPrime.visible = False
'    Me.lblVLOPegRate.visible = False
'    Me.lblVLOOverLibor.visible = False
    Me.txtVLOEveryNum.Text = ""
    Me.txtVLOEveryNum.enabled = False
    Me.txtVLOEveryNum.BackColor = myGray
    Me.lblVLOEveryPeriod.enabled = False

    If UpdateRT4 = 0 Then
        If Trim(ActiveDocument.Bookmarks("cbLIDFP").Range.Text) = 1 Then
           Dim nBox As control
           Dim oBox As control
           Dim pBox As control

                For Each nBox In Me.fraVLOInfo.Controls
                    If TypeName(nBox) = "TextBox" Or TypeName(nBox) = "ComboBox" Then
                        If nBox.Name = "txtVLOEveryNum" Then
                            Exit For
                        End If
                        Me(nBox.Name).enabled = True
                        Me(nBox.Name).BackColor = vbWhite
                    Else
                        Me(nBox.Name).enabled = True
                    End If
                Next
                For Each oBox In Me.fraCFOInfo.Controls
                    If TypeName(oBox) = "OptionButton" Then
                        If oBox.Name = "optCFONone" Then
                            Me.optCFONone.Value = True
                            Me(oBox.Name).enabled = False
                        Else
                            Me(oBox.Name).enabled = False
                        End If
                    Else
                            Me(oBox.Name).enabled = False
                    End If
                Next
                For Each pBox In Me.fraOLOInfo.Controls
                    If TypeName(pBox) = "CheckBox" Then
                    'chkOLOLateCharge
                        If pBox.Name = "chkOLOLateCharge" Then
                            Me(pBox.Name).enabled = True
                            Me(pBox.Name).Value = False
                            Me(pBox.Name).enabled = False
                        Else
                            Me(pBox.Name).enabled = False
                        End If
                    Else
                        Me(pBox.Name).enabled = False
                    End If
                Next
        End If
        If Me.optIRFixed.Value = True Or Me.optIRTwoFixed.Value = True Then
            Me.fraVLOInfo.enabled = False
            Me.fraCFOInfo.enabled = False
        Else
            If PPeg = 0 Then
                Me.fraVLOInfo.enabled = True
'                Me.lblVLOOverPrime.visible = True
'                Me.lblVLOOverLibor.visible = False
'                Me.lblVLOPegRate.visible = False
                If Me.cbxVLORateAdjusted.ListCount <= 4 Or Me.cbxVLORateAdjusted.ListCount = 0 Then
                    Me.cbxVLORateAdjusted.Clear
                    VariableOptionList cbxVLORateAdjusted
                End If
                Me.cbxVLORateAdjusted.Text = IIf(Left(ActiveDocument.Bookmarks("ChangePeriod").Range.Text, 1) <> "[", ActiveDocument.Bookmarks("ChangePeriod").Range.Text, "")
                varVLOEveryNum = IIf(Left(ActiveDocument.Bookmarks("ChangePeriod2").Range.Text, 1) <> "[", ActiveDocument.Bookmarks("ChangePeriod2").Range.Text, "")
                If varVLOEveryNum > "" And varVLOEveryNum <> "0" Then
                    If InStr(1, ActiveDocument.Bookmarks("ChangePeriod").Range.Text, "months") Then
                        Me.cbxVLORateAdjusted.Text = "every ___ months"
                        Me.lblVLOEveryPeriod.enabled = True
                        Me.lblVLOEveryPeriod.Caption = "every                    months      "
                        Me.txtVLOEveryNum.enabled = True
                        Me.txtVLOEveryNum.Text = varVLOEveryNum
                        Me.txtVLOEveryNum.BackColor = vbWhite
                    ElseIf InStr(1, ActiveDocument.Bookmarks("ChangePeriod").Range.Text, "years") Then
                        Me.cbxVLORateAdjusted.Text = "every ___ years"
                        Me.lblVLOEveryPeriod.enabled = True
                        Me.lblVLOEveryPeriod.Caption = "every                    years    "
                        Me.txtVLOEveryNum.enabled = True
                        Me.txtVLOEveryNum.Text = varVLOEveryNum
                        Me.txtVLOEveryNum.BackColor = vbWhite
                    End If
                End If
                If Me.cbxVLORateAdjusted.Text = "" Then
                    Me.cbxVLORateAdjusted.ListIndex = 0
                End If
            ElseIf PPeg = 1 Then
'                Me.lblVLOOverPrime.visible = False
'                Me.lblVLOPegRate.visible = True
'                Me.lblVLOOverLibor.visible = False
                If Me.cbxVLORateAdjusted.ListCount >= 4 Or Me.cbxVLORateAdjusted.ListCount = 0 Then
                    Me.cbxVLORateAdjusted.Clear
                    Me.cbxVLORateAdjusted.AddItem "every ___ years", 0
                    Me.cbxVLORateAdjusted.AddItem "every calendar quarter", 1
                    Me.cbxVLORateAdjusted.AddItem "every calendar year", 2
                    Me.cbxVLORateAdjusted.AddItem "semi-annually", 3
                    Me.cbxVLORateAdjusted.ListIndex = 0
                    Me.cbxVLORateAdjusted.Text = IIf(Left(ActiveDocument.Bookmarks("ChangePeriod").Range.Text, 1) <> "[", ActiveDocument.Bookmarks("ChangePeriod").Range.Text, "")
                    'Makes sure the list at this point is 4 items above, and first item picked
                    If InStr(1, Me.cbxVLORateAdjusted.Text, "month") Or Me.cbxVLORateAdjusted.Text = "annually" Or Me.cbxVLORateAdjusted.Text = "every year" Then
                        Me.cbxVLORateAdjusted.ListIndex = 0
                    End If
                Else
                    Me.cbxVLORateAdjusted.ListIndex = 0
                End If
                varVLOEveryNum = IIf(Left(ActiveDocument.Bookmarks("ChangePeriod2").Range.Text, 1) <> "[", ActiveDocument.Bookmarks("ChangePeriod2").Range.Text, "")
                If InStr(1, ActiveDocument.Bookmarks("ChangePeriod").Range.Text, "years") Then
                    Me.cbxVLORateAdjusted.Text = "every ___ years"
                    Me.lblVLOEveryPeriod.enabled = True
                    Me.lblVLOEveryPeriod.Caption = "every                    years    "
                    Me.txtVLOEveryNum.enabled = True
                    Me.txtVLOEveryNum.Text = varVLOEveryNum
                    Me.txtVLOEveryNum.BackColor = vbWhite
                End If
            Else
'                Me.lblVLOOverPrime.visible = False
'                Me.lblVLOOverLibor.visible = True
'                Me.lblVLOPegRate.visible = False
                If Me.cbxVLORateAdjusted.ListCount <= 4 Or Me.cbxVLORateAdjusted.ListCount = 0 Then
                    Me.cbxVLORateAdjusted.Clear
                    VariableOptionList cbxVLORateAdjusted
                End If
                Me.cbxVLORateAdjusted.Text = IIf(Left(ActiveDocument.Bookmarks("ChangePeriod").Range.Text, 1) <> "[", ActiveDocument.Bookmarks("ChangePeriod").Range.Text, "")
                varVLOEveryNum = IIf(Left(ActiveDocument.Bookmarks("ChangePeriod2").Range.Text, 1) <> "[", ActiveDocument.Bookmarks("ChangePeriod2").Range.Text, "")
                If varVLOEveryNum > "" And varVLOEveryNum <> "0" Then
                    If InStr(1, ActiveDocument.Bookmarks("ChangePeriod").Range.Text, "months") Then
                        Me.cbxVLORateAdjusted.Text = "every ___ months"
                        Me.lblVLOEveryPeriod.enabled = True
                        Me.lblVLOEveryPeriod.Caption = "every                    months      "
                        Me.txtVLOEveryNum.enabled = True
                        Me.txtVLOEveryNum.Text = varVLOEveryNum
                        Me.txtVLOEveryNum.BackColor = vbWhite
                    ElseIf InStr(1, ActiveDocument.Bookmarks("ChangePeriod").Range.Text, "years") Then
                        Me.cbxVLORateAdjusted.Text = "every ___ years"
                        Me.lblVLOEveryPeriod.enabled = True
                        Me.lblVLOEveryPeriod.Caption = "every                    years    "
                        Me.txtVLOEveryNum.enabled = True
                        Me.txtVLOEveryNum.Text = varVLOEveryNum
                        Me.txtVLOEveryNum.BackColor = vbWhite
                    End If
                End If
                If Me.cbxVLORateAdjusted.Text = "" Then
                    Me.cbxVLORateAdjusted.ListIndex = 0
                End If
                If Me.cbxVLORateAdjusted.Text = "monthly" Then
                    Me.txtVLOEveryNum.Text = ""
                    Me.txtVLOEveryNum.enabled = False
                    Me.txtVLOEveryNum.BackColor = myGray
                    Me.lblVLOEveryPeriod.enabled = False
                End If
            End If
            If Me.txtVLOOverPrime.Text = "" Then
                Me.txtVLOOverPrime.Text = IIf(Left(ActiveDocument.Bookmarks("CDOverPrime").Range.Text, 1) <> "[", ActiveDocument.Bookmarks("CDOverPrime").Range.Text, "")
            End If
            optCFONone_Click
            If Left(ActiveDocument.Bookmarks("obCF").Range.Text, 1) <> "[" Then
                obCFVal = ActiveDocument.Bookmarks("obCF").Range.Text
                Select Case obCFVal
                Case 0
                    Me.optCFONone.Value = 1
                Case 1
 '                   Me.optCFOFluctuate.Value = 1
                Case 2
                    Me.optCFOFixed.Value = 1
                Case Else
                End Select
                If obCFVal = 1 Or obCFVal = 2 Then
                    Me.txtCFOMax.Text = ActiveDocument.Bookmarks("Ceiling").Range.Text
                    Me.txtCFOMin.Text = ActiveDocument.Bookmarks("Floor").Range.Text
                End If
            End If
        End If
        If Trim(ActiveDocument.Bookmarks("cbLIDFP").Range.Text) = 1 Then
            Me.chkOLOLateCharge.Value = False 'ActiveDocument.Bookmarks("cbLateCharge").Range.Text
            If Me.chkOLOLateCharge.Value = False Then
                Me.txtOLODaysLate.Text = "" 'ActiveDocument.Bookmarks("LateChargeDays").Range.Text
                Me.txtOLOLateChargePct.Text = "" 'ActiveDocument.Bookmarks("LateChargePercent").Range.Text
            End If
        Else
            Me.chkOLOLateCharge.Value = ActiveDocument.Bookmarks("cbLateCharge").Range.Text
            Me.chkOLOEscrowAccount.Value = Val(ActiveDocument.Bookmarks("chkOLOEscrowAccount").Range.Text)
        End If
        Me.chkOLORecapture.Value = Val(ActiveDocument.Bookmarks("cbRecapture").Range.Text)
        If Me.chkOLORecapture.Value = True Then
            If ActiveDocument.Bookmarks("obRecapture").Range.Text = 0 Then
                Me.optOLORecapturePct.Value = 1
                Me.txtOLORecapturePct.Text = IIf(Left(ActiveDocument.Bookmarks("RecapturePercent").Range.Text, 1) <> "[", ActiveDocument.Bookmarks("RecapturePercent").Range.Text, "")
            Else
                Me.optOLORecaptureOver.Value = 1
                Me.txtOLORecaptureAmt.Text = IIf(Left(ActiveDocument.Bookmarks("RecaptureAmount").Range.Text, 1) <> "[", ActiveDocument.Bookmarks("RecaptureAmount").Range.Text, "")
            End If
        End If
        Me.chkOLORateReduction.Value = ActiveDocument.Bookmarks("cbRRProgram").Range.Text
        If Me.chkOLORateReduction.Value = True Then
            Me.cbxOLORateReduction.Text = IIf(Left(ActiveDocument.Bookmarks("RRProgram").Range.Text, 1) <> "[", ActiveDocument.Bookmarks("RRProgram").Range.Text, "")
        End If
        If Me.optIRFixed.Value = True Or Me.optIRTwoFixed.Value = True Then
        Else
            Me.txtVLOOverPrime.SetFocus
        End If
        UpdateRT4 = 1
    End If
End Sub

Public Sub UpdatepgUP()
    If UpdateUP = 0 Then
        If ActiveDocument.Bookmarks("Complete_LI").Range.Text = 1 Then
    'Save your file
            BackupUP
            LastIdx = ActiveDocument.Bookmarks("RPLast010").Range.Text
            FirstIdx = ActiveDocument.Bookmarks("RPFirst010").Range.Text
            CurIdx = Val(Trim(ActiveDocument.Bookmarks("RPCur010").Range.Text))
            UpdateChangeRP 7, 10, "UP", "RPFirst010", "RPLast010"
            Me.txtUPLoanAmount.Text = IIf(Left(ActiveDocument.Bookmarks("LoanAmount").Range.Text, 1) <> "[", Format(ActiveDocument.Bookmarks("LoanAmount").Range.Text, "#,##0.00;(#,##0.00)"), "0.00") 'ActiveDocument.Bookmarks("LoanAmount").Range.Text
            Me.txtUPProcessed.Text = "0.00"
            If Me.cbxUPCategory.ListCount = 0 Then
                UseProceedsList Me.cbxUPCategory
            End If
            Me.cbxUPCategory.ListIndex = 21
            Me.txtUPContractPrice.Text = IIf(Left(ActiveDocument.Bookmarks("CPPrice").Range.Text, 1) <> "[", Format(ActiveDocument.Bookmarks("CPPrice").Range.Text, "#,##0.00;(#,##0.00)"), "")
            If ActiveDocument.Bookmarks("obUPID_" & CurIdx).Range.Text = "[obUPID_1]" Then
                Me.txtobUPID.Text = "21"
            Else
                Me.txtobUPID.Text = Val(ActiveDocument.Bookmarks("obUPID_" & CurIdx).Range.Text)
            End If
            Me.txtUPAmount.Text = IIf(Left(ActiveDocument.Bookmarks("UPAmount_" & CurIdx).Range.Text, 1) <> "[", ActiveDocument.Bookmarks("UPAmount_" & CurIdx).Range.Text, "")
            If Me.cbxUPCategory.ListIndex = 0 Then
                Me.lblUPData1.Caption = Me.cbxUPCategory.List(cIndex, 1)
                Me.lblUPData1.visible = True
                Me.lblUPData1.enabled = True
                Me.txtUPText.visible = True
                Me.txtUPText.enabled = True
                Me.txtUPText.Top = 82
                Me.txtUPText.Height = 46
            End If
            Me.txtUPText.Text = IIf(Left(ActiveDocument.Bookmarks("UPText_" & CurIdx).Range.Text, 1) <> "[", ActiveDocument.Bookmarks("UPText_" & CurIdx).Range.Text, "")
            Me.txtUPField1.Text = IIf(Left(ActiveDocument.Bookmarks("UPField1_" & CurIdx).Range.Text, 1) <> "[", ActiveDocument.Bookmarks("UPField1_" & CurIdx).Range.Text, "")
            Me.txtUPField2.Text = IIf(Left(ActiveDocument.Bookmarks("UPField2_" & CurIdx).Range.Text, 1) <> "[", ActiveDocument.Bookmarks("UPField2_" & CurIdx).Range.Text, "")
            Me.txtUPAmount2.Text = IIf(Left(ActiveDocument.Bookmarks("UPAmount2_" & CurIdx).Range.Text, 1) <> "[", ActiveDocument.Bookmarks("UPAmount2_" & CurIdx).Range.Text, "")
            Me.txtUPField3.Text = IIf(Left(ActiveDocument.Bookmarks("UPField3_" & CurIdx).Range.Text, 1) <> "[", ActiveDocument.Bookmarks("UPField3_" & CurIdx).Range.Text, "")
            UpdateUPTot
            If Me.txtUPProcessed.Text = "0.00" Then
                Me.cmdUPNew.Caption = "Save"
                Me.cmdUPNew.Accelerator = "S"
                Me.cmdUPShowList.enabled = False
            Else
                Me.cbxUPCategory.Locked = True
                Me.cbxUPCategory.BackColor = myDisabled
                Me.txtUPAmount.Locked = True
                Me.txtUPAmount.BackColor = myDisabled
                Me.txtUPAmount2.Locked = True
                Me.txtUPAmount2.BackColor = myDisabled
                Me.txtUPText.Locked = True
                Me.txtUPText.BackColor = myDisabled
                Me.txtUPField1.Locked = True
                Me.txtUPField1.BackColor = myDisabled
                Me.txtUPField2.Locked = True
                Me.txtUPField2.BackColor = myDisabled
                Me.txtUPField3.Locked = True
                Me.txtUPField3.BackColor = myDisabled
                Me.cmdUPEdit.enabled = Not myDisabled
            End If
            Me.cbxUPCategory.SetFocus
            Me.cmdWizardShortCut.visible = True
'            If Me.cbxUPCategory.ListIndex = 21 Then
'                Me.cmdUPNew.enabled = False
'                Me.cmdUPDelete.enabled = False
            If Me.txtUPRemainingAmount.Text = "0.00" Then
                Me.cmdUPNew.enabled = False
                Me.cmdFinish.enabled = True
            Else
                Me.cmdUPNew.enabled = True
            End If
            UpdateUP = 1
        Else
    '          retVal = MsgBox("The Loan Information section must be completed before the Use of Proceeds section." & vbCrLf & vbCrLf & _
               '                          "Click 'OK' to move to the Loan Information section.", _
               '                          vbCritical + vbOKOnly, _
               '                          "Section Precedence")
    '          If retVal = 1 Then
            UpdateUP = 1    'Prevents above message from appearing twice
            Me.mpgWizard.Value = 0    'Move to LI section
            StartID = 0
            CommandSetup 3
            MsgBox "The Loan Information section must be completed before the Use of Proceeds section." & vbCrLf & vbCrLf & _
                   "Click 'OK' to move to the Loan Information section.", _
                   vbCritical + vbOKOnly, _
                   "Section Precedence"
            Exit Sub
    '          End If
        End If
''''''''    If 1 = 1 Then
''''''''        Me.cbxUPCategory.ListIndex = 22
''''''''        Me.cbxUPCategory.Locked = True
''''''''        Me.cbxUPCategory.BackColor = myDisabled
'''''''''        If Me.cbxUPCategory.Locked = False Then
''''''''''            Me.cmdUPEdit.Enabled = False
''''''''''            Me.txtUPAmount.Locked = False
''''''''''            Me.txtUPAmount.BackColor = vbWhite
'''''''''        Else
'''''''''            Me.cmdUPEdit.Enabled = False
'''''''''            Me.txtUPAmount.Locked = True
'''''''''            Me.txtUPAmount.BackColor = myDisabled
'''''''''        End If
''''''''
''''''''    Exit Sub
''''''''    End If
    End If
'    If Me.cbxUPCategory.ListIndex = 21 Then
'        Me.cmdUPNew.Enabled = False
'    Else
'        Me.cmdUPNew.Enabled = True
'    End If
    UPOPtions Me.cbxUPCategory.ListIndex, Me.cbxUPCategory.Locked
End Sub

Public Sub UpdatepgCC1()
'    #If VBA6 Then
'    If Options.PasteSmartCutPaste = True Then
'      UpdateText "CutPaste", "True"
'      With Options
'        .PasteSmartCutPaste = False
'      End With
'    ElseIf ActiveDocument.Bookmarks.Item("CutPaste").Range.Text = "[CutPaste]" Then
'      UpdateText "CutPaste", "False"
'    End If
'    #End If

    If ActiveDocument.Bookmarks("chkCCGuaranteesOnly").Range.Text = 1 Then
        Me.txtCCSelectMsg.Text = "This is an SLA Loan of $25,000 or less that will ONLY take guarantees:"
    Else
        Me.txtCCSelectMsg.Text = "Select a Collateral Condition from the categories below:"
    End If
    
    If UpdateCC1 = 0 Then
        If retCheckInput = False Then
            Me.mpgCCOptions.Value = 0
        End If
        PrevCtrl = ""
        UpdateCC1 = 1
    End If
'    Me.chkLISLA.Value = ActiveDocument.Bookmarks("cbLISLA").Range.Text
'    If Me.chkLISLA.Value = True Then
''        Me.optCCGuaranteesOnly.enabled = True
''        PriorVal = Me.optCCGuaranteesOnly.Value
'        Me.optCCGuaranteesOnly.Value = ActiveDocument.Bookmarks("chkCCGuaranteesOnly").Range.Text
'    Else
'        Me.optCCGuaranteesOnly.enabled = False
'        Me.optCCGuaranteesOnly.Value = False
'    End If
    
    If RetrieveInfo = True Then
    Else
        Me.mpgCCOptions.Value = 0
    End If
    FirstPass = True
End Sub

Public Sub UpdatepgACI1()
'============ADDITIONAL CONDITIONS I=============
    If UpdateACI1 = 0 Then
        Me.cbxAC1OtherInsurance.AddItem "Florida Petroleum Liability Insurance (FLIRP)"
        Me.cbxAC1OtherInsurance.AddItem ""
        If Trim(ActiveDocument.Bookmarks("cbIC1").Range.Text) = "0" Then
            Me.chkAC1FloodInsurance = False
        ElseIf Trim(ActiveDocument.Bookmarks("cbIC1").Range.Text) = "1" Then
            Me.chkAC1FloodInsurance = True
        End If
        If Trim(ActiveDocument.Bookmarks("cbIC2").Range.Text) = "0" Then
            Me.chkAC1RealEstateInsurance = False
        ElseIf Trim(ActiveDocument.Bookmarks("cbIC2").Range.Text) = "1" Then
            Me.chkAC1RealEstateInsurance = True
        End If
        If Trim(ActiveDocument.Bookmarks("cbIC2Commercial").Range.Text) = "0" Then
            Me.chkAC1BusinessInsurance = False
        ElseIf Trim(ActiveDocument.Bookmarks("cbIC2Commercial").Range.Text) = "1" Then
            Me.chkAC1BusinessInsurance = True
        End If
        If Trim(ActiveDocument.Bookmarks("cbIC3").Range.Text) = "0" Then
            Me.chkAC1PersonalInsurance = False
        ElseIf Trim(ActiveDocument.Bookmarks("cbIC3").Range.Text) = "1" Then
            Me.chkAC1PersonalInsurance = True
        End If
        If Trim(ActiveDocument.Bookmarks("cbIC4").Range.Text) = "0" Then
            Me.chkAC1MarineInsurance = False
        ElseIf Trim(ActiveDocument.Bookmarks("cbIC4").Range.Text) = "1" Then
            Me.chkAC1MarineInsurance = True
            Me.txtAC1MarineVessels.Text = IIf(Left(ActiveDocument.Bookmarks("IC4Vessel").Range.Text, 1) <> "[", ActiveDocument.Bookmarks("IC4Vessel").Range.Text, "")
        End If
        CurIdx = Val(Trim(ActiveDocument.Bookmarks("RPCur001").Range.Text))
        Me.chkAC1LifeInsurance.Value = Val(Trim(ActiveDocument.Bookmarks("cbRP001").Range.Text))
        If Me.chkAC1LifeInsurance.Value = 1 Then
            Me.txtIC5Insured.Text = IIf(Left(ActiveDocument.Bookmarks("IC5Insured_" & CurIdx).Range.Text, 1) <> "[", ActiveDocument.Bookmarks("IC5Insured_" & CurIdx).Range.Text, "")
            Me.txtIC5Amount.Text = IIf(Left(ActiveDocument.Bookmarks("IC5Amount_" & CurIdx).Range.Text, 1) <> "[", ActiveDocument.Bookmarks("IC5Amount_" & CurIdx).Range.Text, "")
        End If
        Me.chkAC1FloodInsurance.SetFocus
        UpdateACI1 = 1
    End If
End Sub

Public Sub UpdatepgACI2()
'============ADDITIONAL CONDITIONS I, page 2=============
    If UpdateACI2 = 0 Then
        If Trim(ActiveDocument.Bookmarks("cbIC6").Range.Text) = "0" Then
            Me.chkAC1LiabilityInsurance = False
        ElseIf Trim(ActiveDocument.Bookmarks("cbIC6").Range.Text) = "1" Then
            Me.chkAC1LiabilityInsurance = True
        End If
        If Trim(ActiveDocument.Bookmarks("cbIC7").Range.Text) = "0" Then
            Me.chkAC1ProductInsurance = False
        ElseIf Trim(ActiveDocument.Bookmarks("cbIC7").Range.Text) = "1" Then
            Me.chkAC1ProductInsurance = True
        End If
        If Trim(ActiveDocument.Bookmarks("cbIC8").Range.Text) = "0" Then
            Me.chkAC1ShopInsurance = False
        ElseIf Trim(ActiveDocument.Bookmarks("cbIC8").Range.Text) = "1" Then
            Me.chkAC1ShopInsurance = True
        End If
        If Trim(ActiveDocument.Bookmarks("cbIC9").Range.Text) = "0" Then
            Me.chkAC1MalpracticeInsurance = False
        ElseIf Trim(ActiveDocument.Bookmarks("cbIC9").Range.Text) = "1" Then
            Me.chkAC1MalpracticeInsurance = True
        End If
        If Trim(ActiveDocument.Bookmarks("cbIC10").Range.Text) = "0" Then
            Me.chkAC1DisabilityInsurance = False
        ElseIf Trim(ActiveDocument.Bookmarks("cbIC10").Range.Text) = "1" Then
            Me.chkAC1DisabilityInsurance = True
            Me.txtAC1DisabilityInsurance.Text = IIf(Left(ActiveDocument.Bookmarks("IC10Insured").Range.Text, 1) <> "[", ActiveDocument.Bookmarks("IC10Insured").Range.Text, "")
        End If
        If Trim(ActiveDocument.Bookmarks("cbIC11").Range.Text) = "0" Then
            Me.chkAC1WorkersInsurance = False
        ElseIf Trim(ActiveDocument.Bookmarks("cbIC11").Range.Text) = "1" Then
            Me.chkAC1WorkersInsurance = True
        End If
        If Trim(ActiveDocument.Bookmarks("cbIC12").Range.Text) = 1 Then
            Me.chkAC1OtherInsurance.Value = True
            If Trim(ActiveDocument.Bookmarks("optIC12a").Range.Text) = 1 Then
                Me.optAC1Select.Value = True
                Me.cbxAC1OtherInsurance.Text = ActiveDocument.Bookmarks("IC12").Range.Text
            Else
                Me.optAC1WriteYourOwn.Value = True
                Me.txtAC1OtherInsurance.Text = ActiveDocument.Bookmarks("IC12").Range.Text
            End If
        End If
        Me.chkAC1LiabilityInsurance.SetFocus
        UpdateACI2 = 1
    End If
End Sub

Public Sub UpdatepgACI3()
'============ADDITIONAL CONDITIONS I, page 3=============
    If UpdateACI3 = 0 Then
        If Trim(ActiveDocument.Bookmarks("cbER").Range.Text) = "0" Then
            Me.chkERLoanAmount = False
        ElseIf Trim(ActiveDocument.Bookmarks("cbER").Range.Text) = "1" Then
            Me.chkERLoanAmount = True
            If Trim(ActiveDocument.Bookmarks("obER").Range.Text) = "0" Then
                Me.optERLessThan = True
            ElseIf Trim(ActiveDocument.Bookmarks("obER").Range.Text) = "1" Then
                Me.optERMoreThan = True
            End If
        End If
        If Trim(ActiveDocument.Bookmarks("cbERInvest").Range.Text) = "0" Then
            Me.chkERNonPLP = False
            Me.chkERNonPLP.enabled = False
        ElseIf Trim(ActiveDocument.Bookmarks("cbERInvest").Range.Text) = "1" Then
            Me.chkERNonPLP = True
            Me.chkERNonPLP.enabled = True
        End If
        If ActiveDocument.Bookmarks("obPLP").Range.Text = 1 Then
            If Me.chkERLoanAmount.Value = True Then
                Me.chkERNonPLP.enabled = True
                Me.chkERNonPLP.Value = IIf(Left(ActiveDocument.Bookmarks("cbERInvest").Range.Text, 1) <> "[", ActiveDocument.Bookmarks("cbERInvest").Range.Text, 0)
            End If
        Else
            Me.chkERNonPLP.Value = False
            Me.chkERNonPLP.enabled = False
        End If
        If Trim(ActiveDocument.Bookmarks("cbBD1").Range.Text) = "0" Then
            Me.chkBOCPurchaseAgreement = False
        ElseIf Trim(ActiveDocument.Bookmarks("cbBD1").Range.Text) = "1" Then
            Me.chkBOCPurchaseAgreement = True
        End If
        If Trim(ActiveDocument.Bookmarks("cbBD1Noncompete").Range.Text) = "0" Then
            Me.chkBOCNonCompete = False
        ElseIf Trim(ActiveDocument.Bookmarks("cbBD1Noncompete").Range.Text) = "1" Then
            Me.chkBOCNonCompete = True
        End If
        If Trim(ActiveDocument.Bookmarks("cbBD3").Range.Text) = "0" Then
            Me.chkBOCBulkSales = False
        ElseIf Trim(ActiveDocument.Bookmarks("cbBD3").Range.Text) = "1" Then
            Me.chkBOCBulkSales = True
        End If
        If Trim(ActiveDocument.Bookmarks("cbBD6").Range.Text) = "0" Then
            Me.chkBOCStockPurchase.Value = False
            Me.txtBOCStockPurchase.enabled = False
        ElseIf Trim(ActiveDocument.Bookmarks("cbBD6").Range.Text) = "1" Then
            Me.chkBOCStockPurchase = True
            Me.txtBOCStockPurchase.Text = IIf(Left(ActiveDocument.Bookmarks("BD6Corp").Range.Text, 1) <> "[", ActiveDocument.Bookmarks("BD6Corp").Range.Text, "")
        End If
        Me.chkERLoanAmount.SetFocus
        UpdateACI3 = 1
    End If
End Sub

Public Sub UpdatepgACI4()
'============ADDITIONAL CONDITIONS I, page 4=============
    If UpdateACI4 = 0 Then
        If Trim(ActiveDocument.Bookmarks("cbRP009").Range.Text) = "0" Then
            Me.chkBOCEvidenceNonCompete = False
        ElseIf Trim(ActiveDocument.Bookmarks("cbRP009").Range.Text) = "1" Then
            Me.chkBOCEvidenceNonCompete = True
        End If
        If Trim(ActiveDocument.Bookmarks("cbRP002").Range.Text) = "0" Then
            Me.chkBOCAdditionalFunding = False
        ElseIf Trim(ActiveDocument.Bookmarks("cbRP002").Range.Text) = "1" Then
            Me.chkBOCAdditionalFunding = True
        End If
        Me.chkBOCEvidenceNonCompete.SetFocus
        UpdateACI4 = 1
    End If
End Sub

Public Sub UpdatepgACI5()
'============ADDITIONAL CONDITIONS I, page 5=============
    If UpdateACI5 = 0 Then
        If Trim(ActiveDocument.Bookmarks("cbFran").Range.Text) = "0" Then
            Me.chkIsAFranchise = False
        ElseIf Trim(ActiveDocument.Bookmarks("cbFran").Range.Text) = "1" Then
            Me.chkIsAFranchise = True
        End If
        If Trim(ActiveDocument.Bookmarks("obOI2").Range.Text) = "0" Then
            Me.optOINone = True
        ElseIf Trim(ActiveDocument.Bookmarks("obOI2").Range.Text) = "1" Then
            Me.optOIGeneralRule = True
        ElseIf Trim(ActiveDocument.Bookmarks("obOI2").Range.Text) = "2" Then
            Me.optOILessThanTerm = True
        ElseIf Trim(ActiveDocument.Bookmarks("obOI2").Range.Text) = "3" Then
            Me.optOILeasehold = True
            Me.txtOITermPlusYears = Trim(ActiveDocument.Bookmarks("OI2CYears").Range.Text)
        ElseIf Trim(ActiveDocument.Bookmarks("obOI2").Range.Text) = "4" Then
            Me.optOIPresentLocation = True
        End If
        If Trim(ActiveDocument.Bookmarks("cbOI3A").Range.Text) = "0" Then
            Me.chkOIBooksRecords = False
        ElseIf Trim(ActiveDocument.Bookmarks("cbOI3A").Range.Text) = "1" Then
            Me.chkOIBooksRecords = True
        End If
        If Trim(ActiveDocument.Bookmarks("cbOI3B").Range.Text) = "0" Then
            Me.chkOILoanDefault = False
        ElseIf Trim(ActiveDocument.Bookmarks("cbOI3B").Range.Text) = "1" Then
            Me.chkOILoanDefault = True
            If Trim(ActiveDocument.Bookmarks("cbOI3BMonths").Range.Text) = "0" Then
                Me.chkOIDefaultMonths = False
            ElseIf Trim(ActiveDocument.Bookmarks("cbOI3BMonths").Range.Text) = "1" Then
                Me.chkOIDefaultMonths = True
                Me.txtOIDefaultMonths = Trim(ActiveDocument.Bookmarks("OI3BMonths").Range.Text)
            End If
        End If
        If Trim(ActiveDocument.Bookmarks("cbOI3C").Range.Text) = "0" Then
            Me.chkOITerminate = False
        ElseIf Trim(ActiveDocument.Bookmarks("cbOI3C").Range.Text) = "1" Then
            Me.chkOITerminate = True
        End If
        If Trim(ActiveDocument.Bookmarks("cbOI3D").Range.Text) = "0" Then
            Me.chkOICureDefaults = False
        ElseIf Trim(ActiveDocument.Bookmarks("cbOI3D").Range.Text) = "1" Then
            Me.chkOICureDefaults = True
        End If
        Me.optOINone.SetFocus
        UpdateACI5 = 1
    End If
End Sub

Public Sub UpdatepgACII1()
'============ADDITIONAL CONDITIONS II, page 1==============
    If UpdateACII1 = 0 Then
        If Trim(ActiveDocument.Bookmarks("cbIN1").Range.Text) = "0" Then
            Me.chkAC2Cash = False
        ElseIf Trim(ActiveDocument.Bookmarks("cbIN1").Range.Text) = "1" Then
            Me.chkAC2Cash = True
            Me.txtAC2CashAmount = Trim(ActiveDocument.Bookmarks("IN1Amount").Range.Text)
            Me.txtAC2Cash = Trim(ActiveDocument.Bookmarks("IN1Purpose").Range.Text)
            Me.txtAC2CashSource = Trim(ActiveDocument.Bookmarks("IN1Source").Range.Text)
        End If
        If Trim(ActiveDocument.Bookmarks("cbIN2").Range.Text) = "0" Then
            Me.chkAC2Standby = False
        ElseIf Trim(ActiveDocument.Bookmarks("cbIN2").Range.Text) = "1" Then
            Me.chkAC2Standby = True
            Me.txtAC2StandbyAmount = Trim(ActiveDocument.Bookmarks("IN2Amount").Range.Text)
            Me.txtAC2Standby = Trim(ActiveDocument.Bookmarks("IN2Purpose").Range.Text)
        End If
        ' If Trim(ActiveDocument.Bookmarks("cbIN4").Range.Text) = "0" Then                      ' Removed July 3, 2018 RH
        '  Me.chkAC2Equity = False  ' Removed July 3, 2018 RH
        ' ElseIf Trim(ActiveDocument.Bookmarks("cbIN4").Range.Text) = "1" Then                  ' Removed July 3, 2018 RH
        '    Me.chkAC2Equity = True ' Removed July 3, 2018 RH
        '    Me.txtAC2EquityAmount = Trim(ActiveDocument.Bookmarks("IN4Amount").Range.Text)     ' Removed July 3, 2018 RH
        '    Me.txtAC2Equity = Trim(ActiveDocument.Bookmarks("IN4Purpose").Range.Text)          ' Removed July 3, 2018 RH
        ' End If                                                                                ' Removed July 3, 2018 RH
        If Trim(ActiveDocument.Bookmarks("cbIN3").Range.Text) = "0" Then
            Me.chkAC2Asset = False
        ElseIf Trim(ActiveDocument.Bookmarks("cbIN3").Range.Text) = "1" Then
            Me.chkAC2Asset = True
            Me.txtAC2AssetAmount = Trim(ActiveDocument.Bookmarks("IN3Amount").Range.Text)
            Me.txtAC2Assets = Trim(ActiveDocument.Bookmarks("IN3Purpose").Range.Text)
        End If
        ' If Trim(ActiveDocument.Bookmarks("cbIN5").Range.Text) = "0" Then                      ' Removed July 3, 2018 RH
        '     Me.chkAC2Borrower = False                                                         ' Removed July 3, 2018 RH
        ' ElseIf Trim(ActiveDocument.Bookmarks("cbIN5").Range.Text) = "1" Then                  ' Removed July 3, 2018 RH
        '     Me.chkAC2Borrower = True                                                          ' Removed July 3, 2018 RH
        '    Me.txtAC2BorrowerAmount = Trim(ActiveDocument.Bookmarks("IN5Amount").Range.Text)   ' Removed July 3, 2018 RH
            'Me.txtAC2Assets = Trim(ActiveDocument.Bookmarks("IN3Purpose").Range.Text)
        'End If
        UpdateACII1 = 1
    End If
End Sub

Public Sub UpdatepgACII2()
'============ADDITIONAL CONDITIONS II, page 2=============
    If UpdateACII2 = 0 Then
        If Trim(ActiveDocument.Bookmarks("cbRP005").Range.Text) = "0" Then
            Me.chkAC2StandbyAgreement.Value = False
            Me.cmdAC2DeleteSA.enabled = False
        ElseIf Trim(ActiveDocument.Bookmarks("cbRP005").Range.Text) = "1" Then
            Me.chkAC2StandbyAgreement.Value = True
            Me.cmdAC2DeleteSA.enabled = False
        End If
        If Me.chkAC2StandbyAgreement.Value = True Then
            CurIdx = Val(Trim(ActiveDocument.Bookmarks("RPCur005").Range.Text))
            Me.txtAC2SAName.Text = IIf(Left(ActiveDocument.Bookmarks("SAName_" & CurIdx).Range.Text, 1) <> "[", ActiveDocument.Bookmarks("SAName_" & CurIdx).Range.Text, "")
            Me.txtAC2SAAmount.Text = IIf(Left(ActiveDocument.Bookmarks("SAAmount_" & CurIdx).Range.Text, 1) <> "[", ActiveDocument.Bookmarks("SAAmount_" & CurIdx).Range.Text, "")
            Me.txtAC2SARate.Text = IIf(Left(ActiveDocument.Bookmarks("SARate_" & CurIdx).Range.Text, 1) <> "[", ActiveDocument.Bookmarks("SARate_" & CurIdx).Range.Text, "")
            Me.txtAC2SAPayments.Text = IIf(Left(ActiveDocument.Bookmarks("SAPayments_" & CurIdx).Range.Text, 1) <> "[", ActiveDocument.Bookmarks("SAPayments_" & CurIdx).Range.Text, "")
            Me.txtAC2SABeginDate.Text = IIf(Left(ActiveDocument.Bookmarks("SABeginDate_" & CurIdx).Range.Text, 1) <> "[", ActiveDocument.Bookmarks("SABeginDate_" & CurIdx).Range.Text, "")
            Me.txtAC2SAWyoA.Text = IIf(Left(ActiveDocument.Bookmarks("SAWyoA_" & CurIdx).Range.Text, 1) <> "[", ActiveDocument.Bookmarks("SAWyoA_" & CurIdx).Range.Text, "")
            Me.txtAC2obSA.Text = IIf(Left(ActiveDocument.Bookmarks("obSA_" & CurIdx).Range.Text, 1) <> "[", Val(ActiveDocument.Bookmarks("obSA_" & CurIdx).Range.Text), "")
        End If
        UpdateChangeRP 5, 5, "AC2", "RPFirst005", "RPLast005"
        ValRP006 = IIf(Left(ActiveDocument.Bookmarks("cbRP006").Range.Text, 1) <> "[", ActiveDocument.Bookmarks("cbRP006").Range.Text, 0)
        If ValRP006 = "0" Then
            Me.chkAC2Appraisal.Value = False
            Me.cmdAC2DeleteAppr.enabled = False
        ElseIf Trim(ActiveDocument.Bookmarks("cbRP006").Range.Text) = "1" Then
            Me.chkAC2Appraisal.Value = True
            Me.cmdAC2DeleteAppr.enabled = False
        End If
        If Me.chkAC2Appraisal.Value = True Then
            CurIdx = Val(Trim(ActiveDocument.Bookmarks("RPCur006").Range.Text))
            Me.txtAC2APLocation.Text = IIf(Left(ActiveDocument.Bookmarks("APLocation_" & CurIdx).Range.Text, 1) <> "[", ActiveDocument.Bookmarks("APLocation_" & CurIdx).Range.Text, "")
            Me.txtAC2APMake.Text = IIf(Left(ActiveDocument.Bookmarks("APMake_" & CurIdx).Range.Text, 1) <> "[", ActiveDocument.Bookmarks("APMake_" & CurIdx).Range.Text, "")
            Me.txtAC2APModel.Text = IIf(Left(ActiveDocument.Bookmarks("APModel_" & CurIdx).Range.Text, 1) <> "[", ActiveDocument.Bookmarks("APModel_" & CurIdx).Range.Text, "")
            Me.txtAC2APAmount.Text = IIf(Left(ActiveDocument.Bookmarks("APAmount_" & CurIdx).Range.Text, 1) <> "[", ActiveDocument.Bookmarks("APAmount_" & CurIdx).Range.Text, "")
            Me.txtAC2APYear.Text = IIf(Left(ActiveDocument.Bookmarks("APYear_" & CurIdx).Range.Text, 1) <> "[", ActiveDocument.Bookmarks("APYear_" & CurIdx).Range.Text, "")
            CurOpt = IIf(Left(ActiveDocument.Bookmarks("obAP_" & CurIdx).Range.Text, 1) <> "[", Val(ActiveDocument.Bookmarks("obAP_" & CurIdx).Range.Text), "")
            If CurOpt = 0 Then
                Me.optAC2RealEstate.Value = 1
                Me.txtAC2obAP.Text = "0"
            ElseIf CurOpt = 1 Then
                Me.optAC2Equipment.Value = 1
                Me.txtAC2obAP.Text = "1"
            ElseIf CurOpt = 2 Then
                Me.optAC2Marine.Value = 1
                Me.txtAC2obAP.Text = "2"
            ElseIf CurOpt = 3 Then
                Me.optAC2Aircraft.Value = 1
                Me.txtAC2obAP.Text = "3"
            End If
        End If
        UpdateChangeRP 6, 6, "AC2", "RPFirst006", "RPLast006"
        ''Added 6/28/2010 Business Valuation
        If Trim(ActiveDocument.Bookmarks("chkBVCheck").Range.Text) = "0" Then
            Me.chkAC2BVCheck.Value = False
        Else
            Me.chkAC2BVCheck.Value = True
            Me.txtAC2BVName.Text = IIf(Left(ActiveDocument.Bookmarks("BVName").Range.Text, 1) <> "[", ActiveDocument.Bookmarks("BVName").Range.Text, "")
            Me.txtAC2BVAmount.Text = IIf(Left(ActiveDocument.Bookmarks("BVAmount").Range.Text, 1) <> "[", ActiveDocument.Bookmarks("BVAmount").Range.Text, "")
            
        End If

        ''=====
        UpdateACII2 = 1
    End If
End Sub

Public Sub UpdatepgACII3()
'============ADDITIONAL CONDITIONS II, page 3=============
    If UpdateACII3 = 0 Then
        Dim XText As String
        Dim NCPct As Integer
        Me.chkIMNonCitizen.Value = Val(Trim(ActiveDocument.Bookmarks("chkIMNonCitizen").Range.Text))
        If Me.chkIMNonCitizen.Value = True Then
            CurIdx = Val(Trim(ActiveDocument.Bookmarks("RPCur011").Range.Text))
            Me.txtNonCitizen.Text = IIf(Left(ActiveDocument.Bookmarks("NonCitizen_" & CurIdx).Range.Text, 1) <> "[", ActiveDocument.Bookmarks("NonCitizen_" & CurIdx).Range.Text, "")
'            NCPct = IIf(Left(ActiveDocument.Bookmarks("optAC50Pct_" & CurIdx).Range.Text, 1) <> "[", ActiveDocument.Bookmarks("optAC50Pct_" & CurIdx).Range.Text, 0)
'            If NCPct = 0 Then
'                Me.optAC50Pct.Value = 0
'                Me.optAC20Pct.Value = 1
'            Else
'                Me.optAC50Pct.Value = 1
'                Me.optAC20Pct.Value = 0
'            End If
        End If
        UpdateChangeRP 9, 11, "AC3", "RPFirst011", "RPLast011"
        
        Me.cbxCALienPosition.AddItem "First"
        Me.cbxCALienPosition.AddItem "Shared"
        Me.cbxCALienPosition.AddItem "Second"
        cbxCABooksRecords_Enter
'        If Trim(ActiveDocument.Bookmarks("cbCAPiggyBack").Range.text) = "0" Then
        If Trim(ActiveDocument.Bookmarks("cbPariPassu").Range.Text) = "0" Then
            Me.chkCAPiggyback = False
        ElseIf Trim(ActiveDocument.Bookmarks("cbPariPassu").Range.Text) = "1" Then
            Me.chkCAPiggyback = True
    '5/20/05
    '          Me.txtCALenderName = Trim(ActiveDocument.Bookmarks("PiggyBackLender").Range.Text)
            Me.txtCALenderName = Trim(ActiveDocument.Bookmarks("PariPassuLender").Range.Text)
            Me.txtCAPPAmount = Trim(ActiveDocument.Bookmarks("PariPassuAmount").Range.Text)
    '------------
            Me.txtCACommLoanAmount.Text = Trim(ActiveDocument.Bookmarks("txtCACommLoanAmount").Range.Text)
            Me.txtCACommMonths.Text = Trim(ActiveDocument.Bookmarks("txtCACommMonths").Range.Text)
            Me.txtCACommYears.Text = Trim(ActiveDocument.Bookmarks("txtCACommYears").Range.Text)
            Me.txtCACommRate.Text = Trim(ActiveDocument.Bookmarks("txtCACommRate").Range.Text)
            XText = Trim(ActiveDocument.Bookmarks("cbxCALienPosition").Range.Text)
            If XText = "First" Then
                Me.cbxCALienPosition.Text = "First"
            Else
                Me.cbxCALienPosition.Text = XText
            End If
        End If
        ''Added 6/28/2010 Credit Card
'        If Trim(ActiveDocument.Bookmarks("chkAC2CreditCard").Range.text) = "0" Then
        If Trim(ActiveDocument.Bookmarks("chkCACreditCard").Range.Text) = "0" Then
            Me.chkAC2CreditCard.Value = False
        Else
            Me.chkAC2CreditCard.Value = True
        End If
        If Trim(ActiveDocument.Bookmarks("cbCA1").Range.Text) = "0" Then
            Me.chkCACommercial = False
        ElseIf Trim(ActiveDocument.Bookmarks("cbCA1").Range.Text) = "1" Then
            Me.chkCACommercial = True
    '         Me.txtCALocation = Trim(ActiveDocument.Bookmarks("CALocation").Range.Text)
        End If
        Me.cbxCABooksRecords = Trim(ActiveDocument.Bookmarks("CAStatement").Range.Text)
        Me.txtCAFurnishDays = Trim(ActiveDocument.Bookmarks("CADays").Range.Text)
        If Trim(ActiveDocument.Bookmarks("cbCA2A").Range.Text) = "0" Then
            Me.chkCARenovation = False
        ElseIf Trim(ActiveDocument.Bookmarks("cbCA2A").Range.Text) = "1" Then
            Me.chkCARenovation = True
        End If
        If Trim(ActiveDocument.Bookmarks("cbCA2B").Range.Text) = "0" Then
            Me.chkCANew = False
        ElseIf Trim(ActiveDocument.Bookmarks("cbCA2B").Range.Text) = "1" Then
            Me.chkCANew = True
        End If
        If Trim(ActiveDocument.Bookmarks("cbCA3A").Range.Text) = "0" Then
            Me.chkCAFixedAsset = False
        ElseIf Trim(ActiveDocument.Bookmarks("cbCA3A").Range.Text) = "1" Then
            Me.chkCAFixedAsset = True
            Me.txtCAFixedAmount = Trim(ActiveDocument.Bookmarks("CAAsset").Range.Text)
        End If
        If Trim(ActiveDocument.Bookmarks("cbCA3B").Range.Text) = "0" Then
            Me.chkCALocationLimit = False
        ElseIf Trim(ActiveDocument.Bookmarks("cbCA3B").Range.Text) = "1" Then
            Me.chkCALocationLimit = True
        End If
        If Trim(ActiveDocument.Bookmarks("cbCA3C").Range.Text) = "0" Then
            Me.chkCACompensation = False
        ElseIf Trim(ActiveDocument.Bookmarks("cbCA3C").Range.Text) = "1" Then
            Me.chkCACompensation = True
            Me.txtCACompensation = Trim(ActiveDocument.Bookmarks("CARemuneration").Range.Text)
        End If
        UpdateACII3 = 1
    End If
End Sub


Public Sub UpdateCCOptions()
    BackupRP
    'CCMaster indicates a security was chosen ... but doesn't appear until later
    If CCMaster = "GroupC29" Or CCMaster = "GroupC18" Then
    'If Finish was clicked, and no further security items, should place temp into doc, which means InsertSecured
        If Me.cbxCCB.ListIndex <= 0 And Me.cbxCCC.ListIndex <= 0 And Me.cbxCCD.ListIndex <= 0 And Me.cbxCCE.ListIndex <= 0 Then
            CCFinished = True
            CCExit = True
            GuaranteeSecured = False
            CCFirstTime = False
            txtCCName = LastCCName
            IsASecurity = False
        Else
            CurTab = "pgCC1"
            CCSelected = False
        End If
    End If
    If CCFinished = True And CCExit = True Then
        GoTo InsertSecured
    Else
        CCFinished = False
    End If
    Application.ScreenUpdating = False
    If CCid = 0 Then
        txtCCName = "'Write your own'"
        MyGroup = "GroupC0"
        MyInclude = "IncludeC0"
    ElseIf CCid = 290 Then
        txtCCName = "Full Unsecured Guarantee"
    ElseIf CCid = 291 Then
        txtCCName = "Full Secured Guarantee"
    ElseIf CCid = 292 Then
        txtCCName = "Limited Unsecured Guarantee"
    ElseIf CCid = 293 Then
        txtCCName = "Limited Secured Guarantee"
    ElseIf CCid <> 0 And CCid < 290 And GuaranteeSecured = False Then
        CCExit = False
        LastCCName = txtCCName
    End If
    'We've chosen our condition, now clear CCA, CCB, CCC, and CCD
    Me.mpgCCOptions.Value = 0
    Me.mpgWizard.Value = 8

    If CCid < 290 Then
    Else
        ResetCollateral
    End If
    'Setup evidence for future dialogs ??????
    For i = 1 To 8
        ev__(i) = -9
        If Me.cbxCC_C1EV.Text = Evidence__(i) Then
            ev__(i) = Me.cbxCC_C1EV.ListIndex
        End If
    Next
    Me.prgPleaseWait.Width = 0
    'Setup dialog so buttons are disabled ... what about CANCEL?
    PageSetup 99

    Me.lblCCProcessing.visible = True
    Me.lblCCProcessing.Caption = "      Processing " + txtCCName + "." & vbCr & vbCr & _
                                 "                          Please Wait!!!"

    DuplicateGroups
    UpdateDocCCFields CCid
    HideShowCCPara CCid

'290 Unsecured
'291 Unsecured
'292 Limited Unsecured
'293 Limited Secured
    If CCid = 290 Or CCid = 292 Then
        MyGroup = "GroupC29"
        If CCid = 290 Then
            MyInclude = "IncludeC29"
        ElseIf CCid = 292 Then ' Limited
            MyInclude = "IncludeC30"
        End If
        CCMaster = ""
        LastCCName = txtCCName
        CCFirstTime = True
        InsertGroup MyGroup, MyInclude, 1
        CCMaster = ""
        CCExit = False
        GoTo ResetCC
    ElseIf CCid = 291 Or CCid = 293 Or CCid = 18 Then
        LastCCName = txtCCName
    End If

InsertSecured:
    If CCid >= 0 Then
        If CCMaster = "GroupC29" And IsASecurity = True Then   'This is the first run through
            CCFirstTime = False
            CCSecuredBy "GroupC" & Trim(Str(CCid))
            GoTo ResetCC
        ElseIf CCMaster = "GroupC18" And IsASecurity = True Then   'This is the first run through
            CCFirstTime = False
            CCSecuredBy "GroupC" & Trim(Str(CCid))
            GoTo ResetCC
        ElseIf CCMaster = "GroupC29" And IsASecurity = False Then
            CCSecuredBy "GroupC29"
            GoTo ResetCC
        ElseIf CCMaster = "GroupC18" And IsASecurity = False Then
            CCSecuredBy "GroupC18"
            GoTo ResetCC
        Else
            If CCid = 1 Or CCid = 4 Then
                MyGroup = "GroupC1"
                MyInclude = "IncludeC" + Trim(Str(CCid))
                InsertGroup MyGroup, MyInclude, 1
                GoTo ResetCC
            ElseIf CCid = 2 Then
                MyGroup = "GroupC2"
                MyInclude = "IncludeC" + Trim(Str(CCid))
                InsertGroup MyGroup, MyInclude, 1
            ElseIf CCid = 291 And CCFinished = True Or CCid = 293 And CCFinished = True Then
    'This part should be run only AFTER all CC Security Selected
                MyGroup = "GroupC29"
    'Set CCMaster for Second and subsequent passes
                CCMaster = "GroupC29"
                MyInclude = "IncludeC29"
                LastCCName = txtCCName
    'CCFirstTime means we can put up Security Message
                CCFirstTime = True
                CCSecuredBy MyGroup
                GoTo ResetCC
            ElseIf CCid = 18 And Me.chkCCNoteSecured.Value = False Then
                MyGroup = "GroupC18"
                MyInclude = "IncludeC18"
                InsertGroup MyGroup, MyInclude, 1
            ElseIf CCid = 18 And Me.chkCCNoteSecured.Value = True Then
                CCMaster = "GroupC18"
                MyInclude = "IncludeC18"
                LastCCName = txtCCName
    'CCFirstTime means we can put up Security Message
                CCFirstTime = True
                CCSecuredBy MyGroup
                GoTo ResetCC
            ElseIf CCid < 290 And GuaranteeSecured = False Then
                MyGroup = "GroupC" + Trim(Str(CCid))
                MyInclude = "IncludeC" + Trim(Str(CCid))
                InsertGroup MyGroup, MyInclude, 1
                GoTo ResetCC
            ElseIf CCid > 290 Then
                CCMaster = "GroupC29"
                MyInclude = "IncludeC30"
            End If
        End If
    End If
    CCFirstTime = True
    CCExit = False

    'Return to Collateral Conditions
ResetCC:
    UpdateField "LastUpdate_CC", "Last created " + WizLib.LUText, -1

    ResetCollateral
    ResetLienholders CCid
    PageSetup 0, 1

    Me.cmdWizardShortCut.visible = True
    Me.lblCCProcessing.visible = False
    Me.prgPleaseWait.visible = False
    Me.cmdCancel.visible = False
    Me.lblCCNoteSecured.visible = True
CCMessage:
    If CCid = 0 Then
        LastCCName = txtCCName
    End If
    If CCExit = False Then
        If CCid = 290 Or CCid = 292 Or CCid < 290 And GuaranteeSecured = False Then
            PageSetup 95
            Me.cmdWizardShortCut.visible = True
            Me.lblCCNoteSecured.Caption = "The '" & LastCCName & "' condition has been placed in your document." & vbCr & vbCr & _
                                          "Select additional Collateral Condition options above to continue." & vbCr & vbCr & _
                                          "Click 'Finish' to exit to the document or 'Navigator' to exit the Collateral Condition Section. "
            CCid = -1
            CCExit = True
            Me.cmdWizardShortCut.visible = True
            Exit Sub
        Else
            If CCFirstTime = True And GuaranteeSecured = True Then
                SecurityMsg
                Me.cmdWizardShortCut.visible = False
                Me.cmdback.enabled = False
                Me.cmdFirst.enabled = False
                Me.cmdNext.enabled = False
                Me.cmdFinish.enabled = False
                Me.cmdCancel.visible = True
                Me.cmdCancel.enabled = True
                Me.lblCCNoteSecured.Caption = "An additional security for the " & LastCCName & " is required." & vbCr & vbCr & "Select an additional security option above to continue."
                Me.lblCCNoteSecured.visible = True
            ElseIf CCFirstTime = False And GuaranteeSecured = True Then
                SecurityMsg
                PageSetup 95
                Me.cmdWizardShortCut.visible = False
                Me.lblCCNoteSecured.Caption = "Click 'Finish' to update the currently processing '" & LastCCName & "'" & vbCr & _
                                              "and return to the main Collateral Condition Section." & vbCr & vbCr & _
                                              "      Select an additional security above to continue."
            End If
        End If
    Else
HideCC:
        PageSetup 95
        Me.cmdWizardShortCut.visible = True
        If GuaranteeSecured = False Then
           Me.txtCCSelectMsg.visible = True
'           Me.optCCGuaranteesOnly.visible = True
           NoteSecured = False
            ResetCollateral
            MsgBox "This Collateral Condition [" + txtCCName + "]      " & vbCrLf & _
                   "was successfully inserted into your document.    " & vbCrLf & vbCrLf & _
                   "If you wish to exit the Collateral Condition section,    " & vbCrLf & _
                   "click 'Finish' or 'Navigator' at the next panel, the Collateral Condition Panel.", _
                   vbInformation + vbOKOnly, _
                   "Collateral Condition"
        End If
        Me.cmdWizardShortCut.visible = True
        Me.lblCCNoteSecured.visible = True
        Me.lblCCNoteSecured.Caption = "Select additional Collateral Condition options above to continue." & vbCr & vbCr & "Click 'Finish' to exit to the document or 'Navigator' to exit the Collateral Condition Section."
    End If
RestartCC:
End Sub
Public Sub CCSecuredBy(Master)
    If CCFinished = True And CCExit = True Then
        If Master = "GroupC29" Then
            If optSecured = 0 Or optSecured = 2 Then
                MyInclude = "IncludeC29"  'Full Guaranty -- Form 148 -- C29
                MyGroup = "GroupC29"
            Else
                If CurCCid = 290 Or CurCCid = 291 Then
                    MyInclude = "IncludeC29"  'Full Secured -- Form 148
                ElseIf CurCCid = 292 Or CurCCid = 293 Then
                    MyInclude = "IncludeC30"  'Limited Guaranty -- Form 148L -- C30
                End If
                MyGroup = "GroupC29"
            End If
        ElseIf Master = "GroupC18" Then
            MyInclude = "IncludeC18"  'Limited Guaranty -- Form 148L
            MyGroup = "GroupC18"
        End If
        InsertGroup MyGroup, MyInclude, 1 'Inserts text into bookmark IncludeC29 or IncludeC30
        If MyGroup = "GroupC29" Then
            ActiveDocument.Bookmarks("IncludeC29_SecuredBy").Range.Select
            If Len(Selection.Range.Text) > Len("IncludeC29_SecuredBy") Then
                Selection.HomeKey Unit:=wdLine, Extend:=wdExtend
                Selection.Delete Unit:=wdCharacter, Count:=1
                Selection.EndKey Unit:=wdLine, Extend:=wdExtend
                Selection.MoveLeft Unit:=wdCharacter, Count:=1, Extend:=wdExtend
                With ActiveDocument.Bookmarks
                    .Add Range:=Selection.Range, Name:="IncludeC29_SecuredBy"
                End With
            End If
        ElseIf MyGroup = "GroupC18" Then
            ActiveDocument.Bookmarks("IncludeC18_SecuredBy").Range.Select
            If Len(Selection.Range.Text) > Len("IncludeC18_SecuredBy") Then
                Selection.HomeKey Unit:=wdLine, Extend:=wdExtend
                Selection.Delete Unit:=wdCharacter, Count:=1
                Selection.EndKey Unit:=wdLine, Extend:=wdExtend
                Selection.MoveLeft Unit:=wdCharacter, Count:=1, Extend:=wdExtend
                With ActiveDocument.Bookmarks
                    .Add Range:=Selection.Range, Name:="IncludeC18_SecuredBy"
                End With
            End If
        End If
        MyInclude = ""
        MyGroup = ""
        CCMaster = ""
        CCFinished = False
        CCExit = True
        CCFirstTime = False
        ResetCollateral
        Exit Sub
    ElseIf CCFirstTime = False Then
        If Me.chkCCNoteSecured.Value = False Then
            MyInclude = "IncludeC29_SecuredBy"  'Insert security selections
            MyGroup = "GroupC" & Trim(Str(CCid))
            CCClosing
        Else
            MyInclude = "IncludeC18_SecuredBy"  'Insert security selections
            MyGroup = "GroupC" & Trim(Str(CCid))
        End If
        CCFirstTime = False
        If CCid = 1 Or CCid = 4 Then
            MyGroup = "GroupC1"
        End If
        InsertGroup MyGroup, MyInclude, 2
        CCClosing
    ElseIf CCid = 290 Or CCid = 291 Or CCid = 292 Then
'        If CCid = 290 Then
'            MyInclude = "IncludeC29"
'        ElseIf CCid = 292 Then
'            MyInclude = "IncludeC30"
'        End If
        MyGroup = "GroupC29"
        MyInclude = "IncludeC29"
        InsertGroup MyGroup, MyInclude, 1
        CCClosing
        Exit Sub
    End If
    GoTo CCMessage
    CleanDuplicateGroups
CCMessage:
    Call SecurityMsg
    If CCFirstTime = True Then
        Me.cmdCancel.enabled = True
        If MsgBox("This Collateral Condition [" + txtCCName + "]" & vbCrLf & _
                  "requires a security." & vbCrLf & _
                  "Select an additional security as indicated above.     ", _
                  vbInformation + vbOKOnly, _
                  "Collateral Condition") = vbOK Then
            LastCCName = txtCCName
        Else
    'Discard last entry
        End If
    ElseIf CCFirstTime = False Then
EndLimited:
        Me.cmdCancel.enabled = True
        Me.cmdWizardShortCut.visible = True
        MsgBox "This Collateral Condition [" + txtCCName + "]      " & vbCrLf & _
               "has been placed as a security for the " & LastCCName & "." & vbCrLf & vbCrLf & _
               "Select an additional security as indicated above, if necessary.    " & vbCrLf & vbCrLf & _
               "If you wish to exit the Collateral Condition section,    " & vbCrLf & _
               "click 'Finish' at the next panel, the Collateral Condition Panel.     ", _
               vbInformation + vbOKOnly, _
               "Collateral Condition"
        Me.cmdWizardShortCut.visible = True
        IsASecurity = False
    End If
End Sub

Private Sub UserForm_QueryClose(Cancel As Integer, CloseMode As Integer)
    curPageName = Me.mpgWizard.Pages(Me.mpgWizard.Value).Name
    If InStr(1, curPageName, "pgLI") > 0 Then
        GotoLI.Main
        ActiveDocument.Bookmarks("LastUpdate_LI").Select
        Selection.HomeKey
    ElseIf InStr(1, curPageName, "pgRT") > 0 Then
        GotoNT.Main
        ActiveDocument.Bookmarks("LastUpdate_RT").Select
        Selection.HomeKey
    ElseIf InStr(1, curPageName, "pgUP") > 0 Then
        GotoUP.Main
        ActiveDocument.Bookmarks("LastUpdate_UP").Select
        Selection.HomeKey
    ElseIf InStr(1, curPageName, "pgCC") > 0 Then
        GotoCC.Main
        ActiveDocument.Bookmarks("LastUpdate_CC").Select
        Selection.HomeKey
    ElseIf InStr(1, curPageName, "pgACII") > 0 Then
        GotoAC2.Main
        ActiveDocument.Bookmarks("LastUpdate_AC2").Select
        Selection.HomeKey
    ElseIf InStr(1, curPageName, "pgACI") > 0 Then
        GotoAC1.Main
        ActiveDocument.Bookmarks("LastUpdate_AC1").Select
        Selection.HomeKey
    End If
End Sub

Public Sub XMLRunWiz()
    XMLLoaded = ActiveDocument.Bookmarks("XMLLoaded").Range.Text
    If XMLLoaded = True Then
        Me.mpgWizard.Value = 25
        'Loan Information
        Application.ScreenUpdating = False
        Me.mpgWizard.Value = 0
        Me.mpgWizard.Value = 1
        Me.mpgWizard.Value = 2
        UpdateField "Complete_LI", "1", -1
        cmdFinish_Click
        'Repayment Terms
        Application.ScreenUpdating = False
        cmdWizardRepayment_Click
        Me.mpgWizard.Value = 3
        Me.mpgWizard.Value = 4
        Me.mpgWizard.Value = 5
        Me.mpgWizard.Value = 6
        UpdateField "Complete_RT", "1", -1
        cmdFinish_Click
        'Use of Proceeds
        Application.ScreenUpdating = False
        cmdWizardUseProceeds_Click
        If Me.cmdUPRight.enabled = True Then
            cmdUPRight_Click
        End If
        UpdateField "Complete_UP", "1", -1
        cmdFinish_Click
        'Collateral Conditions
        'Separate Code
        'Additional Conditions I
        Application.ScreenUpdating = False
        cmdWizardAC1_Click
        Me.mpgWizard.Value = 17
        Me.mpgWizard.Value = 18
        Me.mpgWizard.Value = 19
        Me.mpgWizard.Value = 20
        Me.mpgWizard.Value = 21
        UpdateField "Complete_AC1", "1", -1
        cmdFinish_Click
        'Additional Conditions II
        Application.ScreenUpdating = False
        cmdWizardAC2_Click
        Me.mpgWizard.Value = 22
        Me.mpgWizard.Value = 23
        Me.mpgWizard.Value = 24
        UpdateField "Complete_AC2", "1", -1
        cmdFinish_Click
        cmdCancel_Click
        Selection.HomeKey Unit:=wdStory
    End If
End Sub
Attribute VB_Name = "frmPleaseWait"
Attribute VB_Base = "0{B8504106-7E3C-434D-8063-4471F56328EE}{E3BD68B0-569E-4F6A-896B-151E56B051AF}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False


Option Explicit

Private Sub UserForm_Activate()
  frmPleaseWait.Repaint
  Dim z As Long
  For z = 1 To 30000
    DoEvents
  Next z
  Application.ScreenRefresh
  Me.lblWaitActivity.Caption = "Thank you ..."
  Unload frmPleaseWait
End Sub
Attribute VB_Name = "frmPopWiz"
Attribute VB_Base = "0{A530E920-6CBC-4D2E-8CD7-766B50C024A4}{A0A325B5-17A8-484D-A865-D5AC15BA3FCE}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False








Private Sub CommandButton1_Click()
If IsNumeric(LoanId.Text) Then
   ImportData LoanId.Text
   MsgBox "Finished Populating Wizard!", vbInformation
   Unload Me
Else
  MsgBox ("Invalid LoanId")
End If
End Sub

Private Sub CommandButton2_Click()
Unload Me
End Sub
Attribute VB_Name = "frmWizardStatus"
Attribute VB_Base = "0{CBE3CADC-2EAE-491C-9AAA-86C41724959F}{066B2A0D-6683-4A05-A6E6-9C9924F4CBB3}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Dim ConvertStatus As Boolean
Private Sub cmdWSCancel_Click()
  Me.Tag = False
  Me.hide
End Sub

Private Sub cmdWSContinue_Click()
  Me.Tag = True
  Me.hide
End Sub

Private Sub UserForm_Activate()
Dim i
Dim CCLength
Dim retVal
Dim dlg As Object
ReDim myStatus__(8)

'Added 9/11/2006 to allow use in Word 2003
  On Error Resume Next
  If ActiveDocument.ProtectionType <> wdNoProtection Then
    ActiveDocument.Unprotect "snad7623"
  End If
'If ActiveDocument.ProtectionType <> wdNoProtection Then
'    ActiveDocument.Unprotect
'End If

Me.Caption = WizName + " Wizard Diagnostics"
Me.Height = 140
Me.lblBottomHR.Top = 57
Me.lblWSSure.Top = 62
Me.cmdWSCancel.Top = 80
Me.cmdWSContinue.Top = 80
i = 1
If Val(ActiveDocument.Bookmarks("Complete_LI").Range.Text) = 0 Then
  myStatus__(i) = "-- The Loan Information section has not been updated."
  i = i + 1
ElseIf Val(ActiveDocument.Bookmarks("cbPrequal").Range.Text) = 0 Then
  If Len(ActiveDocument.Bookmarks("LoanNumber").Range.Text) = 0 Or _
    ActiveDocument.Bookmarks("LoanNumber") = "____________________" Or _
    Len(ActiveDocument.Bookmarks("ApprovalDate")) = 0 Or _
    ActiveDocument.Bookmarks("ApprovalDate").Range.Text = "____________________" Or _
    Len(ActiveDocument.Bookmarks("RequestDate")) = 0 Or _
    ActiveDocument.Bookmarks("RequestDate").Range.Text = "____________________" Then
  myStatus__(i) = "-- Loan Information -- One or more of the following items are missing:"
  i = i + 1
  myStatus__(i) = "    --> Loan Number, Approval Date, Accepted Date. <--"
  i = i + 1
  End If
End If
If Val(ActiveDocument.Bookmarks("Complete_RT").Range.Text) = 0 Then
  myStatus__(i) = "-- The Repayment Terms section has not been updated."
i = i + 1
End If
If Val(ActiveDocument.Bookmarks("Complete_UP").Range.Text) = 0 Then
  myStatus__(i) = "-- The Use of Proceeds section has not been updated."
  i = i + 1
Else
  If Val(ActiveDocument.Bookmarks("LoanAmount").Range.Text) <> _
    Val(ActiveDocument.Bookmarks("TotalUP").Range.Text) Then
  myStatus__(i) = "-- Use of Proceeds -- Total use of proceeds does not equal loan amount."
  i = i + 1
End If
End If
On Error Resume Next
CCLength = Len(ActiveDocument.Bookmarks("CCAll").Range.Text)
On Error GoTo -1: On Error GoTo 0
If Val(ActiveDocument.Bookmarks("cbNoCC").Range.Text) = 0 And CCLength = 159 Then
  myStatus__(i) = "-- No Collateral Condition has been inserted."
  i = i + 1
End If
If Val(ActiveDocument.Bookmarks("Complete_AC1").Range.Text) = 0 Then
  myStatus__(i) = "-- The Additional Conditions (1) section has not been updated."
  i = i + 1
End If
If Val(ActiveDocument.Bookmarks("Complete_AC2").Range.Text) = 0 Then
  myStatus__(i) = "-- The Additional Conditions (2) section has not been updated."
  i = i + 1
End If
If i > 1 Then
  For X = 1 To i - 1
    Me("lblWSReason" & X).Caption = myStatus__(X)
    If X > 1 And X < i - 1 Then
      Me.Height = Me.Height + 25
      Me.lblBottomHR.Top = Me.lblBottomHR.Top + 25
      Me.lblWSSure.Top = Me.lblWSSure.Top + 25
      Me.cmdWSCancel.Top = Me.cmdWSCancel.Top + 25
      Me.cmdWSContinue.Top = Me.cmdWSContinue.Top + 25
    Else
      Me.Height = Me.Height + 10
      Me.lblBottomHR.Top = Me.lblBottomHR.Top + 10
      Me.lblWSSure.Top = Me.lblWSSure.Top + 12
      Me.cmdWSCancel.Top = Me.cmdWSCancel.Top + 13
      Me.cmdWSContinue.Top = Me.cmdWSContinue.Top + 13
    End If
  Next X
End If
Set dlg = Nothing
End Sub

Attribute VB_Name = "ufConverting"
Attribute VB_Base = "0{5A723DE2-C698-45FB-AD52-6D42942FD6DB}{A9463E9C-518B-42EC-8061-5F8E020608E1}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False


Private Sub UserForm_Activate()
  ufConverting.Repaint
  Dim z As Long
  For z = 1 To 30000
    DoEvents
  Next z
  Application.ScreenRefresh
  Me.lblConverting.Caption = "Thank you ..."
  Unload ufConverting
End Sub

Attribute VB_Name = "vbaImport"
Option Explicit
Private UPPos As Integer
Private poConnection As ADODB.Connection 'conn for select
Private poRecord As ADODB.Recordset 'rec for select
'Prod
'old
'Private Const ConnectString = "DRIVER={SQL Server};SERVER=165.110.178.61,2433;UID=7AROUSER;PWD=7aro-0308;DATABASE=7aguaranty;LANGUAGE=us_english"

'New
Private Const ConnectString = "DRIVER={SQL Server};SERVER=S7APW16SQL01.sba.gov;UID=7AROUSER;PWD=7aro-0308;DATABASE=7aguaranty;LANGUAGE=us_english"

'Test
'Private Const ConnectString = "DRIVER={SQL Server};SERVER=165.110.178.66,2433;UID=7AROUSER;PWD=7aro-0308;DATABASE=7aTestguaranty;LANGUAGE=us_english"
'Private Const ConnectString = "DRIVER={SQL Server};SERVER=s2k8-haz-sql1.sba.gov;UID=7AROUSER;PWD=7aro-0308;DATABASE=7aTestguaranty;LANGUAGE=us_english"
'Private LoanId As String
Public LoanId As String    'Changed by GAP 2/26/13 so file will save in the proper folder.

Private Function GetEqual() As Boolean
On Error GoTo ErrHandler
Set poConnection = New ADODB.Connection
Set poRecord = New ADODB.Recordset
poConnection.Open ConnectString
poRecord.ActiveConnection = poConnection
poRecord.CursorType = adOpenForwardOnly
poRecord.LockType = adLockReadOnly
Dim SqlText As String
'Chged 1-13-16 SqlText = "Select t1.requestedamt,t1.sbaguantorprcnt,t1.dtappreceived,t1.loantermmnths,t1.lendrname,t1.lendrstrtnmb,"
SqlText = "Select t1.requestedamt,t1.sbaguantorprcnt,t1.datecreated,t1.loantermmnths,t1.lendrname,t1.lendrstrtnmb,"
SqlText = SqlText & "t1.lendrstrtname1,t1.lendrstrtname2,t1.lendrcityname,t1.lendrstcd,t1.lendrzipcd,t1.lendrcontactfirstname,"
SqlText = SqlText & "t1.lendrcontactlastname,t3.intrstratepct,t3.baserate,t1.pplusipymtamt,t1.pandipymtamt,t3.intrsttypeind,t3.adjustperiod,"
'Added Interest Only and Life Ins Info
SqlText = SqlText & "CASE WHEN t1.LifeInsurRqmtInd = 'Y' THEN 1 ELSE 0 END as LifeInsurRqmtInd, t1.MnthsIntrstOnlyQty, "
'Borr Table
SqlText = SqlText & "t2.LegalOrgnztnCd,t2.TradeName,t2.BusinessName,t2.PhyStrtNmb,t2.PhyStrtName1,t2.PhyStrtName2,t2.PhyCityName,t2.PhyStCd,t2.PhyZipCd"
'Join
SqlText = SqlText & " from dbo.tblLoanApplication t1 inner join tblBorrower t2 on t1.LoanId = t2.Loanid and t2.PrimaryBusinessInd = 'Y' and t2.BusinessPersonInd = 'B'left join tblInterest t3 on t1.loanid = t3.loanid and t3.phase = 1"
'Where
SqlText = SqlText & " Where t1.LoanId = " & LoanId & ";"


poRecord.Open SqlText
If poRecord.EOF Then
  GetEqual = False
Else
  GetEqual = True
End If
Exit Function

ErrHandler:
HandleDbErr poConnection
Call CloseDB(poRecord, poConnection) 'close & clean up
End Function
Private Sub HandleDbErr(Connection As ADODB.Connection)
Dim ErrorText
Dim Ctr As Integer
ErrorText = "Description: " & Err.Description & Chr(10)
ErrorText = ErrorText & "Source: " & Err.Source & Chr(10)
ErrorText = ErrorText & "Number: " & Err.Number
For Ctr = 0 To Connection.Errors.Count - 1
  ErrorText = ErrorText & Chr(10) & Connection.Errors(Ctr).Description
  DoEvents
Next Ctr
MsgBox ErrorText, vbCritical, "7A Loan Guaranty Processing Center"
End Sub
Private Sub CloseDB(Rec As ADODB.Recordset, Conn As ADODB.Connection)
If Rec.State <> 0 Then 'not closed
  Rec.Close
  Set Rec = Nothing
End If
If Conn.State <> 0 Then 'not closed
  Conn.Close
  Set Conn = Nothing
End If
End Sub
Private Function FixNull(AnyField As ADODB.Field) As Variant
If IsNull(AnyField.Value) Then
  FixNull = ""
Else
  FixNull = AnyField.Value
End If
End Function
Public Sub TestSub()
ImportData 845
End Sub

Public Sub ImportData(RefNum As String)
Dim StrMsg As String
Dim FileNm As String
LoanId = RefNum
If GetEqual() Then
  ' Turn screen update off
  Application.ScreenUpdating = False
    
  ' Update Active Document
  'On Error Resume Next
  With ActiveDocument
    
    ' Unprotect document and turn field codes on
    If .ProtectionType <> wdNoProtection Then
      .Unprotect ("snad7623")
    End If
       
    .ActiveWindow.View.ShowFieldCodes = True
    
    ' UpdateDocument
    UpdateDocument
    
    ' Get Injection
    GetInjection
    
    ' Protect DOcument and turn field codes off
    .Protect wdAllowOnlyComments, True, "snad7623"
    .ActiveWindow.View.ShowFieldCodes = False
    Selection.HomeKey Unit:=wdStory, Extend:=wdMove
  End With
  ' Turn screen update off
  Application.ScreenUpdating = True
  'FileNm = "L:\7ADocs\" & FixNull(poRecord("company_legal_name")) & ".doc"
  'If Dir(FileNm) > "" Then
  '  Beep
  '  StrMsg = "Caution: Overwrite Document as "
  'Else
  '  StrMsg = "Save Document as "
  'End If
  'If MsgBox(StrMsg & FileNm, 1, "LowDoc") = 1 Then
  '  ActiveDocument.AttachedTemplate.Saved = True
  '  ActiveDocument.SaveAs FileNm
  'End If
End If
Call CloseDB(poRecord, poConnection) 'close & clean up
End Sub

Private Sub UpdateDocument()
Dim Tmp As String
Dim intTemp As Integer
Dim Prin1Address As String
Dim VarTemp As Variant

'*******************Commented out 4/27/07
'Prin1Address = FixNull(poRecord("prin1_present_address_line_A"))
'If Len(FixNull(poRecord("prin1_present_address_line_B"))) > 0 Then
'  Prin1Address = ", " & FixNull(poRecord("prin1_present_address_line_B"))
'End If
'Prin1Address = Prin1Address & ", " & FixNull(poRecord("prin1_present_city"))
'Prin1Address = Prin1Address & " " & FixNull(poRecord("prin1_present_state"))
'Prin1Address = Prin1Address & " " & FixNull(poRecord("prin1_present_zip_code"))
'If VarExist("Prin1Address") Then
'  ActiveDocument.Variables("Prin1Address") = Prin1Address
'Else
'  Tmp = ActiveDocument.Variables.Add("Prin1Address", Prin1Address)
'End If

' -- Loan Number, Name, Amount, PercentGuaranteed
'udSetBookmark "LoanNumber", "LDP " & FixNull(poRecord("loannumber"))
'***************************end

udSetBookmark "LoanAmount", Format$(FixNull(poRecord("requestedamt")), "###,###.00")
udSetBookmark "PercentGuaranteed", FixNull(poRecord("sbaguantorprcnt"))
' -- PLPLoan, ApprovalDate, RequestDate, FirstDisb, LastDisb
udSetBookmark "obPLP", ""
'Tmp = FixBtr(DataBuf.dtdecisn)
'Tmp = Mid(Tmp, 5, 2) & "/" & Mid(Tmp, 7, 2) & "/" & Mid(Tmp, 1, 4)
'udSetBookmark "ApprovalDate", Tmp
'Chged 1-13-16 Tmp = Format$(FixNull(poRecord("dtappreceived")), "mm/dd/yyyy")
Tmp = Format$(FixNull(poRecord("datecreated")), "mm/dd/yyyy")
udSetBookmark "RequestDate", Tmp
udSetBookmark "FirstDisb", "6"
udSetBookmark "LastDisb", "48"  'Changed from 12 to 48 by GAP on 4/21/16.

' -- Maturity
intTemp = Val(FixNull(poRecord("loantermmnths")))
WizLib.UpdateText "MaturityYears", Str(Int(intTemp / 12))
WizLib.UpdateText "MaturityMonths", Str(intTemp Mod 12)

' -- MaturityStart
'udSetBookmark "obMaturityStart", "MaturityStart"

' -- Lender information
udSetBookmark "LenderName", FixNull(poRecord("lendrname"))
'udSetBookmark "LenderName2", FixNull(poRecord("User_Misc40_3"))

If Len(RTrim(FixNull(poRecord("lendrstrtnmb")))) > 0 Then
  udSetBookmark "LenderAddress", RTrim(FixNull(poRecord("lendrstrtnmb"))) & " " & RTrim(FixNull(poRecord("lendrstrtname1")))
Else
  udSetBookmark "LenderAddress", RTrim(FixNull(poRecord("lendrstrtname1")))
End If

udSetBookmark "LenderAddress2", RTrim(FixNull(poRecord("lendrstrtname2")))
udSetBookmark "LenderCity", FixNull(poRecord("lendrcityname"))
udSetBookmark "LenderState", FixNull(poRecord("lendrstcd"))
udSetBookmark "LenderZip", FixNull(poRecord("lendrzipcd"))
udSetBookmark "LenderSign", RTrim(FixNull(poRecord("lendrcontactfirstname"))) & " " & RTrim(FixNull(poRecord("lendrcontactlastname")))
udSetBookmark "SBLender", RTrim(FixNull(poRecord("lendrcontactfirstname"))) & " " & RTrim(FixNull(poRecord("lendrcontactlastname")))

' -- SBA info
'VarTemp = "HKEY_CURRENT_USER\software\SBA\7aWizard"
'udSetBookmark "SBACode"
'udSetBookmark "SBAName", System.PrivateProfileString("", VarTemp, "SBAName")
'udSetBookmark "SBAAddress", System.PrivateProfileString("", VarTemp, "SBAAddress")
'udSetBookmark "SBAAddress2", System.PrivateProfileString("", VarTemp, "SBAAddress2")
'udSetBookmark "SBACity", System.PrivateProfileString("", VarTemp, "SBACity")
'udSetBookmark "SBAState", System.PrivateProfileString("", VarTemp, "SBAState")
'udSetBookmark "SBAZip", System.PrivateProfileString("", VarTemp, "SBAZip")
'udSetBookmark "SBSBA", System.PrivateProfileString("", VarTemp, "SBSBA")

' -- Borrower and OC
udUpdateApplicants

' -- Interest Rate options
udSetBookmark "IRType", GetIRType()
udSetBookmark "IRRate1", FixNull(poRecord("intrstratepct"))
udSetBookmark "IRRate2", FixNull(poRecord("intrstratepct"))
'udSetBookmark "IRPeriod1", "IRPeriod"
udSetBookmark "IROverPrime", Val(FixNull(poRecord("intrstratepct"))) - Val(FixNull(poRecord("baserate")))
'udSetBookmark "IRPShare1"
'udSetBookmark "IRPShare2"

' -- Interest only payments
intTemp = Val(FixNull(poRecord("MnthsIntrstOnlyQty")))  '5/2/07 don't capture user_code_3 (no of months interest only) in new system
If intTemp > 2 Then intTemp = 2
WizLib.UpdateText "obIO", Str(intTemp)
udSetBookmark "IOPayments", FixNull(poRecord("MnthsIntrstOnlyQty"))
' udSetBookmark "IOBegin", "one month"  'Ray Hill 2/1/2019 removed because it was overwriting Interest Only bookmark
udSetBookmark "IOFrequency", "every month"
udSetBookmark "IOPaymentDay", ""

' -- Main Payment terms
'udSetBookmark "PTType", GetPTType() '5/2/07 uses user_code_3, see above

If Val(FixNull(poRecord("pplusipymtamt"))) > 0 Then
  udSetBookmark "PTAmount1", Format$(FixNull(poRecord("pplusipymtamt")), "###,###.00")
  udSetBookmark "obddPay", "1"  'Principal plus interest
ElseIf Val(FixNull(poRecord("pandipymtamt"))) > 0 Then
  udSetBookmark "PTAmount1", Format$(FixNull(poRecord("pandipymtamt")), "###,###.00")
  udSetBookmark "obddPay", "0"  'Principal and interest
End If

udSetBookmark "PTFrequency", "every month"
'udSetBookmark "PTPeriod"
'udSetBookmark "PTPShare"
'udSetBookmark "PTBegin", GetPTBegin() '5/2/07 uses user_code_3, see above
udSetBookmark "PTPayDay1", ""
'udSetBookmark "PTPayDay2"

' -- Other Payment terms
udSetBookmark "ChangePeriod", GetCPFrequency(), True
'udSetBookmark "CDOverPrime", FixNull(poRecord("user_misc10_5"))
'udSetBookmark "cbLateCharge", "1"

'Update Life Insurance
If Val(poRecord("LifeInsurRqmtInd")) = 1 Then
  GetInsurance
End If

' -- Use of Proceeds
UpdateUseOfProceeds

'udUpdateUP "1", Format$(FixZero(poRecord("user_currency_1")), "###,###,###.00"), ""
'udUpdateUP "2", Format$(FixZero(poRecord("user_currency_2")), "###,###,###.00"), ""
'udUpdateUP "3", Format$(FixZero(poRecord("user_currency_3")), "###,###,###.00"), ""
'udUpdateUP "4", Format$(FixZero(poRecord("user_currency_4")), "###,###,###.00"), ""
'udUpdateUP "5", Format$(FixZero(poRecord("user_currency_5")), "###,###,###.00"), ""
'udUpdateUP "6", Format$(FixZero(poRecord("user_currency_6")), "###,###,###.00"), ""
'udUpdateUP "7", Format$(FixZero(poRecord("user_currency_7")), "###,###,###.00"), ""
'udUpdateUP "8", Format$(FixZero(poRecord("user_currency_8")), "###,###,###.00"), ""
'udUpdateUP "9", Format$(FixZero(poRecord("user_currency_9")), "###,###,###.00"), ""
'udUpdateUP "10", Format$(FixZero(poRecord("user_currency_10")), "###,###,###.00"), ""
'udUpdateUP "11", Format$(FixZero(poRecord("user_currency_11")), "###,###,###.00"), ""
'udUpdateUP "12", Format$(FixZero(poRecord("user_currency_12")), "###,###,###.00"), ""
'udUpdateUP "13", Format$(FixZero(poRecord("user_currency_13")), "###,###,###.00"), ""
'udUpdateUP "14", Format$(FixZero(poRecord("user_currency_14")), "###,###,###.00"), ""
'udUpdateUP "15", Format$(FixZero(poRecord("user_currency_15")), "###,###,###.00"), ""
'udUpdateUP "16", Format$(FixZero(poRecord("user_currency_16")), "###,###,###.00"), ""
'udUpdateUP "17", Format$(FixZero(poRecord("user_currency_17")), "###,###,###.00"), ""
'udUpdateUP "18", Format$(FixZero(poRecord("user_currency_18")), "###,###,###.00"), ""
'udUpdateUP "19", Format$(FixZero(poRecord("user_currency_19")), "###,###,###.00"), ""
'udUpdateUP "20", Format$(FixZero(poRecord("user_currency_20")), "###,###,###.00"), ""
'udUpdateUP "0", Format$(FixZero(poRecord("user_currency_21")), "###,###.00"), FixNull(poRecord("User_Misc40_2"))
End Sub
Private Sub UpdateUseOfProceeds()
On Error GoTo ErrHandler
Dim Proprietorship As Integer
Dim Connection As ADODB.Connection
Dim Record As ADODB.Recordset
Dim ProType As String
Dim DbtPayment As Currency
Dim DbtRmk As String
Dim SBADbt As Currency
Dim SBADbtRmk As String
Dim WorkCap As Currency
Dim WorkCapRmk As String
Set Connection = New ADODB.Connection
Set Record = New ADODB.Recordset
Connection.Open ConnectString
Record.ActiveConnection = Connection
Record.CursorType = adOpenForwardOnly
Record.LockType = adLockReadOnly
Record.Open "Select proceedtype,proceedamt,otherremark from dbo.tblProceeds where LoanId = " & LoanId & ";"
UPPos = 0 'initialize Use of Proceeds counter
DbtPayment = 0
WorkCap = 0
Do Until Record.EOF
  ProType = ""
  Select Case FixNull(Record("proceedtype"))
  Case "A21"  '0. Other
    ProType = "0"
    
  Case "A01"  '1. Land Purchase
    ProType = "1"
    
  Case "A02"  '2. Land and Improvement Purchase
    ProType = "2"
    
  Case "A03"  'Improvement Purchase
    ProType = "3"
    
  Case "A04"  '4. Building Construction (Construction financing SBA guaranteed)
    ProType = "4"
    
  Case "A05"  '5. Building Addition (Construction financing SBA guaranteed)
    ProType = "5"
    
  Case "A06"  '6. Building Renovations (Construction financing SBA guaranteed)
    ProType = "6"
    
  Case "A07"  '7. Interim Construction Loan Payment (Construction financing NOT SBA guaranteed)
    ProType = "7"
    
  Case "A08"  '8. Lender's Interim Loan Payment)
    ProType = "8"
    
  Case "A09"  '9. Leasehold Improvements to a Building (Construction financing SBA guaranteed)"
    ProType = "9"
    
  Case "A10"  '10. Equipment Purchase
    ProType = "10"
    
  Case "A11"  '11. Fixture Purchase"
    ProType = "11"
    
  Case "A12"  '12. Inventory Purchase
    ProType = "12"
    
  Case "A13"  '13. Trade or Accounts Payable Payment
    ProType = "13"
    
  Case "A14"  '14. Notes Payable Payment
    ProType = "14"
    
  Case "A15"  '15. Debt Payment
    ProType = "15"
    
  Case "A16" '16. Business Purchase
    ProType = "16"
    
    InsertText "none", "Inc_BD", "none", 0, 2
    InsertText "Para_BD1", "Inc_BD", "1", 1, 0
    udSetBookmark "cbBD1", 1
  Case "A17" '17. Stock Purchase
    ProType = "17"
    
  Case "A18" '18. SBA Loan Payment
    ProType = "18"
    
  Case "A19" '19. Working Capital
    ProType = "19"
    
  Case "A20" '20. Guarantee Fee
    ProType = "20"
    
  Case "A22"
    ProType = "18"
    
  'Case "A15", "O"  '15. Debt Payment
  '  DbtPayment = DbtPayment + Val(Record("proceedamt"))
  '  DbtRmk = DbtRmk & " " & FixNull(Record("otherremark"))
    
  'Case "A18", "P"  '18. SBA Loan Payment
  '  SBADbt = SBADbt + Val(Record("proceedamt"))
  '  SBADbtRmk = SBADbtRmk & " " & FixNull(Record("otherremark"))
    

    
  'Case "A19"  '19. Working Capital
  '  WorkCap = WorkCap + Val(Record("proceedamt"))
  '  WorkCapRmk = WorkCapRmk & " " & FixNull(Record("otherremark"))
    
  'Case "A20"  '19. Working Capital
  '  WorkCap = WorkCap + Val(Record("proceedamt"))
  '  WorkCapRmk = WorkCapRmk & " " & FixNull(Record("otherremark"))
  End Select
  
  If ProType <> "" Then
    udUpdateUP ProType, Format$(FixZero(Record("proceedamt")), "###,###,###.00"), FixNull(Record("otherremark"))
  End If
  
  Record.MoveNext
Loop

'If WorkCap > 0 Then
'  udUpdateUP "19", Format$(WorkCap, "###,###,###.00"), WorkCapRmk
'End If
'If DbtPayment > 0 Then
' udUpdateUP "15", Format$(DbtPayment, "###,###,###.00"), DbtRmk
'End If
'If SBADbt > 0 Then
' udUpdateUP "18", Format$(SBADbt, "###,###,###.00"), SBADbtRmk
'End If

Call CloseDB(Record, Connection) 'close & clean up
Exit Sub

ErrHandler:
HandleDbErr Connection
Call CloseDB(Record, Connection) 'close & clean up
End Sub
'Added for life insurance
Private Sub GetInsurance()
On Error GoTo ErrHandler
Dim Record As ADODB.Recordset
Dim Connection As ADODB.Connection
Dim Insured As String
Dim InsAmount As String
Set Connection = New ADODB.Connection
Set Record = New ADODB.Recordset
Connection.Open ConnectString
Record.ActiveConnection = Connection
Record.CursorType = adOpenForwardOnly
Record.LockType = adLockReadOnly
Dim SqlText As String
SqlText = "select top 1 t.loanid, CASE WHEN SUM(t.LifeInsAmt) > 0 THEN SUM(t.LifeInsAmt) ELSE SUM(ISNULL(t1.InsuranceAmt,0)) END as LifeInsAmt, CASE WHEN LEN(t.LifeInsOnWhom) > 1 THEN t.LifeInsOnWhom Else "
SqlText = SqlText & "STUFF((SELECT DISTINCT ', ' + firstname + ' ' + lastname from tblPrincipals t3 where t3.loanid = t.loanid and t3.insurancelifeind = 'Y' FOR XML PATH ('')),1,1,'') END as LifeInsOnWhom "
SqlText = SqlText & "from tblLoanApplication t left join tblPrincipals t1 on t.LoanId = t1.LoanId where t.LifeInsurRqmtInd = 'Y' and t1.InsuranceLifeInd = 'Y' and t.Loanid =" & LoanId & " group by t.LifeInsOnWhom, t.loanid, t1.loanid "

Record.Open SqlText

If Record.EOF Then
  'GetEqual = False
Else
  Insured = RTrim(Record("LifeInsOnWhom"))
  InsAmount = Val(FixNull(Record("LifeInsAmt")))

  InsertText "none", "Inc_IC", "none", 0, 2
  
  udSetBookmark "cbRP001", 1
  udSetBookmark "IC5Insured_1", Insured
  udSetBookmark "IC5Insured", Insured
  udSetBookmark "IC5Amount_1", InsAmount
  udSetBookmark "IC5Amount", InsAmount
  
  InsertText "Para_IC5Title", "Inc_IC", "1", 1, 0
  InsertText "Para_RP001", "Inc_IC", "1", 1, 0
  InsertText "Para_IC5Closing", "Inc_IC", "1", 1, 0
End If


Call CloseDB(Record, Connection) 'close & clean up
Exit Sub

ErrHandler:
HandleDbErr Connection
Call CloseDB(Record, Connection) 'close & clean up
End Sub
'Added for new injections
Private Sub GetInjection()
On Error GoTo ErrHandler
Dim Record As ADODB.Recordset
Dim Connection As ADODB.Connection
Set Connection = New ADODB.Connection
Set Record = New ADODB.Recordset
Connection.Open ConnectString
Record.ActiveConnection = Connection
Record.CursorType = adOpenForwardOnly
Record.LockType = adLockReadOnly
Dim SqlText As String
SqlText = "select t.Loanid, SUM(t.InjctnAmt) as Amount, MAX(t.InjctnOthDescTxt) as [Description],"
SqlText = SqlText & "case when t1.Descr like 'Cash-%' then 'Cash' else t1.Descr end as InjectionType "
SqlText = SqlText & "from tblinjection t left join tblInjectionCodes t1 on t.InjctnTypCd = t1.InjctnTypCd "
'Where
SqlText = SqlText & " Where t.LoanId = " & LoanId
'Group By
SqlText = SqlText & " Group by t.Loanid, case when t1.Descr like 'Cash-%' then 'Cash' else t1.Descr end ;"

Record.Open SqlText

If Record.EOF Then
  'GetEqual = False
Else
  InsertText "none", "Inc_IN", "none", 0, 2
  InsertText "Para_IN0", "Inc_IN", "1", 1, 0
End If

Do Until Record.EOF
  'Cash Injection
  If RTrim(Record("InjectionType")) = "Cash" Then
    udSetBookmark "IN1Purpose", RTrim(Record("Description"))
    udSetBookmark "IN1Amount", RTrim(Record("Amount"))
    udSetBookmark "cbIN1", 1

    InsertText "Para_IN1", "Inc_IN", "1", 1, 0
  End If
  'Asset Injection
  If RTrim(Record("InjectionType")) = "Non-cash Assets" Then
    udSetBookmark "IN3Purpose", RTrim(Record("Description"))
    udSetBookmark "IN3Amount", RTrim(Record("Amount"))
    udSetBookmark "cbIN3", 1

    InsertText "Para_IN3", "Inc_IN", "1", 1, 0
  End If
  'Stand-By Debt Injection
  If RTrim(Record("InjectionType")) = "Standby Debt" Then
    udSetBookmark "IN2Purpose", RTrim(Record("Description"))
    udSetBookmark "IN2Amount", RTrim(Record("Amount"))
    udSetBookmark "cbIN2", 1

    InsertText "Para_IN2", "Inc_IN", "1", 1, 0
  End If
  
  Record.MoveNext
Loop

Call CloseDB(Record, Connection) 'close & clean up
Exit Sub

ErrHandler:
HandleDbErr Connection
Call CloseDB(Record, Connection) 'close & clean up
End Sub
Private Function FixZero(AnyVal As Currency) As String
If AnyVal = 0 Then
  FixZero = ""
Else
  FixZero = Trim(Str(AnyVal))
End If
End Function
Private Sub udSetBookmark(strBkName As String, strData As String, Optional blnUpdateIfBlank As Boolean)
' Update Bookmark
If strData <> "" Or blnUpdateIfBlank = True Then
    WizLib.UpdateText strBkName, strData
End If
End Sub
Private Sub udUpdateApplicants()
On Error GoTo ErrHandler
Dim Proprietorship As Integer
Dim Connection As ADODB.Connection
Dim Record As ADODB.Recordset

udSetBookmark "BorrowerName", FixNull(poRecord("BusinessName"))
udSetBookmark "BorrowerDba", FixNull(poRecord("TradeName"))
    
If Len(RTrim(FixNull(poRecord("PhyStrtNmb")))) > 0 Then
  udSetBookmark "BorrowerAddress", RTrim(FixNull(poRecord("PhyStrtNmb"))) & " " & RTrim(FixNull(poRecord("PhyStrtName1")))
Else
  udSetBookmark "BorrowerAddress", FixNull(poRecord("PhyStrtName1"))
End If

udSetBookmark "BorrowerAddress2", FixNull(poRecord("PhyStrtName2"))
udSetBookmark "BorrowerCity", FixNull(poRecord("PhyCityName"))
udSetBookmark "BorrowerState", FixNull(poRecord("PhyStCd"))
udSetBookmark "BorrowerZip", FixNull(poRecord("PhyZipCd"))

udSetBookmark "GuarantorState", FixNull(poRecord("PhyStCd"))
    
Dim Ctr As Integer
Ctr = 1
    
Dim MailStr1 As String
    
Set Connection = New ADODB.Connection
Set Record = New ADODB.Recordset
Connection.Open ConnectString
Record.ActiveConnection = Connection
Record.CursorType = adOpenForwardOnly
Record.LockType = adLockReadOnly

'Borrowers
Record.Open "Select TradeName,BusinessName,PhyStrtNmb,PhyStrtName1,PhyStrtName2,PhyCityName,PhyStCd,PhyZipCd from dbo.tblBorrower where LoanId = " & LoanId & ";"
If Not Record.EOF Then
    Do Until Record.EOF
      If Len(RTrim(FixNull(Record("PhyStrtNmb")))) > 0 Then
        MailStr1 = RTrim(FixNull(Record("PhyStrtNmb"))) & " " & RTrim(FixNull(Record("PhyStrtName1")))
      Else
        MailStr1 = RTrim(FixNull(Record("PhyStrtName1")))
      End If
    
      Call AddBMApp(FixNull(Record("BusinessName")), FixNull(Record("TradeName")), MailStr1, FixNull(Record("PhyStrtName2")), FixNull(Record("PhyCityName")), FixNull(Record("PhyStCd")), FixNull(Record("PhyZipCd")), Trim(Str(Ctr)))
      Record.MoveNext
      Ctr = Ctr + 1
    Loop
End If
Record.Close

'Bus Quar/Prin
Record.Open "Select BusinessName,PhysStrtNmb,PhysStrtName1,PhysStrtName2,PhysCityName,PhysStCd,PhysZipCd from dbo.tblBusPrincipals where LoanId = " & LoanId & ";"
If Not Record.EOF Then
    Do Until Record.EOF
      If Len(RTrim(FixNull(Record("PhysStrtNmb")))) > 0 Then
        MailStr1 = RTrim(FixNull(Record("PhysStrtNmb"))) & " " & RTrim(FixNull(Record("PhysStrtName1")))
      Else
        MailStr1 = RTrim(FixNull(Record("PhysStrtName1")))
      End If
    
      Call AddBMApp(FixNull(Record("BusinessName")), "", MailStr1, FixNull(Record("PhysStrtName2")), FixNull(Record("PhysCityName")), FixNull(Record("PhysStCd")), FixNull(Record("PhysZipCd")), Trim(Str(Ctr)))
      Record.MoveNext
      Ctr = Ctr + 1
    Loop
End If
Record.Close

'Person Guar/Prin
Record.Open "Select firstname,lastname,mailstrtnmb,mailstrtname1,mailstrtname2,mailcityname,mailstcd,mailzipcd,brwrgntr from dbo.tblPrincipals where LoanId = " & LoanId & " and (brwrgntr='P' or brwrgntr='G') Order By brwrgntr,ownrshpinbusinesspct desc;"
If Not Record.EOF Then
    Dim Guarantors As String
    
    Do Until Record.EOF
      If FixNull(Record("brwrgntr")) = "G" Then
        Guarantors = Guarantors & Trim(FixNull(Record("FirstName"))) & " " & Trim(FixNull(Record("LastName"))) & Chr(13) & Chr(10)
      End If
      
      If Len(RTrim(FixNull(Record("mailstrtnmb")))) > 0 Then
        MailStr1 = RTrim(FixNull(Record("mailstrtnmb"))) & " " & RTrim(FixNull(Record("mailstrtname1")))
      Else
        MailStr1 = RTrim(FixNull(Record("mailstrtname1")))
      End If
    
      Call AddBMApp(FixNull(Record("FirstName")) & " " & FixNull(Record("LastName")), FixNull(poRecord("BusinessName")), MailStr1, FixNull(Record("mailstrtname2")), FixNull(Record("mailcityname")), FixNull(Record("mailstcd")), FixNull(Record("mailzipcd")), Trim(Str(Ctr)))
      Record.MoveNext
      Ctr = Ctr + 1
    Loop
    udSetBookmark "Guarantor", Guarantors
End If

Call CloseDB(Record, Connection) 'close & clean up
Exit Sub

ErrHandler:
HandleDbErr Connection
Call CloseDB(Record, Connection) 'close & clean up
End Sub
Private Sub AddBMApp(BorrName As String, TradeName As String, Addr1 As String, Addr2 As String, City As String, State As String, Zip As String, strPos As String)
udCreateRPBookmark "BorrowerName_" & strPos, "AddRP007"
udCreateRPBookmark "BorrowerDba_" & strPos, "AddRP007"
udCreateRPBookmark "BorrowerAddress_" & strPos, "AddRP007"
udCreateRPBookmark "BorrowerAddress2_" & strPos, "AddRP007"
udCreateRPBookmark "BorrowerCity_" & strPos, "AddRP007"
udCreateRPBookmark "BorrowerState_" & strPos, "AddRP007"
udCreateRPBookmark "BorrowerZip_" & strPos, "AddRP007"
udSetBookmark "BorrowerName_" & strPos, BorrName
udSetBookmark "BorrowerDba_" & strPos, TradeName
udSetBookmark "BorrowerAddress_" & strPos, Addr1
udSetBookmark "BorrowerAddress2_" & strPos, Addr2
udSetBookmark "BorrowerCity_" & strPos, City
udSetBookmark "BorrowerState_" & strPos, State
udSetBookmark "BorrowerZip_" & strPos, Zip
' Update RPLast bookmark
WizLib.UpdateText "RPLast007", strPos
End Sub
Private Sub udCreateRPBookmark(strBookName As String, strAddRP As String)
Dim rngRange As Range
With ActiveDocument
  Set rngRange = .Bookmarks(strAddRP).Range
  rngRange.InsertAfter "[" & strBookName & "]"
  .Bookmarks.Add strBookName, rngRange
  rngRange.InsertAfter " "
  rngRange.Collapse wdCollapseEnd
  .Bookmarks.Add strAddRP, rngRange
End With
End Sub
Private Sub udUpdateUP(ProceedType As String, UseProceed As String, AnyText As String)
Dim StrUp As String
If Len(Trim(UseProceed)) > 0 Then
  UPPos = UPPos + 1 'module level counter for use of proceeds
  StrUp = Trim(Str(UPPos))
  If UPPos = 1 Then
    ' Update Master Bookmarks if UPPos = 1
    udSetBookmark "UPAmount", UseProceed
    udSetBookmark "obUPID", ProceedType
    udSetBookmark "UPText", AnyText
    'udSetBookmark "UPText", "UPText_" & strIndex
    'udSetBookmark "UPField1", "UPField1_" & strIndex
    'udSetBookmark "UPField2", "UPField2_" & strIndex
    ' Update RPLast bookmark
  End If
  If UPPos > 1 Then
    'Create bookmarks
    udCreateRPBookmark "UPAmount_" & StrUp, "AddRP010"
    udCreateRPBookmark "obUPID_" & StrUp, "AddRP010"
    udCreateRPBookmark "UPText_" & StrUp, "AddRP010"
    udCreateRPBookmark "UPField1_" & StrUp, "AddRP010"
    udCreateRPBookmark "UPField2_" & StrUp, "AddRP010"
    udCreateRPBookmark "UPAmount2_" & StrUp, "AddRP010"
    udCreateRPBookmark "UPField3_" & StrUp, "AddRP010"
  End If
  ' Update Bookmarks
  udSetBookmark "UPAmount_" & StrUp, UseProceed
  udSetBookmark "obUPID_" & StrUp, ProceedType
  udSetBookmark "UPText_" & StrUp, AnyText
  'udSetBookmark "UPText_" & StrUp, "UPText_" & strIndex
  'udSetBookmark "UPField1_" & StrUp, "UPField1_" & strIndex
  'udSetBookmark "UPField2_" & StrUp, "UPField2_" & strIndex
  WizLib.UpdateText "RPLast010", StrUp
End If
End Sub
'[[[[[[[[[[[From Jeff 4/19/02
Private Function VarExist(AnyStr As String) As Boolean
Dim i As Integer
Dim Ctr As Integer
i = ActiveDocument.Variables.Count
For Ctr = 1 To i
  If AnyStr = ActiveDocument.Variables(Ctr).Name Then
    VarExist = True
    Exit For
  End If
  DoEvents
Next Ctr
End Function
Private Function GetIRType() As String ' IRType
Dim Tmp As String
Tmp = FixNull(poRecord("intrsttypeind"))
Select Case Tmp
  Case "F"
    GetIRType = "0"
  Case "V"
    GetIRType = "1"
  Case Else
    GetIRType = ""
End Select
End Function


'Private Function GetPTType() As String
'Dim ContractTerm As Single
'Dim LoanAmount As Single
'Dim PrincipalPayment As Single
'Dim MonthlyPayment As Single
' "PTType"
' -- Calculate Loan Term minus interest only period
'ContractTerm = Val(FixNull(poRecord("contract_term"))) - Val(FixNull(poRecord("user_code_3")))
'ContractTerm = Val(FixNull(poRecord("contract_term")))
' -- Make sure it is not equal to 0
'If ContractTerm = 0 Then ContractTerm = 1
' -- Get Loan Amount
'LoanAmount = Val(FixNull(poRecord("contract_loan_amount")))
' -- Calculate Principal Payment Amount
'PrincipalPayment = LoanAmount / ContractTerm
' -- Read monthly Payment Amount
'MonthlyPayment = Val(FixNull(poRecord("contract_payment_amount")))
' -- If Monthly payment < PrincipalPayment * (1 + Contract_Term*0.0001) Then
' -- set IRType to I+P, otherwise set it to P&I
'If MonthlyPayment < PrincipalPayment * (1 + ContractTerm * 0.0001) Then
'  GetPTType = "1"
'Else
'  GetPTType = "0"
'End If
'End Function


Private Function GetPTBegin() As String
Dim usrcode3 As String
usrcode3 = FixNull(poRecord("User_Code_3"))
Select Case usrcode3
    Case "0"
       GetPTBegin = "one month"
    Case "1"
       GetPTBegin = "two months"
    Case "2"
       GetPTBegin = "three months"
    Case "3"
       GetPTBegin = "four months"
    Case "4"
       GetPTBegin = "five months"
    Case "5"
       GetPTBegin = "six months"
    Case "6"
       GetPTBegin = "seven months"
    Case Else
       GetPTBegin = usrcode3 & " months"
End Select
End Function
Private Function GetCPFrequency() As String
' CPFrequency
Select Case FixNull(poRecord("adjustperiod"))
Case "M"
    GetCPFrequency = "monthly"
Case "Q"
    GetCPFrequency = "quarterly"
Case "C"
    GetCPFrequency = "Calendar Quarter"
Case "S"
    GetCPFrequency = "semi-annually"
Case "A"
    GetCPFrequency = "annually"
Case Else
    GetCPFrequency = ""
End Select
End Function
Private Sub BMTest() 'Temporary function to get bookmarks
Dim X As Integer
Dim fh As Integer
fh = FreeFile
Open "C:\bmarks.txt" For Output As #fh
For X = 1 To ActiveDocument.Bookmarks.Count
 Print #fh, ActiveDocument.Bookmarks(X).Name & " : " & ActiveDocument.Bookmarks(X).Range.Text
Next X
Close #fh
MsgBox "Done..."
End Sub

Public Sub ShowForm()
    Load frmPopWiz
    frmPopWiz.Show
End Sub


Private Sub udUpdateApplicantsOld()
On Error GoTo ErrHandler
Dim Proprietorship As Integer
Dim Connection As ADODB.Connection
Dim Record As ADODB.Recordset

Proprietorship = Val(FixNull(poRecord("LegalOrgnztnCd")))
' Update Master Bookmarks with first applicant
Set Connection = New ADODB.Connection
Set Record = New ADODB.Recordset
Connection.Open ConnectString
Record.ActiveConnection = Connection
Record.CursorType = adOpenForwardOnly
Record.LockType = adLockReadOnly
Record.Open "Select firstname,lastname,mailstrtnmb,mailstrtname1,mailstrtname2,mailcityname,mailstcd,mailzipcd,brwrgntr from dbo.tblPrincipals where LoanId = " & LoanId & " and (brwrgntr='P' or brwrgntr='G') Order By brwrgntr,ownrshpinbusinesspct desc;"
If Not Record.EOF Then
    If Proprietorship = 1 Then
      udSetBookmark "BorrowerName", FixNull(Record("firstname")) & " " & FixNull(Record("lastname"))
      udSetBookmark "BorrowerDba", FixNull(poRecord("TradeName"))
    Else
      udSetBookmark "BorrowerName", FixNull(poRecord("businessname"))
      udSetBookmark "BorrowerDba", ""
    End If
    
    If Len(RTrim(FixNull(poRecord("PhyStrtNmb")))) > 0 Then
      udSetBookmark "BorrowerAddress", RTrim(FixNull(poRecord("PhyStrtNmb"))) & " " & RTrim(FixNull(poRecord("PhyStrtName1")))
    Else
      udSetBookmark "BorrowerAddress", FixNull(poRecord("PhyStrtName1"))
    End If

    udSetBookmark "BorrowerAddress2", FixNull(poRecord("PhyStrtName2"))
    udSetBookmark "BorrowerCity", FixNull(poRecord("PhyCityName"))
    udSetBookmark "BorrowerState", FixNull(poRecord("PhyStCd"))
    udSetBookmark "BorrowerZip", FixNull(poRecord("PhyZipCd"))
    'First subscript
    If Proprietorship = 1 Then
      udSetBookmark "BorrowerName_1", FixNull(Record("firstname")) & " " & FixNull(Record("lastname"))
      udSetBookmark "BorrowerDba_1", FixNull(poRecord("TradeName"))
    Else
      udSetBookmark "BorrowerName_1", FixNull(poRecord("businessname"))
      udSetBookmark "BorrowerDba_1", ""
    End If
    
    If Len(RTrim(FixNull(poRecord("PhyStrtNmb")))) > 0 Then
      udSetBookmark "BorrowerAddress_1", RTrim(FixNull(poRecord("PhyStrtNmb"))) & " " & RTrim(FixNull(poRecord("PhyStrtName1")))
    Else
          udSetBookmark "BorrowerAddress_1", FixNull(poRecord("PhyStrtName1"))
    End If
    
    udSetBookmark "BorrowerAddress2_1", FixNull(poRecord("PhyStrtName2"))
    udSetBookmark "BorrowerCity_1", FixNull(poRecord("PhyCityName"))
    udSetBookmark "BorrowerState_1", FixNull(poRecord("PhyStCd"))
    udSetBookmark "BorrowerZip_1", FixNull(poRecord("PhyZipCd"))
    ' Update RPLast bookmark
    WizLib.UpdateText "RPLast007", "1"
    udSetBookmark "GuarantorState", FixNull(poRecord("PhyStCd"))
    Dim Ctr As Integer
    Dim Guarantors As String
    Dim MailStr1 As String
    
    Ctr = 2
    Do Until Record.EOF
      'If FixNull(Record("brwrgntr")) = "G" Then
        Guarantors = Guarantors & Trim(FixNull(Record("FirstName"))) & " " & Trim(FixNull(Record("LastName"))) & Chr(13) & Chr(10)
      'End If
      
      If Len(RTrim(FixNull(Record("mailstrtnmb")))) > 0 Then
        MailStr1 = RTrim(FixNull(Record("mailstrtnmb"))) & " " & RTrim(FixNull(Record("mailstrtname1")))
      Else
        MailStr1 = RTrim(FixNull(Record("mailstrtname1")))
      End If
    
      Call AddBMApp(FixNull(Record("FirstName")), FixNull(Record("LastName")), MailStr1, FixNull(Record("mailstrtname2")), FixNull(Record("mailcityname")), FixNull(Record("mailstcd")), FixNull(Record("mailzipcd")), Trim(Str(Ctr)))
      Record.MoveNext
      Ctr = Ctr + 1
    Loop
    udSetBookmark "Guarantor", Guarantors
End If
Call CloseDB(Record, Connection) 'close & clean up
Exit Sub

ErrHandler:
HandleDbErr Connection
Call CloseDB(Record, Connection) 'close & clean up
End Sub
Public Sub InsertText(What, Where, From, Value, Type_)
'If From = Value then copy What to Where
'Type:  0 = add to existing text
'Type:  1 = replace existing Text - non-exclusive
'Type:  2 = replace existing Text - exclusive
'Plus:  0 = unlike fields
'      256 = do not unlike fields
'    MsgBox ActiveDocument.Bookmarks.Exists(Where)
    If ActiveDocument.Bookmarks.Exists(Where) And What = "none" Then
        ActiveDocument.Bookmarks(Where).Select
        Selection.MoveEnd Unit:=wdLine, Count:=-1
        On Error Resume Next
        Selection.Range.Cut
        If Not ActiveDocument.Bookmarks.Exists(Where) Then
            ActiveDocument.Bookmarks.Add Where
        End If
        On Error GoTo -1: On Error GoTo 0
    End If
    If ActiveDocument.Bookmarks.Exists(Where) And ActiveDocument.Bookmarks.Exists(What) And What <> "none" Then
        ActiveDocument.Bookmarks(What).Select
        On Error Resume Next
        Selection.Fields.Update
        On Error GoTo -1: On Error GoTo 0
        ActiveDocument.Bookmarks(What).Select
        Selection.Range.Fields.Update
        
     'This was added because an error occurred 4605 This method or property is not available because the document is locked for editing
       If ActiveDocument.ProtectionType = 1 Then
       ActiveDocument.Unprotect
       End If
        Selection.Range.Copy
        On Error GoTo PasteFail   'Added to catch RunTime error 4605 when the copy section is empty RH 8/20/2018
        ActiveDocument.Bookmarks(Where).Select
        ActiveDocument.Bookmarks("\EndOfSel").Select
        Selection.MoveEnd Unit:=wdLine, Count:=-1
        Selection.Range.Paste
    End If
PasteFail:
        If Err.Number = 4605 Then  'clipboard is empty or not valid
            DoEvents
            Resume Next
        End If
End Sub

' InQuest injected base64 decoded content
' 0>'-
' jZ N
' bq*^
' jZ N
' jZ Z)
' *'v+b
' *'v+b
' jZ N
' Szjej
' B	+hrD
' jw"jV
' +-jw
' i @"w
' *+.'
' t*'v+b
' t*'v+b
' 'jR'

INQUEST-PP=macro
