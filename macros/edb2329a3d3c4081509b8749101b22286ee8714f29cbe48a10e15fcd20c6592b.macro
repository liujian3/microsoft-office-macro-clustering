Attribute VB_Name = "Feuil1"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Feuil2"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Feuil5"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True

Attribute VB_Name = "Feuil6"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True

Attribute VB_Name = "Module2"

Sub ListeDeroulante()
''' Cette fonction sert |fffd| d|fffd|rouler les listes d|fffd|roulantes. Il s'agit d'une image situ|fffd|e dans une autre colonne. '''
''' Il s'agit donc de d|fffd|filer une liste d|fffd|roulante provenant d'une autre colonne que l'image '''
Dim Ligne, Colonne As Integer 'Initilisation de variable

Ligne = ActiveSheet.Shapes(Application.Caller).TopLeftCell.Row 'Ligne de la liste qui est appel|fffd|e
Colonne = ActiveSheet.Shapes(Application.Caller).TopLeftCell.Column - 1 'Colonne juste avant la liste qui est appel|fffd|e

ActiveSheet.Cells(Ligne, Colonne).Select 'S|fffd|lection la colonne ou se situe la r|fffd|elle liste
SendKeys ("%{Down}") 'Fait fl|fffd|che par en bas pour afficher les entr|fffd|es.
End Sub

Sub BoutonAjoutLigne()
''' Cette fonction sert |fffd| ajouter une ligne chaque fois qu'un utilisateur appui sur un bouton d'ajout de ligne '''
    ActiveSheet.Unprotect ("Soleil")
    
    Dim Ligne As Integer

    Ligne = ActiveSheet.Shapes(Application.Caller).TopLeftCell.Row 'Donne la ligne d'o|fffd| vient le clique

    Rows(Ligne - 2).Select ' S|fffd|lection la ligne 2 ligne au-dessus de l'appel (bouton)
    Selection.Copy 'Copie la ligne
    Selection.Insert Shift:=xlDown 'Insert en-dessous
    Rows(Ligne - 1).Select 'S|fffd|lection la ligne rajout|fffd|e
    Selection.ClearContents 'Suprime toutes les entr|fffd|es pour clearer
    ActiveSheet.Protect ("Soleil"), AllowDeletingRows:=True
End Sub

Sub BoutonAjoutActivite()
''' Cette fonction sert |fffd| ajouter une ligne chaque fois qu'un utilisateur appui sur un bouton d'ajout de ligne '''
    ActiveSheet.Unprotect ("Soleil")
    
    Dim Ligne As Integer

    Ligne = ActiveSheet.Shapes(Application.Caller).TopLeftCell.Row 'Donne la ligne d'o|fffd| vient le clique

    Rows(Ligne - 2).Select ' S|fffd|lection la ligne 2 ligne au-dessus de l'appel (bouton)
    Selection.Copy 'Copie la ligne
    Selection.Insert Shift:=xlDown 'Insert en-dessous
    Rows(Ligne - 1).Select 'S|fffd|lection la ligne rajout|fffd|e
    Selection.ClearContents 'Suprime toutes les entr|fffd|es pour clearer
    Range(Cells(Ligne - 2, 1), Cells(Ligne - 2, 29)).Borders(xlEdgeBottom).LineStyle = xlNone 'Supprime la bordure de la ligne au-dessus
    Range(Cells(Ligne - 1, 1), Cells(Ligne - 1, 29)).Borders(xlEdgeBottom).LineStyle = xlContinuous 'Rajoute une bordure |fffd| la ligne au-dessus du bouton
    Cells(Ligne - 1, 1).FormulaR1C1 = "|fffd| " 'Rajoute une puce
    
    ActiveSheet.Protect ("Soleil"), AllowDeletingRows:=True
End Sub

Sub BoutonAjoutActif()
''' Cette fonction sert |fffd| ajouter une ligne chaque fois qu'un utilisateur appui sur un bouton d'ajout de ligne '''
    ActiveSheet.Unprotect ("Soleil")
    
    Dim Ligne As Integer

    Ligne = ActiveSheet.Shapes(Application.Caller).TopLeftCell.Row 'Donne la ligne d'o|fffd| vient le clique

    Rows(Ligne - 2).Select ' S|fffd|lection la ligne 2 ligne au-dessus de l'appel (bouton)
    Selection.Copy 'Copie la ligne
    Selection.Insert Shift:=xlDown 'Insert en-dessous
    Rows(Ligne - 1).Select 'S|fffd|lection la ligne rajout|fffd|e
    Selection.ClearContents 'Suprime toutes les entr|fffd|es pour clearer
    
    Ligne = ActiveSheet.Shapes(Application.Caller).TopLeftCell.Row - 2 'Rafraichit la variable Ligne
    ActiveSheet.Cells(8, 8).Formula = "=MAX(X15:X" & Ligne & ")" 'Remplace la formule pour la cote D (g|fffd|n|fffd|ral)
    ActiveSheet.Cells(8, 10).Formula = "=MAX(Z15:Z" & Ligne & ")" 'Remplace la formule pour la cote I (g|fffd|n|fffd|ral)
    ActiveSheet.Cells(8, 12).Formula = "=MAX(AB15:AB" & Ligne & ")" 'Remplace la formule pour la cote C (g|fffd|n|fffd|ral)
    ActiveSheet.Protect ("Soleil"), AllowDeletingRows:=True
End Sub

Private Sub conversion(ByRef nbreDivision, ByRef LigneServiceAffaires, ByRef ColonneListeDeroulanteDivision)
''' Fonction permettant de traduire le range des divisions d'affaires dans un langage que la formule ValidateList d'Excel comprendra '''
    If nbreDivision = 1 Then
        Liste = "=Listes!" & "J" & LigneServiceAffaires
    ElseIf nbreDivision = 2 Then
        Liste = "=Listes!" & "J" & LigneServiceAffaires & ":" & "K" & LigneServiceAffaires
    ElseIf nbreDivision = 3 Then
        Liste = "=Listes!" & "J" & LigneServiceAffaires & ":" & "L" & LigneServiceAffaires
    ElseIf nbreDivision = 4 Then
        Liste = "=Listes!" & "J" & LigneServiceAffaires & ":" & "M" & LigneServiceAffaires
    ElseIf nbreDivision = 5 Then
        Liste = "=Listes!" & "J" & LigneServiceAffaires & ":" & "N" & LigneServiceAffaires
    ElseIf nbreDivision = 6 Then
        Liste = "=Listes!" & "J" & LigneServiceAffaires & ":" & "O" & LigneServiceAffaires
    ElseIf nbreDivision = 7 Then
        Liste = "=Listes!" & "J" & LigneServiceAffaires & ":" & "P" & LigneServiceAffaires
    ElseIf nbreDivision = 8 Then
        Liste = "=Listes!" & "J" & LigneServiceAffaires & ":" & "Q" & LigneServiceAffaires
    ElseIf nbreDivision = 9 Then
        Liste = "=Listes!" & "J" & LigneServiceAffaires & ":" & "R" & LigneServiceAffaires
    ElseIf nbreDivision = 10 Then
        Liste = "=Listes!" & "J" & LigneServiceAffaires & ":" & "S" & LigneServiceAffaires
    ElseIf nbreDivision = 11 Then
        Liste = "=Listes!" & "J" & LigneServiceAffaires & ":" & "T" & LigneServiceAffaires
    ElseIf nbreDivision = 12 Then
        Liste = "=Listes!" & "J" & LigneServiceAffaires & ":" & "U" & LigneServiceAffaires
    ElseIf nbreDivision = 13 Then
        Liste = "=Listes!" & "J" & LigneServiceAffaires & ":" & "V" & LigneServiceAffaires
    ElseIf nbreDivision = 14 Then
        Liste = "=Listes!" & "J" & LigneServiceAffaires & ":" & "W" & LigneServiceAffaires
    ElseIf nbreDivision = 15 Then
        Liste = "=Listes!" & "J" & LigneServiceAffaires & ":" & "X" & LigneServiceAffaires
    ElseIf nbreDivision = 16 Then
        Liste = "=Listes!" & "J" & LigneServiceAffaires & ":" & "Y" & LigneServiceAffaires
    ElseIf nbreDivision = 17 Then
        Liste = "=Listes!" & "J" & LigneServiceAffaires & ":" & "Z" & LigneServiceAffaires
    ElseIf nbreDivision = 18 Then
        Liste = "=Listes!" & "J" & LigneServiceAffaires & ":" & "AA" & LigneServiceAffaires
    ElseIf nbreDivision = 19 Then
        Liste = "=Listes!" & "J" & LigneServiceAffaires & ":" & "AB" & LigneServiceAffaires
    ElseIf nbreDivision = 20 Then
        Liste = "=Listes!" & "J" & LigneServiceAffaires & ":" & "AC" & LigneServiceAffaires
    ElseIf nbreDivision = 21 Then
        Liste = "=Listes!" & "J" & LigneServiceAffaires & ":" & "AD" & LigneServiceAffaires
    ElseIf nbreDivision = 22 Then
        Liste = "=Listes!" & "J" & LigneServiceAffaires & ":" & "AE" & LigneServiceAffaires
    ElseIf nbreDivision = 23 Then
        Liste = "=Listes!" & "J" & LigneServiceAffaires & ":" & "AF" & LigneServiceAffaires
    ElseIf nbreDivision = 24 Then
        Liste = "=Listes!" & "J" & LigneServiceAffaires & ":" & "AG" & LigneServiceAffaires
    ElseIf nbreDivision = 25 Then
        Liste = "=Listes!" & "J" & LigneServiceAffaires & ":" & "AH" & LigneServiceAffaires
    ElseIf nbreDivision = 26 Then
        Liste = "=Listes!" & "J" & LigneServiceAffaires & ":" & "AI" & LigneServiceAffaires
    ElseIf nbreDivision = 27 Then
        Liste = "=Listes!" & "J" & LigneServiceAffaires & ":" & "AJ" & LigneServiceAffaires
    End If
    
    Call ValidateList(Liste, ColonneListeDeroulanteDivision) 'Appel le fonction qui permettra de modifier les entr|fffd|es des listes d|fffd|roulantes
End Sub

Private Sub ValidateList(ByRef Liste, ByRef ColonneListeDeroulanteDivision)
''' Fonction permettant de remplir les diff|fffd|rentes listes d|fffd|roulantes '''
ActiveSheet.Unprotect ("Soleil")
Fleche = ActiveSheet.Shapes(Application.Caller).TopLeftCell.Row '|fffd| partir de la fl|fffd|che qui est cliqu|fffd|e

    With Cells(Fleche, ColonneListeDeroulanteDivision).Validation
        .Modify Type:=xlValidateList, Operator:=xlBetween, Formula1:=Liste 'remplit les fl|fffd|ches avec les arguments de liste (conversion)
    End With
ActiveSheet.Protect ("Soleil"), AllowDeletingRows:=True
End Sub

Sub listeDynamique()
''' Cette fonction sert |fffd| remplir les listes d|fffd|roulantes de divisions '''
nbreDivision = 0
LigneServiceAffaires = 1
DernierServiceAffaires = 40
DivisionAffaires = 9
DerniereDivisionAffaires = 36
LigneListeDeroulante = ActiveSheet.Shapes(Application.Caller).TopLeftCell.Row

Dim cell As String

    While LigneServiceAffaires < DernierServiceAffaires
    ''' Boucle sur tous les services d'affaires |fffd|num|fffd|r|fffd|s dans l'onglet Listes '''
    LigneServiceAffaires = LigneServiceAffaires + 1
        
        If LigneListeDeroulante = 10 Then
        ''' D|fffd|termine les colonnes en fonction de quelle liste (division) a |fffd|t|fffd| appel|fffd|e '''
            ColonneListeDeroulanteService = 1
            ColonneListeDeroulanteDivision = 14
        Else
            ColonneListeDeroulanteService = 4
            ColonneListeDeroulanteDivision = 6
        End If
        
        If Sheets("Listes").Cells(LigneServiceAffaires, 9).Value = ActiveSheet.Cells(LigneListeDeroulante, ColonneListeDeroulanteService).Value Then
        ''' Si la valeur de la liste d|fffd|roulante des services d'affaires |fffd|gal une valeur dans la liste de services d'affaires '''
            While DivisionAffaires < DerniereDivisionAffaires
            ''' Boucle sur les divisions d'affaires disponibles dans l'onglet liste pour d|fffd|terminer combien il y a de divisions li|fffd|es au service d'affaires '''
                DivisionAffaires = DivisionAffaires + 1
                
                If Sheets("Listes").Cells(LigneServiceAffaires, DivisionAffaires).Value <> "" Then
                ''' Si la division d'affaires n'est pas une cellule vide, incr|fffd|mente le nbreDivision
                    nbreDivision = nbreDivision + 1
                Else
                    'Ne fait rien
                End If
            Wend
            
            Call conversion(nbreDivision, LigneServiceAffaires, ColonneListeDeroulanteDivision) 'Appel la fonction conversion
        End If
    Wend
    
    ActiveSheet.Cells(LigneListeDeroulante, ColonneListeDeroulanteDivision).Select
    SendKeys "%{down}"
End Sub

Sub Processus()
''' Fonction attribu|fffd| au bouton "Cr|fffd|er un nouveau processus" '''
    Sheets("Gabarit").Visible = True 'Rend la feuille du gabarit visible pour que la copie soit visible aussi
    Sheets("Gabarit").Copy After:=Sheets(ThisWorkbook.Sheets.Count) 'colle une copie du gabarit apr|fffd|s le dernier onglet
    Sheets("Gabarit").Visible = False 'Masque le gabarit
End Sub

Sub PDF()
''' Fonction attribu|fffd| au bouton "Convertir en format PDF" '''
    ActiveSheet.ExportAsFixedFormat Type:=xlTypePDF, IgnorePrintAreas:=False, OpenAfterPublish:=True
End Sub
Attribute VB_Name = "ThisWorkbook"
Attribute VB_Base = "0{00020819-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True


INQUEST-PP=macro
