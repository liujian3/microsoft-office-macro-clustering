Attribute VB_Name = "Funktionen"
Function Tags_einfuegen(strStart As String, strEnd As String, intRueck As Integer)
Dim rng As Range
Dim Auswahl As Range
Dim Auswahl_neu As Range
Dim Auswahl_neu2 As Range
Dim rng2 As Range
On Error GoTo ohneMark
Options.PasteSmartCutPaste = False
Set Auswahl = ActiveDocument.Range(Selection.Start, Selection.End)
Set rng = ActiveDocument.Range(Selection.Range.End - 1, Selection.Range.End)
'hier einf|fffd|gen: wenn letztes Zeichen Paragraph, Leerzeichen - Selection.Range -1,
If rng = " " Or rng = Chr(13) Then
    'rng.Delete
    Set Auswahl_neu = ActiveDocument.Range(Auswahl.Start, Auswahl.End - 1)
    Auswahl_neu.Select
    Set rng2 = ActiveDocument.Range(Auswahl_neu.End - 1, Auswahl_neu.End)
        If rng2 = " " Then
        rng2.Delete
        'Set Auswahl_neu2 = ActiveDocument.Range(Auswahl_neu.Start, Auswahl_neu.End - 1)
        'Auswahl_neu2.Select
    End If
End If
'Auswahl_neu.Select

On Error GoTo ohneMark
    With Selection
        .Cut
        .TypeText Text:=strStart & strEnd
        .MoveLeft Unit:=wdCharacter, Count:=intRueck
        .Paste
        .MoveRight Unit:=wdCharacter, Count:=intRueck
    End With
    Exit Function
ohneMark:
    Selection.TypeText Text:=strStart & strEnd
    Selection.MoveLeft Unit:=wdCharacter, Count:=intRueck
End Function
Attribute VB_Name = "LaTeX"
'Anpassung der LaTeX.dot an Word2010 vom Medienberatungszentrum der Schloss-Schule Ilvesheim, Michael Sch|fffd|ffler
'modifiziert von Barbara Henn
Sub MatheMatrix(control As IRibbonControl)
    Selection.TypeText Text:="\mat{" & Chr(11)
    Selection.TypeText Text:=" &  &  \\" & Chr(11)
    Selection.TypeText Text:=" &  &  \\" & Chr(11)
    Selection.TypeText Text:=" &  & }"
    Selection.MoveUp Unit:=wdLine, Count:=2
    Selection.MoveLeft Unit:=wdCharacter, Count:=7
   End Sub
Sub MatheMatrix2(control As IRibbonControl)
    Selection.TypeText Text:="\mat{" & Chr(11)
    Selection.TypeText Text:=" &  \\" & Chr(11)
    Selection.TypeText Text:=" &  }"
    Selection.MoveUp Unit:=wdLine, Count:=1
    Selection.MoveLeft Unit:=wdCharacter, Count:=5
   End Sub
Sub MatheSpaltenVektor(control As IRibbonControl)
    Selection.TypeText Text:="\mat{ \\  \\ }"
    Selection.MoveLeft Unit:=wdCharacter, Count:=9
   End Sub
Sub MatheVektorSymbol(control As IRibbonControl)
    On Error GoTo ohneMark
    Selection.Cut
    Selection.TypeText Text:="\vec{}"
    Selection.MoveLeft Unit:=wdCharacter, Count:=1
    Selection.Paste
    Selection.MoveRight Unit:=wdCharacter, Count:=1
    Selection.TypeText Text:=""
    Exit Sub
ohneMark:
    Selection.TypeText Text:="\vec{}"
    Selection.MoveLeft Unit:=wdCharacter, Count:=1
End Sub
Sub MatheBruch(control As IRibbonControl)
    Selection.TypeText Text:="\frac{}{}"
    Selection.MoveLeft Unit:=wdCharacter, Count:=3
   
   End Sub
Sub MatheWurzel(control As IRibbonControl)
    On Error GoTo ohneMark
    Selection.Cut
    Selection.TypeText Text:="\sqrt[]{}"
    Selection.MoveLeft Unit:=wdCharacter, Count:=1
    Selection.Paste
    Selection.MoveRight Unit:=wdCharacter, Count:=1
    Selection.TypeText Text:=""
    Exit Sub
ohneMark:
    Selection.TypeText Text:="\sqrt[]{}"
    Selection.MoveLeft Unit:=wdCharacter, Count:=3
   
   End Sub
   Sub QuadratWurzel(control As IRibbonControl)
    On Error GoTo ohneMark
    Selection.Cut
    Selection.TypeText Text:="\sqrt{}"
    Selection.MoveLeft Unit:=wdCharacter, Count:=1
    Selection.Paste
    Selection.MoveRight Unit:=wdCharacter, Count:=1
    Selection.TypeText Text:=""
    Exit Sub
ohneMark:
    Selection.TypeText Text:="\sqrt{}"
    Selection.MoveLeft Unit:=wdCharacter, Count:=1
   
   End Sub
Sub MatheIntegral(control As IRibbonControl)
    Selection.TypeText Text:="\int_{}^{} "
    Selection.MoveLeft Unit:=wdCharacter, Count:=5
    
    End Sub
Sub Molekuel(control As IRibbonControl)
    On Error GoTo ohneMark
    Selection.Cut
    Selection.TypeText Text:="\chemfig{}"
    Selection.MoveLeft Unit:=wdCharacter, Count:=1
    Selection.Paste
    Exit Sub
ohneMark:
    Selection.TypeText Text:="\chemfig{}"
    Selection.MoveLeft Unit:=wdCharacter, Count:=1
    End Sub
Sub Lewis(control As IRibbonControl)
    On Error GoTo ohneMark
    Selection.Cut
    Selection.TypeText Text:="\lewis{}"
    Selection.MoveLeft Unit:=wdCharacter, Count:=1
    Selection.Paste
    Exit Sub
ohneMark:
    Selection.TypeText Text:="\lewis{}"
    Selection.MoveLeft Unit:=wdCharacter, Count:=1
    End Sub

Sub MatheSumme(control As IRibbonControl)
    Selection.TypeText Text:="\sum_{}^{} "
    Selection.MoveLeft Unit:=wdCharacter, Count:=5

    End Sub
Sub MatheProdukt(control As IRibbonControl)
    Selection.TypeText Text:="\prod_{}^{} "
    Selection.MoveLeft Unit:=wdCharacter, Count:=5
    End Sub
Sub MatheBinom(control As IRibbonControl)
    Selection.TypeText Text:="\binom{}{} "
    Selection.MoveLeft Unit:=wdCharacter, Count:=4
End Sub
' Mathe Symbole Griechisches Alphabet
Sub MatheSymAlpha(control As IRibbonControl)
    Selection.TypeText Text:="\alpha "
    End Sub
Sub MatheSymBeta(control As IRibbonControl)
    Selection.TypeText Text:="\beta "
    End Sub
Sub MatheSymGamma(control As IRibbonControl)
    Selection.TypeText Text:="\gamma "
    End Sub
Sub MatheSymDelta(control As IRibbonControl)
    Selection.TypeText Text:="\delta "
    End Sub
Sub MatheSymEpsilon(control As IRibbonControl)
    Selection.TypeText Text:="\epsilon "
    End Sub

' Mathe Symbole Mengen
Sub MathSymTeilmenge(control As IRibbonControl)
    Selection.TypeText Text:="\subseteq "
    End Sub
Sub MathSymIn(control As IRibbonControl)
    Selection.TypeText Text:="\in "
    End Sub
Sub MathSymNichtIn(control As IRibbonControl)
    Selection.TypeText Text:="\not\in "
    End Sub
Sub MathSymVereinigung(control As IRibbonControl)
    Selection.TypeText Text:="\cup "
    End Sub
Sub MathSymDurchschnitt(control As IRibbonControl)
    Selection.TypeText Text:="\cap "
    End Sub
Sub MathSymKlammern(control As IRibbonControl)
    On Error GoTo ohneMark
    Selection.Cut
    Selection.TypeText Text:="\{  \} "
    Selection.MoveLeft Unit:=wdCharacter, Count:=4
    Selection.Paste
    Exit Sub
ohneMark:
    Selection.TypeText Text:="\{  \} "
    Selection.MoveLeft Unit:=wdCharacter, Count:=4
    End Sub

' Mathe Symbole Vergleichsoperatoren
Sub MathSymKleiner(control As IRibbonControl)
    Selection.TypeText Text:="\le "
    End Sub
Sub MathSymGroesser(control As IRibbonControl)
    Selection.TypeText Text:="\ge "
    End Sub
Sub MathSymUngleich(control As IRibbonControl)
    Selection.TypeText Text:="\not= "
    End Sub
Sub MathSymAnn|fffd|hernd(control As IRibbonControl)
    Selection.TypeText Text:="\approx "
    End Sub

' Mathe Symbole Logische Operatoren
Sub MathSymLUnd(control As IRibbonControl)
    Selection.TypeText Text:="\wedge "
    End Sub
Sub MathSymLOder(control As IRibbonControl)
    Selection.TypeText Text:="\vee "
    End Sub
Sub MathSymLImpliziert(control As IRibbonControl)
    Selection.TypeText Text:="\Rightarrow "
    End Sub
Sub MathSymLAequivalent(control As IRibbonControl)
    Selection.TypeText Text:="\Leftrightarrow "
    End Sub
' Mathe Symbole Sonstiges
Sub MathSymSGeschweifte(control As IRibbonControl)
    On Error GoTo ohneMark
    Selection.Cut
    Selection.TypeText Text:="{  } "
    Selection.MoveLeft Unit:=wdCharacter, Count:=3
    Selection.Paste
    Exit Sub
ohneMark:
    Selection.TypeText Text:="{  } "
    Selection.MoveLeft Unit:=wdCharacter, Count:=3
    End Sub
Sub MathSymSEckige(control As IRibbonControl)
    On Error GoTo ohneMark
    Selection.Cut
    Selection.TypeText Text:="[  ] "
    Selection.MoveLeft Unit:=wdCharacter, Count:=3
    Selection.Paste
    Exit Sub
ohneMark:
    Selection.TypeText Text:="[  ] "
    Selection.MoveLeft Unit:=wdCharacter, Count:=3
    End Sub
Sub InfoX(control As IRibbonControl)
    frmInfoX.Show
End Sub
Sub MathSymSEntspricht(control As IRibbonControl)
    Selection.TypeText Text:="\hat{=} "
    End Sub
Sub MathSymSPfeil(control As IRibbonControl)
    Selection.TypeText Text:="\to "
    End Sub
Sub MathSymSInfty(control As IRibbonControl)
    Selection.TypeText Text:="\infty "
    End Sub
Sub MathSymSPlusMinus(control As IRibbonControl)
    Selection.TypeText Text:="\pm "
    End Sub
Sub MathSymSStrecke(control As IRibbonControl)
   On Error GoTo ohneMark
    Selection.Cut
    Selection.TypeText Text:="\overline{} "
    Selection.MoveLeft Unit:=wdCharacter, Count:=2
    Selection.Paste
    Exit Sub
ohneMark:
    Selection.TypeText Text:="\overline{} "
    Selection.MoveLeft Unit:=wdCharacter, Count:=2
   End Sub
Sub MathSymSWinkel(control As IRibbonControl)
    Selection.TypeText Text:="\angle "
    End Sub
Sub MathSymSTriangle(control As IRibbonControl)
    Selection.TypeText Text:="\triangle "
    End Sub
Sub LaTeXTags(control As IRibbonControl) 'LaTeX Tags einf|fffd|gen
    Tags_einfuegen "<L>", "</L>", 4
End Sub

Attribute VB_Name = "ThisDocument"
Attribute VB_Base = "0{00020906-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True

' InQuest injected base64 decoded content
' 3z{k

INQUEST-PP=macro
