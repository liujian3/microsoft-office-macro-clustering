Attribute VB_Name = "Berechnung"
'######################################################################################
' Programm erstellt am 29.8.08
' Autor: Bruno Klumpp
'
' kl 26.09.17  Versionierung der pdf Dateien (Deckbl|fffd|tter) eingef|fffd|hrt
' kl 26.01.17  Versionierung eingef|fffd|hrt
'              Neuer Parameter Version f|fffd|r manuellen Start auf Parameterseite
'              Dateiname um Version erg|fffd|nzt
'              PL Bezeichnung, PL Nummer um Version erg|fffd|nzt
'              F|fffd|r Automatik wird die Version aus Tabelle gelesen
'
' kl 26.01.17  Dental entfernt und Thorax eingef|fffd|hrt
'
' AD 20.09.19  Preislistenerstellung f|fffd|r Dental, Wound und Service rausgenommen.
'
'######################################################################################

Option Explicit

Dim db As Object
Dim rs As Object
Dim db2 As Object ' kl 26.1.17 zum Lesen der g|fffd|ltigen Version
Dim rs2 As Object ' kl 26.1.17 zum Lesen der g|fffd|ltigen Version
Dim strSQL As String
Dim ZaehlerSaetzeHauptschleife As Integer

Dim Sprache As String
Dim WortAusgabe As String
Dim WortPreisliste As String
Dim codezeigen As Boolean
Dim zusatzdatenzeigen As Boolean

Dim Aufschlag As Double
Dim r, s As Long
Dim n As Integer
Dim c As Long
Dim m As Long
Dim x As Long
Dim y As Long
Dim i As Long
Dim erste, erster As Integer
Dim anzahl_gelesene_zeilen As Integer
Dim letzter_Seitenwechsel As Integer
Dim ZeilenVorSeitenende As Integer

Dim AutomatikAblagePfad As String
Dim automatisch_gestartet As Boolean

Dim Seitenzaehler As Integer
Dim Parameter_Kunde As String
Dim Parameter_einzeilig As Boolean
Dim Parameter_TeilweiseAnzeigeSteuerzeichen As Boolean
Dim Parameter_Stichtag As String
Dim Parameter_Strukturkuerzel As String
Dim Parameter_Kuerzel_Preisliste As String
Dim Parameter_Name_Preisliste As String
Dim Parameter_Preisbuch As String
Dim Parameter_Sprache As String
Dim Parameter_Region As String
Dim Parameter_Liste_mit_HK As Boolean
Dim Parameter_Code_zeigen As Boolean
Dim Parameter_Zusatzdaten_zeigen As Boolean
Dim Parameter_Jahr As String
Dim Parameter_Version As Integer ' 0 bis 9, eingef|fffd|hrt kl 26.1.17

Dim KatalogNummer(9) As String
Dim KatalogBez(9) As String

Dim MerkerProduktTitel As String ' F|fffd|r Wiederholung einer Produkt|fffd|berschrift
Dim HK_Umbruch As Boolean ' Seitenumbruch wg Hurenkindern
Dim Umbruch_Artikel As String ' Artikelnummer, bei der vorab umgeborchen werden soll
Dim HK_Umbruch2 As Boolean ' Seitenumbruch wg Hurenkindern
Dim Umbruch_Artikel2 As String ' Artikelnummer, bei der vorab umgeborchen werden soll

Dim RAArtikel(1000) As String
Dim RARabatt(1000) As Double
Dim RAPreisgruppe(1000) As String
Dim RARabattPG(1000) As Double
Dim RAArtikelPreisliste(1000) As String
Dim RARabattAP(1000) As Double
Dim RAPgPl(1000) As String
Dim RARabattPgPl(1000) As Double
Dim PMRegionalaufschlag(2000) As Double
Dim GHArtikel(1000) As String
Dim GHFaktor(1000) As Double
Dim GHSchwelle(1000) As Long
Dim GHSchwellenart(1000) As Integer
Dim GHLPreis(1000) As Double

Dim VLArtnr(3000) As String
Dim VLAnzahl(3000) As Integer


Dim RegionalpreisaufschlagArtikel(2000) As String
Dim RegionalpreisaufschlagFaktor(2000)  As Double
Dim AnzahlRegionalpreisaufschlaege As Integer
Dim Anzahl_GH_Lesen As Integer
Dim gewaehlteRegion As String

Dim AnzahlArtikelRabatte, AnzahlKundePreisgruppe, AnzahlRabArtikelPreisliste, AnzahlPgPl As Integer
Dim NettoPreisliste As Boolean
Dim Kundenpreisliste As String
Dim StaffelErkannt As Boolean
Dim Verkaufseinheit As String

Dim PLNameXX As String ' zur Erkennung einer Preisliste und Ausschluss einzelner Artikel

Sub AutoPL()
 
  AutomatikAblagePfad = ThisWorkbook.Path
      
      automatisch_gestartet = True
      Parameter_einlesen ' einmalig lesen f|fffd|r konstante Parameter
      Katalogbezeichnungen_anlegen
  '  Parameter_Stichtag = CStr(Year(DateAdd("d", -1, Now))) _
   '                      & Right("00" & CStr(Month(DateAdd("d", -1, Now))), 2) _
  '                       & Right("00" & CStr(Day(DateAdd("d", -1, Now))), 2)
      Parameter_Region = ""
      ThisWorkbook.Sheets("Preisliste").Activate ' irgend ein Blatt w|fffd|hlen
      Application.DisplayAlerts = False
      
   
      Sheets("PL_Erstellung").Visible = xlSheetVeryHidden
      Sheets("Seitenkoepfe").Visible = xlSheetVeryHidden
       
   '   Sheets("PL_Erstellung").Visible = xlSheetVisible
     ' Sheets("PL_Erstellung").Visible = xlSheetVeryHidden

    '  ThisWorkbook.Sheets("PL_Erstellung").Hide ' Parameterblatt entfernen
      Application.DisplayAlerts = True
      
    '  Stop
      
      ' alle Listen mit und ohne HK
      Parameter_Sprache = "D"
      Auto_alle_PL_nach_Preislistenart ("DE_")
      Parameter_Sprache = "E"
      Auto_alle_PL_nach_Preislistenart ("EN_")
      
      'nicht ben|fffd|tigte Dateien verschieben

      ActiveWorkbook.SaveAs Filename:=AutomatikAblagePfad & "Automatik_Preisliste_mit_Textauswahl_1.xlsm"
      
      Dateien_verschieben_Excel
      Dateien_verschieben_PDF
         
      ActiveWorkbook.Close
      Application.Quit
      SendKeys "%{F4}", True

End Sub

Private Sub Dateien_verschieben_Excel()

    Dim strQuelle As String
    Dim strZiel As String
    Dim objFSO As Object
    
    Dim i As Long
    Dim x(20) As String
    
    On Error Resume Next
    
    'nicht ben|fffd|tigte Excel-Dateien
    x(0) = "A-Preise_DE_CHI_" & Parameter_Jahr & ".xls"
    x(1) = "A-Preise_DE_GESAMT_" & Parameter_Jahr & ".xls"
    x(2) = "A-Preise_DE_GYN_" & Parameter_Jahr & ".xls"
    x(3) = "A-Preise_DE_HNO_" & Parameter_Jahr & ".xls"
    x(4) = "A-Preise_DE_PFL_" & Parameter_Jahr & ".xls"
    x(5) = "D-Preise_DE_CHI_" & Parameter_Jahr & ".xls"
    x(6) = "D-Preise_DE_GESAMT_" & Parameter_Jahr & ".xls"
    x(7) = "D-Preise_DE_GYN_" & Parameter_Jahr & ".xls"
    x(8) = "D-Preise_DE_HNO_" & Parameter_Jahr & ".xls"
    x(9) = "D-Preise_DE_PFL_" & Parameter_Jahr & ".xls"
    x(10) = "Grosshaendler-Preise_EN_CHI_" & Parameter_Jahr & ".xls"
    x(11) = "Grosshaendler-Preise_EN_GESAMT_" & Parameter_Jahr & ".xls"
    x(12) = "Grosshaendler-Preise_EN_GYN_" & Parameter_Jahr & ".xls"
    x(13) = "Grosshaendler-Preise_EN_HNO_" & Parameter_Jahr & ".xls"
    x(14) = "Grosshaendler-Preise_EN_PFL_" & Parameter_Jahr & ".xls"
    ' neu Kl 27.9.16
    x(15) = "A-Preise_DE_MDP_" & Parameter_Jahr & ".xls"
    x(16) = "D-Preise_DE_MDP_" & Parameter_Jahr & ".xls"
    x(17) = "Grosshaendler-Preise_EN_MDP_" & Parameter_Jahr & ".xls"
    ' neu Kl 03.11.16
    x(18) = "A-Preise_DE_THORAX_" & Parameter_Jahr & ".xls"
    x(19) = "D-Preise_DE_THORAX_" & Parameter_Jahr & ".xls"
    x(20) = "Grosshaendler-Preise_EN_THORAX_" & Parameter_Jahr & ".xls"
    
'    x(1) = "A-Preise_DE_DENTAL_" & Parameter_Jahr & ".xls"
'    x(6) = "A-Preise_DE_SERVICE_" & Parameter_Jahr & ".xls"
'    x(5) = "A-Preise_DE_OEM_2016.xls"
'    x(7) = "A-Preise_DE_WOUND_" & Parameter_Jahr & ".xls"
'    x(9) = "D-Preise_DE_DENTAL_" & Parameter_Jahr & ".xls"
'    x(14) = "D-Preise_DE_OEM_2016.xls"
'    x(14) = "D-Preise_DE_SERVICE_" & Parameter_Jahr & ".xls"
'    x(15) = "D-Preise_DE_WOUND_" & Parameter_Jahr & ".xls"
'    x(16) = "Grosshaendler-Preise_DE_CHI_2016.xls"
'    x(17) = "Grosshaendler-Preise_DE_SERVICE_" & Parameter_Jahr & ".xls"
'    x(19) = "Grosshaendler-Preise_EN_DENTAL_" & Parameter_Jahr & ".xls"
'    x(23) = "Grosshaendler-Preise_EN_SERVICE_" & Parameter_Jahr & ".xls"
'    x(24) = "Grosshaendler-Preise_EN_WOUND_" & Parameter_Jahr & ".xls"
'    x(25) = "Grosshaendler-Preise_EN_OEM_2016.xls"
    
'    x(29) = "A-Preise_DE_GESAMT_2016_Inland.xls"
'    x(30) = "A-Preise_DE_WOUND_Inland.xls"
'    x(31) = "A-Preise_EN_GESAMT_2016_Inland.xls"
'    x(32) = "A-Preise_EN_WOUND_Inland.xls"
'    x(33) = "B-Preise_DE_GESAMT_2016_Inland.xls"
'    x(34) = "B-Preise_DE_WOUND_Inland.xls"
'    x(35) = "B-Preise_EN_GESAMT_2016_Inland.xls"
'    x(36) = "B-Preise_EN_WOUND_Inland.xls"
'    x(37) = "C-Preise_DE_GESAMT_2016_Inland.xls"
'    x(38) = "C-Preise_DE_WOUND_Inland.xls"
'    x(39) = "C-Preise_EN_GESAMT_2016_Inland.xls"
'    x(40) = "C-Preise_EN_WOUND_Inland.xls"
'    x(41) = "D-Preise_DE_GESAMT_2016_Inland.xls"
'    x(42) = "D-Preise_DE_WOUND_Inland.xls"
'    x(43) = "D-Preise_EN_GESAMT_2016_Inland.xls"
'    x(44) = "D-Preise_EN_WOUND_Inland.xls"
'    x(45) = "Grosshaendler-Preise_EN_GESAMT_2016_Inland.xls"
'    x(46) = "Grosshaendler-Preise_EN_WOUND_Inland.xls"
'    x(47) = "Standard-Preise_DE_GESAMT_2016_Inland.xls"
'    x(48) = "Standard-Preise_EN_GESAMT_2016_Inland.xls"
'    x(49) = "Standard-Preise_DE_WOUND_Inland.xls"
'    x(50) = "Standard-Preise_EN_WOUND_Inland.xls"
        
    For i = 0 To 20
    
        'strQuelle = AutomatikAblagePfad & "\Auto_PL\Ergebnisse_Excel\" & x(i)
        
        ' strQuelle = "K:\Marketing\TechDoku\Preislisten\VK_2016\Basis-Listen\Auto_PL\Ergebnisse_Excel\" & x(i)     kl 27.9.16
        strQuelle = "K:\Marketing\TechDoku\Preislisten\VK_" & Parameter_Jahr & "\Basis-Listen\Auto_PL\Ergebnisse_Excel\" & x(i)
        'MsgBox strQuelle
        
'        If Dir(strQuelle) = "" Then
'        Exit Sub
        
        'strZiel = AutomatikAblagePfad & "\Auto_PL\Ergebnisse_Excel\nicht_verwendet\"
        
        ' strZiel = "K:\Marketing\TechDoku\Preislisten\VK_2016\Basis-Listen\Auto_PL\Ergebnisse_Excel\nicht_verwendet\"      kl 27.9.16
        strZiel = "K:\Marketing\TechDoku\Preislisten\VK_" & Parameter_Jahr & "\Basis-Listen\Auto_PL\Ergebnisse_Excel\nicht_verwendet\"
        Set objFSO = CreateObject("Scripting.FileSystemObject")
        objFSO.MoveFile strQuelle, strZiel
        Set objFSO = Nothing
        
    Next i
    
    'Kill "K:\Marketing\TechDoku\Preislisten\VK_2016\Basis-Listen\Auto_PL\Ergebnisse_Excel\*.xls"
    
End Sub

Private Sub Dateien_verschieben_PDF()

    Dim strQuelle As String
    Dim strZiel As String
    Dim objFSO As Object
    
    Dim i As Long
    Dim x(20) As String
    
    On Error Resume Next
    
    'nicht ben|fffd|tigte PDFs
    x(0) = "A-Preise_DE_CHI_" & Parameter_Jahr & ".pdf"
    x(1) = "A-Preise_DE_GESAMT_" & Parameter_Jahr & ".pdf"
    x(2) = "A-Preise_DE_GYN_" & Parameter_Jahr & ".pdf"
    x(3) = "A-Preise_DE_HNO_" & Parameter_Jahr & ".pdf"
    x(4) = "A-Preise_DE_PFL_" & Parameter_Jahr & ".pdf"
    x(5) = "D-Preise_DE_CHI_" & Parameter_Jahr & ".pdf"
    x(6) = "D-Preise_DE_GESAMT_" & Parameter_Jahr & ".pdf"
    x(7) = "D-Preise_DE_GYN_" & Parameter_Jahr & ".pdf"
    x(8) = "D-Preise_DE_HNO_" & Parameter_Jahr & ".pdf"
    x(9) = "D-Preise_DE_PFL_" & Parameter_Jahr & ".pdf"
    x(10) = "Grosshaendler-Preise_EN_CHI_" & Parameter_Jahr & ".pdf"
    x(11) = "Grosshaendler-Preise_EN_GESAMT_" & Parameter_Jahr & ".pdf"
    x(12) = "Grosshaendler-Preise_EN_GYN_" & Parameter_Jahr & ".pdf"
    x(13) = "Grosshaendler-Preise_EN_HNO_" & Parameter_Jahr & ".pdf"
    x(14) = "Grosshaendler-Preise_EN_PFL_" & Parameter_Jahr & ".pdf"
    
    x(15) = "A-Preise_DE_MDP_" & Parameter_Jahr & ".pdf"
    x(16) = "D-Preise_DE_MDP_" & Parameter_Jahr & ".pdf"
    x(17) = "Grosshaendler-Preise_EN_MDP_" & Parameter_Jahr & ".pdf"
    
    x(18) = "A-Preise_DE_THORAX_" & Parameter_Jahr & ".pdf"
    x(19) = "D-Preise_DE_THORAX_" & Parameter_Jahr & ".pdf"
    x(20) = "Grosshaendler-Preise_EN_THORAX_" & Parameter_Jahr & ".pdf"
    
'    x(1) = "A-Preise_DE_DENTAL_" & Parameter_Jahr & ".pdf"
'    x(5) = "A-Preise_DE_OEM_2016.pdf"
'    x(6) = "A-Preise_DE_SERVICE_" & Parameter_Jahr & ".pdf"
'    x(7) = "A-Preise_DE_WOUND_" & Parameter_Jahr & ".pdf"
'    x(9) = "D-Preise_DE_DENTAL_" & Parameter_Jahr & ".pdf"
'    x(14) = "D-Preise_DE_OEM_2016.pdf"
'    x(14) = "D-Preise_DE_SERVICE_" & Parameter_Jahr & ".pdf"
'    x(15) = "D-Preise_DE_WOUND_" & Parameter_Jahr & ".pdf"
'    x(16) = "Grosshaendler-Preise_DE_CHI_2016.pdf"
'    x(16) = "Grosshaendler-Preise_DE_SERVICE_" & Parameter_Jahr & ".pdf"
'    x(18) = "Grosshaendler-Preise_EN_DENTAL_" & Parameter_Jahr & ".pdf"
'    x(23) = "Grosshaendler-Preise_EN_SERVICE_" & Parameter_Jahr & ".pdf"
'    x(24) = "Grosshaendler-Preise_EN_WOUND_" & Parameter_Jahr & ".pdf"
'    x(25) = "Grosshaendler-Preise_EN_OEM_2016.pdf"
    
'    x(29) = "A-Preise_DE_GESAMT_2016_Inland.pdf"
'    x(30) = "A-Preise_DE_WOUND_Inland.pdf"
'    x(31) = "A-Preise_EN_GESAMT_2016_Inland.pdf"
'    x(32) = "A-Preise_EN_WOUND_Inland.pdf"
'    x(33) = "B-Preise_DE_GESAMT_2016_Inland.pdf"
'    x(34) = "B-Preise_DE_WOUND_Inland.pdf"
'    x(35) = "B-Preise_EN_GESAMT_2016_Inland.pdf"
'    x(36) = "B-Preise_EN_WOUND_Inland.pdf"
'    x(37) = "C-Preise_DE_GESAMT_2016_Inland.pdf"
'    x(38) = "C-Preise_DE_WOUND_Inland.pdf"
'    x(39) = "C-Preise_EN_GESAMT_2016_Inland.pdf"
'    x(40) = "C-Preise_EN_WOUND_Inland.pdf"
'    x(41) = "D-Preise_DE_GESAMT_2016_Inland.pdf"
'    x(42) = "D-Preise_DE_WOUND_Inland.pdf"
'    x(43) = "D-Preise_EN_GESAMT_2016_Inland.pdf"
'    x(44) = "D-Preise_EN_WOUND_Inland.pdf"
'    x(45) = "Grosshaendler-Preise_EN_GESAMT_2016_Inland.pdf"
'    x(46) = "Grosshaendler-Preise_EN_WOUND_Inland.pdf"
'    x(47) = "Standard-Preise_DE_GESAMT_2016_Inland.pdf"
'    x(48) = "Standard-Preise_EN_GESAMT_2016_Inland.pdf"
'    x(49) = "Standard-Preise_DE_WOUND_Inland.pdf"
'    x(50) = "Standard-Preise_EN_WOUND_Inland.pdf"
        
    For i = 0 To 20
    
        'strQuelle = AutomatikAblagePfad & "\Auto_PL\Ergebnisse_PDF\" & x(i)
        ' strQuelle = "K:\Marketing\TechDoku\Preislisten\VK_2016\Basis-Listen\Auto_PL\Ergebnisse_PDF\" & x(i) kl 27.9.16
        strQuelle = "K:\Marketing\TechDoku\Preislisten\VK_" & Parameter_Jahr & "\Basis-Listen\Auto_PL\Ergebnisse_PDF\" & x(i)
'        If Dir(strQuelle) = "" Then
'        Exit Sub
        
        'strZiel = AutomatikAblagePfad & "\Auto_PL\Ergebnisse_PDF\nicht_verwendet\"
        ' strZiel = "K:\Marketing\TechDoku\Preislisten\VK_2016\Basis-Listen\Auto_PL\Ergebnisse_PDF\nicht_verwendet\"
        strZiel = "K:\Marketing\TechDoku\Preislisten\VK_" & Parameter_Jahr & "\Basis-Listen\Auto_PL\Ergebnisse_PDF\nicht_verwendet\"
        Set objFSO = CreateObject("Scripting.FileSystemObject")
        objFSO.MoveFile strQuelle, strZiel
        Set objFSO = Nothing
        
    Next i
    
    'Kill "K:\Marketing\TechDoku\Preislisten\VK_2016\Basis-Listen\Auto_PL\Ergebnisse_Excel\*.pdf"
    
End Sub

Sub Eine_Preisliste_einzeln_aufrufen()
    Dim Preisliste_Name As String
    Dim Kuerzel_PL As String
    
'    Parameter_einlesen_Version_automatisch_aus_Tabelle ("KH18")
    
    AutomatikAblagePfad = ThisWorkbook.Path
      
    Katalogbezeichnungen_anlegen
    Call Parameter_einlesen
    
    Select Case Left(Parameter_Strukturkuerzel, 2)
        Case "KH"
             Kuerzel_PL = "HNO"
        Case "KG"
             Kuerzel_PL = "GYN"
'        Case "KD"
'             Kuerzel_PL = "DEN"
        Case "KP"
             Kuerzel_PL = "PFL"
        Case "KC"
             Kuerzel_PL = "CHI"
        Case "KM"
             Kuerzel_PL = "MDP"
        Case "KT"
             Kuerzel_PL = "THORAX"
        Case "KO"
             Kuerzel_PL = "GESAMT"
'        Case "KW"
'             Kuerzel_PL = "WOUND"
'        Case "KS"
'             Kuerzel_PL = "SERVICE"
    End Select
    
    Select Case Parameter_Kuerzel_Preisliste
        Case ""
            Parameter_Name_Preisliste = "Standard-Preise_"
        Case "ASI"
            Parameter_Name_Preisliste = "A-Preise_"
        Case "BPR"
            Parameter_Name_Preisliste = "B-Preise_"
'        Case "RUS"
'            Parameter_Name_Preisliste = "C-Preise_"
'        Case "CHI"
'            Parameter_Name_Preisliste = "D-Preise_"
        Case "G-H"
            Parameter_Name_Preisliste = "Grosshaendler-Preise_"
    End Select
    
    If Parameter_Sprache = "D" Then
        Preisliste_Name = "DE_" & Kuerzel_PL & "_" & Parameter_Jahr
    Else
        Preisliste_Name = "EN_" & Kuerzel_PL & "_" & Parameter_Jahr
    End If
    Parameter_Region = ""
    Auto_PL_erstellen (Preisliste_Name)
    Anzahl_GH_Lesen = 0
End Sub

Private Sub Auto_alle_PL_nach_Preislistenart(ByVal Name As String)
 ' diese sub wird pro Sprache einmal aufgerufen und startet jeweils ein Katalogk|fffd|rzel
 
Dim Preisliste_Name As String

   Parameter_Region = ""
   
   Parameter_Strukturkuerzel = KatalogNummer(0) ' "KHXX00"
   Preisliste_Name = Name & "HNO_" & Parameter_Jahr
   Auto_alle_PL_nach_Kuerzel (Preisliste_Name)
   Anzahl_GH_Lesen = 0
   
   Parameter_Strukturkuerzel = KatalogNummer(1) '  "KGXX00"
   Preisliste_Name = Name & "GYN_" & Parameter_Jahr
   Auto_alle_PL_nach_Kuerzel (Preisliste_Name)
   Anzahl_GH_Lesen = 0
   
   Parameter_Strukturkuerzel = KatalogNummer(5) '  "KCXX00"
   Preisliste_Name = Name & "CHI_" & Parameter_Jahr
   Auto_alle_PL_nach_Kuerzel (Preisliste_Name)
   Anzahl_GH_Lesen = 0

   Parameter_Strukturkuerzel = KatalogNummer(3) '  "KPXX00"
   Preisliste_Name = Name & "PFL_" & Parameter_Jahr
   Auto_alle_PL_nach_Kuerzel (Preisliste_Name)
   Anzahl_GH_Lesen = 0

   Parameter_Strukturkuerzel = KatalogNummer(6) '  KMXX00 Medap
   Preisliste_Name = Name & "MDP_" & Parameter_Jahr
   Auto_alle_PL_nach_Kuerzel (Preisliste_Name)
   Anzahl_GH_Lesen = 0

   Parameter_Strukturkuerzel = KatalogNummer(9) '  "KTXX00" Thorax Kl 3.11.16
   Preisliste_Name = Name & "THORAX_" & Parameter_Jahr
   Auto_alle_PL_nach_Kuerzel (Preisliste_Name)
   Anzahl_GH_Lesen = 0

   Parameter_Strukturkuerzel = KatalogNummer(8) '  "KOXX00"
   Preisliste_Name = Name & "GESAMT_" & Parameter_Jahr
   Auto_alle_PL_nach_Kuerzel (Preisliste_Name)
   Anzahl_GH_Lesen = 0

'   Parameter_Strukturkuerzel = KatalogNummer(4) '  "KWXX00"
'   Preisliste_Name = Name & "WOUND_" & Parameter_Jahr
'   Auto_alle_PL_nach_Kuerzel (Preisliste_Name)
'   Anzahl_GH_Lesen = 0
  
'   Parameter_Strukturkuerzel = "KW1500"
'   Preisliste_Name = Name & "WOUND_Inland"
'   Auto_alle_PL_nach_Kuerzel (Preisliste_Name)
'   Anzahl_GH_Lesen = 0

'   Parameter_Strukturkuerzel = "KM1500"
'   Preisliste_Name = Name & "OEM_2016"
'   Auto_alle_PL_nach_Kuerzel (Preisliste_Name)
'   Anzahl_GH_Lesen = 0
   
'   Parameter_Strukturkuerzel = KatalogNummer(2) '  "KD1500"
'   Preisliste_Name = Name & "DENTAL_" & Parameter_Jahr
'   Auto_alle_PL_nach_Kuerzel (Preisliste_Name)
'   Anzahl_GH_Lesen = 0

'   Parameter_Strukturkuerzel = KatalogNummer(7) '  "KS1500"
'   Preisliste_Name = Name & "SERVICE_" & Parameter_Jahr
'   Auto_alle_PL_nach_Kuerzel (Preisliste_Name)
'   Anzahl_GH_Lesen = 0

   'Parameter_Region = "020"

'   Parameter_Strukturkuerzel = "KO1500"
'   Preisliste_Name = Name & "GESAMT_2016_Inland"
'   Auto_alle_PL_nach_Kuerzel (Preisliste_Name)
'   Anzahl_GH_Lesen = 0
   
End Sub

Private Sub Auto_alle_PL_nach_Kuerzel(ByVal Preisliste_Name As String)
 ' diese sub wird pro Sprache und Katalogk|fffd|rzel aufgerufen und startet jeweils eine Preisliste
 ' Preislisten Standard (leer), ASI, BPR, RUS, CHI
 
   Parameter_Kuerzel_Preisliste = ""
   Parameter_Name_Preisliste = "Standard-Preise_"
   Auto_PL_erstellen (Preisliste_Name)
   
   Parameter_Kuerzel_Preisliste = "ASI"
   Parameter_Name_Preisliste = "A-Preise_"
   Auto_PL_erstellen (Preisliste_Name)
   
   Parameter_Kuerzel_Preisliste = "BPR"
   Parameter_Name_Preisliste = "B-Preise_"
   Auto_PL_erstellen (Preisliste_Name)
   
   'Parameter_Kuerzel_Preisliste = "RUS"
   'Parameter_Name_Preisliste = "C-Preise_"
   'Auto_PL_erstellen (Preisliste_Name)
   
   'Parameter_Kuerzel_Preisliste = "CHI"
   'Parameter_Name_Preisliste = "D-Preise_"
   'Auto_PL_erstellen (Preisliste_Name)
   
   Parameter_Kuerzel_Preisliste = "G-H"
   Parameter_Name_Preisliste = "Grosshaendler-Preise_"
   Auto_PL_erstellen (Preisliste_Name)
End Sub

Private Sub Auto_PL_erstellen(ByVal Name As String)
Dim PL_Name As String

Dim Pfad_Deckblatt As String
Dim Pfad_PL_pdf, Pfad_PL_temp, Pfad_PL_temp2 As String
Dim Pfad_AGB As String
Dim Pfad_Leerseite As String
Dim AnzahlLeereSeiten, i As Integer

Dim PfadDeckblattH1, PfadDeckblattH2 As String
Dim Parameter_VersionH1 As Integer

AnzahlLeereSeiten = 0

Pfad_Leerseite = AutomatikAblagePfad & "\Auto_PL\PDF_Zusatzblaetter\leere_Seite.pdf"
   
 '   KatalogNummer(0) = "KH"
 '   KatalogNummer(1) = "KG"
 '   KatalogNummer(2) = "KD"
 '   KatalogNummer(3) = "KP"
 '   KatalogNummer(4) = "KW"
 '   KatalogNummer(5) = "KC"
 '   KatalogNummer(6) = "KM"
 '   KatalogNummer(7) = "KS"
 '   KatalogNummer(8) = "KO"
 '   KatalogNummer(9) = "TH"

If Parameter_Sprache = "D" Then
   Pfad_AGB = AutomatikAblagePfad & "\Auto_PL\PDF_Zusatzblaetter\AGBs_de.pdf"
   If Parameter_Kuerzel_Preisliste = "G-H" Then
      Select Case Parameter_Strukturkuerzel
'          Case KatalogNummer(5) ' "KCXX00" ' CHI
'               Pfad_Deckblatt = AutomatikAblagePfad & "\Auto_PL\PDF_Zusatzblaetter\D_GH_CHI_Deckblatt_V01.pdf"
          Case KatalogNummer(3) ' "KPXX00" ' PFL
               Pfad_Deckblatt = AutomatikAblagePfad & "\Auto_PL\PDF_Zusatzblaetter\D_GH_ATEMWEG_Deckblatt_V01_S.pdf"
'          Case KatalogNummer(6) ' KMXX00   ' MDP
'               Pfad_Deckblatt = AutomatikAblagePfad & "\Auto_PL\PDF_Zusatzblaetter\D_GH_ATEMWEG_Deckblatt_V01.pdf"
'          Case KatalogNummer(7) '"KSXX00" ' SERVICE
'               Pfad_Deckblatt = AutomatikAblagePfad & "\Auto_PL\PDF_Zusatzblaetter\D_GH_SERVICE_Deckblatt_V01.pdf"
           Case Else
               Exit Sub
      End Select
   Else
      Select Case Parameter_Strukturkuerzel
          Case KatalogNummer(0)  ' "KHXX00" ' HNO
               If Parameter_Kuerzel_Preisliste = "ASI" Then
                  Pfad_Deckblatt = AutomatikAblagePfad & "\Auto_PL\PDF_Zusatzblaetter\D_HNO_Deckblatt_V01_A.pdf"
               ElseIf Parameter_Kuerzel_Preisliste = "BPR" Then
                  Pfad_Deckblatt = AutomatikAblagePfad & "\Auto_PL\PDF_Zusatzblaetter\D_HNO_Deckblatt_V01_B.pdf"
               Else
                  Pfad_Deckblatt = AutomatikAblagePfad & "\Auto_PL\PDF_Zusatzblaetter\D_HNO_Deckblatt_V01_S.pdf"
               End If
          
          Case KatalogNummer(1)  ' "KGXX00" ' GYN
               If Parameter_Kuerzel_Preisliste = "ASI" Then
                  Pfad_Deckblatt = AutomatikAblagePfad & "\Auto_PL\PDF_Zusatzblaetter\D_GYN_Deckblatt_V01_A.pdf"
               ElseIf Parameter_Kuerzel_Preisliste = "BPR" Then
                  Pfad_Deckblatt = AutomatikAblagePfad & "\Auto_PL\PDF_Zusatzblaetter\D_GYN_Deckblatt_V01_B.pdf"
               Else
                  Pfad_Deckblatt = AutomatikAblagePfad & "\Auto_PL\PDF_Zusatzblaetter\D_GYN_Deckblatt_V01_S.pdf"
               End If
      
'           Case KatalogNummer(2)  ' "KDXX00" ' DENTAL
'                Pfad_Deckblatt = AutomatikAblagePfad & "\Auto_PL\PDF_Zusatzblaetter\D_DENTAL_Deckblatt.pdf"
          
          Case KatalogNummer(5)  ' "KCXX00" ' CHI
               If Parameter_Kuerzel_Preisliste = "ASI" Then
                 Pfad_Deckblatt = AutomatikAblagePfad & "\Auto_PL\PDF_Zusatzblaetter\D_CHI_Deckblatt_V01_A.pdf"
               ElseIf Parameter_Kuerzel_Preisliste = "BPR" Then
                 Pfad_Deckblatt = AutomatikAblagePfad & "\Auto_PL\PDF_Zusatzblaetter\D_CHI_Deckblatt_V01_B.pdf"
               Else
                 Pfad_Deckblatt = AutomatikAblagePfad & "\Auto_PL\PDF_Zusatzblaetter\D_CHI_Deckblatt_V01_S.pdf"
               End If
          
          Case KatalogNummer(3)  ' "KPXX00" ' PFL
               If Parameter_Kuerzel_Preisliste = "ASI" Then
                 Pfad_Deckblatt = AutomatikAblagePfad & "\Auto_PL\PDF_Zusatzblaetter\D_ATEMWEG_Deckblatt_V01_A.pdf"
               ElseIf Parameter_Kuerzel_Preisliste = "BPR" Then
                 Pfad_Deckblatt = AutomatikAblagePfad & "\Auto_PL\PDF_Zusatzblaetter\D_ATEMWEG_Deckblatt_V01_B.pdf"
               Else
                 Pfad_Deckblatt = AutomatikAblagePfad & "\Auto_PL\PDF_Zusatzblaetter\D_ATEMWEG_Deckblatt_V01_S.pdf"
               End If
          
          Case KatalogNummer(6) '  "KMXX00" ' MDP
               If Parameter_Kuerzel_Preisliste = "ASI" Then
                 Pfad_Deckblatt = AutomatikAblagePfad & "\Auto_PL\PDF_Zusatzblaetter\D_MEDAP_Deckblatt_V01_A.pdf"
               ElseIf Parameter_Kuerzel_Preisliste = "BPR" Then
                 Pfad_Deckblatt = AutomatikAblagePfad & "\Auto_PL\PDF_Zusatzblaetter\D_MEDAP_Deckblatt_V01_B.pdf"
               Else
                 Pfad_Deckblatt = AutomatikAblagePfad & "\Auto_PL\PDF_Zusatzblaetter\D_MEDAP_Deckblatt_V01_S.pdf"
               End If

'          Case KatalogNummer(7)  ' "KSXX00" ' SERVICE_
'               Pfad_Deckblatt = AutomatikAblagePfad & "\Auto_PL\PDF_Zusatzblaetter\D_SERVICE_Deckblatt_V01.pdf"
'          Case KatalogNummer(4)  ' "KWXX00" ' WOUND
'               Pfad_Deckblatt = AutomatikAblagePfad & "\Auto_PL\PDF_Zusatzblaetter\D_WOU_Deckblatt_V01.pdf"
          
          Case KatalogNummer(9)  ' "KTXX00" ' Thorax
               If Parameter_Kuerzel_Preisliste = "ASI" Then
                 Pfad_Deckblatt = AutomatikAblagePfad & "\Auto_PL\PDF_Zusatzblaetter\D_THO_Deckblatt_V01_A.pdf"
               ElseIf Parameter_Kuerzel_Preisliste = "BPR" Then
                 Pfad_Deckblatt = AutomatikAblagePfad & "\Auto_PL\PDF_Zusatzblaetter\D_THO_Deckblatt_V01_B.pdf"
               Else
                 Pfad_Deckblatt = AutomatikAblagePfad & "\Auto_PL\PDF_Zusatzblaetter\D_THO_Deckblatt_V01_S.pdf"
               End If
          
          Case KatalogNummer(8)  ' "KOXX00" ' GESAMT
               If Parameter_Kuerzel_Preisliste = "ASI" Then
                 Pfad_Deckblatt = AutomatikAblagePfad & "\Auto_PL\PDF_Zusatzblaetter\D_GESAMT_Deckblatt_V01_A.pdf"
               ElseIf Parameter_Kuerzel_Preisliste = "BPR" Then
                 Pfad_Deckblatt = AutomatikAblagePfad & "\Auto_PL\PDF_Zusatzblaetter\D_GESAMT_Deckblatt_V01_B.pdf"
               Else
                 Pfad_Deckblatt = AutomatikAblagePfad & "\Auto_PL\PDF_Zusatzblaetter\D_GESAMT_Deckblatt_V01_S.pdf"
               End If
      End Select
   End If
Else
   Pfad_AGB = AutomatikAblagePfad & "\Auto_PL\PDF_Zusatzblaetter\AGBs_en.pdf"
   Select Case Parameter_Strukturkuerzel
          Case KatalogNummer(0)  ' "KHXX00" ' HNO
               If Parameter_Kuerzel_Preisliste = "ASI" Then
                 Pfad_Deckblatt = AutomatikAblagePfad & "\Auto_PL\PDF_Zusatzblaetter\E_HNO_Deckblatt_V01_A.pdf"
               ElseIf Parameter_Kuerzel_Preisliste = "BPR" Then
                 Pfad_Deckblatt = AutomatikAblagePfad & "\Auto_PL\PDF_Zusatzblaetter\E_HNO_Deckblatt_V01_B.pdf"
               Else
                 Pfad_Deckblatt = AutomatikAblagePfad & "\Auto_PL\PDF_Zusatzblaetter\E_HNO_Deckblatt_V01_S.pdf"
               End If
          
          Case KatalogNummer(1)  ' "KGXX00" ' GYN
               If Parameter_Kuerzel_Preisliste = "ASI" Then
                 Pfad_Deckblatt = AutomatikAblagePfad & "\Auto_PL\PDF_Zusatzblaetter\E_GYN_Deckblatt_V01_A.pdf"
               ElseIf Parameter_Kuerzel_Preisliste = "BPR" Then
                 Pfad_Deckblatt = AutomatikAblagePfad & "\Auto_PL\PDF_Zusatzblaetter\E_GYN_Deckblatt_V01_B.pdf"
               Else
                 Pfad_Deckblatt = AutomatikAblagePfad & "\Auto_PL\PDF_Zusatzblaetter\E_GYN_Deckblatt_V01_S.pdf"
               End If

'          Case KatalogNummer(2)  ' "KDXX00" ' DENTAL
'               Pfad_Deckblatt = AutomatikAblagePfad & "\Auto_PL\PDF_Zusatzblaetter\E_DENTAL_Deckblatt.pdf"
          
          Case KatalogNummer(5)  ' "KCXX00" ' CHI
               If Parameter_Kuerzel_Preisliste = "ASI" Then
                 Pfad_Deckblatt = AutomatikAblagePfad & "\Auto_PL\PDF_Zusatzblaetter\E_CHI_Deckblatt_V01_A.pdf"
               ElseIf Parameter_Kuerzel_Preisliste = "BPR" Then
                 Pfad_Deckblatt = AutomatikAblagePfad & "\Auto_PL\PDF_Zusatzblaetter\E_CHI_Deckblatt_V01_B.pdf"
               Else
                 Pfad_Deckblatt = AutomatikAblagePfad & "\Auto_PL\PDF_Zusatzblaetter\E_CHI_Deckblatt_V01_S.pdf"
               End If
          
          Case KatalogNummer(3)  ' "KPXX00" ' PFL
               If Parameter_Kuerzel_Preisliste = "ASI" Then
                 Pfad_Deckblatt = AutomatikAblagePfad & "\Auto_PL\PDF_Zusatzblaetter\E_CARE_Deckblatt_V01_A.pdf"
               ElseIf Parameter_Kuerzel_Preisliste = "BPR" Then
                 Pfad_Deckblatt = AutomatikAblagePfad & "\Auto_PL\PDF_Zusatzblaetter\E_CARE_Deckblatt_V01_B.pdf"
               Else
                 Pfad_Deckblatt = AutomatikAblagePfad & "\Auto_PL\PDF_Zusatzblaetter\E_CARE_Deckblatt_V01_S.pdf"
               End If
          
          Case KatalogNummer(6)  ' "KMXX00" ' MDP
               If Parameter_Kuerzel_Preisliste = "ASI" Then
                 Pfad_Deckblatt = AutomatikAblagePfad & "\Auto_PL\PDF_Zusatzblaetter\E_MEDAP_Deckblatt_V01_A.pdf"
               ElseIf Parameter_Kuerzel_Preisliste = "BPR" Then
                 Pfad_Deckblatt = AutomatikAblagePfad & "\Auto_PL\PDF_Zusatzblaetter\E_MEDAP_Deckblatt_V01_B.pdf"
               Else
                 Pfad_Deckblatt = AutomatikAblagePfad & "\Auto_PL\PDF_Zusatzblaetter\E_MEDAP_Deckblatt_V01_S.pdf"
               End If
               
'          Case KatalogNummer(7)  ' "KSXX00" ' SERVICE
'               Pfad_Deckblatt = AutomatikAblagePfad & "\Auto_PL\PDF_Zusatzblaetter\E_SERVICE_Deckblatt_V01.pdf"
'          Case KatalogNummer(4)  ' "KWXX00" ' WOUND
'               Pfad_Deckblatt = AutomatikAblagePfad & "\Auto_PL\PDF_Zusatzblaetter\E_WOU_Deckblatt_V01.pdf"
          
          Case KatalogNummer(9)  ' "KTXX00" ' Thorax
               If Parameter_Kuerzel_Preisliste = "ASI" Then
                 Pfad_Deckblatt = AutomatikAblagePfad & "\Auto_PL\PDF_Zusatzblaetter\E_THO_Deckblatt_V01_A.pdf"
               ElseIf Parameter_Kuerzel_Preisliste = "BPR" Then
                 Pfad_Deckblatt = AutomatikAblagePfad & "\Auto_PL\PDF_Zusatzblaetter\E_THO_Deckblatt_V01_B.pdf"
               Else
                 Pfad_Deckblatt = AutomatikAblagePfad & "\Auto_PL\PDF_Zusatzblaetter\E_THO_Deckblatt_V01_S.pdf"
               End If
          
          Case KatalogNummer(8)  ' "KOXX00" ' GESAMT
               If Parameter_Kuerzel_Preisliste = "ASI" Then
                 Pfad_Deckblatt = AutomatikAblagePfad & "\Auto_PL\PDF_Zusatzblaetter\E_GESAMT_Deckblatt_V01_A.pdf"
               ElseIf Parameter_Kuerzel_Preisliste = "BPR" Then
                 Pfad_Deckblatt = AutomatikAblagePfad & "\Auto_PL\PDF_Zusatzblaetter\E_GESAMT_Deckblatt_V01_B.pdf"
               Else
                 Pfad_Deckblatt = AutomatikAblagePfad & "\Auto_PL\PDF_Zusatzblaetter\E_GESAMT_Deckblatt_V01_S.pdf"
               End If
      End Select
End If


' Versionierung Deckblatt kl 26.9.17:

' Die Dateinamen bleiben im Prinzip wie vor der Versionierung erhalten
' an das Ende des Dateinamens wird _Vxx angeh|fffd|ngt. xx steht f|fffd|r die Versionsnummer
' aus     E_THO_Deckblatt.pdf   w|fffd|rde so beispielsweise     E_THO_Deckblatt_V03.pdf

' Es soll das Deckblatt passend zur gew|fffd|hlten Version verwendet werden
' Allerdings kann es sein, dass nicht zu jeder Version ein eigenes Deckblatt existiert.
' Deshalb wird die Existenz gepr|fffd|ft und dann von der angeforderten Version nach unten gez|fffd|hlt,
' im |fffd|u|fffd|ersten Fall bis 1. Deckbl|fffd|tter ohne Versionsnummer gibt es nicht mehr.


PfadDeckblattH1 = Left(Pfad_Deckblatt, Len(Pfad_Deckblatt) - 7) ' Pfad ohne .pdf
PfadDeckblattH2 = PfadDeckblattH1 & "_V" & Right("00" & Parameter_Version, 2) & ".pdf" ' pfad mit aktueller Versionsnummer

If FileExists(PfadDeckblattH2) Then
    ' Es gibt eine Datei in der aktuellen Version
    Pfad_Deckblatt = PfadDeckblattH2
Else
    ' nach |fffd|lteren Versionen suchen
    Parameter_VersionH1 = Parameter_Version
    Do While Parameter_VersionH1 > 1
        Parameter_VersionH1 = Parameter_VersionH1 - 1 ' n|fffd|chst |fffd|ltere Version
        PfadDeckblattH2 = PfadDeckblattH1 & "_V" & Right("00" & Parameter_VersionH1, 2) & ".pdf" ' pfad mit |fffd|lterer Versionsnummer
        If FileExists(PfadDeckblattH2) Then
            ' Es gibt eine Datei in dieser Version
            Pfad_Deckblatt = PfadDeckblattH2
            Exit Do
        End If
    Loop
End If

Seitenzaehler = 1

PLNameXX = Parameter_Name_Preisliste & Name
  
Preisliste_aufbauen
  
   ' Parameter_Kuerzel_Preisliste = "" Then
      'PL_Name = Parameter_Name_Preisliste & Name
   'Else
      PL_Name = Parameter_Name_Preisliste & Name
   'End If
   
'Pfad_PL_pdf = AutomatikAblagePfad & "\Auto_PL\Ergebnisse_PDF\" & PL_Name & ".pdf"
' Versionierung: _V statt _ kl 25.9.17
' Pfad zum Endergebnis als pdf:
Pfad_PL_pdf = AutomatikAblagePfad & "\Auto_PL\Ergebnisse_PDF\" & _
                      PL_Name & "_V" & Right("00" & Parameter_Version, 2) & ".pdf" ' Dateiname um Version verl|fffd|ngert kl 26.1.17

Pfad_PL_temp = AutomatikAblagePfad & "\Auto_PL\Ergebnisse_PDF\" & "temp.pdf"
Pfad_PL_temp2 = AutomatikAblagePfad & "\Auto_PL\Ergebnisse_PDF\" & "temp2.pdf"


   If FileExists(AutomatikAblagePfad & "\Auto_PL\Ergebnisse_Excel\" & PL_Name & "_V" & Right("00" & Parameter_Version, 2) & ".xlsm") Then
     Kill AutomatikAblagePfad & "\Auto_PL\Ergebnisse_Excel\" & PL_Name & "_V" & Right("00" & Parameter_Version, 2) & ".xlsm"
   End If
   
   Application.DisplayAlerts = False
   ActiveWorkbook.SaveAs Filename:=AutomatikAblagePfad & "\Auto_PL\Ergebnisse_Excel\" & _
                     PL_Name & "_V" & Right("00" & Parameter_Version, 2) & ".xlsm" ' Dateiname um Version verl|fffd|ngert kl 26.1.17, xlsm kl 25.9.17
   
  ' On Error GoTo Fehler454
     If FileExists(Pfad_PL_pdf) Then
     Kill Pfad_PL_pdf
     End If
'Fehler454:
  ' On Error GoTo Fehler453
     If FileExists(Pfad_PL_temp) Then
     Kill Pfad_PL_temp
     End If
'Fehler453:
  ' On Error GoTo Fehler452
    If FileExists(Pfad_PL_temp2) Then
    Kill Pfad_PL_temp2
    End If
'Fehler452:

  Sheets("PL_Erstellung").Visible = xlSheetVeryHidden
  Sheets("Seitenkoepfe").Visible = xlSheetVeryHidden

   ActiveWorkbook.ExportAsFixedFormat _
                     Type:=xlTypePDF, _
                 Filename:=Pfad_PL_temp, _
                  Quality:=xlQualityStandard, _
                  openAfterPublish:=False

     '  Application.Wait Now + TimeSerial(0, 0, 1)
     '  Application.Wait (Now + TimeValue("0:00:10"))
     
Dim PfadZuPDFtk As String
If FileExists("C:\Program Files (x86)\PDFtk Server\bin\pdftk.exe") Then
    PfadZuPDFtk = "C:\Program Files (x86)\PDFtk Server\bin\pdftk "
Else
    PfadZuPDFtk = "C:\Program Files\PDFtk Server\bin\pdftk "
End If

Dim x
' Preisliste + AGB zusammenf|fffd|gen:
' Hierzu wird das Tool PDFtk verwendet, das auf dem ausf|fffd|hrenden PC installiert sein muss.

'x = Shell("C:\Program Files (x86)\PDFtk Server\bin\pdftk " & Pfad_PL_temp & " " & Pfad_AGB & " cat output " & Pfad_PL_temp2)
x = Shell(PfadZuPDFtk & Pfad_PL_temp & " " & Pfad_AGB & " cat output " & Pfad_PL_temp2)

'If Parameter_Strukturkuerzel = "KG1200" Or Parameter_Strukturkuerzel = "KH1200" Then
Application.Wait (Now + TimeValue("0:00:20"))
'Else
'Application.Wait (Now + TimeValue("0:00:20"))
'End If
  
  ' On Error GoTo Fehler451
  If FileExists(Pfad_PL_temp) Then
     Kill Pfad_PL_temp
  End If
'Fehler451:
' Deckblatt davor:
'x = Shell("C:\Program Files (x86)\PDFtk Server\bin\pdftk " & Pfad_Deckblatt & " " & Pfad_PL_temp2 & " cat output " & Pfad_PL_temp)
x = Shell(PfadZuPDFtk & Pfad_Deckblatt & " " & Pfad_PL_temp2 & " cat output " & Pfad_PL_temp)

 'If Parameter_Strukturkuerzel = "KG1200" Or Parameter_Strukturkuerzel = "KH1200" Then
Application.Wait (Now + TimeValue("0:00:20"))
'Else
'Application.Wait (Now + TimeValue("0:00:20"))
'End If
 '  On Error GoTo Fehler450
 If FileExists(Pfad_PL_temp2) Then
    Kill Pfad_PL_temp2
 End If
'Fehler450:

' leere seiten anh|fffd|ngen
AnzahlLeereSeiten = 6 - (Seitenzaehler Mod 4)
If AnzahlLeereSeiten = 4 Then AnzahlLeereSeiten = 0
If AnzahlLeereSeiten = 5 Then AnzahlLeereSeiten = 1
If AnzahlLeereSeiten = 6 Then AnzahlLeereSeiten = 2
If AnzahlLeereSeiten = 7 Then AnzahlLeereSeiten = 3
If AnzahlLeereSeiten = 8 Then AnzahlLeereSeiten = 0
If AnzahlLeereSeiten > 0 Then
   For i = 1 To AnzahlLeereSeiten
    '   On Error GoTo Fehler448
     If FileExists(Pfad_PL_temp2) Then
        Kill Pfad_PL_temp2
     End If
'Fehler448:
       ' Leerseite dahinter:
     '  x = Shell("C:\Program Files (x86)\PDFtk Server\bin\pdftk " & Pfad_PL_temp & " " & Pfad_Leerseite & " cat output " & Pfad_PL_temp2)
       x = Shell(PfadZuPDFtk & Pfad_PL_temp & " " & Pfad_Leerseite & " cat output " & Pfad_PL_temp2)
       ' On Error GoTo Fehler449
       Application.Wait (Now + TimeValue("0:00:20"))
       If FileExists(Pfad_PL_temp) Then
         Kill Pfad_PL_temp
       End If
       
'Fehler449:
    Application.Wait (Now + TimeValue("0:00:01"))
    If FileExists(Pfad_PL_temp2) Then
       Name Pfad_PL_temp2 As Pfad_PL_temp
    End If
   Next
End If

On Error Resume Next
If FileExists(Pfad_PL_temp) Then
    Name Pfad_PL_temp As Pfad_PL_pdf
End If

On Error GoTo 0
     
  Application.DisplayAlerts = True
  
End Sub
Function FileExists(ByVal sFilePath As String) As Boolean
 
    If Trim(sFilePath) = "" Then Exit Function
    If Right(sFilePath, 1) = "\" Then Exit Function
'// ------------------------------------------------------------------------
'// Fehlerhandling einschalten, um VB-Meldung abzufangen
'// ------------------------------------------------------------------------
    On Error Resume Next
    FileExists = Dir(sFilePath) <> ""
    FileExists = FileExists And Err.Number = 0
'// ------------------------------------------------------------------------
'// Fehlerhandling wieder auschalten
'// ------------------------------------------------------------------------
    On Error GoTo 0
 
End Function

Private Function Parameter_einlesen_Version_automatisch_aus_Tabelle(KuerzelUndJahr As String) As Integer

    ' angelegt 26.1.17 kl
    ' Diese sub ermittelt aus der Tabelle tdpct001, welche Version
    ' des im Zugriff befindlichen K|fffd|rzels gerade aktuell ist
    
    Dim sqlt As String
    Dim Version As Integer
    ' Dim hi As String
    Dim Heute As String
    
    Set db2 = CreateObject("ADODB.connection")
    'db2.Open "ERPLN_ORACLE", "crrep1", "Repcr1"
    db2.Open "ERPLN_atmora1srv", "crrep1", "Repcr1"
    
    Heute = CStr(Year(Date)) & Right("00" & CStr(Month(Date)), 2) & Right("00" & CStr(Day(Date)), 2)
    
    sqlt = "select t$catc, t$effd, t$expd"
    sqlt = sqlt & " from ERPLN.ttdpct001800"
    sqlt = sqlt & " where to_char(t$effd,'YYYYMMDD') <= '" & Heute & "'" _
              & " and (to_char(t$expd,'YYYYMMDD') >= '" & Heute & "') or (to_char(t$expd,'YYYY') = '1970')"
    
    Set rs2 = db2.Execute(sqlt)
    
  '  Dim rs6 As Object 'ADODB.Recordset
  '  Set rs6 = rs2.Clone
  '    Do While Not (rs6.EOF)
   '      rs6.movenext
   '    Loop
    
    
    
    Do While Not (rs2.EOF)
       ' hi = Trim(rs2(0))
       If Left(Trim(rs2(0)), 4) = KuerzelUndJahr Then ' z.B. "KP17" Then
          ' hi = rs2(1)
          ' hi = rs2(2)
          Version = CInt(Right(Trim(rs2(0)), 2))
          Exit Do
       End If
       rs2.movenext
    Loop
    
     
    rs2.Close
    Set rs2 = Nothing
    db2.Close
    Parameter_einlesen_Version_automatisch_aus_Tabelle = Version
End Function

Private Sub Parameter_einlesen()
   ThisWorkbook.Sheets("PL_Erstellung").Activate

' Kunde:
   Parameter_Kunde = Cells(9, 10).Value
   
' Preislisten-K|fffd|rzel (BPR,ASI,CHI,RUS etc)
   Parameter_Kuerzel_Preisliste = Cells(12, 10).Value

' einzeilig, mehrzeilig, teilweise:
   If Cells(8, 10).Value = "E" Then
       Parameter_einzeilig = True
       Parameter_TeilweiseAnzeigeSteuerzeichen = False
   Else
       Parameter_einzeilig = False
       If Cells(8, 10).Value = "T" Then
          Parameter_TeilweiseAnzeigeSteuerzeichen = True
       Else
          Parameter_TeilweiseAnzeigeSteuerzeichen = False
       End If
   End If
   
' Stichtag:
   Parameter_Stichtag = Cells(10, 10).Value
   Parameter_Jahr = Trim((Cells(5, 10).Value))
    If IsNumeric(Trim((Cells(16, 10).Value))) Then  ' Parameter eingef|fffd|hrt kl 26.1.17
        Parameter_Version = CInt((Cells(16, 10).Value))
    Else
        Parameter_Version = 0
    End If
   
' Strukturk|fffd|rzel (z.B. KO1200)
   Parameter_Strukturkuerzel = Cells(11, 10).Value
   
' Preisbuch, z.B. VKS000001
   Parameter_Preisbuch = Cells(13, 10).Value
   
' Sprache E,D
   Parameter_Sprache = Cells(14, 10).Value
   
' Region
   Parameter_Region = Cells(15, 10).Value
   
' Kategoriek|fffd|rzel:
   If Cells(7, 10).Value = "J" Then
          Parameter_Code_zeigen = True
          Else
          Parameter_Code_zeigen = False
   End If
   
 ' Kategoriek|fffd|rzel:
   If Cells(6, 10).Value = "J" Then
          Parameter_Zusatzdaten_zeigen = True
          Else
          Parameter_Zusatzdaten_zeigen = False
   End If
   

End Sub

Sub Katalogbezeichnungen_anlegen()
    Dim i As Integer
    Dim hi As String
    Dim KuerzelUndJahr As String
    
    Parameter_Jahr = Trim((ThisWorkbook.Sheets("PL_Erstellung").Cells(5, 10).Value))
    If IsNumeric(ThisWorkbook.Sheets("PL_Erstellung").Cells(16, 10).Value) Then
        Parameter_Version = CInt((ThisWorkbook.Sheets("PL_Erstellung").Cells(16, 10).Value)) ' angelegt kl 26.1.17
    Else
        Parameter_Version = 0
    End If
    
    KatalogNummer(0) = "KH"
    KatalogNummer(1) = "KG"
    KatalogNummer(2) = "KD" ' unbenutzt kl 26.1.17
    KatalogNummer(3) = "KP"
    KatalogNummer(4) = "KW"
    KatalogNummer(5) = "KC"
    KatalogNummer(6) = "KM"
    KatalogNummer(7) = "KS"
    KatalogNummer(8) = "KO"
    KatalogNummer(9) = "KT"
    
    
    KatalogBez(0) = "HNO Katalog"
    KatalogBez(1) = "Gyn|fffd|kologiekatalog"
    KatalogBez(2) = "Dental Katalog" ' unbenutzt kl 26.1.17
    KatalogBez(3) = "Pflegekatalog"
    KatalogBez(4) = "Woundprospekt"
    KatalogBez(5) = "Chirurgiekatalog"
    KatalogBez(6) = "Medap Katalog"
    KatalogBez(7) = "Servicekatalog"
    KatalogBez(8) = "Gesamtkatalog"
    KatalogBez(9) = "Thorax Katalog"
    
    Select Case Parameter_Jahr
        Case 2015
            For i = 0 To 9
                KatalogNummer(i) = KatalogNummer(i) & "1400"
            Next
            KatalogNummer(6) = "KM1200"
         Case 2016
            For i = 0 To 9
                KatalogNummer(i) = KatalogNummer(i) & "1500"
            Next
         Case Else
            For i = 0 To 9
                ' neue Ermittlung der Katalognummer kl 26.1.17
                ' Verschiedene Katalognummern k|fffd|nnen verschiedene Versionen haben
                ' Deshalb wird die Version jeweils einzeln aus dem K|fffd|rzel und dem Jahr bestimmt
                
                'KatalogNummer(i) = KatalogNummer(i) & Right(Parameter_Jahr, 2) & "00"
                KuerzelUndJahr = KatalogNummer(i) & Right(Parameter_Jahr, 2)
                If automatisch_gestartet Then
                    Parameter_Version = Parameter_einlesen_Version_automatisch_aus_Tabelle(KuerzelUndJahr)
                Else
                    ' Parameter_Version aus Parameterblatt ist g|fffd|ltig
                End If
                KatalogNummer(i) = KatalogNummer(i) & Right(Parameter_Jahr, 2) & Right("00" & Parameter_Version, 2) ' version eingef|fffd|hrt kl 26.1.17
            Next
    End Select

    
    For i = 0 To 9
        If i <> 2 Then ' Dental unbenutzt kl 26.1.17
            ' neue Ermittlung der Katalognummer kl 26.1.17
            ' Verschiedene Katalognummern k|fffd|nnen verschiedene Versionen haben
            ' Deshalb wird die Version jeweils einzeln aus dem K|fffd|rzel und dem Jahr bestimmt
    
            KuerzelUndJahr = Left(KatalogNummer(i), 2) & Right(Parameter_Jahr, 2)
            If automatisch_gestartet Then
               Parameter_Version = Parameter_einlesen_Version_automatisch_aus_Tabelle(KuerzelUndJahr)
            Else
               ' Parameter_Version aus Parameterblatt ist g|fffd|ltig
                              
          ' nur zum test: muss wieder raus
       '  Parameter_Version = Parameter_einlesen_Version_automatisch_aus_Tabelle(KuerzelUndJahr)
          
            End If
            KatalogBez(i) = KatalogBez(i) & " " & Parameter_Jahr & " " & Right("00" & Parameter_Version, 2)  ' version angeh|fffd|ngt kl 26.1.17
            ThisWorkbook.Sheets("PL_Erstellung").Cells(4 + i, 11).Value = KatalogNummer(i)
            ThisWorkbook.Sheets("PL_Erstellung").Cells(4 + i, 12).Value = KatalogBez(i)
        End If
    Next

End Sub

Sub Preisliste_aufbauen()

   If Not automatisch_gestartet Then
      Parameter_einlesen
      Katalogbezeichnungen_anlegen
   End If
   
    Application.ScreenUpdating = False
    Aufschlag = 1 ' Faktor, um den Preise, z.B. f|fffd|r Russland, erh|fffd|ht werden
    
  'Aufschlag bestimmen
    
       If Parameter_Code_zeigen Then
          codezeigen = True
          Else
          codezeigen = False
       End If
    
       If Parameter_Zusatzdaten_zeigen Then
          zusatzdatenzeigen = True
          Else
          zusatzdatenzeigen = False
       End If
    
    If Len(Parameter_Kuerzel_Preisliste) > 0 And Parameter_Kuerzel_Preisliste <> "G-H" Then
       Set db = CreateObject("ADODB.connection")
       'db.Open "ERPLN_ORACLE", "System", "MANAGER"
       'db.Open "ERPLN_ORACLE", "crrep1", "Repcr1"
       db.Open "ERPLN_atmora1srv", "crrep1", "Repcr1"
       Aufschlag = Aufschlag_bestimmen(Parameter_Kuerzel_Preisliste)
       
       rs.Close
       Set rs = Nothing
       db.Close
    Else
       Aufschlag = 1
    End If
    
    If Len(Parameter_Kunde) > 0 Then ' Kundennummer angegeben, Nettopreise bestimmen
       NettoPreisliste = True
       
       ' 1. Kombination aus Kunde und Artikel:
       AnzahlArtikelRabatte = 0
       Set db = CreateObject("ADODB.connection")
       'db.Open "ERPLN_ORACLE", "System", "MANAGER"
       'db.Open "ERPLN_ORACLE", "crrep1", "Repcr1"
       db.Open "ERPLN_atmora1srv", "crrep1", "Repcr1"
       ArtikelRabatteLesen (" ")
       rs.Close
       Set rs = Nothing
       db.Close
       ' 2. Kombination aus Kunde und Preisgruppe:
       AnzahlKundePreisgruppe = 0
       Set db = CreateObject("ADODB.connection")
       'db.Open "ERPLN_ORACLE", "System", "MANAGER"
       'db.Open "ERPLN_ORACLE", "crrep1", "Repcr1"
       db.Open "ERPLN_atmora1srv", "crrep1", "Repcr1"
       
       KundePreisgruppeLesen (" ")
       rs.Close
       Set rs = Nothing
       db.Close
       ' 3. Bestimme die Preisliste des Kunden:
       Set db = CreateObject("ADODB.connection")
       'db.Open "ERPLN_ORACLE", "System", "MANAGER"
       'db.Open "ERPLN_ORACLE", "crrep1", "Repcr1"
       db.Open "ERPLN_atmora1srv", "crrep1", "Repcr1"
       KundePreislisteLesen (" ")
       rs.Close
       Set rs = Nothing
       db.Close
       ' 4. lies alle Rabatte pro Preisliste und Artikel:
       AnzahlRabArtikelPreisliste = 0
       Set db = CreateObject("ADODB.connection")
       'db.Open "ERPLN_ORACLE", "System", "MANAGER"
       'db.Open "ERPLN_ORACLE", "crrep1", "Repcr1"
       db.Open "ERPLN_atmora1srv", "crrep1", "Repcr1"
       RabArtikelPreislisteLesen (" ")
       rs.Close
       Set rs = Nothing
       db.Close
       ' 5. lies alle Rabatte pro Preisliste und Preisgruppe:
       AnzahlPgPl = 0
       Set db = CreateObject("ADODB.connection")
       'db.Open "ERPLN_ORACLE", "System", "MANAGER"
       'db.Open "ERPLN_ORACLE", "crrep1", "Repcr1"
       db.Open "ERPLN_atmora1srv", "crrep1", "Repcr1"
       RabPgPlLesen (" ")
       rs.Close
       Set rs = Nothing
       db.Close
    Else
       NettoPreisliste = False
       AnzahlArtikelRabatte = 0
    End If
    
    Set db = CreateObject("ADODB.connection")
    'db.Open "ERPLN_ORACLE", "System", "MANAGER"
    'db.Open "ERPLN_ORACLE", "crrep1", "Repcr1"
    db.Open "ERPLN_atmora1srv", "crrep1", "Repcr1"
    If Parameter_Kuerzel_Preisliste = "G-H" Then
       Artikel_GH_Lesen ("xxx")
       rs.Close
       Set rs = Nothing
       db.Close
    End If
  
    ' Regionalpreisaufschlag:
    ' wird in ein array gef|fffd|llt und pro Artikel aus dem Array gesucht. Da Datum und Region vorselektiert sind,
    ' sollte nur ein Faktor vorliegen.
       Set db = CreateObject("ADODB.connection")
       'db.Open "ERPLN_ORACLE", "System", "MANAGER"
       'db.Open "ERPLN_ORACLE", "crrep1", "Repcr1"
       db.Open "ERPLN_atmora1srv", "crrep1", "Repcr1"
    If Len(Parameter_Region) > 0 Then
       RegionalPreisaufschlagLesen ("xxx")
       rs.Close
       Set rs = Nothing
       db.Close
    End If

 '   ThisWorkbook.Sheets("PL_Erstellung").Activate
    Sprache = Parameter_Sprache
    strSQL = sqltext("alle") ' normal
    ThisWorkbook.Sheets("Preisliste").Activate
    ActiveSheet.ResetAllPageBreaks
    Range(Cells(1, 1), Cells(5000, 34)).Select
    Selection.Clear
    Selection.Interior.ColorIndex = 2

    erster = 1
    Set db = CreateObject("ADODB.connection")
    'db.Open "ERPLN_ORACLE", "System", "MANAGER"
    'db.Open "ERPLN_ORACLE", "crrep1", "Repcr1"
    db.Open "ERPLN_atmora1srv", "crrep1", "Repcr1"
    
    Preisliste_einlesen ("HNO")
    optik_regionen ("HNO")
    rs.Close
    Set rs = Nothing
    db.Close

    'disconnect database
      Set db = Nothing
      
    'Vorbereitung f|fffd|r ein Inhaltsverzeichnis
    'Call Inhaltsverzeichnis
    
    ClearPrintArea
    ThisWorkbook.Sheets("Preisliste").Activate
    ActiveSheet.PageSetup.PrintArea = ""
    ActiveSheet.PageSetup.PrintArea = "A1:G" & anzahl_gelesene_zeilen
    
    On Error Resume Next
    ActiveWindow.View = xlPageBreakPreview
    ActiveSheet.VPageBreaks(1).DragOff Direction:=xlToRight, RegionIndex:=1
    ActiveWindow.View = xlNormalView
    On Error GoTo 0
End Sub
Sub ClearPrintArea()
    Dim ws As Worksheet
    Dim msg As String, _
    orgWs As String
   ' msg = "Are you sure you want to Clear Print Area on all sheets?"
  '  If MsgBox(msg, vbYesNo) = vbNo Then Exit Sub
    Application.ScreenUpdating = False
    orgWs = ActiveSheet.Name
    For Each ws In ThisWorkbook.Worksheets
        ws.Activate
        ActiveSheet.PageSetup.PrintArea = ""
    Next ws
    Sheets(orgWs).Select
    Application.ScreenUpdating = True
End Sub

Function Aufschlag_bestimmen(Preisliste As String) As Double            'K|fffd|rzel Preisliste
Dim sqlt As String
Dim aua As Double

  sqlt = "select " & Chr(34) & "Preisbuch" & Chr(34) & ", " _
                   & Chr(34) & "Faktor" & Chr(34) & ", " _
                   & Chr(34) & "Preisliste" & Chr(34) & ", " _
                   & Chr(34) & "gueltig_ab" & Chr(34) & ", " _
                   & Chr(34) & "gueltig_bis" & Chr(34)
                   
  sqlt = sqlt & " from ERPLN.PL_AUFSCHLAGSFAKTOR"
    
  sqlt = sqlt & " where " & Chr(34) & "gueltig_ab" & Chr(34) & " <= '" & Parameter_Stichtag & "'" _
              & " and (" & Chr(34) & "gueltig_bis" & Chr(34) & " >= '" & Parameter_Stichtag & "'" _
              & "  or  " & Chr(34) & "gueltig_bis" & Chr(34) & " = '19700101') " _
              & " and " & Chr(34) & "Preisbuch" & Chr(34) & " = '" & Parameter_Preisbuch & "'" _
              & " and " & Chr(34) & "Preisliste" & Chr(34) & " = '" & Parameter_Kuerzel_Preisliste & "'"

    Set rs = db.Execute(sqlt)
    aua = rs(1)

Aufschlag_bestimmen = aua / 100

End Function

Function sqltext(variante As String) As String
Dim sqlt As String

Dim Schwelle1, Schwelle2, Schwelle3, Schwelle4 As Double
Dim KriteriumIstUmsatz As Boolean

' indizierung der Felder beginnt mit 0

  sqlt = "select " & Chr(34) & "GesamtKat" & Chr(34) & ", " _
                   & Chr(34) & "GesamtRfolge" & Chr(34) & ", " _
                   & Chr(34) & "GesamtText" & Chr(34) & ", " _
                   & Chr(34) & "ProduktlinieKat" & Chr(34) & ", " _
                   & Chr(34) & "ProduktlinieRfolge" & Chr(34) & ", "
                   
  sqlt = sqlt & Chr(34) & "ProduktlinieText" & Chr(34) & ", " _
              & Chr(34) & "ProduktbereichKat" & Chr(34) & ", " _
              & Chr(34) & "ProduktbereichRfolge" & Chr(34) & ", " _
              & Chr(34) & "ProduktbereichTextD" & Chr(34) & ", " _
              & Chr(34) & "ProduktbereichTextE" & Chr(34) & ", "
                   
  sqlt = sqlt & Chr(34) & "ProduktbereichTextF" & Chr(34) & ", " '10
  sqlt = sqlt & Chr(34) & "KatProduke" & Chr(34) & ", " _
              & Chr(34) & "RfolgeProdukte" & Chr(34) & ", " _
              & Chr(34) & "ProdukteTextD" & Chr(34) & ", " _
              & Chr(34) & "ProdukteTextE" & Chr(34) & ", "
              
  sqlt = sqlt & Chr(34) & "ProdukteTextF" & Chr(34) & ", " _
              & Chr(34) & "Rabattbegrenzung_5" & Chr(34) & ", " _
              & Chr(34) & "Preisbuch" & Chr(34) & ", " _
              & Chr(34) & "Artikelnr" & Chr(34) & ", " _
              & Chr(34) & "Artikelbez" & Chr(34) & ", "
  sqlt = sqlt & Chr(34) & "Artikelgruppe" & Chr(34) & ", " '20
  sqlt = sqlt & Chr(34) & "Artikelgruppe_Bez" & Chr(34) & ", "
              
                           
  sqlt = sqlt & Chr(34) & "Produktlinie" & Chr(34) & ", " _
              & Chr(34) & "Produktlinie_Bez" & Chr(34) & ", " _
              & Chr(34) & "VK_Statistikgruppe" & Chr(34) & ", "
  sqlt = sqlt & Chr(34) & "VK_StatGruppe_Bez" & Chr(34) & ", " '25
  sqlt = sqlt & Chr(34) & "Preisgruppe" & Chr(34) & ", " _
              & Chr(34) & "Preisgruppe_Bez" & Chr(34) & ", " _
              & Chr(34) & "Hoehe" & Chr(34) & ", " _
              & Chr(34) & "Breite" & Chr(34) & ", " _
              & Chr(34) & "Tiefe" & Chr(34) & ", " _
              & Chr(34) & "Gewicht" & Chr(34) & ", "

   sqlt = sqlt & Chr(34) & "Gewichtseinheit" & Chr(34) & ", "
   sqlt = sqlt & Chr(34) & "Ursprungsland" & Chr(34) & ", "
   sqlt = sqlt & Chr(34) & "Ursprungsland_Bez" & Chr(34) & ", "
   sqlt = sqlt & Chr(34) & "Zolltarifnr" & Chr(34) & ", "
   sqlt = sqlt & Chr(34) & "Schwelle" & Chr(34) & ", " '36
   sqlt = sqlt & Chr(34) & "Preis" & Chr(34) & ", "
   sqlt = sqlt & Chr(34) & "gueltig_ab" & Chr(34) & ", "
   sqlt = sqlt & Chr(34) & "gueltig_bis" & Chr(34) & ", "
   sqlt = sqlt & Chr(34) & "Text_englisch" & Chr(34) & ", " ' 40
   sqlt = sqlt & Chr(34) & "Text_deutsch" & Chr(34) & ", "
   sqlt = sqlt & Chr(34) & "Text_franzoesisch" & Chr(34) & ", "
   sqlt = sqlt & Chr(34) & "Schwellenart" & Chr(34) & ", "
   sqlt = sqlt & Chr(34) & "Verkaufseinheit" & Chr(34) & ", "
   
   sqlt = sqlt & Chr(34) & "ProduktlinieTextD" & Chr(34) & ", " '45
   sqlt = sqlt & Chr(34) & "ProduktlinieTextE" & Chr(34) & ", "
   sqlt = sqlt & Chr(34) & "ProduktlinieTextF" & Chr(34) & ", "
   sqlt = sqlt & Chr(34) & "Verkaufseinheit_de" & Chr(34) & ", "
   sqlt = sqlt & Chr(34) & "Verkaufseinheit_en" & Chr(34) & ", "
   sqlt = sqlt & Chr(34) & "Verkaufseinheit_fr" & Chr(34) & ", " '50
   sqlt = sqlt & Chr(34) & "EAN_Code" & Chr(34) & ", "
   sqlt = sqlt & Chr(34) & "LeereSeite" & Chr(34) & ", "
   sqlt = sqlt & Chr(34) & "Seriennummer_gefuehrt" & Chr(34)

                   
sqlt = sqlt & " from ERPLN.PLS_STRUKTURPREISLISTE_NS"

' Datumsbegrenzung Stichtagsverfahren:
sqlt = sqlt & " where " & Chr(34) & "gueltig_ab" & Chr(34) & " <= '" & Parameter_Stichtag & "'" _
              & " and (" & Chr(34) & "gueltig_bis" & Chr(34) & " >= '" & Parameter_Stichtag & "'" _
              & "  or  " & Chr(34) & "gueltig_bis" & Chr(34) & " = '19700101') "
              
' Richtigen Katalog ausw|fffd|hlen |fffd|ber Strukturk|fffd|rzel der ersten Ebene:
sqlt = sqlt & " and " & Chr(34) & "GesamtKat" & Chr(34) & " = '" & Parameter_Strukturkuerzel & "'"

' Preisbuch:
sqlt = sqlt & " and (" & Chr(34) & "Preisbuch" & Chr(34) & " = '" & Parameter_Preisbuch & "'" _
            & " or " & Chr(34) & "Preisbuch" & Chr(34) & " = 'Stamm'" _
            & " or " & Chr(34) & "LeereSeite" & Chr(34) & " = 'J')"
    
    
    
' ************* Einzelbl|fffd|tter werden nicht benutzt, variante ist immer "alle" ********************
Select Case variante
   Case "HNO" ' Einzelbl|fffd|tter
      sqlt = sqlt & " and substr(" & Chr(34) & "ProduktlinieKat" & Chr(34) & ",1,1) = 'H' "
   Case "MDP" ' Medap
      sqlt = sqlt & " and substr(" & Chr(34) & "ProduktlinieKat" & Chr(34) & ",1,1) = 'M' "
   Case "Chirurgie"
      sqlt = sqlt & " and substr(" & Chr(34) & "ProduktlinieKat" & Chr(34) & ",1,1) = 'C' "
   Case "Pflege"
      sqlt = sqlt & " and substr(" & Chr(34) & "ProduktlinieKat" & Chr(34) & ",1,1) = 'P' "
   Case "Gyn"
      sqlt = sqlt & " and substr(" & Chr(34) & "ProduktlinieKat" & Chr(34) & ",1,1) = 'G' "
   Case "Service"
      sqlt = sqlt & " and substr(" & Chr(34) & "ProduktlinieKat" & Chr(34) & ",1,1) = 'S' "
   Case "Dental"
      sqlt = sqlt & " and substr(" & Chr(34) & "ProduktlinieKat" & Chr(34) & ",1,1) = 'D' "
   Case "Wound"
      sqlt = sqlt & " and substr(" & Chr(34) & "ProduktlinieKat" & Chr(34) & ",1,1) = 'W' "
   Case "Thorax"
      sqlt = sqlt & " and substr(" & Chr(34) & "ProduktlinieKat" & Chr(34) & ",1,1) = 'T' "
End Select
' ************* Einzelbl|fffd|tter werden nicht benutzt, variante ist immer "alle" ********************




'doch nicht raus laut GBL / 24.10.2014
'If PLNameXX = "Standard-Preise_DE_CHI_2016" Or PLNameXX = "Standard-Preise_DE_GESAMT_2016" Then
'      sqlt = sqlt & " and trim(" & Chr(34) & "Artikelnr" & Chr(34) & ") <> '312.1100.0' "
'      sqlt = sqlt & " and trim(" & Chr(34) & "Artikelnr" & Chr(34) & ") <> '312.1000.0' "
'End If
    
'MsgBox sqlt

    sqltext = sqlt

End Function

Function sqltextMatrix(variante As String) As String
Dim sqlt As String

' indizierung der Felder beginnt mit 0

sqlt = "select " & Chr(34) & "RM_Artikel" & Chr(34) & ", "
sqlt = sqlt & Chr(34) & "RM_Kunde" & Chr(34) & ", "
sqlt = sqlt & Chr(34) & "RM_RabattP" & Chr(34)
                   
sqlt = sqlt & " from ERPLN.PLS_RABATTMATRIX_ART_KUNDE"

' Datumsbegrenzung Stichtagsverfahren:
sqlt = sqlt & " where " & Chr(34) & "gueltig_ab" & Chr(34) & " <= '" & Parameter_Stichtag & "'" _
              & " and (" & Chr(34) & "gueltig_bis" & Chr(34) & " >= '" & Parameter_Stichtag & "'" _
              & "  or  " & Chr(34) & "gueltig_bis" & Chr(34) & " = '19700101') "
              
' nur der gew|fffd|hlte Kunde:
sqlt = sqlt & " and " & Chr(34) & "RM_Kunde" & Chr(34) & " = '" & Parameter_Kunde & "'"
    
'MsgBox sqlt

'ThisWorkbook.Sheets("SQL").Activate
'Cells(1, 1) = "PLS_RABATTMATRIX_ART_KUNDE"
'Cells(1, 2) = sqlt
'ThisWorkbook.Sheets("PL_Erstellung").Activate

sqltextMatrix = sqlt

End Function
Function sqltextMatrixPG(variante As String) As String
Dim sqlt As String

' indizierung der Felder beginnt mit 0

sqlt = "select " & Chr(34) & "RM_Preisgruppe" & Chr(34) & ", "
sqlt = sqlt & Chr(34) & "RM_Kunde" & Chr(34) & ", "
sqlt = sqlt & Chr(34) & "RM_RabattP" & Chr(34)
                   
sqlt = sqlt & " from ERPLN.PLS_RABATTMATRIX_KND_PREISGRUP"

' Datumsbegrenzung Stichtagsverfahren:
sqlt = sqlt & " where " & Chr(34) & "gueltig_ab" & Chr(34) & " <= '" & Parameter_Stichtag & "'" _
              & " and (" & Chr(34) & "gueltig_bis" & Chr(34) & " >= '" & Parameter_Stichtag & "'" _
              & "  or  " & Chr(34) & "gueltig_bis" & Chr(34) & " = '19700101') "
              
' nur der gew|fffd|hlte Kunde:
sqlt = sqlt & " and " & Chr(34) & "RM_Kunde" & Chr(34) & " = '" & Parameter_Kunde & "'"
   
'MsgBox sqlt

'ThisWorkbook.Sheets("SQL").Activate
'Cells(2, 1) = "PLS_RABATTMATRIX_KND_PREISGRUP"
'Cells(2, 2) = sqlt
'ThisWorkbook.Sheets("PL_Erstellung").Activate

    sqltextMatrixPG = sqlt
End Function
Function sqltextPL(variante As String) As String
Dim sqlt As String

' indizierung der Felder beginnt mit 0

sqlt = "select " & Chr(34) & "RM_Preisliste" & Chr(34) & ", "
sqlt = sqlt & Chr(34) & "RM_Kunde" & Chr(34)
                   
sqlt = sqlt & " from ERPLN.PLS_RABATTMATRIX_PL"

             
' nur der gew|fffd|hlte Kunde:
sqlt = sqlt & " where " & Chr(34) & "RM_Kunde" & Chr(34) & " = '" & Parameter_Kunde & "'"
   
'MsgBox sqlt

'ThisWorkbook.Sheets("SQL").Activate
'Cells(3, 1) = "PLS_RABATTMATRIX_PL"
'Cells(3, 2) = sqlt
'ThisWorkbook.Sheets("PL_Erstellung").Activate

    sqltextPL = sqlt
End Function
Function sqltextRegionalPreisaufschlag(variante As String) As String
Dim sqlt As String

' indizierung der Felder beginnt mit 0

sqlt = "select " & Chr(34) & "RM_Artikel" & Chr(34) & ", "
sqlt = sqlt & Chr(34) & "RM_Preisfaktor" & Chr(34)
                   
sqlt = sqlt & " from ERPLN.PLS_PREISMATRIX_ART_REG"

' Datumsbegrenzung Stichtagsverfahren:
sqlt = sqlt & " where " & Chr(34) & "gueltig_ab" & Chr(34) & " <= '" & Parameter_Stichtag & "'" _
              & " and (" & Chr(34) & "gueltig_bis" & Chr(34) & " >= '" & Parameter_Stichtag & "'" _
              & "  or  " & Chr(34) & "gueltig_bis" & Chr(34) & " = '19700101') "
             
' nur die gew|fffd|hlte Region:
sqlt = sqlt & " and " & Chr(34) & "RM_Region" & Chr(34) & " = '" & Parameter_Region & "'"
' nur das gew|fffd|hlte Preisbuch:
sqlt = sqlt & " and " & Chr(34) & "RM_Preisbuch" & Chr(34) & " = '" & Parameter_Preisbuch & "'"


'MsgBox sqlt

'ThisWorkbook.Sheets("SQL").Activate
'Cells(4, 1) = "PLS_PREISMATRIX_ART_REG"
'Cells(4, 2) = sqlt
'ThisWorkbook.Sheets("PL_Erstellung").Activate

    sqltextRegionalPreisaufschlag = sqlt
End Function
Function sqltextMatrixAPL(variante As String) As String
Dim sqlt As String

' indizierung der Felder beginnt mit 0

sqlt = "select " & Chr(34) & "RM_Preisliste" & Chr(34) & ", "
sqlt = sqlt & Chr(34) & "RM_Artikel" & Chr(34) & ", "
sqlt = sqlt & Chr(34) & "RM_RabattP" & Chr(34)
                   
sqlt = sqlt & " from ERPLN.PLS_RABATTMATRIX_ART_PL"

' Datumsbegrenzung Stichtagsverfahren:
sqlt = sqlt & " where " & Chr(34) & "gueltig_ab" & Chr(34) & " <= '" & Parameter_Stichtag & "'" _
              & " and (" & Chr(34) & "gueltig_bis" & Chr(34) & " >= '" & Parameter_Stichtag & "'" _
              & "  or  " & Chr(34) & "gueltig_bis" & Chr(34) & " = '19700101') "
              
' nur die Preisliste des gew|fffd|hlten Kunden:
sqlt = sqlt & " and " & Chr(34) & "RM_Preisliste" & Chr(34) & " = '" & Kundenpreisliste & "'"
   
'MsgBox sqlt

'ThisWorkbook.Sheets("SQL").Activate
'Cells(5, 1) = "PLS_RABATTMATRIX_ART_PL"
'Cells(5, 2) = sqlt
'ThisWorkbook.Sheets("PL_Erstellung").Activate


    sqltextMatrixAPL = sqlt
End Function

Function sqltextMatrixPGPL(variante As String) As String
Dim sqlt As String

' indizierung der Felder beginnt mit 0

sqlt = "select " & Chr(34) & "RM_Preisliste" & Chr(34) & ", "
sqlt = sqlt & Chr(34) & "RM_Preisgruppe" & Chr(34) & ", "
sqlt = sqlt & Chr(34) & "RM_RabattP" & Chr(34)
                   
sqlt = sqlt & " from ERPLN.PLS_RABATTMATRIX_PG_PL"

' Datumsbegrenzung Stichtagsverfahren:
sqlt = sqlt & " where " & Chr(34) & "gueltig_ab" & Chr(34) & " <= '" & Parameter_Stichtag & "'" _
              & " and (" & Chr(34) & "gueltig_bis" & Chr(34) & " >= '" & Parameter_Stichtag & "'" _
              & "  or  " & Chr(34) & "gueltig_bis" & Chr(34) & " = '19700101') "
              
' nur die Preisliste des gew|fffd|hlten Kunden:
sqlt = sqlt & " and " & Chr(34) & "RM_Preisliste" & Chr(34) & " = '" & Kundenpreisliste & "'"
   
'MsgBox sqlt

'ThisWorkbook.Sheets("SQL").Activate
'Cells(6, 1) = "PLS_RABATTMATRIX_PG_PL"
'Cells(6, 2) = sqlt
'ThisWorkbook.Sheets("PL_Erstellung").Activate

    sqltextMatrixPGPL = sqlt
End Function
Function sqltextG_H(variante As String) As String
Dim sqlt As String

' indizierung der Felder beginnt mit 0
sqlt = "select " & Chr(34) & "FPreisbuch" & Chr(34) & ", "
sqlt = sqlt & Chr(34) & "FDefinition" & Chr(34) & ", "
sqlt = sqlt & Chr(34) & "FArtikelnr" & Chr(34) & ", "
sqlt = sqlt & Chr(34) & "FPreisliste" & Chr(34) & ", "
sqlt = sqlt & Chr(34) & "FPreisfaktor" & Chr(34) & ", "
sqlt = sqlt & Chr(34) & "Fgueltig_ab" & Chr(34) & ", "
sqlt = sqlt & Chr(34) & "Fgueltig_bis" & Chr(34) & ", "
sqlt = sqlt & Chr(34) & "Preisbuch" & Chr(34) & ", "
sqlt = sqlt & Chr(34) & "Artikelnr" & Chr(34) & ", "
sqlt = sqlt & Chr(34) & "LSchwelle" & Chr(34) & ", "
sqlt = sqlt & Chr(34) & "Schwellenart" & Chr(34) & ", "
sqlt = sqlt & Chr(34) & "LPreis" & Chr(34) & ", "
sqlt = sqlt & Chr(34) & "gueltig_ab" & Chr(34) & ", "
sqlt = sqlt & Chr(34) & "gueltig_bis" & Chr(34)
                   
sqlt = sqlt & " from ERPLN.PLS_Preis_GH"

' Datumsbegrenzung Stichtagsverfahren:
sqlt = sqlt & " where " & Chr(34) & "Fgueltig_ab" & Chr(34) & " <= '" & Parameter_Stichtag & "'" _
              & " and (" & Chr(34) & "Fgueltig_bis" & Chr(34) & " >= '" & Parameter_Stichtag & "'" _
              & "  or  " & Chr(34) & "Fgueltig_bis" & Chr(34) & " = '19700101') "
sqlt = sqlt & " and " & Chr(34) & "gueltig_ab" & Chr(34) & " <= '" & Parameter_Stichtag & "'" _
              & " and (" & Chr(34) & "gueltig_bis" & Chr(34) & " >= '" & Parameter_Stichtag & "'" _
              & "  or  " & Chr(34) & "gueltig_bis" & Chr(34) & " = '19700101') "
  
'MsgBox sqlt

'ThisWorkbook.Sheets("SQL").Activate
'Cells(7, 1) = "ERPLN.PLS_Preis_GH"
'Cells(7, 2) = sqlt
'ThisWorkbook.Sheets("PL_Erstellung").Activate

sqltextG_H = sqlt

End Function

Sub Neue_Seite(kat As String)

    ' Diese sub f|fffd|hrt den Seitenwechsel durch. Sie
    ' holt dazu vom Parameter-Blatt den passenden Seitenkopf
    
    Dim h2, h3, h4, h5 As Double                 ' H|fffd|he der einzelnen Kopfzeilen
    Dim w1, w2, w3, w4, w5, w6, w7 As Double     ' Breite der Kopfspalten                   unbenutzt
    Dim fakt As Double                           ' Streckfaktor auf Spaltenbreite           unbenutzt
    Dim KopfNr As Integer                        ' Nummer des Seitenkopfes
    Dim ersteKopfzeile As Integer                ' Erste Zeile der Vorlage eines Kopfes
    Dim Version As String                        ' kann unterschiedlich sein f|fffd|r verschiedene Kataloge

    If r > 10 Then ' Seitenumbruch, wird auf der ersten Seite nicht durchgef|fffd|hrt
        'ActiveWindow.SelectedSheets.HPageBreaks.Add before:=Rows("23")
        Range(Cells(r, 1), Cells(r, 4)).EntireRow.PageBreak = xlPageBreakManual
    End If

    ' Auswahl des richtigen Seitenkopfes:
    KopfNr = 1
    Select Case Left(kat, 2)
        Case "KM" ' Kopf Medap
            Select Case Sprache
                Case "D"
                    KopfNr = 4
                Case "E"
                    KopfNr = 5
                Case "F"
                    KopfNr = 6
            End Select
        Case Else
            Select Case Sprache
                Case "D"
                    KopfNr = 1
                Case "E"
                    KopfNr = 2
                Case "F"
                    KopfNr = 3
            End Select
    End Select

    ' |fffd|bernahme der Spaltenbreite,                                                          unbenutzt
    ' Spaltenbreite ist f|fffd|r alle K|fffd|pfe identisch
    ' w1 = Range("PL_Erstellung!A:A").Width
    ' w2 = Range("PL_Erstellung!B:B").Width
    ' w3 = Range("PL_Erstellung!C:C").Width
    ' w4 = Range("PL_Erstellung!D5:D5").Width
    ' w5 = Range("PL_Erstellung!E5:E5").Width
    ' w6 = Range("PL_Erstellung!F5:F5").Width
    ' w7 = Range("PL_Erstellung!G5:G5").Width

    Select Case KopfNr
        Case 1
            ersteKopfzeile = 2  ' Atmos Kopf, deutsch
        Case 2
            ersteKopfzeile = 34 ' Atmos Kopf, englisch
        Case 3
            ersteKopfzeile = 12 ' Atmos Kopf, franz|fffd|sisch
        Case 4
            ersteKopfzeile = 18 ' Medap Kopf, deutsch
        Case 5
            ersteKopfzeile = 24 ' Medap Kopf, englisch
        Case 6
            ersteKopfzeile = 29 ' Medap Kopf, franz|fffd|sisch
    End Select
    
    ' Kopf kopieren:            umgestellt auf separates Blatt Seitenkoepfe 3.11.16 kl
    Range("Seitenkoepfe!A" & CStr(ersteKopfzeile) & ":G" & CStr(ersteKopfzeile + 3)).Copy
    ' Zeilenh|fffd|he lesen:
    h2 = Range("Seitenkoepfe!A" & CStr(ersteKopfzeile) & ":G" & CStr(ersteKopfzeile)).Height
    h3 = Range("Seitenkoepfe!A" & CStr(ersteKopfzeile + 1) & ":G" & CStr(ersteKopfzeile + 1)).Height
    h4 = Range("Seitenkoepfe!A" & CStr(ersteKopfzeile + 2) & ":G" & CStr(ersteKopfzeile + 2)).Height
    h5 = Range("Seitenkoepfe!A" & CStr(ersteKopfzeile + 3) & ":G" & CStr(ersteKopfzeile + 3)).Height
    
    ' kopierten Kopf einf|fffd|gen:
    ActiveSheet.Paste Cells(r, 1)
    'Range(Cells(r, 1), Cells(r + 4, 7)) = Range("PL_Erstellung!A1:G5").Copy
    Cells(r, 1).Select
    ActiveSheet.PasteSpecial
    
    Cells(r + 1, 1) = kat
    
    Cells(r + 0, 1).RowHeight = h2
    Cells(r + 1, 1).RowHeight = h3
    Cells(r + 2, 1).RowHeight = h4
    Cells(r + 3, 1).RowHeight = h5
    
    
    ' korrekte Version zeigen kl 27.1.17:
    Version = Right(Parameter_Strukturkuerzel, 2)
    If IsNumeric(Version) Then
        Version = Right("00" & CStr(CInt(Version) + 1), 2)
    End If
    Select Case KopfNr
        Case 1, 4
            ' Atmos / Medap Kopf, deutsch
            Cells(r + 2, 5).Value = "Ausgabe  " & Version & " / " & Parameter_Jahr
              If Parameter_Kuerzel_Preisliste = "ASI" Then
                 Cells(r + 2, 7).Value = "Index:01_A"
               ElseIf Parameter_Kuerzel_Preisliste = "BPR" Then
                 Cells(r + 2, 7).Value = "Index:01_B"
               ElseIf Parameter_Kuerzel_Preisliste = "G-H" Then
                 Cells(r + 2, 7).Value = "Index:01_G"
               Else
                 Cells(r + 2, 7).Value = "Index:01_S"
               End If
        Case 2, 3, 5, 6
            ' Atmos /Medap Kopf, englisch
            Cells(r + 2, 5).Value = "Issue  " & Version & " / " & Parameter_Jahr
              If Parameter_Kuerzel_Preisliste = "ASI" Then
                 Cells(r + 2, 7).Value = "Index:01_A"
               ElseIf Parameter_Kuerzel_Preisliste = "BPR" Then
                 Cells(r + 2, 7).Value = "Index:01_B"
               ElseIf Parameter_Kuerzel_Preisliste = "G-H" Then
                 Cells(r + 2, 7).Value = "Index:01_G"
               Else
                 Cells(r + 2, 7).Value = "Index:01_S"
               End If
    End Select

    'Selection.ColumnWidth = Zentimeter * 5.052
    'fakt = 0.14
    '1.3333 ' 0,186
    'Range(Cells(r + 0, 1), Cells(r + 0, 1)).Select
    'Selection.EntireColumn.ColumnWidth = w1
    'Range(Cells(r + 0, 2), Cells(r + 0, 2)).Select
    'Selection.EntireColumn.ColumnWidth = w2
    'Range(Cells(r + 0, 3), Cells(r + 0, 3)).Select
    'Selection.EntireColumn.ColumnWidth = w3 * fakt
    'Range(Cells(r + 0, 4), Cells(r + 0, 4)).Select
    'Selection.EntireColumn.ColumnWidth = w4 * fakt
    'Range(Cells(r + 0, 5), Cells(r + 0, 5)).Select
    'Selection.EntireColumn.ColumnWidth = w5 * fakt
    'Range(Cells(r + 0, 6), Cells(r + 0, 6)).Select
    'Selection.EntireColumn.ColumnWidth = w6 * fakt
    'Range(Cells(r + 0, 7), Cells(r + 0, 7)).Select
    'Selection.EntireColumn.ColumnWidth = w7 * fakt
           
    Range(Cells(r + 1, 1), Cells(r + 1, 4)).MergeCells = True
    
    If codezeigen Then
        Cells(r + 2, 15) = "Struktur"
        Cells(r + 2, 13) = "Rabatt"
        Cells(r + 2, 14) = "Woher Rabatt"
    End If
    
    If zusatzdatenzeigen Then
        If NettoPreisliste Then
           Cells(r + 2, 8) = "Rabatt"
        End If
        Cells(r + 2, 9) = "GTIN/EAN Code"
        Cells(r + 2, 10) = "Seriennummer"
        Cells(r + 3, 10) = "Ja/Nein"
        Cells(r + 2, 11) = "Gewicht"
        Cells(r + 2, 12) = "Warencode"
    End If
    
    r = r + 4                               ' vier Zeilen wurden durch den Kopf eingef|fffd|gt
    letzter_Seitenwechsel = r               '
    Seitenzaehler = Seitenzaehler + 1
End Sub

Function PruefungDoppelteSZ(ByVal tex As String) As String
    If Len(tex) > 2 Then
       If Left(tex, 1) = "$" Then
          tex = Right(tex, Len(tex) - 2)
       End If
    End If
'    If Len(tex) > 5 Then
'       If InStr(tex, "$8") > 0 Then
'          tex = Left(tex, InStr(tex, "$8") - 1) & Right(tex, Len(tex) - InStr(tex, "$8") - 1)
'       End If
'        If InStr(tex, "$2") > 0 Then
'          tex = Left(tex, InStr(tex, "$2") - 1) & Right(tex, Len(tex) - InStr(tex, "$2") - 1)
'       End If
'        If InStr(tex, "$3") > 0 Then
'          tex = Left(tex, InStr(tex, "$3") - 1) & Right(tex, Len(tex) - InStr(tex, "$3") - 1)
'       End If
'    End If
    
    Do While Len(tex) > 5 And InStr(tex, Chr(10) & "$") > 0
       If InStr(tex, Chr(10) & "$") > 0 Then
          tex = Left(tex, InStr(tex, Chr(10) & "$")) & Right(tex, Len(tex) - InStr(tex, Chr(10) & "$") - 2)
       End If
    Loop
    
    PruefungDoppelteSZ = tex
End Function

'Sub VorauslesenHurenkinder(merkProdukt As String)
Sub VorauslesenHurenkinder(ByVal rs8 As Object, ByVal merkProdukt As String)
    ' 6 Zeilen vor Seitenende wird vorausgelesen, um festzustellen, ob Hurenkinder entstehen
    ' bei 1 oder 2 HK wird so umgebrochen, dass 3 Zeilen des Produkts auf der neuen Seite stehen
    Dim Zaehler As Integer
    Dim MaxLesen As Integer
    Dim hi As String
    Dim z As Integer

z = -1
    Umbruch_Artikel = "nicht umbrechen"
    MaxLesen = 10
    HK_Umbruch = False
'    If rs.EOF Then
    If rs8.EOF Then
      HK_Umbruch = False
      Exit Sub
    End If
'    Do While Not (rs.EOF) And Zaehler < MaxLesen
    Do While Not (rs8.EOF) And Zaehler < MaxLesen
'       rs.movenext
       rs8.movenext
'       If Not rs.EOF Then
       If Not rs8.EOF Then
           Zaehler = Zaehler + 1
           'If letzter_Seitenwechsel < r + Zaehler - 52 And z < 0 Then
           If letzter_Seitenwechsel < r + Zaehler - 54 And z < 0 Then    ' Auf 54 Zeilen je Seite umgestellt / AD
              ' vor diesem Artikel steht ein Seitenwechsel an:
'              hi = Trim(rs(18)) ' Artikelnr
              hi = Trim(rs8(18)) ' Artikelnr
              z = Zaehler
           End If
       
'           If Trim(rs(11)) <> merkProdukt Then
           If Trim(rs8(11)) <> merkProdukt Then
              ' keine Hurenkind-Situation, Umbruch wird durch andere Regel bestimmt
              HK_Umbruch = False
              Exit Do
           End If
       End If
    Loop
    If Zaehler >= 6 And Zaehler <= 7 Then
        HK_Umbruch = True
        End If
'    If rs.EOF Then
   ' If rs8.EOF Then
'        rs.movelast
     '   rs8.movelast
  '  End If
'    Do While Not (rs.BOF) And Zaehler > 0
    Do While Not (rs8.BOF) And Zaehler > 0
       If Zaehler = z - 3 Then 'z - 2 Then
'          Umbruch_Artikel = Trim(rs(18))
          Umbruch_Artikel = Trim(rs8(18))
       End If
'       Cells(r, 16) = "XX"
       
       rs.Moveprevious
       Zaehler = Zaehler - 1
    Loop
End Sub

Sub VorauslesenHurenkinder2(merkProdukt As String)
    ' 6 Zeilen vor Seitenende wird vorausgelesen, um festzustellen, ob Hurenkinder entstehen
    ' bei 1 oder 2 HK wird so umgebrochen, dass 3 Zeilen des Produkts auf der neuen Seite stehen
    Dim Zaehler As Integer
    Dim MaxLesen As Integer
    Dim hi As String
    Dim z As Integer

z = -1
    Umbruch_Artikel = "nicht umbrechen"
    MaxLesen = 10
    HK_Umbruch = False
    If rs.EOF Then
'    If rs8.EOF Then
      HK_Umbruch = False
      Exit Sub
    End If
    Do While Not (rs.EOF) And Zaehler < MaxLesen
'    Do While Not (rs8.EOF) And Zaehler < MaxLesen
       rs.movenext
'       rs8.movenext
       If Not rs.EOF Then
'       If Not rs8.EOF Then
           Zaehler = Zaehler + 1
           'If letzter_Seitenwechsel < r + Zaehler - 52 And z < 0 Then
           If letzter_Seitenwechsel < r + Zaehler - 52 And z < 0 Then   ' Auf 54 Zeilen je Seite umgestellt / AD
              ' vor diesem Artikel steht ein Seitenwechsel an:
              hi = Trim(rs(18)) ' Artikelnr
'              hi = Trim(rs8(18)) ' Artikelnr
              z = Zaehler
           End If
       
           If Trim(rs(11)) <> merkProdukt Then
'           If Trim(rs8(11)) <> merkProdukt Then
              ' keine Hurenkind-Situation, Umbruch wird durch andere Regel bestimmt
              HK_Umbruch = False
              Exit Do
           End If
       End If
    Loop
    ZeilenVorSeitenende = Zaehler
    If Zaehler >= 6 And Zaehler <= 7 Then
        HK_Umbruch = True
        End If
    If rs.EOF Then
'   ' If rs8.EOF Then
  '      rs.movelast        funktioniert nicht
      Call Preisliste_Lesen_Wiederholen
      Do While Not (rs.BOF) And Zaehler > 0
       If Zaehler = z - 3 Then 'z - 2 Then
          Umbruch_Artikel = Trim(rs(18))
       End If
       Zaehler = Zaehler - 1
      Loop
      Exit Sub
    End If
    Do While Not (rs.BOF) And Zaehler > 0 And 5 = 6
'    Do While Not (rs8.BOF) And Zaehler > 0
       If Zaehler = z - 3 Then 'z - 2 Then
          Umbruch_Artikel = Trim(rs(18))
'          Umbruch_Artikel = Trim(rs8(18))
       End If
'       Cells(r, 16) = "XX"
       
       rs.Moveprevious    ' war auskommentiert
       Zaehler = Zaehler - 1
    Loop

      Call Preisliste_Lesen_Wiederholen
      Do While Not (rs.BOF) And Zaehler > 0
       If Zaehler = z - 3 Then 'z - 2 Then
          Umbruch_Artikel = Trim(rs(18))
       End If
       Zaehler = Zaehler - 1
      Loop

End Sub

Sub Produktueberschrift(ProduktTitel As String)
    Cells(r, 2) = Trim(ProduktTitel)
    Cells(r, 3) = ""
    Cells(r, 4) = ""
    Cells(r, 5) = ""
    Cells(r, 6) = ""
           
    Range(Cells(r, 2), Cells(r, 6)).Interior.ColorIndex = 15
    Range(Cells(r, 2), Cells(r, 6)).MergeCells = True
    Range(Cells(r, 2), Cells(r, 6)).Select
    Selection.EntireRow.AutoFit
    r = r + 1
End Sub

Sub Preisliste_Lesen_Wiederholen()
    Dim ZaehlerLokal As Integer
    
    Set rs = CreateObject("ADODB.Recordset")
    rs.Open strSQL, db, 3, 3
    Set rs = db.Execute(strSQL)

    ZaehlerLokal = 1
    Do While Not (rs.EOF) And ZaehlerLokal < ZaehlerSaetzeHauptschleife
        rs.movenext
        ZaehlerLokal = ZaehlerLokal + 1
    Loop
End Sub
Sub Preisliste_Lesen_zum_zaehlen_der_Staffelpreiszeilen()
    Dim ZaehlerLokal As Integer
    Dim MerkerArtnr As String
    
    Set rs = CreateObject("ADODB.Recordset")
    rs.Open strSQL, db, 3, 3
    Set rs = db.Execute(strSQL)

    ZaehlerLokal = -1
    MerkerArtnr = "nix"
    Do While Not (rs.EOF)
      
       If MerkerArtnr <> Trim(rs(18)) Then
          ZaehlerLokal = ZaehlerLokal + 1
          VLArtnr(ZaehlerLokal) = Trim(rs(18))
          VLAnzahl(ZaehlerLokal) = 0
          MerkerArtnr = Trim(rs(18))
       End If
        VLAnzahl(ZaehlerLokal) = VLAnzahl(ZaehlerLokal) + 1
        rs.movenext
     
    Loop
End Sub

Sub Preisliste_einlesen(vari As String)
Dim zwi, zwi2 As Double
Dim merkProduktbereich  As String
Dim merkProdukt As String
Dim merkKategorie As String
Dim merkCode As String

Dim ProduktTitel As String
Dim hi, h2, hT, h3, h4 As String
Dim i As Integer
Dim Artikel_Mehrfachzeile As String
Dim letzteSchwelle As Double
Dim RabattProzent, GHPreis As Double
Dim RabattGefunden, GHPreisGefunden As Boolean
Dim Regionalaufschlag As Double ' Faktor
Dim AnzahlVorausgelesen As Integer

    Range(Cells(1, 1), Cells(65536, 14)).Select
    Selection.Clear
    Selection.RowHeight = 12.75
    
    Range("A18").Select
    merkProduktbereich = ""
    merkProdukt = ""
    MerkerProduktTitel = ""
    merkKategorie = ""
    letzteSchwelle = 0
    
    Call Preisliste_Lesen_zum_zaehlen_der_Staffelpreiszeilen
    
    Set rs = CreateObject("ADODB.Recordset")
    rs.Open strSQL, db, 3, 3
  '      rs.Open strSQL, db, 2, 3 ' Parameter 3 ist der Cursortyp 2 = dynamisch
   
'MsgBox strSQL
'ThisWorkbook.Sheets("SQL").Activate
'Cells(8, 1) = "Preisliste"
'Cells(8, 2) = strSQL
'ThisWorkbook.Sheets("Preisliste").Activate

    'Cells(1, 1) = strSQL
    Set rs = db.Execute(strSQL)
ZaehlerSaetzeHauptschleife = 1
    r = 1
    Do While Not (rs.EOF)
    
        'Zum Test, das bei einem bestimmten Artikel gestoppt wird
        'If Trim(rs(18)) = "000.0347.0" Then
        'If Trim(rs(18)) = "506.5865.0" Then
        'If Trim(rs(18)) = "538.4100.0" Then
        If Trim(rs(18)) = "340.0054.0" Then
        h2 = "hallo"
        End If
       
   
        If Trim(rs(5)) <> merkKategorie Then
           Select Case Sprache ' Sprache D,E,F
                Case "D"
                     Cells(r + 2, 1) = Trim(rs(8)) ' n|fffd|chste Produktkategorie
                Case "E"
                     Cells(r + 2, 1) = Trim(rs(9))
                Case "F"
                     Cells(r + 2, 1) = Trim(rs(10))
           End Select
           Cells(r + 2, 1) = Trim(rs(5))
           
           Select Case Sprache ' Sprache D,E,F
                Case "D"
                     Neue_Seite (Trim(rs(5)))
                Case "E"
                     Neue_Seite (Trim(rs(46)))
                Case "F"
                     Neue_Seite (Trim(rs(47)))
           End Select
           merkKategorie = Trim(rs(5))
           'r = r + 1
        Else
           ' mach nix
        End If
        
        
        ' bei S auf Stelle 2 des Code soll Seitenumbruch erfolgen:
         If Trim(rs(11)) <> merkCode Then
             merkCode = Trim(rs(11))
             If Mid(Trim(rs(11)), 2, 1) = "S" Then
                If Mid(Trim(rs(11)), 1, 1) <> "K" Then
                    ' neue Seite
                    Select Case Sprache ' Sprache D,E,F
                        Case "D"
                             Cells(r + 2, 1) = Trim(rs(8)) ' n|fffd|chste Produktkategorie
                             Neue_Seite (Trim(rs(5)))
                        Case "E"
                             Cells(r + 2, 1) = Trim(rs(9))
                             Neue_Seite (Trim(rs(46)))
                        Case "F"
                             Cells(r + 2, 1) = Trim(rs(10))
                             Neue_Seite (Trim(rs(47)))
                    End Select
                    ' die gelesene Zeile enh|fffd|lt keine Artikelinformation, nur Seitenwechsel
                    ' deshalb Sprung zum n|fffd|chsten Datenbank-Satz
                    GoTo NaechsterDatensatz
                End If
            End If
        End If
        
        ' Als Stoppunkt f|fffd|r Tests
        If Trim(rs(18)) = "605.2200.0" Then
        '"HM57521783"
        '"HM57505483"
        '"HM57500396"
        '"HM57500630"
        '"HM57525633"
        '"000.0347.0"
        '"HM57505045"
        '"HM57521783"
        i = 4
        End If
           
           ' Seitenwechsel wegen Staffelpreis
        If r >= letzter_Seitenwechsel + 45 Then
 
           ' wieviele Zeilen hat der Artikel?
           For i = 0 To 3000
              If VLArtnr(i) = Trim(rs(18)) Then
                 If VLAnzahl(i) > 1 Then
                    'If r + VLAnzahl(i) + 1 >= letzter_Seitenwechsel + 52 And Cells(r - 1, 3) <> "" Then
                    If r + VLAnzahl(i) + 1 >= letzter_Seitenwechsel + 54 And Cells(r - 1, 3) <> "" Then     ' Auf 54 Zeilen je Seite umgestellt / AD
                        HK_Umbruch2 = True
                        AnzahlVorausgelesen = VLAnzahl(i)
                        Umbruch_Artikel2 = Trim(rs(18))
                    End If
                      Exit For
                 End If
               
              End If
           Next
        End If
        ' Seitenwechsel
        'If letzter_Seitenwechsel = r - 47 Or (Not HK_Umbruch And letzter_Seitenwechsel = r - 48) Then
        'If letzter_Seitenwechsel = r - 49 Or (Not HK_Umbruch And letzter_Seitenwechsel = r - 50) Then       ' Auf 54 Zeilen je Seite umgestellt / AD
        If letzter_Seitenwechsel = r - 43 Or (Not HK_Umbruch And letzter_Seitenwechsel = r - 50) Then       ' Auf 54 Zeilen je Seite umgestellt / AD
           ' vorauslesen,
           ' 1. um festzustellen, ob Hurenkinder entstehen
           ' bei 1 oder 2 HK wird so umgebrochen, dass 3 Zeilen des Produkts auf der neuen Seite stehen
           ' 2. um festzustellen, ob Staffelpreiszeilen am Seitenumbruch getrennt werden
           ' dann wird mit Artikelbeginn umgebrochen
           ' 3. um festzustellen, ob mehr Zeilen eines Produkts auf der neuen Seite stehen als auf der alten
           ' bei maximal 4 Schusterjungen wird beim Produktbeginn umgebrochen
           
'            Call VorauslesenHurenkinder(merkProdukt)

          '  Call VorauslesenHurenkinder(rs, merkProdukt) ' L|fffd|sungsversuch byref |fffd|bergabe
            Call VorauslesenHurenkinder2(merkProdukt)
        End If
       'If letzter_Seitenwechsel < r - 52 Or (HK_Umbruch And letzter_Seitenwechsel = r - 48 + 2) Or (HK_Umbruch2) Then
       If letzter_Seitenwechsel < r - 54 Or (HK_Umbruch And r + ZeilenVorSeitenende - 5 >= letzter_Seitenwechsel + 54) Or (HK_Umbruch2) Then ' Auf 54 Zeilen je Seite umgestellt / AD
              Umbruch_Artikel = "nicht umbrechen"
              Umbruch_Artikel2 = "nicht umbrechen"
              HK_Umbruch2 = False
              Select Case Sprache ' Sprache D,E,F
                    Case "D"
                        Neue_Seite (merkKategorie)
                    Case "E"
                        Neue_Seite (Trim(rs(46)))
                    Case "F"
                        Neue_Seite (Trim(rs(47)))
              End Select
              ' seite gewechselt, aber produkt gleichgeblieben? ==> |fffd|berschrift wiederholen
              If Trim(rs(11)) = merkProdukt Then
                 Call Produktueberschrift(MerkerProduktTitel)
              End If
        End If
        If rs.BOF Then
        r = r
        End If
             If rs.EOF Then
        r = r
        End If
        
        ' neuer Produktbereich:
        ' steht ganz links, nicht farbig hinterlegt, z.B. Wound drainage
        ' funktioniert richtig
        If Trim(rs(6)) <> merkProduktbereich Then
           If letzter_Seitenwechsel < r - 1 Then
              Select Case Sprache ' Sprache D,E,F
                     Case "D"
                          Neue_Seite (merkKategorie)
                     Case "E"
                          Neue_Seite (Trim(rs(46)))
                     Case "F"
                          Neue_Seite (Trim(rs(47)))
              End Select
           End If
           Select Case Sprache ' Sprache D,E,F
              Case "D"
                   h2 = Trim(rs(8))  ' n|fffd|chster Produktbereich
              Case "E"
                   h2 = Trim(rs(9))
              Case "F"
                   h2 = Trim(rs(10))
           End Select
           If Len(h2) > 1 Then
             If InStr(1, h2, Chr(10)) > 1 Then
                h2 = Left(h2, InStr(1, h2, Chr(10)) - 1)
             End If
           End If
           Cells(r, 1) = h2
           Range(Cells(r, 1), Cells(r, 1)).Font.Size = 13
           Range(Cells(r, 1), Cells(r, 1)).Font.Bold = True
           Range(Cells(r, 1), Cells(r, 6)).Interior.ColorIndex = 0
           Range(Cells(r, 1), Cells(r, 6)).MergeCells = True
           
           Range(Cells(r, 1), Cells(r, 6)).Select
           Selection.EntireRow.AutoFit
           
           merkProduktbereich = Trim(rs(6))

           r = r + 1
        Else
           ' mach nix
        End If
        
        ' neues Produkt:
        ' farbig hinterlegte Zeilen
        If Trim(rs(11)) <> merkProdukt Then
         'If letzter_Seitenwechsel < r - 47 Then
         If letzter_Seitenwechsel < r - 49 Then
         'If letzter_Seitenwechsel < r - 54 Then
              Select Case Sprache ' Sprache D,E,F
                     Case "D"
                          Neue_Seite (merkKategorie)
                     Case "E"
                          Neue_Seite (Trim(rs(46)))
                     Case "F"
                          Neue_Seite (Trim(rs(47)))
              End Select
           End If
           Select Case Sprache ' Sprache D,E,F
              Case "D"
                   ProduktTitel = Trim(rs(13))  ' n|fffd|chstes Produkt
              Case "E"
                   ProduktTitel = Trim(rs(14))
              Case "F"
                   ProduktTitel = Trim(rs(15))
           End Select
           
           If Right(ProduktTitel, 1) = Chr(10) Then
                ProduktTitel = Left(ProduktTitel, Len(ProduktTitel) - 1)
           End If
           If Right(ProduktTitel, 1) = Chr(10) Then
                ProduktTitel = Left(ProduktTitel, Len(ProduktTitel) - 1)
           End If
          
           merkProdukt = Trim(rs(11))
           MerkerProduktTitel = ProduktTitel
           
           Call Produktueberschrift(ProduktTitel)
        Else
           ' mach nix
        End If
        
        ' Artikelbezeichnung:
         Select Case Sprache ' Sprache D,E,F
              Case "D"
                   h2 = PruefungDoppelteSZ(Trim(rs(41)))
                   h3 = Trim(rs(41))
              Case "E"
                   h2 = PruefungDoppelteSZ(Trim(rs(40)))
                   h3 = Trim(rs(40))
              Case "F"
                   h2 = PruefungDoppelteSZ(Trim(rs(42)))
                   h3 = Trim(rs(42))
         End Select
         
                   If Parameter_einzeilig Then
                      If Len(h2) > 4 Then
                         If InStr(h2, Chr(10)) > 0 Then
                            h2 = Left(h2, InStr(h2, Chr(10)) - 1)
                         End If
                      End If
                   Else
                      If Len(h3) > 1 Then
                         If Right(h3, 1) = Chr(10) Then
                            h3 = Left(h3, Len(h3) - 1)
                         End If
                      End If
                     
                        If Len(h3) > 1 Then
                         If Right(h3, 1) = Chr(10) Then
                            h3 = Left(h3, Len(h3) - 1)
                         End If
                      End If
                      If Len(h3) > 1 Then
                         If Right(h3, 1) = Chr(10) Then
                            h3 = Left(h3, Len(h3) - 1)
                         End If
                      End If
                    
                      If Parameter_TeilweiseAnzeigeSteuerzeichen Then
                         ' Text auf Steuerzeichen |fffd|berpr|fffd|fen.
                         If InStr(h2, Chr(10)) > 0 Then
                            hT = Left(h2, InStr(h2, Chr(10)) - 1)
                            
                            Do While InStr(h3, Chr(10)) > 0
                               h3 = Strings.Right(h3, Len(h3) - InStr(h3, Chr(10)))
                               ' ***********************************************************
                               ' hier m|fffd|ssen eventuelle neue Steuerzeichen eingef|fffd|gt werden:
                               ' ***********************************************************
                               If Len(h3) > 0 Then
                                    If Left(h3, 2) = "${" Or Left(h3, 2) = "$*" Or Left(h3, 2) = "$|fffd|" Then
                                       If InStr(h3, Chr(10)) > 0 Then
                                          h4 = PruefungDoppelteSZ(Left(h3, InStr(h3, Chr(10)) - 1))
                                          hT = hT & Chr(10) & h4
                                       Else
                                          hT = hT & Chr(10) & PruefungDoppelteSZ(h3)
                                       End If
                                    End If
                               End If
                            Loop
                            
                            h2 = hT
                         End If
                      End If
                   End If

        Cells(r, 4) = h2
        Cells(r, 3) = Trim(rs(18)) ' Artikelnr
        If Artikel_Mehrfachzeile = Trim(rs(18)) Then
            Cells(r, 3) = ""
        Else
            Artikel_Mehrfachzeile = ""
            letzteSchwelle = 0
        End If
       
     '  Cells(r, 7) = Trim(rs(16))  'Stern
        
     '   If codezeigen Then
      '  Cells(r, 15) = Trim(rs(11)) ' code
     '   Else
     '   Cells(r, 15) = ""
     '   End If
        
        If Cells(r, 3) = "340.0054.0" Then
        h2 = "hallo"
        End If
    ' Staffelpreis in n|fffd|chste Zeile:
  
    If Not StaffelErkannt And Artikel_Mehrfachzeile = Trim(rs(18)) Then
        ' eigentlich w|fffd|re letzte Zeile ein Staffelpreis gewesen
        'If Right(Cells(r - 1, 4), 1) = "1" Then
           'Cells(r - 1, 4) = Left(Cells(r - 1, 4), Len(Cells(r - 1, 4)) - 1)
           Cells(r, 4) = "bis 1"
           Select Case Sprache
            Case "D"
               Cells(r, 4) = "bis 1 " & Verkaufseinheit
            Case "E"
               Cells(r, 4) = "up to 1 " & Verkaufseinheit
            Case "F"
               Cells(r, 4) = "a 1 " & Verkaufseinheit
           End Select
           
           Cells(r, 3) = ""
           
           Cells(r, 6) = Cells(r - 1, 6)
           Cells(r - 1, 6) = ""
           
           Cells(r, 3).Font.Name = "Arial"
           Cells(r, 3).HorizontalAlignment = xlLeft
           Cells(r, 3).Font.Size = 8
           Cells(r, 4).Font.Name = "Arial"
           Cells(r, 4).HorizontalAlignment = xlLeft
           Cells(r, 4).Font.Size = 8
           Cells(r, 6).Font.Name = "Arial"
           Cells(r, 6).HorizontalAlignment = xlRight
           Cells(r, 6).Font.Size = 8
           Cells(r, 6).NumberFormat = "#,##0.00 |fffd|"
               With Range(Cells(r, 1), Cells(r, 6))
        .BorderAround LineStyle:=xlContinuous
        .BorderAround ColorIndex:=15
    End With
    With Range(Cells(r, 3), Cells(r, 3))
         .BorderAround LineStyle:=xlContinuous
         .BorderAround ColorIndex:=15
    End With
    With Range(Cells(r, 4), Cells(r, 4))
      '**   .BorderAround LineStyle:=xlContinuous
      '**   .BorderAround ColorIndex:=15
    End With
    With Range(Cells(r, 6), Cells(r, 6))
         .BorderAround LineStyle:=xlContinuous
         .BorderAround ColorIndex:=15
    End With
           r = r + 1
           letzteSchwelle = 1
       ' End If
    End If
    If Round(rs(36) / 10000) > 1 And (Round(rs(36) / 10000) < 9999999 Or Artikel_Mehrfachzeile = Trim(rs(18))) Then
        If Artikel_Mehrfachzeile <> Trim(rs(18)) Then
           Cells(r, 3).Font.Name = "Arial"
           Cells(r, 3).HorizontalAlignment = xlLeft
           Cells(r, 3).Font.Size = 8
           Cells(r, 4).Font.Name = "Arial"
           Cells(r, 4).HorizontalAlignment = xlLeft
           Cells(r, 4).Font.Size = 8
           With Range(Cells(r, 1), Cells(r, 6))
            .BorderAround LineStyle:=xlContinuous
            .BorderAround ColorIndex:=15
           End With
            With Range(Cells(r, 3), Cells(r, 3))
                 .BorderAround LineStyle:=xlContinuous
                 .BorderAround ColorIndex:=15
            End With
            With Range(Cells(r, 4), Cells(r, 4))
              '**   .BorderAround LineStyle:=xlContinuous
               '**  .BorderAround ColorIndex:=15
            End With
            With Range(Cells(r, 6), Cells(r, 6))
                 .BorderAround LineStyle:=xlContinuous
                 .BorderAround ColorIndex:=15
            End With
           r = r + 1
        End If
        Artikel_Mehrfachzeile = Trim(rs(18))
        StaffelErkannt = True
        Select Case Sprache
            Case "D"
               If rs(43) = 2 Then 'Schwellenart
                  h2 = "bis"
               Else
                  h2 = "ab"
               End If
            Case "E"
               If rs(43) = 2 Then
                  h2 = "up to"
               Else
                  h2 = "from"
               End If
            Case "F"
               If rs(43) = 2 Then
                  h2 = "a"
               Else
                  h2 = "de"
               End If
        End Select
        'Cells(r, 4) = h2 & " " & Round(rs(36) / 10000) & " " & Trim(rs(44)) 'Schwelle
        Select Case Sprache
                  Case "D"
                       Cells(r, 4) = h2 & " " & Round(rs(36) / 10000) & " " & Trim(rs(48)) 'Schwelle
                  Case "E"
                       Cells(r, 4) = h2 & " " & Round(rs(36) / 10000) & " " & Trim(rs(49)) 'Schwelle
                  Case "F"
                       Cells(r, 4) = h2 & " " & Round(rs(36) / 10000) & " " & Trim(rs(50)) 'Schwelle
               End Select
                       
        If h2 = "bis" Or h2 = "up to" Or h2 = "a" Then
           If Round(rs(36) / 10000) = 9999999 Then
              If letzteSchwelle > 0 Then
               Select Case Sprache
                 Case "D"
                    h2 = "ab " & letzteSchwelle + 1
                 Case "E"
                    h2 = "from " & letzteSchwelle + 1
                 Case "F"
                    h2 = "de " & letzteSchwelle + 1
               End Select
            '   Cells(r, 4) = h2 & " " & Trim(rs(44))
               Select Case Sprache
                  Case "D"
                    ' Verkaufseinheit = Trim(rs(48))
                     Cells(r, 4) = h2 & " " & Trim(rs(48))
                  Case "E"
                     Cells(r, 4) = h2 & " " & Trim(rs(49))
                  Case "F"
                     Cells(r, 4) = h2 & " " & Trim(rs(50))
               End Select
               
              End If
           End If
        End If
       
        letzteSchwelle = Round(rs(36) / 10000)
    Else
        StaffelErkannt = False
    End If
    
'    Verkaufseinheit = Trim(rs(44))
    Select Case Sprache
     Case "D"
        Verkaufseinheit = Trim(rs(48))
     Case "E"
        Verkaufseinheit = Trim(rs(49))
     Case "F"
        Verkaufseinheit = Trim(rs(50))
    End Select
    
    Artikel_Mehrfachzeile = Trim(rs(18))
    
    ' wenn keine Region gew|fffd|hlt ist, wird kein Regionalaufschlag ber|fffd|cksichtigt
        
    If AnzahlRegionalpreisaufschlaege > 0 Then ' eine Region wurde gew|fffd|hlt
       Regionalaufschlag = RegionalAufschlagErmitteln(rs(18))
    Else
       Regionalaufschlag = 1
    End If
     
    ' Ermitteln des VK-Preise Preisliste G-H
    GHPreisGefunden = False
        
    If Anzahl_GH_Lesen > 0 Then
           For i = 0 To Anzahl_GH_Lesen - 1
              If GHArtikel(i) = Trim(rs(18)) Then
                 GHPreis = GHLPreis(i)
                 GHPreisGefunden = True
              End If
           Next i
    End If
  
    If GHPreisGefunden = True Then
         Cells(r, 6) = Round(GHPreis / 10000, 2) * Aufschlag * Regionalaufschlag 'Preis
    Else
         Cells(r, 6) = Round(rs(37) / 10000 * Aufschlag * Regionalaufschlag, 2)   'Preis
    End If
        
    Cells(r, 3).Font.Name = "Arial"
    Cells(r, 3).HorizontalAlignment = xlLeft
    Cells(r, 3).Font.Size = 8
    
    Cells(r, 4).Font.Name = "Arial"
    Cells(r, 4).HorizontalAlignment = xlLeft
    Cells(r, 4).Font.Size = 8
    
    Cells(r, 6).Font.Name = "Arial"
    Cells(r, 6).HorizontalAlignment = xlRight
    Cells(r, 6).Font.Size = 8
    Cells(r, 6).NumberFormat = "#,##0.00 |fffd|"
    
    If NettoPreisliste Then
       RabattGefunden = False
       RabattProzent = 0
       ' 1. pr|fffd|fe, ob ein Rabatt pro Artikel vorliegt:
       For i = 0 To AnzahlArtikelRabatte - 1
          If RAArtikel(i) = Cells(r, 3) Then
             RabattProzent = RARabatt(i)
            ' Cells(r, 11) = "AR"
             RabattGefunden = True
             If codezeigen Then
             Cells(r, 13) = RabattProzent
             Cells(r, 14) = 1
             Else
                Cells(r, 13) = ""
                Cells(r, 14) = ""
             End If
          End If
       Next i
        ' 2. pr|fffd|fe, ob ein kundenspezifischer Rabatt pro Preisgruppe vorliegt:
       If Not RabattGefunden Then
          For i = 0 To AnzahlKundePreisgruppe - 1
             If Trim(RAPreisgruppe(i)) = Trim(rs(26)) Then
                RabattProzent = RARabattPG(i)
               ' Cells(r, 11) = "PG"
                RabattGefunden = True
             If codezeigen Then
             Cells(r, 13) = RabattProzent
             Cells(r, 14) = 2
             Else
                Cells(r, 13) = ""
                Cells(r, 14) = ""
             End If
             End If
          Next i
       End If
       ' 3. pr|fffd|fe, ob ein artikelspezifischer Rabatt pro Preisliste vorliegt,
       '    (mit dem ein Rabatt wirkungslos gemacht wird, weil immer 0):
       If Not RabattGefunden Then
          For i = 0 To AnzahlRabArtikelPreisliste - 1
             If RAArtikelPreisliste(i) = Cells(r, 3) Then
                RabattProzent = RARabattAP(i)
              '  Cells(r, 11) = "PL"
                RabattGefunden = True
             If codezeigen Then
             Cells(r, 13) = RabattProzent
             Cells(r, 14) = 3
             Else
                Cells(r, 13) = ""
                Cells(r, 14) = ""
             End If
             End If
          Next i
       End If
       ' 4. pr|fffd|fe, ob ein Rabatt pro Preisliste/Preisgruppe vorliegt,
       If Not RabattGefunden Then
          For i = 0 To AnzahlPgPl - 1
             If Trim(RAPgPl(i)) = Trim(rs(26)) Then
                RabattProzent = RARabattPgPl(i)
              '  Cells(r, 11) = "PGPL"
                RabattGefunden = True
             If codezeigen Then
             Cells(r, 13) = RabattProzent
             Cells(r, 14) = 4
             Else
                Cells(r, 13) = ""
                Cells(r, 14) = ""
             End If
             End If
          Next i
       End If
'       Cells(r, 11) = Cells(r, 6)
       Cells(r, 6) = Round(Cells(r, 6) / 100 * (100 - RabattProzent), 2) 'Preis
    End If
     
    Cells(r, 7) = Trim(rs(16))  'Stern
     
    If codezeigen Then
        Cells(r, 15) = Trim(rs(11))
    Else
        If zusatzdatenzeigen Then
           If NettoPreisliste Then
              Cells(r, 8) = RabattProzent & " %"
           End If
        Range(Cells(r, 9), Cells(r, 9)).Select
        Selection.NumberFormat = "@"
        Cells(r, 9) = Trim(rs(51))  'EAN
        Cells(r, 10) = Trim(rs(53))  'Seriennummer
        Cells(r, 11) = (Trim(rs(31)) / 10000) & " " & Trim(rs(32)) 'Gewicht
        Range(Cells(r, 12), Cells(r, 12)).Select
        Selection.NumberFormat = "@"
        Cells(r, 12) = Trim(rs(35))  'Warencode
        Else
          Cells(r, 8) = ""
          Cells(r, 9) = ""
          Cells(r, 10) = ""
          Cells(r, 11) = ""
          Cells(r, 13) = ""
          Cells(r, 14) = ""
        End If
    End If
        
    If codezeigen Then
        Cells(r, 15) = Trim(rs(11)) ' code
    Else
        Cells(r, 15) = ""
    End If
    
    If Cells(r, 3) = "535.5710.0" Or Cells(r, 3) = "535.5720.0" Or Cells(r, 3) = "535.5730.0" Or _
       Cells(r, 3) = "535.5740.0" Or Cells(r, 3) = "535.5750.0" Or Cells(r, 3) = "535.5760.0" Or _
       Cells(r, 3) = "535.5770.0" Then
        If Cells(r, 6).Value = 0 Then
              Cells(r, 6) = "0"
        End If
    Else
        If Cells(r, 6).Value = 0 Then
            If Sprache = "D" Then
                Cells(r, 6) = "auf Anfrage"
            End If
            If Sprache = "E" Then
             Cells(r, 6) = "on request"
            End If
            If Sprache = "F" Then
            Cells(r, 6) = "auf Anfrage"
            End If
        End If
    End If
'    Cells(r, 4).BorderAround = True
    With Range(Cells(r, 1), Cells(r, 6))
        .BorderAround LineStyle:=xlContinuous
        .BorderAround ColorIndex:=15
    End With
    With Range(Cells(r, 3), Cells(r, 3))
         .BorderAround LineStyle:=xlContinuous
         .BorderAround ColorIndex:=15
    End With
    With Range(Cells(r, 4), Cells(r, 4))
      '**   .BorderAround LineStyle:=xlContinuous
      '**   .BorderAround ColorIndex:=15
    End With
    With Range(Cells(r, 6), Cells(r, 6))
         .BorderAround LineStyle:=xlContinuous
         .BorderAround ColorIndex:=15
    End With
        
    Range(Cells(r, 6), Cells(r, 6)).Select
   'Selection.NumberFormat = "#,##0"
   ' Selection.EntireColumn.AutoFit
    Selection.EntireRow.AutoFit
   ' Selection.HorizontalAlignment = xlLeft
   ' Selection.Interior.ColorIndex = 2
                        
  r = r + 1
            
NaechsterDatensatz:
        rs.movenext
        ZaehlerSaetzeHauptschleife = ZaehlerSaetzeHauptschleife + 1
    Loop

    Range("A1").Select

    anzahl_gelesene_zeilen = r
End Sub

Sub ArtikelRabatteLesen(vari As String)
    strSQL = sqltextMatrix("xxx")
   ' MsgBox strSQL
    Set rs = db.Execute(strSQL)
    Do While Not (rs.EOF)
       RAArtikel(AnzahlArtikelRabatte) = Trim(rs(0)) ' Artikelnr
       RARabatt(AnzahlArtikelRabatte) = Trim(rs(2)) ' Rabatt
       AnzahlArtikelRabatte = AnzahlArtikelRabatte + 1
       rs.movenext
    Loop
End Sub
Sub KundePreisgruppeLesen(vari As String)
    strSQL = sqltextMatrixPG("xxx")
   ' MsgBox strSQL
    Set rs = db.Execute(strSQL)
    Do While Not (rs.EOF)
       RAPreisgruppe(AnzahlKundePreisgruppe) = Trim(rs(0)) ' Preisgruppe
       RARabattPG(AnzahlKundePreisgruppe) = Trim(rs(2)) ' Rabatt
       AnzahlKundePreisgruppe = AnzahlKundePreisgruppe + 1
       rs.movenext
    Loop
End Sub
Sub KundePreislisteLesen(vari As String)
    strSQL = sqltextPL("xxx")
   ' MsgBox strSQL
    Set rs = db.Execute(strSQL)
    Kundenpreisliste = ""
    Do While Not (rs.EOF)
       Kundenpreisliste = Trim(rs(0))
       rs.movenext
    Loop
End Sub
Sub RabArtikelPreislisteLesen(vari As String)
    strSQL = sqltextMatrixAPL("xxx")
   ' MsgBox strSQL
    Set rs = db.Execute(strSQL)
    Do While Not (rs.EOF)
       RAArtikelPreisliste(AnzahlRabArtikelPreisliste) = Trim(rs(0)) ' Preisliste
       RARabattAP(AnzahlRabArtikelPreisliste) = Trim(rs(2)) ' Rabatt
       AnzahlRabArtikelPreisliste = AnzahlRabArtikelPreisliste + 1
       rs.movenext
    Loop
End Sub
Sub RegionalPreisaufschlagLesen(vari As String)
    strSQL = sqltextRegionalPreisaufschlag("xxx")
   ' um welche Preisliste es sich handelt, spielt keine Rolle
  ' MsgBox strSQL
    Set rs = db.Execute(strSQL)
    Do While Not (rs.EOF)
       RegionalpreisaufschlagArtikel(AnzahlRegionalpreisaufschlaege) = Trim(rs(0)) ' Preisliste
       RegionalpreisaufschlagFaktor(AnzahlRegionalpreisaufschlaege) = Trim(rs(1)) ' Rabatt
       AnzahlRegionalpreisaufschlaege = AnzahlRegionalpreisaufschlaege + 1
       rs.movenext
    Loop
End Sub
Sub RabPgPlLesen(vari As String)
    strSQL = sqltextMatrixPGPL("xxx")
  '  MsgBox strSQL
    Set rs = db.Execute(strSQL)
    Do While Not (rs.EOF)
       RAPgPl(AnzahlPgPl) = Trim(rs(1)) ' Preisgruppe
       RARabattPgPl(AnzahlPgPl) = Trim(rs(2)) ' Rabatt
       AnzahlPgPl = AnzahlPgPl + 1
       rs.movenext
    Loop
End Sub
Function RegionalAufschlagErmitteln(Artnr As String)
   Dim i As Integer

   RegionalAufschlagErmitteln = 1
   If AnzahlRegionalpreisaufschlaege > 0 Then
      For i = 0 To AnzahlRegionalpreisaufschlaege - 1
         If Trim(RegionalpreisaufschlagArtikel(i)) = Trim(Artnr) Then
            RegionalAufschlagErmitteln = RegionalpreisaufschlagFaktor(i)
            Exit For
         End If
      Next
   End If
End Function
Sub Artikel_GH_Lesen(vari As String)
    strSQL = sqltextG_H("xxx")
    'MsgBox strSQL
    Set rs = db.Execute(strSQL)
    Do While Not (rs.EOF)
       GHArtikel(Anzahl_GH_Lesen) = Trim(rs(8)) ' Artikelnr
       GHFaktor(Anzahl_GH_Lesen) = Trim(rs(4)) ' Preisfaktor
       GHSchwelle(Anzahl_GH_Lesen) = Trim(rs(9)) ' LSchwelle
       GHSchwellenart(Anzahl_GH_Lesen) = Trim(rs(10)) ' Schwellenart
       GHLPreis(Anzahl_GH_Lesen) = Trim(rs(11)) ' LPreis
       Anzahl_GH_Lesen = Anzahl_GH_Lesen + 1
       
       rs.movenext
    Loop
'    MsgBox Anzahl_GH_Lesen

End Sub

Sub optik_regionen(vari As String)
Dim flipflop As Boolean

Select Case vari
   Case "HNO"
    '  Cells(erster, 1) = "Gesamt"
   Case "Chirurgie"
   '   Cells(erster, 1) = "OEM-Umsatz"

End Select

' Bezeichnung oben:

' Cells(erster, 4) = "Rechnungsausgang"
'...

If 5 = 6 Then
For n = erster + 2 To erster + anzahl_gelesene_zeilen
    With Cells(n, 1)
       .Interior.ColorIndex = 2
       .Font.Name = "Arial"
       .Font.Size = 10
    End With
Next
End If

' Titelzeile:
If 5 = 6 Then
For n = erster To erster  '+ 1
    For s = 1 To 7
       With Cells(n, s)
          .Interior.ColorIndex = 8
          .Font.Name = "Arial"
          .HorizontalAlignment = xlCenter
          .Font.Size = 10
       End With
    Next s
Next
End If

If 5 = 6 Then
flipflop = False
For n = erster + 2 To erster + anzahl_gelesene_zeilen
    flipflop = Not flipflop
    For s = 2 To 7
        With Cells(n, s)
           .HorizontalAlignment = xlRight
           
              .Font.Name = "Arial"
              .Font.Size = 9
              
              .Font.Color = RGB(60, 0, 0)
              If flipflop Then
                 .Interior.ColorIndex = 4
              Else
                 .Interior.ColorIndex = 6
              End If
         
           
        End With
    Next
Next
End If
    
End Sub

Sub Inhaltsverzeichnis()
Dim i, j As Integer
Dim Textmerker As String
Dim Seite As Integer
Dim k As Integer
Dim MerkerBereich As String
Dim MerkerGer|fffd|t As String

ThisWorkbook.Sheets("Inhalt").Activate

Range(Cells(3, 1), Cells(1000, 5)).Select
Selection.Clear


ThisWorkbook.Sheets("Preisliste").Activate

Seite = 5
k = 3
  For i = 1 To anzahl_gelesene_zeilen '650
        If Cells(i, 21) > 0 Then ' kl 15.12.17  20->21
           Seite = Cells(i, 21)
        End If
        
        If Trim(Cells(i, 1)) <> "" Then
            If MerkerBereich <> Trim(Cells(i, 1).Value) And Trim(Cells(i, 2)) <> "_ _" And Trim(Cells(i, 6).Value) <> "" Then  ' 5 war englisch -> 6 ???
               MerkerBereich = Trim(Cells(i, 1).Value)
               ThisWorkbook.Sheets("Inhalt").Cells(k, 1) = MerkerBereich
               '  ThisWorkbook.Sheets("Inhalt").Cells(k, 3) = Seite
        '        ThisWorkbook.Sheets("Inhalt").Cells(k, 5) = "1"
               ThisWorkbook.Sheets("Inhalt").Cells(k, 4) = Seite
               k = k + 1
            End If
            If MerkerGer|fffd|t <> Trim(Cells(i, 1).Value) And Trim(Cells(i, 2)) = "" And 5 = 6 Then ' And Trim(Cells(i, 6).Value) = "" Then
               MerkerGer|fffd|t = Trim(Cells(i, 1).Value)
               ThisWorkbook.Sheets("Inhalt").Cells(k, 1) = MerkerGer|fffd|t
                '  ThisWorkbook.Sheets("Inhalt").Cells(k, 3) = Seite
               ThisWorkbook.Sheets("Inhalt").Cells(k, 4) = Seite
         '      ThisWorkbook.Sheets("Inhalt").Cells(k, 5) = "2"
               k = k + 1
            End If
        End If
        ' Unterartikel im Inhaltsverzeichnis wieder raus kl 11.1.18:
        If 5 = 5 Then
           If Trim(Cells(i, 2)) <> " " And Trim(Cells(i, 2)) = "_" Then
               'ThisWorkbook.Sheets("Inhalt").Cells(k, 2) = Trim(Cells(i, 2))
               ThisWorkbook.Sheets("Inhalt").Cells(k, 1) = Trim(Cells(i, 4)) ' Artikelbezeichnung kl 15.12.17
              ' ThisWorkbook.Sheets("Inhalt").Cells(k, 3) = Trim(Cells(i, 3)) ' Artikelnummer kl 15.12.17
               '  ThisWorkbook.Sheets("Inhalt").Cells(k, 3) = Seite
               ThisWorkbook.Sheets("Inhalt").Cells(k, 4) = Seite
           '     ThisWorkbook.Sheets("Inhalt").Cells(k, 5) = "3"
               k = k + 1
           End If
           If Trim(Cells(i, 2)) <> " " And Trim(Cells(i, 2)) = "_ _" And 5 = 6 Then '5=6 kl 11.1.18
               'ThisWorkbook.Sheets("Inhalt").Cells(k, 2) = Trim(Cells(i, 2))
               ThisWorkbook.Sheets("Inhalt").Cells(k, 2) = Trim(Cells(i, 4)) ' Artikelbezeichnung kl 15.12.17
               ThisWorkbook.Sheets("Inhalt").Cells(k, 3) = Trim(Cells(i, 3)) ' Artikelnummer kl 15.12.17
               '  ThisWorkbook.Sheets("Inhalt").Cells(k, 3) = Seite
               ThisWorkbook.Sheets("Inhalt").Cells(k, 4) = Seite
           '     ThisWorkbook.Sheets("Inhalt").Cells(k, 5) = "4"
               k = k + 1
           End If
        End If
' F|fffd|r Testzwecke um auf einer bestimmten Seite zu halten.
'   If Cells(i, 21) = "200" Then
'            Seite = Cells(i, 21)
'   End If
 
  Next i
  
ThisWorkbook.Sheets("Inhalt").Activate
Range("A1").Select
End Sub
'-End-of-File-

Attribute VB_Name = "DieseArbeitsmappe"
Attribute VB_Base = "0{00020819-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Tabelle2"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Tabelle3"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Tabelle4"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True

' InQuest injected base64 decoded content
' *'jZkz+

INQUEST-PP=macro
