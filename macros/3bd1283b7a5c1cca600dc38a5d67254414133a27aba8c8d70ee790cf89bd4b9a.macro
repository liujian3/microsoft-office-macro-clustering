Attribute VB_Name = "Fun_DT"
'====///NGUON DU LIEU: THAM KHAO DIEN DAN GIAIPHAPEXCEL.COM
Function KiemtraSheet(NameSh As String) As Boolean
  On Error Resume Next
  KiemtraSheet = CBool(Len(Worksheets(NameSh).Name) > 0)
End Function
Function Kiemtra_WbOpen(WBName As String) As Boolean
    Dim WB As Workbook
    On Error Resume Next
    Set WB = Workbooks(WBName)
    If Err = 0 Then Kiemtra_WbOpen = True Else Kiemtra_WbOpen = False
End Function

Sub SetHederTitle()
Dim i As Long
Dim Title As String
Title = UniConvert("Du75 toa1n BNSC", "VNI")
For i = 1 To Sheets.Count
    With Sheets(i).PageSetup
        .LeftHeader = _
        "&""Times New Roman,Bold Italic""&9" & Title & " - |fffd|T: 0966.966.455"
    End With
Next
End Sub
Sub Add_RightClickSheet(sh As Worksheet)
    With Sheets("Setting")
        Dim srng As Range
        Set srng = .Range("G:G").Find(sh.Name, , xlValues, xlWhole, xlByRows, xlNext, False, False)
        If Not srng Is Nothing Then
            Sheets("Config").Range("O18").Value = .Range("F" & srng.Row).Value
        Else
            Sheets("Config").Range("O18").Value = ""
        End If
    End With
End Sub
Sub Hide()
    On Error Resume Next
    Dim i As Long
    For i = 1 To ThisWorkbook.Sheets.Count
        ThisWorkbook.Sheets(i).Visible = True
    Next
End Sub




Attribute VB_Name = "Mod_Main"
Option Private Module
Public Const NameDT = "DTBN.xla"
Sub Reset_RightClick()
  Application.CommandBars("Cell").Reset
  Application.CommandBars(Application.CommandBars("Cell").Index + 3).Reset
End Sub
Sub Add_MacroDescription()
    Dim i As Long
    With ThisWorkbook.Sheets("Setting")
        For i = 2 To .Range("B65536").End(xlUp).Row
            If .Range("B" & i) <> "" Then
                Application.MacroOptions .Range("B" & i).Value, .Range("C" & i).Value, Category:="Dutoan"
            End If
        Next
    End With
End Sub
Function EvalFind(What, Where As Range) As Range
  Dim i&, q$
  If VarType(What) = vbString Then q = """"
  On Error Resume Next
  i = Evaluate("MATCH(" & q & What & q & "," & Where.Address(External:=True) & ",0)")
  If i > 0 Then Set EvalFind = Where(i)
End Function
Sub RenameSh()
    On Error Resume Next
    With Sheets("Setting")
        .Range("G2").Value = Sh_Dutoan.Name
        .Range("G3").Value = Sh_PTVT.Name
        .Range("G4").Value = Sh_GTVT.Name
        .Range("G5").Value = Sh_DGCT.Name
        .Range("G6").Value = Sh_Duthau.Name
        .Range("G7").Value = Sh_THKP.Name
        .Range("G8").Value = Sh_CPVC.Name
        .Range("G9").Value = Sh_CVC.Name
        .Range("G10").Value = Sh_LCNXD.Name
        .Range("G11").Value = Sh_PTCM.Name
        .Range("G12").Value = Sh_LCNLM.Name
        .Range("G13").Value = Sh_CTDGM.Name
        .Range("G14").Value = Sh_BGM.Name
        .Range("G15").Value = Sh_BuNL_TL.Name
        .Range("G16").Value = Sh_DVCM.Name
        .Range("G17").Value = Sh_THCPXD.Name
        .Range("G18").Value = Sh_THCPTB.Name
        .Range("G19").Value = Sh_TDT.Name
        .Range("G20").Value = Sh_Bia.Name
        .Range("G21").Value = Sh_ConfigBN.Name
    End With
End Sub
Function GetNameSh(sh As Worksheet) As String
If DemKytu(sh.Name, " ") > 0 Then
    GetNameSh = "'" & sh.Name & "'"
Else
    GetNameSh = sh.Name
End If
End Function

Function DemKytu(Chuoi As String, Kytu As String) As Long
    DemKytu = Len(Chuoi) - Len(Replace(Chuoi, Kytu, ""))
End Function
Sub ShowALL()
    Dim i As Long
    For i = 1 To Worksheets.Count
        Sheets(i).Visible = xlSheetVisible
    Next
End Sub

Attribute VB_Name = "Mod_Public"
Option Private Module
Function DiachiVung(Vung As Range) As String
On Error Resume Next
    If Not Vung Is Nothing Then
        DiachiVung = Vung.Address
    End If
End Function
 
Function QLDA(DiachiNoiSuy As String, CPXD_Truocthue As Double, CPTB_Truocthue As Double) As Double
On Error Resume Next
Dim shConfig As Worksheet
Set shConfig = Sheets(Sheets("Setting").Range("G21").Value)
If DiachiNoiSuy = "" Then
    QLDA = 0
Else
   QLDA = Round(Noisuy(DiachiNoiSuy, ActiveWorkbook.Names("i_LoaiCT").RefersToRange.Value, (CPXD_Truocthue + CPTB_Truocthue) / 10 ^ 9), 3)
End If
End Function
Function LapDADT(DiachiNoiSuy As String, CPXD_Truocthue, CPTB_Truocthue, Loai As Long) As Double
On Error Resume Next
Dim shConfig As Worksheet
Set shConfig = Sheets(Sheets("Setting").Range("G21").Value)
If DiachiNoiSuy = "" Then
    LapDADT = 0
Else
    Select Case ActiveWorkbook.Names("i_VB").RefersToRange.Value
        Case 1
            If Loai = 0 Then
                If (CPXD_Truocthue + CPTB_Truocthue) / 10 ^ 9 < 15 Then
                    LapDADT = 0
                Else
                    LapDADT = Round(Noisuy(DiachiNoiSuy, ActiveWorkbook.Names("i_LoaiCT").RefersToRange.Value, (CPXD_Truocthue + CPTB_Truocthue) / 10 ^ 9), 3)
                End If
            Else
                LapDADT = Round(Noisuy(DiachiNoiSuy, ActiveWorkbook.Names("i_LoaiCT").RefersToRange.Value, (CPXD_Truocthue + CPTB_Truocthue) / 10 ^ 9), 3)
            End If
        Case 2
            If Loai = 0 Then
                If (CPXD_Truocthue + CPTB_Truocthue) / 10 ^ 9 < 7 Then
                    LapDADT = 0
                Else
                    LapDADT = Round(Noisuy(DiachiNoiSuy, ActiveWorkbook.Names("i_LoaiCT").RefersToRange.Value, (CPXD_Truocthue + CPTB_Truocthue) / 10 ^ 9), 3)
                End If
            Else
                LapDADT = Round(Noisuy(DiachiNoiSuy, ActiveWorkbook.Names("i_LoaiCT").RefersToRange.Value, (CPXD_Truocthue + CPTB_Truocthue) / 10 ^ 9), 3)
            End If
        Case Else
            LapDADT = Round(Noisuy(DiachiNoiSuy, ActiveWorkbook.Names("i_LoaiCT").RefersToRange.Value, (CPXD_Truocthue + CPTB_Truocthue) / 10 ^ 9), 3)
    End Select
End If
End Function
Function BCKTKT(DiachiNoiSuy As String, CPXD_Truocthue, CPTB_Truocthue) As Double
On Error Resume Next
If DiachiNoiSuy = "" Then
    BCKTKT = 0
Else
    Select Case ActiveWorkbook.Names("i_VB").RefersToRange.Value
        Case 1
            If (CPXD_Truocthue + CPTB_Truocthue) / 10 ^ 9 >= 15 Then
                BCKTKT = 0
            Else
                BCKTKT = Round(Noisuy(DiachiNoiSuy, ActiveWorkbook.Names("i_LoaiCT").RefersToRange.Value, (CPXD_Truocthue + CPTB_Truocthue) / 10 ^ 9), 3)
            End If
        Case 2
            If (CPXD_Truocthue + CPTB_Truocthue) / 10 ^ 9 >= 7 Then
                BCKTKT = 0
            Else
                BCKTKT = Round(Noisuy(DiachiNoiSuy, ActiveWorkbook.Names("i_LoaiCT").RefersToRange.Value, (CPXD_Truocthue + CPTB_Truocthue) / 10 ^ 9), 3)
            End If
        Case Else
            BCKTKT = Round(Noisuy(DiachiNoiSuy, ActiveWorkbook.Names("i_LoaiCT").RefersToRange.Value, (CPXD_Truocthue + CPTB_Truocthue) / 10 ^ 9), 3)
    End Select
End If
End Function

Function TK(DiachiNoiSuy As String, CPXD_Truocthue, Rieng As Long) As Double
On Error Resume Next
Dim CapCT As Long, CPTB_Truocthue
CapCT = ActiveWorkbook.Names("i_CapCT").RefersToRange.Value - 1
CPTB_Truocthue = ActiveWorkbook.Names("GTB").RefersToRange.Value
If DiachiNoiSuy = "" Then
    TK = 0
Else
    Select Case ActiveWorkbook.Names("i_VB").RefersToRange.Value
        Case 1
            If Rieng = 1 Then
                TK = Round(Noisuy(DiachiNoiSuy, CPXD_Truocthue / 10 ^ 9, CapCT), 3)
            Else
                If (CPXD_Truocthue + CPTB_Truocthue) / 10 ^ 9 < 15 Then
                    TK = 0
                Else
                    TK = Round(Noisuy(DiachiNoiSuy, CPXD_Truocthue / 10 ^ 9, CapCT), 3)
                End If
            End If
        Case 2
            If Rieng = 1 Then
                TK = Round(Noisuy(DiachiNoiSuy, CPXD_Truocthue / 10 ^ 9, CapCT), 3)
            Else
                If (CPXD_Truocthue + CPTB_Truocthue) / 10 ^ 9 < 7 Then
                    TK = 0
                Else
                    TK = Round(Noisuy(DiachiNoiSuy, CPXD_Truocthue / 10 ^ 9, CapCT), 3)
                End If
            End If
        Case Else
            TK = Round(Noisuy(DiachiNoiSuy, CPXD_Truocthue / 10 ^ 9, CapCT), 3)
    End Select
End If
End Function

'- Tham tra du toan
Function TTDT(DiachiNoiSuy As String, CPXD_Truocthue) As Double
On Error Resume Next
Dim LoaiCT
LoaiCT = ActiveWorkbook.Names("i_LoaiCT").RefersToRange.Value
If DiachiNoiSuy = "" Then
    TTDT = 0
Else
   TTDT = Round(Noisuy(DiachiNoiSuy, LoaiCT, CPXD_Truocthue / 10 ^ 9), 3)
End If
End Function
'- Tham tra thiet ke
Function TTTK(DiachiNoiSuy As String, CPXD_Truocthue) As Double
On Error Resume Next
Dim LoaiCT
LoaiCT = ActiveWorkbook.Names("i_LoaiCT").RefersToRange.Value
If DiachiNoiSuy = "" Then
    TTTK = 0
Else
   TTTK = Round(Noisuy(DiachiNoiSuy, LoaiCT, CPXD_Truocthue / 10 ^ 9), 3)
End If
End Function
'- Tham tra thiet ke
Function TTHQKTDA(DiachiNoiSuy As String, CPXD_Truocthue, CPTB_Truocthue) As Double
On Error Resume Next
Dim LoaiCT
LoaiCT = ActiveWorkbook.Names("i_LoaiCT").RefersToRange.Value
If DiachiNoiSuy = "" Then
    TTHQKTDA = 0
Else
   TTHQKTDA = Round(Noisuy(DiachiNoiSuy, LoaiCT, (CPXD_Truocthue + CPTB_Truocthue) / 10 ^ 9), 3)
End If
End Function
Function Thau_XD(DiachiNoiSuy As String, CPXD_Truocthue) As Double
On Error Resume Next
Dim LoaiCT
LoaiCT = ActiveWorkbook.Names("i_LoaiCT").RefersToRange.Value
If DiachiNoiSuy = "" Then
    Thau_XD = 0
Else
   Thau_XD = Round(Noisuy(DiachiNoiSuy, LoaiCT, CPXD_Truocthue / 10 ^ 9), 3)
End If
End Function
Function MT_XD(DiachiNoiSuy As String, CPXD_Truocthue) As Double
On Error Resume Next
Dim LoaiCT
LoaiCT = ActiveWorkbook.Names("i_LoaiCT").RefersToRange.Value
If DiachiNoiSuy = "" Then
    MT_XD = 0
Else
   MT_XD = Round(Noisuy(DiachiNoiSuy, LoaiCT, CPXD_Truocthue / 10 ^ 9), 3)
End If
End Function
Function DGHST_XD(DiachiNoiSuy As String, CPXD_Truocthue) As Double
On Error Resume Next
Dim LoaiCT
LoaiCT = ActiveWorkbook.Names("i_LoaiCT").RefersToRange.Value
If DiachiNoiSuy = "" Then
    DGHST_XD = 0
Else
   DGHST_XD = Round(Noisuy(DiachiNoiSuy, LoaiCT, CPXD_Truocthue / 10 ^ 9), 3)
End If
End Function
Function THAU_TB(DiachiNoiSuy As String, CPTB_Truocthue) As Double
On Error Resume Next
Dim LoaiCT
LoaiCT = ActiveWorkbook.Names("i_LoaiCT").RefersToRange.Value
If DiachiNoiSuy = "" Then
    THAU_TB = 0
Else
   THAU_TB = Round(Noisuy(DiachiNoiSuy, LoaiCT, CPTB_Truocthue / 10 ^ 9), 3)
End If
End Function
Function MT_TB(DiachiNoiSuy As String, CPTB_Truocthue) As Double
On Error Resume Next
Dim LoaiCT
LoaiCT = ActiveWorkbook.Names("i_LoaiCT").RefersToRange.Value
If DiachiNoiSuy = "" Then
    MT_TB = 0
Else
   MT_TB = Round(Noisuy(DiachiNoiSuy, LoaiCT, CPTB_Truocthue / 10 ^ 9), 3)
End If
End Function
Function DGHST_TB(DiachiNoiSuy As String, CPTB_Truocthue) As Double
On Error Resume Next
Dim LoaiCT
LoaiCT = ActiveWorkbook.Names("i_LoaiCT").RefersToRange.Value
If DiachiNoiSuy = "" Then
    DGHST_TB = 0
Else
   DGHST_TB = Round(Noisuy(DiachiNoiSuy, LoaiCT, CPTB_Truocthue / 10 ^ 9), 3)
End If
End Function
Function GS_XD(DiachiNoiSuy As String, CPXD_Truocthue) As Double
On Error Resume Next
Dim LoaiCT
LoaiCT = ActiveWorkbook.Names("i_LoaiCT").RefersToRange.Value
If DiachiNoiSuy = "" Then
    GS_XD = 0
Else
   GS_XD = Round(Noisuy(DiachiNoiSuy, LoaiCT, CPXD_Truocthue / 10 ^ 9), 3)
End If
End Function
Function GS_TB(DiachiNoiSuy As String, CPTB_Truocthue) As Double
On Error Resume Next
Dim LoaiCT
LoaiCT = ActiveWorkbook.Names("i_LoaiCT").RefersToRange.Value
If DiachiNoiSuy = "" Then
    GS_TB = 0
Else
   GS_TB = Round(Noisuy(DiachiNoiSuy, LoaiCT, CPTB_Truocthue / 10 ^ 9), 3)
End If
End Function
Function TDDADT(DiachiNoiSuy As String, TMDT) As Double
On Error Resume Next
If DiachiNoiSuy = "" Then
    TDDADT = 0
Else
   TDDADT = Round(Noisuy(DiachiNoiSuy, 1, TMDT / 10 ^ 9), 3)
End If
End Function
Function KIEMTOAN(DiachiNoiSuy As String, TMDT) As Double
On Error Resume Next
If DiachiNoiSuy = "" Then
    KIEMTOAN = 0
Else
   KIEMTOAN = Round(Noisuy(DiachiNoiSuy, 2, TMDT / 10 ^ 9), 3)
End If
End Function
Function QUYETTOAN(DiachiNoiSuy As String, TMDT) As Double
On Error Resume Next
If DiachiNoiSuy = "" Then
    QUYETTOAN = 0
Else
   QUYETTOAN = Round(Noisuy(DiachiNoiSuy, 1, TMDT / 10 ^ 9), 3)
End If
End Function
Function THAMTRATK_75(DiachiNoiSuy As String, CPXD_Truocthue) As Double
On Error Resume Next
Dim LoaiCT
LoaiCT = ActiveWorkbook.Names("i_LoaiCT").RefersToRange.Value
If DiachiNoiSuy = "" Then
    THAMTRATK_75 = 0
Else
   THAMTRATK_75 = Round(Noisuy(DiachiNoiSuy, LoaiCT, CPXD_Truocthue / 10 ^ 9), 3)
End If
End Function
Function THAMTRADT_75(DiachiNoiSuy As String, CPXD_Truocthue) As Double
On Error Resume Next
Dim LoaiCT
LoaiCT = ActiveWorkbook.Names("i_LoaiCT").RefersToRange.Value
If DiachiNoiSuy = "" Then
    THAMTRADT_75 = 0
Else
   THAMTRADT_75 = Round(Noisuy(DiachiNoiSuy, LoaiCT, CPXD_Truocthue / 10 ^ 9), 3)
End If
End Function
Sub Change_TT75_1_Click()
    Sheets("Config").Range("C163").FormulaR1C1 = "= diachivung(OFFSET(R417C15:R422C24,0,0))"
    Sheets("Config").Range("C164").FormulaR1C1 = "= diachivung(OFFSET(R427C15:R432C24,0,0))"
End Sub
Sub Change_TT75_2_Click()
    Sheets("Config").Range("C163").FormulaR1C1 = "= diachivung(OFFSET(R437C15:R442C24,0,0))"
    Sheets("Config").Range("C164").FormulaR1C1 = "= diachivung(OFFSET(R447C15:R452C24,0,0))"
End Sub
Sub Change_TT75_3_Click()
    Sheets("Config").Range("C163").FormulaR1C1 = "= diachivung(OFFSET(R457C15:R462C24,0,0))"
    Sheets("Config").Range("C164").FormulaR1C1 = ""
End Sub
Sub Update_TKe()
On Error Resume Next
    Application.ScreenUpdating = False
    Dim Ad As String
    Ad = ActiveCell.Address
    Dim NameShConfig As String
    If KiemtraSheet("Setting") = False Then Exit Sub
    NameShConfig = GetNameSh(Sh_ConfigBN)
    ActiveSheet.Shapes.Range(Array("Dr_LCTK")).Select
    With Selection
        Select Case ActiveWorkbook.Names("i_Btk").RefersToRange.Value
            Case 3  'Loai cong trinh khac
                .ListFillRange = "Loai_CTKhac"
                ActiveSheet.Shapes.Range(Array("Dr_CTK")).Select
                With Selection
                    .ListFillRange = "Loai_CTKhac"
                End With
            Case Else
                ActiveWorkbook.Names("i_CTKhac").RefersToRange.Value = 1
                .ListFillRange = "" & NameShConfig & "!" & ActiveWorkbook.Names("i_CTKhac").RefersToRange.Offset(1, -1).Address & ""
'''                '- Doi khac:
                ActiveSheet.Shapes.Range(Array("Dr_CTK")).Select
                 ActiveWorkbook.Names("i_BTKKhac").RefersToRange.Value = 1
                With Selection
                    .ListFillRange = "" & NameShConfig & "!" & ActiveWorkbook.Names("i_CTKhac").RefersToRange.Offset(1, -1).Address & ""
                End With
        End Select
        .DropDownLines = 8
        .Display3DShading = True
    End With
Range(Ad).Select
Application.ScreenUpdating = True
End Sub
'=====CAC HAM DOC SO THANH CHU SU DUNG TRONG FILE NAY DEU SU DUNG TU NGUON: GIAIPHAPEXCEL.COM VA DUOC SU CHO PHEP CUA TAC GIA
'+ Doso VNI
Function DocSoVni(conso) As String
If IsError(conso) = True Then
    DocSoVni = "lo|fffd|i"
    Exit Function
End If
s09 = Array("", " mo|fffd|t", " hai", " ba", " bo|fffd|n", " na|fffd|m", " sa|fffd|u", " ba|fffd|y", " ta|fffd|m", " ch|fffd|n")
lop3 = Array("", " trie|fffd|u", " ngh|fffd|n", " ty|fffd|")
If Trim(conso) = "" Then
  DocSoVni = ""
ElseIf IsNumeric(conso) = True Then
  If conso < 0 Then dau = "a|fffd|m " Else dau = ""
  conso = Application.WorksheetFunction.Round(Abs(conso), 0)
  conso = " " & conso
  conso = Replace(conso, ",", "", 1)
  vt = InStr(1, conso, "E")
  If vt > 0 Then
    sonhan = Val(Mid(conso, vt + 1))
    conso = Trim(Mid(conso, 2, vt - 2))
    conso = conso & String(sonhan - Len(conso) + 1, "0")
  End If
  conso = Trim(conso)
  sochuso = Len(conso) Mod 9
  If sochuso > 0 Then conso = String(9 - (sochuso Mod 12), "0") & conso
  docso = ""
  i = 1
  lop = 1
  Do
    n1 = Mid(conso, i, 1)
    n2 = Mid(conso, i + 1, 1)
    n3 = Mid(conso, i + 2, 1)
    baso = Mid(conso, i, 3)
    a = lop3(lop)
    i = i + 3
    If n1 & n2 & n3 = "000" Then
      If docso <> "" And lop = 3 And Len(conso) - i > 2 Then s123 = " ty|fffd|" Else s123 = ""
    Else
      If n1 = 0 Then
        If docso = "" Then s1 = "" Else s1 = " kho|fffd|ng tra|fffd|m"
      Else
        s1 = s09(n1) & " tra|fffd|m"
      End If
      If n2 = 0 Then
        If s1 = "" Or n3 = 0 Then
          s2 = ""
        Else
          s2 = " linh"
        End If
      Else
        If n2 = 1 Then s2 = " m|fffd||fffd||fffd|i" Else s2 = s09(n2) & " m|fffd||fffd|i"
      End If
      If n3 = 1 Then
        If n2 = 1 Or n2 = 0 Then s3 = " mo|fffd|t" Else s3 = " mo|fffd|t"
      ElseIf n3 = 5 And n2 <> 0 Then
        s3 = " la|fffd|m"
      Else
        s3 = s09(n3)
      End If
      If i > Len(conso) Then
        s123 = s1 & s2 & s3
      Else
        s123 = s1 & s2 & s3 & lop3(lop)
      End If
    End If
    lop = lop + 1
    If lop > 3 Then lop = 1
    docso = docso & s123
    If i > Len(conso) Then Exit Do
  Loop
  If docso = "" Then DocSoVni = "kho|fffd|ng" Else DocSoVni = dau & Trim(docso)
  If Left(DocSoVni, 1) = "a" Then
    Mid(DocSoVni, 1, 2) = UCase(Left(DocSoVni, 2))
  Else
    Mid(DocSoVni, 1, 1) = UCase(Left(DocSoVni, 1))
  End If
Else
  DocSoVni = conso
End If
End Function
'+ Doc so TCVN
Function DocSoTCVN(conso) As String
If IsError(conso) = True Then
    DocSoTCVN = "l|fffd|i"
    Exit Function
End If
s09 = Array("", " m|fffd|t", " hai", " ba", " b|fffd|n", " n|fffd|m", " s|fffd|u", " b|fffd|y", " t|fffd|m", " ch|fffd|n")
lop3 = Array("", " tri|fffd|u", " ngh|fffd|n", " t|fffd|", " tri|fffd|u", " ngh|fffd|n", "")
If Trim(conso) = "" Then
  DocSoTCVN = ""
ElseIf IsNumeric(conso) = True Then
  If conso < 0 Then dau = "|fffd|m " Else dau = ""
  conso = Application.WorksheetFunction.Round(Abs(conso), 0)
  conso = " " & conso
  conso = Replace(conso, ",", "", 1)
  vt = InStr(1, conso, "E")
  If vt > 0 Then
    sonhan = Val(Mid(conso, vt + 1))
    conso = Trim(Mid(conso, 2, vt - 2))
    conso = conso & String(sonhan - Len(conso) + 1, "0")
  End If
  conso = Trim(conso)
  sochuso = Len(conso) Mod 9
  If sochuso > 0 Then conso = String(9 - (sochuso Mod 12), "0") & conso
  docso = ""
  i = 1
  lop = 1
  Do
    n1 = Mid(conso, i, 1)
    n2 = Mid(conso, i + 1, 1)
    n3 = Mid(conso, i + 2, 1)
    baso = Mid(conso, i, 3)
    i = i + 3
    If n1 & n2 & n3 = "000" Then
      If docso <> "" And lop = 3 And Len(conso) - i > 2 Then s123 = " t|fffd|" Else s123 = ""
    Else
      If n1 = 0 Then
        If docso = "" Then s1 = "" Else s1 = " kh|fffd|ng tr|fffd|m"
      Else
        s1 = s09(n1) & " tr|fffd|m"
      End If
      If n2 = 0 Then
        If s1 = "" Or n3 = 0 Then
          s2 = ""
        Else
          s2 = " linh"
        End If
      Else
        If n2 = 1 Then s2 = " m|fffd||fffd|i" Else s2 = s09(n2) & " m|fffd||fffd|i"
      End If
      If n3 = 1 Then
        If n2 = 1 Or n2 = 0 Then s3 = " m|fffd|t" Else s3 = " m|fffd|t"
      ElseIf n3 = 5 And n2 <> 0 Then
        s3 = " l|fffd|m"
      Else
        s3 = s09(n3)
      End If
      If i > Len(conso) Then
        s123 = s1 & s2 & s3
      Else
        s123 = s1 & s2 & s3 & lop3(lop)
      End If
    End If
    lop = lop + 1
    If lop > 3 Then lop = 1
    docso = docso & s123
    If i > Len(conso) Then Exit Do
  Loop
  If docso = "" Then DocSoTCVN = "kh|fffd|ng" Else DocSoTCVN = dau & Trim(docso)
  If Left(DocSoTCVN, 1) = "|fffd|" Then
    DocSoTCVN = "|fffd|" & Mid(DocSoTCVN, 2)
  Else
    Mid(DocSoTCVN, 1, 1) = UCase(Left(DocSoTCVN, 1))
  End If
Else
  DocSoTCVN = conso
End If
End Function
'+ Doc so UNicode Hoa
Function DocSoUni(conso) As String
If IsError(conso) = True Then
    DocSoUni = UniConvert("lo|fffd|i", "VNI")
    Exit Function
End If
s09 = Array("", " m" & ChrW(7897) & "t", " hai", " ba", " b" & ChrW(7889) & "n", " n" & ChrW(259) & "m", " s" & ChrW(225) & "u", " b" & ChrW(7843) & "y", " t" & ChrW(225) & "m", " ch" & ChrW(237) & "n")
lop3 = Array("", " tri" & ChrW(7879) & "u", " ngh" & ChrW(236) & "n", " t" & ChrW(7927))
If Trim(conso) = "" Then
  DocSoUni = ""
ElseIf IsNumeric(conso) = True Then
  If conso < 0 Then dau = ChrW(226) & "m " Else dau = ""
  conso = Application.WorksheetFunction.Round(Abs(conso), 0)
  conso = " " & conso
  conso = Replace(conso, ",", "", 1)
  vt = InStr(1, conso, "E")
  If vt > 0 Then
    sonhan = Val(Mid(conso, vt + 1))
    conso = Trim(Mid(conso, 2, vt - 2))
    conso = conso & String(sonhan - Len(conso) + 1, "0")
  End If
  conso = Trim(conso)
  sochuso = Len(conso) Mod 9
  If sochuso > 0 Then conso = String(9 - (sochuso Mod 12), "0") & conso
  docso = ""
  i = 1
  lop = 1
  Do
    n1 = Mid(conso, i, 1)
    n2 = Mid(conso, i + 1, 1)
    n3 = Mid(conso, i + 2, 1)
    baso = Mid(conso, i, 3)
    i = i + 3
    If n1 & n2 & n3 = "000" Then
      If docso <> "" And lop = 3 And Len(conso) - i > 2 Then s123 = " t" & ChrW(7927) Else s123 = ""
    Else
      If n1 = 0 Then
        If docso = "" Then s1 = "" Else s1 = " kh" & ChrW(244) & "ng tr" & ChrW(259) & "m"
      Else
        s1 = s09(n1) & " tr" & ChrW(259) & "m"
      End If
      If n2 = 0 Then
        If s1 = "" Or n3 = 0 Then
          s2 = ""
        Else
          s2 = " linh"
        End If
      Else
        If n2 = 1 Then s2 = " m" & ChrW(432) & ChrW(7901) & "i" Else s2 = s09(n2) & " m" & ChrW(432) & ChrW(417) & "i"
      End If
      If n3 = 1 Then
        If n2 = 1 Or n2 = 0 Then s3 = " m" & ChrW(7897) & "t" Else s3 = " m" & ChrW(7889) & "t"
      ElseIf n3 = 5 And n2 <> 0 Then
        s3 = " l" & ChrW(259) & "m"
      Else
        s3 = s09(n3)
      End If
      If i > Len(conso) Then
        s123 = s1 & s2 & s3
      Else
        s123 = s1 & s2 & s3 & lop3(lop)
      End If
    End If
    lop = lop + 1
    If lop > 3 Then lop = 1
    docso = docso & s123
    If i > Len(conso) Then Exit Do
  Loop
  If docso = "" Then DocSoUni = "kh" & ChrW(244) & "ng" Else DocSoUni = dau & Trim(docso)
  Mid(DocSoUni, 1, 1) = UCase(Left(DocSoUni, 1))
Else
  DocSoUni = conso
End If
End Function
Function GetFormular(Rng As Range) As String
    GetFormular = Replace(Rng.FormulaR1C1Local, "=", "", 1, -1, vbTextCompare)
    GetFormular = GetFormular
End Function

Sub Update_List()
    On Error GoTo 0
    Application.ScreenUpdating = False
    Dim Ad As String, NameShConfig As String
    NameShConfig = GetNameSh(Sheets(Sheets("Setting").Range("G21").Value))
    Ad = ActiveCell.Address
    ActiveSheet.Shapes.Range(Array("Dr_CTK")).Select
    With Selection
        Select Case ActiveWorkbook.Names("i_CTKhac").RefersToRange.Value
            Case 1
                .ListFillRange = "" & NameShConfig & "!" & ActiveWorkbook.Names("i_CTKhac").RefersToRange.Offset(1, -1).Address & ""
            Case 2
                .ListFillRange = "Li_Cap"
            Case 3
                .ListFillRange = "Li_HC"
            Case 4
                .ListFillRange = "Li_BCVT"
            Case 5
                .ListFillRange = "LI_MTT"
        End Select
        .DropDownLines = 8
        .Display3DShading = True
        .LinkedCell = "" & NameShConfig & "!" & ActiveWorkbook.Names("i_BTKKhac").RefersToRange.Address & """    "
    End With
Range(Ad).Select
Application.ScreenUpdating = True
End Sub
Sub Update_LuongCN()
    On Error Resume Next
    Dim iLuong As Long
    iLuong = ActiveWorkbook.Names("i_Luong").RefersToRange.Value
    Dim NameShDVCM As String
    If KiemtraSheet("Setting") = False Then Exit Sub
    NameShDVCM = GetNameSh(Sh_DVCM)
    Select Case iLuong
        Case 2  'Thuc te
            Range("G6").FormulaR1C1 = "=" & NameShDVCM & "!R13C7"
            Range("H6").FormulaR1C1 = "=" & NameShDVCM & "!R14C7"
            Range("I6").FormulaR1C1 = "=" & NameShDVCM & "!R15C7"
            Range("J6").FormulaR1C1 = "=" & NameShDVCM & "!R16C7"
            Range("K6").FormulaR1C1 = "=" & NameShDVCM & "!R17C7"
            Range("L6").FormulaR1C1 = "=" & NameShDVCM & "!R18C7"
            Range("M6").FormulaR1C1 = "=" & NameShDVCM & "!R19C7"
            Range("N6").FormulaR1C1 = "=" & NameShDVCM & "!R20C7"
            Range("N2").FormulaR1C1 = "=" & NameShDVCM & "!R11C7"
            Range("N3").FormulaR1C1 = "=" & NameShDVCM & "!R12C7"
        Case Else   'Goc
            Range("G6").FormulaR1C1 = "=" & NameShDVCM & "!R13C6"
            Range("H6").FormulaR1C1 = "=" & NameShDVCM & "!R14C6"
            Range("I6").FormulaR1C1 = "=" & NameShDVCM & "!R15C6"
            Range("J6").FormulaR1C1 = "=" & NameShDVCM & "!R16C6"
            Range("K6").FormulaR1C1 = "=" & NameShDVCM & "!R17C6"
            Range("L6").FormulaR1C1 = "=" & NameShDVCM & "!R18C6"
            Range("M6").FormulaR1C1 = "=" & NameShDVCM & "!R19C6"
            Range("N6").FormulaR1C1 = "=" & NameShDVCM & "!R20C6"
            Range("N2").FormulaR1C1 = "=" & NameShDVCM & "!R11C6"
            Range("N3").FormulaR1C1 = "=" & NameShDVCM & "!R12C6"
    End Select
End Sub
Sub THDT_ShowRowCP()
    Dim shTHDT As Worksheet
    Set shTHDT = ActiveSheet
    Dim chk
    Set chk = shTHDT.CheckBoxes("chk_ShowRow")
    Application.ScreenUpdating = False
'    Application.Calculation = xlCalculationManual
    If chk.Value = 1 Then
        shTHDT.Cells.EntireRow.Hidden = False
    Else
        Dim i As Long
        With shTHDT
            For i = .Range("D65536").End(xlUp).Row To 7 Step -1
                Select Case .Range("N" & i).Value
                    Case 0
                        .Range("N" & i).EntireRow.Hidden = True
                    Case 1
                        .Range("N" & i).EntireRow.Hidden = False
                End Select
            Next
        End With
    End If
    Application.ScreenUpdating = True
'    Application.Calculation = xlCalculationAutomatic
End Sub

Sub Set_HeaderFootter()
Dim i As Long, sh As Worksheet
For i = 1 To ThisWorkbook.Sheets.Count
    Set sh = ThisWorkbook.Sheets(i)
    With sh.PageSetup
        .LeftHeader = _
        "&""Times New Roman,Bold Italic""&9" & UniConvert("Du75 toa1n Ba81c Nam  - |fffd|T: 0966.966.455", "VNI")
        .CenterHeader = ""
        .RightHeader = ""
        .LeftFooter = ""
        .CenterFooter = ""
        .RightFooter = "&9Trang &P/&N"
        .LeftMargin = Application.InchesToPoints(0.551181102362205)
        .RightMargin = Application.InchesToPoints(0.196850393700787)
        .TopMargin = Application.InchesToPoints(0.433070866141732)
        .BottomMargin = Application.InchesToPoints(0.590551181102362)
        .HeaderMargin = Application.InchesToPoints(0.15748031496063)
        .FooterMargin = Application.InchesToPoints(0.236220472440945)
        .PrintHeadings = False
        .PrintGridlines = False
        .PrintComments = xlPrintNoComments
        .PrintQuality = 600
        .CenterHorizontally = False
        .CenterVertically = False
        .Orientation = xlPortrait
        .Draft = False
        .PaperSize = xlPaperA4
        .FirstPageNumber = xlAutomatic
        .Order = xlDownThenOver
        .BlackAndWhite = False
        .Zoom = 100
        .PrintErrors = xlPrintErrorsDisplayed
        .OddAndEvenPagesHeaderFooter = False
        .DifferentFirstPageHeaderFooter = False
        .ScaleWithDocHeaderFooter = True
        .AlignMarginsHeaderFooter = False
        .EvenPage.LeftHeader.Text = ""
        .EvenPage.CenterHeader.Text = ""
        .EvenPage.RightHeader.Text = ""
        .EvenPage.LeftFooter.Text = ""
        .EvenPage.CenterFooter.Text = ""
        .EvenPage.RightFooter.Text = ""
        .FirstPage.LeftHeader.Text = ""
        .FirstPage.CenterHeader.Text = ""
        .FirstPage.RightHeader.Text = ""
        .FirstPage.LeftFooter.Text = ""
        .FirstPage.CenterFooter.Text = ""
        .FirstPage.RightFooter.Text = ""
    End With
Next

End Sub
Sub Update_TongMDT_TDT()
    Click_TDT
    Dim shTMDT As Worksheet
    Set shTMDT = Sheets(Sheets("Setting").Range("G40").Value)
    Application.ScreenUpdating = False
    Application.Iteration = True
    On Error Resume Next
    Dim rTC As Long
    With shTMDT
        rTC = EvalFind("TC", .Range("C:C")).Row
        If rTC > 0 Then
            .Names("TMDT_Duyet").RefersToRange.FormulaR1C1 = "=R" & rTC & "C" & .Names("TMDT_Duyet").RefersToRange.Column
            .Names("TMDT_Duyet").RefersToRange.Value = Round(.Names("TMDT_Duyet").RefersToRange.Value, 0)
             Application.Iteration = False
        End If
        Application.Calculation = xlCalculationManual
        .Range("C:C").EntireColumn.Hidden = False
        Dim rFormular As String
        Dim srng As Range
        '- Danh so thu tu chi phi khac
        Dim stt As Long, iadd As Long
        stt = 0
        Set srng = .Range("C:C").Find("GTV", , xlValues, xlWhole, xlByRows, xlNext, False, False)
        If Not srng Is Nothing Then
            Dim r As Long
            For r = srng.Row + 1 To .Range("D" & 65536).End(xlUp).Row
                If .Range("C" & r).Value = "GK" Then
                    .Range("G" & srng.Row & ":I" & srng.Row).FormulaR1C1 = "= SUM(R[1]C:R" & r - 1 & "C)"
                    Exit For
                Else
                    If .Range("I" & r).Value = 0 Then
                        .Range("B" & r).EntireRow.Hidden = True
                    Else
                        .Range("B" & r).EntireRow.Hidden = False
                        If .Range("N" & r).Value = 1 Then
                            iadd = iadd + 1
                            .Range("b" & r).Value = "'" & stt & "." & iadd
                            .Range("C" & r).Value = "TV" & stt & "." & iadd
                            If rFormular = "" Then rFormular = "R" & r & "C" Else rFormular = rFormular & "+R" & r & "C"
                        Else
                            iadd = 0
                            .Range("J" & r).Value = "TV" & stt + 1
                            .Range("B" & r).Value = stt + 1
                            stt = stt + 1
                        End If
                    End If
                End If
            Next
            If rFormular <> "" Then
                .Range("G" & srng.Row).FormulaR1C1 = .Range("G" & srng.Row).FormulaR1C1 & "-(" & rFormular & ")"
                .Range("H" & srng.Row).FormulaR1C1 = .Range("H" & srng.Row).FormulaR1C1 & "-(" & rFormular & ")"
                .Range("I" & srng.Row).FormulaR1C1 = .Range("I" & srng.Row).FormulaR1C1 & "-(" & rFormular & ")"
                rFormular = ""
            End If
            .Range("F" & srng.Row).Value = "TV1+...+TV" & stt
        End If
        stt = 0
        Set srng = .Range("C:C").Find("GK", , xlValues, xlWhole, xlByRows, xlNext, False, False)
        If Not srng Is Nothing Then
            For r = srng.Row + 1 To .Range("D" & 65536).End(xlUp).Row
                If .Range("C" & r).Value = "GDP" Then
                    .Range("G" & srng.Row & ":I" & srng.Row).FormulaR1C1 = "= SUM(R[1]C:R" & r - 1 & "C)"
                    Exit For
                Else
                    If .Range("I" & r).Value = 0 Then
                        .Range("B" & r).EntireRow.Hidden = True
                    Else
                        .Range("B" & r).EntireRow.Hidden = False
                        If .Range("N" & r).Value = 1 Then
                            iadd = iadd + 1
                            .Range("b" & r).Value = "'" & stt & "." & iadd
                            .Range("C" & r).Value = "K" & stt & "." & iadd
                            If rFormular = "" Then rFormular = "R" & r & "C" Else rFormular = rFormular & "+R" & r & "C"
                        Else
                            iadd = 0
                            .Range("J" & r).Value = "K" & stt + 1
                            .Range("B" & r).Value = stt + 1
                            stt = stt + 1
                        End If
                    End If
                End If
            Next
            .Range("F" & srng.Row).Value = "K1+...+K" & stt
            If rFormular <> "" Then
                .Range("G" & srng.Row).FormulaR1C1 = .Range("G" & srng.Row).FormulaR1C1 & "-(" & rFormular & ")"
                .Range("H" & srng.Row).FormulaR1C1 = .Range("H" & srng.Row).FormulaR1C1 & "-(" & rFormular & ")"
                .Range("I" & srng.Row).FormulaR1C1 = .Range("I" & srng.Row).FormulaR1C1 & "-(" & rFormular & ")"
                rFormular = ""
            End If
        End If
        .Range("C:C").EntireColumn.Hidden = True
        Application.Calculation = xlCalculationAutomatic
        Application.Iteration = True
        'update gia tri
        .Names("TMDT_Duyet").RefersToRange.FormulaR1C1 = "=R" & rTC & "C" & .Names("TMDT_Duyet").RefersToRange.Column
        .Names("TMDT_Duyet").RefersToRange.Value = Round(.Names("TMDT_Duyet").RefersToRange.Value, 0)
        Application.Iteration = False
    End With
  
    'Cap nhat tong du toan
    Dim shTDT As Worksheet
    Set shTDT = Sheets(Sheets("Setting").Range("G38").Value)
    With shTDT
        rTC = EvalFind("TC", .Range("C:C")).Row
        If rTC > 0 Then
'            .Names("TMDT_Duyet").RefersToRange.FormulaR1C1 = "=R" & rTC & "C" & .Names("TMDT_Duyet").RefersToRange.Column
            .Names("TMDT_Duyet").RefersToRange.Value = shTMDT.Names("TMDT_Duyet").RefersToRange.Value
             Application.Iteration = False
        End If
        .Range("C:C").EntireColumn.Hidden = False
        stt = 0
        Set srng = .Range("C:C").Find("GTV", , xlValues, xlWhole, xlByRows, xlNext, False, False)
        If Not srng Is Nothing Then
            For r = srng.Row + 1 To .Range("D" & 65536).End(xlUp).Row
                If .Range("C" & r).Value = "GK" Then
                    .Range("G" & srng.Row & ":I" & srng.Row).FormulaR1C1 = "= SUM(R[1]C:R" & r - 1 & "C)"
                    Exit For
                Else
                    If .Range("I" & r).Value = 0 Then
                        .Range("B" & r).EntireRow.Hidden = True
                    Else
                        .Range("B" & r).EntireRow.Hidden = False
                        If .Range("N" & r).Value = 1 Then
                            iadd = iadd + 1
                            .Range("b" & r).Value = "'" & stt & "." & iadd
                            .Range("C" & r).Value = "TV" & stt & "." & iadd
                            If rFormular = "" Then rFormular = "R" & r & "C" Else rFormular = rFormular & "+R" & r & "C"
                        Else
                            iadd = 0
                            .Range("J" & r).Value = "TV" & stt + 1
                            .Range("B" & r).Value = stt + 1
                            stt = stt + 1
                        End If
                    End If
                End If
            Next
            If rFormular <> "" Then
                .Range("G" & srng.Row).FormulaR1C1 = .Range("G" & srng.Row).FormulaR1C1 & "-(" & rFormular & ")"
                .Range("H" & srng.Row).FormulaR1C1 = .Range("H" & srng.Row).FormulaR1C1 & "-(" & rFormular & ")"
                .Range("I" & srng.Row).FormulaR1C1 = .Range("I" & srng.Row).FormulaR1C1 & "-(" & rFormular & ")"
                rFormular = ""
            End If
            .Range("F" & srng.Row).Value = "TV1+...+TV" & stt
        End If
        stt = 0
        Set srng = .Range("C:C").Find("GK", , xlValues, xlWhole, xlByRows, xlNext, False, False)
        If Not srng Is Nothing Then
            For r = srng.Row + 1 To .Range("D" & 65536).End(xlUp).Row
                If .Range("C" & r).Value = "GDP" Then
                    .Range("G" & srng.Row & ":I" & srng.Row).FormulaR1C1 = "= SUM(R[1]C:R" & r - 1 & "C)"
                    Exit For
                Else
                    If .Range("I" & r).Value = 0 Then
                        .Range("B" & r).EntireRow.Hidden = True
                    Else
                        .Range("B" & r).EntireRow.Hidden = False
                        If .Range("N" & r).Value = 1 Then
                            iadd = iadd + 1
                            .Range("b" & r).Value = "'" & stt & "." & iadd
                            .Range("C" & r).Value = "K" & stt & "." & iadd
                            If rFormular = "" Then rFormular = "R" & r & "C" Else rFormular = rFormular & "+R" & r & "C"
                        Else
                            iadd = 0
                            .Range("J" & r).Value = "K" & stt + 1
                            .Range("B" & r).Value = stt + 1
                            stt = stt + 1
                        End If
                    End If
                End If
            Next
            .Range("F" & srng.Row).Value = "K1+...+K" & stt
            If rFormular <> "" Then
                .Range("G" & srng.Row).FormulaR1C1 = .Range("G" & srng.Row).FormulaR1C1 & "-(" & rFormular & ")"
                .Range("H" & srng.Row).FormulaR1C1 = .Range("H" & srng.Row).FormulaR1C1 & "-(" & rFormular & ")"
                .Range("I" & srng.Row).FormulaR1C1 = .Range("I" & srng.Row).FormulaR1C1 & "-(" & rFormular & ")"
                rFormular = ""
            End If
        End If
        .Range("C:C").EntireColumn.Hidden = True
    End With
    Application.Iteration = False
    Application.Calculation = xlCalculationAutomatic
    Application.ScreenUpdating = True

End Sub


Sub Click_TDT()
    Sheets("Config").Range("c118:C400").Value = Sheets("Config").Range("f118:f400").Value
End Sub
Attribute VB_Name = "Mod_Support"
Option Private Module
Function UniConvert(Text As String, InputMethod As String) As String
  Dim VNI_Type, Telex_Type, CharCode, Temp, i As Long
  UniConvert = Text
  VNI_Type = Array("a81", "a82", "a83", "a84", "a85", "a61", "a62", "a63", "a64", "a65", "e61", _
      "e62", "e63", "e64", "e65", "o61", "o62", "o63", "o64", "o65", "o71", "o72", "o73", "o74", _
      "o75", "u71", "u72", "u73", "u74", "u75", "a1", "a2", "a3", "a4", "a5", "a8", "a6", "d9", _
      "e1", "e2", "e3", "e4", "e5", "e6", "i1", "i2", "i3", "i4", "i5", "o1", "o2", "o3", "o4", _
      "o5", "o6", "o7", "u1", "u2", "u3", "u4", "u5", "u7", "y1", "y2", "y3", "y4", "y5")
  Telex_Type = Array("aws", "awf", "awr", "awx", "awj", "aas", "aaf", "aar", "aax", "aaj", "ees", _
      "eef", "eer", "eex", "eej", "oos", "oof", "oor", "oox", "ooj", "ows", "owf", "owr", "owx", _
      "owj", "uws", "uwf", "uwr", "uwx", "uwj", "as", "af", "ar", "ax", "aj", "aw", "aa", "dd", _
      "es", "ef", "er", "ex", "ej", "ee", "is", "if", "ir", "ix", "ij", "os", "of", "or", "ox", _
      "oj", "oo", "ow", "us", "uf", "ur", "ux", "uj", "uw", "ys", "yf", "yr", "yx", "yj")
  CharCode = Array(ChrW(7855), ChrW(7857), ChrW(7859), ChrW(7861), ChrW(7863), ChrW(7845), ChrW(7847), _
      ChrW(7849), ChrW(7851), ChrW(7853), ChrW(7871), ChrW(7873), ChrW(7875), ChrW(7877), ChrW(7879), _
      ChrW(7889), ChrW(7891), ChrW(7893), ChrW(7895), ChrW(7897), ChrW(7899), ChrW(7901), ChrW(7903), _
      ChrW(7905), ChrW(7907), ChrW(7913), ChrW(7915), ChrW(7917), ChrW(7919), ChrW(7921), ChrW(225), _
      ChrW(224), ChrW(7843), ChrW(227), ChrW(7841), ChrW(259), ChrW(226), ChrW(273), ChrW(233), ChrW(232), _
      ChrW(7867), ChrW(7869), ChrW(7865), ChrW(234), ChrW(237), ChrW(236), ChrW(7881), ChrW(297), ChrW(7883), _
      ChrW(243), ChrW(242), ChrW(7887), ChrW(245), ChrW(7885), ChrW(244), ChrW(417), ChrW(250), ChrW(249), _
      ChrW(7911), ChrW(361), ChrW(7909), ChrW(432), ChrW(253), ChrW(7923), ChrW(7927), ChrW(7929), ChrW(7925))
  Select Case InputMethod
    Case Is = "VNI": Temp = VNI_Type
    Case Is = "Telex": Temp = Telex_Type
  End Select
  For i = 0 To UBound(CharCode)
    UniConvert = Replace(UniConvert, Temp(i), CharCode(i))
    UniConvert = Replace(UniConvert, UCase(Temp(i)), UCase(CharCode(i)))
  Next i
End Function
Function Kiemtra_Duongdan(FileName) As Boolean ' Ham tra ve true neu co duong dan, false neu khong:
Dim X As String
On Error Resume Next
X = GetAttr(FileName) And 0
If Err = 0 Then Kiemtra_Duongdan = True Else Kiemtra_Duongdan = False
End Function
Function GetValue(StrVal) As Double
    GetValue = Val(Trim(Replace(StrVal, "<", "", 1, -1, vbTextCompare)))
    GetValue = Val(Trim(Replace(GetValue, ">", "", 1, -1, vbTextCompare)))
    GetValue = Val(Trim(Replace(GetValue, "<=", "", 1, -1, vbTextCompare)))
    GetValue = Val(Trim(Replace(GetValue, ">=", "", 1, -1, vbTextCompare)))
End Function

Function MucToithieu(VungNoisuy As String)
    'On Error GoTo 0
    Dim Rng As Range
    Set Rng = Sh_ConfigBN.Range(VungNoisuy)
    With Sh_ConfigBN
        MucToithieu = Rng.Cells(1, 1).Offset(-2, 0).Value
    End With
End Function

Function TK_Khac(DiachiNoiSuy As String, CPXD_Truocthue) As Double
On Error Resume Next
Dim LoaiCT
LoaiCT = ActiveWorkbook.Names("i_BTKKhac").RefersToRange.Value
If DiachiNoiSuy = "" Then
    TK_Khac = 0
Else
   TK_Khac = Round(Noisuy(DiachiNoiSuy, LoaiCT, CPXD_Truocthue / 10 ^ 9), 3)
End If
End Function

Function Noisuy(Dauvao As Variant, xX, yY) As Double
On Error Resume Next
Dim VungTra As Range, shVao As Worksheet
If Left(Dauvao, 1) = "$" Then
    Set VungTra = Sheets("Config").Range(Dauvao)
    Set shVao = Sheets("Config")
Else
    Set shVao = ActiveSheet
    Set VungTra = Dauvao
End If
    If VungTra.Cells(1, VungTra.Columns.Count) = 0 Then
        Dim cotOff As Long
        cotOff = VungTra.Cells(1, VungTra.Columns.Count).End(xlToLeft).Column - VungTra.Cells(0, 0).Column
        Set VungTra = Range(VungTra.Cells(1, 1), VungTra.Cells(VungTra.Rows.Count, cotOff))
    End If
  'Ham Noi Suy 2 Chieu Tai GPE.COM (Sa_DQ)'
   Dim iW As Integer, jI As Integer
    Dim x1 As Double, x2 As Double, y1 As Double, y2 As Double
    Dim a11 As Double, a12 As Double, a21 As Double, a22 As Double
    Dim t1 As Double, t2 As Double

    Dim RgNg As Range, RgDoc As Range
    Dim Rng As Range, Clls As Range
    Set RgNg = VungTra.Cells(1, 1).Resize(1, VungTra.Columns.Count - 1)
    Set RgDoc = VungTra.Cells(1, 1).Resize(VungTra.Rows.Count, 1)
    Dim dd
    Dim xa As Double, xb As Double, xMax As Double, XMin As Double, ya As Double, yb As Double, YMax As Double, YMin As Double
    ya = RgNg.Cells(1, 2).Value
    yb = RgNg.Cells(1, 3).Value
    If yb = 0 Then
        tangy = 1
    Else
        If yb > ya Then tangy = 1 Else tangy = 2
    End If
    If tangy = 1 Then
        YMax = RgNg.Cells(1, VungTra.Columns.Count)
        YMin = ya
    Else
        YMax = ya
        YMin = RgNg.Cells(1, VungTra.Columns.Count)
    End If
    xa = RgNg.Cells(2, 1).Value
    xb = RgNg.Cells(3, 1).Value
    If xb = 0 Then
        tangx = 1
    Else
        If xb > xa Then tangx = 1 Else tangx = 2
    End If
    If tangx = 1 Then
        xMax = VungTra.Cells(VungTra.Rows.Count, 1).Value
        XMin = xa
    Else
        xMax = xa
        XMin = VungTra.Cells(VungTra.Rows.Count, 1).Value
    End If

    Dim c As Long
    If tangy = 1 Then
        For Each Rng In RgNg
            If tangx = 1 Then
                'Neu nho hon thi lay can duoi
                If xX <= XMin Then
                    If yY < YMin Then
                        Noisuy = Rng.Cells(2, 2)
                        Exit Function
                    End If
                    If yY >= YMax Then
                        Noisuy = VungTra.Cells(2, VungTra.Columns.Count)
                        Exit Function
                    End If
                    For i = 2 To VungTra.Columns.Count
                        If yY = VungTra.Cells(1, i) Then
                            Noisuy = VungTra.Cells(2, i)
                            Exit Function
                        End If
                        If yY > VungTra.Cells(1, i) And yY < VungTra.Cells(i + 1) Then
                            tx1 = VungTra.Cells(2, i)
                            tx2 = VungTra.Cells(2, i + 1)
                            ty1 = VungTra.Cells(1, i)
                            ty2 = VungTra.Cells(1, i + 1)
                            Noisuy = tx1 + (yY - ty1) * (tx2 - tx1) / (ty2 - ty1)
                            Exit Function
                        End If
                    Next
                Else
                    If xX = xMax Then
                        For i = 2 To VungTra.Columns.Count
                            If yY = VungTra.Cells(1, i) Then
                                Noisuy = VungTra.Cells(VungTra.Rows.Count, i)
                                Exit Function
                            End If
                            If yY > VungTra.Cells(1, i) And yY < VungTra.Cells(i + 1) Then
                                tx1 = VungTra.Cells(VungTra.Rows.Count, i)
                                tx2 = VungTra.Cells(VungTra.Rows.Count, i + 1)
                                ty1 = VungTra.Cells(1, i)
                                ty2 = VungTra.Cells(1, i + 1)
                                Noisuy = tx1 + (yY - ty1) * (tx2 - tx1) / (ty2 - ty1)
                                Exit Function
                            End If
                        Next
                    End If
                    If xX > xMax Then
                        If yY <= YMin Then
                            Noisuy = VungTra.Cells(VungTra.Rows.Count, 2)
                            Exit Function
                        End If
                        If yY >= YMax Then
                            Noisuy = VungTra.Cells(VungTra.Rows.Count, VungTra.Columns.Count)
                            Exit Function
                        End If
                        For i = 1 To RgNg.Columns.Count
                            If yY = VungTra.Cells(1, i) Then
                                Noisuy = VungTra.Cells(VungTra.Rows.Count, i)
                                Exit Function
                            End If
                            If yY > VungTra.Cells(1, i) And yY < VungTra.Cells(i + 1) Then
                                tx1 = VungTra.Cells(VungTra.Rows.Count, i)
                                tx2 = VungTra.Cells(VungTra.Rows.Count, i + 1)
                                ty1 = VungTra.Cells(1, i)
                                ty2 = VungTra.Cells(1, i + 1)
                                Noisuy = tx1 + (yY - ty1) * (tx2 - tx1) / (ty2 - ty1)
                                Exit Function
                            End If
                        Next
                    Else
                        'X nam giua
                        'Gia quyet toi Y
                        If yY > YMax Then
                            'Dua thong so vao
                            For i = 1 + 1 To VungTra.Rows.Count
                                If xX = VungTra.Cells(i, 1) Then
                                    Noisuy = VungTra.Cells(i, VungTra.Columns.Count)
                                    Exit Function
                                End If
                                If xX > VungTra.Cells(i, 1) And VungTra.Cells(i + 1, 1) > xX Then
                                    tx1 = VungTra.Cells(i, VungTra.Columns.Count)
                                    tx2 = VungTra.Cells(i + 1, VungTra.Columns.Count)
                                    ty1 = VungTra.Cells(i, 1)
                                    ty2 = VungTra.Cells(i + 1, 1)
                                    Noisuy = tx1 + (xX - ty1) * (tx2 - tx1) / (ty2 - ty1)
                                    Exit Function
                                End If
                            Next
                        End If
                        If yY <= YMin Then
                            'Dua thong so vao
                            For i = 1 + 1 To VungTra.Rows.Count
                                If xX = VungTra.Cells(i, 1) Then
                                    Noisuy = VungTra.Cells(i, 2)
                                    Exit Function
                                End If
                                If xX > VungTra.Cells(i, 1) And VungTra.Cells(i + 1, 1) > xX Then
                                    tx1 = VungTra.Cells(i, 2)
                                    tx2 = VungTra.Cells(i + 1, 2)
                                    ty1 = VungTra.Cells(i, 1)
                                    ty2 = VungTra.Cells(i + 1, 1)
                                    Noisuy = tx1 + (xX - ty1) * (tx2 - tx1) / (ty2 - ty1)
                                    Exit Function
                                End If
                            Next
                            Exit Function
                        End If
                        If Rng <= yY And Rng.Offset(, 1) >= yY Then
                            y1 = Rng:
                            y2 = Rng.Offset(, 1)
                            For Each Clls In RgDoc
                                If Clls <= xX And Clls.Offset(1) >= xX Then
                                    x1 = Clls:
                                    x2 = Clls.Offset(1)
                                    a11 = shVao.Cells(Clls.Row, Rng.Column):   a12 = shVao.Cells(Clls.Row, Rng.Column + 1)
                                    a21 = shVao.Cells(Clls.Row + 1, Rng.Column): a22 = shVao.Cells(Clls.Row + 1, Rng.Column + 1)
                                     t1 = (a12 - a11) * (yY - y1) / (y2 - y1) + a11
                                     t2 = (a22 - a21) * (yY - y1) / (y2 - y1) + a21
                                     Noisuy = (t2 - t1) * (xX - x1) / (x2 - x1) + t1
                                     Exit Function
                                End If
                            Next Clls
                        End If
                    End If
                End If
            Else
                If xX >= xMax Then
                    If yY <= YMin Then
                        Noisuy = VungTra.Cells(2, 2)
                        Exit Function
                    End If
                    If yY >= YMax Then
                        Noisuy = VungTra.Cells(2, VungTra.Columns.Count)
                        Exit Function
                    End If
                    For i = 1 + 1 To VungTra.Rows.Count
                        If yY = VungTra.Cells(1, i) Then
                            Noisuy = VungTra.Cells(2, i)
                            Exit Function
                        End If
                        If yY > VungTra.Cells(1, i) And VungTra.Cells(1, i + 1) > yY Then
                            tx1 = VungTra.Cells(2, i)
                            tx2 = VungTra.Cells(2, i + 1)
                            ty1 = VungTra.Cells(1, i)
                            ty2 = VungTra.Cells(1, i + 1)
                            Noisuy = tx1 + (yY - ty1) * (tx2 - tx1) / (ty2 - ty1)
                            Exit Function
                        End If
                    Next
                End If
                If xX < XMin Then
                    If yY <= YMin Then
                        Noisuy = VungTra.Cells(VungTra.Rows.Count, 2)
                        Exit Function
                    End If
                    If yY >= YMax Then
                        Noisuy = VungTra.Cells(VungTra.Rows.Count, VungTra.Columns.Count)
                        Exit Function
                    End If
                    For i = 1 + 1 To VungTra.Rows.Count
                        If yY = VungTra.Cells(1, i) Then
                            Noisuy = VungTra.Cells(VungTra.Rows.Count, i)
                            Exit Function
                        End If
                        If yY > VungTra.Cells(1, i) And VungTra.Cells(1, i + 1) > yY Then
                            tx1 = VungTra.Cells(VungTra.Rows.Count, i)
                            tx2 = VungTra.Cells(VungTra.Rows.Count, i + 1)
                            ty1 = VungTra.Cells(1, i)
                            ty2 = VungTra.Cells(1, i + 1)
                            Noisuy = tx1 + (yY - ty1) * (tx2 - tx1) / (ty2 - ty1)
                            Exit Function
                        End If
                    Next
                End If
                If yY <= YMin Then
                    If xX <= XMin Then
                        Noisuy = VungTra.Cells(VungTra.Rows.Count, 2)
                        Exit Function
                    End If
                    If xX >= xMax Then
                        Noisuy = VungTra.Cells(2, 2)
                        Exit Function
                    End If
                    For i = 1 + 1 To VungTra.Rows.Count
                        If xX = VungTra.Cells(i, 1) Then
                            Noisuy = VungTra.Cells(i, 2)
                            Exit Function
                        End If
                        If xX < VungTra.Cells(i, 1) And VungTra.Cells(i + 1, 1) < xX Then
                            tx1 = VungTra.Cells(i, 2)
                            tx2 = VungTra.Cells(i + 1, 2)
                            ty1 = VungTra.Cells(i, 1)
                            ty2 = VungTra.Cells(i + 1, 1)
                            Noisuy = tx2 + (xX - ty2) * (tx1 - tx2) / (ty1 - ty2)
                            Exit Function
                        End If
                    Next
                End If
                If yY >= YMax Then
                    If xX <= XMin Then
                        Noisuy = VungTra.Cells(VungTra.Rows.Count, VungTra.Columns.Count)
                        Exit Function
                    End If
                    If xX >= xMax Then
                        Noisuy = VungTra.Cells(2, VungTra.Columns.Count)
                        Exit Function
                    End If
                    For i = 1 + 1 To VungTra.Rows.Count
                        If xX = VungTra.Cells(i, 1) Then
                            Noisuy = VungTra.Cells(i, VungTra.Columns.Count)
                            Exit Function
                        End If
                        If xX < VungTra.Cells(i, 1) And VungTra.Cells(i + 1, 1) < xX Then
                            tx1 = VungTra.Cells(i, VungTra.Columns.Count)
                            tx2 = VungTra.Cells(i + 1, VungTra.Columns.Count)
                            ty1 = VungTra.Cells(i, 1)
                            ty2 = VungTra.Cells(i + 1, 1)
                            Noisuy = tx1 + (ty1 - xX) * (tx2 - tx1) / (ty1 - ty2)
                            Exit Function
                        End If
                    Next
                End If
                If Rng <= yY And Rng.Offset(, 1) >= yY Then
                    y1 = Rng:
                    y2 = Rng.Offset(, 1)
                    For Each Clls In RgDoc
                        If Clls >= xX And Clls.Offset(1) <= xX Then
                            x1 = Clls:
                            x2 = Clls.Offset(1)
                            a11 = shVao.Cells(Clls.Row, Rng.Column):  a12 = shVao.Cells(Clls.Row, Rng.Column + 1)
                            a21 = shVao.Cells(Clls.Row + 1, Rng.Column): a22 = shVao.Cells(Clls.Row + 1, Rng.Column + 1)
                             t1 = (a12 - a11) * (yY - y1) / (y2 - y1) + a11
                             t2 = (a22 - a21) * (yY - y1) / (y2 - y1) + a21
                             Noisuy = (t2 - t1) * (xX - x1) / (x2 - x1) + t1
                             Exit Function
                        End If
                    Next Clls
                End If
            End If
        Next Rng
    Else
        For Each Rng In RgNg
            If tangx = 1 Then
                If xX <= XMin Then
                    If yY >= YMax Then
                        Noisuy = VungTra.Cells(2, 2)
                        Exit Function
                    End If
                    If yY <= YMin Then
                        Noisuy = VungTra.Cells(2, VungTra.Columns.Count)
                        Exit Function
                    End If
                    For i = 2 To VungTra.Columns.Count
                        If yY = VungTra.Cells(1, i) Then
                            Noisuy = VungTra.Cells(2, i)
                            Exit Function
                        End If
                        If yY < VungTra.Cells(1, i) And yY > VungTra.Cells(i + 1) Then
                            tx1 = VungTra.Cells(2, i)
                            tx2 = VungTra.Cells(2, i + 1)
                            ty1 = VungTra.Cells(1, i)
                            ty2 = VungTra.Cells(1, i + 1)
                            Noisuy = tx1 + (yY - ty2) * (tx2 - tx1) / (ty1 - ty2)
                            Exit Function
                        End If
                    Next
                End If
                If xX >= xMax Then
                    If yY >= YMax Then
                        Noisuy = VungTra.Cells(VungTra.Rows.Count, 2)
                        Exit Function
                    End If
                    If yY <= YMin Then
                        Noisuy = VungTra.Cells(VungTra.Rows.Count, VungTra.Columns.Count)
                        Exit Function
                    End If
                    For i = 2 To VungTra.Columns.Count
                        If yY = VungTra.Cells(1, i) Then
                            Noisuy = VungTra.Cells(VungTra.Rows.Count, i)
                            Exit Function
                        End If
                        If yY < VungTra.Cells(1, i) And yY > VungTra.Cells(i + 1) Then
                            tx1 = VungTra.Cells(VungTra.Rows.Count, i)
                            tx2 = VungTra.Cells(VungTra.Rows.Count, i + 1)
                            ty1 = VungTra.Cells(1, i)
                            ty2 = VungTra.Cells(1, i + 1)
                            Noisuy = tx1 + (yY - ty2) * (tx2 - tx1) / (ty1 - ty2)
                            Exit Function
                        End If
                    Next
                End If
                If Rng >= yY And Rng.Offset(, 1) <= yY Then
                    y1 = Rng:
                    y2 = Rng.Offset(, 1)
                    For Each Clls In RgDoc
                        If Clls <= xX And Clls.Offset(1) >= xX Then
                            x1 = Clls:
                            x2 = Clls.Offset(1)
                            a11 = shVao.Cells(Clls.Row, Rng.Column):  a12 = shVao.Cells(Clls.Row, Rng.Column + 1)
                            a21 = shVao.Cells(Clls.Row + 1, Rng.Column): a22 = shVao.Cells(Clls.Row + 1, Rng.Column + 1)
                             t1 = (a12 - a11) * (yY - y1) / (y2 - y1) + a11
                             t2 = (a22 - a21) * (yY - y1) / (y2 - y1) + a21
                             Noisuy = (t2 - t1) * (xX - x1) / (x2 - x1) + t1
                             Exit Function
                        End If
                    Next Clls
                End If
            Else
                If yY >= YMax Then
                    If xX <= XMin Then
                        Noisuy = VungTra.Cells(VungTra.Rows.Count, 2)
                        Exit Function
                    End If
                    If xX >= XMin Then
                        Noisuy = VungTra.Cells(2, 2)
                        Exit Function
                    End If
                    For i = 1 + 1 To VungTra.Rows.Count
                        If xX = VungTra.Cells(i, 1) Then
                            Noisuy = VungTra.Cells(i, 2)
                            Exit Function
                        End If
                        If xX < VungTra.Cells(i, 1) And VungTra.Cells(i + 1, 1) < xX Then
                            tx1 = VungTra.Cells(i, 2)
                            tx2 = VungTra.Cells(i + 1, 2)
                            ty1 = VungTra.Cells(i, 1)
                            ty2 = VungTra.Cells(i + 1, 1)
                            Noisuy = tx1 + (xX - ty2) * (tx2 - tx1) / (ty1 - ty2)
                            Exit Function
                        End If
                    Next
                End If
                If yY <= YMin Then
                    If xX <= XMin Then
                        Noisuy = VungTra.Cells(VungTra.Rows.Count, VungTra.Columns.Count)
                        Exit Function
                    End If
                    If xX >= XMin Then
                        Noisuy = VungTra.Cells(2, VungTra.Columns.Count)
                        Exit Function
                    End If
                    For i = 1 + 1 To VungTra.Rows.Count
                        If xX = VungTra.Cells(i, 1) Then
                            Noisuy = VungTra.Cells(i, VungTra.Columns.Count)
                            Exit Function
                        End If
                        If xX < VungTra.Cells(i, 1) And VungTra.Cells(i + 1, 1) < xX Then
                            tx1 = VungTra.Cells(i, VungTra.Columns.Count)
                            tx2 = VungTra.Cells(i + 1, VungTra.Columns.Count)
                            ty1 = VungTra.Cells(i, 1)
                            ty2 = VungTra.Cells(i + 1, 1)
                            Noisuy = tx1 + (xX - ty2) * (tx2 - tx1) / (ty1 - ty2)
                            Exit Function
                        End If
                    Next
                End If
                If xX >= xMax Then
                    For i = 1 + 1 To VungTra.Columns.Count
                        If yY < VungTra.Cells(1, i) And VungTra.Cells(1, i + 1) < yY Then
                            tx1 = VungTra.Cells(2, i)
                            tx2 = VungTra.Cells(2, i + 1)
                            ty1 = VungTra.Cells(1, i)
                            ty2 = VungTra.Cells(1, i + 1)
                            Noisuy = tx1 + (yY - ty2) * (tx2 - tx1) / (ty1 - ty2)
                            Exit Function
                        End If
                    Next
                    Exit Function
                End If
                If xX <= XMin Then
                    For i = 1 + 1 To VungTra.Columns.Count
                        If yY < VungTra.Cells(1, i) And VungTra.Cells(1, i + 1) < yY Then
                            tx1 = VungTra.Cells(VungTra.Rows.Count, i)
                            tx2 = VungTra.Cells(VungTra.Rows.Count, i + 1)
                            ty1 = VungTra.Cells(1, i)
                            ty2 = VungTra.Cells(1, i + 1)
                            Noisuy = tx1 + (yY - ty2) * (tx2 - tx1) / (ty1 - ty2)
                            Exit Function
                        End If
                    Next
                    Exit Function
                End If
                If Rng >= yY And Rng.Offset(, 1) <= yY Then
                    y1 = Rng:
                    y2 = Rng.Offset(, 1)
                    For Each Clls In RgDoc
                        If Clls >= xX And Clls.Offset(1) <= xX Then
                            x1 = Clls:
                            x2 = Clls.Offset(1)
                            a11 = shVao.Cells(Clls.Row, Rng.Column):  a12 = shVao.Cells(Clls.Row, Rng.Column + 1)
                            a21 = shVao.Cells(Clls.Row + 1, Rng.Column): a22 = shVao.Cells(Clls.Row + 1, Rng.Column + 1)
                             t1 = (a12 - a11) * (yY - y1) / (y2 - y1) + a11
                             t2 = (a22 - a21) * (yY - y1) / (y2 - y1) + a21
                             Noisuy = (t2 - t1) * (xX - x1) / (x2 - x1) + t1
                             Exit Function
                        End If
                    Next Clls
                End If
            End If
        Next Rng
   End If
   Set VungTra = Nothing
End Function

Function IsRange(Vr As Variant) As Boolean
On Error Resume Next
Dim rg As Range
Set rg = Vr
If Not rg Is Nothing Then IsRange = True Else IsRange = False
End Function









Attribute VB_Name = "Mod_regkey"
#If VBA7 Then
    Private Declare PtrSafe Function GetComputerName Lib "kernel32" Alias "GetComputerNameA" (ByVal lpBuffer As String, nSize As LongPtr) As LongPtr
    Public Declare PtrSafe Function GetUserName Lib "advapi32.dll" Alias "GetUserNameA" (ByVal lpBuffer As String, nSize As LongPtr) As LongPtr
    Private Type BROWSEINFO  ' Duoc su dung boi ham GetFolderName'
        hOwner As LongPtr:                               pidlRoot As LongPtr
        pszDisplayName As String:                   lpszTitle As String
        ulFlags As LongPtr:                                 lpfn As LongPtr
        lParam As LongPtr:                                iImage As LongPtr
    End Type
    Private Declare PtrSafe Function SHGetPathFromIDList Lib "shell32.dll" Alias "SHGetPathFromIDListA" (ByVal pidl As Long, ByVal pszPath As String) As Long
    Private Declare PtrSafe Function SHBrowseForFolder Lib "shell32.dll" Alias "SHBrowseForFolderA" (lpBrowseInfo As BROWSEINFO) As Long
#Else
    Private Declare Function GetComputerName Lib "kernel32" Alias "GetComputerNameA" (ByVal lpBuffer As String, nSize As Long) As Long
    Public Declare Function GetUserName Lib "advapi32.dll" Alias "GetUserNameA" (ByVal lpBuffer As String, nSize As Long) As Long
    Private Type BROWSEINFO  ' Duoc su dung boi ham GetFolderName'
        hOwner As Long:                               pidlRoot As Long
        pszDisplayName As String:                   lpszTitle As String
        ulFlags As Long:                                 lpfn As Long
        lParam As Long:                                iImage As Long
    End Type
    Private Declare Function SHGetPathFromIDList Lib "shell32.dll" Alias "SHGetPathFromIDListA" (ByVal pidl As Long, ByVal pszPath As String) As Long
    Private Declare Function SHBrowseForFolder Lib "shell32.dll" Alias "SHBrowseForFolderA" (lpBrowseInfo As BROWSEINFO) As Long
#End If

'===== Reading from the Registry:
Function RegKeyRead(i_RegKey As String) As String
If RegKeyExists(i_RegKey) = True Then
    Dim myWS As Object
      On Error Resume Next
      Set myWS = CreateObject("WScript.Shell")
      RegKeyRead = myWS.RegRead(i_RegKey)
Else
    RegKeyRead = ""
End If
End Function


'=====Checking if a Registry key exists
Function RegKeyExists(i_RegKey As String) As Boolean
Dim myWS As Object
  On Error GoTo ErrorHandler
  Set myWS = CreateObject("WScript.Shell")
  myWS.RegRead i_RegKey
  RegKeyExists = True
  Exit Function
ErrorHandler:
  RegKeyExists = False
End Function
'======Saving a Registry key:
Sub RegKeySave(i_RegKey As String, _
               i_Value As String, _
      Optional i_Type As String = "REG_SZ")
Dim myWS As Object
  Set myWS = CreateObject("WScript.Shell")
  myWS.RegWrite i_RegKey, i_Value, i_Type
End Sub
'===Deleting a key from the Registry:
Function RegKeyDelete(i_RegKey As String) As Boolean
Dim myWS As Object
  On Error GoTo ErrorHandler
  Set myWS = CreateObject("WScript.Shell")
  myWS.RegDelete i_RegKey
  RegKeyDelete = True
  Exit Function
ErrorHandler:
  RegKeyDelete = False
End Function

Function GetSh()                                                        '- Lay danh sach sheet
  Dim Temp()
  ActiveWorkbook.Names.Add String(240, "z"), "=SUBSTITUTE(GET.WORKBOOK(1),""[""&GET.WORKBOOK(16)&""]"","""")"
  'Lay ten cua workbook add vao
  Temp = Evaluate("Transpose(" & String(240, "z") & ")")
  Temp = WorksheetFunction.Transpose(Temp)
  ActiveWorkbook.Names(String(240, "z")).Delete
  GetSh = Temp
End Function
Public Function Get_FileName(duongdan As String) As String
Dim i As Long, namefile1 As String
Dim lenName As Long
For i = Len(duongdan) To 1 Step -1
   namefile1 = Mid(duongdan, i, 1)
   If namefile1 = "\" Then
    lenName = i
    Exit For
   End If
Next
Get_FileName = Mid(duongdan, lenName + 1, Len(duongdan) - lenName)

End Function
Function Xoa_Folder(duongdan As String, Tenfile As String)
If Right(duongdan, 1) = "\" Then duongdan = duongdan & "\"
Tenfile = Dir(duongdan, vbNormal)
Do While Tenfile <> ""
    Kill duongdan & Tenfile
    Tenfile = Dir
Loop
RmDir duongdan
End Function
Function get_Extentfile(duongdan As String) As String
Dim Tenfile As String
Tenfile = Get_FileName(duongdan)
Dim i As Long
For i = 1 To Len(Tenfile)
    If Mid(Tenfile, i, 1) = "." Then
        get_Extentfile = Mid(Tenfile, i, Len(Tenfile) - i + 1)
        Exit For
    End If
Next
End Function
Function get_Foldername_ofpath(path As String) As String
Dim i As Long, TEN As String
For i = Len(path) To 1 Step -1
    TEN = Mid(path, i, 1)
    If Mid(path, i, 1) = "\" Then
        get_Foldername_ofpath = Mid(path, 1, i - 1)
        Exit For
    End If
Next
End Function
Function get_Name_offile(duongdan As String) As String
Dim Tenfile As String
Tenfile = Get_FileName(duongdan)
Dim i As Long
For i = 1 To Len(Tenfile)
    If Mid(Tenfile, i, 1) = "." Then
        get_Name_offile = Mid(Tenfile, 1, i - 1)
        Exit For
    End If
Next
End Function




Attribute VB_Name = "Sh_DT_Goithau"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Option Explicit

Private Sub Worksheet_BeforeRightClick(ByVal Target As Range, Cancel As Boolean)
On Error Resume Next
If KT_WbOP6(NameDT) = True Then
    Add_RightClickSheet ActiveSheet
    Run ("Reset_RightClick"): Run (NameDT & "!LoadPopup")
Else
    Run ("Reset_RightClick")
End If
End Sub
Private Sub Worksheet_Deactivate()
On Error Resume Next
Run ("Reset_RightClick")
If RegKeyRead("HKEY_CURRENT_USER\Software\BacNamSoft\Dutoan\AutoRename") = "1" Then
If KTS6("Setting") = True Then Sheets("Setting").Range("G44").Value = Sh_DT_Goithau.Name
End If
End Sub
Function KTS6(NameSh As String) As Boolean
  On Error Resume Next
  KTS6 = CBool(Len(Worksheets(NameSh).Name) > 0)
End Function
Function KT_WbOP6(WBName As String) As Boolean
    Dim WB As Workbook
    On Error Resume Next
    Set WB = Workbooks(WBName)
    If Err = 0 Then KT_WbOP6 = True Else KT_WbOP6 = False
End Function



Attribute VB_Name = "ThisWorkbook"
Attribute VB_Base = "0{00020819-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Private Sub Workbook_Activate()
    On Error Resume Next
    If Kiemtra_WbOpen("DTBN.xla") = True Then
        If Application.Version > 10 Then
            Run "DTBN.xla!UpdateRibbon_Database"
        End If
    End If
End Sub

Private Sub Workbook_SheetActivate(ByVal sh As Object)
  On Error Resume Next
  AppActivate Sheets("Setting").Range("H1").Value
End Sub



INQUEST-PP=macro
