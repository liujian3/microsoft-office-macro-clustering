Attribute VB_Name = "DashBoardGraph"
Option Explicit

Sub GraphRest()

Dim shp As Shape, ShpRow1 As Integer, ShpRow2 As Integer, ShpRow3 As Integer
Dim ShpName1 As String, ShpName2 As String, ShpName3 As String, ShpName4 As String, ShpName5 As String
Dim ChrtName1 As String, ChrtName2 As String, MaxScaleDem As Integer, MaxScaleSTLY As Integer

    For Each shp In ws_Dashboard.Shapes
        Select Case VBA.Left(shp.Name, 3)
            Case "Mth"
                Select Case VBA.Mid(shp.Name, 4, 1)
                    Case "1": ShpRow1 = 6: ShpRow2 = 27: ShpRow3 = 41: MaxScaleDem = sh_DashboardData.Range("CF18").Value: MaxScaleSTLY = sh_DashboardData.Range("CG18").Value
                    Case "2": ShpRow1 = 6 + 61: ShpRow2 = 27 + 61: ShpRow3 = 41 + 61: MaxScaleDem = sh_DashboardData.Range("CF19").Value: MaxScaleSTLY = sh_DashboardData.Range("CG19").Value
                    Case "3": ShpRow1 = 6 + 61 * 2: ShpRow2 = 27 + 61 * 2: ShpRow3 = 41 + 61 * 2: MaxScaleDem = sh_DashboardData.Range("CF20").Value: MaxScaleSTLY = sh_DashboardData.Range("CG20").Value
                    Case "4": ShpRow1 = 6 + 61 * 3: ShpRow2 = 27 + 61 * 3: ShpRow3 = 41 + 61 * 3: MaxScaleDem = sh_DashboardData.Range("CF21").Value: MaxScaleSTLY = sh_DashboardData.Range("CG21").Value
                    Case "5": ShpRow1 = 6 + 61 * 4: ShpRow2 = 27 + 61 * 4: ShpRow3 = 41 + 61 * 4: MaxScaleDem = sh_DashboardData.Range("CF22").Value: MaxScaleSTLY = sh_DashboardData.Range("CG22").Value
                    Case "6": ShpRow1 = 6 + 61 * 5: ShpRow2 = 27 + 61 * 5: ShpRow3 = 41 + 61 * 5: MaxScaleDem = sh_DashboardData.Range("CF23").Value: MaxScaleSTLY = sh_DashboardData.Range("CG23").Value
                End Select
                ShpName1 = "Mth" & VBA.Mid(shp.Name, 4, 1) & "_ChartOcc"
                ShpName2 = "Mth" & VBA.Mid(shp.Name, 4, 1) & "_ChartRemDem"
                ShpName3 = "Mth" & VBA.Mid(shp.Name, 4, 1) & "_ChartRPO"
                ChrtName1 = "Mth" & VBA.Mid(shp.Name, 4, 1) & "_ChartUnconstrain"
                ChrtName2 = "Mth" & VBA.Mid(shp.Name, 4, 1) & "_ChartRemDemSTLY"
                
                With ws_Dashboard.Shapes
                    .Range(Array(ShpName1, ShpName2, ShpName3)).Width = 3.5 * 72
                    .Range(Array(ShpName1, ShpName2, ShpName3)).Height = 3.35 * 72
                    .Range(Array(ChrtName1, ChrtName2)).Width = 9.1 * 72
                    .Range(Array(ChrtName1, ChrtName2)).Height = 2.7 * 72
                End With
                With ws_Dashboard
                    .ChartObjects(ChrtName1).Chart.Axes(xlValue).MaximumScale = MaxScaleDem
                    .ChartObjects(ChrtName1).Chart.Axes(xlValue).MinimumScale = 0
                    .ChartObjects(ChrtName2).Chart.Axes(xlValue).MaximumScale = MaxScaleSTLY
                    .ChartObjects(ChrtName2).Chart.Axes(xlValue).MinimumScale = 0
                End With
                
                With ws_Dashboard.Shapes(ShpName1)
                    .Left = ws_Dashboard.Cells(ShpRow1, 1).Left
                    .Top = ws_Dashboard.Cells(ShpRow1, 1).Top
                End With
                With ws_Dashboard.Shapes(ShpName2)
                    .Left = ws_Dashboard.Cells(ShpRow1, 10).Left
                    .Top = ws_Dashboard.Cells(ShpRow1, 10).Top
                End With
                
                With ws_Dashboard.Shapes(ShpName3)
                    .Left = ws_Dashboard.Cells(ShpRow1, 24).Left
                    .Top = ws_Dashboard.Cells(ShpRow1, 24).Top
                End With
                With ws_Dashboard.Shapes(ChrtName1)
                    .Left = ws_Dashboard.Cells(ShpRow2, 2).Left
                    .Top = ws_Dashboard.Cells(ShpRow2, 2).Top
                End With
                With ws_Dashboard.Shapes(ChrtName2)
                    .Left = ws_Dashboard.Cells(ShpRow3, 2).Left
                    .Top = ws_Dashboard.Cells(ShpRow3, 2).Top
                End With

        End Select
    Next
    On Error Resume Next
    'realign graph and header
    ws_Dashboard.Shapes.Range(Array("Mth1_ChartUnconstrain", "TextBox 6")).Align msoAlignTops, msoFalse
    ws_Dashboard.Shapes.Range(Array("Mth1_ChartUnconstrain", "TextBox 6")).Align msoAlignCenters, msoFalse
    ws_Dashboard.Shapes.Range(Array("Mth2_ChartUnconstrain", "TextBox 8")).Align msoAlignTops, msoFalse
    ws_Dashboard.Shapes.Range(Array("Mth2_ChartUnconstrain", "TextBox 8")).Align msoAlignCenters, msoFalse
    ws_Dashboard.Shapes.Range(Array("Mth3_ChartUnconstrain", "TextBox 10")).Align msoAlignTops, msoFalse
    ws_Dashboard.Shapes.Range(Array("Mth3_ChartUnconstrain", "TextBox 10")).Align msoAlignCenters, msoFalse
    ws_Dashboard.Shapes.Range(Array("Mth4_ChartUnconstrain", "TextBox 12")).Align msoAlignTops, msoFalse
    ws_Dashboard.Shapes.Range(Array("Mth4_ChartUnconstrain", "TextBox 12")).Align msoAlignCenters, msoFalse
    ws_Dashboard.Shapes.Range(Array("Mth5_ChartUnconstrain", "TextBox 14")).Align msoAlignTops, msoFalse
    ws_Dashboard.Shapes.Range(Array("Mth5_ChartUnconstrain", "TextBox 14")).Align msoAlignCenters, msoFalse
    ws_Dashboard.Shapes.Range(Array("Mth6_ChartUnconstrain", "TextBox 16")).Align msoAlignTops, msoFalse
    ws_Dashboard.Shapes.Range(Array("Mth6_ChartUnconstrain", "TextBox 16")).Align msoAlignCenters, msoFalse


    ws_Dashboard.Shapes.Range(Array("Mth1_ChartRemDemSTLY", "TextBox 7")).Align msoAlignTops, msoFalse
    ws_Dashboard.Shapes.Range(Array("Mth1_ChartRemDemSTLY", "TextBox 7")).Align msoAlignCenters, msoFalse
    ws_Dashboard.Shapes.Range(Array("Mth2_ChartRemDemSTLY", "TextBox 9")).Align msoAlignTops, msoFalse
    ws_Dashboard.Shapes.Range(Array("Mth2_ChartRemDemSTLY", "TextBox 9")).Align msoAlignCenters, msoFalse
    ws_Dashboard.Shapes.Range(Array("Mth3_ChartRemDemSTLY", "TextBox 11")).Align msoAlignTops, msoFalse
    ws_Dashboard.Shapes.Range(Array("Mth3_ChartRemDemSTLY", "TextBox 11")).Align msoAlignCenters, msoFalse
    ws_Dashboard.Shapes.Range(Array("Mth4_ChartRemDemSTLY", "TextBox 13")).Align msoAlignTops, msoFalse
    ws_Dashboard.Shapes.Range(Array("Mth4_ChartRemDemSTLY", "TextBox 13")).Align msoAlignCenters, msoFalse
    ws_Dashboard.Shapes.Range(Array("Mth5_ChartRemDemSTLY", "TextBox 15")).Align msoAlignTops, msoFalse
    ws_Dashboard.Shapes.Range(Array("Mth5_ChartRemDemSTLY", "TextBox 15")).Align msoAlignCenters, msoFalse
    ws_Dashboard.Shapes.Range(Array("Mth6_ChartRemDemSTLY", "TextBox 17")).Align msoAlignTops, msoFalse
    ws_Dashboard.Shapes.Range(Array("Mth6_ChartRemDemSTLY", "TextBox 17")).Align msoAlignCenters, msoFalse
    On Error GoTo 0
    
    If sh_DashboardData.Range("AB66").Value > 0 Then
        ws_Dashboard.Shapes("Mth5_ChartRPO").Visible = msoCTrue
        ws_Dashboard.Shapes("Mth6_ChartRPO").Visible = msoCTrue
    Else
        ws_Dashboard.Shapes("Mth5_ChartRPO").Visible = msoFalse
        ws_Dashboard.Shapes("Mth6_ChartRPO").Visible = msoFalse
    End If
End Sub
Attribute VB_Name = "Help_Email"
Option Explicit
Option Private Module
Sub HelpEmail() 'email to tools team support
    'Working in Office 2000-2010
    Dim OutApp As Object, OutMail As Object
    
    If ActiveWorkbook.Path <> "" Then
        Set OutApp = CreateObject("Outlook.Application")
        Set OutMail = OutApp.CreateItem(0)
        
        On Error Resume Next
        With OutMail
            .To = "RMFS.Tools@marriott.com"
            .CC = ""
            .BCC = ""
            .Subject = "Help: " & ws_Welcome.Range("C2").Value & " - " & ws_Setup.Range("C15").Value
            .HTMLBody = "Please include your question or/and the issue you've encountered." & "<br/>" & _
                "Also, include the extract(s) you've imported." & "<br/>" & "Thank you"
            .Attachments.Add ActiveWorkbook.FullName
            .Display   'or use .Send
        End With
        On Error GoTo 0

        Set OutMail = Nothing
        Set OutApp = Nothing
    Else
        MsgBox "The ActiveWorkbook does not have a path, Save the file first."
    End If
End Sub
Attribute VB_Name = "ImportData"
Option Explicit
Option Private Module
Sub ArchiveData() 'archive the data prior import
Dim Irow As Long, SaveCurrentData As Boolean, ws As Worksheet, shp As Shape, nm As Name
Dim MyHeight As Double, MyWidth As Double

    If ws_Setup.Range("C15").Value = "HHHHH" Then
        MsgBox "The tool setup is not completed. Before populating the tool, please read and complete the setup tab based on your hotel specification." & vbLf & vbLf & _
                "Import cancelled!", vbCritical, "Tool Setup not completed"
                ws_Setup.Activate
                End
    End If
    
    With Application: .ScreenUpdating = False: .EnableEvents = False: End With
    
    ws_DayXDay.Unprotect "unlockME"
    ws_Segmentation.Unprotect "unlockME"
    ws_RMcollection.Unprotect "unlockME"
    sh_OYProj.Unprotect "unlockME"
    
    On Error Resume Next
    'clear any possible pic formulas on snapshot or Custom tabs
    For Each ws In Worksheets
        Select Case VBA.Left(ws.CodeName, 3)
            Case "wsC"
               For Each shp In ws.Shapes
                   Select Case VBA.Left(shp.Name, 4)
                       Case "Pic_"
                           ws.Shapes(shp.Name).DrawingObject.Formula = ""
                   End Select
               Next
        End Select
    Next
    
    On Error GoTo 0
    
    Set ws = Nothing: Set shp = Nothing

    SaveCurrentData = True
    
    Call Import_Data(SaveCurrentData)
    
    Application.Calculation = xlCalculationAutomatic 'turn the calculation on to refresh the data prior running the realign month module
    
    Call RealignMonth
    Call SpreadDataDxD
    
    Application.Calculation = xlCalculationAutomatic 'after the day by day is spread, we need to recalculate (month total)
    
    Call SpreadSeg
    Call SpreadRMCol
    Call ApplyDataGraphs
    
    ws_DayXDay.Protect "unlockME", DrawingObjects:=True, Contents:=True, Scenarios:=False, AllowFormattingCells:=True, AllowFormattingRows:=False, AllowFormattingColumns:=False
    ws_Segmentation.Protect "unlockME", DrawingObjects:=True, Contents:=True, Scenarios:=False, AllowFormattingCells:=False, AllowFormattingRows:=False, AllowFormattingColumns:=False
    ws_RMcollection.Protect "unlockME", DrawingObjects:=True, Contents:=True, Scenarios:=False, AllowFormattingCells:=False, AllowFormattingRows:=False, AllowFormattingColumns:=False
    sh_OYProj.Protect "unlockME", DrawingObjects:=True, Contents:=True, Scenarios:=False, AllowFormattingCells:=False, AllowFormattingRows:=False, AllowFormattingColumns:=False
    
    Call Auto_Fit_DaybyDay
    
    With Application: .Calculation = xlCalculationAutomatic: .EnableEvents = False: End With
    On Error Resume Next
    'reassign the formulas to the shapes (Projection and MRDW) keeping the formulas slow down excel a lot
    For Each ws In Worksheets
        Select Case VBA.Left(ws.CodeName, 3)
            Case "wsC"
                For Each shp In ws.Shapes
                    MyHeight = ws.Shapes(shp.Name).Height: MyWidth = ws.Shapes(shp.Name).Width
                        Select Case shp.Name
                            Case "Pic_RPO90d"
                                ws.Shapes(shp.Name).DrawingObject.Formula = "=RPO90d"
                                ws.Shapes(shp.Name).Height = MyHeight: ws.Shapes(shp.Name).Width = MyWidth
                    'summary day by day
                            Case "Pic_SUM1FW"
                                ws.Shapes(shp.Name).DrawingObject.Formula = "=Sum1FW"
                                ws.Shapes(shp.Name).Height = MyHeight: ws.Shapes(shp.Name).Width = MyWidth
                            Case "Pic_SUM1WD"
                                ws.Shapes(shp.Name).DrawingObject.Formula = "=Sum1WD"
                                ws.Shapes(shp.Name).Height = MyHeight: ws.Shapes(shp.Name).Width = MyWidth
                            Case "Pic_SUM1WE"
                                ws.Shapes(shp.Name).DrawingObject.Formula = "=Sum1WE"
                                ws.Shapes(shp.Name).Height = MyHeight: ws.Shapes(shp.Name).Width = MyWidth
                            Case "Pic_SUM2FW"
                                ws.Shapes(shp.Name).DrawingObject.Formula = "=Sum2FW"
                                ws.Shapes(shp.Name).Height = MyHeight: ws.Shapes(shp.Name).Width = MyWidth
                            Case "Pic_SUM2WD"
                                ws.Shapes(shp.Name).DrawingObject.Formula = "=Sum2WD"
                                ws.Shapes(shp.Name).Height = MyHeight: ws.Shapes(shp.Name).Width = MyWidth
                            Case "Pic_SUM2WE"
                                ws.Shapes(shp.Name).DrawingObject.Formula = "=Sum2WE"
                                ws.Shapes(shp.Name).Height = MyHeight: ws.Shapes(shp.Name).Width = MyWidth
                            Case "Pic_SUM3FW"
                                ws.Shapes(shp.Name).DrawingObject.Formula = "=Sum3FW"
                                ws.Shapes(shp.Name).Height = MyHeight: ws.Shapes(shp.Name).Width = MyWidth
                            Case "Pic_SUM3WD"
                                ws.Shapes(shp.Name).DrawingObject.Formula = "=Sum3WD"
                                ws.Shapes(shp.Name).Height = MyHeight: ws.Shapes(shp.Name).Width = MyWidth
                            Case "Pic_SUM3WE"
                                ws.Shapes(shp.Name).DrawingObject.Formula = "=Sum3WE"
                                ws.Shapes(shp.Name).Height = MyHeight: ws.Shapes(shp.Name).Width = MyWidth
                            Case "Pic_SUM4FW"
                                ws.Shapes(shp.Name).DrawingObject.Formula = "=Sum4FW"
                                ws.Shapes(shp.Name).Height = MyHeight: ws.Shapes(shp.Name).Width = MyWidth
                            Case "Pic_SUM4WD"
                                ws.Shapes(shp.Name).DrawingObject.Formula = "=Sum4WD"
                                ws.Shapes(shp.Name).Height = MyHeight: ws.Shapes(shp.Name).Width = MyWidth
                            Case "Pic_SUM4WE"
                                ws.Shapes(shp.Name).DrawingObject.Formula = "=Sum4WE"
                                ws.Shapes(shp.Name).Height = MyHeight: ws.Shapes(shp.Name).Width = MyWidth
                            Case "Pic_SUM5FW"
                                ws.Shapes(shp.Name).DrawingObject.Formula = "=Sum5FW"
                                ws.Shapes(shp.Name).Height = MyHeight: ws.Shapes(shp.Name).Width = MyWidth
                            Case "Pic_SUM5WD"
                                ws.Shapes(shp.Name).DrawingObject.Formula = "=Sum5WD"
                                ws.Shapes(shp.Name).Height = MyHeight: ws.Shapes(shp.Name).Width = MyWidth
                            Case "Pic_SUM5WE"
                                ws.Shapes(shp.Name).DrawingObject.Formula = "=Sum5WE"
                                ws.Shapes(shp.Name).Height = MyHeight: ws.Shapes(shp.Name).Width = MyWidth
                            Case "Pic_SUM6FW"
                                ws.Shapes(shp.Name).DrawingObject.Formula = "=Sum6FW"
                                ws.Shapes(shp.Name).Height = MyHeight: ws.Shapes(shp.Name).Width = MyWidth
                            Case "Pic_SUM6WD"
                                ws.Shapes(shp.Name).DrawingObject.Formula = "=Sum6WD"
                                ws.Shapes(shp.Name).Height = MyHeight: ws.Shapes(shp.Name).Width = MyWidth
                            Case "Pic_SUM6WE"
                                ws.Shapes(shp.Name).DrawingObject.Formula = "=Sum6WE"
                                ws.Shapes(shp.Name).Height = MyHeight: ws.Shapes(shp.Name).Width = MyWidth
                    'Financial
                            Case "Pic_Proj1"
                                ws.Shapes(shp.Name).DrawingObject.Formula = "=Proj1FW"
                                ws.Shapes(shp.Name).Height = MyHeight: ws.Shapes(shp.Name).Width = MyWidth
                            Case "Pic_Proj1All"
                                ws.Shapes(shp.Name).DrawingObject.Formula = "=Proj1"
                                ws.Shapes(shp.Name).Height = MyHeight: ws.Shapes(shp.Name).Width = MyWidth
                            Case "Pic_Proj2"
                                ws.Shapes(shp.Name).DrawingObject.Formula = "=Proj2FW"
                                ws.Shapes(shp.Name).Height = MyHeight: ws.Shapes(shp.Name).Width = MyWidth
                            Case "Pic_Proj2All"
                                ws.Shapes(shp.Name).DrawingObject.Formula = "=Proj2"
                                ws.Shapes(shp.Name).Height = MyHeight: ws.Shapes(shp.Name).Width = MyWidth
                            Case "Pic_Proj3"
                                ws.Shapes(shp.Name).DrawingObject.Formula = "=Proj3FW"
                                ws.Shapes(shp.Name).Height = MyHeight: ws.Shapes(shp.Name).Width = MyWidth
                            Case "Pic_Proj3All"
                                ws.Shapes(shp.Name).DrawingObject.Formula = "=Proj3"
                                ws.Shapes(shp.Name).Height = MyHeight: ws.Shapes(shp.Name).Width = MyWidth
                            Case "Pic_Proj4"
                                ws.Shapes(shp.Name).DrawingObject.Formula = "=Proj4FW"
                                ws.Shapes(shp.Name).Height = MyHeight: ws.Shapes(shp.Name).Width = MyWidth
                            Case "Pic_Proj4All"
                                ws.Shapes(shp.Name).DrawingObject.Formula = "=Proj4"
                                ws.Shapes(shp.Name).Height = MyHeight: ws.Shapes(shp.Name).Width = MyWidth
                            Case "Pic_Proj5"
                                ws.Shapes(shp.Name).DrawingObject.Formula = "=Proj5FW"
                                ws.Shapes(shp.Name).Height = MyHeight: ws.Shapes(shp.Name).Width = MyWidth
                            Case "Pic_Proj5All"
                                ws.Shapes(shp.Name).DrawingObject.Formula = "=Proj5"
                                ws.Shapes(shp.Name).Height = MyHeight: ws.Shapes(shp.Name).Width = MyWidth
                            Case "Pic_Proj6"
                                ws.Shapes(shp.Name).DrawingObject.Formula = "=Proj6FW"
                                ws.Shapes(shp.Name).Height = MyHeight: ws.Shapes(shp.Name).Width = MyWidth
                            Case "Pic_Proj6All"
                                ws.Shapes(shp.Name).DrawingObject.Formula = "=Proj6"
                                ws.Shapes(shp.Name).Height = MyHeight: ws.Shapes(shp.Name).Width = MyWidth
                            Case "Pic_Proj7"
                                ws.Shapes(shp.Name).DrawingObject.Formula = "=Proj7FW"
                                ws.Shapes(shp.Name).Height = MyHeight: ws.Shapes(shp.Name).Width = MyWidth
                            Case "Pic_Proj7All"
                                ws.Shapes(shp.Name).DrawingObject.Formula = "=Proj7"
                                ws.Shapes(shp.Name).Height = MyHeight: ws.Shapes(shp.Name).Width = MyWidth
                            Case "Pic_ProjFY"
                                ws.Shapes(shp.Name).DrawingObject.Formula = "=ProjFYFw"
                                ws.Shapes(shp.Name).Height = MyHeight: ws.Shapes(shp.Name).Width = MyWidth
                            Case "Pic_ProjFYAll"
                                ws.Shapes(shp.Name).DrawingObject.Formula = "=ProjFY"
                                ws.Shapes(shp.Name).Height = MyHeight: ws.Shapes(shp.Name).Width = MyWidth
                        End Select
                    MyHeight = Empty: MyWidth = Empty
                Next
        End Select
    Next
    Set shp = Nothing: Set ws = Nothing
    
    For Each nm In Names
        nm.Visible = False
    Next
    
    Set nm = Nothing
    
    On Error GoTo 0
    Call Auto_Fit_DashSum
    
    With Application: .EnableEvents = True: .Calculation = xlCalculationAutomatic: End With
    ws_Dashboard.Activate
    
    ws_DayXDay.Activate
    Application.GoTo ws_DayXDay.Range("C6"), True
    
    With Application: .ScreenUpdating = True: .EnableEvents = True: .DisplayAlerts = True: .Calculation = xlCalculationAutomatic: End With
End Sub
Sub ReimportData() 're-import data without archiving the data
Dim SaveCurrentData As Boolean, ws As Worksheet, shp As Shape, MyHeight As Double, MyWidth As Double, nm As Name

    If ws_Setup.Range("C15").Value = "HHHHH" Then
        MsgBox "The tool setup is not completed. Before populating the tool, please read and complete the setup tab based on your hotel specification." & vbLf & vbLf & _
                "Import cancelled!", vbCritical, "Tool Setup not completed"
                ws_Setup.Activate
                End
    End If
    
    With Application: .ScreenUpdating = False: .EnableEvents = False: End With
    
    ws_DayXDay.Unprotect "unlockME"
    ws_Segmentation.Unprotect "unlockME"
    ws_RMcollection.Unprotect "unlockME"
    sh_OYProj.Unprotect "unlockME"
    
    On Error Resume Next
    'clear any possible pic formulas on snapshot or Custom tabs
    For Each ws In Worksheets
        Select Case VBA.Left(ws.CodeName, 3)
            Case "wsC"
                For Each shp In ws.Shapes
                    Select Case VBA.Left(shp.Name, 4)
                        Case "Pic_"
                            ws.Shapes(shp.Name).DrawingObject.Formula = ""
                    End Select
                Next
        End Select
    Next
    
    On Error GoTo 0
    
    Set ws = Nothing: Set shp = Nothing
    
    SaveCurrentData = False
    
    Call Import_Data(SaveCurrentData)
    
    Application.Calculation = xlCalculationAutomatic 'turn the calculation on to refresh the data prior running the realign month module
    
    Call RealignMonth
    Call SpreadDataDxD
    
    Application.Calculation = xlCalculationAutomatic 'after the day by day is spread, we need to recalculate (month total)
    
    Call SpreadSeg
    Call SpreadRMCol
    Call ApplyDataGraphs
    
    ws_DayXDay.Protect "unlockME", DrawingObjects:=True, Contents:=True, Scenarios:=False, AllowFormattingCells:=True, AllowFormattingRows:=False, AllowFormattingColumns:=False
    ws_Segmentation.Protect "unlockME", DrawingObjects:=True, Contents:=True, Scenarios:=False, AllowFormattingCells:=False, AllowFormattingRows:=False, AllowFormattingColumns:=False
    ws_RMcollection.Protect "unlockME", DrawingObjects:=True, Contents:=True, Scenarios:=False, AllowFormattingCells:=False, AllowFormattingRows:=False, AllowFormattingColumns:=False
    sh_OYProj.Protect "unlockME", DrawingObjects:=True, Contents:=True, Scenarios:=False, AllowFormattingCells:=False, AllowFormattingRows:=False, AllowFormattingColumns:=False
    
    Call Auto_Fit_DaybyDay
    
    Application.EnableEvents = False
    On Error Resume Next
    'reassign the formulas to the shapes (Projection and MRDW) keeping the formulas slow down excel a lot
    For Each ws In Worksheets
        Select Case VBA.Left(ws.CodeName, 3)
            Case "ws_C"
                For Each shp In ws.Shapes
                    MyHeight = ws.Shapes(shp.Name).Height: MyWidth = ws.Shapes(shp.Name).Width
                        Select Case shp.Name
                            Case "Pic_RPO90d"
                                ws.Shapes(shp.Name).DrawingObject.Formula = "=RPO90d"
                                ws.Shapes(shp.Name).Height = MyHeight: ws.Shapes(shp.Name).Width = MyWidth
                    'summary day by day
                            Case "Pic_SUM1FW"
                                ws.Shapes(shp.Name).DrawingObject.Formula = "=Sum1FW"
                                ws.Shapes(shp.Name).Height = MyHeight: ws.Shapes(shp.Name).Width = MyWidth
                            Case "Pic_SUM1WD"
                                ws.Shapes(shp.Name).DrawingObject.Formula = "=Sum1WD"
                                ws.Shapes(shp.Name).Height = MyHeight: ws.Shapes(shp.Name).Width = MyWidth
                            Case "Pic_SUM1WE"
                                ws.Shapes(shp.Name).DrawingObject.Formula = "=Sum1WE"
                                ws.Shapes(shp.Name).Height = MyHeight: ws.Shapes(shp.Name).Width = MyWidth
                            Case "Pic_SUM2FW"
                                ws.Shapes(shp.Name).DrawingObject.Formula = "=Sum2FW"
                                ws.Shapes(shp.Name).Height = MyHeight: ws.Shapes(shp.Name).Width = MyWidth
                            Case "Pic_SUM2WD"
                                ws.Shapes(shp.Name).DrawingObject.Formula = "=Sum2WD"
                                ws.Shapes(shp.Name).Height = MyHeight: ws.Shapes(shp.Name).Width = MyWidth
                            Case "Pic_SUM2WE"
                                ws.Shapes(shp.Name).DrawingObject.Formula = "=Sum2WE"
                                ws.Shapes(shp.Name).Height = MyHeight: ws.Shapes(shp.Name).Width = MyWidth
                            Case "Pic_SUM3FW"
                                ws.Shapes(shp.Name).DrawingObject.Formula = "=Sum3FW"
                                ws.Shapes(shp.Name).Height = MyHeight: ws.Shapes(shp.Name).Width = MyWidth
                            Case "Pic_SUM3WD"
                                ws.Shapes(shp.Name).DrawingObject.Formula = "=Sum3WD"
                                ws.Shapes(shp.Name).Height = MyHeight: ws.Shapes(shp.Name).Width = MyWidth
                            Case "Pic_SUM3WE"
                                ws.Shapes(shp.Name).DrawingObject.Formula = "=Sum3WE"
                                ws.Shapes(shp.Name).Height = MyHeight: ws.Shapes(shp.Name).Width = MyWidth
                            Case "Pic_SUM4FW"
                                ws.Shapes(shp.Name).DrawingObject.Formula = "=Sum4FW"
                                ws.Shapes(shp.Name).Height = MyHeight: ws.Shapes(shp.Name).Width = MyWidth
                            Case "Pic_SUM4WD"
                                ws.Shapes(shp.Name).DrawingObject.Formula = "=Sum4WD"
                                ws.Shapes(shp.Name).Height = MyHeight: ws.Shapes(shp.Name).Width = MyWidth
                            Case "Pic_SUM4WE"
                                ws.Shapes(shp.Name).DrawingObject.Formula = "=Sum4WE"
                                ws.Shapes(shp.Name).Height = MyHeight: ws.Shapes(shp.Name).Width = MyWidth
                            Case "Pic_SUM5FW"
                                ws.Shapes(shp.Name).DrawingObject.Formula = "=Sum5FW"
                                ws.Shapes(shp.Name).Height = MyHeight: ws.Shapes(shp.Name).Width = MyWidth
                            Case "Pic_SUM5WD"
                                ws.Shapes(shp.Name).DrawingObject.Formula = "=Sum5WD"
                                ws.Shapes(shp.Name).Height = MyHeight: ws.Shapes(shp.Name).Width = MyWidth
                            Case "Pic_SUM5WE"
                                ws.Shapes(shp.Name).DrawingObject.Formula = "=Sum5WE"
                                ws.Shapes(shp.Name).Height = MyHeight: ws.Shapes(shp.Name).Width = MyWidth
                            Case "Pic_SUM6FW"
                                ws.Shapes(shp.Name).DrawingObject.Formula = "=Sum6FW"
                                ws.Shapes(shp.Name).Height = MyHeight: ws.Shapes(shp.Name).Width = MyWidth
                            Case "Pic_SUM6WD"
                                ws.Shapes(shp.Name).DrawingObject.Formula = "=Sum6WD"
                                ws.Shapes(shp.Name).Height = MyHeight: ws.Shapes(shp.Name).Width = MyWidth
                            Case "Pic_SUM6WE"
                                ws.Shapes(shp.Name).DrawingObject.Formula = "=Sum6WE"
                                ws.Shapes(shp.Name).Height = MyHeight: ws.Shapes(shp.Name).Width = MyWidth
                    'Financial
                            Case "Pic_Proj1"
                                ws.Shapes(shp.Name).DrawingObject.Formula = "=Proj1FW"
                                ws.Shapes(shp.Name).Height = MyHeight: ws.Shapes(shp.Name).Width = MyWidth
                            Case "Pic_Proj1All"
                                ws.Shapes(shp.Name).DrawingObject.Formula = "=Proj1"
                                ws.Shapes(shp.Name).Height = MyHeight: ws.Shapes(shp.Name).Width = MyWidth
                            Case "Pic_Proj2"
                                ws.Shapes(shp.Name).DrawingObject.Formula = "=Proj2FW"
                                ws.Shapes(shp.Name).Height = MyHeight: ws.Shapes(shp.Name).Width = MyWidth
                            Case "Pic_Proj2All"
                                ws.Shapes(shp.Name).DrawingObject.Formula = "=Proj2"
                                ws.Shapes(shp.Name).Height = MyHeight: ws.Shapes(shp.Name).Width = MyWidth
                            Case "Pic_Proj3"
                                ws.Shapes(shp.Name).DrawingObject.Formula = "=Proj3FW"
                                ws.Shapes(shp.Name).Height = MyHeight: ws.Shapes(shp.Name).Width = MyWidth
                            Case "Pic_Proj3All"
                                ws.Shapes(shp.Name).DrawingObject.Formula = "=Proj3"
                                ws.Shapes(shp.Name).Height = MyHeight: ws.Shapes(shp.Name).Width = MyWidth
                            Case "Pic_Proj4"
                                ws.Shapes(shp.Name).DrawingObject.Formula = "=Proj4FW"
                                ws.Shapes(shp.Name).Height = MyHeight: ws.Shapes(shp.Name).Width = MyWidth
                            Case "Pic_Proj4All"
                                ws.Shapes(shp.Name).DrawingObject.Formula = "=Proj4"
                                ws.Shapes(shp.Name).Height = MyHeight: ws.Shapes(shp.Name).Width = MyWidth
                            Case "Pic_Proj5"
                                ws.Shapes(shp.Name).DrawingObject.Formula = "=Proj5FW"
                                ws.Shapes(shp.Name).Height = MyHeight: ws.Shapes(shp.Name).Width = MyWidth
                            Case "Pic_Proj5All"
                                ws.Shapes(shp.Name).DrawingObject.Formula = "=Proj5"
                                ws.Shapes(shp.Name).Height = MyHeight: ws.Shapes(shp.Name).Width = MyWidth
                            Case "Pic_Proj6"
                                ws.Shapes(shp.Name).DrawingObject.Formula = "=Proj6FW"
                                ws.Shapes(shp.Name).Height = MyHeight: ws.Shapes(shp.Name).Width = MyWidth
                            Case "Pic_Proj6All"
                                ws.Shapes(shp.Name).DrawingObject.Formula = "=Proj6"
                                ws.Shapes(shp.Name).Height = MyHeight: ws.Shapes(shp.Name).Width = MyWidth
                            Case "Pic_Proj7"
                                ws.Shapes(shp.Name).DrawingObject.Formula = "=Proj7FW"
                                ws.Shapes(shp.Name).Height = MyHeight: ws.Shapes(shp.Name).Width = MyWidth
                            Case "Pic_Proj7All"
                                ws.Shapes(shp.Name).DrawingObject.Formula = "=Proj7"
                                ws.Shapes(shp.Name).Height = MyHeight: ws.Shapes(shp.Name).Width = MyWidth
                            Case "Pic_ProjFY"
                                ws.Shapes(shp.Name).DrawingObject.Formula = "=ProjFYFw"
                                ws.Shapes(shp.Name).Height = MyHeight: ws.Shapes(shp.Name).Width = MyWidth
                            Case "Pic_ProjFYAll"
                                ws.Shapes(shp.Name).DrawingObject.Formula = "=ProjFY"
                                ws.Shapes(shp.Name).Height = MyHeight: ws.Shapes(shp.Name).Width = MyWidth
                        End Select
                    MyHeight = Empty: MyWidth = Empty
                Next
        End Select
    Next
    Set shp = Nothing: Set ws = Nothing
    
    For Each nm In Names
        nm.Visible = False
    Next
    
    Set nm = Nothing
    On Error GoTo 0
    Call Auto_Fit_DashSum
    
    With Application: .EnableEvents = True: .Calculation = xlCalculationAutomatic: End With
    ws_Dashboard.Activate
    
    ws_DayXDay.Activate
    Application.GoTo ws_DayXDay.Range("C6"), True
    With Application: .ScreenUpdating = True: .EnableEvents = True: .DisplayAlerts = True: .Calculation = xlCalculationAutomatic: End With

End Sub
Sub Import_Data(SaveCurrentData) ' this is to import the OY single extract
Dim arFileName As Variant, wsSource As Worksheet, MyTab As Byte, wbImport As Workbook
Dim Irow As Long, lastrow As Long, LastrowSeg10LY As Long, iCol As Byte
Dim CountGPOSeason As Byte, ToolVersion As Double, VersionMsg As Byte
Dim MyMonth As Variant, MyDay As Variant, MyYear As Variant, rTargetMatch As Range

   arFileName = Application.GetOpenFilename(FileFilter:="Excel Files (*.xlsx), *.xlsx", FilterIndex:=1, MultiSelect:=False)
    If arFileName = 0 Then
        MsgBox "No file was selected."
        ws_Segmentation.Protect "unlockME", DrawingObjects:=True, Contents:=True, Scenarios:=False, AllowFormattingCells:=False, AllowFormattingRows:=False, AllowFormattingColumns:=False
        ws_RMcollection.Protect "unlockME", DrawingObjects:=True, Contents:=True, Scenarios:=False, AllowFormattingCells:=False, AllowFormattingRows:=False, AllowFormattingColumns:=False
        ws_DayXDay.Protect "unlockME", DrawingObjects:=True, Contents:=True, Scenarios:=False, AllowFormattingCells:=True, AllowFormattingRows:=False, AllowFormattingColumns:=False
        ws_DayXDay.Activate
        With Application: .ScreenUpdating = True: .Calculation = xlCalculationAutomatic: .EnableEvents = True: .DisplayAlerts = True: End With
        
        End
    End If
    
    With Application: .ScreenUpdating = False: .Calculation = xlCalculationManual: .EnableEvents = False: .DisplayAlerts = False: End With
    
    Set wbImport = Workbooks.Open(arFileName)
    If wbImport.Worksheets.Count = 1 Then
        MsgBox "You've selected an incorrect file. Please try again.", vbCritical, "Incorrect file selected"
        wbImport.Close False
        ws_Segmentation.Protect "unlockME", DrawingObjects:=True, Contents:=True, Scenarios:=False, AllowFormattingCells:=False, AllowFormattingRows:=False, AllowFormattingColumns:=False
        ws_RMcollection.Protect "unlockME", DrawingObjects:=True, Contents:=True, Scenarios:=False, AllowFormattingCells:=False, AllowFormattingRows:=False, AllowFormattingColumns:=False
        ws_DayXDay.Protect "unlockME", DrawingObjects:=True, Contents:=True, Scenarios:=False, AllowFormattingCells:=True, AllowFormattingRows:=False, AllowFormattingColumns:=False
        
        With Application: .ScreenUpdating = True: .Calculation = xlCalculationAutomatic: .EnableEvents = True: .DisplayAlerts = True: End With
        ws_DayXDay.Activate
        End
    End If
    
    MyTab = 0
        
    For Each wsSource In wbImport.Worksheets
        If wsSource.Range("A4").Value = "Version" Then
            'check if we have the tool is up to date
            If wsSource.Range("B4").Value > Application.WorksheetFunction.Max(ws_Version.Range("A2:A40")) Then
               VersionMsg = MsgBox("A new OYv2 Strategy Outlook tool is available to retrieve on MGS." & vbLf & vbLf & _
                    "New enhancements or corrections were implemented to the new version." & vbLf & vbLf & _
                    "It is important you retrieve the new tool and upgrade to that new version." & vbLf & vbLf & _
                    "Do you wish to continue the import process?", vbCritical + vbYesNo + vbDefaultButton2, "New OYv2 Outlook tool available")
                    If VersionMsg = vbNo Then
                        wbImport.Close False
                        MyTab = Empty
                        ws_DayXDay.Protect "unlockME", DrawingObjects:=True, Contents:=True, Scenarios:=False, AllowFormattingCells:=True, AllowFormattingRows:=False, AllowFormattingColumns:=False
                        ws_Segmentation.Protect "unlockME", DrawingObjects:=True, Contents:=True, Scenarios:=False, AllowFormattingCells:=False, AllowFormattingRows:=False, AllowFormattingColumns:=False
                        ws_RMcollection.Protect "unlockME", DrawingObjects:=True, Contents:=True, Scenarios:=False, AllowFormattingCells:=False, AllowFormattingRows:=False, AllowFormattingColumns:=False
                        
                        With Application: .ScreenUpdating = True: .EnableEvents = True: .Calculation = xlCalculationAutomatic: .DisplayAlerts = True: End With
                        Set wbImport = Nothing: ToolVersion = Empty: VersionMsg = Empty
                        End
                    End If
            End If
        Exit For
        End If
        MyTab = MyTab + 1
        If MyTab = wbImport.Worksheets.Count Then
            wbImport.Close
            MsgBox "You've selected an incorrect file. Please try again", vbCritical, "Incorrect file selected."
            ws_DayXDay.Protect "unlockME", DrawingObjects:=True, Contents:=True, Scenarios:=False, AllowFormattingCells:=True, AllowFormattingRows:=False, AllowFormattingColumns:=False
            ws_Segmentation.Protect "unlockME", DrawingObjects:=True, Contents:=True, Scenarios:=False, AllowFormattingCells:=False, AllowFormattingRows:=False, AllowFormattingColumns:=False
            ws_RMcollection.Protect "unlockME", DrawingObjects:=True, Contents:=True, Scenarios:=False, AllowFormattingCells:=False, AllowFormattingRows:=False, AllowFormattingColumns:=False
            With Application: .ScreenUpdating = True: .Calculation = xlCalculationAutomatic: .EnableEvents = True: .DisplayAlerts = True: End With
            ws_DayXDay.Activate
            End
        End If
    Next
    VersionMsg = Empty: MyTab = Empty
    
    With Application: .ScreenUpdating = False: .Calculation = xlCalculationManual: .EnableEvents = False: .DisplayAlerts = False: End With
    
    'clear all imported data if archive import is selected
    If SaveCurrentData = True Then
       
        'archive the OYv2 previous date
        If ws_DayXDay.Range("DT3").Value > 0 Then
            ws_DayXDay.Range("FI3").Value2 = ws_DayXDay.Range("DT3").Value2
            ws_DayXDay.Range("FH6:GQ507").Value = ws_DayXDay.Range("DS6:FB507").Value 'copy current data day by day
            
            'Clear data for current day by day tab
            For Irow = 6 To 507 Step 39
                ws_DayXDay.Range("DM" & Irow & ":DR" & Irow + 30).ClearContents 'clear events to Archived data SEG10LY Fx converter
                ws_DayXDay.Range("DT" & Irow & ":FB" & Irow + 30).ClearContents
            Next
            
            ws_Segmentation.Range("DU6:FC507").Value = ws_Segmentation.Range("CA6:DI507").Value 'copy current data segmentation
            'Clear data for current segmentation tab
            For Irow = 6 To 507 Step 39
                ws_Segmentation.Range("BX" & Irow & ":BZ" & Irow + 30).ClearContents 'clear events to Archived data SEG10LY Fx converter
                ws_Segmentation.Range("CB" & Irow & ":DI" & Irow + 30).ClearContents
            Next
            
            ws_RMcollection.Range("HA6:IO507").Value = ws_RMcollection.Range("DS6:FG507").Value 'copy current data room collections
            'Clear data for current RMcollection tab
            For Irow = 6 To 507 Step 39
                ws_RMcollection.Range("DP" & Irow & ":DR" & Irow + 30).ClearContents 'clear events to Archived data SEG10LY Fx converter
                ws_RMcollection.Range("DT" & Irow & ":FG" & Irow + 30).ClearContents
            Next
         End If
    End If
      
    'clear imported data
    sh_RPO.Range("A5:S400").ClearContents
    sh_RPO.Range("W5:Y400").ClearContents
    sh_SEG10LY.Range("A3:L9999").ClearContents
    sh_GRAMSSR.Range("A2:F1500").ClearContents
    sh_GPO.Range("A2:K800").ClearContents
    sh_GPO.Range("L2:AJ3000").ClearContents
    sh_MAR.Range("A1:C" & sh_MAR.Cells(Rows.Count, 1).End(xlUp).Row + 3).ClearContents
    sh_PRP.Range("A1:AC4000").ClearContents
    sh_OYv2Data.Range("A1:FZ1000").ClearContents
    'sh_OYProj.Range("A2:BK10000").ClearContents
    sh_OYElevate.Range("A2:H" & sh_OYElevate.Cells(Rows.Count, 1).End(xlUp).Row + 1).ClearContents
    sh_OYact_bud.Range("A3:BK" & sh_OYact_bud.Cells(Rows.Count, 1).End(xlUp).Row + 3).ClearContents
   
    '**************************************************** import starts
    For Each wsSource In wbImport.Worksheets
        Select Case wsSource.Name
            Case "OYvs2Extract" 'import OYv2 extract
                sh_OYv2Data.Range("A1:FZ1000").ClearContents
                lastrow = wsSource.Cells(Rows.Count, 1).End(xlUp).Row
                sh_OYv2Data.Range("A1:FZ" & lastrow).Value = wsSource.Range("A1:FZ" & lastrow).Value
            
            Case "Premium_Detail" 'import PRP
                sh_PRP.Range("A1:AC4000").ClearContents
                lastrow = wsSource.Cells(Rows.Count, 1).End(xlUp).Row
                sh_PRP.Range("A1:AC" & lastrow).Value = wsSource.Range("A1:AC" & lastrow).Value

            Case "Pricing Workbench" 'copy RPO
                sh_RPO.Range("A5:S400").ClearContents
                wsSource.Activate
                For iCol = 1 To 50
                    Select Case wsSource.Cells(4, iCol).Value
                        Case "Arrival Date"
                            sh_RPO.Range("B5:B400").Value2 = wsSource.Range(Cells(5, iCol), Cells(400, iCol)).Value2
                        Case "Optimized Daily Retail Rate", "Recommended Daily Rate", "DISABLED"
                            If iCol < 10 Then
                                sh_RPO.Range("C5:C400").Value = wsSource.Range(Cells(5, iCol), Cells(400, iCol)).Value
                            End If
                        Case "RPO Recommended Rate", "Recommended Blended Rate"
                            sh_RPO.Range("D5:D400").Value = wsSource.Range(Cells(5, iCol), Cells(400, iCol)).Value
                        Case "Lowest Selling Rate"
                            sh_RPO.Range("E5:E400").Value = wsSource.Range(Cells(5, iCol), Cells(400, iCol)).Value
                        Case "Revenue Priority at Optimal Rate"
                            sh_RPO.Range("F5:F400").Value = wsSource.Range(Cells(5, iCol), Cells(400, iCol)).Value
                        Case "Rate Responsive Occupancy at Current Rate"
                            sh_RPO.Range("G5:G400").Value = wsSource.Range(Cells(5, iCol), Cells(400, iCol)).Value
                        Case "Competitive Position Rating"
                            sh_RPO.Range("H5:H400").Value = wsSource.Range(Cells(5, iCol), Cells(400, iCol)).Value
                        Case "Rate Responsiveness"
                            sh_RPO.Range("I5:I400").Value = wsSource.Range(Cells(5, iCol), Cells(400, iCol)).Value
                        Case "Average Weighted Comp Rate"
                            sh_RPO.Range("J5:J400").Value = wsSource.Range(Cells(5, iCol), Cells(400, iCol)).Value
                    End Select
                Next iCol
            iCol = Empty

            Case "Indicators"
                sh_RPO.Range("W5:Y400").ClearContents
                wsSource.Activate
                For iCol = 1 To 50
                    Select Case wsSource.Cells(4, iCol).Value
                        Case "rate_resp_occ_at_current_rate_ind"
                            sh_RPO.Range("W5:W400").Value = wsSource.Range(Cells(5, iCol), Cells(400, iCol)).Value
                        Case "comp_retail_rate_rating_ind"
                            sh_RPO.Range("X5:X400").Value = wsSource.Range(Cells(5, iCol), Cells(400, iCol)).Value
                        Case "rate_resp_rating_ind"
                            sh_RPO.Range("Y5:Y400").Value = wsSource.Range(Cells(5, iCol), Cells(400, iCol)).Value
                    End Select
                Next iCol
            iCol = Empty
                sh_RPO.Range("Q5:S400").Formula = "=IF(MID(TEXT(W5,""0000000000""),9,1)=""1"",""G"",IF(MID(TEXT(W5,""0000000000""),10,1)=""1"",""R"",""""))"
                sh_RPO.Range("Q5:S400").Value = sh_RPO.Range("Q5:S400").Value
            
            Case "Seg10_STLY" 'copy SEG10 LAST same time
                sh_SEG10LY.Range("A3:L9999").ClearContents
                If wsSource.Cells(2, 1).Value > vbNullString Then
                    lastrow = wsSource.Cells(Rows.Count, 1).End(xlUp).Row
                    sh_SEG10LY.Range("A3:H" & lastrow + 1).Value = wsSource.Range("A2:H" & lastrow).Value
                    lastrow = Empty
                End If

            Case "OY_Extract_Prev_Year", "OY_Extract_Curr_Year", "OY_Extract_Next_Year" 'copy One Yield Extract
                Call OYProjImport(wbImport, wsSource)

            Case "Transient Booked" 'copy One Yield transient/contract and group OTB
                sh_GRAMSSR.Range("A2:F1500").ClearContents
                
                lastrow = wsSource.Cells(Rows.Count, 1).End(xlUp).Row
                If wsSource.Range("B2").Value = -1 Then wsSource.Range("A2").EntireRow.Delete (xlUp)
                lastrow = wsSource.Cells(Rows.Count, 1).End(xlUp).Row
                
                sh_GRAMSSR.Range("A2:A" & lastrow).Value = wsSource.Range("A2:A" & lastrow).Value
                sh_GRAMSSR.Range("B2:B" & lastrow).Value = wsSource.Range("D2:D" & lastrow).Value
                sh_GRAMSSR.Range("F2:F" & lastrow).Value = wsSource.Range("E2:E" & lastrow).Value
                sh_GRAMSSR.Range("C2:C" & lastrow).Formula = "=iferror(F2/B2,0)"
                sh_GRAMSSR.Range("C2:C" & lastrow).Value = sh_GRAMSSR.Range("C2:C" & lastrow).Value
                
            Case "GPO_Restriction" 'Copy GPO restriction file
                sh_GPO.Range("A2:K800").ClearContents
                lastrow = wsSource.Cells(Rows.Count, 1).End(xlUp).Row
                For iCol = 1 To wsSource.Cells(1, Columns.Count).End(xlToLeft).Column
                    With wsSource
                        Select Case .Cells(1, iCol).Value
                            Case "Date"
                                sh_GPO.Range("A1:A" & lastrow).Value = .Range(.Cells(1, iCol), .Cells(lastrow, iCol)).Value
                            Case "GrpRest"
                                sh_GPO.Range("C1:C" & lastrow).Value = .Range(.Cells(1, iCol), .Cells(lastrow, iCol)).Value
                            Case "SeasEvent"
                                sh_GPO.Range("H1:H" & lastrow).Value = .Range(.Cells(1, iCol), .Cells(lastrow, iCol)).Value
                            Case "GrpRmTh"
                                sh_GPO.Range("D1:D" & lastrow).Value = .Range(.Cells(1, iCol), .Cells(lastrow, iCol)).Value
                        End Select
                    End With
                Next iCol

                sh_GPO.Range("H2:H" & sh_GPO.Cells(Rows.Count, 1).End(xlUp).Row).Replace what:="""", replacement:="", lookat:=xlPart, _
                    SearchOrder:=xlByRows, MatchCase:=False, SearchFormat:=False, ReplaceFormat:=False
                'formula for weekday/weekend for Welcome tab GPO setup
                If sh_GPO.Range("A2").Value <> vbNullString Then 'check to see if we have any GPO data imported
                    sh_GPO.Range("K2:K" & sh_GPO.Cells(Rows.Count, 1).End(xlUp).Row).Formula = "=IF(OR(WEEKDAY(A2)=Setup!$G$19,WEEKDAY(A2)=Setup!$G$20,WEEKDAY(A2)=Setup!$G$21,WEEKDAY(A2)=Setup!$G$22,WEEKDAY(A2)=Setup!$G$23,WEEKDAY(A2)=Setup!$G$24,WEEKDAY(A2)=Setup!$G$25),""WE"",""WD"")"
                    sh_GPO.Range("K2:K" & sh_GPO.Cells(Rows.Count, 1).End(xlUp).Row).Value = sh_GPO.Range("K2:K" & sh_GPO.Cells(Rows.Count, 1).End(xlUp).Row).Value
                    sh_GPO.Range("G2:G" & sh_GPO.Cells(Rows.Count, 1).End(xlUp).Row).Formula = "=YEAR(A2)&"" ""&MONTH(A2)&"" ""&TRIM(H2)" 'apply formula Year & " " & Month " " & Season Event
                    sh_GPO.Range("G2:G" & sh_GPO.Cells(Rows.Count, 1).End(xlUp).Row).Value = sh_GPO.Range("G2:G" & sh_GPO.Cells(Rows.Count, 1).End(xlUp).Row).Value
                End If
                iCol = Empty: lastrow = Empty

            Case "GPO_Season_Current_Year", "GPO_Season_Next_Year", "GPO_Spec_Evnts_Current_Year", "GPO_Spec_Evnts_Next_Year" 'Copy GPO season and Special events
                CountGPOSeason = CountGPOSeason + 1
                If CountGPOSeason = 1 Then sh_GPO.Range("L2:AJ3000").ClearContents
                    lastrow = wsSource.Cells(Rows.Count, 1).End(xlUp).Row
                    If lastrow > 1 Then 'to check if we have any data to import
                        'copy season and special events based on header SSR extract new format, this will allow the tool to import old and new Event/Special Events OY format
                        For iCol = 1 To wsSource.Cells(1, Columns.Count).End(xlToLeft).Column
                            With wsSource
                                Select Case VBA.UCase(wsSource.Cells(1, iCol).Value)
                                    Case "SEASON"
                                        .Range(.Cells(2, iCol), .Cells(lastrow, iCol)).Copy sh_GPO.Range("N" & sh_GPO.Cells(Rows.Count, 14).End(xlUp).Row + 1)
                                    Case "FROM DATE"
                                        .Range(.Cells(2, iCol), .Cells(lastrow, iCol)).Copy sh_GPO.Range("O" & sh_GPO.Cells(Rows.Count, 15).End(xlUp).Row + 1)
                                    Case "TO DATE"
                                        .Range(.Cells(2, iCol), .Cells(lastrow, iCol)).Copy sh_GPO.Range("P" & sh_GPO.Cells(Rows.Count, 16).End(xlUp).Row + 1)
                                    Case "WEEKDAY HOTEL MINIMUM RATE"
                                        .Range(.Cells(2, iCol), .Cells(lastrow, iCol)).Copy sh_GPO.Range("Q" & sh_GPO.Cells(Rows.Count, 17).End(xlUp).Row + 1)
                                    Case "WEEKDAY HOTEL MAXIMUM RATE"
                                        .Range(.Cells(2, iCol), .Cells(lastrow, iCol)).Copy sh_GPO.Range("R" & sh_GPO.Cells(Rows.Count, 18).End(xlUp).Row + 1)
                                    Case "WEEKEND HOTEL MINIMUM RATE"
                                        .Range(.Cells(2, iCol), .Cells(lastrow, iCol)).Copy sh_GPO.Range("T" & sh_GPO.Cells(Rows.Count, 20).End(xlUp).Row + 1)
                                    Case "WEEKEND HOTEL MAXIMUM RATE"
                                        .Range(.Cells(2, iCol), .Cells(lastrow, iCol)).Copy sh_GPO.Range("U" & sh_GPO.Cells(Rows.Count, 21).End(xlUp).Row + 1)
                                End Select
                            End With
                        Next iCol
                        sh_GPO.Range("N2:U" & sh_GPO.Cells(Rows.Count, 14).End(xlUp).Row).Value = sh_GPO.Range("N2:U" & sh_GPO.Cells(Rows.Count, 14).End(xlUp).Row).Value
                    End If
                    lastrow = Empty: iCol = Empty

                If CountGPOSeason >= 4 Then 'when all 4 tab are imported check if we have any values and enter formula
                    If sh_GPO.Range("N2").Value <> vbNullString Then 'spread the season at the month level
                        'Header
                        sh_GPO.Range("W1").Value = 1: sh_GPO.Range("X1").Value = 2: sh_GPO.Range("Y1").Value = 3: sh_GPO.Range("Z1").Value = 4
                        sh_GPO.Range("AA1").Value = 5: sh_GPO.Range("AB1").Value = 6: sh_GPO.Range("AC1").Value = 7: sh_GPO.Range("AD1").Value = 8
                        sh_GPO.Range("AE1").Value = 9: sh_GPO.Range("AF1").Value = 10: sh_GPO.Range("AG1").Value = 11: sh_GPO.Range("AH1").Value = 12
                        sh_GPO.Range("AI1").Value = "WD": sh_GPO.Range("AJ1").Value = "WE"

                        'Spread season with year Month and name
                        sh_GPO.Range("W2:AH" & sh_GPO.Cells(Rows.Count, 14).End(xlUp).Row).Formula = "=IF(AND(MONTH($O2)<=W$1,MONTH($P2)>=W$1),YEAR($O2)&"" ""&W$1&"" ""&TRIM($N2),"""")"
                        sh_GPO.Range("W2:AH" & sh_GPO.Cells(Rows.Count, 14).End(xlUp).Row).Value = sh_GPO.Range("W2:AH" & sh_GPO.Cells(Rows.Count, 14).End(xlUp).Row).Value
                        sh_GPO.Range("AI2:AI" & sh_GPO.Cells(Rows.Count, 14).End(xlUp).Row).Formula = "=Q2"
                        sh_GPO.Range("AJ2:AJ" & sh_GPO.Cells(Rows.Count, 14).End(xlUp).Row).Formula = "=T2"
                        sh_GPO.Range("AI2:AJ" & sh_GPO.Cells(Rows.Count, 14).End(xlUp).Row).Value = sh_GPO.Range("AI2:AJ" & sh_GPO.Cells(Rows.Count, 14).End(xlUp).Row).Value

                        'formula to calculate the minimum floor rate
                        sh_GPO.Range("J2:J" & sh_GPO.Cells(Rows.Count, 1).End(xlUp).Row).Formula = _
                            "=VLOOKUP($G2,OFFSET($W$1:$AJ$" & sh_GPO.Cells(Rows.Count, 14).End(xlUp).Row & ",0,MONTH(A2)-1),IF(K2=""WD"",14,15)-MONTH(A2),FALSE)"
                        sh_GPO.Range("J2:J" & sh_GPO.Cells(Rows.Count, 1).End(xlUp).Row).Value = sh_GPO.Range("J2:J" & sh_GPO.Cells(Rows.Count, 1).End(xlUp).Row).Value
                    End If
                End If
        End Select
    Next
        
    wbImport.Close False
    Set wbImport = Nothing: CountGPOSeason = Empty: arFileName = Empty

'import completed
    '**************************************************************************************************************************
    
    'convert RPO date text to datevalue
    With sh_RPO
        If Not IsNumeric(.Range("B5")) And .Range("B5") <> vbNullString Then
            For Irow = 5 To 400
                MyMonth = VBA.Left(.Cells(Irow, 2), 3)
                If VBA.Len(.Cells(Irow, 2)) = 11 Then
                    MyDay = VBA.Mid(.Cells(Irow, 2), 5, 2)
                Else: MyDay = VBA.Mid(.Cells(Irow, 2), 5, 1): End If
                MyYear = VBA.Right(.Cells(Irow, 2), 4)
                    Select Case MyMonth
                        Case "Jan": MyMonth = 1:  .Cells(Irow, 2).Value = VBA.DateSerial(MyYear, MyMonth, MyDay)
                        Case "Feb": MyMonth = 2:  .Cells(Irow, 2).Value = VBA.DateSerial(MyYear, MyMonth, MyDay)
                        Case "Mar": MyMonth = 3:  .Cells(Irow, 2).Value = VBA.DateSerial(MyYear, MyMonth, MyDay)
                        Case "Apr": MyMonth = 4:  .Cells(Irow, 2).Value = VBA.DateSerial(MyYear, MyMonth, MyDay)
                        Case "May": MyMonth = 5:  .Cells(Irow, 2).Value = VBA.DateSerial(MyYear, MyMonth, MyDay)
                        Case "Jun": MyMonth = 6:  .Cells(Irow, 2).Value = VBA.DateSerial(MyYear, MyMonth, MyDay)
                        Case "Jul": MyMonth = 7:  .Cells(Irow, 2).Value = VBA.DateSerial(MyYear, MyMonth, MyDay)
                        Case "Aug": MyMonth = 8:  .Cells(Irow, 2).Value = VBA.DateSerial(MyYear, MyMonth, MyDay)
                        Case "Sep": MyMonth = 9:  .Cells(Irow, 2).Value = VBA.DateSerial(MyYear, MyMonth, MyDay)
                        Case "Oct": MyMonth = 10: .Cells(Irow, 2).Value = VBA.DateSerial(MyYear, MyMonth, MyDay)
                        Case "Nov": MyMonth = 11: .Cells(Irow, 2).Value = VBA.DateSerial(MyYear, MyMonth, MyDay)
                        Case "Dec": MyMonth = 12: .Cells(Irow, 2).Value = VBA.DateSerial(MyYear, MyMonth, MyDay)
                    End Select
            Next Irow
        End If
        MyMonth = Empty: MyDay = Empty: MyYear = Empty: Irow = Empty
    End With
    
    Call OYProjCalculation
    
    'calculate SEG10 (apply VAT, and convert revenue to constant selling)
    lastrow = sh_SEG10LY.Cells(Rows.Count, 2).End(xlUp).Row
    If lastrow > 1 Then
        sh_SEG10LY.Range("I3:I" & lastrow).Formula = "=IF(OR(F3=""GRP"",F3=""CMP"",F3=""CTC""),""Exclude"",""Include"")" 'segment to include
        sh_SEG10LY.Range("J3:J" & lastrow).Formula = "=C3+364" 'convert LY date to TY calendar
        sh_SEG10LY.Range("K3:K" & lastrow).Formula = "=IFERROR(IF(C3>=Setup!$R$3,Setup!$Q$3,IF(C3<Setup!$R$2,Setup!$Q$1,Setup!$Q$2)),0)" 'apply VAT
        sh_SEG10LY.Range("L3:L" & lastrow).Formula = "=H3/(1+K3)" 'calculate revenue VAT excluded
        sh_SEG10LY.Range("I3:L" & lastrow).Value = sh_SEG10LY.Range("I3:L" & lastrow).Value
    End If
    
    sh_SEG10LY.Range("G1:L" & lastrow).Name = "SEG10_LY"
    'code to refresh the pvt
    sh_SEG10LY.PivotTables("PvtSEG10LY").PivotCache.Refresh
    
    'exclude VAT from GRAM
    lastrow = sh_GRAMSSR.Cells(Rows.Count, 1).End(xlUp).Row
    If lastrow > 1 Then
        sh_GRAMSSR.Range("D2:D" & lastrow).Formula = "=IFERROR(IF(A2>=Setup!$R$3,Setup!$Q$3,IF(A2<Setup!$R$2,Setup!$Q$1,Setup!$Q$2)),0)"
        sh_GRAMSSR.Range("E2:E" & lastrow).Formula = "=C2/(1+D2)" 'calculate ADR without VAT
        sh_GRAMSSR.Range("D2:E" & lastrow).Value = sh_GRAMSSR.Range("D2:E" & lastrow).Value
    End If
    
    'PRP mapping
    If sh_PRP.Range("A6").Value > vbNullString Then
        For Irow = 6 To sh_OYv2Data.Range("B5").Value + 5
            sh_PRP.Range("B" & Irow).Value = "RC_" & Irow - 5
        Next
        lastrow = sh_PRP.Cells(Rows.Count, 1).End(xlUp).Row
        sh_PRP.Range("B" & sh_OYv2Data.Range("B5").Value + 6 & ":B" & lastrow).Formula = "=INDEX($B$6:$L$" & lastrow & ",MATCH($L" & sh_OYv2Data.Range("B5").Value + 6 & ",$L$6:$L$" & sh_OYv2Data.Range("B5").Value + 5 & ",0),MATCH(""Arrival Day"",$B$5:$L$5,0))"
        sh_PRP.Range("B6:B" & lastrow).Value = sh_PRP.Range("B6:B" & lastrow).Value
        sh_PRP.Range("C6:C" & lastrow).Formula = "=A6&B6"
        sh_PRP.Range("C6:C" & lastrow).Value = sh_PRP.Range("C6:C" & lastrow).Value
        sh_PRP.Range("C5:S" & lastrow).Name = "PRP_Data"
    End If
    
    'update SSP_OYproj/act/budget
    lastrow = sh_OYact_bud.Cells(Rows.Count, 1).End(xlUp).Row
    sh_OYact_bud.Visible = xlSheetVisible
    sh_OYact_bud.Range("D2:D" & lastrow).Formula = "=IFERROR(VLOOKUP($A2,OYprojData,2,FALSE),0)" 'copy AU def rm
    sh_OYact_bud.Range("D2:D" & lastrow).Value = sh_OYact_bud.Range("D2:D" & lastrow).Value
    sh_OYact_bud.Range("E2:E" & lastrow).Formula = "=IFERROR(VLOOKUP($A2,OYprojData,3,FALSE),0)" 'copy AU tent rm
    sh_OYact_bud.Range("E2:E" & lastrow).Value = sh_OYact_bud.Range("E2:E" & lastrow).Value
    sh_OYact_bud.Range("F2:F" & lastrow).Formula = "=IFERROR(VLOOKUP($A2,OYprojData,4,FALSE),0)" 'copy AU tobes rm
    sh_OYact_bud.Range("F2:F" & lastrow).Value = sh_OYact_bud.Range("F2:F" & lastrow).Value
    sh_OYact_bud.Range("L2:L" & lastrow).Formula = "=IFERROR(VLOOKUP($A2,OYprojData,5,FALSE),0)" 'copy AU Trn rm
    sh_OYact_bud.Range("L2:L" & lastrow).Value = sh_OYact_bud.Range("L2:L" & lastrow).Value
    sh_OYact_bud.Range("N2:N" & lastrow).Formula = "=IFERROR(VLOOKUP($A2,OYprojData,14,FALSE),0)" 'copy AU group Rebates
    sh_OYact_bud.Range("N2:N" & lastrow).Value = sh_OYact_bud.Range("N2:N" & lastrow).Value
    sh_OYact_bud.Range("O2:O" & lastrow).Formula = "=IFERROR(VLOOKUP($A2,OYprojData,15,FALSE),0)" 'copy AU transient rebates
    sh_OYact_bud.Range("O2:O" & lastrow).Value = sh_OYact_bud.Range("O2:O" & lastrow).Value
    sh_OYact_bud.Range("R2:R" & lastrow).Formula = "=IFERROR(VLOOKUP($A2,OYprojData,6,FALSE),0)" 'copy AU contract RM
    sh_OYact_bud.Range("R2:R" & lastrow).Value = sh_OYact_bud.Range("R2:R" & lastrow).Value
    sh_OYact_bud.Range("T2:T" & lastrow).Formula = "=IFERROR(VLOOKUP($A2,OYprojData,16,FALSE),0)" 'copy AU contract rebates
    sh_OYact_bud.Range("T2:T" & lastrow).Value = sh_OYact_bud.Range("T2:T" & lastrow).Value
    sh_OYact_bud.Range("U2:U" & lastrow).Formula = "=IFERROR(VLOOKUP($A2,OYprojData,9,FALSE),0)" 'copy AU group Def Revenue
    sh_OYact_bud.Range("U2:U" & lastrow).Value = sh_OYact_bud.Range("U2:U" & lastrow).Value
    sh_OYact_bud.Range("V2:V" & lastrow).Formula = "=IFERROR(VLOOKUP($A2,OYprojData,10,FALSE),0)" 'copy AU group tent revenue
    sh_OYact_bud.Range("V2:V" & lastrow).Value = sh_OYact_bud.Range("V2:V" & lastrow).Value
    sh_OYact_bud.Range("W2:W" & lastrow).Formula = "=IFERROR(VLOOKUP($A2,OYprojData,11,FALSE),0)" 'copy AU group tobes revenue
    sh_OYact_bud.Range("W2:W" & lastrow).Value = sh_OYact_bud.Range("W2:W" & lastrow).Value
    sh_OYact_bud.Range("X2:X" & lastrow).Formula = "=IFERROR(VLOOKUP(A2,OYprojData,17,FALSE),0)" 'copy AU Other revenue
    sh_OYact_bud.Range("X2:X" & lastrow).Value = sh_OYact_bud.Range("X2:X" & lastrow).Value
    sh_OYact_bud.Range("Y2:Y" & lastrow).Formula = "=IFERROR(VLOOKUP($A2,OYprojData,12,FALSE),0)" 'copy AU transient Revenue
    sh_OYact_bud.Range("Y2:Y" & lastrow).Value = sh_OYact_bud.Range("Y2:Y" & lastrow).Value
    sh_OYact_bud.Range("Z2:Z" & lastrow).Formula = "=IFERROR(VLOOKUP($A2,OYprojData,13,FALSE),0)" 'copy AU contract revenue
    sh_OYact_bud.Range("Z2:Z" & lastrow).Value = sh_OYact_bud.Range("Z2:Z" & lastrow).Value
    sh_OYact_bud.Range("AA2:AA" & lastrow).Formula = "=IFERROR(VLOOKUP($A2,OYprojData,7,FALSE),0)" 'copy AU OOO
    sh_OYact_bud.Range("AA2:AA" & lastrow).Value = sh_OYact_bud.Range("AA2:AA" & lastrow).Value
    sh_OYact_bud.Range("AK2:AK" & lastrow).Formula = "=IFERROR(VLOOKUP($A2,OYprojData,20,FALSE),0)" 'copy Capacity
    sh_OYact_bud.Range("AK2:AK" & lastrow).Value = sh_OYact_bud.Range("AK2:AK" & lastrow).Value
    sh_OYact_bud.Range("AL2:AL" & lastrow).Formula = "=IFERROR(VLOOKUP($A2,OYprojData,21,FALSE),0)" 'copy Sellout
    sh_OYact_bud.Range("AL2:AL" & lastrow).Value = sh_OYact_bud.Range("AL2:AL" & lastrow).Value
    sh_OYact_bud.Range("AM2:AM" & lastrow).Formula = "=IFERROR(VLOOKUP($A2,OYprojData,8,FALSE),0)" 'copy CompRms
    sh_OYact_bud.Range("AM2:AM" & lastrow).Value = sh_OYact_bud.Range("AM2:AM" & lastrow).Value
    sh_OYact_bud.Range("BK2:BK" & lastrow).Formula = "=IFERROR(INDEX($BM$1:$BO$7,MATCH(WEEKDAY($A2),$BM$1:$BM$7,0),3),""WD"")" 'apply weekday/weekend references
    sh_OYact_bud.Range("BK2:BK" & lastrow).Value = sh_OYact_bud.Range("BK2:BK" & lastrow).Value
    
    
    'apply OYv2 elevate group override
    If Not sh_OYElevate.Range("A2").Value = vbNullString Then
        For Irow = 2 To sh_OYact_bud.Cells(Rows.Count, 1).End(xlUp).Row
            If Not sh_OYElevate.Range("B" & Irow).Value = vbNullString Then
                Set rTargetMatch = sh_OYact_bud.Columns(1).Find(what:=DateValue(sh_OYElevate.Cells(Irow, 1)), LookIn:=xlFormulas, lookat:=xlWhole) 'find the dates in the SSR
                sh_OYact_bud.Range("D" & rTargetMatch.Row & ":F" & rTargetMatch.Row).Value = sh_OYElevate.Range("B" & Irow & ":D" & Irow).Value
                sh_OYact_bud.Range("U" & rTargetMatch.Row & ":W" & rTargetMatch.Row).Value = sh_OYElevate.Range("E" & Irow & ":G" & Irow).Value
            End If
        Next
    End If
    
    sh_OYact_bud.Range("A1:BK" & lastrow).Name = "SSP_OYProj"
    
    sh_OYact_bud.PivotTables("Pvt_Proj_LockProj").PivotCache.Refresh
    sh_OYact_bud.PivotTables("Pvt_Proj_ActBud").PivotCache.Refresh

    'reset the group year and month pivottable 1
    sh_OYact_bud.Range("BQ5").Group Start:=True, End:=True, Periods:=Array(False, False, False, False, True, False, True)
    'reset the group year and month pivotable2
    sh_OYact_bud.Range("CQ5").Group Start:=True, End:=True, Periods:=Array(False, False, False, False, True, False, True)
    
    sh_OYact_bud.Range("BQ4").Value = "Years"
    sh_OYact_bud.Range("CQ4").Value = "Years"
    
    sh_OYact_bud.Visible = xlSheetVeryHidden
End Sub
Sub OYProjImport(wbImport, wsSource) 'this for the single extract to import the ONE YIELD EXTRACT
Dim Irow As Long, lastrow As Long, iCol_a As Byte, iCol_b As Byte, SourceCol As Byte, rSource As Range
Dim DestLastrow As Long, rTargetMatch As Range, i As Long, arOld(26) As String, arCol As Variant, sOR As String

    Const kColCount = 104

    wsSource.Activate
        
  If sh_OYProj.Range("A2") <> "" Then
      lastrow = wsSource.Cells(Rows.Count, 1).End(xlUp).Row
      Set rSource = wsSource.Range(Cells(1, 1), Cells(lastrow, 1))
      
  For Irow = 2 To lastrow 'loop through the dates
      Set rTargetMatch = sh_OYProj.Columns(1).Find(what:=DateValue(wsSource.Cells(Irow, 1)), LookIn:=xlFormulas, lookat:=xlWhole) 'find the dates in the SSR
          'if the date is not find, then add the row values
          If rTargetMatch Is Nothing Then
              DestLastrow = sh_OYProj.Cells(Rows.Count, 1).End(xlUp).Row
              sh_OYProj.Cells(DestLastrow + 1, 1).Value = wsSource.Cells(Irow, 1).Value 'dates
              sh_OYProj.Cells(DestLastrow + 1, 2).Value = wsSource.Cells(Irow, 4).Value 'group def
              sh_OYProj.Cells(DestLastrow + 1, 3).Value = wsSource.Cells(Irow, 5).Value 'group tent
              sh_OYProj.Cells(DestLastrow + 1, 4).Value = wsSource.Cells(Irow, 6).Value 'group tobes
              sh_OYProj.Cells(DestLastrow + 1, 5).Value = wsSource.Cells(Irow, 12).Value 'transient rms
              sh_OYProj.Cells(DestLastrow + 1, 6).Value = wsSource.Cells(Irow, 18).Value 'contract rms
              sh_OYProj.Cells(DestLastrow + 1, 7).Value = wsSource.Cells(Irow, 28).Value 'OOO rms
              sh_OYProj.Cells(DestLastrow + 1, 8).Value = wsSource.Cells(Irow, 43).Value 'comp rooms
              sh_OYProj.Cells(DestLastrow + 1, 9).Value = wsSource.Cells(Irow, 21).Value 'group def rev
              sh_OYProj.Cells(DestLastrow + 1, 10).Value = wsSource.Cells(Irow, 22).Value 'group tent rev
              sh_OYProj.Cells(DestLastrow + 1, 11).Value = wsSource.Cells(Irow, 23).Value 'group tobe rev
              sh_OYProj.Cells(DestLastrow + 1, 12).Value = wsSource.Cells(Irow, 26).Value 'transient rev
              sh_OYProj.Cells(DestLastrow + 1, 13).Value = wsSource.Cells(Irow, 27).Value 'contract rev
              sh_OYProj.Cells(DestLastrow + 1, 14).Value = wsSource.Cells(Irow, 14).Value 'group rebate
              sh_OYProj.Cells(DestLastrow + 1, 15).Value = wsSource.Cells(Irow, 15).Value 'transient rebates
              sh_OYProj.Cells(DestLastrow + 1, 16).Value = wsSource.Cells(Irow, 20).Value 'contract rebates
              sh_OYProj.Cells(DestLastrow + 1, 17).Value = wsSource.Cells(Irow, 25).Value 'other revenue
              sh_OYProj.Cells(DestLastrow + 1, 18).Value = wsSource.Cells(Irow, 29).Value 'group notes
              sh_OYProj.Cells(DestLastrow + 1, 19).Value = wsSource.Cells(Irow, 30).Value 'transient notes
              sh_OYProj.Cells(DestLastrow + 1, 20).Value = wsSource.Cells(Irow, 41).Value 'capacity
              sh_OYProj.Cells(DestLastrow + 1, 21).Value = wsSource.Cells(Irow, 42).Value 'sellout
              sh_OYProj.Cells(DestLastrow + 1, 22).Value = wsSource.Cells(Irow, 102).Value 'time stamp
              sh_OYProj.Cells(DestLastrow + 1, 23).Value = wsSource.Cells(Irow, 103).Value 'MARSHA code
              sh_OYProj.Cells(DestLastrow + 1, 24).Value = wsSource.Cells(Irow, 104).Value 'hotel Name
              sh_OYProj.Cells(DestLastrow + 1, 37).Value = wsSource.Cells(Irow, 92).Value 'Local Currency
              sh_OYProj.Cells(DestLastrow + 1, 38).Value = wsSource.Cells(Irow, 93).Value 'Local Act FX
              sh_OYProj.Cells(DestLastrow + 1, 39).Value = wsSource.Cells(Irow, 94).Value 'Local Frcst FX
              sh_OYProj.Cells(DestLastrow + 1, 40).Value = wsSource.Cells(Irow, 95).Value 'Local lock FX
              sh_OYProj.Cells(DestLastrow + 1, 41).Value = wsSource.Cells(Irow, 96).Value 'local budget lock fx
              sh_OYProj.Cells(DestLastrow + 1, 42).Value = wsSource.Cells(Irow, 97).Value 'Selling Currency
              sh_OYProj.Cells(DestLastrow + 1, 43).Value = wsSource.Cells(Irow, 98).Value 'Selling Act Fx
              sh_OYProj.Cells(DestLastrow + 1, 44).Value = wsSource.Cells(Irow, 99).Value 'Selling Frcst FX
              sh_OYProj.Cells(DestLastrow + 1, 45).Value = wsSource.Cells(Irow, 100).Value 'selling lock fx
              sh_OYProj.Cells(DestLastrow + 1, 46).Value = wsSource.Cells(Irow, 101).Value 'selling budget lock fx
                          
          ElseIf Not rTargetMatch Is Nothing Then
                'preserve data is override by user
                If VBA.Mid(rTargetMatch.Offset(0, 26).Value, 1, 1) = "," Then rTargetMatch.Offset(0, 26).Value = VBA.Mid(rTargetMatch.Offset(0, 26).Value, 2)
                    arCol = Split(rTargetMatch.Offset(0, 26).Value, ",")
                    sOR = ""
                    For i = 0 To UBound(arCol) - 1
                        If arCol(i) <= kColCount Then
                            arOld(arCol(i)) = rTargetMatch.Offset(0, arCol(i) - 1).Value
                            sOR = sOR & VBA.Format(arCol(i), "000") & ","
                        End If
                    Next i
                    
                    sh_OYProj.Cells(rTargetMatch.Row, 1).Value = wsSource.Cells(Irow, 1).Value 'dates
                    sh_OYProj.Cells(rTargetMatch.Row, 2).Value = wsSource.Cells(Irow, 4).Value 'group def
                    sh_OYProj.Cells(rTargetMatch.Row, 3).Value = wsSource.Cells(Irow, 5).Value 'group tent
                    sh_OYProj.Cells(rTargetMatch.Row, 4).Value = wsSource.Cells(Irow, 6).Value 'group tobes
                    sh_OYProj.Cells(rTargetMatch.Row, 5).Value = wsSource.Cells(Irow, 12).Value 'transient rms
                    sh_OYProj.Cells(rTargetMatch.Row, 6).Value = wsSource.Cells(Irow, 18).Value 'contract rms
                    sh_OYProj.Cells(rTargetMatch.Row, 7).Value = wsSource.Cells(Irow, 28).Value 'OOO rms
                    sh_OYProj.Cells(rTargetMatch.Row, 8).Value = wsSource.Cells(Irow, 43).Value 'comp rooms
                    sh_OYProj.Cells(rTargetMatch.Row, 9).Value = wsSource.Cells(Irow, 21).Value 'group def rev
                    sh_OYProj.Cells(rTargetMatch.Row, 10).Value = wsSource.Cells(Irow, 22).Value 'group tent rev
                    sh_OYProj.Cells(rTargetMatch.Row, 11).Value = wsSource.Cells(Irow, 23).Value 'group tobe rev
                    sh_OYProj.Cells(rTargetMatch.Row, 12).Value = wsSource.Cells(Irow, 26).Value 'transient rev
                    sh_OYProj.Cells(rTargetMatch.Row, 13).Value = wsSource.Cells(Irow, 27).Value 'contract rev
                    sh_OYProj.Cells(rTargetMatch.Row, 14).Value = wsSource.Cells(Irow, 14).Value 'group rebate
                    sh_OYProj.Cells(rTargetMatch.Row, 15).Value = wsSource.Cells(Irow, 15).Value 'transient rebates
                    sh_OYProj.Cells(rTargetMatch.Row, 16).Value = wsSource.Cells(Irow, 20).Value 'contract rebates
                    sh_OYProj.Cells(rTargetMatch.Row, 17).Value = wsSource.Cells(Irow, 25).Value 'other revenue
                    sh_OYProj.Cells(rTargetMatch.Row, 18).Value = wsSource.Cells(Irow, 29).Value 'group notes
                    sh_OYProj.Cells(rTargetMatch.Row, 19).Value = wsSource.Cells(Irow, 30).Value 'transient notes
                    sh_OYProj.Cells(rTargetMatch.Row, 20).Value = wsSource.Cells(Irow, 41).Value 'capacity
                    sh_OYProj.Cells(rTargetMatch.Row, 21).Value = wsSource.Cells(Irow, 42).Value 'sellout
                    sh_OYProj.Cells(rTargetMatch.Row, 22).Value = wsSource.Cells(Irow, 102).Value 'time stamp
                    sh_OYProj.Cells(rTargetMatch.Row, 23).Value = wsSource.Cells(Irow, 103).Value 'MARSHA code
                    sh_OYProj.Cells(rTargetMatch.Row, 24).Value = wsSource.Cells(Irow, 104).Value 'hotel Name
                    sh_OYProj.Cells(rTargetMatch.Row, 37).Value = wsSource.Cells(Irow, 92).Value 'Local Currency
                    sh_OYProj.Cells(rTargetMatch.Row, 38).Value = wsSource.Cells(Irow, 93).Value 'Local Act FX
                    sh_OYProj.Cells(rTargetMatch.Row, 39).Value = wsSource.Cells(Irow, 94).Value 'Local Frcst FX
                    sh_OYProj.Cells(rTargetMatch.Row, 40).Value = wsSource.Cells(Irow, 95).Value 'Local Lock FX
                    sh_OYProj.Cells(rTargetMatch.Row, 41).Value = wsSource.Cells(Irow, 96).Value 'local lock budget fx
                    sh_OYProj.Cells(rTargetMatch.Row, 42).Value = wsSource.Cells(Irow, 97).Value 'Selling Currency
                    sh_OYProj.Cells(rTargetMatch.Row, 43).Value = wsSource.Cells(Irow, 98).Value 'Selling Act Fx
                    sh_OYProj.Cells(rTargetMatch.Row, 44).Value = wsSource.Cells(Irow, 99).Value 'Selling Frcst FX
                    sh_OYProj.Cells(rTargetMatch.Row, 45).Value = wsSource.Cells(Irow, 100).Value 'selling lock fx
                    sh_OYProj.Cells(rTargetMatch.Row, 46).Value = wsSource.Cells(Irow, 101).Value 'selling budget lock fx********
                   
                    'reset the value captured
                    For i = 0 To UBound(arCol) - 1
                        If arCol(i) <= kColCount Then rTargetMatch.Offset(0, arCol(i) - 1).Value = arOld(arCol(i))
                    Next i
                    rTargetMatch.Offset(0, 26).Value = sOR
                End If
        Next Irow
    
      Else 'this is to import everything is no data is in the One Yield Extract SSR tab
      
          iCol_a = 1 'destination SSR One Yield Extract Tab to capture the first few columns
          iCol_b = 37 'destination SSR One Yield Extract Tab to capture Fx
          lastrow = wsSource.Cells(Rows.Count, 1).End(xlUp).Row
          For SourceCol = 1 To 104 'go through each column from the Single Extract One Yield data
              Select Case SourceCol
                  Case 1, 4, 5, 6, 12, 18
                      Set rSource = wsSource.Range(Cells(1, SourceCol), Cells(lastrow, SourceCol))
                      sh_OYProj.Range(sh_OYProj.Cells(2, iCol_a), sh_OYProj.Cells(lastrow + 1, iCol_a)).Value = rSource.Offset(1).Resize(rSource.Rows.Count, SourceCol).Value
                      iCol_a = iCol_a + 1
                  Case 21, 22, 23 'group def, tent and tobes revenue
                      Set rSource = wsSource.Range(Cells(1, SourceCol), Cells(lastrow, SourceCol))
                      sh_OYProj.Range(sh_OYProj.Cells(2, SourceCol - 12), sh_OYProj.Cells(lastrow + 1, SourceCol - 12)).Value = rSource.Offset(1).Resize(rSource.Rows.Count, SourceCol).Value
                  Case 26, 27
                      Set rSource = wsSource.Range(Cells(1, SourceCol), Cells(lastrow, SourceCol))
                      sh_OYProj.Range(sh_OYProj.Cells(2, SourceCol - 14), sh_OYProj.Cells(lastrow + 1, SourceCol - 14)).Value = rSource.Offset(1).Resize(rSource.Rows.Count, SourceCol).Value
                  Case 14, 15 'monthly group & transient rebates
                      Set rSource = wsSource.Range(Cells(1, SourceCol), Cells(lastrow, SourceCol))
                      sh_OYProj.Range(sh_OYProj.Cells(2, SourceCol), sh_OYProj.Cells(lastrow + 1, SourceCol)).Value = rSource.Offset(1).Resize(rSource.Rows.Count, SourceCol).Value
                  Case 20 'monthly contract rebates
                      Set rSource = wsSource.Range(Cells(1, SourceCol), Cells(lastrow, SourceCol))
                      sh_OYProj.Range(sh_OYProj.Cells(2, SourceCol - 4), sh_OYProj.Cells(lastrow + 1, SourceCol - 4)).Value = rSource.Offset(1).Resize(rSource.Rows.Count, SourceCol).Value
                  Case 25 'monthly other revenue
                      Set rSource = wsSource.Range(Cells(1, SourceCol), Cells(lastrow, SourceCol))
                      sh_OYProj.Range(sh_OYProj.Cells(2, SourceCol - 8), sh_OYProj.Cells(lastrow + 1, SourceCol - 8)).Value = rSource.Offset(1).Resize(rSource.Rows.Count, SourceCol).Value
                  Case 29, 30 'group and transient notes
                      Set rSource = wsSource.Range(Cells(1, SourceCol), Cells(lastrow, SourceCol))
                      sh_OYProj.Range(sh_OYProj.Cells(2, SourceCol - 11), sh_OYProj.Cells(lastrow + 1, SourceCol - 11)).Value = rSource.Offset(1).Resize(rSource.Rows.Count, SourceCol).Value
                  Case 28, 41, 42 'OOO and capacity and sell out
                      Set rSource = wsSource.Range(Cells(1, SourceCol), Cells(lastrow, SourceCol))
                      sh_OYProj.Range(sh_OYProj.Cells(2, SourceCol - 21), sh_OYProj.Cells(lastrow + 1, SourceCol - 21)).Value = rSource.Offset(1).Resize(rSource.Rows.Count, SourceCol).Value
                  Case 43 'comp rooms
                      Set rSource = wsSource.Range(Cells(1, SourceCol), Cells(lastrow, SourceCol))
                      sh_OYProj.Range(sh_OYProj.Cells(2, SourceCol - 35), sh_OYProj.Cells(lastrow + 1, SourceCol - 35)).Value = rSource.Offset(1).Resize(rSource.Rows.Count, SourceCol).Value
                  Case 102, 103, 104 'timestamp, MARSHA Code, Hotel Name
                      Set rSource = wsSource.Range(Cells(1, SourceCol), Cells(lastrow, SourceCol))
                      sh_OYProj.Range(sh_OYProj.Cells(2, SourceCol - 80), sh_OYProj.Cells(lastrow + 1, SourceCol - 80)).Value = rSource.Offset(1).Resize(rSource.Rows.Count, SourceCol).Value
                  Case 92, 93, 94, 95, 96, 97, 98, 99, 100, 101 'Fx actual, forecast, selling
                      Set rSource = wsSource.Range(Cells(1, SourceCol), Cells(lastrow, SourceCol))
                      sh_OYProj.Range(sh_OYProj.Cells(2, iCol_b), sh_OYProj.Cells(lastrow + 1, iCol_b)).Value = rSource.Offset(1).Resize(rSource.Rows.Count, SourceCol).Value
                      iCol_b = iCol_b + 1
              End Select
          Next SourceCol
      End If
      
    'copy data for the sales strategy packet (EPM Actual, PRJ4S, Budget)
    If sh_OYProj.Range("A2") <> "" Then
        lastrow = wsSource.Cells(Rows.Count, 1).End(xlUp).Row
        DestLastrow = sh_OYact_bud.Cells(Rows.Count, 1).End(xlUp).Row + 1
        
        'developer note: kept the code for each individual columns for reference incase the extract changes
        sh_OYact_bud.Range(sh_OYact_bud.Cells(DestLastrow, 1), sh_OYact_bud.Cells(DestLastrow + lastrow - 2, 3)).Value = wsSource.Range(wsSource.Cells(2, 1), wsSource.Cells(lastrow, 3)).Value 'copy inventory dates to EPM_GRP_RMS_WE
'        sh_OYact_bud.Range(sh_OYact_bud.Cells(DestLastrow, 2), sh_OYact_bud.Cells(DestLastrow + lastrow-2, 2)).Value = wsSource.Range(wsSource.Cells(2, 2), wsSource.Cells(lastrow, 2)).Value 'copy EPM_GRP_RMS_WD
'        sh_OYact_bud.Range(sh_OYact_bud.Cells(DestLastrow, 3), sh_OYact_bud.Cells(DestLastrow + lastrow-2, 3)).Value = wsSource.Range(wsSource.Cells(2, 3), wsSource.Cells(lastrow, 3)).Value 'copy EPM_GRP_RMS_WE
        sh_OYact_bud.Range(sh_OYact_bud.Cells(DestLastrow, 7), sh_OYact_bud.Cells(DestLastrow + lastrow - 2, 11)).Value = wsSource.Range(wsSource.Cells(2, 7), wsSource.Cells(lastrow, 11)).Value 'copy PRJ4S_GRP_RMS_DEF to EPM_TRN_RMS_WE
'        sh_OYact_bud.Range(sh_OYact_bud.Cells(DestLastrow, 8), sh_OYact_bud.Cells(DestLastrow + lastrow-2, 8)).Value = wsSource.Range(wsSource.Cells(2, 8), wsSource.Cells(lastrow, 8)).Value 'copy PRJ4S_GRP_RMS_TNT
'        sh_OYact_bud.Range(sh_OYact_bud.Cells(DestLastrow, 9), sh_OYact_bud.Cells(DestLastrow + lastrow-2, 9)).Value = wsSource.Range(wsSource.Cells(2, 9), wsSource.Cells(lastrow, 9)).Value 'copy PRJ4S_GRP_RMS_TOBE
'        sh_OYact_bud.Range(sh_OYact_bud.Cells(DestLastrow, 10), sh_OYact_bud.Cells(DestLastrow + lastrow-2, 10)).Value = wsSource.Range(wsSource.Cells(2, 10), wsSource.Cells(lastrow, 10)).Value 'copy EPM_TRN_RMS_WD
'        sh_OYact_bud.Range(sh_OYact_bud.Cells(DestLastrow, 11), sh_OYact_bud.Cells(DestLastrow + lastrow-2, 11)).Value = wsSource.Range(wsSource.Cells(2, 11), wsSource.Cells(lastrow, 11)).Value 'copy EPM_TRN_RMS_WE
        sh_OYact_bud.Range(sh_OYact_bud.Cells(DestLastrow, 13), sh_OYact_bud.Cells(DestLastrow + lastrow - 2, 13)).Value = wsSource.Range(wsSource.Cells(2, 13), wsSource.Cells(lastrow, 13)).Value 'copy PRJ4S_TRN_RMS
        sh_OYact_bud.Range(sh_OYact_bud.Cells(DestLastrow, 16), sh_OYact_bud.Cells(DestLastrow + lastrow - 2, 17)).Value = wsSource.Range(wsSource.Cells(2, 16), wsSource.Cells(lastrow, 17)).Value 'copy EPM_CNT_RMS_WD to EPM_CNT_RMS_WE
'        sh_OYact_bud.Range(sh_OYact_bud.Cells(DestLastrow, 17), sh_OYact_bud.Cells(DestLastrow + lastrow-2, 17)).Value = wsSource.Range(wsSource.Cells(2, 17), wsSource.Cells(lastrow, 17)).Value 'copy EPM_CNT_RMS_WE
        sh_OYact_bud.Range(sh_OYact_bud.Cells(DestLastrow, 19), sh_OYact_bud.Cells(DestLastrow + lastrow - 2, 19)).Value = wsSource.Range(wsSource.Cells(2, 19), wsSource.Cells(lastrow, 19)).Value 'copy PRJ4S_CNT_RMS
        sh_OYact_bud.Range(sh_OYact_bud.Cells(DestLastrow, 28), sh_OYact_bud.Cells(DestLastrow + lastrow - 2, 36)).Value = wsSource.Range(wsSource.Cells(2, 32), wsSource.Cells(lastrow, 40)).Value 'copy PRJ4S_GRP_REV_DEF to PRJ4S_OTHER_REV
'        sh_OYact_bud.Range(sh_OYact_bud.Cells(DestLastrow, 29), sh_OYact_bud.Cells(DestLastrow + lastrow-2, 29)).Value = wsSource.Range(wsSource.Cells(2, 33), wsSource.Cells(lastrow, 33)).Value 'copy PRJ4S_GRP_REV_TNT
'        sh_OYact_bud.Range(sh_OYact_bud.Cells(DestLastrow, 30), sh_OYact_bud.Cells(DestLastrow + lastrow-2, 30)).Value = wsSource.Range(wsSource.Cells(2, 34), wsSource.Cells(lastrow, 34)).Value 'copy PRJ4S_GRP_REV_TOBE
'        sh_OYact_bud.Range(sh_OYact_bud.Cells(DestLastrow, 31), sh_OYact_bud.Cells(DestLastrow + lastrow-2, 31)).Value = wsSource.Range(wsSource.Cells(2, 35), wsSource.Cells(lastrow, 35)).Value 'copy PRJ4S_GRP_REBATES
'        sh_OYact_bud.Range(sh_OYact_bud.Cells(DestLastrow, 32), sh_OYact_bud.Cells(DestLastrow + lastrow-2, 32)).Value = wsSource.Range(wsSource.Cells(2, 36), wsSource.Cells(lastrow, 36)).Value 'copy PRJ4S_TRN_REV
'        sh_OYact_bud.Range(sh_OYact_bud.Cells(DestLastrow, 33), sh_OYact_bud.Cells(DestLastrow + lastrow-2, 33)).Value = wsSource.Range(wsSource.Cells(2, 37), wsSource.Cells(lastrow, 37)).Value 'copy PRJ4S_TRN_REBATES
'        sh_OYact_bud.Range(sh_OYact_bud.Cells(DestLastrow, 34), sh_OYact_bud.Cells(DestLastrow + lastrow-2, 34)).Value = wsSource.Range(wsSource.Cells(2, 38), wsSource.Cells(lastrow, 38)).Value 'copy PRJ4S_CNT_REV
'        sh_OYact_bud.Range(sh_OYact_bud.Cells(DestLastrow, 35), sh_OYact_bud.Cells(DestLastrow + lastrow-2, 35)).Value = wsSource.Range(wsSource.Cells(2, 39), wsSource.Cells(lastrow, 39)).Value 'copy PRJ4S_CNT_REBATES
'        sh_OYact_bud.Range(sh_OYact_bud.Cells(DestLastrow, 36), sh_OYact_bud.Cells(DestLastrow + lastrow-2, 36)).Value = wsSource.Range(wsSource.Cells(2, 40), wsSource.Cells(lastrow, 40)).Value 'copy PRJ4S_OTHER_REV
        sh_OYact_bud.Range(sh_OYact_bud.Cells(DestLastrow, 40), sh_OYact_bud.Cells(DestLastrow + lastrow - 2, 62)).Value = wsSource.Range(wsSource.Cells(2, 44), wsSource.Cells(lastrow, 66)).Value 'copy EPM_COMP_RMS to BDJ_CNT_REBATE
'        sh_OYact_bud.Range(sh_OYact_bud.Cells(DestLastrow, 41), sh_OYact_bud.Cells(DestLastrow + lastrow-2, 41)).Value = wsSource.Range(wsSource.Cells(2, 45), wsSource.Cells(lastrow, 45)).Value 'copy EPM_GRP_REV_WD
'        sh_OYact_bud.Range(sh_OYact_bud.Cells(DestLastrow, 42), sh_OYact_bud.Cells(DestLastrow + lastrow-2, 42)).Value = wsSource.Range(wsSource.Cells(2, 46), wsSource.Cells(lastrow, 46)).Value 'copy EPM_GRP_REV_WE
'        sh_OYact_bud.Range(sh_OYact_bud.Cells(DestLastrow, 43), sh_OYact_bud.Cells(DestLastrow + lastrow-2, 43)).Value = wsSource.Range(wsSource.Cells(2, 47), wsSource.Cells(lastrow, 47)).Value 'copy EPM_CNT_REV_WD
'        sh_OYact_bud.Range(sh_OYact_bud.Cells(DestLastrow, 44), sh_OYact_bud.Cells(DestLastrow + lastrow-2, 44)).Value = wsSource.Range(wsSource.Cells(2, 48), wsSource.Cells(lastrow, 48)).Value 'copy EPM_CNT_REV_WE
'        sh_OYact_bud.Range(sh_OYact_bud.Cells(DestLastrow, 45), sh_OYact_bud.Cells(DestLastrow + lastrow-2, 45)).Value = wsSource.Range(wsSource.Cells(2, 49), wsSource.Cells(lastrow, 49)).Value 'copy EPM_TRN_REV_WD
'        sh_OYact_bud.Range(sh_OYact_bud.Cells(DestLastrow, 46), sh_OYact_bud.Cells(DestLastrow + lastrow-2, 46)).Value = wsSource.Range(wsSource.Cells(2, 50), wsSource.Cells(lastrow, 50)).Value 'copy EPM_TRN_REV_WE
'        sh_OYact_bud.Range(sh_OYact_bud.Cells(DestLastrow, 47), sh_OYact_bud.Cells(DestLastrow + lastrow-2, 47)).Value = wsSource.Range(wsSource.Cells(2, 51), wsSource.Cells(lastrow, 51)).Value 'copy BDJ_GRP_RMS_WD
'        sh_OYact_bud.Range(sh_OYact_bud.Cells(DestLastrow, 48), sh_OYact_bud.Cells(DestLastrow + lastrow-2, 48)).Value = wsSource.Range(wsSource.Cells(2, 52), wsSource.Cells(lastrow, 52)).Value 'copy BDJ_GRP_RMS_WE
'        sh_OYact_bud.Range(sh_OYact_bud.Cells(DestLastrow, 49), sh_OYact_bud.Cells(DestLastrow + lastrow-2, 49)).Value = wsSource.Range(wsSource.Cells(2, 53), wsSource.Cells(lastrow, 53)).Value 'copy BDJ_GRP_REV_WD
'        sh_OYact_bud.Range(sh_OYact_bud.Cells(DestLastrow, 50), sh_OYact_bud.Cells(DestLastrow + lastrow-2, 50)).Value = wsSource.Range(wsSource.Cells(2, 54), wsSource.Cells(lastrow, 54)).Value 'copy BDJ_GRP_REV_WE
'        sh_OYact_bud.Range(sh_OYact_bud.Cells(DestLastrow, 51), sh_OYact_bud.Cells(DestLastrow + lastrow-2, 51)).Value = wsSource.Range(wsSource.Cells(2, 55), wsSource.Cells(lastrow, 55)).Value 'copy BDJ_TRN_RMS_WD
'        sh_OYact_bud.Range(sh_OYact_bud.Cells(DestLastrow, 52), sh_OYact_bud.Cells(DestLastrow + lastrow-2, 52)).Value = wsSource.Range(wsSource.Cells(2, 56), wsSource.Cells(lastrow, 56)).Value 'copy BDJ_TRN_RMS_WE
'        sh_OYact_bud.Range(sh_OYact_bud.Cells(DestLastrow, 53), sh_OYact_bud.Cells(DestLastrow + lastrow-2, 53)).Value = wsSource.Range(wsSource.Cells(2, 57), wsSource.Cells(lastrow, 57)).Value  'copy BDJ_TRN_REV_WD
'        sh_OYact_bud.Range(sh_OYact_bud.Cells(DestLastrow, 54), sh_OYact_bud.Cells(DestLastrow + lastrow-2, 54)).Value = wsSource.Range(wsSource.Cells(2, 58), wsSource.Cells(lastrow, 58)).Value 'copy BDJ_TRN_REV_WE
'        sh_OYact_bud.Range(sh_OYact_bud.Cells(DestLastrow, 55), sh_OYact_bud.Cells(DestLastrow + lastrow-2, 55)).Value = wsSource.Range(wsSource.Cells(2, 59), wsSource.Cells(lastrow, 59)).Value 'copy BDJ_CNT_RMS_WD
'        sh_OYact_bud.Range(sh_OYact_bud.Cells(DestLastrow, 56), sh_OYact_bud.Cells(DestLastrow + lastrow-2, 56)).Value = wsSource.Range(wsSource.Cells(2, 60), wsSource.Cells(lastrow, 60)).Value 'copy BDJ_CNT_RMS_WE
'        sh_OYact_bud.Range(sh_OYact_bud.Cells(DestLastrow, 57), sh_OYact_bud.Cells(DestLastrow + lastrow-2, 57)).Value = wsSource.Range(wsSource.Cells(2, 61), wsSource.Cells(lastrow, 61)).Value 'copy BDJ_CNT_REV_WD
'        sh_OYact_bud.Range(sh_OYact_bud.Cells(DestLastrow, 58), sh_OYact_bud.Cells(DestLastrow + lastrow-2, 58)).Value = wsSource.Range(wsSource.Cells(2, 62), wsSource.Cells(lastrow, 62)).Value 'copy BDJ_CNT_REV_WE
'        sh_OYact_bud.Range(sh_OYact_bud.Cells(DestLastrow, 59), sh_OYact_bud.Cells(DestLastrow + lastrow-2, 59)).Value = wsSource.Range(wsSource.Cells(2, 63), wsSource.Cells(lastrow, 63)).Value 'copy BDJ_OTR_REV
'        sh_OYact_bud.Range(sh_OYact_bud.Cells(DestLastrow, 60), sh_OYact_bud.Cells(DestLastrow + lastrow-2, 60)).Value = wsSource.Range(wsSource.Cells(2, 64), wsSource.Cells(lastrow, 64)).Value 'copy BDJ_GRP_REBATE
'        sh_OYact_bud.Range(sh_OYact_bud.Cells(DestLastrow, 61), sh_OYact_bud.Cells(DestLastrow + lastrow-2, 61)).Value = wsSource.Range(wsSource.Cells(2, 65), wsSource.Cells(lastrow, 65)).Value 'copy BDJ_TRN_REBATE
'        sh_OYact_bud.Range(sh_OYact_bud.Cells(DestLastrow, 62), sh_OYact_bud.Cells(DestLastrow + lastrow-2, 62)).Value = wsSource.Range(wsSource.Cells(2, 66), wsSource.Cells(lastrow, 66)).Value 'copy BDJ_CNT_REBATE
    End If
    
    'project elevate (Group Override)
    If Not wsSource.Range("DB1").Value = vbNullString Then
        lastrow = sh_OYElevate.Cells(Rows.Count, 1).End(xlUp).Row + 1 'recycle lastrow for the start row to copy the data
        
        If wsSource.Range("DA1").Value = "VERSION_NUM" Then
            wsSource.Range("A2:A" & wsSource.Cells(Rows.Count, 1).End(xlUp).Row).Copy sh_OYElevate.Range("A" & lastrow) 'copy date
            wsSource.Range("DB2:DB" & wsSource.Cells(Rows.Count, 1).End(xlUp).Row).Copy sh_OYElevate.Range("B" & lastrow) 'copy grp override rms
            wsSource.Range("DC2:DC" & wsSource.Cells(Rows.Count, 1).End(xlUp).Row).Copy sh_OYElevate.Range("E" & lastrow) 'copy grp override rev
            sh_OYElevate.Range("C" & lastrow & ":D" & sh_OYElevate.Cells(Rows.Count, 1).End(xlUp).Row).Value = 0 'tent and tobes = 0
            sh_OYElevate.Range("F" & lastrow & ":G" & sh_OYElevate.Cells(Rows.Count, 1).End(xlUp).Row).Value = 0 'tent and tobes = 0
        ElseIf wsSource.Range("DC1").Value = "VERSION_NUM" Then
            wsSource.Range("A2:A" & wsSource.Cells(Rows.Count, 1).End(xlUp).Row).Copy sh_OYElevate.Range("A" & lastrow) 'copy date
            wsSource.Range("DA2:DA" & wsSource.Cells(Rows.Count, 1).End(xlUp).Row).Copy sh_OYElevate.Range("B" & lastrow) 'copy grp override rms
            wsSource.Range("DB2:DB" & wsSource.Cells(Rows.Count, 1).End(xlUp).Row).Copy sh_OYElevate.Range("E" & lastrow) 'copy grp override rev
            sh_OYElevate.Range("C" & lastrow & ":D" & sh_OYElevate.Cells(Rows.Count, 1).End(xlUp).Row).Value = 0 'tent and tobes = 0
            sh_OYElevate.Range("F" & lastrow & ":G" & sh_OYElevate.Cells(Rows.Count, 1).End(xlUp).Row).Value = 0 'tent and tobes = 0
        End If
    End If
    
Irow = Empty: iCol_a = Empty: iCol_b = Empty: lastrow = Empty
sOR = Empty: SourceCol = Empty: DestLastrow = Empty: i = Empty

End Sub
Sub OYProjCalculation()

Dim Irow As Long, lastrow As Long, Rebate As Double, NumberDays As Long
    With Application: .Calculation = xlCalculationManual: .EnableEvents = False: .ScreenUpdating = False: End With
    
    ' fill in missing capacities
    lastrow = sh_OYProj.Cells(Rows.Count, 1).End(xlUp).Row
    If lastrow = 1 Then Exit Sub
    
    sh_OYProj.Activate
    
    For Irow = 2 To lastrow
        If sh_OYProj.Cells(Irow, 20) = vbNullString Then _
            sh_OYProj.Cells(Irow, 20).Value = Application.WorksheetFunction.Mode_Sngl(sh_OYProj.Range(Cells(Irow, 20), Cells(lastrow, 20)))
    Next Irow

    ' rebates and other revenue ratios per room nights and sellout capacity fill blanks
    For Irow = 2 To lastrow
        
            'group rebates per room night
            Rebate = sh_OYProj.Cells(Irow, 14).Value
            NumberDays = Day(Application.WorksheetFunction.EoMonth(sh_OYProj.Cells(Irow, 1), 0))
            sh_OYProj.Range(Cells(Irow, 33), Cells(Irow - 1 + NumberDays, 33)).Formula = "=IfError(" & Rebate & " / Sum($B$" & Irow & ":$D$" & Irow - 1 + NumberDays & ")," & Rebate & "/" & NumberDays & ")*sum($B" & Irow & ":$D" & Irow & ")"
            Rebate = Empty

            'Transient rebates per room night
            Rebate = sh_OYProj.Cells(Irow, 15).Value
            NumberDays = Day(Application.WorksheetFunction.EoMonth(sh_OYProj.Cells(Irow, 1), 0))
            sh_OYProj.Range(Cells(Irow, 34), Cells(Irow - 1 + NumberDays, 34)).Formula = "=IfError(" & Rebate & " / Sum($E$" & Irow & ":$E$" & Irow - 1 + NumberDays & ")," & Rebate & "/" & NumberDays & ")*$E" & Irow & ""
            Rebate = Empty

            'Contract rebates per room night
            Rebate = sh_OYProj.Cells(Irow, 16).Value
            NumberDays = Day(Application.WorksheetFunction.EoMonth(sh_OYProj.Cells(Irow, 1), 0))
            sh_OYProj.Range(Cells(Irow, 35), Cells(Irow - 1 + NumberDays, 35)).Formula = "=IfError(" & Rebate & " / Sum($F$" & Irow & ":$F$" & Irow - 1 + NumberDays & ")," & Rebate & "/" & NumberDays & ")*$F" & Irow & ""
            Rebate = Empty

            'Other Revenue per room night
            Rebate = sh_OYProj.Cells(Irow, 17).Value
            NumberDays = Day(Application.WorksheetFunction.EoMonth(sh_OYProj.Cells(Irow, 1), 0))
            sh_OYProj.Range(Cells(Irow, 36), Cells(Irow - 1 + NumberDays, 36)).Formula = "=IfError(" & Rebate & " / Sum($B" & Irow & ":$F" & Irow - 1 + NumberDays & ")," & Rebate & "/" & NumberDays & ")*Sum($B$" & Irow & ":$F$" & Irow & ")"
            Rebate = Empty
            
            'Remove Formula
            sh_OYProj.Range(Cells(Irow, 33), Cells(Irow - 1 + NumberDays, 36)).Value = sh_OYProj.Range(Cells(Irow, 33), Cells(Irow - 1 + NumberDays, 36)).Value
            
            'Sellout
            If sh_OYProj.Cells(Irow, 21).Value <> vbNullString Then 'if not blank copy down the Sellout
                NumberDays = Day(Application.WorksheetFunction.EoMonth(sh_OYProj.Cells(Irow, 1), 0))
                sh_OYProj.Range(Cells(Irow, 21), Cells(Irow - 1 + NumberDays, 21)).Value = sh_OYProj.Cells(Irow, 21).Value
            ElseIf sh_OYProj.Cells(Irow, 21).Value = vbNullString Then 'if blank, then use the capacity instead
                sh_OYProj.Range(Cells(Irow, 21), Cells(Irow - 1 + NumberDays, 21)).Value = sh_OYProj.Cells(Irow, 20).Value
            End If
            
            'Fx
            If (sh_OYProj.Cells(Irow, 37).Value > vbNullString And sh_OYProj.Cells(Irow, 37).Value = sh_OYProj.Cells(Irow, 42).Value) Then
                sh_OYProj.Range(sh_OYProj.Cells(Irow, 38), sh_OYProj.Cells(Irow, 41)).Value = 1
                sh_OYProj.Range(sh_OYProj.Cells(Irow, 43), sh_OYProj.Cells(Irow, 46)).Value = 1
            ElseIf sh_OYProj.Cells(Irow, 38).Value <> vbNullString Then
               sh_OYProj.Cells(Irow, 39).Value = sh_OYProj.Cells(Irow, 38).Value
               sh_OYProj.Cells(Irow, 44).Value = sh_OYProj.Cells(Irow, 43).Value
            End If

            If sh_OYProj.Cells(Irow, 39).Value = vbNullString Then 'this is for january of each year, no Fx forecast in the extract. Instead take the OY Lock Forecast
                sh_OYProj.Cells(Irow, 39).Value = sh_OYProj.Cells(Irow, 41).Value
                sh_OYProj.Cells(Irow, 38).Value = sh_OYProj.Cells(Irow, 41).Value
            End If

            If sh_OYProj.Cells(Irow, 44).Value = vbNullString Then  'this is for january of each year, no Fx forecast in the extract. Instead take the OY Lock Forecast
                sh_OYProj.Cells(Irow, 44).Value = sh_OYProj.Cells(Irow, 46).Value
                sh_OYProj.Cells(Irow, 43).Value = sh_OYProj.Cells(Irow, 46).Value
            End If
            sh_OYProj.Range(Cells(Irow, 38), Cells(Irow - 1 + NumberDays, 39)).Value = sh_OYProj.Range(Cells(Irow, 38), Cells(Irow, 39)).Value
            sh_OYProj.Range(Cells(Irow, 43), Cells(Irow - 1 + NumberDays, 44)).Value = sh_OYProj.Range(Cells(Irow, 43), Cells(Irow, 44)).Value
            Irow = Irow + NumberDays - 1
    Next Irow
    
    lastrow = sh_OYProj.Cells(Rows.Count, 1).End(xlUp).Row
        
    'calculate grp rooms, ADR, and gross revenue, transient ADR, Contract ADR, Total hotel rms, ADR total hotel revenue net, Occ
    sh_OYProj.Range("AB2:AD" & lastrow).Formula = "=IFERROR(SUM(I2:K2)/SUM(B2:D2),0)" 'group ADR
    sh_OYProj.Range("AE2:AE" & lastrow).Formula = "=IFERROR(L2/E2,0)" 'transient ADR
    sh_OYProj.Range("AF2:AF" & lastrow).Formula = "=IFERROR(M2/F2,0)" 'Contract ADR
    sh_OYProj.Range("Z2:Z" & lastrow).Formula = "=IFERROR(SUM(B2:F2)/T2,0)" 'total hotel Occupancy
    sh_OYProj.Range("Z2:Z" & lastrow).NumberFormat = "0.0%"
    Application.Calculation = xlCalculationAutomatic
    
    sh_OYProj.Range("Z2:AF" & lastrow).Value = sh_OYProj.Range("Z2:AF" & lastrow).Value 'remove formula
    
    'assign the name range
    sh_OYProj.Range("A1:AT" & lastrow).Name = "OYprojData"
    
    Irow = Empty: lastrow = Empty: Rebate = Empty: NumberDays = Empty
End Sub

Sub Import_RCMARDelphi()

Dim arFileName As Variant, wbImport As Workbook, Irow As Long, lastrow As Long, iCol As Byte
    
    If ws_Setup.Range("C15").Value = "HHHHH" Then
        MsgBox "The tool setup is not completed. Before populating the tool, please read and complete the setup tab based on your hotel specification." & vbLf & vbLf & _
            "Import cancelled!", vbCritical, "Tool Setup not completed"
            ws_Setup.Activate
            End
    ElseIf ws_DayXDay.Range("B6").Value = 0 Then
        MsgBox "You must first import the One Yield v2 extract.", vbCritical, "One Yield v2 extract not imported"
        End
    End If
    
    
    With Application: .ScreenUpdating = False: .Calculation = xlCalculationManual: .EnableEvents = False: .DisplayAlerts = False: End With

    arFileName = Application.GetOpenFilename(FileFilter:="Excel Files (*.xlsx;*.xls), *.xlsx.;*.xls", FilterIndex:=1, MultiSelect:=False)
    If arFileName = 0 Then
        MsgBox "No files were selected."
        With Application: .ScreenUpdating = True: .Calculation = xlCalculationAutomatic: .EnableEvents = True: .DisplayAlerts = True: End With
        arFileName = Empty: Set wbImport = Nothing: Irow = Empty: lastrow = Empty: iCol = Empty
        End
    End If
    
    Set wbImport = Workbooks.Open(arFileName)

    'copy Delphi MAR rate (Ritz-Carlton Delphi hotels only)
    If wbImport.Worksheets(1).Cells(1, 3).Value = "MAR" And wbImport.Worksheets(1).Cells(2, 1).Value = ws_Setup.Cells(15, 3).Value Then  'copy Delphi report
        sh_MAR.Range("A1:C" & sh_MAR.Cells(Rows.Count, 1).End(xlUp).Row + 3).ClearContents
        lastrow = wbImport.Worksheets(1).Cells(Rows.Count, 1).End(xlUp).Row
        wbImport.Worksheets(1).Range("A1:C" & lastrow).Copy sh_MAR.Range("A1")
        sh_MAR.Range("C2:C" & lastrow).NumberFormat = "0"
        wbImport.Close
        arFileName = Empty: Set wbImport = Nothing: Irow = Empty: lastrow = Empty: iCol = Empty
    Else
        wbImport.Close
        arFileName = Empty: Set wbImport = Nothing: Irow = Empty: lastrow = Empty: iCol = Empty

        MsgBox "You've selected an incorrect file.", vbCritical, "RC - Delphi: Incorrect file selected"
        With Application: .ScreenUpdating = True: .Calculation = xlCalculationAutomatic: .EnableEvents = True: .DisplayAlerts = True: End With
        ws_DayXDay.Activate
        End
    End If
    
    ws_DayXDay.Unprotect "unlockME"
    ws_DayXDay.Calculate
    
    With ws_DayXDay
        For Irow = 6 To 504 Step 39
            For iCol = 3 To 68
                Select Case .Cells(5, iCol).Value
                    Case "MAR Restrictions"
                         .Range(.Cells(Irow, iCol), .Cells(Irow + 30, iCol)).Interior.Color = 13434879
                         .Range(.Cells(Irow, iCol), .Cells(Irow + 30, iCol)).Locked = False
                    Case "MAR Rate"
                         .Range(.Cells(Irow, iCol), .Cells(Irow + 30, iCol)).Formula = "=IF(or(A" & Irow & "=""Actual"",A" & Irow & "=""""),"""",IFERROR(VLOOKUP(B" & Irow & ",MARdelphi!$B$2:$C$2000,2,FALSE),""""))"
                         .Range(.Cells(Irow, iCol), .Cells(Irow + 30, iCol)).Value = .Range(.Cells(Irow, iCol), .Cells(Irow + 30, iCol)).Value
                End Select
            Next iCol
        Next Irow
    End With
    
    Call Auto_Fit_DaybyDay
    ws_DayXDay.Protect "unlockME", DrawingObjects:=True, Contents:=True, Scenarios:=False, AllowFormattingCells:=True, AllowFormattingRows:=False, AllowFormattingColumns:=False
    MsgBox "RC - DELPHI MAR import completed.", vbInformation, "MAR Import Status"
    
    arFileName = Empty: Set wbImport = Nothing: Irow = Empty: lastrow = Empty: iCol = Empty
End Sub
Attribute VB_Name = "ImportPktData"
Option Explicit
Option Private Module
Sub ImportSSP_data() 'to import the packet data

Dim ifile As Long, wbImport As Workbook, arFileName As Variant, sh1 As Worksheet, ws As Worksheet
Dim Irow As Long, lastrow As Long, iCol As Long, shp As Shape, shpLoop As Byte, nm As Name
Dim CompshopLastColumn As Variant, Lastrow2 As Long, MyIchart As Worksheet, MyiChartTitle As String
Dim MyHeight As Double, MyWidth As Double
    
    If sh_OYProj.Range("A2").Value = vbNullString Then
        MsgBox "You can't import any data for the sales strategy packet if One Yield v2 Strategy Outlook data haven't been populated first.", vbInformation, "Import OYv2 data first"
        End
    End If
    
    arFileName = Application.GetOpenFilename(FileFilter:="Excel Files (*.xls;*.xls?;*.csv), *.xls;*.xls?;*.csv;", FilterIndex:=1, MultiSelect:=True)
    If Not IsArray(arFileName) Then
        MsgBox "No files were selected."
        Exit Sub
    End If

    With Application: .EnableEvents = False: .Calculation = xlCalculationManual: .ScreenUpdating = False: .DisplayAlerts = False: End With
    
    For Each ws In Worksheets
        Select Case VBA.Left(ws.CodeName, 6)
            Case "sh_SSP": ws.Unprotect "unlockME"
        End Select
    Next

    On Error Resume Next
    'clear any possible pic formulas on snapshot or Custom tabs
    
    For Each ws In Worksheets
        Select Case VBA.Left(ws.CodeName, 3)
            Case "wsC"
                If ws.Visible = xlSheetVisible Then
                    For Each shp In ws.Shapes
                        Select Case VBA.Left(shp.Name, 4)
                            Case "Pic_"
                                ws.Shapes(shp.Name).DrawingObject.Formula = ""
                        End Select
                    Next
                End If
        End Select
    Next
    
    Set ws = Nothing: Set shp = Nothing
    
    'clear STR week
    sh_SSP_STR_Combo_Wk.Range("B1:AA69").ClearContents
    sh_SSP_STR_Combo_28Days.Range("B1:AA69").ClearContents
    sh_SSP_STRwk.Range("B1:AC42").ClearContents
    sh_SSP_STRCompWk.Range("B1:AK5,B6,B7:AK63").ClearContents
    sh_SSP_STRWk_SegGlance.Range("B1:T37").ClearContents
    
    'clear STR month
    sh_SSP_STRmth.Range("B1:U35").ClearContents
    sh_SSP_STRComp.Range("B1:AG58").ClearContents
    sh_SSP_STRdow.Range("B1:V78").ClearContents
    
    'clear STR daily flash website
    sh_SSP_STRmthWebsite.Range("B1:AJ4,B9:AJ42").ClearContents
    
    'clear STR MKG daily
    sh_SSP_STRmkgD.Range("B6:I6").ClearContents
    sh_SSP_STRmkgD.Range("B10:AG42").ClearContents
    
    'clear STR MGK month
    sh_SSP_STRmkgMth.Range("B1").Value = vbNullString
    sh_SSP_STRmkgMth.Shapes("PIC_MKG1").Delete
    sh_SSP_STRmkgMth.Shapes("PIC_MKG2").Delete
    sh_SSP_STRmkgMth.Shapes("PIC_MKG3").Delete

    'clear compshop
    sh_SSP_CompShop.Range("A1:Z220").Clear
    sh_SSP_CompShop2.Range("A1:Z220").Clear
    sh_SSP_CompShop3.Range("A1:Z220").Clear
    
    'clear demand eye month
    If sh_IchartMth.FilterMode = True Then sh_IchartMth.ShowAllData
    sh_IchartMth.Range("C5:U5").ClearContents
    sh_IchartMth.Range("AD10:BE80").ClearContents
    
    'clear demand eye weekly
    If sh_IchartWk.FilterMode = True Then sh_IchartWk.ShowAllData
    sh_IchartWk.Range("C5:U5").ClearContents
    sh_IchartWk.Range("Y6:Z6").ClearContents
    sh_IchartWk.Range("AD10:BE80").ClearContents
    
    For ifile = LBound(arFileName) To UBound(arFileName)
        Set wbImport = Workbooks.Open(arFileName(ifile))
        Set sh1 = wbImport.Worksheets(1) 'this will only look at worksheet 1 to find the data from the file you are importing
        
        With Application: .EnableEvents = False: .Calculation = xlCalculationManual: End With
        
        'copy Standard STR found on MRDW Monthly
        If sh1.Range("B3").Value Like "*Month*" Then
            If ws_SSP_PPT.Range("H17").Value = 1 Then
                sh_SSP_STRmth.Range("B1:T32").Value = wbImport.Worksheets("Glance").Range("B1:T32").Value 'copy Glance
                sh_SSP_STRComp.Range("B1:AF69").Value = wbImport.Worksheets("Comp").Range("B1:AF69").Value 'copy Standard comp tab
                sh_SSP_STRdow.Range("B1:B4").Value = wbImport.Worksheets("Day of Week").Range("B1:B4").Value 'copy DOW STR
                sh_SSP_STRdow.Range("B15:V76").Value = wbImport.Worksheets("Day of Week").Range("B15:V76").Value
            ElseIf ws_SSP_PPT.Range("H17").Value = 2 Then
                sh_SSP_STRmth.Range("B1:T32").Value = wbImport.Worksheets("Glance_2").Range("B1:T32").Value 'copy Glance
                sh_SSP_STRComp.Range("B1:AF69").Value = wbImport.Worksheets("Comp_2").Range("B1:AF69").Value 'copy Standard comp tab
                sh_SSP_STRdow.Range("B1:B4").Value = wbImport.Worksheets("Day of Week_2").Range("B1:B4").Value 'copy DOW STR
                sh_SSP_STRdow.Range("B15:U76").Value = wbImport.Worksheets("Day of Week_2").Range("B15:U76").Value
            End If
            
        'copy Standard STR found on MRDW Weekly
        ElseIf sh1.Range("B3").Value Like "*Week*" Then
            
            If ws_SSP_PPT.Range("H17").Value = 1 Then
                sh_SSP_STR_Combo_Wk.Range("A1:AA69").Value = wbImport.Worksheets("SummaryComb").Range("A1:AA69").Value 'copy Weekly Summary Combo Week
                sh_SSP_STR_Combo_28Days.Range("A1:AA69").Value = wbImport.Worksheets("SummaryComb 28Day").Range("A1:AA69").Value 'copy Weekly Summary Combo 28days
                sh_SSP_STRwk.Range("B1:AA38").Value = wbImport.Worksheets("Glance").Range("B1:AA38").Value 'weekly STR Glance
                sh_SSP_STRWk_SegGlance.Range("B1:S37").Value = wbImport.Worksheets("Segmentation Glance").Range("B1:S37").Value 'weekly STR Seg Glance
                sh_SSP_STRCompWk.Range("B1:AL5").Value = wbImport.Worksheets("Daily by Month").Range("B1:AL5").Value 'copy Standard Daily by Month tab
                sh_SSP_STRCompWk.Range("B6").Value = wbImport.Worksheets("Daily by Month").Range("B6").Value 'copy Standard Daily by Month tab
                sh_SSP_STRCompWk.Range("B7:AL61").Value = wbImport.Worksheets("Daily by Month").Range("B7:AL61").Value 'copy Standard Daily by Month tab
            
            ElseIf ws_SSP_PPT.Range("H17").Value = 2 Then
                sh_SSP_STR_Combo_Wk.Range("A1:AA69").Value = wbImport.Worksheets("SummaryComb_2").Range("A1:AA69").Value 'copy Weekly Summary Combo Week
                sh_SSP_STR_Combo_28Days.Range("A1:AA69").Value = wbImport.Worksheets("SummaryComb 28Day_2").Range("A1:AA69").Value 'copy Weekly Summary Combo 28days
                sh_SSP_STRwk.Range("B1:AA38").Value = wbImport.Worksheets("Glance_2").Range("B1:AA38").Value 'weekly STR Glance
                sh_SSP_STRWk_SegGlance.Range("B1:S37").Value = wbImport.Worksheets("Segmentation Glance_2").Range("B1:S37").Value 'weekly STR Seg Glance
                sh_SSP_STRCompWk.Range("B1:AL61").Value = wbImport.Worksheets("Daily by Month_2").Range("B1:AL61").Value 'copy Standard Daily by Month tab
                sh_SSP_STRCompWk.Range("B6").Value = wbImport.Worksheets("Daily by Month").Range("B6").Value 'copy Standard Daily by Month tab
                sh_SSP_STRCompWk.Range("B7:AL61").Value = wbImport.Worksheets("Daily by Month_2").Range("B7:AL61").Value 'copy Standard Daily by Month tab
            
            End If
                      
        'Copy Monthly Star Data from STR website Daily Flash
        ElseIf VBA.Left(sh1.Range("B1"), 11) = "Daily Flash" Then
                    sh_SSP_STRmthWebsite.Range("B1:AJ4").ClearContents
                    sh_SSP_STRmthWebsite.Range("B9:AJ42").ClearContents
            For Irow = 9 To 42
                If VBA.Left(sh1.Cells(Irow, 2), 3) = "MTD" Or VBA.Left(sh1.Cells(Irow, 2), 5) = "Total" Then
                    sh_SSP_STRmthWebsite.Range("B1:AJ4").ClearContents
                    sh_SSP_STRmthWebsite.Range("B9:AJ42").ClearContents
                    sh_SSP_STRmthWebsite.Range("B40:AJ42").Value = sh1.Range("B" & Irow & ":AJ" & Irow + 3).Value
                    sh_SSP_STRmthWebsite.Range("B9:AJ" & Irow - 1).Value = sh1.Range("B9:AJ" & Irow - 1).Value
                    sh_SSP_STRmthWebsite.Range("B1:B4").Value = sh1.Range("B1:B4").Value
                    sh_SSP_STRmthWebsite.Range("E8:AJ42").Columns.AutoFit
                    Exit For
                End If
            Next
            
        'copy STR MKG Daily
        ElseIf sh1.Range("B2").Value Like "Report*Daily*" Then
            sh_SSP_STRmkgD.Range("B6").Value = "'" & VBA.Format(sh1.Range("B6"), "MMM YYYY") 'copy month
            sh_SSP_STRmkgD.Range("K8").Value = sh1.Range("K8").Value 'copy Average rate header
            sh_SSP_STRmkgD.Range("R8").Value = sh1.Range("R8").Value 'copy RevPAR header
            sh_SSP_STRmkgD.Range("Y8").Value = sh1.Range("AA8").Value 'copy occ indexes
            sh_SSP_STRmkgD.Range("AB8").Value = sh1.Range("AD8").Value 'copy ADR indexes
            sh_SSP_STRmkgD.Range("AE8").Value = sh1.Range("AG8").Value 'copy RevPAR indexes
            sh1.Range(sh1.Range(sh1.Range("B10"), sh1.Range("B10").End(xlToRight)), sh1.Range("B10").End(xlDown)).Copy
            sh_SSP_STRmkgD.Range("B10").PasteSpecial xlPasteValues
            Application.CutCopyMode = False
            'copy indexes
            sh1.Range(sh1.Range(sh1.Range("AA10"), sh1.Range("AA10").End(xlToRight)), sh1.Range("AA10").End(xlDown)).Copy
            sh_SSP_STRmkgD.Range("Y10").PasteSpecial xlPasteValues
            Application.CutCopyMode = False
            
            'copy hotel name
            sh_SSP_STRmkgD.Range("D6").Value = VBA.Trim(Application.WorksheetFunction.Clean((sh1.Range(sh1.Range("B10:B90").Find(what:="|fffd|?", lookat:=xlPart).Address).Value)))
            sh_SSP_STRmkgD.Range("B6:X" & sh_SSP_STRmkgD.Cells(Rows.Count, 2).End(xlUp).Row).Name = "MKG_D"
            sh_SSP_STRmkgD.Range("Y6:AG" & sh_SSP_STRmkgD.Cells(Rows.Count, 2).End(xlUp).Row).Name = "MKG_D_Index"
            
        'copy STR MKG month these are copied as picture due to the crazy layout.
        ElseIf sh1.Range("A2").Value Like "Report*Monthly*" Then
            sh_SSP_STRmkgMth.Range("B1").Value = sh1.Range("A4").Value 'copy month
            sh1.Range("D6:AN37").CopyPicture: sh_SSP_STRmkgMth.Range("A1").PasteSpecial 'copy section 1
            sh1.Range("E39:AN68").CopyPicture: sh_SSP_STRmkgMth.Range("A37").PasteSpecial 'copy section 2
            sh1.Range("D71:AR73").CopyPicture: sh_SSP_STRmkgMth.Range("A73").PasteSpecial 'copy section 3 "graphs"
            
            'assign the name to each picture
            For shpLoop = 1 To sh_SSP_STRmkgMth.Shapes.Count
                If sh_SSP_STRmkgMth.Shapes(shp).Type = msoPicture Then
                    Select Case VBA.Left(sh_SSP_STRmkgMth.Shapes(shpLoop).Name, 4)
                        Case Is <> "PIC_"
                            sh_SSP_STRmkgMth.Shapes(shpLoop).LockAspectRatio = msoFalse
                            sh_SSP_STRmkgMth.Shapes(shpLoop).Name = "PIC_MKG" & shpLoop
                    End Select
                End If
            Next
        
        'copy Compshop1
        ElseIf sh1.Cells(6, 2).Value = "By Date" Then
                
          Set CompshopLastColumn = sh1.Rows("22:22").Find(what:="Last Shop Datetime", lookat:=xlPart)
            iCol = CompshopLastColumn.Column
                If iCol > 0 Then
                    sh1.Range(sh1.Cells(21, 2), sh1.Cells(120, iCol)).Copy sh_SSP_CompShop.Range("B2")
                    Application.CutCopyMode = False
                    
                    sh_SSP_CompShop.Range(sh_SSP_CompShop.Cells(4, 3), sh_SSP_CompShop.Cells(120, iCol - 1)).Replace what:="(*)", replacement:="", lookat:=xlPart, SearchOrder:=xlByRows, MatchCase:=False, SearchFormat:=False, ReplaceFormat:=False
                    sh_SSP_CompShop.Range(sh_SSP_CompShop.Cells(4, 3), sh_SSP_CompShop.Cells(120, iCol - 1)).Replace what:="N*", replacement:="", lookat:=xlPart, SearchOrder:=xlByRows, MatchCase:=False, SearchFormat:=False, ReplaceFormat:=False
                    sh_SSP_CompShop.Range(sh_SSP_CompShop.Cells(4, 3), sh_SSP_CompShop.Cells(120, iCol - 1)).Replace what:="ERR", replacement:="", lookat:=xlPart, SearchOrder:=xlByRows, MatchCase:=False, SearchFormat:=False, ReplaceFormat:=False
                    sh_SSP_CompShop.Range(sh_SSP_CompShop.Cells(4, 3), sh_SSP_CompShop.Cells(120, iCol - 1)).Replace what:="CLOSED", replacement:="NMQ", lookat:=xlPart, SearchOrder:=xlByRows, MatchCase:=False, SearchFormat:=False, ReplaceFormat:=False
                    sh_SSP_CompShop.Range(sh_SSP_CompShop.Cells(4, 3), sh_SSP_CompShop.Cells(120, iCol - 1)).Replace what:="OR", replacement:="", lookat:=xlPart, SearchOrder:=xlByRows, MatchCase:=False, SearchFormat:=False, ReplaceFormat:=False
                    sh_SSP_CompShop.Range(sh_SSP_CompShop.Cells(4, 3), sh_SSP_CompShop.Cells(120, iCol - 1)).Replace what:="X", replacement:="", lookat:=xlPart, SearchOrder:=xlByRows, MatchCase:=False, SearchFormat:=False, ReplaceFormat:=False
                    
                    'due to change in date format added this code to trim the date
                    For Irow = 4 To sh_SSP_CompShop.Cells(Rows.Count, 2).End(xlUp).Row
                        sh_SSP_CompShop.Cells(Irow, 2).Value = VBA.Left(sh_SSP_CompShop.Cells(Irow, 2), 15)
                    Next
                    
                    sh_SSP_CompShop.Rows(3).RowHeight = 56.25 'adjust row header and column width prior the auto fit
                    sh_SSP_CompShop.Range(sh_SSP_CompShop.Cells(3, 2), sh_SSP_CompShop.Cells(34, iCol)).Columns.AutoFit
                    sh_SSP_CompShop.Range(sh_SSP_CompShop.Cells(4, 2), sh_SSP_CompShop.Cells(34, 2)).Columns.AutoFit
                    sh_SSP_CompShop.Range(sh_SSP_CompShop.Cells(3, 2), sh_SSP_CompShop.Cells(34, 2)).ColumnWidth = 18
                    sh_SSP_CompShop.Range(sh_SSP_CompShop.Cells(4, 2), sh_SSP_CompShop.Cells(34, 2)).Rows.AutoFit
                    sh_SSP_CompShop.Range(sh_SSP_CompShop.Cells(3, 2), sh_SSP_CompShop.Cells(34, iCol)).Name = "Comp1"
                    
                    'copy compshop2 hotels to tab 2 - 32 to 63
                    sh_SSP_CompShop.Range(sh_SSP_CompShop.Cells(3, 2), sh_SSP_CompShop.Cells(3, iCol)).Copy sh_SSP_CompShop2.Range("B3") 'header
                    Application.CutCopyMode = False
                    
                    sh_SSP_CompShop.Range(sh_SSP_CompShop.Cells(35, 2), sh_SSP_CompShop.Cells(65, iCol)).Copy sh_SSP_CompShop2.Range("B4") 'data
                    Application.CutCopyMode = False
                    
                    sh_SSP_CompShop2.Rows(3).RowHeight = 56.25 'adjust row header and column width prior the auto fit
                    sh_SSP_CompShop2.Range(sh_SSP_CompShop2.Cells(3, 2), sh_SSP_CompShop2.Cells(34, iCol)).Columns.AutoFit
                    sh_SSP_CompShop2.Range(sh_SSP_CompShop2.Cells(4, 2), sh_SSP_CompShop2.Cells(34, 2)).Columns.AutoFit
                    sh_SSP_CompShop2.Range(sh_SSP_CompShop2.Cells(3, 2), sh_SSP_CompShop2.Cells(34, 2)).ColumnWidth = 18
                    sh_SSP_CompShop2.Range(sh_SSP_CompShop2.Cells(4, 2), sh_SSP_CompShop2.Cells(34, iCol)).Rows.AutoFit
                    sh_SSP_CompShop2.Range(sh_SSP_CompShop2.Cells(3, 2), sh_SSP_CompShop2.Cells(34, iCol)).Name = "Comp2"
                    
                    'copy compshop3 hotels to tab 3 - 62 to 93 day out
                    sh_SSP_CompShop.Range(sh_SSP_CompShop.Cells(3, 2), sh_SSP_CompShop.Cells(3, iCol)).Copy sh_SSP_CompShop3.Range("B3") 'header
                    Application.CutCopyMode = False
                    
                    sh_SSP_CompShop.Range(sh_SSP_CompShop.Cells(66, 2), sh_SSP_CompShop.Cells(96, iCol)).Copy sh_SSP_CompShop3.Range("B4") 'data
                    Application.CutCopyMode = False
                    
                    sh_SSP_CompShop3.Rows(3).RowHeight = 56.25 'adjust row header and column width prior the auto fit
                    sh_SSP_CompShop3.Range(sh_SSP_CompShop3.Cells(3, 2), sh_SSP_CompShop3.Cells(34, iCol)).Columns.AutoFit
                    sh_SSP_CompShop3.Range(sh_SSP_CompShop3.Cells(4, 2), sh_SSP_CompShop3.Cells(34, 2)).Columns.AutoFit
                    sh_SSP_CompShop3.Range(sh_SSP_CompShop3.Cells(3, 2), sh_SSP_CompShop3.Cells(34, 2)).ColumnWidth = 18
                    sh_SSP_CompShop3.Range(sh_SSP_CompShop3.Cells(4, 2), sh_SSP_CompShop3.Cells(34, 2)).Rows.AutoFit
                    sh_SSP_CompShop3.Range(sh_SSP_CompShop3.Cells(3, 2), sh_SSP_CompShop3.Cells(34, iCol)).Name = "Comp3"
                    
                    sh_SSP_CompShop.Range(sh_SSP_CompShop.Cells(35, 2), sh_SSP_CompShop.Cells(120, iCol)).Clear
                End If
        
      
        'Copy iChart
        ElseIf sh1.Range("L1").Value = "Report ID: DAT2" Then
                
            If (VBA.Left(wbImport.Worksheets(1).Range("J17").Value, 4) = "Tier" And _
                    Not sh1.Range("I:I").Find(what:=ws_Setup.Range("C13").Value, lookat:=xlWhole) Is Nothing And _
                    sh1.Range("L3").Value Like "*Month*") Then
                
                        Set MyIchart = sh_IchartMth
                        MyiChartTitle = sh1.Range("L6").Value
               
            ElseIf (VBA.Left(wbImport.Worksheets(1).Range("J17").Value, 4) = "Tier" And _
                    Not sh1.Range("I:I").Find(what:=ws_Setup.Range("C13").Value, lookat:=xlWhole) Is Nothing And _
                    sh1.Range("P7").Value Like "*, SameDOWLY*") Then
                
                        Set MyIchart = sh_IchartWk
                        MyiChartTitle = "Week Timeframe: " & sh1.Range("M7").Value & " through " & sh1.Range("O7").Value
                        sh_IchartWk.Range("Y6").Value = sh1.Range("M7").Value 'copy week start date
                        sh_IchartWk.Range("Z6").Value = sh1.Range("O7").Value 'copy week end date
            End If
            
            If Not MyIchart Is Nothing Then
                If MyIchart.FilterMode = True Then MyIchart.ShowAllData
                
                sh1.Rows("1:17").UnMerge
    
                sh1.Range("M12:M13").Value = sh1.Range("M14:M15").Value
                sh1.Range("N12:BE13").Formula = "=IF(N14="""",M12,N14)"
                sh1.Range("M14:BE15").Value = sh1.Range("M12:BE13").Value
                sh1.Range("M12:BE13").ClearContents
                
                'apply headers and advance filters
                sh1.Range("D1:G1").Value = MyIchart.Range("AJ1:AM1").Value
                sh1.Range("D2").Formula = "=""=" & ws_Setup.Range("C15").Value & """"
                sh1.Range("I16:L16").Value = MyIchart.Range("AJ1:AM1").Value
                
                lastrow = sh1.Cells(Rows.Count, 9).End(xlUp).Row 'lastrow of the data
                sh1.Range("I16:L" & lastrow).AdvancedFilter Action:=xlFilterCopy, CriteriaRange:=sh1.Range("D1:G2"), CopyToRange:=sh1.Range("CA16"), Unique:=True
                sh1.Range("H16:H" & lastrow).Formula = "=I16&J16&K16&L16" 'unique row value
                sh1.Range("H16:H" & lastrow).Value = sh1.Range("H16:H" & lastrow).Value
                
               'build table to extract hotel
                sh1.Range("CE13:DB16").Value = MyIchart.Range("AH6:BE9").Value
                
                'apply unique values header to retrieve data
                sh1.Range("M13:BE13").Formula = "=M14&M15&M16"
                sh1.Range("M13:BE13").Value = sh1.Range("M13:BE13").Value
                Lastrow2 = sh1.Cells(Rows.Count, 79).End(xlUp).Row
                sh1.Range("BZ16:BZ" & Lastrow2).Formula = "=CA16&CB16&CC16&CD16"
                sh1.Range("BZ16:BZ" & Lastrow2).Value = sh1.Range("BZ16:BZ" & Lastrow2).Value
                
                'apply formula to retrieve the data
                sh1.Range(sh1.Cells(17, 83), sh1.Cells(Lastrow2, 106)).Formula = "=VALUE(IFERROR(INDEX($H$17:$BE$" & lastrow & ",MATCH($BZ17,$H$17:$H$" & lastrow & ",0),MATCH(CE$13,$H$13:$BE$13,0)),0))"
                sh1.Range(sh1.Cells(14, 83), sh1.Cells(Lastrow2, 106)).Value = sh1.Range(sh1.Cells(14, 83), sh1.Cells(Lastrow2, 106)).Value
                sh1.Range(sh1.Cells(17, 79), sh1.Cells(Lastrow2, 106)).Copy MyIchart.Range("AD10")
                Application.CutCopyMode = False
                
                MyIchart.Range("C5").Value = MyiChartTitle

                Set MyIchart = Nothing: MyiChartTitle = Empty
                        
            End If
        End If
    
    wbImport.Close False
    
    Next ifile
    
    Set wbImport = Nothing: Set sh1 = Nothing: shp = Empty
    arFileName = Empty: ifile = Empty: Irow = Empty: lastrow = Empty: iCol = Empty
    CompshopLastColumn = Empty: Lastrow2 = Empty
    
    'update minimal vertical axis
    sh_SSP_STRCompWk.Range("AO1").Calculate
    sh_SSP_STRCompWk.ChartObjects("ChrtSTRDaily").Chart.Axes(xlValue).MinimumScale = sh_SSP_STRCompWk.Range("AO1").Value
    
    sh_SSP_STRComp.Range("AH1").Calculate
    sh_SSP_STRComp.ChartObjects("ChrtSTRMthComp").Chart.Axes(xlValue).MinimumScale = sh_SSP_STRComp.Range("AH1").Value
    
    'Update Demand Eye chart Month
    sh_IchartMth.Range("A5:AC372").Calculate
    sh_IchartMth.Range("C6:U372").Columns.AutoFit
    sh_IchartMth.Range("$V$7:$V$372").AutoFilter Field:=1, Criteria1:="Show"
    If sh_IchartMth.Range("P1").Value = "Hide" Then sh_IchartMth.Columns("P:R").Hidden = True
    If sh_IchartMth.Range("S1").Value = "Hide" Then sh_IchartMth.Columns("P:R").Hidden = True
    
    'Update Demand Eye chart Week
    sh_IchartWk.Range("A5:AC372").Calculate
    sh_IchartWk.Range("C6:U372").Columns.AutoFit
    sh_IchartWk.Range("$V$7:$V$372").AutoFilter Field:=1, Criteria1:="Show"
    If sh_IchartWk.Range("P1").Value = "Hide" Then sh_IchartWk.Columns("P:R").Hidden = True
    If sh_IchartWk.Range("S1").Value = "Hide" Then sh_IchartWk.Columns("P:R").Hidden = True
            
    Application.Calculation = xlCalculationAutomatic
    
    Application.EnableEvents = False
    For Each ws In Worksheets 'refresh MRDW data
        Select Case VBA.Left(ws.CodeName, 3)
            Case "wsC"
                If ws.Visible = xlSheetVisible Then
                    For Each shp In ws.Shapes
                    MyHeight = ActiveSheet.Shapes(shp.Name).Height: MyWidth = ActiveSheet.Shapes(shp.Name).Width
                        Select Case shp.Name
                            Case "Pic_STRSnap"
                                ActiveSheet.Shapes(shp.Name).DrawingObject.Formula = "=STRSnap"
                                ActiveSheet.Shapes(shp.Name).Height = MyHeight: ActiveSheet.Shapes(shp.Name).Width = MyWidth
                            Case "Pic_STRSnapMth"
                                ActiveSheet.Shapes(shp.Name).DrawingObject.Formula = "=STRSnapMth"
                                ActiveSheet.Shapes(shp.Name).Height = MyHeight: ActiveSheet.Shapes(shp.Name).Width = MyWidth
                        'MRDW DAT1
                            Case "Pic_DEMwkFW"
                                ActiveSheet.Shapes(shp.Name).DrawingObject.Formula = "=DemWk_FW"
                                ActiveSheet.Shapes(shp.Name).Height = MyHeight: ActiveSheet.Shapes(shp.Name).Width = MyWidth
                            Case "Pic_DEMwkWD"
                                ActiveSheet.Shapes(shp.Name).DrawingObject.Formula = "=DemWk_WD"
                                ActiveSheet.Shapes(shp.Name).Height = MyHeight: ActiveSheet.Shapes(shp.Name).Width = MyWidth
                            Case "Pic_DEMwkWE"
                                ActiveSheet.Shapes(shp.Name).DrawingObject.Formula = "=DemWk_WE"
                                ActiveSheet.Shapes(shp.Name).Height = MyHeight: ActiveSheet.Shapes(shp.Name).Width = MyWidth
                            Case "Pic_DEMwk_T1FW"
                                ActiveSheet.Shapes(shp.Name).DrawingObject.Formula = "=DemWK_FWTier1"
                                ActiveSheet.Shapes(shp.Name).Height = MyHeight: ActiveSheet.Shapes(shp.Name).Width = MyWidth
                            Case "Pic_DEMwk_T1WD"
                                ActiveSheet.Shapes(shp.Name).DrawingObject.Formula = "=DemWK_WDTier1"
                                ActiveSheet.Shapes(shp.Name).Height = MyHeight: ActiveSheet.Shapes(shp.Name).Width = MyWidth
                            Case "Pic_DEMwk_T1WE"
                                ActiveSheet.Shapes(shp.Name).DrawingObject.Formula = "=DemWK_WETier1"
                                ActiveSheet.Shapes(shp.Name).Height = MyHeight: ActiveSheet.Shapes(shp.Name).Width = MyWidth
                            Case "Pic_DEMwk_T2"
                                ActiveSheet.Shapes(shp.Name).DrawingObject.Formula = "=DemWK_FWTier2"
                                ActiveSheet.Shapes(shp.Name).Height = MyHeight: ActiveSheet.Shapes(shp.Name).Width = MyWidth
                            Case "Pic_DEMwk_T3"
                                ActiveSheet.Shapes(shp.Name).DrawingObject.Formula = "=DemWK_FWTier3"
                                ActiveSheet.Shapes(shp.Name).Height = MyHeight: ActiveSheet.Shapes(shp.Name).Width = MyWidth
                            Case "Pic_DEMwk_T4"
                                ActiveSheet.Shapes(shp.Name).DrawingObject.Formula = "=DemWK_FWTier4"
                                ActiveSheet.Shapes(shp.Name).Height = MyHeight: ActiveSheet.Shapes(shp.Name).Width = MyWidth
                            Case "Pic_DEMmth_FW"
                                ActiveSheet.Shapes(shp.Name).DrawingObject.Formula = "=DemMth_FW"
                                ActiveSheet.Shapes(shp.Name).Height = MyHeight: ActiveSheet.Shapes(shp.Name).Width = MyWidth
                            Case "Pic_DEMmth_WD"
                                ActiveSheet.Shapes(shp.Name).DrawingObject.Formula = "=DemMth_WD"
                                ActiveSheet.Shapes(shp.Name).Height = MyHeight: ActiveSheet.Shapes(shp.Name).Width = MyWidth
                            Case "Pic_DEMmth_WE"
                                ActiveSheet.Shapes(shp.Name).DrawingObject.Formula = "=DemMth_WE"
                                ActiveSheet.Shapes(shp.Name).Height = MyHeight: ActiveSheet.Shapes(shp.Name).Width = MyWidth
                            Case "Pic_DEMmth_T1FW"
                                ActiveSheet.Shapes(shp.Name).DrawingObject.Formula = "=DemMth_FWTier1"
                                ActiveSheet.Shapes(shp.Name).Height = MyHeight: ActiveSheet.Shapes(shp.Name).Width = MyWidth
                            Case "Pic_DEMmth_T1WD"
                                ActiveSheet.Shapes(shp.Name).DrawingObject.Formula = "=DemMth_WDTier1"
                                ActiveSheet.Shapes(shp.Name).Height = MyHeight: ActiveSheet.Shapes(shp.Name).Width = MyWidth
                            Case "Pic_DEMmth_T1WE"
                                ActiveSheet.Shapes(shp.Name).DrawingObject.Formula = "=DemMth_WETier1"
                                ActiveSheet.Shapes(shp.Name).Height = MyHeight: ActiveSheet.Shapes(shp.Name).Width = MyWidth
                            Case "Pic_DEMmth_T2"
                                ActiveSheet.Shapes(shp.Name).DrawingObject.Formula = "=DemMth_FWTier2"
                                ActiveSheet.Shapes(shp.Name).Height = MyHeight: ActiveSheet.Shapes(shp.Name).Width = MyWidth
                            Case "Pic_DEMmth_T3"
                                ActiveSheet.Shapes(shp.Name).DrawingObject.Formula = "=DemMth_FWTier3"
                                ActiveSheet.Shapes(shp.Name).Height = MyHeight: ActiveSheet.Shapes(shp.Name).Width = MyWidth
                            Case "Pic_DEMmth_T4"
                                ActiveSheet.Shapes(shp.Name).DrawingObject.Formula = "=DemMth_FWTier4"
                                ActiveSheet.Shapes(shp.Name).Height = MyHeight: ActiveSheet.Shapes(shp.Name).Width = MyWidth
                        End Select
                        MyHeight = Empty: MyWidth = Empty
                    Next
                End If
        End Select
    Next
    Set ws = Nothing: Set shp = Nothing
    
    Application.Calculation = xlCalculationManual
            
    For Each ws In Worksheets
        Select Case VBA.Left(ws.CodeName, 6)
            Case "sh_SSP"
                If VBA.Left(ws.CodeName, 10) Like "sh_SSP_Com*" Then
                    ws.Protect "unlockME"
                    ws.EnableSelection = xlNoSelection
                    ws.EnableSelection = xlNoRestrictions
                    If ws.Range("B4").Value = vbNullString Then ws.Visible = xlSheetVeryHidden Else ws.Visible = xlSheetVisible
                Else
                    ws.Protect "unlockME"
                    ws.EnableSelection = xlNoSelection
                    If (ws.Range("B1").Value = vbNullString Or ws.Range("B1").Value = 0) Then ws.Visible = xlSheetVeryHidden Else ws.Visible = xlSheetVisible
                End If
        End Select
    Next
    
    For Each nm In Names
        nm.Visible = False
    Next
    
    Set ws = Nothing: Set nm = Nothing
    
    ws_SSP_PPT.Activate
    With Application: .EnableEvents = True: .Calculation = xlCalculationAutomatic: .ScreenUpdating = True: .DisplayAlerts = True: End With
    
    MsgBox "Sales Strategy Reports import completed.", vbInformation, "Sales Strategy Reports"
    On Error GoTo 0
End Sub

Sub ImportSSP_SingleFile() 'import single file for the packet data

Dim ifile As Long, wbImport As Workbook, arFileName As Variant, sh1 As Worksheet, ws As Worksheet
Dim Irow As Long, lastrow As Long, iCol As Long, shp As Shape, shpLoop As Byte, nm As Name
Dim CompshopLastColumn As Variant, Lastrow2 As Long, MyIchart As Worksheet, MyiChartTitle As String
Dim MyHeight As Double, MyWidth As Double
    
    If sh_OYProj.Range("A2").Value = vbNullString Then
        MsgBox "You can't import any data for the sales strategy packet if One Yield v2 Strategy Outlook data haven't been populated first.", vbInformation, "Import OYv2 data first"
        End
    End If
    
    arFileName = Application.GetOpenFilename(FileFilter:="Excel Files (*.xls;*.xls?;*.csv), *.xls;*.xls?;*.csv;", FilterIndex:=1, MultiSelect:=False)
    If arFileName = vbNullString Then
        MsgBox "No files were selected."
        Exit Sub
    End If

    With Application: .EnableEvents = False: .Calculation = xlCalculationManual: .ScreenUpdating = False: .DisplayAlerts = False: End With
    
    For Each ws In Worksheets
        Select Case VBA.Left(ws.CodeName, 6)
            Case "sh_SSP": ws.Unprotect "unlockME"
        End Select
    Next

    On Error Resume Next
    'clear any possible pic formulas on snapshot or Custom tabs
    
    For Each ws In Worksheets
        Select Case VBA.Left(ws.CodeName, 3)
            Case "wsC"
                If ws.Visible = xlSheetVisible Then
                    For Each shp In ws.Shapes
                        Select Case VBA.Left(shp.Name, 4)
                            Case "Pic_"
                                ws.Shapes(shp.Name).DrawingObject.Formula = ""
                        End Select
                    Next
                End If
        End Select
    Next
    
    Set ws = Nothing: Set shp = Nothing

    Set wbImport = Workbooks.Open(arFileName)
    Set sh1 = wbImport.Worksheets(1) 'this will only look at worksheet 1 to find the data from the file you are importing
    
    With Application: .EnableEvents = False: .Calculation = xlCalculationManual: End With
    
    'copy Standard STR found on MRDW Monthly
    If sh1.Range("B3").Value Like "*Month*" Then
        sh_SSP_STRmth.Range("B1:U35").ClearContents
        sh_SSP_STRComp.Range("B1:AG58").ClearContents
        sh_SSP_STRdow.Range("B1:V78").ClearContents

        If ws_SSP_PPT.Range("H17").Value = 1 Then
            sh_SSP_STRmth.Range("B1:T32").Value = wbImport.Worksheets("Glance").Range("B1:T32").Value 'copy Glance
            sh_SSP_STRComp.Range("B1:AF69").Value = wbImport.Worksheets("Comp").Range("B1:AF69").Value 'copy Standard comp tab
            sh_SSP_STRdow.Range("B1:B4").Value = wbImport.Worksheets("Day of Week").Range("B1:B4").Value 'copy DOW STR
            sh_SSP_STRdow.Range("B15:V76").Value = wbImport.Worksheets("Day of Week").Range("B15:V76").Value
        ElseIf ws_SSP_PPT.Range("H17").Value = 2 Then
            sh_SSP_STRmth.Range("B1:T32").Value = wbImport.Worksheets("Glance_2").Range("B1:T32").Value 'copy Glance
            sh_SSP_STRComp.Range("B1:AF69").Value = wbImport.Worksheets("Comp_2").Range("B1:AF69").Value 'copy Standard comp tab
            sh_SSP_STRdow.Range("B1:B4").Value = wbImport.Worksheets("Day of Week_2").Range("B1:B4").Value 'copy DOW STR
            sh_SSP_STRdow.Range("B15:V76").Value = wbImport.Worksheets("Day of Week_2").Range("B15:V76").Value
        End If
        
    'copy Standard STR found on MRDW Weekly
    ElseIf sh1.Range("B3").Value Like "*Week*" Then
            sh_SSP_STR_Combo_Wk.Range("B1:AA69").ClearContents
            sh_SSP_STR_Combo_28Days.Range("B1:AA69").ClearContents
            sh_SSP_STRwk.Range("B1:AC42").ClearContents
            sh_SSP_STRCompWk.Range("B1:AK5,B6,B7:AK63").ClearContents
            sh_SSP_STRWk_SegGlance.Range("B1:T37").ClearContents

        If ws_SSP_PPT.Range("H17").Value = 1 Then
            sh_SSP_STR_Combo_Wk.Range("A1:AA69").Value = wbImport.Worksheets("SummaryComb").Range("A1:AA69").Value 'copy Weekly Summary Combo Week
            sh_SSP_STR_Combo_28Days.Range("A1:AA69").Value = wbImport.Worksheets("SummaryComb 28Day").Range("A1:AA69").Value 'copy Weekly Summary Combo 28days
            sh_SSP_STRwk.Range("B1:AA38").Value = wbImport.Worksheets("Glance").Range("B1:AA38").Value 'weekly STR Glance
            sh_SSP_STRWk_SegGlance.Range("B1:S37").Value = wbImport.Worksheets("Segmentation Glance").Range("B1:S37").Value 'weekly STR Seg Glance
            sh_SSP_STRCompWk.Range("B1:AL5").Value = wbImport.Worksheets("Daily by Month").Range("B1:AL5").Value 'copy Standard Daily by Month tab
            sh_SSP_STRCompWk.Range("B6").Value = wbImport.Worksheets("Daily by Month").Range("B6").Value 'copy Standard Daily by Month tab
            sh_SSP_STRCompWk.Range("B7:AL61").Value = wbImport.Worksheets("Daily by Month").Range("B7:AL61").Value 'copy Standard Daily by Month tab
        
        ElseIf ws_SSP_PPT.Range("H17").Value = 2 Then
            sh_SSP_STR_Combo_Wk.Range("A1:AA69").Value = wbImport.Worksheets("SummaryComb_2").Range("A1:AA69").Value 'copy Weekly Summary Combo Week
            sh_SSP_STR_Combo_28Days.Range("A1:AA69").Value = wbImport.Worksheets("SummaryComb 28Day_2").Range("A1:AA69").Value 'copy Weekly Summary Combo 28days
            sh_SSP_STRwk.Range("B1:AA38").Value = wbImport.Worksheets("Glance_2").Range("B1:AA38").Value 'weekly STR Glance
            sh_SSP_STRWk_SegGlance.Range("B1:S37").Value = wbImport.Worksheets("Segmentation Glance_2").Range("B1:S37").Value 'weekly STR Seg Glance
            sh_SSP_STRCompWk.Range("B1:AL61").Value = wbImport.Worksheets("Daily by Month_2").Range("B1:AL61").Value 'copy Standard Daily by Month tab
            sh_SSP_STRCompWk.Range("B6").Value = wbImport.Worksheets("Daily by Month").Range("B6").Value 'copy Standard Daily by Month tab
            sh_SSP_STRCompWk.Range("B7:AL61").Value = wbImport.Worksheets("Daily by Month_2").Range("B7:AL61").Value 'copy Standard Daily by Month tab
        
        End If
                  
    'Copy Monthly Star Data from STR website Daily Flash
    ElseIf VBA.Left(sh1.Range("B1"), 11) = "Daily Flash" Then
                sh_SSP_STRmthWebsite.Range("B1:AJ4").ClearContents
                sh_SSP_STRmthWebsite.Range("B9:AJ42").ClearContents
        For Irow = 9 To 42
            If VBA.Left(sh1.Cells(Irow, 2), 3) = "MTD" Or VBA.Left(sh1.Cells(Irow, 2), 5) = "Total" Then
                sh_SSP_STRmthWebsite.Range("B1:AJ4").ClearContents
                sh_SSP_STRmthWebsite.Range("B9:AJ42").ClearContents
                sh_SSP_STRmthWebsite.Range("B40:AJ42").Value = sh1.Range("B" & Irow & ":AJ" & Irow + 3).Value
                sh_SSP_STRmthWebsite.Range("B9:AJ" & Irow - 1).Value = sh1.Range("B9:AJ" & Irow - 1).Value
                sh_SSP_STRmthWebsite.Range("B1:B4").Value = sh1.Range("B1:B4").Value
                sh_SSP_STRmthWebsite.Range("E8:AJ42").Columns.AutoFit
                Exit For
            End If
        Next
        
    'copy STR MKG Daily
    ElseIf sh1.Range("B2").Value Like "Report*Daily*" Then
        sh_SSP_STRmkgD.Range("B6:I6").ClearContents
        sh_SSP_STRmkgD.Range("B10:X42").ClearContents

        sh_SSP_STRmkgD.Range("B6").Value = "'" & VBA.Format(sh1.Range("B6"), "MMM YYYY") 'copy month
        sh_SSP_STRmkgD.Range("K8").Value = sh1.Range("K8").Value 'copy Average rate header
        sh_SSP_STRmkgD.Range("R8").Value = sh1.Range("R8").Value 'copy RevPAR header
        sh1.Range(sh1.Range(sh1.Range("B10"), sh1.Range("B10").End(xlToRight)), sh1.Range("B10").End(xlDown)).Copy
        sh_SSP_STRmkgD.Range("B10").PasteSpecial xlPasteValues
        Application.CutCopyMode = False
        
        'copy hotel name
        sh_SSP_STRmkgD.Range("D6").Value = VBA.Trim(Application.WorksheetFunction.Clean((sh1.Range(sh1.Range("B10:B90").Find(what:="|fffd|?", lookat:=xlPart).Address).Value)))
        sh_SSP_STRmkgD.Range("B6:X" & sh_SSP_STRmkgD.Cells(Rows.Count, 2).End(xlUp).Row).Name = "MKG_D"
        
    'copy STR MKG month these are copied as picture due to the crazy layout.
    ElseIf sh1.Range("A2").Value Like "Report*Monthly*" Then
        sh_SSP_STRmkgMth.Range("B1").Value = vbNullString
        sh_SSP_STRmkgMth.Shapes("PIC_MKG1").Delete
        sh_SSP_STRmkgMth.Shapes("PIC_MKG2").Delete
        sh_SSP_STRmkgMth.Shapes("PIC_MKG3").Delete

        sh_SSP_STRmkgMth.Range("B1").Value = sh1.Range("A4").Value 'copy month
        sh1.Range("D6:AN37").CopyPicture: sh_SSP_STRmkgMth.Range("A1").PasteSpecial 'copy section 1
        sh1.Range("E39:AN68").CopyPicture: sh_SSP_STRmkgMth.Range("A37").PasteSpecial 'copy section 2
        sh1.Range("D71:AR73").CopyPicture: sh_SSP_STRmkgMth.Range("A73").PasteSpecial 'copy section 3 "graphs"
        
        'assign the name to each picture
        For shpLoop = 1 To sh_SSP_STRmkgMth.Shapes.Count
            If sh_SSP_STRmkgMth.Shapes(shp).Type = msoPicture Then
                Select Case VBA.Left(sh_SSP_STRmkgMth.Shapes(shpLoop).Name, 4)
                    Case Is <> "PIC_"
                        sh_SSP_STRmkgMth.Shapes(shpLoop).LockAspectRatio = msoFalse
                        sh_SSP_STRmkgMth.Shapes(shpLoop).Name = "PIC_MKG" & shpLoop
                End Select
            End If
        Next
    
    'copy Compshop1
    ElseIf sh1.Cells(6, 2).Value = "By Date" Then
        sh_SSP_CompShop.Range("A1:Z220").Clear
        sh_SSP_CompShop2.Range("A1:Z220").Clear
        sh_SSP_CompShop3.Range("A1:Z220").Clear
  
      Set CompshopLastColumn = sh1.Rows("22:22").Find(what:="Last Shop Datetime", lookat:=xlPart)
        iCol = CompshopLastColumn.Column
            If iCol > 0 Then
                sh1.Range(sh1.Cells(21, 2), sh1.Cells(120, iCol)).Copy sh_SSP_CompShop.Range("B2")
                Application.CutCopyMode = False
                
                sh_SSP_CompShop.Range(sh_SSP_CompShop.Cells(4, 3), sh_SSP_CompShop.Cells(120, iCol - 1)).Replace what:="(*)", replacement:="", lookat:=xlPart, SearchOrder:=xlByRows, MatchCase:=False, SearchFormat:=False, ReplaceFormat:=False
                sh_SSP_CompShop.Range(sh_SSP_CompShop.Cells(4, 3), sh_SSP_CompShop.Cells(120, iCol - 1)).Replace what:="N*", replacement:="", lookat:=xlPart, SearchOrder:=xlByRows, MatchCase:=False, SearchFormat:=False, ReplaceFormat:=False
                sh_SSP_CompShop.Range(sh_SSP_CompShop.Cells(4, 3), sh_SSP_CompShop.Cells(120, iCol - 1)).Replace what:="ERR", replacement:="", lookat:=xlPart, SearchOrder:=xlByRows, MatchCase:=False, SearchFormat:=False, ReplaceFormat:=False
                sh_SSP_CompShop.Range(sh_SSP_CompShop.Cells(4, 3), sh_SSP_CompShop.Cells(120, iCol - 1)).Replace what:="CLOSED", replacement:="NMQ", lookat:=xlPart, SearchOrder:=xlByRows, MatchCase:=False, SearchFormat:=False, ReplaceFormat:=False
                sh_SSP_CompShop.Range(sh_SSP_CompShop.Cells(4, 3), sh_SSP_CompShop.Cells(120, iCol - 1)).Replace what:="OR", replacement:="", lookat:=xlPart, SearchOrder:=xlByRows, MatchCase:=False, SearchFormat:=False, ReplaceFormat:=False
                sh_SSP_CompShop.Range(sh_SSP_CompShop.Cells(4, 3), sh_SSP_CompShop.Cells(120, iCol - 1)).Replace what:="X", replacement:="", lookat:=xlPart, SearchOrder:=xlByRows, MatchCase:=False, SearchFormat:=False, ReplaceFormat:=False
                
                sh_SSP_CompShop.Rows(3).RowHeight = 56.25 'adjust row header and column width prior the auto fit
                sh_SSP_CompShop.Range(sh_SSP_CompShop.Cells(3, 2), sh_SSP_CompShop.Cells(34, iCol - 1)).ColumnWidth = 10
                sh_SSP_CompShop.Range(sh_SSP_CompShop.Cells(3, 2), sh_SSP_CompShop.Cells(34, iCol)).Columns.AutoFit
                sh_SSP_CompShop.Range(sh_SSP_CompShop.Cells(3, 2), sh_SSP_CompShop.Cells(34, iCol)).Name = "Comp1"
                
                'copy compshop2 hotels to tab 2 - 32 to 63
                sh_SSP_CompShop.Range(sh_SSP_CompShop.Cells(3, 2), sh_SSP_CompShop.Cells(3, iCol)).Copy sh_SSP_CompShop2.Range("B3") 'header
                Application.CutCopyMode = False
                
                sh_SSP_CompShop.Range(sh_SSP_CompShop.Cells(35, 2), sh_SSP_CompShop.Cells(65, iCol)).Copy sh_SSP_CompShop2.Range("B4") 'data
                Application.CutCopyMode = False
                
                sh_SSP_CompShop2.Rows(3).RowHeight = 56.25 'adjust row header and column width prior the auto fit
                sh_SSP_CompShop2.Range(sh_SSP_CompShop2.Cells(3, 2), sh_SSP_CompShop2.Cells(34, iCol - 1)).ColumnWidth = 10
                sh_SSP_CompShop2.Range(sh_SSP_CompShop2.Cells(3, 2), sh_SSP_CompShop2.Cells(34, iCol)).Columns.AutoFit
                sh_SSP_CompShop2.Range(sh_SSP_CompShop2.Cells(3, 2), sh_SSP_CompShop2.Cells(34, iCol)).Name = "Comp2"
                
                'copy compshop3 hotels to tab 3 - 62 to 93 day out
                sh_SSP_CompShop.Range(sh_SSP_CompShop.Cells(3, 2), sh_SSP_CompShop.Cells(3, iCol)).Copy sh_SSP_CompShop3.Range("B3") 'header
                Application.CutCopyMode = False
                
                sh_SSP_CompShop.Range(sh_SSP_CompShop.Cells(66, 2), sh_SSP_CompShop.Cells(96, iCol)).Copy sh_SSP_CompShop3.Range("B4") 'data
                Application.CutCopyMode = False
                
                sh_SSP_CompShop3.Rows(3).RowHeight = 56.25 'adjust row header and column width prior the auto fit
                sh_SSP_CompShop3.Range(sh_SSP_CompShop3.Cells(3, 2), sh_SSP_CompShop3.Cells(34, iCol - 1)).ColumnWidth = 10
                sh_SSP_CompShop3.Range(sh_SSP_CompShop3.Cells(3, 2), sh_SSP_CompShop3.Cells(34, iCol)).Columns.AutoFit
                sh_SSP_CompShop3.Range(sh_SSP_CompShop3.Cells(3, 2), sh_SSP_CompShop3.Cells(34, iCol)).Name = "Comp3"
                
                sh_SSP_CompShop.Range(sh_SSP_CompShop.Cells(35, 2), sh_SSP_CompShop.Cells(120, iCol)).Clear
            End If
    
  
    'Copy iChart
    ElseIf sh1.Range("L1").Value = "Report ID: DAT2" Then
        

        If (VBA.Left(wbImport.Worksheets(1).Range("J17").Value, 4) = "Tier" And _
                Not sh1.Range("I:I").Find(what:=ws_Setup.Range("C13").Value, lookat:=xlWhole) Is Nothing And _
                sh1.Range("L3").Value Like "*Month*") Then
                
                    If sh_IchartMth.FilterMode = True Then sh_IchartMth.ShowAllData
                    sh_IchartMth.Range("C5:U5").ClearContents
                    sh_IchartMth.Range("AD10:BE80").ClearContents

                    Set MyIchart = sh_IchartMth
                    MyiChartTitle = sh1.Range("L6").Value
           
        ElseIf (VBA.Left(wbImport.Worksheets(1).Range("J17").Value, 4) = "Tier" And _
                Not sh1.Range("I:I").Find(what:=ws_Setup.Range("C13").Value, lookat:=xlWhole) Is Nothing And _
                sh1.Range("P7").Value Like "*, SameDOWLY*") Then
                
                    If sh_IchartWk.FilterMode = True Then sh_IchartWk.ShowAllData
                    sh_IchartWk.Range("C5:U5").ClearContents
                    sh_IchartWk.Range("Y6:Z6").ClearContents
                    sh_IchartWk.Range("AD10:BE80").ClearContents
            
                    Set MyIchart = sh_IchartWk
                    MyiChartTitle = "Week Timeframe: " & sh1.Range("M7").Value & " through " & sh1.Range("O7").Value
                    sh_IchartWk.Range("Y6").Value = sh1.Range("M7").Value 'copy week start date
                    sh_IchartWk.Range("Z6").Value = sh1.Range("O7").Value 'copy week end date
        End If
        
        If Not MyIchart Is Nothing Then
            If MyIchart.FilterMode = True Then MyIchart.ShowAllData
            
            sh1.Rows("1:17").UnMerge

            sh1.Range("M12:M13").Value = sh1.Range("M14:M15").Value
            sh1.Range("N12:BE13").Formula = "=IF(N14="""",M12,N14)"
            sh1.Range("M14:BE15").Value = sh1.Range("M12:BE13").Value
            sh1.Range("M12:BE13").ClearContents
            
            'apply headers and advance filters
            sh1.Range("D1:G1").Value = MyIchart.Range("AJ1:AM1").Value
            sh1.Range("D2").Formula = "=""=" & ws_Setup.Range("C15").Value & """"
            sh1.Range("I16:L16").Value = MyIchart.Range("AJ1:AM1").Value
            
            lastrow = sh1.Cells(Rows.Count, 9).End(xlUp).Row 'lastrow of the data
            sh1.Range("I16:L" & lastrow).AdvancedFilter Action:=xlFilterCopy, CriteriaRange:=sh1.Range("D1:G2"), CopyToRange:=sh1.Range("CA16"), Unique:=True
            sh1.Range("H16:H" & lastrow).Formula = "=I16&J16&K16&L16" 'unique row value
            sh1.Range("H16:H" & lastrow).Value = sh1.Range("H16:H" & lastrow).Value
            
           'build table to extract hotel
            sh1.Range("CE13:DB16").Value = MyIchart.Range("AH6:BE9").Value
            
            'apply unique values header to retrieve data
            sh1.Range("M13:BE13").Formula = "=M14&M15&M16"
            sh1.Range("M13:BE13").Value = sh1.Range("M13:BE13").Value
            Lastrow2 = sh1.Cells(Rows.Count, 79).End(xlUp).Row
            sh1.Range("BZ16:BZ" & Lastrow2).Formula = "=CA16&CB16&CC16&CD16"
            sh1.Range("BZ16:BZ" & Lastrow2).Value = sh1.Range("BZ16:BZ" & Lastrow2).Value
            
            'apply formula to retrieve the data
            sh1.Range(sh1.Cells(17, 83), sh1.Cells(Lastrow2, 106)).Formula = "=VALUE(IFERROR(INDEX($H$17:$BE$" & lastrow & ",MATCH($BZ17,$H$17:$H$" & lastrow & ",0),MATCH(CE$13,$H$13:$BE$13,0)),0))"
            sh1.Range(sh1.Cells(14, 83), sh1.Cells(Lastrow2, 106)).Value = sh1.Range(sh1.Cells(14, 83), sh1.Cells(Lastrow2, 106)).Value
            sh1.Range(sh1.Cells(17, 79), sh1.Cells(Lastrow2, 106)).Copy MyIchart.Range("AD10")
            Application.CutCopyMode = False
            
            MyIchart.Range("C5").Value = MyiChartTitle

            Set MyIchart = Nothing: MyiChartTitle = Empty
                    
        End If
    End If
    
    wbImport.Close False
    
    Set wbImport = Nothing: Set sh1 = Nothing: shp = Empty
    arFileName = Empty: ifile = Empty: Irow = Empty: lastrow = Empty: iCol = Empty
    CompshopLastColumn = Empty: Lastrow2 = Empty
    
    'update minimal vertical axis
    sh_SSP_STRCompWk.Range("AO1").Calculate
    sh_SSP_STRCompWk.ChartObjects("ChrtSTRDaily").Chart.Axes(xlValue).MinimumScale = sh_SSP_STRCompWk.Range("AO1").Value
    
    sh_SSP_STRComp.Range("AH1").Calculate
    sh_SSP_STRComp.ChartObjects("ChrtSTRMthComp").Chart.Axes(xlValue).MinimumScale = sh_SSP_STRComp.Range("AH1").Value
    
    'Update Demand Eye chart Month
    sh_IchartMth.Range("A5:AC372").Calculate
    sh_IchartMth.Range("C6:U372").Columns.AutoFit
    sh_IchartMth.Range("$V$7:$V$372").AutoFilter Field:=1, Criteria1:="Show"
    If sh_IchartMth.Range("P1").Value = "Hide" Then sh_IchartMth.Columns("P:R").Hidden = True
    If sh_IchartMth.Range("S1").Value = "Hide" Then sh_IchartMth.Columns("P:R").Hidden = True
    
    'Update Demand Eye chart Week
    sh_IchartWk.Range("A5:AC372").Calculate
    sh_IchartWk.Range("C6:U372").Columns.AutoFit
    sh_IchartWk.Range("$V$7:$V$372").AutoFilter Field:=1, Criteria1:="Show"
    If sh_IchartWk.Range("P1").Value = "Hide" Then sh_IchartWk.Columns("P:R").Hidden = True
    If sh_IchartWk.Range("S1").Value = "Hide" Then sh_IchartWk.Columns("P:R").Hidden = True
            
    Application.Calculation = xlCalculationAutomatic
    
    Application.EnableEvents = False
    For Each ws In Worksheets 'refresh MRDW data
        Select Case VBA.Left(ws.CodeName, 3)
            Case "wsC"
                If ws.Visible = xlSheetVisible Then
                    For Each shp In ws.Shapes
                    MyHeight = ActiveSheet.Shapes(shp.Name).Height: MyWidth = ActiveSheet.Shapes(shp.Name).Width
                        Select Case shp.Name
                            Case "Pic_STRSnap"
                                ActiveSheet.Shapes(shp.Name).DrawingObject.Formula = "=STRSnap"
                                ActiveSheet.Shapes(shp.Name).Height = MyHeight: ActiveSheet.Shapes(shp.Name).Width = MyWidth
                            Case "Pic_STRSnapMth"
                                ActiveSheet.Shapes(shp.Name).DrawingObject.Formula = "=STRSnapMth"
                                ActiveSheet.Shapes(shp.Name).Height = MyHeight: ActiveSheet.Shapes(shp.Name).Width = MyWidth
                        'MRDW DAT1
                            Case "Pic_DEMwkFW"
                                ActiveSheet.Shapes(shp.Name).DrawingObject.Formula = "=DemWk_FW"
                                ActiveSheet.Shapes(shp.Name).Height = MyHeight: ActiveSheet.Shapes(shp.Name).Width = MyWidth
                            Case "Pic_DEMwkWD"
                                ActiveSheet.Shapes(shp.Name).DrawingObject.Formula = "=DemWk_WD"
                                ActiveSheet.Shapes(shp.Name).Height = MyHeight: ActiveSheet.Shapes(shp.Name).Width = MyWidth
                            Case "Pic_DEMwkWE"
                                ActiveSheet.Shapes(shp.Name).DrawingObject.Formula = "=DemWk_WE"
                                ActiveSheet.Shapes(shp.Name).Height = MyHeight: ActiveSheet.Shapes(shp.Name).Width = MyWidth
                            Case "Pic_DEMwk_T1FW"
                                ActiveSheet.Shapes(shp.Name).DrawingObject.Formula = "=DemWK_FWTier1"
                                ActiveSheet.Shapes(shp.Name).Height = MyHeight: ActiveSheet.Shapes(shp.Name).Width = MyWidth
                            Case "Pic_DEMwk_T1WD"
                                ActiveSheet.Shapes(shp.Name).DrawingObject.Formula = "=DemWK_WDTier1"
                                ActiveSheet.Shapes(shp.Name).Height = MyHeight: ActiveSheet.Shapes(shp.Name).Width = MyWidth
                            Case "Pic_DEMwk_T1WE"
                                ActiveSheet.Shapes(shp.Name).DrawingObject.Formula = "=DemWK_WETier1"
                                ActiveSheet.Shapes(shp.Name).Height = MyHeight: ActiveSheet.Shapes(shp.Name).Width = MyWidth
                            Case "Pic_DEMwk_T2"
                                ActiveSheet.Shapes(shp.Name).DrawingObject.Formula = "=DemWK_FWTier2"
                                ActiveSheet.Shapes(shp.Name).Height = MyHeight: ActiveSheet.Shapes(shp.Name).Width = MyWidth
                            Case "Pic_DEMwk_T3"
                                ActiveSheet.Shapes(shp.Name).DrawingObject.Formula = "=DemWK_FWTier3"
                                ActiveSheet.Shapes(shp.Name).Height = MyHeight: ActiveSheet.Shapes(shp.Name).Width = MyWidth
                            Case "Pic_DEMwk_T4"
                                ActiveSheet.Shapes(shp.Name).DrawingObject.Formula = "=DemWK_FWTier4"
                                ActiveSheet.Shapes(shp.Name).Height = MyHeight: ActiveSheet.Shapes(shp.Name).Width = MyWidth
                            Case "Pic_DEMmth_FW"
                                ActiveSheet.Shapes(shp.Name).DrawingObject.Formula = "=DemMth_FW"
                                ActiveSheet.Shapes(shp.Name).Height = MyHeight: ActiveSheet.Shapes(shp.Name).Width = MyWidth
                            Case "Pic_DEMmth_WD"
                                ActiveSheet.Shapes(shp.Name).DrawingObject.Formula = "=DemMth_WD"
                                ActiveSheet.Shapes(shp.Name).Height = MyHeight: ActiveSheet.Shapes(shp.Name).Width = MyWidth
                            Case "Pic_DEMmth_WE"
                                ActiveSheet.Shapes(shp.Name).DrawingObject.Formula = "=DemMth_WE"
                                ActiveSheet.Shapes(shp.Name).Height = MyHeight: ActiveSheet.Shapes(shp.Name).Width = MyWidth
                            Case "Pic_DEMmth_T1FW"
                                ActiveSheet.Shapes(shp.Name).DrawingObject.Formula = "=DemMth_FWTier1"
                                ActiveSheet.Shapes(shp.Name).Height = MyHeight: ActiveSheet.Shapes(shp.Name).Width = MyWidth
                            Case "Pic_DEMmth_T1WD"
                                ActiveSheet.Shapes(shp.Name).DrawingObject.Formula = "=DemMth_WDTier1"
                                ActiveSheet.Shapes(shp.Name).Height = MyHeight: ActiveSheet.Shapes(shp.Name).Width = MyWidth
                            Case "Pic_DEMmth_T1WE"
                                ActiveSheet.Shapes(shp.Name).DrawingObject.Formula = "=DemMth_WETier1"
                                ActiveSheet.Shapes(shp.Name).Height = MyHeight: ActiveSheet.Shapes(shp.Name).Width = MyWidth
                            Case "Pic_DEMmth_T2"
                                ActiveSheet.Shapes(shp.Name).DrawingObject.Formula = "=DemMth_FWTier2"
                                ActiveSheet.Shapes(shp.Name).Height = MyHeight: ActiveSheet.Shapes(shp.Name).Width = MyWidth
                            Case "Pic_DEMmth_T3"
                                ActiveSheet.Shapes(shp.Name).DrawingObject.Formula = "=DemMth_FWTier3"
                                ActiveSheet.Shapes(shp.Name).Height = MyHeight: ActiveSheet.Shapes(shp.Name).Width = MyWidth
                            Case "Pic_DEMmth_T4"
                                ActiveSheet.Shapes(shp.Name).DrawingObject.Formula = "=DemMth_FWTier4"
                                ActiveSheet.Shapes(shp.Name).Height = MyHeight: ActiveSheet.Shapes(shp.Name).Width = MyWidth
                        End Select
                        MyHeight = Empty: MyWidth = Empty
                    Next
                End If
        End Select
    Next
    Set ws = Nothing: Set shp = Nothing
    
    Application.Calculation = xlCalculationManual
            
    For Each ws In Worksheets
        Select Case VBA.Left(ws.CodeName, 6)
            Case "sh_SSP"
                If VBA.Left(ws.CodeName, 10) Like "sh_SSP_Com*" Then
                    ws.Protect "unlockME"
                    ws.EnableSelection = xlNoSelection
                    ws.EnableSelection = xlNoRestrictions
                    If ws.Range("B4").Value = vbNullString Then ws.Visible = xlSheetVeryHidden Else ws.Visible = xlSheetVisible
                Else
                    ws.Protect "unlockME"
                    ws.EnableSelection = xlNoSelection
                    If (ws.Range("B1").Value = vbNullString Or ws.Range("B1").Value = 0) Then ws.Visible = xlSheetVeryHidden Else ws.Visible = xlSheetVisible
                End If
        End Select
    Next
    
    For Each nm In Names
        nm.Visible = False
    Next
    
    Set ws = Nothing: Set nm = Nothing
    
    ws_SSP_PPT.Activate
    With Application: .EnableEvents = True: .Calculation = xlCalculationAutomatic: .ScreenUpdating = True: .DisplayAlerts = True: End With
    
    MsgBox "Single report import completed.", vbInformation, "Sales Strategy Single Report"
    On Error GoTo 0
End Sub



Attribute VB_Name = "Module1"
Option Explicit

Sub Macro1()
Attribute Macro1.VB_ProcData.VB_Invoke_Func = " \n14"
'
' Macro1 Macro
'

'
    ActiveSheet.ChartObjects("Mth1_ChartRemDemSTLY").Activate
    ActiveChart.PlotArea.Select
    ActiveChart.ChartArea.Select
    ActiveSheet.Shapes.Range(Array("TextBox 40")).Select
    Selection.ShapeRange.IncrementLeft 0.6
    Selection.ShapeRange.IncrementTop 6
    ActiveSheet.Shapes.Range(Array("TextBox 6")).Select
    ActiveSheet.ChartObjects("Mth1_ChartRemDemSTLY").Activate
    ActiveChart.PlotArea.Select
    ActiveSheet.Shapes.Range(Array("Mth1_ChartRemDemSTLY", "TextBox 40")). _
        Select
    ActiveSheet.Shapes("Mth1_ChartRemDemSTLY").Align msoAlignTops, msoFalse
    ActiveSheet.Shapes("Mth1_ChartRemDemSTLY").Align msoAlignCenters, msoFalse
End Sub
Sub Macro2()
Attribute Macro2.VB_ProcData.VB_Invoke_Func = " \n14"
'
' Macro2 Macro
'

'
'    ActiveSheet.Shapes.Range(Array("Group 3")).Select
'    ActiveSheet.ChartObjects("Mth2_ChartRemDemSTLY").Activate
'    ActiveChart.Axes(xlValue).MajorGridlines.Select
'    ActiveSheet.Shapes.Range(Array("Mth2_ChartRemDemSTLY", "TextBox 85")). _
'        Select
'    ActiveSheet.Shapes("Mth2_ChartRemDemSTLY").Align msoAlignTops, msoFalse
'    ActiveSheet.Shapes("Mth2_ChartRemDemSTLY").Align msoAlignCenters, msoFalse
    
    ActiveSheet.Shapes.Range(Array("Mth2_ChartRemDemSTLY", "TextBox 85")).Align msoAlignTops, msoFalse
    ActiveSheet.Shapes.Range(Array("Mth2_ChartRemDemSTLY", "TextBox 85")).Align msoAlignCenters, msoFalse
End Sub
Attribute VB_Name = "OccCF"
Option Explicit
Option Private Module

Sub ApplyCF() 'this is to apply the conditional formatting on the daily tab
Attribute ApplyCF.VB_ProcData.VB_Invoke_Func = " \n14"
Dim DeleteCF As Long
Dim GreenFont As Double, GreenInterior As Double, PinkFont As Double, PinkInterior As Double

Application.ScreenUpdating = False

    GreenFont = -16752384
    GreenInterior = 13561798
    PinkFont = -16383844
    PinkInterior = 13551615
   
    ActiveSheet.Unprotect "unlockME"
    
    Select Case ActiveSheet.CodeName
        Case "ws_DayXDay"
            Range("D6:D36,D45:D75,D84:D114,D123:D153,D162:D192,D202:D231,D240:D270,D279:D309,D318:D348,D357:D387,D396:D426,D435:D465,D474:D504," & _
                    "F6:F36,F45:F75,F84:F114,F123:F153,F162:F192,F202:F231,F240:F270,F279:F309,F318:F348,F357:F387,F396:F426,F435:F465,F474:F504").Select
        Case "ws_Segmentation", "ws_RMcollection"
            Range("D6:D36,D45:D75,D84:D114,D123:D153,D162:D192,D202:D231,D240:D270,D279:D309,D318:D348,D357:D387,D396:D426,D435:D465,D474:D504," & _
                    "E6:E36,E45:E75,E84:E114,E123:E153,E162:E192,E202:E231,E240:E270,E279:E309,E318:E348,E357:E387,E396:E426,E435:E465,E474:E504").Select
    End Select
    
    On Error Resume Next
    For DeleteCF = Selection.FormatConditions.Count To 1 Step -1
        Select Case Selection.FormatConditions(DeleteCF).Operator
            Case 3, 5, 6 'Operator 3 is equal to, operator 5 is greater than, operator 6 is less than
                Selection.FormatConditions(DeleteCF).Delete
        End Select
    Next
    On Error GoTo 0
    
    Select Case ActiveSheet.CodeName
        Case "ws_DayXDay"
            Range("D6:D36,D45:D75,D84:D114,D123:D153,D162:D192,D202:D231,D240:D270,D279:D309,D318:D348,D357:D387,D396:D426,D435:D465,D474:D504," & _
                    "F6:F36,F45:F75,F84:F114,F123:F153,F162:F192,F202:F231,F240:F270,F279:F309,F318:F348,F357:F387,F396:F426,F435:F465,F474:F504").Select
        Case "ws_Segmentation", "ws_RMcollection"
            Range("D6:D36,D45:D75,D84:D114,D123:D153,D162:D192,D202:D231,D240:D270,D279:D309,D318:D348,D357:D387,D396:D426,D435:D465,D474:D504," & _
                    "E6:E36,E45:E75,E84:E114,E123:E153,E162:E192,E202:E231,E240:E270,E279:E309,E318:E348,E357:E387,E396:E426,E435:E465,E474:E504").Select
    End Select
    
    With Selection
        'apply formatting for high occupancy
        .FormatConditions.Add Type:=xlCellValue, Operator:=xlGreater, Formula1:="=Welcome!$AF$2"
        .FormatConditions(Selection.FormatConditions.Count).SetFirstPriority
        .FormatConditions(1).Font.Color = IIf(ws_Welcome.Range("AG2").Value = "Green", GreenFont, PinkFont)
        .FormatConditions(1).Interior.PatternColorIndex = xlAutomatic
        .FormatConditions(1).Interior.Color = IIf(ws_Welcome.Range("AG2").Value = "Green", GreenInterior, PinkInterior)
        .FormatConditions(1).StopIfTrue = False
        
        'apply formatting for low occupancy
        .FormatConditions.Add Type:=xlCellValue, Operator:=xlLess, Formula1:="=Welcome!$AF$3"
        .FormatConditions(Selection.FormatConditions.Count).SetFirstPriority
        .FormatConditions(1).Font.Color = IIf(ws_Welcome.Range("AG2").Value = "Green", PinkFont, GreenFont)
        .FormatConditions(1).Interior.PatternColorIndex = xlAutomatic
        .FormatConditions(1).Interior.Color = IIf(ws_Welcome.Range("AG2").Value = "Green", PinkInterior, GreenInterior)
        .FormatConditions(1).StopIfTrue = False
        
        'apply no formatting is the value is 0
        .FormatConditions.Add Type:=xlCellValue, Operator:=xlEqual, Formula1:="=0"
        .FormatConditions(Selection.FormatConditions.Count).SetFirstPriority
        .FormatConditions(1).Interior.Pattern = xlNone
        .FormatConditions(1).StopIfTrue = False
    End With
    Range("B6").Select
    
    Select Case ActiveSheet.CodeName
        Case "ws_DayXDay"
            ActiveSheet.Protect "unlockME", DrawingObjects:=True, Contents:=True, Scenarios:=False, AllowFormattingCells:=True, AllowFormattingColumns:=False
        Case "ws_Segmentation", "ws_RMcollection"
            ActiveSheet.Protect "unlockME", DrawingObjects:=True, Contents:=True, Scenarios:=False, AllowFormattingCells:=False, AllowFormattingColumns:=False
    End Select

Application.ScreenUpdating = True

End Sub
Attribute VB_Name = "PopulateData"
Option Explicit
Option Private Module

Sub RealignMonth()
Dim Mthloop As Long, Irow As Long

With Application: .Calculation = xlCalculationManual: .EnableEvents = False: .ScreenUpdating = False: End With

    'a user has issue, there excel can't read the formula that equal to the value of column B. it like it reads it as a text.
    For Irow = 6 To 504 Step 39
        ws_DayXDay.Range("DS" & Irow & ":DS" & Irow + 30).Formula = "=IFERROR(B" & Irow & "*1,"""")"
    Next

    'realign the archive month if the new extract start at a different month than previous OY extract
    If ws_DayXDay.Range("FH6").Value <> vbNullString Then
        If ws_DayXDay.Range("B6").Value > ws_DayXDay.Range("FH6").Value Then 'check if the start day is greater than the previous date, if yes then move data up.
            For Mthloop = 1 To 12 'loop to each month to find the date
                ws_DayXDay.Range("$FH$6:$GQ$507").Value = ws_DayXDay.Range("$FH$45:$GQ$507").Value 'copy up the data from the month below for day by day
                ws_Segmentation.Range("$DU$6:$FC$507").Value = ws_Segmentation.Range("$DU$45:$FC$507").Value 'copy up the data from the month below for segmentation
                ws_RMcollection.Range("$HA$6:$IO$507").Value = ws_RMcollection.Range("$HA$45:$IO$507").Value 'copy up the data from the month below for segmentation
                
                'Move User Filter entry in the room collection tab if current month is not the same as previous month
                With ws_RMcollection
                    For Irow = 3 To 471 Step 39
                        .Range("G" & Irow).Value = .Range("G" & Irow + 39).Value
                        .Range("P" & Irow).Value = .Range("P" & Irow + 39).Value
                        .Range("Y" & Irow).Value = .Range("Y" & Irow + 39).Value
                        .Range("AH" & Irow).Value = .Range("AH" & Irow + 39).Value
                        .Range("AQ" & Irow).Value = .Range("AQ" & Irow + 39).Value
                        .Range("AZ" & Irow).Value = .Range("AZ" & Irow + 39).Value
                        .Range("BI" & Irow).Value = .Range("BI" & Irow + 39).Value
                        .Range("BR" & Irow).Value = .Range("BR" & Irow + 39).Value
                    Next Irow
                End With
                    
                ws_Dashboard.Shapes("TxTbMth1").TextFrame.Characters.Text = ws_Dashboard.Shapes("TxtbMth2").TextFrame.Characters.Text 'copy comment from txt box 2 to txt box1
                ws_Dashboard.Shapes("TxTbMth2").TextFrame.Characters.Text = ws_Dashboard.Shapes("TxtbMth3").TextFrame.Characters.Text 'copy comment from txt box 3 to txt box2
                ws_Dashboard.Shapes("TxTbMth3").TextFrame.Characters.Text = ws_Dashboard.Shapes("TxtbMth4").TextFrame.Characters.Text 'copy comment from txt box 4 to txt box3
                ws_Dashboard.Shapes("TxTbMth4").TextFrame.Characters.Text = ws_Dashboard.Shapes("TxtbMth5").TextFrame.Characters.Text 'copy comment from txt box 5 to txt box4
                ws_Dashboard.Shapes("TxTbMth5").TextFrame.Characters.Text = ws_Dashboard.Shapes("TxtbMth6").TextFrame.Characters.Text 'copy comment from txt box 6 to txt box5
                ws_Dashboard.Shapes("TxTbMth6").TextFrame.Characters.Text = vbNullString 'clear the comment of the last month
                If ws_DayXDay.Range("B6").Value = ws_DayXDay.Range("FH6").Value Then Exit For 'if date are the same as the start date, then exit the for loop
            Next Mthloop
        End If
    End If
End Sub
Sub SpreadDataDxD()
Dim Irow As Long, iCol As Long

    With Application: .Calculation = xlCalculationManual: .EnableEvents = False: .ScreenUpdating = False: End With

    'spread compile data used for the day by day spread
    With ws_DayXDay
        .Activate
        .Range("A6:A507").Formula = "=IFERROR(VLOOKUP(B6,OYv2Data,MATCH(""Days Out"",OYv2Data!$A$9:$FZ$9,0),FALSE),"""")"
        .Range("A6:A507").Value = .Range("A6:A507").Value
    For Irow = 6 To 504 Step 39
        For iCol = 117 To 158
            Select Case .Cells(5, iCol).Value
                Case "WE-WD Indicator"
                    .Range(.Cells(Irow, iCol), .Cells(Irow + 30, iCol)).Formula = "=IFERROR(VLOOKUP($B" & Irow & ",OYv2Data,MATCH(""WE indicator  "",OYv2Data!$A$9:$FZ$9,0),FALSE),"""")"
                    .Range(.Cells(Irow, iCol), .Cells(Irow + 30, iCol)).Value = .Range(.Cells(Irow, iCol), .Cells(Irow + 30, iCol)).Value
                Case "Mgd Event"
                    .Range(.Cells(Irow, iCol), .Cells(Irow + 30, iCol)).Formula = "=IFERROR(VLOOKUP($B" & Irow & ",OYv2Data,MATCH(""Event"",OYv2Data!$A$9:$FZ$9,0),FALSE),""N"")"
                    .Range(.Cells(Irow, iCol), .Cells(Irow + 30, iCol)).Value = .Range(.Cells(Irow, iCol), .Cells(Irow + 30, iCol)).Value
                Case "Rate Responsive Occupancy at Current Rate Indicator"
                    .Range(.Cells(Irow, iCol), .Cells(Irow + 30, iCol)).Formula = "=IFERROR(VLOOKUP($B" & Irow & ",RPO!$B:$S,16,FALSE),"""")"
                    .Range(.Cells(Irow, iCol), .Cells(Irow + 30, iCol)).Value = .Range(.Cells(Irow, iCol), .Cells(Irow + 30, iCol)).Value
                Case "Competitive Retail Rate Rating Indicator"
                    .Range(.Cells(Irow, iCol), .Cells(Irow + 30, iCol)).Formula = "=IFERROR(VLOOKUP($B" & Irow & ",RPO!$B:$S,17,FALSE),"""")"
                    .Range(.Cells(Irow, iCol), .Cells(Irow + 30, iCol)).Value = .Range(.Cells(Irow, iCol), .Cells(Irow + 30, iCol)).Value
                Case "Rate Responsive Rating Indicator"
                    .Range(.Cells(Irow, iCol), .Cells(Irow + 30, iCol)).Formula = "=IFERROR(VLOOKUP($B" & Irow & ",RPO!$B:$S,18,FALSE),"""")"
                    .Range(.Cells(Irow, iCol), .Cells(Irow + 30, iCol)).Value = .Range(.Cells(Irow, iCol), .Cells(Irow + 30, iCol)).Value
                Case "Fx This Year"
                    .Range(.Cells(Irow, iCol), .Cells(Irow + 30, iCol)).Formula = "=IF(IFERROR(VLOOKUP($B" & Irow & ",OYprojData,39,FALSE),0)=0,1,IFERROR(VLOOKUP($B" & Irow & ",OYprojData,39,FALSE),1))/IF(IFERROR(VLOOKUP($B" & Irow & ",OYprojData,44,FALSE),0)=0,1,IFERROR(VLOOKUP($B" & Irow & ",OYprojData,44,FALSE),1))"
                    .Range(.Cells(Irow, iCol), .Cells(Irow + 30, iCol)).Value = .Range(.Cells(Irow, iCol), .Cells(Irow + 30, iCol)).Value
                Case "Fx Last Year"
                    .Range(.Cells(Irow, iCol), .Cells(Irow + 30, iCol)).Formula = "=IF(IFERROR(VLOOKUP($B" & Irow & "-364,OYprojData,39,FALSE),0)=0,1,IFERROR(VLOOKUP($B" & Irow & "-364,OYprojData,39,FALSE),1))/IF(IFERROR(VLOOKUP($B" & Irow & "-364,OYprojData,44,FALSE),0)=0,1,IFERROR(VLOOKUP($B" & Irow & "-364,OYprojData,44,FALSE),1))"
                    .Range(.Cells(Irow, iCol), .Cells(Irow + 30, iCol)).Value = .Range(.Cells(Irow, iCol), .Cells(Irow + 30, iCol)).Value
                Case "OYv2 Occ"
                    .Range(.Cells(Irow, iCol), .Cells(Irow + 30, iCol)).Formula = "=IF($A" & Irow & "=""Actual"",IFERROR(ROUND(VLOOKUP($B" & Irow & ",OYprojData,26,FALSE),2),""""),IFERROR(VLOOKUP($B" & Irow & ",OYv2Data,MATCH(""OYv2 Total Hotel Occupancy"",OYv2Data!$A$9:$FZ$9,0),FALSE),""""))"
                    .Range(.Cells(Irow, iCol), .Cells(Irow + 30, iCol)).Value = .Range(.Cells(Irow, iCol), .Cells(Irow + 30, iCol)).Value
                Case "User Occ Proj"
                    .Range(.Cells(Irow, iCol), .Cells(Irow + 30, iCol)).Formula = "=IFERROR(VLOOKUP($B" & Irow & ",OYprojData,26,FALSE),"""")"
                    .Range(.Cells(Irow, iCol), .Cells(Irow + 30, iCol)).Value = .Range(.Cells(Irow, iCol), .Cells(Irow + 30, iCol)).Value
                Case "Occ LY Act"
                    .Range(.Cells(Irow, iCol), .Cells(Irow + 30, iCol)).Formula = "=IFERROR(VLOOKUP($B" & Irow & "-364,OYprojData,26,FALSE),"""")"
                    .Range(.Cells(Irow, iCol), .Cells(Irow + 30, iCol)).Value = .Range(.Cells(Irow, iCol), .Cells(Irow + 30, iCol)).Value
                Case "Ttl Trn Dem"
                    .Range(.Cells(Irow, iCol), .Cells(Irow + 30, iCol)).Formula = "=IFERROR(VLOOKUP($B" & Irow & ",OYv2Data,MATCH(""Total Transient Demand"",OYv2Data!$A$9:$FZ$9,0),FALSE),"""")"
                    .Range(.Cells(Irow, iCol), .Cells(Irow + 30, iCol)).Value = .Range(.Cells(Irow, iCol), .Cells(Irow + 30, iCol)).Value
                Case "Ttl Trn Dem LY"
                    .Range(.Cells(Irow, iCol), .Cells(Irow + 30, iCol)).Formula = "=IFERROR(VLOOKUP($B" & Irow & ",OYv2Data,MATCH(""Total Transient Demand STLY"",OYv2Data!$A$9:$FZ$9,0),FALSE),"""")"
                    .Range(.Cells(Irow, iCol), .Cells(Irow + 30, iCol)).Value = .Range(.Cells(Irow, iCol), .Cells(Irow + 30, iCol)).Value
                Case "group OYv2 Proj"
                    .Range(.Cells(Irow, iCol), .Cells(Irow + 30, iCol)).Formula = "=IF(A" & Irow & "=""Actual"",0,IFERROR(VLOOKUP($B" & Irow & ",OYv2Data,MATCH(""OYv2 Group Proj"",OYv2Data!$A$9:$FZ$9,0),FALSE),0))"
                    .Range(.Cells(Irow, iCol), .Cells(Irow + 30, iCol)).Value = .Range(.Cells(Irow, iCol), .Cells(Irow + 30, iCol)).Value
                Case "Grp Rm Act LY"
                    .Range(.Cells(Irow, iCol), .Cells(Irow + 30, iCol)).Formula = "=IFERROR(VLOOKUP($B" & Irow & "-364,OYprojData,2,FALSE),0)"
                    .Range(.Cells(Irow, iCol), .Cells(Irow + 30, iCol)).Value = .Range(.Cells(Irow, iCol), .Cells(Irow + 30, iCol)).Value
                Case "Grp Rev Plan Ttl Rev Act LY"
                    .Range(.Cells(Irow, iCol), .Cells(Irow + 30, iCol)).Formula = "=IFERROR(VLOOKUP($B" & Irow & "-364,OYprojData,9,FALSE),0)"
                    .Range(.Cells(Irow, iCol), .Cells(Irow + 30, iCol)).Value = .Range(.Cells(Irow, iCol), .Cells(Irow + 30, iCol)).Value
                Case "group Def Rm Projected"
                    .Range(.Cells(Irow, iCol), .Cells(Irow + 30, iCol)).Formula = "=IFERROR(VLOOKUP($B" & Irow & ",OYprojData,2,FALSE),0)"
                    .Range(.Cells(Irow, iCol), .Cells(Irow + 30, iCol)).Value = .Range(.Cells(Irow, iCol), .Cells(Irow + 30, iCol)).Value
                Case "group Def Rev Projected"
                    .Range(.Cells(Irow, iCol), .Cells(Irow + 30, iCol)).Formula = "=IFERROR(VLOOKUP($B" & Irow & ",OYprojData,9,FALSE),0)"
                    .Range(.Cells(Irow, iCol), .Cells(Irow + 30, iCol)).Value = .Range(.Cells(Irow, iCol), .Cells(Irow + 30, iCol)).Value
                Case "Tent Rm Projected"
                    .Range(.Cells(Irow, iCol), .Cells(Irow + 30, iCol)).Formula = "=IF(A" & Irow & "=""Actual"",0,IFERROR(VLOOKUP($B" & Irow & ",OYprojData,3,FALSE),0))"
                    .Range(.Cells(Irow, iCol), .Cells(Irow + 30, iCol)).Value = .Range(.Cells(Irow, iCol), .Cells(Irow + 30, iCol)).Value
                Case "Tent Rev Projected"
                    .Range(.Cells(Irow, iCol), .Cells(Irow + 30, iCol)).Formula = "=IF(A" & Irow & "=""Actual"",0,IFERROR(VLOOKUP($B" & Irow & ",OYprojData,10,FALSE),0))"
                    .Range(.Cells(Irow, iCol), .Cells(Irow + 30, iCol)).Value = .Range(.Cells(Irow, iCol), .Cells(Irow + 30, iCol)).Value
                Case "Tobes Rm Projected"
                    .Range(.Cells(Irow, iCol), .Cells(Irow + 30, iCol)).Formula = "=IF(A" & Irow & "=""Actual"",0,IFERROR(VLOOKUP($B" & Irow & ",OYprojData,4,FALSE),0))"
                    .Range(.Cells(Irow, iCol), .Cells(Irow + 30, iCol)).Value = .Range(.Cells(Irow, iCol), .Cells(Irow + 30, iCol)).Value
                Case "Tobes Revenue Projected"
                    .Range(.Cells(Irow, iCol), .Cells(Irow + 30, iCol)).Formula = "=IF(A" & Irow & "=""Actual"",0,IFERROR(VLOOKUP($B" & Irow & ",OYprojData,11,FALSE),0))"
                    .Range(.Cells(Irow, iCol), .Cells(Irow + 30, iCol)).Value = .Range(.Cells(Irow, iCol), .Cells(Irow + 30, iCol)).Value
                Case "Contract Rm Projected"
                    .Range(.Cells(Irow, iCol), .Cells(Irow + 30, iCol)).Formula = "=IFERROR(VLOOKUP($B" & Irow & ",OYprojData,6,FALSE),0)"
                    .Range(.Cells(Irow, iCol), .Cells(Irow + 30, iCol)).Value = .Range(.Cells(Irow, iCol), .Cells(Irow + 30, iCol)).Value
                Case "Contract Rev Projected"
                    .Range(.Cells(Irow, iCol), .Cells(Irow + 30, iCol)).Formula = "=IFERROR(VLOOKUP($B" & Irow & ",OYprojData,13,FALSE),0)"
                    .Range(.Cells(Irow, iCol), .Cells(Irow + 30, iCol)).Value = .Range(.Cells(Irow, iCol), .Cells(Irow + 30, iCol)).Value
                Case "Contract Act LY"
                    .Range(.Cells(Irow, iCol), .Cells(Irow + 30, iCol)).Formula = "=IFERROR(VLOOKUP($B" & Irow & "-364,OYprojData,6,FALSE),0)"
                    .Range(.Cells(Irow, iCol), .Cells(Irow + 30, iCol)).Value = .Range(.Cells(Irow, iCol), .Cells(Irow + 30, iCol)).Value
                Case "Contract Rev Act LY"
                    .Range(.Cells(Irow, iCol), .Cells(Irow + 30, iCol)).Formula = "=IFERROR(VLOOKUP($B" & Irow & "-364,OYprojData,13,FALSE),0)"
                    .Range(.Cells(Irow, iCol), .Cells(Irow + 30, iCol)).Value = .Range(.Cells(Irow, iCol), .Cells(Irow + 30, iCol)).Value
                Case "Transient Rm Projected"
                    .Range(.Cells(Irow, iCol), .Cells(Irow + 30, iCol)).Formula = "=IFERROR(VLOOKUP($B" & Irow & ",OYprojData,5,FALSE),0)"
                    .Range(.Cells(Irow, iCol), .Cells(Irow + 30, iCol)).Value = .Range(.Cells(Irow, iCol), .Cells(Irow + 30, iCol)).Value
                Case "Transient Rev Projected"
                    .Range(.Cells(Irow, iCol), .Cells(Irow + 30, iCol)).Formula = "=IFERROR(VLOOKUP($B" & Irow & ",OYprojData,12,FALSE),0)"
                    .Range(.Cells(Irow, iCol), .Cells(Irow + 30, iCol)).Value = .Range(.Cells(Irow, iCol), .Cells(Irow + 30, iCol)).Value
                Case "Transient OTB Rm TY"
                    .Range(.Cells(Irow, iCol), .Cells(Irow + 30, iCol)).Formula = "=IFERROR(VLOOKUP($B" & Irow & ",GRAMSSR!$A$1:$B$1500,2,FALSE),0)"
                    .Range(.Cells(Irow, iCol), .Cells(Irow + 30, iCol)).Value = .Range(.Cells(Irow, iCol), .Cells(Irow + 30, iCol)).Value
                Case "Transient OTB ADR TY"
                    .Range(.Cells(Irow, iCol), .Cells(Irow + 30, iCol)).Formula = "=IFERROR(VLOOKUP($B" & Irow & ",GRAMSSR!$A$1:$E$1500,5,FALSE),0)"
                    .Range(.Cells(Irow, iCol), .Cells(Irow + 30, iCol)).Value = .Range(.Cells(Irow, iCol), .Cells(Irow + 30, iCol)).Value
                Case "Trn Rm Act TY"
                    .Range(.Cells(Irow, iCol), .Cells(Irow + 30, iCol)).Formula = "=IF(A" & Irow & "=""Actual"",INDEX($DS$6:$FB$507,row()-5,MATCH(""Transient Rm Projected"",$DS$5:$FB$5,0)),0)"
                    .Range(.Cells(Irow, iCol), .Cells(Irow + 30, iCol)).Value = .Range(.Cells(Irow, iCol), .Cells(Irow + 30, iCol)).Value
                Case "Trn Rev Act TY"
                    .Range(.Cells(Irow, iCol), .Cells(Irow + 30, iCol)).Formula = "=IF(A" & Irow & "=""Actual"",INDEX($DS$6:$FB$507,row()-5,MATCH(""Transient Rev Projected"",$DS$5:$FB$5,0)),0)"
                    .Range(.Cells(Irow, iCol), .Cells(Irow + 30, iCol)).Value = .Range(.Cells(Irow, iCol), .Cells(Irow + 30, iCol)).Value
                Case "Total Trn Rm Act LY"
                    .Range(.Cells(Irow, iCol), .Cells(Irow + 30, iCol)).Formula = "=IFERROR(VLOOKUP($B" & Irow & "-364,OYprojData,5,FALSE),0)"
                    .Range(.Cells(Irow, iCol), .Cells(Irow + 30, iCol)).Value = .Range(.Cells(Irow, iCol), .Cells(Irow + 30, iCol)).Value
                Case "Total Trn Rev Act LY"
                    .Range(.Cells(Irow, iCol), .Cells(Irow + 30, iCol)).Formula = "=IFERROR(VLOOKUP($B" & Irow & "-364,OYprojData,12,FALSE),0)"
                    .Range(.Cells(Irow, iCol), .Cells(Irow + 30, iCol)).Value = .Range(.Cells(Irow, iCol), .Cells(Irow + 30, iCol)).Value
                Case "SEG10LY Rm"
                    .Range(.Cells(Irow, iCol), .Cells(Irow + 30, iCol)).Formula = "=IF(A" & Irow & "=""Actual"",0,IFERROR(GETPIVOTDATA(""RN_"",SEG10_LY!$Q$4,""SEGtoInclude"",""include"",""Converted Date"",DATE(YEAR($B" & Irow & "),MONTH($B" & Irow & "),DAY($B" & Irow & "))),0))"
                    .Range(.Cells(Irow, iCol), .Cells(Irow + 30, iCol)).Value = .Range(.Cells(Irow, iCol), .Cells(Irow + 30, iCol)).Value
                Case "SEG10LYRev"
                    .Range(.Cells(Irow, iCol), .Cells(Irow + 30, iCol)).Formula = "=IF(A" & Irow & "=""Actual"",0,IFERROR(GETPIVOTDATA(""Rev_Excl_VAT"",SEG10_LY!$Q$5,""SEGtoInclude"",""Include"",""Converted Date"",DATE(YEAR($B" & Irow & "),MONTH($B" & Irow & "),DAY($B" & Irow & "))),0))"
                    .Range(.Cells(Irow, iCol), .Cells(Irow + 30, iCol)).Value = .Range(.Cells(Irow, iCol), .Cells(Irow + 30, iCol)).Value
                Case "Trn Rm Act STLY"
                    .Range(.Cells(Irow, iCol), .Cells(Irow + 30, iCol)).Formula = "=IF(A" & Irow & "=""Actual"",IFERROR(VLOOKUP($B" & Irow & "-364,OYprojData,5,FALSE),0),0)"
                    .Range(.Cells(Irow, iCol), .Cells(Irow + 30, iCol)).Value = .Range(.Cells(Irow, iCol), .Cells(Irow + 30, iCol)).Value
                Case "Trn Rev Act STLY"
                    .Range(.Cells(Irow, iCol), .Cells(Irow + 30, iCol)).Formula = "=IF(A" & Irow & "=""Actual"",IFERROR(VLOOKUP($B" & Irow & "-364,OYprojData,12,FALSE),0),0)"
                    .Range(.Cells(Irow, iCol), .Cells(Irow + 30, iCol)).Value = .Range(.Cells(Irow, iCol), .Cells(Irow + 30, iCol)).Value
                Case "Allotment OTB"
                    .Range(.Cells(Irow, iCol), .Cells(Irow + 30, iCol)).Formula = "=If(A" & Irow & "=""Actual"",0,IFERROR(VLOOKUP($B" & Irow & ",OYv2Data,MATCH(""Allotment Rooms Sold"",OYv2Data!$A$9:$FZ$9,0),FALSE),""""))"
                    .Range(.Cells(Irow, iCol), .Cells(Irow + 30, iCol)).Value = .Range(.Cells(Irow, iCol), .Cells(Irow + 30, iCol)).Value
            End Select
        Next iCol
        For iCol = 117 To 157 'apply calculation for SEG10 LY Fx, total group room projected, and total group revenue (G)
            Select Case .Cells(5, iCol).Value
                Case "SEGLY Fx converter" 'Calculate Fx for SEGLY last year Fx divided by this year Fx
                    .Range(.Cells(Irow, iCol), .Cells(Irow + 30, iCol)).Formula = "=SUM(IFERROR(INDEX($DS$6:$FB$507,MATCH($B" & Irow & ",$DS$6:$DS$507,0),MATCH(""Fx Last Year"",$DS$5:$FB$5,0)),1)/" & _
                                                                                        "IFERROR(INDEX($DS$6:$FB$507,MATCH($B" & Irow & ",$DS$6:$DS$507,0),MATCH(""Fx This Year"",$DS$5:$FB$5,0)),0))"
                    .Range(.Cells(Irow, iCol), .Cells(Irow + 30, iCol)).Value = .Range(.Cells(Irow, iCol), .Cells(Irow + 30, iCol)).Value
                
                Case "Rev Plan Ttl Grp Rm Proj" 'calculate the total group room nights (def rm, tent rm, tobes rm)
                    .Range(.Cells(Irow, iCol), .Cells(Irow + 30, iCol)).Formula = "=SUM(INDEX($EC$6:$FB$507,MATCH($B" & Irow & ",$DS$6:$DS$507,0),MATCH(""group Def Rm Projected"",$EC$5:$FB$5,0))," & _
                                                                                        "INDEX($EC$6:$FB$507,MATCH($B" & Irow & ",$DS$6:$DS$507,0),MATCH(""Tent Rm Projected"",$EC$5:$FB$5,0))," & _
                                                                                        "INDEX($EC$6:$FB$507,MATCH($B" & Irow & ",$DS$6:$DS$507,0),MATCH(""Tobes Rm Projected"",$EC$5:$FB$5,0)))"
                    .Range(.Cells(Irow, iCol), .Cells(Irow + 30, iCol)).Value = .Range(.Cells(Irow, iCol), .Cells(Irow + 30, iCol)).Value
                
                Case "Rev Plan Ttl Grp Rev Proj" 'Calculate the total group revenue (def, tent & tobes)
                    .Range(.Cells(Irow, iCol), .Cells(Irow + 30, iCol)).Formula = "=SUM(INDEX($EC$6:$FB$507,MATCH($B" & Irow & ",$DS$6:$DS$507,0),MATCH(""group Def Rev Projected"",$EC$5:$FB$5,0))," & _
                                                                                        "INDEX($EC$6:$FB$507,MATCH($B" & Irow & ",$DS$6:$DS$507,0),MATCH(""Tent Rev Projected"",$EC$5:$FB$5,0))," & _
                                                                                        "INDEX($EC$6:$FB$507,MATCH($B" & Irow & ",$DS$6:$DS$507,0),MATCH(""Tobes Revenue Projected"",$EC$5:$FB$5,0)))"
                    .Range(.Cells(Irow, iCol), .Cells(Irow + 30, iCol)).Value = .Range(.Cells(Irow, iCol), .Cells(Irow + 30, iCol)).Value
            End Select
        Next iCol
    Next Irow
    End With
    Irow = Empty: iCol = Empty
    For Irow = 474 To 504
        Select Case ws_DayXDay.Range("DM" & Irow).Value
            Case vbNullString
                ws_DayXDay.Range("DM" & Irow & ":DR504").ClearContents
                ws_DayXDay.Range("DT" & Irow & ":GS504").ClearContents
            Exit For
        End Select
    Next
    Irow = Empty
    
    ws_DayXDay.Calculate
        
    If (ws_DayXDay.Range("FH6").Value = vbNullString Or ws_DayXDay.Range("FH6").Value = 0) Then
        ws_DayXDay.Range("FH6:GQ507").Value = ws_DayXDay.Range("DS6:FB507").Value
    End If
    
    'spread data for day by day tab
    With ws_DayXDay
        For Irow = 6 To 504 Step 39
            For iCol = 3 To 68
                Select Case .Cells(5, iCol).Value
                    Case "Events Notes"
                        .Range(.Cells(Irow, iCol), .Cells(Irow + 30, iCol)).Formula = "=Trim(IFERROR(IF(VLOOKUP($B" & Irow & ",OYprojData,25,false)>0,VLOOKUP($B" & Irow & ",OYprojData,25,false),VLOOKUP($B" & Irow & ",OYprojData,18,false)&"" ""&VLOOKUP($B" & Irow & ",OYprojData,19,false)),""""))"
                        .Range(.Cells(Irow, iCol), .Cells(Irow + 30, iCol)).Value = .Range(.Cells(Irow, iCol), .Cells(Irow + 30, iCol)).Value
                        .Range(.Cells(Irow, iCol), .Cells(Irow + 30, iCol)).Locked = False
                    Case "Total Hotel Occ OYv2"
                        .Range(.Cells(Irow, iCol), .Cells(Irow + 30, iCol)).Formula = "=IF($A" & Irow & "=""Actual"",ROUND(INDEX($DS$6:$FB$507,MATCH($B" & Irow & ",$DS$6:$DS$507,0),MATCH(""User Occ Proj"",$DS$5:$FB$5,0)),2),INDEX($DS$6:$FB$507,MATCH($B" & Irow & ",$DS$6:$DS$507,0),MATCH(""OYv2 Occ"",$DS$5:$FB$5,0)))"
                        .Range(.Cells(Irow, iCol), .Cells(Irow + 30, iCol)).Value = .Range(.Cells(Irow, iCol), .Cells(Irow + 30, iCol)).Value
                    Case "Occ Var OYv2"
                        .Range(.Cells(Irow, iCol), .Cells(Irow + 30, iCol)).Formula = "=IFERROR(INDEX($DS$6:$FB$507,MATCH($B" & Irow & ",$DS$6:$DS$507,0),MATCH(""OYv2 Occ"",$DS$5:$FB$5,0))-IFERROR(INDEX($FH$6:$GQ$507,MATCH(B" & Irow & ",$FH$6:$FH$507,0),MATCH(""OYv2 Occ"",$FH$5:$GQ$5,0)),0),0)*100"
                        .Range(.Cells(Irow, iCol), .Cells(Irow + 30, iCol)).Value = .Range(.Cells(Irow, iCol), .Cells(Irow + 30, iCol)).Value
                    Case "Proj Occ User RP"
                        .Range(.Cells(Irow, iCol), .Cells(Irow + 30, iCol)).Formula = "=INDEX($DS$6:$FB$507,MATCH($B" & Irow & ",$DS$6:$DS$507,0),MATCH(""User Occ Proj"",$DS$5:$FB$5,0))"
                        .Range(.Cells(Irow, iCol), .Cells(Irow + 30, iCol)).Value = .Range(.Cells(Irow, iCol), .Cells(Irow + 30, iCol)).Value
                    Case "Occ LY Act"
                        .Range(.Cells(Irow, iCol), .Cells(Irow + 30, iCol)).Formula = "=IFERROR(INDEX($DS$6:$FB$507,MATCH($B" & Irow & ",$DS$6:$DS$507,0),MATCH(""Occ LY Act"",$DS$5:$FB$5,0)),"""")"
                        .Range(.Cells(Irow, iCol), .Cells(Irow + 30, iCol)).Value = .Range(.Cells(Irow, iCol), .Cells(Irow + 30, iCol)).Value
                    Case "Avail Trn Supply"
                        .Range(.Cells(Irow, iCol), .Cells(Irow + 30, iCol)).Formula = "=IF(A" & Irow & "=""Actual"",0,IFERROR(VLOOKUP($B" & Irow & ",OYv2Data,MATCH(""Total Available Transient Supply"",OYv2Data!$A$9:$FZ$9,0),FALSE),0))"
                        .Range(.Cells(Irow, iCol), .Cells(Irow + 30, iCol)).Value = .Range(.Cells(Irow, iCol), .Cells(Irow + 30, iCol)).Value
                    Case "System Rem Dem"
                        .Range(.Cells(Irow, iCol), .Cells(Irow + 30, iCol)).Formula = "=IF(A" & Irow & "=""Actual"",0,IFERROR(VLOOKUP($B" & Irow & ",OYv2Data,MATCH(""Sys Rem Dem"",OYv2Data!$A$9:$FZ$9,0),FALSE),""""))"
                        .Range(.Cells(Irow, iCol), .Cells(Irow + 30, iCol)).Value = .Range(.Cells(Irow, iCol), .Cells(Irow + 30, iCol)).Value
                    Case "Applied Rem Dem"
                        .Range(.Cells(Irow, iCol), .Cells(Irow + 30, iCol)).Formula = "=IF(A" & Irow & "=""Actual"",0,IFERROR(VLOOKUP($B" & Irow & ",OYv2Data,MATCH(""Applied Rem Dem"",OYv2Data!$A$9:$FZ$9,0),FALSE),""""))"
                        .Range(.Cells(Irow, iCol), .Cells(Irow + 30, iCol)).Value = .Range(.Cells(Irow, iCol), .Cells(Irow + 30, iCol)).Value
                    Case "Rem Dem STLY"
                        .Range(.Cells(Irow, iCol), .Cells(Irow + 30, iCol)).Formula = "=IF(A" & Irow & "=""Actual"",0,IFERROR(VLOOKUP($B" & Irow & ",OYv2Data,MATCH(""Rem Dem STLY"",OYv2Data!$A$9:$FZ$9,0),FALSE),""""))"
                        .Range(.Cells(Irow, iCol), .Cells(Irow + 30, iCol)).Value = .Range(.Cells(Irow, iCol), .Cells(Irow + 30, iCol)).Value
                    Case "Addl Dem"
                        .Range(.Cells(Irow, iCol), .Cells(Irow + 30, iCol)).Formula = "=IF(A" & Irow & "=""Actual"",0,IFERROR(VLOOKUP($B" & Irow & ",OYv2Data,MATCH(""Additional Demand"",OYv2Data!$A$9:$FZ$9,0),FALSE),""""))"
                        .Range(.Cells(Irow, iCol), .Cells(Irow + 30, iCol)).Value = .Range(.Cells(Irow, iCol), .Cells(Irow + 30, iCol)).Value
                    Case "Addl Dem STLY"
                        .Range(.Cells(Irow, iCol), .Cells(Irow + 30, iCol)).Formula = "=IF(A" & Irow & "=""Actual"",0,IFERROR(VLOOKUP($B" & Irow & ",OYv2Data,MATCH(""Additional Demand STLY"",OYv2Data!$A$9:$FZ$9,0),FALSE),""""))"
                        .Range(.Cells(Irow, iCol), .Cells(Irow + 30, iCol)).Value = .Range(.Cells(Irow, iCol), .Cells(Irow + 30, iCol)).Value
                    Case "Ttl Trn Dem"
                        .Range(.Cells(Irow, iCol), .Cells(Irow + 30, iCol)).Formula = "=IF($A" & Irow & "=""Actual"",0,IFERROR(INDEX($DS$6:$FB$507,MATCH($B" & Irow & ",$DS$6:$DS$507,0),MATCH(""Ttl Trn Dem"",$DS$5:$FB$5,0)),0))"
                        .Range(.Cells(Irow, iCol), .Cells(Irow + 30, iCol)).Value = .Range(.Cells(Irow, iCol), .Cells(Irow + 30, iCol)).Value
                    Case "Ttl Trn Dem Var"
                        .Range(.Cells(Irow, iCol), .Cells(Irow + 30, iCol)).Formula = "=IF($A" & Irow & "=""Actual"",0,INDEX($DS$6:$FB$507,MATCH($B" & Irow & ",$DS$6:$DS$507,0),MATCH(""Ttl Trn Dem"",$DS$5:$FB$5,0))-IFERROR(INDEX($FH$6:$GQ$507,MATCH($B" & Irow & ",$FH$6:$FH$507,0),MATCH(""Ttl Trn Dem"",$FH$5:$GQ$5,0)),0))"
                        .Range(.Cells(Irow, iCol), .Cells(Irow + 30, iCol)).Value = .Range(.Cells(Irow, iCol), .Cells(Irow + 30, iCol)).Value
                    Case "Ttl Trn Dem STLY"
                        .Range(.Cells(Irow, iCol), .Cells(Irow + 30, iCol)).Formula = "=IF($A" & Irow & "=""Actual"",0,IFERROR(INDEX($DS$6:$FB$507,MATCH($B" & Irow & ",$DS$6:$DS$507,0),MATCH(""Ttl Trn Dem LY"",$DS$5:$FB$5,0)),0))"
                        .Range(.Cells(Irow, iCol), .Cells(Irow + 30, iCol)).Value = .Range(.Cells(Irow, iCol), .Cells(Irow + 30, iCol)).Value
                    Case "Ttl Trn Dem STLY Var"
                        .Range(.Cells(Irow, iCol), .Cells(Irow + 30, iCol)).Formula = "=IF($A" & Irow & "=""Actual"",0,INDEX($DS$6:$FB$507,MATCH($B" & Irow & ",$DS$6:$DS$507,0),MATCH(""Ttl Trn Dem LY"",$DS$5:$FB$5,0))-IFERROR(INDEX($FH$6:$GQ$507,MATCH($B" & Irow & ",$FH$6:$FH$507,0),MATCH(""Ttl Trn Dem LY"",$FH$5:$GQ$5,0)),0))"
                        .Range(.Cells(Irow, iCol), .Cells(Irow + 30, iCol)).Value = .Range(.Cells(Irow, iCol), .Cells(Irow + 30, iCol)).Value
                    Case "MARSHA Grp Rm Authorized"
                        .Range(.Cells(Irow, iCol), .Cells(Irow + 30, iCol)).Formula = "=IF(A" & Irow & "=""Actual"",0,IFERROR(VLOOKUP($B" & Irow & ",OYv2Data,MATCH(""Group Room Block Authorized"",OYv2Data!$A$9:$FZ$9,0),FALSE),0))"
                        .Range(.Cells(Irow, iCol), .Cells(Irow + 30, iCol)).Value = .Range(.Cells(Irow, iCol), .Cells(Irow + 30, iCol)).Value
                    Case "MARSHA Grp Rm Booked"
                        .Range(.Cells(Irow, iCol), .Cells(Irow + 30, iCol)).Formula = "=IF(A" & Irow & "=""Actual"",0,IFERROR(VLOOKUP($B" & Irow & ",OYv2Data,MATCH(""Group Booked"",OYv2Data!$A$9:$FZ$9,0),FALSE),0))"
                        .Range(.Cells(Irow, iCol), .Cells(Irow + 30, iCol)).Value = .Range(.Cells(Irow, iCol), .Cells(Irow + 30, iCol)).Value
                    Case "Slippage Def Proj vs Bkd"
                        If Irow = 6 Then .Range(.Cells(Irow, iCol), .Cells(Irow + 30, iCol)).Formula = "=IFERROR(IF(SETUP!$K$30=""No"","""",INDEX($B$6:$FB$507,MATCH($B" & Irow & ",$B$6:$B$507,0),MATCH(""group Def Rm Projected"",$B$5:$FB$5,0))/INDEX($B$6:$DN$507,MATCH($B" & Irow & ",$B$6:$B$507,0),MATCH(""MARSHA Grp Rm Booked"",$B$5:$DN$5,0))-1),"""")"
                        If Irow = 45 Then .Range(.Cells(Irow, iCol), .Cells(Irow + 30, iCol)).Formula = "=IFERROR(IF(SETUP!$K$30=""No"","""",INDEX($B$6:$FB$507,MATCH($B" & Irow & ",$B$6:$B$507,0),MATCH(""group Def Rm Projected"",$B$5:$FB$5,0))/INDEX($B$6:$DN$507,MATCH($B" & Irow & ",$B$6:$B$507,0),MATCH(""MARSHA Grp Rm Authorized"",$B$5:$DN$5,0))-1),"""")"
                        If Irow > 45 Then .Range(.Cells(Irow, iCol), .Cells(Irow + 30, iCol)).Formula = "=IFERROR(IF(SETUP!$K$30=""No"","""",INDEX($B$6:$FB$507,MATCH($B" & Irow & ",$B$6:$B$507,0),MATCH(""group Def Rm Projected"",$B$5:$FB$5,0))/INDEX($B$6:$DN$507,MATCH($B" & Irow & ",$B$6:$B$507,0),MATCH(""MARSHA Grp Rm Authorized"",$B$5:$DN$5,0))-1),"""")"
                        .Range(.Cells(Irow, iCol), .Cells(Irow + 30, iCol)).Value = .Range(.Cells(Irow, iCol), .Cells(Irow + 30, iCol)).Value
                    Case "Ttl Grp Rm Proj Oyv2"
                        .Range(.Cells(Irow, iCol), .Cells(Irow + 30, iCol)).Formula = "=IFERROR(INDEX($DS$6:$FB$507,MATCH($B" & Irow & ",$DS$6:$DS$507,0),MATCH(""group OYv2 Proj"",$DS$5:$FB$5,0)),0)"
                        .Range(.Cells(Irow, iCol), .Cells(Irow + 30, iCol)).Value = .Range(.Cells(Irow, iCol), .Cells(Irow + 30, iCol)).Value
                    Case "Ttl Grp Rm Oyv2 Var"
                        .Range(.Cells(Irow, iCol), .Cells(Irow + 30, iCol)).Formula = "=IF(A" & Irow & "=""Actual"",0,INDEX($DS$6:$FB$507,MATCH($B" & Irow & ",$DS$6:$DS$507,0),MATCH(""group OYv2 Proj"",$DS$5:$FB$5,0))-IFERROR(INDEX($FH$6:$GQ$507,MATCH($B" & Irow & ",$FH$6:$FH$507,0),MATCH(""group OYv2 Proj"",$FH$5:$GQ$5,0)),0))"
                        .Range(.Cells(Irow, iCol), .Cells(Irow + 30, iCol)).Value = .Range(.Cells(Irow, iCol), .Cells(Irow + 30, iCol)).Value
                    Case "Ttl Grp Rm Proj RP"
                        .Range(.Cells(Irow, iCol), .Cells(Irow + 30, iCol)).Formula = "=INDEX($DS$6:$FB$507,MATCH($B" & Irow & ",$DS$6:$DS$507,0),MATCH(""Rev Plan Ttl Grp Rm Proj"",$DS$5:$FB$5,0))"
                        .Range(.Cells(Irow, iCol), .Cells(Irow + 30, iCol)).Value = .Range(.Cells(Irow, iCol), .Cells(Irow + 30, iCol)).Value
                    Case "Ttl Grp Rm Var RP"
                        .Range(.Cells(Irow, iCol), .Cells(Irow + 30, iCol)).Formula = "=IFERROR(INDEX($DS$6:$FB$507,MATCH($B" & Irow & ",$DS$6:$DS$507,0),MATCH(""Rev Plan Ttl Grp Rm Proj"",$DS$5:$FB$5,0))-IFERROR(INDEX($FH$6:$GQ$507,MATCH($B" & Irow & ",$FH$6:$FH$507,0),MATCH(""Rev Plan Ttl Grp Rm Proj"",$FH$5:$GQ$5,0)),0),0)"
                        .Range(.Cells(Irow, iCol), .Cells(Irow + 30, iCol)).Value = .Range(.Cells(Irow, iCol), .Cells(Irow + 30, iCol)).Value
                    Case "Ttl Grp Rm Actual LY RP"
                        .Range(.Cells(Irow, iCol), .Cells(Irow + 30, iCol)).Formula = "=IFERROR(INDEX($DS$6:$FB$507,MATCH($B" & Irow & ",$DS$6:$DS$507,0),MATCH(""Grp Rm Act LY"",$DS$5:$FB$5,0)),0)"
                        .Range(.Cells(Irow, iCol), .Cells(Irow + 30, iCol)).Value = .Range(.Cells(Irow, iCol), .Cells(Irow + 30, iCol)).Value
                    Case "Ttl Grp ADR (G) Proj RP"
                        .Range(.Cells(Irow, iCol), .Cells(Irow + 30, iCol)).Formula = "=IFERROR(INDEX($DS$6:$FB$507,MATCH($B" & Irow & ",$DS$6:$DS$507,0),MATCH(""Rev Plan Ttl Grp Rev Proj"",$DS$5:$FB$5,0))/INDEX($DS$6:$FB$507,MATCH($B" & Irow & ",$DS$6:$DS$507,0),MATCH(""Rev Plan Ttl Grp Rm Proj"",$DS$5:$FB$5,0))/INDEX($DS$6:$FB$507,MATCH($B" & Irow & ",$DS$6:$DS$507,0),MATCH(""Fx This Year"",$DS$5:$FB$5,0)),0)"
                        .Range(.Cells(Irow, iCol), .Cells(Irow + 30, iCol)).Value = .Range(.Cells(Irow, iCol), .Cells(Irow + 30, iCol)).Value
                    Case "Ttl Grp ADR (G) Var RP"
                        .Range(.Cells(Irow, iCol), .Cells(Irow + 30, iCol)).Formula = "=IFERROR(INDEX($B$6:$BN$507,MATCH($B" & Irow & ",$B$6:$B$507,0),MATCH(""Ttl Grp ADR (G) Proj RP"",$B$5:$BN$5,0))-INDEX($FH$6:$GQ$507,MATCH($B" & Irow & ",$FH$6:$FH$507,0),MATCH(""Rev Plan Ttl Grp Rev Proj"",$FH$5:$GQ$5,0))/INDEX($FH$6:$GQ$507,MATCH($B" & Irow & ",$FH$6:$FH$507,0),MATCH(""Rev Plan Ttl Grp Rm Proj"",$FH$5:$GQ$5,0))/INDEX($FH$6:$GQ$507,MATCH($B" & Irow & ",$DS$6:$DS$507,0),MATCH(""Fx This Year"",$FH$5:$GQ$5,0)),0)"
                        .Range(.Cells(Irow, iCol), .Cells(Irow + 30, iCol)).Value = .Range(.Cells(Irow, iCol), .Cells(Irow + 30, iCol)).Value
                    Case "Ttl Grp ADR (G) LY"
                        .Range(.Cells(Irow, iCol), .Cells(Irow + 30, iCol)).Formula = "=IFERROR(INDEX($DS$6:$FB$507,MATCH($B" & Irow & ",$DS$6:$DS$507,0),MATCH(""GRP Rev Plan Ttl Rev Act LY"",$DS$5:$FB$5,0))/INDEX($DS$6:$FB$507,MATCH($B" & Irow & ",$DS$6:$DS$507,0),MATCH(""Grp Rm Act LY"",$DS$5:$FB$5,0))/INDEX($DS$6:$FB$507,MATCH($B" & Irow & ",$DS$6:$DS$507,0),MATCH(""Fx This Year"",$DS$5:$FB$5,0)),0)"
                        .Range(.Cells(Irow, iCol), .Cells(Irow + 30, iCol)).Value = .Range(.Cells(Irow, iCol), .Cells(Irow + 30, iCol)).Value
                    Case "Def Rm Proj A/U RP"
                        .Range(.Cells(Irow, iCol), .Cells(Irow + 30, iCol)).Formula = "=INDEX($DS$6:$FB$507,MATCH($B" & Irow & ",$DS$6:$DS$507,0),MATCH(""group Def Rm Projected"",$DS$5:$FB$5,0))"
                        .Range(.Cells(Irow, iCol), .Cells(Irow + 30, iCol)).Value = .Range(.Cells(Irow, iCol), .Cells(Irow + 30, iCol)).Value
                    Case "Def Rm Proj Var"
                        .Range(.Cells(Irow, iCol), .Cells(Irow + 30, iCol)).Formula = "=IFERROR(INDEX($DS$6:$FB$507,MATCH($B" & Irow & ",$DS$6:$DS$507,0),MATCH(""group Def Rm Projected"",$DS$5:$FB$5,0))-INDEX($FH$6:$GQ$507,MATCH($B" & Irow & ",$FH$6:$FH$507,0),MATCH(""group Def Rm Projected"",$FH$5:$GQ$5,0)),0)"
                        .Range(.Cells(Irow, iCol), .Cells(Irow + 30, iCol)).Value = .Range(.Cells(Irow, iCol), .Cells(Irow + 30, iCol)).Value
                    Case "Def ADR A/U RP"
                        .Range(.Cells(Irow, iCol), .Cells(Irow + 30, iCol)).Formula = "=IFERROR(INDEX($DS$6:$FB$507,MATCH($B" & Irow & ",$DS$6:$DS$507,0),MATCH(""group Def Rev Projected"",$DS$5:$FB$5,0))/INDEX($DS$6:$FB$507,MATCH($B" & Irow & ",$DS$6:$DS$507,0),MATCH(""group Def Rm Projected"",$DS$5:$FB$5,0))/INDEX($DS$6:$FB$507,MATCH($B" & Irow & ",$DS$6:$DS$507,0),MATCH(""Fx This Year"",$DS$5:$FB$5,0)),0)"
                        .Range(.Cells(Irow, iCol), .Cells(Irow + 30, iCol)).Value = .Range(.Cells(Irow, iCol), .Cells(Irow + 30, iCol)).Value
                    Case "Tent Rm Proj RP"
                        .Range(.Cells(Irow, iCol), .Cells(Irow + 30, iCol)).Formula = "=INDEX($DS$6:$FB$507,MATCH($B" & Irow & ",$DS$6:$DS$507,0),MATCH(""Tent Rm Projected"",$DS$5:$FB$5,0))"
                        .Range(.Cells(Irow, iCol), .Cells(Irow + 30, iCol)).Value = .Range(.Cells(Irow, iCol), .Cells(Irow + 30, iCol)).Value
                    Case "Tent Rm Proj Var"
                        .Range(.Cells(Irow, iCol), .Cells(Irow + 30, iCol)).Formula = "=IFERROR(INDEX($DS$6:$FB$507,MATCH($B" & Irow & ",$DS$6:$DS$507,0),MATCH(""Tent Rm Projected"",$DS$5:$FB$5,0))-INDEX($FH$6:$GQ$507,MATCH($B" & Irow & ",$FH$6:$FH$507,0),MATCH(""Tent Rm Projected"",$FH$5:$GQ$5,0)),0)"
                        .Range(.Cells(Irow, iCol), .Cells(Irow + 30, iCol)).Value = .Range(.Cells(Irow, iCol), .Cells(Irow + 30, iCol)).Value
                    Case "Tent ADR (G) RP"
                        .Range(.Cells(Irow, iCol), .Cells(Irow + 30, iCol)).Formula = "=IFERROR(INDEX($DS$6:$FB$507,MATCH($B" & Irow & ",$DS$6:$DS$507,0),MATCH(""Tent Rev Projected"",$DS$5:$FB$5,0))/INDEX($DS$6:$FB$507,MATCH($B" & Irow & ",$DS$6:$DS$507,0),MATCH(""Tent Rm Projected"",$DS$5:$FB$5,0))/INDEX($DS$6:$FB$507,MATCH($B" & Irow & ",$DS$6:$DS$507,0),MATCH(""Fx This Year"",$DS$5:$FB$5,0)),0)"
                        .Range(.Cells(Irow, iCol), .Cells(Irow + 30, iCol)).Value = .Range(.Cells(Irow, iCol), .Cells(Irow + 30, iCol)).Value
                    Case "Tobes Rm Proj RP"
                        .Range(.Cells(Irow, iCol), .Cells(Irow + 30, iCol)).Formula = "=INDEX($DS$6:$FB$507,MATCH($B" & Irow & ",$DS$6:$DS$507,0),MATCH(""Tobes Rm Projected"",$DS$5:$FB$5,0))"
                        .Range(.Cells(Irow, iCol), .Cells(Irow + 30, iCol)).Value = .Range(.Cells(Irow, iCol), .Cells(Irow + 30, iCol)).Value
                    Case "Tobes Rm Var"
                        .Range(.Cells(Irow, iCol), .Cells(Irow + 30, iCol)).Formula = "=IFERROR(INDEX($DS$6:$FB$507,MATCH($B" & Irow & ",$DS$6:$DS$507,0),MATCH(""Tobes Rm Projected"",$DS$5:$FB$5,0))-INDEX($FH$6:$GQ$507,MATCH($B" & Irow & ",$FH$6:$FH$507,0),MATCH(""Tobes Rm Projected"",$FH$5:$GQ$5,0)),0)"
                        .Range(.Cells(Irow, iCol), .Cells(Irow + 30, iCol)).Value = .Range(.Cells(Irow, iCol), .Cells(Irow + 30, iCol)).Value
                    Case "Tobes ADR (G) RP"
                        .Range(.Cells(Irow, iCol), .Cells(Irow + 30, iCol)).Formula = "=IFERROR(INDEX($DS$6:$FB$507,MATCH($B" & Irow & ",$DS$6:$DS$507,0),MATCH(""Tobes Revenue Projected"",$DS$5:$FB$5,0))/INDEX($DS$6:$FB$507,MATCH($B" & Irow & ",$DS$6:$DS$507,0),MATCH(""Tobes Rm Projected"",$DS$5:$FB$5,0))/INDEX($DS$6:$FB$507,MATCH($B" & Irow & ",$DS$6:$DS$507,0),MATCH(""Fx This Year"",$DS$5:$FB$5,0)),0)"
                        .Range(.Cells(Irow, iCol), .Cells(Irow + 30, iCol)).Value = .Range(.Cells(Irow, iCol), .Cells(Irow + 30, iCol)).Value
                    Case "GPO Restrictions"
                        .Range(.Cells(Irow, iCol), .Cells(Irow + 30, iCol)).Formula = "=IF(or(A" & Irow & "=""Actual"",A" & Irow & "=""""),"""",IFERROR(VLOOKUP(B" & Irow & ",GPO!$A$2:$J$752,4,FALSE) & "" "" &VLOOKUP(B" & Irow & ",GPO!$A$2:$J$752,3,FALSE),""""))"
                        .Range(.Cells(Irow, iCol), .Cells(Irow + 30, iCol)).Value = .Range(.Cells(Irow, iCol), .Cells(Irow + 30, iCol)).Value
                        .Range(.Cells(Irow, iCol), .Cells(Irow + 30, iCol)).Interior.Pattern = xlNone
                        .Range(.Cells(Irow, iCol), .Cells(Irow + 30, iCol)).Locked = True
                    Case "GPO Minimum"
                        .Range(.Cells(Irow, iCol), .Cells(Irow + 30, iCol)).Formula = "=IF(or(A" & Irow & "=""Actual"",A" & Irow & "=""""),"""",IFERROR(VLOOKUP(B" & Irow & ",GPO!$A$2:$J$752,10,FALSE),""""))"
                        .Range(.Cells(Irow, iCol), .Cells(Irow + 30, iCol)).Value = .Range(.Cells(Irow, iCol), .Cells(Irow + 30, iCol)).Value
                    Case "MAR Restrictions"
                         .Range(.Cells(Irow, iCol), .Cells(Irow + 30, iCol)).Interior.Color = 13434879
                         .Range(.Cells(Irow, iCol), .Cells(Irow + 30, iCol)).Locked = False
                    Case "MAR Rate"
                         .Range(.Cells(Irow, iCol), .Cells(Irow + 30, iCol)).Formula = "=IF(or(A" & Irow & "=""Actual"",A" & Irow & "=""""),"""",IFERROR(VLOOKUP(B" & Irow & ",MARdelphi!$B$2:$C$2000,2,FALSE),""""))"
                         .Range(.Cells(Irow, iCol), .Cells(Irow + 30, iCol)).Value = .Range(.Cells(Irow, iCol), .Cells(Irow + 30, iCol)).Value
                    Case "Contract Rm Authorized"
                        .Range(.Cells(Irow, iCol), .Cells(Irow + 30, iCol)).Formula = "=IF(A" & Irow & "=""Actual"",0,IFERROR(VLOOKUP(B" & Irow & ",OYv2Data,MATCH(""Contract Room Block Authorized"",OYv2Data!$A$9:$FZ$9,0),FALSE),0))"
                        .Range(.Cells(Irow, iCol), .Cells(Irow + 30, iCol)).Value = .Range(.Cells(Irow, iCol), .Cells(Irow + 30, iCol)).Value
                    Case "Contract Rm Booked"
                        .Range(.Cells(Irow, iCol), .Cells(Irow + 30, iCol)).Formula = "=IF(A" & Irow & "=""Actual"",0,IFERROR(VLOOKUP(B" & Irow & ",OYv2Data,MATCH(""Contract Booked"",OYv2Data!$A$9:$FZ$9,0),FALSE),0))"
                        .Range(.Cells(Irow, iCol), .Cells(Irow + 30, iCol)).Value = .Range(.Cells(Irow, iCol), .Cells(Irow + 30, iCol)).Value
                    Case "Contract Proj A/U"
                        .Range(.Cells(Irow, iCol), .Cells(Irow + 30, iCol)).Formula = "=INDEX($DS$6:$FB$507,MATCH($B" & Irow & ",$DS$6:$DS$507,0),MATCH(""Contract Rm Projected"",$DS$5:$FB$5,0))"
                        .Range(.Cells(Irow, iCol), .Cells(Irow + 30, iCol)).Value = .Range(.Cells(Irow, iCol), .Cells(Irow + 30, iCol)).Value
                    Case "Contract Proj var"
                        .Range(.Cells(Irow, iCol), .Cells(Irow + 30, iCol)).Formula = "=IFERROR(INDEX($DS$6:$FB$507,MATCH($B" & Irow & ",$DS$6:$DS$507,0),MATCH(""Contract Rm Projected"",$DS$5:$FB$5,0))-INDEX($FH$6:$GQ$507,MATCH($B" & Irow & ",$FH$6:$FH$507,0),MATCH(""Contract Rm Projected"",$FH$5:$GQ$5,0)),0)"
                        .Range(.Cells(Irow, iCol), .Cells(Irow + 30, iCol)).Value = .Range(.Cells(Irow, iCol), .Cells(Irow + 30, iCol)).Value
                    Case "Contract Rm Actual LY"
                        .Range(.Cells(Irow, iCol), .Cells(Irow + 30, iCol)).Formula = "=INDEX($DS$6:$FB$507,MATCH($B" & Irow & ",$DS$6:$DS$507,0),MATCH(""Contract Act LY"",$DS$5:$FB$5,0))"
                        .Range(.Cells(Irow, iCol), .Cells(Irow + 30, iCol)).Value = .Range(.Cells(Irow, iCol), .Cells(Irow + 30, iCol)).Value
                    Case "Ttl Trn Rm OTB"
                        .Range(.Cells(Irow, iCol), .Cells(Irow + 30, iCol)).Formula = "=INDEX($DS$6:$FB$507,MATCH($B" & Irow & ",$DS$6:$DS$507,0),MATCH(""Transient OTB Rm TY"",$DS$5:$FB$5,0))"
                        .Range(.Cells(Irow, iCol), .Cells(Irow + 30, iCol)).Value = .Range(.Cells(Irow, iCol), .Cells(Irow + 30, iCol)).Value
                    Case "Trn Rm OTB Var"
                        .Range(.Cells(Irow, iCol), .Cells(Irow + 30, iCol)).Formula = "=IF(A" & Irow & "=""Actual"",0,INDEX($DS$6:$FB$507,MATCH($B" & Irow & ",$DS$6:$DS$507,0),MATCH(""Transient OTB Rm TY"",$DS$5:$FB$5,0))-IFERROR(INDEX($FH$6:$GQ$507,MATCH($B" & Irow & ",$FH$6:$FH$507,0),MATCH(""Transient OTB Rm TY"",$FH$5:$GQ$5,0)),0))"
                        .Range(.Cells(Irow, iCol), .Cells(Irow + 30, iCol)).Value = .Range(.Cells(Irow, iCol), .Cells(Irow + 30, iCol)).Value
                    Case "Ttl Trn Rm OTB STLY"
                        .Range(.Cells(Irow, iCol), .Cells(Irow + 30, iCol)).Formula = "=INDEX($DS$6:$FB$507,MATCH($B" & Irow & ",$DS$6:$DS$507,0),MATCH(""SEG10LY RM"",$DS$5:$FB$5,0))"
                        .Range(.Cells(Irow, iCol), .Cells(Irow + 30, iCol)).Value = .Range(.Cells(Irow, iCol), .Cells(Irow + 30, iCol)).Value
                    Case "Trn Rm Proj A/U"
                        .Range(.Cells(Irow, iCol), .Cells(Irow + 30, iCol)).Formula = "=INDEX($DS$6:$FB$507,MATCH($B" & Irow & ",$DS$6:$DS$507,0),MATCH(""Transient Rm Projected"",$DS$5:$FB$5,0))"
                        .Range(.Cells(Irow, iCol), .Cells(Irow + 30, iCol)).Value = .Range(.Cells(Irow, iCol), .Cells(Irow + 30, iCol)).Value
                    Case "Trn Rm Gap to Proj"
                        .Range(.Cells(Irow, iCol), .Cells(Irow + 30, iCol)).Formula = "=IF(A" & Irow & "=""Actual"",0,IFERROR(INDEX($DS$6:$FB$507,MATCH($B" & Irow & ",$DS$6:$DS$507,0),MATCH(""Transient Rm Projected"",$DS$5:$FB$5,0))-INDEX($DS$6:$FB$507,MATCH($B" & Irow & ",$DS$6:$DS$507,0),MATCH(""Transient OTB Rm TY"",$DS$5:$FB$5,0)),0))"
                        .Range(.Cells(Irow, iCol), .Cells(Irow + 30, iCol)).Value = .Range(.Cells(Irow, iCol), .Cells(Irow + 30, iCol)).Value
                    Case "Trn Rm Act LY"
                        .Range(.Cells(Irow, iCol), .Cells(Irow + 30, iCol)).Formula = "=IFERROR(INDEX($DS$6:$FB$507,MATCH($B" & Irow & ",$DS$6:$DS$507,0),MATCH(""Total Trn Rm Act LY"",$DS$5:$FB$5,0)),0)"
                        .Range(.Cells(Irow, iCol), .Cells(Irow + 30, iCol)).Value = .Range(.Cells(Irow, iCol), .Cells(Irow + 30, iCol)).Value
                    Case "Trn ADR OTB (G)"
                        .Range(.Cells(Irow, iCol), .Cells(Irow + 30, iCol)).Formula = "=IF(A" & Irow & "=""Actual"",0,IFERROR(INDEX($DS$6:$FB$507,MATCH($B" & Irow & ",$DS$6:$DS$507,0),MATCH(""Transient OTB ADR TY"",$DS$5:$FB$5,0)),0))"
                        .Range(.Cells(Irow, iCol), .Cells(Irow + 30, iCol)).Value = .Range(.Cells(Irow, iCol), .Cells(Irow + 30, iCol)).Value
                    Case "Trn OTB ADR (G) Var"
                        .Range(.Cells(Irow, iCol), .Cells(Irow + 30, iCol)).Formula = "=IF(A" & Irow & "=""Actual"",0,IFERROR(INDEX($DS$6:$FB$507,MATCH($B" & Irow & ",$DS$6:$DS$507,0),MATCH(""Transient OTB ADR TY"",$DS$5:$FB$5,0)),0)-IFERROR(INDEX($FH$6:$GQ$507,MATCH($B" & Irow & ",$FH$6:$FH$507,0),MATCH(""Transient OTB ADR TY"",$FH$5:$GQ$5,0)),0))"
                        .Range(.Cells(Irow, iCol), .Cells(Irow + 30, iCol)).Value = .Range(.Cells(Irow, iCol), .Cells(Irow + 30, iCol)).Value
                    Case "Trn ADR (G) OTB STLY"
                        .Range(.Cells(Irow, iCol), .Cells(Irow + 30, iCol)).Formula = "=IF(A" & Irow & "=""Actual"",0,IFERROR(INDEX($DS$6:$FB$507,MATCH($B" & Irow & ",$DS$6:$DS$507,0),MATCH(""SEG10LYRev"",$DS$5:$FB$5,0))/INDEX($DS$6:$FB$507,MATCH($B" & Irow & ",$DS$6:$DS$507,0),MATCH(""SEG10LY RM"",$DS$5:$FB$5,0))*INDEX($DR$6:$FB$507,MATCH($B" & Irow & ",$DS$6:$DS$507,0),MATCH(""SEGLY Fx converter"",$DR$5:$FB$5,0)),0))"
                        .Range(.Cells(Irow, iCol), .Cells(Irow + 30, iCol)).Value = .Range(.Cells(Irow, iCol), .Cells(Irow + 30, iCol)).Value
                    Case "Trn ADR (G) Proj A/U"
                        .Range(.Cells(Irow, iCol), .Cells(Irow + 30, iCol)).Formula = "=IFERROR(INDEX($DS$6:$FB$507,MATCH($B" & Irow & ",$DS$6:$DS$507,0),MATCH(""Transient Rev Projected"",$DS$5:$FB$5,0))/INDEX($DS$6:$FB$507,MATCH($B" & Irow & ",$DS$6:$DS$507,0),MATCH(""Transient Rm Projected"",$DS$5:$FB$5,0))/INDEX($DS$6:$FB$507,MATCH($B" & Irow & ",$DS$6:$DS$507,0),MATCH(""Fx This Year"",$DS$5:$FB$5,0)),0)"
                        .Range(.Cells(Irow, iCol), .Cells(Irow + 30, iCol)).Value = .Range(.Cells(Irow, iCol), .Cells(Irow + 30, iCol)).Value
                    Case "Trn Rm gap ADR (G) Pickup"
                        .Range(.Cells(Irow, iCol), .Cells(Irow + 30, iCol)).Formula = "=IF(A" & Irow & " =""Actual"",0,IFERROR((INDEX($DS$6:$FB$507,MATCH($B" & Irow & ",$DS$6:$DS$507,0),MATCH(""Transient Rev Projected"",$DS$5:$FB$5,0))/INDEX($DS$6:$FB$507,MATCH($B" & Irow & ",$DS$6:$DS$507,0),MATCH(""Fx This Year"",$DS$5:$FB$5,0))-INDEX($DS$6:$FB$507,MATCH($B" & Irow & ",$DS$6:$DS$507,0),MATCH(""Transient OTB ADR TY"",$DS$5:$FB$5,0))*INDEX($DS$6:$FB$507,MATCH($B" & Irow & ",$DS$6:$DS$507,0),MATCH(""Transient OTB Rm TY"",$DS$5:$FB$5,0)))/" & _
                                                                                        "IFERROR((INDEX($DS$6:$FB$507,MATCH($B" & Irow & ",$DS$6:$DS$507,0),MATCH(""Transient Rm Projected"",$DS$5:$FB$5,0))-INDEX($DS$6:$FB$507,MATCH($B" & Irow & ",$DS$6:$DS$507,0),MATCH(""Transient OTB Rm TY"",$DS$5:$FB$5,0))),1),0))"
                        .Range(.Cells(Irow, iCol), .Cells(Irow + 30, iCol)).Value = .Range(.Cells(Irow, iCol), .Cells(Irow + 30, iCol)).Value
                    Case "Trn ADR (G) Actual LY"
                        .Range(.Cells(Irow, iCol), .Cells(Irow + 30, iCol)).Formula = "=IFERROR(INDEX($DS$6:$FB$507,MATCH($B" & Irow & ",$DS$6:$DS$507,0),MATCH(""Total Trn Rev Act LY"",$DS$5:$FB$5,0))/IFERROR(INDEX($DS$6:$FB$507,MATCH($B" & Irow & ",$DS$6:$DS$507,0),MATCH(""Total Trn Rm Act LY"",$DS$5:$FB$5,0)),0)/INDEX($DS$6:$FB$507,MATCH($B" & Irow & ",$DS$6:$DS$507,0),MATCH(""Fx This Year"",$DS$5:$FB$5,0)),0)"
                        .Range(.Cells(Irow, iCol), .Cells(Irow + 30, iCol)).Value = .Range(.Cells(Irow, iCol), .Cells(Irow + 30, iCol)).Value
                    Case "Allotment Rm fcst"
                        .Range(.Cells(Irow, iCol), .Cells(Irow + 30, iCol)).Formula = "=IF(A" & Irow & "=""Actual"",0,IFERROR(VLOOKUP(B" & Irow & ",OYv2Data,MATCH(""Allotment Forecast"",OYv2Data!$A$9:$FZ$9,0),FALSE),0))"
                        .Range(.Cells(Irow, iCol), .Cells(Irow + 30, iCol)).Value = .Range(.Cells(Irow, iCol), .Cells(Irow + 30, iCol)).Value
                    Case "Allotment Rm OTB"
                        .Range(.Cells(Irow, iCol), .Cells(Irow + 30, iCol)).Formula = "=IF(A" & Irow & "=""Actual"",0,IFERROR(VLOOKUP(B" & Irow & ",OYv2Data,MATCH(""Allotment Rooms Sold"",OYv2Data!$A$9:$FZ$9,0),FALSE),0))"
                        .Range(.Cells(Irow, iCol), .Cells(Irow + 30, iCol)).Value = .Range(.Cells(Irow, iCol), .Cells(Irow + 30, iCol)).Value
                    Case "Allotment Rm OTB Var"
                        .Range(.Cells(Irow, iCol), .Cells(Irow + 30, iCol)).Formula = "=IF(A" & Irow & "=""Actual"",0,INDEX($DS$6:$FB$507,MATCH($B" & Irow & ",$DS$6:$DS$507,0),MATCH(""Allotment OTB"",$DS$5:$FB$5,0))-IFERROR(INDEX($FH$6:$GQ$507,MATCH($B" & Irow & ",$FH$6:$FH$507,0),MATCH(""Allotment OTB"",$FH$5:$GQ$5,0)),0))"
                        .Range(.Cells(Irow, iCol), .Cells(Irow + 30, iCol)).Value = .Range(.Cells(Irow, iCol), .Cells(Irow + 30, iCol)).Value
                    Case "Comp OTB TY"
                        .Range(.Cells(Irow, iCol), .Cells(Irow + 30, iCol)).Formula = "=IF(A" & Irow & "=""Actual"",IFERROR(vlookup(B" & Irow & ",OYprojData,8,false),0),IFERROR(VLOOKUP(B" & Irow & ",OYv2Data,MATCH(""Complimentary Booked TY"",OYv2Data!$A$9:$FZ$9,0),FALSE),0))"
                        .Range(.Cells(Irow, iCol), .Cells(Irow + 30, iCol)).Value = .Range(.Cells(Irow, iCol), .Cells(Irow + 30, iCol)).Value
                    Case "OOO Rooms"
                        .Range(.Cells(Irow, iCol), .Cells(Irow + 30, iCol)).Formula = "=IF(A" & Irow & "=""Actual"",IFERROR(vlookup(B" & Irow & ",OYprojData,7,false),0),IFERROR(VLOOKUP(B" & Irow & ",OYv2Data,MATCH(""Out of Order"",OYv2Data!$A$9:$FZ$9,0),FALSE),0))"
                        .Range(.Cells(Irow, iCol), .Cells(Irow + 30, iCol)).Value = .Range(.Cells(Irow, iCol), .Cells(Irow + 30, iCol)).Value
                    Case "Rec Daily Rate", "Rec Blended Rate"
                        .Range(.Cells(Irow, iCol), .Cells(Irow + 30, iCol)).Formula = "=IFERROR(VLOOKUP($B" & Irow & ",RPO!$B$5:$J$400,IF(Setup!$K$15=""Daily"",2,3),FALSE),"""")"
                        .Range(.Cells(Irow, iCol), .Cells(Irow + 30, iCol)).Value = .Range(.Cells(Irow, iCol), .Cells(Irow + 30, iCol)).Value
                    Case "Lowest Selling Rate"
                        .Range(.Cells(Irow, iCol), .Cells(Irow + 30, iCol)).Formula = "=IFERROR(VLOOKUP($B" & Irow & ",RPO!$B$5:$J$400,4,FALSE),"""")"
                        .Range(.Cells(Irow, iCol), .Cells(Irow + 30, iCol)).Value = .Range(.Cells(Irow, iCol), .Cells(Irow + 30, iCol)).Value
                    Case "Avg Weighted Comp Rate"
                        .Range(.Cells(Irow, iCol), .Cells(Irow + 30, iCol)).Formula = "=IFERROR(VLOOKUP($B" & Irow & ",RPO!$B$5:$J$400,9,FALSE),"""")"
                        .Range(.Cells(Irow, iCol), .Cells(Irow + 30, iCol)).Value = .Range(.Cells(Irow, iCol), .Cells(Irow + 30, iCol)).Value
                    Case "Rev Priority at Optimal rate"
                        .Range(.Cells(Irow, iCol), .Cells(Irow + 30, iCol)).Formula = "=IFERROR(VLOOKUP($B" & Irow & ",RPO!$B$5:$J$400,5,FALSE),"""")"
                        .Range(.Cells(Irow, iCol), .Cells(Irow + 30, iCol)).Value = .Range(.Cells(Irow, iCol), .Cells(Irow + 30, iCol)).Value
                    Case "Rate Resp. Occ at Curr Rate"
                        .Range(.Cells(Irow, iCol), .Cells(Irow + 30, iCol)).Formula = "=IFERROR(VLOOKUP($B" & Irow & ",RPO!$B$5:$J$400,6,FALSE),"""")"
                        .Range(.Cells(Irow, iCol), .Cells(Irow + 30, iCol)).Value = .Range(.Cells(Irow, iCol), .Cells(Irow + 30, iCol)).Value
                    Case "Competitive Position Rating"
                        .Range(.Cells(Irow, iCol), .Cells(Irow + 30, iCol)).Formula = "=IFERROR(VLOOKUP($B" & Irow & ",RPO!$B$5:$J$400,7,FALSE),"""")"
                        .Range(.Cells(Irow, iCol), .Cells(Irow + 30, iCol)).Value = .Range(.Cells(Irow, iCol), .Cells(Irow + 30, iCol)).Value
                    Case "Rate Responsiveness"
                        .Range(.Cells(Irow, iCol), .Cells(Irow + 30, iCol)).Formula = "=IFERROR(VLOOKUP($B" & Irow & ",RPO!$B$5:$J$400,8,FALSE),"""")"
                        .Range(.Cells(Irow, iCol), .Cells(Irow + 30, iCol)).Value = .Range(.Cells(Irow, iCol), .Cells(Irow + 30, iCol)).Value
                End Select
            Next iCol
        Next Irow
    End With
    Irow = Empty: iCol = Empty
End Sub
Sub SpreadSeg()
Dim Irow As Long, iCol As Long, iColb As Long

    With Application: .Calculation = xlCalculationManual: .EnableEvents = False: .ScreenUpdating = False: End With
    
    'spread compile data used for the segmentation spread
    With ws_Segmentation
        .Activate
        .Range("BX6:BX507").Formula = "=IFERROR(VLOOKUP(B6,OYv2Data,MATCH(""Days Out"",OYv2Data!$A$9:$FZ$9,0),FALSE),"""")"
        .Range("BX6:BX507").Value = .Range("BX6:BX507").Value
    For Irow = 6 To 504 Step 39
        For iCol = 77 To 80
            Select Case .Cells(5, iCol).Value
                Case "WE-WD Indicator"
                    .Range(.Cells(Irow, iCol), .Cells(Irow + 30, iCol)).Formula = "=IFERROR(VLOOKUP($B" & Irow & ",OYv2Data,3,FALSE),"""")"
                    .Range(.Cells(Irow, iCol), .Cells(Irow + 30, iCol)).Value = .Range(.Cells(Irow, iCol), .Cells(Irow + 30, iCol)).Value
                Case "Mgd Event"
                    .Range(.Cells(Irow, iCol), .Cells(Irow + 30, iCol)).Formula = "=IFERROR(VLOOKUP($B" & Irow & ",OYv2Data,10,FALSE),""N"")"
                    .Range(.Cells(Irow, iCol), .Cells(Irow + 30, iCol)).Value = .Range(.Cells(Irow, iCol), .Cells(Irow + 30, iCol)).Value
            End Select
            Select Case iCol
                Case 80
                    .Range(.Cells(Irow, iCol), .Cells(Irow + 30, iCol + 33)).Formula = "=IFERROR(INDEX(OYv2Data,MATCH($CA" & Irow & ",OYv2Data!$A$9:$A$400,0),MATCH(Segmentation!CB$5,OYv2Data!$A$9:$FZ$9,0)),0)"
                    .Range(.Cells(Irow, iCol), .Cells(Irow + 30, iCol + 33)).Value = .Range(.Cells(Irow, iCol), .Cells(Irow + 30, iCol + 33)).Value
            End Select
        Next iCol
    Next Irow
    End With
    Irow = Empty: iCol = Empty
    
    For Irow = 474 To 504
        Select Case ws_Segmentation.Range("BX" & Irow).Value
            Case vbNullString
                ws_Segmentation.Range("BX" & Irow & ":BZ504").ClearContents
                ws_Segmentation.Range("CB" & Irow & ":FD504").ClearContents
            Exit For
        End Select
    Next
    Irow = Empty
    
    ws_Segmentation.Calculate
      
    If (ws_Segmentation.Range("DU6").Value = vbNullString Or ws_Segmentation.Range("DU6").Value = 0) Then
        ws_Segmentation.Range("DU6:FC507").Value = ws_Segmentation.Range("CA6:DI507").Value
    End If
    
    'spread data for the segmentation tab
    With ws_Segmentation
        For Irow = 6 To 504 Step 39
            For iCol = 3 To 56
                'copy data from the Day by Day looping through the header in the day by day due as columns may be added in the future
                Select Case .Cells(5, iCol).Value
                    Case "Events Notes"
                        .Range(.Cells(Irow, iCol), .Cells(Irow + 30, iCol)).Value = ws_DayXDay.Range(ws_DayXDay.Cells(Irow, iCol), ws_DayXDay.Cells(Irow + 30, iCol)).Value
                    Case "Ttl Hotel Occ OYv2"
                        For iColb = 4 To 17
                            Select Case ws_DayXDay.Cells(5, iColb).Value
                                Case "Total Hotel Occ OYv2"
                                    .Range(.Cells(Irow, iCol), .Cells(Irow + 33, iCol)).Value = ws_DayXDay.Range(ws_DayXDay.Cells(Irow, iColb), ws_DayXDay.Cells(Irow + 33, iColb)).Value
                                    Exit For
                            End Select
                        Next iColb
                        iColb = Empty
                    Case "Occ LY Act"
                        For iColb = 4 To 17
                            Select Case ws_DayXDay.Cells(5, iColb).Value
                                Case "Occ LY Act"
                                    .Range(.Cells(Irow, iCol), .Cells(Irow + 33, iCol)).Value = ws_DayXDay.Range(ws_DayXDay.Cells(Irow, iColb), ws_DayXDay.Cells(Irow + 33, iColb)).Value
                                    Exit For
                            End Select
                        Next iColb
                        iColb = Empty
                    Case "Proj Occ User RP"
                        For iColb = 4 To 17
                            Select Case ws_DayXDay.Cells(5, iColb).Value
                                Case "Proj Occ User RP"
                                    .Range(.Cells(Irow, iCol), .Cells(Irow + 33, iCol)).Value = ws_DayXDay.Range(ws_DayXDay.Cells(Irow, iColb), ws_DayXDay.Cells(Irow + 33, iColb)).Value
                                    Exit For
                            End Select
                        Next iColb
                        iColb = Empty
                    Case "Occ LY Act"
                        For iColb = 4 To 17
                            Select Case ws_DayXDay.Cells(5, iColb).Value
                                Case "Occ LY Act"
                                    .Range(.Cells(Irow, iCol), .Cells(Irow + 33, iCol)).Value = ws_DayXDay.Range(ws_DayXDay.Cells(Irow, iColb), ws_DayXDay.Cells(Irow + 33, iColb)).Value
                                    Exit For
                            End Select
                        Next iColb
                        iColb = Empty
                    Case "Avail Trn Supply"
                        For iColb = 4 To 17
                            Select Case ws_DayXDay.Cells(5, iColb).Value
                                Case "Avail Trn Supply"
                                    .Range(.Cells(Irow, iCol), .Cells(Irow + 33, iCol)).Value = ws_DayXDay.Range(ws_DayXDay.Cells(Irow, iColb), ws_DayXDay.Cells(Irow + 33, iColb)).Value
                                    Exit For
                            End Select
                        Next iColb
                        iColb = Empty
                    Case "System Rem Dem"
                        For iColb = 4 To 17
                            Select Case ws_DayXDay.Cells(5, iColb).Value
                                Case "System Rem Dem"
                                    .Range(.Cells(Irow, iCol), .Cells(Irow + 33, iCol)).Value = ws_DayXDay.Range(ws_DayXDay.Cells(Irow, iColb), ws_DayXDay.Cells(Irow + 33, iColb)).Value
                                    Exit For
                            End Select
                        Next iColb
                        iColb = Empty
                    Case "Applied Rem Dem"
                        For iColb = 4 To 17
                            Select Case ws_DayXDay.Cells(5, iColb).Value
                                Case "Applied Rem Dem"
                                    .Range(.Cells(Irow, iCol), .Cells(Irow + 33, iCol)).Value = ws_DayXDay.Range(ws_DayXDay.Cells(Irow, iColb), ws_DayXDay.Cells(Irow + 33, iColb)).Value
                                    Exit For
                            End Select
                        Next iColb
                        iColb = Empty
                    Case "Rem Dem STLY"
                        For iColb = 4 To 17
                            Select Case ws_DayXDay.Cells(5, iColb).Value
                                Case "Rem Dem STLY"
                                    .Range(.Cells(Irow, iCol), .Cells(Irow + 33, iCol)).Value = ws_DayXDay.Range(ws_DayXDay.Cells(Irow, iColb), ws_DayXDay.Cells(Irow + 33, iColb)).Value
                                    Exit For
                            End Select
                        Next iColb
                        iColb = Empty
                    Case "Ttl Trn Dem"
                        For iColb = 4 To 17
                            Select Case ws_DayXDay.Cells(5, iColb).Value
                                Case "Ttl Trn Dem"
                                    .Range(.Cells(Irow, iCol), .Cells(Irow + 33, iCol)).Value = ws_DayXDay.Range(ws_DayXDay.Cells(Irow, iColb), ws_DayXDay.Cells(Irow + 33, iColb)).Value
                                    Exit For
                            End Select
                        Next iColb
                        iColb = Empty
                    Case "Ttl Trn Dem Var"
                        For iColb = 4 To 17
                            Select Case ws_DayXDay.Cells(5, iColb).Value
                                Case "Ttl Trn Dem Var"
                                    .Range(.Cells(Irow, iCol), .Cells(Irow + 33, iCol)).Value = ws_DayXDay.Range(ws_DayXDay.Cells(Irow, iColb), ws_DayXDay.Cells(Irow + 33, iColb)).Value
                                    Exit For
                            End Select
                        Next iColb
                        iColb = Empty
                    Case "Ttl Trn Dem STLY"
                        For iColb = 4 To 17
                            Select Case ws_DayXDay.Cells(5, iColb).Value
                                Case "Ttl Trn Dem STLY"
                                    .Range(.Cells(Irow, iCol), .Cells(Irow + 33, iCol)).Value = ws_DayXDay.Range(ws_DayXDay.Cells(Irow, iColb), ws_DayXDay.Cells(Irow + 33, iColb)).Value
                                    Exit For
                            End Select
                        Next iColb
                        iColb = Empty
                    Case "Ttl Trn Dem STLY Var"
                        For iColb = 4 To 17
                            Select Case ws_DayXDay.Cells(5, iColb).Value
                                Case "Ttl Trn Dem STLY Var"
                                    .Range(.Cells(Irow, iCol), .Cells(Irow + 33, iCol)).Value = ws_DayXDay.Range(ws_DayXDay.Cells(Irow, iColb), ws_DayXDay.Cells(Irow + 33, iColb)).Value
                                    Exit For
                            End Select
                        Next iColb
                        iColb = Empty
                End Select
                
                Select Case ws_Segmentation.Cells(4, iCol).Value
                    Case "Ttl Trn OTB"
                        For iColb = iCol To iCol + 3
                            Select Case ws_Segmentation.Cells(5, iColb).Value
                                Case "Rm OTB"
                                    .Range(.Cells(Irow, iColb), .Cells(Irow + 30, iColb)).Formula = "=IF(BX" & Irow & "=""Actual"",0,INDEX($CA$6:$DI$507,MATCH($B" & Irow & ",$CA$6:$CA$507,0),MATCH(""Total Transient Booked"",$CA$5:$DI$5,0)))"
                                    .Range(.Cells(Irow, iColb), .Cells(Irow + 30, iColb)).Value = .Range(.Cells(Irow, iColb), .Cells(Irow + 30, iColb)).Value
                                Case "Rm Pickup"
                                    .Range(.Cells(Irow, iColb), .Cells(Irow + 30, iColb)).Formula = "=IF($BX" & Irow & "=""Actual"",0,INDEX($CA$6:$DI$507,MATCH($B" & Irow & ",$CA$6:$CA$507,0),MATCH(""Total Transient Booked"",$CA$5:$DI$5,0))-INDEX($DU$6:$FC$507,MATCH($B" & Irow & ",$CA$6:$CA$507,0),MATCH(""Total Transient Booked"",$DU$5:$FC$5,0)))"
                                    .Range(.Cells(Irow, iColb), .Cells(Irow + 30, iColb)).Value = .Range(.Cells(Irow, iColb), .Cells(Irow + 30, iColb)).Value
                                Case "Rm OTB STLY"
                                    .Range(.Cells(Irow, iColb), .Cells(Irow + 30, iColb)).Formula = "=IF(BX" & Irow & "=""Actual"",0,INDEX($CA$6:$DI$507,MATCH($B" & Irow & ",$CA$6:$CA$507,0),MATCH(""Total Transient Booked STLY"",$CA$5:$DI$5,0)))"
                                    .Range(.Cells(Irow, iColb), .Cells(Irow + 30, iColb)).Value = .Range(.Cells(Irow, iColb), .Cells(Irow + 30, iColb)).Value
                                Case "Rm Pickup STLY"
                                    .Range(.Cells(Irow, iColb), .Cells(Irow + 30, iColb)).Formula = "=IF($BX" & Irow & "=""Actual"",0,INDEX($CA$6:$DI$507,MATCH($B" & Irow & ",$CA$6:$CA$507,0),MATCH(""Total Transient Booked STLY"",$CA$5:$DI$5,0))-INDEX($DU$6:$FC$507,MATCH($B" & Irow & ",$CA$6:$CA$507,0),MATCH(""Total Transient Booked STLY"",$DU$5:$FC$5,0)))"
                                    .Range(.Cells(Irow, iColb), .Cells(Irow + 30, iColb)).Value = .Range(.Cells(Irow, iColb), .Cells(Irow + 30, iColb)).Value
                            End Select
                        Next iColb
                        iColb = Empty
                    Case "Prem Retail"
                        For iColb = iCol To iCol + 4
                            Select Case ws_Segmentation.Cells(5, iColb).Value
                                Case "Rem Dem"
                                    .Range(.Cells(Irow, iColb), .Cells(Irow + 30, iColb)).Formula = "=IF(BX" & Irow & "=""Actual"",0,INDEX($CA$6:$DI$507,MATCH($B" & Irow & ",$CA$6:$CA$507,0),MATCH(""Rem Dem Premium Retail TY #"",$CA$5:$DI$5,0)))"
                                    .Range(.Cells(Irow, iColb), .Cells(Irow + 30, iColb)).Value = .Range(.Cells(Irow, iColb), .Cells(Irow + 30, iColb)).Value
                                Case "Rm OTB"
                                    .Range(.Cells(Irow, iColb), .Cells(Irow + 30, iColb)).Formula = "=IF(BX" & Irow & "=""Actual"",0,INDEX($CA$6:$DI$507,MATCH($B" & Irow & ",$CA$6:$CA$507,0),MATCH(""Premium Retail TY"",$CA$5:$DI$5,0)))"
                                    .Range(.Cells(Irow, iColb), .Cells(Irow + 30, iColb)).Value = .Range(.Cells(Irow, iColb), .Cells(Irow + 30, iColb)).Value
                                Case "Rm Pickup"
                                    .Range(.Cells(Irow, iColb), .Cells(Irow + 30, iColb)).Formula = "=IF($BX" & Irow & "=""Actual"",0,INDEX($CA$6:$DI$507,MATCH($B" & Irow & ",$CA$6:$CA$507,0),MATCH(""Premium Retail TY"",$CA$5:$DI$5,0))-INDEX($DU$6:$FC$507,MATCH($B" & Irow & ",$CA$6:$CA$507,0),MATCH(""Premium Retail TY"",$DU$5:$FC$5,0)))"
                                    .Range(.Cells(Irow, iColb), .Cells(Irow + 30, iColb)).Value = .Range(.Cells(Irow, iColb), .Cells(Irow + 30, iColb)).Value
                                Case "Rm OTB STLY"
                                    .Range(.Cells(Irow, iColb), .Cells(Irow + 30, iColb)).Formula = "=IF(BX" & Irow & "=""Actual"",0,INDEX($CA$6:$DI$507,MATCH($B" & Irow & ",$CA$6:$CA$507,0),MATCH(""Premium Retail STLY"",$CA$5:$DI$5,0)))"
                                    .Range(.Cells(Irow, iColb), .Cells(Irow + 30, iColb)).Value = .Range(.Cells(Irow, iColb), .Cells(Irow + 30, iColb)).Value
                                Case "Rm Pickup STLY"
                                    .Range(.Cells(Irow, iColb), .Cells(Irow + 30, iColb)).Formula = "=IF($BX" & Irow & "=""Actual"",0,INDEX($CA$6:$DI$507,MATCH($B" & Irow & ",$CA$6:$CA$507,0),MATCH(""Premium Retail STLY"",$CA$5:$DI$5,0))-INDEX($DU$6:$FC$507,MATCH($B" & Irow & ",$CA$6:$CA$507,0),MATCH(""Premium Retail STLY"",$DU$5:$FC$5,0)))"
                                    .Range(.Cells(Irow, iColb), .Cells(Irow + 30, iColb)).Value = .Range(.Cells(Irow, iColb), .Cells(Irow + 30, iColb)).Value
                            End Select
                        Next iColb
                        iColb = Empty
                        Case "Std Retail"
                            For iColb = iCol To iCol + 4
                                Select Case ws_Segmentation.Cells(5, iColb).Value
                                    Case "Rem Dem"
                                        .Range(.Cells(Irow, iColb), .Cells(Irow + 30, iColb)).Formula = "=IF(BX" & Irow & "=""Actual"",0,INDEX($CA$6:$DI$507,MATCH($B" & Irow & ",$CA$6:$CA$507,0),MATCH(""Rem Dem Standard Retail TY #"",$CA$5:$DI$5,0)))"
                                        .Range(.Cells(Irow, iColb), .Cells(Irow + 30, iColb)).Value = .Range(.Cells(Irow, iColb), .Cells(Irow + 30, iColb)).Value
                                    Case "Rm OTB"
                                        .Range(.Cells(Irow, iColb), .Cells(Irow + 30, iColb)).Formula = "=IF(BX" & Irow & "=""Actual"",0,INDEX($CA$6:$DI$507,MATCH($B" & Irow & ",$CA$6:$CA$507,0),MATCH(""Standard Retail TY"",$CA$5:$DI$5,0)))"
                                        .Range(.Cells(Irow, iColb), .Cells(Irow + 30, iColb)).Value = .Range(.Cells(Irow, iColb), .Cells(Irow + 30, iColb)).Value
                                    Case "Rm Pickup"
                                        .Range(.Cells(Irow, iColb), .Cells(Irow + 30, iColb)).Formula = "=IF($BX" & Irow & "=""Actual"",0,INDEX($CA$6:$DI$507,MATCH($B" & Irow & ",$CA$6:$CA$507,0),MATCH(""Standard Retail TY"",$CA$5:$DI$5,0))-INDEX($DU$6:$FC$507,MATCH($B" & Irow & ",$CA$6:$CA$507,0),MATCH(""Standard Retail TY"",$DU$5:$FC$5,0)))"
                                        .Range(.Cells(Irow, iColb), .Cells(Irow + 30, iColb)).Value = .Range(.Cells(Irow, iColb), .Cells(Irow + 30, iColb)).Value
                                    Case "Rm OTB STLY"
                                        .Range(.Cells(Irow, iColb), .Cells(Irow + 30, iColb)).Formula = "=IF(BX" & Irow & "=""Actual"",0,INDEX($CA$6:$DI$507,MATCH($B" & Irow & ",$CA$6:$CA$507,0),MATCH(""Standard Retail STLY"",$CA$5:$DI$5,0)))"
                                        .Range(.Cells(Irow, iColb), .Cells(Irow + 30, iColb)).Value = .Range(.Cells(Irow, iColb), .Cells(Irow + 30, iColb)).Value
                                    Case "Rm Pickup STLY"
                                        .Range(.Cells(Irow, iColb), .Cells(Irow + 30, iColb)).Formula = "=IF($BX" & Irow & "=""Actual"",0,INDEX($CA$6:$DI$507,MATCH($B" & Irow & ",$CA$6:$CA$507,0),MATCH(""Standard Retail STLY"",$CA$5:$DI$5,0))-INDEX($DU$6:$FC$507,MATCH($B" & Irow & ",$CA$6:$CA$507,0),MATCH(""Standard Retail STLY"",$DU$5:$FC$5,0)))"
                                        .Range(.Cells(Irow, iColb), .Cells(Irow + 30, iColb)).Value = .Range(.Cells(Irow, iColb), .Cells(Irow + 30, iColb)).Value
                                End Select
                            Next iColb
                            iColb = Empty
                        Case "SC (LRA)"
                            For iColb = iCol To iCol + 4
                                Select Case ws_Segmentation.Cells(5, iColb).Value
                                    Case "Rem Dem"
                                        .Range(.Cells(Irow, iColb), .Cells(Irow + 30, iColb)).Formula = "=IF($BX" & Irow & "=""Actual"",0,INDEX($CA$6:$DI$507,MATCH($B" & Irow & ",$CA$6:$CA$507,0),MATCH(""Rem Dem Special Corporate (LRA) TY #"",$CA$5:$DI$5,0)))"
                                        .Range(.Cells(Irow, iColb), .Cells(Irow + 30, iColb)).Value = .Range(.Cells(Irow, iColb), .Cells(Irow + 30, iColb)).Value
                                    Case "Rm OTB"
                                        .Range(.Cells(Irow, iColb), .Cells(Irow + 30, iColb)).Formula = "=IF($BX" & Irow & "=""Actual"",0,INDEX($CA$6:$DI$507,MATCH($B" & Irow & ",$CA$6:$CA$507,0),MATCH(""Special Corporate (LRA) TY"",$CA$5:$DI$5,0)))"
                                        .Range(.Cells(Irow, iColb), .Cells(Irow + 30, iColb)).Value = .Range(.Cells(Irow, iColb), .Cells(Irow + 30, iColb)).Value
                                    Case "Rm Pickup"
                                        .Range(.Cells(Irow, iColb), .Cells(Irow + 30, iColb)).Formula = "=IF($BX" & Irow & "=""Actual"",0,INDEX($CA$6:$DI$507,MATCH($B" & Irow & ",$CA$6:$CA$507,0),MATCH(""Special Corporate (LRA) TY"",$CA$5:$DI$5,0))-INDEX($DU$6:$FC$507,MATCH($B" & Irow & ",$CA$6:$CA$507,0),MATCH(""Special Corporate (LRA) TY"",$DU$5:$FC$5,0)))"
                                        .Range(.Cells(Irow, iColb), .Cells(Irow + 30, iColb)).Value = .Range(.Cells(Irow, iColb), .Cells(Irow + 30, iColb)).Value
                                    Case "Rm OTB STLY"
                                        .Range(.Cells(Irow, iColb), .Cells(Irow + 30, iColb)).Formula = "=IF($BX" & Irow & "=""Actual"",0,INDEX($CA$6:$DI$507,MATCH($B" & Irow & ",$CA$6:$CA$507,0),MATCH(""Special Corporate (LRA) STLY"",$CA$5:$DI$5,0)))"
                                        .Range(.Cells(Irow, iColb), .Cells(Irow + 30, iColb)).Value = .Range(.Cells(Irow, iColb), .Cells(Irow + 30, iColb)).Value
                                    Case "Rm Pickup STLY"
                                        .Range(.Cells(Irow, iColb), .Cells(Irow + 30, iColb)).Formula = "=IF($BX" & Irow & "=""Actual"",0,INDEX($CA$6:$DI$507,MATCH($B" & Irow & ",$CA$6:$CA$507,0),MATCH(""Special Corporate (LRA) STLY"",$CA$5:$DI$5,0))-INDEX($DU$6:$FC$507,MATCH($B" & Irow & ",$CA$6:$CA$507,0),MATCH(""Special Corporate (LRA) STLY"",$DU$5:$FC$5,0)))"
                                        .Range(.Cells(Irow, iColb), .Cells(Irow + 30, iColb)).Value = .Range(.Cells(Irow, iColb), .Cells(Irow + 30, iColb)).Value
                                End Select
                            Next iColb
                            iColb = Empty
                        Case "Retail Tied Disc."
                            For iColb = iCol To iCol + 4
                                Select Case ws_Segmentation.Cells(5, iColb).Value
                                    Case "Rem Dem"
                                        .Range(.Cells(Irow, iColb), .Cells(Irow + 30, iColb)).Formula = "=IF($BX" & Irow & "=""Actual"",0,INDEX($CA$6:$DI$507,MATCH($B" & Irow & ",$CA$6:$CA$507,0),MATCH(""Rem Dem Retail Tied Discount  TY #"",$CA$5:$DI$5,0)))"
                                        .Range(.Cells(Irow, iColb), .Cells(Irow + 30, iColb)).Value = .Range(.Cells(Irow, iColb), .Cells(Irow + 30, iColb)).Value
                                    Case "Rm OTB"
                                        .Range(.Cells(Irow, iColb), .Cells(Irow + 30, iColb)).Formula = "=IF($BX" & Irow & "=""Actual"",0,INDEX($CA$6:$DI$507,MATCH($B" & Irow & ",$CA$6:$CA$507,0),MATCH(""Retail Tied Discount  TY"",$CA$5:$DI$5,0)))"
                                        .Range(.Cells(Irow, iColb), .Cells(Irow + 30, iColb)).Value = .Range(.Cells(Irow, iColb), .Cells(Irow + 30, iColb)).Value
                                    Case "Rm Pickup"
                                        .Range(.Cells(Irow, iColb), .Cells(Irow + 30, iColb)).Formula = "=IF($BX" & Irow & "=""Actual"",0,INDEX($CA$6:$DI$507,MATCH($B" & Irow & ",$CA$6:$CA$507,0),MATCH(""Retail Tied Discount  TY"",$CA$5:$DI$5,0))-INDEX($DU$6:$FC$507,MATCH($B" & Irow & ",$CA$6:$CA$507,0),MATCH(""Retail Tied Discount  TY"",$DU$5:$FC$5,0)))"
                                        .Range(.Cells(Irow, iColb), .Cells(Irow + 30, iColb)).Value = .Range(.Cells(Irow, iColb), .Cells(Irow + 30, iColb)).Value
                                    Case "Rm OTB STLY"
                                        .Range(.Cells(Irow, iColb), .Cells(Irow + 30, iColb)).Formula = "=IF($BX" & Irow & "=""Actual"",0,INDEX($CA$6:$DI$507,MATCH($B" & Irow & ",$CA$6:$CA$507,0),MATCH(""Retail Tied Discount  STLY"",$CA$5:$DI$5,0)))"
                                        .Range(.Cells(Irow, iColb), .Cells(Irow + 30, iColb)).Value = .Range(.Cells(Irow, iColb), .Cells(Irow + 30, iColb)).Value
                                    Case "Rm Pickup STLY"
                                        .Range(.Cells(Irow, iColb), .Cells(Irow + 30, iColb)).Formula = "=IF($BX" & Irow & "=""Actual"",0,INDEX($CA$6:$DI$507,MATCH($B" & Irow & ",$CA$6:$CA$507,0),MATCH(""Retail Tied Discount  STLY"",$CA$5:$DI$5,0))-INDEX($DU$6:$FC$507,MATCH($B" & Irow & ",$CA$6:$CA$507,0),MATCH(""Retail Tied Discount  STLY"",$DU$5:$FC$5,0)))"
                                        .Range(.Cells(Irow, iColb), .Cells(Irow + 30, iColb)).Value = .Range(.Cells(Irow, iColb), .Cells(Irow + 30, iColb)).Value
                                End Select
                            Next iColb
                            iColb = Empty
                        Case "Fixed Disc."
                            For iColb = iCol To iCol + 4
                                Select Case ws_Segmentation.Cells(5, iColb).Value
                                    Case "Rem Dem"
                                        .Range(.Cells(Irow, iColb), .Cells(Irow + 30, iColb)).Formula = "=IF($BX" & Irow & "=""Actual"",0,INDEX($CA$6:$DI$507,MATCH($B" & Irow & ",$CA$6:$CA$507,0),MATCH(""Rem Dem Fixed Discount TY #"",$CA$5:$DI$5,0)))"
                                        .Range(.Cells(Irow, iColb), .Cells(Irow + 30, iColb)).Value = .Range(.Cells(Irow, iColb), .Cells(Irow + 30, iColb)).Value
                                    Case "Rm OTB"
                                        .Range(.Cells(Irow, iColb), .Cells(Irow + 30, iColb)).Formula = "=IF($BX" & Irow & "=""Actual"",0,INDEX($CA$6:$DI$507,MATCH($B" & Irow & ",$CA$6:$CA$507,0),MATCH(""Fixed Discount TY"",$CA$5:$DI$5,0)))"
                                        .Range(.Cells(Irow, iColb), .Cells(Irow + 30, iColb)).Value = .Range(.Cells(Irow, iColb), .Cells(Irow + 30, iColb)).Value
                                    Case "Rm Pickup"
                                        .Range(.Cells(Irow, iColb), .Cells(Irow + 30, iColb)).Formula = "=IF($BX" & Irow & "=""Actual"",0,INDEX($CA$6:$DI$507,MATCH($B" & Irow & ",$CA$6:$CA$507,0),MATCH(""Fixed Discount TY"",$CA$5:$DI$5,0))-INDEX($DU$6:$FC$507,MATCH($B" & Irow & ",$CA$6:$CA$507,0),MATCH(""Fixed Discount TY"",$DU$5:$FC$5,0)))"
                                        .Range(.Cells(Irow, iColb), .Cells(Irow + 30, iColb)).Value = .Range(.Cells(Irow, iColb), .Cells(Irow + 30, iColb)).Value
                                    Case "Rm OTB STLY"
                                        .Range(.Cells(Irow, iColb), .Cells(Irow + 30, iColb)).Formula = "=IF($BX" & Irow & "=""Actual"",0,INDEX($CA$6:$DI$507,MATCH($B" & Irow & ",$CA$6:$CA$507,0),MATCH(""Fixed Discount STLY"",$CA$5:$DI$5,0)))"
                                        .Range(.Cells(Irow, iColb), .Cells(Irow + 30, iColb)).Value = .Range(.Cells(Irow, iColb), .Cells(Irow + 30, iColb)).Value
                                    Case "Rm Pickup STLY"
                                        .Range(.Cells(Irow, iColb), .Cells(Irow + 30, iColb)).Formula = "=IF($BX" & Irow & "=""Actual"",0,INDEX($CA$6:$DI$507,MATCH($B" & Irow & ",$CA$6:$CA$507,0),MATCH(""Fixed Discount STLY"",$CA$5:$DI$5,0))-INDEX($DU$6:$FC$507,MATCH($B" & Irow & ",$CA$6:$CA$507,0),MATCH(""Fixed Discount STLY"",$DU$5:$FC$5,0)))"
                                        .Range(.Cells(Irow, iColb), .Cells(Irow + 30, iColb)).Value = .Range(.Cells(Irow, iColb), .Cells(Irow + 30, iColb)).Value
                                End Select
                            Next iColb
                            iColb = Empty
                        Case "Gov't/Mil"
                            For iColb = iCol To iCol + 4
                                Select Case ws_Segmentation.Cells(5, iColb).Value
                                    Case "Rem Dem"
                                        .Range(.Cells(Irow, iColb), .Cells(Irow + 30, iColb)).Formula = "=IF($BX" & Irow & "=""Actual"",0,INDEX($CA$6:$DI$507,MATCH($B" & Irow & ",$CA$6:$CA$507,0),MATCH(""Rem Dem Govt/Military TY #"",$CA$5:$DI$5,0)))"
                                        .Range(.Cells(Irow, iColb), .Cells(Irow + 30, iColb)).Value = .Range(.Cells(Irow, iColb), .Cells(Irow + 30, iColb)).Value
                                    Case "Rm OTB"
                                        .Range(.Cells(Irow, iColb), .Cells(Irow + 30, iColb)).Formula = "=IF($BX" & Irow & "=""Actual"",0,INDEX($CA$6:$DI$507,MATCH($B" & Irow & ",$CA$6:$CA$507,0),MATCH(""Govt/Military TY"",$CA$5:$DI$5,0)))"
                                        .Range(.Cells(Irow, iColb), .Cells(Irow + 30, iColb)).Value = .Range(.Cells(Irow, iColb), .Cells(Irow + 30, iColb)).Value
                                    Case "Rm Pickup"
                                        .Range(.Cells(Irow, iColb), .Cells(Irow + 30, iColb)).Formula = "=IF($BX" & Irow & "=""Actual"",0,INDEX($CA$6:$DI$507,MATCH($B" & Irow & ",$CA$6:$CA$507,0),MATCH(""Govt/Military TY"",$CA$5:$DI$5,0))-INDEX($DU$6:$FC$507,MATCH($B" & Irow & ",$CA$6:$CA$507,0),MATCH(""Govt/Military TY"",$DU$5:$FC$5,0)))"
                                        .Range(.Cells(Irow, iColb), .Cells(Irow + 30, iColb)).Value = .Range(.Cells(Irow, iColb), .Cells(Irow + 30, iColb)).Value
                                    Case "Rm OTB STLY"
                                        .Range(.Cells(Irow, iColb), .Cells(Irow + 30, iColb)).Formula = "=IF($BX" & Irow & "=""Actual"",0,INDEX($CA$6:$DI$507,MATCH($B" & Irow & ",$CA$6:$CA$507,0),MATCH(""Govt/Military STLY"",$CA$5:$DI$5,0)))"
                                        .Range(.Cells(Irow, iColb), .Cells(Irow + 30, iColb)).Value = .Range(.Cells(Irow, iColb), .Cells(Irow + 30, iColb)).Value
                                    Case "Rm Pickup STLY"
                                        .Range(.Cells(Irow, iColb), .Cells(Irow + 30, iColb)).Formula = "=IF($BX" & Irow & "=""Actual"",0,INDEX($CA$6:$DI$507,MATCH($B" & Irow & ",$CA$6:$CA$507,0),MATCH(""Govt/Military STLY"",$CA$5:$DI$5,0))-INDEX($DU$6:$FC$507,MATCH($B" & Irow & ",$CA$6:$CA$507,0),MATCH(""Govt/Military STLY"",$DU$5:$FC$5,0)))"
                                        .Range(.Cells(Irow, iColb), .Cells(Irow + 30, iColb)).Value = .Range(.Cells(Irow, iColb), .Cells(Irow + 30, iColb)).Value
                                End Select
                            Next iColb
                            iColb = Empty
                        Case "Rwd Redem."
                            For iColb = iCol To iCol + 4
                                Select Case ws_Segmentation.Cells(5, iColb).Value
                                    Case "Rem Dem"
                                        .Range(.Cells(Irow, iColb), .Cells(Irow + 30, iColb)).Formula = "=IF($BX" & Irow & "=""Actual"",0,INDEX($CA$6:$DI$507,MATCH($B" & Irow & ",$CA$6:$CA$507,0),MATCH(""Rem Dem Reward Redemption TY #"",$CA$5:$DI$5,0)))"
                                        .Range(.Cells(Irow, iColb), .Cells(Irow + 30, iColb)).Value = .Range(.Cells(Irow, iColb), .Cells(Irow + 30, iColb)).Value
                                    Case "Rm OTB"
                                        .Range(.Cells(Irow, iColb), .Cells(Irow + 30, iColb)).Formula = "=IF($BX" & Irow & "=""Actual"",0,INDEX($CA$6:$DI$507,MATCH($B" & Irow & ",$CA$6:$CA$507,0),MATCH(""Reward Redemption TY"",$CA$5:$DI$5,0)))"
                                        .Range(.Cells(Irow, iColb), .Cells(Irow + 30, iColb)).Value = .Range(.Cells(Irow, iColb), .Cells(Irow + 30, iColb)).Value
                                    Case "Rm Pickup"
                                        .Range(.Cells(Irow, iColb), .Cells(Irow + 30, iColb)).Formula = "=IF($BX" & Irow & "=""Actual"",0,INDEX($CA$6:$DI$507,MATCH($B" & Irow & ",$CA$6:$CA$507,0),MATCH(""Reward Redemption TY"",$CA$5:$DI$5,0))-INDEX($DU$6:$FC$507,MATCH($B" & Irow & ",$CA$6:$CA$507,0),MATCH(""Reward Redemption TY"",$DU$5:$FC$5,0)))"
                                        .Range(.Cells(Irow, iColb), .Cells(Irow + 30, iColb)).Value = .Range(.Cells(Irow, iColb), .Cells(Irow + 30, iColb)).Value
                                    Case "Rm OTB STLY"
                                        .Range(.Cells(Irow, iColb), .Cells(Irow + 30, iColb)).Formula = "=IF($BX" & Irow & "=""Actual"",0,INDEX($CA$6:$DI$507,MATCH($B" & Irow & ",$CA$6:$CA$507,0),MATCH(""Reward Redemption STLY"",$CA$5:$DI$5,0)))"
                                        .Range(.Cells(Irow, iColb), .Cells(Irow + 30, iColb)).Value = .Range(.Cells(Irow, iColb), .Cells(Irow + 30, iColb)).Value
                                    Case "Rm Pickup STLY"
                                        .Range(.Cells(Irow, iColb), .Cells(Irow + 30, iColb)).Formula = "=IF($BX" & Irow & "=""Actual"",0,INDEX($CA$6:$DI$507,MATCH($B" & Irow & ",$CA$6:$CA$507,0),MATCH(""Reward Redemption STLY"",$CA$5:$DI$5,0))-INDEX($DU$6:$FC$507,MATCH($B" & Irow & ",$CA$6:$CA$507,0),MATCH(""Reward Redemption STLY"",$DU$5:$FC$5,0)))"
                                        .Range(.Cells(Irow, iColb), .Cells(Irow + 30, iColb)).Value = .Range(.Cells(Irow, iColb), .Cells(Irow + 30, iColb)).Value
                                End Select
                            Next iColb
                            iColb = Empty
                        Case "Policy Driven"
                            For iColb = iCol To iCol + 4
                                Select Case ws_Segmentation.Cells(5, iColb).Value
                                    Case "Rem Dem"
                                        .Range(.Cells(Irow, iColb), .Cells(Irow + 30, iColb)).Formula = "=IF($BX" & Irow & "=""Actual"",0,INDEX($CA$6:$DI$507,MATCH($B" & Irow & ",$CA$6:$CA$507,0),MATCH(""Rem Dem Policy Driven TY #"",$CA$5:$DI$5,0)))"
                                        .Range(.Cells(Irow, iColb), .Cells(Irow + 30, iColb)).Value = .Range(.Cells(Irow, iColb), .Cells(Irow + 30, iColb)).Value
                                    Case "Rm OTB"
                                        .Range(.Cells(Irow, iColb), .Cells(Irow + 30, iColb)).Formula = "=IF($BX" & Irow & "=""Actual"",0,INDEX($CA$6:$DI$507,MATCH($B" & Irow & ",$CA$6:$CA$507,0),MATCH(""Policy Driven TY"",$CA$5:$DI$5,0)))"
                                        .Range(.Cells(Irow, iColb), .Cells(Irow + 30, iColb)).Value = .Range(.Cells(Irow, iColb), .Cells(Irow + 30, iColb)).Value
                                    Case "Rm Pickup"
                                        .Range(.Cells(Irow, iColb), .Cells(Irow + 30, iColb)).Formula = "=IF($BX" & Irow & "=""Actual"",0,INDEX($CA$6:$DI$507,MATCH($B" & Irow & ",$CA$6:$CA$507,0),MATCH(""Policy Driven TY"",$CA$5:$DI$5,0))-INDEX($DU$6:$FC$507,MATCH($B" & Irow & ",$CA$6:$CA$507,0),MATCH(""Policy Driven TY"",$DU$5:$FC$5,0)))"
                                        .Range(.Cells(Irow, iColb), .Cells(Irow + 30, iColb)).Value = .Range(.Cells(Irow, iColb), .Cells(Irow + 30, iColb)).Value
                                    Case "Rm OTB STLY"
                                        .Range(.Cells(Irow, iColb), .Cells(Irow + 30, iColb)).Formula = "=IF($BX" & Irow & "=""Actual"",0,INDEX($CA$6:$DI$507,MATCH($B" & Irow & ",$CA$6:$CA$507,0),MATCH(""Policy Driven STLY"",$CA$5:$DI$5,0)))"
                                        .Range(.Cells(Irow, iColb), .Cells(Irow + 30, iColb)).Value = .Range(.Cells(Irow, iColb), .Cells(Irow + 30, iColb)).Value
                                    Case "Rm Pickup STLY"
                                        .Range(.Cells(Irow, iColb), .Cells(Irow + 30, iColb)).Formula = "=IF($BX" & Irow & "=""Actual"",0,INDEX($CA$6:$DI$507,MATCH($B" & Irow & ",$CA$6:$CA$507,0),MATCH(""Policy Driven STLY"",$CA$5:$DI$5,0))-INDEX($DU$6:$FC$507,MATCH($B" & Irow & ",$CA$6:$CA$507,0),MATCH(""Policy Driven STLY"",$DU$5:$FC$5,0)))"
                                        .Range(.Cells(Irow, iColb), .Cells(Irow + 30, iColb)).Value = .Range(.Cells(Irow, iColb), .Cells(Irow + 30, iColb)).Value
                                End Select
                            Next iColb
                            iColb = Empty
                    End Select
            Next iCol
        Next Irow
    End With

    Irow = Empty: iCol = Empty
End Sub

Sub SpreadRMCol()
Dim Irow As Long, iCol As Long, iColb As Long, Mthloop As Long

    With Application: .Calculation = xlCalculationManual: .EnableEvents = False: .ScreenUpdating = False: End With

    'realign the archive month if the new extract start at a different month than previous OY extract
    If ws_DayXDay.Range("FI3").Value > 0 Then 'check if they were a previous extract
        If ws_RMcollection.Range("B6").Value <> ws_RMcollection.Range("HA6").Value Then 'if the start day is not the same then
            For Mthloop = 1 To 12 'loop to each month to find the date
                ws_RMcollection.Range("$HA$6:$IO$507").Value = ws_RMcollection.Range("$HA$45:$IO$507").Value 'copy up the data from the month below
                If ws_RMcollection.Range("B6").Value = ws_RMcollection.Range("HA6").Value Then Exit For 'if date are the same as the start date, then exit the for loop
            Next Mthloop
        End If
    End If
    Mthloop = Empty
    
    'spread compile data used for the segmentation spread
    With ws_RMcollection
        .Activate
        .Range("DP6:DP507").Formula = "=IFERROR(VLOOKUP(B6,OYv2Data,MATCH(""Days Out"",OYv2Data!$A$9:$FZ$9,0),FALSE),"""")" 'actual flag
        .Range("DP6:DP507").Value = .Range("DP6:DP507").Value
    For Irow = 6 To 504 Step 39
        For iCol = 121 To 124
            Select Case .Cells(5, iCol).Value
                Case "WE-WD Indicator"
                    .Range(.Cells(Irow, iCol), .Cells(Irow + 30, iCol)).Formula = "=IFERROR(VLOOKUP($B" & Irow & ",OYv2Data,MATCH(""WE indicator  "",OYv2Data!$A$9:$FZ$9,0),FALSE),"""")"
                    .Range(.Cells(Irow, iCol), .Cells(Irow + 30, iCol)).Value = .Range(.Cells(Irow, iCol), .Cells(Irow + 30, iCol)).Value
                Case "Mgd Event"
                    .Range(.Cells(Irow, iCol), .Cells(Irow + 30, iCol)).Formula = "=IFERROR(VLOOKUP($B" & Irow & ",OYv2Data,MATCH(""Event"",OYv2Data!$A$9:$FZ$9,0),FALSE),""N"")"
                    .Range(.Cells(Irow, iCol), .Cells(Irow + 30, iCol)).Value = .Range(.Cells(Irow, iCol), .Cells(Irow + 30, iCol)).Value
            End Select
            Select Case iCol
                Case 124 'spread current data
                    .Range(.Cells(Irow, iCol), .Cells(Irow + 30, iCol + 39)).Formula = "=IFERROR(INDEX(OYv2Data,MATCH($DS" & Irow & ",OYv2Data!$A$9:$A$400,0),MATCH(DT$5,OYv2Data!$A$9:$FZ$9,0)),0)"
                    .Range(.Cells(Irow, iCol), .Cells(Irow + 30, iCol + 39)).Value = .Range(.Cells(Irow, iCol), .Cells(Irow + 30, iCol + 39)).Value
            End Select
        Next iCol
    Next Irow
    End With
    Irow = Empty: iCol = Empty
    
    For Irow = 474 To 504
        Select Case ws_RMcollection.Range("DP" & Irow).Value
            Case vbNullString
                ws_RMcollection.Range("DP" & Irow & ":DR504").ClearContents
                ws_RMcollection.Range("DT" & Irow & ":IP504").ClearContents
            Exit For
        End Select
    Next
    Irow = Empty
    
    ws_RMcollection.Calculate
    
    If (ws_RMcollection.Range("HA6").Value = vbNullString Or ws_RMcollection.Range("HA6").Value = 0) Then
        ws_RMcollection.Range("HA6:IO507").Value = ws_RMcollection.Range("DS6:FG507").Value
    End If
    
    'spread data for the segmentation tab
    With ws_RMcollection
        For Irow = 6 To 504 Step 39
            For iCol = 3 To 78
                'copy data from the Day by Day looping through the header in the day by day due as columns may be added in the future
                Select Case .Cells(5, iCol).Value
                    Case "Events Notes"
                        .Range(.Cells(Irow, iCol), .Cells(Irow + 30, iCol)).Value = ws_DayXDay.Range(ws_DayXDay.Cells(Irow, iCol), ws_DayXDay.Cells(Irow + 30, iCol)).Value
                    Case "Ttl Hotel Occ OYv2"
                        For iColb = 4 To 7
                            Select Case ws_DayXDay.Cells(5, iColb).Value 'loop through the day by day to find the correct column
                                Case "Total Hotel Occ OYv2"
                                    .Range(.Cells(Irow, iCol), .Cells(Irow + 33, iCol)).Value = ws_DayXDay.Range(ws_DayXDay.Cells(Irow, iColb), ws_DayXDay.Cells(Irow + 33, iColb)).Value
                                    Exit For
                            End Select
                        Next iColb
                    Case "Proj Occ User RP"
                        For iColb = 4 To 7
                            Select Case ws_DayXDay.Cells(5, iColb).Value 'loop through the day by day to find the correct column
                                Case "Proj Occ User RP"
                                    .Range(.Cells(Irow, iCol), .Cells(Irow + 33, iCol)).Value = ws_DayXDay.Range(ws_DayXDay.Cells(Irow, iColb), ws_DayXDay.Cells(Irow + 33, iColb)).Value
                                    Exit For
                            End Select
                        Next iColb
                    Case "Occ LY Act"
                        For iColb = 4 To 7
                            Select Case ws_DayXDay.Cells(5, iColb).Value 'loop through the day by day to find the correct column
                                Case "Occ LY Act"
                                    .Range(.Cells(Irow, iCol), .Cells(Irow + 33, iCol)).Value = ws_DayXDay.Range(ws_DayXDay.Cells(Irow, iColb), ws_DayXDay.Cells(Irow + 33, iColb)).Value
                                    Exit For
                            End Select
                        Next iColb
                        iColb = Empty
                End Select
                
                Select Case iCol
                    Case 7 To 15 'room collection 1
                        Select Case ws_RMcollection.Cells(5, iCol).Value
                            Case "Hurdle Rev."
                                .Range(.Cells(Irow, iCol), .Cells(Irow + 30, iCol)).Formula = "=IFERROR(IF($DP" & Irow & "=""Actual"",0,INDEX($DS$6:$FG$507,MATCH($B" & Irow & ",$DS$6:$DS$507,0),MATCH(""Room Collection 1 Hurdle Revenue"",$DS$5:$FG$5,0))),0)"
                                .Range(.Cells(Irow, iCol), .Cells(Irow + 30, iCol)).Value = .Range(.Cells(Irow, iCol), .Cells(Irow + 30, iCol)).Value
                            Case "Hurdle Rev Var"
                                .Range(.Cells(Irow, iCol), .Cells(Irow + 30, iCol)).Formula = "=IFERROR(IF($DP" & Irow & "=""Actual"",0,INDEX($DS$6:$FG$507,MATCH($B" & Irow & ",$DS$6:$DS$507,0),MATCH(""Room Collection 1 Hurdle Revenue"",$DS$5:$FG$5,0))-INDEX($HA$6:$IO$507,MATCH($B" & Irow & ",$HA$6:$HA$507,0),MATCH(""Room Collection 1 Hurdle Revenue"",$HA$5:$IO$5,0))),0)"
                                .Range(.Cells(Irow, iCol), .Cells(Irow + 30, iCol)).Value = .Range(.Cells(Irow, iCol), .Cells(Irow + 30, iCol)).Value
                            Case "Rem Capacity - PRP"
                                .Range(.Cells(Irow, iCol), .Cells(Irow + 30, iCol)).Formula = "=IFERROR(IF($DP" & Irow & "=""Actual"",0,INDEX(PRP_Data,MATCH($B" & Irow & "&I$2,PRP!$C$5:$C$3000,0),MATCH(""Remaining Capacity"",PRP!$C$5:$S$5,0))),0)"
                                .Range(.Cells(Irow, iCol), .Cells(Irow + 30, iCol)).Value = .Range(.Cells(Irow, iCol), .Cells(Irow + 30, iCol)).Value
                            Case "Rem Dem"
                                .Range(.Cells(Irow, iCol), .Cells(Irow + 30, iCol)).Formula = "=IFERROR(IF($DP" & Irow & "=""Actual"",0,INDEX($DS$6:$FG$507,MATCH($B" & Irow & ",$DS$6:$DS$507,0),MATCH(""Room Collection 1 Rem DemTY #"",$DS$5:$FG$5,0))),0)"
                                .Range(.Cells(Irow, iCol), .Cells(Irow + 30, iCol)).Value = .Range(.Cells(Irow, iCol), .Cells(Irow + 30, iCol)).Value
                            Case "Rem Dem STLY"
                                .Range(.Cells(Irow, iCol), .Cells(Irow + 30, iCol)).Formula = "=IFERROR(IF($DP" & Irow & "=""Actual"",0,INDEX($DS$6:$FG$507,MATCH($B" & Irow & ",$DS$6:$DS$507,0),MATCH(""Room Collection 1 Rem Dem STLY #"",$DS$5:$FG$5,0))),0)"
                                .Range(.Cells(Irow, iCol), .Cells(Irow + 30, iCol)).Value = .Range(.Cells(Irow, iCol), .Cells(Irow + 30, iCol)).Value
                            Case "Rm OTB"
                                .Range(.Cells(Irow, iCol), .Cells(Irow + 30, iCol)).Formula = "=IF($DP" & Irow & "=""Actual"",0,IFERROR(INDEX($DS$6:$FG$507,MATCH($B" & Irow & ",$DS$6:$DS$507,0),MATCH(""Room Collection 1 Transient OTB TY"",$DS$5:$FG$5,0)),0))"
                                .Range(.Cells(Irow, iCol), .Cells(Irow + 30, iCol)).Value = .Range(.Cells(Irow, iCol), .Cells(Irow + 30, iCol)).Value
                            Case "Rm Pickup"
                                .Range(.Cells(Irow, iCol), .Cells(Irow + 30, iCol)).Formula = "=IF($DP" & Irow & "=""Actual"",0,IFERROR(INDEX($DS$6:$FG$507,MATCH($B" & Irow & ",$DS$6:$DS$507,0),MATCH(""Room Collection 1 Transient OTB TY"",$DS$5:$FG$5,0))-INDEX($HA$6:$IO$507,MATCH($B" & Irow & ",$HA$6:$HA$507,0),MATCH(""Room Collection 1 Transient OTB TY"",$HA$5:$IO$5,0)),0))"
                                .Range(.Cells(Irow, iCol), .Cells(Irow + 30, iCol)).Value = .Range(.Cells(Irow, iCol), .Cells(Irow + 30, iCol)).Value
                            Case "Rm OTB STLY"
                                .Range(.Cells(Irow, iCol), .Cells(Irow + 30, iCol)).Formula = "=IF($DP" & Irow & "=""Actual"",0,IFERROR(INDEX($DS$6:$FG$507,MATCH($B" & Irow & ",$DS$6:$DS$507,0),MATCH(""Room Collection 1 Transient OTB STLY"",$DS$5:$FG$5,0)),0))"
                                .Range(.Cells(Irow, iCol), .Cells(Irow + 30, iCol)).Value = .Range(.Cells(Irow, iCol), .Cells(Irow + 30, iCol)).Value
                            Case "Rm Pickup STLY"
                                .Range(.Cells(Irow, iCol), .Cells(Irow + 30, iCol)).Formula = "=IF($DP" & Irow & "=""Actual"",0,IFERROR(INDEX($DS$6:$FG$507,MATCH($B" & Irow & ",$DS$6:$DS$507,0),MATCH(""Room Collection 1 Transient OTB STLY"",$DS$5:$FG$5,0))-INDEX($HA$6:$IO$507,MATCH($B" & Irow & ",$HA$6:$HA$507,0),MATCH(""Room Collection 1 Transient OTB STLY"",$HA$5:$IO$5,0)),0))"
                                .Range(.Cells(Irow, iCol), .Cells(Irow + 30, iCol)).Value = .Range(.Cells(Irow, iCol), .Cells(Irow + 30, iCol)).Value
                        End Select
                    Case 16 To 24 'room collection 2
                        Select Case ws_RMcollection.Cells(5, iCol).Value
                            Case "Hurdle Rev."
                                .Range(.Cells(Irow, iCol), .Cells(Irow + 30, iCol)).Formula = "=IFERROR(IF($DP" & Irow & "=""Actual"",0,INDEX($DS$6:$FG$507,MATCH($B" & Irow & ",$DS$6:$DS$507,0),MATCH(""Room Collection 2 Hurdle Revenue"",$DS$5:$FG$5,0))),0)"
                                .Range(.Cells(Irow, iCol), .Cells(Irow + 30, iCol)).Value = .Range(.Cells(Irow, iCol), .Cells(Irow + 30, iCol)).Value
                            Case "Hurdle Rev Var"
                                .Range(.Cells(Irow, iCol), .Cells(Irow + 30, iCol)).Formula = "=IF($DP" & Irow & "=""Actual"",0,IFERROR(INDEX($DS$6:$FG$507,MATCH($B" & Irow & ",$DS$6:$DS$507,0),MATCH(""Room Collection 2 Hurdle Revenue"",$DS$5:$FG$5,0))-INDEX($HA$6:$IO$507,MATCH($B" & Irow & ",$HA$6:$HA$507,0),MATCH(""Room Collection 2 Hurdle Revenue"",$HA$5:$IO$5,0)),0))"
                                .Range(.Cells(Irow, iCol), .Cells(Irow + 30, iCol)).Value = .Range(.Cells(Irow, iCol), .Cells(Irow + 30, iCol)).Value
                            Case "Rem Capacity - PRP"
                                .Range(.Cells(Irow, iCol), .Cells(Irow + 30, iCol)).Formula = "=IFERROR(IF($DP" & Irow & "=""Actual"",0,INDEX(PRP_Data,MATCH($B" & Irow & "&R$2,PRP!$C$5:$C$3000,0),MATCH(""Remaining Capacity"",PRP!$C$5:$S$5,0))),0)"
                                .Range(.Cells(Irow, iCol), .Cells(Irow + 30, iCol)).Value = .Range(.Cells(Irow, iCol), .Cells(Irow + 30, iCol)).Value
                            Case "Rem Dem"
                                .Range(.Cells(Irow, iCol), .Cells(Irow + 30, iCol)).Formula = "=IFERROR(IF($DP" & Irow & "=""Actual"",0,INDEX($DS$6:$FG$507,MATCH($B" & Irow & ",$DS$6:$DS$507,0),MATCH(""Room Collection 2 Rem DemTY #"",$DS$5:$FG$5,0))),0)"
                                .Range(.Cells(Irow, iCol), .Cells(Irow + 30, iCol)).Value = .Range(.Cells(Irow, iCol), .Cells(Irow + 30, iCol)).Value
                            Case "Rem Dem STLY"
                                .Range(.Cells(Irow, iCol), .Cells(Irow + 30, iCol)).Formula = "=IFERROR(IF($DP" & Irow & "=""Actual"",0,INDEX($DS$6:$FG$507,MATCH($B" & Irow & ",$DS$6:$DS$507,0),MATCH(""Room Collection 2 Rem Dem STLY #"",$DS$5:$FG$5,0))),0)"
                                .Range(.Cells(Irow, iCol), .Cells(Irow + 30, iCol)).Value = .Range(.Cells(Irow, iCol), .Cells(Irow + 30, iCol)).Value
                            Case "Rm OTB"
                                .Range(.Cells(Irow, iCol), .Cells(Irow + 30, iCol)).Formula = "=IF($DP" & Irow & "=""Actual"",0,IFERROR(INDEX($DS$6:$FG$507,MATCH($B" & Irow & ",$DS$6:$DS$507,0),MATCH(""Room Collection 2 Transient OTB TY"",$DS$5:$FG$5,0)),0))"
                                .Range(.Cells(Irow, iCol), .Cells(Irow + 30, iCol)).Value = .Range(.Cells(Irow, iCol), .Cells(Irow + 30, iCol)).Value
                            Case "Rm Pickup"
                                .Range(.Cells(Irow, iCol), .Cells(Irow + 30, iCol)).Formula = "=IF($DP" & Irow & "=""Actual"",0,IFERROR(INDEX($DS$6:$FG$507,MATCH($B" & Irow & ",$DS$6:$DS$507,0),MATCH(""Room Collection 2 Transient OTB TY"",$DS$5:$FG$5,0))-INDEX($HA$6:$IO$507,MATCH($B" & Irow & ",$HA$6:$HA$507,0),MATCH(""Room Collection 2 Transient OTB TY"",$HA$5:$IO$5,0)),0))"
                                .Range(.Cells(Irow, iCol), .Cells(Irow + 30, iCol)).Value = .Range(.Cells(Irow, iCol), .Cells(Irow + 30, iCol)).Value
                            Case "Rm OTB STLY"
                                .Range(.Cells(Irow, iCol), .Cells(Irow + 30, iCol)).Formula = "=IF($DP" & Irow & "=""Actual"",0,IFERROR(INDEX($DS$6:$FG$507,MATCH($B" & Irow & ",$DS$6:$DS$507,0),MATCH(""Room Collection 2 Transient OTB STLY"",$DS$5:$FG$5,0)),0))"
                                .Range(.Cells(Irow, iCol), .Cells(Irow + 30, iCol)).Value = .Range(.Cells(Irow, iCol), .Cells(Irow + 30, iCol)).Value
                            Case "Rm Pickup STLY"
                                .Range(.Cells(Irow, iCol), .Cells(Irow + 30, iCol)).Formula = "=IF($DP" & Irow & "=""Actual"",0,IFERROR(INDEX($DS$6:$FG$507,MATCH($B" & Irow & ",$DS$6:$DS$507,0),MATCH(""Room Collection 2 Transient OTB STLY"",$DS$5:$FG$5,0))-INDEX($HA$6:$IO$507,MATCH($B" & Irow & ",$HA$6:$HA$507,0),MATCH(""Room Collection 2 Transient OTB STLY"",$HA$5:$IO$5,0)),0))"
                                .Range(.Cells(Irow, iCol), .Cells(Irow + 30, iCol)).Value = .Range(.Cells(Irow, iCol), .Cells(Irow + 30, iCol)).Value
                        End Select
                     Case 25 To 33 'room collection 3
                        Select Case ws_RMcollection.Cells(5, iCol).Value
                            Case "Hurdle Rev."
                                .Range(.Cells(Irow, iCol), .Cells(Irow + 30, iCol)).Formula = "=IFERROR(IF($DP" & Irow & "=""Actual"",0,INDEX($DS$6:$FG$507,MATCH($B" & Irow & ",$DS$6:$DS$507,0),MATCH(""Room Collection 3 Hurdle Revenue"",$DS$5:$FG$5,0))),0)"
                                .Range(.Cells(Irow, iCol), .Cells(Irow + 30, iCol)).Value = .Range(.Cells(Irow, iCol), .Cells(Irow + 30, iCol)).Value
                            Case "Hurdle Rev Var"
                                .Range(.Cells(Irow, iCol), .Cells(Irow + 30, iCol)).Formula = "=IF($DP" & Irow & "=""Actual"",0,IFERROR(INDEX($DS$6:$FG$507,MATCH($B" & Irow & ",$DS$6:$DS$507,0),MATCH(""Room Collection 3 Hurdle Revenue"",$DS$5:$FG$5,0))-INDEX($HA$6:$IO$507,MATCH($B" & Irow & ",$HA$6:$HA$507,0),MATCH(""Room Collection 3 Hurdle Revenue"",$HA$5:$IO$5,0)),0))"
                                .Range(.Cells(Irow, iCol), .Cells(Irow + 30, iCol)).Value = .Range(.Cells(Irow, iCol), .Cells(Irow + 30, iCol)).Value
                            Case "Rem Capacity - PRP"
                                .Range(.Cells(Irow, iCol), .Cells(Irow + 30, iCol)).Formula = "=IFERROR(IF($DP" & Irow & "=""Actual"",0,INDEX(PRP_Data,MATCH($B" & Irow & "&AA$2,PRP!$C$5:$C$3000,0),MATCH(""Remaining Capacity"",PRP!$C$5:$S$5,0))),0)"
                                .Range(.Cells(Irow, iCol), .Cells(Irow + 30, iCol)).Value = .Range(.Cells(Irow, iCol), .Cells(Irow + 30, iCol)).Value
                            Case "Rem Dem"
                                .Range(.Cells(Irow, iCol), .Cells(Irow + 30, iCol)).Formula = "=IFERROR(IF($DP" & Irow & "=""Actual"",0,INDEX($DS$6:$FG$507,MATCH($B" & Irow & ",$DS$6:$DS$507,0),MATCH(""Room Collection 3 Rem DemTY #"",$DS$5:$FG$5,0))),0)"
                                .Range(.Cells(Irow, iCol), .Cells(Irow + 30, iCol)).Value = .Range(.Cells(Irow, iCol), .Cells(Irow + 30, iCol)).Value
                            Case "Rem Dem STLY"
                                .Range(.Cells(Irow, iCol), .Cells(Irow + 30, iCol)).Formula = "=IFERROR(IF($DP" & Irow & "=""Actual"",0,INDEX($DS$6:$FG$507,MATCH($B" & Irow & ",$DS$6:$DS$507,0),MATCH(""Room Collection 3 Rem Dem STLY #"",$DS$5:$FG$5,0))),0)"
                                .Range(.Cells(Irow, iCol), .Cells(Irow + 30, iCol)).Value = .Range(.Cells(Irow, iCol), .Cells(Irow + 30, iCol)).Value
                            Case "Rm OTB"
                                .Range(.Cells(Irow, iCol), .Cells(Irow + 30, iCol)).Formula = "=IF($DP" & Irow & "=""Actual"",0,IFERROR(INDEX($DS$6:$FG$507,MATCH($B" & Irow & ",$DS$6:$DS$507,0),MATCH(""Room Collection 3 Transient OTB TY"",$DS$5:$FG$5,0)),0))"
                                .Range(.Cells(Irow, iCol), .Cells(Irow + 30, iCol)).Value = .Range(.Cells(Irow, iCol), .Cells(Irow + 30, iCol)).Value
                            Case "Rm Pickup"
                                .Range(.Cells(Irow, iCol), .Cells(Irow + 30, iCol)).Formula = "=IF($DP" & Irow & "=""Actual"",0,IFERROR(INDEX($DS$6:$FG$507,MATCH($B" & Irow & ",$DS$6:$DS$507,0),MATCH(""Room Collection 3 Transient OTB TY"",$DS$5:$FG$5,0))-INDEX($HA$6:$IO$507,MATCH($B" & Irow & ",$HA$6:$HA$507,0),MATCH(""Room Collection 3 Transient OTB TY"",$HA$5:$IO$5,0)),0))"
                                .Range(.Cells(Irow, iCol), .Cells(Irow + 30, iCol)).Value = .Range(.Cells(Irow, iCol), .Cells(Irow + 30, iCol)).Value
                            Case "Rm OTB STLY"
                                .Range(.Cells(Irow, iCol), .Cells(Irow + 30, iCol)).Formula = "=IF($DP" & Irow & "=""Actual"",0,IFERROR(INDEX($DS$6:$FG$507,MATCH($B" & Irow & ",$DS$6:$DS$507,0),MATCH(""Room Collection 3 Transient OTB STLY"",$DS$5:$FG$5,0)),0))"
                                .Range(.Cells(Irow, iCol), .Cells(Irow + 30, iCol)).Value = .Range(.Cells(Irow, iCol), .Cells(Irow + 30, iCol)).Value
                            Case "Rm Pickup STLY"
                                .Range(.Cells(Irow, iCol), .Cells(Irow + 30, iCol)).Formula = "=IF($DP" & Irow & "=""Actual"",0,IFERROR(INDEX($DS$6:$FG$507,MATCH($B" & Irow & ",$DS$6:$DS$507,0),MATCH(""Room Collection 3 Transient OTB STLY"",$DS$5:$FG$5,0))-INDEX($HA$6:$IO$507,MATCH($B" & Irow & ",$HA$6:$HA$507,0),MATCH(""Room Collection 3 Transient OTB STLY"",$HA$5:$IO$5,0)),0))"
                                .Range(.Cells(Irow, iCol), .Cells(Irow + 30, iCol)).Value = .Range(.Cells(Irow, iCol), .Cells(Irow + 30, iCol)).Value
                        End Select
                     Case 34 To 42 'room collection 4
                        Select Case ws_RMcollection.Cells(5, iCol).Value
                            Case "Hurdle Rev."
                                .Range(.Cells(Irow, iCol), .Cells(Irow + 30, iCol)).Formula = "=IFERROR(IF($DP" & Irow & "=""Actual"",0,INDEX($DS$6:$FG$507,MATCH($B" & Irow & ",$DS$6:$DS$507,0),MATCH(""Room Collection 4 Hurdle Revenue"",$DS$5:$FG$5,0))),0)"
                                .Range(.Cells(Irow, iCol), .Cells(Irow + 30, iCol)).Value = .Range(.Cells(Irow, iCol), .Cells(Irow + 30, iCol)).Value
                            Case "Hurdle Rev Var"
                                .Range(.Cells(Irow, iCol), .Cells(Irow + 30, iCol)).Formula = "=IF($DP" & Irow & "=""Actual"",0,IFERROR(INDEX($DS$6:$FG$507,MATCH($B" & Irow & ",$DS$6:$DS$507,0),MATCH(""Room Collection 4 Hurdle Revenue"",$DS$5:$FG$5,0))-INDEX($HA$6:$IO$507,MATCH($B" & Irow & ",$HA$6:$HA$507,0),MATCH(""Room Collection 4 Hurdle Revenue"",$HA$5:$IO$5,0)),0))"
                                .Range(.Cells(Irow, iCol), .Cells(Irow + 30, iCol)).Value = .Range(.Cells(Irow, iCol), .Cells(Irow + 30, iCol)).Value
                            Case "Rem Capacity - PRP"
                                .Range(.Cells(Irow, iCol), .Cells(Irow + 30, iCol)).Formula = "=IFERROR(IF($DP" & Irow & "=""Actual"",0,INDEX(PRP_Data,MATCH($B" & Irow & "&AJ$2,PRP!$C$5:$C$3000,0),MATCH(""Remaining Capacity"",PRP!$C$5:$S$5,0))),0)"
                                .Range(.Cells(Irow, iCol), .Cells(Irow + 30, iCol)).Value = .Range(.Cells(Irow, iCol), .Cells(Irow + 30, iCol)).Value
                            Case "Rem Dem"
                                .Range(.Cells(Irow, iCol), .Cells(Irow + 30, iCol)).Formula = "=IFERROR(IF($DP" & Irow & "=""Actual"",0,INDEX($DS$6:$FG$507,MATCH($B" & Irow & ",$DS$6:$DS$507,0),MATCH(""Room Collection 4 Rem DemTY #"",$DS$5:$FG$5,0))),0)"
                                .Range(.Cells(Irow, iCol), .Cells(Irow + 30, iCol)).Value = .Range(.Cells(Irow, iCol), .Cells(Irow + 30, iCol)).Value
                            Case "Rem Dem STLY"
                                .Range(.Cells(Irow, iCol), .Cells(Irow + 30, iCol)).Formula = "=IFERROR(IF($DP" & Irow & "=""Actual"",0,INDEX($DS$6:$FG$507,MATCH($B" & Irow & ",$DS$6:$DS$507,0),MATCH(""Room Collection 4 Rem Dem STLY #"",$DS$5:$FG$5,0))),0)"
                                .Range(.Cells(Irow, iCol), .Cells(Irow + 30, iCol)).Value = .Range(.Cells(Irow, iCol), .Cells(Irow + 30, iCol)).Value
                            Case "Rm OTB"
                                .Range(.Cells(Irow, iCol), .Cells(Irow + 30, iCol)).Formula = "=IF($DP" & Irow & "=""Actual"",0,IFERROR(INDEX($DS$6:$FG$507,MATCH($B" & Irow & ",$DS$6:$DS$507,0),MATCH(""Room Collection 4 Transient OTB TY"",$DS$5:$FG$5,0)),0))"
                                .Range(.Cells(Irow, iCol), .Cells(Irow + 30, iCol)).Value = .Range(.Cells(Irow, iCol), .Cells(Irow + 30, iCol)).Value
                            Case "Rm Pickup"
                                .Range(.Cells(Irow, iCol), .Cells(Irow + 30, iCol)).Formula = "=IF($DP" & Irow & "=""Actual"",0,IFERROR(INDEX($DS$6:$FG$507,MATCH($B" & Irow & ",$DS$6:$DS$507,0),MATCH(""Room Collection 4 Transient OTB TY"",$DS$5:$FG$5,0))-INDEX($HA$6:$IO$507,MATCH($B" & Irow & ",$HA$6:$HA$507,0),MATCH(""Room Collection 4 Transient OTB TY"",$HA$5:$IO$5,0)),0))"
                                .Range(.Cells(Irow, iCol), .Cells(Irow + 30, iCol)).Value = .Range(.Cells(Irow, iCol), .Cells(Irow + 30, iCol)).Value
                            Case "Rm OTB STLY"
                                .Range(.Cells(Irow, iCol), .Cells(Irow + 30, iCol)).Formula = "=IF($DP" & Irow & "=""Actual"",0,IFERROR(INDEX($DS$6:$FG$507,MATCH($B" & Irow & ",$DS$6:$DS$507,0),MATCH(""Room Collection 4 Transient OTB STLY"",$DS$5:$FG$5,0)),0))"
                                .Range(.Cells(Irow, iCol), .Cells(Irow + 30, iCol)).Value = .Range(.Cells(Irow, iCol), .Cells(Irow + 30, iCol)).Value
                            Case "Rm Pickup STLY"
                                .Range(.Cells(Irow, iCol), .Cells(Irow + 30, iCol)).Formula = "=IF($DP" & Irow & "=""Actual"",0,IFERROR(INDEX($DS$6:$FG$507,MATCH($B" & Irow & ",$DS$6:$DS$507,0),MATCH(""Room Collection 4 Transient OTB STLY"",$DS$5:$FG$5,0))-INDEX($HA$6:$IO$507,MATCH($B" & Irow & ",$HA$6:$HA$507,0),MATCH(""Room Collection 4 Transient OTB STLY"",$HA$5:$IO$5,0)),0))"
                                .Range(.Cells(Irow, iCol), .Cells(Irow + 30, iCol)).Value = .Range(.Cells(Irow, iCol), .Cells(Irow + 30, iCol)).Value
                        End Select
                     Case 43 To 51 'room collection 5
                        Select Case ws_RMcollection.Cells(5, iCol).Value
                            Case "Hurdle Rev."
                                .Range(.Cells(Irow, iCol), .Cells(Irow + 30, iCol)).Formula = "=IFERROR(IF($DP" & Irow & "=""Actual"",0,INDEX($DS$6:$FG$507,MATCH($B" & Irow & ",$DS$6:$DS$507,0),MATCH(""Room Collection 5 Hurdle Revenue"",$DS$5:$FG$5,0))),0)"
                                .Range(.Cells(Irow, iCol), .Cells(Irow + 30, iCol)).Value = .Range(.Cells(Irow, iCol), .Cells(Irow + 30, iCol)).Value
                            Case "Hurdle Rev Var"
                                .Range(.Cells(Irow, iCol), .Cells(Irow + 30, iCol)).Formula = "=IF($DP" & Irow & "=""Actual"",0,IFERROR(INDEX($DS$6:$FG$507,MATCH($B" & Irow & ",$DS$6:$DS$507,0),MATCH(""Room Collection 5 Hurdle Revenue"",$DS$5:$FG$5,0))-INDEX($HA$6:$IO$507,MATCH($B" & Irow & ",$HA$6:$HA$507,0),MATCH(""Room Collection 5 Hurdle Revenue"",$HA$5:$IO$5,0)),0))"
                                .Range(.Cells(Irow, iCol), .Cells(Irow + 30, iCol)).Value = .Range(.Cells(Irow, iCol), .Cells(Irow + 30, iCol)).Value
                            Case "Rem Capacity - PRP"
                                .Range(.Cells(Irow, iCol), .Cells(Irow + 30, iCol)).Formula = "=IFERROR(IF($DP" & Irow & "=""Actual"",0,INDEX(PRP_Data,MATCH($B" & Irow & "&AS$2,PRP!$C$5:$C$3000,0),MATCH(""Remaining Capacity"",PRP!$C$5:$S$5,0))),0)"
                                .Range(.Cells(Irow, iCol), .Cells(Irow + 30, iCol)).Value = .Range(.Cells(Irow, iCol), .Cells(Irow + 30, iCol)).Value
                            Case "Rem Dem"
                                .Range(.Cells(Irow, iCol), .Cells(Irow + 30, iCol)).Formula = "=IFERROR(IF($DP" & Irow & "=""Actual"",0,INDEX($DS$6:$FG$507,MATCH($B" & Irow & ",$DS$6:$DS$507,0),MATCH(""Room Collection 5 Rem DemTY #"",$DS$5:$FG$5,0))),0)"
                                .Range(.Cells(Irow, iCol), .Cells(Irow + 30, iCol)).Value = .Range(.Cells(Irow, iCol), .Cells(Irow + 30, iCol)).Value
                            Case "Rem Dem STLY"
                                .Range(.Cells(Irow, iCol), .Cells(Irow + 30, iCol)).Formula = "=IFERROR(IF($DP" & Irow & "=""Actual"",0,INDEX($DS$6:$FG$507,MATCH($B" & Irow & ",$DS$6:$DS$507,0),MATCH(""Room Collection 5 Rem Dem STLY #"",$DS$5:$FG$5,0))),0)"
                                .Range(.Cells(Irow, iCol), .Cells(Irow + 30, iCol)).Value = .Range(.Cells(Irow, iCol), .Cells(Irow + 30, iCol)).Value
                            Case "Rm OTB"
                                .Range(.Cells(Irow, iCol), .Cells(Irow + 30, iCol)).Formula = "=IF($DP" & Irow & "=""Actual"",0,IFERROR(INDEX($DS$6:$FG$507,MATCH($B" & Irow & ",$DS$6:$DS$507,0),MATCH(""Room Collection 5 Transient OTB TY"",$DS$5:$FG$5,0)),0))"
                                .Range(.Cells(Irow, iCol), .Cells(Irow + 30, iCol)).Value = .Range(.Cells(Irow, iCol), .Cells(Irow + 30, iCol)).Value
                            Case "Rm Pickup"
                                .Range(.Cells(Irow, iCol), .Cells(Irow + 30, iCol)).Formula = "=IF($DP" & Irow & "=""Actual"",0,IFERROR(INDEX($DS$6:$FG$507,MATCH($B" & Irow & ",$DS$6:$DS$507,0),MATCH(""Room Collection 5 Transient OTB TY"",$DS$5:$FG$5,0))-INDEX($HA$6:$IO$507,MATCH($B" & Irow & ",$HA$6:$HA$507,0),MATCH(""Room Collection 5 Transient OTB TY"",$HA$5:$IO$5,0)),0))"
                                .Range(.Cells(Irow, iCol), .Cells(Irow + 30, iCol)).Value = .Range(.Cells(Irow, iCol), .Cells(Irow + 30, iCol)).Value
                            Case "Rm OTB STLY"
                                .Range(.Cells(Irow, iCol), .Cells(Irow + 30, iCol)).Formula = "=IF($DP" & Irow & "=""Actual"",0,IFERROR(INDEX($DS$6:$FG$507,MATCH($B" & Irow & ",$DS$6:$DS$507,0),MATCH(""Room Collection 5 Transient OTB STLY"",$DS$5:$FG$5,0)),0))"
                                .Range(.Cells(Irow, iCol), .Cells(Irow + 30, iCol)).Value = .Range(.Cells(Irow, iCol), .Cells(Irow + 30, iCol)).Value
                            Case "Rm Pickup STLY"
                                .Range(.Cells(Irow, iCol), .Cells(Irow + 30, iCol)).Formula = "=IF($DP" & Irow & "=""Actual"",0,IFERROR(INDEX($DS$6:$FG$507,MATCH($B" & Irow & ",$DS$6:$DS$507,0),MATCH(""Room Collection 5 Transient OTB STLY"",$DS$5:$FG$5,0))-INDEX($HA$6:$IO$507,MATCH($B" & Irow & ",$HA$6:$HA$507,0),MATCH(""Room Collection 5 Transient OTB STLY"",$HA$5:$IO$5,0)),0))"
                                .Range(.Cells(Irow, iCol), .Cells(Irow + 30, iCol)).Value = .Range(.Cells(Irow, iCol), .Cells(Irow + 30, iCol)).Value
                        End Select
                     Case 52 To 60 'room collection 6
                        Select Case ws_RMcollection.Cells(5, iCol).Value
                            Case "Hurdle Rev."
                                .Range(.Cells(Irow, iCol), .Cells(Irow + 30, iCol)).Formula = "=IFERROR(IF($DP" & Irow & "=""Actual"",0,INDEX($DS$6:$FG$507,MATCH($B" & Irow & ",$DS$6:$DS$507,0),MATCH(""Room Collection 6 Hurdle Revenue"",$DS$5:$FG$5,0))),0)"
                                .Range(.Cells(Irow, iCol), .Cells(Irow + 30, iCol)).Value = .Range(.Cells(Irow, iCol), .Cells(Irow + 30, iCol)).Value
                            Case "Hurdle Rev Var"
                                .Range(.Cells(Irow, iCol), .Cells(Irow + 30, iCol)).Formula = "=IF($DP" & Irow & "=""Actual"",0,IFERROR(INDEX($DS$6:$FG$507,MATCH($B" & Irow & ",$DS$6:$DS$507,0),MATCH(""Room Collection 6 Hurdle Revenue"",$DS$5:$FG$5,0))-INDEX($HA$6:$IO$507,MATCH($B" & Irow & ",$HA$6:$HA$507,0),MATCH(""Room Collection 6 Hurdle Revenue"",$HA$5:$IO$5,0)),0))"
                                .Range(.Cells(Irow, iCol), .Cells(Irow + 30, iCol)).Value = .Range(.Cells(Irow, iCol), .Cells(Irow + 30, iCol)).Value
                            Case "Rem Capacity - PRP"
                                .Range(.Cells(Irow, iCol), .Cells(Irow + 30, iCol)).Formula = "=IFERROR(IF($DP" & Irow & "=""Actual"",0,INDEX(PRP_Data,MATCH($B" & Irow & "&BB$2,PRP!$C$5:$C$3000,0),MATCH(""Remaining Capacity"",PRP!$C$5:$S$5,0))),0)"
                                .Range(.Cells(Irow, iCol), .Cells(Irow + 30, iCol)).Value = .Range(.Cells(Irow, iCol), .Cells(Irow + 30, iCol)).Value
                            Case "Rem Dem"
                                .Range(.Cells(Irow, iCol), .Cells(Irow + 30, iCol)).Formula = "=IFERROR(IF($DP" & Irow & "=""Actual"",0,INDEX($DS$6:$FG$507,MATCH($B" & Irow & ",$DS$6:$DS$507,0),MATCH(""Room Collection 6 Rem DemTY #"",$DS$5:$FG$5,0))),0)"
                                .Range(.Cells(Irow, iCol), .Cells(Irow + 30, iCol)).Value = .Range(.Cells(Irow, iCol), .Cells(Irow + 30, iCol)).Value
                            Case "Rem Dem STLY"
                                .Range(.Cells(Irow, iCol), .Cells(Irow + 30, iCol)).Formula = "=IFERROR(IF($DP" & Irow & "=""Actual"",0,INDEX($DS$6:$FG$507,MATCH($B" & Irow & ",$DS$6:$DS$507,0),MATCH(""Room Collection 6 Rem Dem STLY #"",$DS$5:$FG$5,0))),0)"
                                .Range(.Cells(Irow, iCol), .Cells(Irow + 30, iCol)).Value = .Range(.Cells(Irow, iCol), .Cells(Irow + 30, iCol)).Value
                            Case "Rm OTB"
                                .Range(.Cells(Irow, iCol), .Cells(Irow + 30, iCol)).Formula = "=IF($DP" & Irow & "=""Actual"",0,IFERROR(INDEX($DS$6:$FG$507,MATCH($B" & Irow & ",$DS$6:$DS$507,0),MATCH(""Room Collection 6 Transient OTB TY"",$DS$5:$FG$5,0)),0))"
                                .Range(.Cells(Irow, iCol), .Cells(Irow + 30, iCol)).Value = .Range(.Cells(Irow, iCol), .Cells(Irow + 30, iCol)).Value
                            Case "Rm Pickup"
                                .Range(.Cells(Irow, iCol), .Cells(Irow + 30, iCol)).Formula = "=IF($DP" & Irow & "=""Actual"",0,IFERROR(INDEX($DS$6:$FG$507,MATCH($B" & Irow & ",$DS$6:$DS$507,0),MATCH(""Room Collection 6 Transient OTB TY"",$DS$5:$FG$5,0))-INDEX($HA$6:$IO$507,MATCH($B" & Irow & ",$HA$6:$HA$507,0),MATCH(""Room Collection 6 Transient OTB TY"",$HA$5:$IO$5,0)),0))"
                                .Range(.Cells(Irow, iCol), .Cells(Irow + 30, iCol)).Value = .Range(.Cells(Irow, iCol), .Cells(Irow + 30, iCol)).Value
                            Case "Rm OTB STLY"
                                .Range(.Cells(Irow, iCol), .Cells(Irow + 30, iCol)).Formula = "=IF($DP" & Irow & "=""Actual"",0,IFERROR(INDEX($DS$6:$FG$507,MATCH($B" & Irow & ",$DS$6:$DS$507,0),MATCH(""Room Collection 6 Transient OTB STLY"",$DS$5:$FG$5,0)),0))"
                                .Range(.Cells(Irow, iCol), .Cells(Irow + 30, iCol)).Value = .Range(.Cells(Irow, iCol), .Cells(Irow + 30, iCol)).Value
                            Case "Rm Pickup STLY"
                                .Range(.Cells(Irow, iCol), .Cells(Irow + 30, iCol)).Formula = "=IF($DP" & Irow & "=""Actual"",0,IFERROR(INDEX($DS$6:$FG$507,MATCH($B" & Irow & ",$DS$6:$DS$507,0),MATCH(""Room Collection 6 Transient OTB STLY"",$DS$5:$FG$5,0))-INDEX($HA$6:$IO$507,MATCH($B" & Irow & ",$HA$6:$HA$507,0),MATCH(""Room Collection 6 Transient OTB STLY"",$HA$5:$IO$5,0)),0))"
                                .Range(.Cells(Irow, iCol), .Cells(Irow + 30, iCol)).Value = .Range(.Cells(Irow, iCol), .Cells(Irow + 30, iCol)).Value
                        End Select
                     Case 61 To 69 'room collection 7
                        Select Case ws_RMcollection.Cells(5, iCol).Value
                            Case "Hurdle Rev."
                                .Range(.Cells(Irow, iCol), .Cells(Irow + 30, iCol)).Formula = "=IFERROR(IF($DP" & Irow & "=""Actual"",0,INDEX($DS$6:$FG$507,MATCH($B" & Irow & ",$DS$6:$DS$507,0),MATCH(""Room Collection 7 Hurdle Revenue"",$DS$5:$FG$5,0))),0)"
                                .Range(.Cells(Irow, iCol), .Cells(Irow + 30, iCol)).Value = .Range(.Cells(Irow, iCol), .Cells(Irow + 30, iCol)).Value
                            Case "Hurdle Rev Var"
                                .Range(.Cells(Irow, iCol), .Cells(Irow + 30, iCol)).Formula = "=IF($DP" & Irow & "=""Actual"",0,IFERROR(INDEX($DS$6:$FG$507,MATCH($B" & Irow & ",$DS$6:$DS$507,0),MATCH(""Room Collection 7 Hurdle Revenue"",$DS$5:$FG$5,0))-INDEX($HA$6:$IO$507,MATCH($B" & Irow & ",$HA$6:$HA$507,0),MATCH(""Room Collection 7 Hurdle Revenue"",$HA$5:$IO$5,0)),0))"
                                .Range(.Cells(Irow, iCol), .Cells(Irow + 30, iCol)).Value = .Range(.Cells(Irow, iCol), .Cells(Irow + 30, iCol)).Value
                            Case "Rem Capacity - PRP"
                                .Range(.Cells(Irow, iCol), .Cells(Irow + 30, iCol)).Formula = "=IFERROR(IF($DP" & Irow & "=""Actual"",0,INDEX(PRP_Data,MATCH($B" & Irow & "&BK$2,PRP!$C$5:$C$3000,0),MATCH(""Remaining Capacity"",PRP!$C$5:$S$5,0))),0)"
                                .Range(.Cells(Irow, iCol), .Cells(Irow + 30, iCol)).Value = .Range(.Cells(Irow, iCol), .Cells(Irow + 30, iCol)).Value
                            Case "Rem Dem"
                                .Range(.Cells(Irow, iCol), .Cells(Irow + 30, iCol)).Formula = "=IFERROR(IF($DP" & Irow & "=""Actual"",0,INDEX($DS$6:$FG$507,MATCH($B" & Irow & ",$DS$6:$DS$507,0),MATCH(""Room Collection 7 Rem DemTY #"",$DS$5:$FG$5,0))),0)"
                                .Range(.Cells(Irow, iCol), .Cells(Irow + 30, iCol)).Value = .Range(.Cells(Irow, iCol), .Cells(Irow + 30, iCol)).Value
                            Case "Rem Dem STLY"
                                .Range(.Cells(Irow, iCol), .Cells(Irow + 30, iCol)).Formula = "=IFERROR(IF($DP" & Irow & "=""Actual"",0,INDEX($DS$6:$FG$507,MATCH($B" & Irow & ",$DS$6:$DS$507,0),MATCH(""Room Collection 7 Rem Dem STLY #"",$DS$5:$FG$5,0))),0)"
                                .Range(.Cells(Irow, iCol), .Cells(Irow + 30, iCol)).Value = .Range(.Cells(Irow, iCol), .Cells(Irow + 30, iCol)).Value
                            Case "Rm OTB"
                                .Range(.Cells(Irow, iCol), .Cells(Irow + 30, iCol)).Formula = "=IF($DP" & Irow & "=""Actual"",0,IFERROR(INDEX($DS$6:$FG$507,MATCH($B" & Irow & ",$DS$6:$DS$507,0),MATCH(""Room Collection 7 Transient OTB TY"",$DS$5:$FG$5,0)),0))"
                                .Range(.Cells(Irow, iCol), .Cells(Irow + 30, iCol)).Value = .Range(.Cells(Irow, iCol), .Cells(Irow + 30, iCol)).Value
                            Case "Rm Pickup"
                                .Range(.Cells(Irow, iCol), .Cells(Irow + 30, iCol)).Formula = "=IF($DP" & Irow & "=""Actual"",0,IFERROR(INDEX($DS$6:$FG$507,MATCH($B" & Irow & ",$DS$6:$DS$507,0),MATCH(""Room Collection 7 Transient OTB TY"",$DS$5:$FG$5,0))-INDEX($HA$6:$IO$507,MATCH($B" & Irow & ",$HA$6:$HA$507,0),MATCH(""Room Collection 7 Transient OTB TY"",$HA$5:$IO$5,0)),0))"
                                .Range(.Cells(Irow, iCol), .Cells(Irow + 30, iCol)).Value = .Range(.Cells(Irow, iCol), .Cells(Irow + 30, iCol)).Value
                            Case "Rm OTB STLY"
                                .Range(.Cells(Irow, iCol), .Cells(Irow + 30, iCol)).Formula = "=IF($DP" & Irow & "=""Actual"",0,IFERROR(INDEX($DS$6:$FG$507,MATCH($B" & Irow & ",$DS$6:$DS$507,0),MATCH(""Room Collection 7 Transient OTB STLY"",$DS$5:$FG$5,0)),0))"
                                .Range(.Cells(Irow, iCol), .Cells(Irow + 30, iCol)).Value = .Range(.Cells(Irow, iCol), .Cells(Irow + 30, iCol)).Value
                            Case "Rm Pickup STLY"
                                .Range(.Cells(Irow, iCol), .Cells(Irow + 30, iCol)).Formula = "=IF($DP" & Irow & "=""Actual"",0,IFERROR(INDEX($DS$6:$FG$507,MATCH($B" & Irow & ",$DS$6:$DS$507,0),MATCH(""Room Collection 7 Transient OTB STLY"",$DS$5:$FG$5,0))-INDEX($HA$6:$IO$507,MATCH($B" & Irow & ",$HA$6:$HA$507,0),MATCH(""Room Collection 7 Transient OTB STLY"",$HA$5:$IO$5,0)),0))"
                                .Range(.Cells(Irow, iCol), .Cells(Irow + 30, iCol)).Value = .Range(.Cells(Irow, iCol), .Cells(Irow + 30, iCol)).Value
                        End Select
                     Case 70 To 78 'room collection 8
                        Select Case ws_RMcollection.Cells(5, iCol).Value
                            Case "Hurdle Rev."
                                .Range(.Cells(Irow, iCol), .Cells(Irow + 30, iCol)).Formula = "=IFERROR(IF($DP" & Irow & "=""Actual"",0,INDEX($DS$6:$FG$507,MATCH($B" & Irow & ",$DS$6:$DS$507,0),MATCH(""Room Collection 8 Hurdle Revenue"",$DS$5:$FG$5,0))),0)"
                               .Range(.Cells(Irow, iCol), .Cells(Irow + 30, iCol)).Value = .Range(.Cells(Irow, iCol), .Cells(Irow + 30, iCol)).Value
                            Case "Hurdle Rev Var"
                                .Range(.Cells(Irow, iCol), .Cells(Irow + 30, iCol)).Formula = "=IF($DP" & Irow & "=""Actual"",0,IFERROR(INDEX($DS$6:$FG$507,MATCH($B" & Irow & ",$DS$6:$DS$507,0),MATCH(""Room Collection 8 Hurdle Revenue"",$DS$5:$FG$5,0))-INDEX($HA$6:$IO$507,MATCH($B" & Irow & ",$HA$6:$HA$507,0),MATCH(""Room Collection 8 Hurdle Revenue"",$HA$5:$IO$5,0)),0))"
                                .Range(.Cells(Irow, iCol), .Cells(Irow + 30, iCol)).Value = .Range(.Cells(Irow, iCol), .Cells(Irow + 30, iCol)).Value
                            Case "Rem Capacity - PRP"
                                .Range(.Cells(Irow, iCol), .Cells(Irow + 30, iCol)).Formula = "=IFERROR(IF($DP" & Irow & "=""Actual"",0,INDEX(PRP_Data,MATCH($B" & Irow & "&BT$2,PRP!$C$5:$C$3000,0),MATCH(""Remaining Capacity"",PRP!$C$5:$S$5,0))),0)"
                                .Range(.Cells(Irow, iCol), .Cells(Irow + 30, iCol)).Value = .Range(.Cells(Irow, iCol), .Cells(Irow + 30, iCol)).Value
                            Case "Rem Dem"
                                .Range(.Cells(Irow, iCol), .Cells(Irow + 30, iCol)).Formula = "=IFERROR(IF($DP" & Irow & "=""Actual"",0,INDEX($DS$6:$FG$507,MATCH($B" & Irow & ",$DS$6:$DS$507,0),MATCH(""Room Collection 8 Rem DemTY #"",$DS$5:$FG$5,0))),0)"
                                .Range(.Cells(Irow, iCol), .Cells(Irow + 30, iCol)).Value = .Range(.Cells(Irow, iCol), .Cells(Irow + 30, iCol)).Value
                            Case "Rem Dem STLY"
                                .Range(.Cells(Irow, iCol), .Cells(Irow + 30, iCol)).Formula = "=IFERROR(IF($DP" & Irow & "=""Actual"",0,INDEX($DS$6:$FG$507,MATCH($B" & Irow & ",$DS$6:$DS$507,0),MATCH(""Room Collection 8 Rem Dem STLY #"",$DS$5:$FG$5,0))),0)"
                                .Range(.Cells(Irow, iCol), .Cells(Irow + 30, iCol)).Value = .Range(.Cells(Irow, iCol), .Cells(Irow + 30, iCol)).Value
                            Case "Rm OTB"
                                .Range(.Cells(Irow, iCol), .Cells(Irow + 30, iCol)).Formula = "=IF($DP" & Irow & "=""Actual"",0,IFERROR(INDEX($DS$6:$FG$507,MATCH($B" & Irow & ",$DS$6:$DS$507,0),MATCH(""Room Collection 8 Transient OTB TY"",$DS$5:$FG$5,0)),0))"
                                .Range(.Cells(Irow, iCol), .Cells(Irow + 30, iCol)).Value = .Range(.Cells(Irow, iCol), .Cells(Irow + 30, iCol)).Value
                            Case "Rm Pickup"
                                .Range(.Cells(Irow, iCol), .Cells(Irow + 30, iCol)).Formula = "=IF($DP" & Irow & "=""Actual"",0,IFERROR(INDEX($DS$6:$FG$507,MATCH($B" & Irow & ",$DS$6:$DS$507,0),MATCH(""Room Collection 8 Transient OTB TY"",$DS$5:$FG$5,0))-INDEX($HA$6:$IO$507,MATCH($B" & Irow & ",$HA$6:$HA$507,0),MATCH(""Room Collection 8 Transient OTB TY"",$HA$5:$IO$5,0)),0))"
                                .Range(.Cells(Irow, iCol), .Cells(Irow + 30, iCol)).Value = .Range(.Cells(Irow, iCol), .Cells(Irow + 30, iCol)).Value
                            Case "Rm OTB STLY"
                                .Range(.Cells(Irow, iCol), .Cells(Irow + 30, iCol)).Formula = "=IF($DP" & Irow & "=""Actual"",0,IFERROR(INDEX($DS$6:$FG$507,MATCH($B" & Irow & ",$DS$6:$DS$507,0),MATCH(""Room Collection 8 Transient OTB STLY"",$DS$5:$FG$5,0)),0))"
                                .Range(.Cells(Irow, iCol), .Cells(Irow + 30, iCol)).Value = .Range(.Cells(Irow, iCol), .Cells(Irow + 30, iCol)).Value
                            Case "Rm Pickup STLY"
                                .Range(.Cells(Irow, iCol), .Cells(Irow + 30, iCol)).Formula = "=IF($DP" & Irow & "=""Actual"",0,IFERROR(INDEX($DS$6:$FG$507,MATCH($B" & Irow & ",$DS$6:$DS$507,0),MATCH(""Room Collection 8 Transient OTB STLY"",$DS$5:$FG$5,0))-INDEX($HA$6:$IO$507,MATCH($B" & Irow & ",$HA$6:$HA$507,0),MATCH(""Room Collection 8 Transient OTB STLY"",$HA$5:$IO$5,0)),0))"
                                .Range(.Cells(Irow, iCol), .Cells(Irow + 30, iCol)).Value = .Range(.Cells(Irow, iCol), .Cells(Irow + 30, iCol)).Value
                        End Select
                End Select
            Next iCol
        Next Irow
    End With
    
    'hide the room collection based on the number of room collection assigned
    'note if a room collection is added the user will have to unhide that room collection manually
    Select Case CStr(IIf(sh_OYv2Data.Range("B5").Value = vbNullString, 8, sh_OYv2Data.Range("B5").Value))
        Case 1: ws_RMcollection.Columns("P:BZ").Hidden = True
        Case 2: ws_RMcollection.Columns("Y:BZ").Hidden = True
        Case 3: ws_RMcollection.Columns("AH:BZ").Hidden = True
        Case 4: ws_RMcollection.Columns("AQ:BZ").Hidden = True
        Case 5: ws_RMcollection.Columns("AZ:BZ").Hidden = True
        Case 6: ws_RMcollection.Columns("BI:BZ").Hidden = True
        Case 7: ws_RMcollection.Columns("BR:BZ").Hidden = True
    End Select
    
    Irow = Empty: iCol = Empty
End Sub
Sub ApplyDataGraphs()

Dim Irow As Long, iCol As Long
    
    'copy day status
    sh_DashboardData.Range("BM6:BM196").Formula = "=IFERROR(INDEX(OYv2Data,MATCH(BL6,OYv2Data!$A$9:$A$400,0),MATCH(""Days Out"",OYv2Data!$A$9:$FZ$9,0)),"""")"
    sh_DashboardData.Range("BM6:BM196").Value = sh_DashboardData.Range("BM6:BM196").Value
    'copy applied demand
    sh_DashboardData.Range("BN6:BN196").Formula = "=IFERROR(IF($BM6=""Actual"","""",INDEX(OYv2Data,MATCH(BL6,OYv2Data!$A$9:$A$400,0),MATCH(""Applied Rem Dem"",OYv2Data!$A$9:$FZ$9,0))),"""")"
    sh_DashboardData.Range("BN6:BN196").Value = sh_DashboardData.Range("BN6:BN196").Value
    'copy remaining demand STLY
    sh_DashboardData.Range("BO6:BO196").Formula = "=IFERROR(IF($BM6=""Actual"","""",INDEX(OYv2Data,MATCH($BL6,OYv2Data!$A$9:$A$400,0),MATCH(""Rem Dem STLY"",OYv2Data!$A$9:$FZ$9,0))),"""")"
    sh_DashboardData.Range("BO6:BO196").Value = sh_DashboardData.Range("BO6:BO196").Value
    'copy system remaining demand
    sh_DashboardData.Range("BP6:BP196").Formula = "=IFERROR(IF($BM6=""Actual"","""",INDEX(OYv2Data,MATCH($BL6,OYv2Data!$A$9:$A$400,0),MATCH(""Sys Rem Dem"",OYv2Data!$A$9:$FZ$9,0))),"""")"
    sh_DashboardData.Range("BP6:BP196").Value = sh_DashboardData.Range("BP6:BP196").Value
    'copy transient Booked actual for actual/OTB for future dates
    sh_DashboardData.Range("BQ6:BQ196").Formula = "=IFERROR(IF($BM6=""Actual"",VLOOKUP($BL6,OYprojData,5,FALSE),INDEX(OYv2Data,MATCH($BL6,OYv2Data!$A$9:$A$400,0),MATCH(""Total Transient Booked"",OYv2Data!$A$9:$FZ$9,0))),"""")"
    sh_DashboardData.Range("BQ6:BQ196").Value = sh_DashboardData.Range("BQ6:BQ196").Value
    'copy additional demand
    sh_DashboardData.Range("BR6:BR196").Formula = "=IFERROR(INDEX(OYv2Data,MATCH($BL6,OYv2Data!$A$9:$A$400,0),MATCH(""Additional Demand"",OYv2Data!$A$9:$FZ$9,0)),"""")"
    sh_DashboardData.Range("BR6:BR196").Value = sh_DashboardData.Range("BR6:BR196").Value
    'copy group projections Actual and projected
    sh_DashboardData.Range("BS6:BS196").Formula = "=IFERROR(IF($BM6=""Actual"",VLOOKUP($BL6,OYprojData,2,FALSE),INDEX(OYv2Data,MATCH($BL6,OYv2Data!$A$9:$A$400,0),MATCH(""OYv2 Group Proj"",OYv2Data!$A$9:$FZ$9,0))),"""")"
    sh_DashboardData.Range("BS6:BS196").Value = sh_DashboardData.Range("BS6:BS196").Value
    'copy contract projected
    sh_DashboardData.Range("BT6:BT196").Formula = "=IFERROR(IF($BM6=""Actual"",VLOOKUP($BL6,OYprojData,6,FALSE),INDEX(OYv2Data,MATCH($BL6,OYv2Data!$A$9:$A$400,0),MATCH(""OYv2 Contract Proj"",OYv2Data!$A$9:$FZ$9,0))),"""")"
    sh_DashboardData.Range("BT6:BT196").Value = sh_DashboardData.Range("BT6:BT196").Value
    'copy comps
    sh_DashboardData.Range("BU6:BU196").Formula = "=IFERROR(IF($BM6=""Actual"",VLOOKUP($BL6,OYprojData,8,FALSE),INDEX(OYv2Data,MATCH($BL6,OYv2Data!$A$9:$A$400,0),MATCH(""Complimentary Booked TY"",OYv2Data!$A$9:$FZ$9,0))),"""")"
    sh_DashboardData.Range("BU6:BU196").Value = sh_DashboardData.Range("BU6:BU196").Value
    'copy OOO
    sh_DashboardData.Range("BV6:BV196").Formula = "=IFERROR(IF($BM6=""Actual"",VLOOKUP($BL6,OYprojData,7,FALSE),INDEX(OYv2Data,MATCH($BL6,OYv2Data!$A$9:$A$400,0),MATCH(""Out of Order"",OYv2Data!$A$9:$FZ$9,0))),"""")"
    sh_DashboardData.Range("BV6:BV196").Value = sh_DashboardData.Range("BV6:BV196").Value
    'copy Daily Capacity
    sh_DashboardData.Range("BW6:BW196").Formula = "=IFERROR(INDEX(OYv2Data,MATCH($BL6,OYv2Data!$A$9:$A$400,0),MATCH(""Capacity"",OYv2Data!$A$9:$FZ$9,0)),"""")"
    sh_DashboardData.Range("BW6:BW196").Value = sh_DashboardData.Range("BW6:BW196").Value
    'copy grp slippage
    sh_DashboardData.Range("BX6:BX196").Formula = "=IFERROR(IF(OR($BM6=""Actual"",Setup!$K$30=""NO""),"""",IF(INDEX(DaybyDay!$B$6:$BN$234,MATCH(DashboardData!$BL6,DaybyDay!$B$6:$B$234,0),MATCH(""Slippage Def Proj vs Bkd"",DaybyDay!$B$5:$BN$5,0))<$BX$1,""Y"","""")),"""")"
    sh_DashboardData.Range("BX6:BX196").Value = sh_DashboardData.Range("BX6:BX196").Value
    'apply user override flag
    sh_DashboardData.Range("CC6:CC196").Formula = "=IFERROR(INDEX(OYv2Data,MATCH($BL6,OYv2Data!$A$9:$A$400,0),MATCH(""User Override"",OYv2Data!$A$9:$FZ$9,0)),"""")"
    sh_DashboardData.Range("CC6:CC196").Value = sh_DashboardData.Range("CC6:CC196").Value
    'Rem Demand override calculation for the graph flags
    sh_DashboardData.Range("BY6:BY196").Formula = "=IF(BM6=""Actual"","""",IF(CC6=""Y"",SUM(BP6:BQ6,BS6:BV6,CA6),""""))"
    sh_DashboardData.Range("BY6:BY196").Value = sh_DashboardData.Range("BY6:BY196").Value
    'Sys Rem Dem to apply on the STLY remaining demand graph is the user did an override
    sh_DashboardData.Range("BZ6:BZ196").Formula = "=IF(BM6=""Actual"","""",IF(CC6=""Y"",BP6,""""))"
    sh_DashboardData.Range("BZ6:BZ196").Value = sh_DashboardData.Range("BZ6:BZ196").Value
    'allotment forecast
    sh_DashboardData.Range("CA6:CA196").Formula = "=IFERROR(INDEX(OYv2Data,MATCH($BL6,OYv2Data!$A$9:$A$400,0),MATCH(""Allotment Forecast"",OYv2Data!$A$9:$FZ$9,0)),"""")"
    sh_DashboardData.Range("CA6:CA196").Value = sh_DashboardData.Range("CA6:CA196").Value
    'Sum transient, Comp & allotment
    sh_DashboardData.Range("CB6:CB196").Formula = "=IF(SUM(BQ6,BU6)>0,SUM(BQ6,BU6),"""")"
    sh_DashboardData.Range("CB6:CB196").Value = sh_DashboardData.Range("CB6:CB196").Value
    
End Sub
Attribute VB_Name = "STR"
Option Explicit
Option Private Module
Sub ShowUserForm()
    ufrmPacket.Show
End Sub
Sub STR_NoSegDetail()
Attribute STR_NoSegDetail.VB_ProcData.VB_Invoke_Func = " \n14"
Dim MyRange As Range
    
    On Error Resume Next
    
    Set MyRange = Selection
    If Not MyRange Is Nothing Then
        Selection.Copy
        ActiveSheet.Pictures.Paste.Select
        Application.CutCopyMode = False
        Selection.Formula = "=STRCompile!$B$3:$P$20"
        Selection.Name = "STR_No_Seg"
        Selection.ShapeRange.LockAspectRatio = msoFalse
    Else
        MsgBox "You did not select a range. Please select a range first.", vbInformation, "No range selected"
    End If
    On Error GoTo 0
    
    Set MyRange = Nothing
End Sub
Sub STR_WithSegDetail()
Dim MyRange As Range
    
    On Error Resume Next
    
    Set MyRange = Selection
    If Not MyRange Is Nothing Then
        Selection.Copy
        ActiveSheet.Pictures.Paste.Select
        Application.CutCopyMode = False
        Selection.Formula = "=STRCompile!$B$28:$P$57"
        Selection.Name = "STR_and_SEG"
        Selection.ShapeRange.LockAspectRatio = msoFalse
    Else
        MsgBox "You did not select a range. Please select a range first.", vbInformation, "No range selected"
    End If
    On Error GoTo 0
    
    Set MyRange = Nothing

End Sub
Sub STR_TrnSegDetail()
Dim MyRange As Range
    
   On Error Resume Next
    
    Set MyRange = Selection
    If Not MyRange Is Nothing Then
        Selection.Copy
        ActiveSheet.Pictures.Paste.Select
        Application.CutCopyMode = False
        Selection.Formula = "=STRCompile!$C$40:$F$50"
        Selection.Name = "STR_TrnSeg"
        Selection.ShapeRange.LockAspectRatio = msoFalse
    Else
        MsgBox "You did not select a range. Please select a range first.", vbInformation, "No range selected"
    End If
    On Error GoTo 0
    
    Set MyRange = Nothing

End Sub
Sub STR_GrpSegDetail()
Dim MyRange As Range
    
    On Error Resume Next
    
    Set MyRange = Selection
    If Not MyRange Is Nothing Then
        Selection.Copy
        ActiveSheet.Pictures.Paste.Select
        Application.CutCopyMode = False
        Selection.Formula = "=STRCompile!$H$40:$K$50"
        Selection.Name = "STR_GrpSeg"
        Selection.ShapeRange.LockAspectRatio = msoFalse
    Else
        MsgBox "You did not select a range. Please select a range first.", vbInformation, "No range selected"
    End If
    On Error GoTo 0
    
    Set MyRange = Nothing

End Sub
Sub STR_CtcSegDetail()
Dim MyRange As Range
    
    On Error Resume Next
    
    Set MyRange = Selection
    If Not MyRange Is Nothing Then
        Selection.Copy
        ActiveSheet.Pictures.Paste.Select
        Application.CutCopyMode = False
        Selection.Formula = "=STRCompile!$M$40:$P$50"
        Selection.Name = "STR_CtcSeg"
        Selection.ShapeRange.LockAspectRatio = msoFalse
    Else
        MsgBox "You did not select a range. Please select a range first.", vbInformation, "No range selected"
    End If
    On Error GoTo 0
    
    Set MyRange = Nothing

End Sub
Attribute VB_Name = "ThisWorkbook"
Attribute VB_Base = "0{00020819-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Option Explicit
Private Sub Workbook_Open()
Dim ws As Worksheet, MyRibbon As Boolean

    On Error Resume Next
        Application.ScreenUpdating = False
        MyRibbon = (Application.CommandBars("Ribbon").Controls(1).Height < 109)
        If MyRibbon = False Then Application.CommandBars.ExecuteMso "MinimizeRibbon"
        'this is to turn of the right click on the tab
        Application.CommandBars("Ply").Enabled = False
        
        'reset scroll area
        Select Case ActiveSheet.CodeName
            Case "sh_SSP_CompShop": ActiveSheet.ScrollArea = "$A$1:$X$52"
            Case "sh_SSP_CompShop2": ActiveSheet.ScrollArea = "$A$1:$X$52"
            Case "sh_SSP_CompShop3": ActiveSheet.ScrollArea = "$A$1:$X$52"
            Case "sh_SSP_STR_Combo_28Days": ActiveSheet.ScrollArea = "$A$1:$AB$72"
            Case "sh_SSP_STR_Combo_Wk": ActiveSheet.ScrollArea = "$A$1:$AB$72"
            Case "sh_SSP_STRComp": ActiveSheet.ScrollArea = "$A$1:$AG$60"
            Case "sh_SSP_STRCompWk": ActiveSheet.ScrollArea = "$A$1:$AL$65"
            Case "sh_SSP_STRdow": ActiveSheet.ScrollArea = "$A$1:$V$80"
            Case "sh_SSP_STRmkgD": ActiveSheet.ScrollArea = "$A$1:$AG$50"
            Case "sh_SSP_STRmkgMth": ActiveSheet.ScrollArea = "$A$1:$AB$150"
            Case "sh_SSP_STRmth": ActiveSheet.ScrollArea = "$A$1:$U$40"
            Case "sh_SSP_STRmthWebsite": ActiveSheet.ScrollArea = "$A$1:$AK$45"
            Case "sh_SSP_STRwk": ActiveSheet.ScrollArea = "$A$1:$AB$42"
            Case "sh_SSP_STRWk_SegGlance": ActiveSheet.ScrollArea = "$A$1:$U$40"
            Case "sh_OYProj": sh_OYProj.ScrollArea = "$A$1:$AV$5500"
            
            Case "ws_Dashboard": ws_Dashboard.ScrollArea = "$A$1:$BB$380"
            Case "ws_DataSource": ws_DataSource.ScrollArea = "$A$1:$T$85"
            Case "ws_DayXDay": ws_DayXDay.ScrollArea = "$A$1:$CP$511"
            Case "ws_RMcollection": ws_RMcollection.ScrollArea = "$A$1:$CH$511"
            Case "ws_Segmentation": ws_Segmentation.ScrollArea = "$A$1:$BK$511"
            Case "ws_Setup": ws_Setup.ScrollArea = "$A$1:$O$40"
            Case "ws_SSP_Agenda": ws_SSP_Agenda.ScrollArea = "$A$1:$T$45"
            Case "ws_SSP_PPT": ws_SSP_PPT.ScrollArea = "$A$1:$R$55"
            Case "ws_Summary": ws_Summary.ScrollArea = "$A$1:$S$520"
            Case "ws_Version": ws_Version.ScrollArea = "$A$1:$D$40"
            Case "ws_Welcome": ws_Welcome.ScrollArea = "$A$1:$R$55"
        End Select
        Select Case VBA.Left(ActiveSheet.CodeName, 3)
            Case "wsC": ActiveSheet.ScrollArea = "$A$1:$R$55"
        End Select
        
        'protect tabs
        For Each ws In Worksheets
            Select Case ws.CodeName
                'hide data tab
                Case "sh_DashboardData", "sh_GPO", "sh_GRAMSSR", "sh_IchartMth", "sh_IchartWk", "sh_MAR", _
                        "sh_OYact_bud", "sh_OYv2Data", "sh_PkgLayout", "sh_Projection", "sh_PRP", "sh_RPO", "sh_SEG10LY", _
                        "sh_SnapshotData", "sh_SnapshotData", "wsCustom", "sh_OYElevate"
                       ws.Visible = xlSheetVeryHidden
                'protect other tabs
                Case "ws_Welcome", "ws_Setup", "ws_SSP_PPT", "ws_Version", "ws_SSP_Agenda"
                    ws.Protect "unlockME", DrawingObjects:=True, Contents:=True, Scenarios:=True
                    ws.EnableSelection = xlNoRestrictions
                Case "ws_SSP_Agenda"
                    ws.Protect "unlockME", DrawingObjects:=True, Contents:=True, Scenarios:=True
                    ws.EnableSelection = xlUnlockedCells
                Case "ws_Dashboard"
                    ws.Protect "unlockME", DrawingObjects:=True, Contents:=True, Scenarios:=False, AllowFormattingCells:=True, AllowFormattingRows:=False, AllowFormattingColumns:=False, UserInterfaceOnly:=True
                    ws.EnableSelection = xlUnlockedCells
                Case "ws_Summary"
                    ws.Protect "unlockME", DrawingObjects:=True, Contents:=True, Scenarios:=False, AllowFormattingCells:=True
                Case "ws_DayXDay", "ws_Segmentation", "ws_RMcollection"
                    ws.Protect "unlockME", DrawingObjects:=True, Contents:=True, Scenarios:=False, AllowFormattingCells:=True, AllowFormattingRows:=False, AllowFormattingColumns:=False
                Case "sh_OYProj": ws.Protect "unlockME", DrawingObjects:=True, Contents:=True, Scenarios:=False, AllowFormattingCells:=False, AllowFormattingRows:=False, AllowFormattingColumns:=False
                                
            End Select
            Select Case VBA.Left(ws.CodeName, 3)
                Case "wsC": ws.Protect "unlockME", DrawingObjects:=False, Contents:=True, Scenarios:=True
            End Select
        Next
        
        Application.ScreenUpdating = True
    On Error GoTo 0
    
End Sub
Private Sub Workbook_BeforeClose(Cancel As Boolean)

Dim MyRibbon As Boolean
    
    On Error Resume Next
        
    MyRibbon = (Application.CommandBars("Ribbon").Controls(1).Height < 109)
    If MyRibbon = True Then Application.CommandBars.ExecuteMso "MinimizeRibbon"
    'this is to reset the right click on the tab
    Application.CommandBars("Ply").Enabled = True
    Application.CommandBars("Ply").Reset
    
    Call CloseSaveYesNoCancel
    
    On Error GoTo 0
    
End Sub

Private Sub Workbook_BeforePrint(Cancel As Boolean)
Select Case ActiveSheet.Cells(1, 1)
    Case Is <> " "
        Select Case ActiveSheet.CodeName
            Case "ws_DayXDay", "ws_Segmentation", "ws_RMcollection", "ws_Summary", "ws_Dashboard"
            MsgBox "You can't print this worksheet manually. Use the ""Print"" button to print this tab"
        End Select
            Cancel = True
            ActiveSheet.DisplayPageBreaks = False
End Select

End Sub

Private Sub Workbook_WindowActivate(ByVal Wn As Window)
    Application.CommandBars("Ply").Enabled = False
End Sub

Private Sub Workbook_WindowDeactivate(ByVal Wn As Window)
        Application.CommandBars("Ply").Enabled = True
        Application.CommandBars("Ply").Reset
End Sub
Attribute VB_Name = "ToolRest"
Option Explicit
Option Private Module

Sub RestTool()
Dim ws As Worksheet, Irow As Long, iCol As Long, iSh As Byte, cht As ChartObject, nm As Name

With Application: .ScreenUpdating = False: .EnableEvents = False: .Calculation = xlCalculationManual: .DisplayAlerts = False: End With
        
    Call PicFormula
    
    With Application: .ScreenUpdating = False: .EnableEvents = False: .Calculation = xlCalculationManual: .DisplayAlerts = False: End With
    
    'clear all imported data
    For Each ws In Worksheets
        Select Case ws.CodeName
            'clear the data tabs
            Case "ws_Welcome"
                ws.Range("AA2:AD2").Value = "Letter"
                ws.Range("AA3:AD5").Value = True
                ws.Range("AA6:AD14").Value = False
                ws.Range("AA15:AD15").Value = 1
                ws.Range("AC16").Value = "Portrait"
                ws.Range("AD17").Value = True
                ws.Range("AD18:AD19").Value = False
                ws.Range("AA20:AC20").Value = False
                ws.Range("AJ5").Value = True 'set to not print dashboard month 4-5-6
                ws.Range("AK5").Value = False 'set dashboard comments to not print
                ws.Range("AL5").Value = True 'set summary day by day month 4 to 12 to not print
                ws.Range("AJ6:AL14").Value = False
                ws.Range("AJ9:AK14").ClearContents 'Dashboard doesn't have any data for month 7 to 12
                ws.Range("AK17").Value = vbNullString
                
            Case "ws_Dashboard"
                ws_Dashboard.Shapes("TxTbMth1").TextFrame.Characters.Text = vbNullString 'clear the comment month 1
                ws_Dashboard.Shapes("TxTbMth2").TextFrame.Characters.Text = vbNullString 'clear the comment month 2
                ws_Dashboard.Shapes("TxTbMth3").TextFrame.Characters.Text = vbNullString 'clear the comment month 3
                ws_Dashboard.Shapes("TxTbMth4").TextFrame.Characters.Text = vbNullString 'clear the comment month 4
                ws_Dashboard.Shapes("TxTbMth5").TextFrame.Characters.Text = vbNullString 'clear the comment month 5
                ws_Dashboard.Shapes("TxTbMth6").TextFrame.Characters.Text = vbNullString 'clear the comment month 6
                ws.Range("AN31:BA64").Clear
                ws.Range("AN92:BA124").Clear
                ws.Range("AN153:BA185").Clear
                ws.Range("AN214:BA246").Clear
                ws.Range("AN275:BA307").Clear
                ws.Range("AN336:BA369").Clear
                ws.Range("AN31:BA64").Locked = False
                ws.Range("AN92:BA124").Locked = False
                ws.Range("AN153:BA185").Locked = False
                ws.Range("AN214:BA246").Locked = False
                ws.Range("AN275:BA307").Locked = False
                ws.Range("AN336:BA369").Locked = False
                
                Select Case ws.Range("H1").Value
                    Case 1
                        ws.Range("H1").Value = vbNullString
                        For Each cht In ws.ChartObjects
                            Select Case cht.Name
                                Case "Mth1_ChartUnconstrain", "Mth2_ChartUnconstrain", "Mth3_ChartUnconstrain", "Mth4_ChartUnconstrain", "Mth5_ChartUnconstrain", "Mth6_ChartUnconstrain"
                                    ws.ChartObjects(cht.Name).Chart.FullSeriesCollection(1).Format.Fill.ForeColor.RGB = RGB(242, 220, 219)     'OOO
                                    ws.ChartObjects(cht.Name).Chart.FullSeriesCollection(2).Format.Fill.ForeColor.RGB = RGB(166, 166, 166)     'group projection
                                    ws.ChartObjects(cht.Name).Chart.FullSeriesCollection(3).Format.Fill.ForeColor.RGB = RGB(191, 191, 191)     'contract projection
                                    ws.ChartObjects(cht.Name).Chart.FullSeriesCollection(4).Format.Fill.ForeColor.RGB = RGB(228, 108, 10)      'allotments
                                    ws.ChartObjects(cht.Name).Chart.FullSeriesCollection(5).Format.Fill.ForeColor.RGB = RGB(195, 214, 155)     'transient + Comp OTB
                                    ws.ChartObjects(cht.Name).Chart.FullSeriesCollection(6).Format.Fill.ForeColor.RGB = RGB(255, 102, 255)     'Applied rem dem bar graph pink
                                    ws.ChartObjects(cht.Name).Chart.FullSeriesCollection(7).Format.Fill.ForeColor.RGB = RGB(238, 236, 225)    'Additional Demand
                                    ws.ChartObjects(cht.Name).Chart.FullSeriesCollection(8).Format.Line.ForeColor.RGB = RGB(192, 80, 77)     'Daily Capacity
                                    ws.ChartObjects(cht.Name).Chart.FullSeriesCollection(9).Format.Fill.ForeColor.RGB = RGB(112, 48, 160)      'Override indicator Triangle
                                    ws.ChartObjects(cht.Name).Chart.FullSeriesCollection(10).Format.Fill.ForeColor.RGB = RGB(0, 0, 0)       'group slippage alerts
                                Case "Mth1_ChartRemDemSTLY", "Mth2_ChartRemDemSTLY", "Mth3_ChartRemDemSTLY", "Mth4_ChartRemDemSTLY", "Mth5_ChartRemDemSTLY", "Mth6_ChartRemDemSTLY"
                                    ws.ChartObjects(cht.Name).Chart.FullSeriesCollection(1).Format.Fill.ForeColor.RGB = RGB(255, 102, 255)     'Applied rem dem bar graph pink
                                    ws.ChartObjects(cht.Name).Chart.FullSeriesCollection(2).Format.Fill.ForeColor.RGB = RGB(112, 48, 160)      'System Rem Dem Triangle
                                    ws.ChartObjects(cht.Name).Chart.FullSeriesCollection(3).Format.Fill.ForeColor.RGB = RGB(127, 127, 127)     'Rem Dem STLY dots
                                    ws.ChartObjects(cht.Name).Chart.FullSeriesCollection(3).Format.Line.ForeColor.RGB = RGB(127, 127, 127)     'Rem Dem STLY line
                                    ws.ChartObjects(cht.Name).Chart.FullSeriesCollection(4).Format.Fill.ForeColor.RGB = RGB(0, 0, 0)           'Grp Slippage alert
                            End Select
                        Next
                        Set cht = Nothing

                End Select
                
            Case "ws_Summary"
                ws.Activate
                ws.Unprotect "unlockME"
            
                On Error Resume Next
                ws.Range("B1").Value = "All"
                ws.Range("B7:B508").Value = "All"
                For Irow = 8 To 508
                    Select Case ws.Cells(Irow, 3).Value
                        Case "Def", "Tent"
                            ws.Cells(Irow, 2).Value = vbNullString
                            ws.Rows(Irow).EntireRow.Hidden = True
                    End Select
                    Select Case ws.Cells(Irow, 2).Value
                        Case "All"
                            ws.Rows(Irow).EntireRow.Hidden = False
                    End Select
                Next Irow
                ws.Protect "unlockME", DrawingObjects:=True, Contents:=True, Scenarios:=False, AllowFormattingCells:=True, AllowFormattingColumns:=False
                
            Case "ws_Setup"
                ws.Range("C15").Value = "HHHHH" 'marsha code
                ws.Range("G15").Value = vbNullString 'currency symbol
                ws.Range("K15").Value = "Daily" 'RPO
                ws.Range("K16").Value = "0.05" 'reset RPO Threshold Goal
                ws.Range("G16").Value = 0 'decimal
                ws.Range("C19").Value = "Standard" 'room collection 1 reset to Standard
                ws.Range("C20:C26").Value = ws.Range("B20:B26").Value 'Room collection name
                ws.Range("F19:F23").Value = "No" 'GPO
                ws.Range("F24:F25").Value = "Yes" 'GPO
                ws.Range("K19").Value = "20%" 'VAT previous
                ws.Range("K20").Value = "20%" 'VAT current
                ws.Range("K21").Value = "20%" 'VAT future
                ws.Range("L20").Value2 = VBA.Now() - 30 'VAT current date
                ws.Range("L21").Value2 = VBA.Now() + 360 'VAT future date
                ws.Range("J18").Value = "No" 'VAT indicator
                ws.Range("D30").Value = "Yes" 'Occupancy indicator
                ws.Range("E31").Value = "95%" 'High Occ
                ws.Range("E32").Value = "75%" 'Low occ
                ws.Range("F31").Value = "Green" 'Set high to Green
                ws.Range("L31").Value = "-20%" 'High Group Slippage
                ws.Range("L32").Value = "-5%" 'low group slippage
                ws.Range("K30").Value = "Yes" 'group slippage indicator
        
                Call ApplySetup 'reset the currency symbol and ADR decimal display
                With Application: .ScreenUpdating = False: .EnableEvents = False: .Calculation = xlCalculationManual: End With

            Case "ws_DayXDay"
                ws.Unprotect "unlockME"
                ws.Range("A6:A507").ClearContents
                ws.Range("FI3").Value = vbNullString
                For Irow = 6 To 507 Step 39
                    ws.Range("C" & Irow & ":DR" & Irow + 30).ClearContents 'clear events to Archived data SEG10LY Fx converter
                    ws.Range("DT" & Irow & ":FB" & Irow + 30).ClearContents
                    ws.Range("BQ" & Irow + 31 & "CJ" & Irow + 33).ClearContents 'clear bottom of the user section
                    For iCol = 3 To 64
                        Select Case ws.Cells(5, iCol).Value
                            Case "GPO Restrictions", "MAR Restrictions" ' this is to reset MAR to GPO and lock the cells
                                ws.Range(ws.Cells(Irow, iCol), ws.Cells(Irow + 30, iCol)).Interior.Pattern = xlNone
                                ws.Range(ws.Cells(Irow, iCol), ws.Cells(Irow + 30, iCol)).Locked = True
                        End Select
                    Next iCol
                Next
                ws.Range("FH6:GQ507").ClearContents
                ws.Range("BQ4:CJ4").Value = vbNullString 'clear user top header
                ws.Range("BQ5:CJ5").UnMerge
                ws.Range("BQ5").Value = "For User 1" 'rest all the headers
                ws.Range("BR5").Value = "For User 2"
                ws.Range("BS5").Value = "For User 3"
                ws.Range("BT5").Value = "For User 4"
                ws.Range("BU5").Value = "For User 5"
                ws.Range("BV5").Value = "For User 6"
                ws.Range("BW5").Value = "For User 7"
                ws.Range("BX5").Value = "For User 8"
                ws.Range("BY5").Value = "For User 9"
                ws.Range("BZ5").Value = "For User 10"
                ws.Range("CA5").Value = "For User 11"
                ws.Range("CB5").Value = "For User 12"
                ws.Range("CC5").Value = "For User 13"
                ws.Range("CD5").Value = "For User 14"
                ws.Range("CE5").Value = "For User 15"
                ws.Range("CF5").Value = "For User 16"
                ws.Range("CG5").Value = "For User 17"
                ws.Range("CH5").Value = "For User 18"
                ws.Range("CI5").Value = "For User 19"
                ws.Range("CJ5").Value = "For User 20"
                
                On Error Resume Next 'readjust the tool to the recommended view
                For iCol = 4 To 88
                    Select Case VBA.Right(ws_DayXDay.Cells(3, iCol).Value, 2)
                        'RC or recommended, can't be hidden. C2 is the for Recommended but user can hide it.
                        Case "RC", "C2"
                            ws_DayXDay.Columns(iCol).EntireColumn.Hidden = False
                            ws_DayXDay.Columns(iCol).EntireColumn.AutoFit
                        Case Else
                            ws_DayXDay.Columns(iCol).EntireColumn.Hidden = True
                    End Select
                Next iCol
                iCol = Empty
                On Error GoTo 0
                ws.Protect "unlockME", DrawingObjects:=True, Contents:=True, Scenarios:=False, AllowFormattingCells:=True, AllowFormattingRows:=False, AllowFormattingColumns:=False
                
            Case "ws_Segmentation"
                ws.Unprotect "unlockME"
                For Irow = 6 To 507 Step 39
                    ws.Range("C" & Irow & ":BZ" & Irow + 30).ClearContents 'clear events to Archived data SEG10LY Fx converter
                    ws.Range("D" & Irow + 31 & ":N" & Irow + 33).ClearContents  'clear the month total from D to N
                    ws.Range("CB" & Irow & ":DI" & Irow + 30).ClearContents
                Next
                ws.Range("DU6:FC507").ClearContents
                
                On Error Resume Next 'reset to recommended view
                For iCol = 4 To 58
                    Select Case ws.Cells(3, iCol).Value
                        Case "O_D"
                            Select Case ws.Cells(5, iCol).Value
                                'occ and demand
                                Case "Ttl Hotel Occ OYv2", "Occ LY Act", "Avail Trn Supply", "Applied Rem Dem", "Addl Dem", "Ttl Trn Dem", "Ttl Trn Dem STLY", "Rm OTB", "Rm Pickup"
                                    ws.Columns(iCol).EntireColumn.Hidden = False
                                Case Else
                                    ws.Columns(iCol).Hidden = True
                            End Select
                        'segmentation
                        Case "P_R", "S_R", "S_C", "R_T", "F_D", "G_M", "R_W", "P_D"
                            Select Case ws.Cells(5, iCol).Value
                                Case "Rem Dem", "Rm OTB", "Rm Pickup"
                                    ws.Columns(iCol).EntireColumn.Hidden = False
                                Case Else
                                    ws.Columns(iCol).EntireColumn.Hidden = True
                            End Select
                    End Select
                Next iCol
                
                For iCol = 4 To 58
                    Select Case ws.Columns(iCol).EntireColumn.Hidden
                        Case False
                            ws.Columns(iCol).EntireColumn.AutoFit
                    End Select
                Next iCol
                
                For Irow = 4 To 472 Step 39
                    ws.Rows(Irow).EntireRow.RowHeight = 75
                Next
                iCol = Empty
                On Error GoTo 0
                ws.Protect "unlockME", DrawingObjects:=True, Contents:=True, Scenarios:=False, AllowFormattingCells:=False, AllowFormattingRows:=False, AllowFormattingColumns:=False
                
            Case "ws_RMcollection"
                ws.Unprotect "unlockME"
                For Irow = 6 To 507 Step 39
                    ws.Range("C" & Irow & ":DR" & Irow + 30).ClearContents 'clear from events to Archived data SEG10LY Fx converter
                    ws.Range("D" & Irow + 31 & ":F" & Irow + 33).ClearContents 'clear total under Occ (copied from day by day)
                    ws.Range("DT" & Irow & ":FG" & Irow + 30).ClearContents
                    'clear the user filter area
                    ws.Range("G" & Irow - 3).Value = 0
                    ws.Range("P" & Irow - 3).Value = 0
                    ws.Range("Y" & Irow - 3).Value = 0
                    ws.Range("AH" & Irow - 3).Value = 0
                    ws.Range("AQ" & Irow - 3).Value = 0
                    ws.Range("AZ" & Irow - 3).Value = 0
                    ws.Range("BI" & Irow - 3).Value = 0
                    ws.Range("BR" & Irow - 3).Value = 0
                Next
                ws.Range("HA6:IO507").ClearContents
                
                On Error Resume Next
                For iCol = 5 To 78
                    Select Case ws.Cells(2, iCol).Value
                        Case "OCC_0"
                            Select Case ws.Cells(5, iCol).Value
                                'occ
                                Case "Occ LY Act"
                                    ws.Columns(iCol).EntireColumn.Hidden = False
                                Case Else
                                    ws.Columns(iCol).Hidden = True
                            End Select
                    End Select
                    
                    'Display the 8 room collections
                    Select Case ws.Cells(5, iCol).Value
                        Case "Occ LY Act", "Hurdle Rev.", "Rem Capacity - PRP", "Rem Dem", "Rm OTB", "Rm Pickup"
                            ws.Columns(iCol).EntireColumn.Hidden = False
                        Case Else
                            ws.Columns(iCol).EntireColumn.Hidden = True
                    End Select
                Next iCol
                
                For iCol = 5 To 78
                    Select Case ws.Columns(iCol).EntireColumn.Hidden
                        Case False
                            ws.Columns(iCol).EntireColumn.AutoFit
                    End Select
                Next iCol
                iCol = Empty
                On Error GoTo 0

                ws.Protect "unlockME", DrawingObjects:=True, Contents:=True, Scenarios:=False, AllowFormattingCells:=False, AllowFormattingRows:=False, AllowFormattingColumns:=False
                
                'clear the data tabs.
                Case "sh_DashboardData": ws.Range("BM6:CC196").ClearContents
                Case "sh_GPO":          ws.Range("A2:AJ1000").ClearContents
                Case "sh_GRAMSSR":      ws.Range("A2:E1000").ClearContents
                Case "sh_MAR":          sh_MAR.Range("A1:C3000").ClearContents
                
                Case "sh_OYProj"
                    ws.Unprotect "unlockME"
                    ws.Range("A2:AT" & ws.Cells(Rows.Count, 1).End(xlUp).Row + 1).ClearContents
                    sh_OYProj.cbSave.Value = False
                    ws.Protect "unlockME", DrawingObjects:=True, Contents:=True, Scenarios:=False, AllowFormattingCells:=False, AllowFormattingRows:=False, AllowFormattingColumns:=False
                
                Case "sh_OYElevate"
                    ws.Range("A2:G" & ws.Cells(Rows.Count, 1).End(xlUp).Row + 1).ClearContents
                    ws.Range("A1").Value = "DATE"
                    ws.Range("B1").Value = "OYv2GrpRMS_Elevate"
                    ws.Range("C1").Value = "Tent 0"
                    ws.Range("D1").Value = "Tobes0"
                    ws.Range("E1").Value = "OYv2GrpRev_Elevate"
                    ws.Range("F1").Value = "Tent Rev 0"
                    ws.Range("G1").Value = "Tobes Rev 0"
                    
                Case "sh_OYv2Data":    ws.Range("A1:EZ1000").ClearContents
                Case "sh_PRP":          ws.Range("A1:AC3000").ClearContents
                Case "sh_RPO":          ws.Range("B5:Y94").ClearContents
                Case "sh_SEG10LY"
                    ws.Range("A3:L" & ws.Cells(Rows.Count, 1).End(xlUp).Row + 3).ClearContents
                    ws.PivotTables("PvtSEG10LY").PivotCache.Refresh
                
                Case "sh_SSP_STR_Combo_Wk":     ws.Unprotect "unlockME": ws.Range("B1:AA69").ClearContents: ws.Visible = xlSheetVeryHidden
                Case "sh_SSP_STR_Combo_28Days": ws.Unprotect "unlockME": ws.Range("B1:AA69").ClearContents: ws.Visible = xlSheetVeryHidden
                Case "sh_SSP_STRwk":            ws.Unprotect "unlockME": ws.Range("B1:AC42").ClearContents: ws.Visible = xlSheetVeryHidden
                Case "sh_SSP_STRWk_SegGlance":  ws.Unprotect "unlockME": ws.Range("B1:S37").ClearContents: ws.Visible = xlSheetVeryHidden
                Case "sh_SSP_STRCompWk":        ws.Unprotect "unlockME": ws.Range("B1:AK5,B6,B7:AK63").ClearContents: ws.Visible = xlSheetVeryHidden
                Case "sh_SSP_STRmth":           ws.Unprotect "unlockME": ws.Range("B1:U35").ClearContents: ws.Visible = xlSheetVeryHidden
                Case "sh_SSP_STRComp":          ws.Unprotect "unlockME": ws.Range("B1:AG58").ClearContents: ws.Visible = xlSheetVeryHidden
                Case "sh_SSP_STRdow":           ws.Unprotect "unlockME": ws.Range("B1:V78").ClearContents: ws.Visible = xlSheetVeryHidden
                Case "sh_SSP_STRmthWebsite":    ws.Unprotect "unlockME": ws.Range("B1:AJ4,B9:AJ42").ClearContents: ws.Visible = xlSheetVeryHidden
            
                Case "sh_SSP_STRmkgD"
                    ws.Unprotect "unlockME"
                    ws.Range("B6:I6").ClearContents: ws.Range("K8:AG8").ClearContents
                    ws.Range("B10:AG42").ClearContents:  ws.Visible = xlSheetVeryHidden
                    
                Case "sh_SSP_STRmkgMth" 'delete any MKG month shapes if any
                    ws.Unprotect "unlockME"
                    For iSh = 1 To ws.Shapes.Count
                        ws.Shapes(ws.Shapes.Count).Delete
                    Next
                    ws.Range("B1").Value = vbNullString
                    ws.Visible = xlSheetVeryHidden
                    
                Case "sh_SSP_CompShop":     ws.Unprotect "unlockME": ws.Range("Shop1").ClearContents: ws.Visible = xlSheetVeryHidden
                Case "sh_SSP_CompShop2":    ws.Unprotect "unlockME": ws.Range("Shop2").ClearContents: ws.Visible = xlSheetVeryHidden
                Case "sh_SSP_CompShop3":    ws.Unprotect "unlockME": ws.Range("Shop3").ClearContents: ws.Visible = xlSheetVeryHidden
                
                Case "sh_IchartMth"
                    If ws.FilterMode = True Then ws.ShowAllData
                    ws.Range("C5:U5").ClearContents
                    ws.Range("AD10:BE80").ClearContents
                    
                Case "sh_IchartWk"
                    If ws.FilterMode = True Then ws.ShowAllData
                    ws.Range("C5:U5").ClearContents
                    ws.Range("Y6:Z6").ClearContents
                    ws.Range("AD10:BE80").ClearContents
                
                Case "sh_OYact_bud"
                    ws.Range("A3:BK" & ws.Cells(Rows.Count, 1).End(xlUp).Row + 3).ClearContents
                    ws.Range("A1:BK2").Name = "SSP_OYProj"
                    ws.PivotTables("Pvt_Proj_LockProj").PivotCache.Refresh
                    ws.PivotTables("Pvt_Proj_ActBud").PivotCache.Refresh
                
                Case "ws_SSP_PPT"
                    ws.Range("N1").Value = 1 'reset SSP packet selection to 1
                    ws.Range("H17").Value = "1" 'apply STR compset
                    
                Case "sh_PkgLayout"
                    ws.Range("C42:C104").ClearContents
                    For iCol = 5 To 41 Step 4 'reset packet
                        ws.Range(ws.Cells(4, iCol), ws.Cells(104, iCol)).ClearContents
                        ws.Cells(4, iCol).Value = "Snapshot"
                        ws.Cells(5, iCol).Value = "Dashboard Mth1"
                        ws.Cells(6, iCol).Value = "Dashboard Mth2"
                        ws.Cells(7, iCol).Value = "Dashboard Mth3"
                    Next iCol
                    ws.Range("AR1:AR10").Value = "Dashboard Mth 1 to 3" 'reset packet descriptions
                
                Case "ws_SSP_Agenda"
                    ws_SSP_Agenda.Range("A7").Formula = "=TODAY()"
                    For Irow = 16 To 39
                        Select Case Irow
                            Case 16 To 26
                                ws_SSP_Agenda.Cells(Irow, 2).Value = "Agenda Item " & Irow - 15 'agenda item
                                ws_SSP_Agenda.Cells(Irow, 10).Value = "Follow up Item " & Irow - 15 'follow up item
                            Case 27 To 39
                                ws_SSP_Agenda.Cells(Irow, 2).Value = vbNullString 'clear remaining items in agenda
                                ws_SSP_Agenda.Cells(Irow, 10).Value = vbNullString 'clear remaining items in follow up
                        End Select
                    Next
                Case "ws_Log"
                    ws_Log.Range("A3:B493").ClearContents
                    
                Case "wsCustom": ws.Visible = xlSheetVeryHidden
                
            Application.Calculation = xlCalculationAutomatic
        End Select
        'delete any custom slide created by the user.
        If (VBA.Left(ws.CodeName, 9) Like "wsCustom*" And ws.CodeName <> "wsCustom") Then ws.Delete
        
    Next ws
    
    Set ws = Nothing: Irow = Empty: iCol = Empty: iSh = Empty
    
    For Each ws In Worksheets
        Select Case VBA.Left(ws.CodeName, 6)
            Case "sh_SSP"
                If VBA.Left(ws.CodeName, 10) Like "sh_SSP_Com*" Then
                    ws.Protect "unlockME"
                    ws.EnableSelection = xlNoSelection
                    ws.EnableSelection = xlNoRestrictions
                    If ws.Range("B4").Value = vbNullString Then ws.Visible = xlSheetVeryHidden Else ws.Visible = xlSheetVisible
                Else
                    ws.Protect "unlockME"
                    ws.EnableSelection = xlNoSelection
                    If (ws.Range("B1").Value = vbNullString Or ws.Range("B1").Value = 0) Then ws.Visible = xlSheetVeryHidden Else ws.Visible = xlSheetVisible
                End If
        End Select
    Next
    
    Set ws = Nothing
    
    For Each nm In Names
        nm.Visible = False
    Next
    
    Set nm = Nothing
    
    With Application: .EnableEvents = True: .Calculation = xlCalculationAutomatic: .DisplayAlerts = True: End With
    
    ws_Setup.Activate
    ws_Setup.Range("C15").Activate
    MsgBox "The tool is reset.", vbInformation, "Tool Reset"
    
    With Application: .EnableEvents = True: .ScreenUpdating = True: .Calculation = xlCalculationAutomatic: .DisplayAlerts = True: End With

End Sub


Attribute VB_Name = "Upgrade"
Option Explicit
Option Private Module

Sub UpgradeOYv2()
Dim ifile As Long, arFileName As Variant, wsSource As Worksheet, wbImport As Workbook, ws As Worksheet
Dim Irow As Long, lastrow As Long, iCol As Byte, shp As Shape, nm As Name, CompshopLastColumn As Variant
Dim DxDCol(89) As Double, SegCol(59) As Double, RMCol(52) As Double

With Application: .ScreenUpdating = False: .Calculation = xlCalculationManual: .EnableEvents = False: .DisplayAlerts = False: End With
   
   ws_Setup.Activate
   
   arFileName = Application.GetOpenFilename _
        (FileFilter:="Excel Files (*.xlsm), *.xlsm", FilterIndex:=1, MultiSelect:=False)
    If arFileName = False Then
        MsgBox "No files were selected."
        With Application: .ScreenUpdating = True: .Calculation = xlCalculationAutomatic: .EnableEvents = True: .DisplayAlerts = True: End With
        End
    End If
    
    With Application: .ScreenUpdating = False: .Calculation = xlCalculationManual: .EnableEvents = False: .DisplayAlerts = False: End With

    Set wbImport = Workbooks.Open(arFileName)
        
        For Each wsSource In wbImport.Worksheets 'check if this is a OYv2 file first
            If wsSource.Name = "Setup" Then
                If wsSource.Range("I18").Value <> "VAT Hotel:" Then
                    MsgBox "The selected file is incorrect. Please select the OYv2 Strategy Outlook tool to import for the upgrade.", vbCritical, "Incorrect file selected"
                    With Application: .ScreenUpdating = True: .Calculation = xlCalculationAutomatic: .EnableEvents = True: .DisplayAlerts = True: End With
                    wbImport.Close False
                    End
                ElseIf wsSource.Range("I18").Value = "VAT Hotel:" Then
                    Exit For
                End If
            End If
            If wsSource.Index = wbImport.Worksheets.Count Then
                MsgBox "The selected file is incorrect. Please select the OYv2 Strategy Outlook tool to import for the upgrade.", vbCritical, "Incorrect file selected"
                With Application: .ScreenUpdating = True: .Calculation = xlCalculationAutomatic: .EnableEvents = True: .DisplayAlerts = True: End With
                wbImport.Close False
                End
            End If
        Next
        
        ws_DayXDay.Unprotect "unlockME"
        ws_Segmentation.Unprotect "unlockME"
        ws_RMcollection.Unprotect "unlockME"
        sh_OYProj.Unprotect "unlockME"
    
    With Application: .ScreenUpdating = False: .Calculation = xlCalculationManual: .EnableEvents = False: .DisplayAlerts = False: End With
           
        'first unhide hidden SSP tabs - this is to reassign the copied tab to the same position
        For Each ws In ThisWorkbook.Worksheets
            Select Case VBA.Left(ws.CodeName, 7)
                Case "sh_SSP_"
                    ws.Visible = xlSheetVisible
            End Select
        Next
        
        'Copy the custom slide
        On Error Resume Next
            For Each wsSource In wbImport.Worksheets
                Select Case VBA.Left(wsSource.CodeName, 3)
                    Case "wsC"
                        If Not VBA.Right(wsSource.CodeName, 1) = "m" Then
                            wsSource.Copy After:=ThisWorkbook.Worksheets(ThisWorkbook.Worksheets.Count) '
                            ThisWorkbook.Worksheets(wsSource.Name).Move Before:=Worksheets(wbImport.Worksheets(wsSource.Name).Index - 1)
                            
                            're-assign macros to the buttons
                            With ThisWorkbook.Worksheets(wsSource.Name)
                                .Shapes("CreateCustom").OnAction = "ShowSSP_Proj_MRDW"
                                .Shapes("AssignToPkt").OnAction = "OpenSSPsetup"
                                .Shapes("DuplicateCustom").OnAction = "DuplicateCustomSlide"
                                .Shapes("AddCustom").OnAction = "AddCustomSlide"
                                .Shapes("HideCustom").OnAction = "HideSlide"
                                .Shapes("ShowAllCustom").OnAction = "ShowHiddenSlide"
                                .Shapes("DeleteCustom").OnAction = "DeleteCustomSlide"
                            End With
                            
                            For Each shp In ThisWorkbook.Worksheets(wsSource.Name).Shapes
                                Select Case VBA.Left(shp.Name, 4)
                                    Case "Pic_" 'Is <> "Group", Is <> "Pictu"
                                        ThisWorkbook.Worksheets(wsSource.Name).Shapes(shp.Name).Height = wsSource.Shapes(shp.Name).Height
                                        ThisWorkbook.Worksheets(wsSource.Name).Shapes(shp.Name).Width = wsSource.Shapes(shp.Name).Width
                                        ThisWorkbook.Worksheets(wsSource.Name).Shapes(shp.Name).DrawingObject.Formula = ""
                                    Case "Pict"
                                        ThisWorkbook.Worksheets(wsSource.Name).Shapes(shp.Name).DrawingObject.Placement = xlMoveAndSize
                                End Select
                            Next
                            ThisWorkbook.Worksheets(wsSource.Name).Unprotect "unlockME"
                            ThisWorkbook.Worksheets(wsSource.Name).Range("P1").ColumnWidth = 4
                            
                            'delete name ranged imported during the copy of the tab
                            For Each nm In ThisWorkbook.Worksheets(wsSource.Name).Names
                                nm.Delete
                            Next nm
                            
                            ThisWorkbook.Worksheets(wsSource.Name).Protect "unlockME", DrawingObjects:=False, Contents:=True, Scenarios:=True, AllowFormattingCells:=False, AllowFormattingRows:=False, AllowFormattingColumns:=False
                        End If
                End Select
            Next
            
            For Each ws In ThisWorkbook.Worksheets
                Select Case VBA.Left(ws.CodeName, 7)
                    Case "sh_SSP_"
                        ws.Visible = xlSheetVeryHidden
                End Select
            Next
        On Error GoTo 0
        
        Set nm = Nothing: Set ws = Nothing
        
        For Each wsSource In wbImport.Worksheets
            Select Case wsSource.CodeName
                Case "ws_Welcome"
                    ws_Welcome.Range("AA2:AD19").Value = wsSource.Range("AA2:AD19").Value
                    
                    If wsSource.Range("Z20").Value <> vbNullString Then 'added this as version 1.1 doesn't have any data, only version 1.2 and higher will have a setup
                        ws_Welcome.Range("AA20:AD20").Value = wsSource.Range("AA20:AD20").Value
                        ws_Welcome.Range("AJ5:AL17").Value = wsSource.Range("AJ5:AL17").Value
                    End If
                    
                Case "ws_Setup"
                    ws_Setup.Range("C15").Value = wsSource.Range("C15").Value 'copy MARSHA Code
                    ws_Setup.Range("G15").Value = wsSource.Range("G15").Value 'copy currency code
                    ws_Setup.Range("G16").Value = wsSource.Range("G16").Value 'copy decimal places
                    ws_Setup.Range("K15").Value = wsSource.Range("K15").Value 'copy RPO Rate Setup
                    ws_Setup.Range("C19:C26").Value = wsSource.Range("C19:C26").Value 'copy Room collection name
                    ws_Setup.Range("F19:F25").Value = wsSource.Range("F19:F25").Value 'copy GPO setup
                    ws_Setup.Range("J18").Value = wsSource.Range("J18").Value 'copy VAT Indicator
                    ws_Setup.Range("K19:K21").Value = wsSource.Range("K19:K21").Value 'copy VAT
                    ws_Setup.Range("L20:L21").Value = wsSource.Range("L20:L21").Value 'copy VAT date
                    ws_Setup.Range("D30").Value = wsSource.Range("D30").Value 'copy Occ indicator
                    ws_Setup.Range("E31:F31").Value = wsSource.Range("E31:F31").Value 'copy Occ %age and Display
                    ws_Setup.Range("E32").Value = wsSource.Range("E32").Value 'low occupancy value
                    ws_Setup.Range("L31:L32").Value = wsSource.Range("L31:L32").Value 'copy group slippage %age
                    Select Case wsSource.Range("J16").Value
                        Case "RPO Threshold Goal": ws_Setup.Range("K16").Value = wsSource.Range("K16").Value
                    End Select
                
                Case "ws_Dashboard"
                    ws_Dashboard.Shapes("TxTbMth1").TextFrame.Characters.Text = wsSource.Shapes("TxTbMth1").TextFrame.Characters.Text
                    ws_Dashboard.Shapes("TxTbMth2").TextFrame.Characters.Text = wsSource.Shapes("TxTbMth2").TextFrame.Characters.Text
                    ws_Dashboard.Shapes("TxTbMth3").TextFrame.Characters.Text = wsSource.Shapes("TxTbMth3").TextFrame.Characters.Text
                    ws_Dashboard.Shapes("TxTbMth4").TextFrame.Characters.Text = wsSource.Shapes("TxTbMth4").TextFrame.Characters.Text
                    ws_Dashboard.Shapes("TxTbMth5").TextFrame.Characters.Text = wsSource.Shapes("TxTbMth5").TextFrame.Characters.Text
                    ws_Dashboard.Shapes("TxTbMth6").TextFrame.Characters.Text = wsSource.Shapes("TxTbMth6").TextFrame.Characters.Text
                    ws_Dashboard.Range("AN31:BA64").Locked = False
                    ws_Dashboard.Range("AN92:BA124").Locked = False
                    ws_Dashboard.Range("AN153:BA185").Locked = False
                    ws_Dashboard.Range("AN214:BA246").Locked = False
                    ws_Dashboard.Range("AN275:BA307").Locked = False
                    ws_Dashboard.Range("AN336:BA369").Locked = False
                Case "ws_Summary"
                    ws_Summary.Unprotect "unlockME"
                    ws_Summary.Range("B1").Value = wsSource.Range("B1").Value
                    ws_Summary.Range("B6:B510").Value = wsSource.Range("B6:B510").Value
                    ws_Summary.Protect "unlockME", DrawingObjects:=True, Contents:=True, Scenarios:=False, AllowFormattingCells:=True, AllowFormattingColumns:=False
                    
                Case "sh_OYv2Data"
                    lastrow = wsSource.Cells(Rows.Count, 1).End(xlUp).Row
                    sh_OYv2Data.Range("A1:FZ" & lastrow).Value = wsSource.Range("A1:FZ" & lastrow).Value
                    lastrow = Empty
                
                Case "sh_OYProj"
                    lastrow = IIf(wsSource.Cells(Rows.Count, 1).End(xlUp).Row < 2, 2, wsSource.Cells(Rows.Count, 1).End(xlUp).Row)
                    sh_OYProj.Range("A2:AT" & lastrow).Value = wsSource.Range("A2:AT" & lastrow).Value
                    sh_OYProj.Range("A1:AT" & lastrow).Name = "OYprojData"
                    lastrow = Empty
                Case "sh_OYElevate"
                    lastrow = wsSource.Cells(Rows.Count, 1).End(xlUp).Row
                    sh_OYElevate.Range("A1:G" & lastrow).Value = wsSource.Range("A1:G" & lastrow).Value
                    sh_OYElevate.Range("A1").Value = "DATE"
                    sh_OYElevate.Range("B1").Value = "OYv2GrpRMS_Elevate"
                    sh_OYElevate.Range("C1").Value = "Tent 0"
                    sh_OYElevate.Range("D1").Value = "Tobes0"
                    sh_OYElevate.Range("E1").Value = "OYv2GrpRev_Elevate"
                    sh_OYElevate.Range("F1").Value = "Tent Rev 0"
                    sh_OYElevate.Range("G1").Value = "Tobes Rev 0"
                    lastrow = Empty
                    
                Case "sh_GRAMSSR"
                    lastrow = IIf(wsSource.Cells(Rows.Count, 1).End(xlUp).Row < 2, 2, wsSource.Cells(Rows.Count, 1).End(xlUp).Row)
                    sh_GRAMSSR.Range("A2:E" & lastrow).Value = wsSource.Range("A2:E" & lastrow).Value
                    lastrow = Empty
                
                Case "sh_RPO"
                    lastrow = IIf(wsSource.Cells(Rows.Count, 2).End(xlUp).Row < 2, 2, wsSource.Cells(Rows.Count, 2).End(xlUp).Row)
                    sh_RPO.Range("B5:Y" & lastrow).Value = wsSource.Range("B5:Y" & lastrow).Value
                    lastrow = Empty
                
                Case "sh_PRP"
                    lastrow = wsSource.Cells(Rows.Count, 1).End(xlUp).Row
                    sh_PRP.Range("A1:AC" & lastrow).Value = wsSource.Range("A1:AC" & lastrow).Value
                    If lastrow > 5 Then sh_PRP.Range("C5:S" & lastrow).Name = "PRP_Data"
                    lastrow = Empty
                
                Case "sh_SEG10LY"
                    lastrow = IIf(wsSource.Cells(Rows.Count, 1).End(xlUp).Row < 3, 3, wsSource.Cells(Rows.Count, 1).End(xlUp).Row)
                    sh_SEG10LY.Range("A3:L" & lastrow).Value = wsSource.Range("A3:L" & lastrow).Value
                    sh_SEG10LY.Range("G1:L" & lastrow).Name = "SEG10_LY" 'reassign the name range
                    lastrow = Empty
                
                Case "sh_GPO"
                    lastrow = IIf(wsSource.Cells(Rows.Count, 1).End(xlUp).Row < 2, 2, wsSource.Cells(Rows.Count, 1).End(xlUp).Row)
                    sh_GPO.Range("A2:AJ" & lastrow).Value = wsSource.Range("A2:AJ" & lastrow).Value
                    lastrow = Empty
                
                Case "sh_MAR"
                    lastrow = wsSource.Cells(Rows.Count, 1).End(xlUp).Row
                    sh_PRP.Range("A1:C" & lastrow).Value = wsSource.Range("A1:C" & lastrow).Value
                    lastrow = Empty
                
                Case "ws_DayXDay"
                    ws_DayXDay.Range("FI3").Value2 = wsSource.Range("FI3").Value2
                    ws_DayXDay.Range("$FH$6:$GQ$507").Value = wsSource.Range("$FH$6:$GQ$507").Value
                    
                    For iCol = 5 To 89 'apply user column selection
                        DxDCol(iCol) = wsSource.Columns(iCol).ColumnWidth
                    Next
                    
                Case "ws_RMcollection"
                    ws_RMcollection.Range("$HA$6:$IO$507").Value = wsSource.Range("$HA$6:$IO$507").Value
                                        
                    For Irow = 3 To 471 Step 39
                        For iCol = 7 To 70 Step 9
                            ws_RMcollection.Cells(Irow, iCol).Value = wsSource.Cells(Irow, iCol).Value
                        Next
                    Next
                    For iCol = 5 To 52 'apply user column selection
                        RMCol(iCol) = wsSource.Columns(iCol).ColumnWidth
                    Next
                    
                Case "ws_Segmentation"
                    ws_Segmentation.Range("$DU$6:$FC$507").Value = wsSource.Range("$DU$6:$FC$507").Value
                                      
                    For iCol = 5 To 59 'apply user column selection
                        SegCol(iCol) = wsSource.Columns(iCol).ColumnWidth
                    Next
                
                Case "ws_SSP_PPT"
                    ws_SSP_PPT.Range("N1").Value = wsSource.Range("N1").Value 'copy the packet selection
                
                Case "sh_PkgLayout"
                    'copy the custom slide if any were created
                    If wsSource.Range("C35").Value = sh_PkgLayout.Range("C41").Value Then
                        sh_PkgLayout.Range("C42:C" & wsSource.Cells(Rows.Count, 3).End(xlUp).Row + 16).Value = _
                        wsSource.Range("C36:C" & wsSource.Cells(Rows.Count, 3).End(xlUp).Row + 10).Value
                    Else
                        sh_PkgLayout.Range("C42:C" & wsSource.Cells(Rows.Count, 3).End(xlUp).Row + 10).Value = _
                        wsSource.Range("C42:C" & wsSource.Cells(Rows.Count, 3).End(xlUp).Row + 10).Value
                    End If
                    
                    For iCol = 5 To 41 Step 4 'copy the packet setup
                        sh_PkgLayout.Range(sh_PkgLayout.Cells(4, iCol), sh_PkgLayout.Cells((wsSource.Cells(Rows.Count, iCol).End(xlUp).Row + 1), iCol)).Value = _
                        wsSource.Range(wsSource.Cells(4, iCol), wsSource.Cells((wsSource.Cells(Rows.Count, iCol).End(xlUp).Row + 1), iCol)).Value 'copy the packet setup
                    Next
                    'copy the packet user descriptions
                    sh_PkgLayout.Range("AR1:AR10").Value = wsSource.Range("AR1:AR10").Value
                    
                    'on version 1.1 the summary pace ranges were different. added this code to replace the old name
                    sh_PkgLayout.Range("A1:AR104").Replace what:="Summary Day by Day Mth 1,2,3", replacement:="Summary Day by Day Mth 1-3", lookat:=xlWhole
                    sh_PkgLayout.Range("A1:AR104").Replace what:="Summary Day by Day Mth 4,5", replacement:="Summary Day by Day Mth 4-5", lookat:=xlWhole
                    sh_PkgLayout.Range("A1:AR104").Replace what:="Summary Day by Day Mth 4,5,6", replacement:="Summary Day by Day Mth 4-6", lookat:=xlWhole
                    
                Case "sh_OYact_bud"
                    lastrow = wsSource.Cells(Rows.Count, 1).End(xlUp).Row
                    If lastrow > 3 Then
                        sh_OYact_bud.Range("A3:BK" & lastrow).Value = wsSource.Range("A3:BK" & lastrow).Value
                        sh_OYact_bud.Range("A1:BK" & lastrow).Name = "SSP_OYProj"
                    End If
                
                Case "ws_SSP_Agenda"
                    ws_SSP_Agenda.Range("B16:H39").Value = wsSource.Range("B16:H39").Value
                    ws_SSP_Agenda.Range("J16:P39").Value = wsSource.Range("J16:P39").Value
                
                Case "sh_IchartMth" 'DAT1 MRDW
                    If wsSource.Range("C5").Value > vbNullString Then
                        If wsSource.FilterMode = True Then wsSource.ShowAllData
                        sh_IchartMth.Range("C5").Value = wsSource.Range("C5").Value
                        sh_IchartMth.Range("AD10:BE80").Value = wsSource.Range("AD10:BE80").Value
                        sh_IchartMth.Range("A5:AC372").Calculate
                        sh_IchartMth.Range("C6:U372").Columns.AutoFit
                        sh_IchartMth.Range("$V$7:$V$372").AutoFilter Field:=1, Criteria1:="Show"
                        If sh_IchartMth.Range("P1").Value = "Hide" Then sh_IchartMth.Columns("P:R").Hidden = True
                        If sh_IchartMth.Range("S1").Value = "Hide" Then sh_IchartMth.Columns("P:R").Hidden = True
                    End If
                    
                Case "sh_IchartWk" 'DAT1 MRDW
                    If wsSource.Range("C5").Value > vbNullString Then
                        If wsSource.FilterMode = True Then wsSource.ShowAllData
                        sh_IchartWk.Range("C5").Value = wsSource.Range("C5").Value
                        sh_IchartWk.Range("Y6").Value = wsSource.Range("Y6").Value
                        sh_IchartWk.Range("Z6").Value = wsSource.Range("Z6").Value
                        sh_IchartWk.Range("AD10:BE80").Value = wsSource.Range("AD10:BE80").Value
                        sh_IchartWk.Range("A5:AC372").Calculate
                        sh_IchartWk.Range("C6:U372").Columns.AutoFit
                        sh_IchartWk.Range("$V$7:$V$372").AutoFilter Field:=1, Criteria1:="Show"
                        If sh_IchartWk.Range("P1").Value = "Hide" Then sh_IchartWk.Columns("P:R").Hidden = True
                        If sh_IchartWk.Range("S1").Value = "Hide" Then sh_IchartWk.Columns("P:R").Hidden = True
                    End If
                    
                Case "sh_SSP_CompShop"
                    If wsSource.Visible = xlSheetVisible Then
                        sh_SSP_CompShop.Visible = xlSheetVisible
                        sh_SSP_CompShop.Unprotect "unlockME"
                        wsSource.Range("A3:S34").Copy
                        sh_SSP_CompShop.Range("A3").PasteSpecial xlPasteAll
                        Application.CutCopyMode = False
                        sh_SSP_CompShop.Activate
                        Set CompshopLastColumn = sh_SSP_CompShop.Rows("3:3").Find(what:="Last Shop Datetime", lookat:=xlPart)
                        
                        If Not CompshopLastColumn Is Nothing Then
                            iCol = CompshopLastColumn.Column
                            If iCol > 2 Then _
                                sh_SSP_CompShop.Range(sh_SSP_CompShop.Cells(3, 2), sh_SSP_CompShop.Cells(34, iCol)).Name = "Comp1"
                            Set CompshopLastColumn = Nothing
                        End If
                        sh_SSP_CompShop.Range("A1").Activate
                        sh_SSP_CompShop.Protect "unlockME"
                        
                    End If
                    
                Case "sh_SSP_CompShop2"
                    If wsSource.Visible = xlSheetVisible Then
                        sh_SSP_CompShop2.Visible = xlSheetVisible
                        sh_SSP_CompShop2.Unprotect "unlockME"
                        wsSource.Range("A3:S34").Copy
                        sh_SSP_CompShop2.Range("A3").PasteSpecial xlPasteAll
                        Application.CutCopyMode = False
                        sh_SSP_CompShop2.Activate
                        Set CompshopLastColumn = sh_SSP_CompShop2.Rows("3:3").Find(what:="Last Shop Datetime", lookat:=xlPart)
                        
                        If Not CompshopLastColumn Is Nothing Then
                            iCol = CompshopLastColumn.Column
                            If iCol > 2 Then _
                                sh_SSP_CompShop2.Range(sh_SSP_CompShop2.Cells(3, 2), sh_SSP_CompShop2.Cells(34, iCol)).Name = "Comp2"
                            Set CompshopLastColumn = Nothing
                        End If
                        
                        sh_SSP_CompShop2.Range("A1").Activate
                        sh_SSP_CompShop2.Protect "unlockME"
                    End If
                    
                Case "sh_SSP_CompShop3"
                    If wsSource.Visible = xlSheetVisible Then
                        sh_SSP_CompShop3.Visible = xlSheetVisible
                        sh_SSP_CompShop3.Unprotect "unlockME"
                        wsSource.Range("A3:S34").Copy
                        sh_SSP_CompShop3.Range("A3").PasteSpecial xlPasteAll
                        Application.CutCopyMode = False
                        sh_SSP_CompShop3.Activate
                        Set CompshopLastColumn = sh_SSP_CompShop3.Rows("3:3").Find(what:="Last Shop Datetime", lookat:=xlPart)
                        
                        If Not CompshopLastColumn Is Nothing Then
                            iCol = CompshopLastColumn.Column
                            If iCol > 2 Then _
                                sh_SSP_CompShop3.Range(sh_SSP_CompShop3.Cells(3, 2), sh_SSP_CompShop3.Cells(34, iCol)).Name = "Comp3"
                            Set CompshopLastColumn = Nothing
                        End If
                        
                        sh_SSP_CompShop3.Range("A1").Activate
                        sh_SSP_CompShop3.Protect "unlockME"
                    End If
                    
                Case "sh_SSP_STR_Combo_28Days"
                    If wsSource.Visible = xlSheetVisible Then
                        sh_SSP_STR_Combo_28Days.Visible = xlSheetVisible
                        sh_SSP_STR_Combo_28Days.Unprotect "unlockME"
                        sh_SSP_STR_Combo_28Days.Range("A1:AA69").Value = wsSource.Range("A1:AA69").Value
                        sh_SSP_STR_Combo_28Days.Protect "unlockME"
                    End If
                
                Case "sh_SSP_STR_Combo_Wk"
                    If wsSource.Visible = xlSheetVisible Then
                        sh_SSP_STR_Combo_Wk.Visible = xlSheetVisible
                        sh_SSP_STR_Combo_Wk.Unprotect "unlockME"
                        sh_SSP_STR_Combo_Wk.Range("A1:AA69").Value = wsSource.Range("A1:AA69").Value
                        sh_SSP_STR_Combo_Wk.Protect "unlockME"
                    End If

                Case "sh_SSP_STRComp"
                    If wsSource.Visible = xlSheetVisible Then
                        sh_SSP_STRComp.Visible = xlSheetVisible
                        sh_SSP_STRComp.Unprotect "unlockME"
                        sh_SSP_STRComp.Range("B1:AF69").Value = wsSource.Range("B1:AF69").Value
                        sh_SSP_STRComp.Range("AH1").Calculate
                        sh_SSP_STRComp.ChartObjects("ChrtSTRMthComp").Chart.Axes(xlValue).MinimumScale = sh_SSP_STRComp.Range("AH1").Value
                        sh_SSP_STRComp.Protect "unlockME"
                    End If
                    
                Case "sh_SSP_STRCompWk"
                    If wsSource.Visible = xlSheetVisible Then
                        sh_SSP_STRCompWk.Visible = xlSheetVisible
                        sh_SSP_STRCompWk.Unprotect "unlockME"
                        sh_SSP_STRCompWk.Range("B1:AL5").Value = wsSource.Range("B1:AL5").Value
                        sh_SSP_STRCompWk.Range("B6").Value = wsSource.Range("B6").Value
                        sh_SSP_STRCompWk.Range("B7:AL61").Value = wsSource.Range("B7:AL61").Value
                        sh_SSP_STRCompWk.Range("AO1").Calculate
                        sh_SSP_STRCompWk.ChartObjects("ChrtSTRDaily").Chart.Axes(xlValue).MinimumScale = sh_SSP_STRCompWk.Range("AO1").Value
                        sh_SSP_STRCompWk.Protect "unlockME"
                    End If
                
                Case "sh_SSP_STRdow"
                    If wsSource.Visible = xlSheetVisible Then
                        sh_SSP_STRdow.Visible = xlSheetVisible
                        sh_SSP_STRdow.Unprotect "unlockME"
                        sh_SSP_STRdow.Range("B1:B4").Value = wsSource.Range("B1:B4").Value
                        sh_SSP_STRdow.Range("B15:V76").Value = wsSource.Range("B15:V76").Value
                        sh_SSP_STRdow.Protect "unlockME"
                    End If
                    
                Case "sh_SSP_STRmkgD"
                    If wsSource.Visible = xlSheetVisible Then
                        sh_SSP_STRmkgD.Visible = xlSheetVisible
                        sh_SSP_STRmkgD.Unprotect "unlockME"
                        sh_SSP_STRmkgD.Range("B6").Value = wsSource.Range("B6").Value
                        sh_SSP_STRmkgD.Range("K8").Value = wsSource.Range("K8").Value
                        sh_SSP_STRmkgD.Range("R8").Value = wsSource.Range("R8").Value
                        sh_SSP_STRmkgD.Range("Y8").Value = wsSource.Range("Y8").Value
                        sh_SSP_STRmkgD.Range("AB8").Value = wsSource.Range("AB8").Value
                        sh_SSP_STRmkgD.Range("AE8").Value = wsSource.Range("AE8").Value
                        wsSource.Range("B10:AG50").Copy
                        sh_SSP_STRmkgD.Range("B10").PasteSpecial
                        Application.CutCopyMode = False
                        sh_SSP_STRmkgD.Range("B6:X" & sh_SSP_STRmkgD.Cells(Rows.Count, 2).End(xlUp).Row).Name = "MKG_D"
                        sh_SSP_STRmkgD.Range("Y6:AG" & sh_SSP_STRmkgD.Cells(Rows.Count, 2).End(xlUp).Row).Name = "MKG_D_Index"
                        sh_SSP_STRmkgD.Protect "unlockME"
                    End If
                    
                Case "sh_SSP_STRmkgMth"
                    If wsSource.Visible = xlSheetVisible Then
                        sh_SSP_STRmkgMth.Visible = xlSheetVisible
                        sh_SSP_STRmkgMth.Unprotect "unlockME"
                        For Each shp In wsSource.Shapes
                            Select Case VBA.Right(shp.Name, 1)
                                Case "1"
                                    wsSource.Shapes(shp.Name).CopyPicture
                                    sh_SSP_STRmkgMth.Range("A1").PasteSpecial
                                    sh_SSP_STRmkgMth.Shapes(sh_SSP_STRmkgMth.Shapes.Count).Name = "PIC_MKG1"
                                    Application.CutCopyMode = False
                                Case "2"
                                    wsSource.Shapes(shp.Name).CopyPicture
                                    sh_SSP_STRmkgMth.Range("A37").PasteSpecial
                                    sh_SSP_STRmkgMth.Shapes(sh_SSP_STRmkgMth.Shapes.Count).Name = "PIC_MKG2"
                                    Application.CutCopyMode = False
                                Case "3"
                                    wsSource.Shapes(shp.Name).CopyPicture
                                    sh_SSP_STRmkgMth.Range("A73").PasteSpecial
                                    sh_SSP_STRmkgMth.Shapes(sh_SSP_STRmkgMth.Shapes.Count).Name = "PIC_MKG3"
                                    Application.CutCopyMode = False
                            End Select
                        Next
                        sh_SSP_STRmkgMth.Protect "unlockME"
                    End If
                    
                Case "sh_SSP_STRmth"
                    If wsSource.Visible = xlSheetVisible Then
                        sh_SSP_STRmth.Visible = xlSheetVisible
                        sh_SSP_STRmth.Unprotect "unlockME"
                        sh_SSP_STRmth.Range("B1:T32").Value = wsSource.Range("B1:T32").Value
                        sh_SSP_STRmth.Protect "unlockME"
                    End If
                    
                Case "sh_SSP_STRmthWebsite"
                    If wsSource.Visible = xlSheetVisible Then
                        sh_SSP_STRmthWebsite.Visible = xlSheetVisible
                        sh_SSP_STRmthWebsite.Unprotect "unlockME"
                        sh_SSP_STRmthWebsite.Range("B1:B4").Value = wsSource.Range("B1:B4").Value
                        sh_SSP_STRmthWebsite.Range("B9:AJ42").Value = wsSource.Range("B9:AJ42").Value
                        sh_SSP_STRmthWebsite.Range("E8:AJ42").Columns.AutoFit
                        sh_SSP_STRmthWebsite.Protect "unlockME"
                    End If
                
                Case "sh_SSP_STRwk"
                    If wsSource.Visible = xlSheetVisible Then
                        sh_SSP_STRwk.Visible = xlSheetVisible
                        sh_SSP_STRwk.Unprotect "unlockME"
                        sh_SSP_STRwk.Range("B1:AA38").Value = wsSource.Range("B1:AA38").Value
                        sh_SSP_STRwk.Protect "unlockME"
                    End If

                Case "sh_SSP_STRWk_SegGlance"
                    If wsSource.Visible = xlSheetVisible Then
                        sh_SSP_STRWk_SegGlance.Visible = xlSheetVisible
                        sh_SSP_STRWk_SegGlance.Unprotect "unlockME"
                        sh_SSP_STRWk_SegGlance.Range("B1:S37").Value = wsSource.Range("B1:S37").Value
                        sh_SSP_STRWk_SegGlance.Protect "unlockME"
                    End If
                    
                Case "ws_Log"
                    ws_Log.Range("A3:B" & wsSource.UsedRange.Row + 3).Value = wsSource.Range("A3:B" & wsSource.UsedRange.Row + 3).Value
            End Select
        Next

        wbImport.Close False
        
        ifile = Empty: arFileName = Empty: Set wsSource = Nothing: Set wbImport = Nothing
        Irow = Empty: lastrow = Empty: iCol = Empty
        
        'refresh the pvt table seg10 STLY
        sh_SEG10LY.PivotTables("PvtSEG10LY").PivotCache.Refresh
        
        'refresh pvt for actual/budget Sales strategy packets
        sh_OYact_bud.PivotTables("Pvt_Proj_LockProj").PivotCache.Refresh
        sh_OYact_bud.PivotTables("Pvt_Proj_ActBud").PivotCache.Refresh
            
        'reset the group year and month pivottable 1
        sh_OYact_bud.Range("BQ5").Group Start:=True, End:=True, Periods:=Array(False, False, False, False, True, False, True)
        'reset the group year and month pivotable2
        sh_OYact_bud.Range("CQ5").Group Start:=True, End:=True, Periods:=Array(False, False, False, False, True, False, True)

        Application.Calculation = xlCalculationAutomatic
        
        Call SpreadDataDxD 'spread the day by day current information
        Application.Calculation = xlCalculationAutomatic 'after the day by day is spread, we need to recalculate (month total)
    
        Call SpreadSeg
        Call SpreadRMCol
        Call ApplyDataGraphs
        
        Call ApplySetup 'Apply the currency and decimal based on the previous tool.
        
        'added month 7 to 12 which don't exist in in version 1.1. apply values of month 1 to 6 column B to month 7 to 12
        If ws_Summary.Range("B258").Value = vbNullString Then
            ws_Summary.Unprotect "unlockME"
            ws_Summary.Range("B6").Value = "All"
                For Irow = 6 To 257
                    ws_Summary.Range("B" & Irow + 252).Value = ws_Summary.Range("B" & Irow).Value
                Next
        End If
        
        'apply summary day by day format
        ws_Summary.Unprotect "unlockME"
        For Irow = 8 To 509
            Select Case ws_Summary.Range("B" & Irow).Value
                Case "All"
                    ws_Summary.Rows(Irow).EntireRow.Hidden = False
                Case vbNullString
                    ws_Summary.Rows(Irow).EntireRow.Hidden = True
            End Select
        Next Irow
        ws_Summary.Protect "unlockME", DrawingObjects:=True, Contents:=True, Scenarios:=False, AllowFormattingCells:=True, AllowFormattingColumns:=False
      
        
        'apply user column setting
        ws_DayXDay.Unprotect "unlockME"
        ws_Segmentation.Unprotect "unlockME"
        ws_RMcollection.Unprotect "unlockME"
        For iCol = 5 To 89
            ws_DayXDay.Columns(iCol).ColumnWidth = DxDCol(iCol)
            If iCol < 59 Then ws_Segmentation.Columns(iCol).ColumnWidth = SegCol(iCol)
            If iCol < 52 Then ws_RMcollection.Columns(iCol).ColumnWidth = RMCol(iCol)
        Next
        
        DxDCol(89) = Empty: SegCol(59) = Empty: RMCol(52) = Empty
        Irow = Empty: lastrow = Empty: iCol = Empty
        
        For Each nm In Names 'hide name ranges
            nm.Visible = False
        Next
        
        Set nm = Nothing
    
        ws_DayXDay.Protect "unlockME", DrawingObjects:=True, Contents:=True, Scenarios:=False, AllowFormattingCells:=True, AllowFormattingRows:=False, AllowFormattingColumns:=False
        ws_Segmentation.Protect "unlockME", DrawingObjects:=True, Contents:=True, Scenarios:=False, AllowFormattingCells:=False, AllowFormattingRows:=False, AllowFormattingColumns:=False
        ws_RMcollection.Protect "unlockME", DrawingObjects:=True, Contents:=True, Scenarios:=False, AllowFormattingCells:=False, AllowFormattingRows:=False, AllowFormattingColumns:=False
        sh_OYProj.Protect "unlockME", DrawingObjects:=True, Contents:=True, Scenarios:=False, AllowFormattingCells:=False, AllowFormattingRows:=False, AllowFormattingColumns:=False
        
        With Application: .EnableEvents = True: .Calculation = xlCalculationAutomatic: .ScreenUpdating = False: End With
        
        ws_Summary.Activate
        ws_Setup.Activate
        
        With Application: .ScreenUpdating = True: .Calculation = xlCalculationAutomatic: .EnableEvents = True: .DisplayAlerts = True: End With
        
        ws_DayXDay.Activate
        If sh_OYact_bud.Range("A3").Value = vbNullString Then
            MsgBox "The upgrade is almost done, please re-import the One Yield v2 extract using the ""Re-Import Data w/out Archiving"" button located on the DaybyDay tab.", vbInformation, "Upgrade almost completed"
        Else
            MsgBox "Upgrade completed.", vbInformation, "Upgrade Status"
        End If
End Sub

Attribute VB_Name = "Utilities"
Option Explicit
Option Private Module
Public PrintPDF As Boolean

Sub ShowCustomViewDayxDay()
    ufrmViewDayxDay.Show
End Sub
Sub ShowPrintDayxDay()
    ufrmPrintDayxDay.Show
End Sub

Sub Auto_Fit_DaybyDay()

Dim iCol As Byte

With Application: .Calculation = xlCalculationManual: .ScreenUpdating = False: End With

    ws_DayXDay.Unprotect "unlockME"

    On Error Resume Next

        For iCol = 2 To 64
            Select Case iCol
                Case 3
                    If ws_DayXDay.Columns(iCol).Hidden = False Then ws_DayXDay.Columns(iCol).ColumnWidth = 60
                Case Else
                    If ws_DayXDay.Columns(iCol).Hidden = False Then ws_DayXDay.Columns(iCol).EntireColumn.AutoFit
            End Select
        Next
        iCol = Empty
       
       For iCol = 65 To 88
            Select Case ws_DayXDay.Columns(iCol).Hidden
                Case False
                    ws_DayXDay.Columns(iCol).EntireColumn.AutoFit
            End Select
        Next
        
    On Error GoTo 0

ws_DayXDay.Protect "unlockME", DrawingObjects:=True, Contents:=True, Scenarios:=False, AllowFormattingCells:=True, AllowFormattingColumns:=False

With Application: .Calculation = xlCalculationAutomatic: .ScreenUpdating = True: End With

End Sub
Sub ShowCustomViewSeg()
    ufrmViewSeg.Show
End Sub
Sub ShowPrintSeg()
    ufrmPrintSeg.Show
End Sub
Sub Auto_Fit_Seg()

Dim iCol As Byte

Application.Calculation = xlCalculationAutomatic

    ws_Segmentation.Unprotect "unlockME"
    
    On Error Resume Next
    
    Application.ScreenUpdating = False
        For iCol = 3 To 58
            Select Case iCol
                Case 3
                    If ws_Segmentation.Columns(iCol).Hidden = False Then ws_Segmentation.Columns(iCol).ColumnWidth = 60
                Case Else
                    If ws_Segmentation.Columns(iCol).Hidden = False Then ws_Segmentation.Columns(iCol).EntireColumn.AutoFit
            End Select
        Next
        iCol = Empty
       
    On Error GoTo 0
    
    ws_Segmentation.Protect "unlockME", DrawingObjects:=True, Contents:=True, Scenarios:=False, AllowFormattingCells:=False, AllowFormattingColumns:=False

Application.ScreenUpdating = True
End Sub
Sub ShowCustomViewRMcollection()
    ufrmViewRmCol.Show
End Sub
Sub ShowPrintRMcollection()
    ufrmPrintRMcollection.Show
End Sub
Sub Auto_Fit_RMcollection()

Dim iCol As Byte

Application.Calculation = xlCalculationAutomatic

    ws_RMcollection.Unprotect "unlockME"
    
    On Error Resume Next
    
    Application.ScreenUpdating = False
    
        For iCol = 3 To 78
            Select Case iCol
                Case 3
                    If ws_RMcollection.Columns(iCol).Hidden = False Then ws_RMcollection.Columns(iCol).ColumnWidth = 60
                Case Else
                    If ws_RMcollection.Columns(iCol).Hidden = False Then ws_RMcollection.Columns(iCol).EntireColumn.AutoFit
            End Select
        Next
        
        iCol = Empty
    On Error GoTo 0
    
    ws_RMcollection.Protect "unlockME", DrawingObjects:=True, Contents:=True, Scenarios:=False, AllowFormattingCells:=False, AllowFormattingColumns:=False

Application.ScreenUpdating = True
End Sub
Sub ShowCustomViewDashSum()
    ufrmViewDashSum.Show
End Sub
Sub ShowPrintDashSum()
    ufrmPrintDashSum.Show
End Sub

Sub Auto_Fit_DashSum()
Dim iCol As Byte
    
    ws_Summary.Unprotect "unlockME"
    
    On Error Resume Next
    
    With Application: .ScreenUpdating = False: .Calculation = xlCalculationManual: End With
        For iCol = 3 To 15
            ws_Summary.Columns(iCol).EntireColumn.AutoFit
        Next
        iCol = Empty
      
    On Error GoTo 0
    
    ws_Summary.Protect "unlockME", DrawingObjects:=True, Contents:=True, Scenarios:=False, AllowFormattingCells:=True, AllowFormattingColumns:=False

    With Application: .ScreenUpdating = True: .Calculation = xlCalculationAutomatic: End With
    
End Sub
Sub ApplySetup()
Dim Zeroes As Variant, CurrencyType As Variant, Irow As Long, iCol As Long
        
    CurrencyType = ws_Setup.Range("G15")
    
    If CurrencyType > vbNullString Then CurrencyType = "[$" & CurrencyType & " ]"
    
    Zeroes = ws_Setup.Range("G16").Value
    
    If Zeroes = 0 Then
        Zeroes = ""
    ElseIf Zeroes > 0 Then Zeroes = "." & Application.Rept("0", Zeroes)
    End If
    
    Application.ScreenUpdating = False
    
    On Error GoTo ErrorHandler
    
    With ws_Summary
        .Unprotect "unlockME"
        'this is for ADR current month
        For Irow = 8 To 480 Step 42
            'ADR
            'full week A/U
            .Range("E" & Irow & ":E" & Irow + 6).NumberFormatLocal = CurrencyType & "#,##0" & Zeroes & "_);(" & CurrencyType & "[RED]#,##0" & Zeroes & ")"
            .Range("E" & Irow + 8 & ":E" & Irow + 10).NumberFormatLocal = CurrencyType & "#,##0" & Zeroes & "_);(" & CurrencyType & "[RED]#,##0" & Zeroes & ")"
            'weekday A/U
            .Range("E" & Irow + 13 & ":E" & Irow + 19).NumberFormatLocal = CurrencyType & "#,##0" & Zeroes & "_);(" & CurrencyType & "[RED]#,##0" & Zeroes & ")"
            .Range("E" & Irow + 21 & ":E" & Irow + 23).NumberFormatLocal = CurrencyType & "#,##0" & Zeroes & "_);(" & CurrencyType & "[RED]#,##0" & Zeroes & ")"
            'weekend A/U
            .Range("E" & Irow + 26 & ":E" & Irow + 32).NumberFormatLocal = CurrencyType & "#,##0" & Zeroes & "_);(" & CurrencyType & "[RED]#,##0" & Zeroes & ")"
            .Range("E" & Irow + 34 & ":E" & Irow + 36).NumberFormatLocal = CurrencyType & "#,##0" & Zeroes & "_);(" & CurrencyType & "[RED]#,##0" & Zeroes & ")"
            'full week Var to last export
            .Range("H" & Irow & ":H" & Irow + 6).NumberFormatLocal = CurrencyType & "#,##0" & Zeroes & "_);(" & CurrencyType & "[RED]#,##0" & Zeroes & ")"
            .Range("H" & Irow + 9 & ":H" & Irow + 10).NumberFormatLocal = CurrencyType & "#,##0" & Zeroes & "_);(" & CurrencyType & "[RED]#,##0" & Zeroes & ")"
            'weekday Var to last export
            .Range("H" & Irow + 13 & ":H" & Irow + 19).NumberFormatLocal = CurrencyType & "#,##0" & Zeroes & "_);(" & CurrencyType & "[RED]#,##0" & Zeroes & ")"
            .Range("H" & Irow + 22 & ":H" & Irow + 23).NumberFormatLocal = CurrencyType & "#,##0" & Zeroes & "_);(" & CurrencyType & "[RED]#,##0" & Zeroes & ")"
            'weekend Var to last export
            .Range("H" & Irow + 26 & ":H" & Irow + 32).NumberFormatLocal = CurrencyType & "#,##0" & Zeroes & "_);(" & CurrencyType & "[RED]#,##0" & Zeroes & ")"
            .Range("H" & Irow + 35 & ":H" & Irow + 36).NumberFormatLocal = CurrencyType & "#,##0" & Zeroes & "_);(" & CurrencyType & "[RED]#,##0" & Zeroes & ")"
            'full week Actual LY same DOW
            .Range("K" & Irow).NumberFormatLocal = CurrencyType & "#,##0" & Zeroes & "_);(" & CurrencyType & "[RED]#,##0" & Zeroes & ")"
            .Range("K" & Irow + 4 & ":K" & Irow + 6).NumberFormatLocal = CurrencyType & "#,##0" & Zeroes & "_);(" & CurrencyType & "[RED]#,##0" & Zeroes & ")"
            .Range("K" & Irow + 8 & ":K" & Irow + 10).NumberFormatLocal = CurrencyType & "#,##0" & Zeroes & "_);(" & CurrencyType & "[RED]#,##0" & Zeroes & ")"
            'weekday Actual LY same DOW
            .Range("K" & Irow + 13).NumberFormatLocal = CurrencyType & "#,##0" & Zeroes & "_);(" & CurrencyType & "[RED]#,##0" & Zeroes & ")"
            .Range("K" & Irow + 17 & ":K" & Irow + 19).NumberFormatLocal = CurrencyType & "#,##0" & Zeroes & "_);(" & CurrencyType & "[RED]#,##0" & Zeroes & ")"
            .Range("K" & Irow + 21 & ":K" & Irow + 23).NumberFormatLocal = CurrencyType & "#,##0" & Zeroes & "_);(" & CurrencyType & "[RED]#,##0" & Zeroes & ")"
            'weekend Actual LY same DOW
            .Range("K" & Irow + 26).NumberFormatLocal = CurrencyType & "#,##0" & Zeroes & "_);(" & CurrencyType & "[RED]#,##0" & Zeroes & ")"
            .Range("K" & Irow + 30 & ":K" & Irow + 32).NumberFormatLocal = CurrencyType & "#,##0" & Zeroes & "_);(" & CurrencyType & "[RED]#,##0" & Zeroes & ")"
            .Range("K" & Irow + 34 & ":K" & Irow + 36).NumberFormatLocal = CurrencyType & "#,##0" & Zeroes & "_);(" & CurrencyType & "[RED]#,##0" & Zeroes & ")"
            'full week Current vs Actual LY Same DOW
            .Range("N" & Irow).NumberFormatLocal = CurrencyType & "#,##0" & Zeroes & "_);(" & CurrencyType & "[RED]#,##0" & Zeroes & ")"
            .Range("N" & Irow + 4 & ":N" & Irow + 6).NumberFormatLocal = CurrencyType & "#,##0" & Zeroes & "_);(" & CurrencyType & "[RED]#,##0" & Zeroes & ")"
            .Range("N" & Irow + 8 & ":N" & Irow + 10).NumberFormatLocal = CurrencyType & "#,##0" & Zeroes & "_);(" & CurrencyType & "[RED]#,##0" & Zeroes & ")"
            'weekday Current vs Actual LY Same DOW
            .Range("N" & Irow + 13).NumberFormatLocal = CurrencyType & "#,##0" & Zeroes & "_);(" & CurrencyType & "[RED]#,##0" & Zeroes & ")"
            .Range("N" & Irow + 17 & ":N" & Irow + 19).NumberFormatLocal = CurrencyType & "#,##0" & Zeroes & "_);(" & CurrencyType & "[RED]#,##0" & Zeroes & ")"
            .Range("N" & Irow + 21 & ":N" & Irow + 23).NumberFormatLocal = CurrencyType & "#,##0" & Zeroes & "_);(" & CurrencyType & "[RED]#,##0" & Zeroes & ")"
            'weekend Current vs Actual LY Same DOW
            .Range("N" & Irow + 26).NumberFormatLocal = CurrencyType & "#,##0" & Zeroes & "_);(" & CurrencyType & "[RED]#,##0" & Zeroes & ")"
            .Range("N" & Irow + 30 & ":N" & Irow + 32).NumberFormatLocal = CurrencyType & "#,##0" & Zeroes & "_);(" & CurrencyType & "[RED]#,##0" & Zeroes & ")"
            .Range("N" & Irow + 34 & ":N" & Irow + 36).NumberFormatLocal = CurrencyType & "#,##0" & Zeroes & "_);(" & CurrencyType & "[RED]#,##0" & Zeroes & ")"
        
            'Revenue
            'full week A/U
            .Range("F" & Irow & ":F" & Irow + 6).NumberFormatLocal = CurrencyType & "#,##0_);(" & CurrencyType & "[RED]#,##0)"
            .Range("F" & Irow + 8 & ":F" & Irow + 10).NumberFormatLocal = CurrencyType & "#,##0_);(" & CurrencyType & "[RED]#,##0)"
            'weekday A/U
            .Range("F" & Irow + 13 & ":F" & Irow + 19).NumberFormatLocal = CurrencyType & "#,##0_);(" & CurrencyType & "[RED]#,##0)"
            .Range("F" & Irow + 21 & ":F" & Irow + 23).NumberFormatLocal = CurrencyType & "#,##0_);(" & CurrencyType & "[RED]#,##0)"
            'weekend A/U
            .Range("F" & Irow + 26 & ":F" & Irow + 32).NumberFormatLocal = CurrencyType & "#,##0_);(" & CurrencyType & "[RED]#,##0)"
            .Range("F" & Irow + 34 & ":F" & Irow + 36).NumberFormatLocal = CurrencyType & "#,##0_);(" & CurrencyType & "[RED]#,##0)"
            'full week Var to last export
            .Range("I" & Irow & ":I" & Irow + 6).NumberFormatLocal = CurrencyType & "#,##0_);(" & CurrencyType & "[RED]#,##0)"
            .Range("I" & Irow + 9 & ":I" & Irow + 10).NumberFormatLocal = CurrencyType & "#,##0_);(" & CurrencyType & "[RED]#,##0)"
            'weekday Var to last export
            .Range("I" & Irow + 13 & ":I" & Irow + 19).NumberFormatLocal = CurrencyType & "#,##0_);(" & CurrencyType & "[RED]#,##0)"
            .Range("I" & Irow + 22 & ":I" & Irow + 23).NumberFormatLocal = CurrencyType & "#,##0_);(" & CurrencyType & "[RED]#,##0)"
            'weekend Var to last export
            .Range("I" & Irow + 26 & ":I" & Irow + 32).NumberFormatLocal = CurrencyType & "#,##0_);(" & CurrencyType & "[RED]#,##0)"
            .Range("I" & Irow + 35 & ":I" & Irow + 36).NumberFormatLocal = CurrencyType & "#,##0_);(" & CurrencyType & "[RED]#,##0)"
            'full week Actual LY same DOW
            .Range("L" & Irow).NumberFormatLocal = CurrencyType & "#,##0_);(" & CurrencyType & "[RED]#,##0)"
            .Range("L" & Irow + 4 & ":L" & Irow + 6).NumberFormatLocal = CurrencyType & "#,##0_);(" & CurrencyType & "[RED]#,##0)"
            .Range("L" & Irow + 8 & ":L" & Irow + 10).NumberFormatLocal = CurrencyType & "#,##0_);(" & CurrencyType & "[RED]#,##0)"
            'weekday Actual LY same DOW
            .Range("L" & Irow + 13).NumberFormatLocal = CurrencyType & "#,##0_);(" & CurrencyType & "[RED]#,##0)"
            .Range("L" & Irow + 17 & ":L" & Irow + 19).NumberFormatLocal = CurrencyType & "#,##0_);(" & CurrencyType & "[RED]#,##0)"
            .Range("L" & Irow + 21 & ":L" & Irow + 23).NumberFormatLocal = CurrencyType & "#,##0_);(" & CurrencyType & "[RED]#,##0)"
            'weekend Actual LY same DOW
            .Range("L" & Irow + 26).NumberFormatLocal = CurrencyType & "#,##0_);(" & CurrencyType & "[RED]#,##0)"
            .Range("L" & Irow + 30 & ":L" & Irow + 32).NumberFormatLocal = CurrencyType & "#,##0_);(" & CurrencyType & "[RED]#,##0)"
            .Range("L" & Irow + 34 & ":L" & Irow + 36).NumberFormatLocal = CurrencyType & "#,##0_);(" & CurrencyType & "[RED]#,##0)"
            'full week Current vs Actual LY Same DOW
            .Range("O" & Irow).NumberFormatLocal = CurrencyType & "#,##0_);(" & CurrencyType & "[RED]#,##0)"
            .Range("O" & Irow + 4 & ":O" & Irow + 6).NumberFormatLocal = CurrencyType & "#,##0_);(" & CurrencyType & "[RED]#,##0)"
            .Range("O" & Irow + 8 & ":O" & Irow + 10).NumberFormatLocal = CurrencyType & "#,##0_);(" & CurrencyType & "[RED]#,##0)"
            'weekday Current vs Actual LY Same DOW
            .Range("O" & Irow + 13).NumberFormatLocal = CurrencyType & "#,##0_);(" & CurrencyType & "[RED]#,##0)"
            .Range("O" & Irow + 17 & ":O" & Irow + 19).NumberFormatLocal = CurrencyType & "#,##0_);(" & CurrencyType & "[RED]#,##0)"
            .Range("O" & Irow + 21 & ":O" & Irow + 23).NumberFormatLocal = CurrencyType & "#,##0_);(" & CurrencyType & "[RED]#,##0)"
            'weekend Current vs Actual LY Same DOW
            .Range("O" & Irow + 26).NumberFormatLocal = CurrencyType & "#,##0_);(" & CurrencyType & "[RED]#,##0)"
            .Range("O" & Irow + 30 & ":O" & Irow + 32).NumberFormatLocal = CurrencyType & "#,##0_);(" & CurrencyType & "[RED]#,##0)"
            .Range("O" & Irow + 34 & ":O" & Irow + 36).NumberFormatLocal = CurrencyType & "#,##0_);(" & CurrencyType & "[RED]#,##0)"

        Next Irow
    ws_Summary.Protect "unlockME", DrawingObjects:=True, Contents:=True, Scenarios:=False, AllowFormattingCells:=True, AllowFormattingColumns:=False
    End With
    
    With ws_DayXDay
        .Unprotect "unlockME"
        'this is for the ADR
        For Irow = 6 To 507 Step 39
            For iCol = 4 To 68
                Select Case ws_DayXDay.Cells(5, iCol).Value
                    Case "Ttl Grp ADR (G) Proj RP", "Ttl Grp ADR (G) Var RP", "Ttl Grp ADR (G) LY", "Def ADR A/U RP", "Tobes ADR (G) RP", "MAR Rate", "GPO Minimum", "Trn ADR OTB (G)", "Trn OTB ADR (G) Var", _
                         "Trn ADR (G) OTB STLY", "Trn ADR (G) Proj A/U", "Trn Rm gap ADR (G) Pickup", "Trn ADR (G) Actual LY", "Rec Daily Rate", "Rec Blended Rate", "Lowest Selling Rate", "Avg Weighted Comp Rate"
                        .Range(.Cells(Irow, iCol), .Cells(Irow + 33, iCol)).NumberFormatLocal = CurrencyType & "#,##0" & Zeroes & "_);(" & CurrencyType & "[RED]#,##0" & Zeroes & ")"
                        If .Columns(iCol).EntireColumn.Hidden = False Then .Columns(iCol).EntireColumn.AutoFit
                End Select
            Next iCol
        Next Irow
    ws_DayXDay.Protect "unlockME", DrawingObjects:=True, Contents:=True, Scenarios:=False, AllowFormattingCells:=True, AllowFormattingColumns:=False
    End With
       
    With ws_RMcollection
        .Unprotect "unlockME"
        'this is for the ADR
        For Irow = 6 To 507 Step 39
            For iCol = 4 To 78
                Select Case ws_RMcollection.Cells(5, iCol).Value
                    Case "Hurdle Rev."
                        .Cells(Irow - 3, iCol).NumberFormatLocal = CurrencyType & "#,##0_);(" & CurrencyType & "[RED]#,##0)"
                        .Range(.Cells(Irow, iCol), .Cells(Irow + 33, iCol)).NumberFormatLocal = CurrencyType & "#,##0_);(" & CurrencyType & "[RED]#,##0)"
                        If .Columns(iCol).EntireColumn.Hidden = False Then .Columns(iCol).EntireColumn.AutoFit
                    Case "Hurdle Rev Var"
                        .Range(.Cells(Irow, iCol), .Cells(Irow + 33, iCol)).NumberFormatLocal = CurrencyType & "#,##0_);(" & CurrencyType & "[RED]#,##0)"
                End Select
            Next iCol
        Next Irow
    ws_RMcollection.Protect "unlockME", DrawingObjects:=True, Contents:=True, Scenarios:=False, AllowFormattingCells:=False, AllowFormattingColumns:=False
    End With
       
    With ws_Dashboard
        ws_Dashboard.Unprotect "unlockME"
        For Irow = 22 To 327 Step 61
            'apply currency symbol and decimal to ADR and currency symbol for revenue to the forecast data for the dashboard
            .Range("G" & Irow & ":G" & Irow + 4).NumberFormatLocal = CurrencyType & "#,##0" & Zeroes & "_);(" & CurrencyType & "[RED]#,##0" & Zeroes & ")"
            .Range("L" & Irow & ":L" & Irow + 4).NumberFormatLocal = CurrencyType & "#,##0_);(" & CurrencyType & "[RED]#,##0)"
        Next Irow
        
        For Irow = 56 To 369 Step 61
            'apply currency symbol to the user filter
            .Range("D" & Irow & ":D" & Irow + 7).NumberFormatLocal = CurrencyType & "#,##0_);(" & CurrencyType & "[RED]#,##0)"
        Next Irow
        ws_Dashboard.Protect "unlockME", DrawingObjects:=True, Contents:=True, Scenarios:=False, AllowFormattingCells:=True, AllowFormattingRows:=False, AllowFormattingColumns:=False, UserInterfaceOnly:=True
    End With
    
    CurrencyType = Empty: Zeroes = Empty
    
Application.ScreenUpdating = True
On Error GoTo 0
Exit Sub
ErrorHandler:  MsgBox "The currency symbol selected is invalid. Please try again." & vbLf & vbLf & _
        "If the error occurs again, please contact us at rmfs.tools@marriott.com.", vbCritical, "Currency Error"

        ws_Summary.Protect "unlockME", DrawingObjects:=True, Contents:=True, Scenarios:=False, AllowFormattingCells:=True, AllowFormattingRows:=False, AllowFormattingColumns:=False
        ws_DayXDay.Protect "unlockME", DrawingObjects:=True, Contents:=True, Scenarios:=False, AllowFormattingCells:=True, AllowFormattingRows:=False, AllowFormattingColumns:=False
        ws_RMcollection.Protect "unlockME", DrawingObjects:=True, Contents:=True, Scenarios:=False, AllowFormattingCells:=False, AllowFormattingRows:=False, AllowFormattingColumns:=False

        Application.ScreenUpdating = True
        CurrencyType = Empty: Zeroes = Empty
End Sub
Sub UnprotectMe()
    ActiveSheet.Unprotect "unlockME"
End Sub
Sub DashboardProtectMe()

    ActiveSheet.Range("Q31:AD63").Locked = False
    ActiveSheet.Range("Q92:AD124").Locked = False
    ActiveSheet.Range("Q153:AD184").Locked = False
    ActiveSheet.Range("Q213:AD244").Locked = False
    ActiveSheet.Range("Q273:AD304").Locked = False
    ActiveSheet.Range("Q333:AD364").Locked = False

    ActiveSheet.Protect "unlockME", DrawingObjects:=True, Contents:=True, Scenarios:=False, AllowFormattingCells:=True, AllowFormattingRows:=False, AllowFormattingColumns:=False, UserInterfaceOnly:=True
    ActiveSheet.EnableSelection = xlUnlockedCells
End Sub
Sub SetupTab_Activate()
    ws_Setup.Activate
    ws_Setup.Range("C12").Activate
End Sub

Sub PrintDataSource()
    
    On Error Resume Next
    Application.PrintCommunication = False
    With ws_DataSource.PageSetup
        .PrintTitleRows = ""
        .PrintTitleColumns = ""
        .CenterFooter = ""
    End With
    Application.PrintCommunication = True
    ws_DataSource.PageSetup.PrintArea = "$B$2:$F$67,$H$2:$L$58,$N$2:$R$78"
    Application.PrintCommunication = False
    With ws_DataSource.PageSetup
        .LeftHeader = "& OYv2 Strategy Outlook - Data Source &"
        .CenterHeader = ""
        .RightHeader = ""
        .LeftFooter = ""
        .CenterFooter = "& Marriott Confidential Proprietary Information &"
        .RightFooter = ""
        .LeftMargin = Application.InchesToPoints(0.2)
        .RightMargin = Application.InchesToPoints(0.2)
        .TopMargin = Application.InchesToPoints(0.25)
        .BottomMargin = Application.InchesToPoints(0.25)
        .HeaderMargin = Application.InchesToPoints(0.1)
        .FooterMargin = Application.InchesToPoints(0.1)
        .PrintHeadings = False
        .PrintGridlines = False
        .CenterHorizontally = True
        .CenterVertically = False
        .Orientation = xlPortrait
        .Draft = False
        .FirstPageNumber = xlAutomatic
        .Order = xlDownThenOver
        .BlackAndWhite = False
        .Zoom = False
        .FitToPagesWide = 1
        .FitToPagesTall = 1
        .PrintErrors = xlPrintErrorsDisplayed
        .OddAndEvenPagesHeaderFooter = False
        .DifferentFirstPageHeaderFooter = False
        .ScaleWithDocHeaderFooter = True
        .AlignMarginsHeaderFooter = True
    End With
    Application.PrintCommunication = True
    
    Application.Dialogs(xlDialogPrint).Show
    
    With ws_DataSource.PageSetup
        .PrintArea = ""
        .PrintTitleRows = ""
        .LeftHeader = ""
        .CenterFooter = ""
    End With
    
    ws_DataSource.DisplayPageBreaks = False
    On Error GoTo 0

End Sub

Sub DashboardSpellcheck()

    ws_Dashboard.Unprotect "unlockME"
    ws_Dashboard.Shapes.Range(Array("TxtbMth1", "TxtbMth2", "TxtbMth3", "TxtbMth4", "TxtbMth5", "TxtbMth6")).Select
    Cells.CheckSpelling
    ws_Dashboard.Cells(1, 1).Activate
    ws_Dashboard.Protect "unlockME", DrawingObjects:=True, Contents:=True, Scenarios:=False, AllowFormattingCells:=True
    
    MsgBox "Spell Check completed", vbInformation, "Spell Check"
    
End Sub
Sub OYprojUnprotect()
    sh_OYProj.Unprotect "unlockME"
End Sub
Sub OYprojProtect()
    sh_OYProj.Protect "unlockME", DrawingObjects:=True, Contents:=True, Scenarios:=True, AllowFormattingCells:=False
End Sub
Sub Auto_Fit_OYproj()

Dim iCol As Byte

Application.ScreenUpdating = False

    sh_OYProj.Unprotect "unlockME"
    
    On Error Resume Next
    
    Application.ScreenUpdating = False
        For iCol = 2 To 27
            If sh_OYProj.Columns(iCol).Hidden = False Then sh_OYProj.Columns(iCol).EntireColumn.AutoFit
        Next
        iCol = Empty
    On Error GoTo 0
    
    sh_OYProj.Protect "unlockME", DrawingObjects:=True, Contents:=True, Scenarios:=False, AllowFormattingCells:=False, AllowFormattingColumns:=False

Application.ScreenUpdating = True

End Sub

Sub CloseSaveYesNoCancel()
Dim MyCloseMessage As Byte
    
    If sh_DashboardData.Range("A1").Value = vbNullString Then
        MyCloseMessage = MsgBox("Do you want to save the changes you made to " & vbLf & ActiveWorkbook.Name & "?", vbYesNo + vbInformation)
        Select Case MyCloseMessage
            Case 7: sh_DashboardData.Range("A1").Value = "No"
        End Select
    End If
    
    Select Case sh_DashboardData.Range("A1").Value
        Case vbNullString 'yes
            ActiveWorkbook.Save
            Application.Quit
        Case "No" 'no
            Application.DisplayAlerts = False
            ThisWorkbook.Saved = True
            Application.DisplayAlerts = True
            Application.Quit
            End
    End Select
End Sub
Sub OpenKeyLegends()
    On Error Resume Next
        ws_Dashboard.OLEObjects("KeyLegends").Verb xlVerbOpen
    On Error GoTo 0
End Sub
Sub OpenSSPsetup()
    With Application: .EnableEvents = False: .ScreenUpdating = False: End With
    
    Call PicFormula
    With Application: .EnableEvents = True: .ScreenUpdating = True: End With
    
    ufrmSSP_Setup.Show
End Sub
Sub ShowSSP_Proj_MRDW()
    ufrmPacket.Show
End Sub
Sub PicFormula()
Dim ws As Worksheet, StartTab As String, shp As Shape

StartTab = ActiveSheet.Name

On Error GoTo 0
Application.EnableEvents = False
For Each ws In Worksheets
    If VBA.Left(ws.CodeName, 3) = "wsC" Then
        For Each shp In ws.Shapes
            Select Case VBA.Left(shp.Name, 4)
                Case "Pic_"
                    ws.Shapes(shp.Name).DrawingObject.Formula = ""
            End Select
        Next
    End If
Next

Worksheets(StartTab).Activate
Worksheets(StartTab).Range("A1").Activate
Application.EnableEvents = True
Set ws = Nothing: Set shp = Nothing: StartTab = Empty
End Sub
Sub GraphColor() 'this macro is for color blind users
Dim cht As ChartObject

Call UnprotectMe

On Error Resume Next

    If ActiveSheet.Range("H1").Value = 1 Then '1 = color blind
        ActiveSheet.Range("H1").Value = vbNullString
        ActiveSheet.Shapes("BtGraphColor").TextEffect.Text = "Daily Graph - Normal View"
    ElseIf ActiveSheet.Range("H1").Value = vbNullString Then 'vbnullstring = original color
        ActiveSheet.Range("H1").Value = 1
        ActiveSheet.Shapes("BtGraphColor").TextEffect.Text = "Daily Graph - Color Blind View"
    End If

    Select Case ActiveSheet.Range("H1").Value
        Case vbNullString 'reset to original color
            For Each cht In ActiveSheet.ChartObjects
                Select Case cht.Name
                    Case "Mth1_ChartUnconstrain", "Mth2_ChartUnconstrain", "Mth3_ChartUnconstrain", "Mth4_ChartUnconstrain", "Mth5_ChartUnconstrain", "Mth6_ChartUnconstrain"
                        ActiveSheet.ChartObjects(cht.Name).Chart.FullSeriesCollection(1).Format.Fill.ForeColor.RGB = RGB(242, 220, 219)     'OOO
                        ActiveSheet.ChartObjects(cht.Name).Chart.FullSeriesCollection(2).Format.Fill.ForeColor.RGB = RGB(166, 166, 166)     'group projection
                        ActiveSheet.ChartObjects(cht.Name).Chart.FullSeriesCollection(3).Format.Fill.ForeColor.RGB = RGB(191, 191, 191)     'contract projection
                        ActiveSheet.ChartObjects(cht.Name).Chart.FullSeriesCollection(4).Format.Fill.ForeColor.RGB = RGB(228, 108, 10)      'allotments
                        ActiveSheet.ChartObjects(cht.Name).Chart.FullSeriesCollection(5).Format.Fill.ForeColor.RGB = RGB(195, 214, 155)     'transient + Comp OTB
                        ActiveSheet.ChartObjects(cht.Name).Chart.FullSeriesCollection(6).Format.Fill.ForeColor.RGB = RGB(255, 102, 255)     'Applied rem dem bar graph pink
                        ActiveSheet.ChartObjects(cht.Name).Chart.FullSeriesCollection(7).Format.Fill.ForeColor.RGB = RGB(238, 236, 225)    'Additional Demand
                        ActiveSheet.ChartObjects(cht.Name).Chart.FullSeriesCollection(8).Format.Line.ForeColor.RGB = RGB(192, 80, 77)     'Daily Capacity
                        ActiveSheet.ChartObjects(cht.Name).Chart.FullSeriesCollection(9).Format.Fill.ForeColor.RGB = RGB(112, 48, 160)      'Override indicator Triangle
                        ActiveSheet.ChartObjects(cht.Name).Chart.FullSeriesCollection(10).Format.Fill.ForeColor.RGB = RGB(0, 0, 0)       'group slippage alerts
                    Case "Mth1_ChartRemDemSTLY", "Mth2_ChartRemDemSTLY", "Mth3_ChartRemDemSTLY", "Mth4_ChartRemDemSTLY", "Mth5_ChartRemDemSTLY", "Mth6_ChartRemDemSTLY"
                        ActiveSheet.ChartObjects(cht.Name).Chart.FullSeriesCollection(1).Format.Fill.ForeColor.RGB = RGB(255, 102, 255)     'Applied rem dem bar graph pink
                        ActiveSheet.ChartObjects(cht.Name).Chart.FullSeriesCollection(2).Format.Fill.ForeColor.RGB = RGB(112, 48, 160)      'System Rem Dem Triangle
                        ActiveSheet.ChartObjects(cht.Name).Chart.FullSeriesCollection(3).Format.Fill.ForeColor.RGB = RGB(127, 127, 127)     'Rem Dem STLY dots
                        ActiveSheet.ChartObjects(cht.Name).Chart.FullSeriesCollection(3).Format.Line.ForeColor.RGB = RGB(127, 127, 127)     'Rem Dem STLY line
                        ActiveSheet.ChartObjects(cht.Name).Chart.FullSeriesCollection(4).Format.Fill.ForeColor.RGB = RGB(0, 0, 0)           'Grp Slippage alert
                End Select
            Next
        Case 1 'set for color blind
            For Each cht In ActiveSheet.ChartObjects
                Select Case cht.Name
                    Case "Mth1_ChartUnconstrain", "Mth2_ChartUnconstrain", "Mth3_ChartUnconstrain", "Mth4_ChartUnconstrain", "Mth5_ChartUnconstrain", "Mth6_ChartUnconstrain"
                        ActiveSheet.ChartObjects(cht.Name).Chart.FullSeriesCollection(1).Format.Fill.ForeColor.RGB = 13337440    'OOO
                        ActiveSheet.ChartObjects(cht.Name).Chart.FullSeriesCollection(2).Format.Fill.ForeColor.RGB = 9002831     'group projection
                        ActiveSheet.ChartObjects(cht.Name).Chart.FullSeriesCollection(3).Format.Fill.ForeColor.RGB = 4678315     'contract projection
                        ActiveSheet.ChartObjects(cht.Name).Chart.FullSeriesCollection(4).Format.Fill.ForeColor.RGB = 11513775    'allotments
                        ActiveSheet.ChartObjects(cht.Name).Chart.FullSeriesCollection(5).Format.Fill.ForeColor.RGB = 14394993    'transient + Comp OTB
                        ActiveSheet.ChartObjects(cht.Name).Chart.FullSeriesCollection(6).Format.Fill.ForeColor.RGB = 5606641     'Applied rem dem bar graph pink
                        ActiveSheet.ChartObjects(cht.Name).Chart.FullSeriesCollection(7).Format.Fill.ForeColor.RGB = 4638719     'Additional Demand
                        ActiveSheet.ChartObjects(cht.Name).Chart.FullSeriesCollection(8).Format.Line.ForeColor.RGB = 9526821     'Daily Capacity
                        ActiveSheet.ChartObjects(cht.Name).Chart.FullSeriesCollection(9).Format.Fill.ForeColor.RGB = 0           'Override indicator Triangle
                        ActiveSheet.ChartObjects(cht.Name).Chart.FullSeriesCollection(10).Format.Fill.ForeColor.RGB = 0          'group slippage alerts

                    Case "Mth1_ChartRemDemSTLY", "Mth2_ChartRemDemSTLY", "Mth3_ChartRemDemSTLY", "Mth4_ChartRemDemSTLY", "Mth5_ChartRemDemSTLY", "Mth6_ChartRemDemSTLY"
                        ActiveSheet.ChartObjects(cht.Name).Chart.FullSeriesCollection(1).Format.Fill.ForeColor.RGB = 5606641     'Applied rem dem bar graph
                        ActiveSheet.ChartObjects(cht.Name).Chart.FullSeriesCollection(2).Format.Fill.ForeColor.RGB = 0          'System Rem Dem Triangle
                        ActiveSheet.ChartObjects(cht.Name).Chart.FullSeriesCollection(3).Format.Fill.ForeColor.RGB = 9526821      'Rem Dem STLY dots
                        ActiveSheet.ChartObjects(cht.Name).Chart.FullSeriesCollection(3).Format.Line.ForeColor.RGB = 9526821      'Rem Dem STLY line
                        ActiveSheet.ChartObjects(cht.Name).Chart.FullSeriesCollection(4).Format.Fill.ForeColor.RGB = 0           'Grp Slippage alerts
                End Select
            Next
    End Select
    
    Call DashboardProtectMe
    Application.ScreenUpdating = True
    
    Set cht = Nothing
    On Error GoTo 0
    MsgBox "Daily graph color setting applied.", vbInformation, "Daily Graph Color"
    
    
End Sub
Sub ProtectMe()
    ActiveSheet.Protect "unlockME"
End Sub
Sub ShowDeleteTab()
    ufrmDeleteTab.Show
End Sub

'Sub ResetShapesTrigger()
'
'    'this macro is triggered by a shortcut CRTL+SHIFT+Z
'
'    If ws_Welcome.Range("AK17").Value = vbNullString Then
'        ws_Welcome.Range("AK17").Value = True 'activate the trigger
'        Call ResetShapes
'    Else
'        ws_Welcome.Range("AK17").Value = vbNullString 'deactivate the trigger
'    End If
'
'End Sub
'Sub ResetShapes()
'Dim Irow As Integer
'
'On Error Resume Next
'    If Not ws_Welcome.Range("AK17").Value = vbNullString Then
'        Select Case IIf(VBA.Len(Application.OperatingSystem) = 24, VBA.Mid(Application.OperatingSystem, 21, 1), VBA.Mid(Application.OperatingSystem, 21, 2))
'            Case 6
'                    For Irow = 2 To 65
'                        If ws_Dashboard.Shapes(sh_DashboardData.Range("ED" & Irow)).DrawingObject.Top <> sh_DashboardData.Range("EE" & Irow).Value Then _
'                                ws_Dashboard.Shapes(sh_DashboardData.Range("ED" & Irow)).DrawingObject.Top = sh_DashboardData.Range("EE" & Irow).Value
'                        If ws_Dashboard.Shapes(sh_DashboardData.Range("ED" & Irow)).DrawingObject.Left <> sh_DashboardData.Range("EF" & Irow).Value Then _
'                            ws_Dashboard.Shapes(sh_DashboardData.Range("ED" & Irow)).DrawingObject.Left = sh_DashboardData.Range("EF" & Irow).Value
'                    Next
'            Case Else
'                For Irow = 2 To 65
'                    If ws_Dashboard.Shapes(sh_DashboardData.Range("EA" & Irow)).DrawingObject.Top <> sh_DashboardData.Range("EB" & Irow).Value Then _
'                            ws_Dashboard.Shapes(sh_DashboardData.Range("EA" & Irow)).DrawingObject.Top = sh_DashboardData.Range("EB" & Irow).Value
'                    If ws_Dashboard.Shapes(sh_DashboardData.Range("EA" & Irow)).DrawingObject.Left <> sh_DashboardData.Range("EC" & Irow).Value Then _
'                        ws_Dashboard.Shapes(sh_DashboardData.Range("EA" & Irow)).DrawingObject.Left = sh_DashboardData.Range("EC" & Irow).Value
'
'                Next
'        End Select
'    End If
'On Error GoTo 0
'Irow = Empty
'End Sub
Attribute VB_Name = "a_CreatePowerPointLandscape"
Option Explicit
Option Private Module

Const ConstMargin = 1 'this is the space between shapes and slide to place the correct shape to the same margin

Dim MyRange As Range, MyRangeDate As Range, MyRangeFreeCell As Range
Dim iSlideHeight As Long, iSlideWidth As Long 'this is to grab the height/width of the slide
Sub MakePowerPoing_LandScape()
Dim PPT_SaveAsPDF As Boolean
    
    PPT_SaveAsPDF = False: Call MakePowerPoint(PPT_SaveAsPDF): PPT_SaveAsPDF = Empty
    
End Sub
Sub MakePowerPoint_LandScapeSavePDF()
Dim PPT_SaveAsPDF As Boolean
    
    PPT_SaveAsPDF = True: Call MakePowerPoint(PPT_SaveAsPDF): PPT_SaveAsPDF = Empty

End Sub
Sub MakePowerPoint(PPT_SaveAsPDF)
Dim ws As Worksheet, AppPP As Object, oPres As Object, oSlide As Object

Dim MyMonth As Byte, MonthLoop As Byte, DashPart As Byte, Mydata_MKG As Byte
Dim DashCom As Boolean, WdWe As Boolean, iPPTrow As Long, MyData As Byte, PPT_FileName As String

    Application.WindowState = xlMinimized
    
    Set AppPP = CreateObject("Powerpoint.Application") 'create the powerpoint
        AppPP.Activate
        
    Set oPres = AppPP.Presentations.Add 'this is to create the powerpoint presentation
        oPres.PageSetup.SlideWidth = 792 'added this to reset the slide to word paper size
        oPres.PageSetup.SlideHeight = 612 'added this to reset the slide to word paper size
        iSlideHeight = oPres.PageSetup.SlideHeight 'assign the Slide Height
        iSlideWidth = oPres.PageSetup.SlideWidth 'assigh the slide width
                
    With oPres.SlideMaster
        .HeadersFooters.SlideNumber.Visible = msoTrue
        .HeadersFooters.DisplayOnTitleSlide = msoFalse
        .HeadersFooters.Footer.Visible = msoCTrue
        .HeadersFooters.Footer.Text = "Marriott Confidential and Proprietary Information"
    End With
    
    oPres.PageSetup.FirstSlideNumber = 0 'assign the first number of the slide.
    
    Application.EnableEvents = False
    
    'loop through each rows on the create PPT
    For iPPTrow = 4 To 104
        Select Case sh_PkgLayout.Range("A" & iPPTrow).Value
            Case "Cover Page"
                For Each ws In Worksheets
                    Select Case ws.CodeName
                        Case "ws_SSP_Agenda"
                        Call PPT_Slide_Title(oPres, ws)
                        Exit For
                    End Select
                Next
                Set ws = Nothing
            
            Case "Dashboard Mth1", "Dashboard Mth2", "Dashboard Mth3", "Dashboard Mth4", "Dashboard Mth5", "Dashboard Mth6"
                For Each ws In Worksheets
                    Select Case ws.CodeName
                        Case "ws_Dashboard"
                            MonthLoop = VBA.Right(sh_PkgLayout.Range("A" & iPPTrow).Value, 1)
                            
                            For DashPart = 1 To 2
                                Set oSlide = oPres.Slides.Add(Index:=oPres.Slides.Count + 1, Layout:=12) '12 is no title, 11 is title
                                    oSlide.Select
                                    oSlide.HeadersFooters.Footer.Text = "Marriott Confidential and Proprietary Information"
                                    oSlide.Shapes("Footer Placeholder 1").Height = 21.6
                                    oSlide.Shapes("Footer Placeholder 1").Width = 324
                                    oSlide.Shapes("Footer Placeholder 1").Top = oSlide.Master.Height - oSlide.Shapes("Footer Placeholder 1").Height - 1
                                    oSlide.Shapes("Slide Number Placeholder 2").Height = 23
                                    oSlide.Shapes("Slide Number Placeholder 2").Top = oSlide.Master.Height - oSlide.Shapes("Slide Number Placeholder 2").Height - 1
                                    
                                    Call PPT_AddSlideObjectsDashBoard(oSlide, ws, MonthLoop, DashPart) 'Generate dashboard Month 2 slides including comments on slide 1.
                            Next DashPart
                            DashPart = Empty
                            Exit For
                    End Select
                Next
            
            Case "Free Cells Dashboard Mth1", "Free Cells Dashboard Mth2", "Free Cells Dashboard Mth3", "Free Cells Dashboard Mth4", "Free Cells Dashboard Mth5", "Free Cells Dashboard Mth6"
                Select Case ws.CodeName
                    Case "ws_Dashboard"
                        MonthLoop = VBA.Right(sh_PkgLayout.Range("A" & iPPTrow).Value, 1)

                        Set oSlide = oPres.Slides.Add(Index:=oPres.Slides.Count + 1, Layout:=12) '12 is no title, 11 is title
                            oSlide.Select
                            oSlide.HeadersFooters.Footer.Text = "Marriott Confidential and Proprietary Information"
                            oSlide.Shapes("Footer Placeholder 1").Height = 21.6
                            oSlide.Shapes("Footer Placeholder 1").Width = 324
                            oSlide.Shapes("Footer Placeholder 1").Top = oSlide.Master.Height - oSlide.Shapes("Footer Placeholder 1").Height - 1
                            oSlide.Shapes("Slide Number Placeholder 2").Height = 23
                            oSlide.Shapes("Slide Number Placeholder 2").Top = oSlide.Master.Height - oSlide.Shapes("Slide Number Placeholder 2").Height - 1
                            
                            Call PPT_AddSlideObjectsDashBoardFreeCells(oSlide, ws, MonthLoop)  'Generate Dashboard Free Cells Slide.
                End Select
            
            Case "Summary Day by Day Mth1", "Summary Day by Day Mth2", "Summary Day by Day Mth3", "Summary Day by Day Mth4", "Summary Day by Day Mth5", "Summary Day by Day Mth6", _
                 "Summary Day by Day Mth7", "Summary Day by Day Mth8", "Summary Day by Day Mth9", "Summary Day by Day Mth10", "Summary Day by Day Mth11", "Summary Day by Day Mth12"
                For Each ws In Worksheets
                    Select Case ws.CodeName
                        Case "ws_Summary"
                            Select Case sh_PkgLayout.Range("A" & iPPTrow).Value
                                Case "Summary Day by Day Mth1": MonthLoop = 1
                                Case "Summary Day by Day Mth2": MonthLoop = 2
                                Case "Summary Day by Day Mth3": MonthLoop = 3
                                Case "Summary Day by Day Mth4": MonthLoop = 4
                                Case "Summary Day by Day Mth5": MonthLoop = 5
                                Case "Summary Day by Day Mth6": MonthLoop = 6
                                Case "Summary Day by Day Mth7": MonthLoop = 7
                                Case "Summary Day by Day Mth8": MonthLoop = 8
                                Case "Summary Day by Day Mth9": MonthLoop = 9
                                Case "Summary Day by Day Mth10": MonthLoop = 10
                                Case "Summary Day by Day Mth11": MonthLoop = 11
                                Case "Summary Day by Day Mth12": MonthLoop = 12
                            End Select
                                        
                            WdWe = True
                            Set oSlide = oPres.Slides.Add(Index:=oPres.Slides.Count + 1, Layout:=12) '12 is no title, 11 is title
                                oSlide.Select
                                oSlide.HeadersFooters.Footer.Text = "Marriott Confidential and Proprietary Information"
                                oSlide.Shapes("Footer Placeholder 1").Height = 21.6
                                oSlide.Shapes("Footer Placeholder 1").Width = 324
                                oSlide.Shapes("Footer Placeholder 1").Top = oSlide.Master.Height - oSlide.Shapes("Footer Placeholder 1").Height - 1
                                oSlide.Shapes("Slide Number Placeholder 2").Height = 23
                                oSlide.Shapes("Slide Number Placeholder 2").Top = oSlide.Master.Height - oSlide.Shapes("Slide Number Placeholder 2").Height - 1
                                
                                Call PPT_AddSlideObjectsSumDxD(oSlide, ws, WdWe, MonthLoop, MyMonth) 'add all the ppt macro to create the slides
                        Exit For
                    End Select
                Next
                
            Case "Summary Day by Day Mth 1-3", "Summary Day by Day Mth 4", "Summary Day by Day Mth 4-5", "Summary Day by Day Mth 4-6"
                For Each ws In Worksheets
                    Select Case ws.CodeName
                        Case "ws_Summary"
                            If sh_PkgLayout.Range("A" & iPPTrow).Value = "Summary Day by Day Mth 1-3" Then MyMonth = 3
                            If sh_PkgLayout.Range("A" & iPPTrow).Value = "Summary Day by Day Mth 4" Then MyMonth = 4
                            If sh_PkgLayout.Range("A" & iPPTrow).Value = "Summary Day by Day Mth 4-5" Then MyMonth = 5
                            If sh_PkgLayout.Range("A" & iPPTrow).Value = "Summary Day by Day Mth 4-6" Then MyMonth = 6
                            
                            WdWe = False
                            Set oSlide = oPres.Slides.Add(Index:=oPres.Slides.Count + 1, Layout:=12) '12 is no title, 11 is title
                                oSlide.Select
                                oSlide.HeadersFooters.Footer.Text = "Marriott Confidential and Proprietary Information"
                                oSlide.Shapes("Footer Placeholder 1").Height = 21.6
                                oSlide.Shapes("Footer Placeholder 1").Width = 324
                                oSlide.Shapes("Footer Placeholder 1").Top = oSlide.Master.Height - oSlide.Shapes("Footer Placeholder 1").Height - 1
                                oSlide.Shapes("Slide Number Placeholder 2").Height = 23
                                oSlide.Shapes("Slide Number Placeholder 2").Top = oSlide.Master.Height - oSlide.Shapes("Slide Number Placeholder 2").Height - 1

                                Call PPT_AddSlideObjectsSumDxD(oSlide, ws, WdWe, MonthLoop, MyMonth) 'add all the ppt macro to create the slide.
                            Exit For
                    End Select
                Next
                
            Case "Summary Day by Day Mth 4-7", "Summary Day by Day Mth 4-8", "Summary Day by Day Mth 4-9"
                For Each ws In Worksheets
                    Select Case ws.CodeName
                        Case "ws_Summary"
                            MyMonth = 6
                                WdWe = False
                                Set oSlide = oPres.Slides.Add(Index:=oPres.Slides.Count + 1, Layout:=12) '12 is no title, 11 is title
                                    oSlide.Select
                                    oSlide.HeadersFooters.Footer.Text = "Marriott Confidential and Proprietary Information"
                                    oSlide.Shapes("Footer Placeholder 1").Height = 21.6
                                    oSlide.Shapes("Footer Placeholder 1").Width = 324
                                    oSlide.Shapes("Footer Placeholder 1").Top = oSlide.Master.Height - oSlide.Shapes("Footer Placeholder 1").Height - 1
                                    oSlide.Shapes("Slide Number Placeholder 2").Height = 23
                                    oSlide.Shapes("Slide Number Placeholder 2").Top = oSlide.Master.Height - oSlide.Shapes("Slide Number Placeholder 2").Height - 1
    
                                Call PPT_AddSlideObjectsSumDxD(oSlide, ws, WdWe, MonthLoop, MyMonth) 'add all the ppt macro to create the slide.
                                        
                            If sh_PkgLayout.Range("A" & iPPTrow).Value = "Summary Day by Day Mth 4-7" Then MyMonth = 7
                            If sh_PkgLayout.Range("A" & iPPTrow).Value = "Summary Day by Day Mth 4-8" Then MyMonth = 8
                            If sh_PkgLayout.Range("A" & iPPTrow).Value = "Summary Day by Day Mth 4-9" Then MyMonth = 9
                                
                                WdWe = False
                                Set oSlide = oPres.Slides.Add(Index:=oPres.Slides.Count + 1, Layout:=12) '12 is no title, 11 is title
                                    oSlide.Select
                                    oSlide.HeadersFooters.Footer.Text = "Marriott Confidential and Proprietary Information"
                                    oSlide.Shapes("Footer Placeholder 1").Height = 21.6
                                    oSlide.Shapes("Footer Placeholder 1").Width = 324
                                    oSlide.Shapes("Footer Placeholder 1").Top = oSlide.Master.Height - oSlide.Shapes("Footer Placeholder 1").Height - 1
                                    oSlide.Shapes("Slide Number Placeholder 2").Height = 23
                                    oSlide.Shapes("Slide Number Placeholder 2").Top = oSlide.Master.Height - oSlide.Shapes("Slide Number Placeholder 2").Height - 1
    
                                Call PPT_AddSlideObjectsSumDxD(oSlide, ws, WdWe, MonthLoop, MyMonth) 'add all the ppt macro to create the slide.
                            Exit For
                    End Select
                Next
            Case "Summary Day by Day Mth 4-10", "Summary Day by Day Mth 4-11", "Summary Day by Day Mth 4-12"
                For Each ws In Worksheets
                    Select Case ws.CodeName
                        Case "ws_Summary"
                            MyMonth = 6
                                WdWe = False
                                Set oSlide = oPres.Slides.Add(Index:=oPres.Slides.Count + 1, Layout:=12) '12 is no title, 11 is title
                                    oSlide.Select
                                    oSlide.HeadersFooters.Footer.Text = "Marriott Confidential and Proprietary Information"
                                    oSlide.Shapes("Footer Placeholder 1").Height = 21.6
                                    oSlide.Shapes("Footer Placeholder 1").Width = 324
                                    oSlide.Shapes("Footer Placeholder 1").Top = oSlide.Master.Height - oSlide.Shapes("Footer Placeholder 1").Height - 1
                                    oSlide.Shapes("Slide Number Placeholder 2").Height = 23
                                    oSlide.Shapes("Slide Number Placeholder 2").Top = oSlide.Master.Height - oSlide.Shapes("Slide Number Placeholder 2").Height - 1
    
                                Call PPT_AddSlideObjectsSumDxD(oSlide, ws, WdWe, MonthLoop, MyMonth) 'add all the ppt macro to create the slide.
                                        
                            MyMonth = 9
                                WdWe = False
                                Set oSlide = oPres.Slides.Add(Index:=oPres.Slides.Count + 1, Layout:=12) '12 is no title, 11 is title
                                    oSlide.Select
                                    oSlide.HeadersFooters.Footer.Text = "Marriott Confidential and Proprietary Information"
                                    oSlide.Shapes("Footer Placeholder 1").Height = 21.6
                                    oSlide.Shapes("Footer Placeholder 1").Width = 324
                                    oSlide.Shapes("Footer Placeholder 1").Top = oSlide.Master.Height - oSlide.Shapes("Footer Placeholder 1").Height - 1
                                    oSlide.Shapes("Slide Number Placeholder 2").Height = 23
                                    oSlide.Shapes("Slide Number Placeholder 2").Top = oSlide.Master.Height - oSlide.Shapes("Slide Number Placeholder 2").Height - 1
    
                                Call PPT_AddSlideObjectsSumDxD(oSlide, ws, WdWe, MonthLoop, MyMonth) 'add all the ppt macro to create the slide.
                                
                            If sh_PkgLayout.Range("A" & iPPTrow).Value = "Summary Day by Day Mth 4-10" Then MyMonth = 10
                            If sh_PkgLayout.Range("A" & iPPTrow).Value = "Summary Day by Day Mth 4-11" Then MyMonth = 11
                            If sh_PkgLayout.Range("A" & iPPTrow).Value = "Summary Day by Day Mth 4-12" Then MyMonth = 12
                                
                                WdWe = False
                                Set oSlide = oPres.Slides.Add(Index:=oPres.Slides.Count + 1, Layout:=12) '12 is no title, 11 is title
                                    oSlide.Select
                                    oSlide.HeadersFooters.Footer.Text = "Marriott Confidential and Proprietary Information"
                                    oSlide.Shapes("Footer Placeholder 1").Height = 21.6
                                    oSlide.Shapes("Footer Placeholder 1").Width = 324
                                    oSlide.Shapes("Footer Placeholder 1").Top = oSlide.Master.Height - oSlide.Shapes("Footer Placeholder 1").Height - 1
                                    oSlide.Shapes("Slide Number Placeholder 2").Height = 23
                                    oSlide.Shapes("Slide Number Placeholder 2").Top = oSlide.Master.Height - oSlide.Shapes("Slide Number Placeholder 2").Height - 1
    
                                Call PPT_AddSlideObjectsSumDxD(oSlide, ws, WdWe, MonthLoop, MyMonth) 'add all the ppt macro to create the slide.
                            Exit For
                    End Select
                Next
                
                
                
            Case "STR_Wk_SummaryComb", "STR_SummaryComb28Days", "STR_Wk_Glance", "STR_Wk_Seg_Glance", "STR_Wk_Daily", "STR_Website", "STR_Mth_Glance", "STR_Mth_Comp", "STR_Mth_DOW", "CompShop_0-30", "CompShop_31-60", "CompShop_61-90"
                Set ws = Worksheets(sh_PkgLayout.Range("A" & iPPTrow).Value)
                    If ws.Visible = xlSheetVisible Then
                        Select Case ws.Name
                            Case "STR_Wk_SummaryComb": MyData = 1:  Case "STR_SummaryComb28Days": MyData = 2
                            Case "STR_Wk_Glance": MyData = 3:       Case "STR_Wk_Seg_Glance": MyData = 4
                            Case "STR_Wk_Daily": MyData = 5:        Case "STR_Mth_Glance": MyData = 6
                            Case "STR_Mth_Comp": MyData = 7:        Case "STR_Mth_DOW": MyData = 8
                            Case "STR_Website": MyData = 9:         Case "CompShop_0-30": MyData = 10
                            Case "CompShop_31-60": MyData = 11:     Case "CompShop_61-90": MyData = 12
                            'Case "MKG_Daily": MyData = 13
                        End Select
                        Set oSlide = oPres.Slides.Add(Index:=oPres.Slides.Count + 1, Layout:=12) '12 is no title, 11 is title
                            oSlide.Select
                            oSlide.HeadersFooters.Footer.Text = "Marriott Confidential and Proprietary Information"
                            oSlide.Shapes("Footer Placeholder 1").Height = 21.6
                            oSlide.Shapes("Footer Placeholder 1").Width = 324
                            oSlide.Shapes("Footer Placeholder 1").Top = oSlide.Master.Height - oSlide.Shapes("Footer Placeholder 1").Height - 1
                            oSlide.Shapes("Slide Number Placeholder 2").Height = 23
                            oSlide.Shapes("Slide Number Placeholder 2").Top = oSlide.Master.Height - oSlide.Shapes("Slide Number Placeholder 2").Height - 1
        
                            Call PPT_AddSlideObjectsSTR(oSlide, ws, MyData) 'add all the ppt macro to create the slide.
                            MyData = Empty
                    End If
            Case "MKG_Daily"
                Set ws = Worksheets(sh_PkgLayout.Range("A" & iPPTrow).Value)
                    If ws.Visible = xlSheetVisible Then
                        For Mydata_MKG = 1 To 2
                            Set oSlide = oPres.Slides.Add(Index:=oPres.Slides.Count + 1, Layout:=12) '12 is no title, 11 is title
                                oSlide.Select
                                oSlide.HeadersFooters.Footer.Text = "Marriott Confidential and Proprietary Information"
                                oSlide.Shapes("Footer Placeholder 1").Height = 21.6
                                oSlide.Shapes("Footer Placeholder 1").Width = 324
                                oSlide.Shapes("Footer Placeholder 1").Top = oSlide.Master.Height - oSlide.Shapes("Footer Placeholder 1").Height - 1
                                oSlide.Shapes("Slide Number Placeholder 2").Height = 23
                                oSlide.Shapes("Slide Number Placeholder 2").Top = oSlide.Master.Height - oSlide.Shapes("Slide Number Placeholder 2").Height - 1
                            Call PPT_AddSlideObjectsSTR_MKG_D(oSlide, ws, Mydata_MKG) 'add all the ppt macro to create the slide.
                        Next
                        Mydata_MKG = Empty
                    End If
                
            Case "MKG_Mth"
                Set ws = Worksheets(sh_PkgLayout.Range("A" & iPPTrow).Value)
                    For MyData = 1 To ws.Shapes.Count
                        Set oSlide = oPres.Slides.Add(Index:=oPres.Slides.Count + 1, Layout:=12) '12 is no title, 11 is title
                            oSlide.Select
                            oSlide.HeadersFooters.Footer.Text = "Marriott Confidential and Proprietary Information"
                            oSlide.Shapes("Footer Placeholder 1").Height = 21.6
                            oSlide.Shapes("Footer Placeholder 1").Width = 324
                            oSlide.Shapes("Footer Placeholder 1").Top = oSlide.Master.Height - oSlide.Shapes("Footer Placeholder 1").Height - 1
                            oSlide.Shapes("Slide Number Placeholder 2").Height = 23
                            oSlide.Shapes("Slide Number Placeholder 2").Top = oSlide.Master.Height - oSlide.Shapes("Slide Number Placeholder 2").Height - 1
                        Call PPT_AddSlideObjectsSTR_MKG(oSlide, ws, MyData) 'add all the ppt macro to create the slide.
                    Next
                    MyData = Empty

            Case Else
                For Each ws In Worksheets
                    If ws.Visible = xlSheetVisible Then
                        Select Case ws.Name
                            Case sh_PkgLayout.Range("A" & iPPTrow).Value
                                Set oSlide = oPres.Slides.Add(Index:=oPres.Slides.Count + 1, Layout:=12) '12 is no title, 11 is title
                                    oSlide.Select
                                    'oSlide.HeadersFooters.Footer.Text = "Marriott Confidential and Proprietary Information"
                                    oSlide.Shapes("Footer Placeholder 1").Height = 21.6
                                    oSlide.Shapes("Footer Placeholder 1").Width = 324
                                    oSlide.Shapes("Footer Placeholder 1").Top = oSlide.Master.Height - oSlide.Shapes("Footer Placeholder 1").Height - 1
                                    oSlide.Shapes("Slide Number Placeholder 2").Height = 23
                                    oSlide.Shapes("Slide Number Placeholder 2").Top = oSlide.Master.Height - oSlide.Shapes("Slide Number Placeholder 2").Height - 1
    
                                    Call PPT_CustomSlideObjects(oSlide, ws) 'add all the ppt macro to create the slide.
                                Exit For
                        End Select
                    End If
                Next
        End Select 'worksheet case
    Next iPPTrow
    
    Application.DisplayAlerts = False
    
    'save PPT
    On Error GoTo PPT_SaveError
    
    PPT_FileName = ThisWorkbook.Path & "\" & ws_Setup.Range("C15").Value & "_" & "One_Yield_v2_SST" & VBA.Format(ws_SSP_Agenda.Range("A7"), "_mm_dd_YY") & "_h" & VBA.Hour(Now) & "m" & VBA.Minute(Now) & "s" & VBA.Second(Now)
    oPres.SaveAs PPT_FileName & ".pptx"
    
    'this is to save the generated PPT in PDF
    Select Case PPT_SaveAsPDF
        Case True
            Const ppSaveAsPDF = 32
            oPres.SaveAs PPT_FileName & ".pdf", ppSaveAsPDF
    End Select
    
    With Application: .EnableEvents = True: .DisplayAlerts = True: End With
    
    oPres.Slides(1).Select
    
    Application.ScreenUpdating = True
    Application.WindowState = xlMaximized
    
    Select Case PPT_SaveAsPDF
        Case False
            MsgBox "Your PowerPoint Presentation is ready and saved to the same location as this tool." & vbLf & _
                    "Location and file name: " & oPres.FullName, vbInformation, "PowerPoint Generated and Saved"
        Case True
            MsgBox "Your PowerPoint Presentation is ready, saved to the same location as this tool." & vbLf & _
                    "A PDF copy of this presentation has been generated and saved to the same location." & vbLf & _
                    "Location and file name: " & oPres.FullName, vbInformation, "PowerPoint Generated and Saved"
    End Select
            
    Set ws = Nothing: Set AppPP = Nothing: Set oPres = Nothing: Set oSlide = Nothing
    MyMonth = Empty: MonthLoop = Empty: DashPart = Empty: DashCom = Empty: WdWe = Empty: iPPTrow = Empty: MyData = Empty: PPT_FileName = Empty
    
    End
    
PPT_SaveError:
    MsgBox "The PowerPoint Presentation is generated but was unable to save it to the tool location. Please save the created PowerPoint Presentation", vbInformation, "PowerPoint Created - Saving Error"
    
    With Application: .EnableEvents = True: .DisplayAlerts = True: End With
    oPres.Slides(1).Select
    
    Application.ScreenUpdating = True
    Application.WindowState = xlMaximized
    
    Set ws = Nothing: Set AppPP = Nothing: Set oPres = Nothing: Set oSlide = Nothing
    MyMonth = Empty: MonthLoop = Empty: DashPart = Empty: DashCom = Empty: WdWe = Empty: iPPTrow = Empty: MyData = Empty: PPT_FileName = Empty

End Sub
Sub PPT_Slide_Title(ppSlide As Object, wsSource As Worksheet)
Dim oSlide As Object, oLogo As Object, Irow As Integer
Dim RngSource As Range
    
    On Error Resume Next
    
    Set oSlide = ppSlide.Slides.Add(1, 1) 'create title slide
    Set MyRange = wsSource.Range("A1:P46")
    
   'add title
    oSlide.Shapes.Title.TextFrame.TextRange.Text = wsSource.Range("A1").Text
    oSlide.Shapes.Title.Height = 116
    oSlide.Shapes.Title.Top = 0
    
    'add subtitle
    oSlide.Shapes.placeholders(2).TextFrame.TextRange.Text = _
        wsSource.Range("A5").Text & VBA.Chr$(10) & wsSource.Range("A7").Text
    oSlide.Shapes.placeholders(2).Top = oSlide.Shapes.Title.Height
    oSlide.Shapes.placeholders(2).Height = 93
     
    'add agenda
     With oSlide.Shapes.AddTextbox(msoTextOrientationHorizontal, 0, 209, iSlideWidth / 2, 50)
        Set RngSource = wsSource.Cells(15, 2)
        
        With .TextFrame.TextRange.InsertAfter(RngSource.Text & vbCrLf)
            .Font.Bold = IIf(RngSource.Font.Bold, msoTrue, msoFalse)
            .Font.Size = RngSource.Font.Size
            .ParagraphFormat.Alignment = 2
        End With
        
        For Irow = 16 To wsSource.Cells(42, 2).End(xlUp).Row
            Set RngSource = wsSource.Cells(Irow, 2)
            With .TextFrame.TextRange.InsertAfter(RngSource.Text & vbCrLf)
                .Font.Bold = IIf(RngSource.Offset(1).Font.Bold, msoTrue, msoFalse)
                .Font.Size = RngSource.Font.Size
                .ParagraphFormat.Alignment = 1
            End With
        Next
    End With
    
    'add follow up
    With oSlide.Shapes.AddTextbox(msoTextOrientationHorizontal, 396, 209, iSlideWidth / 2, 50)
        Set RngSource = wsSource.Cells(15, 10)
        
        With .TextFrame.TextRange.InsertAfter(RngSource.Text & vbCrLf)
            .Font.Bold = IIf(RngSource.Font.Bold, msoTrue, msoFalse)
            .Font.Size = RngSource.Font.Size
            .ParagraphFormat.Alignment = 2
        End With
        For Irow = 16 To wsSource.Cells(42, 10).End(xlUp).Row
            Set RngSource = wsSource.Cells(Irow, 10)
                With .TextFrame.TextRange.InsertAfter(RngSource.Text & vbCrLf)
                    .Font.Bold = IIf(RngSource.Offset(1).Font.Bold, msoTrue, msoFalse)
                    .Font.Size = RngSource.Font.Size
                    .ParagraphFormat.Alignment = 1
                End With
        Next
    End With
    
    'add confidentional statement
     With oSlide.Shapes.AddTextbox(msoTextOrientationHorizontal, ConstMargin, iSlideHeight - 60, iSlideWidth - ConstMargin * 2, 50)
        Set RngSource = wsSource.Cells(MyRange.Rows.Count - 3, 1)
        'set the alignment of the confidential statment.
        .TextFrame.TextRange.ParagraphFormat.Alignment = 2
        
        With .TextFrame.TextRange.InsertAfter(RngSource.Text & vbCrLf)
            .Font.Bold = IIf(RngSource.Font.Bold, msoTrue, msoFalse)
            .Font.Size = RngSource.Font.Size
        End With
        With .TextFrame.TextRange.InsertAfter(RngSource.Offset(1).Text)
            .Font.Bold = IIf(RngSource.Offset(1).Font.Bold, msoTrue, msoFalse)
            .Font.Size = RngSource.Font.Size
        End With
        
    End With
    
    On Error GoTo 0
    
Set oSlide = Nothing: Set oLogo = Nothing: Set RngSource = Nothing: Set MyRange = Nothing

End Sub

Sub PPT_AddSlideObjectsDashBoard(oSlide As Object, wsSource As Worksheet, MonthLoop, DashPart)
    Dim ShapeNew As Object, ShapeSource As Excel.Shape
    
    On Error Resume Next
    
    Select Case MonthLoop 'capture what range to export
        Case 1
            Select Case DashPart
                Case 1: Set MyRange = wsSource.Range("B4:AL26")
                Case 2: Set MyRange = wsSource.Range("B27:AL63")
            End Select
        Case 2
            Select Case DashPart
                Case 1: Set MyRange = wsSource.Range("B65:AL87")
                Case 2: Set MyRange = wsSource.Range("B88:AL124")
            End Select
        Case 3
            Select Case DashPart
                Case 1: Set MyRange = wsSource.Range("B126:AL148")
                Case 2: Set MyRange = wsSource.Range("B149:AL185")
            End Select
        Case 4
            Select Case DashPart
                Case 1: Set MyRange = wsSource.Range("B186:AL209")
                Case 2: Set MyRange = wsSource.Range("B210:AL246")
            End Select
        Case 5
            Select Case DashPart
                Case 1: Set MyRange = wsSource.Range("B248:AL270")
                Case 2: Set MyRange = wsSource.Range("B271:AL307")
            End Select
        Case 6
            Select Case DashPart
                Case 1: Set MyRange = wsSource.Range("B309:AL331")
                Case 2: Set MyRange = wsSource.Range("B332:AL369")
            End Select
    End Select
        
    MyRange.CopyPicture
    Application.Wait (VBA.Now + VBA.TimeValue("0:00:01"))
    
    Set ShapeNew = oSlide.Shapes.Paste
    
    ShapeNew.LockAspectRatio = False
    ShapeNew.Width = iSlideWidth - ConstMargin - ConstMargin
    ShapeNew.Height = IIf(DashPart = 1, 432, 576) 'set to 6" 'height oSlide.Master.Height - (ConstMargin * 3)
    ShapeNew.Top = ConstMargin
    ShapeNew.Left = (oSlide.Master.Width - ShapeNew.Width) / 2 'center the shape
    ShapeNew.Name = "DashBoard"
    
    If DashPart = 1 Then
        'copy comments automatically to the first slide dashboard
        For Each ShapeSource In wsSource.Shapes 'loop to find the text box in the comment section
            If ShapeSource.Type = msoTextBox Then
                'the intersect is to captue the shape in the print area range only
                If Not Application.Intersect(wsSource.Range(ShapeSource.TopLeftCell, ShapeSource.BottomRightCell), MyRange.Offset(0, 15)) Is Nothing Then
                  If ShapeSource.Type = msoTextBox Then 'add the textbox
                        ShapeSource.Copy
                        Application.Wait (VBA.Now + VBA.TimeValue("0:00:01"))
                        
                        Set ShapeNew = oSlide.Shapes.Paste
                        
                        ShapeNew.TextFrame.TextRange.Font.Size = 8.5
                        ShapeNew.TextFrame2.Column.Number = 2
                        ShapeNew.Height = 144 'set height to 2"
                        ShapeNew.Width = iSlideWidth - ConstMargin - ConstMargin
                        ShapeNew.Left = ConstMargin
                        ShapeNew.Top = ConstMargin + oSlide.Shapes("DashBoard").Height
                        ShapeNew.Name = "Comments"
                        Exit For
                    End If
                End If
            End If
        Next ShapeSource
    End If
    
    Set MyRange = Nothing: Set ShapeSource = Nothing: Set ShapeNew = Nothing
    
    On Error GoTo 0
    
'    'this is the code to add the speaker notes if we need to add it to the tool on each slide.
'    oSlide.NotesPage.Shapes.Placeholders(2).TextFrame.TextRange.Text = "this is a test for the speaker notes"
       
    
End Sub
Sub PPT_AddSlideObjectsDashBoardFreeCells(oSlide As Object, wsSource As Worksheet, MonthLoop)
    Dim ShapeNew As Object, ShapeSource As Excel.Shape
    
    On Error Resume Next
    
    Select Case MonthLoop
        Case 1: Set MyRangeFreeCell = wsSource.Range("AN31:BA63")    'user free cells
        Case 2: Set MyRangeFreeCell = wsSource.Range("AN92:BA124")   'user free cells
        Case 3: Set MyRangeFreeCell = wsSource.Range("AN153:BA185")  'user free cells
        Case 4: Set MyRangeFreeCell = wsSource.Range("AN214:BA246")  'user free cells
        Case 5: Set MyRangeFreeCell = wsSource.Range("AN275:BA307")  'user free cells
        Case 6: Set MyRangeFreeCell = wsSource.Range("AN336:BA369")  'user free cells
    End Select
                    
    MyRangeFreeCell.CopyPicture 'copy free user cells section below the comment text box
    Application.Wait (VBA.Now + VBA.TimeValue("0:00:01"))
    
    Set ShapeNew = oSlide.Shapes.Paste
    
    ShapeNew.LockAspectRatio = False
    ShapeNew.Name = "FreeCells"
    ShapeNew.Width = iSlideWidth - ConstMargin * 2 - 28 'format shape to 8"
    ShapeNew.Height = oSlide.Master.Height - ConstMargin * 2 - 28
    ShapeNew.Top = ConstMargin
    ShapeNew.Left = (iSlideWidth - ShapeNew.Width) / 2
    
'    'this is the code to add the speaker notes if we need to add it to the tool on each slide.
'    oSlide.NotesPage.Shapes.Placeholders(2).TextFrame.TextRange.Text = "this is a test for the speaker notes"
       
    Set MyRangeFreeCell = Nothing: Set wsSource = Nothing: Set ShapeNew = Nothing
    
    On Error GoTo 0
    
End Sub

Sub PPT_AddSlideObjectsSumDxD(oSlide As Object, wsSource As Worksheet, WdWe, MonthLoop, MyMonth)
    Dim ShapeNew As Object, iPicHeight As Long
    
    On Error Resume Next
    
    Select Case WdWe
        Case True 'print full week, weekday/weekend
            Select Case MonthLoop
                Case 1: Set MyRange = wsSource.Range("C6:O44")
                Case 2: Set MyRange = wsSource.Range("C48:O86")
                Case 3: Set MyRange = wsSource.Range("C90:O128")
                Case 4: Set MyRange = wsSource.Range("C132:O170")
                Case 5: Set MyRange = wsSource.Range("C174:O212")
                Case 6: Set MyRange = wsSource.Range("C216:O254")
                Case 7: Set MyRange = wsSource.Range("C258:O296")
                Case 8: Set MyRange = wsSource.Range("C300:O338")
                Case 9: Set MyRange = wsSource.Range("C342:O380")
                Case 10: Set MyRange = wsSource.Range("C384:O422")
                Case 11: Set MyRange = wsSource.Range("C426:O464")
                Case 12: Set MyRange = wsSource.Range("C468:O506")
            End Select
            
            MyRange.CopyPicture
            Application.Wait (VBA.Now + VBA.TimeValue("0:00:01"))
            
            Set ShapeNew = oSlide.Shapes.Paste
            
            ShapeNew.LockAspectRatio = False
            ShapeNew.Name = "SummaryMth"
            ShapeNew.Width = iSlideWidth - ConstMargin - ConstMargin
            ShapeNew.Height = 500
            ShapeNew.Top = ConstMargin + 33 'center vertical
            ShapeNew.Left = (iSlideWidth - ShapeNew.Width) / 2 'center horizontal the shape

            ws_Summary.Range("C4:O5").CopyPicture
            Application.Wait (VBA.Now + VBA.TimeValue("0:00:01"))
            
            Set ShapeNew = oSlide.Shapes.Paste
            
            ShapeNew.LockAspectRatio = False
            ShapeNew.Name = "SummaryHeader"
            ShapeNew.Width = oSlide.Shapes("SummaryMth").Width
            ShapeNew.Height = 33
            ShapeNew.Top = oSlide.Shapes("SummaryMth").Top - ShapeNew.Height
            ShapeNew.Left = (iSlideWidth - ShapeNew.Width) / 2 'center horizontal the shape
        
        Case Else 'print full week only
            Select Case MyMonth
                Case 3: Set MyRange = wsSource.Range("C6:O102"): iPicHeight = 500
                
                'month 4 to 6
                Case 4: Set MyRange = wsSource.Range("C132:O144"): iPicHeight = 167
                Case 5: Set MyRange = wsSource.Range("C132:O186"): iPicHeight = 334
                Case 6: Set MyRange = wsSource.Range("C132:O228"): iPicHeight = 500
                
                'month 7 to 9
                Case 7: Set MyRange = wsSource.Range("C258:O270"): iPicHeight = 167
                Case 8: Set MyRange = wsSource.Range("C258:O312"): iPicHeight = 334
                Case 9: Set MyRange = wsSource.Range("C258:O354"): iPicHeight = 500
                
                'month 10 to 12
                Case 10: Set MyRange = wsSource.Range("C384:O396"): iPicHeight = 167
                Case 11: Set MyRange = wsSource.Range("C384:O438"): iPicHeight = 334
                Case 12: Set MyRange = wsSource.Range("C384:O480"): iPicHeight = 500
            End Select
            
            MyRange.CopyPicture
            Application.Wait (VBA.Now + VBA.TimeValue("0:00:01"))
            
            Set ShapeNew = oSlide.Shapes.Paste
            
            ShapeNew.LockAspectRatio = False
            ShapeNew.Name = "SummaryMth"
            ShapeNew.Width = iSlideWidth - ConstMargin - ConstMargin
            ShapeNew.Height = iPicHeight
            ShapeNew.Top = ConstMargin + 33
            ShapeNew.Left = (iSlideWidth - ShapeNew.Width) / 2 'center horizontal the shape

            ws_Summary.Range("C4:O5").CopyPicture
            Application.Wait (VBA.Now + VBA.TimeValue("0:00:01"))
            
            Set ShapeNew = oSlide.Shapes.Paste
            
            ShapeNew.LockAspectRatio = False
            ShapeNew.Name = "SummaryHeader"
            ShapeNew.Width = oSlide.Shapes("SummaryMth").Width
            ShapeNew.Height = 33
            ShapeNew.Top = oSlide.Shapes("SummaryMth").Top - ShapeNew.Height
            ShapeNew.Left = (iSlideWidth - ShapeNew.Width) / 2 'center horizontal the shape

    End Select
    
    On Error GoTo 0
    
'    'this is the code to add the speaker notes if we need to add it to the tool on each slide.
'    oSlide.NotesPage.Shapes.Placeholders(2).TextFrame.TextRange.Text = "this is a test for the speaker notes"
       
    Set MyRange = Nothing: iPicHeight = Empty
End Sub
Sub PPT_CustomSlideObjects(oSlide As Object, wsSource As Worksheet)
Dim ShapeNew As Object, ShapeSource As Excel.Shape, MySize As Double
    
    Set MyRange = wsSource.Range("A1:P41")
        
    On Error Resume Next
    For Each ShapeSource In wsSource.Shapes
        'the intersect is to captue the shape in the print area range only
            If Not Application.Intersect(wsSource.Range(ShapeSource.TopLeftCell, ShapeSource.BottomRightCell), MyRange) Is Nothing Then
                If ShapeSource.Type = msoLine Then
                    oSlide.Shapes.AddLine ShapeSource.Left + ConstMargin, ShapeSource.Top + ConstMargin, _
                        ShapeSource.Left + ConstMargin + ShapeSource.Width - ShapeSource.Line.Weight, _
                        ShapeSource.Top + ConstMargin + ShapeSource.Height - ShapeSource.Line.Weight
                ElseIf ShapeSource.Type = msoPicture Then 'copy the picture
                    ShapeSource.CopyPicture
                    Application.Wait (VBA.Now + VBA.TimeValue("0:00:01"))
                    
                    Set ShapeNew = oSlide.Shapes.Paste
                    
                    ShapeNew.Height = ShapeSource.Height
                    ShapeNew.Width = ShapeSource.Width
                    ShapeNew.Left = ShapeSource.Left + MySize
                    ShapeNew.Top = ShapeSource.Top
                    ShapeNew.Tags.Add "Picture", wsSource.Name
                    ShapeNew.Tags.Add "NAME", ShapeSource.Name
                ElseIf ShapeSource.Type = msoTextBox Then 'add the textbox
                    ShapeSource.Copy
                    Application.Wait (VBA.Now + VBA.TimeValue("0:00:01"))
                    
                    Set ShapeNew = oSlide.Shapes.Paste
                    
                    ShapeNew.Height = ShapeSource.Height
                    ShapeNew.Width = ShapeSource.Width
                    ShapeNew.Left = ShapeSource.Left '- 20
                    ShapeNew.Top = ShapeSource.Top
                    ShapeNew.Tags.Add "TextBox", wsSource.Name
                    ShapeNew.Tags.Add "NAME", ShapeSource.Name
                Else
                    ShapeSource.CopyPicture
                    Application.Wait (VBA.Now + VBA.TimeValue("0:00:01"))
                    
                    Set ShapeNew = oSlide.Shapes.Paste
                    
                    ShapeNew.Height = ShapeSource.Height
                    ShapeNew.Width = ShapeSource.Width
                    ShapeNew.Left = ShapeSource.Left '- 20
                    ShapeNew.Top = ShapeSource.Top
                    ShapeNew.Tags.Add "CustomShape", wsSource.Name
                    ShapeNew.Tags.Add "NAME", ShapeSource.Name
                End If
            End If
    Next ShapeSource
    
     
'    'apply footer left
'    If (wsSource.Range("B36").Value <> vbNullString And wsSource.Range("B36").Value <> "Add footer optional:") Then
'        With oSlide.Shapes.AddTextbox(msoTextOrientationHorizontal, 1, iSlideHeight - 30, iSlideWidth - ConstMargin * 30, 50)
'            .TextFrame.TextRange.InsertAfter (wsSource.Range("B36").Text)
'            .TextFrame.TextRange.Font.Size = 8
'        End With
'    End If
'    'data source
'    If wsSource.Range("B37").Value <> vbNullString And wsSource.Range("B37").Value <> "Add footer source here:" Then 'this is for the other slide
'        With oSlide.Shapes.AddTextbox(msoTextOrientationHorizontal, 1, iSlideHeight - 20, iSlideWidth - ConstMargin * 30, 50)
'            .TextFrame.TextRange.InsertAfter (wsSource.Range("B37").Text)
'            .TextFrame.TextRange.Font.Size = 8
'        End With
'    End If
'    'change the size of the footer center
'    oSlide.Shapes("Footer Placeholder 2").TextFrame.TextRange.Font.Size = 9
   
    Set MyRange = Nothing
    On Error GoTo 0
End Sub

Sub PPT_AddSlideObjectsSTR(oSlide, ws, MyData)
    Dim ShapeNew As Object
    
    On Error Resume Next
    
    Select Case MyData
        Case 1: Set MyRange = ws.Range("B1:AA69")   'Wk Summary Comb
        Case 2: Set MyRange = ws.Range("B1:AA69")   'Summary Comb 28 days
        Case 3: Set MyRange = ws.Range("B1:AA37")   'Weekly STR Glance
        Case 4: Set MyRange = ws.Range("B1:S37")    'Weekly STR SEG Glance
        Case 5: Set MyRange = ws.Range("B1:AK57")   'Weekly STR Daily
        Case 6: Set MyRange = ws.Range("B1:T31")    'Mth STR Glance
        Case 7: Set MyRange = ws.Range("B1:AF53")   'Mth STR Comp
        Case 8: Set MyRange = ws.Range("B1:U75")    'Mth STR DOW
        Case 9: Set MyRange = ws.Range("B1:AJ42")   'STR Website
        
        Case 10: Set MyRange = ws.Range("Shop1")     'Compshop 0-30
        Case 11: Set MyRange = ws.Range("Shop2")    'Compshop 31-60
        Case 12: Set MyRange = ws.Range("Shop3")    'Compshop 61-90
        
        Case 13: Set MyRange = ws.Range("MKG_D") 'MKG Daily
        
    End Select
                    
    MyRange.CopyPicture 'copy free user cells section below the comment text box
    Application.Wait (VBA.Now + VBA.TimeValue("0:00:01"))
    
    Set ShapeNew = oSlide.Shapes.Paste
    
    ShapeNew.LockAspectRatio = False
    Select Case MyData
        Case 1: ShapeNew.Name = "WkComb"
        Case 2: ShapeNew.Name = "Comb28d"
        Case 3: ShapeNew.Name = "WklyGlance"
        Case 4: ShapeNew.Name = "WklySegGlance"
        Case 5: ShapeNew.Name = "WklyDaily"
        Case 6: ShapeNew.Name = "MthGlance"
        Case 7: ShapeNew.Name = "MthComp"
        Case 8: ShapeNew.Name = "MthDOW"
        Case 9: ShapeNew.Name = "MthWebsite"
        Case 10: ShapeNew.Name = "Comp0030"
        Case 11: ShapeNew.Name = "Comp3160"
        Case 12: ShapeNew.Name = "Comp6190"
        Case 13: ShapeNew.Name = "MKG_Daily"
    End Select
    Select Case MyData
        Case 1 To 12
            ShapeNew.Width = iSlideWidth - ConstMargin * 2 - 28 'format shape to 8"
            ShapeNew.Height = oSlide.Master.Height - ConstMargin * 2 - 28
            ShapeNew.Top = ConstMargin
            ShapeNew.Left = (iSlideWidth - ShapeNew.Width) / 2
        Case 13 'this is to reformat the MKG daily if the height is greater than the slide minus footer
            ShapeNew.Width = oSlide.Master.Width
            ShapeNew.Top = ConstMargin
            ShapeNew.Left = (iSlideWidth - ShapeNew.Width) / 2
            If ShapeNew.Height > (oSlide.Master.Height - ConstMargin * 2 - 28) Then _
                ShapeNew.Height = oSlide.Master.Height - ConstMargin * 2 - 28
    End Select
    
    On Error GoTo 0
    
'    'this is the code to add the speaker notes if we need to add it to the tool on each slide.
'    oSlide.NotesPage.Shapes.Placeholders(2).TextFrame.TextRange.Text = "this is a test for the speaker notes"
       
    Set MyRange = Nothing
End Sub

Sub PPT_AddSlideObjectsSTR_MKG(oSlide, ws, MyData)
Dim ShapeNew As Object, MyPicName As Variant

On Error Resume Next
    
    Select Case MyData
        Case 1: MyPicName = "PIC_MKG1"
        Case 2: MyPicName = "PIC_MKG2"
        Case 3: MyPicName = "PIC_MKG3"
    End Select
    
    ws.Shapes(MyPicName).CopyPicture
    Application.Wait (VBA.Now + VBA.TimeValue("0:00:01"))
    
    Set ShapeNew = oSlide.Shapes.Paste
  
        ShapeNew.LockAspectRatio = False
        ShapeNew.Width = iSlideWidth
        'ShapeNew.Height = oSlide.Master.Height - ConstMargin * 2
        ShapeNew.Top = 0
        ShapeNew.Left = (iSlideWidth - ShapeNew.Width) / 2
    MyPicName = Empty
On Error GoTo 0

End Sub
Sub PPT_AddSlideObjectsSTR_MKG_D(oSlide, ws, Mydata_MKG)
Dim ShapeNew As Object

On Error Resume Next
    
    Select Case Mydata_MKG
        Case 1: Set MyRange = ws.Range("MKG_D")
                MyRange.CopyPicture
                Application.Wait (VBA.Now + VBA.TimeValue("0:00:01"))
                
                Set ShapeNew = oSlide.Shapes.Paste
                    Application.CutCopyMode = False
                
                    ShapeNew.LockAspectRatio = False
                    ShapeNew.Width = iSlideWidth
                    'ShapeNew.Height = oSlide.Master.Height - ConstMargin * 2
                    ShapeNew.Top = 0
                    ShapeNew.Left = (iSlideWidth - ShapeNew.Width)
            
        Case 2: Set MyRange = ws.Range("MKG_D_Index")
            MyRange.CopyPicture
            Application.Wait (VBA.Now + VBA.TimeValue("0:00:01"))
            
            Set ShapeNew = oSlide.Shapes.Paste
                ShapeNew.LockAspectRatio = False
                ShapeNew.Width = iSlideWidth / 2
                'ShapeNew.Height = oSlide.Master.Height - ConstMargin * 2
                ShapeNew.Top = 0
                ShapeNew.Left = (iSlideWidth - ShapeNew.Width) / 2
            
    End Select
Set MyRange = Nothing
On Error GoTo 0

End Sub

Attribute VB_Name = "a_CustomSlide"
Option Explicit
Option Private Module
Sub AddCustomSlide()
    Application.ScreenUpdating = False
    
    On Error Resume Next
        wsCustom.Visible = xlSheetVisible
        If ActiveSheet.CodeName = "ws_SSP_PPT" Then
            wsCustom.Copy After:=Sheets("Custom")
            ActiveSheet.ScrollArea = "$A$1:$T$50"
        Else
            wsCustom.Copy After:=ActiveSheet
            ActiveSheet.ScrollArea = "$A$1:$T$50"
        End If
        
        wsCustom.Visible = xlSheetVeryHidden
    On Error GoTo 0
    
    Application.ScreenUpdating = True
End Sub
Sub DeleteCustomSlide()
Dim MyMessage As Byte
    
    If ActiveSheet.CodeName = "wsCustom" Then End
    
    MyMessage = MsgBox("You are about to delete this slide!" & vbLf & _
        "Do you wish to proceed?", vbYesNo + vbCritical + vbDefaultButton2, "Delete Slide")
    Application.DisplayAlerts = False
    If MyMessage = vbYes Then ActiveSheet.Delete
        
    MyMessage = Empty
    Application.DisplayAlerts = True

End Sub
Sub DuplicateCustomSlide()
Dim SheetIndex As Byte, MyTabName As String, sh As Shape

Application.ScreenUpdating = False
    On Error Resume Next
    SheetIndex = ActiveSheet.Index
    MyTabName = ActiveSheet.Name
    ActiveSheet.Copy After:=Sheets(SheetIndex)
    ActiveSheet.ScrollArea = "$A$1:$T$50"
    
    SheetIndex = Empty
    'resize all shapes if any
    For Each sh In ActiveSheet.Shapes
        sh.Width = Sheets(MyTabName).Shapes(sh.Name).Width
        sh.Height = Sheets(MyTabName).Shapes(sh.Name).Height
    Next
    On Error GoTo 0
Application.ScreenUpdating = True

End Sub

Sub PacketSlides()
Dim ws As Worksheet, Irow As Long, StartTab As String

StartTab = ActiveSheet.Name
On Error Resume Next

Application.ScreenUpdating = False
    For Each ws In Worksheets 'first hide all custom tab
        If (VBA.Left(ws.CodeName, 9) Like "wsCustom*" And ws.CodeName <> "wsCustom") Then ws.Visible = xlSheetHidden
    Next ws

    'show the custom slide assigned to the selected packet
    For Irow = 5 To 105
        If sh_PkgLayout.Range("C4:C41").Find(sh_PkgLayout.Range("A" & Irow), lookat:=xlPart) Is Nothing Then
            Select Case sh_PkgLayout.Range("A" & Irow).Value
                Case Is <> "": Worksheets(sh_PkgLayout.Range("A" & Irow).Value).Visible = xlSheetVisible
            End Select
        End If
    Next Irow

Worksheets(StartTab).Activate

On Error GoTo 0

Application.ScreenUpdating = True
Set ws = Nothing: Irow = Empty: StartTab = Empty
End Sub

Sub HideSlide()
Dim shp As Shape

Application.ScreenUpdating = False
    On Error Resume Next
    
        For Each shp In ActiveSheet.Shapes
            Select Case VBA.Left(shp.Name, 4)
                Case "Pic_"
                    ActiveSheet.Shapes(shp.Name).DrawingObject.Formula = ""
            End Select
        Next

    On Error GoTo 0

    ActiveSheet.Visible = xlSheetHidden
Application.ScreenUpdating = True

End Sub

Sub ShowHiddenSlide()
Application.ScreenUpdating = False
    ufrmShowHidden.Show
Application.ScreenUpdating = True
End Sub
Attribute VB_Name = "sh_DashboardData"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Option Explicit

Attribute VB_Name = "sh_GPO"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Option Explicit

Attribute VB_Name = "sh_GRAMSSR"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Option Explicit

Attribute VB_Name = "sh_IchartMth"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Option Explicit

Attribute VB_Name = "sh_IchartWk"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Option Explicit

Attribute VB_Name = "sh_MAR"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Option Explicit

Attribute VB_Name = "sh_OYElevate"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Option Explicit

Attribute VB_Name = "sh_OYProj"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Control = "cbSave, 2, 0, MSForms, CheckBox"
Option Explicit
Private Sub Worksheet_Activate()
    ActiveSheet.ScrollArea = "$A$1:$AV$5500"
End Sub
Private Sub cbSave_Click()
Dim lastrow As Long
lastrow = sh_OYProj.Cells(Rows.Count, 1).End(xlUp).Row

    If lastrow = 1 Then lastrow = 2

    If cbSave.Value = False Then
        Application.EnableEvents = False
        Call OYprojUnprotect
        sh_OYProj.Range("AA2:AA" & lastrow).ClearContents
        sh_OYProj.Range("B2:U" & lastrow).Interior.Pattern = xlNone
        Call OYprojProtect
        Application.EnableEvents = True
    End If
lastrow = Empty
End Sub

Private Sub Worksheet_Change(ByVal Target As Range)
    Const kOverCol = 27

    Dim rCell As Range

    On Error Resume Next

    If cbSave.Value = True And Target.Column < kOverCol Then
        With Application: .EnableEvents = False: .Calculation = xlCalculationManual: End With
        Call OYprojUnprotect
        For Each rCell In Target
            If rCell.Value <> "" Then
                If Not (InStr(1, Me.Cells(rCell.Row, kOverCol).Value, VBA.Format(rCell.Column, "000")) > 0) Then _
                    Me.Cells(rCell.Row, kOverCol).Value = Me.Cells(rCell.Row, kOverCol).Value & VBA.Format(rCell.Column, "000") & ","
                rCell.Interior.ColorIndex = 6
            Else
                Me.Cells(rCell.Row, kOverCol).Value = _
                    Replace(Me.Cells(rCell.Row, kOverCol).Value, VBA.Format(rCell.Column, "000") & ",", "")
                rCell.Interior.ColorIndex = xlColorIndexNone
            End If
        Next rCell
        Call OYprojProtect
        
        With Application: .Calculation = xlCalculationAutomatic: .EnableEvents = True: End With
    End If

End Sub





Attribute VB_Name = "sh_OYact_bud"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Option Explicit

Attribute VB_Name = "sh_OYv2Data"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Option Explicit

Attribute VB_Name = "sh_PRP"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Option Explicit

Attribute VB_Name = "sh_PkgLayout"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Option Explicit



Attribute VB_Name = "sh_Projection"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Option Explicit

Attribute VB_Name = "sh_RPO"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Option Explicit

Attribute VB_Name = "sh_SEG10LY"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Option Explicit

Attribute VB_Name = "sh_SSP_CompShop"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Option Explicit
Private Sub Worksheet_Activate()
    ActiveSheet.ScrollArea = "$A$1:$X$52"
End Sub
Attribute VB_Name = "sh_SSP_CompShop2"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Option Explicit
Private Sub Worksheet_Activate()
    ActiveSheet.ScrollArea = "$A$1:$X$52"
End Sub
Attribute VB_Name = "sh_SSP_CompShop3"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Option Explicit
Private Sub Worksheet_Activate()
    ActiveSheet.ScrollArea = "$A$1:$X$52"
End Sub
Attribute VB_Name = "sh_SSP_STRComp"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Option Explicit
Private Sub Worksheet_Activate()
    ActiveSheet.ScrollArea = "$A$1:$AG$60"
End Sub
Attribute VB_Name = "sh_SSP_STRCompWk"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Option Explicit

Private Sub Worksheet_Activate()
    ActiveSheet.ScrollArea = "$A$1:$AL$65"
End Sub
Attribute VB_Name = "sh_SSP_STRWk_SegGlance"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Option Explicit

Private Sub Worksheet_Activate()
    ActiveSheet.ScrollArea = "$A$1:$U$40"
End Sub
Attribute VB_Name = "sh_SSP_STR_Combo_28Days"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Option Explicit

Private Sub Worksheet_Activate()
    ActiveSheet.ScrollArea = "$A$1:$AB$72"
End Sub
Attribute VB_Name = "sh_SSP_STR_Combo_Wk"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Option Explicit

Private Sub Worksheet_Activate()
    ActiveSheet.ScrollArea = "$A$1:$AB$72"
End Sub


Attribute VB_Name = "sh_SSP_STRdow"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Option Explicit

Private Sub Worksheet_Activate()
    ActiveSheet.ScrollArea = "$A$1:$V$80"
End Sub
Attribute VB_Name = "sh_SSP_STRmkgD"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Option Explicit

Private Sub Worksheet_Activate()
    ActiveSheet.ScrollArea = "$A$1:$AG$50"
End Sub
Attribute VB_Name = "sh_SSP_STRmkgMth"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Option Explicit

Private Sub Worksheet_Activate()

On Error Resume Next
    Call UnprotectMe
    
    With ActiveSheet.Shapes.Range(Array("PIC_MKG1", "PIC_MKG2", "PIC_MKG3"))
        .Height = 540
        .Width = 720
    End With
    
    ActiveSheet.Protect "unlockME", DrawingObjects:=True, Contents:=True, Scenarios:=False, AllowFormattingCells:=True, AllowFormattingRows:=False, AllowFormattingColumns:=False, UserInterfaceOnly:=True
    ActiveSheet.EnableSelection = xlUnlockedCells
On Error GoTo 0

    ActiveSheet.ScrollArea = "$A$1:$AB$150"
End Sub


Attribute VB_Name = "sh_SSP_STRmth"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Option Explicit

Attribute VB_Name = "sh_SSP_STRmthWebsite"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Option Explicit

Private Sub Worksheet_Activate()
    ActiveSheet.ScrollArea = "$A$1:$AK$45"
End Sub
Attribute VB_Name = "sh_SSP_STRwk"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Option Explicit

Private Sub Worksheet_Activate()
    ActiveSheet.ScrollArea = "$A$1:$AB$42"
End Sub
Attribute VB_Name = "sh_SnapshotData"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Option Explicit

Attribute VB_Name = "ufrmDeleteTab"
Attribute VB_Base = "0{0DCE030A-5C4B-4BC7-BF1A-BDCF26675DE1}{7E668D80-1057-4C89-8B2B-7AFF0A87E16D}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Option Explicit

Private Sub UserForm_Initialize()
Dim ws As Worksheet

For Each ws In Worksheets
    Select Case VBA.Left(ws.CodeName, 3)
        Case "ws_", "sh_", "wsC"
        Case Else
            Me.lbDeleteTab.AddItem ws.Name
            Me.lbDeleteTab.Selected(Me.lbDeleteTab.ListCount - 1) = False
    End Select
Next

If Me.lbDeleteTab.ListCount - 1 < 0 Then
    MsgBox "There are currently no added tabs to delete.", vbInformation, "No Added Tabs"
    End
End If
Set ws = Nothing

End Sub
Private Sub ImgDelete_Click()
Dim MyItem As Long

With Application: .EnableEvents = False: .DisplayAlerts = False: End With
On Error Resume Next
    For MyItem = Me.lbDeleteTab.ListCount - 1 To 0 Step -1
        If Me.lbDeleteTab.Selected(MyItem) = True Then Worksheets(Me.lbDeleteTab.List(MyItem)).Delete
    Next MyItem
    
    MyItem = Empty
    Unload Me
On Error GoTo 0
ws_Setup.Activate
With Application: .EnableEvents = True: .DisplayAlerts = True: End With
End Sub
Private Sub ImgClose_Click()
    Unload Me
End Sub
Attribute VB_Name = "ufrmPacket"
Attribute VB_Base = "0{797B680C-6A9E-4A5E-8949-0D599546CAA2}{63ECE603-E14F-4CA6-B96E-4BB70DE8BAB4}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False

Option Explicit





Private Sub UserForm_Initialize()
    
    'show or hide this button, this is to prevent confusion with hotels with MKG or STR website.
    'button will be visible only if the month end STR is imported. Button hidden by default.
    If sh_SSP_STRmth.Range("B1").Value > vbNullString Then Me.cmb_STRSnapMth.Visible = True
    
    Me.cmb_Sum1FW.Caption = VBA.Format(ws_Summary.Range("C6"), "MMMM-YYYY")
    Me.cmb_Sum1WD.Visible = Not (ws_Summary.Rows("20:20").Hidden)
    Me.cmb_Sum1WE.Visible = Not (ws_Summary.Rows("20:20").Hidden)
    
    Me.cmb_Sum2FW.Caption = VBA.Format(ws_Summary.Range("C48"), "MMMM-YYYY")
    Me.cmb_Sum2WD.Visible = Not (ws_Summary.Rows("62:62").Hidden)
    Me.cmb_Sum2WE.Visible = Not (ws_Summary.Rows("62:62").Hidden)
    
    Me.cmb_Sum3FW.Caption = VBA.Format(ws_Summary.Range("C90"), "MMMM-YYYY")
    Me.cmb_Sum3WD.Visible = Not (ws_Summary.Rows("104:104").Hidden)
    Me.cmb_Sum3WE.Visible = Not (ws_Summary.Rows("104:104").Hidden)

    Me.cmb_Sum4FW.Caption = VBA.Format(ws_Summary.Range("C132"), "MMMM-YYYY")
    Me.cmb_Sum4WD.Visible = Not (ws_Summary.Rows("146:146").Hidden)
    Me.cmb_Sum4WE.Visible = Not (ws_Summary.Rows("146:146").Hidden)

    Me.cmb_Sum5FW.Caption = VBA.Format(ws_Summary.Range("C174"), "MMMM-YYYY")
    Me.cmb_Sum5WD.Visible = Not (ws_Summary.Rows("188:188").Hidden)
    Me.cmb_Sum5WE.Visible = Not (ws_Summary.Rows("188:188").Hidden)

    Me.cmb_Sum6FW.Caption = VBA.Format(ws_Summary.Range("C216"), "MMMM-YYYY")
    Me.cmb_Sum6WD.Visible = Not (ws_Summary.Rows("230:230").Hidden)
    Me.cmb_Sum6WE.Visible = Not (ws_Summary.Rows("230:230").Hidden)

    Me.lb_DAT1_Partial.Caption = sh_IchartWk.Range("C5")
    Me.lb_DAT1_Mth.Caption = VBA.Left(sh_IchartMth.Range("C5"), 20)
    'Me.Bt_Proj_FW.Value = sh_Projection.Columns("L:S").Hidden 'apply the selection projection full week
    'Me.Bt_Proj_WDWE.Value = Not (Me.Bt_Proj_FW) 'apply the selection projection FW, WD, WE
    Me.cmb_ProjMth1.Caption = sh_Projection.Range("E3")
    Me.cmb_ProjMth2.Caption = sh_Projection.Range("E15")
    Me.cmb_ProjMth3.Caption = sh_Projection.Range("E27")
    Me.cmb_ProjMth4.Caption = sh_Projection.Range("E39")
    Me.cmb_ProjMth5.Caption = sh_Projection.Range("E51")
    Me.cmb_ProjMth6.Caption = sh_Projection.Range("E63")
    Me.cmb_ProjMth7.Caption = sh_Projection.Range("E75")
    Me.cmb_ProjFY.Caption = sh_Projection.Range("E87")

    
End Sub
Private Sub cmb_Sum1FW_Click()
Dim sh As Shape
    For Each sh In ActiveSheet.Shapes
        If sh.Name = "Pic_SUM1FW" Then
            MsgBox "Item already selected", vbInformation, "Item selected"
            Set sh = Nothing
            Exit Sub
        End If
    Next
    ActiveSheet.Unprotect "unlockME"
    
    ws_Summary.Range("C6:O18").CopyPicture
    ActiveSheet.Range("A1").Activate
    ActiveSheet.Pictures.Paste.Select
    Selection.Name = "Pic_SUM1FW"
    Selection.ShapeRange.LockAspectRatio = msoFalse
    Selection.Height = 136.8
    Selection.Width = 547.2
    
    ActiveSheet.Protect "unlockME", DrawingObjects:=False, Contents:=True, Scenarios:=True, AllowFormattingCells:=False, AllowFormattingRows:=False, AllowFormattingColumns:=False
    ActiveSheet.EnableSelection = xlNoRestrictions
    
    Set sh = Nothing

End Sub
Private Sub cmb_Sum1WD_Click()
Dim sh As Shape
    For Each sh In ActiveSheet.Shapes
        If sh.Name = "Pic_SUM1WD" Then
            MsgBox "Item already selected", vbInformation, "Item selected"
            Set sh = Nothing
            Exit Sub
        End If
    Next
    ActiveSheet.Unprotect "unlockME"
    
    ws_Summary.Range("C20:O31").CopyPicture
    ActiveSheet.Range("A1").Activate
    ActiveSheet.Pictures.Paste.Select
    Selection.Name = "Pic_SUM1WD"
    Selection.ShapeRange.LockAspectRatio = msoFalse
    Selection.Height = 136.8
    Selection.Width = 547.2
    
    ActiveSheet.Protect "unlockME", DrawingObjects:=False, Contents:=True, Scenarios:=True, AllowFormattingCells:=False, AllowFormattingRows:=False, AllowFormattingColumns:=False
    ActiveSheet.EnableSelection = xlNoRestrictions
    
    Set sh = Nothing
End Sub
Private Sub cmb_Sum1WE_Click()
Dim sh As Shape
    For Each sh In ActiveSheet.Shapes
        If sh.Name = "Pic_SUM1WE" Then
            MsgBox "Item already selected", vbInformation, "Item selected"
            Set sh = Nothing
            Exit Sub
        End If
    Next
    ActiveSheet.Unprotect "unlockME"
    
    ws_Summary.Range("C33:O44").CopyPicture
    ActiveSheet.Range("A1").Activate
    ActiveSheet.Pictures.Paste.Select
    Selection.Name = "Pic_SUM1WE"
    Selection.ShapeRange.LockAspectRatio = msoFalse
    Selection.Height = 136.8
    Selection.Width = 547.2
    
    ActiveSheet.Protect "unlockME", DrawingObjects:=False, Contents:=True, Scenarios:=True, AllowFormattingCells:=False, AllowFormattingRows:=False, AllowFormattingColumns:=False
    ActiveSheet.EnableSelection = xlNoRestrictions
    
    Set sh = Nothing
End Sub
Private Sub cmb_Sum2FW_Click()
Dim sh As Shape
    For Each sh In ActiveSheet.Shapes
        If sh.Name = "Pic_SUM2FW" Then
            MsgBox "Item already selected", vbInformation, "Item selected"
            Set sh = Nothing
            Exit Sub
        End If
    Next
    ActiveSheet.Unprotect "unlockME"
    
    ws_Summary.Range("C48:O60").CopyPicture
    ActiveSheet.Range("A1").Activate
    ActiveSheet.Pictures.Paste.Select
    Selection.Name = "Pic_SUM2FW"
    Selection.ShapeRange.LockAspectRatio = msoFalse
    Selection.Height = 136.8
    Selection.Width = 547.2
    
    ActiveSheet.Protect "unlockME", DrawingObjects:=False, Contents:=True, Scenarios:=True, AllowFormattingCells:=False, AllowFormattingRows:=False, AllowFormattingColumns:=False
    ActiveSheet.EnableSelection = xlNoRestrictions
    
    Set sh = Nothing

End Sub
Private Sub cmb_Sum2WD_Click()
Dim sh As Shape
    For Each sh In ActiveSheet.Shapes
        If sh.Name = "Pic_SUM2WD" Then
            MsgBox "Item already selected", vbInformation, "Item selected"
            Set sh = Nothing
            Exit Sub
        End If
    Next
    ActiveSheet.Unprotect "unlockME"
    
    ws_Summary.Range("C62:O73").CopyPicture
    ActiveSheet.Range("A1").Activate
    ActiveSheet.Pictures.Paste.Select
    Selection.Name = "Pic_SUM2WD"
    Selection.ShapeRange.LockAspectRatio = msoFalse
    Selection.Height = 136.8
    Selection.Width = 547.2
    
    ActiveSheet.Protect "unlockME", DrawingObjects:=False, Contents:=True, Scenarios:=True, AllowFormattingCells:=False, AllowFormattingRows:=False, AllowFormattingColumns:=False
    ActiveSheet.EnableSelection = xlNoRestrictions
    
    Set sh = Nothing

End Sub
Private Sub cmb_Sum2WE_Click()
Dim sh As Shape
    For Each sh In ActiveSheet.Shapes
        If sh.Name = "Pic_SUM2WE" Then
            MsgBox "Item already selected", vbInformation, "Item selected"
            Set sh = Nothing
            Exit Sub
        End If
    Next
    ActiveSheet.Unprotect "unlockME"
    
    ws_Summary.Range("C75:O86").CopyPicture
    ActiveSheet.Range("A1").Activate
    ActiveSheet.Pictures.Paste.Select
    Selection.Name = "Pic_SUM2WE"
    Selection.ShapeRange.LockAspectRatio = msoFalse
    Selection.Height = 136.8
    Selection.Width = 547.2
    
    ActiveSheet.Protect "unlockME", DrawingObjects:=False, Contents:=True, Scenarios:=True, AllowFormattingCells:=False, AllowFormattingRows:=False, AllowFormattingColumns:=False
    ActiveSheet.EnableSelection = xlNoRestrictions
    
    Set sh = Nothing

End Sub
Private Sub cmb_Sum3FW_Click()
Dim sh As Shape
    For Each sh In ActiveSheet.Shapes
        If sh.Name = "Pic_SUM3FW" Then
            MsgBox "Item already selected", vbInformation, "Item selected"
            Set sh = Nothing
            Exit Sub
        End If
    Next
    ActiveSheet.Unprotect "unlockME"
    
    ws_Summary.Range("C90:O102").CopyPicture
    ActiveSheet.Range("A1").Activate
    ActiveSheet.Pictures.Paste.Select
    Selection.Name = "Pic_SUM3FW"
    Selection.ShapeRange.LockAspectRatio = msoFalse
    Selection.Height = 136.8
    Selection.Width = 547.2
    
    ActiveSheet.Protect "unlockME", DrawingObjects:=False, Contents:=True, Scenarios:=True, AllowFormattingCells:=False, AllowFormattingRows:=False, AllowFormattingColumns:=False
    ActiveSheet.EnableSelection = xlNoRestrictions
    
    Set sh = Nothing

End Sub
Private Sub cmb_Sum3WD_Click()
Dim sh As Shape
    For Each sh In ActiveSheet.Shapes
        If sh.Name = "Pic_SUM3WD" Then
            MsgBox "Item already selected", vbInformation, "Item selected"
            Set sh = Nothing
            Exit Sub
        End If
    Next
    ActiveSheet.Unprotect "unlockME"
    
    ws_Summary.Range("C104:O115").CopyPicture
    ActiveSheet.Range("A1").Activate
    ActiveSheet.Pictures.Paste.Select
    Selection.Name = "Pic_SUM3WD"
    Selection.ShapeRange.LockAspectRatio = msoFalse
    Selection.Height = 136.8
    Selection.Width = 547.2
    
    ActiveSheet.Protect "unlockME", DrawingObjects:=False, Contents:=True, Scenarios:=True, AllowFormattingCells:=False, AllowFormattingRows:=False, AllowFormattingColumns:=False
    ActiveSheet.EnableSelection = xlNoRestrictions
    
    Set sh = Nothing

End Sub
Private Sub cmb_Sum3WE_Click()
Dim sh As Shape
    For Each sh In ActiveSheet.Shapes
        If sh.Name = "Pic_SUM3WE" Then
            MsgBox "Item already selected", vbInformation, "Item selected"
            Set sh = Nothing
            Exit Sub
        End If
    Next
    ActiveSheet.Unprotect "unlockME"
    
    ws_Summary.Range("C117:O128").CopyPicture
    ActiveSheet.Range("A1").Activate
    ActiveSheet.Pictures.Paste.Select
    Selection.Name = "Pic_SUM3WE"
    Selection.ShapeRange.LockAspectRatio = msoFalse
    Selection.Height = 136.8
    Selection.Width = 547.2
    
    ActiveSheet.Protect "unlockME", DrawingObjects:=False, Contents:=True, Scenarios:=True, AllowFormattingCells:=False, AllowFormattingRows:=False, AllowFormattingColumns:=False
    ActiveSheet.EnableSelection = xlNoRestrictions
    
    Set sh = Nothing

End Sub
Private Sub cmb_Sum4FW_Click()
Dim sh As Shape
    For Each sh In ActiveSheet.Shapes
        If sh.Name = "Pic_SUM4FW" Then
            MsgBox "Item already selected", vbInformation, "Item selected"
            Set sh = Nothing
            Exit Sub
        End If
    Next
    ActiveSheet.Unprotect "unlockME"
    
    ws_Summary.Range("C132:O144").CopyPicture
    ActiveSheet.Range("A1").Activate
    ActiveSheet.Pictures.Paste.Select
    Selection.Name = "Pic_SUM4FW"
    Selection.ShapeRange.LockAspectRatio = msoFalse
    Selection.Height = 136.8
    Selection.Width = 547.2
    
    ActiveSheet.Protect "unlockME", DrawingObjects:=False, Contents:=True, Scenarios:=True, AllowFormattingCells:=False, AllowFormattingRows:=False, AllowFormattingColumns:=False
    ActiveSheet.EnableSelection = xlNoRestrictions
    
    Set sh = Nothing

End Sub
Private Sub cmb_Sum4WD_Click()
Dim sh As Shape
    For Each sh In ActiveSheet.Shapes
        If sh.Name = "Pic_SUM4WD" Then
            MsgBox "Item already selected", vbInformation, "Item selected"
            Set sh = Nothing
            Exit Sub
        End If
    Next
    ActiveSheet.Unprotect "unlockME"
    
    ws_Summary.Range("C146:O157").CopyPicture
    ActiveSheet.Range("A1").Activate
    ActiveSheet.Pictures.Paste.Select
    Selection.Name = "Pic_SUM4WD"
    Selection.ShapeRange.LockAspectRatio = msoFalse
    Selection.Height = 136.8
    Selection.Width = 547.2
    
    ActiveSheet.Protect "unlockME", DrawingObjects:=False, Contents:=True, Scenarios:=True, AllowFormattingCells:=False, AllowFormattingRows:=False, AllowFormattingColumns:=False
    ActiveSheet.EnableSelection = xlNoRestrictions
    
    Set sh = Nothing

End Sub
Private Sub cmb_Sum4WE_Click()
Dim sh As Shape
    For Each sh In ActiveSheet.Shapes
        If sh.Name = "Pic_SUM4WE" Then
            MsgBox "Item already selected", vbInformation, "Item selected"
            Set sh = Nothing
            Exit Sub
        End If
    Next
    ActiveSheet.Unprotect "unlockME"
    
    ws_Summary.Range("C159:O170").CopyPicture
    ActiveSheet.Range("A1").Activate
    ActiveSheet.Pictures.Paste.Select
    Selection.Name = "Pic_SUM4WE"
    Selection.ShapeRange.LockAspectRatio = msoFalse
    Selection.Height = 136.8
    Selection.Width = 547.2
    
    ActiveSheet.Protect "unlockME", DrawingObjects:=False, Contents:=True, Scenarios:=True, AllowFormattingCells:=False, AllowFormattingRows:=False, AllowFormattingColumns:=False
    ActiveSheet.EnableSelection = xlNoRestrictions
    
    Set sh = Nothing

End Sub
Private Sub cmb_Sum5FW_Click()
Dim sh As Shape
    For Each sh In ActiveSheet.Shapes
        If sh.Name = "Pic_SUM5FW" Then
            MsgBox "Item already selected", vbInformation, "Item selected"
            Set sh = Nothing
            Exit Sub
        End If
    Next
    ActiveSheet.Unprotect "unlockME"
    
    ws_Summary.Range("C174:O186").CopyPicture
    ActiveSheet.Range("A1").Activate
    ActiveSheet.Pictures.Paste.Select
    Selection.Name = "Pic_SUM5FW"
    Selection.ShapeRange.LockAspectRatio = msoFalse
    Selection.Height = 136.8
    Selection.Width = 547.2
    
    ActiveSheet.Protect "unlockME", DrawingObjects:=False, Contents:=True, Scenarios:=True, AllowFormattingCells:=False, AllowFormattingRows:=False, AllowFormattingColumns:=False
    ActiveSheet.EnableSelection = xlNoRestrictions
    
    Set sh = Nothing

End Sub
Private Sub cmb_Sum5WD_Click()
Dim sh As Shape
    For Each sh In ActiveSheet.Shapes
        If sh.Name = "Pic_SUM5WD" Then
            MsgBox "Item already selected", vbInformation, "Item selected"
            Set sh = Nothing
            Exit Sub
        End If
    Next
    ActiveSheet.Unprotect "unlockME"
    
    ws_Summary.Range("C188:O199").CopyPicture
    ActiveSheet.Range("A1").Activate
    ActiveSheet.Pictures.Paste.Select
    Selection.Name = "Pic_SUM5WD"
    Selection.ShapeRange.LockAspectRatio = msoFalse
    Selection.Height = 136.8
    Selection.Width = 547.2
    
    ActiveSheet.Protect "unlockME", DrawingObjects:=False, Contents:=True, Scenarios:=True, AllowFormattingCells:=False, AllowFormattingRows:=False, AllowFormattingColumns:=False
    ActiveSheet.EnableSelection = xlNoRestrictions
    
    Set sh = Nothing

End Sub
Private Sub cmb_Sum5WE_Click()
Dim sh As Shape
    For Each sh In ActiveSheet.Shapes
        If sh.Name = "Pic_SUM5WE" Then
            MsgBox "Item already selected", vbInformation, "Item selected"
            Set sh = Nothing
            Exit Sub
        End If
    Next
    ActiveSheet.Unprotect "unlockME"
    
    ws_Summary.Range("C201:O212").CopyPicture
    ActiveSheet.Range("A1").Activate
    ActiveSheet.Pictures.Paste.Select
    Selection.Name = "Pic_SUM5WE"
    Selection.ShapeRange.LockAspectRatio = msoFalse
    Selection.Height = 136.8
    Selection.Width = 547.2
    
    ActiveSheet.Protect "unlockME", DrawingObjects:=False, Contents:=True, Scenarios:=True, AllowFormattingCells:=False, AllowFormattingRows:=False, AllowFormattingColumns:=False
    ActiveSheet.EnableSelection = xlNoRestrictions
    
    Set sh = Nothing

End Sub
Private Sub cmb_Sum6FW_Click()
Dim sh As Shape
    For Each sh In ActiveSheet.Shapes
        If sh.Name = "Pic_SUM6FW" Then
            MsgBox "Item already selected", vbInformation, "Item selected"
            Set sh = Nothing
            Exit Sub
        End If
    Next
    ActiveSheet.Unprotect "unlockME"
    
    ws_Summary.Range("C216:O228").CopyPicture
    ActiveSheet.Range("A1").Activate
    ActiveSheet.Pictures.Paste.Select
    Selection.Name = "Pic_SUM6FW"
    Selection.ShapeRange.LockAspectRatio = msoFalse
    Selection.Height = 136.8
    Selection.Width = 547.2
    
    ActiveSheet.Protect "unlockME", DrawingObjects:=False, Contents:=True, Scenarios:=True, AllowFormattingCells:=False, AllowFormattingRows:=False, AllowFormattingColumns:=False
    ActiveSheet.EnableSelection = xlNoRestrictions
    
    Set sh = Nothing

End Sub
Private Sub cmb_Sum6WD_Click()
Dim sh As Shape
    For Each sh In ActiveSheet.Shapes
        If sh.Name = "Pic_SUM6WD" Then
            MsgBox "Item already selected", vbInformation, "Item selected"
            Set sh = Nothing
            Exit Sub
        End If
    Next
    ActiveSheet.Unprotect "unlockME"
    
    ws_Summary.Range("C230:O241").CopyPicture
    ActiveSheet.Range("A1").Activate
    ActiveSheet.Pictures.Paste.Select
    Selection.Name = "Pic_SUM6WD"
    Selection.ShapeRange.LockAspectRatio = msoFalse
    Selection.Height = 136.8
    Selection.Width = 547.2
    
    ActiveSheet.Protect "unlockME", DrawingObjects:=False, Contents:=True, Scenarios:=True, AllowFormattingCells:=False, AllowFormattingRows:=False, AllowFormattingColumns:=False
    ActiveSheet.EnableSelection = xlNoRestrictions
    
    Set sh = Nothing

End Sub
Private Sub cmb_Sum6WE_Click()
Dim sh As Shape
    For Each sh In ActiveSheet.Shapes
        If sh.Name = "Pic_SUM6WE" Then
            MsgBox "Item already selected", vbInformation, "Item selected"
            Set sh = Nothing
            Exit Sub
        End If
    Next
    ActiveSheet.Unprotect "unlockME"
    
    ws_Summary.Range("C243:O254").CopyPicture
    ActiveSheet.Range("A1").Activate
    ActiveSheet.Pictures.Paste.Select
    Selection.Name = "Pic_SUM6WE"
    Selection.ShapeRange.LockAspectRatio = msoFalse
    Selection.Height = 136.8
    Selection.Width = 547.2
    
    ActiveSheet.Protect "unlockME", DrawingObjects:=False, Contents:=True, Scenarios:=True, AllowFormattingCells:=False, AllowFormattingRows:=False, AllowFormattingColumns:=False
    ActiveSheet.EnableSelection = xlNoRestrictions
    
    Set sh = Nothing

End Sub

Private Sub cmb_STRSnap_Click()
Dim sh As Shape
    For Each sh In ActiveSheet.Shapes
        If sh.Name = "Pic_STRSnap" Then
            MsgBox "Item already selected", vbInformation, "Item selected"
            Set sh = Nothing
            Exit Sub
        End If
    Next
    ActiveSheet.Unprotect "unlockME"
    
    sh_SnapshotData.Range("STRSnap").CopyPicture
    ActiveSheet.Range("A1").Activate
    ActiveSheet.Pictures.Paste.Select
    Selection.Name = "Pic_STRSnap"
    Selection.ShapeRange.LockAspectRatio = msoFalse
    
    ActiveSheet.Protect "unlockME", DrawingObjects:=False, Contents:=True, Scenarios:=True, AllowFormattingCells:=False, AllowFormattingRows:=False, AllowFormattingColumns:=False
    ActiveSheet.EnableSelection = xlNoRestrictions
    
    Set sh = Nothing

End Sub
Private Sub cmb_STRSnapMth_Click()
Dim sh As Shape
    For Each sh In ActiveSheet.Shapes
        If sh.Name = "Pic_STRSnapMth" Then
            MsgBox "Item already selected", vbInformation, "Item selected"
            Set sh = Nothing
            Exit Sub
        End If
    Next
    ActiveSheet.Unprotect "unlockME"
    
    sh_SnapshotData.Range("STRSnapMth").CopyPicture
    ActiveSheet.Range("A1").Activate
    ActiveSheet.Pictures.Paste.Select
    Selection.Name = "Pic_STRSnapMth"
    Selection.ShapeRange.LockAspectRatio = msoFalse
    
    ActiveSheet.Protect "unlockME", DrawingObjects:=False, Contents:=True, Scenarios:=True, AllowFormattingCells:=False, AllowFormattingRows:=False, AllowFormattingColumns:=False
    ActiveSheet.EnableSelection = xlNoRestrictions
    
    Set sh = Nothing

End Sub
Private Sub cmb_RPO90day_Click()
Dim sh As Shape
    For Each sh In ActiveSheet.Shapes
        If sh.Name = "Pic_RPO90d" Then
            MsgBox "Item already selected", vbInformation, "Item selected"
            Set sh = Nothing
            Exit Sub
        End If
    Next
    ActiveSheet.Unprotect "unlockME"
    
    sh_SnapshotData.Range("RPO90d").CopyPicture
    ActiveSheet.Range("A1").Activate
    ActiveSheet.Pictures.Paste.Select
    Selection.Name = "Pic_RPO90d"
    Selection.ShapeRange.LockAspectRatio = msoFalse
    
    ActiveSheet.Protect "unlockME", DrawingObjects:=False, Contents:=True, Scenarios:=True, AllowFormattingCells:=False, AllowFormattingRows:=False, AllowFormattingColumns:=False
    ActiveSheet.EnableSelection = xlNoRestrictions
    
    Set sh = Nothing
End Sub
Private Sub cmb_ProjMth1_Click()
Dim sh As Shape
    For Each sh In ActiveSheet.Shapes
        If sh.Name = "Pic_Proj1" Then
            MsgBox "Item already selected", vbInformation, "Item selected"
            Set sh = Nothing
            Exit Sub
        End If
    Next
    ActiveSheet.Unprotect "unlockME"
    
    sh_Projection.Range("Proj1FW").CopyPicture
    ActiveSheet.Range("A1").Activate
    ActiveSheet.Pictures.Paste.Select
    Selection.Name = "Pic_Proj1"
    Selection.ShapeRange.LockAspectRatio = msoFalse
    Selection.Height = 108
    Selection.Width = 362.88
    
    ActiveSheet.Protect "unlockME", DrawingObjects:=False, Contents:=True, Scenarios:=True, AllowFormattingCells:=False, AllowFormattingRows:=False, AllowFormattingColumns:=False
    ActiveSheet.EnableSelection = xlNoRestrictions
    
    Set sh = Nothing
End Sub
Private Sub cmb_ProjMth1All_Click()
Dim sh As Shape
    For Each sh In ActiveSheet.Shapes
        If sh.Name = "Pic_Proj1All" Then
            MsgBox "Item already selected", vbInformation, "Item selected"
            Set sh = Nothing
            Exit Sub
        End If
    Next
    ActiveSheet.Unprotect "unlockME"
    
    sh_Projection.Range("Proj1").CopyPicture
    ActiveSheet.Range("A1").Activate
    ActiveSheet.Pictures.Paste.Select
    Selection.Name = "Pic_Proj1All"
    Selection.ShapeRange.LockAspectRatio = msoFalse
    Selection.Height = 108
    Selection.Width = 720
  
    ActiveSheet.Protect "unlockME", DrawingObjects:=False, Contents:=True, Scenarios:=True, AllowFormattingCells:=False, AllowFormattingRows:=False, AllowFormattingColumns:=False
    ActiveSheet.EnableSelection = xlNoRestrictions
    
    Set sh = Nothing
End Sub
Private Sub cmb_ProjMth2_Click()
Dim sh As Shape
    For Each sh In ActiveSheet.Shapes
        If sh.Name = "Pic_Proj2" Then
            MsgBox "Item already selected", vbInformation, "Item selected"
            Set sh = Nothing
            Exit Sub
        End If
    Next
    ActiveSheet.Unprotect "unlockME"
    
    sh_Projection.Range("Proj2FW").CopyPicture
    ActiveSheet.Range("A1").Activate
    ActiveSheet.Pictures.Paste.Select
    Selection.Name = "Pic_Proj2"
    Selection.ShapeRange.LockAspectRatio = msoFalse
    Selection.Height = 108
    Selection.Width = 362.88

    ActiveSheet.Protect "unlockME", DrawingObjects:=False, Contents:=True, Scenarios:=True, AllowFormattingCells:=False, AllowFormattingRows:=False, AllowFormattingColumns:=False
    ActiveSheet.EnableSelection = xlNoRestrictions

    Set sh = Nothing
End Sub
Private Sub cmb_ProjMth2All_Click()
Dim sh As Shape
    For Each sh In ActiveSheet.Shapes
        If sh.Name = "Pic_Proj2All" Then
            MsgBox "Item already selected", vbInformation, "Item selected"
            Set sh = Nothing
            Exit Sub
        End If
    Next
    ActiveSheet.Unprotect "unlockME"
    
    sh_Projection.Range("Proj2").CopyPicture
    ActiveSheet.Range("A1").Activate
    ActiveSheet.Pictures.Paste.Select
    Selection.Name = "Pic_Proj2All"
    Selection.ShapeRange.LockAspectRatio = msoFalse
    Selection.Height = 108
    Selection.Width = 720

    ActiveSheet.Protect "unlockME", DrawingObjects:=False, Contents:=True, Scenarios:=True, AllowFormattingCells:=False, AllowFormattingRows:=False, AllowFormattingColumns:=False
    ActiveSheet.EnableSelection = xlNoRestrictions

    Set sh = Nothing
End Sub
Private Sub cmb_ProjMth3_Click()
Dim sh As Shape
    For Each sh In ActiveSheet.Shapes
        If sh.Name = "Pic_Proj3" Then
            MsgBox "Item already selected", vbInformation, "Item selected"
            Set sh = Nothing
            Exit Sub
        End If
    Next
    ActiveSheet.Unprotect "unlockME"
    
    sh_Projection.Range("Proj3FW").CopyPicture
    ActiveSheet.Range("A1").Activate
    ActiveSheet.Pictures.Paste.Select
    Selection.Name = "Pic_Proj3"
    Selection.ShapeRange.LockAspectRatio = msoFalse
    Selection.Height = 108
    Selection.Width = 362.88

    ActiveSheet.Protect "unlockME", DrawingObjects:=False, Contents:=True, Scenarios:=True, AllowFormattingCells:=False, AllowFormattingRows:=False, AllowFormattingColumns:=False
    ActiveSheet.EnableSelection = xlNoRestrictions

    Set sh = Nothing
End Sub
Private Sub cmb_ProjMth3All_Click()
Dim sh As Shape
    For Each sh In ActiveSheet.Shapes
        If sh.Name = "Pic_Proj3All" Then
            MsgBox "Item already selected", vbInformation, "Item selected"
            Set sh = Nothing
            Exit Sub
        End If
    Next
    ActiveSheet.Unprotect "unlockME"
    
    sh_Projection.Range("Proj3").CopyPicture
    ActiveSheet.Range("A1").Activate
    ActiveSheet.Pictures.Paste.Select
    Selection.Name = "Pic_Proj3All"
    Selection.ShapeRange.LockAspectRatio = msoFalse
    Selection.Height = 108
    Selection.Width = 720

    ActiveSheet.Protect "unlockME", DrawingObjects:=False, Contents:=True, Scenarios:=True, AllowFormattingCells:=False, AllowFormattingRows:=False, AllowFormattingColumns:=False
    ActiveSheet.EnableSelection = xlNoRestrictions

    Set sh = Nothing
End Sub

Private Sub cmb_ProjMth4_Click()
Dim sh As Shape
    For Each sh In ActiveSheet.Shapes
        If sh.Name = "Pic_Proj4" Then
            MsgBox "Item already selected", vbInformation, "Item selected"
            Set sh = Nothing
            Exit Sub
        End If
    Next
    ActiveSheet.Unprotect "unlockME"
    
    sh_Projection.Range("Proj4FW").CopyPicture
    ActiveSheet.Range("A1").Activate
    ActiveSheet.Pictures.Paste.Select
    Selection.Name = "Pic_Proj4"
    Selection.ShapeRange.LockAspectRatio = msoFalse
    Selection.Height = 108
    Selection.Width = 362.88

    ActiveSheet.Protect "unlockME", DrawingObjects:=False, Contents:=True, Scenarios:=True, AllowFormattingCells:=False, AllowFormattingRows:=False, AllowFormattingColumns:=False
    ActiveSheet.EnableSelection = xlNoRestrictions

    Set sh = Nothing
End Sub
Private Sub cmb_ProjMth4All_Click()
Dim sh As Shape
    For Each sh In ActiveSheet.Shapes
        If sh.Name = "Pic_Proj4All" Then
            MsgBox "Item already selected", vbInformation, "Item selected"
            Set sh = Nothing
            Exit Sub
        End If
    Next
    ActiveSheet.Unprotect "unlockME"
    
    sh_Projection.Range("Proj4").CopyPicture
    ActiveSheet.Range("A1").Activate
    ActiveSheet.Pictures.Paste.Select
    Selection.Name = "Pic_Proj4All"
    Selection.ShapeRange.LockAspectRatio = msoFalse
    Selection.Height = 108
    Selection.Width = 720

    ActiveSheet.Protect "unlockME", DrawingObjects:=False, Contents:=True, Scenarios:=True, AllowFormattingCells:=False, AllowFormattingRows:=False, AllowFormattingColumns:=False
    ActiveSheet.EnableSelection = xlNoRestrictions

    Set sh = Nothing
End Sub
Private Sub cmb_ProjMth5_Click()
Dim sh As Shape
    For Each sh In ActiveSheet.Shapes
        If sh.Name = "Pic_Proj5" Then
            MsgBox "Item already selected", vbInformation, "Item selected"
            Set sh = Nothing
            Exit Sub
        End If
    Next
    ActiveSheet.Unprotect "unlockME"
    
    sh_Projection.Range("Proj5FW").CopyPicture
    ActiveSheet.Range("A1").Activate
    ActiveSheet.Pictures.Paste.Select
    Selection.Name = "Pic_Proj5"
    Selection.ShapeRange.LockAspectRatio = msoFalse
    Selection.Height = 108
    Selection.Width = 362.88

    ActiveSheet.Protect "unlockME", DrawingObjects:=False, Contents:=True, Scenarios:=True, AllowFormattingCells:=False, AllowFormattingRows:=False, AllowFormattingColumns:=False
    ActiveSheet.EnableSelection = xlNoRestrictions

    Set sh = Nothing
End Sub
Private Sub cmb_ProjMth5All_Click()
Dim sh As Shape
    For Each sh In ActiveSheet.Shapes
        If sh.Name = "Pic_Proj5All" Then
            MsgBox "Item already selected", vbInformation, "Item selected"
            Set sh = Nothing
            Exit Sub
        End If
    Next
    ActiveSheet.Unprotect "unlockME"
    
    sh_Projection.Range("Proj5").CopyPicture
    ActiveSheet.Range("A1").Activate
    ActiveSheet.Pictures.Paste.Select
    Selection.Name = "Pic_Proj5All"
    Selection.ShapeRange.LockAspectRatio = msoFalse
    Selection.Height = 108
    Selection.Width = 720

    ActiveSheet.Protect "unlockME", DrawingObjects:=False, Contents:=True, Scenarios:=True, AllowFormattingCells:=False, AllowFormattingRows:=False, AllowFormattingColumns:=False
    ActiveSheet.EnableSelection = xlNoRestrictions

    Set sh = Nothing
End Sub
Private Sub cmb_ProjMth6_Click()
Dim sh As Shape
    For Each sh In ActiveSheet.Shapes
        If sh.Name = "Pic_Proj6" Then
            MsgBox "Item already selected", vbInformation, "Item selected"
            Set sh = Nothing
            Exit Sub
        End If
    Next
    ActiveSheet.Unprotect "unlockME"
    
    sh_Projection.Range("Proj6FW").CopyPicture
    ActiveSheet.Range("A1").Activate
    ActiveSheet.Pictures.Paste.Select
    Selection.Name = "Pic_Proj6"
    Selection.ShapeRange.LockAspectRatio = msoFalse
    Selection.Height = 108
    Selection.Width = 362.88

    ActiveSheet.Protect "unlockME", DrawingObjects:=False, Contents:=True, Scenarios:=True, AllowFormattingCells:=False, AllowFormattingRows:=False, AllowFormattingColumns:=False
    ActiveSheet.EnableSelection = xlNoRestrictions

    Set sh = Nothing
End Sub
Private Sub cmb_ProjMth6All_Click()
Dim sh As Shape
    For Each sh In ActiveSheet.Shapes
        If sh.Name = "Pic_Proj6All" Then
            MsgBox "Item already selected", vbInformation, "Item selected"
            Set sh = Nothing
            Exit Sub
        End If
    Next
    ActiveSheet.Unprotect "unlockME"
    
    sh_Projection.Range("Proj6").CopyPicture
    ActiveSheet.Range("A1").Activate
    ActiveSheet.Pictures.Paste.Select
    Selection.Name = "Pic_Proj6All"
    Selection.ShapeRange.LockAspectRatio = msoFalse
    Selection.Height = 108
    Selection.Width = 720

    ActiveSheet.Protect "unlockME", DrawingObjects:=False, Contents:=True, Scenarios:=True, AllowFormattingCells:=False, AllowFormattingRows:=False, AllowFormattingColumns:=False
    ActiveSheet.EnableSelection = xlNoRestrictions

    Set sh = Nothing
End Sub
Private Sub cmb_ProjMth7_Click()
Dim sh As Shape
    For Each sh In ActiveSheet.Shapes
        If sh.Name = "Pic_Proj7" Then
            MsgBox "Item already selected", vbInformation, "Item selected"
            Set sh = Nothing
            Exit Sub
        End If
    Next
    ActiveSheet.Unprotect "unlockME"
    
    sh_Projection.Range("Proj7FW").CopyPicture
    ActiveSheet.Range("A1").Activate
    ActiveSheet.Pictures.Paste.Select
    Selection.Name = "Pic_Proj7"
    Selection.ShapeRange.LockAspectRatio = msoFalse
    Selection.Height = 108
    Selection.Width = 362.88
            
    ActiveSheet.Protect "unlockME", DrawingObjects:=False, Contents:=True, Scenarios:=True, AllowFormattingCells:=False, AllowFormattingRows:=False, AllowFormattingColumns:=False
    ActiveSheet.EnableSelection = xlNoRestrictions

    Set sh = Nothing
End Sub
Private Sub cmb_ProjMth7All_Click()
Dim sh As Shape
    For Each sh In ActiveSheet.Shapes
        If sh.Name = "Pic_Proj7All" Then
            MsgBox "Item already selected", vbInformation, "Item selected"
            Set sh = Nothing
            Exit Sub
        End If
    Next
    ActiveSheet.Unprotect "unlockME"
    
    sh_Projection.Range("Proj7").CopyPicture
    ActiveSheet.Range("A1").Activate
    ActiveSheet.Pictures.Paste.Select
    Selection.Name = "Pic_Proj7All"
    Selection.ShapeRange.LockAspectRatio = msoFalse
    Selection.Height = 108
    Selection.Width = 720

    ActiveSheet.Protect "unlockME", DrawingObjects:=False, Contents:=True, Scenarios:=True, AllowFormattingCells:=False, AllowFormattingRows:=False, AllowFormattingColumns:=False
    ActiveSheet.EnableSelection = xlNoRestrictions

    Set sh = Nothing
End Sub
Private Sub cmb_ProjFY_Click()
Dim sh As Shape
    For Each sh In ActiveSheet.Shapes
        If sh.Name = "Pic_ProjFY" Then
            MsgBox "Item already selected", vbInformation, "Item selected"
            Set sh = Nothing
            Exit Sub
        End If
    Next
    ActiveSheet.Unprotect "unlockME"
    
    sh_Projection.Range("ProjFYFW").CopyPicture
    ActiveSheet.Range("A1").Activate
    ActiveSheet.Pictures.Paste.Select
    Selection.Name = "Pic_ProjFY"
    Selection.ShapeRange.LockAspectRatio = msoFalse
    Selection.Height = 108
    Selection.Width = 362.88
    
    ActiveSheet.Protect "unlockME", DrawingObjects:=False, Contents:=True, Scenarios:=True, AllowFormattingCells:=False, AllowFormattingRows:=False, AllowFormattingColumns:=False
    ActiveSheet.EnableSelection = xlNoRestrictions

    Set sh = Nothing
End Sub
Private Sub cmb_ProjFYAll_Click()
Dim sh As Shape
    For Each sh In ActiveSheet.Shapes
        If sh.Name = "Pic_ProjFYAll" Then
            MsgBox "Item already selected", vbInformation, "Item selected"
            Set sh = Nothing
            Exit Sub
        End If
    Next
    ActiveSheet.Unprotect "unlockME"
    
    sh_Projection.Range("ProjFY").CopyPicture
    ActiveSheet.Range("A1").Activate
    ActiveSheet.Pictures.Paste.Select
    Selection.Name = "Pic_ProjFYAll"
    Selection.ShapeRange.LockAspectRatio = msoFalse
    Selection.Height = 108
    Selection.Width = 720
    
    ActiveSheet.Protect "unlockME", DrawingObjects:=False, Contents:=True, Scenarios:=True, AllowFormattingCells:=False, AllowFormattingRows:=False, AllowFormattingColumns:=False
    ActiveSheet.EnableSelection = xlNoRestrictions

    Set sh = Nothing
End Sub

Private Sub cmb_DAT1_FW_Click()
Dim sh As Shape
    For Each sh In ActiveSheet.Shapes
        If sh.Name = "Pic_DEMwkFW" Then
            MsgBox "Item already selected", vbInformation, "Item selected"
            Set sh = Nothing
            Exit Sub
        End If
    Next
    ActiveSheet.Unprotect "unlockME"
    
    sh_IchartWk.Range("DemWK_FW").CopyPicture
    ActiveSheet.Range("A1").Activate
    ActiveSheet.Pictures.Paste.Select
    Selection.Name = "Pic_DEMwkFW"
    Selection.Width = 648
    Selection.ShapeRange.LockAspectRatio = msoFalse
    'Selection.Formula = "=DemWK_FW"
    
    ActiveSheet.Protect "unlockME", DrawingObjects:=False, Contents:=True, Scenarios:=True, AllowFormattingCells:=False, AllowFormattingRows:=False, AllowFormattingColumns:=False
    ActiveSheet.EnableSelection = xlNoRestrictions

    Set sh = Nothing
 
End Sub
Private Sub cmb_DAT1_WD_Click()
Dim sh As Shape
    For Each sh In ActiveSheet.Shapes
        If sh.Name = "Pic_DEMwkWD" Then
            MsgBox "Item already selected", vbInformation, "Item selected"
            Set sh = Nothing
            Exit Sub
        End If
    Next
    ActiveSheet.Unprotect "unlockME"
    
    sh_IchartWk.Range("DemWK_WD").CopyPicture
    ActiveSheet.Range("A1").Activate
    ActiveSheet.Pictures.Paste.Select
    Selection.Name = "Pic_DEMwkWD"
    Selection.Width = 648
    'Selection.Formula = "=DemWK_WD"
    Selection.ShapeRange.LockAspectRatio = msoFalse
    
    ActiveSheet.Protect "unlockME", DrawingObjects:=False, Contents:=True, Scenarios:=True, AllowFormattingCells:=False, AllowFormattingRows:=False, AllowFormattingColumns:=False
    ActiveSheet.EnableSelection = xlNoRestrictions

    Set sh = Nothing

End Sub
Private Sub cmb_DAT1_WE_Click()
Dim sh As Shape
    For Each sh In ActiveSheet.Shapes
        If sh.Name = "Pic_DEMwkWE" Then
            MsgBox "Item already selected", vbInformation, "Item selected"
            Set sh = Nothing
            Exit Sub
        End If
    Next
    ActiveSheet.Unprotect "unlockME"
    
    sh_IchartWk.Range("DemWK_WE").CopyPicture
    ActiveSheet.Range("A1").Activate
    ActiveSheet.Pictures.Paste.Select
    Selection.Name = "Pic_DEMwkWE"
    Selection.Width = 648
    'Selection.Formula = "=DemWK_WE"
    Selection.ShapeRange.LockAspectRatio = msoFalse
    
    ActiveSheet.Protect "unlockME", DrawingObjects:=False, Contents:=True, Scenarios:=True, AllowFormattingCells:=False, AllowFormattingRows:=False, AllowFormattingColumns:=False
    ActiveSheet.EnableSelection = xlNoRestrictions

    Set sh = Nothing

End Sub
Private Sub cmb_DAT1_T1FW_Click()
Dim sh As Shape
    For Each sh In ActiveSheet.Shapes
        If sh.Name = "Pic_DEMwk_T1FW" Then
            MsgBox "Item already selected", vbInformation, "Item selected"
            Set sh = Nothing
            Exit Sub
        End If
    Next
    ActiveSheet.Unprotect "unlockME"
    
    sh_IchartWk.Range("DemWK_FWTier1").CopyPicture
    ActiveSheet.Range("A1").Activate
    ActiveSheet.Pictures.Paste.Select
    Selection.Name = "Pic_DEMwk_T1FW"
    Selection.Width = 648
    'Selection.Formula = "=DemWK_FWTier1"
    Selection.ShapeRange.LockAspectRatio = msoFalse
    
    ActiveSheet.Protect "unlockME", DrawingObjects:=False, Contents:=True, Scenarios:=True, AllowFormattingCells:=False, AllowFormattingRows:=False, AllowFormattingColumns:=False
    ActiveSheet.EnableSelection = xlNoRestrictions

    Set sh = Nothing

End Sub

Private Sub cmb_DAT1_T1WD_Click()
Dim sh As Shape
    For Each sh In ActiveSheet.Shapes
        If sh.Name = "Pic_DEMwk_T1WD" Then
            MsgBox "Item already selected", vbInformation, "Item selected"
            Set sh = Nothing
            Exit Sub
        End If
    Next
    ActiveSheet.Unprotect "unlockME"
    
    sh_IchartWk.Range("DemWK_WDTier1").CopyPicture
    ActiveSheet.Range("A1").Activate
    ActiveSheet.Pictures.Paste.Select
    Selection.Name = "Pic_DEMwk_T1WD"
    Selection.Width = 648
    'Selection.Formula = "=DemWK_WDTier1"
    Selection.ShapeRange.LockAspectRatio = msoFalse
    
    ActiveSheet.Protect "unlockME", DrawingObjects:=False, Contents:=True, Scenarios:=True, AllowFormattingCells:=False, AllowFormattingRows:=False, AllowFormattingColumns:=False
    ActiveSheet.EnableSelection = xlNoRestrictions

    Set sh = Nothing

End Sub
Private Sub cmb_DAT1_T1WE_Click()
Dim sh As Shape
    For Each sh In ActiveSheet.Shapes
        If sh.Name = "Pic_DEMwk_T1WE" Then
            MsgBox "Item already selected", vbInformation, "Item selected"
            Set sh = Nothing
            Exit Sub
        End If
    Next
    ActiveSheet.Unprotect "unlockME"
    
    sh_IchartWk.Range("DemWK_WETier1").CopyPicture
    ActiveSheet.Range("A1").Activate
    ActiveSheet.Pictures.Paste.Select
    Selection.Name = "Pic_DEMwk_T1WE"
    Selection.Width = 648
    'Selection.Formula = "=DemWK_WETier1"
    Selection.ShapeRange.LockAspectRatio = msoFalse
    
    ActiveSheet.Protect "unlockME", DrawingObjects:=False, Contents:=True, Scenarios:=True, AllowFormattingCells:=False, AllowFormattingRows:=False, AllowFormattingColumns:=False
    ActiveSheet.EnableSelection = xlNoRestrictions

    Set sh = Nothing

End Sub
Private Sub cmb_DAT1_T2_Click()
Dim sh As Shape
    For Each sh In ActiveSheet.Shapes
        If sh.Name = "Pic_DEMwk_T2" Then
            MsgBox "Item already selected", vbInformation, "Item selected"
            Set sh = Nothing
            Exit Sub
        End If
    Next
    ActiveSheet.Unprotect "unlockME"
    
    sh_IchartWk.Range("DemWK_FWTier2").CopyPicture
    ActiveSheet.Range("A1").Activate
    ActiveSheet.Pictures.Paste.Select
    Selection.Name = "Pic_DEMwk_T2"
    Selection.Width = 648
    'Selection.Formula = "=DemWK_FWTier2"
    Selection.ShapeRange.LockAspectRatio = msoFalse
    
    ActiveSheet.Protect "unlockME", DrawingObjects:=False, Contents:=True, Scenarios:=True, AllowFormattingCells:=False, AllowFormattingRows:=False, AllowFormattingColumns:=False
    ActiveSheet.EnableSelection = xlNoRestrictions

    Set sh = Nothing

End Sub
Private Sub cmb_DAT1_T3_Click()
Dim sh As Shape
    For Each sh In ActiveSheet.Shapes
        If sh.Name = "Pic_DEMwk_T3" Then
            MsgBox "Item already selected", vbInformation, "Item selected"
            Set sh = Nothing
            Exit Sub
        End If
    Next
    ActiveSheet.Unprotect "unlockME"
    
    sh_IchartWk.Range("DemWK_FWTier3").CopyPicture
    ActiveSheet.Range("A1").Activate
    ActiveSheet.Pictures.Paste.Select
    Selection.Name = "Pic_DEMwk_T3"
    Selection.Width = 648
    'Selection.Formula = "=DemWK_FWTier3"
    Selection.ShapeRange.LockAspectRatio = msoFalse
    
    ActiveSheet.Protect "unlockME", DrawingObjects:=False, Contents:=True, Scenarios:=True, AllowFormattingCells:=False, AllowFormattingRows:=False, AllowFormattingColumns:=False
    ActiveSheet.EnableSelection = xlNoRestrictions

    Set sh = Nothing

End Sub
Private Sub cmb_DAT1_T4_Click()
Dim sh As Shape
    For Each sh In ActiveSheet.Shapes
        If sh.Name = "Pic_DEMwk_T4" Then
            MsgBox "Item already selected", vbInformation, "Item selected"
            Set sh = Nothing
            Exit Sub
        End If
    Next
    ActiveSheet.Unprotect "unlockME"
    
    sh_IchartWk.Range("DemWK_FWTier4").CopyPicture
    ActiveSheet.Range("A1").Activate
    ActiveSheet.Pictures.Paste.Select
    Selection.Name = "Pic_DEMwk_T4"
    Selection.Width = 648
    'Selection.Formula = "=DemWK_FWTier4"
    Selection.ShapeRange.LockAspectRatio = msoFalse
    
    ActiveSheet.Protect "unlockME", DrawingObjects:=False, Contents:=True, Scenarios:=True, AllowFormattingCells:=False, AllowFormattingRows:=False, AllowFormattingColumns:=False
    ActiveSheet.EnableSelection = xlNoRestrictions

    Set sh = Nothing

End Sub
Private Sub cmb_DAT1mth_FW_Click()
Dim sh As Shape
    For Each sh In ActiveSheet.Shapes
        If sh.Name = "Pic_DEMmth_FW" Then
            MsgBox "Item already selected", vbInformation, "Item selected"
            Set sh = Nothing
            Exit Sub
        End If
    Next
    ActiveSheet.Unprotect "unlockME"
    
    sh_IchartMth.Range("DemMth_FW").CopyPicture
    ActiveSheet.Range("A1").Activate
    ActiveSheet.Pictures.Paste.Select
    Selection.Name = "Pic_DEMmth_FW"
    Selection.Width = 648
    'Selection.Formula = "=DemMth_FW"
    Selection.ShapeRange.LockAspectRatio = msoFalse
    
    ActiveSheet.Protect "unlockME", DrawingObjects:=False, Contents:=True, Scenarios:=True, AllowFormattingCells:=False, AllowFormattingRows:=False, AllowFormattingColumns:=False
    ActiveSheet.EnableSelection = xlNoRestrictions

    Set sh = Nothing

End Sub
Private Sub cmb_DAT1mth_WD_Click()
Dim sh As Shape
    For Each sh In ActiveSheet.Shapes
        If sh.Name = "Pic_DEMmth_WD" Then
            MsgBox "Item already selected", vbInformation, "Item selected"
            Set sh = Nothing
            Exit Sub
        End If
    Next
    ActiveSheet.Unprotect "unlockME"
    
    sh_IchartMth.Range("DemMth_WD").CopyPicture
    ActiveSheet.Range("A1").Activate
    ActiveSheet.Pictures.Paste.Select
    Selection.Name = "Pic_DEMmth_WD"
    Selection.Width = 648
    'Selection.Formula = "=DemMth_WD"
    Selection.ShapeRange.LockAspectRatio = msoFalse
    
    ActiveSheet.Protect "unlockME", DrawingObjects:=False, Contents:=True, Scenarios:=True, AllowFormattingCells:=False, AllowFormattingRows:=False, AllowFormattingColumns:=False
    ActiveSheet.EnableSelection = xlNoRestrictions

    Set sh = Nothing

End Sub

Private Sub cmb_DAT1mth_WE_Click()
Dim sh As Shape
    For Each sh In ActiveSheet.Shapes
        If sh.Name = "Pic_DEMmth_WE" Then
            MsgBox "Item already selected", vbInformation, "Item selected"
            Set sh = Nothing
            Exit Sub
        End If
    Next
    ActiveSheet.Unprotect "unlockME"
    
    sh_IchartMth.Range("DemMth_WE").CopyPicture
    ActiveSheet.Range("A1").Activate
    ActiveSheet.Pictures.Paste.Select
    Selection.Name = "Pic_DEMmth_WE"
    Selection.Width = 648
    'Selection.Formula = "=DemMth_WE"
    Selection.ShapeRange.LockAspectRatio = msoFalse
    
    ActiveSheet.Protect "unlockME", DrawingObjects:=False, Contents:=True, Scenarios:=True, AllowFormattingCells:=False, AllowFormattingRows:=False, AllowFormattingColumns:=False
    ActiveSheet.EnableSelection = xlNoRestrictions

    Set sh = Nothing

End Sub
Private Sub cmb_DAT1mth_T1_FW_Click()
Dim sh As Shape
    For Each sh In ActiveSheet.Shapes
        If sh.Name = "Pic_DEMmth_T1FW" Then
            MsgBox "Item already selected", vbInformation, "Item selected"
            Set sh = Nothing
            Exit Sub
        End If
    Next
    ActiveSheet.Unprotect "unlockME"
    
    sh_IchartMth.Range("DemMth_FWTier1").CopyPicture
    ActiveSheet.Range("A1").Activate
    ActiveSheet.Pictures.Paste.Select
    Selection.Name = "Pic_DEMmth_T1FW"
    Selection.Width = 648
    'Selection.Formula = "=DemMth_FWTier1"
    Selection.ShapeRange.LockAspectRatio = msoFalse
    
    ActiveSheet.Protect "unlockME", DrawingObjects:=False, Contents:=True, Scenarios:=True, AllowFormattingCells:=False, AllowFormattingRows:=False, AllowFormattingColumns:=False
    ActiveSheet.EnableSelection = xlNoRestrictions

    Set sh = Nothing

End Sub
Private Sub cmb_DAT1mth_T1_WD_Click()
Dim sh As Shape
    For Each sh In ActiveSheet.Shapes
        If sh.Name = "Pic_DEMmth_T1WD" Then
            MsgBox "Item already selected", vbInformation, "Item selected"
            Set sh = Nothing
            Exit Sub
        End If
    Next
    ActiveSheet.Unprotect "unlockME"
    
    sh_IchartMth.Range("DemMth_WDTier1").CopyPicture
    ActiveSheet.Range("A1").Activate
    ActiveSheet.Pictures.Paste.Select
    Selection.Name = "Pic_DEMmth_T1WD"
    Selection.Width = 648
    'Selection.Formula = "=DemMth_WDTier1"
    Selection.ShapeRange.LockAspectRatio = msoFalse
    
    ActiveSheet.Protect "unlockME", DrawingObjects:=False, Contents:=True, Scenarios:=True, AllowFormattingCells:=False, AllowFormattingRows:=False, AllowFormattingColumns:=False
    ActiveSheet.EnableSelection = xlNoRestrictions

    Set sh = Nothing

End Sub
Private Sub cmb_DAT1mth_T1_WE_Click()
Dim sh As Shape
    For Each sh In ActiveSheet.Shapes
        If sh.Name = "Pic_DEMmth_T1WE" Then
            MsgBox "Item already selected", vbInformation, "Item selected"
            Set sh = Nothing
            Exit Sub
        End If
    Next
    ActiveSheet.Unprotect "unlockME"
    
    sh_IchartMth.Range("DemMth_WETier1").CopyPicture
    ActiveSheet.Range("A1").Activate
    ActiveSheet.Pictures.Paste.Select
    Selection.Name = "Pic_DEMmth_T1WE"
    Selection.Width = 648
    'Selection.Formula = "=DemMth_WETier1"
    Selection.ShapeRange.LockAspectRatio = msoFalse
    
    ActiveSheet.Protect "unlockME", DrawingObjects:=False, Contents:=True, Scenarios:=True, AllowFormattingCells:=False, AllowFormattingRows:=False, AllowFormattingColumns:=False
    ActiveSheet.EnableSelection = xlNoRestrictions

    Set sh = Nothing

End Sub
Private Sub cmb_DAT1mth_T2_Click()
Dim sh As Shape
    For Each sh In ActiveSheet.Shapes
        If sh.Name = "Pic_DEMmth_T2" Then
            MsgBox "Item already selected", vbInformation, "Item selected"
            Set sh = Nothing
            Exit Sub
        End If
    Next
    ActiveSheet.Unprotect "unlockME"
    
    sh_IchartMth.Range("DemMth_FWTier2").CopyPicture
    ActiveSheet.Range("A1").Activate
    ActiveSheet.Pictures.Paste.Select
    Selection.Name = "Pic_DEMmth_T2"
    Selection.Width = 648
    'Selection.Formula = "=DemMth_FWTier2"
    Selection.ShapeRange.LockAspectRatio = msoFalse
    
    ActiveSheet.Protect "unlockME", DrawingObjects:=False, Contents:=True, Scenarios:=True, AllowFormattingCells:=False, AllowFormattingRows:=False, AllowFormattingColumns:=False
    ActiveSheet.EnableSelection = xlNoRestrictions

    Set sh = Nothing

End Sub
Private Sub cmb_DAT1mth_T3_Click()
Dim sh As Shape
    For Each sh In ActiveSheet.Shapes
        If sh.Name = "Pic_DEMmth_T3" Then
            MsgBox "Item already selected", vbInformation, "Item selected"
            Set sh = Nothing
            Exit Sub
        End If
    Next
    ActiveSheet.Unprotect "unlockME"
    
    sh_IchartMth.Range("DemMth_FWTier3").CopyPicture
    ActiveSheet.Range("A1").Activate
    ActiveSheet.Pictures.Paste.Select
    Selection.Name = "Pic_DEMmth_T3"
    Selection.Width = 648
    'Selection.Formula = "=DemMth_FWTier3"
    Selection.ShapeRange.LockAspectRatio = msoFalse
    
    ActiveSheet.Protect "unlockME", DrawingObjects:=False, Contents:=True, Scenarios:=True, AllowFormattingCells:=False, AllowFormattingRows:=False, AllowFormattingColumns:=False
    ActiveSheet.EnableSelection = xlNoRestrictions

    Set sh = Nothing

End Sub
Private Sub cmb_DAT1mth_T4_Click()
Dim sh As Shape
    For Each sh In ActiveSheet.Shapes
        If sh.Name = "Pic_DEMmth_T4" Then
            MsgBox "Item already selected", vbInformation, "Item selected"
            Set sh = Nothing
            Exit Sub
        End If
    Next
    ActiveSheet.Unprotect "unlockME"
    
    sh_IchartMth.Range("DemMth_FWTier4").CopyPicture
    ActiveSheet.Range("A1").Activate
    ActiveSheet.Pictures.Paste.Select
    Selection.Name = "Pic_DEMmth_T4"
    Selection.Width = 648
    'Selection.Formula = "=DemMth_FWTier4"
    Selection.ShapeRange.LockAspectRatio = msoFalse
    
    ActiveSheet.Protect "unlockME", DrawingObjects:=False, Contents:=True, Scenarios:=True, AllowFormattingCells:=False, AllowFormattingRows:=False, AllowFormattingColumns:=False
    ActiveSheet.EnableSelection = xlNoRestrictions

    Set sh = Nothing

End Sub

Attribute VB_Name = "ufrmPrintDashSum"
Attribute VB_Base = "0{1E30CD00-DDBD-47A4-9151-FBB9CD03B046}{09AF339E-A7F2-4BDC-BDCE-35179CD8F39E}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Option Explicit

Private Sub UserForm_Activate()
Dim i As Integer
   
    'set active printer in label printer address
    LbPrinterDash = Application.ActivePrinter
    
    'paper size
    CbPaperSizeDash.AddItem "Letter"
    CbPaperSizeDash.AddItem "Legal"
    CbPaperSizeDash.AddItem "A4"
    CbPaperSizeDash.AddItem "A3"
    
    CbPaperSizeDash.Value = ws_Welcome.Range("AD2")
    
    CkbDash.Value = ws_Welcome.Range("AD17").Value
    CkbDashCom.Value = ws_Welcome.Range("AD18").Value
    CkbSum.Value = ws_Welcome.Range("AD19").Value
    
    'set number of copies
    TxbCopyDash.Value = ws_Welcome.Range("AD15").Value
    
    OptBtDash_DontPrint = ws_Welcome.Range("AJ5")
    CkBoxComments.Value = ws_Welcome.Range("AK5")
    OptBtSum_DontPrint.Value = ws_Welcome.Range("AL5")
    
    OptBtDash_DontPrint.SetFocus
       
    
End Sub
Private Sub ImgPrinterDash_Click()
    Application.Dialogs(xlDialogPrinterSetup).Show
    LbPrinterDash = Application.ActivePrinter
End Sub
Private Sub ImgPrintDashPDF_Click()

    PrintPDF = True
    Call ImgPrintDash_Click

End Sub
Private Sub ImgPrintDash_Click()
Dim oPaperSize As Byte, Irow As Long
Dim MyRangeSum As String, MyRangeDash As String, MyRangeDashCom As String, MySheet As Variant

MySheet = ActiveSheet.Name

ufrmPrintDashSum.Hide

If (TxbCopyDash.Value < 1 Or Not IsNumeric(TxbCopyDash.Value)) Then GoTo Error_Userform

On Error GoTo Error_Userform
    
    With Application: .EnableEvents = False: .ScreenUpdating = False: .Calculation = xlCalculationManual: End With

    ws_Welcome.Range("AD2").Value = CbPaperSizeDash.Value
    ws_Welcome.Range("AD15").Value = TxbCopyDash.Value
    ws_Welcome.Range("AD17").Value = CkbDash.Value
    ws_Welcome.Range("AD18").Value = CkbDashCom.Value
    ws_Welcome.Range("AD19").Value = CkbSum.Value
    
    If (ws_Welcome.Range("AD17").Value = False And ws_Welcome.Range("AD18").Value = False And ws_Welcome.Range("AD19").Value = False) Then
        MsgBox "There is nothing to print. Please select a section to print.", vbInformation, "Nothing to print"
        With Application: .ScreenUpdating = True: .Calculation = xlCalculationAutomatic: End With
        End
    End If
    
    'paper size
    Select Case ws_Welcome.Range("AD2").Value
        Case "A4": oPaperSize = xlPaperA4
        Case "A3": oPaperSize = xlPaperA3
        Case "Letter": oPaperSize = xlPaperLetter
        Case "Legal": oPaperSize = xlPaperLegal
    End Select
    
    For Irow = 6 To 14
        Select Case ws_Welcome.Range("AL" & Irow).Value
            Case True
                ws_Welcome.Range("AD19").Value = True
        End Select
    Next
    
    If CkbSum.Value = True Then
    ws_Summary.Activate
    Application.ScreenUpdating = False
        Select Case ws_Summary.Range("B1").Value
            Case "All"
                MyRangeSum = "$C$6:$O$45,$C$48:$O$87,$C$90:$O$129" 'Summary print month 1 to 3 full week, weekday, weekend
            Case "FW"
                MyRangeSum = "$C$6:$O$103" 'print full week ranges only
        End Select
    End If
    
    'print summary month 4 to 12
    For Irow = 14 To 6 Step -1 'loop through the welcome tab to see if any additional month needs to be printed
        Select Case ws_Welcome.Range("AL" & Irow).Value
            Case True
                If Irow = 6 Then
                    If ws_Summary.Range("B1").Value = "All" Then MyRangeSum = MyRangeSum & ",$C$132:$O$171" 'FW, WD, WE
                    If ws_Summary.Range("B1").Value = "FW" Then MyRangeSum = MyRangeSum & ",$C$132:$O$145" 'FW
                End If
                If Irow = 7 Then
                    If ws_Summary.Range("B1").Value = "All" Then MyRangeSum = MyRangeSum & ",$C$132:$O$171,$C$174:$O$213" 'FW, WD,WE
                    If ws_Summary.Range("B1").Value = "FW" Then MyRangeSum = MyRangeSum & ",$C$132:$O$187" 'FW
                End If
                If Irow = 8 Then
                    If ws_Summary.Range("B1").Value = "All" Then MyRangeSum = MyRangeSum & ",$C$132:$O$171,$C$174:$O$213,$C$216:$O$255" 'FW,WD,WE
                    If ws_Summary.Range("B1").Value = "FW" Then MyRangeSum = MyRangeSum & ",$C$132:$O$229" 'FW only
                End If
                If Irow = 9 Then
                    If ws_Summary.Range("B1").Value = "All" Then MyRangeSum = MyRangeSum & ",$C$132:$O$171,$C$174:$O$213,$C$216:$O$255,$C$258:$O$297" 'FW, WD, WE
                    If ws_Summary.Range("B1").Value = "FW" Then MyRangeSum = MyRangeSum & ",$C$132:$O$229,$C$258:$O$271" 'FW
                End If
                If Irow = 10 Then
                    If ws_Summary.Range("B1").Value = "All" Then MyRangeSum = MyRangeSum & ",$C$132:$O$171,$C$174:$O$213,$C$216:$O$255,$C$258:$O$297,$C$300:$O$339" 'FW, WD, WE
                    If ws_Summary.Range("B1").Value = "FW" Then MyRangeSum = MyRangeSum & ",$C$132:$O$229,$C$258:$O$313" 'FW
                
                End If
                If Irow = 11 Then
                    If ws_Summary.Range("B1").Value = "All" Then MyRangeSum = MyRangeSum & ",$C$132:$O$171,$C$174:$O$213,$C$216:$O$255,$C$258:$O$297,$C$300:$O$339,$C$342:$O$381" 'FW, WD, WE
                    If ws_Summary.Range("B1").Value = "FW" Then MyRangeSum = MyRangeSum & ",$C$132:$O$229,$C$258:$O$355" 'FW
                
                End If
                If Irow = 12 Then
                    If ws_Summary.Range("B1").Value = "All" Then MyRangeSum = MyRangeSum & ",$C$132:$O$171,$C$174:$O$213,$C$216:$O$255,$C$258:$O$297,$C$300:$O$339,$C$342:$O$381,$C$384:$O$423" 'FW, WD, WE
                    If ws_Summary.Range("B1").Value = "FW" Then MyRangeSum = MyRangeSum & ",$C$132:$O$229,$C$258:$O$355,$C$384:$O$397" 'FW
                
                End If
                If Irow = 13 Then
                    If ws_Summary.Range("B1").Value = "All" Then MyRangeSum = MyRangeSum & ",$C$132:$O$171,$C$174:$O$213,$C$216:$O$255,$C$258:$O$297,$C$300:$O$339,$C$342:$O$381,$C$384:$O$423,$C$426:$O$465" 'FW, WD, WE
                    If ws_Summary.Range("B1").Value = "FW" Then MyRangeSum = MyRangeSum & ",$C$132:$O$229,$C$258:$O$355,$C$384:$O$439" 'FW
                
                End If
                If Irow = 14 Then
                    If ws_Summary.Range("B1").Value = "All" Then MyRangeSum = MyRangeSum & ",$C$132:$O$171,$C$174:$O$213,$C$216:$O$255,$C$258:$O$297,$C$300:$O$339,$C$342:$O$381,$C$384:$O$423,$C$426:$O$465,$C$468:$O$507" 'FW, WD, WE
                    If ws_Summary.Range("B1").Value = "FW" Then MyRangeSum = MyRangeSum & ",$C$132:$O$229,$C$258:$O$355,$C$384:$O$481" 'FW
                
                End If
            Exit For
        End Select
    Next
    'print summary
    If ws_Welcome.Range("AD19").Value = True Then
        ws_Summary.Activate
        Application.PrintCommunication = True
        ws_Summary.PageSetup.PrintArea = MyRangeSum
        Application.PrintCommunication = False
        With ws_Summary.PageSetup
            .PrintTitleRows = "$4:$5"
            .PrintTitleColumns = ""
            .CenterFooter = ""
            .LeftHeader = ""
            .CenterHeader = ""
            .RightHeader = ""
            .LeftFooter = ""
            .CenterFooter = "&4Marriott Confidential Proprietary Information     "
            .RightFooter = ""
            .LeftMargin = Application.InchesToPoints(0.2)
            .RightMargin = Application.InchesToPoints(0.2)
            .TopMargin = Application.InchesToPoints(0.25)
            .BottomMargin = Application.InchesToPoints(0.25)
            .HeaderMargin = Application.InchesToPoints(0.3)
            .FooterMargin = Application.InchesToPoints(0.3)
            .CenterHorizontally = True
            .Orientation = xlLandscape
            .PaperSize = oPaperSize
            .Order = xlDownThenOver
            .FitToPagesWide = 1
            .FitToPagesTall = 1
            .ScaleWithDocHeaderFooter = True
            .AlignMarginsHeaderFooter = True
        End With
    End If
    
    'print Dashboard or Dashboard Comments
    If (ws_Welcome.Range("AD17").Value = True Or ws_Welcome.Range("AD18").Value = True) Then
        With ws_Dashboard.PageSetup
            .PrintTitleRows = ""
            .PrintTitleColumns = ""
            .CenterFooter = ""
            .LeftHeader = ""
            .CenterHeader = ""
            .RightHeader = ""
            .LeftFooter = ""
            .CenterFooter = "&4Marriott Confidential Proprietary Information     "
            .RightFooter = ""
            .LeftMargin = Application.InchesToPoints(0.2)
            .RightMargin = Application.InchesToPoints(0.2)
            .TopMargin = Application.InchesToPoints(0.25)
            .BottomMargin = Application.InchesToPoints(0.25)
            .HeaderMargin = Application.InchesToPoints(0.3)
            .FooterMargin = Application.InchesToPoints(0.3)
            .CenterHorizontally = True
            .Orientation = xlPortrait
            .Order = xlOverThenDown
            .FitToPagesWide = 1
            .FitToPagesTall = 1
            .ScaleWithDocHeaderFooter = True
            .AlignMarginsHeaderFooter = True
        End With
    

        Application.EnableEvents = True
        ws_Dashboard.Activate
        MyRangeDash = "$B$4:$AL$63,$B$65:$AL$124,$B$126:$AL$185" 'print Dash only
        MyRangeDashCom = "$B$4:$AL$63,$AN$4:$BA$63,$B$65:$AL$124,$AN$65:$BA$124,$B$126:$AL$185,$AN$126:$BA$185" 'Pring Dash & comments
        Application.EnableEvents = False
        
    For Irow = 8 To 6 Step -1 'loop through the welcome tab to see if any additional month needs to be printed
        Select Case ws_Welcome.Range("AJ" & Irow).Value
            Case True
                If Irow = 6 Then
                    MyRangeDash = MyRangeDash & ",$B$187:$AL$246"
                    If ws_Welcome.Range("AK5").Value = False And ws_Welcome.Range("AJ6").Value = True Then _
                        MyRangeDashCom = MyRangeDashCom & ",$B$187:$AL$246"
                    If ws_Welcome.Range("AK5").Value = True Then _
                        MyRangeDashCom = MyRangeDashCom & ",$B$187:$AL$246,$AN$187:$BA$246"
                End If
                If Irow = 7 Then
                    MyRangeDash = MyRangeDash & ",$B$187:$AL$246,$B$248:$AL$307"
                    If ws_Welcome.Range("AK5").Value = False And ws_Welcome.Range("AJ7").Value = True Then _
                        MyRangeDashCom = MyRangeDashCom & ",$B$187:$AL$246,$B$248:$AL$307"

                    If ws_Welcome.Range("AK5").Value = True Then _
                        MyRangeDashCom = MyRangeDashCom & ",$B$187:$AL$246,$AN$187:$BA$246,$B$248:$AL$307,$AN$248:$BA$307"
                End If
                If Irow = 8 Then
                    MyRangeDash = MyRangeDash & ",$B$187:$AL$246,$B$248:$AL$307,$B$309:$AL$369"
                    If ws_Welcome.Range("AK5").Value = False And ws_Welcome.Range("AJ8").Value = True Then _
                        MyRangeDashCom = MyRangeDashCom & ",$B$187:$AL$246,$B$248:$AL$307,$B$309:$AL$369"
                        
                    If ws_Welcome.Range("AK5").Value = True Then _
                        MyRangeDashCom = MyRangeDashCom & ",$B$187:$AL$246,$AN$187:$BA$246,$B$248:$AL$307,$AN$248:$BA$307,$B$309:$AL$369,$AN$309:$BA$369"
                End If
            Exit For
        End Select
    Next
    
        Application.PrintCommunication = True
        With ws_Dashboard.PageSetup
            .PrintArea = IIf(ws_Welcome.Range("AD17").Value = True, MyRangeDash, MyRangeDashCom)
            .PaperSize = oPaperSize
        End With
    End If
    
    If ((CkbDash.Value = True Or CkbDashCom.Value = True) And CkbSum.Value = True) Then
        Sheets(Array("Dashboard", "Summary_DaybyDay")).Select
        Select Case PrintPDF
            Case False
                ActiveWindow.SelectedSheets.PrintOut Copies:=ws_Welcome.Range("AD15").Value, Preview:=False, Collate:=True
            Case True
                ActiveSheet.ExportAsFixedFormat Type:=xlTypePDF, _
                    Filename:=ActiveWorkbook.Path & "\" & ws_Setup.Range("C15").Value & " - OYv2 Dashboard " & VBA.Format(ws_DayXDay.Range("DT3").Value, "MMM-DD-YYYY") & ".pdf", _
                    Quality:=xlQualityStandard, IncludeDocProperties:=True, IgnorePrintAreas:=False, OpenAfterPublish:=True
        End Select
        ws_Welcome.Activate ' to unselect
    Else
        Select Case PrintPDF
            Case False
                ActiveWindow.SelectedSheets.PrintOut Copies:=ws_Welcome.Range("AD15").Value, Preview:=False, Collate:=True
            Case True
                ActiveSheet.ExportAsFixedFormat Type:=xlTypePDF, _
                    Filename:=ActiveWorkbook.Path & "\" & ws_Setup.Range("C15").Value & " - OYv2 Dashboard " & VBA.Format(ws_DayXDay.Range("DT3").Value, "MMM-DD-YYYY") & ".pdf", _
                    Quality:=xlQualityStandard, IncludeDocProperties:=True, IgnorePrintAreas:=False, OpenAfterPublish:=True
        End Select
    End If
    
    ws_Dashboard.Activate
    Application.PrintCommunication = False
        With ws_Dashboard.PageSetup
            .PrintArea = ""
            .PrintTitleRows = ""
            .PrintTitleColumns = ""
            .CenterFooter = ""
        End With
    Application.PrintCommunication = True
    Application.EnableEvents = True
    
    ws_Summary.Activate
    Application.PrintCommunication = False
        With ws_Summary.PageSetup
            .PrintArea = ""
            .PrintTitleRows = ""
            .PrintTitleColumns = ""
            .CenterFooter = ""
        End With
    Application.PrintCommunication = True
    
    Unload Me
    Set ufrmPrintDashSum = Nothing
    
    Worksheets(MySheet).Activate
    ActiveSheet.Range("D6").Activate
    
    With Application: .EnableEvents = True: .ScreenUpdating = True: .Calculation = xlCalculationAutomatic: End With
    MyRangeSum = Empty: MyRangeDash = Empty: MyRangeDashCom = Empty: MySheet = Empty: oPaperSize = Empty:  Irow = Empty
    End

Error_Userform:
    MsgBox "Nothing was selected, printing cancelled"
    ws_Dashboard.DisplayPageBreaks = False
    ws_Summary.DisplayPageBreaks = False
    Worksheets(MySheet).Activate
    MyRangeSum = Empty: MyRangeDash = Empty: MyRangeDashCom = Empty: MySheet = Empty: oPaperSize = Empty:  Irow = Empty
    
    With Application: .EnableEvents = True: .ScreenUpdating = True: .Calculation = xlCalculationAutomatic: End With

    On Error GoTo 0
    Unload Me
    Set ufrmPrintDashSum = Nothing
    End
End Sub

Private Sub CkbDash_Click()

    If Me.CkbDash.Value = True Then
        Me.CkbDashCom.Value = Not (Me.CkbDash.Value)
        Me.CkBoxComments.Value = Not (Me.CkbDash.Value)
        Me.CkBoxComments.Enabled = Not (Me.CkbDash.Value)
    End If
End Sub

Private Sub CkbDashCom_Click()

    If Me.CkbDashCom.Value = True Then
        Me.CkbDash.Value = Not (Me.CkbDashCom.Value)
        Me.CkBoxComments.Enabled = Me.CkbDashCom.Value
    End If
    
End Sub

Private Sub OptDontPrint_Click()
    ws_Welcome.Range("AD6:AD8").Value = False
End Sub

Private Sub OptMth4Dash_Click()
    ws_Welcome.Range("AD6").Value = True
    ws_Welcome.Range("AD19").Value = True
    ws_Welcome.Range("AD7:AD8").Value = False
End Sub

Private Sub OptMth5Dash_Click()
    ws_Welcome.Range("AD7").Value = True
    ws_Welcome.Range("AD19").Value = True
    ws_Welcome.Range("AD6,AD8").Value = False
End Sub

Private Sub OptMth6Dash_Click()
    ws_Welcome.Range("AD8").Value = True
    ws_Welcome.Range("AD19").Value = True
    ws_Welcome.Range("AD6:AD7").Value = False
End Sub

Private Sub ImgCloseDash_Click()
    Unload Me
    Set ufrmPrintDashSum = Nothing
End Sub
Attribute VB_Name = "ufrmPrintDayxDay"
Attribute VB_Base = "0{23A45BD6-3CAC-457E-AAF5-3707CCD6C667}{8B999397-C40D-4CB8-AB20-0D44B506A18B}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Option Explicit



Private Sub UserForm_Activate()
    
    'set active printer in label printer address
    LbPrinter = Application.ActivePrinter
    
    'paper size
    CbPaperSize.AddItem "Letter"
    CbPaperSize.AddItem "Legal"
    CbPaperSize.AddItem "A4"
    CbPaperSize.AddItem "A3"
    
    CbPaperSize.Value = ws_Welcome.Range("AA2")

    'set number of copies
    TxbCopy.Value = ws_Welcome.Range("AA15").Value

    'Select month to print
    CkbMth1.Caption = VBA.Format(ws_DayXDay.Range("B6"), "MMMM-YYYY"): CkbMth1.Value = ws_Welcome.Range("AA3").Value
    CkbMth2.Caption = VBA.Format(ws_DayXDay.Range("B45"), "MMMM-YYYY"): CkbMth2.Value = ws_Welcome.Range("AA4").Value
    CkbMth3.Caption = VBA.Format(ws_DayXDay.Range("B84"), "MMMM-YYYY"): CkbMth3.Value = ws_Welcome.Range("AA5").Value
    CkbMth4.Caption = VBA.Format(ws_DayXDay.Range("B123"), "MMMM-YYYY"): CkbMth4.Value = ws_Welcome.Range("AA6").Value
    CkbMth5.Caption = VBA.Format(ws_DayXDay.Range("B162"), "MMMM-YYYY"): CkbMth5.Value = ws_Welcome.Range("AA7").Value
    CkbMth6.Caption = VBA.Format(ws_DayXDay.Range("B201"), "MMMM-YYYY"): CkbMth6.Value = ws_Welcome.Range("AA8").Value
    CkbMth7.Caption = VBA.Format(ws_DayXDay.Range("B240"), "MMMM-YYYY"): CkbMth7.Value = ws_Welcome.Range("AA9").Value
    CkbMth8.Caption = VBA.Format(ws_DayXDay.Range("B279"), "MMMM-YYYY"): CkbMth8.Value = ws_Welcome.Range("AA10").Value
    CkbMth9.Caption = VBA.Format(ws_DayXDay.Range("B318"), "MMMM-YYYY"): CkbMth9.Value = ws_Welcome.Range("AA11").Value
    CkbMth10.Caption = VBA.Format(ws_DayXDay.Range("B357"), "MMMM-YYYY"): CkbMth10.Value = ws_Welcome.Range("AA12").Value
    CkbMth11.Caption = VBA.Format(ws_DayXDay.Range("B396"), "MMMM-YYYY"): CkbMth11.Value = ws_Welcome.Range("AA13").Value
    CkbMth12.Caption = VBA.Format(ws_DayXDay.Range("B435"), "MMMM-YYYY"): CkbMth12.Value = ws_Welcome.Range("AA14").Value
    CkbMth13.Caption = VBA.Format(ws_DayXDay.Range("B474"), "MMMM-YYYY"): CkbMth13.Value = ws_Welcome.Range("AA20").Value
End Sub
Private Sub ImgPrinter_Click()
    Application.Dialogs(xlDialogPrinterSetup).Show
    LbPrinter = Application.ActivePrinter
End Sub
Private Sub ImgPrintPDF_Click()

    PrintPDF = True
    Call ImgPrint_Click
End Sub
Private Sub ImgPrint_Click()
Dim oPaperSize As Byte, MyRange As String, Irow As Byte, iCol As Long

With Application: .ScreenUpdating = False: .EnableEvents = False: .Calculation = xlCalculationManual: End With

ufrmPrintDayxDay.Hide

    ws_DayXDay.Unprotect "unlockME"
    
    For iCol = 4 To 68
        Select Case VBA.Right(ws_DayXDay.Cells(3, iCol).Value, 2)
            Case "RC"
                ws_DayXDay.Columns(iCol).EntireColumn.Hidden = False
                ws_DayXDay.Columns(iCol).EntireColumn.AutoFit
        End Select
    Next iCol
    
    ws_DayXDay.Protect "unlockME", DrawingObjects:=True, Contents:=True, Scenarios:=False, AllowFormattingCells:=True, AllowFormattingColumns:=False

    
If (TxbCopy.Value < 1 Or Not IsNumeric(TxbCopy.Value)) Then GoTo Error_Userform

On Error GoTo Error_Userform
Application.EnableEvents = False
    ws_Welcome.Range("AA2").Value = CbPaperSize.Value
    ws_Welcome.Range("AA15").Value = TxbCopy.Value
    ws_Welcome.Range("AA3").Value = CkbMth1.Value: ws_Welcome.Range("AA4").Value = CkbMth2.Value
    ws_Welcome.Range("AA5").Value = CkbMth3.Value: ws_Welcome.Range("AA6").Value = CkbMth4.Value
    ws_Welcome.Range("AA7").Value = CkbMth5.Value: ws_Welcome.Range("AA8").Value = CkbMth6.Value
    ws_Welcome.Range("AA9").Value = CkbMth7.Value: ws_Welcome.Range("AA10").Value = CkbMth8.Value
    ws_Welcome.Range("AA11").Value = CkbMth9.Value: ws_Welcome.Range("AA12").Value = CkbMth10.Value
    ws_Welcome.Range("AA13").Value = CkbMth11.Value: ws_Welcome.Range("AA14").Value = CkbMth12.Value
    ws_Welcome.Range("AA20").Value = CkbMth13.Value
    
    If (ws_Welcome.Range("AA3").Value = False And ws_Welcome.Range("AA4").Value = False And _
        ws_Welcome.Range("AA5").Value = False And ws_Welcome.Range("AA6").Value = False And _
        ws_Welcome.Range("AA7").Value = False And ws_Welcome.Range("AA8").Value = False And _
        ws_Welcome.Range("AA9").Value = False And ws_Welcome.Range("AA10").Value = False And _
        ws_Welcome.Range("AA11").Value = False And ws_Welcome.Range("AA12").Value = False And _
        ws_Welcome.Range("AA13").Value = False And ws_Welcome.Range("AA14").Value = False And _
        ws_Welcome.Range("AA20").Value = False) Then
            MsgBox "There is nothing to print. Please select a month to print.", vbInformation, "Nothing to print"
            With Application: .ScreenUpdating = True: .EnableEvents = True: .Calculation = xlCalculationAutomatic: End With
            End
    End If
    
    Select Case ws_Welcome.Range("AA2").Value
        Case "A4": oPaperSize = xlPaperA4
        Case "A3": oPaperSize = xlPaperA3
        Case "Letter": oPaperSize = xlPaperLetter
        Case "Legal": oPaperSize = xlPaperLegal
    End Select
    
    MyRange = vbNullString
   
    For Irow = 3 To 14 'loop through the welcome tab where the info is stored to print the day by day
        Select Case ws_Welcome.Range("AA" & Irow).Value
            Case True
                If Irow = 3 Then MyRange = "$B$5:$CJ$39"
                If Irow = 4 Then
                    If MyRange > vbNullString Then MyRange = MyRange & ",$B$44:$CJ$78"
                    If MyRange = vbNullString Then MyRange = MyRange & "$B$44:$CJ$78"
                End If
                If Irow = 5 Then
                    If MyRange > vbNullString Then MyRange = MyRange & ",$B$83:$CJ$117" Else MyRange = MyRange & "$B$83:$CJ$117"
                End If
                If Irow = 6 Then
                    If MyRange > vbNullString Then MyRange = MyRange & ",$B$122:$CJ$156" Else MyRange = MyRange & "$B$122:$CJ$156"
                End If
                If Irow = 7 Then
                    If MyRange > vbNullString Then MyRange = MyRange & ",$B$161:$CJ$195" Else MyRange = MyRange & "$B$161:$CJ$195"
                End If
                If Irow = 8 Then
                    If MyRange > vbNullString Then MyRange = MyRange & ",$B$200:$CJ$234" Else MyRange = MyRange & "$B$200:$CJ$234"
                End If
                If Irow = 9 Then
                    If MyRange > vbNullString Then MyRange = MyRange & ",$B$239:$CJ$273" Else MyRange = MyRange & "$B$239:$CJ$273"
                End If
                If Irow = 10 Then
                    If MyRange > vbNullString Then MyRange = MyRange & ",$B$278:$CJ$312" Else MyRange = MyRange & "$B$278:$CJ$312"
                End If
                If Irow = 11 Then
                    If MyRange > vbNullString Then MyRange = MyRange & ",$B$317:$CJ$351" Else MyRange = MyRange & "$B$317:$CJ$351"
                End If
                If Irow = 12 Then
                    If MyRange > vbNullString Then MyRange = MyRange & ",$B$356:$CJ$390" Else MyRange = MyRange & "$B$356:$CJ$390"
                End If
                If Irow = 13 Then
                    If MyRange > vbNullString Then MyRange = MyRange & ",$B$395:$CJ$429" Else MyRange = MyRange & "$B$395:$CJ$429"
                End If
                If Irow = 14 Then
                    If MyRange > vbNullString Then MyRange = MyRange & ",$B$434:$CJ$468" Else MyRange = MyRange & "$B$434:$CJ$468"
                End If
        End Select
    Next
    
    If ws_Welcome.Range("AA20").Value = True Then
        If MyRange > vbNullString Then MyRange = MyRange & ",$B$473:$CJ$507" Else MyRange = MyRange & "$B$473:$CJ$507"
    End If
    
    Application.PrintCommunication = False
    With ws_DayXDay.PageSetup
        .PrintTitleRows = "$4:$4"
        .PrintTitleColumns = ""
        .CenterFooter = ""
    End With
    Application.PrintCommunication = True
    ws_DayXDay.PageSetup.PrintArea = MyRange
    Application.PrintCommunication = False
    With ws_DayXDay.PageSetup
        .LeftHeader = ""
        .CenterHeader = ""
        .RightHeader = ""
        .LeftFooter = ""
        .CenterFooter = "&20Marriott Confidential Proprietary Information     "
        .RightFooter = ""
        .LeftMargin = Application.InchesToPoints(0.2)
        .RightMargin = Application.InchesToPoints(0.2)
        .TopMargin = Application.InchesToPoints(0.25)
        .BottomMargin = Application.InchesToPoints(0.25)
        .HeaderMargin = Application.InchesToPoints(0.3)
        .FooterMargin = Application.InchesToPoints(0.3)
        .PrintHeadings = False
        .PrintGridlines = False
        .CenterHorizontally = True
        .CenterVertically = False
        .Orientation = xlLandscape
        .Draft = False
        .PaperSize = oPaperSize
        .FirstPageNumber = xlAutomatic
        .Order = xlDownThenOver
        .FitToPagesWide = 1
        .FitToPagesTall = 1
        .ScaleWithDocHeaderFooter = True
        .AlignMarginsHeaderFooter = True
    End With
    Application.PrintCommunication = True
    
    Select Case PrintPDF
        Case False
            ActiveWindow.SelectedSheets.PrintOut Copies:=ws_Welcome.Range("AA15").Value, Collate:=True, IgnorePrintAreas:=False
        Case True
            ActiveSheet.ExportAsFixedFormat Type:=xlTypePDF, _
                Filename:=ActiveWorkbook.Path & "\" & ws_Setup.Range("C15").Value & " - OYv2 Day_by_Day " & VBA.Format(ws_DayXDay.Range("DT3").Value, "MMM-DD-YYYY") & ".pdf", _
                Quality:=xlQualityStandard, IncludeDocProperties:=True, IgnorePrintAreas:=False, OpenAfterPublish:=True
    End Select
    
    With ws_DayXDay.PageSetup
        .PrintArea = ""
        .PrintTitleRows = ""
        .CenterFooter = ""
    End With
    
    Unload Me
    Set ufrmPrintDayxDay = Nothing
    
    ws_DayXDay.Activate
    ws_DayXDay.DisplayPageBreaks = False
    ws_DayXDay.Range("D6").Activate
    On Error GoTo 0
    
    oPaperSize = Empty: MyRange = Empty: Irow = Empty: iCol = Empty
    
    With Application: .ScreenUpdating = True: .EnableEvents = True: .Calculation = xlCalculationAutomatic: End With
    
    End

Error_Userform:
    MsgBox "Nothing was selected, printing cancelled"
    On Error GoTo 0
    Unload Me
    Set ufrmPrintDayxDay = Nothing
    oPaperSize = Empty: MyRange = Empty: Irow = Empty: iCol = Empty
    
    With Application: .ScreenUpdating = True: .EnableEvents = True: .Calculation = xlCalculationAutomatic: End With
    End
End Sub
Private Sub ImgClose_Click()
    Unload Me
    Set ufrmPrintDayxDay = Nothing
End Sub
Attribute VB_Name = "ufrmPrintRMcollection"
Attribute VB_Base = "0{11BCD717-E3F4-44FD-AB32-ED7FF0EF9A6C}{2A771C8F-5578-495B-B1FB-AADC67864666}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Option Explicit
Private Sub UserForm_Activate()
    
    'set active printer in label printer address
    LbPrinterRmCol = Application.ActivePrinter
    
    'load orientation
    CbOrientationRmCol.AddItem "Portrait"
    CbOrientationRmCol.AddItem "Landscape"
    
    CbOrientationRmCol.Value = ws_Welcome.Range("AC16").Value
    
    'paper size
    CbPaperSizeRmCol.AddItem "Letter"
    CbPaperSizeRmCol.AddItem "Legal"
    CbPaperSizeRmCol.AddItem "A4"
    CbPaperSizeRmCol.AddItem "A3"
    
    CbPaperSizeRmCol.Value = ws_Welcome.Range("AC2")

    'set number of copies
    TxbCopyRmCol.Value = ws_Welcome.Range("AC15").Value

    'Select month to print
    CkbMth1RmCol.Caption = VBA.Format(ws_RMcollection.Range("B6"), "MMMM-YYYY"): CkbMth1RmCol.Value = ws_Welcome.Range("AC3").Value
    CkbMth2RmCol.Caption = VBA.Format(ws_RMcollection.Range("B45"), "MMMM-YYYY"): CkbMth2RmCol.Value = ws_Welcome.Range("AC4").Value
    CkbMth3RmCol.Caption = VBA.Format(ws_RMcollection.Range("B84"), "MMMM-YYYY"): CkbMth3RmCol.Value = ws_Welcome.Range("AC5").Value
    CkbMth4RmCol.Caption = VBA.Format(ws_RMcollection.Range("B123"), "MMMM-YYYY"): CkbMth4RmCol.Value = ws_Welcome.Range("AC6").Value
    CkbMth5RmCol.Caption = VBA.Format(ws_RMcollection.Range("B162"), "MMMM-YYYY"): CkbMth5RmCol.Value = ws_Welcome.Range("AC7").Value
    CkbMth6RmCol.Caption = VBA.Format(ws_RMcollection.Range("B201"), "MMMM-YYYY"): CkbMth6RmCol.Value = ws_Welcome.Range("AC8").Value
    CkbMth7RmCol.Caption = VBA.Format(ws_RMcollection.Range("B240"), "MMMM-YYYY"): CkbMth7RmCol.Value = ws_Welcome.Range("AC9").Value
    CkbMth8RmCol.Caption = VBA.Format(ws_RMcollection.Range("B279"), "MMMM-YYYY"): CkbMth8RmCol.Value = ws_Welcome.Range("AC10").Value
    CkbMth9RmCol.Caption = VBA.Format(ws_RMcollection.Range("B318"), "MMMM-YYYY"): CkbMth9RmCol.Value = ws_Welcome.Range("AC11").Value
    CkbMth10RmCol.Caption = VBA.Format(ws_RMcollection.Range("B357"), "MMMM-YYYY"): CkbMth10RmCol.Value = ws_Welcome.Range("AC12").Value
    CkbMth11RmCol.Caption = VBA.Format(ws_RMcollection.Range("B396"), "MMMM-YYYY"): CkbMth11RmCol.Value = ws_Welcome.Range("AC13").Value
    CkbMth12RmCol.Caption = VBA.Format(ws_RMcollection.Range("B435"), "MMMM-YYYY"): CkbMth12RmCol.Value = ws_Welcome.Range("AC14").Value
    CkbMth13RmCol.Caption = VBA.Format(ws_RMcollection.Range("B474"), "MMMM-YYYY"): CkbMth13RmCol.Value = ws_Welcome.Range("AC20").Value
End Sub
Private Sub ImgPrinterRmCol_Click()
    Application.Dialogs(xlDialogPrinterSetup).Show
    LbPrinterRmCol = Application.ActivePrinter
End Sub
Private Sub ImgPrintRmColPDF_Click()

    PrintPDF = True
    Call ImgPrintRmCol_Click
End Sub
Private Sub ImgPrintRmCol_Click()
Dim oPaperSize As Byte, MyRange As String, Irow As Byte, MyOrientation As Byte

If (TxbCopyRmCol.Value < 1 Or Not IsNumeric(TxbCopyRmCol.Value)) Then GoTo Error_Userform

With Application: .ScreenUpdating = False: .EnableEvents = False: .Calculation = xlCalculationManual: End With

On Error GoTo Error_Userform
Application.EnableEvents = False
    ws_Welcome.Range("AC2").Value = CbPaperSizeRmCol.Value
    ws_Welcome.Range("AC15").Value = TxbCopyRmCol.Value
    ws_Welcome.Range("AC3").Value = CkbMth1RmCol.Value: ws_Welcome.Range("AC4").Value = CkbMth2RmCol.Value
    ws_Welcome.Range("AC5").Value = CkbMth3RmCol.Value: ws_Welcome.Range("AC6").Value = CkbMth4RmCol.Value
    ws_Welcome.Range("AC7").Value = CkbMth5RmCol.Value: ws_Welcome.Range("AC8").Value = CkbMth6RmCol.Value
    ws_Welcome.Range("AC9").Value = CkbMth7RmCol.Value: ws_Welcome.Range("AC10").Value = CkbMth8RmCol.Value
    ws_Welcome.Range("AC11").Value = CkbMth9RmCol.Value: ws_Welcome.Range("AC12").Value = CkbMth10RmCol.Value
    ws_Welcome.Range("AC13").Value = CkbMth11RmCol.Value: ws_Welcome.Range("AC14").Value = CkbMth12RmCol.Value
    ws_Welcome.Range("AC20").Value = CkbMth13RmCol.Value
    
    If (ws_Welcome.Range("AC3").Value = False And ws_Welcome.Range("AC4").Value = False And _
        ws_Welcome.Range("AC5").Value = False And ws_Welcome.Range("AC6").Value = False And _
        ws_Welcome.Range("AC7").Value = False And ws_Welcome.Range("AC8").Value = False And _
        ws_Welcome.Range("AC9").Value = False And ws_Welcome.Range("AC10").Value = False And _
        ws_Welcome.Range("AC11").Value = False And ws_Welcome.Range("AC12").Value = False And _
        ws_Welcome.Range("AC13").Value = False And ws_Welcome.Range("AC14").Value = False And _
        ws_Welcome.Range("AC20").Value = False) Then
            MsgBox "There is nothing to print. Please select a month to print.", vbInformation, "Nothing to print"
            With Application: .ScreenUpdating = True: .EnableEvents = True: .Calculation = xlCalculationAutomatic: End With
            End
    End If
    
    'orientation
    Select Case ws_Welcome.Range("AC16").Value
        Case "Portrait": MyOrientation = xlPortrait
        Case "Landscape": MyOrientation = xlLandscape
    End Select
    
    'paper size
    Select Case ws_Welcome.Range("AC2").Value
        Case "A4": oPaperSize = xlPaperA4
        Case "A3": oPaperSize = xlPaperA3
        Case "Letter": oPaperSize = xlPaperLetter
        Case "Legal": oPaperSize = xlPaperLegal
    End Select
    
    MyRange = vbNullString
   
    For Irow = 3 To 14 'loop through the welcome tab where the info is stored to print the day by day
        Select Case ws_Welcome.Range("AC" & Irow).Value
            Case True
                If Irow = 3 Then MyRange = "$B$3:$BZ$39"
                If Irow = 4 Then
                    If MyRange > vbNullString Then MyRange = MyRange & ",$B$42:$BZ$78"
                    If MyRange = vbNullString Then MyRange = MyRange & "$B$42:$BZ$78"
                End If
                If Irow = 5 Then
                    If MyRange > vbNullString Then MyRange = MyRange & ",$B$81:$BZ$117" Else MyRange = MyRange & "$B$81:$BZ$117"
                End If
                If Irow = 6 Then
                    If MyRange > vbNullString Then MyRange = MyRange & ",$B$120:$BZ$156" Else MyRange = MyRange & "$B$120:$BZ$156"
                End If
                If Irow = 7 Then
                    If MyRange > vbNullString Then MyRange = MyRange & ",$B$159:$BZ$195" Else MyRange = MyRange & "$B$159:$BZ$195"
                End If
                If Irow = 8 Then
                    If MyRange > vbNullString Then MyRange = MyRange & ",$B$198:$BZ$234" Else MyRange = MyRange & "$B$198:$BZ$234"
                End If
                If Irow = 9 Then
                    If MyRange > vbNullString Then MyRange = MyRange & ",$B$237:$BZ$273" Else MyRange = MyRange & "$B$237:$BZ$273"
                End If
                If Irow = 10 Then
                    If MyRange > vbNullString Then MyRange = MyRange & ",$B$276:$BZ$312" Else MyRange = MyRange & "$B$276:$BZ$312"
                End If
                If Irow = 11 Then
                    If MyRange > vbNullString Then MyRange = MyRange & ",$B$315:$BZ$351" Else MyRange = MyRange & "$B$315:$BZ$351"
                End If
                If Irow = 12 Then
                    If MyRange > vbNullString Then MyRange = MyRange & ",$B$354:$BZ$390" Else MyRange = MyRange & "$B$354:$BZ$390"
                End If
                If Irow = 13 Then
                    If MyRange > vbNullString Then MyRange = MyRange & ",$B$393:$BZ$429" Else MyRange = MyRange & "$B$393:$BZ$429"
                End If
                If Irow = 14 Then
                    If MyRange > vbNullString Then MyRange = MyRange & ",$B$432:$BZ$468" Else MyRange = MyRange & "$B$432:$BZ$468"
                End If
        End Select
    Next
    
    If ws_Welcome.Range("AC20").Value = True Then
        If MyRange > vbNullString Then MyRange = MyRange & ",$B$471:$BZ$507" Else MyRange = MyRange & "$B$471:$BZ$507"
    End If
    
    Application.PrintCommunication = False
    With ws_RMcollection.PageSetup
        .PrintTitleRows = ""
        .PrintTitleColumns = ""
        .CenterFooter = ""
    End With
    Application.PrintCommunication = True
    ws_RMcollection.PageSetup.PrintArea = MyRange
    Application.PrintCommunication = False
    With ws_RMcollection.PageSetup
        .LeftHeader = ""
        .CenterHeader = ""
        .RightHeader = ""
        .LeftFooter = ""
        .CenterFooter = "&20Marriott Confidential Proprietary Information     "
        .RightFooter = ""
        .LeftMargin = Application.InchesToPoints(0.2)
        .RightMargin = Application.InchesToPoints(0.2)
        .TopMargin = Application.InchesToPoints(0.2)
        .BottomMargin = Application.InchesToPoints(0.25)
        .HeaderMargin = Application.InchesToPoints(0.3)
        .FooterMargin = Application.InchesToPoints(0.1)
        .PrintHeadings = False
        .PrintGridlines = False
        .CenterHorizontally = True
        .CenterVertically = False
        .Orientation = xlLandscape
        .Draft = False
        .PaperSize = oPaperSize
        .FirstPageNumber = xlAutomatic
        .Order = xlDownThenOver
        .BlackAndWhite = False
        .Zoom = False
        .FitToPagesWide = 1
        .FitToPagesTall = 1
        .PrintErrors = xlPrintErrorsDisplayed
        .OddAndEvenPagesHeaderFooter = False
        .DifferentFirstPageHeaderFooter = False
        .ScaleWithDocHeaderFooter = True
        .AlignMarginsHeaderFooter = True
    End With
    Application.PrintCommunication = True
    
    Select Case PrintPDF
        Case False
            ActiveWindow.SelectedSheets.PrintOut Copies:=ws_Welcome.Range("AC15").Value, Collate:=True, IgnorePrintAreas:=False
        Case True
            ActiveSheet.ExportAsFixedFormat Type:=xlTypePDF, _
                Filename:=ActiveWorkbook.Path & "\" & ws_Setup.Range("C15").Value & " - OYv2 RM Collection " & VBA.Format(ws_DayXDay.Range("DT3").Value, "MMM-DD-YYYY") & ".pdf", _
                Quality:=xlQualityStandard, IncludeDocProperties:=True, IgnorePrintAreas:=False, OpenAfterPublish:=True
    End Select
    
    With ws_RMcollection.PageSetup
        .PrintArea = ""
        .PrintTitleRows = ""
        .CenterFooter = ""
    End With
    
    Unload Me
    Set ufrmPrintRMcollection = Nothing
    
    ws_RMcollection.Activate
    ws_RMcollection.DisplayPageBreaks = False
    ws_RMcollection.Range("D6").Activate
    On Error GoTo 0
    oPaperSize = Empty: MyRange = Empty: Irow = Empty: MyOrientation = Empty
    With Application: .ScreenUpdating = True: .EnableEvents = True: .Calculation = xlCalculationAutomatic: End With
    End

Error_Userform:
    MsgBox "Nothing was selected, printing cancelled"
    ActiveSheet.DisplayPageBreaks = False
    On Error GoTo 0
    Unload Me
    Set ufrmPrintRMcollection = Nothing
    oPaperSize = Empty: MyRange = Empty: Irow = Empty: MyOrientation = Empty
    With Application: .ScreenUpdating = True: .EnableEvents = True: .Calculation = xlCalculationAutomatic: End With
    End
End Sub

Private Sub ImgCloseRmCol_Click()
    Unload Me
    Set ufrmPrintRMcollection = Nothing
End Sub
Attribute VB_Name = "ufrmPrintSeg"
Attribute VB_Base = "0{B2B60009-8A1D-4F2E-B6BE-D364515CBFDE}{A0A75B46-ED42-48FA-A033-310F08642A3A}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Option Explicit

Private Sub UserForm_Activate()
    
    'set active printer in label printer address
    LbPrinter_Seg = Application.ActivePrinter
    
    'paper size
    CbPaperSize_Seg.AddItem "Letter"
    CbPaperSize_Seg.AddItem "Legal"
    CbPaperSize_Seg.AddItem "A4"
    CbPaperSize_Seg.AddItem "A3"
    
    CbPaperSize_Seg.Value = ws_Welcome.Range("AB2")

    'set number of copies
    TxbCopy_Seg.Value = ws_Welcome.Range("AB15").Value

    'Select month to print
    CkbMth1_Seg.Caption = VBA.Format(ws_Segmentation.Range("B6"), "MMMM-YYYY"): CkbMth1_Seg.Value = ws_Welcome.Range("AB3").Value
    CkbMth2_Seg.Caption = VBA.Format(ws_Segmentation.Range("B45"), "MMMM-YYYY"): CkbMth2_Seg.Value = ws_Welcome.Range("AB4").Value
    CkbMth3_Seg.Caption = VBA.Format(ws_Segmentation.Range("B84"), "MMMM-YYYY"): CkbMth3_Seg.Value = ws_Welcome.Range("AB5").Value
    CkbMth4_Seg.Caption = VBA.Format(ws_Segmentation.Range("B123"), "MMMM-YYYY"): CkbMth4_Seg.Value = ws_Welcome.Range("AB6").Value
    CkbMth5_Seg.Caption = VBA.Format(ws_Segmentation.Range("B162"), "MMMM-YYYY"): CkbMth5_Seg.Value = ws_Welcome.Range("AB7").Value
    CkbMth6_Seg.Caption = VBA.Format(ws_Segmentation.Range("B201"), "MMMM-YYYY"): CkbMth6_Seg.Value = ws_Welcome.Range("AB8").Value
    CkbMth7_Seg.Caption = VBA.Format(ws_Segmentation.Range("B240"), "MMMM-YYYY"): CkbMth7_Seg.Value = ws_Welcome.Range("AB9").Value
    CkbMth8_Seg.Caption = VBA.Format(ws_Segmentation.Range("B279"), "MMMM-YYYY"): CkbMth8_Seg.Value = ws_Welcome.Range("AB10").Value
    CkbMth9_Seg.Caption = VBA.Format(ws_Segmentation.Range("B318"), "MMMM-YYYY"): CkbMth9_Seg.Value = ws_Welcome.Range("AB11").Value
    CkbMth10_Seg.Caption = VBA.Format(ws_Segmentation.Range("B357"), "MMMM-YYYY"): CkbMth10_Seg.Value = ws_Welcome.Range("AB12").Value
    CkbMth11_Seg.Caption = VBA.Format(ws_Segmentation.Range("B396"), "MMMM-YYYY"): CkbMth11_Seg.Value = ws_Welcome.Range("AB13").Value
    CkbMth12_Seg.Caption = VBA.Format(ws_Segmentation.Range("B435"), "MMMM-YYYY"): CkbMth12_Seg.Value = ws_Welcome.Range("AB14").Value
    CkbMth13_Seg.Caption = VBA.Format(ws_Segmentation.Range("B474"), "MMMM-YYYY"): CkbMth13_Seg.Value = ws_Welcome.Range("AB20").Value
End Sub
Private Sub ImgPrinter_Seg_Click()
    Application.Dialogs(xlDialogPrinterSetup).Show
    LbPrinter_Seg = Application.ActivePrinter
End Sub
Private Sub ImgPrint_SegPDF_Click()

    PrintPDF = True
    Call ImgPrint_Seg_Click
End Sub

Private Sub ImgPrint_Seg_Click()
Dim oPaperSize As Byte, MyRange As String, Irow As Byte

If (TxbCopy_Seg.Value < 1 Or Not IsNumeric(TxbCopy_Seg.Value)) Then GoTo Error_Userform

ufrmPrintSeg.Hide

On Error GoTo Error_Userform
Application.EnableEvents = False
    ws_Welcome.Range("AB2").Value = CbPaperSize_Seg.Value
    ws_Welcome.Range("AB15").Value = TxbCopy_Seg.Value
    ws_Welcome.Range("AB3").Value = CkbMth1_Seg.Value: ws_Welcome.Range("AB4").Value = CkbMth2_Seg.Value
    ws_Welcome.Range("AB5").Value = CkbMth3_Seg.Value: ws_Welcome.Range("AB6").Value = CkbMth4_Seg.Value
    ws_Welcome.Range("AB7").Value = CkbMth5_Seg.Value: ws_Welcome.Range("AB8").Value = CkbMth6_Seg.Value
    ws_Welcome.Range("AB9").Value = CkbMth7_Seg.Value: ws_Welcome.Range("AB10").Value = CkbMth8_Seg.Value
    ws_Welcome.Range("AB11").Value = CkbMth9_Seg.Value: ws_Welcome.Range("AB12").Value = CkbMth10_Seg.Value
    ws_Welcome.Range("AB13").Value = CkbMth11_Seg.Value: ws_Welcome.Range("AB14").Value = CkbMth12_Seg.Value
    ws_Welcome.Range("AB20").Value = CkbMth13_Seg.Value
    
   If (ws_Welcome.Range("AB3").Value = False And ws_Welcome.Range("AB4").Value = False And _
    ws_Welcome.Range("AB5").Value = False And ws_Welcome.Range("AB6").Value = False And _
    ws_Welcome.Range("AB7").Value = False And ws_Welcome.Range("AB8").Value = False And _
    ws_Welcome.Range("AB9").Value = False And ws_Welcome.Range("AB10").Value = False And _
    ws_Welcome.Range("AB11").Value = False And ws_Welcome.Range("AB12").Value = False And _
    ws_Welcome.Range("AB13").Value = False And ws_Welcome.Range("AB14").Value = False And _
    ws_Welcome.Range("AB20").Value = False) Then
        MsgBox "There is nothing to print. Please select a month to print.", vbInformation, "Nothing to print"
        With Application: .ScreenUpdating = True: .EnableEvents = True: .Calculation = xlCalculationAutomatic: End With
        End
    End If
    
    Select Case ws_Welcome.Range("AB2").Value
        Case "A4": oPaperSize = xlPaperA4
        Case "A3": oPaperSize = xlPaperA3
        Case "Letter": oPaperSize = xlPaperLetter
        Case "Legal": oPaperSize = xlPaperLegal
    End Select
    
    MyRange = vbNullString
   
    For Irow = 3 To 14 'loop through the welcome tab where the info is stored to print the day by day
        Select Case ws_Welcome.Range("AB" & Irow).Value
            Case True
                If Irow = 3 Then MyRange = "$B$5:$BF$39"
                If Irow = 4 Then
                    If MyRange > vbNullString Then MyRange = MyRange & ",$B$44:$BF$78"
                    If MyRange = vbNullString Then MyRange = MyRange & "$B$44:$BF$78"
                End If
                If Irow = 5 Then
                    If MyRange > vbNullString Then MyRange = MyRange & ",$B$83:$BF$117" Else MyRange = MyRange & "$B$83:$BF$117"
                End If
                If Irow = 6 Then
                    If MyRange > vbNullString Then MyRange = MyRange & ",$B$122:$BF$156" Else MyRange = MyRange & "$B$122:$BF$156"
                End If
                If Irow = 7 Then
                    If MyRange > vbNullString Then MyRange = MyRange & ",$B$161:$BF$195" Else MyRange = MyRange & "$B$161:$BF$195"
                End If
                If Irow = 8 Then
                    If MyRange > vbNullString Then MyRange = MyRange & ",$B$200:$BF$234" Else MyRange = MyRange & "$B$200:$BF$234"
                End If
                If Irow = 9 Then
                    If MyRange > vbNullString Then MyRange = MyRange & ",$B$239:$BF$273" Else MyRange = MyRange & "$B$239:$BF$273"
                End If
                If Irow = 10 Then
                    If MyRange > vbNullString Then MyRange = MyRange & ",$B$278:$BF$312" Else MyRange = MyRange & "$B$278:$BF$312"
                End If
                If Irow = 11 Then
                    If MyRange > vbNullString Then MyRange = MyRange & ",$B$317:$BF$351" Else MyRange = MyRange & "$B$317:$BF$351"
                End If
                If Irow = 12 Then
                    If MyRange > vbNullString Then MyRange = MyRange & ",$B$356:$BF$390" Else MyRange = MyRange & "$B$356:$BF$390"
                End If
                If Irow = 13 Then
                    If MyRange > vbNullString Then MyRange = MyRange & ",$B$395:$BF$429" Else MyRange = MyRange & "$B$395:$BF$429"
                End If
                If Irow = 14 Then
                    If MyRange > vbNullString Then MyRange = MyRange & ",$B$434:$BF$468" Else MyRange = MyRange & "$B$434:$BF$468"
                End If
        End Select
    Next
    If ws_Welcome.Range("AB20").Value = True Then
        If MyRange > vbNullString Then MyRange = MyRange & ",$B$473:$BF$507" Else MyRange = MyRange & "$B$473:$BF$507"
    End If
    
    Application.PrintCommunication = False
    With ws_Segmentation.PageSetup
        .PrintTitleRows = "$4:$4"
        .PrintTitleColumns = ""
        .CenterFooter = ""
    End With
    Application.PrintCommunication = True
    ws_Segmentation.PageSetup.PrintArea = MyRange
    Application.PrintCommunication = False
    With ws_Segmentation.PageSetup
        .LeftHeader = ""
        .CenterHeader = ""
        .RightHeader = ""
        .LeftFooter = ""
        .CenterFooter = "&20Marriott Confidential Proprietary Information     "
        .RightFooter = ""
        .LeftMargin = Application.InchesToPoints(0.2)
        .RightMargin = Application.InchesToPoints(0.2)
        .TopMargin = Application.InchesToPoints(0.25)
        .BottomMargin = Application.InchesToPoints(0.3)
        .HeaderMargin = Application.InchesToPoints(0.3)
        .FooterMargin = Application.InchesToPoints(0.1)
        .PrintHeadings = False
        .PrintGridlines = False
        .CenterHorizontally = True
        .CenterVertically = False
        .Orientation = xlLandscape
        .Draft = False
        .PaperSize = oPaperSize
        .FirstPageNumber = xlAutomatic
        .Order = xlDownThenOver
        .BlackAndWhite = False
        .Zoom = False
        .FitToPagesWide = 1
        .FitToPagesTall = 1
        .PrintErrors = xlPrintErrorsDisplayed
        .OddAndEvenPagesHeaderFooter = False
        .DifferentFirstPageHeaderFooter = False
        .ScaleWithDocHeaderFooter = True
        .AlignMarginsHeaderFooter = True
    End With
    Application.PrintCommunication = True
    
    Select Case PrintPDF
        Case False
            ActiveWindow.SelectedSheets.PrintOut Copies:=ws_Welcome.Range("AB15").Value, Collate:=True, IgnorePrintAreas:=False
        Case True
            ActiveSheet.ExportAsFixedFormat Type:=xlTypePDF, _
                Filename:=ActiveWorkbook.Path & "\" & ws_Setup.Range("C15").Value & " - OYv2 Segmentation " & VBA.Format(ws_DayXDay.Range("DT3").Value, "MMM-DD-YYYY") & ".pdf", _
                Quality:=xlQualityStandard, IncludeDocProperties:=True, IgnorePrintAreas:=False, OpenAfterPublish:=True
    End Select
    
    With ws_Segmentation.PageSetup
        .PrintArea = ""
        .PrintTitleRows = ""
        .CenterFooter = ""
    End With
    
    Unload Me
    Set ufrmPrintSeg = Nothing
    ws_Segmentation.Activate
    ws_Segmentation.DisplayPageBreaks = False
    ws_Segmentation.Range("D6").Activate
    On Error GoTo 0
    oPaperSize = Empty: MyRange = Empty: Irow = Empty
    With Application: .ScreenUpdating = True: .EnableEvents = True: .Calculation = xlCalculationAutomatic: End With
    End

Error_Userform:
    MsgBox "Nothing was selected, printing cancelled"
    ActiveSheet.DisplayPageBreaks = False
    On Error GoTo 0
    Unload Me
    Set ufrmPrintSeg = Nothing
    oPaperSize = Empty: MyRange = Empty: Irow = Empty
    With Application: .ScreenUpdating = True: .EnableEvents = True: .Calculation = xlCalculationAutomatic: End With
    End
End Sub
Private Sub ImgClose_seg_Click()
    Unload Me
    Set ufrmPrintSeg = Nothing
End Sub

Attribute VB_Name = "ufrmSSP_Setup"
Attribute VB_Base = "0{227483CB-7FB3-4196-8B85-32B6364DA4CC}{9360E6F0-1E1C-47ED-AD20-EE41D6807459}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Option Explicit

Private Sub UserForm_Initialize() ' load userform based on the tab selected
Dim Irow As Long, MyListbox As Control, MyTab As Control, iCol As Long
Dim ws As Worksheet

Application.Calculation = xlCalculationManual
    
    Call PicFormula 'remove all pictures formulas from custom tabs
    
    'first apply all custom slide to the master list
    sh_PkgLayout.Range("C42:C" & sh_PkgLayout.Cells(Rows.Count, 3).End(xlUp).Row + 1).ClearContents
    For Each ws In Worksheets
        If (VBA.Left(ws.CodeName, 9) Like "wsCustom*" And ws.CodeName <> "wsCustom") Then
                sh_PkgLayout.Range("C" & sh_PkgLayout.Cells(Rows.Count, 3).End(xlUp).Row + 1).Value = ws.Name
        End If
    Next
    
    'check if any preselect tab doesn't exist anymore
    For iCol = 5 To 41 Step 4
        For Irow = sh_PkgLayout.Cells(Rows.Count, iCol).End(xlUp).Row To 4 Step -1
            If sh_PkgLayout.Range("C4:C200").Find(sh_PkgLayout.Cells(Irow, iCol), lookat:=xlPart, MatchCase:=True) Is Nothing Then
                sh_PkgLayout.Cells(Irow, iCol).Delete xlUp
            End If
        Next Irow
    Next iCol
Application.Calculation = xlCalculationAutomatic

'assign packet ranges
sh_PkgLayout.Range("E4:E" & sh_PkgLayout.Cells(Rows.Count, 5).End(xlUp).Row + 1).Name = "Packet1"
sh_PkgLayout.Range("I4:I" & sh_PkgLayout.Cells(Rows.Count, 9).End(xlUp).Row + 1).Name = "Packet2"
sh_PkgLayout.Range("M4:M" & sh_PkgLayout.Cells(Rows.Count, 13).End(xlUp).Row + 1).Name = "Packet3"
sh_PkgLayout.Range("Q4:Q" & sh_PkgLayout.Cells(Rows.Count, 17).End(xlUp).Row + 1).Name = "Packet4"
sh_PkgLayout.Range("U4:U" & sh_PkgLayout.Cells(Rows.Count, 21).End(xlUp).Row + 1).Name = "Packet5"
sh_PkgLayout.Range("Y4:Y" & sh_PkgLayout.Cells(Rows.Count, 25).End(xlUp).Row + 1).Name = "Packet6"

Me.TabStrip1.Value = ws_SSP_PPT.Range("N1").Value - 1 'active the tab based on the packet selected.

    For Each MyTab In Me.Controls
        Select Case TypeName(MyTab)
            Case "TabStrip"
                Select Case MyTab.Value
                    Case 0: iCol = 4:  Me.PacketTopics.ControlSource = "PkgLayout!AR1": Me.LbSlideCount.ControlSource = "PkgLayout!F2": Exit For
                    Case 1: iCol = 8:  Me.PacketTopics.ControlSource = "PkgLayout!AR2": Me.LbSlideCount.ControlSource = "PkgLayout!J2": Exit For
                    Case 2: iCol = 12: Me.PacketTopics.ControlSource = "PkgLayout!AR3": Me.LbSlideCount.ControlSource = "PkgLayout!N2": Exit For
                    Case 3: iCol = 16: Me.PacketTopics.ControlSource = "PkgLayout!AR4": Me.LbSlideCount.ControlSource = "PkgLayout!R2": Exit For
                    Case 4: iCol = 20: Me.PacketTopics.ControlSource = "PkgLayout!AR5": Me.LbSlideCount.ControlSource = "PkgLayout!V2": Exit For
                    Case 5: iCol = 24: Me.PacketTopics.ControlSource = "PkgLayout!AR6": Me.LbSlideCount.ControlSource = "PkgLayout!Z2": Exit For
'                    Case 6: iCol = 28: Me.PacketTopics.ControlSource = "PkgLayout!AR7": Me.LbSlideCount.ControlSource = "PkgLayout!AD2": Exit For
'                    Case 7: iCol = 32: Me.PacketTopics.ControlSource = "PkgLayout!AR8": Me.LbSlideCount.ControlSource = "PkgLayout!AH2": Exit For
'                    Case 8: iCol = 36: Me.PacketTopics.ControlSource = "PkgLayout!AR9": Me.LbSlideCount.ControlSource = "PkgLayout!AL2": Exit For
'                    Case 9: iCol = 40: Me.PacketTopics.ControlSource = "PkgLayout!AR10": Me.LbSlideCount.ControlSource = "PkgLayout!AP2": Exit For
                End Select
        End Select
    Next
    
    Me.ListBox_M.Clear
    Me.ListBox_P.Clear
    
    For Each MyListbox In Me.Controls
        Select Case TypeName(MyListbox)
            Case "ListBox"
                Select Case VBA.Right(MyListbox.Name, 1)
                    Case "M" 'load what wasn't selected
                        With MyListbox
                            For Irow = 4 To sh_PkgLayout.Cells(Rows.Count, 3).End(xlUp).Row 'use column C which is the master list
                                If sh_PkgLayout.Cells(Irow, iCol).Value = True Then .AddItem sh_PkgLayout.Cells(Irow, iCol - 1).Value
                            Next
                        End With
                    
                    Case "P" 'load what was selected for the packet
                        With MyListbox
                            For Irow = 4 To sh_PkgLayout.Cells(Rows.Count, iCol + 1).End(xlUp).Row
                                If sh_PkgLayout.Cells(Irow, iCol + 1).Value <> vbNullString Then .AddItem sh_PkgLayout.Cells(Irow, iCol + 1).Value
                            Next
                        End With
                    
                        If MyListbox.ListCount > 0 Then
                            Me.LbGenerate.Visible = True: Me.LbSlideCount.Visible = True
                        Else
                            Me.LbGenerate.Visible = False: Me.LbSlideCount.Visible = False
                        End If
                End Select
        End Select
    Next
    
    Irow = Empty: iCol = Empty: Set MyListbox = Nothing: Set MyTab = Nothing: Set ws = Nothing
    
End Sub
Private Sub TabStrip1_Click(ByVal Index As Long) 'load data to the listbox based on the tab selected
Dim Irow As Long, MyListbox As Control, MyTab As Control, iCol As Long
    
    Application.Calculation = xlCalculationManual
    

    For Each MyTab In Me.Controls
        Select Case TypeName(MyTab)
            Case "TabStrip"
                Select Case MyTab.Value
                    Case 0: iCol = 4:  Me.PacketTopics.ControlSource = "PkgLayout!AR1": Me.LbSlideCount.ControlSource = "PkgLayout!F2": ws_SSP_PPT.Range("N1").Value = MyTab.Value + 1: Exit For
                    Case 1: iCol = 8:  Me.PacketTopics.ControlSource = "PkgLayout!AR2": Me.LbSlideCount.ControlSource = "PkgLayout!J2": ws_SSP_PPT.Range("N1").Value = MyTab.Value + 1: Exit For
                    Case 2: iCol = 12: Me.PacketTopics.ControlSource = "PkgLayout!AR3": Me.LbSlideCount.ControlSource = "PkgLayout!N2": ws_SSP_PPT.Range("N1").Value = MyTab.Value + 1: Exit For
                    Case 3: iCol = 16: Me.PacketTopics.ControlSource = "PkgLayout!AR4": Me.LbSlideCount.ControlSource = "PkgLayout!R2": ws_SSP_PPT.Range("N1").Value = MyTab.Value + 1: Exit For
                    Case 4: iCol = 20: Me.PacketTopics.ControlSource = "PkgLayout!AR5": Me.LbSlideCount.ControlSource = "PkgLayout!V2": ws_SSP_PPT.Range("N1").Value = MyTab.Value + 1: Exit For
                    Case 5: iCol = 24: Me.PacketTopics.ControlSource = "PkgLayout!AR6": Me.LbSlideCount.ControlSource = "PkgLayout!Z2": ws_SSP_PPT.Range("N1").Value = MyTab.Value + 1: Exit For
'                    Case 6: iCol = 28: Me.PacketTopics.ControlSource = "PkgLayout!AR7": Me.LbSlideCount.ControlSource = "PkgLayout!AD2": ws_SSP_PPT.Range("N1").Value = MyTab.Value + 1: Exit For
'                    Case 7: iCol = 32: Me.PacketTopics.ControlSource = "PkgLayout!AR8": Me.LbSlideCount.ControlSource = "PkgLayout!AH2": ws_SSP_PPT.Range("N1").Value = MyTab.Value + 1: Exit For
'                    Case 8: iCol = 36: Me.PacketTopics.ControlSource = "PkgLayout!AR9": Me.LbSlideCount.ControlSource = "PkgLayout!AL2": ws_SSP_PPT.Range("N1").Value = MyTab.Value + 1: Exit For
'                    Case 9: iCol = 40: Me.PacketTopics.ControlSource = "PkgLayout!AR10": Me.LbSlideCount.ControlSource = "PkgLayout!AP2": ws_SSP_PPT.Range("N1").Value = MyTab.Value + 1: Exit For
                End Select
        End Select
    Next
    
    Me.ListBox_M.Clear
    Me.ListBox_P.Clear
    
    For Each MyListbox In Me.Controls
        Select Case TypeName(MyListbox)
            Case "ListBox"
                Select Case VBA.Right(MyListbox.Name, 1)
                    Case "M" 'load what wasn't selected
                        With MyListbox
                            For Irow = 4 To sh_PkgLayout.Cells(Rows.Count, 3).End(xlUp).Row 'use column C which is the master list
                                If sh_PkgLayout.Cells(Irow, iCol).Value = True Then .AddItem sh_PkgLayout.Cells(Irow, iCol - 1).Value
                            Next
                        End With
                    
                    Case "P" 'load what was selected for the packet
                        With MyListbox
                            For Irow = 4 To sh_PkgLayout.Cells(Rows.Count, iCol + 1).End(xlUp).Row
                                If sh_PkgLayout.Cells(Irow, iCol + 1).Value <> vbNullString Then .AddItem sh_PkgLayout.Cells(Irow, iCol + 1).Value
                            Next
                        End With
                    
                        If MyListbox.ListCount > 0 Then
                            Me.LbGenerate.Visible = True: Me.LbSlideCount.Visible = True
                        Else
                            Me.LbGenerate.Visible = False: Me.LbSlideCount.Visible = False
                        End If
                End Select
        End Select
    Next
    
    Irow = Empty: iCol = Empty: Set MyListbox = Nothing: Set MyTab = Nothing
    
    Application.Calculation = xlCalculationAutomatic
        
End Sub

Private Sub cmd_MovetoPacket_Click() 'add 1 or more items to packet, packet is driven by the tab selected
Dim MyItem As Long, MyTab As Control, iCol As Long
    
    Application.Calculation = xlCalculationManual
    
    'add item to the packet
    For MyItem = 0 To Me.ListBox_M.ListCount - 1
        If Me.ListBox_M.Selected(MyItem) = True Then Me.ListBox_P.AddItem Me.ListBox_M.List(MyItem)
    Next MyItem

    'remove item from the master
    For MyItem = Me.ListBox_M.ListCount - 1 To 0 Step -1
        If Me.ListBox_M.Selected(MyItem) = True Then Me.ListBox_M.RemoveItem MyItem
    Next MyItem
    
    For Each MyTab In Me.Controls
        Select Case TypeName(MyTab)
            Case "TabStrip"
                Select Case MyTab.Value
                    Case 0: iCol = 5: Exit For:  Case 1: iCol = 9: Exit For
                    Case 2: iCol = 13: Exit For: Case 3: iCol = 17: Exit For
                    Case 4: iCol = 21: Exit For: Case 5: iCol = 25: Exit For
'                    Case 6: iCol = 29: Exit For: Case 7: iCol = 33: Exit For
'                    Case 8: iCol = 37: Exit For: Case 9: iCol = 41: Exit For
                End Select
        End Select
    Next
    
    'save the new list
    sh_PkgLayout.Range(sh_PkgLayout.Cells(4, iCol), sh_PkgLayout.Cells(104, iCol)).ClearContents
    For MyItem = 0 To Me.ListBox_P.ListCount - 1
        sh_PkgLayout.Cells(MyItem + 4, iCol) = Me.ListBox_P.List(MyItem)
    Next MyItem
    
    If Me.ListBox_P.ListCount > 0 Then
        Me.LbGenerate.Visible = True: Me.LbSlideCount.Visible = True
    Else
        Me.LbGenerate.Visible = False: Me.LbSlideCount.Visible = False
    End If
    
    iCol = Empty: MyItem = Empty: Set MyTab = Nothing
    
    Application.Calculation = xlCalculationAutomatic
    
End Sub
Private Sub cmd_MoveallPacket_Click() 'move all items to packet, packet is driven by the tab selected
Dim MyItem As Long, MyTab As Control, iCol As Long
    
    Application.Calculation = xlCalculationManual
    
    For MyItem = 0 To Me.ListBox_M.ListCount - 1
        Me.ListBox_P.AddItem Me.ListBox_M.List(MyItem)
    Next MyItem

    Me.ListBox_M.Clear
    
    For Each MyTab In Me.Controls
        Select Case TypeName(MyTab)
            Case "TabStrip"
                Select Case MyTab.Value
                    Case 0: iCol = 5: Exit For:  Case 1: iCol = 9: Exit For
                    Case 2: iCol = 13: Exit For: Case 3: iCol = 17: Exit For
                    Case 4: iCol = 21: Exit For: Case 5: iCol = 25: Exit For
'                    Case 6: iCol = 29: Exit For: Case 7: iCol = 33: Exit For
'                    Case 8: iCol = 37: Exit For: Case 9: iCol = 41: Exit For
                End Select
        End Select
    Next

    sh_PkgLayout.Range(sh_PkgLayout.Cells(4, iCol), sh_PkgLayout.Cells(104, iCol)).ClearContents
    sh_PkgLayout.Range(sh_PkgLayout.Cells(4, iCol), sh_PkgLayout.Cells(104, iCol)).Value = sh_PkgLayout.Range("C4:C104").Value
    
    Me.LbGenerate.Visible = True: Me.LbSlideCount.Visible = True
    
    iCol = Empty: MyItem = Empty: Set MyTab = Nothing
    
    Application.Calculation = xlCalculationAutomatic
    
End Sub
Private Sub cmd_RemovefromPacket_Click() 'remove 1 item from packet, packet is driven by the tab selected
Dim MyItem As Long, MyTab As Control, iCol As Long, Irow As Long

    Application.Calculation = xlCalculationManual

    For MyItem = Me.ListBox_P.ListCount - 1 To 0 Step -1
        If Me.ListBox_P.Selected(MyItem) = True Then
            Me.ListBox_P.RemoveItem MyItem
            Exit For
        End If
    Next MyItem
    
    For Each MyTab In Me.Controls
        Select Case TypeName(MyTab)
            Case "TabStrip"
                Select Case MyTab.Value
                    Case 0: iCol = 4: Exit For:  Case 1: iCol = 8: Exit For
                    Case 2: iCol = 12: Exit For: Case 3: iCol = 16: Exit For
                    Case 4: iCol = 20: Exit For: Case 5: iCol = 24: Exit For
'                    Case 6: iCol = 28: Exit For: Case 7: iCol = 32: Exit For
'                    Case 8: iCol = 36: Exit For: Case 9: iCol = 40: Exit For
                End Select
        End Select
    Next
    
    'save the new list
    sh_PkgLayout.Range(sh_PkgLayout.Cells(4, iCol + 1), sh_PkgLayout.Cells(104, iCol + 1)).ClearContents
    For MyItem = 0 To Me.ListBox_P.ListCount - 1
        sh_PkgLayout.Cells(MyItem + 4, iCol + 1).Value = Me.ListBox_P.List(MyItem)
    Next MyItem
    
    If Me.ListBox_P.ListCount > 0 Then
        Me.LbGenerate.Visible = True: Me.LbSlideCount.Visible = True
    Else
        Me.LbGenerate.Visible = False: Me.LbSlideCount.Visible = False
    End If

    'rebuilt the master list
    sh_PkgLayout.Calculate
    
    Me.ListBox_M.Clear
    For Irow = 4 To sh_PkgLayout.Cells(Rows.Count, iCol - 1).End(xlUp).Row 'use column C which is the master list
        If sh_PkgLayout.Cells(Irow, iCol).Value = True Then ListBox_M.AddItem sh_PkgLayout.Cells(Irow, iCol - 1).Value
    Next
    
    MyItem = Empty: iCol = Empty: Irow = Empty: Set MyTab = Nothing
    Application.Calculation = xlCalculationAutomatic

End Sub

Private Sub cmd_RemoveAllfromPacket_Click() 'remove all items from packet, packet is driven by the tab selected
Dim MyItem As Long, Irow As Long, MyTab As Control, iCol As Long

Application.Calculation = xlCalculationManual

    For Each MyTab In Me.Controls
        Select Case TypeName(MyTab)
            Case "TabStrip"
                Select Case MyTab.Value
                    Case 0: iCol = 5: Exit For:  Case 1: iCol = 9: Exit For
                    Case 2: iCol = 13: Exit For: Case 3: iCol = 17: Exit For
                    Case 4: iCol = 21: Exit For: Case 5: iCol = 25: Exit For
'                    Case 6: iCol = 29: Exit For: Case 7: iCol = 33: Exit For
'                    Case 8: iCol = 37: Exit For: Case 9: iCol = 41: Exit For
                End Select
        End Select
    Next

    'clear the packet list
    Me.ListBox_P.Clear
    sh_PkgLayout.Range(sh_PkgLayout.Cells(4, iCol), sh_PkgLayout.Cells(104, iCol)).ClearContents
    Me.LbGenerate.Visible = False: Me.LbSlideCount.Visible = False

    'rebuilt the master list
    Me.ListBox_M.Clear
    For Irow = 4 To sh_PkgLayout.Cells(Rows.Count, 3).End(xlUp).Row 'use column C which is the master list
        Me.ListBox_M.AddItem sh_PkgLayout.Cells(Irow, 3).Value
    Next
    
    MyItem = Empty: iCol = Empty: Irow = Empty: Set MyTab = Nothing
    
Application.Calculation = xlCalculationAutomatic

End Sub
Private Sub cmdMoveUp_Click() 'Move up, packet is driven by the tab selected
Dim HoldName As String, MyTab As Control, iCol As Long, Irow As Long, MyItem As Long

Application.Calculation = xlCalculationManual

    With Me.ListBox_P
        If (.ListCount = 0 Or .ListIndex < 1) Then 'if there is nothing selected or item is already at the top then exit
            Exit Sub
        Else   'otherwise we can move the item up
            HoldName = .List(.ListIndex - 1)
            .List(.ListIndex - 1) = .List(.ListIndex)
            .List(.ListIndex) = HoldName
            .Selected(.ListIndex - 1) = True
        End If
    End With
    
    For Each MyTab In Me.Controls
        Select Case TypeName(MyTab)
            Case "TabStrip"
                Select Case MyTab.Value
                    Case 0: iCol = 5: Exit For:  Case 1: iCol = 9: Exit For
                    Case 2: iCol = 13: Exit For: Case 3: iCol = 17: Exit For
                    Case 4: iCol = 21: Exit For: Case 5: iCol = 25: Exit For
'                    Case 6: iCol = 29: Exit For: Case 7: iCol = 33: Exit For
'                    Case 8: iCol = 37: Exit For: Case 9: iCol = 41: Exit For
                End Select
        End Select
    Next

    'save the new packet sequence
    sh_PkgLayout.Range(sh_PkgLayout.Cells(4, iCol), sh_PkgLayout.Cells(104, iCol)).ClearContents
    For MyItem = 0 To Me.ListBox_P.ListCount - 1
        sh_PkgLayout.Cells(MyItem + 4, iCol).Value = Me.ListBox_P.List(MyItem)
    Next MyItem

    HoldName = Empty: Set MyTab = Nothing: iCol = Empty: Irow = Empty: MyItem = Empty
    
    Application.Calculation = xlCalculationAutomatic
    
End Sub
Private Sub cmdMoveDown_Click() 'move down packet is driven by the tab selected
Dim HoldName As String, MyTab As Control, Irow As Long, iCol As Long, MyItem As Long

Application.Calculation = xlCalculationManual

    With Me.ListBox_P
        If (.ListCount = 0 Or .ListIndex + 1 = .ListCount) Then 'if there is nothing selected or item is already at the bottom then exit
            Exit Sub
        Else ' otherwise we can move the item down
            HoldName = .List(.ListIndex + 1)
            .List(.ListIndex + 1) = .List(.ListIndex)
            .List(.ListIndex) = HoldName
            .Selected(.ListIndex + 1) = True
        End If
    End With
    
    For Each MyTab In Me.Controls
        Select Case TypeName(MyTab)
            Case "TabStrip"
                Select Case MyTab.Value
                    Case 0: iCol = 5: Exit For:  Case 1: iCol = 9: Exit For
                    Case 2: iCol = 13: Exit For: Case 3: iCol = 17: Exit For
                    Case 4: iCol = 21: Exit For: Case 5: iCol = 25: Exit For
'                    Case 6: iCol = 29: Exit For: Case 7: iCol = 33: Exit For
'                    Case 8: iCol = 37: Exit For: Case 9: iCol = 41: Exit For
                End Select
        End Select
    Next

    'save the new packet sequence
    sh_PkgLayout.Range(sh_PkgLayout.Cells(4, iCol), sh_PkgLayout.Cells(104, iCol)).ClearContents
    For MyItem = 0 To Me.ListBox_P.ListCount - 1
        sh_PkgLayout.Cells(MyItem + 4, iCol).Value = Me.ListBox_P.List(MyItem)
    Next MyItem
    
    HoldName = Empty: Set MyTab = Nothing: iCol = Empty: Irow = Empty: MyItem = Empty
    Application.Calculation = xlCalculationAutomatic
End Sub

Private Sub UserForm_QueryClose(Cancel As Integer, CloseMode As Integer)
    Call PacketSlides
End Sub
Attribute VB_Name = "ufrmShowHidden"
Attribute VB_Base = "0{DA7E556D-4785-4087-9662-30C0992605A7}{153E2C75-5384-4200-BEA6-051A37E47E84}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Option Explicit





Private Sub UserForm_Initialize()
Dim ws As Worksheet

For Each ws In Worksheets
    If (VBA.Left(ws.CodeName, 9) Like "wsCustom*" And ws.CodeName <> "wsCustom") Then
        Me.lbShowHide.AddItem ws.Name
        Select Case ws.Visible '-1 visible, 0 hidden, 2 veryhidden
            Case Is <> -1
               Me.lbShowHide.Selected(Me.lbShowHide.ListCount - 1) = False
            Case Else
               Me.lbShowHide.Selected(Me.lbShowHide.ListCount - 1) = True
        End Select
    End If
Next

If Me.lbShowHide.ListCount - 1 < 0 Then
    MsgBox "There are currently no custom slide tabs to display.", vbInformation, "No Custom Slides"
    End
End If
Set ws = Nothing

End Sub
Private Sub Apply_Click()
Dim MyItem As Long

    For MyItem = Me.lbShowHide.ListCount - 1 To 0 Step -1
        If Me.lbShowHide.Selected(MyItem) = True Then
            Worksheets(Me.lbShowHide.List(MyItem)).Visible = xlSheetVisible
        Else
            Worksheets(Me.lbShowHide.List(MyItem)).Visible = xlSheetHidden
        End If
    Next MyItem
    
    MyItem = Empty
    Unload Me
End Sub
Attribute VB_Name = "ufrmViewDashSum"
Attribute VB_Base = "0{751A9DBC-548E-496B-85FF-F654212659D1}{CD8DC00D-B6EA-4A04-BBCC-F15C275EF5AB}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Option Explicit


Private Sub UserForm_Initialize()
Dim i As Long, Irow As Byte

    ws_Summary.Unprotect "unlockME"
    
    On Error Resume Next


    Select Case ws_Summary.Range("B1").Value
        Case "All"
            OptAll.Value = True
        Case "FW"
            OptFW.Value = True
    End Select
    i = 0
    For Irow = 8 To 12
        lbSummary.AddItem ws_Summary.Cells(Irow, 3).Value
        If ws_Summary.Rows(Irow).EntireRow.Hidden = False Then lbSummary.Selected(i) = True
        i = i + 1
    Next Irow
    
   
    
    On Error GoTo 0
    
    ws_Summary.Protect "unlockME", DrawingObjects:=True, Contents:=True, Scenarios:=False, AllowFormattingCells:=True, AllowFormattingColumns:=False

    i = Empty: Irow = Empty
End Sub

Private Sub ImgApplySum_Click()
Dim Irow As Long, i As Byte
    
    With Application: .ScreenUpdating = False: .Calculation = xlCalculationManual: End With
    
    ws_Summary.Unprotect "unlockME"
    
    On Error Resume Next
    
    If OptAll.Value = True Then
        ws_Summary.Range("B1").Value = "All"
        ws_Summary.Range("B7:B508").Value = "All"
    End If
        
    For i = 0 To lbSummary.ListCount - 1
        If lbSummary.Selected(i) = True Then
            For Irow = 8 To 508
                If VBA.Left(lbSummary.List(i), 10) = VBA.Left(ws_Summary.Cells(Irow, 3).Value, 10) Then
                    ws_Summary.Cells(Irow, 2).Value = "All"
                End If
            Next Irow
        ElseIf lbSummary.Selected(i) = False Then
            For Irow = 8 To 508
                If VBA.Left(lbSummary.List(i), 10) = VBA.Left(ws_Summary.Cells(Irow, 3).Value, 10) Then
                    ws_Summary.Cells(Irow, 2).Value = vbNullString
                End If
            Next Irow
        End If
    Next i
    
    If OptFW.Value = True Then
        ws_Summary.Range("B1").Value = "FW"
        For Irow = 20 To 508 Step 42
            ws_Summary.Range("B" & Irow & ":B" & Irow + 26).Value = vbNullString
        Next
    End If
    
    For Irow = 8 To 508
        Select Case ws_Summary.Range("B" & Irow).Value
            Case "All"
                ws_Summary.Rows(Irow).EntireRow.Hidden = False
            Case vbNullString
                ws_Summary.Rows(Irow).EntireRow.Hidden = True
        End Select
    Next Irow
    
  
    
    Unload Me
    Set ufrmViewDashSum = Nothing
    On Error GoTo 0
    
    ws_Summary.Protect "unlockME", DrawingObjects:=True, Contents:=True, Scenarios:=False, AllowFormattingCells:=True, AllowFormattingColumns:=False
    
    With Application: .ScreenUpdating = True: .Calculation = xlCalculationAutomatic: End With
End Sub
Private Sub ImgResetDash_Click()
Dim Irow As Long, i As Byte
    
    With Application: .ScreenUpdating = False: .Calculation = xlCalculationManual: End With
    
    ws_Summary.Unprotect "unlockME"
    
    On Error Resume Next
    
    If OptAll.Value = True Then
        ws_Summary.Range("B1").Value = "All"
        ws_Summary.Range("B7:B508").Value = "All"
        
    End If

    If OptFW.Value = True Then
        ws_Summary.Range("B1").Value = "FW"
        ws_Summary.Range("B7:B508").Value = "All"
    End If


    If ws_Summary.Range("B1").Value = "All" Then
        
        For Irow = 8 To 508
            Select Case ws_Summary.Cells(Irow, 3).Value
                Case "Def", "Tent"
                    ws_Summary.Cells(Irow, 2).Value = vbNullString
                    ws_Summary.Rows(Irow).EntireRow.Hidden = True
            End Select
            Select Case ws_Summary.Cells(Irow, 2).Value
                Case "All"
                    ws_Summary.Rows(Irow).EntireRow.Hidden = False
            End Select
        Next Irow
    End If
    
    If ws_Summary.Range("B1").Value = "FW" Then
        
        For Irow = 20 To 508 Step 42
            ws_Summary.Range("B" & Irow & ":B" & Irow + 26).Value = vbNullString
            ws_Summary.Rows(Irow & ":" & Irow + 26).EntireRow.Hidden = True
        Next
    
        For Irow = 9 To 508
            Select Case ws_Summary.Cells(Irow, 3).Value
                Case "Def", "Tent"
                    ws_Summary.Cells(Irow, 2).Value = vbNullString
                    ws_Summary.Rows(Irow).EntireRow.Hidden = True
            End Select
            Select Case ws_Summary.Cells(Irow, 2).Value
                Case vbNullString
                    ws_Summary.Rows(Irow).EntireRow.Hidden = True
            End Select
        Next Irow
    End If

    Unload Me
    Set ufrmViewDashSum = Nothing
    On Error GoTo 0
    
    ws_Summary.Protect "unlockME", DrawingObjects:=True, Contents:=True, Scenarios:=False, AllowFormattingCells:=True, AllowFormattingColumns:=False

    With Application: .ScreenUpdating = True: .Calculation = xlCalculationAutomatic: End With
End Sub
Private Sub ImgExitSum_Click()
    Unload Me
    Set ufrmViewDashSum = Nothing
End Sub



Attribute VB_Name = "ufrmViewDayxDay"
Attribute VB_Base = "0{24E02735-2A4A-4E36-9514-E7ED1B5FED09}{E3D16374-8FD9-432D-B749-DDB2B4946F4B}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Option Explicit
'Private Sub UserForm_QueryClose(Cancel As long, CloseMode As long)
'    If CloseMode = 0 Then Cancel = True
'End Sub
Private Sub UserForm_Initialize()
Dim iCol As Byte, i As Long, j As Long, k As Long, l As Long

'i is for occ and demand, j for group, k for contract and transient, l for misc and RPO
i = 0: j = 0: k = 0: l = 0
    
    For iCol = 1 To 88
        Select Case ws_DayXDay.Cells(3, iCol)
            Case "O_D", "O_DRC2"
                lbOccDem.AddItem ws_DayXDay.Cells(5, iCol).Value
                If ws_DayXDay.Columns(iCol).EntireColumn.Hidden = False Then lbOccDem.Selected(i) = True
                i = i + 1
            Case "G_", "G_RC2"
                lbGrp.AddItem ws_DayXDay.Cells(5, iCol).Value
                If ws_DayXDay.Columns(iCol).EntireColumn.Hidden = False Then lbGrp.Selected(j) = True
                j = j + 1
            Case "C_T", "C_TRC2"
                lbContTrn.AddItem ws_DayXDay.Cells(5, iCol).Value
                If ws_DayXDay.Columns(iCol).EntireColumn.Hidden = False Then lbContTrn.Selected(k) = True
                k = k + 1
            Case "M_", "M_R", "M_RC2", "FREE"
                lbMiscRPO.AddItem ws_DayXDay.Cells(5, iCol).Value
                If ws_DayXDay.Columns(iCol).EntireColumn.Hidden = False Then lbMiscRPO.Selected(l) = True
                l = l + 1
        End Select
    Next

    i = Empty: j = Empty: k = Empty: l = Empty: iCol = Empty
      
End Sub
Private Sub ImgShowAll_Click()
    Dim iCol As Long
    
    With Application: .ScreenUpdating = False: .Calculation = xlCalculationManual: End With
    
    ws_DayXDay.Unprotect "unlockME"
    
    On Error Resume Next
    
    For iCol = 4 To 68
        Select Case ws_DayXDay.Cells(5, iCol).Value
            Case "Tent Rm Proj RP", "Tent Rm Proj Var", "Tent ADR (G) RP"
                ws_DayXDay.Columns(iCol).EntireColumn.Hidden = True
            Case Else
                ws_DayXDay.Columns(iCol).EntireColumn.Hidden = False
                ws_DayXDay.Columns(iCol).EntireColumn.AutoFit
        End Select
    Next iCol
    
    Unload Me
    Set ufrmViewDayxDay = Nothing
    
    On Error GoTo 0
    
    ws_DayXDay.Protect "unlockME", DrawingObjects:=True, Contents:=True, Scenarios:=False, AllowFormattingCells:=True, AllowFormattingColumns:=False

    iCol = Empty
    With Application: .ScreenUpdating = True: .Calculation = xlCalculationAutomatic: End With
End Sub
Private Sub ImgReset_Click()
Dim iCol As Long
    
    With Application: .ScreenUpdating = False: .Calculation = xlCalculationManual: End With
    
    ws_DayXDay.Unprotect "unlockME"
    
    On Error Resume Next
    
    For iCol = 4 To 68
        Select Case VBA.Right(ws_DayXDay.Cells(3, iCol).Value, 2)
            'RC or recommended, can't be hidden. C2 is the for Recommended but user can hide it.
            Case "RC", "C2"
                ws_DayXDay.Columns(iCol).EntireColumn.Hidden = False
                ws_DayXDay.Columns(iCol).EntireColumn.AutoFit
            Case Else
                ws_DayXDay.Columns(iCol).EntireColumn.Hidden = True
        End Select
    Next iCol
    
    iCol = Empty
    
    Unload Me
    Set ufrmViewDayxDay = Nothing
    
    On Error GoTo 0
    
    ws_DayXDay.Protect "unlockME", DrawingObjects:=True, Contents:=True, Scenarios:=False, AllowFormattingCells:=True, AllowFormattingColumns:=False

    With Application: .ScreenUpdating = True: .Calculation = xlCalculationAutomatic: End With
End Sub
Private Sub imgApply_Click()
Dim iCol As Long, i As Long

    With Application: .ScreenUpdating = False: .Calculation = xlCalculationManual: End With
    
    ws_DayXDay.Unprotect "unlockME"
    
    On Error Resume Next
    
    'occ and demand
    For i = 0 To lbOccDem.ListCount - 1
        If lbOccDem.Selected(i) = True Then
            For iCol = 4 To 88
                If lbOccDem.List(i) = ws_DayXDay.Cells(5, iCol).Value Then
                    ws_DayXDay.Columns(iCol).EntireColumn.Hidden = False
                    ws_DayXDay.Columns(iCol).EntireColumn.AutoFit
                    Exit For
                End If
            Next iCol
        ElseIf lbOccDem.Selected(i) = False Then
            For iCol = 4 To 88
                If lbOccDem.List(i) = ws_DayXDay.Cells(5, iCol).Value Then
                    ws_DayXDay.Columns(iCol).EntireColumn.Hidden = True
                    Exit For
                End If
            Next iCol
        End If
    Next
    
    For i = 0 To lbGrp.ListCount - 1
        If lbGrp.Selected(i) = True Then
            For iCol = 4 To 88
                If lbGrp.List(i) = ws_DayXDay.Cells(5, iCol).Value Then
                    ws_DayXDay.Columns(iCol).EntireColumn.Hidden = False
                    ws_DayXDay.Columns(iCol).EntireColumn.AutoFit
                    Exit For
                End If
            Next iCol
        ElseIf lbGrp.Selected(i) = False Then
            For iCol = 4 To 88
                If lbGrp.List(i) = ws_DayXDay.Cells(5, iCol).Value Then
                    ws_DayXDay.Columns(iCol).EntireColumn.Hidden = True
                    Exit For
                End If
            Next iCol
        End If
    Next i

    For i = 0 To lbContTrn.ListCount - 1
        If lbContTrn.Selected(i) = True Then
            For iCol = 4 To 88
                If lbContTrn.List(i) = ws_DayXDay.Cells(5, iCol).Value Then
                    ws_DayXDay.Columns(iCol).EntireColumn.Hidden = False
                    ws_DayXDay.Columns(iCol).EntireColumn.AutoFit
                    Exit For
                End If
            Next iCol
        ElseIf lbContTrn.Selected(i) = False Then
            For iCol = 4 To 88
                If lbContTrn.List(i) = ws_DayXDay.Cells(5, iCol).Value Then
                    ws_DayXDay.Columns(iCol).EntireColumn.Hidden = True
                    Exit For
                End If
            Next iCol
        End If
    Next

    For i = 0 To lbMiscRPO.ListCount - 1
        If lbMiscRPO.Selected(i) = True Then
            For iCol = 4 To 88
                If lbMiscRPO.List(i) = ws_DayXDay.Cells(5, iCol).Value Then
                    ws_DayXDay.Columns(iCol).EntireColumn.Hidden = False
                    ws_DayXDay.Columns(iCol).EntireColumn.AutoFit
                    Exit For
                End If
            Next iCol
        ElseIf lbMiscRPO.Selected(i) = False Then
            For iCol = 4 To 88
                If lbMiscRPO.List(i) = ws_DayXDay.Cells(5, iCol).Value Then
                    ws_DayXDay.Columns(iCol).EntireColumn.Hidden = True
                    Exit For
                End If
            Next iCol
        End If
    Next
    
    For iCol = 4 To 88
        Select Case ws_DayXDay.Cells(5, iCol).Value
            Case "Tent Rm Proj RP", "Tent Rm Proj Var", "Tent ADR (G) RP"
                ws_DayXDay.Columns(iCol).EntireColumn.Hidden = True
        End Select
        Select Case VBA.Right(ws_DayXDay.Cells(3, iCol).Value, 2)
            Case "RC"
                ws_DayXDay.Columns(iCol).EntireColumn.Hidden = False
                ws_DayXDay.Columns(iCol).EntireColumn.AutoFit
        End Select
    Next iCol
    iCol = Empty: i = Empty
    
    Unload Me
    Set ufrmViewDayxDay = Nothing
    
    On Error GoTo 0
    
    ws_DayXDay.Protect "unlockME", DrawingObjects:=True, Contents:=True, Scenarios:=False, AllowFormattingCells:=True, AllowFormattingColumns:=False
    
    With Application: .ScreenUpdating = True: .Calculation = xlCalculationAutomatic: End With
    
End Sub
Private Sub imgExit_Click()
    Unload Me
    Set ufrmViewDayxDay = Nothing
End Sub
Attribute VB_Name = "ufrmViewRmCol"
Attribute VB_Base = "0{35F88E09-E3C5-45F3-8031-71F5C7D1FE61}{F377076B-4544-46CD-8EC7-57B41821EE44}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Option Explicit
Private Sub UserForm_Initialize()
Dim iCol As Byte, i As Byte, j As Byte, k As Byte, l As Byte
Dim m As Byte, n As Byte, o As Byte, p As Byte, q As Byte

'i is for occ,  j for Room Collection1, k Room Collection2, l Room Collection3
'm is for Room Collection4, n is for Room Collection5, o is for Room Collection6, p is for Room Collection7, q is for Room Collection8
i = 0: j = 0: k = 0: l = 0: m = 0: n = 0: p = 0: q = 0

FrmRmCol1.Caption = ws_Setup.Range("C19").Value
FrmRmCol2.Caption = ws_Setup.Range("C20").Value
FrmRmCol3.Caption = ws_Setup.Range("C21").Value
FrmRmCol4.Caption = ws_Setup.Range("C22").Value
FrmRmCol5.Caption = ws_Setup.Range("C23").Value
FrmRmCol6.Caption = ws_Setup.Range("C24").Value
FrmRmCol7.Caption = ws_Setup.Range("C25").Value
FrmRmCol8.Caption = ws_Setup.Range("C26").Value


    For iCol = 4 To 78
        Select Case ws_RMcollection.Cells(2, iCol)
            Case "OCC_0"
                lbOcc.AddItem ws_RMcollection.Cells(5, iCol).Value
                If ws_RMcollection.Columns(iCol).EntireColumn.Hidden = False Then lbOcc.Selected(i) = True
                i = i + 1
            Case "RC_1"
                lbRMCol1.AddItem ws_RMcollection.Cells(5, iCol).Value
                If ws_RMcollection.Columns(iCol).EntireColumn.Hidden = False Then lbRMCol1.Selected(j) = True
                j = j + 1
            Case "RC_2"
                lbRmCol2.AddItem ws_RMcollection.Cells(5, iCol).Value
                If ws_RMcollection.Columns(iCol).EntireColumn.Hidden = False Then lbRmCol2.Selected(k) = True
                k = k + 1
            Case "RC_3"
                lbRmCol3.AddItem ws_RMcollection.Cells(5, iCol).Value
                If ws_RMcollection.Columns(iCol).EntireColumn.Hidden = False Then lbRmCol3.Selected(l) = True
                l = l + 1
            Case "RC_4"
                lbRmCol4.AddItem ws_RMcollection.Cells(5, iCol).Value
                If ws_RMcollection.Columns(iCol).EntireColumn.Hidden = False Then lbRmCol4.Selected(m) = True
                m = m + 1
            Case "RC_5"
                lbRmCol5.AddItem ws_RMcollection.Cells(5, iCol).Value
                If ws_RMcollection.Columns(iCol).EntireColumn.Hidden = False Then lbRmCol5.Selected(n) = True
                n = n + 1
            Case "RC_6"
                lbRmCol6.AddItem ws_RMcollection.Cells(5, iCol).Value
                If ws_RMcollection.Columns(iCol).EntireColumn.Hidden = False Then lbRmCol6.Selected(o) = True
                o = o + 1
            Case "RC_7"
                lbRmCol7.AddItem ws_RMcollection.Cells(5, iCol).Value
                If ws_RMcollection.Columns(iCol).EntireColumn.Hidden = False Then lbRmCol7.Selected(p) = True
                p = p + 1
            Case "RC_8"
                lbRmCol8.AddItem ws_RMcollection.Cells(5, iCol).Value
                If ws_RMcollection.Columns(iCol).EntireColumn.Hidden = False Then lbRmCol8.Selected(q) = True
                q = q + 1
        End Select
    Next

    i = Empty: j = Empty: k = Empty: l = Empty: m = Empty: n = Empty: o = Empty: p = Empty: q = Empty: iCol = Empty
      
End Sub
Private Sub ImgReset_RMCol_Click()
Dim iCol As Long, Irow As Long
    
    With Application: .ScreenUpdating = False: .Calculation = xlCalculationManual: End With
    
    ws_RMcollection.Unprotect "unlockME"
    
    On Error Resume Next
    
    For iCol = 5 To 10
        Select Case ws_RMcollection.Cells(2, iCol).Value
            Case "OCC_0"
                Select Case ws_RMcollection.Cells(5, iCol).Value
                    'occ
                    Case "Ttl Hotel Occ OYv2", "Occ LY Act"
                        ws_RMcollection.Columns(iCol).EntireColumn.Hidden = False
                    Case Else
                        ws_RMcollection.Columns(iCol).Hidden = True
                End Select
        End Select
    Next iCol
    
    'Room Collection based on the number of room collection from the OYv2 data
    For iCol = 7 To 78
        Select Case VBA.CStr(VBA.Right(ws_RMcollection.Cells(2, iCol), 1))
            Case 1 To IIf(sh_OYv2Data.Cells(5, 2).Value = vbNullString, 8, sh_OYv2Data.Cells(5, 2).Value)
                Select Case ws_RMcollection.Cells(5, iCol).Value
                    Case "Hurdle Rev.", "Rem Capacity - PRP", "Rem Dem", "Rm OTB", "Rm Pickup"
                        ws_RMcollection.Columns(iCol).EntireColumn.Hidden = False
                    Case Else
                        ws_RMcollection.Columns(iCol).EntireColumn.Hidden = True
                End Select
            Case Is > sh_OYv2Data.Cells(5, 2).Value
                ws_RMcollection.Columns(iCol).EntireColumn.Hidden = True
        End Select
    Next iCol
    
    'this is for select service hotels. If they is no PRP data imported, then hide the Rem Capacity
    If sh_PRP.Range("L6").Value = vbNullString Then
        For iCol = 9 To 78 Step 9
            ws_RMcollection.Columns(iCol).EntireColumn.Hidden = True
        Next
    End If
    
    For iCol = 4 To 78
        Select Case ws_RMcollection.Columns(iCol).EntireColumn.Hidden
            Case False
                ws_RMcollection.Columns(iCol).EntireColumn.AutoFit
        End Select
    Next iCol
    
    iCol = Empty
    
    Unload Me
    Set ufrmViewRmCol = Nothing
    
    On Error GoTo 0
    
    ws_RMcollection.Protect "unlockME", DrawingObjects:=True, Contents:=True, Scenarios:=False, AllowFormattingCells:=False, AllowFormattingColumns:=False
    
    With Application: .ScreenUpdating = True: .Calculation = xlCalculationAutomatic: End With
End Sub
Private Sub ImgShowAll_RMCol_Click()
Dim iCol As Long

    With Application: .ScreenUpdating = False: .Calculation = xlCalculationManual: End With
    
    ws_RMcollection.Unprotect "unlockME"
    
    On Error Resume Next
    
    For iCol = 5 To 10
        Select Case ws_RMcollection.Cells(2, iCol).Value
            Case "OCC_0"
                Select Case ws_RMcollection.Cells(5, iCol).Value
                    'occ
                    Case "Ttl Hotel Occ OYv2", "Proj Occ User RP", "Occ LY Act"
                        ws_RMcollection.Columns(iCol).EntireColumn.Hidden = False
                End Select
        End Select
    Next iCol
    
    'Room Collection based on the number of room collection from the OYv2 data
    For iCol = 7 To 78
        Select Case VBA.CStr(VBA.Right(ws_RMcollection.Cells(2, iCol), 1))
            Case 1 To IIf(sh_OYv2Data.Cells(5, 2).Value = vbNullString, 8, sh_OYv2Data.Cells(5, 2).Value)
                ws_RMcollection.Columns(iCol).EntireColumn.Hidden = False
            Case Is > IIf(sh_OYv2Data.Cells(5, 2).Value = vbNullString, 8, sh_OYv2Data.Cells(5, 2).Value)
                ws_RMcollection.Columns(iCol).EntireColumn.Hidden = True
        End Select
    Next iCol
    
    'this is for select service hotels. If they is no PRP data imported, then hide the Rem Capacity
    If (sh_PRP.Range("L6").Value = vbNullString And sh_OYv2Data.Cells(5, 2).Value <> vbNullString) Then
        For iCol = 9 To 78 Step 9
            ws_RMcollection.Columns(iCol).EntireColumn.Hidden = True
        Next
    End If

    'autofit columns
    For iCol = 4 To 78
        Select Case ws_RMcollection.Columns(iCol).EntireColumn.Hidden
            Case False
                ws_RMcollection.Columns(iCol).EntireColumn.AutoFit
        End Select
    Next iCol

    Unload Me
    Set ufrmViewRmCol = Nothing
    
    On Error GoTo 0
    
    ws_RMcollection.Protect "unlockME", DrawingObjects:=True, Contents:=True, Scenarios:=False, AllowFormattingCells:=False, AllowFormattingColumns:=False

iCol = Empty
With Application: .ScreenUpdating = True: .Calculation = xlCalculationAutomatic: End With

End Sub
Private Sub imgApply_RMCol_Click()
Dim iCol As Long, i As Long, Irow As Long

    With Application: .ScreenUpdating = False: .Calculation = xlCalculationManual: End With
    
    ws_RMcollection.Unprotect "unlockME"
    
    On Error Resume Next
    
    For i = 0 To lbOcc.ListCount - 1 'occ
        If lbOcc.Selected(i) = True Then
            For iCol = 5 To 78
                Select Case ws_RMcollection.Cells(2, iCol).Value
                    Case "OCC_0"
                    If lbOcc.List(i) = ws_RMcollection.Cells(5, iCol).Value Then
                        ws_RMcollection.Columns(iCol).EntireColumn.Hidden = False
                        Exit For
                    End If
                End Select
            Next iCol
        Else
            For iCol = 5 To 78
                Select Case ws_RMcollection.Cells(2, iCol).Value
                    Case "OCC_0"
                    If lbOcc.List(i) = ws_RMcollection.Cells(5, iCol).Value Then
                        ws_RMcollection.Columns(iCol).EntireColumn.Hidden = True
                        Exit For
                    End If
                End Select
            Next iCol
        End If
    Next
    
    For i = 0 To lbRMCol1.ListCount - 1 'room collection 1
        If lbRMCol1.Selected(i) = True Then
            For iCol = 5 To 78
                Select Case ws_RMcollection.Cells(2, iCol).Value
                    Case "RC_1"
                        If lbRMCol1.List(i) = ws_RMcollection.Cells(5, iCol).Value Then
                            ws_RMcollection.Columns(iCol).EntireColumn.Hidden = False
                            Exit For
                        End If
                End Select
            Next iCol
        Else
            For iCol = 5 To 78
                Select Case ws_RMcollection.Cells(2, iCol).Value
                    Case "RC_1"
                        If lbRMCol1.List(i) = ws_RMcollection.Cells(5, iCol).Value Then
                            ws_RMcollection.Columns(iCol).EntireColumn.Hidden = True
                            Exit For
                        End If
                End Select
            Next iCol
        End If
    Next i
    
    For i = 0 To lbRmCol2.ListCount - 1 'room collection 2
        If (lbRmCol2.Selected(i) = True And sh_OYv2Data.Cells(5, 2).Value >= 2) Then
            For iCol = 5 To 78
                Select Case ws_RMcollection.Cells(2, iCol).Value
                    Case "RC_2"
                        If lbRmCol2.List(i) = ws_RMcollection.Cells(5, iCol).Value Then
                            ws_RMcollection.Columns(iCol).EntireColumn.Hidden = False
                            Exit For
                        End If
                End Select
            Next iCol
        Else
            For iCol = 5 To 78
                Select Case ws_RMcollection.Cells(2, iCol).Value
                    Case "RC_2"
                        If lbRmCol2.List(i) = ws_RMcollection.Cells(5, iCol).Value Then
                            ws_RMcollection.Columns(iCol).EntireColumn.Hidden = True
                            Exit For
                        End If
                End Select
            Next iCol
        End If
    Next i
    
    For i = 0 To lbRmCol3.ListCount - 1 'room collection 3
        If (lbRmCol3.Selected(i) = True And sh_OYv2Data.Cells(5, 2).Value >= 3) Then
            For iCol = 5 To 78
                Select Case ws_RMcollection.Cells(2, iCol).Value
                    Case "RC_3"
                        If lbRmCol3.List(i) = ws_RMcollection.Cells(5, iCol).Value Then
                            ws_RMcollection.Columns(iCol).EntireColumn.Hidden = False
                            Exit For
                        End If
                End Select
            Next iCol
        Else
            For iCol = 5 To 78
                Select Case ws_RMcollection.Cells(2, iCol).Value
                    Case "RC_3"
                        If lbRmCol3.List(i) = ws_RMcollection.Cells(5, iCol).Value Then
                            ws_RMcollection.Columns(iCol).EntireColumn.Hidden = True
                            Exit For
                        End If
                End Select
            Next iCol
        End If
    Next i
    
    For i = 0 To lbRmCol4.ListCount - 1 'room collection 4
        If (lbRmCol4.Selected(i) = True And sh_OYv2Data.Cells(5, 2).Value >= 4) Then
            For iCol = 5 To 78
                Select Case ws_RMcollection.Cells(2, iCol).Value
                    Case "RC_4"
                        If lbRmCol4.List(i) = ws_RMcollection.Cells(5, iCol).Value Then
                            ws_RMcollection.Columns(iCol).EntireColumn.Hidden = False
                            Exit For
                        End If
                End Select
            Next iCol
        Else
            For iCol = 5 To 78
                Select Case ws_RMcollection.Cells(2, iCol).Value
                    Case "RC_4"
                        If lbRmCol4.List(i) = ws_RMcollection.Cells(5, iCol).Value Then
                            ws_RMcollection.Columns(iCol).EntireColumn.Hidden = True
                            Exit For
                        End If
                End Select
            Next iCol
        End If
    Next i
    
    For i = 0 To lbRmCol5.ListCount - 1 'room collection 5
        If (lbRmCol5.Selected(i) = True And sh_OYv2Data.Cells(5, 2).Value >= 5) Then
            For iCol = 5 To 78
                Select Case ws_RMcollection.Cells(2, iCol).Value
                    Case "RC_5"
                        If lbRmCol5.List(i) = ws_RMcollection.Cells(5, iCol).Value Then
                            ws_RMcollection.Columns(iCol).EntireColumn.Hidden = False
                            Exit For
                        End If
                End Select
            Next iCol
        Else
            For iCol = 5 To 78
                Select Case ws_RMcollection.Cells(2, iCol).Value
                    Case "RC_5"
                        If lbRmCol5.List(i) = ws_RMcollection.Cells(5, iCol).Value Then
                            ws_RMcollection.Columns(iCol).EntireColumn.Hidden = True
                            Exit For
                        End If
                End Select
            Next iCol
        End If
    Next i
    
     For i = 0 To lbRmCol6.ListCount - 1 'room collection 6
        If (lbRmCol6.Selected(i) = True And sh_OYv2Data.Cells(5, 2).Value >= 6) Then
            For iCol = 5 To 78
                Select Case ws_RMcollection.Cells(2, iCol).Value
                    Case "RC_6"
                        If lbRmCol6.List(i) = ws_RMcollection.Cells(5, iCol).Value Then
                            ws_RMcollection.Columns(iCol).EntireColumn.Hidden = False
                            Exit For
                        End If
                End Select
            Next iCol
        Else
            For iCol = 5 To 78
                Select Case ws_RMcollection.Cells(2, iCol).Value
                    Case "RC_6"
                        If lbRmCol6.List(i) = ws_RMcollection.Cells(5, iCol).Value Then
                            ws_RMcollection.Columns(iCol).EntireColumn.Hidden = True
                            Exit For
                        End If
                End Select
            Next iCol
        End If
    Next i
   
      For i = 0 To lbRmCol7.ListCount - 1 'room collection 7
        If (lbRmCol7.Selected(i) = True And sh_OYv2Data.Cells(5, 2).Value >= 7) Then
            For iCol = 5 To 78
                Select Case ws_RMcollection.Cells(2, iCol).Value
                    Case "RC_7"
                        If lbRmCol7.List(i) = ws_RMcollection.Cells(5, iCol).Value Then
                            ws_RMcollection.Columns(iCol).EntireColumn.Hidden = False
                            Exit For
                        End If
                End Select
            Next iCol
        Else
            For iCol = 5 To 78
                Select Case ws_RMcollection.Cells(2, iCol).Value
                    Case "RC_7"
                        If lbRmCol7.List(i) = ws_RMcollection.Cells(5, iCol).Value Then
                            ws_RMcollection.Columns(iCol).EntireColumn.Hidden = True
                            Exit For
                        End If
                End Select
            Next iCol
        End If
    Next i
  
    For i = 0 To lbRmCol8.ListCount - 1 'room collection 8
        If (lbRmCol8.Selected(i) = True And sh_OYv2Data.Cells(5, 2).Value >= 8) Then
            For iCol = 5 To 78
                Select Case ws_RMcollection.Cells(2, iCol).Value
                    Case "RC_8"
                        If lbRmCol8.List(i) = ws_RMcollection.Cells(5, iCol).Value Then
                            ws_RMcollection.Columns(iCol).EntireColumn.Hidden = False
                            Exit For
                        End If
                End Select
            Next iCol
        Else
            For iCol = 5 To 78
                Select Case ws_RMcollection.Cells(2, iCol).Value
                    Case "RC_8"
                        If lbRmCol8.List(i) = ws_RMcollection.Cells(5, iCol).Value Then
                            ws_RMcollection.Columns(iCol).EntireColumn.Hidden = True
                            Exit For
                        End If
                End Select
            Next iCol
        End If
    Next i
    
    'this is for select service hotels. If they is no PRP data imported, then hide the Rem Capacity
    If sh_PRP.Range("L6").Value = vbNullString Then
        For iCol = 9 To 78 Step 9
            ws_RMcollection.Columns(iCol).EntireColumn.Hidden = True
        Next
    End If

    'auto fit columns
    For iCol = 4 To 78
        If ws_RMcollection.Columns(iCol).EntireColumn.Hidden = False Then ws_RMcollection.Columns(iCol).EntireColumn.AutoFit
    Next iCol
    
    'Headers
    For Irow = 4 To 433 Step 39
        ws_RMcollection.Rows(Irow).EntireRow.RowHeight = 75
    Next
    
    Unload Me
    Set ufrmViewRmCol = Nothing
    
    On Error GoTo 0
    
    ws_RMcollection.Protect "unlockME", DrawingObjects:=True, Contents:=True, Scenarios:=False, AllowFormattingCells:=False, AllowFormattingColumns:=False

    Irow = Empty: iCol = Empty: i = Empty

    With Application: .ScreenUpdating = True: .Calculation = xlCalculationAutomatic: End With

End Sub

Private Sub imgExit_RMCol_Click()
    Unload Me
    Set ufrmViewRmCol = Nothing
End Sub
Attribute VB_Name = "ufrmViewSeg"
Attribute VB_Base = "0{A978AACF-588D-472F-80B2-9868075DAA0E}{ABA91707-0410-4B61-818E-297C2F9515D8}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Option Explicit

Private Sub UserForm_Initialize()
Dim iCol As Byte, i As Byte, j As Byte, k As Byte, l As Byte
Dim m As Byte, n As Byte, o As Byte, p As Byte, q As Byte

'i is for occ, demand and ttl OTB, j for Prem Retail, k for Standard Retail, l for Retial Tied Discount
'm is for Fixed Discount, n is for gov't, o is for Rwd, p is for Policy
i = 0: j = 0: k = 0: l = 0: m = 0: n = 0: p = 0: q = 0
    
    For iCol = 5 To 58
        Select Case ws_Segmentation.Cells(3, iCol)
            Case "O_D"
                lbOccDem_Seg.AddItem ws_Segmentation.Cells(5, iCol).Value
                If ws_Segmentation.Columns(iCol).EntireColumn.Hidden = False Then lbOccDem_Seg.Selected(i) = True
                i = i + 1
            Case "P_R"
                lbPrem_Seg.AddItem ws_Segmentation.Cells(5, iCol).Value
                If ws_Segmentation.Columns(iCol).EntireColumn.Hidden = False Then lbPrem_Seg.Selected(j) = True
                j = j + 1
            Case "S_R"
                lbStd_Seg.AddItem ws_Segmentation.Cells(5, iCol).Value
                If ws_Segmentation.Columns(iCol).EntireColumn.Hidden = False Then lbStd_Seg.Selected(k) = True
                k = k + 1
            Case "S_C"
                lbSC_Seg.AddItem ws_Segmentation.Cells(5, iCol).Value
                If ws_Segmentation.Columns(iCol).EntireColumn.Hidden = False Then lbSC_Seg.Selected(l) = True
                l = l + 1
            Case "R_T"
                lbRetailTied_Seg.AddItem ws_Segmentation.Cells(5, iCol).Value
                If ws_Segmentation.Columns(iCol).EntireColumn.Hidden = False Then lbRetailTied_Seg.Selected(m) = True
                m = m + 1
            Case "F_D"
                lbFixedDisc_Seg.AddItem ws_Segmentation.Cells(5, iCol).Value
                If ws_Segmentation.Columns(iCol).EntireColumn.Hidden = False Then lbFixedDisc_Seg.Selected(n) = True
                n = n + 1
            Case "G_M"
                lbGovt_Seg.AddItem ws_Segmentation.Cells(5, iCol).Value
                If ws_Segmentation.Columns(iCol).EntireColumn.Hidden = False Then lbGovt_Seg.Selected(o) = True
                o = o + 1
            Case "R_W"
                lbRwd_Seg.AddItem ws_Segmentation.Cells(5, iCol).Value
                If ws_Segmentation.Columns(iCol).EntireColumn.Hidden = False Then lbRwd_Seg.Selected(p) = True
                p = p + 1
            Case "P_D"
                lbPolicy_Seg.AddItem ws_Segmentation.Cells(5, iCol).Value
                If ws_Segmentation.Columns(iCol).EntireColumn.Hidden = False Then lbPolicy_Seg.Selected(q) = True
                q = q + 1
        End Select
    Next

    i = Empty: j = Empty: k = Empty: l = Empty: m = Empty: n = Empty: o = Empty: p = Empty: q = Empty: iCol = Empty
      
End Sub
Private Sub ImgReset_Seg_Click()
Dim iCol As Long, Irow As Long
    
    With Application: .ScreenUpdating = False: .Calculation = xlCalculationManual: End With
    
    ws_Segmentation.Unprotect "unlockME"
    
    On Error Resume Next
    
    For iCol = 4 To 58
        Select Case ws_Segmentation.Cells(3, iCol).Value
            Case "O_D"
                Select Case ws_Segmentation.Cells(5, iCol).Value
                    'occ and demand
                    Case "Ttl Hotel Occ OYv2", "Occ LY Act", "Avail Trn Supply", "Applied Rem Dem", "Addl Dem", "Ttl Trn Dem", "Ttl Trn Dem STLY", "Rm OTB", "Rm Pickup"
                        ws_Segmentation.Columns(iCol).EntireColumn.Hidden = False
                    Case Else
                        ws_Segmentation.Columns(iCol).Hidden = True
                End Select
            'segmentation
            Case "P_R", "S_R", "S_C", "R_T", "F_D", "G_M", "R_W", "P_D"
                Select Case ws_Segmentation.Cells(5, iCol).Value
                    Case "Rem Dem", "Rm OTB", "Rm Pickup"
                        ws_Segmentation.Columns(iCol).EntireColumn.Hidden = False
                    Case Else
                        ws_Segmentation.Columns(iCol).EntireColumn.Hidden = True
                End Select
        End Select
    Next iCol
    
    For iCol = 4 To 58
        Select Case ws_Segmentation.Columns(iCol).EntireColumn.Hidden
            Case False
                ws_Segmentation.Columns(iCol).EntireColumn.AutoFit
        End Select
    Next iCol
    
    For Irow = 4 To 433 Step 39
        ws_Segmentation.Rows(Irow).EntireRow.RowHeight = 75
    Next
    iCol = Empty
    
    Unload Me
    Set ufrmViewSeg = Nothing
    
    On Error GoTo 0
    
    ws_Segmentation.Protect "unlockME", DrawingObjects:=True, Contents:=True, Scenarios:=False, AllowFormattingCells:=False, AllowFormattingColumns:=False
    
    With Application: .ScreenUpdating = True: .Calculation = xlCalculationAutomatic: End With
End Sub

Private Sub imgApply_Seg_Click()
Dim iCol As Long, i As Long, Irow As Long

    With Application: .ScreenUpdating = False: .Calculation = xlCalculationManual: End With
    
    ws_Segmentation.Unprotect "unlockME"
    
    On Error Resume Next
    
    For i = 0 To lbOccDem_Seg.ListCount - 1 'occ and demand and ttl Trn OTB
        If lbOccDem_Seg.Selected(i) = True Then
            For iCol = 4 To 58
                Select Case ws_Segmentation.Cells(3, iCol).Value
                    Case "O_D"
                    If lbOccDem_Seg.List(i) = ws_Segmentation.Cells(5, iCol).Value Then
                        ws_Segmentation.Columns(iCol).EntireColumn.Hidden = False
                        Exit For
                    End If
                End Select
            Next iCol
        ElseIf lbOccDem_Seg.Selected(i) = False Then
            For iCol = 4 To 58
                Select Case ws_Segmentation.Cells(3, iCol).Value
                    Case "O_D"
                    If lbOccDem_Seg.List(i) = ws_Segmentation.Cells(5, iCol).Value Then
                        ws_Segmentation.Columns(iCol).EntireColumn.Hidden = True
                        Exit For
                    End If
                End Select
            Next iCol
        End If
    Next
    
    For i = 0 To lbPrem_Seg.ListCount - 1 'premium retail
        If lbPrem_Seg.Selected(i) = True Then
            For iCol = 4 To 58
                Select Case ws_Segmentation.Cells(3, iCol).Value
                    Case "P_R"
                        If lbPrem_Seg.List(i) = ws_Segmentation.Cells(5, iCol).Value Then
                            ws_Segmentation.Columns(iCol).EntireColumn.Hidden = False
                            Exit For
                        End If
                End Select
            Next iCol
        ElseIf lbPrem_Seg.Selected(i) = False Then
            For iCol = 4 To 58
                Select Case ws_Segmentation.Cells(3, iCol).Value
                    Case "P_R"
                        If lbPrem_Seg.List(i) = ws_Segmentation.Cells(5, iCol).Value Then
                            ws_Segmentation.Columns(iCol).EntireColumn.Hidden = True
                            Exit For
                        End If
                End Select
            Next iCol
        End If
    Next i

    For i = 0 To lbStd_Seg.ListCount - 1 'standard retail
        If lbStd_Seg.Selected(i) = True Then
            For iCol = 4 To 58
                Select Case ws_Segmentation.Cells(3, iCol).Value
                    Case "S_R"
                        If lbStd_Seg.List(i) = ws_Segmentation.Cells(5, iCol).Value Then
                            ws_Segmentation.Columns(iCol).EntireColumn.Hidden = False
                            Exit For
                        End If
                End Select
            Next iCol
        ElseIf lbStd_Seg.Selected(i) = False Then
            For iCol = 4 To 58
                Select Case ws_Segmentation.Cells(3, iCol).Value
                    Case "S_R"
                        If lbStd_Seg.List(i) = ws_Segmentation.Cells(5, iCol).Value Then
                            ws_Segmentation.Columns(iCol).EntireColumn.Hidden = True
                            Exit For
                        End If
                End Select
            Next iCol
        End If
    Next

    For i = 0 To lbSC_Seg.ListCount - 1 'special corporate
        If lbSC_Seg.Selected(i) = True Then
            For iCol = 4 To 58
                Select Case ws_Segmentation.Cells(3, iCol).Value
                    Case "S_C"
                        If lbSC_Seg.List(i) = ws_Segmentation.Cells(5, iCol).Value Then
                            ws_Segmentation.Columns(iCol).EntireColumn.Hidden = False
                            Exit For
                        End If
                End Select
            Next iCol
        ElseIf lbSC_Seg.Selected(i) = False Then
            For iCol = 4 To 58
                Select Case ws_Segmentation.Cells(3, iCol).Value
                    Case "S_C"
                        If lbSC_Seg.List(i) = ws_Segmentation.Cells(5, iCol).Value Then
                            ws_Segmentation.Columns(iCol).EntireColumn.Hidden = True
                            Exit For
                        End If
                End Select
            Next iCol
        End If
    Next
    
    For i = 0 To lbRetailTied_Seg.ListCount - 1 'retail tied discount
        If lbRetailTied_Seg.Selected(i) = True Then
            For iCol = 4 To 58
                Select Case ws_Segmentation.Cells(3, iCol).Value
                    Case "R_T"
                        If lbRetailTied_Seg.List(i) = ws_Segmentation.Cells(5, iCol).Value Then
                            ws_Segmentation.Columns(iCol).EntireColumn.Hidden = False
                            Exit For
                        End If
                End Select
            Next iCol
        ElseIf lbRetailTied_Seg.Selected(i) = False Then
            For iCol = 4 To 58
                Select Case ws_Segmentation.Cells(3, iCol).Value
                    Case "R_T"
                        If lbRetailTied_Seg.List(i) = ws_Segmentation.Cells(5, iCol).Value Then
                            ws_Segmentation.Columns(iCol).EntireColumn.Hidden = True
                            Exit For
                        End If
                End Select
            Next iCol
        End If
    Next
    
    For i = 0 To lbFixedDisc_Seg.ListCount - 1 'Fixed Discount
        If lbFixedDisc_Seg.Selected(i) = True Then
            For iCol = 4 To 58
                Select Case ws_Segmentation.Cells(3, iCol).Value
                    Case "F_D"
                        If lbFixedDisc_Seg.List(i) = ws_Segmentation.Cells(5, iCol).Value Then
                            ws_Segmentation.Columns(iCol).EntireColumn.Hidden = False
                            Exit For
                        End If
                End Select
            Next iCol
        ElseIf lbFixedDisc_Seg.Selected(i) = False Then
            For iCol = 4 To 58
                Select Case ws_Segmentation.Cells(3, iCol).Value
                    Case "F_D"
                        If lbFixedDisc_Seg.List(i) = ws_Segmentation.Cells(5, iCol).Value Then
                            ws_Segmentation.Columns(iCol).EntireColumn.Hidden = True
                            Exit For
                        End If
                End Select
            Next iCol
        End If
    Next
    
    For i = 0 To lbGovt_Seg.ListCount - 1 'gov't Military
        If lbGovt_Seg.Selected(i) = True Then
            For iCol = 4 To 58
                Select Case ws_Segmentation.Cells(3, iCol).Value
                    Case "G_M"
                        If lbGovt_Seg.List(i) = ws_Segmentation.Cells(5, iCol).Value Then
                            ws_Segmentation.Columns(iCol).EntireColumn.Hidden = False
                            Exit For
                        End If
                End Select
            Next iCol
        ElseIf lbGovt_Seg.Selected(i) = False Then
            For iCol = 4 To 58
                Select Case ws_Segmentation.Cells(3, iCol).Value
                    Case "G_M"
                        If lbGovt_Seg.List(i) = ws_Segmentation.Cells(5, iCol).Value Then
                            ws_Segmentation.Columns(iCol).EntireColumn.Hidden = True
                            Exit For
                        End If
                End Select
            Next iCol
        End If
    Next
    
    For i = 0 To lbRwd_Seg.ListCount - 1 'Reward redemption
        If lbRwd_Seg.Selected(i) = True Then
            For iCol = 4 To 58
                Select Case ws_Segmentation.Cells(3, iCol).Value
                    Case "R_W"
                        If lbRwd_Seg.List(i) = ws_Segmentation.Cells(5, iCol).Value Then
                            ws_Segmentation.Columns(iCol).EntireColumn.Hidden = False
                            Exit For
                        End If
                End Select
            Next iCol
        ElseIf lbRwd_Seg.Selected(i) = False Then
            For iCol = 4 To 58
                Select Case ws_Segmentation.Cells(3, iCol).Value
                    Case "R_W"
                        If lbRwd_Seg.List(i) = ws_Segmentation.Cells(5, iCol).Value Then
                            ws_Segmentation.Columns(iCol).EntireColumn.Hidden = True
                            Exit For
                        End If
                End Select
            Next iCol
        End If
    Next

    For i = 0 To lbPolicy_Seg.ListCount - 1 'Policy Driven
        If lbPolicy_Seg.Selected(i) = True Then
            For iCol = 4 To 58
                Select Case ws_Segmentation.Cells(3, iCol).Value
                    Case "P_D"
                        If lbPolicy_Seg.List(i) = ws_Segmentation.Cells(5, iCol).Value Then
                            ws_Segmentation.Columns(iCol).EntireColumn.Hidden = False
                            Exit For
                        End If
                End Select
            Next iCol
        ElseIf lbPolicy_Seg.Selected(i) = False Then
            For iCol = 4 To 58
                Select Case ws_Segmentation.Cells(3, iCol).Value
                    Case "P_D"
                        If lbPolicy_Seg.List(i) = ws_Segmentation.Cells(5, iCol).Value Then
                            ws_Segmentation.Columns(iCol).EntireColumn.Hidden = True
                            Exit For
                        End If
                End Select
            Next iCol
        End If
    Next
    
    'auto fit columns
    For iCol = 4 To 68
        If ws_Segmentation.Columns(iCol).EntireColumn.Hidden = False Then ws_Segmentation.Columns(iCol).EntireColumn.AutoFit
    Next iCol
    
    'Headers
    For Irow = 4 To 433 Step 39
        ws_Segmentation.Rows(Irow).EntireRow.RowHeight = 75
    Next
    
    Unload Me
    Set ufrmViewSeg = Nothing
    
    On Error GoTo 0
    
    ws_Segmentation.Protect "unlockME", DrawingObjects:=True, Contents:=True, Scenarios:=False, AllowFormattingCells:=False, AllowFormattingColumns:=False

    Irow = Empty: iCol = Empty: i = Empty

    With Application: .ScreenUpdating = True: .Calculation = xlCalculationAutomatic: End With

End Sub
Private Sub ImgShowAll_Seg_Click()
Dim iCol As Long, Irow As Long

    With Application: .ScreenUpdating = False: .Calculation = xlCalculationManual: End With
    
    ws_Segmentation.Unprotect "unlockME"
    
    On Error Resume Next
    
    For iCol = 4 To 58
        ws_Segmentation.Columns(iCol).EntireColumn.Hidden = False
    Next iCol
    
    'autofit columns
    For iCol = 4 To 58
        ws_Segmentation.Columns(iCol).EntireColumn.AutoFit
    Next iCol
    
    'autofit rows header
    For Irow = 4 To 433 Step 39
        ws_Segmentation.Rows(Irow).EntireRow.AutoFit
    Next Irow

    Unload Me
    Set ufrmViewSeg = Nothing
    
    On Error GoTo 0
    
    ws_Segmentation.Protect "unlockME", DrawingObjects:=True, Contents:=True, Scenarios:=False, AllowFormattingCells:=False, AllowFormattingColumns:=False

iCol = Empty: Irow = Empty
With Application: .ScreenUpdating = True: .Calculation = xlCalculationAutomatic: End With

End Sub
Private Sub imgExit_Seg_Click()
    Unload Me
    Set ufrmViewSeg = Nothing
End Sub
Attribute VB_Name = "wsCustom"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Option Explicit
Private Sub Worksheet_Activate()
Dim shp As Shape, MyHeight As Double, MyWidth As Double

ActiveSheet.ScrollArea = "$A$1:$R$55"
ActiveSheet.DisplayPageBreaks = False

On Error Resume Next
'reassign the formulas to the shapes (Projection and MRDW) keeping the formulas slow down excel a lot
'also preserve the height and width of each shape. Excel will adjust the picture size when formula is reassign
For Each shp In ActiveSheet.Shapes
    MyHeight = ActiveSheet.Shapes(shp.Name).Height: MyWidth = ActiveSheet.Shapes(shp.Name).Width
        Select Case shp.Name
            Case "Pic_STRSnap"
                ActiveSheet.Shapes(shp.Name).DrawingObject.Formula = "=STRSnap"
                ActiveSheet.Shapes(shp.Name).Height = MyHeight: ActiveSheet.Shapes(shp.Name).Width = MyWidth
            Case "Pic_STRSnapMth"
                ActiveSheet.Shapes(shp.Name).DrawingObject.Formula = "=STRSnapMth"
                ActiveSheet.Shapes(shp.Name).Height = MyHeight: ActiveSheet.Shapes(shp.Name).Width = MyWidth
            Case "Pic_RPO90d"
                ActiveSheet.Shapes(shp.Name).DrawingObject.Formula = "=RPO90d"
                ActiveSheet.Shapes(shp.Name).Height = MyHeight: ActiveSheet.Shapes(shp.Name).Width = MyWidth
    'summary day by day
            Case "Pic_SUM1FW"
                ActiveSheet.Shapes(shp.Name).DrawingObject.Formula = "=Sum1FW"
                ActiveSheet.Shapes(shp.Name).Height = MyHeight: ActiveSheet.Shapes(shp.Name).Width = MyWidth
            Case "Pic_SUM1WD"
                ActiveSheet.Shapes(shp.Name).DrawingObject.Formula = "=Sum1WD"
                ActiveSheet.Shapes(shp.Name).Height = MyHeight: ActiveSheet.Shapes(shp.Name).Width = MyWidth
            Case "Pic_SUM1WE"
                ActiveSheet.Shapes(shp.Name).DrawingObject.Formula = "=Sum1WE"
                ActiveSheet.Shapes(shp.Name).Height = MyHeight: ActiveSheet.Shapes(shp.Name).Width = MyWidth
            Case "Pic_SUM2FW"
                ActiveSheet.Shapes(shp.Name).DrawingObject.Formula = "=Sum2FW"
                ActiveSheet.Shapes(shp.Name).Height = MyHeight: ActiveSheet.Shapes(shp.Name).Width = MyWidth
            Case "Pic_SUM2WD"
                ActiveSheet.Shapes(shp.Name).DrawingObject.Formula = "=Sum2WD"
                ActiveSheet.Shapes(shp.Name).Height = MyHeight: ActiveSheet.Shapes(shp.Name).Width = MyWidth
            Case "Pic_SUM2WE"
                ActiveSheet.Shapes(shp.Name).DrawingObject.Formula = "=Sum2WE"
                ActiveSheet.Shapes(shp.Name).Height = MyHeight: ActiveSheet.Shapes(shp.Name).Width = MyWidth
            Case "Pic_SUM3FW"
                ActiveSheet.Shapes(shp.Name).DrawingObject.Formula = "=Sum3FW"
                ActiveSheet.Shapes(shp.Name).Height = MyHeight: ActiveSheet.Shapes(shp.Name).Width = MyWidth
            Case "Pic_SUM3WD"
                ActiveSheet.Shapes(shp.Name).DrawingObject.Formula = "=Sum3WD"
                ActiveSheet.Shapes(shp.Name).Height = MyHeight: ActiveSheet.Shapes(shp.Name).Width = MyWidth
            Case "Pic_SUM3WE"
                ActiveSheet.Shapes(shp.Name).DrawingObject.Formula = "=Sum3WE"
                ActiveSheet.Shapes(shp.Name).Height = MyHeight: ActiveSheet.Shapes(shp.Name).Width = MyWidth
            Case "Pic_SUM4FW"
                ActiveSheet.Shapes(shp.Name).DrawingObject.Formula = "=Sum4FW"
                ActiveSheet.Shapes(shp.Name).Height = MyHeight: ActiveSheet.Shapes(shp.Name).Width = MyWidth
            Case "Pic_SUM4WD"
                ActiveSheet.Shapes(shp.Name).DrawingObject.Formula = "=Sum4WD"
                ActiveSheet.Shapes(shp.Name).Height = MyHeight: ActiveSheet.Shapes(shp.Name).Width = MyWidth
            Case "Pic_SUM4WE"
                ActiveSheet.Shapes(shp.Name).DrawingObject.Formula = "=Sum4WE"
                ActiveSheet.Shapes(shp.Name).Height = MyHeight: ActiveSheet.Shapes(shp.Name).Width = MyWidth
            Case "Pic_SUM5FW"
                ActiveSheet.Shapes(shp.Name).DrawingObject.Formula = "=Sum5FW"
                ActiveSheet.Shapes(shp.Name).Height = MyHeight: ActiveSheet.Shapes(shp.Name).Width = MyWidth
            Case "Pic_SUM5WD"
                ActiveSheet.Shapes(shp.Name).DrawingObject.Formula = "=Sum5WD"
                ActiveSheet.Shapes(shp.Name).Height = MyHeight: ActiveSheet.Shapes(shp.Name).Width = MyWidth
            Case "Pic_SUM5WE"
                ActiveSheet.Shapes(shp.Name).DrawingObject.Formula = "=Sum5WE"
                ActiveSheet.Shapes(shp.Name).Height = MyHeight: ActiveSheet.Shapes(shp.Name).Width = MyWidth
            Case "Pic_SUM6FW"
                ActiveSheet.Shapes(shp.Name).DrawingObject.Formula = "=Sum6FW"
                ActiveSheet.Shapes(shp.Name).Height = MyHeight: ActiveSheet.Shapes(shp.Name).Width = MyWidth
            Case "Pic_SUM6WD"
                ActiveSheet.Shapes(shp.Name).DrawingObject.Formula = "=Sum6WD"
                ActiveSheet.Shapes(shp.Name).Height = MyHeight: ActiveSheet.Shapes(shp.Name).Width = MyWidth
            Case "Pic_SUM6WE"
                ActiveSheet.Shapes(shp.Name).DrawingObject.Formula = "=Sum6WE"
                ActiveSheet.Shapes(shp.Name).Height = MyHeight: ActiveSheet.Shapes(shp.Name).Width = MyWidth
    'Financial
            Case "Pic_Proj1"
                ActiveSheet.Shapes(shp.Name).DrawingObject.Formula = "=Proj1FW"
                ActiveSheet.Shapes(shp.Name).Height = MyHeight: ActiveSheet.Shapes(shp.Name).Width = MyWidth
            Case "Pic_Proj1All"
                ActiveSheet.Shapes(shp.Name).DrawingObject.Formula = "=Proj1"
                ActiveSheet.Shapes(shp.Name).Height = MyHeight: ActiveSheet.Shapes(shp.Name).Width = MyWidth
            Case "Pic_Proj2"
                ActiveSheet.Shapes(shp.Name).DrawingObject.Formula = "=Proj2FW"
                ActiveSheet.Shapes(shp.Name).Height = MyHeight: ActiveSheet.Shapes(shp.Name).Width = MyWidth
            Case "Pic_Proj2All"
                ActiveSheet.Shapes(shp.Name).DrawingObject.Formula = "=Proj2"
                ActiveSheet.Shapes(shp.Name).Height = MyHeight: ActiveSheet.Shapes(shp.Name).Width = MyWidth
            Case "Pic_Proj3"
                ActiveSheet.Shapes(shp.Name).DrawingObject.Formula = "=Proj3FW"
                ActiveSheet.Shapes(shp.Name).Height = MyHeight: ActiveSheet.Shapes(shp.Name).Width = MyWidth
            Case "Pic_Proj3All"
                ActiveSheet.Shapes(shp.Name).DrawingObject.Formula = "=Proj3"
                ActiveSheet.Shapes(shp.Name).Height = MyHeight: ActiveSheet.Shapes(shp.Name).Width = MyWidth
            Case "Pic_Proj4"
                ActiveSheet.Shapes(shp.Name).DrawingObject.Formula = "=Proj4FW"
                ActiveSheet.Shapes(shp.Name).Height = MyHeight: ActiveSheet.Shapes(shp.Name).Width = MyWidth
            Case "Pic_Proj4All"
                ActiveSheet.Shapes(shp.Name).DrawingObject.Formula = "=Proj4"
                ActiveSheet.Shapes(shp.Name).Height = MyHeight: ActiveSheet.Shapes(shp.Name).Width = MyWidth
            Case "Pic_Proj5"
                ActiveSheet.Shapes(shp.Name).DrawingObject.Formula = "=Proj5FW"
                ActiveSheet.Shapes(shp.Name).Height = MyHeight: ActiveSheet.Shapes(shp.Name).Width = MyWidth
            Case "Pic_Proj5All"
                ActiveSheet.Shapes(shp.Name).DrawingObject.Formula = "=Proj5"
                ActiveSheet.Shapes(shp.Name).Height = MyHeight: ActiveSheet.Shapes(shp.Name).Width = MyWidth
            Case "Pic_Proj6"
                ActiveSheet.Shapes(shp.Name).DrawingObject.Formula = "=Proj6FW"
                ActiveSheet.Shapes(shp.Name).Height = MyHeight: ActiveSheet.Shapes(shp.Name).Width = MyWidth
            Case "Pic_Proj6All"
                ActiveSheet.Shapes(shp.Name).DrawingObject.Formula = "=Proj6"
                ActiveSheet.Shapes(shp.Name).Height = MyHeight: ActiveSheet.Shapes(shp.Name).Width = MyWidth
            Case "Pic_Proj7"
                ActiveSheet.Shapes(shp.Name).DrawingObject.Formula = "=Proj7FW"
                ActiveSheet.Shapes(shp.Name).Height = MyHeight: ActiveSheet.Shapes(shp.Name).Width = MyWidth
            Case "Pic_Proj7All"
                ActiveSheet.Shapes(shp.Name).DrawingObject.Formula = "=Proj7"
                ActiveSheet.Shapes(shp.Name).Height = MyHeight: ActiveSheet.Shapes(shp.Name).Width = MyWidth
            Case "Pic_ProjFY"
                ActiveSheet.Shapes(shp.Name).DrawingObject.Formula = "=ProjFYFw"
                ActiveSheet.Shapes(shp.Name).Height = MyHeight: ActiveSheet.Shapes(shp.Name).Width = MyWidth
            Case "Pic_ProjFYAll"
                ActiveSheet.Shapes(shp.Name).DrawingObject.Formula = "=ProjFY"
                ActiveSheet.Shapes(shp.Name).Height = MyHeight: ActiveSheet.Shapes(shp.Name).Width = MyWidth
    'MRDW DAT1
            Case "Pic_DEMwkFW"
                ActiveSheet.Shapes(shp.Name).DrawingObject.Formula = "=DemWk_FW"
                ActiveSheet.Shapes(shp.Name).Height = MyHeight: ActiveSheet.Shapes(shp.Name).Width = MyWidth
            Case "Pic_DEMwkWD"
                ActiveSheet.Shapes(shp.Name).DrawingObject.Formula = "=DemWk_WD"
                ActiveSheet.Shapes(shp.Name).Height = MyHeight: ActiveSheet.Shapes(shp.Name).Width = MyWidth
            Case "Pic_DEMwkWE"
                ActiveSheet.Shapes(shp.Name).DrawingObject.Formula = "=DemWk_WE"
                ActiveSheet.Shapes(shp.Name).Height = MyHeight: ActiveSheet.Shapes(shp.Name).Width = MyWidth
            Case "Pic_DEMwk_T1FW"
                ActiveSheet.Shapes(shp.Name).DrawingObject.Formula = "=DemWK_FWTier1"
                ActiveSheet.Shapes(shp.Name).Height = MyHeight: ActiveSheet.Shapes(shp.Name).Width = MyWidth
            Case "Pic_DEMwk_T1WD"
                ActiveSheet.Shapes(shp.Name).DrawingObject.Formula = "=DemWK_WDTier1"
                ActiveSheet.Shapes(shp.Name).Height = MyHeight: ActiveSheet.Shapes(shp.Name).Width = MyWidth
            Case "Pic_DEMwk_T1WE"
                ActiveSheet.Shapes(shp.Name).DrawingObject.Formula = "=DemWK_WETier1"
                ActiveSheet.Shapes(shp.Name).Height = MyHeight: ActiveSheet.Shapes(shp.Name).Width = MyWidth
            Case "Pic_DEMwk_T2"
                ActiveSheet.Shapes(shp.Name).DrawingObject.Formula = "=DemWK_FWTier2"
                ActiveSheet.Shapes(shp.Name).Height = MyHeight: ActiveSheet.Shapes(shp.Name).Width = MyWidth
            Case "Pic_DEMwk_T3"
                ActiveSheet.Shapes(shp.Name).DrawingObject.Formula = "=DemWK_FWTier3"
                ActiveSheet.Shapes(shp.Name).Height = MyHeight: ActiveSheet.Shapes(shp.Name).Width = MyWidth
            Case "Pic_DEMwk_T4"
                ActiveSheet.Shapes(shp.Name).DrawingObject.Formula = "=DemWK_FWTier4"
                ActiveSheet.Shapes(shp.Name).Height = MyHeight: ActiveSheet.Shapes(shp.Name).Width = MyWidth
            Case "Pic_DEMmth_FW"
                ActiveSheet.Shapes(shp.Name).DrawingObject.Formula = "=DemMth_FW"
                ActiveSheet.Shapes(shp.Name).Height = MyHeight: ActiveSheet.Shapes(shp.Name).Width = MyWidth
            Case "Pic_DEMmth_WD"
                ActiveSheet.Shapes(shp.Name).DrawingObject.Formula = "=DemMth_WD"
                ActiveSheet.Shapes(shp.Name).Height = MyHeight: ActiveSheet.Shapes(shp.Name).Width = MyWidth
            Case "Pic_DEMmth_WE"
                ActiveSheet.Shapes(shp.Name).DrawingObject.Formula = "=DemMth_WE"
                ActiveSheet.Shapes(shp.Name).Height = MyHeight: ActiveSheet.Shapes(shp.Name).Width = MyWidth
            Case "Pic_DEMmth_T1FW"
                ActiveSheet.Shapes(shp.Name).DrawingObject.Formula = "=DemMth_FWTier1"
                ActiveSheet.Shapes(shp.Name).Height = MyHeight: ActiveSheet.Shapes(shp.Name).Width = MyWidth
            Case "Pic_DEMmth_T1WD"
                ActiveSheet.Shapes(shp.Name).DrawingObject.Formula = "=DemMth_WDTier1"
                ActiveSheet.Shapes(shp.Name).Height = MyHeight: ActiveSheet.Shapes(shp.Name).Width = MyWidth
            Case "Pic_DEMmth_T1WE"
                ActiveSheet.Shapes(shp.Name).DrawingObject.Formula = "=DemMth_WETier1"
                ActiveSheet.Shapes(shp.Name).Height = MyHeight: ActiveSheet.Shapes(shp.Name).Width = MyWidth
            Case "Pic_DEMmth_T2"
                ActiveSheet.Shapes(shp.Name).DrawingObject.Formula = "=DemMth_FWTier2"
                ActiveSheet.Shapes(shp.Name).Height = MyHeight: ActiveSheet.Shapes(shp.Name).Width = MyWidth
            Case "Pic_DEMmth_T3"
                ActiveSheet.Shapes(shp.Name).DrawingObject.Formula = "=DemMth_FWTier3"
                ActiveSheet.Shapes(shp.Name).Height = MyHeight: ActiveSheet.Shapes(shp.Name).Width = MyWidth
            Case "Pic_DEMmth_T4"
                ActiveSheet.Shapes(shp.Name).DrawingObject.Formula = "=DemMth_FWTier4"
                ActiveSheet.Shapes(shp.Name).Height = MyHeight: ActiveSheet.Shapes(shp.Name).Width = MyWidth
        End Select
    MyHeight = Empty: MyWidth = Empty
Next
ActiveSheet.Range("A1").Activate
Set shp = Nothing

On Error GoTo 0

End Sub
Private Sub Worksheet_Deactivate()
Dim shp As Shape, ws As Worksheet

On Error Resume Next
    
    Unload ufrmPacket 'unload the userform if it is visible

For Each ws In Worksheets 'loop through each custom tab to remove the pic formulas
    Select Case VBA.Left(ws.CodeName, 3)
        Case "wsC"
            For Each shp In ws.Shapes
                Select Case VBA.Left(shp.Name, 4)
                    Case "Pic_"
                        ws.Shapes(shp.Name).DrawingObject.Formula = ""
                End Select
            Next
    End Select
Next

ActiveSheet.Range("A1").Activate
Set shp = Nothing
On Error GoTo 0

End Sub

Attribute VB_Name = "ws_Dashboard"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Option Explicit

Private Sub Worksheet_Activate()
    
    Call UnprotectMe
    
    Application.ScreenUpdating = False
    Application.ActiveWindow.Zoom = 100

    Call GraphRest

    On Error Resume Next
        ws_Dashboard.OLEObjects("KeyLegends").Visible = False
    On Error GoTo 0

    Call DashboardProtectMe

    ActiveSheet.ScrollArea = "$A$1:$BB$380"
    ActiveSheet.DisplayPageBreaks = False
    Application.ScreenUpdating = True

End Sub
Attribute VB_Name = "ws_DataSource"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Option Explicit

Private Sub Worksheet_Activate()

Call ProtectMe
ActiveSheet.ScrollArea = "$A$1:$T$85"
End Sub

Attribute VB_Name = "ws_DayXDay"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Option Explicit

Private Sub Worksheet_Activate()
       
    Call ApplyCF
    Call Auto_Fit_DaybyDay
    ActiveSheet.EnableSelection = xlNoRestrictions
    ActiveSheet.ScrollArea = "$A$1:$CP$511"
    ActiveSheet.DisplayPageBreaks = False
    
End Sub

Private Sub Worksheet_Change(ByVal Target As Range) 'this is to save the new comments entered in the SSR
Dim OYrow As Long, Mydate As Date

    Const kOverCol = 3

    On Error Resume Next

    If Target.Column = kOverCol Then
        With Application: .EnableEvents = False: .Calculation = xlCalculationManual: .ScreenUpdating = False: End With
            'apply the new comments to the OY Proj data
            Mydate = Me.Cells(Target.Row, kOverCol).Offset(0, -1).Value
            
            If Not sh_OYProj.Range("A:A").Find(Mydate, lookat:=xlWhole) Is Nothing Then
                OYrow = sh_OYProj.Range("A:A").Find(Mydate, lookat:=xlWhole).Row
                If Target.Cells.Value = vbNullString Then
                    sh_OYProj.Range("Y" & OYrow).Value = vbNullString
                Else
                    sh_OYProj.Range("Y" & OYrow).Value = Me.Cells(Target.Row, kOverCol).Value
                End If
            End If
            
            Select Case Target.Cells.Value
                Case vbNullString
                    ws_Segmentation.Unprotect "unlockME"
                    ws_Segmentation.Cells(Target.Row, kOverCol).Value = vbNullString
                    ws_Segmentation.Protect "unlockME", DrawingObjects:=True, Contents:=True, Scenarios:=False, AllowFormattingCells:=False, AllowFormattingRows:=False, AllowFormattingColumns:=False
                    
                    ws_RMcollection.Unprotect "unlockME"
                    ws_RMcollection.Cells(Target.Row, kOverCol).Value = vbNullString
                    ws_RMcollection.Protect "unlockME", DrawingObjects:=True, Contents:=True, Scenarios:=False, AllowFormattingCells:=False, AllowFormattingRows:=False, AllowFormattingColumns:=False
                Case Else
                    ws_Segmentation.Unprotect "unlockME"
                    ws_Segmentation.Cells(Target.Row, kOverCol).Value = Me.Cells(Target.Row, kOverCol).Value
                    ws_Segmentation.Protect "unlockME", DrawingObjects:=True, Contents:=True, Scenarios:=False, AllowFormattingCells:=False, AllowFormattingRows:=False, AllowFormattingColumns:=False
                    
                    ws_RMcollection.Unprotect "unlockME"
                    ws_RMcollection.Cells(Target.Row, kOverCol).Value = Me.Cells(Target.Row, kOverCol).Value
                    ws_RMcollection.Protect "unlockME", DrawingObjects:=True, Contents:=True, Scenarios:=False, AllowFormattingCells:=False, AllowFormattingRows:=False, AllowFormattingColumns:=False
            End Select
            
        With Application: .Calculation = xlCalculationAutomatic: .EnableEvents = True: .ScreenUpdating = True: End With
    End If
    On Error GoTo 0
    OYrow = Empty: Mydate = Empty
End Sub


Attribute VB_Name = "ws_Log"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Option Explicit

Attribute VB_Name = "ws_RMcollection"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Option Explicit

Private Sub Worksheet_Activate()
    Call ApplyCF
    Call Auto_Fit_RMcollection
    ActiveSheet.ScrollArea = "$A$1:$CH$511"
    ActiveSheet.DisplayPageBreaks = False
    
End Sub


Attribute VB_Name = "ws_SSP_Agenda"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Option Explicit

Private Sub Worksheet_Activate()
    ActiveSheet.ScrollArea = "$A$1:$R$55"
    ActiveSheet.DisplayPageBreaks = False
    ActiveSheet.EnableSelection = xlUnlockedCells
    ActiveSheet.Range("A7").Activate
End Sub


Attribute VB_Name = "ws_SSP_PPT"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Option Explicit

Private Sub Worksheet_Activate()
Dim ws As Worksheet, Irow As Long, iCol As Long
    
    On Error GoTo 0
    
    ActiveSheet.ScrollArea = "$A$1:$R$55"
    ActiveSheet.DisplayPageBreaks = False
    
    With Application: .Calculation = xlCalculationManual: .ScreenUpdating = False: End With
    
    'first apply all custom slide to the master list
    sh_PkgLayout.Range("C42:C" & sh_PkgLayout.Cells(Rows.Count, 3).End(xlUp).Row + 1).ClearContents

    For Each ws In Worksheets
        If (VBA.Left(ws.CodeName, 9) Like "wsCustom*" And ws.CodeName <> "wsCustom") Then
                sh_PkgLayout.Range("C" & sh_PkgLayout.Cells(Rows.Count, 3).End(xlUp).Row + 1).Value = ws.Name
        End If
    Next

    'check if any preselect tab doesn't exist anymore
    For iCol = 5 To 41 Step 4
        For Irow = sh_PkgLayout.Cells(Rows.Count, iCol).End(xlUp).Row To 4 Step -1
            If sh_PkgLayout.Range(sh_PkgLayout.Cells(4, 3), sh_PkgLayout.Cells(sh_PkgLayout.Cells(Rows.Count, 3).End(xlUp).Row + 1, 3)).Find(sh_PkgLayout.Cells(Irow, iCol), lookat:=xlPart) Is Nothing Then
                sh_PkgLayout.Cells(Irow, iCol).Delete xlUp
            End If
        Next Irow
    Next iCol
    
    With ws_Dashboard
        .Unprotect "unlockME"
        
        Call GraphRest
        
        .Protect "unlockME", DrawingObjects:=True, Contents:=True, Scenarios:=False, AllowFormattingCells:=True, AllowFormattingRows:=False, AllowFormattingColumns:=False, UserInterfaceOnly:=True
    End With
    
With Application: .Calculation = xlCalculationAutomatic: .ScreenUpdating = True: End With

Set ws = Nothing: Irow = Empty: iCol = Empty
End Sub

Private Sub Worksheet_Deactivate()
Dim shp As Shape, ws As Worksheet

Application.ScreenUpdating = False

On Error Resume Next
    Unload ufrmPacket
On Error GoTo 0

For Each ws In Worksheets
    Select Case VBA.Left(ws.CodeName, 3)
        Case "wsC"
            For Each shp In ws.Shapes
                Select Case VBA.Left(shp.Name, 4)
                    Case "Pic_"
                        ws.Shapes(shp.Name).DrawingObject.Formula = ""
                End Select
            Next
    End Select
Next

ActiveSheet.Range("A1").Activate
Set shp = Nothing

Application.ScreenUpdating = True

End Sub
Attribute VB_Name = "ws_Segmentation"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Option Explicit

Private Sub Worksheet_Activate()
    Call ApplyCF
    Call Auto_Fit_Seg
    ActiveSheet.ScrollArea = "$A$1:$BK$511"
    ActiveSheet.DisplayPageBreaks = False

End Sub
Attribute VB_Name = "ws_Setup"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Option Explicit

Private Sub Worksheet_Activate()
    ActiveSheet.ScrollArea = "$A$1:$O$40"
    ActiveSheet.Range("C15").Activate
    ActiveSheet.DisplayPageBreaks = False
    
End Sub

Attribute VB_Name = "ws_Summary"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Option Explicit

Private Sub Worksheet_Activate()
    Call Auto_Fit_DashSum
    ActiveSheet.ScrollArea = "$A$1:$S$520"
    ActiveSheet.DisplayPageBreaks = False
    
End Sub


Attribute VB_Name = "ws_Version"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Option Explicit

Private Sub Worksheet_Activate()
    ActiveSheet.ScrollArea = "$A$1:$D$40"
    ActiveSheet.DisplayPageBreaks = False
End Sub

Attribute VB_Name = "ws_Welcome"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Option Explicit

Private Sub Worksheet_Activate()
    ActiveSheet.ScrollArea = "$A$1:$R$55"
    ActiveSheet.DisplayPageBreaks = False
End Sub

Attribute VB_Name = "z_Developer"
Option Explicit
Option Private Module
Sub ResetPly()
    Application.CommandBars("Ply").Enabled = True
    Application.CommandBars("Ply").Reset
    
End Sub

Sub ShowAllTabs()
Dim ws As Worksheet, nm As Name

For Each ws In Worksheets
    ws.Visible = xlSheetVisible
    Select Case VBA.Left(ws.CodeName, 2)
        Case "sh", "ws": ws.Unprotect "unlockME"
        
    End Select

Next
For Each nm In Names
    nm.Visible = True
Next
Set ws = Nothing

End Sub
Sub ShowAllNameRanges()
Dim ws As Worksheet, nm As Name


For Each nm In Names
    nm.Visible = True
Next
Set ws = Nothing

End Sub

'Sub FindShapePlacement()
'
''this code will find the placement of each shape in the Dashboard. this is not used in the code anywhere. Just for reference in the future
'Dim shp As Shape, shp2 As Shape
'
'    For Each shp In ws_Dashboard.Shapes
'        If shp.Type = msoGroup Then
'
'            For Each shp2 In shp.GroupItems
'                sh_DashboardData.Range("EA" & sh_DashboardData.Cells(Rows.Count, 131).End(xlUp).Row + 1).Value = ws_Dashboard.Shapes(shp2.Name).Name
'                sh_DashboardData.Range("EB" & sh_DashboardData.Cells(Rows.Count, 131).End(xlUp).Row).Value = ws_Dashboard.Shapes(shp2.Name).Top
'                sh_DashboardData.Range("EC" & sh_DashboardData.Cells(Rows.Count, 131).End(xlUp).Row).Value = ws_Dashboard.Shapes(shp2.Name).Left
'            Next
'        Else
'                sh_DashboardData.Range("EA" & sh_DashboardData.Cells(Rows.Count, 131).End(xlUp).Row + 1).Value = ws_Dashboard.Shapes(shp.Name).Name
'                sh_DashboardData.Range("EB" & sh_DashboardData.Cells(Rows.Count, 131).End(xlUp).Row).Value = ws_Dashboard.Shapes(shp.Name).Top
'                sh_DashboardData.Range("EC" & sh_DashboardData.Cells(Rows.Count, 131).End(xlUp).Row).Value = ws_Dashboard.Shapes(shp.Name).Left
'
'        End If
'    Next
'Set shp = Nothing: shp2 = Nothing
'
'End Sub




INQUEST-PP=macro
