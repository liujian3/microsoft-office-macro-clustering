Attribute VB_Name = "F_Step1_|fffd||fffd||fffd||fffd|"
Attribute VB_Base = "0{28258BC0-E30D-4312-80B1-6368A41ABD44}{3F7E911E-9AFA-4A25-B94D-8AACD915B648}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Option Explicit
Private Sub Command_Close_Click()
Unload Me
End Sub
Private Sub Command_Select_Click()
If Me.List_|fffd||a5d7|.ListIndex = -1 Then
MsgBox "|fffd||fffd||fffd|X|fffd|g|fffd||fffd|I|fffd||fffd||fffd||fffd||fffd||109||fffd||fffd||fffd||fffd||fffd||fffd|B", vbCritical, Msg_Title
Exit Sub
End If
Selection.Value = Me.List_|fffd||a5d7|.List(Me.List_|fffd||a5d7|.ListIndex)
Unload Me
End Sub
Private Sub List_|fffd||a5d7|_DblClick(ByVal Cancel As MSForms.ReturnBoolean)
If Me.List_|fffd||a5d7|.ListIndex = -1 Then
MsgBox "|fffd||fffd||fffd|X|fffd|g|fffd||fffd|I|fffd||fffd||fffd||fffd||fffd||109||fffd||fffd||fffd||fffd||fffd||fffd|B", vbCritical, Msg_Title
Exit Sub
End If
Selection.Value = Me.List_|fffd||a5d7|.List(Me.List_|fffd||a5d7|.ListIndex)
Unload Me
End Sub
Private Sub UserForm_Initialize()
Dim ListAry         As Variant
Dim DataAry         As Variant
Dim i               As Long
Dim j               As Long
On Error GoTo myError
ListAry = Sheet_Step1.Range("NM_|fffd||fffd||fffd||fffd|").Value
On Error GoTo 0
ReDim DataAry(LBound(ListAry) To UBound(ListAry) + 1, LBound(ListAry, 2) To UBound(ListAry, 2))
DataAry(LBound(ListAry), LBound(ListAry, 2)) = ""
For i = LBound(ListAry) To UBound(ListAry)
For j = LBound(ListAry, 2) To UBound(ListAry, 2)
DataAry(i + 1, j) = ListAry(i, j)
Next
Next
Me.List_|fffd||a5d7|.List = DataAry
myError:
End Sub
Attribute VB_Name = "F_Step3_|fffd|s|fffd||fffd||fffd||695|W"
Attribute VB_Base = "0{2A2C795B-8EF3-4EFA-ABD6-8D3B97DD6051}{CC3DA746-46DD-4456-B78A-132447FB339D}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Option Explicit
Private Sub Command_Close_Click()
Unload Me
End Sub
Private Sub Command_Select_Click()
Dim i                           As Long
Dim ListData                    As String
Dim Score                       As Double
Dim ListSelectCheck             As Boolean
Dim ListSelectCount             As Long
Dim PreProtectMode              As Boolean
Call FNC_ActionEventMode(False)
ListSelectCheck = False
PreProtectMode = Sheet_Step3_|fffd||fffd||fffd||fffd|.ProtectContents
If PreProtectMode = True Then
Sheet_Step3_|fffd||fffd||fffd||fffd|.Unprotect (SheetProtectPass)
End If
With Me.List_|fffd||a5d7|
For i = 0 To .ListCount - 1
If .Selected(i) = True Then
ListData = ListData & .List(i, 0) & .List(i, 2)
ListSelectCheck = True
If IsEmpty(.List(i, 2)) = False Then
ListSelectCount = ListSelectCount + 1
End If
End If
Next
End With
If ListSelectCheck = False Then
MsgBox "|fffd||fffd||fffd|X|fffd|g|fffd||fffd|I|fffd||fffd||fffd||fffd||fffd||109||fffd||fffd||fffd||fffd||fffd||fffd|B", vbCritical, Msg_Title
GoTo myErr
End If
Selection.Value = ListData
Selection.EntireRow.AutoFit
If Selection.EntireRow.Height < 48 Then
Selection.RowHeight = 48
End If
Score = ListSelectCount * 100 / (Me.List_|fffd||a5d7|.ListCount - 1)
Score = Application.WorksheetFunction.RoundDown(Score, 0)
Selection.Offset(0, 1).Value = Score
If PreProtectMode = True Then
Sheet_Step3_|fffd||fffd||fffd||fffd|.Protect (SheetProtectPass)
End If
Unload Me
myErr:
Call FNC_ActionEventMode(True)
End Sub
Private Sub UserForm_Initialize()
Dim ListAry     As Variant
Dim DataAry     As Variant
Dim i           As Long
Dim j           As Long
ListAry = FNC_GetListData
If IsEmpty(ListAry) = True Then
GoTo myError
End If
ReDim DataAry(LBound(ListAry) To UBound(ListAry) + 1, LBound(ListAry, 2) To UBound(ListAry, 2))
DataAry(LBound(ListAry), LBound(ListAry, 2)) = ""
For i = LBound(ListAry) To UBound(ListAry)
For j = LBound(ListAry, 2) To UBound(ListAry, 2)
DataAry(i + 1, j) = ListAry(i, j)
Next
Next
Me.List_|fffd||a5d7|.List = DataAry
myError:
End Sub
Private Function FNC_GetListData() As Variant
Dim DataAry     As Variant
Dim Loop_i      As Long
Dim List_i      As Long
Dim ListCheck   As Boolean
ListCheck = False
ReDim DataAry(0 To 2, 0 To 0)
List_i = 0
With Sheet_Step2
For Loop_i = E_Step2.Row_Start To E_Step2.Row_End
If .Cells(Loop_i, E_Step2.Col_|fffd||fffd||fffd||fffd||fffd||fffd|).Value <> "" Then
ReDim Preserve DataAry(0 To 2, 0 To List_i)
DataAry(0, List_i) = "|fffd||fffd|"
DataAry(1, List_i) = .Cells(Loop_i, E_Step2.Col_|fffd|I|fffd||fffd|v|fffd|f).Value
DataAry(2, List_i) = .Cells(Loop_i, E_Step2.Col_|fffd||fffd||fffd||34d||fffd||fffd||fffd|).Value
List_i = List_i + 1
ListCheck = True
End If
Next
End With
DataAry = Transpose(DataAry)
If ListCheck = False Then
DataAry = Empty
End If
FNC_GetListData = DataAry
End Function
Attribute VB_Name = "M00_AutoOpen"
Option Explicit
Public Function Auto_Open()
Call FNC_ActionEventMode(True)
Sheet_Menu.Shapes("Open_Box").Visible = msoFalse
End Function
Attribute VB_Name = "M01_MenuEvent"
Option Explicit
Sub Jump_Step1_Click()
If FNC_ErrCheck_DacyCells = False Then
Exit Sub
End If
Call FNC_ActionEventMode(False)
ThisWorkbook.Activate
Call FNC_SheetVisible(Sheet_Step1)
Sheet_Step1.Select
Sheet_Step1.Range(Step1_SelectRng).Select
ActiveWindow.ScrollRow = E_Step1.E_StartRow - 1
Call FNC_SheetVeryHidden(Sheet_Menu)
Call FNC_ActionEventMode(True)
End Sub
Sub Jump_Step2_Click()
If FNC_ErrCheck_DacyCells = False Then
Exit Sub
End If
Call FNC_ActionEventMode(False)
ThisWorkbook.Activate
Call FNC_SheetVisible(Sheet_Step2)
Sheet_Step2.Select
Sheet_Step2.Range(Step2_SelectRng).Select
ActiveWindow.ScrollRow = E_Step2.Row_Start
Call FNC_SheetVeryHidden(Sheet_Menu)
Call FNC_ActionEventMode(True)
End Sub
Sub Jump_Step3_Click()
If FNC_ErrCheck_DacyCells = False Then
Exit Sub
End If
Call FNC_ActionEventMode(False)
ThisWorkbook.Activate
Call FNC_SheetVisible(Sheet_Step3)
Call FNC_SheetVisible(Sheet_Step3_|fffd||fffd||fffd||fffd|)
Sheet_Step3.Select
Sheet_Step3.Range(Step3_SelectRng).Select
ActiveWindow.ScrollRow = E_Step3.Row_Start
Call FNC_SheetVeryHidden(Sheet_Menu)
Call FNC_ActionEventMode(True)
End Sub
Private Function FNC_ErrCheck_DacyCells() As Boolean
FNC_ErrCheck_DacyCells = False
If Sheet_Menu.Range(MenuBirthdayCell).Value <> "" Then
GoTo NextCheck
End If
MsgBox "|fffd|a|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||342||fffd||fffd||109||fffd||fffd||fffd||fffd||fffd||fffd|B", vbCritical, Msg_Title
Exit Function
NextCheck:
If Sheet_Menu.Range(MenuStartdayCell).Value <> "" Then
FNC_ErrCheck_DacyCells = True
Exit Function
End If
MsgBox "|fffd|g|fffd|p|fffd|J|fffd|n|fffd||fffd||fffd||fffd||fffd||fffd||342||fffd||fffd||109||fffd||fffd||fffd||fffd||fffd||fffd|B", vbCritical, Msg_Title
End Function
Attribute VB_Name = "M02_Step1Event"
Option Explicit
Sub Btn_ReturnMenu_Step1()
If NoDataChk = True Then
If DataNothingChk = False Then
MsgBox "|fffd||fffd||382||242||fffd||fffd||202||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|I|fffd||fffd||fffd||fffd||fffd||102||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|B", vbCritical, Msg_Title
Exit Sub
End If
End If
If FNC_SaveOrReturnEvent = False Then
Exit Sub
End If
Call FNC_SheetVeryHidden(Sheet_Step1)
End Sub
Sub Btn_Goto_HelpSheet_Step1()
Call FNC_Goto_HelpSheet_SetRange("Step1")
End Sub
Sub Btn_Move_FromStep1_ToStep2()
If DataNothingChk = False Then
MsgBox "|fffd||fffd||382||242||fffd||fffd||202||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|I|fffd||fffd||fffd||fffd||fffd||102||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|B", vbCritical, Msg_Title
Exit Sub
End If
Sheet_Step2.Visible = xlSheetVisible
Sheet_Step2.Activate
Sheet_Step1.Visible = xlSheetVeryHidden
End Sub
Public Function FNC_Check_OverlapClear_Step1|fffd||fffd||fffd||fffd|(TargetRange As Range) As Boolean
Dim Target|fffd||fffd||fffd||fffd|              As String
Dim CountNo                 As Double
Dim trng                    As Range
Dim LoopRng                 As Range
Dim endrow                  As Long
Dim i                       As Long
With Sheet_Step1
endrow = .Cells(.Rows.Count, E_Step1.E_Col_|fffd||695|W|fffd||fffd||fffd||fffd|).End(xlUp).Row
If endrow < .Cells(.Rows.Count, E_Step1.E_Col_|fffd||fffd||fffd||fffd|).End(xlUp).Row Then
endrow = .Cells(.Rows.Count, E_Step1.E_Col_|fffd||fffd||fffd||fffd|).End(xlUp).Row
End If
If endrow < E_Step1.E_StartRow Then
Exit Function
End If
Set trng = .Range(.Cells(E_Step1.E_StartRow, E_Step1.E_Col_|fffd|I|fffd||fffd||fffd||fffd||fffd||fffd|), .Cells(endrow, E_Step1.E_Col_|fffd|I|fffd||fffd||fffd||fffd||fffd||fffd|))
Target|fffd||fffd||fffd||fffd| = .Cells(TargetRange.Row, E_Step1.E_col_|fffd|I|fffd||15a97||fffd|Wk).Value & 1
For Each LoopRng In trng
If LoopRng.Value = Target|fffd||fffd||fffd||fffd| And TargetRange.Row <> LoopRng.Row Then
.Cells(LoopRng.Row, E_Step1.E_Col_|fffd|I|fffd||15a96||fffd|).ClearContents
End If
Next
End With
Set trng = Nothing
End Function
Private Sub Btn_Delete_Step1()
If FNC_SelectionRowDataDelete = False Then
Exit Sub
End If
If FNC_RegenerationRow_Step1 = True Then
MsgBox "|fffd||d3dc||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|A|fffd||14c||fffd||fffd||fffd||fffd|1|fffd|s|fffd||1c9||fffd||fffd||fffd||fffd||fffd||702||fffd||fffd||fffd||fffd|B", vbInformation, Msg_Title
Else
MsgBox "|fffd||d3dc||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||702||fffd||fffd||fffd||fffd|B" & vbCrLf & "|fffd||fffd||fffd||243|f|fffd|[|fffd|^|fffd||fffd||fffd||34d|s|fffd||fffd||fffd||151||fffd||702||152||1c9||fffd||fffd||fffd||fffd||fffd||102||fffd||fffd||90bd||fffd||7cd|s|fffd||312||1c9||fffd||fffd||34d|s|fffd||fffd||fffd||702||fffd||fffd||fffd||142||fffd||fffd||fffd||fffd|B", vbInformation, Msg_Title
End If
End Sub
Private Function FNC_SelectionRowDataDelete() As Boolean
Dim Selected_Rng        As Range
FNC_SelectionRowDataDelete = False
On Error Resume Next
Set Selected_Rng = Selection
On Error GoTo 0
If Selected_Rng Is Nothing = True Then
MsgBox "|fffd||d3dc||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|1|fffd||82||243|J|fffd|[|fffd|\|fffd||fffd||fffd||fffd||fffd||fffd||fffd||d0b9||fffd||109||fffd||fffd||fffd||fffd||fffd||fffd|B", vbCritical, Msg_Title
GoTo myErr
End If
If Chk_RangeOnlyRow(Selected_Rng) = False Then
MsgBox "|fffd||d3dc||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|1|fffd||82||243|J|fffd|[|fffd|\|fffd||fffd||fffd||fffd||fffd||fffd||fffd||d0b9||fffd||109||fffd||fffd||fffd||fffd||fffd||fffd|B", vbCritical, Msg_Title
GoTo myErr
End If
If Selected_Rng.Row < E_Step1.E_StartRow Or Selected_Rng.Row > E_Step1.E_EndRow Then
MsgBox "|fffd||fffd||fffd||30d|s|fffd||34d||d3dc||fffd||142||fffd||fffd||702||fffd||fffd||fffd|B", vbCritical, Msg_Title
GoTo myErr
End If
If Sheet_Step1.Cells(Selected_Rng.Row, E_Step1.E_Col_|fffd||695|W|fffd||fffd||fffd||fffd|).Value = "" Then
MsgBox "|fffd|I|fffd||12182||30d|s|fffd||356||fffd||fffd||fffd||fffd||752||80b3||fffd||fffd||102||fffd||fffd||202||fffd||fffd||fffd||fffd||7c1|A|fffd||d3dc||fffd||142||fffd||fffd||702||fffd||fffd||fffd|B", vbCritical, Msg_Title
GoTo myErr
End If
If Sheet_Step1.Cells(Selected_Rng.Row, E_Step1.E_Col_|fffd||d3dc||fffd||fffd|).Value <> "" Then
MsgBox "|fffd||fffd||fffd||142||24d||d3dc||fffd||fffd||fffd||fffd||fffd|s|fffd||302||fffd||fffd||7c1|A|fffd||d3dc||fffd||142||fffd||fffd||702||fffd||fffd||fffd|B", vbCritical, Msg_Title
GoTo myErr
End If
On Error Resume Next
With Sheet_Step1
.Range(.Cells(Selected_Rng.Row, E_Step1.E_Col_|fffd||695|W|fffd||fffd||fffd||fffd|), .Cells(Selected_Rng.Row, E_Step1.E_Col_|fffd|N|fffd||fffd|)).Select
End With
On Error GoTo 0
If MsgBox("|fffd|I|fffd||12182||316||fffd||fffd||fffd||fffd||d3dc||fffd||fffd||fffd||702||fffd||fffd|B|fffd||fffd||b0b5||fffd||fffd||fffd||142||fffd||fffd||fffd||fffd|H" & vbCrLf & "|fffd|i|fffd||fffd||fffd|e|fffd||34e|c|fffd||fffd||702||fffd||fffd||fffd||fffd|A|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||702||fffd||fffd|j" _
, vbOKCancel + vbInformation, Msg_Title) = vbCancel Then
GoTo myErr
End If
Call FNC_ActionEventMode(False)
Sheet_Step1.Unprotect (SheetProtectPass)
Selection.Font.Strikethrough = True
Sheet_Step1.Cells(Selected_Rng.Row, E_Step1.E_Col_|fffd|I|fffd||15a96||fffd|).ClearContents
Sheet_Step1.Cells(Selected_Rng.Row, E_Step1.E_Col_|fffd||d3dc||fffd||fffd|).Value = 1
Sheet_Step1.Protect (SheetProtectPass)
FNC_SelectionRowDataDelete = True
myErr:
On Error Resume Next
Selected_Rng.Select
On Error GoTo 0
Call FNC_ActionEventMode(True)
Set Selected_Rng = Nothing
End Function
Private Function FNC_RegenerationRow_Step1() As Boolean
Dim End_No                          As Long
Dim bProtectMode                    As Boolean
Dim Last_Rng                        As Range
With Sheet_Step1
bProtectMode = .ProtectContents
Set Last_Rng = .Cells(.Rows.Count, E_Step1.E_Col_No).End(xlUp)
If bProtectMode = True Then
.Unprotect (SheetProtectPass)
End If
If Last_Rng.Offset(1, 0).Row > E_Step1.E_EndRow Then
FNC_RegenerationRow_Step1 = False
Else
Last_Rng.Offset(1, 0).Rows.Hidden = False
If bProtectMode = True Then
.Protect (SheetProtectPass)
End If
FNC_RegenerationRow_Step1 = True
End If
End With
Set Last_Rng = Nothing
End Function
Private Function FNC_Sort_|fffd||fffd||fffd||fffd|()
Dim End_Row     As Long
Dim OrderMode   As String
Dim SortKeyRng      As Range
Dim TargetSortRng   As Range
Call FNC_ActionEventMode(False)
Call FNC_UnprotectSheet(Sheet_Step1)
With Sheet_Step1
End_Row = .Cells(.Rows.Count, E_Step1.E_Col_No).End(xlUp).Row
Set SortKeyRng = .Range(.Cells(E_Step1.E_StartRow, E_Step1.E_Col_|fffd||fffd||fffd||fffd|), .Cells(End_Row, E_Step1.E_Col_|fffd||fffd||fffd||fffd|))
Set TargetSortRng = .Range(.Cells(E_Step1.E_StartRow, E_Step1.E_Col_|fffd||d3dc||fffd||fffd|), .Cells(End_Row, E_Step1.E_Col_|fffd|I|fffd||15a96||fffd|))
If .Range(Step1_SortModeRng).Value = "" Then
.Range(Step1_SortModeRng).Value = xlAscending
End If
If .Range(Step1_SortModeRng).Value = xlAscending Then
OrderMode = xlAscending
.Range(Step1_SortModeRng).Value = xlDescending
Else
OrderMode = xlDescending
.Range(Step1_SortModeRng).Value = xlAscending
End If
End With
TargetSortRng.Sort key1:=SortKeyRng, order1:=OrderMode
Call FNC_ProtectSheet(Sheet_Step1)
Call FNC_ActionEventMode(True)
Set SortKeyRng = Nothing
Set TargetSortRng = Nothing
End Function
Private Function DataNothingChk() As Boolean
Dim DataAry                         As Variant
Dim LoopRow                         As Long
DataNothingChk = False
With Sheet_Step1
DataAry = .Range(.Cells(E_Step1.E_StartRow, Step1_ChoosesCol), .Cells(E_Step1.E_EndRow, Step1_ChoosesCol)).Value
End With
For LoopRow = LBound(DataAry, 1) To UBound(DataAry, 1)
If DataAry(LoopRow, 1) <> "" Then
DataNothingChk = True
Exit For
End If
Next LoopRow
End Function
Private Function NoDataChk() As Boolean
With Sheet_Step1
If .Cells(E_Step1.E_EndRow + 1, E_Step1.E_Col_|fffd||695|W|fffd||fffd||fffd||fffd|).End(xlUp).Row >= E_Step1.E_StartRow Then
NoDataChk = True
Exit Function
End If
If .Cells(E_Step1.E_EndRow + 1, E_Step1.E_Col_|fffd||fffd||fffd||fffd|).End(xlUp).Row >= E_Step1.E_StartRow Then
NoDataChk = True
Exit Function
End If
If .Cells(E_Step1.E_EndRow + 1, E_Step1.E_Col_|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|).End(xlUp).Row >= E_Step1.E_StartRow Then
NoDataChk = True
Exit Function
End If
NoDataChk = False
End With
End Function
Private Function Chk_RangeOnlyRow(TargetRange As Range) As Boolean
Dim SafeRow                     As Long
Dim tArea                       As Range
Chk_RangeOnlyRow = False
If TargetRange.EntireRow.Count > 1 Then
GoTo FinishLabel
End If
SafeRow = TargetRange.Row
For Each tArea In TargetRange.Areas
If tArea.EntireRow.Count > 1 Then
GoTo FinishLabel
End If
If tArea.Row <> SafeRow Then
GoTo FinishLabel
End If
Next tArea
Chk_RangeOnlyRow = True
FinishLabel:
Set tArea = Nothing
End Function

Attribute VB_Name = "M03_Step2Event"
Option Explicit
Sub Btn_ReturnMenu_Step2()
If FNC_SaveOrReturnEvent = False Then
Exit Sub
End If
Call FNC_SheetVeryHidden(Sheet_Step2)
End Sub
Sub Btn_Goto_HelpSheet_Step2()
Call FNC_Goto_HelpSheet_SetRange("Step2")
End Sub
Sub Btn_Move_FromStep2_ToStep3()
Sheet_Step3.Visible = xlSheetVisible
Sheet_Step3_|fffd||fffd||fffd||fffd|.Visible = xlSheetVisible
Sheet_Step3.Activate
Sheet_Step2.Visible = xlSheetVeryHidden
End Sub
Sub Btn_PictureBox()
Dim PictureName         As String
Dim SelectRng           As Range
Call FNC_ActionEventMode(False)
Call FNC_UnprotectSheet(Sheet_Step2)
PictureName = Application.Caller
Set SelectRng = Selection
Sheet_Step2.Range("A1").Select
Call FNC_DisplaySelectPicture(PictureName)
SelectRng.Select
Call FNC_ProtectSheet(Sheet_Step2)
Call FNC_ActionEventMode(True)
End Sub
Public Function FNC_DisplaySelectPicture(ShapeName As String)
Dim TargetPicture   As Variant
Dim PicturePath     As String
Dim PictureWidth    As Long
Dim PictureHeight   As Long
Dim ShapeWidth      As Long
Dim ShapeHeight     As Long
Dim Width_|fffd||45e6|      As Double
Dim Height_|fffd||45e6|     As Double
PicturePath = FNC_SelectDialogPicture
If PicturePath = "False" Then
Exit Function
End If
On Error Resume Next
Set TargetPicture = Sheet_Step2.Pictures.Insert(PicturePath)
On Error GoTo 0
If TargetPicture Is Nothing = True Then
Exit Function
End If
Sheet_Step2.Shapes(ShapeName).Width = 183
Sheet_Step2.Shapes(ShapeName).Height = 102
PictureWidth = CLng(TargetPicture.Width)
PictureHeight = CLng(TargetPicture.Height)
ShapeWidth = Sheet_Step2.Shapes(ShapeName).Width
ShapeHeight = Sheet_Step2.Shapes(ShapeName).Height
Width_|fffd||45e6| = ShapeWidth / PictureWidth
Height_|fffd||45e6| = ShapeHeight / PictureHeight
If Width_|fffd||45e6| > Height_|fffd||45e6| Then
PictureWidth = PictureWidth * Height_|fffd||45e6|
PictureHeight = PictureHeight * Height_|fffd||45e6|
Sheet_Step2.Shapes(ShapeName).Width = PictureWidth
Sheet_Step2.Shapes(ShapeName).Height = PictureHeight
Else
PictureWidth = PictureWidth * Width_|fffd||45e6|
PictureHeight = PictureHeight * Width_|fffd||45e6|
Sheet_Step2.Shapes(ShapeName).Width = PictureWidth
Sheet_Step2.Shapes(ShapeName).Height = PictureHeight
End If
With Sheet_Step2.Shapes(ShapeName).Fill
.Visible = msoTrue
.UserPicture PicturePath
.TextureTile = msoFalse
End With
TargetPicture.Delete
Set TargetPicture = Nothing
End Function
Private Function FNC_SelectDialogPicture() As String
Dim FilePath          As String
FilePath = Application.GetOpenFilename("|fffd|},*.jpg;*.jpeg;*.gif;*.png;*.bmp")
FNC_SelectDialogPicture = FilePath
End Function
Public Function FNC_CheckTargetRow(Target As Range) As Long
Dim TargetRow   As Long
FNC_CheckTargetRow = 0
TargetRow = Target.Row
If TargetRow = E_Step2.Row_|fffd|m|fffd||fffd| Then
FNC_CheckTargetRow = TargetRow
End If
If TargetRow = E_Step2.Row_|fffd||fffd| Then
FNC_CheckTargetRow = TargetRow
End If
If TargetRow = E_Step2.Row_|fffd|L|fffd||fffd||fffd||fffd| Then
FNC_CheckTargetRow = TargetRow
End If
If TargetRow = E_Step2.Row_|fffd||fffd||fffd|Y Then
FNC_CheckTargetRow = TargetRow
End If
If TargetRow = E_Step2.Row_|fffd||fffd| Then
FNC_CheckTargetRow = TargetRow
End If
If TargetRow = E_Step2.Row_|fffd||fffd||fffd|N Then
FNC_CheckTargetRow = TargetRow
End If
If TargetRow = E_Step2.Row_|fffd|d|fffd||fffd| Then
FNC_CheckTargetRow = TargetRow
End If
End Function
Public Function FNC_|fffd||5340||fffd||fffd|_Event(Target As Range)
Dim TargetRow   As Long
Dim trng         As Range
TargetRow = Target.Row
If TargetRow <> E_Step2.Row_|fffd|m|fffd||fffd| Then
Set trng = Sheet_Step2.Cells(E_Step2.Row_|fffd|m|fffd||fffd|, E_Step2.Col_|fffd||5340||fffd||fffd|)
End If
If TargetRow <> E_Step2.Row_|fffd||fffd| Then
If trng Is Nothing = True Then
Set trng = Sheet_Step2.Cells(E_Step2.Row_|fffd||fffd|, E_Step2.Col_|fffd||5340||fffd||fffd|)
Else
Set trng = Application.Union(trng, Sheet_Step2.Cells(E_Step2.Row_|fffd||fffd|, E_Step2.Col_|fffd||5340||fffd||fffd|))
End If
End If
If TargetRow <> E_Step2.Row_|fffd|L|fffd||fffd||fffd||fffd| Then
Set trng = Application.Union(trng, Sheet_Step2.Cells(E_Step2.Row_|fffd|L|fffd||fffd||fffd||fffd|, E_Step2.Col_|fffd||5340||fffd||fffd|))
End If
If TargetRow <> E_Step2.Row_|fffd||fffd||fffd|Y Then
Set trng = Application.Union(trng, Sheet_Step2.Cells(E_Step2.Row_|fffd||fffd||fffd|Y, E_Step2.Col_|fffd||5340||fffd||fffd|))
End If
If TargetRow <> E_Step2.Row_|fffd||fffd| Then
Set trng = Application.Union(trng, Sheet_Step2.Cells(E_Step2.Row_|fffd||fffd|, E_Step2.Col_|fffd||5340||fffd||fffd|))
End If
If TargetRow <> E_Step2.Row_|fffd||fffd||fffd|N Then
Set trng = Application.Union(trng, Sheet_Step2.Cells(E_Step2.Row_|fffd||fffd||fffd|N, E_Step2.Col_|fffd||5340||fffd||fffd|))
End If
If TargetRow <> E_Step2.Row_|fffd|d|fffd||fffd| Then
Set trng = Application.Union(trng, Sheet_Step2.Cells(E_Step2.Row_|fffd|d|fffd||fffd|, E_Step2.Col_|fffd||5340||fffd||fffd|))
End If
trng.ClearContents
Set trng = Nothing
End Function
Public Function FNC_|fffd||fffd||fffd||fffd||fffd||fffd|_Event(Target As Range)
Dim TargetRow   As Long
Dim Count       As Long
Dim i           As Long
TargetRow = Target.Row
For i = E_Step2.Row_Start To E_Step2.Row_End
If Sheet_Step2.Cells(i, E_Step2.Col_|fffd|I|fffd||fffd|v|fffd|f).Value = Sheet_Step2.Cells(TargetRow, E_Step2.Col_|fffd|I|fffd||fffd|v|fffd|f).Value Then
If Count <> 0 Then
If i <> TargetRow Then
Sheet_Step2.Cells(i, E_Step2.Col_|fffd||fffd||fffd||fffd||fffd||fffd|).ClearContents
End If
Else
Count = 1
End If
End If
Next
End Function
Attribute VB_Name = "M04_Step3Event"
Option Explicit
Sub Btn_ReturnMenu_Step3()
If FNC_SaveOrReturnEvent = False Then
Exit Sub
End If
Call FNC_SheetVeryHidden(Sheet_Step3)
Call FNC_SheetVeryHidden(Sheet_Step3_|fffd||fffd||fffd||fffd|)
End Sub
Sub Btn_Goto_HelpSheet_Step3()
Call FNC_Goto_HelpSheet_SetRange("Step3")
End Sub
Sub Btn_Goto_HelpSheet_Step3Details()
Call FNC_Goto_HelpSheet_SetRange("Step3_|fffd||fffd||fffd||fffd|")
End Sub
Private Function FNC_JumpReportPage()
Dim MonthCountUp            As Long
Call FNC_ActionEventMode(False)
MonthCountUp = Sheet_Step3.Range(Step3_MonthCoutUpRange).Value
If Sheet_Step3_|fffd||fffd||fffd||fffd|.Visible <> xlSheetVisible Then
Sheet_Step3_|fffd||fffd||fffd||fffd|.Visible = xlSheetVisible
End If
Sheet_Step3_|fffd||fffd||fffd||fffd|.Activate
Sheet_Step3_|fffd||fffd||fffd||fffd|.Cells(E_Step3_Report.Row_Start + MonthCountUp, E_Step3_Report.Col_|fffd|N|fffd||fffd|).Activate
ActiveWindow.ScrollRow = E_Step3_Report.Row_Start + MonthCountUp
Call FNC_ActionEventMode(True)
End Function
Sub Btn_PrintPreview()
ActiveSheet.PrintPreview
End Sub
Attribute VB_Name = "M05_Help"
Option Explicit
Sub Btn_Goto_HelpSheet()
Sheet_Help.Range("A2").Value = ActiveSheet.Name
Sheet_Help.Activate
End Sub
Public Function FNC_Goto_HelpSheet_SetRange(FieldName As String)
Dim TargetRow           As Long
Call FNC_ActionEventMode(False)
TargetRow = FNC_GetFieldRow(Sheet_Help, E_Help.Col_Field, FieldName)
If TargetRow = -1 Then
TargetRow = 9
End If
Call Btn_Goto_HelpSheet
ActiveWindow.ScrollRow = TargetRow
Call FNC_ActionEventMode(True)
End Function
Sub Btn_ReturnTo_StepSheet()
Call FNC_ActionEventMode(False)
ActiveWindow.ScrollRow = E_Help.Row_Start
On Error Resume Next
ActiveWorkbook.Worksheets(Sheet_Help.Range("A2").Value).Select
On Error GoTo 0
Sheet_Help.Range("A2").Value = Sheet_Menu.Name
Call FNC_ActionEventMode(True)
End Sub
Attribute VB_Name = "M90_Common"
Option Explicit
Public Function FNC_UnprotectSheet(TargetSheet As Worksheet)
TargetSheet.Unprotect (SheetProtectPass)
End Function
Public Function FNC_ProtectSheet(TargetSheet As Worksheet)
Call TargetSheet.Protect(SheetProtectPass)
End Function
Public Function FNC_ActionEventMode(EventMode As Boolean)
Application.EnableEvents = EventMode
Application.DisplayAlerts = EventMode
Application.ScreenUpdating = EventMode
End Function
Public Function FNC_SaveOrReturnEvent(Optional BeforSaveMode As Boolean = False) As Boolean
Dim RetMsg      As String
FNC_SaveOrReturnEvent = True
Call FNC_ActionEventMode(False)
RetMsg = MsgBox("|fffd||6d1||fffd||fffd||fffd||fffd||103||fffd||fffd|j|fffd||fffd||fffd|[|fffd||256||7c2||fffd||702||fffd||fffd||fffd||fffd|H", vbOKCancel + vbInformation, Msg_Title)
If RetMsg = vbOK Then
Call FNC_SheetVisibleDefault(True)
If BeforSaveMode = False Then
ThisWorkbook.Saved = True
ThisWorkbook.Save
End If
Else
FNC_SaveOrReturnEvent = False
End If
Call FNC_ActionEventMode(True)
End Function
Public Function FNC_SheetVeryHidden(TargetSheet As Worksheet)
TargetSheet.Visible = xlSheetVeryHidden
End Function
Public Function FNC_SheetVisible(TargetSheet As Worksheet)
TargetSheet.Visible = xlSheetVisible
End Function
Sub InputDay()
Dim i As Long
Dim Count As Long
Count = 1
For i = E_Step3_Report.Row_Start To E_Step3_Report.Row_Start + 120
Sheet_Step3_|fffd||fffd||fffd||fffd|.Cells(i, E_Step3_Report.Col_|fffd|N|fffd||fffd|).Value = _
"=DATE(YEAR(|fffd||fffd||fffd||303|e|fffd||fffd||fffd|v|fffd||fffd||fffd|[|fffd|g|fffd||30e|g|fffd||fffd||fffd||fffd|!$A$1),MONTH(|fffd||fffd||fffd||303|e|fffd||fffd||fffd|v|fffd||fffd||fffd|[|fffd|g|fffd||30e|g|fffd||fffd||fffd||fffd|!$A$1)+" & Count & ",1)"
Count = Count + 1
Next
End Sub
Public Function FNC_GetFieldRow(TargetSheet As Worksheet, FieldNameColumn As Long, FieldName As String) As Long
Dim ColNo                 As Long
ColNo = -1
With TargetSheet
On Error Resume Next
ColNo = .Columns(FieldNameColumn).Find(FieldName, , , xlWhole).Row
On Error GoTo 0
End With
FNC_GetFieldRow = ColNo
End Function
Public Function Transpose(Data_Array As Variant, Optional Base0 As Boolean = True) As Variant
Dim Transpose_Array()   As Variant
Dim From_1              As Long
Dim From_2              As Long
Dim To_1              As Long
Dim To_2              As Long
Dim i                   As Long
Dim j                   As Long
Dim Array_Row_Lb    As Long
Dim Array_Row_Ub    As Long
Dim Array_Col_Lb    As Long
Dim Array_Col_Ub    As Long
If Not (IsArray(Data_Array)) Then
Transpose = Data_Array
Exit Function
End If
If CountDim(Data_Array) <> 2 Then
Transpose = Data_Array
Exit Function
End If
Array_Row_Lb = LBound(Data_Array, 1)
Array_Row_Ub = UBound(Data_Array, 1)
Array_Col_Lb = LBound(Data_Array, 2)
Array_Col_Ub = UBound(Data_Array, 2)
If Base0 = True Then
From_1 = 0
From_2 = 0
To_1 = Array_Col_Ub - Array_Col_Lb
To_2 = Array_Row_Ub - Array_Row_Lb
Else
From_1 = Array_Col_Lb
From_2 = Array_Row_Lb
To_1 = Array_Col_Ub
To_2 = Array_Row_Ub
End If
ReDim Transpose_Array(From_1 To To_1, From_2 To To_2) As Variant
Array_Row_Lb = Array_Row_Lb - From_2
Array_Col_Lb = Array_Col_Lb - From_1
For i = From_1 To To_1
For j = From_2 To To_2
Transpose_Array(i, j) = Data_Array(Array_Row_Lb + j, Array_Col_Lb + i)
Next
Next
Transpose = Transpose_Array
End Function
Private Function CountDim(TargetArray As Variant) As Long
Dim i As Long
Dim n As Long
i = 1
Do While True
On Error GoTo ERR_Array_Check:
n = UBound(TargetArray, i)
On Error GoTo 0
i = i + 1
Loop
ERR_Array_Check:
CountDim = i - 1
End Function
Public Function FNC_SheetVisibleDefault(ActiveControl As Boolean)
Dim tSheet                      As Worksheet
Dim tName                       As String
Sheet_Help.Visible = xlSheetVisible
Sheet_Menu.Visible = xlSheetVisible
Sheet2.Visible = xlSheetVisible
If ActiveControl = True Then
Sheet_Menu.Activate
End If
For Each tSheet In ThisWorkbook.Worksheets
tName = tSheet.Name
If tName <> Sheet_Help.Name And tName <> Sheet_Menu.Name And tName <> Sheet2.Name Then
tSheet.Visible = xlSheetVeryHidden
End If
Next tSheet
Set tSheet = Nothing
End Function
Public Function FNC_BeforRelease()
Dim tSheet                  As Worksheet
Dim tName                   As String
Sheet_Help.Visible = xlSheetVisible
Sheet_Menu.Visible = xlSheetVisible
Sheet2.Visible = xlSheetVisible
Sheet_Menu.Activate
Sheet_Menu.Unprotect (SheetProtectPass)
Sheet_Menu.Shapes("Open_Box").Visible = msoTrue
For Each tSheet In ThisWorkbook.Worksheets
tName = tSheet.Name
If tSheet.ProtectContents = False Then
tSheet.Protect (SheetProtectPass)
End If
If tName <> Sheet_Help.Name And tName <> Sheet_Menu.Name And tName <> Sheet2.Name Then
tSheet.Visible = xlSheetVeryHidden
End If
Next tSheet
Set tSheet = Nothing
End Function

Attribute VB_Name = "M99_Dic"
Option Explicit
Public FSO                      As FileSystemObject
Public Const Msg_Title          As String = "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||202||fffd||fffd||fffd|v|fffd||fffd||fffd||fffd||fffd|j|fffd||fffd||fffd|O|fffd|V|fffd|[|fffd|g"
Public Const SheetProtectPass   As String = "sheet_BP"
Public Const MenuSelectRng      As String = "H10"
Public Const MenuBirthdayCell   As String = "K10"
Public Const MenuStartdayCell   As String = "P10"
Public Enum E_Help
Row_Start = 9
Col_Field = 6
End Enum
Public Const Step1_SelectRng     As String = "F6"
Public Const Step1_SortModeRng   As String = "A11"
Public Const Step1_ChoosesCol    As Long = 18
Public Enum E_Step1
E_Col_|fffd||d3dc||fffd||fffd| = 3
E_Col_|fffd|I|fffd||fffd||fffd||fffd||fffd||fffd|
E_col_|fffd|I|fffd||15a97||fffd|Wk
E_Col_No = 10
E_Col_|fffd||695|W|fffd||fffd||fffd||fffd| = 12
E_Col_|fffd||fffd||fffd||fffd| = 13
E_Col_|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| = 14
E_Col_|fffd|N|fffd||fffd| = 16
E_Col_|fffd|I|fffd||15a96||fffd| = 18
E_StartRow = 13
E_EndRow = 1011
End Enum
Public Const Step2_SelectRng     As String = "F6"
Public Enum E_Step2
Row_|fffd|m|fffd||fffd| = 14
Row_|fffd||fffd| = 18
Row_|fffd|L|fffd||fffd||fffd||fffd| = 22
Row_|fffd||fffd||fffd|Y = 26
Row_|fffd||fffd| = 30
Row_|fffd||fffd||fffd|N = 34
Row_|fffd|d|fffd||fffd| = 38
Col_|fffd|I|fffd||fffd|v|fffd|f = 3
Col_|fffd|I|fffd||fffd||fffd||95||fffd|
Col_|fffd|`|fffd|F|fffd|b|fffd|N|fffd|p
Col_|fffd||5340||fffd||fffd| = 8
Col_|fffd||fffd||fffd||fffd||fffd||fffd| = 10
Col_|fffd||fffd||fffd||34d||fffd||fffd||fffd| = 11
Row_Start = 14
Row_End = 41
End Enum
Public Const |fffd||5340||fffd||fffd|_|fffd|m|fffd||fffd|        As String = "G14"
Public Const |fffd||5340||fffd||fffd|_|fffd||fffd|          As String = "G18"
Public Const |fffd||5340||fffd||fffd|_|fffd|L|fffd||fffd||fffd||fffd|      As String = "G22"
Public Const |fffd||5340||fffd||fffd|_|fffd||fffd||fffd|Y        As String = "G26"
Public Const |fffd||5340||fffd||fffd|_|fffd||fffd|          As String = "G30"
Public Const |fffd||5340||fffd||fffd|_|fffd||fffd||fffd|N        As String = "G34"
Public Const |fffd||5340||fffd||fffd|_|fffd|d|fffd||fffd|        As String = "G38"
Public Const Step3_MonthCoutUpRange     As String = "A1"
Public Const Step3_DateRng              As String = "M9"
Public Const Step3_SelectRng            As String = "L26"
Public Const Step3_PicturePasteRng      As String = "M12"
Public Const Step3_Report_SelectRng     As String = "G6"
Public Const Step3_Report_FrontRng      As String = "I12"
Public Const ImagePicture               As String = "ImagePicture"
Public Enum E_Step3
Row_Start = 6
End Enum
Public Enum E_Step3_Report
Col_No = 8
Col_|fffd|N|fffd||fffd| = 9
Col_|fffd|s|fffd||fffd||fffd||695|W = 13
Col_|fffd|_|fffd||fffd| = 14
Row_Start = 12
End Enum
Public Function FNC_Step3_Report_EndRow() As Long
FNC_Step3_Report_EndRow = Sheet_Step3_|fffd||fffd||fffd||fffd|.Cells(Rows.Count, E_Step3_Report.Col_|fffd|N|fffd||fffd|).End(xlUp).Row
End Function
Attribute VB_Name = "Sheet1"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Option Explicit
Attribute VB_Name = "Sheet2"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Option Explicit
Attribute VB_Name = "Sheet_Help"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Option Explicit
Attribute VB_Name = "Sheet_Menu"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Option Explicit
Attribute VB_Name = "Sheet_Step1"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Option Explicit
Private Sub Worksheet_BeforeDoubleClick(ByVal Target As Range, _
Cancel As Boolean)
Dim ListData        As String
Cancel = True
If Target.Column = E_Col_|fffd||695|W|fffd||fffd||fffd||fffd| Or Target.Column = E_Col_|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| Then
Cancel = False
End If
If Target.Row >= E_Step1.E_StartRow And Target.Row <= E_Step1.E_EndRow Then
If Target.Column = E_Step1.E_Col_|fffd|I|fffd||15a96||fffd| Then
Cancel = True
Call FNC_Check_OverlapClear_Step1|fffd||fffd||fffd||fffd|(Target)
If Target.Value <> "" Then
Target.ClearContents
Else
Target.Value = 1
End If
ElseIf Target.Column = E_Step1.E_Col_|fffd||fffd||fffd||fffd| Then
Cancel = True
Call FNC_FormOpen_|fffd||fffd||fffd||fffd|
End If
End If
End Sub
Private Function FNC_FormOpen_|fffd||fffd||fffd||fffd|()
Dim F_Open      As F_Step1_|fffd||fffd||fffd||fffd|
Set F_Open = New F_Step1_|fffd||fffd||fffd||fffd|
If F_Open.List_|fffd||a5d7|.ListCount <> 0 Then
F_Open.Show
Else
MsgBox "|fffd||fffd||fffd||782||fffd||fffd||752||80b3||fffd||fffd||102||fffd||fffd||702||fffd||fffd||fffd|B", vbCritical, Msg_Title
End If
Set F_Open = Nothing
End Function

Attribute VB_Name = "Sheet_Step2"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Option Explicit
Private Sub Worksheet_BeforeDoubleClick(ByVal Target As Range, _
Cancel As Boolean)
Call FNC_ActionEventMode(False)
Cancel = True
If E_Step2.Row_Start <= Target.Row And E_Step2.Row_End >= Target.Row Then
If FNC_CheckTargetRow(Target) <> 0 Then
Else
If Target.Column = E_Step2.Col_|fffd||fffd||fffd||fffd||fffd||fffd| Then
If Target.Value <> "" Then
Target.ClearContents
Else
If Target.Offset(0, 1).Value <> "" Then
Target.Value = 1
Else
MsgBox "|fffd|s|fffd||fffd||fffd||695|W|fffd||fffd||fffd||752||80b3||fffd||fffd||102||fffd||fffd||702||fffd||fffd||fffd|B", vbCritical, Msg_Title
End If
End If
ElseIf Target.Column = E_Step2.Col_|fffd||fffd||fffd||34d||fffd||fffd||fffd| Then
Cancel = False
End If
End If
End If
Call FNC_ActionEventMode(True)
End Sub

Attribute VB_Name = "Sheet_Step3"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True

Attribute VB_Name = "Sheet_Step3_|fffd||fffd||fffd||fffd|"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Option Explicit
Private Sub Worksheet_BeforeDoubleClick(ByVal Target As Range, _
Cancel As Boolean)
Dim ListData        As String
Cancel = False
If Target.Column = E_Step3_Report.Col_|fffd|s|fffd||fffd||fffd||695|W Then
If Target.Row >= E_Step3_Report.Row_Start And Target.Row <= FNC_Step3_Report_EndRow Then
Cancel = True
Call FNC_FormOpen_|fffd|s|fffd||fffd||fffd||695|W
End If
End If
If Target.Column = E_Step3_Report.Col_|fffd|_|fffd||fffd| Then
Cancel = True
End If
End Sub
Private Function FNC_FormOpen_|fffd|s|fffd||fffd||fffd||695|W()
Dim F_Open      As F_Step3_|fffd|s|fffd||fffd||fffd||695|W
Dim RetListData As String
Set F_Open = New F_Step3_|fffd|s|fffd||fffd||fffd||695|W
If F_Open.List_|fffd||a5d7|.ListCount <> 0 Then
F_Open.Show
Else
MsgBox "|fffd||fffd||fffd|s|fffd||fffd||fffd||30d|s|fffd||fffd||fffd||695|W|fffd||fffd||fffd||fffd||fffd||fffd||702||fffd||fffd||fffd|B", vbCritical, Msg_Title
End If
Set F_Open = Nothing
End Function

Attribute VB_Name = "ThisWorkbook"
Attribute VB_Base = "0{00020819-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Option Explicit
Private ChkCloseLoop        As Boolean
Private Sub Workbook_BeforeClose(Cancel As Boolean)
Dim RetMsg      As String
If ChkCloseLoop = False Then
Call FNC_ActionEventMode(False)
RetMsg = MsgBox("|fffd||6d1||fffd||fffd||fffd||fffd||10f|I|fffd||fffd||fffd||fffd||fffd||702||fffd||fffd||fffd||fffd|H", vbOKCancel + vbInformation, Msg_Title)
ThisWorkbook.Activate
Sheet_Menu.Visible = xlSheetVisible
Sheet_Menu.Select
If RetMsg = vbOK Then
Sheet_Menu.Shapes("Open_Box").Visible = msoTrue
ThisWorkbook.Saved = True
Me.Save
End If
Application.EnableEvents = True
ChkCloseLoop = True
ThisWorkbook.Close SaveChanges:=False
Else
ChkCloseLoop = False
End If
End Sub
Private Sub Workbook_BeforeSave(ByVal SaveAsUI As Boolean, Cancel As Boolean)
If FNC_SaveOrReturnEvent(True) = False Then
Cancel = True
End If
End Sub


INQUEST-PP=macro
