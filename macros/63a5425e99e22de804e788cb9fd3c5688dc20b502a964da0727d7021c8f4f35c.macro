Attribute VB_Name = "DieseArbeitsmappe"
Attribute VB_Base = "0{00020819-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Modul1"
Function onlyDigits(s As String) As String
    ' Variables needed (remember to use "option explicit").   '
    Dim retval As String    ' This is the return string.      '
    Dim i As Integer        ' Counter for character position. '
    Dim startNum As Integer

    ' Initialise return string to empty                       '
    retval = ""
    startNum = 1
    
    If Mid(s, 1, 1) >= "0" And Mid(s, 1, 1) <= "9" Then
        'DO NOTHING'
    Else
        retval = retval + Mid(s, 1, 1)
        startNum = 2
    End If
    
    For i = startNum To 6
        If Mid(s, i, 1) >= "0" And Mid(s, i, 1) <= "9" Then
            retval = retval + Mid(s, i, 1)
        End If
    Next

    ' Then return the return string.                          '
    onlyDigits = retval
End Function

Sub ImportSheet()
    
    ActiveSheet.Protect Password:="", UserInterfaceOnly:=True
        
    Dim mySystem As String
    Dim planningSheet As String
    Dim lngCount As Long
    Dim strExportDatei As String
    strExportDatei = ""
    
    
    If Not Application.OperatingSystem Like "*Mac*" Then
        
      
        mySystem = "\"
            
        Set dlgOpen = Application.FileDialog(msoFileDialogFilePicker)
        With dlgOpen
            .ButtonName = "Excel Datei einbinden"
            .InitialFileName = ActiveWorkbook.Path & mySystem
            .Title = "Bitte w_hlen Sie die Startdatei!"
            .Filters.Clear
            .Filters.Add "Excel", "*.xls", 1
            .AllowMultiSelect = False
            .Show
            On Error Resume Next
            If Err <> 0 Then
                On Error Resume Next
                Exit Sub
            Else
               strExportDatei = .SelectedItems(1)
            End If
            
        End With
        
    Else
        mySystem = "/"
        
        strExportDatei = Range("B8").Value
    End If
    
    If strExportDatei <> "" Then
    
        planningSheet = Right(ThisWorkbook.Name, Len(ThisWorkbook.Name) - InStrRev(ThisWorkbook.Name, mySystem))
        
        Range("A10:P80").ClearContents
        Range("C100:F170").ClearContents
        
        Range("C10:D10").Select
        ActiveCell.FormulaR1C1 = "=IF(R[90]C[1]="""","""",R[90]C[1])"
        Range("C10:D10").Select
        Selection.AutoFill Destination:=Range("C10:D80"), Type:=xlFillValues
        Range("C10:D80").Select
        
        Workbooks.Open (strExportDatei)
        
        Dim countRaws As Integer
        Dim exportDatei As String
        Dim i As Integer
        Dim jobNum As String
        
        exportDatei = Right(strExportDatei, Len(strExportDatei) - InStrRev(strExportDatei, mySystem))
        countRaws = WorksheetFunction.CountA(Range("B5:B99")) + 4
        myDest = countRaws + 99
        
        Workbooks(exportDatei).ActiveSheet.Range("B5:B" & countRaws).Copy
        Workbooks(planningSheet).ActiveSheet.Activate
        Workbooks(planningSheet).ActiveSheet.Range("D100").Select
        Workbooks(planningSheet).ActiveSheet.PasteSpecial xlValue
        
        For i = 10 To countRaws + 10
            With ActiveSheet
                .Hyperlinks.Add Anchor:=.Range("C" & i), _
                Address:="https://jira.publicis.de/browse/" & Range("C" & i).Value, _
                TextToDisplay:=Range("C" & i).Value
            End With
        Next i
        
        Workbooks(exportDatei).ActiveSheet.Activate
        Workbooks(exportDatei).ActiveSheet.Range("C5:C" & countRaws).Copy
        Workbooks(planningSheet).ActiveSheet.Activate
        Workbooks(planningSheet).ActiveSheet.Range("E100").Select
        Workbooks(planningSheet).ActiveSheet.PasteSpecial xlValue
        
        Workbooks(planningSheet).ActiveSheet.Range("F100:F" & myDest).Value = "technical meeting"
        
        Workbooks(exportDatei).ActiveSheet.Activate
        Workbooks(exportDatei).ActiveSheet.Range("BF5:BF" & countRaws).Copy
        Workbooks(planningSheet).ActiveSheet.Activate
        Workbooks(planningSheet).ActiveSheet.Range("C100").Select
        Workbooks(planningSheet).ActiveSheet.PasteSpecial xlValue
        
        For i = 100 To countRaws + 5
            jobNum = Workbooks(planningSheet).ActiveSheet.Range("C" & i).Value
            Workbooks(planningSheet).ActiveSheet.Range("C" & i) = onlyDigits(jobNum)
        Next i
        
        Workbooks(exportDatei).ActiveSheet.Activate
        Workbooks(exportDatei).ActiveSheet.Range("BG5:BG" & countRaws).Copy
        Workbooks(planningSheet).ActiveSheet.Activate
        Workbooks(planningSheet).ActiveSheet.Range("A10").Select
        Workbooks(planningSheet).ActiveSheet.PasteSpecial xlValue
        
        Workbooks(exportDatei).Close
        Workbooks(planningSheet).ActiveSheet.Activate
        
        Range("A82").Select
        ActiveCell.FormulaR1C1 = "=MROUND(ROUNDUP(R[-72]C*R81C1,1)/4,0.25)"
        Range("A82").Select
        Selection.AutoFill Destination:=Range("A82:A152"), Type:=xlFillDefault
        Range("A82:A152").Select
        
        Dim myTime As Single
        Dim jobTime As Single
        Dim countTeamMembers As Integer
        Dim countStories As Integer
        
        countTeamMembers = WorksheetFunction.CountA(Range("E2:P2"))
        countStories = WorksheetFunction.CountA(Range("D100:D170"))
         
        For i = 1 To countTeamMembers
            Range(Chr(Asc("D") + i) & 8).Value = Range(Chr(Asc("D") + i) & 7).Value
            myTime = Range(Chr(Asc("D") + i) & 8).Value
            
            For j = 1 To countStories
                jobTime = Range("A" & j + 81).Value
                
                If myTime > 0 Then
                    If myTime <= jobTime Then
                        Range(Chr(Asc("D") + i) & 9 + j).Value = myTime
                        Range("A" & j + 81).Value = jobTime - myTime
                        Range(Chr(Asc("D") + i) & 8).Value = 0
                        myTime = 0
                    ElseIf jobTime > 0 Then
                        Range(Chr(Asc("D") + i) & 9 + j).Value = jobTime
                        myTime = myTime - jobTime
                        Range("A" & j + 81).Value = 0
                    End If
                End If
            Next j
        Next i
        
        For i = 82 To 152
            Range("A" & i).Value = Range("B" & i).Value
        Next i
         
        Range("B12").Value = "Select Name"
        Range("B12").Select
        
        Set dlgOpen = Nothing
        Application.CutCopyMode = False
        
    End If
    
End Sub


Attribute VB_Name = "Modul2"
Sub getTime()
    
    ActiveSheet.Protect Password:="", UserInterfaceOnly:=True
    
    Dim myName As String
    Dim myNumber As Integer
    myName = Range("B12").Value
    myNumber = 0
    
    For i = 1 To 12
        If myName = Range(Chr(Asc("D") + i) & 2).Value Then
            myNumber = i
        End If
    Next i
    
    If myNumber > 0 Then
        
        Dim itemList As String
        Dim itemCount As Integer
        Dim copyRow As Integer
        Dim itemHours As String
        Dim itemJobNum As String
        itemList = "A1"
        copyRow = 0
        
        For i = 10 To 80
            If Range(Chr(Asc("D") + myNumber) & i) <> "" Then
                itemCount = i + 90
                
                itemJobNum = "[ Jobnummer: " & Range("C" & itemCount).Value & " // "
                itemHours = Range(Chr(Asc("D") + myNumber) & i).Value & " Std ]: "
                Range("H" & 100 + copyRow).Value = itemJobNum & itemHours
                
                Range("D" & itemCount & ":F" & itemCount).Copy
                Range("I" & 100 + copyRow).Select
                ActiveSheet.PasteSpecial xlValue
                
                copyRow = copyRow + 1
            End If
        Next i

        Range("H100:L" & copyRow + 99).Copy
    End If
    
    Range("A1").Select
End Sub
Attribute VB_Name = "Modul3"
Sub refresh()
    
    ActiveSheet.Protect Password:="", UserInterfaceOnly:=True
    
    Range("D7").Select
    ActiveCell.FormulaR1C1 = _
        "=IF(OR(R6C="""",RC2=""""),"""",IF(OR(WEEKDAY(R6C)=1,WEEKDAY(R6C)=7,COUNTIF(Werte!R6C4:R17C4,R6C)>0),"""",IF(Werte!R[-1]C9="""",8,0.08*Werte!R[-1]C9)))"
    Range("D7").Select
    Selection.AutoFill Destination:=Range("D7:D18"), Type:=xlFillValues
    Range("D7:D18").Select
    Selection.AutoFill Destination:=Range("D7:X18"), Type:=xlFillValues
    Range("D7").Select
End Sub
Attribute VB_Name = "Modul4"
Sub getvelocity()

    ActiveSheet.Protect Password:="", UserInterfaceOnly:=True
    
    If Range("N7") <> "" And Range("N7") > 0 Then
        Range("N14").Value = Range("N13")
        Range("N13").Value = Range("N12")
        Range("N12").Value = Range("N11")
        Range("N11").Value = Range("N10")
        Range("N10").Value = Range("N9")
        Range("N9").Value = Range("N7")
    End If
    
End Sub
Attribute VB_Name = "Tabelle1"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Tabelle2"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True


INQUEST-PP=macro
